
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-dump_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004022f8 <.init>:
  4022f8:	stp	x29, x30, [sp, #-16]!
  4022fc:	mov	x29, sp
  402300:	bl	402a6c <feof@plt+0x9c>
  402304:	ldp	x29, x30, [sp], #16
  402308:	ret

Disassembly of section .plt:

0000000000402310 <_Unwind_Backtrace@plt-0x20>:
  402310:	stp	x16, x30, [sp, #-16]!
  402314:	adrp	x16, 475000 <_obstack_memory_used@@Base+0x24a68>
  402318:	ldr	x17, [x16, #4088]
  40231c:	add	x16, x16, #0xff8
  402320:	br	x17
  402324:	nop
  402328:	nop
  40232c:	nop

0000000000402330 <_Unwind_Backtrace@plt>:
  402330:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402334:	ldr	x17, [x16]
  402338:	add	x16, x16, #0x0
  40233c:	br	x17

0000000000402340 <_Znam@plt>:
  402340:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402344:	ldr	x17, [x16, #8]
  402348:	add	x16, x16, #0x8
  40234c:	br	x17

0000000000402350 <__fxstat@plt>:
  402350:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402354:	ldr	x17, [x16, #16]
  402358:	add	x16, x16, #0x10
  40235c:	br	x17

0000000000402360 <_Unwind_GetIPInfo@plt>:
  402360:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402364:	ldr	x17, [x16, #24]
  402368:	add	x16, x16, #0x18
  40236c:	br	x17

0000000000402370 <fputs@plt>:
  402370:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402374:	ldr	x17, [x16, #32]
  402378:	add	x16, x16, #0x20
  40237c:	br	x17

0000000000402380 <iconv_close@plt>:
  402380:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402384:	ldr	x17, [x16, #40]
  402388:	add	x16, x16, #0x28
  40238c:	br	x17

0000000000402390 <memcpy@plt>:
  402390:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402394:	ldr	x17, [x16, #48]
  402398:	add	x16, x16, #0x30
  40239c:	br	x17

00000000004023a0 <fread@plt>:
  4023a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4023a4:	ldr	x17, [x16, #56]
  4023a8:	add	x16, x16, #0x38
  4023ac:	br	x17

00000000004023b0 <strstr@plt>:
  4023b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4023b4:	ldr	x17, [x16, #64]
  4023b8:	add	x16, x16, #0x40
  4023bc:	br	x17

00000000004023c0 <textdomain@plt>:
  4023c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4023c4:	ldr	x17, [x16, #72]
  4023c8:	add	x16, x16, #0x48
  4023cc:	br	x17

00000000004023d0 <readlink@plt>:
  4023d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4023d4:	ldr	x17, [x16, #80]
  4023d8:	add	x16, x16, #0x50
  4023dc:	br	x17

00000000004023e0 <puts@plt>:
  4023e0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4023e4:	ldr	x17, [x16, #88]
  4023e8:	add	x16, x16, #0x58
  4023ec:	br	x17

00000000004023f0 <bindtextdomain@plt>:
  4023f0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4023f4:	ldr	x17, [x16, #96]
  4023f8:	add	x16, x16, #0x60
  4023fc:	br	x17

0000000000402400 <calloc@plt>:
  402400:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402404:	ldr	x17, [x16, #104]
  402408:	add	x16, x16, #0x68
  40240c:	br	x17

0000000000402410 <ungetc@plt>:
  402410:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402414:	ldr	x17, [x16, #112]
  402418:	add	x16, x16, #0x70
  40241c:	br	x17

0000000000402420 <strlen@plt>:
  402420:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402424:	ldr	x17, [x16, #120]
  402428:	add	x16, x16, #0x78
  40242c:	br	x17

0000000000402430 <gmtime@plt>:
  402430:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402434:	ldr	x17, [x16, #128]
  402438:	add	x16, x16, #0x80
  40243c:	br	x17

0000000000402440 <fprintf@plt>:
  402440:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402444:	ldr	x17, [x16, #136]
  402448:	add	x16, x16, #0x88
  40244c:	br	x17

0000000000402450 <ftell@plt>:
  402450:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402454:	ldr	x17, [x16, #144]
  402458:	add	x16, x16, #0x90
  40245c:	br	x17

0000000000402460 <ngettext@plt>:
  402460:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402464:	ldr	x17, [x16, #152]
  402468:	add	x16, x16, #0x98
  40246c:	br	x17

0000000000402470 <open@plt>:
  402470:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402474:	ldr	x17, [x16, #160]
  402478:	add	x16, x16, #0xa0
  40247c:	br	x17

0000000000402480 <__overflow@plt>:
  402480:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402484:	ldr	x17, [x16, #168]
  402488:	add	x16, x16, #0xa8
  40248c:	br	x17

0000000000402490 <fclose@plt>:
  402490:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402494:	ldr	x17, [x16, #176]
  402498:	add	x16, x16, #0xb0
  40249c:	br	x17

00000000004024a0 <strtol@plt>:
  4024a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4024a4:	ldr	x17, [x16, #184]
  4024a8:	add	x16, x16, #0xb8
  4024ac:	br	x17

00000000004024b0 <iconv_open@plt>:
  4024b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4024b4:	ldr	x17, [x16, #192]
  4024b8:	add	x16, x16, #0xc0
  4024bc:	br	x17

00000000004024c0 <free@plt>:
  4024c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4024c4:	ldr	x17, [x16, #200]
  4024c8:	add	x16, x16, #0xc8
  4024cc:	br	x17

00000000004024d0 <fread_unlocked@plt>:
  4024d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4024d4:	ldr	x17, [x16, #208]
  4024d8:	add	x16, x16, #0xd0
  4024dc:	br	x17

00000000004024e0 <memset@plt>:
  4024e0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4024e4:	ldr	x17, [x16, #216]
  4024e8:	add	x16, x16, #0xd8
  4024ec:	br	x17

00000000004024f0 <fputs_unlocked@plt>:
  4024f0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4024f4:	ldr	x17, [x16, #224]
  4024f8:	add	x16, x16, #0xe0
  4024fc:	br	x17

0000000000402500 <strchr@plt>:
  402500:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402504:	ldr	x17, [x16, #232]
  402508:	add	x16, x16, #0xe8
  40250c:	br	x17

0000000000402510 <strdup@plt>:
  402510:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402514:	ldr	x17, [x16, #240]
  402518:	add	x16, x16, #0xf0
  40251c:	br	x17

0000000000402520 <isatty@plt>:
  402520:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402524:	ldr	x17, [x16, #248]
  402528:	add	x16, x16, #0xf8
  40252c:	br	x17

0000000000402530 <qsort@plt>:
  402530:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402534:	ldr	x17, [x16, #256]
  402538:	add	x16, x16, #0x100
  40253c:	br	x17

0000000000402540 <realloc@plt>:
  402540:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402544:	ldr	x17, [x16, #264]
  402548:	add	x16, x16, #0x108
  40254c:	br	x17

0000000000402550 <__cxa_guard_release@plt>:
  402550:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402554:	ldr	x17, [x16, #272]
  402558:	add	x16, x16, #0x110
  40255c:	br	x17

0000000000402560 <freopen@plt>:
  402560:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402564:	ldr	x17, [x16, #280]
  402568:	add	x16, x16, #0x118
  40256c:	br	x17

0000000000402570 <read@plt>:
  402570:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402574:	ldr	x17, [x16, #288]
  402578:	add	x16, x16, #0x120
  40257c:	br	x17

0000000000402580 <strerror@plt>:
  402580:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402584:	ldr	x17, [x16, #296]
  402588:	add	x16, x16, #0x128
  40258c:	br	x17

0000000000402590 <strcpy@plt>:
  402590:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402594:	ldr	x17, [x16, #304]
  402598:	add	x16, x16, #0x130
  40259c:	br	x17

00000000004025a0 <closedir@plt>:
  4025a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4025a4:	ldr	x17, [x16, #312]
  4025a8:	add	x16, x16, #0x138
  4025ac:	br	x17

00000000004025b0 <sprintf@plt>:
  4025b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4025b4:	ldr	x17, [x16, #320]
  4025b8:	add	x16, x16, #0x140
  4025bc:	br	x17

00000000004025c0 <getopt_long@plt>:
  4025c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4025c4:	ldr	x17, [x16, #328]
  4025c8:	add	x16, x16, #0x148
  4025cc:	br	x17

00000000004025d0 <ioctl@plt>:
  4025d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4025d4:	ldr	x17, [x16, #336]
  4025d8:	add	x16, x16, #0x150
  4025dc:	br	x17

00000000004025e0 <strcspn@plt>:
  4025e0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4025e4:	ldr	x17, [x16, #344]
  4025e8:	add	x16, x16, #0x158
  4025ec:	br	x17

00000000004025f0 <putchar@plt>:
  4025f0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4025f4:	ldr	x17, [x16, #352]
  4025f8:	add	x16, x16, #0x160
  4025fc:	br	x17

0000000000402600 <localtime@plt>:
  402600:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402604:	ldr	x17, [x16, #360]
  402608:	add	x16, x16, #0x168
  40260c:	br	x17

0000000000402610 <__libc_start_main@plt>:
  402610:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402614:	ldr	x17, [x16, #368]
  402618:	add	x16, x16, #0x170
  40261c:	br	x17

0000000000402620 <dgettext@plt>:
  402620:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402624:	ldr	x17, [x16, #376]
  402628:	add	x16, x16, #0x178
  40262c:	br	x17

0000000000402630 <dl_iterate_phdr@plt>:
  402630:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402634:	ldr	x17, [x16, #384]
  402638:	add	x16, x16, #0x180
  40263c:	br	x17

0000000000402640 <gettext@plt>:
  402640:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402644:	ldr	x17, [x16, #392]
  402648:	add	x16, x16, #0x188
  40264c:	br	x17

0000000000402650 <memchr@plt>:
  402650:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402654:	ldr	x17, [x16, #400]
  402658:	add	x16, x16, #0x190
  40265c:	br	x17

0000000000402660 <getpid@plt>:
  402660:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402664:	ldr	x17, [x16, #408]
  402668:	add	x16, x16, #0x198
  40266c:	br	x17

0000000000402670 <_ZdlPv@plt>:
  402670:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402674:	ldr	x17, [x16, #416]
  402678:	add	x16, x16, #0x1a0
  40267c:	br	x17

0000000000402680 <setlocale@plt>:
  402680:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402684:	ldr	x17, [x16, #424]
  402688:	add	x16, x16, #0x1a8
  40268c:	br	x17

0000000000402690 <mmap@plt>:
  402690:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402694:	ldr	x17, [x16, #432]
  402698:	add	x16, x16, #0x1b0
  40269c:	br	x17

00000000004026a0 <_Znwm@plt>:
  4026a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4026a4:	ldr	x17, [x16, #440]
  4026a8:	add	x16, x16, #0x1b8
  4026ac:	br	x17

00000000004026b0 <strncmp@plt>:
  4026b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4026b4:	ldr	x17, [x16, #448]
  4026b8:	add	x16, x16, #0x1c0
  4026bc:	br	x17

00000000004026c0 <readdir@plt>:
  4026c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4026c4:	ldr	x17, [x16, #456]
  4026c8:	add	x16, x16, #0x1c8
  4026cc:	br	x17

00000000004026d0 <fputc@plt>:
  4026d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4026d4:	ldr	x17, [x16, #464]
  4026d8:	add	x16, x16, #0x1d0
  4026dc:	br	x17

00000000004026e0 <munmap@plt>:
  4026e0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4026e4:	ldr	x17, [x16, #472]
  4026e8:	add	x16, x16, #0x1d8
  4026ec:	br	x17

00000000004026f0 <iconv@plt>:
  4026f0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4026f4:	ldr	x17, [x16, #480]
  4026f8:	add	x16, x16, #0x1e0
  4026fc:	br	x17

0000000000402700 <fileno_unlocked@plt>:
  402700:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402704:	ldr	x17, [x16, #488]
  402708:	add	x16, x16, #0x1e8
  40270c:	br	x17

0000000000402710 <opendir@plt>:
  402710:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402714:	ldr	x17, [x16, #496]
  402718:	add	x16, x16, #0x1f0
  40271c:	br	x17

0000000000402720 <mbstowcs@plt>:
  402720:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402724:	ldr	x17, [x16, #504]
  402728:	add	x16, x16, #0x1f8
  40272c:	br	x17

0000000000402730 <__cxa_atexit@plt>:
  402730:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402734:	ldr	x17, [x16, #512]
  402738:	add	x16, x16, #0x200
  40273c:	br	x17

0000000000402740 <snprintf@plt>:
  402740:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402744:	ldr	x17, [x16, #520]
  402748:	add	x16, x16, #0x208
  40274c:	br	x17

0000000000402750 <asctime@plt>:
  402750:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402754:	ldr	x17, [x16, #528]
  402758:	add	x16, x16, #0x210
  40275c:	br	x17

0000000000402760 <fflush@plt>:
  402760:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402764:	ldr	x17, [x16, #536]
  402768:	add	x16, x16, #0x218
  40276c:	br	x17

0000000000402770 <sbrk@plt>:
  402770:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402774:	ldr	x17, [x16, #544]
  402778:	add	x16, x16, #0x220
  40277c:	br	x17

0000000000402780 <memmove@plt>:
  402780:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402784:	ldr	x17, [x16, #552]
  402788:	add	x16, x16, #0x228
  40278c:	br	x17

0000000000402790 <time@plt>:
  402790:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402794:	ldr	x17, [x16, #560]
  402798:	add	x16, x16, #0x230
  40279c:	br	x17

00000000004027a0 <strrchr@plt>:
  4027a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4027a4:	ldr	x17, [x16, #568]
  4027a8:	add	x16, x16, #0x238
  4027ac:	br	x17

00000000004027b0 <_ZdaPv@plt>:
  4027b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4027b4:	ldr	x17, [x16, #576]
  4027b8:	add	x16, x16, #0x240
  4027bc:	br	x17

00000000004027c0 <__errno_location@plt>:
  4027c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4027c4:	ldr	x17, [x16, #584]
  4027c8:	add	x16, x16, #0x248
  4027cc:	br	x17

00000000004027d0 <__uflow@plt>:
  4027d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4027d4:	ldr	x17, [x16, #592]
  4027d8:	add	x16, x16, #0x250
  4027dc:	br	x17

00000000004027e0 <strtoul@plt>:
  4027e0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4027e4:	ldr	x17, [x16, #600]
  4027e8:	add	x16, x16, #0x258
  4027ec:	br	x17

00000000004027f0 <__fsetlocking@plt>:
  4027f0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4027f4:	ldr	x17, [x16, #608]
  4027f8:	add	x16, x16, #0x260
  4027fc:	br	x17

0000000000402800 <fopen@plt>:
  402800:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402804:	ldr	x17, [x16, #616]
  402808:	add	x16, x16, #0x268
  40280c:	br	x17

0000000000402810 <close@plt>:
  402810:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402814:	ldr	x17, [x16, #624]
  402818:	add	x16, x16, #0x270
  40281c:	br	x17

0000000000402820 <strcmp@plt>:
  402820:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402824:	ldr	x17, [x16, #632]
  402828:	add	x16, x16, #0x278
  40282c:	br	x17

0000000000402830 <__xstat@plt>:
  402830:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402834:	ldr	x17, [x16, #640]
  402838:	add	x16, x16, #0x280
  40283c:	br	x17

0000000000402840 <malloc@plt>:
  402840:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402844:	ldr	x17, [x16, #648]
  402848:	add	x16, x16, #0x288
  40284c:	br	x17

0000000000402850 <__lxstat@plt>:
  402850:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402854:	ldr	x17, [x16, #656]
  402858:	add	x16, x16, #0x290
  40285c:	br	x17

0000000000402860 <abort@plt>:
  402860:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402864:	ldr	x17, [x16, #664]
  402868:	add	x16, x16, #0x298
  40286c:	br	x17

0000000000402870 <getenv@plt>:
  402870:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402874:	ldr	x17, [x16, #672]
  402878:	add	x16, x16, #0x2a0
  40287c:	br	x17

0000000000402880 <strcasecmp@plt>:
  402880:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402884:	ldr	x17, [x16, #680]
  402888:	add	x16, x16, #0x2a8
  40288c:	br	x17

0000000000402890 <exit@plt>:
  402890:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402894:	ldr	x17, [x16, #688]
  402898:	add	x16, x16, #0x2b0
  40289c:	br	x17

00000000004028a0 <fwrite_unlocked@plt>:
  4028a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4028a4:	ldr	x17, [x16, #696]
  4028a8:	add	x16, x16, #0x2b8
  4028ac:	br	x17

00000000004028b0 <wcswidth@plt>:
  4028b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4028b4:	ldr	x17, [x16, #704]
  4028b8:	add	x16, x16, #0x2c0
  4028bc:	br	x17

00000000004028c0 <fwrite@plt>:
  4028c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4028c4:	ldr	x17, [x16, #712]
  4028c8:	add	x16, x16, #0x2c8
  4028cc:	br	x17

00000000004028d0 <nl_langinfo@plt>:
  4028d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4028d4:	ldr	x17, [x16, #720]
  4028d8:	add	x16, x16, #0x2d0
  4028dc:	br	x17

00000000004028e0 <getpagesize@plt>:
  4028e0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4028e4:	ldr	x17, [x16, #728]
  4028e8:	add	x16, x16, #0x2d8
  4028ec:	br	x17

00000000004028f0 <__cxa_guard_acquire@plt>:
  4028f0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4028f4:	ldr	x17, [x16, #736]
  4028f8:	add	x16, x16, #0x2e0
  4028fc:	br	x17

0000000000402900 <vsprintf@plt>:
  402900:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402904:	ldr	x17, [x16, #744]
  402908:	add	x16, x16, #0x2e8
  40290c:	br	x17

0000000000402910 <ferror@plt>:
  402910:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402914:	ldr	x17, [x16, #752]
  402918:	add	x16, x16, #0x2f0
  40291c:	br	x17

0000000000402920 <fdopen@plt>:
  402920:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402924:	ldr	x17, [x16, #760]
  402928:	add	x16, x16, #0x2f8
  40292c:	br	x17

0000000000402930 <strnlen@plt>:
  402930:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402934:	ldr	x17, [x16, #768]
  402938:	add	x16, x16, #0x300
  40293c:	br	x17

0000000000402940 <realpath@plt>:
  402940:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402944:	ldr	x17, [x16, #776]
  402948:	add	x16, x16, #0x308
  40294c:	br	x17

0000000000402950 <fcntl@plt>:
  402950:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402954:	ldr	x17, [x16, #784]
  402958:	add	x16, x16, #0x310
  40295c:	br	x17

0000000000402960 <__gmon_start__@plt>:
  402960:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402964:	ldr	x17, [x16, #792]
  402968:	add	x16, x16, #0x318
  40296c:	br	x17

0000000000402970 <setbuf@plt>:
  402970:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402974:	ldr	x17, [x16, #800]
  402978:	add	x16, x16, #0x320
  40297c:	br	x17

0000000000402980 <bcmp@plt>:
  402980:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402984:	ldr	x17, [x16, #808]
  402988:	add	x16, x16, #0x328
  40298c:	br	x17

0000000000402990 <strcat@plt>:
  402990:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  402994:	ldr	x17, [x16, #816]
  402998:	add	x16, x16, #0x330
  40299c:	br	x17

00000000004029a0 <fseek@plt>:
  4029a0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4029a4:	ldr	x17, [x16, #824]
  4029a8:	add	x16, x16, #0x338
  4029ac:	br	x17

00000000004029b0 <printf@plt>:
  4029b0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4029b4:	ldr	x17, [x16, #832]
  4029b8:	add	x16, x16, #0x340
  4029bc:	br	x17

00000000004029c0 <vfprintf@plt>:
  4029c0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4029c4:	ldr	x17, [x16, #840]
  4029c8:	add	x16, x16, #0x348
  4029cc:	br	x17

00000000004029d0 <feof@plt>:
  4029d0:	adrp	x16, 476000 <_Unwind_Backtrace@GCC_3.3>
  4029d4:	ldr	x17, [x16, #848]
  4029d8:	add	x16, x16, #0x350
  4029dc:	br	x17

Disassembly of section .text:

00000000004029e0 <_obstack_begin@@Base-0x4d840>:
  4029e0:	stp	x29, x30, [sp, #-32]!
  4029e4:	str	x19, [sp, #16]
  4029e8:	mov	x29, sp
  4029ec:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4029f0:	add	x19, x19, #0x718
  4029f4:	mov	x0, x19
  4029f8:	bl	411304 <feof@plt+0xe934>
  4029fc:	mov	x1, x19
  402a00:	ldr	x19, [sp, #16]
  402a04:	adrp	x0, 411000 <feof@plt+0xe630>
  402a08:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x25a68>
  402a0c:	add	x0, x0, #0x528
  402a10:	add	x2, x2, #0x360
  402a14:	ldp	x29, x30, [sp], #32
  402a18:	b	402730 <__cxa_atexit@plt>
  402a1c:	mov	x29, #0x0                   	// #0
  402a20:	mov	x30, #0x0                   	// #0
  402a24:	mov	x5, x0
  402a28:	ldr	x1, [sp]
  402a2c:	add	x2, sp, #0x8
  402a30:	mov	x6, sp
  402a34:	movz	x0, #0x0, lsl #48
  402a38:	movk	x0, #0x0, lsl #32
  402a3c:	movk	x0, #0x40, lsl #16
  402a40:	movk	x0, #0x2c10
  402a44:	movz	x3, #0x0, lsl #48
  402a48:	movk	x3, #0x0, lsl #32
  402a4c:	movk	x3, #0x45, lsl #16
  402a50:	movk	x3, #0xbb0
  402a54:	movz	x4, #0x0, lsl #48
  402a58:	movk	x4, #0x0, lsl #32
  402a5c:	movk	x4, #0x45, lsl #16
  402a60:	movk	x4, #0xc30
  402a64:	bl	402610 <__libc_start_main@plt>
  402a68:	bl	402860 <abort@plt>
  402a6c:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x24a68>
  402a70:	ldr	x0, [x0, #4064]
  402a74:	cbz	x0, 402a7c <feof@plt+0xac>
  402a78:	b	402960 <__gmon_start__@plt>
  402a7c:	ret
  402a80:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  402a84:	add	x0, x0, #0x518
  402a88:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x25a68>
  402a8c:	add	x1, x1, #0x518
  402a90:	cmp	x1, x0
  402a94:	b.eq	402aac <feof@plt+0xdc>  // b.none
  402a98:	adrp	x1, 450000 <feof@plt+0x4d630>
  402a9c:	ldr	x1, [x1, #3160]
  402aa0:	cbz	x1, 402aac <feof@plt+0xdc>
  402aa4:	mov	x16, x1
  402aa8:	br	x16
  402aac:	ret
  402ab0:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  402ab4:	add	x0, x0, #0x518
  402ab8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x25a68>
  402abc:	add	x1, x1, #0x518
  402ac0:	sub	x1, x1, x0
  402ac4:	lsr	x2, x1, #63
  402ac8:	add	x1, x2, x1, asr #3
  402acc:	cmp	xzr, x1, asr #1
  402ad0:	asr	x1, x1, #1
  402ad4:	b.eq	402aec <feof@plt+0x11c>  // b.none
  402ad8:	adrp	x2, 450000 <feof@plt+0x4d630>
  402adc:	ldr	x2, [x2, #3168]
  402ae0:	cbz	x2, 402aec <feof@plt+0x11c>
  402ae4:	mov	x16, x2
  402ae8:	br	x16
  402aec:	ret
  402af0:	stp	x29, x30, [sp, #-32]!
  402af4:	mov	x29, sp
  402af8:	str	x19, [sp, #16]
  402afc:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  402b00:	ldrb	w0, [x19, #1344]
  402b04:	cbnz	w0, 402b14 <feof@plt+0x144>
  402b08:	bl	402a80 <feof@plt+0xb0>
  402b0c:	mov	w0, #0x1                   	// #1
  402b10:	strb	w0, [x19, #1344]
  402b14:	ldr	x19, [sp, #16]
  402b18:	ldp	x29, x30, [sp], #32
  402b1c:	ret
  402b20:	b	402ab0 <feof@plt+0xe0>
  402b24:	stp	x29, x30, [sp, #-80]!
  402b28:	str	x25, [sp, #16]
  402b2c:	stp	x24, x23, [sp, #32]
  402b30:	stp	x22, x21, [sp, #48]
  402b34:	stp	x20, x19, [sp, #64]
  402b38:	mov	x29, sp
  402b3c:	mov	x21, x0
  402b40:	bl	402420 <strlen@plt>
  402b44:	add	x0, x0, #0x1
  402b48:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  402b4c:	ldrb	w8, [x21]
  402b50:	mov	x19, x0
  402b54:	mov	x20, x0
  402b58:	cbz	w8, 402bf0 <feof@plt+0x220>
  402b5c:	mov	w23, #0x5e                  	// #94
  402b60:	mov	w24, #0x23                  	// #35
  402b64:	mov	x20, x19
  402b68:	add	x25, x21, #0x1
  402b6c:	mov	w9, w8
  402b70:	ands	w9, w9, #0xff
  402b74:	b.eq	402b8c <feof@plt+0x1bc>  // b.none
  402b78:	cmp	w9, #0x2f
  402b7c:	b.eq	402b8c <feof@plt+0x1bc>  // b.none
  402b80:	ldrb	w9, [x25], #1
  402b84:	ands	w9, w9, #0xff
  402b88:	b.ne	402b78 <feof@plt+0x1a8>  // b.any
  402b8c:	mvn	x9, x21
  402b90:	and	w8, w8, #0xff
  402b94:	cmp	w8, #0x2e
  402b98:	add	x22, x9, x25
  402b9c:	b.ne	402bc4 <feof@plt+0x1f4>  // b.any
  402ba0:	cmp	x22, #0x2
  402ba4:	b.ne	402bc4 <feof@plt+0x1f4>  // b.any
  402ba8:	ldrb	w8, [x21, #1]
  402bac:	cmp	w8, #0x2e
  402bb0:	b.ne	402bc4 <feof@plt+0x1f4>  // b.any
  402bb4:	strb	w23, [x20], #1
  402bb8:	ldurb	w8, [x25, #-1]
  402bbc:	cbnz	w8, 402be0 <feof@plt+0x210>
  402bc0:	b	402bf0 <feof@plt+0x220>
  402bc4:	mov	x0, x20
  402bc8:	mov	x1, x21
  402bcc:	mov	x2, x22
  402bd0:	bl	402390 <memcpy@plt>
  402bd4:	add	x20, x20, x22
  402bd8:	ldurb	w8, [x25, #-1]
  402bdc:	cbz	w8, 402bf0 <feof@plt+0x220>
  402be0:	strb	w24, [x20], #1
  402be4:	ldrb	w8, [x25]
  402be8:	mov	x21, x25
  402bec:	cbnz	w8, 402b68 <feof@plt+0x198>
  402bf0:	strb	wzr, [x20]
  402bf4:	mov	x0, x19
  402bf8:	ldp	x20, x19, [sp, #64]
  402bfc:	ldp	x22, x21, [sp, #48]
  402c00:	ldp	x24, x23, [sp, #32]
  402c04:	ldr	x25, [sp, #16]
  402c08:	ldp	x29, x30, [sp], #80
  402c0c:	ret
  402c10:	sub	sp, sp, #0xc0
  402c14:	stp	x29, x30, [sp, #96]
  402c18:	stp	x28, x27, [sp, #112]
  402c1c:	stp	x26, x25, [sp, #128]
  402c20:	stp	x24, x23, [sp, #144]
  402c24:	stp	x22, x21, [sp, #160]
  402c28:	stp	x20, x19, [sp, #176]
  402c2c:	add	x29, sp, #0x60
  402c30:	ldr	x21, [x1]
  402c34:	mov	w20, w0
  402c38:	str	x1, [sp, #32]
  402c3c:	mov	x0, x21
  402c40:	bl	402420 <strlen@plt>
  402c44:	cbz	x0, 402c64 <feof@plt+0x294>
  402c48:	add	x8, x21, x0
  402c4c:	ldurb	w8, [x8, #-1]
  402c50:	sub	x0, x0, #0x1
  402c54:	cmp	w8, #0x2f
  402c58:	b.ne	402c44 <feof@plt+0x274>  // b.any
  402c5c:	add	x8, x21, x0
  402c60:	add	x21, x8, #0x1
  402c64:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402c68:	mov	x0, x21
  402c6c:	str	x21, [x8, #1480]
  402c70:	bl	4505ec <_obstack_memory_used@@Base+0x54>
  402c74:	bl	44ee70 <feof@plt+0x4c4a0>
  402c78:	bl	410edc <feof@plt+0xe50c>
  402c7c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402c80:	ldr	x0, [x8, #872]
  402c84:	mov	w1, wzr
  402c88:	bl	404750 <feof@plt+0x1d80>
  402c8c:	ldr	x1, [sp, #32]
  402c90:	adrp	x2, 450000 <feof@plt+0x4d630>
  402c94:	adrp	x3, 450000 <feof@plt+0x4d630>
  402c98:	add	x2, x2, #0xe4d
  402c9c:	add	x3, x3, #0xc88
  402ca0:	mov	w0, w20
  402ca4:	mov	x4, xzr
  402ca8:	bl	4025c0 <getopt_long@plt>
  402cac:	cmn	w0, #0x1
  402cb0:	b.eq	402df4 <feof@plt+0x424>  // b.none
  402cb4:	adrp	x22, 450000 <feof@plt+0x4d630>
  402cb8:	adrp	x23, 450000 <feof@plt+0x4d630>
  402cbc:	adrp	x19, 450000 <feof@plt+0x4d630>
  402cc0:	adrp	x26, 450000 <feof@plt+0x4d630>
  402cc4:	adrp	x27, 452000 <_obstack_memory_used@@Base+0x1a68>
  402cc8:	adrp	x28, 452000 <_obstack_memory_used@@Base+0x1a68>
  402ccc:	adrp	x21, 451000 <_obstack_memory_used@@Base+0xa68>
  402cd0:	adrp	x24, 451000 <_obstack_memory_used@@Base+0xa68>
  402cd4:	mov	w2, w0
  402cd8:	add	x22, x22, #0xe4d
  402cdc:	add	x23, x23, #0xc88
  402ce0:	add	x19, x19, #0xc80
  402ce4:	mov	w25, #0x1                   	// #1
  402ce8:	add	x26, x26, #0xe98
  402cec:	add	x27, x27, #0xb9a
  402cf0:	add	x28, x28, #0xb94
  402cf4:	add	x21, x21, #0x318
  402cf8:	add	x24, x24, #0x34a
  402cfc:	b	402d80 <feof@plt+0x3b0>
  402d00:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  402d04:	add	x0, x0, #0x223
  402d08:	bl	4023e0 <puts@plt>
  402d0c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  402d10:	add	x0, x0, #0x24b
  402d14:	bl	4023e0 <puts@plt>
  402d18:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  402d1c:	add	x0, x0, #0x268
  402d20:	bl	4023e0 <puts@plt>
  402d24:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  402d28:	add	x0, x0, #0x28f
  402d2c:	bl	4023e0 <puts@plt>
  402d30:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  402d34:	add	x0, x0, #0x2bf
  402d38:	bl	4023e0 <puts@plt>
  402d3c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  402d40:	add	x0, x0, #0x2ec
  402d44:	bl	4023e0 <puts@plt>
  402d48:	adrp	x0, 450000 <feof@plt+0x4d630>
  402d4c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  402d50:	add	x0, x0, #0xe66
  402d54:	add	x1, x1, #0xb78
  402d58:	bl	4029b0 <printf@plt>
  402d5c:	ldr	x1, [sp, #32]
  402d60:	mov	w0, w20
  402d64:	mov	x2, x22
  402d68:	mov	x3, x23
  402d6c:	mov	x4, xzr
  402d70:	bl	4025c0 <getopt_long@plt>
  402d74:	mov	w2, w0
  402d78:	cmn	w0, #0x1
  402d7c:	b.eq	402df4 <feof@plt+0x424>  // b.none
  402d80:	sub	w8, w2, #0x68
  402d84:	ror	w8, w8, #1
  402d88:	cmp	w8, #0x7
  402d8c:	b.hi	402ddc <feof@plt+0x40c>  // b.pmore
  402d90:	adr	x9, 402d00 <feof@plt+0x330>
  402d94:	ldrb	w10, [x19, x8]
  402d98:	add	x9, x9, x10, lsl #2
  402d9c:	br	x9
  402da0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402da4:	strb	w25, [x8, #1408]
  402da8:	b	402d5c <feof@plt+0x38c>
  402dac:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402db0:	strb	w25, [x8, #1412]
  402db4:	b	402d5c <feof@plt+0x38c>
  402db8:	mov	x0, x26
  402dbc:	mov	x1, x27
  402dc0:	mov	x2, x28
  402dc4:	bl	4029b0 <printf@plt>
  402dc8:	mov	x0, x21
  402dcc:	bl	4023e0 <puts@plt>
  402dd0:	mov	x0, x24
  402dd4:	bl	4023e0 <puts@plt>
  402dd8:	b	402d5c <feof@plt+0x38c>
  402ddc:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402de0:	ldr	x0, [x8, #1336]
  402de4:	adrp	x1, 450000 <feof@plt+0x4d630>
  402de8:	add	x1, x1, #0xe53
  402dec:	bl	402440 <fprintf@plt>
  402df0:	b	402d5c <feof@plt+0x38c>
  402df4:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  402df8:	ldrsw	x8, [x20, #1320]
  402dfc:	ldr	x9, [sp, #32]
  402e00:	add	x9, x9, x8, lsl #3
  402e04:	ldr	x10, [x9]
  402e08:	cbz	x10, 403584 <feof@plt+0xbb4>
  402e0c:	adrp	x10, 450000 <feof@plt+0x4d630>
  402e10:	ldr	q0, [x10, #3184]
  402e14:	sub	x11, x29, #0x20
  402e18:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x25a68>
  402e1c:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  402e20:	adrp	x25, 476000 <_obstack_memory_used@@Base+0x25a68>
  402e24:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  402e28:	add	x28, x28, #0x550
  402e2c:	add	x23, x23, #0x6d
  402e30:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x25a68>
  402e34:	mov	w24, #0x1                   	// #1
  402e38:	add	x25, x25, #0x548
  402e3c:	add	x10, x11, #0x8
  402e40:	str	q0, [sp, #16]
  402e44:	str	x10, [sp, #8]
  402e48:	b	402e7c <feof@plt+0x4ac>
  402e4c:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  402e50:	add	x19, x19, #0x564
  402e54:	ldur	x0, [x19, #20]
  402e58:	bl	4024c0 <free@plt>
  402e5c:	str	wzr, [x19]
  402e60:	stur	xzr, [x19, #20]
  402e64:	stur	xzr, [x19, #12]
  402e68:	ldrsw	x8, [x20, #1320]
  402e6c:	ldr	x9, [sp, #32]
  402e70:	add	x9, x9, x8, lsl #3
  402e74:	ldr	x10, [x9]
  402e78:	cbz	x10, 403584 <feof@plt+0xbb4>
  402e7c:	add	w8, w8, #0x1
  402e80:	str	w8, [x20, #1320]
  402e84:	ldr	x8, [sp, #8]
  402e88:	ldr	x19, [x9]
  402e8c:	sturh	wzr, [x29, #-30]
  402e90:	stp	xzr, xzr, [x8]
  402e94:	bl	402660 <getpid@plt>
  402e98:	ldr	x8, [x22, #1352]
  402e9c:	stur	w0, [x29, #-8]
  402ea0:	cbnz	x8, 4035d8 <feof@plt+0xc08>
  402ea4:	ldr	q0, [sp, #16]
  402ea8:	mov	w2, #0x180                 	// #384
  402eac:	mov	x0, x19
  402eb0:	mov	w1, wzr
  402eb4:	str	q0, [x28]
  402eb8:	str	wzr, [x28, #16]
  402ebc:	str	wzr, [x28, #24]
  402ec0:	sturh	wzr, [x29, #-32]
  402ec4:	str	x19, [sp, #48]
  402ec8:	bl	402470 <open@plt>
  402ecc:	tbnz	w0, #31, 403568 <feof@plt+0xb98>
  402ed0:	mov	w21, w0
  402ed4:	sub	x2, x29, #0x20
  402ed8:	mov	w1, #0x7                   	// #7
  402edc:	mov	w0, w21
  402ee0:	bl	402950 <fcntl@plt>
  402ee4:	cbz	w0, 402ef8 <feof@plt+0x528>
  402ee8:	bl	4027c0 <__errno_location@plt>
  402eec:	ldr	w8, [x0]
  402ef0:	cmp	w8, #0x4
  402ef4:	b.eq	402ed4 <feof@plt+0x504>  // b.none
  402ef8:	mov	w0, w21
  402efc:	mov	x1, x23
  402f00:	bl	44eef4 <feof@plt+0x4c524>
  402f04:	str	x0, [x22, #1352]
  402f08:	cbz	x0, 403560 <feof@plt+0xb90>
  402f0c:	mov	x1, xzr
  402f10:	str	w24, [x26, #1380]
  402f14:	bl	402970 <setbuf@plt>
  402f18:	mov	w0, #0x1                   	// #1
  402f1c:	bl	4035f0 <feof@plt+0xc20>
  402f20:	cbz	x0, 402fac <feof@plt+0x5dc>
  402f24:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  402f28:	ldr	w8, [x0]
  402f2c:	ldr	w9, [x9, #1384]
  402f30:	rev	w10, w8
  402f34:	cmp	w9, #0x0
  402f38:	csel	w19, w8, w10, eq  // eq = none
  402f3c:	mov	w8, #0x6e6e                	// #28270
  402f40:	movk	w8, #0x6763, lsl #16
  402f44:	cmp	w19, w8
  402f48:	b.gt	402f78 <feof@plt+0x5a8>
  402f4c:	mov	w8, #0x6367                	// #25447
  402f50:	movk	w8, #0x6164, lsl #16
  402f54:	cmp	w19, w8
  402f58:	b.eq	402fd4 <feof@plt+0x604>  // b.none
  402f5c:	mov	w8, #0x6461                	// #25697
  402f60:	movk	w8, #0x6763, lsl #16
  402f64:	cmp	w19, w8
  402f68:	b.ne	402fac <feof@plt+0x5dc>  // b.any
  402f6c:	mov	w21, #0x1                   	// #1
  402f70:	mov	w20, #0x1                   	// #1
  402f74:	b	402ff0 <feof@plt+0x620>
  402f78:	mov	w8, #0x6e6f                	// #28271
  402f7c:	movk	w8, #0x6763, lsl #16
  402f80:	cmp	w19, w8
  402f84:	b.eq	402fe8 <feof@plt+0x618>  // b.none
  402f88:	mov	w8, #0x6367                	// #25447
  402f8c:	movk	w8, #0x6f6e, lsl #16
  402f90:	cmp	w19, w8
  402f94:	b.ne	402fac <feof@plt+0x5dc>  // b.any
  402f98:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402f9c:	mov	w20, wzr
  402fa0:	str	w24, [x8, #1384]
  402fa4:	mov	w21, #0xffffffff            	// #-1
  402fa8:	b	402ff0 <feof@plt+0x620>
  402fac:	ldr	x1, [sp, #48]
  402fb0:	adrp	x0, 450000 <feof@plt+0x4d630>
  402fb4:	add	x0, x0, #0xeb8
  402fb8:	bl	4029b0 <printf@plt>
  402fbc:	ldr	x0, [x22, #1352]
  402fc0:	cbz	x0, 402e4c <feof@plt+0x47c>
  402fc4:	bl	402490 <fclose@plt>
  402fc8:	str	xzr, [x25]
  402fcc:	str	wzr, [x25, #16]
  402fd0:	b	402e4c <feof@plt+0x47c>
  402fd4:	mov	w20, #0x1                   	// #1
  402fd8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  402fdc:	str	w20, [x8, #1384]
  402fe0:	mov	w21, #0xffffffff            	// #-1
  402fe4:	b	402ff0 <feof@plt+0x620>
  402fe8:	mov	w20, wzr
  402fec:	mov	w21, #0x1                   	// #1
  402ff0:	mov	w0, #0x1                   	// #1
  402ff4:	bl	4035f0 <feof@plt+0xc20>
  402ff8:	cbz	x0, 403018 <feof@plt+0x648>
  402ffc:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  403000:	ldr	w8, [x0]
  403004:	ldr	w9, [x9, #1384]
  403008:	rev	w10, w8
  40300c:	cmp	w9, #0x0
  403010:	csel	w22, w8, w10, eq  // eq = none
  403014:	b	40301c <feof@plt+0x64c>
  403018:	mov	w22, wzr
  40301c:	rev	w8, w22
  403020:	lsr	w9, w19, #24
  403024:	stur	w8, [x29, #-36]
  403028:	sturb	w9, [x29, #-32]
  40302c:	adrp	x8, 450000 <feof@plt+0x4d630>
  403030:	adrp	x9, 450000 <feof@plt+0x4d630>
  403034:	cmp	w20, #0x0
  403038:	add	x8, x8, #0xef1
  40303c:	add	x9, x9, #0xef6
  403040:	ldr	x1, [sp, #48]
  403044:	csel	x2, x9, x8, eq  // eq = none
  403048:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  40304c:	adrp	x9, 450000 <feof@plt+0x4d630>
  403050:	cmp	w21, #0x0
  403054:	add	x8, x8, #0xb34
  403058:	add	x9, x9, #0xefb
  40305c:	adrp	x0, 450000 <feof@plt+0x4d630>
  403060:	lsr	w10, w19, #16
  403064:	lsr	w11, w19, #8
  403068:	csel	x5, x9, x8, lt  // lt = tstop
  40306c:	sub	x3, x29, #0x20
  403070:	sub	x4, x29, #0x24
  403074:	add	x0, x0, #0xecc
  403078:	sturb	w19, [x29, #-29]
  40307c:	sturb	w10, [x29, #-31]
  403080:	sturb	w11, [x29, #-30]
  403084:	bl	4029b0 <printf@plt>
  403088:	mov	w8, #0x322a                	// #12842
  40308c:	movk	w8, #0x4139, lsl #16
  403090:	cmp	w22, w8
  403094:	b.eq	4030b8 <feof@plt+0x6e8>  // b.none
  403098:	ldr	x1, [sp, #48]
  40309c:	mov	w8, #0x3941                	// #14657
  4030a0:	adrp	x0, 450000 <feof@plt+0x4d630>
  4030a4:	movk	w8, #0x2a32, lsl #16
  4030a8:	sub	x2, x29, #0x28
  4030ac:	add	x0, x0, #0xf11
  4030b0:	stur	w8, [x29, #-40]
  4030b4:	bl	4029b0 <printf@plt>
  4030b8:	mov	w0, #0x1                   	// #1
  4030bc:	bl	4035f0 <feof@plt+0xc20>
  4030c0:	cbz	x0, 4030e0 <feof@plt+0x710>
  4030c4:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4030c8:	ldr	w8, [x0]
  4030cc:	ldr	w9, [x9, #1384]
  4030d0:	rev	w10, w8
  4030d4:	cmp	w9, #0x0
  4030d8:	csel	w2, w8, w10, eq  // eq = none
  4030dc:	b	4030e4 <feof@plt+0x714>
  4030e0:	mov	x2, xzr
  4030e4:	ldr	x1, [sp, #48]
  4030e8:	adrp	x0, 450000 <feof@plt+0x4d630>
  4030ec:	add	x0, x0, #0xf37
  4030f0:	bl	4029b0 <printf@plt>
  4030f4:	cbnz	w20, 403180 <feof@plt+0x7b0>
  4030f8:	mov	w0, #0x1                   	// #1
  4030fc:	bl	4035f0 <feof@plt+0xc20>
  403100:	cbz	x0, 403130 <feof@plt+0x760>
  403104:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  403108:	ldr	w8, [x0]
  40310c:	ldr	w9, [x9, #1384]
  403110:	ldr	x19, [sp, #48]
  403114:	rev	w10, w8
  403118:	cmp	w9, #0x0
  40311c:	csel	w0, w8, w10, eq  // eq = none
  403120:	cbz	w0, 403134 <feof@plt+0x764>
  403124:	bl	4035f0 <feof@plt+0xc20>
  403128:	mov	x2, x0
  40312c:	b	403138 <feof@plt+0x768>
  403130:	ldr	x19, [sp, #48]
  403134:	mov	x2, xzr
  403138:	adrp	x0, 450000 <feof@plt+0x4d630>
  40313c:	add	x0, x0, #0xf45
  403140:	mov	x1, x19
  403144:	bl	4029b0 <printf@plt>
  403148:	mov	w0, #0x1                   	// #1
  40314c:	bl	4035f0 <feof@plt+0xc20>
  403150:	cbz	x0, 403170 <feof@plt+0x7a0>
  403154:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  403158:	ldr	w8, [x0]
  40315c:	ldr	w9, [x9, #1384]
  403160:	rev	w10, w8
  403164:	cmp	w9, #0x0
  403168:	csel	w8, w8, w10, eq  // eq = none
  40316c:	cbnz	w8, 403180 <feof@plt+0x7b0>
  403170:	ldr	x1, [sp, #48]
  403174:	adrp	x0, 450000 <feof@plt+0x4d630>
  403178:	add	x0, x0, #0xf51
  40317c:	bl	4029b0 <printf@plt>
  403180:	mov	w20, wzr
  403184:	b	4031c4 <feof@plt+0x7f4>
  403188:	ldr	x0, [x25]
  40318c:	lsl	w1, w9, #2
  403190:	mov	w2, wzr
  403194:	stp	wzr, wzr, [x25, #12]
  403198:	bl	4029a0 <fseek@plt>
  40319c:	ldr	x0, [x25]
  4031a0:	bl	402450 <ftell@plt>
  4031a4:	lsr	x8, x0, #2
  4031a8:	str	w8, [x25, #8]
  4031ac:	ldr	x9, [x25]
  4031b0:	ldr	w10, [x25, #24]
  4031b4:	mov	w20, w21
  4031b8:	cmp	x9, #0x0
  4031bc:	csinc	w9, w10, wzr, ne  // ne = any
  4031c0:	cbnz	w9, 4034e4 <feof@plt+0xb14>
  4031c4:	ldr	w8, [x26, #1380]
  4031c8:	cmp	w8, #0x0
  4031cc:	b.le	4035a8 <feof@plt+0xbd8>
  4031d0:	mov	x21, x26
  4031d4:	ldp	w22, w26, [x28]
  4031d8:	mov	w0, #0x1                   	// #1
  4031dc:	bl	4035f0 <feof@plt+0xc20>
  4031e0:	cbz	x0, 403520 <feof@plt+0xb50>
  4031e4:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4031e8:	ldr	w8, [x0]
  4031ec:	ldr	w9, [x9, #1384]
  4031f0:	rev	w10, w8
  4031f4:	cmp	w9, #0x0
  4031f8:	csel	w27, w8, w10, eq  // eq = none
  4031fc:	cbz	w27, 403520 <feof@plt+0xb50>
  403200:	mov	w0, #0x1                   	// #1
  403204:	bl	4035f0 <feof@plt+0xc20>
  403208:	cbz	x0, 403228 <feof@plt+0x858>
  40320c:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  403210:	ldr	w8, [x0]
  403214:	ldr	w9, [x9, #1384]
  403218:	rev	w10, w8
  40321c:	cmp	w9, #0x0
  403220:	csel	w24, w8, w10, eq  // eq = none
  403224:	b	40322c <feof@plt+0x85c>
  403228:	mov	w24, wzr
  40322c:	mov	x8, x21
  403230:	ldr	w8, [x21, #1380]
  403234:	cmp	w8, #0x0
  403238:	b.le	4035a8 <feof@plt+0xbd8>
  40323c:	ldp	w23, w8, [x28]
  403240:	mov	x25, x21
  403244:	mov	w21, #0x4                   	// #4
  403248:	str	w8, [sp, #44]
  40324c:	sub	w8, w27, #0x1
  403250:	eor	w19, w8, w27
  403254:	lsr	w8, w19, #1
  403258:	cbz	w8, 40328c <feof@plt+0x8bc>
  40325c:	mvn	w9, w8
  403260:	tst	w9, #0xff
  403264:	b.ne	403278 <feof@plt+0x8a8>  // b.any
  403268:	lsr	w8, w8, #8
  40326c:	sub	w21, w21, #0x1
  403270:	cbnz	w8, 40325c <feof@plt+0x88c>
  403274:	b	40328c <feof@plt+0x8bc>
  403278:	ldr	x1, [sp, #48]
  40327c:	adrp	x0, 450000 <feof@plt+0x4d630>
  403280:	add	x0, x0, #0xf7c
  403284:	mov	w2, w27
  403288:	bl	4029b0 <printf@plt>
  40328c:	mov	w8, #0x140ffff             	// #21037055
  403290:	cmp	w27, w8
  403294:	b.le	4032d0 <feof@plt+0x900>
  403298:	mov	w8, #0x1410000             	// #21037056
  40329c:	mov	w28, w23
  4032a0:	cmp	w27, w8
  4032a4:	b.eq	403328 <feof@plt+0x958>  // b.none
  4032a8:	mov	w8, #0x1430000             	// #21168128
  4032ac:	cmp	w27, w8
  4032b0:	b.eq	403338 <feof@plt+0x968>  // b.none
  4032b4:	mov	w8, #0x1450000             	// #21299200
  4032b8:	cmp	w27, w8
  4032bc:	b.ne	4032f4 <feof@plt+0x924>  // b.any
  4032c0:	adrp	x23, 450000 <feof@plt+0x4d630>
  4032c4:	add	x23, x23, #0xdb8
  4032c8:	cbnz	w20, 403344 <feof@plt+0x974>
  4032cc:	b	403388 <feof@plt+0x9b8>
  4032d0:	mov	w8, #0xa1000000            	// #-1593835520
  4032d4:	mov	w28, w23
  4032d8:	cmp	w27, w8
  4032dc:	b.eq	403488 <feof@plt+0xab8>  // b.none
  4032e0:	mov	w8, #0x1000000             	// #16777216
  4032e4:	adrp	x23, 450000 <feof@plt+0x4d630>
  4032e8:	cmp	w27, w8
  4032ec:	add	x23, x23, #0xd70
  4032f0:	b.eq	403340 <feof@plt+0x970>  // b.none
  4032f4:	mov	w9, #0xfe5f0000            	// #-27328512
  4032f8:	add	w9, w27, w9
  4032fc:	and	w8, w27, #0xffff
  403300:	cmp	w9, #0x120, lsl #12
  403304:	ccmp	w8, #0x0, #0x0, cc  // cc = lo, ul, last
  403308:	mov	w8, #0x18                  	// #24
  40330c:	mov	w9, #0x30                  	// #48
  403310:	csel	x8, x9, x8, eq  // eq = none
  403314:	adrp	x9, 450000 <feof@plt+0x4d630>
  403318:	add	x9, x9, #0xd28
  40331c:	add	x23, x9, x8
  403320:	cbnz	w20, 403344 <feof@plt+0x974>
  403324:	b	403388 <feof@plt+0x9b8>
  403328:	adrp	x23, 450000 <feof@plt+0x4d630>
  40332c:	add	x23, x23, #0xd88
  403330:	cbnz	w20, 403344 <feof@plt+0x974>
  403334:	b	403388 <feof@plt+0x9b8>
  403338:	adrp	x23, 450000 <feof@plt+0x4d630>
  40333c:	add	x23, x23, #0xda0
  403340:	cbz	w20, 403388 <feof@plt+0x9b8>
  403344:	cmp	w20, w21
  403348:	b.cs	403388 <feof@plt+0x9b8>  // b.hs, b.nlast
  40334c:	sub	w8, w20, #0x1
  403350:	sub	x9, x29, #0x20
  403354:	ldr	w8, [x9, w8, uxtw #2]
  403358:	sub	w9, w8, #0x1
  40335c:	eor	w9, w9, w8
  403360:	cmp	w19, w9, lsr #8
  403364:	b.ne	403374 <feof@plt+0x9a4>  // b.any
  403368:	eor	w8, w8, w27
  40336c:	bics	wzr, w8, w9
  403370:	b.eq	403388 <feof@plt+0x9b8>  // b.none
  403374:	ldr	x1, [sp, #48]
  403378:	adrp	x0, 450000 <feof@plt+0x4d630>
  40337c:	add	x0, x0, #0xf96
  403380:	mov	w2, w27
  403384:	bl	4029b0 <printf@plt>
  403388:	ldr	x20, [sp, #48]
  40338c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403390:	sub	w8, w21, #0x1
  403394:	sub	x9, x29, #0x20
  403398:	add	x0, x0, #0x20f
  40339c:	mov	x1, x20
  4033a0:	str	w27, [x9, w8, uxtw #2]
  4033a4:	bl	4029b0 <printf@plt>
  4033a8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4033ac:	ldrb	w8, [x8, #1412]
  4033b0:	cmp	w8, #0x1
  4033b4:	b.ne	4033cc <feof@plt+0x9fc>  // b.any
  4033b8:	add	w8, w26, w22
  4033bc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4033c0:	mov	w1, w8
  4033c4:	add	x0, x0, #0x213
  4033c8:	bl	4029b0 <printf@plt>
  4033cc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4033d0:	adrp	x2, 450000 <feof@plt+0x4d630>
  4033d4:	lsl	w1, w21, #1
  4033d8:	add	x0, x0, #0xfa5
  4033dc:	add	x2, x2, #0xe48
  4033e0:	bl	4029b0 <printf@plt>
  4033e4:	ldr	x3, [x23, #8]
  4033e8:	adrp	x0, 450000 <feof@plt+0x4d630>
  4033ec:	add	x0, x0, #0xfbb
  4033f0:	mov	w1, w27
  4033f4:	mov	w2, w24
  4033f8:	bl	4029b0 <printf@plt>
  4033fc:	ldr	x8, [x23, #16]
  403400:	cbz	x8, 403418 <feof@plt+0xa48>
  403404:	mov	x0, x20
  403408:	mov	w1, w27
  40340c:	mov	w2, w24
  403410:	mov	w3, w21
  403414:	blr	x8
  403418:	ldr	w8, [sp, #44]
  40341c:	mov	w0, #0xa                   	// #10
  403420:	add	w19, w8, w28
  403424:	bl	4025f0 <putchar@plt>
  403428:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40342c:	ldrb	w8, [x8, #1408]
  403430:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x25a68>
  403434:	mov	x26, x25
  403438:	adrp	x25, 476000 <_obstack_memory_used@@Base+0x25a68>
  40343c:	cmp	w8, #0x1
  403440:	add	x28, x28, #0x550
  403444:	add	x25, x25, #0x548
  403448:	b.ne	4034b4 <feof@plt+0xae4>  // b.any
  40344c:	ldr	x8, [x23, #16]
  403450:	cbz	x8, 4034b4 <feof@plt+0xae4>
  403454:	ldr	w8, [x26, #1380]
  403458:	cmp	w8, #0x0
  40345c:	b.le	4035a8 <feof@plt+0xbd8>
  403460:	ldp	w8, w9, [x28]
  403464:	sub	w8, w8, w19
  403468:	add	w8, w8, w9
  40346c:	cmp	w8, w24
  403470:	mov	w9, w24
  403474:	b.ls	403498 <feof@plt+0xac8>  // b.plast
  403478:	adrp	x0, 450000 <feof@plt+0x4d630>
  40347c:	sub	x2, x8, x9
  403480:	add	x0, x0, #0xfc7
  403484:	b	4034ac <feof@plt+0xadc>
  403488:	adrp	x23, 450000 <feof@plt+0x4d630>
  40348c:	add	x23, x23, #0xdd0
  403490:	cbnz	w20, 403344 <feof@plt+0x974>
  403494:	b	403388 <feof@plt+0x9b8>
  403498:	cmp	w24, w8
  40349c:	b.ls	4034b4 <feof@plt+0xae4>  // b.plast
  4034a0:	adrp	x0, 450000 <feof@plt+0x4d630>
  4034a4:	sub	x2, x9, x8
  4034a8:	add	x0, x0, #0xff3
  4034ac:	mov	x1, x20
  4034b0:	bl	4029b0 <printf@plt>
  4034b4:	ldr	w8, [x26, #1380]
  4034b8:	cmp	w8, #0x0
  4034bc:	b.le	4035c0 <feof@plt+0xbf0>
  4034c0:	ldr	w8, [x28]
  4034c4:	ldr	w11, [x28, #8]
  4034c8:	add	w9, w19, w24
  4034cc:	sub	w10, w9, w8
  4034d0:	cmp	w10, w11
  4034d4:	b.hi	403188 <feof@plt+0x7b8>  // b.pmore
  4034d8:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4034dc:	str	w10, [x9, #1364]
  4034e0:	b	4031ac <feof@plt+0x7dc>
  4034e4:	ldr	w10, [x26, #1380]
  4034e8:	cmp	w10, #0x0
  4034ec:	b.le	4035a8 <feof@plt+0xbd8>
  4034f0:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  4034f4:	ldr	w10, [x10, #1364]
  4034f8:	ldr	x1, [sp, #48]
  4034fc:	cmp	w9, #0x0
  403500:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  403504:	adrp	x11, 451000 <_obstack_memory_used@@Base+0xa68>
  403508:	add	x9, x9, #0x39
  40350c:	add	x11, x11, #0x1d
  403510:	csel	x0, x11, x9, lt  // lt = tstop
  403514:	add	w2, w10, w8
  403518:	mov	x21, x26
  40351c:	bl	4029b0 <printf@plt>
  403520:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  403524:	ldr	x0, [x22, #1352]
  403528:	cbz	x0, 403538 <feof@plt+0xb68>
  40352c:	bl	402490 <fclose@plt>
  403530:	str	xzr, [x25]
  403534:	str	wzr, [x25, #16]
  403538:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  40353c:	add	x19, x19, #0x564
  403540:	ldur	x0, [x19, #20]
  403544:	bl	4024c0 <free@plt>
  403548:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  40354c:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  403550:	add	x23, x23, #0x6d
  403554:	mov	w24, #0x1                   	// #1
  403558:	mov	x26, x21
  40355c:	b	402e5c <feof@plt+0x48c>
  403560:	mov	w0, w21
  403564:	bl	402810 <close@plt>
  403568:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40356c:	ldr	x0, [x8, #1336]
  403570:	ldr	x2, [sp, #48]
  403574:	adrp	x1, 450000 <feof@plt+0x4d630>
  403578:	add	x1, x1, #0xea8
  40357c:	bl	402440 <fprintf@plt>
  403580:	b	402e68 <feof@plt+0x498>
  403584:	ldp	x20, x19, [sp, #176]
  403588:	ldp	x22, x21, [sp, #160]
  40358c:	ldp	x24, x23, [sp, #144]
  403590:	ldp	x26, x25, [sp, #128]
  403594:	ldp	x28, x27, [sp, #112]
  403598:	ldp	x29, x30, [sp, #96]
  40359c:	mov	w0, wzr
  4035a0:	add	sp, sp, #0xc0
  4035a4:	ret
  4035a8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4035ac:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4035b0:	add	x0, x0, #0x4f
  4035b4:	add	x2, x2, #0x70
  4035b8:	mov	w1, #0x4a                  	// #74
  4035bc:	bl	404ac4 <feof@plt+0x20f4>
  4035c0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4035c4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4035c8:	add	x0, x0, #0x4f
  4035cc:	add	x2, x2, #0x219
  4035d0:	mov	w1, #0x271                 	// #625
  4035d4:	bl	404ac4 <feof@plt+0x20f4>
  4035d8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4035dc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4035e0:	add	x0, x0, #0x4f
  4035e4:	add	x2, x2, #0x63
  4035e8:	mov	w1, #0x8e                  	// #142
  4035ec:	bl	404ac4 <feof@plt+0x20f4>
  4035f0:	stp	x29, x30, [sp, #-64]!
  4035f4:	str	x23, [sp, #16]
  4035f8:	stp	x22, x21, [sp, #32]
  4035fc:	stp	x20, x19, [sp, #48]
  403600:	mov	x29, sp
  403604:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  403608:	add	x20, x20, #0x554
  40360c:	ldr	w8, [x20, #16]
  403610:	cmp	w8, #0x1
  403614:	b.lt	4036a4 <feof@plt+0xcd4>  // b.tstop
  403618:	ldp	w8, w9, [x20]
  40361c:	mov	w19, w0
  403620:	sub	w22, w9, w8
  403624:	cmp	w22, w0
  403628:	b.cs	403708 <feof@plt+0xd38>  // b.hs, b.nlast
  40362c:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  403630:	ldr	w10, [x9, #1360]
  403634:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x25a68>
  403638:	add	w10, w10, w8
  40363c:	str	w10, [x9, #1360]
  403640:	cbz	w22, 403654 <feof@plt+0xc84>
  403644:	ldr	x0, [x23, #1400]
  403648:	lsl	w2, w22, #2
  40364c:	add	x1, x0, x8, lsl #2
  403650:	bl	402780 <memmove@plt>
  403654:	ldur	x8, [x20, #28]
  403658:	add	w9, w22, w19
  40365c:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  403660:	add	x21, x21, #0x558
  403664:	cmp	x8, x9
  403668:	stp	wzr, w22, [x20]
  40366c:	b.cs	4036ac <feof@plt+0xcdc>  // b.hs, b.nlast
  403670:	cmp	x8, #0x0
  403674:	mov	w10, #0x400                 	// #1024
  403678:	ldr	x0, [x21, #32]
  40367c:	csel	x8, x10, x8, eq  // eq = none
  403680:	add	x8, x8, x9
  403684:	lsl	x9, x8, #1
  403688:	lsl	x1, x8, #3
  40368c:	str	x9, [x21, #24]
  403690:	bl	450728 <_obstack_memory_used@@Base+0x190>
  403694:	ldr	x8, [x21, #24]
  403698:	ldr	w22, [x21]
  40369c:	str	x0, [x21, #32]
  4036a0:	b	4036b0 <feof@plt+0xce0>
  4036a4:	mov	x0, xzr
  4036a8:	b	403718 <feof@plt+0xd48>
  4036ac:	ldr	x0, [x23, #1400]
  4036b0:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x25a68>
  4036b4:	add	x23, x23, #0x548
  4036b8:	ldr	x3, [x23]
  4036bc:	sub	w8, w8, w22
  4036c0:	add	x0, x0, w22, uxtw #2
  4036c4:	lsl	w2, w8, #2
  4036c8:	mov	w1, #0x1                   	// #1
  4036cc:	bl	4023a0 <fread@plt>
  4036d0:	ldr	w8, [x23, #16]
  4036d4:	lsr	x9, x0, #2
  4036d8:	add	w8, w8, w9
  4036dc:	cmp	w8, w19
  4036e0:	str	w8, [x23, #16]
  4036e4:	b.cs	403700 <feof@plt+0xd30>  // b.hs, b.nlast
  4036e8:	ldr	w9, [x21, #4]
  4036ec:	sub	w8, w19, w8
  4036f0:	mov	x0, xzr
  4036f4:	add	w8, w8, w9
  4036f8:	stp	wzr, w8, [x21]
  4036fc:	b	403718 <feof@plt+0xd48>
  403700:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403704:	ldr	w8, [x8, #1364]
  403708:	ldur	x9, [x20, #36]
  40370c:	add	w10, w8, w19
  403710:	str	w10, [x20]
  403714:	add	x0, x9, w8, uxtw #2
  403718:	ldp	x20, x19, [sp, #48]
  40371c:	ldp	x22, x21, [sp, #32]
  403720:	ldr	x23, [sp, #16]
  403724:	ldp	x29, x30, [sp], #64
  403728:	ret
  40372c:	stp	x29, x30, [sp, #-96]!
  403730:	stp	x28, x27, [sp, #16]
  403734:	stp	x26, x25, [sp, #32]
  403738:	stp	x24, x23, [sp, #48]
  40373c:	stp	x22, x21, [sp, #64]
  403740:	stp	x20, x19, [sp, #80]
  403744:	mov	x29, sp
  403748:	mov	w8, #0xfe5f0000            	// #-27328512
  40374c:	add	w8, w1, w8
  403750:	adrp	x9, 450000 <feof@plt+0x4d630>
  403754:	lsr	w8, w8, #17
  403758:	add	x9, x9, #0xe00
  40375c:	ldr	x1, [x9, w8, uxtw #3]
  403760:	mov	x19, x0
  403764:	lsr	w20, w2, #1
  403768:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40376c:	add	x0, x0, #0x10d
  403770:	mov	w2, w20
  403774:	mov	w22, w3
  403778:	bl	4029b0 <printf@plt>
  40377c:	cbz	w20, 403874 <feof@plt+0xea4>
  403780:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403784:	ldrb	w8, [x8, #1408]
  403788:	cbz	w8, 403874 <feof@plt+0xea4>
  40378c:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  403790:	adrp	x27, 451000 <_obstack_memory_used@@Base+0xa68>
  403794:	adrp	x28, 451000 <_obstack_memory_used@@Base+0xa68>
  403798:	mov	w21, wzr
  40379c:	lsl	w22, w22, #1
  4037a0:	add	x24, x24, #0x550
  4037a4:	add	x27, x27, #0x11b
  4037a8:	add	x28, x28, #0x12f
  4037ac:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x25a68>
  4037b0:	b	4037cc <feof@plt+0xdfc>
  4037b4:	mov	x1, xzr
  4037b8:	mov	x0, x28
  4037bc:	bl	4029b0 <printf@plt>
  4037c0:	add	w21, w21, #0x1
  4037c4:	cmp	w20, w21
  4037c8:	b.eq	403874 <feof@plt+0xea4>  // b.none
  4037cc:	tst	w21, #0x7
  4037d0:	b.ne	403844 <feof@plt+0xe74>  // b.any
  4037d4:	mov	w0, #0xa                   	// #10
  4037d8:	bl	4025f0 <putchar@plt>
  4037dc:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4037e0:	ldr	w8, [x8, #1380]
  4037e4:	cmp	w8, #0x0
  4037e8:	b.le	403890 <feof@plt+0xec0>
  4037ec:	ldp	w25, w26, [x24]
  4037f0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4037f4:	add	x0, x0, #0x20f
  4037f8:	mov	x1, x19
  4037fc:	bl	4029b0 <printf@plt>
  403800:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403804:	ldrb	w8, [x8, #1412]
  403808:	cmp	w8, #0x1
  40380c:	b.ne	403820 <feof@plt+0xe50>  // b.any
  403810:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403814:	add	w1, w26, w25
  403818:	add	x0, x0, #0x213
  40381c:	bl	4029b0 <printf@plt>
  403820:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  403824:	adrp	x2, 450000 <feof@plt+0x4d630>
  403828:	add	x0, x0, #0xfa5
  40382c:	mov	w1, w22
  403830:	add	x2, x2, #0xe48
  403834:	bl	4029b0 <printf@plt>
  403838:	mov	x0, x27
  40383c:	mov	w1, w21
  403840:	bl	4029b0 <printf@plt>
  403844:	mov	w0, #0x2                   	// #2
  403848:	bl	4035f0 <feof@plt+0xc20>
  40384c:	cbz	x0, 4037b4 <feof@plt+0xde4>
  403850:	ldp	w8, w10, [x0]
  403854:	ldr	w9, [x23, #1384]
  403858:	rev	w11, w8
  40385c:	cmp	w9, #0x0
  403860:	rev	w9, w10
  403864:	csel	w1, w8, w11, eq  // eq = none
  403868:	csel	w8, w10, w9, eq  // eq = none
  40386c:	bfi	x1, x8, #32, #32
  403870:	b	4037b8 <feof@plt+0xde8>
  403874:	ldp	x20, x19, [sp, #80]
  403878:	ldp	x22, x21, [sp, #64]
  40387c:	ldp	x24, x23, [sp, #48]
  403880:	ldp	x26, x25, [sp, #32]
  403884:	ldp	x28, x27, [sp, #16]
  403888:	ldp	x29, x30, [sp], #96
  40388c:	ret
  403890:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403894:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  403898:	add	x0, x0, #0x4f
  40389c:	add	x2, x2, #0x70
  4038a0:	mov	w1, #0x4a                  	// #74
  4038a4:	bl	404ac4 <feof@plt+0x20f4>
  4038a8:	stp	x29, x30, [sp, #-64]!
  4038ac:	stp	x24, x23, [sp, #16]
  4038b0:	stp	x22, x21, [sp, #32]
  4038b4:	stp	x20, x19, [sp, #48]
  4038b8:	mov	x29, sp
  4038bc:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  4038c0:	ldr	w8, [x20, #1380]
  4038c4:	cmp	w8, #0x0
  4038c8:	b.le	403b54 <feof@plt+0x1184>
  4038cc:	mov	w19, w2
  4038d0:	cbz	w2, 403908 <feof@plt+0xf38>
  4038d4:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  4038d8:	add	x21, x21, #0x550
  4038dc:	ldp	w24, w23, [x21]
  4038e0:	mov	w0, #0x1                   	// #1
  4038e4:	bl	4035f0 <feof@plt+0xc20>
  4038e8:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  4038ec:	cbz	x0, 403914 <feof@plt+0xf44>
  4038f0:	ldr	w8, [x0]
  4038f4:	ldr	w9, [x22, #1384]
  4038f8:	rev	w10, w8
  4038fc:	cmp	w9, #0x0
  403900:	csel	w1, w8, w10, eq  // eq = none
  403904:	b	403918 <feof@plt+0xf48>
  403908:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40390c:	add	x0, x0, #0x134
  403910:	b	403b2c <feof@plt+0x115c>
  403914:	mov	w1, wzr
  403918:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40391c:	add	x0, x0, #0x141
  403920:	bl	4029b0 <printf@plt>
  403924:	mov	w0, #0x1                   	// #1
  403928:	bl	4035f0 <feof@plt+0xc20>
  40392c:	cbz	x0, 403948 <feof@plt+0xf78>
  403930:	ldr	w8, [x0]
  403934:	ldr	w9, [x22, #1384]
  403938:	rev	w10, w8
  40393c:	cmp	w9, #0x0
  403940:	csel	w1, w8, w10, eq  // eq = none
  403944:	b	40394c <feof@plt+0xf7c>
  403948:	mov	w1, wzr
  40394c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403950:	add	x0, x0, #0x14b
  403954:	bl	4029b0 <printf@plt>
  403958:	mov	w0, #0x1                   	// #1
  40395c:	bl	4035f0 <feof@plt+0xc20>
  403960:	cbz	x0, 40397c <feof@plt+0xfac>
  403964:	ldr	w8, [x0]
  403968:	ldr	w9, [x22, #1384]
  40396c:	rev	w10, w8
  403970:	cmp	w9, #0x0
  403974:	csel	w1, w8, w10, eq  // eq = none
  403978:	b	403980 <feof@plt+0xfb0>
  40397c:	mov	w1, wzr
  403980:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403984:	add	x0, x0, #0x164
  403988:	bl	4029b0 <printf@plt>
  40398c:	ldr	w8, [x20, #1380]
  403990:	cmp	w8, #0x0
  403994:	b.le	403b54 <feof@plt+0x1184>
  403998:	ldp	w8, w9, [x21]
  40399c:	add	w10, w24, w23
  4039a0:	add	w8, w9, w8
  4039a4:	sub	x8, x8, x10
  4039a8:	cmp	x8, w19, uxtw
  4039ac:	b.cs	403b40 <feof@plt+0x1170>  // b.hs, b.nlast
  4039b0:	mov	w0, #0x1                   	// #1
  4039b4:	bl	4035f0 <feof@plt+0xc20>
  4039b8:	cbz	x0, 4039e0 <feof@plt+0x1010>
  4039bc:	ldr	w8, [x0]
  4039c0:	ldr	w9, [x22, #1384]
  4039c4:	rev	w10, w8
  4039c8:	cmp	w9, #0x0
  4039cc:	csel	w0, w8, w10, eq  // eq = none
  4039d0:	cbz	w0, 4039dc <feof@plt+0x100c>
  4039d4:	bl	4035f0 <feof@plt+0xc20>
  4039d8:	b	4039e0 <feof@plt+0x1010>
  4039dc:	mov	x0, xzr
  4039e0:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  4039e4:	add	x19, x19, #0x181
  4039e8:	cmp	x0, #0x0
  4039ec:	csel	x1, x19, x0, eq  // eq = none
  4039f0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4039f4:	add	x0, x0, #0x17a
  4039f8:	bl	4029b0 <printf@plt>
  4039fc:	mov	w0, #0x1                   	// #1
  403a00:	bl	4035f0 <feof@plt+0xc20>
  403a04:	cbz	x0, 403a20 <feof@plt+0x1050>
  403a08:	ldr	w8, [x0]
  403a0c:	ldr	w9, [x22, #1384]
  403a10:	rev	w10, w8
  403a14:	cmp	w9, #0x0
  403a18:	csel	w23, w8, w10, eq  // eq = none
  403a1c:	b	403a24 <feof@plt+0x1054>
  403a20:	mov	w23, wzr
  403a24:	mov	w0, #0x1                   	// #1
  403a28:	bl	4035f0 <feof@plt+0xc20>
  403a2c:	cbz	x0, 403a54 <feof@plt+0x1084>
  403a30:	ldr	w8, [x0]
  403a34:	ldr	w9, [x22, #1384]
  403a38:	rev	w10, w8
  403a3c:	cmp	w9, #0x0
  403a40:	csel	w0, w8, w10, eq  // eq = none
  403a44:	cbz	w0, 403a50 <feof@plt+0x1080>
  403a48:	bl	4035f0 <feof@plt+0xc20>
  403a4c:	b	403a54 <feof@plt+0x1084>
  403a50:	mov	x0, xzr
  403a54:	cmp	x0, #0x0
  403a58:	csel	x1, x19, x0, eq  // eq = none
  403a5c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  403a60:	add	x0, x0, #0xf6b
  403a64:	bl	4029b0 <printf@plt>
  403a68:	mov	w0, #0x1                   	// #1
  403a6c:	bl	4035f0 <feof@plt+0xc20>
  403a70:	cbz	x0, 403a8c <feof@plt+0x10bc>
  403a74:	ldr	w8, [x0]
  403a78:	ldr	w9, [x22, #1384]
  403a7c:	rev	w10, w8
  403a80:	cmp	w9, #0x0
  403a84:	csel	w19, w8, w10, eq  // eq = none
  403a88:	b	403a90 <feof@plt+0x10c0>
  403a8c:	mov	w19, wzr
  403a90:	mov	w0, #0x1                   	// #1
  403a94:	bl	4035f0 <feof@plt+0xc20>
  403a98:	cbz	x0, 403ab4 <feof@plt+0x10e4>
  403a9c:	ldr	w8, [x0]
  403aa0:	ldr	w9, [x22, #1384]
  403aa4:	rev	w10, w8
  403aa8:	cmp	w9, #0x0
  403aac:	csel	w20, w8, w10, eq  // eq = none
  403ab0:	b	403ab8 <feof@plt+0x10e8>
  403ab4:	mov	w20, wzr
  403ab8:	mov	w0, #0x1                   	// #1
  403abc:	bl	4035f0 <feof@plt+0xc20>
  403ac0:	cbz	x0, 403adc <feof@plt+0x110c>
  403ac4:	ldr	w8, [x0]
  403ac8:	ldr	w9, [x22, #1384]
  403acc:	rev	w10, w8
  403ad0:	cmp	w9, #0x0
  403ad4:	csel	w21, w8, w10, eq  // eq = none
  403ad8:	b	403ae0 <feof@plt+0x1110>
  403adc:	mov	w21, wzr
  403ae0:	mov	w0, #0x1                   	// #1
  403ae4:	bl	4035f0 <feof@plt+0xc20>
  403ae8:	cbz	x0, 403b04 <feof@plt+0x1134>
  403aec:	ldr	w8, [x0]
  403af0:	ldr	w9, [x22, #1384]
  403af4:	rev	w10, w8
  403af8:	cmp	w9, #0x0
  403afc:	csel	w4, w8, w10, eq  // eq = none
  403b00:	b	403b08 <feof@plt+0x1138>
  403b04:	mov	w4, wzr
  403b08:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403b0c:	add	x0, x0, #0x186
  403b10:	mov	w1, w19
  403b14:	mov	w2, w20
  403b18:	mov	w3, w21
  403b1c:	bl	4029b0 <printf@plt>
  403b20:	cbz	w23, 403b40 <feof@plt+0x1170>
  403b24:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403b28:	add	x0, x0, #0x193
  403b2c:	ldp	x20, x19, [sp, #48]
  403b30:	ldp	x22, x21, [sp, #32]
  403b34:	ldp	x24, x23, [sp, #16]
  403b38:	ldp	x29, x30, [sp], #64
  403b3c:	b	4029b0 <printf@plt>
  403b40:	ldp	x20, x19, [sp, #48]
  403b44:	ldp	x22, x21, [sp, #32]
  403b48:	ldp	x24, x23, [sp, #16]
  403b4c:	ldp	x29, x30, [sp], #64
  403b50:	ret
  403b54:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403b58:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  403b5c:	add	x0, x0, #0x4f
  403b60:	add	x2, x2, #0x70
  403b64:	mov	w1, #0x4a                  	// #74
  403b68:	bl	404ac4 <feof@plt+0x20f4>
  403b6c:	stp	x29, x30, [sp, #-16]!
  403b70:	mov	x29, sp
  403b74:	mov	w0, #0x1                   	// #1
  403b78:	bl	4035f0 <feof@plt+0xc20>
  403b7c:	cbz	x0, 403b9c <feof@plt+0x11cc>
  403b80:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  403b84:	ldr	w8, [x0]
  403b88:	ldr	w9, [x9, #1384]
  403b8c:	rev	w10, w8
  403b90:	cmp	w9, #0x0
  403b94:	csel	w1, w8, w10, eq  // eq = none
  403b98:	b	403ba0 <feof@plt+0x11d0>
  403b9c:	mov	w1, wzr
  403ba0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403ba4:	add	x0, x0, #0x1a0
  403ba8:	ldp	x29, x30, [sp], #16
  403bac:	b	4029b0 <printf@plt>
  403bb0:	stp	x29, x30, [sp, #-96]!
  403bb4:	stp	x28, x27, [sp, #16]
  403bb8:	stp	x26, x25, [sp, #32]
  403bbc:	stp	x24, x23, [sp, #48]
  403bc0:	stp	x22, x21, [sp, #64]
  403bc4:	stp	x20, x19, [sp, #80]
  403bc8:	mov	x29, sp
  403bcc:	sub	w8, w2, #0x1
  403bd0:	mov	x19, x0
  403bd4:	lsr	w20, w8, #1
  403bd8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403bdc:	add	x0, x0, #0x1ab
  403be0:	mov	w1, w20
  403be4:	mov	w22, w3
  403be8:	bl	4029b0 <printf@plt>
  403bec:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403bf0:	ldrb	w8, [x8, #1408]
  403bf4:	cmp	w8, #0x1
  403bf8:	b.ne	403d98 <feof@plt+0x13c8>  // b.any
  403bfc:	mov	w0, #0x1                   	// #1
  403c00:	bl	4035f0 <feof@plt+0xc20>
  403c04:	adrp	x25, 476000 <_obstack_memory_used@@Base+0x25a68>
  403c08:	cbz	x0, 403c28 <feof@plt+0x1258>
  403c0c:	ldr	w8, [x0]
  403c10:	ldr	w9, [x25, #1384]
  403c14:	rev	w10, w8
  403c18:	cmp	w9, #0x0
  403c1c:	csel	w21, w8, w10, eq  // eq = none
  403c20:	cbnz	w20, 403c30 <feof@plt+0x1260>
  403c24:	b	403d98 <feof@plt+0x13c8>
  403c28:	mov	w21, wzr
  403c2c:	cbz	w20, 403d98 <feof@plt+0x13c8>
  403c30:	adrp	x27, 476000 <_obstack_memory_used@@Base+0x25a68>
  403c34:	adrp	x28, 451000 <_obstack_memory_used@@Base+0xa68>
  403c38:	mov	w26, wzr
  403c3c:	lsl	w22, w22, #1
  403c40:	add	x27, x27, #0x550
  403c44:	add	x28, x28, #0x1cc
  403c48:	b	403c60 <feof@plt+0x1290>
  403c4c:	mov	w0, #0x29                  	// #41
  403c50:	bl	4025f0 <putchar@plt>
  403c54:	add	w26, w26, #0x1
  403c58:	cmp	w20, w26
  403c5c:	b.eq	403d98 <feof@plt+0x13c8>  // b.none
  403c60:	tst	w26, #0x3
  403c64:	b.ne	403cdc <feof@plt+0x130c>  // b.any
  403c68:	mov	w0, #0xa                   	// #10
  403c6c:	bl	4025f0 <putchar@plt>
  403c70:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403c74:	ldr	w8, [x8, #1380]
  403c78:	cmp	w8, #0x0
  403c7c:	b.le	403db4 <feof@plt+0x13e4>
  403c80:	ldp	w23, w24, [x27]
  403c84:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403c88:	add	x0, x0, #0x20f
  403c8c:	mov	x1, x19
  403c90:	bl	4029b0 <printf@plt>
  403c94:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403c98:	ldrb	w8, [x8, #1412]
  403c9c:	cmp	w8, #0x1
  403ca0:	b.ne	403cb4 <feof@plt+0x12e4>  // b.any
  403ca4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403ca8:	add	w1, w24, w23
  403cac:	add	x0, x0, #0x213
  403cb0:	bl	4029b0 <printf@plt>
  403cb4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  403cb8:	adrp	x2, 450000 <feof@plt+0x4d630>
  403cbc:	add	x0, x0, #0xfa5
  403cc0:	mov	w1, w22
  403cc4:	add	x2, x2, #0xe48
  403cc8:	bl	4029b0 <printf@plt>
  403ccc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403cd0:	add	x0, x0, #0x1b4
  403cd4:	mov	w1, w21
  403cd8:	bl	4029b0 <printf@plt>
  403cdc:	mov	w0, #0x1                   	// #1
  403ce0:	bl	4035f0 <feof@plt+0xc20>
  403ce4:	cbz	x0, 403d00 <feof@plt+0x1330>
  403ce8:	ldr	w8, [x0]
  403cec:	ldr	w9, [x25, #1384]
  403cf0:	rev	w10, w8
  403cf4:	cmp	w9, #0x0
  403cf8:	csel	w23, w8, w10, eq  // eq = none
  403cfc:	b	403d04 <feof@plt+0x1334>
  403d00:	mov	w23, wzr
  403d04:	mov	w0, #0x1                   	// #1
  403d08:	bl	4035f0 <feof@plt+0xc20>
  403d0c:	cbz	x0, 403d4c <feof@plt+0x137c>
  403d10:	ldr	w8, [x0]
  403d14:	ldr	w9, [x25, #1384]
  403d18:	mov	x0, x28
  403d1c:	mov	w1, w23
  403d20:	rev	w10, w8
  403d24:	cmp	w9, #0x0
  403d28:	csel	w24, w8, w10, eq  // eq = none
  403d2c:	mov	w2, w24
  403d30:	bl	4029b0 <printf@plt>
  403d34:	cbz	w24, 403c54 <feof@plt+0x1284>
  403d38:	mov	w1, #0x28                  	// #40
  403d3c:	tbnz	w24, #0, 403d60 <feof@plt+0x1390>
  403d40:	tbnz	w24, #1, 403d74 <feof@plt+0x13a4>
  403d44:	tbz	w24, #2, 403c4c <feof@plt+0x127c>
  403d48:	b	403d88 <feof@plt+0x13b8>
  403d4c:	mov	x0, x28
  403d50:	mov	w1, w23
  403d54:	mov	w2, wzr
  403d58:	bl	4029b0 <printf@plt>
  403d5c:	b	403c54 <feof@plt+0x1284>
  403d60:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403d64:	add	x0, x0, #0x1d5
  403d68:	bl	4029b0 <printf@plt>
  403d6c:	mov	w1, #0x2c                  	// #44
  403d70:	tbz	w24, #1, 403d44 <feof@plt+0x1374>
  403d74:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403d78:	add	x0, x0, #0x1dc
  403d7c:	bl	4029b0 <printf@plt>
  403d80:	mov	w1, #0x2c                  	// #44
  403d84:	tbz	w24, #2, 403c4c <feof@plt+0x127c>
  403d88:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403d8c:	add	x0, x0, #0x1e3
  403d90:	bl	4029b0 <printf@plt>
  403d94:	b	403c4c <feof@plt+0x127c>
  403d98:	ldp	x20, x19, [sp, #80]
  403d9c:	ldp	x22, x21, [sp, #64]
  403da0:	ldp	x24, x23, [sp, #48]
  403da4:	ldp	x26, x25, [sp, #32]
  403da8:	ldp	x28, x27, [sp, #16]
  403dac:	ldp	x29, x30, [sp], #96
  403db0:	ret
  403db4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403db8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  403dbc:	add	x0, x0, #0x4f
  403dc0:	add	x2, x2, #0x70
  403dc4:	mov	w1, #0x4a                  	// #74
  403dc8:	bl	404ac4 <feof@plt+0x20f4>
  403dcc:	stp	x29, x30, [sp, #-96]!
  403dd0:	stp	x28, x27, [sp, #16]
  403dd4:	stp	x26, x25, [sp, #32]
  403dd8:	stp	x24, x23, [sp, #48]
  403ddc:	stp	x22, x21, [sp, #64]
  403de0:	stp	x20, x19, [sp, #80]
  403de4:	mov	x29, sp
  403de8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403dec:	ldrb	w8, [x8, #1408]
  403df0:	cmp	w8, #0x1
  403df4:	b.ne	403f84 <feof@plt+0x15b4>  // b.any
  403df8:	mov	x19, x0
  403dfc:	mov	w0, #0x1                   	// #1
  403e00:	mov	w21, w3
  403e04:	bl	4035f0 <feof@plt+0xc20>
  403e08:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  403e0c:	cbz	x0, 403e28 <feof@plt+0x1458>
  403e10:	ldr	w8, [x0]
  403e14:	ldr	w9, [x22, #1384]
  403e18:	rev	w10, w8
  403e1c:	cmp	w9, #0x0
  403e20:	csel	w20, w8, w10, eq  // eq = none
  403e24:	b	403e2c <feof@plt+0x145c>
  403e28:	mov	w20, wzr
  403e2c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403e30:	ldr	w8, [x8, #1380]
  403e34:	cmp	w8, #0x1
  403e38:	b.lt	403fa0 <feof@plt+0x15d0>  // b.tstop
  403e3c:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x25a68>
  403e40:	mov	x27, xzr
  403e44:	lsl	w21, w21, #1
  403e48:	add	x26, x26, #0x550
  403e4c:	b	403e80 <feof@plt+0x14b0>
  403e50:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403e54:	add	x0, x0, #0x1ea
  403e58:	mov	x1, x27
  403e5c:	mov	w2, w28
  403e60:	bl	4029b0 <printf@plt>
  403e64:	adrp	x27, 451000 <_obstack_memory_used@@Base+0xa68>
  403e68:	add	x27, x27, #0x1ef
  403e6c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403e70:	ldr	w8, [x8, #1380]
  403e74:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  403e78:	cmp	w8, #0x0
  403e7c:	b.le	403fa0 <feof@plt+0x15d0>
  403e80:	ldp	w25, w24, [x26]
  403e84:	mov	w0, #0x1                   	// #1
  403e88:	bl	4035f0 <feof@plt+0xc20>
  403e8c:	cbz	x0, 403eb8 <feof@plt+0x14e8>
  403e90:	ldr	w8, [x0]
  403e94:	ldr	w9, [x22, #1384]
  403e98:	rev	w10, w8
  403e9c:	cmp	w9, #0x0
  403ea0:	csel	w28, w8, w10, eq  // eq = none
  403ea4:	cbz	w28, 403eb8 <feof@plt+0x14e8>
  403ea8:	cbnz	x27, 403e50 <feof@plt+0x1480>
  403eac:	mov	x22, xzr
  403eb0:	mov	w23, #0x1                   	// #1
  403eb4:	b	403ef0 <feof@plt+0x1520>
  403eb8:	mov	w0, #0x1                   	// #1
  403ebc:	bl	4035f0 <feof@plt+0xc20>
  403ec0:	cbz	x0, 403f84 <feof@plt+0x15b4>
  403ec4:	ldr	w8, [x0]
  403ec8:	ldr	w9, [x22, #1384]
  403ecc:	rev	w10, w8
  403ed0:	cmp	w9, #0x0
  403ed4:	csel	w0, w8, w10, eq  // eq = none
  403ed8:	cbz	w0, 403f84 <feof@plt+0x15b4>
  403edc:	bl	4035f0 <feof@plt+0xc20>
  403ee0:	cbz	x0, 403f84 <feof@plt+0x15b4>
  403ee4:	mov	x22, x0
  403ee8:	mov	w28, wzr
  403eec:	mov	w23, wzr
  403ef0:	mov	w0, #0xa                   	// #10
  403ef4:	bl	4025f0 <putchar@plt>
  403ef8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403efc:	add	x0, x0, #0x20f
  403f00:	mov	x1, x19
  403f04:	bl	4029b0 <printf@plt>
  403f08:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  403f0c:	ldrb	w8, [x8, #1412]
  403f10:	cmp	w8, #0x1
  403f14:	b.ne	403f2c <feof@plt+0x155c>  // b.any
  403f18:	add	w8, w24, w25
  403f1c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403f20:	mov	w1, w8
  403f24:	add	x0, x0, #0x213
  403f28:	bl	4029b0 <printf@plt>
  403f2c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  403f30:	adrp	x2, 450000 <feof@plt+0x4d630>
  403f34:	add	x0, x0, #0xfa5
  403f38:	mov	w1, w21
  403f3c:	add	x2, x2, #0xe48
  403f40:	bl	4029b0 <printf@plt>
  403f44:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403f48:	add	x0, x0, #0x1b4
  403f4c:	mov	w1, w20
  403f50:	bl	4029b0 <printf@plt>
  403f54:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0xaa68>
  403f58:	add	x27, x27, #0xb34
  403f5c:	cbnz	w23, 403e50 <feof@plt+0x1480>
  403f60:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403f64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  403f68:	add	x0, x0, #0x1f2
  403f6c:	add	x1, x1, #0xb34
  403f70:	mov	x2, x22
  403f74:	bl	4029b0 <printf@plt>
  403f78:	adrp	x27, 45d000 <_obstack_memory_used@@Base+0xca68>
  403f7c:	add	x27, x27, #0xa81
  403f80:	b	403e6c <feof@plt+0x149c>
  403f84:	ldp	x20, x19, [sp, #80]
  403f88:	ldp	x22, x21, [sp, #64]
  403f8c:	ldp	x24, x23, [sp, #48]
  403f90:	ldp	x26, x25, [sp, #32]
  403f94:	ldp	x28, x27, [sp, #16]
  403f98:	ldp	x29, x30, [sp], #96
  403f9c:	ret
  403fa0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  403fa4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  403fa8:	add	x0, x0, #0x4f
  403fac:	add	x2, x2, #0x70
  403fb0:	mov	w1, #0x4a                  	// #74
  403fb4:	bl	404ac4 <feof@plt+0x20f4>
  403fb8:	stp	x29, x30, [sp, #-32]!
  403fbc:	stp	x20, x19, [sp, #16]
  403fc0:	mov	x29, sp
  403fc4:	mov	w0, #0x1                   	// #1
  403fc8:	bl	4035f0 <feof@plt+0xc20>
  403fcc:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  403fd0:	cbz	x0, 403fec <feof@plt+0x161c>
  403fd4:	ldr	w8, [x0]
  403fd8:	ldr	w9, [x20, #1384]
  403fdc:	rev	w10, w8
  403fe0:	cmp	w9, #0x0
  403fe4:	csel	w19, w8, w10, eq  // eq = none
  403fe8:	b	403ff0 <feof@plt+0x1620>
  403fec:	mov	w19, wzr
  403ff0:	mov	w0, #0x1                   	// #1
  403ff4:	bl	4035f0 <feof@plt+0xc20>
  403ff8:	cbz	x0, 404014 <feof@plt+0x1644>
  403ffc:	ldr	w8, [x0]
  404000:	ldr	w9, [x20, #1384]
  404004:	rev	w10, w8
  404008:	cmp	w9, #0x0
  40400c:	csel	w2, w8, w10, eq  // eq = none
  404010:	b	404018 <feof@plt+0x1648>
  404014:	mov	x2, xzr
  404018:	mov	w1, w19
  40401c:	ldp	x20, x19, [sp, #16]
  404020:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404024:	add	x0, x0, #0x1f9
  404028:	ldp	x29, x30, [sp], #32
  40402c:	b	4029b0 <printf@plt>
  404030:	stp	x29, x30, [sp, #-16]!
  404034:	mov	x29, sp
  404038:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  40403c:	mov	x8, x0
  404040:	mov	w9, wzr
  404044:	mov	w0, #0x1e                  	// #30
  404048:	add	x10, x10, #0x3e4
  40404c:	sub	w11, w0, w9
  404050:	add	w11, w9, w11, lsr #1
  404054:	lsl	x12, x11, #4
  404058:	ldr	w12, [x10, x12]
  40405c:	cmp	x12, x8
  404060:	csel	w0, w0, w11, cc  // cc = lo, ul, last
  404064:	csinc	w9, w9, w11, cs  // cs = hs, nlast
  404068:	cmp	w0, w9
  40406c:	b.ne	40404c <feof@plt+0x167c>  // b.any
  404070:	mov	w9, w0
  404074:	lsl	x9, x9, #4
  404078:	ldr	w9, [x10, x9]
  40407c:	cmp	x9, x8
  404080:	b.cc	40408c <feof@plt+0x16bc>  // b.lo, b.ul, b.last
  404084:	ldp	x29, x30, [sp], #16
  404088:	ret
  40408c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404090:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404094:	add	x0, x0, #0x5c4
  404098:	add	x2, x2, #0x5db
  40409c:	mov	w1, #0x60                  	// #96
  4040a0:	bl	404ac4 <feof@plt+0x20f4>
  4040a4:	stp	x29, x30, [sp, #-32]!
  4040a8:	str	x19, [sp, #16]
  4040ac:	mov	x29, sp
  4040b0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4040b4:	add	x8, x8, #0x5c0
  4040b8:	ldarb	w8, [x8]
  4040bc:	tbz	w8, #0, 4040d4 <feof@plt+0x1704>
  4040c0:	ldr	x19, [sp, #16]
  4040c4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  4040c8:	add	x0, x0, #0x588
  4040cc:	ldp	x29, x30, [sp], #32
  4040d0:	ret
  4040d4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  4040d8:	add	x0, x0, #0x5c0
  4040dc:	bl	4028f0 <__cxa_guard_acquire@plt>
  4040e0:	cbz	w0, 4040c0 <feof@plt+0x16f0>
  4040e4:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4040e8:	add	x19, x19, #0x588
  4040ec:	mov	x0, x19
  4040f0:	bl	404120 <feof@plt+0x1750>
  4040f4:	adrp	x0, 404000 <feof@plt+0x1630>
  4040f8:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x25a68>
  4040fc:	add	x0, x0, #0x384
  404100:	add	x2, x2, #0x360
  404104:	mov	x1, x19
  404108:	bl	402730 <__cxa_atexit@plt>
  40410c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  404110:	add	x0, x0, #0x5c0
  404114:	bl	402550 <__cxa_guard_release@plt>
  404118:	b	4040c0 <feof@plt+0x16f0>
  40411c:	ret
  404120:	stp	x29, x30, [sp, #-64]!
  404124:	str	x23, [sp, #16]
  404128:	stp	x22, x21, [sp, #32]
  40412c:	stp	x20, x19, [sp, #48]
  404130:	mov	x29, sp
  404134:	mov	x19, x0
  404138:	mov	w0, #0x30                  	// #48
  40413c:	bl	4026a0 <_Znwm@plt>
  404140:	mov	x20, x0
  404144:	mov	w8, wzr
  404148:	mov	w23, #0x1e                  	// #30
  40414c:	stp	xzr, xzr, [x0, #24]
  404150:	str	xzr, [x0, #16]
  404154:	strb	wzr, [x0, #44]
  404158:	sub	w9, w23, w8
  40415c:	add	w9, w8, w9, lsr #1
  404160:	cmp	w9, #0x0
  404164:	csel	w23, w23, w9, eq  // eq = none
  404168:	csinc	w8, w8, wzr, ne  // ne = any
  40416c:	cmp	w23, w8
  404170:	b.ne	404158 <feof@plt+0x1788>  // b.any
  404174:	cbz	w23, 404354 <feof@plt+0x1984>
  404178:	mov	w8, w23
  40417c:	adrp	x22, 451000 <_obstack_memory_used@@Base+0xa68>
  404180:	lsl	x8, x8, #4
  404184:	add	x22, x22, #0x3e4
  404188:	ldr	w21, [x22, x8]
  40418c:	mov	w1, #0x10                  	// #16
  404190:	mov	x0, x21
  404194:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  404198:	cbz	x0, 40436c <feof@plt+0x199c>
  40419c:	and	x8, x21, #0xfffffffe
  4041a0:	add	x9, x0, #0x10
  4041a4:	mov	x10, x8
  4041a8:	stur	xzr, [x9, #-16]
  4041ac:	str	xzr, [x9], #32
  4041b0:	subs	x10, x10, #0x2
  4041b4:	b.ne	4041a8 <feof@plt+0x17d8>  // b.any
  4041b8:	cmp	x8, x21
  4041bc:	b.eq	4041dc <feof@plt+0x180c>  // b.none
  4041c0:	lsl	x9, x21, #4
  4041c4:	and	x9, x9, #0xfffffffe0
  4041c8:	sub	x8, x21, x8
  4041cc:	add	x9, x0, x9
  4041d0:	subs	x8, x8, #0x1
  4041d4:	str	xzr, [x9], #16
  4041d8:	b.ne	4041d0 <feof@plt+0x1800>  // b.any
  4041dc:	stp	x0, x21, [x20]
  4041e0:	mov	w0, #0x30                  	// #48
  4041e4:	str	w23, [x20, #40]
  4041e8:	str	x20, [x19, #40]
  4041ec:	bl	4026a0 <_Znwm@plt>
  4041f0:	mov	x20, x0
  4041f4:	mov	w8, wzr
  4041f8:	mov	w23, #0x1e                  	// #30
  4041fc:	stp	xzr, xzr, [x0, #24]
  404200:	str	xzr, [x0, #16]
  404204:	strb	wzr, [x0, #44]
  404208:	sub	w9, w23, w8
  40420c:	add	w9, w8, w9, lsr #1
  404210:	cmp	w9, #0x0
  404214:	csel	w23, w23, w9, eq  // eq = none
  404218:	csinc	w8, w8, wzr, ne  // ne = any
  40421c:	cmp	w23, w8
  404220:	b.ne	404208 <feof@plt+0x1838>  // b.any
  404224:	cbz	w23, 404354 <feof@plt+0x1984>
  404228:	mov	w8, w23
  40422c:	lsl	x8, x8, #4
  404230:	ldr	w21, [x22, x8]
  404234:	mov	w1, #0x18                  	// #24
  404238:	mov	x0, x21
  40423c:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  404240:	cbz	x0, 40436c <feof@plt+0x199c>
  404244:	and	x8, x21, #0xfffffffe
  404248:	mov	x9, x8
  40424c:	mov	x10, x0
  404250:	str	xzr, [x10]
  404254:	str	xzr, [x10, #24]
  404258:	subs	x9, x9, #0x2
  40425c:	add	x10, x10, #0x30
  404260:	b.ne	404250 <feof@plt+0x1880>  // b.any
  404264:	cmp	x8, x21
  404268:	b.eq	404288 <feof@plt+0x18b8>  // b.none
  40426c:	lsr	x9, x21, #1
  404270:	mov	w10, #0x30                  	// #48
  404274:	sub	x8, x21, x8
  404278:	madd	x9, x9, x10, x0
  40427c:	subs	x8, x8, #0x1
  404280:	str	xzr, [x9], #24
  404284:	b.ne	40427c <feof@plt+0x18ac>  // b.any
  404288:	stp	x0, x21, [x20]
  40428c:	mov	w0, #0x30                  	// #48
  404290:	str	w23, [x20, #40]
  404294:	str	x20, [x19, #48]
  404298:	bl	4026a0 <_Znwm@plt>
  40429c:	mov	x20, x0
  4042a0:	mov	w8, wzr
  4042a4:	mov	w23, #0x1e                  	// #30
  4042a8:	stp	xzr, xzr, [x0, #24]
  4042ac:	str	xzr, [x0, #16]
  4042b0:	strb	wzr, [x0, #44]
  4042b4:	sub	w9, w23, w8
  4042b8:	add	w9, w8, w9, lsr #1
  4042bc:	cmp	w9, #0x0
  4042c0:	csel	w23, w23, w9, eq  // eq = none
  4042c4:	csinc	w8, w8, wzr, ne  // ne = any
  4042c8:	cmp	w23, w8
  4042cc:	b.ne	4042b4 <feof@plt+0x18e4>  // b.any
  4042d0:	cbz	w23, 404354 <feof@plt+0x1984>
  4042d4:	mov	w8, w23
  4042d8:	lsl	x8, x8, #4
  4042dc:	ldr	w21, [x22, x8]
  4042e0:	mov	w1, #0x18                  	// #24
  4042e4:	mov	x0, x21
  4042e8:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4042ec:	cbz	x0, 40436c <feof@plt+0x199c>
  4042f0:	and	x8, x21, #0xfffffffe
  4042f4:	mov	x9, x8
  4042f8:	mov	x10, x0
  4042fc:	str	xzr, [x10]
  404300:	str	xzr, [x10, #24]
  404304:	subs	x9, x9, #0x2
  404308:	add	x10, x10, #0x30
  40430c:	b.ne	4042fc <feof@plt+0x192c>  // b.any
  404310:	cmp	x8, x21
  404314:	b.eq	404334 <feof@plt+0x1964>  // b.none
  404318:	lsr	x9, x21, #1
  40431c:	mov	w10, #0x30                  	// #48
  404320:	sub	x8, x21, x8
  404324:	madd	x9, x9, x10, x0
  404328:	subs	x8, x8, #0x1
  40432c:	str	xzr, [x9], #24
  404330:	b.ne	404328 <feof@plt+0x1958>  // b.any
  404334:	stp	x0, x21, [x20]
  404338:	str	w23, [x20, #40]
  40433c:	str	x20, [x19]
  404340:	ldp	x20, x19, [sp, #48]
  404344:	ldp	x22, x21, [sp, #32]
  404348:	ldr	x23, [sp, #16]
  40434c:	ldp	x29, x30, [sp], #64
  404350:	ret
  404354:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404358:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40435c:	add	x0, x0, #0x5c4
  404360:	add	x2, x2, #0x5db
  404364:	mov	w1, #0x60                  	// #96
  404368:	bl	404ac4 <feof@plt+0x20f4>
  40436c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404370:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404374:	add	x0, x0, #0x5f9
  404378:	add	x2, x2, #0x610
  40437c:	mov	w1, #0x2b5                 	// #693
  404380:	bl	404ac4 <feof@plt+0x20f4>
  404384:	stp	x29, x30, [sp, #-48]!
  404388:	stp	x22, x21, [sp, #16]
  40438c:	stp	x20, x19, [sp, #32]
  404390:	mov	x29, sp
  404394:	ldr	x20, [x0, #40]
  404398:	mov	x19, x0
  40439c:	ldr	x8, [x20, #8]
  4043a0:	cmp	x8, #0x1
  4043a4:	b.lt	4043c8 <feof@plt+0x19f8>  // b.tstop
  4043a8:	ldr	x21, [x20]
  4043ac:	add	x22, x21, x8, lsl #4
  4043b0:	ldr	x8, [x21]
  4043b4:	cmp	x8, #0x1
  4043b8:	b.hi	4043d0 <feof@plt+0x1a00>  // b.pmore
  4043bc:	add	x21, x21, #0x10
  4043c0:	cmp	x21, x22
  4043c4:	b.cc	4043b0 <feof@plt+0x19e0>  // b.lo, b.ul, b.last
  4043c8:	mov	x21, xzr
  4043cc:	mov	x22, xzr
  4043d0:	orr	x8, x21, x22
  4043d4:	cbnz	x8, 404424 <feof@plt+0x1a54>
  4043d8:	cbnz	x20, 404460 <feof@plt+0x1a90>
  4043dc:	ldr	x20, [x19, #48]
  4043e0:	cbnz	x20, 4044b4 <feof@plt+0x1ae4>
  4043e4:	ldr	x19, [x19]
  4043e8:	cbz	x19, 4044f0 <feof@plt+0x1b20>
  4043ec:	ldr	x8, [x19, #8]
  4043f0:	mov	x9, x8
  4043f4:	sub	x9, x9, #0x1
  4043f8:	cmp	x9, x8
  4043fc:	b.cc	4043f4 <feof@plt+0x1a24>  // b.lo, b.ul, b.last
  404400:	ldrb	w8, [x19, #44]
  404404:	ldr	x0, [x19]
  404408:	cbz	w8, 404488 <feof@plt+0x1ab8>
  40440c:	bl	40455c <feof@plt+0x1b8c>
  404410:	b	40448c <feof@plt+0x1abc>
  404414:	mov	x22, xzr
  404418:	mov	x21, xzr
  40441c:	orr	x8, x21, x22
  404420:	cbz	x8, 404458 <feof@plt+0x1a88>
  404424:	ldr	x0, [x21]
  404428:	cbz	x0, 404430 <feof@plt+0x1a60>
  40442c:	bl	402670 <_ZdlPv@plt>
  404430:	ldr	x0, [x21, #8]
  404434:	cbz	x0, 40443c <feof@plt+0x1a6c>
  404438:	bl	402670 <_ZdlPv@plt>
  40443c:	add	x21, x21, #0x10
  404440:	cmp	x21, x22
  404444:	b.cs	404414 <feof@plt+0x1a44>  // b.hs, b.nlast
  404448:	ldr	x8, [x21]
  40444c:	cmp	x8, #0x1
  404450:	b.ls	40443c <feof@plt+0x1a6c>  // b.plast
  404454:	b	40441c <feof@plt+0x1a4c>
  404458:	ldr	x20, [x19, #40]
  40445c:	cbz	x20, 4043dc <feof@plt+0x1a0c>
  404460:	ldr	x8, [x20, #8]
  404464:	mov	x9, x8
  404468:	sub	x9, x9, #0x1
  40446c:	cmp	x9, x8
  404470:	b.cc	404468 <feof@plt+0x1a98>  // b.lo, b.ul, b.last
  404474:	ldrb	w8, [x20, #44]
  404478:	ldr	x0, [x20]
  40447c:	cbz	w8, 4044a0 <feof@plt+0x1ad0>
  404480:	bl	40455c <feof@plt+0x1b8c>
  404484:	b	4044a4 <feof@plt+0x1ad4>
  404488:	bl	4024c0 <free@plt>
  40448c:	mov	x0, x19
  404490:	ldp	x20, x19, [sp, #32]
  404494:	ldp	x22, x21, [sp, #16]
  404498:	ldp	x29, x30, [sp], #48
  40449c:	b	402670 <_ZdlPv@plt>
  4044a0:	bl	4024c0 <free@plt>
  4044a4:	mov	x0, x20
  4044a8:	bl	402670 <_ZdlPv@plt>
  4044ac:	ldr	x20, [x19, #48]
  4044b0:	cbz	x20, 4043e4 <feof@plt+0x1a14>
  4044b4:	ldr	x8, [x20, #8]
  4044b8:	mov	x9, x8
  4044bc:	sub	x9, x9, #0x1
  4044c0:	cmp	x9, x8
  4044c4:	b.cc	4044bc <feof@plt+0x1aec>  // b.lo, b.ul, b.last
  4044c8:	ldrb	w8, [x20, #44]
  4044cc:	ldr	x0, [x20]
  4044d0:	cbz	w8, 4044dc <feof@plt+0x1b0c>
  4044d4:	bl	40455c <feof@plt+0x1b8c>
  4044d8:	b	4044e0 <feof@plt+0x1b10>
  4044dc:	bl	4024c0 <free@plt>
  4044e0:	mov	x0, x20
  4044e4:	bl	402670 <_ZdlPv@plt>
  4044e8:	ldr	x19, [x19]
  4044ec:	cbnz	x19, 4043ec <feof@plt+0x1a1c>
  4044f0:	ldp	x20, x19, [sp, #32]
  4044f4:	ldp	x22, x21, [sp, #16]
  4044f8:	ldp	x29, x30, [sp], #48
  4044fc:	ret
  404500:	ret
  404504:	cbnz	x1, 40450c <feof@plt+0x1b3c>
  404508:	b	4506a4 <_obstack_memory_used@@Base+0x10c>
  40450c:	stp	x29, x30, [sp, #-16]!
  404510:	mov	x29, sp
  404514:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404518:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40451c:	add	x0, x0, #0x61e
  404520:	add	x2, x2, #0x633
  404524:	mov	w1, #0x2f                  	// #47
  404528:	bl	404ac4 <feof@plt+0x20f4>
  40452c:	cbnz	x1, 404538 <feof@plt+0x1b68>
  404530:	mov	w1, #0x1                   	// #1
  404534:	b	4506d8 <_obstack_memory_used@@Base+0x140>
  404538:	stp	x29, x30, [sp, #-16]!
  40453c:	mov	x29, sp
  404540:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404544:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404548:	add	x0, x0, #0x61e
  40454c:	add	x2, x2, #0x646
  404550:	mov	w1, #0x37                  	// #55
  404554:	bl	404ac4 <feof@plt+0x20f4>
  404558:	b	450728 <_obstack_memory_used@@Base+0x190>
  40455c:	b	4024c0 <free@plt>
  404560:	ret
  404564:	sub	sp, sp, #0x120
  404568:	stp	x29, x30, [sp, #256]
  40456c:	str	x28, [sp, #272]
  404570:	add	x29, sp, #0x100
  404574:	mov	x8, #0xffffffffffffffc8    	// #-56
  404578:	mov	x9, sp
  40457c:	sub	x10, x29, #0x78
  404580:	movk	x8, #0xff80, lsl #32
  404584:	add	x11, x29, #0x20
  404588:	add	x9, x9, #0x80
  40458c:	add	x10, x10, #0x38
  404590:	stp	x9, x8, [x29, #-16]
  404594:	stp	x11, x10, [x29, #-32]
  404598:	stp	x1, x2, [x29, #-120]
  40459c:	stp	x3, x4, [x29, #-104]
  4045a0:	stp	x5, x6, [x29, #-88]
  4045a4:	stur	x7, [x29, #-72]
  4045a8:	stp	q0, q1, [sp]
  4045ac:	ldp	q1, q0, [x29, #-32]
  4045b0:	sub	x1, x29, #0x40
  4045b4:	stp	q2, q3, [sp, #32]
  4045b8:	stp	q4, q5, [sp, #64]
  4045bc:	stp	q6, q7, [sp, #96]
  4045c0:	stp	q1, q0, [x29, #-64]
  4045c4:	bl	450878 <_obstack_memory_used@@Base+0x2e0>
  4045c8:	ldr	x28, [sp, #272]
  4045cc:	ldp	x29, x30, [sp, #256]
  4045d0:	add	sp, sp, #0x120
  4045d4:	ret
  4045d8:	stp	x29, x30, [sp, #-32]!
  4045dc:	stp	x20, x19, [sp, #16]
  4045e0:	mov	x29, sp
  4045e4:	ldr	x8, [x0]
  4045e8:	mov	x19, x0
  4045ec:	mov	x20, x1
  4045f0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4045f4:	ldrb	w0, [x8, #67]
  4045f8:	add	x1, x1, #0x780
  4045fc:	mov	w2, #0x5                   	// #5
  404600:	bl	407b70 <feof@plt+0x51a0>
  404604:	ldr	x8, [x19]
  404608:	mov	x19, x0
  40460c:	ldrb	w8, [x8, #67]
  404610:	mov	w0, w8
  404614:	bl	407bf4 <feof@plt+0x5224>
  404618:	mov	x1, x19
  40461c:	mov	x2, x20
  404620:	ldp	x20, x19, [sp, #16]
  404624:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  404628:	add	x8, x8, #0x786
  40462c:	mov	x3, x0
  404630:	mov	x0, x8
  404634:	ldp	x29, x30, [sp], #32
  404638:	b	404564 <feof@plt+0x1b94>
  40463c:	sub	sp, sp, #0x20
  404640:	stp	x29, x30, [sp, #16]
  404644:	add	x29, sp, #0x10
  404648:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40464c:	add	x0, x0, #0x78f
  404650:	bl	402870 <getenv@plt>
  404654:	cbz	x0, 40466c <feof@plt+0x1c9c>
  404658:	mov	w2, #0xa                   	// #10
  40465c:	mov	x1, xzr
  404660:	bl	4024a0 <strtol@plt>
  404664:	cmp	w0, #0x0
  404668:	b.gt	404698 <feof@plt+0x1cc8>
  40466c:	add	x2, sp, #0x8
  404670:	mov	w1, #0x5413                	// #21523
  404674:	mov	w0, wzr
  404678:	strh	wzr, [sp, #10]
  40467c:	bl	4025d0 <ioctl@plt>
  404680:	ldrh	w8, [sp, #10]
  404684:	mov	w9, #0x7fffffff            	// #2147483647
  404688:	cmp	w8, #0x0
  40468c:	csel	w8, w9, w8, eq  // eq = none
  404690:	cmp	w0, #0x0
  404694:	csel	w0, w8, w9, eq  // eq = none
  404698:	ldp	x29, x30, [sp, #16]
  40469c:	add	sp, sp, #0x20
  4046a0:	ret
  4046a4:	stp	x29, x30, [sp, #-32]!
  4046a8:	str	x19, [sp, #16]
  4046ac:	mov	x29, sp
  4046b0:	mov	x19, x0
  4046b4:	cbz	w1, 4046d8 <feof@plt+0x1d08>
  4046b8:	sub	w8, w1, #0x1
  4046bc:	cmp	w1, #0x2
  4046c0:	mov	w9, #0x7fffffff            	// #2147483647
  4046c4:	csel	w8, w9, w8, lt  // lt = tstop
  4046c8:	str	w8, [x19, #112]
  4046cc:	ldr	x19, [sp, #16]
  4046d0:	ldp	x29, x30, [sp], #32
  4046d4:	ret
  4046d8:	ldr	x8, [x19]
  4046dc:	ldr	x8, [x8, #8]
  4046e0:	ldr	x0, [x8, #192]
  4046e4:	bl	402700 <fileno_unlocked@plt>
  4046e8:	bl	402520 <isatty@plt>
  4046ec:	cbz	w0, 404748 <feof@plt+0x1d78>
  4046f0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4046f4:	add	x0, x0, #0x78f
  4046f8:	bl	402870 <getenv@plt>
  4046fc:	cbz	x0, 404718 <feof@plt+0x1d48>
  404700:	mov	w2, #0xa                   	// #10
  404704:	mov	x1, xzr
  404708:	bl	4024a0 <strtol@plt>
  40470c:	mov	x1, x0
  404710:	cmp	w1, #0x0
  404714:	b.gt	4046b8 <feof@plt+0x1ce8>
  404718:	add	x2, x29, #0x18
  40471c:	mov	w1, #0x5413                	// #21523
  404720:	mov	w0, wzr
  404724:	strh	wzr, [x29, #26]
  404728:	bl	4025d0 <ioctl@plt>
  40472c:	ldrh	w8, [x29, #26]
  404730:	mov	w9, #0x7fffffff            	// #2147483647
  404734:	cmp	w8, #0x0
  404738:	csel	w8, w9, w8, eq  // eq = none
  40473c:	cmp	w0, #0x0
  404740:	csel	w1, w8, w9, eq  // eq = none
  404744:	b	4046b8 <feof@plt+0x1ce8>
  404748:	mov	w8, #0x7fffffff            	// #2147483647
  40474c:	b	4046c8 <feof@plt+0x1cf8>
  404750:	stp	x29, x30, [sp, #-32]!
  404754:	stp	x20, x19, [sp, #16]
  404758:	mov	x29, sp
  40475c:	mov	x19, x0
  404760:	mov	w0, #0x48                  	// #72
  404764:	mov	w20, w1
  404768:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  40476c:	mov	w1, wzr
  404770:	str	x0, [x19]
  404774:	bl	40f9b8 <feof@plt+0xcfe8>
  404778:	movi	v0.2d, #0x0
  40477c:	sbfiz	x0, x20, #2, #32
  404780:	str	w20, [x19, #68]
  404784:	stur	q0, [x19, #49]
  404788:	stur	q0, [x19, #40]
  40478c:	stur	q0, [x19, #24]
  404790:	stur	q0, [x19, #8]
  404794:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  404798:	cmp	w20, #0x1
  40479c:	str	x0, [x19, #72]
  4047a0:	b.lt	4047cc <feof@plt+0x1dfc>  // b.tstop
  4047a4:	cmp	w20, #0x1
  4047a8:	str	wzr, [x0]
  4047ac:	b.eq	4047cc <feof@plt+0x1dfc>  // b.none
  4047b0:	mov	w8, w20
  4047b4:	mov	w9, #0x1                   	// #1
  4047b8:	ldr	x10, [x19, #72]
  4047bc:	str	wzr, [x10, x9, lsl #2]
  4047c0:	add	x9, x9, #0x1
  4047c4:	cmp	x8, x9
  4047c8:	b.ne	4047b8 <feof@plt+0x1de8>  // b.any
  4047cc:	ldr	x8, [x19]
  4047d0:	strb	wzr, [x19, #108]
  4047d4:	mov	x0, x19
  4047d8:	ldr	w1, [x8, #40]
  4047dc:	bl	4046a4 <feof@plt+0x1cd4>
  4047e0:	mov	w8, #0x5e                  	// #94
  4047e4:	mov	w9, #0x5e5e                	// #24158
  4047e8:	strb	w8, [x19, #118]
  4047ec:	adrp	x8, 404000 <feof@plt+0x1630>
  4047f0:	strh	w9, [x19, #116]
  4047f4:	adrp	x9, 404000 <feof@plt+0x1630>
  4047f8:	add	x8, x8, #0x854
  4047fc:	add	x9, x9, #0x8ac
  404800:	stp	x8, x9, [x19, #136]
  404804:	adrp	x8, 404000 <feof@plt+0x1630>
  404808:	add	x8, x8, #0x900
  40480c:	stp	x8, xzr, [x19, #152]
  404810:	adrp	x8, 404000 <feof@plt+0x1630>
  404814:	movi	v0.2d, #0x0
  404818:	add	x8, x8, #0x938
  40481c:	str	wzr, [x19, #132]
  404820:	stur	xzr, [x19, #119]
  404824:	stur	wzr, [x19, #127]
  404828:	stur	q0, [x19, #168]
  40482c:	stur	q0, [x19, #184]
  404830:	str	wzr, [x19, #200]
  404834:	stp	xzr, xzr, [x19, #208]
  404838:	stur	xzr, [x19, #222]
  40483c:	stur	q0, [x19, #232]
  404840:	stur	q0, [x19, #248]
  404844:	str	x8, [x19, #264]
  404848:	ldp	x20, x19, [sp, #16]
  40484c:	ldp	x29, x30, [sp], #32
  404850:	ret
  404854:	stp	x29, x30, [sp, #-48]!
  404858:	str	x21, [sp, #16]
  40485c:	stp	x20, x19, [sp, #32]
  404860:	mov	x29, sp
  404864:	mov	x19, x1
  404868:	mov	x20, x0
  40486c:	mov	x0, x1
  404870:	mov	w1, wzr
  404874:	bl	40d4ac <feof@plt+0xaadc>
  404878:	mov	w1, w0
  40487c:	mov	x0, x20
  404880:	bl	40521c <feof@plt+0x284c>
  404884:	ldr	x21, [x20]
  404888:	mov	x0, x20
  40488c:	mov	x1, x19
  404890:	bl	404b7c <feof@plt+0x21ac>
  404894:	mov	x1, x0
  404898:	mov	x0, x21
  40489c:	ldp	x20, x19, [sp, #32]
  4048a0:	ldr	x21, [sp, #16]
  4048a4:	ldp	x29, x30, [sp], #48
  4048a8:	b	40f800 <feof@plt+0xce30>
  4048ac:	sub	sp, sp, #0x40
  4048b0:	stp	x29, x30, [sp, #32]
  4048b4:	stp	x20, x19, [sp, #48]
  4048b8:	add	x29, sp, #0x20
  4048bc:	ldp	q1, q0, [x1]
  4048c0:	mov	x1, sp
  4048c4:	mov	x19, x0
  4048c8:	stp	q1, q0, [sp]
  4048cc:	bl	404ca0 <feof@plt+0x22d0>
  4048d0:	ldr	x8, [x19]
  4048d4:	mov	x20, x0
  4048d8:	mov	x1, x20
  4048dc:	mov	x0, x8
  4048e0:	bl	40f384 <feof@plt+0xc9b4>
  4048e4:	mov	x0, x20
  4048e8:	bl	4024c0 <free@plt>
  4048ec:	ldr	x0, [x19]
  4048f0:	ldp	x20, x19, [sp, #48]
  4048f4:	ldp	x29, x30, [sp, #32]
  4048f8:	add	sp, sp, #0x40
  4048fc:	b	40fd08 <feof@plt+0xd338>
  404900:	stp	x29, x30, [sp, #-32]!
  404904:	str	x19, [sp, #16]
  404908:	mov	x29, sp
  40490c:	ldr	x8, [x1, #40]
  404910:	ldr	w2, [x1, #56]
  404914:	mov	x19, x0
  404918:	mov	x1, x8
  40491c:	bl	4094b8 <feof@plt+0x6ae8>
  404920:	ldr	x0, [x19]
  404924:	bl	40f888 <feof@plt+0xceb8>
  404928:	ldr	x0, [x19]
  40492c:	ldr	x19, [sp, #16]
  404930:	ldp	x29, x30, [sp], #32
  404934:	b	40f638 <feof@plt+0xcc68>
  404938:	stp	x29, x30, [sp, #-32]!
  40493c:	stp	x20, x19, [sp, #16]
  404940:	mov	x29, sp
  404944:	ldr	w8, [x0, #56]
  404948:	cbz	w8, 404998 <feof@plt+0x1fc8>
  40494c:	ldrb	w8, [x0, #64]
  404950:	ldr	x20, [x0]
  404954:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  404958:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  40495c:	add	x9, x9, #0xabd
  404960:	add	x10, x10, #0xae6
  404964:	cmp	w8, #0x0
  404968:	mov	x19, x0
  40496c:	csel	x0, x10, x9, eq  // eq = none
  404970:	bl	402640 <gettext@plt>
  404974:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  404978:	ldr	x2, [x8, #1480]
  40497c:	mov	x1, x0
  404980:	mov	x0, x20
  404984:	bl	40fc58 <feof@plt+0xd288>
  404988:	ldr	x0, [x19]
  40498c:	ldp	x20, x19, [sp, #16]
  404990:	ldp	x29, x30, [sp], #32
  404994:	b	410084 <feof@plt+0xd6b4>
  404998:	ldp	x20, x19, [sp, #16]
  40499c:	ldp	x29, x30, [sp], #32
  4049a0:	ret
  4049a4:	stp	x29, x30, [sp, #-32]!
  4049a8:	str	x19, [sp, #16]
  4049ac:	mov	x29, sp
  4049b0:	cmp	w1, #0x0
  4049b4:	mov	w8, #0x2                   	// #2
  4049b8:	mov	x19, x0
  4049bc:	csel	w0, w8, w1, lt  // lt = tstop
  4049c0:	bl	407c10 <feof@plt+0x5240>
  4049c4:	ldr	x8, [x19]
  4049c8:	ldr	x19, [sp, #16]
  4049cc:	and	w9, w0, #0x1
  4049d0:	strb	w9, [x8, #67]
  4049d4:	ldp	x29, x30, [sp], #32
  4049d8:	ret
  4049dc:	stp	x29, x30, [sp, #-32]!
  4049e0:	stp	x20, x19, [sp, #16]
  4049e4:	mov	x29, sp
  4049e8:	ldr	x8, [x0, #264]
  4049ec:	mov	x19, x0
  4049f0:	cbz	x8, 4049fc <feof@plt+0x202c>
  4049f4:	mov	x0, x19
  4049f8:	blr	x8
  4049fc:	bl	412b38 <feof@plt+0x10168>
  404a00:	ldr	x0, [x19, #72]
  404a04:	bl	4024c0 <free@plt>
  404a08:	ldr	x0, [x19]
  404a0c:	str	xzr, [x19, #72]
  404a10:	ldr	x8, [x0]
  404a14:	ldr	x8, [x8]
  404a18:	blr	x8
  404a1c:	ldr	x0, [x19]
  404a20:	bl	4024c0 <free@plt>
  404a24:	ldr	x20, [x19, #232]
  404a28:	str	xzr, [x19]
  404a2c:	cbz	x20, 404a48 <feof@plt+0x2078>
  404a30:	mov	x0, x20
  404a34:	ldr	x1, [x0, #8]!
  404a38:	bl	407a78 <feof@plt+0x50a8>
  404a3c:	mov	x0, x20
  404a40:	bl	402670 <_ZdlPv@plt>
  404a44:	str	xzr, [x19, #232]
  404a48:	ldp	x20, x19, [sp, #16]
  404a4c:	ldp	x29, x30, [sp], #32
  404a50:	ret
  404a54:	stp	x29, x30, [sp, #-64]!
  404a58:	str	x23, [sp, #16]
  404a5c:	stp	x22, x21, [sp, #32]
  404a60:	stp	x20, x19, [sp, #48]
  404a64:	mov	x29, sp
  404a68:	cbz	x3, 404aac <feof@plt+0x20dc>
  404a6c:	mov	w19, w4
  404a70:	mov	x21, x3
  404a74:	mov	x23, x2
  404a78:	mov	x22, x1
  404a7c:	mov	x20, x0
  404a80:	bl	4027c0 <__errno_location@plt>
  404a84:	ldr	w8, [x0]
  404a88:	stp	x22, x23, [x20]
  404a8c:	stp	x21, x21, [x20, #32]
  404a90:	stp	w19, wzr, [x20, #56]
  404a94:	str	w8, [x20, #16]
  404a98:	ldp	x20, x19, [sp, #48]
  404a9c:	ldp	x22, x21, [sp, #32]
  404aa0:	ldr	x23, [sp, #16]
  404aa4:	ldp	x29, x30, [sp], #64
  404aa8:	ret
  404aac:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404ab0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404ab4:	add	x0, x0, #0xa28
  404ab8:	add	x2, x2, #0x797
  404abc:	mov	w1, #0x112                 	// #274
  404ac0:	bl	404ac4 <feof@plt+0x20f4>
  404ac4:	stp	x29, x30, [sp, #-32]!
  404ac8:	stp	x20, x19, [sp, #16]
  404acc:	mov	x29, sp
  404ad0:	mov	x19, x2
  404ad4:	mov	w20, w1
  404ad8:	bl	405c6c <feof@plt+0x329c>
  404adc:	mov	x2, x0
  404ae0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404ae4:	add	x0, x0, #0xaad
  404ae8:	mov	x1, x19
  404aec:	mov	w3, w20
  404af0:	bl	40774c <feof@plt+0x4d7c>
  404af4:	stp	x29, x30, [sp, #-64]!
  404af8:	str	x23, [sp, #16]
  404afc:	stp	x22, x21, [sp, #32]
  404b00:	stp	x20, x19, [sp, #48]
  404b04:	mov	x29, sp
  404b08:	cbz	x3, 404b54 <feof@plt+0x2184>
  404b0c:	mov	x20, x0
  404b10:	mov	x0, x1
  404b14:	mov	w19, w4
  404b18:	mov	x21, x3
  404b1c:	mov	x22, x2
  404b20:	bl	402640 <gettext@plt>
  404b24:	mov	x23, x0
  404b28:	bl	4027c0 <__errno_location@plt>
  404b2c:	ldr	w8, [x0]
  404b30:	stp	x23, x22, [x20]
  404b34:	stp	x21, x21, [x20, #32]
  404b38:	stp	w19, wzr, [x20, #56]
  404b3c:	str	w8, [x20, #16]
  404b40:	ldp	x20, x19, [sp, #48]
  404b44:	ldp	x22, x21, [sp, #32]
  404b48:	ldr	x23, [sp, #16]
  404b4c:	ldp	x29, x30, [sp], #64
  404b50:	ret
  404b54:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404b58:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404b5c:	add	x0, x0, #0xa28
  404b60:	add	x2, x2, #0x7b6
  404b64:	mov	w1, #0x123                 	// #291
  404b68:	bl	404ac4 <feof@plt+0x20f4>
  404b6c:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  404b70:	add	x8, x8, #0x678
  404b74:	ldr	x0, [x8, w0, uxtw #3]
  404b78:	ret
  404b7c:	sub	sp, sp, #0x80
  404b80:	stp	x29, x30, [sp, #64]
  404b84:	stp	x24, x23, [sp, #80]
  404b88:	stp	x22, x21, [sp, #96]
  404b8c:	stp	x20, x19, [sp, #112]
  404b90:	add	x29, sp, #0x40
  404b94:	ldr	w8, [x1, #56]
  404b98:	cmp	w8, #0xe
  404b9c:	b.ge	404c88 <feof@plt+0x22b8>  // b.tcont
  404ba0:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  404ba4:	add	x9, x9, #0x6f0
  404ba8:	mov	x19, x0
  404bac:	ldr	x0, [x9, x8, lsl #3]
  404bb0:	mov	x21, x1
  404bb4:	bl	402640 <gettext@plt>
  404bb8:	ldr	w8, [x21, #56]
  404bbc:	mov	w9, #0x23fc                	// #9212
  404bc0:	mov	x20, x0
  404bc4:	lsr	x9, x9, x8
  404bc8:	tbnz	w9, #0, 404bdc <feof@plt+0x220c>
  404bcc:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0xaa68>
  404bd0:	add	x22, x22, #0xb34
  404bd4:	mov	x23, x22
  404bd8:	b	404c1c <feof@plt+0x224c>
  404bdc:	ldr	x24, [x19]
  404be0:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  404be4:	add	x9, x9, #0x678
  404be8:	ldr	x22, [x9, x8, lsl #3]
  404bec:	ldrb	w23, [x24, #67]
  404bf0:	mov	x0, x22
  404bf4:	bl	402420 <strlen@plt>
  404bf8:	mov	x2, x0
  404bfc:	mov	w0, w23
  404c00:	mov	x1, x22
  404c04:	bl	407b70 <feof@plt+0x51a0>
  404c08:	ldrb	w8, [x24, #67]
  404c0c:	mov	x23, x0
  404c10:	mov	w0, w8
  404c14:	bl	407bf4 <feof@plt+0x5224>
  404c18:	mov	x22, x0
  404c1c:	ldr	x0, [x21, #40]
  404c20:	add	x8, sp, #0x20
  404c24:	mov	w1, wzr
  404c28:	bl	42c194 <feof@plt+0x297c4>
  404c2c:	ldp	q0, q1, [sp, #32]
  404c30:	mov	x1, sp
  404c34:	mov	x0, x19
  404c38:	stp	q0, q1, [sp]
  404c3c:	bl	404ca0 <feof@plt+0x22d0>
  404c40:	mov	x19, x0
  404c44:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404c48:	add	x0, x0, #0x86e
  404c4c:	mov	x1, x19
  404c50:	mov	x2, x23
  404c54:	mov	x3, x20
  404c58:	mov	x4, x22
  404c5c:	bl	404564 <feof@plt+0x1b94>
  404c60:	mov	x20, x0
  404c64:	mov	x0, x19
  404c68:	bl	4024c0 <free@plt>
  404c6c:	mov	x0, x20
  404c70:	ldp	x20, x19, [sp, #112]
  404c74:	ldp	x22, x21, [sp, #96]
  404c78:	ldp	x24, x23, [sp, #80]
  404c7c:	ldp	x29, x30, [sp, #64]
  404c80:	add	sp, sp, #0x80
  404c84:	ret
  404c88:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404c8c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404c90:	add	x0, x0, #0xa28
  404c94:	add	x2, x2, #0x856
  404c98:	mov	w1, #0x16a                 	// #362
  404c9c:	bl	404ac4 <feof@plt+0x20f4>
  404ca0:	stp	x29, x30, [sp, #-64]!
  404ca4:	str	x23, [sp, #16]
  404ca8:	stp	x22, x21, [sp, #32]
  404cac:	stp	x20, x19, [sp, #48]
  404cb0:	mov	x29, sp
  404cb4:	ldr	x19, [x0]
  404cb8:	mov	x23, x0
  404cbc:	mov	x22, x1
  404cc0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404cc4:	ldrb	w0, [x19, #67]
  404cc8:	add	x1, x1, #0x780
  404ccc:	mov	w2, #0x5                   	// #5
  404cd0:	bl	407b70 <feof@plt+0x51a0>
  404cd4:	ldrb	w8, [x19, #67]
  404cd8:	mov	x19, x0
  404cdc:	mov	w0, w8
  404ce0:	bl	407bf4 <feof@plt+0x5224>
  404ce4:	ldr	x8, [x22]
  404ce8:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  404cec:	ldr	x9, [x9, #1480]
  404cf0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404cf4:	cmp	x8, #0x0
  404cf8:	mov	x20, x0
  404cfc:	csel	x21, x9, x8, eq  // eq = none
  404d00:	add	x1, x1, #0xb18
  404d04:	mov	x0, x21
  404d08:	bl	402820 <strcmp@plt>
  404d0c:	cbz	w0, 404d50 <feof@plt+0x2380>
  404d10:	ldr	w3, [x22, #8]
  404d14:	ldrb	w8, [x23, #121]
  404d18:	cbz	w8, 404d5c <feof@plt+0x238c>
  404d1c:	ldr	w4, [x22, #12]
  404d20:	cbz	w3, 404d64 <feof@plt+0x2394>
  404d24:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  404d28:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  404d2c:	add	x8, x8, #0xb75
  404d30:	add	x9, x9, #0xb78
  404d34:	cmp	w4, #0x0
  404d38:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  404d3c:	csel	x2, x9, x8, eq  // eq = none
  404d40:	add	x0, x0, #0x6e0
  404d44:	mov	w1, #0x20                  	// #32
  404d48:	bl	402740 <snprintf@plt>
  404d4c:	b	404d6c <feof@plt+0x239c>
  404d50:	mov	w3, wzr
  404d54:	ldrb	w8, [x23, #121]
  404d58:	cbnz	w8, 404d1c <feof@plt+0x234c>
  404d5c:	mov	w4, wzr
  404d60:	cbnz	w3, 404d24 <feof@plt+0x2354>
  404d64:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  404d68:	strb	wzr, [x8, #1760]
  404d6c:	mov	x1, x19
  404d70:	mov	x2, x21
  404d74:	mov	x4, x20
  404d78:	ldp	x20, x19, [sp, #48]
  404d7c:	ldp	x22, x21, [sp, #32]
  404d80:	ldr	x23, [sp, #16]
  404d84:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404d88:	adrp	x3, 476000 <_obstack_memory_used@@Base+0x25a68>
  404d8c:	add	x0, x0, #0xb23
  404d90:	add	x3, x3, #0x6e0
  404d94:	ldp	x29, x30, [sp], #64
  404d98:	b	404564 <feof@plt+0x1b94>
  404d9c:	stp	x29, x30, [sp, #-32]!
  404da0:	str	x19, [sp, #16]
  404da4:	mov	x29, sp
  404da8:	ldr	w2, [x0, #132]
  404dac:	cbz	w2, 404dc8 <feof@plt+0x23f8>
  404db0:	ldp	w8, w9, [x0, #24]
  404db4:	ldr	w10, [x0, #56]
  404db8:	add	w8, w9, w8
  404dbc:	add	w8, w8, w10
  404dc0:	cmp	w8, w2
  404dc4:	b.ge	404dd4 <feof@plt+0x2404>  // b.tcont
  404dc8:	ldr	x19, [sp, #16]
  404dcc:	ldp	x29, x30, [sp], #32
  404dd0:	ret
  404dd4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  404dd8:	str	x0, [x29, #24]
  404ddc:	ldr	x0, [x8, #1336]
  404de0:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  404de4:	add	x8, x8, #0x878
  404de8:	mov	w19, w1
  404dec:	mov	x1, x8
  404df0:	bl	404e08 <feof@plt+0x2438>
  404df4:	tbz	w19, #0, 404e00 <feof@plt+0x2430>
  404df8:	ldr	x0, [x29, #24]
  404dfc:	bl	4049dc <feof@plt+0x200c>
  404e00:	mov	w0, #0x1                   	// #1
  404e04:	bl	402890 <exit@plt>
  404e08:	sub	sp, sp, #0x110
  404e0c:	stp	x29, x30, [sp, #240]
  404e10:	stp	x28, x19, [sp, #256]
  404e14:	add	x29, sp, #0xf0
  404e18:	mov	x8, #0xffffffffffffffd0    	// #-48
  404e1c:	mov	x9, sp
  404e20:	sub	x10, x29, #0x70
  404e24:	mov	x19, x0
  404e28:	movk	x8, #0xff80, lsl #32
  404e2c:	add	x11, x29, #0x20
  404e30:	add	x9, x9, #0x80
  404e34:	add	x10, x10, #0x30
  404e38:	mov	x0, x1
  404e3c:	stp	x2, x3, [x29, #-112]
  404e40:	stp	x4, x5, [x29, #-96]
  404e44:	stp	x6, x7, [x29, #-80]
  404e48:	stp	q1, q2, [sp, #16]
  404e4c:	stp	q3, q4, [sp, #48]
  404e50:	str	q0, [sp]
  404e54:	stp	q5, q6, [sp, #80]
  404e58:	str	q7, [sp, #112]
  404e5c:	stp	x9, x8, [x29, #-16]
  404e60:	stp	x11, x10, [x29, #-32]
  404e64:	bl	402640 <gettext@plt>
  404e68:	ldp	q0, q1, [x29, #-32]
  404e6c:	mov	x1, x0
  404e70:	sub	x2, x29, #0x40
  404e74:	mov	x0, x19
  404e78:	stp	q0, q1, [x29, #-64]
  404e7c:	bl	4029c0 <vfprintf@plt>
  404e80:	ldp	x28, x19, [sp, #256]
  404e84:	ldp	x29, x30, [sp, #240]
  404e88:	add	sp, sp, #0x110
  404e8c:	ret
  404e90:	stp	x29, x30, [sp, #-32]!
  404e94:	str	x19, [sp, #16]
  404e98:	mov	x29, sp
  404e9c:	sub	w8, w1, #0x6
  404ea0:	cmp	w8, #0x4
  404ea4:	b.cc	404edc <feof@plt+0x250c>  // b.lo, b.ul, b.last
  404ea8:	sub	w8, w1, #0x2
  404eac:	cmp	w8, #0xb
  404eb0:	b.hi	404f54 <feof@plt+0x2584>  // b.pmore
  404eb4:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  404eb8:	add	x9, x9, #0x668
  404ebc:	adr	x10, 404ecc <feof@plt+0x24fc>
  404ec0:	ldrb	w11, [x9, x8]
  404ec4:	add	x10, x10, x11, lsl #2
  404ec8:	br	x10
  404ecc:	ldrb	w8, [x0, #120]
  404ed0:	cbnz	w8, 404fcc <feof@plt+0x25fc>
  404ed4:	ldrb	w8, [x0, #128]
  404ed8:	cbnz	w8, 404fd0 <feof@plt+0x2600>
  404edc:	ldr	x19, [sp, #16]
  404ee0:	ldp	x29, x30, [sp], #32
  404ee4:	ret
  404ee8:	ldrb	w9, [x0, #120]
  404eec:	cbnz	w9, 404fcc <feof@plt+0x25fc>
  404ef0:	bl	4049dc <feof@plt+0x200c>
  404ef4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  404ef8:	ldr	x0, [x8, #1336]
  404efc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404f00:	add	x1, x1, #0x978
  404f04:	bl	404e08 <feof@plt+0x2438>
  404f08:	mov	w0, #0x1                   	// #1
  404f0c:	bl	402890 <exit@plt>
  404f10:	adrp	x2, 405000 <feof@plt+0x2630>
  404f14:	mov	x19, x0
  404f18:	add	x2, x2, #0x8
  404f1c:	mov	x0, xzr
  404f20:	mov	w1, wzr
  404f24:	mov	x3, xzr
  404f28:	bl	4352e0 <feof@plt+0x32910>
  404f2c:	str	wzr, [x29, #28]
  404f30:	cbz	x0, 404f74 <feof@plt+0x25a4>
  404f34:	adrp	x2, 405000 <feof@plt+0x2630>
  404f38:	adrp	x3, 405000 <feof@plt+0x2630>
  404f3c:	add	x2, x2, #0x78
  404f40:	add	x3, x3, #0x8
  404f44:	add	x4, x29, #0x1c
  404f48:	mov	w1, #0x2                   	// #2
  404f4c:	bl	435338 <feof@plt+0x32968>
  404f50:	b	404f74 <feof@plt+0x25a4>
  404f54:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  404f58:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  404f5c:	add	x0, x0, #0xa28
  404f60:	add	x2, x2, #0x991
  404f64:	mov	w1, #0x231                 	// #561
  404f68:	bl	404ac4 <feof@plt+0x20f4>
  404f6c:	mov	x19, x0
  404f70:	str	wzr, [x29, #28]
  404f74:	ldrb	w8, [x19, #120]
  404f78:	cbnz	w8, 404fcc <feof@plt+0x25fc>
  404f7c:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  404f80:	ldr	x0, [x19, #1336]
  404f84:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404f88:	add	x1, x1, #0x8d7
  404f8c:	bl	404e08 <feof@plt+0x2438>
  404f90:	ldr	w8, [x29, #28]
  404f94:	cmp	w8, #0x1
  404f98:	b.lt	404fac <feof@plt+0x25dc>  // b.tstop
  404f9c:	ldr	x0, [x19, #1336]
  404fa0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404fa4:	add	x1, x1, #0x922
  404fa8:	bl	404e08 <feof@plt+0x2438>
  404fac:	ldr	x0, [x19, #1336]
  404fb0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404fb4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  404fb8:	add	x1, x1, #0x95e
  404fbc:	add	x2, x2, #0xb78
  404fc0:	bl	404e08 <feof@plt+0x2438>
  404fc4:	mov	w0, #0x4                   	// #4
  404fc8:	bl	402890 <exit@plt>
  404fcc:	bl	404ffc <feof@plt+0x262c>
  404fd0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  404fd4:	ldr	x8, [x8, #1336]
  404fd8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  404fdc:	add	x1, x1, #0x8a8
  404fe0:	mov	x19, x0
  404fe4:	mov	x0, x8
  404fe8:	bl	404e08 <feof@plt+0x2438>
  404fec:	mov	x0, x19
  404ff0:	bl	4049dc <feof@plt+0x200c>
  404ff4:	mov	w0, #0x1                   	// #1
  404ff8:	bl	402890 <exit@plt>
  404ffc:	stp	x29, x30, [sp, #-16]!
  405000:	mov	x29, sp
  405004:	bl	402860 <abort@plt>
  405008:	tbz	w2, #31, 405010 <feof@plt+0x2640>
  40500c:	ret
  405010:	stp	x29, x30, [sp, #-48]!
  405014:	str	x21, [sp, #16]
  405018:	stp	x20, x19, [sp, #32]
  40501c:	mov	x29, sp
  405020:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  405024:	ldr	x20, [x8, #1336]
  405028:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  40502c:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  405030:	add	x8, x8, #0x12c
  405034:	add	x4, x4, #0xb34
  405038:	cmp	w2, #0x0
  40503c:	mov	x19, x1
  405040:	csel	x21, x4, x8, eq  // eq = none
  405044:	cbz	w2, 405054 <feof@plt+0x2684>
  405048:	mov	w0, w2
  40504c:	bl	4507f8 <_obstack_memory_used@@Base+0x260>
  405050:	mov	x4, x0
  405054:	mov	x0, x20
  405058:	mov	x2, x19
  40505c:	mov	x3, x21
  405060:	ldp	x20, x19, [sp, #32]
  405064:	ldr	x21, [sp, #16]
  405068:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40506c:	add	x1, x1, #0xb2d
  405070:	ldp	x29, x30, [sp], #48
  405074:	b	402440 <fprintf@plt>
  405078:	stp	x29, x30, [sp, #-64]!
  40507c:	str	x23, [sp, #16]
  405080:	stp	x22, x21, [sp, #32]
  405084:	stp	x20, x19, [sp, #48]
  405088:	mov	x29, sp
  40508c:	orr	x8, x2, x4
  405090:	cbnz	x8, 40509c <feof@plt+0x26cc>
  405094:	mov	w0, wzr
  405098:	b	4051c0 <feof@plt+0x27f0>
  40509c:	ldr	w8, [x0]
  4050a0:	mov	x23, x4
  4050a4:	mov	w19, w3
  4050a8:	mov	x21, x2
  4050ac:	mov	x20, x1
  4050b0:	mov	x22, x0
  4050b4:	cbz	x2, 4050d8 <feof@plt+0x2708>
  4050b8:	cbnz	w8, 4050d8 <feof@plt+0x2708>
  4050bc:	mov	x0, x21
  4050c0:	bl	4501c4 <feof@plt+0x4d7f4>
  4050c4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4050c8:	add	x1, x1, #0xa32
  4050cc:	bl	402820 <strcmp@plt>
  4050d0:	cbz	w0, 4051c0 <feof@plt+0x27f0>
  4050d4:	ldr	w8, [x22]
  4050d8:	cmp	w8, #0x13
  4050dc:	b.gt	4051bc <feof@plt+0x27ec>
  4050e0:	add	w8, w8, #0x1
  4050e4:	str	w8, [x22]
  4050e8:	cbz	x23, 4051d4 <feof@plt+0x2804>
  4050ec:	mov	w1, #0x400b                	// #16395
  4050f0:	mov	x0, x23
  4050f4:	bl	4429d8 <feof@plt+0x40008>
  4050f8:	cmp	x0, #0x0
  4050fc:	csel	x23, x23, x0, eq  // eq = none
  405100:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405104:	mov	x22, x0
  405108:	add	x1, x1, #0xb52
  40510c:	mov	w2, #0x4                   	// #4
  405110:	mov	x0, x23
  405114:	bl	4026b0 <strncmp@plt>
  405118:	cbz	w0, 405178 <feof@plt+0x27a8>
  40511c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405120:	add	x1, x1, #0xb4a
  405124:	mov	w2, #0xc                   	// #12
  405128:	mov	x0, x23
  40512c:	bl	4026b0 <strncmp@plt>
  405130:	cbz	w0, 40518c <feof@plt+0x27bc>
  405134:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405138:	add	x1, x1, #0xb57
  40513c:	mov	w2, #0x10                  	// #16
  405140:	mov	x0, x23
  405144:	bl	4026b0 <strncmp@plt>
  405148:	cbz	w0, 4051a0 <feof@plt+0x27d0>
  40514c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405150:	add	x1, x1, #0xb68
  405154:	mov	w2, #0xc                   	// #12
  405158:	mov	x0, x23
  40515c:	bl	4026b0 <strncmp@plt>
  405160:	cbnz	w0, 4051d8 <feof@plt+0x2808>
  405164:	ldrb	w8, [x23, #12]
  405168:	cbz	w8, 4051b0 <feof@plt+0x27e0>
  40516c:	cmp	w8, #0x28
  405170:	b.eq	4051b0 <feof@plt+0x27e0>  // b.none
  405174:	b	4051d8 <feof@plt+0x2808>
  405178:	ldrb	w8, [x23, #4]
  40517c:	cmp	w8, #0x28
  405180:	b.eq	4051b0 <feof@plt+0x27e0>  // b.none
  405184:	cbz	w8, 4051b0 <feof@plt+0x27e0>
  405188:	b	40511c <feof@plt+0x274c>
  40518c:	ldrb	w8, [x23, #12]
  405190:	cbz	w8, 4051b0 <feof@plt+0x27e0>
  405194:	cmp	w8, #0x28
  405198:	b.eq	4051b0 <feof@plt+0x27e0>  // b.none
  40519c:	b	405134 <feof@plt+0x2764>
  4051a0:	ldrb	w8, [x23, #16]
  4051a4:	cbz	w8, 4051b0 <feof@plt+0x27e0>
  4051a8:	cmp	w8, #0x28
  4051ac:	b.ne	40514c <feof@plt+0x277c>  // b.any
  4051b0:	cbz	x22, 4051bc <feof@plt+0x27ec>
  4051b4:	mov	x0, x22
  4051b8:	bl	4024c0 <free@plt>
  4051bc:	mov	w0, #0x1                   	// #1
  4051c0:	ldp	x20, x19, [sp, #48]
  4051c4:	ldp	x22, x21, [sp, #32]
  4051c8:	ldr	x23, [sp, #16]
  4051cc:	ldp	x29, x30, [sp], #64
  4051d0:	ret
  4051d4:	mov	x22, xzr
  4051d8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4051dc:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  4051e0:	ldr	x0, [x8, #1336]
  4051e4:	add	x9, x9, #0xb46
  4051e8:	cmp	x23, #0x0
  4051ec:	csel	x3, x9, x23, eq  // eq = none
  4051f0:	cmp	x21, #0x0
  4051f4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4051f8:	csel	x4, x9, x21, eq  // eq = none
  4051fc:	add	x1, x1, #0xb35
  405200:	mov	x2, x20
  405204:	mov	w5, w19
  405208:	bl	402440 <fprintf@plt>
  40520c:	cbz	x22, 405094 <feof@plt+0x26c4>
  405210:	mov	x0, x22
  405214:	bl	4024c0 <free@plt>
  405218:	b	405094 <feof@plt+0x26c4>
  40521c:	sub	sp, sp, #0x70
  405220:	stp	x29, x30, [sp, #16]
  405224:	stp	x28, x27, [sp, #32]
  405228:	stp	x26, x25, [sp, #48]
  40522c:	stp	x24, x23, [sp, #64]
  405230:	stp	x22, x21, [sp, #80]
  405234:	stp	x20, x19, [sp, #96]
  405238:	add	x29, sp, #0x10
  40523c:	str	xzr, [sp, #8]
  405240:	mov	x19, x0
  405244:	ldr	x0, [x0]
  405248:	mov	w20, w1
  40524c:	ldrb	w8, [x0, #65]
  405250:	cbz	w8, 405260 <feof@plt+0x2890>
  405254:	bl	40fd08 <feof@plt+0xd338>
  405258:	ldr	x8, [x19]
  40525c:	strb	wzr, [x8, #65]
  405260:	cmp	w20, #0x2
  405264:	b.cc	405444 <feof@plt+0x2a74>  // b.lo, b.ul, b.last
  405268:	adrp	x27, 476000 <_obstack_memory_used@@Base+0x25a68>
  40526c:	ldr	x0, [x27, #1880]
  405270:	add	x3, sp, #0x8
  405274:	mov	w2, #0x2                   	// #2
  405278:	mov	w1, w20
  40527c:	bl	42ab94 <feof@plt+0x281c4>
  405280:	ldr	x1, [sp, #8]
  405284:	cbz	x1, 405444 <feof@plt+0x2a74>
  405288:	ldr	x8, [x19, #208]
  40528c:	cmp	x8, x1
  405290:	b.eq	405444 <feof@plt+0x2a74>  // b.none
  405294:	str	x1, [x19, #208]
  405298:	ldr	w20, [x1, #20]
  40529c:	cbz	w20, 405444 <feof@plt+0x2a74>
  4052a0:	ldr	x0, [x27, #1880]
  4052a4:	bl	429f10 <feof@plt+0x27540>
  4052a8:	str	x0, [sp, #8]
  4052ac:	ldr	w9, [x0]
  4052b0:	ldrh	w8, [x0, #6]
  4052b4:	ldr	w10, [x0, #16]
  4052b8:	ldrb	w11, [x19, #121]
  4052bc:	sub	w9, w20, w9
  4052c0:	lsr	w12, w9, w8
  4052c4:	add	w3, w12, w10
  4052c8:	cbz	w11, 405318 <feof@plt+0x2948>
  4052cc:	and	w10, w8, #0xff
  4052d0:	mov	w11, #0xffffffff            	// #-1
  4052d4:	lsl	w10, w11, w10
  4052d8:	bic	w9, w9, w10
  4052dc:	lsr	w8, w8, #8
  4052e0:	lsr	w4, w9, w8
  4052e4:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x25a68>
  4052e8:	cbz	w3, 405324 <feof@plt+0x2954>
  4052ec:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  4052f0:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  4052f4:	add	x8, x8, #0xb75
  4052f8:	add	x9, x9, #0xb78
  4052fc:	cmp	w4, #0x0
  405300:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  405304:	csel	x2, x9, x8, eq  // eq = none
  405308:	add	x0, x0, #0x6e0
  40530c:	mov	w1, #0x20                  	// #32
  405310:	bl	402740 <snprintf@plt>
  405314:	b	405328 <feof@plt+0x2958>
  405318:	mov	w4, wzr
  40531c:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x25a68>
  405320:	cbnz	w3, 4052ec <feof@plt+0x291c>
  405324:	strb	wzr, [x28, #1760]
  405328:	ldr	x20, [x19]
  40532c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  405330:	add	x0, x0, #0x9b0
  405334:	bl	402640 <gettext@plt>
  405338:	ldr	x8, [sp, #8]
  40533c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405340:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  405344:	adrp	x4, 451000 <_obstack_memory_used@@Base+0xa68>
  405348:	ldr	x5, [x8, #8]
  40534c:	adrp	x6, 476000 <_obstack_memory_used@@Base+0x25a68>
  405350:	mov	x3, x0
  405354:	add	x1, x1, #0x9dc
  405358:	add	x2, x2, #0xb34
  40535c:	add	x4, x4, #0x780
  405360:	add	x6, x6, #0x6e0
  405364:	mov	x0, x20
  405368:	bl	40fc58 <feof@plt+0xd288>
  40536c:	ldr	x1, [sp, #8]
  405370:	ldr	w26, [x1, #20]
  405374:	cbz	w26, 40542c <feof@plt+0x2a5c>
  405378:	adrp	x20, 451000 <_obstack_memory_used@@Base+0xa68>
  40537c:	adrp	x21, 451000 <_obstack_memory_used@@Base+0xa68>
  405380:	adrp	x22, 451000 <_obstack_memory_used@@Base+0xa68>
  405384:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  405388:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  40538c:	adrp	x25, 451000 <_obstack_memory_used@@Base+0xa68>
  405390:	add	x20, x20, #0x9c6
  405394:	add	x21, x21, #0x9dc
  405398:	add	x22, x22, #0x9ea
  40539c:	add	x23, x23, #0x780
  4053a0:	add	x24, x24, #0x6e0
  4053a4:	add	x25, x25, #0xb78
  4053a8:	b	4053ec <feof@plt+0x2a1c>
  4053ac:	strb	wzr, [x28, #1760]
  4053b0:	ldr	x26, [x19]
  4053b4:	mov	x0, x20
  4053b8:	bl	402640 <gettext@plt>
  4053bc:	ldr	x8, [sp, #8]
  4053c0:	mov	x3, x0
  4053c4:	mov	x0, x26
  4053c8:	mov	x1, x21
  4053cc:	ldr	x5, [x8, #8]
  4053d0:	mov	x2, x22
  4053d4:	mov	x4, x23
  4053d8:	mov	x6, x24
  4053dc:	bl	40fc58 <feof@plt+0xd288>
  4053e0:	ldr	x1, [sp, #8]
  4053e4:	ldr	w26, [x1, #20]
  4053e8:	cbz	w26, 40542c <feof@plt+0x2a5c>
  4053ec:	ldr	x0, [x27, #1880]
  4053f0:	bl	429f10 <feof@plt+0x27540>
  4053f4:	str	x0, [sp, #8]
  4053f8:	ldr	w8, [x0]
  4053fc:	ldrb	w9, [x0, #6]
  405400:	ldr	w10, [x0, #16]
  405404:	sub	w8, w26, w8
  405408:	lsr	w8, w8, w9
  40540c:	adds	w3, w8, w10
  405410:	b.eq	4053ac <feof@plt+0x29dc>  // b.none
  405414:	mov	w1, #0x20                  	// #32
  405418:	mov	x0, x24
  40541c:	mov	x2, x25
  405420:	mov	w4, wzr
  405424:	bl	402740 <snprintf@plt>
  405428:	b	4053b0 <feof@plt+0x29e0>
  40542c:	ldr	x0, [x19]
  405430:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  405434:	add	x1, x1, #0xa81
  405438:	bl	40fc58 <feof@plt+0xd288>
  40543c:	ldr	x0, [x19]
  405440:	bl	40fd08 <feof@plt+0xd338>
  405444:	ldp	x20, x19, [sp, #96]
  405448:	ldp	x22, x21, [sp, #80]
  40544c:	ldp	x24, x23, [sp, #64]
  405450:	ldp	x26, x25, [sp, #48]
  405454:	ldp	x28, x27, [sp, #32]
  405458:	ldp	x29, x30, [sp, #16]
  40545c:	add	sp, sp, #0x70
  405460:	ret
  405464:	mov	w1, wzr
  405468:	b	40d4ac <feof@plt+0xaadc>
  40546c:	stp	x29, x30, [sp, #-64]!
  405470:	stp	x24, x23, [sp, #16]
  405474:	stp	x22, x21, [sp, #32]
  405478:	stp	x20, x19, [sp, #48]
  40547c:	mov	x29, sp
  405480:	tbnz	w1, #31, 4054e8 <feof@plt+0x2b18>
  405484:	mov	w19, w2
  405488:	cmp	w2, #0xd
  40548c:	mov	w23, wzr
  405490:	b.gt	405590 <feof@plt+0x2bc0>
  405494:	ldr	w8, [x0, #68]
  405498:	mov	w21, w1
  40549c:	mov	x20, x0
  4054a0:	cmp	w8, w1
  4054a4:	b.le	405590 <feof@plt+0x2bc0>
  4054a8:	ldr	x8, [x20, #72]
  4054ac:	mov	w22, w3
  4054b0:	mov	w24, w21
  4054b4:	ldr	w23, [x8, w21, uxtw #2]
  4054b8:	cbz	w3, 4054f0 <feof@plt+0x2b20>
  4054bc:	cbnz	w23, 405504 <feof@plt+0x2b34>
  4054c0:	ldp	x8, x1, [x20, #168]
  4054c4:	mov	w0, w21
  4054c8:	blr	x8
  4054cc:	cbz	w0, 4054f8 <feof@plt+0x2b28>
  4054d0:	ldrb	w8, [x20, #64]
  4054d4:	mov	w9, #0x4                   	// #4
  4054d8:	cmp	w8, #0x0
  4054dc:	mov	w8, #0x6                   	// #6
  4054e0:	csel	w23, w8, w9, eq  // eq = none
  4054e4:	b	4054fc <feof@plt+0x2b2c>
  4054e8:	mov	w23, wzr
  4054ec:	b	405590 <feof@plt+0x2bc0>
  4054f0:	str	w19, [x8, x24, lsl #2]
  4054f4:	b	405590 <feof@plt+0x2bc0>
  4054f8:	mov	w23, #0x1                   	// #1
  4054fc:	ldr	x8, [x20, #72]
  405500:	str	w23, [x8, x24, lsl #2]
  405504:	ldrsw	x24, [x20, #88]
  405508:	add	x9, x24, x24, lsl #1
  40550c:	add	x8, x24, #0x1
  405510:	lsl	x9, x9, #2
  405514:	sub	x8, x8, #0x1
  405518:	cmp	x8, #0x1
  40551c:	b.lt	405548 <feof@plt+0x2b78>  // b.tstop
  405520:	ldr	x0, [x20, #80]
  405524:	add	x10, x0, x9
  405528:	ldur	w11, [x10, #-8]
  40552c:	sub	x10, x9, #0xc
  405530:	mov	x9, x10
  405534:	cmp	w11, w21
  405538:	b.ne	405514 <feof@plt+0x2b44>  // b.any
  40553c:	add	x8, x0, x10
  405540:	ldr	w23, [x8, #8]
  405544:	b	40554c <feof@plt+0x2b7c>
  405548:	ldr	x0, [x20, #80]
  40554c:	add	w8, w24, #0x1
  405550:	mov	w9, #0xc                   	// #12
  405554:	smull	x1, w8, w9
  405558:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40555c:	add	x8, x24, x24, lsl #1
  405560:	lsl	x8, x8, #2
  405564:	str	x0, [x20, #80]
  405568:	str	w22, [x0, x8]
  40556c:	ldr	x9, [x20, #80]
  405570:	add	x9, x9, x8
  405574:	str	w21, [x9, #4]
  405578:	ldr	x9, [x20, #80]
  40557c:	add	x8, x9, x8
  405580:	str	w19, [x8, #8]
  405584:	ldr	w8, [x20, #88]
  405588:	add	w8, w8, #0x1
  40558c:	str	w8, [x20, #88]
  405590:	mov	w0, w23
  405594:	ldp	x20, x19, [sp, #48]
  405598:	ldp	x22, x21, [sp, #32]
  40559c:	ldp	x24, x23, [sp, #16]
  4055a0:	ldp	x29, x30, [sp], #64
  4055a4:	ret
  4055a8:	stp	x29, x30, [sp, #-32]!
  4055ac:	str	x19, [sp, #16]
  4055b0:	mov	x29, sp
  4055b4:	ldrsw	x8, [x0, #104]
  4055b8:	mov	x19, x0
  4055bc:	ldr	x0, [x0, #96]
  4055c0:	lsl	x8, x8, #2
  4055c4:	add	x1, x8, #0x4
  4055c8:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4055cc:	ldrsw	x8, [x19, #104]
  4055d0:	ldr	w9, [x19, #88]
  4055d4:	str	x0, [x19, #96]
  4055d8:	add	w10, w8, #0x1
  4055dc:	str	w10, [x19, #104]
  4055e0:	ldr	x19, [sp, #16]
  4055e4:	str	w9, [x0, x8, lsl #2]
  4055e8:	ldp	x29, x30, [sp], #32
  4055ec:	ret
  4055f0:	stp	x29, x30, [sp, #-48]!
  4055f4:	stp	x22, x21, [sp, #16]
  4055f8:	stp	x20, x19, [sp, #32]
  4055fc:	mov	x29, sp
  405600:	ldr	w8, [x0, #104]
  405604:	mov	x19, x0
  405608:	mov	w20, w1
  40560c:	cbz	w8, 405624 <feof@plt+0x2c54>
  405610:	ldr	x9, [x19, #96]
  405614:	sub	w8, w8, #0x1
  405618:	str	w8, [x19, #104]
  40561c:	ldr	w21, [x9, w8, sxtw #2]
  405620:	b	405628 <feof@plt+0x2c58>
  405624:	mov	w21, wzr
  405628:	ldrsw	x8, [x19, #88]
  40562c:	ldr	x0, [x19, #80]
  405630:	add	x8, x8, x8, lsl #1
  405634:	lsl	x22, x8, #2
  405638:	add	x1, x22, #0xc
  40563c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  405640:	str	x0, [x19, #80]
  405644:	str	w20, [x0, x22]
  405648:	ldr	x8, [x19, #80]
  40564c:	mov	w9, #0xf                   	// #15
  405650:	add	x8, x8, x22
  405654:	str	w21, [x8, #4]
  405658:	ldr	x8, [x19, #80]
  40565c:	add	x8, x8, x22
  405660:	str	w9, [x8, #8]
  405664:	ldr	w8, [x19, #88]
  405668:	add	w8, w8, #0x1
  40566c:	str	w8, [x19, #88]
  405670:	ldp	x20, x19, [sp, #32]
  405674:	ldp	x22, x21, [sp, #16]
  405678:	ldp	x29, x30, [sp], #48
  40567c:	ret
  405680:	sub	sp, sp, #0x90
  405684:	stp	x29, x30, [sp, #64]
  405688:	stp	x26, x25, [sp, #80]
  40568c:	stp	x24, x23, [sp, #96]
  405690:	stp	x22, x21, [sp, #112]
  405694:	stp	x20, x19, [sp, #128]
  405698:	add	x29, sp, #0x40
  40569c:	mov	x20, x1
  4056a0:	mov	x19, x0
  4056a4:	mov	x0, x1
  4056a8:	mov	w1, wzr
  4056ac:	bl	40d4ac <feof@plt+0xaadc>
  4056b0:	ldr	w21, [x20, #56]
  4056b4:	mov	w1, w0
  4056b8:	cmp	w21, #0xa
  4056bc:	b.eq	4056cc <feof@plt+0x2cfc>  // b.none
  4056c0:	cmp	w21, #0x6
  4056c4:	mov	w8, w21
  4056c8:	b.ne	405718 <feof@plt+0x2d48>  // b.any
  4056cc:	ldrb	w8, [x19, #129]
  4056d0:	cbnz	w8, 405728 <feof@plt+0x2d58>
  4056d4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4056d8:	ldr	x0, [x8, #1880]
  4056dc:	bl	42af04 <feof@plt+0x28534>
  4056e0:	cbz	w0, 4056ec <feof@plt+0x2d1c>
  4056e4:	ldrb	w8, [x19, #130]
  4056e8:	cbz	w8, 405728 <feof@plt+0x2d58>
  4056ec:	ldr	w8, [x20, #56]
  4056f0:	cmp	w8, #0xa
  4056f4:	b.ne	405718 <feof@plt+0x2d48>  // b.any
  4056f8:	ldrb	w8, [x19, #122]
  4056fc:	mov	w9, #0x4                   	// #4
  405700:	cmp	w8, #0x0
  405704:	mov	w8, #0x6                   	// #6
  405708:	csel	w21, w8, w9, eq  // eq = none
  40570c:	str	w21, [x20, #56]
  405710:	mov	w8, w21
  405714:	b	405734 <feof@plt+0x2d64>
  405718:	cmp	w8, #0x8
  40571c:	b.ne	405734 <feof@plt+0x2d64>  // b.any
  405720:	ldrb	w8, [x19, #220]
  405724:	cbz	w8, 405730 <feof@plt+0x2d60>
  405728:	mov	w0, wzr
  40572c:	b	405b18 <feof@plt+0x3148>
  405730:	mov	w8, #0x8                   	// #8
  405734:	ldr	w9, [x19, #216]
  405738:	cmp	w9, #0x1
  40573c:	b.lt	405760 <feof@plt+0x2d90>  // b.tstop
  405740:	cmp	w8, #0xd
  405744:	b.eq	405750 <feof@plt+0x2d80>  // b.none
  405748:	cmp	w8, #0x3
  40574c:	b.ne	405b44 <feof@plt+0x3174>  // b.any
  405750:	cmp	w9, #0x1
  405754:	b.ne	405b44 <feof@plt+0x3174>  // b.any
  405758:	ldr	x0, [x19]
  40575c:	bl	410084 <feof@plt+0xd6b4>
  405760:	ldrb	w8, [x19, #64]
  405764:	cbz	w8, 40577c <feof@plt+0x2dac>
  405768:	ldr	w8, [x20, #56]
  40576c:	cmp	w8, #0x6
  405770:	b.ne	40577c <feof@plt+0x2dac>  // b.any
  405774:	mov	w8, #0x4                   	// #4
  405778:	str	w8, [x20, #56]
  40577c:	ldr	w0, [x20, #60]
  405780:	cbz	w0, 405790 <feof@plt+0x2dc0>
  405784:	ldr	w8, [x19, #124]
  405788:	cmp	w0, w8
  40578c:	b.ne	405a1c <feof@plt+0x304c>  // b.any
  405790:	ldr	w8, [x20, #56]
  405794:	cmp	w8, #0x8
  405798:	b.eq	4057bc <feof@plt+0x2dec>  // b.none
  40579c:	ldr	w2, [x19, #132]
  4057a0:	cbz	w2, 4057bc <feof@plt+0x2dec>
  4057a4:	ldp	w8, w9, [x19, #24]
  4057a8:	ldr	w10, [x19, #56]
  4057ac:	add	w8, w9, w8
  4057b0:	add	w8, w8, w10
  4057b4:	cmp	w8, w2
  4057b8:	b.ge	405bb0 <feof@plt+0x31e0>  // b.tcont
  4057bc:	ldr	w8, [x19, #216]
  4057c0:	add	w8, w8, #0x1
  4057c4:	str	w8, [x19, #216]
  4057c8:	ldr	w8, [x20, #56]
  4057cc:	cmp	w8, #0xd
  4057d0:	b.eq	4057dc <feof@plt+0x2e0c>  // b.none
  4057d4:	cmp	w8, #0x3
  4057d8:	b.ne	405814 <feof@plt+0x2e44>  // b.any
  4057dc:	ldr	w9, [x19, #24]
  4057e0:	cmp	w9, #0x0
  4057e4:	b.gt	4057f4 <feof@plt+0x2e24>
  4057e8:	ldr	w9, [x19, #28]
  4057ec:	cmp	w9, #0x1
  4057f0:	b.lt	4057fc <feof@plt+0x2e2c>  // b.tstop
  4057f4:	ldrb	w9, [x19, #120]
  4057f8:	cbz	w9, 405b7c <feof@plt+0x31ac>
  4057fc:	ldr	x9, [x19, #160]
  405800:	cbz	x9, 405814 <feof@plt+0x2e44>
  405804:	ldp	x1, x2, [x20]
  405808:	mov	x0, x19
  40580c:	blr	x9
  405810:	ldr	w8, [x20, #56]
  405814:	cmp	w21, #0x6
  405818:	b.ne	40583c <feof@plt+0x2e6c>  // b.any
  40581c:	cmp	w8, #0x4
  405820:	b.ne	40583c <feof@plt+0x2e6c>  // b.any
  405824:	ldr	w8, [x19, #56]
  405828:	add	w8, w8, #0x1
  40582c:	str	w8, [x19, #56]
  405830:	ldr	w8, [x19, #244]
  405834:	cbnz	w8, 405868 <feof@plt+0x2e98>
  405838:	b	405854 <feof@plt+0x2e84>
  40583c:	add	x8, x19, w8, sxtw #2
  405840:	ldr	w9, [x8, #8]
  405844:	add	w9, w9, #0x1
  405848:	str	w9, [x8, #8]
  40584c:	ldr	w8, [x19, #244]
  405850:	cbnz	w8, 405868 <feof@plt+0x2e98>
  405854:	ldr	x8, [x19, #248]
  405858:	cbz	x8, 405868 <feof@plt+0x2e98>
  40585c:	mov	x0, x19
  405860:	blr	x8
  405864:	ldr	w8, [x19, #244]
  405868:	add	w8, w8, #0x1
  40586c:	mov	x9, x20
  405870:	str	w8, [x19, #244]
  405874:	str	xzr, [x9, #48]!
  405878:	str	x9, [x20, #24]
  40587c:	ldr	x0, [x19]
  405880:	mov	x1, x20
  405884:	bl	40da04 <feof@plt+0xb034>
  405888:	ldr	x8, [x19, #136]
  40588c:	mov	x0, x19
  405890:	mov	x1, x20
  405894:	blr	x8
  405898:	ldr	x0, [x19]
  40589c:	bl	40f510 <feof@plt+0xcb40>
  4058a0:	ldrb	w8, [x19, #119]
  4058a4:	cbz	w8, 405944 <feof@plt+0x2f74>
  4058a8:	ldr	x8, [x19, #184]
  4058ac:	ldp	w3, w1, [x20, #56]
  4058b0:	mov	x0, x19
  4058b4:	mov	w2, w21
  4058b8:	blr	x8
  4058bc:	cbz	x0, 405944 <feof@plt+0x2f74>
  4058c0:	ldr	x23, [x19]
  4058c4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4058c8:	mov	x22, x0
  4058cc:	add	x1, x1, #0xb7c
  4058d0:	mov	x0, x23
  4058d4:	bl	40f384 <feof@plt+0xc9b4>
  4058d8:	ldr	w8, [x20, #56]
  4058dc:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  4058e0:	add	x9, x9, #0x678
  4058e4:	ldrb	w24, [x23, #67]
  4058e8:	ldr	x25, [x9, x8, lsl #3]
  4058ec:	mov	x0, x25
  4058f0:	bl	402420 <strlen@plt>
  4058f4:	mov	x2, x0
  4058f8:	mov	w0, w24
  4058fc:	mov	x1, x25
  405900:	bl	407b70 <feof@plt+0x51a0>
  405904:	mov	x1, x0
  405908:	mov	x0, x23
  40590c:	bl	40f384 <feof@plt+0xc9b4>
  405910:	mov	x0, x23
  405914:	mov	x1, x22
  405918:	bl	40f384 <feof@plt+0xc9b4>
  40591c:	ldrb	w0, [x23, #67]
  405920:	bl	407bf4 <feof@plt+0x5224>
  405924:	mov	x1, x0
  405928:	mov	x0, x23
  40592c:	bl	40f384 <feof@plt+0xc9b4>
  405930:	mov	w1, #0x5d                  	// #93
  405934:	mov	x0, x23
  405938:	bl	40d5a0 <feof@plt+0xabd0>
  40593c:	mov	x0, x22
  405940:	bl	4024c0 <free@plt>
  405944:	ldr	x8, [x19, #152]
  405948:	mov	x0, x19
  40594c:	mov	x1, x20
  405950:	mov	w2, w21
  405954:	blr	x8
  405958:	ldrb	w8, [x19, #229]
  40595c:	cbz	w8, 405ae0 <feof@plt+0x3110>
  405960:	ldr	x21, [x19]
  405964:	cbz	x21, 405b4c <feof@plt+0x317c>
  405968:	ldr	x24, [x20, #40]
  40596c:	cbz	x24, 405b64 <feof@plt+0x3194>
  405970:	ldr	w8, [x24, #120]
  405974:	cbz	w8, 405ad8 <feof@plt+0x3108>
  405978:	adrp	x22, 451000 <_obstack_memory_used@@Base+0xa68>
  40597c:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  405980:	mov	w25, wzr
  405984:	add	x22, x22, #0xb96
  405988:	add	x23, x23, #0xb9e
  40598c:	b	405a08 <feof@plt+0x3038>
  405990:	ldr	x8, [x24, #152]
  405994:	sub	w9, w25, #0x2
  405998:	add	x8, x8, w9, sxtw #3
  40599c:	ldr	x26, [x8]
  4059a0:	add	x8, sp, #0x20
  4059a4:	ldr	w0, [x26]
  4059a8:	bl	413104 <feof@plt+0x10734>
  4059ac:	mov	x0, x21
  4059b0:	mov	x1, x22
  4059b4:	bl	40f384 <feof@plt+0xc9b4>
  4059b8:	ldr	x1, [sp, #32]
  4059bc:	mov	x0, x21
  4059c0:	bl	407924 <feof@plt+0x4f54>
  4059c4:	ldr	w0, [x26, #4]
  4059c8:	mov	x8, sp
  4059cc:	bl	413104 <feof@plt+0x10734>
  4059d0:	ldp	w2, w3, [sp, #40]
  4059d4:	ldp	w4, w5, [sp, #8]
  4059d8:	mov	x0, x21
  4059dc:	mov	x1, x23
  4059e0:	bl	40fbbc <feof@plt+0xd1ec>
  4059e4:	ldr	x1, [x26, #8]
  4059e8:	mov	x0, x21
  4059ec:	bl	407924 <feof@plt+0x4f54>
  4059f0:	mov	x0, x21
  4059f4:	bl	40fd08 <feof@plt+0xd338>
  4059f8:	ldr	w8, [x24, #120]
  4059fc:	add	w25, w25, #0x1
  405a00:	cmp	w25, w8
  405a04:	b.cs	405ad4 <feof@plt+0x3104>  // b.hs, b.nlast
  405a08:	cmp	w25, #0x1
  405a0c:	b.gt	405990 <feof@plt+0x2fc0>
  405a10:	add	x8, x24, w25, sxtw #3
  405a14:	add	x8, x8, #0x80
  405a18:	b	40599c <feof@plt+0x2fcc>
  405a1c:	ldp	x8, x1, [x19, #168]
  405a20:	blr	x8
  405a24:	cbz	w0, 405b18 <feof@plt+0x3148>
  405a28:	ldr	w8, [x19, #88]
  405a2c:	cmp	w8, #0x1
  405a30:	b.lt	405ab4 <feof@plt+0x30e4>  // b.tstop
  405a34:	mov	x0, x20
  405a38:	mov	w1, wzr
  405a3c:	bl	40d4ac <feof@plt+0xaadc>
  405a40:	ldr	w23, [x19, #88]
  405a44:	cmp	w23, #0x1
  405a48:	b.lt	405ab4 <feof@plt+0x30e4>  // b.tstop
  405a4c:	mov	w22, w0
  405a50:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  405a54:	mov	w25, #0xc                   	// #12
  405a58:	b	405a68 <feof@plt+0x3098>
  405a5c:	mov	w23, w9
  405a60:	cmp	w23, #0x0
  405a64:	b.le	405ab4 <feof@plt+0x30e4>
  405a68:	ldr	x9, [x19, #80]
  405a6c:	sxtw	x8, w23
  405a70:	sub	x23, x8, #0x1
  405a74:	mul	x8, x23, x25
  405a78:	ldr	x0, [x24, #1880]
  405a7c:	ldr	w1, [x9, x8]
  405a80:	mov	w2, w22
  405a84:	bl	42afcc <feof@plt+0x285fc>
  405a88:	tbnz	w0, #31, 405a60 <feof@plt+0x3090>
  405a8c:	ldr	x8, [x19, #80]
  405a90:	madd	x9, x23, x25, x8
  405a94:	ldp	w9, w8, [x9, #4]
  405a98:	cmp	w8, #0xf
  405a9c:	b.eq	405a5c <feof@plt+0x308c>  // b.none
  405aa0:	cbz	w9, 405ab0 <feof@plt+0x30e0>
  405aa4:	ldr	w10, [x20, #60]
  405aa8:	cmp	w9, w10
  405aac:	b.ne	405a60 <feof@plt+0x3090>  // b.any
  405ab0:	cbnz	w8, 405ac4 <feof@plt+0x30f4>
  405ab4:	ldr	x8, [x19, #72]
  405ab8:	ldrsw	x9, [x20, #60]
  405abc:	ldr	w8, [x8, x9, lsl #2]
  405ac0:	cbz	w8, 405b34 <feof@plt+0x3164>
  405ac4:	str	w8, [x20, #56]
  405ac8:	cmp	w8, #0x1
  405acc:	b.eq	405728 <feof@plt+0x2d58>  // b.none
  405ad0:	b	405794 <feof@plt+0x2dc4>
  405ad4:	ldr	x21, [x19]
  405ad8:	mov	x0, x21
  405adc:	bl	40f638 <feof@plt+0xcc68>
  405ae0:	ldr	w1, [x20, #56]
  405ae4:	mov	x0, x19
  405ae8:	bl	404e90 <feof@plt+0x24c0>
  405aec:	str	xzr, [x20, #48]
  405af0:	ldr	x0, [x19, #232]
  405af4:	cbz	x0, 405b08 <feof@plt+0x3138>
  405af8:	ldr	x1, [x20, #40]
  405afc:	ldrb	w8, [x1, #161]
  405b00:	cbnz	w8, 405b08 <feof@plt+0x3138>
  405b04:	bl	40b33c <feof@plt+0x896c>
  405b08:	ldr	w8, [x19, #216]
  405b0c:	mov	w0, #0x1                   	// #1
  405b10:	sub	w8, w8, #0x1
  405b14:	str	w8, [x19, #216]
  405b18:	ldp	x20, x19, [sp, #128]
  405b1c:	ldp	x22, x21, [sp, #112]
  405b20:	ldp	x24, x23, [sp, #96]
  405b24:	ldp	x26, x25, [sp, #80]
  405b28:	ldp	x29, x30, [sp, #64]
  405b2c:	add	sp, sp, #0x90
  405b30:	ret
  405b34:	ldr	w8, [x20, #56]
  405b38:	cmp	w8, #0x1
  405b3c:	b.eq	405728 <feof@plt+0x2d58>  // b.none
  405b40:	b	405794 <feof@plt+0x2dc4>
  405b44:	mov	x0, x19
  405b48:	bl	405bcc <feof@plt+0x31fc>
  405b4c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  405b50:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  405b54:	add	x0, x0, #0xa28
  405b58:	add	x2, x2, #0xb7f
  405b5c:	mov	w1, #0x322                 	// #802
  405b60:	bl	404ac4 <feof@plt+0x20f4>
  405b64:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  405b68:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  405b6c:	add	x0, x0, #0xa28
  405b70:	add	x2, x2, #0xb7f
  405b74:	mov	w1, #0x323                 	// #803
  405b78:	bl	404ac4 <feof@plt+0x20f4>
  405b7c:	mov	x0, x20
  405b80:	bl	405464 <feof@plt+0x2a94>
  405b84:	add	x8, sp, #0x20
  405b88:	bl	413104 <feof@plt+0x10734>
  405b8c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  405b90:	ldr	x2, [sp, #32]
  405b94:	ldr	x0, [x8, #1336]
  405b98:	ldr	w3, [sp, #40]
  405b9c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405ba0:	add	x1, x1, #0x9ed
  405ba4:	bl	404e08 <feof@plt+0x2438>
  405ba8:	mov	w0, #0x4                   	// #4
  405bac:	bl	402890 <exit@plt>
  405bb0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  405bb4:	ldr	x0, [x8, #1336]
  405bb8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405bbc:	add	x1, x1, #0x878
  405bc0:	bl	404e08 <feof@plt+0x2438>
  405bc4:	mov	w0, #0x1                   	// #1
  405bc8:	bl	402890 <exit@plt>
  405bcc:	stp	x29, x30, [sp, #-32]!
  405bd0:	str	x19, [sp, #16]
  405bd4:	mov	x29, sp
  405bd8:	ldr	w8, [x0, #216]
  405bdc:	mov	x19, x0
  405be0:	cmp	w8, #0x2
  405be4:	b.gt	405bf0 <feof@plt+0x3220>
  405be8:	ldr	x0, [x19]
  405bec:	bl	410084 <feof@plt+0xd6b4>
  405bf0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  405bf4:	ldr	x0, [x8, #1336]
  405bf8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  405bfc:	add	x1, x1, #0xbd7
  405c00:	bl	404e08 <feof@plt+0x2438>
  405c04:	mov	w1, #0x3                   	// #3
  405c08:	mov	x0, x19
  405c0c:	bl	404e90 <feof@plt+0x24c0>
  405c10:	bl	404ffc <feof@plt+0x262c>
  405c14:	tbnz	w0, #31, 405c4c <feof@plt+0x327c>
  405c18:	mov	w8, w0
  405c1c:	cbz	w0, 405c44 <feof@plt+0x3274>
  405c20:	mov	w9, #0xcccd                	// #52429
  405c24:	mov	w0, wzr
  405c28:	movk	w9, #0xcccc, lsl #16
  405c2c:	umull	x10, w8, w9
  405c30:	cmp	w8, #0x9
  405c34:	lsr	x8, x10, #35
  405c38:	add	w0, w0, #0x1
  405c3c:	b.hi	405c2c <feof@plt+0x325c>  // b.pmore
  405c40:	ret
  405c44:	mov	w0, #0x1                   	// #1
  405c48:	ret
  405c4c:	stp	x29, x30, [sp, #-16]!
  405c50:	mov	x29, sp
  405c54:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  405c58:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  405c5c:	add	x0, x0, #0xa28
  405c60:	add	x2, x2, #0xa1d
  405c64:	mov	w1, #0x415                 	// #1045
  405c68:	bl	404ac4 <feof@plt+0x20f4>
  405c6c:	ldrb	w8, [x0]
  405c70:	mov	x9, x0
  405c74:	cmp	w8, #0x2e
  405c78:	b.ne	405ca4 <feof@plt+0x32d4>  // b.any
  405c7c:	mov	x9, x0
  405c80:	ldrb	w8, [x9, #1]
  405c84:	cmp	w8, #0x2e
  405c88:	b.ne	405ccc <feof@plt+0x32fc>  // b.any
  405c8c:	ldrb	w8, [x9, #2]
  405c90:	cmp	w8, #0x2f
  405c94:	b.ne	405ccc <feof@plt+0x32fc>  // b.any
  405c98:	ldrb	w8, [x9, #3]!
  405c9c:	cmp	w8, #0x2e
  405ca0:	b.eq	405c80 <feof@plt+0x32b0>  // b.none
  405ca4:	cmp	w8, #0x67
  405ca8:	b.ne	405ccc <feof@plt+0x32fc>  // b.any
  405cac:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  405cb0:	add	x8, x8, #0xa2f
  405cb4:	ldrb	w10, [x9, #1]!
  405cb8:	ldrb	w11, [x8], #1
  405cbc:	cbz	w11, 405ccc <feof@plt+0x32fc>
  405cc0:	cbz	w10, 405ccc <feof@plt+0x32fc>
  405cc4:	cmp	w10, w11
  405cc8:	b.eq	405cb4 <feof@plt+0x32e4>  // b.none
  405ccc:	mov	x8, x9
  405cd0:	cmp	x9, x0
  405cd4:	b.ls	405ce8 <feof@plt+0x3318>  // b.plast
  405cd8:	mov	x9, x8
  405cdc:	ldrb	w10, [x9, #-1]!
  405ce0:	cmp	w10, #0x2f
  405ce4:	b.ne	405ccc <feof@plt+0x32fc>  // b.any
  405ce8:	mov	x0, x8
  405cec:	ret
  405cf0:	sub	sp, sp, #0x120
  405cf4:	stp	x29, x30, [sp, #256]
  405cf8:	stp	x28, x19, [sp, #272]
  405cfc:	add	x29, sp, #0x100
  405d00:	mov	x8, #0xffffffffffffffc8    	// #-56
  405d04:	mov	x9, sp
  405d08:	add	x10, sp, #0x80
  405d0c:	movk	x8, #0xff80, lsl #32
  405d10:	add	x11, x29, #0x20
  405d14:	add	x9, x9, #0x80
  405d18:	add	x10, x10, #0x38
  405d1c:	mov	x19, x0
  405d20:	stp	x1, x2, [sp, #128]
  405d24:	stp	x3, x4, [sp, #144]
  405d28:	stp	x5, x6, [sp, #160]
  405d2c:	str	x7, [sp, #176]
  405d30:	stp	q0, q1, [sp]
  405d34:	stp	q2, q3, [sp, #32]
  405d38:	stp	q4, q5, [sp, #64]
  405d3c:	stp	q6, q7, [sp, #96]
  405d40:	stp	x9, x8, [x29, #-56]
  405d44:	stp	x11, x10, [x29, #-72]
  405d48:	bl	4027c0 <__errno_location@plt>
  405d4c:	ldr	w8, [x0]
  405d50:	sub	x9, x29, #0x48
  405d54:	mov	x0, x19
  405d58:	stur	x9, [x29, #-32]
  405d5c:	stur	w8, [x29, #-24]
  405d60:	bl	402640 <gettext@plt>
  405d64:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  405d68:	ldr	x8, [x19, #872]
  405d6c:	stur	x0, [x29, #-40]
  405d70:	stur	xzr, [x29, #-16]
  405d74:	sub	x1, x29, #0x28
  405d78:	ldr	x0, [x8]
  405d7c:	bl	40f5fc <feof@plt+0xcc2c>
  405d80:	ldr	x8, [x19, #872]
  405d84:	ldr	x0, [x8]
  405d88:	bl	410084 <feof@plt+0xd6b4>
  405d8c:	ldp	x28, x19, [sp, #272]
  405d90:	ldp	x29, x30, [sp, #256]
  405d94:	add	sp, sp, #0x120
  405d98:	ret
  405d9c:	sub	sp, sp, #0x1e0
  405da0:	stp	x29, x30, [sp, #432]
  405da4:	stp	x28, x21, [sp, #448]
  405da8:	stp	x20, x19, [sp, #464]
  405dac:	add	x29, sp, #0x1b0
  405db0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  405db4:	mov	x20, x2
  405db8:	mov	w2, w1
  405dbc:	ldr	x1, [x8, #1880]
  405dc0:	mov	x19, x0
  405dc4:	stp	x3, x4, [sp, #128]
  405dc8:	add	x0, sp, #0xa8
  405dcc:	mov	x3, xzr
  405dd0:	stp	x5, x6, [sp, #144]
  405dd4:	str	x7, [sp, #160]
  405dd8:	stp	q1, q2, [sp, #16]
  405ddc:	stp	q3, q4, [sp, #48]
  405de0:	str	q0, [sp]
  405de4:	stp	q5, q6, [sp, #80]
  405de8:	str	q7, [sp, #112]
  405dec:	add	x21, sp, #0xa8
  405df0:	bl	42bfb4 <feof@plt+0x295e4>
  405df4:	mov	x8, #0xffffffffffffffd8    	// #-40
  405df8:	mov	x9, sp
  405dfc:	add	x10, sp, #0x80
  405e00:	movk	x8, #0xff80, lsl #32
  405e04:	add	x11, x29, #0x30
  405e08:	add	x9, x9, #0x80
  405e0c:	add	x10, x10, #0x28
  405e10:	mov	x0, x20
  405e14:	stp	x9, x8, [x29, #-80]
  405e18:	stp	x11, x10, [x29, #-96]
  405e1c:	bl	402640 <gettext@plt>
  405e20:	mov	x20, x0
  405e24:	bl	4027c0 <__errno_location@plt>
  405e28:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  405e2c:	ldr	w8, [x0]
  405e30:	ldr	d0, [x10, #1896]
  405e34:	sub	x9, x29, #0x60
  405e38:	stp	x20, x9, [x29, #-64]
  405e3c:	stur	w8, [x29, #-48]
  405e40:	stp	x21, x21, [x29, #-32]
  405e44:	stur	d0, [x29, #-8]
  405e48:	ldrb	w8, [x19, #220]
  405e4c:	cbnz	w8, 405eb0 <feof@plt+0x34e0>
  405e50:	ldr	x0, [x19]
  405e54:	bl	40f878 <feof@plt+0xcea8>
  405e58:	ldr	x20, [x19]
  405e5c:	mov	x21, x0
  405e60:	sub	x1, x29, #0x40
  405e64:	mov	x0, x19
  405e68:	bl	404b7c <feof@plt+0x21ac>
  405e6c:	mov	x1, x0
  405e70:	mov	x0, x20
  405e74:	bl	40f800 <feof@plt+0xce30>
  405e78:	ldr	x0, [x19]
  405e7c:	sub	x1, x29, #0x40
  405e80:	bl	40da04 <feof@plt+0xb034>
  405e84:	ldr	x0, [x19]
  405e88:	bl	40f510 <feof@plt+0xcb40>
  405e8c:	ldr	x0, [x19]
  405e90:	bl	40f888 <feof@plt+0xceb8>
  405e94:	ldr	x0, [x19]
  405e98:	mov	x1, x21
  405e9c:	bl	40f800 <feof@plt+0xce30>
  405ea0:	add	x1, sp, #0xa8
  405ea4:	mov	w2, #0x8                   	// #8
  405ea8:	mov	x0, x19
  405eac:	bl	4094b8 <feof@plt+0x6ae8>
  405eb0:	add	x0, sp, #0xa8
  405eb4:	bl	42c094 <feof@plt+0x296c4>
  405eb8:	ldp	x20, x19, [sp, #464]
  405ebc:	ldp	x28, x21, [sp, #448]
  405ec0:	ldp	x29, x30, [sp, #432]
  405ec4:	add	sp, sp, #0x1e0
  405ec8:	ret
  405ecc:	sub	sp, sp, #0x1b0
  405ed0:	stp	x29, x30, [sp, #368]
  405ed4:	str	x28, [sp, #384]
  405ed8:	stp	x22, x21, [sp, #400]
  405edc:	stp	x20, x19, [sp, #416]
  405ee0:	add	x29, sp, #0x170
  405ee4:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  405ee8:	ldr	x8, [x22, #872]
  405eec:	stp	q4, q5, [sp, #64]
  405ef0:	stp	q2, q3, [sp, #32]
  405ef4:	stp	q0, q1, [sp]
  405ef8:	stp	x6, x7, [sp, #152]
  405efc:	stp	x4, x5, [sp, #136]
  405f00:	stp	q6, q7, [sp, #96]
  405f04:	ldr	w9, [x8, #240]
  405f08:	mov	x10, #0xffffffffffffffe0    	// #-32
  405f0c:	movk	x10, #0xff80, lsl #32
  405f10:	mov	w20, w2
  405f14:	add	w9, w9, #0x1
  405f18:	str	w9, [x8, #240]
  405f1c:	mov	x8, sp
  405f20:	add	x8, x8, #0x80
  405f24:	stp	x8, x10, [x29, #-16]
  405f28:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  405f2c:	mov	w2, w1
  405f30:	ldr	x1, [x8, #1880]
  405f34:	add	x9, sp, #0x88
  405f38:	mov	x19, x3
  405f3c:	mov	w21, w0
  405f40:	add	x9, x9, #0x20
  405f44:	add	x8, x29, #0x40
  405f48:	add	x0, sp, #0xa8
  405f4c:	mov	x3, xzr
  405f50:	stp	x8, x9, [x29, #-32]
  405f54:	bl	42bfb4 <feof@plt+0x295e4>
  405f58:	add	x0, sp, #0xa8
  405f5c:	sub	x3, x29, #0x20
  405f60:	mov	w1, w20
  405f64:	mov	x2, x19
  405f68:	mov	w4, w21
  405f6c:	bl	405fcc <feof@plt+0x35fc>
  405f70:	mov	w19, w0
  405f74:	add	x0, sp, #0xa8
  405f78:	bl	42c094 <feof@plt+0x296c4>
  405f7c:	ldr	x0, [x22, #872]
  405f80:	ldr	w8, [x0, #240]
  405f84:	subs	w8, w8, #0x1
  405f88:	str	w8, [x0, #240]
  405f8c:	b.ne	405fb0 <feof@plt+0x35e0>  // b.any
  405f90:	ldr	w8, [x0, #244]
  405f94:	cmp	w8, #0x1
  405f98:	b.lt	405fac <feof@plt+0x35dc>  // b.tstop
  405f9c:	ldr	x8, [x0, #256]
  405fa0:	cbz	x8, 405fac <feof@plt+0x35dc>
  405fa4:	blr	x8
  405fa8:	ldr	x0, [x22, #872]
  405fac:	str	wzr, [x0, #244]
  405fb0:	and	w0, w19, #0x1
  405fb4:	ldp	x20, x19, [sp, #416]
  405fb8:	ldp	x22, x21, [sp, #400]
  405fbc:	ldr	x28, [sp, #384]
  405fc0:	ldp	x29, x30, [sp, #368]
  405fc4:	add	sp, sp, #0x1b0
  405fc8:	ret
  405fcc:	sub	sp, sp, #0x80
  405fd0:	stp	x29, x30, [sp, #64]
  405fd4:	stp	x24, x23, [sp, #80]
  405fd8:	stp	x22, x21, [sp, #96]
  405fdc:	stp	x20, x19, [sp, #112]
  405fe0:	add	x29, sp, #0x40
  405fe4:	mov	x20, x3
  405fe8:	mov	x19, x0
  405fec:	cmp	w4, #0xb
  405ff0:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  405ff4:	b.ne	406044 <feof@plt+0x3674>  // b.any
  405ff8:	cbz	x19, 4060b0 <feof@plt+0x36e0>
  405ffc:	ldr	x8, [x24, #872]
  406000:	mov	w9, #0x6                   	// #6
  406004:	mov	x0, x2
  406008:	ldrb	w8, [x8, #123]
  40600c:	cmp	w8, #0x0
  406010:	mov	w8, #0x4                   	// #4
  406014:	csel	w22, w8, w9, eq  // eq = none
  406018:	bl	402640 <gettext@plt>
  40601c:	mov	x21, x0
  406020:	bl	4027c0 <__errno_location@plt>
  406024:	ldr	w8, [x0]
  406028:	ldr	x9, [x24, #872]
  40602c:	stp	x21, x20, [sp]
  406030:	stp	x19, x19, [sp, #32]
  406034:	str	w8, [sp, #16]
  406038:	ldr	w8, [x9, #124]
  40603c:	stp	w22, w8, [sp, #56]
  406040:	b	406088 <feof@plt+0x36b8>
  406044:	cbz	x19, 4060b0 <feof@plt+0x36e0>
  406048:	mov	x0, x2
  40604c:	mov	w22, w4
  406050:	mov	w21, w1
  406054:	bl	402640 <gettext@plt>
  406058:	mov	x23, x0
  40605c:	bl	4027c0 <__errno_location@plt>
  406060:	ldr	w8, [x0]
  406064:	cmp	w22, #0xa
  406068:	stp	x23, x20, [sp]
  40606c:	stp	x19, x19, [sp, #32]
  406070:	str	w8, [sp, #16]
  406074:	stp	w22, wzr, [sp, #56]
  406078:	b.eq	406084 <feof@plt+0x36b4>  // b.none
  40607c:	cmp	w22, #0x6
  406080:	b.ne	406088 <feof@plt+0x36b8>  // b.any
  406084:	str	w21, [sp, #60]
  406088:	ldr	x0, [x24, #872]
  40608c:	mov	x1, sp
  406090:	bl	405680 <feof@plt+0x2cb0>
  406094:	ldp	x20, x19, [sp, #112]
  406098:	ldp	x22, x21, [sp, #96]
  40609c:	ldp	x24, x23, [sp, #80]
  4060a0:	ldp	x29, x30, [sp, #64]
  4060a4:	and	w0, w0, #0x1
  4060a8:	add	sp, sp, #0x80
  4060ac:	ret
  4060b0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4060b4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4060b8:	add	x0, x0, #0xa28
  4060bc:	add	x2, x2, #0x7b6
  4060c0:	mov	w1, #0x123                 	// #291
  4060c4:	bl	404ac4 <feof@plt+0x20f4>
  4060c8:	sub	sp, sp, #0xe0
  4060cc:	stp	x29, x30, [sp, #192]
  4060d0:	stp	x20, x19, [sp, #208]
  4060d4:	add	x29, sp, #0xc0
  4060d8:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  4060dc:	ldr	x10, [x20, #872]
  4060e0:	stp	q4, q5, [sp, #64]
  4060e4:	stp	q2, q3, [sp, #32]
  4060e8:	stp	q0, q1, [sp]
  4060ec:	stp	x6, x7, [x29, #-48]
  4060f0:	stp	x4, x5, [x29, #-64]
  4060f4:	stp	q6, q7, [sp, #96]
  4060f8:	ldr	w11, [x10, #240]
  4060fc:	mov	x8, x3
  406100:	mov	w9, w0
  406104:	mov	x12, #0xffffffffffffffe0    	// #-32
  406108:	add	w11, w11, #0x1
  40610c:	mov	x13, sp
  406110:	str	w11, [x10, #240]
  406114:	sub	x10, x29, #0x40
  406118:	movk	x12, #0xff80, lsl #32
  40611c:	add	x11, x29, #0x20
  406120:	add	x13, x13, #0x80
  406124:	add	x10, x10, #0x20
  406128:	sub	x3, x29, #0x20
  40612c:	mov	x0, x1
  406130:	mov	w1, w2
  406134:	mov	x2, x8
  406138:	mov	w4, w9
  40613c:	stp	x13, x12, [x29, #-16]
  406140:	stp	x11, x10, [x29, #-32]
  406144:	bl	405fcc <feof@plt+0x35fc>
  406148:	mov	w19, w0
  40614c:	ldr	x0, [x20, #872]
  406150:	ldr	w8, [x0, #240]
  406154:	subs	w8, w8, #0x1
  406158:	str	w8, [x0, #240]
  40615c:	b.ne	406180 <feof@plt+0x37b0>  // b.any
  406160:	ldr	w8, [x0, #244]
  406164:	cmp	w8, #0x1
  406168:	b.lt	40617c <feof@plt+0x37ac>  // b.tstop
  40616c:	ldr	x8, [x0, #256]
  406170:	cbz	x8, 40617c <feof@plt+0x37ac>
  406174:	blr	x8
  406178:	ldr	x0, [x20, #872]
  40617c:	str	wzr, [x0, #244]
  406180:	and	w0, w19, #0x1
  406184:	ldp	x20, x19, [sp, #208]
  406188:	ldp	x29, x30, [sp, #192]
  40618c:	add	sp, sp, #0xe0
  406190:	ret
  406194:	sub	sp, sp, #0xe0
  406198:	stp	x29, x30, [sp, #176]
  40619c:	stp	x22, x21, [sp, #192]
  4061a0:	stp	x20, x19, [sp, #208]
  4061a4:	add	x29, sp, #0xb0
  4061a8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4061ac:	mov	w21, w2
  4061b0:	mov	w2, w1
  4061b4:	ldr	x1, [x8, #1880]
  4061b8:	mov	x20, x3
  4061bc:	mov	w22, w0
  4061c0:	add	x0, sp, #0x8
  4061c4:	mov	x3, xzr
  4061c8:	mov	x19, x4
  4061cc:	bl	42bfb4 <feof@plt+0x295e4>
  4061d0:	add	x0, sp, #0x8
  4061d4:	mov	w1, w21
  4061d8:	mov	x2, x20
  4061dc:	mov	x3, x19
  4061e0:	mov	w4, w22
  4061e4:	bl	405fcc <feof@plt+0x35fc>
  4061e8:	mov	w19, w0
  4061ec:	add	x0, sp, #0x8
  4061f0:	bl	42c094 <feof@plt+0x296c4>
  4061f4:	and	w0, w19, #0x1
  4061f8:	ldp	x20, x19, [sp, #208]
  4061fc:	ldp	x22, x21, [sp, #192]
  406200:	ldp	x29, x30, [sp, #176]
  406204:	add	sp, sp, #0xe0
  406208:	ret
  40620c:	sub	sp, sp, #0x1f0
  406210:	stp	x29, x30, [sp, #448]
  406214:	stp	x28, x21, [sp, #464]
  406218:	stp	x20, x19, [sp, #480]
  40621c:	add	x29, sp, #0x1c0
  406220:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  406224:	ldr	x9, [x20, #872]
  406228:	stp	q4, q5, [sp, #64]
  40622c:	stp	q2, q3, [sp, #32]
  406230:	stp	q0, q1, [sp]
  406234:	stp	x6, x7, [sp, #168]
  406238:	stp	x4, x5, [sp, #152]
  40623c:	stp	x2, x3, [sp, #136]
  406240:	stp	q6, q7, [sp, #96]
  406244:	ldr	w12, [x9, #240]
  406248:	mov	x19, x1
  40624c:	mov	w8, w0
  406250:	mov	x10, #0xffffffffffffffd0    	// #-48
  406254:	add	w12, w12, #0x1
  406258:	str	w12, [x9, #240]
  40625c:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  406260:	ldr	x1, [x9, #1880]
  406264:	mov	x11, sp
  406268:	add	x13, sp, #0x88
  40626c:	movk	x10, #0xff80, lsl #32
  406270:	add	x11, x11, #0x80
  406274:	add	x13, x13, #0x30
  406278:	add	x9, x29, #0x30
  40627c:	add	x0, sp, #0xb8
  406280:	mov	w2, w8
  406284:	mov	x3, xzr
  406288:	stp	x11, x10, [x29, #-80]
  40628c:	stp	x9, x13, [x29, #-96]
  406290:	add	x21, sp, #0xb8
  406294:	bl	42bfb4 <feof@plt+0x295e4>
  406298:	mov	x0, x19
  40629c:	bl	402640 <gettext@plt>
  4062a0:	mov	x19, x0
  4062a4:	bl	4027c0 <__errno_location@plt>
  4062a8:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4062ac:	ldr	w8, [x0]
  4062b0:	ldr	x0, [x20, #872]
  4062b4:	ldr	d0, [x10, #1896]
  4062b8:	sub	x9, x29, #0x60
  4062bc:	sub	x1, x29, #0x40
  4062c0:	stp	x19, x9, [x29, #-64]
  4062c4:	stur	w8, [x29, #-48]
  4062c8:	stp	x21, x21, [x29, #-32]
  4062cc:	stur	d0, [x29, #-8]
  4062d0:	bl	405680 <feof@plt+0x2cb0>
  4062d4:	add	x0, sp, #0xb8
  4062d8:	bl	42c094 <feof@plt+0x296c4>
  4062dc:	ldr	x0, [x20, #872]
  4062e0:	ldr	w8, [x0, #240]
  4062e4:	subs	w8, w8, #0x1
  4062e8:	str	w8, [x0, #240]
  4062ec:	b.ne	406310 <feof@plt+0x3940>  // b.any
  4062f0:	ldr	w8, [x0, #244]
  4062f4:	cmp	w8, #0x1
  4062f8:	b.lt	40630c <feof@plt+0x393c>  // b.tstop
  4062fc:	ldr	x8, [x0, #256]
  406300:	cbz	x8, 40630c <feof@plt+0x393c>
  406304:	blr	x8
  406308:	ldr	x0, [x20, #872]
  40630c:	str	wzr, [x0, #244]
  406310:	ldp	x20, x19, [sp, #480]
  406314:	ldp	x28, x21, [sp, #464]
  406318:	ldp	x29, x30, [sp, #448]
  40631c:	add	sp, sp, #0x1f0
  406320:	ret
  406324:	sub	sp, sp, #0x140
  406328:	stp	x29, x30, [sp, #272]
  40632c:	stp	x28, x21, [sp, #288]
  406330:	stp	x20, x19, [sp, #304]
  406334:	add	x29, sp, #0x110
  406338:	stp	x2, x3, [sp, #128]
  40633c:	stp	x4, x5, [sp, #144]
  406340:	stp	x6, x7, [sp, #160]
  406344:	stp	q1, q2, [sp, #16]
  406348:	stp	q3, q4, [sp, #48]
  40634c:	str	q0, [sp]
  406350:	stp	q5, q6, [sp, #80]
  406354:	str	q7, [sp, #112]
  406358:	cbz	x0, 40641c <feof@plt+0x3a4c>
  40635c:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  406360:	ldr	x8, [x21, #872]
  406364:	mov	x9, #0xffffffffffffffd0    	// #-48
  406368:	mov	x10, sp
  40636c:	add	x11, sp, #0x80
  406370:	ldr	w12, [x8, #240]
  406374:	mov	x19, x0
  406378:	movk	x9, #0xff80, lsl #32
  40637c:	add	x13, x29, #0x30
  406380:	add	x10, x10, #0x80
  406384:	add	x11, x11, #0x30
  406388:	add	w12, w12, #0x1
  40638c:	mov	x0, x1
  406390:	str	w12, [x8, #240]
  406394:	stp	x10, x9, [x29, #-80]
  406398:	stp	x13, x11, [x29, #-96]
  40639c:	bl	402640 <gettext@plt>
  4063a0:	mov	x20, x0
  4063a4:	bl	4027c0 <__errno_location@plt>
  4063a8:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4063ac:	ldr	w8, [x0]
  4063b0:	ldr	x0, [x21, #872]
  4063b4:	ldr	d0, [x10, #1896]
  4063b8:	sub	x9, x29, #0x60
  4063bc:	sub	x1, x29, #0x40
  4063c0:	stp	x20, x9, [x29, #-64]
  4063c4:	stur	w8, [x29, #-48]
  4063c8:	stp	x19, x19, [x29, #-32]
  4063cc:	stur	d0, [x29, #-8]
  4063d0:	bl	405680 <feof@plt+0x2cb0>
  4063d4:	ldr	x0, [x21, #872]
  4063d8:	ldr	w8, [x0, #240]
  4063dc:	subs	w8, w8, #0x1
  4063e0:	str	w8, [x0, #240]
  4063e4:	b.ne	406408 <feof@plt+0x3a38>  // b.any
  4063e8:	ldr	w8, [x0, #244]
  4063ec:	cmp	w8, #0x1
  4063f0:	b.lt	406404 <feof@plt+0x3a34>  // b.tstop
  4063f4:	ldr	x8, [x0, #256]
  4063f8:	cbz	x8, 406404 <feof@plt+0x3a34>
  4063fc:	blr	x8
  406400:	ldr	x0, [x21, #872]
  406404:	str	wzr, [x0, #244]
  406408:	ldp	x20, x19, [sp, #304]
  40640c:	ldp	x28, x21, [sp, #288]
  406410:	ldp	x29, x30, [sp, #272]
  406414:	add	sp, sp, #0x140
  406418:	ret
  40641c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  406420:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  406424:	add	x0, x0, #0xa28
  406428:	add	x2, x2, #0xa3f
  40642c:	mov	w1, #0x4dc                 	// #1244
  406430:	bl	404ac4 <feof@plt+0x20f4>
  406434:	sub	sp, sp, #0x1f0
  406438:	stp	x29, x30, [sp, #432]
  40643c:	stp	x28, x23, [sp, #448]
  406440:	stp	x22, x21, [sp, #464]
  406444:	stp	x20, x19, [sp, #480]
  406448:	add	x29, sp, #0x1b0
  40644c:	mov	x8, #0xffffffffffffffe0    	// #-32
  406450:	mov	x9, sp
  406454:	movk	x8, #0xff80, lsl #32
  406458:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  40645c:	add	x9, x9, #0x80
  406460:	stp	x9, x8, [x29, #-80]
  406464:	ldr	x8, [x22, #872]
  406468:	add	x10, sp, #0x88
  40646c:	add	x11, x29, #0x40
  406470:	add	x9, x10, #0x20
  406474:	stp	x4, x5, [sp, #136]
  406478:	stp	x6, x7, [sp, #152]
  40647c:	stp	q0, q1, [sp]
  406480:	stp	q2, q3, [sp, #32]
  406484:	stp	q4, q5, [sp, #64]
  406488:	stp	q6, q7, [sp, #96]
  40648c:	stp	x11, x9, [x29, #-96]
  406490:	ldr	w9, [x8, #240]
  406494:	mov	x21, x1
  406498:	mov	x19, x3
  40649c:	mov	x20, x2
  4064a0:	add	w9, w9, #0x1
  4064a4:	str	w9, [x8, #240]
  4064a8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4064ac:	ldr	x1, [x8, #1880]
  4064b0:	mov	w2, w0
  4064b4:	add	x0, sp, #0xa8
  4064b8:	mov	x3, xzr
  4064bc:	add	x23, sp, #0xa8
  4064c0:	bl	42bfb4 <feof@plt+0x295e4>
  4064c4:	mov	x0, x20
  4064c8:	mov	x1, x19
  4064cc:	mov	x2, x21
  4064d0:	bl	402460 <ngettext@plt>
  4064d4:	mov	x19, x0
  4064d8:	bl	4027c0 <__errno_location@plt>
  4064dc:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4064e0:	ldr	w8, [x0]
  4064e4:	ldr	x0, [x22, #872]
  4064e8:	ldr	d0, [x10, #1896]
  4064ec:	sub	x9, x29, #0x60
  4064f0:	sub	x1, x29, #0x40
  4064f4:	stp	x19, x9, [x29, #-64]
  4064f8:	stur	w8, [x29, #-48]
  4064fc:	stp	x23, x23, [x29, #-32]
  406500:	stur	d0, [x29, #-8]
  406504:	bl	405680 <feof@plt+0x2cb0>
  406508:	add	x0, sp, #0xa8
  40650c:	bl	42c094 <feof@plt+0x296c4>
  406510:	ldr	x0, [x22, #872]
  406514:	ldr	w8, [x0, #240]
  406518:	subs	w8, w8, #0x1
  40651c:	str	w8, [x0, #240]
  406520:	b.ne	406544 <feof@plt+0x3b74>  // b.any
  406524:	ldr	w8, [x0, #244]
  406528:	cmp	w8, #0x1
  40652c:	b.lt	406540 <feof@plt+0x3b70>  // b.tstop
  406530:	ldr	x8, [x0, #256]
  406534:	cbz	x8, 406540 <feof@plt+0x3b70>
  406538:	blr	x8
  40653c:	ldr	x0, [x22, #872]
  406540:	str	wzr, [x0, #244]
  406544:	ldp	x20, x19, [sp, #480]
  406548:	ldp	x22, x21, [sp, #464]
  40654c:	ldp	x28, x23, [sp, #448]
  406550:	ldp	x29, x30, [sp, #432]
  406554:	add	sp, sp, #0x1f0
  406558:	ret
  40655c:	stp	x29, x30, [sp, #-64]!
  406560:	str	x28, [sp, #16]
  406564:	stp	x22, x21, [sp, #32]
  406568:	stp	x20, x19, [sp, #48]
  40656c:	mov	x29, sp
  406570:	sub	sp, sp, #0x1c0
  406574:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  406578:	ldr	x8, [x21, #872]
  40657c:	stp	q4, q5, [sp, #64]
  406580:	stp	q2, q3, [sp, #32]
  406584:	stp	q0, q1, [sp]
  406588:	stp	x6, x7, [sp, #168]
  40658c:	stp	x4, x5, [sp, #152]
  406590:	stp	x2, x3, [sp, #136]
  406594:	stp	q6, q7, [sp, #96]
  406598:	ldr	w9, [x8, #240]
  40659c:	mov	x19, x1
  4065a0:	mov	x10, #0xffffffffffffffd0    	// #-48
  4065a4:	mov	x11, sp
  4065a8:	add	w9, w9, #0x1
  4065ac:	str	w9, [x8, #240]
  4065b0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4065b4:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4065b8:	ldr	x1, [x8, #1880]
  4065bc:	ldr	w2, [x9, #1872]
  4065c0:	add	x12, sp, #0x88
  4065c4:	mov	w20, w0
  4065c8:	movk	x10, #0xff80, lsl #32
  4065cc:	add	x11, x11, #0x80
  4065d0:	add	x12, x12, #0x30
  4065d4:	add	x8, x29, #0x40
  4065d8:	add	x0, sp, #0xb8
  4065dc:	mov	x3, xzr
  4065e0:	stp	x11, x10, [x29, #-80]
  4065e4:	stp	x8, x12, [x29, #-96]
  4065e8:	add	x22, sp, #0xb8
  4065ec:	bl	42bfb4 <feof@plt+0x295e4>
  4065f0:	mov	x0, x19
  4065f4:	bl	402640 <gettext@plt>
  4065f8:	mov	x19, x0
  4065fc:	bl	4027c0 <__errno_location@plt>
  406600:	ldr	w8, [x0]
  406604:	ldr	x0, [x21, #872]
  406608:	sub	x9, x29, #0x60
  40660c:	mov	w10, #0x6                   	// #6
  406610:	sub	x1, x29, #0x40
  406614:	stp	x22, x22, [x29, #-32]
  406618:	stp	x19, x9, [x29, #-64]
  40661c:	stur	w8, [x29, #-48]
  406620:	stp	w10, w20, [x29, #-8]
  406624:	bl	405680 <feof@plt+0x2cb0>
  406628:	mov	w19, w0
  40662c:	add	x0, sp, #0xb8
  406630:	bl	42c094 <feof@plt+0x296c4>
  406634:	ldr	x0, [x21, #872]
  406638:	ldr	w8, [x0, #240]
  40663c:	subs	w8, w8, #0x1
  406640:	str	w8, [x0, #240]
  406644:	b.ne	406668 <feof@plt+0x3c98>  // b.any
  406648:	ldr	w8, [x0, #244]
  40664c:	cmp	w8, #0x1
  406650:	b.lt	406664 <feof@plt+0x3c94>  // b.tstop
  406654:	ldr	x8, [x0, #256]
  406658:	cbz	x8, 406664 <feof@plt+0x3c94>
  40665c:	blr	x8
  406660:	ldr	x0, [x21, #872]
  406664:	str	wzr, [x0, #244]
  406668:	and	w0, w19, #0x1
  40666c:	add	sp, sp, #0x1c0
  406670:	ldp	x20, x19, [sp, #48]
  406674:	ldp	x22, x21, [sp, #32]
  406678:	ldr	x28, [sp, #16]
  40667c:	ldp	x29, x30, [sp], #64
  406680:	ret
  406684:	sub	sp, sp, #0x1f0
  406688:	stp	x29, x30, [sp, #432]
  40668c:	str	x28, [sp, #448]
  406690:	stp	x22, x21, [sp, #464]
  406694:	stp	x20, x19, [sp, #480]
  406698:	add	x29, sp, #0x1b0
  40669c:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  4066a0:	ldr	x8, [x21, #872]
  4066a4:	stp	q4, q5, [sp, #64]
  4066a8:	stp	q2, q3, [sp, #32]
  4066ac:	stp	q0, q1, [sp]
  4066b0:	stp	x6, x7, [sp, #152]
  4066b4:	stp	x4, x5, [sp, #136]
  4066b8:	str	x3, [sp, #128]
  4066bc:	stp	q6, q7, [sp, #96]
  4066c0:	ldr	w9, [x8, #240]
  4066c4:	mov	x10, #0xffffffffffffffd8    	// #-40
  4066c8:	mov	x11, sp
  4066cc:	movk	x10, #0xff80, lsl #32
  4066d0:	add	w9, w9, #0x1
  4066d4:	str	w9, [x8, #240]
  4066d8:	add	x9, x11, #0x80
  4066dc:	stp	x9, x10, [x29, #-80]
  4066e0:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4066e4:	mov	w20, w1
  4066e8:	ldr	x1, [x9, #1880]
  4066ec:	add	x8, sp, #0x80
  4066f0:	mov	x19, x2
  4066f4:	mov	w2, w0
  4066f8:	add	x8, x8, #0x28
  4066fc:	add	x9, x29, #0x40
  406700:	add	x0, sp, #0xa8
  406704:	mov	x3, xzr
  406708:	stp	x9, x8, [x29, #-96]
  40670c:	add	x22, sp, #0xa8
  406710:	bl	42bfb4 <feof@plt+0x295e4>
  406714:	mov	x0, x19
  406718:	bl	402640 <gettext@plt>
  40671c:	mov	x19, x0
  406720:	bl	4027c0 <__errno_location@plt>
  406724:	ldr	w8, [x0]
  406728:	ldr	x0, [x21, #872]
  40672c:	sub	x9, x29, #0x60
  406730:	mov	w10, #0x6                   	// #6
  406734:	sub	x1, x29, #0x40
  406738:	stp	x22, x22, [x29, #-32]
  40673c:	stp	x19, x9, [x29, #-64]
  406740:	stur	w8, [x29, #-48]
  406744:	stp	w10, w20, [x29, #-8]
  406748:	bl	405680 <feof@plt+0x2cb0>
  40674c:	mov	w19, w0
  406750:	add	x0, sp, #0xa8
  406754:	bl	42c094 <feof@plt+0x296c4>
  406758:	ldr	x0, [x21, #872]
  40675c:	ldr	w8, [x0, #240]
  406760:	subs	w8, w8, #0x1
  406764:	str	w8, [x0, #240]
  406768:	b.ne	40678c <feof@plt+0x3dbc>  // b.any
  40676c:	ldr	w8, [x0, #244]
  406770:	cmp	w8, #0x1
  406774:	b.lt	406788 <feof@plt+0x3db8>  // b.tstop
  406778:	ldr	x8, [x0, #256]
  40677c:	cbz	x8, 406788 <feof@plt+0x3db8>
  406780:	blr	x8
  406784:	ldr	x0, [x21, #872]
  406788:	str	wzr, [x0, #244]
  40678c:	and	w0, w19, #0x1
  406790:	ldp	x20, x19, [sp, #480]
  406794:	ldp	x22, x21, [sp, #464]
  406798:	ldr	x28, [sp, #448]
  40679c:	ldp	x29, x30, [sp, #432]
  4067a0:	add	sp, sp, #0x1f0
  4067a4:	ret
  4067a8:	sub	sp, sp, #0x150
  4067ac:	stp	x29, x30, [sp, #272]
  4067b0:	str	x28, [sp, #288]
  4067b4:	stp	x22, x21, [sp, #304]
  4067b8:	stp	x20, x19, [sp, #320]
  4067bc:	add	x29, sp, #0x110
  4067c0:	stp	x3, x4, [sp, #136]
  4067c4:	stp	x5, x6, [sp, #152]
  4067c8:	str	x7, [sp, #168]
  4067cc:	stp	q1, q2, [sp, #16]
  4067d0:	stp	q3, q4, [sp, #48]
  4067d4:	str	q0, [sp]
  4067d8:	stp	q5, q6, [sp, #80]
  4067dc:	str	q7, [sp, #112]
  4067e0:	cbz	x0, 4068b0 <feof@plt+0x3ee0>
  4067e4:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  4067e8:	ldr	x8, [x22, #872]
  4067ec:	mov	x9, #0xffffffffffffffd8    	// #-40
  4067f0:	mov	x10, sp
  4067f4:	add	x11, sp, #0x88
  4067f8:	ldr	w12, [x8, #240]
  4067fc:	mov	x20, x0
  406800:	movk	x9, #0xff80, lsl #32
  406804:	add	x13, x29, #0x40
  406808:	add	x10, x10, #0x80
  40680c:	add	x11, x11, #0x28
  406810:	add	w12, w12, #0x1
  406814:	mov	x0, x2
  406818:	mov	w19, w1
  40681c:	str	w12, [x8, #240]
  406820:	stp	x10, x9, [x29, #-80]
  406824:	stp	x13, x11, [x29, #-96]
  406828:	bl	402640 <gettext@plt>
  40682c:	mov	x21, x0
  406830:	bl	4027c0 <__errno_location@plt>
  406834:	ldr	w8, [x0]
  406838:	ldr	x0, [x22, #872]
  40683c:	sub	x9, x29, #0x60
  406840:	mov	w10, #0x6                   	// #6
  406844:	sub	x1, x29, #0x40
  406848:	stp	x20, x20, [x29, #-32]
  40684c:	stp	x21, x9, [x29, #-64]
  406850:	stur	w8, [x29, #-48]
  406854:	stp	w10, w19, [x29, #-8]
  406858:	bl	405680 <feof@plt+0x2cb0>
  40685c:	mov	w19, w0
  406860:	ldr	x0, [x22, #872]
  406864:	ldr	w8, [x0, #240]
  406868:	subs	w8, w8, #0x1
  40686c:	str	w8, [x0, #240]
  406870:	b.ne	406894 <feof@plt+0x3ec4>  // b.any
  406874:	ldr	w8, [x0, #244]
  406878:	cmp	w8, #0x1
  40687c:	b.lt	406890 <feof@plt+0x3ec0>  // b.tstop
  406880:	ldr	x8, [x0, #256]
  406884:	cbz	x8, 406890 <feof@plt+0x3ec0>
  406888:	blr	x8
  40688c:	ldr	x0, [x22, #872]
  406890:	str	wzr, [x0, #244]
  406894:	and	w0, w19, #0x1
  406898:	ldp	x20, x19, [sp, #320]
  40689c:	ldp	x22, x21, [sp, #304]
  4068a0:	ldr	x28, [sp, #288]
  4068a4:	ldp	x29, x30, [sp, #272]
  4068a8:	add	sp, sp, #0x150
  4068ac:	ret
  4068b0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4068b4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4068b8:	add	x0, x0, #0xa28
  4068bc:	add	x2, x2, #0xa46
  4068c0:	mov	w1, #0x518                 	// #1304
  4068c4:	bl	404ac4 <feof@plt+0x20f4>
  4068c8:	sub	sp, sp, #0x140
  4068cc:	stp	x29, x30, [sp, #256]
  4068d0:	str	x28, [sp, #272]
  4068d4:	stp	x22, x21, [sp, #288]
  4068d8:	stp	x20, x19, [sp, #304]
  4068dc:	add	x29, sp, #0x100
  4068e0:	stp	x5, x6, [x29, #-120]
  4068e4:	stur	x7, [x29, #-104]
  4068e8:	stp	q0, q1, [sp]
  4068ec:	stp	q2, q3, [sp, #32]
  4068f0:	stp	q4, q5, [sp, #64]
  4068f4:	stp	q6, q7, [sp, #96]
  4068f8:	cbz	x0, 4069cc <feof@plt+0x3ffc>
  4068fc:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  406900:	ldr	x8, [x22, #872]
  406904:	mov	x9, #0xffffffffffffffe8    	// #-24
  406908:	mov	x10, sp
  40690c:	sub	x11, x29, #0x78
  406910:	ldr	w12, [x8, #240]
  406914:	mov	w19, w1
  406918:	mov	x20, x0
  40691c:	movk	x9, #0xff80, lsl #32
  406920:	add	x13, x29, #0x40
  406924:	add	x10, x10, #0x80
  406928:	add	x11, x11, #0x18
  40692c:	add	w12, w12, #0x1
  406930:	mov	x0, x3
  406934:	mov	x1, x4
  406938:	str	w12, [x8, #240]
  40693c:	stp	x10, x9, [x29, #-80]
  406940:	stp	x13, x11, [x29, #-96]
  406944:	bl	402460 <ngettext@plt>
  406948:	mov	x21, x0
  40694c:	bl	4027c0 <__errno_location@plt>
  406950:	ldr	w8, [x0]
  406954:	ldr	x0, [x22, #872]
  406958:	sub	x9, x29, #0x60
  40695c:	mov	w10, #0x6                   	// #6
  406960:	sub	x1, x29, #0x40
  406964:	stp	x20, x20, [x29, #-32]
  406968:	stp	x21, x9, [x29, #-64]
  40696c:	stur	w8, [x29, #-48]
  406970:	stp	w10, w19, [x29, #-8]
  406974:	bl	405680 <feof@plt+0x2cb0>
  406978:	mov	w19, w0
  40697c:	ldr	x0, [x22, #872]
  406980:	ldr	w8, [x0, #240]
  406984:	subs	w8, w8, #0x1
  406988:	str	w8, [x0, #240]
  40698c:	b.ne	4069b0 <feof@plt+0x3fe0>  // b.any
  406990:	ldr	w8, [x0, #244]
  406994:	cmp	w8, #0x1
  406998:	b.lt	4069ac <feof@plt+0x3fdc>  // b.tstop
  40699c:	ldr	x8, [x0, #256]
  4069a0:	cbz	x8, 4069ac <feof@plt+0x3fdc>
  4069a4:	blr	x8
  4069a8:	ldr	x0, [x22, #872]
  4069ac:	str	wzr, [x0, #244]
  4069b0:	and	w0, w19, #0x1
  4069b4:	ldp	x20, x19, [sp, #304]
  4069b8:	ldp	x22, x21, [sp, #288]
  4069bc:	ldr	x28, [sp, #272]
  4069c0:	ldp	x29, x30, [sp, #256]
  4069c4:	add	sp, sp, #0x140
  4069c8:	ret
  4069cc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4069d0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4069d4:	add	x0, x0, #0xa28
  4069d8:	add	x2, x2, #0xa51
  4069dc:	mov	w1, #0x528                 	// #1320
  4069e0:	bl	404ac4 <feof@plt+0x20f4>
  4069e4:	sub	sp, sp, #0x1f0
  4069e8:	stp	x29, x30, [sp, #416]
  4069ec:	str	x28, [sp, #432]
  4069f0:	stp	x24, x23, [sp, #448]
  4069f4:	stp	x22, x21, [sp, #464]
  4069f8:	stp	x20, x19, [sp, #480]
  4069fc:	add	x29, sp, #0x1a0
  406a00:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x25a68>
  406a04:	ldr	x8, [x23, #872]
  406a08:	stp	q4, q5, [sp, #64]
  406a0c:	stp	q2, q3, [sp, #32]
  406a10:	stp	q0, q1, [sp]
  406a14:	stp	x6, x7, [sp, #136]
  406a18:	str	x5, [sp, #128]
  406a1c:	stp	q6, q7, [sp, #96]
  406a20:	ldr	w9, [x8, #240]
  406a24:	mov	x10, #0xffffffffffffffe8    	// #-24
  406a28:	movk	x10, #0xff80, lsl #32
  406a2c:	mov	w22, w1
  406a30:	add	w9, w9, #0x1
  406a34:	str	w9, [x8, #240]
  406a38:	mov	x8, sp
  406a3c:	add	x8, x8, #0x80
  406a40:	stp	x8, x10, [x29, #-80]
  406a44:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  406a48:	ldr	x1, [x8, #1880]
  406a4c:	add	x9, sp, #0x80
  406a50:	mov	x20, x3
  406a54:	mov	x21, x2
  406a58:	mov	w2, w0
  406a5c:	add	x9, x9, #0x18
  406a60:	add	x8, x29, #0x50
  406a64:	add	x0, sp, #0x98
  406a68:	mov	x3, xzr
  406a6c:	mov	x19, x4
  406a70:	stp	x8, x9, [x29, #-96]
  406a74:	add	x24, sp, #0x98
  406a78:	bl	42bfb4 <feof@plt+0x295e4>
  406a7c:	mov	x0, x20
  406a80:	mov	x1, x19
  406a84:	mov	x2, x21
  406a88:	bl	402460 <ngettext@plt>
  406a8c:	mov	x19, x0
  406a90:	bl	4027c0 <__errno_location@plt>
  406a94:	ldr	w8, [x0]
  406a98:	ldr	x0, [x23, #872]
  406a9c:	sub	x9, x29, #0x60
  406aa0:	mov	w10, #0x6                   	// #6
  406aa4:	sub	x1, x29, #0x40
  406aa8:	stp	x24, x24, [x29, #-32]
  406aac:	stp	x19, x9, [x29, #-64]
  406ab0:	stur	w8, [x29, #-48]
  406ab4:	stp	w10, w22, [x29, #-8]
  406ab8:	bl	405680 <feof@plt+0x2cb0>
  406abc:	mov	w19, w0
  406ac0:	add	x0, sp, #0x98
  406ac4:	bl	42c094 <feof@plt+0x296c4>
  406ac8:	ldr	x0, [x23, #872]
  406acc:	ldr	w8, [x0, #240]
  406ad0:	subs	w8, w8, #0x1
  406ad4:	str	w8, [x0, #240]
  406ad8:	b.ne	406afc <feof@plt+0x412c>  // b.any
  406adc:	ldr	w8, [x0, #244]
  406ae0:	cmp	w8, #0x1
  406ae4:	b.lt	406af8 <feof@plt+0x4128>  // b.tstop
  406ae8:	ldr	x8, [x0, #256]
  406aec:	cbz	x8, 406af8 <feof@plt+0x4128>
  406af0:	blr	x8
  406af4:	ldr	x0, [x23, #872]
  406af8:	str	wzr, [x0, #244]
  406afc:	and	w0, w19, #0x1
  406b00:	ldp	x20, x19, [sp, #480]
  406b04:	ldp	x22, x21, [sp, #464]
  406b08:	ldp	x24, x23, [sp, #448]
  406b0c:	ldr	x28, [sp, #432]
  406b10:	ldp	x29, x30, [sp, #416]
  406b14:	add	sp, sp, #0x1f0
  406b18:	ret
  406b1c:	sub	sp, sp, #0x1f0
  406b20:	stp	x29, x30, [sp, #432]
  406b24:	str	x28, [sp, #448]
  406b28:	stp	x22, x21, [sp, #464]
  406b2c:	stp	x20, x19, [sp, #480]
  406b30:	add	x29, sp, #0x1b0
  406b34:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  406b38:	ldr	x8, [x21, #872]
  406b3c:	stp	q4, q5, [sp, #64]
  406b40:	stp	q2, q3, [sp, #32]
  406b44:	stp	q0, q1, [sp]
  406b48:	stp	x6, x7, [sp, #152]
  406b4c:	stp	x4, x5, [sp, #136]
  406b50:	str	x3, [sp, #128]
  406b54:	stp	q6, q7, [sp, #96]
  406b58:	ldr	w9, [x8, #240]
  406b5c:	mov	x10, #0xffffffffffffffd8    	// #-40
  406b60:	mov	x11, sp
  406b64:	movk	x10, #0xff80, lsl #32
  406b68:	add	w9, w9, #0x1
  406b6c:	str	w9, [x8, #240]
  406b70:	add	x9, x11, #0x80
  406b74:	stp	x9, x10, [x29, #-80]
  406b78:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  406b7c:	mov	w20, w1
  406b80:	ldr	x1, [x9, #1880]
  406b84:	add	x8, sp, #0x80
  406b88:	mov	x19, x2
  406b8c:	mov	w2, w0
  406b90:	add	x8, x8, #0x28
  406b94:	add	x9, x29, #0x40
  406b98:	add	x0, sp, #0xa8
  406b9c:	mov	x3, xzr
  406ba0:	stp	x9, x8, [x29, #-96]
  406ba4:	add	x22, sp, #0xa8
  406ba8:	bl	42bfb4 <feof@plt+0x295e4>
  406bac:	mov	x0, x19
  406bb0:	bl	402640 <gettext@plt>
  406bb4:	mov	x19, x0
  406bb8:	bl	4027c0 <__errno_location@plt>
  406bbc:	ldr	w8, [x0]
  406bc0:	ldr	x0, [x21, #872]
  406bc4:	sub	x9, x29, #0x60
  406bc8:	mov	w10, #0xa                   	// #10
  406bcc:	sub	x1, x29, #0x40
  406bd0:	stp	x22, x22, [x29, #-32]
  406bd4:	stp	x19, x9, [x29, #-64]
  406bd8:	stur	w8, [x29, #-48]
  406bdc:	stp	w10, w20, [x29, #-8]
  406be0:	bl	405680 <feof@plt+0x2cb0>
  406be4:	mov	w19, w0
  406be8:	add	x0, sp, #0xa8
  406bec:	bl	42c094 <feof@plt+0x296c4>
  406bf0:	ldr	x0, [x21, #872]
  406bf4:	ldr	w8, [x0, #240]
  406bf8:	subs	w8, w8, #0x1
  406bfc:	str	w8, [x0, #240]
  406c00:	b.ne	406c24 <feof@plt+0x4254>  // b.any
  406c04:	ldr	w8, [x0, #244]
  406c08:	cmp	w8, #0x1
  406c0c:	b.lt	406c20 <feof@plt+0x4250>  // b.tstop
  406c10:	ldr	x8, [x0, #256]
  406c14:	cbz	x8, 406c20 <feof@plt+0x4250>
  406c18:	blr	x8
  406c1c:	ldr	x0, [x21, #872]
  406c20:	str	wzr, [x0, #244]
  406c24:	and	w0, w19, #0x1
  406c28:	ldp	x20, x19, [sp, #480]
  406c2c:	ldp	x22, x21, [sp, #464]
  406c30:	ldr	x28, [sp, #448]
  406c34:	ldp	x29, x30, [sp, #432]
  406c38:	add	sp, sp, #0x1f0
  406c3c:	ret
  406c40:	sub	sp, sp, #0x150
  406c44:	stp	x29, x30, [sp, #272]
  406c48:	str	x28, [sp, #288]
  406c4c:	stp	x22, x21, [sp, #304]
  406c50:	stp	x20, x19, [sp, #320]
  406c54:	add	x29, sp, #0x110
  406c58:	stp	x3, x4, [sp, #136]
  406c5c:	stp	x5, x6, [sp, #152]
  406c60:	str	x7, [sp, #168]
  406c64:	stp	q1, q2, [sp, #16]
  406c68:	stp	q3, q4, [sp, #48]
  406c6c:	str	q0, [sp]
  406c70:	stp	q5, q6, [sp, #80]
  406c74:	str	q7, [sp, #112]
  406c78:	cbz	x0, 406d48 <feof@plt+0x4378>
  406c7c:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  406c80:	ldr	x8, [x22, #872]
  406c84:	mov	x9, #0xffffffffffffffd8    	// #-40
  406c88:	mov	x10, sp
  406c8c:	add	x11, sp, #0x88
  406c90:	ldr	w12, [x8, #240]
  406c94:	mov	x20, x0
  406c98:	movk	x9, #0xff80, lsl #32
  406c9c:	add	x13, x29, #0x40
  406ca0:	add	x10, x10, #0x80
  406ca4:	add	x11, x11, #0x28
  406ca8:	add	w12, w12, #0x1
  406cac:	mov	x0, x2
  406cb0:	mov	w19, w1
  406cb4:	str	w12, [x8, #240]
  406cb8:	stp	x10, x9, [x29, #-80]
  406cbc:	stp	x13, x11, [x29, #-96]
  406cc0:	bl	402640 <gettext@plt>
  406cc4:	mov	x21, x0
  406cc8:	bl	4027c0 <__errno_location@plt>
  406ccc:	ldr	w8, [x0]
  406cd0:	ldr	x0, [x22, #872]
  406cd4:	sub	x9, x29, #0x60
  406cd8:	mov	w10, #0xa                   	// #10
  406cdc:	sub	x1, x29, #0x40
  406ce0:	stp	x20, x20, [x29, #-32]
  406ce4:	stp	x21, x9, [x29, #-64]
  406ce8:	stur	w8, [x29, #-48]
  406cec:	stp	w10, w19, [x29, #-8]
  406cf0:	bl	405680 <feof@plt+0x2cb0>
  406cf4:	mov	w19, w0
  406cf8:	ldr	x0, [x22, #872]
  406cfc:	ldr	w8, [x0, #240]
  406d00:	subs	w8, w8, #0x1
  406d04:	str	w8, [x0, #240]
  406d08:	b.ne	406d2c <feof@plt+0x435c>  // b.any
  406d0c:	ldr	w8, [x0, #244]
  406d10:	cmp	w8, #0x1
  406d14:	b.lt	406d28 <feof@plt+0x4358>  // b.tstop
  406d18:	ldr	x8, [x0, #256]
  406d1c:	cbz	x8, 406d28 <feof@plt+0x4358>
  406d20:	blr	x8
  406d24:	ldr	x0, [x22, #872]
  406d28:	str	wzr, [x0, #244]
  406d2c:	and	w0, w19, #0x1
  406d30:	ldp	x20, x19, [sp, #320]
  406d34:	ldp	x22, x21, [sp, #304]
  406d38:	ldr	x28, [sp, #288]
  406d3c:	ldp	x29, x30, [sp, #272]
  406d40:	add	sp, sp, #0x150
  406d44:	ret
  406d48:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  406d4c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  406d50:	add	x0, x0, #0xa28
  406d54:	add	x2, x2, #0xa5b
  406d58:	mov	w1, #0x565                 	// #1381
  406d5c:	bl	404ac4 <feof@plt+0x20f4>
  406d60:	stp	x29, x30, [sp, #-64]!
  406d64:	str	x28, [sp, #16]
  406d68:	stp	x22, x21, [sp, #32]
  406d6c:	stp	x20, x19, [sp, #48]
  406d70:	mov	x29, sp
  406d74:	sub	sp, sp, #0x1c0
  406d78:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  406d7c:	ldr	x9, [x20, #872]
  406d80:	stp	q4, q5, [sp, #64]
  406d84:	stp	q2, q3, [sp, #32]
  406d88:	stp	q0, q1, [sp]
  406d8c:	stp	x6, x7, [sp, #168]
  406d90:	stp	x4, x5, [sp, #152]
  406d94:	stp	x2, x3, [sp, #136]
  406d98:	stp	q6, q7, [sp, #96]
  406d9c:	ldr	w12, [x9, #240]
  406da0:	mov	x19, x1
  406da4:	mov	w8, w0
  406da8:	mov	x10, #0xffffffffffffffd0    	// #-48
  406dac:	add	w12, w12, #0x1
  406db0:	str	w12, [x9, #240]
  406db4:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  406db8:	ldr	x1, [x9, #1880]
  406dbc:	mov	x11, sp
  406dc0:	add	x13, sp, #0x88
  406dc4:	movk	x10, #0xff80, lsl #32
  406dc8:	add	x11, x11, #0x80
  406dcc:	add	x13, x13, #0x30
  406dd0:	add	x9, x29, #0x40
  406dd4:	add	x0, sp, #0xb8
  406dd8:	mov	w2, w8
  406ddc:	mov	x3, xzr
  406de0:	stp	x11, x10, [x29, #-80]
  406de4:	stp	x9, x13, [x29, #-96]
  406de8:	add	x21, sp, #0xb8
  406dec:	bl	42bfb4 <feof@plt+0x295e4>
  406df0:	ldr	x8, [x20, #872]
  406df4:	mov	w9, #0x6                   	// #6
  406df8:	mov	x0, x19
  406dfc:	ldrb	w8, [x8, #123]
  406e00:	cmp	w8, #0x0
  406e04:	mov	w8, #0x4                   	// #4
  406e08:	csel	w22, w8, w9, eq  // eq = none
  406e0c:	bl	402640 <gettext@plt>
  406e10:	mov	x19, x0
  406e14:	bl	4027c0 <__errno_location@plt>
  406e18:	ldr	w8, [x0]
  406e1c:	ldr	x0, [x20, #872]
  406e20:	sub	x9, x29, #0x60
  406e24:	stp	x21, x21, [x29, #-32]
  406e28:	stp	x19, x9, [x29, #-64]
  406e2c:	stur	w8, [x29, #-48]
  406e30:	ldr	w8, [x0, #124]
  406e34:	sub	x1, x29, #0x40
  406e38:	stp	w22, w8, [x29, #-8]
  406e3c:	bl	405680 <feof@plt+0x2cb0>
  406e40:	mov	w19, w0
  406e44:	add	x0, sp, #0xb8
  406e48:	bl	42c094 <feof@plt+0x296c4>
  406e4c:	ldr	x0, [x20, #872]
  406e50:	ldr	w8, [x0, #240]
  406e54:	subs	w8, w8, #0x1
  406e58:	str	w8, [x0, #240]
  406e5c:	b.ne	406e80 <feof@plt+0x44b0>  // b.any
  406e60:	ldr	w8, [x0, #244]
  406e64:	cmp	w8, #0x1
  406e68:	b.lt	406e7c <feof@plt+0x44ac>  // b.tstop
  406e6c:	ldr	x8, [x0, #256]
  406e70:	cbz	x8, 406e7c <feof@plt+0x44ac>
  406e74:	blr	x8
  406e78:	ldr	x0, [x20, #872]
  406e7c:	str	wzr, [x0, #244]
  406e80:	and	w0, w19, #0x1
  406e84:	add	sp, sp, #0x1c0
  406e88:	ldp	x20, x19, [sp, #48]
  406e8c:	ldp	x22, x21, [sp, #32]
  406e90:	ldr	x28, [sp, #16]
  406e94:	ldp	x29, x30, [sp], #64
  406e98:	ret
  406e9c:	sub	sp, sp, #0x150
  406ea0:	stp	x29, x30, [sp, #272]
  406ea4:	str	x28, [sp, #288]
  406ea8:	stp	x22, x21, [sp, #304]
  406eac:	stp	x20, x19, [sp, #320]
  406eb0:	add	x29, sp, #0x110
  406eb4:	stp	x2, x3, [sp, #128]
  406eb8:	stp	x4, x5, [sp, #144]
  406ebc:	stp	x6, x7, [sp, #160]
  406ec0:	stp	q1, q2, [sp, #16]
  406ec4:	stp	q3, q4, [sp, #48]
  406ec8:	str	q0, [sp]
  406ecc:	stp	q5, q6, [sp, #80]
  406ed0:	str	q7, [sp, #112]
  406ed4:	cbz	x0, 406fb8 <feof@plt+0x45e8>
  406ed8:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  406edc:	ldr	x8, [x21, #872]
  406ee0:	mov	x10, #0xffffffffffffffd0    	// #-48
  406ee4:	mov	x11, sp
  406ee8:	movk	x10, #0xff80, lsl #32
  406eec:	ldr	w9, [x8, #240]
  406ef0:	add	x11, x11, #0x80
  406ef4:	mov	x19, x0
  406ef8:	mov	x0, x1
  406efc:	add	w9, w9, #0x1
  406f00:	str	w9, [x8, #240]
  406f04:	stp	x11, x10, [x29, #-80]
  406f08:	ldr	x10, [x21, #872]
  406f0c:	add	x8, sp, #0x80
  406f10:	add	x9, x29, #0x40
  406f14:	add	x8, x8, #0x30
  406f18:	stp	x9, x8, [x29, #-96]
  406f1c:	ldrb	w8, [x10, #123]
  406f20:	mov	w9, #0x6                   	// #6
  406f24:	cmp	w8, #0x0
  406f28:	mov	w8, #0x4                   	// #4
  406f2c:	csel	w22, w8, w9, eq  // eq = none
  406f30:	bl	402640 <gettext@plt>
  406f34:	mov	x20, x0
  406f38:	bl	4027c0 <__errno_location@plt>
  406f3c:	ldr	w8, [x0]
  406f40:	ldr	x0, [x21, #872]
  406f44:	sub	x9, x29, #0x60
  406f48:	stp	x19, x19, [x29, #-32]
  406f4c:	stp	x20, x9, [x29, #-64]
  406f50:	stur	w8, [x29, #-48]
  406f54:	ldr	w8, [x0, #124]
  406f58:	sub	x1, x29, #0x40
  406f5c:	stp	w22, w8, [x29, #-8]
  406f60:	bl	405680 <feof@plt+0x2cb0>
  406f64:	mov	w19, w0
  406f68:	ldr	x0, [x21, #872]
  406f6c:	ldr	w8, [x0, #240]
  406f70:	subs	w8, w8, #0x1
  406f74:	str	w8, [x0, #240]
  406f78:	b.ne	406f9c <feof@plt+0x45cc>  // b.any
  406f7c:	ldr	w8, [x0, #244]
  406f80:	cmp	w8, #0x1
  406f84:	b.lt	406f98 <feof@plt+0x45c8>  // b.tstop
  406f88:	ldr	x8, [x0, #256]
  406f8c:	cbz	x8, 406f98 <feof@plt+0x45c8>
  406f90:	blr	x8
  406f94:	ldr	x0, [x21, #872]
  406f98:	str	wzr, [x0, #244]
  406f9c:	and	w0, w19, #0x1
  406fa0:	ldp	x20, x19, [sp, #320]
  406fa4:	ldp	x22, x21, [sp, #304]
  406fa8:	ldr	x28, [sp, #288]
  406fac:	ldp	x29, x30, [sp, #272]
  406fb0:	add	sp, sp, #0x150
  406fb4:	ret
  406fb8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  406fbc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  406fc0:	add	x0, x0, #0xa28
  406fc4:	add	x2, x2, #0xa63
  406fc8:	mov	w1, #0x587                 	// #1415
  406fcc:	bl	404ac4 <feof@plt+0x20f4>
  406fd0:	sub	sp, sp, #0x1f0
  406fd4:	stp	x29, x30, [sp, #448]
  406fd8:	stp	x28, x21, [sp, #464]
  406fdc:	stp	x20, x19, [sp, #480]
  406fe0:	add	x29, sp, #0x1c0
  406fe4:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  406fe8:	ldr	x8, [x20, #872]
  406fec:	stp	q4, q5, [sp, #64]
  406ff0:	stp	q2, q3, [sp, #32]
  406ff4:	stp	q0, q1, [sp]
  406ff8:	stp	x6, x7, [sp, #168]
  406ffc:	stp	x4, x5, [sp, #152]
  407000:	stp	x2, x3, [sp, #136]
  407004:	str	x1, [sp, #128]
  407008:	stp	q6, q7, [sp, #96]
  40700c:	ldr	w10, [x8, #240]
  407010:	adrp	x13, 476000 <_obstack_memory_used@@Base+0x25a68>
  407014:	mov	x9, #0xffffffffffffffc8    	// #-56
  407018:	mov	x11, sp
  40701c:	add	w10, w10, #0x1
  407020:	str	w10, [x8, #240]
  407024:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407028:	ldr	x1, [x13, #1880]
  40702c:	ldr	w2, [x8, #1872]
  407030:	add	x12, sp, #0x80
  407034:	mov	x19, x0
  407038:	movk	x9, #0xff80, lsl #32
  40703c:	add	x10, x11, #0x80
  407040:	add	x11, x12, #0x38
  407044:	add	x8, x29, #0x30
  407048:	add	x0, sp, #0xb8
  40704c:	mov	x3, xzr
  407050:	stp	x10, x9, [x29, #-80]
  407054:	stp	x8, x11, [x29, #-96]
  407058:	add	x21, sp, #0xb8
  40705c:	bl	42bfb4 <feof@plt+0x295e4>
  407060:	mov	x0, x19
  407064:	bl	402640 <gettext@plt>
  407068:	mov	x19, x0
  40706c:	bl	4027c0 <__errno_location@plt>
  407070:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  407074:	ldr	w8, [x0]
  407078:	ldr	x0, [x20, #872]
  40707c:	ldr	d0, [x10, #1904]
  407080:	sub	x9, x29, #0x60
  407084:	sub	x1, x29, #0x40
  407088:	stp	x19, x9, [x29, #-64]
  40708c:	stur	w8, [x29, #-48]
  407090:	stp	x21, x21, [x29, #-32]
  407094:	stur	d0, [x29, #-8]
  407098:	bl	405680 <feof@plt+0x2cb0>
  40709c:	add	x0, sp, #0xb8
  4070a0:	bl	42c094 <feof@plt+0x296c4>
  4070a4:	ldr	x0, [x20, #872]
  4070a8:	ldr	w8, [x0, #240]
  4070ac:	subs	w8, w8, #0x1
  4070b0:	str	w8, [x0, #240]
  4070b4:	b.ne	4070d8 <feof@plt+0x4708>  // b.any
  4070b8:	ldr	w8, [x0, #244]
  4070bc:	cmp	w8, #0x1
  4070c0:	b.lt	4070d4 <feof@plt+0x4704>  // b.tstop
  4070c4:	ldr	x8, [x0, #256]
  4070c8:	cbz	x8, 4070d4 <feof@plt+0x4704>
  4070cc:	blr	x8
  4070d0:	ldr	x0, [x20, #872]
  4070d4:	str	wzr, [x0, #244]
  4070d8:	ldp	x20, x19, [sp, #480]
  4070dc:	ldp	x28, x21, [sp, #464]
  4070e0:	ldp	x29, x30, [sp, #448]
  4070e4:	add	sp, sp, #0x1f0
  4070e8:	ret
  4070ec:	sub	sp, sp, #0x1f0
  4070f0:	stp	x29, x30, [sp, #432]
  4070f4:	stp	x28, x23, [sp, #448]
  4070f8:	stp	x22, x21, [sp, #464]
  4070fc:	stp	x20, x19, [sp, #480]
  407100:	add	x29, sp, #0x1b0
  407104:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  407108:	ldr	x8, [x22, #872]
  40710c:	stp	q4, q5, [sp, #64]
  407110:	stp	q2, q3, [sp, #32]
  407114:	stp	q0, q1, [sp]
  407118:	stp	x6, x7, [sp, #152]
  40711c:	stp	x4, x5, [sp, #136]
  407120:	stp	q6, q7, [sp, #96]
  407124:	ldr	w9, [x8, #240]
  407128:	mov	x10, #0xffffffffffffffe0    	// #-32
  40712c:	movk	x10, #0xff80, lsl #32
  407130:	mov	x21, x1
  407134:	add	w9, w9, #0x1
  407138:	str	w9, [x8, #240]
  40713c:	mov	x8, sp
  407140:	add	x8, x8, #0x80
  407144:	stp	x8, x10, [x29, #-80]
  407148:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40714c:	ldr	x1, [x8, #1880]
  407150:	add	x9, sp, #0x88
  407154:	mov	x19, x3
  407158:	mov	x20, x2
  40715c:	mov	w2, w0
  407160:	add	x9, x9, #0x20
  407164:	add	x8, x29, #0x40
  407168:	add	x0, sp, #0xa8
  40716c:	mov	x3, xzr
  407170:	stp	x8, x9, [x29, #-96]
  407174:	add	x23, sp, #0xa8
  407178:	bl	42bfb4 <feof@plt+0x295e4>
  40717c:	mov	x0, x20
  407180:	mov	x1, x19
  407184:	mov	x2, x21
  407188:	bl	402460 <ngettext@plt>
  40718c:	mov	x19, x0
  407190:	bl	4027c0 <__errno_location@plt>
  407194:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  407198:	ldr	w8, [x0]
  40719c:	ldr	x0, [x22, #872]
  4071a0:	ldr	d0, [x10, #1904]
  4071a4:	sub	x9, x29, #0x60
  4071a8:	sub	x1, x29, #0x40
  4071ac:	stp	x19, x9, [x29, #-64]
  4071b0:	stur	w8, [x29, #-48]
  4071b4:	stp	x23, x23, [x29, #-32]
  4071b8:	stur	d0, [x29, #-8]
  4071bc:	bl	405680 <feof@plt+0x2cb0>
  4071c0:	add	x0, sp, #0xa8
  4071c4:	bl	42c094 <feof@plt+0x296c4>
  4071c8:	ldr	x0, [x22, #872]
  4071cc:	ldr	w8, [x0, #240]
  4071d0:	subs	w8, w8, #0x1
  4071d4:	str	w8, [x0, #240]
  4071d8:	b.ne	4071fc <feof@plt+0x482c>  // b.any
  4071dc:	ldr	w8, [x0, #244]
  4071e0:	cmp	w8, #0x1
  4071e4:	b.lt	4071f8 <feof@plt+0x4828>  // b.tstop
  4071e8:	ldr	x8, [x0, #256]
  4071ec:	cbz	x8, 4071f8 <feof@plt+0x4828>
  4071f0:	blr	x8
  4071f4:	ldr	x0, [x22, #872]
  4071f8:	str	wzr, [x0, #244]
  4071fc:	ldp	x20, x19, [sp, #480]
  407200:	ldp	x22, x21, [sp, #464]
  407204:	ldp	x28, x23, [sp, #448]
  407208:	ldp	x29, x30, [sp, #432]
  40720c:	add	sp, sp, #0x1f0
  407210:	ret
  407214:	sub	sp, sp, #0x1f0
  407218:	stp	x29, x30, [sp, #448]
  40721c:	stp	x28, x21, [sp, #464]
  407220:	stp	x20, x19, [sp, #480]
  407224:	add	x29, sp, #0x1c0
  407228:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  40722c:	ldr	x9, [x20, #872]
  407230:	stp	q4, q5, [sp, #64]
  407234:	stp	q2, q3, [sp, #32]
  407238:	stp	q0, q1, [sp]
  40723c:	stp	x6, x7, [sp, #168]
  407240:	stp	x4, x5, [sp, #152]
  407244:	stp	x2, x3, [sp, #136]
  407248:	stp	q6, q7, [sp, #96]
  40724c:	ldr	w12, [x9, #240]
  407250:	mov	x19, x1
  407254:	mov	w8, w0
  407258:	mov	x10, #0xffffffffffffffd0    	// #-48
  40725c:	add	w12, w12, #0x1
  407260:	str	w12, [x9, #240]
  407264:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  407268:	ldr	x1, [x9, #1880]
  40726c:	mov	x11, sp
  407270:	add	x13, sp, #0x88
  407274:	movk	x10, #0xff80, lsl #32
  407278:	add	x11, x11, #0x80
  40727c:	add	x13, x13, #0x30
  407280:	add	x9, x29, #0x30
  407284:	add	x0, sp, #0xb8
  407288:	mov	w2, w8
  40728c:	mov	x3, xzr
  407290:	stp	x11, x10, [x29, #-80]
  407294:	stp	x9, x13, [x29, #-96]
  407298:	add	x21, sp, #0xb8
  40729c:	bl	42bfb4 <feof@plt+0x295e4>
  4072a0:	mov	x0, x19
  4072a4:	bl	402640 <gettext@plt>
  4072a8:	mov	x19, x0
  4072ac:	bl	4027c0 <__errno_location@plt>
  4072b0:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4072b4:	ldr	w8, [x0]
  4072b8:	ldr	x0, [x20, #872]
  4072bc:	ldr	d0, [x10, #1904]
  4072c0:	sub	x9, x29, #0x60
  4072c4:	sub	x1, x29, #0x40
  4072c8:	stp	x19, x9, [x29, #-64]
  4072cc:	stur	w8, [x29, #-48]
  4072d0:	stp	x21, x21, [x29, #-32]
  4072d4:	stur	d0, [x29, #-8]
  4072d8:	bl	405680 <feof@plt+0x2cb0>
  4072dc:	add	x0, sp, #0xb8
  4072e0:	bl	42c094 <feof@plt+0x296c4>
  4072e4:	ldr	x0, [x20, #872]
  4072e8:	ldr	w8, [x0, #240]
  4072ec:	subs	w8, w8, #0x1
  4072f0:	str	w8, [x0, #240]
  4072f4:	b.ne	407318 <feof@plt+0x4948>  // b.any
  4072f8:	ldr	w8, [x0, #244]
  4072fc:	cmp	w8, #0x1
  407300:	b.lt	407314 <feof@plt+0x4944>  // b.tstop
  407304:	ldr	x8, [x0, #256]
  407308:	cbz	x8, 407314 <feof@plt+0x4944>
  40730c:	blr	x8
  407310:	ldr	x0, [x20, #872]
  407314:	str	wzr, [x0, #244]
  407318:	ldp	x20, x19, [sp, #480]
  40731c:	ldp	x28, x21, [sp, #464]
  407320:	ldp	x29, x30, [sp, #448]
  407324:	add	sp, sp, #0x1f0
  407328:	ret
  40732c:	sub	sp, sp, #0x140
  407330:	stp	x29, x30, [sp, #272]
  407334:	stp	x28, x21, [sp, #288]
  407338:	stp	x20, x19, [sp, #304]
  40733c:	add	x29, sp, #0x110
  407340:	stp	x2, x3, [sp, #128]
  407344:	stp	x4, x5, [sp, #144]
  407348:	stp	x6, x7, [sp, #160]
  40734c:	stp	q1, q2, [sp, #16]
  407350:	stp	q3, q4, [sp, #48]
  407354:	str	q0, [sp]
  407358:	stp	q5, q6, [sp, #80]
  40735c:	str	q7, [sp, #112]
  407360:	cbz	x0, 407424 <feof@plt+0x4a54>
  407364:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  407368:	ldr	x8, [x21, #872]
  40736c:	mov	x9, #0xffffffffffffffd0    	// #-48
  407370:	mov	x10, sp
  407374:	add	x11, sp, #0x80
  407378:	ldr	w12, [x8, #240]
  40737c:	mov	x19, x0
  407380:	movk	x9, #0xff80, lsl #32
  407384:	add	x13, x29, #0x30
  407388:	add	x10, x10, #0x80
  40738c:	add	x11, x11, #0x30
  407390:	add	w12, w12, #0x1
  407394:	mov	x0, x1
  407398:	str	w12, [x8, #240]
  40739c:	stp	x10, x9, [x29, #-80]
  4073a0:	stp	x13, x11, [x29, #-96]
  4073a4:	bl	402640 <gettext@plt>
  4073a8:	mov	x20, x0
  4073ac:	bl	4027c0 <__errno_location@plt>
  4073b0:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4073b4:	ldr	w8, [x0]
  4073b8:	ldr	x0, [x21, #872]
  4073bc:	ldr	d0, [x10, #1904]
  4073c0:	sub	x9, x29, #0x60
  4073c4:	sub	x1, x29, #0x40
  4073c8:	stp	x20, x9, [x29, #-64]
  4073cc:	stur	w8, [x29, #-48]
  4073d0:	stp	x19, x19, [x29, #-32]
  4073d4:	stur	d0, [x29, #-8]
  4073d8:	bl	405680 <feof@plt+0x2cb0>
  4073dc:	ldr	x0, [x21, #872]
  4073e0:	ldr	w8, [x0, #240]
  4073e4:	subs	w8, w8, #0x1
  4073e8:	str	w8, [x0, #240]
  4073ec:	b.ne	407410 <feof@plt+0x4a40>  // b.any
  4073f0:	ldr	w8, [x0, #244]
  4073f4:	cmp	w8, #0x1
  4073f8:	b.lt	40740c <feof@plt+0x4a3c>  // b.tstop
  4073fc:	ldr	x8, [x0, #256]
  407400:	cbz	x8, 40740c <feof@plt+0x4a3c>
  407404:	blr	x8
  407408:	ldr	x0, [x21, #872]
  40740c:	str	wzr, [x0, #244]
  407410:	ldp	x20, x19, [sp, #304]
  407414:	ldp	x28, x21, [sp, #288]
  407418:	ldp	x29, x30, [sp, #272]
  40741c:	add	sp, sp, #0x140
  407420:	ret
  407424:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407428:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40742c:	add	x0, x0, #0xa28
  407430:	add	x2, x2, #0xa6d
  407434:	mov	w1, #0x5be                 	// #1470
  407438:	bl	404ac4 <feof@plt+0x20f4>
  40743c:	sub	sp, sp, #0x1f0
  407440:	stp	x29, x30, [sp, #448]
  407444:	stp	x28, x21, [sp, #464]
  407448:	stp	x20, x19, [sp, #480]
  40744c:	add	x29, sp, #0x1c0
  407450:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  407454:	ldr	x8, [x20, #872]
  407458:	stp	q4, q5, [sp, #64]
  40745c:	stp	q2, q3, [sp, #32]
  407460:	stp	q0, q1, [sp]
  407464:	stp	x6, x7, [sp, #168]
  407468:	stp	x4, x5, [sp, #152]
  40746c:	stp	x2, x3, [sp, #136]
  407470:	str	x1, [sp, #128]
  407474:	stp	q6, q7, [sp, #96]
  407478:	ldr	w10, [x8, #240]
  40747c:	adrp	x13, 476000 <_obstack_memory_used@@Base+0x25a68>
  407480:	mov	x9, #0xffffffffffffffc8    	// #-56
  407484:	mov	x11, sp
  407488:	add	w10, w10, #0x1
  40748c:	str	w10, [x8, #240]
  407490:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407494:	ldr	x1, [x13, #1880]
  407498:	ldr	w2, [x8, #1872]
  40749c:	add	x12, sp, #0x80
  4074a0:	mov	x19, x0
  4074a4:	movk	x9, #0xff80, lsl #32
  4074a8:	add	x10, x11, #0x80
  4074ac:	add	x11, x12, #0x38
  4074b0:	add	x8, x29, #0x30
  4074b4:	add	x0, sp, #0xb8
  4074b8:	mov	x3, xzr
  4074bc:	stp	x10, x9, [x29, #-80]
  4074c0:	stp	x8, x11, [x29, #-96]
  4074c4:	add	x21, sp, #0xb8
  4074c8:	bl	42bfb4 <feof@plt+0x295e4>
  4074cc:	mov	x0, x19
  4074d0:	bl	402640 <gettext@plt>
  4074d4:	mov	x19, x0
  4074d8:	bl	4027c0 <__errno_location@plt>
  4074dc:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4074e0:	ldr	w8, [x0]
  4074e4:	ldr	x0, [x20, #872]
  4074e8:	ldr	d0, [x10, #1912]
  4074ec:	sub	x9, x29, #0x60
  4074f0:	sub	x1, x29, #0x40
  4074f4:	stp	x19, x9, [x29, #-64]
  4074f8:	stur	w8, [x29, #-48]
  4074fc:	stp	x21, x21, [x29, #-32]
  407500:	stur	d0, [x29, #-8]
  407504:	bl	405680 <feof@plt+0x2cb0>
  407508:	add	x0, sp, #0xb8
  40750c:	bl	42c094 <feof@plt+0x296c4>
  407510:	ldr	x0, [x20, #872]
  407514:	ldr	w8, [x0, #240]
  407518:	subs	w8, w8, #0x1
  40751c:	str	w8, [x0, #240]
  407520:	b.ne	407544 <feof@plt+0x4b74>  // b.any
  407524:	ldr	w8, [x0, #244]
  407528:	cmp	w8, #0x1
  40752c:	b.lt	407540 <feof@plt+0x4b70>  // b.tstop
  407530:	ldr	x8, [x0, #256]
  407534:	cbz	x8, 407540 <feof@plt+0x4b70>
  407538:	blr	x8
  40753c:	ldr	x0, [x20, #872]
  407540:	str	wzr, [x0, #244]
  407544:	ldp	x20, x19, [sp, #480]
  407548:	ldp	x28, x21, [sp, #464]
  40754c:	ldp	x29, x30, [sp, #448]
  407550:	add	sp, sp, #0x1f0
  407554:	ret
  407558:	sub	sp, sp, #0x1f0
  40755c:	stp	x29, x30, [sp, #448]
  407560:	stp	x28, x21, [sp, #464]
  407564:	stp	x20, x19, [sp, #480]
  407568:	add	x29, sp, #0x1c0
  40756c:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  407570:	ldr	x9, [x20, #872]
  407574:	stp	q4, q5, [sp, #64]
  407578:	stp	q2, q3, [sp, #32]
  40757c:	stp	q0, q1, [sp]
  407580:	stp	x6, x7, [sp, #168]
  407584:	stp	x4, x5, [sp, #152]
  407588:	stp	x2, x3, [sp, #136]
  40758c:	stp	q6, q7, [sp, #96]
  407590:	ldr	w12, [x9, #240]
  407594:	mov	x19, x1
  407598:	mov	w8, w0
  40759c:	mov	x10, #0xffffffffffffffd0    	// #-48
  4075a0:	add	w12, w12, #0x1
  4075a4:	str	w12, [x9, #240]
  4075a8:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4075ac:	ldr	x1, [x9, #1880]
  4075b0:	mov	x11, sp
  4075b4:	add	x13, sp, #0x88
  4075b8:	movk	x10, #0xff80, lsl #32
  4075bc:	add	x11, x11, #0x80
  4075c0:	add	x13, x13, #0x30
  4075c4:	add	x9, x29, #0x30
  4075c8:	add	x0, sp, #0xb8
  4075cc:	mov	w2, w8
  4075d0:	mov	x3, xzr
  4075d4:	stp	x11, x10, [x29, #-80]
  4075d8:	stp	x9, x13, [x29, #-96]
  4075dc:	add	x21, sp, #0xb8
  4075e0:	bl	42bfb4 <feof@plt+0x295e4>
  4075e4:	mov	x0, x19
  4075e8:	bl	402640 <gettext@plt>
  4075ec:	mov	x19, x0
  4075f0:	bl	4027c0 <__errno_location@plt>
  4075f4:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4075f8:	ldr	w8, [x0]
  4075fc:	ldr	x0, [x20, #872]
  407600:	ldr	d0, [x10, #1912]
  407604:	sub	x9, x29, #0x60
  407608:	sub	x1, x29, #0x40
  40760c:	stp	x19, x9, [x29, #-64]
  407610:	stur	w8, [x29, #-48]
  407614:	stp	x21, x21, [x29, #-32]
  407618:	stur	d0, [x29, #-8]
  40761c:	bl	405680 <feof@plt+0x2cb0>
  407620:	add	x0, sp, #0xb8
  407624:	bl	42c094 <feof@plt+0x296c4>
  407628:	ldr	x0, [x20, #872]
  40762c:	ldr	w8, [x0, #240]
  407630:	subs	w8, w8, #0x1
  407634:	str	w8, [x0, #240]
  407638:	b.ne	40765c <feof@plt+0x4c8c>  // b.any
  40763c:	ldr	w8, [x0, #244]
  407640:	cmp	w8, #0x1
  407644:	b.lt	407658 <feof@plt+0x4c88>  // b.tstop
  407648:	ldr	x8, [x0, #256]
  40764c:	cbz	x8, 407658 <feof@plt+0x4c88>
  407650:	blr	x8
  407654:	ldr	x0, [x20, #872]
  407658:	str	wzr, [x0, #244]
  40765c:	ldp	x20, x19, [sp, #480]
  407660:	ldp	x28, x21, [sp, #464]
  407664:	ldp	x29, x30, [sp, #448]
  407668:	add	sp, sp, #0x1f0
  40766c:	ret
  407670:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407674:	ldr	x8, [x8, #872]
  407678:	ldr	w9, [x8, #24]
  40767c:	cbz	w9, 407688 <feof@plt+0x4cb8>
  407680:	mov	w0, #0x1                   	// #1
  407684:	ret
  407688:	ldr	w8, [x8, #28]
  40768c:	cmp	w8, #0x0
  407690:	cset	w0, ne  // ne = any
  407694:	ret
  407698:	sub	sp, sp, #0x1a0
  40769c:	stp	x29, x30, [sp, #384]
  4076a0:	stp	x28, x19, [sp, #400]
  4076a4:	add	x29, sp, #0x180
  4076a8:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4076ac:	ldr	x9, [x9, #872]
  4076b0:	stp	q4, q5, [sp, #64]
  4076b4:	stp	q2, q3, [sp, #32]
  4076b8:	stp	q0, q1, [sp]
  4076bc:	stp	x6, x7, [sp, #168]
  4076c0:	stp	x4, x5, [sp, #152]
  4076c4:	stp	x2, x3, [sp, #136]
  4076c8:	stp	q6, q7, [sp, #96]
  4076cc:	ldr	w12, [x9, #240]
  4076d0:	mov	x19, x1
  4076d4:	mov	w8, w0
  4076d8:	mov	x10, #0xffffffffffffffd0    	// #-48
  4076dc:	add	w12, w12, #0x1
  4076e0:	str	w12, [x9, #240]
  4076e4:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  4076e8:	ldr	x1, [x9, #1880]
  4076ec:	mov	x11, sp
  4076f0:	add	x13, sp, #0x88
  4076f4:	movk	x10, #0xff80, lsl #32
  4076f8:	add	x11, x11, #0x80
  4076fc:	add	x13, x13, #0x30
  407700:	add	x9, x29, #0x20
  407704:	add	x0, sp, #0xb8
  407708:	mov	w2, w8
  40770c:	mov	x3, xzr
  407710:	stp	x11, x10, [x29, #-16]
  407714:	stp	x9, x13, [x29, #-32]
  407718:	bl	42bfb4 <feof@plt+0x295e4>
  40771c:	add	x0, sp, #0xb8
  407720:	sub	x3, x29, #0x20
  407724:	mov	w1, #0xffffffff            	// #-1
  407728:	mov	w4, #0x2                   	// #2
  40772c:	mov	x2, x19
  407730:	bl	405fcc <feof@plt+0x35fc>
  407734:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407738:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40773c:	add	x0, x0, #0xa28
  407740:	add	x2, x2, #0xa76
  407744:	mov	w1, #0x5f6                 	// #1526
  407748:	bl	404ac4 <feof@plt+0x20f4>
  40774c:	sub	sp, sp, #0x1a0
  407750:	stp	x29, x30, [sp, #384]
  407754:	stp	x28, x19, [sp, #400]
  407758:	add	x29, sp, #0x180
  40775c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407760:	ldr	x8, [x8, #872]
  407764:	stp	q4, q5, [sp, #64]
  407768:	stp	q2, q3, [sp, #32]
  40776c:	stp	q0, q1, [sp]
  407770:	stp	x6, x7, [sp, #168]
  407774:	stp	x4, x5, [sp, #152]
  407778:	stp	x2, x3, [sp, #136]
  40777c:	str	x1, [sp, #128]
  407780:	stp	q6, q7, [sp, #96]
  407784:	ldr	w13, [x8, #240]
  407788:	adrp	x12, 476000 <_obstack_memory_used@@Base+0x25a68>
  40778c:	adrp	x14, 476000 <_obstack_memory_used@@Base+0x25a68>
  407790:	mov	x9, #0xffffffffffffffc8    	// #-56
  407794:	add	w13, w13, #0x1
  407798:	str	w13, [x8, #240]
  40779c:	ldr	x1, [x12, #1880]
  4077a0:	ldr	w2, [x14, #1872]
  4077a4:	mov	x10, sp
  4077a8:	add	x11, sp, #0x80
  4077ac:	mov	x19, x0
  4077b0:	movk	x9, #0xff80, lsl #32
  4077b4:	add	x10, x10, #0x80
  4077b8:	add	x11, x11, #0x38
  4077bc:	add	x8, x29, #0x20
  4077c0:	add	x0, sp, #0xb8
  4077c4:	mov	x3, xzr
  4077c8:	stp	x10, x9, [x29, #-16]
  4077cc:	stp	x8, x11, [x29, #-32]
  4077d0:	bl	42bfb4 <feof@plt+0x295e4>
  4077d4:	add	x0, sp, #0xb8
  4077d8:	sub	x3, x29, #0x20
  4077dc:	mov	w1, #0xffffffff            	// #-1
  4077e0:	mov	w4, #0x3                   	// #3
  4077e4:	mov	x2, x19
  4077e8:	bl	405fcc <feof@plt+0x35fc>
  4077ec:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4077f0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4077f4:	add	x0, x0, #0xa28
  4077f8:	add	x2, x2, #0xa82
  4077fc:	mov	w1, #0x607                 	// #1543
  407800:	bl	404ac4 <feof@plt+0x20f4>
  407804:	sub	sp, sp, #0x1a0
  407808:	stp	x29, x30, [sp, #384]
  40780c:	stp	x28, x19, [sp, #400]
  407810:	add	x29, sp, #0x180
  407814:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407818:	ldr	x8, [x8, #872]
  40781c:	stp	q4, q5, [sp, #64]
  407820:	stp	q2, q3, [sp, #32]
  407824:	stp	q0, q1, [sp]
  407828:	stp	x6, x7, [sp, #168]
  40782c:	stp	x4, x5, [sp, #152]
  407830:	stp	x2, x3, [sp, #136]
  407834:	str	x1, [sp, #128]
  407838:	stp	q6, q7, [sp, #96]
  40783c:	ldr	w13, [x8, #240]
  407840:	adrp	x12, 476000 <_obstack_memory_used@@Base+0x25a68>
  407844:	adrp	x14, 476000 <_obstack_memory_used@@Base+0x25a68>
  407848:	mov	x9, #0xffffffffffffffc8    	// #-56
  40784c:	add	w13, w13, #0x1
  407850:	str	w13, [x8, #240]
  407854:	ldr	x1, [x12, #1880]
  407858:	ldr	w2, [x14, #1872]
  40785c:	mov	x10, sp
  407860:	add	x11, sp, #0x80
  407864:	mov	x19, x0
  407868:	movk	x9, #0xff80, lsl #32
  40786c:	add	x10, x10, #0x80
  407870:	add	x11, x11, #0x38
  407874:	add	x8, x29, #0x20
  407878:	add	x0, sp, #0xb8
  40787c:	mov	x3, xzr
  407880:	stp	x10, x9, [x29, #-16]
  407884:	stp	x8, x11, [x29, #-32]
  407888:	bl	42bfb4 <feof@plt+0x295e4>
  40788c:	add	x0, sp, #0xb8
  407890:	sub	x3, x29, #0x20
  407894:	mov	w1, #0xffffffff            	// #-1
  407898:	mov	w4, #0xd                   	// #13
  40789c:	mov	x2, x19
  4078a0:	bl	405fcc <feof@plt+0x35fc>
  4078a4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4078a8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4078ac:	add	x0, x0, #0xa28
  4078b0:	add	x2, x2, #0xa91
  4078b4:	mov	w1, #0x617                 	// #1559
  4078b8:	bl	404ac4 <feof@plt+0x20f4>
  4078bc:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4078c0:	ldr	x8, [x8, #872]
  4078c4:	ldr	w9, [x8, #240]
  4078c8:	add	w9, w9, #0x1
  4078cc:	str	w9, [x8, #240]
  4078d0:	ret
  4078d4:	stp	x29, x30, [sp, #-32]!
  4078d8:	str	x19, [sp, #16]
  4078dc:	mov	x29, sp
  4078e0:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4078e4:	ldr	x0, [x19, #872]
  4078e8:	ldr	w8, [x0, #240]
  4078ec:	subs	w8, w8, #0x1
  4078f0:	str	w8, [x0, #240]
  4078f4:	b.ne	407918 <feof@plt+0x4f48>  // b.any
  4078f8:	ldr	w8, [x0, #244]
  4078fc:	cmp	w8, #0x1
  407900:	b.lt	407914 <feof@plt+0x4f44>  // b.tstop
  407904:	ldr	x8, [x0, #256]
  407908:	cbz	x8, 407914 <feof@plt+0x4f44>
  40790c:	blr	x8
  407910:	ldr	x0, [x19, #872]
  407914:	str	wzr, [x0, #244]
  407918:	ldr	x19, [sp, #16]
  40791c:	ldp	x29, x30, [sp], #32
  407920:	ret
  407924:	stp	x29, x30, [sp, #-80]!
  407928:	stp	x26, x25, [sp, #16]
  40792c:	stp	x24, x23, [sp, #32]
  407930:	stp	x22, x21, [sp, #48]
  407934:	stp	x20, x19, [sp, #64]
  407938:	mov	x29, sp
  40793c:	cbz	x0, 407a48 <feof@plt+0x5078>
  407940:	mov	x20, x1
  407944:	cbz	x1, 407a60 <feof@plt+0x5090>
  407948:	mov	w1, #0x22                  	// #34
  40794c:	mov	x19, x0
  407950:	bl	40d5a0 <feof@plt+0xabd0>
  407954:	ldrb	w8, [x20]
  407958:	cbz	w8, 407a28 <feof@plt+0x5058>
  40795c:	add	x25, x20, #0x1
  407960:	adrp	x20, 451000 <_obstack_memory_used@@Base+0xa68>
  407964:	adrp	x21, 451000 <_obstack_memory_used@@Base+0xa68>
  407968:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x10a68>
  40796c:	adrp	x22, 451000 <_obstack_memory_used@@Base+0xa68>
  407970:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  407974:	adrp	x24, 451000 <_obstack_memory_used@@Base+0xa68>
  407978:	add	x20, x20, #0xbc6
  40797c:	add	x21, x21, #0xbc9
  407980:	add	x26, x26, #0xa50
  407984:	add	x22, x22, #0xbcf
  407988:	add	x23, x23, #0xbcc
  40798c:	add	x24, x24, #0xbc3
  407990:	b	4079a8 <feof@plt+0x4fd8>
  407994:	mov	x0, x19
  407998:	mov	x1, x23
  40799c:	bl	40f384 <feof@plt+0xc9b4>
  4079a0:	ldrb	w8, [x25], #1
  4079a4:	cbz	w8, 407a28 <feof@plt+0x5058>
  4079a8:	and	w1, w8, #0xff
  4079ac:	cmp	w1, #0x21
  4079b0:	b.gt	4079d0 <feof@plt+0x5000>
  4079b4:	cmp	w1, #0x9
  4079b8:	b.eq	407a10 <feof@plt+0x5040>  // b.none
  4079bc:	cmp	w1, #0xa
  4079c0:	b.ne	4079ec <feof@plt+0x501c>  // b.any
  4079c4:	mov	x0, x19
  4079c8:	mov	x1, x21
  4079cc:	b	40799c <feof@plt+0x4fcc>
  4079d0:	cmp	w1, #0x22
  4079d4:	b.eq	407994 <feof@plt+0x4fc4>  // b.none
  4079d8:	cmp	w1, #0x5c
  4079dc:	b.ne	4079ec <feof@plt+0x501c>  // b.any
  4079e0:	mov	x0, x19
  4079e4:	mov	x1, x24
  4079e8:	b	40799c <feof@plt+0x4fcc>
  4079ec:	ldrh	w8, [x26, w1, uxtw #1]
  4079f0:	tbnz	w8, #4, 407a1c <feof@plt+0x504c>
  4079f4:	lsr	w2, w1, #6
  4079f8:	ubfx	w3, w1, #3, #3
  4079fc:	and	w4, w1, #0x7
  407a00:	mov	x0, x19
  407a04:	mov	x1, x22
  407a08:	bl	40fbbc <feof@plt+0xd1ec>
  407a0c:	b	4079a0 <feof@plt+0x4fd0>
  407a10:	mov	x0, x19
  407a14:	mov	x1, x20
  407a18:	b	40799c <feof@plt+0x4fcc>
  407a1c:	mov	x0, x19
  407a20:	bl	40d5a0 <feof@plt+0xabd0>
  407a24:	b	4079a0 <feof@plt+0x4fd0>
  407a28:	mov	x0, x19
  407a2c:	ldp	x20, x19, [sp, #64]
  407a30:	ldp	x22, x21, [sp, #48]
  407a34:	ldp	x24, x23, [sp, #32]
  407a38:	ldp	x26, x25, [sp, #16]
  407a3c:	mov	w1, #0x22                  	// #34
  407a40:	ldp	x29, x30, [sp], #80
  407a44:	b	40d5a0 <feof@plt+0xabd0>
  407a48:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407a4c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  407a50:	add	x0, x0, #0xa28
  407a54:	add	x2, x2, #0xbae
  407a58:	mov	w1, #0x2f5                 	// #757
  407a5c:	bl	404ac4 <feof@plt+0x20f4>
  407a60:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407a64:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  407a68:	add	x0, x0, #0xa28
  407a6c:	add	x2, x2, #0xbae
  407a70:	mov	w1, #0x2f6                 	// #758
  407a74:	bl	404ac4 <feof@plt+0x20f4>
  407a78:	stp	x29, x30, [sp, #-64]!
  407a7c:	str	x23, [sp, #16]
  407a80:	stp	x22, x21, [sp, #32]
  407a84:	stp	x20, x19, [sp, #48]
  407a88:	mov	x29, sp
  407a8c:	cbz	x1, 407b5c <feof@plt+0x518c>
  407a90:	ldr	x8, [x0, #16]
  407a94:	mov	x20, x1
  407a98:	mov	x19, x0
  407a9c:	cbz	x8, 407aa8 <feof@plt+0x50d8>
  407aa0:	ldr	x0, [x20]
  407aa4:	blr	x8
  407aa8:	ldr	x8, [x19, #24]
  407aac:	cbz	x8, 407ab8 <feof@plt+0x50e8>
  407ab0:	ldr	x0, [x20, #8]
  407ab4:	blr	x8
  407ab8:	mov	x21, xzr
  407abc:	str	xzr, [x20, #32]
  407ac0:	ldr	x9, [x20, #16]
  407ac4:	cbz	x9, 407af8 <feof@plt+0x5128>
  407ac8:	ldr	x8, [x19, #16]
  407acc:	cbz	x8, 407ad8 <feof@plt+0x5108>
  407ad0:	ldr	x0, [x9]
  407ad4:	blr	x8
  407ad8:	ldr	x8, [x19, #24]
  407adc:	cbz	x8, 407aec <feof@plt+0x511c>
  407ae0:	ldr	x9, [x20, #16]
  407ae4:	ldr	x0, [x9, #8]
  407ae8:	blr	x8
  407aec:	ldr	x8, [x20, #16]
  407af0:	str	x21, [x8, #32]
  407af4:	ldr	x21, [x20, #16]
  407af8:	ldr	x9, [x20, #24]
  407afc:	cbz	x9, 407b38 <feof@plt+0x5168>
  407b00:	ldr	x8, [x19, #16]
  407b04:	cbz	x8, 407b10 <feof@plt+0x5140>
  407b08:	ldr	x0, [x9]
  407b0c:	blr	x8
  407b10:	ldr	x8, [x19, #24]
  407b14:	cbz	x8, 407b24 <feof@plt+0x5154>
  407b18:	ldr	x9, [x20, #24]
  407b1c:	ldr	x0, [x9, #8]
  407b20:	blr	x8
  407b24:	ldr	x8, [x20, #24]
  407b28:	str	x21, [x8, #32]
  407b2c:	ldr	x22, [x20, #24]
  407b30:	mov	x21, x22
  407b34:	b	407b3c <feof@plt+0x516c>
  407b38:	mov	x22, x21
  407b3c:	ldr	x23, [x20, #32]
  407b40:	mov	x0, x20
  407b44:	bl	402670 <_ZdlPv@plt>
  407b48:	mov	x20, x23
  407b4c:	cbnz	x23, 407ac0 <feof@plt+0x50f0>
  407b50:	mov	x21, xzr
  407b54:	mov	x20, x22
  407b58:	cbnz	x22, 407ac0 <feof@plt+0x50f0>
  407b5c:	ldp	x20, x19, [sp, #48]
  407b60:	ldp	x22, x21, [sp, #32]
  407b64:	ldr	x23, [sp, #16]
  407b68:	ldp	x29, x30, [sp], #64
  407b6c:	ret
  407b70:	stp	x29, x30, [sp, #-48]!
  407b74:	stp	x22, x21, [sp, #16]
  407b78:	stp	x20, x19, [sp, #32]
  407b7c:	mov	x29, sp
  407b80:	tbz	w0, #0, 407bd8 <feof@plt+0x5208>
  407b84:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407b88:	ldr	x0, [x8, #880]
  407b8c:	cbz	x0, 407bd8 <feof@plt+0x5208>
  407b90:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  407b94:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0xaa68>
  407b98:	mov	x20, x2
  407b9c:	mov	x21, x1
  407ba0:	add	x22, x22, #0x388
  407ba4:	add	x19, x19, #0xb34
  407ba8:	b	407bb4 <feof@plt+0x51e4>
  407bac:	ldr	x0, [x22], #24
  407bb0:	cbz	x0, 407be0 <feof@plt+0x5210>
  407bb4:	ldurb	w8, [x22, #-8]
  407bb8:	cmp	x8, x20
  407bbc:	b.ne	407bac <feof@plt+0x51dc>  // b.any
  407bc0:	mov	x1, x21
  407bc4:	mov	x2, x20
  407bc8:	bl	402980 <bcmp@plt>
  407bcc:	cbnz	w0, 407bac <feof@plt+0x51dc>
  407bd0:	ldur	x19, [x22, #-16]
  407bd4:	b	407be0 <feof@plt+0x5210>
  407bd8:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0xaa68>
  407bdc:	add	x19, x19, #0xb34
  407be0:	mov	x0, x19
  407be4:	ldp	x20, x19, [sp, #32]
  407be8:	ldp	x22, x21, [sp, #16]
  407bec:	ldp	x29, x30, [sp], #48
  407bf0:	ret
  407bf4:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  407bf8:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  407bfc:	add	x8, x8, #0xb34
  407c00:	add	x9, x9, #0xc16
  407c04:	tst	w0, #0x1
  407c08:	csel	x0, x9, x8, ne  // ne = any
  407c0c:	ret
  407c10:	stp	x29, x30, [sp, #-16]!
  407c14:	mov	x29, sp
  407c18:	cbz	w0, 407c68 <feof@plt+0x5298>
  407c1c:	cmp	w0, #0x2
  407c20:	b.eq	407c34 <feof@plt+0x5264>  // b.none
  407c24:	cmp	w0, #0x1
  407c28:	b.ne	407c74 <feof@plt+0x52a4>  // b.any
  407c2c:	ldp	x29, x30, [sp], #16
  407c30:	b	407c8c <feof@plt+0x52bc>
  407c34:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407c38:	add	x0, x0, #0xd12
  407c3c:	bl	402870 <getenv@plt>
  407c40:	cbz	x0, 407c68 <feof@plt+0x5298>
  407c44:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  407c48:	add	x1, x1, #0xd17
  407c4c:	bl	402820 <strcmp@plt>
  407c50:	cbz	w0, 407c68 <feof@plt+0x5298>
  407c54:	mov	w0, #0x2                   	// #2
  407c58:	bl	402520 <isatty@plt>
  407c5c:	cbz	w0, 407c68 <feof@plt+0x5298>
  407c60:	ldp	x29, x30, [sp], #16
  407c64:	b	407c8c <feof@plt+0x52bc>
  407c68:	mov	w0, wzr
  407c6c:	ldp	x29, x30, [sp], #16
  407c70:	ret
  407c74:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407c78:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  407c7c:	add	x0, x0, #0xc1d
  407c80:	add	x2, x2, #0xc3a
  407c84:	mov	w1, #0xec                  	// #236
  407c88:	bl	404ac4 <feof@plt+0x20f4>
  407c8c:	stp	x29, x30, [sp, #-96]!
  407c90:	stp	x28, x27, [sp, #16]
  407c94:	stp	x26, x25, [sp, #32]
  407c98:	stp	x24, x23, [sp, #48]
  407c9c:	stp	x22, x21, [sp, #64]
  407ca0:	stp	x20, x19, [sp, #80]
  407ca4:	mov	x29, sp
  407ca8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  407cac:	add	x0, x0, #0xd07
  407cb0:	bl	402870 <getenv@plt>
  407cb4:	cbz	x0, 407e04 <feof@plt+0x5434>
  407cb8:	ldrb	w24, [x0]
  407cbc:	mov	x19, x0
  407cc0:	cbz	w24, 407e0c <feof@plt+0x543c>
  407cc4:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x25a68>
  407cc8:	mov	w27, #0x1b6d                	// #7021
  407ccc:	mov	x22, xzr
  407cd0:	mov	x21, xzr
  407cd4:	mov	x20, xzr
  407cd8:	add	x26, x26, #0x370
  407cdc:	movk	w27, #0x4b5b, lsl #16
  407ce0:	mov	w28, #0x1                   	// #1
  407ce4:	mov	x23, x19
  407ce8:	b	407cf0 <feof@plt+0x5320>
  407cec:	ldrb	w24, [x19, #1]!
  407cf0:	ands	w8, w24, #0xff
  407cf4:	b.eq	407d08 <feof@plt+0x5338>  // b.none
  407cf8:	cmp	w8, #0x3d
  407cfc:	b.eq	407dc4 <feof@plt+0x53f4>  // b.none
  407d00:	cmp	w8, #0x3a
  407d04:	b.ne	407de4 <feof@plt+0x5414>  // b.any
  407d08:	ldr	x0, [x26]
  407d0c:	sub	x8, x19, x22
  407d10:	sub	x9, x19, x23
  407d14:	cmp	x22, #0x0
  407d18:	csel	x21, x21, x9, ne  // ne = any
  407d1c:	csel	x20, x8, x20, ne  // ne = any
  407d20:	mov	x25, x26
  407d24:	cbnz	x0, 407d34 <feof@plt+0x5364>
  407d28:	b	407d50 <feof@plt+0x5380>
  407d2c:	ldr	x0, [x25, #24]!
  407d30:	cbz	x0, 407d50 <feof@plt+0x5380>
  407d34:	ldrb	w8, [x25, #16]
  407d38:	cmp	x21, x8
  407d3c:	b.ne	407d2c <feof@plt+0x535c>  // b.any
  407d40:	mov	x1, x23
  407d44:	mov	x2, x21
  407d48:	bl	402980 <bcmp@plt>
  407d4c:	cbnz	w0, 407d2c <feof@plt+0x535c>
  407d50:	cbz	x22, 407da8 <feof@plt+0x53d8>
  407d54:	ldr	x0, [x25, #8]
  407d58:	cbz	x0, 407da8 <feof@plt+0x53d8>
  407d5c:	ldrb	w8, [x25, #17]
  407d60:	cbz	w8, 407d68 <feof@plt+0x5398>
  407d64:	bl	4024c0 <free@plt>
  407d68:	add	x0, x20, #0x7
  407d6c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  407d70:	mov	x24, x0
  407d74:	mov	w8, #0x5b1b                	// #23323
  407d78:	strh	w8, [x24], #2
  407d7c:	mov	x23, x0
  407d80:	mov	x0, x24
  407d84:	mov	x1, x22
  407d88:	mov	x2, x20
  407d8c:	bl	402390 <memcpy@plt>
  407d90:	add	x8, x24, x20
  407d94:	str	x23, [x25, #8]
  407d98:	str	w27, [x8]
  407d9c:	strb	wzr, [x8, #4]
  407da0:	strb	w28, [x25, #17]
  407da4:	ldrb	w24, [x19]
  407da8:	tst	w24, #0xff
  407dac:	b.eq	407e04 <feof@plt+0x5434>  // b.none
  407db0:	add	x19, x19, #0x1
  407db4:	ldrb	w24, [x19]
  407db8:	mov	x22, xzr
  407dbc:	mov	x23, x19
  407dc0:	b	407cf0 <feof@plt+0x5320>
  407dc4:	subs	x21, x19, x23
  407dc8:	mov	w0, #0x1                   	// #1
  407dcc:	b.eq	407e10 <feof@plt+0x5440>  // b.none
  407dd0:	cbnz	x22, 407e10 <feof@plt+0x5440>
  407dd4:	add	x19, x19, #0x1
  407dd8:	ldrb	w24, [x19]
  407ddc:	mov	x22, x19
  407de0:	b	407cf0 <feof@plt+0x5320>
  407de4:	cbz	x22, 407cec <feof@plt+0x531c>
  407de8:	and	w8, w24, #0xff
  407dec:	cmp	w8, #0x3b
  407df0:	b.eq	407cec <feof@plt+0x531c>  // b.none
  407df4:	sub	w8, w24, #0x30
  407df8:	and	w8, w8, #0xff
  407dfc:	cmp	w8, #0x9
  407e00:	b.ls	407cec <feof@plt+0x531c>  // b.plast
  407e04:	mov	w0, #0x1                   	// #1
  407e08:	b	407e10 <feof@plt+0x5440>
  407e0c:	mov	w0, wzr
  407e10:	ldp	x20, x19, [sp, #80]
  407e14:	ldp	x22, x21, [sp, #64]
  407e18:	ldp	x24, x23, [sp, #48]
  407e1c:	ldp	x26, x25, [sp, #32]
  407e20:	ldp	x28, x27, [sp, #16]
  407e24:	ldp	x29, x30, [sp], #96
  407e28:	ret
  407e2c:	sub	sp, sp, #0xe0
  407e30:	stp	x29, x30, [sp, #176]
  407e34:	str	x21, [sp, #192]
  407e38:	stp	x20, x19, [sp, #208]
  407e3c:	add	x29, sp, #0xb0
  407e40:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  407e44:	mov	w20, w1
  407e48:	ldr	x1, [x8, #872]
  407e4c:	mov	x21, x0
  407e50:	add	x0, sp, #0x18
  407e54:	mov	w3, #0x4                   	// #4
  407e58:	mov	x2, x21
  407e5c:	bl	407f38 <feof@plt+0x5568>
  407e60:	mov	w8, #0x1                   	// #1
  407e64:	add	x0, sp, #0x18
  407e68:	add	x1, sp, #0x8
  407e6c:	mov	w3, #0x1                   	// #1
  407e70:	mov	w2, wzr
  407e74:	stp	w20, w8, [sp, #8]
  407e78:	bl	4090b0 <feof@plt+0x66e0>
  407e7c:	mov	w19, wzr
  407e80:	tbz	w0, #0, 407e9c <feof@plt+0x54cc>
  407e84:	mov	w2, #0x1                   	// #1
  407e88:	mov	x0, x21
  407e8c:	mov	w1, w20
  407e90:	mov	x3, xzr
  407e94:	mov	w19, #0x1                   	// #1
  407e98:	bl	42bfec <feof@plt+0x2961c>
  407e9c:	ldr	x0, [sp, #160]
  407ea0:	cbz	x0, 407eb4 <feof@plt+0x54e4>
  407ea4:	ldr	w8, [x0]
  407ea8:	tbnz	w8, #31, 407ed0 <feof@plt+0x5500>
  407eac:	bl	4024c0 <free@plt>
  407eb0:	str	xzr, [sp, #160]
  407eb4:	ldr	x0, [sp, #152]
  407eb8:	cbz	x0, 407ee4 <feof@plt+0x5514>
  407ebc:	ldr	w8, [x0]
  407ec0:	tbnz	w8, #31, 407ee0 <feof@plt+0x5510>
  407ec4:	bl	4024c0 <free@plt>
  407ec8:	str	xzr, [sp, #152]
  407ecc:	b	407ee4 <feof@plt+0x5514>
  407ed0:	str	wzr, [x0, #4]
  407ed4:	ldr	x0, [sp, #152]
  407ed8:	cbnz	x0, 407ebc <feof@plt+0x54ec>
  407edc:	b	407ee4 <feof@plt+0x5514>
  407ee0:	str	wzr, [x0, #4]
  407ee4:	ldr	x0, [sp, #144]
  407ee8:	cbz	x0, 407f04 <feof@plt+0x5534>
  407eec:	ldr	w8, [x0]
  407ef0:	tbnz	w8, #31, 407f00 <feof@plt+0x5530>
  407ef4:	bl	4024c0 <free@plt>
  407ef8:	str	xzr, [sp, #144]
  407efc:	b	407f04 <feof@plt+0x5534>
  407f00:	str	wzr, [x0, #4]
  407f04:	ldr	w8, [sp, #92]
  407f08:	cmn	w8, #0x1
  407f0c:	b.eq	407f20 <feof@plt+0x5550>  // b.none
  407f10:	ldr	x8, [sp, #80]
  407f14:	ldr	x1, [sp, #128]
  407f18:	ldr	x0, [x8]
  407f1c:	bl	40f384 <feof@plt+0xc9b4>
  407f20:	mov	w0, w19
  407f24:	ldp	x20, x19, [sp, #208]
  407f28:	ldr	x21, [sp, #192]
  407f2c:	ldp	x29, x30, [sp, #176]
  407f30:	add	sp, sp, #0xe0
  407f34:	ret
  407f38:	sub	sp, sp, #0x90
  407f3c:	stp	x29, x30, [sp, #48]
  407f40:	stp	x28, x27, [sp, #64]
  407f44:	stp	x26, x25, [sp, #80]
  407f48:	stp	x24, x23, [sp, #96]
  407f4c:	stp	x22, x21, [sp, #112]
  407f50:	stp	x20, x19, [sp, #128]
  407f54:	add	x29, sp, #0x30
  407f58:	str	x1, [x0]
  407f5c:	ldr	x8, [x1]
  407f60:	mov	x20, x1
  407f64:	mov	x19, x0
  407f68:	mov	w1, wzr
  407f6c:	str	x8, [x0, #8]
  407f70:	mov	x0, x2
  407f74:	mov	w22, w3
  407f78:	mov	x21, x2
  407f7c:	bl	42c170 <feof@plt+0x297a0>
  407f80:	ldr	w8, [x0]
  407f84:	mov	x0, x21
  407f88:	mov	w1, wzr
  407f8c:	str	w8, [x19, #16]
  407f90:	add	x8, x19, #0x18
  407f94:	bl	42c194 <feof@plt+0x297c4>
  407f98:	mov	w8, #0xffffffff            	// #-1
  407f9c:	str	x20, [x19, #56]
  407fa0:	stp	w22, w8, [x19, #64]
  407fa4:	ldr	x8, [x20]
  407fa8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  407fac:	add	x1, x1, #0xc6c
  407fb0:	mov	w2, #0x6                   	// #6
  407fb4:	ldrb	w0, [x8, #67]
  407fb8:	bl	407b70 <feof@plt+0x51a0>
  407fbc:	ldr	x8, [x19, #56]
  407fc0:	str	x0, [x19, #72]
  407fc4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  407fc8:	add	x1, x1, #0xc7c
  407fcc:	ldr	x8, [x8]
  407fd0:	mov	w2, #0x6                   	// #6
  407fd4:	ldrb	w0, [x8, #67]
  407fd8:	bl	407b70 <feof@plt+0x51a0>
  407fdc:	ldr	x8, [x19, #56]
  407fe0:	str	x0, [x19, #80]
  407fe4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  407fe8:	add	x1, x1, #0xc95
  407fec:	ldr	x8, [x8]
  407ff0:	mov	w2, #0xc                   	// #12
  407ff4:	ldrb	w0, [x8, #67]
  407ff8:	bl	407b70 <feof@plt+0x51a0>
  407ffc:	ldr	x8, [x19, #56]
  408000:	str	x0, [x19, #88]
  408004:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  408008:	add	x1, x1, #0xca2
  40800c:	ldr	x8, [x8]
  408010:	mov	w2, #0xc                   	// #12
  408014:	ldrb	w0, [x8, #67]
  408018:	bl	407b70 <feof@plt+0x51a0>
  40801c:	str	x0, [x19, #96]
  408020:	ldr	x8, [x20]
  408024:	ldrb	w0, [x8, #67]
  408028:	bl	407bf4 <feof@plt+0x5224>
  40802c:	str	x0, [x19, #104]
  408030:	ldrb	w8, [x20, #221]
  408034:	str	x20, [sp, #8]
  408038:	strb	w8, [x19, #112]
  40803c:	ldrb	w8, [x20, #222]
  408040:	strb	w8, [x19, #113]
  408044:	ldrb	w8, [x20, #223]
  408048:	strb	w8, [x19, #114]
  40804c:	ldr	w20, [x21, #8]
  408050:	str	xzr, [x19, #120]
  408054:	cbz	w20, 408078 <feof@plt+0x56a8>
  408058:	mov	w8, #0x28                  	// #40
  40805c:	orr	x9, xzr, #0x8
  408060:	madd	x1, x20, x8, x9
  408064:	mov	x0, xzr
  408068:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40806c:	and	w8, w20, #0x7fffffff
  408070:	str	x0, [x19, #120]
  408074:	stp	w8, wzr, [x0]
  408078:	ldr	w20, [x21, #120]
  40807c:	str	xzr, [x19, #128]
  408080:	cbz	w20, 4080a0 <feof@plt+0x56d0>
  408084:	lsl	x8, x20, #3
  408088:	add	x1, x8, #0x8
  40808c:	mov	x0, xzr
  408090:	bl	450728 <_obstack_memory_used@@Base+0x190>
  408094:	and	w8, w20, #0x7fffffff
  408098:	str	x0, [x19, #128]
  40809c:	stp	w8, wzr, [x0]
  4080a0:	ldr	w8, [x21, #8]
  4080a4:	str	xzr, [x19, #136]
  4080a8:	adds	w20, w8, #0x1
  4080ac:	b.cs	4080d0 <feof@plt+0x5700>  // b.hs, b.nlast
  4080b0:	mov	w8, w20
  4080b4:	lsl	x8, x8, #3
  4080b8:	add	x1, x8, #0x8
  4080bc:	mov	x0, xzr
  4080c0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4080c4:	and	w8, w20, #0x7fffffff
  4080c8:	str	x0, [x19, #136]
  4080cc:	stp	w8, wzr, [x0]
  4080d0:	str	xzr, [x19, #144]
  4080d4:	ldr	w8, [x21, #8]
  4080d8:	cbz	w8, 408110 <feof@plt+0x5740>
  4080dc:	mov	w22, wzr
  4080e0:	mov	x0, x21
  4080e4:	mov	w1, w22
  4080e8:	bl	42c170 <feof@plt+0x297a0>
  4080ec:	mov	x1, x0
  4080f0:	mov	x0, x19
  4080f4:	mov	w2, w22
  4080f8:	mov	w3, wzr
  4080fc:	bl	4090b0 <feof@plt+0x66e0>
  408100:	ldr	w8, [x21, #8]
  408104:	add	w22, w22, #0x1
  408108:	cmp	w22, w8
  40810c:	b.cc	4080e0 <feof@plt+0x5710>  // b.lo, b.ul, b.last
  408110:	ldr	w8, [x21, #120]
  408114:	cbz	w8, 408308 <feof@plt+0x5938>
  408118:	mov	w23, wzr
  40811c:	mov	w24, #0x4                   	// #4
  408120:	b	408154 <feof@plt+0x5784>
  408124:	ldr	x11, [x19, #128]
  408128:	str	w20, [x11, #4]
  40812c:	ldr	x8, [x19, #128]
  408130:	ldr	w9, [x8, #4]
  408134:	add	w10, w9, #0x1
  408138:	add	x9, x8, x9, lsl #3
  40813c:	str	w10, [x8, #4]
  408140:	str	x25, [x9, #8]
  408144:	ldr	w8, [x21, #120]
  408148:	add	w23, w23, #0x1
  40814c:	cmp	w23, w8
  408150:	b.cs	408308 <feof@plt+0x5938>  // b.hs, b.nlast
  408154:	cmp	w23, #0x1
  408158:	b.gt	408168 <feof@plt+0x5798>
  40815c:	add	x8, x21, w23, sxtw #3
  408160:	add	x8, x8, #0x80
  408164:	b	408174 <feof@plt+0x57a4>
  408168:	ldr	x8, [x21, #152]
  40816c:	add	x8, x8, w23, sxtw #3
  408170:	sub	x8, x8, #0x10
  408174:	ldr	x25, [x8]
  408178:	add	x8, sp, #0x10
  40817c:	ldr	w0, [x25]
  408180:	bl	413104 <feof@plt+0x10734>
  408184:	ldr	x8, [sp, #16]
  408188:	ldr	x9, [x19, #24]
  40818c:	cmp	x8, x9
  408190:	b.ne	408144 <feof@plt+0x5774>  // b.any
  408194:	ldr	w0, [x25, #4]
  408198:	add	x8, sp, #0x10
  40819c:	bl	413104 <feof@plt+0x10734>
  4081a0:	ldr	x8, [sp, #16]
  4081a4:	ldr	x9, [x19, #24]
  4081a8:	cmp	x8, x9
  4081ac:	b.ne	408144 <feof@plt+0x5774>  // b.any
  4081b0:	ldr	x26, [x19, #128]
  4081b4:	cbz	x26, 4081fc <feof@plt+0x582c>
  4081b8:	ldp	w8, w9, [x26]
  4081bc:	and	w0, w8, #0x7fffffff
  4081c0:	cmp	w0, w9
  4081c4:	b.ne	40812c <feof@plt+0x575c>  // b.any
  4081c8:	tbnz	w8, #31, 40820c <feof@plt+0x583c>
  4081cc:	add	w1, w0, #0x1
  4081d0:	bl	411298 <feof@plt+0xe8c8>
  4081d4:	ldr	x8, [x19, #128]
  4081d8:	mov	w9, w0
  4081dc:	lsl	x9, x9, #3
  4081e0:	mov	w22, w0
  4081e4:	add	x1, x9, #0x8
  4081e8:	mov	w20, wzr
  4081ec:	cbz	x8, 4082fc <feof@plt+0x592c>
  4081f0:	ldr	w28, [x8, #4]
  4081f4:	mov	w27, wzr
  4081f8:	b	408238 <feof@plt+0x5868>
  4081fc:	mov	w20, wzr
  408200:	mov	w27, wzr
  408204:	mov	w22, #0x4                   	// #4
  408208:	b	408224 <feof@plt+0x5854>
  40820c:	str	xzr, [x19, #128]
  408210:	ldr	w20, [x26, #4]
  408214:	mov	w27, #0x1                   	// #1
  408218:	add	w8, w20, #0x1
  40821c:	cmp	w8, #0x4
  408220:	csinc	w22, w24, w20, ls  // ls = plast
  408224:	mov	w9, w22
  408228:	lsl	x9, x9, #3
  40822c:	mov	x8, xzr
  408230:	mov	w28, wzr
  408234:	add	x1, x9, #0x8
  408238:	mov	x0, x8
  40823c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  408240:	and	w8, w22, #0x7fffffff
  408244:	str	x0, [x19, #128]
  408248:	stp	w8, w28, [x0]
  40824c:	cbz	w27, 40812c <feof@plt+0x575c>
  408250:	ldr	x11, [x19, #128]
  408254:	cbz	w20, 408128 <feof@plt+0x5758>
  408258:	sub	w12, w20, #0x1
  40825c:	add	x8, x26, #0x8
  408260:	cmp	w12, #0x3
  408264:	add	x9, x11, #0x8
  408268:	b.cs	408274 <feof@plt+0x58a4>  // b.hs, b.nlast
  40826c:	mov	w10, w20
  408270:	b	4082e8 <feof@plt+0x5918>
  408274:	lsl	x10, x12, #3
  408278:	add	x13, x26, x10
  40827c:	add	x13, x13, #0x10
  408280:	cmp	x13, x9
  408284:	b.ls	40829c <feof@plt+0x58cc>  // b.plast
  408288:	add	x10, x11, x10
  40828c:	add	x10, x10, #0x10
  408290:	cmp	x10, x8
  408294:	mov	w10, w20
  408298:	b.hi	4082e8 <feof@plt+0x5918>  // b.pmore
  40829c:	add	x12, x12, #0x1
  4082a0:	and	x13, x12, #0x1fffffffc
  4082a4:	lsl	x8, x13, #3
  4082a8:	add	x14, x11, #0x18
  4082ac:	add	x9, x26, x8
  4082b0:	add	x11, x11, x8
  4082b4:	sub	w10, w20, w13
  4082b8:	add	x8, x9, #0x8
  4082bc:	add	x9, x11, #0x8
  4082c0:	add	x11, x26, #0x18
  4082c4:	mov	x15, x13
  4082c8:	ldp	q0, q1, [x11, #-16]
  4082cc:	subs	x15, x15, #0x4
  4082d0:	add	x11, x11, #0x20
  4082d4:	stp	q0, q1, [x14, #-16]
  4082d8:	add	x14, x14, #0x20
  4082dc:	b.ne	4082c8 <feof@plt+0x58f8>  // b.any
  4082e0:	cmp	x12, x13
  4082e4:	b.eq	408124 <feof@plt+0x5754>  // b.none
  4082e8:	ldr	x11, [x8], #8
  4082ec:	subs	w10, w10, #0x1
  4082f0:	str	x11, [x9], #8
  4082f4:	b.ne	4082e8 <feof@plt+0x5918>  // b.any
  4082f8:	b	408124 <feof@plt+0x5754>
  4082fc:	mov	w27, wzr
  408300:	mov	w28, wzr
  408304:	b	408238 <feof@plt+0x5868>
  408308:	ldr	x8, [x19, #128]
  40830c:	cbz	x8, 408330 <feof@plt+0x5960>
  408310:	ldr	w1, [x8, #4]
  408314:	cmp	w1, #0x2
  408318:	b.cc	408330 <feof@plt+0x5960>  // b.lo, b.ul, b.last
  40831c:	adrp	x3, 40a000 <feof@plt+0x7630>
  408320:	add	x0, x8, #0x8
  408324:	add	x3, x3, #0xe68
  408328:	mov	w2, #0x8                   	// #8
  40832c:	bl	415868 <feof@plt+0x12e98>
  408330:	mov	x24, x19
  408334:	ldr	x8, [x24, #136]!
  408338:	cbz	x8, 408344 <feof@plt+0x5974>
  40833c:	ldr	w8, [x8, #4]
  408340:	cbnz	w8, 409080 <feof@plt+0x66b0>
  408344:	ldr	x8, [x19, #120]
  408348:	cbz	x8, 408364 <feof@plt+0x5994>
  40834c:	ldr	w8, [x8, #4]
  408350:	adds	w8, w8, #0x1
  408354:	b.cc	408370 <feof@plt+0x59a0>  // b.lo, b.ul, b.last
  408358:	ldr	w20, [x19, #32]
  40835c:	mov	x21, xzr
  408360:	b	4083a4 <feof@plt+0x59d4>
  408364:	mov	w8, #0x1                   	// #1
  408368:	mov	w20, #0x1                   	// #1
  40836c:	b	408374 <feof@plt+0x59a4>
  408370:	mov	w20, w8
  408374:	lsl	x8, x8, #3
  408378:	add	x1, x8, #0x8
  40837c:	mov	x0, xzr
  408380:	bl	450728 <_obstack_memory_used@@Base+0x190>
  408384:	and	w8, w20, #0x7fffffff
  408388:	stp	w8, wzr, [x0]
  40838c:	ldr	w20, [x19, #32]
  408390:	mov	x21, x0
  408394:	cbz	x0, 4083a4 <feof@plt+0x59d4>
  408398:	cbz	w8, 4083b0 <feof@plt+0x59e0>
  40839c:	mov	w23, wzr
  4083a0:	b	4083e4 <feof@plt+0x5a14>
  4083a4:	mov	w23, wzr
  4083a8:	mov	w22, #0x4                   	// #4
  4083ac:	b	4083c4 <feof@plt+0x59f4>
  4083b0:	mov	w1, #0x1                   	// #1
  4083b4:	mov	w0, wzr
  4083b8:	bl	411298 <feof@plt+0xe8c8>
  4083bc:	ldr	w23, [x21, #4]
  4083c0:	mov	w22, w0
  4083c4:	mov	w8, w22
  4083c8:	lsl	x8, x8, #3
  4083cc:	add	x1, x8, #0x8
  4083d0:	mov	x0, x21
  4083d4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4083d8:	mov	x21, x0
  4083dc:	and	w8, w22, #0x7fffffff
  4083e0:	stp	w8, w23, [x0]
  4083e4:	mov	w9, w20
  4083e8:	mov	w25, wzr
  4083ec:	add	w22, w23, #0x1
  4083f0:	add	x8, x21, w23, uxtw #3
  4083f4:	bfi	x9, x9, #32, #32
  4083f8:	str	w22, [x21, #4]
  4083fc:	str	x9, [x8, #8]
  408400:	b	408428 <feof@plt+0x5a58>
  408404:	mov	x0, x21
  408408:	ldr	w8, [x0, #4]
  40840c:	bfi	x28, x20, #32, #32
  408410:	add	w25, w25, #0x1
  408414:	mov	x21, x0
  408418:	add	w22, w8, #0x1
  40841c:	add	x8, x0, x8, lsl #3
  408420:	str	w22, [x0, #4]
  408424:	str	x28, [x8, #8]
  408428:	ldr	x8, [x19, #120]
  40842c:	cbz	x8, 408440 <feof@plt+0x5a70>
  408430:	ldr	w9, [x8, #4]
  408434:	cmp	w25, w9
  408438:	b.cc	40844c <feof@plt+0x5a7c>  // b.lo, b.ul, b.last
  40843c:	b	408598 <feof@plt+0x5bc8>
  408440:	mov	w9, wzr
  408444:	cmp	w25, w9
  408448:	b.cs	408598 <feof@plt+0x5bc8>  // b.hs, b.nlast
  40844c:	mov	w9, #0x28                  	// #40
  408450:	umaddl	x8, w25, w9, x8
  408454:	ldr	w28, [x8, #8]
  408458:	ldr	w20, [x8, #16]
  40845c:	cmp	w28, w20
  408460:	b.hi	408f90 <feof@plt+0x65c0>  // b.pmore
  408464:	cbz	x21, 4084a0 <feof@plt+0x5ad0>
  408468:	ldr	w8, [x21]
  40846c:	and	w9, w8, #0x7fffffff
  408470:	cmp	w9, w22
  408474:	b.ne	408404 <feof@plt+0x5a34>  // b.any
  408478:	add	w1, w22, #0x1
  40847c:	tbnz	w8, #31, 4084b8 <feof@plt+0x5ae8>
  408480:	mov	w0, w22
  408484:	bl	411298 <feof@plt+0xe8c8>
  408488:	ldr	w27, [x21, #4]
  40848c:	mov	w23, w0
  408490:	mov	w22, wzr
  408494:	mov	w26, wzr
  408498:	mov	x0, x21
  40849c:	b	4084d0 <feof@plt+0x5b00>
  4084a0:	mov	w22, wzr
  4084a4:	mov	w26, wzr
  4084a8:	mov	x0, xzr
  4084ac:	mov	w27, wzr
  4084b0:	mov	w23, #0x4                   	// #4
  4084b4:	b	4084d0 <feof@plt+0x5b00>
  4084b8:	cmp	w1, #0x4
  4084bc:	mov	w8, #0x4                   	// #4
  4084c0:	mov	x0, xzr
  4084c4:	mov	w27, wzr
  4084c8:	csel	w23, w1, w8, hi  // hi = pmore
  4084cc:	mov	w26, #0x1                   	// #1
  4084d0:	mov	w8, w23
  4084d4:	lsl	x8, x8, #3
  4084d8:	add	x1, x8, #0x8
  4084dc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4084e0:	and	w8, w23, #0x7fffffff
  4084e4:	stp	w8, w27, [x0]
  4084e8:	cbz	w26, 408408 <feof@plt+0x5a38>
  4084ec:	cbz	w22, 408590 <feof@plt+0x5bc0>
  4084f0:	sub	w10, w22, #0x1
  4084f4:	add	x9, x21, #0x8
  4084f8:	cmp	w10, #0x3
  4084fc:	add	x8, x0, #0x8
  408500:	b.cs	40850c <feof@plt+0x5b3c>  // b.hs, b.nlast
  408504:	mov	w10, w22
  408508:	b	408580 <feof@plt+0x5bb0>
  40850c:	lsl	x11, x10, #3
  408510:	add	x12, x21, x11
  408514:	add	x12, x12, #0x10
  408518:	cmp	x8, x12
  40851c:	b.cs	408538 <feof@plt+0x5b68>  // b.hs, b.nlast
  408520:	add	x11, x0, x11
  408524:	add	x11, x11, #0x10
  408528:	cmp	x11, x9
  40852c:	b.ls	408538 <feof@plt+0x5b68>  // b.plast
  408530:	mov	w10, w22
  408534:	b	408580 <feof@plt+0x5bb0>
  408538:	add	x11, x10, #0x1
  40853c:	and	x12, x11, #0x1fffffffc
  408540:	lsl	x9, x12, #3
  408544:	add	x14, x21, x9
  408548:	add	x13, x0, #0x18
  40854c:	sub	w10, w22, w12
  408550:	add	x8, x8, x9
  408554:	add	x9, x14, #0x8
  408558:	add	x14, x21, #0x18
  40855c:	mov	x15, x12
  408560:	ldp	q0, q1, [x14, #-16]
  408564:	subs	x15, x15, #0x4
  408568:	add	x14, x14, #0x20
  40856c:	stp	q0, q1, [x13, #-16]
  408570:	add	x13, x13, #0x20
  408574:	b.ne	408560 <feof@plt+0x5b90>  // b.any
  408578:	cmp	x11, x12
  40857c:	b.eq	408590 <feof@plt+0x5bc0>  // b.none
  408580:	ldr	x11, [x9], #8
  408584:	subs	w10, w10, #0x1
  408588:	str	x11, [x8], #8
  40858c:	b.ne	408580 <feof@plt+0x5bb0>  // b.any
  408590:	str	w22, [x0, #4]
  408594:	b	408408 <feof@plt+0x5a38>
  408598:	mov	w25, wzr
  40859c:	mov	w26, #0x4                   	// #4
  4085a0:	b	4085c4 <feof@plt+0x5bf4>
  4085a4:	mov	x0, x21
  4085a8:	ldr	w8, [x0, #4]
  4085ac:	add	w25, w25, #0x1
  4085b0:	mov	x21, x0
  4085b4:	add	w22, w8, #0x1
  4085b8:	add	x8, x0, x8, lsl #3
  4085bc:	str	w22, [x0, #4]
  4085c0:	str	x20, [x8, #8]
  4085c4:	ldr	x8, [x19, #128]
  4085c8:	cbz	x8, 4085dc <feof@plt+0x5c0c>
  4085cc:	ldr	w9, [x8, #4]
  4085d0:	cmp	w25, w9
  4085d4:	b.cc	4085e8 <feof@plt+0x5c18>  // b.lo, b.ul, b.last
  4085d8:	b	408770 <feof@plt+0x5da0>
  4085dc:	mov	w9, wzr
  4085e0:	cmp	w25, w9
  4085e4:	b.cs	408770 <feof@plt+0x5da0>  // b.hs, b.nlast
  4085e8:	add	x8, x8, w25, uxtw #3
  4085ec:	ldr	x22, [x8, #8]
  4085f0:	cbz	x22, 408fa8 <feof@plt+0x65d8>
  4085f4:	ldr	w0, [x22]
  4085f8:	add	x8, sp, #0x10
  4085fc:	bl	413104 <feof@plt+0x10734>
  408600:	ldr	w20, [sp, #24]
  408604:	mov	x0, x22
  408608:	bl	42d1ac <feof@plt+0x2a7dc>
  40860c:	ldr	w9, [x22, #4]
  408610:	cmp	w20, #0x1
  408614:	cset	w8, gt
  408618:	and	w8, w8, w0
  40861c:	sub	w20, w20, w8
  408620:	add	x8, sp, #0x10
  408624:	mov	w0, w9
  408628:	bl	413104 <feof@plt+0x10734>
  40862c:	ldr	w8, [sp, #24]
  408630:	cmp	w20, w8
  408634:	b.hi	408ff0 <feof@plt+0x6620>  // b.pmore
  408638:	mov	w20, w20
  40863c:	bfi	x20, x8, #32, #32
  408640:	cbz	x21, 40867c <feof@plt+0x5cac>
  408644:	ldp	w8, w9, [x21]
  408648:	and	w22, w8, #0x7fffffff
  40864c:	cmp	w22, w9
  408650:	b.ne	4085a4 <feof@plt+0x5bd4>  // b.any
  408654:	add	w1, w22, #0x1
  408658:	tbnz	w8, #31, 408694 <feof@plt+0x5cc4>
  40865c:	mov	w0, w22
  408660:	bl	411298 <feof@plt+0xe8c8>
  408664:	ldr	w27, [x21, #4]
  408668:	mov	w23, w0
  40866c:	mov	w22, wzr
  408670:	mov	w28, wzr
  408674:	mov	x0, x21
  408678:	b	4086a8 <feof@plt+0x5cd8>
  40867c:	mov	w22, wzr
  408680:	mov	w28, wzr
  408684:	mov	x0, xzr
  408688:	mov	w27, wzr
  40868c:	mov	w23, #0x4                   	// #4
  408690:	b	4086a8 <feof@plt+0x5cd8>
  408694:	cmp	w22, #0x4
  408698:	mov	x0, xzr
  40869c:	mov	w27, wzr
  4086a0:	csel	w23, w26, w1, cc  // cc = lo, ul, last
  4086a4:	mov	w28, #0x1                   	// #1
  4086a8:	mov	w8, w23
  4086ac:	lsl	x8, x8, #3
  4086b0:	add	x1, x8, #0x8
  4086b4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4086b8:	and	w8, w23, #0x7fffffff
  4086bc:	stp	w8, w27, [x0]
  4086c0:	cbz	w28, 4085a8 <feof@plt+0x5bd8>
  4086c4:	cbz	w22, 408768 <feof@plt+0x5d98>
  4086c8:	sub	w10, w22, #0x1
  4086cc:	add	x9, x21, #0x8
  4086d0:	cmp	w10, #0x3
  4086d4:	add	x8, x0, #0x8
  4086d8:	b.cs	4086e4 <feof@plt+0x5d14>  // b.hs, b.nlast
  4086dc:	mov	w10, w22
  4086e0:	b	408758 <feof@plt+0x5d88>
  4086e4:	lsl	x11, x10, #3
  4086e8:	add	x12, x21, x11
  4086ec:	add	x12, x12, #0x10
  4086f0:	cmp	x8, x12
  4086f4:	b.cs	408710 <feof@plt+0x5d40>  // b.hs, b.nlast
  4086f8:	add	x11, x0, x11
  4086fc:	add	x11, x11, #0x10
  408700:	cmp	x11, x9
  408704:	b.ls	408710 <feof@plt+0x5d40>  // b.plast
  408708:	mov	w10, w22
  40870c:	b	408758 <feof@plt+0x5d88>
  408710:	add	x11, x10, #0x1
  408714:	and	x12, x11, #0x1fffffffc
  408718:	lsl	x9, x12, #3
  40871c:	add	x14, x21, x9
  408720:	add	x13, x0, #0x18
  408724:	sub	w10, w22, w12
  408728:	add	x8, x8, x9
  40872c:	add	x9, x14, #0x8
  408730:	add	x14, x21, #0x18
  408734:	mov	x15, x12
  408738:	ldp	q0, q1, [x14, #-16]
  40873c:	subs	x15, x15, #0x4
  408740:	add	x14, x14, #0x20
  408744:	stp	q0, q1, [x13, #-16]
  408748:	add	x13, x13, #0x20
  40874c:	b.ne	408738 <feof@plt+0x5d68>  // b.any
  408750:	cmp	x11, x12
  408754:	b.eq	408768 <feof@plt+0x5d98>  // b.none
  408758:	ldr	x11, [x9], #8
  40875c:	subs	w10, w10, #0x1
  408760:	str	x11, [x8], #8
  408764:	b.ne	408758 <feof@plt+0x5d88>  // b.any
  408768:	str	w22, [x0, #4]
  40876c:	b	4085a8 <feof@plt+0x5bd8>
  408770:	cbz	x21, 409038 <feof@plt+0x6668>
  408774:	cmp	w22, #0x2
  408778:	b.cc	408798 <feof@plt+0x5dc8>  // b.lo, b.ul, b.last
  40877c:	adrp	x3, 40a000 <feof@plt+0x7630>
  408780:	add	x0, x21, #0x8
  408784:	mov	w1, w22
  408788:	add	x3, x3, #0xe80
  40878c:	mov	w2, #0x8                   	// #8
  408790:	bl	415868 <feof@plt+0x12e98>
  408794:	ldr	w22, [x21, #4]
  408798:	cbz	w22, 409038 <feof@plt+0x6668>
  40879c:	ldr	x23, [x24]
  4087a0:	cbz	x23, 4087e8 <feof@plt+0x5e18>
  4087a4:	ldp	w8, w9, [x23]
  4087a8:	and	w0, w8, #0x7fffffff
  4087ac:	cmp	w0, w9
  4087b0:	b.ne	4088f0 <feof@plt+0x5f20>  // b.any
  4087b4:	tbnz	w8, #31, 4087f8 <feof@plt+0x5e28>
  4087b8:	add	w1, w0, #0x1
  4087bc:	bl	411298 <feof@plt+0xe8c8>
  4087c0:	ldr	x8, [x24]
  4087c4:	mov	w9, w0
  4087c8:	lsl	x9, x9, #3
  4087cc:	mov	w22, w0
  4087d0:	add	x1, x9, #0x8
  4087d4:	mov	w20, wzr
  4087d8:	cbz	x8, 408f84 <feof@plt+0x65b4>
  4087dc:	ldr	w26, [x8, #4]
  4087e0:	mov	w25, wzr
  4087e4:	b	408828 <feof@plt+0x5e58>
  4087e8:	mov	w20, wzr
  4087ec:	mov	w25, wzr
  4087f0:	mov	w22, #0x4                   	// #4
  4087f4:	b	408814 <feof@plt+0x5e44>
  4087f8:	str	xzr, [x24]
  4087fc:	ldr	w20, [x23, #4]
  408800:	mov	w8, #0x4                   	// #4
  408804:	mov	w25, #0x1                   	// #1
  408808:	add	w9, w20, #0x1
  40880c:	cmp	w9, #0x4
  408810:	csinc	w22, w8, w20, ls  // ls = plast
  408814:	mov	w9, w22
  408818:	lsl	x9, x9, #3
  40881c:	mov	x8, xzr
  408820:	mov	w26, wzr
  408824:	add	x1, x9, #0x8
  408828:	mov	x0, x8
  40882c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  408830:	and	w8, w22, #0x7fffffff
  408834:	str	x0, [x24]
  408838:	stp	w8, w26, [x0]
  40883c:	cbz	w25, 4088f0 <feof@plt+0x5f20>
  408840:	ldr	x11, [x24]
  408844:	cbz	w20, 4088ec <feof@plt+0x5f1c>
  408848:	sub	w12, w20, #0x1
  40884c:	add	x8, x23, #0x8
  408850:	cmp	w12, #0x3
  408854:	add	x9, x11, #0x8
  408858:	b.cs	408864 <feof@plt+0x5e94>  // b.hs, b.nlast
  40885c:	mov	w10, w20
  408860:	b	4088d8 <feof@plt+0x5f08>
  408864:	lsl	x10, x12, #3
  408868:	add	x13, x23, x10
  40886c:	add	x13, x13, #0x10
  408870:	cmp	x9, x13
  408874:	b.cs	40888c <feof@plt+0x5ebc>  // b.hs, b.nlast
  408878:	add	x10, x11, x10
  40887c:	add	x10, x10, #0x10
  408880:	cmp	x8, x10
  408884:	mov	w10, w20
  408888:	b.cc	4088d8 <feof@plt+0x5f08>  // b.lo, b.ul, b.last
  40888c:	add	x12, x12, #0x1
  408890:	and	x13, x12, #0x1fffffffc
  408894:	lsl	x8, x13, #3
  408898:	add	x14, x11, #0x18
  40889c:	add	x9, x23, x8
  4088a0:	add	x11, x11, x8
  4088a4:	sub	w10, w20, w13
  4088a8:	add	x8, x9, #0x8
  4088ac:	add	x9, x11, #0x8
  4088b0:	add	x11, x23, #0x18
  4088b4:	mov	x15, x13
  4088b8:	ldp	q0, q1, [x11, #-16]
  4088bc:	subs	x15, x15, #0x4
  4088c0:	add	x11, x11, #0x20
  4088c4:	stp	q0, q1, [x14, #-16]
  4088c8:	add	x14, x14, #0x20
  4088cc:	b.ne	4088b8 <feof@plt+0x5ee8>  // b.any
  4088d0:	cmp	x12, x13
  4088d4:	b.eq	4088e8 <feof@plt+0x5f18>  // b.none
  4088d8:	ldr	x11, [x8], #8
  4088dc:	subs	w10, w10, #0x1
  4088e0:	str	x11, [x9], #8
  4088e4:	b.ne	4088d8 <feof@plt+0x5f08>  // b.any
  4088e8:	ldr	x11, [x24]
  4088ec:	str	w20, [x11, #4]
  4088f0:	ldr	x8, [x24]
  4088f4:	mov	w23, #0x1                   	// #1
  4088f8:	ldr	w9, [x8, #4]
  4088fc:	add	w10, w9, #0x1
  408900:	str	w10, [x8, #4]
  408904:	ldr	x10, [x21, #8]
  408908:	add	x8, x8, x9, lsl #3
  40890c:	str	x10, [x8, #8]
  408910:	b	40893c <feof@plt+0x5f6c>
  408914:	ldr	x11, [x24]
  408918:	str	w20, [x11, #4]
  40891c:	ldr	x8, [x24]
  408920:	ldr	w9, [x8, #4]
  408924:	add	w10, w9, #0x1
  408928:	str	w10, [x8, #4]
  40892c:	ldr	x10, [x27]
  408930:	add	x8, x8, x9, lsl #3
  408934:	str	x10, [x8, #8]
  408938:	add	w23, w23, #0x1
  40893c:	ldr	x26, [x24]
  408940:	ldr	w8, [x21, #4]
  408944:	cbz	x26, 408958 <feof@plt+0x5f88>
  408948:	ldr	w9, [x26, #4]
  40894c:	cmp	w23, w8
  408950:	b.cc	408964 <feof@plt+0x5f94>  // b.lo, b.ul, b.last
  408954:	b	408afc <feof@plt+0x612c>
  408958:	mov	w9, wzr
  40895c:	cmp	w23, w8
  408960:	b.cs	408afc <feof@plt+0x612c>  // b.hs, b.nlast
  408964:	sub	w8, w9, #0x1
  408968:	add	x27, x21, w23, uxtw #3
  40896c:	add	x10, x26, w8, uxtw #3
  408970:	ldr	w9, [x27, #8]!
  408974:	ldr	w10, [x10, #8]
  408978:	cmp	w9, w10
  40897c:	b.cc	408fc0 <feof@plt+0x65f0>  // b.lo, b.ul, b.last
  408980:	add	x8, x26, x8, lsl #3
  408984:	ldrb	w11, [x19, #114]
  408988:	ldr	w10, [x8, #12]!
  40898c:	add	x11, x11, x10
  408990:	add	x11, x11, #0x1
  408994:	cmp	x11, x9
  408998:	b.cs	4089e0 <feof@plt+0x6010>  // b.hs, b.nlast
  40899c:	ldp	w8, w9, [x26]
  4089a0:	and	w0, w8, #0x7fffffff
  4089a4:	cmp	w0, w9
  4089a8:	b.ne	40891c <feof@plt+0x5f4c>  // b.any
  4089ac:	tbnz	w8, #31, 408a00 <feof@plt+0x6030>
  4089b0:	add	w1, w0, #0x1
  4089b4:	bl	411298 <feof@plt+0xe8c8>
  4089b8:	ldr	x8, [x24]
  4089bc:	mov	w9, w0
  4089c0:	lsl	x9, x9, #3
  4089c4:	mov	w22, w0
  4089c8:	add	x1, x9, #0x8
  4089cc:	mov	w20, wzr
  4089d0:	cbz	x8, 408a30 <feof@plt+0x6060>
  4089d4:	ldr	w28, [x8, #4]
  4089d8:	mov	w25, wzr
  4089dc:	b	408a38 <feof@plt+0x6068>
  4089e0:	mov	w9, w23
  4089e4:	add	x9, x21, x9, lsl #3
  4089e8:	ldr	w9, [x9, #12]
  4089ec:	cmp	w9, w10
  4089f0:	b.ls	408938 <feof@plt+0x5f68>  // b.plast
  4089f4:	str	w9, [x8]
  4089f8:	add	w23, w23, #0x1
  4089fc:	b	40893c <feof@plt+0x5f6c>
  408a00:	str	xzr, [x24]
  408a04:	ldr	w20, [x26, #4]
  408a08:	mov	x8, xzr
  408a0c:	mov	w28, wzr
  408a10:	mov	w25, #0x1                   	// #1
  408a14:	add	w9, w20, #0x1
  408a18:	cmp	w9, #0x4
  408a1c:	mov	w9, #0x4                   	// #4
  408a20:	csinc	w22, w9, w20, ls  // ls = plast
  408a24:	lsl	x9, x22, #3
  408a28:	add	x1, x9, #0x8
  408a2c:	b	408a38 <feof@plt+0x6068>
  408a30:	mov	w25, wzr
  408a34:	mov	w28, wzr
  408a38:	mov	x0, x8
  408a3c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  408a40:	and	w8, w22, #0x7fffffff
  408a44:	str	x0, [x24]
  408a48:	stp	w8, w28, [x0]
  408a4c:	cbz	w25, 40891c <feof@plt+0x5f4c>
  408a50:	ldr	x11, [x24]
  408a54:	cbz	w20, 408918 <feof@plt+0x5f48>
  408a58:	sub	w12, w20, #0x1
  408a5c:	add	x8, x26, #0x8
  408a60:	cmp	w12, #0x3
  408a64:	add	x9, x11, #0x8
  408a68:	b.cs	408a74 <feof@plt+0x60a4>  // b.hs, b.nlast
  408a6c:	mov	w10, w20
  408a70:	b	408ae8 <feof@plt+0x6118>
  408a74:	lsl	x10, x12, #3
  408a78:	add	x13, x26, x10
  408a7c:	add	x13, x13, #0x10
  408a80:	cmp	x13, x9
  408a84:	b.ls	408a9c <feof@plt+0x60cc>  // b.plast
  408a88:	add	x10, x11, x10
  408a8c:	add	x10, x10, #0x10
  408a90:	cmp	x10, x8
  408a94:	mov	w10, w20
  408a98:	b.hi	408ae8 <feof@plt+0x6118>  // b.pmore
  408a9c:	add	x12, x12, #0x1
  408aa0:	and	x13, x12, #0x1fffffffc
  408aa4:	lsl	x8, x13, #3
  408aa8:	add	x14, x11, #0x18
  408aac:	add	x9, x26, x8
  408ab0:	add	x11, x11, x8
  408ab4:	sub	w10, w20, w13
  408ab8:	add	x8, x9, #0x8
  408abc:	add	x9, x11, #0x8
  408ac0:	add	x11, x26, #0x18
  408ac4:	mov	x15, x13
  408ac8:	ldp	q0, q1, [x11, #-16]
  408acc:	subs	x15, x15, #0x4
  408ad0:	add	x11, x11, #0x20
  408ad4:	stp	q0, q1, [x14, #-16]
  408ad8:	add	x14, x14, #0x20
  408adc:	b.ne	408ac8 <feof@plt+0x60f8>  // b.any
  408ae0:	cmp	x12, x13
  408ae4:	b.eq	408914 <feof@plt+0x5f44>  // b.none
  408ae8:	ldr	x11, [x8], #8
  408aec:	subs	w10, w10, #0x1
  408af0:	str	x11, [x9], #8
  408af4:	b.ne	408ae8 <feof@plt+0x6118>  // b.any
  408af8:	b	408914 <feof@plt+0x5f44>
  408afc:	cbz	w9, 409068 <feof@plt+0x6698>
  408b00:	mov	x8, xzr
  408b04:	add	x9, x26, #0x14
  408b08:	add	x10, x8, #0x1
  408b0c:	cbz	x26, 408b20 <feof@plt+0x6150>
  408b10:	ldr	w11, [x26, #4]
  408b14:	cmp	x10, w11, uxtw
  408b18:	b.cc	408b2c <feof@plt+0x615c>  // b.lo, b.ul, b.last
  408b1c:	b	408b7c <feof@plt+0x61ac>
  408b20:	mov	w11, wzr
  408b24:	cmp	x10, w11, uxtw
  408b28:	b.cs	408b7c <feof@plt+0x61ac>  // b.hs, b.nlast
  408b2c:	add	x10, x26, w8, uxtw #3
  408b30:	ldp	w12, w10, [x10, #8]
  408b34:	cmp	w12, w10
  408b38:	b.hi	408fd8 <feof@plt+0x6608>  // b.pmore
  408b3c:	ldp	w11, w13, [x9, #-4]
  408b40:	cmp	w11, w13
  408b44:	b.hi	409008 <feof@plt+0x6638>  // b.pmore
  408b48:	cmp	w12, w11
  408b4c:	b.cs	409020 <feof@plt+0x6650>  // b.hs, b.nlast
  408b50:	add	w10, w10, #0x1
  408b54:	add	x9, x9, #0x8
  408b58:	cmp	w10, w11
  408b5c:	add	x8, x8, #0x1
  408b60:	b.cc	408b08 <feof@plt+0x6138>  // b.lo, b.ul, b.last
  408b64:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  408b68:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  408b6c:	add	x0, x0, #0xd22
  408b70:	add	x2, x2, #0xd4b
  408b74:	mov	w1, #0x4d8                 	// #1240
  408b78:	bl	404ac4 <feof@plt+0x20f4>
  408b7c:	ldr	w8, [x21]
  408b80:	tbnz	w8, #31, 408b90 <feof@plt+0x61c0>
  408b84:	mov	x0, x21
  408b88:	bl	4024c0 <free@plt>
  408b8c:	b	408b94 <feof@plt+0x61c4>
  408b90:	str	wzr, [x21, #4]
  408b94:	ldr	x8, [x19, #136]
  408b98:	ldr	x21, [sp, #8]
  408b9c:	cbz	x8, 409050 <feof@plt+0x6680>
  408ba0:	ldr	w9, [x8, #4]
  408ba4:	cbz	w9, 409050 <feof@plt+0x6680>
  408ba8:	sub	w9, w9, #0x1
  408bac:	add	x8, x8, w9, uxtw #3
  408bb0:	ldr	w8, [x8, #12]
  408bb4:	bic	w0, w8, w8, asr #31
  408bb8:	bl	405c14 <feof@plt+0x3244>
  408bbc:	ldr	x8, [x19, #136]
  408bc0:	str	w0, [x19, #144]
  408bc4:	cbz	x8, 408be4 <feof@plt+0x6214>
  408bc8:	ldr	w8, [x8, #4]
  408bcc:	cmp	w8, #0x2
  408bd0:	b.cc	408be4 <feof@plt+0x6214>  // b.lo, b.ul, b.last
  408bd4:	cmp	w0, #0x3
  408bd8:	mov	w8, #0x3                   	// #3
  408bdc:	csel	w0, w0, w8, gt
  408be0:	str	w0, [x19, #144]
  408be4:	ldr	w9, [x21, #224]
  408be8:	ldr	x10, [x19]
  408bec:	ldr	x8, [x19, #24]
  408bf0:	ldr	w1, [x19, #32]
  408bf4:	sub	w11, w9, #0x1
  408bf8:	cmp	w0, w9
  408bfc:	csel	w9, w11, w0, lt  // lt = tstop
  408c00:	str	w9, [x19, #144]
  408c04:	ldrsw	x20, [x10, #112]
  408c08:	mov	x0, x8
  408c0c:	bl	412d44 <feof@plt+0x10374>
  408c10:	cbz	x0, 408c6c <feof@plt+0x629c>
  408c14:	ldrsw	x8, [x19, #36]
  408c18:	cmp	x1, x8
  408c1c:	b.cc	408c6c <feof@plt+0x629c>  // b.lo, b.ul, b.last
  408c20:	ldrb	w9, [x19, #114]
  408c24:	cbz	w9, 408c34 <feof@plt+0x6264>
  408c28:	ldrsw	x9, [x19, #144]
  408c2c:	add	x8, x9, x8
  408c30:	add	x8, x8, #0x2
  408c34:	sub	x9, x1, x8
  408c38:	mov	w10, #0xa                   	// #10
  408c3c:	cmp	x9, #0xa
  408c40:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  408c44:	cmp	x1, x20
  408c48:	b.cc	408c64 <feof@plt+0x6294>  // b.lo, b.ul, b.last
  408c4c:	sub	x9, x20, x9
  408c50:	cmp	x8, x9
  408c54:	b.ls	408c64 <feof@plt+0x6294>  // b.plast
  408c58:	sub	w8, w8, w9
  408c5c:	str	w8, [x19, #148]
  408c60:	b	408c68 <feof@plt+0x6298>
  408c64:	ldr	w8, [x19, #148]
  408c68:	tbnz	w8, #31, 409098 <feof@plt+0x66c8>
  408c6c:	ldrb	w8, [x21, #228]
  408c70:	cbz	w8, 408f64 <feof@plt+0x6594>
  408c74:	ldr	w8, [x19, #148]
  408c78:	add	w20, w8, w20
  408c7c:	cmp	w20, #0x64
  408c80:	b.lt	408d94 <feof@plt+0x63c4>  // b.tstop
  408c84:	ldrb	w8, [x19, #114]
  408c88:	cbz	w8, 408cf8 <feof@plt+0x6328>
  408c8c:	ldr	w8, [x19, #144]
  408c90:	cmp	w8, #0x4
  408c94:	b.lt	408cc0 <feof@plt+0x62f0>  // b.tstop
  408c98:	mov	w21, wzr
  408c9c:	ldr	x0, [x19, #8]
  408ca0:	mov	w1, #0x20                  	// #32
  408ca4:	bl	40d5a0 <feof@plt+0xabd0>
  408ca8:	ldr	w8, [x19, #144]
  408cac:	add	w21, w21, #0x1
  408cb0:	sub	w9, w8, #0x3
  408cb4:	cmp	w21, w9
  408cb8:	b.lt	408c9c <feof@plt+0x62cc>  // b.tstop
  408cbc:	b	408cc4 <feof@plt+0x62f4>
  408cc0:	mov	w21, wzr
  408cc4:	ldr	x0, [x19, #8]
  408cc8:	cmp	w21, w8
  408ccc:	b.ge	408cec <feof@plt+0x631c>  // b.tcont
  408cd0:	mov	w1, #0x20                  	// #32
  408cd4:	bl	40d5a0 <feof@plt+0xabd0>
  408cd8:	ldr	w8, [x19, #144]
  408cdc:	ldr	x0, [x19, #8]
  408ce0:	add	w21, w21, #0x1
  408ce4:	cmp	w21, w8
  408ce8:	b.lt	408cd0 <feof@plt+0x6300>  // b.tstop
  408cec:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  408cf0:	add	x1, x1, #0xd6a
  408cf4:	bl	40f384 <feof@plt+0xc9b4>
  408cf8:	ldr	x0, [x19, #8]
  408cfc:	mov	w1, #0x20                  	// #32
  408d00:	bl	40d5a0 <feof@plt+0xabd0>
  408d04:	ldr	w21, [x19, #148]
  408d08:	cmp	w21, w20
  408d0c:	b.ge	408d8c <feof@plt+0x63bc>  // b.tcont
  408d10:	mov	w22, #0xcccd                	// #52429
  408d14:	mov	w23, #0x9998                	// #39320
  408d18:	mov	w24, #0x851f                	// #34079
  408d1c:	mov	w25, #0x6667                	// #26215
  408d20:	movk	w22, #0xcccc, lsl #16
  408d24:	movk	w23, #0x1999, lsl #16
  408d28:	movk	w24, #0x51eb, lsl #16
  408d2c:	movk	w25, #0x6666, lsl #16
  408d30:	mov	w26, #0xa                   	// #10
  408d34:	b	408d48 <feof@plt+0x6378>
  408d38:	mov	w1, #0x20                  	// #32
  408d3c:	bl	40d5a0 <feof@plt+0xabd0>
  408d40:	cmp	w20, w21
  408d44:	b.eq	408d8c <feof@plt+0x63bc>  // b.none
  408d48:	add	w21, w21, #0x1
  408d4c:	ldr	x0, [x19, #8]
  408d50:	madd	w8, w21, w22, w23
  408d54:	ror	w8, w8, #1
  408d58:	cmp	w8, w23
  408d5c:	b.hi	408d38 <feof@plt+0x6368>  // b.pmore
  408d60:	smull	x8, w21, w24
  408d64:	lsr	x9, x8, #63
  408d68:	asr	x8, x8, #37
  408d6c:	add	w8, w8, w9
  408d70:	smull	x9, w8, w25
  408d74:	lsr	x10, x9, #63
  408d78:	asr	x9, x9, #34
  408d7c:	add	w9, w9, w10
  408d80:	msub	w8, w9, w26, w8
  408d84:	add	w1, w8, #0x30
  408d88:	b	408d3c <feof@plt+0x636c>
  408d8c:	ldr	x0, [x19, #8]
  408d90:	bl	40fd08 <feof@plt+0xd338>
  408d94:	ldrb	w8, [x19, #114]
  408d98:	cbz	w8, 408e08 <feof@plt+0x6438>
  408d9c:	ldr	w8, [x19, #144]
  408da0:	cmp	w8, #0x4
  408da4:	b.lt	408dd0 <feof@plt+0x6400>  // b.tstop
  408da8:	mov	w21, wzr
  408dac:	ldr	x0, [x19, #8]
  408db0:	mov	w1, #0x20                  	// #32
  408db4:	bl	40d5a0 <feof@plt+0xabd0>
  408db8:	ldr	w8, [x19, #144]
  408dbc:	add	w21, w21, #0x1
  408dc0:	sub	w9, w8, #0x3
  408dc4:	cmp	w21, w9
  408dc8:	b.lt	408dac <feof@plt+0x63dc>  // b.tstop
  408dcc:	b	408dd4 <feof@plt+0x6404>
  408dd0:	mov	w21, wzr
  408dd4:	ldr	x0, [x19, #8]
  408dd8:	cmp	w21, w8
  408ddc:	b.ge	408dfc <feof@plt+0x642c>  // b.tcont
  408de0:	mov	w1, #0x20                  	// #32
  408de4:	bl	40d5a0 <feof@plt+0xabd0>
  408de8:	ldr	w8, [x19, #144]
  408dec:	ldr	x0, [x19, #8]
  408df0:	add	w21, w21, #0x1
  408df4:	cmp	w21, w8
  408df8:	b.lt	408de0 <feof@plt+0x6410>  // b.tstop
  408dfc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  408e00:	add	x1, x1, #0xd6a
  408e04:	bl	40f384 <feof@plt+0xc9b4>
  408e08:	ldr	x0, [x19, #8]
  408e0c:	mov	w1, #0x20                  	// #32
  408e10:	bl	40d5a0 <feof@plt+0xabd0>
  408e14:	ldr	w8, [x19, #148]
  408e18:	cmp	w8, w20
  408e1c:	b.ge	408e90 <feof@plt+0x64c0>  // b.tcont
  408e20:	mov	w23, #0x6667                	// #26215
  408e24:	add	w21, w8, #0x1
  408e28:	neg	w22, w20
  408e2c:	movk	w23, #0x6666, lsl #16
  408e30:	mov	w24, #0xa                   	// #10
  408e34:	b	408e64 <feof@plt+0x6494>
  408e38:	smull	x9, w8, w23
  408e3c:	lsr	x10, x9, #63
  408e40:	asr	x9, x9, #34
  408e44:	add	w9, w9, w10
  408e48:	msub	w8, w9, w24, w8
  408e4c:	add	w1, w8, #0x30
  408e50:	bl	40d5a0 <feof@plt+0xabd0>
  408e54:	add	w21, w21, #0x1
  408e58:	add	w8, w22, w21
  408e5c:	cmp	w8, #0x1
  408e60:	b.eq	408e90 <feof@plt+0x64c0>  // b.none
  408e64:	smull	x8, w21, w23
  408e68:	lsr	x9, x8, #63
  408e6c:	asr	x8, x8, #34
  408e70:	add	w8, w8, w9
  408e74:	ldr	x0, [x19, #8]
  408e78:	add	w9, w8, w8, lsl #2
  408e7c:	lsl	w9, w9, #1
  408e80:	cmp	w9, w21
  408e84:	b.eq	408e38 <feof@plt+0x6468>  // b.none
  408e88:	mov	w1, #0x20                  	// #32
  408e8c:	b	408e50 <feof@plt+0x6480>
  408e90:	ldr	x0, [x19, #8]
  408e94:	bl	40fd08 <feof@plt+0xd338>
  408e98:	ldrb	w8, [x19, #114]
  408e9c:	cbz	w8, 408f0c <feof@plt+0x653c>
  408ea0:	ldr	w8, [x19, #144]
  408ea4:	cmp	w8, #0x4
  408ea8:	b.lt	408ed4 <feof@plt+0x6504>  // b.tstop
  408eac:	mov	w21, wzr
  408eb0:	ldr	x0, [x19, #8]
  408eb4:	mov	w1, #0x20                  	// #32
  408eb8:	bl	40d5a0 <feof@plt+0xabd0>
  408ebc:	ldr	w8, [x19, #144]
  408ec0:	add	w21, w21, #0x1
  408ec4:	sub	w9, w8, #0x3
  408ec8:	cmp	w21, w9
  408ecc:	b.lt	408eb0 <feof@plt+0x64e0>  // b.tstop
  408ed0:	b	408ed8 <feof@plt+0x6508>
  408ed4:	mov	w21, wzr
  408ed8:	ldr	x0, [x19, #8]
  408edc:	cmp	w21, w8
  408ee0:	b.ge	408f00 <feof@plt+0x6530>  // b.tcont
  408ee4:	mov	w1, #0x20                  	// #32
  408ee8:	bl	40d5a0 <feof@plt+0xabd0>
  408eec:	ldr	w8, [x19, #144]
  408ef0:	ldr	x0, [x19, #8]
  408ef4:	add	w21, w21, #0x1
  408ef8:	cmp	w21, w8
  408efc:	b.lt	408ee4 <feof@plt+0x6514>  // b.tstop
  408f00:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  408f04:	add	x1, x1, #0xd6a
  408f08:	bl	40f384 <feof@plt+0xc9b4>
  408f0c:	ldr	x0, [x19, #8]
  408f10:	mov	w1, #0x20                  	// #32
  408f14:	bl	40d5a0 <feof@plt+0xabd0>
  408f18:	ldr	w21, [x19, #148]
  408f1c:	ldr	x0, [x19, #8]
  408f20:	cmp	w21, w20
  408f24:	b.ge	408f60 <feof@plt+0x6590>  // b.tcont
  408f28:	mov	w22, #0x6667                	// #26215
  408f2c:	movk	w22, #0x6666, lsl #16
  408f30:	mov	w23, #0xa                   	// #10
  408f34:	add	w21, w21, #0x1
  408f38:	smull	x8, w21, w22
  408f3c:	lsr	x9, x8, #63
  408f40:	asr	x8, x8, #34
  408f44:	add	w8, w8, w9
  408f48:	msub	w8, w8, w23, w21
  408f4c:	add	w1, w8, #0x30
  408f50:	bl	40d5a0 <feof@plt+0xabd0>
  408f54:	ldr	x0, [x19, #8]
  408f58:	cmp	w20, w21
  408f5c:	b.ne	408f34 <feof@plt+0x6564>  // b.any
  408f60:	bl	40fd08 <feof@plt+0xd338>
  408f64:	ldp	x20, x19, [sp, #128]
  408f68:	ldp	x22, x21, [sp, #112]
  408f6c:	ldp	x24, x23, [sp, #96]
  408f70:	ldp	x26, x25, [sp, #80]
  408f74:	ldp	x28, x27, [sp, #64]
  408f78:	ldp	x29, x30, [sp, #48]
  408f7c:	add	sp, sp, #0x90
  408f80:	ret
  408f84:	mov	w25, wzr
  408f88:	mov	w26, wzr
  408f8c:	b	408828 <feof@plt+0x5e58>
  408f90:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  408f94:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  408f98:	add	x0, x0, #0xd22
  408f9c:	add	x2, x2, #0xd4b
  408fa0:	mov	w1, #0x4a4                 	// #1188
  408fa4:	bl	404ac4 <feof@plt+0x20f4>
  408fa8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  408fac:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  408fb0:	add	x0, x0, #0xd22
  408fb4:	add	x2, x2, #0xd4b
  408fb8:	mov	w1, #0x4ad                 	// #1197
  408fbc:	bl	404ac4 <feof@plt+0x20f4>
  408fc0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  408fc4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  408fc8:	add	x0, x0, #0xd22
  408fcc:	add	x2, x2, #0xd4b
  408fd0:	mov	w1, #0x4bc                 	// #1212
  408fd4:	bl	404ac4 <feof@plt+0x20f4>
  408fd8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  408fdc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  408fe0:	add	x0, x0, #0xd22
  408fe4:	add	x2, x2, #0xd4b
  408fe8:	mov	w1, #0x4d3                 	// #1235
  408fec:	bl	404ac4 <feof@plt+0x20f4>
  408ff0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  408ff4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  408ff8:	add	x0, x0, #0xd22
  408ffc:	add	x2, x2, #0xd60
  409000:	mov	w1, #0xa5                  	// #165
  409004:	bl	404ac4 <feof@plt+0x20f4>
  409008:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40900c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  409010:	add	x0, x0, #0xd22
  409014:	add	x2, x2, #0xd4b
  409018:	mov	w1, #0x4d4                 	// #1236
  40901c:	bl	404ac4 <feof@plt+0x20f4>
  409020:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  409024:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  409028:	add	x0, x0, #0xd22
  40902c:	add	x2, x2, #0xd4b
  409030:	mov	w1, #0x4d6                 	// #1238
  409034:	bl	404ac4 <feof@plt+0x20f4>
  409038:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40903c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  409040:	add	x0, x0, #0xd22
  409044:	add	x2, x2, #0xd4b
  409048:	mov	w1, #0x4b6                 	// #1206
  40904c:	bl	404ac4 <feof@plt+0x20f4>
  409050:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  409054:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  409058:	add	x0, x0, #0xd22
  40905c:	add	x2, x2, #0xd44
  409060:	mov	w1, #0x36a                 	// #874
  409064:	bl	404ac4 <feof@plt+0x20f4>
  409068:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40906c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  409070:	add	x0, x0, #0xd22
  409074:	add	x2, x2, #0xd4b
  409078:	mov	w1, #0x4cd                 	// #1229
  40907c:	bl	404ac4 <feof@plt+0x20f4>
  409080:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  409084:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  409088:	add	x0, x0, #0xd22
  40908c:	add	x2, x2, #0xd4b
  409090:	mov	w1, #0x49b                 	// #1179
  409094:	bl	404ac4 <feof@plt+0x20f4>
  409098:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40909c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4090a0:	add	x0, x0, #0xd22
  4090a4:	add	x2, x2, #0xd44
  4090a8:	mov	w1, #0x386                 	// #902
  4090ac:	bl	404ac4 <feof@plt+0x20f4>
  4090b0:	sub	sp, sp, #0xf0
  4090b4:	stp	x29, x30, [sp, #144]
  4090b8:	stp	x28, x27, [sp, #160]
  4090bc:	stp	x26, x25, [sp, #176]
  4090c0:	stp	x24, x23, [sp, #192]
  4090c4:	stp	x22, x21, [sp, #208]
  4090c8:	stp	x20, x19, [sp, #224]
  4090cc:	add	x29, sp, #0x90
  4090d0:	cbz	x1, 4094a0 <feof@plt+0x6ad0>
  4090d4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4090d8:	mov	x21, x1
  4090dc:	mov	x20, x0
  4090e0:	ldr	x0, [x8, #1880]
  4090e4:	ldr	w1, [x1]
  4090e8:	mov	w22, w3
  4090ec:	mov	w19, w2
  4090f0:	bl	429d18 <feof@plt+0x27348>
  4090f4:	sub	x8, x29, #0x20
  4090f8:	mov	w1, #0x1                   	// #1
  4090fc:	mov	x24, x0
  409100:	lsr	x23, x0, #32
  409104:	bl	4132a8 <feof@plt+0x108d8>
  409108:	sub	x8, x29, #0x40
  40910c:	mov	w1, #0x2                   	// #2
  409110:	mov	w0, w23
  409114:	bl	4132a8 <feof@plt+0x108d8>
  409118:	ldr	w0, [x21]
  40911c:	add	x8, sp, #0x30
  409120:	mov	w1, wzr
  409124:	bl	4132a8 <feof@plt+0x108d8>
  409128:	ldur	x8, [x29, #-32]
  40912c:	ldr	x9, [x20, #24]
  409130:	mov	w0, wzr
  409134:	cmp	x8, x9
  409138:	b.ne	40914c <feof@plt+0x677c>  // b.any
  40913c:	ldur	x9, [x29, #-64]
  409140:	cmp	x9, x8
  409144:	b.eq	40916c <feof@plt+0x679c>  // b.none
  409148:	mov	w0, wzr
  40914c:	ldp	x20, x19, [sp, #224]
  409150:	ldp	x22, x21, [sp, #208]
  409154:	ldp	x24, x23, [sp, #192]
  409158:	ldp	x26, x25, [sp, #176]
  40915c:	ldp	x28, x27, [sp, #160]
  409160:	ldp	x29, x30, [sp, #144]
  409164:	add	sp, sp, #0xf0
  409168:	ret
  40916c:	ldr	w10, [x21, #4]
  409170:	cbz	w10, 40923c <feof@plt+0x686c>
  409174:	ldr	x8, [x20, #120]
  409178:	cbz	x8, 40919c <feof@plt+0x67cc>
  40917c:	ldr	w8, [x8, #4]
  409180:	cbz	w8, 40919c <feof@plt+0x67cc>
  409184:	cbnz	w10, 40919c <feof@plt+0x67cc>
  409188:	ldr	w0, [x21]
  40918c:	ldr	w1, [x20, #16]
  409190:	bl	40aec4 <feof@plt+0x84f4>
  409194:	tbz	w0, #0, 409148 <feof@plt+0x6778>
  409198:	ldr	w10, [x21, #4]
  40919c:	ldr	x8, [x21, #8]
  4091a0:	ldur	w9, [x29, #-24]
  4091a4:	ldp	w16, w14, [sp, #56]
  4091a8:	str	w10, [sp, #36]
  4091ac:	str	x8, [sp, #40]
  4091b0:	ldur	w8, [x29, #-56]
  4091b4:	cmp	w9, w8
  4091b8:	b.gt	409218 <feof@plt+0x6848>
  4091bc:	mov	w26, w8
  4091c0:	ldur	w8, [x29, #-20]
  4091c4:	ldr	w1, [x20, #16]
  4091c8:	ldur	w28, [x29, #-52]
  4091cc:	mov	w0, w24
  4091d0:	mov	w27, w9
  4091d4:	str	x8, [sp, #24]
  4091d8:	mov	x24, x14
  4091dc:	mov	x25, x16
  4091e0:	bl	40aec4 <feof@plt+0x84f4>
  4091e4:	mov	x16, x25
  4091e8:	mov	x14, x24
  4091ec:	tbz	w0, #0, 409218 <feof@plt+0x6848>
  4091f0:	ldr	w1, [x20, #16]
  4091f4:	mov	w0, w23
  4091f8:	bl	40aec4 <feof@plt+0x84f4>
  4091fc:	mov	x16, x25
  409200:	mov	x14, x24
  409204:	tbz	w0, #0, 409218 <feof@plt+0x6848>
  409208:	mov	x15, x28
  40920c:	ldr	x28, [sp, #24]
  409210:	mov	w25, w27
  409214:	b	40925c <feof@plt+0x688c>
  409218:	ldr	x8, [x20, #120]
  40921c:	cbz	x8, 40924c <feof@plt+0x687c>
  409220:	ldr	w8, [x8, #4]
  409224:	mov	w26, w16
  409228:	mov	w15, w14
  40922c:	mov	w25, w16
  409230:	mov	w28, w14
  409234:	cbnz	w8, 409148 <feof@plt+0x6778>
  409238:	b	40925c <feof@plt+0x688c>
  40923c:	ldr	x9, [sp, #48]
  409240:	cmp	x9, x8
  409244:	b.ne	409148 <feof@plt+0x6778>  // b.any
  409248:	b	409174 <feof@plt+0x67a4>
  40924c:	mov	w26, w16
  409250:	mov	w15, w14
  409254:	mov	w25, w16
  409258:	mov	w28, w14
  40925c:	tbz	w22, #0, 409304 <feof@plt+0x6934>
  409260:	ldr	x8, [x20, #136]
  409264:	ldur	w10, [x29, #-24]
  409268:	mov	x9, xzr
  40926c:	add	x11, x8, #0xc
  409270:	b	40927c <feof@plt+0x68ac>
  409274:	add	x9, x9, #0x1
  409278:	add	x11, x11, #0x8
  40927c:	cbz	x8, 409290 <feof@plt+0x68c0>
  409280:	ldr	w12, [x8, #4]
  409284:	cmp	x9, w12, sxtw
  409288:	b.lt	40929c <feof@plt+0x68cc>  // b.tstop
  40928c:	b	409148 <feof@plt+0x6778>
  409290:	mov	w12, wzr
  409294:	cmp	x9, w12, sxtw
  409298:	b.ge	409148 <feof@plt+0x6778>  // b.tcont
  40929c:	ldur	w12, [x11, #-4]
  4092a0:	cmp	w12, w10
  4092a4:	b.hi	409274 <feof@plt+0x68a4>  // b.pmore
  4092a8:	ldr	w12, [x11]
  4092ac:	cmp	w12, w10
  4092b0:	b.cc	409274 <feof@plt+0x68a4>  // b.lo, b.ul, b.last
  4092b4:	ldrsw	x9, [x8, #4]
  4092b8:	cmp	w9, #0x1
  4092bc:	b.lt	409148 <feof@plt+0x6778>  // b.tstop
  4092c0:	ldur	w11, [x29, #-56]
  4092c4:	mov	x10, xzr
  4092c8:	add	x12, x8, #0xc
  4092cc:	b	4092e4 <feof@plt+0x6914>
  4092d0:	add	x10, x10, #0x1
  4092d4:	mov	w0, wzr
  4092d8:	cmp	x10, x9
  4092dc:	add	x12, x12, #0x8
  4092e0:	b.ge	40914c <feof@plt+0x677c>  // b.tcont
  4092e4:	ldur	w13, [x12, #-4]
  4092e8:	cmp	w13, w11
  4092ec:	b.hi	4092d0 <feof@plt+0x6900>  // b.pmore
  4092f0:	ldr	w13, [x12]
  4092f4:	cmp	w13, w11
  4092f8:	b.cc	4092d0 <feof@plt+0x6900>  // b.lo, b.ul, b.last
  4092fc:	ldr	w10, [x21, #4]
  409300:	cbz	w10, 409460 <feof@plt+0x6a90>
  409304:	ldr	x22, [x20, #120]
  409308:	cbz	x22, 409358 <feof@plt+0x6988>
  40930c:	ldp	w8, w9, [x22]
  409310:	and	w0, w8, #0x7fffffff
  409314:	cmp	w0, w9
  409318:	b.ne	409400 <feof@plt+0x6a30>  // b.any
  40931c:	mov	x27, x16
  409320:	stp	x14, x15, [sp, #16]
  409324:	tbnz	w8, #31, 409370 <feof@plt+0x69a0>
  409328:	add	w1, w0, #0x1
  40932c:	bl	411298 <feof@plt+0xe8c8>
  409330:	mov	w21, w0
  409334:	ldr	x0, [x20, #120]
  409338:	mov	w8, #0x28                  	// #40
  40933c:	umull	x8, w21, w8
  409340:	add	x1, x8, #0x8
  409344:	cbz	x0, 409450 <feof@plt+0x6a80>
  409348:	ldr	w23, [x0, #4]
  40934c:	mov	w24, wzr
  409350:	str	wzr, [sp, #12]
  409354:	b	4093a4 <feof@plt+0x69d4>
  409358:	mov	x27, x16
  40935c:	stp	x14, x15, [sp, #16]
  409360:	str	wzr, [sp, #12]
  409364:	mov	w24, wzr
  409368:	mov	w21, #0x4                   	// #4
  40936c:	b	409390 <feof@plt+0x69c0>
  409370:	str	xzr, [x20, #120]
  409374:	ldr	w10, [x22, #4]
  409378:	mov	w8, #0x4                   	// #4
  40937c:	mov	w24, #0x1                   	// #1
  409380:	add	w9, w10, #0x1
  409384:	cmp	w9, #0x4
  409388:	csinc	w21, w8, w10, ls  // ls = plast
  40938c:	str	w10, [sp, #12]
  409390:	mov	w8, #0x28                  	// #40
  409394:	umull	x8, w21, w8
  409398:	mov	x0, xzr
  40939c:	mov	w23, wzr
  4093a0:	add	x1, x8, #0x8
  4093a4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4093a8:	and	w8, w21, #0x7fffffff
  4093ac:	str	x0, [x20, #120]
  4093b0:	stp	w8, w23, [x0]
  4093b4:	ldp	x14, x15, [sp, #16]
  4093b8:	mov	x16, x27
  4093bc:	cbz	w24, 409400 <feof@plt+0x6a30>
  4093c0:	ldr	x9, [x20, #120]
  4093c4:	ldr	w12, [sp, #12]
  4093c8:	cbz	w12, 4093fc <feof@plt+0x6a2c>
  4093cc:	add	x8, x22, #0x8
  4093d0:	add	x9, x9, #0x8
  4093d4:	mov	w10, w12
  4093d8:	ldr	x11, [x8, #32]
  4093dc:	ldp	q1, q0, [x8]
  4093e0:	subs	w10, w10, #0x1
  4093e4:	add	x8, x8, #0x28
  4093e8:	str	x11, [x9, #32]
  4093ec:	stp	q1, q0, [x9]
  4093f0:	add	x9, x9, #0x28
  4093f4:	b.ne	4093d8 <feof@plt+0x6a08>  // b.any
  4093f8:	ldr	x9, [x20, #120]
  4093fc:	str	w12, [x9, #4]
  409400:	ldr	x8, [x20, #120]
  409404:	mov	w9, #0x28                  	// #40
  409408:	mov	w10, w25
  40940c:	mov	w11, w26
  409410:	ldr	w12, [x8, #4]
  409414:	bfi	x10, x28, #32, #32
  409418:	bfi	x11, x15, #32, #32
  40941c:	bfi	x16, x14, #32, #32
  409420:	add	w13, w12, #0x1
  409424:	madd	x9, x12, x9, x8
  409428:	str	w13, [x8, #4]
  40942c:	stp	x10, x11, [x9, #8]
  409430:	ldr	w8, [sp, #36]
  409434:	mov	w0, #0x1                   	// #1
  409438:	stur	x16, [x9, #28]
  40943c:	str	w19, [x9, #36]
  409440:	str	w8, [x9, #24]
  409444:	ldr	x8, [sp, #40]
  409448:	str	x8, [x9, #40]
  40944c:	b	40914c <feof@plt+0x677c>
  409450:	str	wzr, [sp, #12]
  409454:	mov	w24, wzr
  409458:	mov	w23, wzr
  40945c:	b	4093a4 <feof@plt+0x69d4>
  409460:	ldr	w11, [sp, #56]
  409464:	mov	x10, xzr
  409468:	add	x8, x8, #0xc
  40946c:	b	409484 <feof@plt+0x6ab4>
  409470:	add	x10, x10, #0x1
  409474:	mov	w0, wzr
  409478:	cmp	x10, x9
  40947c:	add	x8, x8, #0x8
  409480:	b.ge	40914c <feof@plt+0x677c>  // b.tcont
  409484:	ldur	w12, [x8, #-4]
  409488:	cmp	w12, w11
  40948c:	b.hi	409470 <feof@plt+0x6aa0>  // b.pmore
  409490:	ldr	w12, [x8]
  409494:	cmp	w12, w11
  409498:	b.cc	409470 <feof@plt+0x6aa0>  // b.lo, b.ul, b.last
  40949c:	b	409304 <feof@plt+0x6934>
  4094a0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4094a4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4094a8:	add	x0, x0, #0xd22
  4094ac:	add	x2, x2, #0xd6d
  4094b0:	mov	w1, #0x39f                 	// #927
  4094b4:	bl	404ac4 <feof@plt+0x20f4>
  4094b8:	sub	sp, sp, #0x1b0
  4094bc:	stp	x29, x30, [sp, #336]
  4094c0:	stp	x28, x27, [sp, #352]
  4094c4:	stp	x26, x25, [sp, #368]
  4094c8:	stp	x24, x23, [sp, #384]
  4094cc:	stp	x22, x21, [sp, #400]
  4094d0:	stp	x20, x19, [sp, #416]
  4094d4:	add	x29, sp, #0x150
  4094d8:	mov	x23, x0
  4094dc:	ldr	x0, [x0]
  4094e0:	mov	w20, w2
  4094e4:	mov	x21, x1
  4094e8:	bl	40fd08 <feof@plt+0xd338>
  4094ec:	mov	x0, x21
  4094f0:	mov	w1, wzr
  4094f4:	bl	42c128 <feof@plt+0x29758>
  4094f8:	cmp	w0, #0x2
  4094fc:	b.cc	40ac68 <feof@plt+0x8298>  // b.lo, b.ul, b.last
  409500:	ldrb	w8, [x23, #108]
  409504:	cbz	w8, 40ac68 <feof@plt+0x8298>
  409508:	ldr	w8, [x23, #200]
  40950c:	cmp	w0, w8
  409510:	b.ne	40951c <feof@plt+0x6b4c>  // b.any
  409514:	ldr	w8, [x21, #120]
  409518:	cbz	w8, 40ac68 <feof@plt+0x8298>
  40951c:	ldr	x8, [x23]
  409520:	str	w0, [x23, #200]
  409524:	mov	x0, x8
  409528:	bl	40f878 <feof@plt+0xcea8>
  40952c:	ldr	x8, [x23]
  409530:	str	x0, [sp]
  409534:	mov	x1, xzr
  409538:	mov	x0, x8
  40953c:	bl	40f800 <feof@plt+0xce30>
  409540:	add	x0, sp, #0x88
  409544:	mov	x1, x23
  409548:	mov	x2, x21
  40954c:	mov	w3, w20
  409550:	add	x19, sp, #0x88
  409554:	bl	407f38 <feof@plt+0x5568>
  409558:	mov	x24, xzr
  40955c:	add	x8, x19, #0x18
  409560:	add	x25, x19, #0x38
  409564:	stp	x8, x23, [sp, #8]
  409568:	b	409574 <feof@plt+0x6ba4>
  40956c:	ldp	x23, x24, [sp, #16]
  409570:	add	x24, x24, #0x1
  409574:	ldr	x19, [sp, #272]
  409578:	cbz	x19, 40958c <feof@plt+0x6bbc>
  40957c:	ldr	w8, [x19, #4]
  409580:	cmp	x24, w8, sxtw
  409584:	b.lt	409598 <feof@plt+0x6bc8>  // b.tstop
  409588:	b	40abd8 <feof@plt+0x8208>
  40958c:	mov	w8, wzr
  409590:	cmp	x24, w8, sxtw
  409594:	b.ge	40abd8 <feof@plt+0x8208>  // b.tcont
  409598:	ldrb	w8, [x23, #223]
  40959c:	add	x9, x19, x24, lsl #3
  4095a0:	add	x20, x9, #0x8
  4095a4:	cbz	w8, 4095e8 <feof@plt+0x6c18>
  4095a8:	cbz	x24, 409718 <feof@plt+0x6d48>
  4095ac:	ldrb	w8, [sp, #250]
  4095b0:	cbz	w8, 40ae50 <feof@plt+0x8480>
  4095b4:	ldr	w8, [sp, #280]
  4095b8:	ldr	x0, [sp, #144]
  4095bc:	tbnz	w8, #31, 4095e0 <feof@plt+0x6c10>
  4095c0:	mov	w21, #0xffffffff            	// #-1
  4095c4:	mov	w1, #0x2e                  	// #46
  4095c8:	bl	40d5a0 <feof@plt+0xabd0>
  4095cc:	ldr	w8, [sp, #280]
  4095d0:	ldr	x0, [sp, #144]
  4095d4:	add	w21, w21, #0x1
  4095d8:	cmp	w21, w8
  4095dc:	b.lt	4095c4 <feof@plt+0x6bf4>  // b.tstop
  4095e0:	bl	40fd08 <feof@plt+0xd338>
  4095e4:	b	409718 <feof@plt+0x6d48>
  4095e8:	ldr	w9, [sp, #168]
  4095ec:	cbnz	x24, 4095fc <feof@plt+0x6c2c>
  4095f0:	ldr	w8, [x19, #12]
  4095f4:	cmp	w9, w8
  4095f8:	b.le	409718 <feof@plt+0x6d48>
  4095fc:	ldr	w8, [x20]
  409600:	cmp	w8, w9
  409604:	b.hi	409618 <feof@plt+0x6c48>  // b.pmore
  409608:	add	x10, x19, x24, lsl #3
  40960c:	ldr	w10, [x10, #12]
  409610:	cmp	w10, w9
  409614:	b.cs	4096f4 <feof@plt+0x6d24>  // b.hs, b.nlast
  409618:	ldr	x11, [sp, #256]
  40961c:	add	x9, x19, x24, lsl #3
  409620:	mov	x10, xzr
  409624:	add	x21, x9, #0xc
  409628:	add	x9, x11, #0x8
  40962c:	b	409638 <feof@plt+0x6c68>
  409630:	add	x10, x10, #0x1
  409634:	add	x9, x9, #0x28
  409638:	cbz	x11, 40964c <feof@plt+0x6c7c>
  40963c:	ldr	w12, [x11, #4]
  409640:	cmp	x10, w12, uxtw
  409644:	b.cc	409658 <feof@plt+0x6c88>  // b.lo, b.ul, b.last
  409648:	b	409690 <feof@plt+0x6cc0>
  40964c:	mov	w12, wzr
  409650:	cmp	x10, w12, uxtw
  409654:	b.cs	409690 <feof@plt+0x6cc0>  // b.hs, b.nlast
  409658:	ldr	w12, [x9]
  40965c:	cmp	w8, w12
  409660:	b.hi	409630 <feof@plt+0x6c60>  // b.pmore
  409664:	ldr	w13, [x21]
  409668:	cmp	w13, w12
  40966c:	b.cc	409630 <feof@plt+0x6c60>  // b.lo, b.ul, b.last
  409670:	ldr	x8, [sp, #8]
  409674:	ldp	q1, q0, [x8]
  409678:	stp	q1, q0, [x29, #-48]
  40967c:	ldr	w8, [x9]
  409680:	stur	w8, [x29, #-40]
  409684:	ldr	w8, [x9, #4]
  409688:	stur	w8, [x29, #-36]
  40968c:	b	409700 <feof@plt+0x6d30>
  409690:	mov	x22, xzr
  409694:	b	40969c <feof@plt+0x6ccc>
  409698:	add	x22, x22, #0x1
  40969c:	ldr	x8, [sp, #264]
  4096a0:	cbz	x8, 4096b4 <feof@plt+0x6ce4>
  4096a4:	ldr	w9, [x8, #4]
  4096a8:	cmp	x22, w9, uxtw
  4096ac:	b.cc	4096c0 <feof@plt+0x6cf0>  // b.lo, b.ul, b.last
  4096b0:	b	40ae20 <feof@plt+0x8450>
  4096b4:	mov	w9, wzr
  4096b8:	cmp	x22, w9, uxtw
  4096bc:	b.cs	40ae20 <feof@plt+0x8450>  // b.hs, b.nlast
  4096c0:	add	x8, x8, x22, lsl #3
  4096c4:	ldr	x8, [x8, #8]
  4096c8:	ldr	w0, [x8]
  4096cc:	sub	x8, x29, #0x30
  4096d0:	bl	413104 <feof@plt+0x10734>
  4096d4:	ldur	w8, [x29, #-40]
  4096d8:	ldr	w9, [x20]
  4096dc:	cmp	w9, w8
  4096e0:	b.hi	409698 <feof@plt+0x6cc8>  // b.pmore
  4096e4:	ldr	w9, [x21]
  4096e8:	cmp	w9, w8
  4096ec:	b.cc	409698 <feof@plt+0x6cc8>  // b.lo, b.ul, b.last
  4096f0:	b	409700 <feof@plt+0x6d30>
  4096f4:	ldr	x8, [sp, #8]
  4096f8:	ldp	q1, q0, [x8]
  4096fc:	stp	q1, q0, [x29, #-48]
  409700:	ldp	q0, q1, [x29, #-48]
  409704:	ldr	x8, [x23, #144]
  409708:	add	x1, sp, #0x60
  40970c:	mov	x0, x23
  409710:	stp	q0, q1, [sp, #96]
  409714:	blr	x8
  409718:	add	x8, x19, x24, lsl #3
  40971c:	ldr	w8, [x8, #12]
  409720:	ldr	w22, [x20]
  409724:	str	x24, [sp, #24]
  409728:	str	x8, [sp, #56]
  40972c:	cmp	w22, w8
  409730:	b.ls	409758 <feof@plt+0x6d88>  // b.plast
  409734:	b	40956c <feof@plt+0x6b9c>
  409738:	ldr	w8, [x24]
  40973c:	tbnz	w8, #31, 409c30 <feof@plt+0x7260>
  409740:	mov	x0, x24
  409744:	bl	4024c0 <free@plt>
  409748:	ldr	x8, [sp, #56]
  40974c:	cmp	x22, x8
  409750:	add	x22, x22, #0x1
  409754:	b.cs	40956c <feof@plt+0x6b9c>  // b.hs, b.nlast
  409758:	ldr	x0, [sp, #160]
  40975c:	mov	w1, w22
  409760:	bl	412d44 <feof@plt+0x10374>
  409764:	cbz	x0, 409748 <feof@plt+0x6d78>
  409768:	mov	x27, x0
  40976c:	mov	x26, x1
  409770:	mov	x19, xzr
  409774:	b	409784 <feof@plt+0x6db4>
  409778:	ldr	x0, [sp, #144]
  40977c:	bl	40fd08 <feof@plt+0xd338>
  409780:	add	x19, x19, #0x1
  409784:	ldr	x8, [sp, #264]
  409788:	cbz	x8, 40979c <feof@plt+0x6dcc>
  40978c:	ldr	w9, [x8, #4]
  409790:	cmp	x19, w9, uxtw
  409794:	b.cc	4097a8 <feof@plt+0x6dd8>  // b.lo, b.ul, b.last
  409798:	b	409918 <feof@plt+0x6f48>
  40979c:	mov	w9, wzr
  4097a0:	cmp	x19, w9, uxtw
  4097a4:	b.cs	409918 <feof@plt+0x6f48>  // b.hs, b.nlast
  4097a8:	add	x8, x8, x19, lsl #3
  4097ac:	ldr	x20, [x8, #8]
  4097b0:	mov	x0, x20
  4097b4:	bl	42d1ac <feof@plt+0x2a7dc>
  4097b8:	tbz	w0, #0, 409780 <feof@plt+0x6db0>
  4097bc:	ldp	w8, w9, [x20]
  4097c0:	cmp	w8, w9
  4097c4:	b.ne	40acb8 <feof@plt+0x82e8>  // b.any
  4097c8:	ldr	x1, [sp, #160]
  4097cc:	mov	x0, x20
  4097d0:	mov	w2, w22
  4097d4:	bl	42d29c <feof@plt+0x2a8cc>
  4097d8:	tbz	w0, #0, 409780 <feof@plt+0x6db0>
  4097dc:	ldr	w8, [sp, #204]
  4097e0:	cmn	w8, #0x1
  4097e4:	b.eq	409800 <feof@plt+0x6e30>  // b.none
  4097e8:	ldr	x8, [sp, #192]
  4097ec:	ldr	x1, [sp, #240]
  4097f0:	ldr	x0, [x8]
  4097f4:	bl	40f384 <feof@plt+0xc9b4>
  4097f8:	mov	w8, #0xffffffff            	// #-1
  4097fc:	str	w8, [sp, #204]
  409800:	ldrb	w8, [sp, #250]
  409804:	cbz	w8, 409874 <feof@plt+0x6ea4>
  409808:	ldr	w8, [sp, #280]
  40980c:	cmp	w8, #0x4
  409810:	b.lt	40983c <feof@plt+0x6e6c>  // b.tstop
  409814:	mov	w21, wzr
  409818:	ldr	x0, [sp, #144]
  40981c:	mov	w1, #0x20                  	// #32
  409820:	bl	40d5a0 <feof@plt+0xabd0>
  409824:	ldr	w8, [sp, #280]
  409828:	add	w21, w21, #0x1
  40982c:	sub	w9, w8, #0x3
  409830:	cmp	w21, w9
  409834:	b.lt	409818 <feof@plt+0x6e48>  // b.tstop
  409838:	b	409840 <feof@plt+0x6e70>
  40983c:	mov	w21, wzr
  409840:	ldr	x0, [sp, #144]
  409844:	cmp	w21, w8
  409848:	b.ge	409868 <feof@plt+0x6e98>  // b.tcont
  40984c:	mov	w1, #0x2b                  	// #43
  409850:	bl	40d5a0 <feof@plt+0xabd0>
  409854:	ldr	w8, [sp, #280]
  409858:	ldr	x0, [sp, #144]
  40985c:	add	w21, w21, #0x1
  409860:	cmp	w21, w8
  409864:	b.lt	40984c <feof@plt+0x6e7c>  // b.tstop
  409868:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40986c:	add	x1, x1, #0xd6a
  409870:	bl	40f384 <feof@plt+0xc9b4>
  409874:	ldr	x0, [sp, #144]
  409878:	mov	w1, #0x2b                  	// #43
  40987c:	bl	40d5a0 <feof@plt+0xabd0>
  409880:	ldr	w8, [sp, #204]
  409884:	cmn	w8, #0x2
  409888:	b.eq	4098bc <feof@plt+0x6eec>  // b.none
  40988c:	cmn	w8, #0x1
  409890:	b.eq	4098a4 <feof@plt+0x6ed4>  // b.none
  409894:	ldr	x8, [sp, #192]
  409898:	ldr	x1, [sp, #240]
  40989c:	ldr	x0, [x8]
  4098a0:	bl	40f384 <feof@plt+0xc9b4>
  4098a4:	ldr	x8, [sp, #192]
  4098a8:	mov	w9, #0xfffffffe            	// #-2
  4098ac:	str	w9, [sp, #204]
  4098b0:	ldr	x1, [sp, #224]
  4098b4:	ldr	x0, [x8]
  4098b8:	bl	40f384 <feof@plt+0xc9b4>
  4098bc:	ldr	x8, [x20, #16]
  4098c0:	cmp	x8, #0x1
  4098c4:	b.eq	4098f0 <feof@plt+0x6f20>  // b.none
  4098c8:	mov	x21, xzr
  4098cc:	ldr	x8, [x20, #8]
  4098d0:	ldr	x0, [sp, #144]
  4098d4:	ldrb	w1, [x8, x21]
  4098d8:	bl	40d5a0 <feof@plt+0xabd0>
  4098dc:	ldr	x8, [x20, #16]
  4098e0:	add	x21, x21, #0x1
  4098e4:	sub	x8, x8, #0x1
  4098e8:	cmp	x21, x8
  4098ec:	b.cc	4098cc <feof@plt+0x6efc>  // b.lo, b.ul, b.last
  4098f0:	ldr	w8, [sp, #204]
  4098f4:	cmn	w8, #0x1
  4098f8:	b.eq	409778 <feof@plt+0x6da8>  // b.none
  4098fc:	ldr	x8, [sp, #192]
  409900:	ldr	x1, [sp, #240]
  409904:	ldr	x0, [x8]
  409908:	bl	40f384 <feof@plt+0xc9b4>
  40990c:	mov	w8, #0xffffffff            	// #-1
  409910:	str	w8, [sp, #204]
  409914:	b	409778 <feof@plt+0x6da8>
  409918:	ldr	w8, [sp, #204]
  40991c:	cmn	w8, #0x1
  409920:	b.eq	40993c <feof@plt+0x6f6c>  // b.none
  409924:	ldr	x8, [sp, #192]
  409928:	ldr	x1, [sp, #240]
  40992c:	ldr	x0, [x8]
  409930:	bl	40f384 <feof@plt+0xc9b4>
  409934:	mov	w8, #0xffffffff            	// #-1
  409938:	str	w8, [sp, #204]
  40993c:	mov	x11, #0x2200                	// #8704
  409940:	cmp	w26, #0x1
  409944:	mov	w23, w26
  409948:	movk	x11, #0x1, lsl #32
  40994c:	b.lt	409984 <feof@plt+0x6fb4>  // b.tstop
  409950:	and	x23, x26, #0xffffffff
  409954:	sub	x8, x27, #0x1
  409958:	ldrb	w9, [x8, x23]
  40995c:	cmp	w9, #0x20
  409960:	b.hi	409988 <feof@plt+0x6fb8>  // b.pmore
  409964:	mov	w10, #0x1                   	// #1
  409968:	lsl	x9, x10, x9
  40996c:	tst	x9, x11
  409970:	b.eq	409988 <feof@plt+0x6fb8>  // b.none
  409974:	sub	x23, x23, #0x1
  409978:	add	x9, x23, #0x1
  40997c:	cmp	x9, #0x1
  409980:	b.gt	409958 <feof@plt+0x6f88>
  409984:	tbnz	w23, #31, 40ae38 <feof@plt+0x8468>
  409988:	cmp	w23, w26
  40998c:	b.gt	40ae08 <feof@plt+0x8438>
  409990:	cbz	w23, 4099b4 <feof@plt+0x6fe4>
  409994:	add	x8, x27, w23, sxtw
  409998:	ldurb	w8, [x8, #-1]
  40999c:	cmp	w8, #0x20
  4099a0:	b.hi	4099b4 <feof@plt+0x6fe4>  // b.pmore
  4099a4:	mov	w9, #0x1                   	// #1
  4099a8:	lsl	x8, x9, x8
  4099ac:	tst	x8, x11
  4099b0:	b.ne	40adf0 <feof@plt+0x8420>  // b.any
  4099b4:	ldrb	w8, [sp, #250]
  4099b8:	ldrsw	x21, [sp, #284]
  4099bc:	cbz	w8, 409a1c <feof@plt+0x704c>
  4099c0:	mov	w0, w22
  4099c4:	bl	405c14 <feof@plt+0x3244>
  4099c8:	ldr	w9, [sp, #280]
  4099cc:	ldr	x8, [sp, #144]
  4099d0:	cmp	w9, w0
  4099d4:	b.le	409a04 <feof@plt+0x7034>
  4099d8:	mov	w19, w0
  4099dc:	mov	w20, wzr
  4099e0:	mov	w1, #0x20                  	// #32
  4099e4:	mov	x0, x8
  4099e8:	bl	40d5a0 <feof@plt+0xabd0>
  4099ec:	ldr	w9, [sp, #280]
  4099f0:	ldr	x8, [sp, #144]
  4099f4:	add	w20, w20, #0x1
  4099f8:	sub	w9, w9, w19
  4099fc:	cmp	w20, w9
  409a00:	b.lt	4099e0 <feof@plt+0x7010>  // b.tstop
  409a04:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  409a08:	mov	x0, x8
  409a0c:	add	x1, x1, #0xdd9
  409a10:	mov	w2, w22
  409a14:	bl	40fbbc <feof@plt+0xd1ec>
  409a18:	b	409a28 <feof@plt+0x7058>
  409a1c:	ldr	x0, [sp, #144]
  409a20:	mov	w1, #0x20                  	// #32
  409a24:	bl	40d5a0 <feof@plt+0xabd0>
  409a28:	ldr	w20, [sp, #284]
  409a2c:	cmp	w20, w23
  409a30:	b.ge	409af8 <feof@plt+0x7128>  // b.tcont
  409a34:	mov	w26, wzr
  409a38:	add	x19, x27, x21
  409a3c:	mov	w27, #0x7fffffff            	// #2147483647
  409a40:	b	409a70 <feof@plt+0x70a0>
  409a44:	ldr	x0, [sp, #144]
  409a48:	mov	w8, #0x7fffffff            	// #2147483647
  409a4c:	cmp	w27, w8
  409a50:	csel	w8, w20, w27, eq  // eq = none
  409a54:	cmp	w1, #0x20
  409a58:	csel	w27, w27, w8, eq  // eq = none
  409a5c:	csel	w26, w26, w20, eq  // eq = none
  409a60:	bl	40d5a0 <feof@plt+0xabd0>
  409a64:	cmp	w23, w20
  409a68:	add	x19, x19, #0x1
  409a6c:	b.eq	409b00 <feof@plt+0x7130>  // b.none
  409a70:	ldrb	w8, [sp, #248]
  409a74:	add	w20, w20, #0x1
  409a78:	cbz	w8, 409ad0 <feof@plt+0x7100>
  409a7c:	add	x0, sp, #0x88
  409a80:	sub	x5, x29, #0x30
  409a84:	mov	w4, #0x7fffffff            	// #2147483647
  409a88:	mov	w1, w22
  409a8c:	mov	w2, w20
  409a90:	mov	w3, wzr
  409a94:	bl	40b11c <feof@plt+0x874c>
  409a98:	tbz	w0, #0, 409aac <feof@plt+0x70dc>
  409a9c:	ldur	w1, [x29, #-48]
  409aa0:	mov	x0, x25
  409aa4:	bl	40afe4 <feof@plt+0x8614>
  409aa8:	b	409ad0 <feof@plt+0x7100>
  409aac:	ldr	w8, [sp, #204]
  409ab0:	cmn	w8, #0x1
  409ab4:	b.eq	409ad0 <feof@plt+0x7100>  // b.none
  409ab8:	ldr	x8, [sp, #192]
  409abc:	ldr	x1, [sp, #240]
  409ac0:	ldr	x0, [x8]
  409ac4:	bl	40f384 <feof@plt+0xc9b4>
  409ac8:	mov	w8, #0xffffffff            	// #-1
  409acc:	str	w8, [sp, #204]
  409ad0:	ldrb	w1, [x19]
  409ad4:	cmp	w1, #0xd
  409ad8:	b.hi	409a44 <feof@plt+0x7074>  // b.pmore
  409adc:	mov	w8, #0x1                   	// #1
  409ae0:	lsl	w8, w8, w1
  409ae4:	mov	w9, #0x2201                	// #8705
  409ae8:	tst	w8, w9
  409aec:	b.eq	409a44 <feof@plt+0x7074>  // b.none
  409af0:	mov	w1, #0x20                  	// #32
  409af4:	b	409a44 <feof@plt+0x7074>
  409af8:	mov	w26, wzr
  409afc:	mov	w27, #0x7fffffff            	// #2147483647
  409b00:	ldr	w8, [sp, #204]
  409b04:	cmn	w8, #0x1
  409b08:	b.eq	409b24 <feof@plt+0x7154>  // b.none
  409b0c:	ldr	x8, [sp, #192]
  409b10:	ldr	x1, [sp, #240]
  409b14:	ldr	x0, [x8]
  409b18:	bl	40f384 <feof@plt+0xc9b4>
  409b1c:	mov	w8, #0xffffffff            	// #-1
  409b20:	str	w8, [sp, #204]
  409b24:	ldr	x0, [sp, #144]
  409b28:	bl	40fd08 <feof@plt+0xd338>
  409b2c:	ldr	x9, [sp, #256]
  409b30:	cbz	x9, 409cb8 <feof@plt+0x72e8>
  409b34:	ldr	w8, [x9, #4]
  409b38:	cbz	w8, 409cb8 <feof@plt+0x72e8>
  409b3c:	add	x10, x9, #0x8
  409b40:	add	x9, x9, #0x30
  409b44:	mov	x11, xzr
  409b48:	mov	x12, x9
  409b4c:	mov	x13, x10
  409b50:	b	409b6c <feof@plt+0x719c>
  409b54:	add	x11, x11, #0x1
  409b58:	cmp	x11, x8
  409b5c:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  409b60:	cmp	x8, x11
  409b64:	add	x12, x12, #0x28
  409b68:	b.eq	409cb8 <feof@plt+0x72e8>  // b.none
  409b6c:	ldr	w14, [x13, #16]
  409b70:	cmp	w14, #0x2
  409b74:	b.eq	409cb8 <feof@plt+0x72e8>  // b.none
  409b78:	ldr	w14, [x13]
  409b7c:	ldr	w13, [x13, #8]
  409b80:	cmp	w14, w13
  409b84:	b.hi	40ace8 <feof@plt+0x8318>  // b.pmore
  409b88:	cmp	w14, w22
  409b8c:	b.hi	409b54 <feof@plt+0x7184>  // b.pmore
  409b90:	cmp	w13, w22
  409b94:	b.cc	409b54 <feof@plt+0x7184>  // b.lo, b.ul, b.last
  409b98:	ldr	w12, [sp, #172]
  409b9c:	mov	x11, xzr
  409ba0:	add	w23, w12, #0x1
  409ba4:	add	w12, w26, #0x1
  409ba8:	b	409bcc <feof@plt+0x71fc>
  409bac:	ccmp	w23, w26, #0x0, hi  // hi = pmore
  409bb0:	csel	w23, w23, w12, gt
  409bb4:	add	x11, x11, #0x1
  409bb8:	cmp	x11, x8
  409bbc:	csel	x10, x9, xzr, cc  // cc = lo, ul, last
  409bc0:	cmp	x8, x11
  409bc4:	add	x9, x9, #0x28
  409bc8:	b.eq	409bf4 <feof@plt+0x7224>  // b.none
  409bcc:	ldr	w13, [x10]
  409bd0:	cmp	w13, w22
  409bd4:	b.hi	409bb4 <feof@plt+0x71e4>  // b.pmore
  409bd8:	ldr	w13, [x10, #8]
  409bdc:	cmp	w13, w22
  409be0:	b.ne	409bac <feof@plt+0x71dc>  // b.any
  409be4:	ldr	w10, [x10, #12]
  409be8:	cmp	w23, w10
  409bec:	csinc	w23, w23, w10, gt
  409bf0:	b	409bb4 <feof@plt+0x71e4>
  409bf4:	ldrb	w8, [sp, #250]
  409bf8:	cbz	w8, 409c70 <feof@plt+0x72a0>
  409bfc:	ldr	w8, [sp, #280]
  409c00:	cmp	w8, #0x4
  409c04:	b.lt	409c38 <feof@plt+0x7268>  // b.tstop
  409c08:	mov	w19, wzr
  409c0c:	ldr	x0, [sp, #144]
  409c10:	mov	w1, #0x20                  	// #32
  409c14:	bl	40d5a0 <feof@plt+0xabd0>
  409c18:	ldr	w8, [sp, #280]
  409c1c:	add	w19, w19, #0x1
  409c20:	sub	w9, w8, #0x3
  409c24:	cmp	w19, w9
  409c28:	b.lt	409c0c <feof@plt+0x723c>  // b.tstop
  409c2c:	b	409c3c <feof@plt+0x726c>
  409c30:	str	wzr, [x24, #4]
  409c34:	b	409748 <feof@plt+0x6d78>
  409c38:	mov	w19, wzr
  409c3c:	ldr	x0, [sp, #144]
  409c40:	cmp	w19, w8
  409c44:	b.ge	409c64 <feof@plt+0x7294>  // b.tcont
  409c48:	mov	w1, #0x20                  	// #32
  409c4c:	bl	40d5a0 <feof@plt+0xabd0>
  409c50:	ldr	w8, [sp, #280]
  409c54:	ldr	x0, [sp, #144]
  409c58:	add	w19, w19, #0x1
  409c5c:	cmp	w19, w8
  409c60:	b.lt	409c48 <feof@plt+0x7278>  // b.tstop
  409c64:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  409c68:	add	x1, x1, #0xd6a
  409c6c:	bl	40f384 <feof@plt+0xc9b4>
  409c70:	ldr	x0, [sp, #144]
  409c74:	mov	w1, #0x20                  	// #32
  409c78:	bl	40d5a0 <feof@plt+0xabd0>
  409c7c:	ldr	w8, [sp, #284]
  409c80:	add	w20, w8, #0x1
  409c84:	cmp	w20, w23
  409c88:	b.lt	409cf0 <feof@plt+0x7320>  // b.tstop
  409c8c:	ldr	w8, [sp, #204]
  409c90:	cmn	w8, #0x1
  409c94:	b.eq	409cb0 <feof@plt+0x72e0>  // b.none
  409c98:	ldr	x8, [sp, #192]
  409c9c:	ldr	x1, [sp, #240]
  409ca0:	ldr	x0, [x8]
  409ca4:	bl	40f384 <feof@plt+0xc9b4>
  409ca8:	mov	w8, #0xffffffff            	// #-1
  409cac:	str	w8, [sp, #204]
  409cb0:	ldr	x0, [sp, #144]
  409cb4:	bl	40fd08 <feof@plt+0xd338>
  409cb8:	ldrb	w8, [sp, #249]
  409cbc:	str	x22, [sp, #88]
  409cc0:	cbz	w8, 40a1d8 <feof@plt+0x7808>
  409cc4:	ldr	x8, [sp, #256]
  409cc8:	cbz	x8, 40a1d8 <feof@plt+0x7808>
  409ccc:	mov	x19, xzr
  409cd0:	mov	x26, xzr
  409cd4:	b	409dbc <feof@plt+0x73ec>
  409cd8:	ldr	x0, [sp, #144]
  409cdc:	mov	w1, #0x20                  	// #32
  409ce0:	bl	40d5a0 <feof@plt+0xabd0>
  409ce4:	add	w20, w20, #0x1
  409ce8:	cmp	w23, w20
  409cec:	b.eq	409c8c <feof@plt+0x72bc>  // b.none
  409cf0:	add	x0, sp, #0x88
  409cf4:	sub	x5, x29, #0x30
  409cf8:	mov	w1, w22
  409cfc:	mov	w2, w20
  409d00:	mov	w3, w27
  409d04:	mov	w4, w26
  409d08:	bl	40b11c <feof@plt+0x874c>
  409d0c:	tbz	w0, #0, 409d44 <feof@plt+0x7374>
  409d10:	ldur	w19, [x29, #-48]
  409d14:	mov	x0, x25
  409d18:	mov	w1, w19
  409d1c:	bl	40afe4 <feof@plt+0x8614>
  409d20:	ldurb	w8, [x29, #-44]
  409d24:	cbz	w8, 409d6c <feof@plt+0x739c>
  409d28:	sxtw	x8, w19
  409d2c:	cmp	w8, #0x2
  409d30:	b.gt	409d78 <feof@plt+0x73a8>
  409d34:	ldp	x9, x0, [sp, #136]
  409d38:	add	x8, x9, x8
  409d3c:	ldrb	w1, [x8, #116]
  409d40:	b	409ce0 <feof@plt+0x7310>
  409d44:	ldr	w8, [sp, #204]
  409d48:	cmn	w8, #0x1
  409d4c:	b.eq	409cd8 <feof@plt+0x7308>  // b.none
  409d50:	ldr	x8, [sp, #192]
  409d54:	ldr	x1, [sp, #240]
  409d58:	ldr	x0, [x8]
  409d5c:	bl	40f384 <feof@plt+0xc9b4>
  409d60:	mov	w8, #0xffffffff            	// #-1
  409d64:	str	w8, [sp, #204]
  409d68:	b	409cd8 <feof@plt+0x7308>
  409d6c:	ldr	x0, [sp, #144]
  409d70:	mov	w1, #0x7e                  	// #126
  409d74:	b	409ce0 <feof@plt+0x7310>
  409d78:	ldr	x0, [sp, #144]
  409d7c:	mov	w1, #0x5e                  	// #94
  409d80:	b	409ce0 <feof@plt+0x7310>
  409d84:	mov	x0, x26
  409d88:	ldr	w8, [x0, #4]
  409d8c:	mov	w10, #0x28                  	// #40
  409d90:	mov	x26, x0
  409d94:	add	w9, w8, #0x1
  409d98:	madd	x8, x8, x10, x0
  409d9c:	str	w9, [x0, #4]
  409da0:	stp	w19, w21, [x8, #8]
  409da4:	stp	x20, x27, [x8, #16]
  409da8:	str	x12, [x8, #32]
  409dac:	str	wzr, [x8, #40]
  409db0:	ldr	x8, [sp, #256]
  409db4:	add	x19, x19, #0x1
  409db8:	cbz	x8, 409f00 <feof@plt+0x7530>
  409dbc:	ldr	w9, [x8, #4]
  409dc0:	mov	w10, #0x28                  	// #40
  409dc4:	madd	x8, x19, x10, x8
  409dc8:	add	x8, x8, #0x8
  409dcc:	cmp	x19, x9
  409dd0:	csel	x21, x8, xzr, cc  // cc = lo, ul, last
  409dd4:	b.cs	409f00 <feof@plt+0x7530>  // b.hs, b.nlast
  409dd8:	ldr	x0, [x21, #32]
  409ddc:	cbz	x0, 409db0 <feof@plt+0x73e0>
  409de0:	ldr	w8, [x21, #20]
  409de4:	cmp	w8, w22
  409de8:	b.ne	409db0 <feof@plt+0x73e0>  // b.any
  409dec:	ldr	w8, [x21, #24]
  409df0:	ldr	w9, [sp, #284]
  409df4:	cmp	w8, w9
  409df8:	b.le	409db0 <feof@plt+0x73e0>
  409dfc:	ldr	x8, [x0]
  409e00:	ldr	w1, [x21, #28]
  409e04:	ldr	x8, [x8, #16]
  409e08:	blr	x8
  409e0c:	bfxil	x27, x1, #0, #8
  409e10:	cbz	x0, 409db0 <feof@plt+0x73e0>
  409e14:	ldr	w21, [x21, #24]
  409e18:	mov	x20, x0
  409e1c:	bl	402420 <strlen@plt>
  409e20:	mov	x12, x0
  409e24:	cbz	x26, 409e68 <feof@plt+0x7498>
  409e28:	ldp	w8, w9, [x26]
  409e2c:	and	w28, w8, #0x7fffffff
  409e30:	cmp	w28, w9
  409e34:	b.ne	409d84 <feof@plt+0x73b4>  // b.any
  409e38:	str	w21, [sp, #80]
  409e3c:	mov	x21, x12
  409e40:	add	w1, w28, #0x1
  409e44:	tbnz	w8, #31, 409e88 <feof@plt+0x74b8>
  409e48:	mov	w0, w28
  409e4c:	bl	411298 <feof@plt+0xe8c8>
  409e50:	ldr	w22, [x26, #4]
  409e54:	mov	w23, w0
  409e58:	mov	w28, wzr
  409e5c:	mov	w24, wzr
  409e60:	mov	x0, x26
  409e64:	b	409ea0 <feof@plt+0x74d0>
  409e68:	str	w21, [sp, #80]
  409e6c:	mov	x21, x12
  409e70:	mov	w28, wzr
  409e74:	mov	w24, wzr
  409e78:	mov	x0, xzr
  409e7c:	mov	w22, wzr
  409e80:	mov	w23, #0x4                   	// #4
  409e84:	b	409ea0 <feof@plt+0x74d0>
  409e88:	cmp	w28, #0x4
  409e8c:	mov	w8, #0x4                   	// #4
  409e90:	mov	x0, xzr
  409e94:	mov	w22, wzr
  409e98:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  409e9c:	mov	w24, #0x1                   	// #1
  409ea0:	mov	w8, #0x28                  	// #40
  409ea4:	umull	x8, w23, w8
  409ea8:	add	x1, x8, #0x8
  409eac:	bl	450728 <_obstack_memory_used@@Base+0x190>
  409eb0:	and	w8, w23, #0x7fffffff
  409eb4:	stp	w8, w22, [x0]
  409eb8:	ldr	x22, [sp, #88]
  409ebc:	mov	x12, x21
  409ec0:	ldr	w21, [sp, #80]
  409ec4:	cbz	w24, 409d88 <feof@plt+0x73b8>
  409ec8:	cbz	w28, 409ef8 <feof@plt+0x7528>
  409ecc:	add	x8, x26, #0x8
  409ed0:	add	x9, x0, #0x8
  409ed4:	mov	w10, w28
  409ed8:	ldr	x11, [x8, #32]
  409edc:	ldp	q1, q0, [x8]
  409ee0:	subs	w10, w10, #0x1
  409ee4:	add	x8, x8, #0x28
  409ee8:	str	x11, [x9, #32]
  409eec:	stp	q1, q0, [x9]
  409ef0:	add	x9, x9, #0x28
  409ef4:	b.ne	409ed8 <feof@plt+0x7508>  // b.any
  409ef8:	str	w28, [x0, #4]
  409efc:	b	409d88 <feof@plt+0x73b8>
  409f00:	cbz	x26, 40a1d8 <feof@plt+0x7808>
  409f04:	ldr	w1, [x26, #4]
  409f08:	cbz	w1, 40a1c0 <feof@plt+0x77f0>
  409f0c:	cmp	w1, #0x1
  409f10:	b.ne	409f20 <feof@plt+0x7550>  // b.any
  409f14:	mov	w8, wzr
  409f18:	mov	w14, #0x28                  	// #40
  409f1c:	b	409f44 <feof@plt+0x7574>
  409f20:	adrp	x3, 40b000 <feof@plt+0x8630>
  409f24:	add	x0, x26, #0x8
  409f28:	mov	w2, #0x28                  	// #40
  409f2c:	add	x3, x3, #0x2a4
  409f30:	bl	415868 <feof@plt+0x12e98>
  409f34:	ldr	w1, [x26, #4]
  409f38:	mov	w14, #0x28                  	// #40
  409f3c:	cbz	w1, 40abd0 <feof@plt+0x8200>
  409f40:	sub	w8, w1, #0x1
  409f44:	mov	w9, #0x1                   	// #1
  409f48:	mov	w10, #0x7fffffff            	// #2147483647
  409f4c:	umaddl	x11, w8, w14, x26
  409f50:	ldrsw	x12, [x11, #12]
  409f54:	ldr	x13, [x11, #32]
  409f58:	sub	w8, w8, #0x1
  409f5c:	add	x13, x13, x12
  409f60:	cmp	x13, w10, sxtw
  409f64:	cinc	w9, w9, cs  // cs = hs, nlast
  409f68:	cmp	w1, w8
  409f6c:	mov	w10, w12
  409f70:	str	w9, [x11, #40]
  409f74:	b.hi	409f4c <feof@plt+0x757c>  // b.pmore
  409f78:	add	w19, w9, #0x1
  409f7c:	mov	w20, wzr
  409f80:	mov	w27, wzr
  409f84:	add	x23, x26, #0x8
  409f88:	b	409fa4 <feof@plt+0x75d4>
  409f8c:	ldr	x0, [sp, #144]
  409f90:	bl	40fd08 <feof@plt+0xd338>
  409f94:	ldr	x22, [sp, #88]
  409f98:	add	w20, w20, #0x1
  409f9c:	cmp	w20, w19
  409fa0:	b.eq	40a184 <feof@plt+0x77b4>  // b.none
  409fa4:	ldrb	w8, [sp, #250]
  409fa8:	cbz	w8, 40a018 <feof@plt+0x7648>
  409fac:	ldr	w8, [sp, #280]
  409fb0:	cmp	w8, #0x4
  409fb4:	b.lt	409fe0 <feof@plt+0x7610>  // b.tstop
  409fb8:	mov	w21, wzr
  409fbc:	ldr	x0, [sp, #144]
  409fc0:	mov	w1, #0x20                  	// #32
  409fc4:	bl	40d5a0 <feof@plt+0xabd0>
  409fc8:	ldr	w8, [sp, #280]
  409fcc:	add	w21, w21, #0x1
  409fd0:	sub	w9, w8, #0x3
  409fd4:	cmp	w21, w9
  409fd8:	b.lt	409fbc <feof@plt+0x75ec>  // b.tstop
  409fdc:	b	409fe4 <feof@plt+0x7614>
  409fe0:	mov	w21, wzr
  409fe4:	ldr	x0, [sp, #144]
  409fe8:	cmp	w21, w8
  409fec:	b.ge	40a00c <feof@plt+0x763c>  // b.tcont
  409ff0:	mov	w1, #0x20                  	// #32
  409ff4:	bl	40d5a0 <feof@plt+0xabd0>
  409ff8:	ldr	w8, [sp, #280]
  409ffc:	ldr	x0, [sp, #144]
  40a000:	add	w21, w21, #0x1
  40a004:	cmp	w21, w8
  40a008:	b.lt	409ff0 <feof@plt+0x7620>  // b.tstop
  40a00c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40a010:	add	x1, x1, #0xd6a
  40a014:	bl	40f384 <feof@plt+0xc9b4>
  40a018:	ldr	x0, [sp, #144]
  40a01c:	mov	w1, #0x20                  	// #32
  40a020:	bl	40d5a0 <feof@plt+0xabd0>
  40a024:	ldr	w8, [x26, #4]
  40a028:	cbz	w8, 40a15c <feof@plt+0x778c>
  40a02c:	ldr	w8, [sp, #284]
  40a030:	mov	x28, xzr
  40a034:	mov	x21, x23
  40a038:	add	w22, w8, #0x1
  40a03c:	b	40a064 <feof@plt+0x7694>
  40a040:	ldr	w8, [x21, #24]
  40a044:	add	w22, w22, w8
  40a048:	ldr	w8, [x26, #4]
  40a04c:	add	x28, x28, #0x1
  40a050:	mov	w9, #0x28                  	// #40
  40a054:	madd	x9, x28, x9, x26
  40a058:	cmp	x28, x8
  40a05c:	add	x21, x9, #0x8
  40a060:	b.cs	40a15c <feof@plt+0x778c>  // b.hs, b.nlast
  40a064:	ldr	w8, [x21, #32]
  40a068:	cmp	w20, w8
  40a06c:	b.gt	40a15c <feof@plt+0x778c>
  40a070:	ldr	w24, [x21, #4]
  40a074:	b.ne	40a0e0 <feof@plt+0x7710>  // b.any
  40a078:	cmp	w22, w24
  40a07c:	b.gt	40ac88 <feof@plt+0x82b8>
  40a080:	b.ge	40a0a0 <feof@plt+0x76d0>  // b.tcont
  40a084:	sub	w22, w24, w22
  40a088:	ldr	x0, [sp, #144]
  40a08c:	mov	w1, #0x20                  	// #32
  40a090:	bl	40d5a0 <feof@plt+0xabd0>
  40a094:	subs	w22, w22, #0x1
  40a098:	b.ne	40a088 <feof@plt+0x76b8>  // b.any
  40a09c:	mov	w22, w24
  40a0a0:	ldr	w1, [x21]
  40a0a4:	mov	x0, x25
  40a0a8:	bl	40afe4 <feof@plt+0x8614>
  40a0ac:	ldr	x0, [sp, #144]
  40a0b0:	ldr	x1, [x21, #8]
  40a0b4:	bl	40f384 <feof@plt+0xc9b4>
  40a0b8:	ldr	w8, [sp, #204]
  40a0bc:	cmn	w8, #0x1
  40a0c0:	b.eq	40a040 <feof@plt+0x7670>  // b.none
  40a0c4:	ldr	x8, [sp, #192]
  40a0c8:	ldr	x1, [sp, #240]
  40a0cc:	ldr	x0, [x8]
  40a0d0:	bl	40f384 <feof@plt+0xc9b4>
  40a0d4:	mov	w8, #0xffffffff            	// #-1
  40a0d8:	str	w8, [sp, #204]
  40a0dc:	b	40a040 <feof@plt+0x7670>
  40a0e0:	cmp	w24, w27
  40a0e4:	b.eq	40a048 <feof@plt+0x7678>  // b.none
  40a0e8:	cmp	w22, w24
  40a0ec:	b.gt	40acd0 <feof@plt+0x8300>
  40a0f0:	b.ge	40a114 <feof@plt+0x7744>  // b.tcont
  40a0f4:	sub	w22, w24, w22
  40a0f8:	ldr	x0, [sp, #144]
  40a0fc:	mov	w1, #0x20                  	// #32
  40a100:	bl	40d5a0 <feof@plt+0xabd0>
  40a104:	subs	w22, w22, #0x1
  40a108:	b.ne	40a0f8 <feof@plt+0x7728>  // b.any
  40a10c:	mov	w27, w24
  40a110:	b	40a118 <feof@plt+0x7748>
  40a114:	mov	w27, w22
  40a118:	ldr	w1, [x21]
  40a11c:	mov	x0, x25
  40a120:	bl	40afe4 <feof@plt+0x8614>
  40a124:	ldr	x0, [sp, #144]
  40a128:	mov	w1, #0x7c                  	// #124
  40a12c:	bl	40d5a0 <feof@plt+0xabd0>
  40a130:	ldr	w8, [sp, #204]
  40a134:	cmn	w8, #0x1
  40a138:	b.eq	40a154 <feof@plt+0x7784>  // b.none
  40a13c:	ldr	x8, [sp, #192]
  40a140:	ldr	x1, [sp, #240]
  40a144:	ldr	x0, [x8]
  40a148:	bl	40f384 <feof@plt+0xc9b4>
  40a14c:	mov	w8, #0xffffffff            	// #-1
  40a150:	str	w8, [sp, #204]
  40a154:	add	w22, w27, #0x1
  40a158:	b	40a048 <feof@plt+0x7678>
  40a15c:	ldr	w8, [sp, #204]
  40a160:	cmn	w8, #0x1
  40a164:	b.eq	409f8c <feof@plt+0x75bc>  // b.none
  40a168:	ldr	x8, [sp, #192]
  40a16c:	ldr	x1, [sp, #240]
  40a170:	ldr	x0, [x8]
  40a174:	bl	40f384 <feof@plt+0xc9b4>
  40a178:	mov	w8, #0xffffffff            	// #-1
  40a17c:	str	w8, [sp, #204]
  40a180:	b	409f8c <feof@plt+0x75bc>
  40a184:	ldr	w8, [x26, #4]
  40a188:	cbz	w8, 40a1c0 <feof@plt+0x77f0>
  40a18c:	mov	x19, xzr
  40a190:	add	x20, x26, #0x18
  40a194:	b	40a1a8 <feof@plt+0x77d8>
  40a198:	add	x19, x19, #0x1
  40a19c:	cmp	x19, w8, uxtw
  40a1a0:	add	x20, x20, #0x28
  40a1a4:	b.cs	40a1c0 <feof@plt+0x77f0>  // b.hs, b.nlast
  40a1a8:	ldrb	w9, [x20]
  40a1ac:	cbz	w9, 40a198 <feof@plt+0x77c8>
  40a1b0:	ldur	x0, [x20, #-8]
  40a1b4:	bl	4024c0 <free@plt>
  40a1b8:	ldr	w8, [x26, #4]
  40a1bc:	b	40a198 <feof@plt+0x77c8>
  40a1c0:	ldr	w8, [x26]
  40a1c4:	tbnz	w8, #31, 40a1d4 <feof@plt+0x7804>
  40a1c8:	mov	x0, x26
  40a1cc:	bl	4024c0 <free@plt>
  40a1d0:	b	40a1d8 <feof@plt+0x7808>
  40a1d4:	str	wzr, [x26, #4]
  40a1d8:	ldr	x8, [sp, #160]
  40a1dc:	mov	x27, xzr
  40a1e0:	mov	x24, xzr
  40a1e4:	str	x8, [sp, #64]
  40a1e8:	ldr	x8, [sp, #264]
  40a1ec:	cbnz	x8, 40a21c <feof@plt+0x784c>
  40a1f0:	b	40a22c <feof@plt+0x785c>
  40a1f4:	mov	x0, x24
  40a1f8:	ldr	w8, [x0, #4]
  40a1fc:	mov	x24, x0
  40a200:	add	w9, w8, #0x1
  40a204:	add	x8, x0, x8, lsl #3
  40a208:	str	w9, [x0, #4]
  40a20c:	str	x20, [x8, #8]
  40a210:	add	x27, x27, #0x1
  40a214:	ldr	x8, [sp, #264]
  40a218:	cbz	x8, 40a22c <feof@plt+0x785c>
  40a21c:	ldr	w9, [x8, #4]
  40a220:	cmp	x27, w9, uxtw
  40a224:	b.cc	40a238 <feof@plt+0x7868>  // b.lo, b.ul, b.last
  40a228:	b	40a5f4 <feof@plt+0x7c24>
  40a22c:	mov	w9, wzr
  40a230:	cmp	x27, w9, uxtw
  40a234:	b.cs	40a5f4 <feof@plt+0x7c24>  // b.hs, b.nlast
  40a238:	add	x8, x8, x27, lsl #3
  40a23c:	ldr	x28, [x8, #8]
  40a240:	mov	x0, x28
  40a244:	bl	42d1ac <feof@plt+0x2a7dc>
  40a248:	tbnz	w0, #0, 40a210 <feof@plt+0x7840>
  40a24c:	ldr	x1, [sp, #160]
  40a250:	mov	x0, x28
  40a254:	mov	w2, w22
  40a258:	bl	42d29c <feof@plt+0x2a8cc>
  40a25c:	tbz	w0, #0, 40a210 <feof@plt+0x7840>
  40a260:	ldr	w0, [x28]
  40a264:	sub	x8, x29, #0x30
  40a268:	mov	x26, x25
  40a26c:	bl	413104 <feof@plt+0x10734>
  40a270:	ldr	w0, [x28, #4]
  40a274:	ldur	w19, [x29, #-36]
  40a278:	sub	x8, x29, #0x30
  40a27c:	bl	413104 <feof@plt+0x10734>
  40a280:	ldur	w22, [x29, #-36]
  40a284:	cmp	w19, w22
  40a288:	b.gt	40aca0 <feof@plt+0x82d0>
  40a28c:	ldr	w0, [x28]
  40a290:	sub	x8, x29, #0x30
  40a294:	bl	413104 <feof@plt+0x10734>
  40a298:	ldur	w25, [x29, #-36]
  40a29c:	ldp	w9, w0, [x28]
  40a2a0:	ldr	w8, [x28, #16]
  40a2a4:	mov	x23, x24
  40a2a8:	sub	w21, w25, #0x1
  40a2ac:	cmp	w9, w0
  40a2b0:	add	w20, w21, w8
  40a2b4:	b.ne	40a2c8 <feof@plt+0x78f8>  // b.any
  40a2b8:	cbz	w8, 40a2f0 <feof@plt+0x7920>
  40a2bc:	cmp	w25, w20
  40a2c0:	b.le	40a2f0 <feof@plt+0x7920>
  40a2c4:	b	40aca0 <feof@plt+0x82d0>
  40a2c8:	sub	x8, x29, #0x30
  40a2cc:	bl	413104 <feof@plt+0x10734>
  40a2d0:	ldur	w8, [x29, #-36]
  40a2d4:	sub	w8, w8, #0x1
  40a2d8:	cmp	w8, w20
  40a2dc:	csel	w20, w8, w20, gt
  40a2e0:	cmp	w25, w20
  40a2e4:	b.le	40a2f0 <feof@plt+0x7920>
  40a2e8:	cmp	w21, w20
  40a2ec:	b.ne	40aca0 <feof@plt+0x82d0>  // b.any
  40a2f0:	sub	w9, w22, #0x1
  40a2f4:	mov	x24, x23
  40a2f8:	cbz	x23, 40a338 <feof@plt+0x7968>
  40a2fc:	ldr	w8, [x24, #4]
  40a300:	cbz	w8, 40a338 <feof@plt+0x7968>
  40a304:	sub	w8, w8, #0x1
  40a308:	add	x8, x24, w8, uxtw #3
  40a30c:	ldr	x22, [x8, #8]
  40a310:	ldr	w8, [x22]
  40a314:	cmp	w8, w19
  40a318:	b.gt	40ad00 <feof@plt+0x8330>
  40a31c:	ldr	w8, [x22, #8]
  40a320:	cmp	w8, w25
  40a324:	b.gt	40ad18 <feof@plt+0x8348>
  40a328:	ldr	w8, [x22, #12]
  40a32c:	mov	x24, x23
  40a330:	cmp	w8, w25
  40a334:	b.ge	40a3c8 <feof@plt+0x79f8>  // b.tcont
  40a338:	mov	w0, #0x28                  	// #40
  40a33c:	bfi	x19, x9, #32, #32
  40a340:	bfi	x25, x20, #32, #32
  40a344:	bl	4026a0 <_Znwm@plt>
  40a348:	mov	x20, x0
  40a34c:	ldp	x0, x21, [x28, #8]
  40a350:	stp	x19, x25, [x20]
  40a354:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  40a358:	add	x8, x21, #0x1
  40a35c:	stp	x0, x21, [x20, #16]
  40a360:	str	x8, [x20, #32]
  40a364:	cbz	x24, 40a3a8 <feof@plt+0x79d8>
  40a368:	ldp	w8, w9, [x24]
  40a36c:	ldr	x22, [sp, #88]
  40a370:	mov	x25, x26
  40a374:	and	w28, w8, #0x7fffffff
  40a378:	cmp	w28, w9
  40a37c:	b.ne	40a1f4 <feof@plt+0x7824>  // b.any
  40a380:	add	w1, w28, #0x1
  40a384:	tbnz	w8, #31, 40a514 <feof@plt+0x7b44>
  40a388:	mov	w0, w28
  40a38c:	bl	411298 <feof@plt+0xe8c8>
  40a390:	ldr	w19, [x24, #4]
  40a394:	mov	w23, w0
  40a398:	mov	w28, wzr
  40a39c:	mov	w21, wzr
  40a3a0:	mov	x0, x24
  40a3a4:	b	40a52c <feof@plt+0x7b5c>
  40a3a8:	ldr	x22, [sp, #88]
  40a3ac:	mov	w28, wzr
  40a3b0:	mov	w21, wzr
  40a3b4:	mov	x0, xzr
  40a3b8:	mov	w19, wzr
  40a3bc:	mov	w23, #0x4                   	// #4
  40a3c0:	mov	x25, x26
  40a3c4:	b	40a52c <feof@plt+0x7b5c>
  40a3c8:	ldr	w8, [x22, #4]
  40a3cc:	cmp	w8, w25
  40a3d0:	stp	x8, x9, [sp, #72]
  40a3d4:	b.ge	40aca0 <feof@plt+0x82d0>  // b.tcont
  40a3d8:	ldr	x0, [sp, #64]
  40a3dc:	ldr	x1, [sp, #88]
  40a3e0:	bl	412d44 <feof@plt+0x10374>
  40a3e4:	ldr	x9, [sp, #80]
  40a3e8:	mov	x24, x23
  40a3ec:	cbz	x0, 40a338 <feof@plt+0x7968>
  40a3f0:	cmp	w25, w1
  40a3f4:	b.gt	40a338 <feof@plt+0x7968>
  40a3f8:	ldr	x20, [x22, #24]
  40a3fc:	tbnz	w20, #31, 40ad30 <feof@plt+0x8360>
  40a400:	ldr	x10, [sp, #72]
  40a404:	mvn	w8, w10
  40a408:	adds	w24, w25, w8
  40a40c:	b.mi	40ad48 <feof@plt+0x8378>  // b.first
  40a410:	ldr	w8, [x28, #16]
  40a414:	add	w25, w24, w20
  40a418:	adds	w8, w25, w8
  40a41c:	b.mi	40ad60 <feof@plt+0x8390>  // b.first
  40a420:	ldr	x19, [x22, #32]
  40a424:	mov	w9, w8
  40a428:	cmp	x19, x9
  40a42c:	b.hi	40a460 <feof@plt+0x7a90>  // b.pmore
  40a430:	stp	x1, x0, [sp, #32]
  40a434:	ldr	x0, [x22, #16]
  40a438:	lsl	x8, x9, #1
  40a43c:	add	x19, x8, #0x2
  40a440:	mov	x1, x19
  40a444:	str	x9, [sp, #48]
  40a448:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40a44c:	str	x0, [x22, #16]
  40a450:	ldr	x9, [sp, #48]
  40a454:	ldr	x10, [sp, #72]
  40a458:	ldp	x1, x0, [sp, #32]
  40a45c:	str	x19, [x22, #32]
  40a460:	tbnz	w10, #31, 40ad78 <feof@plt+0x83a8>
  40a464:	cmp	w10, w1
  40a468:	b.ge	40ad90 <feof@plt+0x83c0>  // b.tcont
  40a46c:	cmp	w21, w1
  40a470:	b.gt	40ada8 <feof@plt+0x83d8>
  40a474:	and	x8, x20, #0xffffffff
  40a478:	mov	w2, w24
  40a47c:	mov	x21, x9
  40a480:	add	x9, x8, x2
  40a484:	cmp	x9, x19
  40a488:	b.cs	40adc0 <feof@plt+0x83f0>  // b.hs, b.nlast
  40a48c:	ldr	x9, [x22, #16]
  40a490:	add	x1, x0, x10
  40a494:	add	x0, x9, x8
  40a498:	bl	402390 <memcpy@plt>
  40a49c:	ldr	x2, [x28, #16]
  40a4a0:	ldr	x9, [x22, #32]
  40a4a4:	mov	w8, w25
  40a4a8:	add	x10, x2, x8
  40a4ac:	cmp	x10, x9
  40a4b0:	b.cs	40adc0 <feof@plt+0x83f0>  // b.hs, b.nlast
  40a4b4:	ldr	x9, [x22, #16]
  40a4b8:	ldr	x1, [x28, #8]
  40a4bc:	add	x0, x9, x8
  40a4c0:	bl	402390 <memcpy@plt>
  40a4c4:	ldr	x8, [x22, #32]
  40a4c8:	str	x21, [x22, #24]
  40a4cc:	cmp	x8, x21
  40a4d0:	b.ls	40add8 <feof@plt+0x8408>  // b.plast
  40a4d4:	ldr	x8, [x22, #16]
  40a4d8:	mov	x25, x26
  40a4dc:	add	x27, x27, #0x1
  40a4e0:	strb	wzr, [x8, x21]
  40a4e4:	ldr	x8, [sp, #80]
  40a4e8:	ldr	w9, [x22, #12]
  40a4ec:	str	w8, [x22, #4]
  40a4f0:	ldr	w8, [x28, #16]
  40a4f4:	add	w8, w24, w8
  40a4f8:	add	w8, w8, w9
  40a4fc:	str	w8, [x22, #12]
  40a500:	ldr	x22, [sp, #88]
  40a504:	mov	x24, x23
  40a508:	ldr	x8, [sp, #264]
  40a50c:	cbnz	x8, 40a21c <feof@plt+0x784c>
  40a510:	b	40a22c <feof@plt+0x785c>
  40a514:	cmp	w28, #0x4
  40a518:	mov	w8, #0x4                   	// #4
  40a51c:	mov	x0, xzr
  40a520:	mov	w19, wzr
  40a524:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  40a528:	mov	w21, #0x1                   	// #1
  40a52c:	mov	w8, w23
  40a530:	lsl	x8, x8, #3
  40a534:	add	x1, x8, #0x8
  40a538:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40a53c:	and	w8, w23, #0x7fffffff
  40a540:	stp	w8, w19, [x0]
  40a544:	cbz	w21, 40a1f8 <feof@plt+0x7828>
  40a548:	cbz	w28, 40a5ec <feof@plt+0x7c1c>
  40a54c:	sub	w10, w28, #0x1
  40a550:	add	x9, x24, #0x8
  40a554:	cmp	w10, #0x3
  40a558:	add	x8, x0, #0x8
  40a55c:	b.cs	40a568 <feof@plt+0x7b98>  // b.hs, b.nlast
  40a560:	mov	w10, w28
  40a564:	b	40a5dc <feof@plt+0x7c0c>
  40a568:	lsl	x11, x10, #3
  40a56c:	add	x12, x24, x11
  40a570:	add	x12, x12, #0x10
  40a574:	cmp	x8, x12
  40a578:	b.cs	40a594 <feof@plt+0x7bc4>  // b.hs, b.nlast
  40a57c:	add	x11, x0, x11
  40a580:	add	x11, x11, #0x10
  40a584:	cmp	x11, x9
  40a588:	b.ls	40a594 <feof@plt+0x7bc4>  // b.plast
  40a58c:	mov	w10, w28
  40a590:	b	40a5dc <feof@plt+0x7c0c>
  40a594:	add	x11, x10, #0x1
  40a598:	and	x12, x11, #0x1fffffffc
  40a59c:	lsl	x9, x12, #3
  40a5a0:	add	x14, x24, x9
  40a5a4:	add	x13, x0, #0x18
  40a5a8:	sub	w10, w28, w12
  40a5ac:	add	x8, x8, x9
  40a5b0:	add	x9, x14, #0x8
  40a5b4:	add	x14, x24, #0x18
  40a5b8:	mov	x15, x12
  40a5bc:	ldp	q0, q1, [x14, #-16]
  40a5c0:	subs	x15, x15, #0x4
  40a5c4:	add	x14, x14, #0x20
  40a5c8:	stp	q0, q1, [x13, #-16]
  40a5cc:	add	x13, x13, #0x20
  40a5d0:	b.ne	40a5bc <feof@plt+0x7bec>  // b.any
  40a5d4:	cmp	x11, x12
  40a5d8:	b.eq	40a5ec <feof@plt+0x7c1c>  // b.none
  40a5dc:	ldr	x11, [x9], #8
  40a5e0:	subs	w10, w10, #0x1
  40a5e4:	str	x11, [x8], #8
  40a5e8:	b.ne	40a5dc <feof@plt+0x7c0c>  // b.any
  40a5ec:	str	w28, [x0, #4]
  40a5f0:	b	40a1f8 <feof@plt+0x7828>
  40a5f4:	ldr	w27, [sp, #284]
  40a5f8:	cbz	x24, 40ab34 <feof@plt+0x8164>
  40a5fc:	ldr	w8, [x24, #4]
  40a600:	cbz	w8, 40ab34 <feof@plt+0x8164>
  40a604:	ldrb	w8, [sp, #250]
  40a608:	cbz	w8, 40a680 <feof@plt+0x7cb0>
  40a60c:	ldr	w8, [sp, #280]
  40a610:	cmp	w8, #0x4
  40a614:	b.lt	40a640 <feof@plt+0x7c70>  // b.tstop
  40a618:	mov	w19, wzr
  40a61c:	ldr	x0, [sp, #144]
  40a620:	mov	w1, #0x20                  	// #32
  40a624:	bl	40d5a0 <feof@plt+0xabd0>
  40a628:	ldr	w8, [sp, #280]
  40a62c:	add	w19, w19, #0x1
  40a630:	sub	w9, w8, #0x3
  40a634:	cmp	w19, w9
  40a638:	b.lt	40a61c <feof@plt+0x7c4c>  // b.tstop
  40a63c:	b	40a644 <feof@plt+0x7c74>
  40a640:	mov	w19, wzr
  40a644:	ldr	x0, [sp, #144]
  40a648:	cmp	w19, w8
  40a64c:	b.ge	40a66c <feof@plt+0x7c9c>  // b.tcont
  40a650:	mov	w1, #0x20                  	// #32
  40a654:	bl	40d5a0 <feof@plt+0xabd0>
  40a658:	ldr	w8, [sp, #280]
  40a65c:	ldr	x0, [sp, #144]
  40a660:	add	w19, w19, #0x1
  40a664:	cmp	w19, w8
  40a668:	b.lt	40a650 <feof@plt+0x7c80>  // b.tstop
  40a66c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40a670:	add	x1, x1, #0xd6a
  40a674:	bl	40f384 <feof@plt+0xc9b4>
  40a678:	ldr	w8, [x24, #4]
  40a67c:	cbz	w8, 40ab34 <feof@plt+0x8164>
  40a680:	mov	w19, wzr
  40a684:	b	40a6a8 <feof@plt+0x7cd8>
  40a688:	add	x28, x20, #0x18
  40a68c:	ldr	w8, [x28]
  40a690:	add	w21, w27, w8
  40a694:	ldr	w8, [x24, #4]
  40a698:	add	w19, w19, #0x1
  40a69c:	mov	w27, w21
  40a6a0:	cmp	w8, w19
  40a6a4:	b.ls	40ab38 <feof@plt+0x8168>  // b.plast
  40a6a8:	add	x8, x24, w19, uxtw #3
  40a6ac:	ldr	x20, [x8, #8]
  40a6b0:	ldp	w23, w28, [x20]
  40a6b4:	add	w8, w28, #0x1
  40a6b8:	cmp	w23, w8
  40a6bc:	b.ne	40a734 <feof@plt+0x7d64>  // b.any
  40a6c0:	ldr	w21, [x20, #8]
  40a6c4:	cmp	w27, w21
  40a6c8:	b.le	40a85c <feof@plt+0x7e8c>
  40a6cc:	ldr	w8, [sp, #204]
  40a6d0:	cmn	w8, #0x1
  40a6d4:	b.eq	40a6f0 <feof@plt+0x7d20>  // b.none
  40a6d8:	ldr	x8, [sp, #192]
  40a6dc:	ldr	x1, [sp, #240]
  40a6e0:	ldr	x0, [x8]
  40a6e4:	bl	40f384 <feof@plt+0xc9b4>
  40a6e8:	mov	w8, #0xffffffff            	// #-1
  40a6ec:	str	w8, [sp, #204]
  40a6f0:	ldr	x0, [sp, #144]
  40a6f4:	bl	40fd08 <feof@plt+0xd338>
  40a6f8:	ldrb	w8, [sp, #250]
  40a6fc:	cbz	w8, 40a858 <feof@plt+0x7e88>
  40a700:	ldr	w8, [sp, #280]
  40a704:	cmp	w8, #0x4
  40a708:	b.lt	40a81c <feof@plt+0x7e4c>  // b.tstop
  40a70c:	mov	w22, wzr
  40a710:	ldr	x0, [sp, #144]
  40a714:	mov	w1, #0x20                  	// #32
  40a718:	bl	40d5a0 <feof@plt+0xabd0>
  40a71c:	ldr	w8, [sp, #280]
  40a720:	add	w22, w22, #0x1
  40a724:	sub	w9, w8, #0x3
  40a728:	cmp	w22, w9
  40a72c:	b.lt	40a710 <feof@plt+0x7d40>  // b.tstop
  40a730:	b	40a820 <feof@plt+0x7e50>
  40a734:	ldr	x10, [sp, #256]
  40a738:	cbz	x10, 40a7ac <feof@plt+0x7ddc>
  40a73c:	ldr	w8, [x10, #4]
  40a740:	cbz	w8, 40a7ac <feof@plt+0x7ddc>
  40a744:	mov	x9, xzr
  40a748:	add	x11, x10, #0x8
  40a74c:	add	x10, x10, #0x30
  40a750:	b	40a76c <feof@plt+0x7d9c>
  40a754:	add	x9, x9, #0x1
  40a758:	cmp	x9, x8
  40a75c:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  40a760:	cmp	x8, x9
  40a764:	add	x10, x10, #0x28
  40a768:	b.eq	40a7ac <feof@plt+0x7ddc>  // b.none
  40a76c:	ldr	w12, [x11]
  40a770:	cmp	w12, w22
  40a774:	b.ne	40a754 <feof@plt+0x7d84>  // b.any
  40a778:	ldr	w12, [x11, #4]
  40a77c:	cmp	w12, w23
  40a780:	b.ne	40a754 <feof@plt+0x7d84>  // b.any
  40a784:	ldr	w12, [x11, #8]
  40a788:	cmp	w12, w22
  40a78c:	b.ne	40a754 <feof@plt+0x7d84>  // b.any
  40a790:	ldr	w11, [x11, #12]
  40a794:	cmp	w11, w28
  40a798:	b.ne	40a754 <feof@plt+0x7d84>  // b.any
  40a79c:	ldr	x8, [x20, #24]
  40a7a0:	cbz	x8, 40a7ac <feof@plt+0x7ddc>
  40a7a4:	mov	w21, w27
  40a7a8:	b	40a9e0 <feof@plt+0x8010>
  40a7ac:	cmp	w27, w23
  40a7b0:	b.le	40a930 <feof@plt+0x7f60>
  40a7b4:	ldr	w8, [sp, #204]
  40a7b8:	cmn	w8, #0x1
  40a7bc:	b.eq	40a7d8 <feof@plt+0x7e08>  // b.none
  40a7c0:	ldr	x8, [sp, #192]
  40a7c4:	ldr	x1, [sp, #240]
  40a7c8:	ldr	x0, [x8]
  40a7cc:	bl	40f384 <feof@plt+0xc9b4>
  40a7d0:	mov	w8, #0xffffffff            	// #-1
  40a7d4:	str	w8, [sp, #204]
  40a7d8:	ldr	x0, [sp, #144]
  40a7dc:	bl	40fd08 <feof@plt+0xd338>
  40a7e0:	ldrb	w8, [sp, #250]
  40a7e4:	cbz	w8, 40a92c <feof@plt+0x7f5c>
  40a7e8:	ldr	w8, [sp, #280]
  40a7ec:	cmp	w8, #0x4
  40a7f0:	b.lt	40a8f4 <feof@plt+0x7f24>  // b.tstop
  40a7f4:	mov	w21, wzr
  40a7f8:	ldr	x0, [sp, #144]
  40a7fc:	mov	w1, #0x20                  	// #32
  40a800:	bl	40d5a0 <feof@plt+0xabd0>
  40a804:	ldr	w8, [sp, #280]
  40a808:	add	w21, w21, #0x1
  40a80c:	sub	w9, w8, #0x3
  40a810:	cmp	w21, w9
  40a814:	b.lt	40a7f8 <feof@plt+0x7e28>  // b.tstop
  40a818:	b	40a8f8 <feof@plt+0x7f28>
  40a81c:	mov	w22, wzr
  40a820:	ldr	x0, [sp, #144]
  40a824:	cmp	w22, w8
  40a828:	b.ge	40a848 <feof@plt+0x7e78>  // b.tcont
  40a82c:	mov	w1, #0x20                  	// #32
  40a830:	bl	40d5a0 <feof@plt+0xabd0>
  40a834:	ldr	w8, [sp, #280]
  40a838:	ldr	x0, [sp, #144]
  40a83c:	add	w22, w22, #0x1
  40a840:	cmp	w22, w8
  40a844:	b.lt	40a82c <feof@plt+0x7e5c>  // b.tstop
  40a848:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40a84c:	add	x1, x1, #0xd6a
  40a850:	bl	40f384 <feof@plt+0xc9b4>
  40a854:	ldr	x22, [sp, #88]
  40a858:	ldr	w27, [sp, #284]
  40a85c:	cmp	w27, w21
  40a860:	b.ge	40a884 <feof@plt+0x7eb4>  // b.tcont
  40a864:	sub	w22, w21, w27
  40a868:	ldr	x0, [sp, #144]
  40a86c:	mov	w1, #0x20                  	// #32
  40a870:	bl	40d5a0 <feof@plt+0xabd0>
  40a874:	subs	w22, w22, #0x1
  40a878:	b.ne	40a868 <feof@plt+0x7e98>  // b.any
  40a87c:	ldr	x22, [sp, #88]
  40a880:	mov	w27, w21
  40a884:	ldr	w8, [sp, #204]
  40a888:	cmn	w8, #0x2
  40a88c:	b.eq	40a8c0 <feof@plt+0x7ef0>  // b.none
  40a890:	cmn	w8, #0x1
  40a894:	b.eq	40a8a8 <feof@plt+0x7ed8>  // b.none
  40a898:	ldr	x8, [sp, #192]
  40a89c:	ldr	x1, [sp, #240]
  40a8a0:	ldr	x0, [x8]
  40a8a4:	bl	40f384 <feof@plt+0xc9b4>
  40a8a8:	ldr	x8, [sp, #192]
  40a8ac:	mov	w9, #0xfffffffe            	// #-2
  40a8b0:	str	w9, [sp, #204]
  40a8b4:	ldr	x1, [sp, #224]
  40a8b8:	ldr	x0, [x8]
  40a8bc:	bl	40f384 <feof@plt+0xc9b4>
  40a8c0:	ldr	x0, [sp, #144]
  40a8c4:	ldr	x1, [x20, #16]
  40a8c8:	bl	40f384 <feof@plt+0xc9b4>
  40a8cc:	ldr	w8, [sp, #204]
  40a8d0:	cmn	w8, #0x1
  40a8d4:	b.eq	40a688 <feof@plt+0x7cb8>  // b.none
  40a8d8:	ldr	x8, [sp, #192]
  40a8dc:	ldr	x1, [sp, #240]
  40a8e0:	ldr	x0, [x8]
  40a8e4:	bl	40f384 <feof@plt+0xc9b4>
  40a8e8:	mov	w8, #0xffffffff            	// #-1
  40a8ec:	str	w8, [sp, #204]
  40a8f0:	b	40a688 <feof@plt+0x7cb8>
  40a8f4:	mov	w21, wzr
  40a8f8:	ldr	x0, [sp, #144]
  40a8fc:	cmp	w21, w8
  40a900:	b.ge	40a920 <feof@plt+0x7f50>  // b.tcont
  40a904:	mov	w1, #0x20                  	// #32
  40a908:	bl	40d5a0 <feof@plt+0xabd0>
  40a90c:	ldr	w8, [sp, #280]
  40a910:	ldr	x0, [sp, #144]
  40a914:	add	w21, w21, #0x1
  40a918:	cmp	w21, w8
  40a91c:	b.lt	40a904 <feof@plt+0x7f34>  // b.tstop
  40a920:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40a924:	add	x1, x1, #0xd6a
  40a928:	bl	40f384 <feof@plt+0xc9b4>
  40a92c:	ldr	w27, [sp, #284]
  40a930:	cmp	w27, w23
  40a934:	b.ge	40a954 <feof@plt+0x7f84>  // b.tcont
  40a938:	sub	w21, w23, w27
  40a93c:	ldr	x0, [sp, #144]
  40a940:	mov	w1, #0x20                  	// #32
  40a944:	bl	40d5a0 <feof@plt+0xabd0>
  40a948:	subs	w21, w21, #0x1
  40a94c:	b.ne	40a93c <feof@plt+0x7f6c>  // b.any
  40a950:	mov	w27, w23
  40a954:	ldr	w8, [sp, #204]
  40a958:	cmn	w8, #0x3
  40a95c:	b.eq	40a990 <feof@plt+0x7fc0>  // b.none
  40a960:	cmn	w8, #0x1
  40a964:	b.eq	40a978 <feof@plt+0x7fa8>  // b.none
  40a968:	ldr	x8, [sp, #192]
  40a96c:	ldr	x1, [sp, #240]
  40a970:	ldr	x0, [x8]
  40a974:	bl	40f384 <feof@plt+0xc9b4>
  40a978:	ldr	x8, [sp, #192]
  40a97c:	mov	w9, #0xfffffffd            	// #-3
  40a980:	str	w9, [sp, #204]
  40a984:	ldr	x1, [sp, #232]
  40a988:	ldr	x0, [x8]
  40a98c:	bl	40f384 <feof@plt+0xc9b4>
  40a990:	cmp	w27, w28
  40a994:	b.le	40a9a0 <feof@plt+0x7fd0>
  40a998:	mov	w21, w27
  40a99c:	b	40a9bc <feof@plt+0x7fec>
  40a9a0:	ldr	x0, [sp, #144]
  40a9a4:	mov	w1, #0x2d                  	// #45
  40a9a8:	bl	40d5a0 <feof@plt+0xabd0>
  40a9ac:	add	w21, w27, #0x1
  40a9b0:	cmp	w27, w28
  40a9b4:	mov	w27, w21
  40a9b8:	b.lt	40a9a0 <feof@plt+0x7fd0>  // b.tstop
  40a9bc:	ldr	w8, [sp, #204]
  40a9c0:	cmn	w8, #0x1
  40a9c4:	b.eq	40a9e0 <feof@plt+0x8010>  // b.none
  40a9c8:	ldr	x8, [sp, #192]
  40a9cc:	ldr	x1, [sp, #240]
  40a9d0:	ldr	x0, [x8]
  40a9d4:	bl	40f384 <feof@plt+0xc9b4>
  40a9d8:	mov	w8, #0xffffffff            	// #-1
  40a9dc:	str	w8, [sp, #204]
  40a9e0:	mov	x28, x20
  40a9e4:	ldr	x8, [x28, #24]!
  40a9e8:	cbz	x8, 40a694 <feof@plt+0x7cc4>
  40a9ec:	cmp	w21, w23
  40a9f0:	b.le	40aa98 <feof@plt+0x80c8>
  40a9f4:	ldr	w8, [sp, #204]
  40a9f8:	cmn	w8, #0x1
  40a9fc:	b.eq	40aa18 <feof@plt+0x8048>  // b.none
  40aa00:	ldr	x8, [sp, #192]
  40aa04:	ldr	x1, [sp, #240]
  40aa08:	ldr	x0, [x8]
  40aa0c:	bl	40f384 <feof@plt+0xc9b4>
  40aa10:	mov	w8, #0xffffffff            	// #-1
  40aa14:	str	w8, [sp, #204]
  40aa18:	ldr	x0, [sp, #144]
  40aa1c:	bl	40fd08 <feof@plt+0xd338>
  40aa20:	ldrb	w8, [sp, #250]
  40aa24:	cbz	w8, 40aa94 <feof@plt+0x80c4>
  40aa28:	ldr	w8, [sp, #280]
  40aa2c:	cmp	w8, #0x4
  40aa30:	b.lt	40aa5c <feof@plt+0x808c>  // b.tstop
  40aa34:	mov	w21, wzr
  40aa38:	ldr	x0, [sp, #144]
  40aa3c:	mov	w1, #0x20                  	// #32
  40aa40:	bl	40d5a0 <feof@plt+0xabd0>
  40aa44:	ldr	w8, [sp, #280]
  40aa48:	add	w21, w21, #0x1
  40aa4c:	sub	w9, w8, #0x3
  40aa50:	cmp	w21, w9
  40aa54:	b.lt	40aa38 <feof@plt+0x8068>  // b.tstop
  40aa58:	b	40aa60 <feof@plt+0x8090>
  40aa5c:	mov	w21, wzr
  40aa60:	ldr	x0, [sp, #144]
  40aa64:	cmp	w21, w8
  40aa68:	b.ge	40aa88 <feof@plt+0x80b8>  // b.tcont
  40aa6c:	mov	w1, #0x20                  	// #32
  40aa70:	bl	40d5a0 <feof@plt+0xabd0>
  40aa74:	ldr	w8, [sp, #280]
  40aa78:	ldr	x0, [sp, #144]
  40aa7c:	add	w21, w21, #0x1
  40aa80:	cmp	w21, w8
  40aa84:	b.lt	40aa6c <feof@plt+0x809c>  // b.tstop
  40aa88:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40aa8c:	add	x1, x1, #0xd6a
  40aa90:	bl	40f384 <feof@plt+0xc9b4>
  40aa94:	ldr	w21, [sp, #284]
  40aa98:	cmp	w21, w23
  40aa9c:	b.ge	40aac0 <feof@plt+0x80f0>  // b.tcont
  40aaa0:	sub	w21, w23, w21
  40aaa4:	ldr	x0, [sp, #144]
  40aaa8:	mov	w1, #0x20                  	// #32
  40aaac:	bl	40d5a0 <feof@plt+0xabd0>
  40aab0:	subs	w21, w21, #0x1
  40aab4:	b.ne	40aaa4 <feof@plt+0x80d4>  // b.any
  40aab8:	mov	w27, w23
  40aabc:	b	40aac4 <feof@plt+0x80f4>
  40aac0:	mov	w27, w21
  40aac4:	ldr	w8, [sp, #204]
  40aac8:	cmn	w8, #0x2
  40aacc:	b.eq	40ab00 <feof@plt+0x8130>  // b.none
  40aad0:	cmn	w8, #0x1
  40aad4:	b.eq	40aae8 <feof@plt+0x8118>  // b.none
  40aad8:	ldr	x8, [sp, #192]
  40aadc:	ldr	x1, [sp, #240]
  40aae0:	ldr	x0, [x8]
  40aae4:	bl	40f384 <feof@plt+0xc9b4>
  40aae8:	ldr	x8, [sp, #192]
  40aaec:	mov	w9, #0xfffffffe            	// #-2
  40aaf0:	str	w9, [sp, #204]
  40aaf4:	ldr	x1, [sp, #224]
  40aaf8:	ldr	x0, [x8]
  40aafc:	bl	40f384 <feof@plt+0xc9b4>
  40ab00:	ldr	x0, [sp, #144]
  40ab04:	ldr	x1, [x20, #16]
  40ab08:	bl	40f384 <feof@plt+0xc9b4>
  40ab0c:	ldr	w8, [sp, #204]
  40ab10:	cmn	w8, #0x1
  40ab14:	b.eq	40a68c <feof@plt+0x7cbc>  // b.none
  40ab18:	ldr	x8, [sp, #192]
  40ab1c:	ldr	x1, [sp, #240]
  40ab20:	ldr	x0, [x8]
  40ab24:	bl	40f384 <feof@plt+0xc9b4>
  40ab28:	mov	w8, #0xffffffff            	// #-1
  40ab2c:	str	w8, [sp, #204]
  40ab30:	b	40a68c <feof@plt+0x7cbc>
  40ab34:	mov	w21, w27
  40ab38:	cmp	w21, #0x1
  40ab3c:	b.lt	40ab70 <feof@plt+0x81a0>  // b.tstop
  40ab40:	ldr	w8, [sp, #204]
  40ab44:	cmn	w8, #0x1
  40ab48:	b.eq	40ab64 <feof@plt+0x8194>  // b.none
  40ab4c:	ldr	x8, [sp, #192]
  40ab50:	ldr	x1, [sp, #240]
  40ab54:	ldr	x0, [x8]
  40ab58:	bl	40f384 <feof@plt+0xc9b4>
  40ab5c:	mov	w8, #0xffffffff            	// #-1
  40ab60:	str	w8, [sp, #204]
  40ab64:	ldr	x0, [sp, #144]
  40ab68:	bl	40fd08 <feof@plt+0xd338>
  40ab6c:	ldr	w21, [sp, #284]
  40ab70:	tbz	w21, #31, 40ab90 <feof@plt+0x81c0>
  40ab74:	sub	w19, w21, #0x1
  40ab78:	ldr	x0, [sp, #144]
  40ab7c:	mov	w1, #0x20                  	// #32
  40ab80:	bl	40d5a0 <feof@plt+0xabd0>
  40ab84:	add	w19, w19, #0x1
  40ab88:	cmn	w19, #0x1
  40ab8c:	b.lt	40ab78 <feof@plt+0x81a8>  // b.tstop
  40ab90:	cbz	x24, 409748 <feof@plt+0x6d78>
  40ab94:	mov	x20, xzr
  40ab98:	b	40aba4 <feof@plt+0x81d4>
  40ab9c:	add	x20, x20, #0x1
  40aba0:	cbz	x24, 409748 <feof@plt+0x6d78>
  40aba4:	ldr	w8, [x24, #4]
  40aba8:	cmp	x20, x8
  40abac:	b.cs	409738 <feof@plt+0x6d68>  // b.hs, b.nlast
  40abb0:	add	x8, x24, x20, lsl #3
  40abb4:	ldr	x19, [x8, #8]
  40abb8:	cbz	x19, 40ab9c <feof@plt+0x81cc>
  40abbc:	ldr	x0, [x19, #16]
  40abc0:	bl	4024c0 <free@plt>
  40abc4:	mov	x0, x19
  40abc8:	bl	402670 <_ZdlPv@plt>
  40abcc:	b	40ab9c <feof@plt+0x81cc>
  40abd0:	mov	w19, #0x2                   	// #2
  40abd4:	b	409f7c <feof@plt+0x75ac>
  40abd8:	ldr	x0, [x23]
  40abdc:	ldr	x1, [sp]
  40abe0:	bl	40f800 <feof@plt+0xce30>
  40abe4:	ldr	x0, [sp, #272]
  40abe8:	cbz	x0, 40abfc <feof@plt+0x822c>
  40abec:	ldr	w8, [x0]
  40abf0:	tbnz	w8, #31, 40ac18 <feof@plt+0x8248>
  40abf4:	bl	4024c0 <free@plt>
  40abf8:	str	xzr, [sp, #272]
  40abfc:	ldr	x0, [sp, #264]
  40ac00:	cbz	x0, 40ac2c <feof@plt+0x825c>
  40ac04:	ldr	w8, [x0]
  40ac08:	tbnz	w8, #31, 40ac28 <feof@plt+0x8258>
  40ac0c:	bl	4024c0 <free@plt>
  40ac10:	str	xzr, [sp, #264]
  40ac14:	b	40ac2c <feof@plt+0x825c>
  40ac18:	str	wzr, [x0, #4]
  40ac1c:	ldr	x0, [sp, #264]
  40ac20:	cbnz	x0, 40ac04 <feof@plt+0x8234>
  40ac24:	b	40ac2c <feof@plt+0x825c>
  40ac28:	str	wzr, [x0, #4]
  40ac2c:	ldr	x0, [sp, #256]
  40ac30:	cbz	x0, 40ac4c <feof@plt+0x827c>
  40ac34:	ldr	w8, [x0]
  40ac38:	tbnz	w8, #31, 40ac48 <feof@plt+0x8278>
  40ac3c:	bl	4024c0 <free@plt>
  40ac40:	str	xzr, [sp, #256]
  40ac44:	b	40ac4c <feof@plt+0x827c>
  40ac48:	str	wzr, [x0, #4]
  40ac4c:	ldr	w8, [sp, #204]
  40ac50:	cmn	w8, #0x1
  40ac54:	b.eq	40ac68 <feof@plt+0x8298>  // b.none
  40ac58:	ldr	x8, [sp, #192]
  40ac5c:	ldr	x1, [sp, #240]
  40ac60:	ldr	x0, [x8]
  40ac64:	bl	40f384 <feof@plt+0xc9b4>
  40ac68:	ldp	x20, x19, [sp, #416]
  40ac6c:	ldp	x22, x21, [sp, #400]
  40ac70:	ldp	x24, x23, [sp, #384]
  40ac74:	ldp	x26, x25, [sp, #368]
  40ac78:	ldp	x28, x27, [sp, #352]
  40ac7c:	ldp	x29, x30, [sp, #336]
  40ac80:	add	sp, sp, #0x1b0
  40ac84:	ret
  40ac88:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ac8c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ac90:	add	x0, x0, #0xd22
  40ac94:	add	x2, x2, #0xe2b
  40ac98:	mov	w1, #0x609                 	// #1545
  40ac9c:	bl	404ac4 <feof@plt+0x20f4>
  40aca0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40aca4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40aca8:	add	x0, x0, #0xd22
  40acac:	add	x2, x2, #0xe45
  40acb0:	mov	w1, #0x6bc                 	// #1724
  40acb4:	bl	404ac4 <feof@plt+0x20f4>
  40acb8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40acbc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40acc0:	add	x0, x0, #0xd22
  40acc4:	add	x2, x2, #0xdb8
  40acc8:	mov	w1, #0x638                 	// #1592
  40accc:	bl	404ac4 <feof@plt+0x20f4>
  40acd0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40acd4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40acd8:	add	x0, x0, #0xd22
  40acdc:	add	x2, x2, #0xe2b
  40ace0:	mov	w1, #0x612                 	// #1554
  40ace4:	bl	404ac4 <feof@plt+0x20f4>
  40ace8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40acec:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40acf0:	add	x0, x0, #0xd22
  40acf4:	add	x2, x2, #0xe19
  40acf8:	mov	w1, #0x215                 	// #533
  40acfc:	bl	404ac4 <feof@plt+0x20f4>
  40ad00:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad04:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad08:	add	x0, x0, #0xd22
  40ad0c:	add	x2, x2, #0xe3c
  40ad10:	mov	w1, #0x77b                 	// #1915
  40ad14:	bl	404ac4 <feof@plt+0x20f4>
  40ad18:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad1c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad20:	add	x0, x0, #0xd22
  40ad24:	add	x2, x2, #0xe3c
  40ad28:	mov	w1, #0x77d                 	// #1917
  40ad2c:	bl	404ac4 <feof@plt+0x20f4>
  40ad30:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad34:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad38:	add	x0, x0, #0xd22
  40ad3c:	add	x2, x2, #0xe3c
  40ad40:	mov	w1, #0x792                 	// #1938
  40ad44:	bl	404ac4 <feof@plt+0x20f4>
  40ad48:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad4c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad50:	add	x0, x0, #0xd22
  40ad54:	add	x2, x2, #0xe3c
  40ad58:	mov	w1, #0x794                 	// #1940
  40ad5c:	bl	404ac4 <feof@plt+0x20f4>
  40ad60:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad64:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad68:	add	x0, x0, #0xd22
  40ad6c:	add	x2, x2, #0xe3c
  40ad70:	mov	w1, #0x796                 	// #1942
  40ad74:	bl	404ac4 <feof@plt+0x20f4>
  40ad78:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad7c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad80:	add	x0, x0, #0xe5c
  40ad84:	add	x2, x2, #0xe6e
  40ad88:	mov	w1, #0x44                  	// #68
  40ad8c:	bl	404ac4 <feof@plt+0x20f4>
  40ad90:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad94:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ad98:	add	x0, x0, #0xe5c
  40ad9c:	add	x2, x2, #0xe6e
  40ada0:	mov	w1, #0x45                  	// #69
  40ada4:	bl	404ac4 <feof@plt+0x20f4>
  40ada8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40adac:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40adb0:	add	x0, x0, #0xe5c
  40adb4:	add	x2, x2, #0xe6e
  40adb8:	mov	w1, #0x47                  	// #71
  40adbc:	bl	404ac4 <feof@plt+0x20f4>
  40adc0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40adc4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40adc8:	add	x0, x0, #0xd22
  40adcc:	add	x2, x2, #0xe52
  40add0:	mov	w1, #0x706                 	// #1798
  40add4:	bl	404ac4 <feof@plt+0x20f4>
  40add8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40addc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ade0:	add	x0, x0, #0xd22
  40ade4:	add	x2, x2, #0xe76
  40ade8:	mov	w1, #0x732                 	// #1842
  40adec:	bl	404ac4 <feof@plt+0x20f4>
  40adf0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40adf4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40adf8:	add	x0, x0, #0xd22
  40adfc:	add	x2, x2, #0xddf
  40ae00:	mov	w1, #0x2be                 	// #702
  40ae04:	bl	404ac4 <feof@plt+0x20f4>
  40ae08:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae0c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae10:	add	x0, x0, #0xd22
  40ae14:	add	x2, x2, #0xddf
  40ae18:	mov	w1, #0x2ba                 	// #698
  40ae1c:	bl	404ac4 <feof@plt+0x20f4>
  40ae20:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae24:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae28:	add	x0, x0, #0xd22
  40ae2c:	add	x2, x2, #0xda2
  40ae30:	mov	w1, #0x449                 	// #1097
  40ae34:	bl	404ac4 <feof@plt+0x20f4>
  40ae38:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae3c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae40:	add	x0, x0, #0xd22
  40ae44:	add	x2, x2, #0xddf
  40ae48:	mov	w1, #0x2b9                 	// #697
  40ae4c:	bl	404ac4 <feof@plt+0x20f4>
  40ae50:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae54:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40ae58:	add	x0, x0, #0xd22
  40ae5c:	add	x2, x2, #0xd86
  40ae60:	mov	w1, #0x408                 	// #1032
  40ae64:	bl	404ac4 <feof@plt+0x20f4>
  40ae68:	ldr	x8, [x0]
  40ae6c:	ldr	x9, [x1]
  40ae70:	ldr	w8, [x8]
  40ae74:	ldr	w9, [x9]
  40ae78:	sub	w0, w8, w9
  40ae7c:	ret
  40ae80:	ldr	w8, [x0]
  40ae84:	ldr	w9, [x1]
  40ae88:	sub	x10, x8, x9
  40ae8c:	cmp	x10, #0x0
  40ae90:	mov	w9, #0x1                   	// #1
  40ae94:	cneg	w8, w9, le
  40ae98:	cbz	x10, 40aea4 <feof@plt+0x84d4>
  40ae9c:	mov	w0, w8
  40aea0:	ret
  40aea4:	ldr	w8, [x0, #4]
  40aea8:	ldr	w10, [x1, #4]
  40aeac:	sub	x8, x8, x10
  40aeb0:	cmp	x8, #0x0
  40aeb4:	cneg	w8, w9, le
  40aeb8:	csel	w8, wzr, w8, eq  // eq = none
  40aebc:	mov	w0, w8
  40aec0:	ret
  40aec4:	stp	x29, x30, [sp, #-64]!
  40aec8:	str	x23, [sp, #16]
  40aecc:	stp	x22, x21, [sp, #32]
  40aed0:	stp	x20, x19, [sp, #48]
  40aed4:	mov	x29, sp
  40aed8:	mov	w19, w1
  40aedc:	mov	w20, w0
  40aee0:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x25a68>
  40aee4:	tbz	w20, #31, 40af18 <feof@plt+0x8548>
  40aee8:	ldr	x0, [x23, #1880]
  40aeec:	mov	w1, w20
  40aef0:	bl	429d00 <feof@plt+0x27330>
  40aef4:	mov	w20, w0
  40aef8:	tbz	w19, #31, 40af1c <feof@plt+0x854c>
  40aefc:	ldr	x0, [x23, #1880]
  40af00:	mov	w1, w19
  40af04:	bl	429d00 <feof@plt+0x27330>
  40af08:	mov	w19, w0
  40af0c:	cmp	w20, #0x2
  40af10:	b.cs	40af24 <feof@plt+0x8554>  // b.hs, b.nlast
  40af14:	b	40af98 <feof@plt+0x85c8>
  40af18:	tbnz	w19, #31, 40aefc <feof@plt+0x852c>
  40af1c:	cmp	w20, #0x2
  40af20:	b.cc	40af98 <feof@plt+0x85c8>  // b.lo, b.ul, b.last
  40af24:	cmp	w19, #0x1
  40af28:	b.ls	40af98 <feof@plt+0x85c8>  // b.plast
  40af2c:	ldr	x0, [x23, #1880]
  40af30:	mov	w1, w20
  40af34:	bl	429b2c <feof@plt+0x2715c>
  40af38:	ldr	x8, [x23, #1880]
  40af3c:	mov	x21, x0
  40af40:	mov	w1, w19
  40af44:	mov	x0, x8
  40af48:	bl	429b2c <feof@plt+0x2715c>
  40af4c:	mov	x22, x0
  40af50:	mov	x0, x21
  40af54:	bl	42ad54 <feof@plt+0x28384>
  40af58:	cmp	x21, x22
  40af5c:	b.ne	40afa0 <feof@plt+0x85d0>  // b.any
  40af60:	tbz	w0, #0, 40afb8 <feof@plt+0x85e8>
  40af64:	ldr	x0, [x23, #1880]
  40af68:	mov	x1, x21
  40af6c:	mov	w2, w20
  40af70:	bl	42ad6c <feof@plt+0x2839c>
  40af74:	ldr	x8, [x23, #1880]
  40af78:	mov	w20, w0
  40af7c:	mov	x1, x21
  40af80:	mov	w2, w19
  40af84:	mov	x0, x8
  40af88:	bl	42ad6c <feof@plt+0x2839c>
  40af8c:	mov	w19, w0
  40af90:	tbz	w20, #31, 40af18 <feof@plt+0x8548>
  40af94:	b	40aee8 <feof@plt+0x8518>
  40af98:	cmp	w20, w19
  40af9c:	b	40afcc <feof@plt+0x85fc>
  40afa0:	tbnz	w0, #0, 40afb0 <feof@plt+0x85e0>
  40afa4:	mov	x0, x22
  40afa8:	bl	42ad54 <feof@plt+0x28384>
  40afac:	tbz	w0, #0, 40afc0 <feof@plt+0x85f0>
  40afb0:	mov	w0, wzr
  40afb4:	b	40afd0 <feof@plt+0x8600>
  40afb8:	mov	w0, #0x1                   	// #1
  40afbc:	b	40afd0 <feof@plt+0x8600>
  40afc0:	ldr	x8, [x21, #8]
  40afc4:	ldr	x9, [x22, #8]
  40afc8:	cmp	x8, x9
  40afcc:	cset	w0, eq  // eq = none
  40afd0:	ldp	x20, x19, [sp, #48]
  40afd4:	ldp	x22, x21, [sp, #32]
  40afd8:	ldr	x23, [sp, #16]
  40afdc:	ldp	x29, x30, [sp], #64
  40afe0:	ret
  40afe4:	stp	x29, x30, [sp, #-48]!
  40afe8:	str	x21, [sp, #16]
  40afec:	stp	x20, x19, [sp, #32]
  40aff0:	mov	x29, sp
  40aff4:	ldr	w8, [x0, #12]
  40aff8:	cmp	w8, w1
  40affc:	b.ne	40b010 <feof@plt+0x8640>  // b.any
  40b000:	ldp	x20, x19, [sp, #32]
  40b004:	ldr	x21, [sp, #16]
  40b008:	ldp	x29, x30, [sp], #48
  40b00c:	ret
  40b010:	mov	x19, x0
  40b014:	mov	w20, w1
  40b018:	cmn	w8, #0x1
  40b01c:	b.eq	40b030 <feof@plt+0x8660>  // b.none
  40b020:	ldr	x8, [x19]
  40b024:	ldr	x1, [x19, #48]
  40b028:	ldr	x0, [x8]
  40b02c:	bl	40f384 <feof@plt+0xc9b4>
  40b030:	add	w8, w20, #0x3
  40b034:	cmp	w8, #0x5
  40b038:	str	w20, [x19, #12]
  40b03c:	b.hi	40b0d0 <feof@plt+0x8700>  // b.pmore
  40b040:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  40b044:	add	x9, x9, #0xd1c
  40b048:	adr	x10, 40b000 <feof@plt+0x8630>
  40b04c:	ldrb	w11, [x9, x8]
  40b050:	add	x10, x10, x11, lsl #2
  40b054:	br	x10
  40b058:	ldr	x8, [x19]
  40b05c:	ldr	x1, [x19, #40]
  40b060:	ldr	x0, [x8]
  40b064:	b	40b0f4 <feof@plt+0x8724>
  40b068:	ldr	x8, [x19]
  40b06c:	ldr	x1, [x19, #16]
  40b070:	ldr	x0, [x8]
  40b074:	b	40b0f4 <feof@plt+0x8724>
  40b078:	ldr	x8, [x19]
  40b07c:	ldr	x1, [x19, #32]
  40b080:	ldr	x0, [x8]
  40b084:	b	40b0f4 <feof@plt+0x8724>
  40b088:	ldr	x8, [x19]
  40b08c:	ldr	w0, [x19, #8]
  40b090:	ldr	x20, [x8]
  40b094:	ldrb	w21, [x20, #67]
  40b098:	bl	404b6c <feof@plt+0x219c>
  40b09c:	mov	x19, x0
  40b0a0:	bl	402420 <strlen@plt>
  40b0a4:	mov	x2, x0
  40b0a8:	mov	w0, w21
  40b0ac:	mov	x1, x19
  40b0b0:	bl	407b70 <feof@plt+0x51a0>
  40b0b4:	mov	x1, x0
  40b0b8:	mov	x0, x20
  40b0bc:	b	40b0f4 <feof@plt+0x8724>
  40b0c0:	ldr	x8, [x19]
  40b0c4:	ldr	x1, [x19, #24]
  40b0c8:	ldr	x0, [x8]
  40b0cc:	b	40b0f4 <feof@plt+0x8724>
  40b0d0:	cmp	w20, #0x2
  40b0d4:	b.le	40b104 <feof@plt+0x8734>
  40b0d8:	ldr	x8, [x19]
  40b0dc:	tst	w20, #0x1
  40b0e0:	mov	w9, #0x10                  	// #16
  40b0e4:	mov	w10, #0x18                  	// #24
  40b0e8:	csel	x9, x10, x9, eq  // eq = none
  40b0ec:	ldr	x0, [x8]
  40b0f0:	ldr	x1, [x19, x9]
  40b0f4:	ldp	x20, x19, [sp, #32]
  40b0f8:	ldr	x21, [sp, #16]
  40b0fc:	ldp	x29, x30, [sp], #48
  40b100:	b	40f384 <feof@plt+0xc9b4>
  40b104:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b108:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b10c:	add	x0, x0, #0xd22
  40b110:	add	x2, x2, #0xdcd
  40b114:	mov	w1, #0x17f                 	// #383
  40b118:	bl	404ac4 <feof@plt+0x20f4>
  40b11c:	stp	x29, x30, [sp, #-16]!
  40b120:	mov	x29, sp
  40b124:	ldr	x11, [x0, #120]
  40b128:	cbz	x11, 40b1dc <feof@plt+0x880c>
  40b12c:	ldr	w10, [x11, #4]
  40b130:	cbz	w10, 40b1dc <feof@plt+0x880c>
  40b134:	mov	x9, xzr
  40b138:	add	x8, x11, #0x8
  40b13c:	add	x11, x11, #0x30
  40b140:	b	40b164 <feof@plt+0x8794>
  40b144:	ldr	w12, [x8, #12]
  40b148:	cmp	w12, w2
  40b14c:	b.ge	40b1f0 <feof@plt+0x8820>  // b.tcont
  40b150:	add	x9, x9, #0x1
  40b154:	cmp	x9, x10
  40b158:	csel	x8, x11, xzr, cc  // cc = lo, ul, last
  40b15c:	add	x11, x11, #0x28
  40b160:	b.cs	40b1dc <feof@plt+0x880c>  // b.hs, b.nlast
  40b164:	ldr	w12, [x8, #16]
  40b168:	cmp	w12, #0x2
  40b16c:	b.eq	40b150 <feof@plt+0x8780>  // b.none
  40b170:	ldr	w13, [x8]
  40b174:	ldr	w12, [x8, #8]
  40b178:	cmp	w13, w12
  40b17c:	b.hi	40b244 <feof@plt+0x8874>  // b.pmore
  40b180:	cmp	w13, w1
  40b184:	b.hi	40b150 <feof@plt+0x8780>  // b.pmore
  40b188:	b.ne	40b1a8 <feof@plt+0x87d8>  // b.any
  40b18c:	ldr	w13, [x8, #4]
  40b190:	cmp	w13, w2
  40b194:	b.gt	40b150 <feof@plt+0x8780>
  40b198:	cmp	w12, w1
  40b19c:	b.hi	40b1f0 <feof@plt+0x8820>  // b.pmore
  40b1a0:	b.eq	40b144 <feof@plt+0x8774>  // b.none
  40b1a4:	b	40b274 <feof@plt+0x88a4>
  40b1a8:	cmp	w13, w1
  40b1ac:	b.cs	40b25c <feof@plt+0x888c>  // b.hs, b.nlast
  40b1b0:	cmp	w12, w1
  40b1b4:	b.cc	40b150 <feof@plt+0x8780>  // b.lo, b.ul, b.last
  40b1b8:	b.hi	40b1e8 <feof@plt+0x8818>  // b.pmore
  40b1bc:	cmp	w12, w1
  40b1c0:	b.eq	40b144 <feof@plt+0x8774>  // b.none
  40b1c4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b1c8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b1cc:	add	x0, x0, #0xd22
  40b1d0:	add	x2, x2, #0xe0a
  40b1d4:	mov	w1, #0x20b                 	// #523
  40b1d8:	bl	404ac4 <feof@plt+0x20f4>
  40b1dc:	mov	w0, wzr
  40b1e0:	ldp	x29, x30, [sp], #16
  40b1e4:	ret
  40b1e8:	cmp	w13, w12
  40b1ec:	b.cs	40b28c <feof@plt+0x88bc>  // b.hs, b.nlast
  40b1f0:	str	w9, [x5]
  40b1f4:	strb	wzr, [x5, #4]
  40b1f8:	ldr	w9, [x8, #16]
  40b1fc:	cbnz	w9, 40b224 <feof@plt+0x8854>
  40b200:	ldr	w9, [x8, #20]
  40b204:	cmp	w9, w1
  40b208:	b.ne	40b224 <feof@plt+0x8854>  // b.any
  40b20c:	ldr	w8, [x8, #24]
  40b210:	cmp	w8, w2
  40b214:	b.ne	40b224 <feof@plt+0x8854>  // b.any
  40b218:	mov	w8, #0x1                   	// #1
  40b21c:	strb	w8, [x5, #4]
  40b220:	b	40b238 <feof@plt+0x8868>
  40b224:	cmp	w2, w3
  40b228:	mov	w0, wzr
  40b22c:	b.lt	40b1e0 <feof@plt+0x8810>  // b.tstop
  40b230:	cmp	w2, w4
  40b234:	b.gt	40b1e0 <feof@plt+0x8810>
  40b238:	mov	w0, #0x1                   	// #1
  40b23c:	ldp	x29, x30, [sp], #16
  40b240:	ret
  40b244:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b248:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b24c:	add	x0, x0, #0xd22
  40b250:	add	x2, x2, #0xe0a
  40b254:	mov	w1, #0x1d8                 	// #472
  40b258:	bl	404ac4 <feof@plt+0x20f4>
  40b25c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b260:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b264:	add	x0, x0, #0xd22
  40b268:	add	x2, x2, #0xe0a
  40b26c:	mov	w1, #0x1fb                 	// #507
  40b270:	bl	404ac4 <feof@plt+0x20f4>
  40b274:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b278:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b27c:	add	x0, x0, #0xd22
  40b280:	add	x2, x2, #0xe0a
  40b284:	mov	w1, #0x1f3                 	// #499
  40b288:	bl	404ac4 <feof@plt+0x20f4>
  40b28c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b290:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b294:	add	x0, x0, #0xd22
  40b298:	add	x2, x2, #0xe0a
  40b29c:	mov	w1, #0x207                 	// #519
  40b2a0:	bl	404ac4 <feof@plt+0x20f4>
  40b2a4:	ldr	w8, [x0, #4]
  40b2a8:	ldr	w9, [x1, #4]
  40b2ac:	sub	x10, x8, x9
  40b2b0:	cmp	x10, #0x0
  40b2b4:	mov	w9, #0x1                   	// #1
  40b2b8:	cneg	w8, w9, le
  40b2bc:	cbz	x10, 40b2c8 <feof@plt+0x88f8>
  40b2c0:	mov	w0, w8
  40b2c4:	ret
  40b2c8:	ldr	w8, [x0]
  40b2cc:	ldr	w10, [x1]
  40b2d0:	sub	x8, x8, x10
  40b2d4:	cmp	x8, #0x0
  40b2d8:	cneg	w8, w9, le
  40b2dc:	csel	w8, wzr, w8, eq  // eq = none
  40b2e0:	mov	w0, w8
  40b2e4:	ret
  40b2e8:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x330>
  40b2ec:	adrp	x10, 40b000 <feof@plt+0x8630>
  40b2f0:	mov	w8, #0x1                   	// #1
  40b2f4:	add	x9, x9, #0x820
  40b2f8:	add	x10, x10, #0x30c
  40b2fc:	strb	w8, [x0]
  40b300:	stp	xzr, x9, [x0, #8]
  40b304:	stp	xzr, x10, [x0, #24]
  40b308:	ret
  40b30c:	cbz	x0, 40b338 <feof@plt+0x8968>
  40b310:	stp	x29, x30, [sp, #-32]!
  40b314:	str	x19, [sp, #16]
  40b318:	mov	x29, sp
  40b31c:	mov	x19, x0
  40b320:	ldr	x1, [x0, #8]!
  40b324:	bl	40d074 <feof@plt+0xa6a4>
  40b328:	mov	x0, x19
  40b32c:	ldr	x19, [sp, #16]
  40b330:	ldp	x29, x30, [sp], #32
  40b334:	b	402670 <_ZdlPv@plt>
  40b338:	ret
  40b33c:	stp	x29, x30, [sp, #-48]!
  40b340:	str	x21, [sp, #16]
  40b344:	stp	x20, x19, [sp, #32]
  40b348:	mov	x29, sp
  40b34c:	ldrb	w8, [x0]
  40b350:	cbz	w8, 40b368 <feof@plt+0x8998>
  40b354:	ldrb	w8, [x1, #160]
  40b358:	mov	x19, x0
  40b35c:	mov	x20, x1
  40b360:	cbz	w8, 40b378 <feof@plt+0x89a8>
  40b364:	strb	wzr, [x19]
  40b368:	ldp	x20, x19, [sp, #32]
  40b36c:	ldr	x21, [sp, #16]
  40b370:	ldp	x29, x30, [sp], #48
  40b374:	ret
  40b378:	ldr	w8, [x20, #120]
  40b37c:	cbz	w8, 40b368 <feof@plt+0x8998>
  40b380:	mov	w21, wzr
  40b384:	b	40b398 <feof@plt+0x89c8>
  40b388:	ldr	w8, [x20, #120]
  40b38c:	add	w21, w21, #0x1
  40b390:	cmp	w21, w8
  40b394:	b.cs	40b368 <feof@plt+0x8998>  // b.hs, b.nlast
  40b398:	cmp	w21, #0x1
  40b39c:	b.gt	40b3ac <feof@plt+0x89dc>
  40b3a0:	add	x8, x20, w21, sxtw #3
  40b3a4:	add	x8, x8, #0x80
  40b3a8:	b	40b3b8 <feof@plt+0x89e8>
  40b3ac:	ldr	x8, [x20, #152]
  40b3b0:	sub	w9, w21, #0x2
  40b3b4:	add	x8, x8, w9, sxtw #3
  40b3b8:	ldr	x1, [x8]
  40b3bc:	mov	x0, x19
  40b3c0:	bl	40b3d0 <feof@plt+0x8a00>
  40b3c4:	tbnz	w0, #0, 40b388 <feof@plt+0x89b8>
  40b3c8:	strb	wzr, [x19]
  40b3cc:	b	40b388 <feof@plt+0x89b8>
  40b3d0:	sub	sp, sp, #0x70
  40b3d4:	stp	x29, x30, [sp, #64]
  40b3d8:	stp	x22, x21, [sp, #80]
  40b3dc:	stp	x20, x19, [sp, #96]
  40b3e0:	add	x29, sp, #0x40
  40b3e4:	ldr	w9, [x1]
  40b3e8:	mov	x20, x0
  40b3ec:	add	x8, sp, #0x20
  40b3f0:	mov	x19, x1
  40b3f4:	mov	w0, w9
  40b3f8:	bl	413104 <feof@plt+0x10734>
  40b3fc:	ldr	w0, [x19, #4]
  40b400:	mov	x8, sp
  40b404:	bl	413104 <feof@plt+0x10734>
  40b408:	ldr	x1, [sp, #32]
  40b40c:	ldr	x8, [sp]
  40b410:	cmp	x1, x8
  40b414:	b.ne	40b474 <feof@plt+0x8aa4>  // b.any
  40b418:	ldr	w8, [sp, #40]
  40b41c:	ldr	w9, [sp, #8]
  40b420:	cmp	w8, w9
  40b424:	b.ne	40b474 <feof@plt+0x8aa4>  // b.any
  40b428:	ldr	w8, [sp, #44]
  40b42c:	cbz	w8, 40b474 <feof@plt+0x8aa4>
  40b430:	ldr	w8, [sp, #12]
  40b434:	cbz	w8, 40b474 <feof@plt+0x8aa4>
  40b438:	mov	x0, x20
  40b43c:	bl	40b508 <feof@plt+0x8b38>
  40b440:	ldrb	w8, [x20]
  40b444:	cbz	w8, 40b474 <feof@plt+0x8aa4>
  40b448:	ldp	w1, w20, [sp, #40]
  40b44c:	ldr	w21, [sp, #12]
  40b450:	ldp	x22, x19, [x19, #8]
  40b454:	bl	40bcdc <feof@plt+0x930c>
  40b458:	cbz	x0, 40b478 <feof@plt+0x8aa8>
  40b45c:	mov	w1, w20
  40b460:	mov	w2, w21
  40b464:	mov	x3, x22
  40b468:	mov	w4, w19
  40b46c:	bl	40bebc <feof@plt+0x94ec>
  40b470:	b	40b478 <feof@plt+0x8aa8>
  40b474:	mov	w0, wzr
  40b478:	ldp	x20, x19, [sp, #96]
  40b47c:	ldp	x22, x21, [sp, #80]
  40b480:	ldp	x29, x30, [sp, #64]
  40b484:	and	w0, w0, #0x1
  40b488:	add	sp, sp, #0x70
  40b48c:	ret
  40b490:	sub	sp, sp, #0x70
  40b494:	stp	x29, x30, [sp, #80]
  40b498:	str	x19, [sp, #96]
  40b49c:	add	x29, sp, #0x50
  40b4a0:	ldrb	w8, [x0]
  40b4a4:	cbz	w8, 40b4e0 <feof@plt+0x8b10>
  40b4a8:	bl	40b508 <feof@plt+0x8b38>
  40b4ac:	mov	x19, x0
  40b4b0:	add	x0, sp, #0x8
  40b4b4:	mov	w1, wzr
  40b4b8:	bl	40f9b8 <feof@plt+0xcfe8>
  40b4bc:	add	x1, sp, #0x8
  40b4c0:	mov	x0, x19
  40b4c4:	bl	40bb1c <feof@plt+0x914c>
  40b4c8:	tbz	w0, #0, 40b4e8 <feof@plt+0x8b18>
  40b4cc:	add	x0, sp, #0x8
  40b4d0:	bl	40d714 <feof@plt+0xad44>
  40b4d4:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  40b4d8:	mov	x19, x0
  40b4dc:	b	40b4ec <feof@plt+0x8b1c>
  40b4e0:	mov	x19, xzr
  40b4e4:	b	40b4f4 <feof@plt+0x8b24>
  40b4e8:	mov	x19, xzr
  40b4ec:	add	x0, sp, #0x8
  40b4f0:	bl	40fabc <feof@plt+0xd0ec>
  40b4f4:	mov	x0, x19
  40b4f8:	ldr	x19, [sp, #96]
  40b4fc:	ldp	x29, x30, [sp, #80]
  40b500:	add	sp, sp, #0x70
  40b504:	ret
  40b508:	stp	x29, x30, [sp, #-64]!
  40b50c:	stp	x24, x23, [sp, #16]
  40b510:	stp	x22, x21, [sp, #32]
  40b514:	stp	x20, x19, [sp, #48]
  40b518:	mov	x29, sp
  40b51c:	cbz	x1, 40b648 <feof@plt+0x8c78>
  40b520:	add	x19, x0, #0x8
  40b524:	mov	x22, x0
  40b528:	mov	x0, x19
  40b52c:	mov	x21, x1
  40b530:	bl	40d16c <feof@plt+0xa79c>
  40b534:	ldr	x8, [x22, #8]
  40b538:	cbz	x8, 40b550 <feof@plt+0x8b80>
  40b53c:	ldr	x9, [x22, #16]
  40b540:	ldr	x0, [x8]
  40b544:	mov	x1, x21
  40b548:	blr	x9
  40b54c:	cbz	w0, 40b600 <feof@plt+0x8c30>
  40b550:	mov	w0, #0x30                  	// #48
  40b554:	bl	4026a0 <_Znwm@plt>
  40b558:	adrp	x8, 40b000 <feof@plt+0x8630>
  40b55c:	adrp	x9, 40b000 <feof@plt+0x8630>
  40b560:	add	x8, x8, #0xae8
  40b564:	add	x9, x9, #0xaf0
  40b568:	mov	w10, #0xffffffff            	// #-1
  40b56c:	mov	x20, x0
  40b570:	stp	x21, xzr, [x0]
  40b574:	stp	x8, xzr, [x0, #16]
  40b578:	str	x9, [x0, #32]
  40b57c:	str	w10, [x0, #40]
  40b580:	mov	x0, x19
  40b584:	mov	x1, x21
  40b588:	bl	40d16c <feof@plt+0xa79c>
  40b58c:	ldr	x8, [x19]
  40b590:	cbz	x8, 40b5d0 <feof@plt+0x8c00>
  40b594:	ldr	x9, [x22, #16]
  40b598:	ldr	x0, [x8]
  40b59c:	mov	x1, x21
  40b5a0:	blr	x9
  40b5a4:	ldr	x24, [x22, #8]
  40b5a8:	mov	w23, w0
  40b5ac:	cbnz	w0, 40b5d8 <feof@plt+0x8c08>
  40b5b0:	cbz	x24, 40b5d8 <feof@plt+0x8c08>
  40b5b4:	ldr	x8, [x22, #32]
  40b5b8:	cbz	x8, 40b5c8 <feof@plt+0x8bf8>
  40b5bc:	ldr	x0, [x24, #8]
  40b5c0:	blr	x8
  40b5c4:	ldr	x24, [x19]
  40b5c8:	str	x20, [x24, #8]
  40b5cc:	b	40b630 <feof@plt+0x8c60>
  40b5d0:	mov	w23, wzr
  40b5d4:	mov	x24, xzr
  40b5d8:	mov	w0, #0x28                  	// #40
  40b5dc:	bl	4026a0 <_Znwm@plt>
  40b5e0:	stp	x21, x20, [x0]
  40b5e4:	cbz	x24, 40b614 <feof@plt+0x8c44>
  40b5e8:	tbnz	w23, #31, 40b61c <feof@plt+0x8c4c>
  40b5ec:	str	x24, [x0, #24]
  40b5f0:	ldr	x8, [x24, #16]
  40b5f4:	str	x8, [x0, #16]
  40b5f8:	str	xzr, [x24, #16]
  40b5fc:	b	40b62c <feof@plt+0x8c5c>
  40b600:	ldr	x8, [x19]
  40b604:	cbz	x8, 40b550 <feof@plt+0x8b80>
  40b608:	ldr	x20, [x8, #8]
  40b60c:	cbnz	x20, 40b630 <feof@plt+0x8c60>
  40b610:	b	40b550 <feof@plt+0x8b80>
  40b614:	stp	xzr, xzr, [x0, #16]
  40b618:	b	40b62c <feof@plt+0x8c5c>
  40b61c:	str	x24, [x0, #16]
  40b620:	ldr	x8, [x24, #24]
  40b624:	str	x8, [x0, #24]
  40b628:	str	xzr, [x24, #24]
  40b62c:	str	x0, [x19]
  40b630:	mov	x0, x20
  40b634:	ldp	x20, x19, [sp, #48]
  40b638:	ldp	x22, x21, [sp, #32]
  40b63c:	ldp	x24, x23, [sp, #16]
  40b640:	ldp	x29, x30, [sp], #64
  40b644:	ret
  40b648:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b64c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b650:	add	x0, x0, #0xe88
  40b654:	add	x2, x2, #0xeaa
  40b658:	mov	w1, #0x149                 	// #329
  40b65c:	bl	404ac4 <feof@plt+0x20f4>
  40b660:	sub	sp, sp, #0x70
  40b664:	stp	x29, x30, [sp, #80]
  40b668:	str	x19, [sp, #96]
  40b66c:	add	x29, sp, #0x50
  40b670:	mov	x19, x0
  40b674:	add	x0, sp, #0x8
  40b678:	mov	w1, wzr
  40b67c:	bl	40f9b8 <feof@plt+0xcfe8>
  40b680:	add	x1, sp, #0x8
  40b684:	mov	x0, x19
  40b688:	bl	40bb1c <feof@plt+0x914c>
  40b68c:	tbz	w0, #0, 40b6a4 <feof@plt+0x8cd4>
  40b690:	add	x0, sp, #0x8
  40b694:	bl	40d714 <feof@plt+0xad44>
  40b698:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  40b69c:	mov	x19, x0
  40b6a0:	b	40b6a8 <feof@plt+0x8cd8>
  40b6a4:	mov	x19, xzr
  40b6a8:	add	x0, sp, #0x8
  40b6ac:	bl	40fabc <feof@plt+0xd0ec>
  40b6b0:	mov	x0, x19
  40b6b4:	ldr	x19, [sp, #96]
  40b6b8:	ldp	x29, x30, [sp, #80]
  40b6bc:	add	sp, sp, #0x70
  40b6c0:	ret
  40b6c4:	stp	x29, x30, [sp, #-64]!
  40b6c8:	str	x23, [sp, #16]
  40b6cc:	stp	x22, x21, [sp, #32]
  40b6d0:	stp	x20, x19, [sp, #48]
  40b6d4:	mov	x29, sp
  40b6d8:	cbz	x1, 40b7c8 <feof@plt+0x8df8>
  40b6dc:	add	x21, x0, #0x8
  40b6e0:	mov	x23, x0
  40b6e4:	mov	x0, x21
  40b6e8:	mov	w19, w3
  40b6ec:	mov	w20, w2
  40b6f0:	mov	x22, x1
  40b6f4:	bl	40d16c <feof@plt+0xa79c>
  40b6f8:	ldr	x8, [x23, #8]
  40b6fc:	cbz	x8, 40b714 <feof@plt+0x8d44>
  40b700:	ldr	x9, [x23, #16]
  40b704:	ldr	x0, [x8]
  40b708:	mov	x1, x22
  40b70c:	blr	x9
  40b710:	cbz	w0, 40b72c <feof@plt+0x8d5c>
  40b714:	mov	w0, w19
  40b718:	ldp	x20, x19, [sp, #48]
  40b71c:	ldp	x22, x21, [sp, #32]
  40b720:	ldr	x23, [sp, #16]
  40b724:	ldp	x29, x30, [sp], #64
  40b728:	ret
  40b72c:	ldr	x8, [x21]
  40b730:	cbz	x8, 40b714 <feof@plt+0x8d44>
  40b734:	ldr	x22, [x8, #8]
  40b738:	cbz	x22, 40b714 <feof@plt+0x8d44>
  40b73c:	add	x21, x22, #0x8
  40b740:	mov	x0, x21
  40b744:	mov	w1, w20
  40b748:	bl	40d308 <feof@plt+0xa938>
  40b74c:	ldr	x8, [x22, #8]
  40b750:	cbz	x8, 40b714 <feof@plt+0x8d44>
  40b754:	ldr	x9, [x22, #16]
  40b758:	ldr	w0, [x8]
  40b75c:	mov	w1, w20
  40b760:	blr	x9
  40b764:	cbnz	w0, 40b714 <feof@plt+0x8d44>
  40b768:	ldr	x8, [x21]
  40b76c:	cbz	x8, 40b714 <feof@plt+0x8d44>
  40b770:	ldr	x8, [x8, #8]
  40b774:	cbz	x8, 40b714 <feof@plt+0x8d44>
  40b778:	ldr	x10, [x8, #24]
  40b77c:	cbz	x10, 40b714 <feof@plt+0x8d44>
  40b780:	ldr	w8, [x10, #4]
  40b784:	cbz	w8, 40b714 <feof@plt+0x8d44>
  40b788:	mov	x9, xzr
  40b78c:	add	x11, x10, #0x8
  40b790:	add	x10, x10, #0x10
  40b794:	b	40b7b0 <feof@plt+0x8de0>
  40b798:	add	x9, x9, #0x1
  40b79c:	cmp	x9, x8
  40b7a0:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  40b7a4:	cmp	x8, x9
  40b7a8:	add	x10, x10, #0x8
  40b7ac:	b.eq	40b714 <feof@plt+0x8d44>  // b.none
  40b7b0:	ldr	w12, [x11]
  40b7b4:	cmp	w12, w19
  40b7b8:	b.gt	40b798 <feof@plt+0x8dc8>
  40b7bc:	ldr	w11, [x11, #4]
  40b7c0:	add	w19, w11, w19
  40b7c4:	b	40b798 <feof@plt+0x8dc8>
  40b7c8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b7cc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b7d0:	add	x0, x0, #0xe88
  40b7d4:	add	x2, x2, #0xea1
  40b7d8:	mov	w1, #0x140                 	// #320
  40b7dc:	bl	404ac4 <feof@plt+0x20f4>
  40b7e0:	stp	x29, x30, [sp, #-48]!
  40b7e4:	str	x21, [sp, #16]
  40b7e8:	stp	x20, x19, [sp, #32]
  40b7ec:	mov	x29, sp
  40b7f0:	cbz	x1, 40b848 <feof@plt+0x8e78>
  40b7f4:	add	x19, x0, #0x8
  40b7f8:	mov	x21, x0
  40b7fc:	mov	x0, x19
  40b800:	mov	x20, x1
  40b804:	bl	40d16c <feof@plt+0xa79c>
  40b808:	ldr	x8, [x21, #8]
  40b80c:	cbz	x8, 40b824 <feof@plt+0x8e54>
  40b810:	ldr	x9, [x21, #16]
  40b814:	ldr	x0, [x8]
  40b818:	mov	x1, x20
  40b81c:	blr	x9
  40b820:	cbz	w0, 40b838 <feof@plt+0x8e68>
  40b824:	mov	x0, xzr
  40b828:	ldp	x20, x19, [sp, #32]
  40b82c:	ldr	x21, [sp, #16]
  40b830:	ldp	x29, x30, [sp], #48
  40b834:	ret
  40b838:	ldr	x8, [x19]
  40b83c:	cbz	x8, 40b824 <feof@plt+0x8e54>
  40b840:	ldr	x0, [x8, #8]
  40b844:	b	40b828 <feof@plt+0x8e58>
  40b848:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40b84c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40b850:	add	x0, x0, #0xe88
  40b854:	add	x2, x2, #0xea1
  40b858:	mov	w1, #0x140                 	// #320
  40b85c:	bl	404ac4 <feof@plt+0x20f4>
  40b860:	stp	x29, x30, [sp, #-48]!
  40b864:	stp	x22, x21, [sp, #16]
  40b868:	stp	x20, x19, [sp, #32]
  40b86c:	mov	x29, sp
  40b870:	add	x20, x0, #0x8
  40b874:	mov	x22, x0
  40b878:	mov	x0, x20
  40b87c:	mov	w19, w2
  40b880:	mov	w21, w1
  40b884:	bl	40d308 <feof@plt+0xa938>
  40b888:	ldr	x8, [x22, #8]
  40b88c:	cbz	x8, 40b8a4 <feof@plt+0x8ed4>
  40b890:	ldr	x9, [x22, #16]
  40b894:	ldr	w0, [x8]
  40b898:	mov	w1, w21
  40b89c:	blr	x9
  40b8a0:	cbz	w0, 40b8b8 <feof@plt+0x8ee8>
  40b8a4:	mov	w0, w19
  40b8a8:	ldp	x20, x19, [sp, #32]
  40b8ac:	ldp	x22, x21, [sp, #16]
  40b8b0:	ldp	x29, x30, [sp], #48
  40b8b4:	ret
  40b8b8:	ldr	x8, [x20]
  40b8bc:	cbz	x8, 40b8a4 <feof@plt+0x8ed4>
  40b8c0:	ldr	x8, [x8, #8]
  40b8c4:	cbz	x8, 40b8a4 <feof@plt+0x8ed4>
  40b8c8:	ldr	x10, [x8, #24]
  40b8cc:	cbz	x10, 40b8a4 <feof@plt+0x8ed4>
  40b8d0:	ldr	w8, [x10, #4]
  40b8d4:	cbz	w8, 40b8a4 <feof@plt+0x8ed4>
  40b8d8:	mov	x9, xzr
  40b8dc:	add	x11, x10, #0x8
  40b8e0:	add	x10, x10, #0x10
  40b8e4:	b	40b900 <feof@plt+0x8f30>
  40b8e8:	add	x9, x9, #0x1
  40b8ec:	cmp	x9, x8
  40b8f0:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  40b8f4:	cmp	x8, x9
  40b8f8:	add	x10, x10, #0x8
  40b8fc:	b.eq	40b8a4 <feof@plt+0x8ed4>  // b.none
  40b900:	ldr	w12, [x11]
  40b904:	cmp	w12, w19
  40b908:	b.gt	40b8e8 <feof@plt+0x8f18>
  40b90c:	ldr	w11, [x11, #4]
  40b910:	add	w19, w11, w19
  40b914:	b	40b8e8 <feof@plt+0x8f18>
  40b918:	sub	sp, sp, #0x80
  40b91c:	stp	x29, x30, [sp, #80]
  40b920:	str	x21, [sp, #96]
  40b924:	stp	x20, x19, [sp, #112]
  40b928:	add	x29, sp, #0x50
  40b92c:	ldrb	w8, [x0]
  40b930:	cbz	w8, 40b9c4 <feof@plt+0x8ff4>
  40b934:	mov	x20, x0
  40b938:	mov	w19, w1
  40b93c:	add	x0, sp, #0x8
  40b940:	mov	w1, wzr
  40b944:	bl	40f9b8 <feof@plt+0xcfe8>
  40b948:	ldrb	w8, [x20]
  40b94c:	cbz	w8, 40b9a8 <feof@plt+0x8fd8>
  40b950:	mov	x8, xzr
  40b954:	add	x9, x20, #0x8
  40b958:	and	w19, w19, #0x1
  40b95c:	b	40b984 <feof@plt+0x8fb4>
  40b960:	cbz	x8, 40b9a8 <feof@plt+0x8fd8>
  40b964:	ldr	x20, [x8, #32]
  40b968:	mov	x21, x8
  40b96c:	ldr	x0, [x21, #8]
  40b970:	add	x1, sp, #0x8
  40b974:	mov	w2, w19
  40b978:	bl	40c5d0 <feof@plt+0x9c00>
  40b97c:	add	x9, x21, #0x18
  40b980:	mov	x8, x20
  40b984:	ldr	x9, [x9]
  40b988:	cbz	x9, 40b960 <feof@plt+0x8f90>
  40b98c:	mov	x21, x9
  40b990:	ldr	x9, [x9, #16]
  40b994:	mov	x20, x8
  40b998:	str	x8, [x21, #32]
  40b99c:	mov	x8, x21
  40b9a0:	cbnz	x9, 40b98c <feof@plt+0x8fbc>
  40b9a4:	b	40b96c <feof@plt+0x8f9c>
  40b9a8:	add	x0, sp, #0x8
  40b9ac:	bl	40d714 <feof@plt+0xad44>
  40b9b0:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  40b9b4:	mov	x19, x0
  40b9b8:	add	x0, sp, #0x8
  40b9bc:	bl	40fabc <feof@plt+0xd0ec>
  40b9c0:	b	40b9c8 <feof@plt+0x8ff8>
  40b9c4:	mov	x19, xzr
  40b9c8:	mov	x0, x19
  40b9cc:	ldp	x20, x19, [sp, #112]
  40b9d0:	ldr	x21, [sp, #96]
  40b9d4:	ldp	x29, x30, [sp, #80]
  40b9d8:	add	sp, sp, #0x80
  40b9dc:	ret
  40b9e0:	stp	x29, x30, [sp, #-48]!
  40b9e4:	stp	x22, x21, [sp, #16]
  40b9e8:	stp	x20, x19, [sp, #32]
  40b9ec:	mov	x29, sp
  40b9f0:	ldrb	w8, [x0]
  40b9f4:	cbz	w8, 40ba58 <feof@plt+0x9088>
  40b9f8:	mov	x19, x1
  40b9fc:	mov	x8, xzr
  40ba00:	add	x9, x0, #0x8
  40ba04:	and	w20, w2, #0x1
  40ba08:	b	40ba24 <feof@plt+0x9054>
  40ba0c:	ldr	x0, [x22, #8]
  40ba10:	mov	x1, x19
  40ba14:	mov	w2, w20
  40ba18:	bl	40c5d0 <feof@plt+0x9c00>
  40ba1c:	add	x9, x22, #0x18
  40ba20:	mov	x8, x21
  40ba24:	ldr	x9, [x9]
  40ba28:	cbz	x9, 40ba48 <feof@plt+0x9078>
  40ba2c:	mov	x22, x9
  40ba30:	ldr	x9, [x9, #16]
  40ba34:	mov	x21, x8
  40ba38:	str	x8, [x22, #32]
  40ba3c:	mov	x8, x22
  40ba40:	cbnz	x9, 40ba2c <feof@plt+0x905c>
  40ba44:	b	40ba0c <feof@plt+0x903c>
  40ba48:	cbz	x8, 40ba58 <feof@plt+0x9088>
  40ba4c:	ldr	x21, [x8, #32]
  40ba50:	mov	x22, x8
  40ba54:	b	40ba0c <feof@plt+0x903c>
  40ba58:	ldp	x20, x19, [sp, #32]
  40ba5c:	ldp	x22, x21, [sp, #16]
  40ba60:	ldp	x29, x30, [sp], #48
  40ba64:	ret
  40ba68:	stp	x29, x30, [sp, #-48]!
  40ba6c:	stp	x22, x21, [sp, #16]
  40ba70:	stp	x20, x19, [sp, #32]
  40ba74:	mov	x29, sp
  40ba78:	mov	w19, w5
  40ba7c:	mov	x20, x4
  40ba80:	mov	w21, w3
  40ba84:	mov	w22, w2
  40ba88:	bl	40bcdc <feof@plt+0x930c>
  40ba8c:	cbz	x0, 40bab0 <feof@plt+0x90e0>
  40ba90:	mov	w1, w22
  40ba94:	mov	w2, w21
  40ba98:	mov	x3, x20
  40ba9c:	mov	w4, w19
  40baa0:	ldp	x20, x19, [sp, #32]
  40baa4:	ldp	x22, x21, [sp, #16]
  40baa8:	ldp	x29, x30, [sp], #48
  40baac:	b	40bebc <feof@plt+0x94ec>
  40bab0:	ldp	x20, x19, [sp, #32]
  40bab4:	ldp	x22, x21, [sp, #16]
  40bab8:	ldp	x29, x30, [sp], #48
  40babc:	ret
  40bac0:	adrp	x8, 40b000 <feof@plt+0x8630>
  40bac4:	adrp	x9, 40b000 <feof@plt+0x8630>
  40bac8:	add	x8, x8, #0xae8
  40bacc:	add	x9, x9, #0xaf0
  40bad0:	mov	w10, #0xffffffff            	// #-1
  40bad4:	stp	x1, xzr, [x0]
  40bad8:	stp	x8, xzr, [x0, #16]
  40badc:	str	x9, [x0, #32]
  40bae0:	str	w10, [x0, #40]
  40bae4:	ret
  40bae8:	sub	w0, w0, w1
  40baec:	ret
  40baf0:	cbz	x0, 40bb18 <feof@plt+0x9148>
  40baf4:	stp	x29, x30, [sp, #-32]!
  40baf8:	str	x19, [sp, #16]
  40bafc:	mov	x29, sp
  40bb00:	mov	x19, x0
  40bb04:	bl	40cfc0 <feof@plt+0xa5f0>
  40bb08:	mov	x0, x19
  40bb0c:	ldr	x19, [sp, #16]
  40bb10:	ldp	x29, x30, [sp], #32
  40bb14:	b	402670 <_ZdlPv@plt>
  40bb18:	ret
  40bb1c:	stp	x29, x30, [sp, #-96]!
  40bb20:	str	x27, [sp, #16]
  40bb24:	stp	x26, x25, [sp, #32]
  40bb28:	stp	x24, x23, [sp, #48]
  40bb2c:	stp	x22, x21, [sp, #64]
  40bb30:	stp	x20, x19, [sp, #80]
  40bb34:	mov	x29, sp
  40bb38:	ldr	w8, [x0, #40]
  40bb3c:	mov	x20, x0
  40bb40:	mov	x19, x1
  40bb44:	cmn	w8, #0x1
  40bb48:	b.eq	40bc90 <feof@plt+0x92c0>  // b.none
  40bb4c:	ldr	x0, [x20]
  40bb50:	bl	4130a4 <feof@plt+0x106d4>
  40bb54:	ldr	w26, [x20, #40]
  40bb58:	mov	w21, w0
  40bb5c:	cmp	w26, #0x1
  40bb60:	b.lt	40bc60 <feof@plt+0x9290>  // b.tstop
  40bb64:	add	x22, x20, #0x8
  40bb68:	mov	w23, #0x1                   	// #1
  40bb6c:	b	40bb7c <feof@plt+0x91ac>
  40bb70:	cmp	w23, w26
  40bb74:	add	w23, w23, #0x1
  40bb78:	b.eq	40bc60 <feof@plt+0x9290>  // b.none
  40bb7c:	mov	x0, x22
  40bb80:	mov	w1, w23
  40bb84:	bl	40d308 <feof@plt+0xa938>
  40bb88:	ldr	x8, [x22]
  40bb8c:	cbz	x8, 40bba4 <feof@plt+0x91d4>
  40bb90:	ldr	x9, [x20, #16]
  40bb94:	ldr	w0, [x8]
  40bb98:	mov	w1, w23
  40bb9c:	blr	x9
  40bba0:	cbz	w0, 40bbf8 <feof@plt+0x9228>
  40bba4:	ldr	x0, [x20]
  40bba8:	mov	w1, w23
  40bbac:	bl	412d44 <feof@plt+0x10374>
  40bbb0:	cbz	x0, 40bc74 <feof@plt+0x92a4>
  40bbb4:	mov	x25, x1
  40bbb8:	cbz	x1, 40bbe0 <feof@plt+0x9210>
  40bbbc:	mov	x24, x0
  40bbc0:	mov	w27, #0x80000000            	// #-2147483648
  40bbc4:	cbz	x27, 40bcc4 <feof@plt+0x92f4>
  40bbc8:	ldrb	w1, [x24], #1
  40bbcc:	mov	x0, x19
  40bbd0:	bl	40d5a0 <feof@plt+0xabd0>
  40bbd4:	subs	x25, x25, #0x1
  40bbd8:	sub	x27, x27, #0x1
  40bbdc:	b.ne	40bbc4 <feof@plt+0x91f4>  // b.any
  40bbe0:	cmp	w23, w26
  40bbe4:	b.ge	40bb70 <feof@plt+0x91a0>  // b.tcont
  40bbe8:	mov	w1, #0xa                   	// #10
  40bbec:	mov	x0, x19
  40bbf0:	bl	40d5a0 <feof@plt+0xabd0>
  40bbf4:	b	40bb70 <feof@plt+0x91a0>
  40bbf8:	ldr	x8, [x22]
  40bbfc:	cbz	x8, 40bba4 <feof@plt+0x91d4>
  40bc00:	ldr	x24, [x8, #8]
  40bc04:	cbz	x24, 40bba4 <feof@plt+0x91d4>
  40bc08:	ldr	x8, [x24, #32]
  40bc0c:	cbz	x8, 40bc48 <feof@plt+0x9278>
  40bc10:	mov	x25, xzr
  40bc14:	ldr	w9, [x8, #4]
  40bc18:	cmp	x25, x9
  40bc1c:	b.cs	40bc48 <feof@plt+0x9278>  // b.hs, b.nlast
  40bc20:	add	x8, x8, x25, lsl #3
  40bc24:	ldr	x8, [x8, #8]
  40bc28:	mov	x0, x19
  40bc2c:	ldr	x1, [x8]
  40bc30:	bl	40f384 <feof@plt+0xc9b4>
  40bc34:	mov	x0, x19
  40bc38:	bl	40fd08 <feof@plt+0xd338>
  40bc3c:	ldr	x8, [x24, #32]
  40bc40:	add	x25, x25, #0x1
  40bc44:	cbnz	x8, 40bc14 <feof@plt+0x9244>
  40bc48:	ldr	x1, [x24, #8]
  40bc4c:	mov	x0, x19
  40bc50:	bl	40f384 <feof@plt+0xc9b4>
  40bc54:	cmp	w23, w26
  40bc58:	b.ge	40bb70 <feof@plt+0x91a0>  // b.tcont
  40bc5c:	b	40bbe8 <feof@plt+0x9218>
  40bc60:	tbnz	w21, #0, 40bc70 <feof@plt+0x92a0>
  40bc64:	mov	w1, #0xa                   	// #10
  40bc68:	mov	x0, x19
  40bc6c:	bl	40d5a0 <feof@plt+0xabd0>
  40bc70:	mov	w0, #0x1                   	// #1
  40bc74:	ldp	x20, x19, [sp, #80]
  40bc78:	ldp	x22, x21, [sp, #64]
  40bc7c:	ldp	x24, x23, [sp, #48]
  40bc80:	ldp	x26, x25, [sp, #32]
  40bc84:	ldr	x27, [sp, #16]
  40bc88:	ldp	x29, x30, [sp], #96
  40bc8c:	ret
  40bc90:	ldr	x0, [x20]
  40bc94:	str	wzr, [x20, #40]
  40bc98:	mov	w1, #0x1                   	// #1
  40bc9c:	bl	412d44 <feof@plt+0x10374>
  40bca0:	cbz	x0, 40bb4c <feof@plt+0x917c>
  40bca4:	ldr	w8, [x20, #40]
  40bca8:	ldr	x0, [x20]
  40bcac:	add	w9, w8, #0x1
  40bcb0:	add	w1, w8, #0x2
  40bcb4:	str	w9, [x20, #40]
  40bcb8:	bl	412d44 <feof@plt+0x10374>
  40bcbc:	cbnz	x0, 40bca4 <feof@plt+0x92d4>
  40bcc0:	b	40bb4c <feof@plt+0x917c>
  40bcc4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40bcc8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40bccc:	add	x0, x0, #0xe5c
  40bcd0:	add	x2, x2, #0xf17
  40bcd4:	mov	w1, #0x3d                  	// #61
  40bcd8:	bl	404ac4 <feof@plt+0x20f4>
  40bcdc:	stp	x29, x30, [sp, #-80]!
  40bce0:	str	x25, [sp, #16]
  40bce4:	stp	x24, x23, [sp, #32]
  40bce8:	stp	x22, x21, [sp, #48]
  40bcec:	stp	x20, x19, [sp, #64]
  40bcf0:	mov	x29, sp
  40bcf4:	add	x19, x0, #0x8
  40bcf8:	mov	x22, x0
  40bcfc:	mov	x0, x19
  40bd00:	mov	w21, w1
  40bd04:	bl	40d308 <feof@plt+0xa938>
  40bd08:	ldr	x8, [x22, #8]
  40bd0c:	cbz	x8, 40bd24 <feof@plt+0x9354>
  40bd10:	ldr	x9, [x22, #16]
  40bd14:	ldr	w0, [x8]
  40bd18:	mov	w1, w21
  40bd1c:	blr	x9
  40bd20:	cbz	w0, 40be24 <feof@plt+0x9454>
  40bd24:	mov	w0, #0x28                  	// #40
  40bd28:	bl	4026a0 <_Znwm@plt>
  40bd2c:	mov	x20, x0
  40bd30:	ldr	x0, [x22]
  40bd34:	movi	v0.2d, #0x0
  40bd38:	mov	x24, x20
  40bd3c:	mov	w1, w21
  40bd40:	str	w21, [x20]
  40bd44:	str	q0, [x24, #8]!
  40bd48:	stur	q0, [x20, #24]
  40bd4c:	bl	412d44 <feof@plt+0x10374>
  40bd50:	cbz	x0, 40bdb4 <feof@plt+0x93e4>
  40bd54:	ldr	w8, [x20, #20]
  40bd58:	mov	x23, x0
  40bd5c:	str	w1, [x20, #16]
  40bd60:	cmp	w8, w1
  40bd64:	b.le	40bd70 <feof@plt+0x93a0>
  40bd68:	ldr	x0, [x24]
  40bd6c:	b	40bd90 <feof@plt+0x93c0>
  40bd70:	ldr	x0, [x20, #8]
  40bd74:	lsl	w8, w1, #1
  40bd78:	add	w25, w8, #0x2
  40bd7c:	sxtw	x1, w25
  40bd80:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40bd84:	ldr	w1, [x20, #16]
  40bd88:	str	x0, [x20, #8]
  40bd8c:	str	w25, [x20, #20]
  40bd90:	sxtw	x2, w1
  40bd94:	mov	x1, x23
  40bd98:	bl	402390 <memcpy@plt>
  40bd9c:	ldp	w8, w9, [x20, #16]
  40bda0:	sxtw	x8, w8
  40bda4:	cmp	w8, w9
  40bda8:	b.ge	40bea4 <feof@plt+0x94d4>  // b.tcont
  40bdac:	ldr	x9, [x24]
  40bdb0:	strb	wzr, [x9, x8]
  40bdb4:	ldr	x8, [x24]
  40bdb8:	cbz	x8, 40be0c <feof@plt+0x943c>
  40bdbc:	mov	x0, x19
  40bdc0:	mov	w1, w21
  40bdc4:	bl	40d308 <feof@plt+0xa938>
  40bdc8:	ldr	x8, [x19]
  40bdcc:	cbz	x8, 40be38 <feof@plt+0x9468>
  40bdd0:	ldr	x9, [x22, #16]
  40bdd4:	ldr	w0, [x8]
  40bdd8:	mov	w1, w21
  40bddc:	blr	x9
  40bde0:	ldr	x24, [x22, #8]
  40bde4:	mov	w23, w0
  40bde8:	cbnz	w0, 40be40 <feof@plt+0x9470>
  40bdec:	cbz	x24, 40be40 <feof@plt+0x9470>
  40bdf0:	ldr	x8, [x22, #32]
  40bdf4:	cbz	x8, 40be04 <feof@plt+0x9434>
  40bdf8:	ldr	x0, [x24, #8]
  40bdfc:	blr	x8
  40be00:	ldr	x24, [x19]
  40be04:	str	x20, [x24, #8]
  40be08:	b	40be88 <feof@plt+0x94b8>
  40be0c:	mov	x0, x20
  40be10:	bl	40cfc0 <feof@plt+0xa5f0>
  40be14:	mov	x0, x20
  40be18:	bl	402670 <_ZdlPv@plt>
  40be1c:	mov	x20, xzr
  40be20:	b	40be88 <feof@plt+0x94b8>
  40be24:	ldr	x8, [x19]
  40be28:	cbz	x8, 40bd24 <feof@plt+0x9354>
  40be2c:	ldr	x20, [x8, #8]
  40be30:	cbnz	x20, 40be88 <feof@plt+0x94b8>
  40be34:	b	40bd24 <feof@plt+0x9354>
  40be38:	mov	w23, wzr
  40be3c:	mov	x24, xzr
  40be40:	mov	w0, #0x28                  	// #40
  40be44:	bl	4026a0 <_Znwm@plt>
  40be48:	str	w21, [x0]
  40be4c:	str	x20, [x0, #8]
  40be50:	cbz	x24, 40be6c <feof@plt+0x949c>
  40be54:	tbnz	w23, #31, 40be74 <feof@plt+0x94a4>
  40be58:	str	x24, [x0, #24]
  40be5c:	ldr	x8, [x24, #16]
  40be60:	str	x8, [x0, #16]
  40be64:	str	xzr, [x24, #16]
  40be68:	b	40be84 <feof@plt+0x94b4>
  40be6c:	stp	xzr, xzr, [x0, #16]
  40be70:	b	40be84 <feof@plt+0x94b4>
  40be74:	str	x24, [x0, #16]
  40be78:	ldr	x8, [x24, #24]
  40be7c:	str	x8, [x0, #24]
  40be80:	str	xzr, [x24, #24]
  40be84:	str	x0, [x19]
  40be88:	mov	x0, x20
  40be8c:	ldp	x20, x19, [sp, #64]
  40be90:	ldp	x22, x21, [sp, #48]
  40be94:	ldp	x24, x23, [sp, #32]
  40be98:	ldr	x25, [sp, #16]
  40be9c:	ldp	x29, x30, [sp], #80
  40bea0:	ret
  40bea4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40bea8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40beac:	add	x0, x0, #0xe88
  40beb0:	add	x2, x2, #0xe76
  40beb4:	mov	w1, #0x36b                 	// #875
  40beb8:	bl	404ac4 <feof@plt+0x20f4>
  40bebc:	stp	x29, x30, [sp, #-96]!
  40bec0:	str	x27, [sp, #16]
  40bec4:	stp	x26, x25, [sp, #32]
  40bec8:	stp	x24, x23, [sp, #48]
  40becc:	stp	x22, x21, [sp, #64]
  40bed0:	stp	x20, x19, [sp, #80]
  40bed4:	mov	x29, sp
  40bed8:	mov	w21, w4
  40bedc:	mov	x23, x3
  40bee0:	mov	w22, w2
  40bee4:	mov	w20, w1
  40bee8:	cmp	w4, #0x2
  40beec:	mov	x19, x0
  40bef0:	b.lt	40bf74 <feof@plt+0x95a4>  // b.tstop
  40bef4:	sxtw	x8, w21
  40bef8:	sub	x24, x8, #0x1
  40befc:	ldrb	w8, [x23, x24]
  40bf00:	cmp	w8, #0xa
  40bf04:	b.ne	40bf74 <feof@plt+0x95a4>  // b.any
  40bf08:	mov	w0, #0x10                  	// #16
  40bf0c:	bl	4026a0 <_Znwm@plt>
  40bf10:	mov	x20, x0
  40bf14:	mov	x0, x23
  40bf18:	mov	x1, x24
  40bf1c:	bl	450840 <_obstack_memory_used@@Base+0x2a8>
  40bf20:	str	x0, [x20]
  40bf24:	str	w24, [x20, #8]
  40bf28:	ldr	x23, [x19, #32]
  40bf2c:	cbz	x23, 40c06c <feof@plt+0x969c>
  40bf30:	ldp	w8, w9, [x23]
  40bf34:	and	w0, w8, #0x7fffffff
  40bf38:	cmp	w0, w9
  40bf3c:	b.ne	40c24c <feof@plt+0x987c>  // b.any
  40bf40:	tbnz	w8, #31, 40c154 <feof@plt+0x9784>
  40bf44:	add	w1, w0, #0x1
  40bf48:	bl	411298 <feof@plt+0xe8c8>
  40bf4c:	ldr	x8, [x19, #32]
  40bf50:	mov	w9, w0
  40bf54:	lsl	x9, x9, #3
  40bf58:	mov	w21, w0
  40bf5c:	add	x1, x9, #0x8
  40bf60:	mov	w22, wzr
  40bf64:	cbz	x8, 40c3a0 <feof@plt+0x99d0>
  40bf68:	ldr	w25, [x8, #4]
  40bf6c:	mov	w24, wzr
  40bf70:	b	40c184 <feof@plt+0x97b4>
  40bf74:	ldr	x10, [x19, #24]
  40bf78:	cbz	x10, 40c008 <feof@plt+0x9638>
  40bf7c:	ldr	w8, [x10, #4]
  40bf80:	cbz	w8, 40c008 <feof@plt+0x9638>
  40bf84:	add	x9, x10, #0x8
  40bf88:	mov	x11, xzr
  40bf8c:	add	x12, x10, #0x10
  40bf90:	mov	x13, x9
  40bf94:	b	40bfb0 <feof@plt+0x95e0>
  40bf98:	add	x11, x11, #0x1
  40bf9c:	cmp	x11, x8
  40bfa0:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  40bfa4:	cmp	x8, x11
  40bfa8:	add	x12, x12, #0x8
  40bfac:	b.eq	40bfc8 <feof@plt+0x95f8>  // b.none
  40bfb0:	ldr	w14, [x13]
  40bfb4:	cmp	w14, w20
  40bfb8:	b.gt	40bf98 <feof@plt+0x95c8>
  40bfbc:	ldr	w13, [x13, #4]
  40bfc0:	add	w20, w13, w20
  40bfc4:	b	40bf98 <feof@plt+0x95c8>
  40bfc8:	cbz	w8, 40c008 <feof@plt+0x9638>
  40bfcc:	mov	x11, xzr
  40bfd0:	add	x10, x10, #0x10
  40bfd4:	b	40bff0 <feof@plt+0x9620>
  40bfd8:	add	x11, x11, #0x1
  40bfdc:	cmp	x11, x8
  40bfe0:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
  40bfe4:	cmp	x8, x11
  40bfe8:	add	x10, x10, #0x8
  40bfec:	b.eq	40c008 <feof@plt+0x9638>  // b.none
  40bff0:	ldr	w12, [x9]
  40bff4:	cmp	w12, w22
  40bff8:	b.gt	40bfd8 <feof@plt+0x9608>
  40bffc:	ldr	w9, [x9, #4]
  40c000:	add	w22, w9, w22
  40c004:	b	40bfd8 <feof@plt+0x9608>
  40c008:	cmp	w20, #0x0
  40c00c:	b.le	40c3b8 <feof@plt+0x99e8>
  40c010:	cmp	w22, #0x0
  40c014:	b.le	40c3d0 <feof@plt+0x9a00>
  40c018:	cmp	w20, w22
  40c01c:	b.le	40c028 <feof@plt+0x9658>
  40c020:	mov	w0, wzr
  40c024:	b	40c384 <feof@plt+0x99b4>
  40c028:	ldr	w8, [x19, #16]
  40c02c:	mov	w0, wzr
  40c030:	add	w9, w8, #0x1
  40c034:	cmp	w20, w9
  40c038:	b.gt	40c384 <feof@plt+0x99b4>
  40c03c:	cmp	w22, w9
  40c040:	b.gt	40c384 <feof@plt+0x99b4>
  40c044:	sub	w24, w20, #0x1
  40c048:	sub	w26, w22, #0x1
  40c04c:	ldr	w9, [x19, #20]
  40c050:	sub	w10, w24, w26
  40c054:	add	w10, w10, w21
  40c058:	add	w25, w10, w8
  40c05c:	cmp	w9, w25
  40c060:	b.le	40c07c <feof@plt+0x96ac>
  40c064:	ldr	x0, [x19, #8]
  40c068:	b	40c09c <feof@plt+0x96cc>
  40c06c:	mov	w22, wzr
  40c070:	mov	w24, wzr
  40c074:	mov	w21, #0x4                   	// #4
  40c078:	b	40c170 <feof@plt+0x97a0>
  40c07c:	ldr	x0, [x19, #8]
  40c080:	lsl	w8, w25, #1
  40c084:	add	w27, w8, #0x2
  40c088:	sxtw	x1, w27
  40c08c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40c090:	ldr	w8, [x19, #16]
  40c094:	str	x0, [x19, #8]
  40c098:	str	w27, [x19, #20]
  40c09c:	cmp	w26, w8
  40c0a0:	b.gt	40c3e8 <feof@plt+0x9a18>
  40c0a4:	add	x1, x0, w26, sxtw
  40c0a8:	add	x8, x0, w8, sxtw
  40c0ac:	sxtw	x26, w24
  40c0b0:	sub	x2, x8, x1
  40c0b4:	add	x8, x0, x26
  40c0b8:	sxtw	x24, w21
  40c0bc:	add	x0, x8, x24
  40c0c0:	bl	402780 <memmove@plt>
  40c0c4:	ldr	x8, [x19, #8]
  40c0c8:	mov	x1, x23
  40c0cc:	mov	x2, x24
  40c0d0:	add	x0, x8, x26
  40c0d4:	bl	402390 <memcpy@plt>
  40c0d8:	ldr	w8, [x19, #20]
  40c0dc:	str	w25, [x19, #16]
  40c0e0:	cmp	w25, w8
  40c0e4:	b.ge	40c400 <feof@plt+0x9a30>  // b.tcont
  40c0e8:	ldr	x8, [x19, #8]
  40c0ec:	strb	wzr, [x8, w25, sxtw]
  40c0f0:	ldr	x24, [x19, #24]
  40c0f4:	add	w8, w20, w21
  40c0f8:	sub	w22, w8, w22
  40c0fc:	cbz	x24, 40c144 <feof@plt+0x9774>
  40c100:	ldp	w8, w9, [x24]
  40c104:	and	w0, w8, #0x7fffffff
  40c108:	cmp	w0, w9
  40c10c:	b.ne	40c360 <feof@plt+0x9990>  // b.any
  40c110:	tbnz	w8, #31, 40c268 <feof@plt+0x9898>
  40c114:	add	w1, w0, #0x1
  40c118:	bl	411298 <feof@plt+0xe8c8>
  40c11c:	ldr	x8, [x19, #24]
  40c120:	mov	w9, w0
  40c124:	lsl	x9, x9, #3
  40c128:	mov	w21, w0
  40c12c:	add	x1, x9, #0x8
  40c130:	mov	w23, wzr
  40c134:	cbz	x8, 40c3ac <feof@plt+0x99dc>
  40c138:	ldr	w26, [x8, #4]
  40c13c:	mov	w25, wzr
  40c140:	b	40c298 <feof@plt+0x98c8>
  40c144:	mov	w23, wzr
  40c148:	mov	w25, wzr
  40c14c:	mov	w21, #0x4                   	// #4
  40c150:	b	40c284 <feof@plt+0x98b4>
  40c154:	str	xzr, [x19, #32]
  40c158:	ldr	w22, [x23, #4]
  40c15c:	mov	w8, #0x4                   	// #4
  40c160:	mov	w24, #0x1                   	// #1
  40c164:	add	w9, w22, #0x1
  40c168:	cmp	w9, #0x4
  40c16c:	csinc	w21, w8, w22, ls  // ls = plast
  40c170:	mov	w9, w21
  40c174:	lsl	x9, x9, #3
  40c178:	mov	x8, xzr
  40c17c:	mov	w25, wzr
  40c180:	add	x1, x9, #0x8
  40c184:	mov	x0, x8
  40c188:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40c18c:	and	w8, w21, #0x7fffffff
  40c190:	str	x0, [x19, #32]
  40c194:	stp	w8, w25, [x0]
  40c198:	cbz	w24, 40c24c <feof@plt+0x987c>
  40c19c:	ldr	x11, [x19, #32]
  40c1a0:	cbz	w22, 40c248 <feof@plt+0x9878>
  40c1a4:	sub	w12, w22, #0x1
  40c1a8:	add	x8, x23, #0x8
  40c1ac:	cmp	w12, #0x3
  40c1b0:	add	x9, x11, #0x8
  40c1b4:	b.cs	40c1c0 <feof@plt+0x97f0>  // b.hs, b.nlast
  40c1b8:	mov	w10, w22
  40c1bc:	b	40c234 <feof@plt+0x9864>
  40c1c0:	lsl	x10, x12, #3
  40c1c4:	add	x13, x23, x10
  40c1c8:	add	x13, x13, #0x10
  40c1cc:	cmp	x9, x13
  40c1d0:	b.cs	40c1e8 <feof@plt+0x9818>  // b.hs, b.nlast
  40c1d4:	add	x10, x11, x10
  40c1d8:	add	x10, x10, #0x10
  40c1dc:	cmp	x8, x10
  40c1e0:	mov	w10, w22
  40c1e4:	b.cc	40c234 <feof@plt+0x9864>  // b.lo, b.ul, b.last
  40c1e8:	add	x12, x12, #0x1
  40c1ec:	and	x13, x12, #0x1fffffffc
  40c1f0:	lsl	x8, x13, #3
  40c1f4:	add	x14, x11, #0x18
  40c1f8:	add	x9, x23, x8
  40c1fc:	add	x11, x11, x8
  40c200:	sub	w10, w22, w13
  40c204:	add	x8, x9, #0x8
  40c208:	add	x9, x11, #0x8
  40c20c:	add	x11, x23, #0x18
  40c210:	mov	x15, x13
  40c214:	ldp	q0, q1, [x11, #-16]
  40c218:	subs	x15, x15, #0x4
  40c21c:	add	x11, x11, #0x20
  40c220:	stp	q0, q1, [x14, #-16]
  40c224:	add	x14, x14, #0x20
  40c228:	b.ne	40c214 <feof@plt+0x9844>  // b.any
  40c22c:	cmp	x12, x13
  40c230:	b.eq	40c244 <feof@plt+0x9874>  // b.none
  40c234:	ldr	x11, [x8], #8
  40c238:	subs	w10, w10, #0x1
  40c23c:	str	x11, [x9], #8
  40c240:	b.ne	40c234 <feof@plt+0x9864>  // b.any
  40c244:	ldr	x11, [x19, #32]
  40c248:	str	w22, [x11, #4]
  40c24c:	ldr	x8, [x19, #32]
  40c250:	ldr	w9, [x8, #4]
  40c254:	add	w10, w9, #0x1
  40c258:	add	x9, x8, x9, lsl #3
  40c25c:	str	w10, [x8, #4]
  40c260:	str	x20, [x9, #8]
  40c264:	b	40c380 <feof@plt+0x99b0>
  40c268:	str	xzr, [x19, #24]
  40c26c:	ldr	w23, [x24, #4]
  40c270:	mov	w8, #0x4                   	// #4
  40c274:	mov	w25, #0x1                   	// #1
  40c278:	add	w9, w23, #0x1
  40c27c:	cmp	w9, #0x4
  40c280:	csinc	w21, w8, w23, ls  // ls = plast
  40c284:	mov	w9, w21
  40c288:	lsl	x9, x9, #3
  40c28c:	mov	x8, xzr
  40c290:	mov	w26, wzr
  40c294:	add	x1, x9, #0x8
  40c298:	mov	x0, x8
  40c29c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40c2a0:	and	w8, w21, #0x7fffffff
  40c2a4:	str	x0, [x19, #24]
  40c2a8:	stp	w8, w26, [x0]
  40c2ac:	cbz	w25, 40c360 <feof@plt+0x9990>
  40c2b0:	ldr	x11, [x19, #24]
  40c2b4:	cbz	w23, 40c35c <feof@plt+0x998c>
  40c2b8:	sub	w12, w23, #0x1
  40c2bc:	add	x8, x24, #0x8
  40c2c0:	cmp	w12, #0x3
  40c2c4:	add	x9, x11, #0x8
  40c2c8:	b.cs	40c2d4 <feof@plt+0x9904>  // b.hs, b.nlast
  40c2cc:	mov	w10, w23
  40c2d0:	b	40c348 <feof@plt+0x9978>
  40c2d4:	lsl	x10, x12, #3
  40c2d8:	add	x13, x24, x10
  40c2dc:	add	x13, x13, #0x10
  40c2e0:	cmp	x9, x13
  40c2e4:	b.cs	40c2fc <feof@plt+0x992c>  // b.hs, b.nlast
  40c2e8:	add	x10, x11, x10
  40c2ec:	add	x10, x10, #0x10
  40c2f0:	cmp	x8, x10
  40c2f4:	mov	w10, w23
  40c2f8:	b.cc	40c348 <feof@plt+0x9978>  // b.lo, b.ul, b.last
  40c2fc:	add	x12, x12, #0x1
  40c300:	and	x13, x12, #0x1fffffffc
  40c304:	lsl	x8, x13, #3
  40c308:	add	x14, x11, #0x18
  40c30c:	add	x9, x24, x8
  40c310:	add	x11, x11, x8
  40c314:	sub	w10, w23, w13
  40c318:	add	x8, x9, #0x8
  40c31c:	add	x9, x11, #0x8
  40c320:	add	x11, x24, #0x18
  40c324:	mov	x15, x13
  40c328:	ldp	q0, q1, [x11, #-16]
  40c32c:	subs	x15, x15, #0x4
  40c330:	add	x11, x11, #0x20
  40c334:	stp	q0, q1, [x14, #-16]
  40c338:	add	x14, x14, #0x20
  40c33c:	b.ne	40c328 <feof@plt+0x9958>  // b.any
  40c340:	cmp	x12, x13
  40c344:	b.eq	40c358 <feof@plt+0x9988>  // b.none
  40c348:	ldr	x11, [x8], #8
  40c34c:	subs	w10, w10, #0x1
  40c350:	str	x11, [x9], #8
  40c354:	b.ne	40c348 <feof@plt+0x9978>  // b.any
  40c358:	ldr	x11, [x19, #24]
  40c35c:	str	w23, [x11, #4]
  40c360:	ldr	x8, [x19, #24]
  40c364:	mov	w10, w20
  40c368:	bfi	x10, x22, #32, #32
  40c36c:	ldr	w9, [x8, #4]
  40c370:	add	w11, w9, #0x1
  40c374:	add	x9, x8, x9, lsl #3
  40c378:	str	w11, [x8, #4]
  40c37c:	str	x10, [x9, #8]
  40c380:	mov	w0, #0x1                   	// #1
  40c384:	ldp	x20, x19, [sp, #80]
  40c388:	ldp	x22, x21, [sp, #64]
  40c38c:	ldp	x24, x23, [sp, #48]
  40c390:	ldp	x26, x25, [sp, #32]
  40c394:	ldr	x27, [sp, #16]
  40c398:	ldp	x29, x30, [sp], #96
  40c39c:	ret
  40c3a0:	mov	w24, wzr
  40c3a4:	mov	w25, wzr
  40c3a8:	b	40c184 <feof@plt+0x97b4>
  40c3ac:	mov	w25, wzr
  40c3b0:	mov	w26, wzr
  40c3b4:	b	40c298 <feof@plt+0x98c8>
  40c3b8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40c3bc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40c3c0:	add	x0, x0, #0xe88
  40c3c4:	add	x2, x2, #0xf0b
  40c3c8:	mov	w1, #0x2fa                 	// #762
  40c3cc:	bl	404ac4 <feof@plt+0x20f4>
  40c3d0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40c3d4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40c3d8:	add	x0, x0, #0xe88
  40c3dc:	add	x2, x2, #0xf0b
  40c3e0:	mov	w1, #0x2fb                 	// #763
  40c3e4:	bl	404ac4 <feof@plt+0x20f4>
  40c3e8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40c3ec:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40c3f0:	add	x0, x0, #0xe88
  40c3f4:	add	x2, x2, #0xf0b
  40c3f8:	mov	w1, #0x30b                 	// #779
  40c3fc:	bl	404ac4 <feof@plt+0x20f4>
  40c400:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40c404:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40c408:	add	x0, x0, #0xe88
  40c40c:	add	x2, x2, #0xe76
  40c410:	mov	w1, #0x36b                 	// #875
  40c414:	bl	404ac4 <feof@plt+0x20f4>
  40c418:	stp	x29, x30, [sp, #-48]!
  40c41c:	str	x21, [sp, #16]
  40c420:	stp	x20, x19, [sp, #32]
  40c424:	mov	x29, sp
  40c428:	add	x19, x0, #0x8
  40c42c:	mov	x21, x0
  40c430:	mov	x0, x19
  40c434:	mov	w20, w1
  40c438:	bl	40d308 <feof@plt+0xa938>
  40c43c:	ldr	x8, [x21, #8]
  40c440:	cbz	x8, 40c458 <feof@plt+0x9a88>
  40c444:	ldr	x9, [x21, #16]
  40c448:	ldr	w0, [x8]
  40c44c:	mov	w1, w20
  40c450:	blr	x9
  40c454:	cbz	w0, 40c46c <feof@plt+0x9a9c>
  40c458:	mov	x0, xzr
  40c45c:	ldp	x20, x19, [sp, #32]
  40c460:	ldr	x21, [sp, #16]
  40c464:	ldp	x29, x30, [sp], #48
  40c468:	ret
  40c46c:	ldr	x8, [x19]
  40c470:	cbz	x8, 40c458 <feof@plt+0x9a88>
  40c474:	ldr	x0, [x8, #8]
  40c478:	b	40c45c <feof@plt+0x9a8c>
  40c47c:	ldr	x9, [x0, #24]
  40c480:	mov	w0, w1
  40c484:	cbz	x9, 40c4cc <feof@plt+0x9afc>
  40c488:	ldr	w8, [x9, #4]
  40c48c:	cbz	w8, 40c4cc <feof@plt+0x9afc>
  40c490:	add	x11, x9, #0x8
  40c494:	add	x9, x9, #0x10
  40c498:	mov	w10, #0x1                   	// #1
  40c49c:	b	40c4b4 <feof@plt+0x9ae4>
  40c4a0:	cmp	x10, x8
  40c4a4:	csel	x11, x9, xzr, cc  // cc = lo, ul, last
  40c4a8:	add	x9, x9, #0x8
  40c4ac:	add	x10, x10, #0x1
  40c4b0:	b.cs	40c4cc <feof@plt+0x9afc>  // b.hs, b.nlast
  40c4b4:	ldr	w12, [x11]
  40c4b8:	cmp	w12, w0
  40c4bc:	b.gt	40c4a0 <feof@plt+0x9ad0>
  40c4c0:	ldr	w11, [x11, #4]
  40c4c4:	add	w0, w11, w0
  40c4c8:	b	40c4a0 <feof@plt+0x9ad0>
  40c4cc:	ret
  40c4d0:	stp	x29, x30, [sp, #-32]!
  40c4d4:	stp	x20, x19, [sp, #16]
  40c4d8:	mov	x29, sp
  40c4dc:	cbz	x1, 40c548 <feof@plt+0x9b78>
  40c4e0:	ldr	w8, [x0, #40]
  40c4e4:	mov	x20, x1
  40c4e8:	mov	x19, x0
  40c4ec:	cmn	w8, #0x1
  40c4f0:	b.eq	40c514 <feof@plt+0x9b44>  // b.none
  40c4f4:	ldr	x0, [x19]
  40c4f8:	bl	4130a4 <feof@plt+0x106d4>
  40c4fc:	and	w8, w0, #0x1
  40c500:	strb	w8, [x20]
  40c504:	ldr	w0, [x19, #40]
  40c508:	ldp	x20, x19, [sp, #16]
  40c50c:	ldp	x29, x30, [sp], #32
  40c510:	ret
  40c514:	ldr	x0, [x19]
  40c518:	str	wzr, [x19, #40]
  40c51c:	mov	w1, #0x1                   	// #1
  40c520:	bl	412d44 <feof@plt+0x10374>
  40c524:	cbz	x0, 40c4f4 <feof@plt+0x9b24>
  40c528:	ldr	w8, [x19, #40]
  40c52c:	ldr	x0, [x19]
  40c530:	add	w9, w8, #0x1
  40c534:	add	w1, w8, #0x2
  40c538:	str	w9, [x19, #40]
  40c53c:	bl	412d44 <feof@plt+0x10374>
  40c540:	cbnz	x0, 40c528 <feof@plt+0x9b58>
  40c544:	b	40c4f4 <feof@plt+0x9b24>
  40c548:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40c54c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40c550:	add	x0, x0, #0xe88
  40c554:	add	x2, x2, #0xefd
  40c558:	mov	w1, #0x296                 	// #662
  40c55c:	bl	404ac4 <feof@plt+0x20f4>
  40c560:	stp	x29, x30, [sp, #-48]!
  40c564:	str	x21, [sp, #16]
  40c568:	stp	x20, x19, [sp, #32]
  40c56c:	mov	x29, sp
  40c570:	ldr	x8, [x0, #32]
  40c574:	mov	x19, x0
  40c578:	mov	x20, x1
  40c57c:	cbz	x8, 40c5b8 <feof@plt+0x9be8>
  40c580:	mov	x21, xzr
  40c584:	ldr	w9, [x8, #4]
  40c588:	cmp	x21, x9
  40c58c:	b.cs	40c5b8 <feof@plt+0x9be8>  // b.hs, b.nlast
  40c590:	add	x8, x8, x21, lsl #3
  40c594:	ldr	x8, [x8, #8]
  40c598:	mov	x0, x20
  40c59c:	ldr	x1, [x8]
  40c5a0:	bl	40f384 <feof@plt+0xc9b4>
  40c5a4:	mov	x0, x20
  40c5a8:	bl	40fd08 <feof@plt+0xd338>
  40c5ac:	ldr	x8, [x19, #32]
  40c5b0:	add	x21, x21, #0x1
  40c5b4:	cbnz	x8, 40c584 <feof@plt+0x9bb4>
  40c5b8:	ldr	x1, [x19, #8]
  40c5bc:	mov	x0, x20
  40c5c0:	ldp	x20, x19, [sp, #32]
  40c5c4:	ldr	x21, [sp, #16]
  40c5c8:	ldp	x29, x30, [sp], #48
  40c5cc:	b	40f384 <feof@plt+0xc9b4>
  40c5d0:	stp	x29, x30, [sp, #-96]!
  40c5d4:	stp	x28, x27, [sp, #16]
  40c5d8:	stp	x26, x25, [sp, #32]
  40c5dc:	stp	x24, x23, [sp, #48]
  40c5e0:	stp	x22, x21, [sp, #64]
  40c5e4:	stp	x20, x19, [sp, #80]
  40c5e8:	mov	x29, sp
  40c5ec:	mov	x19, x1
  40c5f0:	mov	x20, x0
  40c5f4:	tbz	w2, #0, 40c654 <feof@plt+0x9c84>
  40c5f8:	ldrb	w0, [x19, #67]
  40c5fc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40c600:	add	x1, x1, #0xcb8
  40c604:	mov	w2, #0xd                   	// #13
  40c608:	bl	407b70 <feof@plt+0x51a0>
  40c60c:	mov	x1, x0
  40c610:	mov	x0, x19
  40c614:	bl	40f384 <feof@plt+0xc9b4>
  40c618:	ldr	x2, [x20]
  40c61c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40c620:	add	x1, x1, #0xebd
  40c624:	mov	x0, x19
  40c628:	bl	40fbbc <feof@plt+0xd1ec>
  40c62c:	ldr	x2, [x20]
  40c630:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40c634:	add	x1, x1, #0xec5
  40c638:	mov	x0, x19
  40c63c:	bl	40fbbc <feof@plt+0xd1ec>
  40c640:	ldrb	w0, [x19, #67]
  40c644:	bl	407bf4 <feof@plt+0x5224>
  40c648:	mov	x1, x0
  40c64c:	mov	x0, x19
  40c650:	bl	40f384 <feof@plt+0xc9b4>
  40c654:	mov	x21, x20
  40c658:	ldr	x8, [x21, #8]!
  40c65c:	cbz	x8, 40c674 <feof@plt+0x9ca4>
  40c660:	mov	x9, x8
  40c664:	ldr	x8, [x8, #16]
  40c668:	cbnz	x8, 40c660 <feof@plt+0x9c90>
  40c66c:	ldr	x28, [x9, #8]
  40c670:	b	40c678 <feof@plt+0x9ca8>
  40c674:	mov	x28, xzr
  40c678:	ldr	w8, [x20, #40]
  40c67c:	cmn	w8, #0x1
  40c680:	b.eq	40c808 <feof@plt+0x9e38>  // b.none
  40c684:	ldr	x0, [x20]
  40c688:	bl	4130a4 <feof@plt+0x106d4>
  40c68c:	cbz	x28, 40c7ec <feof@plt+0x9e1c>
  40c690:	ldr	w25, [x20, #40]
  40c694:	ldr	x8, [x20, #8]
  40c698:	mov	w24, wzr
  40c69c:	mov	w27, #0x2                   	// #2
  40c6a0:	b	40c6b8 <feof@plt+0x9ce8>
  40c6a4:	mov	x9, x8
  40c6a8:	cbz	x8, 40c7ec <feof@plt+0x9e1c>
  40c6ac:	ldr	x28, [x9, #8]
  40c6b0:	add	w24, w22, w24
  40c6b4:	cbz	x28, 40c7ec <feof@plt+0x9e1c>
  40c6b8:	ldr	w23, [x28]
  40c6bc:	mov	w9, #0x4                   	// #4
  40c6c0:	cmp	w23, #0x4
  40c6c4:	csel	w9, w23, w9, gt
  40c6c8:	sub	w22, w9, #0x3
  40c6cc:	b	40c6f0 <feof@plt+0x9d20>
  40c6d0:	ldr	w10, [x10, #4]
  40c6d4:	cmp	w10, #0x0
  40c6d8:	cinc	w10, w27, ne  // ne = any
  40c6dc:	add	w9, w10, w9
  40c6e0:	ldr	w23, [x28]
  40c6e4:	sub	w10, w23, #0x3
  40c6e8:	cmp	w9, w10
  40c6ec:	b.lt	40c75c <feof@plt+0x9d8c>  // b.tstop
  40c6f0:	mov	x26, x28
  40c6f4:	cbz	x8, 40c75c <feof@plt+0x9d8c>
  40c6f8:	mov	x0, x21
  40c6fc:	mov	w1, w23
  40c700:	bl	40d308 <feof@plt+0xa938>
  40c704:	ldp	x8, x9, [x20, #8]
  40c708:	mov	w1, w23
  40c70c:	ldr	w0, [x8]
  40c710:	blr	x9
  40c714:	ldr	x8, [x20, #8]
  40c718:	cmp	w0, #0x0
  40c71c:	b.le	40c72c <feof@plt+0x9d5c>
  40c720:	mov	x10, x8
  40c724:	cbnz	x8, 40c740 <feof@plt+0x9d70>
  40c728:	b	40c75c <feof@plt+0x9d8c>
  40c72c:	ldr	x9, [x8, #24]
  40c730:	cbz	x9, 40c75c <feof@plt+0x9d8c>
  40c734:	mov	x10, x9
  40c738:	ldr	x9, [x9, #16]
  40c73c:	cbnz	x9, 40c734 <feof@plt+0x9d64>
  40c740:	ldr	x28, [x10, #8]
  40c744:	cbz	x28, 40c75c <feof@plt+0x9d8c>
  40c748:	ldr	x10, [x26, #24]
  40c74c:	ldr	w9, [x26]
  40c750:	cbnz	x10, 40c6d0 <feof@plt+0x9d00>
  40c754:	add	w9, w9, #0x2
  40c758:	b	40c6e0 <feof@plt+0x9d10>
  40c75c:	ldr	x9, [x26, #24]
  40c760:	ldr	w8, [x26]
  40c764:	cbz	x9, 40c77c <feof@plt+0x9dac>
  40c768:	ldr	w9, [x9, #4]
  40c76c:	cmp	w9, #0x0
  40c770:	cinc	w9, w27, ne  // ne = any
  40c774:	add	w8, w9, w8
  40c778:	b	40c780 <feof@plt+0x9db0>
  40c77c:	add	w8, w8, #0x2
  40c780:	cmp	w8, w25
  40c784:	csel	w3, w25, w8, gt
  40c788:	add	w4, w22, w24
  40c78c:	mov	x0, x20
  40c790:	mov	x1, x19
  40c794:	mov	w2, w22
  40c798:	bl	40c83c <feof@plt+0x9e6c>
  40c79c:	ldr	x8, [x20, #8]
  40c7a0:	cbz	x8, 40c7ec <feof@plt+0x9e1c>
  40c7a4:	ldr	w23, [x26]
  40c7a8:	mov	w22, w0
  40c7ac:	mov	x0, x21
  40c7b0:	mov	w1, w23
  40c7b4:	bl	40d308 <feof@plt+0xa938>
  40c7b8:	ldp	x8, x9, [x20, #8]
  40c7bc:	mov	w1, w23
  40c7c0:	ldr	w0, [x8]
  40c7c4:	blr	x9
  40c7c8:	ldr	x8, [x20, #8]
  40c7cc:	cmp	w0, #0x0
  40c7d0:	b.gt	40c6a4 <feof@plt+0x9cd4>
  40c7d4:	ldr	x10, [x8, #24]
  40c7d8:	cbz	x10, 40c7ec <feof@plt+0x9e1c>
  40c7dc:	mov	x9, x10
  40c7e0:	ldr	x10, [x10, #16]
  40c7e4:	cbnz	x10, 40c7dc <feof@plt+0x9e0c>
  40c7e8:	b	40c6ac <feof@plt+0x9cdc>
  40c7ec:	ldp	x20, x19, [sp, #80]
  40c7f0:	ldp	x22, x21, [sp, #64]
  40c7f4:	ldp	x24, x23, [sp, #48]
  40c7f8:	ldp	x26, x25, [sp, #32]
  40c7fc:	ldp	x28, x27, [sp, #16]
  40c800:	ldp	x29, x30, [sp], #96
  40c804:	ret
  40c808:	ldr	x0, [x20]
  40c80c:	str	wzr, [x20, #40]
  40c810:	mov	w1, #0x1                   	// #1
  40c814:	bl	412d44 <feof@plt+0x10374>
  40c818:	cbz	x0, 40c684 <feof@plt+0x9cb4>
  40c81c:	ldr	w8, [x20, #40]
  40c820:	ldr	x0, [x20]
  40c824:	add	w9, w8, #0x1
  40c828:	add	w1, w8, #0x2
  40c82c:	str	w9, [x20, #40]
  40c830:	bl	412d44 <feof@plt+0x10374>
  40c834:	cbnz	x0, 40c81c <feof@plt+0x9e4c>
  40c838:	b	40c684 <feof@plt+0x9cb4>
  40c83c:	stp	x29, x30, [sp, #-96]!
  40c840:	str	x27, [sp, #16]
  40c844:	stp	x26, x25, [sp, #32]
  40c848:	stp	x24, x23, [sp, #48]
  40c84c:	stp	x22, x21, [sp, #64]
  40c850:	stp	x20, x19, [sp, #80]
  40c854:	mov	x29, sp
  40c858:	subs	w8, w3, w2
  40c85c:	mov	w25, w4
  40c860:	mov	w19, w3
  40c864:	mov	w24, w2
  40c868:	mov	x20, x1
  40c86c:	mov	x21, x0
  40c870:	add	w22, w8, #0x1
  40c874:	mov	w23, wzr
  40c878:	b.ge	40c8f8 <feof@plt+0x9f28>  // b.tcont
  40c87c:	ldrb	w0, [x20, #67]
  40c880:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40c884:	add	x1, x1, #0xcc6
  40c888:	mov	w2, #0x9                   	// #9
  40c88c:	bl	407b70 <feof@plt+0x51a0>
  40c890:	mov	x1, x0
  40c894:	mov	x0, x20
  40c898:	bl	40f384 <feof@plt+0xc9b4>
  40c89c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40c8a0:	add	x1, x1, #0xecd
  40c8a4:	mov	x0, x20
  40c8a8:	mov	w2, w24
  40c8ac:	mov	w3, w22
  40c8b0:	mov	w4, w25
  40c8b4:	mov	w5, w23
  40c8b8:	bl	40fbbc <feof@plt+0xd1ec>
  40c8bc:	ldrb	w0, [x20, #67]
  40c8c0:	bl	407bf4 <feof@plt+0x5224>
  40c8c4:	mov	x1, x0
  40c8c8:	mov	x0, x20
  40c8cc:	bl	40f384 <feof@plt+0xc9b4>
  40c8d0:	cmp	w19, w24
  40c8d4:	b.ge	40c964 <feof@plt+0x9f94>  // b.tcont
  40c8d8:	sub	w0, w23, w22
  40c8dc:	ldp	x20, x19, [sp, #80]
  40c8e0:	ldp	x22, x21, [sp, #64]
  40c8e4:	ldp	x24, x23, [sp, #48]
  40c8e8:	ldp	x26, x25, [sp, #32]
  40c8ec:	ldr	x27, [sp, #16]
  40c8f0:	ldp	x29, x30, [sp], #96
  40c8f4:	ret
  40c8f8:	add	x26, x21, #0x8
  40c8fc:	mov	w27, w24
  40c900:	mov	x0, x26
  40c904:	mov	w1, w27
  40c908:	bl	40d308 <feof@plt+0xa938>
  40c90c:	ldr	x8, [x26]
  40c910:	cbz	x8, 40c928 <feof@plt+0x9f58>
  40c914:	ldr	x9, [x21, #16]
  40c918:	ldr	w0, [x8]
  40c91c:	mov	w1, w27
  40c920:	blr	x9
  40c924:	cbz	w0, 40c940 <feof@plt+0x9f70>
  40c928:	mov	w8, #0x1                   	// #1
  40c92c:	cmp	w27, w19
  40c930:	add	w27, w27, #0x1
  40c934:	add	w23, w8, w23
  40c938:	b.lt	40c900 <feof@plt+0x9f30>  // b.tstop
  40c93c:	b	40c87c <feof@plt+0x9eac>
  40c940:	ldr	x8, [x26]
  40c944:	cbz	x8, 40c928 <feof@plt+0x9f58>
  40c948:	ldr	x8, [x8, #8]
  40c94c:	cbz	x8, 40c928 <feof@plt+0x9f58>
  40c950:	ldr	x8, [x8, #32]
  40c954:	cbz	x8, 40c928 <feof@plt+0x9f58>
  40c958:	ldr	w8, [x8, #4]
  40c95c:	add	w8, w8, #0x1
  40c960:	b	40c92c <feof@plt+0x9f5c>
  40c964:	add	x25, x21, #0x8
  40c968:	mov	x0, x25
  40c96c:	mov	w1, w24
  40c970:	bl	40d308 <feof@plt+0xa938>
  40c974:	ldr	x8, [x25]
  40c978:	cbz	x8, 40c990 <feof@plt+0x9fc0>
  40c97c:	ldr	x9, [x21, #16]
  40c980:	ldr	w0, [x8]
  40c984:	mov	w1, w24
  40c988:	blr	x9
  40c98c:	cbz	w0, 40c9f0 <feof@plt+0xa020>
  40c990:	ldr	x0, [x21]
  40c994:	mov	w1, w24
  40c998:	bl	412d44 <feof@plt+0x10374>
  40c99c:	mov	x26, x0
  40c9a0:	mov	x27, x1
  40c9a4:	mov	w1, #0x20                  	// #32
  40c9a8:	mov	x0, x20
  40c9ac:	bl	40d5a0 <feof@plt+0xabd0>
  40c9b0:	cmp	w27, #0x1
  40c9b4:	b.lt	40c9d0 <feof@plt+0xa000>  // b.tstop
  40c9b8:	and	x27, x27, #0xffffffff
  40c9bc:	ldrb	w1, [x26], #1
  40c9c0:	mov	x0, x20
  40c9c4:	bl	40d5a0 <feof@plt+0xabd0>
  40c9c8:	subs	x27, x27, #0x1
  40c9cc:	b.ne	40c9bc <feof@plt+0x9fec>  // b.any
  40c9d0:	mov	w1, #0xa                   	// #10
  40c9d4:	mov	x0, x20
  40c9d8:	bl	40d5a0 <feof@plt+0xabd0>
  40c9dc:	add	w26, w24, #0x1
  40c9e0:	cmp	w26, w19
  40c9e4:	mov	w24, w26
  40c9e8:	b.le	40c968 <feof@plt+0x9f98>
  40c9ec:	b	40c8d8 <feof@plt+0x9f08>
  40c9f0:	ldr	x8, [x25]
  40c9f4:	cbz	x8, 40c990 <feof@plt+0x9fc0>
  40c9f8:	ldr	x8, [x8, #8]
  40c9fc:	cbz	x8, 40c990 <feof@plt+0x9fc0>
  40ca00:	mov	x0, x25
  40ca04:	mov	w1, w24
  40ca08:	bl	40d308 <feof@plt+0xa938>
  40ca0c:	ldr	x8, [x25]
  40ca10:	mov	w26, w24
  40ca14:	cbz	x8, 40ca58 <feof@plt+0xa088>
  40ca18:	mov	w26, w24
  40ca1c:	ldr	x9, [x21, #16]
  40ca20:	ldr	w0, [x8]
  40ca24:	mov	w1, w26
  40ca28:	blr	x9
  40ca2c:	cbnz	w0, 40ca58 <feof@plt+0xa088>
  40ca30:	ldr	x8, [x25]
  40ca34:	cbz	x8, 40ca58 <feof@plt+0xa088>
  40ca38:	ldr	x8, [x8, #8]
  40ca3c:	cbz	x8, 40ca58 <feof@plt+0xa088>
  40ca40:	add	w26, w26, #0x1
  40ca44:	mov	x0, x25
  40ca48:	mov	w1, w26
  40ca4c:	bl	40d308 <feof@plt+0xa938>
  40ca50:	ldr	x8, [x25]
  40ca54:	cbnz	x8, 40ca1c <feof@plt+0xa04c>
  40ca58:	sub	w3, w26, #0x1
  40ca5c:	mov	x0, x21
  40ca60:	mov	x1, x20
  40ca64:	mov	w2, w24
  40ca68:	bl	40cb20 <feof@plt+0xa150>
  40ca6c:	b	40c9e0 <feof@plt+0xa010>
  40ca70:	stp	x29, x30, [sp, #-64]!
  40ca74:	str	x23, [sp, #16]
  40ca78:	stp	x22, x21, [sp, #32]
  40ca7c:	stp	x20, x19, [sp, #48]
  40ca80:	mov	x29, sp
  40ca84:	cmp	w1, w2
  40ca88:	b.le	40caa8 <feof@plt+0xa0d8>
  40ca8c:	mov	w20, wzr
  40ca90:	mov	w0, w20
  40ca94:	ldp	x20, x19, [sp, #48]
  40ca98:	ldp	x22, x21, [sp, #32]
  40ca9c:	ldr	x23, [sp, #16]
  40caa0:	ldp	x29, x30, [sp], #64
  40caa4:	ret
  40caa8:	mov	w19, w2
  40caac:	mov	w22, w1
  40cab0:	mov	x21, x0
  40cab4:	mov	w20, wzr
  40cab8:	add	x23, x0, #0x8
  40cabc:	mov	x0, x23
  40cac0:	mov	w1, w22
  40cac4:	bl	40d308 <feof@plt+0xa938>
  40cac8:	ldr	x8, [x23]
  40cacc:	cbz	x8, 40cae4 <feof@plt+0xa114>
  40cad0:	ldr	x9, [x21, #16]
  40cad4:	ldr	w0, [x8]
  40cad8:	mov	w1, w22
  40cadc:	blr	x9
  40cae0:	cbz	w0, 40cafc <feof@plt+0xa12c>
  40cae4:	mov	w8, #0x1                   	// #1
  40cae8:	cmp	w22, w19
  40caec:	add	w22, w22, #0x1
  40caf0:	add	w20, w8, w20
  40caf4:	b.lt	40cabc <feof@plt+0xa0ec>  // b.tstop
  40caf8:	b	40ca90 <feof@plt+0xa0c0>
  40cafc:	ldr	x8, [x23]
  40cb00:	cbz	x8, 40cae4 <feof@plt+0xa114>
  40cb04:	ldr	x8, [x8, #8]
  40cb08:	cbz	x8, 40cae4 <feof@plt+0xa114>
  40cb0c:	ldr	x8, [x8, #32]
  40cb10:	cbz	x8, 40cae4 <feof@plt+0xa114>
  40cb14:	ldr	w8, [x8, #4]
  40cb18:	add	w8, w8, #0x1
  40cb1c:	b	40cae8 <feof@plt+0xa118>
  40cb20:	stp	x29, x30, [sp, #-80]!
  40cb24:	stp	x26, x25, [sp, #16]
  40cb28:	stp	x24, x23, [sp, #32]
  40cb2c:	stp	x22, x21, [sp, #48]
  40cb30:	stp	x20, x19, [sp, #64]
  40cb34:	mov	x29, sp
  40cb38:	ldrb	w8, [x1, #67]
  40cb3c:	mov	x19, x1
  40cb40:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40cb44:	mov	w21, w2
  40cb48:	mov	x22, x0
  40cb4c:	add	x1, x1, #0xcd9
  40cb50:	mov	w2, #0xb                   	// #11
  40cb54:	mov	w0, w8
  40cb58:	mov	w20, w3
  40cb5c:	bl	407b70 <feof@plt+0x51a0>
  40cb60:	mov	x1, x0
  40cb64:	mov	x0, x19
  40cb68:	bl	40f384 <feof@plt+0xc9b4>
  40cb6c:	cmp	w21, w20
  40cb70:	b.le	40cbac <feof@plt+0xa1dc>
  40cb74:	ldrb	w0, [x19, #67]
  40cb78:	bl	407bf4 <feof@plt+0x5224>
  40cb7c:	mov	x1, x0
  40cb80:	mov	x0, x19
  40cb84:	bl	40f384 <feof@plt+0xc9b4>
  40cb88:	ldrb	w0, [x19, #67]
  40cb8c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40cb90:	add	x1, x1, #0xce5
  40cb94:	mov	w2, #0xb                   	// #11
  40cb98:	bl	407b70 <feof@plt+0x51a0>
  40cb9c:	mov	x1, x0
  40cba0:	mov	x0, x19
  40cba4:	bl	40f384 <feof@plt+0xc9b4>
  40cba8:	b	40cce8 <feof@plt+0xa318>
  40cbac:	add	x23, x22, #0x8
  40cbb0:	mov	w24, w21
  40cbb4:	b	40cbd0 <feof@plt+0xa200>
  40cbb8:	mov	w1, #0xa                   	// #10
  40cbbc:	mov	x0, x19
  40cbc0:	bl	40d5a0 <feof@plt+0xabd0>
  40cbc4:	cmp	w24, w20
  40cbc8:	add	w24, w24, #0x1
  40cbcc:	b.ge	40cc5c <feof@plt+0xa28c>  // b.tcont
  40cbd0:	mov	x0, x23
  40cbd4:	mov	w1, w24
  40cbd8:	bl	40d308 <feof@plt+0xa938>
  40cbdc:	ldr	x8, [x23]
  40cbe0:	cbz	x8, 40cd10 <feof@plt+0xa340>
  40cbe4:	ldr	x9, [x22, #16]
  40cbe8:	ldr	w0, [x8]
  40cbec:	mov	w1, w24
  40cbf0:	blr	x9
  40cbf4:	cbnz	w0, 40cd10 <feof@plt+0xa340>
  40cbf8:	ldr	x8, [x23]
  40cbfc:	cbz	x8, 40cd10 <feof@plt+0xa340>
  40cc00:	ldr	x8, [x8, #8]
  40cc04:	cbz	x8, 40cd10 <feof@plt+0xa340>
  40cc08:	ldr	x8, [x8, #24]
  40cc0c:	cbz	x8, 40cbc4 <feof@plt+0xa1f4>
  40cc10:	ldr	w8, [x8, #4]
  40cc14:	cbz	w8, 40cbc4 <feof@plt+0xa1f4>
  40cc18:	ldr	x0, [x22]
  40cc1c:	mov	w1, w24
  40cc20:	bl	412d44 <feof@plt+0x10374>
  40cc24:	mov	x25, x0
  40cc28:	mov	x26, x1
  40cc2c:	mov	w1, #0x2d                  	// #45
  40cc30:	mov	x0, x19
  40cc34:	bl	40d5a0 <feof@plt+0xabd0>
  40cc38:	cmp	w26, #0x1
  40cc3c:	b.lt	40cbb8 <feof@plt+0xa1e8>  // b.tstop
  40cc40:	and	x26, x26, #0xffffffff
  40cc44:	ldrb	w1, [x25], #1
  40cc48:	mov	x0, x19
  40cc4c:	bl	40d5a0 <feof@plt+0xabd0>
  40cc50:	subs	x26, x26, #0x1
  40cc54:	b.ne	40cc44 <feof@plt+0xa274>  // b.any
  40cc58:	b	40cbb8 <feof@plt+0xa1e8>
  40cc5c:	ldrb	w0, [x19, #67]
  40cc60:	bl	407bf4 <feof@plt+0x5224>
  40cc64:	mov	x1, x0
  40cc68:	mov	x0, x19
  40cc6c:	bl	40f384 <feof@plt+0xc9b4>
  40cc70:	ldrb	w0, [x19, #67]
  40cc74:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40cc78:	add	x1, x1, #0xce5
  40cc7c:	mov	w2, #0xb                   	// #11
  40cc80:	bl	407b70 <feof@plt+0x51a0>
  40cc84:	mov	x1, x0
  40cc88:	mov	x0, x19
  40cc8c:	bl	40f384 <feof@plt+0xc9b4>
  40cc90:	cmp	w21, w20
  40cc94:	b.gt	40cce8 <feof@plt+0xa318>
  40cc98:	add	x23, x22, #0x8
  40cc9c:	mov	x0, x23
  40cca0:	mov	w1, w21
  40cca4:	bl	40d308 <feof@plt+0xa938>
  40cca8:	ldr	x8, [x23]
  40ccac:	cbz	x8, 40cd28 <feof@plt+0xa358>
  40ccb0:	ldr	x9, [x22, #16]
  40ccb4:	ldr	w0, [x8]
  40ccb8:	mov	w1, w21
  40ccbc:	blr	x9
  40ccc0:	cbnz	w0, 40cd28 <feof@plt+0xa358>
  40ccc4:	ldr	x8, [x23]
  40ccc8:	cbz	x8, 40cd28 <feof@plt+0xa358>
  40cccc:	ldr	x0, [x8, #8]
  40ccd0:	cbz	x0, 40cd28 <feof@plt+0xa358>
  40ccd4:	mov	x1, x19
  40ccd8:	bl	40cd40 <feof@plt+0xa370>
  40ccdc:	cmp	w21, w20
  40cce0:	add	w21, w21, #0x1
  40cce4:	b.lt	40cc9c <feof@plt+0xa2cc>  // b.tstop
  40cce8:	ldrb	w0, [x19, #67]
  40ccec:	bl	407bf4 <feof@plt+0x5224>
  40ccf0:	mov	x1, x0
  40ccf4:	mov	x0, x19
  40ccf8:	ldp	x20, x19, [sp, #64]
  40ccfc:	ldp	x22, x21, [sp, #48]
  40cd00:	ldp	x24, x23, [sp, #32]
  40cd04:	ldp	x26, x25, [sp, #16]
  40cd08:	ldp	x29, x30, [sp], #80
  40cd0c:	b	40f384 <feof@plt+0xc9b4>
  40cd10:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40cd14:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40cd18:	add	x0, x0, #0xe88
  40cd1c:	add	x2, x2, #0xee2
  40cd20:	mov	w1, #0x239                 	// #569
  40cd24:	bl	404ac4 <feof@plt+0x20f4>
  40cd28:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40cd2c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40cd30:	add	x0, x0, #0xe88
  40cd34:	add	x2, x2, #0xee2
  40cd38:	mov	w1, #0x24b                 	// #587
  40cd3c:	bl	404ac4 <feof@plt+0x20f4>
  40cd40:	stp	x29, x30, [sp, #-64]!
  40cd44:	str	x23, [sp, #16]
  40cd48:	stp	x22, x21, [sp, #32]
  40cd4c:	stp	x20, x19, [sp, #48]
  40cd50:	mov	x29, sp
  40cd54:	ldr	x8, [x0, #32]
  40cd58:	mov	x20, x0
  40cd5c:	mov	x19, x1
  40cd60:	cbz	x8, 40cdcc <feof@plt+0xa3fc>
  40cd64:	mov	w21, wzr
  40cd68:	b	40cd84 <feof@plt+0xa3b4>
  40cd6c:	mov	w1, #0xa                   	// #10
  40cd70:	mov	x0, x19
  40cd74:	bl	40d5a0 <feof@plt+0xabd0>
  40cd78:	ldr	x8, [x20, #32]
  40cd7c:	add	w21, w21, #0x1
  40cd80:	cbz	x8, 40cdcc <feof@plt+0xa3fc>
  40cd84:	ldr	w9, [x8, #4]
  40cd88:	cmp	w9, w21
  40cd8c:	b.ls	40cdcc <feof@plt+0xa3fc>  // b.plast
  40cd90:	add	x8, x8, w21, uxtw #3
  40cd94:	ldr	x8, [x8, #8]
  40cd98:	mov	w1, #0x2b                  	// #43
  40cd9c:	mov	x0, x19
  40cda0:	ldr	x22, [x8]
  40cda4:	ldr	w23, [x8, #8]
  40cda8:	bl	40d5a0 <feof@plt+0xabd0>
  40cdac:	cmp	w23, #0x1
  40cdb0:	b.lt	40cd6c <feof@plt+0xa39c>  // b.tstop
  40cdb4:	ldrb	w1, [x22], #1
  40cdb8:	mov	x0, x19
  40cdbc:	bl	40d5a0 <feof@plt+0xabd0>
  40cdc0:	subs	x23, x23, #0x1
  40cdc4:	b.ne	40cdb4 <feof@plt+0xa3e4>  // b.any
  40cdc8:	b	40cd6c <feof@plt+0xa39c>
  40cdcc:	ldr	x8, [x20, #24]
  40cdd0:	cbz	x8, 40ce10 <feof@plt+0xa440>
  40cdd4:	ldr	w8, [x8, #4]
  40cdd8:	ldr	x21, [x20, #8]
  40cddc:	ldr	w20, [x20, #16]
  40cde0:	cbz	w8, 40ce18 <feof@plt+0xa448>
  40cde4:	mov	w1, #0x2b                  	// #43
  40cde8:	mov	x0, x19
  40cdec:	bl	40d5a0 <feof@plt+0xabd0>
  40cdf0:	cmp	w20, #0x1
  40cdf4:	b.lt	40ce44 <feof@plt+0xa474>  // b.tstop
  40cdf8:	ldrb	w1, [x21], #1
  40cdfc:	mov	x0, x19
  40ce00:	bl	40d5a0 <feof@plt+0xabd0>
  40ce04:	subs	x20, x20, #0x1
  40ce08:	b.ne	40cdf8 <feof@plt+0xa428>  // b.any
  40ce0c:	b	40ce44 <feof@plt+0xa474>
  40ce10:	ldr	x21, [x20, #8]
  40ce14:	ldr	w20, [x20, #16]
  40ce18:	mov	w1, #0x20                  	// #32
  40ce1c:	mov	x0, x19
  40ce20:	bl	40d5a0 <feof@plt+0xabd0>
  40ce24:	cmp	w20, #0x1
  40ce28:	b.lt	40ce44 <feof@plt+0xa474>  // b.tstop
  40ce2c:	mov	w20, w20
  40ce30:	ldrb	w1, [x21], #1
  40ce34:	mov	x0, x19
  40ce38:	bl	40d5a0 <feof@plt+0xabd0>
  40ce3c:	subs	x20, x20, #0x1
  40ce40:	b.ne	40ce30 <feof@plt+0xa460>  // b.any
  40ce44:	mov	x0, x19
  40ce48:	ldp	x20, x19, [sp, #48]
  40ce4c:	ldp	x22, x21, [sp, #32]
  40ce50:	ldr	x23, [sp, #16]
  40ce54:	mov	w1, #0xa                   	// #10
  40ce58:	ldp	x29, x30, [sp], #64
  40ce5c:	b	40d5a0 <feof@plt+0xabd0>
  40ce60:	ldr	x8, [x0, #32]
  40ce64:	cbz	x8, 40ce74 <feof@plt+0xa4a4>
  40ce68:	ldr	w8, [x8, #4]
  40ce6c:	add	w0, w8, #0x1
  40ce70:	ret
  40ce74:	mov	w0, #0x1                   	// #1
  40ce78:	ret
  40ce7c:	stp	x29, x30, [sp, #-48]!
  40ce80:	stp	x22, x21, [sp, #16]
  40ce84:	stp	x20, x19, [sp, #32]
  40ce88:	mov	x29, sp
  40ce8c:	movi	v0.2d, #0x0
  40ce90:	mov	x19, x0
  40ce94:	str	w2, [x0]
  40ce98:	mov	x21, x0
  40ce9c:	stur	q0, [x0, #24]
  40cea0:	mov	x0, x1
  40cea4:	mov	w1, w2
  40cea8:	str	q0, [x21, #8]!
  40ceac:	bl	412d44 <feof@plt+0x10374>
  40ceb0:	cbz	x0, 40cf14 <feof@plt+0xa544>
  40ceb4:	ldr	w8, [x19, #20]
  40ceb8:	mov	x20, x0
  40cebc:	str	w1, [x19, #16]
  40cec0:	cmp	w8, w1
  40cec4:	b.le	40ced0 <feof@plt+0xa500>
  40cec8:	ldr	x0, [x21]
  40cecc:	b	40cef0 <feof@plt+0xa520>
  40ced0:	ldr	x0, [x19, #8]
  40ced4:	lsl	w8, w1, #1
  40ced8:	add	w22, w8, #0x2
  40cedc:	sxtw	x1, w22
  40cee0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40cee4:	ldr	w1, [x19, #16]
  40cee8:	str	x0, [x19, #8]
  40ceec:	str	w22, [x19, #20]
  40cef0:	sxtw	x2, w1
  40cef4:	mov	x1, x20
  40cef8:	bl	402390 <memcpy@plt>
  40cefc:	ldp	w8, w9, [x19, #16]
  40cf00:	sxtw	x8, w8
  40cf04:	cmp	w8, w9
  40cf08:	b.ge	40cf24 <feof@plt+0xa554>  // b.tcont
  40cf0c:	ldr	x9, [x21]
  40cf10:	strb	wzr, [x9, x8]
  40cf14:	ldp	x20, x19, [sp, #32]
  40cf18:	ldp	x22, x21, [sp, #16]
  40cf1c:	ldp	x29, x30, [sp], #48
  40cf20:	ret
  40cf24:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40cf28:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40cf2c:	add	x0, x0, #0xe88
  40cf30:	add	x2, x2, #0xe76
  40cf34:	mov	w1, #0x36b                 	// #875
  40cf38:	bl	404ac4 <feof@plt+0x20f4>
  40cf3c:	stp	x29, x30, [sp, #-32]!
  40cf40:	stp	x20, x19, [sp, #16]
  40cf44:	mov	x29, sp
  40cf48:	ldr	w8, [x0, #20]
  40cf4c:	cmp	w8, w1
  40cf50:	b.gt	40cf74 <feof@plt+0xa5a4>
  40cf54:	mov	x19, x0
  40cf58:	ldr	x0, [x0, #8]
  40cf5c:	lsl	w8, w1, #1
  40cf60:	add	w20, w8, #0x2
  40cf64:	sxtw	x1, w20
  40cf68:	bl	450728 <_obstack_memory_used@@Base+0x190>
  40cf6c:	str	x0, [x19, #8]
  40cf70:	str	w20, [x19, #20]
  40cf74:	ldp	x20, x19, [sp, #16]
  40cf78:	ldp	x29, x30, [sp], #32
  40cf7c:	ret
  40cf80:	stp	x29, x30, [sp, #-16]!
  40cf84:	mov	x29, sp
  40cf88:	ldp	w8, w9, [x0, #16]
  40cf8c:	sxtw	x8, w8
  40cf90:	cmp	w8, w9
  40cf94:	b.ge	40cfa8 <feof@plt+0xa5d8>  // b.tcont
  40cf98:	ldr	x9, [x0, #8]
  40cf9c:	strb	wzr, [x9, x8]
  40cfa0:	ldp	x29, x30, [sp], #16
  40cfa4:	ret
  40cfa8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40cfac:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  40cfb0:	add	x0, x0, #0xe88
  40cfb4:	add	x2, x2, #0xe76
  40cfb8:	mov	w1, #0x36b                 	// #875
  40cfbc:	bl	404ac4 <feof@plt+0x20f4>
  40cfc0:	stp	x29, x30, [sp, #-48]!
  40cfc4:	str	x21, [sp, #16]
  40cfc8:	stp	x20, x19, [sp, #32]
  40cfcc:	mov	x29, sp
  40cfd0:	mov	x19, x0
  40cfd4:	ldr	x0, [x0, #8]
  40cfd8:	bl	4024c0 <free@plt>
  40cfdc:	ldr	x0, [x19, #32]
  40cfe0:	cbz	x0, 40d034 <feof@plt+0xa664>
  40cfe4:	mov	x21, xzr
  40cfe8:	b	40cff4 <feof@plt+0xa624>
  40cfec:	add	x21, x21, #0x1
  40cff0:	cbz	x0, 40d034 <feof@plt+0xa664>
  40cff4:	ldr	w8, [x0, #4]
  40cff8:	cmp	x21, x8
  40cffc:	b.cs	40d024 <feof@plt+0xa654>  // b.hs, b.nlast
  40d000:	add	x8, x0, x21, lsl #3
  40d004:	ldr	x20, [x8, #8]
  40d008:	cbz	x20, 40cfec <feof@plt+0xa61c>
  40d00c:	ldr	x0, [x20]
  40d010:	bl	4024c0 <free@plt>
  40d014:	mov	x0, x20
  40d018:	bl	402670 <_ZdlPv@plt>
  40d01c:	ldr	x0, [x19, #32]
  40d020:	b	40cfec <feof@plt+0xa61c>
  40d024:	ldr	w8, [x0]
  40d028:	tbnz	w8, #31, 40d064 <feof@plt+0xa694>
  40d02c:	bl	4024c0 <free@plt>
  40d030:	str	xzr, [x19, #32]
  40d034:	ldr	x0, [x19, #24]
  40d038:	cbz	x0, 40d054 <feof@plt+0xa684>
  40d03c:	ldr	w8, [x0]
  40d040:	tbnz	w8, #31, 40d050 <feof@plt+0xa680>
  40d044:	bl	4024c0 <free@plt>
  40d048:	str	xzr, [x19, #24]
  40d04c:	b	40d054 <feof@plt+0xa684>
  40d050:	str	wzr, [x0, #4]
  40d054:	ldp	x20, x19, [sp, #32]
  40d058:	ldr	x21, [sp, #16]
  40d05c:	ldp	x29, x30, [sp], #48
  40d060:	ret
  40d064:	str	wzr, [x0, #4]
  40d068:	ldr	x0, [x19, #24]
  40d06c:	cbnz	x0, 40d03c <feof@plt+0xa66c>
  40d070:	b	40d054 <feof@plt+0xa684>
  40d074:	stp	x29, x30, [sp, #-64]!
  40d078:	str	x23, [sp, #16]
  40d07c:	stp	x22, x21, [sp, #32]
  40d080:	stp	x20, x19, [sp, #48]
  40d084:	mov	x29, sp
  40d088:	cbz	x1, 40d158 <feof@plt+0xa788>
  40d08c:	ldr	x8, [x0, #16]
  40d090:	mov	x20, x1
  40d094:	mov	x19, x0
  40d098:	cbz	x8, 40d0a4 <feof@plt+0xa6d4>
  40d09c:	ldr	w0, [x20]
  40d0a0:	blr	x8
  40d0a4:	ldr	x8, [x19, #24]
  40d0a8:	cbz	x8, 40d0b4 <feof@plt+0xa6e4>
  40d0ac:	ldr	x0, [x20, #8]
  40d0b0:	blr	x8
  40d0b4:	mov	x21, xzr
  40d0b8:	str	xzr, [x20, #32]
  40d0bc:	ldr	x9, [x20, #16]
  40d0c0:	cbz	x9, 40d0f4 <feof@plt+0xa724>
  40d0c4:	ldr	x8, [x19, #16]
  40d0c8:	cbz	x8, 40d0d4 <feof@plt+0xa704>
  40d0cc:	ldr	w0, [x9]
  40d0d0:	blr	x8
  40d0d4:	ldr	x8, [x19, #24]
  40d0d8:	cbz	x8, 40d0e8 <feof@plt+0xa718>
  40d0dc:	ldr	x9, [x20, #16]
  40d0e0:	ldr	x0, [x9, #8]
  40d0e4:	blr	x8
  40d0e8:	ldr	x8, [x20, #16]
  40d0ec:	str	x21, [x8, #32]
  40d0f0:	ldr	x21, [x20, #16]
  40d0f4:	ldr	x9, [x20, #24]
  40d0f8:	cbz	x9, 40d134 <feof@plt+0xa764>
  40d0fc:	ldr	x8, [x19, #16]
  40d100:	cbz	x8, 40d10c <feof@plt+0xa73c>
  40d104:	ldr	w0, [x9]
  40d108:	blr	x8
  40d10c:	ldr	x8, [x19, #24]
  40d110:	cbz	x8, 40d120 <feof@plt+0xa750>
  40d114:	ldr	x9, [x20, #24]
  40d118:	ldr	x0, [x9, #8]
  40d11c:	blr	x8
  40d120:	ldr	x8, [x20, #24]
  40d124:	str	x21, [x8, #32]
  40d128:	ldr	x22, [x20, #24]
  40d12c:	mov	x21, x22
  40d130:	b	40d138 <feof@plt+0xa768>
  40d134:	mov	x22, x21
  40d138:	ldr	x23, [x20, #32]
  40d13c:	mov	x0, x20
  40d140:	bl	402670 <_ZdlPv@plt>
  40d144:	mov	x20, x23
  40d148:	cbnz	x23, 40d0bc <feof@plt+0xa6ec>
  40d14c:	mov	x21, xzr
  40d150:	mov	x20, x22
  40d154:	cbnz	x22, 40d0bc <feof@plt+0xa6ec>
  40d158:	ldp	x20, x19, [sp, #48]
  40d15c:	ldp	x22, x21, [sp, #32]
  40d160:	ldr	x23, [sp, #16]
  40d164:	ldp	x29, x30, [sp], #64
  40d168:	ret
  40d16c:	stp	x29, x30, [sp, #-80]!
  40d170:	str	x25, [sp, #16]
  40d174:	stp	x24, x23, [sp, #32]
  40d178:	stp	x22, x21, [sp, #48]
  40d17c:	stp	x20, x19, [sp, #64]
  40d180:	mov	x29, sp
  40d184:	ldr	x22, [x0]
  40d188:	cbz	x22, 40d2f0 <feof@plt+0xa920>
  40d18c:	mov	x20, x1
  40d190:	ldr	x8, [x0, #8]
  40d194:	ldr	x1, [x22]
  40d198:	mov	x19, x0
  40d19c:	mov	x0, x20
  40d1a0:	blr	x8
  40d1a4:	cbz	w0, 40d2f0 <feof@plt+0xa920>
  40d1a8:	mov	w21, w0
  40d1ac:	mov	w23, #0x18                  	// #24
  40d1b0:	mov	w24, #0x10                  	// #16
  40d1b4:	cmp	w21, #0x0
  40d1b8:	csel	x8, x24, x23, lt  // lt = tstop
  40d1bc:	ldr	x25, [x22, x8]
  40d1c0:	cbz	x25, 40d2f0 <feof@plt+0xa920>
  40d1c4:	ldr	x8, [x19, #8]
  40d1c8:	ldr	x1, [x25]
  40d1cc:	mov	x0, x20
  40d1d0:	blr	x8
  40d1d4:	cbz	w0, 40d2cc <feof@plt+0xa8fc>
  40d1d8:	tbnz	w0, #31, 40d228 <feof@plt+0xa858>
  40d1dc:	ldr	x8, [x25, #24]
  40d1e0:	cbz	x8, 40d2cc <feof@plt+0xa8fc>
  40d1e4:	mov	w8, #0x1                   	// #1
  40d1e8:	tst	w0, w21
  40d1ec:	b.lt	40d23c <feof@plt+0xa86c>  // b.tstop
  40d1f0:	cmp	w21, #0x1
  40d1f4:	cset	w9, lt  // lt = tstop
  40d1f8:	eor	w8, w8, #0x1
  40d1fc:	orr	w9, w9, w8
  40d200:	tbnz	w9, #0, 40d250 <feof@plt+0xa880>
  40d204:	ldr	x8, [x25, #24]
  40d208:	ldr	x9, [x8, #16]
  40d20c:	str	x25, [x8, #16]
  40d210:	str	x9, [x25, #24]
  40d214:	str	x8, [x22, #24]
  40d218:	ldr	x9, [x8, #16]
  40d21c:	str	x22, [x8, #16]
  40d220:	str	x9, [x22, #24]
  40d224:	b	40d280 <feof@plt+0xa8b0>
  40d228:	ldr	x8, [x25, #16]
  40d22c:	cbz	x8, 40d2cc <feof@plt+0xa8fc>
  40d230:	mov	w8, wzr
  40d234:	tst	w0, w21
  40d238:	b.ge	40d1f0 <feof@plt+0xa820>  // b.tcont
  40d23c:	ldr	x8, [x25, #16]
  40d240:	ldr	x9, [x8, #24]
  40d244:	str	x25, [x8, #24]
  40d248:	str	x9, [x25, #16]
  40d24c:	b	40d270 <feof@plt+0xa8a0>
  40d250:	cmp	w21, #0x0
  40d254:	cset	w9, ge  // ge = tcont
  40d258:	orr	w8, w9, w8
  40d25c:	tbnz	w8, #0, 40d2a4 <feof@plt+0xa8d4>
  40d260:	ldr	x8, [x25, #24]
  40d264:	ldr	x9, [x8, #16]
  40d268:	str	x25, [x8, #16]
  40d26c:	str	x9, [x25, #24]
  40d270:	str	x8, [x22, #16]
  40d274:	ldr	x9, [x8, #24]
  40d278:	str	x22, [x8, #24]
  40d27c:	str	x9, [x22, #16]
  40d280:	mov	x22, x8
  40d284:	str	x8, [x19]
  40d288:	ldr	x8, [x19, #8]
  40d28c:	ldr	x1, [x22]
  40d290:	mov	x0, x20
  40d294:	blr	x8
  40d298:	mov	w21, w0
  40d29c:	cbnz	w0, 40d1b4 <feof@plt+0xa7e4>
  40d2a0:	b	40d2f0 <feof@plt+0xa920>
  40d2a4:	cmp	w21, #0x1
  40d2a8:	b.lt	40d2c4 <feof@plt+0xa8f4>  // b.tstop
  40d2ac:	tbz	w0, #31, 40d2c4 <feof@plt+0xa8f4>
  40d2b0:	ldr	x8, [x25, #16]
  40d2b4:	ldr	x9, [x8, #24]
  40d2b8:	str	x25, [x8, #24]
  40d2bc:	str	x9, [x25, #16]
  40d2c0:	b	40d214 <feof@plt+0xa844>
  40d2c4:	ldr	x22, [x19]
  40d2c8:	b	40d288 <feof@plt+0xa8b8>
  40d2cc:	tbnz	w21, #31, 40d2e0 <feof@plt+0xa910>
  40d2d0:	ldr	x8, [x25, #16]
  40d2d4:	str	x22, [x25, #16]
  40d2d8:	str	x8, [x22, #24]
  40d2dc:	b	40d2ec <feof@plt+0xa91c>
  40d2e0:	ldr	x8, [x25, #24]
  40d2e4:	str	x22, [x25, #24]
  40d2e8:	str	x8, [x22, #16]
  40d2ec:	str	x25, [x19]
  40d2f0:	ldp	x20, x19, [sp, #64]
  40d2f4:	ldp	x22, x21, [sp, #48]
  40d2f8:	ldp	x24, x23, [sp, #32]
  40d2fc:	ldr	x25, [sp, #16]
  40d300:	ldp	x29, x30, [sp], #80
  40d304:	ret
  40d308:	stp	x29, x30, [sp, #-80]!
  40d30c:	str	x25, [sp, #16]
  40d310:	stp	x24, x23, [sp, #32]
  40d314:	stp	x22, x21, [sp, #48]
  40d318:	stp	x20, x19, [sp, #64]
  40d31c:	mov	x29, sp
  40d320:	ldr	x22, [x0]
  40d324:	cbz	x22, 40d48c <feof@plt+0xaabc>
  40d328:	mov	w20, w1
  40d32c:	ldr	x8, [x0, #8]
  40d330:	ldr	w1, [x22]
  40d334:	mov	x19, x0
  40d338:	mov	w0, w20
  40d33c:	blr	x8
  40d340:	cbz	w0, 40d48c <feof@plt+0xaabc>
  40d344:	mov	w21, w0
  40d348:	mov	w23, #0x18                  	// #24
  40d34c:	mov	w24, #0x10                  	// #16
  40d350:	cmp	w21, #0x0
  40d354:	csel	x8, x24, x23, lt  // lt = tstop
  40d358:	ldr	x25, [x22, x8]
  40d35c:	cbz	x25, 40d48c <feof@plt+0xaabc>
  40d360:	ldr	x8, [x19, #8]
  40d364:	ldr	w1, [x25]
  40d368:	mov	w0, w20
  40d36c:	blr	x8
  40d370:	cbz	w0, 40d468 <feof@plt+0xaa98>
  40d374:	tbnz	w0, #31, 40d3c4 <feof@plt+0xa9f4>
  40d378:	ldr	x8, [x25, #24]
  40d37c:	cbz	x8, 40d468 <feof@plt+0xaa98>
  40d380:	mov	w8, #0x1                   	// #1
  40d384:	tst	w0, w21
  40d388:	b.lt	40d3d8 <feof@plt+0xaa08>  // b.tstop
  40d38c:	cmp	w21, #0x1
  40d390:	cset	w9, lt  // lt = tstop
  40d394:	eor	w8, w8, #0x1
  40d398:	orr	w9, w9, w8
  40d39c:	tbnz	w9, #0, 40d3ec <feof@plt+0xaa1c>
  40d3a0:	ldr	x8, [x25, #24]
  40d3a4:	ldr	x9, [x8, #16]
  40d3a8:	str	x25, [x8, #16]
  40d3ac:	str	x9, [x25, #24]
  40d3b0:	str	x8, [x22, #24]
  40d3b4:	ldr	x9, [x8, #16]
  40d3b8:	str	x22, [x8, #16]
  40d3bc:	str	x9, [x22, #24]
  40d3c0:	b	40d41c <feof@plt+0xaa4c>
  40d3c4:	ldr	x8, [x25, #16]
  40d3c8:	cbz	x8, 40d468 <feof@plt+0xaa98>
  40d3cc:	mov	w8, wzr
  40d3d0:	tst	w0, w21
  40d3d4:	b.ge	40d38c <feof@plt+0xa9bc>  // b.tcont
  40d3d8:	ldr	x8, [x25, #16]
  40d3dc:	ldr	x9, [x8, #24]
  40d3e0:	str	x25, [x8, #24]
  40d3e4:	str	x9, [x25, #16]
  40d3e8:	b	40d40c <feof@plt+0xaa3c>
  40d3ec:	cmp	w21, #0x0
  40d3f0:	cset	w9, ge  // ge = tcont
  40d3f4:	orr	w8, w9, w8
  40d3f8:	tbnz	w8, #0, 40d440 <feof@plt+0xaa70>
  40d3fc:	ldr	x8, [x25, #24]
  40d400:	ldr	x9, [x8, #16]
  40d404:	str	x25, [x8, #16]
  40d408:	str	x9, [x25, #24]
  40d40c:	str	x8, [x22, #16]
  40d410:	ldr	x9, [x8, #24]
  40d414:	str	x22, [x8, #24]
  40d418:	str	x9, [x22, #16]
  40d41c:	mov	x22, x8
  40d420:	str	x8, [x19]
  40d424:	ldr	x8, [x19, #8]
  40d428:	ldr	w1, [x22]
  40d42c:	mov	w0, w20
  40d430:	blr	x8
  40d434:	mov	w21, w0
  40d438:	cbnz	w0, 40d350 <feof@plt+0xa980>
  40d43c:	b	40d48c <feof@plt+0xaabc>
  40d440:	cmp	w21, #0x1
  40d444:	b.lt	40d460 <feof@plt+0xaa90>  // b.tstop
  40d448:	tbz	w0, #31, 40d460 <feof@plt+0xaa90>
  40d44c:	ldr	x8, [x25, #16]
  40d450:	ldr	x9, [x8, #24]
  40d454:	str	x25, [x8, #24]
  40d458:	str	x9, [x25, #16]
  40d45c:	b	40d3b0 <feof@plt+0xa9e0>
  40d460:	ldr	x22, [x19]
  40d464:	b	40d424 <feof@plt+0xaa54>
  40d468:	tbnz	w21, #31, 40d47c <feof@plt+0xaaac>
  40d46c:	ldr	x8, [x25, #16]
  40d470:	str	x22, [x25, #16]
  40d474:	str	x8, [x22, #24]
  40d478:	b	40d488 <feof@plt+0xaab8>
  40d47c:	ldr	x8, [x25, #24]
  40d480:	str	x22, [x25, #24]
  40d484:	str	x8, [x22, #16]
  40d488:	str	x25, [x19]
  40d48c:	ldp	x20, x19, [sp, #64]
  40d490:	ldp	x22, x21, [sp, #48]
  40d494:	ldp	x24, x23, [sp, #32]
  40d498:	ldr	x25, [sp, #16]
  40d49c:	ldp	x29, x30, [sp], #80
  40d4a0:	ret
  40d4a4:	ldr	x0, [x0, #32]
  40d4a8:	b	42c24c <feof@plt+0x2987c>
  40d4ac:	cbz	w1, 40d4b8 <feof@plt+0xaae8>
  40d4b0:	mov	w0, wzr
  40d4b4:	ret
  40d4b8:	ldr	x0, [x0, #32]
  40d4bc:	b	42c128 <feof@plt+0x29758>
  40d4c0:	stp	x29, x30, [sp, #-48]!
  40d4c4:	str	x21, [sp, #16]
  40d4c8:	stp	x20, x19, [sp, #32]
  40d4cc:	mov	x29, sp
  40d4d0:	movi	v0.2d, #0x0
  40d4d4:	stp	x0, xzr, [x0, #176]
  40d4d8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40d4dc:	stp	q0, q0, [x0, #144]
  40d4e0:	stp	q0, q0, [x0, #112]
  40d4e4:	stp	q0, q0, [x0, #80]
  40d4e8:	stp	q0, q0, [x0, #48]
  40d4ec:	stp	q0, q0, [x0, #16]
  40d4f0:	str	q0, [x0]
  40d4f4:	ldr	x8, [x8, #1336]
  40d4f8:	adrp	x20, 415000 <feof@plt+0x12630>
  40d4fc:	adrp	x21, 415000 <feof@plt+0x12630>
  40d500:	add	x20, x20, #0x814
  40d504:	str	x8, [x0, #192]
  40d508:	mov	x8, x0
  40d50c:	str	q0, [x8, #200]!
  40d510:	add	x21, x21, #0x840
  40d514:	str	wzr, [x8, #128]
  40d518:	stp	q0, q0, [x8, #96]
  40d51c:	stp	q0, q0, [x8, #64]
  40d520:	mov	w8, #0x1                   	// #1
  40d524:	mov	x1, xzr
  40d528:	mov	x2, xzr
  40d52c:	mov	x3, x20
  40d530:	mov	x4, x21
  40d534:	add	x19, x0, #0x58
  40d538:	stur	q0, [x0, #248]
  40d53c:	stur	q0, [x0, #232]
  40d540:	stur	q0, [x0, #216]
  40d544:	strb	w8, [x0, #332]
  40d548:	bl	450220 <_obstack_begin@@Base>
  40d54c:	mov	x0, x19
  40d550:	mov	x3, x20
  40d554:	mov	x4, x21
  40d558:	ldp	x20, x19, [sp, #32]
  40d55c:	ldr	x21, [sp, #16]
  40d560:	mov	x1, xzr
  40d564:	mov	x2, xzr
  40d568:	ldp	x29, x30, [sp], #48
  40d56c:	b	450220 <_obstack_begin@@Base>
  40d570:	stp	x29, x30, [sp, #-32]!
  40d574:	str	x19, [sp, #16]
  40d578:	mov	x29, sp
  40d57c:	mov	x19, x0
  40d580:	add	x0, x0, #0x58
  40d584:	mov	x1, xzr
  40d588:	bl	450504 <_obstack_free@@Base>
  40d58c:	mov	x0, x19
  40d590:	ldr	x19, [sp, #16]
  40d594:	mov	x1, xzr
  40d598:	ldp	x29, x30, [sp], #32
  40d59c:	b	450504 <_obstack_free@@Base>
  40d5a0:	stp	x29, x30, [sp, #-48]!
  40d5a4:	str	x21, [sp, #16]
  40d5a8:	stp	x20, x19, [sp, #32]
  40d5ac:	mov	x29, sp
  40d5b0:	ldr	w8, [x0, #40]
  40d5b4:	mov	x19, x0
  40d5b8:	mov	w20, w1
  40d5bc:	cmp	w8, #0x1
  40d5c0:	b.lt	40d628 <feof@plt+0xac58>  // b.tstop
  40d5c4:	ldr	x8, [x19, #8]
  40d5c8:	ldr	w9, [x19, #28]
  40d5cc:	ldr	w10, [x8, #200]
  40d5d0:	cmp	w9, w10
  40d5d4:	b.gt	40d628 <feof@plt+0xac58>
  40d5d8:	ldr	x21, [x8, #176]
  40d5dc:	ldp	x8, x9, [x21, #24]
  40d5e0:	cmp	x9, x8
  40d5e4:	b.ne	40d5f8 <feof@plt+0xac28>  // b.any
  40d5e8:	mov	w1, #0x1                   	// #1
  40d5ec:	mov	x0, x21
  40d5f0:	bl	45037c <_obstack_newchunk@@Base>
  40d5f4:	ldr	x8, [x21, #24]
  40d5f8:	add	x9, x8, #0x1
  40d5fc:	mov	w10, #0xa                   	// #10
  40d600:	adrp	x12, 461000 <_obstack_memory_used@@Base+0x10a68>
  40d604:	and	w11, w20, #0xff
  40d608:	add	x12, x12, #0xa50
  40d60c:	str	x9, [x21, #24]
  40d610:	strb	w10, [x8]
  40d614:	ldr	x8, [x19, #8]
  40d618:	ldrh	w9, [x12, w11, uxtw #1]
  40d61c:	strb	wzr, [x19, #65]
  40d620:	str	wzr, [x8, #200]
  40d624:	tbnz	w9, #6, 40d668 <feof@plt+0xac98>
  40d628:	ldr	x8, [x19, #8]
  40d62c:	ldr	x21, [x8, #176]
  40d630:	ldp	x8, x9, [x21, #24]
  40d634:	cmp	x9, x8
  40d638:	b.ne	40d64c <feof@plt+0xac7c>  // b.any
  40d63c:	mov	w1, #0x1                   	// #1
  40d640:	mov	x0, x21
  40d644:	bl	45037c <_obstack_newchunk@@Base>
  40d648:	ldr	x8, [x21, #24]
  40d64c:	add	x9, x8, #0x1
  40d650:	str	x9, [x21, #24]
  40d654:	strb	w20, [x8]
  40d658:	ldr	x8, [x19, #8]
  40d65c:	ldr	w9, [x8, #200]
  40d660:	add	w9, w9, #0x1
  40d664:	str	w9, [x8, #200]
  40d668:	ldp	x20, x19, [sp, #32]
  40d66c:	ldr	x21, [sp, #16]
  40d670:	ldp	x29, x30, [sp], #48
  40d674:	ret
  40d678:	stp	x29, x30, [sp, #-48]!
  40d67c:	str	x21, [sp, #16]
  40d680:	stp	x20, x19, [sp, #32]
  40d684:	mov	x29, sp
  40d688:	ldr	x21, [x0, #8]
  40d68c:	mov	x19, x0
  40d690:	ldr	x20, [x21, #176]
  40d694:	ldp	x8, x9, [x20, #24]
  40d698:	cmp	x9, x8
  40d69c:	b.ne	40d6b0 <feof@plt+0xace0>  // b.any
  40d6a0:	mov	w1, #0x1                   	// #1
  40d6a4:	mov	x0, x20
  40d6a8:	bl	45037c <_obstack_newchunk@@Base>
  40d6ac:	ldr	x8, [x20, #24]
  40d6b0:	add	x9, x8, #0x1
  40d6b4:	str	x9, [x20, #24]
  40d6b8:	strb	wzr, [x8]
  40d6bc:	ldr	x8, [x21, #176]
  40d6c0:	ldr	x9, [x19, #8]
  40d6c4:	ldr	x0, [x8, #16]
  40d6c8:	ldr	x1, [x9, #192]
  40d6cc:	bl	402370 <fputs@plt>
  40d6d0:	ldr	x8, [x19, #8]
  40d6d4:	ldr	x0, [x8, #176]
  40d6d8:	ldp	x8, x1, [x0, #8]
  40d6dc:	cmp	x1, x8
  40d6e0:	b.ls	40d6f8 <feof@plt+0xad28>  // b.plast
  40d6e4:	ldr	x8, [x0, #32]
  40d6e8:	cmp	x1, x8
  40d6ec:	b.cs	40d6f8 <feof@plt+0xad28>  // b.hs, b.nlast
  40d6f0:	str	x1, [x0, #24]
  40d6f4:	b	40d6fc <feof@plt+0xad2c>
  40d6f8:	bl	450504 <_obstack_free@@Base>
  40d6fc:	ldr	x8, [x19, #8]
  40d700:	ldr	x21, [sp, #16]
  40d704:	str	wzr, [x8, #200]
  40d708:	ldp	x20, x19, [sp, #32]
  40d70c:	ldp	x29, x30, [sp], #48
  40d710:	ret
  40d714:	stp	x29, x30, [sp, #-32]!
  40d718:	stp	x20, x19, [sp, #16]
  40d71c:	mov	x29, sp
  40d720:	ldr	x20, [x0, #8]
  40d724:	ldr	x19, [x20, #176]
  40d728:	ldp	x8, x9, [x19, #24]
  40d72c:	cmp	x9, x8
  40d730:	b.ne	40d744 <feof@plt+0xad74>  // b.any
  40d734:	mov	w1, #0x1                   	// #1
  40d738:	mov	x0, x19
  40d73c:	bl	45037c <_obstack_newchunk@@Base>
  40d740:	ldr	x8, [x19, #24]
  40d744:	add	x9, x8, #0x1
  40d748:	str	x9, [x19, #24]
  40d74c:	strb	wzr, [x8]
  40d750:	ldr	x8, [x20, #176]
  40d754:	ldp	x20, x19, [sp, #16]
  40d758:	ldr	x0, [x8, #16]
  40d75c:	ldp	x29, x30, [sp], #32
  40d760:	ret
  40d764:	stp	x29, x30, [sp, #-32]!
  40d768:	str	x19, [sp, #16]
  40d76c:	mov	x29, sp
  40d770:	ldr	x8, [x0, #8]
  40d774:	mov	x19, x0
  40d778:	ldr	x0, [x8, #176]
  40d77c:	ldp	x8, x1, [x0, #8]
  40d780:	cmp	x1, x8
  40d784:	b.ls	40d79c <feof@plt+0xadcc>  // b.plast
  40d788:	ldr	x8, [x0, #32]
  40d78c:	cmp	x1, x8
  40d790:	b.cs	40d79c <feof@plt+0xadcc>  // b.hs, b.nlast
  40d794:	str	x1, [x0, #24]
  40d798:	b	40d7a0 <feof@plt+0xadd0>
  40d79c:	bl	450504 <_obstack_free@@Base>
  40d7a0:	ldr	x8, [x19, #8]
  40d7a4:	ldr	x19, [sp, #16]
  40d7a8:	str	wzr, [x8, #200]
  40d7ac:	ldp	x29, x30, [sp], #32
  40d7b0:	ret
  40d7b4:	stp	x29, x30, [sp, #-64]!
  40d7b8:	stp	x24, x23, [sp, #16]
  40d7bc:	stp	x22, x21, [sp, #32]
  40d7c0:	stp	x20, x19, [sp, #48]
  40d7c4:	mov	x29, sp
  40d7c8:	ldr	x22, [x0, #8]
  40d7cc:	mov	x19, x0
  40d7d0:	mov	w20, w1
  40d7d4:	ldr	x21, [x22, #176]
  40d7d8:	ldp	x8, x9, [x21, #24]
  40d7dc:	cmp	x9, x8
  40d7e0:	b.ne	40d7f4 <feof@plt+0xae24>  // b.any
  40d7e4:	mov	w1, #0x1                   	// #1
  40d7e8:	mov	x0, x21
  40d7ec:	bl	45037c <_obstack_newchunk@@Base>
  40d7f0:	ldr	x8, [x21, #24]
  40d7f4:	add	x9, x8, #0x1
  40d7f8:	str	x9, [x21, #24]
  40d7fc:	strb	wzr, [x8]
  40d800:	ldr	x8, [x22, #176]
  40d804:	ldr	x9, [x19, #8]
  40d808:	adrp	x24, 451000 <_obstack_memory_used@@Base+0xa68>
  40d80c:	adrp	x22, 451000 <_obstack_memory_used@@Base+0xa68>
  40d810:	ldr	x23, [x8, #16]
  40d814:	ldr	x21, [x9, #192]
  40d818:	add	x24, x24, #0xf28
  40d81c:	add	x22, x22, #0xff0
  40d820:	b	40d854 <feof@plt+0xae84>
  40d824:	mov	w1, #0x2                   	// #2
  40d828:	mov	w2, #0x1                   	// #1
  40d82c:	mov	x0, x22
  40d830:	mov	x3, x21
  40d834:	bl	4028c0 <fwrite@plt>
  40d838:	mov	w0, #0x5c                  	// #92
  40d83c:	mov	x1, x21
  40d840:	bl	4026d0 <fputc@plt>
  40d844:	ldrb	w0, [x23]
  40d848:	mov	x1, x21
  40d84c:	bl	4026d0 <fputc@plt>
  40d850:	add	x23, x23, #0x1
  40d854:	ldrb	w0, [x23]
  40d858:	cmp	w0, #0x3d
  40d85c:	b.le	40d888 <feof@plt+0xaeb8>
  40d860:	sub	w8, w0, #0x7b
  40d864:	cmp	w8, #0x3
  40d868:	b.cc	40d8a8 <feof@plt+0xaed8>  // b.lo, b.ul, b.last
  40d86c:	cmp	w0, #0x3e
  40d870:	b.eq	40d8a8 <feof@plt+0xaed8>  // b.none
  40d874:	cmp	w0, #0x5c
  40d878:	b.ne	40d848 <feof@plt+0xae78>  // b.any
  40d87c:	ldrb	w8, [x23, #1]
  40d880:	cbnz	w8, 40d838 <feof@plt+0xae68>
  40d884:	b	40d8f8 <feof@plt+0xaf28>
  40d888:	cmp	w0, #0x22
  40d88c:	b.hi	40d8a0 <feof@plt+0xaed0>  // b.pmore
  40d890:	adr	x8, 40d824 <feof@plt+0xae54>
  40d894:	ldrb	w9, [x24, x0]
  40d898:	add	x8, x8, x9, lsl #2
  40d89c:	br	x8
  40d8a0:	cmp	w0, #0x3c
  40d8a4:	b.ne	40d848 <feof@plt+0xae78>  // b.any
  40d8a8:	tbnz	w20, #0, 40d838 <feof@plt+0xae68>
  40d8ac:	b	40d848 <feof@plt+0xae78>
  40d8b0:	ldr	x8, [x19, #8]
  40d8b4:	ldr	x0, [x8, #176]
  40d8b8:	ldp	x8, x1, [x0, #8]
  40d8bc:	cmp	x1, x8
  40d8c0:	b.ls	40d8d8 <feof@plt+0xaf08>  // b.plast
  40d8c4:	ldr	x8, [x0, #32]
  40d8c8:	cmp	x1, x8
  40d8cc:	b.cs	40d8d8 <feof@plt+0xaf08>  // b.hs, b.nlast
  40d8d0:	str	x1, [x0, #24]
  40d8d4:	b	40d8dc <feof@plt+0xaf0c>
  40d8d8:	bl	450504 <_obstack_free@@Base>
  40d8dc:	ldr	x8, [x19, #8]
  40d8e0:	str	wzr, [x8, #200]
  40d8e4:	ldp	x20, x19, [sp, #48]
  40d8e8:	ldp	x22, x21, [sp, #32]
  40d8ec:	ldp	x24, x23, [sp, #16]
  40d8f0:	ldp	x29, x30, [sp], #64
  40d8f4:	ret
  40d8f8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40d8fc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40d900:	add	x0, x0, #0xff3
  40d904:	add	x2, x2, #0xc
  40d908:	mov	w1, #0x378                 	// #888
  40d90c:	bl	404ac4 <feof@plt+0x20f4>
  40d910:	stp	x29, x30, [sp, #-64]!
  40d914:	stp	x24, x23, [sp, #16]
  40d918:	stp	x22, x21, [sp, #32]
  40d91c:	stp	x20, x19, [sp, #48]
  40d920:	mov	x29, sp
  40d924:	ldr	w21, [x0, #32]
  40d928:	cmp	w21, #0x1
  40d92c:	b.lt	40d9f0 <feof@plt+0xb020>  // b.tstop
  40d930:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  40d934:	ldrh	w22, [x8, #2704]
  40d938:	mov	x19, x0
  40d93c:	mov	w23, #0xa                   	// #10
  40d940:	mov	w24, #0x20                  	// #32
  40d944:	b	40d96c <feof@plt+0xaf9c>
  40d948:	add	x9, x8, #0x1
  40d94c:	str	x9, [x20, #24]
  40d950:	strb	w24, [x8]
  40d954:	ldr	x8, [x19, #8]
  40d958:	ldr	w9, [x8, #200]
  40d95c:	add	w9, w9, #0x1
  40d960:	str	w9, [x8, #200]
  40d964:	subs	w21, w21, #0x1
  40d968:	b.eq	40d9f0 <feof@plt+0xb020>  // b.none
  40d96c:	ldr	w8, [x19, #40]
  40d970:	cmp	w8, #0x1
  40d974:	b.lt	40d9c8 <feof@plt+0xaff8>  // b.tstop
  40d978:	ldr	x8, [x19, #8]
  40d97c:	ldr	w9, [x19, #28]
  40d980:	ldr	w10, [x8, #200]
  40d984:	cmp	w9, w10
  40d988:	b.gt	40d9c8 <feof@plt+0xaff8>
  40d98c:	ldr	x20, [x8, #176]
  40d990:	ldp	x8, x9, [x20, #24]
  40d994:	cmp	x9, x8
  40d998:	b.ne	40d9ac <feof@plt+0xafdc>  // b.any
  40d99c:	mov	w1, #0x1                   	// #1
  40d9a0:	mov	x0, x20
  40d9a4:	bl	45037c <_obstack_newchunk@@Base>
  40d9a8:	ldr	x8, [x20, #24]
  40d9ac:	add	x9, x8, #0x1
  40d9b0:	str	x9, [x20, #24]
  40d9b4:	strb	w23, [x8]
  40d9b8:	ldr	x8, [x19, #8]
  40d9bc:	strb	wzr, [x19, #65]
  40d9c0:	str	wzr, [x8, #200]
  40d9c4:	tbnz	w22, #6, 40d964 <feof@plt+0xaf94>
  40d9c8:	ldr	x8, [x19, #8]
  40d9cc:	ldr	x20, [x8, #176]
  40d9d0:	ldp	x8, x9, [x20, #24]
  40d9d4:	cmp	x9, x8
  40d9d8:	b.ne	40d948 <feof@plt+0xaf78>  // b.any
  40d9dc:	mov	w1, #0x1                   	// #1
  40d9e0:	mov	x0, x20
  40d9e4:	bl	45037c <_obstack_newchunk@@Base>
  40d9e8:	ldr	x8, [x20, #24]
  40d9ec:	b	40d948 <feof@plt+0xaf78>
  40d9f0:	ldp	x20, x19, [sp, #48]
  40d9f4:	ldp	x22, x21, [sp, #32]
  40d9f8:	ldp	x24, x23, [sp, #16]
  40d9fc:	ldp	x29, x30, [sp], #64
  40da00:	ret
  40da04:	sub	sp, sp, #0x1e0
  40da08:	stp	x29, x30, [sp, #384]
  40da0c:	stp	x28, x27, [sp, #400]
  40da10:	stp	x26, x25, [sp, #416]
  40da14:	stp	x24, x23, [sp, #432]
  40da18:	stp	x22, x21, [sp, #448]
  40da1c:	stp	x20, x19, [sp, #464]
  40da20:	add	x29, sp, #0x180
  40da24:	str	x1, [sp, #32]
  40da28:	mov	x23, x0
  40da2c:	ldr	x27, [x23, #8]!
  40da30:	mov	x28, x0
  40da34:	mov	x10, x27
  40da38:	ldr	x8, [x27, #120]
  40da3c:	ldr	x9, [x10, #112]!
  40da40:	sub	x8, x8, x9
  40da44:	cmp	x8, #0x1e7
  40da48:	add	x8, x27, #0x58
  40da4c:	stp	x8, x10, [sp, #88]
  40da50:	b.hi	40da68 <feof@plt+0xb098>  // b.pmore
  40da54:	ldr	x0, [sp, #88]
  40da58:	mov	w1, #0x1e8                 	// #488
  40da5c:	bl	45037c <_obstack_newchunk@@Base>
  40da60:	ldr	x8, [sp, #96]
  40da64:	ldr	x9, [x8]
  40da68:	ldr	x8, [x27, #104]
  40da6c:	add	x10, x9, #0x1e8
  40da70:	str	x10, [x27, #112]
  40da74:	cmp	x10, x8
  40da78:	b.ne	40da88 <feof@plt+0xb0b8>  // b.any
  40da7c:	ldrb	w9, [x27, #168]
  40da80:	orr	w9, w9, #0x2
  40da84:	strb	w9, [x27, #168]
  40da88:	ldr	x12, [x27, #136]
  40da8c:	ldr	x13, [x27, #96]
  40da90:	ldr	x11, [x27, #120]
  40da94:	add	x9, sp, #0x70
  40da98:	add	x10, x12, x10
  40da9c:	bic	x10, x10, x12
  40daa0:	sub	x12, x10, x13
  40daa4:	sub	x13, x11, x13
  40daa8:	cmp	x12, x13
  40daac:	str	x10, [x27, #112]
  40dab0:	b.ls	40dac0 <feof@plt+0xb0f0>  // b.plast
  40dab4:	ldr	x10, [sp, #96]
  40dab8:	str	x11, [x10]
  40dabc:	mov	x10, x11
  40dac0:	ldr	x11, [x27, #184]
  40dac4:	str	x10, [x27, #104]
  40dac8:	mov	x10, x8
  40dacc:	movi	v0.2d, #0x0
  40dad0:	str	x11, [x10], #8
  40dad4:	stp	x27, x10, [sp, #72]
  40dad8:	str	x8, [x27, #184]
  40dadc:	ldr	x8, [sp, #32]
  40dae0:	stp	q0, q0, [x9, #208]
  40dae4:	stp	q0, q0, [x9, #176]
  40dae8:	stp	q0, q0, [x9, #144]
  40daec:	str	q0, [x9, #128]
  40daf0:	stp	q0, q0, [sp, #208]
  40daf4:	stp	q0, q0, [sp, #176]
  40daf8:	stp	q0, q0, [sp, #144]
  40dafc:	stp	q0, q0, [sp, #112]
  40db00:	ldr	x24, [x8]
  40db04:	ldrb	w8, [x24]
  40db08:	cbz	w8, 40e150 <feof@plt+0xb780>
  40db0c:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x1a68>
  40db10:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  40db14:	str	x23, [sp, #40]
  40db18:	mov	x23, x28
  40db1c:	mov	x20, xzr
  40db20:	mov	w28, wzr
  40db24:	add	x21, sp, #0x70
  40db28:	add	x22, x22, #0x3b
  40db2c:	add	x19, x19, #0xf4b
  40db30:	stp	wzr, wzr, [sp, #52]
  40db34:	str	wzr, [sp, #64]
  40db38:	b	40db50 <feof@plt+0xb180>
  40db3c:	ldr	x11, [sp, #96]
  40db40:	add	x10, x9, #0x1
  40db44:	str	x10, [x11]
  40db48:	strb	w8, [x9]
  40db4c:	ldrb	w8, [x24, #1]!
  40db50:	and	w9, w8, #0xff
  40db54:	cmp	w9, #0x25
  40db58:	b.eq	40db88 <feof@plt+0xb1b8>  // b.none
  40db5c:	cbz	w9, 40e15c <feof@plt+0xb78c>
  40db60:	ldp	x9, x10, [x27, #112]
  40db64:	cmp	x10, x9
  40db68:	b.ne	40db3c <feof@plt+0xb16c>  // b.any
  40db6c:	ldr	x0, [sp, #88]
  40db70:	mov	w1, #0x1                   	// #1
  40db74:	bl	45037c <_obstack_newchunk@@Base>
  40db78:	ldr	x9, [sp, #96]
  40db7c:	ldrb	w8, [x24]
  40db80:	ldr	x9, [x9]
  40db84:	b	40db3c <feof@plt+0xb16c>
  40db88:	ldrb	w8, [x24, #1]
  40db8c:	sub	w9, w8, #0x25
  40db90:	cmp	w9, #0x2d
  40db94:	b.hi	40dbe0 <feof@plt+0xb210>  // b.pmore
  40db98:	adr	x8, 40dba8 <feof@plt+0xb1d8>
  40db9c:	ldrb	w10, [x19, x9]
  40dba0:	add	x8, x8, x10, lsl #2
  40dba4:	br	x8
  40dba8:	ldp	x8, x9, [x27, #112]
  40dbac:	cmp	x9, x8
  40dbb0:	b.ne	40dbc8 <feof@plt+0xb1f8>  // b.any
  40dbb4:	ldr	x0, [sp, #88]
  40dbb8:	mov	w1, #0x1                   	// #1
  40dbbc:	bl	45037c <_obstack_newchunk@@Base>
  40dbc0:	ldr	x8, [sp, #96]
  40dbc4:	ldr	x8, [x8]
  40dbc8:	ldr	x10, [sp, #96]
  40dbcc:	add	x9, x8, #0x1
  40dbd0:	str	x9, [x10]
  40dbd4:	mov	w9, #0x25                  	// #37
  40dbd8:	strb	w9, [x8]
  40dbdc:	b	40de50 <feof@plt+0xb480>
  40dbe0:	cmp	w8, #0x6d
  40dbe4:	b.eq	40ddf8 <feof@plt+0xb428>  // b.none
  40dbe8:	cbz	w8, 40f11c <feof@plt+0xc74c>
  40dbec:	ldp	x8, x9, [x27, #112]
  40dbf0:	cmp	x9, x8
  40dbf4:	b.ne	40dc0c <feof@plt+0xb23c>  // b.any
  40dbf8:	ldr	x0, [sp, #88]
  40dbfc:	mov	w1, #0x1                   	// #1
  40dc00:	bl	45037c <_obstack_newchunk@@Base>
  40dc04:	ldr	x8, [sp, #96]
  40dc08:	ldr	x8, [x8]
  40dc0c:	ldr	x10, [sp, #96]
  40dc10:	add	x9, x8, #0x1
  40dc14:	cmp	x20, #0x3c
  40dc18:	str	x9, [x10]
  40dc1c:	strb	wzr, [x8]
  40dc20:	b.cs	40f1dc <feof@plt+0xc80c>  // b.hs, b.nlast
  40dc24:	ldp	x8, x9, [x27, #104]
  40dc28:	add	x24, x24, #0x1
  40dc2c:	cmp	x9, x8
  40dc30:	b.ne	40dc40 <feof@plt+0xb270>  // b.any
  40dc34:	ldrb	w10, [x27, #168]
  40dc38:	orr	w10, w10, #0x2
  40dc3c:	strb	w10, [x27, #168]
  40dc40:	ldr	x10, [x27, #136]
  40dc44:	ldr	x11, [x27, #96]
  40dc48:	ldr	x12, [x27, #120]
  40dc4c:	add	x9, x10, x9
  40dc50:	bic	x9, x9, x10
  40dc54:	sub	x13, x12, x11
  40dc58:	sub	x10, x9, x11
  40dc5c:	cmp	x10, x13
  40dc60:	csel	x9, x12, x9, hi  // hi = pmore
  40dc64:	stp	x9, x9, [x27, #104]
  40dc68:	ldr	x9, [sp, #80]
  40dc6c:	str	x8, [x9, x20, lsl #3]
  40dc70:	ldrb	w8, [x24]
  40dc74:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40dc78:	add	x9, x9, #0xa50
  40dc7c:	ldrh	w8, [x9, x8, lsl #1]
  40dc80:	tbnz	w8, #2, 40de5c <feof@plt+0xb48c>
  40dc84:	ldr	w8, [sp, #56]
  40dc88:	tbnz	w8, #0, 40f1f4 <feof@plt+0xc824>
  40dc8c:	ldr	w8, [sp, #52]
  40dc90:	mov	w9, #0x1                   	// #1
  40dc94:	str	w9, [sp, #64]
  40dc98:	mov	w19, w8
  40dc9c:	add	w8, w8, #0x1
  40dca0:	stp	w8, wzr, [sp, #52]
  40dca4:	b	40de98 <feof@plt+0xb4c8>
  40dca8:	ldrb	w0, [x23, #67]
  40dcac:	bl	407bf4 <feof@plt+0x5224>
  40dcb0:	b	40de04 <feof@plt+0xb434>
  40dcb4:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  40dcb8:	ldr	x26, [x19, #1256]
  40dcbc:	mov	x0, x26
  40dcc0:	bl	402420 <strlen@plt>
  40dcc4:	mov	x25, x0
  40dcc8:	ldp	x0, x8, [x27, #112]
  40dccc:	sub	x8, x8, x0
  40dcd0:	cmp	x8, x25
  40dcd4:	b.cs	40dcf0 <feof@plt+0xb320>  // b.hs, b.nlast
  40dcd8:	ldr	x0, [sp, #88]
  40dcdc:	mov	x1, x25
  40dce0:	bl	45037c <_obstack_newchunk@@Base>
  40dce4:	ldr	x8, [sp, #96]
  40dce8:	ldr	x26, [x19, #1256]
  40dcec:	ldr	x0, [x8]
  40dcf0:	mov	x1, x26
  40dcf4:	mov	x2, x25
  40dcf8:	bl	402390 <memcpy@plt>
  40dcfc:	ldr	x8, [x27, #112]
  40dd00:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  40dd04:	mov	w2, #0x5                   	// #5
  40dd08:	add	x1, x1, #0x209
  40dd0c:	add	x8, x8, x25
  40dd10:	str	x8, [x27, #112]
  40dd14:	ldrb	w0, [x23, #67]
  40dd18:	bl	407b70 <feof@plt+0x51a0>
  40dd1c:	mov	x25, x0
  40dd20:	bl	402420 <strlen@plt>
  40dd24:	mov	x26, x0
  40dd28:	ldp	x0, x8, [x27, #112]
  40dd2c:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  40dd30:	add	x19, x19, #0xf4b
  40dd34:	b	40de14 <feof@plt+0xb444>
  40dd38:	ldr	x8, [sp, #96]
  40dd3c:	ldr	x25, [x8]
  40dd40:	b	40dd98 <feof@plt+0xb3c8>
  40dd44:	ldrb	w0, [x23, #67]
  40dd48:	bl	407bf4 <feof@plt+0x5224>
  40dd4c:	mov	x25, x0
  40dd50:	bl	402420 <strlen@plt>
  40dd54:	mov	x26, x0
  40dd58:	ldp	x0, x8, [x27, #112]
  40dd5c:	sub	x8, x8, x0
  40dd60:	cmp	x8, x26
  40dd64:	b.cs	40dd7c <feof@plt+0xb3ac>  // b.hs, b.nlast
  40dd68:	ldr	x0, [sp, #88]
  40dd6c:	mov	x1, x26
  40dd70:	bl	45037c <_obstack_newchunk@@Base>
  40dd74:	ldr	x8, [sp, #96]
  40dd78:	ldr	x0, [x8]
  40dd7c:	mov	x1, x25
  40dd80:	mov	x2, x26
  40dd84:	bl	402390 <memcpy@plt>
  40dd88:	ldr	x9, [sp, #96]
  40dd8c:	ldr	x8, [x9]
  40dd90:	add	x25, x8, x26
  40dd94:	str	x25, [x9]
  40dd98:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40dd9c:	ldr	x27, [x8, #1264]
  40dda0:	mov	x0, x27
  40dda4:	bl	402420 <strlen@plt>
  40dda8:	ldr	x8, [sp, #72]
  40ddac:	mov	x26, x0
  40ddb0:	ldr	x8, [x8, #120]
  40ddb4:	sub	x8, x8, x25
  40ddb8:	cmp	x8, x0
  40ddbc:	b.cs	40dddc <feof@plt+0xb40c>  // b.hs, b.nlast
  40ddc0:	ldr	x0, [sp, #88]
  40ddc4:	mov	x1, x26
  40ddc8:	bl	45037c <_obstack_newchunk@@Base>
  40ddcc:	ldr	x8, [sp, #96]
  40ddd0:	ldr	x25, [x8]
  40ddd4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40ddd8:	ldr	x27, [x8, #1264]
  40dddc:	mov	x0, x25
  40dde0:	mov	x1, x27
  40dde4:	mov	x2, x26
  40dde8:	bl	402390 <memcpy@plt>
  40ddec:	ldr	x9, [sp, #96]
  40ddf0:	ldr	x27, [sp, #72]
  40ddf4:	b	40de44 <feof@plt+0xb474>
  40ddf8:	ldr	x8, [sp, #32]
  40ddfc:	ldr	w0, [x8, #16]
  40de00:	bl	4507f8 <_obstack_memory_used@@Base+0x260>
  40de04:	mov	x25, x0
  40de08:	bl	402420 <strlen@plt>
  40de0c:	mov	x26, x0
  40de10:	ldp	x0, x8, [x27, #112]
  40de14:	sub	x8, x8, x0
  40de18:	cmp	x8, x26
  40de1c:	b.cs	40de34 <feof@plt+0xb464>  // b.hs, b.nlast
  40de20:	ldr	x0, [sp, #88]
  40de24:	mov	x1, x26
  40de28:	bl	45037c <_obstack_newchunk@@Base>
  40de2c:	ldr	x8, [sp, #96]
  40de30:	ldr	x0, [x8]
  40de34:	mov	x1, x25
  40de38:	mov	x2, x26
  40de3c:	bl	402390 <memcpy@plt>
  40de40:	ldr	x9, [sp, #96]
  40de44:	ldr	x8, [x9]
  40de48:	add	x8, x8, x26
  40de4c:	str	x8, [x9]
  40de50:	ldrb	w8, [x24, #2]!
  40de54:	cbnz	w8, 40db50 <feof@plt+0xb180>
  40de58:	b	40e15c <feof@plt+0xb78c>
  40de5c:	sub	x1, x29, #0x20
  40de60:	mov	w2, #0xa                   	// #10
  40de64:	mov	x0, x24
  40de68:	bl	4027e0 <strtoul@plt>
  40de6c:	ldur	x8, [x29, #-32]
  40de70:	ldrb	w9, [x8]
  40de74:	cmp	w9, #0x24
  40de78:	b.ne	40f20c <feof@plt+0xc83c>  // b.any
  40de7c:	ldr	w9, [sp, #64]
  40de80:	tbnz	w9, #0, 40f224 <feof@plt+0xc854>
  40de84:	add	x24, x8, #0x1
  40de88:	mov	w8, #0x1                   	// #1
  40de8c:	str	wzr, [sp, #64]
  40de90:	sub	w19, w0, #0x1
  40de94:	str	w8, [sp, #56]
  40de98:	cmp	w19, #0x1e
  40de9c:	b.cs	40f23c <feof@plt+0xc86c>  // b.hs, b.nlast
  40dea0:	ldr	x8, [x21, w19, uxtw #3]
  40dea4:	add	x10, sp, #0x70
  40dea8:	cbnz	x8, 40f254 <feof@plt+0xc884>
  40deac:	ldr	x9, [sp, #80]
  40deb0:	orr	x8, x20, #0x1
  40deb4:	mov	w21, w19
  40deb8:	add	x26, x9, x8, lsl #3
  40debc:	str	x26, [x10, x21, lsl #3]
  40dec0:	b	40def0 <feof@plt+0xb520>
  40dec4:	ldrb	w9, [x24]
  40dec8:	ldr	x11, [sp, #96]
  40decc:	add	x10, x8, #0x1
  40ded0:	mov	w2, #0x6                   	// #6
  40ded4:	mov	x0, x22
  40ded8:	str	x10, [x11]
  40dedc:	strb	w9, [x8]
  40dee0:	ldrb	w25, [x24], #1
  40dee4:	mov	w1, w25
  40dee8:	bl	402650 <memchr@plt>
  40deec:	cbz	x0, 40df14 <feof@plt+0xb544>
  40def0:	ldp	x8, x9, [x27, #112]
  40def4:	cmp	x9, x8
  40def8:	b.ne	40dec4 <feof@plt+0xb4f4>  // b.any
  40defc:	ldr	x0, [sp, #88]
  40df00:	mov	w1, #0x1                   	// #1
  40df04:	bl	45037c <_obstack_newchunk@@Base>
  40df08:	ldr	x8, [sp, #96]
  40df0c:	ldr	x8, [x8]
  40df10:	b	40dec4 <feof@plt+0xb4f4>
  40df14:	cmp	w25, #0x2e
  40df18:	b.ne	40dfb4 <feof@plt+0xb5e4>  // b.any
  40df1c:	ldrb	w8, [x24]
  40df20:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40df24:	add	x9, x9, #0xa50
  40df28:	ldrh	w9, [x9, x8, lsl #1]
  40df2c:	tbnz	w9, #2, 40dfc4 <feof@plt+0xb5f4>
  40df30:	cmp	w8, #0x2a
  40df34:	b.ne	40f26c <feof@plt+0xc89c>  // b.any
  40df38:	ldp	x8, x9, [x27, #112]
  40df3c:	cmp	x9, x8
  40df40:	b.ne	40df58 <feof@plt+0xb588>  // b.any
  40df44:	ldr	x0, [sp, #88]
  40df48:	mov	w1, #0x1                   	// #1
  40df4c:	bl	45037c <_obstack_newchunk@@Base>
  40df50:	ldr	x8, [sp, #96]
  40df54:	ldr	x8, [x8]
  40df58:	ldr	x10, [sp, #96]
  40df5c:	add	x9, x8, #0x1
  40df60:	str	x9, [x10]
  40df64:	mov	w9, #0x2a                  	// #42
  40df68:	strb	w9, [x8]
  40df6c:	ldrb	w8, [x24, #1]!
  40df70:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40df74:	add	x9, x9, #0xa50
  40df78:	ldrh	w8, [x9, x8, lsl #1]
  40df7c:	tbnz	w8, #2, 40e02c <feof@plt+0xb65c>
  40df80:	ldr	w8, [sp, #56]
  40df84:	cbnz	w8, 40f284 <feof@plt+0xc8b4>
  40df88:	add	x8, sp, #0x70
  40df8c:	ldr	x8, [x8, x21, lsl #3]
  40df90:	add	x21, sp, #0x70
  40df94:	add	w9, w19, #0x1
  40df98:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  40df9c:	str	x8, [x21, w9, uxtw #3]
  40dfa0:	ldr	w8, [sp, #52]
  40dfa4:	add	x19, x19, #0xf4b
  40dfa8:	add	w8, w8, #0x1
  40dfac:	str	w8, [sp, #52]
  40dfb0:	b	40e080 <feof@plt+0xb6b0>
  40dfb4:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  40dfb8:	add	x21, sp, #0x70
  40dfbc:	add	x19, x19, #0xf4b
  40dfc0:	b	40e0c4 <feof@plt+0xb6f4>
  40dfc4:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  40dfc8:	add	x21, sp, #0x70
  40dfcc:	add	x19, x19, #0xf4b
  40dfd0:	b	40dffc <feof@plt+0xb62c>
  40dfd4:	ldrb	w9, [x24]
  40dfd8:	ldr	x11, [sp, #96]
  40dfdc:	add	x10, x8, #0x1
  40dfe0:	str	x10, [x11]
  40dfe4:	strb	w9, [x8]
  40dfe8:	ldrb	w8, [x24], #1
  40dfec:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40dff0:	add	x9, x9, #0xa50
  40dff4:	ldrh	w9, [x9, x8, lsl #1]
  40dff8:	tbz	w9, #2, 40e020 <feof@plt+0xb650>
  40dffc:	ldp	x8, x9, [x27, #112]
  40e000:	cmp	x9, x8
  40e004:	b.ne	40dfd4 <feof@plt+0xb604>  // b.any
  40e008:	ldr	x0, [sp, #88]
  40e00c:	mov	w1, #0x1                   	// #1
  40e010:	bl	45037c <_obstack_newchunk@@Base>
  40e014:	ldr	x8, [sp, #96]
  40e018:	ldr	x8, [x8]
  40e01c:	b	40dfd4 <feof@plt+0xb604>
  40e020:	cmp	w8, #0x73
  40e024:	b.eq	40e0c4 <feof@plt+0xb6f4>  // b.none
  40e028:	b	40f29c <feof@plt+0xc8cc>
  40e02c:	sub	x1, x29, #0x20
  40e030:	mov	w2, #0xa                   	// #10
  40e034:	mov	x0, x24
  40e038:	bl	4027e0 <strtoul@plt>
  40e03c:	cmp	w19, w0
  40e040:	b.ne	40f2b4 <feof@plt+0xc8e4>  // b.any
  40e044:	ldr	w8, [sp, #64]
  40e048:	adrp	x19, 451000 <_obstack_memory_used@@Base+0xa68>
  40e04c:	add	x19, x19, #0xf4b
  40e050:	cbnz	w8, 40f2cc <feof@plt+0xc8fc>
  40e054:	ldur	x8, [x29, #-32]
  40e058:	ldrb	w9, [x8]
  40e05c:	cmp	w9, #0x24
  40e060:	b.ne	40f2e4 <feof@plt+0xc914>  // b.any
  40e064:	add	x9, sp, #0x70
  40e068:	ldr	x9, [x9, x21, lsl #3]
  40e06c:	mov	w10, #0xffffffff            	// #-1
  40e070:	add	x21, sp, #0x70
  40e074:	add	x10, x0, x10
  40e078:	add	x24, x8, #0x1
  40e07c:	str	x9, [x21, w10, uxtw #3]
  40e080:	ldrb	w8, [x24]
  40e084:	cmp	w8, #0x73
  40e088:	b.ne	40f2fc <feof@plt+0xc92c>  // b.any
  40e08c:	ldp	x8, x9, [x27, #112]
  40e090:	cmp	x9, x8
  40e094:	b.ne	40e0ac <feof@plt+0xb6dc>  // b.any
  40e098:	ldr	x0, [sp, #88]
  40e09c:	mov	w1, #0x1                   	// #1
  40e0a0:	bl	45037c <_obstack_newchunk@@Base>
  40e0a4:	ldr	x8, [sp, #96]
  40e0a8:	ldr	x8, [x8]
  40e0ac:	ldr	x10, [sp, #96]
  40e0b0:	add	x9, x8, #0x1
  40e0b4:	add	x24, x24, #0x1
  40e0b8:	str	x9, [x10]
  40e0bc:	mov	w9, #0x73                  	// #115
  40e0c0:	strb	w9, [x8]
  40e0c4:	ldrb	w8, [x24]
  40e0c8:	cbz	w8, 40e158 <feof@plt+0xb788>
  40e0cc:	ldp	x8, x9, [x27, #112]
  40e0d0:	cmp	x9, x8
  40e0d4:	b.ne	40e0ec <feof@plt+0xb71c>  // b.any
  40e0d8:	ldr	x0, [sp, #88]
  40e0dc:	mov	w1, #0x1                   	// #1
  40e0e0:	bl	45037c <_obstack_newchunk@@Base>
  40e0e4:	ldr	x8, [sp, #96]
  40e0e8:	ldr	x8, [x8]
  40e0ec:	add	x9, x8, #0x1
  40e0f0:	str	x9, [x27, #112]
  40e0f4:	strb	wzr, [x8]
  40e0f8:	ldp	x8, x9, [x27, #104]
  40e0fc:	cmp	x9, x8
  40e100:	b.ne	40e110 <feof@plt+0xb740>  // b.any
  40e104:	ldrb	w10, [x27, #168]
  40e108:	orr	w10, w10, #0x2
  40e10c:	strb	w10, [x27, #168]
  40e110:	ldr	x10, [x27, #136]
  40e114:	ldr	x11, [x27, #96]
  40e118:	ldr	x12, [x27, #120]
  40e11c:	add	x20, x20, #0x2
  40e120:	add	x9, x10, x9
  40e124:	bic	x9, x9, x10
  40e128:	sub	x13, x12, x11
  40e12c:	sub	x10, x9, x11
  40e130:	cmp	x10, x13
  40e134:	csel	x9, x12, x9, hi  // hi = pmore
  40e138:	stp	x9, x9, [x27, #104]
  40e13c:	str	x8, [x26]
  40e140:	ldrb	w8, [x24]
  40e144:	add	w28, w28, #0x2
  40e148:	cbnz	w8, 40db50 <feof@plt+0xb180>
  40e14c:	b	40e15c <feof@plt+0xb78c>
  40e150:	mov	w20, wzr
  40e154:	b	40e164 <feof@plt+0xb794>
  40e158:	orr	w20, w28, #0x1
  40e15c:	mov	x28, x23
  40e160:	ldr	x23, [sp, #40]
  40e164:	ldp	x8, x9, [x27, #112]
  40e168:	cmp	x9, x8
  40e16c:	b.ne	40e184 <feof@plt+0xb7b4>  // b.any
  40e170:	ldr	x0, [sp, #88]
  40e174:	mov	w1, #0x1                   	// #1
  40e178:	bl	45037c <_obstack_newchunk@@Base>
  40e17c:	ldr	x8, [sp, #96]
  40e180:	ldr	x8, [x8]
  40e184:	ldr	x10, [sp, #96]
  40e188:	add	x9, x8, #0x1
  40e18c:	cmp	w20, #0x3c
  40e190:	str	x9, [x10]
  40e194:	strb	wzr, [x8]
  40e198:	b.cs	40f1c4 <feof@plt+0xc7f4>  // b.hs, b.nlast
  40e19c:	ldp	x8, x9, [x27, #104]
  40e1a0:	cmp	x9, x8
  40e1a4:	b.ne	40e1b4 <feof@plt+0xb7e4>  // b.any
  40e1a8:	ldrb	w10, [x27, #168]
  40e1ac:	orr	w10, w10, #0x2
  40e1b0:	strb	w10, [x27, #168]
  40e1b4:	ldr	x10, [x27, #136]
  40e1b8:	ldr	x11, [x27, #96]
  40e1bc:	ldr	x12, [x27, #120]
  40e1c0:	add	x9, x10, x9
  40e1c4:	bic	x9, x9, x10
  40e1c8:	sub	x10, x12, x11
  40e1cc:	sub	x11, x9, x11
  40e1d0:	cmp	x11, x10
  40e1d4:	csel	x9, x12, x9, hi  // hi = pmore
  40e1d8:	stp	x9, x9, [x27, #104]
  40e1dc:	ldr	x9, [sp, #80]
  40e1e0:	adrp	x11, 451000 <_obstack_memory_used@@Base+0xa68>
  40e1e4:	ldr	d0, [x11, #4072]
  40e1e8:	add	w10, w20, #0x1
  40e1ec:	str	x8, [x9, w20, uxtw #3]
  40e1f0:	ldr	x8, [sp, #88]
  40e1f4:	str	xzr, [x9, w10, uxtw #3]
  40e1f8:	str	x8, [x27, #176]
  40e1fc:	ldur	x8, [x28, #36]
  40e200:	stur	d0, [x28, #36]
  40e204:	ldr	x11, [sp, #112]
  40e208:	str	x8, [sp, #24]
  40e20c:	cbz	x11, 40f03c <feof@plt+0xc66c>
  40e210:	ldr	x8, [sp, #32]
  40e214:	add	x9, sp, #0x68
  40e218:	mov	w22, wzr
  40e21c:	add	x8, x8, #0x8
  40e220:	str	x8, [sp, #56]
  40e224:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  40e228:	add	x8, x8, #0xa90
  40e22c:	ldrh	w10, [x8, #24]
  40e230:	ldrh	w8, [x8]
  40e234:	str	w10, [sp, #52]
  40e238:	str	w8, [sp, #40]
  40e23c:	orr	x8, x9, #0x1
  40e240:	str	x8, [sp, #16]
  40e244:	b	40e2a0 <feof@plt+0xb8d0>
  40e248:	add	x9, x8, #0x1
  40e24c:	str	x9, [x27, #112]
  40e250:	strb	wzr, [x8]
  40e254:	ldp	x8, x9, [x27, #104]
  40e258:	cmp	x9, x8
  40e25c:	b.eq	40e42c <feof@plt+0xba5c>  // b.none
  40e260:	ldr	x10, [x27, #136]
  40e264:	ldr	x11, [x27, #96]
  40e268:	ldr	x12, [x27, #120]
  40e26c:	add	x9, x10, x9
  40e270:	bic	x9, x9, x10
  40e274:	sub	x13, x12, x11
  40e278:	sub	x10, x9, x11
  40e27c:	cmp	x10, x13
  40e280:	csel	x9, x12, x9, hi  // hi = pmore
  40e284:	stp	x9, x9, [x27, #104]
  40e288:	add	x10, sp, #0x70
  40e28c:	ldr	x9, [x10, w22, uxtw #3]
  40e290:	add	w22, w22, #0x1
  40e294:	str	x8, [x9]
  40e298:	ldr	x11, [x10, w22, uxtw #3]
  40e29c:	cbz	x11, 40f03c <feof@plt+0xc66c>
  40e2a0:	strb	wzr, [sp, #108]
  40e2a4:	ldr	x9, [x11]
  40e2a8:	mov	w8, wzr
  40e2ac:	mov	w26, wzr
  40e2b0:	mov	w19, wzr
  40e2b4:	mov	w21, wzr
  40e2b8:	mov	w27, wzr
  40e2bc:	add	x25, x9, #0x1
  40e2c0:	ldurb	w9, [x25, #-1]
  40e2c4:	cmp	w9, #0x6b
  40e2c8:	b.le	40e2fc <feof@plt+0xb92c>
  40e2cc:	cmp	w9, #0x6c
  40e2d0:	b.eq	40e32c <feof@plt+0xb95c>  // b.none
  40e2d4:	cmp	w9, #0x77
  40e2d8:	b.eq	40e340 <feof@plt+0xb970>  // b.none
  40e2dc:	cmp	w9, #0x71
  40e2e0:	b.ne	40e350 <feof@plt+0xb980>  // b.any
  40e2e4:	tst	w8, #0xff
  40e2e8:	b.ne	40f08c <feof@plt+0xc6bc>  // b.any
  40e2ec:	mov	w8, #0x1                   	// #1
  40e2f0:	strb	w8, [sp, #108]
  40e2f4:	add	x25, x25, #0x1
  40e2f8:	b	40e2c0 <feof@plt+0xb8f0>
  40e2fc:	cmp	w9, #0x23
  40e300:	b.eq	40e31c <feof@plt+0xb94c>  // b.none
  40e304:	cmp	w9, #0x2b
  40e308:	b.ne	40e350 <feof@plt+0xb980>  // b.any
  40e30c:	tbnz	w19, #0, 40f0a4 <feof@plt+0xc6d4>
  40e310:	mov	w19, #0x1                   	// #1
  40e314:	add	x25, x25, #0x1
  40e318:	b	40e2c0 <feof@plt+0xb8f0>
  40e31c:	tbnz	w26, #0, 40f0bc <feof@plt+0xc6ec>
  40e320:	mov	w26, #0x1                   	// #1
  40e324:	add	x25, x25, #0x1
  40e328:	b	40e2c0 <feof@plt+0xb8f0>
  40e32c:	cmp	w27, #0x2
  40e330:	b.ge	40f0d4 <feof@plt+0xc704>  // b.tcont
  40e334:	add	w27, w27, #0x1
  40e338:	add	x25, x25, #0x1
  40e33c:	b	40e2c0 <feof@plt+0xb8f0>
  40e340:	tbnz	w21, #0, 40f0ec <feof@plt+0xc71c>
  40e344:	mov	w21, #0x1                   	// #1
  40e348:	add	x25, x25, #0x1
  40e34c:	b	40e2c0 <feof@plt+0xb8f0>
  40e350:	cbz	w27, 40e35c <feof@plt+0xb98c>
  40e354:	eor	w10, w21, #0x1
  40e358:	tbz	w10, #0, 40f104 <feof@plt+0xc734>
  40e35c:	tst	w8, #0xff
  40e360:	sub	x2, x25, #0x1
  40e364:	str	x11, [sp, #64]
  40e368:	b.eq	40e3d8 <feof@plt+0xba08>  // b.none
  40e36c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40e370:	ldr	x20, [x8, #1256]
  40e374:	mov	w24, w22
  40e378:	mov	x22, x23
  40e37c:	ldrb	w23, [x28, #67]
  40e380:	mov	x0, x20
  40e384:	str	x2, [sp, #80]
  40e388:	bl	402420 <strlen@plt>
  40e38c:	add	x2, x20, x0
  40e390:	mov	x0, x28
  40e394:	mov	x1, x20
  40e398:	bl	40fd64 <feof@plt+0xd394>
  40e39c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  40e3a0:	mov	w2, #0x5                   	// #5
  40e3a4:	mov	w0, w23
  40e3a8:	add	x1, x1, #0x209
  40e3ac:	mov	x23, x22
  40e3b0:	mov	w22, w24
  40e3b4:	bl	407b70 <feof@plt+0x51a0>
  40e3b8:	mov	x20, x0
  40e3bc:	bl	402420 <strlen@plt>
  40e3c0:	add	x2, x20, x0
  40e3c4:	mov	x0, x28
  40e3c8:	mov	x1, x20
  40e3cc:	bl	40fd64 <feof@plt+0xd394>
  40e3d0:	ldr	x2, [sp, #80]
  40e3d4:	ldrb	w9, [x2]
  40e3d8:	sub	w8, w9, #0x2e
  40e3dc:	cmp	w8, #0x4a
  40e3e0:	b.hi	40e6b4 <feof@plt+0xbce4>  // b.pmore
  40e3e4:	adrp	x11, 451000 <_obstack_memory_used@@Base+0xa68>
  40e3e8:	add	x11, x11, #0xf79
  40e3ec:	adr	x9, 40e3fc <feof@plt+0xba2c>
  40e3f0:	ldrb	w10, [x11, x8]
  40e3f4:	add	x9, x9, x10, lsl #2
  40e3f8:	br	x9
  40e3fc:	tbz	w21, #0, 40e50c <feof@plt+0xbb3c>
  40e400:	ldr	x8, [sp, #56]
  40e404:	ldr	x8, [x8]
  40e408:	ldrsw	x9, [x8, #24]
  40e40c:	tbz	w9, #31, 40e794 <feof@plt+0xbdc4>
  40e410:	add	w10, w9, #0x8
  40e414:	cmn	w9, #0x8
  40e418:	str	w10, [x8, #24]
  40e41c:	b.gt	40e794 <feof@plt+0xbdc4>
  40e420:	ldr	x8, [x8, #8]
  40e424:	add	x9, x8, x9
  40e428:	b	40e7a0 <feof@plt+0xbdd0>
  40e42c:	ldrb	w10, [x27, #168]
  40e430:	orr	w10, w10, #0x2
  40e434:	strb	w10, [x27, #168]
  40e438:	b	40e260 <feof@plt+0xb890>
  40e43c:	tbz	w21, #0, 40eb08 <feof@plt+0xc138>
  40e440:	ldr	x8, [sp, #56]
  40e444:	ldr	x10, [x23]
  40e448:	ldr	x8, [x8]
  40e44c:	add	x0, x10, #0xcc
  40e450:	ldrsw	x9, [x8, #24]
  40e454:	tbz	w9, #31, 40ea34 <feof@plt+0xc064>
  40e458:	add	w10, w9, #0x8
  40e45c:	cmn	w9, #0x8
  40e460:	str	w10, [x8, #24]
  40e464:	b.gt	40ea34 <feof@plt+0xc064>
  40e468:	ldr	x8, [x8, #8]
  40e46c:	add	x9, x8, x9
  40e470:	b	40ea40 <feof@plt+0xc070>
  40e474:	ldr	x8, [sp, #56]
  40e478:	ldr	x10, [x23]
  40e47c:	ldr	x8, [x8]
  40e480:	add	x0, x10, #0xcc
  40e484:	ldrsw	x9, [x8, #28]
  40e488:	tbz	w9, #31, 40e6f0 <feof@plt+0xbd20>
  40e48c:	add	w10, w9, #0x10
  40e490:	cmn	w9, #0x10
  40e494:	str	w10, [x8, #28]
  40e498:	b.gt	40e6f0 <feof@plt+0xbd20>
  40e49c:	ldr	x8, [x8, #16]
  40e4a0:	add	x9, x8, x9
  40e4a4:	b	40e6fc <feof@plt+0xbd2c>
  40e4a8:	tbz	w21, #0, 40eb50 <feof@plt+0xc180>
  40e4ac:	ldr	x8, [sp, #56]
  40e4b0:	ldr	x10, [x23]
  40e4b4:	ldr	x8, [x8]
  40e4b8:	add	x0, x10, #0xcc
  40e4bc:	ldrsw	x9, [x8, #24]
  40e4c0:	tbz	w9, #31, 40ec1c <feof@plt+0xc24c>
  40e4c4:	add	w10, w9, #0x8
  40e4c8:	cmn	w9, #0x8
  40e4cc:	str	w10, [x8, #24]
  40e4d0:	b.gt	40ec1c <feof@plt+0xc24c>
  40e4d4:	ldr	x8, [x8, #8]
  40e4d8:	add	x9, x8, x9
  40e4dc:	b	40ec28 <feof@plt+0xc258>
  40e4e0:	ldr	x8, [sp, #56]
  40e4e4:	ldr	x8, [x8]
  40e4e8:	ldrsw	x9, [x8, #24]
  40e4ec:	tbz	w9, #31, 40e714 <feof@plt+0xbd44>
  40e4f0:	add	w10, w9, #0x8
  40e4f4:	cmn	w9, #0x8
  40e4f8:	str	w10, [x8, #24]
  40e4fc:	b.gt	40e714 <feof@plt+0xbd44>
  40e500:	ldr	x8, [x8, #8]
  40e504:	add	x9, x8, x9
  40e508:	b	40e720 <feof@plt+0xbd50>
  40e50c:	cmp	w27, #0x2
  40e510:	b.eq	40ed40 <feof@plt+0xc370>  // b.none
  40e514:	cmp	w27, #0x1
  40e518:	b.eq	40ed0c <feof@plt+0xc33c>  // b.none
  40e51c:	cbnz	w27, 40ebec <feof@plt+0xc21c>
  40e520:	ldr	x8, [sp, #56]
  40e524:	ldr	x10, [x23]
  40e528:	ldr	x8, [x8]
  40e52c:	add	x0, x10, #0xcc
  40e530:	ldrsw	x9, [x8, #24]
  40e534:	tbz	w9, #31, 40edd0 <feof@plt+0xc400>
  40e538:	add	w10, w9, #0x8
  40e53c:	cmn	w9, #0x8
  40e540:	str	w10, [x8, #24]
  40e544:	b.gt	40edd0 <feof@plt+0xc400>
  40e548:	ldr	x8, [x8, #8]
  40e54c:	add	x9, x8, x9
  40e550:	b	40eddc <feof@plt+0xc40c>
  40e554:	tbz	w21, #0, 40eba4 <feof@plt+0xc1d4>
  40e558:	ldr	x8, [sp, #56]
  40e55c:	ldr	x10, [x23]
  40e560:	ldr	x8, [x8]
  40e564:	add	x0, x10, #0xcc
  40e568:	ldrsw	x9, [x8, #24]
  40e56c:	tbz	w9, #31, 40ea58 <feof@plt+0xc088>
  40e570:	add	w10, w9, #0x8
  40e574:	cmn	w9, #0x8
  40e578:	str	w10, [x8, #24]
  40e57c:	b.gt	40ea58 <feof@plt+0xc088>
  40e580:	ldr	x8, [x8, #8]
  40e584:	add	x9, x8, x9
  40e588:	b	40ea64 <feof@plt+0xc094>
  40e58c:	ldr	x8, [sp, #56]
  40e590:	ldr	x10, [x23]
  40e594:	ldr	x8, [x8]
  40e598:	add	x0, x10, #0xcc
  40e59c:	ldrsw	x9, [x8, #24]
  40e5a0:	tbz	w9, #31, 40e7c0 <feof@plt+0xbdf0>
  40e5a4:	add	w10, w9, #0x8
  40e5a8:	cmn	w9, #0x8
  40e5ac:	str	w10, [x8, #24]
  40e5b0:	b.gt	40e7c0 <feof@plt+0xbdf0>
  40e5b4:	ldr	x8, [x8, #8]
  40e5b8:	add	x9, x8, x9
  40e5bc:	b	40e7cc <feof@plt+0xbdfc>
  40e5c0:	ldrb	w8, [x25]
  40e5c4:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40e5c8:	add	x9, x9, #0xa50
  40e5cc:	ldrh	w9, [x9, x8, lsl #1]
  40e5d0:	tbnz	w9, #2, 40ebf4 <feof@plt+0xc224>
  40e5d4:	cmp	w8, #0x2a
  40e5d8:	b.ne	40f134 <feof@plt+0xc764>  // b.any
  40e5dc:	ldrb	w8, [x25, #1]
  40e5e0:	ldr	x11, [sp, #64]
  40e5e4:	cmp	w8, #0x73
  40e5e8:	b.ne	40f14c <feof@plt+0xc77c>  // b.any
  40e5ec:	ldr	x8, [sp, #56]
  40e5f0:	ldr	x27, [sp, #72]
  40e5f4:	ldr	x8, [x8]
  40e5f8:	ldrsw	x9, [x8, #24]
  40e5fc:	tbz	w9, #31, 40ec40 <feof@plt+0xc270>
  40e600:	add	w10, w9, #0x8
  40e604:	cmn	w9, #0x8
  40e608:	str	w10, [x8, #24]
  40e60c:	b.gt	40ec40 <feof@plt+0xc270>
  40e610:	ldr	x8, [x8, #8]
  40e614:	add	x9, x8, x9
  40e618:	b	40ec4c <feof@plt+0xc27c>
  40e61c:	ldr	x8, [sp, #56]
  40e620:	ldr	x8, [x8]
  40e624:	ldrsw	x9, [x8, #24]
  40e628:	tbz	w9, #31, 40e7e4 <feof@plt+0xbe14>
  40e62c:	add	w10, w9, #0x8
  40e630:	cmn	w9, #0x8
  40e634:	str	w10, [x8, #24]
  40e638:	b.gt	40e7e4 <feof@plt+0xbe14>
  40e63c:	ldr	x8, [x8, #8]
  40e640:	mov	w26, w22
  40e644:	add	x9, x8, x9
  40e648:	b	40e7f4 <feof@plt+0xbe24>
  40e64c:	ldr	x8, [sp, #56]
  40e650:	ldrb	w10, [sp, #108]
  40e654:	ldr	x8, [x8]
  40e658:	ldrsw	x9, [x8, #24]
  40e65c:	cbz	w10, 40ecd4 <feof@plt+0xc304>
  40e660:	ldr	x27, [sp, #72]
  40e664:	tbz	w9, #31, 40ea7c <feof@plt+0xc0ac>
  40e668:	add	w10, w9, #0x8
  40e66c:	cmn	w9, #0x8
  40e670:	str	w10, [x8, #24]
  40e674:	b.gt	40ea7c <feof@plt+0xc0ac>
  40e678:	ldr	x8, [x8, #8]
  40e67c:	add	x9, x8, x9
  40e680:	b	40ea88 <feof@plt+0xc0b8>
  40e684:	ldr	x8, [sp, #56]
  40e688:	ldr	x9, [x8]
  40e68c:	ldrb	w8, [x28, #67]
  40e690:	ldrsw	x10, [x9, #24]
  40e694:	tbz	w10, #31, 40e9f8 <feof@plt+0xc028>
  40e698:	add	w11, w10, #0x8
  40e69c:	cmn	w10, #0x8
  40e6a0:	str	w11, [x9, #24]
  40e6a4:	b.gt	40e9f8 <feof@plt+0xc028>
  40e6a8:	ldr	x9, [x9, #8]
  40e6ac:	add	x10, x9, x10
  40e6b0:	b	40ea04 <feof@plt+0xc034>
  40e6b4:	ldr	x8, [x28, #48]
  40e6b8:	cbz	x8, 40f164 <feof@plt+0xc794>
  40e6bc:	ldr	x9, [sp, #64]
  40e6c0:	ldr	x1, [sp, #32]
  40e6c4:	and	w4, w21, #0x1
  40e6c8:	and	w5, w19, #0x1
  40e6cc:	and	w6, w26, #0x1
  40e6d0:	add	x7, sp, #0x6c
  40e6d4:	mov	x0, x28
  40e6d8:	mov	w3, w27
  40e6dc:	str	x9, [sp]
  40e6e0:	blr	x8
  40e6e4:	ldr	x27, [sp, #72]
  40e6e8:	tbnz	w0, #0, 40efd0 <feof@plt+0xc600>
  40e6ec:	b	40f17c <feof@plt+0xc7ac>
  40e6f0:	ldr	x9, [x8]
  40e6f4:	add	x10, x9, #0x8
  40e6f8:	str	x10, [x8]
  40e6fc:	ldr	d0, [x9]
  40e700:	ldr	x27, [sp, #72]
  40e704:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40e708:	add	x1, x1, #0x5b
  40e70c:	bl	4025b0 <sprintf@plt>
  40e710:	b	40efb0 <feof@plt+0xc5e0>
  40e714:	ldr	x9, [x8]
  40e718:	add	x10, x9, #0x8
  40e71c:	str	x10, [x8]
  40e720:	ldr	w1, [x9]
  40e724:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40e728:	add	x9, x9, #0xa50
  40e72c:	ldr	x27, [sp, #72]
  40e730:	and	x8, x1, #0xff
  40e734:	ldrh	w8, [x9, x8, lsl #1]
  40e738:	tbnz	w8, #4, 40eb98 <feof@plt+0xc1c8>
  40e73c:	ldrb	w8, [sp, #108]
  40e740:	cbz	w8, 40eb98 <feof@plt+0xc1c8>
  40e744:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  40e748:	and	x8, x1, #0xff
  40e74c:	add	x9, x9, #0xa50
  40e750:	ldrh	w8, [x9, x8, lsl #1]
  40e754:	strb	w1, [sp, #104]
  40e758:	strb	wzr, [sp, #105]
  40e75c:	tbnz	w8, #4, 40ed74 <feof@plt+0xc3a4>
  40e760:	and	w2, w1, #0xff
  40e764:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40e768:	sub	x0, x29, #0x20
  40e76c:	add	x1, x1, #0x95
  40e770:	bl	4025b0 <sprintf@plt>
  40e774:	sub	x8, x29, #0x20
  40e778:	add	x2, x8, w0, sxtw
  40e77c:	sub	x1, x29, #0x20
  40e780:	mov	x0, x28
  40e784:	bl	40fd64 <feof@plt+0xd394>
  40e788:	ldr	x2, [sp, #16]
  40e78c:	mov	x1, x2
  40e790:	b	40ed7c <feof@plt+0xc3ac>
  40e794:	ldr	x9, [x8]
  40e798:	add	x10, x9, #0x8
  40e79c:	str	x10, [x8]
  40e7a0:	ldr	x8, [x28, #8]
  40e7a4:	ldr	x27, [sp, #72]
  40e7a8:	ldr	x2, [x9]
  40e7ac:	add	x0, x8, #0xcc
  40e7b0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40e7b4:	add	x1, x1, #0x20b
  40e7b8:	bl	4025b0 <sprintf@plt>
  40e7bc:	b	40efb0 <feof@plt+0xc5e0>
  40e7c0:	ldr	x9, [x8]
  40e7c4:	add	x10, x9, #0x8
  40e7c8:	str	x10, [x8]
  40e7cc:	ldr	x2, [x9]
  40e7d0:	ldr	x27, [sp, #72]
  40e7d4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40e7d8:	add	x1, x1, #0x4f
  40e7dc:	bl	4025b0 <sprintf@plt>
  40e7e0:	b	40efb0 <feof@plt+0xc5e0>
  40e7e4:	ldr	x9, [x8]
  40e7e8:	mov	w26, w22
  40e7ec:	add	x10, x9, #0x8
  40e7f0:	str	x10, [x8]
  40e7f4:	ldr	x8, [sp, #56]
  40e7f8:	ldr	x22, [x9]
  40e7fc:	ldr	x27, [sp, #72]
  40e800:	ldr	x8, [x8]
  40e804:	ldrsw	x10, [x8, #24]
  40e808:	tbz	w10, #31, 40e830 <feof@plt+0xbe60>
  40e80c:	add	w9, w10, #0x8
  40e810:	cmn	w10, #0x8
  40e814:	str	w9, [x8, #24]
  40e818:	b.gt	40e830 <feof@plt+0xbe60>
  40e81c:	ldr	x8, [x8, #8]
  40e820:	add	x9, x8, x10
  40e824:	ldr	w25, [x9]
  40e828:	cbnz	w25, 40e844 <feof@plt+0xbe74>
  40e82c:	b	40e9f0 <feof@plt+0xc020>
  40e830:	ldr	x9, [x8]
  40e834:	add	x10, x9, #0x8
  40e838:	str	x10, [x8]
  40e83c:	ldr	w25, [x9]
  40e840:	cbz	w25, 40e9f0 <feof@plt+0xc020>
  40e844:	mov	x19, xzr
  40e848:	sub	w21, w25, #0x1
  40e84c:	b	40e87c <feof@plt+0xbeac>
  40e850:	add	x9, x8, #0x1
  40e854:	str	x9, [x24, #24]
  40e858:	mov	w9, #0x20                  	// #32
  40e85c:	strb	w9, [x8]
  40e860:	ldr	x8, [x23]
  40e864:	ldr	w9, [x8, #200]
  40e868:	add	w9, w9, #0x1
  40e86c:	str	w9, [x8, #200]
  40e870:	add	x19, x19, #0x1
  40e874:	cmp	x25, x19
  40e878:	b.eq	40e9f0 <feof@plt+0xc020>  // b.none
  40e87c:	ldr	x8, [x28, #8]
  40e880:	ldr	w2, [x22, x19, lsl #2]
  40e884:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40e888:	add	x1, x1, #0x776
  40e88c:	add	x0, x8, #0xcc
  40e890:	bl	4025b0 <sprintf@plt>
  40e894:	ldr	x8, [x28, #8]
  40e898:	add	x20, x8, #0xcc
  40e89c:	mov	x0, x20
  40e8a0:	bl	402420 <strlen@plt>
  40e8a4:	add	x2, x20, x0
  40e8a8:	mov	x0, x28
  40e8ac:	mov	x1, x20
  40e8b0:	bl	40fd64 <feof@plt+0xd394>
  40e8b4:	cmp	x19, x21
  40e8b8:	b.cs	40e870 <feof@plt+0xbea0>  // b.hs, b.nlast
  40e8bc:	ldr	w8, [x28, #40]
  40e8c0:	cmp	w8, #0x1
  40e8c4:	b.lt	40e920 <feof@plt+0xbf50>  // b.tstop
  40e8c8:	ldr	x8, [x28, #8]
  40e8cc:	ldr	w9, [x28, #28]
  40e8d0:	ldr	w10, [x8, #200]
  40e8d4:	cmp	w9, w10
  40e8d8:	b.gt	40e920 <feof@plt+0xbf50>
  40e8dc:	ldr	x24, [x8, #176]
  40e8e0:	ldp	x8, x9, [x24, #24]
  40e8e4:	cmp	x9, x8
  40e8e8:	b.ne	40e8fc <feof@plt+0xbf2c>  // b.any
  40e8ec:	mov	w1, #0x1                   	// #1
  40e8f0:	mov	x0, x24
  40e8f4:	bl	45037c <_obstack_newchunk@@Base>
  40e8f8:	ldr	x8, [x24, #24]
  40e8fc:	add	x9, x8, #0x1
  40e900:	str	x9, [x24, #24]
  40e904:	mov	w9, #0xa                   	// #10
  40e908:	strb	w9, [x8]
  40e90c:	ldr	x8, [x28, #8]
  40e910:	strb	wzr, [x28, #65]
  40e914:	str	wzr, [x8, #200]
  40e918:	ldr	w8, [sp, #52]
  40e91c:	tbnz	w8, #6, 40e964 <feof@plt+0xbf94>
  40e920:	ldr	x8, [x23]
  40e924:	ldr	x24, [x8, #176]
  40e928:	ldp	x8, x9, [x24, #24]
  40e92c:	cmp	x9, x8
  40e930:	b.ne	40e944 <feof@plt+0xbf74>  // b.any
  40e934:	mov	w1, #0x1                   	// #1
  40e938:	mov	x0, x24
  40e93c:	bl	45037c <_obstack_newchunk@@Base>
  40e940:	ldr	x8, [x24, #24]
  40e944:	add	x9, x8, #0x1
  40e948:	str	x9, [x24, #24]
  40e94c:	mov	w9, #0x2c                  	// #44
  40e950:	strb	w9, [x8]
  40e954:	ldr	x8, [x23]
  40e958:	ldr	w9, [x8, #200]
  40e95c:	add	w9, w9, #0x1
  40e960:	str	w9, [x8, #200]
  40e964:	ldr	w8, [x28, #40]
  40e968:	cmp	w8, #0x1
  40e96c:	b.lt	40e9c8 <feof@plt+0xbff8>  // b.tstop
  40e970:	ldr	x8, [x28, #8]
  40e974:	ldr	w9, [x28, #28]
  40e978:	ldr	w10, [x8, #200]
  40e97c:	cmp	w9, w10
  40e980:	b.gt	40e9c8 <feof@plt+0xbff8>
  40e984:	ldr	x24, [x8, #176]
  40e988:	ldp	x8, x9, [x24, #24]
  40e98c:	cmp	x9, x8
  40e990:	b.ne	40e9a4 <feof@plt+0xbfd4>  // b.any
  40e994:	mov	w1, #0x1                   	// #1
  40e998:	mov	x0, x24
  40e99c:	bl	45037c <_obstack_newchunk@@Base>
  40e9a0:	ldr	x8, [x24, #24]
  40e9a4:	add	x9, x8, #0x1
  40e9a8:	str	x9, [x24, #24]
  40e9ac:	mov	w9, #0xa                   	// #10
  40e9b0:	strb	w9, [x8]
  40e9b4:	ldr	x8, [x28, #8]
  40e9b8:	strb	wzr, [x28, #65]
  40e9bc:	str	wzr, [x8, #200]
  40e9c0:	ldr	w8, [sp, #40]
  40e9c4:	tbnz	w8, #6, 40e870 <feof@plt+0xbea0>
  40e9c8:	ldr	x8, [x23]
  40e9cc:	ldr	x24, [x8, #176]
  40e9d0:	ldp	x8, x9, [x24, #24]
  40e9d4:	cmp	x9, x8
  40e9d8:	b.ne	40e850 <feof@plt+0xbe80>  // b.any
  40e9dc:	mov	w1, #0x1                   	// #1
  40e9e0:	mov	x0, x24
  40e9e4:	bl	45037c <_obstack_newchunk@@Base>
  40e9e8:	ldr	x8, [x24, #24]
  40e9ec:	b	40e850 <feof@plt+0xbe80>
  40e9f0:	mov	w22, w26
  40e9f4:	b	40efd0 <feof@plt+0xc600>
  40e9f8:	ldr	x10, [x9]
  40e9fc:	add	x11, x10, #0x8
  40ea00:	str	x11, [x9]
  40ea04:	ldr	x20, [x10]
  40ea08:	ldr	x27, [sp, #72]
  40ea0c:	cmp	w8, #0x0
  40ea10:	cset	w24, ne  // ne = any
  40ea14:	mov	x0, x20
  40ea18:	bl	402420 <strlen@plt>
  40ea1c:	mov	x2, x0
  40ea20:	mov	w0, w24
  40ea24:	mov	x1, x20
  40ea28:	bl	407b70 <feof@plt+0x51a0>
  40ea2c:	mov	x20, x0
  40ea30:	b	40efbc <feof@plt+0xc5ec>
  40ea34:	ldr	x9, [x8]
  40ea38:	add	x10, x9, #0x8
  40ea3c:	str	x10, [x8]
  40ea40:	ldr	x2, [x9]
  40ea44:	ldr	x27, [sp, #72]
  40ea48:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ea4c:	add	x1, x1, #0x52
  40ea50:	bl	4025b0 <sprintf@plt>
  40ea54:	b	40efb0 <feof@plt+0xc5e0>
  40ea58:	ldr	x9, [x8]
  40ea5c:	add	x10, x9, #0x8
  40ea60:	str	x10, [x8]
  40ea64:	ldr	x2, [x9]
  40ea68:	ldr	x27, [sp, #72]
  40ea6c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ea70:	add	x1, x1, #0x46
  40ea74:	bl	4025b0 <sprintf@plt>
  40ea78:	b	40efb0 <feof@plt+0xc5e0>
  40ea7c:	ldr	x9, [x8]
  40ea80:	add	x10, x9, #0x8
  40ea84:	str	x10, [x8]
  40ea88:	ldr	x25, [x9]
  40ea8c:	mov	x0, x25
  40ea90:	bl	402420 <strlen@plt>
  40ea94:	cbz	x0, 40ed84 <feof@plt+0xc3b4>
  40ea98:	mov	x24, x0
  40ea9c:	mov	x1, x25
  40eaa0:	b	40ead8 <feof@plt+0xc108>
  40eaa4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40eaa8:	sub	x0, x29, #0x20
  40eaac:	add	x1, x1, #0x95
  40eab0:	bl	4025b0 <sprintf@plt>
  40eab4:	sub	x8, x29, #0x20
  40eab8:	add	x2, x8, w0, sxtw
  40eabc:	sub	x1, x29, #0x20
  40eac0:	mov	x0, x28
  40eac4:	bl	40fd64 <feof@plt+0xd394>
  40eac8:	add	x1, x25, #0x1
  40eacc:	subs	x24, x24, #0x1
  40ead0:	add	x25, x25, #0x1
  40ead4:	b.eq	40ed88 <feof@plt+0xc3b8>  // b.none
  40ead8:	ldrb	w2, [x25]
  40eadc:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  40eae0:	add	x8, x8, #0xa50
  40eae4:	ldrh	w8, [x8, x2, lsl #1]
  40eae8:	tbnz	w8, #4, 40eacc <feof@plt+0xc0fc>
  40eaec:	cmp	x1, x25
  40eaf0:	b.cs	40eaa4 <feof@plt+0xc0d4>  // b.hs, b.nlast
  40eaf4:	sub	x2, x25, #0x1
  40eaf8:	mov	x0, x28
  40eafc:	bl	40fd64 <feof@plt+0xd394>
  40eb00:	ldrb	w2, [x25]
  40eb04:	b	40eaa4 <feof@plt+0xc0d4>
  40eb08:	cmp	w27, #0x2
  40eb0c:	b.eq	40edf0 <feof@plt+0xc420>  // b.none
  40eb10:	cmp	w27, #0x1
  40eb14:	b.eq	40e440 <feof@plt+0xba70>  // b.none
  40eb18:	cbnz	w27, 40ebec <feof@plt+0xc21c>
  40eb1c:	ldr	x8, [sp, #56]
  40eb20:	ldr	x10, [x23]
  40eb24:	ldr	x8, [x8]
  40eb28:	add	x0, x10, #0xcc
  40eb2c:	ldrsw	x9, [x8, #24]
  40eb30:	tbz	w9, #31, 40eee4 <feof@plt+0xc514>
  40eb34:	add	w10, w9, #0x8
  40eb38:	cmn	w9, #0x8
  40eb3c:	str	w10, [x8, #24]
  40eb40:	b.gt	40eee4 <feof@plt+0xc514>
  40eb44:	ldr	x8, [x8, #8]
  40eb48:	add	x9, x8, x9
  40eb4c:	b	40eef0 <feof@plt+0xc520>
  40eb50:	cmp	w27, #0x2
  40eb54:	b.eq	40ee58 <feof@plt+0xc488>  // b.none
  40eb58:	cmp	w27, #0x1
  40eb5c:	b.eq	40ee24 <feof@plt+0xc454>  // b.none
  40eb60:	cbnz	w27, 40ebec <feof@plt+0xc21c>
  40eb64:	ldr	x8, [sp, #56]
  40eb68:	ldr	x10, [x23]
  40eb6c:	ldr	x8, [x8]
  40eb70:	add	x0, x10, #0xcc
  40eb74:	ldrsw	x9, [x8, #24]
  40eb78:	tbz	w9, #31, 40ef4c <feof@plt+0xc57c>
  40eb7c:	add	w10, w9, #0x8
  40eb80:	cmn	w9, #0x8
  40eb84:	str	w10, [x8, #24]
  40eb88:	b.gt	40ef4c <feof@plt+0xc57c>
  40eb8c:	ldr	x8, [x8, #8]
  40eb90:	add	x9, x8, x9
  40eb94:	b	40ef58 <feof@plt+0xc588>
  40eb98:	mov	x0, x28
  40eb9c:	bl	40d5a0 <feof@plt+0xabd0>
  40eba0:	b	40efd0 <feof@plt+0xc600>
  40eba4:	cmp	w27, #0x2
  40eba8:	b.eq	40ee8c <feof@plt+0xc4bc>  // b.none
  40ebac:	cmp	w27, #0x1
  40ebb0:	b.eq	40e558 <feof@plt+0xbb88>  // b.none
  40ebb4:	cbnz	w27, 40ebec <feof@plt+0xc21c>
  40ebb8:	ldr	x8, [sp, #56]
  40ebbc:	ldr	x10, [x23]
  40ebc0:	ldr	x8, [x8]
  40ebc4:	add	x0, x10, #0xcc
  40ebc8:	ldrsw	x9, [x8, #24]
  40ebcc:	tbz	w9, #31, 40ef90 <feof@plt+0xc5c0>
  40ebd0:	add	w10, w9, #0x8
  40ebd4:	cmn	w9, #0x8
  40ebd8:	str	w10, [x8, #24]
  40ebdc:	b.gt	40ef90 <feof@plt+0xc5c0>
  40ebe0:	ldr	x8, [x8, #8]
  40ebe4:	add	x9, x8, x9
  40ebe8:	b	40ef9c <feof@plt+0xc5cc>
  40ebec:	ldr	x27, [sp, #72]
  40ebf0:	b	40efd0 <feof@plt+0xc600>
  40ebf4:	sub	x1, x29, #0x20
  40ebf8:	mov	w2, #0xa                   	// #10
  40ebfc:	mov	x0, x25
  40ec00:	bl	4027e0 <strtoul@plt>
  40ec04:	ldur	x8, [x29, #-32]
  40ec08:	ldrb	w8, [x8]
  40ec0c:	cmp	w8, #0x73
  40ec10:	b.ne	40f194 <feof@plt+0xc7c4>  // b.any
  40ec14:	ldr	x27, [sp, #72]
  40ec18:	b	40ec64 <feof@plt+0xc294>
  40ec1c:	ldr	x9, [x8]
  40ec20:	add	x10, x9, #0x8
  40ec24:	str	x10, [x8]
  40ec28:	ldr	x2, [x9]
  40ec2c:	ldr	x27, [sp, #72]
  40ec30:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ec34:	add	x1, x1, #0x5e
  40ec38:	bl	4025b0 <sprintf@plt>
  40ec3c:	b	40efb0 <feof@plt+0xc5e0>
  40ec40:	ldr	x9, [x8]
  40ec44:	add	x10, x9, #0x8
  40ec48:	str	x10, [x8]
  40ec4c:	add	w22, w22, #0x1
  40ec50:	add	x8, sp, #0x70
  40ec54:	ldr	x8, [x8, w22, uxtw #3]
  40ec58:	cmp	x11, x8
  40ec5c:	b.ne	40f1ac <feof@plt+0xc7dc>  // b.any
  40ec60:	ldr	w0, [x9]
  40ec64:	ldr	x8, [sp, #56]
  40ec68:	ldr	x8, [x8]
  40ec6c:	ldrsw	x9, [x8, #24]
  40ec70:	tbz	w9, #31, 40eca0 <feof@plt+0xc2d0>
  40ec74:	add	w10, w9, #0x8
  40ec78:	cmn	w9, #0x8
  40ec7c:	str	w10, [x8, #24]
  40ec80:	b.gt	40eca0 <feof@plt+0xc2d0>
  40ec84:	ldr	x8, [x8, #8]
  40ec88:	add	x9, x8, x9
  40ec8c:	ldr	x24, [x9]
  40ec90:	tbz	w0, #31, 40ecb4 <feof@plt+0xc2e4>
  40ec94:	mov	x0, x24
  40ec98:	bl	402420 <strlen@plt>
  40ec9c:	b	40ecc0 <feof@plt+0xc2f0>
  40eca0:	ldr	x9, [x8]
  40eca4:	add	x10, x9, #0x8
  40eca8:	str	x10, [x8]
  40ecac:	ldr	x24, [x9]
  40ecb0:	tbnz	w0, #31, 40ec94 <feof@plt+0xc2c4>
  40ecb4:	mov	w1, w0
  40ecb8:	mov	x0, x24
  40ecbc:	bl	402930 <strnlen@plt>
  40ecc0:	add	x2, x24, x0
  40ecc4:	mov	x0, x28
  40ecc8:	mov	x1, x24
  40eccc:	bl	40f3b8 <feof@plt+0xc9e8>
  40ecd0:	b	40efd0 <feof@plt+0xc600>
  40ecd4:	ldr	x27, [sp, #72]
  40ecd8:	tbz	w9, #31, 40ecf8 <feof@plt+0xc328>
  40ecdc:	add	w10, w9, #0x8
  40ece0:	cmn	w9, #0x8
  40ece4:	str	w10, [x8, #24]
  40ece8:	b.gt	40ecf8 <feof@plt+0xc328>
  40ecec:	ldr	x8, [x8, #8]
  40ecf0:	add	x9, x8, x9
  40ecf4:	b	40ed04 <feof@plt+0xc334>
  40ecf8:	ldr	x9, [x8]
  40ecfc:	add	x10, x9, #0x8
  40ed00:	str	x10, [x8]
  40ed04:	ldr	x20, [x9]
  40ed08:	b	40efb8 <feof@plt+0xc5e8>
  40ed0c:	ldr	x8, [sp, #56]
  40ed10:	ldr	x10, [x23]
  40ed14:	ldr	x8, [x8]
  40ed18:	add	x0, x10, #0xcc
  40ed1c:	ldrsw	x9, [x8, #24]
  40ed20:	tbz	w9, #31, 40ed94 <feof@plt+0xc3c4>
  40ed24:	add	w10, w9, #0x8
  40ed28:	cmn	w9, #0x8
  40ed2c:	str	w10, [x8, #24]
  40ed30:	b.gt	40ed94 <feof@plt+0xc3c4>
  40ed34:	ldr	x8, [x8, #8]
  40ed38:	add	x9, x8, x9
  40ed3c:	b	40eda0 <feof@plt+0xc3d0>
  40ed40:	ldr	x8, [sp, #56]
  40ed44:	ldr	x10, [x23]
  40ed48:	ldr	x8, [x8]
  40ed4c:	add	x0, x10, #0xcc
  40ed50:	ldrsw	x9, [x8, #24]
  40ed54:	tbz	w9, #31, 40edac <feof@plt+0xc3dc>
  40ed58:	add	w10, w9, #0x8
  40ed5c:	cmn	w9, #0x8
  40ed60:	str	w10, [x8, #24]
  40ed64:	b.gt	40edac <feof@plt+0xc3dc>
  40ed68:	ldr	x8, [x8, #8]
  40ed6c:	add	x9, x8, x9
  40ed70:	b	40edb8 <feof@plt+0xc3e8>
  40ed74:	ldr	x2, [sp, #16]
  40ed78:	add	x1, sp, #0x68
  40ed7c:	mov	x0, x28
  40ed80:	b	40efcc <feof@plt+0xc5fc>
  40ed84:	mov	x1, x25
  40ed88:	mov	x0, x28
  40ed8c:	mov	x2, x25
  40ed90:	b	40efcc <feof@plt+0xc5fc>
  40ed94:	ldr	x9, [x8]
  40ed98:	add	x10, x9, #0x8
  40ed9c:	str	x10, [x8]
  40eda0:	ldr	x27, [sp, #72]
  40eda4:	ldr	x2, [x9]
  40eda8:	b	40e7b0 <feof@plt+0xbde0>
  40edac:	ldr	x9, [x8]
  40edb0:	add	x10, x9, #0x8
  40edb4:	str	x10, [x8]
  40edb8:	ldr	x2, [x9]
  40edbc:	ldr	x27, [sp, #72]
  40edc0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40edc4:	add	x1, x1, #0x41
  40edc8:	bl	4025b0 <sprintf@plt>
  40edcc:	b	40efb0 <feof@plt+0xc5e0>
  40edd0:	ldr	x9, [x8]
  40edd4:	add	x10, x9, #0x8
  40edd8:	str	x10, [x8]
  40eddc:	ldr	x27, [sp, #72]
  40ede0:	ldr	w2, [x9]
  40ede4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ede8:	add	x1, x1, #0x6e9
  40edec:	b	40efac <feof@plt+0xc5dc>
  40edf0:	ldr	x8, [sp, #56]
  40edf4:	ldr	x10, [x23]
  40edf8:	ldr	x8, [x8]
  40edfc:	add	x0, x10, #0xcc
  40ee00:	ldrsw	x9, [x8, #24]
  40ee04:	tbz	w9, #31, 40eec0 <feof@plt+0xc4f0>
  40ee08:	add	w10, w9, #0x8
  40ee0c:	cmn	w9, #0x8
  40ee10:	str	w10, [x8, #24]
  40ee14:	b.gt	40eec0 <feof@plt+0xc4f0>
  40ee18:	ldr	x8, [x8, #8]
  40ee1c:	add	x9, x8, x9
  40ee20:	b	40eecc <feof@plt+0xc4fc>
  40ee24:	ldr	x8, [sp, #56]
  40ee28:	ldr	x10, [x23]
  40ee2c:	ldr	x8, [x8]
  40ee30:	add	x0, x10, #0xcc
  40ee34:	ldrsw	x9, [x8, #24]
  40ee38:	tbz	w9, #31, 40ef04 <feof@plt+0xc534>
  40ee3c:	add	w10, w9, #0x8
  40ee40:	cmn	w9, #0x8
  40ee44:	str	w10, [x8, #24]
  40ee48:	b.gt	40ef04 <feof@plt+0xc534>
  40ee4c:	ldr	x8, [x8, #8]
  40ee50:	add	x9, x8, x9
  40ee54:	b	40ef10 <feof@plt+0xc540>
  40ee58:	ldr	x8, [sp, #56]
  40ee5c:	ldr	x10, [x23]
  40ee60:	ldr	x8, [x8]
  40ee64:	add	x0, x10, #0xcc
  40ee68:	ldrsw	x9, [x8, #24]
  40ee6c:	tbz	w9, #31, 40ef28 <feof@plt+0xc558>
  40ee70:	add	w10, w9, #0x8
  40ee74:	cmn	w9, #0x8
  40ee78:	str	w10, [x8, #24]
  40ee7c:	b.gt	40ef28 <feof@plt+0xc558>
  40ee80:	ldr	x8, [x8, #8]
  40ee84:	add	x9, x8, x9
  40ee88:	b	40ef34 <feof@plt+0xc564>
  40ee8c:	ldr	x8, [sp, #56]
  40ee90:	ldr	x10, [x23]
  40ee94:	ldr	x8, [x8]
  40ee98:	add	x0, x10, #0xcc
  40ee9c:	ldrsw	x9, [x8, #24]
  40eea0:	tbz	w9, #31, 40ef6c <feof@plt+0xc59c>
  40eea4:	add	w10, w9, #0x8
  40eea8:	cmn	w9, #0x8
  40eeac:	str	w10, [x8, #24]
  40eeb0:	b.gt	40ef6c <feof@plt+0xc59c>
  40eeb4:	ldr	x8, [x8, #8]
  40eeb8:	add	x9, x8, x9
  40eebc:	b	40ef78 <feof@plt+0xc5a8>
  40eec0:	ldr	x9, [x8]
  40eec4:	add	x10, x9, #0x8
  40eec8:	str	x10, [x8]
  40eecc:	ldr	x2, [x9]
  40eed0:	ldr	x27, [sp, #72]
  40eed4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40eed8:	add	x1, x1, #0x56
  40eedc:	bl	4025b0 <sprintf@plt>
  40eee0:	b	40efb0 <feof@plt+0xc5e0>
  40eee4:	ldr	x9, [x8]
  40eee8:	add	x10, x9, #0x8
  40eeec:	str	x10, [x8]
  40eef0:	ldr	x27, [sp, #72]
  40eef4:	ldr	w2, [x9]
  40eef8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40eefc:	add	x1, x1, #0x832
  40ef00:	b	40efac <feof@plt+0xc5dc>
  40ef04:	ldr	x9, [x8]
  40ef08:	add	x10, x9, #0x8
  40ef0c:	str	x10, [x8]
  40ef10:	ldr	x2, [x9]
  40ef14:	ldr	x27, [sp, #72]
  40ef18:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ef1c:	add	x1, x1, #0x66
  40ef20:	bl	4025b0 <sprintf@plt>
  40ef24:	b	40efb0 <feof@plt+0xc5e0>
  40ef28:	ldr	x9, [x8]
  40ef2c:	add	x10, x9, #0x8
  40ef30:	str	x10, [x8]
  40ef34:	ldr	x2, [x9]
  40ef38:	ldr	x27, [sp, #72]
  40ef3c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ef40:	add	x1, x1, #0x6a
  40ef44:	bl	4025b0 <sprintf@plt>
  40ef48:	b	40efb0 <feof@plt+0xc5e0>
  40ef4c:	ldr	x9, [x8]
  40ef50:	add	x10, x9, #0x8
  40ef54:	str	x10, [x8]
  40ef58:	ldr	x27, [sp, #72]
  40ef5c:	ldr	w2, [x9]
  40ef60:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ef64:	add	x1, x1, #0x63
  40ef68:	b	40efac <feof@plt+0xc5dc>
  40ef6c:	ldr	x9, [x8]
  40ef70:	add	x10, x9, #0x8
  40ef74:	str	x10, [x8]
  40ef78:	ldr	x2, [x9]
  40ef7c:	ldr	x27, [sp, #72]
  40ef80:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  40ef84:	add	x1, x1, #0x4a
  40ef88:	bl	4025b0 <sprintf@plt>
  40ef8c:	b	40efb0 <feof@plt+0xc5e0>
  40ef90:	ldr	x9, [x8]
  40ef94:	add	x10, x9, #0x8
  40ef98:	str	x10, [x8]
  40ef9c:	ldr	x27, [sp, #72]
  40efa0:	ldr	w2, [x9]
  40efa4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  40efa8:	add	x1, x1, #0xbd4
  40efac:	bl	4025b0 <sprintf@plt>
  40efb0:	ldr	x8, [x28, #8]
  40efb4:	add	x20, x8, #0xcc
  40efb8:	mov	x0, x20
  40efbc:	bl	402420 <strlen@plt>
  40efc0:	add	x2, x20, x0
  40efc4:	mov	x0, x28
  40efc8:	mov	x1, x20
  40efcc:	bl	40fd64 <feof@plt+0xd394>
  40efd0:	ldrb	w8, [sp, #108]
  40efd4:	cbz	w8, 40f018 <feof@plt+0xc648>
  40efd8:	ldrb	w0, [x28, #67]
  40efdc:	bl	407bf4 <feof@plt+0x5224>
  40efe0:	mov	x20, x0
  40efe4:	bl	402420 <strlen@plt>
  40efe8:	add	x2, x20, x0
  40efec:	mov	x0, x28
  40eff0:	mov	x1, x20
  40eff4:	bl	40fd64 <feof@plt+0xd394>
  40eff8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40effc:	ldr	x20, [x8, #1264]
  40f000:	mov	x0, x20
  40f004:	bl	402420 <strlen@plt>
  40f008:	add	x2, x20, x0
  40f00c:	mov	x0, x28
  40f010:	mov	x1, x20
  40f014:	bl	40fd64 <feof@plt+0xd394>
  40f018:	ldp	x8, x9, [x27, #112]
  40f01c:	cmp	x9, x8
  40f020:	b.ne	40e248 <feof@plt+0xb878>  // b.any
  40f024:	ldr	x0, [sp, #88]
  40f028:	mov	w1, #0x1                   	// #1
  40f02c:	bl	45037c <_obstack_newchunk@@Base>
  40f030:	ldr	x8, [sp, #96]
  40f034:	ldr	x8, [x8]
  40f038:	b	40e248 <feof@plt+0xb878>
  40f03c:	ldr	x0, [x28, #56]
  40f040:	cbz	x0, 40f054 <feof@plt+0xc684>
  40f044:	ldr	x8, [x0]
  40f048:	mov	x1, x28
  40f04c:	ldr	x8, [x8, #16]
  40f050:	blr	x8
  40f054:	ldr	x8, [sp, #24]
  40f058:	str	x27, [x27, #176]
  40f05c:	str	wzr, [x27, #200]
  40f060:	strb	wzr, [x28, #64]
  40f064:	stur	x8, [x28, #36]
  40f068:	str	wzr, [x28, #32]
  40f06c:	ldp	x20, x19, [sp, #464]
  40f070:	ldp	x22, x21, [sp, #448]
  40f074:	ldp	x24, x23, [sp, #432]
  40f078:	ldp	x26, x25, [sp, #416]
  40f07c:	ldp	x28, x27, [sp, #400]
  40f080:	ldp	x29, x30, [sp, #384]
  40f084:	add	sp, sp, #0x1e0
  40f088:	ret
  40f08c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f090:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f094:	add	x0, x0, #0xff3
  40f098:	add	x2, x2, #0x31
  40f09c:	mov	w1, #0x4c0                 	// #1216
  40f0a0:	bl	404ac4 <feof@plt+0x20f4>
  40f0a4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f0a8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f0ac:	add	x0, x0, #0xff3
  40f0b0:	add	x2, x2, #0x31
  40f0b4:	mov	w1, #0x4c5                 	// #1221
  40f0b8:	bl	404ac4 <feof@plt+0x20f4>
  40f0bc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f0c0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f0c4:	add	x0, x0, #0xff3
  40f0c8:	add	x2, x2, #0x31
  40f0cc:	mov	w1, #0x4ca                 	// #1226
  40f0d0:	bl	404ac4 <feof@plt+0x20f4>
  40f0d4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f0d8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f0dc:	add	x0, x0, #0xff3
  40f0e0:	add	x2, x2, #0x31
  40f0e4:	mov	w1, #0x4d5                 	// #1237
  40f0e8:	bl	404ac4 <feof@plt+0x20f4>
  40f0ec:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f0f0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f0f4:	add	x0, x0, #0xff3
  40f0f8:	add	x2, x2, #0x31
  40f0fc:	mov	w1, #0x4cf                 	// #1231
  40f100:	bl	404ac4 <feof@plt+0x20f4>
  40f104:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f108:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f10c:	add	x0, x0, #0xff3
  40f110:	add	x2, x2, #0x31
  40f114:	mov	w1, #0x4dc                 	// #1244
  40f118:	bl	404ac4 <feof@plt+0x20f4>
  40f11c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f120:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f124:	add	x0, x0, #0xff3
  40f128:	add	x2, x2, #0x31
  40f12c:	mov	w1, #0x41e                 	// #1054
  40f130:	bl	404ac4 <feof@plt+0x20f4>
  40f134:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f138:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f13c:	add	x0, x0, #0xff3
  40f140:	add	x2, x2, #0x31
  40f144:	mov	w1, #0x54f                 	// #1359
  40f148:	bl	404ac4 <feof@plt+0x20f4>
  40f14c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f150:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f154:	add	x0, x0, #0xff3
  40f158:	add	x2, x2, #0x31
  40f15c:	mov	w1, #0x551                 	// #1361
  40f160:	bl	404ac4 <feof@plt+0x20f4>
  40f164:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f168:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f16c:	add	x0, x0, #0xff3
  40f170:	add	x2, x2, #0x31
  40f174:	mov	w1, #0x56d                 	// #1389
  40f178:	bl	404ac4 <feof@plt+0x20f4>
  40f17c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f180:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f184:	add	x0, x0, #0xff3
  40f188:	add	x2, x2, #0x31
  40f18c:	mov	w1, #0x571                 	// #1393
  40f190:	bl	404ac4 <feof@plt+0x20f4>
  40f194:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f198:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f19c:	add	x0, x0, #0xff3
  40f1a0:	add	x2, x2, #0x31
  40f1a4:	mov	w1, #0x54b                 	// #1355
  40f1a8:	bl	404ac4 <feof@plt+0x20f4>
  40f1ac:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f1b0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f1b4:	add	x0, x0, #0xff3
  40f1b8:	add	x2, x2, #0x31
  40f1bc:	mov	w1, #0x555                 	// #1365
  40f1c0:	bl	404ac4 <feof@plt+0x20f4>
  40f1c4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f1c8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f1cc:	add	x0, x0, #0xff3
  40f1d0:	add	x2, x2, #0x31
  40f1d4:	mov	w1, #0x4a4                 	// #1188
  40f1d8:	bl	404ac4 <feof@plt+0x20f4>
  40f1dc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f1e0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f1e4:	add	x0, x0, #0xff3
  40f1e8:	add	x2, x2, #0x31
  40f1ec:	mov	w1, #0x450                 	// #1104
  40f1f0:	bl	404ac4 <feof@plt+0x20f4>
  40f1f4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f1f8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f1fc:	add	x0, x0, #0xff3
  40f200:	add	x2, x2, #0x31
  40f204:	mov	w1, #0x464                 	// #1124
  40f208:	bl	404ac4 <feof@plt+0x20f4>
  40f20c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f210:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f214:	add	x0, x0, #0xff3
  40f218:	add	x2, x2, #0x31
  40f21c:	mov	w1, #0x45a                 	// #1114
  40f220:	bl	404ac4 <feof@plt+0x20f4>
  40f224:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f228:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f22c:	add	x0, x0, #0xff3
  40f230:	add	x2, x2, #0x31
  40f234:	mov	w1, #0x45e                 	// #1118
  40f238:	bl	404ac4 <feof@plt+0x20f4>
  40f23c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f240:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f244:	add	x0, x0, #0xff3
  40f248:	add	x2, x2, #0x31
  40f24c:	mov	w1, #0x466                 	// #1126
  40f250:	bl	404ac4 <feof@plt+0x20f4>
  40f254:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f258:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f25c:	add	x0, x0, #0xff3
  40f260:	add	x2, x2, #0x31
  40f264:	mov	w1, #0x467                 	// #1127
  40f268:	bl	404ac4 <feof@plt+0x20f4>
  40f26c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f270:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f274:	add	x0, x0, #0xff3
  40f278:	add	x2, x2, #0x31
  40f27c:	mov	w1, #0x480                 	// #1152
  40f280:	bl	404ac4 <feof@plt+0x20f4>
  40f284:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f288:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f28c:	add	x0, x0, #0xff3
  40f290:	add	x2, x2, #0x31
  40f294:	mov	w1, #0x492                 	// #1170
  40f298:	bl	404ac4 <feof@plt+0x20f4>
  40f29c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f2a0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f2a4:	add	x0, x0, #0xff3
  40f2a8:	add	x2, x2, #0x31
  40f2ac:	mov	w1, #0x47c                 	// #1148
  40f2b0:	bl	404ac4 <feof@plt+0x20f4>
  40f2b4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f2b8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f2bc:	add	x0, x0, #0xff3
  40f2c0:	add	x2, x2, #0x31
  40f2c4:	mov	w1, #0x489                 	// #1161
  40f2c8:	bl	404ac4 <feof@plt+0x20f4>
  40f2cc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f2d0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f2d4:	add	x0, x0, #0xff3
  40f2d8:	add	x2, x2, #0x31
  40f2dc:	mov	w1, #0x48a                 	// #1162
  40f2e0:	bl	404ac4 <feof@plt+0x20f4>
  40f2e4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f2e8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f2ec:	add	x0, x0, #0xff3
  40f2f0:	add	x2, x2, #0x31
  40f2f4:	mov	w1, #0x48b                 	// #1163
  40f2f8:	bl	404ac4 <feof@plt+0x20f4>
  40f2fc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f300:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f304:	add	x0, x0, #0xff3
  40f308:	add	x2, x2, #0x31
  40f30c:	mov	w1, #0x496                 	// #1174
  40f310:	bl	404ac4 <feof@plt+0x20f4>
  40f314:	stp	x29, x30, [sp, #-48]!
  40f318:	str	x21, [sp, #16]
  40f31c:	stp	x20, x19, [sp, #32]
  40f320:	mov	x29, sp
  40f324:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40f328:	ldr	x20, [x8, #1256]
  40f32c:	mov	x21, x0
  40f330:	mov	w19, w1
  40f334:	mov	x0, x20
  40f338:	bl	402420 <strlen@plt>
  40f33c:	add	x2, x20, x0
  40f340:	mov	x0, x21
  40f344:	mov	x1, x20
  40f348:	bl	40fd64 <feof@plt+0xd394>
  40f34c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  40f350:	and	w0, w19, #0x1
  40f354:	add	x1, x1, #0x209
  40f358:	mov	w2, #0x5                   	// #5
  40f35c:	bl	407b70 <feof@plt+0x51a0>
  40f360:	mov	x19, x0
  40f364:	bl	402420 <strlen@plt>
  40f368:	add	x2, x19, x0
  40f36c:	mov	x0, x21
  40f370:	mov	x1, x19
  40f374:	ldp	x20, x19, [sp, #32]
  40f378:	ldr	x21, [sp, #16]
  40f37c:	ldp	x29, x30, [sp], #48
  40f380:	b	40fd64 <feof@plt+0xd394>
  40f384:	stp	x29, x30, [sp, #-32]!
  40f388:	stp	x20, x19, [sp, #16]
  40f38c:	mov	x29, sp
  40f390:	mov	x20, x0
  40f394:	mov	x0, x1
  40f398:	mov	x19, x1
  40f39c:	bl	402420 <strlen@plt>
  40f3a0:	add	x2, x19, x0
  40f3a4:	mov	x0, x20
  40f3a8:	mov	x1, x19
  40f3ac:	ldp	x20, x19, [sp, #16]
  40f3b0:	ldp	x29, x30, [sp], #32
  40f3b4:	b	40fd64 <feof@plt+0xd394>
  40f3b8:	stp	x29, x30, [sp, #-64]!
  40f3bc:	str	x23, [sp, #16]
  40f3c0:	stp	x22, x21, [sp, #32]
  40f3c4:	stp	x20, x19, [sp, #48]
  40f3c8:	mov	x29, sp
  40f3cc:	ldr	x8, [x0, #8]
  40f3d0:	mov	x20, x2
  40f3d4:	mov	x21, x0
  40f3d8:	mov	x19, x1
  40f3dc:	ldr	w8, [x8, #200]
  40f3e0:	cbz	w8, 40f47c <feof@plt+0xcaac>
  40f3e4:	ldr	x22, [x21, #8]
  40f3e8:	sub	x23, x20, x19
  40f3ec:	sxtw	x20, w23
  40f3f0:	ldr	x21, [x22, #176]
  40f3f4:	ldp	x0, x8, [x21, #24]
  40f3f8:	sub	x8, x8, x0
  40f3fc:	cmp	x8, x20
  40f400:	b.cs	40f414 <feof@plt+0xca44>  // b.hs, b.nlast
  40f404:	mov	x0, x21
  40f408:	mov	x1, x20
  40f40c:	bl	45037c <_obstack_newchunk@@Base>
  40f410:	ldr	x0, [x21, #24]
  40f414:	mov	x1, x19
  40f418:	mov	x2, x20
  40f41c:	bl	402390 <memcpy@plt>
  40f420:	ldr	x8, [x21, #24]
  40f424:	cmp	w23, #0x1
  40f428:	add	x8, x8, x20
  40f42c:	str	x8, [x21, #24]
  40f430:	b.lt	40f468 <feof@plt+0xca98>  // b.tstop
  40f434:	and	x8, x23, #0xffffffff
  40f438:	b	40f454 <feof@plt+0xca84>
  40f43c:	ldr	w9, [x22, #200]
  40f440:	add	w9, w9, #0x1
  40f444:	subs	x8, x8, #0x1
  40f448:	add	x19, x19, #0x1
  40f44c:	str	w9, [x22, #200]
  40f450:	b.eq	40f468 <feof@plt+0xca98>  // b.none
  40f454:	ldrb	w9, [x19]
  40f458:	cmp	w9, #0xa
  40f45c:	b.ne	40f43c <feof@plt+0xca6c>  // b.any
  40f460:	mov	w9, wzr
  40f464:	b	40f444 <feof@plt+0xca74>
  40f468:	ldp	x20, x19, [sp, #48]
  40f46c:	ldp	x22, x21, [sp, #32]
  40f470:	ldr	x23, [sp, #16]
  40f474:	ldp	x29, x30, [sp], #64
  40f478:	ret
  40f47c:	mov	x0, x21
  40f480:	bl	40f8b4 <feof@plt+0xcee4>
  40f484:	ldr	w8, [x21, #40]
  40f488:	cmp	w8, #0x1
  40f48c:	b.lt	40f3e4 <feof@plt+0xca14>  // b.tstop
  40f490:	cmp	x19, x20
  40f494:	b.eq	40f3e4 <feof@plt+0xca14>  // b.none
  40f498:	ldrb	w8, [x19]
  40f49c:	cmp	w8, #0x20
  40f4a0:	b.ne	40f3e4 <feof@plt+0xca14>  // b.any
  40f4a4:	add	x19, x19, #0x1
  40f4a8:	cmp	x20, x19
  40f4ac:	b.ne	40f498 <feof@plt+0xcac8>  // b.any
  40f4b0:	mov	x19, x20
  40f4b4:	b	40f3e4 <feof@plt+0xca14>
  40f4b8:	stp	x29, x30, [sp, #-32]!
  40f4bc:	stp	x20, x19, [sp, #16]
  40f4c0:	mov	x29, sp
  40f4c4:	mov	x19, x0
  40f4c8:	and	w0, w1, #0x1
  40f4cc:	bl	407bf4 <feof@plt+0x5224>
  40f4d0:	mov	x20, x0
  40f4d4:	bl	402420 <strlen@plt>
  40f4d8:	add	x2, x20, x0
  40f4dc:	mov	x0, x19
  40f4e0:	mov	x1, x20
  40f4e4:	bl	40fd64 <feof@plt+0xd394>
  40f4e8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40f4ec:	ldr	x20, [x8, #1264]
  40f4f0:	mov	x0, x20
  40f4f4:	bl	402420 <strlen@plt>
  40f4f8:	add	x2, x20, x0
  40f4fc:	mov	x0, x19
  40f500:	mov	x1, x20
  40f504:	ldp	x20, x19, [sp, #16]
  40f508:	ldp	x29, x30, [sp], #32
  40f50c:	b	40fd64 <feof@plt+0xd394>
  40f510:	stp	x29, x30, [sp, #-64]!
  40f514:	str	x23, [sp, #16]
  40f518:	stp	x22, x21, [sp, #32]
  40f51c:	stp	x20, x19, [sp, #48]
  40f520:	mov	x29, sp
  40f524:	ldr	x22, [x0, #8]
  40f528:	ldr	x8, [x22, #176]
  40f52c:	cmp	x8, x22
  40f530:	b.ne	40f5cc <feof@plt+0xcbfc>  // b.any
  40f534:	ldr	w8, [x22, #200]
  40f538:	cbnz	w8, 40f5e4 <feof@plt+0xcc14>
  40f53c:	ldr	x19, [x22, #184]
  40f540:	ldr	x21, [x19, #8]
  40f544:	cbz	x21, 40f578 <feof@plt+0xcba8>
  40f548:	mov	x20, x0
  40f54c:	mov	w23, #0x1                   	// #1
  40f550:	mov	x0, x21
  40f554:	bl	402420 <strlen@plt>
  40f558:	add	x2, x21, x0
  40f55c:	mov	x0, x20
  40f560:	mov	x1, x21
  40f564:	bl	40fd64 <feof@plt+0xd394>
  40f568:	add	x8, x19, w23, uxtw #3
  40f56c:	ldr	x21, [x8, #8]
  40f570:	add	w23, w23, #0x1
  40f574:	cbnz	x21, 40f550 <feof@plt+0xcb80>
  40f578:	ldr	x8, [x22, #96]
  40f57c:	ldr	x9, [x19]
  40f580:	cmp	x8, x19
  40f584:	str	x9, [x22, #184]
  40f588:	b.cs	40f5b0 <feof@plt+0xcbe0>  // b.hs, b.nlast
  40f58c:	ldr	x8, [x22, #120]
  40f590:	cmp	x8, x19
  40f594:	b.ls	40f5b0 <feof@plt+0xcbe0>  // b.plast
  40f598:	stp	x19, x19, [x22, #104]
  40f59c:	ldp	x20, x19, [sp, #48]
  40f5a0:	ldp	x22, x21, [sp, #32]
  40f5a4:	ldr	x23, [sp, #16]
  40f5a8:	ldp	x29, x30, [sp], #64
  40f5ac:	ret
  40f5b0:	add	x0, x22, #0x58
  40f5b4:	mov	x1, x19
  40f5b8:	ldp	x20, x19, [sp, #48]
  40f5bc:	ldp	x22, x21, [sp, #32]
  40f5c0:	ldr	x23, [sp, #16]
  40f5c4:	ldp	x29, x30, [sp], #64
  40f5c8:	b	450504 <_obstack_free@@Base>
  40f5cc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f5d0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f5d4:	add	x0, x0, #0xff3
  40f5d8:	add	x2, x2, #0x6f
  40f5dc:	mov	w1, #0x595                 	// #1429
  40f5e0:	bl	404ac4 <feof@plt+0x20f4>
  40f5e4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  40f5e8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  40f5ec:	add	x0, x0, #0xff3
  40f5f0:	add	x2, x2, #0x6f
  40f5f4:	mov	w1, #0x596                 	// #1430
  40f5f8:	bl	404ac4 <feof@plt+0x20f4>
  40f5fc:	stp	x29, x30, [sp, #-32]!
  40f600:	stp	x20, x19, [sp, #16]
  40f604:	mov	x29, sp
  40f608:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  40f60c:	ldr	d0, [x8, #4072]
  40f610:	ldur	x20, [x0, #36]
  40f614:	mov	x19, x0
  40f618:	stur	d0, [x0, #36]
  40f61c:	bl	40da04 <feof@plt+0xb034>
  40f620:	mov	x0, x19
  40f624:	bl	40f510 <feof@plt+0xcb40>
  40f628:	stur	x20, [x19, #36]
  40f62c:	ldp	x20, x19, [sp, #16]
  40f630:	ldp	x29, x30, [sp], #32
  40f634:	ret
  40f638:	stp	x29, x30, [sp, #-48]!
  40f63c:	str	x21, [sp, #16]
  40f640:	stp	x20, x19, [sp, #32]
  40f644:	mov	x29, sp
  40f648:	ldr	x21, [x0, #8]
  40f64c:	strb	wzr, [x0, #64]
  40f650:	str	wzr, [x0, #32]
  40f654:	ldrb	w8, [x21, #332]
  40f658:	cbz	w8, 40f6ec <feof@plt+0xcd1c>
  40f65c:	ldr	x20, [x21, #176]
  40f660:	mov	x19, x0
  40f664:	ldp	x8, x9, [x20, #24]
  40f668:	cmp	x9, x8
  40f66c:	b.ne	40f680 <feof@plt+0xccb0>  // b.any
  40f670:	mov	w1, #0x1                   	// #1
  40f674:	mov	x0, x20
  40f678:	bl	45037c <_obstack_newchunk@@Base>
  40f67c:	ldr	x8, [x20, #24]
  40f680:	add	x9, x8, #0x1
  40f684:	str	x9, [x20, #24]
  40f688:	strb	wzr, [x8]
  40f68c:	ldr	x8, [x21, #176]
  40f690:	ldr	x9, [x19, #8]
  40f694:	ldr	x0, [x8, #16]
  40f698:	ldr	x1, [x9, #192]
  40f69c:	bl	402370 <fputs@plt>
  40f6a0:	ldr	x8, [x19, #8]
  40f6a4:	ldr	x0, [x8, #176]
  40f6a8:	ldp	x8, x1, [x0, #8]
  40f6ac:	cmp	x1, x8
  40f6b0:	b.ls	40f6c8 <feof@plt+0xccf8>  // b.plast
  40f6b4:	ldr	x8, [x0, #32]
  40f6b8:	cmp	x1, x8
  40f6bc:	b.cs	40f6c8 <feof@plt+0xccf8>  // b.hs, b.nlast
  40f6c0:	str	x1, [x0, #24]
  40f6c4:	b	40f6cc <feof@plt+0xccfc>
  40f6c8:	bl	450504 <_obstack_free@@Base>
  40f6cc:	ldr	x8, [x19, #8]
  40f6d0:	ldr	x21, [sp, #16]
  40f6d4:	str	wzr, [x8, #200]
  40f6d8:	ldr	x8, [x19, #8]
  40f6dc:	ldp	x20, x19, [sp, #32]
  40f6e0:	ldr	x0, [x8, #192]
  40f6e4:	ldp	x29, x30, [sp], #48
  40f6e8:	b	402760 <fflush@plt>
  40f6ec:	ldp	x20, x19, [sp, #32]
  40f6f0:	ldr	x21, [sp, #16]
  40f6f4:	ldp	x29, x30, [sp], #48
  40f6f8:	ret
  40f6fc:	stp	x29, x30, [sp, #-48]!
  40f700:	str	x21, [sp, #16]
  40f704:	stp	x20, x19, [sp, #32]
  40f708:	mov	x29, sp
  40f70c:	ldr	x21, [x0, #8]
  40f710:	strb	wzr, [x0, #64]
  40f714:	str	wzr, [x0, #32]
  40f718:	mov	x19, x0
  40f71c:	ldr	x20, [x21, #176]
  40f720:	ldp	x8, x9, [x20, #24]
  40f724:	cmp	x9, x8
  40f728:	b.ne	40f73c <feof@plt+0xcd6c>  // b.any
  40f72c:	mov	w1, #0x1                   	// #1
  40f730:	mov	x0, x20
  40f734:	bl	45037c <_obstack_newchunk@@Base>
  40f738:	ldr	x8, [x20, #24]
  40f73c:	add	x9, x8, #0x1
  40f740:	str	x9, [x20, #24]
  40f744:	strb	wzr, [x8]
  40f748:	ldr	x8, [x21, #176]
  40f74c:	ldr	x9, [x19, #8]
  40f750:	ldr	x0, [x8, #16]
  40f754:	ldr	x1, [x9, #192]
  40f758:	bl	402370 <fputs@plt>
  40f75c:	ldr	x8, [x19, #8]
  40f760:	ldr	x0, [x8, #176]
  40f764:	ldp	x8, x1, [x0, #8]
  40f768:	cmp	x1, x8
  40f76c:	b.ls	40f784 <feof@plt+0xcdb4>  // b.plast
  40f770:	ldr	x8, [x0, #32]
  40f774:	cmp	x1, x8
  40f778:	b.cs	40f784 <feof@plt+0xcdb4>  // b.hs, b.nlast
  40f77c:	str	x1, [x0, #24]
  40f780:	b	40f788 <feof@plt+0xcdb8>
  40f784:	bl	450504 <_obstack_free@@Base>
  40f788:	ldr	x8, [x19, #8]
  40f78c:	ldr	x21, [sp, #16]
  40f790:	str	wzr, [x8, #200]
  40f794:	ldr	x8, [x19, #8]
  40f798:	ldp	x20, x19, [sp, #32]
  40f79c:	ldr	x0, [x8, #192]
  40f7a0:	ldp	x29, x30, [sp], #48
  40f7a4:	b	402760 <fflush@plt>
  40f7a8:	stp	x29, x30, [sp, #-32]!
  40f7ac:	stp	x20, x19, [sp, #16]
  40f7b0:	mov	x29, sp
  40f7b4:	mov	w19, w1
  40f7b8:	mov	x20, x0
  40f7bc:	cmp	w1, #0x1
  40f7c0:	str	w1, [x0, #40]
  40f7c4:	b.lt	40f7f0 <feof@plt+0xce20>  // b.tstop
  40f7c8:	ldr	w8, [x20, #36]
  40f7cc:	cmp	w8, #0x2
  40f7d0:	b.cc	40f7f0 <feof@plt+0xce20>  // b.lo, b.ul, b.last
  40f7d4:	ldr	x0, [x20, #16]
  40f7d8:	cbz	x0, 40f7e0 <feof@plt+0xce10>
  40f7dc:	bl	402420 <strlen@plt>
  40f7e0:	sub	w8, w19, w0
  40f7e4:	add	w9, w19, #0x20
  40f7e8:	cmp	w8, #0x20
  40f7ec:	csel	w19, w9, w19, lt  // lt = tstop
  40f7f0:	str	w19, [x20, #28]
  40f7f4:	ldp	x20, x19, [sp, #16]
  40f7f8:	ldp	x29, x30, [sp], #32
  40f7fc:	ret
  40f800:	stp	x29, x30, [sp, #-48]!
  40f804:	str	x21, [sp, #16]
  40f808:	stp	x20, x19, [sp, #32]
  40f80c:	mov	x29, sp
  40f810:	mov	x19, x0
  40f814:	ldr	x0, [x0, #16]
  40f818:	mov	x20, x1
  40f81c:	bl	4024c0 <free@plt>
  40f820:	ldr	w21, [x19, #40]
  40f824:	str	x20, [x19, #16]
  40f828:	cmp	w21, #0x1
  40f82c:	b.lt	40f860 <feof@plt+0xce90>  // b.tstop
  40f830:	ldr	w8, [x19, #36]
  40f834:	cmp	w8, #0x2
  40f838:	b.cc	40f860 <feof@plt+0xce90>  // b.lo, b.ul, b.last
  40f83c:	cbz	x20, 40f84c <feof@plt+0xce7c>
  40f840:	mov	x0, x20
  40f844:	bl	402420 <strlen@plt>
  40f848:	b	40f850 <feof@plt+0xce80>
  40f84c:	mov	w0, wzr
  40f850:	sub	w8, w21, w0
  40f854:	add	w9, w21, #0x20
  40f858:	cmp	w8, #0x20
  40f85c:	csel	w21, w9, w21, lt  // lt = tstop
  40f860:	strb	wzr, [x19, #64]
  40f864:	stp	w21, wzr, [x19, #28]
  40f868:	ldp	x20, x19, [sp, #32]
  40f86c:	ldr	x21, [sp, #16]
  40f870:	ldp	x29, x30, [sp], #48
  40f874:	ret
  40f878:	ldr	x8, [x0, #16]
  40f87c:	str	xzr, [x0, #16]
  40f880:	mov	x0, x8
  40f884:	ret
  40f888:	stp	x29, x30, [sp, #-32]!
  40f88c:	str	x19, [sp, #16]
  40f890:	mov	x29, sp
  40f894:	mov	x19, x0
  40f898:	ldr	x0, [x0, #16]
  40f89c:	cbz	x0, 40f8a8 <feof@plt+0xced8>
  40f8a0:	bl	4024c0 <free@plt>
  40f8a4:	str	xzr, [x19, #16]
  40f8a8:	ldr	x19, [sp, #16]
  40f8ac:	ldp	x29, x30, [sp], #32
  40f8b0:	ret
  40f8b4:	stp	x29, x30, [sp, #-64]!
  40f8b8:	stp	x24, x23, [sp, #16]
  40f8bc:	stp	x22, x21, [sp, #32]
  40f8c0:	stp	x20, x19, [sp, #48]
  40f8c4:	mov	x29, sp
  40f8c8:	ldr	x20, [x0, #16]
  40f8cc:	cbz	x20, 40f9a4 <feof@plt+0xcfd4>
  40f8d0:	ldr	w8, [x0, #36]
  40f8d4:	mov	x19, x0
  40f8d8:	cmp	w8, #0x2
  40f8dc:	b.eq	40f910 <feof@plt+0xcf40>  // b.none
  40f8e0:	cbnz	w8, 40f9a4 <feof@plt+0xcfd4>
  40f8e4:	ldrb	w8, [x19, #64]
  40f8e8:	cbz	w8, 40f904 <feof@plt+0xcf34>
  40f8ec:	mov	x0, x19
  40f8f0:	ldp	x20, x19, [sp, #48]
  40f8f4:	ldp	x22, x21, [sp, #32]
  40f8f8:	ldp	x24, x23, [sp, #16]
  40f8fc:	ldp	x29, x30, [sp], #64
  40f900:	b	40d910 <feof@plt+0xaf40>
  40f904:	ldr	w8, [x19, #32]
  40f908:	add	w8, w8, #0x3
  40f90c:	str	w8, [x19, #32]
  40f910:	mov	x0, x20
  40f914:	bl	402420 <strlen@plt>
  40f918:	ldr	x24, [x19, #8]
  40f91c:	mov	x21, x0
  40f920:	sxtw	x23, w21
  40f924:	ldr	x22, [x24, #176]
  40f928:	ldp	x0, x8, [x22, #24]
  40f92c:	sub	x8, x8, x0
  40f930:	cmp	x8, x23
  40f934:	b.cs	40f948 <feof@plt+0xcf78>  // b.hs, b.nlast
  40f938:	mov	x0, x22
  40f93c:	mov	x1, x23
  40f940:	bl	45037c <_obstack_newchunk@@Base>
  40f944:	ldr	x0, [x22, #24]
  40f948:	mov	x1, x20
  40f94c:	mov	x2, x23
  40f950:	bl	402390 <memcpy@plt>
  40f954:	ldr	x8, [x22, #24]
  40f958:	cmp	w21, #0x1
  40f95c:	add	x8, x8, x23
  40f960:	str	x8, [x22, #24]
  40f964:	b.lt	40f99c <feof@plt+0xcfcc>  // b.tstop
  40f968:	and	x8, x21, #0xffffffff
  40f96c:	b	40f988 <feof@plt+0xcfb8>
  40f970:	ldr	w9, [x24, #200]
  40f974:	add	w9, w9, #0x1
  40f978:	subs	x8, x8, #0x1
  40f97c:	add	x20, x20, #0x1
  40f980:	str	w9, [x24, #200]
  40f984:	b.eq	40f99c <feof@plt+0xcfcc>  // b.none
  40f988:	ldrb	w9, [x20]
  40f98c:	cmp	w9, #0xa
  40f990:	b.ne	40f970 <feof@plt+0xcfa0>  // b.any
  40f994:	mov	w9, wzr
  40f998:	b	40f978 <feof@plt+0xcfa8>
  40f99c:	mov	w8, #0x1                   	// #1
  40f9a0:	strb	w8, [x19, #64]
  40f9a4:	ldp	x20, x19, [sp, #48]
  40f9a8:	ldp	x22, x21, [sp, #32]
  40f9ac:	ldp	x24, x23, [sp, #16]
  40f9b0:	ldp	x29, x30, [sp], #64
  40f9b4:	ret
  40f9b8:	stp	x29, x30, [sp, #-64]!
  40f9bc:	stp	x24, x23, [sp, #16]
  40f9c0:	stp	x22, x21, [sp, #32]
  40f9c4:	stp	x20, x19, [sp, #48]
  40f9c8:	mov	x29, sp
  40f9cc:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  40f9d0:	add	x8, x8, #0xfd8
  40f9d4:	mov	w20, w1
  40f9d8:	mov	x19, x0
  40f9dc:	str	x8, [x0]
  40f9e0:	mov	w0, #0x1                   	// #1
  40f9e4:	mov	w1, #0x150                 	// #336
  40f9e8:	mov	w23, #0x1                   	// #1
  40f9ec:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  40f9f0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  40f9f4:	ldr	x8, [x8, #1336]
  40f9f8:	movi	v0.2d, #0x0
  40f9fc:	stp	x0, xzr, [x0, #176]
  40fa00:	stp	q0, q0, [x0]
  40fa04:	str	x8, [x0, #192]
  40fa08:	mov	x8, x0
  40fa0c:	stp	q0, q0, [x0, #32]
  40fa10:	stp	q0, q0, [x0, #64]
  40fa14:	stp	q0, q0, [x0, #96]
  40fa18:	stp	q0, q0, [x0, #128]
  40fa1c:	str	q0, [x0, #160]
  40fa20:	str	q0, [x8, #200]!
  40fa24:	stur	q0, [x0, #248]
  40fa28:	stur	q0, [x0, #232]
  40fa2c:	stur	q0, [x0, #216]
  40fa30:	str	wzr, [x8, #128]
  40fa34:	stp	q0, q0, [x8, #96]
  40fa38:	stp	q0, q0, [x8, #64]
  40fa3c:	strb	w23, [x0, #332]
  40fa40:	adrp	x23, 415000 <feof@plt+0x12630>
  40fa44:	adrp	x24, 415000 <feof@plt+0x12630>
  40fa48:	add	x23, x23, #0x814
  40fa4c:	add	x24, x24, #0x840
  40fa50:	mov	x1, xzr
  40fa54:	mov	x2, xzr
  40fa58:	mov	x3, x23
  40fa5c:	mov	x4, x24
  40fa60:	mov	x21, x0
  40fa64:	add	x22, x0, #0x58
  40fa68:	bl	450220 <_obstack_begin@@Base>
  40fa6c:	mov	x0, x22
  40fa70:	mov	x1, xzr
  40fa74:	mov	x2, xzr
  40fa78:	mov	x3, x23
  40fa7c:	mov	x4, x24
  40fa80:	bl	450220 <_obstack_begin@@Base>
  40fa84:	mov	w8, #0x10000               	// #65536
  40fa88:	stp	xzr, xzr, [x19, #48]
  40fa8c:	str	w20, [x19, #40]
  40fa90:	stp	xzr, xzr, [x19, #24]
  40fa94:	stp	x21, xzr, [x19, #8]
  40fa98:	str	w20, [x19, #28]
  40fa9c:	str	w8, [x19, #64]
  40faa0:	strb	wzr, [x19, #64]
  40faa4:	str	xzr, [x19, #32]
  40faa8:	ldp	x20, x19, [sp, #48]
  40faac:	ldp	x22, x21, [sp, #32]
  40fab0:	ldp	x24, x23, [sp, #16]
  40fab4:	ldp	x29, x30, [sp], #64
  40fab8:	ret
  40fabc:	stp	x29, x30, [sp, #-32]!
  40fac0:	stp	x20, x19, [sp, #16]
  40fac4:	mov	x29, sp
  40fac8:	mov	x19, x0
  40facc:	ldr	x0, [x0, #56]
  40fad0:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  40fad4:	add	x8, x8, #0xfd8
  40fad8:	str	x8, [x19]
  40fadc:	cbz	x0, 40faec <feof@plt+0xd11c>
  40fae0:	ldr	x8, [x0]
  40fae4:	ldr	x8, [x8, #8]
  40fae8:	blr	x8
  40faec:	ldr	x20, [x19, #8]
  40faf0:	mov	x1, xzr
  40faf4:	add	x0, x20, #0x58
  40faf8:	bl	450504 <_obstack_free@@Base>
  40fafc:	mov	x0, x20
  40fb00:	mov	x1, xzr
  40fb04:	bl	450504 <_obstack_free@@Base>
  40fb08:	ldr	x0, [x19, #8]
  40fb0c:	bl	4024c0 <free@plt>
  40fb10:	ldr	x0, [x19, #16]
  40fb14:	ldp	x20, x19, [sp, #16]
  40fb18:	ldp	x29, x30, [sp], #32
  40fb1c:	b	4024c0 <free@plt>
  40fb20:	stp	x29, x30, [sp, #-32]!
  40fb24:	stp	x20, x19, [sp, #16]
  40fb28:	mov	x29, sp
  40fb2c:	mov	x19, x0
  40fb30:	ldr	x0, [x0, #56]
  40fb34:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  40fb38:	add	x8, x8, #0xfd8
  40fb3c:	str	x8, [x19]
  40fb40:	cbz	x0, 40fb50 <feof@plt+0xd180>
  40fb44:	ldr	x8, [x0]
  40fb48:	ldr	x8, [x8, #8]
  40fb4c:	blr	x8
  40fb50:	ldr	x20, [x19, #8]
  40fb54:	mov	x1, xzr
  40fb58:	add	x0, x20, #0x58
  40fb5c:	bl	450504 <_obstack_free@@Base>
  40fb60:	mov	x0, x20
  40fb64:	mov	x1, xzr
  40fb68:	bl	450504 <_obstack_free@@Base>
  40fb6c:	ldr	x0, [x19, #8]
  40fb70:	bl	4024c0 <free@plt>
  40fb74:	ldr	x0, [x19, #16]
  40fb78:	bl	4024c0 <free@plt>
  40fb7c:	mov	x0, x19
  40fb80:	ldp	x20, x19, [sp, #16]
  40fb84:	ldp	x29, x30, [sp], #32
  40fb88:	b	402670 <_ZdlPv@plt>
  40fb8c:	ldr	x8, [x0, #8]
  40fb90:	ldr	x8, [x8, #176]
  40fb94:	ldp	x8, x9, [x8, #16]
  40fb98:	sub	x10, x9, #0x1
  40fb9c:	cmp	x8, x9
  40fba0:	csel	x0, xzr, x10, eq  // eq = none
  40fba4:	ret
  40fba8:	ldr	x8, [x0, #8]
  40fbac:	ldr	w9, [x0, #28]
  40fbb0:	ldr	w8, [x8, #200]
  40fbb4:	sub	w0, w9, w8
  40fbb8:	ret
  40fbbc:	sub	sp, sp, #0x130
  40fbc0:	stp	x29, x30, [sp, #256]
  40fbc4:	str	x28, [sp, #272]
  40fbc8:	stp	x20, x19, [sp, #288]
  40fbcc:	add	x29, sp, #0x100
  40fbd0:	mov	x8, #0xffffffffffffffd0    	// #-48
  40fbd4:	mov	x9, sp
  40fbd8:	sub	x10, x29, #0x78
  40fbdc:	movk	x8, #0xff80, lsl #32
  40fbe0:	add	x11, x29, #0x30
  40fbe4:	add	x9, x9, #0x80
  40fbe8:	add	x10, x10, #0x30
  40fbec:	mov	x19, x1
  40fbf0:	mov	x20, x0
  40fbf4:	stp	x2, x3, [x29, #-120]
  40fbf8:	stp	x4, x5, [x29, #-104]
  40fbfc:	stp	x6, x7, [x29, #-88]
  40fc00:	stp	q1, q2, [sp, #16]
  40fc04:	stp	q3, q4, [sp, #48]
  40fc08:	str	q0, [sp]
  40fc0c:	stp	q5, q6, [sp, #80]
  40fc10:	str	q7, [sp, #112]
  40fc14:	stp	x9, x8, [x29, #-56]
  40fc18:	stp	x11, x10, [x29, #-72]
  40fc1c:	bl	4027c0 <__errno_location@plt>
  40fc20:	ldr	w8, [x0]
  40fc24:	sub	x9, x29, #0x48
  40fc28:	sub	x1, x29, #0x28
  40fc2c:	mov	x0, x20
  40fc30:	stur	w8, [x29, #-24]
  40fc34:	stp	x19, x9, [x29, #-40]
  40fc38:	bl	40da04 <feof@plt+0xb034>
  40fc3c:	mov	x0, x20
  40fc40:	bl	40f510 <feof@plt+0xcb40>
  40fc44:	ldp	x20, x19, [sp, #288]
  40fc48:	ldr	x28, [sp, #272]
  40fc4c:	ldp	x29, x30, [sp, #256]
  40fc50:	add	sp, sp, #0x130
  40fc54:	ret
  40fc58:	sub	sp, sp, #0x130
  40fc5c:	stp	x29, x30, [sp, #256]
  40fc60:	str	x28, [sp, #272]
  40fc64:	stp	x20, x19, [sp, #288]
  40fc68:	add	x29, sp, #0x100
  40fc6c:	mov	x8, #0xffffffffffffffd0    	// #-48
  40fc70:	mov	x9, sp
  40fc74:	sub	x10, x29, #0x78
  40fc78:	movk	x8, #0xff80, lsl #32
  40fc7c:	add	x11, x29, #0x30
  40fc80:	add	x9, x9, #0x80
  40fc84:	add	x10, x10, #0x30
  40fc88:	mov	x19, x1
  40fc8c:	mov	x20, x0
  40fc90:	stp	x2, x3, [x29, #-120]
  40fc94:	stp	x4, x5, [x29, #-104]
  40fc98:	stp	x6, x7, [x29, #-88]
  40fc9c:	stp	q1, q2, [sp, #16]
  40fca0:	stp	q3, q4, [sp, #48]
  40fca4:	str	q0, [sp]
  40fca8:	stp	q5, q6, [sp, #80]
  40fcac:	str	q7, [sp, #112]
  40fcb0:	stp	x9, x8, [x29, #-56]
  40fcb4:	stp	x11, x10, [x29, #-72]
  40fcb8:	bl	4027c0 <__errno_location@plt>
  40fcbc:	ldr	w8, [x0]
  40fcc0:	sub	x9, x29, #0x48
  40fcc4:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  40fcc8:	stp	x19, x9, [x29, #-40]
  40fccc:	stur	w8, [x29, #-24]
  40fcd0:	ldr	d0, [x10, #4072]
  40fcd4:	ldur	x19, [x20, #36]
  40fcd8:	sub	x1, x29, #0x28
  40fcdc:	mov	x0, x20
  40fce0:	stur	d0, [x20, #36]
  40fce4:	bl	40da04 <feof@plt+0xb034>
  40fce8:	mov	x0, x20
  40fcec:	bl	40f510 <feof@plt+0xcb40>
  40fcf0:	stur	x19, [x20, #36]
  40fcf4:	ldp	x20, x19, [sp, #288]
  40fcf8:	ldr	x28, [sp, #272]
  40fcfc:	ldp	x29, x30, [sp, #256]
  40fd00:	add	sp, sp, #0x130
  40fd04:	ret
  40fd08:	stp	x29, x30, [sp, #-32]!
  40fd0c:	stp	x20, x19, [sp, #16]
  40fd10:	mov	x29, sp
  40fd14:	ldr	x8, [x0, #8]
  40fd18:	mov	x19, x0
  40fd1c:	ldr	x20, [x8, #176]
  40fd20:	ldp	x8, x9, [x20, #24]
  40fd24:	cmp	x9, x8
  40fd28:	b.ne	40fd3c <feof@plt+0xd36c>  // b.any
  40fd2c:	mov	w1, #0x1                   	// #1
  40fd30:	mov	x0, x20
  40fd34:	bl	45037c <_obstack_newchunk@@Base>
  40fd38:	ldr	x8, [x20, #24]
  40fd3c:	add	x9, x8, #0x1
  40fd40:	mov	w10, #0xa                   	// #10
  40fd44:	str	x9, [x20, #24]
  40fd48:	strb	w10, [x8]
  40fd4c:	ldr	x8, [x19, #8]
  40fd50:	strb	wzr, [x19, #65]
  40fd54:	str	wzr, [x8, #200]
  40fd58:	ldp	x20, x19, [sp, #16]
  40fd5c:	ldp	x29, x30, [sp], #32
  40fd60:	ret
  40fd64:	stp	x29, x30, [sp, #-96]!
  40fd68:	stp	x28, x27, [sp, #16]
  40fd6c:	stp	x26, x25, [sp, #32]
  40fd70:	stp	x24, x23, [sp, #48]
  40fd74:	stp	x22, x21, [sp, #64]
  40fd78:	stp	x20, x19, [sp, #80]
  40fd7c:	mov	x29, sp
  40fd80:	ldr	w8, [x0, #40]
  40fd84:	mov	x19, x2
  40fd88:	mov	x20, x0
  40fd8c:	mov	x22, x1
  40fd90:	cmp	w8, #0x1
  40fd94:	b.lt	40ff88 <feof@plt+0xd5b8>  // b.tstop
  40fd98:	cmp	x22, x19
  40fd9c:	b.eq	40ff6c <feof@plt+0xd59c>  // b.none
  40fda0:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  40fda4:	ldrh	w24, [x8, #2704]
  40fda8:	adrp	x25, 461000 <_obstack_memory_used@@Base+0x10a68>
  40fdac:	add	x25, x25, #0xa50
  40fdb0:	mov	w26, #0xa                   	// #10
  40fdb4:	mov	w27, #0x20                  	// #32
  40fdb8:	b	40fde4 <feof@plt+0xd414>
  40fdbc:	add	x9, x8, #0x1
  40fdc0:	str	x9, [x22, #24]
  40fdc4:	strb	w26, [x8]
  40fdc8:	ldr	x8, [x20, #8]
  40fdcc:	add	x21, x21, #0x1
  40fdd0:	strb	wzr, [x20, #65]
  40fdd4:	str	wzr, [x8, #200]
  40fdd8:	cmp	x21, x19
  40fddc:	mov	x22, x21
  40fde0:	b.eq	40ff6c <feof@plt+0xd59c>  // b.none
  40fde4:	cmp	x22, x19
  40fde8:	b.eq	40fe14 <feof@plt+0xd444>  // b.none
  40fdec:	mov	x21, x22
  40fdf0:	ldrb	w8, [x21]
  40fdf4:	mov	w28, #0x1                   	// #1
  40fdf8:	cmp	x8, #0xa
  40fdfc:	b.eq	40fe1c <feof@plt+0xd44c>  // b.none
  40fe00:	ldrh	w8, [x25, x8, lsl #1]
  40fe04:	tbnz	w8, #0, 40fe1c <feof@plt+0xd44c>
  40fe08:	add	x21, x21, #0x1
  40fe0c:	cmp	x19, x21
  40fe10:	b.ne	40fdf0 <feof@plt+0xd420>  // b.any
  40fe14:	mov	w28, wzr
  40fe18:	mov	x21, x19
  40fe1c:	ldr	x8, [x20, #8]
  40fe20:	ldrsw	x9, [x20, #28]
  40fe24:	sub	x11, x21, x22
  40fe28:	ldrsw	x10, [x8, #200]
  40fe2c:	sub	x9, x9, x10
  40fe30:	cmp	x11, x9
  40fe34:	b.lt	40fe70 <feof@plt+0xd4a0>  // b.tstop
  40fe38:	ldr	x23, [x8, #176]
  40fe3c:	ldp	x8, x9, [x23, #24]
  40fe40:	cmp	x9, x8
  40fe44:	b.ne	40fe58 <feof@plt+0xd488>  // b.any
  40fe48:	mov	w1, #0x1                   	// #1
  40fe4c:	mov	x0, x23
  40fe50:	bl	45037c <_obstack_newchunk@@Base>
  40fe54:	ldr	x8, [x23, #24]
  40fe58:	add	x9, x8, #0x1
  40fe5c:	str	x9, [x23, #24]
  40fe60:	strb	w26, [x8]
  40fe64:	ldr	x8, [x20, #8]
  40fe68:	strb	wzr, [x20, #65]
  40fe6c:	str	wzr, [x8, #200]
  40fe70:	mov	x0, x20
  40fe74:	mov	x1, x22
  40fe78:	mov	x2, x21
  40fe7c:	bl	40f3b8 <feof@plt+0xc9e8>
  40fe80:	cbz	w28, 40ff30 <feof@plt+0xd560>
  40fe84:	ldrb	w8, [x21]
  40fe88:	ldrh	w8, [x25, x8, lsl #1]
  40fe8c:	tbz	w8, #0, 40ff30 <feof@plt+0xd560>
  40fe90:	ldr	w8, [x20, #40]
  40fe94:	cmp	w8, #0x1
  40fe98:	b.lt	40feec <feof@plt+0xd51c>  // b.tstop
  40fe9c:	ldr	x8, [x20, #8]
  40fea0:	ldr	w9, [x20, #28]
  40fea4:	ldr	w10, [x8, #200]
  40fea8:	cmp	w9, w10
  40feac:	b.gt	40feec <feof@plt+0xd51c>
  40feb0:	ldr	x22, [x8, #176]
  40feb4:	ldp	x8, x9, [x22, #24]
  40feb8:	cmp	x9, x8
  40febc:	b.ne	40fed0 <feof@plt+0xd500>  // b.any
  40fec0:	mov	w1, #0x1                   	// #1
  40fec4:	mov	x0, x22
  40fec8:	bl	45037c <_obstack_newchunk@@Base>
  40fecc:	ldr	x8, [x22, #24]
  40fed0:	add	x9, x8, #0x1
  40fed4:	str	x9, [x22, #24]
  40fed8:	strb	w26, [x8]
  40fedc:	ldr	x8, [x20, #8]
  40fee0:	strb	wzr, [x20, #65]
  40fee4:	str	wzr, [x8, #200]
  40fee8:	tbnz	w24, #6, 40ff2c <feof@plt+0xd55c>
  40feec:	ldr	x8, [x20, #8]
  40fef0:	ldr	x22, [x8, #176]
  40fef4:	ldp	x8, x9, [x22, #24]
  40fef8:	cmp	x9, x8
  40fefc:	b.ne	40ff10 <feof@plt+0xd540>  // b.any
  40ff00:	mov	w1, #0x1                   	// #1
  40ff04:	mov	x0, x22
  40ff08:	bl	45037c <_obstack_newchunk@@Base>
  40ff0c:	ldr	x8, [x22, #24]
  40ff10:	add	x9, x8, #0x1
  40ff14:	str	x9, [x22, #24]
  40ff18:	strb	w27, [x8]
  40ff1c:	ldr	x8, [x20, #8]
  40ff20:	ldr	w9, [x8, #200]
  40ff24:	add	w9, w9, #0x1
  40ff28:	str	w9, [x8, #200]
  40ff2c:	add	x21, x21, #0x1
  40ff30:	cmp	x21, x19
  40ff34:	b.eq	40ff6c <feof@plt+0xd59c>  // b.none
  40ff38:	ldrb	w8, [x21]
  40ff3c:	cmp	w8, #0xa
  40ff40:	b.ne	40fdd8 <feof@plt+0xd408>  // b.any
  40ff44:	ldr	x8, [x20, #8]
  40ff48:	ldr	x22, [x8, #176]
  40ff4c:	ldp	x8, x9, [x22, #24]
  40ff50:	cmp	x9, x8
  40ff54:	b.ne	40fdbc <feof@plt+0xd3ec>  // b.any
  40ff58:	mov	w1, #0x1                   	// #1
  40ff5c:	mov	x0, x22
  40ff60:	bl	45037c <_obstack_newchunk@@Base>
  40ff64:	ldr	x8, [x22, #24]
  40ff68:	b	40fdbc <feof@plt+0xd3ec>
  40ff6c:	ldp	x20, x19, [sp, #80]
  40ff70:	ldp	x22, x21, [sp, #64]
  40ff74:	ldp	x24, x23, [sp, #48]
  40ff78:	ldp	x26, x25, [sp, #32]
  40ff7c:	ldp	x28, x27, [sp, #16]
  40ff80:	ldp	x29, x30, [sp], #96
  40ff84:	ret
  40ff88:	mov	x0, x20
  40ff8c:	mov	x1, x22
  40ff90:	mov	x2, x19
  40ff94:	ldp	x20, x19, [sp, #80]
  40ff98:	ldp	x22, x21, [sp, #64]
  40ff9c:	ldp	x24, x23, [sp, #48]
  40ffa0:	ldp	x26, x25, [sp, #32]
  40ffa4:	ldp	x28, x27, [sp, #16]
  40ffa8:	ldp	x29, x30, [sp], #96
  40ffac:	b	40f3b8 <feof@plt+0xc9e8>
  40ffb0:	stp	x29, x30, [sp, #-32]!
  40ffb4:	stp	x20, x19, [sp, #16]
  40ffb8:	mov	x29, sp
  40ffbc:	ldr	w8, [x0, #24]
  40ffc0:	cbz	w8, 410078 <feof@plt+0xd6a8>
  40ffc4:	ldr	w8, [x0, #40]
  40ffc8:	mov	x19, x0
  40ffcc:	cmp	w8, #0x1
  40ffd0:	b.lt	410030 <feof@plt+0xd660>  // b.tstop
  40ffd4:	ldr	x8, [x19, #8]
  40ffd8:	ldr	w9, [x19, #28]
  40ffdc:	ldr	w10, [x8, #200]
  40ffe0:	cmp	w9, w10
  40ffe4:	b.gt	410030 <feof@plt+0xd660>
  40ffe8:	ldr	x20, [x8, #176]
  40ffec:	ldp	x8, x9, [x20, #24]
  40fff0:	cmp	x9, x8
  40fff4:	b.ne	410008 <feof@plt+0xd638>  // b.any
  40fff8:	mov	w1, #0x1                   	// #1
  40fffc:	mov	x0, x20
  410000:	bl	45037c <_obstack_newchunk@@Base>
  410004:	ldr	x8, [x20, #24]
  410008:	add	x9, x8, #0x1
  41000c:	mov	w10, #0xa                   	// #10
  410010:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410014:	str	x9, [x20, #24]
  410018:	strb	w10, [x8]
  41001c:	ldr	x8, [x19, #8]
  410020:	ldrb	w9, [x11, #2704]
  410024:	strb	wzr, [x19, #65]
  410028:	str	wzr, [x8, #200]
  41002c:	tbnz	w9, #6, 410074 <feof@plt+0xd6a4>
  410030:	ldr	x8, [x19, #8]
  410034:	ldr	x20, [x8, #176]
  410038:	ldp	x8, x9, [x20, #24]
  41003c:	cmp	x9, x8
  410040:	b.ne	410054 <feof@plt+0xd684>  // b.any
  410044:	mov	w1, #0x1                   	// #1
  410048:	mov	x0, x20
  41004c:	bl	45037c <_obstack_newchunk@@Base>
  410050:	ldr	x8, [x20, #24]
  410054:	add	x9, x8, #0x1
  410058:	mov	w10, #0x20                  	// #32
  41005c:	str	x9, [x20, #24]
  410060:	strb	w10, [x8]
  410064:	ldr	x8, [x19, #8]
  410068:	ldr	w9, [x8, #200]
  41006c:	add	w9, w9, #0x1
  410070:	str	w9, [x8, #200]
  410074:	str	wzr, [x19, #24]
  410078:	ldp	x20, x19, [sp, #16]
  41007c:	ldp	x29, x30, [sp], #32
  410080:	ret
  410084:	stp	x29, x30, [sp, #-32]!
  410088:	stp	x20, x19, [sp, #16]
  41008c:	mov	x29, sp
  410090:	ldr	x8, [x0, #8]
  410094:	mov	x19, x0
  410098:	ldr	x20, [x8, #176]
  41009c:	ldp	x8, x9, [x20, #24]
  4100a0:	cmp	x9, x8
  4100a4:	b.ne	4100b8 <feof@plt+0xd6e8>  // b.any
  4100a8:	mov	w1, #0x1                   	// #1
  4100ac:	mov	x0, x20
  4100b0:	bl	45037c <_obstack_newchunk@@Base>
  4100b4:	ldr	x8, [x20, #24]
  4100b8:	add	x9, x8, #0x1
  4100bc:	mov	w10, #0xa                   	// #10
  4100c0:	str	x9, [x20, #24]
  4100c4:	strb	w10, [x8]
  4100c8:	ldr	x8, [x19, #8]
  4100cc:	mov	x0, x19
  4100d0:	strb	wzr, [x19, #65]
  4100d4:	str	wzr, [x8, #200]
  4100d8:	bl	40f638 <feof@plt+0xcc68>
  4100dc:	strb	wzr, [x19, #65]
  4100e0:	ldp	x20, x19, [sp, #16]
  4100e4:	ldp	x29, x30, [sp], #32
  4100e8:	ret
  4100ec:	stp	x29, x30, [sp, #-32]!
  4100f0:	stp	x20, x19, [sp, #16]
  4100f4:	mov	x29, sp
  4100f8:	ldr	w8, [x0, #32]
  4100fc:	ldr	x9, [x0, #8]
  410100:	mov	x19, x0
  410104:	add	w8, w8, w1
  410108:	str	w8, [x0, #32]
  41010c:	ldr	x20, [x9, #176]
  410110:	ldp	x8, x9, [x20, #24]
  410114:	cmp	x9, x8
  410118:	b.ne	41012c <feof@plt+0xd75c>  // b.any
  41011c:	mov	w1, #0x1                   	// #1
  410120:	mov	x0, x20
  410124:	bl	45037c <_obstack_newchunk@@Base>
  410128:	ldr	x8, [x20, #24]
  41012c:	add	x9, x8, #0x1
  410130:	mov	w10, #0xa                   	// #10
  410134:	str	x9, [x20, #24]
  410138:	strb	w10, [x8]
  41013c:	ldr	x8, [x19, #8]
  410140:	mov	x0, x19
  410144:	strb	wzr, [x19, #65]
  410148:	str	wzr, [x8, #200]
  41014c:	bl	40d910 <feof@plt+0xaf40>
  410150:	strb	wzr, [x19, #65]
  410154:	ldp	x20, x19, [sp, #16]
  410158:	ldp	x29, x30, [sp], #32
  41015c:	ret
  410160:	stp	x29, x30, [sp, #-32]!
  410164:	stp	x20, x19, [sp, #16]
  410168:	mov	x29, sp
  41016c:	and	w1, w1, #0xff
  410170:	mov	x19, x0
  410174:	bl	40d5a0 <feof@plt+0xabd0>
  410178:	ldr	w8, [x19, #40]
  41017c:	cmp	w8, #0x1
  410180:	b.lt	4101e0 <feof@plt+0xd810>  // b.tstop
  410184:	ldr	x8, [x19, #8]
  410188:	ldr	w9, [x19, #28]
  41018c:	ldr	w10, [x8, #200]
  410190:	cmp	w9, w10
  410194:	b.gt	4101e0 <feof@plt+0xd810>
  410198:	ldr	x20, [x8, #176]
  41019c:	ldp	x8, x9, [x20, #24]
  4101a0:	cmp	x9, x8
  4101a4:	b.ne	4101b8 <feof@plt+0xd7e8>  // b.any
  4101a8:	mov	w1, #0x1                   	// #1
  4101ac:	mov	x0, x20
  4101b0:	bl	45037c <_obstack_newchunk@@Base>
  4101b4:	ldr	x8, [x20, #24]
  4101b8:	add	x9, x8, #0x1
  4101bc:	mov	w10, #0xa                   	// #10
  4101c0:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  4101c4:	str	x9, [x20, #24]
  4101c8:	strb	w10, [x8]
  4101cc:	ldr	x8, [x19, #8]
  4101d0:	ldrb	w9, [x11, #2704]
  4101d4:	strb	wzr, [x19, #65]
  4101d8:	str	wzr, [x8, #200]
  4101dc:	tbnz	w9, #6, 410224 <feof@plt+0xd854>
  4101e0:	ldr	x8, [x19, #8]
  4101e4:	ldr	x20, [x8, #176]
  4101e8:	ldp	x8, x9, [x20, #24]
  4101ec:	cmp	x9, x8
  4101f0:	b.ne	410204 <feof@plt+0xd834>  // b.any
  4101f4:	mov	w1, #0x1                   	// #1
  4101f8:	mov	x0, x20
  4101fc:	bl	45037c <_obstack_newchunk@@Base>
  410200:	ldr	x8, [x20, #24]
  410204:	add	x9, x8, #0x1
  410208:	mov	w10, #0x20                  	// #32
  41020c:	str	x9, [x20, #24]
  410210:	strb	w10, [x8]
  410214:	ldr	x8, [x19, #8]
  410218:	ldr	w9, [x8, #200]
  41021c:	add	w9, w9, #0x1
  410220:	str	w9, [x8, #200]
  410224:	ldp	x20, x19, [sp, #16]
  410228:	ldp	x29, x30, [sp], #32
  41022c:	ret
  410230:	sub	sp, sp, #0x70
  410234:	stp	x29, x30, [sp, #32]
  410238:	stp	x26, x25, [sp, #48]
  41023c:	stp	x24, x23, [sp, #64]
  410240:	stp	x22, x21, [sp, #80]
  410244:	stp	x20, x19, [sp, #96]
  410248:	add	x29, sp, #0x20
  41024c:	mov	x19, x0
  410250:	bl	402420 <strlen@plt>
  410254:	cbz	x0, 41045c <feof@plt+0xda8c>
  410258:	mov	x20, x0
  41025c:	mov	x22, xzr
  410260:	mov	w21, #0x1                   	// #1
  410264:	add	x0, x19, x22
  410268:	sub	x1, x20, x22
  41026c:	sub	x2, x29, #0x8
  410270:	bl	4104ec <feof@plt+0xdb1c>
  410274:	cbz	w0, 410464 <feof@plt+0xda94>
  410278:	ldur	w8, [x29, #-8]
  41027c:	cmp	w8, #0x20
  410280:	b.cc	410464 <feof@plt+0xda94>  // b.lo, b.ul, b.last
  410284:	sub	w8, w8, #0x7f
  410288:	cmp	w8, #0x20
  41028c:	b.ls	410464 <feof@plt+0xda94>  // b.plast
  410290:	cmp	w0, #0x2
  410294:	add	x22, x22, w0, sxtw
  410298:	cset	w8, cc  // cc = lo, ul, last
  41029c:	cmp	x20, x22
  4102a0:	and	w21, w21, w8
  4102a4:	b.hi	410264 <feof@plt+0xd894>  // b.pmore
  4102a8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4102ac:	ldrb	w8, [x8, #1800]
  4102b0:	cbnz	w8, 41045c <feof@plt+0xda8c>
  4102b4:	eor	w8, w21, #0x1
  4102b8:	cbz	w8, 41045c <feof@plt+0xda8c>
  4102bc:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4102c0:	ldr	x0, [x8, #1792]
  4102c4:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  4102c8:	cbz	x0, 4103dc <feof@plt+0xda0c>
  4102cc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4102d0:	add	x1, x1, #0x1a2
  4102d4:	bl	4024b0 <iconv_open@plt>
  4102d8:	cmn	x0, #0x1
  4102dc:	b.eq	4103dc <feof@plt+0xda0c>  // b.none
  4102e0:	mov	w23, #0x1                   	// #1
  4102e4:	mov	x22, x0
  4102e8:	mov	w25, #0x1                   	// #1
  4102ec:	bfi	x23, x20, #2, #62
  4102f0:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x25a68>
  4102f4:	b	410304 <feof@plt+0xd934>
  4102f8:	mov	w25, wzr
  4102fc:	mov	w8, #0x1                   	// #1
  410300:	cbnz	w8, 4103d0 <feof@plt+0xda00>
  410304:	ldr	x8, [x24, #1240]
  410308:	sub	x9, x23, #0x1
  41030c:	mov	x0, x23
  410310:	stur	x19, [x29, #-8]
  410314:	stp	x9, x20, [sp]
  410318:	blr	x8
  41031c:	mov	x21, x0
  410320:	str	x0, [sp, #16]
  410324:	mov	x0, x22
  410328:	mov	x1, xzr
  41032c:	mov	x2, xzr
  410330:	mov	x3, xzr
  410334:	mov	x4, xzr
  410338:	bl	4026f0 <iconv@plt>
  41033c:	cmn	x0, #0x1
  410340:	b.eq	4102f8 <feof@plt+0xd928>  // b.none
  410344:	sub	x1, x29, #0x8
  410348:	add	x2, sp, #0x8
  41034c:	add	x3, sp, #0x10
  410350:	mov	x4, sp
  410354:	mov	x0, x22
  410358:	bl	4026f0 <iconv@plt>
  41035c:	cmn	x0, #0x1
  410360:	b.eq	4103a4 <feof@plt+0xd9d4>  // b.none
  410364:	ldr	x8, [sp, #8]
  410368:	cbnz	x8, 4103a4 <feof@plt+0xd9d4>
  41036c:	cbnz	x0, 4102f8 <feof@plt+0xd928>
  410370:	add	x3, sp, #0x10
  410374:	mov	x4, sp
  410378:	mov	x0, x22
  41037c:	mov	x1, xzr
  410380:	mov	x2, xzr
  410384:	bl	4026f0 <iconv@plt>
  410388:	cmn	x0, #0x1
  41038c:	b.eq	4103a4 <feof@plt+0xd9d4>  // b.none
  410390:	ldr	x8, [sp, #16]
  410394:	strb	wzr, [x8]
  410398:	mov	w8, #0x1                   	// #1
  41039c:	cbz	w8, 410304 <feof@plt+0xd934>
  4103a0:	b	4103d0 <feof@plt+0xda00>
  4103a4:	bl	4027c0 <__errno_location@plt>
  4103a8:	ldr	w8, [x0]
  4103ac:	cmp	w8, #0x7
  4103b0:	b.ne	4102f8 <feof@plt+0xd928>  // b.any
  4103b4:	ldr	x8, [x26, #1248]
  4103b8:	mov	x0, x21
  4103bc:	lsl	x23, x23, #1
  4103c0:	blr	x8
  4103c4:	mov	w8, wzr
  4103c8:	mov	x21, xzr
  4103cc:	cbz	w8, 410304 <feof@plt+0xd934>
  4103d0:	mov	x0, x22
  4103d4:	bl	402380 <iconv_close@plt>
  4103d8:	tbnz	w25, #0, 4104cc <feof@plt+0xdafc>
  4103dc:	ldr	x8, [x24, #1240]
  4103e0:	add	x9, x20, x20, lsl #2
  4103e4:	mov	w0, #0x1                   	// #1
  4103e8:	bfi	x0, x9, #1, #63
  4103ec:	blr	x8
  4103f0:	mov	x21, x0
  4103f4:	mov	x22, x0
  4103f8:	cbz	x20, 4104c8 <feof@plt+0xdaf8>
  4103fc:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x1a68>
  410400:	mov	x25, xzr
  410404:	add	x23, x23, #0x8e
  410408:	mov	x22, x21
  41040c:	b	410430 <feof@plt+0xda60>
  410410:	ldur	w2, [x29, #-8]
  410414:	mov	x0, x22
  410418:	mov	x1, x23
  41041c:	bl	4025b0 <sprintf@plt>
  410420:	add	x22, x22, #0xa
  410424:	add	x25, x25, x26
  410428:	cmp	x20, x25
  41042c:	b.ls	4104c8 <feof@plt+0xdaf8>  // b.plast
  410430:	add	x24, x19, x25
  410434:	sub	x1, x20, x25
  410438:	sub	x2, x29, #0x8
  41043c:	mov	x0, x24
  410440:	bl	4104ec <feof@plt+0xdb1c>
  410444:	cmp	w0, #0x1
  410448:	sxtw	x26, w0
  41044c:	b.ne	410410 <feof@plt+0xda40>  // b.any
  410450:	ldrb	w8, [x24]
  410454:	strb	w8, [x22], #1
  410458:	b	410424 <feof@plt+0xda54>
  41045c:	mov	x21, x19
  410460:	b	4104cc <feof@plt+0xdafc>
  410464:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  410468:	ldr	x8, [x8, #1240]
  41046c:	mov	w0, #0x1                   	// #1
  410470:	bfi	x0, x20, #2, #62
  410474:	blr	x8
  410478:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x1a68>
  41047c:	mov	x21, x0
  410480:	add	x22, x22, #0x88
  410484:	mov	x23, x0
  410488:	b	4104a8 <feof@plt+0xdad8>
  41048c:	mov	x0, x23
  410490:	mov	x1, x22
  410494:	bl	4025b0 <sprintf@plt>
  410498:	add	x23, x23, #0x4
  41049c:	subs	x20, x20, #0x1
  4104a0:	add	x19, x19, #0x1
  4104a4:	b.eq	4104c0 <feof@plt+0xdaf0>  // b.none
  4104a8:	ldrb	w2, [x19]
  4104ac:	sub	w8, w2, #0x20
  4104b0:	cmp	w8, #0x5e
  4104b4:	b.hi	41048c <feof@plt+0xdabc>  // b.pmore
  4104b8:	strb	w2, [x23], #1
  4104bc:	b	41049c <feof@plt+0xdacc>
  4104c0:	strb	wzr, [x23]
  4104c4:	b	4104cc <feof@plt+0xdafc>
  4104c8:	strb	wzr, [x22]
  4104cc:	mov	x0, x21
  4104d0:	ldp	x20, x19, [sp, #96]
  4104d4:	ldp	x22, x21, [sp, #80]
  4104d8:	ldp	x24, x23, [sp, #64]
  4104dc:	ldp	x26, x25, [sp, #48]
  4104e0:	ldp	x29, x30, [sp, #32]
  4104e4:	add	sp, sp, #0x70
  4104e8:	ret
  4104ec:	stp	x29, x30, [sp, #-16]!
  4104f0:	mov	x29, sp
  4104f4:	cbz	x1, 41060c <feof@plt+0xdc3c>
  4104f8:	ldrb	w11, [x0]
  4104fc:	mov	x8, x0
  410500:	tbnz	w11, #7, 410510 <feof@plt+0xdb40>
  410504:	mov	w0, #0x1                   	// #1
  410508:	mov	w10, w11
  41050c:	b	4105c8 <feof@plt+0xdbf8>
  410510:	mov	x9, xzr
  410514:	mov	w10, w11
  410518:	mov	w12, w10
  41051c:	add	x9, x9, #0x1
  410520:	lsl	w10, w10, #1
  410524:	tbnz	w12, #6, 410518 <feof@plt+0xdb48>
  410528:	mov	w0, wzr
  41052c:	cmp	x9, x1
  410530:	mov	w10, #0xffffffff            	// #-1
  410534:	b.hi	4105c8 <feof@plt+0xdbf8>  // b.pmore
  410538:	sub	x12, x9, #0x2
  41053c:	cmp	x12, #0x4
  410540:	b.hi	4105c8 <feof@plt+0xdbf8>  // b.pmore
  410544:	mov	w10, #0x7                   	// #7
  410548:	mov	w14, #0xffffffff            	// #-1
  41054c:	sub	w10, w10, w9
  410550:	lsl	w10, w14, w10
  410554:	mov	x12, xzr
  410558:	sub	x13, x9, #0x1
  41055c:	bic	w10, w11, w10
  410560:	add	x11, x8, #0x1
  410564:	mov	w8, w10
  410568:	ldrb	w10, [x11, x12]
  41056c:	and	w14, w10, #0xc0
  410570:	cmp	w14, #0x80
  410574:	b.ne	4105c0 <feof@plt+0xdbf0>  // b.any
  410578:	add	x12, x12, #0x1
  41057c:	cmp	x13, x12
  410580:	bfi	w10, w8, #6, #26
  410584:	b.ne	410564 <feof@plt+0xdb94>  // b.any
  410588:	cmp	w10, #0x80
  41058c:	b.cc	4105c0 <feof@plt+0xdbf0>  // b.lo, b.ul, b.last
  410590:	cmp	x9, #0x3
  410594:	b.cc	4105a0 <feof@plt+0xdbd0>  // b.lo, b.ul, b.last
  410598:	cmp	w10, #0x800
  41059c:	b.cc	4105c0 <feof@plt+0xdbf0>  // b.lo, b.ul, b.last
  4105a0:	cmp	x9, #0x4
  4105a4:	b.cc	4105b0 <feof@plt+0xdbe0>  // b.lo, b.ul, b.last
  4105a8:	cmp	w10, #0x10, lsl #12
  4105ac:	b.cc	4105c0 <feof@plt+0xdbf0>  // b.lo, b.ul, b.last
  4105b0:	cmp	x9, #0x5
  4105b4:	b.cc	4105d4 <feof@plt+0xdc04>  // b.lo, b.ul, b.last
  4105b8:	cmp	w10, #0x200, lsl #12
  4105bc:	b.cs	4105d4 <feof@plt+0xdc04>  // b.hs, b.nlast
  4105c0:	mov	w0, wzr
  4105c4:	mov	w10, #0xffffffff            	// #-1
  4105c8:	str	w10, [x2]
  4105cc:	ldp	x29, x30, [sp], #16
  4105d0:	ret
  4105d4:	lsr	w11, w10, #26
  4105d8:	cmp	w11, #0x0
  4105dc:	and	w8, w8, #0x3ffffe0
  4105e0:	cset	w11, eq  // eq = none
  4105e4:	cmp	x9, #0x5
  4105e8:	cset	w12, hi  // hi = pmore
  4105ec:	cmp	w8, #0x360
  4105f0:	and	w8, w12, w11
  4105f4:	cset	w11, eq  // eq = none
  4105f8:	orr	w8, w8, w11
  4105fc:	cmp	w8, #0x0
  410600:	csinv	w10, w10, wzr, eq  // eq = none
  410604:	csel	w0, wzr, w9, ne  // ne = any
  410608:	b	4105c8 <feof@plt+0xdbf8>
  41060c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  410610:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  410614:	add	x0, x0, #0xff3
  410618:	add	x2, x2, #0x9c
  41061c:	mov	w1, #0x71b                 	// #1819
  410620:	bl	404ac4 <feof@plt+0x20f4>
  410624:	stp	x29, x30, [sp, #-48]!
  410628:	stp	x22, x21, [sp, #16]
  41062c:	stp	x20, x19, [sp, #32]
  410630:	mov	x29, sp
  410634:	ldrh	w8, [x1, #2]
  410638:	mov	x20, x1
  41063c:	mov	x19, x0
  410640:	cbz	w8, 4108c8 <feof@plt+0xdef8>
  410644:	ldr	w8, [x19, #40]
  410648:	cmp	w8, #0x1
  41064c:	b.lt	4106ac <feof@plt+0xdcdc>  // b.tstop
  410650:	ldr	x8, [x19, #8]
  410654:	ldr	w9, [x19, #28]
  410658:	ldr	w10, [x8, #200]
  41065c:	cmp	w9, w10
  410660:	b.gt	4106ac <feof@plt+0xdcdc>
  410664:	ldr	x21, [x8, #176]
  410668:	ldp	x8, x9, [x21, #24]
  41066c:	cmp	x9, x8
  410670:	b.ne	410684 <feof@plt+0xdcb4>  // b.any
  410674:	mov	w1, #0x1                   	// #1
  410678:	mov	x0, x21
  41067c:	bl	45037c <_obstack_newchunk@@Base>
  410680:	ldr	x8, [x21, #24]
  410684:	add	x9, x8, #0x1
  410688:	mov	w10, #0xa                   	// #10
  41068c:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410690:	str	x9, [x21, #24]
  410694:	strb	w10, [x8]
  410698:	ldr	x8, [x19, #8]
  41069c:	ldrb	w9, [x11, #2822]
  4106a0:	strb	wzr, [x19, #65]
  4106a4:	str	wzr, [x8, #200]
  4106a8:	tbnz	w9, #6, 4106f0 <feof@plt+0xdd20>
  4106ac:	ldr	x8, [x19, #8]
  4106b0:	ldr	x21, [x8, #176]
  4106b4:	ldp	x8, x9, [x21, #24]
  4106b8:	cmp	x9, x8
  4106bc:	b.ne	4106d0 <feof@plt+0xdd00>  // b.any
  4106c0:	mov	w1, #0x1                   	// #1
  4106c4:	mov	x0, x21
  4106c8:	bl	45037c <_obstack_newchunk@@Base>
  4106cc:	ldr	x8, [x21, #24]
  4106d0:	add	x9, x8, #0x1
  4106d4:	mov	w10, #0x5b                  	// #91
  4106d8:	str	x9, [x21, #24]
  4106dc:	strb	w10, [x8]
  4106e0:	ldr	x8, [x19, #8]
  4106e4:	ldr	w9, [x8, #200]
  4106e8:	add	w9, w9, #0x1
  4106ec:	str	w9, [x8, #200]
  4106f0:	ldr	x8, [x19, #8]
  4106f4:	ldrh	w2, [x20]
  4106f8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4106fc:	add	x1, x1, #0x20b
  410700:	add	x0, x8, #0xcc
  410704:	bl	4025b0 <sprintf@plt>
  410708:	ldr	x8, [x19, #8]
  41070c:	add	x21, x8, #0xcc
  410710:	mov	x0, x21
  410714:	bl	402420 <strlen@plt>
  410718:	add	x2, x21, x0
  41071c:	mov	x0, x19
  410720:	mov	x1, x21
  410724:	bl	40fd64 <feof@plt+0xd394>
  410728:	ldr	w8, [x19, #40]
  41072c:	cmp	w8, #0x1
  410730:	b.lt	410790 <feof@plt+0xddc0>  // b.tstop
  410734:	ldr	x8, [x19, #8]
  410738:	ldr	w9, [x19, #28]
  41073c:	ldr	w10, [x8, #200]
  410740:	cmp	w9, w10
  410744:	b.gt	410790 <feof@plt+0xddc0>
  410748:	ldr	x21, [x8, #176]
  41074c:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  410750:	ldrh	w22, [x10, #2728]
  410754:	ldp	x8, x9, [x21, #24]
  410758:	cmp	x9, x8
  41075c:	b.ne	410770 <feof@plt+0xdda0>  // b.any
  410760:	mov	w1, #0x1                   	// #1
  410764:	mov	x0, x21
  410768:	bl	45037c <_obstack_newchunk@@Base>
  41076c:	ldr	x8, [x21, #24]
  410770:	add	x9, x8, #0x1
  410774:	mov	w10, #0xa                   	// #10
  410778:	str	x9, [x21, #24]
  41077c:	strb	w10, [x8]
  410780:	ldr	x8, [x19, #8]
  410784:	strb	wzr, [x19, #65]
  410788:	str	wzr, [x8, #200]
  41078c:	tbnz	w22, #6, 4107d4 <feof@plt+0xde04>
  410790:	ldr	x8, [x19, #8]
  410794:	ldr	x21, [x8, #176]
  410798:	ldp	x8, x9, [x21, #24]
  41079c:	cmp	x9, x8
  4107a0:	b.ne	4107b4 <feof@plt+0xdde4>  // b.any
  4107a4:	mov	w1, #0x1                   	// #1
  4107a8:	mov	x0, x21
  4107ac:	bl	45037c <_obstack_newchunk@@Base>
  4107b0:	ldr	x8, [x21, #24]
  4107b4:	add	x9, x8, #0x1
  4107b8:	mov	w10, #0x2c                  	// #44
  4107bc:	str	x9, [x21, #24]
  4107c0:	strb	w10, [x8]
  4107c4:	ldr	x8, [x19, #8]
  4107c8:	ldr	w9, [x8, #200]
  4107cc:	add	w9, w9, #0x1
  4107d0:	str	w9, [x8, #200]
  4107d4:	ldr	x8, [x19, #8]
  4107d8:	ldrh	w2, [x20, #2]
  4107dc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4107e0:	add	x1, x1, #0x20b
  4107e4:	add	x0, x8, #0xcc
  4107e8:	bl	4025b0 <sprintf@plt>
  4107ec:	ldr	x8, [x19, #8]
  4107f0:	add	x20, x8, #0xcc
  4107f4:	mov	x0, x20
  4107f8:	bl	402420 <strlen@plt>
  4107fc:	add	x2, x20, x0
  410800:	mov	x0, x19
  410804:	mov	x1, x20
  410808:	bl	40fd64 <feof@plt+0xd394>
  41080c:	ldr	w8, [x19, #40]
  410810:	cmp	w8, #0x0
  410814:	b.le	410874 <feof@plt+0xdea4>
  410818:	ldr	x8, [x19, #8]
  41081c:	ldr	w9, [x19, #28]
  410820:	ldr	w10, [x8, #200]
  410824:	cmp	w9, w10
  410828:	b.gt	410874 <feof@plt+0xdea4>
  41082c:	ldr	x20, [x8, #176]
  410830:	ldp	x8, x9, [x20, #24]
  410834:	cmp	x9, x8
  410838:	b.ne	41084c <feof@plt+0xde7c>  // b.any
  41083c:	mov	w1, #0x1                   	// #1
  410840:	mov	x0, x20
  410844:	bl	45037c <_obstack_newchunk@@Base>
  410848:	ldr	x8, [x20, #24]
  41084c:	add	x9, x8, #0x1
  410850:	mov	w10, #0xa                   	// #10
  410854:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410858:	str	x9, [x20, #24]
  41085c:	strb	w10, [x8]
  410860:	ldr	x8, [x19, #8]
  410864:	ldrb	w9, [x11, #2826]
  410868:	strb	wzr, [x19, #65]
  41086c:	str	wzr, [x8, #200]
  410870:	tbnz	w9, #6, 4108b8 <feof@plt+0xdee8>
  410874:	ldr	x8, [x19, #8]
  410878:	ldr	x20, [x8, #176]
  41087c:	ldp	x8, x9, [x20, #24]
  410880:	cmp	x9, x8
  410884:	b.ne	410898 <feof@plt+0xdec8>  // b.any
  410888:	mov	w1, #0x1                   	// #1
  41088c:	mov	x0, x20
  410890:	bl	45037c <_obstack_newchunk@@Base>
  410894:	ldr	x8, [x20, #24]
  410898:	add	x9, x8, #0x1
  41089c:	mov	w10, #0x5d                  	// #93
  4108a0:	str	x9, [x20, #24]
  4108a4:	strb	w10, [x8]
  4108a8:	ldr	x8, [x19, #8]
  4108ac:	ldr	w9, [x8, #200]
  4108b0:	add	w9, w9, #0x1
  4108b4:	str	w9, [x8, #200]
  4108b8:	ldp	x20, x19, [sp, #32]
  4108bc:	ldp	x22, x21, [sp, #16]
  4108c0:	ldp	x29, x30, [sp], #48
  4108c4:	ret
  4108c8:	ldr	x8, [x19, #8]
  4108cc:	ldrh	w2, [x20]
  4108d0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4108d4:	add	x1, x1, #0x20b
  4108d8:	add	x0, x8, #0xcc
  4108dc:	bl	4025b0 <sprintf@plt>
  4108e0:	ldr	x8, [x19, #8]
  4108e4:	add	x20, x8, #0xcc
  4108e8:	mov	x0, x20
  4108ec:	bl	402420 <strlen@plt>
  4108f0:	add	x2, x20, x0
  4108f4:	mov	x0, x19
  4108f8:	mov	x1, x20
  4108fc:	ldp	x20, x19, [sp, #32]
  410900:	ldp	x22, x21, [sp, #16]
  410904:	ldp	x29, x30, [sp], #48
  410908:	b	40fd64 <feof@plt+0xd394>
  41090c:	stp	x29, x30, [sp, #-48]!
  410910:	stp	x22, x21, [sp, #16]
  410914:	stp	x20, x19, [sp, #32]
  410918:	mov	x29, sp
  41091c:	ldr	x8, [x1, #8]
  410920:	mov	x20, x1
  410924:	mov	x19, x0
  410928:	cbz	x8, 410bb0 <feof@plt+0xe1e0>
  41092c:	ldr	w8, [x19, #40]
  410930:	cmp	w8, #0x1
  410934:	b.lt	410994 <feof@plt+0xdfc4>  // b.tstop
  410938:	ldr	x8, [x19, #8]
  41093c:	ldr	w9, [x19, #28]
  410940:	ldr	w10, [x8, #200]
  410944:	cmp	w9, w10
  410948:	b.gt	410994 <feof@plt+0xdfc4>
  41094c:	ldr	x21, [x8, #176]
  410950:	ldp	x8, x9, [x21, #24]
  410954:	cmp	x9, x8
  410958:	b.ne	41096c <feof@plt+0xdf9c>  // b.any
  41095c:	mov	w1, #0x1                   	// #1
  410960:	mov	x0, x21
  410964:	bl	45037c <_obstack_newchunk@@Base>
  410968:	ldr	x8, [x21, #24]
  41096c:	add	x9, x8, #0x1
  410970:	mov	w10, #0xa                   	// #10
  410974:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410978:	str	x9, [x21, #24]
  41097c:	strb	w10, [x8]
  410980:	ldr	x8, [x19, #8]
  410984:	ldrb	w9, [x11, #2822]
  410988:	strb	wzr, [x19, #65]
  41098c:	str	wzr, [x8, #200]
  410990:	tbnz	w9, #6, 4109d8 <feof@plt+0xe008>
  410994:	ldr	x8, [x19, #8]
  410998:	ldr	x21, [x8, #176]
  41099c:	ldp	x8, x9, [x21, #24]
  4109a0:	cmp	x9, x8
  4109a4:	b.ne	4109b8 <feof@plt+0xdfe8>  // b.any
  4109a8:	mov	w1, #0x1                   	// #1
  4109ac:	mov	x0, x21
  4109b0:	bl	45037c <_obstack_newchunk@@Base>
  4109b4:	ldr	x8, [x21, #24]
  4109b8:	add	x9, x8, #0x1
  4109bc:	mov	w10, #0x5b                  	// #91
  4109c0:	str	x9, [x21, #24]
  4109c4:	strb	w10, [x8]
  4109c8:	ldr	x8, [x19, #8]
  4109cc:	ldr	w9, [x8, #200]
  4109d0:	add	w9, w9, #0x1
  4109d4:	str	w9, [x8, #200]
  4109d8:	ldr	x8, [x19, #8]
  4109dc:	ldr	x2, [x20]
  4109e0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4109e4:	add	x1, x1, #0x20b
  4109e8:	add	x0, x8, #0xcc
  4109ec:	bl	4025b0 <sprintf@plt>
  4109f0:	ldr	x8, [x19, #8]
  4109f4:	add	x21, x8, #0xcc
  4109f8:	mov	x0, x21
  4109fc:	bl	402420 <strlen@plt>
  410a00:	add	x2, x21, x0
  410a04:	mov	x0, x19
  410a08:	mov	x1, x21
  410a0c:	bl	40fd64 <feof@plt+0xd394>
  410a10:	ldr	w8, [x19, #40]
  410a14:	cmp	w8, #0x1
  410a18:	b.lt	410a78 <feof@plt+0xe0a8>  // b.tstop
  410a1c:	ldr	x8, [x19, #8]
  410a20:	ldr	w9, [x19, #28]
  410a24:	ldr	w10, [x8, #200]
  410a28:	cmp	w9, w10
  410a2c:	b.gt	410a78 <feof@plt+0xe0a8>
  410a30:	ldr	x21, [x8, #176]
  410a34:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  410a38:	ldrh	w22, [x10, #2728]
  410a3c:	ldp	x8, x9, [x21, #24]
  410a40:	cmp	x9, x8
  410a44:	b.ne	410a58 <feof@plt+0xe088>  // b.any
  410a48:	mov	w1, #0x1                   	// #1
  410a4c:	mov	x0, x21
  410a50:	bl	45037c <_obstack_newchunk@@Base>
  410a54:	ldr	x8, [x21, #24]
  410a58:	add	x9, x8, #0x1
  410a5c:	mov	w10, #0xa                   	// #10
  410a60:	str	x9, [x21, #24]
  410a64:	strb	w10, [x8]
  410a68:	ldr	x8, [x19, #8]
  410a6c:	strb	wzr, [x19, #65]
  410a70:	str	wzr, [x8, #200]
  410a74:	tbnz	w22, #6, 410abc <feof@plt+0xe0ec>
  410a78:	ldr	x8, [x19, #8]
  410a7c:	ldr	x21, [x8, #176]
  410a80:	ldp	x8, x9, [x21, #24]
  410a84:	cmp	x9, x8
  410a88:	b.ne	410a9c <feof@plt+0xe0cc>  // b.any
  410a8c:	mov	w1, #0x1                   	// #1
  410a90:	mov	x0, x21
  410a94:	bl	45037c <_obstack_newchunk@@Base>
  410a98:	ldr	x8, [x21, #24]
  410a9c:	add	x9, x8, #0x1
  410aa0:	mov	w10, #0x2c                  	// #44
  410aa4:	str	x9, [x21, #24]
  410aa8:	strb	w10, [x8]
  410aac:	ldr	x8, [x19, #8]
  410ab0:	ldr	w9, [x8, #200]
  410ab4:	add	w9, w9, #0x1
  410ab8:	str	w9, [x8, #200]
  410abc:	ldr	x8, [x19, #8]
  410ac0:	ldr	x2, [x20, #8]
  410ac4:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  410ac8:	add	x1, x1, #0x20b
  410acc:	add	x0, x8, #0xcc
  410ad0:	bl	4025b0 <sprintf@plt>
  410ad4:	ldr	x8, [x19, #8]
  410ad8:	add	x20, x8, #0xcc
  410adc:	mov	x0, x20
  410ae0:	bl	402420 <strlen@plt>
  410ae4:	add	x2, x20, x0
  410ae8:	mov	x0, x19
  410aec:	mov	x1, x20
  410af0:	bl	40fd64 <feof@plt+0xd394>
  410af4:	ldr	w8, [x19, #40]
  410af8:	cmp	w8, #0x0
  410afc:	b.le	410b5c <feof@plt+0xe18c>
  410b00:	ldr	x8, [x19, #8]
  410b04:	ldr	w9, [x19, #28]
  410b08:	ldr	w10, [x8, #200]
  410b0c:	cmp	w9, w10
  410b10:	b.gt	410b5c <feof@plt+0xe18c>
  410b14:	ldr	x20, [x8, #176]
  410b18:	ldp	x8, x9, [x20, #24]
  410b1c:	cmp	x9, x8
  410b20:	b.ne	410b34 <feof@plt+0xe164>  // b.any
  410b24:	mov	w1, #0x1                   	// #1
  410b28:	mov	x0, x20
  410b2c:	bl	45037c <_obstack_newchunk@@Base>
  410b30:	ldr	x8, [x20, #24]
  410b34:	add	x9, x8, #0x1
  410b38:	mov	w10, #0xa                   	// #10
  410b3c:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410b40:	str	x9, [x20, #24]
  410b44:	strb	w10, [x8]
  410b48:	ldr	x8, [x19, #8]
  410b4c:	ldrb	w9, [x11, #2826]
  410b50:	strb	wzr, [x19, #65]
  410b54:	str	wzr, [x8, #200]
  410b58:	tbnz	w9, #6, 410ba0 <feof@plt+0xe1d0>
  410b5c:	ldr	x8, [x19, #8]
  410b60:	ldr	x20, [x8, #176]
  410b64:	ldp	x8, x9, [x20, #24]
  410b68:	cmp	x9, x8
  410b6c:	b.ne	410b80 <feof@plt+0xe1b0>  // b.any
  410b70:	mov	w1, #0x1                   	// #1
  410b74:	mov	x0, x20
  410b78:	bl	45037c <_obstack_newchunk@@Base>
  410b7c:	ldr	x8, [x20, #24]
  410b80:	add	x9, x8, #0x1
  410b84:	mov	w10, #0x5d                  	// #93
  410b88:	str	x9, [x20, #24]
  410b8c:	strb	w10, [x8]
  410b90:	ldr	x8, [x19, #8]
  410b94:	ldr	w9, [x8, #200]
  410b98:	add	w9, w9, #0x1
  410b9c:	str	w9, [x8, #200]
  410ba0:	ldp	x20, x19, [sp, #32]
  410ba4:	ldp	x22, x21, [sp, #16]
  410ba8:	ldp	x29, x30, [sp], #48
  410bac:	ret
  410bb0:	ldr	x8, [x19, #8]
  410bb4:	ldr	x2, [x20]
  410bb8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  410bbc:	add	x1, x1, #0x20b
  410bc0:	add	x0, x8, #0xcc
  410bc4:	bl	4025b0 <sprintf@plt>
  410bc8:	ldr	x8, [x19, #8]
  410bcc:	add	x20, x8, #0xcc
  410bd0:	mov	x0, x20
  410bd4:	bl	402420 <strlen@plt>
  410bd8:	add	x2, x20, x0
  410bdc:	mov	x0, x19
  410be0:	mov	x1, x20
  410be4:	ldp	x20, x19, [sp, #32]
  410be8:	ldp	x22, x21, [sp, #16]
  410bec:	ldp	x29, x30, [sp], #48
  410bf0:	b	40fd64 <feof@plt+0xd394>
  410bf4:	stp	x29, x30, [sp, #-48]!
  410bf8:	stp	x22, x21, [sp, #16]
  410bfc:	stp	x20, x19, [sp, #32]
  410c00:	mov	x29, sp
  410c04:	ldr	x8, [x1, #8]
  410c08:	mov	x20, x1
  410c0c:	mov	x19, x0
  410c10:	cbz	x8, 410e98 <feof@plt+0xe4c8>
  410c14:	ldr	w8, [x19, #40]
  410c18:	cmp	w8, #0x1
  410c1c:	b.lt	410c7c <feof@plt+0xe2ac>  // b.tstop
  410c20:	ldr	x8, [x19, #8]
  410c24:	ldr	w9, [x19, #28]
  410c28:	ldr	w10, [x8, #200]
  410c2c:	cmp	w9, w10
  410c30:	b.gt	410c7c <feof@plt+0xe2ac>
  410c34:	ldr	x21, [x8, #176]
  410c38:	ldp	x8, x9, [x21, #24]
  410c3c:	cmp	x9, x8
  410c40:	b.ne	410c54 <feof@plt+0xe284>  // b.any
  410c44:	mov	w1, #0x1                   	// #1
  410c48:	mov	x0, x21
  410c4c:	bl	45037c <_obstack_newchunk@@Base>
  410c50:	ldr	x8, [x21, #24]
  410c54:	add	x9, x8, #0x1
  410c58:	mov	w10, #0xa                   	// #10
  410c5c:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410c60:	str	x9, [x21, #24]
  410c64:	strb	w10, [x8]
  410c68:	ldr	x8, [x19, #8]
  410c6c:	ldrb	w9, [x11, #2822]
  410c70:	strb	wzr, [x19, #65]
  410c74:	str	wzr, [x8, #200]
  410c78:	tbnz	w9, #6, 410cc0 <feof@plt+0xe2f0>
  410c7c:	ldr	x8, [x19, #8]
  410c80:	ldr	x21, [x8, #176]
  410c84:	ldp	x8, x9, [x21, #24]
  410c88:	cmp	x9, x8
  410c8c:	b.ne	410ca0 <feof@plt+0xe2d0>  // b.any
  410c90:	mov	w1, #0x1                   	// #1
  410c94:	mov	x0, x21
  410c98:	bl	45037c <_obstack_newchunk@@Base>
  410c9c:	ldr	x8, [x21, #24]
  410ca0:	add	x9, x8, #0x1
  410ca4:	mov	w10, #0x5b                  	// #91
  410ca8:	str	x9, [x21, #24]
  410cac:	strb	w10, [x8]
  410cb0:	ldr	x8, [x19, #8]
  410cb4:	ldr	w9, [x8, #200]
  410cb8:	add	w9, w9, #0x1
  410cbc:	str	w9, [x8, #200]
  410cc0:	ldr	x8, [x19, #8]
  410cc4:	ldr	x2, [x20]
  410cc8:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  410ccc:	add	x1, x1, #0x20b
  410cd0:	add	x0, x8, #0xcc
  410cd4:	bl	4025b0 <sprintf@plt>
  410cd8:	ldr	x8, [x19, #8]
  410cdc:	add	x21, x8, #0xcc
  410ce0:	mov	x0, x21
  410ce4:	bl	402420 <strlen@plt>
  410ce8:	add	x2, x21, x0
  410cec:	mov	x0, x19
  410cf0:	mov	x1, x21
  410cf4:	bl	40fd64 <feof@plt+0xd394>
  410cf8:	ldr	w8, [x19, #40]
  410cfc:	cmp	w8, #0x1
  410d00:	b.lt	410d60 <feof@plt+0xe390>  // b.tstop
  410d04:	ldr	x8, [x19, #8]
  410d08:	ldr	w9, [x19, #28]
  410d0c:	ldr	w10, [x8, #200]
  410d10:	cmp	w9, w10
  410d14:	b.gt	410d60 <feof@plt+0xe390>
  410d18:	ldr	x21, [x8, #176]
  410d1c:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  410d20:	ldrh	w22, [x10, #2728]
  410d24:	ldp	x8, x9, [x21, #24]
  410d28:	cmp	x9, x8
  410d2c:	b.ne	410d40 <feof@plt+0xe370>  // b.any
  410d30:	mov	w1, #0x1                   	// #1
  410d34:	mov	x0, x21
  410d38:	bl	45037c <_obstack_newchunk@@Base>
  410d3c:	ldr	x8, [x21, #24]
  410d40:	add	x9, x8, #0x1
  410d44:	mov	w10, #0xa                   	// #10
  410d48:	str	x9, [x21, #24]
  410d4c:	strb	w10, [x8]
  410d50:	ldr	x8, [x19, #8]
  410d54:	strb	wzr, [x19, #65]
  410d58:	str	wzr, [x8, #200]
  410d5c:	tbnz	w22, #6, 410da4 <feof@plt+0xe3d4>
  410d60:	ldr	x8, [x19, #8]
  410d64:	ldr	x21, [x8, #176]
  410d68:	ldp	x8, x9, [x21, #24]
  410d6c:	cmp	x9, x8
  410d70:	b.ne	410d84 <feof@plt+0xe3b4>  // b.any
  410d74:	mov	w1, #0x1                   	// #1
  410d78:	mov	x0, x21
  410d7c:	bl	45037c <_obstack_newchunk@@Base>
  410d80:	ldr	x8, [x21, #24]
  410d84:	add	x9, x8, #0x1
  410d88:	mov	w10, #0x2c                  	// #44
  410d8c:	str	x9, [x21, #24]
  410d90:	strb	w10, [x8]
  410d94:	ldr	x8, [x19, #8]
  410d98:	ldr	w9, [x8, #200]
  410d9c:	add	w9, w9, #0x1
  410da0:	str	w9, [x8, #200]
  410da4:	ldr	x8, [x19, #8]
  410da8:	ldr	x2, [x20, #8]
  410dac:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  410db0:	add	x1, x1, #0x20b
  410db4:	add	x0, x8, #0xcc
  410db8:	bl	4025b0 <sprintf@plt>
  410dbc:	ldr	x8, [x19, #8]
  410dc0:	add	x20, x8, #0xcc
  410dc4:	mov	x0, x20
  410dc8:	bl	402420 <strlen@plt>
  410dcc:	add	x2, x20, x0
  410dd0:	mov	x0, x19
  410dd4:	mov	x1, x20
  410dd8:	bl	40fd64 <feof@plt+0xd394>
  410ddc:	ldr	w8, [x19, #40]
  410de0:	cmp	w8, #0x0
  410de4:	b.le	410e44 <feof@plt+0xe474>
  410de8:	ldr	x8, [x19, #8]
  410dec:	ldr	w9, [x19, #28]
  410df0:	ldr	w10, [x8, #200]
  410df4:	cmp	w9, w10
  410df8:	b.gt	410e44 <feof@plt+0xe474>
  410dfc:	ldr	x20, [x8, #176]
  410e00:	ldp	x8, x9, [x20, #24]
  410e04:	cmp	x9, x8
  410e08:	b.ne	410e1c <feof@plt+0xe44c>  // b.any
  410e0c:	mov	w1, #0x1                   	// #1
  410e10:	mov	x0, x20
  410e14:	bl	45037c <_obstack_newchunk@@Base>
  410e18:	ldr	x8, [x20, #24]
  410e1c:	add	x9, x8, #0x1
  410e20:	mov	w10, #0xa                   	// #10
  410e24:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  410e28:	str	x9, [x20, #24]
  410e2c:	strb	w10, [x8]
  410e30:	ldr	x8, [x19, #8]
  410e34:	ldrb	w9, [x11, #2826]
  410e38:	strb	wzr, [x19, #65]
  410e3c:	str	wzr, [x8, #200]
  410e40:	tbnz	w9, #6, 410e88 <feof@plt+0xe4b8>
  410e44:	ldr	x8, [x19, #8]
  410e48:	ldr	x20, [x8, #176]
  410e4c:	ldp	x8, x9, [x20, #24]
  410e50:	cmp	x9, x8
  410e54:	b.ne	410e68 <feof@plt+0xe498>  // b.any
  410e58:	mov	w1, #0x1                   	// #1
  410e5c:	mov	x0, x20
  410e60:	bl	45037c <_obstack_newchunk@@Base>
  410e64:	ldr	x8, [x20, #24]
  410e68:	add	x9, x8, #0x1
  410e6c:	mov	w10, #0x5d                  	// #93
  410e70:	str	x9, [x20, #24]
  410e74:	strb	w10, [x8]
  410e78:	ldr	x8, [x19, #8]
  410e7c:	ldr	w9, [x8, #200]
  410e80:	add	w9, w9, #0x1
  410e84:	str	w9, [x8, #200]
  410e88:	ldp	x20, x19, [sp, #32]
  410e8c:	ldp	x22, x21, [sp, #16]
  410e90:	ldp	x29, x30, [sp], #48
  410e94:	ret
  410e98:	ldr	x8, [x19, #8]
  410e9c:	ldr	x2, [x20]
  410ea0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  410ea4:	add	x1, x1, #0x20b
  410ea8:	add	x0, x8, #0xcc
  410eac:	bl	4025b0 <sprintf@plt>
  410eb0:	ldr	x8, [x19, #8]
  410eb4:	add	x20, x8, #0xcc
  410eb8:	mov	x0, x20
  410ebc:	bl	402420 <strlen@plt>
  410ec0:	add	x2, x20, x0
  410ec4:	mov	x0, x19
  410ec8:	mov	x1, x20
  410ecc:	ldp	x20, x19, [sp, #32]
  410ed0:	ldp	x22, x21, [sp, #16]
  410ed4:	ldp	x29, x30, [sp], #48
  410ed8:	b	40fd64 <feof@plt+0xd394>
  410edc:	stp	x29, x30, [sp, #-48]!
  410ee0:	str	x21, [sp, #16]
  410ee4:	stp	x20, x19, [sp, #32]
  410ee8:	mov	x29, sp
  410eec:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0xaa68>
  410ef0:	add	x19, x19, #0xb34
  410ef4:	mov	w0, wzr
  410ef8:	mov	x1, x19
  410efc:	bl	402680 <setlocale@plt>
  410f00:	mov	w0, #0x5                   	// #5
  410f04:	mov	x1, x19
  410f08:	bl	402680 <setlocale@plt>
  410f0c:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0xba68>
  410f10:	add	x19, x19, #0xb17
  410f14:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  410f18:	add	x1, x1, #0xad
  410f1c:	mov	x0, x19
  410f20:	bl	4023f0 <bindtextdomain@plt>
  410f24:	mov	x0, x19
  410f28:	bl	4023c0 <textdomain@plt>
  410f2c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  410f30:	add	x0, x0, #0xbf
  410f34:	bl	402640 <gettext@plt>
  410f38:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  410f3c:	str	x0, [x20, #1256]
  410f40:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0xba68>
  410f44:	add	x0, x0, #0x669
  410f48:	bl	402640 <gettext@plt>
  410f4c:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  410f50:	str	x0, [x21, #1264]
  410f54:	mov	w0, #0xe                   	// #14
  410f58:	bl	4028d0 <nl_langinfo@plt>
  410f5c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  410f60:	str	x0, [x8, #1792]
  410f64:	cbz	x0, 410f9c <feof@plt+0xe5cc>
  410f68:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  410f6c:	add	x1, x1, #0xc1
  410f70:	mov	x19, x0
  410f74:	bl	402880 <strcasecmp@plt>
  410f78:	cbz	w0, 410f90 <feof@plt+0xe5c0>
  410f7c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  410f80:	add	x1, x1, #0xc7
  410f84:	mov	x0, x19
  410f88:	bl	402880 <strcasecmp@plt>
  410f8c:	cbnz	w0, 410f9c <feof@plt+0xe5cc>
  410f90:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  410f94:	mov	w9, #0x1                   	// #1
  410f98:	strb	w9, [x8, #1800]
  410f9c:	ldr	x0, [x20, #1256]
  410fa0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  410fa4:	add	x1, x1, #0xbf
  410fa8:	bl	402820 <strcmp@plt>
  410fac:	cbnz	w0, 410ff0 <feof@plt+0xe620>
  410fb0:	ldr	x0, [x21, #1264]
  410fb4:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0xba68>
  410fb8:	add	x19, x19, #0x669
  410fbc:	mov	x1, x19
  410fc0:	bl	402820 <strcmp@plt>
  410fc4:	cbnz	w0, 410ff0 <feof@plt+0xe620>
  410fc8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  410fcc:	ldrb	w8, [x8, #1800]
  410fd0:	str	x19, [x20, #1256]
  410fd4:	cbz	w8, 410ff0 <feof@plt+0xe620>
  410fd8:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x1a68>
  410fdc:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x1a68>
  410fe0:	add	x8, x8, #0xcc
  410fe4:	add	x9, x9, #0xd0
  410fe8:	str	x8, [x20, #1256]
  410fec:	str	x9, [x21, #1264]
  410ff0:	ldp	x20, x19, [sp, #32]
  410ff4:	ldr	x21, [sp, #16]
  410ff8:	ldp	x29, x30, [sp], #48
  410ffc:	ret
  411000:	stp	x29, x30, [sp, #-48]!
  411004:	str	x21, [sp, #16]
  411008:	stp	x20, x19, [sp, #32]
  41100c:	mov	x29, sp
  411010:	mov	x19, x0
  411014:	mov	x0, xzr
  411018:	mov	x1, x19
  41101c:	mov	x2, xzr
  411020:	bl	402720 <mbstowcs@plt>
  411024:	add	x2, x0, #0x1
  411028:	lsl	x8, x2, #2
  41102c:	add	x8, x8, #0xf
  411030:	and	x8, x8, #0xfffffffffffffff0
  411034:	mov	x9, sp
  411038:	sub	x21, x9, x8
  41103c:	mov	x20, x0
  411040:	mov	sp, x21
  411044:	mov	x0, x21
  411048:	mov	x1, x19
  41104c:	bl	402720 <mbstowcs@plt>
  411050:	mov	x0, x21
  411054:	mov	x1, x20
  411058:	bl	4028b0 <wcswidth@plt>
  41105c:	sxtw	x0, w0
  411060:	mov	sp, x29
  411064:	ldp	x20, x19, [sp, #32]
  411068:	ldr	x21, [sp, #16]
  41106c:	ldp	x29, x30, [sp], #48
  411070:	ret
  411074:	stp	x29, x30, [sp, #-32]!
  411078:	stp	x20, x19, [sp, #16]
  41107c:	mov	x29, sp
  411080:	bl	411000 <feof@plt+0xe630>
  411084:	mov	x19, x0
  411088:	add	x0, x0, #0x1
  41108c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  411090:	mov	w1, #0x20                  	// #32
  411094:	mov	x2, x19
  411098:	mov	x20, x0
  41109c:	bl	4024e0 <memset@plt>
  4110a0:	strb	wzr, [x20, x19]
  4110a4:	mov	x0, x20
  4110a8:	ldp	x20, x19, [sp, #16]
  4110ac:	ldp	x29, x30, [sp], #32
  4110b0:	ret
  4110b4:	sub	sp, sp, #0x40
  4110b8:	stp	x29, x30, [sp, #16]
  4110bc:	stp	x22, x21, [sp, #32]
  4110c0:	stp	x20, x19, [sp, #48]
  4110c4:	add	x29, sp, #0x10
  4110c8:	mov	w0, #0x20                  	// #32
  4110cc:	mov	x19, x3
  4110d0:	mov	x20, x2
  4110d4:	mov	x21, x1
  4110d8:	bl	4026a0 <_Znwm@plt>
  4110dc:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  4110e0:	mov	x8, #0x300000000           	// #12884901888
  4110e4:	add	x22, x22, #0x718
  4110e8:	mov	x2, x0
  4110ec:	stp	xzr, xzr, [x0]
  4110f0:	str	x8, [x0, #16]
  4110f4:	strb	wzr, [x0, #24]
  4110f8:	mov	x0, x22
  4110fc:	mov	x1, x21
  411100:	bl	411c68 <feof@plt+0xf298>
  411104:	ldr	x0, [x22, #48]
  411108:	lsr	x2, x21, #3
  41110c:	add	x1, sp, #0x8
  411110:	str	x21, [sp, #8]
  411114:	bl	412454 <feof@plt+0xfa84>
  411118:	ldr	x8, [x0]
  41111c:	cbz	x8, 411144 <feof@plt+0xe774>
  411120:	ldr	x8, [x0, #8]
  411124:	ldp	x9, x10, [x8]
  411128:	ldr	x11, [x8, #16]
  41112c:	madd	x9, x19, x20, x9
  411130:	add	x10, x10, #0x1
  411134:	cmp	x11, x9
  411138:	stp	x9, x10, [x8]
  41113c:	b.cs	411144 <feof@plt+0xe774>  // b.hs, b.nlast
  411140:	str	x9, [x8, #16]
  411144:	ldp	x9, x10, [x8, #32]
  411148:	str	x19, [x8, #48]
  41114c:	add	x9, x9, x20
  411150:	cmp	x10, x9
  411154:	str	x9, [x8, #32]
  411158:	b.cs	411160 <feof@plt+0xe790>  // b.hs, b.nlast
  41115c:	str	x9, [x8, #40]
  411160:	ldp	x20, x19, [sp, #48]
  411164:	ldp	x22, x21, [sp, #32]
  411168:	ldp	x29, x30, [sp, #16]
  41116c:	add	sp, sp, #0x40
  411170:	ret
  411174:	sub	sp, sp, #0x50
  411178:	stp	x29, x30, [sp, #16]
  41117c:	stp	x24, x23, [sp, #32]
  411180:	stp	x22, x21, [sp, #48]
  411184:	stp	x20, x19, [sp, #64]
  411188:	add	x29, sp, #0x10
  41118c:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  411190:	ldr	x0, [x24, #1864]
  411194:	lsr	x22, x1, #3
  411198:	mov	x21, x2
  41119c:	mov	x23, x1
  4111a0:	str	x1, [sp, #8]
  4111a4:	add	x1, sp, #0x8
  4111a8:	mov	w2, w22
  4111ac:	mov	w20, w4
  4111b0:	mov	x19, x3
  4111b4:	bl	412454 <feof@plt+0xfa84>
  4111b8:	ldr	x8, [x0]
  4111bc:	cbnz	x8, 4111ec <feof@plt+0xe81c>
  4111c0:	mov	w0, #0x20                  	// #32
  4111c4:	bl	4026a0 <_Znwm@plt>
  4111c8:	mov	x8, #0x300000000           	// #12884901888
  4111cc:	mov	x2, x0
  4111d0:	stp	xzr, xzr, [x0]
  4111d4:	str	x8, [x0, #16]
  4111d8:	strb	wzr, [x0, #24]
  4111dc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  4111e0:	add	x0, x0, #0x718
  4111e4:	mov	x1, x23
  4111e8:	bl	411c68 <feof@plt+0xf298>
  4111ec:	ldr	x0, [x24, #1864]
  4111f0:	add	x1, sp, #0x8
  4111f4:	mov	w2, w22
  4111f8:	str	x23, [sp, #8]
  4111fc:	bl	412454 <feof@plt+0xfa84>
  411200:	ldr	x8, [x0]
  411204:	cbz	x8, 411258 <feof@plt+0xe888>
  411208:	ldr	x22, [x0, #8]
  41120c:	ldr	x8, [x22]
  411210:	subs	x8, x8, x21
  411214:	b.cc	411280 <feof@plt+0xe8b0>  // b.lo, b.ul, b.last
  411218:	str	x8, [x22]
  41121c:	tbz	w20, #0, 41125c <feof@plt+0xe88c>
  411220:	ldr	x8, [sp, #8]
  411224:	ldr	x20, [x24, #1864]
  411228:	add	x1, sp, #0x8
  41122c:	mov	w3, wzr
  411230:	lsr	x2, x8, #3
  411234:	mov	x0, x20
  411238:	bl	412538 <feof@plt+0xfb68>
  41123c:	cbz	x0, 41125c <feof@plt+0xe88c>
  411240:	mov	w8, #0x1                   	// #1
  411244:	str	x8, [x0]
  411248:	ldr	x8, [x20, #24]
  41124c:	add	x8, x8, #0x1
  411250:	str	x8, [x20, #24]
  411254:	b	41125c <feof@plt+0xe88c>
  411258:	mov	x22, xzr
  41125c:	ldr	x8, [x22, #32]
  411260:	sub	x8, x8, x19
  411264:	str	x8, [x22, #32]
  411268:	ldp	x20, x19, [sp, #64]
  41126c:	ldp	x22, x21, [sp, #48]
  411270:	ldp	x24, x23, [sp, #32]
  411274:	ldp	x29, x30, [sp, #16]
  411278:	add	sp, sp, #0x50
  41127c:	ret
  411280:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  411284:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  411288:	add	x0, x0, #0xfb
  41128c:	add	x2, x2, #0x111
  411290:	mov	w1, #0x97                  	// #151
  411294:	bl	404ac4 <feof@plt+0x20f4>
  411298:	cmp	w0, w1
  41129c:	b.cs	4112d0 <feof@plt+0xe900>  // b.hs, b.nlast
  4112a0:	cbz	w0, 4112b4 <feof@plt+0xe8e4>
  4112a4:	cmp	w0, #0xf
  4112a8:	b.hi	4112bc <feof@plt+0xe8ec>  // b.pmore
  4112ac:	lsl	w8, w0, #1
  4112b0:	b	4112c4 <feof@plt+0xe8f4>
  4112b4:	mov	w8, #0x4                   	// #4
  4112b8:	b	4112c4 <feof@plt+0xe8f4>
  4112bc:	add	w8, w0, w0, lsl #1
  4112c0:	lsr	w8, w8, #1
  4112c4:	cmp	w8, w1
  4112c8:	csel	w0, w1, w8, cc  // cc = lo, ul, last
  4112cc:	ret
  4112d0:	stp	x29, x30, [sp, #-16]!
  4112d4:	mov	x29, sp
  4112d8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  4112dc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  4112e0:	add	x0, x0, #0xd4
  4112e4:	add	x2, x2, #0xe4
  4112e8:	mov	w1, #0xa2                  	// #162
  4112ec:	bl	404ac4 <feof@plt+0x20f4>
  4112f0:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x25a68>
  4112f4:	add	x0, x0, #0x718
  4112f8:	mov	w1, #0x3                   	// #3
  4112fc:	mov	x2, xzr
  411300:	b	4116a4 <feof@plt+0xecd4>
  411304:	stp	x29, x30, [sp, #-64]!
  411308:	str	x23, [sp, #16]
  41130c:	stp	x22, x21, [sp, #32]
  411310:	stp	x20, x19, [sp, #48]
  411314:	mov	x29, sp
  411318:	mov	x19, x0
  41131c:	mov	w0, #0x30                  	// #48
  411320:	bl	4026a0 <_Znwm@plt>
  411324:	mov	x20, x0
  411328:	stp	xzr, xzr, [x0, #24]
  41132c:	str	xzr, [x0, #16]
  411330:	strb	wzr, [x0, #44]
  411334:	mov	w0, #0xd                   	// #13
  411338:	bl	404030 <feof@plt+0x1660>
  41133c:	mov	w8, w0
  411340:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  411344:	lsl	x8, x8, #4
  411348:	add	x23, x23, #0x3e4
  41134c:	ldr	w22, [x23, x8]
  411350:	mov	w21, w0
  411354:	mov	w1, #0x10                  	// #16
  411358:	mov	x0, x22
  41135c:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  411360:	cbz	x0, 411510 <feof@plt+0xeb40>
  411364:	cbz	w22, 4113b0 <feof@plt+0xe9e0>
  411368:	cmp	w22, #0x1
  41136c:	b.ne	411378 <feof@plt+0xe9a8>  // b.any
  411370:	mov	x8, xzr
  411374:	b	41139c <feof@plt+0xe9cc>
  411378:	and	x8, x22, #0xfffffffe
  41137c:	add	x9, x0, #0x10
  411380:	mov	x10, x8
  411384:	stur	xzr, [x9, #-16]
  411388:	str	xzr, [x9], #32
  41138c:	subs	x10, x10, #0x2
  411390:	b.ne	411384 <feof@plt+0xe9b4>  // b.any
  411394:	cmp	x8, x22
  411398:	b.eq	4113b0 <feof@plt+0xe9e0>  // b.none
  41139c:	sub	x9, x22, x8
  4113a0:	add	x8, x0, x8, lsl #4
  4113a4:	subs	x9, x9, #0x1
  4113a8:	str	xzr, [x8], #16
  4113ac:	b.ne	4113a4 <feof@plt+0xe9d4>  // b.any
  4113b0:	stp	x0, x22, [x20]
  4113b4:	mov	w0, #0x30                  	// #48
  4113b8:	str	w21, [x20, #40]
  4113bc:	str	x20, [x19, #40]
  4113c0:	bl	4026a0 <_Znwm@plt>
  4113c4:	mov	x20, x0
  4113c8:	stp	xzr, xzr, [x0, #24]
  4113cc:	str	xzr, [x0, #16]
  4113d0:	strb	wzr, [x0, #44]
  4113d4:	mov	w0, #0xd                   	// #13
  4113d8:	bl	404030 <feof@plt+0x1660>
  4113dc:	mov	w8, w0
  4113e0:	lsl	x8, x8, #4
  4113e4:	ldr	w22, [x23, x8]
  4113e8:	mov	w21, w0
  4113ec:	mov	w1, #0x18                  	// #24
  4113f0:	mov	x0, x22
  4113f4:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4113f8:	cbz	x0, 411510 <feof@plt+0xeb40>
  4113fc:	cbz	w22, 411450 <feof@plt+0xea80>
  411400:	cmp	w22, #0x1
  411404:	b.ne	411410 <feof@plt+0xea40>  // b.any
  411408:	mov	x8, xzr
  41140c:	b	411438 <feof@plt+0xea68>
  411410:	and	x8, x22, #0xfffffffe
  411414:	mov	x9, x8
  411418:	mov	x10, x0
  41141c:	str	xzr, [x10]
  411420:	str	xzr, [x10, #24]
  411424:	subs	x9, x9, #0x2
  411428:	add	x10, x10, #0x30
  41142c:	b.ne	41141c <feof@plt+0xea4c>  // b.any
  411430:	cmp	x8, x22
  411434:	b.eq	411450 <feof@plt+0xea80>  // b.none
  411438:	mov	w10, #0x18                  	// #24
  41143c:	sub	x9, x22, x8
  411440:	madd	x8, x8, x10, x0
  411444:	subs	x9, x9, #0x1
  411448:	str	xzr, [x8], #24
  41144c:	b.ne	411444 <feof@plt+0xea74>  // b.any
  411450:	stp	x0, x22, [x20]
  411454:	mov	w0, #0x30                  	// #48
  411458:	str	w21, [x20, #40]
  41145c:	str	x20, [x19, #48]
  411460:	bl	4026a0 <_Znwm@plt>
  411464:	mov	x20, x0
  411468:	stp	xzr, xzr, [x0, #24]
  41146c:	str	xzr, [x0, #16]
  411470:	strb	wzr, [x0, #44]
  411474:	mov	w0, #0xd                   	// #13
  411478:	bl	404030 <feof@plt+0x1660>
  41147c:	mov	w8, w0
  411480:	lsl	x8, x8, #4
  411484:	ldr	w22, [x23, x8]
  411488:	mov	w21, w0
  41148c:	mov	w1, #0x18                  	// #24
  411490:	mov	x0, x22
  411494:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  411498:	cbz	x0, 411510 <feof@plt+0xeb40>
  41149c:	cbz	w22, 4114f0 <feof@plt+0xeb20>
  4114a0:	cmp	w22, #0x1
  4114a4:	b.ne	4114b0 <feof@plt+0xeae0>  // b.any
  4114a8:	mov	x8, xzr
  4114ac:	b	4114d8 <feof@plt+0xeb08>
  4114b0:	and	x8, x22, #0xfffffffe
  4114b4:	mov	x9, x8
  4114b8:	mov	x10, x0
  4114bc:	str	xzr, [x10]
  4114c0:	str	xzr, [x10, #24]
  4114c4:	subs	x9, x9, #0x2
  4114c8:	add	x10, x10, #0x30
  4114cc:	b.ne	4114bc <feof@plt+0xeaec>  // b.any
  4114d0:	cmp	x8, x22
  4114d4:	b.eq	4114f0 <feof@plt+0xeb20>  // b.none
  4114d8:	mov	w10, #0x18                  	// #24
  4114dc:	sub	x9, x22, x8
  4114e0:	madd	x8, x8, x10, x0
  4114e4:	subs	x9, x9, #0x1
  4114e8:	str	xzr, [x8], #24
  4114ec:	b.ne	4114e4 <feof@plt+0xeb14>  // b.any
  4114f0:	stp	x0, x22, [x20]
  4114f4:	str	w21, [x20, #40]
  4114f8:	str	x20, [x19]
  4114fc:	ldp	x20, x19, [sp, #48]
  411500:	ldp	x22, x21, [sp, #32]
  411504:	ldr	x23, [sp, #16]
  411508:	ldp	x29, x30, [sp], #64
  41150c:	ret
  411510:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  411514:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  411518:	add	x0, x0, #0x5f9
  41151c:	add	x2, x2, #0x610
  411520:	mov	w1, #0x2b5                 	// #693
  411524:	bl	404ac4 <feof@plt+0x20f4>
  411528:	stp	x29, x30, [sp, #-48]!
  41152c:	stp	x22, x21, [sp, #16]
  411530:	stp	x20, x19, [sp, #32]
  411534:	mov	x29, sp
  411538:	ldr	x20, [x0, #40]
  41153c:	mov	x19, x0
  411540:	ldr	x8, [x20, #8]
  411544:	cmp	x8, #0x1
  411548:	b.lt	41156c <feof@plt+0xeb9c>  // b.tstop
  41154c:	ldr	x21, [x20]
  411550:	add	x22, x21, x8, lsl #4
  411554:	ldr	x8, [x21]
  411558:	cmp	x8, #0x1
  41155c:	b.hi	411574 <feof@plt+0xeba4>  // b.pmore
  411560:	add	x21, x21, #0x10
  411564:	cmp	x21, x22
  411568:	b.cc	411554 <feof@plt+0xeb84>  // b.lo, b.ul, b.last
  41156c:	mov	x21, xzr
  411570:	mov	x22, xzr
  411574:	orr	x8, x21, x22
  411578:	cbnz	x8, 4115c8 <feof@plt+0xebf8>
  41157c:	cbnz	x20, 411604 <feof@plt+0xec34>
  411580:	ldr	x20, [x19, #48]
  411584:	cbnz	x20, 411658 <feof@plt+0xec88>
  411588:	ldr	x19, [x19]
  41158c:	cbz	x19, 411694 <feof@plt+0xecc4>
  411590:	ldr	x8, [x19, #8]
  411594:	mov	x9, x8
  411598:	sub	x9, x9, #0x1
  41159c:	cmp	x9, x8
  4115a0:	b.cc	411598 <feof@plt+0xebc8>  // b.lo, b.ul, b.last
  4115a4:	ldrb	w8, [x19, #44]
  4115a8:	ldr	x0, [x19]
  4115ac:	cbz	w8, 41162c <feof@plt+0xec5c>
  4115b0:	bl	40455c <feof@plt+0x1b8c>
  4115b4:	b	411630 <feof@plt+0xec60>
  4115b8:	mov	x22, xzr
  4115bc:	mov	x21, xzr
  4115c0:	orr	x8, x21, x22
  4115c4:	cbz	x8, 4115fc <feof@plt+0xec2c>
  4115c8:	ldr	x0, [x21]
  4115cc:	cbz	x0, 4115d4 <feof@plt+0xec04>
  4115d0:	bl	402670 <_ZdlPv@plt>
  4115d4:	ldr	x0, [x21, #8]
  4115d8:	cbz	x0, 4115e0 <feof@plt+0xec10>
  4115dc:	bl	402670 <_ZdlPv@plt>
  4115e0:	add	x21, x21, #0x10
  4115e4:	cmp	x21, x22
  4115e8:	b.cs	4115b8 <feof@plt+0xebe8>  // b.hs, b.nlast
  4115ec:	ldr	x8, [x21]
  4115f0:	cmp	x8, #0x1
  4115f4:	b.ls	4115e0 <feof@plt+0xec10>  // b.plast
  4115f8:	b	4115c0 <feof@plt+0xebf0>
  4115fc:	ldr	x20, [x19, #40]
  411600:	cbz	x20, 411580 <feof@plt+0xebb0>
  411604:	ldr	x8, [x20, #8]
  411608:	mov	x9, x8
  41160c:	sub	x9, x9, #0x1
  411610:	cmp	x9, x8
  411614:	b.cc	41160c <feof@plt+0xec3c>  // b.lo, b.ul, b.last
  411618:	ldrb	w8, [x20, #44]
  41161c:	ldr	x0, [x20]
  411620:	cbz	w8, 411644 <feof@plt+0xec74>
  411624:	bl	40455c <feof@plt+0x1b8c>
  411628:	b	411648 <feof@plt+0xec78>
  41162c:	bl	4024c0 <free@plt>
  411630:	mov	x0, x19
  411634:	ldp	x20, x19, [sp, #32]
  411638:	ldp	x22, x21, [sp, #16]
  41163c:	ldp	x29, x30, [sp], #48
  411640:	b	402670 <_ZdlPv@plt>
  411644:	bl	4024c0 <free@plt>
  411648:	mov	x0, x20
  41164c:	bl	402670 <_ZdlPv@plt>
  411650:	ldr	x20, [x19, #48]
  411654:	cbz	x20, 411588 <feof@plt+0xebb8>
  411658:	ldr	x8, [x20, #8]
  41165c:	mov	x9, x8
  411660:	sub	x9, x9, #0x1
  411664:	cmp	x9, x8
  411668:	b.cc	411660 <feof@plt+0xec90>  // b.lo, b.ul, b.last
  41166c:	ldrb	w8, [x20, #44]
  411670:	ldr	x0, [x20]
  411674:	cbz	w8, 411680 <feof@plt+0xecb0>
  411678:	bl	40455c <feof@plt+0x1b8c>
  41167c:	b	411684 <feof@plt+0xecb4>
  411680:	bl	4024c0 <free@plt>
  411684:	mov	x0, x20
  411688:	bl	402670 <_ZdlPv@plt>
  41168c:	ldr	x19, [x19]
  411690:	cbnz	x19, 411590 <feof@plt+0xebc0>
  411694:	ldp	x20, x19, [sp, #32]
  411698:	ldp	x22, x21, [sp, #16]
  41169c:	ldp	x29, x30, [sp], #48
  4116a0:	ret
  4116a4:	sub	sp, sp, #0xa0
  4116a8:	stp	x29, x30, [sp, #80]
  4116ac:	str	x25, [sp, #96]
  4116b0:	stp	x24, x23, [sp, #112]
  4116b4:	stp	x22, x21, [sp, #128]
  4116b8:	stp	x20, x19, [sp, #144]
  4116bc:	add	x29, sp, #0x50
  4116c0:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x25a68>
  4116c4:	mov	w20, w1
  4116c8:	ldr	x1, [x23, #1336]
  4116cc:	mov	x21, x0
  4116d0:	mov	w0, #0xa                   	// #10
  4116d4:	mov	x22, x2
  4116d8:	bl	4026d0 <fputc@plt>
  4116dc:	ldr	x8, [x21, #40]
  4116e0:	mov	w1, #0x10                  	// #16
  4116e4:	ldp	x9, x8, [x8, #16]
  4116e8:	sub	x0, x9, x8
  4116ec:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4116f0:	ldr	x9, [x21, #40]
  4116f4:	mov	x19, x0
  4116f8:	ldr	x8, [x9, #8]
  4116fc:	cmp	x8, #0x1
  411700:	b.lt	411730 <feof@plt+0xed60>  // b.tstop
  411704:	ldr	x10, [x9]
  411708:	add	x11, x10, x8, lsl #4
  41170c:	ldr	x8, [x10]
  411710:	cmp	x8, #0x1
  411714:	b.hi	41173c <feof@plt+0xed6c>  // b.pmore
  411718:	add	x10, x10, #0x10
  41171c:	mov	x9, xzr
  411720:	cmp	x10, x11
  411724:	mov	x8, xzr
  411728:	b.cc	41170c <feof@plt+0xed3c>  // b.lo, b.ul, b.last
  41172c:	b	411744 <feof@plt+0xed74>
  411730:	mov	x9, xzr
  411734:	mov	x8, xzr
  411738:	b	411744 <feof@plt+0xed74>
  41173c:	mov	x9, x10
  411740:	mov	x8, x11
  411744:	mov	w24, wzr
  411748:	orr	x10, x8, x9
  41174c:	cbz	x10, 4117c0 <feof@plt+0xedf0>
  411750:	ldr	x10, [x9]
  411754:	ldr	w10, [x10, #20]
  411758:	cmp	w10, w20
  41175c:	b.ne	411770 <feof@plt+0xeda0>  // b.any
  411760:	ldp	x10, x11, [x9]
  411764:	add	x12, x19, w24, uxtw #4
  411768:	add	w24, w24, #0x1
  41176c:	stp	x10, x11, [x12]
  411770:	add	x10, x9, #0x10
  411774:	cmp	x10, x8
  411778:	b.cs	4117a0 <feof@plt+0xedd0>  // b.hs, b.nlast
  41177c:	ldr	x9, [x10]
  411780:	cmp	x9, #0x1
  411784:	b.hi	4117ac <feof@plt+0xeddc>  // b.pmore
  411788:	add	x10, x10, #0x10
  41178c:	mov	x11, xzr
  411790:	cmp	x10, x8
  411794:	mov	x9, xzr
  411798:	b.cc	41177c <feof@plt+0xedac>  // b.lo, b.ul, b.last
  41179c:	b	4117b4 <feof@plt+0xede4>
  4117a0:	mov	x11, xzr
  4117a4:	mov	x9, xzr
  4117a8:	b	4117b4 <feof@plt+0xede4>
  4117ac:	mov	x11, x8
  4117b0:	mov	x9, x10
  4117b4:	orr	x10, x9, x11
  4117b8:	mov	x8, x11
  4117bc:	cbnz	x10, 411750 <feof@plt+0xed80>
  4117c0:	adrp	x8, 412000 <feof@plt+0xf630>
  4117c4:	add	x8, x8, #0xad4
  4117c8:	cmp	x22, #0x0
  4117cc:	mov	w1, w24
  4117d0:	csel	x3, x8, x22, eq  // eq = none
  4117d4:	mov	w2, #0x10                  	// #16
  4117d8:	mov	x0, x19
  4117dc:	bl	415868 <feof@plt+0x12e98>
  4117e0:	ldr	x8, [x21, #40]
  4117e4:	mov	w1, #0x10                  	// #16
  4117e8:	ldp	x9, x8, [x8, #16]
  4117ec:	sub	x0, x9, x8
  4117f0:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4117f4:	ldr	x9, [x21, #40]
  4117f8:	mov	x21, x0
  4117fc:	ldr	x8, [x9, #8]
  411800:	cmp	x8, #0x1
  411804:	b.lt	411834 <feof@plt+0xee64>  // b.tstop
  411808:	ldr	x10, [x9]
  41180c:	add	x11, x10, x8, lsl #4
  411810:	ldr	x8, [x10]
  411814:	cmp	x8, #0x1
  411818:	b.hi	411840 <feof@plt+0xee70>  // b.pmore
  41181c:	add	x10, x10, #0x10
  411820:	mov	x9, xzr
  411824:	cmp	x10, x11
  411828:	mov	x8, xzr
  41182c:	b.cc	411810 <feof@plt+0xee40>  // b.lo, b.ul, b.last
  411830:	b	411848 <feof@plt+0xee78>
  411834:	mov	x9, xzr
  411838:	mov	x8, xzr
  41183c:	b	411848 <feof@plt+0xee78>
  411840:	mov	x9, x10
  411844:	mov	x8, x11
  411848:	mov	w25, wzr
  41184c:	orr	x10, x8, x9
  411850:	cbz	x10, 4118c4 <feof@plt+0xeef4>
  411854:	ldr	x10, [x9]
  411858:	ldr	w10, [x10, #20]
  41185c:	cmp	w10, w20
  411860:	b.ne	411874 <feof@plt+0xeea4>  // b.any
  411864:	ldp	x10, x11, [x9]
  411868:	add	x12, x21, w25, uxtw #4
  41186c:	add	w25, w25, #0x1
  411870:	stp	x10, x11, [x12]
  411874:	add	x10, x9, #0x10
  411878:	cmp	x10, x8
  41187c:	b.cs	4118a4 <feof@plt+0xeed4>  // b.hs, b.nlast
  411880:	ldr	x9, [x10]
  411884:	cmp	x9, #0x1
  411888:	b.hi	4118b0 <feof@plt+0xeee0>  // b.pmore
  41188c:	add	x10, x10, #0x10
  411890:	mov	x11, xzr
  411894:	cmp	x10, x8
  411898:	mov	x9, xzr
  41189c:	b.cc	411880 <feof@plt+0xeeb0>  // b.lo, b.ul, b.last
  4118a0:	b	4118b8 <feof@plt+0xeee8>
  4118a4:	mov	x11, xzr
  4118a8:	mov	x9, xzr
  4118ac:	b	4118b8 <feof@plt+0xeee8>
  4118b0:	mov	x11, x8
  4118b4:	mov	x9, x10
  4118b8:	orr	x10, x9, x11
  4118bc:	mov	x8, x11
  4118c0:	cbnz	x10, 411854 <feof@plt+0xee84>
  4118c4:	mov	w22, w25
  4118c8:	adrp	x3, 412000 <feof@plt+0xf630>
  4118cc:	add	x3, x3, #0xad4
  4118d0:	mov	w2, #0x10                  	// #16
  4118d4:	mov	x0, x21
  4118d8:	mov	x1, x22
  4118dc:	bl	415868 <feof@plt+0x12e98>
  4118e0:	mov	w8, #0x1                   	// #1
  4118e4:	stp	xzr, xzr, [sp, #16]
  4118e8:	stp	xzr, xzr, [sp, #56]
  4118ec:	stp	xzr, x8, [sp, #32]
  4118f0:	str	xzr, [sp, #48]
  4118f4:	cbz	w25, 4119cc <feof@plt+0xeffc>
  4118f8:	cmp	w22, #0x2
  4118fc:	b.hi	411914 <feof@plt+0xef44>  // b.pmore
  411900:	mov	x8, xzr
  411904:	mov	x9, xzr
  411908:	movi	v0.2d, #0x0
  41190c:	movi	v1.2d, #0x0
  411910:	b	41198c <feof@plt+0xefbc>
  411914:	and	x8, x22, #0xfffffffe
  411918:	mov	x9, xzr
  41191c:	mov	x10, xzr
  411920:	add	x11, x21, #0x18
  411924:	movi	v0.2d, #0x0
  411928:	movi	v3.2d, #0x0
  41192c:	movi	v1.2d, #0x0
  411930:	mov	x12, x8
  411934:	movi	v2.2d, #0x0
  411938:	ldur	x13, [x11, #-16]
  41193c:	ldr	x14, [x11], #32
  411940:	subs	x12, x12, #0x2
  411944:	ldr	q4, [x13]
  411948:	ldr	q5, [x14]
  41194c:	ldr	x15, [x13, #16]
  411950:	ldr	x16, [x14, #16]
  411954:	add	v3.2d, v4.2d, v3.2d
  411958:	ldr	q4, [x13, #32]
  41195c:	add	v0.2d, v5.2d, v0.2d
  411960:	ldr	q5, [x14, #32]
  411964:	add	x9, x15, x9
  411968:	add	x10, x16, x10
  41196c:	add	v2.2d, v4.2d, v2.2d
  411970:	add	v1.2d, v5.2d, v1.2d
  411974:	b.ne	411938 <feof@plt+0xef68>  // b.any
  411978:	add	v0.2d, v0.2d, v3.2d
  41197c:	add	x9, x10, x9
  411980:	cmp	x8, x22
  411984:	add	v1.2d, v1.2d, v2.2d
  411988:	b.eq	4119bc <feof@plt+0xefec>  // b.none
  41198c:	sub	x10, x22, x8
  411990:	add	x8, x21, x8, lsl #4
  411994:	add	x8, x8, #0x8
  411998:	ldr	x11, [x8], #16
  41199c:	subs	x10, x10, #0x1
  4119a0:	ldr	q2, [x11]
  4119a4:	ldr	x12, [x11, #16]
  4119a8:	ldr	q3, [x11, #32]
  4119ac:	add	v0.2d, v2.2d, v0.2d
  4119b0:	add	x9, x12, x9
  4119b4:	add	v1.2d, v3.2d, v1.2d
  4119b8:	b.ne	411998 <feof@plt+0xefc8>  // b.any
  4119bc:	str	q0, [sp, #16]
  4119c0:	str	q1, [sp, #48]
  4119c4:	stp	x9, xzr, [sp, #32]
  4119c8:	str	xzr, [sp, #64]
  4119cc:	mov	x0, x21
  4119d0:	bl	4024c0 <free@plt>
  4119d4:	ldr	x1, [x23, #1336]
  4119d8:	mov	x21, #0xffffffffffffff74    	// #-140
  4119dc:	mov	w0, #0x2d                  	// #45
  4119e0:	bl	4026d0 <fputc@plt>
  4119e4:	ldr	x1, [x23, #1336]
  4119e8:	adds	x21, x21, #0x1
  4119ec:	b.cc	4119dc <feof@plt+0xf00c>  // b.lo, b.ul, b.last
  4119f0:	mov	w0, #0xa                   	// #10
  4119f4:	bl	4026d0 <fputc@plt>
  4119f8:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x1a68>
  4119fc:	add	x8, x8, #0x230
  411a00:	ldr	x20, [x8, w20, uxtw #3]
  411a04:	ldr	x0, [x23, #1336]
  411a08:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a0c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a10:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a14:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a18:	adrp	x5, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a1c:	adrp	x6, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a20:	adrp	x7, 452000 <_obstack_memory_used@@Base+0x1a68>
  411a24:	add	x21, x21, #0x167
  411a28:	add	x1, x1, #0x122
  411a2c:	add	x3, x3, #0x142
  411a30:	add	x4, x4, #0x14c
  411a34:	add	x5, x5, #0x151
  411a38:	add	x6, x6, #0x156
  411a3c:	add	x7, x7, #0x15c
  411a40:	mov	x2, x20
  411a44:	str	x21, [sp]
  411a48:	bl	402440 <fprintf@plt>
  411a4c:	ldr	x1, [x23, #1336]
  411a50:	mov	x22, #0xffffffffffffff74    	// #-140
  411a54:	mov	w0, #0x2d                  	// #45
  411a58:	bl	4026d0 <fputc@plt>
  411a5c:	ldr	x1, [x23, #1336]
  411a60:	adds	x22, x22, #0x1
  411a64:	b.cc	411a54 <feof@plt+0xf084>  // b.lo, b.ul, b.last
  411a68:	mov	w0, #0xa                   	// #10
  411a6c:	bl	4026d0 <fputc@plt>
  411a70:	subs	w8, w24, #0x1
  411a74:	b.mi	411a9c <feof@plt+0xf0cc>  // b.first
  411a78:	add	x8, x19, w8, uxtw #4
  411a7c:	add	x22, x8, #0x8
  411a80:	ldp	x1, x0, [x22, #-8]
  411a84:	add	x2, sp, #0x10
  411a88:	bl	4128dc <feof@plt+0xff0c>
  411a8c:	sub	w24, w24, #0x1
  411a90:	cmp	w24, #0x0
  411a94:	sub	x22, x22, #0x10
  411a98:	b.gt	411a80 <feof@plt+0xf0b0>
  411a9c:	ldr	x1, [x23, #1336]
  411aa0:	mov	x22, #0xffffffffffffff74    	// #-140
  411aa4:	mov	w0, #0x2d                  	// #45
  411aa8:	bl	4026d0 <fputc@plt>
  411aac:	ldr	x1, [x23, #1336]
  411ab0:	adds	x22, x22, #0x1
  411ab4:	b.cc	411aa4 <feof@plt+0xf0d4>  // b.lo, b.ul, b.last
  411ab8:	mov	w0, #0xa                   	// #10
  411abc:	bl	4026d0 <fputc@plt>
  411ac0:	ldr	x0, [x23, #1336]
  411ac4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  411ac8:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x1a68>
  411acc:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x1a68>
  411ad0:	adrp	x5, 452000 <_obstack_memory_used@@Base+0x1a68>
  411ad4:	adrp	x6, 452000 <_obstack_memory_used@@Base+0x1a68>
  411ad8:	adrp	x7, 452000 <_obstack_memory_used@@Base+0x1a68>
  411adc:	add	x1, x1, #0x122
  411ae0:	add	x3, x3, #0x142
  411ae4:	add	x4, x4, #0x14c
  411ae8:	add	x5, x5, #0x151
  411aec:	add	x6, x6, #0x156
  411af0:	add	x7, x7, #0x15c
  411af4:	mov	x2, x20
  411af8:	str	x21, [sp]
  411afc:	bl	402440 <fprintf@plt>
  411b00:	ldr	x1, [x23, #1336]
  411b04:	mov	x20, #0xffffffffffffff74    	// #-140
  411b08:	mov	w0, #0x2d                  	// #45
  411b0c:	bl	4026d0 <fputc@plt>
  411b10:	ldr	x1, [x23, #1336]
  411b14:	adds	x20, x20, #0x1
  411b18:	b.cc	411b08 <feof@plt+0xf138>  // b.lo, b.ul, b.last
  411b1c:	mov	w0, #0xa                   	// #10
  411b20:	bl	4026d0 <fputc@plt>
  411b24:	ldr	x8, [sp, #16]
  411b28:	ldr	x0, [x23, #1336]
  411b2c:	lsr	x10, x8, #11
  411b30:	cmp	x10, #0x5
  411b34:	mov	x3, x8
  411b38:	b.cc	411b54 <feof@plt+0xf184>  // b.lo, b.ul, b.last
  411b3c:	lsr	x9, x8, #21
  411b40:	cmp	x9, #0x4
  411b44:	b.hi	411b50 <feof@plt+0xf180>  // b.pmore
  411b48:	lsr	x3, x8, #10
  411b4c:	b	411b54 <feof@plt+0xf184>
  411b50:	lsr	x3, x8, #20
  411b54:	ldr	x12, [sp, #24]
  411b58:	cmp	x8, #0xa00, lsl #12
  411b5c:	mov	w8, #0x4d                  	// #77
  411b60:	mov	w9, #0x6b                  	// #107
  411b64:	csel	w11, w9, w8, cc  // cc = lo, ul, last
  411b68:	cmp	x10, #0x5
  411b6c:	mov	w10, #0x20                  	// #32
  411b70:	csel	w4, w10, w11, cc  // cc = lo, ul, last
  411b74:	lsr	x11, x12, #11
  411b78:	cmp	x11, #0x5
  411b7c:	mov	x5, x12
  411b80:	b.cc	411b9c <feof@plt+0xf1cc>  // b.lo, b.ul, b.last
  411b84:	lsr	x13, x12, #21
  411b88:	cmp	x13, #0x4
  411b8c:	b.hi	411b98 <feof@plt+0xf1c8>  // b.pmore
  411b90:	lsr	x5, x12, #10
  411b94:	b	411b9c <feof@plt+0xf1cc>
  411b98:	lsr	x5, x12, #20
  411b9c:	cmp	x12, #0xa00, lsl #12
  411ba0:	ldr	x12, [sp, #48]
  411ba4:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  411ba8:	cmp	x11, #0x5
  411bac:	csel	w6, w10, w8, cc  // cc = lo, ul, last
  411bb0:	lsr	x8, x12, #11
  411bb4:	cmp	x8, #0x5
  411bb8:	mov	x7, x12
  411bbc:	b.cc	411bd8 <feof@plt+0xf208>  // b.lo, b.ul, b.last
  411bc0:	lsr	x9, x12, #21
  411bc4:	cmp	x9, #0x4
  411bc8:	b.hi	411bd4 <feof@plt+0xf204>  // b.pmore
  411bcc:	lsr	x7, x12, #10
  411bd0:	b	411bd8 <feof@plt+0xf208>
  411bd4:	lsr	x7, x12, #20
  411bd8:	cmp	x12, #0xa00, lsl #12
  411bdc:	mov	w9, #0x4d                  	// #77
  411be0:	mov	w10, #0x6b                  	// #107
  411be4:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  411be8:	cmp	x8, #0x5
  411bec:	mov	w8, #0x20                  	// #32
  411bf0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  411bf4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  411bf8:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  411bfc:	add	x1, x1, #0x20f
  411c00:	add	x2, x2, #0x228
  411c04:	str	w8, [sp]
  411c08:	bl	402440 <fprintf@plt>
  411c0c:	ldr	x1, [x23, #1336]
  411c10:	mov	x20, #0xffffffffffffff74    	// #-140
  411c14:	mov	w0, #0x2d                  	// #45
  411c18:	bl	4026d0 <fputc@plt>
  411c1c:	ldr	x1, [x23, #1336]
  411c20:	adds	x20, x20, #0x1
  411c24:	b.cc	411c14 <feof@plt+0xf244>  // b.lo, b.ul, b.last
  411c28:	mov	w0, #0xa                   	// #10
  411c2c:	bl	4026d0 <fputc@plt>
  411c30:	mov	x0, x19
  411c34:	bl	4024c0 <free@plt>
  411c38:	ldr	x1, [x23, #1336]
  411c3c:	mov	w0, #0xa                   	// #10
  411c40:	bl	4026d0 <fputc@plt>
  411c44:	ldp	x20, x19, [sp, #144]
  411c48:	ldp	x22, x21, [sp, #128]
  411c4c:	ldp	x24, x23, [sp, #112]
  411c50:	ldr	x25, [sp, #96]
  411c54:	ldp	x29, x30, [sp, #80]
  411c58:	add	sp, sp, #0xa0
  411c5c:	ret
  411c60:	ret
  411c64:	ret
  411c68:	sub	sp, sp, #0x50
  411c6c:	stp	x29, x30, [sp, #16]
  411c70:	str	x23, [sp, #32]
  411c74:	stp	x22, x21, [sp, #48]
  411c78:	stp	x20, x19, [sp, #64]
  411c7c:	add	x29, sp, #0x10
  411c80:	stp	x2, x1, [sp]
  411c84:	ldr	x8, [x2]
  411c88:	ldr	x21, [x0, #40]
  411c8c:	mov	x20, x2
  411c90:	mov	x19, x0
  411c94:	mov	w22, #0x79b9                	// #31161
  411c98:	add	x0, x29, #0x18
  411c9c:	mov	w1, #0x8                   	// #8
  411ca0:	mov	w2, wzr
  411ca4:	movk	w22, #0x9e37, lsl #16
  411ca8:	str	x8, [x29, #24]
  411cac:	bl	44fee0 <feof@plt+0x4d510>
  411cb0:	ldr	x8, [x20, #8]
  411cb4:	mov	w2, w0
  411cb8:	add	x0, x29, #0x18
  411cbc:	mov	w1, #0x8                   	// #8
  411cc0:	str	x8, [x29, #24]
  411cc4:	bl	44fee0 <feof@plt+0x4d510>
  411cc8:	ldr	w8, [x20, #16]
  411ccc:	sub	w9, w22, w0
  411cd0:	mov	x1, sp
  411cd4:	sub	w9, w9, w8
  411cd8:	sub	w8, w8, w0
  411cdc:	eor	w9, w9, w0, lsr #13
  411ce0:	sub	w8, w8, w9
  411ce4:	sub	w10, w0, w9
  411ce8:	eor	w8, w8, w9, lsl #8
  411cec:	sub	w10, w10, w8
  411cf0:	sub	w9, w9, w8
  411cf4:	eor	w10, w10, w8, lsr #13
  411cf8:	sub	w9, w9, w10
  411cfc:	sub	w8, w8, w10
  411d00:	eor	w9, w9, w10, lsr #12
  411d04:	sub	w8, w8, w9
  411d08:	sub	w10, w10, w9
  411d0c:	eor	w8, w8, w9, lsl #16
  411d10:	sub	w10, w10, w8
  411d14:	sub	w9, w9, w8
  411d18:	eor	w10, w10, w8, lsr #5
  411d1c:	sub	w9, w9, w10
  411d20:	sub	w8, w8, w10
  411d24:	eor	w9, w9, w10, lsr #3
  411d28:	sub	w8, w8, w9
  411d2c:	eor	w8, w8, w9, lsl #10
  411d30:	sub	w9, w10, w9
  411d34:	sub	w9, w9, w8
  411d38:	eor	w2, w9, w8, lsr #15
  411d3c:	mov	x0, x21
  411d40:	bl	411ec0 <feof@plt+0xf4f0>
  411d44:	ldr	x8, [x0]
  411d48:	cbz	x8, 411d70 <feof@plt+0xf3a0>
  411d4c:	mov	x20, x0
  411d50:	ldr	x0, [sp]
  411d54:	cbz	x0, 411d5c <feof@plt+0xf38c>
  411d58:	bl	402670 <_ZdlPv@plt>
  411d5c:	ldr	x20, [x20, #8]
  411d60:	ldr	x8, [x20, #24]
  411d64:	add	x8, x8, #0x1
  411d68:	str	x8, [x20, #24]
  411d6c:	b	411e5c <feof@plt+0xf48c>
  411d70:	mov	w0, #0x38                  	// #56
  411d74:	bl	4026a0 <_Znwm@plt>
  411d78:	ldr	x23, [sp]
  411d7c:	mov	w8, #0x1                   	// #1
  411d80:	stp	xzr, xzr, [x0]
  411d84:	stp	xzr, x8, [x0, #16]
  411d88:	stp	xzr, xzr, [x0, #40]
  411d8c:	str	xzr, [x0, #32]
  411d90:	ldr	x8, [x23]
  411d94:	ldr	x21, [x19, #40]
  411d98:	mov	x20, x0
  411d9c:	add	x0, x29, #0x18
  411da0:	mov	w1, #0x8                   	// #8
  411da4:	mov	w2, wzr
  411da8:	str	x8, [x29, #24]
  411dac:	bl	44fee0 <feof@plt+0x4d510>
  411db0:	ldr	x8, [x23, #8]
  411db4:	mov	w2, w0
  411db8:	add	x0, x29, #0x18
  411dbc:	mov	w1, #0x8                   	// #8
  411dc0:	str	x8, [x29, #24]
  411dc4:	bl	44fee0 <feof@plt+0x4d510>
  411dc8:	ldr	w8, [x23, #16]
  411dcc:	sub	w9, w22, w0
  411dd0:	mov	x1, sp
  411dd4:	mov	w3, #0x1                   	// #1
  411dd8:	sub	w9, w9, w8
  411ddc:	sub	w8, w8, w0
  411de0:	eor	w9, w9, w0, lsr #13
  411de4:	sub	w8, w8, w9
  411de8:	sub	w10, w0, w9
  411dec:	eor	w8, w8, w9, lsl #8
  411df0:	sub	w10, w10, w8
  411df4:	sub	w9, w9, w8
  411df8:	eor	w10, w10, w8, lsr #13
  411dfc:	sub	w9, w9, w10
  411e00:	sub	w8, w8, w10
  411e04:	eor	w9, w9, w10, lsr #12
  411e08:	sub	w8, w8, w9
  411e0c:	sub	w10, w10, w9
  411e10:	eor	w8, w8, w9, lsl #16
  411e14:	sub	w10, w10, w8
  411e18:	sub	w9, w9, w8
  411e1c:	eor	w10, w10, w8, lsr #5
  411e20:	sub	w9, w9, w10
  411e24:	sub	w8, w8, w10
  411e28:	eor	w9, w9, w10, lsr #3
  411e2c:	sub	w8, w8, w9
  411e30:	eor	w8, w8, w9, lsl #10
  411e34:	sub	w9, w10, w9
  411e38:	sub	w9, w9, w8
  411e3c:	eor	w2, w9, w8, lsr #15
  411e40:	mov	x0, x21
  411e44:	bl	411fec <feof@plt+0xf61c>
  411e48:	ldr	x8, [x0]
  411e4c:	cbnz	x8, 411e58 <feof@plt+0xf488>
  411e50:	ldr	x8, [sp]
  411e54:	str	x8, [x0]
  411e58:	str	x20, [x0, #8]
  411e5c:	ldr	x8, [sp, #8]
  411e60:	ldr	x0, [x19, #48]
  411e64:	add	x1, sp, #0x8
  411e68:	lsr	x2, x8, #3
  411e6c:	bl	412454 <feof@plt+0xfa84>
  411e70:	ldr	x8, [x0]
  411e74:	cbnz	x8, 411ea4 <feof@plt+0xf4d4>
  411e78:	ldr	x8, [sp, #8]
  411e7c:	ldr	x0, [x19, #48]
  411e80:	add	x1, sp, #0x8
  411e84:	mov	w3, #0x1                   	// #1
  411e88:	lsr	x2, x8, #3
  411e8c:	bl	412538 <feof@plt+0xfb68>
  411e90:	ldr	x8, [x0]
  411e94:	cbnz	x8, 411ea0 <feof@plt+0xf4d0>
  411e98:	ldr	x8, [sp, #8]
  411e9c:	str	x8, [x0]
  411ea0:	stp	x20, xzr, [x0, #8]
  411ea4:	mov	x0, x20
  411ea8:	ldp	x20, x19, [sp, #64]
  411eac:	ldp	x22, x21, [sp, #48]
  411eb0:	ldr	x23, [sp, #32]
  411eb4:	ldp	x29, x30, [sp, #16]
  411eb8:	add	sp, sp, #0x50
  411ebc:	ret
  411ec0:	ldr	w8, [x0, #32]
  411ec4:	ldr	w14, [x0, #40]
  411ec8:	adrp	x15, 451000 <_obstack_memory_used@@Base+0xa68>
  411ecc:	add	x15, x15, #0x3e4
  411ed0:	add	w8, w8, #0x1
  411ed4:	add	x9, x15, x14, lsl #4
  411ed8:	str	w8, [x0, #32]
  411edc:	ldp	w16, w8, [x9]
  411ee0:	mov	w13, w2
  411ee4:	ldr	w12, [x9, #12]
  411ee8:	ldr	x9, [x0]
  411eec:	mul	x8, x8, x13
  411ef0:	lsr	x8, x8, #32
  411ef4:	sub	w10, w2, w8
  411ef8:	add	w8, w8, w10, lsr #1
  411efc:	lsr	w8, w8, w12
  411f00:	msub	w11, w8, w16, w2
  411f04:	add	x8, x9, w11, uxtw #4
  411f08:	ldr	x17, [x8]
  411f0c:	cbz	x17, 411fe4 <feof@plt+0xf614>
  411f10:	ldr	x10, [x0, #8]
  411f14:	cmp	x17, #0x1
  411f18:	b.eq	411f50 <feof@plt+0xf580>  // b.none
  411f1c:	ldr	x18, [x1]
  411f20:	ldr	x3, [x17]
  411f24:	ldr	x4, [x18]
  411f28:	cmp	x3, x4
  411f2c:	b.ne	411f50 <feof@plt+0xf580>  // b.any
  411f30:	ldr	x3, [x17, #8]
  411f34:	ldr	x4, [x18, #8]
  411f38:	cmp	x3, x4
  411f3c:	b.ne	411f50 <feof@plt+0xf580>  // b.any
  411f40:	ldr	w17, [x17, #16]
  411f44:	ldr	w18, [x18, #16]
  411f48:	cmp	w17, w18
  411f4c:	b.eq	411fe4 <feof@plt+0xf614>  // b.none
  411f50:	add	x8, x15, x14, lsl #4
  411f54:	ldr	w8, [x8, #8]
  411f58:	ldr	w15, [x0, #36]
  411f5c:	sub	w14, w16, #0x2
  411f60:	mul	x8, x8, x13
  411f64:	lsr	x8, x8, #32
  411f68:	sub	w13, w2, w8
  411f6c:	add	w8, w8, w13, lsr #1
  411f70:	lsr	w8, w8, w12
  411f74:	msub	w8, w8, w14, w2
  411f78:	add	w12, w8, #0x1
  411f7c:	add	w13, w15, #0x1
  411f80:	b	411f88 <feof@plt+0xf5b8>
  411f84:	add	w13, w13, #0x1
  411f88:	add	w8, w12, w11
  411f8c:	cmp	x10, x8
  411f90:	csel	w11, wzr, w10, hi  // hi = pmore
  411f94:	sub	w11, w8, w11
  411f98:	str	w13, [x0, #36]
  411f9c:	add	x8, x9, w11, uxtw #4
  411fa0:	ldr	x14, [x8]
  411fa4:	cmp	x14, #0x1
  411fa8:	b.eq	411f84 <feof@plt+0xf5b4>  // b.none
  411fac:	cbz	x14, 411fe4 <feof@plt+0xf614>
  411fb0:	ldr	x15, [x1]
  411fb4:	ldr	x16, [x14]
  411fb8:	ldr	x17, [x15]
  411fbc:	cmp	x16, x17
  411fc0:	b.ne	411f84 <feof@plt+0xf5b4>  // b.any
  411fc4:	ldr	x16, [x14, #8]
  411fc8:	ldr	x17, [x15, #8]
  411fcc:	cmp	x16, x17
  411fd0:	b.ne	411f84 <feof@plt+0xf5b4>  // b.any
  411fd4:	ldr	w14, [x14, #16]
  411fd8:	ldr	w15, [x15, #16]
  411fdc:	cmp	w14, w15
  411fe0:	b.ne	411f84 <feof@plt+0xf5b4>  // b.any
  411fe4:	mov	x0, x8
  411fe8:	ret
  411fec:	stp	x29, x30, [sp, #-48]!
  411ff0:	stp	x22, x21, [sp, #16]
  411ff4:	stp	x20, x19, [sp, #32]
  411ff8:	mov	x29, sp
  411ffc:	mov	w20, w3
  412000:	mov	w22, w2
  412004:	mov	x21, x1
  412008:	cmp	w3, #0x1
  41200c:	mov	x19, x0
  412010:	b.ne	41202c <feof@plt+0xf65c>  // b.any
  412014:	ldp	x8, x9, [x19, #8]
  412018:	add	x8, x8, x8, lsl #1
  41201c:	cmp	x8, x9, lsl #2
  412020:	b.hi	41202c <feof@plt+0xf65c>  // b.pmore
  412024:	mov	x0, x19
  412028:	bl	4121a8 <feof@plt+0xf7d8>
  41202c:	ldr	w8, [x19, #32]
  412030:	ldr	w9, [x19, #40]
  412034:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  412038:	add	x10, x10, #0x3e4
  41203c:	add	w8, w8, #0x1
  412040:	add	x10, x10, x9, lsl #4
  412044:	str	w8, [x19, #32]
  412048:	ldp	w12, w8, [x10]
  41204c:	mov	w13, w22
  412050:	ldr	w11, [x10, #12]
  412054:	mul	x8, x8, x13
  412058:	lsr	x9, x8, #32
  41205c:	sub	w14, w22, w9
  412060:	ldr	x8, [x19]
  412064:	add	w9, w9, w14, lsr #1
  412068:	lsr	w9, w9, w11
  41206c:	msub	w9, w9, w12, w22
  412070:	add	x0, x8, w9, uxtw #4
  412074:	ldr	x15, [x0]
  412078:	cbz	x15, 412158 <feof@plt+0xf788>
  41207c:	ldr	w14, [x10, #8]
  412080:	ldr	x10, [x19, #8]
  412084:	cmp	x15, #0x1
  412088:	b.eq	4120c4 <feof@plt+0xf6f4>  // b.none
  41208c:	ldr	x16, [x21]
  412090:	ldr	x17, [x15]
  412094:	ldr	x18, [x16]
  412098:	cmp	x17, x18
  41209c:	b.ne	4120c0 <feof@plt+0xf6f0>  // b.any
  4120a0:	ldr	x17, [x15, #8]
  4120a4:	ldr	x18, [x16, #8]
  4120a8:	cmp	x17, x18
  4120ac:	b.ne	4120c0 <feof@plt+0xf6f0>  // b.any
  4120b0:	ldr	w15, [x15, #16]
  4120b4:	ldr	w16, [x16, #16]
  4120b8:	cmp	w15, w16
  4120bc:	b.eq	412198 <feof@plt+0xf7c8>  // b.none
  4120c0:	mov	x0, xzr
  4120c4:	sub	w15, w12, #0x2
  4120c8:	mul	x12, x14, x13
  4120cc:	lsr	x12, x12, #32
  4120d0:	sub	w13, w22, w12
  4120d4:	add	w13, w12, w13, lsr #1
  4120d8:	ldr	w12, [x19, #36]
  4120dc:	lsr	w11, w13, w11
  4120e0:	msub	w11, w11, w15, w22
  4120e4:	add	w11, w11, #0x1
  4120e8:	add	w9, w11, w9
  4120ec:	cmp	x10, x9
  4120f0:	csel	w13, wzr, w10, hi  // hi = pmore
  4120f4:	add	w12, w12, #0x1
  4120f8:	sub	w9, w9, w13
  4120fc:	str	w12, [x19, #36]
  412100:	add	x13, x8, w9, uxtw #4
  412104:	ldr	x14, [x13]
  412108:	cbz	x14, 41215c <feof@plt+0xf78c>
  41210c:	cmp	x14, #0x1
  412110:	b.eq	41214c <feof@plt+0xf77c>  // b.none
  412114:	ldr	x15, [x21]
  412118:	ldr	x16, [x14]
  41211c:	ldr	x17, [x15]
  412120:	cmp	x16, x17
  412124:	b.ne	4120e8 <feof@plt+0xf718>  // b.any
  412128:	ldr	x16, [x14, #8]
  41212c:	ldr	x17, [x15, #8]
  412130:	cmp	x16, x17
  412134:	b.ne	4120e8 <feof@plt+0xf718>  // b.any
  412138:	ldr	w14, [x14, #16]
  41213c:	ldr	w15, [x15, #16]
  412140:	cmp	w14, w15
  412144:	b.ne	4120e8 <feof@plt+0xf718>  // b.any
  412148:	b	412194 <feof@plt+0xf7c4>
  41214c:	cmp	x0, #0x0
  412150:	csel	x0, x13, x0, eq  // eq = none
  412154:	b	4120e8 <feof@plt+0xf718>
  412158:	mov	x0, xzr
  41215c:	cbz	w20, 412178 <feof@plt+0xf7a8>
  412160:	cbz	x0, 412180 <feof@plt+0xf7b0>
  412164:	ldr	x8, [x19, #24]
  412168:	sub	x8, x8, #0x1
  41216c:	str	x8, [x19, #24]
  412170:	str	xzr, [x0]
  412174:	b	412198 <feof@plt+0xf7c8>
  412178:	mov	x0, xzr
  41217c:	b	412198 <feof@plt+0xf7c8>
  412180:	ldr	x10, [x19, #16]
  412184:	add	x0, x8, w9, uxtw #4
  412188:	add	x10, x10, #0x1
  41218c:	str	x10, [x19, #16]
  412190:	b	412198 <feof@plt+0xf7c8>
  412194:	mov	x0, x13
  412198:	ldp	x20, x19, [sp, #32]
  41219c:	ldp	x22, x21, [sp, #16]
  4121a0:	ldp	x29, x30, [sp], #48
  4121a4:	ret
  4121a8:	stp	x29, x30, [sp, #-80]!
  4121ac:	str	x25, [sp, #16]
  4121b0:	stp	x24, x23, [sp, #32]
  4121b4:	stp	x22, x21, [sp, #48]
  4121b8:	stp	x20, x19, [sp, #64]
  4121bc:	mov	x29, sp
  4121c0:	ldp	x8, x9, [x0, #16]
  4121c4:	ldp	x19, x24, [x0]
  4121c8:	mov	x20, x0
  4121cc:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  4121d0:	sub	x8, x8, x9
  4121d4:	lsl	x0, x8, #1
  4121d8:	cmp	x0, x24
  4121dc:	add	x23, x23, #0x3e4
  4121e0:	b.hi	412200 <feof@plt+0xf830>  // b.pmore
  4121e4:	ldr	w21, [x20, #40]
  4121e8:	cmp	x24, #0x21
  4121ec:	b.cc	412420 <feof@plt+0xfa50>  // b.lo, b.ul, b.last
  4121f0:	lsl	w8, w8, #3
  4121f4:	cmp	x24, x8
  4121f8:	mov	x22, x24
  4121fc:	b.ls	412214 <feof@plt+0xf844>  // b.plast
  412200:	bl	404030 <feof@plt+0x1660>
  412204:	mov	w8, w0
  412208:	lsl	x8, x8, #4
  41220c:	ldr	w22, [x23, x8]
  412210:	mov	w21, w0
  412214:	ldrb	w8, [x20, #44]
  412218:	cbz	w8, 41242c <feof@plt+0xfa5c>
  41221c:	adrp	x1, 411000 <feof@plt+0xe630>
  412220:	lsl	x0, x22, #4
  412224:	add	x1, x1, #0xc60
  412228:	mov	w2, #0x10                  	// #16
  41222c:	mov	x3, x22
  412230:	bl	40452c <feof@plt+0x1b5c>
  412234:	cbz	x0, 41243c <feof@plt+0xfa6c>
  412238:	cbz	x22, 412284 <feof@plt+0xf8b4>
  41223c:	cmp	x22, #0x1
  412240:	b.ne	41224c <feof@plt+0xf87c>  // b.any
  412244:	mov	x8, xzr
  412248:	b	412270 <feof@plt+0xf8a0>
  41224c:	and	x8, x22, #0xfffffffffffffffe
  412250:	add	x9, x0, #0x10
  412254:	mov	x10, x8
  412258:	stur	xzr, [x9, #-16]
  41225c:	str	xzr, [x9], #32
  412260:	subs	x10, x10, #0x2
  412264:	b.ne	412258 <feof@plt+0xf888>  // b.any
  412268:	cmp	x22, x8
  41226c:	b.eq	412284 <feof@plt+0xf8b4>  // b.none
  412270:	sub	x9, x22, x8
  412274:	add	x8, x0, x8, lsl #4
  412278:	subs	x9, x9, #0x1
  41227c:	str	xzr, [x8], #16
  412280:	b.ne	412278 <feof@plt+0xf8a8>  // b.any
  412284:	ldp	x9, x8, [x20, #16]
  412288:	str	w21, [x20, #40]
  41228c:	mov	w21, #0x79b9                	// #31161
  412290:	add	x24, x19, x24, lsl #4
  412294:	stp	x0, x22, [x20]
  412298:	sub	x8, x9, x8
  41229c:	movk	w21, #0x9e37, lsl #16
  4122a0:	mov	x22, x19
  4122a4:	stp	x8, xzr, [x20, #16]
  4122a8:	b	4122c0 <feof@plt+0xf8f0>
  4122ac:	ldr	q0, [x22]
  4122b0:	str	q0, [x14]
  4122b4:	add	x22, x22, #0x10
  4122b8:	cmp	x22, x24
  4122bc:	b.cs	4123ec <feof@plt+0xfa1c>  // b.hs, b.nlast
  4122c0:	ldr	x25, [x22]
  4122c4:	cmp	x25, #0x2
  4122c8:	b.cc	4122b4 <feof@plt+0xf8e4>  // b.lo, b.ul, b.last
  4122cc:	ldr	x8, [x25]
  4122d0:	add	x0, x29, #0x18
  4122d4:	mov	w1, #0x8                   	// #8
  4122d8:	mov	w2, wzr
  4122dc:	str	x8, [x29, #24]
  4122e0:	bl	44fee0 <feof@plt+0x4d510>
  4122e4:	ldr	x8, [x25, #8]
  4122e8:	mov	w2, w0
  4122ec:	add	x0, x29, #0x18
  4122f0:	mov	w1, #0x8                   	// #8
  4122f4:	str	x8, [x29, #24]
  4122f8:	bl	44fee0 <feof@plt+0x4d510>
  4122fc:	ldr	w8, [x25, #16]
  412300:	ldr	w9, [x20, #40]
  412304:	add	w11, w0, w8
  412308:	sub	w12, w21, w11
  41230c:	sub	w8, w8, w0
  412310:	eor	w12, w12, w0, lsr #13
  412314:	sub	w8, w8, w12
  412318:	sub	w13, w0, w12
  41231c:	eor	w8, w8, w12, lsl #8
  412320:	sub	w13, w13, w8
  412324:	sub	w12, w12, w8
  412328:	eor	w13, w13, w8, lsr #13
  41232c:	sub	w12, w12, w13
  412330:	sub	w8, w8, w13
  412334:	eor	w12, w12, w13, lsr #12
  412338:	sub	w8, w8, w12
  41233c:	sub	w13, w13, w12
  412340:	eor	w8, w8, w12, lsl #16
  412344:	sub	w13, w13, w8
  412348:	sub	w12, w12, w8
  41234c:	eor	w13, w13, w8, lsr #5
  412350:	sub	w12, w12, w13
  412354:	add	x10, x23, x9, lsl #4
  412358:	sub	w8, w8, w13
  41235c:	eor	w12, w12, w13, lsr #3
  412360:	ldp	w11, w14, [x10]
  412364:	sub	w8, w8, w12
  412368:	sub	w13, w13, w12
  41236c:	eor	w8, w8, w12, lsl #10
  412370:	sub	w12, w13, w8
  412374:	eor	w13, w12, w8, lsr #15
  412378:	ldr	w9, [x10, #12]
  41237c:	mul	x8, x13, x14
  412380:	lsr	x12, x8, #32
  412384:	sub	w14, w13, w12
  412388:	ldr	x8, [x20]
  41238c:	add	w12, w12, w14, lsr #1
  412390:	lsr	w12, w12, w9
  412394:	msub	w12, w12, w11, w13
  412398:	add	x14, x8, w12, uxtw #4
  41239c:	ldr	x15, [x14]
  4123a0:	cbz	x15, 4122ac <feof@plt+0xf8dc>
  4123a4:	ldr	w14, [x10, #8]
  4123a8:	ldr	x10, [x20, #8]
  4123ac:	sub	w11, w11, #0x2
  4123b0:	mul	x14, x14, x13
  4123b4:	lsr	x14, x14, #32
  4123b8:	sub	w15, w13, w14
  4123bc:	add	w14, w14, w15, lsr #1
  4123c0:	lsr	w9, w14, w9
  4123c4:	msub	w9, w9, w11, w13
  4123c8:	add	w9, w9, #0x1
  4123cc:	add	w11, w9, w12
  4123d0:	cmp	x10, x11
  4123d4:	csel	w12, wzr, w10, hi  // hi = pmore
  4123d8:	sub	w12, w11, w12
  4123dc:	add	x14, x8, w12, uxtw #4
  4123e0:	ldr	x11, [x14]
  4123e4:	cbnz	x11, 4123cc <feof@plt+0xf9fc>
  4123e8:	b	4122ac <feof@plt+0xf8dc>
  4123ec:	ldrb	w8, [x20, #44]
  4123f0:	cbz	w8, 412400 <feof@plt+0xfa30>
  4123f4:	mov	x0, x19
  4123f8:	bl	40455c <feof@plt+0x1b8c>
  4123fc:	b	412408 <feof@plt+0xfa38>
  412400:	mov	x0, x19
  412404:	bl	4024c0 <free@plt>
  412408:	ldp	x20, x19, [sp, #64]
  41240c:	ldp	x22, x21, [sp, #48]
  412410:	ldp	x24, x23, [sp, #32]
  412414:	ldr	x25, [sp, #16]
  412418:	ldp	x29, x30, [sp], #80
  41241c:	ret
  412420:	mov	x22, x24
  412424:	ldrb	w8, [x20, #44]
  412428:	cbnz	w8, 41221c <feof@plt+0xf84c>
  41242c:	mov	w1, #0x10                  	// #16
  412430:	mov	x0, x22
  412434:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  412438:	cbnz	x0, 412238 <feof@plt+0xf868>
  41243c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  412440:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  412444:	add	x0, x0, #0x5f9
  412448:	add	x2, x2, #0x610
  41244c:	mov	w1, #0x2b5                 	// #693
  412450:	bl	404ac4 <feof@plt+0x20f4>
  412454:	ldr	w8, [x0, #32]
  412458:	ldr	w14, [x0, #40]
  41245c:	adrp	x15, 451000 <_obstack_memory_used@@Base+0xa68>
  412460:	add	x15, x15, #0x3e4
  412464:	add	w8, w8, #0x1
  412468:	add	x10, x15, x14, lsl #4
  41246c:	str	w8, [x0, #32]
  412470:	ldp	w12, w8, [x10]
  412474:	mov	w13, w2
  412478:	ldr	w16, [x10, #12]
  41247c:	ldr	x9, [x0]
  412480:	mul	x8, x8, x13
  412484:	lsr	x8, x8, #32
  412488:	sub	w10, w2, w8
  41248c:	add	w8, w8, w10, lsr #1
  412490:	lsr	w8, w8, w16
  412494:	msub	w11, w8, w12, w2
  412498:	mov	w8, #0x18                  	// #24
  41249c:	umaddl	x8, w11, w8, x9
  4124a0:	ldr	x17, [x8]
  4124a4:	cbz	x17, 412530 <feof@plt+0xfb60>
  4124a8:	ldr	x10, [x0, #8]
  4124ac:	cmp	x17, #0x1
  4124b0:	b.eq	4124c0 <feof@plt+0xfaf0>  // b.none
  4124b4:	ldr	x18, [x1]
  4124b8:	cmp	x17, x18
  4124bc:	b.eq	412530 <feof@plt+0xfb60>  // b.none
  4124c0:	add	x8, x15, x14, lsl #4
  4124c4:	ldr	w8, [x8, #8]
  4124c8:	ldr	w14, [x0, #36]
  4124cc:	sub	w15, w12, #0x2
  4124d0:	mul	x8, x8, x13
  4124d4:	lsr	x8, x8, #32
  4124d8:	sub	w13, w2, w8
  4124dc:	add	w8, w8, w13, lsr #1
  4124e0:	lsr	w8, w8, w16
  4124e4:	msub	w8, w8, w15, w2
  4124e8:	add	w12, w14, #0x1
  4124ec:	add	w13, w8, #0x1
  4124f0:	mov	w14, #0x18                  	// #24
  4124f4:	b	4124fc <feof@plt+0xfb2c>
  4124f8:	add	w12, w12, #0x1
  4124fc:	add	w8, w13, w11
  412500:	cmp	x10, x8
  412504:	csel	w11, wzr, w10, hi  // hi = pmore
  412508:	sub	w11, w8, w11
  41250c:	str	w12, [x0, #36]
  412510:	umaddl	x8, w11, w14, x9
  412514:	ldr	x15, [x8]
  412518:	cmp	x15, #0x1
  41251c:	b.eq	4124f8 <feof@plt+0xfb28>  // b.none
  412520:	cbz	x15, 412530 <feof@plt+0xfb60>
  412524:	ldr	x16, [x1]
  412528:	cmp	x15, x16
  41252c:	b.ne	4124f8 <feof@plt+0xfb28>  // b.any
  412530:	mov	x0, x8
  412534:	ret
  412538:	stp	x29, x30, [sp, #-48]!
  41253c:	stp	x22, x21, [sp, #16]
  412540:	stp	x20, x19, [sp, #32]
  412544:	mov	x29, sp
  412548:	mov	w20, w3
  41254c:	mov	w22, w2
  412550:	mov	x21, x1
  412554:	cmp	w3, #0x1
  412558:	mov	x19, x0
  41255c:	b.ne	412578 <feof@plt+0xfba8>  // b.any
  412560:	ldp	x8, x9, [x19, #8]
  412564:	add	x8, x8, x8, lsl #1
  412568:	cmp	x8, x9, lsl #2
  41256c:	b.hi	412578 <feof@plt+0xfba8>  // b.pmore
  412570:	mov	x0, x19
  412574:	bl	4126b4 <feof@plt+0xfce4>
  412578:	ldr	w8, [x19, #32]
  41257c:	ldr	w9, [x19, #40]
  412580:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  412584:	add	x10, x10, #0x3e4
  412588:	add	w8, w8, #0x1
  41258c:	add	x10, x10, x9, lsl #4
  412590:	str	w8, [x19, #32]
  412594:	ldp	w11, w9, [x10]
  412598:	mov	w13, w22
  41259c:	ldr	w12, [x10, #12]
  4125a0:	ldr	x8, [x19]
  4125a4:	mul	x9, x9, x13
  4125a8:	lsr	x9, x9, #32
  4125ac:	sub	w14, w22, w9
  4125b0:	add	w9, w9, w14, lsr #1
  4125b4:	lsr	w9, w9, w12
  4125b8:	msub	w9, w9, w11, w22
  4125bc:	mov	w14, #0x18                  	// #24
  4125c0:	umaddl	x0, w9, w14, x8
  4125c4:	ldr	x15, [x0]
  4125c8:	cbz	x15, 412668 <feof@plt+0xfc98>
  4125cc:	ldr	w14, [x10, #8]
  4125d0:	ldr	x10, [x19, #8]
  4125d4:	cmp	x15, #0x1
  4125d8:	b.eq	4125ec <feof@plt+0xfc1c>  // b.none
  4125dc:	ldr	x16, [x21]
  4125e0:	cmp	x15, x16
  4125e4:	b.eq	4126a4 <feof@plt+0xfcd4>  // b.none
  4125e8:	mov	x0, xzr
  4125ec:	mul	x13, x14, x13
  4125f0:	lsr	x13, x13, #32
  4125f4:	sub	w14, w22, w13
  4125f8:	sub	w15, w11, #0x2
  4125fc:	ldr	w11, [x19, #36]
  412600:	add	w13, w13, w14, lsr #1
  412604:	lsr	w12, w13, w12
  412608:	msub	w12, w12, w15, w22
  41260c:	add	w12, w12, #0x1
  412610:	mov	w13, #0x18                  	// #24
  412614:	add	w11, w11, #0x1
  412618:	add	w9, w12, w9
  41261c:	cmp	x10, x9
  412620:	csel	w14, wzr, w10, hi  // hi = pmore
  412624:	sub	w9, w9, w14
  412628:	str	w11, [x19, #36]
  41262c:	umaddl	x14, w9, w13, x8
  412630:	ldr	x15, [x14]
  412634:	cbz	x15, 41266c <feof@plt+0xfc9c>
  412638:	cmp	x15, #0x1
  41263c:	b.eq	412654 <feof@plt+0xfc84>  // b.none
  412640:	ldr	x16, [x21]
  412644:	add	w11, w11, #0x1
  412648:	cmp	x15, x16
  41264c:	b.ne	412618 <feof@plt+0xfc48>  // b.any
  412650:	b	412660 <feof@plt+0xfc90>
  412654:	cmp	x0, #0x0
  412658:	csel	x0, x14, x0, eq  // eq = none
  41265c:	b	412614 <feof@plt+0xfc44>
  412660:	mov	x0, x14
  412664:	b	4126a4 <feof@plt+0xfcd4>
  412668:	mov	x0, xzr
  41266c:	cbz	w20, 412688 <feof@plt+0xfcb8>
  412670:	cbz	x0, 412690 <feof@plt+0xfcc0>
  412674:	ldr	x8, [x19, #24]
  412678:	sub	x8, x8, #0x1
  41267c:	str	x8, [x19, #24]
  412680:	str	xzr, [x0]
  412684:	b	4126a4 <feof@plt+0xfcd4>
  412688:	mov	x0, xzr
  41268c:	b	4126a4 <feof@plt+0xfcd4>
  412690:	ldr	x10, [x19, #16]
  412694:	mov	w11, #0x18                  	// #24
  412698:	umaddl	x0, w9, w11, x8
  41269c:	add	x10, x10, #0x1
  4126a0:	str	x10, [x19, #16]
  4126a4:	ldp	x20, x19, [sp, #32]
  4126a8:	ldp	x22, x21, [sp, #16]
  4126ac:	ldp	x29, x30, [sp], #48
  4126b0:	ret
  4126b4:	stp	x29, x30, [sp, #-64]!
  4126b8:	stp	x24, x23, [sp, #16]
  4126bc:	stp	x22, x21, [sp, #32]
  4126c0:	stp	x20, x19, [sp, #48]
  4126c4:	mov	x29, sp
  4126c8:	ldp	x8, x9, [x0, #16]
  4126cc:	ldp	x19, x24, [x0]
  4126d0:	mov	x20, x0
  4126d4:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  4126d8:	sub	x8, x8, x9
  4126dc:	lsl	x0, x8, #1
  4126e0:	cmp	x0, x24
  4126e4:	add	x23, x23, #0x3e4
  4126e8:	b.hi	412708 <feof@plt+0xfd38>  // b.pmore
  4126ec:	ldr	w21, [x20, #40]
  4126f0:	cmp	x24, #0x21
  4126f4:	b.cc	4128a8 <feof@plt+0xfed8>  // b.lo, b.ul, b.last
  4126f8:	lsl	w8, w8, #3
  4126fc:	cmp	x24, x8
  412700:	mov	x22, x24
  412704:	b.ls	41271c <feof@plt+0xfd4c>  // b.plast
  412708:	bl	404030 <feof@plt+0x1660>
  41270c:	mov	w8, w0
  412710:	lsl	x8, x8, #4
  412714:	ldr	w22, [x23, x8]
  412718:	mov	w21, w0
  41271c:	ldrb	w8, [x20, #44]
  412720:	cbz	w8, 4128b4 <feof@plt+0xfee4>
  412724:	add	x8, x22, x22, lsl #1
  412728:	adrp	x1, 411000 <feof@plt+0xe630>
  41272c:	lsl	x0, x8, #3
  412730:	add	x1, x1, #0xc64
  412734:	mov	w2, #0x18                  	// #24
  412738:	mov	x3, x22
  41273c:	bl	40452c <feof@plt+0x1b5c>
  412740:	cbz	x0, 4128c4 <feof@plt+0xfef4>
  412744:	mov	w8, #0x18                  	// #24
  412748:	cbz	x22, 41279c <feof@plt+0xfdcc>
  41274c:	cmp	x22, #0x1
  412750:	b.ne	41275c <feof@plt+0xfd8c>  // b.any
  412754:	mov	x9, xzr
  412758:	b	412784 <feof@plt+0xfdb4>
  41275c:	and	x9, x22, #0xfffffffffffffffe
  412760:	mov	x10, x9
  412764:	mov	x11, x0
  412768:	str	xzr, [x11]
  41276c:	str	xzr, [x11, #24]
  412770:	subs	x10, x10, #0x2
  412774:	add	x11, x11, #0x30
  412778:	b.ne	412768 <feof@plt+0xfd98>  // b.any
  41277c:	cmp	x22, x9
  412780:	b.eq	41279c <feof@plt+0xfdcc>  // b.none
  412784:	mov	w11, #0x18                  	// #24
  412788:	sub	x10, x22, x9
  41278c:	madd	x9, x9, x11, x0
  412790:	subs	x10, x10, #0x1
  412794:	str	xzr, [x9], #24
  412798:	b.ne	412790 <feof@plt+0xfdc0>  // b.any
  41279c:	ldp	x10, x9, [x20, #16]
  4127a0:	madd	x8, x24, x8, x19
  4127a4:	stp	x0, x22, [x20]
  4127a8:	str	w21, [x20, #40]
  4127ac:	sub	x9, x10, x9
  4127b0:	stp	x9, xzr, [x20, #16]
  4127b4:	mov	w9, #0x18                  	// #24
  4127b8:	mov	x10, x19
  4127bc:	b	4127dc <feof@plt+0xfe0c>
  4127c0:	ldr	x11, [x10, #16]
  4127c4:	ldr	q0, [x10]
  4127c8:	str	x11, [x18, #16]
  4127cc:	str	q0, [x18]
  4127d0:	add	x10, x10, #0x18
  4127d4:	cmp	x10, x8
  4127d8:	b.cs	412870 <feof@plt+0xfea0>  // b.hs, b.nlast
  4127dc:	ldr	x11, [x10]
  4127e0:	cmp	x11, #0x2
  4127e4:	b.cc	4127d0 <feof@plt+0xfe00>  // b.lo, b.ul, b.last
  4127e8:	ldr	w12, [x20, #40]
  4127ec:	ubfx	x17, x11, #3, #32
  4127f0:	add	x14, x23, x12, lsl #4
  4127f4:	ldp	w15, w13, [x14]
  4127f8:	lsr	x12, x11, #3
  4127fc:	ldr	w16, [x14, #12]
  412800:	mul	x11, x17, x13
  412804:	lsr	x13, x11, #32
  412808:	sub	w18, w12, w13
  41280c:	ldr	x11, [x20]
  412810:	add	w13, w13, w18, lsr #1
  412814:	lsr	w13, w13, w16
  412818:	msub	w13, w13, w15, w12
  41281c:	umaddl	x18, w13, w9, x11
  412820:	ldr	x0, [x18]
  412824:	cbz	x0, 4127c0 <feof@plt+0xfdf0>
  412828:	ldr	w18, [x14, #8]
  41282c:	ldr	x14, [x20, #8]
  412830:	sub	w15, w15, #0x2
  412834:	mul	x17, x17, x18
  412838:	lsr	x17, x17, #32
  41283c:	sub	w18, w12, w17
  412840:	add	w17, w17, w18, lsr #1
  412844:	lsr	w16, w17, w16
  412848:	msub	w12, w16, w15, w12
  41284c:	add	w12, w12, #0x1
  412850:	add	w13, w12, w13
  412854:	cmp	x14, x13
  412858:	csel	w15, wzr, w14, hi  // hi = pmore
  41285c:	sub	w13, w13, w15
  412860:	umaddl	x18, w13, w9, x11
  412864:	ldr	x15, [x18]
  412868:	cbnz	x15, 412850 <feof@plt+0xfe80>
  41286c:	b	4127c0 <feof@plt+0xfdf0>
  412870:	ldrb	w8, [x20, #44]
  412874:	cbz	w8, 412890 <feof@plt+0xfec0>
  412878:	mov	x0, x19
  41287c:	ldp	x20, x19, [sp, #48]
  412880:	ldp	x22, x21, [sp, #32]
  412884:	ldp	x24, x23, [sp, #16]
  412888:	ldp	x29, x30, [sp], #64
  41288c:	b	40455c <feof@plt+0x1b8c>
  412890:	mov	x0, x19
  412894:	ldp	x20, x19, [sp, #48]
  412898:	ldp	x22, x21, [sp, #32]
  41289c:	ldp	x24, x23, [sp, #16]
  4128a0:	ldp	x29, x30, [sp], #64
  4128a4:	b	4024c0 <free@plt>
  4128a8:	mov	x22, x24
  4128ac:	ldrb	w8, [x20, #44]
  4128b0:	cbnz	w8, 412724 <feof@plt+0xfd54>
  4128b4:	mov	w1, #0x18                  	// #24
  4128b8:	mov	x0, x22
  4128bc:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4128c0:	cbnz	x0, 412744 <feof@plt+0xfd74>
  4128c4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4128c8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4128cc:	add	x0, x0, #0x5f9
  4128d0:	add	x2, x2, #0x610
  4128d4:	mov	w1, #0x2b5                 	// #693
  4128d8:	bl	404ac4 <feof@plt+0x20f4>
  4128dc:	stp	x29, x30, [sp, #-64]!
  4128e0:	stp	x28, x23, [sp, #16]
  4128e4:	stp	x22, x21, [sp, #32]
  4128e8:	stp	x20, x19, [sp, #48]
  4128ec:	mov	x29, sp
  4128f0:	sub	sp, sp, #0x1, lsl #12
  4128f4:	sub	sp, sp, #0x30
  4128f8:	ldr	x8, [x1]
  4128fc:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x1a68>
  412900:	mov	x20, x2
  412904:	mov	x21, x1
  412908:	mov	x19, x0
  41290c:	add	x23, x23, #0x20a
  412910:	mov	x0, x8
  412914:	mov	x1, x23
  412918:	mov	x22, x8
  41291c:	bl	4023b0 <strstr@plt>
  412920:	add	x8, x0, #0x4
  412924:	cbnz	x0, 412910 <feof@plt+0xff40>
  412928:	ldr	w3, [x21, #16]
  41292c:	ldr	x4, [x21, #8]
  412930:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  412934:	add	x1, x1, #0x1c2
  412938:	add	x0, sp, #0x30
  41293c:	mov	x2, x22
  412940:	bl	4025b0 <sprintf@plt>
  412944:	strb	wzr, [sp, #96]
  412948:	ldr	x8, [x19]
  41294c:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  412950:	ldr	x0, [x9, #1336]
  412954:	ldr	x3, [x19, #48]
  412958:	lsr	x12, x8, #11
  41295c:	cmp	x12, #0x5
  412960:	mov	x4, x8
  412964:	b.cc	412980 <feof@plt+0xffb0>  // b.lo, b.ul, b.last
  412968:	lsr	x9, x8, #21
  41296c:	cmp	x9, #0x4
  412970:	b.hi	41297c <feof@plt+0xffac>  // b.pmore
  412974:	lsr	x4, x8, #10
  412978:	b	412980 <feof@plt+0xffb0>
  41297c:	lsr	x4, x8, #20
  412980:	ldr	x13, [x19, #16]
  412984:	cmp	x8, #0xa00, lsl #12
  412988:	mov	w9, #0x4d                  	// #77
  41298c:	mov	w10, #0x6b                  	// #107
  412990:	ldr	d0, [x20]
  412994:	mov	w11, #0x20                  	// #32
  412998:	csel	w14, w10, w9, cc  // cc = lo, ul, last
  41299c:	cmp	x12, #0x5
  4129a0:	csel	w5, w11, w14, cc  // cc = lo, ul, last
  4129a4:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  4129a8:	lsr	x12, x13, #11
  4129ac:	cmp	x12, #0x5
  4129b0:	ucvtf	d1, x8
  4129b4:	fmov	d2, x14
  4129b8:	mov	x6, x13
  4129bc:	b.cc	4129d8 <feof@plt+0x10008>  // b.lo, b.ul, b.last
  4129c0:	lsr	x8, x13, #21
  4129c4:	cmp	x8, #0x4
  4129c8:	b.hi	4129d4 <feof@plt+0x10004>  // b.pmore
  4129cc:	lsr	x6, x13, #10
  4129d0:	b	4129d8 <feof@plt+0x10008>
  4129d4:	lsr	x6, x13, #20
  4129d8:	ldr	x8, [x19, #8]
  4129dc:	cmp	x13, #0xa00, lsl #12
  4129e0:	ldr	x13, [x19, #32]
  4129e4:	fmul	d3, d1, d2
  4129e8:	ldr	d2, [x20, #8]
  4129ec:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  4129f0:	fmov	d4, x14
  4129f4:	ucvtf	d1, x8
  4129f8:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  4129fc:	cmp	x12, #0x5
  412a00:	lsr	x10, x13, #11
  412a04:	ucvtf	d0, d0
  412a08:	fmul	d1, d1, d4
  412a0c:	csel	w7, w11, w9, cc  // cc = lo, ul, last
  412a10:	cmp	x10, #0x5
  412a14:	ucvtf	d2, d2
  412a18:	mov	x9, x13
  412a1c:	b.cc	412a38 <feof@plt+0x10068>  // b.lo, b.ul, b.last
  412a20:	lsr	x9, x13, #21
  412a24:	cmp	x9, #0x4
  412a28:	b.hi	412a34 <feof@plt+0x10064>  // b.pmore
  412a2c:	lsr	x9, x13, #10
  412a30:	b	412a38 <feof@plt+0x10068>
  412a34:	lsr	x9, x13, #20
  412a38:	ldr	x14, [x19, #40]
  412a3c:	cmp	x13, #0xa00, lsl #12
  412a40:	mov	w11, #0x4d                  	// #77
  412a44:	mov	w12, #0x6b                  	// #107
  412a48:	csel	w15, w12, w11, cc  // cc = lo, ul, last
  412a4c:	cmp	x10, #0x5
  412a50:	mov	w13, #0x20                  	// #32
  412a54:	csel	w10, w13, w15, cc  // cc = lo, ul, last
  412a58:	lsr	x15, x14, #11
  412a5c:	fdiv	d0, d3, d0
  412a60:	cmp	x15, #0x5
  412a64:	fdiv	d1, d1, d2
  412a68:	mov	x16, x14
  412a6c:	b.cc	412a88 <feof@plt+0x100b8>  // b.lo, b.ul, b.last
  412a70:	lsr	x16, x14, #21
  412a74:	cmp	x16, #0x4
  412a78:	b.hi	412a84 <feof@plt+0x100b4>  // b.pmore
  412a7c:	lsr	x16, x14, #10
  412a80:	b	412a88 <feof@plt+0x100b8>
  412a84:	lsr	x16, x14, #20
  412a88:	cmp	x14, #0xa00, lsl #12
  412a8c:	csel	w11, w12, w11, cc  // cc = lo, ul, last
  412a90:	cmp	x15, #0x5
  412a94:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  412a98:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  412a9c:	add	x1, x1, #0x1cd
  412aa0:	add	x2, sp, #0x30
  412aa4:	str	x16, [sp, #24]
  412aa8:	str	w10, [sp, #16]
  412aac:	stp	x8, x9, [sp]
  412ab0:	str	w11, [sp, #32]
  412ab4:	bl	402440 <fprintf@plt>
  412ab8:	add	sp, sp, #0x1, lsl #12
  412abc:	add	sp, sp, #0x30
  412ac0:	ldp	x20, x19, [sp, #48]
  412ac4:	ldp	x22, x21, [sp, #32]
  412ac8:	ldp	x28, x23, [sp, #16]
  412acc:	ldp	x29, x30, [sp], #64
  412ad0:	ret
  412ad4:	ldr	x8, [x0, #8]
  412ad8:	ldr	x9, [x1, #8]
  412adc:	ldr	x10, [x8]
  412ae0:	ldr	x11, [x9]
  412ae4:	cmp	x10, x11
  412ae8:	b.ne	412b14 <feof@plt+0x10144>  // b.any
  412aec:	ldr	x10, [x8, #16]
  412af0:	ldr	x11, [x9, #16]
  412af4:	cmp	x10, x11
  412af8:	b.ne	412b14 <feof@plt+0x10144>  // b.any
  412afc:	ldr	x10, [x8, #8]
  412b00:	ldr	x11, [x9, #8]
  412b04:	cmp	x10, x11
  412b08:	b.ne	412b20 <feof@plt+0x10150>  // b.any
  412b0c:	mov	w0, wzr
  412b10:	ret
  412b14:	b.cs	412b30 <feof@plt+0x10160>  // b.hs, b.nlast
  412b18:	mov	w0, #0x1                   	// #1
  412b1c:	ret
  412b20:	ldr	x8, [x8, #8]
  412b24:	ldr	x9, [x9, #8]
  412b28:	cmp	x8, x9
  412b2c:	b.cc	412b18 <feof@plt+0x10148>  // b.lo, b.ul, b.last
  412b30:	mov	w0, #0xffffffff            	// #-1
  412b34:	ret
  412b38:	stp	x29, x30, [sp, #-64]!
  412b3c:	str	x23, [sp, #16]
  412b40:	stp	x22, x21, [sp, #32]
  412b44:	stp	x20, x19, [sp, #48]
  412b48:	mov	x29, sp
  412b4c:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  412b50:	ldr	x21, [x20, #1896]
  412b54:	cbz	x21, 412bcc <feof@plt+0x101fc>
  412b58:	mov	x19, x21
  412b5c:	ldr	x8, [x19, #-8]!
  412b60:	cbz	x8, 412bc0 <feof@plt+0x101f0>
  412b64:	mov	w9, #0x58                  	// #88
  412b68:	mul	x22, x8, x9
  412b6c:	b	412b80 <feof@plt+0x101b0>
  412b70:	bl	4024c0 <free@plt>
  412b74:	stur	xzr, [x23, #-8]
  412b78:	subs	x22, x22, #0x58
  412b7c:	b.eq	412bc0 <feof@plt+0x101f0>  // b.none
  412b80:	add	x23, x21, x22
  412b84:	ldur	x0, [x23, #-72]
  412b88:	cbz	x0, 412b94 <feof@plt+0x101c4>
  412b8c:	bl	402490 <fclose@plt>
  412b90:	stur	xzr, [x23, #-72]
  412b94:	ldur	x0, [x23, #-64]
  412b98:	cbz	x0, 412ba4 <feof@plt+0x101d4>
  412b9c:	bl	4024c0 <free@plt>
  412ba0:	stur	xzr, [x23, #-64]
  412ba4:	add	x23, x21, x22
  412ba8:	ldur	x0, [x23, #-8]
  412bac:	cbz	x0, 412b78 <feof@plt+0x101a8>
  412bb0:	ldr	w8, [x0]
  412bb4:	tbz	w8, #31, 412b70 <feof@plt+0x101a0>
  412bb8:	str	wzr, [x0, #4]
  412bbc:	b	412b78 <feof@plt+0x101a8>
  412bc0:	mov	x0, x19
  412bc4:	bl	4027b0 <_ZdaPv@plt>
  412bc8:	str	xzr, [x20, #1896]
  412bcc:	ldp	x20, x19, [sp, #48]
  412bd0:	ldp	x22, x21, [sp, #32]
  412bd4:	ldr	x23, [sp, #16]
  412bd8:	ldp	x29, x30, [sp], #64
  412bdc:	ret
  412be0:	stp	x29, x30, [sp, #-64]!
  412be4:	str	x23, [sp, #16]
  412be8:	stp	x22, x21, [sp, #32]
  412bec:	stp	x20, x19, [sp, #48]
  412bf0:	mov	x29, sp
  412bf4:	cbz	x0, 412ca8 <feof@plt+0x102d8>
  412bf8:	mov	x19, x0
  412bfc:	bl	414c04 <feof@plt+0x12234>
  412c00:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  412c04:	ldr	x22, [x8, #1896]
  412c08:	mov	x21, xzr
  412c0c:	mov	x20, xzr
  412c10:	b	412c20 <feof@plt+0x10250>
  412c14:	add	x21, x21, #0x58
  412c18:	cmp	x21, #0x580
  412c1c:	b.eq	412c4c <feof@plt+0x1027c>  // b.none
  412c20:	add	x23, x22, x21
  412c24:	ldr	x0, [x23, #8]
  412c28:	cbz	x0, 412c14 <feof@plt+0x10244>
  412c2c:	mov	x1, x19
  412c30:	bl	402820 <strcmp@plt>
  412c34:	cbnz	w0, 412c14 <feof@plt+0x10244>
  412c38:	ldr	w8, [x22, x21]
  412c3c:	mov	x20, x23
  412c40:	add	w8, w8, #0x1
  412c44:	str	w8, [x22, x21]
  412c48:	b	412c14 <feof@plt+0x10244>
  412c4c:	cbz	x20, 412c94 <feof@plt+0x102c4>
  412c50:	ldr	w8, [x20]
  412c54:	ldr	x0, [x20, #16]
  412c58:	str	xzr, [x20, #8]
  412c5c:	add	w8, w8, #0x1
  412c60:	str	w8, [x20]
  412c64:	cbz	x0, 412c6c <feof@plt+0x1029c>
  412c68:	bl	402490 <fclose@plt>
  412c6c:	ldr	x8, [x20, #80]
  412c70:	str	xzr, [x20, #16]
  412c74:	stp	xzr, xzr, [x20, #48]
  412c78:	str	xzr, [x20, #40]
  412c7c:	cbz	x8, 412c84 <feof@plt+0x102b4>
  412c80:	str	wzr, [x8, #4]
  412c84:	mov	w8, #0x1                   	// #1
  412c88:	str	wzr, [x20]
  412c8c:	str	xzr, [x20, #64]
  412c90:	strb	w8, [x20, #72]
  412c94:	ldp	x20, x19, [sp, #48]
  412c98:	ldp	x22, x21, [sp, #32]
  412c9c:	ldr	x23, [sp, #16]
  412ca0:	ldp	x29, x30, [sp], #64
  412ca4:	ret
  412ca8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  412cac:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  412cb0:	add	x0, x0, #0x268
  412cb4:	add	x2, x2, #0x27a
  412cb8:	mov	w1, #0x133                 	// #307
  412cbc:	bl	404ac4 <feof@plt+0x20f4>
  412cc0:	movi	v0.2d, #0x0
  412cc4:	mov	w8, #0x1                   	// #1
  412cc8:	str	wzr, [x0]
  412ccc:	stur	q0, [x0, #8]
  412cd0:	stur	q0, [x0, #24]
  412cd4:	stur	q0, [x0, #40]
  412cd8:	stur	q0, [x0, #56]
  412cdc:	strb	w8, [x0, #72]
  412ce0:	str	xzr, [x0, #80]
  412ce4:	ret
  412ce8:	stp	x29, x30, [sp, #-32]!
  412cec:	str	x19, [sp, #16]
  412cf0:	mov	x29, sp
  412cf4:	mov	x19, x0
  412cf8:	ldr	x0, [x0, #16]
  412cfc:	cbz	x0, 412d08 <feof@plt+0x10338>
  412d00:	bl	402490 <fclose@plt>
  412d04:	str	xzr, [x19, #16]
  412d08:	ldr	x0, [x19, #24]
  412d0c:	cbz	x0, 412d18 <feof@plt+0x10348>
  412d10:	bl	4024c0 <free@plt>
  412d14:	str	xzr, [x19, #24]
  412d18:	ldr	x0, [x19, #80]
  412d1c:	cbz	x0, 412d38 <feof@plt+0x10368>
  412d20:	ldr	w8, [x0]
  412d24:	tbnz	w8, #31, 412d34 <feof@plt+0x10364>
  412d28:	bl	4024c0 <free@plt>
  412d2c:	str	xzr, [x19, #80]
  412d30:	b	412d38 <feof@plt+0x10368>
  412d34:	str	wzr, [x0, #4]
  412d38:	ldr	x19, [sp, #16]
  412d3c:	ldp	x29, x30, [sp], #32
  412d40:	ret
  412d44:	sub	sp, sp, #0x40
  412d48:	stp	x29, x30, [sp, #32]
  412d4c:	stp	x20, x19, [sp, #48]
  412d50:	add	x29, sp, #0x20
  412d54:	str	xzr, [sp, #8]
  412d58:	cbz	w1, 412ec0 <feof@plt+0x104f0>
  412d5c:	mov	w20, w1
  412d60:	bl	412ef0 <feof@plt+0x10520>
  412d64:	cbz	x0, 412ddc <feof@plt+0x1040c>
  412d68:	ldr	x9, [x0, #56]
  412d6c:	sxtw	x8, w20
  412d70:	mov	x19, x0
  412d74:	cmp	x9, x8
  412d78:	b.cc	412e74 <feof@plt+0x104a4>  // b.lo, b.ul, b.last
  412d7c:	ldr	x9, [x19, #80]
  412d80:	cbz	x9, 412de4 <feof@plt+0x10414>
  412d84:	ldr	w10, [x9, #4]
  412d88:	cbz	w10, 412de4 <feof@plt+0x10414>
  412d8c:	ldr	x11, [x19, #64]
  412d90:	cmp	x11, #0x64
  412d94:	b.hi	412df0 <feof@plt+0x10420>  // b.pmore
  412d98:	sub	w10, w8, #0x1
  412d9c:	add	x9, x9, #0x8
  412da0:	mov	w12, #0x18                  	// #24
  412da4:	sub	w13, w11, #0x1
  412da8:	umaddl	x10, w10, w12, x9
  412dac:	umaddl	x9, w13, w12, x9
  412db0:	cmp	x11, x8
  412db4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  412db8:	ldr	x10, [x9]
  412dbc:	cmp	x10, x8
  412dc0:	b.ls	412e2c <feof@plt+0x1045c>  // b.plast
  412dc4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  412dc8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  412dcc:	add	x0, x0, #0x268
  412dd0:	add	x2, x2, #0x916
  412dd4:	mov	w1, #0x2b2                 	// #690
  412dd8:	bl	404ac4 <feof@plt+0x20f4>
  412ddc:	mov	x1, xzr
  412de0:	b	412ec8 <feof@plt+0x104f8>
  412de4:	mov	x9, xzr
  412de8:	stp	xzr, xzr, [x19, #48]
  412dec:	b	412e74 <feof@plt+0x104a4>
  412df0:	cmp	x11, x8
  412df4:	b.cs	412e00 <feof@plt+0x10430>  // b.hs, b.nlast
  412df8:	sub	w11, w10, #0x1
  412dfc:	b	412e0c <feof@plt+0x1043c>
  412e00:	mov	w12, #0x64                  	// #100
  412e04:	mul	x12, x8, x12
  412e08:	udiv	x11, x12, x11
  412e0c:	cmp	x11, x10
  412e10:	b.cs	412e68 <feof@plt+0x10498>  // b.hs, b.nlast
  412e14:	and	x10, x11, #0xffffffff
  412e18:	mov	w11, #0x18                  	// #24
  412e1c:	madd	x9, x10, x11, x9
  412e20:	ldr	x10, [x9, #8]!
  412e24:	cmp	x10, x8
  412e28:	b.hi	412ed8 <feof@plt+0x10508>  // b.pmore
  412e2c:	cmp	x10, x8
  412e30:	b.ne	412e54 <feof@plt+0x10484>  // b.any
  412e34:	ldr	x8, [x19, #24]
  412e38:	ldr	x10, [x9, #8]
  412e3c:	add	x0, x8, x10
  412e40:	str	x0, [sp, #8]
  412e44:	ldr	x8, [x9, #16]
  412e48:	sub	x1, x8, x10
  412e4c:	stur	x1, [x29, #-8]
  412e50:	b	412ec8 <feof@plt+0x104f8>
  412e54:	ldr	x10, [x9, #8]
  412e58:	str	x10, [x19, #48]
  412e5c:	ldr	x9, [x9]
  412e60:	sub	x9, x9, #0x1
  412e64:	b	412e70 <feof@plt+0x104a0>
  412e68:	mov	x9, xzr
  412e6c:	str	xzr, [x19, #48]
  412e70:	str	x9, [x19, #56]
  412e74:	sub	x20, x8, #0x1
  412e78:	cmp	x9, x20
  412e7c:	b.cs	412ea0 <feof@plt+0x104d0>  // b.hs, b.nlast
  412e80:	sub	x1, x29, #0x8
  412e84:	add	x2, sp, #0x10
  412e88:	mov	x0, x19
  412e8c:	bl	414dbc <feof@plt+0x123ec>
  412e90:	tbz	w0, #0, 412ec0 <feof@plt+0x104f0>
  412e94:	ldr	x8, [x19, #56]
  412e98:	cmp	x8, x20
  412e9c:	b.cc	412e80 <feof@plt+0x104b0>  // b.lo, b.ul, b.last
  412ea0:	add	x1, sp, #0x8
  412ea4:	sub	x2, x29, #0x8
  412ea8:	mov	x0, x19
  412eac:	bl	414dbc <feof@plt+0x123ec>
  412eb0:	tbz	w0, #0, 412ec0 <feof@plt+0x104f0>
  412eb4:	ldr	x0, [sp, #8]
  412eb8:	ldur	x1, [x29, #-8]
  412ebc:	b	412ec8 <feof@plt+0x104f8>
  412ec0:	mov	x1, xzr
  412ec4:	mov	x0, xzr
  412ec8:	ldp	x20, x19, [sp, #48]
  412ecc:	ldp	x29, x30, [sp, #32]
  412ed0:	add	sp, sp, #0x40
  412ed4:	ret
  412ed8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  412edc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  412ee0:	add	x0, x0, #0x268
  412ee4:	add	x2, x2, #0x916
  412ee8:	mov	w1, #0x2c1                 	// #705
  412eec:	bl	404ac4 <feof@plt+0x20f4>
  412ef0:	sub	sp, sp, #0x70
  412ef4:	stp	x29, x30, [sp, #48]
  412ef8:	stp	x24, x23, [sp, #64]
  412efc:	stp	x22, x21, [sp, #80]
  412f00:	stp	x20, x19, [sp, #96]
  412f04:	add	x29, sp, #0x30
  412f08:	mov	x20, x0
  412f0c:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  412f10:	cbz	x0, 412f74 <feof@plt+0x105a4>
  412f14:	bl	414c04 <feof@plt+0x12234>
  412f18:	ldr	x23, [x22, #1896]
  412f1c:	mov	x21, xzr
  412f20:	mov	x19, xzr
  412f24:	b	412f34 <feof@plt+0x10564>
  412f28:	add	x21, x21, #0x58
  412f2c:	cmp	x21, #0x580
  412f30:	b.eq	412f60 <feof@plt+0x10590>  // b.none
  412f34:	add	x24, x23, x21
  412f38:	ldr	x0, [x24, #8]
  412f3c:	cbz	x0, 412f28 <feof@plt+0x10558>
  412f40:	mov	x1, x20
  412f44:	bl	402820 <strcmp@plt>
  412f48:	cbnz	w0, 412f28 <feof@plt+0x10558>
  412f4c:	ldr	w8, [x23, x21]
  412f50:	mov	x19, x24
  412f54:	add	w8, w8, #0x1
  412f58:	str	w8, [x23, x21]
  412f5c:	b	412f28 <feof@plt+0x10558>
  412f60:	cbz	x19, 412f74 <feof@plt+0x105a4>
  412f64:	ldr	w8, [x19]
  412f68:	add	w8, w8, #0x1
  412f6c:	str	w8, [x19]
  412f70:	b	413070 <feof@plt+0x106a0>
  412f74:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  412f78:	add	x1, x1, #0x8d
  412f7c:	mov	x0, x20
  412f80:	bl	402800 <fopen@plt>
  412f84:	cbz	x0, 413058 <feof@plt+0x10688>
  412f88:	mov	x21, x0
  412f8c:	bl	414c04 <feof@plt+0x12234>
  412f90:	ldr	x9, [x22, #1896]
  412f94:	mov	x8, xzr
  412f98:	ldr	w10, [x9]
  412f9c:	mov	x19, x9
  412fa0:	mov	w22, w10
  412fa4:	add	x13, x9, x8
  412fa8:	ldr	w11, [x13, #88]!
  412fac:	ldr	x12, [x13, #8]
  412fb0:	cmp	w11, w10
  412fb4:	b.cc	412fc4 <feof@plt+0x105f4>  // b.lo, b.ul, b.last
  412fb8:	ldr	x10, [x19, #8]
  412fbc:	cbz	x10, 412fc8 <feof@plt+0x105f8>
  412fc0:	cbnz	x12, 412fc8 <feof@plt+0x105f8>
  412fc4:	mov	x19, x13
  412fc8:	cmp	w22, w11
  412fcc:	csel	w22, w11, w22, cc  // cc = lo, ul, last
  412fd0:	cbz	x12, 412fe8 <feof@plt+0x10618>
  412fd4:	cmp	x8, #0x4d0
  412fd8:	b.eq	412fe8 <feof@plt+0x10618>  // b.none
  412fdc:	ldr	w10, [x19]
  412fe0:	add	x8, x8, #0x58
  412fe4:	b	412fa4 <feof@plt+0x105d4>
  412fe8:	ldr	x0, [x19, #16]
  412fec:	str	x20, [x19, #8]
  412ff0:	cbz	x0, 412ff8 <feof@plt+0x10628>
  412ff4:	bl	402490 <fclose@plt>
  412ff8:	ldr	x8, [x19, #80]
  412ffc:	str	x21, [x19, #16]
  413000:	stp	xzr, xzr, [x19, #48]
  413004:	str	xzr, [x19, #40]
  413008:	cbz	x8, 413010 <feof@plt+0x10640>
  41300c:	str	wzr, [x8, #4]
  413010:	add	w8, w22, #0x1
  413014:	str	w8, [x19]
  413018:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  41301c:	ldr	x0, [x8, #1880]
  413020:	sub	x2, x29, #0x4
  413024:	mov	x1, x20
  413028:	stur	wzr, [x29, #-4]
  41302c:	bl	42bc48 <feof@plt+0x29278>
  413030:	tbz	w0, #0, 413060 <feof@plt+0x10690>
  413034:	ldur	w0, [x29, #-4]
  413038:	cmp	w0, #0x1
  41303c:	b.ls	41308c <feof@plt+0x106bc>  // b.plast
  413040:	add	x8, sp, #0x8
  413044:	mov	w1, #0x1                   	// #1
  413048:	mov	w2, wzr
  41304c:	bl	413110 <feof@plt+0x10740>
  413050:	ldrsw	x8, [sp, #16]
  413054:	b	413064 <feof@plt+0x10694>
  413058:	mov	x19, xzr
  41305c:	b	413070 <feof@plt+0x106a0>
  413060:	mov	x8, xzr
  413064:	str	x8, [x19, #64]
  413068:	mov	w8, #0x1                   	// #1
  41306c:	strb	w8, [x19, #72]
  413070:	mov	x0, x19
  413074:	ldp	x20, x19, [sp, #96]
  413078:	ldp	x22, x21, [sp, #80]
  41307c:	ldp	x24, x23, [sp, #64]
  413080:	ldp	x29, x30, [sp, #48]
  413084:	add	sp, sp, #0x70
  413088:	ret
  41308c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  413090:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  413094:	add	x0, x0, #0x268
  413098:	add	x2, x2, #0x906
  41309c:	mov	w1, #0x107                 	// #263
  4130a0:	bl	404ac4 <feof@plt+0x20f4>
  4130a4:	stp	x29, x30, [sp, #-16]!
  4130a8:	mov	x29, sp
  4130ac:	bl	412ef0 <feof@plt+0x10520>
  4130b0:	cbz	x0, 4130c0 <feof@plt+0x106f0>
  4130b4:	ldrb	w8, [x0, #72]
  4130b8:	cmp	w8, #0x0
  4130bc:	cset	w0, ne  // ne = any
  4130c0:	ldp	x29, x30, [sp], #16
  4130c4:	ret
  4130c8:	sub	sp, sp, #0x20
  4130cc:	stp	x29, x30, [sp, #16]
  4130d0:	add	x29, sp, #0x10
  4130d4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4130d8:	mov	w1, w0
  4130dc:	ldr	x0, [x8, #1880]
  4130e0:	add	x3, sp, #0x8
  4130e4:	mov	w2, #0x1                   	// #1
  4130e8:	str	xzr, [sp, #8]
  4130ec:	bl	42ab94 <feof@plt+0x281c4>
  4130f0:	ldp	x29, x30, [sp, #16]
  4130f4:	cmp	w0, #0x1
  4130f8:	cset	w0, eq  // eq = none
  4130fc:	add	sp, sp, #0x20
  413100:	ret
  413104:	mov	w1, #0x1                   	// #1
  413108:	mov	w2, wzr
  41310c:	b	413110 <feof@plt+0x10740>
  413110:	sub	sp, sp, #0x70
  413114:	stp	x29, x30, [sp, #48]
  413118:	stp	x24, x23, [sp, #64]
  41311c:	stp	x22, x21, [sp, #80]
  413120:	stp	x20, x19, [sp, #96]
  413124:	add	x29, sp, #0x30
  413128:	mov	w23, w2
  41312c:	mov	w22, w1
  413130:	mov	w21, w0
  413134:	mov	x19, x8
  413138:	tbnz	w0, #31, 413158 <feof@plt+0x10788>
  41313c:	mov	x20, xzr
  413140:	cmp	w21, #0x2
  413144:	b.cc	413188 <feof@plt+0x107b8>  // b.lo, b.ul, b.last
  413148:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x25a68>
  41314c:	tbz	w22, #0, 413194 <feof@plt+0x107c4>
  413150:	mov	w2, wzr
  413154:	b	4131ac <feof@plt+0x107dc>
  413158:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  41315c:	ldr	x0, [x20, #1880]
  413160:	mov	w1, w21
  413164:	bl	429ce8 <feof@plt+0x27318>
  413168:	ldr	x8, [x20, #1880]
  41316c:	mov	x20, x0
  413170:	mov	w1, w21
  413174:	mov	x0, x8
  413178:	bl	429d00 <feof@plt+0x27330>
  41317c:	mov	w21, w0
  413180:	cmp	w21, #0x2
  413184:	b.cs	413148 <feof@plt+0x10778>  // b.hs, b.nlast
  413188:	mov	x22, xzr
  41318c:	mov	x23, xzr
  413190:	b	413230 <feof@plt+0x10860>
  413194:	ldr	x0, [x24, #1880]
  413198:	mov	w1, w21
  41319c:	mov	x2, xzr
  4131a0:	bl	42b418 <feof@plt+0x28a48>
  4131a4:	mov	w21, w0
  4131a8:	mov	w2, #0x1                   	// #1
  4131ac:	ldr	x0, [x24, #1880]
  4131b0:	sub	x3, x29, #0x8
  4131b4:	mov	w1, w21
  4131b8:	bl	42ab94 <feof@plt+0x281c4>
  4131bc:	mov	w21, w0
  4131c0:	cbz	w23, 41320c <feof@plt+0x1083c>
  4131c4:	cmp	w23, #0x1
  4131c8:	b.eq	4131f8 <feof@plt+0x10828>  // b.none
  4131cc:	cmp	w23, #0x2
  4131d0:	b.ne	413284 <feof@plt+0x108b4>  // b.any
  4131d4:	ldr	x0, [x24, #1880]
  4131d8:	mov	w1, w21
  4131dc:	bl	429d18 <feof@plt+0x27348>
  4131e0:	lsr	x0, x0, #32
  4131e4:	cmp	w21, w0
  4131e8:	b.eq	41320c <feof@plt+0x1083c>  // b.none
  4131ec:	and	w1, w22, #0x1
  4131f0:	mov	w2, #0x2                   	// #2
  4131f4:	b	413278 <feof@plt+0x108a8>
  4131f8:	ldr	x0, [x24, #1880]
  4131fc:	mov	w1, w21
  413200:	bl	429d18 <feof@plt+0x27348>
  413204:	cmp	w21, w0
  413208:	b.ne	413270 <feof@plt+0x108a0>  // b.any
  41320c:	ldr	x0, [x24, #1880]
  413210:	ldur	x1, [x29, #-8]
  413214:	add	x8, sp, #0x8
  413218:	mov	w2, w21
  41321c:	bl	42b67c <feof@plt+0x28cac>
  413220:	ldr	x23, [sp, #16]
  413224:	ldr	x22, [sp, #32]
  413228:	cmp	w21, #0x1
  41322c:	b.hi	41324c <feof@plt+0x1087c>  // b.pmore
  413230:	cbz	w21, 413244 <feof@plt+0x10874>
  413234:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  413238:	add	x0, x0, #0xb18
  41323c:	bl	402640 <gettext@plt>
  413240:	b	413250 <feof@plt+0x10880>
  413244:	mov	x0, xzr
  413248:	b	413250 <feof@plt+0x10880>
  41324c:	ldr	x0, [sp, #8]
  413250:	stp	x0, x23, [x19]
  413254:	stp	x20, x22, [x19, #16]
  413258:	ldp	x20, x19, [sp, #96]
  41325c:	ldp	x22, x21, [sp, #80]
  413260:	ldp	x24, x23, [sp, #64]
  413264:	ldp	x29, x30, [sp, #48]
  413268:	add	sp, sp, #0x70
  41326c:	ret
  413270:	and	w1, w22, #0x1
  413274:	mov	w2, #0x1                   	// #1
  413278:	mov	x8, x19
  41327c:	bl	413110 <feof@plt+0x10740>
  413280:	b	413258 <feof@plt+0x10888>
  413284:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  413288:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  41328c:	add	x0, x0, #0x268
  413290:	add	x2, x2, #0x932
  413294:	mov	w1, #0xc7                  	// #199
  413298:	bl	404ac4 <feof@plt+0x20f4>
  41329c:	mov	w2, w1
  4132a0:	mov	w1, wzr
  4132a4:	b	413110 <feof@plt+0x10740>
  4132a8:	mov	w2, w1
  4132ac:	mov	w1, wzr
  4132b0:	b	413110 <feof@plt+0x10740>
  4132b4:	stp	x29, x30, [sp, #-32]!
  4132b8:	stp	x20, x19, [sp, #16]
  4132bc:	mov	x29, sp
  4132c0:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  4132c4:	ldr	x8, [x20, #1880]
  4132c8:	mov	w19, w0
  4132cc:	mov	w1, w19
  4132d0:	mov	x0, x8
  4132d4:	bl	42af04 <feof@plt+0x28534>
  4132d8:	cbz	w0, 4132f8 <feof@plt+0x10928>
  4132dc:	ldr	x0, [x20, #1880]
  4132e0:	mov	w1, w19
  4132e4:	ldp	x20, x19, [sp, #16]
  4132e8:	mov	w2, wzr
  4132ec:	mov	x3, xzr
  4132f0:	ldp	x29, x30, [sp], #32
  4132f4:	b	42ab94 <feof@plt+0x281c4>
  4132f8:	mov	w0, w19
  4132fc:	ldp	x20, x19, [sp, #16]
  413300:	ldp	x29, x30, [sp], #32
  413304:	ret
  413308:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  41330c:	ldr	x8, [x8, #1880]
  413310:	mov	w1, w0
  413314:	mov	w2, wzr
  413318:	mov	x3, xzr
  41331c:	mov	x0, x8
  413320:	b	42ab94 <feof@plt+0x281c4>
  413324:	stp	x29, x30, [sp, #-48]!
  413328:	stp	x22, x21, [sp, #16]
  41332c:	stp	x20, x19, [sp, #32]
  413330:	mov	x29, sp
  413334:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  413338:	ldr	x8, [x22, #1880]
  41333c:	mov	w20, w1
  413340:	mov	w1, w0
  413344:	mov	w19, w2
  413348:	mov	x0, x8
  41334c:	bl	429e10 <feof@plt+0x27440>
  413350:	ldr	x8, [x22, #1880]
  413354:	mov	w21, w0
  413358:	mov	w1, w20
  41335c:	mov	x0, x8
  413360:	bl	429d18 <feof@plt+0x27348>
  413364:	ldr	x8, [x22, #1880]
  413368:	mov	x20, x0
  41336c:	mov	w1, w19
  413370:	mov	x0, x8
  413374:	bl	429d18 <feof@plt+0x27348>
  413378:	ldr	x8, [x22, #1880]
  41337c:	mov	x2, x0
  413380:	bfxil	x2, x20, #0, #32
  413384:	mov	w1, w21
  413388:	ldp	x20, x19, [sp, #32]
  41338c:	ldp	x22, x21, [sp, #16]
  413390:	mov	x0, x8
  413394:	mov	x3, xzr
  413398:	ldp	x29, x30, [sp], #48
  41339c:	b	42990c <feof@plt+0x26f3c>
  4133a0:	stp	x29, x30, [sp, #-32]!
  4133a4:	stp	x20, x19, [sp, #16]
  4133a8:	mov	x29, sp
  4133ac:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  4133b0:	ldr	x8, [x20, #1880]
  4133b4:	mov	x19, x1
  4133b8:	mov	w1, w0
  4133bc:	mov	x0, x8
  4133c0:	bl	429e10 <feof@plt+0x27440>
  4133c4:	ldr	x8, [x20, #1880]
  4133c8:	mov	x2, x19
  4133cc:	ldp	x20, x19, [sp, #16]
  4133d0:	mov	w1, w0
  4133d4:	mov	x0, x8
  4133d8:	mov	x3, xzr
  4133dc:	ldp	x29, x30, [sp], #32
  4133e0:	b	42990c <feof@plt+0x26f3c>
  4133e4:	sub	sp, sp, #0xd0
  4133e8:	stp	x29, x30, [sp, #112]
  4133ec:	stp	x28, x27, [sp, #128]
  4133f0:	stp	x26, x25, [sp, #144]
  4133f4:	stp	x24, x23, [sp, #160]
  4133f8:	stp	x22, x21, [sp, #176]
  4133fc:	stp	x20, x19, [sp, #192]
  413400:	add	x29, sp, #0x70
  413404:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  413408:	ldr	x0, [x8, #1880]
  41340c:	movi	v0.2d, #0x0
  413410:	mov	x1, sp
  413414:	str	xzr, [sp, #96]
  413418:	stp	q0, q0, [sp, #64]
  41341c:	stp	q0, q0, [sp, #32]
  413420:	stp	q0, q0, [sp]
  413424:	bl	42bcfc <feof@plt+0x2932c>
  413428:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  41342c:	ldr	x0, [x19, #1336]
  413430:	ldr	x2, [sp, #32]
  413434:	ldp	x25, x23, [sp, #64]
  413438:	ldp	x24, x21, [sp, #16]
  41343c:	ldr	x22, [sp, #56]
  413440:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413444:	add	x1, x1, #0x2a5
  413448:	bl	402440 <fprintf@plt>
  41344c:	ldr	x8, [sp, #32]
  413450:	cbz	x8, 41346c <feof@plt+0x10a9c>
  413454:	ldr	x9, [sp, #40]
  413458:	ldr	x0, [x19, #1336]
  41345c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413460:	add	x1, x1, #0x2da
  413464:	sdiv	x2, x9, x8
  413468:	bl	402440 <fprintf@plt>
  41346c:	ldr	x3, [x19, #1336]
  413470:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  413474:	add	x0, x0, #0x30f
  413478:	mov	w1, #0x37                  	// #55
  41347c:	mov	w2, #0x1                   	// #1
  413480:	bl	4028c0 <fwrite@plt>
  413484:	ldr	x8, [sp, #8]
  413488:	ldr	x0, [x19, #1336]
  41348c:	mov	w9, #0x2800                	// #10240
  413490:	cmp	x8, x9
  413494:	mov	x2, x8
  413498:	b.lt	4134b0 <feof@plt+0x10ae0>  // b.tstop
  41349c:	cmp	x8, #0xa00, lsl #12
  4134a0:	b.ge	4134ac <feof@plt+0x10adc>  // b.tcont
  4134a4:	lsr	x2, x8, #10
  4134a8:	b	4134b0 <feof@plt+0x10ae0>
  4134ac:	lsr	x2, x8, #20
  4134b0:	cmp	x8, #0xa00, lsl #12
  4134b4:	mov	w26, #0x4d                  	// #77
  4134b8:	mov	w27, #0x6b                  	// #107
  4134bc:	mov	w20, #0x2800                	// #10240
  4134c0:	csel	w9, w27, w26, lt  // lt = tstop
  4134c4:	cmp	x8, x20
  4134c8:	mov	w28, #0x20                  	// #32
  4134cc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4134d0:	csel	w3, w28, w9, lt  // lt = tstop
  4134d4:	add	x1, x1, #0x347
  4134d8:	bl	402440 <fprintf@plt>
  4134dc:	ldr	x8, [sp, #24]
  4134e0:	ldr	x0, [x19, #1336]
  4134e4:	cmp	x8, x20
  4134e8:	mov	x2, x8
  4134ec:	b.lt	413504 <feof@plt+0x10b34>  // b.tstop
  4134f0:	cmp	x8, #0xa00, lsl #12
  4134f4:	b.ge	413500 <feof@plt+0x10b30>  // b.tcont
  4134f8:	lsr	x2, x8, #10
  4134fc:	b	413504 <feof@plt+0x10b34>
  413500:	lsr	x2, x8, #20
  413504:	cmp	x8, #0xa00, lsl #12
  413508:	mov	w20, #0x2800                	// #10240
  41350c:	csel	w9, w27, w26, lt  // lt = tstop
  413510:	cmp	x8, x20
  413514:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413518:	csel	w3, w28, w9, lt  // lt = tstop
  41351c:	add	x1, x1, #0x374
  413520:	bl	402440 <fprintf@plt>
  413524:	ldr	x8, [sp]
  413528:	ldr	x0, [x19, #1336]
  41352c:	cmp	x8, x20
  413530:	mov	x2, x8
  413534:	b.lt	41354c <feof@plt+0x10b7c>  // b.tstop
  413538:	cmp	x8, #0xa00, lsl #12
  41353c:	b.ge	413548 <feof@plt+0x10b78>  // b.tcont
  413540:	lsr	x2, x8, #10
  413544:	b	41354c <feof@plt+0x10b7c>
  413548:	lsr	x2, x8, #20
  41354c:	cmp	x8, #0xa00, lsl #12
  413550:	mov	w26, #0x4d                  	// #77
  413554:	mov	w27, #0x6b                  	// #107
  413558:	mov	w20, #0x2800                	// #10240
  41355c:	csel	w9, w27, w26, lt  // lt = tstop
  413560:	cmp	x8, x20
  413564:	mov	w28, #0x20                  	// #32
  413568:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  41356c:	csel	w3, w28, w9, lt  // lt = tstop
  413570:	add	x1, x1, #0x3a1
  413574:	bl	402440 <fprintf@plt>
  413578:	ldr	x8, [sp, #16]
  41357c:	ldr	x0, [x19, #1336]
  413580:	cmp	x8, x20
  413584:	mov	x2, x8
  413588:	b.lt	4135a0 <feof@plt+0x10bd0>  // b.tstop
  41358c:	cmp	x8, #0xa00, lsl #12
  413590:	b.ge	41359c <feof@plt+0x10bcc>  // b.tcont
  413594:	lsr	x2, x8, #10
  413598:	b	4135a0 <feof@plt+0x10bd0>
  41359c:	lsr	x2, x8, #20
  4135a0:	cmp	x8, #0xa00, lsl #12
  4135a4:	mov	w20, #0x2800                	// #10240
  4135a8:	csel	w9, w27, w26, lt  // lt = tstop
  4135ac:	cmp	x8, x20
  4135b0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4135b4:	csel	w3, w28, w9, lt  // lt = tstop
  4135b8:	add	x1, x1, #0x3ce
  4135bc:	bl	402440 <fprintf@plt>
  4135c0:	ldr	x8, [sp, #48]
  4135c4:	ldr	x0, [x19, #1336]
  4135c8:	cmp	x8, x20
  4135cc:	mov	x2, x8
  4135d0:	b.lt	4135e8 <feof@plt+0x10c18>  // b.tstop
  4135d4:	cmp	x8, #0xa00, lsl #12
  4135d8:	b.ge	4135e4 <feof@plt+0x10c14>  // b.tcont
  4135dc:	lsr	x2, x8, #10
  4135e0:	b	4135e8 <feof@plt+0x10c18>
  4135e4:	lsr	x2, x8, #20
  4135e8:	cmp	x8, #0xa00, lsl #12
  4135ec:	mov	w26, #0x4d                  	// #77
  4135f0:	mov	w27, #0x6b                  	// #107
  4135f4:	mov	w20, #0x2800                	// #10240
  4135f8:	csel	w9, w27, w26, lt  // lt = tstop
  4135fc:	cmp	x8, x20
  413600:	mov	w28, #0x20                  	// #32
  413604:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413608:	csel	w3, w28, w9, lt  // lt = tstop
  41360c:	add	x1, x1, #0x3fb
  413610:	bl	402440 <fprintf@plt>
  413614:	ldr	x8, [sp, #64]
  413618:	ldr	x0, [x19, #1336]
  41361c:	cmp	x8, x20
  413620:	mov	x2, x8
  413624:	b.lt	41363c <feof@plt+0x10c6c>  // b.tstop
  413628:	cmp	x8, #0xa00, lsl #12
  41362c:	b.ge	413638 <feof@plt+0x10c68>  // b.tcont
  413630:	lsr	x2, x8, #10
  413634:	b	41363c <feof@plt+0x10c6c>
  413638:	lsr	x2, x8, #20
  41363c:	cmp	x8, #0xa00, lsl #12
  413640:	mov	w20, #0x2800                	// #10240
  413644:	csel	w9, w27, w26, lt  // lt = tstop
  413648:	cmp	x8, x20
  41364c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413650:	csel	w3, w28, w9, lt  // lt = tstop
  413654:	add	x1, x1, #0x428
  413658:	add	x25, x23, x25
  41365c:	bl	402440 <fprintf@plt>
  413660:	ldr	x8, [sp, #72]
  413664:	ldr	x0, [x19, #1336]
  413668:	cmp	x8, x20
  41366c:	mov	x2, x8
  413670:	b.lt	413688 <feof@plt+0x10cb8>  // b.tstop
  413674:	cmp	x8, #0xa00, lsl #12
  413678:	b.ge	413684 <feof@plt+0x10cb4>  // b.tcont
  41367c:	lsr	x2, x8, #10
  413680:	b	413688 <feof@plt+0x10cb8>
  413684:	lsr	x2, x8, #20
  413688:	add	x24, x24, x23
  41368c:	cmp	x8, #0xa00, lsl #12
  413690:	mov	w23, #0x4d                  	// #77
  413694:	mov	w26, #0x6b                  	// #107
  413698:	mov	w20, #0x2800                	// #10240
  41369c:	csel	w9, w26, w23, lt  // lt = tstop
  4136a0:	cmp	x8, x20
  4136a4:	mov	w27, #0x20                  	// #32
  4136a8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4136ac:	csel	w3, w27, w9, lt  // lt = tstop
  4136b0:	add	x1, x1, #0x455
  4136b4:	bl	402440 <fprintf@plt>
  4136b8:	ldr	x0, [x19, #1336]
  4136bc:	cmp	x25, x20
  4136c0:	mov	x2, x25
  4136c4:	b.lt	4136dc <feof@plt+0x10d0c>  // b.tstop
  4136c8:	cmp	x25, #0xa00, lsl #12
  4136cc:	b.ge	4136d8 <feof@plt+0x10d08>  // b.tcont
  4136d0:	lsr	x2, x25, #10
  4136d4:	b	4136dc <feof@plt+0x10d0c>
  4136d8:	lsr	x2, x25, #20
  4136dc:	cmp	x25, #0xa00, lsl #12
  4136e0:	mov	w20, #0x2800                	// #10240
  4136e4:	csel	w8, w26, w23, lt  // lt = tstop
  4136e8:	cmp	x25, x20
  4136ec:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4136f0:	csel	w3, w27, w8, lt  // lt = tstop
  4136f4:	add	x1, x1, #0x482
  4136f8:	add	x22, x24, x22
  4136fc:	bl	402440 <fprintf@plt>
  413700:	ldr	x8, [sp, #80]
  413704:	ldr	x0, [x19, #1336]
  413708:	cmp	x8, x20
  41370c:	mov	x2, x8
  413710:	b.lt	413728 <feof@plt+0x10d58>  // b.tstop
  413714:	cmp	x8, #0xa00, lsl #12
  413718:	b.ge	413724 <feof@plt+0x10d54>  // b.tcont
  41371c:	lsr	x2, x8, #10
  413720:	b	413728 <feof@plt+0x10d58>
  413724:	lsr	x2, x8, #20
  413728:	cmp	x8, #0xa00, lsl #12
  41372c:	mov	w23, #0x4d                  	// #77
  413730:	mov	w24, #0x6b                  	// #107
  413734:	mov	w20, #0x2800                	// #10240
  413738:	add	x21, x25, x21
  41373c:	csel	w9, w24, w23, lt  // lt = tstop
  413740:	cmp	x8, x20
  413744:	mov	w25, #0x20                  	// #32
  413748:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  41374c:	csel	w3, w25, w9, lt  // lt = tstop
  413750:	add	x1, x1, #0x4af
  413754:	bl	402440 <fprintf@plt>
  413758:	ldr	x0, [x19, #1336]
  41375c:	cmp	x22, x20
  413760:	mov	x2, x22
  413764:	b.lt	41377c <feof@plt+0x10dac>  // b.tstop
  413768:	cmp	x22, #0xa00, lsl #12
  41376c:	b.ge	413778 <feof@plt+0x10da8>  // b.tcont
  413770:	lsr	x2, x22, #10
  413774:	b	41377c <feof@plt+0x10dac>
  413778:	lsr	x2, x22, #20
  41377c:	cmp	x22, #0xa00, lsl #12
  413780:	mov	w20, #0x2800                	// #10240
  413784:	csel	w8, w24, w23, lt  // lt = tstop
  413788:	cmp	x22, x20
  41378c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413790:	csel	w3, w25, w8, lt  // lt = tstop
  413794:	add	x1, x1, #0x4dc
  413798:	bl	402440 <fprintf@plt>
  41379c:	ldr	x0, [x19, #1336]
  4137a0:	cmp	x21, x20
  4137a4:	mov	x2, x21
  4137a8:	b.lt	4137c0 <feof@plt+0x10df0>  // b.tstop
  4137ac:	cmp	x21, #0xa00, lsl #12
  4137b0:	b.ge	4137bc <feof@plt+0x10dec>  // b.tcont
  4137b4:	lsr	x2, x21, #10
  4137b8:	b	4137c0 <feof@plt+0x10df0>
  4137bc:	lsr	x2, x21, #20
  4137c0:	cmp	x21, #0xa00, lsl #12
  4137c4:	mov	w22, #0x4d                  	// #77
  4137c8:	mov	w23, #0x6b                  	// #107
  4137cc:	mov	w20, #0x2800                	// #10240
  4137d0:	csel	w8, w23, w22, lt  // lt = tstop
  4137d4:	cmp	x21, x20
  4137d8:	mov	w21, #0x20                  	// #32
  4137dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4137e0:	csel	w3, w21, w8, lt  // lt = tstop
  4137e4:	add	x1, x1, #0x509
  4137e8:	bl	402440 <fprintf@plt>
  4137ec:	ldr	x8, [sp, #88]
  4137f0:	ldr	x0, [x19, #1336]
  4137f4:	cmp	x8, x20
  4137f8:	mov	x2, x8
  4137fc:	b.lt	413814 <feof@plt+0x10e44>  // b.tstop
  413800:	cmp	x8, #0xa00, lsl #12
  413804:	b.ge	413810 <feof@plt+0x10e40>  // b.tcont
  413808:	lsr	x2, x8, #10
  41380c:	b	413814 <feof@plt+0x10e44>
  413810:	lsr	x2, x8, #20
  413814:	cmp	x8, #0xa00, lsl #12
  413818:	mov	w20, #0x2800                	// #10240
  41381c:	csel	w9, w23, w22, lt  // lt = tstop
  413820:	cmp	x8, x20
  413824:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413828:	csel	w3, w21, w9, lt  // lt = tstop
  41382c:	add	x1, x1, #0x536
  413830:	bl	402440 <fprintf@plt>
  413834:	ldr	x8, [sp, #96]
  413838:	ldr	x0, [x19, #1336]
  41383c:	cmp	x8, x20
  413840:	mov	x2, x8
  413844:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  413848:	b.lt	413860 <feof@plt+0x10e90>  // b.tstop
  41384c:	cmp	x8, #0xa00, lsl #12
  413850:	b.ge	41385c <feof@plt+0x10e8c>  // b.tcont
  413854:	lsr	x2, x8, #10
  413858:	b	413860 <feof@plt+0x10e90>
  41385c:	lsr	x2, x8, #20
  413860:	cmp	x8, #0xa00, lsl #12
  413864:	mov	w21, #0x4d                  	// #77
  413868:	mov	w22, #0x6b                  	// #107
  41386c:	mov	w9, #0x2800                	// #10240
  413870:	csel	w10, w22, w21, lt  // lt = tstop
  413874:	cmp	x8, x9
  413878:	mov	w23, #0x20                  	// #32
  41387c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413880:	csel	w3, w23, w10, lt  // lt = tstop
  413884:	add	x1, x1, #0x563
  413888:	bl	402440 <fprintf@plt>
  41388c:	ldr	x8, [x20, #1880]
  413890:	ldr	x0, [x19, #1336]
  413894:	ldr	w8, [x8, #124]
  413898:	lsr	w9, w8, #11
  41389c:	cmp	w9, #0x5
  4138a0:	mov	w10, w8
  4138a4:	b.cc	4138c0 <feof@plt+0x10ef0>  // b.lo, b.ul, b.last
  4138a8:	lsr	w10, w8, #21
  4138ac:	cmp	w10, #0x4
  4138b0:	b.hi	4138bc <feof@plt+0x10eec>  // b.pmore
  4138b4:	lsr	w10, w8, #10
  4138b8:	b	4138c0 <feof@plt+0x10ef0>
  4138bc:	lsr	w10, w8, #20
  4138c0:	cmp	w8, #0xa00, lsl #12
  4138c4:	csel	w8, w22, w21, cc  // cc = lo, ul, last
  4138c8:	cmp	w9, #0x5
  4138cc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4138d0:	mov	w2, w10
  4138d4:	csel	w3, w23, w8, cc  // cc = lo, ul, last
  4138d8:	add	x1, x1, #0x590
  4138dc:	bl	402440 <fprintf@plt>
  4138e0:	ldr	x8, [x20, #1880]
  4138e4:	ldr	x0, [x19, #1336]
  4138e8:	ldr	w9, [x8, #128]
  4138ec:	lsr	w8, w9, #11
  4138f0:	cmp	w8, #0x5
  4138f4:	mov	w10, w9
  4138f8:	b.cc	413914 <feof@plt+0x10f44>  // b.lo, b.ul, b.last
  4138fc:	lsr	w10, w9, #21
  413900:	cmp	w10, #0x4
  413904:	b.hi	413910 <feof@plt+0x10f40>  // b.pmore
  413908:	lsr	w10, w9, #10
  41390c:	b	413914 <feof@plt+0x10f44>
  413910:	lsr	w10, w9, #20
  413914:	mov	w2, w10
  413918:	cmp	w9, #0xa00, lsl #12
  41391c:	mov	w9, #0x4d                  	// #77
  413920:	mov	w10, #0x6b                  	// #107
  413924:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  413928:	cmp	w8, #0x5
  41392c:	mov	w8, #0x20                  	// #32
  413930:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413934:	csel	w3, w8, w9, cc  // cc = lo, ul, last
  413938:	add	x1, x1, #0x5bd
  41393c:	bl	402440 <fprintf@plt>
  413940:	ldr	x1, [x19, #1336]
  413944:	mov	w0, #0xa                   	// #10
  413948:	bl	4026d0 <fputc@plt>
  41394c:	ldp	x20, x19, [sp, #192]
  413950:	ldp	x22, x21, [sp, #176]
  413954:	ldp	x24, x23, [sp, #160]
  413958:	ldp	x26, x25, [sp, #144]
  41395c:	ldp	x28, x27, [sp, #128]
  413960:	ldp	x29, x30, [sp, #112]
  413964:	add	sp, sp, #0xd0
  413968:	ret
  41396c:	sub	sp, sp, #0xa0
  413970:	stp	x29, x30, [sp, #64]
  413974:	stp	x28, x27, [sp, #80]
  413978:	stp	x26, x25, [sp, #96]
  41397c:	stp	x24, x23, [sp, #112]
  413980:	stp	x22, x21, [sp, #128]
  413984:	stp	x20, x19, [sp, #144]
  413988:	add	x29, sp, #0x40
  41398c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  413990:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  413994:	add	x1, x1, #0xec9
  413998:	add	x2, x2, #0x5ea
  41399c:	mov	x19, x0
  4139a0:	bl	402440 <fprintf@plt>
  4139a4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4139a8:	add	x1, x1, #0x944
  4139ac:	mov	w3, #0x2                   	// #2
  4139b0:	mov	x0, x19
  4139b4:	mov	w2, wzr
  4139b8:	bl	402440 <fprintf@plt>
  4139bc:	mov	w0, #0xa                   	// #10
  4139c0:	mov	x1, x19
  4139c4:	mov	w28, #0xa                   	// #10
  4139c8:	bl	4026d0 <fputc@plt>
  4139cc:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  4139d0:	ldr	x8, [x21, #1880]
  4139d4:	ldr	w9, [x8, #12]
  4139d8:	cbz	w9, 413ebc <feof@plt+0x114ec>
  4139dc:	mov	w22, #0xcccd                	// #52429
  4139e0:	mov	w24, #0x851f                	// #34079
  4139e4:	mov	w20, #0x6667                	// #26215
  4139e8:	mov	w2, wzr
  4139ec:	mov	w10, #0x18                  	// #24
  4139f0:	movk	w22, #0xcccc, lsl #16
  4139f4:	movk	w24, #0x51eb, lsl #16
  4139f8:	movk	w20, #0x6666, lsl #16
  4139fc:	b	413a28 <feof@plt+0x11058>
  413a00:	mov	w0, #0xa                   	// #10
  413a04:	mov	x1, x19
  413a08:	bl	4026d0 <fputc@plt>
  413a0c:	ldr	x8, [x21, #1880]
  413a10:	ldr	x2, [sp, #8]
  413a14:	mov	w10, #0x18                  	// #24
  413a18:	ldr	w9, [x8, #12]
  413a1c:	add	w2, w2, #0x1
  413a20:	cmp	w2, w9
  413a24:	b.cs	413ebc <feof@plt+0x114ec>  // b.hs, b.nlast
  413a28:	sub	w9, w9, #0x1
  413a2c:	cmp	w9, w2
  413a30:	b.ne	413a3c <feof@plt+0x1106c>  // b.any
  413a34:	ldr	x23, [x8], #56
  413a38:	b	413a48 <feof@plt+0x11078>
  413a3c:	ldr	x23, [x8]
  413a40:	add	w8, w2, #0x1
  413a44:	smaddl	x8, w8, w10, x23
  413a48:	ldr	w25, [x8]
  413a4c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413a50:	mov	x0, x19
  413a54:	add	x1, x1, #0x5fd
  413a58:	sxtw	x26, w2
  413a5c:	smaddl	x27, w2, w10, x23
  413a60:	str	x2, [sp, #8]
  413a64:	bl	402440 <fprintf@plt>
  413a68:	ldr	w2, [x27]
  413a6c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413a70:	mov	x0, x19
  413a74:	add	x1, x1, #0x944
  413a78:	mov	w3, w25
  413a7c:	str	w25, [sp, #28]
  413a80:	bl	402440 <fprintf@plt>
  413a84:	ldr	x2, [x27, #8]
  413a88:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413a8c:	mov	x0, x19
  413a90:	add	x1, x1, #0x60f
  413a94:	bl	402440 <fprintf@plt>
  413a98:	ldr	w2, [x27, #16]
  413a9c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413aa0:	mov	x0, x19
  413aa4:	add	x1, x1, #0x61b
  413aa8:	bl	402440 <fprintf@plt>
  413aac:	mov	x25, x27
  413ab0:	ldrb	w2, [x25, #6]!
  413ab4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413ab8:	mov	x0, x19
  413abc:	add	x1, x1, #0x633
  413ac0:	bl	402440 <fprintf@plt>
  413ac4:	ldrh	w8, [x25]
  413ac8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413acc:	mov	x0, x19
  413ad0:	add	x1, x1, #0x650
  413ad4:	and	w9, w8, #0xff
  413ad8:	sub	w2, w9, w8, lsr #8
  413adc:	bl	402440 <fprintf@plt>
  413ae0:	ldrb	w2, [x27, #7]
  413ae4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413ae8:	mov	x0, x19
  413aec:	add	x1, x1, #0x663
  413af0:	bl	402440 <fprintf@plt>
  413af4:	ldrsb	x8, [x27, #4]
  413af8:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x1a68>
  413afc:	add	x3, x3, #0x6b4
  413b00:	str	x27, [sp, #16]
  413b04:	cmp	x8, #0x4
  413b08:	b.hi	413b18 <feof@plt+0x11148>  // b.pmore
  413b0c:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x1a68>
  413b10:	add	x9, x9, #0xb50
  413b14:	ldr	x3, [x9, x8, lsl #3]
  413b18:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413b1c:	and	w2, w8, #0xff
  413b20:	mov	x0, x19
  413b24:	add	x1, x1, #0x6bc
  413b28:	bl	402440 <fprintf@plt>
  413b2c:	ldr	x0, [x21, #1880]
  413b30:	ldr	x1, [sp, #16]
  413b34:	bl	429f10 <feof@plt+0x27540>
  413b38:	mov	w8, #0x18                  	// #24
  413b3c:	madd	x8, x26, x8, x23
  413b40:	ldr	w2, [x8, #20]
  413b44:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413b48:	mov	x26, x0
  413b4c:	mov	x0, x19
  413b50:	add	x1, x1, #0x6cf
  413b54:	bl	402440 <fprintf@plt>
  413b58:	cbz	x26, 413b88 <feof@plt+0x111b8>
  413b5c:	ldr	x8, [x21, #1880]
  413b60:	mov	w9, #0xaaab                	// #43691
  413b64:	movk	w9, #0xaaaa, lsl #16
  413b68:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413b6c:	ldr	x8, [x8]
  413b70:	mov	x0, x19
  413b74:	add	x1, x1, #0x6ec
  413b78:	sub	x8, x26, x8
  413b7c:	lsr	x8, x8, #3
  413b80:	mul	w2, w8, w9
  413b84:	bl	402440 <fprintf@plt>
  413b88:	mov	w0, #0xa                   	// #10
  413b8c:	mov	x1, x19
  413b90:	bl	4026d0 <fputc@plt>
  413b94:	ldr	x27, [sp, #16]
  413b98:	ldr	w8, [sp, #28]
  413b9c:	mov	w23, #0x1                   	// #1
  413ba0:	ldr	w26, [x27]
  413ba4:	cmp	w26, w8
  413ba8:	b.cc	413c0c <feof@plt+0x1123c>  // b.lo, b.ul, b.last
  413bac:	b	413a00 <feof@plt+0x11030>
  413bb0:	mov	w0, #0xa                   	// #10
  413bb4:	mov	x1, x19
  413bb8:	bl	4026d0 <fputc@plt>
  413bbc:	mov	w3, #0x20                  	// #32
  413bc0:	mov	x0, x19
  413bc4:	mov	x1, x21
  413bc8:	mov	w2, w27
  413bcc:	bl	402440 <fprintf@plt>
  413bd0:	mov	w0, #0x7c                  	// #124
  413bd4:	mov	x1, x19
  413bd8:	bl	4026d0 <fputc@plt>
  413bdc:	mov	w0, #0xa                   	// #10
  413be0:	mov	x1, x19
  413be4:	bl	4026d0 <fputc@plt>
  413be8:	ldr	x27, [sp, #16]
  413bec:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  413bf0:	mov	w23, #0x1                   	// #1
  413bf4:	ldrb	w8, [x25, #1]
  413bf8:	lsl	w8, w23, w8
  413bfc:	add	w26, w8, w26
  413c00:	ldr	w8, [sp, #28]
  413c04:	cmp	w26, w8
  413c08:	b.cs	413a00 <feof@plt+0x11030>  // b.hs, b.nlast
  413c0c:	ldr	x0, [x21, #1880]
  413c10:	mov	w1, w26
  413c14:	bl	429dc4 <feof@plt+0x273f4>
  413c18:	tbz	w0, #0, 414160 <feof@plt+0x11790>
  413c1c:	ldr	x0, [x21, #1880]
  413c20:	add	x8, sp, #0x20
  413c24:	mov	x1, x27
  413c28:	mov	w2, w26
  413c2c:	bl	42b67c <feof@plt+0x28cac>
  413c30:	ldr	w8, [sp, #44]
  413c34:	cbnz	w8, 413bf4 <feof@plt+0x11224>
  413c38:	ldr	x0, [sp, #32]
  413c3c:	ldr	w1, [sp, #40]
  413c40:	bl	412d44 <feof@plt+0x10374>
  413c44:	cbz	x0, 413a00 <feof@plt+0x11030>
  413c48:	ldr	x2, [sp, #32]
  413c4c:	ldr	w3, [sp, #40]
  413c50:	mov	x27, x1
  413c54:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413c58:	mov	x6, x0
  413c5c:	mov	x0, x19
  413c60:	add	x1, x1, #0x715
  413c64:	mov	w4, w26
  413c68:	mov	w5, w27
  413c6c:	bl	402440 <fprintf@plt>
  413c70:	ldrb	w8, [x25]
  413c74:	mov	w9, #0xffffffff            	// #-1
  413c78:	ldr	w0, [sp, #40]
  413c7c:	lsl	w8, w9, w8
  413c80:	mvn	w8, w8
  413c84:	sxtw	x8, w8
  413c88:	cmp	x27, x8
  413c8c:	csinc	x23, x8, x27, cs  // cs = hs, nlast
  413c90:	bl	405c14 <feof@plt+0x3244>
  413c94:	cmp	w0, #0x3
  413c98:	mov	w8, #0x3                   	// #3
  413c9c:	csel	w21, w0, w8, gt
  413ca0:	mov	w0, w26
  413ca4:	bl	405c14 <feof@plt+0x3244>
  413ca8:	ldr	x8, [sp, #32]
  413cac:	cmp	w0, #0x5
  413cb0:	mov	w9, #0x5                   	// #5
  413cb4:	csel	w27, w0, w9, gt
  413cb8:	mov	x0, x8
  413cbc:	bl	402420 <strlen@plt>
  413cc0:	ldr	w9, [sp, #28]
  413cc4:	add	w8, w21, w27
  413cc8:	add	w8, w8, w0
  413ccc:	add	w27, w8, #0x6
  413cd0:	cmp	w9, #0x3e8
  413cd4:	b.cc	413d5c <feof@plt+0x1138c>  // b.lo, b.ul, b.last
  413cd8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413cdc:	mov	w3, #0x20                  	// #32
  413ce0:	mov	x0, x19
  413ce4:	add	x1, x1, #0x96b
  413ce8:	mov	w2, w27
  413cec:	bl	402440 <fprintf@plt>
  413cf0:	mov	w0, #0x7c                  	// #124
  413cf4:	mov	x1, x19
  413cf8:	bl	4026d0 <fputc@plt>
  413cfc:	mov	w24, #0x4dd3                	// #19923
  413d00:	cmp	w23, #0x2
  413d04:	movk	w24, #0x1062, lsl #16
  413d08:	b.lt	413d48 <feof@plt+0x11378>  // b.tstop
  413d0c:	mov	w21, #0x1                   	// #1
  413d10:	ldrb	w8, [x25, #1]
  413d14:	mov	x1, x19
  413d18:	lsl	w8, w21, w8
  413d1c:	add	w8, w8, w26
  413d20:	umull	x8, w8, w24
  413d24:	lsr	x8, x8, #38
  413d28:	mul	x9, x8, x22
  413d2c:	lsr	x9, x9, #35
  413d30:	msub	w8, w9, w28, w8
  413d34:	orr	w0, w8, #0x30
  413d38:	bl	4026d0 <fputc@plt>
  413d3c:	add	w21, w21, #0x1
  413d40:	cmp	w23, w21
  413d44:	b.ne	413d10 <feof@plt+0x11340>  // b.any
  413d48:	mov	w0, #0xa                   	// #10
  413d4c:	mov	x1, x19
  413d50:	bl	4026d0 <fputc@plt>
  413d54:	mov	w24, #0x851f                	// #34079
  413d58:	movk	w24, #0x51eb, lsl #16
  413d5c:	ldr	w8, [sp, #28]
  413d60:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x1a68>
  413d64:	add	x21, x21, #0x96b
  413d68:	cmp	w8, #0x64
  413d6c:	b.cc	413de8 <feof@plt+0x11418>  // b.lo, b.ul, b.last
  413d70:	mov	w3, #0x20                  	// #32
  413d74:	mov	x0, x19
  413d78:	mov	x1, x21
  413d7c:	mov	w2, w27
  413d80:	bl	402440 <fprintf@plt>
  413d84:	mov	w0, #0x7c                  	// #124
  413d88:	mov	x1, x19
  413d8c:	bl	4026d0 <fputc@plt>
  413d90:	cmp	w23, #0x2
  413d94:	b.lt	413dd4 <feof@plt+0x11404>  // b.tstop
  413d98:	mov	w21, #0x1                   	// #1
  413d9c:	ldrb	w8, [x25, #1]
  413da0:	mov	x1, x19
  413da4:	lsl	w8, w21, w8
  413da8:	add	w8, w8, w26
  413dac:	umull	x8, w8, w24
  413db0:	lsr	x8, x8, #37
  413db4:	mul	x9, x8, x22
  413db8:	lsr	x9, x9, #35
  413dbc:	msub	w8, w9, w28, w8
  413dc0:	orr	w0, w8, #0x30
  413dc4:	bl	4026d0 <fputc@plt>
  413dc8:	add	w21, w21, #0x1
  413dcc:	cmp	w23, w21
  413dd0:	b.ne	413d9c <feof@plt+0x113cc>  // b.any
  413dd4:	mov	w0, #0xa                   	// #10
  413dd8:	mov	x1, x19
  413ddc:	bl	4026d0 <fputc@plt>
  413de0:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x1a68>
  413de4:	add	x21, x21, #0x96b
  413de8:	mov	w3, #0x20                  	// #32
  413dec:	mov	x0, x19
  413df0:	mov	x1, x21
  413df4:	mov	w2, w27
  413df8:	bl	402440 <fprintf@plt>
  413dfc:	mov	w0, #0x7c                  	// #124
  413e00:	mov	x1, x19
  413e04:	bl	4026d0 <fputc@plt>
  413e08:	cmp	w23, #0x2
  413e0c:	b.lt	413bb0 <feof@plt+0x111e0>  // b.tstop
  413e10:	mov	w21, #0x1                   	// #1
  413e14:	ldrb	w8, [x25, #1]
  413e18:	mov	x1, x19
  413e1c:	lsl	w8, w21, w8
  413e20:	add	w8, w8, w26
  413e24:	umull	x8, w8, w22
  413e28:	lsr	x8, x8, #35
  413e2c:	mul	x9, x8, x22
  413e30:	lsr	x9, x9, #35
  413e34:	msub	w8, w9, w28, w8
  413e38:	orr	w0, w8, #0x30
  413e3c:	bl	4026d0 <fputc@plt>
  413e40:	add	w21, w21, #0x1
  413e44:	cmp	w23, w21
  413e48:	b.ne	413e14 <feof@plt+0x11444>  // b.any
  413e4c:	mov	w0, #0xa                   	// #10
  413e50:	mov	x1, x19
  413e54:	bl	4026d0 <fputc@plt>
  413e58:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413e5c:	mov	w3, #0x20                  	// #32
  413e60:	mov	x0, x19
  413e64:	add	x1, x1, #0x96b
  413e68:	mov	w2, w27
  413e6c:	bl	402440 <fprintf@plt>
  413e70:	mov	w0, #0x7c                  	// #124
  413e74:	mov	x1, x19
  413e78:	bl	4026d0 <fputc@plt>
  413e7c:	mov	w21, #0x1                   	// #1
  413e80:	ldrb	w8, [x25, #1]
  413e84:	mov	x1, x19
  413e88:	lsl	w8, w21, w8
  413e8c:	add	w8, w8, w26
  413e90:	smull	x9, w8, w20
  413e94:	lsr	x10, x9, #63
  413e98:	asr	x9, x9, #34
  413e9c:	add	w9, w9, w10
  413ea0:	msub	w8, w9, w28, w8
  413ea4:	add	w0, w8, #0x30
  413ea8:	bl	4026d0 <fputc@plt>
  413eac:	add	w21, w21, #0x1
  413eb0:	cmp	w23, w21
  413eb4:	b.ne	413e80 <feof@plt+0x114b0>  // b.any
  413eb8:	b	413bdc <feof@plt+0x1120c>
  413ebc:	ldr	w9, [x8, #36]
  413ec0:	ldr	w20, [x8, #56]
  413ec4:	cbz	w9, 413edc <feof@plt+0x1150c>
  413ec8:	ldr	x8, [x8, #24]
  413ecc:	sub	w9, w9, #0x1
  413ed0:	sbfiz	x9, x9, #5, #32
  413ed4:	ldr	w21, [x8, x9]
  413ed8:	b	413ee0 <feof@plt+0x11510>
  413edc:	mov	w21, #0x80000000            	// #-2147483648
  413ee0:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  413ee4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  413ee8:	add	x1, x1, #0xec9
  413eec:	add	x2, x2, #0x72a
  413ef0:	mov	x0, x19
  413ef4:	bl	402440 <fprintf@plt>
  413ef8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413efc:	add	x1, x1, #0x944
  413f00:	mov	x0, x19
  413f04:	mov	w2, w20
  413f08:	mov	w3, w21
  413f0c:	bl	402440 <fprintf@plt>
  413f10:	mov	w0, #0xa                   	// #10
  413f14:	mov	x1, x19
  413f18:	bl	4026d0 <fputc@plt>
  413f1c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  413f20:	ldr	x8, [x8, #1880]
  413f24:	ldr	w9, [x8, #36]
  413f28:	cbz	w9, 4140c8 <feof@plt+0x116f8>
  413f2c:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  413f30:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x1a68>
  413f34:	mov	w10, wzr
  413f38:	add	x25, x25, #0x7a8
  413f3c:	add	x20, x20, #0x835
  413f40:	b	413f68 <feof@plt+0x11598>
  413f44:	mov	w0, #0xa                   	// #10
  413f48:	mov	x1, x19
  413f4c:	bl	4026d0 <fputc@plt>
  413f50:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  413f54:	ldr	x8, [x8, #1880]
  413f58:	ldr	w10, [sp, #28]
  413f5c:	ldr	w9, [x8, #36]
  413f60:	cmp	w10, w9
  413f64:	b.cs	4140c8 <feof@plt+0x116f8>  // b.hs, b.nlast
  413f68:	ldr	x8, [x8, #24]
  413f6c:	add	w10, w10, #0x1
  413f70:	sub	w22, w9, w10
  413f74:	sxtw	x9, w22
  413f78:	add	x27, x8, x9, lsl #5
  413f7c:	mov	x0, x27
  413f80:	str	w10, [sp, #28]
  413f84:	bl	42aef8 <feof@plt+0x28528>
  413f88:	mov	x21, x27
  413f8c:	ldr	w4, [x21, #4]!
  413f90:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413f94:	mov	x3, x0
  413f98:	mov	x0, x19
  413f9c:	add	x1, x1, #0x740
  413fa0:	mov	w2, w22
  413fa4:	bl	402440 <fprintf@plt>
  413fa8:	ldr	w2, [x27]
  413fac:	ldr	w8, [x21]
  413fb0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413fb4:	mov	x0, x19
  413fb8:	add	x1, x1, #0x944
  413fbc:	add	w3, w8, w2
  413fc0:	bl	402440 <fprintf@plt>
  413fc4:	ldr	w0, [x27, #24]
  413fc8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413fcc:	add	x1, x1, #0x75a
  413fd0:	mov	w2, w0
  413fd4:	bl	40620c <feof@plt+0x383c>
  413fd8:	ldr	w2, [x27]
  413fdc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  413fe0:	mov	x0, x19
  413fe4:	add	x1, x1, #0x779
  413fe8:	bl	402440 <fprintf@plt>
  413fec:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  413ff0:	mov	w1, #0x13                  	// #19
  413ff4:	mov	w2, #0x1                   	// #1
  413ff8:	add	x0, x0, #0x794
  413ffc:	mov	x3, x19
  414000:	bl	4028c0 <fwrite@plt>
  414004:	ldr	w8, [x21]
  414008:	cbz	w8, 413f44 <feof@plt+0x11574>
  41400c:	mov	x22, xzr
  414010:	add	x26, x27, #0x10
  414014:	mov	w28, #0x1                   	// #1
  414018:	b	41405c <feof@plt+0x1168c>
  41401c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  414020:	mov	w0, w23
  414024:	add	x1, x1, #0x817
  414028:	mov	w2, w22
  41402c:	mov	w3, w23
  414030:	bl	40620c <feof@plt+0x383c>
  414034:	mov	w0, w23
  414038:	mov	x1, x20
  41403c:	mov	w2, w22
  414040:	mov	w3, w24
  414044:	bl	40620c <feof@plt+0x383c>
  414048:	ldr	w8, [x21]
  41404c:	add	x22, x22, #0x1
  414050:	add	w28, w28, #0x2
  414054:	cmp	x22, x8
  414058:	b.cs	413f44 <feof@plt+0x11574>  // b.hs, b.nlast
  41405c:	ldr	x8, [x26]
  414060:	sub	w9, w28, #0x1
  414064:	mov	x0, x19
  414068:	mov	x1, x25
  41406c:	ldr	w23, [x8, w9, uxtw #2]
  414070:	ldr	w24, [x8, w28, uxtw #2]
  414074:	mov	w2, w22
  414078:	mov	w3, w23
  41407c:	mov	w4, w24
  414080:	bl	402440 <fprintf@plt>
  414084:	cmp	w23, w24
  414088:	b.ne	41401c <feof@plt+0x1164c>  // b.any
  41408c:	ldr	w8, [x27]
  414090:	subs	w3, w23, w8
  414094:	b.cs	4140b0 <feof@plt+0x116e0>  // b.hs, b.nlast
  414098:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  41409c:	mov	w0, w23
  4140a0:	add	x1, x1, #0x7b8
  4140a4:	mov	w2, w22
  4140a8:	mov	w3, w23
  4140ac:	b	414044 <feof@plt+0x11674>
  4140b0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4140b4:	mov	x0, x19
  4140b8:	add	x1, x1, #0x7e4
  4140bc:	mov	w2, w23
  4140c0:	bl	402440 <fprintf@plt>
  4140c4:	b	414048 <feof@plt+0x11678>
  4140c8:	adrp	x20, 451000 <_obstack_memory_used@@Base+0xa68>
  4140cc:	add	x20, x20, #0xec9
  4140d0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  4140d4:	add	x2, x2, #0x853
  4140d8:	mov	x0, x19
  4140dc:	mov	x1, x20
  4140e0:	bl	402440 <fprintf@plt>
  4140e4:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x1a68>
  4140e8:	add	x21, x21, #0x944
  4140ec:	mov	w2, #0x7fffffff            	// #2147483647
  4140f0:	mov	w3, #0x80000000            	// #-2147483648
  4140f4:	mov	x0, x19
  4140f8:	mov	x1, x21
  4140fc:	bl	402440 <fprintf@plt>
  414100:	mov	w0, #0xa                   	// #10
  414104:	mov	x1, x19
  414108:	bl	4026d0 <fputc@plt>
  41410c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414110:	add	x2, x2, #0x862
  414114:	mov	x0, x19
  414118:	mov	x1, x20
  41411c:	bl	402440 <fprintf@plt>
  414120:	mov	w2, #0x80000000            	// #-2147483648
  414124:	mov	w3, #0xffffffff            	// #-1
  414128:	mov	x0, x19
  41412c:	mov	x1, x21
  414130:	bl	402440 <fprintf@plt>
  414134:	mov	w0, #0xa                   	// #10
  414138:	mov	x1, x19
  41413c:	bl	4026d0 <fputc@plt>
  414140:	ldp	x20, x19, [sp, #144]
  414144:	ldp	x22, x21, [sp, #128]
  414148:	ldp	x24, x23, [sp, #112]
  41414c:	ldp	x26, x25, [sp, #96]
  414150:	ldp	x28, x27, [sp, #80]
  414154:	ldp	x29, x30, [sp, #64]
  414158:	add	sp, sp, #0xa0
  41415c:	ret
  414160:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  414164:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414168:	add	x0, x0, #0x268
  41416c:	add	x2, x2, #0x702
  414170:	mov	w1, #0x454                 	// #1108
  414174:	bl	404ac4 <feof@plt+0x20f4>
  414178:	stp	x29, x30, [sp, #-48]!
  41417c:	str	x21, [sp, #16]
  414180:	stp	x20, x19, [sp, #32]
  414184:	mov	x29, sp
  414188:	mov	w21, w1
  41418c:	str	w1, [x0]
  414190:	adrp	x1, 415000 <feof@plt+0x12630>
  414194:	mov	x19, x2
  414198:	mov	x20, x0
  41419c:	sxtw	x3, w21
  4141a0:	sbfiz	x0, x21, #2, #32
  4141a4:	add	x1, x1, #0x474
  4141a8:	mov	w2, #0x4                   	// #4
  4141ac:	bl	404504 <feof@plt+0x1b34>
  4141b0:	cmp	w21, #0x1
  4141b4:	str	x0, [x20, #8]
  4141b8:	b.lt	4141f0 <feof@plt+0x11820>  // b.tstop
  4141bc:	ldr	w8, [x19]
  4141c0:	cmp	w21, #0x1
  4141c4:	str	w8, [x0]
  4141c8:	b.eq	4141f0 <feof@plt+0x11820>  // b.none
  4141cc:	mov	w8, w21
  4141d0:	mov	w9, #0x1                   	// #1
  4141d4:	lsl	x11, x9, #2
  4141d8:	ldr	x10, [x20, #8]
  4141dc:	ldr	w12, [x19, x11]
  4141e0:	add	x9, x9, #0x1
  4141e4:	cmp	x8, x9
  4141e8:	str	w12, [x10, x11]
  4141ec:	b.ne	4141d4 <feof@plt+0x11804>  // b.any
  4141f0:	ldp	x20, x19, [sp, #32]
  4141f4:	ldr	x21, [sp, #16]
  4141f8:	ldp	x29, x30, [sp], #48
  4141fc:	ret
  414200:	stp	x29, x30, [sp, #-32]!
  414204:	str	x19, [sp, #16]
  414208:	mov	x29, sp
  41420c:	mov	x19, x0
  414210:	mov	w0, #0x40                  	// #64
  414214:	mov	w1, wzr
  414218:	bl	4152a0 <feof@plt+0x128d0>
  41421c:	str	x0, [x19]
  414220:	ldr	x19, [sp, #16]
  414224:	ldp	x29, x30, [sp], #32
  414228:	ret
  41422c:	stp	x29, x30, [sp, #-64]!
  414230:	str	x23, [sp, #16]
  414234:	stp	x22, x21, [sp, #32]
  414238:	stp	x20, x19, [sp, #48]
  41423c:	mov	x29, sp
  414240:	cmp	w1, #0x1
  414244:	b.le	414330 <feof@plt+0x11960>
  414248:	mov	x19, x2
  41424c:	cbz	x2, 414348 <feof@plt+0x11978>
  414250:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  414254:	mov	w21, w1
  414258:	mov	x20, x0
  41425c:	ldr	w1, [x19]
  414260:	ldr	x0, [x22, #1880]
  414264:	mov	w2, #0x1                   	// #1
  414268:	mov	x3, xzr
  41426c:	bl	42ab94 <feof@plt+0x281c4>
  414270:	ldr	x8, [x22, #1880]
  414274:	mov	w1, w0
  414278:	mov	x0, x8
  41427c:	bl	429d18 <feof@plt+0x27348>
  414280:	adrp	x1, 415000 <feof@plt+0x12630>
  414284:	str	w0, [x29, #28]
  414288:	add	x1, x1, #0x4a4
  41428c:	mov	w0, #0x10                  	// #16
  414290:	mov	w3, #0x1                   	// #1
  414294:	mov	x2, xzr
  414298:	bl	404504 <feof@plt+0x1b34>
  41429c:	mov	w23, w21
  4142a0:	adrp	x1, 415000 <feof@plt+0x12630>
  4142a4:	mov	x22, x0
  4142a8:	str	w21, [x0]
  4142ac:	lsl	x0, x23, #2
  4142b0:	add	x1, x1, #0x474
  4142b4:	mov	w2, #0x4                   	// #4
  4142b8:	mov	x3, x23
  4142bc:	bl	404504 <feof@plt+0x1b34>
  4142c0:	str	x0, [x22, #8]
  4142c4:	ldr	x8, [x19]
  4142c8:	cmp	w21, #0x2
  4142cc:	str	x8, [x0]
  4142d0:	b.eq	4142f4 <feof@plt+0x11924>  // b.none
  4142d4:	mov	w8, #0x2                   	// #2
  4142d8:	lsl	x10, x8, #2
  4142dc:	ldr	x9, [x22, #8]
  4142e0:	ldr	w11, [x19, x10]
  4142e4:	add	x8, x8, #0x1
  4142e8:	cmp	x23, x8
  4142ec:	str	w11, [x9, x10]
  4142f0:	b.ne	4142d8 <feof@plt+0x11908>  // b.any
  4142f4:	ldr	w2, [x29, #28]
  4142f8:	ldr	x0, [x20]
  4142fc:	add	x1, x29, #0x1c
  414300:	mov	w3, #0x1                   	// #1
  414304:	bl	4154a8 <feof@plt+0x12ad8>
  414308:	ldr	w8, [x0]
  41430c:	cbnz	w8, 414318 <feof@plt+0x11948>
  414310:	ldr	w8, [x29, #28]
  414314:	str	w8, [x0]
  414318:	str	x22, [x0, #8]
  41431c:	ldp	x20, x19, [sp, #48]
  414320:	ldp	x22, x21, [sp, #32]
  414324:	ldr	x23, [sp, #16]
  414328:	ldp	x29, x30, [sp], #64
  41432c:	ret
  414330:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  414334:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414338:	add	x0, x0, #0x268
  41433c:	add	x2, x2, #0x873
  414340:	mov	w1, #0x4f6                 	// #1270
  414344:	bl	404ac4 <feof@plt+0x20f4>
  414348:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  41434c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414350:	add	x0, x0, #0x268
  414354:	add	x2, x2, #0x873
  414358:	mov	w1, #0x4f7                 	// #1271
  41435c:	bl	404ac4 <feof@plt+0x20f4>
  414360:	stp	x29, x30, [sp, #-32]!
  414364:	str	x19, [sp, #16]
  414368:	mov	x29, sp
  41436c:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  414370:	ldr	x8, [x19, #1880]
  414374:	mov	w1, w0
  414378:	mov	w2, #0x1                   	// #1
  41437c:	mov	x3, xzr
  414380:	mov	x0, x8
  414384:	bl	42ab94 <feof@plt+0x281c4>
  414388:	ldr	x8, [x19, #1880]
  41438c:	mov	w1, w0
  414390:	mov	x0, x8
  414394:	bl	429d18 <feof@plt+0x27348>
  414398:	ldr	x19, [sp, #16]
  41439c:	ldp	x29, x30, [sp], #32
  4143a0:	ret
  4143a4:	sub	sp, sp, #0x40
  4143a8:	stp	x29, x30, [sp, #16]
  4143ac:	stp	x22, x21, [sp, #32]
  4143b0:	stp	x20, x19, [sp, #48]
  4143b4:	add	x29, sp, #0x10
  4143b8:	cbz	x2, 414434 <feof@plt+0x11a64>
  4143bc:	mov	x19, x3
  4143c0:	cbz	x3, 41444c <feof@plt+0x11a7c>
  4143c4:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  4143c8:	mov	x21, x0
  4143cc:	ldr	x0, [x22, #1880]
  4143d0:	mov	x20, x2
  4143d4:	mov	w2, #0x1                   	// #1
  4143d8:	mov	x3, xzr
  4143dc:	bl	42ab94 <feof@plt+0x281c4>
  4143e0:	ldr	x8, [x22, #1880]
  4143e4:	mov	w1, w0
  4143e8:	mov	x0, x8
  4143ec:	bl	429d18 <feof@plt+0x27348>
  4143f0:	stur	w0, [x29, #-4]
  4143f4:	ldr	x0, [x21]
  4143f8:	sub	x1, x29, #0x4
  4143fc:	bl	41539c <feof@plt+0x129cc>
  414400:	cbz	x0, 414420 <feof@plt+0x11a50>
  414404:	ldr	x8, [x0]
  414408:	ldr	w8, [x8]
  41440c:	str	w8, [x20]
  414410:	ldr	x8, [x0]
  414414:	mov	w0, #0x1                   	// #1
  414418:	ldr	x8, [x8, #8]
  41441c:	str	x8, [x19]
  414420:	ldp	x20, x19, [sp, #48]
  414424:	ldp	x22, x21, [sp, #32]
  414428:	ldp	x29, x30, [sp, #16]
  41442c:	add	sp, sp, #0x40
  414430:	ret
  414434:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  414438:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  41443c:	add	x0, x0, #0x268
  414440:	add	x2, x2, #0x88f
  414444:	mov	w1, #0x50d                 	// #1293
  414448:	bl	404ac4 <feof@plt+0x20f4>
  41444c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  414450:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414454:	add	x0, x0, #0x268
  414458:	add	x2, x2, #0x88f
  41445c:	mov	w1, #0x50e                 	// #1294
  414460:	bl	404ac4 <feof@plt+0x20f4>
  414464:	sub	sp, sp, #0x140
  414468:	stp	x29, x30, [sp, #224]
  41446c:	stp	x28, x27, [sp, #240]
  414470:	stp	x26, x25, [sp, #256]
  414474:	stp	x24, x23, [sp, #272]
  414478:	stp	x22, x21, [sp, #288]
  41447c:	stp	x20, x19, [sp, #304]
  414480:	add	x29, sp, #0xe0
  414484:	cbz	x7, 414b74 <feof@plt+0x121a4>
  414488:	mov	x24, x0
  41448c:	add	x0, sp, #0x60
  414490:	mov	x22, x7
  414494:	mov	w23, w6
  414498:	mov	w25, w5
  41449c:	mov	w26, w4
  4144a0:	mov	w28, w3
  4144a4:	mov	w21, w2
  4144a8:	mov	x20, x1
  4144ac:	bl	416660 <feof@plt+0x13c90>
  4144b0:	stur	w21, [x29, #-12]
  4144b4:	cbz	x24, 414b8c <feof@plt+0x121bc>
  4144b8:	cbz	w21, 4144ec <feof@plt+0x11b1c>
  4144bc:	mov	x0, x24
  4144c0:	bl	41bf58 <feof@plt+0x19588>
  4144c4:	ldrb	w8, [x0, #45]
  4144c8:	cmp	w8, #0x2
  4144cc:	b.ne	4144f8 <feof@plt+0x11b28>  // b.any
  4144d0:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4144d4:	ldr	x0, [x19, #1880]
  4144d8:	ldrb	w8, [x0, #116]
  4144dc:	cbz	w8, 41452c <feof@plt+0x11b5c>
  4144e0:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  4144e4:	add	x25, x25, #0x9b8
  4144e8:	b	414500 <feof@plt+0x11b30>
  4144ec:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  4144f0:	add	x25, x25, #0x98c
  4144f4:	b	414500 <feof@plt+0x11b30>
  4144f8:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  4144fc:	add	x25, x25, #0x99d
  414500:	add	x0, sp, #0x60
  414504:	bl	416698 <feof@plt+0x13cc8>
  414508:	mov	x0, x25
  41450c:	ldp	x20, x19, [sp, #304]
  414510:	ldp	x22, x21, [sp, #288]
  414514:	ldp	x24, x23, [sp, #272]
  414518:	ldp	x26, x25, [sp, #256]
  41451c:	ldp	x28, x27, [sp, #240]
  414520:	ldp	x29, x30, [sp, #224]
  414524:	add	sp, sp, #0x140
  414528:	ret
  41452c:	str	x22, [sp, #24]
  414530:	stp	w23, w25, [sp, #36]
  414534:	str	w26, [sp, #44]
  414538:	cbz	x20, 414588 <feof@plt+0x11bb8>
  41453c:	mov	w2, #0x1                   	// #1
  414540:	mov	w1, w21
  414544:	mov	x3, xzr
  414548:	bl	42ab94 <feof@plt+0x281c4>
  41454c:	ldr	x8, [x19, #1880]
  414550:	mov	w1, w0
  414554:	mov	x0, x8
  414558:	bl	429d18 <feof@plt+0x27348>
  41455c:	stur	w0, [x29, #-48]
  414560:	ldr	x0, [x20]
  414564:	sub	x1, x29, #0x30
  414568:	bl	41539c <feof@plt+0x129cc>
  41456c:	cbz	x0, 414588 <feof@plt+0x11bb8>
  414570:	ldr	x8, [x0]
  414574:	ldr	w19, [x8]
  414578:	cbz	w19, 41499c <feof@plt+0x11fcc>
  41457c:	ldr	x8, [x8, #8]
  414580:	str	x8, [sp, #72]
  414584:	b	414594 <feof@plt+0x11bc4>
  414588:	sub	x8, x29, #0xc
  41458c:	str	x8, [sp, #72]
  414590:	mov	w19, #0x1                   	// #1
  414594:	sxtw	x22, w19
  414598:	mov	w20, #0x8                   	// #8
  41459c:	bfi	x20, x22, #4, #32
  4145a0:	mov	x0, xzr
  4145a4:	mov	x1, x20
  4145a8:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4145ac:	and	w21, w19, #0x7fffffff
  4145b0:	mov	x27, x0
  4145b4:	stp	w21, wzr, [x0]
  4145b8:	mov	x0, xzr
  4145bc:	mov	x1, x20
  4145c0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4145c4:	mov	x23, x0
  4145c8:	cmp	w19, #0x1
  4145cc:	stp	w21, wzr, [x0]
  4145d0:	b.lt	4149a8 <feof@plt+0x11fd8>  // b.tstop
  4145d4:	str	w28, [sp, #20]
  4145d8:	mov	x26, xzr
  4145dc:	and	x8, x22, #0xffffffff
  4145e0:	mov	x28, x27
  4145e4:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4145e8:	str	x22, [sp, #8]
  4145ec:	str	x8, [sp, #48]
  4145f0:	b	414618 <feof@plt+0x11c48>
  4145f4:	ldr	x26, [sp, #88]
  4145f8:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  4145fc:	add	x25, x25, #0xace
  414600:	tbz	w8, #0, 4149dc <feof@plt+0x1200c>
  414604:	ldr	x8, [sp, #48]
  414608:	add	x26, x26, #0x1
  41460c:	mov	x28, x27
  414610:	cmp	x26, x8
  414614:	b.eq	414b38 <feof@plt+0x12168>  // b.none
  414618:	ldr	x8, [sp, #72]
  41461c:	ldr	x0, [x19, #1880]
  414620:	ldr	w1, [x8, x26, lsl #2]
  414624:	bl	429d18 <feof@plt+0x27348>
  414628:	ldr	x8, [x19, #1880]
  41462c:	mov	x21, x0
  414630:	lsr	x20, x0, #32
  414634:	ldr	w9, [x8, #36]
  414638:	cbz	w9, 41466c <feof@plt+0x11c9c>
  41463c:	ldr	x8, [x8, #24]
  414640:	sub	w9, w9, #0x1
  414644:	sbfiz	x9, x9, #5, #32
  414648:	ldr	w8, [x8, x9]
  41464c:	cmp	w8, w21
  414650:	b.ls	414678 <feof@plt+0x11ca8>  // b.plast
  414654:	mov	w8, #0x5fffffff            	// #1610612735
  414658:	cmp	w21, w8
  41465c:	b.hi	414b50 <feof@plt+0x12180>  // b.pmore
  414660:	cmp	w20, w8
  414664:	b.ls	414680 <feof@plt+0x11cb0>  // b.plast
  414668:	b	414b68 <feof@plt+0x12198>
  41466c:	mov	w8, #0x80000000            	// #-2147483648
  414670:	cmp	w8, w21
  414674:	b.hi	414654 <feof@plt+0x11c84>  // b.pmore
  414678:	cmp	w21, w20
  41467c:	b.ne	414b5c <feof@plt+0x1218c>  // b.any
  414680:	sub	x8, x29, #0x30
  414684:	mov	w2, #0x1                   	// #1
  414688:	mov	w0, w21
  41468c:	mov	w1, wzr
  414690:	bl	413110 <feof@plt+0x10740>
  414694:	sub	x8, x29, #0x50
  414698:	mov	w2, #0x2                   	// #2
  41469c:	mov	w0, w20
  4146a0:	mov	w1, wzr
  4146a4:	bl	413110 <feof@plt+0x10740>
  4146a8:	ldur	x0, [x29, #-48]
  4146ac:	ldur	x8, [x29, #-80]
  4146b0:	cmp	x0, x8
  4146b4:	b.ne	414afc <feof@plt+0x1212c>  // b.any
  4146b8:	ldur	w1, [x29, #-40]
  4146bc:	ldur	w8, [x29, #-72]
  4146c0:	cmp	w1, w8
  4146c4:	b.ne	414b08 <feof@plt+0x12138>  // b.any
  4146c8:	ldur	w8, [x29, #-36]
  4146cc:	ldur	w9, [x29, #-68]
  4146d0:	cmp	w8, w9
  4146d4:	b.gt	414b14 <feof@plt+0x12144>
  4146d8:	bl	412d44 <feof@plt+0x10374>
  4146dc:	cbz	x0, 414b20 <feof@plt+0x12150>
  4146e0:	ldur	w9, [x29, #-68]
  4146e4:	ldursw	x11, [x29, #-36]
  4146e8:	sub	w10, w9, w11
  4146ec:	add	w22, w10, #0x1
  4146f0:	sub	x8, x11, #0x1
  4146f4:	add	x12, x8, w22, sxtw
  4146f8:	cmp	x1, x12
  4146fc:	b.cc	414b2c <feof@plt+0x1215c>  // b.lo, b.ul, b.last
  414700:	cmp	w11, #0x0
  414704:	b.le	414ba4 <feof@plt+0x121d4>
  414708:	cmp	w11, w1
  41470c:	b.gt	414bbc <feof@plt+0x121ec>
  414710:	cmn	w10, #0x2
  414714:	b.le	414bd4 <feof@plt+0x12204>
  414718:	cmp	w9, w1
  41471c:	b.gt	414bec <feof@plt+0x1221c>
  414720:	add	x0, x0, w8, uxtw
  414724:	mov	w1, w22
  414728:	str	x26, [sp, #88]
  41472c:	bl	450840 <_obstack_memory_used@@Base+0x2a8>
  414730:	str	x20, [sp, #80]
  414734:	cbz	x28, 414774 <feof@plt+0x11da4>
  414738:	ldp	w8, w9, [x28]
  41473c:	and	w26, w8, #0x7fffffff
  414740:	cmp	w26, w9
  414744:	b.ne	414790 <feof@plt+0x11dc0>  // b.any
  414748:	add	w1, w26, #0x1
  41474c:	stp	x0, x23, [sp, #56]
  414750:	tbnz	w8, #31, 414798 <feof@plt+0x11dc8>
  414754:	mov	w0, w26
  414758:	bl	411298 <feof@plt+0xe8c8>
  41475c:	ldr	w19, [x28, #4]
  414760:	mov	w23, w0
  414764:	mov	w26, wzr
  414768:	mov	w20, wzr
  41476c:	mov	x0, x28
  414770:	b	4147b0 <feof@plt+0x11de0>
  414774:	stp	x0, x23, [sp, #56]
  414778:	mov	w26, wzr
  41477c:	mov	w20, wzr
  414780:	mov	x0, xzr
  414784:	mov	w19, wzr
  414788:	mov	w23, #0x4                   	// #4
  41478c:	b	4147b0 <feof@plt+0x11de0>
  414790:	mov	x27, x28
  414794:	b	4147fc <feof@plt+0x11e2c>
  414798:	cmp	w26, #0x4
  41479c:	mov	w8, #0x4                   	// #4
  4147a0:	mov	x0, xzr
  4147a4:	mov	w19, wzr
  4147a8:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  4147ac:	mov	w20, #0x1                   	// #1
  4147b0:	mov	w8, w23
  4147b4:	mov	w1, #0x8                   	// #8
  4147b8:	bfi	x1, x8, #4, #32
  4147bc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4147c0:	and	w8, w23, #0x7fffffff
  4147c4:	stp	w8, w19, [x0]
  4147c8:	mov	x27, x0
  4147cc:	ldp	x0, x23, [sp, #56]
  4147d0:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4147d4:	cbz	w20, 4147fc <feof@plt+0x11e2c>
  4147d8:	cbz	w26, 4147f8 <feof@plt+0x11e28>
  4147dc:	add	x8, x28, #0x8
  4147e0:	add	x9, x27, #0x8
  4147e4:	mov	w10, w26
  4147e8:	ldr	q0, [x8], #16
  4147ec:	subs	w10, w10, #0x1
  4147f0:	str	q0, [x9], #16
  4147f4:	b.ne	4147e8 <feof@plt+0x11e18>  // b.any
  4147f8:	str	w26, [x27, #4]
  4147fc:	ldr	w8, [x27, #4]
  414800:	sub	x3, x29, #0x58
  414804:	mov	w2, #0x1                   	// #1
  414808:	mov	w1, w21
  41480c:	add	w9, w8, #0x1
  414810:	add	x8, x27, x8, lsl #4
  414814:	str	w9, [x27, #4]
  414818:	str	w22, [x8, #8]
  41481c:	str	x0, [x8, #16]
  414820:	ldr	x0, [x19, #1880]
  414824:	bl	42ab94 <feof@plt+0x281c4>
  414828:	ldr	x0, [x19, #1880]
  41482c:	sub	x3, x29, #0x60
  414830:	mov	w2, #0x1                   	// #1
  414834:	ldr	x1, [sp, #80]
  414838:	bl	42ab94 <feof@plt+0x281c4>
  41483c:	ldur	x9, [x29, #-88]
  414840:	mov	w8, wzr
  414844:	cbz	x9, 4145f4 <feof@plt+0x11c24>
  414848:	ldur	x1, [x29, #-96]
  41484c:	ldr	x26, [sp, #88]
  414850:	cbz	x1, 4145f8 <feof@plt+0x11c28>
  414854:	ldr	x8, [x9, #8]
  414858:	cmp	x9, x1
  41485c:	b.eq	414880 <feof@plt+0x11eb0>  // b.none
  414860:	ldr	x9, [x1, #8]
  414864:	cmp	x8, x9
  414868:	b.eq	414880 <feof@plt+0x11eb0>  // b.none
  41486c:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414870:	add	x25, x25, #0xaea
  414874:	mov	w8, wzr
  414878:	tbnz	wzr, #0, 414604 <feof@plt+0x11c34>
  41487c:	b	4149dc <feof@plt+0x1200c>
  414880:	ldur	x9, [x29, #-48]
  414884:	cmp	x8, x9
  414888:	b.eq	4148a0 <feof@plt+0x11ed0>  // b.none
  41488c:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414890:	add	x25, x25, #0xb22
  414894:	mov	w8, wzr
  414898:	tbnz	wzr, #0, 414604 <feof@plt+0x11c34>
  41489c:	b	4149dc <feof@plt+0x1200c>
  4148a0:	ldr	x0, [x19, #1880]
  4148a4:	ldp	w2, w3, [x29, #-40]
  4148a8:	bl	42a8bc <feof@plt+0x27eec>
  4148ac:	ldr	x2, [x19, #1880]
  4148b0:	mov	w1, w0
  4148b4:	add	x0, sp, #0x70
  4148b8:	bl	4182fc <feof@plt+0x1592c>
  4148bc:	cbz	x23, 4148f8 <feof@plt+0x11f28>
  4148c0:	ldp	w8, w9, [x23]
  4148c4:	and	w20, w8, #0x7fffffff
  4148c8:	cmp	w20, w9
  4148cc:	b.ne	414910 <feof@plt+0x11f40>  // b.any
  4148d0:	add	w1, w20, #0x1
  4148d4:	tbnz	w8, #31, 414918 <feof@plt+0x11f48>
  4148d8:	mov	w0, w20
  4148dc:	bl	411298 <feof@plt+0xe8c8>
  4148e0:	ldr	w22, [x23, #4]
  4148e4:	mov	w21, w0
  4148e8:	mov	w20, wzr
  4148ec:	mov	w19, wzr
  4148f0:	mov	x0, x23
  4148f4:	b	414930 <feof@plt+0x11f60>
  4148f8:	mov	w20, wzr
  4148fc:	mov	w19, wzr
  414900:	mov	x0, xzr
  414904:	mov	w22, wzr
  414908:	mov	w21, #0x4                   	// #4
  41490c:	b	414930 <feof@plt+0x11f60>
  414910:	mov	x0, x23
  414914:	b	414970 <feof@plt+0x11fa0>
  414918:	cmp	w20, #0x4
  41491c:	mov	w8, #0x4                   	// #4
  414920:	mov	x0, xzr
  414924:	mov	w22, wzr
  414928:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  41492c:	mov	w19, #0x1                   	// #1
  414930:	mov	w8, w21
  414934:	mov	w1, #0x8                   	// #8
  414938:	bfi	x1, x8, #4, #32
  41493c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  414940:	and	w8, w21, #0x7fffffff
  414944:	stp	w8, w22, [x0]
  414948:	cbz	w19, 414970 <feof@plt+0x11fa0>
  41494c:	cbz	w20, 41496c <feof@plt+0x11f9c>
  414950:	add	x8, x23, #0x8
  414954:	add	x9, x0, #0x8
  414958:	mov	w10, w20
  41495c:	ldr	q0, [x8], #16
  414960:	subs	w10, w10, #0x1
  414964:	str	q0, [x9], #16
  414968:	b.ne	41495c <feof@plt+0x11f8c>  // b.any
  41496c:	str	w20, [x0, #4]
  414970:	ldr	w8, [x0, #4]
  414974:	mov	x23, x0
  414978:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  41497c:	add	w9, w8, #0x1
  414980:	str	w9, [x0, #4]
  414984:	ldr	q0, [sp, #112]
  414988:	add	x8, x0, x8, lsl #4
  41498c:	stur	q0, [x8, #8]
  414990:	mov	w8, #0x1                   	// #1
  414994:	tbnz	w8, #0, 414604 <feof@plt+0x11c34>
  414998:	b	4149dc <feof@plt+0x1200c>
  41499c:	mov	x22, xzr
  4149a0:	mov	x23, xzr
  4149a4:	mov	x27, xzr
  4149a8:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4149ac:	add	x8, x27, #0x8
  4149b0:	cmp	x27, #0x0
  4149b4:	add	x9, x23, #0x8
  4149b8:	csel	x1, xzr, x8, eq  // eq = none
  4149bc:	cmp	x23, #0x0
  4149c0:	csel	x2, xzr, x9, eq  // eq = none
  4149c4:	add	x4, sp, #0x60
  4149c8:	mov	x0, x24
  4149cc:	mov	x3, x22
  4149d0:	mov	w5, w28
  4149d4:	bl	417a48 <feof@plt+0x15078>
  4149d8:	mov	x25, x0
  4149dc:	mov	x28, x27
  4149e0:	cbz	x23, 4149f4 <feof@plt+0x12024>
  4149e4:	ldr	w8, [x23]
  4149e8:	tbnz	w8, #31, 414a34 <feof@plt+0x12064>
  4149ec:	mov	x0, x23
  4149f0:	bl	4024c0 <free@plt>
  4149f4:	cbz	x28, 414a48 <feof@plt+0x12078>
  4149f8:	ldr	w8, [x28, #4]
  4149fc:	cbz	w8, 414a20 <feof@plt+0x12050>
  414a00:	mov	x19, xzr
  414a04:	add	x20, x28, #0x10
  414a08:	ldr	x0, [x20], #16
  414a0c:	bl	4024c0 <free@plt>
  414a10:	ldr	w8, [x28, #4]
  414a14:	add	x19, x19, #0x1
  414a18:	cmp	x19, x8
  414a1c:	b.cc	414a08 <feof@plt+0x12038>  // b.lo, b.ul, b.last
  414a20:	ldr	w8, [x28]
  414a24:	tbnz	w8, #31, 414a40 <feof@plt+0x12070>
  414a28:	mov	x0, x28
  414a2c:	bl	4024c0 <free@plt>
  414a30:	b	414a44 <feof@plt+0x12074>
  414a34:	str	wzr, [x23, #4]
  414a38:	cbnz	x28, 4149f8 <feof@plt+0x12028>
  414a3c:	b	414a48 <feof@plt+0x12078>
  414a40:	str	wzr, [x28, #4]
  414a44:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  414a48:	cbnz	x25, 414500 <feof@plt+0x11b30>
  414a4c:	ldr	w8, [sp, #104]
  414a50:	ldr	w11, [sp, #44]
  414a54:	cmp	w8, w11
  414a58:	b.le	414ae4 <feof@plt+0x12114>
  414a5c:	ldr	w10, [sp, #40]
  414a60:	cmp	w8, w10
  414a64:	b.le	414af0 <feof@plt+0x12120>
  414a68:	ldr	w9, [sp, #36]
  414a6c:	cmp	w8, w9
  414a70:	b.le	414b44 <feof@plt+0x12174>
  414a74:	ldr	x8, [sp, #96]
  414a78:	ldr	x0, [x19, #1880]
  414a7c:	ldr	x1, [x8, w11, sxtw #3]
  414a80:	ldr	x20, [x8, w10, sxtw #3]
  414a84:	add	x8, x8, w9, sxtw #3
  414a88:	ldr	w21, [x8, #4]
  414a8c:	bl	429e10 <feof@plt+0x27440>
  414a90:	ldr	x8, [x19, #1880]
  414a94:	mov	w22, w0
  414a98:	mov	w1, w20
  414a9c:	mov	x0, x8
  414aa0:	bl	429d18 <feof@plt+0x27348>
  414aa4:	ldr	x8, [x19, #1880]
  414aa8:	mov	x20, x0
  414aac:	mov	w1, w21
  414ab0:	mov	x0, x8
  414ab4:	bl	429d18 <feof@plt+0x27348>
  414ab8:	ldr	x8, [x19, #1880]
  414abc:	mov	x2, x0
  414ac0:	bfxil	x2, x20, #0, #32
  414ac4:	mov	w1, w22
  414ac8:	mov	x0, x8
  414acc:	mov	x3, xzr
  414ad0:	bl	42990c <feof@plt+0x26f3c>
  414ad4:	ldr	x8, [sp, #24]
  414ad8:	mov	x25, xzr
  414adc:	str	w0, [x8]
  414ae0:	b	414500 <feof@plt+0x11b30>
  414ae4:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414ae8:	add	x25, x25, #0x8c3
  414aec:	b	414500 <feof@plt+0x11b30>
  414af0:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414af4:	add	x25, x25, #0x8da
  414af8:	b	414500 <feof@plt+0x11b30>
  414afc:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b00:	add	x25, x25, #0xa30
  414b04:	b	4149e0 <feof@plt+0x12010>
  414b08:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b0c:	add	x25, x25, #0xa57
  414b10:	b	4149e0 <feof@plt+0x12010>
  414b14:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b18:	add	x25, x25, #0xa7e
  414b1c:	b	4149e0 <feof@plt+0x12010>
  414b20:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b24:	add	x25, x25, #0xa9b
  414b28:	b	4149e0 <feof@plt+0x12010>
  414b2c:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b30:	add	x25, x25, #0xab6
  414b34:	b	4149e0 <feof@plt+0x12010>
  414b38:	ldr	w28, [sp, #20]
  414b3c:	ldr	x22, [sp, #8]
  414b40:	b	4149ac <feof@plt+0x11fdc>
  414b44:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b48:	add	x25, x25, #0x8f1
  414b4c:	b	414500 <feof@plt+0x11b30>
  414b50:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b54:	add	x25, x25, #0x9cc
  414b58:	b	4149e0 <feof@plt+0x12010>
  414b5c:	adrp	x25, 45e000 <_obstack_memory_used@@Base+0xda68>
  414b60:	add	x25, x25, #0x341
  414b64:	b	4149e0 <feof@plt+0x12010>
  414b68:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b6c:	add	x25, x25, #0x9ff
  414b70:	b	4149e0 <feof@plt+0x12010>
  414b74:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b78:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b7c:	add	x0, x0, #0x268
  414b80:	add	x2, x2, #0x8a8
  414b84:	mov	w1, #0x5fa                 	// #1530
  414b88:	bl	404ac4 <feof@plt+0x20f4>
  414b8c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b90:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  414b94:	add	x0, x0, #0x268
  414b98:	add	x2, x2, #0x96f
  414b9c:	mov	w1, #0x551                 	// #1361
  414ba0:	bl	404ac4 <feof@plt+0x20f4>
  414ba4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  414ba8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  414bac:	add	x0, x0, #0xe5c
  414bb0:	add	x2, x2, #0xe6e
  414bb4:	mov	w1, #0x44                  	// #68
  414bb8:	bl	404ac4 <feof@plt+0x20f4>
  414bbc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  414bc0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  414bc4:	add	x0, x0, #0xe5c
  414bc8:	add	x2, x2, #0xe6e
  414bcc:	mov	w1, #0x45                  	// #69
  414bd0:	bl	404ac4 <feof@plt+0x20f4>
  414bd4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  414bd8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  414bdc:	add	x0, x0, #0xe5c
  414be0:	add	x2, x2, #0xe6e
  414be4:	mov	w1, #0x46                  	// #70
  414be8:	bl	404ac4 <feof@plt+0x20f4>
  414bec:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  414bf0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  414bf4:	add	x0, x0, #0xe5c
  414bf8:	add	x2, x2, #0xe6e
  414bfc:	mov	w1, #0x47                  	// #71
  414c00:	bl	404ac4 <feof@plt+0x20f4>
  414c04:	stp	x29, x30, [sp, #-32]!
  414c08:	str	x19, [sp, #16]
  414c0c:	mov	x29, sp
  414c10:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  414c14:	ldr	x8, [x19, #1896]
  414c18:	cbnz	x8, 414db0 <feof@plt+0x123e0>
  414c1c:	mov	w0, #0x588                 	// #1416
  414c20:	bl	402340 <_Znam@plt>
  414c24:	mov	w10, #0x10                  	// #16
  414c28:	mov	x8, x0
  414c2c:	movi	v0.2d, #0x0
  414c30:	mov	w9, #0x1                   	// #1
  414c34:	str	x10, [x0]
  414c38:	add	x10, x0, #0x118
  414c3c:	str	wzr, [x8, #8]!
  414c40:	stp	q0, q0, [x0, #16]
  414c44:	stp	q0, q0, [x0, #48]
  414c48:	strb	w9, [x0, #80]
  414c4c:	str	xzr, [x0, #88]
  414c50:	str	wzr, [x0, #96]
  414c54:	stur	q0, [x0, #104]
  414c58:	stur	q0, [x0, #120]
  414c5c:	stur	q0, [x0, #136]
  414c60:	stur	q0, [x0, #152]
  414c64:	strb	w9, [x0, #168]
  414c68:	str	xzr, [x0, #176]
  414c6c:	str	wzr, [x0, #184]
  414c70:	stp	q0, q0, [x0, #192]
  414c74:	stp	q0, q0, [x0, #224]
  414c78:	strb	w9, [x0, #256]
  414c7c:	str	xzr, [x0, #264]
  414c80:	str	wzr, [x0, #272]
  414c84:	stp	q0, q0, [x10]
  414c88:	stp	q0, q0, [x10, #32]
  414c8c:	add	x10, x0, #0x1c8
  414c90:	strb	w9, [x0, #344]
  414c94:	str	xzr, [x0, #352]
  414c98:	str	wzr, [x0, #360]
  414c9c:	stp	q0, q0, [x0, #368]
  414ca0:	stp	q0, q0, [x0, #400]
  414ca4:	strb	w9, [x0, #432]
  414ca8:	str	xzr, [x0, #440]
  414cac:	str	wzr, [x0, #448]
  414cb0:	stp	q0, q0, [x10]
  414cb4:	stp	q0, q0, [x10, #32]
  414cb8:	add	x10, x0, #0x278
  414cbc:	strb	w9, [x0, #520]
  414cc0:	str	xzr, [x0, #528]
  414cc4:	str	wzr, [x0, #536]
  414cc8:	stp	q0, q0, [x0, #544]
  414ccc:	stp	q0, q0, [x0, #576]
  414cd0:	strb	w9, [x0, #608]
  414cd4:	str	xzr, [x0, #616]
  414cd8:	str	wzr, [x0, #624]
  414cdc:	stp	q0, q0, [x10]
  414ce0:	stp	q0, q0, [x10, #32]
  414ce4:	add	x10, x0, #0x328
  414ce8:	strb	w9, [x0, #696]
  414cec:	str	xzr, [x0, #704]
  414cf0:	str	wzr, [x0, #712]
  414cf4:	stp	q0, q0, [x0, #720]
  414cf8:	stp	q0, q0, [x0, #752]
  414cfc:	strb	w9, [x0, #784]
  414d00:	str	xzr, [x0, #792]
  414d04:	str	wzr, [x0, #800]
  414d08:	stp	q0, q0, [x10, #32]
  414d0c:	stp	q0, q0, [x10]
  414d10:	add	x10, x0, #0x3d8
  414d14:	strb	w9, [x0, #872]
  414d18:	str	xzr, [x0, #880]
  414d1c:	str	wzr, [x0, #888]
  414d20:	stp	q0, q0, [x0, #928]
  414d24:	stp	q0, q0, [x0, #896]
  414d28:	strb	w9, [x0, #960]
  414d2c:	str	xzr, [x0, #968]
  414d30:	str	wzr, [x0, #976]
  414d34:	stp	q0, q0, [x10, #32]
  414d38:	stp	q0, q0, [x10]
  414d3c:	add	x10, x0, #0x488
  414d40:	strb	w9, [x0, #1048]
  414d44:	str	xzr, [x0, #1056]
  414d48:	str	wzr, [x0, #1064]
  414d4c:	str	q0, [x0, #1120]
  414d50:	str	q0, [x0, #1104]
  414d54:	str	q0, [x0, #1088]
  414d58:	str	q0, [x0, #1072]
  414d5c:	strb	w9, [x0, #1136]
  414d60:	str	xzr, [x0, #1144]
  414d64:	str	wzr, [x0, #1152]
  414d68:	stp	q0, q0, [x10, #32]
  414d6c:	stp	q0, q0, [x10]
  414d70:	add	x10, x0, #0x538
  414d74:	strb	w9, [x0, #1224]
  414d78:	str	xzr, [x0, #1232]
  414d7c:	str	wzr, [x0, #1240]
  414d80:	str	q0, [x0, #1296]
  414d84:	str	q0, [x0, #1280]
  414d88:	str	q0, [x0, #1264]
  414d8c:	str	q0, [x0, #1248]
  414d90:	strb	w9, [x0, #1312]
  414d94:	str	xzr, [x0, #1320]
  414d98:	str	wzr, [x0, #1328]
  414d9c:	stp	q0, q0, [x10, #32]
  414da0:	stp	q0, q0, [x10]
  414da4:	strb	w9, [x0, #1400]
  414da8:	str	xzr, [x0, #1408]
  414dac:	str	x8, [x19, #1896]
  414db0:	ldr	x19, [sp, #16]
  414db4:	ldp	x29, x30, [sp], #32
  414db8:	ret
  414dbc:	sub	sp, sp, #0x80
  414dc0:	stp	x29, x30, [sp, #32]
  414dc4:	stp	x28, x27, [sp, #48]
  414dc8:	stp	x26, x25, [sp, #64]
  414dcc:	stp	x24, x23, [sp, #80]
  414dd0:	stp	x22, x21, [sp, #96]
  414dd4:	stp	x20, x19, [sp, #112]
  414dd8:	add	x29, sp, #0x20
  414ddc:	mov	x19, x2
  414de0:	mov	x23, x1
  414de4:	mov	x20, x0
  414de8:	bl	4151bc <feof@plt+0x127ec>
  414dec:	ldp	x25, x8, [x20, #40]
  414df0:	subs	x2, x25, x8
  414df4:	b.eq	414e60 <feof@plt+0x12490>  // b.none
  414df8:	ldr	x9, [x20, #24]
  414dfc:	add	x21, x9, x8
  414e00:	mov	w1, #0xa                   	// #10
  414e04:	mov	x0, x21
  414e08:	bl	402650 <memchr@plt>
  414e0c:	cbnz	x0, 414e30 <feof@plt+0x12460>
  414e10:	mov	x0, x20
  414e14:	bl	4151bc <feof@plt+0x127ec>
  414e18:	ldr	x8, [x20, #24]
  414e1c:	tbz	w0, #0, 414e40 <feof@plt+0x12470>
  414e20:	ldp	x25, x9, [x20, #40]
  414e24:	add	x21, x8, x9
  414e28:	sub	x2, x25, x9
  414e2c:	b	414e00 <feof@plt+0x12430>
  414e30:	mov	x22, x0
  414e34:	mov	w8, wzr
  414e38:	add	x24, x0, #0x1
  414e3c:	b	414e50 <feof@plt+0x12480>
  414e40:	ldr	x25, [x20, #40]
  414e44:	mov	x24, xzr
  414e48:	add	x22, x8, x25
  414e4c:	mov	w8, #0x1                   	// #1
  414e50:	ldr	x0, [x20, #16]
  414e54:	strb	w8, [x20, #72]
  414e58:	bl	402910 <ferror@plt>
  414e5c:	cbz	w0, 414e68 <feof@plt+0x12498>
  414e60:	mov	w0, wzr
  414e64:	b	415164 <feof@plt+0x12794>
  414e68:	cbz	x22, 4151a4 <feof@plt+0x127d4>
  414e6c:	ldr	x8, [x20, #48]
  414e70:	cmp	x8, x25
  414e74:	b.cs	414e7c <feof@plt+0x124ac>  // b.hs, b.nlast
  414e78:	str	x21, [x23]
  414e7c:	ldp	x9, x8, [x20, #56]
  414e80:	add	x25, x9, #0x1
  414e84:	cmp	x25, x8
  414e88:	str	x25, [x20, #56]
  414e8c:	b.hi	415054 <feof@plt+0x12684>  // b.pmore
  414e90:	ldr	x26, [x20, #80]
  414e94:	cbz	x26, 414ea4 <feof@plt+0x124d4>
  414e98:	ldr	w9, [x26, #4]
  414e9c:	cmp	w9, #0x63
  414ea0:	b.hi	415054 <feof@plt+0x12684>  // b.pmore
  414ea4:	cmp	x8, #0x64
  414ea8:	b.hi	414ec0 <feof@plt+0x124f0>  // b.pmore
  414eac:	cbz	x26, 414f38 <feof@plt+0x12568>
  414eb0:	ldr	w8, [x26, #4]
  414eb4:	cmp	x25, x8
  414eb8:	b.ls	415054 <feof@plt+0x12684>  // b.plast
  414ebc:	b	414f44 <feof@plt+0x12574>
  414ec0:	cbz	x26, 414fa0 <feof@plt+0x125d0>
  414ec4:	ldr	w0, [x26, #4]
  414ec8:	cbz	w0, 414ee0 <feof@plt+0x12510>
  414ecc:	mov	w9, #0x64                  	// #100
  414ed0:	mul	x9, x25, x9
  414ed4:	udiv	x8, x9, x8
  414ed8:	cmp	x8, x0
  414edc:	b.cc	415054 <feof@plt+0x12684>  // b.lo, b.ul, b.last
  414ee0:	ldr	w8, [x26]
  414ee4:	ldr	x9, [x20, #24]
  414ee8:	ldr	x12, [x20, #48]
  414eec:	and	w10, w8, #0x7fffffff
  414ef0:	cmp	w10, w0
  414ef4:	sub	x13, x22, x9
  414ef8:	b.ne	415034 <feof@plt+0x12664>  // b.any
  414efc:	stur	x12, [x29, #-8]
  414f00:	str	x13, [sp, #16]
  414f04:	tbnz	w8, #31, 415080 <feof@plt+0x126b0>
  414f08:	add	w1, w0, #0x1
  414f0c:	bl	411298 <feof@plt+0xe8c8>
  414f10:	mov	w23, w0
  414f14:	ldr	x0, [x20, #80]
  414f18:	mov	w8, #0x18                  	// #24
  414f1c:	umull	x8, w23, w8
  414f20:	add	x1, x8, #0x8
  414f24:	cbz	x0, 415184 <feof@plt+0x127b4>
  414f28:	ldr	w27, [x0, #4]
  414f2c:	mov	w28, wzr
  414f30:	str	wzr, [sp, #12]
  414f34:	b	414fd4 <feof@plt+0x12604>
  414f38:	mov	x8, xzr
  414f3c:	cmp	x25, x8
  414f40:	b.ls	415054 <feof@plt+0x12684>  // b.plast
  414f44:	ldr	x8, [x20, #24]
  414f48:	ldr	x13, [x20, #48]
  414f4c:	sub	x12, x22, x8
  414f50:	cbz	x26, 415068 <feof@plt+0x12698>
  414f54:	ldp	w8, w9, [x26]
  414f58:	and	w0, w8, #0x7fffffff
  414f5c:	cmp	w0, w9
  414f60:	b.ne	41512c <feof@plt+0x1275c>  // b.any
  414f64:	stur	x12, [x29, #-8]
  414f68:	str	x13, [sp, #16]
  414f6c:	tbnz	w8, #31, 4150a4 <feof@plt+0x126d4>
  414f70:	add	w1, w0, #0x1
  414f74:	bl	411298 <feof@plt+0xe8c8>
  414f78:	mov	w23, w0
  414f7c:	ldr	x0, [x20, #80]
  414f80:	mov	w8, #0x18                  	// #24
  414f84:	umull	x8, w23, w8
  414f88:	add	x1, x8, #0x8
  414f8c:	cbz	x0, 415194 <feof@plt+0x127c4>
  414f90:	ldr	w27, [x0, #4]
  414f94:	mov	w28, wzr
  414f98:	str	wzr, [sp, #12]
  414f9c:	b	4150d8 <feof@plt+0x12708>
  414fa0:	ldr	x8, [x20, #24]
  414fa4:	ldr	x9, [x20, #48]
  414fa8:	str	wzr, [sp, #12]
  414fac:	mov	w28, wzr
  414fb0:	sub	x8, x22, x8
  414fb4:	stur	x9, [x29, #-8]
  414fb8:	str	x8, [sp, #16]
  414fbc:	mov	w23, #0x4                   	// #4
  414fc0:	mov	w8, #0x18                  	// #24
  414fc4:	umull	x8, w23, w8
  414fc8:	mov	x0, xzr
  414fcc:	mov	w27, wzr
  414fd0:	add	x1, x8, #0x8
  414fd4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  414fd8:	and	w8, w23, #0x7fffffff
  414fdc:	str	x0, [x20, #80]
  414fe0:	stp	w8, w27, [x0]
  414fe4:	cbz	w28, 41502c <feof@plt+0x1265c>
  414fe8:	ldr	x9, [x20, #80]
  414fec:	ldr	w14, [sp, #12]
  414ff0:	cbz	w14, 41501c <feof@plt+0x1264c>
  414ff4:	add	x8, x26, #0x8
  414ff8:	add	x9, x9, #0x8
  414ffc:	mov	w10, w14
  415000:	ldr	x11, [x8, #16]
  415004:	ldr	q0, [x8], #24
  415008:	subs	w10, w10, #0x1
  41500c:	str	x11, [x9, #16]
  415010:	str	q0, [x9], #24
  415014:	b.ne	415000 <feof@plt+0x12630>  // b.any
  415018:	ldr	x9, [x20, #80]
  41501c:	ldur	x12, [x29, #-8]
  415020:	ldr	x13, [sp, #16]
  415024:	str	w14, [x9, #4]
  415028:	b	415034 <feof@plt+0x12664>
  41502c:	ldur	x12, [x29, #-8]
  415030:	ldr	x13, [sp, #16]
  415034:	ldr	x8, [x20, #80]
  415038:	mov	w10, #0x18                  	// #24
  41503c:	ldr	w9, [x8, #4]
  415040:	add	w11, w9, #0x1
  415044:	madd	x9, x9, x10, x8
  415048:	str	w11, [x8, #4]
  41504c:	stp	x25, x12, [x9, #8]
  415050:	str	x13, [x9, #24]
  415054:	sub	x8, x22, x21
  415058:	cbz	x24, 415154 <feof@plt+0x12784>
  41505c:	ldr	x9, [x20, #24]
  415060:	sub	x9, x24, x9
  415064:	b	415158 <feof@plt+0x12788>
  415068:	str	x13, [sp, #16]
  41506c:	stur	x12, [x29, #-8]
  415070:	str	wzr, [sp, #12]
  415074:	mov	w28, wzr
  415078:	mov	w23, #0x4                   	// #4
  41507c:	b	4150c4 <feof@plt+0x126f4>
  415080:	str	xzr, [x20, #80]
  415084:	ldr	w10, [x26, #4]
  415088:	mov	w8, #0x4                   	// #4
  41508c:	mov	w28, #0x1                   	// #1
  415090:	add	w9, w10, #0x1
  415094:	cmp	w9, #0x4
  415098:	csinc	w23, w8, w10, ls  // ls = plast
  41509c:	str	w10, [sp, #12]
  4150a0:	b	414fc0 <feof@plt+0x125f0>
  4150a4:	str	xzr, [x20, #80]
  4150a8:	ldr	w10, [x26, #4]
  4150ac:	mov	w8, #0x4                   	// #4
  4150b0:	mov	w28, #0x1                   	// #1
  4150b4:	add	w9, w10, #0x1
  4150b8:	cmp	w9, #0x4
  4150bc:	csinc	w23, w8, w10, ls  // ls = plast
  4150c0:	str	w10, [sp, #12]
  4150c4:	mov	w8, #0x18                  	// #24
  4150c8:	umull	x8, w23, w8
  4150cc:	mov	x0, xzr
  4150d0:	mov	w27, wzr
  4150d4:	add	x1, x8, #0x8
  4150d8:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4150dc:	and	w8, w23, #0x7fffffff
  4150e0:	str	x0, [x20, #80]
  4150e4:	stp	w8, w27, [x0]
  4150e8:	ldur	x12, [x29, #-8]
  4150ec:	ldr	x13, [sp, #16]
  4150f0:	cbz	w28, 41512c <feof@plt+0x1275c>
  4150f4:	ldr	x9, [x20, #80]
  4150f8:	ldr	w14, [sp, #12]
  4150fc:	cbz	w14, 415128 <feof@plt+0x12758>
  415100:	add	x8, x26, #0x8
  415104:	add	x9, x9, #0x8
  415108:	mov	w10, w14
  41510c:	ldr	x11, [x8, #16]
  415110:	ldr	q0, [x8], #24
  415114:	subs	w10, w10, #0x1
  415118:	str	x11, [x9, #16]
  41511c:	str	q0, [x9], #24
  415120:	b.ne	41510c <feof@plt+0x1273c>  // b.any
  415124:	ldr	x9, [x20, #80]
  415128:	str	w14, [x9, #4]
  41512c:	ldr	x8, [x20, #80]
  415130:	mov	w10, #0x18                  	// #24
  415134:	ldr	w9, [x8, #4]
  415138:	add	w11, w9, #0x1
  41513c:	madd	x9, x9, x10, x8
  415140:	str	w11, [x8, #4]
  415144:	stp	x25, x13, [x9, #8]
  415148:	str	x12, [x9, #24]
  41514c:	sub	x8, x22, x21
  415150:	cbnz	x24, 41505c <feof@plt+0x1268c>
  415154:	ldr	x9, [x20, #40]
  415158:	mov	w0, #0x1                   	// #1
  41515c:	str	x9, [x20, #48]
  415160:	str	x8, [x19]
  415164:	ldp	x20, x19, [sp, #112]
  415168:	ldp	x22, x21, [sp, #96]
  41516c:	ldp	x24, x23, [sp, #80]
  415170:	ldp	x26, x25, [sp, #64]
  415174:	ldp	x28, x27, [sp, #48]
  415178:	ldp	x29, x30, [sp, #32]
  41517c:	add	sp, sp, #0x80
  415180:	ret
  415184:	str	wzr, [sp, #12]
  415188:	mov	w28, wzr
  41518c:	mov	w27, wzr
  415190:	b	414fd4 <feof@plt+0x12604>
  415194:	str	wzr, [sp, #12]
  415198:	mov	w28, wzr
  41519c:	mov	w27, wzr
  4151a0:	b	4150d8 <feof@plt+0x12708>
  4151a4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x1a68>
  4151a8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x1a68>
  4151ac:	add	x0, x0, #0x268
  4151b0:	add	x2, x2, #0x924
  4151b4:	mov	w1, #0x241                 	// #577
  4151b8:	bl	404ac4 <feof@plt+0x20f4>
  4151bc:	stp	x29, x30, [sp, #-48]!
  4151c0:	str	x21, [sp, #16]
  4151c4:	stp	x20, x19, [sp, #32]
  4151c8:	mov	x29, sp
  4151cc:	ldr	x8, [x0, #40]
  4151d0:	mov	x19, x0
  4151d4:	cbz	x8, 4151f4 <feof@plt+0x12824>
  4151d8:	ldr	x9, [x19, #32]
  4151dc:	cmp	x8, x9
  4151e0:	b.eq	4151f4 <feof@plt+0x12824>  // b.none
  4151e4:	ldr	x9, [x19, #48]
  4151e8:	sub	x8, x8, #0x1
  4151ec:	cmp	x9, x8
  4151f0:	b.cc	415274 <feof@plt+0x128a4>  // b.lo, b.ul, b.last
  4151f4:	ldr	x0, [x19, #16]
  4151f8:	bl	4029d0 <feof@plt>
  4151fc:	cbnz	w0, 415274 <feof@plt+0x128a4>
  415200:	ldr	x20, [x19, #16]
  415204:	mov	x0, x20
  415208:	bl	402910 <ferror@plt>
  41520c:	cbnz	w0, 415274 <feof@plt+0x128a4>
  415210:	ldp	x21, x8, [x19, #32]
  415214:	cmp	x8, x21
  415218:	b.ne	415248 <feof@plt+0x12878>  // b.any
  41521c:	ldr	x0, [x19, #24]
  415220:	lsl	x9, x8, #1
  415224:	cmp	x8, #0x0
  415228:	mov	w8, #0x1000                	// #4096
  41522c:	csel	x21, x8, x9, eq  // eq = none
  415230:	mov	x1, x21
  415234:	bl	450728 <_obstack_memory_used@@Base+0x190>
  415238:	ldr	x8, [x19, #40]
  41523c:	ldr	x20, [x19, #16]
  415240:	stp	x0, x21, [x19, #24]
  415244:	b	41524c <feof@plt+0x1287c>
  415248:	ldr	x0, [x19, #24]
  41524c:	add	x0, x0, x8
  415250:	sub	x2, x21, x8
  415254:	mov	w1, #0x1                   	// #1
  415258:	mov	x3, x20
  41525c:	bl	4023a0 <fread@plt>
  415260:	ldr	x8, [x19, #16]
  415264:	mov	x20, x0
  415268:	mov	x0, x8
  41526c:	bl	402910 <ferror@plt>
  415270:	cbz	w0, 415288 <feof@plt+0x128b8>
  415274:	mov	w0, wzr
  415278:	ldp	x20, x19, [sp, #32]
  41527c:	ldr	x21, [sp, #16]
  415280:	ldp	x29, x30, [sp], #48
  415284:	ret
  415288:	ldr	x8, [x19, #40]
  41528c:	cmp	x20, #0x0
  415290:	cset	w0, ne  // ne = any
  415294:	add	x8, x8, x20
  415298:	str	x8, [x19, #40]
  41529c:	b	415278 <feof@plt+0x128a8>
  4152a0:	stp	x29, x30, [sp, #-48]!
  4152a4:	str	x21, [sp, #16]
  4152a8:	stp	x20, x19, [sp, #32]
  4152ac:	mov	x29, sp
  4152b0:	adrp	x1, 415000 <feof@plt+0x12630>
  4152b4:	mov	x20, x0
  4152b8:	add	x1, x1, #0x478
  4152bc:	mov	w0, #0x30                  	// #48
  4152c0:	mov	w3, #0x1                   	// #1
  4152c4:	mov	x2, xzr
  4152c8:	mov	w21, #0x1                   	// #1
  4152cc:	bl	404504 <feof@plt+0x1b34>
  4152d0:	mov	x19, x0
  4152d4:	stp	xzr, xzr, [x0, #24]
  4152d8:	str	xzr, [x0, #16]
  4152dc:	strb	w21, [x0, #44]
  4152e0:	mov	x0, x20
  4152e4:	bl	404030 <feof@plt+0x1660>
  4152e8:	mov	w8, w0
  4152ec:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  4152f0:	lsl	x8, x8, #4
  4152f4:	add	x9, x9, #0x3e4
  4152f8:	ldr	w21, [x9, x8]
  4152fc:	adrp	x1, 415000 <feof@plt+0x12630>
  415300:	mov	w20, w0
  415304:	add	x1, x1, #0x4a0
  415308:	lsl	x0, x21, #4
  41530c:	mov	w2, #0x10                  	// #16
  415310:	mov	x3, x21
  415314:	bl	40452c <feof@plt+0x1b5c>
  415318:	cbz	x0, 415384 <feof@plt+0x129b4>
  41531c:	cbz	w21, 415368 <feof@plt+0x12998>
  415320:	cmp	w21, #0x1
  415324:	b.ne	415330 <feof@plt+0x12960>  // b.any
  415328:	mov	x8, xzr
  41532c:	b	415354 <feof@plt+0x12984>
  415330:	and	x8, x21, #0xfffffffe
  415334:	add	x9, x0, #0x10
  415338:	mov	x10, x8
  41533c:	stur	wzr, [x9, #-16]
  415340:	str	wzr, [x9], #32
  415344:	subs	x10, x10, #0x2
  415348:	b.ne	41533c <feof@plt+0x1296c>  // b.any
  41534c:	cmp	x8, x21
  415350:	b.eq	415368 <feof@plt+0x12998>  // b.none
  415354:	sub	x9, x21, x8
  415358:	add	x8, x0, x8, lsl #4
  41535c:	subs	x9, x9, #0x1
  415360:	str	wzr, [x8], #16
  415364:	b.ne	41535c <feof@plt+0x1298c>  // b.any
  415368:	stp	x0, x21, [x19]
  41536c:	str	w20, [x19, #40]
  415370:	mov	x0, x19
  415374:	ldp	x20, x19, [sp, #32]
  415378:	ldr	x21, [sp, #16]
  41537c:	ldp	x29, x30, [sp], #48
  415380:	ret
  415384:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  415388:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  41538c:	add	x0, x0, #0x5f9
  415390:	add	x2, x2, #0x610
  415394:	mov	w1, #0x2b5                 	// #693
  415398:	bl	404ac4 <feof@plt+0x20f4>
  41539c:	ldr	w8, [x0, #32]
  4153a0:	ldr	w12, [x0, #40]
  4153a4:	adrp	x14, 451000 <_obstack_memory_used@@Base+0xa68>
  4153a8:	add	x14, x14, #0x3e4
  4153ac:	add	w8, w8, #0x1
  4153b0:	ldr	w10, [x1]
  4153b4:	add	x9, x14, x12, lsl #4
  4153b8:	str	w8, [x0, #32]
  4153bc:	ldp	w15, w8, [x9]
  4153c0:	ldr	w11, [x9, #12]
  4153c4:	mul	x8, x8, x10
  4153c8:	lsr	x8, x8, #32
  4153cc:	sub	w9, w10, w8
  4153d0:	add	w9, w8, w9, lsr #1
  4153d4:	ldr	x8, [x0]
  4153d8:	lsr	w9, w9, w11
  4153dc:	msub	w9, w9, w15, w10
  4153e0:	lsl	x13, x9, #4
  4153e4:	ldr	w13, [x8, x13]
  4153e8:	cbz	w13, 415460 <feof@plt+0x12a90>
  4153ec:	ldr	w16, [x1]
  4153f0:	cmp	w13, w16
  4153f4:	b.eq	415460 <feof@plt+0x12a90>  // b.none
  4153f8:	add	x12, x14, x12, lsl #4
  4153fc:	ldr	w13, [x12, #8]
  415400:	sub	w14, w15, #0x2
  415404:	ldr	w15, [x0, #36]
  415408:	ldr	x12, [x0, #8]
  41540c:	mul	x13, x13, x10
  415410:	lsr	x13, x13, #32
  415414:	sub	w16, w10, w13
  415418:	add	w13, w13, w16, lsr #1
  41541c:	lsr	w11, w13, w11
  415420:	msub	w10, w11, w14, w10
  415424:	add	w10, w10, #0x1
  415428:	add	w11, w15, #0x1
  41542c:	add	w9, w10, w9
  415430:	cmp	x12, x9
  415434:	csel	w13, wzr, w12, hi  // hi = pmore
  415438:	sub	w9, w9, w13
  41543c:	str	w11, [x0, #36]
  415440:	lsl	x13, x9, #4
  415444:	ldr	w13, [x8, x13]
  415448:	cbz	w13, 41545c <feof@plt+0x12a8c>
  41544c:	ldr	w14, [x1]
  415450:	add	w11, w11, #0x1
  415454:	cmp	w13, w14
  415458:	b.ne	41542c <feof@plt+0x12a5c>  // b.any
  41545c:	mov	w9, w9
  415460:	add	x8, x8, x9, lsl #4
  415464:	add	x8, x8, #0x8
  415468:	cmp	w13, #0x0
  41546c:	csel	x0, xzr, x8, eq  // eq = none
  415470:	ret
  415474:	ret
  415478:	ldr	x8, [x0, #8]
  41547c:	mov	x9, x8
  415480:	sub	x9, x9, #0x1
  415484:	cmp	x9, x8
  415488:	b.cc	415480 <feof@plt+0x12ab0>  // b.lo, b.ul, b.last
  41548c:	ldrb	w8, [x0, #44]
  415490:	ldr	x0, [x0]
  415494:	cbz	w8, 41549c <feof@plt+0x12acc>
  415498:	b	40455c <feof@plt+0x1b8c>
  41549c:	b	4024c0 <free@plt>
  4154a0:	ret
  4154a4:	ret
  4154a8:	stp	x29, x30, [sp, #-48]!
  4154ac:	stp	x22, x21, [sp, #16]
  4154b0:	stp	x20, x19, [sp, #32]
  4154b4:	mov	x29, sp
  4154b8:	mov	w19, w3
  4154bc:	mov	w22, w2
  4154c0:	mov	x21, x1
  4154c4:	cmp	w3, #0x1
  4154c8:	mov	x20, x0
  4154cc:	b.ne	4154e8 <feof@plt+0x12b18>  // b.any
  4154d0:	ldp	x8, x9, [x20, #8]
  4154d4:	add	x8, x8, x8, lsl #1
  4154d8:	cmp	x8, x9, lsl #2
  4154dc:	b.hi	4154e8 <feof@plt+0x12b18>  // b.pmore
  4154e0:	mov	x0, x20
  4154e4:	bl	4155d4 <feof@plt+0x12c04>
  4154e8:	ldr	w8, [x20, #32]
  4154ec:	ldr	w9, [x20, #40]
  4154f0:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4154f4:	add	x10, x10, #0x3e4
  4154f8:	add	w8, w8, #0x1
  4154fc:	add	x12, x10, x9, lsl #4
  415500:	str	w8, [x20, #32]
  415504:	ldp	w13, w8, [x12]
  415508:	mov	w11, w22
  41550c:	ldr	w10, [x12, #12]
  415510:	mul	x8, x8, x11
  415514:	lsr	x9, x8, #32
  415518:	sub	w14, w22, w9
  41551c:	ldr	x8, [x20]
  415520:	add	w9, w9, w14, lsr #1
  415524:	lsr	w9, w9, w10
  415528:	msub	w9, w9, w13, w22
  41552c:	add	x0, x8, w9, uxtw #4
  415530:	ldr	w14, [x0]
  415534:	cbz	w14, 4155a8 <feof@plt+0x12bd8>
  415538:	ldr	w15, [x21]
  41553c:	cmp	w14, w15
  415540:	b.eq	4155c4 <feof@plt+0x12bf4>  // b.none
  415544:	ldr	w14, [x12, #8]
  415548:	ldr	w15, [x20, #36]
  41554c:	ldr	x12, [x20, #8]
  415550:	sub	w13, w13, #0x2
  415554:	mul	x11, x14, x11
  415558:	lsr	x11, x11, #32
  41555c:	sub	w14, w22, w11
  415560:	add	w11, w11, w14, lsr #1
  415564:	lsr	w10, w11, w10
  415568:	msub	w10, w10, w13, w22
  41556c:	add	w10, w10, #0x1
  415570:	add	w11, w15, #0x1
  415574:	add	w9, w10, w9
  415578:	cmp	x12, x9
  41557c:	csel	w13, wzr, w12, hi  // hi = pmore
  415580:	sub	w9, w9, w13
  415584:	str	w11, [x20, #36]
  415588:	add	x0, x8, w9, uxtw #4
  41558c:	ldr	w13, [x0]
  415590:	cbz	w13, 4155a8 <feof@plt+0x12bd8>
  415594:	ldr	w14, [x21]
  415598:	add	w11, w11, #0x1
  41559c:	cmp	w13, w14
  4155a0:	b.ne	415574 <feof@plt+0x12ba4>  // b.any
  4155a4:	b	4155c4 <feof@plt+0x12bf4>
  4155a8:	cbz	w19, 4155c0 <feof@plt+0x12bf0>
  4155ac:	ldr	x10, [x20, #16]
  4155b0:	add	x0, x8, w9, uxtw #4
  4155b4:	add	x10, x10, #0x1
  4155b8:	str	x10, [x20, #16]
  4155bc:	b	4155c4 <feof@plt+0x12bf4>
  4155c0:	mov	x0, xzr
  4155c4:	ldp	x20, x19, [sp, #32]
  4155c8:	ldp	x22, x21, [sp, #16]
  4155cc:	ldp	x29, x30, [sp], #48
  4155d0:	ret
  4155d4:	stp	x29, x30, [sp, #-64]!
  4155d8:	stp	x24, x23, [sp, #16]
  4155dc:	stp	x22, x21, [sp, #32]
  4155e0:	stp	x20, x19, [sp, #48]
  4155e4:	mov	x29, sp
  4155e8:	ldp	x8, x9, [x0, #16]
  4155ec:	ldp	x19, x24, [x0]
  4155f0:	mov	x20, x0
  4155f4:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  4155f8:	sub	x8, x8, x9
  4155fc:	lsl	x0, x8, #1
  415600:	cmp	x0, x24
  415604:	add	x23, x23, #0x3e4
  415608:	b.hi	415628 <feof@plt+0x12c58>  // b.pmore
  41560c:	ldr	w21, [x20, #40]
  415610:	cmp	x24, #0x21
  415614:	b.cc	4157a0 <feof@plt+0x12dd0>  // b.lo, b.ul, b.last
  415618:	lsl	w8, w8, #3
  41561c:	cmp	x24, x8
  415620:	mov	x22, x24
  415624:	b.ls	41563c <feof@plt+0x12c6c>  // b.plast
  415628:	bl	404030 <feof@plt+0x1660>
  41562c:	mov	w8, w0
  415630:	lsl	x8, x8, #4
  415634:	ldr	w22, [x23, x8]
  415638:	mov	w21, w0
  41563c:	ldrb	w8, [x20, #44]
  415640:	cbz	w8, 4157ac <feof@plt+0x12ddc>
  415644:	adrp	x1, 415000 <feof@plt+0x12630>
  415648:	lsl	x0, x22, #4
  41564c:	add	x1, x1, #0x4a0
  415650:	mov	w2, #0x10                  	// #16
  415654:	mov	x3, x22
  415658:	bl	40452c <feof@plt+0x1b5c>
  41565c:	cbz	x0, 4157bc <feof@plt+0x12dec>
  415660:	cbz	x22, 4156ac <feof@plt+0x12cdc>
  415664:	cmp	x22, #0x1
  415668:	b.ne	415674 <feof@plt+0x12ca4>  // b.any
  41566c:	mov	x8, xzr
  415670:	b	415698 <feof@plt+0x12cc8>
  415674:	and	x8, x22, #0xfffffffffffffffe
  415678:	add	x9, x0, #0x10
  41567c:	mov	x10, x8
  415680:	stur	wzr, [x9, #-16]
  415684:	str	wzr, [x9], #32
  415688:	subs	x10, x10, #0x2
  41568c:	b.ne	415680 <feof@plt+0x12cb0>  // b.any
  415690:	cmp	x22, x8
  415694:	b.eq	4156ac <feof@plt+0x12cdc>  // b.none
  415698:	sub	x9, x22, x8
  41569c:	add	x8, x0, x8, lsl #4
  4156a0:	subs	x9, x9, #0x1
  4156a4:	str	wzr, [x8], #16
  4156a8:	b.ne	4156a0 <feof@plt+0x12cd0>  // b.any
  4156ac:	ldp	x10, x9, [x20, #16]
  4156b0:	add	x8, x19, x24, lsl #4
  4156b4:	stp	x0, x22, [x20]
  4156b8:	str	w21, [x20, #40]
  4156bc:	sub	x9, x10, x9
  4156c0:	stp	x9, xzr, [x20, #16]
  4156c4:	mov	x9, x19
  4156c8:	b	4156e0 <feof@plt+0x12d10>
  4156cc:	ldr	q0, [x9]
  4156d0:	str	q0, [x16]
  4156d4:	add	x9, x9, #0x10
  4156d8:	cmp	x9, x8
  4156dc:	b.cs	415768 <feof@plt+0x12d98>  // b.hs, b.nlast
  4156e0:	ldr	w10, [x9]
  4156e4:	cbz	w10, 4156d4 <feof@plt+0x12d04>
  4156e8:	ldr	w11, [x20, #40]
  4156ec:	add	x14, x23, x11, lsl #4
  4156f0:	ldp	w15, w11, [x14]
  4156f4:	ldr	w13, [x14, #12]
  4156f8:	mul	x11, x11, x10
  4156fc:	lsr	x12, x11, #32
  415700:	sub	w16, w10, w12
  415704:	ldr	x11, [x20]
  415708:	add	w12, w12, w16, lsr #1
  41570c:	lsr	w12, w12, w13
  415710:	msub	w12, w12, w15, w10
  415714:	add	x16, x11, w12, uxtw #4
  415718:	ldr	w17, [x16]
  41571c:	cbz	w17, 4156cc <feof@plt+0x12cfc>
  415720:	ldr	w16, [x14, #8]
  415724:	ldr	x14, [x20, #8]
  415728:	sub	w15, w15, #0x2
  41572c:	mul	x16, x16, x10
  415730:	lsr	x16, x16, #32
  415734:	sub	w17, w10, w16
  415738:	add	w16, w16, w17, lsr #1
  41573c:	lsr	w13, w16, w13
  415740:	msub	w10, w13, w15, w10
  415744:	add	w10, w10, #0x1
  415748:	add	w12, w10, w12
  41574c:	cmp	x14, x12
  415750:	csel	w13, wzr, w14, hi  // hi = pmore
  415754:	sub	w12, w12, w13
  415758:	add	x16, x11, w12, uxtw #4
  41575c:	ldr	w13, [x16]
  415760:	cbnz	w13, 415748 <feof@plt+0x12d78>
  415764:	b	4156cc <feof@plt+0x12cfc>
  415768:	ldrb	w8, [x20, #44]
  41576c:	cbz	w8, 415788 <feof@plt+0x12db8>
  415770:	mov	x0, x19
  415774:	ldp	x20, x19, [sp, #48]
  415778:	ldp	x22, x21, [sp, #32]
  41577c:	ldp	x24, x23, [sp, #16]
  415780:	ldp	x29, x30, [sp], #64
  415784:	b	40455c <feof@plt+0x1b8c>
  415788:	mov	x0, x19
  41578c:	ldp	x20, x19, [sp, #48]
  415790:	ldp	x22, x21, [sp, #32]
  415794:	ldp	x24, x23, [sp, #16]
  415798:	ldp	x29, x30, [sp], #64
  41579c:	b	4024c0 <free@plt>
  4157a0:	mov	x22, x24
  4157a4:	ldrb	w8, [x20, #44]
  4157a8:	cbnz	w8, 415644 <feof@plt+0x12c74>
  4157ac:	mov	w1, #0x10                  	// #16
  4157b0:	mov	x0, x22
  4157b4:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4157b8:	cbnz	x0, 415660 <feof@plt+0x12c90>
  4157bc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0xa68>
  4157c0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  4157c4:	add	x0, x0, #0x5f9
  4157c8:	add	x2, x2, #0x610
  4157cc:	mov	w1, #0x2b5                 	// #693
  4157d0:	bl	404ac4 <feof@plt+0x20f4>
  4157d4:	str	xzr, [x0]
  4157d8:	ret
  4157dc:	stp	x29, x30, [sp, #-32]!
  4157e0:	stp	x20, x19, [sp, #16]
  4157e4:	mov	x29, sp
  4157e8:	mov	x19, x0
  4157ec:	ldr	x0, [x0]
  4157f0:	cbz	x0, 415808 <feof@plt+0x12e38>
  4157f4:	ldr	x20, [x0]
  4157f8:	bl	4024c0 <free@plt>
  4157fc:	mov	x0, x20
  415800:	str	x20, [x19]
  415804:	cbnz	x20, 4157f4 <feof@plt+0x12e24>
  415808:	ldp	x20, x19, [sp, #16]
  41580c:	ldp	x29, x30, [sp], #32
  415810:	ret
  415814:	cmp	x0, #0x10, lsl #12
  415818:	b.ne	415834 <feof@plt+0x12e64>  // b.any
  41581c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  415820:	ldr	x0, [x8, #1904]
  415824:	cbz	x0, 415838 <feof@plt+0x12e68>
  415828:	ldr	x9, [x0]
  41582c:	str	x9, [x8, #1904]
  415830:	ret
  415834:	b	4506a4 <_obstack_memory_used@@Base+0x10c>
  415838:	mov	w0, #0x10000               	// #65536
  41583c:	b	4506a4 <_obstack_memory_used@@Base+0x10c>
  415840:	ldr	x8, [x0]
  415844:	sub	x8, x8, x0
  415848:	cmp	x8, #0x10, lsl #12
  41584c:	b.ne	415864 <feof@plt+0x12e94>  // b.any
  415850:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  415854:	ldr	x9, [x8, #1904]
  415858:	str	x9, [x0]
  41585c:	str	x0, [x8, #1904]
  415860:	ret
  415864:	b	4024c0 <free@plt>
  415868:	cmp	x1, #0x2
  41586c:	b.cc	415910 <feof@plt+0x12f40>  // b.lo, b.ul, b.last
  415870:	sub	sp, sp, #0x160
  415874:	stp	x29, x30, [sp, #304]
  415878:	stp	x28, x21, [sp, #320]
  41587c:	stp	x20, x19, [sp, #336]
  415880:	add	x29, sp, #0x130
  415884:	eor	x10, x2, x2, asr #63
  415888:	lsr	x11, x1, #1
  41588c:	mov	x20, x0
  415890:	cmp	x2, #0x0
  415894:	mov	w8, #0x5                   	// #5
  415898:	mov	w9, #0x3                   	// #3
  41589c:	stp	x3, x0, [x29, #-40]
  4158a0:	mul	x0, x10, x11
  4158a4:	mov	x19, x1
  4158a8:	csel	x8, x9, x8, lt  // lt = tstop
  4158ac:	cmp	x0, #0x100
  4158b0:	stp	x1, x10, [x29, #-24]
  4158b4:	stur	x8, [x29, #-8]
  4158b8:	b.hi	4158d8 <feof@plt+0x12f08>  // b.pmore
  4158bc:	sub	x1, x29, #0x28
  4158c0:	add	x4, sp, #0x8
  4158c4:	mov	x0, x20
  4158c8:	mov	x2, x19
  4158cc:	mov	x3, x20
  4158d0:	bl	415914 <feof@plt+0x12f44>
  4158d4:	b	415900 <feof@plt+0x12f30>
  4158d8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4158dc:	mov	x21, x0
  4158e0:	sub	x1, x29, #0x28
  4158e4:	mov	x0, x20
  4158e8:	mov	x2, x19
  4158ec:	mov	x3, x20
  4158f0:	mov	x4, x21
  4158f4:	bl	415914 <feof@plt+0x12f44>
  4158f8:	mov	x0, x21
  4158fc:	bl	4024c0 <free@plt>
  415900:	ldp	x20, x19, [sp, #336]
  415904:	ldp	x28, x21, [sp, #320]
  415908:	ldp	x29, x30, [sp, #304]
  41590c:	add	sp, sp, #0x160
  415910:	ret
  415914:	stp	x29, x30, [sp, #-96]!
  415918:	str	x27, [sp, #16]
  41591c:	stp	x26, x25, [sp, #32]
  415920:	stp	x24, x23, [sp, #48]
  415924:	stp	x22, x21, [sp, #64]
  415928:	stp	x20, x19, [sp, #80]
  41592c:	mov	x29, sp
  415930:	ldr	x8, [x1, #32]
  415934:	mov	x20, x3
  415938:	mov	x19, x1
  41593c:	mov	x23, x2
  415940:	cmp	x8, x2
  415944:	mov	x24, x0
  415948:	b.cc	415b1c <feof@plt+0x1314c>  // b.lo, b.ul, b.last
  41594c:	ldr	x8, [x19, #24]
  415950:	ldr	x2, [x19]
  415954:	mov	x1, x24
  415958:	stp	x20, x23, [x19, #8]
  41595c:	add	x21, x24, x8
  415960:	mov	x0, x21
  415964:	add	x23, x21, x8
  415968:	bl	415f6c <feof@plt+0x1359c>
  41596c:	ldr	x9, [x19, #16]
  415970:	eor	x20, x0, x24
  415974:	eor	x21, x0, x21
  415978:	cmp	x9, #0x3
  41597c:	b.ne	4159b4 <feof@plt+0x12fe4>  // b.any
  415980:	ldr	x2, [x19]
  415984:	mov	x0, x23
  415988:	mov	x1, x21
  41598c:	bl	415f6c <feof@plt+0x1359c>
  415990:	ldr	x2, [x19]
  415994:	eor	x21, x0, x21
  415998:	eor	x23, x0, x23
  41599c:	mov	x0, x21
  4159a0:	mov	x1, x20
  4159a4:	bl	415f6c <feof@plt+0x1359c>
  4159a8:	ldr	x9, [x19, #16]
  4159ac:	eor	x20, x0, x20
  4159b0:	eor	x21, x0, x21
  4159b4:	ldr	x8, [x19, #24]
  4159b8:	cmp	x9, #0x3
  4159bc:	b.hi	4159ec <feof@plt+0x1301c>  // b.pmore
  4159c0:	cmp	x8, #0x8
  4159c4:	b.ne	415c04 <feof@plt+0x13234>  // b.any
  4159c8:	ldr	x8, [x20]
  4159cc:	ldr	x10, [x21]
  4159d0:	ldr	x11, [x19, #8]
  4159d4:	cmp	x9, #0x3
  4159d8:	b.ne	4159e4 <feof@plt+0x13014>  // b.any
  4159dc:	ldr	x9, [x23]
  4159e0:	str	x9, [x11, #16]
  4159e4:	stp	x8, x10, [x11]
  4159e8:	b	415b00 <feof@plt+0x13130>
  4159ec:	add	x25, x23, x8
  4159f0:	cmp	x9, #0x5
  4159f4:	add	x22, x25, x8
  4159f8:	b.ne	415a2c <feof@plt+0x1305c>  // b.any
  4159fc:	ldr	x2, [x19]
  415a00:	mov	x0, x22
  415a04:	mov	x1, x25
  415a08:	bl	415f6c <feof@plt+0x1359c>
  415a0c:	ldr	x2, [x19]
  415a10:	eor	x22, x0, x22
  415a14:	eor	x25, x0, x25
  415a18:	mov	x0, x22
  415a1c:	mov	x1, x23
  415a20:	bl	415f6c <feof@plt+0x1359c>
  415a24:	eor	x23, x0, x23
  415a28:	eor	x22, x0, x22
  415a2c:	ldr	x2, [x19]
  415a30:	mov	x0, x25
  415a34:	mov	x1, x23
  415a38:	bl	415f6c <feof@plt+0x1359c>
  415a3c:	ldr	x8, [x19, #16]
  415a40:	eor	x24, x0, x23
  415a44:	eor	x23, x0, x25
  415a48:	cmp	x8, #0x5
  415a4c:	b.ne	415a80 <feof@plt+0x130b0>  // b.any
  415a50:	ldr	x2, [x19]
  415a54:	mov	x0, x23
  415a58:	mov	x1, x20
  415a5c:	bl	415f6c <feof@plt+0x1359c>
  415a60:	ldr	x2, [x19]
  415a64:	eor	x20, x0, x20
  415a68:	eor	x23, x0, x23
  415a6c:	mov	x0, x22
  415a70:	mov	x1, x21
  415a74:	bl	415f6c <feof@plt+0x1359c>
  415a78:	eor	x21, x0, x21
  415a7c:	eor	x22, x0, x22
  415a80:	ldr	x2, [x19]
  415a84:	mov	x0, x24
  415a88:	mov	x1, x20
  415a8c:	bl	415f6c <feof@plt+0x1359c>
  415a90:	ldr	x2, [x19]
  415a94:	eor	x25, x0, x20
  415a98:	eor	x20, x0, x24
  415a9c:	mov	x0, x23
  415aa0:	mov	x1, x21
  415aa4:	bl	415f6c <feof@plt+0x1359c>
  415aa8:	ldr	x2, [x19]
  415aac:	eor	x21, x0, x21
  415ab0:	eor	x23, x0, x23
  415ab4:	mov	x0, x20
  415ab8:	mov	x1, x21
  415abc:	bl	415f6c <feof@plt+0x1359c>
  415ac0:	ldr	x10, [x19, #24]
  415ac4:	eor	x9, x0, x21
  415ac8:	eor	x8, x0, x20
  415acc:	cmp	x10, #0x8
  415ad0:	b.ne	415c30 <feof@plt+0x13260>  // b.any
  415ad4:	ldp	x11, x13, [x19, #8]
  415ad8:	ldr	x10, [x25]
  415adc:	ldr	x9, [x9]
  415ae0:	ldr	x12, [x8]
  415ae4:	ldr	x8, [x23]
  415ae8:	cmp	x13, #0x5
  415aec:	b.ne	415af8 <feof@plt+0x13128>  // b.any
  415af0:	ldr	x13, [x22]
  415af4:	str	x13, [x11, #32]
  415af8:	stp	x10, x9, [x11]
  415afc:	stp	x12, x8, [x11, #16]
  415b00:	ldp	x20, x19, [sp, #80]
  415b04:	ldp	x22, x21, [sp, #64]
  415b08:	ldp	x24, x23, [sp, #48]
  415b0c:	ldp	x26, x25, [sp, #32]
  415b10:	ldr	x27, [sp, #16]
  415b14:	ldp	x29, x30, [sp], #96
  415b18:	ret
  415b1c:	ldr	x8, [x19, #24]
  415b20:	lsr	x25, x23, #1
  415b24:	cmp	x24, x20
  415b28:	sub	x2, x23, x25
  415b2c:	mul	x27, x8, x25
  415b30:	add	x26, x24, x27
  415b34:	add	x22, x20, x27
  415b38:	mov	x0, x26
  415b3c:	mov	x1, x19
  415b40:	mov	x3, x22
  415b44:	csel	x21, x4, x24, eq  // eq = none
  415b48:	bl	415914 <feof@plt+0x12f44>
  415b4c:	mov	x0, x24
  415b50:	mov	x1, x19
  415b54:	mov	x2, x25
  415b58:	mov	x3, x21
  415b5c:	mov	x4, x26
  415b60:	bl	415914 <feof@plt+0x12f44>
  415b64:	ldr	x8, [x19, #24]
  415b68:	ldr	x9, [x19]
  415b6c:	add	x10, x21, x27
  415b70:	mov	x0, x22
  415b74:	sub	x1, x10, x8
  415b78:	blr	x9
  415b7c:	tbz	w0, #31, 415bdc <feof@plt+0x1320c>
  415b80:	ldr	x8, [x19, #24]
  415b84:	cmp	x8, #0x8
  415b88:	madd	x23, x8, x23, x20
  415b8c:	b.ne	415c68 <feof@plt+0x13298>  // b.any
  415b90:	ldr	x8, [x19]
  415b94:	mov	x0, x22
  415b98:	mov	x1, x21
  415b9c:	blr	x8
  415ba0:	sbfx	x8, x0, #31, #1
  415ba4:	bic	x9, x21, x8
  415ba8:	and	x10, x22, x8
  415bac:	orr	x9, x10, x9
  415bb0:	ldr	x9, [x9]
  415bb4:	and	x8, x8, #0x8
  415bb8:	add	x22, x22, x8
  415bbc:	str	x9, [x20], #8
  415bc0:	cmp	x20, x22
  415bc4:	b.eq	415b00 <feof@plt+0x13130>  // b.none
  415bc8:	eor	x8, x8, #0x8
  415bcc:	cmp	x22, x23
  415bd0:	add	x21, x21, x8
  415bd4:	b.ne	415b90 <feof@plt+0x131c0>  // b.any
  415bd8:	mov	x22, x23
  415bdc:	sub	x2, x22, x20
  415be0:	mov	x0, x20
  415be4:	mov	x1, x21
  415be8:	ldp	x20, x19, [sp, #80]
  415bec:	ldp	x22, x21, [sp, #64]
  415bf0:	ldp	x24, x23, [sp, #48]
  415bf4:	ldp	x26, x25, [sp, #32]
  415bf8:	ldr	x27, [sp, #16]
  415bfc:	ldp	x29, x30, [sp], #96
  415c00:	b	402390 <memcpy@plt>
  415c04:	cmp	x8, #0x4
  415c08:	b.ne	415cbc <feof@plt+0x132ec>  // b.any
  415c0c:	ldr	w8, [x20]
  415c10:	ldr	w10, [x21]
  415c14:	ldr	x11, [x19, #8]
  415c18:	cmp	x9, #0x3
  415c1c:	b.ne	415c28 <feof@plt+0x13258>  // b.any
  415c20:	ldr	w9, [x23]
  415c24:	str	w9, [x11, #8]
  415c28:	stp	w8, w10, [x11]
  415c2c:	b	415b00 <feof@plt+0x13130>
  415c30:	cmp	x10, #0x4
  415c34:	b.ne	415ccc <feof@plt+0x132fc>  // b.any
  415c38:	ldp	x11, x13, [x19, #8]
  415c3c:	ldr	w10, [x25]
  415c40:	ldr	w9, [x9]
  415c44:	ldr	w12, [x8]
  415c48:	ldr	w8, [x23]
  415c4c:	cmp	x13, #0x5
  415c50:	b.ne	415c5c <feof@plt+0x1328c>  // b.any
  415c54:	ldr	w13, [x22]
  415c58:	str	w13, [x11, #16]
  415c5c:	stp	w10, w9, [x11]
  415c60:	stp	w12, w8, [x11, #8]
  415c64:	b	415b00 <feof@plt+0x13130>
  415c68:	cmp	x8, #0x4
  415c6c:	b.ne	415e64 <feof@plt+0x13494>  // b.any
  415c70:	ldr	x8, [x19]
  415c74:	mov	x0, x22
  415c78:	mov	x1, x21
  415c7c:	blr	x8
  415c80:	sbfx	x8, x0, #31, #1
  415c84:	bic	x9, x21, x8
  415c88:	and	x10, x22, x8
  415c8c:	orr	x9, x10, x9
  415c90:	ldr	w9, [x9]
  415c94:	and	x8, x8, #0x4
  415c98:	add	x22, x22, x8
  415c9c:	str	w9, [x20], #4
  415ca0:	cmp	x20, x22
  415ca4:	b.eq	415b00 <feof@plt+0x13130>  // b.none
  415ca8:	eor	x8, x8, #0x4
  415cac:	cmp	x22, x23
  415cb0:	add	x21, x21, x8
  415cb4:	b.ne	415c70 <feof@plt+0x132a0>  // b.any
  415cb8:	b	415bd8 <feof@plt+0x13208>
  415cbc:	cmp	x8, #0x8
  415cc0:	b.cs	415cdc <feof@plt+0x1330c>  // b.hs, b.nlast
  415cc4:	mov	x9, xzr
  415cc8:	b	415e58 <feof@plt+0x13488>
  415ccc:	cmp	x10, #0x8
  415cd0:	b.cs	415d2c <feof@plt+0x1335c>  // b.hs, b.nlast
  415cd4:	mov	x11, xzr
  415cd8:	b	415e0c <feof@plt+0x1343c>
  415cdc:	mov	x10, xzr
  415ce0:	ldr	x13, [x20, x10]
  415ce4:	ldr	x11, [x21, x10]
  415ce8:	ldr	x12, [x19, #8]
  415cec:	cmp	x9, #0x3
  415cf0:	b.ne	415d00 <feof@plt+0x13330>  // b.any
  415cf4:	ldr	x9, [x23, x10]
  415cf8:	add	x8, x12, x8, lsl #1
  415cfc:	str	x9, [x8, x10]
  415d00:	str	x13, [x12, x10]
  415d04:	ldr	x8, [x19, #24]
  415d08:	add	x9, x10, #0x10
  415d0c:	add	x8, x12, x8
  415d10:	str	x11, [x8, x10]
  415d14:	ldr	x8, [x19, #24]
  415d18:	cmp	x9, x8
  415d1c:	b.hi	415e18 <feof@plt+0x13448>  // b.pmore
  415d20:	ldr	x9, [x19, #16]
  415d24:	add	x10, x10, #0x8
  415d28:	b	415ce0 <feof@plt+0x13310>
  415d2c:	mov	x12, xzr
  415d30:	ldp	x11, x17, [x19, #8]
  415d34:	ldr	x16, [x25, x12]
  415d38:	ldr	x14, [x9, x12]
  415d3c:	ldr	x15, [x8, x12]
  415d40:	ldr	x13, [x23, x12]
  415d44:	cmp	x17, #0x5
  415d48:	b.ne	415d58 <feof@plt+0x13388>  // b.any
  415d4c:	ldr	x17, [x22, x12]
  415d50:	add	x10, x11, x10, lsl #2
  415d54:	str	x17, [x10, x12]
  415d58:	str	x16, [x11, x12]
  415d5c:	ldr	x10, [x19, #24]
  415d60:	add	x16, x11, x10
  415d64:	str	x14, [x16, x12]
  415d68:	ldr	x14, [x19, #24]
  415d6c:	add	x16, x14, x10
  415d70:	add	x16, x11, x16
  415d74:	str	x15, [x16, x12]
  415d78:	ldr	x15, [x19, #24]
  415d7c:	add	x14, x15, x14
  415d80:	add	x10, x14, x10
  415d84:	add	x10, x11, x10
  415d88:	str	x13, [x10, x12]
  415d8c:	ldr	x10, [x19, #24]
  415d90:	add	x11, x12, #0x8
  415d94:	add	x12, x12, #0x10
  415d98:	cmp	x12, x10
  415d9c:	mov	x12, x11
  415da0:	b.ls	415d30 <feof@plt+0x13360>  // b.plast
  415da4:	b	415e0c <feof@plt+0x1343c>
  415da8:	ldp	x12, x17, [x19, #8]
  415dac:	ldrb	w16, [x25, x11]
  415db0:	ldrb	w14, [x9, x11]
  415db4:	ldrb	w15, [x8, x11]
  415db8:	ldrb	w13, [x23, x11]
  415dbc:	cmp	x17, #0x5
  415dc0:	b.ne	415dd0 <feof@plt+0x13400>  // b.any
  415dc4:	ldrb	w17, [x22, x11]
  415dc8:	add	x10, x12, x10, lsl #2
  415dcc:	strb	w17, [x10, x11]
  415dd0:	strb	w16, [x12, x11]
  415dd4:	ldr	x10, [x19, #24]
  415dd8:	add	x16, x12, x10
  415ddc:	strb	w14, [x16, x11]
  415de0:	ldr	x14, [x19, #24]
  415de4:	add	x16, x14, x10
  415de8:	add	x16, x12, x16
  415dec:	strb	w15, [x16, x11]
  415df0:	ldr	x15, [x19, #24]
  415df4:	add	x14, x15, x14
  415df8:	add	x10, x14, x10
  415dfc:	add	x10, x12, x10
  415e00:	strb	w13, [x10, x11]
  415e04:	ldr	x10, [x19, #24]
  415e08:	add	x11, x11, #0x1
  415e0c:	cmp	x11, x10
  415e10:	b.cc	415da8 <feof@plt+0x133d8>  // b.lo, b.ul, b.last
  415e14:	b	415b00 <feof@plt+0x13130>
  415e18:	add	x9, x10, #0x8
  415e1c:	b	415e58 <feof@plt+0x13488>
  415e20:	ldp	x10, x13, [x19, #8]
  415e24:	ldrb	w12, [x20, x9]
  415e28:	ldrb	w11, [x21, x9]
  415e2c:	cmp	x13, #0x3
  415e30:	b.ne	415e40 <feof@plt+0x13470>  // b.any
  415e34:	ldrb	w13, [x23, x9]
  415e38:	add	x8, x10, x8, lsl #1
  415e3c:	strb	w13, [x8, x9]
  415e40:	strb	w12, [x10, x9]
  415e44:	ldr	x8, [x19, #24]
  415e48:	add	x8, x10, x8
  415e4c:	strb	w11, [x8, x9]
  415e50:	ldr	x8, [x19, #24]
  415e54:	add	x9, x9, #0x1
  415e58:	cmp	x9, x8
  415e5c:	b.cc	415e20 <feof@plt+0x13450>  // b.lo, b.ul, b.last
  415e60:	b	415b00 <feof@plt+0x13130>
  415e64:	ldr	x8, [x19]
  415e68:	mov	x0, x22
  415e6c:	mov	x1, x21
  415e70:	blr	x8
  415e74:	ldr	x2, [x19, #24]
  415e78:	sbfx	x24, x0, #31, #1
  415e7c:	bic	x8, x21, x24
  415e80:	and	x9, x22, x24
  415e84:	orr	x1, x9, x8
  415e88:	mov	x0, x20
  415e8c:	bl	402390 <memcpy@plt>
  415e90:	ldr	x8, [x19, #24]
  415e94:	and	x9, x8, x24
  415e98:	add	x20, x20, x8
  415e9c:	add	x22, x22, x9
  415ea0:	cmp	x22, x20
  415ea4:	b.eq	415b00 <feof@plt+0x13130>  // b.none
  415ea8:	bic	x8, x8, x24
  415eac:	cmp	x22, x23
  415eb0:	add	x21, x21, x8
  415eb4:	b.ne	415e64 <feof@plt+0x13494>  // b.any
  415eb8:	b	415bd8 <feof@plt+0x13208>
  415ebc:	cmp	x1, #0x2
  415ec0:	b.cc	415f68 <feof@plt+0x13598>  // b.lo, b.ul, b.last
  415ec4:	sub	sp, sp, #0x160
  415ec8:	stp	x29, x30, [sp, #304]
  415ecc:	stp	x28, x21, [sp, #320]
  415ed0:	stp	x20, x19, [sp, #336]
  415ed4:	add	x29, sp, #0x130
  415ed8:	mvn	x8, x2
  415edc:	lsr	x11, x1, #1
  415ee0:	eor	x8, x8, x8, asr #63
  415ee4:	mov	x20, x0
  415ee8:	cmp	x2, #0x0
  415eec:	mov	w9, #0x5                   	// #5
  415ef0:	mov	w10, #0x3                   	// #3
  415ef4:	stp	x3, x0, [x29, #-40]
  415ef8:	mul	x0, x8, x11
  415efc:	mov	x19, x1
  415f00:	csel	x9, x10, x9, ge  // ge = tcont
  415f04:	cmp	x0, #0x100
  415f08:	stp	x1, x8, [x29, #-24]
  415f0c:	stur	x9, [x29, #-8]
  415f10:	b.hi	415f30 <feof@plt+0x13560>  // b.pmore
  415f14:	sub	x1, x29, #0x28
  415f18:	add	x4, sp, #0x8
  415f1c:	mov	x0, x20
  415f20:	mov	x2, x19
  415f24:	mov	x3, x20
  415f28:	bl	415914 <feof@plt+0x12f44>
  415f2c:	b	415f58 <feof@plt+0x13588>
  415f30:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  415f34:	mov	x21, x0
  415f38:	sub	x1, x29, #0x28
  415f3c:	mov	x0, x20
  415f40:	mov	x2, x19
  415f44:	mov	x3, x20
  415f48:	mov	x4, x21
  415f4c:	bl	415914 <feof@plt+0x12f44>
  415f50:	mov	x0, x21
  415f54:	bl	4024c0 <free@plt>
  415f58:	ldp	x20, x19, [sp, #336]
  415f5c:	ldp	x28, x21, [sp, #320]
  415f60:	ldp	x29, x30, [sp, #304]
  415f64:	add	sp, sp, #0x160
  415f68:	ret
  415f6c:	stp	x29, x30, [sp, #-32]!
  415f70:	str	x19, [sp, #16]
  415f74:	mov	x29, sp
  415f78:	eor	x19, x1, x0
  415f7c:	blr	x2
  415f80:	sbfx	x8, x0, #31, #1
  415f84:	and	x0, x19, x8
  415f88:	ldr	x19, [sp, #16]
  415f8c:	ldp	x29, x30, [sp], #32
  415f90:	ret
  415f94:	sub	sp, sp, #0x70
  415f98:	stp	x29, x30, [sp, #32]
  415f9c:	stp	x26, x25, [sp, #48]
  415fa0:	stp	x24, x23, [sp, #64]
  415fa4:	stp	x22, x21, [sp, #80]
  415fa8:	stp	x20, x19, [sp, #96]
  415fac:	ldr	x10, [x0, #1232]
  415fb0:	ldr	x9, [x0, #1168]
  415fb4:	ldr	x8, [x0, #1176]
  415fb8:	ldrb	w22, [x0, #1242]
  415fbc:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0xaa68>
  415fc0:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0xaa68>
  415fc4:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0xaa68>
  415fc8:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0xaa68>
  415fcc:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0xaa68>
  415fd0:	mov	x19, x0
  415fd4:	add	x20, x20, #0x1a2
  415fd8:	add	x25, x25, #0x172
  415fdc:	add	x26, x26, #0x181
  415fe0:	cmp	x10, #0x20
  415fe4:	add	x23, x23, #0x154
  415fe8:	add	x24, x24, #0x163
  415fec:	add	x29, sp, #0x20
  415ff0:	b.cc	416000 <feof@plt+0x13630>  // b.lo, b.ul, b.last
  415ff4:	cmp	w22, #0x0
  415ff8:	csel	x10, x24, x23, ne  // ne = any
  415ffc:	b	41601c <feof@plt+0x1364c>
  416000:	cmp	x10, #0x10
  416004:	b.cc	416014 <feof@plt+0x13644>  // b.lo, b.ul, b.last
  416008:	cmp	w22, #0x0
  41600c:	csel	x10, x26, x25, ne  // ne = any
  416010:	b	41601c <feof@plt+0x1364c>
  416014:	adrp	x10, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416018:	add	x10, x10, #0x1a2
  41601c:	cmp	x9, #0x0
  416020:	csel	x1, x20, x9, eq  // eq = none
  416024:	cmp	x8, #0x0
  416028:	csel	x21, x10, x8, eq  // eq = none
  41602c:	add	x8, sp, #0x8
  416030:	mov	x0, x19
  416034:	mov	x2, x20
  416038:	bl	416134 <feof@plt+0x13764>
  41603c:	ldr	x8, [sp, #24]
  416040:	ldur	q0, [sp, #8]
  416044:	add	x9, x19, #0x208
  416048:	mov	x0, x19
  41604c:	str	x8, [x9, #16]
  416050:	str	q0, [x9]
  416054:	ldr	x8, [x19, #1216]
  416058:	mov	x1, x20
  41605c:	mov	x2, x20
  416060:	str	w8, [x9, #16]
  416064:	add	x8, sp, #0x8
  416068:	bl	416134 <feof@plt+0x13764>
  41606c:	ldr	x8, [sp, #24]
  416070:	ldur	q0, [sp, #8]
  416074:	ldr	x9, [x19, #1216]
  416078:	cmp	w22, #0x0
  41607c:	str	x8, [x19, #560]
  416080:	csel	x1, x26, x25, ne  // ne = any
  416084:	add	x8, sp, #0x8
  416088:	mov	x0, x19
  41608c:	mov	x2, x20
  416090:	str	q0, [x19, #544]
  416094:	str	w9, [x19, #560]
  416098:	csel	x22, x24, x23, ne  // ne = any
  41609c:	bl	416134 <feof@plt+0x13764>
  4160a0:	ldr	x8, [sp, #24]
  4160a4:	ldur	q0, [sp, #8]
  4160a8:	add	x9, x19, #0x238
  4160ac:	mov	w10, #0x10                  	// #16
  4160b0:	str	x8, [x9, #16]
  4160b4:	add	x8, sp, #0x8
  4160b8:	mov	x0, x19
  4160bc:	mov	x1, x22
  4160c0:	mov	x2, x20
  4160c4:	str	q0, [x9]
  4160c8:	str	w10, [x9, #16]
  4160cc:	bl	416134 <feof@plt+0x13764>
  4160d0:	ldr	x8, [sp, #24]
  4160d4:	ldur	q0, [sp, #8]
  4160d8:	mov	w9, #0x20                  	// #32
  4160dc:	mov	x0, x19
  4160e0:	str	x8, [x19, #608]
  4160e4:	add	x8, sp, #0x8
  4160e8:	mov	x1, x21
  4160ec:	mov	x2, x20
  4160f0:	str	q0, [x19, #592]
  4160f4:	str	w9, [x19, #608]
  4160f8:	bl	416134 <feof@plt+0x13764>
  4160fc:	ldr	x8, [sp, #24]
  416100:	ldur	q0, [sp, #8]
  416104:	add	x9, x19, #0x268
  416108:	str	x8, [x9, #16]
  41610c:	str	q0, [x9]
  416110:	ldr	x8, [x19, #1232]
  416114:	str	w8, [x9, #16]
  416118:	ldp	x20, x19, [sp, #96]
  41611c:	ldp	x22, x21, [sp, #80]
  416120:	ldp	x24, x23, [sp, #64]
  416124:	ldp	x26, x25, [sp, #48]
  416128:	ldp	x29, x30, [sp, #32]
  41612c:	add	sp, sp, #0x70
  416130:	ret
  416134:	stp	x29, x30, [sp, #-64]!
  416138:	stp	x22, x21, [sp, #32]
  41613c:	stp	x20, x19, [sp, #48]
  416140:	mov	x21, x1
  416144:	mov	x20, x0
  416148:	mov	x0, x1
  41614c:	mov	x1, x2
  416150:	str	x23, [sp, #16]
  416154:	mov	x29, sp
  416158:	mov	x22, x2
  41615c:	mov	x19, x8
  416160:	bl	402880 <strcasecmp@plt>
  416164:	cbz	w0, 4162b0 <feof@plt+0x138e0>
  416168:	mov	x0, x21
  41616c:	bl	402420 <strlen@plt>
  416170:	mov	x23, x0
  416174:	mov	x0, x22
  416178:	bl	402420 <strlen@plt>
  41617c:	add	x8, x23, x0
  416180:	add	x8, x8, #0x11
  416184:	and	x8, x8, #0xfffffffffffffff0
  416188:	mov	x9, sp
  41618c:	sub	x23, x9, x8
  416190:	mov	sp, x23
  416194:	mov	x0, x23
  416198:	mov	x1, x22
  41619c:	bl	402590 <strcpy@plt>
  4161a0:	bl	402420 <strlen@plt>
  4161a4:	mov	w8, #0x2f                  	// #47
  4161a8:	strh	w8, [x23, x0]
  4161ac:	mov	x0, x23
  4161b0:	mov	x1, x21
  4161b4:	bl	402990 <strcat@plt>
  4161b8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4161bc:	add	x1, x1, #0x14e
  4161c0:	bl	402880 <strcasecmp@plt>
  4161c4:	cbz	w0, 4162cc <feof@plt+0x138fc>
  4161c8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4161cc:	add	x1, x1, #0x15d
  4161d0:	mov	x0, x23
  4161d4:	bl	402880 <strcasecmp@plt>
  4161d8:	cbz	w0, 4162d4 <feof@plt+0x13904>
  4161dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4161e0:	add	x1, x1, #0x16c
  4161e4:	mov	x0, x23
  4161e8:	bl	402880 <strcasecmp@plt>
  4161ec:	cbz	w0, 4162dc <feof@plt+0x1390c>
  4161f0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4161f4:	add	x1, x1, #0x17b
  4161f8:	mov	x0, x23
  4161fc:	bl	402880 <strcasecmp@plt>
  416200:	cbz	w0, 4162e4 <feof@plt+0x13914>
  416204:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416208:	add	x1, x1, #0x18a
  41620c:	mov	x0, x23
  416210:	bl	402880 <strcasecmp@plt>
  416214:	cbz	w0, 4162ec <feof@plt+0x1391c>
  416218:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41621c:	add	x1, x1, #0x199
  416220:	mov	x0, x23
  416224:	bl	402880 <strcasecmp@plt>
  416228:	cbz	w0, 4162f4 <feof@plt+0x13924>
  41622c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416230:	add	x1, x1, #0x1a8
  416234:	mov	x0, x23
  416238:	bl	402880 <strcasecmp@plt>
  41623c:	cbz	w0, 4162fc <feof@plt+0x1392c>
  416240:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416244:	add	x1, x1, #0x1b7
  416248:	mov	x0, x23
  41624c:	bl	402880 <strcasecmp@plt>
  416250:	cbz	w0, 416304 <feof@plt+0x13934>
  416254:	adrp	x8, 416000 <feof@plt+0x13630>
  416258:	add	x8, x8, #0x3f4
  41625c:	mov	x0, x21
  416260:	mov	x1, x22
  416264:	str	x8, [x19]
  416268:	bl	4024b0 <iconv_open@plt>
  41626c:	mov	w8, #0xffffffff            	// #-1
  416270:	cmn	x0, #0x1
  416274:	str	x0, [x19, #8]
  416278:	str	w8, [x19, #16]
  41627c:	b.ne	416328 <feof@plt+0x13958>  // b.any
  416280:	bl	4027c0 <__errno_location@plt>
  416284:	ldr	w8, [x0]
  416288:	cmp	w8, #0x16
  41628c:	b.ne	416340 <feof@plt+0x13970>  // b.any
  416290:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416294:	add	x2, x2, #0x113
  416298:	mov	w1, #0x3                   	// #3
  41629c:	mov	x0, x20
  4162a0:	mov	x3, x22
  4162a4:	mov	x4, x21
  4162a8:	bl	41de04 <feof@plt+0x1b434>
  4162ac:	b	416354 <feof@plt+0x13984>
  4162b0:	adrp	x8, 417000 <feof@plt+0x14630>
  4162b4:	add	x8, x8, #0xb10
  4162b8:	mov	x9, #0xffffffffffffffff    	// #-1
  4162bc:	mov	w10, #0xffffffff            	// #-1
  4162c0:	stp	x8, x9, [x19]
  4162c4:	str	w10, [x19, #16]
  4162c8:	b	416328 <feof@plt+0x13958>
  4162cc:	mov	x8, xzr
  4162d0:	b	416308 <feof@plt+0x13938>
  4162d4:	mov	w8, #0x1                   	// #1
  4162d8:	b	416308 <feof@plt+0x13938>
  4162dc:	mov	w8, #0x2                   	// #2
  4162e0:	b	416308 <feof@plt+0x13938>
  4162e4:	mov	w8, #0x3                   	// #3
  4162e8:	b	416308 <feof@plt+0x13938>
  4162ec:	mov	w8, #0x4                   	// #4
  4162f0:	b	416308 <feof@plt+0x13938>
  4162f4:	mov	w8, #0x5                   	// #5
  4162f8:	b	416308 <feof@plt+0x13938>
  4162fc:	mov	w8, #0x6                   	// #6
  416300:	b	416308 <feof@plt+0x13938>
  416304:	mov	w8, #0x7                   	// #7
  416308:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x6a68>
  41630c:	mov	w9, #0x18                  	// #24
  416310:	add	x10, x10, #0x348
  416314:	madd	x8, x8, x9, x10
  416318:	ldur	q0, [x8, #8]
  41631c:	mov	w8, #0xffffffff            	// #-1
  416320:	str	w8, [x19, #16]
  416324:	str	q0, [x19]
  416328:	mov	sp, x29
  41632c:	ldp	x20, x19, [sp, #48]
  416330:	ldp	x22, x21, [sp, #32]
  416334:	ldr	x23, [sp, #16]
  416338:	ldp	x29, x30, [sp], #64
  41633c:	ret
  416340:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416344:	add	x2, x2, #0x143
  416348:	mov	w1, #0x3                   	// #3
  41634c:	mov	x0, x20
  416350:	bl	41e85c <feof@plt+0x1be8c>
  416354:	adrp	x8, 417000 <feof@plt+0x14630>
  416358:	add	x8, x8, #0xb10
  41635c:	str	x8, [x19]
  416360:	b	416328 <feof@plt+0x13958>
  416364:	stp	x29, x30, [sp, #-32]!
  416368:	stp	x20, x19, [sp, #16]
  41636c:	ldr	x8, [x0, #520]
  416370:	adrp	x20, 416000 <feof@plt+0x13630>
  416374:	add	x20, x20, #0x3f4
  416378:	mov	x19, x0
  41637c:	cmp	x8, x20
  416380:	mov	x29, sp
  416384:	b.ne	416390 <feof@plt+0x139c0>  // b.any
  416388:	ldr	x0, [x19, #528]
  41638c:	bl	402380 <iconv_close@plt>
  416390:	ldr	x8, [x19, #544]
  416394:	cmp	x8, x20
  416398:	b.ne	4163a4 <feof@plt+0x139d4>  // b.any
  41639c:	ldr	x0, [x19, #552]
  4163a0:	bl	402380 <iconv_close@plt>
  4163a4:	ldr	x8, [x19, #568]
  4163a8:	cmp	x8, x20
  4163ac:	b.ne	4163b8 <feof@plt+0x139e8>  // b.any
  4163b0:	ldr	x0, [x19, #576]
  4163b4:	bl	402380 <iconv_close@plt>
  4163b8:	ldr	x8, [x19, #592]
  4163bc:	cmp	x8, x20
  4163c0:	b.ne	4163cc <feof@plt+0x139fc>  // b.any
  4163c4:	ldr	x0, [x19, #600]
  4163c8:	bl	402380 <iconv_close@plt>
  4163cc:	ldr	x8, [x19, #616]
  4163d0:	cmp	x8, x20
  4163d4:	b.eq	4163e4 <feof@plt+0x13a14>  // b.none
  4163d8:	ldp	x20, x19, [sp, #16]
  4163dc:	ldp	x29, x30, [sp], #32
  4163e0:	ret
  4163e4:	ldr	x0, [x19, #624]
  4163e8:	ldp	x20, x19, [sp, #16]
  4163ec:	ldp	x29, x30, [sp], #32
  4163f0:	b	402380 <iconv_close@plt>
  4163f4:	sub	sp, sp, #0x50
  4163f8:	stp	x22, x21, [sp, #48]
  4163fc:	stp	x20, x19, [sp, #64]
  416400:	mov	x19, x3
  416404:	mov	x21, x2
  416408:	mov	x22, x1
  41640c:	mov	x1, xzr
  416410:	mov	x2, xzr
  416414:	mov	x3, xzr
  416418:	mov	x4, xzr
  41641c:	stp	x29, x30, [sp, #32]
  416420:	add	x29, sp, #0x20
  416424:	mov	x20, x0
  416428:	bl	4026f0 <iconv@plt>
  41642c:	cmn	x0, #0x1
  416430:	b.eq	416510 <feof@plt+0x13b40>  // b.none
  416434:	stur	x22, [x29, #-8]
  416438:	ldr	x8, [x19]
  41643c:	ldr	x9, [x19, #16]
  416440:	sub	x1, x29, #0x8
  416444:	add	x2, sp, #0x8
  416448:	add	x3, sp, #0x10
  41644c:	add	x8, x8, x9
  416450:	stp	x21, x8, [sp, #8]
  416454:	ldr	x8, [x19, #8]
  416458:	mov	x4, sp
  41645c:	mov	x0, x20
  416460:	sub	x8, x8, x9
  416464:	str	x8, [sp]
  416468:	bl	4026f0 <iconv@plt>
  41646c:	ldr	x8, [sp, #8]
  416470:	cbnz	x8, 416528 <feof@plt+0x13b58>
  416474:	add	x3, sp, #0x10
  416478:	mov	x4, sp
  41647c:	mov	x0, x20
  416480:	mov	x1, xzr
  416484:	mov	x2, xzr
  416488:	bl	4026f0 <iconv@plt>
  41648c:	cmn	x0, #0x1
  416490:	b.eq	4164ac <feof@plt+0x13adc>  // b.none
  416494:	ldr	x8, [x19, #8]
  416498:	ldr	x9, [sp]
  41649c:	mov	w0, #0x1                   	// #1
  4164a0:	sub	x8, x8, x9
  4164a4:	str	x8, [x19, #16]
  4164a8:	b	416514 <feof@plt+0x13b44>
  4164ac:	bl	4027c0 <__errno_location@plt>
  4164b0:	ldr	w8, [x0]
  4164b4:	cmp	w8, #0x7
  4164b8:	b.ne	416510 <feof@plt+0x13b40>  // b.any
  4164bc:	ldr	x8, [sp]
  4164c0:	add	x8, x8, #0x100
  4164c4:	str	x8, [sp]
  4164c8:	ldp	x0, x8, [x19]
  4164cc:	add	x1, x8, #0x100
  4164d0:	str	x1, [x19, #8]
  4164d4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4164d8:	str	x0, [x19]
  4164dc:	ldr	x8, [x19, #8]
  4164e0:	ldr	x9, [sp]
  4164e4:	add	x3, sp, #0x10
  4164e8:	mov	x4, sp
  4164ec:	add	x8, x0, x8
  4164f0:	sub	x8, x8, x9
  4164f4:	mov	x0, x20
  4164f8:	mov	x1, xzr
  4164fc:	mov	x2, xzr
  416500:	str	x8, [sp, #16]
  416504:	bl	4026f0 <iconv@plt>
  416508:	cmn	x0, #0x1
  41650c:	b.ne	416494 <feof@plt+0x13ac4>  // b.any
  416510:	mov	w0, wzr
  416514:	ldp	x20, x19, [sp, #64]
  416518:	ldp	x22, x21, [sp, #48]
  41651c:	ldp	x29, x30, [sp, #32]
  416520:	add	sp, sp, #0x50
  416524:	ret
  416528:	bl	4027c0 <__errno_location@plt>
  41652c:	mov	x21, x0
  416530:	ldr	w8, [x21]
  416534:	cmp	w8, #0x7
  416538:	b.ne	416510 <feof@plt+0x13b40>  // b.any
  41653c:	ldr	x8, [sp]
  416540:	add	x8, x8, #0x100
  416544:	str	x8, [sp]
  416548:	ldp	x0, x8, [x19]
  41654c:	add	x1, x8, #0x100
  416550:	str	x1, [x19, #8]
  416554:	bl	450728 <_obstack_memory_used@@Base+0x190>
  416558:	str	x0, [x19]
  41655c:	ldr	x8, [x19, #8]
  416560:	ldr	x9, [sp]
  416564:	sub	x1, x29, #0x8
  416568:	add	x2, sp, #0x8
  41656c:	add	x8, x0, x8
  416570:	sub	x8, x8, x9
  416574:	add	x3, sp, #0x10
  416578:	mov	x4, sp
  41657c:	mov	x0, x20
  416580:	str	x8, [sp, #16]
  416584:	bl	4026f0 <iconv@plt>
  416588:	ldr	x8, [sp, #8]
  41658c:	cbz	x8, 416474 <feof@plt+0x13aa4>
  416590:	b	416530 <feof@plt+0x13b60>
  416594:	sub	sp, sp, #0x40
  416598:	stp	x20, x19, [sp, #48]
  41659c:	mov	w20, w1
  4165a0:	cmp	w1, #0x7f
  4165a4:	mov	x19, x0
  4165a8:	stp	x29, x30, [sp, #32]
  4165ac:	add	x29, sp, #0x20
  4165b0:	b.cc	4165c4 <feof@plt+0x13bf4>  // b.lo, b.ul, b.last
  4165b4:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4165b8:	mov	w3, w20
  4165bc:	add	x2, x2, #0xdfc
  4165c0:	b	41663c <feof@plt+0x13c6c>
  4165c4:	mov	w8, #0x1                   	// #1
  4165c8:	mov	w0, #0x1                   	// #1
  4165cc:	sturb	w20, [x29, #-4]
  4165d0:	str	x8, [sp, #8]
  4165d4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4165d8:	str	x0, [sp]
  4165dc:	str	xzr, [sp, #16]
  4165e0:	ldr	x8, [x19, #520]
  4165e4:	ldr	x0, [x19, #528]
  4165e8:	sub	x1, x29, #0x4
  4165ec:	mov	x3, sp
  4165f0:	mov	w2, #0x1                   	// #1
  4165f4:	blr	x8
  4165f8:	tbz	w0, #0, 416618 <feof@plt+0x13c48>
  4165fc:	ldr	x8, [sp, #16]
  416600:	cmp	x8, #0x1
  416604:	b.ne	416630 <feof@plt+0x13c60>  // b.any
  416608:	ldr	x0, [sp]
  41660c:	ldrb	w19, [x0]
  416610:	bl	4024c0 <free@plt>
  416614:	b	41664c <feof@plt+0x13c7c>
  416618:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  41661c:	add	x2, x2, #0xe36
  416620:	mov	w1, #0x4                   	// #4
  416624:	mov	x0, x19
  416628:	bl	41e85c <feof@plt+0x1be8c>
  41662c:	b	416648 <feof@plt+0x13c78>
  416630:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416634:	mov	w3, w20
  416638:	add	x2, x2, #0xe5c
  41663c:	mov	w1, #0x4                   	// #4
  416640:	mov	x0, x19
  416644:	bl	41de04 <feof@plt+0x1b434>
  416648:	mov	w19, wzr
  41664c:	mov	w0, w19
  416650:	ldp	x20, x19, [sp, #48]
  416654:	ldp	x29, x30, [sp, #32]
  416658:	add	sp, sp, #0x40
  41665c:	ret
  416660:	stp	x29, x30, [sp, #-32]!
  416664:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x1a68>
  416668:	ldr	d0, [x8, #2984]
  41666c:	str	x19, [sp, #16]
  416670:	mov	x19, x0
  416674:	str	xzr, [x0]
  416678:	str	d0, [x0, #8]
  41667c:	mov	w0, #0x40                  	// #64
  416680:	mov	x29, sp
  416684:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  416688:	str	x0, [x19]
  41668c:	ldr	x19, [sp, #16]
  416690:	ldp	x29, x30, [sp], #32
  416694:	ret
  416698:	ldr	x0, [x0]
  41669c:	b	4024c0 <free@plt>
  4166a0:	stp	x29, x30, [sp, #-32]!
  4166a4:	stp	x20, x19, [sp, #16]
  4166a8:	ldp	w8, w9, [x0, #8]
  4166ac:	mov	x19, x0
  4166b0:	sxtw	x9, w9
  4166b4:	mov	x20, x1
  4166b8:	cmp	w8, w9
  4166bc:	mov	x29, sp
  4166c0:	b.ge	4166cc <feof@plt+0x13cfc>  // b.tcont
  4166c4:	ldr	x0, [x19]
  4166c8:	b	4166e8 <feof@plt+0x13d18>
  4166cc:	ldr	x0, [x19]
  4166d0:	lsl	w8, w9, #1
  4166d4:	lsl	x1, x9, #4
  4166d8:	str	w8, [x19, #12]
  4166dc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4166e0:	ldr	w8, [x19, #8]
  4166e4:	str	x0, [x19]
  4166e8:	add	w9, w8, #0x1
  4166ec:	str	w9, [x19, #8]
  4166f0:	str	x20, [x0, w8, sxtw #3]
  4166f4:	ldp	x20, x19, [sp, #16]
  4166f8:	ldp	x29, x30, [sp], #32
  4166fc:	ret
  416700:	stp	x29, x30, [sp, #-64]!
  416704:	cmp	w1, #0x1
  416708:	str	x23, [sp, #16]
  41670c:	stp	x22, x21, [sp, #32]
  416710:	stp	x20, x19, [sp, #48]
  416714:	mov	x29, sp
  416718:	b.lt	416794 <feof@plt+0x13dc4>  // b.tstop
  41671c:	mov	x19, x2
  416720:	mov	w20, w1
  416724:	mov	x21, x0
  416728:	mov	w22, #0x60000000            	// #1610612736
  41672c:	b	416760 <feof@plt+0x13d90>
  416730:	ldr	x0, [x21]
  416734:	lsl	w8, w9, #1
  416738:	lsl	x1, x9, #4
  41673c:	str	w8, [x21, #12]
  416740:	bl	450728 <_obstack_memory_used@@Base+0x190>
  416744:	ldr	w8, [x21, #8]
  416748:	str	x0, [x21]
  41674c:	add	w9, w8, #0x1
  416750:	subs	w20, w20, #0x1
  416754:	str	w9, [x21, #8]
  416758:	str	x23, [x0, w8, sxtw #3]
  41675c:	b.eq	416794 <feof@plt+0x13dc4>  // b.none
  416760:	ldr	w23, [x19]
  416764:	cmp	w23, w22
  416768:	b.hi	416778 <feof@plt+0x13da8>  // b.pmore
  41676c:	ldr	w8, [x19, #4]
  416770:	add	w8, w8, w23
  416774:	str	w8, [x19]
  416778:	ldp	w8, w9, [x21, #8]
  41677c:	bfi	x23, x23, #32, #32
  416780:	sxtw	x9, w9
  416784:	cmp	w8, w9
  416788:	b.ge	416730 <feof@plt+0x13d60>  // b.tcont
  41678c:	ldr	x0, [x21]
  416790:	b	41674c <feof@plt+0x13d7c>
  416794:	ldp	x20, x19, [sp, #48]
  416798:	ldp	x22, x21, [sp, #32]
  41679c:	ldr	x23, [sp, #16]
  4167a0:	ldp	x29, x30, [sp], #64
  4167a4:	ret
  4167a8:	mov	x8, x0
  4167ac:	ldr	w0, [x0]
  4167b0:	mov	w9, #0x60000000            	// #1610612736
  4167b4:	cmp	w0, w9
  4167b8:	b.hi	4167c8 <feof@plt+0x13df8>  // b.pmore
  4167bc:	ldr	w9, [x8, #4]
  4167c0:	add	w9, w9, w0
  4167c4:	str	w9, [x8]
  4167c8:	bfi	x0, x0, #32, #32
  4167cc:	ret
  4167d0:	sub	sp, sp, #0x70
  4167d4:	stp	x29, x30, [sp, #16]
  4167d8:	stp	x28, x27, [sp, #32]
  4167dc:	stp	x26, x25, [sp, #48]
  4167e0:	stp	x24, x23, [sp, #64]
  4167e4:	stp	x22, x21, [sp, #80]
  4167e8:	stp	x20, x19, [sp, #96]
  4167ec:	ldrb	w8, [x0, #1120]
  4167f0:	ldr	x21, [x1]
  4167f4:	mov	x26, x7
  4167f8:	mov	x27, x6
  4167fc:	mov	x24, x4
  416800:	mov	w22, w3
  416804:	mov	x25, x1
  416808:	mov	x20, x0
  41680c:	mov	x28, x2
  416810:	add	x29, sp, #0x10
  416814:	str	x5, [sp, #8]
  416818:	cbz	w8, 416844 <feof@plt+0x13e74>
  41681c:	cbnz	w22, 41687c <feof@plt+0x13eac>
  416820:	ldrb	w8, [x20, #1138]
  416824:	cbz	w8, 41687c <feof@plt+0x13eac>
  416828:	ldurb	w3, [x21, #-1]
  41682c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416830:	add	x2, x2, #0xf08
  416834:	mov	w1, #0x6                   	// #6
  416838:	mov	x0, x20
  41683c:	bl	41df34 <feof@plt+0x1b564>
  416840:	b	41687c <feof@plt+0x13eac>
  416844:	ldrb	w9, [x20, #1152]
  416848:	cbz	w9, 416868 <feof@plt+0x13e98>
  41684c:	ldrsb	w9, [x20, #1198]
  416850:	cmp	w9, #0x1
  416854:	b.lt	41681c <feof@plt+0x13e4c>  // b.tstop
  416858:	cbnz	w8, 41681c <feof@plt+0x13e4c>
  41685c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416860:	add	x2, x2, #0xece
  416864:	b	416870 <feof@plt+0x13ea0>
  416868:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  41686c:	add	x2, x2, #0xe96
  416870:	mov	x0, x20
  416874:	mov	w1, wzr
  416878:	bl	41de04 <feof@plt+0x1b434>
  41687c:	ldurb	w8, [x21, #-1]
  416880:	sub	x4, x21, #0x2
  416884:	cmp	w8, #0x75
  416888:	b.eq	41689c <feof@plt+0x13ecc>  // b.none
  41688c:	cmp	w8, #0x55
  416890:	b.ne	4168a4 <feof@plt+0x13ed4>  // b.any
  416894:	mov	w19, #0x8                   	// #8
  416898:	b	4168c4 <feof@plt+0x13ef4>
  41689c:	mov	w19, #0x4                   	// #4
  4168a0:	b	4168c4 <feof@plt+0x13ef4>
  4168a4:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4168a8:	add	x2, x2, #0xf3b
  4168ac:	mov	w1, #0x4                   	// #4
  4168b0:	mov	x0, x20
  4168b4:	mov	w19, #0x4                   	// #4
  4168b8:	mov	x23, x4
  4168bc:	bl	41de04 <feof@plt+0x1b434>
  4168c0:	mov	x4, x23
  4168c4:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  4168c8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  4168cc:	mov	w23, wzr
  4168d0:	add	x8, x8, #0xa50
  4168d4:	add	x9, x9, #0x93f
  4168d8:	mov	w10, #0x60000000            	// #1610612736
  4168dc:	ldrb	w11, [x21]
  4168e0:	ldrh	w12, [x8, x11, lsl #1]
  4168e4:	tbz	w12, #8, 416934 <feof@plt+0x13f64>
  4168e8:	cbz	x26, 41690c <feof@plt+0x13f3c>
  4168ec:	cbz	x27, 416c48 <feof@plt+0x14278>
  4168f0:	ldr	w12, [x26]
  4168f4:	cmp	w12, w10
  4168f8:	b.hi	416908 <feof@plt+0x13f38>  // b.pmore
  4168fc:	ldr	w13, [x26, #4]
  416900:	add	w13, w13, w12
  416904:	str	w13, [x26]
  416908:	str	w12, [x27, #4]
  41690c:	ldrb	w11, [x9, x11]
  416910:	add	x21, x21, #0x1
  416914:	cmp	x21, x28
  416918:	add	w23, w11, w23, lsl #4
  41691c:	sub	w11, w19, #0x1
  416920:	b.cs	416938 <feof@plt+0x13f68>  // b.hs, b.nlast
  416924:	cmp	w19, #0x1
  416928:	mov	w19, w11
  41692c:	b.ne	4168dc <feof@plt+0x13f0c>  // b.any
  416930:	b	416938 <feof@plt+0x13f68>
  416934:	mov	w11, w19
  416938:	cbz	w22, 41694c <feof@plt+0x13f7c>
  41693c:	cbz	w11, 41694c <feof@plt+0x13f7c>
  416940:	mov	w23, wzr
  416944:	mov	w0, wzr
  416948:	b	416a20 <feof@plt+0x14050>
  41694c:	str	x21, [x25]
  416950:	cbz	w11, 416964 <feof@plt+0x13f94>
  416954:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416958:	sub	w3, w21, w4
  41695c:	add	x2, x2, #0xf81
  416960:	b	416a0c <feof@plt+0x1403c>
  416964:	cmp	w23, #0x9f
  416968:	b.hi	416998 <feof@plt+0x13fc8>  // b.pmore
  41696c:	ldrb	w8, [x20, #1120]
  416970:	cbnz	w8, 416998 <feof@plt+0x13fc8>
  416974:	sub	w8, w23, #0x24
  416978:	cmp	w8, #0x3c
  41697c:	b.hi	416a00 <feof@plt+0x14030>  // b.pmore
  416980:	mov	w9, #0x1                   	// #1
  416984:	lsl	x8, x9, x8
  416988:	mov	x9, #0x1000000010000000    	// #1152921504875282432
  41698c:	movk	x9, #0x1
  416990:	tst	x8, x9
  416994:	b.eq	416a00 <feof@plt+0x14030>  // b.none
  416998:	tbnz	w23, #31, 416a00 <feof@plt+0x14030>
  41699c:	and	w8, w23, #0xfffff800
  4169a0:	mov	w9, #0xd800                	// #55296
  4169a4:	cmp	w8, w9
  4169a8:	b.eq	416a00 <feof@plt+0x14030>  // b.none
  4169ac:	cbz	w22, 416a48 <feof@plt+0x14078>
  4169b0:	cmp	w23, #0x24
  4169b4:	b.ne	416a48 <feof@plt+0x14078>  // b.any
  4169b8:	ldrb	w8, [x20, #1146]
  4169bc:	cbz	w8, 416a48 <feof@plt+0x14078>
  4169c0:	ldrb	w8, [x20, #1148]
  4169c4:	ldr	x19, [sp, #8]
  4169c8:	cbz	w8, 4169ec <feof@plt+0x1401c>
  4169cc:	ldrb	w8, [x20, #18]
  4169d0:	cbnz	w8, 4169ec <feof@plt+0x1401c>
  4169d4:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4169d8:	add	x2, x2, #0xfd2
  4169dc:	mov	w1, #0x2                   	// #2
  4169e0:	mov	x0, x20
  4169e4:	strb	wzr, [x20, #1148]
  4169e8:	bl	41de04 <feof@plt+0x1b434>
  4169ec:	mov	w23, #0x24                  	// #36
  4169f0:	strb	wzr, [x24, #4]
  4169f4:	str	w23, [x24]
  4169f8:	mov	w0, #0x1                   	// #1
  4169fc:	b	416a24 <feof@plt+0x14054>
  416a00:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416a04:	sub	w3, w21, w4
  416a08:	add	x2, x2, #0xfaa
  416a0c:	mov	w1, #0x3                   	// #3
  416a10:	mov	x0, x20
  416a14:	bl	41de04 <feof@plt+0x1b434>
  416a18:	mov	w23, #0x1                   	// #1
  416a1c:	mov	w0, #0x1                   	// #1
  416a20:	ldr	x19, [sp, #8]
  416a24:	str	w23, [x19]
  416a28:	ldp	x20, x19, [sp, #96]
  416a2c:	ldp	x22, x21, [sp, #80]
  416a30:	ldp	x24, x23, [sp, #64]
  416a34:	ldp	x26, x25, [sp, #48]
  416a38:	ldp	x28, x27, [sp, #32]
  416a3c:	ldp	x29, x30, [sp, #16]
  416a40:	add	sp, sp, #0x70
  416a44:	ret
  416a48:	cbz	w22, 416a1c <feof@plt+0x1404c>
  416a4c:	lsr	w8, w23, #16
  416a50:	cmp	w8, #0x10
  416a54:	b.hi	416b00 <feof@plt+0x14130>  // b.pmore
  416a58:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x6a68>
  416a5c:	mov	x19, x24
  416a60:	mov	w10, wzr
  416a64:	mov	w9, #0x73c                 	// #1852
  416a68:	add	x8, x8, #0x408
  416a6c:	add	w11, w9, w10
  416a70:	cmp	w11, #0x0
  416a74:	cinc	w11, w11, lt  // lt = tstop
  416a78:	asr	w11, w11, #1
  416a7c:	add	x12, x8, w11, sxtw #3
  416a80:	ldr	w12, [x12, #4]
  416a84:	cmp	w12, w23
  416a88:	csel	w9, w9, w11, cc  // cc = lo, ul, last
  416a8c:	csinc	w10, w10, w11, cs  // cs = hs, nlast
  416a90:	cmp	w9, w10
  416a94:	b.ne	416a6c <feof@plt+0x1409c>  // b.any
  416a98:	ldrb	w10, [x20, #1154]
  416a9c:	cbz	w10, 416ab0 <feof@plt+0x140e0>
  416aa0:	ldrb	w10, [x20, #1164]
  416aa4:	cbz	w10, 416ab8 <feof@plt+0x140e8>
  416aa8:	mov	w10, #0x8                   	// #8
  416aac:	b	416adc <feof@plt+0x1410c>
  416ab0:	mov	w10, #0xd                   	// #13
  416ab4:	b	416adc <feof@plt+0x1410c>
  416ab8:	ldrb	w10, [x20, #1152]
  416abc:	cbz	w10, 416ac8 <feof@plt+0x140f8>
  416ac0:	mov	w10, #0x1                   	// #1
  416ac4:	b	416adc <feof@plt+0x1410c>
  416ac8:	ldrb	w10, [x20, #1120]
  416acc:	mov	w11, #0x4                   	// #4
  416ad0:	cmp	w10, #0x0
  416ad4:	mov	w10, #0xd                   	// #13
  416ad8:	csel	w10, w10, w11, eq  // eq = none
  416adc:	sbfiz	x11, x9, #3, #32
  416ae0:	ldrh	w25, [x8, x11]
  416ae4:	tst	w10, w25
  416ae8:	b.eq	416b00 <feof@plt+0x14130>  // b.none
  416aec:	ldrb	w10, [x20, #1164]
  416af0:	sxtw	x9, w9
  416af4:	cbz	w10, 416b1c <feof@plt+0x1414c>
  416af8:	mov	w26, #0x10                  	// #16
  416afc:	b	416b2c <feof@plt+0x1415c>
  416b00:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416b04:	sub	w3, w21, w4
  416b08:	add	x2, x2, #0xfee
  416b0c:	mov	w1, #0x3                   	// #3
  416b10:	mov	x0, x20
  416b14:	bl	41de04 <feof@plt+0x1b434>
  416b18:	b	416a1c <feof@plt+0x1404c>
  416b1c:	ldrb	w10, [x20, #1152]
  416b20:	cmp	w10, #0x0
  416b24:	cset	w10, ne  // ne = any
  416b28:	lsl	w26, w10, #1
  416b2c:	add	x8, x8, x9, lsl #3
  416b30:	ldrb	w27, [x8, #2]
  416b34:	cbz	w27, 416b50 <feof@plt+0x14180>
  416b38:	ldrb	w8, [x19, #4]
  416b3c:	cmp	w27, w8
  416b40:	b.cs	416b50 <feof@plt+0x14180>  // b.hs, b.nlast
  416b44:	mov	w8, #0x3                   	// #3
  416b48:	str	w8, [x19, #8]
  416b4c:	b	416c20 <feof@plt+0x14250>
  416b50:	tbnz	w25, #8, 416b64 <feof@plt+0x14194>
  416b54:	tbnz	w25, #7, 416c18 <feof@plt+0x14248>
  416b58:	tbnz	w25, #6, 416be8 <feof@plt+0x14218>
  416b5c:	tbnz	w25, #5, 416b88 <feof@plt+0x141b8>
  416b60:	b	416c10 <feof@plt+0x14240>
  416b64:	ldr	w2, [x19]
  416b68:	mov	w8, #0xffffee9f            	// #-4449
  416b6c:	add	w8, w23, w8
  416b70:	cmp	w8, #0x14
  416b74:	b.hi	416b9c <feof@plt+0x141cc>  // b.pmore
  416b78:	mov	w8, #0xffffef00            	// #-4352
  416b7c:	add	w8, w2, w8
  416b80:	cmp	w8, #0x12
  416b84:	b.hi	416c18 <feof@plt+0x14248>  // b.pmore
  416b88:	ldr	w8, [x19, #8]
  416b8c:	mov	w9, #0x2                   	// #2
  416b90:	cmp	w8, #0x2
  416b94:	csel	w8, w8, w9, gt
  416b98:	b	416c14 <feof@plt+0x14244>
  416b9c:	mov	w8, #0xffffee58            	// #-4520
  416ba0:	add	w8, w23, w8
  416ba4:	cmp	w8, #0x1a
  416ba8:	b.hi	416bf8 <feof@plt+0x14228>  // b.pmore
  416bac:	mov	w8, #0xffff5400            	// #-44032
  416bb0:	add	w8, w2, w8
  416bb4:	lsr	w9, w8, #2
  416bb8:	cmp	w9, #0xae8
  416bbc:	b.hi	416c18 <feof@plt+0x14248>  // b.pmore
  416bc0:	mov	w9, #0x6db7                	// #28087
  416bc4:	and	w8, w8, #0xffff
  416bc8:	movk	w9, #0xb6db, lsl #16
  416bcc:	mul	w8, w8, w9
  416bd0:	mov	w9, #0x9249                	// #37449
  416bd4:	ror	w8, w8, #2
  416bd8:	movk	w9, #0x924, lsl #16
  416bdc:	cmp	w8, w9
  416be0:	b.hi	416c18 <feof@plt+0x14248>  // b.pmore
  416be4:	b	416b88 <feof@plt+0x141b8>
  416be8:	ldr	w8, [x19, #8]
  416bec:	cmp	w8, #0x1
  416bf0:	csinc	w8, w8, wzr, gt
  416bf4:	b	416c14 <feof@plt+0x14244>
  416bf8:	mov	x0, x20
  416bfc:	mov	w1, w23
  416c00:	mov	x24, x4
  416c04:	bl	418d38 <feof@plt+0x16368>
  416c08:	mov	x4, x24
  416c0c:	tbnz	w0, #0, 416c18 <feof@plt+0x14248>
  416c10:	mov	w8, #0x3                   	// #3
  416c14:	str	w8, [x19, #8]
  416c18:	cbnz	w27, 416c20 <feof@plt+0x14250>
  416c1c:	str	w23, [x19]
  416c20:	cmp	w22, #0x1
  416c24:	mov	w0, #0x1                   	// #1
  416c28:	strb	w27, [x19, #4]
  416c2c:	b.ne	416a20 <feof@plt+0x14050>  // b.any
  416c30:	and	w8, w26, w25
  416c34:	cbz	w8, 416a20 <feof@plt+0x14050>
  416c38:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  416c3c:	sub	w3, w21, w4
  416c40:	add	x2, x2, #0x25
  416c44:	b	416b0c <feof@plt+0x1413c>
  416c48:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416c4c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  416c50:	add	x0, x0, #0xf5b
  416c54:	add	x2, x2, #0xf72
  416c58:	mov	w1, #0x434                 	// #1076
  416c5c:	bl	404ac4 <feof@plt+0x20f4>
  416c60:	mov	x5, xzr
  416c64:	mov	x6, xzr
  416c68:	b	416c6c <feof@plt+0x1429c>
  416c6c:	sub	sp, sp, #0x140
  416c70:	sub	w8, w4, #0x39
  416c74:	stp	x20, x19, [sp, #304]
  416c78:	mov	x19, x6
  416c7c:	cmp	w8, #0x9
  416c80:	mov	x20, x0
  416c84:	stp	x29, x30, [sp, #224]
  416c88:	stp	x28, x27, [sp, #240]
  416c8c:	stp	x26, x25, [sp, #256]
  416c90:	stp	x24, x23, [sp, #272]
  416c94:	stp	x22, x21, [sp, #288]
  416c98:	add	x29, sp, #0xe0
  416c9c:	stp	x1, x5, [sp, #48]
  416ca0:	str	x3, [sp, #80]
  416ca4:	str	x2, [sp, #40]
  416ca8:	b.hi	416d04 <feof@plt+0x14334>  // b.pmore
  416cac:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x1a68>
  416cb0:	add	x9, x9, #0xbb0
  416cb4:	adr	x10, 416cc4 <feof@plt+0x142f4>
  416cb8:	ldrb	w11, [x9, x8]
  416cbc:	add	x10, x10, x11, lsl #2
  416cc0:	br	x10
  416cc4:	add	x8, x20, #0x268
  416cc8:	add	x9, x20, #0x270
  416ccc:	add	x10, x20, #0x278
  416cd0:	b	416d10 <feof@plt+0x14340>
  416cd4:	add	x8, x20, #0x220
  416cd8:	add	x9, x20, #0x228
  416cdc:	add	x10, x20, #0x230
  416ce0:	b	416d10 <feof@plt+0x14340>
  416ce4:	add	x8, x20, #0x250
  416ce8:	add	x9, x20, #0x258
  416cec:	add	x10, x20, #0x260
  416cf0:	b	416d10 <feof@plt+0x14340>
  416cf4:	add	x8, x20, #0x238
  416cf8:	add	x9, x20, #0x240
  416cfc:	add	x10, x20, #0x248
  416d00:	b	416d10 <feof@plt+0x14340>
  416d04:	add	x8, x20, #0x208
  416d08:	add	x9, x20, #0x210
  416d0c:	add	x10, x20, #0x218
  416d10:	ldr	x11, [sp, #56]
  416d14:	cmp	x11, #0x0
  416d18:	cset	w11, ne  // ne = any
  416d1c:	cmp	x19, #0x0
  416d20:	cset	w12, ne  // ne = any
  416d24:	cmp	w11, w12
  416d28:	b.ne	417a00 <feof@plt+0x15030>  // b.any
  416d2c:	ldr	w11, [x8, #20]
  416d30:	ldr	x8, [x8]
  416d34:	ldr	w10, [x10]
  416d38:	ldr	x9, [x9]
  416d3c:	str	w11, [sp, #20]
  416d40:	str	x8, [sp, #112]
  416d44:	ldr	x8, [sp, #80]
  416d48:	str	x10, [sp, #32]
  416d4c:	str	x9, [sp, #96]
  416d50:	cbz	x8, 416d78 <feof@plt+0x143a8>
  416d54:	ldr	x8, [sp, #48]
  416d58:	mov	w9, #0x100                 	// #256
  416d5c:	ldr	w8, [x8]
  416d60:	cmp	w8, #0x100
  416d64:	csel	w0, w8, w9, hi  // hi = pmore
  416d68:	stur	x0, [x29, #-96]
  416d6c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  416d70:	stur	x0, [x29, #-104]
  416d74:	stur	xzr, [x29, #-88]
  416d78:	ldr	x8, [sp, #32]
  416d7c:	str	x20, [sp, #104]
  416d80:	sxtw	x11, w8
  416d84:	ldr	x8, [sp, #40]
  416d88:	str	x11, [sp, #8]
  416d8c:	cbz	x8, 4177b4 <feof@plt+0x14de4>
  416d90:	ldr	x8, [sp, #80]
  416d94:	mov	w9, #0x20                  	// #32
  416d98:	mov	x10, #0xffffffffffffffff    	// #-1
  416d9c:	mov	w20, #0x1                   	// #1
  416da0:	cmp	x8, #0x0
  416da4:	sub	x8, x29, #0x68
  416da8:	csel	x8, x8, xzr, ne  // ne = any
  416dac:	cmp	x11, #0x20
  416db0:	str	x8, [sp, #88]
  416db4:	csel	x8, x11, x9, cc  // cc = lo, ul, last
  416db8:	lsl	x8, x10, x8
  416dbc:	mov	x23, xzr
  416dc0:	mov	x21, xzr
  416dc4:	movk	w20, #0x6000, lsl #16
  416dc8:	eor	x8, x8, #0xffffffff
  416dcc:	str	x8, [sp, #64]
  416dd0:	b	416de8 <feof@plt+0x14418>
  416dd4:	tbz	w0, #0, 417804 <feof@plt+0x14e34>
  416dd8:	ldr	x8, [sp, #40]
  416ddc:	add	x23, x23, #0x1
  416de0:	cmp	x23, x8
  416de4:	b.eq	4177b8 <feof@plt+0x14de8>  // b.none
  416de8:	ldp	x8, x12, [sp, #48]
  416dec:	lsl	x10, x23, #4
  416df0:	add	x9, x8, x10
  416df4:	ldr	x8, [x9, #8]
  416df8:	add	x10, x12, x10
  416dfc:	cmp	x12, #0x0
  416e00:	csel	x21, x10, x21, ne  // ne = any
  416e04:	ldrb	w11, [x8]
  416e08:	cmp	w11, #0x4c
  416e0c:	b.eq	416e70 <feof@plt+0x144a0>  // b.none
  416e10:	cmp	w11, #0x55
  416e14:	b.eq	416e70 <feof@plt+0x144a0>  // b.none
  416e18:	cmp	w11, #0x75
  416e1c:	b.ne	416f08 <feof@plt+0x14538>  // b.any
  416e20:	add	x10, x8, #0x1
  416e24:	cbz	x21, 416e40 <feof@plt+0x14470>
  416e28:	ldr	w11, [x21]
  416e2c:	cmp	w11, w20
  416e30:	b.cs	416e40 <feof@plt+0x14470>  // b.hs, b.nlast
  416e34:	ldr	w12, [x21, #4]
  416e38:	add	w11, w12, w11
  416e3c:	str	w11, [x21]
  416e40:	ldrb	w11, [x10]
  416e44:	cmp	w11, #0x38
  416e48:	b.ne	416e78 <feof@plt+0x144a8>  // b.any
  416e4c:	add	x10, x8, #0x2
  416e50:	cbz	x21, 416e74 <feof@plt+0x144a4>
  416e54:	ldr	w11, [x21]
  416e58:	cmp	w11, w20
  416e5c:	b.cs	416e74 <feof@plt+0x144a4>  // b.hs, b.nlast
  416e60:	ldr	w12, [x21, #4]
  416e64:	add	w11, w12, w11
  416e68:	str	w11, [x21]
  416e6c:	b	416e74 <feof@plt+0x144a4>
  416e70:	add	x10, x8, #0x1
  416e74:	ldrb	w11, [x10]
  416e78:	cmp	w11, #0x22
  416e7c:	b.eq	416f14 <feof@plt+0x14544>  // b.none
  416e80:	cmp	w11, #0x27
  416e84:	b.eq	416f14 <feof@plt+0x14544>  // b.none
  416e88:	cmp	w11, #0x52
  416e8c:	b.ne	41781c <feof@plt+0x14e4c>  // b.any
  416e90:	add	x11, x10, #0x2
  416e94:	cbz	x21, 416ec0 <feof@plt+0x144f0>
  416e98:	ldr	w13, [x21]
  416e9c:	cmp	w13, w20
  416ea0:	b.cs	416ec0 <feof@plt+0x144f0>  // b.hs, b.nlast
  416ea4:	ldr	w12, [x21, #4]
  416ea8:	add	w13, w12, w13
  416eac:	cmp	w13, w20
  416eb0:	str	w13, [x21]
  416eb4:	b.cs	416ec0 <feof@plt+0x144f0>  // b.hs, b.nlast
  416eb8:	add	w12, w12, w13
  416ebc:	str	w12, [x21]
  416ec0:	ldrb	w12, [x10, #2]
  416ec4:	add	x24, x10, #0x3
  416ec8:	cmp	w12, #0x28
  416ecc:	b.ne	416ee8 <feof@plt+0x14518>  // b.any
  416ed0:	mov	x10, x11
  416ed4:	cbnz	x21, 4176c0 <feof@plt+0x14cf0>
  416ed8:	b	4176d8 <feof@plt+0x14d08>
  416edc:	ldrb	w10, [x24], #1
  416ee0:	cmp	w10, #0x28
  416ee4:	b.eq	4176b8 <feof@plt+0x14ce8>  // b.none
  416ee8:	cbz	x21, 416edc <feof@plt+0x1450c>
  416eec:	ldr	w10, [x21]
  416ef0:	cmp	w10, w20
  416ef4:	b.cs	416edc <feof@plt+0x1450c>  // b.hs, b.nlast
  416ef8:	ldr	w12, [x21, #4]
  416efc:	add	w10, w12, w10
  416f00:	str	w10, [x21]
  416f04:	b	416edc <feof@plt+0x1450c>
  416f08:	mov	x10, x8
  416f0c:	cmp	w11, #0x22
  416f10:	b.ne	416e80 <feof@plt+0x144b0>  // b.any
  416f14:	add	x24, x10, #0x1
  416f18:	cbz	x21, 416f34 <feof@plt+0x14564>
  416f1c:	ldr	w10, [x21]
  416f20:	cmp	w10, w20
  416f24:	b.cs	416f34 <feof@plt+0x14564>  // b.hs, b.nlast
  416f28:	ldr	w11, [x21, #4]
  416f2c:	add	w10, w11, w10
  416f30:	str	w10, [x21]
  416f34:	ldr	w12, [x9]
  416f38:	cmp	x21, #0x0
  416f3c:	cset	w9, ne  // ne = any
  416f40:	cmp	x19, #0x0
  416f44:	add	x8, x8, x12
  416f48:	sub	x25, x8, #0x1
  416f4c:	cset	w10, eq  // eq = none
  416f50:	cset	w11, ne  // ne = any
  416f54:	cmp	x24, x25
  416f58:	str	x8, [sp, #24]
  416f5c:	b.cs	416dd8 <feof@plt+0x14408>  // b.hs, b.nlast
  416f60:	eor	w8, w11, w9
  416f64:	str	w8, [sp, #76]
  416f68:	eor	w8, w10, w9
  416f6c:	str	w8, [sp, #16]
  416f70:	ldr	x8, [sp, #24]
  416f74:	sub	x26, x8, #0x2
  416f78:	b	416fb0 <feof@plt+0x145e0>
  416f7c:	ldr	x0, [x19]
  416f80:	lsl	w8, w10, #1
  416f84:	lsl	x1, x10, #4
  416f88:	str	w8, [x19, #12]
  416f8c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  416f90:	ldr	w8, [x19, #8]
  416f94:	str	x0, [x19]
  416f98:	add	w9, w8, #0x1
  416f9c:	str	w9, [x19, #8]
  416fa0:	str	x22, [x0, w8, sxtw #3]
  416fa4:	add	x24, x28, #0x2
  416fa8:	cmp	x24, x25
  416fac:	b.cs	416dd8 <feof@plt+0x14408>  // b.hs, b.nlast
  416fb0:	ldrb	w8, [x24]
  416fb4:	mov	x9, x24
  416fb8:	cmp	w8, #0x5c
  416fbc:	b.ne	416fd4 <feof@plt+0x14604>  // b.any
  416fc0:	mov	w22, #0x1                   	// #1
  416fc4:	mov	x28, x24
  416fc8:	subs	x2, x28, x24
  416fcc:	b.hi	41700c <feof@plt+0x1463c>  // b.pmore
  416fd0:	b	417050 <feof@plt+0x14680>
  416fd4:	cmp	x26, x9
  416fd8:	add	x8, x9, #0x1
  416fdc:	b.eq	416ff8 <feof@plt+0x14628>  // b.none
  416fe0:	ldrb	w9, [x9, #1]
  416fe4:	mov	x28, x8
  416fe8:	cmp	w9, #0x5c
  416fec:	mov	x9, x8
  416ff0:	b.ne	416fd4 <feof@plt+0x14604>  // b.any
  416ff4:	b	416ffc <feof@plt+0x1462c>
  416ff8:	mov	x28, x25
  416ffc:	cmp	x8, x25
  417000:	cset	w22, cc  // cc = lo, ul, last
  417004:	subs	x2, x28, x24
  417008:	b.ls	417050 <feof@plt+0x14680>  // b.plast
  41700c:	ldr	x8, [sp, #80]
  417010:	cbz	x8, 41702c <feof@plt+0x1465c>
  417014:	ldr	x0, [sp, #96]
  417018:	ldr	x8, [sp, #112]
  41701c:	sub	x3, x29, #0x68
  417020:	mov	x1, x24
  417024:	blr	x8
  417028:	tbz	w0, #0, 417804 <feof@plt+0x14e34>
  41702c:	cbz	x21, 417050 <feof@plt+0x14680>
  417030:	ldr	x8, [sp, #112]
  417034:	adrp	x9, 417000 <feof@plt+0x14630>
  417038:	add	x9, x9, #0xb10
  41703c:	cmp	x8, x9
  417040:	b.ne	4179a0 <feof@plt+0x14fd0>  // b.any
  417044:	sub	w24, w28, w24
  417048:	cmp	w24, #0x1
  41704c:	b.ge	4170ac <feof@plt+0x146dc>  // b.tcont
  417050:	cbz	w22, 416dd8 <feof@plt+0x14408>
  417054:	add	x24, x28, #0x1
  417058:	cbz	x21, 4170e0 <feof@plt+0x14710>
  41705c:	ldr	w22, [x21]
  417060:	cmp	w22, w20
  417064:	b.cs	417074 <feof@plt+0x146a4>  // b.hs, b.nlast
  417068:	ldr	w8, [x21, #4]
  41706c:	add	w8, w8, w22
  417070:	str	w8, [x21]
  417074:	lsl	x27, x22, #32
  417078:	b	4170e8 <feof@plt+0x14718>
  41707c:	ldr	x0, [x19]
  417080:	lsl	w8, w9, #1
  417084:	lsl	x1, x9, #4
  417088:	str	w8, [x19, #12]
  41708c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417090:	ldr	w8, [x19, #8]
  417094:	str	x0, [x19]
  417098:	add	w9, w8, #0x1
  41709c:	subs	w24, w24, #0x1
  4170a0:	str	w9, [x19, #8]
  4170a4:	str	x27, [x0, w8, sxtw #3]
  4170a8:	b.eq	417050 <feof@plt+0x14680>  // b.none
  4170ac:	ldr	w27, [x21]
  4170b0:	cmp	w27, w20
  4170b4:	b.cs	4170c4 <feof@plt+0x146f4>  // b.hs, b.nlast
  4170b8:	ldr	w8, [x21, #4]
  4170bc:	add	w8, w8, w27
  4170c0:	str	w8, [x21]
  4170c4:	ldp	w8, w9, [x19, #8]
  4170c8:	bfi	x27, x27, #32, #32
  4170cc:	sxtw	x9, w9
  4170d0:	cmp	w8, w9
  4170d4:	b.ge	41707c <feof@plt+0x146ac>  // b.tcont
  4170d8:	ldr	x0, [x19]
  4170dc:	b	417098 <feof@plt+0x146c8>
  4170e0:	mov	x22, xzr
  4170e4:	mov	x27, xzr
  4170e8:	ldrb	w3, [x24]
  4170ec:	sub	w8, w3, #0x22
  4170f0:	cmp	w8, #0x59
  4170f4:	sturb	w3, [x29, #-48]
  4170f8:	b.hi	417194 <feof@plt+0x147c4>  // b.pmore
  4170fc:	adrp	x11, 452000 <_obstack_memory_used@@Base+0x1a68>
  417100:	add	x11, x11, #0xbba
  417104:	adr	x9, 417114 <feof@plt+0x14744>
  417108:	ldrh	w10, [x11, x8, lsl #1]
  41710c:	add	x9, x9, x10, lsl #2
  417110:	br	x9
  417114:	ldr	w8, [sp, #76]
  417118:	tbnz	w8, #0, 4179b8 <feof@plt+0x14fe8>
  41711c:	cmp	x24, x25
  417120:	lsr	x27, x27, #32
  417124:	b.cs	4171cc <feof@plt+0x147fc>  // b.hs, b.nlast
  417128:	mov	x9, xzr
  41712c:	mov	w1, wzr
  417130:	add	x8, x28, #0x4
  417134:	sub	x10, x26, x28
  417138:	b	41714c <feof@plt+0x1477c>
  41713c:	add	w11, w11, w1, lsl #3
  417140:	cmp	x10, x9
  417144:	sub	w1, w11, #0x30
  417148:	b.eq	41736c <feof@plt+0x1499c>  // b.none
  41714c:	cmp	x9, #0x3
  417150:	b.eq	417324 <feof@plt+0x14954>  // b.none
  417154:	ldrb	w11, [x24, x9]
  417158:	and	w12, w11, #0xf8
  41715c:	cmp	w12, #0x30
  417160:	b.ne	41732c <feof@plt+0x1495c>  // b.any
  417164:	add	x9, x9, #0x1
  417168:	cbz	x21, 41713c <feof@plt+0x1476c>
  41716c:	ldr	w27, [x21]
  417170:	cmp	w27, w20
  417174:	b.cs	41713c <feof@plt+0x1476c>  // b.hs, b.nlast
  417178:	ldr	w12, [x21, #4]
  41717c:	add	w12, w12, w27
  417180:	str	w12, [x21]
  417184:	b	41713c <feof@plt+0x1476c>
  417188:	ldr	x8, [sp, #104]
  41718c:	ldrb	w8, [x8, #1154]
  417190:	cbz	w8, 417548 <feof@plt+0x14b78>
  417194:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  417198:	add	x8, x8, #0xa50
  41719c:	ldrh	w8, [x8, x3, lsl #1]
  4171a0:	mov	w9, #0xac                  	// #172
  4171a4:	tst	w8, w9
  4171a8:	b.eq	417334 <feof@plt+0x14964>  // b.none
  4171ac:	ldr	x0, [sp, #104]
  4171b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4171b4:	mov	w1, #0x2                   	// #2
  4171b8:	add	x2, x2, #0x269
  4171bc:	bl	41de04 <feof@plt+0x1b434>
  4171c0:	ldr	x3, [sp, #88]
  4171c4:	cbnz	x3, 417564 <feof@plt+0x14b94>
  4171c8:	b	417590 <feof@plt+0x14bc0>
  4171cc:	mov	w1, wzr
  4171d0:	b	417370 <feof@plt+0x149a0>
  4171d4:	orr	x8, x27, x22
  4171d8:	stp	x24, x8, [x29, #-32]
  4171dc:	ldr	w8, [sp, #16]
  4171e0:	stur	wzr, [x29, #-72]
  4171e4:	stur	xzr, [x29, #-80]
  4171e8:	tbz	w8, #0, 4179d0 <feof@plt+0x15000>
  4171ec:	ldr	x22, [sp, #88]
  4171f0:	add	x8, x28, #0x2
  4171f4:	stur	x8, [x29, #-32]
  4171f8:	cbz	x21, 417218 <feof@plt+0x14848>
  4171fc:	ldr	w8, [x21]
  417200:	cmp	w8, w20
  417204:	b.cs	417214 <feof@plt+0x14844>  // b.hs, b.nlast
  417208:	ldr	w9, [x21, #4]
  41720c:	add	w9, w9, w8
  417210:	str	w9, [x21]
  417214:	stur	w8, [x29, #-20]
  417218:	ldr	x0, [sp, #104]
  41721c:	sub	x1, x29, #0x20
  417220:	sub	x4, x29, #0x50
  417224:	sub	x5, x29, #0x24
  417228:	sub	x6, x29, #0x18
  41722c:	mov	x2, x25
  417230:	mov	w3, wzr
  417234:	mov	x7, x21
  417238:	bl	4167d0 <feof@plt+0x13e00>
  41723c:	ldur	w9, [x29, #-36]
  417240:	cmp	w9, #0x80
  417244:	b.cs	417418 <feof@plt+0x14a48>  // b.hs, b.nlast
  417248:	sturb	w9, [x29, #-11]
  41724c:	mov	x8, #0xffffffffffffffff    	// #-1
  417250:	mov	w28, #0x1                   	// #1
  417254:	sub	x14, x29, #0x10
  417258:	add	x9, x14, x8
  41725c:	add	x1, x9, #0x6
  417260:	neg	x2, x8
  417264:	sub	x0, x29, #0x2c
  417268:	bl	402390 <memcpy@plt>
  41726c:	cbz	x22, 4172a0 <feof@plt+0x148d0>
  417270:	ldr	x0, [sp, #96]
  417274:	ldr	x8, [sp, #112]
  417278:	sub	x1, x29, #0x2c
  41727c:	mov	x2, x28
  417280:	mov	x3, x22
  417284:	blr	x8
  417288:	tbnz	w0, #0, 4172a0 <feof@plt+0x148d0>
  41728c:	ldr	x0, [sp, #104]
  417290:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417294:	mov	w1, #0x3                   	// #3
  417298:	add	x2, x2, #0x2e9
  41729c:	bl	41e85c <feof@plt+0x1be8c>
  4172a0:	cbz	x21, 4172ac <feof@plt+0x148dc>
  4172a4:	cmp	w28, #0x1
  4172a8:	b.ge	4172e4 <feof@plt+0x14914>  // b.tcont
  4172ac:	ldur	x24, [x29, #-32]
  4172b0:	b	416fa8 <feof@plt+0x145d8>
  4172b4:	ldr	x0, [x19]
  4172b8:	lsl	w8, w9, #1
  4172bc:	lsl	x1, x9, #4
  4172c0:	str	w8, [x19, #12]
  4172c4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4172c8:	ldr	w8, [x19, #8]
  4172cc:	str	x0, [x19]
  4172d0:	add	w9, w8, #0x1
  4172d4:	subs	w28, w28, #0x1
  4172d8:	str	w9, [x19, #8]
  4172dc:	str	x22, [x0, w8, sxtw #3]
  4172e0:	b.eq	4172ac <feof@plt+0x148dc>  // b.none
  4172e4:	ldp	w8, w9, [x19, #8]
  4172e8:	ldur	x22, [x29, #-24]
  4172ec:	sxtw	x9, w9
  4172f0:	cmp	w8, w9
  4172f4:	b.ge	4172b4 <feof@plt+0x148e4>  // b.tcont
  4172f8:	ldr	x0, [x19]
  4172fc:	b	4172d0 <feof@plt+0x14900>
  417300:	ldr	x0, [sp, #104]
  417304:	ldrb	w8, [x0, #1154]
  417308:	cbz	w8, 41731c <feof@plt+0x1494c>
  41730c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417310:	mov	w1, #0x2                   	// #2
  417314:	add	x2, x2, #0x241
  417318:	bl	41de04 <feof@plt+0x1b434>
  41731c:	mov	w8, #0x1b                  	// #27
  417320:	b	417558 <feof@plt+0x14b88>
  417324:	mov	x24, x8
  417328:	b	417370 <feof@plt+0x149a0>
  41732c:	add	x24, x24, x9
  417330:	b	417370 <feof@plt+0x149a0>
  417334:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  417338:	sub	x0, x29, #0x50
  41733c:	add	x1, x1, #0x89
  417340:	mov	w2, w3
  417344:	bl	4025b0 <sprintf@plt>
  417348:	ldr	x0, [sp, #104]
  41734c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417350:	sub	x3, x29, #0x50
  417354:	mov	w1, #0x2                   	// #2
  417358:	add	x2, x2, #0x288
  41735c:	bl	41de04 <feof@plt+0x1b434>
  417360:	ldr	x3, [sp, #88]
  417364:	cbnz	x3, 417564 <feof@plt+0x14b94>
  417368:	b	417590 <feof@plt+0x14bc0>
  41736c:	mov	x24, x25
  417370:	ldr	x9, [sp, #64]
  417374:	mov	w8, w1
  417378:	and	x28, x9, x8
  41737c:	cmp	x28, x8
  417380:	b.eq	41739c <feof@plt+0x149cc>  // b.none
  417384:	ldr	x0, [sp, #104]
  417388:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41738c:	mov	w1, #0x2                   	// #2
  417390:	add	x2, x2, #0x3a3
  417394:	bl	41de04 <feof@plt+0x1b434>
  417398:	mov	w1, w28
  41739c:	ldr	x2, [sp, #88]
  4173a0:	cbz	x2, 4173cc <feof@plt+0x149fc>
  4173a4:	ldp	x0, x8, [sp, #104]
  4173a8:	sub	x3, x29, #0x50
  4173ac:	stur	x8, [x29, #-80]
  4173b0:	ldr	x8, [sp, #96]
  4173b4:	stur	x8, [x29, #-72]
  4173b8:	ldr	x8, [sp, #32]
  4173bc:	stur	w8, [x29, #-64]
  4173c0:	ldr	w8, [sp, #20]
  4173c4:	stur	w8, [x29, #-60]
  4173c8:	bl	419b3c <feof@plt+0x1716c>
  4173cc:	cbz	x19, 416fa8 <feof@plt+0x145d8>
  4173d0:	ldp	w8, w9, [x19, #8]
  4173d4:	bfi	x22, x27, #32, #32
  4173d8:	sxtw	x9, w9
  4173dc:	cmp	w8, w9
  4173e0:	b.ge	4173ec <feof@plt+0x14a1c>  // b.tcont
  4173e4:	ldr	x0, [x19]
  4173e8:	b	417408 <feof@plt+0x14a38>
  4173ec:	ldr	x0, [x19]
  4173f0:	lsl	w8, w9, #1
  4173f4:	lsl	x1, x9, #4
  4173f8:	str	w8, [x19, #12]
  4173fc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417400:	ldr	w8, [x19, #8]
  417404:	str	x0, [x19]
  417408:	add	w9, w8, #0x1
  41740c:	str	w9, [x19, #8]
  417410:	str	x22, [x0, w8, sxtw #3]
  417414:	b	416fa8 <feof@plt+0x145d8>
  417418:	adrp	x11, 45a000 <_obstack_memory_used@@Base+0x9a68>
  41741c:	adrp	x10, 45a000 <_obstack_memory_used@@Base+0x9a68>
  417420:	mov	x8, xzr
  417424:	add	x11, x11, #0xdf7
  417428:	add	x10, x10, #0xdf1
  41742c:	sub	x14, x29, #0x10
  417430:	b	417444 <feof@plt+0x14a74>
  417434:	sub	x8, x8, #0x1
  417438:	add	x10, x10, #0x1
  41743c:	add	x11, x11, #0x1
  417440:	mov	w9, w12
  417444:	mov	w12, #0x80                  	// #128
  417448:	add	x13, x14, x8
  41744c:	bfxil	w12, w9, #0, #6
  417450:	cmp	w9, #0xfbf
  417454:	strb	w12, [x13, #5]
  417458:	lsr	w12, w9, #6
  41745c:	b.hi	417434 <feof@plt+0x14a64>  // b.pmore
  417460:	ldrb	w13, [x11]
  417464:	tst	w12, w13
  417468:	b.ne	417434 <feof@plt+0x14a64>  // b.any
  41746c:	ldrb	w10, [x10]
  417470:	mov	w12, #0x2                   	// #2
  417474:	sub	x28, x12, x8
  417478:	add	x11, x14, x8
  41747c:	orr	w9, w10, w9, lsr #6
  417480:	cmp	x28, #0x6
  417484:	strb	w9, [x11, #4]
  417488:	b.ls	4175c8 <feof@plt+0x14bf8>  // b.plast
  41748c:	bl	4027c0 <__errno_location@plt>
  417490:	mov	w8, #0x7                   	// #7
  417494:	str	w8, [x0]
  417498:	ldr	x0, [sp, #104]
  41749c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4174a0:	mov	w1, #0x3                   	// #3
  4174a4:	add	x2, x2, #0xd0
  4174a8:	bl	41e85c <feof@plt+0x1be8c>
  4174ac:	ldur	x24, [x29, #-32]
  4174b0:	b	416fa8 <feof@plt+0x145d8>
  4174b4:	mov	w8, #0xd                   	// #13
  4174b8:	b	417558 <feof@plt+0x14b88>
  4174bc:	ldr	x0, [sp, #104]
  4174c0:	ldrb	w8, [x0, #1138]
  4174c4:	cbz	w8, 4174d8 <feof@plt+0x14b08>
  4174c8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4174cc:	mov	w1, #0x6                   	// #6
  4174d0:	add	x2, x2, #0x20f
  4174d4:	bl	41df34 <feof@plt+0x1b564>
  4174d8:	mov	w8, #0x7                   	// #7
  4174dc:	b	417558 <feof@plt+0x14b88>
  4174e0:	mov	w8, #0x8                   	// #8
  4174e4:	b	417558 <feof@plt+0x14b88>
  4174e8:	ldr	w8, [sp, #76]
  4174ec:	cbnz	w8, 4179e8 <feof@plt+0x15018>
  4174f0:	ldr	x0, [sp, #104]
  4174f4:	ldrb	w8, [x0, #1138]
  4174f8:	cbz	w8, 41750c <feof@plt+0x14b3c>
  4174fc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417500:	mov	w1, #0x6                   	// #6
  417504:	add	x2, x2, #0x31f
  417508:	bl	41df34 <feof@plt+0x1b564>
  41750c:	cbz	x21, 4175d8 <feof@plt+0x14c08>
  417510:	ldr	w10, [x21]
  417514:	cmp	w10, w20
  417518:	b.cs	417528 <feof@plt+0x14b58>  // b.hs, b.nlast
  41751c:	ldr	w8, [x21, #4]
  417520:	add	w8, w8, w10
  417524:	str	w8, [x21]
  417528:	bfi	x10, x10, #32, #32
  41752c:	b	4175dc <feof@plt+0x14c0c>
  417530:	mov	w8, #0xb                   	// #11
  417534:	b	417558 <feof@plt+0x14b88>
  417538:	mov	w8, #0xa                   	// #10
  41753c:	b	417558 <feof@plt+0x14b88>
  417540:	mov	w8, #0xc                   	// #12
  417544:	sturb	w8, [x29, #-48]
  417548:	ldr	x3, [sp, #88]
  41754c:	cbnz	x3, 417564 <feof@plt+0x14b94>
  417550:	b	417590 <feof@plt+0x14bc0>
  417554:	mov	w8, #0x9                   	// #9
  417558:	sturb	w8, [x29, #-48]
  41755c:	ldr	x3, [sp, #88]
  417560:	cbz	x3, 417590 <feof@plt+0x14bc0>
  417564:	ldr	x0, [sp, #96]
  417568:	ldr	x8, [sp, #112]
  41756c:	sub	x1, x29, #0x30
  417570:	mov	w2, #0x1                   	// #1
  417574:	blr	x8
  417578:	tbnz	w0, #0, 417590 <feof@plt+0x14bc0>
  41757c:	ldr	x0, [sp, #104]
  417580:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417584:	mov	w1, #0x3                   	// #3
  417588:	add	x2, x2, #0x2a7
  41758c:	bl	41e85c <feof@plt+0x1be8c>
  417590:	cbz	x21, 416fa4 <feof@plt+0x145d4>
  417594:	ldr	w9, [x21]
  417598:	cmp	w9, w20
  41759c:	b.cs	4175ac <feof@plt+0x14bdc>  // b.hs, b.nlast
  4175a0:	ldr	w8, [x21, #4]
  4175a4:	add	w8, w8, w9
  4175a8:	str	w8, [x21]
  4175ac:	ldp	w8, w10, [x19, #8]
  4175b0:	bfi	x22, x9, #32, #32
  4175b4:	sxtw	x10, w10
  4175b8:	cmp	w8, w10
  4175bc:	b.ge	416f7c <feof@plt+0x145ac>  // b.tcont
  4175c0:	ldr	x0, [x19]
  4175c4:	b	416f98 <feof@plt+0x145c8>
  4175c8:	cmp	x8, #0x1
  4175cc:	b.gt	41726c <feof@plt+0x1489c>
  4175d0:	sub	x8, x8, #0x2
  4175d4:	b	417258 <feof@plt+0x14888>
  4175d8:	orr	x10, x27, x22
  4175dc:	add	x24, x28, #0x2
  4175e0:	cmp	x24, x25
  4175e4:	b.cs	417600 <feof@plt+0x14c30>  // b.hs, b.nlast
  4175e8:	ldrb	w8, [x24]
  4175ec:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  4175f0:	add	x9, x9, #0x93f
  4175f4:	ldrb	w9, [x9, x8]
  4175f8:	cmp	w9, #0x63
  4175fc:	b.ne	417618 <feof@plt+0x14c48>  // b.any
  417600:	ldr	x0, [sp, #104]
  417604:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417608:	mov	w1, #0x3                   	// #3
  41760c:	add	x2, x2, #0x351
  417610:	bl	41de04 <feof@plt+0x1b434>
  417614:	b	416fa8 <feof@plt+0x145d8>
  417618:	ldr	x13, [sp, #24]
  41761c:	mov	w8, wzr
  417620:	mov	w1, wzr
  417624:	lsr	x27, x10, #32
  417628:	add	x10, x28, #0x4
  41762c:	cbz	x21, 417648 <feof@plt+0x14c78>
  417630:	ldr	w27, [x21]
  417634:	cmp	w27, w20
  417638:	b.cs	417648 <feof@plt+0x14c78>  // b.hs, b.nlast
  41763c:	ldr	w11, [x21, #4]
  417640:	add	w11, w11, w27
  417644:	str	w11, [x21]
  417648:	lsl	w11, w1, #4
  41764c:	and	w12, w1, #0xf0000000
  417650:	cmp	x13, x10
  417654:	orr	w8, w12, w8
  417658:	add	w1, w11, w9, uxtb
  41765c:	b.eq	417684 <feof@plt+0x14cb4>  // b.none
  417660:	ldurb	w9, [x10, #-1]
  417664:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  417668:	add	x11, x11, #0x93f
  41766c:	add	x10, x10, #0x1
  417670:	ldrb	w9, [x11, x9]
  417674:	cmp	w9, #0x63
  417678:	b.ne	41762c <feof@plt+0x14c5c>  // b.any
  41767c:	sub	x24, x10, #0x2
  417680:	b	417688 <feof@plt+0x14cb8>
  417684:	mov	x24, x25
  417688:	ldr	x10, [sp, #64]
  41768c:	mov	w9, w1
  417690:	and	x28, x10, x9
  417694:	cmp	x28, x9
  417698:	cset	w9, ne  // ne = any
  41769c:	orr	w8, w8, w9
  4176a0:	cbz	w8, 41739c <feof@plt+0x149cc>
  4176a4:	ldr	x0, [sp, #104]
  4176a8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4176ac:	mov	w1, #0x2                   	// #2
  4176b0:	add	x2, x2, #0x376
  4176b4:	b	417394 <feof@plt+0x149c4>
  4176b8:	sub	x10, x24, #0x1
  4176bc:	cbz	x21, 4176d8 <feof@plt+0x14d08>
  4176c0:	ldr	w12, [x21]
  4176c4:	cmp	w12, w20
  4176c8:	b.cs	4176d8 <feof@plt+0x14d08>  // b.hs, b.nlast
  4176cc:	ldr	w13, [x21, #4]
  4176d0:	add	w12, w13, w12
  4176d4:	str	w12, [x21]
  4176d8:	ldr	w9, [x9]
  4176dc:	sub	x11, x24, x11
  4176e0:	add	x10, x10, x11
  4176e4:	mvn	x11, x11
  4176e8:	add	x10, x10, #0x2
  4176ec:	add	x8, x8, x9
  4176f0:	add	x9, x8, x11
  4176f4:	cmp	x8, x10
  4176f8:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  4176fc:	ldr	x8, [sp, #80]
  417700:	cbz	x8, 417728 <feof@plt+0x14d58>
  417704:	ldr	x0, [sp, #96]
  417708:	ldr	x8, [sp, #112]
  41770c:	sub	x2, x22, x24
  417710:	sub	x3, x29, #0x68
  417714:	mov	x1, x24
  417718:	blr	x8
  41771c:	cbz	x21, 416dd4 <feof@plt+0x14404>
  417720:	tbnz	w0, #0, 41772c <feof@plt+0x14d5c>
  417724:	b	416dd4 <feof@plt+0x14404>
  417728:	cbz	x21, 416dd8 <feof@plt+0x14408>
  41772c:	ldr	x8, [sp, #112]
  417730:	adrp	x9, 417000 <feof@plt+0x14630>
  417734:	add	x9, x9, #0xb10
  417738:	cmp	x8, x9
  41773c:	b.ne	417a18 <feof@plt+0x15048>  // b.any
  417740:	sub	w22, w22, w24
  417744:	cmp	w22, #0x1
  417748:	b.ge	417780 <feof@plt+0x14db0>  // b.tcont
  41774c:	b	416dd8 <feof@plt+0x14408>
  417750:	ldr	x0, [x19]
  417754:	lsl	w8, w9, #1
  417758:	lsl	x1, x9, #4
  41775c:	str	w8, [x19, #12]
  417760:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417764:	ldr	w8, [x19, #8]
  417768:	str	x0, [x19]
  41776c:	add	w9, w8, #0x1
  417770:	subs	w22, w22, #0x1
  417774:	str	w9, [x19, #8]
  417778:	str	x24, [x0, w8, sxtw #3]
  41777c:	b.eq	416dd8 <feof@plt+0x14408>  // b.none
  417780:	ldr	w24, [x21]
  417784:	cmp	w24, w20
  417788:	b.cs	417798 <feof@plt+0x14dc8>  // b.hs, b.nlast
  41778c:	ldr	w8, [x21, #4]
  417790:	add	w8, w8, w24
  417794:	str	w8, [x21]
  417798:	ldp	w8, w9, [x19, #8]
  41779c:	bfi	x24, x24, #32, #32
  4177a0:	sxtw	x9, w9
  4177a4:	cmp	w8, w9
  4177a8:	b.ge	417750 <feof@plt+0x14d80>  // b.tcont
  4177ac:	ldr	x0, [x19]
  4177b0:	b	41776c <feof@plt+0x14d9c>
  4177b4:	mov	x21, xzr
  4177b8:	ldr	x8, [sp, #80]
  4177bc:	cbz	x8, 417914 <feof@plt+0x14f44>
  4177c0:	ldr	x8, [sp, #104]
  4177c4:	ldr	x10, [sp, #8]
  4177c8:	ldr	x20, [x8, #1216]
  4177cc:	cmp	x20, x10
  4177d0:	b.ne	41784c <feof@plt+0x14e7c>  // b.any
  4177d4:	ldp	x10, x8, [x29, #-96]
  4177d8:	add	x9, x8, #0x1
  4177dc:	cmp	x9, x10
  4177e0:	b.ls	4178e8 <feof@plt+0x14f18>  // b.plast
  4177e4:	ldur	x0, [x29, #-104]
  4177e8:	add	x1, x10, #0x100
  4177ec:	stur	x1, [x29, #-96]
  4177f0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4177f4:	ldur	x8, [x29, #-88]
  4177f8:	stur	x0, [x29, #-104]
  4177fc:	add	x9, x8, #0x1
  417800:	b	4178ec <feof@plt+0x14f1c>
  417804:	ldr	x0, [sp, #104]
  417808:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  41780c:	add	x2, x2, #0xe36
  417810:	mov	w1, #0x3                   	// #3
  417814:	bl	41e85c <feof@plt+0x1be8c>
  417818:	b	41783c <feof@plt+0x14e6c>
  41781c:	cbz	x19, 417a30 <feof@plt+0x15060>
  417820:	ldr	x0, [sp, #104]
  417824:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417828:	add	x2, x2, #0x1fc
  41782c:	mov	w1, #0x3                   	// #3
  417830:	bl	41de04 <feof@plt+0x1b434>
  417834:	ldr	x8, [sp, #80]
  417838:	cbz	x8, 417844 <feof@plt+0x14e74>
  41783c:	ldur	x0, [x29, #-104]
  417840:	bl	4024c0 <free@plt>
  417844:	mov	w0, wzr
  417848:	b	417980 <feof@plt+0x14fb0>
  41784c:	ldrb	w22, [x8, #1242]
  417850:	ldp	x8, x23, [x29, #-96]
  417854:	cmp	x20, #0x20
  417858:	mov	w9, #0x20                  	// #32
  41785c:	udiv	x24, x10, x20
  417860:	csel	x25, x20, x9, cc  // cc = lo, ul, last
  417864:	add	x9, x23, x24
  417868:	cmp	x9, x8
  41786c:	b.ls	41788c <feof@plt+0x14ebc>  // b.plast
  417870:	ldur	x0, [x29, #-104]
  417874:	add	x1, x8, #0x100
  417878:	stur	x1, [x29, #-96]
  41787c:	mov	x26, x10
  417880:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417884:	mov	x10, x26
  417888:	stur	x0, [x29, #-104]
  41788c:	cmp	x20, x10
  417890:	b.hi	4178d8 <feof@plt+0x14f08>  // b.pmore
  417894:	mov	x10, #0xffffffffffffffff    	// #-1
  417898:	lsl	x10, x10, x25
  41789c:	mov	w8, wzr
  4178a0:	mov	x9, xzr
  4178a4:	eor	w10, w10, #0xff
  4178a8:	ldur	x12, [x29, #-104]
  4178ac:	mvn	x13, x9
  4178b0:	cmp	w22, #0x0
  4178b4:	add	x13, x24, x13
  4178b8:	csel	x13, x9, x13, eq  // eq = none
  4178bc:	add	x9, x9, #0x1
  4178c0:	and	w11, w8, w10
  4178c4:	lsr	w8, w8, w20
  4178c8:	add	x13, x13, x23
  4178cc:	cmp	x24, x9
  4178d0:	strb	w11, [x12, x13]
  4178d4:	b.hi	4178a8 <feof@plt+0x14ed8>  // b.pmore
  4178d8:	ldur	x8, [x29, #-88]
  4178dc:	add	x1, x8, x24
  4178e0:	stur	x1, [x29, #-88]
  4178e4:	b	4178f8 <feof@plt+0x14f28>
  4178e8:	ldur	x0, [x29, #-104]
  4178ec:	stur	x9, [x29, #-88]
  4178f0:	strb	wzr, [x0, x8]
  4178f4:	ldur	x1, [x29, #-88]
  4178f8:	ldur	x0, [x29, #-104]
  4178fc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417900:	ldr	x9, [sp, #80]
  417904:	stur	x0, [x29, #-104]
  417908:	str	x0, [x9, #8]
  41790c:	ldur	x8, [x29, #-88]
  417910:	str	w8, [x9]
  417914:	cbz	x21, 41797c <feof@plt+0x14fac>
  417918:	ldr	w20, [x21]
  41791c:	mov	w8, #0x1                   	// #1
  417920:	movk	w8, #0x6000, lsl #16
  417924:	cmp	w20, w8
  417928:	b.cs	417938 <feof@plt+0x14f68>  // b.hs, b.nlast
  41792c:	ldr	w8, [x21, #4]
  417930:	add	w8, w8, w20
  417934:	str	w8, [x21]
  417938:	ldp	w8, w9, [x19, #8]
  41793c:	bfi	x20, x20, #32, #32
  417940:	sxtw	x9, w9
  417944:	cmp	w8, w9
  417948:	b.ge	417954 <feof@plt+0x14f84>  // b.tcont
  41794c:	ldr	x0, [x19]
  417950:	b	417970 <feof@plt+0x14fa0>
  417954:	ldr	x0, [x19]
  417958:	lsl	w8, w9, #1
  41795c:	lsl	x1, x9, #4
  417960:	str	w8, [x19, #12]
  417964:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417968:	ldr	w8, [x19, #8]
  41796c:	str	x0, [x19]
  417970:	add	w9, w8, #0x1
  417974:	str	w9, [x19, #8]
  417978:	str	x20, [x0, w8, sxtw #3]
  41797c:	mov	w0, #0x1                   	// #1
  417980:	ldp	x20, x19, [sp, #304]
  417984:	ldp	x22, x21, [sp, #288]
  417988:	ldp	x24, x23, [sp, #272]
  41798c:	ldp	x26, x25, [sp, #256]
  417990:	ldp	x28, x27, [sp, #240]
  417994:	ldp	x29, x30, [sp, #224]
  417998:	add	sp, sp, #0x140
  41799c:	ret
  4179a0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4179a4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4179a8:	add	x0, x0, #0xf5b
  4179ac:	add	x2, x2, #0x1e5
  4179b0:	mov	w1, #0x66c                 	// #1644
  4179b4:	bl	404ac4 <feof@plt+0x20f4>
  4179b8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4179bc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4179c0:	add	x0, x0, #0xf5b
  4179c4:	add	x2, x2, #0x397
  4179c8:	mov	w1, #0x540                 	// #1344
  4179cc:	bl	404ac4 <feof@plt+0x20f4>
  4179d0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4179d4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4179d8:	add	x0, x0, #0xf5b
  4179dc:	add	x2, x2, #0x2dd
  4179e0:	mov	w1, #0x48d                 	// #1165
  4179e4:	bl	404ac4 <feof@plt+0x20f4>
  4179e8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4179ec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4179f0:	add	x0, x0, #0xf5b
  4179f4:	add	x2, x2, #0x313
  4179f8:	mov	w1, #0x4f9                 	// #1273
  4179fc:	bl	404ac4 <feof@plt+0x20f4>
  417a00:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  417a04:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417a08:	add	x0, x0, #0xf5b
  417a0c:	add	x2, x2, #0x1e5
  417a10:	mov	w1, #0x5fc                 	// #1532
  417a14:	bl	404ac4 <feof@plt+0x20f4>
  417a18:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  417a1c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417a20:	add	x0, x0, #0xf5b
  417a24:	add	x2, x2, #0x1e5
  417a28:	mov	w1, #0x641                 	// #1601
  417a2c:	bl	404ac4 <feof@plt+0x20f4>
  417a30:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x9a68>
  417a34:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417a38:	add	x0, x0, #0xf5b
  417a3c:	add	x2, x2, #0x1e5
  417a40:	mov	w1, #0x64d                 	// #1613
  417a44:	bl	404ac4 <feof@plt+0x20f4>
  417a48:	stp	x29, x30, [sp, #-32]!
  417a4c:	sub	w9, w5, #0x39
  417a50:	stp	x20, x19, [sp, #16]
  417a54:	mov	x6, x4
  417a58:	mov	x8, x2
  417a5c:	cmp	w9, #0x9
  417a60:	mov	x19, x0
  417a64:	mov	x29, sp
  417a68:	b.hi	417aa4 <feof@plt+0x150d4>  // b.pmore
  417a6c:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x1a68>
  417a70:	add	x10, x10, #0xc6e
  417a74:	adr	x11, 417a84 <feof@plt+0x150b4>
  417a78:	ldrb	w12, [x10, x9]
  417a7c:	add	x11, x11, x12, lsl #2
  417a80:	br	x11
  417a84:	add	x9, x19, #0x268
  417a88:	b	417aa8 <feof@plt+0x150d8>
  417a8c:	add	x9, x19, #0x238
  417a90:	b	417aa8 <feof@plt+0x150d8>
  417a94:	add	x9, x19, #0x250
  417a98:	b	417aa8 <feof@plt+0x150d8>
  417a9c:	add	x9, x19, #0x220
  417aa0:	b	417aa8 <feof@plt+0x150d8>
  417aa4:	add	x9, x19, #0x208
  417aa8:	ldr	x9, [x9]
  417aac:	adrp	x10, 417000 <feof@plt+0x14630>
  417ab0:	add	x10, x10, #0xb10
  417ab4:	cmp	x9, x10
  417ab8:	b.eq	417ac8 <feof@plt+0x150f8>  // b.none
  417abc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417ac0:	add	x0, x0, #0x69
  417ac4:	b	417b04 <feof@plt+0x15134>
  417ac8:	ldr	x20, [x19, #1000]
  417acc:	adrp	x9, 417000 <feof@plt+0x14630>
  417ad0:	add	x9, x9, #0xb8c
  417ad4:	mov	x0, x19
  417ad8:	mov	x2, x3
  417adc:	mov	x3, xzr
  417ae0:	mov	w4, w5
  417ae4:	mov	x5, x8
  417ae8:	str	x9, [x19, #1000]
  417aec:	bl	416c6c <feof@plt+0x1429c>
  417af0:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417af4:	add	x8, x8, #0x99
  417af8:	tst	w0, #0x1
  417afc:	csel	x0, xzr, x8, ne  // ne = any
  417b00:	str	x20, [x19, #1000]
  417b04:	ldp	x20, x19, [sp, #16]
  417b08:	ldp	x29, x30, [sp], #32
  417b0c:	ret
  417b10:	stp	x29, x30, [sp, #-48]!
  417b14:	str	x21, [sp, #16]
  417b18:	stp	x20, x19, [sp, #32]
  417b1c:	ldp	x10, x8, [x3, #8]
  417b20:	mov	x19, x3
  417b24:	mov	x20, x2
  417b28:	mov	x21, x1
  417b2c:	add	x9, x8, x2
  417b30:	cmp	x9, x10
  417b34:	mov	x29, sp
  417b38:	b.ls	417b58 <feof@plt+0x15188>  // b.plast
  417b3c:	ldr	x0, [x19]
  417b40:	add	x1, x9, x9, lsr #2
  417b44:	str	x1, [x19, #8]
  417b48:	bl	450728 <_obstack_memory_used@@Base+0x190>
  417b4c:	ldr	x8, [x19, #16]
  417b50:	str	x0, [x19]
  417b54:	b	417b5c <feof@plt+0x1518c>
  417b58:	ldr	x0, [x19]
  417b5c:	add	x0, x0, x8
  417b60:	mov	x1, x21
  417b64:	mov	x2, x20
  417b68:	bl	402390 <memcpy@plt>
  417b6c:	ldr	x8, [x19, #16]
  417b70:	ldr	x21, [sp, #16]
  417b74:	mov	w0, #0x1                   	// #1
  417b78:	add	x8, x8, x20
  417b7c:	str	x8, [x19, #16]
  417b80:	ldp	x20, x19, [sp, #32]
  417b84:	ldp	x29, x30, [sp], #48
  417b88:	ret
  417b8c:	mov	w0, #0x1                   	// #1
  417b90:	ret
  417b94:	sub	sp, sp, #0x40
  417b98:	stp	x29, x30, [sp, #32]
  417b9c:	str	x19, [sp, #48]
  417ba0:	add	x19, x0, #0x208
  417ba4:	ldr	x8, [x19, #16]
  417ba8:	ldr	q0, [x19]
  417bac:	mov	w4, #0x3e                  	// #62
  417bb0:	mov	x5, xzr
  417bb4:	str	x8, [sp, #16]
  417bb8:	str	q0, [sp]
  417bbc:	ldr	x9, [x0, #1216]
  417bc0:	adrp	x8, 417000 <feof@plt+0x14630>
  417bc4:	add	x8, x8, #0xb10
  417bc8:	str	x8, [x0, #520]
  417bcc:	mov	x8, #0xffffffffffffffff    	// #-1
  417bd0:	mov	x6, xzr
  417bd4:	add	x29, sp, #0x20
  417bd8:	str	x8, [x0, #528]
  417bdc:	str	w9, [x19, #16]
  417be0:	bl	416c6c <feof@plt+0x1429c>
  417be4:	ldr	q0, [sp]
  417be8:	ldr	x8, [sp, #16]
  417bec:	and	w0, w0, #0x1
  417bf0:	str	q0, [x19]
  417bf4:	str	x8, [x19, #16]
  417bf8:	ldr	x19, [sp, #48]
  417bfc:	ldp	x29, x30, [sp, #32]
  417c00:	add	sp, sp, #0x40
  417c04:	ret
  417c08:	sub	sp, sp, #0x70
  417c0c:	stp	x29, x30, [sp, #16]
  417c10:	str	x27, [sp, #32]
  417c14:	stp	x26, x25, [sp, #48]
  417c18:	stp	x24, x23, [sp, #64]
  417c1c:	stp	x22, x21, [sp, #80]
  417c20:	stp	x20, x19, [sp, #96]
  417c24:	stp	xzr, xzr, [sp]
  417c28:	mov	x21, x1
  417c2c:	ldr	w8, [x1, #8]!
  417c30:	mov	w10, #0x2                   	// #2
  417c34:	mov	x19, x3
  417c38:	mov	x20, x2
  417c3c:	ldurb	w4, [x1, #-4]
  417c40:	mov	x22, x0
  417c44:	add	x29, sp, #0x10
  417c48:	cmp	w4, #0x3c
  417c4c:	orr	w23, w4, #0x4
  417c50:	cset	w9, eq  // eq = none
  417c54:	cmp	w23, #0x3c
  417c58:	cinc	x10, x10, ne  // ne = any
  417c5c:	add	x9, x10, w9, uxtw #1
  417c60:	cmp	x9, x8
  417c64:	b.ne	417c80 <feof@plt+0x152b0>  // b.any
  417c68:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417c6c:	add	x2, x2, #0xb7
  417c70:	mov	w1, #0x3                   	// #3
  417c74:	mov	x0, x22
  417c78:	bl	41de04 <feof@plt+0x1b434>
  417c7c:	b	417cdc <feof@plt+0x1530c>
  417c80:	mov	x3, sp
  417c84:	mov	w2, #0x1                   	// #1
  417c88:	mov	x0, x22
  417c8c:	mov	x5, xzr
  417c90:	mov	x6, xzr
  417c94:	bl	416c6c <feof@plt+0x1429c>
  417c98:	tbz	w0, #0, 417cdc <feof@plt+0x1530c>
  417c9c:	ldp	x10, x8, [sp]
  417ca0:	cmp	w23, #0x3c
  417ca4:	b.eq	417d0c <feof@plt+0x1533c>  // b.none
  417ca8:	ldrb	w24, [x21, #4]
  417cac:	ldrb	w9, [x22, #1242]
  417cb0:	sub	w11, w24, #0x39
  417cb4:	cmp	w11, #0x9
  417cb8:	b.hi	417e30 <feof@plt+0x15460>  // b.pmore
  417cbc:	adrp	x12, 452000 <_obstack_memory_used@@Base+0x1a68>
  417cc0:	add	x12, x12, #0xc78
  417cc4:	adr	x13, 417cd4 <feof@plt+0x15304>
  417cc8:	ldrb	w14, [x12, x11]
  417ccc:	add	x13, x13, x14, lsl #2
  417cd0:	br	x13
  417cd4:	add	x11, x22, #0x278
  417cd8:	b	417e34 <feof@plt+0x15464>
  417cdc:	mov	w23, wzr
  417ce0:	str	wzr, [x20]
  417ce4:	str	wzr, [x19]
  417ce8:	mov	w0, w23
  417cec:	ldp	x20, x19, [sp, #96]
  417cf0:	ldp	x22, x21, [sp, #80]
  417cf4:	ldp	x24, x23, [sp, #64]
  417cf8:	ldp	x26, x25, [sp, #48]
  417cfc:	ldr	x27, [sp, #32]
  417d00:	ldp	x29, x30, [sp, #16]
  417d04:	add	sp, sp, #0x70
  417d08:	ret
  417d0c:	ldr	x25, [x22, #1216]
  417d10:	mov	x9, #0xffffffffffffffff    	// #-1
  417d14:	mov	w11, #0xff                  	// #255
  417d18:	mov	w23, wzr
  417d1c:	lsl	x9, x9, x25
  417d20:	cmp	x25, #0x20
  417d24:	eor	x9, x9, #0xff
  417d28:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  417d2c:	subs	w24, w10, #0x1
  417d30:	b.eq	417dc4 <feof@plt+0x153f4>  // b.none
  417d34:	ldr	x10, [x22, #1224]
  417d38:	udiv	x26, x10, x25
  417d3c:	mov	x10, x24
  417d40:	ldrb	w11, [x8], #1
  417d44:	lsl	w12, w23, w25
  417d48:	cmp	x25, #0x20
  417d4c:	csel	w12, w12, wzr, cc  // cc = lo, ul, last
  417d50:	and	w11, w9, w11
  417d54:	subs	x10, x10, #0x1
  417d58:	orr	w23, w12, w11
  417d5c:	b.ne	417d40 <feof@plt+0x15370>  // b.any
  417d60:	cmp	x24, x26
  417d64:	b.ls	417d8c <feof@plt+0x153bc>  // b.plast
  417d68:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417d6c:	add	x2, x2, #0x3c6
  417d70:	mov	x0, x22
  417d74:	mov	w1, wzr
  417d78:	bl	41de04 <feof@plt+0x1b434>
  417d7c:	cmp	x26, #0x1
  417d80:	b.ls	417de4 <feof@plt+0x15414>  // b.plast
  417d84:	mov	x24, x26
  417d88:	b	417db0 <feof@plt+0x153e0>
  417d8c:	cmp	x24, #0x2
  417d90:	b.cc	417dc4 <feof@plt+0x153f4>  // b.lo, b.ul, b.last
  417d94:	ldrb	w8, [x22, #1137]
  417d98:	cbz	w8, 417db0 <feof@plt+0x153e0>
  417d9c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417da0:	add	x2, x2, #0x3ef
  417da4:	mov	w1, #0x5                   	// #5
  417da8:	mov	x0, x22
  417dac:	bl	41df34 <feof@plt+0x1b564>
  417db0:	ldr	x25, [x22, #1224]
  417db4:	mov	w8, wzr
  417db8:	cmp	x25, #0x1f
  417dbc:	b.ls	417dfc <feof@plt+0x1542c>  // b.plast
  417dc0:	b	417e24 <feof@plt+0x15454>
  417dc4:	ldrb	w8, [x22, #1240]
  417dc8:	b	417dec <feof@plt+0x1541c>
  417dcc:	add	x11, x22, #0x248
  417dd0:	b	417e34 <feof@plt+0x15464>
  417dd4:	add	x11, x22, #0x260
  417dd8:	b	417e34 <feof@plt+0x15464>
  417ddc:	add	x11, x22, #0x230
  417de0:	b	417e34 <feof@plt+0x15464>
  417de4:	ldrb	w8, [x22, #1240]
  417de8:	mov	x24, x26
  417dec:	cmp	w8, #0x0
  417df0:	cset	w8, ne  // ne = any
  417df4:	cmp	x25, #0x1f
  417df8:	b.hi	417e24 <feof@plt+0x15454>  // b.pmore
  417dfc:	mov	w9, #0xffffffff            	// #-1
  417e00:	lsl	w9, w9, w25
  417e04:	tbnz	w8, #0, 417e1c <feof@plt+0x1544c>
  417e08:	sub	w10, w25, #0x1
  417e0c:	lsr	w10, w23, w10
  417e10:	tbz	w10, #0, 417e1c <feof@plt+0x1544c>
  417e14:	orr	w23, w9, w23
  417e18:	b	417e24 <feof@plt+0x15454>
  417e1c:	mvn	w9, w9
  417e20:	and	w23, w23, w9
  417e24:	str	w24, [x20]
  417e28:	str	w8, [x19]
  417e2c:	b	417f18 <feof@plt+0x15548>
  417e30:	add	x11, x22, #0x218
  417e34:	ldrsw	x25, [x11]
  417e38:	ldr	x11, [x22, #1216]
  417e3c:	mov	w12, #0x20                  	// #32
  417e40:	mov	x26, #0xffffffffffffffff    	// #-1
  417e44:	cmp	x25, #0x20
  417e48:	udiv	x13, x25, x11
  417e4c:	csel	x27, x25, x12, cc  // cc = lo, ul, last
  417e50:	cmp	x11, #0x20
  417e54:	and	x10, x10, #0xffffffff
  417e58:	csel	x15, x11, x12, cc  // cc = lo, ul, last
  417e5c:	cmp	x11, x25
  417e60:	lsl	x12, x13, #1
  417e64:	b.ls	417e70 <feof@plt+0x154a0>  // b.plast
  417e68:	mov	w23, wzr
  417e6c:	b	417eb8 <feof@plt+0x154e8>
  417e70:	lsl	x16, x26, x15
  417e74:	sub	x15, x10, x12
  417e78:	mov	x14, xzr
  417e7c:	mov	w23, wzr
  417e80:	eor	x16, x16, #0xff
  417e84:	add	x17, x15, x13
  417e88:	mvn	x0, x14
  417e8c:	add	x18, x14, x15
  417e90:	cmp	w9, #0x0
  417e94:	add	x0, x17, x0
  417e98:	csel	x18, x0, x18, eq  // eq = none
  417e9c:	ldrb	w18, [x8, x18]
  417ea0:	lsl	w0, w23, w11
  417ea4:	add	x14, x14, #0x1
  417ea8:	cmp	x14, x13
  417eac:	and	w18, w16, w18
  417eb0:	orr	w23, w0, w18
  417eb4:	b.cc	417e88 <feof@plt+0x154b8>  // b.lo, b.ul, b.last
  417eb8:	cmp	x10, x12
  417ebc:	b.ls	417ed4 <feof@plt+0x15504>  // b.plast
  417ec0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  417ec4:	add	x2, x2, #0x3c6
  417ec8:	mov	x0, x22
  417ecc:	mov	w1, wzr
  417ed0:	bl	41de04 <feof@plt+0x1b434>
  417ed4:	cmp	w25, #0x1f
  417ed8:	orr	w8, w24, #0x1
  417edc:	b.hi	417efc <feof@plt+0x1552c>  // b.pmore
  417ee0:	lsl	x9, x26, x27
  417ee4:	cmp	w8, #0x3b
  417ee8:	mvn	x9, x9
  417eec:	b.eq	417ef8 <feof@plt+0x15528>  // b.none
  417ef0:	ldrb	w10, [x22, #1241]
  417ef4:	cbz	w10, 417f30 <feof@plt+0x15560>
  417ef8:	and	w23, w23, w9
  417efc:	mov	w9, #0x1                   	// #1
  417f00:	cmp	w8, #0x3b
  417f04:	mov	w8, #0x1                   	// #1
  417f08:	b.eq	417f10 <feof@plt+0x15540>  // b.none
  417f0c:	ldrb	w8, [x22, #1241]
  417f10:	str	w8, [x19]
  417f14:	str	w9, [x20]
  417f18:	ldr	x0, [sp, #8]
  417f1c:	ldr	x8, [x21, #16]
  417f20:	cmp	x0, x8
  417f24:	b.eq	417ce8 <feof@plt+0x15318>  // b.none
  417f28:	bl	4024c0 <free@plt>
  417f2c:	b	417ce8 <feof@plt+0x15318>
  417f30:	sub	w10, w25, #0x1
  417f34:	lsr	w10, w23, w10
  417f38:	tbz	w10, #0, 417ef8 <feof@plt+0x15528>
  417f3c:	orn	w23, w23, w9
  417f40:	b	417efc <feof@plt+0x1552c>
  417f44:	stp	x29, x30, [sp, #-96]!
  417f48:	stp	x28, x27, [sp, #16]
  417f4c:	stp	x26, x25, [sp, #32]
  417f50:	stp	x24, x23, [sp, #48]
  417f54:	stp	x22, x21, [sp, #64]
  417f58:	stp	x20, x19, [sp, #80]
  417f5c:	mov	x29, sp
  417f60:	sub	sp, sp, #0x10
  417f64:	add	x9, x2, #0x10
  417f68:	mov	x8, sp
  417f6c:	and	x9, x9, #0xfffffffffffffff0
  417f70:	mov	x20, x0
  417f74:	sub	x19, x8, x9
  417f78:	mov	sp, x19
  417f7c:	cbz	x2, 4180e8 <feof@plt+0x15718>
  417f80:	stur	x20, [x29, #-16]
  417f84:	adrp	x27, 461000 <_obstack_memory_used@@Base+0x10a68>
  417f88:	adrp	x28, 45a000 <_obstack_memory_used@@Base+0x9a68>
  417f8c:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x10a68>
  417f90:	mov	x21, x2
  417f94:	mov	x22, x1
  417f98:	mov	x25, xzr
  417f9c:	add	x24, x19, x2
  417fa0:	mov	w13, #0x7                   	// #7
  417fa4:	mov	w14, #0x3                   	// #3
  417fa8:	add	x27, x27, #0xa50
  417fac:	add	x28, x28, #0xdf6
  417fb0:	add	x20, x20, #0x93f
  417fb4:	mov	x23, x19
  417fb8:	b	417fcc <feof@plt+0x155fc>
  417fbc:	strb	w8, [x23], #1
  417fc0:	add	x25, x25, #0x1
  417fc4:	cmp	x25, x21
  417fc8:	b.cs	4180e0 <feof@plt+0x15710>  // b.hs, b.nlast
  417fcc:	ldrb	w8, [x22, x25]
  417fd0:	cmp	w8, #0x5c
  417fd4:	b.ne	417fbc <feof@plt+0x155ec>  // b.any
  417fd8:	add	x9, x25, #0x2
  417fdc:	cmp	x9, x21
  417fe0:	add	x25, x25, #0x1
  417fe4:	mov	w8, wzr
  417fe8:	b.cs	418034 <feof@plt+0x15664>  // b.hs, b.nlast
  417fec:	ldrb	w10, [x22, x25]
  417ff0:	cmp	w10, #0x75
  417ff4:	csel	w10, w14, w13, eq  // eq = none
  417ff8:	ldrb	w11, [x22, x9]
  417ffc:	ldrh	w12, [x27, x11, lsl #1]
  418000:	tbz	w12, #8, 418020 <feof@plt+0x15650>
  418004:	ldrb	w11, [x20, x11]
  418008:	subs	w10, w10, #0x1
  41800c:	add	x9, x9, #0x1
  418010:	add	w8, w11, w8, lsl #4
  418014:	b.cc	418020 <feof@plt+0x15650>  // b.lo, b.ul, b.last
  418018:	cmp	x9, x21
  41801c:	b.cc	417ff8 <feof@plt+0x15628>  // b.lo, b.ul, b.last
  418020:	cmp	w8, #0x24
  418024:	sub	x25, x9, #0x1
  418028:	b.eq	417fbc <feof@plt+0x155ec>  // b.none
  41802c:	cmp	w8, #0x80
  418030:	b.cs	418078 <feof@plt+0x156a8>  // b.hs, b.nlast
  418034:	sturb	w8, [x29, #-3]
  418038:	mov	x26, #0xffffffffffffffff    	// #-1
  41803c:	mov	w8, #0x1                   	// #1
  418040:	sub	x9, x24, x23
  418044:	cmp	x9, x8
  418048:	b.cc	4180f0 <feof@plt+0x15720>  // b.lo, b.ul, b.last
  41804c:	tbz	x26, #63, 417fc0 <feof@plt+0x155f0>
  418050:	sub	x8, x29, #0x8
  418054:	add	x8, x8, x26
  418058:	add	x1, x8, #0x6
  41805c:	neg	x2, x26
  418060:	mov	x0, x23
  418064:	bl	402390 <memcpy@plt>
  418068:	mov	w14, #0x3                   	// #3
  41806c:	mov	w13, #0x7                   	// #7
  418070:	sub	x23, x23, x26
  418074:	b	417fc0 <feof@plt+0x155f0>
  418078:	mov	x9, xzr
  41807c:	sub	x10, x29, #0x8
  418080:	b	418090 <feof@plt+0x156c0>
  418084:	add	x9, x9, #0x1
  418088:	sub	x10, x10, #0x1
  41808c:	mov	w8, w11
  418090:	mov	w11, #0x80                  	// #128
  418094:	bfxil	w11, w8, #0, #6
  418098:	cmp	w8, #0xfbf
  41809c:	strb	w11, [x10, #5]
  4180a0:	lsr	w11, w8, #6
  4180a4:	b.hi	418084 <feof@plt+0x156b4>  // b.pmore
  4180a8:	add	x12, x28, x9
  4180ac:	ldrb	w12, [x12, #1]
  4180b0:	tst	w11, w12
  4180b4:	b.ne	418084 <feof@plt+0x156b4>  // b.any
  4180b8:	adrp	x11, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4180bc:	add	x11, x11, #0xdf0
  4180c0:	add	x11, x11, x9
  4180c4:	ldrb	w11, [x11, #1]
  4180c8:	mov	x12, #0xfffffffffffffffe    	// #-2
  4180cc:	sub	x26, x12, x9
  4180d0:	orr	w8, w11, w8, lsr #6
  4180d4:	strb	w8, [x10, #4]
  4180d8:	add	x8, x9, #0x2
  4180dc:	b	418040 <feof@plt+0x15670>
  4180e0:	ldur	x20, [x29, #-16]
  4180e4:	b	418114 <feof@plt+0x15744>
  4180e8:	mov	x23, x19
  4180ec:	b	418114 <feof@plt+0x15744>
  4180f0:	bl	4027c0 <__errno_location@plt>
  4180f4:	ldur	x20, [x29, #-16]
  4180f8:	mov	w8, #0x7                   	// #7
  4180fc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  418100:	str	w8, [x0]
  418104:	add	x2, x2, #0xd0
  418108:	mov	w1, #0x3                   	// #3
  41810c:	mov	x0, x20
  418110:	bl	41e85c <feof@plt+0x1be8c>
  418114:	ldr	x0, [x20, #1088]
  418118:	sub	x2, x23, x19
  41811c:	mov	w3, #0x1                   	// #1
  418120:	mov	x1, x19
  418124:	bl	43244c <feof@plt+0x2fa7c>
  418128:	mov	sp, x29
  41812c:	ldp	x20, x19, [sp, #80]
  418130:	ldp	x22, x21, [sp, #64]
  418134:	ldp	x24, x23, [sp, #48]
  418138:	ldp	x26, x25, [sp, #32]
  41813c:	ldp	x28, x27, [sp, #16]
  418140:	ldp	x29, x30, [sp], #96
  418144:	ret
  418148:	sub	sp, sp, #0x70
  41814c:	stp	x22, x21, [sp, #80]
  418150:	mov	x21, x2
  418154:	mov	x2, x1
  418158:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41815c:	add	x1, x1, #0x1a2
  418160:	add	x8, sp, #0x8
  418164:	stp	x29, x30, [sp, #32]
  418168:	str	x25, [sp, #48]
  41816c:	stp	x24, x23, [sp, #64]
  418170:	stp	x20, x19, [sp, #96]
  418174:	add	x29, sp, #0x20
  418178:	mov	x20, x6
  41817c:	mov	x19, x5
  418180:	mov	x24, x4
  418184:	mov	x23, x3
  418188:	mov	x22, x0
  41818c:	bl	416134 <feof@plt+0x13764>
  418190:	ldr	x25, [sp, #8]
  418194:	adrp	x8, 417000 <feof@plt+0x14630>
  418198:	add	x8, x8, #0xb10
  41819c:	cmp	x25, x8
  4181a0:	b.eq	418220 <feof@plt+0x15850>  // b.none
  4181a4:	ldr	x23, [sp, #16]
  4181a8:	cmp	x24, #0x10, lsl #12
  4181ac:	mov	w8, #0x10000               	// #65536
  4181b0:	csel	x0, x24, x8, hi  // hi = pmore
  4181b4:	str	x0, [sp, #16]
  4181b8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4181bc:	str	x0, [sp, #8]
  4181c0:	add	x3, sp, #0x8
  4181c4:	mov	x0, x23
  4181c8:	mov	x1, x21
  4181cc:	mov	x2, x24
  4181d0:	str	xzr, [sp, #24]
  4181d4:	blr	x25
  4181d8:	tbnz	w0, #0, 4181fc <feof@plt+0x1582c>
  4181dc:	ldr	x3, [x22, #1184]
  4181e0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4181e4:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4181e8:	add	x2, x2, #0xf7
  4181ec:	add	x4, x4, #0x1a2
  4181f0:	mov	w1, #0x3                   	// #3
  4181f4:	mov	x0, x22
  4181f8:	bl	41de04 <feof@plt+0x1b434>
  4181fc:	mov	x0, x21
  418200:	bl	4024c0 <free@plt>
  418204:	adrp	x8, 416000 <feof@plt+0x13630>
  418208:	add	x8, x8, #0x3f4
  41820c:	cmp	x25, x8
  418210:	b.ne	418228 <feof@plt+0x15858>  // b.any
  418214:	mov	x0, x23
  418218:	bl	402380 <iconv_close@plt>
  41821c:	b	418228 <feof@plt+0x15858>
  418220:	stp	x21, x23, [sp, #8]
  418224:	str	x24, [sp, #24]
  418228:	ldp	x9, x8, [sp, #16]
  41822c:	ldr	x0, [sp, #8]
  418230:	add	x10, x8, #0x1, lsl #12
  418234:	cmp	x10, x9
  418238:	add	x1, x8, #0x10
  41823c:	b.cc	418248 <feof@plt+0x15878>  // b.lo, b.ul, b.last
  418240:	cmp	x1, x9
  418244:	b.ls	418254 <feof@plt+0x15884>  // b.plast
  418248:	bl	450728 <_obstack_memory_used@@Base+0x190>
  41824c:	ldr	x8, [sp, #24]
  418250:	str	x0, [sp, #8]
  418254:	add	x8, x0, x8
  418258:	stp	xzr, xzr, [x8]
  41825c:	ldr	x8, [sp, #24]
  418260:	ldr	x9, [sp, #8]
  418264:	cbz	x8, 418278 <feof@plt+0x158a8>
  418268:	add	x10, x8, x9
  41826c:	ldurb	w10, [x10, #-1]
  418270:	cmp	w10, #0xd
  418274:	b.eq	41827c <feof@plt+0x158ac>  // b.none
  418278:	mov	w10, #0xa                   	// #10
  41827c:	strb	w10, [x9, x8]
  418280:	ldr	x10, [sp, #24]
  418284:	ldr	x8, [sp, #8]
  418288:	subs	x9, x10, #0x3
  41828c:	mov	x0, x8
  418290:	str	x10, [x20]
  418294:	b.cc	4182d0 <feof@plt+0x15900>  // b.lo, b.ul, b.last
  418298:	ldrb	w10, [x8]
  41829c:	mov	x0, x8
  4182a0:	cmp	w10, #0xef
  4182a4:	b.ne	4182d0 <feof@plt+0x15900>  // b.any
  4182a8:	ldrb	w10, [x8, #1]
  4182ac:	mov	x0, x8
  4182b0:	cmp	w10, #0xbb
  4182b4:	b.ne	4182d0 <feof@plt+0x15900>  // b.any
  4182b8:	ldrb	w10, [x8, #2]
  4182bc:	mov	x0, x8
  4182c0:	cmp	w10, #0xbf
  4182c4:	b.ne	4182d0 <feof@plt+0x15900>  // b.any
  4182c8:	add	x0, x8, #0x3
  4182cc:	str	x9, [x20]
  4182d0:	str	x8, [x19]
  4182d4:	ldp	x20, x19, [sp, #96]
  4182d8:	ldp	x22, x21, [sp, #80]
  4182dc:	ldp	x24, x23, [sp, #64]
  4182e0:	ldr	x25, [sp, #48]
  4182e4:	ldp	x29, x30, [sp, #32]
  4182e8:	add	sp, sp, #0x70
  4182ec:	ret
  4182f0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4182f4:	add	x0, x0, #0x1a2
  4182f8:	ret
  4182fc:	stp	x29, x30, [sp, #-48]!
  418300:	stp	x20, x19, [sp, #32]
  418304:	mov	x20, x0
  418308:	str	x2, [x0, #8]
  41830c:	mov	x0, x2
  418310:	str	x21, [sp, #16]
  418314:	mov	x29, sp
  418318:	mov	x19, x2
  41831c:	bl	429d18 <feof@plt+0x27348>
  418320:	mov	x1, x0
  418324:	mov	w2, #0x1                   	// #1
  418328:	mov	x0, x19
  41832c:	mov	x3, xzr
  418330:	mov	w21, #0x1                   	// #1
  418334:	bl	42ab94 <feof@plt+0x281c4>
  418338:	mov	w1, w0
  41833c:	str	w0, [x20]
  418340:	mov	x0, x19
  418344:	bl	429b2c <feof@plt+0x2715c>
  418348:	ldrb	w8, [x0, #7]
  41834c:	lsl	w8, w21, w8
  418350:	str	w8, [x20, #4]
  418354:	ldp	x20, x19, [sp, #32]
  418358:	ldr	x21, [sp, #16]
  41835c:	ldp	x29, x30, [sp], #48
  418360:	ret
  418364:	stp	x29, x30, [sp, #-96]!
  418368:	str	x27, [sp, #16]
  41836c:	stp	x26, x25, [sp, #32]
  418370:	stp	x24, x23, [sp, #48]
  418374:	stp	x22, x21, [sp, #64]
  418378:	stp	x20, x19, [sp, #80]
  41837c:	ldp	x10, x9, [x3, #8]
  418380:	ldr	x8, [x3]
  418384:	cmp	x0, #0x0
  418388:	mov	w11, #0x3                   	// #3
  41838c:	mov	w12, #0x1                   	// #1
  418390:	mov	x19, x3
  418394:	mov	x21, x2
  418398:	mov	x20, x1
  41839c:	csel	x22, x11, xzr, ne  // ne = any
  4183a0:	add	x8, x8, x9
  4183a4:	sub	x9, x10, x9
  4183a8:	cinc	x23, x12, ne  // ne = any
  4183ac:	cinc	x24, x12, eq  // eq = none
  4183b0:	csel	x25, xzr, x11, ne  // ne = any
  4183b4:	mov	x29, sp
  4183b8:	mov	x26, x9
  4183bc:	subs	x9, x26, #0x4
  4183c0:	b.cc	4184e4 <feof@plt+0x15b14>  // b.lo, b.ul, b.last
  4183c4:	cbz	x21, 418568 <feof@plt+0x15b98>
  4183c8:	ldrsb	w11, [x20]
  4183cc:	and	w10, w11, #0xff
  4183d0:	tbz	w11, #31, 41852c <feof@plt+0x15b5c>
  4183d4:	and	w11, w10, #0xe0
  4183d8:	cmp	w11, #0xc0
  4183dc:	b.ne	4183ec <feof@plt+0x15a1c>  // b.any
  4183e0:	mov	w13, #0x1f                  	// #31
  4183e4:	mov	w11, #0x2                   	// #2
  4183e8:	b	418448 <feof@plt+0x15a78>
  4183ec:	and	w11, w10, #0xf0
  4183f0:	cmp	w11, #0xe0
  4183f4:	b.ne	418404 <feof@plt+0x15a34>  // b.any
  4183f8:	mov	w13, #0xf                   	// #15
  4183fc:	mov	w11, #0x3                   	// #3
  418400:	b	418448 <feof@plt+0x15a78>
  418404:	and	w11, w10, #0xf8
  418408:	cmp	w11, #0xf0
  41840c:	b.ne	41841c <feof@plt+0x15a4c>  // b.any
  418410:	mov	w13, #0x7                   	// #7
  418414:	mov	w11, #0x4                   	// #4
  418418:	b	418448 <feof@plt+0x15a78>
  41841c:	and	w11, w10, #0xfc
  418420:	cmp	w11, #0xf8
  418424:	b.ne	418434 <feof@plt+0x15a64>  // b.any
  418428:	mov	w13, #0x3                   	// #3
  41842c:	mov	w11, #0x5                   	// #5
  418430:	b	418448 <feof@plt+0x15a78>
  418434:	and	w11, w10, #0xfe
  418438:	cmp	w11, #0xfc
  41843c:	b.ne	4185b0 <feof@plt+0x15be0>  // b.any
  418440:	mov	w13, #0x1                   	// #1
  418444:	mov	w11, #0x6                   	// #6
  418448:	subs	x12, x21, x11
  41844c:	b.cc	418598 <feof@plt+0x15bc8>  // b.lo, b.ul, b.last
  418450:	and	w10, w13, w10
  418454:	mov	w14, #0x1                   	// #1
  418458:	mov	w13, w10
  41845c:	ldrb	w10, [x20, x14]
  418460:	and	w15, w10, #0xc0
  418464:	cmp	w15, #0x80
  418468:	b.ne	4184c4 <feof@plt+0x15af4>  // b.any
  41846c:	add	x14, x14, #0x1
  418470:	cmp	x11, x14
  418474:	bfi	w10, w13, #6, #26
  418478:	b.ne	418458 <feof@plt+0x15a88>  // b.any
  41847c:	cmp	w10, #0x80
  418480:	b.cc	4184c4 <feof@plt+0x15af4>  // b.lo, b.ul, b.last
  418484:	cmp	x11, #0x3
  418488:	b.cc	418494 <feof@plt+0x15ac4>  // b.lo, b.ul, b.last
  41848c:	cmp	w10, #0x800
  418490:	b.cc	4184c4 <feof@plt+0x15af4>  // b.lo, b.ul, b.last
  418494:	cmp	x11, #0x4
  418498:	b.cc	4184a4 <feof@plt+0x15ad4>  // b.lo, b.ul, b.last
  41849c:	cmp	w10, #0x10, lsl #12
  4184a0:	b.cc	4184c4 <feof@plt+0x15af4>  // b.lo, b.ul, b.last
  4184a4:	cmp	x11, #0x5
  4184a8:	b.cc	4184b4 <feof@plt+0x15ae4>  // b.lo, b.ul, b.last
  4184ac:	cmp	w10, #0x200, lsl #12
  4184b0:	b.cc	4184c4 <feof@plt+0x15af4>  // b.lo, b.ul, b.last
  4184b4:	cmp	x11, #0x6
  4184b8:	b.cc	4184cc <feof@plt+0x15afc>  // b.lo, b.ul, b.last
  4184bc:	lsr	w14, w10, #26
  4184c0:	cbnz	w14, 4184cc <feof@plt+0x15afc>
  4184c4:	mov	w27, #0x54                  	// #84
  4184c8:	b	4184e8 <feof@plt+0x15b18>
  4184cc:	mov	w27, #0x54                  	// #84
  4184d0:	tbnz	w10, #31, 4184e8 <feof@plt+0x15b18>
  4184d4:	and	w13, w13, #0x3ffffe0
  4184d8:	cmp	w13, #0x360
  4184dc:	b.eq	4184e8 <feof@plt+0x15b18>  // b.none
  4184e0:	b	41855c <feof@plt+0x15b8c>
  4184e4:	mov	w27, #0x7                   	// #7
  4184e8:	cbz	x21, 418568 <feof@plt+0x15b98>
  4184ec:	cmp	w27, #0x7
  4184f0:	b.ne	41859c <feof@plt+0x15bcc>  // b.any
  4184f4:	ldp	x0, x8, [x19]
  4184f8:	add	x27, x26, #0x100
  4184fc:	add	x1, x8, #0x100
  418500:	str	x1, [x19, #8]
  418504:	bl	450728 <_obstack_memory_used@@Base+0x190>
  418508:	ldr	x8, [x19, #8]
  41850c:	str	x0, [x19]
  418510:	add	x8, x0, x8
  418514:	sub	x8, x8, x26
  418518:	sub	x8, x8, #0x100
  41851c:	mov	x26, x27
  418520:	subs	x9, x26, #0x4
  418524:	b.cs	4183c4 <feof@plt+0x159f4>  // b.hs, b.nlast
  418528:	b	4184e4 <feof@plt+0x15b14>
  41852c:	sub	x21, x21, #0x1
  418530:	add	x20, x20, #0x1
  418534:	strb	w10, [x8, x22]
  418538:	lsr	w11, w10, #8
  41853c:	lsr	w12, w10, #16
  418540:	lsr	w10, w10, #24
  418544:	strb	w11, [x8, x23]
  418548:	strb	w12, [x8, x24]
  41854c:	strb	w10, [x8, x25]
  418550:	add	x8, x8, #0x4
  418554:	cbnz	x21, 4183b8 <feof@plt+0x159e8>
  418558:	b	41856c <feof@plt+0x15b9c>
  41855c:	add	x20, x20, x11
  418560:	mov	x21, x12
  418564:	b	418534 <feof@plt+0x15b64>
  418568:	mov	x9, x26
  41856c:	ldr	x8, [x19, #8]
  418570:	mov	w0, #0x1                   	// #1
  418574:	sub	x8, x8, x9
  418578:	str	x8, [x19, #16]
  41857c:	ldp	x20, x19, [sp, #80]
  418580:	ldp	x22, x21, [sp, #64]
  418584:	ldp	x24, x23, [sp, #48]
  418588:	ldp	x26, x25, [sp, #32]
  41858c:	ldr	x27, [sp, #16]
  418590:	ldp	x29, x30, [sp], #96
  418594:	ret
  418598:	mov	w27, #0x16                  	// #22
  41859c:	bl	4027c0 <__errno_location@plt>
  4185a0:	mov	x8, x0
  4185a4:	mov	w0, wzr
  4185a8:	str	w27, [x8]
  4185ac:	b	41857c <feof@plt+0x15bac>
  4185b0:	mov	w27, #0x54                  	// #84
  4185b4:	b	41859c <feof@plt+0x15bcc>
  4185b8:	sub	sp, sp, #0x70
  4185bc:	stp	x29, x30, [sp, #16]
  4185c0:	stp	x28, x27, [sp, #32]
  4185c4:	stp	x26, x25, [sp, #48]
  4185c8:	stp	x24, x23, [sp, #64]
  4185cc:	stp	x22, x21, [sp, #80]
  4185d0:	stp	x20, x19, [sp, #96]
  4185d4:	ldp	x10, x9, [x3, #8]
  4185d8:	ldr	x8, [x3]
  4185dc:	cmp	x0, #0x0
  4185e0:	mov	w11, #0x2                   	// #2
  4185e4:	mov	x19, x3
  4185e8:	mov	x21, x2
  4185ec:	mov	x20, x1
  4185f0:	cset	w22, eq  // eq = none
  4185f4:	cset	w23, ne  // ne = any
  4185f8:	cinc	x12, x11, ne  // ne = any
  4185fc:	cinc	x26, x11, eq  // eq = none
  418600:	add	x8, x8, x9
  418604:	sub	x25, x10, x9
  418608:	add	x29, sp, #0x10
  41860c:	str	x12, [sp, #8]
  418610:	sub	x28, x21, #0x1
  418614:	add	x27, x20, #0x1
  418618:	cbz	x21, 41880c <feof@plt+0x15e3c>
  41861c:	ldrsb	w10, [x20]
  418620:	and	w9, w10, #0xff
  418624:	tbnz	w10, #31, 418648 <feof@plt+0x15c78>
  418628:	mov	x11, x27
  41862c:	mov	x10, x28
  418630:	cmp	x25, #0x2
  418634:	b.cs	4187e0 <feof@plt+0x15e10>  // b.hs, b.nlast
  418638:	mov	w24, #0x7                   	// #7
  41863c:	cmp	w24, #0x7
  418640:	b.eq	418768 <feof@plt+0x15d98>  // b.none
  418644:	b	418824 <feof@plt+0x15e54>
  418648:	and	w10, w9, #0xe0
  41864c:	cmp	w10, #0xc0
  418650:	b.ne	418660 <feof@plt+0x15c90>  // b.any
  418654:	mov	w11, #0x1f                  	// #31
  418658:	mov	w12, #0x2                   	// #2
  41865c:	b	4186bc <feof@plt+0x15cec>
  418660:	and	w10, w9, #0xf0
  418664:	cmp	w10, #0xe0
  418668:	b.ne	418678 <feof@plt+0x15ca8>  // b.any
  41866c:	mov	w11, #0xf                   	// #15
  418670:	mov	w12, #0x3                   	// #3
  418674:	b	4186bc <feof@plt+0x15cec>
  418678:	and	w10, w9, #0xf8
  41867c:	cmp	w10, #0xf0
  418680:	b.ne	418690 <feof@plt+0x15cc0>  // b.any
  418684:	mov	w11, #0x7                   	// #7
  418688:	mov	w12, #0x4                   	// #4
  41868c:	b	4186bc <feof@plt+0x15cec>
  418690:	and	w10, w9, #0xfc
  418694:	cmp	w10, #0xf8
  418698:	b.ne	4186a8 <feof@plt+0x15cd8>  // b.any
  41869c:	mov	w11, #0x3                   	// #3
  4186a0:	mov	w12, #0x5                   	// #5
  4186a4:	b	4186bc <feof@plt+0x15cec>
  4186a8:	and	w10, w9, #0xfe
  4186ac:	cmp	w10, #0xfc
  4186b0:	b.ne	418854 <feof@plt+0x15e84>  // b.any
  4186b4:	mov	w11, #0x1                   	// #1
  4186b8:	mov	w12, #0x6                   	// #6
  4186bc:	subs	x10, x21, x12
  4186c0:	b.cc	418820 <feof@plt+0x15e50>  // b.lo, b.ul, b.last
  4186c4:	and	w9, w11, w9
  4186c8:	add	x11, x20, x12
  4186cc:	mov	w14, #0x1                   	// #1
  4186d0:	mov	w13, w9
  4186d4:	ldrb	w9, [x20, x14]
  4186d8:	and	w15, w9, #0xc0
  4186dc:	cmp	w15, #0x80
  4186e0:	b.ne	41875c <feof@plt+0x15d8c>  // b.any
  4186e4:	add	x14, x14, #0x1
  4186e8:	cmp	x12, x14
  4186ec:	bfi	w9, w13, #6, #26
  4186f0:	b.ne	4186d0 <feof@plt+0x15d00>  // b.any
  4186f4:	cmp	w9, #0x80
  4186f8:	b.cc	41875c <feof@plt+0x15d8c>  // b.lo, b.ul, b.last
  4186fc:	cmp	x12, #0x3
  418700:	b.cc	41870c <feof@plt+0x15d3c>  // b.lo, b.ul, b.last
  418704:	cmp	w9, #0x800
  418708:	b.cc	41875c <feof@plt+0x15d8c>  // b.lo, b.ul, b.last
  41870c:	cmp	x12, #0x4
  418710:	b.cc	41871c <feof@plt+0x15d4c>  // b.lo, b.ul, b.last
  418714:	cmp	w9, #0x10, lsl #12
  418718:	b.cc	41875c <feof@plt+0x15d8c>  // b.lo, b.ul, b.last
  41871c:	cmp	x12, #0x5
  418720:	b.cc	41872c <feof@plt+0x15d5c>  // b.lo, b.ul, b.last
  418724:	cmp	w9, #0x200, lsl #12
  418728:	b.cc	41875c <feof@plt+0x15d8c>  // b.lo, b.ul, b.last
  41872c:	cmp	x12, #0x6
  418730:	b.cc	41873c <feof@plt+0x15d6c>  // b.lo, b.ul, b.last
  418734:	lsr	w12, w9, #26
  418738:	cbz	w12, 41875c <feof@plt+0x15d8c>
  41873c:	mov	w24, #0x54                  	// #84
  418740:	tbnz	w9, #31, 418760 <feof@plt+0x15d90>
  418744:	and	w12, w13, #0x3ffffe0
  418748:	cmp	w12, #0x360
  41874c:	b.eq	418760 <feof@plt+0x15d90>  // b.none
  418750:	lsr	w12, w9, #16
  418754:	cmp	w12, #0x10
  418758:	b.ls	41879c <feof@plt+0x15dcc>  // b.plast
  41875c:	mov	w24, #0x54                  	// #84
  418760:	cmp	w24, #0x7
  418764:	b.ne	418824 <feof@plt+0x15e54>  // b.any
  418768:	ldp	x0, x8, [x19]
  41876c:	add	x24, x25, #0x100
  418770:	add	x1, x8, #0x100
  418774:	str	x1, [x19, #8]
  418778:	bl	450728 <_obstack_memory_used@@Base+0x190>
  41877c:	ldr	x8, [x19, #8]
  418780:	str	x0, [x19]
  418784:	add	x8, x0, x8
  418788:	sub	x8, x8, x25
  41878c:	sub	x8, x8, #0x100
  418790:	mov	x25, x24
  418794:	cbnz	x21, 41861c <feof@plt+0x15c4c>
  418798:	b	41880c <feof@plt+0x15e3c>
  41879c:	cbz	w12, 418630 <feof@plt+0x15c60>
  4187a0:	cmp	x25, #0x4
  4187a4:	b.cc	418638 <feof@plt+0x15c68>  // b.lo, b.ul, b.last
  4187a8:	sub	w14, w9, #0x10, lsl #12
  4187ac:	mov	w15, #0xd800                	// #55296
  4187b0:	add	w15, w15, w14, lsr #10
  4187b4:	strb	w15, [x8, x23]
  4187b8:	lsr	w15, w15, #8
  4187bc:	strb	w15, [x8, x22]
  4187c0:	ldr	x15, [sp, #8]
  4187c4:	mov	w9, #0xffffffdc            	// #-36
  4187c8:	mov	x12, #0xfffffffffffffffc    	// #-4
  4187cc:	mov	x13, x26
  4187d0:	bfxil	w9, w14, #8, #2
  4187d4:	strb	w14, [x8, x15]
  4187d8:	mov	w14, #0x4                   	// #4
  4187dc:	b	4187f4 <feof@plt+0x15e24>
  4187e0:	strb	w9, [x8, x23]
  4187e4:	lsr	w9, w9, #8
  4187e8:	mov	x12, #0xfffffffffffffffe    	// #-2
  4187ec:	mov	x13, x22
  4187f0:	mov	w14, #0x2                   	// #2
  4187f4:	strb	w9, [x8, x13]
  4187f8:	add	x8, x8, x14
  4187fc:	add	x25, x25, x12
  418800:	mov	x20, x11
  418804:	mov	x21, x10
  418808:	cbnz	x10, 418610 <feof@plt+0x15c40>
  41880c:	ldr	x8, [x19, #8]
  418810:	mov	w0, #0x1                   	// #1
  418814:	sub	x8, x8, x25
  418818:	str	x8, [x19, #16]
  41881c:	b	418834 <feof@plt+0x15e64>
  418820:	mov	w24, #0x16                  	// #22
  418824:	bl	4027c0 <__errno_location@plt>
  418828:	mov	x8, x0
  41882c:	mov	w0, wzr
  418830:	str	w24, [x8]
  418834:	ldp	x20, x19, [sp, #96]
  418838:	ldp	x22, x21, [sp, #80]
  41883c:	ldp	x24, x23, [sp, #64]
  418840:	ldp	x26, x25, [sp, #48]
  418844:	ldp	x28, x27, [sp, #32]
  418848:	ldp	x29, x30, [sp, #16]
  41884c:	add	sp, sp, #0x70
  418850:	ret
  418854:	mov	w24, #0x54                  	// #84
  418858:	b	418824 <feof@plt+0x15e54>
  41885c:	sub	sp, sp, #0x70
  418860:	stp	x29, x30, [sp, #16]
  418864:	stp	x28, x27, [sp, #32]
  418868:	stp	x26, x25, [sp, #48]
  41886c:	stp	x24, x23, [sp, #64]
  418870:	stp	x22, x21, [sp, #80]
  418874:	stp	x20, x19, [sp, #96]
  418878:	ldp	x10, x8, [x3, #8]
  41887c:	ldr	x9, [x3]
  418880:	cmp	x0, #0x0
  418884:	mov	w11, #0x3                   	// #3
  418888:	mov	w12, #0x1                   	// #1
  41888c:	adrp	x26, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418890:	adrp	x16, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418894:	mov	x19, x3
  418898:	mov	x20, x2
  41889c:	mov	x21, x1
  4188a0:	mov	w13, #0x7ffffffe            	// #2147483646
  4188a4:	mov	w14, #0xd800                	// #55296
  4188a8:	add	x15, sp, #0x8
  4188ac:	add	x26, x26, #0xdf6
  4188b0:	add	x16, x16, #0xdf0
  4188b4:	csel	x17, xzr, x11, ne  // ne = any
  4188b8:	cinc	x25, x12, eq  // eq = none
  4188bc:	cinc	x27, x12, ne  // ne = any
  4188c0:	csel	x24, x11, xzr, ne  // ne = any
  4188c4:	add	x0, x9, x8
  4188c8:	sub	x23, x10, x8
  4188cc:	mov	x18, #0xfffffffffffffffe    	// #-2
  4188d0:	add	x29, sp, #0x10
  4188d4:	mov	x22, x23
  4188d8:	cmp	x20, #0x4
  4188dc:	b.cs	4188ec <feof@plt+0x15f1c>  // b.hs, b.nlast
  4188e0:	mov	w23, #0x16                  	// #22
  4188e4:	cbz	x20, 418a58 <feof@plt+0x16088>
  4188e8:	b	4189a4 <feof@plt+0x15fd4>
  4188ec:	ldrb	w8, [x21, x17]
  4188f0:	ldrb	w11, [x21, x25]
  4188f4:	ldrb	w12, [x21, x27]
  4188f8:	ldrb	w9, [x21, x24]
  4188fc:	lsl	w10, w8, #24
  418900:	bfi	w10, w11, #16, #8
  418904:	bfi	w10, w12, #8, #8
  418908:	orr	w8, w10, w9
  41890c:	cmp	w8, w13
  418910:	mov	w23, #0x54                  	// #84
  418914:	b.hi	418a8c <feof@plt+0x160bc>  // b.pmore
  418918:	and	w10, w10, #0xfffff800
  41891c:	cmp	w10, w14
  418920:	b.eq	418a8c <feof@plt+0x160bc>  // b.none
  418924:	cmp	w8, #0x80
  418928:	b.cs	41893c <feof@plt+0x15f6c>  // b.hs, b.nlast
  41892c:	strb	w9, [sp, #13]
  418930:	mov	x28, #0xffffffffffffffff    	// #-1
  418934:	mov	w8, #0x1                   	// #1
  418938:	b	418994 <feof@plt+0x15fc4>
  41893c:	mov	x9, xzr
  418940:	add	x10, sp, #0x8
  418944:	b	418954 <feof@plt+0x15f84>
  418948:	add	x9, x9, #0x1
  41894c:	sub	x10, x10, #0x1
  418950:	mov	w8, w11
  418954:	mov	w11, #0x80                  	// #128
  418958:	bfxil	w11, w8, #0, #6
  41895c:	cmp	w8, #0xfbf
  418960:	strb	w11, [x10, #5]
  418964:	lsr	w11, w8, #6
  418968:	b.hi	418948 <feof@plt+0x15f78>  // b.pmore
  41896c:	add	x12, x26, x9
  418970:	ldrb	w12, [x12, #1]
  418974:	tst	w11, w12
  418978:	b.ne	418948 <feof@plt+0x15f78>  // b.any
  41897c:	add	x11, x16, x9
  418980:	ldrb	w11, [x11, #1]
  418984:	sub	x28, x18, x9
  418988:	orr	w8, w11, w8, lsr #6
  41898c:	strb	w8, [x10, #4]
  418990:	add	x8, x9, #0x2
  418994:	subs	x23, x22, x8
  418998:	b.cs	418a08 <feof@plt+0x16038>  // b.hs, b.nlast
  41899c:	mov	w23, #0x7                   	// #7
  4189a0:	cbz	x20, 418a58 <feof@plt+0x16088>
  4189a4:	cmp	w23, #0x7
  4189a8:	b.ne	418a8c <feof@plt+0x160bc>  // b.any
  4189ac:	ldp	x0, x8, [x19]
  4189b0:	add	x9, x22, #0x100
  4189b4:	str	x9, [sp]
  4189b8:	mov	x28, x16
  4189bc:	add	x1, x8, #0x100
  4189c0:	str	x1, [x19, #8]
  4189c4:	mov	x23, x17
  4189c8:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4189cc:	ldr	x8, [x19, #8]
  4189d0:	mov	x18, #0xfffffffffffffffe    	// #-2
  4189d4:	mov	x17, x23
  4189d8:	mov	x16, x28
  4189dc:	add	x8, x0, x8
  4189e0:	sub	x8, x8, x22
  4189e4:	ldr	x22, [sp]
  4189e8:	add	x15, sp, #0x8
  4189ec:	mov	w14, #0xd800                	// #55296
  4189f0:	mov	w13, #0x7ffffffe            	// #2147483646
  4189f4:	str	x0, [x19]
  4189f8:	sub	x0, x8, #0x100
  4189fc:	cmp	x20, #0x4
  418a00:	b.cs	4188ec <feof@plt+0x15f1c>  // b.hs, b.nlast
  418a04:	b	4188e0 <feof@plt+0x15f10>
  418a08:	tbz	x28, #63, 418a48 <feof@plt+0x16078>
  418a0c:	add	x8, x15, x28
  418a10:	add	x1, x8, #0x6
  418a14:	neg	x2, x28
  418a18:	mov	x22, x0
  418a1c:	str	x17, [sp]
  418a20:	bl	402390 <memcpy@plt>
  418a24:	ldr	x17, [sp]
  418a28:	mov	x0, x22
  418a2c:	adrp	x16, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418a30:	mov	x18, #0xfffffffffffffffe    	// #-2
  418a34:	add	x16, x16, #0xdf0
  418a38:	add	x15, sp, #0x8
  418a3c:	mov	w14, #0xd800                	// #55296
  418a40:	mov	w13, #0x7ffffffe            	// #2147483646
  418a44:	sub	x0, x22, x28
  418a48:	subs	x20, x20, #0x4
  418a4c:	add	x21, x21, #0x4
  418a50:	b.ne	4188d4 <feof@plt+0x15f04>  // b.any
  418a54:	b	418a5c <feof@plt+0x1608c>
  418a58:	mov	x23, x22
  418a5c:	ldr	x8, [x19, #8]
  418a60:	mov	w0, #0x1                   	// #1
  418a64:	sub	x8, x8, x23
  418a68:	str	x8, [x19, #16]
  418a6c:	ldp	x20, x19, [sp, #96]
  418a70:	ldp	x22, x21, [sp, #80]
  418a74:	ldp	x24, x23, [sp, #64]
  418a78:	ldp	x26, x25, [sp, #48]
  418a7c:	ldp	x28, x27, [sp, #32]
  418a80:	ldp	x29, x30, [sp, #16]
  418a84:	add	sp, sp, #0x70
  418a88:	ret
  418a8c:	bl	4027c0 <__errno_location@plt>
  418a90:	mov	x8, x0
  418a94:	mov	w0, wzr
  418a98:	str	w23, [x8]
  418a9c:	b	418a6c <feof@plt+0x1609c>
  418aa0:	sub	sp, sp, #0x80
  418aa4:	stp	x29, x30, [sp, #32]
  418aa8:	stp	x28, x27, [sp, #48]
  418aac:	stp	x26, x25, [sp, #64]
  418ab0:	stp	x24, x23, [sp, #80]
  418ab4:	stp	x22, x21, [sp, #96]
  418ab8:	stp	x20, x19, [sp, #112]
  418abc:	ldp	x10, x8, [x3, #8]
  418ac0:	ldr	x9, [x3]
  418ac4:	add	x29, sp, #0x20
  418ac8:	mov	x20, x2
  418acc:	cmp	x0, #0x0
  418ad0:	mov	w13, #0x2                   	// #2
  418ad4:	mov	w14, #0x2400                	// #9216
  418ad8:	adrp	x25, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418adc:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418ae0:	mov	x19, x3
  418ae4:	mov	x21, x1
  418ae8:	movk	w14, #0xfca0, lsl #16
  418aec:	sub	x15, x29, #0x8
  418af0:	mov	w16, #0x4                   	// #4
  418af4:	mov	x17, #0xfffffffffffffffc    	// #-4
  418af8:	mov	x18, #0xfffffffffffffffe    	// #-2
  418afc:	add	x25, x25, #0xdf6
  418b00:	cset	w26, ne  // ne = any
  418b04:	cset	w27, eq  // eq = none
  418b08:	cinc	x3, x13, eq  // eq = none
  418b0c:	cinc	x1, x13, ne  // ne = any
  418b10:	add	x0, x9, x8
  418b14:	sub	x28, x10, x8
  418b18:	add	x2, x2, #0xdf0
  418b1c:	mov	x24, x28
  418b20:	cmp	x20, #0x2
  418b24:	b.cc	418c00 <feof@plt+0x16230>  // b.lo, b.ul, b.last
  418b28:	ldrb	w9, [x21, x27]
  418b2c:	ldrb	w22, [x21, x26]
  418b30:	and	w8, w9, #0xfc
  418b34:	cmp	w8, #0xd8
  418b38:	bfi	w22, w9, #8, #8
  418b3c:	b.eq	418b60 <feof@plt+0x16190>  // b.none
  418b40:	cmp	w8, #0xdc
  418b44:	b.eq	418d18 <feof@plt+0x16348>  // b.none
  418b48:	cmp	w22, #0x80
  418b4c:	b.cs	418b90 <feof@plt+0x161c0>  // b.hs, b.nlast
  418b50:	sturb	w22, [x29, #-3]
  418b54:	mov	x23, #0xffffffffffffffff    	// #-1
  418b58:	mov	w8, #0x1                   	// #1
  418b5c:	b	418bec <feof@plt+0x1621c>
  418b60:	cmp	x20, #0x4
  418b64:	b.cc	418d20 <feof@plt+0x16350>  // b.lo, b.ul, b.last
  418b68:	ldrb	w8, [x21, x3]
  418b6c:	and	w9, w8, #0xfc
  418b70:	cmp	w9, #0xdc
  418b74:	b.ne	418d18 <feof@plt+0x16348>  // b.any
  418b78:	ldrb	w9, [x21, x1]
  418b7c:	bfi	w9, w8, #8, #8
  418b80:	add	w8, w9, w22, lsl #10
  418b84:	add	w22, w8, w14
  418b88:	cmp	w22, #0x80
  418b8c:	b.cc	418b50 <feof@plt+0x16180>  // b.lo, b.ul, b.last
  418b90:	mov	x8, xzr
  418b94:	sub	x9, x29, #0x8
  418b98:	mov	w10, w22
  418b9c:	b	418bac <feof@plt+0x161dc>
  418ba0:	add	x8, x8, #0x1
  418ba4:	sub	x9, x9, #0x1
  418ba8:	mov	w10, w11
  418bac:	mov	w11, #0x80                  	// #128
  418bb0:	bfxil	w11, w10, #0, #6
  418bb4:	cmp	w10, #0xfbf
  418bb8:	strb	w11, [x9, #5]
  418bbc:	lsr	w11, w10, #6
  418bc0:	b.hi	418ba0 <feof@plt+0x161d0>  // b.pmore
  418bc4:	add	x12, x25, x8
  418bc8:	ldrb	w12, [x12, #1]
  418bcc:	tst	w11, w12
  418bd0:	b.ne	418ba0 <feof@plt+0x161d0>  // b.any
  418bd4:	add	x11, x2, x8
  418bd8:	ldrb	w11, [x11, #1]
  418bdc:	sub	x23, x18, x8
  418be0:	add	x8, x8, #0x2
  418be4:	orr	w10, w11, w10, lsr #6
  418be8:	strb	w10, [x9, #4]
  418bec:	subs	x28, x24, x8
  418bf0:	b.cs	418c7c <feof@plt+0x162ac>  // b.hs, b.nlast
  418bf4:	mov	w22, #0x7                   	// #7
  418bf8:	cbz	x20, 418ce4 <feof@plt+0x16314>
  418bfc:	b	418c08 <feof@plt+0x16238>
  418c00:	mov	w22, #0x16                  	// #22
  418c04:	cbz	x20, 418ce4 <feof@plt+0x16314>
  418c08:	cmp	w22, #0x7
  418c0c:	b.ne	418d24 <feof@plt+0x16354>  // b.any
  418c10:	ldp	x0, x8, [x19]
  418c14:	mov	x28, x1
  418c18:	mov	x23, x3
  418c1c:	add	x22, x24, #0x100
  418c20:	add	x1, x8, #0x100
  418c24:	str	x1, [x19, #8]
  418c28:	bl	450728 <_obstack_memory_used@@Base+0x190>
  418c2c:	ldr	x8, [x19, #8]
  418c30:	mov	w14, #0x2400                	// #9216
  418c34:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418c38:	str	x0, [x19]
  418c3c:	add	x8, x0, x8
  418c40:	sub	x8, x8, x24
  418c44:	sub	x0, x8, #0x100
  418c48:	mov	x24, x22
  418c4c:	mov	w13, #0x2                   	// #2
  418c50:	movk	w14, #0xfca0, lsl #16
  418c54:	sub	x15, x29, #0x8
  418c58:	mov	w16, #0x4                   	// #4
  418c5c:	mov	x17, #0xfffffffffffffffc    	// #-4
  418c60:	mov	x18, #0xfffffffffffffffe    	// #-2
  418c64:	mov	x3, x23
  418c68:	mov	x1, x28
  418c6c:	add	x2, x2, #0xdf0
  418c70:	cmp	x20, #0x2
  418c74:	b.cs	418b28 <feof@plt+0x16158>  // b.hs, b.nlast
  418c78:	b	418c00 <feof@plt+0x16230>
  418c7c:	tbz	x23, #63, 418cc8 <feof@plt+0x162f8>
  418c80:	add	x8, x15, x23
  418c84:	stp	x3, x1, [sp, #8]
  418c88:	add	x1, x8, #0x6
  418c8c:	neg	x2, x23
  418c90:	mov	x24, x0
  418c94:	bl	402390 <memcpy@plt>
  418c98:	ldp	x3, x1, [sp, #8]
  418c9c:	mov	x0, x24
  418ca0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  418ca4:	mov	w14, #0x2400                	// #9216
  418ca8:	add	x2, x2, #0xdf0
  418cac:	mov	x18, #0xfffffffffffffffe    	// #-2
  418cb0:	mov	x17, #0xfffffffffffffffc    	// #-4
  418cb4:	mov	w16, #0x4                   	// #4
  418cb8:	sub	x15, x29, #0x8
  418cbc:	movk	w14, #0xfca0, lsl #16
  418cc0:	mov	w13, #0x2                   	// #2
  418cc4:	sub	x0, x24, x23
  418cc8:	cmp	w22, #0x10, lsl #12
  418ccc:	csel	x8, x13, x16, cc  // cc = lo, ul, last
  418cd0:	csel	x9, x18, x17, cc  // cc = lo, ul, last
  418cd4:	adds	x20, x9, x20
  418cd8:	add	x21, x21, x8
  418cdc:	b.ne	418b1c <feof@plt+0x1614c>  // b.any
  418ce0:	b	418ce8 <feof@plt+0x16318>
  418ce4:	mov	x28, x24
  418ce8:	ldr	x8, [x19, #8]
  418cec:	mov	w0, #0x1                   	// #1
  418cf0:	sub	x8, x8, x28
  418cf4:	str	x8, [x19, #16]
  418cf8:	ldp	x20, x19, [sp, #112]
  418cfc:	ldp	x22, x21, [sp, #96]
  418d00:	ldp	x24, x23, [sp, #80]
  418d04:	ldp	x26, x25, [sp, #64]
  418d08:	ldp	x28, x27, [sp, #48]
  418d0c:	ldp	x29, x30, [sp, #32]
  418d10:	add	sp, sp, #0x80
  418d14:	ret
  418d18:	mov	w22, #0x54                  	// #84
  418d1c:	b	418d24 <feof@plt+0x16354>
  418d20:	mov	w22, #0x16                  	// #22
  418d24:	bl	4027c0 <__errno_location@plt>
  418d28:	mov	x8, x0
  418d2c:	mov	w0, wzr
  418d30:	str	w22, [x8]
  418d34:	b	418cf8 <feof@plt+0x16328>
  418d38:	mov	w3, w1
  418d3c:	cmp	w1, #0x652
  418d40:	mov	x8, x0
  418d44:	b.gt	418da4 <feof@plt+0x163d4>
  418d48:	sub	w9, w3, #0x300
  418d4c:	cmp	w9, #0x45
  418d50:	b.hi	41961c <feof@plt+0x16c4c>  // b.pmore
  418d54:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x1a68>
  418d58:	add	x10, x10, #0xc82
  418d5c:	adr	x11, 418d70 <feof@plt+0x163a0>
  418d60:	ldrh	w12, [x10, x9, lsl #1]
  418d64:	add	x11, x11, x12, lsl #2
  418d68:	mov	w0, #0x1                   	// #1
  418d6c:	br	x11
  418d70:	mov	w8, #0x1eff                	// #7935
  418d74:	cmp	w2, w8
  418d78:	mov	w0, wzr
  418d7c:	b.gt	419734 <feof@plt+0x16d64>
  418d80:	sub	w8, w2, #0x41
  418d84:	cmp	w8, #0x10c
  418d88:	b.hi	41994c <feof@plt+0x16f7c>  // b.pmore
  418d8c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  418d90:	add	x9, x9, #0xde0
  418d94:	adr	x10, 4192a8 <feof@plt+0x168d8>
  418d98:	ldrh	w11, [x9, x8, lsl #1]
  418d9c:	add	x10, x10, x11, lsl #2
  418da0:	br	x10
  418da4:	cmp	w3, #0xcd4
  418da8:	b.gt	418dec <feof@plt+0x1641c>
  418dac:	cmp	w3, #0xb3d
  418db0:	b.le	418e5c <feof@plt+0x1648c>
  418db4:	cmp	w3, #0xbbd
  418db8:	b.le	418ec0 <feof@plt+0x164f0>
  418dbc:	cmp	w3, #0xc55
  418dc0:	b.gt	418f64 <feof@plt+0x16594>
  418dc4:	cmp	w3, #0xbbe
  418dc8:	b.eq	419510 <feof@plt+0x16b40>  // b.none
  418dcc:	cmp	w3, #0xbd7
  418dd0:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418dd4:	cmp	w2, #0xb92
  418dd8:	mov	w0, wzr
  418ddc:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  418de0:	cmp	w2, #0xbc6
  418de4:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  418de8:	b	419b28 <feof@plt+0x17158>
  418dec:	cmp	w3, #0xdde
  418df0:	b.le	418e90 <feof@plt+0x164c0>
  418df4:	mov	w9, #0x3098                	// #12440
  418df8:	cmp	w3, w9
  418dfc:	b.le	418ee4 <feof@plt+0x16514>
  418e00:	mov	w9, #0x10b9                	// #4281
  418e04:	movk	w9, #0x1, lsl #16
  418e08:	cmp	w3, w9
  418e0c:	b.gt	418f80 <feof@plt+0x165b0>
  418e10:	mov	w9, #0x3099                	// #12441
  418e14:	cmp	w3, w9
  418e18:	b.eq	419520 <feof@plt+0x16b50>  // b.none
  418e1c:	mov	w9, #0x309a                	// #12442
  418e20:	cmp	w3, w9
  418e24:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418e28:	mov	w8, #0xffffcf91            	// #-12399
  418e2c:	add	w8, w2, w8
  418e30:	cmp	w8, #0xc
  418e34:	mov	w0, wzr
  418e38:	b.ls	419680 <feof@plt+0x16cb0>  // b.plast
  418e3c:	mov	w8, #0xffffcf31            	// #-12495
  418e40:	add	w8, w2, w8
  418e44:	cmp	w8, #0xc
  418e48:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  418e4c:	mov	w9, #0x1                   	// #1
  418e50:	lsl	w8, w9, w8
  418e54:	mov	w9, #0x1249                	// #4681
  418e58:	b	41998c <feof@plt+0x16fbc>
  418e5c:	cmp	w3, #0x93b
  418e60:	b.gt	418f20 <feof@plt+0x16550>
  418e64:	cmp	w3, #0x653
  418e68:	b.eq	41954c <feof@plt+0x16b7c>  // b.none
  418e6c:	cmp	w3, #0x654
  418e70:	b.eq	419558 <feof@plt+0x16b88>  // b.none
  418e74:	cmp	w3, #0x655
  418e78:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418e7c:	sub	w8, w2, #0x622
  418e80:	cmp	w8, #0x6
  418e84:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  418e88:	mov	w9, #0x1c                  	// #28
  418e8c:	b	419610 <feof@plt+0x16c40>
  418e90:	cmp	w3, #0xd56
  418e94:	b.gt	418f44 <feof@plt+0x16574>
  418e98:	cmp	w3, #0xcd5
  418e9c:	b.eq	419588 <feof@plt+0x16bb8>  // b.none
  418ea0:	cmp	w3, #0xcd6
  418ea4:	b.eq	418f74 <feof@plt+0x165a4>  // b.none
  418ea8:	cmp	w3, #0xd3e
  418eac:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418eb0:	and	w8, w2, #0xfffffffe
  418eb4:	cmp	w8, #0xd46
  418eb8:	cset	w0, ne  // ne = any
  418ebc:	ret
  418ec0:	cmp	w3, #0xb3e
  418ec4:	b.eq	418ed8 <feof@plt+0x16508>  // b.none
  418ec8:	cmp	w3, #0xb56
  418ecc:	b.eq	418ed8 <feof@plt+0x16508>  // b.none
  418ed0:	cmp	w3, #0xb57
  418ed4:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418ed8:	cmp	w2, #0xb47
  418edc:	cset	w0, ne  // ne = any
  418ee0:	ret
  418ee4:	cmp	w3, #0xddf
  418ee8:	b.eq	418f5c <feof@plt+0x1658c>  // b.none
  418eec:	mov	w9, #0x102e                	// #4142
  418ef0:	cmp	w3, w9
  418ef4:	b.eq	41959c <feof@plt+0x16bcc>  // b.none
  418ef8:	mov	w9, #0x1b35                	// #6965
  418efc:	cmp	w3, w9
  418f00:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418f04:	mov	w8, #0xffffe4fb            	// #-6917
  418f08:	add	w8, w2, w8
  418f0c:	cmp	w8, #0x3e
  418f10:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  418f14:	mov	x9, #0xffffffffffffeeaa    	// #-4438
  418f18:	movk	x9, #0x195f, lsl #48
  418f1c:	b	419230 <feof@plt+0x16860>
  418f20:	cmp	w3, #0x93c
  418f24:	b.eq	4195ac <feof@plt+0x16bdc>  // b.none
  418f28:	cmp	w3, #0x9be
  418f2c:	b.eq	418f38 <feof@plt+0x16568>  // b.none
  418f30:	cmp	w3, #0x9d7
  418f34:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418f38:	cmp	w2, #0x9c7
  418f3c:	cset	w0, ne  // ne = any
  418f40:	ret
  418f44:	cmp	w3, #0xd57
  418f48:	b.eq	4195c4 <feof@plt+0x16bf4>  // b.none
  418f4c:	cmp	w3, #0xdca
  418f50:	b.eq	4195d0 <feof@plt+0x16c00>  // b.none
  418f54:	cmp	w3, #0xdcf
  418f58:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418f5c:	sub	w8, w2, #0xdd9
  418f60:	b	418fac <feof@plt+0x165dc>
  418f64:	cmp	w3, #0xc56
  418f68:	b.eq	4195e8 <feof@plt+0x16c18>  // b.none
  418f6c:	cmp	w3, #0xcc2
  418f70:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418f74:	cmp	w2, #0xcc6
  418f78:	cset	w0, ne  // ne = any
  418f7c:	ret
  418f80:	mov	w9, #0x10ba                	// #4282
  418f84:	movk	w9, #0x1, lsl #16
  418f88:	cmp	w3, w9
  418f8c:	b.eq	4195f4 <feof@plt+0x16c24>  // b.none
  418f90:	mov	w9, #0x1127                	// #4391
  418f94:	movk	w9, #0x1, lsl #16
  418f98:	cmp	w3, w9
  418f9c:	b.ne	41961c <feof@plt+0x16c4c>  // b.any
  418fa0:	mov	w8, #0xeecf                	// #61135
  418fa4:	movk	w8, #0xfffe, lsl #16
  418fa8:	add	w8, w2, w8
  418fac:	cmp	w8, #0x1
  418fb0:	cset	w0, hi  // hi = pmore
  418fb4:	ret
  418fb8:	sub	w8, w2, #0x41
  418fbc:	cmp	w8, #0x16f
  418fc0:	mov	w0, wzr
  418fc4:	b.ls	4196b4 <feof@plt+0x16ce4>  // b.plast
  418fc8:	mov	w8, #0xffffe100            	// #-7936
  418fcc:	add	w8, w2, w8
  418fd0:	cmp	w8, #0xfe
  418fd4:	b.hi	419a18 <feof@plt+0x17048>  // b.pmore
  418fd8:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  418fdc:	add	x9, x9, #0xbe2
  418fe0:	adr	x10, 4192a8 <feof@plt+0x168d8>
  418fe4:	ldrh	w11, [x9, x8, lsl #1]
  418fe8:	add	x10, x10, x11, lsl #2
  418fec:	br	x10
  418ff0:	sub	w8, w2, #0x41
  418ff4:	cmp	w8, #0x39
  418ff8:	mov	w0, wzr
  418ffc:	b.hi	419020 <feof@plt+0x16650>  // b.pmore
  419000:	mov	w9, #0x1                   	// #1
  419004:	lsl	x8, x9, x8
  419008:	mov	x9, #0x43d5                	// #17365
  41900c:	movk	x9, #0x354, lsl #16
  419010:	movk	x9, #0x43d5, lsl #32
  419014:	movk	x9, #0x354, lsl #48
  419018:	tst	x8, x9
  41901c:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419020:	mov	w8, #0xffffe160            	// #-7840
  419024:	add	w8, w2, w8
  419028:	cmp	w8, #0x2d
  41902c:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419030:	mov	w9, #0x1                   	// #1
  419034:	lsl	x8, x9, x8
  419038:	mov	x9, #0x3                   	// #3
  41903c:	movk	x9, #0x300, lsl #16
  419040:	movk	x9, #0x3000, lsl #32
  419044:	b	4192a0 <feof@plt+0x168d0>
  419048:	sub	w8, w2, #0x41
  41904c:	cmp	w8, #0xc2
  419050:	mov	w0, wzr
  419054:	b.hi	419970 <feof@plt+0x16fa0>  // b.pmore
  419058:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  41905c:	add	x9, x9, #0x628
  419060:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419064:	ldrh	w11, [x9, x8, lsl #1]
  419068:	add	x10, x10, x11, lsl #2
  41906c:	br	x10
  419070:	cmp	w2, #0x390
  419074:	mov	w0, wzr
  419078:	b.gt	4196cc <feof@plt+0x16cfc>
  41907c:	sub	w8, w2, #0x41
  419080:	cmp	w8, #0xbb
  419084:	b.hi	419aa0 <feof@plt+0x170d0>  // b.pmore
  419088:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  41908c:	add	x9, x9, #0x4b0
  419090:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419094:	ldrh	w11, [x9, x8, lsl #1]
  419098:	add	x10, x10, x11, lsl #2
  41909c:	br	x10
  4190a0:	cmp	w2, #0x40f
  4190a4:	mov	w0, wzr
  4190a8:	b.le	4197c4 <feof@plt+0x16df4>
  4190ac:	mov	w8, #0x1e9f                	// #7839
  4190b0:	cmp	w2, w8
  4190b4:	b.gt	4199ec <feof@plt+0x1701c>
  4190b8:	sub	w8, w2, #0x410
  4190bc:	cmp	w8, #0x33
  4190c0:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  4190c4:	mov	w9, #0x1                   	// #1
  4190c8:	lsl	x8, x9, x8
  4190cc:	mov	x9, #0x8000800080008       	// #2251834173947912
  4190d0:	movk	x9, #0x161
  4190d4:	movk	x9, #0x161, lsl #32
  4190d8:	b	4192a0 <feof@plt+0x168d0>
  4190dc:	sub	w8, w2, #0x41
  4190e0:	cmp	w8, #0x13e
  4190e4:	mov	w0, wzr
  4190e8:	b.hi	419b10 <feof@plt+0x17140>  // b.pmore
  4190ec:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  4190f0:	add	x9, x9, #0x232
  4190f4:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4190f8:	ldrh	w11, [x9, x8, lsl #1]
  4190fc:	add	x10, x10, x11, lsl #2
  419100:	br	x10
  419104:	cmp	w2, #0x398
  419108:	mov	w0, wzr
  41910c:	b.le	4197a0 <feof@plt+0x16dd0>
  419110:	sub	w8, w2, #0x399
  419114:	cmp	w8, #0xbd
  419118:	b.hi	419ac8 <feof@plt+0x170f8>  // b.pmore
  41911c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  419120:	add	x9, x9, #0xb6
  419124:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419128:	ldrh	w11, [x9, x8, lsl #1]
  41912c:	add	x10, x10, x11, lsl #2
  419130:	br	x10
  419134:	sub	w8, w2, #0x41
  419138:	cmp	w8, #0xc2
  41913c:	mov	w0, wzr
  419140:	b.hi	419970 <feof@plt+0x16fa0>  // b.pmore
  419144:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  419148:	add	x9, x9, #0xdc6
  41914c:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419150:	ldrh	w11, [x9, x8, lsl #1]
  419154:	add	x10, x10, x11, lsl #2
  419158:	br	x10
  41915c:	sub	w8, w2, #0x41
  419160:	cmp	w8, #0x39
  419164:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  419168:	mov	x9, #0xfffefffefffefffe    	// #-281479271743490
  41916c:	movk	x9, #0xffef, lsl #16
  419170:	movk	x9, #0xaf, lsl #48
  419174:	b	419230 <feof@plt+0x16860>
  419178:	sub	w8, w2, #0x4f
  41917c:	cmp	w8, #0x26
  419180:	mov	w0, wzr
  419184:	b.hi	4191a0 <feof@plt+0x167d0>  // b.pmore
  419188:	mov	w9, #0x1                   	// #1
  41918c:	lsl	x8, x9, x8
  419190:	mov	x9, #0x41                  	// #65
  419194:	movk	x9, #0x41, lsl #32
  419198:	tst	x8, x9
  41919c:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  4191a0:	cmp	w2, #0x423
  4191a4:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  4191a8:	cmp	w2, #0x443
  4191ac:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  4191b0:	b	419b28 <feof@plt+0x17158>
  4191b4:	sub	w8, w2, #0x41
  4191b8:	cmp	w8, #0xbb
  4191bc:	mov	w0, wzr
  4191c0:	b.hi	419ae8 <feof@plt+0x17118>  // b.pmore
  4191c4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  4191c8:	add	x9, x9, #0xc4e
  4191cc:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4191d0:	ldrh	w11, [x9, x8, lsl #1]
  4191d4:	add	x10, x10, x11, lsl #2
  4191d8:	br	x10
  4191dc:	sub	w8, w2, #0x41
  4191e0:	cmp	w8, #0x34
  4191e4:	mov	w0, wzr
  4191e8:	b.hi	41920c <feof@plt+0x1683c>  // b.pmore
  4191ec:	mov	w9, #0x1                   	// #1
  4191f0:	lsl	x8, x9, x8
  4191f4:	mov	x9, #0x4111                	// #16657
  4191f8:	movk	x9, #0x12, lsl #16
  4191fc:	movk	x9, #0x4111, lsl #32
  419200:	movk	x9, #0x12, lsl #48
  419204:	tst	x8, x9
  419208:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  41920c:	sub	w8, w2, #0x474
  419210:	b	419b20 <feof@plt+0x17150>
  419214:	sub	w8, w2, #0x41
  419218:	cmp	w8, #0x35
  41921c:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  419220:	mov	x9, #0xbeee                	// #48878
  419224:	movk	x9, #0xffed, lsl #16
  419228:	movk	x9, #0xbeee, lsl #32
  41922c:	movk	x9, #0xd, lsl #48
  419230:	lsr	x8, x9, x8
  419234:	and	w0, w8, #0x1
  419238:	ret
  41923c:	mov	w8, #0x1fb2                	// #8114
  419240:	cmp	w2, w8
  419244:	mov	w0, wzr
  419248:	b.gt	419644 <feof@plt+0x16c74>
  41924c:	sub	w8, w2, #0x391
  419250:	cmp	w8, #0x38
  419254:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419258:	mov	w9, #0x1                   	// #1
  41925c:	lsl	x8, x9, x8
  419260:	mov	x9, #0x4151                	// #16721
  419264:	movk	x9, #0x100, lsl #16
  419268:	b	419298 <feof@plt+0x168c8>
  41926c:	mov	w8, #0x1fb2                	// #8114
  419270:	cmp	w2, w8
  419274:	mov	w0, wzr
  419278:	b.gt	419644 <feof@plt+0x16c74>
  41927c:	sub	w8, w2, #0x391
  419280:	cmp	w8, #0x38
  419284:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419288:	mov	w9, #0x1                   	// #1
  41928c:	lsl	x8, x9, x8
  419290:	mov	x9, #0x4151                	// #16721
  419294:	movk	x9, #0x111, lsl #16
  419298:	movk	x9, #0x4151, lsl #32
  41929c:	movk	x9, #0x111, lsl #48
  4192a0:	tst	x8, x9
  4192a4:	b.eq	419b28 <feof@plt+0x17158>  // b.none
  4192a8:	ret
  4192ac:	sub	w8, w2, #0x4f
  4192b0:	cmp	w8, #0x1e2
  4192b4:	mov	w0, wzr
  4192b8:	b.hi	419888 <feof@plt+0x16eb8>  // b.pmore
  4192bc:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  4192c0:	add	x9, x9, #0x750
  4192c4:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4192c8:	ldrh	w11, [x9, x8, lsl #1]
  4192cc:	add	x10, x10, x11, lsl #2
  4192d0:	br	x10
  4192d4:	sub	w8, w2, #0x41
  4192d8:	cmp	w8, #0x1f2
  4192dc:	mov	w0, wzr
  4192e0:	b.hi	419860 <feof@plt+0x16e90>  // b.pmore
  4192e4:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  4192e8:	add	x9, x9, #0x17a
  4192ec:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4192f0:	ldrh	w11, [x9, x8, lsl #1]
  4192f4:	add	x10, x10, x11, lsl #2
  4192f8:	br	x10
  4192fc:	mov	w8, #0x1e77                	// #7799
  419300:	cmp	w2, w8
  419304:	mov	w0, wzr
  419308:	b.gt	419a3c <feof@plt+0x1706c>
  41930c:	sub	w8, w2, #0xd9
  419310:	cmp	w8, #0x13e
  419314:	b.hi	419afc <feof@plt+0x1712c>  // b.pmore
  419318:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  41931c:	add	x9, x9, #0xefc
  419320:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419324:	ldrh	w11, [x9, x8, lsl #1]
  419328:	add	x10, x10, x11, lsl #2
  41932c:	br	x10
  419330:	mov	w8, #0x1ea1                	// #7841
  419334:	cmp	w2, w8
  419338:	mov	w0, wzr
  41933c:	b.gt	41983c <feof@plt+0x16e6c>
  419340:	sub	w8, w2, #0x61
  419344:	cmp	w8, #0xa2
  419348:	b.hi	4198b0 <feof@plt+0x16ee0>  // b.pmore
  41934c:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  419350:	add	x9, x9, #0xd00
  419354:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419358:	ldrh	w11, [x9, x8, lsl #1]
  41935c:	add	x10, x10, x11, lsl #2
  419360:	br	x10
  419364:	mov	w8, #0xffffe1a0            	// #-7776
  419368:	add	w8, w2, w8
  41936c:	cmp	w8, #0x37
  419370:	mov	w0, wzr
  419374:	b.ls	419784 <feof@plt+0x16db4>  // b.plast
  419378:	sub	w8, w2, #0x15a
  41937c:	cmp	w8, #0xb
  419380:	b.hi	419398 <feof@plt+0x169c8>  // b.pmore
  419384:	mov	w9, #0x1                   	// #1
  419388:	lsl	w8, w9, w8
  41938c:	mov	w9, #0xccf                 	// #3279
  419390:	tst	w8, w9
  419394:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419398:	sub	w8, w2, #0x53
  41939c:	cmp	w8, #0x21
  4193a0:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  4193a4:	mov	w9, #0x1                   	// #1
  4193a8:	lsl	x8, x9, x8
  4193ac:	tst	x8, #0x300000003
  4193b0:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  4193b4:	b	419b28 <feof@plt+0x17158>
  4193b8:	sub	w8, w2, #0x43
  4193bc:	cmp	w8, #0x1dc
  4193c0:	mov	w0, wzr
  4193c4:	b.hi	41970c <feof@plt+0x16d3c>  // b.pmore
  4193c8:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  4193cc:	add	x9, x9, #0x7ca
  4193d0:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4193d4:	ldrh	w11, [x9, x8, lsl #1]
  4193d8:	add	x10, x10, x11, lsl #2
  4193dc:	br	x10
  4193e0:	sub	w8, w2, #0x41
  4193e4:	cmp	w8, #0x1f0
  4193e8:	mov	w0, wzr
  4193ec:	b.hi	41975c <feof@plt+0x16d8c>  // b.pmore
  4193f0:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  4193f4:	add	x9, x9, #0x204
  4193f8:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4193fc:	ldrh	w11, [x9, x8, lsl #1]
  419400:	add	x10, x10, x11, lsl #2
  419404:	br	x10
  419408:	sub	w8, w2, #0x44
  41940c:	cmp	w8, #0x1d3
  419410:	mov	w0, wzr
  419414:	b.hi	4198d4 <feof@plt+0x16f04>  // b.pmore
  419418:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x2a68>
  41941c:	add	x9, x9, #0xca0
  419420:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419424:	ldrh	w11, [x9, x8, lsl #1]
  419428:	add	x10, x10, x11, lsl #2
  41942c:	br	x10
  419430:	cmp	w2, #0x21d
  419434:	mov	w0, wzr
  419438:	b.le	41981c <feof@plt+0x16e4c>
  41943c:	mov	w8, #0xffffe1de            	// #-7714
  419440:	add	w8, w2, w8
  419444:	cmp	w8, #0x5
  419448:	b.hi	419460 <feof@plt+0x16a90>  // b.pmore
  41944c:	mov	w9, #0x1                   	// #1
  419450:	lsl	w8, w9, w8
  419454:	mov	w9, #0x33                  	// #51
  419458:	tst	w8, w9
  41945c:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419460:	sub	w8, w2, #0x21e
  419464:	b	419b20 <feof@plt+0x17150>
  419468:	sub	w8, w2, #0x45
  41946c:	cmp	w8, #0x1d2
  419470:	mov	w0, wzr
  419474:	b.hi	419924 <feof@plt+0x16f54>  // b.pmore
  419478:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x2a68>
  41947c:	add	x9, x9, #0x752
  419480:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419484:	ldrh	w11, [x9, x8, lsl #1]
  419488:	add	x10, x10, x11, lsl #2
  41948c:	br	x10
  419490:	sub	w8, w2, #0x42
  419494:	cmp	w8, #0x1dd
  419498:	mov	w0, wzr
  41949c:	b.hi	4198fc <feof@plt+0x16f2c>  // b.pmore
  4194a0:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x2a68>
  4194a4:	add	x9, x9, #0x26a
  4194a8:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4194ac:	ldrh	w11, [x9, x8, lsl #1]
  4194b0:	add	x10, x10, x11, lsl #2
  4194b4:	br	x10
  4194b8:	mov	w8, #0xffffe100            	// #-7936
  4194bc:	add	w8, w2, w8
  4194c0:	cmp	w8, #0xfe
  4194c4:	mov	w0, wzr
  4194c8:	b.hi	419998 <feof@plt+0x16fc8>  // b.pmore
  4194cc:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x2a68>
  4194d0:	add	x9, x9, #0x6c
  4194d4:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4194d8:	ldrh	w11, [x9, x8, lsl #1]
  4194dc:	add	x10, x10, x11, lsl #2
  4194e0:	br	x10
  4194e4:	mov	w8, #0xffffe100            	// #-7936
  4194e8:	add	w8, w2, w8
  4194ec:	cmp	w8, #0xf6
  4194f0:	mov	w0, wzr
  4194f4:	b.hi	419a58 <feof@plt+0x17088>  // b.pmore
  4194f8:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x1a68>
  4194fc:	add	x9, x9, #0xe7e
  419500:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419504:	ldrh	w11, [x9, x8, lsl #1]
  419508:	add	x10, x10, x11, lsl #2
  41950c:	br	x10
  419510:	and	w8, w2, #0xfffffffe
  419514:	cmp	w8, #0xbc6
  419518:	cset	w0, ne  // ne = any
  41951c:	ret
  419520:	mov	w8, #0xffffcfba            	// #-12358
  419524:	add	w8, w2, w8
  419528:	cmp	w8, #0xb7
  41952c:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419530:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x1a68>
  419534:	add	x9, x9, #0xd0e
  419538:	adr	x10, 4192a8 <feof@plt+0x168d8>
  41953c:	ldrh	w11, [x9, x8, lsl #1]
  419540:	add	x10, x10, x11, lsl #2
  419544:	mov	w0, wzr
  419548:	br	x10
  41954c:	cmp	w2, #0x627
  419550:	cset	w0, ne  // ne = any
  419554:	ret
  419558:	sub	w8, w2, #0x627
  41955c:	cmp	w8, #0x23
  419560:	mov	w0, wzr
  419564:	b.ls	419698 <feof@plt+0x16cc8>  // b.plast
  419568:	sub	w8, w2, #0x6c1
  41956c:	cmp	w8, #0x14
  419570:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419574:	mov	w9, #0x1                   	// #1
  419578:	lsl	w8, w9, w8
  41957c:	mov	w9, #0x1                   	// #1
  419580:	movk	w9, #0x12, lsl #16
  419584:	b	41998c <feof@plt+0x16fbc>
  419588:	sub	w8, w2, #0xcbf
  41958c:	cmp	w8, #0xc
  419590:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  419594:	mov	w9, #0x77e                 	// #1918
  419598:	b	419610 <feof@plt+0x16c40>
  41959c:	mov	w8, #0x1025                	// #4133
  4195a0:	cmp	w2, w8
  4195a4:	cset	w0, ne  // ne = any
  4195a8:	ret
  4195ac:	sub	w8, w2, #0x915
  4195b0:	cmp	w8, #0x1f
  4195b4:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  4195b8:	mov	w9, #0xcf78                	// #53112
  4195bc:	movk	w9, #0x33b7, lsl #16
  4195c0:	b	419610 <feof@plt+0x16c40>
  4195c4:	cmp	w2, #0xd46
  4195c8:	cset	w0, ne  // ne = any
  4195cc:	ret
  4195d0:	cmp	w2, #0xdd9
  4195d4:	mov	w0, wzr
  4195d8:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  4195dc:	cmp	w2, #0xddc
  4195e0:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  4195e4:	b	419b28 <feof@plt+0x17158>
  4195e8:	cmp	w2, #0xc46
  4195ec:	cset	w0, ne  // ne = any
  4195f0:	ret
  4195f4:	mov	w8, #0xeecf                	// #61135
  4195f8:	movk	w8, #0xfffe, lsl #16
  4195fc:	add	w8, w2, w8
  419600:	add	w8, w8, #0x98
  419604:	cmp	w8, #0xd
  419608:	b.cs	419b28 <feof@plt+0x17158>  // b.hs, b.nlast
  41960c:	mov	w9, #0xffa                 	// #4090
  419610:	lsr	w8, w9, w8
  419614:	and	w0, w8, #0x1
  419618:	ret
  41961c:	stp	x29, x30, [sp, #-16]!
  419620:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419624:	add	x2, x2, #0x1c6
  419628:	mov	w1, #0x4                   	// #4
  41962c:	mov	x0, x8
  419630:	mov	x29, sp
  419634:	bl	41de04 <feof@plt+0x1b434>
  419638:	mov	w0, #0x1                   	// #1
  41963c:	ldp	x29, x30, [sp], #16
  419640:	ret
  419644:	mov	w8, #0xffffe04d            	// #-8115
  419648:	add	w8, w2, w8
  41964c:	cmp	w8, #0x19
  419650:	b.hi	41966c <feof@plt+0x16c9c>  // b.pmore
  419654:	mov	w9, #0x1                   	// #1
  419658:	lsl	w8, w9, w8
  41965c:	mov	w9, #0x201                 	// #513
  419660:	movk	w9, #0x201, lsl #16
  419664:	tst	w8, w9
  419668:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  41966c:	mov	w8, #0x1ff3                	// #8179
  419670:	cmp	w2, w8
  419674:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419678:	mov	w8, #0x1ffc                	// #8188
  41967c:	b	419a0c <feof@plt+0x1703c>
  419680:	mov	w9, #0x1                   	// #1
  419684:	lsl	w8, w9, w8
  419688:	mov	w9, #0x1249                	// #4681
  41968c:	tst	w8, w9
  419690:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419694:	b	418e3c <feof@plt+0x1646c>
  419698:	mov	w9, #0x1                   	// #1
  41969c:	lsl	x8, x9, x8
  4196a0:	mov	x9, #0x1                   	// #1
  4196a4:	movk	x9, #0xa, lsl #32
  4196a8:	tst	x8, x9
  4196ac:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  4196b0:	b	419568 <feof@plt+0x16b98>
  4196b4:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  4196b8:	add	x9, x9, #0x7ae
  4196bc:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4196c0:	ldrh	w11, [x9, x8, lsl #1]
  4196c4:	add	x10, x10, x11, lsl #2
  4196c8:	br	x10
  4196cc:	cmp	w2, #0x417
  4196d0:	b.le	4199c8 <feof@plt+0x16ff8>
  4196d4:	mov	w8, #0x1e35                	// #7733
  4196d8:	cmp	w2, w8
  4196dc:	b.le	419a80 <feof@plt+0x170b0>
  4196e0:	mov	w8, #0xffffe1ca            	// #-7734
  4196e4:	add	w8, w2, w8
  4196e8:	cmp	w8, #0x25
  4196ec:	b.hi	4199fc <feof@plt+0x1702c>  // b.pmore
  4196f0:	mov	w9, #0x1                   	// #1
  4196f4:	lsl	x8, x9, x8
  4196f8:	mov	x9, #0x3                   	// #3
  4196fc:	movk	x9, #0x30, lsl #32
  419700:	tst	x8, x9
  419704:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419708:	b	4199fc <feof@plt+0x1702c>
  41970c:	mov	w8, #0xffffe1f6            	// #-7690
  419710:	add	w8, w2, w8
  419714:	cmp	w8, #0xbd
  419718:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  41971c:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  419720:	add	x9, x9, #0xb84
  419724:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419728:	ldrh	w11, [x9, x8, lsl #1]
  41972c:	add	x10, x10, x11, lsl #2
  419730:	br	x10
  419734:	mov	w8, #0xffffe100            	// #-7936
  419738:	add	w8, w2, w8
  41973c:	cmp	w8, #0xfe
  419740:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419744:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x6a68>
  419748:	add	x9, x9, #0x14a
  41974c:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419750:	ldrh	w11, [x9, x8, lsl #1]
  419754:	add	x10, x10, x11, lsl #2
  419758:	br	x10
  41975c:	mov	w8, #0xffffe200            	// #-7680
  419760:	add	w8, w2, w8
  419764:	cmp	w8, #0xf1
  419768:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  41976c:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  419770:	add	x9, x9, #0x5e6
  419774:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419778:	ldrh	w11, [x9, x8, lsl #1]
  41977c:	add	x10, x10, x11, lsl #2
  419780:	br	x10
  419784:	mov	w9, #0x1                   	// #1
  419788:	lsl	x8, x9, x8
  41978c:	mov	x9, #0xcf3                 	// #3315
  419790:	movk	x9, #0x80, lsl #48
  419794:	tst	x8, x9
  419798:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  41979c:	b	419378 <feof@plt+0x169a8>
  4197a0:	sub	w8, w2, #0x41
  4197a4:	cmp	w8, #0xb4
  4197a8:	b.hi	419b1c <feof@plt+0x1714c>  // b.pmore
  4197ac:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  4197b0:	add	x9, x9, #0xf4c
  4197b4:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4197b8:	ldrh	w11, [x9, x8, lsl #1]
  4197bc:	add	x10, x10, x11, lsl #2
  4197c0:	br	x10
  4197c4:	sub	w8, w2, #0x41
  4197c8:	cmp	w8, #0x34
  4197cc:	b.hi	4197ec <feof@plt+0x16e1c>  // b.pmore
  4197d0:	mov	w9, #0x1                   	// #1
  4197d4:	lsl	x8, x9, x8
  4197d8:	mov	x9, #0x10001000100010      	// #4503668347895824
  4197dc:	movk	x9, #0x4151
  4197e0:	movk	x9, #0x4151, lsl #32
  4197e4:	tst	x8, x9
  4197e8:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  4197ec:	sub	w8, w2, #0x391
  4197f0:	cmp	w8, #0x34
  4197f4:	b.hi	419814 <feof@plt+0x16e44>  // b.pmore
  4197f8:	mov	w9, #0x1                   	// #1
  4197fc:	lsl	x8, x9, x8
  419800:	mov	x9, #0x10001000100010      	// #4503668347895824
  419804:	movk	x9, #0x101
  419808:	movk	x9, #0x101, lsl #32
  41980c:	tst	x8, x9
  419810:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419814:	sub	w8, w2, #0x228
  419818:	b	419b20 <feof@plt+0x17150>
  41981c:	sub	w8, w2, #0x124
  419820:	cmp	w8, #0x2
  419824:	b.cc	4192a8 <feof@plt+0x168d8>  // b.lo, b.ul, b.last
  419828:	cmp	w2, #0x48
  41982c:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419830:	cmp	w2, #0x68
  419834:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419838:	b	419b28 <feof@plt+0x17158>
  41983c:	mov	w8, #0xffffe15e            	// #-7842
  419840:	add	w8, w2, w8
  419844:	cmp	w8, #0x13
  419848:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  41984c:	mov	w9, #0x1                   	// #1
  419850:	lsl	w8, w9, w8
  419854:	mov	w9, #0xf3ff                	// #62463
  419858:	movk	w9, #0xf, lsl #16
  41985c:	b	41998c <feof@plt+0x16fbc>
  419860:	mov	w8, #0xffffe1fe            	// #-7682
  419864:	add	w8, w2, w8
  419868:	cmp	w8, #0xf7
  41986c:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419870:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  419874:	add	x9, x9, #0x560
  419878:	adr	x10, 4192a8 <feof@plt+0x168d8>
  41987c:	ldrh	w11, [x9, x8, lsl #1]
  419880:	add	x10, x10, x11, lsl #2
  419884:	br	x10
  419888:	mov	w8, #0xffffe1b4            	// #-7756
  41988c:	add	w8, w2, w8
  419890:	cmp	w8, #0x9b
  419894:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419898:	adrp	x9, 455000 <_obstack_memory_used@@Base+0x4a68>
  41989c:	add	x9, x9, #0xb16
  4198a0:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4198a4:	ldrh	w11, [x9, x8, lsl #1]
  4198a8:	add	x10, x10, x11, lsl #2
  4198ac:	br	x10
  4198b0:	sub	w8, w2, #0x1cd
  4198b4:	cmp	w8, #0x5a
  4198b8:	b.hi	419b30 <feof@plt+0x17160>  // b.pmore
  4198bc:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  4198c0:	add	x9, x9, #0xe46
  4198c4:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4198c8:	ldrh	w11, [x9, x8, lsl #1]
  4198cc:	add	x10, x10, x11, lsl #2
  4198d0:	br	x10
  4198d4:	mov	w8, #0xffffe1f6            	// #-7690
  4198d8:	add	w8, w2, w8
  4198dc:	cmp	w8, #0xdd
  4198e0:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  4198e4:	adrp	x9, 454000 <_obstack_memory_used@@Base+0x3a68>
  4198e8:	add	x9, x9, #0x48
  4198ec:	adr	x10, 4192a8 <feof@plt+0x168d8>
  4198f0:	ldrh	w11, [x9, x8, lsl #1]
  4198f4:	add	x10, x10, x11, lsl #2
  4198f8:	br	x10
  4198fc:	mov	w8, #0xffffe1fe            	// #-7682
  419900:	add	w8, w2, w8
  419904:	cmp	w8, #0x95
  419908:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  41990c:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x2a68>
  419910:	add	x9, x9, #0x626
  419914:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419918:	ldrh	w11, [x9, x8, lsl #1]
  41991c:	add	x10, x10, x11, lsl #2
  419920:	br	x10
  419924:	mov	w8, #0xffffe1ec            	// #-7700
  419928:	add	w8, w2, w8
  41992c:	cmp	w8, #0xd3
  419930:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419934:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x2a68>
  419938:	add	x9, x9, #0xaf8
  41993c:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419940:	ldrh	w11, [x9, x8, lsl #1]
  419944:	add	x10, x10, x11, lsl #2
  419948:	br	x10
  41994c:	sub	w8, w2, #0x391
  419950:	cmp	w8, #0xa7
  419954:	b.hi	419970 <feof@plt+0x16fa0>  // b.pmore
  419958:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  41995c:	add	x9, x9, #0xffa
  419960:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419964:	ldrh	w11, [x9, x8, lsl #1]
  419968:	add	x10, x10, x11, lsl #2
  41996c:	br	x10
  419970:	sub	w8, w2, #0x1a0
  419974:	cmp	w8, #0x10
  419978:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  41997c:	mov	w9, #0x1                   	// #1
  419980:	lsl	w8, w9, w8
  419984:	mov	w9, #0x8003                	// #32771
  419988:	movk	w9, #0x1, lsl #16
  41998c:	tst	w8, w9
  419990:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419994:	b	419b28 <feof@plt+0x17158>
  419998:	sub	w8, w2, #0x3b1
  41999c:	cmp	w8, #0x1a
  4199a0:	b.hi	4199bc <feof@plt+0x16fec>  // b.pmore
  4199a4:	mov	w9, #0x1                   	// #1
  4199a8:	lsl	w8, w9, w8
  4199ac:	mov	w9, #0x141                 	// #321
  4199b0:	movk	w9, #0x710, lsl #16
  4199b4:	tst	w8, w9
  4199b8:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  4199bc:	cmp	w2, #0xa8
  4199c0:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  4199c4:	b	419b28 <feof@plt+0x17158>
  4199c8:	sub	w8, w2, #0x391
  4199cc:	cmp	w8, #0x34
  4199d0:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  4199d4:	mov	w9, #0x1                   	// #1
  4199d8:	lsl	x8, x9, x8
  4199dc:	mov	x9, #0x10001000100010      	// #4503668347895824
  4199e0:	movk	x9, #0x101
  4199e4:	movk	x9, #0x101, lsl #32
  4199e8:	b	4192a0 <feof@plt+0x168d0>
  4199ec:	mov	w8, #0xffffe160            	// #-7840
  4199f0:	add	w8, w2, w8
  4199f4:	cmp	w8, #0x2
  4199f8:	b.cc	4192a8 <feof@plt+0x168d8>  // b.lo, b.ul, b.last
  4199fc:	mov	w8, #0x1fb3                	// #8115
  419a00:	cmp	w2, w8
  419a04:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419a08:	mov	w8, #0x1fbc                	// #8124
  419a0c:	cmp	w2, w8
  419a10:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419a14:	b	419b28 <feof@plt+0x17158>
  419a18:	sub	w8, w2, #0x391
  419a1c:	cmp	w8, #0xa9
  419a20:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419a24:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x5a68>
  419a28:	add	x9, x9, #0xa8e
  419a2c:	adr	x10, 4192a8 <feof@plt+0x168d8>
  419a30:	ldrh	w11, [x9, x8, lsl #1]
  419a34:	add	x10, x10, x11, lsl #2
  419a38:	br	x10
  419a3c:	mov	w8, #0xffffe188            	// #-7800
  419a40:	add	w8, w2, w8
  419a44:	cmp	w8, #0x4
  419a48:	b.cc	4192a8 <feof@plt+0x168d8>  // b.lo, b.ul, b.last
  419a4c:	mov	w8, #0xffffe11a            	// #-7910
  419a50:	add	w8, w2, w8
  419a54:	b	419b20 <feof@plt+0x17150>
  419a58:	sub	w8, w2, #0x391
  419a5c:	cmp	w8, #0x3d
  419a60:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419a64:	mov	w9, #0x1                   	// #1
  419a68:	lsl	x8, x9, x8
  419a6c:	mov	x9, #0x41                  	// #65
  419a70:	movk	x9, #0x2900, lsl #16
  419a74:	movk	x9, #0x41, lsl #32
  419a78:	movk	x9, #0x2100, lsl #48
  419a7c:	b	4192a0 <feof@plt+0x168d0>
  419a80:	sub	w8, w2, #0x418
  419a84:	cmp	w8, #0x2b
  419a88:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419a8c:	mov	w9, #0x1                   	// #1
  419a90:	lsl	x8, x9, x8
  419a94:	mov	x9, #0x801                 	// #2049
  419a98:	movk	x9, #0x801, lsl #32
  419a9c:	b	4192a0 <feof@plt+0x168d0>
  419aa0:	sub	w8, w2, #0x226
  419aa4:	cmp	w8, #0x9
  419aa8:	b.hi	419ac0 <feof@plt+0x170f0>  // b.pmore
  419aac:	mov	w9, #0x1                   	// #1
  419ab0:	lsl	w8, w9, w8
  419ab4:	mov	w9, #0x303                 	// #771
  419ab8:	tst	w8, w9
  419abc:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419ac0:	sub	w8, w2, #0x1ea
  419ac4:	b	419b20 <feof@plt+0x17150>
  419ac8:	sub	w8, w2, #0x4d8
  419acc:	cmp	w8, #0x11
  419ad0:	b.hi	419b28 <feof@plt+0x17158>  // b.pmore
  419ad4:	mov	w9, #0x1                   	// #1
  419ad8:	lsl	w8, w9, w8
  419adc:	tst	w8, #0x30003
  419ae0:	b.ne	4192a8 <feof@plt+0x168d8>  // b.any
  419ae4:	b	419b28 <feof@plt+0x17158>
  419ae8:	cmp	w2, #0x1b7
  419aec:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419af0:	cmp	w2, #0x292
  419af4:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419af8:	b	419b28 <feof@plt+0x17158>
  419afc:	cmp	w2, #0x55
  419b00:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419b04:	cmp	w2, #0x75
  419b08:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419b0c:	b	419b28 <feof@plt+0x17158>
  419b10:	mov	w8, #0xffffe19e            	// #-7778
  419b14:	add	w8, w2, w8
  419b18:	b	419b20 <feof@plt+0x17150>
  419b1c:	sub	w8, w2, #0x16a
  419b20:	cmp	w8, #0x2
  419b24:	b.cc	4192a8 <feof@plt+0x168d8>  // b.lo, b.ul, b.last
  419b28:	mov	w0, #0x1                   	// #1
  419b2c:	ret
  419b30:	cmp	w2, #0x41
  419b34:	b.eq	4192a8 <feof@plt+0x168d8>  // b.none
  419b38:	b	419b28 <feof@plt+0x17158>
  419b3c:	stp	x29, x30, [sp, #-80]!
  419b40:	stp	x26, x25, [sp, #16]
  419b44:	stp	x24, x23, [sp, #32]
  419b48:	stp	x22, x21, [sp, #48]
  419b4c:	stp	x20, x19, [sp, #64]
  419b50:	ldrsw	x25, [x3, #16]
  419b54:	ldr	x21, [x0, #1216]
  419b58:	mov	x19, x2
  419b5c:	mov	w20, w1
  419b60:	mov	x29, sp
  419b64:	cmp	x21, x25
  419b68:	b.ne	419b9c <feof@plt+0x171cc>  // b.any
  419b6c:	ldp	x10, x8, [x19, #8]
  419b70:	add	x9, x8, #0x1
  419b74:	cmp	x9, x10
  419b78:	b.ls	419c2c <feof@plt+0x1725c>  // b.plast
  419b7c:	ldr	x0, [x19]
  419b80:	add	x1, x10, #0x100
  419b84:	str	x1, [x19, #8]
  419b88:	bl	450728 <_obstack_memory_used@@Base+0x190>
  419b8c:	ldr	x8, [x19, #16]
  419b90:	str	x0, [x19]
  419b94:	add	x9, x8, #0x1
  419b98:	b	419c30 <feof@plt+0x17260>
  419b9c:	ldp	x8, x23, [x19, #8]
  419ba0:	ldrb	w22, [x0, #1242]
  419ba4:	cmp	x21, #0x20
  419ba8:	mov	w9, #0x20                  	// #32
  419bac:	udiv	x24, x25, x21
  419bb0:	csel	x26, x21, x9, cc  // cc = lo, ul, last
  419bb4:	add	x9, x23, x24
  419bb8:	cmp	x9, x8
  419bbc:	b.ls	419bd4 <feof@plt+0x17204>  // b.plast
  419bc0:	ldr	x0, [x19]
  419bc4:	add	x1, x8, #0x100
  419bc8:	str	x1, [x19, #8]
  419bcc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  419bd0:	str	x0, [x19]
  419bd4:	cmp	x21, x25
  419bd8:	b.hi	419c1c <feof@plt+0x1724c>  // b.pmore
  419bdc:	mov	x9, #0xffffffffffffffff    	// #-1
  419be0:	lsl	x9, x9, x26
  419be4:	mov	x8, xzr
  419be8:	eor	w9, w9, #0xff
  419bec:	ldr	x11, [x19]
  419bf0:	mvn	x12, x8
  419bf4:	cmp	w22, #0x0
  419bf8:	add	x12, x24, x12
  419bfc:	csel	x12, x8, x12, eq  // eq = none
  419c00:	add	x8, x8, #0x1
  419c04:	and	w10, w20, w9
  419c08:	lsr	w20, w20, w21
  419c0c:	add	x12, x12, x23
  419c10:	cmp	x24, x8
  419c14:	strb	w10, [x11, x12]
  419c18:	b.hi	419bec <feof@plt+0x1721c>  // b.pmore
  419c1c:	ldr	x8, [x19, #16]
  419c20:	add	x8, x8, x24
  419c24:	str	x8, [x19, #16]
  419c28:	b	419c38 <feof@plt+0x17268>
  419c2c:	ldr	x0, [x19]
  419c30:	str	x9, [x19, #16]
  419c34:	strb	w20, [x0, x8]
  419c38:	ldp	x20, x19, [sp, #64]
  419c3c:	ldp	x22, x21, [sp, #48]
  419c40:	ldp	x24, x23, [sp, #32]
  419c44:	ldp	x26, x25, [sp, #16]
  419c48:	ldp	x29, x30, [sp], #80
  419c4c:	ret
  419c50:	sub	sp, sp, #0x100
  419c54:	stp	x29, x30, [sp, #176]
  419c58:	stp	x24, x23, [sp, #208]
  419c5c:	stp	x22, x21, [sp, #224]
  419c60:	stp	x20, x19, [sp, #240]
  419c64:	ldrb	w23, [x0, #27]
  419c68:	ldrb	w24, [x0, #25]
  419c6c:	mov	x19, x0
  419c70:	mov	w20, w1
  419c74:	str	x25, [sp, #192]
  419c78:	add	x29, sp, #0xb0
  419c7c:	cbz	w23, 419c84 <feof@plt+0x172b4>
  419c80:	strb	wzr, [x19, #24]
  419c84:	cbz	w24, 419ca8 <feof@plt+0x172d8>
  419c88:	ldrb	w8, [x19, #1154]
  419c8c:	cbz	w8, 419ca4 <feof@plt+0x172d4>
  419c90:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419c94:	add	x2, x2, #0x412
  419c98:	mov	w1, #0x2                   	// #2
  419c9c:	mov	x0, x19
  419ca0:	bl	41de04 <feof@plt+0x1b434>
  419ca4:	strh	wzr, [x19, #24]
  419ca8:	ldr	x8, [x19, #40]
  419cac:	mov	w21, #0x1                   	// #1
  419cb0:	mov	w9, #0x53                  	// #83
  419cb4:	strb	w21, [x19, #16]
  419cb8:	strb	wzr, [x19, #21]
  419cbc:	strb	w9, [x19, #156]
  419cc0:	ldr	w8, [x8, #60]
  419cc4:	mov	x0, x19
  419cc8:	str	w8, [x19, #48]
  419ccc:	bl	425308 <feof@plt+0x22938>
  419cd0:	ldrb	w8, [x0, #4]
  419cd4:	cmp	w8, #0x16
  419cd8:	b.eq	419da0 <feof@plt+0x173d0>  // b.none
  419cdc:	cmp	w8, #0x37
  419ce0:	b.eq	419da8 <feof@plt+0x173d8>  // b.none
  419ce4:	mov	x22, x0
  419ce8:	cmp	w8, #0x35
  419cec:	b.ne	419cfc <feof@plt+0x1732c>  // b.any
  419cf0:	ldr	x8, [x22, #8]
  419cf4:	ldrb	w8, [x8, #16]
  419cf8:	tbnz	w8, #0, 419dc0 <feof@plt+0x173f0>
  419cfc:	ldr	w8, [x19, #1116]
  419d00:	cmp	w8, #0x15
  419d04:	b.eq	419db4 <feof@plt+0x173e4>  // b.none
  419d08:	ldrb	w8, [x19, #18]
  419d0c:	cbnz	w8, 419eb0 <feof@plt+0x174e0>
  419d10:	mov	x0, x19
  419d14:	mov	x1, x22
  419d18:	bl	428aa4 <feof@plt+0x260d4>
  419d1c:	ldr	x8, [x19, #1064]
  419d20:	mov	x20, x0
  419d24:	cbz	x8, 419e98 <feof@plt+0x174c8>
  419d28:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419d2c:	add	x2, x2, #0xec8
  419d30:	mov	x0, x19
  419d34:	mov	x1, x20
  419d38:	blr	x8
  419d3c:	cbz	x0, 419e98 <feof@plt+0x174c8>
  419d40:	ldr	x1, [x19, #40]
  419d44:	ldr	w2, [x22]
  419d48:	mov	x21, x0
  419d4c:	add	x0, sp, #0x8
  419d50:	mov	x3, xzr
  419d54:	bl	42bfb4 <feof@plt+0x295e4>
  419d58:	ldr	x0, [x19, #40]
  419d5c:	ldr	w1, [x22]
  419d60:	bl	429d18 <feof@plt+0x27348>
  419d64:	mov	x1, x0
  419d68:	add	x0, sp, #0x8
  419d6c:	mov	x2, x21
  419d70:	bl	42cd60 <feof@plt+0x2a390>
  419d74:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419d78:	add	x3, x3, #0x47a
  419d7c:	add	x2, sp, #0x8
  419d80:	mov	w1, #0x3                   	// #3
  419d84:	mov	x0, x19
  419d88:	mov	x4, x20
  419d8c:	mov	x5, x21
  419d90:	bl	41e79c <feof@plt+0x1bdcc>
  419d94:	add	x0, sp, #0x8
  419d98:	bl	42c094 <feof@plt+0x296c4>
  419d9c:	b	419eb0 <feof@plt+0x174e0>
  419da0:	mov	x25, xzr
  419da4:	b	419f50 <feof@plt+0x17580>
  419da8:	ldr	w8, [x19, #1116]
  419dac:	cmp	w8, #0x15
  419db0:	b.ne	419de0 <feof@plt+0x17410>  // b.any
  419db4:	mov	w21, wzr
  419db8:	mov	x25, xzr
  419dbc:	b	419f50 <feof@plt+0x17580>
  419dc0:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419dc4:	lsr	w8, w8, #1
  419dc8:	add	x9, x9, #0xce8
  419dcc:	mov	w10, #0x18                  	// #24
  419dd0:	umaddl	x22, w8, w10, x9
  419dd4:	ldrb	w8, [x22, #19]
  419dd8:	tbz	w8, #1, 419e1c <feof@plt+0x1744c>
  419ddc:	b	419e20 <feof@plt+0x17450>
  419de0:	ldrb	w8, [x19, #1154]
  419de4:	cbz	w8, 419e0c <feof@plt+0x1743c>
  419de8:	ldrb	w8, [x19, #1155]
  419dec:	cbnz	w8, 419e0c <feof@plt+0x1743c>
  419df0:	ldrb	w8, [x19, #18]
  419df4:	cbnz	w8, 419e0c <feof@plt+0x1743c>
  419df8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419dfc:	add	x2, x2, #0x44f
  419e00:	mov	w1, #0x2                   	// #2
  419e04:	mov	x0, x19
  419e08:	bl	41de04 <feof@plt+0x1b434>
  419e0c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419e10:	add	x22, x22, #0xeb0
  419e14:	ldrb	w8, [x22, #19]
  419e18:	tbnz	w8, #1, 419e20 <feof@plt+0x17450>
  419e1c:	strb	wzr, [x19, #440]
  419e20:	ldrb	w9, [x19, #1155]
  419e24:	cbz	w9, 419e50 <feof@plt+0x17480>
  419e28:	ldrb	w9, [x19, #1244]
  419e2c:	cbnz	w9, 419e40 <feof@plt+0x17470>
  419e30:	mov	x25, xzr
  419e34:	mov	w21, wzr
  419e38:	cbnz	w20, 419f50 <feof@plt+0x17580>
  419e3c:	tbz	w8, #3, 419f50 <feof@plt+0x17580>
  419e40:	and	w8, w8, #0x4
  419e44:	strb	w8, [x19, #19]
  419e48:	strb	w8, [x19, #17]
  419e4c:	b	419f2c <feof@plt+0x1755c>
  419e50:	ldrb	w9, [x19, #18]
  419e54:	and	w10, w8, #0x4
  419e58:	strb	w10, [x19, #19]
  419e5c:	strb	w10, [x19, #17]
  419e60:	cbz	w9, 419eb8 <feof@plt+0x174e8>
  419e64:	ldrb	w8, [x19, #1138]
  419e68:	cbz	w8, 419f2c <feof@plt+0x1755c>
  419e6c:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419e70:	add	x8, x8, #0xdc0
  419e74:	cmp	x22, x8
  419e78:	b.eq	419ef8 <feof@plt+0x17528>  // b.none
  419e7c:	ldrb	w8, [x22, #18]
  419e80:	cbz	w20, 419f10 <feof@plt+0x17540>
  419e84:	cbnz	w8, 419f2c <feof@plt+0x1755c>
  419e88:	ldr	x3, [x22, #8]
  419e8c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419e90:	add	x2, x2, #0x967
  419e94:	b	419f20 <feof@plt+0x17550>
  419e98:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419e9c:	add	x2, x2, #0x4b1
  419ea0:	mov	w1, #0x3                   	// #3
  419ea4:	mov	x0, x19
  419ea8:	mov	x3, x20
  419eac:	bl	41de04 <feof@plt+0x1b434>
  419eb0:	mov	x25, xzr
  419eb4:	b	419f40 <feof@plt+0x17570>
  419eb8:	ldrb	w9, [x22, #18]
  419ebc:	cmp	w9, #0x2
  419ec0:	b.ne	41a088 <feof@plt+0x176b8>  // b.any
  419ec4:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419ec8:	add	x9, x9, #0xe50
  419ecc:	cmp	x22, x9
  419ed0:	b.eq	41a080 <feof@plt+0x176b0>  // b.none
  419ed4:	ldrb	w9, [x19, #1154]
  419ed8:	cbz	w9, 41a088 <feof@plt+0x176b8>
  419edc:	ldr	x3, [x22, #8]
  419ee0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419ee4:	add	x2, x2, #0x905
  419ee8:	mov	w1, #0x2                   	// #2
  419eec:	mov	x0, x19
  419ef0:	bl	41de04 <feof@plt+0x1b434>
  419ef4:	b	419e64 <feof@plt+0x17494>
  419ef8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419efc:	add	x2, x2, #0x93e
  419f00:	mov	w1, #0x6                   	// #6
  419f04:	mov	x0, x19
  419f08:	bl	41df34 <feof@plt+0x1b564>
  419f0c:	b	419f2c <feof@plt+0x1755c>
  419f10:	cbz	w8, 419f2c <feof@plt+0x1755c>
  419f14:	ldr	x3, [x22, #8]
  419f18:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419f1c:	add	x2, x2, #0x995
  419f20:	mov	w1, #0x6                   	// #6
  419f24:	mov	x0, x19
  419f28:	bl	41df34 <feof@plt+0x1b564>
  419f2c:	ldrb	w8, [x19, #18]
  419f30:	cbz	w8, 419f48 <feof@plt+0x17578>
  419f34:	ldrb	w8, [x22, #19]
  419f38:	tst	w8, #0x1
  419f3c:	csel	x25, xzr, x22, eq  // eq = none
  419f40:	mov	w21, #0x1                   	// #1
  419f44:	b	419f50 <feof@plt+0x17580>
  419f48:	mov	w21, #0x1                   	// #1
  419f4c:	mov	x25, x22
  419f50:	ldrb	w8, [x19, #1160]
  419f54:	str	x25, [x19, #144]
  419f58:	cbz	w8, 419f64 <feof@plt+0x17594>
  419f5c:	mov	x0, x19
  419f60:	bl	41a0c8 <feof@plt+0x176f8>
  419f64:	cbz	x25, 419f7c <feof@plt+0x175ac>
  419f68:	ldr	x8, [x19, #144]
  419f6c:	mov	x0, x19
  419f70:	ldr	x8, [x8]
  419f74:	blr	x8
  419f78:	b	419f8c <feof@plt+0x175bc>
  419f7c:	cbnz	w21, 419f8c <feof@plt+0x175bc>
  419f80:	mov	w1, #0x1                   	// #1
  419f84:	mov	x0, x19
  419f88:	bl	42e2c0 <feof@plt+0x2b8f0>
  419f8c:	ldrb	w9, [x19, #1160]
  419f90:	ldrb	w8, [x19, #32]
  419f94:	cbz	w9, 419fc8 <feof@plt+0x175f8>
  419f98:	cbnz	w8, 419fa8 <feof@plt+0x175d8>
  419f9c:	ldrb	w8, [x19, #24]
  419fa0:	sub	w8, w8, #0x1
  419fa4:	strb	w8, [x19, #24]
  419fa8:	ldr	x8, [x19, #144]
  419fac:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  419fb0:	add	x9, x9, #0xce8
  419fb4:	cmp	x8, x9
  419fb8:	b.eq	41a024 <feof@plt+0x17654>  // b.none
  419fbc:	mov	x0, x19
  419fc0:	bl	432c74 <feof@plt+0x302a4>
  419fc4:	b	41a024 <feof@plt+0x17654>
  419fc8:	cbz	w21, 41a024 <feof@plt+0x17654>
  419fcc:	cbz	w8, 419fdc <feof@plt+0x1760c>
  419fd0:	b	41a024 <feof@plt+0x17654>
  419fd4:	mov	x0, x19
  419fd8:	bl	42da2c <feof@plt+0x2b05c>
  419fdc:	ldr	x8, [x19, #136]
  419fe0:	ldr	x8, [x8, #8]
  419fe4:	cbnz	x8, 419fd4 <feof@plt+0x17604>
  419fe8:	ldr	x8, [x19, #448]
  419fec:	ldurb	w8, [x8, #-20]
  419ff0:	cmp	w8, #0x16
  419ff4:	b.eq	41a00c <feof@plt+0x1763c>  // b.none
  419ff8:	mov	x0, x19
  419ffc:	bl	425308 <feof@plt+0x22938>
  41a000:	ldrb	w8, [x0, #4]
  41a004:	cmp	w8, #0x16
  41a008:	b.ne	419ff8 <feof@plt+0x17628>  // b.any
  41a00c:	ldr	w8, [x19, #500]
  41a010:	cbnz	w8, 41a024 <feof@plt+0x17654>
  41a014:	ldr	x8, [x19, #472]
  41a018:	add	x9, x19, #0x1c8
  41a01c:	str	x9, [x19, #488]
  41a020:	str	x8, [x19, #448]
  41a024:	ldrb	w8, [x19, #1123]
  41a028:	strb	wzr, [x19, #16]
  41a02c:	sturh	wzr, [x19, #19]
  41a030:	str	xzr, [x19, #144]
  41a034:	cmp	w8, #0x0
  41a038:	cset	w8, eq  // eq = none
  41a03c:	strb	w8, [x19, #21]
  41a040:	cbz	w24, 41a054 <feof@plt+0x17684>
  41a044:	ldrb	w8, [x19, #32]
  41a048:	cbnz	w8, 41a054 <feof@plt+0x17684>
  41a04c:	mov	w8, #0x201                 	// #513
  41a050:	strh	w8, [x19, #24]
  41a054:	cbz	w23, 41a060 <feof@plt+0x17690>
  41a058:	mov	w8, #0x1                   	// #1
  41a05c:	strb	w8, [x19, #24]
  41a060:	mov	w0, w21
  41a064:	ldp	x20, x19, [sp, #240]
  41a068:	ldp	x22, x21, [sp, #224]
  41a06c:	ldp	x24, x23, [sp, #208]
  41a070:	ldr	x25, [sp, #192]
  41a074:	ldp	x29, x30, [sp, #176]
  41a078:	add	sp, sp, #0x100
  41a07c:	ret
  41a080:	ldrb	w9, [x19, #1122]
  41a084:	cbz	w9, 419ed4 <feof@plt+0x17504>
  41a088:	tbnz	w8, #5, 41a0a4 <feof@plt+0x176d4>
  41a08c:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a090:	add	x8, x8, #0xe50
  41a094:	cmp	x22, x8
  41a098:	b.ne	419e64 <feof@plt+0x17494>  // b.any
  41a09c:	ldrb	w8, [x19, #1122]
  41a0a0:	cbnz	w8, 419e64 <feof@plt+0x17494>
  41a0a4:	ldrb	w8, [x19, #1132]
  41a0a8:	cbz	w8, 419e64 <feof@plt+0x17494>
  41a0ac:	ldr	x3, [x22, #8]
  41a0b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a0b4:	add	x2, x2, #0x91c
  41a0b8:	mov	w1, #0x1                   	// #1
  41a0bc:	mov	x0, x19
  41a0c0:	bl	41df34 <feof@plt+0x1b564>
  41a0c4:	b	419e64 <feof@plt+0x17494>
  41a0c8:	stp	x29, x30, [sp, #-32]!
  41a0cc:	stp	x20, x19, [sp, #16]
  41a0d0:	ldr	x8, [x0, #144]
  41a0d4:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a0d8:	add	x9, x9, #0xce8
  41a0dc:	mov	x19, x0
  41a0e0:	cmp	x8, x9
  41a0e4:	mov	x29, sp
  41a0e8:	b.eq	41a194 <feof@plt+0x177c4>  // b.none
  41a0ec:	cbz	x8, 41a100 <feof@plt+0x17730>
  41a0f0:	ldrb	w9, [x8, #19]
  41a0f4:	tst	w9, #0x10
  41a0f8:	cset	w9, eq  // eq = none
  41a0fc:	b	41a104 <feof@plt+0x17734>
  41a100:	mov	w9, wzr
  41a104:	ldrb	w10, [x19, #18]
  41a108:	adrp	x11, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a10c:	add	x11, x11, #0xd48
  41a110:	add	x12, x11, #0x78
  41a114:	cmp	w10, #0x0
  41a118:	cset	w20, ne  // ne = any
  41a11c:	cmp	x8, x11
  41a120:	cset	w10, eq  // eq = none
  41a124:	cmp	x8, x12
  41a128:	cset	w8, eq  // eq = none
  41a12c:	orr	w8, w10, w8
  41a130:	strb	w8, [x19, #20]
  41a134:	cbz	w8, 41a13c <feof@plt+0x1776c>
  41a138:	strb	wzr, [x19, #18]
  41a13c:	cbz	w9, 41a16c <feof@plt+0x1779c>
  41a140:	ldrb	w8, [x19, #24]
  41a144:	mov	x0, x19
  41a148:	mov	x1, xzr
  41a14c:	mov	w2, wzr
  41a150:	add	w8, w8, #0x1
  41a154:	strb	w8, [x19, #24]
  41a158:	bl	432d04 <feof@plt+0x30334>
  41a15c:	ldrb	w8, [x19, #24]
  41a160:	sub	w8, w8, #0x1
  41a164:	strb	w8, [x19, #24]
  41a168:	b	41a17c <feof@plt+0x177ac>
  41a16c:	mov	x0, x19
  41a170:	mov	x1, xzr
  41a174:	mov	w2, wzr
  41a178:	bl	432d04 <feof@plt+0x30334>
  41a17c:	ldr	x1, [x19, #1312]
  41a180:	ldr	x8, [x19, #1328]
  41a184:	mov	x0, x19
  41a188:	strb	w20, [x19, #18]
  41a18c:	sub	x2, x8, x1
  41a190:	bl	432c40 <feof@plt+0x30270>
  41a194:	ldrb	w8, [x19, #24]
  41a198:	add	w8, w8, #0x1
  41a19c:	strb	w8, [x19, #24]
  41a1a0:	ldp	x20, x19, [sp, #16]
  41a1a4:	ldp	x29, x30, [sp], #32
  41a1a8:	ret
  41a1ac:	adrp	x1, 41a000 <feof@plt+0x17630>
  41a1b0:	add	x1, x1, #0x1bc
  41a1b4:	mov	x2, xzr
  41a1b8:	b	424660 <feof@plt+0x21c90>
  41a1bc:	ldrh	w8, [x1, #18]
  41a1c0:	mov	w9, #0xff34                	// #65332
  41a1c4:	mov	w0, #0x1                   	// #1
  41a1c8:	str	xzr, [x1, #24]
  41a1cc:	and	w8, w8, w9
  41a1d0:	strh	w8, [x1, #18]
  41a1d4:	ret
  41a1d8:	stp	x29, x30, [sp, #-32]!
  41a1dc:	stp	x20, x19, [sp, #16]
  41a1e0:	mov	x19, x0
  41a1e4:	ldr	x0, [x0, #40]
  41a1e8:	mov	w8, w3
  41a1ec:	mov	x3, x2
  41a1f0:	mov	w2, w4
  41a1f4:	mov	w4, w8
  41a1f8:	mov	x29, sp
  41a1fc:	bl	42a0f0 <feof@plt+0x27720>
  41a200:	mov	x20, x0
  41a204:	cbz	x0, 41a218 <feof@plt+0x17848>
  41a208:	ldr	x0, [x19, #40]
  41a20c:	ldr	w1, [x20, #16]
  41a210:	mov	w2, #0x7f                  	// #127
  41a214:	bl	42a5e8 <feof@plt+0x27c18>
  41a218:	ldr	x2, [x19, #912]
  41a21c:	cbz	x2, 41a234 <feof@plt+0x17864>
  41a220:	mov	x0, x19
  41a224:	mov	x1, x20
  41a228:	ldp	x20, x19, [sp, #16]
  41a22c:	ldp	x29, x30, [sp], #32
  41a230:	br	x2
  41a234:	ldp	x20, x19, [sp, #16]
  41a238:	ldp	x29, x30, [sp], #32
  41a23c:	ret
  41a240:	cbz	x3, 41a27c <feof@plt+0x178ac>
  41a244:	stp	x29, x30, [sp, #-32]!
  41a248:	stp	x20, x19, [sp, #16]
  41a24c:	mov	x19, x3
  41a250:	mov	w3, wzr
  41a254:	mov	x29, sp
  41a258:	mov	w20, w4
  41a25c:	bl	41a28c <feof@plt+0x178bc>
  41a260:	cbz	x0, 41a270 <feof@plt+0x178a0>
  41a264:	and	w8, w20, #0x1
  41a268:	strb	w8, [x0, #19]
  41a26c:	str	x19, [x0, #24]
  41a270:	ldp	x20, x19, [sp, #16]
  41a274:	ldp	x29, x30, [sp], #32
  41a278:	ret
  41a27c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a280:	add	x2, x2, #0x4d5
  41a284:	mov	w1, #0x4                   	// #4
  41a288:	b	41de04 <feof@plt+0x1b434>
  41a28c:	stp	x29, x30, [sp, #-64]!
  41a290:	stp	x22, x21, [sp, #32]
  41a294:	stp	x20, x19, [sp, #48]
  41a298:	mov	x20, x2
  41a29c:	mov	x21, x1
  41a2a0:	mov	x19, x0
  41a2a4:	str	x23, [sp, #16]
  41a2a8:	mov	x29, sp
  41a2ac:	cbz	x1, 41a328 <feof@plt+0x17958>
  41a2b0:	mov	x0, x21
  41a2b4:	and	w23, w3, #0x1
  41a2b8:	bl	402420 <strlen@plt>
  41a2bc:	mov	x2, x0
  41a2c0:	mov	x0, x19
  41a2c4:	mov	x1, x21
  41a2c8:	bl	4245e4 <feof@plt+0x21c14>
  41a2cc:	ldr	x8, [x19, #896]
  41a2d0:	mov	x22, x0
  41a2d4:	cbz	x8, 41a2ec <feof@plt+0x1791c>
  41a2d8:	ldr	x9, [x8, #8]
  41a2dc:	cmp	x9, x22
  41a2e0:	b.eq	41a344 <feof@plt+0x17974>  // b.none
  41a2e4:	ldr	x8, [x8]
  41a2e8:	cbnz	x8, 41a2d8 <feof@plt+0x17908>
  41a2ec:	mov	w1, #0x20                  	// #32
  41a2f0:	mov	x0, x19
  41a2f4:	bl	429628 <feof@plt+0x26c58>
  41a2f8:	movi	v0.2d, #0x0
  41a2fc:	stp	q0, q0, [x0]
  41a300:	ldr	x9, [x19, #896]
  41a304:	mov	x8, x0
  41a308:	mov	w10, #0x1                   	// #1
  41a30c:	str	x9, [x0]
  41a310:	str	x0, [x19, #896]
  41a314:	str	x22, [x0, #8]
  41a318:	strb	w10, [x0, #16]
  41a31c:	strb	w23, [x0, #19]
  41a320:	add	x23, x8, #0x18
  41a324:	b	41a374 <feof@plt+0x179a4>
  41a328:	tbz	w3, #0, 41a370 <feof@plt+0x179a0>
  41a32c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a330:	add	x2, x2, #0xa13
  41a334:	mov	w1, #0x4                   	// #4
  41a338:	mov	x0, x19
  41a33c:	mov	x3, x20
  41a340:	b	41a3f0 <feof@plt+0x17a20>
  41a344:	ldrb	w9, [x8, #16]
  41a348:	cbz	w9, 41a3dc <feof@plt+0x17a0c>
  41a34c:	ldrb	w9, [x8, #19]
  41a350:	cmp	w9, w23
  41a354:	b.eq	41a320 <feof@plt+0x17950>  // b.none
  41a358:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a35c:	add	x2, x2, #0x9ce
  41a360:	mov	w1, #0x4                   	// #4
  41a364:	mov	x0, x19
  41a368:	mov	x3, x21
  41a36c:	b	41a3f0 <feof@plt+0x17a20>
  41a370:	add	x23, x19, #0x380
  41a374:	mov	x0, x20
  41a378:	bl	402420 <strlen@plt>
  41a37c:	mov	x2, x0
  41a380:	mov	x0, x19
  41a384:	mov	x1, x20
  41a388:	bl	4245e4 <feof@plt+0x21c14>
  41a38c:	ldr	x8, [x23]
  41a390:	mov	x22, x0
  41a394:	cbz	x8, 41a3ac <feof@plt+0x179dc>
  41a398:	ldr	x9, [x8, #8]
  41a39c:	cmp	x9, x22
  41a3a0:	b.eq	41a3d4 <feof@plt+0x17a04>  // b.none
  41a3a4:	ldr	x8, [x8]
  41a3a8:	cbnz	x8, 41a398 <feof@plt+0x179c8>
  41a3ac:	mov	w1, #0x20                  	// #32
  41a3b0:	mov	x0, x19
  41a3b4:	bl	429628 <feof@plt+0x26c58>
  41a3b8:	movi	v0.2d, #0x0
  41a3bc:	stp	q0, q0, [x0]
  41a3c0:	ldr	x8, [x23]
  41a3c4:	str	x8, [x0]
  41a3c8:	str	x0, [x23]
  41a3cc:	str	x22, [x0, #8]
  41a3d0:	b	41a3f8 <feof@plt+0x17a28>
  41a3d4:	ldrb	w8, [x8, #16]
  41a3d8:	cbz	w8, 41a40c <feof@plt+0x17a3c>
  41a3dc:	ldr	x3, [x22]
  41a3e0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a3e4:	add	x2, x2, #0xa50
  41a3e8:	mov	w1, #0x4                   	// #4
  41a3ec:	mov	x0, x19
  41a3f0:	bl	41de04 <feof@plt+0x1b434>
  41a3f4:	mov	x0, xzr
  41a3f8:	ldp	x20, x19, [sp, #48]
  41a3fc:	ldp	x22, x21, [sp, #32]
  41a400:	ldr	x23, [sp, #16]
  41a404:	ldp	x29, x30, [sp], #64
  41a408:	ret
  41a40c:	cbz	x21, 41a430 <feof@plt+0x17a60>
  41a410:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a414:	add	x2, x2, #0xa89
  41a418:	mov	w1, #0x4                   	// #4
  41a41c:	mov	x0, x19
  41a420:	mov	x3, x21
  41a424:	mov	x4, x20
  41a428:	bl	41de04 <feof@plt+0x1b434>
  41a42c:	b	41a3f4 <feof@plt+0x17a24>
  41a430:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a434:	add	x2, x2, #0xaad
  41a438:	b	41a334 <feof@plt+0x17964>
  41a43c:	stp	x29, x30, [sp, #-32]!
  41a440:	stp	x20, x19, [sp, #16]
  41a444:	mov	w19, w3
  41a448:	and	w3, w5, #0x1
  41a44c:	mov	x29, sp
  41a450:	mov	w20, w4
  41a454:	bl	41a28c <feof@plt+0x178bc>
  41a458:	cbz	x0, 41a470 <feof@plt+0x17aa0>
  41a45c:	and	w8, w20, #0x1
  41a460:	mov	w9, #0x1                   	// #1
  41a464:	strb	w9, [x0, #18]
  41a468:	strb	w8, [x0, #19]
  41a46c:	str	w19, [x0, #24]
  41a470:	ldp	x20, x19, [sp, #16]
  41a474:	ldp	x29, x30, [sp], #32
  41a478:	ret
  41a47c:	stp	x29, x30, [sp, #-48]!
  41a480:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a484:	add	x2, x2, #0x4fa
  41a488:	mov	x1, xzr
  41a48c:	mov	w3, wzr
  41a490:	str	x21, [sp, #16]
  41a494:	stp	x20, x19, [sp, #32]
  41a498:	mov	x29, sp
  41a49c:	mov	x19, x0
  41a4a0:	bl	41a28c <feof@plt+0x178bc>
  41a4a4:	adrp	x8, 41a000 <feof@plt+0x17630>
  41a4a8:	mov	w21, #0x1                   	// #1
  41a4ac:	add	x8, x8, #0x5e8
  41a4b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a4b4:	strb	w21, [x0, #17]
  41a4b8:	str	x8, [x0, #24]
  41a4bc:	add	x2, x2, #0x4ff
  41a4c0:	mov	x0, x19
  41a4c4:	mov	x1, xzr
  41a4c8:	mov	w3, wzr
  41a4cc:	bl	41a28c <feof@plt+0x178bc>
  41a4d0:	adrp	x8, 41a000 <feof@plt+0x17630>
  41a4d4:	add	x8, x8, #0x674
  41a4d8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a4dc:	strb	w21, [x0, #17]
  41a4e0:	str	x8, [x0, #24]
  41a4e4:	add	x2, x2, #0x50a
  41a4e8:	mov	x0, x19
  41a4ec:	mov	x1, xzr
  41a4f0:	mov	w3, wzr
  41a4f4:	bl	41a28c <feof@plt+0x178bc>
  41a4f8:	adrp	x8, 41a000 <feof@plt+0x17630>
  41a4fc:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a500:	add	x8, x8, #0x934
  41a504:	add	x20, x20, #0x514
  41a508:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a50c:	strb	w21, [x0, #17]
  41a510:	str	x8, [x0, #24]
  41a514:	add	x2, x2, #0x518
  41a518:	mov	x0, x19
  41a51c:	mov	x1, x20
  41a520:	mov	w3, wzr
  41a524:	bl	41a28c <feof@plt+0x178bc>
  41a528:	adrp	x8, 41a000 <feof@plt+0x17630>
  41a52c:	add	x8, x8, #0xda8
  41a530:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a534:	strb	w21, [x0, #17]
  41a538:	str	x8, [x0, #24]
  41a53c:	add	x2, x2, #0x51f
  41a540:	mov	x0, x19
  41a544:	mov	x1, x20
  41a548:	mov	w3, wzr
  41a54c:	bl	41a28c <feof@plt+0x178bc>
  41a550:	adrp	x8, 41a000 <feof@plt+0x17630>
  41a554:	add	x8, x8, #0xe50
  41a558:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a55c:	strb	w21, [x0, #17]
  41a560:	str	x8, [x0, #24]
  41a564:	add	x2, x2, #0x6d9
  41a568:	mov	x0, x19
  41a56c:	mov	x1, x20
  41a570:	mov	w3, wzr
  41a574:	bl	41a28c <feof@plt+0x178bc>
  41a578:	adrp	x8, 41a000 <feof@plt+0x17630>
  41a57c:	add	x8, x8, #0xf20
  41a580:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  41a584:	strb	w21, [x0, #17]
  41a588:	str	x8, [x0, #24]
  41a58c:	add	x2, x2, #0xb10
  41a590:	mov	x0, x19
  41a594:	mov	x1, x20
  41a598:	mov	w3, wzr
  41a59c:	bl	41a28c <feof@plt+0x178bc>
  41a5a0:	adrp	x8, 41b000 <feof@plt+0x18630>
  41a5a4:	add	x8, x8, #0x30
  41a5a8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0xa68>
  41a5ac:	strb	w21, [x0, #17]
  41a5b0:	str	x8, [x0, #24]
  41a5b4:	add	x2, x2, #0xa8b
  41a5b8:	mov	x0, x19
  41a5bc:	mov	x1, x20
  41a5c0:	mov	w3, wzr
  41a5c4:	bl	41a28c <feof@plt+0x178bc>
  41a5c8:	adrp	x8, 41b000 <feof@plt+0x18630>
  41a5cc:	add	x8, x8, #0x38
  41a5d0:	strb	w21, [x0, #17]
  41a5d4:	str	x8, [x0, #24]
  41a5d8:	ldp	x20, x19, [sp, #32]
  41a5dc:	ldr	x21, [sp, #16]
  41a5e0:	ldp	x29, x30, [sp], #48
  41a5e4:	ret
  41a5e8:	stp	x29, x30, [sp, #-32]!
  41a5ec:	ldr	x8, [x0, #40]
  41a5f0:	str	x19, [sp, #16]
  41a5f4:	mov	x19, x0
  41a5f8:	mov	x29, sp
  41a5fc:	ldr	w8, [x8, #48]
  41a600:	cmp	w8, #0x1
  41a604:	b.ne	41a61c <feof@plt+0x17c4c>  // b.any
  41a608:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a60c:	add	x2, x2, #0xace
  41a610:	mov	x0, x19
  41a614:	mov	w1, wzr
  41a618:	bl	41de04 <feof@plt+0x1b434>
  41a61c:	ldr	x8, [x19, #448]
  41a620:	ldurb	w8, [x8, #-20]
  41a624:	cmp	w8, #0x16
  41a628:	b.eq	41a65c <feof@plt+0x17c8c>  // b.none
  41a62c:	mov	x0, x19
  41a630:	bl	425308 <feof@plt+0x22938>
  41a634:	ldrb	w8, [x0, #4]
  41a638:	cmp	w8, #0x16
  41a63c:	b.eq	41a65c <feof@plt+0x17c8c>  // b.none
  41a640:	ldr	x8, [x19, #144]
  41a644:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a648:	add	x2, x2, #0x709
  41a64c:	mov	x0, x19
  41a650:	ldr	x3, [x8, #8]
  41a654:	mov	w1, wzr
  41a658:	bl	41e064 <feof@plt+0x1b694>
  41a65c:	ldr	x8, [x19]
  41a660:	mov	x0, x19
  41a664:	ldr	x19, [sp, #16]
  41a668:	ldr	x1, [x8, #80]
  41a66c:	ldp	x29, x30, [sp], #32
  41a670:	b	422d00 <feof@plt+0x20330>
  41a674:	stp	x29, x30, [sp, #-64]!
  41a678:	str	x23, [sp, #16]
  41a67c:	stp	x22, x21, [sp, #32]
  41a680:	stp	x20, x19, [sp, #48]
  41a684:	mov	x29, sp
  41a688:	mov	x19, x0
  41a68c:	bl	41b258 <feof@plt+0x18888>
  41a690:	cbz	x0, 41a870 <feof@plt+0x17ea0>
  41a694:	ldr	w8, [x0, #8]
  41a698:	mov	x10, sp
  41a69c:	add	w9, w8, #0x2
  41a6a0:	add	x9, x9, #0xf
  41a6a4:	and	x9, x9, #0x1fffffff0
  41a6a8:	sub	x20, x10, x9
  41a6ac:	mov	sp, x20
  41a6b0:	ldr	x9, [x0, #16]
  41a6b4:	mov	x10, x9
  41a6b8:	ldrb	w11, [x10], #1
  41a6bc:	add	x8, x9, x8
  41a6c0:	sub	x8, x8, #0x1
  41a6c4:	cmp	w11, #0x4c
  41a6c8:	csel	x9, x9, x10, ne  // ne = any
  41a6cc:	add	x10, x9, #0x1
  41a6d0:	cmp	x10, x8
  41a6d4:	mov	x9, x20
  41a6d8:	b.cs	41a724 <feof@plt+0x17d54>  // b.hs, b.nlast
  41a6dc:	mov	x9, x20
  41a6e0:	b	41a6f8 <feof@plt+0x17d28>
  41a6e4:	mov	x10, x12
  41a6e8:	add	x10, x10, #0x1
  41a6ec:	cmp	x10, x8
  41a6f0:	strb	w11, [x9], #1
  41a6f4:	b.cs	41a724 <feof@plt+0x17d54>  // b.hs, b.nlast
  41a6f8:	ldrb	w11, [x10]
  41a6fc:	cmp	w11, #0x5c
  41a700:	b.ne	41a6e8 <feof@plt+0x17d18>  // b.any
  41a704:	mov	x12, x10
  41a708:	ldrb	w11, [x12, #1]!
  41a70c:	cmp	w11, #0x5c
  41a710:	b.eq	41a6e4 <feof@plt+0x17d14>  // b.none
  41a714:	cmp	w11, #0x22
  41a718:	b.eq	41a6e4 <feof@plt+0x17d14>  // b.none
  41a71c:	mov	w11, #0x5c                  	// #92
  41a720:	b	41a6e8 <feof@plt+0x17d18>
  41a724:	strb	wzr, [x9]
  41a728:	ldr	x8, [x19, #448]
  41a72c:	ldurb	w8, [x8, #-20]
  41a730:	cmp	w8, #0x16
  41a734:	b.eq	41a774 <feof@plt+0x17da4>  // b.none
  41a738:	mov	x0, x19
  41a73c:	bl	425308 <feof@plt+0x22938>
  41a740:	ldrb	w8, [x0, #4]
  41a744:	cmp	w8, #0x16
  41a748:	b.eq	41a774 <feof@plt+0x17da4>  // b.none
  41a74c:	ldr	x8, [x19, #144]
  41a750:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a754:	add	x2, x2, #0x709
  41a758:	mov	x0, x19
  41a75c:	ldr	x3, [x8, #8]
  41a760:	mov	w1, wzr
  41a764:	bl	41e064 <feof@plt+0x1b694>
  41a768:	b	41a774 <feof@plt+0x17da4>
  41a76c:	mov	x0, x19
  41a770:	bl	42da2c <feof@plt+0x2b05c>
  41a774:	ldr	x8, [x19, #136]
  41a778:	ldr	x8, [x8, #8]
  41a77c:	cbnz	x8, 41a76c <feof@plt+0x17d9c>
  41a780:	ldr	x8, [x19, #448]
  41a784:	ldurb	w8, [x8, #-20]
  41a788:	cmp	w8, #0x16
  41a78c:	b.eq	41a7a4 <feof@plt+0x17dd4>  // b.none
  41a790:	mov	x0, x19
  41a794:	bl	425308 <feof@plt+0x22938>
  41a798:	ldrb	w8, [x0, #4]
  41a79c:	cmp	w8, #0x16
  41a7a0:	b.ne	41a790 <feof@plt+0x17dc0>  // b.any
  41a7a4:	mov	w0, #0x20                  	// #32
  41a7a8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41a7ac:	mov	x21, x0
  41a7b0:	stp	xzr, xzr, [x0, #16]
  41a7b4:	mov	x0, x20
  41a7b8:	bl	402420 <strlen@plt>
  41a7bc:	add	x0, x0, #0x1
  41a7c0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41a7c4:	mov	x1, x20
  41a7c8:	mov	x22, x0
  41a7cc:	str	x0, [x21, #8]
  41a7d0:	bl	402590 <strcpy@plt>
  41a7d4:	ldr	x8, [x19, #1400]
  41a7d8:	mov	x0, x19
  41a7dc:	mov	x1, x22
  41a7e0:	str	x8, [x21]
  41a7e4:	bl	424f90 <feof@plt+0x225c0>
  41a7e8:	ldrb	w8, [x0, #18]
  41a7ec:	tst	w8, #0x3
  41a7f0:	b.eq	41a910 <feof@plt+0x17f40>  // b.none
  41a7f4:	mov	x20, x0
  41a7f8:	mov	x0, x19
  41a7fc:	mov	x1, x20
  41a800:	bl	42f2d8 <feof@plt+0x2c908>
  41a804:	mov	x22, x0
  41a808:	bl	402420 <strlen@plt>
  41a80c:	mov	x23, x0
  41a810:	add	x0, x0, #0x2
  41a814:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41a818:	mov	w8, #0xa                   	// #10
  41a81c:	str	x0, [x21, #16]
  41a820:	strh	w8, [x0, x23]
  41a824:	ldr	x8, [x20, #24]
  41a828:	ldrb	w9, [x21, #28]
  41a82c:	mov	x1, x22
  41a830:	mov	x2, x23
  41a834:	ldr	w8, [x8, #8]
  41a838:	str	w8, [x21, #24]
  41a83c:	ldr	x8, [x20, #24]
  41a840:	ldrb	w8, [x8, #19]
  41a844:	bfxil	w9, w8, #4, #1
  41a848:	strb	w9, [x21, #28]
  41a84c:	ldr	x8, [x20, #24]
  41a850:	and	w9, w9, #0xfffffffd
  41a854:	ldrb	w8, [x8, #19]
  41a858:	lsr	w8, w8, #4
  41a85c:	and	w8, w8, #0x2
  41a860:	orr	w8, w8, w9
  41a864:	strb	w8, [x21, #28]
  41a868:	bl	402390 <memcpy@plt>
  41a86c:	b	41a918 <feof@plt+0x17f48>
  41a870:	ldr	x8, [x19, #448]
  41a874:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a878:	add	x4, x4, #0xae8
  41a87c:	mov	w1, #0x3                   	// #3
  41a880:	ldur	w2, [x8, #-24]
  41a884:	mov	x0, x19
  41a888:	mov	w3, wzr
  41a88c:	bl	41e2c4 <feof@plt+0x1b8f4>
  41a890:	ldr	x8, [x19, #448]
  41a894:	ldurb	w8, [x8, #-20]
  41a898:	cmp	w8, #0x16
  41a89c:	b.eq	41a8dc <feof@plt+0x17f0c>  // b.none
  41a8a0:	mov	x0, x19
  41a8a4:	bl	425308 <feof@plt+0x22938>
  41a8a8:	ldrb	w8, [x0, #4]
  41a8ac:	cmp	w8, #0x16
  41a8b0:	b.eq	41a8dc <feof@plt+0x17f0c>  // b.none
  41a8b4:	ldr	x8, [x19, #144]
  41a8b8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41a8bc:	add	x2, x2, #0x709
  41a8c0:	mov	x0, x19
  41a8c4:	ldr	x3, [x8, #8]
  41a8c8:	mov	w1, wzr
  41a8cc:	bl	41e064 <feof@plt+0x1b694>
  41a8d0:	b	41a8dc <feof@plt+0x17f0c>
  41a8d4:	mov	x0, x19
  41a8d8:	bl	42da2c <feof@plt+0x2b05c>
  41a8dc:	ldr	x8, [x19, #136]
  41a8e0:	ldr	x8, [x8, #8]
  41a8e4:	cbnz	x8, 41a8d4 <feof@plt+0x17f04>
  41a8e8:	ldr	x8, [x19, #448]
  41a8ec:	ldurb	w8, [x8, #-20]
  41a8f0:	cmp	w8, #0x16
  41a8f4:	b.eq	41a91c <feof@plt+0x17f4c>  // b.none
  41a8f8:	mov	x0, x19
  41a8fc:	bl	425308 <feof@plt+0x22938>
  41a900:	ldrb	w8, [x0, #4]
  41a904:	cmp	w8, #0x16
  41a908:	b.ne	41a8f8 <feof@plt+0x17f28>  // b.any
  41a90c:	b	41a91c <feof@plt+0x17f4c>
  41a910:	mov	w8, #0x4                   	// #4
  41a914:	strb	w8, [x21, #28]
  41a918:	str	x21, [x19, #1400]
  41a91c:	mov	sp, x29
  41a920:	ldp	x20, x19, [sp, #48]
  41a924:	ldp	x22, x21, [sp, #32]
  41a928:	ldr	x23, [sp, #16]
  41a92c:	ldp	x29, x30, [sp], #64
  41a930:	ret
  41a934:	stp	x29, x30, [sp, #-64]!
  41a938:	stp	x24, x23, [sp, #16]
  41a93c:	stp	x22, x21, [sp, #32]
  41a940:	stp	x20, x19, [sp, #48]
  41a944:	ldr	x20, [x0, #1400]
  41a948:	mov	x29, sp
  41a94c:	mov	x19, x0
  41a950:	bl	41b258 <feof@plt+0x18888>
  41a954:	cbz	x0, 41aaa4 <feof@plt+0x180d4>
  41a958:	ldr	w8, [x0, #8]
  41a95c:	mov	x10, sp
  41a960:	add	w9, w8, #0x2
  41a964:	add	x9, x9, #0xf
  41a968:	and	x9, x9, #0x1fffffff0
  41a96c:	sub	x21, x10, x9
  41a970:	mov	sp, x21
  41a974:	ldr	x9, [x0, #16]
  41a978:	mov	x10, x9
  41a97c:	ldrb	w11, [x10], #1
  41a980:	add	x8, x9, x8
  41a984:	sub	x8, x8, #0x1
  41a988:	cmp	w11, #0x4c
  41a98c:	csel	x9, x9, x10, ne  // ne = any
  41a990:	add	x10, x9, #0x1
  41a994:	cmp	x10, x8
  41a998:	mov	x9, x21
  41a99c:	b.cs	41a9e8 <feof@plt+0x18018>  // b.hs, b.nlast
  41a9a0:	mov	x9, x21
  41a9a4:	b	41a9bc <feof@plt+0x17fec>
  41a9a8:	mov	x10, x12
  41a9ac:	add	x10, x10, #0x1
  41a9b0:	cmp	x10, x8
  41a9b4:	strb	w11, [x9], #1
  41a9b8:	b.cs	41a9e8 <feof@plt+0x18018>  // b.hs, b.nlast
  41a9bc:	ldrb	w11, [x10]
  41a9c0:	cmp	w11, #0x5c
  41a9c4:	b.ne	41a9ac <feof@plt+0x17fdc>  // b.any
  41a9c8:	mov	x12, x10
  41a9cc:	ldrb	w11, [x12, #1]!
  41a9d0:	cmp	w11, #0x5c
  41a9d4:	b.eq	41a9a8 <feof@plt+0x17fd8>  // b.none
  41a9d8:	cmp	w11, #0x22
  41a9dc:	b.eq	41a9a8 <feof@plt+0x17fd8>  // b.none
  41a9e0:	mov	w11, #0x5c                  	// #92
  41a9e4:	b	41a9ac <feof@plt+0x17fdc>
  41a9e8:	strb	wzr, [x9]
  41a9ec:	ldr	x8, [x19, #448]
  41a9f0:	ldurb	w8, [x8, #-20]
  41a9f4:	cmp	w8, #0x16
  41a9f8:	b.eq	41aa38 <feof@plt+0x18068>  // b.none
  41a9fc:	mov	x0, x19
  41aa00:	bl	425308 <feof@plt+0x22938>
  41aa04:	ldrb	w8, [x0, #4]
  41aa08:	cmp	w8, #0x16
  41aa0c:	b.eq	41aa38 <feof@plt+0x18068>  // b.none
  41aa10:	ldr	x8, [x19, #144]
  41aa14:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41aa18:	add	x2, x2, #0x709
  41aa1c:	mov	x0, x19
  41aa20:	ldr	x3, [x8, #8]
  41aa24:	mov	w1, wzr
  41aa28:	bl	41e064 <feof@plt+0x1b694>
  41aa2c:	b	41aa38 <feof@plt+0x18068>
  41aa30:	mov	x0, x19
  41aa34:	bl	42da2c <feof@plt+0x2b05c>
  41aa38:	ldr	x8, [x19, #136]
  41aa3c:	ldr	x8, [x8, #8]
  41aa40:	cbnz	x8, 41aa30 <feof@plt+0x18060>
  41aa44:	ldr	x8, [x19, #448]
  41aa48:	ldurb	w8, [x8, #-20]
  41aa4c:	cmp	w8, #0x16
  41aa50:	b.eq	41aa68 <feof@plt+0x18098>  // b.none
  41aa54:	mov	x0, x19
  41aa58:	bl	425308 <feof@plt+0x22938>
  41aa5c:	ldrb	w8, [x0, #4]
  41aa60:	cmp	w8, #0x16
  41aa64:	b.ne	41aa54 <feof@plt+0x18084>  // b.any
  41aa68:	cbz	x20, 41ab40 <feof@plt+0x18170>
  41aa6c:	ldr	x22, [x20, #8]
  41aa70:	mov	x1, x21
  41aa74:	mov	x0, x22
  41aa78:	bl	402820 <strcmp@plt>
  41aa7c:	cbz	w0, 41ab58 <feof@plt+0x18188>
  41aa80:	mov	x23, x20
  41aa84:	ldr	x20, [x20]
  41aa88:	cbz	x20, 41ab40 <feof@plt+0x18170>
  41aa8c:	ldr	x22, [x20, #8]
  41aa90:	mov	x1, x21
  41aa94:	mov	x0, x22
  41aa98:	bl	402820 <strcmp@plt>
  41aa9c:	cbnz	w0, 41aa80 <feof@plt+0x180b0>
  41aaa0:	b	41ab5c <feof@plt+0x1818c>
  41aaa4:	ldr	x8, [x19, #448]
  41aaa8:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41aaac:	add	x4, x4, #0xb0d
  41aab0:	mov	w1, #0x3                   	// #3
  41aab4:	ldur	w2, [x8, #-24]
  41aab8:	mov	x0, x19
  41aabc:	mov	w3, wzr
  41aac0:	bl	41e2c4 <feof@plt+0x1b8f4>
  41aac4:	ldr	x8, [x19, #448]
  41aac8:	ldurb	w8, [x8, #-20]
  41aacc:	cmp	w8, #0x16
  41aad0:	b.eq	41ab10 <feof@plt+0x18140>  // b.none
  41aad4:	mov	x0, x19
  41aad8:	bl	425308 <feof@plt+0x22938>
  41aadc:	ldrb	w8, [x0, #4]
  41aae0:	cmp	w8, #0x16
  41aae4:	b.eq	41ab10 <feof@plt+0x18140>  // b.none
  41aae8:	ldr	x8, [x19, #144]
  41aaec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41aaf0:	add	x2, x2, #0x709
  41aaf4:	mov	x0, x19
  41aaf8:	ldr	x3, [x8, #8]
  41aafc:	mov	w1, wzr
  41ab00:	bl	41e064 <feof@plt+0x1b694>
  41ab04:	b	41ab10 <feof@plt+0x18140>
  41ab08:	mov	x0, x19
  41ab0c:	bl	42da2c <feof@plt+0x2b05c>
  41ab10:	ldr	x8, [x19, #136]
  41ab14:	ldr	x8, [x8, #8]
  41ab18:	cbnz	x8, 41ab08 <feof@plt+0x18138>
  41ab1c:	ldr	x8, [x19, #448]
  41ab20:	ldurb	w8, [x8, #-20]
  41ab24:	cmp	w8, #0x16
  41ab28:	b.eq	41ab40 <feof@plt+0x18170>  // b.none
  41ab2c:	mov	x0, x19
  41ab30:	bl	425308 <feof@plt+0x22938>
  41ab34:	ldrb	w8, [x0, #4]
  41ab38:	cmp	w8, #0x16
  41ab3c:	b.ne	41ab2c <feof@plt+0x1815c>  // b.any
  41ab40:	mov	sp, x29
  41ab44:	ldp	x20, x19, [sp, #48]
  41ab48:	ldp	x22, x21, [sp, #32]
  41ab4c:	ldp	x24, x23, [sp, #16]
  41ab50:	ldp	x29, x30, [sp], #64
  41ab54:	ret
  41ab58:	mov	x23, xzr
  41ab5c:	ldr	x8, [x20]
  41ab60:	add	x9, x19, #0x578
  41ab64:	cmp	x23, #0x0
  41ab68:	csel	x9, x9, x23, eq  // eq = none
  41ab6c:	mov	x0, x19
  41ab70:	mov	x1, x22
  41ab74:	str	x8, [x9]
  41ab78:	bl	424f90 <feof@plt+0x225c0>
  41ab7c:	cbz	x0, 41ad4c <feof@plt+0x1837c>
  41ab80:	ldr	x8, [x19, #1024]
  41ab84:	mov	x21, x0
  41ab88:	cbz	x8, 41ab94 <feof@plt+0x181c4>
  41ab8c:	mov	x0, x19
  41ab90:	blr	x8
  41ab94:	ldrb	w8, [x21, #18]
  41ab98:	tbz	w8, #1, 41abd4 <feof@plt+0x18204>
  41ab9c:	ldr	x8, [x19, #944]
  41aba0:	cbz	x8, 41abb4 <feof@plt+0x181e4>
  41aba4:	ldr	w1, [x19, #48]
  41aba8:	mov	x0, x19
  41abac:	mov	x2, x21
  41abb0:	blr	x8
  41abb4:	ldrb	w8, [x19, #1151]
  41abb8:	cbz	w8, 41abcc <feof@plt+0x181fc>
  41abbc:	mov	x0, x19
  41abc0:	mov	x1, x21
  41abc4:	mov	x2, xzr
  41abc8:	bl	42d32c <feof@plt+0x2a95c>
  41abcc:	mov	x0, x21
  41abd0:	bl	42e3d4 <feof@plt+0x2ba04>
  41abd4:	ldrb	w8, [x20, #28]
  41abd8:	tbnz	w8, #2, 41ad4c <feof@plt+0x1837c>
  41abdc:	ldr	x21, [x20, #16]
  41abe0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41abe4:	add	x1, x1, #0xb31
  41abe8:	mov	x0, x21
  41abec:	bl	4025e0 <strcspn@plt>
  41abf0:	mov	x22, x0
  41abf4:	mov	x0, x19
  41abf8:	mov	x1, x21
  41abfc:	mov	w2, w22
  41ac00:	bl	4245e4 <feof@plt+0x21c14>
  41ac04:	ldr	x8, [x20, #16]
  41ac08:	mov	x21, x0
  41ac0c:	mov	w1, #0xa                   	// #10
  41ac10:	add	x22, x8, w22, sxtw
  41ac14:	mov	x0, x22
  41ac18:	bl	402500 <strchr@plt>
  41ac1c:	ldr	x9, [x19, #840]
  41ac20:	ldr	x8, [x19, #832]
  41ac24:	mov	x23, x0
  41ac28:	sub	x9, x9, x8
  41ac2c:	cmp	x9, #0xc7
  41ac30:	b.hi	41ac44 <feof@plt+0x18274>  // b.pmore
  41ac34:	add	x0, x19, #0x328
  41ac38:	mov	w1, #0xc8                  	// #200
  41ac3c:	bl	45037c <_obstack_newchunk@@Base>
  41ac40:	ldr	x8, [x19, #832]
  41ac44:	ldr	x24, [x19, #824]
  41ac48:	add	x8, x8, #0xc8
  41ac4c:	str	x8, [x19, #832]
  41ac50:	cmp	x8, x24
  41ac54:	b.ne	41ac64 <feof@plt+0x18294>  // b.any
  41ac58:	ldrb	w9, [x19, #888]
  41ac5c:	orr	w9, w9, #0x2
  41ac60:	strb	w9, [x19, #888]
  41ac64:	ldr	x10, [x19, #856]
  41ac68:	ldr	x11, [x19, #816]
  41ac6c:	ldr	x9, [x19, #840]
  41ac70:	add	x8, x10, x8
  41ac74:	bic	x8, x8, x10
  41ac78:	sub	x10, x8, x11
  41ac7c:	sub	x11, x9, x11
  41ac80:	cmp	x10, x11
  41ac84:	str	x8, [x19, #832]
  41ac88:	b.ls	41ac94 <feof@plt+0x182c4>  // b.plast
  41ac8c:	mov	x8, x9
  41ac90:	str	x9, [x19, #832]
  41ac94:	str	x8, [x19, #824]
  41ac98:	movi	v0.2d, #0x0
  41ac9c:	mov	w8, #0x2                   	// #2
  41aca0:	str	xzr, [x24, #192]
  41aca4:	stp	q0, q0, [x24, #160]
  41aca8:	stp	q0, q0, [x24, #128]
  41acac:	stp	q0, q0, [x24, #96]
  41acb0:	stp	q0, q0, [x24, #64]
  41acb4:	stp	q0, q0, [x24, #32]
  41acb8:	stp	q0, q0, [x24]
  41acbc:	stp	x22, x22, [x24, #16]
  41acc0:	str	x23, [x24, #32]
  41acc4:	strb	w8, [x24, #105]
  41acc8:	ldr	x8, [x19]
  41accc:	mov	w22, #0x1                   	// #1
  41acd0:	strb	w22, [x24, #104]
  41acd4:	str	x8, [x24, #72]
  41acd8:	str	x24, [x19]
  41acdc:	cbz	x24, 41ad78 <feof@plt+0x183a8>
  41ace0:	mov	x0, x19
  41ace4:	bl	4246a8 <feof@plt+0x21cd8>
  41ace8:	mov	x0, x19
  41acec:	mov	x1, x21
  41acf0:	strb	w22, [x24, #106]
  41acf4:	bl	42e5b8 <feof@plt+0x2bbe8>
  41acf8:	tbz	w0, #0, 41ad90 <feof@plt+0x183c0>
  41acfc:	mov	x0, x19
  41ad00:	bl	41c0c4 <feof@plt+0x196f4>
  41ad04:	ldr	w8, [x20, #24]
  41ad08:	ldr	x9, [x21, #24]
  41ad0c:	str	w8, [x9, #8]
  41ad10:	ldr	x8, [x21, #24]
  41ad14:	ldrb	w9, [x20, #28]
  41ad18:	ldrb	w10, [x8, #19]
  41ad1c:	ubfiz	w9, w9, #4, #1
  41ad20:	and	w10, w10, #0xffffffef
  41ad24:	orr	w9, w10, w9
  41ad28:	strb	w9, [x8, #19]
  41ad2c:	ldr	x8, [x21, #24]
  41ad30:	ldrb	w9, [x20, #28]
  41ad34:	ldrb	w10, [x8, #19]
  41ad38:	lsl	w9, w9, #4
  41ad3c:	and	w9, w9, #0x20
  41ad40:	and	w10, w10, #0xffffffdf
  41ad44:	orr	w9, w10, w9
  41ad48:	strb	w9, [x8, #19]
  41ad4c:	ldr	x0, [x20, #16]
  41ad50:	bl	4024c0 <free@plt>
  41ad54:	ldr	x0, [x20, #8]
  41ad58:	bl	4024c0 <free@plt>
  41ad5c:	mov	x0, x20
  41ad60:	mov	sp, x29
  41ad64:	ldp	x20, x19, [sp, #48]
  41ad68:	ldp	x22, x21, [sp, #32]
  41ad6c:	ldp	x24, x23, [sp, #16]
  41ad70:	ldp	x29, x30, [sp], #64
  41ad74:	b	4024c0 <free@plt>
  41ad78:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ad7c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ad80:	add	x0, x0, #0xb35
  41ad84:	add	x2, x2, #0xb4f
  41ad88:	mov	w1, #0x9ac                 	// #2476
  41ad8c:	bl	404ac4 <feof@plt+0x20f4>
  41ad90:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ad94:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ad98:	add	x0, x0, #0xb35
  41ad9c:	add	x2, x2, #0xb4f
  41ada0:	mov	w1, #0x9a8                 	// #2472
  41ada4:	bl	404ac4 <feof@plt+0x20f4>
  41ada8:	stp	x29, x30, [sp, #-48]!
  41adac:	stp	x20, x19, [sp, #32]
  41adb0:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41adb4:	mov	x19, x0
  41adb8:	mov	w8, #0x1                   	// #1
  41adbc:	add	x20, x20, #0xb87
  41adc0:	str	x21, [sp, #16]
  41adc4:	mov	x29, sp
  41adc8:	strb	w8, [x0, #23]
  41adcc:	b	41ade4 <feof@plt+0x18414>
  41add0:	mov	x0, x21
  41add4:	bl	42e3d4 <feof@plt+0x2ba04>
  41add8:	ldrh	w8, [x21, #18]
  41addc:	orr	w8, w8, #0x18
  41ade0:	strh	w8, [x21, #18]
  41ade4:	mov	x0, x19
  41ade8:	bl	425308 <feof@plt+0x22938>
  41adec:	ldrb	w8, [x0, #4]
  41adf0:	cmp	w8, #0x35
  41adf4:	b.ne	41ae20 <feof@plt+0x18450>  // b.any
  41adf8:	ldr	x21, [x0, #8]
  41adfc:	ldrh	w8, [x21, #18]
  41ae00:	tbnz	w8, #3, 41ade4 <feof@plt+0x18414>
  41ae04:	tbz	w8, #1, 41add0 <feof@plt+0x18400>
  41ae08:	ldr	x3, [x21]
  41ae0c:	mov	x0, x19
  41ae10:	mov	w1, wzr
  41ae14:	mov	x2, x20
  41ae18:	bl	41de04 <feof@plt+0x1b434>
  41ae1c:	b	41add0 <feof@plt+0x18400>
  41ae20:	cmp	w8, #0x16
  41ae24:	b.eq	41ae3c <feof@plt+0x1846c>  // b.none
  41ae28:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ae2c:	add	x2, x2, #0xb62
  41ae30:	mov	w1, #0x3                   	// #3
  41ae34:	mov	x0, x19
  41ae38:	bl	41de04 <feof@plt+0x1b434>
  41ae3c:	strb	wzr, [x19, #23]
  41ae40:	ldp	x20, x19, [sp, #32]
  41ae44:	ldr	x21, [sp, #16]
  41ae48:	ldp	x29, x30, [sp], #48
  41ae4c:	ret
  41ae50:	stp	x29, x30, [sp, #-32]!
  41ae54:	ldr	x8, [x0, #40]
  41ae58:	str	x19, [sp, #16]
  41ae5c:	mov	x19, x0
  41ae60:	mov	x29, sp
  41ae64:	ldr	w8, [x8, #48]
  41ae68:	cmp	w8, #0x1
  41ae6c:	b.ne	41ae8c <feof@plt+0x184bc>  // b.any
  41ae70:	mov	x0, x19
  41ae74:	ldr	x19, [sp, #16]
  41ae78:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ae7c:	add	x2, x2, #0xba5
  41ae80:	mov	w1, wzr
  41ae84:	ldp	x29, x30, [sp], #32
  41ae88:	b	41de04 <feof@plt+0x1b434>
  41ae8c:	ldr	x8, [x19, #448]
  41ae90:	ldurb	w8, [x8, #-20]
  41ae94:	cmp	w8, #0x16
  41ae98:	b.eq	41aed8 <feof@plt+0x18508>  // b.none
  41ae9c:	mov	x0, x19
  41aea0:	bl	425308 <feof@plt+0x22938>
  41aea4:	ldrb	w8, [x0, #4]
  41aea8:	cmp	w8, #0x16
  41aeac:	b.eq	41aed8 <feof@plt+0x18508>  // b.none
  41aeb0:	ldr	x8, [x19, #144]
  41aeb4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41aeb8:	add	x2, x2, #0x709
  41aebc:	mov	x0, x19
  41aec0:	ldr	x3, [x8, #8]
  41aec4:	mov	w1, wzr
  41aec8:	bl	41e064 <feof@plt+0x1b694>
  41aecc:	b	41aed8 <feof@plt+0x18508>
  41aed0:	mov	x0, x19
  41aed4:	bl	42da2c <feof@plt+0x2b05c>
  41aed8:	ldr	x8, [x19, #136]
  41aedc:	ldr	x8, [x8, #8]
  41aee0:	cbnz	x8, 41aed0 <feof@plt+0x18500>
  41aee4:	ldr	x8, [x19, #448]
  41aee8:	ldurb	w8, [x8, #-20]
  41aeec:	cmp	w8, #0x16
  41aef0:	b.eq	41af08 <feof@plt+0x18538>  // b.none
  41aef4:	mov	x0, x19
  41aef8:	bl	425308 <feof@plt+0x22938>
  41aefc:	ldrb	w8, [x0, #4]
  41af00:	cmp	w8, #0x16
  41af04:	b.ne	41aef4 <feof@plt+0x18524>  // b.any
  41af08:	mov	x0, x19
  41af0c:	ldr	x19, [sp, #16]
  41af10:	mov	w1, #0x1                   	// #1
  41af14:	mov	w2, wzr
  41af18:	ldp	x29, x30, [sp], #32
  41af1c:	b	4233a4 <feof@plt+0x209d4>
  41af20:	sub	sp, sp, #0x40
  41af24:	stp	x29, x30, [sp, #16]
  41af28:	add	x29, sp, #0x10
  41af2c:	sub	x1, x29, #0x4
  41af30:	add	x3, sp, #0x8
  41af34:	mov	x2, xzr
  41af38:	stp	x22, x21, [sp, #32]
  41af3c:	stp	x20, x19, [sp, #48]
  41af40:	mov	x20, x0
  41af44:	bl	41d57c <feof@plt+0x1abac>
  41af48:	cbz	x0, 41b01c <feof@plt+0x1864c>
  41af4c:	ldur	w2, [x29, #-4]
  41af50:	mov	x19, x0
  41af54:	mov	x0, x20
  41af58:	mov	x1, x19
  41af5c:	bl	423580 <feof@plt+0x20bb0>
  41af60:	tbnz	w0, #31, 41affc <feof@plt+0x1862c>
  41af64:	cbz	w0, 41b014 <feof@plt+0x18644>
  41af68:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41af6c:	add	x2, x2, #0xbf3
  41af70:	mov	x0, x20
  41af74:	mov	w1, wzr
  41af78:	mov	x3, x19
  41af7c:	bl	41de04 <feof@plt+0x1b434>
  41af80:	mov	x0, x20
  41af84:	bl	42db34 <feof@plt+0x2b164>
  41af88:	ldrb	w8, [x0, #4]
  41af8c:	cmp	w8, #0x16
  41af90:	b.eq	41b014 <feof@plt+0x18644>  // b.none
  41af94:	mov	w1, #0x1                   	// #1
  41af98:	mov	x0, x20
  41af9c:	bl	42e2c0 <feof@plt+0x2b8f0>
  41afa0:	ldr	x8, [x20, #448]
  41afa4:	ldrb	w9, [x20, #24]
  41afa8:	mov	x0, x20
  41afac:	mov	x1, xzr
  41afb0:	ldur	w21, [x8, #-24]
  41afb4:	add	w8, w9, #0x1
  41afb8:	strb	w8, [x20, #24]
  41afbc:	bl	429218 <feof@plt+0x26848>
  41afc0:	ldrb	w8, [x20, #24]
  41afc4:	mov	x22, x0
  41afc8:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41afcc:	add	x4, x4, #0xf6c
  41afd0:	sub	w8, w8, #0x1
  41afd4:	mov	x0, x20
  41afd8:	mov	w1, wzr
  41afdc:	mov	w2, w21
  41afe0:	mov	w3, wzr
  41afe4:	mov	x5, x22
  41afe8:	strb	w8, [x20, #24]
  41afec:	bl	41e2c4 <feof@plt+0x1b8f4>
  41aff0:	mov	x0, x22
  41aff4:	bl	4024c0 <free@plt>
  41aff8:	b	41b014 <feof@plt+0x18644>
  41affc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b000:	add	x2, x2, #0xbd8
  41b004:	mov	x0, x20
  41b008:	mov	w1, wzr
  41b00c:	mov	x3, x19
  41b010:	bl	41de04 <feof@plt+0x1b434>
  41b014:	mov	x0, x19
  41b018:	bl	4024c0 <free@plt>
  41b01c:	ldp	x20, x19, [sp, #48]
  41b020:	ldp	x22, x21, [sp, #32]
  41b024:	ldp	x29, x30, [sp, #16]
  41b028:	add	sp, sp, #0x40
  41b02c:	ret
  41b030:	mov	w1, wzr
  41b034:	b	41dd50 <feof@plt+0x1b380>
  41b038:	mov	w1, #0x1                   	// #1
  41b03c:	b	41dd50 <feof@plt+0x1b380>
  41b040:	stp	x29, x30, [sp, #-32]!
  41b044:	str	x19, [sp, #16]
  41b048:	mov	x19, x0
  41b04c:	ldr	x0, [x0, #896]
  41b050:	mov	x29, sp
  41b054:	bl	41b084 <feof@plt+0x186b4>
  41b058:	sbfiz	x0, x0, #3, #32
  41b05c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41b060:	ldr	x8, [x19, #896]
  41b064:	mov	x19, x0
  41b068:	mov	x1, x19
  41b06c:	mov	x0, x8
  41b070:	bl	41b0d8 <feof@plt+0x18708>
  41b074:	mov	x0, x19
  41b078:	ldr	x19, [sp, #16]
  41b07c:	ldp	x29, x30, [sp], #32
  41b080:	ret
  41b084:	stp	x29, x30, [sp, #-32]!
  41b088:	stp	x20, x19, [sp, #16]
  41b08c:	mov	x29, sp
  41b090:	cbz	x0, 41b0c4 <feof@plt+0x186f4>
  41b094:	mov	x19, x0
  41b098:	mov	w20, wzr
  41b09c:	b	41b0ac <feof@plt+0x186dc>
  41b0a0:	ldr	x19, [x19]
  41b0a4:	add	w20, w20, #0x1
  41b0a8:	cbz	x19, 41b0c8 <feof@plt+0x186f8>
  41b0ac:	ldrb	w8, [x19, #16]
  41b0b0:	cbz	w8, 41b0a0 <feof@plt+0x186d0>
  41b0b4:	ldr	x0, [x19, #24]
  41b0b8:	bl	41b084 <feof@plt+0x186b4>
  41b0bc:	add	w20, w0, w20
  41b0c0:	b	41b0a0 <feof@plt+0x186d0>
  41b0c4:	mov	w20, wzr
  41b0c8:	mov	w0, w20
  41b0cc:	ldp	x20, x19, [sp, #16]
  41b0d0:	ldp	x29, x30, [sp], #32
  41b0d4:	ret
  41b0d8:	stp	x29, x30, [sp, #-32]!
  41b0dc:	stp	x20, x19, [sp, #16]
  41b0e0:	mov	x19, x1
  41b0e4:	mov	x29, sp
  41b0e8:	cbz	x0, 41b130 <feof@plt+0x18760>
  41b0ec:	mov	x20, x0
  41b0f0:	b	41b114 <feof@plt+0x18744>
  41b0f4:	ldr	x8, [x20, #8]
  41b0f8:	ldr	w1, [x8, #8]
  41b0fc:	ldr	x0, [x8]
  41b100:	add	w2, w1, #0x1
  41b104:	bl	45076c <_obstack_memory_used@@Base+0x1d4>
  41b108:	str	x0, [x19], #8
  41b10c:	ldr	x20, [x20]
  41b110:	cbz	x20, 41b130 <feof@plt+0x18760>
  41b114:	ldrb	w8, [x20, #16]
  41b118:	cbz	w8, 41b0f4 <feof@plt+0x18724>
  41b11c:	ldr	x0, [x20, #24]
  41b120:	mov	x1, x19
  41b124:	bl	41b0d8 <feof@plt+0x18708>
  41b128:	mov	x19, x0
  41b12c:	b	41b0f4 <feof@plt+0x18724>
  41b130:	mov	x0, x19
  41b134:	ldp	x20, x19, [sp, #16]
  41b138:	ldp	x29, x30, [sp], #32
  41b13c:	ret
  41b140:	stp	x29, x30, [sp, #-32]!
  41b144:	ldr	x8, [x0, #896]
  41b148:	str	x19, [sp, #16]
  41b14c:	mov	x19, x1
  41b150:	mov	x2, x19
  41b154:	mov	x1, x8
  41b158:	mov	x29, sp
  41b15c:	bl	41b170 <feof@plt+0x187a0>
  41b160:	mov	x0, x19
  41b164:	ldr	x19, [sp, #16]
  41b168:	ldp	x29, x30, [sp], #32
  41b16c:	b	4024c0 <free@plt>
  41b170:	stp	x29, x30, [sp, #-48]!
  41b174:	stp	x20, x19, [sp, #32]
  41b178:	mov	x19, x2
  41b17c:	stp	x22, x21, [sp, #16]
  41b180:	mov	x29, sp
  41b184:	cbz	x1, 41b1e4 <feof@plt+0x18814>
  41b188:	mov	x20, x1
  41b18c:	mov	x21, x0
  41b190:	b	41b1c4 <feof@plt+0x187f4>
  41b194:	ldr	x22, [x19]
  41b198:	mov	x0, x22
  41b19c:	bl	402420 <strlen@plt>
  41b1a0:	mov	x2, x0
  41b1a4:	mov	x0, x21
  41b1a8:	mov	x1, x22
  41b1ac:	bl	4245e4 <feof@plt+0x21c14>
  41b1b0:	str	x0, [x20, #8]
  41b1b4:	ldr	x0, [x19], #8
  41b1b8:	bl	4024c0 <free@plt>
  41b1bc:	ldr	x20, [x20]
  41b1c0:	cbz	x20, 41b1e4 <feof@plt+0x18814>
  41b1c4:	ldrb	w8, [x20, #16]
  41b1c8:	cbz	w8, 41b194 <feof@plt+0x187c4>
  41b1cc:	ldr	x1, [x20, #24]
  41b1d0:	mov	x0, x21
  41b1d4:	mov	x2, x19
  41b1d8:	bl	41b170 <feof@plt+0x187a0>
  41b1dc:	mov	x19, x0
  41b1e0:	b	41b194 <feof@plt+0x187c4>
  41b1e4:	mov	x0, x19
  41b1e8:	ldp	x20, x19, [sp, #32]
  41b1ec:	ldp	x22, x21, [sp, #16]
  41b1f0:	ldp	x29, x30, [sp], #48
  41b1f4:	ret
  41b1f8:	stp	x29, x30, [sp, #-32]!
  41b1fc:	stp	x20, x19, [sp, #16]
  41b200:	mov	x29, sp
  41b204:	mov	w20, w1
  41b208:	mov	x19, x0
  41b20c:	bl	41b258 <feof@plt+0x18888>
  41b210:	mov	w8, #0x53                  	// #83
  41b214:	strb	w8, [x19, #156]
  41b218:	cbz	x0, 41b234 <feof@plt+0x18864>
  41b21c:	add	x1, x0, #0x8
  41b220:	mov	x0, x19
  41b224:	mov	w2, w20
  41b228:	bl	41b330 <feof@plt+0x18960>
  41b22c:	mov	w0, #0x1                   	// #1
  41b230:	b	41b24c <feof@plt+0x1887c>
  41b234:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b238:	add	x2, x2, #0x52d
  41b23c:	mov	w1, #0x3                   	// #3
  41b240:	mov	x0, x19
  41b244:	bl	41de04 <feof@plt+0x1b434>
  41b248:	mov	w0, wzr
  41b24c:	ldp	x20, x19, [sp, #16]
  41b250:	ldp	x29, x30, [sp], #32
  41b254:	ret
  41b258:	stp	x29, x30, [sp, #-48]!
  41b25c:	stp	x20, x19, [sp, #32]
  41b260:	mov	x19, x0
  41b264:	str	x21, [sp, #16]
  41b268:	mov	x29, sp
  41b26c:	mov	x0, x19
  41b270:	bl	42db34 <feof@plt+0x2b164>
  41b274:	ldrb	w8, [x0, #4]
  41b278:	cmp	w8, #0x53
  41b27c:	b.eq	41b26c <feof@plt+0x1889c>  // b.none
  41b280:	cmp	w8, #0x16
  41b284:	b.ne	41b29c <feof@plt+0x188cc>  // b.any
  41b288:	mov	x20, x0
  41b28c:	mov	w1, #0x1                   	// #1
  41b290:	mov	x0, x19
  41b294:	bl	42e2c0 <feof@plt+0x2b8f0>
  41b298:	ldrb	w8, [x20, #4]
  41b29c:	cmp	w8, #0x14
  41b2a0:	b.ne	41b31c <feof@plt+0x1894c>  // b.any
  41b2a4:	mov	x0, x19
  41b2a8:	bl	42db34 <feof@plt+0x2b164>
  41b2ac:	ldrb	w8, [x0, #4]
  41b2b0:	cmp	w8, #0x53
  41b2b4:	b.eq	41b2a4 <feof@plt+0x188d4>  // b.none
  41b2b8:	mov	x20, x0
  41b2bc:	cmp	w8, #0x16
  41b2c0:	b.ne	41b2d4 <feof@plt+0x18904>  // b.any
  41b2c4:	mov	w1, #0x1                   	// #1
  41b2c8:	mov	x0, x19
  41b2cc:	bl	42e2c0 <feof@plt+0x2b8f0>
  41b2d0:	ldrb	w8, [x20, #4]
  41b2d4:	sub	w8, w8, #0x3e
  41b2d8:	cmp	w8, #0x4
  41b2dc:	b.hi	41b31c <feof@plt+0x1894c>  // b.pmore
  41b2e0:	mov	x0, x19
  41b2e4:	bl	42db34 <feof@plt+0x2b164>
  41b2e8:	ldrb	w8, [x0, #4]
  41b2ec:	cmp	w8, #0x53
  41b2f0:	b.eq	41b2e0 <feof@plt+0x18910>  // b.none
  41b2f4:	cmp	w8, #0x16
  41b2f8:	b.ne	41b310 <feof@plt+0x18940>  // b.any
  41b2fc:	mov	x21, x0
  41b300:	mov	w1, #0x1                   	// #1
  41b304:	mov	x0, x19
  41b308:	bl	42e2c0 <feof@plt+0x2b8f0>
  41b30c:	ldrb	w8, [x21, #4]
  41b310:	cmp	w8, #0x15
  41b314:	csel	x0, x20, xzr, eq  // eq = none
  41b318:	b	41b320 <feof@plt+0x18950>
  41b31c:	mov	x0, xzr
  41b320:	ldp	x20, x19, [sp, #32]
  41b324:	ldr	x21, [sp, #16]
  41b328:	ldp	x29, x30, [sp], #48
  41b32c:	ret
  41b330:	stp	x29, x30, [sp, #-96]!
  41b334:	stp	x28, x27, [sp, #16]
  41b338:	stp	x26, x25, [sp, #32]
  41b33c:	stp	x24, x23, [sp, #48]
  41b340:	stp	x22, x21, [sp, #64]
  41b344:	stp	x20, x19, [sp, #80]
  41b348:	ldr	w8, [x1]
  41b34c:	mov	x10, sp
  41b350:	mov	w20, w2
  41b354:	mov	x19, x0
  41b358:	sub	w9, w8, #0x1
  41b35c:	add	x9, x9, #0xf
  41b360:	and	x9, x9, #0x1fffffff0
  41b364:	sub	x21, x10, x9
  41b368:	mov	x29, sp
  41b36c:	mov	sp, x21
  41b370:	ldr	x9, [x1, #8]
  41b374:	mov	x22, x21
  41b378:	mov	x10, x9
  41b37c:	ldrb	w11, [x10], #1
  41b380:	add	x8, x9, x8
  41b384:	sub	x8, x8, #0x1
  41b388:	cmp	w11, #0x4c
  41b38c:	csel	x9, x9, x10, ne  // ne = any
  41b390:	add	x9, x9, #0x1
  41b394:	cmp	x9, x8
  41b398:	b.cs	41b3e4 <feof@plt+0x18a14>  // b.hs, b.nlast
  41b39c:	mov	x22, x21
  41b3a0:	b	41b3b8 <feof@plt+0x189e8>
  41b3a4:	mov	x9, x11
  41b3a8:	add	x9, x9, #0x1
  41b3ac:	cmp	x9, x8
  41b3b0:	strb	w10, [x22], #1
  41b3b4:	b.cs	41b3e4 <feof@plt+0x18a14>  // b.hs, b.nlast
  41b3b8:	ldrb	w10, [x9]
  41b3bc:	cmp	w10, #0x5c
  41b3c0:	b.ne	41b3a8 <feof@plt+0x189d8>  // b.any
  41b3c4:	mov	x11, x9
  41b3c8:	ldrb	w10, [x11, #1]!
  41b3cc:	cmp	w10, #0x5c
  41b3d0:	b.eq	41b3a4 <feof@plt+0x189d4>  // b.none
  41b3d4:	cmp	w10, #0x22
  41b3d8:	b.eq	41b3a4 <feof@plt+0x189d4>  // b.none
  41b3dc:	mov	w10, #0x5c                  	// #92
  41b3e0:	b	41b3a8 <feof@plt+0x189d8>
  41b3e4:	mov	w8, #0xa                   	// #10
  41b3e8:	strb	w8, [x22]
  41b3ec:	ldr	x23, [x19, #136]
  41b3f0:	ldr	x24, [x19, #448]
  41b3f4:	ldr	x25, [x19, #488]
  41b3f8:	mov	w0, #0x1                   	// #1
  41b3fc:	mov	w1, #0x38                  	// #56
  41b400:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  41b404:	ldr	x8, [x19, #840]
  41b408:	ldr	x9, [x19, #832]
  41b40c:	str	x0, [x19, #136]
  41b410:	sub	x8, x8, x9
  41b414:	cmp	x8, #0xc7
  41b418:	b.hi	41b42c <feof@plt+0x18a5c>  // b.pmore
  41b41c:	add	x0, x19, #0x328
  41b420:	mov	w1, #0xc8                  	// #200
  41b424:	bl	45037c <_obstack_newchunk@@Base>
  41b428:	ldr	x9, [x19, #832]
  41b42c:	ldr	x8, [x19, #824]
  41b430:	add	x9, x9, #0xc8
  41b434:	str	x9, [x19, #832]
  41b438:	cmp	x9, x8
  41b43c:	b.ne	41b44c <feof@plt+0x18a7c>  // b.any
  41b440:	ldrb	w10, [x19, #888]
  41b444:	orr	w10, w10, #0x2
  41b448:	strb	w10, [x19, #888]
  41b44c:	ldr	x11, [x19, #856]
  41b450:	ldr	x12, [x19, #816]
  41b454:	ldr	x10, [x19, #840]
  41b458:	add	x9, x11, x9
  41b45c:	bic	x9, x9, x11
  41b460:	sub	x11, x9, x12
  41b464:	sub	x12, x10, x12
  41b468:	cmp	x11, x12
  41b46c:	str	x9, [x19, #832]
  41b470:	b.ls	41b47c <feof@plt+0x18aac>  // b.plast
  41b474:	mov	x9, x10
  41b478:	str	x10, [x19, #832]
  41b47c:	str	x9, [x19, #824]
  41b480:	movi	v0.2d, #0x0
  41b484:	mov	w9, #0x2                   	// #2
  41b488:	str	xzr, [x8, #192]
  41b48c:	stp	q0, q0, [x8, #160]
  41b490:	stp	q0, q0, [x8, #128]
  41b494:	stp	q0, q0, [x8, #96]
  41b498:	stp	q0, q0, [x8, #64]
  41b49c:	stp	q0, q0, [x8, #32]
  41b4a0:	stp	q0, q0, [x8]
  41b4a4:	stp	x21, x21, [x8, #16]
  41b4a8:	str	x22, [x8, #32]
  41b4ac:	strb	w9, [x8, #105]
  41b4b0:	ldr	x10, [x19]
  41b4b4:	mov	w9, #0x1                   	// #1
  41b4b8:	strb	w9, [x8, #104]
  41b4bc:	str	x10, [x8, #72]
  41b4c0:	str	x8, [x19]
  41b4c4:	cbz	x10, 41b4d0 <feof@plt+0x18b00>
  41b4c8:	ldr	x10, [x10, #80]
  41b4cc:	str	x10, [x8, #80]
  41b4d0:	ldr	x8, [x19, #40]
  41b4d4:	strb	w9, [x19, #16]
  41b4d8:	mov	w9, #0x53                  	// #83
  41b4dc:	strb	wzr, [x19, #21]
  41b4e0:	strb	w9, [x19, #156]
  41b4e4:	ldr	w8, [x8, #60]
  41b4e8:	mov	x0, x19
  41b4ec:	str	w8, [x19, #48]
  41b4f0:	bl	4246a8 <feof@plt+0x21cd8>
  41b4f4:	ldr	x21, [x19, #144]
  41b4f8:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b4fc:	add	x8, x8, #0xdf0
  41b500:	mov	x0, x19
  41b504:	str	x8, [x19, #144]
  41b508:	bl	41cd14 <feof@plt+0x1a344>
  41b50c:	ldrb	w9, [x19, #1160]
  41b510:	ldrb	w8, [x19, #32]
  41b514:	cbz	w9, 41b548 <feof@plt+0x18b78>
  41b518:	cbnz	w8, 41b528 <feof@plt+0x18b58>
  41b51c:	ldrb	w8, [x19, #24]
  41b520:	sub	w8, w8, #0x1
  41b524:	strb	w8, [x19, #24]
  41b528:	ldr	x8, [x19, #144]
  41b52c:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b530:	add	x9, x9, #0xce8
  41b534:	cmp	x8, x9
  41b538:	b.eq	41b5a0 <feof@plt+0x18bd0>  // b.none
  41b53c:	mov	x0, x19
  41b540:	bl	432c74 <feof@plt+0x302a4>
  41b544:	b	41b5a0 <feof@plt+0x18bd0>
  41b548:	cbnz	w8, 41b5a0 <feof@plt+0x18bd0>
  41b54c:	b	41b558 <feof@plt+0x18b88>
  41b550:	mov	x0, x19
  41b554:	bl	42da2c <feof@plt+0x2b05c>
  41b558:	ldr	x8, [x19, #136]
  41b55c:	ldr	x8, [x8, #8]
  41b560:	cbnz	x8, 41b550 <feof@plt+0x18b80>
  41b564:	ldr	x8, [x19, #448]
  41b568:	ldurb	w8, [x8, #-20]
  41b56c:	cmp	w8, #0x16
  41b570:	b.eq	41b588 <feof@plt+0x18bb8>  // b.none
  41b574:	mov	x0, x19
  41b578:	bl	425308 <feof@plt+0x22938>
  41b57c:	ldrb	w8, [x0, #4]
  41b580:	cmp	w8, #0x16
  41b584:	b.ne	41b574 <feof@plt+0x18ba4>  // b.any
  41b588:	ldr	w8, [x19, #500]
  41b58c:	cbnz	w8, 41b5a0 <feof@plt+0x18bd0>
  41b590:	ldr	x8, [x19, #472]
  41b594:	add	x9, x19, #0x1c8
  41b598:	str	x9, [x19, #488]
  41b59c:	str	x8, [x19, #448]
  41b5a0:	ldrb	w8, [x19, #1123]
  41b5a4:	ldrb	w9, [x19, #156]
  41b5a8:	add	x22, x19, #0x98
  41b5ac:	strb	wzr, [x19, #16]
  41b5b0:	cmp	w8, #0x0
  41b5b4:	cset	w8, eq  // eq = none
  41b5b8:	cmp	w9, #0x51
  41b5bc:	sturh	wzr, [x19, #19]
  41b5c0:	str	x21, [x19, #144]
  41b5c4:	strb	w8, [x19, #21]
  41b5c8:	b.ne	41b668 <feof@plt+0x18c98>  // b.any
  41b5cc:	mov	w0, #0x4b0                 	// #1200
  41b5d0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41b5d4:	ldr	q0, [x22]
  41b5d8:	ldr	x8, [x22, #16]
  41b5dc:	mov	x21, x0
  41b5e0:	mov	x26, xzr
  41b5e4:	mov	w27, #0x32                  	// #50
  41b5e8:	mov	w22, #0x1                   	// #1
  41b5ec:	mov	w28, #0x18                  	// #24
  41b5f0:	str	q0, [x0]
  41b5f4:	str	x8, [x0, #16]
  41b5f8:	b	41b63c <feof@plt+0x18c6c>
  41b5fc:	mov	x0, x19
  41b600:	bl	42db34 <feof@plt+0x2b164>
  41b604:	ldr	q0, [x0]
  41b608:	add	x8, x21, x26
  41b60c:	ldr	x9, [x0, #16]
  41b610:	add	x22, x22, #0x1
  41b614:	stur	q0, [x8, #24]
  41b618:	ldrh	w10, [x8, #30]
  41b61c:	ldrb	w11, [x8, #28]
  41b620:	str	x9, [x8, #40]
  41b624:	add	x26, x26, #0x18
  41b628:	orr	w9, w10, #0x400
  41b62c:	cmp	w11, #0x52
  41b630:	str	w20, [x8, #24]
  41b634:	strh	w9, [x8, #30]
  41b638:	b.eq	41b6a0 <feof@plt+0x18cd0>  // b.none
  41b63c:	cmp	x22, w27, uxtw
  41b640:	b.ne	41b5fc <feof@plt+0x18c2c>  // b.any
  41b644:	add	w8, w27, w27, lsl #1
  41b648:	cmp	w8, #0x0
  41b64c:	cinc	w8, w8, lt  // lt = tstop
  41b650:	asr	w27, w8, #1
  41b654:	smull	x1, w27, w28
  41b658:	mov	x0, x21
  41b65c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  41b660:	mov	x21, x0
  41b664:	b	41b5fc <feof@plt+0x18c2c>
  41b668:	mov	w0, #0x18                  	// #24
  41b66c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41b670:	ldr	x8, [x22, #16]
  41b674:	ldr	q0, [x22]
  41b678:	mov	x21, x0
  41b67c:	str	x8, [x0, #16]
  41b680:	str	q0, [x0]
  41b684:	ldr	x8, [x19, #904]
  41b688:	cbz	x8, 41b69c <feof@plt+0x18ccc>
  41b68c:	ldr	x1, [x19, #448]
  41b690:	mov	x0, x19
  41b694:	mov	w2, wzr
  41b698:	blr	x8
  41b69c:	mov	w22, #0x1                   	// #1
  41b6a0:	ldr	x8, [x19]
  41b6a4:	mov	x0, x19
  41b6a8:	str	xzr, [x8, #80]
  41b6ac:	bl	41c0c4 <feof@plt+0x196f4>
  41b6b0:	ldr	x0, [x19, #136]
  41b6b4:	bl	4024c0 <free@plt>
  41b6b8:	mov	x0, x19
  41b6bc:	mov	x1, xzr
  41b6c0:	mov	x2, x21
  41b6c4:	mov	w3, w22
  41b6c8:	str	x23, [x19, #136]
  41b6cc:	str	x24, [x19, #448]
  41b6d0:	str	x25, [x19, #488]
  41b6d4:	bl	42d90c <feof@plt+0x2af3c>
  41b6d8:	mov	sp, x29
  41b6dc:	ldp	x20, x19, [sp, #80]
  41b6e0:	ldp	x22, x21, [sp, #64]
  41b6e4:	ldp	x24, x23, [sp, #48]
  41b6e8:	ldp	x26, x25, [sp, #32]
  41b6ec:	ldp	x28, x27, [sp, #16]
  41b6f0:	ldp	x29, x30, [sp], #96
  41b6f4:	ret
  41b6f8:	stp	x29, x30, [sp, #-96]!
  41b6fc:	mov	x29, sp
  41b700:	stp	x20, x19, [sp, #80]
  41b704:	mov	x20, x1
  41b708:	add	x2, x29, #0x18
  41b70c:	mov	w1, #0x4                   	// #4
  41b710:	str	x27, [sp, #16]
  41b714:	stp	x26, x25, [sp, #32]
  41b718:	stp	x24, x23, [sp, #48]
  41b71c:	stp	x22, x21, [sp, #64]
  41b720:	mov	x21, x0
  41b724:	bl	41b810 <feof@plt+0x18e40>
  41b728:	mov	x19, x0
  41b72c:	str	wzr, [x20]
  41b730:	cbz	x0, 41b7b4 <feof@plt+0x18de4>
  41b734:	mov	x23, x19
  41b738:	ldr	x26, [x23, #24]!
  41b73c:	cbz	x26, 41b7ec <feof@plt+0x18e1c>
  41b740:	ldr	x24, [x29, #24]
  41b744:	cbz	x24, 41b7d4 <feof@plt+0x18e04>
  41b748:	add	x25, x24, #0x18
  41b74c:	b	41b768 <feof@plt+0x18d98>
  41b750:	ldr	w8, [x26, #12]
  41b754:	cmp	w27, w8
  41b758:	b.eq	41b7dc <feof@plt+0x18e0c>  // b.none
  41b75c:	ldr	x23, [x23]
  41b760:	ldr	x26, [x23]
  41b764:	cbz	x26, 41b7e0 <feof@plt+0x18e10>
  41b768:	ldr	w8, [x26, #12]
  41b76c:	ldr	w9, [x24, #12]
  41b770:	cmp	w8, w9
  41b774:	b.ne	41b75c <feof@plt+0x18d8c>  // b.any
  41b778:	cbz	w8, 41b7e0 <feof@plt+0x18e10>
  41b77c:	mov	x27, xzr
  41b780:	add	x21, x26, #0x18
  41b784:	mov	x22, x25
  41b788:	mov	x0, x21
  41b78c:	mov	x1, x22
  41b790:	bl	428dcc <feof@plt+0x263fc>
  41b794:	cbz	w0, 41b750 <feof@plt+0x18d80>
  41b798:	ldr	w8, [x26, #12]
  41b79c:	add	x27, x27, #0x1
  41b7a0:	add	x22, x22, #0x18
  41b7a4:	add	x21, x21, #0x18
  41b7a8:	cmp	x27, x8
  41b7ac:	b.cc	41b788 <feof@plt+0x18db8>  // b.lo, b.ul, b.last
  41b7b0:	b	41b754 <feof@plt+0x18d84>
  41b7b4:	ldr	x8, [x21, #448]
  41b7b8:	ldurb	w8, [x8, #-20]
  41b7bc:	cmp	w8, #0x16
  41b7c0:	b.ne	41b7ec <feof@plt+0x18e1c>  // b.any
  41b7c4:	mov	w1, #0x1                   	// #1
  41b7c8:	mov	x0, x21
  41b7cc:	bl	42e2c0 <feof@plt+0x2b8f0>
  41b7d0:	b	41b7ec <feof@plt+0x18e1c>
  41b7d4:	mov	w8, #0x1                   	// #1
  41b7d8:	b	41b7e8 <feof@plt+0x18e18>
  41b7dc:	ldr	x26, [x23]
  41b7e0:	cmp	x26, #0x0
  41b7e4:	cset	w8, ne  // ne = any
  41b7e8:	str	w8, [x20]
  41b7ec:	cmp	x19, #0x0
  41b7f0:	ldp	x20, x19, [sp, #80]
  41b7f4:	ldp	x22, x21, [sp, #64]
  41b7f8:	ldp	x24, x23, [sp, #48]
  41b7fc:	ldp	x26, x25, [sp, #32]
  41b800:	ldr	x27, [sp, #16]
  41b804:	cset	w0, eq  // eq = none
  41b808:	ldp	x29, x30, [sp], #96
  41b80c:	ret
  41b810:	stp	x29, x30, [sp, #-96]!
  41b814:	stp	x26, x25, [sp, #32]
  41b818:	stp	x24, x23, [sp, #48]
  41b81c:	stp	x22, x21, [sp, #64]
  41b820:	stp	x20, x19, [sp, #80]
  41b824:	ldrb	w8, [x0, #24]
  41b828:	str	x27, [sp, #16]
  41b82c:	mov	x29, sp
  41b830:	mov	x21, x2
  41b834:	add	w8, w8, #0x1
  41b838:	mov	w22, w1
  41b83c:	mov	x19, x0
  41b840:	strb	w8, [x0, #24]
  41b844:	str	xzr, [x2]
  41b848:	bl	42db34 <feof@plt+0x2b164>
  41b84c:	ldrb	w8, [x0, #4]
  41b850:	mov	x20, x0
  41b854:	cmp	w8, #0x35
  41b858:	b.eq	41b880 <feof@plt+0x18eb0>  // b.none
  41b85c:	cmp	w8, #0x16
  41b860:	b.ne	41b95c <feof@plt+0x18f8c>  // b.any
  41b864:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b868:	add	x2, x2, #0xc34
  41b86c:	mov	w1, #0x3                   	// #3
  41b870:	mov	x0, x19
  41b874:	bl	41de04 <feof@plt+0x1b434>
  41b878:	mov	x0, xzr
  41b87c:	b	41ba14 <feof@plt+0x19044>
  41b880:	ldr	w23, [x20]
  41b884:	mov	x0, x19
  41b888:	bl	42db34 <feof@plt+0x2b164>
  41b88c:	ldrb	w8, [x0, #4]
  41b890:	cmp	w8, #0x14
  41b894:	b.ne	41b980 <feof@plt+0x18fb0>  // b.any
  41b898:	mov	x22, x19
  41b89c:	ldr	x8, [x22, #56]!
  41b8a0:	ldp	x2, x9, [x8, #16]
  41b8a4:	sub	x8, x9, x2
  41b8a8:	cmp	x8, #0x2f
  41b8ac:	b.hi	41b8c8 <feof@plt+0x18ef8>  // b.pmore
  41b8b0:	mov	w2, #0x30                  	// #48
  41b8b4:	mov	x0, x19
  41b8b8:	mov	x1, x22
  41b8bc:	bl	42951c <feof@plt+0x26b4c>
  41b8c0:	ldr	x8, [x19, #56]
  41b8c4:	ldr	x2, [x8, #16]
  41b8c8:	mov	w1, #0x1                   	// #1
  41b8cc:	mov	x0, x19
  41b8d0:	bl	42e540 <feof@plt+0x2bb70>
  41b8d4:	mov	x23, x0
  41b8d8:	mov	w25, wzr
  41b8dc:	mov	w26, #0x18                  	// #24
  41b8e0:	str	xzr, [x0]
  41b8e4:	b	41b900 <feof@plt+0x18f30>
  41b8e8:	ldr	x8, [x24, #16]
  41b8ec:	ldr	q0, [x24]
  41b8f0:	madd	x9, x27, x26, x23
  41b8f4:	add	w25, w25, #0x1
  41b8f8:	str	x8, [x9, #40]
  41b8fc:	stur	q0, [x9, #24]
  41b900:	mov	x0, x19
  41b904:	bl	42db34 <feof@plt+0x2b164>
  41b908:	ldrb	w8, [x0, #4]
  41b90c:	cmp	w8, #0x15
  41b910:	b.eq	41b9a0 <feof@plt+0x18fd0>  // b.none
  41b914:	cmp	w8, #0x16
  41b918:	b.eq	41b9bc <feof@plt+0x18fec>  // b.none
  41b91c:	ldr	x8, [x22]
  41b920:	mov	x24, x0
  41b924:	mov	w27, w25
  41b928:	ldp	x23, x9, [x8, #16]
  41b92c:	umull	x8, w25, w26
  41b930:	add	x8, x8, #0x48
  41b934:	sub	x9, x9, x23
  41b938:	cmp	x9, x8
  41b93c:	b.cs	41b8e8 <feof@plt+0x18f18>  // b.hs, b.nlast
  41b940:	mov	w2, #0x18                  	// #24
  41b944:	mov	x0, x19
  41b948:	mov	x1, x22
  41b94c:	bl	42951c <feof@plt+0x26b4c>
  41b950:	ldr	x8, [x19, #56]
  41b954:	ldr	x23, [x8, #16]
  41b958:	b	41b8e8 <feof@plt+0x18f18>
  41b95c:	ldr	w2, [x20]
  41b960:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b964:	add	x4, x4, #0xc50
  41b968:	mov	w1, #0x3                   	// #3
  41b96c:	mov	x0, x19
  41b970:	mov	w3, wzr
  41b974:	bl	41e2c4 <feof@plt+0x1b8f4>
  41b978:	mov	x0, xzr
  41b97c:	b	41ba14 <feof@plt+0x19044>
  41b980:	cmp	w22, #0x11
  41b984:	b.eq	41b9c8 <feof@plt+0x18ff8>  // b.none
  41b988:	cmp	w22, #0x4
  41b98c:	b.ne	41ba40 <feof@plt+0x19070>  // b.any
  41b990:	mov	w1, #0x1                   	// #1
  41b994:	mov	x0, x19
  41b998:	bl	42e2c0 <feof@plt+0x2b8f0>
  41b99c:	b	41b9d0 <feof@plt+0x19000>
  41b9a0:	cbz	w25, 41ba58 <feof@plt+0x19088>
  41b9a4:	ldrh	w8, [x23, #30]
  41b9a8:	str	w25, [x23, #12]
  41b9ac:	and	w8, w8, #0xfffe
  41b9b0:	strh	w8, [x23, #30]
  41b9b4:	str	x23, [x21]
  41b9b8:	b	41b9d0 <feof@plt+0x19000>
  41b9bc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41b9c0:	add	x2, x2, #0xc8c
  41b9c4:	b	41b86c <feof@plt+0x18e9c>
  41b9c8:	cmp	w8, #0x16
  41b9cc:	b.ne	41ba40 <feof@plt+0x19070>  // b.any
  41b9d0:	ldr	x8, [x20, #8]
  41b9d4:	mov	x9, sp
  41b9d8:	ldr	w2, [x8, #8]
  41b9dc:	add	w20, w2, #0x1
  41b9e0:	add	x10, x20, #0xf
  41b9e4:	and	x10, x10, #0x1fffffff0
  41b9e8:	sub	x21, x9, x10
  41b9ec:	mov	sp, x21
  41b9f0:	mov	w9, #0x23                  	// #35
  41b9f4:	mov	x0, x21
  41b9f8:	strb	w9, [x0], #1
  41b9fc:	ldr	x1, [x8]
  41ba00:	bl	402390 <memcpy@plt>
  41ba04:	mov	x0, x19
  41ba08:	mov	x1, x21
  41ba0c:	mov	w2, w20
  41ba10:	bl	4245e4 <feof@plt+0x21c14>
  41ba14:	ldrb	w8, [x19, #24]
  41ba18:	sub	w8, w8, #0x1
  41ba1c:	strb	w8, [x19, #24]
  41ba20:	mov	sp, x29
  41ba24:	ldp	x20, x19, [sp, #80]
  41ba28:	ldp	x22, x21, [sp, #64]
  41ba2c:	ldp	x24, x23, [sp, #48]
  41ba30:	ldp	x26, x25, [sp, #32]
  41ba34:	ldr	x27, [sp, #16]
  41ba38:	ldp	x29, x30, [sp], #96
  41ba3c:	ret
  41ba40:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ba44:	add	x4, x4, #0xc70
  41ba48:	mov	w1, #0x3                   	// #3
  41ba4c:	mov	x0, x19
  41ba50:	mov	w2, w23
  41ba54:	b	41b970 <feof@plt+0x18fa0>
  41ba58:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ba5c:	add	x2, x2, #0xcab
  41ba60:	b	41b86c <feof@plt+0x18e9c>
  41ba64:	stp	x29, x30, [sp, #-48]!
  41ba68:	stp	x20, x19, [sp, #32]
  41ba6c:	mov	x19, x0
  41ba70:	mov	x0, x1
  41ba74:	stp	x22, x21, [sp, #16]
  41ba78:	mov	x29, sp
  41ba7c:	mov	x22, x1
  41ba80:	bl	402420 <strlen@plt>
  41ba84:	add	x9, x0, #0x12
  41ba88:	mov	x8, sp
  41ba8c:	and	x9, x9, #0xfffffffffffffff0
  41ba90:	mov	x20, x0
  41ba94:	sub	x21, x8, x9
  41ba98:	mov	sp, x21
  41ba9c:	mov	x0, x21
  41baa0:	mov	x1, x22
  41baa4:	mov	x2, x20
  41baa8:	bl	402390 <memcpy@plt>
  41baac:	mov	w1, #0x3d                  	// #61
  41bab0:	mov	x0, x22
  41bab4:	bl	402500 <strchr@plt>
  41bab8:	cbz	x0, 41bac8 <feof@plt+0x190f8>
  41babc:	sub	x8, x0, x22
  41bac0:	mov	w9, #0x20                  	// #32
  41bac4:	b	41badc <feof@plt+0x1910c>
  41bac8:	mov	w9, #0x20                  	// #32
  41bacc:	add	x8, x20, #0x1
  41bad0:	strb	w9, [x21, x20]
  41bad4:	add	x20, x20, #0x2
  41bad8:	mov	w9, #0x31                  	// #49
  41badc:	strb	w9, [x21, x8]
  41bae0:	mov	w8, #0xa                   	// #10
  41bae4:	mov	x0, x19
  41bae8:	mov	w1, wzr
  41baec:	mov	x2, x21
  41baf0:	mov	x3, x20
  41baf4:	strb	w8, [x21, x20]
  41baf8:	bl	41bb10 <feof@plt+0x19140>
  41bafc:	mov	sp, x29
  41bb00:	ldp	x20, x19, [sp, #32]
  41bb04:	ldp	x22, x21, [sp, #16]
  41bb08:	ldp	x29, x30, [sp], #48
  41bb0c:	ret
  41bb10:	stp	x29, x30, [sp, #-48]!
  41bb14:	stp	x22, x21, [sp, #16]
  41bb18:	stp	x20, x19, [sp, #32]
  41bb1c:	ldr	x8, [x0, #840]
  41bb20:	ldr	x9, [x0, #832]
  41bb24:	mov	x22, x3
  41bb28:	mov	x21, x2
  41bb2c:	mov	x19, x0
  41bb30:	sub	x8, x8, x9
  41bb34:	cmp	x8, #0xc7
  41bb38:	mov	w20, w1
  41bb3c:	mov	x29, sp
  41bb40:	b.hi	41bb54 <feof@plt+0x19184>  // b.pmore
  41bb44:	add	x0, x19, #0x328
  41bb48:	mov	w1, #0xc8                  	// #200
  41bb4c:	bl	45037c <_obstack_newchunk@@Base>
  41bb50:	ldr	x9, [x19, #832]
  41bb54:	ldr	x8, [x19, #824]
  41bb58:	add	x9, x9, #0xc8
  41bb5c:	str	x9, [x19, #832]
  41bb60:	cmp	x9, x8
  41bb64:	b.ne	41bb74 <feof@plt+0x191a4>  // b.any
  41bb68:	ldrb	w10, [x19, #888]
  41bb6c:	orr	w10, w10, #0x2
  41bb70:	strb	w10, [x19, #888]
  41bb74:	ldr	x11, [x19, #856]
  41bb78:	ldr	x12, [x19, #816]
  41bb7c:	ldr	x10, [x19, #840]
  41bb80:	add	x9, x11, x9
  41bb84:	bic	x9, x9, x11
  41bb88:	sub	x11, x9, x12
  41bb8c:	sub	x12, x10, x12
  41bb90:	cmp	x11, x12
  41bb94:	str	x9, [x19, #832]
  41bb98:	b.ls	41bba4 <feof@plt+0x191d4>  // b.plast
  41bb9c:	mov	x9, x10
  41bba0:	str	x10, [x19, #832]
  41bba4:	str	x9, [x19, #824]
  41bba8:	movi	v0.2d, #0x0
  41bbac:	add	x9, x21, x22
  41bbb0:	mov	w10, #0x2                   	// #2
  41bbb4:	str	xzr, [x8, #192]
  41bbb8:	stp	q0, q0, [x8, #160]
  41bbbc:	stp	q0, q0, [x8, #128]
  41bbc0:	stp	q0, q0, [x8, #96]
  41bbc4:	stp	q0, q0, [x8, #64]
  41bbc8:	stp	q0, q0, [x8, #32]
  41bbcc:	stp	q0, q0, [x8]
  41bbd0:	stp	x21, x21, [x8, #16]
  41bbd4:	str	x9, [x8, #32]
  41bbd8:	strb	w10, [x8, #105]
  41bbdc:	ldr	x9, [x19]
  41bbe0:	mov	w10, #0x1                   	// #1
  41bbe4:	strb	w10, [x8, #104]
  41bbe8:	mov	x0, x19
  41bbec:	str	x9, [x8, #72]
  41bbf0:	str	x8, [x19]
  41bbf4:	ldr	x8, [x19, #40]
  41bbf8:	mov	w9, #0x53                  	// #83
  41bbfc:	strb	w10, [x19, #16]
  41bc00:	strb	wzr, [x19, #21]
  41bc04:	strb	w9, [x19, #156]
  41bc08:	ldr	w8, [x8, #60]
  41bc0c:	str	w8, [x19, #48]
  41bc10:	bl	4246a8 <feof@plt+0x21cd8>
  41bc14:	ldrb	w9, [x19, #1160]
  41bc18:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41bc1c:	add	x21, x21, #0xce8
  41bc20:	mov	w8, #0x18                  	// #24
  41bc24:	smaddl	x8, w20, w8, x21
  41bc28:	str	x8, [x19, #144]
  41bc2c:	cbz	w9, 41bc3c <feof@plt+0x1926c>
  41bc30:	mov	x0, x19
  41bc34:	bl	41a0c8 <feof@plt+0x176f8>
  41bc38:	ldr	x8, [x19, #144]
  41bc3c:	ldr	x8, [x8]
  41bc40:	mov	x0, x19
  41bc44:	blr	x8
  41bc48:	ldrb	w9, [x19, #1160]
  41bc4c:	ldrb	w8, [x19, #32]
  41bc50:	cbz	w9, 41bc7c <feof@plt+0x192ac>
  41bc54:	cbnz	w8, 41bc64 <feof@plt+0x19294>
  41bc58:	ldrb	w8, [x19, #24]
  41bc5c:	sub	w8, w8, #0x1
  41bc60:	strb	w8, [x19, #24]
  41bc64:	ldr	x8, [x19, #144]
  41bc68:	cmp	x8, x21
  41bc6c:	b.eq	41bcd4 <feof@plt+0x19304>  // b.none
  41bc70:	mov	x0, x19
  41bc74:	bl	432c74 <feof@plt+0x302a4>
  41bc78:	b	41bcd4 <feof@plt+0x19304>
  41bc7c:	cbnz	w8, 41bcd4 <feof@plt+0x19304>
  41bc80:	b	41bc8c <feof@plt+0x192bc>
  41bc84:	mov	x0, x19
  41bc88:	bl	42da2c <feof@plt+0x2b05c>
  41bc8c:	ldr	x8, [x19, #136]
  41bc90:	ldr	x8, [x8, #8]
  41bc94:	cbnz	x8, 41bc84 <feof@plt+0x192b4>
  41bc98:	ldr	x8, [x19, #448]
  41bc9c:	ldurb	w8, [x8, #-20]
  41bca0:	cmp	w8, #0x16
  41bca4:	b.eq	41bcbc <feof@plt+0x192ec>  // b.none
  41bca8:	mov	x0, x19
  41bcac:	bl	425308 <feof@plt+0x22938>
  41bcb0:	ldrb	w8, [x0, #4]
  41bcb4:	cmp	w8, #0x16
  41bcb8:	b.ne	41bca8 <feof@plt+0x192d8>  // b.any
  41bcbc:	ldr	w8, [x19, #500]
  41bcc0:	cbnz	w8, 41bcd4 <feof@plt+0x19304>
  41bcc4:	ldr	x8, [x19, #472]
  41bcc8:	add	x9, x19, #0x1c8
  41bccc:	str	x9, [x19, #488]
  41bcd0:	str	x8, [x19, #448]
  41bcd4:	ldrb	w8, [x19, #1123]
  41bcd8:	strb	wzr, [x19, #16]
  41bcdc:	sturh	wzr, [x19, #19]
  41bce0:	str	xzr, [x19, #144]
  41bce4:	cmp	w8, #0x0
  41bce8:	cset	w8, eq  // eq = none
  41bcec:	strb	w8, [x19, #21]
  41bcf0:	mov	x0, x19
  41bcf4:	ldp	x20, x19, [sp, #32]
  41bcf8:	ldp	x22, x21, [sp, #16]
  41bcfc:	ldp	x29, x30, [sp], #48
  41bd00:	b	41c0c4 <feof@plt+0x196f4>
  41bd04:	sub	sp, sp, #0x120
  41bd08:	stp	x29, x30, [sp, #240]
  41bd0c:	add	x29, sp, #0xf0
  41bd10:	mov	x9, #0xffffffffffffffd0    	// #-48
  41bd14:	mov	x10, sp
  41bd18:	sub	x11, x29, #0x70
  41bd1c:	movk	x9, #0xff80, lsl #32
  41bd20:	add	x12, x29, #0x30
  41bd24:	add	x10, x10, #0x80
  41bd28:	add	x11, x11, #0x30
  41bd2c:	stp	x10, x9, [x29, #-16]
  41bd30:	stp	x12, x11, [x29, #-32]
  41bd34:	stp	x2, x3, [x29, #-112]
  41bd38:	stp	x4, x5, [x29, #-96]
  41bd3c:	stp	x6, x7, [x29, #-80]
  41bd40:	stp	q1, q2, [sp, #16]
  41bd44:	str	q0, [sp]
  41bd48:	ldp	q1, q0, [x29, #-32]
  41bd4c:	mov	x8, x1
  41bd50:	stp	x20, x19, [sp, #272]
  41bd54:	mov	x19, x0
  41bd58:	sub	x1, x29, #0x40
  41bd5c:	mov	x0, x8
  41bd60:	str	x28, [sp, #256]
  41bd64:	stp	q3, q4, [sp, #48]
  41bd68:	stp	q5, q6, [sp, #80]
  41bd6c:	str	q7, [sp, #112]
  41bd70:	stp	q1, q0, [x29, #-64]
  41bd74:	bl	450878 <_obstack_memory_used@@Base+0x2e0>
  41bd78:	mov	x20, x0
  41bd7c:	mov	x0, x19
  41bd80:	mov	x1, x20
  41bd84:	bl	41ba64 <feof@plt+0x19094>
  41bd88:	mov	x0, x20
  41bd8c:	bl	4024c0 <free@plt>
  41bd90:	ldp	x20, x19, [sp, #272]
  41bd94:	ldr	x28, [sp, #256]
  41bd98:	ldp	x29, x30, [sp, #240]
  41bd9c:	add	sp, sp, #0x120
  41bda0:	ret
  41bda4:	stp	x29, x30, [sp, #-48]!
  41bda8:	stp	x20, x19, [sp, #32]
  41bdac:	mov	x20, x0
  41bdb0:	mov	x0, x1
  41bdb4:	stp	x22, x21, [sp, #16]
  41bdb8:	mov	x29, sp
  41bdbc:	mov	x19, x1
  41bdc0:	bl	402420 <strlen@plt>
  41bdc4:	add	x9, x0, #0x10
  41bdc8:	mov	x8, sp
  41bdcc:	and	x9, x9, #0xfffffffffffffff0
  41bdd0:	sub	x22, x8, x9
  41bdd4:	mov	x21, x0
  41bdd8:	mov	sp, x22
  41bddc:	mov	x0, x22
  41bde0:	mov	x1, x19
  41bde4:	mov	x2, x21
  41bde8:	bl	402390 <memcpy@plt>
  41bdec:	mov	w8, #0xa                   	// #10
  41bdf0:	mov	x0, x20
  41bdf4:	mov	w1, wzr
  41bdf8:	mov	x2, x22
  41bdfc:	mov	x3, x21
  41be00:	strb	w8, [x22, x21]
  41be04:	bl	41bb10 <feof@plt+0x19140>
  41be08:	mov	sp, x29
  41be0c:	ldp	x20, x19, [sp, #32]
  41be10:	ldp	x22, x21, [sp, #16]
  41be14:	ldp	x29, x30, [sp], #48
  41be18:	ret
  41be1c:	stp	x29, x30, [sp, #-48]!
  41be20:	stp	x20, x19, [sp, #32]
  41be24:	mov	x20, x0
  41be28:	mov	x0, x1
  41be2c:	stp	x22, x21, [sp, #16]
  41be30:	mov	x29, sp
  41be34:	mov	x19, x1
  41be38:	bl	402420 <strlen@plt>
  41be3c:	add	x9, x0, #0x10
  41be40:	mov	x8, sp
  41be44:	and	x9, x9, #0xfffffffffffffff0
  41be48:	sub	x22, x8, x9
  41be4c:	mov	x21, x0
  41be50:	mov	sp, x22
  41be54:	mov	x0, x22
  41be58:	mov	x1, x19
  41be5c:	mov	x2, x21
  41be60:	bl	402390 <memcpy@plt>
  41be64:	mov	w8, #0xa                   	// #10
  41be68:	mov	w1, #0x7                   	// #7
  41be6c:	mov	x0, x20
  41be70:	mov	x2, x22
  41be74:	mov	x3, x21
  41be78:	strb	w8, [x22, x21]
  41be7c:	bl	41bb10 <feof@plt+0x19140>
  41be80:	mov	sp, x29
  41be84:	ldp	x20, x19, [sp, #32]
  41be88:	ldp	x22, x21, [sp, #16]
  41be8c:	ldp	x29, x30, [sp], #48
  41be90:	ret
  41be94:	mov	w2, #0x10                  	// #16
  41be98:	b	41be9c <feof@plt+0x194cc>
  41be9c:	stp	x29, x30, [sp, #-64]!
  41bea0:	stp	x20, x19, [sp, #48]
  41bea4:	mov	x20, x0
  41bea8:	mov	x0, x1
  41beac:	stp	x24, x23, [sp, #16]
  41beb0:	stp	x22, x21, [sp, #32]
  41beb4:	mov	x29, sp
  41beb8:	mov	w19, w2
  41bebc:	mov	x22, x1
  41bec0:	bl	402420 <strlen@plt>
  41bec4:	mov	x21, x0
  41bec8:	mov	w1, #0x3d                  	// #61
  41becc:	mov	x0, x22
  41bed0:	bl	402500 <strchr@plt>
  41bed4:	add	x9, x21, #0x11
  41bed8:	mov	x8, sp
  41bedc:	and	x9, x9, #0xfffffffffffffff0
  41bee0:	mov	x24, x0
  41bee4:	sub	x23, x8, x9
  41bee8:	mov	sp, x23
  41beec:	mov	x0, x23
  41bef0:	mov	x1, x22
  41bef4:	mov	x2, x21
  41bef8:	bl	402390 <memcpy@plt>
  41befc:	cbz	x24, 41bf1c <feof@plt+0x1954c>
  41bf00:	sub	x8, x24, x22
  41bf04:	mov	w9, #0x28                  	// #40
  41bf08:	strb	w9, [x23, x8]
  41bf0c:	add	x8, x21, #0x1
  41bf10:	mov	w9, #0x29                  	// #41
  41bf14:	strb	w9, [x23, x21]
  41bf18:	mov	x21, x8
  41bf1c:	mov	w8, #0xa                   	// #10
  41bf20:	mov	x0, x20
  41bf24:	mov	w1, w19
  41bf28:	mov	x2, x23
  41bf2c:	mov	x3, x21
  41bf30:	strb	w8, [x23, x21]
  41bf34:	bl	41bb10 <feof@plt+0x19140>
  41bf38:	mov	sp, x29
  41bf3c:	ldp	x20, x19, [sp, #48]
  41bf40:	ldp	x22, x21, [sp, #32]
  41bf44:	ldp	x24, x23, [sp, #16]
  41bf48:	ldp	x29, x30, [sp], #64
  41bf4c:	ret
  41bf50:	mov	w2, #0x11                  	// #17
  41bf54:	b	41be9c <feof@plt+0x194cc>
  41bf58:	add	x0, x0, #0x458
  41bf5c:	ret
  41bf60:	add	x0, x0, #0x388
  41bf64:	ret
  41bf68:	ldp	q0, q1, [x1, #32]
  41bf6c:	ldp	q2, q3, [x1]
  41bf70:	add	x8, x0, #0x388
  41bf74:	stp	q0, q1, [x8, #32]
  41bf78:	stp	q2, q3, [x8]
  41bf7c:	ldp	q1, q0, [x1, #96]
  41bf80:	ldp	q3, q2, [x1, #64]
  41bf84:	stp	q1, q0, [x8, #96]
  41bf88:	stp	q3, q2, [x8, #64]
  41bf8c:	ldr	x9, [x1, #176]
  41bf90:	ldp	q1, q0, [x1, #144]
  41bf94:	ldr	q2, [x1, #128]
  41bf98:	str	x9, [x8, #176]
  41bf9c:	stp	q1, q0, [x8, #144]
  41bfa0:	str	q2, [x8, #128]
  41bfa4:	ret
  41bfa8:	stp	x29, x30, [sp, #-32]!
  41bfac:	str	x19, [sp, #16]
  41bfb0:	mov	x19, x0
  41bfb4:	ldr	x0, [x0, #712]
  41bfb8:	mov	x29, sp
  41bfbc:	cbnz	x0, 41bfc8 <feof@plt+0x195f8>
  41bfc0:	bl	4318a8 <feof@plt+0x2eed8>
  41bfc4:	str	x0, [x19, #712]
  41bfc8:	ldr	x19, [sp, #16]
  41bfcc:	ldp	x29, x30, [sp], #32
  41bfd0:	ret
  41bfd4:	stp	x29, x30, [sp, #-48]!
  41bfd8:	stp	x22, x21, [sp, #16]
  41bfdc:	stp	x20, x19, [sp, #32]
  41bfe0:	ldr	x9, [x0, #840]
  41bfe4:	ldr	x8, [x0, #832]
  41bfe8:	mov	w20, w3
  41bfec:	mov	x22, x2
  41bff0:	mov	x19, x0
  41bff4:	sub	x9, x9, x8
  41bff8:	cmp	x9, #0xc7
  41bffc:	mov	x21, x1
  41c000:	mov	x29, sp
  41c004:	b.hi	41c018 <feof@plt+0x19648>  // b.pmore
  41c008:	add	x0, x19, #0x328
  41c00c:	mov	w1, #0xc8                  	// #200
  41c010:	bl	45037c <_obstack_newchunk@@Base>
  41c014:	ldr	x8, [x19, #832]
  41c018:	ldr	x0, [x19, #824]
  41c01c:	add	x8, x8, #0xc8
  41c020:	str	x8, [x19, #832]
  41c024:	cmp	x8, x0
  41c028:	b.ne	41c038 <feof@plt+0x19668>  // b.any
  41c02c:	ldrb	w9, [x19, #888]
  41c030:	orr	w9, w9, #0x2
  41c034:	strb	w9, [x19, #888]
  41c038:	ldr	x10, [x19, #856]
  41c03c:	ldr	x11, [x19, #816]
  41c040:	ldr	x9, [x19, #840]
  41c044:	add	x8, x10, x8
  41c048:	bic	x8, x8, x10
  41c04c:	sub	x10, x8, x11
  41c050:	sub	x11, x9, x11
  41c054:	cmp	x10, x11
  41c058:	str	x8, [x19, #832]
  41c05c:	b.ls	41c068 <feof@plt+0x19698>  // b.plast
  41c060:	mov	x8, x9
  41c064:	str	x9, [x19, #832]
  41c068:	str	x8, [x19, #824]
  41c06c:	movi	v0.2d, #0x0
  41c070:	add	x8, x21, x22
  41c074:	ubfiz	w9, w20, #1, #1
  41c078:	str	xzr, [x0, #192]
  41c07c:	stp	q0, q0, [x0, #160]
  41c080:	stp	q0, q0, [x0, #128]
  41c084:	stp	q0, q0, [x0, #96]
  41c088:	stp	q0, q0, [x0, #64]
  41c08c:	stp	q0, q0, [x0, #32]
  41c090:	stp	q0, q0, [x0]
  41c094:	stp	x21, x21, [x0, #16]
  41c098:	str	x8, [x0, #32]
  41c09c:	strb	w9, [x0, #105]
  41c0a0:	ldr	x8, [x19]
  41c0a4:	mov	w9, #0x1                   	// #1
  41c0a8:	strb	w9, [x0, #104]
  41c0ac:	str	x8, [x0, #72]
  41c0b0:	str	x0, [x19]
  41c0b4:	ldp	x20, x19, [sp, #32]
  41c0b8:	ldp	x22, x21, [sp, #16]
  41c0bc:	ldp	x29, x30, [sp], #48
  41c0c0:	ret
  41c0c4:	stp	x29, x30, [sp, #-80]!
  41c0c8:	stp	x24, x23, [sp, #32]
  41c0cc:	stp	x22, x21, [sp, #48]
  41c0d0:	stp	x20, x19, [sp, #64]
  41c0d4:	ldr	x21, [x0]
  41c0d8:	mov	x19, x0
  41c0dc:	str	x25, [sp, #16]
  41c0e0:	mov	x29, sp
  41c0e4:	ldr	x23, [x21, #96]
  41c0e8:	ldr	x20, [x21, #80]
  41c0ec:	cbz	x23, 41c130 <feof@plt+0x19760>
  41c0f0:	adrp	x25, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c0f4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c0f8:	mov	w24, #0x18                  	// #24
  41c0fc:	add	x25, x25, #0xce8
  41c100:	add	x22, x22, #0x55a
  41c104:	ldrsw	x8, [x23, #28]
  41c108:	ldr	w2, [x23, #8]
  41c10c:	mov	w1, #0x3                   	// #3
  41c110:	mov	x0, x19
  41c114:	madd	x8, x8, x24, x25
  41c118:	ldr	x5, [x8, #8]
  41c11c:	mov	w3, wzr
  41c120:	mov	x4, x22
  41c124:	bl	41e2c4 <feof@plt+0x1b8f4>
  41c128:	ldr	x23, [x23]
  41c12c:	cbnz	x23, 41c104 <feof@plt+0x19734>
  41c130:	strb	wzr, [x19, #18]
  41c134:	ldr	x8, [x21, #72]
  41c138:	str	x8, [x19]
  41c13c:	ldp	x22, x0, [x21, #40]
  41c140:	bl	4024c0 <free@plt>
  41c144:	ldr	x8, [x19, #816]
  41c148:	cmp	x8, x21
  41c14c:	b.cs	41c188 <feof@plt+0x197b8>  // b.hs, b.nlast
  41c150:	ldr	x8, [x19, #840]
  41c154:	cmp	x8, x21
  41c158:	b.ls	41c188 <feof@plt+0x197b8>  // b.plast
  41c15c:	str	x21, [x19, #824]
  41c160:	str	x21, [x19, #832]
  41c164:	cbnz	x20, 41c198 <feof@plt+0x197c8>
  41c168:	cbz	x22, 41c200 <feof@plt+0x19830>
  41c16c:	mov	x0, x22
  41c170:	ldp	x20, x19, [sp, #64]
  41c174:	ldp	x22, x21, [sp, #48]
  41c178:	ldp	x24, x23, [sp, #32]
  41c17c:	ldr	x25, [sp, #16]
  41c180:	ldp	x29, x30, [sp], #80
  41c184:	b	4024c0 <free@plt>
  41c188:	add	x0, x19, #0x328
  41c18c:	mov	x1, x21
  41c190:	bl	450504 <_obstack_free@@Base>
  41c194:	cbz	x20, 41c168 <feof@plt+0x19798>
  41c198:	mov	x0, x19
  41c19c:	mov	x1, x20
  41c1a0:	mov	x2, x22
  41c1a4:	bl	42374c <feof@plt+0x20d7c>
  41c1a8:	ldr	x0, [x19, #40]
  41c1ac:	mov	w1, #0x1                   	// #1
  41c1b0:	mov	w2, wzr
  41c1b4:	mov	x3, xzr
  41c1b8:	mov	w4, wzr
  41c1bc:	bl	42a0f0 <feof@plt+0x27720>
  41c1c0:	mov	x20, x0
  41c1c4:	cbz	x0, 41c1d8 <feof@plt+0x19808>
  41c1c8:	ldr	x0, [x19, #40]
  41c1cc:	ldr	w1, [x20, #16]
  41c1d0:	mov	w2, #0x7f                  	// #127
  41c1d4:	bl	42a5e8 <feof@plt+0x27c18>
  41c1d8:	ldr	x2, [x19, #912]
  41c1dc:	cbz	x2, 41c200 <feof@plt+0x19830>
  41c1e0:	mov	x0, x19
  41c1e4:	mov	x1, x20
  41c1e8:	ldp	x20, x19, [sp, #64]
  41c1ec:	ldp	x22, x21, [sp, #48]
  41c1f0:	ldp	x24, x23, [sp, #32]
  41c1f4:	ldr	x25, [sp, #16]
  41c1f8:	ldp	x29, x30, [sp], #80
  41c1fc:	br	x2
  41c200:	ldp	x20, x19, [sp, #64]
  41c204:	ldp	x22, x21, [sp, #48]
  41c208:	ldp	x24, x23, [sp, #32]
  41c20c:	ldr	x25, [sp, #16]
  41c210:	ldp	x29, x30, [sp], #80
  41c214:	ret
  41c218:	stp	x29, x30, [sp, #-48]!
  41c21c:	str	x21, [sp, #16]
  41c220:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c224:	stp	x20, x19, [sp, #32]
  41c228:	mov	x19, x0
  41c22c:	mov	x20, xzr
  41c230:	add	x21, x21, #0xcf8
  41c234:	mov	x29, sp
  41c238:	ldur	x1, [x21, #-8]
  41c23c:	ldrh	w2, [x21], #24
  41c240:	mov	x0, x19
  41c244:	bl	4245e4 <feof@plt+0x21c14>
  41c248:	mov	w8, #0x1                   	// #1
  41c24c:	bfi	w8, w20, #1, #31
  41c250:	add	x20, x20, #0x1
  41c254:	cmp	x20, #0x13
  41c258:	strb	w8, [x0, #16]
  41c25c:	b.ne	41c238 <feof@plt+0x19868>  // b.any
  41c260:	ldp	x20, x19, [sp, #32]
  41c264:	ldr	x21, [sp, #16]
  41c268:	ldp	x29, x30, [sp], #48
  41c26c:	ret
  41c270:	b	41c274 <feof@plt+0x198a4>
  41c274:	stp	x29, x30, [sp, #-64]!
  41c278:	stp	x20, x19, [sp, #48]
  41c27c:	mov	x19, x0
  41c280:	mov	w0, #0x400                 	// #1024
  41c284:	stp	x24, x23, [sp, #16]
  41c288:	stp	x22, x21, [sp, #32]
  41c28c:	mov	x29, sp
  41c290:	mov	w21, #0x400                 	// #1024
  41c294:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41c298:	mov	x20, x0
  41c29c:	mov	x23, xzr
  41c2a0:	mov	w24, #0x20                  	// #32
  41c2a4:	mov	x0, x19
  41c2a8:	bl	42db34 <feof@plt+0x2b164>
  41c2ac:	ldrb	w8, [x0, #4]
  41c2b0:	cmp	w8, #0x53
  41c2b4:	b.eq	41c2a4 <feof@plt+0x198d4>  // b.none
  41c2b8:	cmp	w8, #0x2
  41c2bc:	b.eq	41c33c <feof@plt+0x1996c>  // b.none
  41c2c0:	cmp	w8, #0x16
  41c2c4:	b.eq	41c328 <feof@plt+0x19958>  // b.none
  41c2c8:	mov	x22, x0
  41c2cc:	bl	42877c <feof@plt+0x25dac>
  41c2d0:	add	w8, w0, #0x2
  41c2d4:	add	x9, x23, x8
  41c2d8:	cmp	x9, x21
  41c2dc:	b.ls	41c2f8 <feof@plt+0x19928>  // b.plast
  41c2e0:	add	x8, x21, x8
  41c2e4:	lsl	x21, x8, #1
  41c2e8:	mov	x0, x20
  41c2ec:	mov	x1, x21
  41c2f0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  41c2f4:	mov	x20, x0
  41c2f8:	ldrb	w8, [x22, #6]
  41c2fc:	tbz	w8, #0, 41c30c <feof@plt+0x1993c>
  41c300:	add	x8, x23, #0x1
  41c304:	strb	w24, [x20, x23]
  41c308:	mov	x23, x8
  41c30c:	add	x2, x20, x23
  41c310:	mov	w3, #0x1                   	// #1
  41c314:	mov	x0, x19
  41c318:	mov	x1, x22
  41c31c:	bl	428950 <feof@plt+0x25f80>
  41c320:	sub	x23, x0, x20
  41c324:	b	41c2a4 <feof@plt+0x198d4>
  41c328:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c32c:	add	x2, x2, #0xcc7
  41c330:	mov	w1, #0x3                   	// #3
  41c334:	mov	x0, x19
  41c338:	bl	41de04 <feof@plt+0x1b434>
  41c33c:	strb	wzr, [x20, x23]
  41c340:	mov	x0, x20
  41c344:	ldp	x20, x19, [sp, #48]
  41c348:	ldp	x22, x21, [sp, #32]
  41c34c:	ldp	x24, x23, [sp, #16]
  41c350:	ldp	x29, x30, [sp], #64
  41c354:	ret
  41c358:	stp	x29, x30, [sp, #-32]!
  41c35c:	mov	w1, #0x1                   	// #1
  41c360:	stp	x20, x19, [sp, #16]
  41c364:	mov	x29, sp
  41c368:	mov	x20, x0
  41c36c:	bl	41d350 <feof@plt+0x1a980>
  41c370:	cbz	x0, 41c3cc <feof@plt+0x199fc>
  41c374:	ldrb	w9, [x20, #1124]
  41c378:	ldr	x8, [x20, #1024]
  41c37c:	mov	x19, x0
  41c380:	cmp	w9, #0x0
  41c384:	cset	w9, eq  // eq = none
  41c388:	strb	w9, [x20, #21]
  41c38c:	cbz	x8, 41c398 <feof@plt+0x199c8>
  41c390:	mov	x0, x20
  41c394:	blr	x8
  41c398:	mov	x0, x20
  41c39c:	mov	x1, x19
  41c3a0:	bl	42e5b8 <feof@plt+0x2bbe8>
  41c3a4:	tbz	w0, #0, 41c3c0 <feof@plt+0x199f0>
  41c3a8:	ldr	x8, [x20, #936]
  41c3ac:	cbz	x8, 41c3c0 <feof@plt+0x199f0>
  41c3b0:	ldr	w1, [x20, #48]
  41c3b4:	mov	x0, x20
  41c3b8:	mov	x2, x19
  41c3bc:	blr	x8
  41c3c0:	ldrh	w8, [x19, #18]
  41c3c4:	and	w8, w8, #0xffffff7f
  41c3c8:	strh	w8, [x19, #18]
  41c3cc:	ldp	x20, x19, [sp, #16]
  41c3d0:	ldp	x29, x30, [sp], #32
  41c3d4:	ret
  41c3d8:	mov	w1, wzr
  41c3dc:	b	41d42c <feof@plt+0x1aa5c>
  41c3e0:	stp	x29, x30, [sp, #-48]!
  41c3e4:	stp	x20, x19, [sp, #32]
  41c3e8:	str	x21, [sp, #16]
  41c3ec:	ldr	x21, [x0]
  41c3f0:	mov	x19, x0
  41c3f4:	mov	x29, sp
  41c3f8:	ldr	x20, [x21, #96]
  41c3fc:	cbz	x20, 41c478 <feof@plt+0x19aa8>
  41c400:	ldrb	w8, [x20, #25]
  41c404:	cbz	w8, 41c498 <feof@plt+0x19ac8>
  41c408:	ldr	x8, [x20]
  41c40c:	cbnz	x8, 41c424 <feof@plt+0x19a54>
  41c410:	ldr	x9, [x20, #16]
  41c414:	cbz	x9, 41c424 <feof@plt+0x19a54>
  41c418:	mov	w10, #0x1                   	// #1
  41c41c:	strb	w10, [x19, #440]
  41c420:	str	x9, [x19, #424]
  41c424:	str	x8, [x21, #96]
  41c428:	ldr	x8, [x19, #816]
  41c42c:	ldrb	w9, [x20, #25]
  41c430:	cmp	x8, x20
  41c434:	strb	w9, [x19, #18]
  41c438:	b.cs	41c460 <feof@plt+0x19a90>  // b.hs, b.nlast
  41c43c:	ldr	x8, [x19, #840]
  41c440:	cmp	x8, x20
  41c444:	b.ls	41c460 <feof@plt+0x19a90>  // b.plast
  41c448:	str	x20, [x19, #824]
  41c44c:	str	x20, [x19, #832]
  41c450:	ldp	x20, x19, [sp, #32]
  41c454:	ldr	x21, [sp, #16]
  41c458:	ldp	x29, x30, [sp], #48
  41c45c:	ret
  41c460:	add	x0, x19, #0x328
  41c464:	mov	x1, x20
  41c468:	ldp	x20, x19, [sp, #32]
  41c46c:	ldr	x21, [sp, #16]
  41c470:	ldp	x29, x30, [sp], #48
  41c474:	b	450504 <_obstack_free@@Base>
  41c478:	mov	x0, x19
  41c47c:	ldp	x20, x19, [sp, #32]
  41c480:	ldr	x21, [sp, #16]
  41c484:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c488:	add	x2, x2, #0x72e
  41c48c:	mov	w1, #0x3                   	// #3
  41c490:	ldp	x29, x30, [sp], #48
  41c494:	b	41de04 <feof@plt+0x1b434>
  41c498:	ldrb	w8, [x19, #1140]
  41c49c:	cbz	w8, 41c408 <feof@plt+0x19a38>
  41c4a0:	ldr	x8, [x19, #448]
  41c4a4:	ldurb	w8, [x8, #-20]
  41c4a8:	cmp	w8, #0x16
  41c4ac:	b.eq	41c408 <feof@plt+0x19a38>  // b.none
  41c4b0:	mov	x0, x19
  41c4b4:	bl	425308 <feof@plt+0x22938>
  41c4b8:	ldrb	w8, [x0, #4]
  41c4bc:	cmp	w8, #0x16
  41c4c0:	b.eq	41c408 <feof@plt+0x19a38>  // b.none
  41c4c4:	ldr	x8, [x19, #144]
  41c4c8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c4cc:	add	x2, x2, #0x709
  41c4d0:	mov	w1, #0x8                   	// #8
  41c4d4:	ldr	x3, [x8, #8]
  41c4d8:	mov	x0, x19
  41c4dc:	bl	41e064 <feof@plt+0x1b694>
  41c4e0:	b	41c408 <feof@plt+0x19a38>
  41c4e4:	stp	x29, x30, [sp, #-48]!
  41c4e8:	stp	x20, x19, [sp, #32]
  41c4ec:	ldrb	w8, [x0, #18]
  41c4f0:	mov	x19, x0
  41c4f4:	str	x21, [sp, #16]
  41c4f8:	mov	x29, sp
  41c4fc:	cbz	w8, 41c524 <feof@plt+0x19b54>
  41c500:	mov	w20, #0x1                   	// #1
  41c504:	mov	x0, x19
  41c508:	mov	w1, w20
  41c50c:	ldp	x20, x19, [sp, #32]
  41c510:	ldr	x21, [sp, #16]
  41c514:	mov	w2, #0x3                   	// #3
  41c518:	mov	x3, xzr
  41c51c:	ldp	x29, x30, [sp], #48
  41c520:	b	41d7a8 <feof@plt+0x1add8>
  41c524:	mov	x0, x19
  41c528:	mov	w1, wzr
  41c52c:	bl	41d350 <feof@plt+0x1a980>
  41c530:	cbz	x0, 41c500 <feof@plt+0x19b30>
  41c534:	ldrh	w8, [x0, #18]
  41c538:	mov	x21, x0
  41c53c:	ubfx	w9, w8, #8, #1
  41c540:	tst	w8, #0x2
  41c544:	and	w10, w8, #0x3
  41c548:	csinc	w20, w9, wzr, ne  // ne = any
  41c54c:	cmp	w10, #0x2
  41c550:	b.ne	41c5c8 <feof@plt+0x19bf8>  // b.any
  41c554:	ldr	x8, [x21, #24]
  41c558:	ldrb	w9, [x8, #19]
  41c55c:	orr	w9, w9, #0x20
  41c560:	strb	w9, [x8, #19]
  41c564:	ldrh	w8, [x21, #18]
  41c568:	tbz	w8, #7, 41c5cc <feof@plt+0x19bfc>
  41c56c:	ldr	x8, [x19, #1032]
  41c570:	cbz	x8, 41c584 <feof@plt+0x19bb4>
  41c574:	ldr	w1, [x19, #48]
  41c578:	mov	x0, x19
  41c57c:	mov	x2, x21
  41c580:	blr	x8
  41c584:	ldr	x8, [x19, #448]
  41c588:	ldurb	w8, [x8, #-20]
  41c58c:	cmp	w8, #0x16
  41c590:	b.eq	41c504 <feof@plt+0x19b34>  // b.none
  41c594:	mov	x0, x19
  41c598:	bl	425308 <feof@plt+0x22938>
  41c59c:	ldrb	w8, [x0, #4]
  41c5a0:	cmp	w8, #0x16
  41c5a4:	b.eq	41c504 <feof@plt+0x19b34>  // b.none
  41c5a8:	ldr	x8, [x19, #144]
  41c5ac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c5b0:	add	x2, x2, #0x709
  41c5b4:	mov	x0, x19
  41c5b8:	ldr	x3, [x8, #8]
  41c5bc:	mov	w1, wzr
  41c5c0:	bl	41e064 <feof@plt+0x1b694>
  41c5c4:	b	41c504 <feof@plt+0x19b34>
  41c5c8:	tbnz	w8, #7, 41c56c <feof@plt+0x19b9c>
  41c5cc:	mov	x0, x19
  41c5d0:	mov	x1, x21
  41c5d4:	bl	42f224 <feof@plt+0x2c854>
  41c5d8:	ldr	x8, [x19, #1032]
  41c5dc:	cbnz	x8, 41c574 <feof@plt+0x19ba4>
  41c5e0:	b	41c584 <feof@plt+0x19bb4>
  41c5e4:	stp	x29, x30, [sp, #-32]!
  41c5e8:	ldrb	w8, [x0, #18]
  41c5ec:	str	x19, [sp, #16]
  41c5f0:	mov	x19, x0
  41c5f4:	mov	x29, sp
  41c5f8:	cbz	w8, 41c604 <feof@plt+0x19c34>
  41c5fc:	mov	w1, #0x1                   	// #1
  41c600:	b	41c618 <feof@plt+0x19c48>
  41c604:	mov	w1, #0x1                   	// #1
  41c608:	mov	x0, x19
  41c60c:	bl	41fc30 <feof@plt+0x1d260>
  41c610:	mvn	w8, w0
  41c614:	and	w1, w8, #0x1
  41c618:	ldr	x3, [x19, #432]
  41c61c:	mov	x0, x19
  41c620:	ldr	x19, [sp, #16]
  41c624:	mov	w2, #0x4                   	// #4
  41c628:	ldp	x29, x30, [sp], #32
  41c62c:	b	41d7a8 <feof@plt+0x1add8>
  41c630:	stp	x29, x30, [sp, #-32]!
  41c634:	stp	x20, x19, [sp, #16]
  41c638:	ldr	x8, [x0]
  41c63c:	mov	x19, x0
  41c640:	mov	x29, sp
  41c644:	ldr	x20, [x8, #96]
  41c648:	cbz	x20, 41c6b8 <feof@plt+0x19ce8>
  41c64c:	ldr	w8, [x20, #28]
  41c650:	cmp	w8, #0x5
  41c654:	b.ne	41c688 <feof@plt+0x19cb8>  // b.any
  41c658:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c65c:	add	x2, x2, #0x753
  41c660:	mov	w1, #0x3                   	// #3
  41c664:	mov	x0, x19
  41c668:	bl	41de04 <feof@plt+0x1b434>
  41c66c:	ldr	w2, [x20, #8]
  41c670:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c674:	add	x4, x4, #0x765
  41c678:	mov	w1, #0x3                   	// #3
  41c67c:	mov	x0, x19
  41c680:	mov	w3, wzr
  41c684:	bl	41e2c4 <feof@plt+0x1b8f4>
  41c688:	ldrb	w8, [x20, #24]
  41c68c:	mov	w9, #0x5                   	// #5
  41c690:	str	w9, [x20, #28]
  41c694:	mov	w9, #0x1                   	// #1
  41c698:	strb	w8, [x19, #18]
  41c69c:	ldrb	w8, [x20, #25]
  41c6a0:	strb	w9, [x20, #24]
  41c6a4:	str	xzr, [x20, #16]
  41c6a8:	cbz	w8, 41c6d4 <feof@plt+0x19d04>
  41c6ac:	ldp	x20, x19, [sp, #16]
  41c6b0:	ldp	x29, x30, [sp], #32
  41c6b4:	ret
  41c6b8:	mov	x0, x19
  41c6bc:	ldp	x20, x19, [sp, #16]
  41c6c0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c6c4:	add	x2, x2, #0x741
  41c6c8:	mov	w1, #0x3                   	// #3
  41c6cc:	ldp	x29, x30, [sp], #32
  41c6d0:	b	41de04 <feof@plt+0x1b434>
  41c6d4:	ldrb	w8, [x19, #1140]
  41c6d8:	cbz	w8, 41c6ac <feof@plt+0x19cdc>
  41c6dc:	ldr	x8, [x19, #448]
  41c6e0:	ldurb	w8, [x8, #-20]
  41c6e4:	cmp	w8, #0x16
  41c6e8:	b.eq	41c6ac <feof@plt+0x19cdc>  // b.none
  41c6ec:	mov	x0, x19
  41c6f0:	bl	425308 <feof@plt+0x22938>
  41c6f4:	ldrb	w8, [x0, #4]
  41c6f8:	cmp	w8, #0x16
  41c6fc:	b.eq	41c6ac <feof@plt+0x19cdc>  // b.none
  41c700:	ldr	x8, [x19, #144]
  41c704:	mov	x0, x19
  41c708:	ldp	x20, x19, [sp, #16]
  41c70c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c710:	ldr	x3, [x8, #8]
  41c714:	add	x2, x2, #0x709
  41c718:	mov	w1, #0x8                   	// #8
  41c71c:	ldp	x29, x30, [sp], #32
  41c720:	b	41e064 <feof@plt+0x1b694>
  41c724:	stp	x29, x30, [sp, #-48]!
  41c728:	stp	x20, x19, [sp, #32]
  41c72c:	ldrb	w8, [x0, #18]
  41c730:	mov	x19, x0
  41c734:	str	x21, [sp, #16]
  41c738:	mov	x29, sp
  41c73c:	cbz	w8, 41c768 <feof@plt+0x19d98>
  41c740:	mov	x20, xzr
  41c744:	mov	w21, #0x1                   	// #1
  41c748:	mov	x0, x19
  41c74c:	mov	w1, w21
  41c750:	mov	x3, x20
  41c754:	ldp	x20, x19, [sp, #32]
  41c758:	ldr	x21, [sp, #16]
  41c75c:	mov	w2, #0x6                   	// #6
  41c760:	ldp	x29, x30, [sp], #48
  41c764:	b	41d7a8 <feof@plt+0x1add8>
  41c768:	mov	x0, x19
  41c76c:	mov	w1, wzr
  41c770:	bl	41d350 <feof@plt+0x1a980>
  41c774:	mov	x20, x0
  41c778:	cbz	x0, 41c744 <feof@plt+0x19d74>
  41c77c:	ldrh	w8, [x20, #18]
  41c780:	and	w9, w8, #0x3
  41c784:	cmp	w9, #0x2
  41c788:	lsr	w9, w8, #1
  41c78c:	mov	w10, w8
  41c790:	b.ne	41c7a8 <feof@plt+0x19dd8>  // b.any
  41c794:	ldr	x10, [x20, #24]
  41c798:	ldrb	w11, [x10, #19]
  41c79c:	orr	w11, w11, #0x20
  41c7a0:	strb	w11, [x10, #19]
  41c7a4:	ldrh	w10, [x20, #18]
  41c7a8:	bic	w21, w9, w8, lsr #8
  41c7ac:	tbnz	w10, #7, 41c7bc <feof@plt+0x19dec>
  41c7b0:	mov	x0, x19
  41c7b4:	mov	x1, x20
  41c7b8:	bl	42f224 <feof@plt+0x2c854>
  41c7bc:	ldr	x8, [x19, #1032]
  41c7c0:	and	w21, w21, #0x1
  41c7c4:	cbz	x8, 41c7d8 <feof@plt+0x19e08>
  41c7c8:	ldr	w1, [x19, #48]
  41c7cc:	mov	x0, x19
  41c7d0:	mov	x2, x20
  41c7d4:	blr	x8
  41c7d8:	ldr	x8, [x19, #448]
  41c7dc:	ldurb	w8, [x8, #-20]
  41c7e0:	cmp	w8, #0x16
  41c7e4:	b.eq	41c748 <feof@plt+0x19d78>  // b.none
  41c7e8:	mov	x0, x19
  41c7ec:	bl	425308 <feof@plt+0x22938>
  41c7f0:	ldrb	w8, [x0, #4]
  41c7f4:	cmp	w8, #0x16
  41c7f8:	b.eq	41c748 <feof@plt+0x19d78>  // b.none
  41c7fc:	ldr	x8, [x19, #144]
  41c800:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c804:	add	x2, x2, #0x709
  41c808:	mov	x0, x19
  41c80c:	ldr	x3, [x8, #8]
  41c810:	mov	w1, wzr
  41c814:	bl	41e064 <feof@plt+0x1b694>
  41c818:	b	41c748 <feof@plt+0x19d78>
  41c81c:	stp	x29, x30, [sp, #-32]!
  41c820:	mov	w1, #0x1                   	// #1
  41c824:	stp	x20, x19, [sp, #16]
  41c828:	mov	x29, sp
  41c82c:	mov	x19, x0
  41c830:	bl	41d350 <feof@plt+0x1a980>
  41c834:	cbz	x0, 41c8e0 <feof@plt+0x19f10>
  41c838:	ldr	x8, [x19, #1024]
  41c83c:	mov	x20, x0
  41c840:	cbz	x8, 41c84c <feof@plt+0x19e7c>
  41c844:	mov	x0, x19
  41c848:	blr	x8
  41c84c:	ldr	x8, [x19, #944]
  41c850:	cbz	x8, 41c864 <feof@plt+0x19e94>
  41c854:	ldr	w1, [x19, #48]
  41c858:	mov	x0, x19
  41c85c:	mov	x2, x20
  41c860:	blr	x8
  41c864:	ldrh	w8, [x20, #18]
  41c868:	tbz	w8, #1, 41c8e0 <feof@plt+0x19f10>
  41c86c:	tbnz	w8, #5, 41c8a8 <feof@plt+0x19ed8>
  41c870:	mvn	w8, w8
  41c874:	tst	w8, #0x3
  41c878:	b.ne	41c8c0 <feof@plt+0x19ef0>  // b.any
  41c87c:	ldrb	w8, [x19, #1143]
  41c880:	cbz	w8, 41c8c0 <feof@plt+0x19ef0>
  41c884:	ldr	w2, [x19, #48]
  41c888:	ldr	x5, [x20]
  41c88c:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c890:	add	x4, x4, #0x780
  41c894:	mov	w1, #0xb                   	// #11
  41c898:	mov	x0, x19
  41c89c:	mov	w3, wzr
  41c8a0:	bl	41e3c0 <feof@plt+0x1b9f0>
  41c8a4:	b	41c8c0 <feof@plt+0x19ef0>
  41c8a8:	ldr	x3, [x20]
  41c8ac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c8b0:	add	x2, x2, #0x780
  41c8b4:	mov	x0, x19
  41c8b8:	mov	w1, wzr
  41c8bc:	bl	41de04 <feof@plt+0x1b434>
  41c8c0:	ldrb	w8, [x19, #1151]
  41c8c4:	cbz	w8, 41c8d8 <feof@plt+0x19f08>
  41c8c8:	mov	x0, x19
  41c8cc:	mov	x1, x20
  41c8d0:	mov	x2, xzr
  41c8d4:	bl	42d32c <feof@plt+0x2a95c>
  41c8d8:	mov	x0, x20
  41c8dc:	bl	42e3d4 <feof@plt+0x2ba04>
  41c8e0:	ldr	x8, [x19, #448]
  41c8e4:	ldurb	w8, [x8, #-20]
  41c8e8:	cmp	w8, #0x16
  41c8ec:	b.eq	41c904 <feof@plt+0x19f34>  // b.none
  41c8f0:	mov	x0, x19
  41c8f4:	bl	425308 <feof@plt+0x22938>
  41c8f8:	ldrb	w8, [x0, #4]
  41c8fc:	cmp	w8, #0x16
  41c900:	b.ne	41c910 <feof@plt+0x19f40>  // b.any
  41c904:	ldp	x20, x19, [sp, #16]
  41c908:	ldp	x29, x30, [sp], #32
  41c90c:	ret
  41c910:	ldr	x8, [x19, #144]
  41c914:	mov	x0, x19
  41c918:	ldp	x20, x19, [sp, #16]
  41c91c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41c920:	ldr	x3, [x8, #8]
  41c924:	add	x2, x2, #0x709
  41c928:	mov	w1, wzr
  41c92c:	ldp	x29, x30, [sp], #32
  41c930:	b	41e064 <feof@plt+0x1b694>
  41c934:	sub	sp, sp, #0x50
  41c938:	stp	x29, x30, [sp, #16]
  41c93c:	stp	x24, x23, [sp, #32]
  41c940:	stp	x22, x21, [sp, #48]
  41c944:	stp	x20, x19, [sp, #64]
  41c948:	ldr	x23, [x0, #40]
  41c94c:	mov	w10, #0x18                  	// #24
  41c950:	ldrb	w11, [x0, #1152]
  41c954:	add	x29, sp, #0x10
  41c958:	ldr	w8, [x23, #12]
  41c95c:	ldr	x9, [x23]
  41c960:	cmp	w11, #0x0
  41c964:	mov	x19, x0
  41c968:	sub	w8, w8, #0x1
  41c96c:	smaddl	x8, w8, w10, x9
  41c970:	ldrb	w21, [x8, #5]
  41c974:	ldr	x20, [x8, #8]
  41c978:	mov	w8, #0x7fffffff            	// #2147483647
  41c97c:	mov	w9, #0x7fff                	// #32767
  41c980:	csel	w24, w9, w8, eq  // eq = none
  41c984:	bl	42db34 <feof@plt+0x2b164>
  41c988:	ldrb	w8, [x0, #4]
  41c98c:	cmp	w8, #0x16
  41c990:	b.eq	41ca50 <feof@plt+0x1a080>  // b.none
  41c994:	mov	x1, x0
  41c998:	cmp	w8, #0x37
  41c99c:	b.ne	41ca1c <feof@plt+0x1a04c>  // b.any
  41c9a0:	ldr	w9, [x1, #8]
  41c9a4:	cbz	w9, 41ca78 <feof@plt+0x1a0a8>
  41c9a8:	ldr	x10, [x1, #16]
  41c9ac:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  41c9b0:	mov	w8, wzr
  41c9b4:	mov	w12, wzr
  41c9b8:	add	x11, x11, #0xa50
  41c9bc:	mov	w13, #0xa                   	// #10
  41c9c0:	ldrb	w14, [x10]
  41c9c4:	ldrh	w15, [x11, x14, lsl #1]
  41c9c8:	tbz	w15, #2, 41ca1c <feof@plt+0x1a04c>
  41c9cc:	madd	w14, w12, w13, w14
  41c9d0:	sub	w22, w14, #0x30
  41c9d4:	cmp	w22, w12
  41c9d8:	sub	x9, x9, #0x1
  41c9dc:	add	x10, x10, #0x1
  41c9e0:	csinc	w8, w8, wzr, cs  // cs = hs, nlast
  41c9e4:	mov	w12, w22
  41c9e8:	cbnz	x9, 41c9c0 <feof@plt+0x19ff0>
  41c9ec:	ldrb	w9, [x19, #1154]
  41c9f0:	cbz	w9, 41ca88 <feof@plt+0x1a0b8>
  41c9f4:	sub	w9, w22, #0x1
  41c9f8:	cmp	w9, w24
  41c9fc:	b.cs	41ca08 <feof@plt+0x1a038>  // b.hs, b.nlast
  41ca00:	tst	w8, #0xff
  41ca04:	b.eq	41caa4 <feof@plt+0x1a0d4>  // b.none
  41ca08:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ca0c:	add	x2, x2, #0x7de
  41ca10:	mov	w1, #0x2                   	// #2
  41ca14:	mov	x0, x19
  41ca18:	b	41caa0 <feof@plt+0x1a0d0>
  41ca1c:	mov	x0, x19
  41ca20:	bl	428aa4 <feof@plt+0x260d4>
  41ca24:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ca28:	add	x2, x2, #0x7b3
  41ca2c:	mov	x3, x0
  41ca30:	mov	x0, x19
  41ca34:	ldp	x20, x19, [sp, #64]
  41ca38:	ldp	x22, x21, [sp, #48]
  41ca3c:	ldp	x24, x23, [sp, #32]
  41ca40:	ldp	x29, x30, [sp, #16]
  41ca44:	mov	w1, #0x3                   	// #3
  41ca48:	add	sp, sp, #0x50
  41ca4c:	b	41de04 <feof@plt+0x1b434>
  41ca50:	mov	x0, x19
  41ca54:	ldp	x20, x19, [sp, #64]
  41ca58:	ldp	x22, x21, [sp, #48]
  41ca5c:	ldp	x24, x23, [sp, #32]
  41ca60:	ldp	x29, x30, [sp, #16]
  41ca64:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ca68:	add	x2, x2, #0x790
  41ca6c:	mov	w1, #0x3                   	// #3
  41ca70:	add	sp, sp, #0x50
  41ca74:	b	41de04 <feof@plt+0x1b434>
  41ca78:	mov	w22, wzr
  41ca7c:	mov	w8, wzr
  41ca80:	ldrb	w9, [x19, #1154]
  41ca84:	cbnz	w9, 41c9f4 <feof@plt+0x1a024>
  41ca88:	tst	w8, #0xff
  41ca8c:	b.eq	41caa4 <feof@plt+0x1a0d4>  // b.none
  41ca90:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ca94:	add	x2, x2, #0x7de
  41ca98:	mov	x0, x19
  41ca9c:	mov	w1, wzr
  41caa0:	bl	41de04 <feof@plt+0x1b434>
  41caa4:	mov	x0, x19
  41caa8:	bl	42db34 <feof@plt+0x2b164>
  41caac:	ldrb	w8, [x0, #4]
  41cab0:	cmp	w8, #0x16
  41cab4:	b.eq	41cb38 <feof@plt+0x1a168>  // b.none
  41cab8:	mov	x1, x0
  41cabc:	cmp	w8, #0x3e
  41cac0:	b.ne	41cbcc <feof@plt+0x1a1fc>  // b.any
  41cac4:	add	x1, x1, #0x8
  41cac8:	mov	x3, sp
  41cacc:	mov	w2, #0x1                   	// #1
  41cad0:	mov	w4, #0x3e                  	// #62
  41cad4:	mov	x0, x19
  41cad8:	stp	xzr, xzr, [sp]
  41cadc:	bl	417b94 <feof@plt+0x151c4>
  41cae0:	ldr	x8, [x19, #448]
  41cae4:	ldr	x9, [sp, #8]
  41cae8:	tst	w0, #0x1
  41caec:	ldurb	w8, [x8, #-20]
  41caf0:	csel	x20, x9, x20, ne  // ne = any
  41caf4:	cmp	w8, #0x16
  41caf8:	b.eq	41cb38 <feof@plt+0x1a168>  // b.none
  41cafc:	mov	x0, x19
  41cb00:	bl	42db34 <feof@plt+0x2b164>
  41cb04:	ldrb	w8, [x0, #4]
  41cb08:	cmp	w8, #0x16
  41cb0c:	b.eq	41cb38 <feof@plt+0x1a168>  // b.none
  41cb10:	ldr	x8, [x19, #144]
  41cb14:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cb18:	add	x2, x2, #0x709
  41cb1c:	mov	x0, x19
  41cb20:	ldr	x3, [x8, #8]
  41cb24:	mov	w1, wzr
  41cb28:	bl	41e064 <feof@plt+0x1b694>
  41cb2c:	b	41cb38 <feof@plt+0x1a168>
  41cb30:	mov	x0, x19
  41cb34:	bl	42da2c <feof@plt+0x2b05c>
  41cb38:	ldr	x8, [x19, #136]
  41cb3c:	ldr	x8, [x8, #8]
  41cb40:	cbnz	x8, 41cb30 <feof@plt+0x1a160>
  41cb44:	ldr	x8, [x19, #448]
  41cb48:	ldurb	w8, [x8, #-20]
  41cb4c:	cmp	w8, #0x16
  41cb50:	b.eq	41cb68 <feof@plt+0x1a198>  // b.none
  41cb54:	mov	x0, x19
  41cb58:	bl	425308 <feof@plt+0x22938>
  41cb5c:	ldrb	w8, [x0, #4]
  41cb60:	cmp	w8, #0x16
  41cb64:	b.ne	41cb54 <feof@plt+0x1a184>  // b.any
  41cb68:	ldr	x0, [x19, #40]
  41cb6c:	mov	w1, #0x3                   	// #3
  41cb70:	mov	w2, w21
  41cb74:	mov	x3, x20
  41cb78:	mov	w4, w22
  41cb7c:	bl	42a0f0 <feof@plt+0x27720>
  41cb80:	mov	x20, x0
  41cb84:	cbz	x0, 41cb98 <feof@plt+0x1a1c8>
  41cb88:	ldr	x0, [x19, #40]
  41cb8c:	ldr	w1, [x20, #16]
  41cb90:	mov	w2, #0x7f                  	// #127
  41cb94:	bl	42a5e8 <feof@plt+0x27c18>
  41cb98:	ldr	x8, [x19, #912]
  41cb9c:	cbz	x8, 41cbac <feof@plt+0x1a1dc>
  41cba0:	mov	x0, x19
  41cba4:	mov	x1, x20
  41cba8:	blr	x8
  41cbac:	mov	w8, #0x1                   	// #1
  41cbb0:	strb	w8, [x23, #116]
  41cbb4:	ldp	x20, x19, [sp, #64]
  41cbb8:	ldp	x22, x21, [sp, #48]
  41cbbc:	ldp	x24, x23, [sp, #32]
  41cbc0:	ldp	x29, x30, [sp, #16]
  41cbc4:	add	sp, sp, #0x50
  41cbc8:	ret
  41cbcc:	mov	x0, x19
  41cbd0:	bl	428aa4 <feof@plt+0x260d4>
  41cbd4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cbd8:	add	x2, x2, #0x7f7
  41cbdc:	b	41ca2c <feof@plt+0x1a05c>
  41cbe0:	stp	x29, x30, [sp, #-32]!
  41cbe4:	stp	x20, x19, [sp, #16]
  41cbe8:	ldr	x8, [x0]
  41cbec:	mov	x19, x0
  41cbf0:	mov	x29, sp
  41cbf4:	ldr	x20, [x8, #96]
  41cbf8:	cbz	x20, 41cc50 <feof@plt+0x1a280>
  41cbfc:	ldr	w8, [x20, #28]
  41cc00:	cmp	w8, #0x5
  41cc04:	b.ne	41cc38 <feof@plt+0x1a268>  // b.any
  41cc08:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cc0c:	add	x2, x2, #0x826
  41cc10:	mov	w1, #0x3                   	// #3
  41cc14:	mov	x0, x19
  41cc18:	bl	41de04 <feof@plt+0x1b434>
  41cc1c:	ldr	w2, [x20, #8]
  41cc20:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cc24:	add	x4, x4, #0x765
  41cc28:	mov	w1, #0x3                   	// #3
  41cc2c:	mov	x0, x19
  41cc30:	mov	w3, wzr
  41cc34:	bl	41e2c4 <feof@plt+0x1b8f4>
  41cc38:	ldrb	w8, [x20, #24]
  41cc3c:	mov	w9, #0x9                   	// #9
  41cc40:	str	w9, [x20, #28]
  41cc44:	cbz	w8, 41cc6c <feof@plt+0x1a29c>
  41cc48:	mov	w8, #0x1                   	// #1
  41cc4c:	b	41cc88 <feof@plt+0x1a2b8>
  41cc50:	mov	x0, x19
  41cc54:	ldp	x20, x19, [sp, #16]
  41cc58:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cc5c:	add	x2, x2, #0x814
  41cc60:	mov	w1, #0x3                   	// #3
  41cc64:	ldp	x29, x30, [sp], #32
  41cc68:	b	41de04 <feof@plt+0x1b434>
  41cc6c:	mov	x0, x19
  41cc70:	mov	w1, wzr
  41cc74:	bl	41fc30 <feof@plt+0x1d260>
  41cc78:	mvn	w8, w0
  41cc7c:	and	w9, w0, #0x1
  41cc80:	and	w8, w8, #0x1
  41cc84:	strb	w9, [x20, #24]
  41cc88:	strb	w8, [x19, #18]
  41cc8c:	str	xzr, [x20, #16]
  41cc90:	ldp	x20, x19, [sp, #16]
  41cc94:	ldp	x29, x30, [sp], #32
  41cc98:	ret
  41cc9c:	stp	x29, x30, [sp, #-48]!
  41cca0:	stp	x20, x19, [sp, #32]
  41cca4:	ldr	x9, [x0, #144]
  41cca8:	ldr	x8, [x0, #448]
  41ccac:	ldrb	w10, [x0, #24]
  41ccb0:	str	x21, [sp, #16]
  41ccb4:	ldr	x1, [x9, #8]
  41ccb8:	ldur	w20, [x8, #-24]
  41ccbc:	add	w8, w10, #0x1
  41ccc0:	mov	x29, sp
  41ccc4:	mov	x19, x0
  41ccc8:	strb	w8, [x0, #24]
  41cccc:	bl	429218 <feof@plt+0x26848>
  41ccd0:	ldrb	w8, [x19, #24]
  41ccd4:	mov	x21, x0
  41ccd8:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ccdc:	add	x4, x4, #0xf6c
  41cce0:	sub	w8, w8, #0x1
  41cce4:	mov	w1, #0x3                   	// #3
  41cce8:	mov	x0, x19
  41ccec:	mov	w2, w20
  41ccf0:	mov	w3, wzr
  41ccf4:	mov	x5, x21
  41ccf8:	strb	w8, [x19, #24]
  41ccfc:	bl	41e2c4 <feof@plt+0x1b8f4>
  41cd00:	mov	x0, x21
  41cd04:	ldp	x20, x19, [sp, #32]
  41cd08:	ldr	x21, [sp, #16]
  41cd0c:	ldp	x29, x30, [sp], #48
  41cd10:	b	4024c0 <free@plt>
  41cd14:	sub	sp, sp, #0x50
  41cd18:	stp	x29, x30, [sp, #32]
  41cd1c:	add	x29, sp, #0x20
  41cd20:	stp	x22, x21, [sp, #48]
  41cd24:	stp	x20, x19, [sp, #64]
  41cd28:	stur	wzr, [x29, #-4]
  41cd2c:	ldrb	w8, [x0, #24]
  41cd30:	sub	x1, x29, #0x4
  41cd34:	mov	x19, x0
  41cd38:	add	w8, w8, #0x1
  41cd3c:	strb	w8, [x0, #24]
  41cd40:	bl	42e19c <feof@plt+0x2b7cc>
  41cd44:	ldr	x8, [x0, #16]
  41cd48:	ldr	q0, [x0]
  41cd4c:	mov	x20, x0
  41cd50:	str	x8, [sp, #16]
  41cd54:	str	q0, [sp]
  41cd58:	ldrb	w8, [x0, #4]
  41cd5c:	cmp	w8, #0x35
  41cd60:	b.ne	41cd84 <feof@plt+0x1a3b4>  // b.any
  41cd64:	ldr	x21, [x19, #896]
  41cd68:	cbz	x21, 41cd84 <feof@plt+0x1a3b4>
  41cd6c:	ldr	x8, [x20, #8]
  41cd70:	ldr	x9, [x21, #8]
  41cd74:	cmp	x9, x8
  41cd78:	b.eq	41ce34 <feof@plt+0x1a464>  // b.none
  41cd7c:	ldr	x21, [x21]
  41cd80:	cbnz	x21, 41cd70 <feof@plt+0x1a3a0>
  41cd84:	mov	w1, #0x1                   	// #1
  41cd88:	ldr	x8, [x19, #960]
  41cd8c:	cbz	x8, 41ce14 <feof@plt+0x1a444>
  41cd90:	cmp	w1, #0x1
  41cd94:	b.eq	41cdfc <feof@plt+0x1a42c>  // b.none
  41cd98:	ldr	x8, [x19, #136]
  41cd9c:	ldr	x8, [x8, #8]
  41cda0:	cbz	x8, 41cdfc <feof@plt+0x1a42c>
  41cda4:	mov	w0, #0x30                  	// #48
  41cda8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41cdac:	ldr	q0, [sp]
  41cdb0:	ldr	x8, [sp, #16]
  41cdb4:	mov	x2, x0
  41cdb8:	mov	w3, #0x2                   	// #2
  41cdbc:	str	q0, [x0]
  41cdc0:	ldrh	w9, [x0, #6]
  41cdc4:	str	x8, [x0, #16]
  41cdc8:	mov	x1, xzr
  41cdcc:	orr	w8, w9, #0x400
  41cdd0:	strh	w8, [x0, #6]
  41cdd4:	ldr	q0, [x20]
  41cdd8:	ldr	x8, [x20, #16]
  41cddc:	stur	q0, [x0, #24]
  41cde0:	ldrh	w9, [x0, #30]
  41cde4:	str	x8, [x0, #40]
  41cde8:	orr	w8, w9, #0x400
  41cdec:	strh	w8, [x0, #30]
  41cdf0:	mov	x0, x19
  41cdf4:	bl	42d90c <feof@plt+0x2af3c>
  41cdf8:	b	41ce04 <feof@plt+0x1a434>
  41cdfc:	mov	x0, x19
  41ce00:	bl	42e2c0 <feof@plt+0x2b8f0>
  41ce04:	ldr	x8, [x19, #960]
  41ce08:	ldr	w1, [x19, #48]
  41ce0c:	mov	x0, x19
  41ce10:	blr	x8
  41ce14:	ldrb	w8, [x19, #24]
  41ce18:	sub	w8, w8, #0x1
  41ce1c:	strb	w8, [x19, #24]
  41ce20:	ldp	x20, x19, [sp, #64]
  41ce24:	ldp	x22, x21, [sp, #48]
  41ce28:	ldp	x29, x30, [sp, #32]
  41ce2c:	add	sp, sp, #0x50
  41ce30:	ret
  41ce34:	ldrb	w8, [x21, #16]
  41ce38:	cbz	w8, 41cea0 <feof@plt+0x1a4d0>
  41ce3c:	ldrb	w22, [x21, #19]
  41ce40:	cbz	w22, 41ce50 <feof@plt+0x1a480>
  41ce44:	ldrb	w8, [x19, #24]
  41ce48:	sub	w8, w8, #0x1
  41ce4c:	strb	w8, [x19, #24]
  41ce50:	mov	x0, x19
  41ce54:	bl	42db34 <feof@plt+0x2b164>
  41ce58:	ldrb	w8, [x0, #4]
  41ce5c:	cmp	w8, #0x35
  41ce60:	b.ne	41ce88 <feof@plt+0x1a4b8>  // b.any
  41ce64:	ldr	x21, [x21, #24]
  41ce68:	cbz	x21, 41ce8c <feof@plt+0x1a4bc>
  41ce6c:	ldr	x8, [x0, #8]
  41ce70:	ldr	x9, [x21, #8]
  41ce74:	cmp	x9, x8
  41ce78:	b.eq	41ce8c <feof@plt+0x1a4bc>  // b.none
  41ce7c:	ldr	x21, [x21]
  41ce80:	cbnz	x21, 41ce70 <feof@plt+0x1a4a0>
  41ce84:	b	41ce8c <feof@plt+0x1a4bc>
  41ce88:	mov	x21, xzr
  41ce8c:	cbz	w22, 41ce9c <feof@plt+0x1a4cc>
  41ce90:	ldrb	w8, [x19, #24]
  41ce94:	add	w8, w8, #0x1
  41ce98:	strb	w8, [x19, #24]
  41ce9c:	cbz	x21, 41cf30 <feof@plt+0x1a560>
  41cea0:	ldrb	w8, [x21, #18]
  41cea4:	cbz	w8, 41cee0 <feof@plt+0x1a510>
  41cea8:	ldur	w8, [x29, #-4]
  41ceac:	mov	w9, #0x51                  	// #81
  41ceb0:	strb	w9, [x19, #156]
  41ceb4:	mov	w9, #0x1                   	// #1
  41ceb8:	str	w8, [x19, #152]
  41cebc:	ldrh	w8, [x20, #6]
  41cec0:	strh	w8, [x19, #158]
  41cec4:	ldr	w8, [x21, #24]
  41cec8:	strb	w9, [x19, #32]
  41cecc:	str	w8, [x19, #160]
  41ced0:	ldrb	w8, [x21, #19]
  41ced4:	strb	w8, [x19, #33]
  41ced8:	cbnz	w8, 41ce14 <feof@plt+0x1a444>
  41cedc:	b	41cf20 <feof@plt+0x1a550>
  41cee0:	ldr	x8, [x19, #904]
  41cee4:	cbz	x8, 41cef8 <feof@plt+0x1a528>
  41cee8:	mov	x0, x19
  41ceec:	mov	x1, x20
  41cef0:	mov	w2, wzr
  41cef4:	blr	x8
  41cef8:	ldrb	w8, [x21, #19]
  41cefc:	cbz	w8, 41cf0c <feof@plt+0x1a53c>
  41cf00:	ldrb	w8, [x19, #24]
  41cf04:	sub	w8, w8, #0x1
  41cf08:	strb	w8, [x19, #24]
  41cf0c:	ldr	x8, [x21, #24]
  41cf10:	mov	x0, x19
  41cf14:	blr	x8
  41cf18:	ldrb	w8, [x21, #19]
  41cf1c:	cbz	w8, 41ce14 <feof@plt+0x1a444>
  41cf20:	ldrb	w8, [x19, #24]
  41cf24:	add	w8, w8, #0x1
  41cf28:	strb	w8, [x19, #24]
  41cf2c:	b	41ce14 <feof@plt+0x1a444>
  41cf30:	mov	w1, #0x2                   	// #2
  41cf34:	mov	x20, x0
  41cf38:	ldr	x8, [x19, #960]
  41cf3c:	cbnz	x8, 41cd90 <feof@plt+0x1a3c0>
  41cf40:	b	41ce14 <feof@plt+0x1a444>
  41cf44:	stp	x29, x30, [sp, #-48]!
  41cf48:	stp	x20, x19, [sp, #32]
  41cf4c:	ldr	x9, [x0, #144]
  41cf50:	ldr	x8, [x0, #448]
  41cf54:	ldrb	w10, [x0, #24]
  41cf58:	str	x21, [sp, #16]
  41cf5c:	ldr	x1, [x9, #8]
  41cf60:	ldur	w20, [x8, #-24]
  41cf64:	add	w8, w10, #0x1
  41cf68:	mov	x29, sp
  41cf6c:	mov	x19, x0
  41cf70:	strb	w8, [x0, #24]
  41cf74:	bl	429218 <feof@plt+0x26848>
  41cf78:	ldrb	w8, [x19, #24]
  41cf7c:	mov	x21, x0
  41cf80:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cf84:	add	x4, x4, #0xf6c
  41cf88:	sub	w8, w8, #0x1
  41cf8c:	mov	w1, #0x12                  	// #18
  41cf90:	mov	x0, x19
  41cf94:	mov	w2, w20
  41cf98:	mov	w3, wzr
  41cf9c:	mov	x5, x21
  41cfa0:	strb	w8, [x19, #24]
  41cfa4:	bl	41e5b8 <feof@plt+0x1bbe8>
  41cfa8:	mov	x0, x21
  41cfac:	ldp	x20, x19, [sp, #32]
  41cfb0:	ldr	x21, [sp, #16]
  41cfb4:	ldp	x29, x30, [sp], #48
  41cfb8:	b	4024c0 <free@plt>
  41cfbc:	stp	x29, x30, [sp, #-32]!
  41cfc0:	ldr	x8, [x0, #40]
  41cfc4:	str	x19, [sp, #16]
  41cfc8:	mov	x19, x0
  41cfcc:	mov	x29, sp
  41cfd0:	ldr	w8, [x8, #48]
  41cfd4:	cmp	w8, #0x1
  41cfd8:	b.ne	41cff8 <feof@plt+0x1a628>  // b.any
  41cfdc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41cfe0:	add	x2, x2, #0x838
  41cfe4:	mov	x0, x19
  41cfe8:	mov	w1, wzr
  41cfec:	bl	41de04 <feof@plt+0x1b434>
  41cff0:	mov	w1, wzr
  41cff4:	b	41cffc <feof@plt+0x1a62c>
  41cff8:	mov	w1, #0x1                   	// #1
  41cffc:	mov	x0, x19
  41d000:	ldr	x19, [sp, #16]
  41d004:	ldp	x29, x30, [sp], #32
  41d008:	b	41d42c <feof@plt+0x1aa5c>
  41d00c:	stp	x29, x30, [sp, #-32]!
  41d010:	str	x19, [sp, #16]
  41d014:	mov	x29, sp
  41d018:	mov	x19, x0
  41d01c:	bl	42db34 <feof@plt+0x2b164>
  41d020:	ldrb	w8, [x0, #4]
  41d024:	cmp	w8, #0x3e
  41d028:	b.ne	41d048 <feof@plt+0x1a678>  // b.any
  41d02c:	ldr	x8, [x19, #952]
  41d030:	cbz	x8, 41d064 <feof@plt+0x1a694>
  41d034:	ldr	w1, [x19, #48]
  41d038:	add	x2, x0, #0x8
  41d03c:	mov	x0, x19
  41d040:	blr	x8
  41d044:	b	41d064 <feof@plt+0x1a694>
  41d048:	ldr	x8, [x19, #144]
  41d04c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d050:	add	x2, x2, #0x85d
  41d054:	mov	w1, #0x3                   	// #3
  41d058:	ldr	x3, [x8, #8]
  41d05c:	mov	x0, x19
  41d060:	bl	41de04 <feof@plt+0x1b434>
  41d064:	ldr	x8, [x19, #448]
  41d068:	ldurb	w8, [x8, #-20]
  41d06c:	cmp	w8, #0x16
  41d070:	b.eq	41d088 <feof@plt+0x1a6b8>  // b.none
  41d074:	mov	x0, x19
  41d078:	bl	425308 <feof@plt+0x22938>
  41d07c:	ldrb	w8, [x0, #4]
  41d080:	cmp	w8, #0x16
  41d084:	b.ne	41d094 <feof@plt+0x1a6c4>  // b.any
  41d088:	ldr	x19, [sp, #16]
  41d08c:	ldp	x29, x30, [sp], #32
  41d090:	ret
  41d094:	ldr	x8, [x19, #144]
  41d098:	mov	x0, x19
  41d09c:	ldr	x19, [sp, #16]
  41d0a0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d0a4:	ldr	x3, [x8, #8]
  41d0a8:	add	x2, x2, #0x709
  41d0ac:	mov	w1, wzr
  41d0b0:	ldp	x29, x30, [sp], #32
  41d0b4:	b	41e064 <feof@plt+0x1b694>
  41d0b8:	mov	w1, #0x2                   	// #2
  41d0bc:	b	41d42c <feof@plt+0x1aa5c>
  41d0c0:	sub	sp, sp, #0x70
  41d0c4:	add	x2, sp, #0x8
  41d0c8:	mov	w1, #0x10                  	// #16
  41d0cc:	stp	x29, x30, [sp, #16]
  41d0d0:	stp	x28, x27, [sp, #32]
  41d0d4:	stp	x26, x25, [sp, #48]
  41d0d8:	stp	x24, x23, [sp, #64]
  41d0dc:	stp	x22, x21, [sp, #80]
  41d0e0:	stp	x20, x19, [sp, #96]
  41d0e4:	add	x29, sp, #0x10
  41d0e8:	mov	x19, x0
  41d0ec:	bl	41b810 <feof@plt+0x18e40>
  41d0f0:	cbz	x0, 41d208 <feof@plt+0x1a838>
  41d0f4:	mov	x23, x0
  41d0f8:	ldr	x24, [sp, #8]
  41d0fc:	ldr	x27, [x23, #24]!
  41d100:	mov	x20, x0
  41d104:	cbz	x27, 41d1a0 <feof@plt+0x1a7d0>
  41d108:	add	x25, x24, #0x18
  41d10c:	mov	x26, x23
  41d110:	b	41d12c <feof@plt+0x1a75c>
  41d114:	ldr	w8, [x27, #12]
  41d118:	cmp	w28, w8
  41d11c:	b.eq	41d178 <feof@plt+0x1a7a8>  // b.none
  41d120:	ldr	x26, [x26]
  41d124:	ldr	x27, [x26]
  41d128:	cbz	x27, 41d1a0 <feof@plt+0x1a7d0>
  41d12c:	ldr	w8, [x27, #12]
  41d130:	ldr	w9, [x24, #12]
  41d134:	cmp	w8, w9
  41d138:	b.ne	41d120 <feof@plt+0x1a750>  // b.any
  41d13c:	cbz	w8, 41d180 <feof@plt+0x1a7b0>
  41d140:	mov	x28, xzr
  41d144:	add	x21, x27, #0x18
  41d148:	mov	x22, x25
  41d14c:	mov	x0, x21
  41d150:	mov	x1, x22
  41d154:	bl	428dcc <feof@plt+0x263fc>
  41d158:	cbz	w0, 41d114 <feof@plt+0x1a744>
  41d15c:	ldr	w8, [x27, #12]
  41d160:	add	x28, x28, #0x1
  41d164:	add	x22, x22, #0x18
  41d168:	add	x21, x21, #0x18
  41d16c:	cmp	x28, x8
  41d170:	b.cc	41d14c <feof@plt+0x1a77c>  // b.lo, b.ul, b.last
  41d174:	b	41d118 <feof@plt+0x1a748>
  41d178:	ldr	x8, [x26]
  41d17c:	cbz	x8, 41d1a0 <feof@plt+0x1a7d0>
  41d180:	ldr	x8, [x20]
  41d184:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d188:	add	x2, x2, #0x873
  41d18c:	mov	x0, x19
  41d190:	add	x3, x8, #0x1
  41d194:	mov	w1, wzr
  41d198:	bl	41de04 <feof@plt+0x1b434>
  41d19c:	b	41d208 <feof@plt+0x1a838>
  41d1a0:	ldr	w8, [x24, #12]
  41d1a4:	mov	w9, #0x18                  	// #24
  41d1a8:	orr	x10, xzr, #0x18
  41d1ac:	mov	x0, x19
  41d1b0:	madd	x1, x8, x9, x10
  41d1b4:	bl	429710 <feof@plt+0x26d40>
  41d1b8:	str	x0, [sp, #8]
  41d1bc:	ldr	x8, [x23]
  41d1c0:	str	x8, [x0]
  41d1c4:	str	x0, [x23]
  41d1c8:	ldr	x8, [x19, #448]
  41d1cc:	ldurb	w8, [x8, #-20]
  41d1d0:	cmp	w8, #0x16
  41d1d4:	b.eq	41d208 <feof@plt+0x1a838>  // b.none
  41d1d8:	mov	x0, x19
  41d1dc:	bl	425308 <feof@plt+0x22938>
  41d1e0:	ldrb	w8, [x0, #4]
  41d1e4:	cmp	w8, #0x16
  41d1e8:	b.eq	41d208 <feof@plt+0x1a838>  // b.none
  41d1ec:	ldr	x8, [x19, #144]
  41d1f0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d1f4:	add	x2, x2, #0x709
  41d1f8:	mov	x0, x19
  41d1fc:	ldr	x3, [x8, #8]
  41d200:	mov	w1, wzr
  41d204:	bl	41e064 <feof@plt+0x1b694>
  41d208:	ldp	x20, x19, [sp, #96]
  41d20c:	ldp	x22, x21, [sp, #80]
  41d210:	ldp	x24, x23, [sp, #64]
  41d214:	ldp	x26, x25, [sp, #48]
  41d218:	ldp	x28, x27, [sp, #32]
  41d21c:	ldp	x29, x30, [sp, #16]
  41d220:	add	sp, sp, #0x70
  41d224:	ret
  41d228:	sub	sp, sp, #0x60
  41d22c:	add	x2, sp, #0x8
  41d230:	mov	w1, #0x11                  	// #17
  41d234:	stp	x29, x30, [sp, #16]
  41d238:	stp	x26, x25, [sp, #32]
  41d23c:	stp	x24, x23, [sp, #48]
  41d240:	stp	x22, x21, [sp, #64]
  41d244:	stp	x20, x19, [sp, #80]
  41d248:	add	x29, sp, #0x10
  41d24c:	mov	x19, x0
  41d250:	bl	41b810 <feof@plt+0x18e40>
  41d254:	cbz	x0, 41d334 <feof@plt+0x1a964>
  41d258:	ldr	x23, [sp, #8]
  41d25c:	mov	x20, x0
  41d260:	cbz	x23, 41d2d8 <feof@plt+0x1a908>
  41d264:	ldr	x25, [x20, #24]!
  41d268:	cbz	x25, 41d2f4 <feof@plt+0x1a924>
  41d26c:	add	x24, x23, #0x18
  41d270:	b	41d28c <feof@plt+0x1a8bc>
  41d274:	ldr	w8, [x25, #12]
  41d278:	cmp	w26, w8
  41d27c:	b.eq	41d2e4 <feof@plt+0x1a914>  // b.none
  41d280:	ldr	x20, [x20]
  41d284:	ldr	x25, [x20]
  41d288:	cbz	x25, 41d2f4 <feof@plt+0x1a924>
  41d28c:	ldr	w8, [x25, #12]
  41d290:	ldr	w9, [x23, #12]
  41d294:	cmp	w8, w9
  41d298:	b.ne	41d280 <feof@plt+0x1a8b0>  // b.any
  41d29c:	cbz	w8, 41d2ec <feof@plt+0x1a91c>
  41d2a0:	mov	x26, xzr
  41d2a4:	add	x21, x25, #0x18
  41d2a8:	mov	x22, x24
  41d2ac:	mov	x0, x21
  41d2b0:	mov	x1, x22
  41d2b4:	bl	428dcc <feof@plt+0x263fc>
  41d2b8:	cbz	w0, 41d274 <feof@plt+0x1a8a4>
  41d2bc:	ldr	w8, [x25, #12]
  41d2c0:	add	x26, x26, #0x1
  41d2c4:	add	x22, x22, #0x18
  41d2c8:	add	x21, x21, #0x18
  41d2cc:	cmp	x26, x8
  41d2d0:	b.cc	41d2ac <feof@plt+0x1a8dc>  // b.lo, b.ul, b.last
  41d2d4:	b	41d278 <feof@plt+0x1a8a8>
  41d2d8:	mov	x0, x20
  41d2dc:	bl	42e3d4 <feof@plt+0x2ba04>
  41d2e0:	b	41d334 <feof@plt+0x1a964>
  41d2e4:	ldr	x25, [x20]
  41d2e8:	cbz	x25, 41d2f4 <feof@plt+0x1a924>
  41d2ec:	ldr	x8, [x25]
  41d2f0:	str	x8, [x20]
  41d2f4:	ldr	x8, [x19, #448]
  41d2f8:	ldurb	w8, [x8, #-20]
  41d2fc:	cmp	w8, #0x16
  41d300:	b.eq	41d334 <feof@plt+0x1a964>  // b.none
  41d304:	mov	x0, x19
  41d308:	bl	425308 <feof@plt+0x22938>
  41d30c:	ldrb	w8, [x0, #4]
  41d310:	cmp	w8, #0x16
  41d314:	b.eq	41d334 <feof@plt+0x1a964>  // b.none
  41d318:	ldr	x8, [x19, #144]
  41d31c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d320:	add	x2, x2, #0x709
  41d324:	mov	x0, x19
  41d328:	ldr	x3, [x8, #8]
  41d32c:	mov	w1, wzr
  41d330:	bl	41e064 <feof@plt+0x1b694>
  41d334:	ldp	x20, x19, [sp, #80]
  41d338:	ldp	x22, x21, [sp, #64]
  41d33c:	ldp	x24, x23, [sp, #48]
  41d340:	ldp	x26, x25, [sp, #32]
  41d344:	ldp	x29, x30, [sp, #16]
  41d348:	add	sp, sp, #0x60
  41d34c:	ret
  41d350:	stp	x29, x30, [sp, #-32]!
  41d354:	stp	x20, x19, [sp, #16]
  41d358:	mov	x29, sp
  41d35c:	mov	w20, w1
  41d360:	mov	x19, x0
  41d364:	bl	425308 <feof@plt+0x22938>
  41d368:	ldrb	w8, [x0, #4]
  41d36c:	cmp	w8, #0x35
  41d370:	b.ne	41d3ac <feof@plt+0x1a9dc>  // b.any
  41d374:	ldr	x0, [x0, #8]
  41d378:	tbz	w20, #0, 41d3a0 <feof@plt+0x1a9d0>
  41d37c:	ldr	x8, [x19, #1248]
  41d380:	cmp	x0, x8
  41d384:	b.eq	41d3fc <feof@plt+0x1aa2c>  // b.none
  41d388:	ldr	x8, [x19, #1288]
  41d38c:	cmp	x0, x8
  41d390:	b.eq	41d408 <feof@plt+0x1aa38>  // b.none
  41d394:	ldr	x8, [x19, #1296]
  41d398:	cmp	x0, x8
  41d39c:	b.eq	41d408 <feof@plt+0x1aa38>  // b.none
  41d3a0:	ldrb	w8, [x0, #18]
  41d3a4:	tbnz	w8, #3, 41d41c <feof@plt+0x1aa4c>
  41d3a8:	b	41d420 <feof@plt+0x1aa50>
  41d3ac:	ldrb	w9, [x0, #6]
  41d3b0:	tbnz	w9, #4, 41d3d0 <feof@plt+0x1aa00>
  41d3b4:	cmp	w8, #0x16
  41d3b8:	b.ne	41d3f0 <feof@plt+0x1aa20>  // b.any
  41d3bc:	ldr	x8, [x19, #144]
  41d3c0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d3c4:	add	x2, x2, #0x65c
  41d3c8:	ldr	x3, [x8, #8]
  41d3cc:	b	41d3e0 <feof@plt+0x1aa10>
  41d3d0:	ldr	x8, [x0, #8]
  41d3d4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d3d8:	add	x2, x2, #0x61c
  41d3dc:	ldr	x3, [x8]
  41d3e0:	mov	w1, #0x3                   	// #3
  41d3e4:	mov	x0, x19
  41d3e8:	bl	41de04 <feof@plt+0x1b434>
  41d3ec:	b	41d41c <feof@plt+0x1aa4c>
  41d3f0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d3f4:	add	x2, x2, #0x681
  41d3f8:	b	41d410 <feof@plt+0x1aa40>
  41d3fc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d400:	add	x2, x2, #0x5c2
  41d404:	b	41d410 <feof@plt+0x1aa40>
  41d408:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d40c:	add	x2, x2, #0x5eb
  41d410:	mov	w1, #0x3                   	// #3
  41d414:	mov	x0, x19
  41d418:	bl	41de04 <feof@plt+0x1b434>
  41d41c:	mov	x0, xzr
  41d420:	ldp	x20, x19, [sp, #16]
  41d424:	ldp	x29, x30, [sp], #32
  41d428:	ret
  41d42c:	sub	sp, sp, #0x50
  41d430:	stp	x29, x30, [sp, #32]
  41d434:	stp	x22, x21, [sp, #48]
  41d438:	stp	x20, x19, [sp, #64]
  41d43c:	str	xzr, [sp, #16]
  41d440:	ldrb	w8, [x0, #1123]
  41d444:	add	x29, sp, #0x20
  41d448:	mov	w21, w1
  41d44c:	sub	x1, x29, #0x4
  41d450:	cmp	w8, #0x0
  41d454:	cset	w8, eq  // eq = none
  41d458:	add	x2, sp, #0x10
  41d45c:	add	x3, sp, #0xc
  41d460:	mov	x20, x0
  41d464:	strb	w8, [x0, #21]
  41d468:	bl	41d57c <feof@plt+0x1abac>
  41d46c:	mov	x19, x0
  41d470:	cbz	x0, 41d554 <feof@plt+0x1ab84>
  41d474:	ldrb	w8, [x19]
  41d478:	cbz	w8, 41d4bc <feof@plt+0x1aaec>
  41d47c:	ldr	x8, [x20, #40]
  41d480:	ldr	w8, [x8, #48]
  41d484:	cmp	w8, #0xc8
  41d488:	b.cc	41d4a4 <feof@plt+0x1aad4>  // b.lo, b.ul, b.last
  41d48c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d490:	add	x2, x2, #0x6b7
  41d494:	mov	w1, #0x3                   	// #3
  41d498:	mov	x0, x20
  41d49c:	bl	41de04 <feof@plt+0x1b434>
  41d4a0:	b	41d554 <feof@plt+0x1ab84>
  41d4a4:	ldr	x8, [x20, #136]
  41d4a8:	ldr	x8, [x8, #8]
  41d4ac:	cbz	x8, 41d4e4 <feof@plt+0x1ab14>
  41d4b0:	mov	x0, x20
  41d4b4:	bl	42da2c <feof@plt+0x2b05c>
  41d4b8:	b	41d4a4 <feof@plt+0x1aad4>
  41d4bc:	ldr	x8, [x20, #144]
  41d4c0:	ldr	w2, [sp, #12]
  41d4c4:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d4c8:	add	x4, x4, #0x6a1
  41d4cc:	ldr	x5, [x8, #8]
  41d4d0:	mov	w1, #0x3                   	// #3
  41d4d4:	mov	x0, x20
  41d4d8:	mov	w3, wzr
  41d4dc:	bl	41e2c4 <feof@plt+0x1b8f4>
  41d4e0:	b	41d554 <feof@plt+0x1ab84>
  41d4e4:	ldr	x8, [x20, #448]
  41d4e8:	ldurb	w8, [x8, #-20]
  41d4ec:	cmp	w8, #0x16
  41d4f0:	b.eq	41d508 <feof@plt+0x1ab38>  // b.none
  41d4f4:	mov	x0, x20
  41d4f8:	bl	425308 <feof@plt+0x22938>
  41d4fc:	ldrb	w8, [x0, #4]
  41d500:	cmp	w8, #0x16
  41d504:	b.ne	41d4f4 <feof@plt+0x1ab24>  // b.any
  41d508:	ldr	x8, [x20, #928]
  41d50c:	cbz	x8, 41d538 <feof@plt+0x1ab68>
  41d510:	ldr	x9, [x20, #144]
  41d514:	ldur	w22, [x29, #-4]
  41d518:	ldr	w1, [x20, #48]
  41d51c:	ldr	x5, [sp, #16]
  41d520:	ldr	x2, [x9, #8]
  41d524:	mov	x0, x20
  41d528:	mov	x3, x19
  41d52c:	mov	w4, w22
  41d530:	blr	x8
  41d534:	b	41d53c <feof@plt+0x1ab6c>
  41d538:	ldur	w22, [x29, #-4]
  41d53c:	ldr	w4, [sp, #12]
  41d540:	mov	x0, x20
  41d544:	mov	x1, x19
  41d548:	mov	w2, w22
  41d54c:	mov	w3, w21
  41d550:	bl	422d10 <feof@plt+0x20340>
  41d554:	mov	x0, x19
  41d558:	bl	4024c0 <free@plt>
  41d55c:	ldr	x0, [sp, #16]
  41d560:	cbz	x0, 41d568 <feof@plt+0x1ab98>
  41d564:	bl	4024c0 <free@plt>
  41d568:	ldp	x20, x19, [sp, #64]
  41d56c:	ldp	x22, x21, [sp, #48]
  41d570:	ldp	x29, x30, [sp, #32]
  41d574:	add	sp, sp, #0x50
  41d578:	ret
  41d57c:	stp	x29, x30, [sp, #-96]!
  41d580:	stp	x22, x21, [sp, #64]
  41d584:	stp	x20, x19, [sp, #80]
  41d588:	mov	x21, x3
  41d58c:	mov	x20, x2
  41d590:	mov	x22, x1
  41d594:	mov	x19, x0
  41d598:	stp	x28, x27, [sp, #16]
  41d59c:	stp	x26, x25, [sp, #32]
  41d5a0:	stp	x24, x23, [sp, #48]
  41d5a4:	mov	x29, sp
  41d5a8:	mov	x0, x19
  41d5ac:	bl	42db34 <feof@plt+0x2b164>
  41d5b0:	ldrb	w8, [x0, #4]
  41d5b4:	cmp	w8, #0x53
  41d5b8:	b.eq	41d5a8 <feof@plt+0x1abd8>  // b.none
  41d5bc:	ldr	w8, [x0]
  41d5c0:	mov	x23, x0
  41d5c4:	str	w8, [x21]
  41d5c8:	ldrb	w8, [x0, #4]
  41d5cc:	cmp	w8, #0x3
  41d5d0:	b.eq	41d64c <feof@plt+0x1ac7c>  // b.none
  41d5d4:	cmp	w8, #0x44
  41d5d8:	b.eq	41d610 <feof@plt+0x1ac40>  // b.none
  41d5dc:	cmp	w8, #0x3e
  41d5e0:	b.ne	41d5f4 <feof@plt+0x1ac24>  // b.any
  41d5e4:	ldr	x8, [x23, #16]
  41d5e8:	ldrb	w8, [x8]
  41d5ec:	cmp	w8, #0x52
  41d5f0:	b.ne	41d610 <feof@plt+0x1ac40>  // b.any
  41d5f4:	ldr	x8, [x19, #144]
  41d5f8:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d5fc:	add	x9, x9, #0xdf0
  41d600:	cmp	x8, x9
  41d604:	b.eq	41d6c4 <feof@plt+0x1acf4>  // b.none
  41d608:	ldr	x3, [x8, #8]
  41d60c:	b	41d6cc <feof@plt+0x1acfc>
  41d610:	ldr	w8, [x23, #8]
  41d614:	sub	w0, w8, #0x1
  41d618:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41d61c:	ldr	w9, [x23, #8]
  41d620:	ldr	x8, [x23, #16]
  41d624:	mov	x21, x0
  41d628:	sub	w24, w9, #0x2
  41d62c:	add	x1, x8, #0x1
  41d630:	mov	x2, x24
  41d634:	bl	402390 <memcpy@plt>
  41d638:	strb	wzr, [x21, x24]
  41d63c:	ldrb	w8, [x23, #4]
  41d640:	cmp	w8, #0x44
  41d644:	cset	w8, eq  // eq = none
  41d648:	b	41d65c <feof@plt+0x1ac8c>
  41d64c:	mov	x0, x19
  41d650:	bl	41c274 <feof@plt+0x198a4>
  41d654:	mov	x21, x0
  41d658:	mov	w8, #0x1                   	// #1
  41d65c:	str	w8, [x22]
  41d660:	ldr	x8, [x19, #144]
  41d664:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d668:	add	x9, x9, #0xdf0
  41d66c:	cmp	x8, x9
  41d670:	b.eq	41d6e4 <feof@plt+0x1ad14>  // b.none
  41d674:	cbz	x20, 41d680 <feof@plt+0x1acb0>
  41d678:	ldrb	w8, [x19, #1123]
  41d67c:	cbz	w8, 41d704 <feof@plt+0x1ad34>
  41d680:	ldr	x8, [x19, #448]
  41d684:	ldurb	w8, [x8, #-20]
  41d688:	cmp	w8, #0x16
  41d68c:	b.eq	41d6e4 <feof@plt+0x1ad14>  // b.none
  41d690:	mov	x0, x19
  41d694:	bl	42db34 <feof@plt+0x2b164>
  41d698:	ldrb	w8, [x0, #4]
  41d69c:	cmp	w8, #0x16
  41d6a0:	b.eq	41d6e4 <feof@plt+0x1ad14>  // b.none
  41d6a4:	ldr	x8, [x19, #144]
  41d6a8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d6ac:	add	x2, x2, #0x709
  41d6b0:	mov	x0, x19
  41d6b4:	ldr	x3, [x8, #8]
  41d6b8:	mov	w1, wzr
  41d6bc:	bl	41e064 <feof@plt+0x1b694>
  41d6c0:	b	41d6e4 <feof@plt+0x1ad14>
  41d6c4:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d6c8:	add	x3, x3, #0x6d2
  41d6cc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d6d0:	add	x2, x2, #0x6e4
  41d6d4:	mov	w1, #0x3                   	// #3
  41d6d8:	mov	x0, x19
  41d6dc:	bl	41de04 <feof@plt+0x1b434>
  41d6e0:	mov	x21, xzr
  41d6e4:	mov	x0, x21
  41d6e8:	ldp	x20, x19, [sp, #80]
  41d6ec:	ldp	x22, x21, [sp, #64]
  41d6f0:	ldp	x24, x23, [sp, #48]
  41d6f4:	ldp	x26, x25, [sp, #32]
  41d6f8:	ldp	x28, x27, [sp, #16]
  41d6fc:	ldp	x29, x30, [sp], #96
  41d700:	ret
  41d704:	mov	w0, #0x40                  	// #64
  41d708:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  41d70c:	ldr	x8, [x19, #448]
  41d710:	mov	x22, x0
  41d714:	mov	x25, xzr
  41d718:	ldurb	w8, [x8, #-20]
  41d71c:	cmp	w8, #0x16
  41d720:	b.ne	41d730 <feof@plt+0x1ad60>  // b.any
  41d724:	str	xzr, [x22, x25, lsl #3]
  41d728:	str	x22, [x20]
  41d72c:	b	41d6e4 <feof@plt+0x1ad14>
  41d730:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d734:	mov	w26, #0x8                   	// #8
  41d738:	add	x23, x23, #0x709
  41d73c:	mov	x0, x19
  41d740:	bl	425308 <feof@plt+0x22938>
  41d744:	ldrb	w8, [x0, #4]
  41d748:	cmp	w8, #0x16
  41d74c:	b.eq	41d724 <feof@plt+0x1ad54>  // b.none
  41d750:	cmp	w8, #0x4f
  41d754:	b.eq	41d774 <feof@plt+0x1ada4>  // b.none
  41d758:	ldr	x8, [x19, #144]
  41d75c:	mov	w1, #0x2                   	// #2
  41d760:	mov	x0, x19
  41d764:	mov	x2, x23
  41d768:	ldr	x3, [x8, #8]
  41d76c:	bl	41de04 <feof@plt+0x1b434>
  41d770:	b	41d73c <feof@plt+0x1ad6c>
  41d774:	add	x27, x25, #0x1
  41d778:	mov	x24, x0
  41d77c:	cmp	x27, x26
  41d780:	b.cc	41d79c <feof@plt+0x1adcc>  // b.lo, b.ul, b.last
  41d784:	lsl	x1, x26, #4
  41d788:	mov	x0, x22
  41d78c:	lsl	x28, x26, #1
  41d790:	bl	450728 <_obstack_memory_used@@Base+0x190>
  41d794:	mov	x22, x0
  41d798:	mov	x26, x28
  41d79c:	str	x24, [x22, x25, lsl #3]
  41d7a0:	mov	x25, x27
  41d7a4:	b	41d73c <feof@plt+0x1ad6c>
  41d7a8:	stp	x29, x30, [sp, #-64]!
  41d7ac:	stp	x22, x21, [sp, #32]
  41d7b0:	stp	x20, x19, [sp, #48]
  41d7b4:	ldr	x8, [x0, #840]
  41d7b8:	ldr	x9, [x0, #832]
  41d7bc:	str	x23, [sp, #16]
  41d7c0:	ldr	x23, [x0]
  41d7c4:	mov	x20, x3
  41d7c8:	sub	x8, x8, x9
  41d7cc:	mov	w22, w2
  41d7d0:	mov	x19, x0
  41d7d4:	cmp	x8, #0x1f
  41d7d8:	mov	w21, w1
  41d7dc:	mov	x29, sp
  41d7e0:	b.hi	41d7f4 <feof@plt+0x1ae24>  // b.pmore
  41d7e4:	add	x0, x19, #0x328
  41d7e8:	mov	w1, #0x20                  	// #32
  41d7ec:	bl	45037c <_obstack_newchunk@@Base>
  41d7f0:	ldr	x9, [x19, #832]
  41d7f4:	ldr	x8, [x19, #824]
  41d7f8:	add	x9, x9, #0x20
  41d7fc:	str	x9, [x19, #832]
  41d800:	cmp	x9, x8
  41d804:	b.ne	41d814 <feof@plt+0x1ae44>  // b.any
  41d808:	ldrb	w10, [x19, #888]
  41d80c:	orr	w10, w10, #0x2
  41d810:	strb	w10, [x19, #888]
  41d814:	ldr	x11, [x19, #856]
  41d818:	ldr	x12, [x19, #816]
  41d81c:	ldr	x10, [x19, #840]
  41d820:	add	x9, x11, x9
  41d824:	bic	x9, x9, x11
  41d828:	sub	x11, x9, x12
  41d82c:	sub	x12, x10, x12
  41d830:	cmp	x11, x12
  41d834:	str	x9, [x19, #832]
  41d838:	b.ls	41d844 <feof@plt+0x1ae74>  // b.plast
  41d83c:	mov	x9, x10
  41d840:	str	x10, [x19, #832]
  41d844:	ldr	w10, [x19, #48]
  41d848:	str	x9, [x19, #824]
  41d84c:	str	w10, [x8, #8]
  41d850:	ldr	x9, [x23, #96]
  41d854:	str	x9, [x8]
  41d858:	ldrb	w9, [x19, #18]
  41d85c:	str	w22, [x8, #28]
  41d860:	cmp	w9, #0x0
  41d864:	cset	w9, ne  // ne = any
  41d868:	cmp	w21, #0x0
  41d86c:	cset	w10, eq  // eq = none
  41d870:	strb	w9, [x8, #25]
  41d874:	orr	w9, w10, w9
  41d878:	strb	w9, [x8, #24]
  41d87c:	ldrb	w9, [x19, #440]
  41d880:	cbz	w9, 41d88c <feof@plt+0x1aebc>
  41d884:	ldr	x9, [x19, #424]
  41d888:	cbz	x9, 41d890 <feof@plt+0x1aec0>
  41d88c:	mov	x20, xzr
  41d890:	str	x20, [x8, #16]
  41d894:	strb	w21, [x19, #18]
  41d898:	str	x8, [x23, #96]
  41d89c:	ldp	x20, x19, [sp, #48]
  41d8a0:	ldp	x22, x21, [sp, #32]
  41d8a4:	ldr	x23, [sp, #16]
  41d8a8:	ldp	x29, x30, [sp], #64
  41d8ac:	ret
  41d8b0:	sub	sp, sp, #0x60
  41d8b4:	stp	x29, x30, [sp, #16]
  41d8b8:	stp	x24, x23, [sp, #48]
  41d8bc:	stp	x22, x21, [sp, #64]
  41d8c0:	stp	x20, x19, [sp, #80]
  41d8c4:	ldr	x20, [x0, #40]
  41d8c8:	mov	w10, #0x18                  	// #24
  41d8cc:	mov	w1, #0x1                   	// #1
  41d8d0:	str	x25, [sp, #32]
  41d8d4:	ldr	w8, [x20, #12]
  41d8d8:	ldr	x9, [x20]
  41d8dc:	add	x29, sp, #0x10
  41d8e0:	mov	x19, x0
  41d8e4:	sub	w8, w8, #0x1
  41d8e8:	smaddl	x8, w8, w10, x9
  41d8ec:	ldr	x21, [x8, #8]
  41d8f0:	ldrb	w23, [x8, #5]
  41d8f4:	bl	42e2c0 <feof@plt+0x2b8f0>
  41d8f8:	mov	x0, x19
  41d8fc:	bl	42db34 <feof@plt+0x2b164>
  41d900:	ldrb	w8, [x0, #4]
  41d904:	mov	x1, x0
  41d908:	cmp	w8, #0x37
  41d90c:	b.ne	41d950 <feof@plt+0x1af80>  // b.any
  41d910:	ldr	w8, [x1, #8]
  41d914:	cbz	w8, 41d988 <feof@plt+0x1afb8>
  41d918:	ldr	x9, [x1, #16]
  41d91c:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  41d920:	mov	w22, wzr
  41d924:	add	x10, x10, #0xa50
  41d928:	mov	w11, #0xa                   	// #10
  41d92c:	ldrb	w12, [x9]
  41d930:	ldrh	w13, [x10, x12, lsl #1]
  41d934:	tbz	w13, #2, 41d950 <feof@plt+0x1af80>
  41d938:	madd	w12, w22, w11, w12
  41d93c:	sub	x8, x8, #0x1
  41d940:	add	x9, x9, #0x1
  41d944:	sub	w22, w12, #0x30
  41d948:	cbnz	x8, 41d92c <feof@plt+0x1af5c>
  41d94c:	b	41d98c <feof@plt+0x1afbc>
  41d950:	mov	x0, x19
  41d954:	bl	428aa4 <feof@plt+0x260d4>
  41d958:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41d95c:	add	x2, x2, #0x884
  41d960:	mov	x3, x0
  41d964:	mov	x0, x19
  41d968:	ldp	x20, x19, [sp, #80]
  41d96c:	ldp	x22, x21, [sp, #64]
  41d970:	ldp	x24, x23, [sp, #48]
  41d974:	ldr	x25, [sp, #32]
  41d978:	ldp	x29, x30, [sp, #16]
  41d97c:	mov	w1, #0x3                   	// #3
  41d980:	add	sp, sp, #0x60
  41d984:	b	41de04 <feof@plt+0x1b434>
  41d988:	mov	w22, wzr
  41d98c:	mov	x0, x19
  41d990:	bl	42db34 <feof@plt+0x2b164>
  41d994:	ldrb	w8, [x0, #4]
  41d998:	cmp	w8, #0x16
  41d99c:	b.eq	41dab4 <feof@plt+0x1b0e4>  // b.none
  41d9a0:	mov	x1, x0
  41d9a4:	cmp	w8, #0x3e
  41d9a8:	b.ne	41dabc <feof@plt+0x1b0ec>  // b.any
  41d9ac:	add	x1, x1, #0x8
  41d9b0:	mov	x3, sp
  41d9b4:	mov	w2, #0x1                   	// #1
  41d9b8:	mov	w4, #0x3e                  	// #62
  41d9bc:	mov	x0, x19
  41d9c0:	stp	xzr, xzr, [sp]
  41d9c4:	bl	417b94 <feof@plt+0x151c4>
  41d9c8:	ldr	x8, [sp, #8]
  41d9cc:	tst	w0, #0x1
  41d9d0:	mov	x0, x19
  41d9d4:	csel	x21, x8, x21, ne  // ne = any
  41d9d8:	bl	425308 <feof@plt+0x22938>
  41d9dc:	ldrb	w8, [x0, #4]
  41d9e0:	cmp	w8, #0x16
  41d9e4:	b.eq	41dafc <feof@plt+0x1b12c>  // b.none
  41d9e8:	mov	x1, x0
  41d9ec:	cmp	w8, #0x37
  41d9f0:	b.ne	41dad0 <feof@plt+0x1b100>  // b.any
  41d9f4:	ldr	w8, [x1, #8]
  41d9f8:	cmp	w8, #0x1
  41d9fc:	b.ne	41dad0 <feof@plt+0x1b100>  // b.any
  41da00:	ldr	x8, [x1, #16]
  41da04:	ldrb	w8, [x8]
  41da08:	cmp	w8, #0x34
  41da0c:	b.eq	41dad0 <feof@plt+0x1b100>  // b.none
  41da10:	sub	w9, w8, #0x31
  41da14:	cmp	w9, #0x4
  41da18:	b.cs	41dad0 <feof@plt+0x1b100>  // b.hs, b.nlast
  41da1c:	cmp	w8, #0x32
  41da20:	b.eq	41dc5c <feof@plt+0x1b28c>  // b.none
  41da24:	cmp	w8, #0x31
  41da28:	b.ne	41dcac <feof@plt+0x1b2dc>  // b.any
  41da2c:	mov	x0, x19
  41da30:	mov	x1, x21
  41da34:	bl	423384 <feof@plt+0x209b4>
  41da38:	mov	x0, x19
  41da3c:	bl	425308 <feof@plt+0x22938>
  41da40:	ldrb	w8, [x0, #4]
  41da44:	cmp	w8, #0x16
  41da48:	b.eq	41daa8 <feof@plt+0x1b0d8>  // b.none
  41da4c:	mov	x1, x0
  41da50:	cmp	w8, #0x37
  41da54:	b.ne	41da88 <feof@plt+0x1b0b8>  // b.any
  41da58:	ldr	w8, [x1, #8]
  41da5c:	cmp	w8, #0x1
  41da60:	b.ne	41da88 <feof@plt+0x1b0b8>  // b.any
  41da64:	ldr	x8, [x1, #16]
  41da68:	ldrb	w8, [x8]
  41da6c:	sub	w9, w8, #0x32
  41da70:	cmp	w9, #0x2
  41da74:	b.hi	41da88 <feof@plt+0x1b0b8>  // b.pmore
  41da78:	cmp	w8, #0x34
  41da7c:	b.eq	41da88 <feof@plt+0x1b0b8>  // b.none
  41da80:	cmp	w8, #0x32
  41da84:	b.ne	41dd48 <feof@plt+0x1b378>  // b.any
  41da88:	mov	x0, x19
  41da8c:	bl	428aa4 <feof@plt+0x260d4>
  41da90:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41da94:	mov	x3, x0
  41da98:	add	x2, x2, #0x8e1
  41da9c:	mov	w1, #0x3                   	// #3
  41daa0:	mov	x0, x19
  41daa4:	bl	41de04 <feof@plt+0x1b434>
  41daa8:	mov	w24, wzr
  41daac:	mov	w23, wzr
  41dab0:	b	41db04 <feof@plt+0x1b134>
  41dab4:	mov	w24, #0x3                   	// #3
  41dab8:	b	41db58 <feof@plt+0x1b188>
  41dabc:	mov	x0, x19
  41dac0:	bl	428aa4 <feof@plt+0x260d4>
  41dac4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dac8:	add	x2, x2, #0x7f7
  41dacc:	b	41d960 <feof@plt+0x1af90>
  41dad0:	mov	x0, x19
  41dad4:	bl	428aa4 <feof@plt+0x260d4>
  41dad8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dadc:	mov	x3, x0
  41dae0:	add	x2, x2, #0x8e1
  41dae4:	mov	w1, #0x3                   	// #3
  41dae8:	mov	x0, x19
  41daec:	mov	w24, #0x3                   	// #3
  41daf0:	bl	41de04 <feof@plt+0x1b434>
  41daf4:	mov	w23, wzr
  41daf8:	b	41db04 <feof@plt+0x1b134>
  41dafc:	mov	w23, wzr
  41db00:	mov	w24, #0x3                   	// #3
  41db04:	ldr	x8, [x19]
  41db08:	strb	w23, [x8, #106]
  41db0c:	ldr	x8, [x19, #448]
  41db10:	ldurb	w8, [x8, #-20]
  41db14:	cmp	w8, #0x16
  41db18:	b.eq	41db58 <feof@plt+0x1b188>  // b.none
  41db1c:	mov	x0, x19
  41db20:	bl	425308 <feof@plt+0x22938>
  41db24:	ldrb	w8, [x0, #4]
  41db28:	cmp	w8, #0x16
  41db2c:	b.eq	41db58 <feof@plt+0x1b188>  // b.none
  41db30:	ldr	x8, [x19, #144]
  41db34:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41db38:	add	x2, x2, #0x709
  41db3c:	mov	x0, x19
  41db40:	ldr	x3, [x8, #8]
  41db44:	mov	w1, wzr
  41db48:	bl	41e064 <feof@plt+0x1b694>
  41db4c:	b	41db58 <feof@plt+0x1b188>
  41db50:	mov	x0, x19
  41db54:	bl	42da2c <feof@plt+0x2b05c>
  41db58:	ldr	x8, [x19, #136]
  41db5c:	ldr	x8, [x8, #8]
  41db60:	cbnz	x8, 41db50 <feof@plt+0x1b180>
  41db64:	ldr	x8, [x19, #448]
  41db68:	ldurb	w8, [x8, #-20]
  41db6c:	cmp	w8, #0x16
  41db70:	b.eq	41db88 <feof@plt+0x1b1b8>  // b.none
  41db74:	mov	x0, x19
  41db78:	bl	425308 <feof@plt+0x22938>
  41db7c:	ldrb	w8, [x0, #4]
  41db80:	cmp	w8, #0x16
  41db84:	b.ne	41db74 <feof@plt+0x1b1a4>  // b.any
  41db88:	cmp	w24, #0x1
  41db8c:	b.ne	41dbe8 <feof@plt+0x1b218>  // b.any
  41db90:	ldr	w8, [x20, #12]
  41db94:	ldr	x9, [x20]
  41db98:	mov	w10, #0x18                  	// #24
  41db9c:	mov	x0, x20
  41dba0:	sub	w8, w8, #0x1
  41dba4:	smaddl	x25, w8, w10, x9
  41dba8:	mov	x1, x25
  41dbac:	bl	429f10 <feof@plt+0x27540>
  41dbb0:	ldr	w8, [x25, #20]
  41dbb4:	cbz	w8, 41dbcc <feof@plt+0x1b1fc>
  41dbb8:	cbz	x0, 41dbe8 <feof@plt+0x1b218>
  41dbbc:	ldr	x0, [x0, #8]
  41dbc0:	mov	x1, x21
  41dbc4:	bl	44eda0 <feof@plt+0x4c3d0>
  41dbc8:	cbz	w0, 41dbe8 <feof@plt+0x1b218>
  41dbcc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dbd0:	add	x2, x2, #0x8ab
  41dbd4:	mov	x0, x19
  41dbd8:	mov	w1, wzr
  41dbdc:	mov	x3, x21
  41dbe0:	bl	41df34 <feof@plt+0x1b564>
  41dbe4:	b	41dc40 <feof@plt+0x1b270>
  41dbe8:	ldr	x0, [x19, #40]
  41dbec:	mov	w1, w24
  41dbf0:	mov	w2, w23
  41dbf4:	mov	x3, x21
  41dbf8:	ldr	w8, [x0, #56]
  41dbfc:	mov	w4, w22
  41dc00:	sub	w8, w8, #0x1
  41dc04:	str	w8, [x0, #56]
  41dc08:	bl	42a0f0 <feof@plt+0x27720>
  41dc0c:	mov	x21, x0
  41dc10:	cbz	x0, 41dc24 <feof@plt+0x1b254>
  41dc14:	ldr	x0, [x19, #40]
  41dc18:	ldr	w1, [x21, #16]
  41dc1c:	mov	w2, #0x7f                  	// #127
  41dc20:	bl	42a5e8 <feof@plt+0x27c18>
  41dc24:	ldr	x8, [x19, #912]
  41dc28:	cbz	x8, 41dc38 <feof@plt+0x1b268>
  41dc2c:	mov	x0, x19
  41dc30:	mov	x1, x21
  41dc34:	blr	x8
  41dc38:	mov	w8, #0x1                   	// #1
  41dc3c:	strb	w8, [x20, #116]
  41dc40:	ldp	x20, x19, [sp, #80]
  41dc44:	ldp	x22, x21, [sp, #64]
  41dc48:	ldp	x24, x23, [sp, #48]
  41dc4c:	ldr	x25, [sp, #32]
  41dc50:	ldp	x29, x30, [sp, #16]
  41dc54:	add	sp, sp, #0x60
  41dc58:	ret
  41dc5c:	mov	x0, x19
  41dc60:	bl	425308 <feof@plt+0x22938>
  41dc64:	ldrb	w8, [x0, #4]
  41dc68:	cmp	w8, #0x16
  41dc6c:	b.eq	41dd3c <feof@plt+0x1b36c>  // b.none
  41dc70:	mov	x1, x0
  41dc74:	cmp	w8, #0x37
  41dc78:	b.ne	41dd1c <feof@plt+0x1b34c>  // b.any
  41dc7c:	ldr	w8, [x1, #8]
  41dc80:	cmp	w8, #0x1
  41dc84:	b.ne	41dd1c <feof@plt+0x1b34c>  // b.any
  41dc88:	ldr	x8, [x1, #16]
  41dc8c:	ldrb	w8, [x8]
  41dc90:	cmp	w8, #0x34
  41dc94:	b.eq	41dd1c <feof@plt+0x1b34c>  // b.none
  41dc98:	sub	w8, w8, #0x33
  41dc9c:	cmp	w8, #0x2
  41dca0:	b.cs	41dd1c <feof@plt+0x1b34c>  // b.hs, b.nlast
  41dca4:	mov	w24, #0x1                   	// #1
  41dca8:	b	41dcb0 <feof@plt+0x1b2e0>
  41dcac:	mov	w24, #0x3                   	// #3
  41dcb0:	mov	x0, x19
  41dcb4:	bl	425308 <feof@plt+0x22938>
  41dcb8:	ldrb	w8, [x0, #4]
  41dcbc:	cmp	w8, #0x16
  41dcc0:	b.eq	41dd14 <feof@plt+0x1b344>  // b.none
  41dcc4:	mov	x1, x0
  41dcc8:	cmp	w8, #0x37
  41dccc:	b.ne	41dcf4 <feof@plt+0x1b324>  // b.any
  41dcd0:	ldr	w8, [x1, #8]
  41dcd4:	cmp	w8, #0x1
  41dcd8:	b.ne	41dcf4 <feof@plt+0x1b324>  // b.any
  41dcdc:	ldr	x8, [x1, #16]
  41dce0:	ldrb	w8, [x8]
  41dce4:	cmp	w8, #0x34
  41dce8:	b.ne	41dcf4 <feof@plt+0x1b324>  // b.any
  41dcec:	mov	w23, #0x2                   	// #2
  41dcf0:	b	41db04 <feof@plt+0x1b134>
  41dcf4:	mov	x0, x19
  41dcf8:	bl	428aa4 <feof@plt+0x260d4>
  41dcfc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dd00:	mov	x3, x0
  41dd04:	add	x2, x2, #0x8e1
  41dd08:	mov	w1, #0x3                   	// #3
  41dd0c:	mov	x0, x19
  41dd10:	bl	41de04 <feof@plt+0x1b434>
  41dd14:	mov	w23, #0x1                   	// #1
  41dd18:	b	41db04 <feof@plt+0x1b134>
  41dd1c:	mov	x0, x19
  41dd20:	bl	428aa4 <feof@plt+0x260d4>
  41dd24:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dd28:	mov	x3, x0
  41dd2c:	add	x2, x2, #0x8e1
  41dd30:	mov	w1, #0x3                   	// #3
  41dd34:	mov	x0, x19
  41dd38:	bl	41de04 <feof@plt+0x1b434>
  41dd3c:	mov	w23, wzr
  41dd40:	mov	w24, #0x1                   	// #1
  41dd44:	b	41db04 <feof@plt+0x1b134>
  41dd48:	mov	w24, wzr
  41dd4c:	b	41dcb0 <feof@plt+0x1b2e0>
  41dd50:	sub	sp, sp, #0x30
  41dd54:	stp	x29, x30, [sp, #16]
  41dd58:	stp	x20, x19, [sp, #32]
  41dd5c:	add	x29, sp, #0x10
  41dd60:	mov	w20, w1
  41dd64:	mov	x19, x0
  41dd68:	bl	425308 <feof@plt+0x22938>
  41dd6c:	ldrb	w8, [x0, #4]
  41dd70:	cmp	w8, #0x3e
  41dd74:	b.ne	41ddc8 <feof@plt+0x1b3f8>  // b.any
  41dd78:	add	x1, x0, #0x8
  41dd7c:	mov	x3, sp
  41dd80:	mov	w2, #0x1                   	// #1
  41dd84:	mov	w4, #0x3e                  	// #62
  41dd88:	mov	x0, x19
  41dd8c:	bl	417b94 <feof@plt+0x151c4>
  41dd90:	tbz	w0, #0, 41ddc8 <feof@plt+0x1b3f8>
  41dd94:	ldr	w8, [sp]
  41dd98:	cbz	w8, 41ddc8 <feof@plt+0x1b3f8>
  41dd9c:	ldr	x3, [sp, #8]
  41dda0:	tst	w20, #0x1
  41dda4:	mov	w8, #0x3                   	// #3
  41dda8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41ddac:	csel	w1, w8, wzr, ne  // ne = any
  41ddb0:	add	x2, x2, #0xf6c
  41ddb4:	mov	x0, x19
  41ddb8:	bl	41de04 <feof@plt+0x1b434>
  41ddbc:	ldr	x0, [sp, #8]
  41ddc0:	bl	4024c0 <free@plt>
  41ddc4:	b	41ddf4 <feof@plt+0x1b424>
  41ddc8:	adrp	x8, 451000 <_obstack_memory_used@@Base+0xa68>
  41ddcc:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  41ddd0:	add	x8, x8, #0xb10
  41ddd4:	add	x9, x9, #0xa8b
  41ddd8:	tst	w20, #0x1
  41dddc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dde0:	csel	x3, x9, x8, ne  // ne = any
  41dde4:	add	x2, x2, #0xc11
  41dde8:	mov	w1, #0x3                   	// #3
  41ddec:	mov	x0, x19
  41ddf0:	bl	41de04 <feof@plt+0x1b434>
  41ddf4:	ldp	x20, x19, [sp, #32]
  41ddf8:	ldp	x29, x30, [sp, #16]
  41ddfc:	add	sp, sp, #0x30
  41de00:	ret
  41de04:	sub	sp, sp, #0x1b0
  41de08:	stp	x29, x30, [sp, #368]
  41de0c:	add	x29, sp, #0x170
  41de10:	mov	x8, #0xffffffffffffffd8    	// #-40
  41de14:	mov	x9, sp
  41de18:	add	x10, sp, #0x80
  41de1c:	movk	x8, #0xff80, lsl #32
  41de20:	add	x11, x29, #0x40
  41de24:	add	x9, x9, #0x80
  41de28:	add	x10, x10, #0x28
  41de2c:	stp	x22, x21, [sp, #400]
  41de30:	stp	x20, x19, [sp, #416]
  41de34:	stp	x3, x4, [sp, #128]
  41de38:	stp	x5, x6, [sp, #144]
  41de3c:	stp	q1, q2, [sp, #16]
  41de40:	stp	q3, q4, [sp, #48]
  41de44:	str	q0, [sp]
  41de48:	stp	q5, q6, [sp, #80]
  41de4c:	str	q7, [sp, #112]
  41de50:	stp	x9, x8, [sp, #184]
  41de54:	str	x10, [sp, #176]
  41de58:	stp	x7, x11, [sp, #160]
  41de5c:	ldrb	w8, [x0, #1160]
  41de60:	mov	x20, x2
  41de64:	mov	x19, x0
  41de68:	mov	w21, w1
  41de6c:	str	x28, [sp, #384]
  41de70:	cbz	w8, 41de84 <feof@plt+0x1b4b4>
  41de74:	ldrb	w8, [x19, #16]
  41de78:	cbz	w8, 41dea0 <feof@plt+0x1b4d0>
  41de7c:	ldr	w2, [x19, #48]
  41de80:	b	41deb0 <feof@plt+0x1b4e0>
  41de84:	ldr	x9, [x19, #488]
  41de88:	ldr	x8, [x19, #448]
  41de8c:	ldr	x9, [x9, #16]
  41de90:	cmp	x8, x9
  41de94:	b.eq	41deac <feof@plt+0x1b4dc>  // b.none
  41de98:	ldur	w2, [x8, #-24]
  41de9c:	b	41deb0 <feof@plt+0x1b4e0>
  41dea0:	ldr	x8, [x19, #40]
  41dea4:	ldr	w2, [x8, #60]
  41dea8:	b	41deb0 <feof@plt+0x1b4e0>
  41deac:	mov	w2, wzr
  41deb0:	ldr	x1, [x19, #40]
  41deb4:	sub	x0, x29, #0xa8
  41deb8:	mov	x3, xzr
  41debc:	bl	42bfb4 <feof@plt+0x295e4>
  41dec0:	ldr	x22, [x19, #1000]
  41dec4:	cbz	x22, 41df1c <feof@plt+0x1b54c>
  41dec8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41decc:	add	x0, x0, #0xf6f
  41ded0:	mov	x1, x20
  41ded4:	bl	402620 <dgettext@plt>
  41ded8:	mov	x4, x0
  41dedc:	sub	x3, x29, #0xa8
  41dee0:	add	x5, sp, #0xa8
  41dee4:	mov	x0, x19
  41dee8:	mov	w1, w21
  41deec:	mov	w2, wzr
  41def0:	blr	x22
  41def4:	mov	w19, w0
  41def8:	sub	x0, x29, #0xa8
  41defc:	bl	42c094 <feof@plt+0x296c4>
  41df00:	and	w0, w19, #0x1
  41df04:	ldp	x20, x19, [sp, #416]
  41df08:	ldp	x22, x21, [sp, #400]
  41df0c:	ldr	x28, [sp, #384]
  41df10:	ldp	x29, x30, [sp, #368]
  41df14:	add	sp, sp, #0x1b0
  41df18:	ret
  41df1c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41df20:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41df24:	add	x0, x0, #0xf7d
  41df28:	add	x2, x2, #0xfac
  41df2c:	mov	w1, #0x29                  	// #41
  41df30:	bl	404ac4 <feof@plt+0x20f4>
  41df34:	sub	sp, sp, #0x1b0
  41df38:	stp	x29, x30, [sp, #368]
  41df3c:	add	x29, sp, #0x170
  41df40:	mov	x8, #0xffffffffffffffd8    	// #-40
  41df44:	mov	x9, sp
  41df48:	add	x10, sp, #0x80
  41df4c:	movk	x8, #0xff80, lsl #32
  41df50:	add	x11, x29, #0x40
  41df54:	add	x9, x9, #0x80
  41df58:	add	x10, x10, #0x28
  41df5c:	stp	x22, x21, [sp, #400]
  41df60:	stp	x20, x19, [sp, #416]
  41df64:	stp	x3, x4, [sp, #128]
  41df68:	stp	x5, x6, [sp, #144]
  41df6c:	stp	q1, q2, [sp, #16]
  41df70:	stp	q3, q4, [sp, #48]
  41df74:	str	q0, [sp]
  41df78:	stp	q5, q6, [sp, #80]
  41df7c:	str	q7, [sp, #112]
  41df80:	stp	x9, x8, [sp, #184]
  41df84:	str	x10, [sp, #176]
  41df88:	stp	x7, x11, [sp, #160]
  41df8c:	ldrb	w8, [x0, #1160]
  41df90:	mov	x20, x2
  41df94:	mov	x19, x0
  41df98:	mov	w21, w1
  41df9c:	str	x28, [sp, #384]
  41dfa0:	cbz	w8, 41dfb4 <feof@plt+0x1b5e4>
  41dfa4:	ldrb	w8, [x19, #16]
  41dfa8:	cbz	w8, 41dfd0 <feof@plt+0x1b600>
  41dfac:	ldr	w2, [x19, #48]
  41dfb0:	b	41dfe0 <feof@plt+0x1b610>
  41dfb4:	ldr	x9, [x19, #488]
  41dfb8:	ldr	x8, [x19, #448]
  41dfbc:	ldr	x9, [x9, #16]
  41dfc0:	cmp	x8, x9
  41dfc4:	b.eq	41dfdc <feof@plt+0x1b60c>  // b.none
  41dfc8:	ldur	w2, [x8, #-24]
  41dfcc:	b	41dfe0 <feof@plt+0x1b610>
  41dfd0:	ldr	x8, [x19, #40]
  41dfd4:	ldr	w2, [x8, #60]
  41dfd8:	b	41dfe0 <feof@plt+0x1b610>
  41dfdc:	mov	w2, wzr
  41dfe0:	ldr	x1, [x19, #40]
  41dfe4:	sub	x0, x29, #0xa8
  41dfe8:	mov	x3, xzr
  41dfec:	bl	42bfb4 <feof@plt+0x295e4>
  41dff0:	ldr	x22, [x19, #1000]
  41dff4:	cbz	x22, 41e04c <feof@plt+0x1b67c>
  41dff8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41dffc:	add	x0, x0, #0xf6f
  41e000:	mov	x1, x20
  41e004:	bl	402620 <dgettext@plt>
  41e008:	mov	x4, x0
  41e00c:	sub	x3, x29, #0xa8
  41e010:	add	x5, sp, #0xa8
  41e014:	mov	x0, x19
  41e018:	mov	w1, wzr
  41e01c:	mov	w2, w21
  41e020:	blr	x22
  41e024:	mov	w19, w0
  41e028:	sub	x0, x29, #0xa8
  41e02c:	bl	42c094 <feof@plt+0x296c4>
  41e030:	and	w0, w19, #0x1
  41e034:	ldp	x20, x19, [sp, #416]
  41e038:	ldp	x22, x21, [sp, #400]
  41e03c:	ldr	x28, [sp, #384]
  41e040:	ldp	x29, x30, [sp, #368]
  41e044:	add	sp, sp, #0x1b0
  41e048:	ret
  41e04c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e050:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e054:	add	x0, x0, #0xf7d
  41e058:	add	x2, x2, #0xfac
  41e05c:	mov	w1, #0x29                  	// #41
  41e060:	bl	404ac4 <feof@plt+0x20f4>
  41e064:	sub	sp, sp, #0x1b0
  41e068:	stp	x29, x30, [sp, #368]
  41e06c:	add	x29, sp, #0x170
  41e070:	mov	x8, #0xffffffffffffffd8    	// #-40
  41e074:	mov	x9, sp
  41e078:	add	x10, sp, #0x80
  41e07c:	movk	x8, #0xff80, lsl #32
  41e080:	add	x11, x29, #0x40
  41e084:	add	x9, x9, #0x80
  41e088:	add	x10, x10, #0x28
  41e08c:	stp	x22, x21, [sp, #400]
  41e090:	stp	x20, x19, [sp, #416]
  41e094:	stp	x3, x4, [sp, #128]
  41e098:	stp	x5, x6, [sp, #144]
  41e09c:	stp	q1, q2, [sp, #16]
  41e0a0:	stp	q3, q4, [sp, #48]
  41e0a4:	str	q0, [sp]
  41e0a8:	stp	q5, q6, [sp, #80]
  41e0ac:	str	q7, [sp, #112]
  41e0b0:	stp	x9, x8, [sp, #184]
  41e0b4:	str	x10, [sp, #176]
  41e0b8:	stp	x7, x11, [sp, #160]
  41e0bc:	ldrb	w8, [x0, #1160]
  41e0c0:	mov	x20, x2
  41e0c4:	mov	x19, x0
  41e0c8:	mov	w21, w1
  41e0cc:	str	x28, [sp, #384]
  41e0d0:	cbz	w8, 41e0e4 <feof@plt+0x1b714>
  41e0d4:	ldrb	w8, [x19, #16]
  41e0d8:	cbz	w8, 41e100 <feof@plt+0x1b730>
  41e0dc:	ldr	w2, [x19, #48]
  41e0e0:	b	41e110 <feof@plt+0x1b740>
  41e0e4:	ldr	x9, [x19, #488]
  41e0e8:	ldr	x8, [x19, #448]
  41e0ec:	ldr	x9, [x9, #16]
  41e0f0:	cmp	x8, x9
  41e0f4:	b.eq	41e10c <feof@plt+0x1b73c>  // b.none
  41e0f8:	ldur	w2, [x8, #-24]
  41e0fc:	b	41e110 <feof@plt+0x1b740>
  41e100:	ldr	x8, [x19, #40]
  41e104:	ldr	w2, [x8, #60]
  41e108:	b	41e110 <feof@plt+0x1b740>
  41e10c:	mov	w2, wzr
  41e110:	ldr	x1, [x19, #40]
  41e114:	sub	x0, x29, #0xa8
  41e118:	mov	x3, xzr
  41e11c:	bl	42bfb4 <feof@plt+0x295e4>
  41e120:	ldr	x22, [x19, #1000]
  41e124:	cbz	x22, 41e17c <feof@plt+0x1b7ac>
  41e128:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e12c:	add	x0, x0, #0xf6f
  41e130:	mov	x1, x20
  41e134:	bl	402620 <dgettext@plt>
  41e138:	mov	x4, x0
  41e13c:	sub	x3, x29, #0xa8
  41e140:	add	x5, sp, #0xa8
  41e144:	mov	w1, #0x2                   	// #2
  41e148:	mov	x0, x19
  41e14c:	mov	w2, w21
  41e150:	blr	x22
  41e154:	mov	w19, w0
  41e158:	sub	x0, x29, #0xa8
  41e15c:	bl	42c094 <feof@plt+0x296c4>
  41e160:	and	w0, w19, #0x1
  41e164:	ldp	x20, x19, [sp, #416]
  41e168:	ldp	x22, x21, [sp, #400]
  41e16c:	ldr	x28, [sp, #384]
  41e170:	ldp	x29, x30, [sp, #368]
  41e174:	add	sp, sp, #0x1b0
  41e178:	ret
  41e17c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e180:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e184:	add	x0, x0, #0xf7d
  41e188:	add	x2, x2, #0xfac
  41e18c:	mov	w1, #0x29                  	// #41
  41e190:	bl	404ac4 <feof@plt+0x20f4>
  41e194:	sub	sp, sp, #0x1b0
  41e198:	stp	x29, x30, [sp, #368]
  41e19c:	add	x29, sp, #0x170
  41e1a0:	mov	x8, #0xffffffffffffffd8    	// #-40
  41e1a4:	mov	x9, sp
  41e1a8:	add	x10, sp, #0x80
  41e1ac:	movk	x8, #0xff80, lsl #32
  41e1b0:	add	x11, x29, #0x40
  41e1b4:	add	x9, x9, #0x80
  41e1b8:	add	x10, x10, #0x28
  41e1bc:	stp	x22, x21, [sp, #400]
  41e1c0:	stp	x20, x19, [sp, #416]
  41e1c4:	stp	x3, x4, [sp, #128]
  41e1c8:	stp	x5, x6, [sp, #144]
  41e1cc:	stp	q1, q2, [sp, #16]
  41e1d0:	stp	q3, q4, [sp, #48]
  41e1d4:	str	q0, [sp]
  41e1d8:	stp	q5, q6, [sp, #80]
  41e1dc:	str	q7, [sp, #112]
  41e1e0:	stp	x9, x8, [sp, #184]
  41e1e4:	str	x10, [sp, #176]
  41e1e8:	stp	x7, x11, [sp, #160]
  41e1ec:	ldrb	w8, [x0, #1160]
  41e1f0:	mov	x20, x2
  41e1f4:	mov	x19, x0
  41e1f8:	mov	w21, w1
  41e1fc:	str	x28, [sp, #384]
  41e200:	cbz	w8, 41e214 <feof@plt+0x1b844>
  41e204:	ldrb	w8, [x19, #16]
  41e208:	cbz	w8, 41e230 <feof@plt+0x1b860>
  41e20c:	ldr	w2, [x19, #48]
  41e210:	b	41e240 <feof@plt+0x1b870>
  41e214:	ldr	x9, [x19, #488]
  41e218:	ldr	x8, [x19, #448]
  41e21c:	ldr	x9, [x9, #16]
  41e220:	cmp	x8, x9
  41e224:	b.eq	41e23c <feof@plt+0x1b86c>  // b.none
  41e228:	ldur	w2, [x8, #-24]
  41e22c:	b	41e240 <feof@plt+0x1b870>
  41e230:	ldr	x8, [x19, #40]
  41e234:	ldr	w2, [x8, #60]
  41e238:	b	41e240 <feof@plt+0x1b870>
  41e23c:	mov	w2, wzr
  41e240:	ldr	x1, [x19, #40]
  41e244:	sub	x0, x29, #0xa8
  41e248:	mov	x3, xzr
  41e24c:	bl	42bfb4 <feof@plt+0x295e4>
  41e250:	ldr	x22, [x19, #1000]
  41e254:	cbz	x22, 41e2ac <feof@plt+0x1b8dc>
  41e258:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e25c:	add	x0, x0, #0xf6f
  41e260:	mov	x1, x20
  41e264:	bl	402620 <dgettext@plt>
  41e268:	mov	x4, x0
  41e26c:	sub	x3, x29, #0xa8
  41e270:	add	x5, sp, #0xa8
  41e274:	mov	w1, #0x1                   	// #1
  41e278:	mov	x0, x19
  41e27c:	mov	w2, w21
  41e280:	blr	x22
  41e284:	mov	w19, w0
  41e288:	sub	x0, x29, #0xa8
  41e28c:	bl	42c094 <feof@plt+0x296c4>
  41e290:	and	w0, w19, #0x1
  41e294:	ldp	x20, x19, [sp, #416]
  41e298:	ldp	x22, x21, [sp, #400]
  41e29c:	ldr	x28, [sp, #384]
  41e2a0:	ldp	x29, x30, [sp, #368]
  41e2a4:	add	sp, sp, #0x1b0
  41e2a8:	ret
  41e2ac:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e2b0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e2b4:	add	x0, x0, #0xf7d
  41e2b8:	add	x2, x2, #0xfac
  41e2bc:	mov	w1, #0x29                  	// #41
  41e2c0:	bl	404ac4 <feof@plt+0x20f4>
  41e2c4:	sub	sp, sp, #0x1a0
  41e2c8:	stp	x29, x30, [sp, #352]
  41e2cc:	add	x29, sp, #0x160
  41e2d0:	mov	x8, #0xffffffffffffffe8    	// #-24
  41e2d4:	mov	x9, sp
  41e2d8:	add	x10, sp, #0x80
  41e2dc:	movk	x8, #0xff80, lsl #32
  41e2e0:	add	x11, x29, #0x40
  41e2e4:	add	x9, x9, #0x80
  41e2e8:	add	x10, x10, #0x18
  41e2ec:	stp	x22, x21, [sp, #384]
  41e2f0:	stp	x20, x19, [sp, #400]
  41e2f4:	stp	x5, x6, [sp, #128]
  41e2f8:	stp	q0, q1, [sp]
  41e2fc:	stp	q2, q3, [sp, #32]
  41e300:	stp	q4, q5, [sp, #64]
  41e304:	stp	q6, q7, [sp, #96]
  41e308:	stp	x9, x8, [sp, #168]
  41e30c:	str	x10, [sp, #160]
  41e310:	stp	x7, x11, [sp, #144]
  41e314:	ldr	x8, [x0, #1000]
  41e318:	str	x28, [sp, #368]
  41e31c:	cbz	x8, 41e3a8 <feof@plt+0x1b9d8>
  41e320:	mov	w22, w1
  41e324:	ldr	x1, [x0, #40]
  41e328:	mov	w21, w3
  41e32c:	mov	x19, x0
  41e330:	sub	x0, x29, #0xa8
  41e334:	mov	x3, xzr
  41e338:	mov	x20, x4
  41e33c:	bl	42bfb4 <feof@plt+0x295e4>
  41e340:	cbz	w21, 41e350 <feof@plt+0x1b980>
  41e344:	sub	x0, x29, #0xa8
  41e348:	mov	w1, w21
  41e34c:	bl	42c240 <feof@plt+0x29870>
  41e350:	ldr	x21, [x19, #1000]
  41e354:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e358:	add	x0, x0, #0xf6f
  41e35c:	mov	x1, x20
  41e360:	bl	402620 <dgettext@plt>
  41e364:	mov	x4, x0
  41e368:	sub	x3, x29, #0xa8
  41e36c:	add	x5, sp, #0x98
  41e370:	mov	x0, x19
  41e374:	mov	w1, w22
  41e378:	mov	w2, wzr
  41e37c:	blr	x21
  41e380:	mov	w19, w0
  41e384:	sub	x0, x29, #0xa8
  41e388:	bl	42c094 <feof@plt+0x296c4>
  41e38c:	and	w0, w19, #0x1
  41e390:	ldp	x20, x19, [sp, #400]
  41e394:	ldp	x22, x21, [sp, #384]
  41e398:	ldr	x28, [sp, #368]
  41e39c:	ldp	x29, x30, [sp, #352]
  41e3a0:	add	sp, sp, #0x1a0
  41e3a4:	ret
  41e3a8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e3ac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e3b0:	add	x0, x0, #0xf7d
  41e3b4:	add	x2, x2, #0xf93
  41e3b8:	mov	w1, #0x9f                  	// #159
  41e3bc:	bl	404ac4 <feof@plt+0x20f4>
  41e3c0:	sub	sp, sp, #0x1a0
  41e3c4:	stp	x29, x30, [sp, #352]
  41e3c8:	add	x29, sp, #0x160
  41e3cc:	mov	x8, #0xffffffffffffffe8    	// #-24
  41e3d0:	mov	x9, sp
  41e3d4:	add	x10, sp, #0x80
  41e3d8:	movk	x8, #0xff80, lsl #32
  41e3dc:	add	x11, x29, #0x40
  41e3e0:	add	x9, x9, #0x80
  41e3e4:	add	x10, x10, #0x18
  41e3e8:	stp	x22, x21, [sp, #384]
  41e3ec:	stp	x20, x19, [sp, #400]
  41e3f0:	stp	x5, x6, [sp, #128]
  41e3f4:	stp	q0, q1, [sp]
  41e3f8:	stp	q2, q3, [sp, #32]
  41e3fc:	stp	q4, q5, [sp, #64]
  41e400:	stp	q6, q7, [sp, #96]
  41e404:	stp	x9, x8, [sp, #168]
  41e408:	str	x10, [sp, #160]
  41e40c:	stp	x7, x11, [sp, #144]
  41e410:	ldr	x8, [x0, #1000]
  41e414:	str	x28, [sp, #368]
  41e418:	cbz	x8, 41e4a4 <feof@plt+0x1bad4>
  41e41c:	mov	w22, w1
  41e420:	ldr	x1, [x0, #40]
  41e424:	mov	w21, w3
  41e428:	mov	x19, x0
  41e42c:	sub	x0, x29, #0xa8
  41e430:	mov	x3, xzr
  41e434:	mov	x20, x4
  41e438:	bl	42bfb4 <feof@plt+0x295e4>
  41e43c:	cbz	w21, 41e44c <feof@plt+0x1ba7c>
  41e440:	sub	x0, x29, #0xa8
  41e444:	mov	w1, w21
  41e448:	bl	42c240 <feof@plt+0x29870>
  41e44c:	ldr	x21, [x19, #1000]
  41e450:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e454:	add	x0, x0, #0xf6f
  41e458:	mov	x1, x20
  41e45c:	bl	402620 <dgettext@plt>
  41e460:	mov	x4, x0
  41e464:	sub	x3, x29, #0xa8
  41e468:	add	x5, sp, #0x98
  41e46c:	mov	x0, x19
  41e470:	mov	w1, wzr
  41e474:	mov	w2, w22
  41e478:	blr	x21
  41e47c:	mov	w19, w0
  41e480:	sub	x0, x29, #0xa8
  41e484:	bl	42c094 <feof@plt+0x296c4>
  41e488:	and	w0, w19, #0x1
  41e48c:	ldp	x20, x19, [sp, #400]
  41e490:	ldp	x22, x21, [sp, #384]
  41e494:	ldr	x28, [sp, #368]
  41e498:	ldp	x29, x30, [sp, #352]
  41e49c:	add	sp, sp, #0x1a0
  41e4a0:	ret
  41e4a4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e4a8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e4ac:	add	x0, x0, #0xf7d
  41e4b0:	add	x2, x2, #0xf93
  41e4b4:	mov	w1, #0x9f                  	// #159
  41e4b8:	bl	404ac4 <feof@plt+0x20f4>
  41e4bc:	sub	sp, sp, #0x1a0
  41e4c0:	stp	x29, x30, [sp, #352]
  41e4c4:	add	x29, sp, #0x160
  41e4c8:	mov	x8, #0xffffffffffffffe8    	// #-24
  41e4cc:	mov	x9, sp
  41e4d0:	add	x10, sp, #0x80
  41e4d4:	movk	x8, #0xff80, lsl #32
  41e4d8:	add	x11, x29, #0x40
  41e4dc:	add	x9, x9, #0x80
  41e4e0:	add	x10, x10, #0x18
  41e4e4:	stp	x22, x21, [sp, #384]
  41e4e8:	stp	x20, x19, [sp, #400]
  41e4ec:	stp	x5, x6, [sp, #128]
  41e4f0:	stp	q0, q1, [sp]
  41e4f4:	stp	q2, q3, [sp, #32]
  41e4f8:	stp	q4, q5, [sp, #64]
  41e4fc:	stp	q6, q7, [sp, #96]
  41e500:	stp	x9, x8, [sp, #168]
  41e504:	str	x10, [sp, #160]
  41e508:	stp	x7, x11, [sp, #144]
  41e50c:	ldr	x8, [x0, #1000]
  41e510:	str	x28, [sp, #368]
  41e514:	cbz	x8, 41e5a0 <feof@plt+0x1bbd0>
  41e518:	mov	w22, w1
  41e51c:	ldr	x1, [x0, #40]
  41e520:	mov	w21, w3
  41e524:	mov	x19, x0
  41e528:	sub	x0, x29, #0xa8
  41e52c:	mov	x3, xzr
  41e530:	mov	x20, x4
  41e534:	bl	42bfb4 <feof@plt+0x295e4>
  41e538:	cbz	w21, 41e548 <feof@plt+0x1bb78>
  41e53c:	sub	x0, x29, #0xa8
  41e540:	mov	w1, w21
  41e544:	bl	42c240 <feof@plt+0x29870>
  41e548:	ldr	x21, [x19, #1000]
  41e54c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e550:	add	x0, x0, #0xf6f
  41e554:	mov	x1, x20
  41e558:	bl	402620 <dgettext@plt>
  41e55c:	mov	x4, x0
  41e560:	sub	x3, x29, #0xa8
  41e564:	add	x5, sp, #0x98
  41e568:	mov	w1, #0x2                   	// #2
  41e56c:	mov	x0, x19
  41e570:	mov	w2, w22
  41e574:	blr	x21
  41e578:	mov	w19, w0
  41e57c:	sub	x0, x29, #0xa8
  41e580:	bl	42c094 <feof@plt+0x296c4>
  41e584:	and	w0, w19, #0x1
  41e588:	ldp	x20, x19, [sp, #400]
  41e58c:	ldp	x22, x21, [sp, #384]
  41e590:	ldr	x28, [sp, #368]
  41e594:	ldp	x29, x30, [sp, #352]
  41e598:	add	sp, sp, #0x1a0
  41e59c:	ret
  41e5a0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e5a4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e5a8:	add	x0, x0, #0xf7d
  41e5ac:	add	x2, x2, #0xf93
  41e5b0:	mov	w1, #0x9f                  	// #159
  41e5b4:	bl	404ac4 <feof@plt+0x20f4>
  41e5b8:	sub	sp, sp, #0x1a0
  41e5bc:	stp	x29, x30, [sp, #352]
  41e5c0:	add	x29, sp, #0x160
  41e5c4:	mov	x8, #0xffffffffffffffe8    	// #-24
  41e5c8:	mov	x9, sp
  41e5cc:	add	x10, sp, #0x80
  41e5d0:	movk	x8, #0xff80, lsl #32
  41e5d4:	add	x11, x29, #0x40
  41e5d8:	add	x9, x9, #0x80
  41e5dc:	add	x10, x10, #0x18
  41e5e0:	stp	x22, x21, [sp, #384]
  41e5e4:	stp	x20, x19, [sp, #400]
  41e5e8:	stp	x5, x6, [sp, #128]
  41e5ec:	stp	q0, q1, [sp]
  41e5f0:	stp	q2, q3, [sp, #32]
  41e5f4:	stp	q4, q5, [sp, #64]
  41e5f8:	stp	q6, q7, [sp, #96]
  41e5fc:	stp	x9, x8, [sp, #168]
  41e600:	str	x10, [sp, #160]
  41e604:	stp	x7, x11, [sp, #144]
  41e608:	ldr	x8, [x0, #1000]
  41e60c:	str	x28, [sp, #368]
  41e610:	cbz	x8, 41e69c <feof@plt+0x1bccc>
  41e614:	mov	w22, w1
  41e618:	ldr	x1, [x0, #40]
  41e61c:	mov	w21, w3
  41e620:	mov	x19, x0
  41e624:	sub	x0, x29, #0xa8
  41e628:	mov	x3, xzr
  41e62c:	mov	x20, x4
  41e630:	bl	42bfb4 <feof@plt+0x295e4>
  41e634:	cbz	w21, 41e644 <feof@plt+0x1bc74>
  41e638:	sub	x0, x29, #0xa8
  41e63c:	mov	w1, w21
  41e640:	bl	42c240 <feof@plt+0x29870>
  41e644:	ldr	x21, [x19, #1000]
  41e648:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e64c:	add	x0, x0, #0xf6f
  41e650:	mov	x1, x20
  41e654:	bl	402620 <dgettext@plt>
  41e658:	mov	x4, x0
  41e65c:	sub	x3, x29, #0xa8
  41e660:	add	x5, sp, #0x98
  41e664:	mov	w1, #0x1                   	// #1
  41e668:	mov	x0, x19
  41e66c:	mov	w2, w22
  41e670:	blr	x21
  41e674:	mov	w19, w0
  41e678:	sub	x0, x29, #0xa8
  41e67c:	bl	42c094 <feof@plt+0x296c4>
  41e680:	and	w0, w19, #0x1
  41e684:	ldp	x20, x19, [sp, #400]
  41e688:	ldp	x22, x21, [sp, #384]
  41e68c:	ldr	x28, [sp, #368]
  41e690:	ldp	x29, x30, [sp, #352]
  41e694:	add	sp, sp, #0x1a0
  41e698:	ret
  41e69c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e6a0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e6a4:	add	x0, x0, #0xf7d
  41e6a8:	add	x2, x2, #0xf93
  41e6ac:	mov	w1, #0x9f                  	// #159
  41e6b0:	bl	404ac4 <feof@plt+0x20f4>
  41e6b4:	sub	sp, sp, #0x1b0
  41e6b8:	stp	x29, x30, [sp, #368]
  41e6bc:	add	x29, sp, #0x170
  41e6c0:	mov	x8, #0xffffffffffffffe0    	// #-32
  41e6c4:	mov	x9, sp
  41e6c8:	add	x10, sp, #0x88
  41e6cc:	movk	x8, #0xff80, lsl #32
  41e6d0:	add	x11, x29, #0x40
  41e6d4:	add	x9, x9, #0x80
  41e6d8:	add	x10, x10, #0x20
  41e6dc:	stp	x22, x21, [sp, #400]
  41e6e0:	stp	x20, x19, [sp, #416]
  41e6e4:	stp	x4, x5, [sp, #136]
  41e6e8:	stp	x6, x7, [sp, #152]
  41e6ec:	stp	q0, q1, [sp]
  41e6f0:	stp	q2, q3, [sp, #32]
  41e6f4:	stp	q4, q5, [sp, #64]
  41e6f8:	stp	q6, q7, [sp, #96]
  41e6fc:	stp	x9, x8, [x29, #-16]
  41e700:	stp	x11, x10, [x29, #-32]
  41e704:	ldr	x8, [x0, #40]
  41e708:	mov	x20, x3
  41e70c:	mov	x19, x0
  41e710:	mov	w21, w1
  41e714:	add	x0, sp, #0xa8
  41e718:	mov	x1, x8
  41e71c:	mov	x3, xzr
  41e720:	str	x28, [sp, #384]
  41e724:	bl	42bfb4 <feof@plt+0x295e4>
  41e728:	ldr	x22, [x19, #1000]
  41e72c:	cbz	x22, 41e784 <feof@plt+0x1bdb4>
  41e730:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e734:	add	x0, x0, #0xf6f
  41e738:	mov	x1, x20
  41e73c:	bl	402620 <dgettext@plt>
  41e740:	mov	x4, x0
  41e744:	add	x3, sp, #0xa8
  41e748:	sub	x5, x29, #0x20
  41e74c:	mov	x0, x19
  41e750:	mov	w1, w21
  41e754:	mov	w2, wzr
  41e758:	blr	x22
  41e75c:	mov	w19, w0
  41e760:	add	x0, sp, #0xa8
  41e764:	bl	42c094 <feof@plt+0x296c4>
  41e768:	and	w0, w19, #0x1
  41e76c:	ldp	x20, x19, [sp, #416]
  41e770:	ldp	x22, x21, [sp, #400]
  41e774:	ldr	x28, [sp, #384]
  41e778:	ldp	x29, x30, [sp, #368]
  41e77c:	add	sp, sp, #0x1b0
  41e780:	ret
  41e784:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e788:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e78c:	add	x0, x0, #0xf7d
  41e790:	add	x2, x2, #0xfac
  41e794:	mov	w1, #0x29                  	// #41
  41e798:	bl	404ac4 <feof@plt+0x20f4>
  41e79c:	sub	sp, sp, #0xf0
  41e7a0:	stp	x29, x30, [sp, #192]
  41e7a4:	add	x29, sp, #0xc0
  41e7a8:	mov	x8, #0xffffffffffffffe0    	// #-32
  41e7ac:	mov	x9, sp
  41e7b0:	sub	x10, x29, #0x40
  41e7b4:	movk	x8, #0xff80, lsl #32
  41e7b8:	add	x11, x29, #0x30
  41e7bc:	add	x9, x9, #0x80
  41e7c0:	add	x10, x10, #0x20
  41e7c4:	stp	x22, x21, [sp, #208]
  41e7c8:	stp	x20, x19, [sp, #224]
  41e7cc:	stp	x4, x5, [x29, #-64]
  41e7d0:	stp	x6, x7, [x29, #-48]
  41e7d4:	stp	q0, q1, [sp]
  41e7d8:	stp	q2, q3, [sp, #32]
  41e7dc:	stp	q4, q5, [sp, #64]
  41e7e0:	stp	q6, q7, [sp, #96]
  41e7e4:	stp	x9, x8, [x29, #-16]
  41e7e8:	stp	x11, x10, [x29, #-32]
  41e7ec:	ldr	x22, [x0, #1000]
  41e7f0:	cbz	x22, 41e844 <feof@plt+0x1be74>
  41e7f4:	mov	x20, x0
  41e7f8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e7fc:	mov	w21, w1
  41e800:	add	x0, x0, #0xf6f
  41e804:	mov	x1, x3
  41e808:	mov	x19, x2
  41e80c:	bl	402620 <dgettext@plt>
  41e810:	mov	x4, x0
  41e814:	sub	x5, x29, #0x20
  41e818:	mov	x0, x20
  41e81c:	mov	w1, w21
  41e820:	mov	w2, wzr
  41e824:	mov	x3, x19
  41e828:	blr	x22
  41e82c:	ldp	x20, x19, [sp, #224]
  41e830:	ldp	x22, x21, [sp, #208]
  41e834:	ldp	x29, x30, [sp, #192]
  41e838:	and	w0, w0, #0x1
  41e83c:	add	sp, sp, #0xf0
  41e840:	ret
  41e844:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e848:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e84c:	add	x0, x0, #0xf7d
  41e850:	add	x2, x2, #0xfac
  41e854:	mov	w1, #0x29                  	// #41
  41e858:	bl	404ac4 <feof@plt+0x20f4>
  41e85c:	stp	x29, x30, [sp, #-48]!
  41e860:	stp	x20, x19, [sp, #32]
  41e864:	mov	x20, x0
  41e868:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e86c:	mov	w19, w1
  41e870:	add	x0, x0, #0xf6f
  41e874:	mov	x1, x2
  41e878:	str	x21, [sp, #16]
  41e87c:	mov	x29, sp
  41e880:	bl	402620 <dgettext@plt>
  41e884:	mov	x21, x0
  41e888:	bl	4027c0 <__errno_location@plt>
  41e88c:	ldr	w0, [x0]
  41e890:	bl	4507f8 <_obstack_memory_used@@Base+0x260>
  41e894:	mov	x4, x0
  41e898:	mov	x0, x20
  41e89c:	mov	w1, w19
  41e8a0:	mov	x3, x21
  41e8a4:	ldp	x20, x19, [sp, #32]
  41e8a8:	ldr	x21, [sp, #16]
  41e8ac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e8b0:	add	x2, x2, #0xf68
  41e8b4:	ldp	x29, x30, [sp], #48
  41e8b8:	b	41de04 <feof@plt+0x1b434>
  41e8bc:	stp	x29, x30, [sp, #-48]!
  41e8c0:	stp	x22, x21, [sp, #16]
  41e8c4:	stp	x20, x19, [sp, #32]
  41e8c8:	ldrb	w8, [x2]
  41e8cc:	mov	w19, w3
  41e8d0:	mov	x22, x2
  41e8d4:	mov	w20, w1
  41e8d8:	mov	x21, x0
  41e8dc:	mov	x29, sp
  41e8e0:	cbnz	w8, 41e8fc <feof@plt+0x1bf2c>
  41e8e4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e8e8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e8ec:	add	x0, x0, #0xf6f
  41e8f0:	add	x1, x1, #0xf76
  41e8f4:	bl	402620 <dgettext@plt>
  41e8f8:	mov	x22, x0
  41e8fc:	bl	4027c0 <__errno_location@plt>
  41e900:	ldr	w0, [x0]
  41e904:	bl	4507f8 <_obstack_memory_used@@Base+0x260>
  41e908:	mov	x5, x0
  41e90c:	mov	x0, x21
  41e910:	mov	w1, w20
  41e914:	mov	w2, w19
  41e918:	mov	x4, x22
  41e91c:	ldp	x20, x19, [sp, #32]
  41e920:	ldp	x22, x21, [sp, #16]
  41e924:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e928:	add	x3, x3, #0xf68
  41e92c:	ldp	x29, x30, [sp], #48
  41e930:	b	41e6b4 <feof@plt+0x1bce4>
  41e934:	b	41e938 <feof@plt+0x1bf68>
  41e938:	stp	x22, x21, [sp, #-32]!
  41e93c:	subs	x8, x2, #0x2
  41e940:	stp	x20, x19, [sp, #16]
  41e944:	b.ne	41e990 <feof@plt+0x1bfc0>  // b.any
  41e948:	ldrb	w9, [x1]
  41e94c:	orr	w10, w9, #0x20
  41e950:	cmp	w10, #0x64
  41e954:	b.ne	41e990 <feof@plt+0x1bfc0>  // b.any
  41e958:	ldrb	w10, [x1, #1]
  41e95c:	sub	w10, w10, #0x44
  41e960:	cmp	w10, #0x28
  41e964:	b.hi	41e990 <feof@plt+0x1bfc0>  // b.pmore
  41e968:	adrp	x11, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e96c:	add	x11, x11, #0xfbe
  41e970:	adr	x12, 41e980 <feof@plt+0x1bfb0>
  41e974:	ldrb	w13, [x11, x10]
  41e978:	add	x12, x12, x13, lsl #2
  41e97c:	br	x12
  41e980:	cmp	w9, #0x44
  41e984:	mov	w8, #0x4020                	// #16416
  41e988:	csel	w8, w8, wzr, eq  // eq = none
  41e98c:	b	41ed80 <feof@plt+0x1c3b0>
  41e990:	ldrb	w17, [x0, #1163]
  41e994:	cbz	x2, 41e9fc <feof@plt+0x1c02c>
  41e998:	cbz	w17, 41e9fc <feof@plt+0x1c02c>
  41e99c:	sub	x10, x2, #0x1
  41e9a0:	ldrb	w9, [x1, x10]
  41e9a4:	sub	w9, w9, #0x4b
  41e9a8:	cmp	w9, #0x27
  41e9ac:	b.hi	41e9fc <feof@plt+0x1c02c>  // b.pmore
  41e9b0:	adrp	x11, 45b000 <_obstack_memory_used@@Base+0xaa68>
  41e9b4:	add	x11, x11, #0xfe7
  41e9b8:	adr	x12, 41e9cc <feof@plt+0x1bffc>
  41e9bc:	ldrb	w13, [x11, x9]
  41e9c0:	add	x12, x12, x13, lsl #2
  41e9c4:	mov	w9, #0x200000              	// #2097152
  41e9c8:	br	x12
  41e9cc:	mov	w9, #0x100000              	// #1048576
  41e9d0:	cmp	x2, #0x1
  41e9d4:	b.eq	41e9f4 <feof@plt+0x1c024>  // b.none
  41e9d8:	ldrb	w11, [x1]
  41e9dc:	orr	w12, w11, #0x20
  41e9e0:	cmp	w12, #0x75
  41e9e4:	b.ne	41ecc8 <feof@plt+0x1c2f8>  // b.any
  41e9e8:	cmp	x10, #0x1
  41e9ec:	orr	x9, x9, #0x1000
  41e9f0:	b.ne	41ecc0 <feof@plt+0x1c2f0>  // b.any
  41e9f4:	mov	w8, w9
  41e9f8:	b	41ed80 <feof@plt+0x1c3b0>
  41e9fc:	cbz	x2, 41eb74 <feof@plt+0x1c1a4>
  41ea00:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0xba68>
  41ea04:	mov	x15, xzr
  41ea08:	mov	x9, xzr
  41ea0c:	mov	x10, xzr
  41ea10:	mov	x16, xzr
  41ea14:	mov	x11, xzr
  41ea18:	mov	x13, xzr
  41ea1c:	mov	x12, xzr
  41ea20:	mov	x14, xzr
  41ea24:	mov	x18, xzr
  41ea28:	add	x8, x8, #0x19
  41ea2c:	mov	w3, #0xa                   	// #10
  41ea30:	mov	x6, x2
  41ea34:	mov	x4, x1
  41ea38:	b	41ea4c <feof@plt+0x1c07c>
  41ea3c:	add	x16, x16, #0x1
  41ea40:	add	x4, x4, #0x1
  41ea44:	mov	x6, x5
  41ea48:	cbz	x5, 41eb98 <feof@plt+0x1c1c8>
  41ea4c:	ldrb	w5, [x4]
  41ea50:	sub	w5, w5, #0x44
  41ea54:	cmp	w5, #0x33
  41ea58:	b.hi	41ed7c <feof@plt+0x1c3ac>  // b.pmore
  41ea5c:	adr	x7, 41ea3c <feof@plt+0x1c06c>
  41ea60:	ldrb	w19, [x8, x5]
  41ea64:	add	x7, x7, x19, lsl #2
  41ea68:	sub	x5, x6, #0x1
  41ea6c:	br	x7
  41ea70:	add	x14, x14, #0x1
  41ea74:	b	41ea40 <feof@plt+0x1c070>
  41ea78:	add	x19, x18, #0x1
  41ea7c:	cbz	x5, 41ed58 <feof@plt+0x1c388>
  41ea80:	ldrb	w7, [x0, #1120]
  41ea84:	cbnz	w7, 41eb20 <feof@plt+0x1c150>
  41ea88:	ldrb	w7, [x4, #1]
  41ea8c:	cmp	w7, #0x31
  41ea90:	b.cc	41eb20 <feof@plt+0x1c150>  // b.lo, b.ul, b.last
  41ea94:	cbnz	x15, 41eb20 <feof@plt+0x1c150>
  41ea98:	cmp	w7, #0x39
  41ea9c:	b.hi	41eb20 <feof@plt+0x1c150>  // b.pmore
  41eaa0:	cmp	w7, #0x30
  41eaa4:	b.cc	41eb28 <feof@plt+0x1c158>  // b.lo, b.ul, b.last
  41eaa8:	add	x19, x4, x6
  41eaac:	mov	x5, xzr
  41eab0:	mov	x15, xzr
  41eab4:	sub	x21, x6, #0x2
  41eab8:	sub	x20, x19, #0x1
  41eabc:	mov	x19, #0xffffffffffffffff    	// #-1
  41eac0:	cmp	x15, #0xef
  41eac4:	b.hi	41eb34 <feof@plt+0x1c164>  // b.pmore
  41eac8:	and	w22, w7, #0xff
  41eacc:	cmp	w22, #0x39
  41ead0:	b.hi	41eb34 <feof@plt+0x1c164>  // b.pmore
  41ead4:	mul	x15, x15, x3
  41ead8:	add	x15, x15, w7, uxtb
  41eadc:	cmp	x21, x5
  41eae0:	sub	x15, x15, #0x30
  41eae4:	b.eq	41eb64 <feof@plt+0x1c194>  // b.none
  41eae8:	add	x7, x4, x5
  41eaec:	ldrb	w7, [x7, #2]
  41eaf0:	add	x5, x5, #0x1
  41eaf4:	sub	x19, x19, #0x1
  41eaf8:	cmp	w7, #0x2f
  41eafc:	b.hi	41eac0 <feof@plt+0x1c0f0>  // b.pmore
  41eb00:	add	x4, x4, x5
  41eb04:	b	41eb58 <feof@plt+0x1c188>
  41eb08:	add	x12, x12, #0x1
  41eb0c:	b	41ea40 <feof@plt+0x1c070>
  41eb10:	add	x11, x11, #0x1
  41eb14:	b	41ea40 <feof@plt+0x1c070>
  41eb18:	add	x13, x13, #0x1
  41eb1c:	b	41ea40 <feof@plt+0x1c070>
  41eb20:	mov	x18, x19
  41eb24:	b	41ea40 <feof@plt+0x1c070>
  41eb28:	mov	x15, xzr
  41eb2c:	add	x10, x10, #0x1
  41eb30:	b	41ea40 <feof@plt+0x1c070>
  41eb34:	and	w7, w7, #0xff
  41eb38:	cmp	w7, #0x78
  41eb3c:	add	x4, x4, x5
  41eb40:	b.ne	41eb58 <feof@plt+0x1c188>  // b.any
  41eb44:	sub	x5, x6, x5
  41eb48:	add	x4, x4, #0x1
  41eb4c:	add	x9, x9, #0x1
  41eb50:	sub	x5, x5, #0x2
  41eb54:	b	41ea40 <feof@plt+0x1c070>
  41eb58:	add	x5, x6, x19
  41eb5c:	add	x10, x10, #0x1
  41eb60:	b	41ea40 <feof@plt+0x1c070>
  41eb64:	mov	x5, xzr
  41eb68:	mov	x4, x20
  41eb6c:	add	x10, x10, #0x1
  41eb70:	b	41ea40 <feof@plt+0x1c070>
  41eb74:	mov	x18, xzr
  41eb78:	mov	x14, xzr
  41eb7c:	mov	x12, xzr
  41eb80:	mov	x13, xzr
  41eb84:	mov	x11, xzr
  41eb88:	mov	x16, xzr
  41eb8c:	mov	x10, xzr
  41eb90:	mov	x9, xzr
  41eb94:	mov	x15, xzr
  41eb98:	cmp	x15, #0xf0
  41eb9c:	mov	w8, wzr
  41eba0:	b.hi	41ed80 <feof@plt+0x1c3b0>  // b.pmore
  41eba4:	add	x3, x14, x18
  41eba8:	add	x3, x3, x12
  41ebac:	add	x3, x3, x13
  41ebb0:	add	x3, x3, x11
  41ebb4:	add	x3, x3, x10
  41ebb8:	add	x3, x3, x9
  41ebbc:	orr	x3, x3, x16
  41ebc0:	cmp	x3, #0x1
  41ebc4:	b.hi	41ed80 <feof@plt+0x1c3b0>  // b.pmore
  41ebc8:	cbz	x9, 41ebe4 <feof@plt+0x1c214>
  41ebcc:	cmp	x15, #0x20
  41ebd0:	b.eq	41ebe4 <feof@plt+0x1c214>  // b.none
  41ebd4:	cmp	x15, #0x80
  41ebd8:	b.eq	41ebe4 <feof@plt+0x1c214>  // b.none
  41ebdc:	cmp	x15, #0x40
  41ebe0:	b.ne	41ed7c <feof@plt+0x1c3ac>  // b.any
  41ebe4:	cmp	x10, #0x0
  41ebe8:	cset	w3, ne  // ne = any
  41ebec:	cmp	x15, #0x10
  41ebf0:	cset	w4, ne  // ne = any
  41ebf4:	tst	x15, #0x1f
  41ebf8:	cset	w5, ne  // ne = any
  41ebfc:	cmp	x15, #0x60
  41ec00:	cset	w8, eq  // eq = none
  41ec04:	and	w6, w3, w8
  41ec08:	mov	w8, wzr
  41ec0c:	tbnz	w6, #0, 41ed80 <feof@plt+0x1c3b0>
  41ec10:	and	w3, w3, w4
  41ec14:	and	w3, w3, w5
  41ec18:	tbnz	w3, #0, 41ed80 <feof@plt+0x1c3b0>
  41ec1c:	cbz	x16, 41ed04 <feof@plt+0x1c334>
  41ec20:	cbz	w17, 41ed7c <feof@plt+0x1c3ac>
  41ec24:	ldrb	w8, [x0, #1120]
  41ec28:	cbz	w8, 41ed10 <feof@plt+0x1c340>
  41ec2c:	ldr	w8, [x0, #1116]
  41ec30:	cmp	w8, #0xf
  41ec34:	b.lt	41ed10 <feof@plt+0x1c340>  // b.tstop
  41ec38:	ldrb	w8, [x1]
  41ec3c:	cmp	w8, #0x69
  41ec40:	b.ne	41ed10 <feof@plt+0x1c340>  // b.any
  41ec44:	cmp	x2, #0x1
  41ec48:	b.eq	41ed7c <feof@plt+0x1c3ac>  // b.none
  41ec4c:	cmp	x2, #0x2
  41ec50:	b.ne	41ed10 <feof@plt+0x1c340>  // b.any
  41ec54:	ldrb	w17, [x1, #1]
  41ec58:	mov	w8, wzr
  41ec5c:	cmp	w17, #0x66
  41ec60:	b.eq	41ed80 <feof@plt+0x1c3b0>  // b.none
  41ec64:	cmp	w17, #0x6c
  41ec68:	b.eq	41ed80 <feof@plt+0x1c3b0>  // b.none
  41ec6c:	b	41ed10 <feof@plt+0x1c340>
  41ec70:	cmp	w9, #0x44
  41ec74:	mov	w8, #0x4010                	// #16400
  41ec78:	csel	w8, w8, wzr, eq  // eq = none
  41ec7c:	b	41ed80 <feof@plt+0x1c3b0>
  41ec80:	cmp	w9, #0x44
  41ec84:	mov	w8, #0x4040                	// #16448
  41ec88:	csel	w8, w8, wzr, eq  // eq = none
  41ec8c:	b	41ed80 <feof@plt+0x1c3b0>
  41ec90:	cmp	w9, #0x44
  41ec94:	mov	w8, #0x4020                	// #16416
  41ec98:	csel	w8, wzr, w8, eq  // eq = none
  41ec9c:	b	41ed80 <feof@plt+0x1c3b0>
  41eca0:	cmp	w9, #0x44
  41eca4:	mov	w8, #0x4010                	// #16400
  41eca8:	csel	w8, wzr, w8, eq  // eq = none
  41ecac:	b	41ed80 <feof@plt+0x1c3b0>
  41ecb0:	cmp	w9, #0x44
  41ecb4:	mov	w8, #0x4040                	// #16448
  41ecb8:	csel	w8, wzr, w8, eq  // eq = none
  41ecbc:	b	41ed80 <feof@plt+0x1c3b0>
  41ecc0:	ldrb	w11, [x1, #1]!
  41ecc4:	mov	x10, x8
  41ecc8:	sub	w8, w11, #0x48
  41eccc:	ror	w11, w8, #2
  41ecd0:	cmp	w11, #0x9
  41ecd4:	mov	w8, wzr
  41ecd8:	b.hi	41ed80 <feof@plt+0x1c3b0>  // b.pmore
  41ecdc:	adrp	x12, 45c000 <_obstack_memory_used@@Base+0xba68>
  41ece0:	add	x12, x12, #0xf
  41ece4:	adr	x13, 41ecf4 <feof@plt+0x1c324>
  41ece8:	ldrb	w14, [x12, x11]
  41ecec:	add	x13, x13, x14, lsl #2
  41ecf0:	br	x13
  41ecf4:	cmp	x10, #0x1
  41ecf8:	b.ne	41ed7c <feof@plt+0x1c3ac>  // b.any
  41ecfc:	orr	w8, w9, #0x10
  41ed00:	b	41ed80 <feof@plt+0x1c3b0>
  41ed04:	orr	x8, x11, x13
  41ed08:	cbz	x8, 41ed10 <feof@plt+0x1c340>
  41ed0c:	cbz	w17, 41ed7c <feof@plt+0x1c3ac>
  41ed10:	cmp	x16, #0x0
  41ed14:	cset	w8, ne  // ne = any
  41ed18:	lsl	x8, x8, #13
  41ed1c:	cbz	x18, 41ed60 <feof@plt+0x1c390>
  41ed20:	mov	w11, #0x10                  	// #16
  41ed24:	orr	w8, w11, w8
  41ed28:	b	41ed80 <feof@plt+0x1c3b0>
  41ed2c:	cmp	x10, #0x2
  41ed30:	b.eq	41ed70 <feof@plt+0x1c3a0>  // b.none
  41ed34:	cmp	x10, #0x1
  41ed38:	b.eq	41ed50 <feof@plt+0x1c380>  // b.none
  41ed3c:	b	41ed7c <feof@plt+0x1c3ac>
  41ed40:	cmp	x10, #0x2
  41ed44:	b.eq	41ed90 <feof@plt+0x1c3c0>  // b.none
  41ed48:	cmp	x10, #0x1
  41ed4c:	b.ne	41ed7c <feof@plt+0x1c3ac>  // b.any
  41ed50:	orr	w8, w9, #0x20
  41ed54:	b	41ed80 <feof@plt+0x1c3b0>
  41ed58:	mov	x18, x19
  41ed5c:	b	41eb98 <feof@plt+0x1c1c8>
  41ed60:	cbz	x14, 41eda4 <feof@plt+0x1c3d4>
  41ed64:	mov	w11, #0x20                  	// #32
  41ed68:	orr	w8, w11, w8
  41ed6c:	b	41ed80 <feof@plt+0x1c3b0>
  41ed70:	ldrb	w8, [x1, #1]
  41ed74:	cmp	w8, #0x4c
  41ed78:	b.eq	41ed9c <feof@plt+0x1c3cc>  // b.none
  41ed7c:	mov	w8, wzr
  41ed80:	ldp	x20, x19, [sp, #16]
  41ed84:	mov	w0, w8
  41ed88:	ldp	x22, x21, [sp], #32
  41ed8c:	ret
  41ed90:	ldrb	w8, [x1, #1]
  41ed94:	cmp	w8, #0x6c
  41ed98:	b.ne	41ed7c <feof@plt+0x1c3ac>  // b.any
  41ed9c:	orr	w8, w9, #0x40
  41eda0:	b	41ed80 <feof@plt+0x1c3b0>
  41eda4:	orr	x13, x13, x12
  41eda8:	cmp	x12, #0x0
  41edac:	mov	w12, #0x40                  	// #64
  41edb0:	mov	w14, #0x10000               	// #65536
  41edb4:	csel	x12, x14, x12, eq  // eq = none
  41edb8:	orr	x14, x13, x11
  41edbc:	cmp	x13, #0x0
  41edc0:	mov	w11, #0x20000               	// #131072
  41edc4:	csel	x11, x11, x12, eq  // eq = none
  41edc8:	cbz	x14, 41edd4 <feof@plt+0x1c404>
  41edcc:	orr	w8, w11, w8
  41edd0:	b	41ed80 <feof@plt+0x1c3b0>
  41edd4:	lsl	x11, x15, #24
  41edd8:	cbz	x10, 41ede8 <feof@plt+0x1c418>
  41eddc:	orr	x11, x11, #0x400000
  41ede0:	orr	w8, w11, w8
  41ede4:	b	41ed80 <feof@plt+0x1c3b0>
  41ede8:	orr	x10, x11, #0x800000
  41edec:	cmp	x9, #0x0
  41edf0:	mov	w9, #0x8000                	// #32768
  41edf4:	csel	x11, x10, x9, ne  // ne = any
  41edf8:	b	41edcc <feof@plt+0x1c3fc>
  41edfc:	cbz	x2, 41ee88 <feof@plt+0x1c4b8>
  41ee00:	mov	x11, xzr
  41ee04:	mov	x10, xzr
  41ee08:	mov	x9, xzr
  41ee0c:	mov	w12, #0x1                   	// #1
  41ee10:	mov	x13, x2
  41ee14:	b	41ee24 <feof@plt+0x1c454>
  41ee18:	add	x11, x11, #0x1
  41ee1c:	sub	x13, x13, #0x1
  41ee20:	cbz	x13, 41ee94 <feof@plt+0x1c4c4>
  41ee24:	add	x8, x1, x13
  41ee28:	ldurb	w14, [x8, #-1]
  41ee2c:	mov	w8, wzr
  41ee30:	sub	w15, w14, #0x49
  41ee34:	cmp	w15, #0x2c
  41ee38:	b.hi	41ef34 <feof@plt+0x1c564>  // b.pmore
  41ee3c:	lsl	x16, x12, x15
  41ee40:	tst	x16, #0x300000003
  41ee44:	b.ne	41ee18 <feof@plt+0x1c448>  // b.any
  41ee48:	lsl	x16, x12, x15
  41ee4c:	tst	x16, #0x800000008
  41ee50:	b.ne	41ee68 <feof@plt+0x1c498>  // b.any
  41ee54:	lsl	x14, x12, x15
  41ee58:	tst	x14, #0x100000001000
  41ee5c:	b.eq	41ef34 <feof@plt+0x1c564>  // b.none
  41ee60:	add	x9, x9, #0x1
  41ee64:	b	41ee1c <feof@plt+0x1c44c>
  41ee68:	add	x10, x10, #0x1
  41ee6c:	cmp	x10, #0x2
  41ee70:	b.ne	41ee1c <feof@plt+0x1c44c>  // b.any
  41ee74:	ldrb	w8, [x1, x13]
  41ee78:	cmp	w14, w8
  41ee7c:	b.ne	41eef4 <feof@plt+0x1c524>  // b.any
  41ee80:	mov	w10, #0x2                   	// #2
  41ee84:	b	41ee1c <feof@plt+0x1c44c>
  41ee88:	mov	x9, xzr
  41ee8c:	mov	x10, xzr
  41ee90:	mov	x11, xzr
  41ee94:	cmp	x10, #0x2
  41ee98:	mov	w8, wzr
  41ee9c:	b.hi	41ef34 <feof@plt+0x1c564>  // b.pmore
  41eea0:	orr	x12, x11, x9
  41eea4:	cmp	x12, #0x1
  41eea8:	b.hi	41ef34 <feof@plt+0x1c564>  // b.pmore
  41eeac:	cbz	x11, 41eefc <feof@plt+0x1c52c>
  41eeb0:	ldrb	w8, [x0, #1163]
  41eeb4:	cbz	w8, 41ef34 <feof@plt+0x1c564>
  41eeb8:	ldrb	w8, [x0, #1120]
  41eebc:	cbz	w8, 41eefc <feof@plt+0x1c52c>
  41eec0:	ldr	w8, [x0, #1116]
  41eec4:	cmp	w8, #0xf
  41eec8:	b.lt	41eefc <feof@plt+0x1c52c>  // b.tstop
  41eecc:	ldrb	w8, [x1]
  41eed0:	cmp	w8, #0x69
  41eed4:	b.ne	41eefc <feof@plt+0x1c52c>  // b.any
  41eed8:	cmp	x2, #0x1
  41eedc:	b.eq	41eef4 <feof@plt+0x1c524>  // b.none
  41eee0:	cmp	x2, #0x2
  41eee4:	b.ne	41eefc <feof@plt+0x1c52c>  // b.any
  41eee8:	ldrb	w8, [x1, #1]
  41eeec:	cmp	w8, #0x6c
  41eef0:	b.ne	41eefc <feof@plt+0x1c52c>  // b.any
  41eef4:	mov	w0, wzr
  41eef8:	ret
  41eefc:	cmp	x11, #0x0
  41ef00:	cset	w13, ne  // ne = any
  41ef04:	cmp	x9, #0x0
  41ef08:	mov	w8, #0x40                  	// #64
  41ef0c:	mov	w11, #0x20                  	// #32
  41ef10:	cset	w9, ne  // ne = any
  41ef14:	cmp	x10, #0x1
  41ef18:	mov	w12, #0x10                  	// #16
  41ef1c:	lsl	w9, w9, #12
  41ef20:	csel	w8, w11, w8, eq  // eq = none
  41ef24:	cmp	x10, #0x0
  41ef28:	bfi	w9, w13, #13, #1
  41ef2c:	csel	w8, w12, w8, eq  // eq = none
  41ef30:	orr	w8, w9, w8
  41ef34:	mov	w0, w8
  41ef38:	ret
  41ef3c:	sub	w8, w0, #0x4a
  41ef40:	cmp	w8, #0x4
  41ef44:	b.hi	41ef4c <feof@plt+0x1c57c>  // b.pmore
  41ef48:	sub	w0, w0, #0xc
  41ef4c:	ret
  41ef50:	sub	w8, w0, #0x3e
  41ef54:	cmp	w8, #0x4
  41ef58:	b.hi	41ef60 <feof@plt+0x1c590>  // b.pmore
  41ef5c:	add	w0, w0, #0xc
  41ef60:	ret
  41ef64:	sub	w8, w0, #0x45
  41ef68:	cmp	w8, #0x4
  41ef6c:	b.hi	41ef74 <feof@plt+0x1c5a4>  // b.pmore
  41ef70:	sub	w0, w0, #0xd
  41ef74:	ret
  41ef78:	sub	w8, w0, #0x38
  41ef7c:	cmp	w8, #0x4
  41ef80:	b.hi	41ef88 <feof@plt+0x1c5b8>  // b.pmore
  41ef84:	add	w0, w0, #0xd
  41ef88:	ret
  41ef8c:	sub	w8, w0, #0x4a
  41ef90:	cmp	w8, #0x5
  41ef94:	cset	w0, cc  // cc = lo, ul, last
  41ef98:	ret
  41ef9c:	sub	w8, w0, #0x45
  41efa0:	cmp	w8, #0x5
  41efa4:	cset	w0, cc  // cc = lo, ul, last
  41efa8:	ret
  41efac:	ldr	w8, [x0, #8]
  41efb0:	ldr	x9, [x0, #16]
  41efb4:	cbz	w8, 41efe0 <feof@plt+0x1c610>
  41efb8:	mov	x10, xzr
  41efbc:	ldrb	w11, [x9, x10]
  41efc0:	cmp	w11, #0x22
  41efc4:	b.eq	41efe4 <feof@plt+0x1c614>  // b.none
  41efc8:	cmp	w11, #0x27
  41efcc:	b.eq	41efe4 <feof@plt+0x1c614>  // b.none
  41efd0:	add	x10, x10, #0x1
  41efd4:	cmp	x8, x10
  41efd8:	b.ne	41efbc <feof@plt+0x1c5ec>  // b.any
  41efdc:	b	41efec <feof@plt+0x1c61c>
  41efe0:	mov	w10, wzr
  41efe4:	cmp	w10, w8
  41efe8:	b.ne	41eff4 <feof@plt+0x1c624>  // b.any
  41efec:	add	x0, x9, w8, uxtw
  41eff0:	ret
  41eff4:	ldrb	w10, [x9, w10, uxtw]
  41eff8:	cbz	x8, 41efec <feof@plt+0x1c61c>
  41effc:	sub	w11, w8, #0x1
  41f000:	ldrb	w11, [x9, w11, uxtw]
  41f004:	sub	x8, x8, #0x1
  41f008:	cmp	w11, w10
  41f00c:	b.ne	41eff8 <feof@plt+0x1c628>  // b.any
  41f010:	add	w8, w8, #0x1
  41f014:	add	x0, x9, w8, uxtw
  41f018:	ret
  41f01c:	sub	sp, sp, #0x70
  41f020:	stp	x29, x30, [sp, #16]
  41f024:	stp	x28, x27, [sp, #32]
  41f028:	stp	x26, x25, [sp, #48]
  41f02c:	stp	x24, x23, [sp, #64]
  41f030:	stp	x22, x21, [sp, #80]
  41f034:	stp	x20, x19, [sp, #96]
  41f038:	ldr	x8, [x1, #16]
  41f03c:	mov	x20, x0
  41f040:	add	x29, sp, #0x10
  41f044:	cbz	x2, 41f04c <feof@plt+0x1c67c>
  41f048:	str	xzr, [x2]
  41f04c:	ldr	w9, [x1, #8]
  41f050:	cmp	w9, #0x1
  41f054:	b.ne	41f060 <feof@plt+0x1c690>  // b.any
  41f058:	mov	w0, #0x111                 	// #273
  41f05c:	b	41f7c4 <feof@plt+0x1cdf4>
  41f060:	ldrb	w10, [x8]
  41f064:	adrp	x24, 461000 <_obstack_memory_used@@Base+0x10a68>
  41f068:	mov	x21, x8
  41f06c:	add	x24, x24, #0xa50
  41f070:	cmp	w10, #0x30
  41f074:	b.ne	41f0a0 <feof@plt+0x1c6d0>  // b.any
  41f078:	mov	x10, x21
  41f07c:	ldrb	w11, [x10, #1]!
  41f080:	mov	w25, #0x8                   	// #8
  41f084:	cmp	w11, #0x61
  41f088:	b.gt	41f0a8 <feof@plt+0x1c6d8>
  41f08c:	cmp	w11, #0x42
  41f090:	b.eq	41f0d8 <feof@plt+0x1c708>  // b.none
  41f094:	cmp	w11, #0x58
  41f098:	b.eq	41f0b8 <feof@plt+0x1c6e8>  // b.none
  41f09c:	b	41f118 <feof@plt+0x1c748>
  41f0a0:	mov	w25, #0xa                   	// #10
  41f0a4:	b	41f11c <feof@plt+0x1c74c>
  41f0a8:	cmp	w11, #0x62
  41f0ac:	b.eq	41f0d8 <feof@plt+0x1c708>  // b.none
  41f0b0:	cmp	w11, #0x78
  41f0b4:	b.ne	41f118 <feof@plt+0x1c748>  // b.any
  41f0b8:	ldrb	w11, [x21, #2]!
  41f0bc:	cmp	x11, #0x2e
  41f0c0:	b.eq	41f0f0 <feof@plt+0x1c720>  // b.none
  41f0c4:	ldrh	w12, [x24, x11, lsl #1]
  41f0c8:	tbnz	w12, #8, 41f0f0 <feof@plt+0x1c720>
  41f0cc:	cmp	w11, #0x27
  41f0d0:	b.eq	41f100 <feof@plt+0x1c730>  // b.none
  41f0d4:	b	41f114 <feof@plt+0x1c744>
  41f0d8:	ldrb	w11, [x21, #2]!
  41f0dc:	sub	w12, w11, #0x30
  41f0e0:	cmp	w12, #0x2
  41f0e4:	b.cs	41f0f8 <feof@plt+0x1c728>  // b.hs, b.nlast
  41f0e8:	mov	w25, #0x2                   	// #2
  41f0ec:	b	41f11c <feof@plt+0x1c74c>
  41f0f0:	mov	w25, #0x10                  	// #16
  41f0f4:	b	41f11c <feof@plt+0x1c74c>
  41f0f8:	cmp	w11, #0x27
  41f0fc:	b.ne	41f114 <feof@plt+0x1c744>  // b.any
  41f100:	ldrb	w11, [x20, #1166]
  41f104:	cbz	w11, 41f114 <feof@plt+0x1c744>
  41f108:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f10c:	add	x4, x4, #0x16a
  41f110:	b	41f7ac <feof@plt+0x1cddc>
  41f114:	mov	w25, #0x8                   	// #8
  41f118:	mov	x21, x10
  41f11c:	add	x12, x8, x9
  41f120:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  41f124:	mov	w10, wzr
  41f128:	mov	w26, wzr
  41f12c:	mov	w19, wzr
  41f130:	add	x8, x8, #0x93f
  41f134:	mov	w28, w10
  41f138:	b	41f150 <feof@plt+0x1c780>
  41f13c:	mov	x21, x9
  41f140:	ldrb	w9, [x8, x27]
  41f144:	mov	w26, #0x1                   	// #1
  41f148:	cmp	w19, w9
  41f14c:	csel	w19, w9, w19, cc  // cc = lo, ul, last
  41f150:	mov	x23, x21
  41f154:	ldrb	w27, [x21], #1
  41f158:	ldrh	w9, [x24, x27, lsl #1]
  41f15c:	tbnz	w9, #2, 41f140 <feof@plt+0x1c770>
  41f160:	cmp	w25, #0x10
  41f164:	b.ne	41f16c <feof@plt+0x1c79c>  // b.any
  41f168:	tbnz	w9, #8, 41f140 <feof@plt+0x1c770>
  41f16c:	cmp	w27, #0x27
  41f170:	b.ne	41f1ac <feof@plt+0x1c7dc>  // b.any
  41f174:	ldrb	w9, [x20, #1166]
  41f178:	cbz	w9, 41f1e4 <feof@plt+0x1c814>
  41f17c:	ldrb	w27, [x23, #1]
  41f180:	add	x9, x23, #0x2
  41f184:	ldrh	w10, [x24, x27, lsl #1]
  41f188:	tbnz	w10, #2, 41f13c <feof@plt+0x1c76c>
  41f18c:	cmp	w25, #0x10
  41f190:	b.ne	41f198 <feof@plt+0x1c7c8>  // b.any
  41f194:	tbnz	w10, #8, 41f13c <feof@plt+0x1c76c>
  41f198:	cmp	w27, #0x2e
  41f19c:	b.ne	41f27c <feof@plt+0x1c8ac>  // b.any
  41f1a0:	mov	w10, #0x1                   	// #1
  41f1a4:	mov	x21, x9
  41f1a8:	b	41f1b8 <feof@plt+0x1c7e8>
  41f1ac:	cmp	w27, #0x2e
  41f1b0:	b.ne	41f1f0 <feof@plt+0x1c820>  // b.any
  41f1b4:	mov	w10, wzr
  41f1b8:	tbnz	w10, #0, 41f264 <feof@plt+0x1c894>
  41f1bc:	ldrb	w9, [x21]
  41f1c0:	cmp	w9, #0x27
  41f1c4:	b.ne	41f1d0 <feof@plt+0x1c800>  // b.any
  41f1c8:	ldrb	w9, [x20, #1166]
  41f1cc:	cbnz	w9, 41f264 <feof@plt+0x1c894>
  41f1d0:	mov	w10, #0x1                   	// #1
  41f1d4:	cbz	w28, 41f134 <feof@plt+0x1c764>
  41f1d8:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f1dc:	add	x4, x4, #0x1d3
  41f1e0:	b	41f7ac <feof@plt+0x1cddc>
  41f1e4:	mov	w22, wzr
  41f1e8:	cbnz	w22, 41f22c <feof@plt+0x1c85c>
  41f1ec:	b	41f2b4 <feof@plt+0x1c8e4>
  41f1f0:	mov	w22, wzr
  41f1f4:	cmp	w25, #0x10
  41f1f8:	orr	w9, w27, #0x20
  41f1fc:	cset	w8, eq  // eq = none
  41f200:	cmp	w25, #0xb
  41f204:	cset	w10, cc  // cc = lo, ul, last
  41f208:	cmp	w9, #0x65
  41f20c:	cset	w11, eq  // eq = none
  41f210:	cmp	w9, #0x70
  41f214:	and	w10, w10, w11
  41f218:	cset	w9, eq  // eq = none
  41f21c:	tbnz	w10, #0, 41f238 <feof@plt+0x1c868>
  41f220:	and	w8, w8, w9
  41f224:	cbnz	w8, 41f238 <feof@plt+0x1c868>
  41f228:	cbz	w22, 41f2b4 <feof@plt+0x1c8e4>
  41f22c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f230:	add	x4, x4, #0x21a
  41f234:	b	41f7ac <feof@plt+0x1cddc>
  41f238:	tbnz	w22, #0, 41f250 <feof@plt+0x1c880>
  41f23c:	ldrb	w27, [x21]
  41f240:	cmp	w27, #0x27
  41f244:	b.ne	41f25c <feof@plt+0x1c88c>  // b.any
  41f248:	ldrb	w8, [x20, #1166]
  41f24c:	cbz	w8, 41f270 <feof@plt+0x1c8a0>
  41f250:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f254:	add	x4, x4, #0x1f5
  41f258:	b	41f7ac <feof@plt+0x1cddc>
  41f25c:	mov	w28, #0x2                   	// #2
  41f260:	b	41f33c <feof@plt+0x1c96c>
  41f264:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f268:	add	x4, x4, #0x1a9
  41f26c:	b	41f7ac <feof@plt+0x1cddc>
  41f270:	mov	w28, #0x2                   	// #2
  41f274:	mov	w27, #0x27                  	// #39
  41f278:	b	41f33c <feof@plt+0x1c96c>
  41f27c:	cmp	w27, #0x27
  41f280:	b.ne	41f298 <feof@plt+0x1c8c8>  // b.any
  41f284:	ldrb	w8, [x20, #1166]
  41f288:	cbz	w8, 41f2a8 <feof@plt+0x1c8d8>
  41f28c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f290:	add	x4, x4, #0x18f
  41f294:	b	41f7ac <feof@plt+0x1cddc>
  41f298:	mov	w22, #0x1                   	// #1
  41f29c:	mov	x23, x21
  41f2a0:	mov	x21, x9
  41f2a4:	b	41f1f4 <feof@plt+0x1c824>
  41f2a8:	mov	w22, #0x1                   	// #1
  41f2ac:	mov	x23, x21
  41f2b0:	cbnz	w22, 41f22c <feof@plt+0x1c85c>
  41f2b4:	cmp	w25, #0x10
  41f2b8:	b.eq	41f338 <feof@plt+0x1c968>  // b.none
  41f2bc:	cbnz	w28, 41f338 <feof@plt+0x1c968>
  41f2c0:	str	x2, [sp]
  41f2c4:	sub	x2, x12, x23
  41f2c8:	mov	x0, x20
  41f2cc:	mov	x1, x23
  41f2d0:	stur	w3, [x29, #-4]
  41f2d4:	mov	x21, x12
  41f2d8:	bl	41e938 <feof@plt+0x1bf68>
  41f2dc:	tst	w0, #0x300000
  41f2e0:	b.eq	41f328 <feof@plt+0x1c958>  // b.none
  41f2e4:	ldrb	w8, [x20, #1154]
  41f2e8:	ldur	w3, [x29, #-4]
  41f2ec:	cmp	w25, #0x8
  41f2f0:	mov	w9, #0xa                   	// #10
  41f2f4:	orr	w19, w0, #0x2
  41f2f8:	csel	w25, w9, w25, eq  // eq = none
  41f2fc:	cbz	w8, 41f640 <feof@plt+0x1cc70>
  41f300:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f304:	add	x4, x4, #0x241
  41f308:	mov	w1, #0x2                   	// #2
  41f30c:	mov	x0, x20
  41f310:	mov	w2, w3
  41f314:	mov	w3, wzr
  41f318:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f31c:	ldur	w3, [x29, #-4]
  41f320:	tbnz	w19, #13, 41f644 <feof@plt+0x1cc74>
  41f324:	b	41f670 <feof@plt+0x1cca0>
  41f328:	ldur	w3, [x29, #-4]
  41f32c:	ldr	x2, [sp]
  41f330:	mov	w28, wzr
  41f334:	mov	x12, x21
  41f338:	mov	x21, x23
  41f33c:	cmp	w28, #0x0
  41f340:	ccmp	w25, #0x8, #0x0, ne  // ne = any
  41f344:	mov	w8, #0xa                   	// #10
  41f348:	csel	w25, w8, w25, eq  // eq = none
  41f34c:	cmp	w19, w25
  41f350:	b.cs	41f36c <feof@plt+0x1c99c>  // b.hs, b.nlast
  41f354:	cbz	w28, 41f3a4 <feof@plt+0x1c9d4>
  41f358:	cmp	w25, #0x2
  41f35c:	b.ne	41f430 <feof@plt+0x1ca60>  // b.any
  41f360:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f364:	add	x4, x4, #0x2b6
  41f368:	b	41f7ac <feof@plt+0x1cddc>
  41f36c:	cmp	w25, #0x2
  41f370:	add	w5, w19, #0x30
  41f374:	b.ne	41f384 <feof@plt+0x1c9b4>  // b.any
  41f378:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f37c:	add	x4, x4, #0x26b
  41f380:	b	41f38c <feof@plt+0x1c9bc>
  41f384:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f388:	add	x4, x4, #0x291
  41f38c:	mov	w1, #0x3                   	// #3
  41f390:	mov	x0, x20
  41f394:	mov	w2, w3
  41f398:	mov	w3, wzr
  41f39c:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f3a0:	b	41f7c0 <feof@plt+0x1cdf0>
  41f3a4:	subs	x23, x12, x21
  41f3a8:	b.eq	41f47c <feof@plt+0x1caac>  // b.none
  41f3ac:	mov	x10, xzr
  41f3b0:	mov	x9, xzr
  41f3b4:	mov	x8, xzr
  41f3b8:	mov	w11, #0x1                   	// #1
  41f3bc:	mov	x12, x23
  41f3c0:	b	41f3d0 <feof@plt+0x1ca00>
  41f3c4:	add	x10, x10, #0x1
  41f3c8:	sub	x12, x12, #0x1
  41f3cc:	cbz	x12, 41f488 <feof@plt+0x1cab8>
  41f3d0:	add	x13, x21, x12
  41f3d4:	ldurb	w13, [x13, #-1]
  41f3d8:	sub	w14, w13, #0x49
  41f3dc:	cmp	w14, #0x2c
  41f3e0:	b.hi	41f4e0 <feof@plt+0x1cb10>  // b.pmore
  41f3e4:	lsl	x15, x11, x14
  41f3e8:	tst	x15, #0x300000003
  41f3ec:	b.ne	41f3c4 <feof@plt+0x1c9f4>  // b.any
  41f3f0:	lsl	x15, x11, x14
  41f3f4:	tst	x15, #0x800000008
  41f3f8:	b.ne	41f410 <feof@plt+0x1ca40>  // b.any
  41f3fc:	lsl	x13, x11, x14
  41f400:	tst	x13, #0x100000001000
  41f404:	b.eq	41f4e0 <feof@plt+0x1cb10>  // b.none
  41f408:	add	x8, x8, #0x1
  41f40c:	b	41f3c8 <feof@plt+0x1c9f8>
  41f410:	add	x9, x9, #0x1
  41f414:	cmp	x9, #0x2
  41f418:	b.ne	41f3c8 <feof@plt+0x1c9f8>  // b.any
  41f41c:	ldrb	w9, [x21, x12]
  41f420:	cmp	w13, w9
  41f424:	b.ne	41f4e0 <feof@plt+0x1cb10>  // b.any
  41f428:	mov	w9, #0x2                   	// #2
  41f42c:	b	41f3c8 <feof@plt+0x1c9f8>
  41f430:	cmp	w25, #0x10
  41f434:	cset	w8, ne  // ne = any
  41f438:	orr	w8, w26, w8
  41f43c:	tbz	w8, #0, 41f470 <feof@plt+0x1caa0>
  41f440:	b.ne	41f714 <feof@plt+0x1cd44>  // b.any
  41f444:	ldrb	w8, [x20, #1154]
  41f448:	cbz	w8, 41f714 <feof@plt+0x1cd44>
  41f44c:	ldrb	w8, [x20, #1127]
  41f450:	cbnz	w8, 41f714 <feof@plt+0x1cd44>
  41f454:	ldrb	w8, [x20, #1120]
  41f458:	mov	x26, x12
  41f45c:	mov	x23, x2
  41f460:	cbz	w8, 41f6e8 <feof@plt+0x1cd18>
  41f464:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f468:	add	x4, x4, #0x30b
  41f46c:	b	41f6f0 <feof@plt+0x1cd20>
  41f470:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f474:	add	x4, x4, #0x2e0
  41f478:	b	41f7ac <feof@plt+0x1cddc>
  41f47c:	mov	x8, xzr
  41f480:	mov	x9, xzr
  41f484:	mov	x10, xzr
  41f488:	cmp	x9, #0x2
  41f48c:	b.hi	41f4e0 <feof@plt+0x1cb10>  // b.pmore
  41f490:	orr	x11, x10, x8
  41f494:	cmp	x11, #0x1
  41f498:	b.hi	41f4e0 <feof@plt+0x1cb10>  // b.pmore
  41f49c:	cbz	x10, 41f528 <feof@plt+0x1cb58>
  41f4a0:	ldrb	w11, [x20, #1163]
  41f4a4:	cbz	w11, 41f4e0 <feof@plt+0x1cb10>
  41f4a8:	ldrb	w11, [x20, #1120]
  41f4ac:	cbz	w11, 41f528 <feof@plt+0x1cb58>
  41f4b0:	ldr	w11, [x20, #1116]
  41f4b4:	cmp	w11, #0xf
  41f4b8:	b.lt	41f528 <feof@plt+0x1cb58>  // b.tstop
  41f4bc:	cmp	w27, #0x69
  41f4c0:	b.ne	41f528 <feof@plt+0x1cb58>  // b.any
  41f4c4:	cmp	x23, #0x1
  41f4c8:	b.eq	41f4e0 <feof@plt+0x1cb10>  // b.none
  41f4cc:	cmp	x23, #0x2
  41f4d0:	b.ne	41f528 <feof@plt+0x1cb58>  // b.any
  41f4d4:	ldrb	w11, [x21, #1]
  41f4d8:	cmp	w11, #0x6c
  41f4dc:	b.ne	41f528 <feof@plt+0x1cb58>  // b.any
  41f4e0:	ldrb	w8, [x20, #1161]
  41f4e4:	cbz	w8, 41f500 <feof@plt+0x1cb30>
  41f4e8:	mov	w8, #0x40                  	// #64
  41f4ec:	movk	w8, #0x100, lsl #16
  41f4f0:	cbz	x2, 41f564 <feof@plt+0x1cb94>
  41f4f4:	add	w19, w8, #0x1, lsl #12
  41f4f8:	str	x21, [x2]
  41f4fc:	b	41f568 <feof@plt+0x1cb98>
  41f500:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f504:	add	x4, x4, #0x48f
  41f508:	mov	w1, #0x3                   	// #3
  41f50c:	mov	x0, x20
  41f510:	mov	w2, w3
  41f514:	mov	w3, wzr
  41f518:	mov	w5, w23
  41f51c:	mov	x6, x21
  41f520:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f524:	b	41f7c0 <feof@plt+0x1cdf0>
  41f528:	cmp	x10, #0x0
  41f52c:	cset	w13, ne  // ne = any
  41f530:	cmp	x8, #0x0
  41f534:	mov	w10, #0x40                  	// #64
  41f538:	mov	w11, #0x20                  	// #32
  41f53c:	cset	w8, ne  // ne = any
  41f540:	cmp	x9, #0x1
  41f544:	mov	w12, #0x10                  	// #16
  41f548:	lsl	w8, w8, #12
  41f54c:	csel	w10, w11, w10, eq  // eq = none
  41f550:	cmp	x9, #0x0
  41f554:	bfi	w8, w13, #13, #1
  41f558:	csel	w9, w12, w10, eq  // eq = none
  41f55c:	orr	w19, w8, w9
  41f560:	b	41f568 <feof@plt+0x1cb98>
  41f564:	orr	w19, w8, #0x1000
  41f568:	ldrb	w8, [x20, #1138]
  41f56c:	cbz	w8, 41f5e0 <feof@plt+0x1cc10>
  41f570:	mov	x0, x20
  41f574:	mov	w22, w3
  41f578:	bl	42e1a0 <feof@plt+0x2b7d0>
  41f57c:	mov	w3, w22
  41f580:	cbnz	w0, 41f5e0 <feof@plt+0x1cc10>
  41f584:	and	w8, w19, #0xf0
  41f588:	cmp	w8, #0x40
  41f58c:	and	w8, w19, #0x3000
  41f590:	b.ne	41f5a4 <feof@plt+0x1cbd4>  // b.any
  41f594:	ldrb	w9, [x20, #1139]
  41f598:	cmp	w9, #0x0
  41f59c:	cset	w9, ne  // ne = any
  41f5a0:	b	41f5a8 <feof@plt+0x1cbd8>
  41f5a4:	mov	w9, wzr
  41f5a8:	cbnz	w8, 41f5b0 <feof@plt+0x1cbe0>
  41f5ac:	cbz	w9, 41f5e0 <feof@plt+0x1cc10>
  41f5b0:	cmp	w9, #0x0
  41f5b4:	mov	w8, #0x6                   	// #6
  41f5b8:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f5bc:	cinc	w1, w8, ne  // ne = any
  41f5c0:	add	x4, x4, #0x3d4
  41f5c4:	mov	x0, x20
  41f5c8:	mov	w2, w3
  41f5cc:	mov	w3, wzr
  41f5d0:	mov	w5, w23
  41f5d4:	mov	x6, x21
  41f5d8:	bl	41e3c0 <feof@plt+0x1b9f0>
  41f5dc:	mov	w3, w22
  41f5e0:	and	w8, w19, #0xf0
  41f5e4:	cmp	w8, #0x40
  41f5e8:	b.ne	41f63c <feof@plt+0x1cc6c>  // b.any
  41f5ec:	ldrb	w8, [x20, #1139]
  41f5f0:	cbz	w8, 41f63c <feof@plt+0x1cc6c>
  41f5f4:	ldrb	w8, [x20, #1120]
  41f5f8:	ldrb	w9, [x20, #1152]
  41f5fc:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f600:	adrp	x11, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f604:	add	x10, x10, #0x4b9
  41f608:	add	x11, x11, #0x4e1
  41f60c:	cmp	w8, #0x0
  41f610:	csel	x4, x11, x10, eq  // eq = none
  41f614:	mov	w1, #0x7                   	// #7
  41f618:	mov	x0, x20
  41f61c:	mov	w2, w3
  41f620:	mov	w21, w3
  41f624:	mov	w3, wzr
  41f628:	cbz	w9, 41f634 <feof@plt+0x1cc64>
  41f62c:	bl	41e3c0 <feof@plt+0x1b9f0>
  41f630:	b	41f638 <feof@plt+0x1cc68>
  41f634:	bl	41e4bc <feof@plt+0x1baec>
  41f638:	mov	w3, w21
  41f63c:	orr	w19, w19, #0x1
  41f640:	tbz	w19, #13, 41f670 <feof@plt+0x1cca0>
  41f644:	ldrb	w8, [x20, #1154]
  41f648:	cbz	w8, 41f670 <feof@plt+0x1cca0>
  41f64c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f650:	add	x4, x4, #0x507
  41f654:	mov	w1, #0x2                   	// #2
  41f658:	mov	x0, x20
  41f65c:	mov	w2, w3
  41f660:	mov	w21, w3
  41f664:	mov	w3, wzr
  41f668:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f66c:	mov	w3, w21
  41f670:	cmp	w25, #0x10
  41f674:	b.eq	41f6d0 <feof@plt+0x1cd00>  // b.none
  41f678:	cmp	w25, #0xa
  41f67c:	b.eq	41f6d8 <feof@plt+0x1cd08>  // b.none
  41f680:	cmp	w25, #0x2
  41f684:	b.ne	41f6e0 <feof@plt+0x1cd10>  // b.any
  41f688:	ldrb	w8, [x20, #1165]
  41f68c:	cbnz	w8, 41f6c8 <feof@plt+0x1ccf8>
  41f690:	ldrb	w8, [x20, #1154]
  41f694:	cbz	w8, 41f6c8 <feof@plt+0x1ccf8>
  41f698:	ldrb	w8, [x20, #1120]
  41f69c:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f6a0:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f6a4:	add	x9, x9, #0x52f
  41f6a8:	add	x10, x10, #0x565
  41f6ac:	cmp	w8, #0x0
  41f6b0:	csel	x4, x10, x9, eq  // eq = none
  41f6b4:	mov	w1, #0x2                   	// #2
  41f6b8:	mov	x0, x20
  41f6bc:	mov	w2, w3
  41f6c0:	mov	w3, wzr
  41f6c4:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f6c8:	orr	w0, w19, #0x800
  41f6cc:	b	41f7c4 <feof@plt+0x1cdf4>
  41f6d0:	orr	w0, w19, #0x200
  41f6d4:	b	41f7c4 <feof@plt+0x1cdf4>
  41f6d8:	orr	w0, w19, #0x100
  41f6dc:	b	41f7c4 <feof@plt+0x1cdf4>
  41f6e0:	orr	w0, w19, #0x400
  41f6e4:	b	41f7c4 <feof@plt+0x1cdf4>
  41f6e8:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f6ec:	add	x4, x4, #0x336
  41f6f0:	mov	w1, #0x2                   	// #2
  41f6f4:	mov	x0, x20
  41f6f8:	mov	w2, w3
  41f6fc:	mov	w19, w3
  41f700:	mov	w3, wzr
  41f704:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f708:	mov	w3, w19
  41f70c:	mov	x2, x23
  41f710:	mov	x12, x26
  41f714:	cmp	w28, #0x2
  41f718:	b.ne	41f79c <feof@plt+0x1cdcc>  // b.any
  41f71c:	ldrb	w8, [x21]
  41f720:	cmp	w8, #0x2d
  41f724:	b.eq	41f730 <feof@plt+0x1cd60>  // b.none
  41f728:	cmp	w8, #0x2b
  41f72c:	b.ne	41f734 <feof@plt+0x1cd64>  // b.any
  41f730:	ldrb	w8, [x21, #1]!
  41f734:	ldrh	w9, [x24, w8, uxtw #1]
  41f738:	tbnz	w9, #2, 41f758 <feof@plt+0x1cd88>
  41f73c:	cmp	w8, #0x27
  41f740:	b.ne	41f74c <feof@plt+0x1cd7c>  // b.any
  41f744:	ldrb	w8, [x20, #1166]
  41f748:	cbnz	w8, 41f250 <feof@plt+0x1c880>
  41f74c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f750:	add	x4, x4, #0x35f
  41f754:	b	41f7ac <feof@plt+0x1cddc>
  41f758:	and	w8, w8, #0xff
  41f75c:	add	x21, x21, #0x1
  41f760:	cmp	w8, #0x27
  41f764:	b.ne	41f778 <feof@plt+0x1cda8>  // b.any
  41f768:	ldrb	w8, [x20, #1166]
  41f76c:	cmp	w8, #0x0
  41f770:	cset	w22, ne  // ne = any
  41f774:	b	41f77c <feof@plt+0x1cdac>
  41f778:	mov	w22, wzr
  41f77c:	ldrb	w8, [x21]
  41f780:	ldrh	w9, [x24, x8, lsl #1]
  41f784:	tbnz	w9, #2, 41f758 <feof@plt+0x1cd88>
  41f788:	cmp	w8, #0x27
  41f78c:	b.ne	41f7e4 <feof@plt+0x1ce14>  // b.any
  41f790:	ldrb	w9, [x20, #1166]
  41f794:	cbnz	w9, 41f758 <feof@plt+0x1cd88>
  41f798:	b	41f7e4 <feof@plt+0x1ce14>
  41f79c:	cmp	w25, #0x10
  41f7a0:	b.ne	41f7e4 <feof@plt+0x1ce14>  // b.any
  41f7a4:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f7a8:	add	x4, x4, #0x376
  41f7ac:	mov	w1, #0x3                   	// #3
  41f7b0:	mov	x0, x20
  41f7b4:	mov	w2, w3
  41f7b8:	mov	w3, wzr
  41f7bc:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f7c0:	mov	w0, wzr
  41f7c4:	ldp	x20, x19, [sp, #96]
  41f7c8:	ldp	x22, x21, [sp, #80]
  41f7cc:	ldp	x24, x23, [sp, #64]
  41f7d0:	ldp	x26, x25, [sp, #48]
  41f7d4:	ldp	x28, x27, [sp, #32]
  41f7d8:	ldp	x29, x30, [sp, #16]
  41f7dc:	add	sp, sp, #0x70
  41f7e0:	ret
  41f7e4:	cbnz	w22, 41f22c <feof@plt+0x1c85c>
  41f7e8:	sub	x24, x12, x21
  41f7ec:	mov	x22, x2
  41f7f0:	mov	x0, x20
  41f7f4:	mov	x1, x21
  41f7f8:	mov	x2, x24
  41f7fc:	mov	w19, w3
  41f800:	mov	x26, x12
  41f804:	bl	41e938 <feof@plt+0x1bf68>
  41f808:	mov	w23, w0
  41f80c:	cbz	w0, 41f898 <feof@plt+0x1cec8>
  41f810:	cmp	x26, x21
  41f814:	b.eq	41f850 <feof@plt+0x1ce80>  // b.none
  41f818:	ldrb	w8, [x20, #1138]
  41f81c:	cbz	w8, 41f850 <feof@plt+0x1ce80>
  41f820:	mov	x0, x20
  41f824:	bl	42e1a0 <feof@plt+0x2b7d0>
  41f828:	cbnz	w0, 41f850 <feof@plt+0x1ce80>
  41f82c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f830:	add	x4, x4, #0x3d4
  41f834:	mov	w1, #0x6                   	// #6
  41f838:	mov	x0, x20
  41f83c:	mov	w2, w19
  41f840:	mov	w3, wzr
  41f844:	mov	w5, w24
  41f848:	mov	x6, x21
  41f84c:	bl	41e3c0 <feof@plt+0x1b9f0>
  41f850:	cmp	w23, #0x20
  41f854:	b.ne	41f870 <feof@plt+0x1cea0>  // b.any
  41f858:	ldrb	w8, [x20, #1154]
  41f85c:	mov	w3, w19
  41f860:	cbz	w8, 41f910 <feof@plt+0x1cf40>
  41f864:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f868:	add	x4, x4, #0x3fc
  41f86c:	b	41f8f8 <feof@plt+0x1cf28>
  41f870:	cmp	w25, #0xa
  41f874:	mov	w3, w19
  41f878:	b.eq	41f8b4 <feof@plt+0x1cee4>  // b.none
  41f87c:	tbz	w23, #14, 41f8b4 <feof@plt+0x1cee4>
  41f880:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f884:	add	x4, x4, #0x42a
  41f888:	mov	w1, #0x3                   	// #3
  41f88c:	mov	x0, x20
  41f890:	mov	w2, w3
  41f894:	b	41f930 <feof@plt+0x1cf60>
  41f898:	ldrb	w8, [x20, #1161]
  41f89c:	cbz	w8, 41f91c <feof@plt+0x1cf4c>
  41f8a0:	mov	w23, #0x40                  	// #64
  41f8a4:	movk	w23, #0x100, lsl #16
  41f8a8:	cbz	x22, 41f810 <feof@plt+0x1ce40>
  41f8ac:	str	x21, [x22]
  41f8b0:	b	41f810 <feof@plt+0x1ce40>
  41f8b4:	tst	w23, #0x300000
  41f8b8:	b.eq	41f8e4 <feof@plt+0x1cf14>  // b.none
  41f8bc:	ldrb	w8, [x20, #1154]
  41f8c0:	cbz	w8, 41f8e4 <feof@plt+0x1cf14>
  41f8c4:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f8c8:	add	x4, x4, #0x241
  41f8cc:	mov	w1, #0x2                   	// #2
  41f8d0:	mov	x0, x20
  41f8d4:	mov	w2, w3
  41f8d8:	mov	w3, wzr
  41f8dc:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f8e0:	mov	w3, w19
  41f8e4:	tbz	w23, #14, 41f910 <feof@plt+0x1cf40>
  41f8e8:	ldrb	w8, [x20, #1154]
  41f8ec:	cbz	w8, 41f910 <feof@plt+0x1cf40>
  41f8f0:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f8f4:	add	x4, x4, #0x463
  41f8f8:	mov	w1, #0x2                   	// #2
  41f8fc:	mov	x0, x20
  41f900:	mov	w2, w3
  41f904:	mov	w3, wzr
  41f908:	bl	41e2c4 <feof@plt+0x1b8f4>
  41f90c:	mov	w3, w19
  41f910:	orr	w19, w23, #0x2
  41f914:	tbnz	w19, #13, 41f644 <feof@plt+0x1cc74>
  41f918:	b	41f670 <feof@plt+0x1cca0>
  41f91c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41f920:	add	x4, x4, #0x3a9
  41f924:	mov	w1, #0x3                   	// #3
  41f928:	mov	x0, x20
  41f92c:	mov	w2, w19
  41f930:	mov	w3, wzr
  41f934:	mov	w5, w24
  41f938:	b	41f51c <feof@plt+0x1cb4c>
  41f93c:	sub	sp, sp, #0x50
  41f940:	stp	x20, x19, [sp, #64]
  41f944:	mov	x19, x8
  41f948:	ubfx	w8, w2, #12, #1
  41f94c:	stp	x29, x30, [sp, #16]
  41f950:	stp	x24, x23, [sp, #32]
  41f954:	stp	x22, x21, [sp, #48]
  41f958:	stp	xzr, xzr, [x19]
  41f95c:	strb	w8, [x19, #16]
  41f960:	strb	wzr, [x19, #17]
  41f964:	ldr	w10, [x1, #8]
  41f968:	ldr	x11, [x1, #16]
  41f96c:	add	x29, sp, #0x10
  41f970:	cmp	w10, #0x1
  41f974:	b.ne	41f988 <feof@plt+0x1cfb8>  // b.any
  41f978:	ldrb	w8, [x11]
  41f97c:	sub	x8, x8, #0x30
  41f980:	str	x8, [x19, #8]
  41f984:	b	41fc18 <feof@plt+0x1d248>
  41f988:	ldr	x9, [x0, #1208]
  41f98c:	and	w13, w2, #0xf00
  41f990:	cmp	w13, #0x200
  41f994:	add	x12, x11, x10
  41f998:	b.eq	41f9c0 <feof@plt+0x1cff0>  // b.none
  41f99c:	cmp	w13, #0x800
  41f9a0:	b.eq	41f9d4 <feof@plt+0x1d004>  // b.none
  41f9a4:	cmp	w13, #0x400
  41f9a8:	b.ne	41f9f0 <feof@plt+0x1d020>  // b.any
  41f9ac:	add	x11, x11, #0x1
  41f9b0:	mov	w10, #0x8                   	// #8
  41f9b4:	cmp	x11, x12
  41f9b8:	b.cs	41f9e4 <feof@plt+0x1d014>  // b.hs, b.nlast
  41f9bc:	b	41f9fc <feof@plt+0x1d02c>
  41f9c0:	add	x11, x11, #0x2
  41f9c4:	mov	w10, #0x10                  	// #16
  41f9c8:	cmp	x11, x12
  41f9cc:	b.cs	41f9e4 <feof@plt+0x1d014>  // b.hs, b.nlast
  41f9d0:	b	41f9fc <feof@plt+0x1d02c>
  41f9d4:	add	x11, x11, #0x2
  41f9d8:	mov	w10, #0x2                   	// #2
  41f9dc:	cmp	x11, x12
  41f9e0:	b.cc	41f9fc <feof@plt+0x1d02c>  // b.lo, b.ul, b.last
  41f9e4:	mov	x13, xzr
  41f9e8:	mov	x14, xzr
  41f9ec:	b	41fbbc <feof@plt+0x1d1ec>
  41f9f0:	mov	w10, #0xa                   	// #10
  41f9f4:	cmp	x11, x12
  41f9f8:	b.cs	41f9e4 <feof@plt+0x1d014>  // b.hs, b.nlast
  41f9fc:	neg	x3, x9
  41fa00:	mov	x4, #0xffffffffffffffff    	// #-1
  41fa04:	subs	x16, x9, #0x40
  41fa08:	lsr	x3, x4, x3
  41fa0c:	mov	w5, #0x3                   	// #3
  41fa10:	lsl	x4, x4, x9
  41fa14:	csinc	x7, xzr, x3, cs  // cs = hs, nlast
  41fa18:	cmp	w10, #0x10
  41fa1c:	mvn	x3, x4
  41fa20:	sub	x4, x7, x10
  41fa24:	cinc	x5, x5, eq  // eq = none
  41fa28:	cmp	w10, #0x2
  41fa2c:	mov	w6, #0x40                  	// #64
  41fa30:	adrp	x18, 461000 <_obstack_memory_used@@Base+0x10a68>
  41fa34:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  41fa38:	udiv	x7, x4, x10
  41fa3c:	csinc	x4, x5, xzr, ne  // ne = any
  41fa40:	mov	x14, xzr
  41fa44:	mov	x13, xzr
  41fa48:	mov	w15, wzr
  41fa4c:	add	x17, x19, #0x12
  41fa50:	add	x18, x18, #0xa50
  41fa54:	add	x1, x1, #0x93f
  41fa58:	add	x7, x7, #0x1
  41fa5c:	sub	x5, x6, x4
  41fa60:	mov	w6, #0x2                   	// #2
  41fa64:	b	41fa7c <feof@plt+0x1d0ac>
  41fa68:	madd	x13, x13, x10, x20
  41fa6c:	str	x13, [x19, #8]
  41fa70:	add	x11, x11, #0x1
  41fa74:	cmp	x12, x11
  41fa78:	b.eq	41fb90 <feof@plt+0x1d1c0>  // b.none
  41fa7c:	ldrb	w20, [x11]
  41fa80:	ldrh	w21, [x18, x20, lsl #1]
  41fa84:	tbnz	w21, #2, 41fa94 <feof@plt+0x1d0c4>
  41fa88:	cmp	w10, #0x10
  41fa8c:	b.ne	41fb1c <feof@plt+0x1d14c>  // b.any
  41fa90:	tbz	w21, #8, 41fb1c <feof@plt+0x1d14c>
  41fa94:	ldrb	w20, [x1, x20]
  41fa98:	cmp	x13, x7
  41fa9c:	b.cc	41fa68 <feof@plt+0x1d098>  // b.lo, b.ul, b.last
  41faa0:	lsr	x7, x14, x5
  41faa4:	lsl	x21, x14, x4
  41faa8:	lsr	x23, x13, x5
  41faac:	cmp	x7, #0x0
  41fab0:	lsl	x22, x13, x4
  41fab4:	lsl	x24, x13, #1
  41fab8:	extr	x13, x14, x13, #63
  41fabc:	orr	x14, x21, x23
  41fac0:	cset	w21, ne  // ne = any
  41fac4:	cmp	w10, #0xa
  41fac8:	csel	x23, x13, xzr, eq  // eq = none
  41facc:	csel	x13, x24, xzr, eq  // eq = none
  41fad0:	mvn	x7, x22
  41fad4:	adds	x13, x13, x20
  41fad8:	cset	w20, cs  // cs = hs, nlast
  41fadc:	csinc	x24, x6, xzr, cs  // cs = hs, nlast
  41fae0:	cmp	x13, x7
  41fae4:	csel	x20, x20, x24, ls  // ls = plast
  41fae8:	mvn	x7, x14
  41faec:	add	x13, x13, x22
  41faf0:	add	x22, x20, x23
  41faf4:	cmp	x22, x7
  41faf8:	cset	w7, hi  // hi = pmore
  41fafc:	cmp	x9, #0x41
  41fb00:	orr	w20, w21, w7
  41fb04:	add	x14, x22, x14
  41fb08:	b.cc	41fb30 <feof@plt+0x1d160>  // b.lo, b.ul, b.last
  41fb0c:	cmp	x16, #0x3f
  41fb10:	b.hi	41fb60 <feof@plt+0x1d190>  // b.pmore
  41fb14:	and	x7, x14, x3
  41fb18:	b	41fb50 <feof@plt+0x1d180>
  41fb1c:	cmp	w20, #0x27
  41fb20:	b.ne	41fb90 <feof@plt+0x1d1c0>  // b.any
  41fb24:	ldrb	w20, [x0, #1166]
  41fb28:	cbnz	w20, 41fa70 <feof@plt+0x1d0a0>
  41fb2c:	b	41fb90 <feof@plt+0x1d1c0>
  41fb30:	cmp	x9, #0x40
  41fb34:	b.ne	41fb40 <feof@plt+0x1d170>  // b.any
  41fb38:	mov	x7, xzr
  41fb3c:	b	41fb50 <feof@plt+0x1d180>
  41fb40:	mov	x7, xzr
  41fb44:	cmp	x13, x3
  41fb48:	and	x13, x13, x3
  41fb4c:	b.hi	41fb58 <feof@plt+0x1d188>  // b.pmore
  41fb50:	cmp	x7, x14
  41fb54:	b.eq	41fb60 <feof@plt+0x1d190>  // b.none
  41fb58:	mov	w20, #0x1                   	// #1
  41fb5c:	mov	x14, x7
  41fb60:	ldr	w21, [sp, #8]
  41fb64:	ldrh	w22, [sp, #12]
  41fb68:	and	w15, w15, #0x1
  41fb6c:	orr	w15, w20, w15
  41fb70:	cmp	w15, #0x0
  41fb74:	mov	x7, xzr
  41fb78:	cset	w15, ne  // ne = any
  41fb7c:	stp	x14, x13, [x19]
  41fb80:	strb	w20, [x19, #17]
  41fb84:	strh	w22, [x17, #4]
  41fb88:	str	w21, [x17]
  41fb8c:	b	41fa70 <feof@plt+0x1d0a0>
  41fb90:	tbnz	w2, #24, 41fbbc <feof@plt+0x1d1ec>
  41fb94:	tbz	w15, #0, 41fbbc <feof@plt+0x1d1ec>
  41fb98:	ldp	x20, x19, [sp, #64]
  41fb9c:	ldp	x22, x21, [sp, #48]
  41fba0:	ldp	x24, x23, [sp, #32]
  41fba4:	ldp	x29, x30, [sp, #16]
  41fba8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fbac:	add	x2, x2, #0x58a
  41fbb0:	mov	w1, #0x2                   	// #2
  41fbb4:	add	sp, sp, #0x50
  41fbb8:	b	41de04 <feof@plt+0x1b434>
  41fbbc:	cbnz	w8, 41fc18 <feof@plt+0x1d248>
  41fbc0:	ldrb	w8, [x0, #1160]
  41fbc4:	cbz	w8, 41fbd0 <feof@plt+0x1d200>
  41fbc8:	ldrb	w8, [x0, #16]
  41fbcc:	cbnz	w8, 41fc18 <feof@plt+0x1d248>
  41fbd0:	cmp	x9, #0x40
  41fbd4:	mov	x8, #0xffffffffffffffbf    	// #-65
  41fbd8:	csinv	x8, x8, xzr, hi  // hi = pmore
  41fbdc:	csel	x11, x14, x13, hi  // hi = pmore
  41fbe0:	add	x8, x9, x8
  41fbe4:	lsr	x8, x11, x8
  41fbe8:	tbz	w8, #0, 41fc18 <feof@plt+0x1d248>
  41fbec:	cmp	w10, #0xa
  41fbf0:	b.ne	41fc10 <feof@plt+0x1d240>  // b.any
  41fbf4:	ldrb	w8, [x0, #1152]
  41fbf8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fbfc:	add	x2, x2, #0x5b5
  41fc00:	cmp	w8, #0x0
  41fc04:	cset	w8, ne  // ne = any
  41fc08:	lsl	w1, w8, #1
  41fc0c:	bl	41de04 <feof@plt+0x1b434>
  41fc10:	mov	w8, #0x1                   	// #1
  41fc14:	strb	w8, [x19, #16]
  41fc18:	ldp	x20, x19, [sp, #64]
  41fc1c:	ldp	x22, x21, [sp, #48]
  41fc20:	ldp	x24, x23, [sp, #32]
  41fc24:	ldp	x29, x30, [sp, #16]
  41fc28:	add	sp, sp, #0x50
  41fc2c:	ret
  41fc30:	sub	sp, sp, #0x1b0
  41fc34:	stp	x29, x30, [sp, #336]
  41fc38:	stp	x28, x27, [sp, #352]
  41fc3c:	stp	x26, x25, [sp, #368]
  41fc40:	stp	x24, x23, [sp, #384]
  41fc44:	stp	x22, x21, [sp, #400]
  41fc48:	stp	x20, x19, [sp, #416]
  41fc4c:	stp	w1, wzr, [sp, #64]
  41fc50:	ldr	x27, [x0, #1096]
  41fc54:	add	x29, sp, #0x150
  41fc58:	add	x9, x0, #0x50
  41fc5c:	mov	w8, #0x16                  	// #22
  41fc60:	str	x9, [sp, #72]
  41fc64:	sub	x9, x29, #0x40
  41fc68:	str	wzr, [sp, #116]
  41fc6c:	str	wzr, [x0, #28]
  41fc70:	str	xzr, [x0, #432]
  41fc74:	sub	x10, x29, #0x28
  41fc78:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fc7c:	str	w8, [x27, #36]
  41fc80:	add	x8, x9, #0x12
  41fc84:	mov	x19, x0
  41fc88:	mov	w25, wzr
  41fc8c:	sub	x22, x29, #0x58
  41fc90:	add	x23, x23, #0xba
  41fc94:	mov	x21, #0xffffffffffffffff    	// #-1
  41fc98:	str	x8, [sp, #104]
  41fc9c:	add	x8, x10, #0x12
  41fca0:	str	x8, [sp, #96]
  41fca4:	mov	w24, #0x1                   	// #1
  41fca8:	mov	x28, x27
  41fcac:	add	x27, x27, #0x8
  41fcb0:	b	41fd10 <feof@plt+0x1d340>
  41fcb4:	lsl	x10, x21, x10
  41fcb8:	mov	x9, xzr
  41fcbc:	bic	x8, x8, x10
  41fcc0:	ldr	w11, [sp, #120]
  41fcc4:	ldrh	w12, [sp, #124]
  41fcc8:	mov	w10, wzr
  41fccc:	str	w11, [sp, #128]
  41fcd0:	strh	w12, [sp, #132]
  41fcd4:	cmp	w10, #0x0
  41fcd8:	cset	w10, ne  // ne = any
  41fcdc:	stp	x9, x8, [x22, #24]
  41fce0:	ldrh	w8, [sp, #132]
  41fce4:	ldr	w9, [sp, #128]
  41fce8:	sturb	w10, [x29, #-48]
  41fcec:	ldr	x10, [sp, #104]
  41fcf0:	sturb	wzr, [x29, #-47]
  41fcf4:	strh	w8, [x10, #4]
  41fcf8:	str	w9, [x10]
  41fcfc:	ldr	x8, [x22, #40]
  41fd00:	ldur	q0, [x22, #24]
  41fd04:	mov	w24, wzr
  41fd08:	str	x8, [x27, #16]
  41fd0c:	str	q0, [x27]
  41fd10:	add	x1, sp, #0x74
  41fd14:	mov	x0, x19
  41fd18:	add	w25, w25, #0x1
  41fd1c:	bl	42e19c <feof@plt+0x2b7cc>
  41fd20:	ldrb	w20, [x0, #4]
  41fd24:	ldr	w2, [sp, #116]
  41fd28:	mov	x26, x0
  41fd2c:	sub	w8, w20, #0x37
  41fd30:	cmp	w8, #0x6
  41fd34:	b.cc	41fd58 <feof@plt+0x1d388>  // b.lo, b.ul, b.last
  41fd38:	cmp	w20, #0x35
  41fd3c:	b.hi	420198 <feof@plt+0x1d7c8>  // b.pmore
  41fd40:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fd44:	add	x10, x10, #0x4e
  41fd48:	adr	x8, 41fd58 <feof@plt+0x1d388>
  41fd4c:	ldrh	w9, [x10, x20, lsl #1]
  41fd50:	add	x8, x8, x9, lsl #2
  41fd54:	br	x8
  41fd58:	tbz	w24, #0, 4213b4 <feof@plt+0x1e9e4>
  41fd5c:	sub	w8, w20, #0x25
  41fd60:	cmp	w8, #0x17
  41fd64:	stur	wzr, [x29, #-88]
  41fd68:	b.hi	421550 <feof@plt+0x1eb80>  // b.pmore
  41fd6c:	adr	x9, 41fd7c <feof@plt+0x1d3ac>
  41fd70:	ldrh	w10, [x23, x8, lsl #1]
  41fd74:	add	x9, x9, x10, lsl #2
  41fd78:	br	x9
  41fd7c:	sub	x2, x29, #0x28
  41fd80:	sub	x3, x29, #0x58
  41fd84:	mov	x0, x19
  41fd88:	mov	x1, x26
  41fd8c:	bl	417c08 <feof@plt+0x15238>
  41fd90:	ldur	w10, [x29, #-88]
  41fd94:	mov	x9, xzr
  41fd98:	mov	w8, w0
  41fd9c:	tbz	w0, #31, 41fcd4 <feof@plt+0x1d304>
  41fda0:	cbnz	w10, 41fcd4 <feof@plt+0x1d304>
  41fda4:	ldr	w9, [sp, #128]
  41fda8:	ldrh	w10, [sp, #132]
  41fdac:	orr	x8, x8, #0xffffffff00000000
  41fdb0:	str	w9, [sp, #120]
  41fdb4:	strh	w10, [sp, #124]
  41fdb8:	ldr	x10, [x19, #1208]
  41fdbc:	cmp	x10, #0x41
  41fdc0:	b.cc	41fddc <feof@plt+0x1d40c>  // b.lo, b.ul, b.last
  41fdc4:	sub	x9, x10, #0x40
  41fdc8:	cmp	x9, #0x3f
  41fdcc:	b.hi	41fef8 <feof@plt+0x1d528>  // b.pmore
  41fdd0:	lsl	x9, x21, x9
  41fdd4:	mvn	x9, x9
  41fdd8:	b	41fcc0 <feof@plt+0x1d2f0>
  41fddc:	cmp	x10, #0x40
  41fde0:	b.ne	41fcb4 <feof@plt+0x1d2e4>  // b.any
  41fde4:	mov	x9, xzr
  41fde8:	b	41fcc0 <feof@plt+0x1d2f0>
  41fdec:	mov	x0, x19
  41fdf0:	mov	x1, x26
  41fdf4:	mov	w3, w2
  41fdf8:	mov	x2, xzr
  41fdfc:	mov	w20, w3
  41fe00:	bl	41f01c <feof@plt+0x1c64c>
  41fe04:	mov	w24, w0
  41fe08:	stur	w0, [x29, #-40]
  41fe0c:	tbz	w0, #24, 41fe24 <feof@plt+0x1d454>
  41fe10:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fe14:	mov	w1, #0x3                   	// #3
  41fe18:	mov	x0, x19
  41fe1c:	add	x2, x2, #0x6fe
  41fe20:	bl	41de04 <feof@plt+0x1b434>
  41fe24:	and	w8, w24, #0xf
  41fe28:	cmp	w8, #0x1
  41fe2c:	b.eq	41ffa4 <feof@plt+0x1d5d4>  // b.none
  41fe30:	cmp	w8, #0x2
  41fe34:	b.ne	4200bc <feof@plt+0x1d6ec>  // b.any
  41fe38:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fe3c:	mov	w2, w20
  41fe40:	mov	w1, #0x3                   	// #3
  41fe44:	mov	x0, x19
  41fe48:	mov	w3, wzr
  41fe4c:	add	x4, x4, #0x72e
  41fe50:	b	4200b8 <feof@plt+0x1d6e8>
  41fe54:	ldrb	w8, [x19, #18]
  41fe58:	cbnz	w8, 4200fc <feof@plt+0x1d72c>
  41fe5c:	ldrb	w8, [x19, #1154]
  41fe60:	cbz	w8, 4200dc <feof@plt+0x1d70c>
  41fe64:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fe68:	mov	w1, #0x2                   	// #2
  41fe6c:	mov	x0, x19
  41fe70:	mov	w3, wzr
  41fe74:	add	x4, x4, #0x7ab
  41fe78:	bl	41e2c4 <feof@plt+0x1b8f4>
  41fe7c:	b	4200fc <feof@plt+0x1d72c>
  41fe80:	ldr	x8, [x26, #8]
  41fe84:	ldr	x9, [x19, #1248]
  41fe88:	cmp	x8, x9
  41fe8c:	b.eq	41ff00 <feof@plt+0x1d530>  // b.none
  41fe90:	ldr	x9, [x19, #1288]
  41fe94:	cmp	x8, x9
  41fe98:	b.eq	41ffc0 <feof@plt+0x1d5f0>  // b.none
  41fe9c:	ldr	x9, [x19, #1296]
  41fea0:	cmp	x8, x9
  41fea4:	b.eq	4200c8 <feof@plt+0x1d6f8>  // b.none
  41fea8:	ldrb	w9, [x19, #1120]
  41feac:	cbz	w9, 41fec8 <feof@plt+0x1d4f8>
  41feb0:	ldr	x11, [x19, #1256]
  41feb4:	cmp	x8, x11
  41feb8:	b.eq	420118 <feof@plt+0x1d748>  // b.none
  41febc:	ldr	x9, [x19, #1264]
  41fec0:	cmp	x8, x9
  41fec4:	b.eq	420118 <feof@plt+0x1d748>  // b.none
  41fec8:	ldrb	w9, [x19, #1149]
  41fecc:	cbz	w9, 4200bc <feof@plt+0x1d6ec>
  41fed0:	ldr	w9, [x19, #28]
  41fed4:	cbnz	w9, 4200bc <feof@plt+0x1d6ec>
  41fed8:	ldr	x5, [x8]
  41fedc:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  41fee0:	mov	w1, #0xd                   	// #13
  41fee4:	mov	x0, x19
  41fee8:	mov	w3, wzr
  41feec:	add	x4, x4, #0x787
  41fef0:	bl	41e3c0 <feof@plt+0x1b9f0>
  41fef4:	b	4200bc <feof@plt+0x1d6ec>
  41fef8:	mov	x9, #0xffffffffffffffff    	// #-1
  41fefc:	b	41fcc0 <feof@plt+0x1d2f0>
  41ff00:	ldrb	w8, [x19, #24]
  41ff04:	ldr	x20, [x19, #136]
  41ff08:	mov	x0, x19
  41ff0c:	add	w8, w8, #0x1
  41ff10:	strb	w8, [x19, #24]
  41ff14:	bl	42db34 <feof@plt+0x2b164>
  41ff18:	ldrb	w8, [x0, #4]
  41ff1c:	cmp	w8, #0x14
  41ff20:	b.ne	41ffd4 <feof@plt+0x1d604>  // b.any
  41ff24:	mov	x0, x19
  41ff28:	bl	42db34 <feof@plt+0x2b164>
  41ff2c:	ldrb	w8, [x0, #4]
  41ff30:	mov	x21, x0
  41ff34:	mov	w9, #0x1                   	// #1
  41ff38:	cmp	w8, #0x35
  41ff3c:	b.eq	41ffe4 <feof@plt+0x1d614>  // b.none
  41ff40:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  41ff44:	mov	w1, #0x3                   	// #3
  41ff48:	mov	x0, x19
  41ff4c:	add	x2, x2, #0x82b
  41ff50:	bl	41de04 <feof@plt+0x1b434>
  41ff54:	ldrb	w8, [x21, #6]
  41ff58:	tbz	w8, #4, 420140 <feof@plt+0x1d770>
  41ff5c:	sturh	wzr, [x29, #-34]
  41ff60:	ldrb	w8, [x21, #4]
  41ff64:	mov	x0, x19
  41ff68:	mov	x1, x21
  41ff6c:	sturb	w8, [x29, #-36]
  41ff70:	bl	428aa4 <feof@plt+0x260d4>
  41ff74:	mov	x21, x0
  41ff78:	sub	x1, x29, #0x28
  41ff7c:	mov	x0, x19
  41ff80:	bl	428aa4 <feof@plt+0x260d4>
  41ff84:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  41ff88:	mov	x4, x0
  41ff8c:	mov	w1, #0x3                   	// #3
  41ff90:	mov	x0, x19
  41ff94:	add	x2, x2, #0x855
  41ff98:	mov	x3, x21
  41ff9c:	bl	41de04 <feof@plt+0x1b434>
  41ffa0:	b	420140 <feof@plt+0x1d770>
  41ffa4:	tbnz	w24, #13, 4200a0 <feof@plt+0x1d6d0>
  41ffa8:	sub	x8, x29, #0x40
  41ffac:	mov	x0, x19
  41ffb0:	mov	x1, x26
  41ffb4:	mov	w2, w24
  41ffb8:	bl	41f93c <feof@plt+0x1cf6c>
  41ffbc:	b	41fcfc <feof@plt+0x1d32c>
  41ffc0:	sub	x8, x29, #0x40
  41ffc4:	mov	x0, x19
  41ffc8:	mov	w1, wzr
  41ffcc:	bl	42163c <feof@plt+0x1ec6c>
  41ffd0:	b	41fcfc <feof@plt+0x1d32c>
  41ffd4:	mov	x21, x0
  41ffd8:	mov	w9, wzr
  41ffdc:	cmp	w8, #0x35
  41ffe0:	b.ne	41ff40 <feof@plt+0x1d570>  // b.any
  41ffe4:	ldr	x21, [x21, #8]
  41ffe8:	cbz	w9, 420000 <feof@plt+0x1d630>
  41ffec:	mov	x0, x19
  41fff0:	bl	42db34 <feof@plt+0x2b164>
  41fff4:	ldrb	w8, [x0, #4]
  41fff8:	cmp	w8, #0x15
  41fffc:	b.ne	42012c <feof@plt+0x1d75c>  // b.any
  420000:	cbz	x21, 420140 <feof@plt+0x1d770>
  420004:	ldr	x8, [sp, #72]
  420008:	cmp	x20, x8
  42000c:	b.ne	42001c <feof@plt+0x1d64c>  // b.any
  420010:	ldr	x8, [x19, #136]
  420014:	cmp	x8, x20
  420018:	b.eq	420038 <feof@plt+0x1d668>  // b.none
  42001c:	ldrb	w8, [x19, #1150]
  420020:	cbz	w8, 420038 <feof@plt+0x1d668>
  420024:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  420028:	mov	w1, #0x18                  	// #24
  42002c:	mov	x0, x19
  420030:	add	x2, x2, #0x884
  420034:	bl	41e064 <feof@plt+0x1b694>
  420038:	ldrh	w8, [x21, #18]
  42003c:	and	w9, w8, #0x3
  420040:	cmp	w9, #0x2
  420044:	b.ne	42005c <feof@plt+0x1d68c>  // b.any
  420048:	ldr	x8, [x21, #24]
  42004c:	ldrb	w9, [x8, #19]
  420050:	orr	w9, w9, #0x20
  420054:	strb	w9, [x8, #19]
  420058:	ldrh	w8, [x21, #18]
  42005c:	tbnz	w8, #7, 42006c <feof@plt+0x1d69c>
  420060:	mov	x0, x19
  420064:	mov	x1, x21
  420068:	bl	42f224 <feof@plt+0x2c854>
  42006c:	ldrb	w8, [x19, #24]
  420070:	str	x21, [x19, #432]
  420074:	sub	w8, w8, #0x1
  420078:	strb	w8, [x19, #24]
  42007c:	sturh	wzr, [x29, #-48]
  420080:	str	xzr, [x22, #24]
  420084:	ldrh	w9, [x21, #18]
  420088:	mov	x8, xzr
  42008c:	tbz	w9, #1, 420158 <feof@plt+0x1d788>
  420090:	mov	w8, #0xffffffff            	// #-1
  420094:	eor	w8, w8, w9, lsr #8
  420098:	and	x8, x8, #0x1
  42009c:	b	420158 <feof@plt+0x1d788>
  4200a0:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4200a4:	mov	w2, w20
  4200a8:	mov	w1, #0x3                   	// #3
  4200ac:	mov	x0, x19
  4200b0:	mov	w3, wzr
  4200b4:	add	x4, x4, #0x75b
  4200b8:	bl	41e2c4 <feof@plt+0x1b8f4>
  4200bc:	mov	w10, wzr
  4200c0:	mov	x8, xzr
  4200c4:	b	420110 <feof@plt+0x1d740>
  4200c8:	sub	x8, x29, #0x40
  4200cc:	mov	w1, #0x1                   	// #1
  4200d0:	mov	x0, x19
  4200d4:	bl	42163c <feof@plt+0x1ec6c>
  4200d8:	b	41fcfc <feof@plt+0x1d32c>
  4200dc:	ldrb	w8, [x19, #1132]
  4200e0:	cbz	w8, 4200fc <feof@plt+0x1d72c>
  4200e4:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4200e8:	mov	w1, #0x1                   	// #1
  4200ec:	mov	x0, x19
  4200f0:	mov	w3, wzr
  4200f4:	add	x4, x4, #0x7ca
  4200f8:	bl	41e3c0 <feof@plt+0x1b9f0>
  4200fc:	sub	x1, x29, #0x28
  420100:	mov	x0, x19
  420104:	bl	41b6f8 <feof@plt+0x18d28>
  420108:	ldur	w8, [x29, #-40]
  42010c:	ldur	w10, [x29, #-88]
  420110:	mov	x9, xzr
  420114:	b	41fcd4 <feof@plt+0x1d304>
  420118:	cmp	x8, x11
  42011c:	mov	w10, wzr
  420120:	mov	x9, xzr
  420124:	cset	w8, eq  // eq = none
  420128:	b	41fcd4 <feof@plt+0x1d304>
  42012c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  420130:	mov	w1, #0x3                   	// #3
  420134:	mov	x0, x19
  420138:	add	x2, x2, #0x80f
  42013c:	bl	41de04 <feof@plt+0x1b434>
  420140:	ldrb	w9, [x19, #24]
  420144:	mov	x8, xzr
  420148:	sub	w9, w9, #0x1
  42014c:	strb	w9, [x19, #24]
  420150:	sturh	wzr, [x29, #-48]
  420154:	str	xzr, [x22, #24]
  420158:	str	x8, [x22, #32]
  42015c:	mov	x21, #0xffffffffffffffff    	// #-1
  420160:	b	41fcfc <feof@plt+0x1d32c>
  420164:	cmp	w25, #0x1
  420168:	cset	w8, eq  // eq = none
  42016c:	mov	w20, #0x1                   	// #1
  420170:	str	w8, [sp, #68]
  420174:	b	4201a0 <feof@plt+0x1d7d0>
  420178:	tst	w24, #0x1
  42017c:	mov	w8, #0x1b                  	// #27
  420180:	csel	w20, w8, w20, ne  // ne = any
  420184:	b	4201a0 <feof@plt+0x1d7d0>
  420188:	tst	w24, #0x1
  42018c:	mov	w8, #0x1c                  	// #28
  420190:	csel	w20, w8, w20, ne  // ne = any
  420194:	b	4201a0 <feof@plt+0x1d7d0>
  420198:	cmp	w20, #0x1b
  42019c:	b.cs	421408 <feof@plt+0x1ea38>  // b.hs, b.nlast
  4201a0:	mov	w8, #0x4002                	// #16386
  4201a4:	movk	w8, #0x1810, lsl #16
  4201a8:	mov	x27, x28
  4201ac:	lsr	x8, x8, x20
  4201b0:	str	w2, [sp, #84]
  4201b4:	tbnz	w8, #0, 4201e0 <feof@plt+0x1d810>
  4201b8:	tbz	w24, #0, 420214 <feof@plt+0x1d844>
  4201bc:	subs	w8, w20, #0x15
  4201c0:	b.eq	4201e8 <feof@plt+0x1d818>  // b.none
  4201c4:	ldr	w2, [sp, #84]
  4201c8:	cmp	w20, #0x16
  4201cc:	b.ne	4201fc <feof@plt+0x1d82c>  // b.any
  4201d0:	ldr	w9, [x27, #36]
  4201d4:	cmp	w9, #0x16
  4201d8:	b.ne	420200 <feof@plt+0x1d830>  // b.any
  4201dc:	b	421508 <feof@plt+0x1eb38>
  4201e0:	tbnz	w24, #0, 420214 <feof@plt+0x1d844>
  4201e4:	b	421488 <feof@plt+0x1eab8>
  4201e8:	ldr	w9, [x27, #36]
  4201ec:	ldr	w2, [sp, #84]
  4201f0:	cmp	w9, #0x14
  4201f4:	b.ne	420200 <feof@plt+0x1d830>  // b.any
  4201f8:	b	421534 <feof@plt+0x1eb64>
  4201fc:	ldr	w9, [x27, #36]
  420200:	orr	w9, w9, #0x2
  420204:	cmp	w9, #0x16
  420208:	b.ne	4214b8 <feof@plt+0x1eae8>  // b.any
  42020c:	cmp	w8, #0x2
  420210:	b.cs	4214d4 <feof@plt+0x1eb04>  // b.hs, b.nlast
  420214:	mov	x21, x27
  420218:	ldr	w3, [x21, #36]!
  42021c:	sub	w8, w3, #0x1
  420220:	cmp	w8, #0x1b
  420224:	b.ls	420244 <feof@plt+0x1d874>  // b.plast
  420228:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  42022c:	mov	w1, #0x4                   	// #4
  420230:	mov	x0, x19
  420234:	add	x2, x2, #0x906
  420238:	bl	41de04 <feof@plt+0x1b434>
  42023c:	mov	x27, xzr
  420240:	b	42024c <feof@plt+0x1d87c>
  420244:	cmp	w20, #0x14
  420248:	b.ne	420284 <feof@plt+0x1d8b4>  // b.any
  42024c:	ldr	w2, [sp, #84]
  420250:	mov	x21, #0xffffffffffffffff    	// #-1
  420254:	cbz	x27, 4213e4 <feof@plt+0x1ea14>
  420258:	cmp	w20, #0x16
  42025c:	b.eq	421428 <feof@plt+0x1ea58>  // b.none
  420260:	sub	w8, w20, #0xf
  420264:	cmp	w8, #0x6
  420268:	b.hi	421368 <feof@plt+0x1e998>  // b.pmore
  42026c:	adrp	x11, 45c000 <_obstack_memory_used@@Base+0xba68>
  420270:	add	x11, x11, #0x122
  420274:	adr	x9, 41fca8 <feof@plt+0x1d2d8>
  420278:	ldrh	w10, [x11, x8, lsl #1]
  42027c:	add	x9, x9, x10, lsl #2
  420280:	br	x9
  420284:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  420288:	lsl	x8, x20, #1
  42028c:	add	x10, x10, #0x130
  420290:	lsl	x9, x3, #1
  420294:	ldrb	w8, [x10, x8]
  420298:	ldrb	w9, [x10, x9]
  42029c:	mov	w10, #0xbffc                	// #49148
  4202a0:	movk	w10, #0x78d, lsl #16
  4202a4:	lsr	x10, x10, x20
  4202a8:	ldr	w2, [sp, #84]
  4202ac:	and	w10, w10, #0x1
  4202b0:	sub	w28, w8, w10
  4202b4:	cmp	w28, w9
  4202b8:	b.cs	421260 <feof@plt+0x1e890>  // b.hs, b.nlast
  4202bc:	str	w28, [sp, #52]
  4202c0:	str	w25, [sp, #32]
  4202c4:	b	4202f8 <feof@plt+0x1d928>
  4202c8:	ldr	w3, [x27, #-4]!
  4202cc:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  4202d0:	add	x9, x9, #0x130
  4202d4:	ldr	w2, [sp, #84]
  4202d8:	lsl	x8, x3, #1
  4202dc:	ldrb	w8, [x9, x8]
  4202e0:	mov	x21, x27
  4202e4:	mov	x27, x23
  4202e8:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0xba68>
  4202ec:	cmp	w28, w8
  4202f0:	add	x23, x23, #0xba
  4202f4:	b.cs	421260 <feof@plt+0x1e890>  // b.hs, b.nlast
  4202f8:	ldrb	w8, [x19, #1141]
  4202fc:	cbz	w8, 4203e0 <feof@plt+0x1da10>
  420300:	mov	w8, #0xffc                 	// #4092
  420304:	movk	w8, #0x604, lsl #16
  420308:	lsr	x8, x8, x3
  42030c:	tbz	w8, #0, 4203e0 <feof@plt+0x1da10>
  420310:	ldrb	w9, [x27, #24]
  420314:	ldurb	w8, [x27, #-16]
  420318:	cmp	w9, w8
  42031c:	b.eq	4203e0 <feof@plt+0x1da10>  // b.none
  420320:	ldr	x8, [x19, #1208]
  420324:	cmp	x8, #0x40
  420328:	cbz	w9, 420384 <feof@plt+0x1d9b4>
  42032c:	mov	x9, #0xffffffffffffffe8    	// #-24
  420330:	mov	x10, #0xffffffffffffffe0    	// #-32
  420334:	csel	x9, x10, x9, hi  // hi = pmore
  420338:	ldr	x9, [x27, x9]
  42033c:	mov	x10, #0xffffffffffffffbf    	// #-65
  420340:	csinv	x10, x10, xzr, hi  // hi = pmore
  420344:	add	x8, x8, x10
  420348:	lsr	x8, x9, x8
  42034c:	tbz	w8, #0, 4203e0 <feof@plt+0x1da10>
  420350:	ldur	w8, [x27, #-8]
  420354:	ldr	x1, [x27]
  420358:	mov	x0, x19
  42035c:	str	w8, [sp, #88]
  420360:	bl	428aa4 <feof@plt+0x260d4>
  420364:	ldr	w2, [sp, #88]
  420368:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  42036c:	mov	x5, x0
  420370:	mov	x0, x19
  420374:	mov	w1, wzr
  420378:	mov	w3, wzr
  42037c:	add	x4, x4, #0x999
  420380:	b	4203d8 <feof@plt+0x1da08>
  420384:	mov	w9, #0x10                  	// #16
  420388:	mov	w10, #0x8                   	// #8
  42038c:	csel	x9, x10, x9, hi  // hi = pmore
  420390:	ldr	x9, [x27, x9]
  420394:	mov	x10, #0xffffffffffffffbf    	// #-65
  420398:	csinv	x10, x10, xzr, hi  // hi = pmore
  42039c:	add	x8, x8, x10
  4203a0:	lsr	x8, x9, x8
  4203a4:	tbz	w8, #0, 4203e0 <feof@plt+0x1da10>
  4203a8:	ldr	w8, [x27, #32]
  4203ac:	ldr	x1, [x27]
  4203b0:	mov	x0, x19
  4203b4:	str	w8, [sp, #88]
  4203b8:	bl	428aa4 <feof@plt+0x260d4>
  4203bc:	ldr	w2, [sp, #88]
  4203c0:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4203c4:	mov	x5, x0
  4203c8:	mov	x0, x19
  4203cc:	mov	w1, wzr
  4203d0:	mov	w3, wzr
  4203d4:	add	x4, x4, #0x9cd
  4203d8:	bl	41e2c4 <feof@plt+0x1b8f4>
  4203dc:	ldr	w2, [sp, #84]
  4203e0:	ldr	w8, [x21]
  4203e4:	sub	w9, w8, #0x1
  4203e8:	cmp	w9, #0x1b
  4203ec:	b.hi	4212b0 <feof@plt+0x1e8e0>  // b.pmore
  4203f0:	adrp	x12, 45c000 <_obstack_memory_used@@Base+0xba68>
  4203f4:	add	x12, x12, #0xea
  4203f8:	adr	x10, 420408 <feof@plt+0x1da38>
  4203fc:	ldrh	w11, [x12, x9, lsl #1]
  420400:	add	x10, x10, x11, lsl #2
  420404:	br	x10
  420408:	ldur	x8, [x27, #-16]
  42040c:	ldur	q0, [x27, #-32]
  420410:	sub	x1, x29, #0x80
  420414:	sub	x2, x29, #0xa0
  420418:	stur	x8, [x29, #-112]
  42041c:	stur	q0, [x29, #-128]
  420420:	ldr	x8, [x27, #24]
  420424:	ldur	q0, [x27, #8]
  420428:	mov	x0, x19
  42042c:	stur	x8, [x29, #-144]
  420430:	stur	q0, [x29, #-160]
  420434:	ldr	w3, [x21]
  420438:	sub	x8, x29, #0x28
  42043c:	bl	4217c8 <feof@plt+0x1edf8>
  420440:	ldr	x8, [x22, #64]
  420444:	ldr	q0, [x22, #48]
  420448:	stur	x8, [x27, #-16]
  42044c:	stur	q0, [x27, #-32]
  420450:	b	421218 <feof@plt+0x1e848>
  420454:	ldrh	w9, [x27, #30]
  420458:	ldur	w21, [x27, #26]
  42045c:	ldp	x23, x28, [x27, #8]
  420460:	str	x27, [sp, #56]
  420464:	ldrb	w27, [x27, #24]
  420468:	cmp	w8, #0xe
  42046c:	bfi	x21, x9, #32, #32
  420470:	b.eq	4206b0 <feof@plt+0x1dce0>  // b.none
  420474:	cmp	w8, #0x1c
  420478:	b.eq	4206e4 <feof@plt+0x1dd14>  // b.none
  42047c:	cmp	w8, #0x1b
  420480:	b.ne	42071c <feof@plt+0x1dd4c>  // b.any
  420484:	ldrb	w8, [x19, #1138]
  420488:	cbz	w8, 4209e0 <feof@plt+0x1e010>
  42048c:	ldr	w8, [x19, #28]
  420490:	cbz	w8, 420a08 <feof@plt+0x1e038>
  420494:	mov	w8, wzr
  420498:	b	4209e0 <feof@plt+0x1e010>
  42049c:	mov	x8, x27
  4204a0:	ldr	w10, [x8, #-14]!
  4204a4:	ldrh	w12, [x8, #4]
  4204a8:	ldur	x9, [x8, #-18]
  4204ac:	ldur	x11, [x8, #-10]
  4204b0:	ldurb	w14, [x8, #-2]
  4204b4:	str	w10, [sp, #168]
  4204b8:	strh	w12, [sp, #172]
  4204bc:	ldrb	w15, [x8, #38]
  4204c0:	ldur	x10, [x8, #22]
  4204c4:	ldur	x12, [x8, #30]
  4204c8:	ldr	w13, [x21]
  4204cc:	orr	w14, w15, w14
  4204d0:	cbnz	w14, 4207e0 <feof@plt+0x1de10>
  4204d4:	ldr	x14, [x19, #1208]
  4204d8:	subs	x15, x14, #0x41
  4204dc:	b.cc	4207b4 <feof@plt+0x1dde4>  // b.lo, b.ul, b.last
  4204e0:	mov	w14, #0x1                   	// #1
  4204e4:	lsl	x15, x14, x15
  4204e8:	and	x14, x15, x9
  4204ec:	and	x15, x15, x10
  4204f0:	b	4207c8 <feof@plt+0x1ddf8>
  4204f4:	mov	x8, x27
  4204f8:	ldr	w9, [x8, #-14]!
  4204fc:	ldrh	w12, [x8, #4]
  420500:	ldurb	w13, [x8, #-2]
  420504:	ldur	x10, [x8, #-18]
  420508:	ldur	x11, [x8, #-10]
  42050c:	str	w9, [sp, #152]
  420510:	strh	w12, [sp, #156]
  420514:	ldrb	w9, [x8, #38]
  420518:	ldr	w14, [x21]
  42051c:	cmp	w13, #0x0
  420520:	ldur	x12, [x8, #22]
  420524:	ldur	x13, [x8, #30]
  420528:	csinc	w9, w9, wzr, eq  // eq = none
  42052c:	cmp	w14, #0xa
  420530:	b.eq	420738 <feof@plt+0x1dd68>  // b.none
  420534:	cmp	w14, #0x9
  420538:	b.ne	420744 <feof@plt+0x1dd74>  // b.any
  42053c:	and	x11, x13, x11
  420540:	and	x10, x12, x10
  420544:	b	42074c <feof@plt+0x1dd7c>
  420548:	mov	x23, x27
  42054c:	ldr	w8, [x23, #-14]!
  420550:	ldrh	w9, [x23, #4]
  420554:	ldur	x4, [x23, #-18]
  420558:	ldur	x16, [x23, #-10]
  42055c:	ldurb	w3, [x23, #-2]
  420560:	ldurb	w17, [x23, #-1]
  420564:	str	w8, [sp, #136]
  420568:	strh	w9, [sp, #140]
  42056c:	ldur	x10, [x23, #22]
  420570:	ldur	x11, [x23, #30]
  420574:	ldrh	w9, [x23, #44]
  420578:	ldr	w8, [x23, #40]
  42057c:	ldr	w1, [x21]
  420580:	ldur	w2, [x23, #46]
  420584:	cbz	w3, 42085c <feof@plt+0x1de8c>
  420588:	ldr	x0, [x19, #1208]
  42058c:	b	42086c <feof@plt+0x1de9c>
  420590:	ldurh	w8, [x27, #-10]
  420594:	ldur	w9, [x27, #-14]
  420598:	ldp	x10, x11, [x27, #-32]
  42059c:	strh	w8, [sp, #164]
  4205a0:	str	w9, [sp, #160]
  4205a4:	ldp	x12, x13, [x27, #8]
  4205a8:	ldr	w14, [x21]
  4205ac:	sturh	w8, [x29, #-36]
  4205b0:	stur	w9, [x29, #-40]
  4205b4:	cmp	x11, x13
  4205b8:	cset	w8, eq  // eq = none
  4205bc:	cmp	x10, x12
  4205c0:	cset	w9, eq  // eq = none
  4205c4:	cmp	w14, #0x18
  4205c8:	and	w8, w9, w8
  4205cc:	cset	w9, eq  // eq = none
  4205d0:	eor	w8, w9, w8
  4205d4:	sturh	wzr, [x27, #-16]
  4205d8:	stp	xzr, x8, [x27, #-32]
  4205dc:	ldurh	w8, [x29, #-36]
  4205e0:	ldur	w9, [x29, #-40]
  4205e4:	sturh	w8, [x27, #-10]
  4205e8:	stur	w9, [x27, #-14]
  4205ec:	b	421218 <feof@plt+0x1e848>
  4205f0:	ldp	x12, x14, [x27, #-32]
  4205f4:	ldurb	w8, [x27, #-16]
  4205f8:	ldp	x11, x13, [x27, #8]
  4205fc:	cbz	w8, 4208f8 <feof@plt+0x1df28>
  420600:	ldr	x8, [x19, #1208]
  420604:	mov	w9, wzr
  420608:	mov	w10, #0x1                   	// #1
  42060c:	mov	x6, #0xffffffffffffffff    	// #-1
  420610:	b	421004 <feof@plt+0x1e634>
  420614:	ldp	x9, x8, [x27, #-32]
  420618:	orr	x9, x9, x8
  42061c:	sub	x8, x27, #0x28
  420620:	cbnz	x9, 42076c <feof@plt+0x1dd9c>
  420624:	ldr	w10, [x19, #28]
  420628:	sub	w10, w10, #0x1
  42062c:	str	w10, [x19, #28]
  420630:	b	42077c <feof@plt+0x1ddac>
  420634:	ldp	x9, x8, [x27, #-32]
  420638:	orr	x9, x9, x8
  42063c:	sub	x8, x27, #0x28
  420640:	cbz	x9, 42076c <feof@plt+0x1dd9c>
  420644:	ldr	w9, [x19, #28]
  420648:	sub	w9, w9, #0x1
  42064c:	str	w9, [x19, #28]
  420650:	mov	w9, #0x1                   	// #1
  420654:	b	42077c <feof@plt+0x1ddac>
  420658:	mov	x8, x27
  42065c:	ldr	x9, [x8, #-72]!
  420660:	ldr	x10, [x8, #8]
  420664:	orr	x9, x9, x10
  420668:	cbz	x9, 42067c <feof@plt+0x1dcac>
  42066c:	ldr	w9, [x19, #28]
  420670:	sub	w9, w9, #0x1
  420674:	str	w9, [x19, #28]
  420678:	mov	x9, #0xffffffffffffffff    	// #-1
  42067c:	mov	w10, #0x28                  	// #40
  420680:	madd	x9, x9, x10, x27
  420684:	ldr	x10, [x9, #24]
  420688:	ldur	q0, [x9, #8]
  42068c:	str	x10, [x8, #16]
  420690:	str	q0, [x8], #-8
  420694:	ldr	w9, [x9, #32]
  420698:	ldurb	w10, [x27, #-16]
  42069c:	stur	w9, [x27, #-48]
  4206a0:	cbz	w10, 420914 <feof@plt+0x1df44>
  4206a4:	mov	w9, #0x1                   	// #1
  4206a8:	sturb	w9, [x27, #-56]
  4206ac:	b	42078c <feof@plt+0x1ddbc>
  4206b0:	ldr	x9, [x19, #1208]
  4206b4:	mvn	x28, x28
  4206b8:	cmp	x9, #0x41
  4206bc:	b.cc	4208a4 <feof@plt+0x1ded4>  // b.lo, b.ul, b.last
  4206c0:	sub	x9, x9, #0x40
  4206c4:	cmp	x9, #0x3f
  4206c8:	mvn	x23, x23
  4206cc:	mov	w8, wzr
  4206d0:	b.hi	4209e0 <feof@plt+0x1e010>  // b.pmore
  4206d4:	mov	x10, #0xffffffffffffffff    	// #-1
  4206d8:	lsl	x9, x10, x9
  4206dc:	bic	x23, x23, x9
  4206e0:	b	4209e0 <feof@plt+0x1e010>
  4206e4:	ldr	x8, [x19, #1208]
  4206e8:	neg	x9, x23
  4206ec:	cmp	x28, #0x0
  4206f0:	csinv	x10, x9, x23, eq  // eq = none
  4206f4:	cmp	x8, #0x41
  4206f8:	neg	x9, x28
  4206fc:	b.cc	4208b8 <feof@plt+0x1dee8>  // b.lo, b.ul, b.last
  420700:	sub	x8, x8, #0x40
  420704:	cmp	x8, #0x3f
  420708:	b.hi	4209a8 <feof@plt+0x1dfd8>  // b.pmore
  42070c:	mov	x11, #0xffffffffffffffff    	// #-1
  420710:	lsl	x8, x11, x8
  420714:	bic	x10, x10, x8
  420718:	b	4209a8 <feof@plt+0x1dfd8>
  42071c:	orr	x9, x28, x23
  420720:	cmp	x9, #0x0
  420724:	mov	w27, wzr
  420728:	mov	w8, wzr
  42072c:	cset	w28, eq  // eq = none
  420730:	mov	x23, xzr
  420734:	b	4209e0 <feof@plt+0x1e010>
  420738:	orr	x11, x13, x11
  42073c:	orr	x10, x12, x10
  420740:	b	42074c <feof@plt+0x1dd7c>
  420744:	eor	x11, x13, x11
  420748:	eor	x10, x12, x10
  42074c:	ldr	w12, [sp, #152]
  420750:	ldrh	w13, [sp, #156]
  420754:	stur	w12, [x29, #-40]
  420758:	sturh	w13, [x29, #-36]
  42075c:	stp	x10, x11, [x27, #-32]
  420760:	sturb	w9, [x27, #-16]
  420764:	sturb	wzr, [x27, #-15]
  420768:	b	4208e4 <feof@plt+0x1df14>
  42076c:	ldp	x10, x9, [x27, #8]
  420770:	orr	x9, x10, x9
  420774:	cmp	x9, #0x0
  420778:	cset	w9, ne  // ne = any
  42077c:	ldr	w10, [x27, #32]
  420780:	stp	xzr, x9, [x27, #-32]
  420784:	sturh	wzr, [x27, #-16]
  420788:	stur	w10, [x27, #-8]
  42078c:	mov	x21, x8
  420790:	ldr	w3, [x21, #36]!
  420794:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  420798:	mov	x27, x8
  42079c:	add	x9, x9, #0x130
  4207a0:	lsl	x8, x3, #1
  4207a4:	ldrb	w8, [x9, x8]
  4207a8:	cmp	w28, w8
  4207ac:	b.cc	4202f8 <feof@plt+0x1d928>  // b.lo, b.ul, b.last
  4207b0:	b	421260 <feof@plt+0x1e890>
  4207b4:	sub	x14, x14, #0x1
  4207b8:	mov	w15, #0x1                   	// #1
  4207bc:	lsl	x15, x15, x14
  4207c0:	and	x14, x15, x11
  4207c4:	and	x15, x15, x12
  4207c8:	cmp	x14, #0x0
  4207cc:	cset	w14, eq  // eq = none
  4207d0:	cmp	x15, #0x0
  4207d4:	cset	w15, eq  // eq = none
  4207d8:	eor	w15, w14, w15
  4207dc:	tbnz	w15, #0, 4207ec <feof@plt+0x1de1c>
  4207e0:	cmp	x9, x10
  4207e4:	b.ls	42080c <feof@plt+0x1de3c>  // b.plast
  4207e8:	mov	w14, #0x1                   	// #1
  4207ec:	cmp	w13, #0x2
  4207f0:	b.eq	420824 <feof@plt+0x1de54>  // b.none
  4207f4:	cmp	w13, #0x19
  4207f8:	b.eq	4208cc <feof@plt+0x1defc>  // b.none
  4207fc:	cmp	w13, #0x3
  420800:	b.ne	420840 <feof@plt+0x1de70>  // b.any
  420804:	eor	w14, w14, #0x1
  420808:	b	4208cc <feof@plt+0x1defc>
  42080c:	cset	w14, eq  // eq = none
  420810:	cmp	x11, x12
  420814:	cset	w15, cs  // cs = hs, nlast
  420818:	and	w14, w14, w15
  42081c:	cmp	w13, #0x2
  420820:	b.ne	4207f4 <feof@plt+0x1de24>  // b.any
  420824:	cbz	w14, 4208cc <feof@plt+0x1defc>
  420828:	cmp	x11, x12
  42082c:	cset	w11, ne  // ne = any
  420830:	cmp	x9, x10
  420834:	cset	w9, ne  // ne = any
  420838:	orr	w14, w9, w11
  42083c:	b	4208cc <feof@plt+0x1defc>
  420840:	cbz	w14, 4208c8 <feof@plt+0x1def8>
  420844:	cmp	x11, x12
  420848:	cset	w11, eq  // eq = none
  42084c:	cmp	x9, x10
  420850:	cset	w9, eq  // eq = none
  420854:	and	w14, w9, w11
  420858:	b	4208cc <feof@plt+0x1defc>
  42085c:	ldrb	w12, [x23, #38]
  420860:	ldr	x0, [x19, #1208]
  420864:	mov	x18, #0xffffffffffffffff    	// #-1
  420868:	cbz	w12, 420928 <feof@plt+0x1df58>
  42086c:	str	wzr, [sp, #8]
  420870:	mov	w15, wzr
  420874:	mov	w14, #0x1                   	// #1
  420878:	cbz	x10, 420b78 <feof@plt+0x1e1a8>
  42087c:	sub	x12, x0, #0x41
  420880:	mov	w13, #0x1                   	// #1
  420884:	lsl	x13, x13, x12
  420888:	mov	x12, x0
  42088c:	sub	x12, x12, #0x1
  420890:	tst	x13, x10
  420894:	lsr	x13, x13, #1
  420898:	b.eq	42088c <feof@plt+0x1debc>  // b.none
  42089c:	str	x27, [sp, #56]
  4208a0:	b	420bb4 <feof@plt+0x1e1e4>
  4208a4:	cmp	x9, #0x40
  4208a8:	b.ne	420980 <feof@plt+0x1dfb0>  // b.any
  4208ac:	mov	x23, xzr
  4208b0:	mov	w8, wzr
  4208b4:	b	4209e0 <feof@plt+0x1e010>
  4208b8:	cmp	x8, #0x40
  4208bc:	b.ne	420998 <feof@plt+0x1dfc8>  // b.any
  4208c0:	mov	x10, xzr
  4208c4:	b	4209a8 <feof@plt+0x1dfd8>
  4208c8:	mov	w14, #0x1                   	// #1
  4208cc:	ldr	w9, [sp, #168]
  4208d0:	ldrh	w10, [sp, #172]
  4208d4:	stur	w9, [x29, #-40]
  4208d8:	sturh	w10, [x29, #-36]
  4208dc:	stp	xzr, x14, [x27, #-32]
  4208e0:	sturh	wzr, [x27, #-16]
  4208e4:	ldurh	w9, [x29, #-36]
  4208e8:	ldur	w10, [x29, #-40]
  4208ec:	strh	w9, [x8, #4]
  4208f0:	str	w10, [x8]
  4208f4:	b	421218 <feof@plt+0x1e848>
  4208f8:	ldrb	w9, [x27, #24]
  4208fc:	ldr	x8, [x19, #1208]
  420900:	mov	x6, #0xffffffffffffffff    	// #-1
  420904:	cbz	w9, 420a24 <feof@plt+0x1e054>
  420908:	mov	w9, wzr
  42090c:	mov	w10, #0x1                   	// #1
  420910:	b	421004 <feof@plt+0x1e634>
  420914:	ldrb	w9, [x27, #24]
  420918:	cmp	w9, #0x0
  42091c:	cset	w9, ne  // ne = any
  420920:	sturb	w9, [x27, #-56]
  420924:	b	42078c <feof@plt+0x1ddbc>
  420928:	subs	x14, x0, #0x40
  42092c:	mov	x12, #0xffffffffffffffbf    	// #-65
  420930:	csinv	x12, x12, xzr, hi  // hi = pmore
  420934:	csel	x13, x4, x16, hi  // hi = pmore
  420938:	add	x12, x0, x12
  42093c:	lsr	x12, x13, x12
  420940:	tbz	w12, #0, 420a70 <feof@plt+0x1e0a0>
  420944:	ldr	w12, [sp, #136]
  420948:	ldrh	w15, [sp, #140]
  42094c:	neg	x13, x4
  420950:	cmp	x16, #0x0
  420954:	csinv	x13, x13, x4, eq  // eq = none
  420958:	cmp	x0, #0x41
  42095c:	str	w12, [sp, #128]
  420960:	neg	x12, x16
  420964:	strh	w15, [sp, #132]
  420968:	b.cc	420a78 <feof@plt+0x1e0a8>  // b.lo, b.ul, b.last
  42096c:	cmp	x14, #0x3f
  420970:	b.hi	420ab4 <feof@plt+0x1e0e4>  // b.pmore
  420974:	lsl	x14, x18, x14
  420978:	bic	x13, x13, x14
  42097c:	b	420ab4 <feof@plt+0x1e0e4>
  420980:	mov	x10, #0xffffffffffffffff    	// #-1
  420984:	lsl	x9, x10, x9
  420988:	mov	x23, xzr
  42098c:	mov	w8, wzr
  420990:	bic	x28, x28, x9
  420994:	b	4209e0 <feof@plt+0x1e010>
  420998:	mov	x11, #0xffffffffffffffff    	// #-1
  42099c:	lsl	x8, x11, x8
  4209a0:	mov	x10, xzr
  4209a4:	bic	x9, x9, x8
  4209a8:	cmp	w27, #0x0
  4209ac:	cset	w11, eq  // eq = none
  4209b0:	cmp	x9, x28
  4209b4:	orr	x8, x10, x9
  4209b8:	cset	w12, eq  // eq = none
  4209bc:	cmp	x10, x23
  4209c0:	and	w11, w11, w12
  4209c4:	cset	w12, eq  // eq = none
  4209c8:	cmp	x8, #0x0
  4209cc:	and	w8, w12, w11
  4209d0:	cset	w11, ne  // ne = any
  4209d4:	and	w8, w11, w8
  4209d8:	mov	x23, x10
  4209dc:	mov	x28, x9
  4209e0:	ldr	x9, [sp, #56]
  4209e4:	stp	x23, x28, [x9, #-32]
  4209e8:	ldr	w28, [sp, #52]
  4209ec:	sturb	w8, [x9, #-15]
  4209f0:	lsr	x8, x21, #32
  4209f4:	sturb	w27, [x9, #-16]
  4209f8:	mov	x27, x9
  4209fc:	stur	w21, [x9, #-14]
  420a00:	sturh	w8, [x9, #-10]
  420a04:	b	421218 <feof@plt+0x1e848>
  420a08:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  420a0c:	mov	w1, #0x6                   	// #6
  420a10:	mov	x0, x19
  420a14:	add	x2, x2, #0xa02
  420a18:	bl	41df34 <feof@plt+0x1b564>
  420a1c:	mov	w8, wzr
  420a20:	b	4209e0 <feof@plt+0x1e010>
  420a24:	subs	x15, x8, #0x40
  420a28:	mov	x9, #0xffffffffffffffbf    	// #-65
  420a2c:	csinv	x9, x9, xzr, hi  // hi = pmore
  420a30:	csel	x10, x12, x14, hi  // hi = pmore
  420a34:	add	x9, x8, x9
  420a38:	lsr	x9, x10, x9
  420a3c:	tbz	w9, #0, 420a88 <feof@plt+0x1e0b8>
  420a40:	neg	x9, x12
  420a44:	cmp	x14, #0x0
  420a48:	csinv	x12, x9, x12, eq  // eq = none
  420a4c:	cmp	x8, #0x41
  420a50:	neg	x14, x14
  420a54:	b.cc	420a98 <feof@plt+0x1e0c8>  // b.lo, b.ul, b.last
  420a58:	cmp	x15, #0x3f
  420a5c:	b.hi	420f8c <feof@plt+0x1e5bc>  // b.pmore
  420a60:	lsl	x10, x6, x15
  420a64:	mov	w9, #0x1                   	// #1
  420a68:	bic	x12, x12, x10
  420a6c:	b	420f90 <feof@plt+0x1e5c0>
  420a70:	mov	w15, wzr
  420a74:	b	420af4 <feof@plt+0x1e124>
  420a78:	cmp	x0, #0x40
  420a7c:	b.ne	420aa8 <feof@plt+0x1e0d8>  // b.any
  420a80:	mov	x13, xzr
  420a84:	b	420ab4 <feof@plt+0x1e0e4>
  420a88:	cmp	x8, #0x40
  420a8c:	mov	w9, wzr
  420a90:	b.hi	420f90 <feof@plt+0x1e5c0>  // b.pmore
  420a94:	b	420fac <feof@plt+0x1e5dc>
  420a98:	cmp	x8, #0x40
  420a9c:	b.ne	420f9c <feof@plt+0x1e5cc>  // b.any
  420aa0:	mov	x12, xzr
  420aa4:	b	420fa8 <feof@plt+0x1e5d8>
  420aa8:	lsl	x14, x18, x0
  420aac:	mov	x13, xzr
  420ab0:	bic	x12, x12, x14
  420ab4:	cmp	x12, x16
  420ab8:	orr	x14, x13, x12
  420abc:	ldr	w15, [sp, #128]
  420ac0:	cset	w16, eq  // eq = none
  420ac4:	cmp	x13, x4
  420ac8:	cset	w17, eq  // eq = none
  420acc:	cmp	x14, #0x0
  420ad0:	ldrh	w14, [sp, #132]
  420ad4:	and	w16, w16, w17
  420ad8:	cset	w17, ne  // ne = any
  420adc:	and	w17, w17, w16
  420ae0:	str	w15, [sp, #136]
  420ae4:	mov	w15, #0x1                   	// #1
  420ae8:	mov	x16, x12
  420aec:	mov	x4, x13
  420af0:	strh	w14, [sp, #140]
  420af4:	subs	x12, x0, #0x40
  420af8:	mov	x13, #0xffffffffffffffbf    	// #-65
  420afc:	csinv	x13, x13, xzr, hi  // hi = pmore
  420b00:	csel	x14, x10, x11, hi  // hi = pmore
  420b04:	add	x13, x0, x13
  420b08:	lsr	x13, x14, x13
  420b0c:	tbz	w13, #0, 420b48 <feof@plt+0x1e178>
  420b10:	neg	x13, x10
  420b14:	cmp	x11, #0x0
  420b18:	eor	w14, w15, #0x1
  420b1c:	csinv	x10, x13, x10, eq  // eq = none
  420b20:	cmp	x0, #0x41
  420b24:	neg	x11, x11
  420b28:	str	w14, [sp, #8]
  420b2c:	b.cc	420b54 <feof@plt+0x1e184>  // b.lo, b.ul, b.last
  420b30:	cmp	x12, #0x3f
  420b34:	b.hi	420b64 <feof@plt+0x1e194>  // b.pmore
  420b38:	lsl	x12, x18, x12
  420b3c:	mov	w14, wzr
  420b40:	bic	x10, x10, x12
  420b44:	b	420878 <feof@plt+0x1dea8>
  420b48:	mov	w14, wzr
  420b4c:	str	w15, [sp, #8]
  420b50:	b	420878 <feof@plt+0x1dea8>
  420b54:	cmp	x0, #0x40
  420b58:	b.ne	420b6c <feof@plt+0x1e19c>  // b.any
  420b5c:	mov	w14, wzr
  420b60:	b	420b78 <feof@plt+0x1e1a8>
  420b64:	mov	w14, wzr
  420b68:	b	420878 <feof@plt+0x1dea8>
  420b6c:	lsl	x10, x18, x0
  420b70:	mov	w14, wzr
  420b74:	bic	x11, x11, x10
  420b78:	cbz	x11, 420c50 <feof@plt+0x1e280>
  420b7c:	cmp	x0, #0x40
  420b80:	mov	x10, #0xffffffffffffffbf    	// #-65
  420b84:	csinv	x10, x10, xzr, hi  // hi = pmore
  420b88:	add	x12, x10, x0
  420b8c:	mov	w10, #0x1                   	// #1
  420b90:	lsl	x10, x10, x12
  420b94:	tst	x10, x11
  420b98:	str	x27, [sp, #56]
  420b9c:	b.ne	420bb0 <feof@plt+0x1e1e0>  // b.any
  420ba0:	lsr	x10, x10, #1
  420ba4:	tst	x10, x11
  420ba8:	sub	x12, x12, #0x1
  420bac:	b.eq	420ba0 <feof@plt+0x1e1d0>  // b.none
  420bb0:	mov	x10, xzr
  420bb4:	bfi	x8, x9, #32, #32
  420bb8:	mvn	x9, x12
  420bbc:	adds	x27, x0, x9
  420bc0:	mov	w9, #0x1                   	// #1
  420bc4:	str	w15, [sp, #12]
  420bc8:	str	w1, [sp, #28]
  420bcc:	str	w14, [sp, #36]
  420bd0:	str	x23, [sp, #16]
  420bd4:	str	x0, [sp, #40]
  420bd8:	str	x9, [sp, #88]
  420bdc:	b.cc	420c34 <feof@plt+0x1e264>  // b.lo, b.ul, b.last
  420be0:	sub	x9, x27, #0x40
  420be4:	cmp	x27, #0x3f
  420be8:	csel	x21, xzr, x11, hi  // hi = pmore
  420bec:	csel	x9, x9, x27, hi  // hi = pmore
  420bf0:	csel	x23, x11, x10, hi  // hi = pmore
  420bf4:	cbz	x9, 420c0c <feof@plt+0x1e23c>
  420bf8:	neg	x11, x9
  420bfc:	lsl	x10, x23, x9
  420c00:	lsr	x11, x21, x11
  420c04:	orr	x23, x11, x10
  420c08:	lsl	x21, x21, x9
  420c0c:	ldr	x10, [sp, #40]
  420c10:	cmp	x10, #0x41
  420c14:	b.cc	420c40 <feof@plt+0x1e270>  // b.lo, b.ul, b.last
  420c18:	sub	x9, x10, #0x40
  420c1c:	cmp	x9, #0x3f
  420c20:	b.hi	420c74 <feof@plt+0x1e2a4>  // b.pmore
  420c24:	mov	x10, #0xffffffffffffffff    	// #-1
  420c28:	lsl	x9, x10, x9
  420c2c:	bic	x23, x23, x9
  420c30:	b	420c74 <feof@plt+0x1e2a4>
  420c34:	mov	x21, xzr
  420c38:	mov	x23, xzr
  420c3c:	b	420c74 <feof@plt+0x1e2a4>
  420c40:	cmp	x10, #0x40
  420c44:	b.ne	420c64 <feof@plt+0x1e294>  // b.any
  420c48:	mov	x23, xzr
  420c4c:	b	420c74 <feof@plt+0x1e2a4>
  420c50:	ldr	w8, [x19, #28]
  420c54:	cbz	w8, 420e48 <feof@plt+0x1e478>
  420c58:	add	x21, sp, #0x88
  420c5c:	mov	w14, w3
  420c60:	b	420f54 <feof@plt+0x1e584>
  420c64:	mov	x9, #0xffffffffffffffff    	// #-1
  420c68:	lsl	x9, x9, x10
  420c6c:	mov	x23, xzr
  420c70:	bic	x21, x21, x9
  420c74:	ldr	x9, [sp, #88]
  420c78:	mov	x28, xzr
  420c7c:	mov	x25, xzr
  420c80:	bfi	x9, x8, #16, #48
  420c84:	ldr	x8, [sp, #40]
  420c88:	str	x9, [sp, #88]
  420c8c:	sub	x8, x8, #0x1
  420c90:	str	x8, [sp]
  420c94:	mov	w8, #0x1                   	// #1
  420c98:	b	420cac <feof@plt+0x1e2dc>
  420c9c:	orr	x28, x9, x28
  420ca0:	sub	x27, x27, #0x1
  420ca4:	extr	x21, x23, x21, #1
  420ca8:	lsr	x23, x23, #1
  420cac:	cmp	x4, x23
  420cb0:	b.hi	420cc4 <feof@plt+0x1e2f4>  // b.pmore
  420cb4:	cmp	x16, x21
  420cb8:	b.cc	420d3c <feof@plt+0x1e36c>  // b.lo, b.ul, b.last
  420cbc:	cmp	x4, x23
  420cc0:	b.ne	420d3c <feof@plt+0x1e36c>  // b.any
  420cc4:	stp	x4, x16, [x22, #24]
  420cc8:	ldr	w9, [sp, #136]
  420ccc:	ldrh	w10, [sp, #140]
  420cd0:	sturb	w8, [x29, #-48]
  420cd4:	ldr	x8, [sp, #104]
  420cd8:	ldr	x11, [sp, #88]
  420cdc:	sturb	w17, [x29, #-47]
  420ce0:	sub	x1, x29, #0x40
  420ce4:	strh	w10, [x8, #4]
  420ce8:	str	w9, [x8]
  420cec:	sub	x8, x29, #0x28
  420cf0:	sub	x2, x29, #0x58
  420cf4:	mov	w3, #0x5                   	// #5
  420cf8:	mov	x0, x19
  420cfc:	stp	x21, x11, [x22, #8]
  420d00:	str	x23, [x22]
  420d04:	bl	4217c8 <feof@plt+0x1edf8>
  420d08:	ldr	x10, [sp, #96]
  420d0c:	ldp	x4, x16, [x22, #48]
  420d10:	ldurb	w8, [x29, #-24]
  420d14:	ldurb	w17, [x29, #-23]
  420d18:	ldr	w9, [x10]
  420d1c:	ldrh	w10, [x10, #4]
  420d20:	cmp	x27, #0x40
  420d24:	str	w9, [sp, #136]
  420d28:	mov	w9, #0x1                   	// #1
  420d2c:	lsl	x9, x9, x27
  420d30:	strh	w10, [sp, #140]
  420d34:	b.cs	420c9c <feof@plt+0x1e2cc>  // b.hs, b.nlast
  420d38:	orr	x25, x9, x25
  420d3c:	cbnz	x27, 420ca0 <feof@plt+0x1e2d0>
  420d40:	ldr	w8, [sp, #28]
  420d44:	cmp	w8, #0x7
  420d48:	b.ne	420d6c <feof@plt+0x1e39c>  // b.any
  420d4c:	ldr	x27, [sp, #56]
  420d50:	ldr	x23, [sp, #16]
  420d54:	ldr	x13, [sp, #40]
  420d58:	ldr	w14, [sp, #36]
  420d5c:	tbz	w14, #0, 420dc8 <feof@plt+0x1e3f8>
  420d60:	mov	w17, wzr
  420d64:	sub	x21, x29, #0x60
  420d68:	b	420f4c <feof@plt+0x1e57c>
  420d6c:	ldr	x27, [sp, #56]
  420d70:	ldr	x23, [sp, #16]
  420d74:	ldr	x12, [sp, #40]
  420d78:	ldr	w8, [sp, #12]
  420d7c:	cbz	w8, 420e28 <feof@plt+0x1e458>
  420d80:	ldr	w8, [sp, #136]
  420d84:	ldrh	w10, [sp, #140]
  420d88:	ldr	w14, [sp, #36]
  420d8c:	neg	x9, x4
  420d90:	cmp	x16, #0x0
  420d94:	csinv	x9, x9, x4, eq  // eq = none
  420d98:	cmp	x12, #0x41
  420d9c:	stur	w8, [x29, #-40]
  420da0:	neg	x8, x16
  420da4:	mov	x11, #0xffffffffffffffff    	// #-1
  420da8:	sturh	w10, [x29, #-36]
  420dac:	b.cc	420e38 <feof@plt+0x1e468>  // b.lo, b.ul, b.last
  420db0:	sub	x10, x12, #0x40
  420db4:	cmp	x10, #0x3f
  420db8:	b.hi	420ea4 <feof@plt+0x1e4d4>  // b.pmore
  420dbc:	lsl	x10, x11, x10
  420dc0:	bic	x9, x9, x10
  420dc4:	b	420ea4 <feof@plt+0x1e4d4>
  420dc8:	ldr	x8, [sp]
  420dcc:	ldr	w14, [sp, #8]
  420dd0:	sub	x9, x13, #0x41
  420dd4:	mov	w10, #0x1                   	// #1
  420dd8:	lsl	x8, x10, x8
  420ddc:	lsl	x9, x10, x9
  420de0:	cbz	w14, 420f10 <feof@plt+0x1e540>
  420de4:	ldur	w10, [x29, #-96]
  420de8:	ldurh	w11, [x29, #-92]
  420dec:	neg	x12, x28
  420df0:	cmp	x25, #0x0
  420df4:	csinv	x28, x12, x28, eq  // eq = none
  420df8:	cmp	x13, #0x41
  420dfc:	neg	x25, x25
  420e00:	mov	x12, #0xffffffffffffffff    	// #-1
  420e04:	str	w10, [sp, #120]
  420e08:	strh	w11, [sp, #124]
  420e0c:	b.cc	420e88 <feof@plt+0x1e4b8>  // b.lo, b.ul, b.last
  420e10:	sub	x11, x13, #0x40
  420e14:	cmp	x11, #0x3f
  420e18:	b.hi	420f00 <feof@plt+0x1e530>  // b.pmore
  420e1c:	lsl	x11, x12, x11
  420e20:	bic	x28, x28, x11
  420e24:	b	420f00 <feof@plt+0x1e530>
  420e28:	ldr	w14, [sp, #36]
  420e2c:	mov	w17, wzr
  420e30:	add	x21, sp, #0x88
  420e34:	b	420f54 <feof@plt+0x1e584>
  420e38:	cmp	x12, #0x40
  420e3c:	b.ne	420e98 <feof@plt+0x1e4c8>  // b.any
  420e40:	mov	x9, xzr
  420e44:	b	420ea4 <feof@plt+0x1e4d4>
  420e48:	mov	x25, x4
  420e4c:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  420e50:	mov	w1, #0x3                   	// #3
  420e54:	mov	x0, x19
  420e58:	mov	w28, w3
  420e5c:	mov	w3, wzr
  420e60:	add	x4, x4, #0xa51
  420e64:	add	x21, sp, #0x88
  420e68:	str	x16, [sp, #88]
  420e6c:	str	w17, [sp, #40]
  420e70:	bl	41e2c4 <feof@plt+0x1b8f4>
  420e74:	ldr	w17, [sp, #40]
  420e78:	ldr	x16, [sp, #88]
  420e7c:	mov	x4, x25
  420e80:	mov	w14, w28
  420e84:	b	420f54 <feof@plt+0x1e584>
  420e88:	cmp	x13, #0x40
  420e8c:	b.ne	420ef4 <feof@plt+0x1e524>  // b.any
  420e90:	mov	x28, xzr
  420e94:	b	420f00 <feof@plt+0x1e530>
  420e98:	lsl	x10, x11, x12
  420e9c:	mov	x9, xzr
  420ea0:	bic	x8, x8, x10
  420ea4:	cmp	w14, #0x0
  420ea8:	cset	w11, eq  // eq = none
  420eac:	cmp	x8, x16
  420eb0:	cset	w12, eq  // eq = none
  420eb4:	cmp	x9, x4
  420eb8:	orr	x10, x9, x8
  420ebc:	and	w11, w11, w12
  420ec0:	cset	w12, eq  // eq = none
  420ec4:	ldur	w13, [x29, #-40]
  420ec8:	cmp	x10, #0x0
  420ecc:	and	w10, w12, w11
  420ed0:	ldurh	w11, [x29, #-36]
  420ed4:	cset	w12, ne  // ne = any
  420ed8:	add	x21, sp, #0x88
  420edc:	and	w17, w12, w10
  420ee0:	mov	x16, x8
  420ee4:	mov	x4, x9
  420ee8:	str	w13, [sp, #136]
  420eec:	strh	w11, [sp, #140]
  420ef0:	b	420f54 <feof@plt+0x1e584>
  420ef4:	lsl	x11, x12, x13
  420ef8:	mov	x28, xzr
  420efc:	bic	x25, x25, x11
  420f00:	ldr	w11, [sp, #120]
  420f04:	ldrh	w12, [sp, #124]
  420f08:	stur	w11, [x29, #-96]
  420f0c:	sturh	w12, [x29, #-92]
  420f10:	ldr	x10, [sp, #40]
  420f14:	and	x9, x28, x9
  420f18:	and	x8, x25, x8
  420f1c:	sub	x21, x29, #0x60
  420f20:	cmp	x10, #0x40
  420f24:	csel	x8, x9, x8, hi  // hi = pmore
  420f28:	cmp	x8, #0x0
  420f2c:	cset	w8, eq  // eq = none
  420f30:	orr	x10, x25, x28
  420f34:	eor	w8, w14, w8
  420f38:	ldr	w14, [sp, #36]
  420f3c:	cmp	x10, #0x0
  420f40:	eor	w8, w8, #0x1
  420f44:	cset	w9, ne  // ne = any
  420f48:	and	w17, w9, w8
  420f4c:	mov	x16, x25
  420f50:	mov	x4, x28
  420f54:	ldrh	w8, [x21, #4]
  420f58:	ldr	w9, [x21]
  420f5c:	strh	w8, [sp, #148]
  420f60:	str	w9, [sp, #144]
  420f64:	stp	x4, x16, [x27, #-32]
  420f68:	sturb	w14, [x27, #-16]
  420f6c:	sturb	w17, [x27, #-15]
  420f70:	ldrh	w8, [sp, #148]
  420f74:	ldr	w9, [sp, #144]
  420f78:	ldr	w28, [sp, #52]
  420f7c:	ldr	w25, [sp, #32]
  420f80:	strh	w8, [x23, #4]
  420f84:	str	w9, [x23]
  420f88:	b	421218 <feof@plt+0x1e848>
  420f8c:	mov	w9, #0x1                   	// #1
  420f90:	mov	x10, #0xffffffffffffffbf    	// #-65
  420f94:	mov	x16, x11
  420f98:	b	420fb4 <feof@plt+0x1e5e4>
  420f9c:	lsl	x9, x6, x8
  420fa0:	mov	x12, xzr
  420fa4:	bic	x14, x14, x9
  420fa8:	mov	w9, #0x1                   	// #1
  420fac:	mov	x10, #0xffffffffffffffff    	// #-1
  420fb0:	mov	x16, x13
  420fb4:	add	x10, x8, x10
  420fb8:	lsr	x10, x16, x10
  420fbc:	tbz	w10, #0, 421000 <feof@plt+0x1e630>
  420fc0:	neg	x10, x11
  420fc4:	cmp	x13, #0x0
  420fc8:	eor	w9, w9, #0x1
  420fcc:	csinv	x11, x10, x11, eq  // eq = none
  420fd0:	cmp	x8, #0x41
  420fd4:	neg	x13, x13
  420fd8:	b.cc	420ff4 <feof@plt+0x1e624>  // b.lo, b.ul, b.last
  420fdc:	cmp	x15, #0x3f
  420fe0:	b.hi	421000 <feof@plt+0x1e630>  // b.pmore
  420fe4:	lsl	x15, x6, x15
  420fe8:	mov	w10, wzr
  420fec:	bic	x11, x11, x15
  420ff0:	b	421004 <feof@plt+0x1e634>
  420ff4:	cmp	x8, #0x40
  420ff8:	b.ne	42124c <feof@plt+0x1e87c>  // b.any
  420ffc:	mov	x11, xzr
  421000:	mov	w10, wzr
  421004:	cmp	x12, #0x0
  421008:	and	x16, x13, #0xffffffff
  42100c:	lsr	x13, x13, #32
  421010:	and	x17, x12, #0xffffffff
  421014:	and	x15, x14, #0xffffffff
  421018:	lsr	x14, x14, #32
  42101c:	lsr	x12, x12, #32
  421020:	and	x18, x11, #0xffffffff
  421024:	lsr	x0, x11, #32
  421028:	cset	w1, ne  // ne = any
  42102c:	cmp	x11, #0x0
  421030:	mul	x5, x16, x17
  421034:	mul	x17, x13, x17
  421038:	mul	x11, x16, x15
  42103c:	mul	x2, x13, x14
  421040:	mul	x3, x13, x15
  421044:	mul	x4, x16, x14
  421048:	mul	x13, x13, x12
  42104c:	mul	x12, x16, x12
  421050:	mul	x16, x18, x15
  421054:	mul	x15, x0, x15
  421058:	mul	x0, x0, x14
  42105c:	mul	x14, x18, x14
  421060:	cset	w18, ne  // ne = any
  421064:	adds	x5, x5, x17, lsl #32
  421068:	and	w18, w1, w18
  42106c:	lsr	x1, x12, #32
  421070:	cinc	x13, x13, cs  // cs = hs, nlast
  421074:	adds	x12, x5, x12, lsl #32
  421078:	add	x17, x1, x17, lsr #32
  42107c:	cinc	x13, x13, cs  // cs = hs, nlast
  421080:	add	x2, x2, x3, lsr #32
  421084:	lsr	x5, x14, #32
  421088:	cmn	x17, x13
  42108c:	add	x1, x2, x4, lsr #32
  421090:	add	x2, x5, x15, lsr #32
  421094:	cset	w13, ne  // ne = any
  421098:	adds	x15, x16, x15, lsl #32
  42109c:	cinc	x16, x0, cs  // cs = hs, nlast
  4210a0:	adds	x14, x15, x14, lsl #32
  4210a4:	add	x12, x1, x12
  4210a8:	cinc	x17, x16, cs  // cs = hs, nlast
  4210ac:	adds	x11, x11, x3, lsl #32
  4210b0:	cinc	x12, x12, cs  // cs = hs, nlast
  4210b4:	adds	x16, x11, x4, lsl #32
  4210b8:	add	x11, x12, x14
  4210bc:	cinc	x15, x11, cs  // cs = hs, nlast
  4210c0:	cmn	x2, x17
  4210c4:	orr	w13, w18, w13
  4210c8:	cset	w11, ne  // ne = any
  4210cc:	cmp	x8, #0x41
  4210d0:	orr	w14, w13, w11
  4210d4:	b.cc	4210f4 <feof@plt+0x1e724>  // b.lo, b.ul, b.last
  4210d8:	sub	x11, x8, #0x40
  4210dc:	cmp	x11, #0x3f
  4210e0:	b.hi	421108 <feof@plt+0x1e738>  // b.pmore
  4210e4:	lsl	x11, x6, x11
  4210e8:	bic	x11, x15, x11
  4210ec:	mov	x13, x16
  4210f0:	b	421120 <feof@plt+0x1e750>
  4210f4:	cmp	x8, #0x40
  4210f8:	b.ne	421114 <feof@plt+0x1e744>  // b.any
  4210fc:	mov	x11, xzr
  421100:	mov	x13, x16
  421104:	b	421120 <feof@plt+0x1e750>
  421108:	mov	x13, x16
  42110c:	mov	x11, x15
  421110:	b	421120 <feof@plt+0x1e750>
  421114:	lsl	x12, x6, x8
  421118:	mov	x11, xzr
  42111c:	bic	x13, x16, x12
  421120:	cmp	x13, x16
  421124:	cset	w16, ne  // ne = any
  421128:	cmp	x11, x15
  42112c:	cset	w15, ne  // ne = any
  421130:	orr	w15, w16, w15
  421134:	sub	x12, x27, #0xe
  421138:	orr	w14, w14, w15
  42113c:	cbz	w9, 4211ac <feof@plt+0x1e7dc>
  421140:	ldur	w15, [x29, #-40]
  421144:	ldurh	w16, [x29, #-36]
  421148:	neg	x17, x11
  42114c:	cmp	x13, #0x0
  421150:	csinv	x11, x17, x11, eq  // eq = none
  421154:	cmp	x8, #0x41
  421158:	neg	x13, x13
  42115c:	stur	w15, [x29, #-96]
  421160:	sturh	w16, [x29, #-92]
  421164:	b.cc	421180 <feof@plt+0x1e7b0>  // b.lo, b.ul, b.last
  421168:	sub	x15, x8, #0x40
  42116c:	cmp	x15, #0x3f
  421170:	b.hi	42119c <feof@plt+0x1e7cc>  // b.pmore
  421174:	lsl	x15, x6, x15
  421178:	bic	x11, x11, x15
  42117c:	b	42119c <feof@plt+0x1e7cc>
  421180:	cmp	x8, #0x40
  421184:	b.ne	421190 <feof@plt+0x1e7c0>  // b.any
  421188:	mov	x11, xzr
  42118c:	b	42119c <feof@plt+0x1e7cc>
  421190:	lsl	x15, x6, x8
  421194:	mov	x11, xzr
  421198:	bic	x13, x13, x15
  42119c:	ldur	w15, [x29, #-96]
  4211a0:	ldurh	w16, [x29, #-92]
  4211a4:	stur	w15, [x29, #-40]
  4211a8:	sturh	w16, [x29, #-36]
  4211ac:	orr	w14, w10, w14
  4211b0:	tbz	w14, #0, 4211bc <feof@plt+0x1e7ec>
  4211b4:	eor	w8, w10, #0x1
  4211b8:	b	4211fc <feof@plt+0x1e82c>
  4211bc:	cmp	x8, #0x40
  4211c0:	mov	x14, #0xffffffffffffffbf    	// #-65
  4211c4:	csinv	x14, x14, xzr, hi  // hi = pmore
  4211c8:	csel	x15, x11, x13, hi  // hi = pmore
  4211cc:	add	x8, x8, x14
  4211d0:	lsr	x8, x15, x8
  4211d4:	tst	x8, #0x1
  4211d8:	cset	w8, eq  // eq = none
  4211dc:	eor	w8, w9, w8
  4211e0:	cmp	w8, #0x1
  4211e4:	b.eq	4211f8 <feof@plt+0x1e828>  // b.none
  4211e8:	orr	x8, x11, x13
  4211ec:	cmp	x8, #0x0
  4211f0:	cset	w8, ne  // ne = any
  4211f4:	b	4211fc <feof@plt+0x1e82c>
  4211f8:	mov	w8, wzr
  4211fc:	stp	x11, x13, [x27, #-32]
  421200:	sturb	w10, [x27, #-16]
  421204:	sturb	w8, [x27, #-15]
  421208:	ldurh	w8, [x29, #-36]
  42120c:	ldur	w9, [x29, #-40]
  421210:	strh	w8, [x12, #4]
  421214:	str	w9, [x12]
  421218:	ldr	w8, [x27, #32]
  42121c:	ldurb	w9, [x27, #-15]
  421220:	sub	x23, x27, #0x28
  421224:	stur	w8, [x27, #-8]
  421228:	cbz	w9, 4202c8 <feof@plt+0x1d8f8>
  42122c:	ldr	w8, [x19, #28]
  421230:	cbnz	w8, 4202c8 <feof@plt+0x1d8f8>
  421234:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  421238:	mov	w1, #0x2                   	// #2
  42123c:	mov	x0, x19
  421240:	add	x2, x2, #0x953
  421244:	bl	41de04 <feof@plt+0x1b434>
  421248:	b	4202c8 <feof@plt+0x1d8f8>
  42124c:	lsl	x15, x6, x8
  421250:	mov	x11, xzr
  421254:	mov	w10, wzr
  421258:	bic	x13, x13, x15
  42125c:	b	421004 <feof@plt+0x1e634>
  421260:	cmp	w20, #0x15
  421264:	mov	x21, #0xffffffffffffffff    	// #-1
  421268:	b.ne	420254 <feof@plt+0x1d884>  // b.any
  42126c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  421270:	mov	w1, #0x3                   	// #3
  421274:	mov	x0, x19
  421278:	add	x2, x2, #0x97f
  42127c:	bl	41de04 <feof@plt+0x1b434>
  421280:	ldr	w2, [sp, #84]
  421284:	mov	x27, xzr
  421288:	b	420254 <feof@plt+0x1d884>
  42128c:	orr	w8, w20, #0x1
  421290:	cmp	w8, #0x13
  421294:	mov	x21, #0xffffffffffffffff    	// #-1
  421298:	b.eq	420254 <feof@plt+0x1d884>  // b.none
  42129c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  4212a0:	mov	w1, #0x3                   	// #3
  4212a4:	mov	x0, x19
  4212a8:	add	x2, x2, #0x939
  4212ac:	b	42127c <feof@plt+0x1e8ac>
  4212b0:	ldr	w3, [x27, #36]
  4212b4:	b	420228 <feof@plt+0x1d858>
  4212b8:	cmp	w20, #0x15
  4212bc:	b.ne	4212e8 <feof@plt+0x1e918>  // b.any
  4212c0:	ldr	x8, [x27, #24]
  4212c4:	ldur	q0, [x27, #8]
  4212c8:	ldr	w9, [x27, #32]
  4212cc:	mov	x21, #0xffffffffffffffff    	// #-1
  4212d0:	stur	x8, [x27, #-16]
  4212d4:	sub	x8, x27, #0x28
  4212d8:	stur	q0, [x27, #-32]
  4212dc:	stur	w9, [x27, #-8]
  4212e0:	mov	x27, x8
  4212e4:	b	420254 <feof@plt+0x1d884>
  4212e8:	ldr	x8, [x27]
  4212ec:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4212f0:	mov	w1, #0x3                   	// #3
  4212f4:	mov	x0, x19
  4212f8:	ldr	w2, [x8]
  4212fc:	mov	w3, wzr
  421300:	add	x4, x4, #0x91f
  421304:	bl	41e2c4 <feof@plt+0x1b8f4>
  421308:	ldr	w2, [sp, #84]
  42130c:	mov	x27, xzr
  421310:	b	420250 <feof@plt+0x1d880>
  421314:	ldp	x9, x8, [x27, #8]
  421318:	orr	x8, x9, x8
  42131c:	cbnz	x8, 421368 <feof@plt+0x1e998>
  421320:	b	421330 <feof@plt+0x1e960>
  421324:	ldp	x9, x8, [x27, #8]
  421328:	orr	x8, x9, x8
  42132c:	cbz	x8, 421368 <feof@plt+0x1e998>
  421330:	ldr	w8, [x19, #28]
  421334:	add	w8, w8, #0x1
  421338:	b	421364 <feof@plt+0x1e994>
  42133c:	ldr	w8, [x27, #36]
  421340:	cmp	w8, #0x11
  421344:	b.ne	4214fc <feof@plt+0x1eb2c>  // b.any
  421348:	ldp	x10, x9, [x27, #-32]
  42134c:	ldr	w8, [x19, #28]
  421350:	orr	x9, x10, x9
  421354:	cbz	x9, 421360 <feof@plt+0x1e990>
  421358:	add	w8, w8, #0x1
  42135c:	b	421364 <feof@plt+0x1e994>
  421360:	sub	w8, w8, #0x1
  421364:	str	w8, [x19, #28]
  421368:	ldr	x8, [x19, #1104]
  42136c:	add	x27, x27, #0x28
  421370:	cmp	x27, x8
  421374:	b.ne	4213a8 <feof@plt+0x1e9d8>  // b.any
  421378:	ldr	x0, [x19, #1096]
  42137c:	sub	x21, x8, x0
  421380:	lsl	x8, x21, #1
  421384:	add	x24, x8, #0x320
  421388:	mov	x1, x24
  42138c:	bl	450728 <_obstack_memory_used@@Base+0x190>
  421390:	ldr	w2, [sp, #84]
  421394:	add	x8, x0, x24
  421398:	add	x27, x0, x21
  42139c:	mov	x21, #0xffffffffffffffff    	// #-1
  4213a0:	str	x0, [x19, #1096]
  4213a4:	str	x8, [x19, #1104]
  4213a8:	str	x26, [x27]
  4213ac:	stp	w2, w20, [x27, #32]
  4213b0:	b	41fca4 <feof@plt+0x1d2d4>
  4213b4:	mov	x0, x19
  4213b8:	mov	x1, x26
  4213bc:	mov	w20, w2
  4213c0:	bl	428aa4 <feof@plt+0x260d4>
  4213c4:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4213c8:	mov	x5, x0
  4213cc:	add	x4, x4, #0x5e6
  4213d0:	mov	w1, #0x3                   	// #3
  4213d4:	mov	x0, x19
  4213d8:	mov	w2, w20
  4213dc:	mov	w3, wzr
  4213e0:	bl	41e2c4 <feof@plt+0x1b8f4>
  4213e4:	mov	w0, wzr
  4213e8:	ldp	x20, x19, [sp, #416]
  4213ec:	ldp	x22, x21, [sp, #400]
  4213f0:	ldp	x24, x23, [sp, #384]
  4213f4:	ldp	x26, x25, [sp, #368]
  4213f8:	ldp	x28, x27, [sp, #352]
  4213fc:	ldp	x29, x30, [sp, #336]
  421400:	add	sp, sp, #0x1b0
  421404:	ret
  421408:	mov	x0, x19
  42140c:	mov	x1, x26
  421410:	mov	w20, w2
  421414:	bl	428aa4 <feof@plt+0x260d4>
  421418:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  42141c:	mov	x5, x0
  421420:	add	x4, x4, #0x610
  421424:	b	4213d0 <feof@plt+0x1ea00>
  421428:	ldr	w9, [sp, #68]
  42142c:	cmp	w25, #0x3
  421430:	cset	w8, eq  // eq = none
  421434:	and	w8, w8, w9
  421438:	tbnz	w8, #0, 421448 <feof@plt+0x1ea78>
  42143c:	ldr	x8, [x19, #432]
  421440:	cbz	x8, 421448 <feof@plt+0x1ea78>
  421444:	str	xzr, [x19, #432]
  421448:	ldr	x8, [x19, #1096]
  42144c:	cmp	x27, x8
  421450:	b.eq	4214a4 <feof@plt+0x1ead4>  // b.none
  421454:	ldr	w10, [sp, #64]
  421458:	ldr	w2, [x27, #32]
  42145c:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0xba68>
  421460:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  421464:	add	x8, x8, #0x681
  421468:	add	x9, x9, #0xa4d
  42146c:	tst	w10, #0x1
  421470:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  421474:	csel	x5, x9, x8, ne  // ne = any
  421478:	add	x4, x4, #0x6e7
  42147c:	mov	w1, #0x4                   	// #4
  421480:	mov	x0, x19
  421484:	b	4213dc <feof@plt+0x1ea0c>
  421488:	mov	x0, x19
  42148c:	mov	x1, x26
  421490:	bl	428aa4 <feof@plt+0x260d4>
  421494:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  421498:	mov	x5, x0
  42149c:	add	x4, x4, #0x5e6
  4214a0:	b	4214ec <feof@plt+0x1eb1c>
  4214a4:	ldp	x9, x8, [x27, #8]
  4214a8:	orr	x8, x9, x8
  4214ac:	cmp	x8, #0x0
  4214b0:	cset	w0, ne  // ne = any
  4214b4:	b	4213e8 <feof@plt+0x1ea18>
  4214b8:	ldr	x1, [x27]
  4214bc:	mov	x0, x19
  4214c0:	bl	428aa4 <feof@plt+0x260d4>
  4214c4:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4214c8:	mov	x5, x0
  4214cc:	add	x4, x4, #0x687
  4214d0:	b	4214ec <feof@plt+0x1eb1c>
  4214d4:	mov	x0, x19
  4214d8:	mov	x1, x26
  4214dc:	bl	428aa4 <feof@plt+0x260d4>
  4214e0:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  4214e4:	mov	x5, x0
  4214e8:	add	x4, x4, #0x6aa
  4214ec:	ldr	w2, [sp, #84]
  4214f0:	mov	w1, #0x3                   	// #3
  4214f4:	mov	x0, x19
  4214f8:	b	4213dc <feof@plt+0x1ea0c>
  4214fc:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  421500:	add	x4, x4, #0x6cc
  421504:	b	42153c <feof@plt+0x1eb6c>
  421508:	ldr	w10, [sp, #64]
  42150c:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0xba68>
  421510:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  421514:	add	x8, x8, #0x681
  421518:	add	x9, x9, #0xa4d
  42151c:	tst	w10, #0x1
  421520:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  421524:	csel	x5, x9, x8, ne  // ne = any
  421528:	add	x4, x4, #0x66b
  42152c:	mov	w1, #0x3                   	// #3
  421530:	b	421480 <feof@plt+0x1eab0>
  421534:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0xba68>
  421538:	add	x4, x4, #0x644
  42153c:	mov	w1, #0x3                   	// #3
  421540:	mov	x0, x19
  421544:	mov	w3, wzr
  421548:	bl	41e2c4 <feof@plt+0x1b8f4>
  42154c:	b	4213e4 <feof@plt+0x1ea14>
  421550:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0xba68>
  421554:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  421558:	add	x0, x0, #0x7f0
  42155c:	add	x2, x2, #0x804
  421560:	mov	w1, #0x4ad                 	// #1197
  421564:	bl	404ac4 <feof@plt+0x20f4>
  421568:	stp	x29, x30, [sp, #-48]!
  42156c:	stp	x20, x19, [sp, #32]
  421570:	mov	x19, x0
  421574:	ldr	x8, [x0, #1104]
  421578:	ldr	x0, [x0, #1096]
  42157c:	str	x21, [sp, #16]
  421580:	mov	x29, sp
  421584:	sub	x21, x8, x0
  421588:	lsl	x8, x21, #1
  42158c:	add	x20, x8, #0x320
  421590:	mov	x1, x20
  421594:	bl	450728 <_obstack_memory_used@@Base+0x190>
  421598:	add	x8, x0, x20
  42159c:	str	x0, [x19, #1096]
  4215a0:	str	x8, [x19, #1104]
  4215a4:	add	x0, x0, x21
  4215a8:	ldp	x20, x19, [sp, #32]
  4215ac:	ldr	x21, [sp, #16]
  4215b0:	ldp	x29, x30, [sp], #48
  4215b4:	ret
  4215b8:	ldrb	w9, [x0, #16]
  4215bc:	cbnz	w9, 421628 <feof@plt+0x1ec58>
  4215c0:	subs	x9, x1, #0x41
  4215c4:	b.cc	4215f4 <feof@plt+0x1ec24>  // b.lo, b.ul, b.last
  4215c8:	and	x10, x1, #0xffffffffffffffc0
  4215cc:	cmp	x10, #0x40
  4215d0:	b.ne	421628 <feof@plt+0x1ec58>  // b.any
  4215d4:	ldr	x10, [x0]
  4215d8:	lsr	x9, x10, x9
  4215dc:	tbz	w9, #0, 421628 <feof@plt+0x1ec58>
  4215e0:	neg	x9, x1
  4215e4:	mov	x11, #0xffffffffffffffff    	// #-1
  4215e8:	lsr	x9, x11, x9
  4215ec:	orn	x9, x10, x9
  4215f0:	b	421624 <feof@plt+0x1ec54>
  4215f4:	ldr	x9, [x0, #8]
  4215f8:	sub	x10, x1, #0x1
  4215fc:	lsr	x10, x9, x10
  421600:	tbz	w10, #0, 421628 <feof@plt+0x1ec58>
  421604:	cmp	x1, #0x3f
  421608:	b.hi	421620 <feof@plt+0x1ec50>  // b.pmore
  42160c:	neg	x10, x1
  421610:	mov	x11, #0xffffffffffffffff    	// #-1
  421614:	lsr	x10, x11, x10
  421618:	orn	x9, x9, x10
  42161c:	str	x9, [x0, #8]
  421620:	mov	x9, #0xffffffffffffffff    	// #-1
  421624:	str	x9, [x0]
  421628:	ldr	x9, [x0, #16]
  42162c:	ldr	q0, [x0]
  421630:	str	x9, [x8, #16]
  421634:	str	q0, [x8]
  421638:	ret
  42163c:	stp	x29, x30, [sp, #-80]!
  421640:	stp	x24, x23, [sp, #32]
  421644:	stp	x22, x21, [sp, #48]
  421648:	stp	x20, x19, [sp, #64]
  42164c:	stp	xzr, xzr, [x8]
  421650:	strh	wzr, [x8, #16]
  421654:	mov	x20, x8
  421658:	ldrb	w8, [x0, #26]
  42165c:	str	x25, [sp, #16]
  421660:	mov	x29, sp
  421664:	mov	w21, w1
  421668:	add	w8, w8, #0x1
  42166c:	mov	x19, x0
  421670:	strb	w8, [x0, #26]
  421674:	bl	42db34 <feof@plt+0x2b164>
  421678:	ldrb	w8, [x0, #4]
  42167c:	cmp	w8, #0x14
  421680:	b.ne	4216f4 <feof@plt+0x1ed24>  // b.any
  421684:	mov	x0, x19
  421688:	bl	42db34 <feof@plt+0x2b164>
  42168c:	ldrb	w8, [x0, #4]
  421690:	mov	x22, x0
  421694:	mov	w25, #0x1                   	// #1
  421698:	cmp	w8, #0x3
  42169c:	b.eq	421704 <feof@plt+0x1ed34>  // b.none
  4216a0:	cmp	w8, #0x44
  4216a4:	b.eq	4216b0 <feof@plt+0x1ece0>  // b.none
  4216a8:	cmp	w8, #0x3e
  4216ac:	b.ne	421780 <feof@plt+0x1edb0>  // b.any
  4216b0:	ldr	w9, [x22, #8]
  4216b4:	cmp	w8, #0x44
  4216b8:	cset	w24, eq  // eq = none
  4216bc:	sub	w0, w9, #0x1
  4216c0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4216c4:	ldr	x8, [x22, #16]
  4216c8:	ldr	w9, [x22, #8]
  4216cc:	mov	x23, x0
  4216d0:	add	x1, x8, #0x1
  4216d4:	sub	w2, w9, #0x2
  4216d8:	bl	402390 <memcpy@plt>
  4216dc:	ldr	w8, [x22, #8]
  4216e0:	sub	w8, w8, #0x2
  4216e4:	strb	wzr, [x23, w8, uxtw]
  4216e8:	ldr	x22, [x22, #8]
  4216ec:	cbnz	x23, 42171c <feof@plt+0x1ed4c>
  4216f0:	b	421740 <feof@plt+0x1ed70>
  4216f4:	mov	x22, x0
  4216f8:	mov	w25, wzr
  4216fc:	cmp	w8, #0x3
  421700:	b.ne	4216a0 <feof@plt+0x1ecd0>  // b.any
  421704:	mov	x0, x19
  421708:	bl	41c270 <feof@plt+0x198a0>
  42170c:	mov	x23, x0
  421710:	mov	x22, xzr
  421714:	mov	w24, #0x1                   	// #1
  421718:	cbz	x23, 421740 <feof@plt+0x1ed70>
  42171c:	mov	x0, x19
  421720:	mov	x1, x23
  421724:	mov	w2, w24
  421728:	mov	w3, w21
  42172c:	bl	423ba0 <feof@plt+0x211d0>
  421730:	and	x8, x0, #0x1
  421734:	mov	x0, x23
  421738:	str	x8, [x20, #8]
  42173c:	bl	4024c0 <free@plt>
  421740:	cbz	w25, 42179c <feof@plt+0x1edcc>
  421744:	ldr	x8, [x19, #448]
  421748:	ldurb	w8, [x8, #-20]
  42174c:	cmp	w8, #0x16
  421750:	b.eq	42179c <feof@plt+0x1edcc>  // b.none
  421754:	mov	x0, x19
  421758:	bl	42db34 <feof@plt+0x2b164>
  42175c:	ldrb	w8, [x0, #4]
  421760:	cmp	w8, #0x15
  421764:	b.eq	42179c <feof@plt+0x1edcc>  // b.none
  421768:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  42176c:	add	x2, x2, #0x8e2
  421770:	mov	w1, #0x3                   	// #3
  421774:	mov	x0, x19
  421778:	bl	41de04 <feof@plt+0x1b434>
  42177c:	b	42179c <feof@plt+0x1edcc>
  421780:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  421784:	add	x2, x2, #0x8ae
  421788:	mov	w1, #0x3                   	// #3
  42178c:	mov	x0, x19
  421790:	bl	41de04 <feof@plt+0x1b434>
  421794:	mov	x22, xzr
  421798:	cbnz	w25, 421744 <feof@plt+0x1ed74>
  42179c:	cbz	x22, 4217a4 <feof@plt+0x1edd4>
  4217a0:	str	x22, [x19, #432]
  4217a4:	ldrb	w8, [x19, #26]
  4217a8:	ldr	x25, [sp, #16]
  4217ac:	sub	w8, w8, #0x1
  4217b0:	strb	w8, [x19, #26]
  4217b4:	ldp	x20, x19, [sp, #64]
  4217b8:	ldp	x22, x21, [sp, #48]
  4217bc:	ldp	x24, x23, [sp, #32]
  4217c0:	ldp	x29, x30, [sp], #80
  4217c4:	ret
  4217c8:	sub	sp, sp, #0x80
  4217cc:	stp	x29, x30, [sp, #80]
  4217d0:	stp	x20, x19, [sp, #112]
  4217d4:	ldr	x9, [x0, #1208]
  4217d8:	sub	w10, w3, #0xc
  4217dc:	str	x21, [sp, #96]
  4217e0:	mov	x21, x2
  4217e4:	mov	x20, x1
  4217e8:	cmp	w10, #0x2
  4217ec:	mov	x19, x8
  4217f0:	add	x29, sp, #0x50
  4217f4:	b.cc	421828 <feof@plt+0x1ee58>  // b.lo, b.ul, b.last
  4217f8:	cmp	w3, #0x4
  4217fc:	b.eq	4218a4 <feof@plt+0x1eed4>  // b.none
  421800:	cmp	w3, #0x5
  421804:	b.ne	4218c8 <feof@plt+0x1eef8>  // b.any
  421808:	ldp	x14, x12, [x20]
  42180c:	ldp	x15, x13, [x21]
  421810:	ldrb	w8, [x20, #16]
  421814:	subs	x10, x12, x13
  421818:	cset	w11, cc  // cc = lo, ul, last
  42181c:	cbz	w8, 4218fc <feof@plt+0x1ef2c>
  421820:	mov	w8, #0x1                   	// #1
  421824:	b	421900 <feof@plt+0x1ef30>
  421828:	ldrb	w10, [x21, #16]
  42182c:	ldr	x8, [x21]
  421830:	cbnz	w10, 421b20 <feof@plt+0x1f150>
  421834:	ldr	x11, [x21, #8]
  421838:	subs	x14, x9, #0x40
  42183c:	mov	x10, #0xffffffffffffffbf    	// #-65
  421840:	csinv	x10, x10, xzr, hi  // hi = pmore
  421844:	csel	x12, x8, x11, hi  // hi = pmore
  421848:	add	x10, x9, x10
  42184c:	lsr	x10, x12, x10
  421850:	tbz	w10, #0, 421b20 <feof@plt+0x1f150>
  421854:	mov	x10, x21
  421858:	ldr	w13, [x10, #18]!
  42185c:	cmp	w3, #0xd
  421860:	mov	w12, #0xc                   	// #12
  421864:	neg	x15, x8
  421868:	ldrh	w16, [x10, #4]
  42186c:	cinc	w3, w12, ne  // ne = any
  421870:	cmp	x11, #0x0
  421874:	csinv	x12, x15, x8, eq  // eq = none
  421878:	cmp	x9, #0x41
  42187c:	stur	w13, [x29, #-16]
  421880:	neg	x13, x11
  421884:	sturh	w16, [x29, #-12]
  421888:	b.cc	421a14 <feof@plt+0x1f044>  // b.lo, b.ul, b.last
  42188c:	cmp	x14, #0x3f
  421890:	b.hi	421ae0 <feof@plt+0x1f110>  // b.pmore
  421894:	mov	x15, #0xffffffffffffffff    	// #-1
  421898:	lsl	x14, x15, x14
  42189c:	bic	x12, x12, x14
  4218a0:	b	421ae0 <feof@plt+0x1f110>
  4218a4:	ldp	x15, x12, [x20]
  4218a8:	ldp	x14, x13, [x21]
  4218ac:	ldrb	w8, [x20, #16]
  4218b0:	adds	x10, x13, x12
  4218b4:	add	x11, x14, x15
  4218b8:	cinc	x11, x11, cs  // cs = hs, nlast
  4218bc:	cbz	w8, 42194c <feof@plt+0x1ef7c>
  4218c0:	mov	w8, #0x1                   	// #1
  4218c4:	b	421950 <feof@plt+0x1ef80>
  4218c8:	ldrb	w8, [x0, #1154]
  4218cc:	cbz	w8, 4218f0 <feof@plt+0x1ef20>
  4218d0:	ldrb	w8, [x0, #1152]
  4218d4:	cbz	w8, 4218e0 <feof@plt+0x1ef10>
  4218d8:	ldr	w8, [x0, #28]
  4218dc:	cbnz	w8, 4218f0 <feof@plt+0x1ef20>
  4218e0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  4218e4:	add	x2, x2, #0xa30
  4218e8:	mov	w1, #0x15                  	// #21
  4218ec:	bl	41e064 <feof@plt+0x1b694>
  4218f0:	ldr	x8, [x21, #16]
  4218f4:	ldr	q0, [x21]
  4218f8:	b	421e6c <feof@plt+0x1f49c>
  4218fc:	ldrb	w8, [x21, #16]
  421900:	ldr	w16, [x29, #24]
  421904:	ldrh	w17, [x29, #28]
  421908:	cmp	x9, #0x41
  42190c:	str	w16, [sp, #16]
  421910:	strh	w17, [sp, #20]
  421914:	b.cc	42193c <feof@plt+0x1ef6c>  // b.lo, b.ul, b.last
  421918:	sub	x17, x14, x15
  42191c:	sub	x16, x9, #0x40
  421920:	cmp	x16, #0x3f
  421924:	sub	x11, x17, x11
  421928:	b.hi	4219a4 <feof@plt+0x1efd4>  // b.pmore
  42192c:	mov	x17, #0xffffffffffffffff    	// #-1
  421930:	lsl	x16, x17, x16
  421934:	bic	x11, x11, x16
  421938:	b	4219a4 <feof@plt+0x1efd4>
  42193c:	cmp	x9, #0x40
  421940:	b.ne	421994 <feof@plt+0x1efc4>  // b.any
  421944:	mov	x11, xzr
  421948:	b	4219a4 <feof@plt+0x1efd4>
  42194c:	ldrb	w8, [x21, #16]
  421950:	ldr	w16, [x29, #24]
  421954:	ldrh	w17, [x29, #28]
  421958:	cmp	x9, #0x41
  42195c:	str	w16, [sp, #8]
  421960:	strh	w17, [sp, #12]
  421964:	b.cc	421984 <feof@plt+0x1efb4>  // b.lo, b.ul, b.last
  421968:	sub	x16, x9, #0x40
  42196c:	cmp	x16, #0x3f
  421970:	b.hi	4219e4 <feof@plt+0x1f014>  // b.pmore
  421974:	mov	x17, #0xffffffffffffffff    	// #-1
  421978:	lsl	x16, x17, x16
  42197c:	bic	x11, x11, x16
  421980:	b	4219e4 <feof@plt+0x1f014>
  421984:	cmp	x9, #0x40
  421988:	b.ne	4219d4 <feof@plt+0x1f004>  // b.any
  42198c:	mov	x11, xzr
  421990:	b	4219e4 <feof@plt+0x1f014>
  421994:	mov	x16, #0xffffffffffffffff    	// #-1
  421998:	lsl	x16, x16, x9
  42199c:	mov	x11, xzr
  4219a0:	bic	x10, x10, x16
  4219a4:	ldr	w16, [sp, #16]
  4219a8:	ldrh	w17, [sp, #20]
  4219ac:	str	w16, [x29, #24]
  4219b0:	strh	w17, [x29, #28]
  4219b4:	cbnz	w8, 421aac <feof@plt+0x1f0dc>
  4219b8:	subs	x16, x9, #0x41
  4219bc:	b.cc	421a24 <feof@plt+0x1f054>  // b.lo, b.ul, b.last
  4219c0:	mov	w12, #0x1                   	// #1
  4219c4:	lsl	x13, x12, x16
  4219c8:	and	x12, x14, x13
  4219cc:	and	x13, x15, x13
  4219d0:	b	421a38 <feof@plt+0x1f068>
  4219d4:	mov	x16, #0xffffffffffffffff    	// #-1
  4219d8:	lsl	x16, x16, x9
  4219dc:	mov	x11, xzr
  4219e0:	bic	x10, x10, x16
  4219e4:	ldr	w16, [sp, #8]
  4219e8:	ldrh	w17, [sp, #12]
  4219ec:	str	w16, [x29, #24]
  4219f0:	strh	w17, [x29, #28]
  4219f4:	cbnz	w8, 421aac <feof@plt+0x1f0dc>
  4219f8:	subs	x16, x9, #0x41
  4219fc:	b.cc	421a80 <feof@plt+0x1f0b0>  // b.lo, b.ul, b.last
  421a00:	mov	w12, #0x1                   	// #1
  421a04:	lsl	x13, x12, x16
  421a08:	and	x12, x15, x13
  421a0c:	and	x13, x14, x13
  421a10:	b	421a94 <feof@plt+0x1f0c4>
  421a14:	cmp	x9, #0x40
  421a18:	b.ne	421ad0 <feof@plt+0x1f100>  // b.any
  421a1c:	mov	x12, xzr
  421a20:	b	421ae0 <feof@plt+0x1f110>
  421a24:	sub	x14, x9, #0x1
  421a28:	mov	w15, #0x1                   	// #1
  421a2c:	lsl	x14, x15, x14
  421a30:	and	x12, x12, x14
  421a34:	and	x13, x13, x14
  421a38:	cmp	x12, #0x0
  421a3c:	cset	w14, eq  // eq = none
  421a40:	cmp	x13, #0x0
  421a44:	cset	w13, eq  // eq = none
  421a48:	cmp	w14, w13
  421a4c:	b.eq	421aac <feof@plt+0x1f0dc>  // b.none
  421a50:	cmp	x12, #0x0
  421a54:	mov	x12, #0xffffffffffffffbf    	// #-65
  421a58:	cset	w13, eq  // eq = none
  421a5c:	cmp	x9, #0x40
  421a60:	csinv	x12, x12, xzr, hi  // hi = pmore
  421a64:	csel	x14, x11, x10, hi  // hi = pmore
  421a68:	add	x9, x9, x12
  421a6c:	lsr	x9, x14, x9
  421a70:	tst	x9, #0x1
  421a74:	cset	w9, eq  // eq = none
  421a78:	eor	w9, w13, w9
  421a7c:	b	421ab0 <feof@plt+0x1f0e0>
  421a80:	sub	x14, x9, #0x1
  421a84:	mov	w15, #0x1                   	// #1
  421a88:	lsl	x14, x15, x14
  421a8c:	and	x12, x12, x14
  421a90:	and	x13, x13, x14
  421a94:	cmp	x12, #0x0
  421a98:	cset	w14, eq  // eq = none
  421a9c:	cmp	x13, #0x0
  421aa0:	cset	w13, eq  // eq = none
  421aa4:	eor	w13, w14, w13
  421aa8:	tbz	w13, #0, 421a50 <feof@plt+0x1f080>
  421aac:	mov	w9, wzr
  421ab0:	stp	x11, x10, [x19]
  421ab4:	ldrh	w10, [x29, #28]
  421ab8:	ldr	w11, [x29, #24]
  421abc:	strb	w8, [x19, #16]
  421ac0:	strb	w9, [x19, #17]
  421ac4:	strh	w10, [x19, #22]
  421ac8:	stur	w11, [x19, #18]
  421acc:	b	421e84 <feof@plt+0x1f4b4>
  421ad0:	mov	x14, #0xffffffffffffffff    	// #-1
  421ad4:	lsl	x14, x14, x9
  421ad8:	mov	x12, xzr
  421adc:	bic	x13, x13, x14
  421ae0:	cmp	x13, x11
  421ae4:	orr	x11, x12, x13
  421ae8:	stp	x12, x13, [x21]
  421aec:	cset	w13, eq  // eq = none
  421af0:	cmp	x12, x8
  421af4:	cset	w8, eq  // eq = none
  421af8:	cmp	x11, #0x0
  421afc:	and	w8, w13, w8
  421b00:	cset	w11, ne  // ne = any
  421b04:	and	w8, w11, w8
  421b08:	strb	w8, [x21, #17]
  421b0c:	ldurh	w8, [x29, #-12]
  421b10:	ldur	w11, [x29, #-16]
  421b14:	strh	w8, [x10, #4]
  421b18:	mov	x8, x12
  421b1c:	str	w11, [x10]
  421b20:	cbz	x8, 421b68 <feof@plt+0x1f198>
  421b24:	mov	x8, #0xffffffffffffffff    	// #-1
  421b28:	cmp	w3, #0xd
  421b2c:	b.ne	421b74 <feof@plt+0x1f1a4>  // b.any
  421b30:	ldr	x10, [x20, #16]
  421b34:	ldr	q0, [x20]
  421b38:	cmp	x8, x9
  421b3c:	str	x10, [sp, #48]
  421b40:	str	q0, [sp, #32]
  421b44:	b.cs	421bd8 <feof@plt+0x1f208>  // b.hs, b.nlast
  421b48:	ldp	x10, x11, [sp, #32]
  421b4c:	subs	x12, x8, #0x40
  421b50:	b.cc	421bf0 <feof@plt+0x1f220>  // b.lo, b.ul, b.last
  421b54:	mov	x13, xzr
  421b58:	mov	x14, x11
  421b5c:	mov	x15, x12
  421b60:	stp	x11, xzr, [sp, #32]
  421b64:	b	421bfc <feof@plt+0x1f22c>
  421b68:	ldr	x8, [x21, #8]
  421b6c:	cmp	w3, #0xd
  421b70:	b.eq	421b30 <feof@plt+0x1f160>  // b.none
  421b74:	ldp	x14, x13, [x20]
  421b78:	ldrb	w11, [x20, #16]
  421b7c:	subs	x12, x9, #0x40
  421b80:	mov	x15, #0xffffffffffffffbf    	// #-65
  421b84:	mov	x10, x20
  421b88:	csinv	x15, x15, xzr, hi  // hi = pmore
  421b8c:	ldr	w16, [x10, #18]!
  421b90:	ldrh	w17, [x20, #22]
  421b94:	csel	x18, x14, x13, hi  // hi = pmore
  421b98:	cmp	w11, #0x0
  421b9c:	add	x11, x9, x15
  421ba0:	lsr	x11, x18, x11
  421ba4:	cset	w15, eq  // eq = none
  421ba8:	and	w11, w11, w15
  421bac:	cmp	x8, x9
  421bb0:	sbfx	x11, x11, #0, #1
  421bb4:	strh	w17, [sp, #28]
  421bb8:	str	w16, [sp, #24]
  421bbc:	b.cs	421be8 <feof@plt+0x1f218>  // b.hs, b.nlast
  421bc0:	cmp	x9, #0x3f
  421bc4:	b.hi	421c3c <feof@plt+0x1f26c>  // b.pmore
  421bc8:	lsl	x14, x11, x9
  421bcc:	orr	x13, x14, x13
  421bd0:	mov	x14, x11
  421bd4:	b	421c4c <feof@plt+0x1f27c>
  421bd8:	ldrb	w8, [sp, #48]
  421bdc:	cbz	w8, 421c94 <feof@plt+0x1f2c4>
  421be0:	mov	w8, wzr
  421be4:	b	421ca4 <feof@plt+0x1f2d4>
  421be8:	mov	x8, x11
  421bec:	b	421cb4 <feof@plt+0x1f2e4>
  421bf0:	mov	x13, x11
  421bf4:	mov	x14, x10
  421bf8:	mov	x15, x8
  421bfc:	cbz	x15, 421c18 <feof@plt+0x1f248>
  421c00:	neg	x16, x15
  421c04:	lsl	x14, x14, x15
  421c08:	lsr	x16, x13, x16
  421c0c:	lsl	x13, x13, x15
  421c10:	orr	x14, x16, x14
  421c14:	stp	x14, x13, [sp, #32]
  421c18:	subs	x16, x9, #0x41
  421c1c:	b.cc	421c84 <feof@plt+0x1f2b4>  // b.lo, b.ul, b.last
  421c20:	sub	x15, x9, #0x40
  421c24:	cmp	x15, #0x3f
  421c28:	b.hi	421d48 <feof@plt+0x1f378>  // b.pmore
  421c2c:	mov	x17, #0xffffffffffffffff    	// #-1
  421c30:	lsl	x15, x17, x15
  421c34:	bic	x14, x14, x15
  421c38:	b	421d48 <feof@plt+0x1f378>
  421c3c:	cmp	x9, #0x7f
  421c40:	b.hi	421c4c <feof@plt+0x1f27c>  // b.pmore
  421c44:	lsl	x15, x11, x9
  421c48:	orr	x14, x15, x14
  421c4c:	sub	x16, x8, #0x40
  421c50:	cmp	x8, #0x3f
  421c54:	csel	x15, x11, x14, hi  // hi = pmore
  421c58:	csel	x16, x16, x8, hi  // hi = pmore
  421c5c:	csel	x8, x14, x13, hi  // hi = pmore
  421c60:	cbz	x16, 421cb0 <feof@plt+0x1f2e0>
  421c64:	neg	x13, x16
  421c68:	lsr	x8, x8, x16
  421c6c:	lsr	x14, x15, x16
  421c70:	lsl	x15, x15, x13
  421c74:	lsl	x11, x11, x13
  421c78:	orr	x8, x8, x15
  421c7c:	orr	x11, x14, x11
  421c80:	b	421cb4 <feof@plt+0x1f2e4>
  421c84:	cmp	x9, #0x40
  421c88:	b.ne	421d38 <feof@plt+0x1f368>  // b.any
  421c8c:	mov	x14, xzr
  421c90:	b	421d48 <feof@plt+0x1f378>
  421c94:	ldp	x9, x8, [sp, #32]
  421c98:	orr	x8, x9, x8
  421c9c:	cmp	x8, #0x0
  421ca0:	cset	w8, ne  // ne = any
  421ca4:	strb	w8, [sp, #49]
  421ca8:	stp	xzr, xzr, [sp, #32]
  421cac:	b	421e64 <feof@plt+0x1f494>
  421cb0:	mov	x11, x15
  421cb4:	ldr	w13, [sp, #24]
  421cb8:	ldrh	w14, [sp, #28]
  421cbc:	cmp	x9, #0x41
  421cc0:	str	w13, [x29, #24]
  421cc4:	strh	w14, [x29, #28]
  421cc8:	b.cc	421ce4 <feof@plt+0x1f314>  // b.lo, b.ul, b.last
  421ccc:	cmp	x12, #0x3f
  421cd0:	b.hi	421d04 <feof@plt+0x1f334>  // b.pmore
  421cd4:	mov	x9, #0xffffffffffffffff    	// #-1
  421cd8:	lsl	x9, x9, x12
  421cdc:	bic	x11, x11, x9
  421ce0:	b	421d04 <feof@plt+0x1f334>
  421ce4:	cmp	x9, #0x40
  421ce8:	b.ne	421cf4 <feof@plt+0x1f324>  // b.any
  421cec:	mov	x11, xzr
  421cf0:	b	421d04 <feof@plt+0x1f334>
  421cf4:	mov	x12, #0xffffffffffffffff    	// #-1
  421cf8:	lsl	x9, x12, x9
  421cfc:	mov	x11, xzr
  421d00:	bic	x8, x8, x9
  421d04:	ldr	w9, [x29, #24]
  421d08:	ldrh	w12, [x29, #28]
  421d0c:	str	w9, [sp, #24]
  421d10:	strh	w12, [sp, #28]
  421d14:	stur	w9, [x29, #-8]
  421d18:	sturh	w12, [x29, #-4]
  421d1c:	stp	x11, x8, [x20]
  421d20:	and	w8, w12, #0xffff
  421d24:	mov	w9, w9
  421d28:	strb	wzr, [x20, #17]
  421d2c:	strh	w8, [x10, #4]
  421d30:	str	w9, [x10]
  421d34:	b	421e74 <feof@plt+0x1f4a4>
  421d38:	mov	x15, #0xffffffffffffffff    	// #-1
  421d3c:	lsl	x15, x15, x9
  421d40:	mov	x14, xzr
  421d44:	bic	x13, x13, x15
  421d48:	ldrb	w15, [sp, #48]
  421d4c:	stp	x14, x13, [sp, #32]
  421d50:	cbz	w15, 421d5c <feof@plt+0x1f38c>
  421d54:	strb	wzr, [sp, #49]
  421d58:	b	421e64 <feof@plt+0x1f494>
  421d5c:	ldur	w17, [sp, #50]
  421d60:	ldrh	w18, [sp, #54]
  421d64:	subs	x15, x9, #0x40
  421d68:	stur	w17, [x29, #-8]
  421d6c:	sturh	w18, [x29, #-4]
  421d70:	b.ls	421d8c <feof@plt+0x1f3bc>  // b.plast
  421d74:	lsr	x16, x14, x16
  421d78:	tst	x16, #0x1
  421d7c:	csetm	x17, ne  // ne = any
  421d80:	cmp	x9, #0x7f
  421d84:	b.ls	421da4 <feof@plt+0x1f3d4>  // b.plast
  421d88:	b	421dbc <feof@plt+0x1f3ec>
  421d8c:	sub	x16, x9, #0x1
  421d90:	lsr	x16, x13, x16
  421d94:	tst	x16, #0x1
  421d98:	csetm	x17, ne  // ne = any
  421d9c:	cmp	x9, #0x40
  421da0:	b.ne	421db0 <feof@plt+0x1f3e0>  // b.any
  421da4:	lsl	x16, x17, x9
  421da8:	orr	x14, x16, x14
  421dac:	b	421dbc <feof@plt+0x1f3ec>
  421db0:	lsl	x14, x17, x9
  421db4:	orr	x13, x14, x13
  421db8:	mov	x14, x17
  421dbc:	cmp	x8, #0x3f
  421dc0:	csel	x16, x17, x14, hi  // hi = pmore
  421dc4:	csel	x12, x12, x8, hi  // hi = pmore
  421dc8:	csel	x8, x14, x13, hi  // hi = pmore
  421dcc:	cbz	x12, 421dec <feof@plt+0x1f41c>
  421dd0:	neg	x13, x12
  421dd4:	lsr	x8, x8, x12
  421dd8:	lsr	x12, x16, x12
  421ddc:	lsl	x14, x16, x13
  421de0:	lsl	x13, x17, x13
  421de4:	orr	x8, x8, x14
  421de8:	orr	x16, x12, x13
  421dec:	ldur	w12, [x29, #-8]
  421df0:	ldurh	w13, [x29, #-4]
  421df4:	cmp	x9, #0x41
  421df8:	str	w12, [x29, #24]
  421dfc:	strh	w13, [x29, #28]
  421e00:	b.cc	421e1c <feof@plt+0x1f44c>  // b.lo, b.ul, b.last
  421e04:	cmp	x15, #0x3f
  421e08:	b.hi	421e3c <feof@plt+0x1f46c>  // b.pmore
  421e0c:	mov	x9, #0xffffffffffffffff    	// #-1
  421e10:	lsl	x9, x9, x15
  421e14:	bic	x16, x16, x9
  421e18:	b	421e3c <feof@plt+0x1f46c>
  421e1c:	cmp	x9, #0x40
  421e20:	b.ne	421e2c <feof@plt+0x1f45c>  // b.any
  421e24:	mov	x16, xzr
  421e28:	b	421e3c <feof@plt+0x1f46c>
  421e2c:	mov	x12, #0xffffffffffffffff    	// #-1
  421e30:	lsl	x9, x12, x9
  421e34:	mov	x16, xzr
  421e38:	bic	x8, x8, x9
  421e3c:	ldr	w9, [x29, #24]
  421e40:	ldrh	w12, [x29, #28]
  421e44:	cmp	x11, x8
  421e48:	cset	w8, ne  // ne = any
  421e4c:	cmp	x10, x16
  421e50:	cset	w10, ne  // ne = any
  421e54:	orr	w8, w10, w8
  421e58:	stur	w9, [x29, #-8]
  421e5c:	sturh	w12, [x29, #-4]
  421e60:	strb	w8, [sp, #49]
  421e64:	ldr	x8, [sp, #48]
  421e68:	ldr	q0, [sp, #32]
  421e6c:	str	x8, [x20, #16]
  421e70:	str	q0, [x20]
  421e74:	ldr	x8, [x20, #16]
  421e78:	ldr	q0, [x20]
  421e7c:	str	x8, [x19, #16]
  421e80:	str	q0, [x19]
  421e84:	ldp	x20, x19, [sp, #112]
  421e88:	ldr	x21, [sp, #96]
  421e8c:	ldp	x29, x30, [sp, #80]
  421e90:	add	sp, sp, #0x80
  421e94:	ret
  421e98:	ldr	w8, [x0, #204]
  421e9c:	cmp	w8, #0x0
  421ea0:	cset	w0, ne  // ne = any
  421ea4:	ret
  421ea8:	sub	sp, sp, #0x130
  421eac:	stp	x24, x23, [sp, #256]
  421eb0:	stp	x22, x21, [sp, #272]
  421eb4:	stp	x20, x19, [sp, #288]
  421eb8:	mov	w21, w6
  421ebc:	mov	w23, w4
  421ec0:	mov	x22, x2
  421ec4:	mov	x24, x1
  421ec8:	mov	x19, x0
  421ecc:	stp	x29, x30, [sp, #208]
  421ed0:	stp	x28, x27, [sp, #224]
  421ed4:	stp	x26, x25, [sp, #240]
  421ed8:	add	x29, sp, #0xd0
  421edc:	stp	w5, w3, [sp, #64]
  421ee0:	cbnz	x2, 421efc <feof@plt+0x1f52c>
  421ee4:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0xba68>
  421ee8:	add	x3, x3, #0xa69
  421eec:	mov	w1, #0x4                   	// #4
  421ef0:	mov	x0, x19
  421ef4:	mov	w2, w21
  421ef8:	bl	41e6b4 <feof@plt+0x1bce4>
  421efc:	ldr	x20, [x19, #296]
  421f00:	mov	x0, x24
  421f04:	bl	44fea8 <feof@plt+0x4d4d8>
  421f08:	mov	w2, w0
  421f0c:	mov	w3, #0x1                   	// #1
  421f10:	mov	x0, x20
  421f14:	mov	x1, x24
  421f18:	bl	44f860 <feof@plt+0x4ce90>
  421f1c:	ldr	x8, [x0]
  421f20:	cbz	x8, 421f38 <feof@plt+0x1f568>
  421f24:	ldr	x9, [x8, #8]
  421f28:	cmp	x9, x22
  421f2c:	b.eq	421fa0 <feof@plt+0x1f5d0>  // b.none
  421f30:	ldr	x8, [x8]
  421f34:	cbnz	x8, 421f24 <feof@plt+0x1f554>
  421f38:	str	x0, [sp, #48]
  421f3c:	mov	w0, #0x1                   	// #1
  421f40:	mov	w1, #0xd8                  	// #216
  421f44:	stp	w21, w23, [sp, #16]
  421f48:	mov	w20, #0x1                   	// #1
  421f4c:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  421f50:	ldr	x8, [x19]
  421f54:	mov	w9, #0xffffffff            	// #-1
  421f58:	mov	x21, x0
  421f5c:	mov	x28, x0
  421f60:	cmp	x8, #0x0
  421f64:	cset	w8, eq  // eq = none
  421f68:	str	w9, [x0, #200]
  421f6c:	strb	w8, [x0, #212]
  421f70:	mov	x0, x24
  421f74:	str	x22, [x28, #64]!
  421f78:	str	x24, [sp, #8]
  421f7c:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  421f80:	ldr	w8, [sp, #64]
  421f84:	str	x0, [x21]
  421f88:	tbnz	w8, #0, 421fac <feof@plt+0x1f5dc>
  421f8c:	ldr	x8, [x19]
  421f90:	cbz	x8, 421fa8 <feof@plt+0x1f5d8>
  421f94:	ldr	x8, [x8, #80]
  421f98:	ldrb	w20, [x8, #214]
  421f9c:	b	421fac <feof@plt+0x1f5dc>
  421fa0:	ldr	x21, [x8, #24]
  421fa4:	b	422790 <feof@plt+0x1fdc0>
  421fa8:	mov	w20, wzr
  421fac:	add	x8, x19, #0x148
  421fb0:	str	x22, [sp, #56]
  421fb4:	str	wzr, [sp, #24]
  421fb8:	str	xzr, [sp, #32]
  421fbc:	strb	w20, [x21, #214]
  421fc0:	str	x8, [sp, #40]
  421fc4:	ldr	w8, [sp, #68]
  421fc8:	tbnz	w8, #0, 4224e4 <feof@plt+0x1fb14>
  421fcc:	ldrb	w8, [x19, #1145]
  421fd0:	cbz	w8, 4220ec <feof@plt+0x1f71c>
  421fd4:	ldr	x23, [x21, #64]
  421fd8:	ldr	x20, [x21]
  421fdc:	b	42200c <feof@plt+0x1f63c>
  421fe0:	mov	x0, x27
  421fe4:	mov	x1, x20
  421fe8:	mov	x2, x25
  421fec:	bl	402390 <memcpy@plt>
  421ff0:	strb	wzr, [x26, x22]
  421ff4:	ldrb	w2, [x23, #20]
  421ff8:	mov	x0, x19
  421ffc:	mov	x1, x26
  422000:	bl	423eb0 <feof@plt+0x214e0>
  422004:	mov	x23, x0
  422008:	add	x20, x24, #0x1
  42200c:	ldr	x8, [x23, #32]
  422010:	cbz	x8, 422020 <feof@plt+0x1f650>
  422014:	ldr	x0, [x8]
  422018:	cbnz	x0, 422034 <feof@plt+0x1f664>
  42201c:	b	422058 <feof@plt+0x1f688>
  422020:	mov	x0, x23
  422024:	bl	423bfc <feof@plt+0x2122c>
  422028:	ldr	x8, [x23, #32]
  42202c:	ldr	x0, [x8]
  422030:	cbz	x0, 422058 <feof@plt+0x1f688>
  422034:	mov	x22, xzr
  422038:	mov	x1, x20
  42203c:	bl	44eda0 <feof@plt+0x4c3d0>
  422040:	cbz	w0, 4220d4 <feof@plt+0x1f704>
  422044:	ldr	x8, [x23, #32]
  422048:	add	x8, x8, x22
  42204c:	ldr	x0, [x8, #16]
  422050:	add	x22, x22, #0x10
  422054:	cbnz	x0, 422038 <feof@plt+0x1f668>
  422058:	ldrb	w8, [x20]
  42205c:	cmp	w8, #0x2f
  422060:	b.eq	4220ec <feof@plt+0x1f71c>  // b.none
  422064:	mov	w1, #0x2f                  	// #47
  422068:	mov	x0, x20
  42206c:	bl	402500 <strchr@plt>
  422070:	cbz	x0, 4220ec <feof@plt+0x1f71c>
  422074:	mov	x24, x0
  422078:	subs	x8, x0, x20
  42207c:	b.eq	4220ec <feof@plt+0x1f71c>  // b.none
  422080:	ldr	w9, [x23, #16]
  422084:	add	x25, x8, #0x1
  422088:	add	x22, x25, x9
  42208c:	add	x0, x22, #0x2
  422090:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  422094:	ldr	w2, [x23, #16]
  422098:	ldr	x1, [x23, #8]
  42209c:	mov	x26, x0
  4220a0:	add	x27, x0, x2
  4220a4:	bl	402390 <memcpy@plt>
  4220a8:	ldr	w8, [x23, #16]
  4220ac:	cbz	w8, 421fe0 <feof@plt+0x1f610>
  4220b0:	ldr	x9, [x23, #8]
  4220b4:	sub	w8, w8, #0x1
  4220b8:	ldrb	w8, [x9, w8, uxtw]
  4220bc:	cmp	w8, #0x2f
  4220c0:	b.eq	421fe0 <feof@plt+0x1f610>  // b.none
  4220c4:	mov	w8, #0x2f                  	// #47
  4220c8:	strb	w8, [x27], #1
  4220cc:	add	x22, x22, #0x1
  4220d0:	b	421fe0 <feof@plt+0x1f610>
  4220d4:	ldr	x8, [x23, #32]
  4220d8:	add	x8, x8, x22
  4220dc:	ldr	x0, [x8, #8]
  4220e0:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  4220e4:	mov	x25, x0
  4220e8:	cbnz	x0, 422110 <feof@plt+0x1f740>
  4220ec:	ldr	x25, [x21, #64]
  4220f0:	ldr	x20, [x21]
  4220f4:	ldr	x8, [x25, #40]
  4220f8:	cbz	x8, 422160 <feof@plt+0x1f790>
  4220fc:	mov	x0, x20
  422100:	mov	x1, x25
  422104:	blr	x8
  422108:	mov	x25, x0
  42210c:	cbz	x25, 422234 <feof@plt+0x1f864>
  422110:	ldrb	w8, [x19, #1245]
  422114:	cbz	w8, 4221b8 <feof@plt+0x1f7e8>
  422118:	ldr	x8, [x28]
  42211c:	ldrb	w8, [x8, #20]
  422120:	cbz	w8, 4221b8 <feof@plt+0x1f7e8>
  422124:	mov	x0, x25
  422128:	bl	4501e8 <feof@plt+0x4d818>
  42212c:	mov	x20, x0
  422130:	cbz	x0, 4221b0 <feof@plt+0x1f7e0>
  422134:	mov	x0, x20
  422138:	bl	402420 <strlen@plt>
  42213c:	mov	x23, x0
  422140:	mov	x0, x25
  422144:	bl	402420 <strlen@plt>
  422148:	cmp	x23, x0
  42214c:	b.cs	4221b0 <feof@plt+0x1f7e0>  // b.hs, b.nlast
  422150:	mov	x0, x25
  422154:	bl	4024c0 <free@plt>
  422158:	mov	x25, x20
  42215c:	b	4221b8 <feof@plt+0x1f7e8>
  422160:	ldr	w23, [x25, #16]
  422164:	mov	x0, x20
  422168:	bl	402420 <strlen@plt>
  42216c:	add	x22, x23, #0x1
  422170:	add	x24, x0, #0x1
  422174:	add	x0, x24, x22
  422178:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42217c:	ldr	x1, [x25, #8]
  422180:	mov	x2, x23
  422184:	mov	x25, x0
  422188:	bl	402390 <memcpy@plt>
  42218c:	cbz	w23, 42221c <feof@plt+0x1f84c>
  422190:	add	x8, x23, x25
  422194:	ldurb	w8, [x8, #-1]
  422198:	cmp	w8, #0x2f
  42219c:	b.eq	422220 <feof@plt+0x1f850>  // b.none
  4221a0:	mov	w8, #0x2f                  	// #47
  4221a4:	strb	w8, [x25, x23]
  4221a8:	mov	x23, x22
  4221ac:	b	422220 <feof@plt+0x1f850>
  4221b0:	mov	x0, x20
  4221b4:	bl	4024c0 <free@plt>
  4221b8:	mov	x0, x25
  4221bc:	bl	44fea8 <feof@plt+0x4d4d8>
  4221c0:	ldr	x8, [x19, #320]
  4221c4:	mov	w23, w0
  4221c8:	mov	x1, x25
  4221cc:	mov	w2, w23
  4221d0:	mov	x0, x8
  4221d4:	bl	44f700 <feof@plt+0x4cd30>
  4221d8:	cbz	x0, 4221e8 <feof@plt+0x1f818>
  4221dc:	mov	w8, #0x2                   	// #2
  4221e0:	str	w8, [x21, #204]
  4221e4:	b	422484 <feof@plt+0x1fab4>
  4221e8:	ldr	x8, [x21]
  4221ec:	str	x25, [x21, #8]
  4221f0:	ldrb	w8, [x8]
  4221f4:	cbz	w8, 4223b8 <feof@plt+0x1f9e8>
  4221f8:	ldr	x8, [x19, #968]
  4221fc:	cbz	x8, 4223b8 <feof@plt+0x1f9e8>
  422200:	ldr	x8, [x19, #280]
  422204:	cbz	x8, 42224c <feof@plt+0x1f87c>
  422208:	ldrb	w9, [x8, #214]
  42220c:	cbz	w9, 422244 <feof@plt+0x1f874>
  422210:	ldr	x8, [x8, #32]
  422214:	cbnz	x8, 422208 <feof@plt+0x1f838>
  422218:	b	42224c <feof@plt+0x1f87c>
  42221c:	mov	x23, xzr
  422220:	add	x0, x25, x23
  422224:	mov	x1, x20
  422228:	mov	x2, x24
  42222c:	bl	402390 <memcpy@plt>
  422230:	cbnz	x25, 422110 <feof@plt+0x1f740>
  422234:	mov	w8, #0x2                   	// #2
  422238:	str	w8, [x21, #204]
  42223c:	str	xzr, [x21, #8]
  422240:	b	422484 <feof@plt+0x1fab4>
  422244:	ldrb	w8, [x8, #212]
  422248:	cbz	w8, 4223b8 <feof@plt+0x1f9e8>
  42224c:	mov	x0, x25
  422250:	bl	402420 <strlen@plt>
  422254:	add	x22, x0, #0x5
  422258:	mov	x27, x0
  42225c:	mov	x0, x22
  422260:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  422264:	mov	x1, x25
  422268:	mov	x2, x27
  42226c:	mov	x24, x0
  422270:	bl	402390 <memcpy@plt>
  422274:	mov	w9, #0x672e                	// #26414
  422278:	add	x8, x24, x27
  42227c:	movk	w9, #0x6863, lsl #16
  422280:	add	x2, sp, #0x48
  422284:	mov	w0, wzr
  422288:	mov	x1, x24
  42228c:	str	w9, [x8]
  422290:	strb	wzr, [x8, #4]
  422294:	bl	402830 <__xstat@plt>
  422298:	cbnz	w0, 4223b0 <feof@plt+0x1f9e0>
  42229c:	ldr	w8, [sp, #88]
  4222a0:	and	w8, w8, #0xf000
  4222a4:	cmp	w8, #0x4, lsl #12
  4222a8:	b.ne	42237c <feof@plt+0x1f9ac>  // b.any
  4222ac:	mov	x0, x24
  4222b0:	bl	402710 <opendir@plt>
  4222b4:	cbz	x0, 4223a8 <feof@plt+0x1f9d8>
  4222b8:	mov	x26, x0
  4222bc:	add	x8, x27, x24
  4222c0:	mov	w9, #0x2f                  	// #47
  4222c4:	strb	w9, [x8, #4]
  4222c8:	str	x22, [sp, #24]
  4222cc:	mov	x0, x26
  4222d0:	bl	4026c0 <readdir@plt>
  4222d4:	cbnz	x0, 4222e8 <feof@plt+0x1f918>
  4222d8:	b	422398 <feof@plt+0x1f9c8>
  4222dc:	mov	x0, x26
  4222e0:	bl	4026c0 <readdir@plt>
  4222e4:	cbz	x0, 422398 <feof@plt+0x1f9c8>
  4222e8:	add	x27, x0, #0x13
  4222ec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  4222f0:	mov	x0, x27
  4222f4:	add	x1, x1, #0x20d
  4222f8:	bl	402820 <strcmp@plt>
  4222fc:	cbz	w0, 4222dc <feof@plt+0x1f90c>
  422300:	mov	x0, x27
  422304:	bl	402420 <strlen@plt>
  422308:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  42230c:	mov	x20, x0
  422310:	mov	x0, x27
  422314:	add	x1, x1, #0x20c
  422318:	bl	402820 <strcmp@plt>
  42231c:	cbz	w0, 4222dc <feof@plt+0x1f90c>
  422320:	ldr	x9, [sp, #24]
  422324:	add	x2, x20, #0x1
  422328:	add	x8, x2, x22
  42232c:	cmp	x8, x9
  422330:	b.ls	422354 <feof@plt+0x1f984>  // b.plast
  422334:	add	x8, x9, x20
  422338:	add	x1, x8, #0x41
  42233c:	mov	x0, x24
  422340:	str	x1, [sp, #24]
  422344:	mov	x20, x2
  422348:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42234c:	mov	x2, x20
  422350:	mov	x24, x0
  422354:	add	x0, x24, x22
  422358:	mov	x1, x27
  42235c:	bl	402390 <memcpy@plt>
  422360:	mov	x0, x19
  422364:	mov	x1, x21
  422368:	mov	x2, x24
  42236c:	bl	4240b4 <feof@plt+0x216e4>
  422370:	tbz	w0, #0, 4222cc <feof@plt+0x1f8fc>
  422374:	mov	w20, #0x1                   	// #1
  422378:	b	42239c <feof@plt+0x1f9cc>
  42237c:	mov	x0, x19
  422380:	mov	x1, x21
  422384:	mov	x2, x24
  422388:	bl	4240b4 <feof@plt+0x216e4>
  42238c:	and	w20, w0, #0x1
  422390:	cbz	w20, 4223a8 <feof@plt+0x1f9d8>
  422394:	b	4227cc <feof@plt+0x1fdfc>
  422398:	mov	w20, wzr
  42239c:	mov	x0, x26
  4223a0:	bl	4025a0 <closedir@plt>
  4223a4:	cbnz	w20, 4227cc <feof@plt+0x1fdfc>
  4223a8:	mov	w8, #0x1                   	// #1
  4223ac:	str	w8, [sp, #24]
  4223b0:	mov	x0, x24
  4223b4:	bl	4024c0 <free@plt>
  4223b8:	mov	x0, x21
  4223bc:	bl	4239dc <feof@plt+0x2100c>
  4223c0:	tbnz	w0, #0, 42257c <feof@plt+0x1fbac>
  4223c4:	ldr	w8, [x21, #204]
  4223c8:	cmp	w8, #0x2
  4223cc:	b.ne	422568 <feof@plt+0x1fb98>  // b.any
  4223d0:	mov	x0, x25
  4223d4:	bl	402420 <strlen@plt>
  4223d8:	mov	x20, x0
  4223dc:	ldp	x0, x8, [x19, #352]
  4223e0:	add	x1, x20, #0x1
  4223e4:	sub	x8, x8, x0
  4223e8:	cmp	x8, x1
  4223ec:	b.cs	4223fc <feof@plt+0x1fa2c>  // b.hs, b.nlast
  4223f0:	ldr	x0, [sp, #40]
  4223f4:	bl	45037c <_obstack_newchunk@@Base>
  4223f8:	ldr	x0, [x19, #352]
  4223fc:	mov	x1, x25
  422400:	mov	x2, x20
  422404:	bl	402390 <memcpy@plt>
  422408:	ldr	x8, [x19, #352]
  42240c:	add	x8, x8, x20
  422410:	add	x9, x8, #0x1
  422414:	str	x9, [x19, #352]
  422418:	strb	wzr, [x8]
  42241c:	ldp	x20, x8, [x19, #344]
  422420:	cmp	x8, x20
  422424:	b.ne	422434 <feof@plt+0x1fa64>  // b.any
  422428:	ldrb	w9, [x19, #408]
  42242c:	orr	w9, w9, #0x2
  422430:	strb	w9, [x19, #408]
  422434:	ldr	x9, [x19, #376]
  422438:	ldr	x10, [x19, #336]
  42243c:	ldr	x11, [x19, #360]
  422440:	mov	x0, x25
  422444:	add	x8, x9, x8
  422448:	bic	x8, x8, x9
  42244c:	sub	x12, x11, x10
  422450:	sub	x9, x8, x10
  422454:	cmp	x9, x12
  422458:	csel	x8, x11, x8, hi  // hi = pmore
  42245c:	stp	x8, x8, [x19, #344]
  422460:	bl	4024c0 <free@plt>
  422464:	ldr	x0, [x19, #320]
  422468:	mov	w3, #0x1                   	// #1
  42246c:	mov	x1, x20
  422470:	mov	w2, w23
  422474:	bl	44f860 <feof@plt+0x4ce90>
  422478:	str	x20, [x0]
  42247c:	ldr	x8, [x21]
  422480:	str	x8, [x21, #8]
  422484:	ldr	x8, [x28]
  422488:	ldr	x20, [x8]
  42248c:	str	x20, [x28]
  422490:	cbz	x20, 4224f4 <feof@plt+0x1fb24>
  422494:	ldr	x8, [x19, #208]
  422498:	cmp	x20, x8
  42249c:	b.eq	4224b8 <feof@plt+0x1fae8>  // b.none
  4224a0:	ldr	x8, [x19, #200]
  4224a4:	cmp	x20, x8
  4224a8:	b.ne	421fc4 <feof@plt+0x1f5f4>  // b.any
  4224ac:	mov	w8, #0x1                   	// #1
  4224b0:	str	w8, [sp, #32]
  4224b4:	b	4224c0 <feof@plt+0x1faf0>
  4224b8:	mov	w8, #0x1                   	// #1
  4224bc:	str	w8, [sp, #36]
  4224c0:	ldr	x8, [sp, #48]
  4224c4:	ldr	x22, [x8]
  4224c8:	cbz	x22, 421fc4 <feof@plt+0x1f5f4>
  4224cc:	ldr	x8, [x22, #8]
  4224d0:	cmp	x8, x20
  4224d4:	b.eq	422548 <feof@plt+0x1fb78>  // b.none
  4224d8:	ldr	x22, [x22]
  4224dc:	cbnz	x22, 4224cc <feof@plt+0x1fafc>
  4224e0:	b	421fc4 <feof@plt+0x1f5f4>
  4224e4:	ldr	x22, [sp, #48]
  4224e8:	mov	w24, wzr
  4224ec:	mov	w23, wzr
  4224f0:	b	422620 <feof@plt+0x1fc50>
  4224f4:	ldr	x8, [x19, #984]
  4224f8:	cbz	x8, 422598 <feof@plt+0x1fbc8>
  4224fc:	ldr	x1, [sp, #8]
  422500:	mov	x0, x19
  422504:	mov	x2, x28
  422508:	blr	x8
  42250c:	str	x0, [x21, #8]
  422510:	cbz	x0, 422590 <feof@plt+0x1fbc0>
  422514:	mov	x0, x21
  422518:	bl	4239dc <feof@plt+0x2100c>
  42251c:	tbz	w0, #0, 422588 <feof@plt+0x1fbb8>
  422520:	ldr	x8, [x19, #280]
  422524:	ldr	x1, [sp, #48]
  422528:	str	x8, [x21, #32]
  42252c:	str	x21, [x19, #280]
  422530:	ldr	x8, [x1]
  422534:	cbnz	x8, 422790 <feof@plt+0x1fdc0>
  422538:	str	x21, [x1]
  42253c:	ldr	x0, [x19, #296]
  422540:	bl	44fd30 <feof@plt+0x4d360>
  422544:	b	422790 <feof@plt+0x1fdc0>
  422548:	ldr	x0, [x21]
  42254c:	bl	4024c0 <free@plt>
  422550:	mov	x0, x21
  422554:	bl	4024c0 <free@plt>
  422558:	ldr	x21, [x22, #24]
  42255c:	ldr	x22, [sp, #48]
  422560:	ldp	w23, w24, [sp, #32]
  422564:	b	422630 <feof@plt+0x1fc60>
  422568:	ldr	w3, [sp, #16]
  42256c:	mov	x0, x19
  422570:	mov	x1, x21
  422574:	mov	w2, wzr
  422578:	bl	4227d4 <feof@plt+0x1fe04>
  42257c:	ldr	x22, [sp, #48]
  422580:	ldp	w23, w24, [sp, #32]
  422584:	b	422620 <feof@plt+0x1fc50>
  422588:	ldr	x0, [x21, #8]
  42258c:	bl	4024c0 <free@plt>
  422590:	ldr	x8, [x21]
  422594:	str	x8, [x21, #8]
  422598:	ldr	w8, [sp, #24]
  42259c:	ldr	x22, [sp, #48]
  4225a0:	tst	w8, #0xff
  4225a4:	b.eq	4225e0 <feof@plt+0x1fc10>  // b.none
  4225a8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  4225ac:	add	x2, x2, #0xa85
  4225b0:	mov	w1, #0x3                   	// #3
  4225b4:	mov	x0, x19
  4225b8:	bl	41de04 <feof@plt+0x1b434>
  4225bc:	mov	x0, x19
  4225c0:	bl	41bf58 <feof@plt+0x19588>
  4225c4:	ldrb	w8, [x0, #84]
  4225c8:	cbnz	w8, 4225e0 <feof@plt+0x1fc10>
  4225cc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  4225d0:	add	x2, x2, #0xabd
  4225d4:	mov	w1, #0x3                   	// #3
  4225d8:	mov	x0, x19
  4225dc:	bl	41de04 <feof@plt+0x1b434>
  4225e0:	ldp	w23, w24, [sp, #32]
  4225e4:	ldr	w2, [sp, #20]
  4225e8:	ldr	w8, [sp, #64]
  4225ec:	tbz	w8, #0, 422610 <feof@plt+0x1fc40>
  4225f0:	ldr	x0, [x21]
  4225f4:	bl	4024c0 <free@plt>
  4225f8:	mov	x0, x21
  4225fc:	bl	4024c0 <free@plt>
  422600:	ldr	x8, [x22]
  422604:	cbz	x8, 4227b4 <feof@plt+0x1fde4>
  422608:	mov	x21, xzr
  42260c:	b	422790 <feof@plt+0x1fdc0>
  422610:	ldr	w3, [sp, #16]
  422614:	mov	x0, x19
  422618:	mov	x1, x21
  42261c:	bl	4227d4 <feof@plt+0x1fe04>
  422620:	ldr	x8, [x19, #280]
  422624:	mov	x20, xzr
  422628:	str	x8, [x21, #32]
  42262c:	str	x21, [x19, #280]
  422630:	ldr	x0, [x19, #312]
  422634:	ldr	w8, [x0]
  422638:	cmp	w8, #0x7f
  42263c:	b.ne	42265c <feof@plt+0x1fc8c>  // b.any
  422640:	mov	w0, #0xff0                 	// #4080
  422644:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  422648:	str	wzr, [x0]
  42264c:	ldr	x9, [x19, #312]
  422650:	mov	w8, wzr
  422654:	str	x9, [x0, #8]
  422658:	str	x0, [x19, #312]
  42265c:	add	w9, w8, #0x1
  422660:	str	w9, [x0]
  422664:	ldr	x9, [x22]
  422668:	mov	w8, w8
  42266c:	add	x8, x0, x8, lsl #5
  422670:	str	x9, [x8, #16]!
  422674:	ldr	x9, [sp, #56]
  422678:	str	x9, [x8, #8]
  42267c:	ldr	x9, [x19, #40]
  422680:	ldr	w9, [x9, #56]
  422684:	str	x21, [x8, #24]
  422688:	str	w9, [x8, #16]
  42268c:	str	x8, [x22]
  422690:	tbz	w24, #0, 422714 <feof@plt+0x1fd44>
  422694:	ldr	x9, [x19, #208]
  422698:	ldr	x10, [sp, #56]
  42269c:	cmp	x9, x10
  4226a0:	b.eq	422714 <feof@plt+0x1fd44>  // b.none
  4226a4:	cmp	x20, x9
  4226a8:	b.eq	422714 <feof@plt+0x1fd44>  // b.none
  4226ac:	ldr	x0, [x19, #312]
  4226b0:	ldr	w11, [x0]
  4226b4:	cmp	w11, #0x7f
  4226b8:	b.ne	4226e4 <feof@plt+0x1fd14>  // b.any
  4226bc:	mov	w0, #0xff0                 	// #4080
  4226c0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4226c4:	str	wzr, [x0]
  4226c8:	ldr	x8, [x19, #312]
  4226cc:	mov	w11, wzr
  4226d0:	str	x8, [x0, #8]
  4226d4:	str	x0, [x19, #312]
  4226d8:	ldr	x10, [x22]
  4226dc:	ldr	x9, [x19, #208]
  4226e0:	b	4226e8 <feof@plt+0x1fd18>
  4226e4:	mov	x10, x8
  4226e8:	add	w8, w11, #0x1
  4226ec:	mov	w11, w11
  4226f0:	str	w8, [x0]
  4226f4:	add	x8, x0, x11, lsl #5
  4226f8:	str	x10, [x8, #16]!
  4226fc:	str	x9, [x8, #8]
  422700:	ldr	x9, [x19, #40]
  422704:	ldr	w9, [x9, #56]
  422708:	str	x21, [x8, #24]
  42270c:	str	w9, [x8, #16]
  422710:	str	x8, [x22]
  422714:	tbz	w23, #0, 422790 <feof@plt+0x1fdc0>
  422718:	ldr	x9, [x19, #200]
  42271c:	ldr	x10, [sp, #56]
  422720:	cmp	x9, x10
  422724:	b.eq	422790 <feof@plt+0x1fdc0>  // b.none
  422728:	cmp	x20, x9
  42272c:	b.eq	422790 <feof@plt+0x1fdc0>  // b.none
  422730:	ldr	x0, [x19, #312]
  422734:	ldr	w10, [x0]
  422738:	cmp	w10, #0x7f
  42273c:	b.ne	422764 <feof@plt+0x1fd94>  // b.any
  422740:	mov	w0, #0xff0                 	// #4080
  422744:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  422748:	str	wzr, [x0]
  42274c:	ldr	x8, [x19, #312]
  422750:	mov	w10, wzr
  422754:	str	x8, [x0, #8]
  422758:	str	x0, [x19, #312]
  42275c:	ldr	x8, [x22]
  422760:	ldr	x9, [x19, #200]
  422764:	add	w11, w10, #0x1
  422768:	mov	w10, w10
  42276c:	add	x10, x0, x10, lsl #5
  422770:	str	w11, [x0]
  422774:	str	x8, [x10, #16]!
  422778:	str	x9, [x10, #8]
  42277c:	ldr	x8, [x19, #40]
  422780:	ldr	w8, [x8, #56]
  422784:	str	x21, [x10, #24]
  422788:	str	w8, [x10, #16]
  42278c:	str	x10, [x22]
  422790:	mov	x0, x21
  422794:	ldp	x20, x19, [sp, #288]
  422798:	ldp	x22, x21, [sp, #272]
  42279c:	ldp	x24, x23, [sp, #256]
  4227a0:	ldp	x26, x25, [sp, #240]
  4227a4:	ldp	x28, x27, [sp, #224]
  4227a8:	ldp	x29, x30, [sp, #208]
  4227ac:	add	sp, sp, #0x130
  4227b0:	ret
  4227b4:	str	x21, [x22]
  4227b8:	ldr	x0, [x19, #296]
  4227bc:	mov	x1, x22
  4227c0:	bl	44fd30 <feof@plt+0x4d360>
  4227c4:	mov	x21, xzr
  4227c8:	b	422790 <feof@plt+0x1fdc0>
  4227cc:	str	x24, [x21, #16]
  4227d0:	b	42257c <feof@plt+0x1fbac>
  4227d4:	stp	x29, x30, [sp, #-64]!
  4227d8:	stp	x24, x23, [sp, #16]
  4227dc:	stp	x22, x21, [sp, #32]
  4227e0:	stp	x20, x19, [sp, #48]
  4227e4:	ldr	x8, [x0, #40]
  4227e8:	mov	w19, w3
  4227ec:	mov	x20, x0
  4227f0:	mov	x21, x1
  4227f4:	ldr	w8, [x8, #60]
  4227f8:	mov	x29, sp
  4227fc:	cmp	w8, #0x2
  422800:	b.cc	422824 <feof@plt+0x1fe54>  // b.lo, b.ul, b.last
  422804:	ldr	x8, [x20]
  422808:	cbz	x8, 422818 <feof@plt+0x1fe48>
  42280c:	ldrb	w8, [x8, #106]
  422810:	cmp	w8, #0x0
  422814:	cset	w8, ne  // ne = any
  422818:	ldrb	w9, [x20, #26]
  42281c:	cbnz	w9, 422830 <feof@plt+0x1fe60>
  422820:	b	422844 <feof@plt+0x1fe74>
  422824:	mov	w8, wzr
  422828:	ldrb	w9, [x20, #26]
  42282c:	cbz	w9, 422844 <feof@plt+0x1fe74>
  422830:	ldp	x20, x19, [sp, #48]
  422834:	ldp	x22, x21, [sp, #32]
  422838:	ldp	x24, x23, [sp, #16]
  42283c:	ldp	x29, x30, [sp], #64
  422840:	ret
  422844:	ldr	w22, [x20, #1200]
  422848:	ldr	w23, [x21, #204]
  42284c:	cmp	w2, #0x0
  422850:	cset	w9, ne  // ne = any
  422854:	orr	w24, w9, w8
  422858:	bl	4027c0 <__errno_location@plt>
  42285c:	cmp	w22, w24
  422860:	str	w23, [x0]
  422864:	b.le	422890 <feof@plt+0x1fec0>
  422868:	cmp	w23, #0x2
  42286c:	b.ne	42289c <feof@plt+0x1fecc>  // b.any
  422870:	ldrb	w8, [x20, #1204]
  422874:	cbz	w8, 42289c <feof@plt+0x1fecc>
  422878:	ldr	x0, [x20, #712]
  42287c:	ldr	x1, [x21]
  422880:	bl	431c7c <feof@plt+0x2f2ac>
  422884:	ldrb	w8, [x20, #1207]
  422888:	cbnz	w8, 42289c <feof@plt+0x1fecc>
  42288c:	b	422830 <feof@plt+0x1fe60>
  422890:	cbz	w22, 42289c <feof@plt+0x1fecc>
  422894:	ldrb	w8, [x20, #1207]
  422898:	cbz	w8, 4228c8 <feof@plt+0x1fef8>
  42289c:	ldr	x2, [x21, #8]
  4228a0:	cbnz	x2, 4228a8 <feof@plt+0x1fed8>
  4228a4:	ldr	x2, [x21]
  4228a8:	mov	w1, #0x6                   	// #6
  4228ac:	mov	x0, x20
  4228b0:	mov	w3, w19
  4228b4:	ldp	x20, x19, [sp, #48]
  4228b8:	ldp	x22, x21, [sp, #32]
  4228bc:	ldp	x24, x23, [sp, #16]
  4228c0:	ldp	x29, x30, [sp], #64
  4228c4:	b	41e8bc <feof@plt+0x1beec>
  4228c8:	ldr	x2, [x21, #8]
  4228cc:	cbnz	x2, 4228d4 <feof@plt+0x1ff04>
  4228d0:	ldr	x2, [x21]
  4228d4:	mov	x0, x20
  4228d8:	mov	w1, wzr
  4228dc:	b	4228b0 <feof@plt+0x1fee0>
  4228e0:	sub	sp, sp, #0x90
  4228e4:	stp	x29, x30, [sp, #48]
  4228e8:	stp	x28, x27, [sp, #64]
  4228ec:	stp	x26, x25, [sp, #80]
  4228f0:	stp	x24, x23, [sp, #96]
  4228f4:	stp	x22, x21, [sp, #112]
  4228f8:	stp	x20, x19, [sp, #128]
  4228fc:	ldrb	w8, [x1, #210]
  422900:	add	x29, sp, #0x30
  422904:	cbz	w8, 422930 <feof@plt+0x1ff60>
  422908:	mov	w22, wzr
  42290c:	mov	w0, w22
  422910:	ldp	x20, x19, [sp, #128]
  422914:	ldp	x22, x21, [sp, #112]
  422918:	ldp	x24, x23, [sp, #96]
  42291c:	ldp	x26, x25, [sp, #80]
  422920:	ldp	x28, x27, [sp, #64]
  422924:	ldp	x29, x30, [sp, #48]
  422928:	add	sp, sp, #0x90
  42292c:	ret
  422930:	mov	w22, w3
  422934:	mov	w21, w2
  422938:	mov	x19, x1
  42293c:	mov	x20, x0
  422940:	tbz	w2, #0, 422958 <feof@plt+0x1ff88>
  422944:	mov	w8, #0x1                   	// #1
  422948:	strb	w8, [x20, #417]
  42294c:	ldrh	w9, [x19, #208]
  422950:	strb	w8, [x19, #210]
  422954:	cbnz	w9, 422908 <feof@plt+0x1ff38>
  422958:	ldr	x8, [x19, #56]
  42295c:	cbz	x8, 422968 <feof@plt+0x1ff98>
  422960:	ldrb	w8, [x8, #18]
  422964:	tbnz	w8, #1, 422908 <feof@plt+0x1ff38>
  422968:	ldr	x1, [x19, #16]
  42296c:	cbz	x1, 4229a0 <feof@plt+0x1ffd0>
  422970:	ldr	x8, [x20, #976]
  422974:	ldr	w2, [x19, #200]
  422978:	ldr	x3, [x19, #8]
  42297c:	mov	x0, x20
  422980:	blr	x8
  422984:	ldr	x0, [x19, #16]
  422988:	mov	w8, #0xffffffff            	// #-1
  42298c:	str	w8, [x19, #200]
  422990:	bl	4024c0 <free@plt>
  422994:	mov	w22, wzr
  422998:	str	xzr, [x19, #16]
  42299c:	b	42290c <feof@plt+0x1ff3c>
  4229a0:	mov	x0, x20
  4229a4:	mov	x1, x19
  4229a8:	mov	w2, w22
  4229ac:	bl	4241dc <feof@plt+0x2180c>
  4229b0:	tbz	w0, #0, 422908 <feof@plt+0x1ff38>
  4229b4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4229b8:	ldr	x24, [x8, #1912]
  4229bc:	cbz	x24, 422af8 <feof@plt+0x20128>
  4229c0:	tbnz	w21, #0, 4229cc <feof@plt+0x1fffc>
  4229c4:	ldrb	w8, [x24, #8]
  4229c8:	cbz	w8, 422af8 <feof@plt+0x20128>
  4229cc:	ldr	x8, [x19, #120]
  4229d0:	and	w9, w21, #0x1
  4229d4:	strb	wzr, [sp, #32]
  4229d8:	str	x19, [sp, #40]
  4229dc:	str	x8, [sp, #8]
  4229e0:	strb	w9, [sp, #33]
  4229e4:	ldr	x25, [x24]
  4229e8:	cbz	x25, 422af8 <feof@plt+0x20128>
  4229ec:	add	x9, sp, #0x8
  4229f0:	mov	w8, wzr
  4229f4:	mov	x27, xzr
  4229f8:	add	x9, x9, #0x8
  4229fc:	mov	w26, #0xffffffff            	// #-1
  422a00:	str	x9, [sp]
  422a04:	b	422a14 <feof@plt+0x20044>
  422a08:	add	x27, x28, #0x1
  422a0c:	cmp	x27, x25
  422a10:	b.cs	422af8 <feof@plt+0x20128>  // b.hs, b.nlast
  422a14:	add	x9, x25, x27
  422a18:	lsr	x28, x9, #1
  422a1c:	add	x23, x24, x28, lsl #5
  422a20:	ldr	x9, [x23, #16]!
  422a24:	ldr	x10, [sp, #8]
  422a28:	rev	x9, x9
  422a2c:	rev	x10, x10
  422a30:	cmp	x10, x9
  422a34:	cset	w9, hi  // hi = pmore
  422a38:	cset	w10, cc  // cc = lo, ul, last
  422a3c:	subs	w9, w9, w10
  422a40:	b.ne	422ab0 <feof@plt+0x200e0>  // b.any
  422a44:	tst	w8, #0xff
  422a48:	b.ne	422a68 <feof@plt+0x20098>  // b.any
  422a4c:	ldr	x8, [sp, #40]
  422a50:	ldr	x2, [sp]
  422a54:	ldr	x0, [x8, #40]
  422a58:	ldr	x1, [x8, #120]
  422a5c:	bl	44ecd4 <feof@plt+0x4c304>
  422a60:	mov	w8, #0x1                   	// #1
  422a64:	strb	w8, [sp, #32]
  422a68:	add	x11, x24, x28, lsl #5
  422a6c:	ldr	x9, [x11, #24]!
  422a70:	ldr	x12, [sp, #16]
  422a74:	rev	x10, x9
  422a78:	rev	x9, x12
  422a7c:	cmp	x9, x10
  422a80:	b.ne	422aa4 <feof@plt+0x200d4>  // b.any
  422a84:	ldr	x9, [sp, #24]
  422a88:	ldr	x10, [x11, #8]
  422a8c:	rev	x9, x9
  422a90:	rev	x10, x10
  422a94:	cmp	x9, x10
  422a98:	b.ne	422aa4 <feof@plt+0x200d4>  // b.any
  422a9c:	mov	w9, wzr
  422aa0:	b	422aac <feof@plt+0x200dc>
  422aa4:	cmp	x9, x10
  422aa8:	cneg	w9, w26, cs  // cs = hs, nlast
  422aac:	cbz	w9, 422ac4 <feof@plt+0x200f4>
  422ab0:	tbz	w9, #31, 422a08 <feof@plt+0x20038>
  422ab4:	mov	x25, x28
  422ab8:	cmp	x27, x25
  422abc:	b.cc	422a14 <feof@plt+0x20044>  // b.lo, b.ul, b.last
  422ac0:	b	422af8 <feof@plt+0x20128>
  422ac4:	ldrb	w9, [sp, #33]
  422ac8:	cbnz	w9, 422adc <feof@plt+0x2010c>
  422acc:	add	x9, x24, x28, lsl #5
  422ad0:	ldrb	w9, [x9, #40]
  422ad4:	cbz	w9, 422a08 <feof@plt+0x20038>
  422ad8:	b	422ae0 <feof@plt+0x20110>
  422adc:	cbz	x23, 422af8 <feof@plt+0x20128>
  422ae0:	mov	w22, wzr
  422ae4:	tbnz	w21, #0, 42290c <feof@plt+0x1ff3c>
  422ae8:	mov	w8, #0x1                   	// #1
  422aec:	strb	w8, [x20, #417]
  422af0:	strb	w8, [x19, #210]
  422af4:	b	42290c <feof@plt+0x1ff3c>
  422af8:	ldrb	w8, [x20, #417]
  422afc:	cbz	w8, 422c30 <feof@plt+0x20260>
  422b00:	ldr	x25, [x20, #280]
  422b04:	cbz	x25, 422c30 <feof@plt+0x20260>
  422b08:	mov	w26, #0xffffffff            	// #-1
  422b0c:	b	422b20 <feof@plt+0x20150>
  422b10:	ldr	w8, [x25, #204]
  422b14:	cbz	w8, 422b38 <feof@plt+0x20168>
  422b18:	ldr	x25, [x25, #32]
  422b1c:	cbz	x25, 422c30 <feof@plt+0x20260>
  422b20:	cmp	x25, x19
  422b24:	b.eq	422b18 <feof@plt+0x20148>  // b.none
  422b28:	tbnz	w21, #0, 422b10 <feof@plt+0x20140>
  422b2c:	ldrb	w8, [x25, #210]
  422b30:	cbnz	w8, 422b10 <feof@plt+0x20140>
  422b34:	b	422b18 <feof@plt+0x20148>
  422b38:	ldr	x8, [x25, #160]
  422b3c:	ldr	x9, [x19, #160]
  422b40:	cmp	x8, x9
  422b44:	b.ne	422b18 <feof@plt+0x20148>  // b.any
  422b48:	ldr	x8, [x25, #120]
  422b4c:	ldr	x9, [x19, #120]
  422b50:	cmp	x8, x9
  422b54:	b.ne	422b18 <feof@plt+0x20148>  // b.any
  422b58:	ldr	x8, [x25, #40]
  422b5c:	mov	x23, x25
  422b60:	cbz	x8, 422bb4 <feof@plt+0x201e4>
  422b64:	ldrb	w8, [x25, #213]
  422b68:	mov	x23, x25
  422b6c:	cbnz	w8, 422bb4 <feof@plt+0x201e4>
  422b70:	ldr	x27, [x25, #64]
  422b74:	ldr	x24, [x25]
  422b78:	mov	w0, #0x1                   	// #1
  422b7c:	mov	w1, #0xd8                  	// #216
  422b80:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  422b84:	ldr	x8, [x20]
  422b88:	mov	x23, x0
  422b8c:	str	w26, [x0, #200]
  422b90:	str	x27, [x0, #64]
  422b94:	cmp	x8, #0x0
  422b98:	cset	w8, eq  // eq = none
  422b9c:	strb	w8, [x0, #212]
  422ba0:	mov	x0, x24
  422ba4:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  422ba8:	str	x0, [x23]
  422bac:	ldr	x8, [x25, #8]
  422bb0:	str	x8, [x23, #8]
  422bb4:	mov	x0, x20
  422bb8:	mov	x1, x23
  422bbc:	mov	w2, w22
  422bc0:	bl	4241dc <feof@plt+0x2180c>
  422bc4:	tbz	w0, #0, 422bf0 <feof@plt+0x20220>
  422bc8:	ldr	x2, [x23, #120]
  422bcc:	ldr	x8, [x19, #120]
  422bd0:	cmp	x2, x8
  422bd4:	b.ne	422bf0 <feof@plt+0x20220>  // b.any
  422bd8:	ldr	x0, [x23, #40]
  422bdc:	ldr	x1, [x19, #40]
  422be0:	bl	402980 <bcmp@plt>
  422be4:	cmp	w0, #0x0
  422be8:	cset	w24, eq  // eq = none
  422bec:	b	422bf4 <feof@plt+0x20224>
  422bf0:	mov	w24, wzr
  422bf4:	ldr	x8, [x25, #40]
  422bf8:	cbz	x8, 422c28 <feof@plt+0x20258>
  422bfc:	ldrb	w8, [x25, #213]
  422c00:	cbnz	w8, 422c28 <feof@plt+0x20258>
  422c04:	ldr	x0, [x23, #48]
  422c08:	str	xzr, [x23, #8]
  422c0c:	bl	4024c0 <free@plt>
  422c10:	ldr	x0, [x23]
  422c14:	bl	4024c0 <free@plt>
  422c18:	ldr	x0, [x23, #8]
  422c1c:	bl	4024c0 <free@plt>
  422c20:	mov	x0, x23
  422c24:	bl	4024c0 <free@plt>
  422c28:	tbz	w24, #0, 422b18 <feof@plt+0x20148>
  422c2c:	b	422908 <feof@plt+0x1ff38>
  422c30:	ldr	x8, [x20]
  422c34:	cbz	x8, 422c54 <feof@plt+0x20284>
  422c38:	ldr	x9, [x19, #64]
  422c3c:	cbz	x9, 422c54 <feof@plt+0x20284>
  422c40:	ldrb	w8, [x8, #106]
  422c44:	ldrb	w9, [x9, #20]
  422c48:	cmp	w8, w9
  422c4c:	csel	w21, w8, w9, hi  // hi = pmore
  422c50:	b	422c58 <feof@plt+0x20288>
  422c54:	mov	w21, wzr
  422c58:	ldr	w8, [x20, #1200]
  422c5c:	cmp	w21, #0x0
  422c60:	cset	w9, ne  // ne = any
  422c64:	cmp	w8, w9
  422c68:	b.le	422c90 <feof@plt+0x202c0>
  422c6c:	ldrh	w8, [x19, #208]
  422c70:	cbnz	w8, 422c90 <feof@plt+0x202c0>
  422c74:	ldrb	w8, [x19, #212]
  422c78:	cbz	w8, 422c84 <feof@plt+0x202b4>
  422c7c:	ldrb	w8, [x20, #1206]
  422c80:	cbnz	w8, 422c90 <feof@plt+0x202c0>
  422c84:	ldr	x0, [x20, #712]
  422c88:	ldr	x1, [x19, #8]
  422c8c:	bl	431c7c <feof@plt+0x2f2ac>
  422c90:	ldrh	w8, [x19, #208]
  422c94:	strb	wzr, [x19, #213]
  422c98:	ldr	x1, [x19, #40]
  422c9c:	ldr	x2, [x19, #120]
  422ca0:	add	w8, w8, #0x1
  422ca4:	strh	w8, [x19, #208]
  422ca8:	ldrb	w8, [x20, #1155]
  422cac:	cbz	w8, 422cbc <feof@plt+0x202ec>
  422cb0:	ldrb	w8, [x20, #1244]
  422cb4:	eor	w3, w8, #0x1
  422cb8:	b	422cc0 <feof@plt+0x202f0>
  422cbc:	mov	w3, wzr
  422cc0:	mov	x0, x20
  422cc4:	bl	41bfd4 <feof@plt+0x19604>
  422cc8:	str	x19, [x0, #80]
  422ccc:	strb	w21, [x0, #106]
  422cd0:	ldr	x8, [x19, #48]
  422cd4:	mov	w22, #0x1                   	// #1
  422cd8:	mov	w3, #0x1                   	// #1
  422cdc:	mov	w1, wzr
  422ce0:	str	x8, [x0, #40]
  422ce4:	strb	w22, [x20, #440]
  422ce8:	str	xzr, [x20, #424]
  422cec:	ldr	x2, [x19, #8]
  422cf0:	mov	x0, x20
  422cf4:	mov	w4, w21
  422cf8:	bl	41a1d8 <feof@plt+0x17808>
  422cfc:	b	42290c <feof@plt+0x1ff3c>
  422d00:	mov	w8, #0x1                   	// #1
  422d04:	strb	w8, [x0, #417]
  422d08:	strb	w8, [x1, #210]
  422d0c:	ret
  422d10:	stp	x29, x30, [sp, #-64]!
  422d14:	stp	x24, x23, [sp, #16]
  422d18:	stp	x22, x21, [sp, #32]
  422d1c:	stp	x20, x19, [sp, #48]
  422d20:	mov	w20, w4
  422d24:	mov	w21, w3
  422d28:	mov	w22, w2
  422d2c:	mov	x23, x1
  422d30:	subs	w24, w3, #0x3
  422d34:	mov	x19, x0
  422d38:	mov	x29, sp
  422d3c:	b.ne	422d58 <feof@plt+0x20388>  // b.any
  422d40:	ldr	x9, [x19, #488]
  422d44:	ldr	x8, [x19, #448]
  422d48:	ldr	x9, [x9, #16]
  422d4c:	cmp	x8, x9
  422d50:	b.eq	422d58 <feof@plt+0x20388>  // b.none
  422d54:	stur	wzr, [x8, #-24]
  422d58:	mov	x0, x19
  422d5c:	mov	x1, x23
  422d60:	mov	w2, w22
  422d64:	mov	w3, w21
  422d68:	bl	422e6c <feof@plt+0x2049c>
  422d6c:	cbz	x0, 422da8 <feof@plt+0x203d8>
  422d70:	cmp	w21, #0x4
  422d74:	mov	x2, x0
  422d78:	cset	w5, eq  // eq = none
  422d7c:	mov	x0, x19
  422d80:	mov	x1, x23
  422d84:	mov	w3, wzr
  422d88:	mov	w4, w22
  422d8c:	mov	w6, w20
  422d90:	bl	421ea8 <feof@plt+0x1f4d8>
  422d94:	cmp	w21, #0x4
  422d98:	mov	x22, x0
  422d9c:	b.ne	422dc0 <feof@plt+0x203f0>  // b.any
  422da0:	mov	w0, wzr
  422da4:	cbnz	x22, 422dc0 <feof@plt+0x203f0>
  422da8:	ldp	x20, x19, [sp, #48]
  422dac:	ldp	x22, x21, [sp, #32]
  422db0:	ldp	x24, x23, [sp, #16]
  422db4:	and	w0, w0, #0x1
  422db8:	ldp	x29, x30, [sp], #64
  422dbc:	ret
  422dc0:	ldr	x8, [x22, #16]
  422dc4:	cbz	x8, 422df0 <feof@plt+0x20420>
  422dc8:	cmp	w21, #0x2
  422dcc:	mov	x0, x19
  422dd0:	mov	x1, x22
  422dd4:	mov	w3, w20
  422dd8:	ldp	x20, x19, [sp, #48]
  422ddc:	ldp	x22, x21, [sp, #32]
  422de0:	ldp	x24, x23, [sp, #16]
  422de4:	cset	w2, eq  // eq = none
  422de8:	ldp	x29, x30, [sp], #64
  422dec:	b	4228e0 <feof@plt+0x1ff10>
  422df0:	cmp	w24, #0x2
  422df4:	b.cc	422dc8 <feof@plt+0x203f8>  // b.lo, b.ul, b.last
  422df8:	ldr	w8, [x22, #204]
  422dfc:	cbnz	w8, 422dc8 <feof@plt+0x203f8>
  422e00:	ldr	x0, [x19, #40]
  422e04:	ldr	w1, [x0, #56]
  422e08:	bl	42ad9c <feof@plt+0x283cc>
  422e0c:	ldr	x8, [x19, #40]
  422e10:	mov	w23, w0
  422e14:	mov	w1, w20
  422e18:	mov	x0, x8
  422e1c:	bl	42ad9c <feof@plt+0x283cc>
  422e20:	cmp	w23, w0
  422e24:	b.le	422dc8 <feof@plt+0x203f8>
  422e28:	ldr	x8, [x19, #40]
  422e2c:	cmp	w21, #0x2
  422e30:	cset	w2, eq  // eq = none
  422e34:	mov	x0, x19
  422e38:	ldr	w9, [x8, #56]
  422e3c:	mov	x1, x22
  422e40:	mov	w3, w20
  422e44:	sub	w9, w9, #0x1
  422e48:	str	w9, [x8, #56]
  422e4c:	bl	4228e0 <feof@plt+0x1ff10>
  422e50:	tbnz	w0, #0, 422da8 <feof@plt+0x203d8>
  422e54:	ldr	x8, [x19, #40]
  422e58:	mov	w0, wzr
  422e5c:	ldr	w9, [x8, #56]
  422e60:	add	w9, w9, #0x1
  422e64:	str	w9, [x8, #56]
  422e68:	b	422da8 <feof@plt+0x203d8>
  422e6c:	stp	x29, x30, [sp, #-48]!
  422e70:	stp	x22, x21, [sp, #16]
  422e74:	stp	x20, x19, [sp, #32]
  422e78:	ldrb	w9, [x1]
  422e7c:	mov	x19, x0
  422e80:	mov	x29, sp
  422e84:	cmp	w9, #0x2f
  422e88:	b.ne	422e94 <feof@plt+0x204c4>  // b.any
  422e8c:	add	x0, x19, #0xd8
  422e90:	b	422ef8 <feof@plt+0x20528>
  422e94:	ldr	x9, [x19]
  422e98:	add	x10, x19, #0x120
  422e9c:	mov	x8, x1
  422ea0:	add	x11, x9, #0x50
  422ea4:	cmp	x9, #0x0
  422ea8:	csel	x10, x10, x11, eq  // eq = none
  422eac:	ldr	x22, [x10]
  422eb0:	cmp	w3, #0x1
  422eb4:	b.ne	422ecc <feof@plt+0x204fc>  // b.any
  422eb8:	ldr	x10, [x22, #64]
  422ebc:	cbz	x10, 422ecc <feof@plt+0x204fc>
  422ec0:	add	x11, x19, #0xd8
  422ec4:	cmp	x10, x11
  422ec8:	b.ne	422ed4 <feof@plt+0x20504>  // b.any
  422ecc:	cbz	w2, 422f08 <feof@plt+0x20538>
  422ed0:	add	x10, x19, #0xd0
  422ed4:	ldr	x0, [x10]
  422ed8:	cbnz	x0, 422ef8 <feof@plt+0x20528>
  422edc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  422ee0:	add	x2, x2, #0xb5b
  422ee4:	mov	w1, #0x3                   	// #3
  422ee8:	mov	x0, x19
  422eec:	mov	x3, x8
  422ef0:	bl	41de04 <feof@plt+0x1b434>
  422ef4:	mov	x0, xzr
  422ef8:	ldp	x20, x19, [sp, #32]
  422efc:	ldp	x22, x21, [sp, #16]
  422f00:	ldp	x29, x30, [sp], #48
  422f04:	ret
  422f08:	cmp	w3, #0x3
  422f0c:	b.ne	422f24 <feof@plt+0x20554>  // b.any
  422f10:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  422f14:	add	x1, x1, #0xb58
  422f18:	mov	x0, x19
  422f1c:	mov	w2, wzr
  422f20:	b	422f90 <feof@plt+0x205c0>
  422f24:	ldrb	w10, [x19, #416]
  422f28:	cbz	w10, 422f3c <feof@plt+0x2056c>
  422f2c:	add	x10, x19, #0xc8
  422f30:	ldr	x0, [x10]
  422f34:	cbnz	x0, 422ef8 <feof@plt+0x20528>
  422f38:	b	422edc <feof@plt+0x2050c>
  422f3c:	ldr	x20, [x22, #24]
  422f40:	cbnz	x20, 422f78 <feof@plt+0x205a8>
  422f44:	ldr	x0, [x22, #8]
  422f48:	bl	4501c4 <feof@plt+0x4d7f4>
  422f4c:	ldr	x8, [x22, #8]
  422f50:	sub	x21, x0, x8
  422f54:	add	x0, x21, #0x1
  422f58:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  422f5c:	ldr	x1, [x22, #8]
  422f60:	mov	x2, x21
  422f64:	mov	x20, x0
  422f68:	bl	402390 <memcpy@plt>
  422f6c:	strb	wzr, [x20, x21]
  422f70:	str	x20, [x22, #24]
  422f74:	ldr	x9, [x19]
  422f78:	cbz	x9, 422f84 <feof@plt+0x205b4>
  422f7c:	ldrb	w2, [x9, #106]
  422f80:	b	422f88 <feof@plt+0x205b8>
  422f84:	mov	w2, wzr
  422f88:	mov	x0, x19
  422f8c:	mov	x1, x20
  422f90:	ldp	x20, x19, [sp, #32]
  422f94:	ldp	x22, x21, [sp, #16]
  422f98:	ldp	x29, x30, [sp], #48
  422f9c:	b	423eb0 <feof@plt+0x214e0>
  422fa0:	stp	x29, x30, [sp, #-32]!
  422fa4:	stp	x20, x19, [sp, #16]
  422fa8:	ldr	x19, [x0, #296]
  422fac:	mov	x0, x1
  422fb0:	mov	x29, sp
  422fb4:	mov	x20, x1
  422fb8:	bl	44fea8 <feof@plt+0x4d4d8>
  422fbc:	mov	w2, w0
  422fc0:	mov	x0, x19
  422fc4:	mov	x1, x20
  422fc8:	bl	44f700 <feof@plt+0x4cd30>
  422fcc:	cbnz	x0, 422fdc <feof@plt+0x2060c>
  422fd0:	b	422ff4 <feof@plt+0x20624>
  422fd4:	ldr	x0, [x0]
  422fd8:	cbz	x0, 422ff4 <feof@plt+0x20624>
  422fdc:	ldr	x8, [x0, #8]
  422fe0:	cbz	x8, 422fd4 <feof@plt+0x20604>
  422fe4:	ldr	x8, [x0, #24]
  422fe8:	ldr	w8, [x8, #204]
  422fec:	cbnz	w8, 422fd4 <feof@plt+0x20604>
  422ff0:	mov	w0, #0x1                   	// #1
  422ff4:	ldp	x20, x19, [sp, #16]
  422ff8:	ldp	x29, x30, [sp], #32
  422ffc:	ret
  423000:	stp	x29, x30, [sp, #-48]!
  423004:	stp	x22, x21, [sp, #16]
  423008:	stp	x20, x19, [sp, #32]
  42300c:	ldr	x20, [x0, #296]
  423010:	mov	x21, x0
  423014:	mov	x0, x1
  423018:	mov	x29, sp
  42301c:	mov	w19, w2
  423020:	mov	x22, x1
  423024:	bl	44fea8 <feof@plt+0x4d4d8>
  423028:	mov	w2, w0
  42302c:	mov	x0, x20
  423030:	mov	x1, x22
  423034:	bl	44f700 <feof@plt+0x4cd30>
  423038:	mov	x20, x0
  42303c:	tbnz	w19, #31, 423048 <feof@plt+0x20678>
  423040:	cbnz	x20, 423078 <feof@plt+0x206a8>
  423044:	b	42305c <feof@plt+0x2068c>
  423048:	ldr	x0, [x21, #40]
  42304c:	mov	w1, w19
  423050:	bl	429d00 <feof@plt+0x27330>
  423054:	mov	w19, w0
  423058:	cbnz	x20, 423078 <feof@plt+0x206a8>
  42305c:	mov	w0, wzr
  423060:	ldp	x20, x19, [sp, #32]
  423064:	ldp	x22, x21, [sp, #16]
  423068:	ldp	x29, x30, [sp], #48
  42306c:	ret
  423070:	ldr	x20, [x20]
  423074:	cbz	x20, 42305c <feof@plt+0x2068c>
  423078:	ldr	x8, [x20, #8]
  42307c:	cbz	x8, 423070 <feof@plt+0x206a0>
  423080:	ldr	x8, [x20, #24]
  423084:	ldr	w8, [x8, #204]
  423088:	cbnz	w8, 423070 <feof@plt+0x206a0>
  42308c:	ldr	w8, [x20, #16]
  423090:	cmp	w8, w19
  423094:	b.hi	423070 <feof@plt+0x206a0>  // b.pmore
  423098:	mov	w0, #0x1                   	// #1
  42309c:	b	423060 <feof@plt+0x20690>
  4230a0:	stp	x29, x30, [sp, #-64]!
  4230a4:	str	x23, [sp, #16]
  4230a8:	stp	x22, x21, [sp, #32]
  4230ac:	stp	x20, x19, [sp, #48]
  4230b0:	adrp	x20, 423000 <feof@plt+0x20630>
  4230b4:	adrp	x21, 423000 <feof@plt+0x20630>
  4230b8:	adrp	x22, 450000 <feof@plt+0x4d630>
  4230bc:	adrp	x23, 402000 <_Unwind_Backtrace@plt-0x330>
  4230c0:	add	x20, x20, #0x18c
  4230c4:	add	x21, x21, #0x1ac
  4230c8:	add	x22, x22, #0x6d8
  4230cc:	add	x23, x23, #0x4c0
  4230d0:	mov	x19, x0
  4230d4:	mov	w0, #0x7f                  	// #127
  4230d8:	mov	x1, x20
  4230dc:	mov	x2, x21
  4230e0:	mov	x3, xzr
  4230e4:	mov	x4, x22
  4230e8:	mov	x5, x23
  4230ec:	mov	x29, sp
  4230f0:	bl	44f010 <feof@plt+0x4c640>
  4230f4:	str	x0, [x19, #296]
  4230f8:	mov	w0, #0x7f                  	// #127
  4230fc:	mov	x1, x20
  423100:	mov	x2, x21
  423104:	mov	x3, xzr
  423108:	mov	x4, x22
  42310c:	mov	x5, x23
  423110:	bl	44f010 <feof@plt+0x4c640>
  423114:	str	x0, [x19, #304]
  423118:	mov	w0, #0xff0                 	// #4080
  42311c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423120:	str	wzr, [x0]
  423124:	ldr	x8, [x19, #312]
  423128:	adrp	x1, 44f000 <feof@plt+0x4c630>
  42312c:	adrp	x2, 423000 <feof@plt+0x20630>
  423130:	adrp	x20, 450000 <feof@plt+0x4d630>
  423134:	str	x8, [x0, #8]
  423138:	str	x0, [x19, #312]
  42313c:	add	x1, x1, #0xea8
  423140:	add	x2, x2, #0x1e4
  423144:	mov	w0, #0x7f                  	// #127
  423148:	mov	x3, xzr
  42314c:	mov	x4, x22
  423150:	mov	x5, x23
  423154:	add	x20, x20, #0x6a4
  423158:	bl	44f010 <feof@plt+0x4c640>
  42315c:	str	x0, [x19, #320]
  423160:	add	x8, x19, #0x148
  423164:	mov	x3, x20
  423168:	mov	x4, x23
  42316c:	ldp	x20, x19, [sp, #48]
  423170:	ldp	x22, x21, [sp, #32]
  423174:	ldr	x23, [sp, #16]
  423178:	mov	x0, x8
  42317c:	mov	x1, xzr
  423180:	mov	x2, xzr
  423184:	ldp	x29, x30, [sp], #64
  423188:	b	450220 <_obstack_begin@@Base>
  42318c:	ldr	x8, [x0, #8]
  423190:	cbz	x8, 4231a0 <feof@plt+0x207d0>
  423194:	ldr	x8, [x0, #24]
  423198:	ldr	x0, [x8]
  42319c:	b	44fea8 <feof@plt+0x4d4d8>
  4231a0:	ldr	x8, [x0, #24]
  4231a4:	ldr	x0, [x8, #8]!
  4231a8:	b	44fea8 <feof@plt+0x4d4d8>
  4231ac:	stp	x29, x30, [sp, #-16]!
  4231b0:	ldr	x8, [x0, #8]
  4231b4:	mov	x29, sp
  4231b8:	cbz	x8, 4231c4 <feof@plt+0x207f4>
  4231bc:	ldr	x8, [x0, #24]
  4231c0:	b	4231cc <feof@plt+0x207fc>
  4231c4:	ldr	x8, [x0, #24]
  4231c8:	add	x8, x8, #0x8
  4231cc:	ldr	x0, [x8]
  4231d0:	bl	44eda0 <feof@plt+0x4c3d0>
  4231d4:	cmp	w0, #0x0
  4231d8:	cset	w0, eq  // eq = none
  4231dc:	ldp	x29, x30, [sp], #16
  4231e0:	ret
  4231e4:	stp	x29, x30, [sp, #-16]!
  4231e8:	mov	x29, sp
  4231ec:	bl	44eda0 <feof@plt+0x4c3d0>
  4231f0:	cmp	w0, #0x0
  4231f4:	cset	w0, eq  // eq = none
  4231f8:	ldp	x29, x30, [sp], #16
  4231fc:	ret
  423200:	stp	x29, x30, [sp, #-32]!
  423204:	stp	x20, x19, [sp, #16]
  423208:	mov	x19, x0
  42320c:	ldr	x0, [x0, #296]
  423210:	mov	x29, sp
  423214:	bl	44f524 <feof@plt+0x4cb54>
  423218:	ldr	x0, [x19, #304]
  42321c:	bl	44f524 <feof@plt+0x4cb54>
  423220:	ldr	x0, [x19, #320]
  423224:	bl	44f524 <feof@plt+0x4cb54>
  423228:	add	x0, x19, #0x148
  42322c:	mov	x1, xzr
  423230:	bl	450504 <_obstack_free@@Base>
  423234:	ldr	x0, [x19, #312]
  423238:	cbz	x0, 42324c <feof@plt+0x2087c>
  42323c:	ldr	x20, [x0, #8]
  423240:	bl	4024c0 <free@plt>
  423244:	mov	x0, x20
  423248:	cbnz	x20, 42323c <feof@plt+0x2086c>
  42324c:	ldr	x19, [x19, #280]
  423250:	cbz	x19, 423280 <feof@plt+0x208b0>
  423254:	ldr	x0, [x19, #48]
  423258:	ldr	x20, [x19, #32]
  42325c:	bl	4024c0 <free@plt>
  423260:	ldr	x0, [x19]
  423264:	bl	4024c0 <free@plt>
  423268:	ldr	x0, [x19, #8]
  42326c:	bl	4024c0 <free@plt>
  423270:	mov	x0, x19
  423274:	bl	4024c0 <free@plt>
  423278:	mov	x19, x20
  42327c:	cbnz	x20, 423254 <feof@plt+0x20884>
  423280:	ldp	x20, x19, [sp, #16]
  423284:	ldp	x29, x30, [sp], #32
  423288:	ret
  42328c:	stp	x29, x30, [sp, #-64]!
  423290:	str	x23, [sp, #16]
  423294:	stp	x22, x21, [sp, #32]
  423298:	stp	x20, x19, [sp, #48]
  42329c:	mov	x29, sp
  4232a0:	mov	x19, x0
  4232a4:	bl	423200 <feof@plt+0x20830>
  4232a8:	adrp	x20, 423000 <feof@plt+0x20630>
  4232ac:	adrp	x21, 423000 <feof@plt+0x20630>
  4232b0:	adrp	x22, 450000 <feof@plt+0x4d630>
  4232b4:	adrp	x23, 402000 <_Unwind_Backtrace@plt-0x330>
  4232b8:	add	x20, x20, #0x18c
  4232bc:	add	x21, x21, #0x1ac
  4232c0:	add	x22, x22, #0x6d8
  4232c4:	add	x23, x23, #0x4c0
  4232c8:	mov	w0, #0x7f                  	// #127
  4232cc:	mov	x1, x20
  4232d0:	mov	x2, x21
  4232d4:	mov	x3, xzr
  4232d8:	mov	x4, x22
  4232dc:	mov	x5, x23
  4232e0:	str	xzr, [x19, #312]
  4232e4:	str	xzr, [x19, #280]
  4232e8:	bl	44f010 <feof@plt+0x4c640>
  4232ec:	str	x0, [x19, #296]
  4232f0:	mov	w0, #0x7f                  	// #127
  4232f4:	mov	x1, x20
  4232f8:	mov	x2, x21
  4232fc:	mov	x3, xzr
  423300:	mov	x4, x22
  423304:	mov	x5, x23
  423308:	bl	44f010 <feof@plt+0x4c640>
  42330c:	str	x0, [x19, #304]
  423310:	mov	w0, #0xff0                 	// #4080
  423314:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423318:	str	wzr, [x0]
  42331c:	ldr	x8, [x19, #312]
  423320:	adrp	x1, 44f000 <feof@plt+0x4c630>
  423324:	adrp	x2, 423000 <feof@plt+0x20630>
  423328:	adrp	x20, 450000 <feof@plt+0x4d630>
  42332c:	str	x8, [x0, #8]
  423330:	str	x0, [x19, #312]
  423334:	add	x1, x1, #0xea8
  423338:	add	x2, x2, #0x1e4
  42333c:	mov	w0, #0x7f                  	// #127
  423340:	mov	x3, xzr
  423344:	mov	x4, x22
  423348:	mov	x5, x23
  42334c:	add	x20, x20, #0x6a4
  423350:	bl	44f010 <feof@plt+0x4c640>
  423354:	str	x0, [x19, #320]
  423358:	add	x8, x19, #0x148
  42335c:	mov	x3, x20
  423360:	mov	x4, x23
  423364:	ldp	x20, x19, [sp, #48]
  423368:	ldp	x22, x21, [sp, #32]
  42336c:	ldr	x23, [sp, #16]
  423370:	mov	x0, x8
  423374:	mov	x1, xzr
  423378:	mov	x2, xzr
  42337c:	ldp	x29, x30, [sp], #64
  423380:	b	450220 <_obstack_begin@@Base>
  423384:	ldr	x8, [x0]
  423388:	mov	w3, #0x1                   	// #1
  42338c:	mov	w4, wzr
  423390:	mov	w5, wzr
  423394:	ldr	x8, [x8, #80]
  423398:	mov	w6, wzr
  42339c:	ldr	x2, [x8, #64]
  4233a0:	b	421ea8 <feof@plt+0x1f4d8>
  4233a4:	ldr	x8, [x0, #40]
  4233a8:	cmp	w2, #0x0
  4233ac:	mov	w10, #0x1                   	// #1
  4233b0:	cinc	w10, w10, ne  // ne = any
  4233b4:	cmp	w1, #0x0
  4233b8:	csel	w4, wzr, w10, eq  // eq = none
  4233bc:	ldr	w10, [x8, #12]
  4233c0:	ldr	x11, [x0]
  4233c4:	ldr	x12, [x8]
  4233c8:	mov	w9, #0x18                  	// #24
  4233cc:	sub	w10, w10, #0x1
  4233d0:	strb	w4, [x11, #106]
  4233d4:	smaddl	x9, w10, w9, x12
  4233d8:	ldr	w8, [x8, #60]
  4233dc:	ldr	w10, [x9]
  4233e0:	ldrb	w11, [x9, #6]
  4233e4:	ldr	w12, [x9, #16]
  4233e8:	ldr	x2, [x9, #8]
  4233ec:	sub	w8, w8, w10
  4233f0:	lsr	w8, w8, w11
  4233f4:	add	w3, w8, w12
  4233f8:	mov	w1, #0x2                   	// #2
  4233fc:	b	41a1d8 <feof@plt+0x17808>
  423400:	mov	w3, #0x1                   	// #1
  423404:	mov	w4, wzr
  423408:	b	41a1d8 <feof@plt+0x17808>
  42340c:	sub	sp, sp, #0x40
  423410:	stp	x29, x30, [sp, #16]
  423414:	stp	x20, x19, [sp, #48]
  423418:	str	xzr, [sp]
  42341c:	mov	x19, x0
  423420:	ldr	x0, [x0, #296]
  423424:	str	x21, [sp, #32]
  423428:	add	x29, sp, #0x10
  42342c:	bl	44f004 <feof@plt+0x4c634>
  423430:	str	x0, [sp, #8]
  423434:	ldr	x0, [x19, #296]
  423438:	adrp	x1, 423000 <feof@plt+0x20630>
  42343c:	add	x1, x1, #0x4f4
  423440:	mov	x2, sp
  423444:	bl	44fdf8 <feof@plt+0x4d428>
  423448:	ldr	x0, [sp]
  42344c:	cbz	x0, 4234e0 <feof@plt+0x20b10>
  423450:	ldr	x1, [sp, #8]
  423454:	adrp	x3, 423000 <feof@plt+0x20630>
  423458:	add	x3, x3, #0x574
  42345c:	mov	w2, #0x8                   	// #8
  423460:	bl	402530 <qsort@plt>
  423464:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  423468:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  42346c:	add	x0, x0, #0xf6f
  423470:	add	x1, x1, #0xae4
  423474:	bl	402620 <dgettext@plt>
  423478:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  42347c:	ldr	x1, [x19, #1336]
  423480:	bl	4024f0 <fputs_unlocked@plt>
  423484:	ldp	x0, x8, [sp]
  423488:	cbz	x8, 4234dc <feof@plt+0x20b0c>
  42348c:	mov	x20, xzr
  423490:	mov	w21, #0xa                   	// #10
  423494:	ldr	x0, [x0, x20, lsl #3]
  423498:	ldr	x1, [x19, #1336]
  42349c:	bl	4024f0 <fputs_unlocked@plt>
  4234a0:	ldr	x0, [x19, #1336]
  4234a4:	ldp	x8, x9, [x0, #40]
  4234a8:	cmp	x8, x9
  4234ac:	b.cs	4234d0 <feof@plt+0x20b00>  // b.hs, b.nlast
  4234b0:	add	x9, x8, #0x1
  4234b4:	str	x9, [x0, #40]
  4234b8:	strb	w21, [x8]
  4234bc:	ldp	x0, x8, [sp]
  4234c0:	add	x20, x20, #0x1
  4234c4:	cmp	x20, x8
  4234c8:	b.cc	423494 <feof@plt+0x20ac4>  // b.lo, b.ul, b.last
  4234cc:	b	4234dc <feof@plt+0x20b0c>
  4234d0:	mov	w1, #0xa                   	// #10
  4234d4:	bl	402480 <__overflow@plt>
  4234d8:	b	4234bc <feof@plt+0x20aec>
  4234dc:	bl	4024c0 <free@plt>
  4234e0:	ldp	x20, x19, [sp, #48]
  4234e4:	ldr	x21, [sp, #32]
  4234e8:	ldp	x29, x30, [sp, #16]
  4234ec:	add	sp, sp, #0x40
  4234f0:	ret
  4234f4:	stp	x29, x30, [sp, #-32]!
  4234f8:	stp	x20, x19, [sp, #16]
  4234fc:	ldr	x8, [x0]
  423500:	mov	x29, sp
  423504:	ldr	x9, [x8, #8]
  423508:	cbz	x9, 423564 <feof@plt+0x20b94>
  42350c:	ldr	x20, [x8, #24]
  423510:	ldrb	w8, [x20, #210]
  423514:	cbnz	w8, 423564 <feof@plt+0x20b94>
  423518:	ldr	x8, [x20, #56]
  42351c:	cbnz	x8, 423564 <feof@plt+0x20b94>
  423520:	ldrh	w8, [x20, #208]
  423524:	cmp	w8, #0x1
  423528:	b.ne	423564 <feof@plt+0x20b94>  // b.any
  42352c:	ldrb	w8, [x20, #212]
  423530:	cbnz	w8, 423564 <feof@plt+0x20b94>
  423534:	ldp	x8, x0, [x1]
  423538:	mov	x19, x1
  42353c:	cbnz	x8, 423554 <feof@plt+0x20b84>
  423540:	mov	w1, #0x8                   	// #8
  423544:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  423548:	mov	x8, x0
  42354c:	mov	x0, xzr
  423550:	stp	x8, xzr, [x19]
  423554:	ldr	x9, [x20, #8]
  423558:	add	x10, x0, #0x1
  42355c:	str	x10, [x19, #8]
  423560:	str	x9, [x8, x0, lsl #3]
  423564:	ldp	x20, x19, [sp, #16]
  423568:	mov	w0, #0x1                   	// #1
  42356c:	ldp	x29, x30, [sp], #32
  423570:	ret
  423574:	ldr	x0, [x0]
  423578:	ldr	x1, [x1]
  42357c:	b	402820 <strcmp@plt>
  423580:	stp	x29, x30, [sp, #-48]!
  423584:	mov	w3, wzr
  423588:	str	x21, [sp, #16]
  42358c:	stp	x20, x19, [sp, #32]
  423590:	mov	x29, sp
  423594:	mov	w20, w2
  423598:	mov	x21, x1
  42359c:	mov	x19, x0
  4235a0:	bl	422e6c <feof@plt+0x2049c>
  4235a4:	cbz	x0, 4235d0 <feof@plt+0x20c00>
  4235a8:	mov	x2, x0
  4235ac:	mov	x0, x19
  4235b0:	mov	x1, x21
  4235b4:	mov	w3, wzr
  4235b8:	mov	w4, w20
  4235bc:	mov	w5, wzr
  4235c0:	mov	w6, wzr
  4235c4:	bl	421ea8 <feof@plt+0x1f4d8>
  4235c8:	ldr	w8, [x0, #204]
  4235cc:	cbz	w8, 4235d8 <feof@plt+0x20c08>
  4235d0:	mov	w0, #0xffffffff            	// #-1
  4235d4:	b	42360c <feof@plt+0x20c3c>
  4235d8:	mov	x20, x0
  4235dc:	ldr	w0, [x0, #200]
  4235e0:	cmn	w0, #0x1
  4235e4:	b.eq	4235f4 <feof@plt+0x20c24>  // b.none
  4235e8:	bl	402810 <close@plt>
  4235ec:	mov	w8, #0xffffffff            	// #-1
  4235f0:	str	w8, [x20, #200]
  4235f4:	ldr	x8, [x19]
  4235f8:	ldr	x9, [x20, #160]
  4235fc:	ldr	x8, [x8, #80]
  423600:	ldr	x8, [x8, #160]
  423604:	cmp	x9, x8
  423608:	cset	w0, gt
  42360c:	ldp	x20, x19, [sp, #32]
  423610:	ldr	x21, [sp, #16]
  423614:	ldp	x29, x30, [sp], #48
  423618:	ret
  42361c:	stp	x29, x30, [sp, #-32]!
  423620:	stp	x20, x19, [sp, #16]
  423624:	ldr	x9, [x0, #488]
  423628:	ldr	x8, [x0, #448]
  42362c:	mov	x19, x0
  423630:	mov	x20, x1
  423634:	ldr	x9, [x9, #16]
  423638:	mov	x29, sp
  42363c:	cmp	x8, x9
  423640:	b.eq	423648 <feof@plt+0x20c78>  // b.none
  423644:	stur	wzr, [x8, #-24]
  423648:	ldrb	w8, [x20]
  42364c:	cmp	w8, #0x2f
  423650:	b.ne	42365c <feof@plt+0x20c8c>  // b.any
  423654:	add	x2, x19, #0xd8
  423658:	b	423678 <feof@plt+0x20ca8>
  42365c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  423660:	add	x1, x1, #0xb58
  423664:	mov	x0, x19
  423668:	mov	w2, wzr
  42366c:	bl	423eb0 <feof@plt+0x214e0>
  423670:	mov	x2, x0
  423674:	cbz	x0, 4236b0 <feof@plt+0x20ce0>
  423678:	mov	x0, x19
  42367c:	mov	x1, x20
  423680:	mov	w3, wzr
  423684:	mov	w4, wzr
  423688:	mov	w5, wzr
  42368c:	mov	w6, wzr
  423690:	bl	421ea8 <feof@plt+0x1f4d8>
  423694:	mov	x1, x0
  423698:	mov	x0, x19
  42369c:	ldp	x20, x19, [sp, #16]
  4236a0:	mov	w2, wzr
  4236a4:	mov	w3, wzr
  4236a8:	ldp	x29, x30, [sp], #32
  4236ac:	b	4228e0 <feof@plt+0x1ff10>
  4236b0:	ldp	x20, x19, [sp, #16]
  4236b4:	ldp	x29, x30, [sp], #32
  4236b8:	ret
  4236bc:	stp	x29, x30, [sp, #-32]!
  4236c0:	ldrb	w8, [x1]
  4236c4:	str	x19, [sp, #16]
  4236c8:	mov	x3, x1
  4236cc:	mov	x19, x0
  4236d0:	cmp	w8, #0x2f
  4236d4:	mov	x29, sp
  4236d8:	b.ne	4236e4 <feof@plt+0x20d14>  // b.any
  4236dc:	add	x2, x19, #0xd8
  4236e0:	b	4236ec <feof@plt+0x20d1c>
  4236e4:	ldr	x2, [x19, #208]
  4236e8:	cbz	x2, 423728 <feof@plt+0x20d58>
  4236ec:	mov	w4, #0x1                   	// #1
  4236f0:	mov	w5, #0x1                   	// #1
  4236f4:	mov	x0, x19
  4236f8:	mov	x1, x3
  4236fc:	mov	w3, wzr
  423700:	mov	w6, wzr
  423704:	bl	421ea8 <feof@plt+0x1f4d8>
  423708:	cbz	x0, 42373c <feof@plt+0x20d6c>
  42370c:	mov	x1, x0
  423710:	mov	x0, x19
  423714:	ldr	x19, [sp, #16]
  423718:	mov	w2, wzr
  42371c:	mov	w3, wzr
  423720:	ldp	x29, x30, [sp], #32
  423724:	b	4228e0 <feof@plt+0x1ff10>
  423728:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0xba68>
  42372c:	add	x2, x2, #0xb5b
  423730:	mov	w1, #0x3                   	// #3
  423734:	mov	x0, x19
  423738:	bl	41de04 <feof@plt+0x1b434>
  42373c:	ldr	x19, [sp, #16]
  423740:	mov	w0, wzr
  423744:	ldp	x29, x30, [sp], #32
  423748:	ret
  42374c:	ldrb	w8, [x0, #440]
  423750:	cbz	w8, 42375c <feof@plt+0x20d8c>
  423754:	ldr	x8, [x1, #56]
  423758:	cbz	x8, 423778 <feof@plt+0x20da8>
  42375c:	strb	wzr, [x0, #440]
  423760:	cbz	x2, 423788 <feof@plt+0x20db8>
  423764:	ldr	x8, [x1, #48]
  423768:	cmp	x8, x2
  42376c:	b.eq	42378c <feof@plt+0x20dbc>  // b.none
  423770:	mov	x0, x2
  423774:	b	4024c0 <free@plt>
  423778:	ldr	x8, [x0, #424]
  42377c:	str	x8, [x1, #56]
  423780:	strb	wzr, [x0, #440]
  423784:	cbnz	x2, 423764 <feof@plt+0x20d94>
  423788:	ret
  42378c:	strb	wzr, [x1, #213]
  423790:	stp	xzr, xzr, [x1, #40]
  423794:	mov	x0, x2
  423798:	b	4024c0 <free@plt>
  42379c:	ldr	x0, [x0]
  4237a0:	ret
  4237a4:	add	x0, x0, #0x48
  4237a8:	ret
  4237ac:	stp	x29, x30, [sp, #-48]!
  4237b0:	cmp	w3, #0x0
  4237b4:	cset	w8, ne  // ne = any
  4237b8:	str	x21, [sp, #16]
  4237bc:	stp	x20, x19, [sp, #32]
  4237c0:	mov	x29, sp
  4237c4:	stp	x1, x1, [x0, #200]
  4237c8:	strb	w8, [x0, #416]
  4237cc:	cbz	x1, 423808 <feof@plt+0x20e38>
  4237d0:	mov	x19, x2
  4237d4:	mov	x20, x1
  4237d8:	mov	x21, x0
  4237dc:	b	4237e8 <feof@plt+0x20e18>
  4237e0:	ldr	x20, [x20]
  4237e4:	cbz	x20, 423808 <feof@plt+0x20e38>
  4237e8:	ldr	x0, [x20, #8]
  4237ec:	str	xzr, [x20, #32]
  4237f0:	bl	402420 <strlen@plt>
  4237f4:	cmp	x20, x19
  4237f8:	str	w0, [x20, #16]
  4237fc:	b.ne	4237e0 <feof@plt+0x20e10>  // b.any
  423800:	str	x19, [x21, #208]
  423804:	b	4237e0 <feof@plt+0x20e10>
  423808:	ldp	x20, x19, [sp, #32]
  42380c:	ldr	x21, [sp, #16]
  423810:	ldp	x29, x30, [sp], #48
  423814:	ret
  423818:	ldr	x0, [x0, #8]
  42381c:	ret
  423820:	ldr	x0, [x0, #64]
  423824:	ret
  423828:	ldr	x0, [x0]
  42382c:	ret
  423830:	ldr	x0, [x0, #80]
  423834:	ret
  423838:	ldr	x0, [x0, #72]
  42383c:	ret
  423840:	stp	x29, x30, [sp, #-96]!
  423844:	stp	x26, x25, [sp, #32]
  423848:	stp	x24, x23, [sp, #48]
  42384c:	stp	x22, x21, [sp, #64]
  423850:	stp	x20, x19, [sp, #80]
  423854:	ldr	x8, [x0, #280]
  423858:	mov	x21, x0
  42385c:	mov	x19, x1
  423860:	mov	w1, #0x10                  	// #16
  423864:	str	x27, [sp, #16]
  423868:	mov	x29, sp
  42386c:	cbz	x8, 42387c <feof@plt+0x20eac>
  423870:	ldr	x8, [x8, #32]
  423874:	add	x1, x1, #0x20
  423878:	cbnz	x8, 423870 <feof@plt+0x20ea0>
  42387c:	mov	w0, #0x1                   	// #1
  423880:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  423884:	str	xzr, [x0]
  423888:	strb	wzr, [x0, #8]
  42388c:	ldr	x22, [x21, #280]
  423890:	mov	x20, x0
  423894:	cbz	x22, 423954 <feof@plt+0x20f84>
  423898:	adrp	x23, 451000 <_obstack_memory_used@@Base+0xa68>
  42389c:	add	x25, x20, #0x10
  4238a0:	add	x23, x23, #0x6d
  4238a4:	b	4238cc <feof@plt+0x20efc>
  4238a8:	ldr	x0, [x22, #40]
  4238ac:	ldr	x1, [x22, #120]
  4238b0:	add	x2, x8, #0x8
  4238b4:	bl	44ecd4 <feof@plt+0x4c304>
  4238b8:	ldr	x8, [x22, #120]
  4238bc:	lsl	x9, x26, #5
  4238c0:	str	x8, [x25, x9]
  4238c4:	ldr	x22, [x22, #32]
  4238c8:	cbz	x22, 42394c <feof@plt+0x20f7c>
  4238cc:	ldrb	w8, [x22, #211]
  4238d0:	cbnz	w8, 4238c4 <feof@plt+0x20ef4>
  4238d4:	ldr	w8, [x22, #204]
  4238d8:	cbnz	w8, 4238c4 <feof@plt+0x20ef4>
  4238dc:	ldrh	w8, [x22, #208]
  4238e0:	cbz	w8, 4238c4 <feof@plt+0x20ef4>
  4238e4:	ldr	x26, [x20]
  4238e8:	add	x8, x26, #0x1
  4238ec:	str	x8, [x20]
  4238f0:	ldrb	w9, [x22, #210]
  4238f4:	add	x8, x25, x26, lsl #5
  4238f8:	strb	w9, [x8, #24]
  4238fc:	ldrb	w10, [x20, #8]
  423900:	orr	w9, w10, w9
  423904:	strb	w9, [x20, #8]
  423908:	ldrb	w9, [x22, #213]
  42390c:	cbnz	w9, 4238a8 <feof@plt+0x20ed8>
  423910:	ldr	w27, [x22, #200]
  423914:	mov	x0, x22
  423918:	bl	4239dc <feof@plt+0x2100c>
  42391c:	tbz	w0, #0, 4239b8 <feof@plt+0x20fe8>
  423920:	ldr	w0, [x22, #200]
  423924:	mov	x1, x23
  423928:	bl	44eef4 <feof@plt+0x4c524>
  42392c:	add	x8, x25, x26, lsl #5
  423930:	add	x1, x8, #0x8
  423934:	mov	x24, x0
  423938:	bl	44ea44 <feof@plt+0x4c074>
  42393c:	mov	x0, x24
  423940:	bl	402490 <fclose@plt>
  423944:	str	w27, [x22, #200]
  423948:	b	4238b8 <feof@plt+0x20ee8>
  42394c:	ldr	x1, [x20]
  423950:	b	423958 <feof@plt+0x20f88>
  423954:	mov	x1, xzr
  423958:	adrp	x3, 423000 <feof@plt+0x20630>
  42395c:	mov	w21, #0x10                  	// #16
  423960:	add	x0, x20, #0x10
  423964:	add	x3, x3, #0xaa8
  423968:	mov	w2, #0x20                  	// #32
  42396c:	bfi	x21, x1, #5, #59
  423970:	bl	402530 <qsort@plt>
  423974:	mov	w2, #0x1                   	// #1
  423978:	mov	x0, x20
  42397c:	mov	x1, x21
  423980:	mov	x3, x19
  423984:	bl	4028a0 <fwrite_unlocked@plt>
  423988:	cmp	x0, #0x1
  42398c:	mov	x0, x20
  423990:	cset	w19, eq  // eq = none
  423994:	bl	4024c0 <free@plt>
  423998:	mov	w0, w19
  42399c:	ldp	x20, x19, [sp, #80]
  4239a0:	ldp	x22, x21, [sp, #64]
  4239a4:	ldp	x24, x23, [sp, #48]
  4239a8:	ldp	x26, x25, [sp, #32]
  4239ac:	ldr	x27, [sp, #16]
  4239b0:	ldp	x29, x30, [sp], #96
  4239b4:	ret
  4239b8:	mov	x0, x21
  4239bc:	mov	x1, x22
  4239c0:	mov	w2, wzr
  4239c4:	mov	w3, wzr
  4239c8:	bl	4227d4 <feof@plt+0x1fe04>
  4239cc:	mov	x0, x20
  4239d0:	bl	4024c0 <free@plt>
  4239d4:	mov	w19, wzr
  4239d8:	b	423998 <feof@plt+0x20fc8>
  4239dc:	stp	x29, x30, [sp, #-32]!
  4239e0:	stp	x20, x19, [sp, #16]
  4239e4:	mov	x19, x0
  4239e8:	ldr	x0, [x0, #8]
  4239ec:	mov	x29, sp
  4239f0:	ldrb	w8, [x0]
  4239f4:	cbz	w8, 423a1c <feof@plt+0x2104c>
  4239f8:	mov	w1, #0x100                 	// #256
  4239fc:	mov	w2, #0x1b6                 	// #438
  423a00:	bl	402470 <open@plt>
  423a04:	mov	x20, x19
  423a08:	cmn	w0, #0x1
  423a0c:	str	w0, [x20, #200]!
  423a10:	b.eq	423a80 <feof@plt+0x210b0>  // b.none
  423a14:	mov	w1, w0
  423a18:	b	423a28 <feof@plt+0x21058>
  423a1c:	mov	x20, x19
  423a20:	mov	w1, wzr
  423a24:	str	wzr, [x20, #200]!
  423a28:	add	x2, x19, #0x48
  423a2c:	mov	w0, wzr
  423a30:	bl	402350 <__fxstat@plt>
  423a34:	cbnz	w0, 423a54 <feof@plt+0x21084>
  423a38:	ldr	w8, [x19, #88]
  423a3c:	and	w8, w8, #0xf000
  423a40:	cmp	w8, #0x4, lsl #12
  423a44:	b.ne	423a9c <feof@plt+0x210cc>  // b.any
  423a48:	bl	4027c0 <__errno_location@plt>
  423a4c:	mov	w8, #0x2                   	// #2
  423a50:	str	w8, [x0]
  423a54:	ldr	w0, [x20]
  423a58:	bl	402810 <close@plt>
  423a5c:	mov	w8, #0xffffffff            	// #-1
  423a60:	str	w8, [x20]
  423a64:	bl	4027c0 <__errno_location@plt>
  423a68:	ldr	w8, [x0]
  423a6c:	mov	w0, wzr
  423a70:	str	w8, [x19, #204]
  423a74:	ldp	x20, x19, [sp, #16]
  423a78:	ldp	x29, x30, [sp], #32
  423a7c:	ret
  423a80:	bl	4027c0 <__errno_location@plt>
  423a84:	ldr	w8, [x0]
  423a88:	cmp	w8, #0x14
  423a8c:	b.ne	423a68 <feof@plt+0x21098>  // b.any
  423a90:	mov	w8, #0x2                   	// #2
  423a94:	str	w8, [x0]
  423a98:	b	423a68 <feof@plt+0x21098>
  423a9c:	mov	w8, wzr
  423aa0:	mov	w0, #0x1                   	// #1
  423aa4:	b	423a70 <feof@plt+0x210a0>
  423aa8:	ldr	x8, [x0]
  423aac:	ldr	x9, [x1]
  423ab0:	rev	x8, x8
  423ab4:	rev	x9, x9
  423ab8:	cmp	x8, x9
  423abc:	b.ne	423b10 <feof@plt+0x21140>  // b.any
  423ac0:	ldr	x8, [x0, #8]
  423ac4:	ldr	x9, [x1, #8]
  423ac8:	rev	x8, x8
  423acc:	rev	x9, x9
  423ad0:	cmp	x8, x9
  423ad4:	b.ne	423b10 <feof@plt+0x21140>  // b.any
  423ad8:	ldr	x8, [x0, #16]
  423adc:	ldr	x9, [x1, #16]
  423ae0:	rev	x8, x8
  423ae4:	rev	x9, x9
  423ae8:	cmp	x8, x9
  423aec:	b.ne	423b10 <feof@plt+0x21140>  // b.any
  423af0:	ldr	x8, [x0, #24]
  423af4:	ldr	x9, [x1, #24]
  423af8:	rev	x8, x8
  423afc:	rev	x9, x9
  423b00:	cmp	x8, x9
  423b04:	b.ne	423b10 <feof@plt+0x21140>  // b.any
  423b08:	mov	w0, wzr
  423b0c:	ret
  423b10:	cmp	x8, x9
  423b14:	mov	w8, #0xffffffff            	// #-1
  423b18:	cneg	w0, w8, cs  // cs = hs, nlast
  423b1c:	ret
  423b20:	sub	sp, sp, #0x50
  423b24:	stp	x20, x19, [sp, #64]
  423b28:	mov	x19, x1
  423b2c:	mov	x0, sp
  423b30:	mov	w1, #0x10                  	// #16
  423b34:	mov	w2, #0x1                   	// #1
  423b38:	mov	x3, x19
  423b3c:	stp	x29, x30, [sp, #48]
  423b40:	add	x29, sp, #0x30
  423b44:	bl	4024d0 <fread_unlocked@plt>
  423b48:	cmp	x0, #0x1
  423b4c:	b.ne	423b8c <feof@plt+0x211bc>  // b.any
  423b50:	ldr	x20, [sp]
  423b54:	mov	w0, #0x10                  	// #16
  423b58:	bfi	x0, x20, #5, #59
  423b5c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423b60:	ldr	q0, [sp]
  423b64:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  423b68:	str	x0, [x8, #1912]
  423b6c:	mov	w1, #0x20                  	// #32
  423b70:	str	q0, [x0], #16
  423b74:	mov	x2, x20
  423b78:	mov	x3, x19
  423b7c:	bl	4024d0 <fread_unlocked@plt>
  423b80:	cmp	x0, x20
  423b84:	cset	w0, eq  // eq = none
  423b88:	b	423b90 <feof@plt+0x211c0>
  423b8c:	mov	w0, wzr
  423b90:	ldp	x20, x19, [sp, #64]
  423b94:	ldp	x29, x30, [sp, #48]
  423b98:	add	sp, sp, #0x50
  423b9c:	ret
  423ba0:	stp	x29, x30, [sp, #-48]!
  423ba4:	str	x21, [sp, #16]
  423ba8:	stp	x20, x19, [sp, #32]
  423bac:	mov	x29, sp
  423bb0:	mov	w19, w2
  423bb4:	mov	x20, x1
  423bb8:	mov	x21, x0
  423bbc:	bl	422e6c <feof@plt+0x2049c>
  423bc0:	mov	x2, x0
  423bc4:	mov	x0, x21
  423bc8:	mov	x1, x20
  423bcc:	mov	w3, wzr
  423bd0:	mov	w4, w19
  423bd4:	mov	w5, wzr
  423bd8:	mov	w6, wzr
  423bdc:	bl	421ea8 <feof@plt+0x1f4d8>
  423be0:	ldr	w8, [x0, #204]
  423be4:	ldp	x20, x19, [sp, #32]
  423be8:	ldr	x21, [sp, #16]
  423bec:	cmp	w8, #0x2
  423bf0:	cset	w0, ne  // ne = any
  423bf4:	ldp	x29, x30, [sp], #48
  423bf8:	ret
  423bfc:	stp	x29, x30, [sp, #-96]!
  423c00:	stp	x28, x27, [sp, #16]
  423c04:	stp	x26, x25, [sp, #32]
  423c08:	stp	x24, x23, [sp, #48]
  423c0c:	stp	x22, x21, [sp, #64]
  423c10:	stp	x20, x19, [sp, #80]
  423c14:	mov	x29, sp
  423c18:	sub	sp, sp, #0x10
  423c1c:	ldr	w21, [x0, #16]
  423c20:	mov	x8, sp
  423c24:	mov	x27, x0
  423c28:	add	x9, x21, #0x1b
  423c2c:	and	x9, x9, #0x1fffffff0
  423c30:	sub	x20, x8, x9
  423c34:	mov	sp, x20
  423c38:	ldr	x1, [x0, #8]
  423c3c:	mov	x0, x20
  423c40:	mov	x2, x21
  423c44:	bl	402390 <memcpy@plt>
  423c48:	cbz	w21, 423c70 <feof@plt+0x212a0>
  423c4c:	add	x8, x21, x20
  423c50:	ldurb	w8, [x8, #-1]
  423c54:	cmp	w8, #0x2f
  423c58:	b.eq	423c74 <feof@plt+0x212a4>  // b.none
  423c5c:	add	x8, x21, #0x1
  423c60:	mov	w9, #0x2f                  	// #47
  423c64:	strb	w9, [x20, x21]
  423c68:	mov	x21, x8
  423c6c:	b	423c74 <feof@plt+0x212a4>
  423c70:	mov	x21, xzr
  423c74:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0xba68>
  423c78:	add	x8, x8, #0xb10
  423c7c:	ldr	x8, [x8]
  423c80:	mov	w10, #0x6367                	// #25447
  423c84:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  423c88:	add	x9, x20, x21
  423c8c:	movk	w10, #0x63, lsl #16
  423c90:	add	x1, x1, #0x8d
  423c94:	mov	x0, x20
  423c98:	str	x8, [x9]
  423c9c:	stur	w10, [x9, #7]
  423ca0:	bl	44eec0 <feof@plt+0x4c4f0>
  423ca4:	mov	x20, x0
  423ca8:	mov	w0, #0x48                  	// #72
  423cac:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423cb0:	str	x0, [x27, #32]
  423cb4:	cbz	x20, 423e88 <feof@plt+0x214b8>
  423cb8:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x10a68>
  423cbc:	mov	x19, xzr
  423cc0:	mov	w25, #0x9                   	// #9
  423cc4:	add	x26, x26, #0xa50
  423cc8:	mov	x28, x19
  423ccc:	ldp	x8, x9, [x20, #8]
  423cd0:	cmp	x8, x9
  423cd4:	b.cs	423cf8 <feof@plt+0x21328>  // b.hs, b.nlast
  423cd8:	add	x9, x8, #0x1
  423cdc:	str	x9, [x20, #8]
  423ce0:	ldrb	w21, [x8]
  423ce4:	and	w8, w21, #0xff
  423ce8:	ldrh	w8, [x26, w8, uxtw #1]
  423cec:	tst	w8, #0xc00
  423cf0:	b.ne	423ccc <feof@plt+0x212fc>  // b.any
  423cf4:	b	423d10 <feof@plt+0x21340>
  423cf8:	mov	x0, x20
  423cfc:	bl	4027d0 <__uflow@plt>
  423d00:	mov	w21, w0
  423d04:	cmn	w0, #0x1
  423d08:	b.ne	423ce4 <feof@plt+0x21314>  // b.any
  423d0c:	b	423e78 <feof@plt+0x214a8>
  423d10:	add	x19, x28, #0x2
  423d14:	cmp	x19, x25
  423d18:	b.ls	423d30 <feof@plt+0x21360>  // b.plast
  423d1c:	ldr	x0, [x27, #32]
  423d20:	add	x25, x25, #0x8
  423d24:	lsl	x1, x25, #3
  423d28:	bl	450728 <_obstack_memory_used@@Base+0x190>
  423d2c:	str	x0, [x27, #32]
  423d30:	mov	w0, w21
  423d34:	mov	x1, x20
  423d38:	bl	423fb4 <feof@plt+0x215e4>
  423d3c:	ldr	x8, [x27, #32]
  423d40:	str	x0, [x8, x28, lsl #3]
  423d44:	ldp	x8, x9, [x20, #8]
  423d48:	cmp	x8, x9
  423d4c:	b.cs	423d6c <feof@plt+0x2139c>  // b.hs, b.nlast
  423d50:	add	x9, x8, #0x1
  423d54:	str	x9, [x20, #8]
  423d58:	ldrb	w0, [x8]
  423d5c:	and	w8, w0, #0xff
  423d60:	ldrh	w8, [x26, w8, uxtw #1]
  423d64:	tbnz	w8, #0, 423d44 <feof@plt+0x21374>
  423d68:	b	423d7c <feof@plt+0x213ac>
  423d6c:	mov	x0, x20
  423d70:	bl	4027d0 <__uflow@plt>
  423d74:	cmn	w0, #0x1
  423d78:	b.ne	423d5c <feof@plt+0x2138c>  // b.any
  423d7c:	mov	x1, x20
  423d80:	bl	423fb4 <feof@plt+0x215e4>
  423d84:	ldrb	w8, [x0]
  423d88:	mov	x21, x0
  423d8c:	cmp	w8, #0x2f
  423d90:	b.ne	423da8 <feof@plt+0x213d8>  // b.any
  423d94:	ldr	x8, [x27, #32]
  423d98:	lsl	x9, x28, #3
  423d9c:	orr	x9, x9, #0x8
  423da0:	str	x21, [x8, x9]
  423da4:	b	423e38 <feof@plt+0x21468>
  423da8:	ldr	w22, [x27, #16]
  423dac:	mov	x0, x21
  423db0:	stur	x19, [x29, #-8]
  423db4:	mov	x19, x25
  423db8:	mov	x24, x27
  423dbc:	bl	402420 <strlen@plt>
  423dc0:	add	x25, x22, #0x1
  423dc4:	add	x23, x0, #0x1
  423dc8:	add	x0, x23, x25
  423dcc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423dd0:	ldr	x1, [x27, #8]
  423dd4:	mov	x2, x22
  423dd8:	mov	x24, x0
  423ddc:	bl	402390 <memcpy@plt>
  423de0:	cbz	w22, 423e04 <feof@plt+0x21434>
  423de4:	add	x8, x22, x24
  423de8:	ldurb	w8, [x8, #-1]
  423dec:	cmp	w8, #0x2f
  423df0:	b.eq	423e08 <feof@plt+0x21438>  // b.none
  423df4:	mov	w8, #0x2f                  	// #47
  423df8:	strb	w8, [x24, x22]
  423dfc:	mov	x22, x25
  423e00:	b	423e08 <feof@plt+0x21438>
  423e04:	mov	x22, xzr
  423e08:	mov	x25, x19
  423e0c:	ldur	x19, [x29, #-8]
  423e10:	add	x0, x24, x22
  423e14:	mov	x1, x21
  423e18:	mov	x2, x23
  423e1c:	bl	402390 <memcpy@plt>
  423e20:	ldr	x8, [x27, #32]
  423e24:	lsl	x9, x28, #3
  423e28:	orr	x9, x9, #0x8
  423e2c:	mov	x0, x21
  423e30:	str	x24, [x8, x9]
  423e34:	bl	4024c0 <free@plt>
  423e38:	ldp	x8, x9, [x20, #8]
  423e3c:	cmp	x8, x9
  423e40:	b.cs	423e64 <feof@plt+0x21494>  // b.hs, b.nlast
  423e44:	add	x9, x8, #0x1
  423e48:	str	x9, [x20, #8]
  423e4c:	ldrb	w0, [x8]
  423e50:	cmn	w0, #0x1
  423e54:	b.eq	423cc8 <feof@plt+0x212f8>  // b.none
  423e58:	cmp	w0, #0xa
  423e5c:	b.ne	423e38 <feof@plt+0x21468>  // b.any
  423e60:	b	423cc8 <feof@plt+0x212f8>
  423e64:	mov	x0, x20
  423e68:	bl	4027d0 <__uflow@plt>
  423e6c:	cmn	w0, #0x1
  423e70:	b.ne	423e58 <feof@plt+0x21488>  // b.any
  423e74:	b	423cc8 <feof@plt+0x212f8>
  423e78:	mov	x0, x20
  423e7c:	bl	402490 <fclose@plt>
  423e80:	ldr	x0, [x27, #32]
  423e84:	b	423e8c <feof@plt+0x214bc>
  423e88:	mov	x28, xzr
  423e8c:	str	xzr, [x0, x28, lsl #3]
  423e90:	mov	sp, x29
  423e94:	ldp	x20, x19, [sp, #80]
  423e98:	ldp	x22, x21, [sp, #64]
  423e9c:	ldp	x24, x23, [sp, #48]
  423ea0:	ldp	x26, x25, [sp, #32]
  423ea4:	ldp	x28, x27, [sp, #16]
  423ea8:	ldp	x29, x30, [sp], #96
  423eac:	ret
  423eb0:	stp	x29, x30, [sp, #-64]!
  423eb4:	stp	x22, x21, [sp, #32]
  423eb8:	stp	x20, x19, [sp, #48]
  423ebc:	ldr	x20, [x0, #304]
  423ec0:	mov	x19, x0
  423ec4:	mov	x0, x1
  423ec8:	str	x23, [sp, #16]
  423ecc:	mov	x29, sp
  423ed0:	mov	w22, w2
  423ed4:	mov	x23, x1
  423ed8:	bl	44fea8 <feof@plt+0x4d4d8>
  423edc:	mov	w2, w0
  423ee0:	mov	w3, #0x1                   	// #1
  423ee4:	mov	x0, x20
  423ee8:	mov	x1, x23
  423eec:	bl	44f860 <feof@plt+0x4ce90>
  423ef0:	ldr	x8, [x0]
  423ef4:	mov	x20, x0
  423ef8:	cbz	x8, 423f0c <feof@plt+0x2153c>
  423efc:	ldr	x9, [x8, #8]
  423f00:	cbz	x9, 423f98 <feof@plt+0x215c8>
  423f04:	ldr	x8, [x8]
  423f08:	cbnz	x8, 423efc <feof@plt+0x2152c>
  423f0c:	mov	w0, #0x1                   	// #1
  423f10:	mov	w1, #0x40                  	// #64
  423f14:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  423f18:	ldr	x8, [x19, #200]
  423f1c:	mov	x21, x0
  423f20:	stp	x8, x23, [x0]
  423f24:	mov	x0, x23
  423f28:	bl	402420 <strlen@plt>
  423f2c:	str	w0, [x21, #16]
  423f30:	strb	w22, [x21, #20]
  423f34:	str	xzr, [x21, #40]
  423f38:	ldr	x0, [x19, #312]
  423f3c:	ldr	w8, [x0]
  423f40:	cmp	w8, #0x7f
  423f44:	b.ne	423f64 <feof@plt+0x21594>  // b.any
  423f48:	mov	w0, #0xff0                 	// #4080
  423f4c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423f50:	str	wzr, [x0]
  423f54:	ldr	x9, [x19, #312]
  423f58:	mov	w8, wzr
  423f5c:	str	x9, [x0, #8]
  423f60:	str	x0, [x19, #312]
  423f64:	add	w9, w8, #0x1
  423f68:	str	w9, [x0]
  423f6c:	ldr	x9, [x20]
  423f70:	mov	w8, w8
  423f74:	add	x8, x0, x8, lsl #5
  423f78:	str	x9, [x8, #16]!
  423f7c:	str	xzr, [x8, #8]
  423f80:	ldr	x9, [x19, #40]
  423f84:	ldr	w9, [x9, #56]
  423f88:	str	x21, [x8, #24]
  423f8c:	str	w9, [x8, #16]
  423f90:	str	x8, [x20]
  423f94:	b	423f9c <feof@plt+0x215cc>
  423f98:	ldr	x21, [x8, #24]
  423f9c:	mov	x0, x21
  423fa0:	ldp	x20, x19, [sp, #48]
  423fa4:	ldp	x22, x21, [sp, #32]
  423fa8:	ldr	x23, [sp, #16]
  423fac:	ldp	x29, x30, [sp], #64
  423fb0:	ret
  423fb4:	stp	x29, x30, [sp, #-80]!
  423fb8:	stp	x22, x21, [sp, #48]
  423fbc:	mov	w21, w0
  423fc0:	mov	w0, #0x15                  	// #21
  423fc4:	stp	x26, x25, [sp, #16]
  423fc8:	stp	x24, x23, [sp, #32]
  423fcc:	stp	x20, x19, [sp, #64]
  423fd0:	mov	x29, sp
  423fd4:	mov	x19, x1
  423fd8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  423fdc:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x10a68>
  423fe0:	and	w8, w21, #0xff
  423fe4:	add	x22, x22, #0xa50
  423fe8:	ldrh	w8, [x22, w8, uxtw #1]
  423fec:	mov	x20, x0
  423ff0:	tst	w8, #0xc00
  423ff4:	b.eq	424028 <feof@plt+0x21658>  // b.none
  423ff8:	mov	x23, x20
  423ffc:	mov	w0, w21
  424000:	mov	x1, x19
  424004:	strb	wzr, [x23]
  424008:	bl	402410 <ungetc@plt>
  42400c:	mov	x0, x20
  424010:	ldp	x20, x19, [sp, #64]
  424014:	ldp	x22, x21, [sp, #48]
  424018:	ldp	x24, x23, [sp, #32]
  42401c:	ldp	x26, x25, [sp, #16]
  424020:	ldp	x29, x30, [sp], #80
  424024:	ret
  424028:	mov	w24, #0x14                  	// #20
  42402c:	mov	x23, x20
  424030:	strb	w21, [x20]
  424034:	b	42403c <feof@plt+0x2166c>
  424038:	strb	w21, [x23]
  42403c:	ldp	x8, x9, [x19, #8]
  424040:	add	x23, x23, #0x1
  424044:	cmp	x8, x9
  424048:	b.cs	42409c <feof@plt+0x216cc>  // b.hs, b.nlast
  42404c:	add	x9, x8, #0x1
  424050:	str	x9, [x19, #8]
  424054:	ldrb	w21, [x8]
  424058:	and	w8, w21, #0xff
  42405c:	ldrh	w8, [x22, w8, uxtw #1]
  424060:	tst	w8, #0xc00
  424064:	b.ne	423ffc <feof@plt+0x2162c>  // b.any
  424068:	sub	x25, x23, x20
  42406c:	cmp	x25, w24, sxtw
  424070:	b.ne	424038 <feof@plt+0x21668>  // b.any
  424074:	mov	w8, #0x1                   	// #1
  424078:	bfi	w8, w24, #1, #31
  42407c:	sxtw	x1, w8
  424080:	mov	x0, x20
  424084:	lsl	w26, w24, #1
  424088:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42408c:	mov	x20, x0
  424090:	add	x23, x0, x25
  424094:	mov	w24, w26
  424098:	b	424038 <feof@plt+0x21668>
  42409c:	mov	x0, x19
  4240a0:	bl	4027d0 <__uflow@plt>
  4240a4:	mov	w21, w0
  4240a8:	cmn	w0, #0x1
  4240ac:	b.ne	424058 <feof@plt+0x21688>  // b.any
  4240b0:	b	423ffc <feof@plt+0x2162c>
  4240b4:	sub	sp, sp, #0x50
  4240b8:	stp	x29, x30, [sp, #16]
  4240bc:	stp	x24, x23, [sp, #32]
  4240c0:	stp	x22, x21, [sp, #48]
  4240c4:	stp	x20, x19, [sp, #64]
  4240c8:	ldr	x24, [x1, #8]
  4240cc:	mov	x22, x0
  4240d0:	mov	x0, x1
  4240d4:	add	x29, sp, #0x10
  4240d8:	mov	x20, x2
  4240dc:	mov	x19, x1
  4240e0:	str	x2, [x1, #8]
  4240e4:	bl	4239dc <feof@plt+0x2100c>
  4240e8:	tbz	w0, #0, 424194 <feof@plt+0x217c4>
  4240ec:	ldr	x8, [x22, #968]
  4240f0:	ldr	w2, [x19, #200]
  4240f4:	mov	x0, x22
  4240f8:	mov	x1, x20
  4240fc:	blr	x8
  424100:	mov	w23, w0
  424104:	and	w21, w0, #0x1
  424108:	tbnz	w0, #0, 42411c <feof@plt+0x2174c>
  42410c:	ldr	w0, [x19, #200]
  424110:	bl	402810 <close@plt>
  424114:	mov	w8, #0xffffffff            	// #-1
  424118:	str	w8, [x19, #200]
  42411c:	ldrb	w8, [x22, #1131]
  424120:	cbz	w8, 424198 <feof@plt+0x217c8>
  424124:	ldr	x8, [x22, #40]
  424128:	ldr	w9, [x8, #48]
  42412c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  424130:	ldr	x0, [x8, #1336]
  424134:	cmp	w9, #0x2
  424138:	b.cc	4241b8 <feof@plt+0x217e8>  // b.lo, b.ul, b.last
  42413c:	mov	w9, #0x1                   	// #1
  424140:	mov	w10, #0x2e                  	// #46
  424144:	ldp	x11, x12, [x0, #40]
  424148:	cmp	x11, x12
  42414c:	b.cs	424178 <feof@plt+0x217a8>  // b.hs, b.nlast
  424150:	add	x12, x11, #0x1
  424154:	str	x12, [x0, #40]
  424158:	strb	w10, [x11]
  42415c:	ldr	x11, [x22, #40]
  424160:	ldr	x0, [x8, #1336]
  424164:	add	w9, w9, #0x1
  424168:	ldr	w11, [x11, #48]
  42416c:	cmp	w9, w11
  424170:	b.cc	424144 <feof@plt+0x21774>  // b.lo, b.ul, b.last
  424174:	b	4241b8 <feof@plt+0x217e8>
  424178:	mov	w1, #0x2e                  	// #46
  42417c:	stur	w9, [x29, #-4]
  424180:	bl	402480 <__overflow@plt>
  424184:	ldur	w9, [x29, #-4]
  424188:	mov	w10, #0x2e                  	// #46
  42418c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  424190:	b	42415c <feof@plt+0x2178c>
  424194:	mov	w21, wzr
  424198:	str	x24, [x19, #8]
  42419c:	mov	w0, w21
  4241a0:	ldp	x20, x19, [sp, #64]
  4241a4:	ldp	x22, x21, [sp, #48]
  4241a8:	ldp	x24, x23, [sp, #32]
  4241ac:	ldp	x29, x30, [sp, #16]
  4241b0:	add	sp, sp, #0x50
  4241b4:	ret
  4241b8:	tst	w23, #0x1
  4241bc:	mov	w8, #0x78                  	// #120
  4241c0:	mov	w9, #0x21                  	// #33
  4241c4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  4241c8:	csel	w2, w9, w8, ne  // ne = any
  4241cc:	add	x1, x1, #0xb20
  4241d0:	mov	x3, x20
  4241d4:	bl	402440 <fprintf@plt>
  4241d8:	b	424198 <feof@plt+0x217c8>
  4241dc:	stp	x29, x30, [sp, #-80]!
  4241e0:	stp	x24, x23, [sp, #32]
  4241e4:	stp	x22, x21, [sp, #48]
  4241e8:	stp	x20, x19, [sp, #64]
  4241ec:	ldrb	w8, [x1, #213]
  4241f0:	str	x25, [sp, #16]
  4241f4:	mov	x29, sp
  4241f8:	cbz	w8, 424204 <feof@plt+0x21834>
  4241fc:	mov	w0, #0x1                   	// #1
  424200:	b	42421c <feof@plt+0x2184c>
  424204:	ldrb	w8, [x1, #211]
  424208:	mov	x19, x1
  42420c:	cbnz	w8, 424218 <feof@plt+0x21848>
  424210:	ldr	w8, [x19, #204]
  424214:	cbz	w8, 424234 <feof@plt+0x21864>
  424218:	mov	w0, wzr
  42421c:	ldp	x20, x19, [sp, #64]
  424220:	ldp	x22, x21, [sp, #48]
  424224:	ldp	x24, x23, [sp, #32]
  424228:	ldr	x25, [sp, #16]
  42422c:	ldp	x29, x30, [sp], #80
  424230:	ret
  424234:	ldr	w8, [x19, #200]
  424238:	mov	w21, w2
  42423c:	mov	x20, x0
  424240:	cmn	w8, #0x1
  424244:	b.ne	424254 <feof@plt+0x21884>  // b.any
  424248:	mov	x0, x19
  42424c:	bl	4239dc <feof@plt+0x2100c>
  424250:	tbz	w0, #0, 424310 <feof@plt+0x21940>
  424254:	ldr	w8, [x19, #88]
  424258:	and	w25, w8, #0xf000
  42425c:	cmp	w25, #0x6, lsl #12
  424260:	b.ne	424288 <feof@plt+0x218b8>  // b.any
  424264:	ldr	x4, [x19, #8]
  424268:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0xba68>
  42426c:	add	x3, x3, #0xb27
  424270:	mov	w1, #0x3                   	// #3
  424274:	mov	x0, x20
  424278:	mov	w2, w21
  42427c:	bl	41e6b4 <feof@plt+0x1bce4>
  424280:	mov	w8, #0x1                   	// #1
  424284:	b	4243bc <feof@plt+0x219ec>
  424288:	cmp	w25, #0x8, lsl #12
  42428c:	b.ne	424298 <feof@plt+0x218c8>  // b.any
  424290:	ldr	x22, [x19, #120]
  424294:	b	42429c <feof@plt+0x218cc>
  424298:	mov	w22, #0x2000                	// #8192
  42429c:	add	x0, x22, #0x10
  4242a0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4242a4:	ldr	w8, [x19, #200]
  4242a8:	mov	x23, x0
  4242ac:	mov	x1, x23
  4242b0:	mov	x2, x22
  4242b4:	mov	w0, w8
  4242b8:	bl	402570 <read@plt>
  4242bc:	cmp	x0, #0x1
  4242c0:	b.lt	42432c <feof@plt+0x2195c>  // b.tstop
  4242c4:	mov	x24, xzr
  4242c8:	b	4242e4 <feof@plt+0x21914>
  4242cc:	ldr	w0, [x19, #200]
  4242d0:	add	x1, x23, x24
  4242d4:	sub	x2, x22, x24
  4242d8:	bl	402570 <read@plt>
  4242dc:	cmp	x0, #0x0
  4242e0:	b.le	424330 <feof@plt+0x21960>
  4242e4:	add	x24, x24, x0
  4242e8:	cmp	x24, x22
  4242ec:	b.ne	4242cc <feof@plt+0x218fc>  // b.any
  4242f0:	cmp	w25, #0x8, lsl #12
  4242f4:	b.eq	424388 <feof@plt+0x219b8>  // b.none
  4242f8:	lsl	x22, x22, #1
  4242fc:	add	x1, x22, #0x10
  424300:	mov	x0, x23
  424304:	bl	450728 <_obstack_memory_used@@Base+0x190>
  424308:	mov	x23, x0
  42430c:	b	4242cc <feof@plt+0x218fc>
  424310:	mov	x0, x20
  424314:	mov	x1, x19
  424318:	mov	w2, wzr
  42431c:	mov	w3, w21
  424320:	bl	4227d4 <feof@plt+0x1fe04>
  424324:	mov	w0, wzr
  424328:	b	42421c <feof@plt+0x2184c>
  42432c:	mov	x24, xzr
  424330:	tbnz	x0, #63, 424364 <feof@plt+0x21994>
  424334:	cmp	x24, x22
  424338:	b.eq	42438c <feof@plt+0x219bc>  // b.none
  42433c:	cmp	w25, #0x8, lsl #12
  424340:	b.ne	42438c <feof@plt+0x219bc>  // b.any
  424344:	ldr	x4, [x19, #8]
  424348:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0xba68>
  42434c:	add	x3, x3, #0xb3c
  424350:	mov	x0, x20
  424354:	mov	w1, wzr
  424358:	mov	w2, w21
  42435c:	bl	41e6b4 <feof@plt+0x1bce4>
  424360:	b	42438c <feof@plt+0x219bc>
  424364:	ldr	x2, [x19, #8]
  424368:	mov	w1, #0x3                   	// #3
  42436c:	mov	x0, x20
  424370:	mov	w3, w21
  424374:	bl	41e8bc <feof@plt+0x1beec>
  424378:	mov	x0, x23
  42437c:	bl	4024c0 <free@plt>
  424380:	mov	w8, #0x1                   	// #1
  424384:	b	4243bc <feof@plt+0x219ec>
  424388:	mov	x24, x22
  42438c:	ldr	x1, [x20, #1184]
  424390:	add	x3, x22, #0x10
  424394:	add	x5, x19, #0x30
  424398:	add	x6, x19, #0x78
  42439c:	mov	x0, x20
  4243a0:	mov	x2, x23
  4243a4:	mov	x4, x24
  4243a8:	bl	418148 <feof@plt+0x15778>
  4243ac:	mov	w8, wzr
  4243b0:	mov	w9, #0x1                   	// #1
  4243b4:	str	x0, [x19, #40]
  4243b8:	strb	w9, [x19, #213]
  4243bc:	ldr	w0, [x19, #200]
  4243c0:	strb	w8, [x19, #211]
  4243c4:	bl	402810 <close@plt>
  4243c8:	ldrb	w8, [x19, #211]
  4243cc:	mov	w9, #0xffffffff            	// #-1
  4243d0:	str	w9, [x19, #200]
  4243d4:	cmp	w8, #0x0
  4243d8:	cset	w0, eq  // eq = none
  4243dc:	b	42421c <feof@plt+0x2184c>
  4243e0:	stp	x29, x30, [sp, #-32]!
  4243e4:	stp	x20, x19, [sp, #16]
  4243e8:	mov	x20, x1
  4243ec:	mov	x19, x0
  4243f0:	mov	x29, sp
  4243f4:	cbnz	x1, 424438 <feof@plt+0x21a68>
  4243f8:	mov	w8, #0x1                   	// #1
  4243fc:	mov	w0, #0xd                   	// #13
  424400:	strb	w8, [x19, #1304]
  424404:	bl	4323a0 <feof@plt+0x2f9d0>
  424408:	adrp	x8, 424000 <feof@plt+0x21630>
  42440c:	add	x8, x8, #0x548
  424410:	adrp	x3, 450000 <feof@plt+0x4d630>
  424414:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x330>
  424418:	mov	x20, x0
  42441c:	str	x8, [x0, #96]
  424420:	add	x0, x19, #0x2d0
  424424:	add	x3, x3, #0x6a4
  424428:	add	x4, x4, #0x4c0
  42442c:	mov	x1, xzr
  424430:	mov	x2, xzr
  424434:	bl	450220 <_obstack_begin@@Base>
  424438:	mov	x0, x19
  42443c:	str	x19, [x20, #120]
  424440:	str	x20, [x19, #1088]
  424444:	bl	41c218 <feof@plt+0x19848>
  424448:	mov	x0, x19
  42444c:	bl	41a47c <feof@plt+0x17aac>
  424450:	ldr	x0, [x19, #1088]
  424454:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  424458:	add	x1, x1, #0xfed
  42445c:	mov	w2, #0x7                   	// #7
  424460:	mov	w3, #0x1                   	// #1
  424464:	bl	43244c <feof@plt+0x2fa7c>
  424468:	ldr	x8, [x19, #1088]
  42446c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  424470:	str	x0, [x19, #1248]
  424474:	add	x1, x1, #0xb85
  424478:	mov	w2, #0x4                   	// #4
  42447c:	mov	w3, #0x1                   	// #1
  424480:	mov	x0, x8
  424484:	bl	43244c <feof@plt+0x2fa7c>
  424488:	ldr	x8, [x19, #1088]
  42448c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  424490:	str	x0, [x19, #1256]
  424494:	add	x1, x1, #0xb8a
  424498:	mov	w2, #0x5                   	// #5
  42449c:	mov	w3, #0x1                   	// #1
  4244a0:	mov	x0, x8
  4244a4:	bl	43244c <feof@plt+0x2fa7c>
  4244a8:	ldr	x8, [x19, #1088]
  4244ac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  4244b0:	str	x0, [x19, #1264]
  4244b4:	add	x1, x1, #0xb90
  4244b8:	mov	w2, #0xb                   	// #11
  4244bc:	mov	w3, #0x1                   	// #1
  4244c0:	mov	x0, x8
  4244c4:	bl	43244c <feof@plt+0x2fa7c>
  4244c8:	str	x0, [x19, #1272]
  4244cc:	ldrh	w8, [x0, #18]
  4244d0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  4244d4:	add	x1, x1, #0x2ae
  4244d8:	mov	w2, #0xa                   	// #10
  4244dc:	orr	w8, w8, #0x10
  4244e0:	strh	w8, [x0, #18]
  4244e4:	ldr	x0, [x19, #1088]
  4244e8:	mov	w3, #0x1                   	// #1
  4244ec:	bl	43244c <feof@plt+0x2fa7c>
  4244f0:	str	x0, [x19, #1280]
  4244f4:	ldrh	w8, [x0, #18]
  4244f8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  4244fc:	add	x1, x1, #0xb9c
  424500:	mov	w2, #0xf                   	// #15
  424504:	orr	w8, w8, #0x10
  424508:	strh	w8, [x0, #18]
  42450c:	ldr	x0, [x19, #1088]
  424510:	mov	w3, #0x1                   	// #1
  424514:	bl	43244c <feof@plt+0x2fa7c>
  424518:	ldr	x8, [x19, #1088]
  42451c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0xba68>
  424520:	str	x0, [x19, #1288]
  424524:	add	x1, x1, #0xbac
  424528:	mov	w2, #0x14                  	// #20
  42452c:	mov	w3, #0x1                   	// #1
  424530:	mov	x0, x8
  424534:	bl	43244c <feof@plt+0x2fa7c>
  424538:	str	x0, [x19, #1296]
  42453c:	ldp	x20, x19, [sp, #16]
  424540:	ldp	x29, x30, [sp], #32
  424544:	ret
  424548:	stp	x29, x30, [sp, #-32]!
  42454c:	str	x19, [sp, #16]
  424550:	ldr	x19, [x0, #120]
  424554:	mov	x29, sp
  424558:	ldr	x9, [x19, #752]
  42455c:	ldr	x8, [x19, #744]
  424560:	sub	x9, x9, x8
  424564:	cmp	x9, #0x1f
  424568:	b.hi	42457c <feof@plt+0x21bac>  // b.pmore
  42456c:	add	x0, x19, #0x2d0
  424570:	mov	w1, #0x20                  	// #32
  424574:	bl	45037c <_obstack_newchunk@@Base>
  424578:	ldr	x8, [x19, #744]
  42457c:	ldr	x0, [x19, #736]
  424580:	add	x8, x8, #0x20
  424584:	str	x8, [x19, #744]
  424588:	cmp	x8, x0
  42458c:	b.ne	42459c <feof@plt+0x21bcc>  // b.any
  424590:	ldrb	w9, [x19, #800]
  424594:	orr	w9, w9, #0x2
  424598:	strb	w9, [x19, #800]
  42459c:	ldr	x10, [x19, #768]
  4245a0:	ldr	x11, [x19, #728]
  4245a4:	ldr	x9, [x19, #752]
  4245a8:	add	x8, x10, x8
  4245ac:	bic	x8, x8, x10
  4245b0:	sub	x10, x8, x11
  4245b4:	sub	x11, x9, x11
  4245b8:	cmp	x10, x11
  4245bc:	str	x8, [x19, #744]
  4245c0:	b.ls	4245cc <feof@plt+0x21bfc>  // b.plast
  4245c4:	mov	x8, x9
  4245c8:	str	x9, [x19, #744]
  4245cc:	movi	v0.2d, #0x0
  4245d0:	str	x8, [x19, #736]
  4245d4:	stp	q0, q0, [x0]
  4245d8:	ldr	x19, [sp, #16]
  4245dc:	ldp	x29, x30, [sp], #32
  4245e0:	ret
  4245e4:	ldr	x0, [x0, #1088]
  4245e8:	mov	w2, w2
  4245ec:	mov	w3, #0x1                   	// #1
  4245f0:	b	43244c <feof@plt+0x2fa7c>
  4245f4:	stp	x29, x30, [sp, #-32]!
  4245f8:	ldrb	w8, [x0, #1304]
  4245fc:	str	x19, [sp, #16]
  424600:	mov	x29, sp
  424604:	cbz	w8, 424628 <feof@plt+0x21c58>
  424608:	mov	x19, x0
  42460c:	ldr	x0, [x0, #1088]
  424610:	bl	432414 <feof@plt+0x2fa44>
  424614:	add	x0, x19, #0x2d0
  424618:	ldr	x19, [sp, #16]
  42461c:	mov	x1, xzr
  424620:	ldp	x29, x30, [sp], #32
  424624:	b	450504 <_obstack_free@@Base>
  424628:	ldr	x19, [sp, #16]
  42462c:	ldp	x29, x30, [sp], #32
  424630:	ret
  424634:	stp	x29, x30, [sp, #-16]!
  424638:	ldr	x0, [x0, #1088]
  42463c:	mov	w3, wzr
  424640:	sxtw	x2, w2
  424644:	mov	x29, sp
  424648:	bl	43244c <feof@plt+0x2fa7c>
  42464c:	cbz	x0, 424658 <feof@plt+0x21c88>
  424650:	ldrh	w8, [x0, #18]
  424654:	ubfx	w0, w8, #1, #1
  424658:	ldp	x29, x30, [sp], #16
  42465c:	ret
  424660:	ldr	x0, [x0, #1088]
  424664:	b	432770 <feof@plt+0x2fda0>
  424668:	stp	x29, x30, [sp, #-16]!
  42466c:	ldrb	w8, [x0, #4]
  424670:	mov	x29, sp
  424674:	cmp	w8, #0x35
  424678:	b.ne	424698 <feof@plt+0x21cc8>  // b.any
  42467c:	ldr	x8, [x0, #8]
  424680:	ldr	x0, [x8]
  424684:	bl	402820 <strcmp@plt>
  424688:	cmp	w0, #0x0
  42468c:	cset	w0, eq  // eq = none
  424690:	ldp	x29, x30, [sp], #16
  424694:	ret
  424698:	mov	w0, wzr
  42469c:	ldp	x29, x30, [sp], #16
  4246a0:	ret
  4246a4:	ret
  4246a8:	sub	sp, sp, #0x90
  4246ac:	stp	x29, x30, [sp, #48]
  4246b0:	stp	x28, x27, [sp, #64]
  4246b4:	stp	x26, x25, [sp, #80]
  4246b8:	stp	x24, x23, [sp, #96]
  4246bc:	stp	x22, x21, [sp, #112]
  4246c0:	stp	x20, x19, [sp, #128]
  4246c4:	ldr	x19, [x0]
  4246c8:	add	x29, sp, #0x30
  4246cc:	ldr	x20, [x19, #16]
  4246d0:	ldrb	w8, [x19, #105]
  4246d4:	str	xzr, [x19, #56]
  4246d8:	strb	wzr, [x19, #104]
  4246dc:	stp	x20, x20, [x19]
  4246e0:	tbnz	w8, #1, 4248c8 <feof@plt+0x21ef8>
  4246e4:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  4246e8:	adrp	x11, 45c000 <_obstack_memory_used@@Base+0xba68>
  4246ec:	ldr	q6, [x10, #3024]
  4246f0:	ldr	q7, [x11, #3040]
  4246f4:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  4246f8:	mov	w9, wzr
  4246fc:	mov	x8, xzr
  424700:	mov	w21, #0xffffffff            	// #-1
  424704:	movi	v4.16b, #0xa
  424708:	movi	v5.16b, #0xd
  42470c:	movi	v16.16b, #0x5c
  424710:	movi	v17.16b, #0x3f
  424714:	add	x10, x10, #0x788
  424718:	and	x11, x20, #0xfff
  42471c:	cmp	x11, #0xff1
  424720:	and	x11, x20, #0xfffffffffffffff0
  424724:	b.cs	424730 <feof@plt+0x21d60>  // b.hs, b.nlast
  424728:	ldr	q0, [x20]
  42472c:	b	42477c <feof@plt+0x21dac>
  424730:	ldr	q0, [x11]
  424734:	and	w12, w20, #0xf
  424738:	lsl	w12, w21, w12
  42473c:	cmeq	v1.16b, v0.16b, v4.16b
  424740:	cmeq	v2.16b, v0.16b, v5.16b
  424744:	cmeq	v3.16b, v0.16b, v16.16b
  424748:	cmeq	v0.16b, v0.16b, v17.16b
  42474c:	orr	v0.16b, v0.16b, v2.16b
  424750:	orr	v0.16b, v0.16b, v1.16b
  424754:	orr	v0.16b, v0.16b, v3.16b
  424758:	and	v0.16b, v0.16b, v6.16b
  42475c:	uaddlp	v0.8h, v0.16b
  424760:	ushl	v0.8h, v0.8h, v7.8h
  424764:	addv	h0, v0.8h
  424768:	fmov	w13, s0
  42476c:	and	w12, w12, w13
  424770:	ands	w12, w12, #0xffff
  424774:	b.ne	4247c0 <feof@plt+0x21df0>  // b.any
  424778:	ldr	q0, [x11, #16]!
  42477c:	cmeq	v1.16b, v0.16b, v4.16b
  424780:	cmeq	v2.16b, v0.16b, v5.16b
  424784:	cmeq	v3.16b, v0.16b, v16.16b
  424788:	cmeq	v0.16b, v0.16b, v17.16b
  42478c:	orr	v0.16b, v0.16b, v2.16b
  424790:	orr	v0.16b, v0.16b, v1.16b
  424794:	orr	v0.16b, v0.16b, v3.16b
  424798:	addp	d1, v0.2d
  42479c:	fmov	x12, d1
  4247a0:	cbz	x12, 424778 <feof@plt+0x21da8>
  4247a4:	and	v0.16b, v0.16b, v6.16b
  4247a8:	uaddlp	v0.8h, v0.16b
  4247ac:	ushl	v0.8h, v0.8h, v7.8h
  4247b0:	cmp	x11, x20
  4247b4:	addv	h0, v0.8h
  4247b8:	csel	x11, x20, x11, cc  // cc = lo, ul, last
  4247bc:	fmov	w12, s0
  4247c0:	rbit	w12, w12
  4247c4:	clz	w12, w12
  4247c8:	add	x20, x11, x12
  4247cc:	ldrb	w11, [x20]
  4247d0:	cmp	w11, #0x5c
  4247d4:	b.ne	4247e4 <feof@plt+0x21e14>  // b.any
  4247d8:	mov	x8, x20
  4247dc:	add	x20, x20, #0x1
  4247e0:	b	424718 <feof@plt+0x21d48>
  4247e4:	cmp	w11, #0x3f
  4247e8:	b.ne	4248e4 <feof@plt+0x21f14>  // b.any
  4247ec:	ldrb	w11, [x20, #1]
  4247f0:	cmp	w11, #0x3f
  4247f4:	b.ne	4247dc <feof@plt+0x21e0c>  // b.any
  4247f8:	stp	q7, q6, [sp]
  4247fc:	ldrb	w23, [x20, #2]
  424800:	mov	x22, x8
  424804:	stur	x0, [x29, #-8]
  424808:	ldrb	w8, [x10, x23]
  42480c:	cbz	w8, 424840 <feof@plt+0x21e70>
  424810:	ldr	w8, [x19, #64]
  424814:	cmp	w9, w8
  424818:	b.ne	42486c <feof@plt+0x21e9c>  // b.any
  42481c:	ldr	x0, [x19, #48]
  424820:	lsl	w8, w9, #1
  424824:	add	w8, w8, #0xc8
  424828:	lsl	x1, x8, #4
  42482c:	str	w8, [x19, #64]
  424830:	bl	450728 <_obstack_memory_used@@Base+0x190>
  424834:	ldr	w9, [x19, #60]
  424838:	str	x0, [x19, #48]
  42483c:	b	424870 <feof@plt+0x21ea0>
  424840:	ldur	x0, [x29, #-8]
  424844:	ldp	q7, q6, [sp]
  424848:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  42484c:	add	x10, x10, #0x788
  424850:	mov	x8, x22
  424854:	movi	v4.16b, #0xa
  424858:	movi	v5.16b, #0xd
  42485c:	movi	v16.16b, #0x5c
  424860:	movi	v17.16b, #0x3f
  424864:	add	x20, x20, #0x1
  424868:	b	424718 <feof@plt+0x21d48>
  42486c:	ldr	x0, [x19, #48]
  424870:	add	x8, x0, w9, uxtw #4
  424874:	ldur	x0, [x29, #-8]
  424878:	add	w9, w9, #0x1
  42487c:	str	x20, [x8]
  424880:	str	w23, [x8, #8]
  424884:	str	w9, [x19, #60]
  424888:	ldrb	w11, [x0, #1125]
  42488c:	ldp	q7, q6, [sp]
  424890:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  424894:	add	x10, x10, #0x788
  424898:	mov	x8, x22
  42489c:	movi	v4.16b, #0xa
  4248a0:	movi	v5.16b, #0xd
  4248a4:	movi	v16.16b, #0x5c
  4248a8:	movi	v17.16b, #0x3f
  4248ac:	cbz	w11, 4247dc <feof@plt+0x21e0c>
  4248b0:	mov	x21, x20
  4248b4:	ldrb	w8, [x21, #2]!
  4248b8:	add	x22, x19, #0x20
  4248bc:	ldrb	w8, [x10, x8]
  4248c0:	strb	w8, [x20]
  4248c4:	b	424a64 <feof@plt+0x22094>
  4248c8:	ldrb	w8, [x20]
  4248cc:	cmp	w8, #0xa
  4248d0:	b.eq	424998 <feof@plt+0x21fc8>  // b.none
  4248d4:	cmp	w8, #0xd
  4248d8:	b.eq	424978 <feof@plt+0x21fa8>  // b.none
  4248dc:	add	x20, x20, #0x1
  4248e0:	b	4248c8 <feof@plt+0x21ef8>
  4248e4:	mov	x22, x19
  4248e8:	ldr	x10, [x22, #32]!
  4248ec:	cmp	x20, x10
  4248f0:	b.eq	424998 <feof@plt+0x21fc8>  // b.none
  4248f4:	cmp	w11, #0xd
  4248f8:	mov	x21, x20
  4248fc:	b.eq	424a18 <feof@plt+0x22048>  // b.none
  424900:	cbz	x8, 42499c <feof@plt+0x21fcc>
  424904:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  424908:	mov	x23, xzr
  42490c:	sub	x10, x20, #0x1
  424910:	add	x11, x11, #0xa50
  424914:	ldrb	w12, [x10, x23]
  424918:	sub	x23, x23, #0x1
  42491c:	ldrh	w12, [x11, x12, lsl #1]
  424920:	tbnz	w12, #11, 424914 <feof@plt+0x21f44>
  424924:	sub	x10, x8, x20
  424928:	cmp	x10, x23
  42492c:	b.ne	42499c <feof@plt+0x21fcc>  // b.any
  424930:	mov	x24, x8
  424934:	ldr	w8, [x19, #64]
  424938:	cmn	x23, #0x1
  42493c:	mov	w10, #0x20                  	// #32
  424940:	mov	w11, #0x5c                  	// #92
  424944:	csel	w25, w11, w10, eq  // eq = none
  424948:	cmp	w9, w8
  42494c:	stur	x0, [x29, #-8]
  424950:	b.ne	424a40 <feof@plt+0x22070>  // b.any
  424954:	ldr	x0, [x19, #48]
  424958:	lsl	w8, w9, #1
  42495c:	add	w8, w8, #0xc8
  424960:	lsl	x1, x8, #4
  424964:	str	w8, [x19, #64]
  424968:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42496c:	ldr	w9, [x19, #60]
  424970:	str	x0, [x19, #48]
  424974:	b	424a44 <feof@plt+0x22074>
  424978:	ldr	x8, [x19, #32]
  42497c:	cmp	x8, x20
  424980:	b.eq	424998 <feof@plt+0x21fc8>  // b.none
  424984:	mov	x8, x20
  424988:	ldrb	w9, [x8, #1]!
  42498c:	cmp	w9, #0xa
  424990:	csel	x21, x8, x20, eq  // eq = none
  424994:	b	42499c <feof@plt+0x21fcc>
  424998:	mov	x21, x20
  42499c:	mov	w8, #0xa                   	// #10
  4249a0:	strb	w8, [x20], #1
  4249a4:	ldp	w8, w9, [x19, #60]
  4249a8:	cmp	w8, w9
  4249ac:	b.ne	4249d4 <feof@plt+0x22004>  // b.any
  4249b0:	ldr	x0, [x19, #48]
  4249b4:	lsl	w8, w8, #1
  4249b8:	add	w8, w8, #0xc8
  4249bc:	lsl	x1, x8, #4
  4249c0:	str	w8, [x19, #64]
  4249c4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4249c8:	ldr	w8, [x19, #60]
  4249cc:	str	x0, [x19, #48]
  4249d0:	b	4249d8 <feof@plt+0x22008>
  4249d4:	ldr	x0, [x19, #48]
  4249d8:	add	x9, x0, w8, uxtw #4
  4249dc:	mov	w10, #0xa                   	// #10
  4249e0:	add	w8, w8, #0x1
  4249e4:	add	x11, x21, #0x1
  4249e8:	str	x20, [x9]
  4249ec:	str	w10, [x9, #8]
  4249f0:	str	w8, [x19, #60]
  4249f4:	str	x11, [x19, #16]
  4249f8:	ldp	x20, x19, [sp, #128]
  4249fc:	ldp	x22, x21, [sp, #112]
  424a00:	ldp	x24, x23, [sp, #96]
  424a04:	ldp	x26, x25, [sp, #80]
  424a08:	ldp	x28, x27, [sp, #64]
  424a0c:	ldp	x29, x30, [sp, #48]
  424a10:	add	sp, sp, #0x90
  424a14:	ret
  424a18:	mov	x11, x20
  424a1c:	ldrb	w12, [x11, #1]!
  424a20:	mov	x21, x20
  424a24:	cmp	w12, #0xa
  424a28:	b.ne	424900 <feof@plt+0x21f30>  // b.any
  424a2c:	cmp	x11, x10
  424a30:	mov	x21, x11
  424a34:	b.ne	424900 <feof@plt+0x21f30>  // b.any
  424a38:	mov	x21, x11
  424a3c:	b	42499c <feof@plt+0x21fcc>
  424a40:	ldr	x0, [x19, #48]
  424a44:	add	x10, x20, x23
  424a48:	add	x8, x0, w9, uxtw #4
  424a4c:	add	w9, w9, #0x1
  424a50:	sub	x20, x10, #0x1
  424a54:	str	x24, [x8]
  424a58:	str	w25, [x8, #8]
  424a5c:	str	w9, [x19, #60]
  424a60:	str	x24, [x19, #16]
  424a64:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x10a68>
  424a68:	add	x26, x26, #0xa50
  424a6c:	mov	w28, #0x20                  	// #32
  424a70:	mov	w24, #0x5c                  	// #92
  424a74:	mov	x25, x21
  424a78:	ldrb	w11, [x21, #1]!
  424a7c:	mov	x8, x20
  424a80:	cmp	w11, #0x3f
  424a84:	strb	w11, [x20, #1]!
  424a88:	b.eq	424aa4 <feof@plt+0x220d4>  // b.none
  424a8c:	cmp	w11, #0xd
  424a90:	b.eq	424af4 <feof@plt+0x22124>  // b.none
  424a94:	cmp	w11, #0xa
  424a98:	b.ne	424a74 <feof@plt+0x220a4>  // b.any
  424a9c:	ldr	x11, [x22]
  424aa0:	b	424b0c <feof@plt+0x2213c>
  424aa4:	ldrb	w8, [x25, #2]
  424aa8:	cmp	w8, #0x3f
  424aac:	b.ne	424a74 <feof@plt+0x220a4>  // b.any
  424ab0:	ldrb	w23, [x25, #3]!
  424ab4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  424ab8:	add	x8, x8, #0x788
  424abc:	ldrb	w8, [x8, x23]
  424ac0:	cbz	w8, 424a74 <feof@plt+0x220a4>
  424ac4:	ldp	w8, w9, [x19, #60]
  424ac8:	cmp	w8, w9
  424acc:	b.ne	424bc4 <feof@plt+0x221f4>  // b.any
  424ad0:	ldr	x0, [x19, #48]
  424ad4:	lsl	w8, w8, #1
  424ad8:	add	w8, w8, #0xc8
  424adc:	lsl	x1, x8, #4
  424ae0:	str	w8, [x19, #64]
  424ae4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  424ae8:	ldr	w8, [x19, #60]
  424aec:	str	x0, [x19, #48]
  424af0:	b	424bc8 <feof@plt+0x221f8>
  424af4:	ldr	x11, [x22]
  424af8:	cmp	x21, x11
  424afc:	b.eq	42499c <feof@plt+0x21fcc>  // b.none
  424b00:	ldrb	w12, [x25, #2]!
  424b04:	cmp	w12, #0xa
  424b08:	csel	x21, x25, x21, eq  // eq = none
  424b0c:	cmp	x21, x11
  424b10:	b.eq	42499c <feof@plt+0x21fcc>  // b.none
  424b14:	ldr	x11, [x19, #16]
  424b18:	cmp	x20, x11
  424b1c:	b.eq	42499c <feof@plt+0x21fcc>  // b.none
  424b20:	mvn	x12, x8
  424b24:	mov	x10, xzr
  424b28:	add	x11, x12, x11
  424b2c:	ldrb	w12, [x8, x10]
  424b30:	ldrh	w13, [x26, x12, lsl #1]
  424b34:	tbz	w13, #11, 424b48 <feof@plt+0x22178>
  424b38:	sub	x10, x10, #0x1
  424b3c:	cmp	x11, x10
  424b40:	b.ne	424b2c <feof@plt+0x2215c>  // b.any
  424b44:	b	42499c <feof@plt+0x21fcc>
  424b48:	cmp	w12, #0x5c
  424b4c:	b.ne	42499c <feof@plt+0x21fcc>  // b.any
  424b50:	ldp	w9, w11, [x19, #60]
  424b54:	cmp	x10, #0x0
  424b58:	mov	x23, x26
  424b5c:	csel	w20, w24, w28, eq  // eq = none
  424b60:	cmp	w9, w11
  424b64:	mov	x26, x8
  424b68:	mov	x27, x10
  424b6c:	add	x25, x8, x10
  424b70:	b.ne	424b98 <feof@plt+0x221c8>  // b.any
  424b74:	ldr	x0, [x19, #48]
  424b78:	lsl	w8, w9, #1
  424b7c:	add	w8, w8, #0xc8
  424b80:	lsl	x1, x8, #4
  424b84:	str	w8, [x19, #64]
  424b88:	bl	450728 <_obstack_memory_used@@Base+0x190>
  424b8c:	ldr	w9, [x19, #60]
  424b90:	str	x0, [x19, #48]
  424b94:	b	424b9c <feof@plt+0x221cc>
  424b98:	ldr	x0, [x19, #48]
  424b9c:	add	x8, x0, w9, uxtw #4
  424ba0:	add	w9, w9, #0x1
  424ba4:	add	x10, x26, x27
  424ba8:	str	x25, [x8]
  424bac:	str	w20, [x8, #8]
  424bb0:	str	w9, [x19, #60]
  424bb4:	sub	x20, x10, #0x1
  424bb8:	str	x25, [x19, #16]
  424bbc:	mov	x26, x23
  424bc0:	b	424a74 <feof@plt+0x220a4>
  424bc4:	ldr	x0, [x19, #48]
  424bc8:	add	x9, x0, w8, uxtw #4
  424bcc:	add	w8, w8, #0x1
  424bd0:	str	x20, [x9]
  424bd4:	str	w23, [x9, #8]
  424bd8:	str	w8, [x19, #60]
  424bdc:	ldur	x8, [x29, #-8]
  424be0:	ldrb	w8, [x8, #1125]
  424be4:	cbz	w8, 424a74 <feof@plt+0x220a4>
  424be8:	ldrb	w10, [x25]
  424bec:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  424bf0:	add	x8, x8, #0x788
  424bf4:	mov	x21, x25
  424bf8:	ldrb	w8, [x8, x10]
  424bfc:	strb	w8, [x20]
  424c00:	b	424a74 <feof@plt+0x220a4>
  424c04:	stp	x29, x30, [sp, #-96]!
  424c08:	stp	x28, x27, [sp, #16]
  424c0c:	stp	x26, x25, [sp, #32]
  424c10:	stp	x24, x23, [sp, #48]
  424c14:	stp	x22, x21, [sp, #64]
  424c18:	stp	x20, x19, [sp, #80]
  424c1c:	ldr	x26, [x0]
  424c20:	mov	x29, sp
  424c24:	ldr	x9, [x26, #48]
  424c28:	ldr	w10, [x26, #56]
  424c2c:	ldr	x11, [x26]
  424c30:	add	x24, x9, w10, uxtw #4
  424c34:	ldr	x8, [x24]
  424c38:	cmp	x8, x11
  424c3c:	b.ls	424c5c <feof@plt+0x2228c>  // b.plast
  424c40:	ldp	x20, x19, [sp, #80]
  424c44:	ldp	x22, x21, [sp, #64]
  424c48:	ldp	x24, x23, [sp, #48]
  424c4c:	ldp	x26, x25, [sp, #32]
  424c50:	ldp	x28, x27, [sp, #16]
  424c54:	ldp	x29, x30, [sp], #96
  424c58:	ret
  424c5c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0xca68>
  424c60:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0xca68>
  424c64:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x25a68>
  424c68:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  424c6c:	mov	x19, x0
  424c70:	mov	w20, w1
  424c74:	add	x21, x21, #0x391
  424c78:	mov	w27, #0x18                  	// #24
  424c7c:	add	x22, x22, #0x368
  424c80:	add	x28, x28, #0x788
  424c84:	add	x23, x23, #0xa50
  424c88:	b	424cec <feof@plt+0x2231c>
  424c8c:	ldr	x8, [x24]
  424c90:	mov	w2, wzr
  424c94:	str	x8, [x26, #8]
  424c98:	ldr	x0, [x19, #40]
  424c9c:	ldr	w8, [x0, #12]
  424ca0:	ldr	x9, [x0]
  424ca4:	sub	w8, w8, #0x1
  424ca8:	smaddl	x8, w8, w27, x9
  424cac:	ldr	w9, [x0, #60]
  424cb0:	ldr	w10, [x8]
  424cb4:	ldrb	w11, [x8, #6]
  424cb8:	ldr	w8, [x8, #16]
  424cbc:	sub	w9, w9, w10
  424cc0:	lsr	w9, w9, w11
  424cc4:	add	w8, w8, w9
  424cc8:	add	w1, w8, #0x1
  424ccc:	bl	42a5e8 <feof@plt+0x27c18>
  424cd0:	ldr	x9, [x26, #48]
  424cd4:	ldr	w10, [x26, #56]
  424cd8:	ldr	x11, [x26]
  424cdc:	add	x24, x9, w10, uxtw #4
  424ce0:	ldr	x8, [x24]
  424ce4:	cmp	x8, x11
  424ce8:	b.hi	424c40 <feof@plt+0x22270>  // b.pmore
  424cec:	add	w11, w10, #0x1
  424cf0:	ldr	w12, [x26, #8]
  424cf4:	str	w11, [x26, #56]
  424cf8:	add	x9, x9, x10, lsl #4
  424cfc:	ldr	w5, [x9, #8]
  424d00:	sub	w9, w8, w12
  424d04:	add	w25, w9, #0x1
  424d08:	cmp	w5, #0x5c
  424d0c:	b.eq	424d18 <feof@plt+0x22348>  // b.none
  424d10:	cmp	w5, #0x20
  424d14:	b.ne	424d78 <feof@plt+0x223a8>  // b.any
  424d18:	cbnz	w20, 424d40 <feof@plt+0x22370>
  424d1c:	cmp	w5, #0x20
  424d20:	b.ne	424d40 <feof@plt+0x22370>  // b.any
  424d24:	ldr	x8, [x19, #40]
  424d28:	mov	x0, x19
  424d2c:	mov	w1, wzr
  424d30:	mov	w3, w25
  424d34:	ldr	w2, [x8, #60]
  424d38:	mov	x4, x22
  424d3c:	bl	41e2c4 <feof@plt+0x1b8f4>
  424d40:	ldr	x8, [x26, #16]
  424d44:	ldr	x9, [x26, #32]
  424d48:	cmp	x8, x9
  424d4c:	b.ls	424c8c <feof@plt+0x222bc>  // b.plast
  424d50:	ldr	x8, [x19, #40]
  424d54:	mov	w1, #0x2                   	// #2
  424d58:	mov	x0, x19
  424d5c:	mov	w3, w25
  424d60:	ldr	w2, [x8, #60]
  424d64:	mov	x4, x21
  424d68:	bl	41e2c4 <feof@plt+0x1b8f4>
  424d6c:	ldr	x8, [x26, #32]
  424d70:	str	x8, [x26, #16]
  424d74:	b	424c8c <feof@plt+0x222bc>
  424d78:	ldrb	w6, [x28, x5]
  424d7c:	cbz	w6, 424db4 <feof@plt+0x223e4>
  424d80:	ldrb	w9, [x19, #1136]
  424d84:	cbz	w9, 424cd0 <feof@plt+0x22300>
  424d88:	cbz	w20, 424dbc <feof@plt+0x223ec>
  424d8c:	cmp	w5, #0x2f
  424d90:	b.ne	424cd0 <feof@plt+0x22300>  // b.any
  424d94:	ldrb	w9, [x19, #1125]
  424d98:	cbz	w9, 424de8 <feof@plt+0x22418>
  424d9c:	ldr	x9, [x24, #16]
  424da0:	cmp	x9, x8
  424da4:	b.ne	424cd0 <feof@plt+0x22300>  // b.any
  424da8:	ldr	x8, [x19, #40]
  424dac:	ldr	w2, [x8, #60]
  424db0:	b	424dcc <feof@plt+0x223fc>
  424db4:	cbz	w5, 424cd0 <feof@plt+0x22300>
  424db8:	b	424e30 <feof@plt+0x22460>
  424dbc:	ldr	x8, [x19, #40]
  424dc0:	ldrb	w9, [x19, #1125]
  424dc4:	ldr	w2, [x8, #60]
  424dc8:	cbz	w9, 424e14 <feof@plt+0x22444>
  424dcc:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  424dd0:	mov	w1, #0x4                   	// #4
  424dd4:	mov	x0, x19
  424dd8:	mov	w3, w25
  424ddc:	add	x4, x4, #0x3b2
  424de0:	bl	41e3c0 <feof@plt+0x1b9f0>
  424de4:	b	424cd0 <feof@plt+0x22300>
  424de8:	add	x8, x8, #0x2
  424dec:	ldrb	w9, [x8, #1]!
  424df0:	ldrh	w10, [x23, x9, lsl #1]
  424df4:	tbnz	w10, #11, 424dec <feof@plt+0x2241c>
  424df8:	cmp	w9, #0xa
  424dfc:	b.ne	424cd0 <feof@plt+0x22300>  // b.any
  424e00:	ldr	x9, [x24, #16]
  424e04:	cmp	x8, x9
  424e08:	b.cs	424cd0 <feof@plt+0x22300>  // b.hs, b.nlast
  424e0c:	ldr	x8, [x19, #40]
  424e10:	ldr	w2, [x8, #60]
  424e14:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  424e18:	mov	w1, #0x4                   	// #4
  424e1c:	mov	x0, x19
  424e20:	mov	w3, w25
  424e24:	add	x4, x4, #0x3d0
  424e28:	bl	41e3c0 <feof@plt+0x1b9f0>
  424e2c:	b	424cd0 <feof@plt+0x22300>
  424e30:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  424e34:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  424e38:	add	x0, x0, #0x400
  424e3c:	add	x2, x2, #0x413
  424e40:	mov	w1, #0x48b                 	// #1163
  424e44:	bl	404ac4 <feof@plt+0x20f4>
  424e48:	stp	x29, x30, [sp, #-64]!
  424e4c:	stp	x22, x21, [sp, #32]
  424e50:	stp	x20, x19, [sp, #48]
  424e54:	ldr	x22, [x0]
  424e58:	str	x23, [sp, #16]
  424e5c:	adrp	x20, 45d000 <_obstack_memory_used@@Base+0xca68>
  424e60:	mov	x19, x0
  424e64:	ldr	x8, [x22]
  424e68:	mov	w23, #0x18                  	// #24
  424e6c:	add	x20, x20, #0x42b
  424e70:	mov	x29, sp
  424e74:	ldrb	w9, [x8, #1]!
  424e78:	cmp	w9, #0x2f
  424e7c:	cinc	x21, x8, eq  // eq = none
  424e80:	mov	x8, x21
  424e84:	ldrb	w9, [x21], #1
  424e88:	cmp	w9, #0xa
  424e8c:	b.eq	424eec <feof@plt+0x2251c>  // b.none
  424e90:	cmp	w9, #0x2f
  424e94:	b.ne	424e80 <feof@plt+0x224b0>  // b.any
  424e98:	ldurb	w9, [x8, #-1]
  424e9c:	cmp	w9, #0x2a
  424ea0:	b.eq	424f64 <feof@plt+0x22594>  // b.none
  424ea4:	ldrb	w9, [x19, #1133]
  424ea8:	cbz	w9, 424e80 <feof@plt+0x224b0>
  424eac:	ldrb	w9, [x21]
  424eb0:	cmp	w9, #0x2a
  424eb4:	b.ne	424e80 <feof@plt+0x224b0>  // b.any
  424eb8:	ldrb	w8, [x8, #2]
  424ebc:	cmp	w8, #0x2f
  424ec0:	b.eq	424e80 <feof@plt+0x224b0>  // b.none
  424ec4:	str	x21, [x22]
  424ec8:	ldr	x8, [x19, #40]
  424ecc:	ldr	w9, [x22, #8]
  424ed0:	mov	w1, #0x2                   	// #2
  424ed4:	mov	x0, x19
  424ed8:	ldr	w2, [x8, #60]
  424edc:	sub	w3, w21, w9
  424ee0:	mov	x4, x20
  424ee4:	bl	41e3c0 <feof@plt+0x1b9f0>
  424ee8:	b	424e80 <feof@plt+0x224b0>
  424eec:	mov	w1, #0x1                   	// #1
  424ef0:	mov	x0, x19
  424ef4:	str	x8, [x22]
  424ef8:	mov	w21, #0x1                   	// #1
  424efc:	bl	424c04 <feof@plt+0x22234>
  424f00:	ldr	x8, [x22, #16]
  424f04:	ldr	x9, [x22, #32]
  424f08:	cmp	x8, x9
  424f0c:	b.cs	424f78 <feof@plt+0x225a8>  // b.hs, b.nlast
  424f10:	mov	x0, x19
  424f14:	bl	4246a8 <feof@plt+0x21cd8>
  424f18:	ldr	x0, [x19, #40]
  424f1c:	ldr	w10, [x22, #16]
  424f20:	ldr	w11, [x22, #8]
  424f24:	ldr	w8, [x0, #12]
  424f28:	ldr	x9, [x0]
  424f2c:	sub	w2, w10, w11
  424f30:	sub	w8, w8, #0x1
  424f34:	smaddl	x8, w8, w23, x9
  424f38:	ldr	w9, [x0, #60]
  424f3c:	ldr	w12, [x8]
  424f40:	ldrb	w13, [x8, #6]
  424f44:	ldr	w8, [x8, #16]
  424f48:	sub	w9, w9, w12
  424f4c:	lsr	w9, w9, w13
  424f50:	add	w8, w8, w9
  424f54:	add	w1, w8, #0x1
  424f58:	bl	42a5e8 <feof@plt+0x27c18>
  424f5c:	ldr	x21, [x22]
  424f60:	b	424e80 <feof@plt+0x224b0>
  424f64:	mov	w1, #0x1                   	// #1
  424f68:	mov	x0, x19
  424f6c:	str	x21, [x22]
  424f70:	bl	424c04 <feof@plt+0x22234>
  424f74:	mov	w21, wzr
  424f78:	mov	w0, w21
  424f7c:	ldp	x20, x19, [sp, #48]
  424f80:	ldp	x22, x21, [sp, #32]
  424f84:	ldr	x23, [sp, #16]
  424f88:	ldp	x29, x30, [sp], #64
  424f8c:	ret
  424f90:	stp	x29, x30, [sp, #-32]!
  424f94:	stp	x20, x19, [sp, #16]
  424f98:	mov	x8, x1
  424f9c:	ldrb	w12, [x1]
  424fa0:	ldrb	w10, [x8, #1]!
  424fa4:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  424fa8:	add	x9, x9, #0xa50
  424fac:	mov	w11, #0x204                 	// #516
  424fb0:	ldrh	w13, [x9, x10, lsl #1]
  424fb4:	mov	x19, x0
  424fb8:	sub	w12, w12, #0x71
  424fbc:	mov	x29, sp
  424fc0:	tst	w13, w11
  424fc4:	b.eq	424fe8 <feof@plt+0x22618>  // b.none
  424fc8:	mov	w13, #0x43                  	// #67
  424fcc:	mul	w12, w12, w13
  424fd0:	add	w12, w12, w10, uxtb
  424fd4:	ldrb	w10, [x8, #1]!
  424fd8:	sub	w12, w12, #0x71
  424fdc:	ldrh	w14, [x9, x10, lsl #1]
  424fe0:	tst	w14, w11
  424fe4:	b.ne	424fcc <feof@plt+0x225fc>  // b.any
  424fe8:	ldr	x0, [x19, #1088]
  424fec:	sub	x8, x8, x1
  424ff0:	add	w3, w12, w8
  424ff4:	and	x2, x8, #0xffffffff
  424ff8:	mov	w4, #0x1                   	// #1
  424ffc:	bl	432480 <feof@plt+0x2fab0>
  425000:	ldrh	w8, [x0, #18]
  425004:	mov	x20, x0
  425008:	tbz	w8, #4, 425014 <feof@plt+0x22644>
  42500c:	ldrb	w9, [x19, #18]
  425010:	cbz	w9, 425024 <feof@plt+0x22654>
  425014:	mov	x0, x20
  425018:	ldp	x20, x19, [sp, #16]
  42501c:	ldp	x29, x30, [sp], #32
  425020:	ret
  425024:	tbz	w8, #3, 425048 <feof@plt+0x22678>
  425028:	ldrb	w8, [x19, #23]
  42502c:	cbnz	w8, 425048 <feof@plt+0x22678>
  425030:	ldr	x3, [x20]
  425034:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425038:	add	x2, x2, #0x541
  42503c:	mov	w1, #0x3                   	// #3
  425040:	mov	x0, x19
  425044:	bl	41de04 <feof@plt+0x1b434>
  425048:	ldr	x8, [x19, #1272]
  42504c:	cmp	x8, x20
  425050:	b.ne	425084 <feof@plt+0x226b4>  // b.any
  425054:	ldrb	w8, [x19, #22]
  425058:	cbnz	w8, 425084 <feof@plt+0x226b4>
  42505c:	ldrb	w8, [x19, #1120]
  425060:	cbz	w8, 425070 <feof@plt+0x226a0>
  425064:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425068:	add	x2, x2, #0x55e
  42506c:	b	425078 <feof@plt+0x226a8>
  425070:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425074:	add	x2, x2, #0x5a5
  425078:	mov	w1, #0x2                   	// #2
  42507c:	mov	x0, x19
  425080:	bl	41de04 <feof@plt+0x1b434>
  425084:	ldr	x8, [x19, #1280]
  425088:	cmp	x8, x20
  42508c:	b.ne	4250d8 <feof@plt+0x22708>  // b.any
  425090:	ldrb	w8, [x19, #1154]
  425094:	cbz	w8, 4250a0 <feof@plt+0x226d0>
  425098:	ldrb	w8, [x19, #1167]
  42509c:	cbz	w8, 4250b4 <feof@plt+0x226e4>
  4250a0:	ldrb	w8, [x19, #22]
  4250a4:	cbnz	w8, 4250d8 <feof@plt+0x22708>
  4250a8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4250ac:	add	x2, x2, #0x644
  4250b0:	b	4250cc <feof@plt+0x226fc>
  4250b4:	ldr	x8, [x19]
  4250b8:	cbz	x8, 4250c4 <feof@plt+0x226f4>
  4250bc:	ldrb	w8, [x8, #106]
  4250c0:	cbnz	w8, 4250d8 <feof@plt+0x22708>
  4250c4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4250c8:	add	x2, x2, #0x61c
  4250cc:	mov	w1, #0x2                   	// #2
  4250d0:	mov	x0, x19
  4250d4:	bl	41de04 <feof@plt+0x1b434>
  4250d8:	ldrb	w8, [x20, #19]
  4250dc:	tbz	w8, #1, 425014 <feof@plt+0x22644>
  4250e0:	ldr	x3, [x20]
  4250e4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4250e8:	add	x2, x2, #0x5ea
  4250ec:	mov	w1, #0xf                   	// #15
  4250f0:	mov	x0, x19
  4250f4:	bl	41df34 <feof@plt+0x1b564>
  4250f8:	b	425014 <feof@plt+0x22644>
  4250fc:	add	x0, x0, #0x568
  425100:	ret
  425104:	stp	x29, x30, [sp, #-48]!
  425108:	str	x21, [sp, #16]
  42510c:	mov	w21, #0x18                  	// #24
  425110:	stp	x20, x19, [sp, #32]
  425114:	mov	x20, x0
  425118:	umull	x0, w1, w21
  42511c:	mov	x29, sp
  425120:	mov	w19, w1
  425124:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  425128:	umaddl	x8, w19, w21, x0
  42512c:	stp	x0, x8, [x20, #16]
  425130:	str	xzr, [x20]
  425134:	ldp	x20, x19, [sp, #32]
  425138:	ldr	x21, [sp, #16]
  42513c:	ldp	x29, x30, [sp], #48
  425140:	ret
  425144:	stp	x29, x30, [sp, #-16]!
  425148:	ldr	w8, [x0, #48]
  42514c:	mov	x29, sp
  425150:	cbz	w8, 425184 <feof@plt+0x227b4>
  425154:	cmp	w8, #0x2
  425158:	b.eq	425184 <feof@plt+0x227b4>  // b.none
  42515c:	cmp	w8, #0x1
  425160:	b.ne	425198 <feof@plt+0x227c8>  // b.any
  425164:	ldp	x9, x8, [x0, #16]
  425168:	sub	x8, x8, x9
  42516c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  425170:	asr	x8, x8, #3
  425174:	movk	x9, #0xaaab
  425178:	mul	x0, x8, x9
  42517c:	ldp	x29, x30, [sp], #16
  425180:	ret
  425184:	ldp	x9, x8, [x0, #16]
  425188:	sub	x8, x8, x9
  42518c:	lsr	x0, x8, #3
  425190:	ldp	x29, x30, [sp], #16
  425194:	ret
  425198:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42519c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4251a0:	add	x0, x0, #0x400
  4251a4:	add	x2, x2, #0x43f
  4251a8:	mov	w1, #0x99f                 	// #2463
  4251ac:	bl	404ac4 <feof@plt+0x20f4>
  4251b0:	stp	x29, x30, [sp, #-64]!
  4251b4:	stp	x22, x21, [sp, #32]
  4251b8:	stp	x20, x19, [sp, #48]
  4251bc:	ldr	x11, [x0, #136]
  4251c0:	mov	x19, x0
  4251c4:	str	x23, [sp, #16]
  4251c8:	mov	x29, sp
  4251cc:	ldr	x12, [x11, #8]
  4251d0:	cbz	x12, 42523c <feof@plt+0x2286c>
  4251d4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4251d8:	movk	x8, #0xaaab
  4251dc:	ldr	w9, [x11, #48]
  4251e0:	mov	x10, x12
  4251e4:	cbz	w9, 425214 <feof@plt+0x22844>
  4251e8:	cmp	w9, #0x2
  4251ec:	b.eq	425214 <feof@plt+0x22844>  // b.none
  4251f0:	cmp	w9, #0x1
  4251f4:	b.ne	4252d8 <feof@plt+0x22908>  // b.any
  4251f8:	ldp	x11, x12, [x11, #16]
  4251fc:	sub	x12, x12, x11
  425200:	asr	x12, x12, #3
  425204:	mul	x12, x12, x8
  425208:	subs	w21, w1, w12
  42520c:	b.ge	425228 <feof@plt+0x22858>  // b.tcont
  425210:	b	42529c <feof@plt+0x228cc>
  425214:	ldp	x11, x12, [x11, #16]
  425218:	sub	x12, x12, x11
  42521c:	lsr	x12, x12, #3
  425220:	subs	w21, w1, w12
  425224:	b.lt	42529c <feof@plt+0x228cc>  // b.tstop
  425228:	ldr	x12, [x10, #8]
  42522c:	mov	w1, w21
  425230:	mov	x11, x10
  425234:	cbnz	x12, 4251dc <feof@plt+0x2280c>
  425238:	b	425240 <feof@plt+0x22870>
  42523c:	mov	w21, w1
  425240:	ldr	w8, [x19, #500]
  425244:	ldr	x22, [x19, #904]
  425248:	mov	w1, wzr
  42524c:	str	xzr, [x19, #904]
  425250:	add	w8, w8, #0x1
  425254:	str	w8, [x19, #500]
  425258:	mov	x0, x19
  42525c:	mov	w23, w1
  425260:	bl	425308 <feof@plt+0x22938>
  425264:	mov	x20, x0
  425268:	cmp	w21, w23
  42526c:	add	w1, w23, #0x1
  425270:	b.eq	425280 <feof@plt+0x228b0>  // b.none
  425274:	ldrb	w8, [x20, #4]
  425278:	cmp	w8, #0x16
  42527c:	b.ne	425258 <feof@plt+0x22888>  // b.any
  425280:	mov	x0, x19
  425284:	bl	42e268 <feof@plt+0x2b898>
  425288:	ldr	w8, [x19, #500]
  42528c:	str	x22, [x19, #904]
  425290:	sub	w8, w8, #0x1
  425294:	str	w8, [x19, #500]
  425298:	b	4252c0 <feof@plt+0x228f0>
  42529c:	cbz	w9, 4252bc <feof@plt+0x228ec>
  4252a0:	cmp	w9, #0x2
  4252a4:	b.eq	4252bc <feof@plt+0x228ec>  // b.none
  4252a8:	cmp	w9, #0x1
  4252ac:	b.ne	4252f0 <feof@plt+0x22920>  // b.any
  4252b0:	mov	w8, #0x18                  	// #24
  4252b4:	smaddl	x20, w1, w8, x11
  4252b8:	b	4252c0 <feof@plt+0x228f0>
  4252bc:	ldr	x20, [x11, w1, sxtw #3]
  4252c0:	mov	x0, x20
  4252c4:	ldp	x20, x19, [sp, #48]
  4252c8:	ldp	x22, x21, [sp, #32]
  4252cc:	ldr	x23, [sp, #16]
  4252d0:	ldp	x29, x30, [sp], #64
  4252d4:	ret
  4252d8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  4252dc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4252e0:	add	x0, x0, #0x400
  4252e4:	add	x2, x2, #0x43f
  4252e8:	mov	w1, #0x99f                 	// #2463
  4252ec:	bl	404ac4 <feof@plt+0x20f4>
  4252f0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  4252f4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4252f8:	add	x0, x0, #0x400
  4252fc:	add	x2, x2, #0x68a
  425300:	mov	w1, #0x9ad                 	// #2477
  425304:	bl	404ac4 <feof@plt+0x20f4>
  425308:	stp	x29, x30, [sp, #-64]!
  42530c:	stp	x22, x21, [sp, #32]
  425310:	stp	x20, x19, [sp, #48]
  425314:	mov	x19, x0
  425318:	add	x21, x0, #0x98
  42531c:	mov	w22, #0x1770                	// #6000
  425320:	str	x23, [sp, #16]
  425324:	mov	x29, sp
  425328:	ldr	x23, [x19, #488]
  42532c:	ldr	x20, [x19, #448]
  425330:	ldr	x8, [x23, #24]
  425334:	cmp	x20, x8
  425338:	b.eq	42534c <feof@plt+0x2297c>  // b.none
  42533c:	ldr	x8, [x23, #16]
  425340:	cmp	x20, x8
  425344:	b.cs	425390 <feof@plt+0x229c0>  // b.hs, b.nlast
  425348:	b	425480 <feof@plt+0x22ab0>
  42534c:	ldr	x8, [x23]
  425350:	cbnz	x8, 425380 <feof@plt+0x229b0>
  425354:	mov	w0, #0x20                  	// #32
  425358:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42535c:	mov	x20, x0
  425360:	str	x0, [x23]
  425364:	str	x23, [x0, #8]
  425368:	mov	w0, #0x1770                	// #6000
  42536c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  425370:	add	x8, x0, x22
  425374:	stp	x0, x8, [x20, #16]
  425378:	str	xzr, [x20]
  42537c:	ldr	x8, [x23]
  425380:	str	x8, [x19, #488]
  425384:	ldr	x20, [x8, #16]
  425388:	mov	x23, x8
  42538c:	str	x20, [x19, #448]
  425390:	ldr	x8, [x23, #24]
  425394:	cmp	x20, x8
  425398:	b.cs	425480 <feof@plt+0x22ab0>  // b.hs, b.nlast
  42539c:	ldr	w8, [x19, #496]
  4253a0:	cbz	w8, 4253c0 <feof@plt+0x229f0>
  4253a4:	sub	w8, w8, #0x1
  4253a8:	add	x9, x20, #0x18
  4253ac:	str	w8, [x19, #496]
  4253b0:	str	x9, [x19, #448]
  4253b4:	ldrh	w8, [x20, #6]
  4253b8:	tbnz	w8, #6, 4253d4 <feof@plt+0x22a04>
  4253bc:	b	425418 <feof@plt+0x22a48>
  4253c0:	mov	x0, x19
  4253c4:	bl	425618 <feof@plt+0x22c48>
  4253c8:	mov	x20, x0
  4253cc:	ldrh	w8, [x20, #6]
  4253d0:	tbz	w8, #6, 425418 <feof@plt+0x22a48>
  4253d4:	ldrb	w9, [x20, #4]
  4253d8:	cmp	w9, #0x25
  4253dc:	b.ne	4253ec <feof@plt+0x22a1c>  // b.any
  4253e0:	ldrb	w9, [x19, #25]
  4253e4:	cmp	w9, #0x1
  4253e8:	b.ne	425444 <feof@plt+0x22a74>  // b.any
  4253ec:	ldrb	w8, [x19, #32]
  4253f0:	cmp	w8, #0x0
  4253f4:	csel	x20, x20, x21, eq  // eq = none
  4253f8:	ldr	x8, [x19, #904]
  4253fc:	cbz	x8, 425418 <feof@plt+0x22a48>
  425400:	ldrb	w9, [x19, #18]
  425404:	cbnz	w9, 425418 <feof@plt+0x22a48>
  425408:	ldrb	w2, [x19, #25]
  42540c:	mov	x0, x19
  425410:	mov	x1, x20
  425414:	blr	x8
  425418:	ldrb	w8, [x19, #16]
  42541c:	cbnz	w8, 425468 <feof@plt+0x22a98>
  425420:	ldrb	w8, [x19, #32]
  425424:	cbnz	w8, 425468 <feof@plt+0x22a98>
  425428:	ldrb	w8, [x19, #18]
  42542c:	strb	wzr, [x19, #440]
  425430:	cbz	w8, 425468 <feof@plt+0x22a98>
  425434:	ldrb	w8, [x20, #4]
  425438:	cmp	w8, #0x16
  42543c:	b.ne	425328 <feof@plt+0x22958>  // b.any
  425440:	b	425468 <feof@plt+0x22a98>
  425444:	and	w1, w8, #0x1
  425448:	mov	x0, x19
  42544c:	bl	419c50 <feof@plt+0x17280>
  425450:	cbz	w0, 4253f8 <feof@plt+0x22a28>
  425454:	ldrb	w8, [x19, #156]
  425458:	mov	x20, x21
  42545c:	cmp	w8, #0x53
  425460:	b.eq	425328 <feof@plt+0x22958>  // b.none
  425464:	b	4253f8 <feof@plt+0x22a28>
  425468:	mov	x0, x20
  42546c:	ldp	x20, x19, [sp, #48]
  425470:	ldp	x22, x21, [sp, #32]
  425474:	ldr	x23, [sp, #16]
  425478:	ldp	x29, x30, [sp], #64
  42547c:	ret
  425480:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  425484:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425488:	add	x0, x0, #0x400
  42548c:	add	x2, x2, #0x464
  425490:	mov	w1, #0xa1d                 	// #2589
  425494:	bl	404ac4 <feof@plt+0x20f4>
  425498:	stp	x29, x30, [sp, #-80]!
  42549c:	stp	x26, x25, [sp, #16]
  4254a0:	stp	x24, x23, [sp, #32]
  4254a4:	stp	x22, x21, [sp, #48]
  4254a8:	stp	x20, x19, [sp, #64]
  4254ac:	ldr	x25, [x0, #488]
  4254b0:	ldr	x21, [x0, #448]
  4254b4:	ldr	w22, [x0, #496]
  4254b8:	mov	x19, x0
  4254bc:	ldr	x8, [x25, #24]
  4254c0:	mov	x29, sp
  4254c4:	sub	x23, x8, x21
  4254c8:	cbz	w22, 425554 <feof@plt+0x22b84>
  4254cc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4254d0:	asr	x8, x23, #3
  4254d4:	movk	x9, #0xaaab
  4254d8:	mul	x24, x8, x9
  4254dc:	cmp	x24, x22
  4254e0:	b.gt	425528 <feof@plt+0x22b58>
  4254e4:	ldr	x20, [x25]
  4254e8:	cbz	x20, 4255dc <feof@plt+0x22c0c>
  4254ec:	cmp	x24, x22
  4254f0:	b.ge	42550c <feof@plt+0x22b3c>  // b.tcont
  4254f4:	ldr	x1, [x20, #16]
  4254f8:	sub	x8, x22, x24
  4254fc:	add	x8, x8, x8, lsl #1
  425500:	lsl	x2, x8, #3
  425504:	add	x0, x1, #0x18
  425508:	bl	402780 <memmove@plt>
  42550c:	ldr	x8, [x19, #488]
  425510:	ldr	x9, [x20, #16]
  425514:	ldr	x8, [x8, #24]
  425518:	ldur	x10, [x8, #-8]
  42551c:	ldur	q0, [x8, #-24]
  425520:	str	x10, [x9, #16]
  425524:	str	q0, [x9]
  425528:	cmp	x23, #0x19
  42552c:	b.lt	425554 <feof@plt+0x22b84>  // b.tstop
  425530:	ldr	x1, [x19, #448]
  425534:	sub	x8, x24, #0x1
  425538:	cmp	x8, x22
  42553c:	csel	x8, x22, x8, gt
  425540:	add	x8, x8, x8, lsl #1
  425544:	add	x0, x1, #0x18
  425548:	lsl	x2, x8, #3
  42554c:	bl	402780 <memmove@plt>
  425550:	b	4255b0 <feof@plt+0x22be0>
  425554:	cbnz	x23, 4255b0 <feof@plt+0x22be0>
  425558:	ldr	x22, [x19, #488]
  42555c:	ldr	x8, [x19, #448]
  425560:	ldr	x9, [x22, #24]
  425564:	cmp	x8, x9
  425568:	b.ne	4255b0 <feof@plt+0x22be0>  // b.any
  42556c:	ldr	x8, [x22]
  425570:	cbnz	x8, 4255a4 <feof@plt+0x22bd4>
  425574:	mov	w0, #0x20                  	// #32
  425578:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42557c:	mov	x20, x0
  425580:	str	x0, [x22]
  425584:	str	x22, [x0, #8]
  425588:	mov	w0, #0x1770                	// #6000
  42558c:	mov	w23, #0x1770                	// #6000
  425590:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  425594:	add	x8, x0, x23
  425598:	stp	x0, x8, [x20, #16]
  42559c:	str	xzr, [x20]
  4255a0:	ldr	x8, [x22]
  4255a4:	str	x8, [x19, #488]
  4255a8:	ldr	x8, [x8, #16]
  4255ac:	str	x8, [x19, #448]
  4255b0:	ldr	x0, [x19, #448]
  4255b4:	add	x8, x0, #0x18
  4255b8:	str	x8, [x19, #448]
  4255bc:	ldur	w8, [x21, #-24]
  4255c0:	str	w8, [x0]
  4255c4:	ldp	x20, x19, [sp, #64]
  4255c8:	ldp	x22, x21, [sp, #48]
  4255cc:	ldp	x24, x23, [sp, #32]
  4255d0:	ldp	x26, x25, [sp, #16]
  4255d4:	ldp	x29, x30, [sp], #80
  4255d8:	ret
  4255dc:	mov	w0, #0x20                  	// #32
  4255e0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4255e4:	mov	x20, x0
  4255e8:	str	x0, [x25]
  4255ec:	str	x25, [x0, #8]
  4255f0:	mov	w0, #0x1770                	// #6000
  4255f4:	mov	w26, #0x1770                	// #6000
  4255f8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4255fc:	add	x8, x0, x26
  425600:	stp	x0, x8, [x20, #16]
  425604:	str	xzr, [x20]
  425608:	ldr	x20, [x25]
  42560c:	cmp	x24, x22
  425610:	b.lt	4254f4 <feof@plt+0x22b24>  // b.tstop
  425614:	b	42550c <feof@plt+0x22b3c>
  425618:	sub	sp, sp, #0x70
  42561c:	stp	x29, x30, [sp, #16]
  425620:	stp	x28, x27, [sp, #32]
  425624:	stp	x26, x25, [sp, #48]
  425628:	stp	x24, x23, [sp, #64]
  42562c:	stp	x22, x21, [sp, #80]
  425630:	stp	x20, x19, [sp, #96]
  425634:	ldr	x19, [x0, #448]
  425638:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0xba68>
  42563c:	adrp	x27, 461000 <_obstack_memory_used@@Base+0x10a68>
  425640:	mov	x20, x0
  425644:	mov	w22, wzr
  425648:	add	x24, x0, #0x1c8
  42564c:	add	x25, x25, #0xc00
  425650:	add	x8, x19, #0x18
  425654:	add	x27, x27, #0xa50
  425658:	add	x29, sp, #0x10
  42565c:	str	x8, [x0, #448]
  425660:	strh	wzr, [x19, #6]
  425664:	ldr	x23, [x20]
  425668:	ldrb	w8, [x23, #104]
  42566c:	cbz	w8, 425748 <feof@plt+0x22d78>
  425670:	ldrb	w8, [x20, #32]
  425674:	cbnz	w8, 426368 <feof@plt+0x23998>
  425678:	ldrb	w8, [x20, #16]
  42567c:	cbnz	w8, 4262e0 <feof@plt+0x23910>
  425680:	mov	x8, x23
  425684:	ldr	x10, [x8, #16]
  425688:	ldr	x9, [x8, #32]
  42568c:	cmp	x10, x9
  425690:	b.cc	4256f4 <feof@plt+0x22d24>  // b.lo, b.ul, b.last
  425694:	ldrb	w11, [x20, #25]
  425698:	cbnz	w11, 4262e0 <feof@plt+0x23910>
  42569c:	ldrb	w26, [x8, #105]
  4256a0:	cmp	x10, x9
  4256a4:	b.ls	4256bc <feof@plt+0x22cec>  // b.plast
  4256a8:	ldr	x10, [x8, #24]
  4256ac:	cmp	x10, x9
  4256b0:	b.eq	4256bc <feof@plt+0x22cec>  // b.none
  4256b4:	tbnz	w26, #1, 4256bc <feof@plt+0x22cec>
  4256b8:	str	x9, [x8, #16]
  4256bc:	mov	x0, x20
  4256c0:	bl	41c0c4 <feof@plt+0x196f4>
  4256c4:	ldr	x8, [x20]
  4256c8:	cmp	x8, #0x0
  4256cc:	cset	w9, ne  // ne = any
  4256d0:	tst	w26, #0x4
  4256d4:	cset	w10, eq  // eq = none
  4256d8:	and	w9, w10, w9
  4256dc:	and	w21, w21, w9
  4256e0:	tbnz	w26, #2, 425704 <feof@plt+0x22d34>
  4256e4:	cbz	x8, 425704 <feof@plt+0x22d34>
  4256e8:	ldrb	w9, [x8, #104]
  4256ec:	cbnz	w9, 425684 <feof@plt+0x22cb4>
  4256f0:	b	425708 <feof@plt+0x22d38>
  4256f4:	mov	x0, x20
  4256f8:	bl	4246a8 <feof@plt+0x21cd8>
  4256fc:	ldr	x8, [x20]
  425700:	b	425708 <feof@plt+0x22d38>
  425704:	tbz	w21, #0, 4262e0 <feof@plt+0x23910>
  425708:	ldr	w9, [x20, #500]
  42570c:	cmp	x23, x8
  425710:	cset	w8, eq  // eq = none
  425714:	and	w22, w22, w8
  425718:	cbnz	w9, 42572c <feof@plt+0x22d5c>
  42571c:	ldr	x19, [x20, #472]
  425720:	str	x24, [x20, #488]
  425724:	add	x8, x19, #0x18
  425728:	str	x8, [x20, #448]
  42572c:	mov	w9, #0x40                  	// #64
  425730:	strh	w9, [x19, #6]
  425734:	ldrb	w8, [x20, #25]
  425738:	cmp	w8, #0x2
  42573c:	cinc	w8, w9, eq  // eq = none
  425740:	strh	w8, [x19, #6]
  425744:	ldr	x23, [x20]
  425748:	ldr	x8, [x20, #40]
  42574c:	ldr	w8, [x8, #60]
  425750:	str	w8, [x19]
  425754:	b	425760 <feof@plt+0x22d90>
  425758:	sub	x8, x8, #0x1
  42575c:	str	x8, [x21]
  425760:	ldr	w9, [x23, #56]
  425764:	ldr	x10, [x23, #48]
  425768:	ldr	x8, [x23]
  42576c:	lsl	x9, x9, #4
  425770:	ldr	x9, [x10, x9]
  425774:	cmp	x8, x9
  425778:	b.cc	4257a0 <feof@plt+0x22dd0>  // b.lo, b.ul, b.last
  42577c:	ldr	x9, [x20, #8]
  425780:	cbnz	x9, 4257a0 <feof@plt+0x22dd0>
  425784:	mov	x0, x20
  425788:	mov	w1, wzr
  42578c:	bl	424c04 <feof@plt+0x22234>
  425790:	ldr	x8, [x20, #40]
  425794:	ldr	w8, [x8, #60]
  425798:	str	w8, [x19]
  42579c:	ldr	x8, [x23]
  4257a0:	add	x9, x8, #0x1
  4257a4:	str	x9, [x23]
  4257a8:	ldr	w21, [x20, #1408]
  4257ac:	ldrb	w28, [x8]
  4257b0:	cbnz	w21, 4257c8 <feof@plt+0x22df8>
  4257b4:	ldr	w8, [x23, #8]
  4257b8:	ldr	x0, [x20, #40]
  4257bc:	sub	w1, w9, w8
  4257c0:	bl	42a7ec <feof@plt+0x27e1c>
  4257c4:	mov	w21, w0
  4257c8:	cmp	w28, #0x7e
  4257cc:	str	w21, [x19]
  4257d0:	b.hi	42676c <feof@plt+0x23d9c>  // b.pmore
  4257d4:	adr	x8, 4257e4 <feof@plt+0x22e14>
  4257d8:	ldrh	w9, [x25, x28, lsl #1]
  4257dc:	add	x8, x8, x9, lsl #2
  4257e0:	br	x8
  4257e4:	ldrh	w8, [x19, #6]
  4257e8:	mov	w26, wzr
  4257ec:	orr	w8, w8, #0x1
  4257f0:	strh	w8, [x19, #6]
  4257f4:	ldr	x21, [x20]
  4257f8:	b	425818 <feof@plt+0x22e48>
  4257fc:	mov	w26, #0x1                   	// #1
  425800:	ldr	x9, [x21]
  425804:	add	x8, x9, #0x1
  425808:	str	x8, [x21]
  42580c:	ldrb	w28, [x9]
  425810:	ldrh	w9, [x27, x28, lsl #1]
  425814:	tbz	w9, #11, 425888 <feof@plt+0x22eb8>
  425818:	and	w8, w28, #0xff
  42581c:	cmp	w8, #0x20
  425820:	b.eq	425800 <feof@plt+0x22e30>  // b.none
  425824:	cmp	w8, #0x9
  425828:	b.eq	425800 <feof@plt+0x22e30>  // b.none
  42582c:	cbz	w8, 4257fc <feof@plt+0x22e2c>
  425830:	ldrb	w8, [x20, #16]
  425834:	cbz	w8, 425800 <feof@plt+0x22e30>
  425838:	ldrb	w8, [x20, #1154]
  42583c:	cbz	w8, 425800 <feof@plt+0x22e30>
  425840:	ldr	x8, [x20, #40]
  425844:	ldr	w9, [x21]
  425848:	ldr	w10, [x21, #8]
  42584c:	and	w11, w28, #0xff
  425850:	ldr	w2, [x8, #60]
  425854:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0xca68>
  425858:	sub	w3, w9, w10
  42585c:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  425860:	add	x8, x8, #0x6cd
  425864:	add	x9, x9, #0x6c3
  425868:	cmp	w11, #0xc
  42586c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  425870:	csel	x5, x9, x8, eq  // eq = none
  425874:	add	x4, x4, #0x6a5
  425878:	mov	w1, #0x2                   	// #2
  42587c:	mov	x0, x20
  425880:	bl	41e2c4 <feof@plt+0x1b8f4>
  425884:	b	425800 <feof@plt+0x22e30>
  425888:	tbz	w26, #0, 425758 <feof@plt+0x22d88>
  42588c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425890:	add	x2, x2, #0x6da
  425894:	mov	x0, x20
  425898:	mov	w1, wzr
  42589c:	bl	41de04 <feof@plt+0x1b434>
  4258a0:	ldr	x8, [x21]
  4258a4:	b	425758 <feof@plt+0x22d88>
  4258a8:	ldr	x21, [x23]
  4258ac:	ldrb	w28, [x21]
  4258b0:	cmp	w28, #0x2a
  4258b4:	b.eq	425910 <feof@plt+0x22f40>  // b.none
  4258b8:	cmp	w28, #0x2f
  4258bc:	b.ne	426b60 <feof@plt+0x24190>  // b.any
  4258c0:	ldrb	w8, [x20, #1160]
  4258c4:	cbnz	w8, 426b74 <feof@plt+0x241a4>
  4258c8:	ldr	x8, [x20]
  4258cc:	cbz	x8, 4258d8 <feof@plt+0x22f08>
  4258d0:	ldrb	w8, [x8, #106]
  4258d4:	cbnz	w8, 4259bc <feof@plt+0x22fec>
  4258d8:	ldr	w8, [x20, #1116]
  4258dc:	cbz	w8, 425974 <feof@plt+0x22fa4>
  4258e0:	ldrsb	w9, [x20, #1198]
  4258e4:	cmp	w9, #0x1
  4258e8:	b.lt	425934 <feof@plt+0x22f64>  // b.tstop
  4258ec:	ldrb	w9, [x20, #1120]
  4258f0:	cbnz	w9, 425934 <feof@plt+0x22f64>
  4258f4:	ldrb	w9, [x23, #105]
  4258f8:	tbnz	w9, #0, 425934 <feof@plt+0x22f64>
  4258fc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425900:	add	x2, x2, #0x4e7
  425904:	mov	x0, x20
  425908:	mov	w1, wzr
  42590c:	b	425994 <feof@plt+0x22fc4>
  425910:	mov	x0, x20
  425914:	bl	424e48 <feof@plt+0x22478>
  425918:	tbz	w0, #0, 425a24 <feof@plt+0x23054>
  42591c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425920:	add	x2, x2, #0x473
  425924:	mov	w1, #0x3                   	// #3
  425928:	mov	x0, x20
  42592c:	bl	41de04 <feof@plt+0x1b434>
  425930:	b	425a24 <feof@plt+0x23054>
  425934:	sub	w8, w8, #0x5
  425938:	cmp	w8, #0x1
  42593c:	b.hi	4259bc <feof@plt+0x22fec>  // b.pmore
  425940:	ldrb	w8, [x21, #1]
  425944:	cmp	w8, #0x2a
  425948:	b.eq	426b74 <feof@plt+0x241a4>  // b.none
  42594c:	ldrb	w8, [x20, #16]
  425950:	cbnz	w8, 426b74 <feof@plt+0x241a4>
  425954:	ldrb	w8, [x20, #18]
  425958:	cbnz	w8, 426b74 <feof@plt+0x241a4>
  42595c:	ldrb	w8, [x23, #105]
  425960:	tbnz	w8, #0, 4259bc <feof@plt+0x22fec>
  425964:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425968:	add	x2, x2, #0x488
  42596c:	mov	w1, #0x3                   	// #3
  425970:	b	425990 <feof@plt+0x22fc0>
  425974:	ldrb	w9, [x20, #1154]
  425978:	cbz	w9, 4258e0 <feof@plt+0x22f10>
  42597c:	ldrb	w9, [x23, #105]
  425980:	tbnz	w9, #0, 4258e0 <feof@plt+0x22f10>
  425984:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425988:	add	x2, x2, #0x488
  42598c:	mov	w1, #0x2                   	// #2
  425990:	mov	x0, x20
  425994:	bl	41de04 <feof@plt+0x1b434>
  425998:	tbz	w0, #0, 4259b0 <feof@plt+0x22fe0>
  42599c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4259a0:	add	x2, x2, #0x4b6
  4259a4:	mov	w1, #0x5                   	// #5
  4259a8:	mov	x0, x20
  4259ac:	bl	41de04 <feof@plt+0x1b434>
  4259b0:	ldrb	w8, [x23, #105]
  4259b4:	orr	w8, w8, #0x1
  4259b8:	strb	w8, [x23, #105]
  4259bc:	ldr	x8, [x20]
  4259c0:	ldr	x10, [x20, #40]
  4259c4:	ldr	x9, [x8]
  4259c8:	ldr	w26, [x10, #60]
  4259cc:	ldrb	w11, [x9]
  4259d0:	cmp	w11, #0xa
  4259d4:	b.eq	4259ec <feof@plt+0x2301c>  // b.none
  4259d8:	add	x9, x9, #0x1
  4259dc:	str	x9, [x8]
  4259e0:	ldrb	w10, [x9], #1
  4259e4:	cmp	w10, #0xa
  4259e8:	b.ne	4259dc <feof@plt+0x2300c>  // b.any
  4259ec:	mov	w1, #0x1                   	// #1
  4259f0:	mov	x0, x20
  4259f4:	bl	424c04 <feof@plt+0x22234>
  4259f8:	ldr	x8, [x20, #40]
  4259fc:	ldr	w8, [x8, #60]
  425a00:	cmp	w26, w8
  425a04:	b.eq	425a24 <feof@plt+0x23054>  // b.none
  425a08:	ldrb	w8, [x20, #1133]
  425a0c:	cbz	w8, 425a24 <feof@plt+0x23054>
  425a10:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  425a14:	add	x2, x2, #0x514
  425a18:	mov	w1, #0x2                   	// #2
  425a1c:	mov	x0, x20
  425a20:	bl	41df34 <feof@plt+0x1b564>
  425a24:	ldrb	w10, [x20, #1144]
  425a28:	add	x9, x21, #0x1
  425a2c:	sub	w8, w10, #0x3
  425a30:	cmp	w8, #0x2
  425a34:	b.cc	425b8c <feof@plt+0x231bc>  // b.lo, b.ul, b.last
  425a38:	cmp	w10, #0x1
  425a3c:	b.eq	425e30 <feof@plt+0x23460>  // b.none
  425a40:	cmp	w10, #0x2
  425a44:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425a48:	ldr	x8, [x20]
  425a4c:	ldr	x8, [x8]
  425a50:	sub	x10, x8, x9
  425a54:	cmp	x10, #0x8
  425a58:	b.cs	425a70 <feof@plt+0x230a0>  // b.hs, b.nlast
  425a5c:	b	42616c <feof@plt+0x2379c>
  425a60:	add	x9, x9, #0x1
  425a64:	sub	x10, x8, x9
  425a68:	cmp	x10, #0x7
  425a6c:	b.ls	42616c <feof@plt+0x2379c>  // b.plast
  425a70:	ldrb	w10, [x9]
  425a74:	orr	w10, w10, #0x20
  425a78:	cmp	w10, #0x66
  425a7c:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425a80:	ldrb	w10, [x9, #1]
  425a84:	orr	w10, w10, #0x20
  425a88:	cmp	w10, #0x61
  425a8c:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425a90:	ldrb	w10, [x9, #2]
  425a94:	orr	w10, w10, #0x20
  425a98:	cmp	w10, #0x6c
  425a9c:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425aa0:	ldrb	w10, [x9, #3]
  425aa4:	orr	w10, w10, #0x20
  425aa8:	cmp	w10, #0x6c
  425aac:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425ab0:	mov	x10, x9
  425ab4:	ldrb	w11, [x10, #4]!
  425ab8:	orr	w11, w11, #0x20
  425abc:	cmp	w11, #0x73
  425ac0:	b.ne	425acc <feof@plt+0x230fc>  // b.any
  425ac4:	add	x9, x9, #0x5
  425ac8:	b	425ad0 <feof@plt+0x23100>
  425acc:	mov	x9, x10
  425ad0:	ldrb	w10, [x9]
  425ad4:	cmp	w10, #0x2d
  425ad8:	b.hi	425afc <feof@plt+0x2312c>  // b.pmore
  425adc:	mov	w11, #0x1                   	// #1
  425ae0:	mov	x12, #0x200                 	// #512
  425ae4:	lsl	x11, x11, x10
  425ae8:	movk	x12, #0x2001, lsl #32
  425aec:	tst	x11, x12
  425af0:	b.eq	425afc <feof@plt+0x2312c>  // b.none
  425af4:	add	x9, x9, #0x1
  425af8:	b	425ad0 <feof@plt+0x23100>
  425afc:	cmp	w10, #0x54
  425b00:	b.eq	425b0c <feof@plt+0x2313c>  // b.none
  425b04:	cmp	w10, #0x74
  425b08:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425b0c:	ldrb	w10, [x9, #1]
  425b10:	orr	w10, w10, #0x20
  425b14:	cmp	w10, #0x68
  425b18:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425b1c:	ldrb	w10, [x9, #2]
  425b20:	orr	w10, w10, #0x20
  425b24:	cmp	w10, #0x72
  425b28:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425b2c:	ldrb	w10, [x9, #3]
  425b30:	sub	w10, w10, #0x4f
  425b34:	cmp	w10, #0x26
  425b38:	b.hi	425a60 <feof@plt+0x23090>  // b.pmore
  425b3c:	adrp	x11, 45c000 <_obstack_memory_used@@Base+0xba68>
  425b40:	add	x11, x11, #0xcfe
  425b44:	adr	x12, 425a60 <feof@plt+0x23090>
  425b48:	ldrh	w13, [x11, x10, lsl #1]
  425b4c:	add	x12, x12, x13, lsl #2
  425b50:	mov	w26, #0x1                   	// #1
  425b54:	br	x12
  425b58:	ldrb	w10, [x9, #4]
  425b5c:	orr	w10, w10, #0x20
  425b60:	cmp	w10, #0x75
  425b64:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425b68:	ldrb	w10, [x9, #5]
  425b6c:	orr	w10, w10, #0x20
  425b70:	cmp	w10, #0x67
  425b74:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425b78:	ldrb	w10, [x9, #6]
  425b7c:	orr	w10, w10, #0x20
  425b80:	cmp	w10, #0x68
  425b84:	b.ne	425a60 <feof@plt+0x23090>  // b.any
  425b88:	b	425e30 <feof@plt+0x23460>
  425b8c:	ldrb	w8, [x9]
  425b90:	cmp	w8, #0x2d
  425b94:	b.eq	425ba8 <feof@plt+0x231d8>  // b.none
  425b98:	cmp	w8, #0x6c
  425b9c:	b.eq	425c14 <feof@plt+0x23244>  // b.none
  425ba0:	cmp	w8, #0x40
  425ba4:	b.ne	425c88 <feof@plt+0x232b8>  // b.any
  425ba8:	ldr	x10, [x20]
  425bac:	mvn	x11, x9
  425bb0:	ldr	x10, [x10]
  425bb4:	add	x10, x10, x11
  425bb8:	cmp	x10, #0xb
  425bbc:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425bc0:	ldur	x10, [x21, #2]
  425bc4:	ldur	x11, [x21, #5]
  425bc8:	mov	x12, #0x6166                	// #24934
  425bcc:	mov	x13, #0x746c                	// #29804
  425bd0:	movk	x12, #0x6c6c, lsl #16
  425bd4:	movk	x13, #0x7268, lsl #16
  425bd8:	movk	x12, #0x6874, lsl #32
  425bdc:	movk	x13, #0x756f, lsl #32
  425be0:	movk	x12, #0x6f72, lsl #48
  425be4:	movk	x13, #0x6867, lsl #48
  425be8:	eor	x10, x10, x12
  425bec:	eor	x11, x11, x13
  425bf0:	orr	x10, x10, x11
  425bf4:	cbnz	x10, 42616c <feof@plt+0x2379c>
  425bf8:	cmp	w8, #0x40
  425bfc:	b.ne	425df8 <feof@plt+0x23428>  // b.any
  425c00:	ldrb	w8, [x21, #13]
  425c04:	cmp	w8, #0x40
  425c08:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425c0c:	mov	w8, #0xd                   	// #13
  425c10:	b	425dfc <feof@plt+0x2342c>
  425c14:	ldr	x8, [x20]
  425c18:	mvn	x9, x9
  425c1c:	ldr	x8, [x8]
  425c20:	add	x8, x8, x9
  425c24:	cmp	x8, #0x10
  425c28:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425c2c:	ldur	x8, [x21, #2]
  425c30:	ldur	x9, [x21, #10]
  425c34:	mov	x10, #0x6e69                	// #28265
  425c38:	mov	x11, #0x746c                	// #29804
  425c3c:	movk	x10, #0x2074, lsl #16
  425c40:	movk	x11, #0x7268, lsl #16
  425c44:	movk	x10, #0x662d, lsl #32
  425c48:	movk	x11, #0x756f, lsl #32
  425c4c:	movk	x10, #0x6c61, lsl #48
  425c50:	movk	x11, #0x6867, lsl #48
  425c54:	eor	x8, x8, x10
  425c58:	eor	x9, x9, x11
  425c5c:	orr	x8, x8, x9
  425c60:	cbnz	x8, 42616c <feof@plt+0x2379c>
  425c64:	add	x8, x21, #0x12
  425c68:	b	425c70 <feof@plt+0x232a0>
  425c6c:	add	x8, x8, #0x1
  425c70:	ldrb	w9, [x8]
  425c74:	cmp	w9, #0x20
  425c78:	b.eq	425c6c <feof@plt+0x2329c>  // b.none
  425c7c:	cmp	w9, #0x9
  425c80:	b.eq	425c6c <feof@plt+0x2329c>  // b.none
  425c84:	b	425e04 <feof@plt+0x23434>
  425c88:	cmp	w10, #0x4
  425c8c:	b.ne	425d2c <feof@plt+0x2335c>  // b.any
  425c90:	add	x9, x21, #0x8
  425c94:	b	425ca0 <feof@plt+0x232d0>
  425c98:	ldurb	w8, [x9, #-6]
  425c9c:	add	x9, x9, #0x1
  425ca0:	and	w8, w8, #0xff
  425ca4:	cmp	w8, #0x20
  425ca8:	b.eq	425c98 <feof@plt+0x232c8>  // b.none
  425cac:	cmp	w8, #0x9
  425cb0:	b.eq	425c98 <feof@plt+0x232c8>  // b.none
  425cb4:	ldr	x8, [x20]
  425cb8:	ldr	x8, [x8]
  425cbc:	sub	x8, x8, x9
  425cc0:	add	x10, x8, #0x7
  425cc4:	cmp	x10, #0x8
  425cc8:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425ccc:	ldur	w10, [x9, #-7]
  425cd0:	ldur	w11, [x9, #-4]
  425cd4:	mov	w12, #0x4146                	// #16710
  425cd8:	mov	w13, #0x544c                	// #21580
  425cdc:	movk	w12, #0x4c4c, lsl #16
  425ce0:	movk	w13, #0x5248, lsl #16
  425ce4:	eor	w10, w10, w12
  425ce8:	eor	w11, w11, w13
  425cec:	orr	w10, w10, w11
  425cf0:	cbnz	w10, 42616c <feof@plt+0x2379c>
  425cf4:	ldrb	w10, [x9]
  425cf8:	cmp	w10, #0x55
  425cfc:	b.ne	425f54 <feof@plt+0x23584>  // b.any
  425d00:	mov	w8, #0x8                   	// #8
  425d04:	add	x8, x9, x8
  425d08:	sub	x8, x8, #0x7
  425d0c:	b	425d14 <feof@plt+0x23344>
  425d10:	add	x8, x8, #0x1
  425d14:	ldrb	w9, [x8]
  425d18:	cmp	w9, #0x20
  425d1c:	b.eq	425d10 <feof@plt+0x23340>  // b.none
  425d20:	cmp	w9, #0x9
  425d24:	b.eq	425d10 <feof@plt+0x23340>  // b.none
  425d28:	b	425e04 <feof@plt+0x23434>
  425d2c:	mov	x10, xzr
  425d30:	and	w9, w8, #0xff
  425d34:	cmp	w9, #0x2e
  425d38:	b.hi	425d68 <feof@plt+0x23398>  // b.pmore
  425d3c:	and	x9, x8, #0xff
  425d40:	mov	w11, #0x1                   	// #1
  425d44:	lsl	x9, x11, x9
  425d48:	mov	x11, #0x200                 	// #512
  425d4c:	movk	x11, #0x4003, lsl #32
  425d50:	tst	x9, x11
  425d54:	b.eq	425d68 <feof@plt+0x23398>  // b.none
  425d58:	add	x8, x21, x10
  425d5c:	ldrb	w8, [x8, #2]
  425d60:	add	x10, x10, #0x1
  425d64:	b	425d30 <feof@plt+0x23360>
  425d68:	orr	w11, w8, #0x20
  425d6c:	add	x9, x21, x10
  425d70:	and	w11, w11, #0xff
  425d74:	cmp	w11, #0x65
  425d78:	add	x9, x9, #0x1
  425d7c:	b.ne	425e38 <feof@plt+0x23468>  // b.any
  425d80:	ldr	x11, [x20]
  425d84:	ldr	x11, [x11]
  425d88:	sub	x9, x11, x9
  425d8c:	cmp	x9, #0xd
  425d90:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425d94:	and	w9, w8, #0xff
  425d98:	cmp	w9, #0x45
  425d9c:	b.ne	425dc8 <feof@plt+0x233f8>  // b.any
  425da0:	add	x9, x21, x10
  425da4:	ldrh	w11, [x9, #2]
  425da8:	ldrb	w9, [x9, #4]
  425dac:	mov	w12, #0x534c                	// #21324
  425db0:	mov	w13, #0x45                  	// #69
  425db4:	eor	w11, w11, w12
  425db8:	eor	w9, w9, w13
  425dbc:	orr	w9, w11, w9
  425dc0:	tst	w9, #0xffff
  425dc4:	b.eq	425f78 <feof@plt+0x235a8>  // b.none
  425dc8:	add	x9, x21, x10
  425dcc:	ldrh	w11, [x9, #2]
  425dd0:	ldrb	w9, [x9, #4]
  425dd4:	mov	w12, #0x736c                	// #29548
  425dd8:	mov	w13, #0x65                  	// #101
  425ddc:	eor	w11, w11, w12
  425de0:	eor	w9, w9, w13
  425de4:	orr	w9, w11, w9
  425de8:	tst	w9, #0xffff
  425dec:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425df0:	mov	w11, wzr
  425df4:	b	425f7c <feof@plt+0x235ac>
  425df8:	mov	w8, #0xc                   	// #12
  425dfc:	add	x8, x9, x8
  425e00:	ldrb	w9, [x8]
  425e04:	ldrb	w10, [x21]
  425e08:	cmp	w10, #0x2a
  425e0c:	b.ne	425e28 <feof@plt+0x23458>  // b.any
  425e10:	cmp	w9, #0x2a
  425e14:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425e18:	ldrb	w8, [x8, #1]
  425e1c:	cmp	w8, #0x2f
  425e20:	b.eq	425e30 <feof@plt+0x23460>  // b.none
  425e24:	b	42616c <feof@plt+0x2379c>
  425e28:	cmp	w9, #0xa
  425e2c:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425e30:	mov	w26, #0x1                   	// #1
  425e34:	b	426170 <feof@plt+0x237a0>
  425e38:	cmp	w11, #0x69
  425e3c:	b.ne	425ec8 <feof@plt+0x234f8>  // b.any
  425e40:	ldr	x11, [x20]
  425e44:	ldr	x11, [x11]
  425e48:	sub	x9, x11, x9
  425e4c:	cmp	x9, #0x14
  425e50:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425e54:	and	w9, w8, #0xff
  425e58:	cmp	w9, #0x49
  425e5c:	b.ne	425e90 <feof@plt+0x234c0>  // b.any
  425e60:	add	x9, x21, x10
  425e64:	ldur	x11, [x9, #2]
  425e68:	ldrh	w9, [x9, #10]
  425e6c:	mov	x12, #0x544e                	// #21582
  425e70:	movk	x12, #0x4e45, lsl #16
  425e74:	movk	x12, #0x4954, lsl #32
  425e78:	movk	x12, #0x4e4f, lsl #48
  425e7c:	mov	w13, #0x4c41                	// #19521
  425e80:	eor	x11, x11, x12
  425e84:	eor	x9, x9, x13
  425e88:	orr	x9, x11, x9
  425e8c:	cbz	x9, 425fcc <feof@plt+0x235fc>
  425e90:	add	x9, x21, x10
  425e94:	ldur	x11, [x9, #2]
  425e98:	ldrh	w9, [x9, #10]
  425e9c:	mov	x12, #0x746e                	// #29806
  425ea0:	movk	x12, #0x6e65, lsl #16
  425ea4:	movk	x12, #0x6974, lsl #32
  425ea8:	movk	x12, #0x6e6f, lsl #48
  425eac:	mov	w13, #0x6c61                	// #27745
  425eb0:	eor	x11, x11, x12
  425eb4:	eor	x9, x9, x13
  425eb8:	orr	x9, x11, x9
  425ebc:	cbnz	x9, 42616c <feof@plt+0x2379c>
  425ec0:	mov	w11, wzr
  425ec4:	b	425fd0 <feof@plt+0x23600>
  425ec8:	mov	w11, wzr
  425ecc:	orr	w10, w8, #0x20
  425ed0:	and	w10, w10, #0xff
  425ed4:	cmp	w10, #0x66
  425ed8:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425edc:	ldr	x10, [x20]
  425ee0:	ldr	x10, [x10]
  425ee4:	sub	x12, x10, x9
  425ee8:	cmp	x12, #0x8
  425eec:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425ef0:	and	w12, w8, #0xff
  425ef4:	cmp	w12, #0x46
  425ef8:	b.ne	425f20 <feof@plt+0x23550>  // b.any
  425efc:	ldurh	w12, [x9, #1]
  425f00:	ldrb	w13, [x9, #3]
  425f04:	mov	w14, #0x4c41                	// #19521
  425f08:	mov	w15, #0x4c                  	// #76
  425f0c:	eor	w12, w12, w14
  425f10:	eor	w13, w13, w15
  425f14:	orr	w12, w12, w13
  425f18:	tst	w12, #0xffff
  425f1c:	b.eq	426060 <feof@plt+0x23690>  // b.none
  425f20:	tbnz	w11, #0, 42616c <feof@plt+0x2379c>
  425f24:	ldurh	w11, [x9, #1]
  425f28:	ldrb	w12, [x9, #3]
  425f2c:	mov	w13, #0x6c61                	// #27745
  425f30:	mov	w14, #0x6c                  	// #108
  425f34:	eor	w11, w11, w13
  425f38:	eor	w12, w12, w14
  425f3c:	orr	w11, w11, w12
  425f40:	tst	w11, #0xffff
  425f44:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425f48:	mov	w12, wzr
  425f4c:	mov	w14, #0x73                  	// #115
  425f50:	b	426068 <feof@plt+0x23698>
  425f54:	cmp	x8, #0x4
  425f58:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  425f5c:	ldr	w8, [x9]
  425f60:	mov	w10, #0x554f                	// #21839
  425f64:	movk	w10, #0x4847, lsl #16
  425f68:	cmp	w8, w10
  425f6c:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425f70:	mov	w8, #0xb                   	// #11
  425f74:	b	425d04 <feof@plt+0x23334>
  425f78:	mov	w11, #0x1                   	// #1
  425f7c:	add	x9, x21, x10
  425f80:	ldrb	w10, [x9, #5]!
  425f84:	cmp	w10, #0x2c
  425f88:	cinc	x9, x9, eq  // eq = none
  425f8c:	ldrb	w10, [x9]
  425f90:	cmp	w10, #0x20
  425f94:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  425f98:	ldrb	w10, [x9, #1]!
  425f9c:	cbz	w11, 425fa8 <feof@plt+0x235d8>
  425fa0:	cmp	w10, #0x66
  425fa4:	b.eq	42616c <feof@plt+0x2379c>  // b.none
  425fa8:	and	w8, w8, #0xff
  425fac:	cmp	w8, #0x65
  425fb0:	b.ne	425fbc <feof@plt+0x235ec>  // b.any
  425fb4:	cmp	w10, #0x46
  425fb8:	b.eq	42616c <feof@plt+0x2379c>  // b.none
  425fbc:	cmp	w11, #0x0
  425fc0:	cset	w11, ne  // ne = any
  425fc4:	mov	w8, w10
  425fc8:	b	425ecc <feof@plt+0x234fc>
  425fcc:	mov	w11, #0x1                   	// #1
  425fd0:	add	x12, x21, x10
  425fd4:	ldrb	w9, [x12, #12]
  425fd8:	cmp	w9, #0x20
  425fdc:	b.ne	425ff8 <feof@plt+0x23628>  // b.any
  425fe0:	add	x9, x12, #0xd
  425fe4:	cbz	w11, 42603c <feof@plt+0x2366c>
  425fe8:	ldrb	w10, [x12, #13]
  425fec:	cmp	w10, #0x66
  425ff0:	b.ne	42603c <feof@plt+0x2366c>  // b.any
  425ff4:	b	42616c <feof@plt+0x2379c>
  425ff8:	cbz	w11, 426014 <feof@plt+0x23644>
  425ffc:	ldr	w9, [x12, #12]
  426000:	mov	w12, #0x594c                	// #22860
  426004:	movk	w12, #0x4620, lsl #16
  426008:	cmp	w9, w12
  42600c:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  426010:	b	426034 <feof@plt+0x23664>
  426014:	ldrh	w9, [x12, #12]
  426018:	ldrb	w12, [x12, #14]
  42601c:	mov	w13, #0x796c                	// #31084
  426020:	eor	w9, w9, w13
  426024:	eor	w12, w12, #0x20
  426028:	orr	w9, w9, w12
  42602c:	tst	w9, #0xffff
  426030:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  426034:	add	x9, x21, x10
  426038:	add	x9, x9, #0xf
  42603c:	and	w10, w8, #0xff
  426040:	ldrb	w8, [x9]
  426044:	cmp	w10, #0x69
  426048:	b.ne	426054 <feof@plt+0x23684>  // b.any
  42604c:	cmp	w8, #0x46
  426050:	b.eq	42616c <feof@plt+0x2379c>  // b.none
  426054:	cmp	w11, #0x0
  426058:	cset	w11, ne  // ne = any
  42605c:	b	425ecc <feof@plt+0x234fc>
  426060:	mov	w14, #0x53                  	// #83
  426064:	mov	w12, #0x1                   	// #1
  426068:	mov	x11, x9
  42606c:	ldrb	w13, [x11, #4]!
  426070:	cmp	w14, w13
  426074:	b.ne	42608c <feof@plt+0x236bc>  // b.any
  426078:	ldrb	w14, [x9, #5]
  42607c:	cmp	w14, #0x20
  426080:	b.ne	42608c <feof@plt+0x236bc>  // b.any
  426084:	add	x11, x9, #0x6
  426088:	b	4260bc <feof@plt+0x236ec>
  42608c:	cmp	w13, #0x2d
  426090:	b.eq	42609c <feof@plt+0x236cc>  // b.none
  426094:	cmp	w13, #0x20
  426098:	b.ne	4260a4 <feof@plt+0x236d4>  // b.any
  42609c:	add	x11, x9, #0x5
  4260a0:	b	4260bc <feof@plt+0x236ec>
  4260a4:	cmp	w12, #0x0
  4260a8:	mov	w9, #0x74                  	// #116
  4260ac:	mov	w14, #0x54                  	// #84
  4260b0:	csel	w9, w14, w9, ne  // ne = any
  4260b4:	cmp	w9, w13
  4260b8:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  4260bc:	and	w8, w8, #0xff
  4260c0:	cmp	w8, #0x66
  4260c4:	b.eq	4260d4 <feof@plt+0x23704>  // b.none
  4260c8:	ldrb	w8, [x11]
  4260cc:	cmp	w8, #0x54
  4260d0:	b.eq	4260e4 <feof@plt+0x23714>  // b.none
  4260d4:	tbnz	w12, #0, 42616c <feof@plt+0x2379c>
  4260d8:	ldrb	w8, [x11]
  4260dc:	cmp	w8, #0x74
  4260e0:	b.ne	42616c <feof@plt+0x2379c>  // b.any
  4260e4:	sub	x8, x10, x11
  4260e8:	cmp	x8, #0x4
  4260ec:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  4260f0:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  4260f4:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0xca68>
  4260f8:	add	x9, x9, #0x8e4
  4260fc:	add	x10, x10, #0x8e0
  426100:	cmp	w12, #0x0
  426104:	csel	x9, x10, x9, ne  // ne = any
  426108:	ldurh	w13, [x11, #1]
  42610c:	ldrb	w14, [x11, #3]
  426110:	ldrh	w10, [x9]
  426114:	ldrb	w9, [x9, #2]
  426118:	eor	w10, w13, w10
  42611c:	eor	w9, w14, w9
  426120:	orr	w9, w10, w9
  426124:	tst	w9, #0xffff
  426128:	b.eq	4261b4 <feof@plt+0x237e4>  // b.none
  42612c:	cmp	x8, #0x7
  426130:	b.cc	42616c <feof@plt+0x2379c>  // b.lo, b.ul, b.last
  426134:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0xca68>
  426138:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42613c:	add	x8, x8, #0x8aa
  426140:	add	x9, x9, #0x8e8
  426144:	cmp	w12, #0x0
  426148:	csel	x8, x9, x8, ne  // ne = any
  42614c:	ldur	w10, [x11, #1]
  426150:	ldurh	w12, [x11, #5]
  426154:	ldr	w9, [x8]
  426158:	ldrh	w8, [x8, #4]
  42615c:	eor	w9, w10, w9
  426160:	eor	w8, w12, w8
  426164:	orr	w8, w9, w8
  426168:	cbz	w8, 4261bc <feof@plt+0x237ec>
  42616c:	mov	w26, w22
  426170:	ldr	x8, [x20, #1072]
  426174:	cbz	x8, 426198 <feof@plt+0x237c8>
  426178:	ldr	x9, [x20]
  42617c:	ldr	w1, [x19]
  426180:	sub	x2, x21, #0x1
  426184:	mov	x0, x20
  426188:	ldr	x9, [x9]
  42618c:	sub	x9, x9, x21
  426190:	add	x3, x9, #0x1
  426194:	blr	x8
  426198:	ldrb	w8, [x20, #21]
  42619c:	cbnz	w8, 426b80 <feof@plt+0x241b0>
  4261a0:	ldrh	w8, [x19, #6]
  4261a4:	mov	w22, w26
  4261a8:	orr	w8, w8, #0x1
  4261ac:	strh	w8, [x19, #6]
  4261b0:	b	425748 <feof@plt+0x22d78>
  4261b4:	mov	w8, #0x4                   	// #4
  4261b8:	b	4261c0 <feof@plt+0x237f0>
  4261bc:	mov	w8, #0x7                   	// #7
  4261c0:	add	x8, x11, x8
  4261c4:	ldrb	w9, [x8]
  4261c8:	cmp	w9, #0x2e
  4261cc:	b.hi	425e04 <feof@plt+0x23434>  // b.pmore
  4261d0:	mov	w10, #0x1                   	// #1
  4261d4:	mov	x11, #0x200                 	// #512
  4261d8:	lsl	x10, x10, x9
  4261dc:	movk	x11, #0x4003, lsl #32
  4261e0:	tst	x10, x11
  4261e4:	b.eq	4261f0 <feof@plt+0x23820>  // b.none
  4261e8:	add	x8, x8, #0x1
  4261ec:	b	4261c4 <feof@plt+0x237f4>
  4261f0:	cmp	x9, #0x2d
  4261f4:	b.ne	425e04 <feof@plt+0x23434>  // b.any
  4261f8:	ldrb	w9, [x21]
  4261fc:	add	x10, x8, #0x1
  426200:	cmp	w9, #0x2a
  426204:	b.eq	42623c <feof@plt+0x2386c>  // b.none
  426208:	mov	x8, x10
  42620c:	b	426214 <feof@plt+0x23844>
  426210:	add	x8, x8, #0x1
  426214:	ldrb	w9, [x8]
  426218:	cmp	w9, #0xd
  42621c:	b.hi	426210 <feof@plt+0x23840>  // b.pmore
  426220:	mov	w10, #0x1                   	// #1
  426224:	lsl	w10, w10, w9
  426228:	mov	w11, #0x2401                	// #9217
  42622c:	tst	w10, w11
  426230:	b.eq	426210 <feof@plt+0x23840>  // b.none
  426234:	b	425e04 <feof@plt+0x23434>
  426238:	add	x10, x8, #0x1
  42623c:	ldrb	w9, [x10]
  426240:	mov	x8, x10
  426244:	cmp	w9, #0x29
  426248:	b.le	42626c <feof@plt+0x2389c>
  42624c:	cmp	w9, #0x2a
  426250:	b.ne	426238 <feof@plt+0x23868>  // b.any
  426254:	mov	x10, x8
  426258:	ldrb	w9, [x10, #1]!
  42625c:	cmp	w9, #0x2f
  426260:	mov	w9, #0x2a                  	// #42
  426264:	b.ne	42623c <feof@plt+0x2386c>  // b.any
  426268:	b	425e04 <feof@plt+0x23434>
  42626c:	cbz	w9, 425e04 <feof@plt+0x23434>
  426270:	cmp	w9, #0xa
  426274:	b.eq	425e04 <feof@plt+0x23434>  // b.none
  426278:	cmp	w9, #0xd
  42627c:	b.ne	426238 <feof@plt+0x23868>  // b.any
  426280:	b	425e04 <feof@plt+0x23434>
  426284:	ldr	x8, [x23]
  426288:	ldr	x9, [x23, #32]
  42628c:	cmp	x8, x9
  426290:	b.cs	4262d4 <feof@plt+0x23904>  // b.hs, b.nlast
  426294:	ldr	x0, [x20, #40]
  426298:	mov	w10, #0x18                  	// #24
  42629c:	mov	w2, wzr
  4262a0:	ldr	w8, [x0, #12]
  4262a4:	ldr	x9, [x0]
  4262a8:	sub	w8, w8, #0x1
  4262ac:	smaddl	x8, w8, w10, x9
  4262b0:	ldr	w9, [x0, #60]
  4262b4:	ldr	w10, [x8]
  4262b8:	ldrb	w11, [x8, #6]
  4262bc:	ldr	w8, [x8, #16]
  4262c0:	sub	w9, w9, w10
  4262c4:	lsr	w9, w9, w11
  4262c8:	add	w8, w8, w9
  4262cc:	add	w1, w8, #0x1
  4262d0:	bl	42a5e8 <feof@plt+0x27c18>
  4262d4:	mov	w8, #0x1                   	// #1
  4262d8:	strb	w8, [x23, #104]
  4262dc:	b	425660 <feof@plt+0x22c90>
  4262e0:	mov	w8, #0x16                  	// #22
  4262e4:	strb	w8, [x19, #4]
  4262e8:	ldrb	w8, [x20, #16]
  4262ec:	cbnz	w8, 426b08 <feof@plt+0x24138>
  4262f0:	ldr	x8, [x20, #40]
  4262f4:	mov	w9, #0x40                  	// #64
  4262f8:	ldr	w8, [x8, #60]
  4262fc:	strh	w9, [x19, #6]
  426300:	str	w8, [x19]
  426304:	b	426b08 <feof@plt+0x24138>
  426308:	cmp	w28, #0x4c
  42630c:	b.eq	426318 <feof@plt+0x23948>  // b.none
  426310:	ldrb	w8, [x20, #1130]
  426314:	cbz	w8, 426814 <feof@plt+0x23e44>
  426318:	ldr	x8, [x23]
  42631c:	ldrb	w9, [x8]
  426320:	cmp	w9, #0x27
  426324:	cset	w10, eq  // eq = none
  426328:	cmp	w28, #0x52
  42632c:	cset	w11, ne  // ne = any
  426330:	cmp	w9, #0x22
  426334:	b.eq	426390 <feof@plt+0x239c0>  // b.none
  426338:	and	w10, w11, w10
  42633c:	tbnz	w10, #0, 426390 <feof@plt+0x239c0>
  426340:	cmp	w28, #0x52
  426344:	b.eq	4267dc <feof@plt+0x23e0c>  // b.none
  426348:	cmp	w9, #0x52
  42634c:	b.ne	4267dc <feof@plt+0x23e0c>  // b.any
  426350:	ldrb	w9, [x8, #1]
  426354:	cmp	w9, #0x22
  426358:	b.ne	426a14 <feof@plt+0x24044>  // b.any
  42635c:	ldrb	w9, [x20, #1130]
  426360:	cbnz	w9, 426390 <feof@plt+0x239c0>
  426364:	b	426a14 <feof@plt+0x24044>
  426368:	mov	w8, #0x52                  	// #82
  42636c:	strb	w8, [x19, #4]
  426370:	ldrb	w8, [x20, #33]
  426374:	strb	wzr, [x20, #32]
  426378:	cbnz	w8, 426b08 <feof@plt+0x24138>
  42637c:	ldrb	w8, [x20, #24]
  426380:	sub	w8, w8, #0x1
  426384:	strb	w8, [x20, #24]
  426388:	b	426b08 <feof@plt+0x24138>
  42638c:	ldr	x8, [x23]
  426390:	sub	x2, x8, #0x1
  426394:	mov	x0, x20
  426398:	mov	x1, x19
  42639c:	bl	427048 <feof@plt+0x24678>
  4263a0:	b	426a88 <feof@plt+0x240b8>
  4263a4:	ldr	x8, [x23]
  4263a8:	mov	x2, sp
  4263ac:	mov	w1, #0x1                   	// #1
  4263b0:	mov	x0, x20
  4263b4:	sub	x21, x8, #0x1
  4263b8:	str	x21, [x23]
  4263bc:	str	wzr, [sp, #8]
  4263c0:	str	xzr, [sp]
  4263c4:	bl	4286a4 <feof@plt+0x25cd4>
  4263c8:	tbz	w0, #0, 426760 <feof@plt+0x23d90>
  4263cc:	mov	w8, #0x35                  	// #53
  4263d0:	add	x4, x19, #0x10
  4263d4:	mov	x3, sp
  4263d8:	mov	w2, #0x1                   	// #1
  4263dc:	mov	x0, x20
  4263e0:	mov	x1, x21
  4263e4:	strb	w8, [x19, #4]
  4263e8:	bl	42844c <feof@plt+0x25a7c>
  4263ec:	str	x0, [x19, #8]
  4263f0:	b	426640 <feof@plt+0x23c70>
  4263f4:	mov	w8, #0x1                   	// #1
  4263f8:	strb	w8, [x19, #4]
  4263fc:	ldr	x8, [x23]
  426400:	ldrb	w9, [x8]
  426404:	cmp	w9, #0x3d
  426408:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  42640c:	add	x8, x8, #0x1
  426410:	mov	w9, #0x18                  	// #24
  426414:	b	4269fc <feof@plt+0x2402c>
  426418:	mov	w8, #0x8                   	// #8
  42641c:	strb	w8, [x19, #4]
  426420:	ldr	x8, [x23]
  426424:	ldrb	w9, [x8]
  426428:	cmp	w9, #0x3d
  42642c:	b.ne	426828 <feof@plt+0x23e58>  // b.any
  426430:	add	x8, x8, #0x1
  426434:	mov	w9, #0x1f                  	// #31
  426438:	b	4269fc <feof@plt+0x2402c>
  42643c:	mov	w8, #0x14                  	// #20
  426440:	strb	w8, [x19, #4]
  426444:	b	426a8c <feof@plt+0x240bc>
  426448:	mov	w8, #0x4                   	// #4
  42644c:	strb	w8, [x19, #4]
  426450:	ldr	x8, [x23]
  426454:	ldrb	w9, [x8]
  426458:	cmp	w9, #0x3d
  42645c:	b.eq	4268dc <feof@plt+0x23f0c>  // b.none
  426460:	cmp	w9, #0x2b
  426464:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426468:	add	x8, x8, #0x1
  42646c:	mov	w9, #0x2d                  	// #45
  426470:	b	4269fc <feof@plt+0x2402c>
  426474:	ldrb	w8, [x20, #19]
  426478:	cbz	w8, 42649c <feof@plt+0x23acc>
  42647c:	ldr	x8, [x23]
  426480:	mov	x0, x20
  426484:	mov	x1, x19
  426488:	sub	x2, x8, #0x1
  42648c:	bl	427048 <feof@plt+0x24678>
  426490:	ldrb	w8, [x19, #4]
  426494:	cmp	w8, #0x3
  426498:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  42649c:	mov	w8, #0x3                   	// #3
  4264a0:	strb	w8, [x19, #4]
  4264a4:	ldr	x8, [x23]
  4264a8:	ldrb	w9, [x8]
  4264ac:	cmp	w9, #0x3c
  4264b0:	b.eq	426960 <feof@plt+0x23f90>  // b.none
  4264b4:	cmp	w9, #0x3d
  4264b8:	b.ne	42698c <feof@plt+0x23fbc>  // b.any
  4264bc:	add	x8, x8, #0x1
  4264c0:	mov	w9, #0x1a                  	// #26
  4264c4:	b	4269fc <feof@plt+0x2402c>
  4264c8:	mov	w8, #0x11                  	// #17
  4264cc:	strb	w8, [x19, #4]
  4264d0:	b	426a8c <feof@plt+0x240bc>
  4264d4:	mov	w8, #0x34                  	// #52
  4264d8:	strb	w8, [x19, #4]
  4264dc:	b	426a8c <feof@plt+0x240bc>
  4264e0:	mov	w8, #0x2a                  	// #42
  4264e4:	strb	w8, [x19, #4]
  4264e8:	b	426a8c <feof@plt+0x240bc>
  4264ec:	mov	w8, #0x25                  	// #37
  4264f0:	strb	w8, [x19, #4]
  4264f4:	ldr	x8, [x23]
  4264f8:	ldrb	w9, [x8]
  4264fc:	cmp	w9, #0x23
  426500:	b.ne	426514 <feof@plt+0x23b44>  // b.any
  426504:	add	x8, x8, #0x1
  426508:	mov	w9, #0x26                  	// #38
  42650c:	str	x8, [x23]
  426510:	strb	w9, [x19, #4]
  426514:	str	wzr, [x19, #8]
  426518:	b	426a88 <feof@plt+0x240b8>
  42651c:	mov	w8, #0x9                   	// #9
  426520:	strb	w8, [x19, #4]
  426524:	ldr	x8, [x23]
  426528:	ldrb	w9, [x8]
  42652c:	cmp	w9, #0x3d
  426530:	b.eq	4268e8 <feof@plt+0x23f18>  // b.none
  426534:	cmp	w9, #0x26
  426538:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  42653c:	add	x8, x8, #0x1
  426540:	mov	w9, #0xf                   	// #15
  426544:	b	4269fc <feof@plt+0x2402c>
  426548:	mov	w8, #0x15                  	// #21
  42654c:	strb	w8, [x19, #4]
  426550:	b	426a8c <feof@plt+0x240bc>
  426554:	mov	w8, #0x6                   	// #6
  426558:	strb	w8, [x19, #4]
  42655c:	ldr	x8, [x23]
  426560:	ldrb	w9, [x8]
  426564:	cmp	w9, #0x3d
  426568:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  42656c:	add	x8, x8, #0x1
  426570:	mov	w9, #0x1d                  	// #29
  426574:	b	4269fc <feof@plt+0x2402c>
  426578:	mov	w8, #0x13                  	// #19
  42657c:	strb	w8, [x19, #4]
  426580:	b	426a8c <feof@plt+0x240bc>
  426584:	mov	w8, #0x5                   	// #5
  426588:	strb	w8, [x19, #4]
  42658c:	ldr	x8, [x23]
  426590:	ldrb	w9, [x8]
  426594:	cmp	w9, #0x2d
  426598:	b.eq	426948 <feof@plt+0x23f78>  // b.none
  42659c:	cmp	w9, #0x3d
  4265a0:	b.eq	426954 <feof@plt+0x23f84>  // b.none
  4265a4:	cmp	w9, #0x3e
  4265a8:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  4265ac:	add	x8, x8, #0x1
  4265b0:	mov	w9, #0x2f                  	// #47
  4265b4:	str	x8, [x23]
  4265b8:	strb	w9, [x19, #4]
  4265bc:	ldr	x8, [x23]
  4265c0:	ldrb	w9, [x8]
  4265c4:	cmp	w9, #0x2a
  4265c8:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  4265cc:	ldrb	w9, [x20, #1120]
  4265d0:	cbz	w9, 426a88 <feof@plt+0x240b8>
  4265d4:	add	x8, x8, #0x1
  4265d8:	mov	w9, #0x32                  	// #50
  4265dc:	b	4269fc <feof@plt+0x2402c>
  4265e0:	mov	w8, #0x30                  	// #48
  4265e4:	strb	w8, [x19, #4]
  4265e8:	ldr	x8, [x23]
  4265ec:	ldrb	w9, [x8]
  4265f0:	ldrh	w10, [x27, x9, lsl #1]
  4265f4:	tbnz	w10, #2, 426620 <feof@plt+0x23c50>
  4265f8:	cmp	w9, #0x2a
  4265fc:	b.eq	4269ec <feof@plt+0x2401c>  // b.none
  426600:	cmp	w9, #0x2e
  426604:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426608:	ldrb	w9, [x8, #1]
  42660c:	cmp	w9, #0x2e
  426610:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426614:	add	x8, x8, #0x2
  426618:	mov	w9, #0x2c                  	// #44
  42661c:	b	4269fc <feof@plt+0x2402c>
  426620:	mov	w8, #0x37                  	// #55
  426624:	add	x1, x19, #0x8
  426628:	mov	x2, sp
  42662c:	mov	x0, x20
  426630:	str	wzr, [sp, #8]
  426634:	str	xzr, [sp]
  426638:	strb	w8, [x19, #4]
  42663c:	bl	426dfc <feof@plt+0x2442c>
  426640:	mov	x2, sp
  426644:	mov	x0, x20
  426648:	mov	x1, x19
  42664c:	bl	426f54 <feof@plt+0x24584>
  426650:	b	426a88 <feof@plt+0x240b8>
  426654:	mov	w8, #0x12                  	// #18
  426658:	strb	w8, [x19, #4]
  42665c:	ldr	x8, [x23]
  426660:	ldrb	w9, [x8]
  426664:	cmp	w9, #0x3e
  426668:	b.eq	4268f4 <feof@plt+0x23f24>  // b.none
  42666c:	cmp	w9, #0x3a
  426670:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426674:	ldrb	w9, [x20, #1120]
  426678:	cbz	w9, 426a88 <feof@plt+0x240b8>
  42667c:	add	x8, x8, #0x1
  426680:	mov	w9, #0x31                  	// #49
  426684:	b	4269fc <feof@plt+0x2402c>
  426688:	mov	w8, #0x2b                  	// #43
  42668c:	strb	w8, [x19, #4]
  426690:	b	426a8c <feof@plt+0x240bc>
  426694:	strb	wzr, [x19, #4]
  426698:	ldr	x8, [x23]
  42669c:	ldrb	w9, [x8]
  4266a0:	cmp	w9, #0x3d
  4266a4:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  4266a8:	add	x8, x8, #0x1
  4266ac:	mov	w9, #0x17                  	// #23
  4266b0:	b	4269fc <feof@plt+0x2402c>
  4266b4:	mov	w8, #0x2                   	// #2
  4266b8:	strb	w8, [x19, #4]
  4266bc:	ldr	x8, [x23]
  4266c0:	ldrb	w9, [x8]
  4266c4:	cmp	w9, #0x3e
  4266c8:	b.eq	426910 <feof@plt+0x23f40>  // b.none
  4266cc:	cmp	w9, #0x3d
  4266d0:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  4266d4:	add	x8, x8, #0x1
  4266d8:	mov	w9, #0x19                  	// #25
  4266dc:	b	4269fc <feof@plt+0x2402c>
  4266e0:	mov	w8, #0x27                  	// #39
  4266e4:	strb	w8, [x19, #4]
  4266e8:	b	426a8c <feof@plt+0x240bc>
  4266ec:	mov	w8, #0x28                  	// #40
  4266f0:	strb	w8, [x19, #4]
  4266f4:	b	426a8c <feof@plt+0x240bc>
  4266f8:	mov	w8, #0xb                   	// #11
  4266fc:	strb	w8, [x19, #4]
  426700:	ldr	x8, [x23]
  426704:	ldrb	w9, [x8]
  426708:	cmp	w9, #0x3d
  42670c:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426710:	add	x8, x8, #0x1
  426714:	mov	w9, #0x22                  	// #34
  426718:	b	4269fc <feof@plt+0x2402c>
  42671c:	mov	w8, #0x29                  	// #41
  426720:	strb	w8, [x19, #4]
  426724:	b	426a8c <feof@plt+0x240bc>
  426728:	mov	w8, #0xa                   	// #10
  42672c:	strb	w8, [x19, #4]
  426730:	ldr	x8, [x23]
  426734:	ldrb	w9, [x8]
  426738:	cmp	w9, #0x3d
  42673c:	b.eq	42693c <feof@plt+0x23f6c>  // b.none
  426740:	cmp	w9, #0x7c
  426744:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426748:	add	x8, x8, #0x1
  42674c:	mov	w9, #0x10                  	// #16
  426750:	b	4269fc <feof@plt+0x2402c>
  426754:	mov	w8, #0xe                   	// #14
  426758:	strb	w8, [x19, #4]
  42675c:	b	426a8c <feof@plt+0x240bc>
  426760:	ldr	x8, [x23]
  426764:	add	x8, x8, #0x1
  426768:	str	x8, [x23]
  42676c:	ldr	x8, [x20, #64]
  426770:	ldr	x21, [x23]
  426774:	ldp	x0, x9, [x8, #16]
  426778:	sub	x9, x9, x0
  42677c:	cmp	x9, #0x1
  426780:	b.hi	4268b0 <feof@plt+0x23ee0>  // b.pmore
  426784:	mov	x9, x20
  426788:	ldr	x8, [x9, #72]!
  42678c:	cbz	x8, 4267b8 <feof@plt+0x23de8>
  426790:	ldr	x10, [x8, #24]
  426794:	ldr	x11, [x8, #8]
  426798:	sub	x10, x10, x11
  42679c:	sub	x10, x10, #0x2
  4267a0:	lsr	x10, x10, #1
  4267a4:	cmp	x10, #0xfa1
  4267a8:	b.cc	426890 <feof@plt+0x23ec0>  // b.lo, b.ul, b.last
  4267ac:	mov	x9, x8
  4267b0:	ldr	x8, [x8]
  4267b4:	cbnz	x8, 426790 <feof@plt+0x23dc0>
  4267b8:	mov	w0, #0x1f60                	// #8032
  4267bc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4267c0:	mov	w8, #0x1f40                	// #8000
  4267c4:	add	x8, x0, x8
  4267c8:	str	x0, [x0, #8008]
  4267cc:	str	x0, [x0, #8016]
  4267d0:	str	x8, [x0, #8024]
  4267d4:	str	xzr, [x0, #8000]
  4267d8:	b	4268a4 <feof@plt+0x23ed4>
  4267dc:	cmp	w28, #0x75
  4267e0:	b.ne	426a14 <feof@plt+0x24044>  // b.any
  4267e4:	cmp	w9, #0x38
  4267e8:	b.ne	426a14 <feof@plt+0x24044>  // b.any
  4267ec:	ldrb	w9, [x8, #1]
  4267f0:	cmp	w9, #0x22
  4267f4:	b.eq	426390 <feof@plt+0x239c0>  // b.none
  4267f8:	cmp	w9, #0x52
  4267fc:	b.eq	426a08 <feof@plt+0x24038>  // b.none
  426800:	cmp	w9, #0x27
  426804:	b.ne	426a14 <feof@plt+0x24044>  // b.any
  426808:	ldrb	w9, [x20, #1129]
  42680c:	cbnz	w9, 426390 <feof@plt+0x239c0>
  426810:	b	426a14 <feof@plt+0x24044>
  426814:	cmp	w28, #0x52
  426818:	b.eq	426a14 <feof@plt+0x24044>  // b.none
  42681c:	ldrb	w8, [x20, #1128]
  426820:	cbnz	w8, 426318 <feof@plt+0x23948>
  426824:	b	426a14 <feof@plt+0x24044>
  426828:	ldrb	w10, [x20, #1126]
  42682c:	cbz	w10, 426a88 <feof@plt+0x240b8>
  426830:	cmp	w9, #0x3e
  426834:	b.eq	426b2c <feof@plt+0x2415c>  // b.none
  426838:	cmp	w9, #0x3a
  42683c:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426840:	add	x8, x8, #0x1
  426844:	str	x8, [x23]
  426848:	ldrh	w8, [x19, #6]
  42684c:	mov	w9, #0x25                  	// #37
  426850:	strb	w9, [x19, #4]
  426854:	orr	w8, w8, #0x2
  426858:	strh	w8, [x19, #6]
  42685c:	ldr	x8, [x23]
  426860:	ldrb	w9, [x8]
  426864:	cmp	w9, #0x25
  426868:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  42686c:	ldrb	w9, [x8, #1]
  426870:	cmp	w9, #0x3a
  426874:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426878:	add	x8, x8, #0x2
  42687c:	mov	w9, #0x26                  	// #38
  426880:	str	x8, [x23]
  426884:	strb	w9, [x19, #4]
  426888:	str	wzr, [x19, #8]
  42688c:	b	426a88 <feof@plt+0x240b8>
  426890:	ldr	x10, [x8]
  426894:	str	x10, [x9]
  426898:	ldr	x0, [x8, #8]
  42689c:	str	xzr, [x8]
  4268a0:	str	x0, [x8, #16]
  4268a4:	ldr	x9, [x20, #64]
  4268a8:	str	x9, [x8]
  4268ac:	str	x8, [x20, #64]
  4268b0:	add	x9, x0, #0x2
  4268b4:	str	x9, [x8, #16]
  4268b8:	ldurb	w8, [x21, #-1]
  4268bc:	mov	w9, #0x3d                  	// #61
  4268c0:	mov	w10, #0x1                   	// #1
  4268c4:	strb	wzr, [x0, #1]
  4268c8:	strb	w8, [x0]
  4268cc:	strb	w9, [x19, #4]
  4268d0:	str	w10, [x19, #8]
  4268d4:	str	x0, [x19, #16]
  4268d8:	b	426a88 <feof@plt+0x240b8>
  4268dc:	add	x8, x8, #0x1
  4268e0:	mov	w9, #0x1b                  	// #27
  4268e4:	b	4269fc <feof@plt+0x2402c>
  4268e8:	add	x8, x8, #0x1
  4268ec:	mov	w9, #0x20                  	// #32
  4268f0:	b	4269fc <feof@plt+0x2402c>
  4268f4:	ldrb	w9, [x20, #1126]
  4268f8:	cbz	w9, 426a88 <feof@plt+0x240b8>
  4268fc:	add	x8, x8, #0x1
  426900:	str	x8, [x23]
  426904:	ldrh	w8, [x19, #6]
  426908:	mov	w9, #0x28                  	// #40
  42690c:	b	426b50 <feof@plt+0x24180>
  426910:	add	x8, x8, #0x1
  426914:	mov	w9, #0xc                   	// #12
  426918:	str	x8, [x23]
  42691c:	strb	w9, [x19, #4]
  426920:	ldr	x8, [x23]
  426924:	ldrb	w9, [x8]
  426928:	cmp	w9, #0x3d
  42692c:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426930:	add	x8, x8, #0x1
  426934:	mov	w9, #0x23                  	// #35
  426938:	b	4269fc <feof@plt+0x2402c>
  42693c:	add	x8, x8, #0x1
  426940:	mov	w9, #0x21                  	// #33
  426944:	b	4269fc <feof@plt+0x2402c>
  426948:	add	x8, x8, #0x1
  42694c:	mov	w9, #0x2e                  	// #46
  426950:	b	4269fc <feof@plt+0x2402c>
  426954:	add	x8, x8, #0x1
  426958:	mov	w9, #0x1c                  	// #28
  42695c:	b	4269fc <feof@plt+0x2402c>
  426960:	add	x8, x8, #0x1
  426964:	mov	w9, #0xd                   	// #13
  426968:	str	x8, [x23]
  42696c:	strb	w9, [x19, #4]
  426970:	ldr	x8, [x23]
  426974:	ldrb	w9, [x8]
  426978:	cmp	w9, #0x3d
  42697c:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  426980:	add	x8, x8, #0x1
  426984:	mov	w9, #0x24                  	// #36
  426988:	b	4269fc <feof@plt+0x2402c>
  42698c:	ldrb	w10, [x20, #1126]
  426990:	cbz	w10, 426a88 <feof@plt+0x240b8>
  426994:	cmp	w9, #0x25
  426998:	b.eq	426b40 <feof@plt+0x24170>  // b.none
  42699c:	cmp	w9, #0x3a
  4269a0:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  4269a4:	ldrb	w9, [x20, #1120]
  4269a8:	cbz	w9, 4269d8 <feof@plt+0x24008>
  4269ac:	ldr	w9, [x20, #1116]
  4269b0:	sub	w9, w9, #0xb
  4269b4:	cmp	w9, #0x2
  4269b8:	b.cc	4269d8 <feof@plt+0x24008>  // b.lo, b.ul, b.last
  4269bc:	ldrb	w9, [x8, #1]
  4269c0:	cmp	w9, #0x3a
  4269c4:	b.ne	4269d8 <feof@plt+0x24008>  // b.any
  4269c8:	ldrb	w9, [x8, #2]
  4269cc:	orr	w9, w9, #0x4
  4269d0:	cmp	w9, #0x3e
  4269d4:	b.ne	426a88 <feof@plt+0x240b8>  // b.any
  4269d8:	add	x8, x8, #0x1
  4269dc:	str	x8, [x23]
  4269e0:	ldrh	w8, [x19, #6]
  4269e4:	mov	w9, #0x27                  	// #39
  4269e8:	b	426b50 <feof@plt+0x24180>
  4269ec:	ldrb	w9, [x20, #1120]
  4269f0:	cbz	w9, 426a88 <feof@plt+0x240b8>
  4269f4:	add	x8, x8, #0x1
  4269f8:	mov	w9, #0x33                  	// #51
  4269fc:	str	x8, [x23]
  426a00:	strb	w9, [x19, #4]
  426a04:	b	426a88 <feof@plt+0x240b8>
  426a08:	ldrb	w9, [x8, #2]
  426a0c:	cmp	w9, #0x22
  426a10:	b.eq	42635c <feof@plt+0x2398c>  // b.none
  426a14:	mov	w8, #0x35                  	// #53
  426a18:	strb	w8, [x19, #4]
  426a1c:	str	wzr, [sp, #8]
  426a20:	str	xzr, [sp]
  426a24:	ldr	x8, [x23]
  426a28:	add	x4, x19, #0x10
  426a2c:	mov	x3, sp
  426a30:	mov	x0, x20
  426a34:	sub	x1, x8, #0x1
  426a38:	mov	w2, wzr
  426a3c:	bl	42844c <feof@plt+0x25a7c>
  426a40:	str	x0, [x19, #8]
  426a44:	mov	x2, sp
  426a48:	mov	x0, x20
  426a4c:	mov	x1, x19
  426a50:	bl	426f54 <feof@plt+0x24584>
  426a54:	ldr	x8, [x19, #8]
  426a58:	ldrb	w9, [x8, #18]
  426a5c:	tbz	w9, #2, 426a78 <feof@plt+0x240a8>
  426a60:	ldrh	w9, [x19, #6]
  426a64:	orr	w9, w9, #0x10
  426a68:	strh	w9, [x19, #6]
  426a6c:	ldrb	w8, [x8, #16]
  426a70:	lsr	w8, w8, #1
  426a74:	strb	w8, [x19, #4]
  426a78:	tbz	w22, #0, 426a88 <feof@plt+0x240b8>
  426a7c:	ldrh	w8, [x19, #6]
  426a80:	orr	w8, w8, #0x20
  426a84:	strh	w8, [x19, #6]
  426a88:	ldr	w21, [x19]
  426a8c:	cmp	w21, #0x2
  426a90:	b.cc	426b08 <feof@plt+0x24138>  // b.lo, b.ul, b.last
  426a94:	ldrb	w8, [x19, #4]
  426a98:	cmp	w8, #0x16
  426a9c:	b.eq	426b08 <feof@plt+0x24138>  // b.none
  426aa0:	ldr	w9, [x23, #56]
  426aa4:	ldr	x10, [x23, #48]
  426aa8:	ldr	x8, [x23]
  426aac:	lsl	x9, x9, #4
  426ab0:	ldr	x9, [x10, x9]
  426ab4:	cmp	x8, x9
  426ab8:	b.cc	426ad8 <feof@plt+0x24108>  // b.lo, b.ul, b.last
  426abc:	ldr	x9, [x20, #8]
  426ac0:	cbnz	x9, 426ad8 <feof@plt+0x24108>
  426ac4:	mov	x0, x20
  426ac8:	mov	w1, wzr
  426acc:	bl	424c04 <feof@plt+0x22234>
  426ad0:	ldr	w21, [x19]
  426ad4:	ldr	x8, [x23]
  426ad8:	ldr	w9, [x23, #8]
  426adc:	ldr	x0, [x20, #40]
  426ae0:	sub	w1, w8, w9
  426ae4:	bl	42a7ec <feof@plt+0x27e1c>
  426ae8:	ldr	x8, [x20, #40]
  426aec:	ldr	w1, [x19]
  426af0:	mov	w2, w21
  426af4:	bfi	x2, x0, #32, #32
  426af8:	mov	x0, x8
  426afc:	mov	x3, xzr
  426b00:	bl	42990c <feof@plt+0x26f3c>
  426b04:	str	w0, [x19]
  426b08:	mov	x0, x19
  426b0c:	ldp	x20, x19, [sp, #96]
  426b10:	ldp	x22, x21, [sp, #80]
  426b14:	ldp	x24, x23, [sp, #64]
  426b18:	ldp	x26, x25, [sp, #48]
  426b1c:	ldp	x28, x27, [sp, #32]
  426b20:	ldp	x29, x30, [sp, #16]
  426b24:	add	sp, sp, #0x70
  426b28:	ret
  426b2c:	add	x8, x8, #0x1
  426b30:	str	x8, [x23]
  426b34:	ldrh	w8, [x19, #6]
  426b38:	mov	w9, #0x2a                  	// #42
  426b3c:	b	426b50 <feof@plt+0x24180>
  426b40:	add	x8, x8, #0x1
  426b44:	str	x8, [x23]
  426b48:	ldrh	w8, [x19, #6]
  426b4c:	mov	w9, #0x29                  	// #41
  426b50:	orr	w8, w8, #0x2
  426b54:	strh	w8, [x19, #6]
  426b58:	strb	w9, [x19, #4]
  426b5c:	b	426a88 <feof@plt+0x240b8>
  426b60:	cmp	w28, #0x3d
  426b64:	b.ne	426b74 <feof@plt+0x241a4>  // b.any
  426b68:	add	x8, x21, #0x1
  426b6c:	mov	w9, #0x1e                  	// #30
  426b70:	b	4269fc <feof@plt+0x2402c>
  426b74:	mov	w8, #0x7                   	// #7
  426b78:	strb	w8, [x19, #4]
  426b7c:	b	426a88 <feof@plt+0x240b8>
  426b80:	tbz	w26, #0, 426b90 <feof@plt+0x241c0>
  426b84:	ldrh	w8, [x19, #6]
  426b88:	orr	w8, w8, #0x20
  426b8c:	strh	w8, [x19, #6]
  426b90:	ldr	x8, [x20]
  426b94:	ldrb	w10, [x20, #16]
  426b98:	mov	w11, #0x1                   	// #1
  426b9c:	cmp	w28, #0x2f
  426ba0:	ldr	x8, [x8]
  426ba4:	ldurb	w9, [x8, #-1]
  426ba8:	sub	w8, w8, w21
  426bac:	ldrh	w9, [x27, x9, lsl #1]
  426bb0:	bic	w9, w11, w9, lsr #10
  426bb4:	add	w25, w9, w8
  426bb8:	cbz	w10, 426bc8 <feof@plt+0x241f8>
  426bbc:	mov	w24, w25
  426bc0:	b.eq	426bd8 <feof@plt+0x24208>  // b.none
  426bc4:	b	426bdc <feof@plt+0x2420c>
  426bc8:	b.ne	426d34 <feof@plt+0x24364>  // b.any
  426bcc:	ldrb	w8, [x20, #25]
  426bd0:	mov	w24, w25
  426bd4:	cbz	w8, 426bdc <feof@plt+0x2420c>
  426bd8:	add	w24, w25, #0x2
  426bdc:	mov	w1, w24
  426be0:	mov	x0, x20
  426be4:	bl	428b3c <feof@plt+0x2616c>
  426be8:	mov	w8, #0x4f                  	// #79
  426bec:	mov	w9, #0x2f                  	// #47
  426bf0:	mov	x22, x0
  426bf4:	str	w24, [x19, #8]
  426bf8:	str	x0, [x19, #16]
  426bfc:	strb	w8, [x19, #4]
  426c00:	strb	w9, [x0], #1
  426c04:	sub	w2, w25, #0x1
  426c08:	mov	x1, x21
  426c0c:	bl	402390 <memcpy@plt>
  426c10:	ldrb	w8, [x20, #16]
  426c14:	cbz	w8, 426c24 <feof@plt+0x24254>
  426c18:	cmp	w28, #0x2f
  426c1c:	b.eq	426c34 <feof@plt+0x24264>  // b.none
  426c20:	b	426ca0 <feof@plt+0x242d0>
  426c24:	cmp	w28, #0x2f
  426c28:	b.ne	426ca0 <feof@plt+0x242d0>  // b.any
  426c2c:	ldrb	w8, [x20, #25]
  426c30:	cbz	w8, 426ca0 <feof@plt+0x242d0>
  426c34:	sub	w9, w24, #0x2
  426c38:	mov	w8, #0x2a                  	// #42
  426c3c:	sub	w10, w24, #0x1
  426c40:	mov	w11, #0x2f                  	// #47
  426c44:	cmp	w9, #0x3
  426c48:	strb	w8, [x22, #1]
  426c4c:	strb	w8, [x22, x9]
  426c50:	strb	w11, [x22, w10, uxtw]
  426c54:	b.cc	426ca0 <feof@plt+0x242d0>  // b.lo, b.ul, b.last
  426c58:	add	x8, x22, #0x3
  426c5c:	sub	x9, x9, #0x2
  426c60:	mov	w10, #0x7c                  	// #124
  426c64:	b	426c78 <feof@plt+0x242a8>
  426c68:	sturb	w10, [x8, #-1]
  426c6c:	subs	x9, x9, #0x1
  426c70:	add	x8, x8, #0x1
  426c74:	b.eq	426ca0 <feof@plt+0x242d0>  // b.none
  426c78:	ldurb	w11, [x8, #-1]
  426c7c:	cmp	w11, #0x2f
  426c80:	b.ne	426c6c <feof@plt+0x2429c>  // b.any
  426c84:	ldurb	w11, [x8, #-2]
  426c88:	cmp	w11, #0x2a
  426c8c:	b.eq	426c68 <feof@plt+0x24298>  // b.none
  426c90:	ldrb	w11, [x8]
  426c94:	cmp	w11, #0x2a
  426c98:	b.eq	426c68 <feof@plt+0x24298>  // b.none
  426c9c:	b	426c6c <feof@plt+0x2429c>
  426ca0:	ldr	w8, [x20, #1396]
  426ca4:	cbnz	w8, 426cc0 <feof@plt+0x242f0>
  426ca8:	mov	w8, #0x100                 	// #256
  426cac:	mov	w0, #0x1000                	// #4096
  426cb0:	str	w8, [x20, #1396]
  426cb4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  426cb8:	ldr	w8, [x20, #1396]
  426cbc:	str	x0, [x20, #1384]
  426cc0:	ldr	w9, [x20, #1392]
  426cc4:	cmp	w9, w8
  426cc8:	b.ne	426ce4 <feof@plt+0x24314>  // b.any
  426ccc:	ldr	x0, [x20, #1384]
  426cd0:	lsl	w8, w8, #1
  426cd4:	sbfiz	x1, x8, #4, #32
  426cd8:	str	w8, [x20, #1396]
  426cdc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  426ce0:	str	x0, [x20, #1384]
  426ce4:	ldrsw	x21, [x19, #8]
  426ce8:	add	x0, x21, #0x1
  426cec:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  426cf0:	ldrsw	x8, [x20, #1392]
  426cf4:	ldr	x22, [x20, #1384]
  426cf8:	mov	x2, x21
  426cfc:	lsl	x24, x8, #4
  426d00:	str	x0, [x22, x24]
  426d04:	ldr	x1, [x19, #16]
  426d08:	bl	402390 <memcpy@plt>
  426d0c:	ldr	x8, [x22, x24]
  426d10:	strb	wzr, [x8, x21]
  426d14:	ldr	x8, [x20, #1384]
  426d18:	ldrsw	x9, [x20, #1392]
  426d1c:	ldr	w10, [x19]
  426d20:	add	x8, x8, x9, lsl #4
  426d24:	add	w9, w9, #0x1
  426d28:	str	w10, [x8, #8]
  426d2c:	str	w9, [x20, #1392]
  426d30:	b	426a88 <feof@plt+0x240b8>
  426d34:	mov	w24, w25
  426d38:	b	426bdc <feof@plt+0x2420c>
  426d3c:	stp	x29, x30, [sp, #-48]!
  426d40:	stp	x20, x19, [sp, #32]
  426d44:	ldrb	w8, [x0, #16]
  426d48:	str	x21, [sp, #16]
  426d4c:	mov	x29, sp
  426d50:	cbz	w8, 426d6c <feof@plt+0x2439c>
  426d54:	mov	w19, wzr
  426d58:	mov	w0, w19
  426d5c:	ldp	x20, x19, [sp, #32]
  426d60:	ldr	x21, [sp, #16]
  426d64:	ldp	x29, x30, [sp], #48
  426d68:	ret
  426d6c:	ldr	x8, [x0]
  426d70:	mov	x20, x0
  426d74:	ldrb	w9, [x8, #104]
  426d78:	cbz	w9, 426de4 <feof@plt+0x24414>
  426d7c:	ldr	x10, [x8, #16]
  426d80:	ldr	x9, [x8, #32]
  426d84:	cmp	x10, x9
  426d88:	b.cc	426dec <feof@plt+0x2441c>  // b.lo, b.ul, b.last
  426d8c:	ldrb	w11, [x20, #25]
  426d90:	cbnz	w11, 426d54 <feof@plt+0x24384>
  426d94:	ldrb	w21, [x8, #105]
  426d98:	cmp	x10, x9
  426d9c:	b.ls	426db4 <feof@plt+0x243e4>  // b.plast
  426da0:	ldr	x10, [x8, #24]
  426da4:	cmp	x10, x9
  426da8:	b.eq	426db4 <feof@plt+0x243e4>  // b.none
  426dac:	tbnz	w21, #1, 426db4 <feof@plt+0x243e4>
  426db0:	str	x9, [x8, #16]
  426db4:	mov	x0, x20
  426db8:	bl	41c0c4 <feof@plt+0x196f4>
  426dbc:	ldr	x8, [x20]
  426dc0:	cmp	x8, #0x0
  426dc4:	cset	w9, ne  // ne = any
  426dc8:	tst	w21, #0x4
  426dcc:	cset	w10, eq  // eq = none
  426dd0:	and	w9, w10, w9
  426dd4:	and	w19, w19, w9
  426dd8:	tbnz	w21, #2, 426d58 <feof@plt+0x24388>
  426ddc:	cbnz	x8, 426d74 <feof@plt+0x243a4>
  426de0:	b	426d58 <feof@plt+0x24388>
  426de4:	mov	w19, #0x1                   	// #1
  426de8:	b	426d58 <feof@plt+0x24388>
  426dec:	mov	x0, x20
  426df0:	bl	4246a8 <feof@plt+0x21cd8>
  426df4:	mov	w19, #0x1                   	// #1
  426df8:	b	426d58 <feof@plt+0x24388>
  426dfc:	stp	x29, x30, [sp, #-80]!
  426e00:	stp	x24, x23, [sp, #32]
  426e04:	stp	x22, x21, [sp, #48]
  426e08:	stp	x20, x19, [sp, #64]
  426e0c:	ldr	x8, [x0]
  426e10:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  426e14:	mov	x21, x2
  426e18:	mov	x19, x1
  426e1c:	ldr	x22, [x8]
  426e20:	mov	x20, x0
  426e24:	add	x23, x23, #0xa50
  426e28:	mov	w24, #0x204                 	// #516
  426e2c:	mov	x9, x22
  426e30:	str	x25, [sp, #16]
  426e34:	mov	x29, sp
  426e38:	mov	x10, x9
  426e3c:	b	426e54 <feof@plt+0x24484>
  426e40:	ldrb	w12, [x20, #1127]
  426e44:	cbz	w12, 426ec0 <feof@plt+0x244f0>
  426e48:	str	w11, [x21]
  426e4c:	strb	wzr, [x21, #4]
  426e50:	add	x10, x10, #0x1
  426e54:	ldrb	w11, [x10]
  426e58:	ldrh	w12, [x23, x11, lsl #1]
  426e5c:	cmp	x11, #0x2e
  426e60:	and	w12, w12, w24
  426e64:	b.eq	426e48 <feof@plt+0x24478>  // b.none
  426e68:	cbnz	w12, 426e48 <feof@plt+0x24478>
  426e6c:	cmp	w11, #0x2d
  426e70:	b.eq	426e90 <feof@plt+0x244c0>  // b.none
  426e74:	cmp	w11, #0x2b
  426e78:	b.eq	426e90 <feof@plt+0x244c0>  // b.none
  426e7c:	cmp	w11, #0x27
  426e80:	b.ne	426ec0 <feof@plt+0x244f0>  // b.any
  426e84:	ldrb	w12, [x20, #1166]
  426e88:	cbnz	w12, 426e48 <feof@plt+0x24478>
  426e8c:	b	426ec0 <feof@plt+0x244f0>
  426e90:	ldurb	w12, [x10, #-1]
  426e94:	cmp	w12, #0x64
  426e98:	b.gt	426eb0 <feof@plt+0x244e0>
  426e9c:	cmp	w12, #0x45
  426ea0:	b.eq	426e48 <feof@plt+0x24478>  // b.none
  426ea4:	cmp	w12, #0x50
  426ea8:	b.eq	426e40 <feof@plt+0x24470>  // b.none
  426eac:	b	426ec0 <feof@plt+0x244f0>
  426eb0:	cmp	w12, #0x65
  426eb4:	b.eq	426e48 <feof@plt+0x24478>  // b.none
  426eb8:	cmp	w12, #0x70
  426ebc:	b.eq	426e40 <feof@plt+0x24470>  // b.none
  426ec0:	mov	x25, x10
  426ec4:	cmp	x10, x9
  426ec8:	b.ls	426ee4 <feof@plt+0x24514>  // b.plast
  426ecc:	mov	x10, x25
  426ed0:	ldrb	w11, [x10, #-1]!
  426ed4:	cmp	w11, #0x27
  426ed8:	b.ne	426ee4 <feof@plt+0x24514>  // b.any
  426edc:	ldrb	w11, [x20, #1166]
  426ee0:	cbnz	w11, 426ec0 <feof@plt+0x244f0>
  426ee4:	mov	x0, x20
  426ee8:	mov	w1, wzr
  426eec:	mov	x2, x21
  426ef0:	str	x25, [x8]
  426ef4:	bl	4286a4 <feof@plt+0x25cd4>
  426ef8:	tbz	w0, #0, 426f08 <feof@plt+0x24538>
  426efc:	ldr	x8, [x20]
  426f00:	ldr	x9, [x8]
  426f04:	b	426e38 <feof@plt+0x24468>
  426f08:	sub	x21, x22, #0x1
  426f0c:	sub	w8, w25, w21
  426f10:	add	w1, w8, #0x1
  426f14:	mov	x0, x20
  426f18:	str	w8, [x19]
  426f1c:	bl	428b3c <feof@plt+0x2616c>
  426f20:	ldr	w2, [x19]
  426f24:	mov	x1, x21
  426f28:	mov	x20, x0
  426f2c:	bl	402390 <memcpy@plt>
  426f30:	ldr	w8, [x19]
  426f34:	ldr	x25, [sp, #16]
  426f38:	strb	wzr, [x20, x8]
  426f3c:	str	x20, [x19, #8]
  426f40:	ldp	x20, x19, [sp, #64]
  426f44:	ldp	x22, x21, [sp, #48]
  426f48:	ldp	x24, x23, [sp, #32]
  426f4c:	ldp	x29, x30, [sp], #80
  426f50:	ret
  426f54:	stp	x29, x30, [sp, #-48]!
  426f58:	stp	x22, x21, [sp, #16]
  426f5c:	stp	x20, x19, [sp, #32]
  426f60:	ldr	w8, [x0, #1192]
  426f64:	ldr	w9, [x2, #8]
  426f68:	mov	x29, sp
  426f6c:	cmp	w8, w9
  426f70:	b.ge	426f80 <feof@plt+0x245b0>  // b.tcont
  426f74:	ldrb	w8, [x0, #18]
  426f78:	mov	x19, x0
  426f7c:	cbz	w8, 426f90 <feof@plt+0x245c0>
  426f80:	ldp	x20, x19, [sp, #32]
  426f84:	ldp	x22, x21, [sp, #16]
  426f88:	ldp	x29, x30, [sp], #48
  426f8c:	ret
  426f90:	ldrb	w8, [x1, #4]
  426f94:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  426f98:	add	x9, x9, #0xdf8
  426f9c:	mov	x20, x2
  426fa0:	lsl	x8, x8, #4
  426fa4:	ldr	w8, [x9, x8]
  426fa8:	mov	x21, x1
  426fac:	cmp	w8, #0x1
  426fb0:	b.eq	426fc4 <feof@plt+0x245f4>  // b.none
  426fb4:	cmp	w8, #0x2
  426fb8:	b.ne	426fd8 <feof@plt+0x24608>  // b.any
  426fbc:	ldr	w8, [x21, #8]
  426fc0:	b	426fdc <feof@plt+0x2460c>
  426fc4:	ldr	x8, [x21, #8]
  426fc8:	ldr	w8, [x8, #8]
  426fcc:	add	w8, w8, w8, lsl #2
  426fd0:	lsl	w8, w8, #1
  426fd4:	b	426fdc <feof@plt+0x2460c>
  426fd8:	mov	w8, #0x6                   	// #6
  426fdc:	mov	w0, w8
  426fe0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  426fe4:	mov	x22, x0
  426fe8:	mov	x0, x19
  426fec:	mov	x1, x21
  426ff0:	mov	x2, x22
  426ff4:	mov	w3, wzr
  426ff8:	bl	428950 <feof@plt+0x25f80>
  426ffc:	ldr	w8, [x20, #8]
  427000:	ldr	w2, [x21]
  427004:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  427008:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0xca68>
  42700c:	add	x9, x9, #0x70a
  427010:	add	x10, x10, #0x6f4
  427014:	cmp	w8, #0x1
  427018:	sub	w5, w0, w22
  42701c:	csel	x4, x10, x9, eq  // eq = none
  427020:	mov	w1, #0x10                  	// #16
  427024:	mov	x0, x19
  427028:	mov	w3, wzr
  42702c:	mov	x6, x22
  427030:	bl	41e3c0 <feof@plt+0x1b9f0>
  427034:	mov	x0, x22
  427038:	ldp	x20, x19, [sp, #32]
  42703c:	ldp	x22, x21, [sp, #16]
  427040:	ldp	x29, x30, [sp], #48
  427044:	b	4024c0 <free@plt>
  427048:	sub	sp, sp, #0xf0
  42704c:	stp	x29, x30, [sp, #144]
  427050:	stp	x28, x27, [sp, #160]
  427054:	stp	x26, x25, [sp, #176]
  427058:	stp	x24, x23, [sp, #192]
  42705c:	stp	x22, x21, [sp, #208]
  427060:	stp	x20, x19, [sp, #224]
  427064:	mov	x8, x2
  427068:	ldrb	w9, [x8], #1
  42706c:	mov	x26, x2
  427070:	mov	x21, x1
  427074:	mov	x23, x0
  427078:	cmp	w9, #0x4c
  42707c:	add	x29, sp, #0x90
  427080:	b.eq	42709c <feof@plt+0x246cc>  // b.none
  427084:	cmp	w9, #0x75
  427088:	b.eq	4270a4 <feof@plt+0x246d4>  // b.none
  42708c:	cmp	w9, #0x55
  427090:	mov	x12, x8
  427094:	mov	w10, w9
  427098:	b.ne	4270c0 <feof@plt+0x246f0>  // b.any
  42709c:	ldrb	w10, [x26, #1]
  4270a0:	b	4270bc <feof@plt+0x246ec>
  4270a4:	ldrb	w10, [x26, #1]
  4270a8:	cmp	w10, #0x38
  4270ac:	b.ne	4270bc <feof@plt+0x246ec>  // b.any
  4270b0:	ldrb	w10, [x26, #2]
  4270b4:	add	x12, x26, #0x3
  4270b8:	b	4270c0 <feof@plt+0x246f0>
  4270bc:	add	x12, x26, #0x2
  4270c0:	cmp	w10, #0x22
  4270c4:	stur	x23, [x29, #-64]
  4270c8:	b.eq	427120 <feof@plt+0x24750>  // b.none
  4270cc:	cmp	w10, #0x27
  4270d0:	b.eq	427158 <feof@plt+0x24788>  // b.none
  4270d4:	cmp	w10, #0x52
  4270d8:	b.ne	427188 <feof@plt+0x247b8>  // b.any
  4270dc:	ldr	x10, [x23]
  4270e0:	cmp	w9, #0x4c
  4270e4:	str	x21, [sp, #40]
  4270e8:	ldr	x11, [x10, #48]
  4270ec:	ldr	w10, [x10, #56]
  4270f0:	add	x20, x11, x10, lsl #4
  4270f4:	b.eq	427198 <feof@plt+0x247c8>  // b.none
  4270f8:	cmp	w9, #0x55
  4270fc:	b.eq	4271a0 <feof@plt+0x247d0>  // b.none
  427100:	cmp	w9, #0x75
  427104:	b.ne	4271a8 <feof@plt+0x247d8>  // b.any
  427108:	ldrb	w8, [x8]
  42710c:	mov	w9, #0x40                  	// #64
  427110:	cmp	w8, #0x38
  427114:	mov	w8, #0x42                  	// #66
  427118:	csel	w8, w8, w9, eq  // eq = none
  42711c:	b	4271ac <feof@plt+0x247dc>
  427120:	cmp	w9, #0x4c
  427124:	b.eq	427f5c <feof@plt+0x2558c>  // b.none
  427128:	cmp	w9, #0x55
  42712c:	b.eq	427f6c <feof@plt+0x2559c>  // b.none
  427130:	cmp	w9, #0x75
  427134:	b.ne	427f7c <feof@plt+0x255ac>  // b.any
  427138:	ldrb	w8, [x8]
  42713c:	mov	w9, #0x40                  	// #64
  427140:	mov	w10, #0x42                  	// #66
  427144:	mov	w24, #0x22                  	// #34
  427148:	cmp	w8, #0x38
  42714c:	csel	w22, w10, w9, eq  // eq = none
  427150:	mov	w8, wzr
  427154:	b	427fb0 <feof@plt+0x255e0>
  427158:	cmp	w9, #0x4c
  42715c:	b.eq	427f8c <feof@plt+0x255bc>  // b.none
  427160:	cmp	w9, #0x55
  427164:	b.eq	427f94 <feof@plt+0x255c4>  // b.none
  427168:	cmp	w9, #0x75
  42716c:	b.ne	427f9c <feof@plt+0x255cc>  // b.any
  427170:	ldrb	w8, [x8]
  427174:	mov	w9, #0x3a                  	// #58
  427178:	mov	w10, #0x3c                  	// #60
  42717c:	cmp	w8, #0x38
  427180:	csel	w22, w10, w9, eq  // eq = none
  427184:	b	427fa0 <feof@plt+0x255d0>
  427188:	mov	w22, #0x44                  	// #68
  42718c:	mov	w24, #0x3e                  	// #62
  427190:	mov	w8, wzr
  427194:	b	427fb0 <feof@plt+0x255e0>
  427198:	mov	w8, #0x3f                  	// #63
  42719c:	b	4271ac <feof@plt+0x247dc>
  4271a0:	mov	w8, #0x41                  	// #65
  4271a4:	b	4271ac <feof@plt+0x247dc>
  4271a8:	mov	w8, #0x3e                  	// #62
  4271ac:	str	w8, [sp, #36]
  4271b0:	mov	x25, xzr
  4271b4:	mov	x22, xzr
  4271b8:	mov	x19, xzr
  4271bc:	mov	w8, wzr
  4271c0:	add	x27, x12, #0x1
  4271c4:	add	x28, x23, #0x48
  4271c8:	stur	xzr, [x29, #-48]
  4271cc:	str	wzr, [sp, #60]
  4271d0:	str	xzr, [sp, #48]
  4271d4:	stp	x27, x12, [sp, #8]
  4271d8:	str	x26, [sp, #24]
  4271dc:	stur	x28, [x29, #-56]
  4271e0:	ldr	x11, [sp, #48]
  4271e4:	mov	w9, w8
  4271e8:	mov	w8, w11
  4271ec:	mov	x24, x27
  4271f0:	str	x11, [sp, #48]
  4271f4:	str	x8, [sp, #64]
  4271f8:	sub	x20, x20, #0x10
  4271fc:	ldr	x8, [x20, #16]!
  427200:	cmp	x8, x24
  427204:	b.cc	4271fc <feof@plt+0x2482c>  // b.lo, b.ul, b.last
  427208:	stur	w9, [x29, #-68]
  42720c:	b.eq	427250 <feof@plt+0x24880>  // b.none
  427210:	mov	x27, x24
  427214:	ldrb	w21, [x27], #1
  427218:	cmp	x19, #0x10
  42721c:	b.ls	427a24 <feof@plt+0x25054>  // b.plast
  427220:	ldur	w8, [x29, #-68]
  427224:	cbnz	w8, 427aac <feof@plt+0x250dc>
  427228:	ldr	x8, [sp, #64]
  42722c:	mov	w9, wzr
  427230:	mov	x24, x27
  427234:	cmp	x19, x8
  427238:	b.ls	4271f8 <feof@plt+0x24828>  // b.plast
  42723c:	b	427a38 <feof@plt+0x25068>
  427240:	mov	x26, x24
  427244:	ldr	x8, [x20, #16]!
  427248:	cmp	x8, x24
  42724c:	b.ne	427210 <feof@plt+0x24840>  // b.any
  427250:	ldr	w21, [x20, #8]
  427254:	cbz	w21, 427244 <feof@plt+0x24874>
  427258:	cmp	w21, #0x5c
  42725c:	b.eq	427268 <feof@plt+0x24898>  // b.none
  427260:	cmp	w21, #0x20
  427264:	b.ne	4272b4 <feof@plt+0x248e4>  // b.any
  427268:	sub	x21, x24, x26
  42726c:	cbz	x25, 42731c <feof@plt+0x2494c>
  427270:	ldp	x0, x8, [x22, #16]
  427274:	sub	x28, x8, x0
  427278:	subs	x27, x21, x28
  42727c:	b.ls	427394 <feof@plt+0x249c4>  // b.plast
  427280:	mov	x1, x26
  427284:	mov	x2, x28
  427288:	bl	402390 <memcpy@plt>
  42728c:	ldr	x8, [x22, #16]
  427290:	mov	x0, x23
  427294:	mov	x1, x22
  427298:	mov	x2, x27
  42729c:	add	x8, x8, x28
  4272a0:	str	x8, [x22, #16]
  4272a4:	add	x26, x26, x28
  4272a8:	bl	429448 <feof@plt+0x26a78>
  4272ac:	mov	x22, x0
  4272b0:	b	427398 <feof@plt+0x249c8>
  4272b4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4272b8:	add	x8, x8, #0x788
  4272bc:	ldrb	w8, [x8, x21]
  4272c0:	cbz	w8, 42841c <feof@plt+0x25a4c>
  4272c4:	str	wzr, [x20, #8]
  4272c8:	ldrb	w8, [x23, #1125]
  4272cc:	cbz	w8, 427244 <feof@plt+0x24874>
  4272d0:	sub	x23, x24, x26
  4272d4:	cbz	x25, 4274fc <feof@plt+0x24b2c>
  4272d8:	ldp	x0, x8, [x22, #16]
  4272dc:	sub	x28, x8, x0
  4272e0:	subs	x27, x23, x28
  4272e4:	b.ls	427574 <feof@plt+0x24ba4>  // b.plast
  4272e8:	mov	x1, x26
  4272ec:	mov	x2, x28
  4272f0:	bl	402390 <memcpy@plt>
  4272f4:	ldr	x8, [x22, #16]
  4272f8:	ldur	x0, [x29, #-64]
  4272fc:	mov	x1, x22
  427300:	mov	x2, x27
  427304:	add	x8, x8, x28
  427308:	str	x8, [x22, #16]
  42730c:	add	x26, x26, x28
  427310:	bl	429448 <feof@plt+0x26a78>
  427314:	mov	x22, x0
  427318:	b	427578 <feof@plt+0x24ba8>
  42731c:	ldr	x25, [x28]
  427320:	cbz	x25, 4273a0 <feof@plt+0x249d0>
  427324:	ldr	x8, [x25, #24]
  427328:	ldr	x9, [x25, #8]
  42732c:	add	x10, x21, x21, lsl #1
  427330:	sub	x8, x8, x9
  427334:	mov	w9, #0x1f40                	// #8000
  427338:	cmp	x8, x21
  42733c:	add	x9, x9, x10, lsr #1
  427340:	b.cc	427354 <feof@plt+0x24984>  // b.lo, b.ul, b.last
  427344:	cmp	x8, x9
  427348:	b.hi	427354 <feof@plt+0x24984>  // b.pmore
  42734c:	mov	x8, x28
  427350:	b	42737c <feof@plt+0x249ac>
  427354:	mov	x8, x25
  427358:	ldr	x25, [x25]
  42735c:	cbz	x25, 4273a0 <feof@plt+0x249d0>
  427360:	ldr	x10, [x25, #24]
  427364:	ldr	x11, [x25, #8]
  427368:	sub	x10, x10, x11
  42736c:	cmp	x10, x21
  427370:	b.cc	427354 <feof@plt+0x24984>  // b.lo, b.ul, b.last
  427374:	cmp	x10, x9
  427378:	b.hi	427354 <feof@plt+0x24984>  // b.pmore
  42737c:	ldr	x9, [x25]
  427380:	str	x9, [x8]
  427384:	ldr	x8, [x25, #8]
  427388:	str	xzr, [x25]
  42738c:	str	x8, [x25, #16]
  427390:	b	4273c8 <feof@plt+0x249f8>
  427394:	mov	x27, x21
  427398:	ldur	x28, [x29, #-56]
  42739c:	b	4273d0 <feof@plt+0x24a00>
  4273a0:	mov	w8, #0x1f40                	// #8000
  4273a4:	cmp	x21, x8
  4273a8:	csel	x8, x21, x8, hi  // hi = pmore
  4273ac:	add	x8, x8, #0x7
  4273b0:	and	x22, x8, #0xfffffffffffffff8
  4273b4:	add	x0, x22, #0x20
  4273b8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4273bc:	add	x25, x0, x22
  4273c0:	stp	x0, x25, [x25, #16]
  4273c4:	stp	xzr, x0, [x25]
  4273c8:	mov	x27, x21
  4273cc:	mov	x22, x25
  4273d0:	ldr	x0, [x22, #16]
  4273d4:	mov	x1, x26
  4273d8:	mov	x2, x27
  4273dc:	bl	402390 <memcpy@plt>
  4273e0:	ldr	x8, [x22, #16]
  4273e4:	add	x8, x8, x27
  4273e8:	str	x8, [x22, #16]
  4273ec:	cbz	x25, 42741c <feof@plt+0x24a4c>
  4273f0:	ldr	x9, [x22, #24]
  4273f4:	ldur	x26, [x29, #-48]
  4273f8:	cmp	x9, x8
  4273fc:	b.ne	4274b0 <feof@plt+0x24ae0>  // b.any
  427400:	mov	w2, #0x1                   	// #1
  427404:	mov	x0, x23
  427408:	mov	x1, x22
  42740c:	str	x8, [x22, #16]
  427410:	bl	429448 <feof@plt+0x26a78>
  427414:	mov	x22, x0
  427418:	b	4274b0 <feof@plt+0x24ae0>
  42741c:	ldr	x25, [x28]
  427420:	ldur	x26, [x29, #-48]
  427424:	mov	w11, #0x1f41                	// #8001
  427428:	cbz	x25, 42746c <feof@plt+0x24a9c>
  42742c:	ldr	x8, [x25, #8]
  427430:	ldr	x9, [x25, #24]
  427434:	mvn	x8, x8
  427438:	add	x8, x9, x8
  42743c:	cmp	x8, x11
  427440:	b.cc	427494 <feof@plt+0x24ac4>  // b.lo, b.ul, b.last
  427444:	mov	x8, x25
  427448:	ldr	x25, [x25]
  42744c:	cbz	x25, 42746c <feof@plt+0x24a9c>
  427450:	ldr	x9, [x25, #8]
  427454:	ldr	x10, [x25, #24]
  427458:	mvn	x9, x9
  42745c:	add	x9, x10, x9
  427460:	cmp	x9, x11
  427464:	b.cs	427444 <feof@plt+0x24a74>  // b.hs, b.nlast
  427468:	b	427498 <feof@plt+0x24ac8>
  42746c:	mov	w0, #0x1f60                	// #8032
  427470:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  427474:	mov	w8, #0x1f40                	// #8000
  427478:	add	x25, x0, x8
  42747c:	str	x0, [x0, #8008]
  427480:	str	x0, [x0, #8016]
  427484:	str	x25, [x0, #8024]
  427488:	str	xzr, [x0, #8000]
  42748c:	mov	x22, x25
  427490:	b	4274b0 <feof@plt+0x24ae0>
  427494:	mov	x8, x28
  427498:	ldr	x9, [x25]
  42749c:	mov	x22, x25
  4274a0:	str	x9, [x8]
  4274a4:	ldr	x8, [x25, #8]
  4274a8:	str	xzr, [x25]
  4274ac:	str	x8, [x25, #16]
  4274b0:	ldr	x8, [x22, #16]
  4274b4:	mov	w9, #0x5c                  	// #92
  4274b8:	adrp	x10, 451000 <_obstack_memory_used@@Base+0xa68>
  4274bc:	add	x10, x10, #0xbc4
  4274c0:	strb	w9, [x8]
  4274c4:	ldr	x8, [x22, #16]
  4274c8:	add	x9, x21, x26
  4274cc:	cmp	x24, x10
  4274d0:	add	x21, x9, #0x1
  4274d4:	add	x8, x8, #0x1
  4274d8:	str	x8, [x22, #16]
  4274dc:	b.eq	4277b8 <feof@plt+0x24de8>  // b.none
  4274e0:	cmp	x19, #0x10
  4274e4:	b.hi	4277b8 <feof@plt+0x24de8>  // b.pmore
  4274e8:	mov	w8, #0x5c                  	// #92
  4274ec:	sub	x9, x29, #0x28
  4274f0:	strb	w8, [x9, x19]
  4274f4:	add	x19, x19, #0x1
  4274f8:	b	4277b8 <feof@plt+0x24de8>
  4274fc:	ldr	x25, [x28]
  427500:	cbz	x25, 427580 <feof@plt+0x24bb0>
  427504:	ldr	x8, [x25, #24]
  427508:	ldr	x9, [x25, #8]
  42750c:	add	x10, x23, x23, lsl #1
  427510:	sub	x8, x8, x9
  427514:	mov	w9, #0x1f40                	// #8000
  427518:	cmp	x8, x23
  42751c:	add	x9, x9, x10, lsr #1
  427520:	b.cc	427534 <feof@plt+0x24b64>  // b.lo, b.ul, b.last
  427524:	cmp	x8, x9
  427528:	b.hi	427534 <feof@plt+0x24b64>  // b.pmore
  42752c:	mov	x8, x28
  427530:	b	42755c <feof@plt+0x24b8c>
  427534:	mov	x8, x25
  427538:	ldr	x25, [x25]
  42753c:	cbz	x25, 427580 <feof@plt+0x24bb0>
  427540:	ldr	x10, [x25, #24]
  427544:	ldr	x11, [x25, #8]
  427548:	sub	x10, x10, x11
  42754c:	cmp	x10, x23
  427550:	b.cc	427534 <feof@plt+0x24b64>  // b.lo, b.ul, b.last
  427554:	cmp	x10, x9
  427558:	b.hi	427534 <feof@plt+0x24b64>  // b.pmore
  42755c:	ldr	x9, [x25]
  427560:	str	x9, [x8]
  427564:	ldr	x8, [x25, #8]
  427568:	str	xzr, [x25]
  42756c:	str	x8, [x25, #16]
  427570:	b	4275a8 <feof@plt+0x24bd8>
  427574:	mov	x27, x23
  427578:	ldur	x28, [x29, #-56]
  42757c:	b	4275b0 <feof@plt+0x24be0>
  427580:	mov	w8, #0x1f40                	// #8000
  427584:	cmp	x23, x8
  427588:	csel	x8, x23, x8, hi  // hi = pmore
  42758c:	add	x8, x8, #0x7
  427590:	and	x22, x8, #0xfffffffffffffff8
  427594:	add	x0, x22, #0x20
  427598:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42759c:	add	x25, x0, x22
  4275a0:	stp	x0, x25, [x25, #16]
  4275a4:	stp	xzr, x0, [x25]
  4275a8:	mov	x27, x23
  4275ac:	mov	x22, x25
  4275b0:	ldr	x0, [x22, #16]
  4275b4:	mov	x1, x26
  4275b8:	mov	x2, x27
  4275bc:	bl	402390 <memcpy@plt>
  4275c0:	ldr	x8, [x22, #16]
  4275c4:	add	x0, x8, x27
  4275c8:	str	x0, [x22, #16]
  4275cc:	cbz	x25, 427624 <feof@plt+0x24c54>
  4275d0:	ldr	x8, [x22, #24]
  4275d4:	sub	x26, x8, x0
  4275d8:	cmp	x26, #0x1
  4275dc:	b.hi	427674 <feof@plt+0x24ca4>  // b.pmore
  4275e0:	adrp	x27, 451000 <_obstack_memory_used@@Base+0xa68>
  4275e4:	add	x27, x27, #0xb47
  4275e8:	mov	x1, x27
  4275ec:	mov	x2, x26
  4275f0:	bl	402390 <memcpy@plt>
  4275f4:	ldr	x8, [x22, #16]
  4275f8:	ldur	x0, [x29, #-64]
  4275fc:	add	x28, x27, x26
  427600:	mov	x1, x22
  427604:	add	x8, x8, x26
  427608:	str	x8, [x22, #16]
  42760c:	mov	w8, #0x2                   	// #2
  427610:	sub	x26, x8, x26
  427614:	mov	x2, x26
  427618:	bl	429448 <feof@plt+0x26a78>
  42761c:	mov	x22, x0
  427620:	b	4276cc <feof@plt+0x24cfc>
  427624:	ldr	x25, [x28]
  427628:	cbz	x25, 42767c <feof@plt+0x24cac>
  42762c:	ldr	x8, [x25, #24]
  427630:	ldr	x9, [x25, #8]
  427634:	sub	x8, x8, x9
  427638:	sub	x8, x8, #0x2
  42763c:	lsr	x8, x8, #1
  427640:	cmp	x8, #0xfa1
  427644:	b.cc	4276a0 <feof@plt+0x24cd0>  // b.lo, b.ul, b.last
  427648:	mov	x8, x25
  42764c:	ldr	x25, [x25]
  427650:	cbz	x25, 42767c <feof@plt+0x24cac>
  427654:	ldr	x9, [x25, #24]
  427658:	ldr	x10, [x25, #8]
  42765c:	sub	x9, x9, x10
  427660:	sub	x9, x9, #0x2
  427664:	lsr	x9, x9, #1
  427668:	cmp	x9, #0xfa1
  42766c:	b.cs	427648 <feof@plt+0x24c78>  // b.hs, b.nlast
  427670:	b	4276a4 <feof@plt+0x24cd4>
  427674:	mov	w26, #0x2                   	// #2
  427678:	b	4276c0 <feof@plt+0x24cf0>
  42767c:	mov	w0, #0x1f60                	// #8032
  427680:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  427684:	mov	w8, #0x1f40                	// #8000
  427688:	add	x25, x0, x8
  42768c:	str	x0, [x0, #8008]
  427690:	str	x0, [x0, #8016]
  427694:	str	xzr, [x0, #8000]
  427698:	str	x25, [x0, #8024]
  42769c:	b	4276b8 <feof@plt+0x24ce8>
  4276a0:	mov	x8, x28
  4276a4:	ldr	x9, [x25]
  4276a8:	str	x9, [x8]
  4276ac:	ldr	x8, [x25, #8]
  4276b0:	str	xzr, [x25]
  4276b4:	str	x8, [x25, #16]
  4276b8:	mov	w26, #0x2                   	// #2
  4276bc:	mov	x22, x25
  4276c0:	adrp	x27, 451000 <_obstack_memory_used@@Base+0xa68>
  4276c4:	add	x27, x27, #0xb47
  4276c8:	mov	x28, x27
  4276cc:	ldr	x0, [x22, #16]
  4276d0:	mov	x1, x28
  4276d4:	mov	x2, x26
  4276d8:	bl	402390 <memcpy@plt>
  4276dc:	ldr	x8, [x22, #16]
  4276e0:	cmp	x24, x27
  4276e4:	add	x8, x8, x26
  4276e8:	str	x8, [x22, #16]
  4276ec:	b.eq	427710 <feof@plt+0x24d40>  // b.none
  4276f0:	ldp	x28, x10, [x29, #-56]
  4276f4:	cmp	x19, #0x10
  4276f8:	b.hi	427714 <feof@plt+0x24d44>  // b.pmore
  4276fc:	sub	x8, x29, #0x28
  427700:	mov	w9, #0x3f3f                	// #16191
  427704:	strh	w9, [x8, x19]
  427708:	add	x19, x19, #0x2
  42770c:	b	427714 <feof@plt+0x24d44>
  427710:	ldp	x28, x10, [x29, #-56]
  427714:	and	w8, w21, #0xff
  427718:	cmp	w8, #0x2f
  42771c:	add	x23, x10, x23
  427720:	b.ne	4279c4 <feof@plt+0x24ff4>  // b.any
  427724:	ldr	x8, [x20, #16]
  427728:	cmp	x8, x24
  42772c:	b.ne	4279c4 <feof@plt+0x24ff4>  // b.any
  427730:	ldr	w8, [x20, #24]
  427734:	cmp	w8, #0x20
  427738:	b.eq	427744 <feof@plt+0x24d74>  // b.none
  42773c:	cmp	w8, #0x5c
  427740:	b.ne	428434 <feof@plt+0x25a64>  // b.any
  427744:	ldp	x8, x9, [x22, #16]
  427748:	cmp	x9, x8
  42774c:	b.ne	427768 <feof@plt+0x24d98>  // b.any
  427750:	ldur	x0, [x29, #-64]
  427754:	mov	w2, #0x1                   	// #1
  427758:	mov	x1, x22
  42775c:	bl	429448 <feof@plt+0x26a78>
  427760:	ldr	x8, [x0, #16]
  427764:	mov	x22, x0
  427768:	mov	w9, #0x2f                  	// #47
  42776c:	strb	w9, [x8]
  427770:	ldr	x8, [x22, #16]
  427774:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  427778:	add	x9, x9, #0xb59
  42777c:	cmp	x24, x9
  427780:	add	x8, x8, #0x1
  427784:	add	x21, x23, #0x3
  427788:	str	x8, [x22, #16]
  42778c:	b.eq	4277b0 <feof@plt+0x24de0>  // b.none
  427790:	ldur	x23, [x29, #-64]
  427794:	cmp	x19, #0x10
  427798:	b.hi	4277b4 <feof@plt+0x24de4>  // b.pmore
  42779c:	sub	x8, x29, #0x28
  4277a0:	mov	w9, #0x2f                  	// #47
  4277a4:	strb	w9, [x8, x19]
  4277a8:	add	x19, x19, #0x1
  4277ac:	b	4277b4 <feof@plt+0x24de4>
  4277b0:	ldur	x23, [x29, #-64]
  4277b4:	add	x20, x20, #0x10
  4277b8:	ldr	w8, [x20, #8]
  4277bc:	cmp	w8, #0x20
  4277c0:	b.ne	4278c0 <feof@plt+0x24ef0>  // b.any
  4277c4:	cbz	x25, 4277ec <feof@plt+0x24e1c>
  4277c8:	ldp	x9, x8, [x22, #16]
  4277cc:	cmp	x8, x9
  4277d0:	b.ne	42787c <feof@plt+0x24eac>  // b.any
  4277d4:	mov	w2, #0x1                   	// #1
  4277d8:	mov	x0, x23
  4277dc:	mov	x1, x22
  4277e0:	bl	429448 <feof@plt+0x26a78>
  4277e4:	mov	x22, x0
  4277e8:	b	42787c <feof@plt+0x24eac>
  4277ec:	ldr	x25, [x28]
  4277f0:	mov	w11, #0x1f41                	// #8001
  4277f4:	cbz	x25, 427838 <feof@plt+0x24e68>
  4277f8:	ldr	x8, [x25, #8]
  4277fc:	ldr	x9, [x25, #24]
  427800:	mvn	x8, x8
  427804:	add	x8, x9, x8
  427808:	cmp	x8, x11
  42780c:	b.cc	427860 <feof@plt+0x24e90>  // b.lo, b.ul, b.last
  427810:	mov	x8, x25
  427814:	ldr	x25, [x25]
  427818:	cbz	x25, 427838 <feof@plt+0x24e68>
  42781c:	ldr	x9, [x25, #8]
  427820:	ldr	x10, [x25, #24]
  427824:	mvn	x9, x9
  427828:	add	x9, x10, x9
  42782c:	cmp	x9, x11
  427830:	b.cs	427810 <feof@plt+0x24e40>  // b.hs, b.nlast
  427834:	b	427864 <feof@plt+0x24e94>
  427838:	mov	w0, #0x1f60                	// #8032
  42783c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  427840:	mov	w8, #0x1f40                	// #8000
  427844:	add	x25, x0, x8
  427848:	str	x0, [x0, #8008]
  42784c:	str	x0, [x0, #8016]
  427850:	str	x25, [x0, #8024]
  427854:	str	xzr, [x0, #8000]
  427858:	mov	x22, x25
  42785c:	b	42787c <feof@plt+0x24eac>
  427860:	mov	x8, x28
  427864:	ldr	x9, [x25]
  427868:	mov	x22, x25
  42786c:	str	x9, [x8]
  427870:	ldr	x8, [x25, #8]
  427874:	str	xzr, [x25]
  427878:	str	x8, [x25, #16]
  42787c:	ldr	x8, [x22, #16]
  427880:	mov	w9, #0x20                  	// #32
  427884:	add	x21, x21, #0x1
  427888:	strb	w9, [x8]
  42788c:	ldr	x8, [x22, #16]
  427890:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  427894:	add	x9, x9, #0x62b
  427898:	cmp	x24, x9
  42789c:	add	x8, x8, #0x1
  4278a0:	str	x8, [x22, #16]
  4278a4:	b.eq	4278c0 <feof@plt+0x24ef0>  // b.none
  4278a8:	cmp	x19, #0x10
  4278ac:	b.hi	4278c0 <feof@plt+0x24ef0>  // b.pmore
  4278b0:	sub	x8, x29, #0x28
  4278b4:	mov	w9, #0x20                  	// #32
  4278b8:	strb	w9, [x8, x19]
  4278bc:	add	x19, x19, #0x1
  4278c0:	cbz	x25, 4278e8 <feof@plt+0x24f18>
  4278c4:	ldp	x9, x8, [x22, #16]
  4278c8:	cmp	x8, x9
  4278cc:	b.ne	427978 <feof@plt+0x24fa8>  // b.any
  4278d0:	mov	w2, #0x1                   	// #1
  4278d4:	mov	x0, x23
  4278d8:	mov	x1, x22
  4278dc:	bl	429448 <feof@plt+0x26a78>
  4278e0:	mov	x22, x0
  4278e4:	b	427978 <feof@plt+0x24fa8>
  4278e8:	ldr	x25, [x28]
  4278ec:	mov	w11, #0x1f41                	// #8001
  4278f0:	cbz	x25, 427934 <feof@plt+0x24f64>
  4278f4:	ldr	x8, [x25, #8]
  4278f8:	ldr	x9, [x25, #24]
  4278fc:	mvn	x8, x8
  427900:	add	x8, x9, x8
  427904:	cmp	x8, x11
  427908:	b.cc	42795c <feof@plt+0x24f8c>  // b.lo, b.ul, b.last
  42790c:	mov	x8, x25
  427910:	ldr	x25, [x25]
  427914:	cbz	x25, 427934 <feof@plt+0x24f64>
  427918:	ldr	x9, [x25, #8]
  42791c:	ldr	x10, [x25, #24]
  427920:	mvn	x9, x9
  427924:	add	x9, x10, x9
  427928:	cmp	x9, x11
  42792c:	b.cs	42790c <feof@plt+0x24f3c>  // b.hs, b.nlast
  427930:	b	427960 <feof@plt+0x24f90>
  427934:	mov	w0, #0x1f60                	// #8032
  427938:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42793c:	mov	w8, #0x1f40                	// #8000
  427940:	add	x25, x0, x8
  427944:	str	x0, [x0, #8008]
  427948:	str	x0, [x0, #8016]
  42794c:	str	x25, [x0, #8024]
  427950:	str	xzr, [x0, #8000]
  427954:	mov	x22, x25
  427958:	b	427978 <feof@plt+0x24fa8>
  42795c:	mov	x8, x28
  427960:	ldr	x9, [x25]
  427964:	mov	x22, x25
  427968:	str	x9, [x8]
  42796c:	ldr	x8, [x25, #8]
  427970:	str	xzr, [x25]
  427974:	str	x8, [x25, #16]
  427978:	ldr	x8, [x22, #16]
  42797c:	mov	w9, #0xa                   	// #10
  427980:	strb	w9, [x8]
  427984:	ldr	x8, [x22, #16]
  427988:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  42798c:	add	x9, x9, #0xb33
  427990:	cmp	x24, x9
  427994:	add	x8, x8, #0x1
  427998:	str	x8, [x22, #16]
  42799c:	add	x8, x21, #0x1
  4279a0:	stur	x8, [x29, #-48]
  4279a4:	b.eq	427240 <feof@plt+0x24870>  // b.none
  4279a8:	cmp	x19, #0x10
  4279ac:	b.hi	427240 <feof@plt+0x24870>  // b.pmore
  4279b0:	sub	x8, x29, #0x28
  4279b4:	mov	w9, #0xa                   	// #10
  4279b8:	strb	w9, [x8, x19]
  4279bc:	add	x19, x19, #0x1
  4279c0:	b	427240 <feof@plt+0x24870>
  4279c4:	ldp	x8, x9, [x22, #16]
  4279c8:	add	x27, x24, #0x1
  4279cc:	cmp	x9, x8
  4279d0:	b.ne	4279ec <feof@plt+0x2501c>  // b.any
  4279d4:	ldur	x0, [x29, #-64]
  4279d8:	mov	w2, #0x1                   	// #1
  4279dc:	mov	x1, x22
  4279e0:	bl	429448 <feof@plt+0x26a78>
  4279e4:	ldr	x8, [x0, #16]
  4279e8:	mov	x22, x0
  4279ec:	strb	w21, [x8]
  4279f0:	ldr	x8, [x22, #16]
  4279f4:	cmp	x19, #0x10
  4279f8:	add	x8, x8, #0x1
  4279fc:	str	x8, [x22, #16]
  427a00:	add	x8, x23, #0x3
  427a04:	stur	x8, [x29, #-48]
  427a08:	b.hi	427a18 <feof@plt+0x25048>  // b.pmore
  427a0c:	sub	x8, x29, #0x28
  427a10:	strb	w21, [x8, x19]
  427a14:	add	x19, x19, #0x1
  427a18:	ldur	x23, [x29, #-64]
  427a1c:	mov	x26, x27
  427a20:	b	427220 <feof@plt+0x24850>
  427a24:	add	x8, x19, #0x1
  427a28:	sub	x9, x29, #0x28
  427a2c:	strb	w21, [x9, x19]
  427a30:	mov	x19, x8
  427a34:	b	427220 <feof@plt+0x24850>
  427a38:	ldr	x11, [sp, #64]
  427a3c:	adrp	x13, 45c000 <_obstack_memory_used@@Base+0xba68>
  427a40:	sub	x12, x29, #0x14
  427a44:	add	x13, x13, #0xd4c
  427a48:	sub	x8, x29, #0x28
  427a4c:	ldrb	w5, [x8, x11]
  427a50:	sub	w8, w5, #0x21
  427a54:	cmp	w8, #0x5d
  427a58:	strb	w5, [x12, x11]
  427a5c:	b.hi	427a90 <feof@plt+0x250c0>  // b.pmore
  427a60:	adr	x9, 427a70 <feof@plt+0x250a0>
  427a64:	ldrb	w10, [x13, x8]
  427a68:	add	x9, x9, x10, lsl #2
  427a6c:	br	x9
  427a70:	cmp	x11, #0xf
  427a74:	b.hi	427a90 <feof@plt+0x250c0>  // b.pmore
  427a78:	add	x11, x11, #0x1
  427a7c:	cmp	x19, x11
  427a80:	b.ne	427a48 <feof@plt+0x25078>  // b.any
  427a84:	mov	w9, wzr
  427a88:	mov	x11, x19
  427a8c:	b	4271e8 <feof@plt+0x24818>
  427a90:	cmp	w5, #0x28
  427a94:	b.ne	4282c8 <feof@plt+0x258f8>  // b.any
  427a98:	mov	w8, #0x22                  	// #34
  427a9c:	strb	w8, [x12, x11]
  427aa0:	mov	w9, #0x1                   	// #1
  427aa4:	mov	w19, #0x11                  	// #17
  427aa8:	b	4271e8 <feof@plt+0x24818>
  427aac:	cmp	w8, #0x2
  427ab0:	b.ne	427b00 <feof@plt+0x25130>  // b.any
  427ab4:	ldr	x8, [sp, #48]
  427ab8:	ldr	w9, [sp, #60]
  427abc:	cmp	w9, w8
  427ac0:	mov	w8, w9
  427ac4:	b.hi	427dcc <feof@plt+0x253fc>  // b.pmore
  427ac8:	str	w8, [sp, #60]
  427acc:	mov	w8, w8
  427ad0:	cmp	x19, x8
  427ad4:	b.ls	427b08 <feof@plt+0x25138>  // b.plast
  427ad8:	sub	x9, x29, #0x28
  427adc:	sub	x10, x29, #0x14
  427ae0:	ldrb	w9, [x9, x8]
  427ae4:	ldrb	w8, [x10, x8]
  427ae8:	cmp	w9, w8
  427aec:	b.ne	427b08 <feof@plt+0x25138>  // b.any
  427af0:	ldr	w9, [sp, #60]
  427af4:	ldr	x8, [sp, #48]
  427af8:	add	w9, w9, #0x1
  427afc:	b	427abc <feof@plt+0x250ec>
  427b00:	mov	x10, x19
  427b04:	b	427b24 <feof@plt+0x25154>
  427b08:	mov	w8, #0x1                   	// #1
  427b0c:	stur	w8, [x29, #-68]
  427b10:	ldr	w8, [sp, #60]
  427b14:	cmp	x19, w8, uxtw
  427b18:	mov	w8, #0x2                   	// #2
  427b1c:	b.eq	4271e0 <feof@plt+0x24810>  // b.none
  427b20:	mov	w10, #0x11                  	// #17
  427b24:	ldr	w11, [sp, #60]
  427b28:	and	w9, w21, #0xff
  427b2c:	mov	x19, xzr
  427b30:	cmp	w9, #0x29
  427b34:	mov	w8, #0x2                   	// #2
  427b38:	str	wzr, [sp, #60]
  427b3c:	b.eq	4271e0 <feof@plt+0x24810>  // b.none
  427b40:	ldur	w8, [x29, #-68]
  427b44:	cmp	w9, #0xa
  427b48:	mov	x19, x10
  427b4c:	str	w11, [sp, #60]
  427b50:	b.ne	4271e0 <feof@plt+0x24810>  // b.any
  427b54:	ldrb	w8, [x23, #16]
  427b58:	cbnz	w8, 42836c <feof@plt+0x2599c>
  427b5c:	ldrb	w8, [x23, #25]
  427b60:	cbz	w8, 427b78 <feof@plt+0x251a8>
  427b64:	ldr	x8, [x23]
  427b68:	ldr	x9, [x8, #16]
  427b6c:	ldr	x8, [x8, #32]
  427b70:	cmp	x9, x8
  427b74:	b.cs	42836c <feof@plt+0x2599c>  // b.hs, b.nlast
  427b78:	sub	x19, x27, x26
  427b7c:	str	w11, [sp, #60]
  427b80:	str	x10, [sp, #64]
  427b84:	cbz	x25, 427bd0 <feof@plt+0x25200>
  427b88:	ldp	x0, x8, [x22, #16]
  427b8c:	ldur	w21, [x29, #-68]
  427b90:	sub	x28, x8, x0
  427b94:	subs	x27, x19, x28
  427b98:	b.ls	427c4c <feof@plt+0x2527c>  // b.plast
  427b9c:	mov	x1, x26
  427ba0:	mov	x2, x28
  427ba4:	bl	402390 <memcpy@plt>
  427ba8:	ldr	x8, [x22, #16]
  427bac:	mov	x0, x23
  427bb0:	mov	x1, x22
  427bb4:	mov	x2, x27
  427bb8:	add	x8, x8, x28
  427bbc:	str	x8, [x22, #16]
  427bc0:	add	x26, x26, x28
  427bc4:	bl	429448 <feof@plt+0x26a78>
  427bc8:	mov	x22, x0
  427bcc:	b	427c50 <feof@plt+0x25280>
  427bd0:	ldr	x25, [x28]
  427bd4:	ldur	w21, [x29, #-68]
  427bd8:	cbz	x25, 427c58 <feof@plt+0x25288>
  427bdc:	ldr	x8, [x25, #24]
  427be0:	ldr	x9, [x25, #8]
  427be4:	add	x10, x19, x19, lsl #1
  427be8:	sub	x8, x8, x9
  427bec:	mov	w9, #0x1f40                	// #8000
  427bf0:	cmp	x8, x19
  427bf4:	add	x9, x9, x10, lsr #1
  427bf8:	b.cc	427c0c <feof@plt+0x2523c>  // b.lo, b.ul, b.last
  427bfc:	cmp	x8, x9
  427c00:	b.hi	427c0c <feof@plt+0x2523c>  // b.pmore
  427c04:	mov	x8, x28
  427c08:	b	427c34 <feof@plt+0x25264>
  427c0c:	mov	x8, x25
  427c10:	ldr	x25, [x25]
  427c14:	cbz	x25, 427c58 <feof@plt+0x25288>
  427c18:	ldr	x10, [x25, #24]
  427c1c:	ldr	x11, [x25, #8]
  427c20:	sub	x10, x10, x11
  427c24:	cmp	x10, x19
  427c28:	b.cc	427c0c <feof@plt+0x2523c>  // b.lo, b.ul, b.last
  427c2c:	cmp	x10, x9
  427c30:	b.hi	427c0c <feof@plt+0x2523c>  // b.pmore
  427c34:	ldr	x9, [x25]
  427c38:	str	x9, [x8]
  427c3c:	ldr	x8, [x25, #8]
  427c40:	str	xzr, [x25]
  427c44:	str	x8, [x25, #16]
  427c48:	b	427c80 <feof@plt+0x252b0>
  427c4c:	mov	x27, x19
  427c50:	ldur	x28, [x29, #-56]
  427c54:	b	427c88 <feof@plt+0x252b8>
  427c58:	mov	w8, #0x1f40                	// #8000
  427c5c:	cmp	x19, x8
  427c60:	csel	x8, x19, x8, hi  // hi = pmore
  427c64:	add	x8, x8, #0x7
  427c68:	and	x20, x8, #0xfffffffffffffff8
  427c6c:	add	x0, x20, #0x20
  427c70:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  427c74:	add	x25, x0, x20
  427c78:	stp	x0, x25, [x25, #16]
  427c7c:	stp	xzr, x0, [x25]
  427c80:	mov	x27, x19
  427c84:	mov	x22, x25
  427c88:	ldr	x0, [x22, #16]
  427c8c:	mov	x1, x26
  427c90:	mov	x2, x27
  427c94:	bl	402390 <memcpy@plt>
  427c98:	ldr	x8, [x22, #16]
  427c9c:	add	x8, x8, x27
  427ca0:	str	x8, [x22, #16]
  427ca4:	ldr	x8, [x23]
  427ca8:	ldr	x9, [x8]
  427cac:	ldr	x10, [x8, #32]
  427cb0:	cmp	x9, x10
  427cb4:	b.cs	427cfc <feof@plt+0x2532c>  // b.hs, b.nlast
  427cb8:	ldr	x0, [x23, #40]
  427cbc:	mov	w10, #0x18                  	// #24
  427cc0:	mov	w2, wzr
  427cc4:	ldr	w8, [x0, #12]
  427cc8:	ldr	x9, [x0]
  427ccc:	sub	w8, w8, #0x1
  427cd0:	smaddl	x8, w8, w10, x9
  427cd4:	ldr	w9, [x0, #60]
  427cd8:	ldr	w10, [x8]
  427cdc:	ldrb	w11, [x8, #6]
  427ce0:	ldr	w8, [x8, #16]
  427ce4:	sub	w9, w9, w10
  427ce8:	lsr	w9, w9, w11
  427cec:	add	w8, w8, w9
  427cf0:	add	w1, w8, #0x1
  427cf4:	bl	42a5e8 <feof@plt+0x27c18>
  427cf8:	ldr	x8, [x23]
  427cfc:	mov	w9, #0x1                   	// #1
  427d00:	mov	x0, x23
  427d04:	mov	w1, wzr
  427d08:	strb	w9, [x8, #104]
  427d0c:	str	x24, [x8]
  427d10:	bl	424c04 <feof@plt+0x22234>
  427d14:	ldrb	w8, [x23, #16]
  427d18:	ldur	x24, [x29, #-48]
  427d1c:	cbnz	w8, 428268 <feof@plt+0x25898>
  427d20:	ldr	x8, [x23]
  427d24:	add	x24, x19, x24
  427d28:	ldrb	w9, [x8, #104]
  427d2c:	cbz	w9, 427da8 <feof@plt+0x253d8>
  427d30:	ldr	x10, [x8, #16]
  427d34:	ldr	x9, [x8, #32]
  427d38:	cmp	x10, x9
  427d3c:	b.cc	427d9c <feof@plt+0x253cc>  // b.lo, b.ul, b.last
  427d40:	ldrb	w11, [x23, #25]
  427d44:	cbnz	w11, 428268 <feof@plt+0x25898>
  427d48:	ldrb	w20, [x8, #105]
  427d4c:	cmp	x10, x9
  427d50:	b.ls	427d68 <feof@plt+0x25398>  // b.plast
  427d54:	ldr	x10, [x8, #24]
  427d58:	cmp	x10, x9
  427d5c:	b.eq	427d68 <feof@plt+0x25398>  // b.none
  427d60:	tbnz	w20, #1, 427d68 <feof@plt+0x25398>
  427d64:	str	x9, [x8, #16]
  427d68:	mov	x0, x23
  427d6c:	bl	41c0c4 <feof@plt+0x196f4>
  427d70:	ldr	x8, [x23]
  427d74:	cmp	x8, #0x0
  427d78:	cset	w9, ne  // ne = any
  427d7c:	tst	w20, #0x4
  427d80:	cset	w10, eq  // eq = none
  427d84:	and	w9, w10, w9
  427d88:	and	w19, w19, w9
  427d8c:	tbnz	w20, #2, 427d94 <feof@plt+0x253c4>
  427d90:	cbnz	x8, 427d28 <feof@plt+0x25358>
  427d94:	tbnz	w19, #0, 427da8 <feof@plt+0x253d8>
  427d98:	b	428268 <feof@plt+0x25898>
  427d9c:	mov	x0, x23
  427da0:	bl	4246a8 <feof@plt+0x21cd8>
  427da4:	ldr	x8, [x23]
  427da8:	ldr	x27, [x8]
  427dac:	ldr	x9, [x8, #48]
  427db0:	ldr	w8, [x8, #56]
  427db4:	ldr	x19, [sp, #64]
  427db8:	stur	x24, [x29, #-48]
  427dbc:	mov	x26, x27
  427dc0:	add	x20, x9, x8, lsl #4
  427dc4:	mov	w8, w21
  427dc8:	b	4271e0 <feof@plt+0x24810>
  427dcc:	ldr	w21, [sp, #36]
  427dd0:	mov	x24, x27
  427dd4:	ldrb	w8, [x23, #1161]
  427dd8:	cbz	w8, 427e90 <feof@plt+0x254c0>
  427ddc:	ldrb	w11, [x24]
  427de0:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x10a68>
  427de4:	add	x19, x19, #0xa50
  427de8:	cmp	x11, #0x5f
  427dec:	b.ne	427dfc <feof@plt+0x2542c>  // b.any
  427df0:	ldrb	w8, [x24, #1]
  427df4:	cmp	w8, #0x5f
  427df8:	b.ne	427e64 <feof@plt+0x25494>  // b.any
  427dfc:	ldrh	w8, [x19, x11, lsl #1]
  427e00:	tbz	w8, #9, 427e64 <feof@plt+0x25494>
  427e04:	mov	x8, x24
  427e08:	ldrb	w10, [x8, #1]!
  427e0c:	mov	w9, #0x204                 	// #516
  427e10:	sub	w11, w11, #0x71
  427e14:	ldrh	w12, [x19, x10, lsl #1]
  427e18:	tst	w12, w9
  427e1c:	b.eq	427e40 <feof@plt+0x25470>  // b.none
  427e20:	mov	w12, #0x43                  	// #67
  427e24:	mul	w11, w11, w12
  427e28:	add	w11, w11, w10, uxtb
  427e2c:	ldrb	w10, [x8, #1]!
  427e30:	sub	w11, w11, #0x71
  427e34:	ldrh	w13, [x19, x10, lsl #1]
  427e38:	tst	w13, w9
  427e3c:	b.ne	427e24 <feof@plt+0x25454>  // b.any
  427e40:	ldr	x0, [x23, #1088]
  427e44:	sub	x2, x8, x24
  427e48:	add	w3, w11, w2
  427e4c:	mov	x1, x24
  427e50:	mov	w4, wzr
  427e54:	bl	432480 <feof@plt+0x2fab0>
  427e58:	cbz	x0, 427e64 <feof@plt+0x25494>
  427e5c:	ldrb	w8, [x0, #18]
  427e60:	tbnz	w8, #1, 428308 <feof@plt+0x25938>
  427e64:	ldrb	w8, [x24]
  427e68:	ldrh	w8, [x19, x8, lsl #1]
  427e6c:	tbz	w8, #9, 427e90 <feof@plt+0x254c0>
  427e70:	mov	w0, w21
  427e74:	bl	41ef50 <feof@plt+0x1c580>
  427e78:	mov	w21, w0
  427e7c:	mov	w8, #0x204                 	// #516
  427e80:	ldrb	w9, [x24, #1]!
  427e84:	ldrh	w9, [x19, x9, lsl #1]
  427e88:	tst	w9, w8
  427e8c:	b.ne	427e80 <feof@plt+0x254b0>  // b.any
  427e90:	ldr	x8, [x23]
  427e94:	sub	x22, x24, x26
  427e98:	str	x24, [x8]
  427e9c:	cbz	x25, 427f24 <feof@plt+0x25554>
  427ea0:	ldur	x8, [x29, #-48]
  427ea4:	mov	x0, x23
  427ea8:	add	x19, x22, x8
  427eac:	add	x1, x19, #0x1
  427eb0:	bl	428b3c <feof@plt+0x2616c>
  427eb4:	ldr	x8, [sp, #40]
  427eb8:	mov	x20, x0
  427ebc:	str	w19, [x8, #8]
  427ec0:	mov	x19, x25
  427ec4:	strb	w21, [x8, #4]
  427ec8:	str	x0, [x8, #16]
  427ecc:	ldp	x1, x8, [x19, #8]
  427ed0:	mov	x0, x20
  427ed4:	sub	x2, x8, x1
  427ed8:	bl	402390 <memcpy@plt>
  427edc:	ldp	x9, x8, [x19, #8]
  427ee0:	ldr	x19, [x19]
  427ee4:	sub	x8, x8, x9
  427ee8:	add	x20, x20, x8
  427eec:	cbnz	x19, 427ecc <feof@plt+0x254fc>
  427ef0:	mov	x9, x25
  427ef4:	mov	x8, x9
  427ef8:	ldr	x9, [x9]
  427efc:	cbnz	x9, 427ef4 <feof@plt+0x25524>
  427f00:	ldr	x9, [x28]
  427f04:	mov	x0, x20
  427f08:	mov	x1, x26
  427f0c:	mov	x2, x22
  427f10:	str	x9, [x8]
  427f14:	str	x25, [x28]
  427f18:	bl	402390 <memcpy@plt>
  427f1c:	strb	wzr, [x20, x22]
  427f20:	b	428248 <feof@plt+0x25878>
  427f24:	add	w1, w22, #0x1
  427f28:	mov	x0, x23
  427f2c:	bl	428b3c <feof@plt+0x2616c>
  427f30:	and	x23, x22, #0xffffffff
  427f34:	mov	x1, x26
  427f38:	mov	x2, x23
  427f3c:	mov	x20, x0
  427f40:	bl	402390 <memcpy@plt>
  427f44:	ldr	x8, [sp, #40]
  427f48:	strb	wzr, [x20, x23]
  427f4c:	strb	w21, [x8, #4]
  427f50:	str	w22, [x8, #8]
  427f54:	str	x20, [x8, #16]
  427f58:	b	428248 <feof@plt+0x25878>
  427f5c:	mov	w22, #0x3f                  	// #63
  427f60:	mov	w24, #0x22                  	// #34
  427f64:	mov	w8, wzr
  427f68:	b	427fb0 <feof@plt+0x255e0>
  427f6c:	mov	w22, #0x41                  	// #65
  427f70:	mov	w24, #0x22                  	// #34
  427f74:	mov	w8, wzr
  427f78:	b	427fb0 <feof@plt+0x255e0>
  427f7c:	mov	w22, #0x3e                  	// #62
  427f80:	mov	w24, #0x22                  	// #34
  427f84:	mov	w8, wzr
  427f88:	b	427fb0 <feof@plt+0x255e0>
  427f8c:	mov	w22, #0x39                  	// #57
  427f90:	b	427fa0 <feof@plt+0x255d0>
  427f94:	mov	w22, #0x3b                  	// #59
  427f98:	b	427fa0 <feof@plt+0x255d0>
  427f9c:	mov	w22, #0x38                  	// #56
  427fa0:	mov	w24, #0x27                  	// #39
  427fa4:	mov	w8, wzr
  427fa8:	b	427fb0 <feof@plt+0x255e0>
  427fac:	add	x12, x23, #0x2
  427fb0:	mov	x23, x12
  427fb4:	ldrb	w9, [x12], #1
  427fb8:	cmp	w9, #0x5c
  427fbc:	b.ne	427fd8 <feof@plt+0x25608>  // b.any
  427fc0:	ldur	x10, [x29, #-64]
  427fc4:	ldrb	w10, [x10, #19]
  427fc8:	cbnz	w10, 427fd8 <feof@plt+0x25608>
  427fcc:	ldrb	w10, [x12]
  427fd0:	cmp	w10, #0xa
  427fd4:	b.ne	427fac <feof@plt+0x255dc>  // b.any
  427fd8:	cmp	w24, w9
  427fdc:	b.eq	427ff8 <feof@plt+0x25628>  // b.none
  427fe0:	cbz	w9, 427ff0 <feof@plt+0x25620>
  427fe4:	cmp	w9, #0xa
  427fe8:	b.ne	427fb0 <feof@plt+0x255e0>  // b.any
  427fec:	b	428024 <feof@plt+0x25654>
  427ff0:	mov	w8, #0x1                   	// #1
  427ff4:	b	427fb0 <feof@plt+0x255e0>
  427ff8:	mov	x23, x12
  427ffc:	tbz	w8, #0, 428040 <feof@plt+0x25670>
  428000:	ldur	x8, [x29, #-64]
  428004:	ldrb	w8, [x8, #18]
  428008:	cbnz	w8, 428040 <feof@plt+0x25670>
  42800c:	ldur	x0, [x29, #-64]
  428010:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428014:	add	x2, x2, #0x71f
  428018:	mov	w1, wzr
  42801c:	bl	41de04 <feof@plt+0x1b434>
  428020:	b	428040 <feof@plt+0x25670>
  428024:	cmp	w24, #0x3e
  428028:	b.ne	428038 <feof@plt+0x25668>  // b.any
  42802c:	mov	w8, #0x3                   	// #3
  428030:	strb	w8, [x21, #4]
  428034:	b	428248 <feof@plt+0x25878>
  428038:	mov	w22, #0x3d                  	// #61
  42803c:	tbnz	w8, #0, 428000 <feof@plt+0x25630>
  428040:	ldur	x19, [x29, #-64]
  428044:	cmp	w22, #0x3d
  428048:	b.ne	428070 <feof@plt+0x256a0>  // b.any
  42804c:	ldr	w8, [x19, #1116]
  428050:	cmp	w8, #0x15
  428054:	b.eq	428070 <feof@plt+0x256a0>  // b.none
  428058:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42805c:	add	x2, x2, #0x746
  428060:	mov	w1, #0x2                   	// #2
  428064:	mov	x0, x19
  428068:	mov	w3, w24
  42806c:	bl	41de04 <feof@plt+0x1b434>
  428070:	ldrb	w8, [x19, #1161]
  428074:	cbz	w8, 428140 <feof@plt+0x25770>
  428078:	ldrb	w12, [x23]
  42807c:	cmp	x12, #0x5f
  428080:	b.ne	428090 <feof@plt+0x256c0>  // b.any
  428084:	ldrb	w8, [x23, #1]
  428088:	cmp	w8, #0x5f
  42808c:	b.ne	428104 <feof@plt+0x25734>  // b.any
  428090:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  428094:	add	x9, x9, #0xa50
  428098:	ldrh	w8, [x9, x12, lsl #1]
  42809c:	tbz	w8, #9, 428104 <feof@plt+0x25734>
  4280a0:	mov	x8, x23
  4280a4:	ldrb	w11, [x8, #1]!
  4280a8:	mov	w10, #0x204                 	// #516
  4280ac:	sub	w12, w12, #0x71
  4280b0:	ldrh	w13, [x9, x11, lsl #1]
  4280b4:	tst	w13, w10
  4280b8:	b.eq	4280dc <feof@plt+0x2570c>  // b.none
  4280bc:	mov	w13, #0x43                  	// #67
  4280c0:	mul	w12, w12, w13
  4280c4:	add	w12, w12, w11, uxtb
  4280c8:	ldrb	w11, [x8, #1]!
  4280cc:	sub	w12, w12, #0x71
  4280d0:	ldrh	w14, [x9, x11, lsl #1]
  4280d4:	tst	w14, w10
  4280d8:	b.ne	4280c0 <feof@plt+0x256f0>  // b.any
  4280dc:	ldur	x9, [x29, #-64]
  4280e0:	sub	x2, x8, x23
  4280e4:	add	w3, w12, w2
  4280e8:	mov	x1, x23
  4280ec:	ldr	x0, [x9, #1088]
  4280f0:	mov	w4, wzr
  4280f4:	bl	432480 <feof@plt+0x2fab0>
  4280f8:	cbz	x0, 428104 <feof@plt+0x25734>
  4280fc:	ldrb	w8, [x0, #18]
  428100:	tbnz	w8, #1, 4281e0 <feof@plt+0x25810>
  428104:	ldrb	w8, [x23]
  428108:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x10a68>
  42810c:	add	x19, x19, #0xa50
  428110:	ldrh	w8, [x19, x8, lsl #1]
  428114:	tbz	w8, #9, 42820c <feof@plt+0x2583c>
  428118:	mov	w0, w22
  42811c:	bl	41ef78 <feof@plt+0x1c5a8>
  428120:	bl	41ef50 <feof@plt+0x1c580>
  428124:	mov	w22, w0
  428128:	mov	w8, #0x204                 	// #516
  42812c:	ldrb	w9, [x23, #1]!
  428130:	ldrh	w9, [x19, x9, lsl #1]
  428134:	tst	w9, w8
  428138:	b.ne	42812c <feof@plt+0x2575c>  // b.any
  42813c:	b	42820c <feof@plt+0x2583c>
  428140:	ldrb	w8, [x19, #1199]
  428144:	cbz	w8, 42820c <feof@plt+0x2583c>
  428148:	ldrb	w12, [x23]
  42814c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  428150:	add	x9, x9, #0xa50
  428154:	ldrh	w8, [x9, x12, lsl #1]
  428158:	tbz	w8, #9, 42820c <feof@plt+0x2583c>
  42815c:	mov	x8, x23
  428160:	ldrb	w11, [x8, #1]!
  428164:	mov	w10, #0x204                 	// #516
  428168:	sub	w12, w12, #0x71
  42816c:	ldrh	w13, [x9, x11, lsl #1]
  428170:	tst	w13, w10
  428174:	b.eq	428198 <feof@plt+0x257c8>  // b.none
  428178:	mov	w13, #0x43                  	// #67
  42817c:	mul	w12, w12, w13
  428180:	add	w12, w12, w11, uxtb
  428184:	ldrb	w11, [x8, #1]!
  428188:	sub	w12, w12, #0x71
  42818c:	ldrh	w14, [x9, x11, lsl #1]
  428190:	tst	w14, w10
  428194:	b.ne	42817c <feof@plt+0x257ac>  // b.any
  428198:	ldur	x9, [x29, #-64]
  42819c:	sub	x2, x8, x23
  4281a0:	add	w3, w12, w2
  4281a4:	mov	x1, x23
  4281a8:	ldr	x0, [x9, #1088]
  4281ac:	mov	w4, wzr
  4281b0:	bl	432480 <feof@plt+0x2fab0>
  4281b4:	cbz	x0, 42820c <feof@plt+0x2583c>
  4281b8:	ldrb	w8, [x0, #18]
  4281bc:	tbz	w8, #1, 42820c <feof@plt+0x2583c>
  4281c0:	ldur	x0, [x29, #-64]
  4281c4:	ldrb	w8, [x0, #18]
  4281c8:	cbnz	w8, 42820c <feof@plt+0x2583c>
  4281cc:	ldr	w2, [x21]
  4281d0:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  4281d4:	add	x4, x4, #0x7ba
  4281d8:	mov	w1, #0x17                  	// #23
  4281dc:	b	428204 <feof@plt+0x25834>
  4281e0:	ldur	x0, [x29, #-64]
  4281e4:	ldrb	w8, [x0, #1162]
  4281e8:	cbz	w8, 42820c <feof@plt+0x2583c>
  4281ec:	ldrb	w8, [x0, #18]
  4281f0:	cbnz	w8, 42820c <feof@plt+0x2583c>
  4281f4:	ldr	w2, [x21]
  4281f8:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  4281fc:	add	x4, x4, #0x767
  428200:	mov	w1, #0x13                  	// #19
  428204:	mov	w3, wzr
  428208:	bl	41e3c0 <feof@plt+0x1b9f0>
  42820c:	ldur	x0, [x29, #-64]
  428210:	sub	x19, x23, x26
  428214:	add	w1, w19, #0x1
  428218:	ldr	x8, [x0]
  42821c:	str	x23, [x8]
  428220:	bl	428b3c <feof@plt+0x2616c>
  428224:	and	x23, x19, #0xffffffff
  428228:	mov	x1, x26
  42822c:	mov	x2, x23
  428230:	mov	x20, x0
  428234:	bl	402390 <memcpy@plt>
  428238:	strb	wzr, [x20, x23]
  42823c:	strb	w22, [x21, #4]
  428240:	str	w19, [x21, #8]
  428244:	str	x20, [x21, #16]
  428248:	ldp	x20, x19, [sp, #224]
  42824c:	ldp	x22, x21, [sp, #208]
  428250:	ldp	x24, x23, [sp, #192]
  428254:	ldp	x26, x25, [sp, #176]
  428258:	ldp	x28, x27, [sp, #160]
  42825c:	ldp	x29, x30, [sp, #144]
  428260:	add	sp, sp, #0xf0
  428264:	ret
  428268:	ldr	x10, [sp, #40]
  42826c:	mov	w8, #0x16                  	// #22
  428270:	mov	w9, #0x40                  	// #64
  428274:	strb	w8, [x10, #4]
  428278:	ldr	x8, [x23, #40]
  42827c:	ldr	w2, [x10]
  428280:	ldr	w8, [x8, #60]
  428284:	strh	w9, [x10, #6]
  428288:	str	w8, [x10]
  42828c:	cbz	x25, 4282ac <feof@plt+0x258dc>
  428290:	mov	x9, x25
  428294:	mov	x8, x9
  428298:	ldr	x9, [x9]
  42829c:	cbnz	x9, 428294 <feof@plt+0x258c4>
  4282a0:	ldr	x9, [x28]
  4282a4:	str	x9, [x8]
  4282a8:	str	x25, [x28]
  4282ac:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  4282b0:	add	x4, x4, #0x888
  4282b4:	mov	w1, #0x3                   	// #3
  4282b8:	mov	x0, x23
  4282bc:	mov	w3, wzr
  4282c0:	bl	41e2c4 <feof@plt+0x1b8f4>
  4282c4:	b	428248 <feof@plt+0x25878>
  4282c8:	ldr	x8, [x23]
  4282cc:	cmp	w11, #0x10
  4282d0:	ldr	w8, [x8, #8]
  4282d4:	sub	w8, w27, w8
  4282d8:	add	w3, w8, #0x1
  4282dc:	b.ne	42833c <feof@plt+0x2596c>  // b.any
  4282e0:	ldr	x21, [sp, #40]
  4282e4:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  4282e8:	add	x4, x4, #0x801
  4282ec:	mov	w1, #0x3                   	// #3
  4282f0:	ldr	w2, [x21]
  4282f4:	mov	x0, x23
  4282f8:	bl	41e2c4 <feof@plt+0x1b8f4>
  4282fc:	ldp	x20, x24, [sp, #16]
  428300:	ldr	x19, [sp, #8]
  428304:	b	4283b4 <feof@plt+0x259e4>
  428308:	ldrb	w8, [x23, #1162]
  42830c:	cbz	w8, 427e90 <feof@plt+0x254c0>
  428310:	ldrb	w8, [x23, #18]
  428314:	cbnz	w8, 427e90 <feof@plt+0x254c0>
  428318:	ldr	x8, [sp, #40]
  42831c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  428320:	add	x4, x4, #0x767
  428324:	mov	w1, #0x13                  	// #19
  428328:	ldr	w2, [x8]
  42832c:	mov	x0, x23
  428330:	mov	w3, wzr
  428334:	bl	41e3c0 <feof@plt+0x1b9f0>
  428338:	b	427e90 <feof@plt+0x254c0>
  42833c:	ldr	x8, [sp, #40]
  428340:	ldp	x20, x24, [sp, #16]
  428344:	ldr	x19, [sp, #8]
  428348:	cmp	w5, #0xa
  42834c:	ldr	w2, [x8]
  428350:	b.ne	42839c <feof@plt+0x259cc>  // b.any
  428354:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  428358:	add	x4, x4, #0x830
  42835c:	mov	w1, #0x3                   	// #3
  428360:	mov	x0, x23
  428364:	bl	41e2c4 <feof@plt+0x1b8f4>
  428368:	b	4283b0 <feof@plt+0x259e0>
  42836c:	ldr	x8, [sp, #40]
  428370:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  428374:	add	x4, x4, #0x888
  428378:	mov	w1, #0x3                   	// #3
  42837c:	ldr	w2, [x8]
  428380:	mov	x0, x23
  428384:	mov	w3, wzr
  428388:	bl	41e2c4 <feof@plt+0x1b8f4>
  42838c:	mov	w21, #0x3d                  	// #61
  428390:	ldrb	w8, [x23, #1161]
  428394:	cbnz	w8, 427ddc <feof@plt+0x2540c>
  428398:	b	427e90 <feof@plt+0x254c0>
  42839c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  4283a0:	add	x4, x4, #0x859
  4283a4:	mov	w1, #0x3                   	// #3
  4283a8:	mov	x0, x23
  4283ac:	bl	41e2c4 <feof@plt+0x1b8f4>
  4283b0:	ldr	x21, [sp, #40]
  4283b4:	ldr	x8, [x23]
  4283b8:	eor	x9, x24, #0xffffffff
  4283bc:	add	x19, x9, x19
  4283c0:	add	w1, w19, #0x1
  4283c4:	mov	x0, x23
  4283c8:	str	x20, [x8]
  4283cc:	bl	428b3c <feof@plt+0x2616c>
  4283d0:	and	x22, x19, #0xffffffff
  4283d4:	mov	x1, x24
  4283d8:	mov	x2, x22
  4283dc:	mov	x20, x0
  4283e0:	bl	402390 <memcpy@plt>
  4283e4:	mov	w8, #0x3d                  	// #61
  4283e8:	strb	wzr, [x20, x22]
  4283ec:	str	w19, [x21, #8]
  4283f0:	strb	w8, [x21, #4]
  4283f4:	str	x20, [x21, #16]
  4283f8:	cbz	x25, 428248 <feof@plt+0x25878>
  4283fc:	mov	x9, x25
  428400:	mov	x8, x9
  428404:	ldr	x9, [x9]
  428408:	cbnz	x9, 428400 <feof@plt+0x25a30>
  42840c:	ldr	x9, [x28]
  428410:	str	x9, [x8]
  428414:	str	x25, [x28]
  428418:	b	428248 <feof@plt+0x25878>
  42841c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  428420:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428424:	add	x0, x0, #0x400
  428428:	add	x2, x2, #0x7f2
  42842c:	mov	w1, #0x6f0                 	// #1776
  428430:	bl	404ac4 <feof@plt+0x20f4>
  428434:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  428438:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42843c:	add	x0, x0, #0x400
  428440:	add	x2, x2, #0x7f2
  428444:	mov	w1, #0x6e1                 	// #1761
  428448:	bl	404ac4 <feof@plt+0x20f4>
  42844c:	stp	x29, x30, [sp, #-80]!
  428450:	stp	x24, x23, [sp, #32]
  428454:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  428458:	stp	x22, x21, [sp, #48]
  42845c:	stp	x20, x19, [sp, #64]
  428460:	mov	x20, x4
  428464:	mov	x22, x3
  428468:	mov	x21, x1
  42846c:	mov	x19, x0
  428470:	add	x23, x23, #0xa50
  428474:	str	x25, [sp, #16]
  428478:	mov	x29, sp
  42847c:	tbnz	w2, #0, 4284e8 <feof@plt+0x25b18>
  428480:	ldr	x8, [x19]
  428484:	ldrb	w12, [x21]
  428488:	mov	w9, #0x204                 	// #516
  42848c:	ldr	x24, [x8]
  428490:	sub	w25, w12, #0x71
  428494:	ldrb	w10, [x24]
  428498:	ldrh	w11, [x23, x10, lsl #1]
  42849c:	tst	w11, w9
  4284a0:	b.eq	4284c4 <feof@plt+0x25af4>  // b.none
  4284a4:	mov	w11, #0x43                  	// #67
  4284a8:	mul	w12, w25, w11
  4284ac:	add	w12, w12, w10, uxtb
  4284b0:	ldrb	w10, [x24, #1]!
  4284b4:	sub	w25, w12, #0x71
  4284b8:	ldrh	w13, [x23, x10, lsl #1]
  4284bc:	tst	w13, w9
  4284c0:	b.ne	4284a8 <feof@plt+0x25ad8>  // b.any
  4284c4:	ldurb	w9, [x24, #-1]
  4284c8:	mov	x0, x19
  4284cc:	mov	w1, wzr
  4284d0:	mov	x2, x22
  4284d4:	strb	wzr, [x22, #4]
  4284d8:	str	w9, [x22]
  4284dc:	str	x24, [x8]
  4284e0:	bl	4286a4 <feof@plt+0x25cd4>
  4284e4:	tbz	w0, #0, 42857c <feof@plt+0x25bac>
  4284e8:	mov	w24, #0x204                 	// #516
  4284ec:	b	428504 <feof@plt+0x25b34>
  4284f0:	mov	x0, x19
  4284f4:	mov	w1, wzr
  4284f8:	mov	x2, x22
  4284fc:	bl	4286a4 <feof@plt+0x25cd4>
  428500:	tbz	w0, #0, 428544 <feof@plt+0x25b74>
  428504:	ldr	x8, [x19]
  428508:	ldr	x10, [x8]
  42850c:	ldrb	w9, [x10]
  428510:	ldrh	w11, [x23, x9, lsl #1]
  428514:	tst	w11, w24
  428518:	b.eq	4284f0 <feof@plt+0x25b20>  // b.none
  42851c:	add	x10, x10, #0x1
  428520:	and	w9, w9, #0xff
  428524:	strb	wzr, [x22, #4]
  428528:	str	w9, [x22]
  42852c:	str	x10, [x8]
  428530:	ldrb	w9, [x10], #1
  428534:	ldrh	w11, [x23, x9, lsl #1]
  428538:	tst	w11, w24
  42853c:	b.ne	428520 <feof@plt+0x25b50>  // b.any
  428540:	b	4284f0 <feof@plt+0x25b20>
  428544:	ldr	x8, [x19]
  428548:	mov	x0, x19
  42854c:	mov	x1, x21
  428550:	ldr	x8, [x8]
  428554:	sub	x2, x8, x21
  428558:	bl	417f44 <feof@plt+0x15574>
  42855c:	ldr	x8, [x19]
  428560:	mov	x22, x0
  428564:	mov	x0, x19
  428568:	mov	x1, x21
  42856c:	ldr	w8, [x8]
  428570:	sub	w2, w8, w21
  428574:	bl	4245e4 <feof@plt+0x21c14>
  428578:	b	42859c <feof@plt+0x25bcc>
  42857c:	ldr	x0, [x19, #1088]
  428580:	sub	x8, x24, x21
  428584:	add	w3, w25, w8
  428588:	and	x2, x8, #0xffffffff
  42858c:	mov	w4, #0x1                   	// #1
  428590:	mov	x1, x21
  428594:	bl	432480 <feof@plt+0x2fab0>
  428598:	mov	x22, x0
  42859c:	str	x0, [x20]
  4285a0:	ldrh	w8, [x22, #18]
  4285a4:	tbz	w8, #4, 4285b0 <feof@plt+0x25be0>
  4285a8:	ldrb	w9, [x19, #18]
  4285ac:	cbz	w9, 4285cc <feof@plt+0x25bfc>
  4285b0:	mov	x0, x22
  4285b4:	ldp	x20, x19, [sp, #64]
  4285b8:	ldp	x22, x21, [sp, #48]
  4285bc:	ldp	x24, x23, [sp, #32]
  4285c0:	ldr	x25, [sp, #16]
  4285c4:	ldp	x29, x30, [sp], #80
  4285c8:	ret
  4285cc:	tbz	w8, #3, 4285f0 <feof@plt+0x25c20>
  4285d0:	ldrb	w8, [x19, #23]
  4285d4:	cbnz	w8, 4285f0 <feof@plt+0x25c20>
  4285d8:	ldr	x3, [x22]
  4285dc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  4285e0:	add	x2, x2, #0x541
  4285e4:	mov	w1, #0x3                   	// #3
  4285e8:	mov	x0, x19
  4285ec:	bl	41de04 <feof@plt+0x1b434>
  4285f0:	ldr	x8, [x19, #1272]
  4285f4:	cmp	x22, x8
  4285f8:	b.ne	42862c <feof@plt+0x25c5c>  // b.any
  4285fc:	ldrb	w8, [x19, #22]
  428600:	cbnz	w8, 42862c <feof@plt+0x25c5c>
  428604:	ldrb	w8, [x19, #1120]
  428608:	cbz	w8, 428618 <feof@plt+0x25c48>
  42860c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428610:	add	x2, x2, #0x55e
  428614:	b	428620 <feof@plt+0x25c50>
  428618:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42861c:	add	x2, x2, #0x5a5
  428620:	mov	w1, #0x2                   	// #2
  428624:	mov	x0, x19
  428628:	bl	41de04 <feof@plt+0x1b434>
  42862c:	ldr	x8, [x19, #1280]
  428630:	cmp	x22, x8
  428634:	b.ne	428680 <feof@plt+0x25cb0>  // b.any
  428638:	ldrb	w8, [x19, #1154]
  42863c:	cbz	w8, 428648 <feof@plt+0x25c78>
  428640:	ldrb	w8, [x19, #1167]
  428644:	cbz	w8, 42865c <feof@plt+0x25c8c>
  428648:	ldrb	w8, [x19, #22]
  42864c:	cbnz	w8, 428680 <feof@plt+0x25cb0>
  428650:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428654:	add	x2, x2, #0x644
  428658:	b	428674 <feof@plt+0x25ca4>
  42865c:	ldr	x8, [x19]
  428660:	cbz	x8, 42866c <feof@plt+0x25c9c>
  428664:	ldrb	w8, [x8, #106]
  428668:	cbnz	w8, 428680 <feof@plt+0x25cb0>
  42866c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428670:	add	x2, x2, #0x61c
  428674:	mov	w1, #0x2                   	// #2
  428678:	mov	x0, x19
  42867c:	bl	41de04 <feof@plt+0x1b434>
  428680:	ldrb	w8, [x22, #19]
  428684:	tbz	w8, #1, 4285b0 <feof@plt+0x25be0>
  428688:	ldr	x3, [x22]
  42868c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428690:	add	x2, x2, #0x5ea
  428694:	mov	w1, #0xf                   	// #15
  428698:	mov	x0, x19
  42869c:	bl	41df34 <feof@plt+0x1b564>
  4286a0:	b	4285b0 <feof@plt+0x25be0>
  4286a4:	stp	x29, x30, [sp, #-32]!
  4286a8:	str	x19, [sp, #16]
  4286ac:	ldr	x19, [x0]
  4286b0:	mov	x29, sp
  4286b4:	ldr	x8, [x19]
  4286b8:	ldrb	w9, [x8]
  4286bc:	cmp	w9, #0x24
  4286c0:	b.ne	4286fc <feof@plt+0x25d2c>  // b.any
  4286c4:	ldrb	w9, [x0, #1146]
  4286c8:	cbz	w9, 428758 <feof@plt+0x25d88>
  4286cc:	add	x8, x8, #0x1
  4286d0:	str	x8, [x19]
  4286d4:	ldrb	w8, [x0, #1148]
  4286d8:	cbz	w8, 428750 <feof@plt+0x25d80>
  4286dc:	ldrb	w8, [x0, #18]
  4286e0:	cbnz	w8, 428750 <feof@plt+0x25d80>
  4286e4:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x9a68>
  4286e8:	add	x2, x2, #0xfd2
  4286ec:	mov	w1, #0x2                   	// #2
  4286f0:	strb	wzr, [x0, #1148]
  4286f4:	bl	41de04 <feof@plt+0x1b434>
  4286f8:	b	428750 <feof@plt+0x25d80>
  4286fc:	ldrb	w10, [x0, #1147]
  428700:	cmp	w9, #0x5c
  428704:	ccmp	w10, #0x0, #0x4, eq  // eq = none
  428708:	b.eq	428758 <feof@plt+0x25d88>  // b.none
  42870c:	ldrb	w9, [x8, #1]
  428710:	orr	w9, w9, #0x20
  428714:	cmp	w9, #0x75
  428718:	b.ne	428758 <feof@plt+0x25d88>  // b.any
  42871c:	mov	x4, x2
  428720:	ldr	x2, [x19, #32]
  428724:	add	x8, x8, #0x2
  428728:	str	x8, [x19]
  42872c:	cmp	w1, #0x0
  428730:	mov	w8, #0x1                   	// #1
  428734:	cinc	w3, w8, eq  // eq = none
  428738:	add	x5, x29, #0x1c
  42873c:	mov	x1, x19
  428740:	mov	x6, xzr
  428744:	mov	x7, xzr
  428748:	bl	4167d0 <feof@plt+0x13e00>
  42874c:	tbz	w0, #0, 428768 <feof@plt+0x25d98>
  428750:	mov	w0, #0x1                   	// #1
  428754:	b	42875c <feof@plt+0x25d8c>
  428758:	mov	w0, wzr
  42875c:	ldr	x19, [sp, #16]
  428760:	ldp	x29, x30, [sp], #32
  428764:	ret
  428768:	ldr	x8, [x19]
  42876c:	mov	w0, wzr
  428770:	sub	x8, x8, #0x2
  428774:	str	x8, [x19]
  428778:	b	42875c <feof@plt+0x25d8c>
  42877c:	ldrb	w8, [x0, #4]
  428780:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  428784:	add	x9, x9, #0xdf8
  428788:	lsl	x8, x8, #4
  42878c:	ldr	w8, [x9, x8]
  428790:	cmp	w8, #0x1
  428794:	b.eq	4287a8 <feof@plt+0x25dd8>  // b.none
  428798:	cmp	w8, #0x2
  42879c:	b.ne	4287bc <feof@plt+0x25dec>  // b.any
  4287a0:	ldr	w0, [x0, #8]
  4287a4:	ret
  4287a8:	ldr	x8, [x0, #8]
  4287ac:	ldr	w8, [x8, #8]
  4287b0:	add	w8, w8, w8, lsl #2
  4287b4:	lsl	w0, w8, #1
  4287b8:	ret
  4287bc:	mov	w0, #0x6                   	// #6
  4287c0:	ret
  4287c4:	stp	x29, x30, [sp, #-48]!
  4287c8:	stp	x22, x21, [sp, #16]
  4287cc:	stp	x20, x19, [sp, #32]
  4287d0:	ldr	w8, [x1, #8]
  4287d4:	mov	x19, x0
  4287d8:	mov	x29, sp
  4287dc:	cbz	w8, 428828 <feof@plt+0x25e58>
  4287e0:	ldr	x21, [x1]
  4287e4:	mov	x20, x1
  4287e8:	mov	x22, xzr
  4287ec:	b	428804 <feof@plt+0x25e34>
  4287f0:	strb	w8, [x19], #1
  4287f4:	ldr	w8, [x20, #8]
  4287f8:	add	x22, x22, #0x1
  4287fc:	cmp	x22, x8
  428800:	b.cs	428828 <feof@plt+0x25e58>  // b.hs, b.nlast
  428804:	add	x1, x21, x22
  428808:	ldrsb	w8, [x1]
  42880c:	tbz	w8, #31, 4287f0 <feof@plt+0x25e20>
  428810:	mov	x0, x19
  428814:	bl	42883c <feof@plt+0x25e6c>
  428818:	add	x8, x22, x0
  42881c:	sub	x22, x8, #0x1
  428820:	add	x19, x19, #0xa
  428824:	b	4287f4 <feof@plt+0x25e24>
  428828:	mov	x0, x19
  42882c:	ldp	x20, x19, [sp, #32]
  428830:	ldp	x22, x21, [sp, #16]
  428834:	ldp	x29, x30, [sp], #48
  428838:	ret
  42883c:	stp	x29, x30, [sp, #-16]!
  428840:	ldrb	w9, [x1]
  428844:	mov	x29, sp
  428848:	tbnz	w9, #7, 428858 <feof@plt+0x25e88>
  42884c:	mov	x8, xzr
  428850:	and	x9, x9, #0x7f
  428854:	b	4288bc <feof@plt+0x25eec>
  428858:	mov	x8, xzr
  42885c:	mov	w10, w9
  428860:	mov	w11, w10
  428864:	lsl	w10, w10, #1
  428868:	sub	x8, x8, #0x1
  42886c:	tbnz	w11, #6, 428860 <feof@plt+0x25e90>
  428870:	mvn	x10, x8
  428874:	mov	w11, #0x3f                  	// #63
  428878:	lsr	x11, x11, x10
  42887c:	cmn	w8, #0x1
  428880:	and	x9, x11, x9
  428884:	b.eq	4288b8 <feof@plt+0x25ee8>  // b.none
  428888:	add	x11, x1, #0x1
  42888c:	ldrb	w12, [x11]
  428890:	and	w13, w12, #0xc0
  428894:	cmp	w13, #0x80
  428898:	b.ne	428938 <feof@plt+0x25f68>  // b.any
  42889c:	bfi	x12, x9, #6, #58
  4288a0:	subs	w10, w10, #0x1
  4288a4:	mov	x9, x12
  4288a8:	add	x11, x11, #0x1
  4288ac:	b.ne	42888c <feof@plt+0x25ebc>  // b.any
  4288b0:	neg	x8, x8
  4288b4:	b	4288bc <feof@plt+0x25eec>
  4288b8:	mov	w8, #0x1                   	// #1
  4288bc:	mov	w10, #0x555c                	// #21852
  4288c0:	adrp	x12, 45d000 <_obstack_memory_used@@Base+0xca68>
  4288c4:	ubfx	x11, x9, #28, #4
  4288c8:	add	x12, x12, #0xa6d
  4288cc:	ubfx	x13, x9, #24, #4
  4288d0:	ubfx	x14, x9, #20, #4
  4288d4:	ubfx	x15, x9, #16, #4
  4288d8:	ubfx	x16, x9, #12, #4
  4288dc:	ubfx	x17, x9, #8, #4
  4288e0:	strh	w10, [x0]
  4288e4:	ubfx	x10, x9, #4, #4
  4288e8:	and	x9, x9, #0xf
  4288ec:	ldrb	w11, [x12, x11]
  4288f0:	ldrb	w13, [x12, x13]
  4288f4:	ldrb	w14, [x12, x14]
  4288f8:	ldrb	w15, [x12, x15]
  4288fc:	ldrb	w16, [x12, x16]
  428900:	ldrb	w17, [x12, x17]
  428904:	ldrb	w10, [x12, x10]
  428908:	ldrb	w9, [x12, x9]
  42890c:	strb	w11, [x0, #2]
  428910:	strb	w13, [x0, #3]
  428914:	strb	w14, [x0, #4]
  428918:	strb	w15, [x0, #5]
  42891c:	strb	w16, [x0, #6]
  428920:	strb	w17, [x0, #7]
  428924:	strb	w10, [x0, #8]
  428928:	strb	w9, [x0, #9]
  42892c:	mov	x0, x8
  428930:	ldp	x29, x30, [sp], #16
  428934:	ret
  428938:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42893c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428940:	add	x0, x0, #0x400
  428944:	add	x2, x2, #0xa61
  428948:	mov	w1, #0xc89                 	// #3209
  42894c:	bl	404ac4 <feof@plt+0x20f4>
  428950:	stp	x29, x30, [sp, #-48]!
  428954:	stp	x22, x21, [sp, #16]
  428958:	stp	x20, x19, [sp, #32]
  42895c:	ldrb	w8, [x1, #4]
  428960:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  428964:	add	x9, x9, #0xdf8
  428968:	mov	x19, x2
  42896c:	lsl	x10, x8, #4
  428970:	ldr	w10, [x9, x10]
  428974:	mov	x29, sp
  428978:	cmp	w10, #0x3
  42897c:	b.hi	428a90 <feof@plt+0x260c0>  // b.pmore
  428980:	adrp	x11, 45c000 <_obstack_memory_used@@Base+0xba68>
  428984:	add	x11, x11, #0xdaa
  428988:	adr	x12, 42899c <feof@plt+0x25fcc>
  42898c:	ldrb	w13, [x11, x10]
  428990:	add	x12, x12, x13, lsl #2
  428994:	mov	x20, x1
  428998:	br	x12
  42899c:	ldrh	w10, [x20, #6]
  4289a0:	tbnz	w10, #1, 428a64 <feof@plt+0x26094>
  4289a4:	tbnz	w10, #4, 4289b4 <feof@plt+0x25fe4>
  4289a8:	add	x8, x9, x8, lsl #4
  4289ac:	add	x8, x8, #0x8
  4289b0:	b	428a74 <feof@plt+0x260a4>
  4289b4:	tbz	w3, #0, 428a14 <feof@plt+0x26044>
  4289b8:	ldr	x8, [x20, #16]
  4289bc:	mov	x0, x19
  4289c0:	ldr	x1, [x8]
  4289c4:	ldr	w2, [x8, #8]
  4289c8:	bl	402390 <memcpy@plt>
  4289cc:	ldr	x8, [x20, #16]
  4289d0:	ldr	w8, [x8, #8]
  4289d4:	add	x19, x19, x8
  4289d8:	b	428a90 <feof@plt+0x260c0>
  4289dc:	ldr	x1, [x20, #16]
  4289e0:	ldr	w2, [x20, #8]
  4289e4:	mov	x0, x19
  4289e8:	bl	402390 <memcpy@plt>
  4289ec:	ldr	w8, [x20, #8]
  4289f0:	add	x19, x19, x8
  4289f4:	b	428a90 <feof@plt+0x260c0>
  4289f8:	add	x8, x9, x8, lsl #4
  4289fc:	ldr	x3, [x8, #8]
  428a00:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  428a04:	add	x2, x2, #0x527
  428a08:	mov	w1, #0x4                   	// #4
  428a0c:	bl	41de04 <feof@plt+0x1b434>
  428a10:	b	428a90 <feof@plt+0x260c0>
  428a14:	ldr	x20, [x20, #8]
  428a18:	ldr	w8, [x20, #8]
  428a1c:	cbz	w8, 428a90 <feof@plt+0x260c0>
  428a20:	ldr	x21, [x20]
  428a24:	mov	x22, xzr
  428a28:	b	428a40 <feof@plt+0x26070>
  428a2c:	strb	w8, [x19], #1
  428a30:	ldr	w8, [x20, #8]
  428a34:	add	x22, x22, #0x1
  428a38:	cmp	x22, x8
  428a3c:	b.cs	428a90 <feof@plt+0x260c0>  // b.hs, b.nlast
  428a40:	add	x1, x21, x22
  428a44:	ldrsb	w8, [x1]
  428a48:	tbz	w8, #31, 428a2c <feof@plt+0x2605c>
  428a4c:	mov	x0, x19
  428a50:	bl	42883c <feof@plt+0x25e6c>
  428a54:	add	x8, x22, x0
  428a58:	sub	x22, x8, #0x1
  428a5c:	add	x19, x19, #0xa
  428a60:	b	428a30 <feof@plt+0x26060>
  428a64:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  428a68:	add	x9, x9, #0x338
  428a6c:	add	x8, x9, x8, lsl #3
  428a70:	sub	x8, x8, #0x128
  428a74:	ldr	x9, [x8]
  428a78:	ldrb	w8, [x9]
  428a7c:	cbz	w8, 428a90 <feof@plt+0x260c0>
  428a80:	add	x9, x9, #0x1
  428a84:	strb	w8, [x19], #1
  428a88:	ldrb	w8, [x9], #1
  428a8c:	cbnz	w8, 428a84 <feof@plt+0x260b4>
  428a90:	mov	x0, x19
  428a94:	ldp	x20, x19, [sp, #32]
  428a98:	ldp	x22, x21, [sp, #16]
  428a9c:	ldp	x29, x30, [sp], #48
  428aa0:	ret
  428aa4:	stp	x29, x30, [sp, #-48]!
  428aa8:	stp	x20, x19, [sp, #32]
  428aac:	ldrb	w8, [x1, #4]
  428ab0:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  428ab4:	add	x9, x9, #0xdf8
  428ab8:	mov	x19, x1
  428abc:	lsl	x8, x8, #4
  428ac0:	ldr	w8, [x9, x8]
  428ac4:	mov	x20, x0
  428ac8:	str	x21, [sp, #16]
  428acc:	mov	x29, sp
  428ad0:	cmp	w8, #0x1
  428ad4:	b.eq	428ae8 <feof@plt+0x26118>  // b.none
  428ad8:	cmp	w8, #0x2
  428adc:	b.ne	428afc <feof@plt+0x2612c>  // b.any
  428ae0:	ldr	w8, [x19, #8]
  428ae4:	b	428b00 <feof@plt+0x26130>
  428ae8:	ldr	x8, [x19, #8]
  428aec:	ldr	w8, [x8, #8]
  428af0:	add	w8, w8, w8, lsl #2
  428af4:	lsl	w8, w8, #1
  428af8:	b	428b00 <feof@plt+0x26130>
  428afc:	mov	w8, #0x6                   	// #6
  428b00:	add	w1, w8, #0x1
  428b04:	mov	x0, x20
  428b08:	bl	428b3c <feof@plt+0x2616c>
  428b0c:	mov	x21, x0
  428b10:	mov	x0, x20
  428b14:	mov	x1, x19
  428b18:	mov	x2, x21
  428b1c:	mov	w3, wzr
  428b20:	bl	428950 <feof@plt+0x25f80>
  428b24:	strb	wzr, [x0]
  428b28:	mov	x0, x21
  428b2c:	ldp	x20, x19, [sp, #32]
  428b30:	ldr	x21, [sp, #16]
  428b34:	ldp	x29, x30, [sp], #48
  428b38:	ret
  428b3c:	stp	x29, x30, [sp, #-48]!
  428b40:	stp	x20, x19, [sp, #32]
  428b44:	ldr	x8, [x0, #64]
  428b48:	str	x21, [sp, #16]
  428b4c:	mov	x20, x0
  428b50:	mov	x19, x1
  428b54:	ldp	x0, x9, [x8, #16]
  428b58:	mov	x29, sp
  428b5c:	sub	x9, x9, x0
  428b60:	cmp	x9, x1
  428b64:	b.cs	428c0c <feof@plt+0x2623c>  // b.hs, b.nlast
  428b68:	mov	x9, x20
  428b6c:	ldr	x8, [x9, #72]!
  428b70:	cbz	x8, 428bc0 <feof@plt+0x261f0>
  428b74:	ldr	x10, [x8, #24]
  428b78:	ldr	x11, [x8, #8]
  428b7c:	add	x12, x19, x19, lsl #1
  428b80:	mov	w13, #0x1f40                	// #8000
  428b84:	sub	x11, x10, x11
  428b88:	cmp	x11, x19
  428b8c:	add	x10, x13, x12, lsr #1
  428b90:	b.cc	428b9c <feof@plt+0x261cc>  // b.lo, b.ul, b.last
  428b94:	cmp	x11, x10
  428b98:	b.ls	428bec <feof@plt+0x2621c>  // b.plast
  428b9c:	mov	x9, x8
  428ba0:	ldr	x8, [x8]
  428ba4:	cbz	x8, 428bc0 <feof@plt+0x261f0>
  428ba8:	ldr	x11, [x8, #24]
  428bac:	ldr	x12, [x8, #8]
  428bb0:	sub	x11, x11, x12
  428bb4:	cmp	x11, x19
  428bb8:	b.cs	428b94 <feof@plt+0x261c4>  // b.hs, b.nlast
  428bbc:	b	428b9c <feof@plt+0x261cc>
  428bc0:	mov	w8, #0x1f40                	// #8000
  428bc4:	cmp	x19, x8
  428bc8:	csel	x8, x19, x8, hi  // hi = pmore
  428bcc:	add	x8, x8, #0x7
  428bd0:	and	x21, x8, #0xfffffffffffffff8
  428bd4:	add	x0, x21, #0x20
  428bd8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  428bdc:	add	x8, x0, x21
  428be0:	stp	x0, x8, [x8, #16]
  428be4:	stp	xzr, x0, [x8]
  428be8:	b	428c00 <feof@plt+0x26230>
  428bec:	ldr	x10, [x8]
  428bf0:	str	x10, [x9]
  428bf4:	ldr	x0, [x8, #8]
  428bf8:	str	xzr, [x8]
  428bfc:	str	x0, [x8, #16]
  428c00:	ldr	x9, [x20, #64]
  428c04:	str	x9, [x8]
  428c08:	str	x8, [x20, #64]
  428c0c:	add	x9, x0, x19
  428c10:	str	x9, [x8, #16]
  428c14:	ldp	x20, x19, [sp, #32]
  428c18:	ldr	x21, [sp, #16]
  428c1c:	ldp	x29, x30, [sp], #48
  428c20:	ret
  428c24:	tbnz	w1, #1, 428c44 <feof@plt+0x26274>
  428c28:	and	w8, w1, #0xff
  428c2c:	tbnz	w8, #4, 428c5c <feof@plt+0x2628c>
  428c30:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0xba68>
  428c34:	add	x8, x8, #0xdf8
  428c38:	add	x8, x8, w0, uxtw #4
  428c3c:	ldr	x0, [x8, #8]
  428c40:	ret
  428c44:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0xca68>
  428c48:	add	x8, x8, #0x338
  428c4c:	add	x8, x8, w0, sxtw #3
  428c50:	sub	x8, x8, #0x128
  428c54:	ldr	x0, [x8]
  428c58:	ret
  428c5c:	b	434bb8 <feof@plt+0x321e8>
  428c60:	sub	sp, sp, #0x40
  428c64:	stp	x29, x30, [sp, #16]
  428c68:	stp	x22, x21, [sp, #32]
  428c6c:	stp	x20, x19, [sp, #48]
  428c70:	ldrb	w8, [x0, #4]
  428c74:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  428c78:	add	x9, x9, #0xdf8
  428c7c:	mov	x20, x0
  428c80:	lsl	x10, x8, #4
  428c84:	ldr	w10, [x9, x10]
  428c88:	mov	x19, x1
  428c8c:	add	x29, sp, #0x10
  428c90:	cmp	w10, #0x2
  428c94:	b.eq	428d48 <feof@plt+0x26378>  // b.none
  428c98:	cmp	w10, #0x1
  428c9c:	b.eq	428cbc <feof@plt+0x262ec>  // b.none
  428ca0:	cbnz	w10, 428db8 <feof@plt+0x263e8>
  428ca4:	ldrh	w10, [x20, #6]
  428ca8:	tbnz	w10, #1, 428d6c <feof@plt+0x2639c>
  428cac:	tbnz	w10, #4, 428cbc <feof@plt+0x262ec>
  428cb0:	add	x8, x9, x8, lsl #4
  428cb4:	add	x8, x8, #0x8
  428cb8:	b	428d7c <feof@plt+0x263ac>
  428cbc:	ldr	x8, [x20, #8]
  428cc0:	ldr	w9, [x8, #8]
  428cc4:	cbz	w9, 428db8 <feof@plt+0x263e8>
  428cc8:	ldr	x21, [x8]
  428ccc:	mov	x22, xzr
  428cd0:	b	428d0c <feof@plt+0x2633c>
  428cd4:	add	x0, sp, #0x4
  428cd8:	bl	42883c <feof@plt+0x25e6c>
  428cdc:	add	x8, x22, x0
  428ce0:	add	x0, sp, #0x4
  428ce4:	mov	w1, #0x1                   	// #1
  428ce8:	mov	w2, #0xa                   	// #10
  428cec:	mov	x3, x19
  428cf0:	sub	x22, x8, #0x1
  428cf4:	bl	4028a0 <fwrite_unlocked@plt>
  428cf8:	ldr	x8, [x20, #8]
  428cfc:	add	x22, x22, #0x1
  428d00:	ldr	w9, [x8, #8]
  428d04:	cmp	x22, x9
  428d08:	b.cs	428db8 <feof@plt+0x263e8>  // b.hs, b.nlast
  428d0c:	add	x1, x21, x22
  428d10:	ldrsb	w9, [x1]
  428d14:	tbnz	w9, #31, 428cd4 <feof@plt+0x26304>
  428d18:	ldr	x9, [x8]
  428d1c:	ldp	x8, x10, [x19, #40]
  428d20:	ldrb	w1, [x9, x22]
  428d24:	cmp	x8, x10
  428d28:	b.cs	428d3c <feof@plt+0x2636c>  // b.hs, b.nlast
  428d2c:	add	x9, x8, #0x1
  428d30:	str	x9, [x19, #40]
  428d34:	strb	w1, [x8]
  428d38:	b	428cf8 <feof@plt+0x26328>
  428d3c:	mov	x0, x19
  428d40:	bl	402480 <__overflow@plt>
  428d44:	b	428cf8 <feof@plt+0x26328>
  428d48:	ldr	x0, [x20, #16]
  428d4c:	ldr	w2, [x20, #8]
  428d50:	mov	x3, x19
  428d54:	ldp	x20, x19, [sp, #48]
  428d58:	ldp	x22, x21, [sp, #32]
  428d5c:	ldp	x29, x30, [sp, #16]
  428d60:	mov	w1, #0x1                   	// #1
  428d64:	add	sp, sp, #0x40
  428d68:	b	4028a0 <fwrite_unlocked@plt>
  428d6c:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  428d70:	add	x9, x9, #0x338
  428d74:	add	x8, x9, x8, lsl #3
  428d78:	sub	x8, x8, #0x128
  428d7c:	ldr	x20, [x8]
  428d80:	ldrb	w8, [x20], #1
  428d84:	ldp	x9, x10, [x19, #40]
  428d88:	cmp	x9, x10
  428d8c:	b.cs	428da8 <feof@plt+0x263d8>  // b.hs, b.nlast
  428d90:	add	x10, x9, #0x1
  428d94:	str	x10, [x19, #40]
  428d98:	strb	w8, [x9]
  428d9c:	ldrb	w8, [x20], #1
  428da0:	cbnz	w8, 428d84 <feof@plt+0x263b4>
  428da4:	b	428db8 <feof@plt+0x263e8>
  428da8:	and	w1, w8, #0xff
  428dac:	mov	x0, x19
  428db0:	bl	402480 <__overflow@plt>
  428db4:	b	428d9c <feof@plt+0x263cc>
  428db8:	ldp	x20, x19, [sp, #48]
  428dbc:	ldp	x22, x21, [sp, #32]
  428dc0:	ldp	x29, x30, [sp, #16]
  428dc4:	add	sp, sp, #0x40
  428dc8:	ret
  428dcc:	stp	x29, x30, [sp, #-16]!
  428dd0:	ldrb	w8, [x0, #4]
  428dd4:	ldrb	w9, [x1, #4]
  428dd8:	mov	x29, sp
  428ddc:	cmp	w8, w9
  428de0:	b.ne	428e7c <feof@plt+0x264ac>  // b.any
  428de4:	ldrh	w9, [x0, #6]
  428de8:	ldrh	w10, [x1, #6]
  428dec:	cmp	w9, w10
  428df0:	b.ne	428e7c <feof@plt+0x264ac>  // b.any
  428df4:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  428df8:	lsl	x9, x8, #4
  428dfc:	add	x10, x10, #0xdf8
  428e00:	ldr	w9, [x10, x9]
  428e04:	cmp	w9, #0x1
  428e08:	b.eq	428e38 <feof@plt+0x26468>  // b.none
  428e0c:	cmp	w9, #0x2
  428e10:	b.eq	428e58 <feof@plt+0x26488>  // b.none
  428e14:	cmp	w9, #0x3
  428e18:	b.ne	428e88 <feof@plt+0x264b8>  // b.any
  428e1c:	cmp	w8, #0x50
  428e20:	b.ne	428ea8 <feof@plt+0x264d8>  // b.any
  428e24:	ldr	w8, [x0, #8]
  428e28:	ldr	w9, [x1, #8]
  428e2c:	cmp	w8, w9
  428e30:	b.eq	428e48 <feof@plt+0x26478>  // b.none
  428e34:	b	428e7c <feof@plt+0x264ac>
  428e38:	ldr	x8, [x0, #8]
  428e3c:	ldr	x9, [x1, #8]
  428e40:	cmp	x8, x9
  428e44:	b.ne	428e7c <feof@plt+0x264ac>  // b.any
  428e48:	ldr	x8, [x0, #16]
  428e4c:	ldr	x9, [x1, #16]
  428e50:	cmp	x8, x9
  428e54:	b	428e9c <feof@plt+0x264cc>
  428e58:	ldr	w2, [x0, #8]
  428e5c:	ldr	w8, [x1, #8]
  428e60:	cmp	w2, w8
  428e64:	b.ne	428e7c <feof@plt+0x264ac>  // b.any
  428e68:	ldr	x0, [x0, #16]
  428e6c:	ldr	x1, [x1, #16]
  428e70:	bl	402980 <bcmp@plt>
  428e74:	cmp	w0, #0x0
  428e78:	b	428e9c <feof@plt+0x264cc>
  428e7c:	mov	w0, wzr
  428e80:	ldp	x29, x30, [sp], #16
  428e84:	ret
  428e88:	cmp	w8, #0x26
  428e8c:	b.ne	428ea8 <feof@plt+0x264d8>  // b.any
  428e90:	ldr	w8, [x0, #8]
  428e94:	ldr	w9, [x1, #8]
  428e98:	cmp	w8, w9
  428e9c:	cset	w0, eq  // eq = none
  428ea0:	ldp	x29, x30, [sp], #16
  428ea4:	ret
  428ea8:	mov	w0, #0x1                   	// #1
  428eac:	ldp	x29, x30, [sp], #16
  428eb0:	ret
  428eb4:	ldrb	w10, [x1, #6]
  428eb8:	ldrb	w9, [x1, #4]
  428ebc:	ldrh	w13, [x2, #6]
  428ec0:	ldrb	w11, [x2, #4]
  428ec4:	mov	w14, #0x35                  	// #53
  428ec8:	tst	w10, #0x10
  428ecc:	csel	w12, w9, w14, eq  // eq = none
  428ed0:	tst	w13, #0x10
  428ed4:	mov	x8, x0
  428ed8:	csel	w9, w11, w14, eq  // eq = none
  428edc:	tbnz	w13, #1, 428efc <feof@plt+0x2652c>
  428ee0:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  428ee4:	lsl	x13, x9, #4
  428ee8:	add	x10, x10, #0xdf8
  428eec:	ldr	w13, [x10, x13]
  428ef0:	cbz	w13, 428f10 <feof@plt+0x26540>
  428ef4:	mov	w10, #0xffffffff            	// #-1
  428ef8:	b	428f38 <feof@plt+0x26568>
  428efc:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0xca68>
  428f00:	add	x10, x10, #0x338
  428f04:	add	x10, x10, w9, uxtw #3
  428f08:	sub	x10, x10, #0x128
  428f0c:	b	428f18 <feof@plt+0x26548>
  428f10:	add	x10, x10, x9, lsl #4
  428f14:	add	x10, x10, #0x8
  428f18:	ldr	x10, [x10]
  428f1c:	cmp	w12, #0xd
  428f20:	ldrb	w10, [x10]
  428f24:	b.hi	428f38 <feof@plt+0x26568>  // b.pmore
  428f28:	cmp	w10, #0x3d
  428f2c:	b.ne	428f38 <feof@plt+0x26568>  // b.any
  428f30:	mov	w0, #0x1                   	// #1
  428f34:	ret
  428f38:	sub	w12, w12, #0x2
  428f3c:	cmp	w12, #0x40
  428f40:	mov	w0, wzr
  428f44:	b.hi	429148 <feof@plt+0x26778>  // b.pmore
  428f48:	adrp	x13, 45c000 <_obstack_memory_used@@Base+0xba68>
  428f4c:	add	x13, x13, #0xdae
  428f50:	adr	x14, 428f60 <feof@plt+0x26590>
  428f54:	ldrb	w15, [x13, x12]
  428f58:	add	x14, x14, x15, lsl #2
  428f5c:	br	x14
  428f60:	ldrb	w8, [x8, #1161]
  428f64:	cbz	w8, 428f98 <feof@plt+0x265c8>
  428f68:	cmp	w9, #0x35
  428f6c:	b.eq	428f30 <feof@plt+0x26560>  // b.none
  428f70:	sub	x8, x11, #0x37
  428f74:	cmp	x8, #0x18
  428f78:	b.hi	428f98 <feof@plt+0x265c8>  // b.pmore
  428f7c:	ldr	x8, [x2, #16]
  428f80:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  428f84:	add	x9, x9, #0xa50
  428f88:	ldrb	w8, [x8]
  428f8c:	ldrh	w8, [x9, x8, lsl #1]
  428f90:	ubfx	w0, w8, #9, #1
  428f94:	b	429148 <feof@plt+0x26778>
  428f98:	mov	w0, wzr
  428f9c:	ret
  428fa0:	orr	w8, w10, #0x4
  428fa4:	cmp	w8, #0x3e
  428fa8:	cset	w0, eq  // eq = none
  428fac:	ret
  428fb0:	cmp	w10, #0x3e
  428fb4:	cset	w0, eq  // eq = none
  428fb8:	ret
  428fbc:	cmp	w10, #0x25
  428fc0:	mov	w0, #0x1                   	// #1
  428fc4:	b.eq	429148 <feof@plt+0x26778>  // b.none
  428fc8:	cmp	w10, #0x3c
  428fcc:	b.eq	429148 <feof@plt+0x26778>  // b.none
  428fd0:	cmp	w10, #0x3a
  428fd4:	cset	w0, eq  // eq = none
  428fd8:	ret
  428fdc:	cmp	w10, #0x2b
  428fe0:	cset	w0, eq  // eq = none
  428fe4:	ret
  428fe8:	cmp	w10, #0x2d
  428fec:	cset	w8, eq  // eq = none
  428ff0:	cmp	w10, #0x3e
  428ff4:	b	42902c <feof@plt+0x2665c>
  428ff8:	cmp	w10, #0x2f
  428ffc:	cset	w8, eq  // eq = none
  429000:	cmp	w10, #0x2a
  429004:	b	42902c <feof@plt+0x2665c>
  429008:	cmp	w10, #0x26
  42900c:	cset	w0, eq  // eq = none
  429010:	ret
  429014:	cmp	w10, #0x7c
  429018:	cset	w0, eq  // eq = none
  42901c:	ret
  429020:	cmp	w10, #0x23
  429024:	cset	w8, eq  // eq = none
  429028:	cmp	w10, #0x25
  42902c:	cset	w9, eq  // eq = none
  429030:	orr	w0, w8, w9
  429034:	ret
  429038:	cmp	w10, #0x2a
  42903c:	cset	w0, eq  // eq = none
  429040:	ret
  429044:	cmp	w10, #0x25
  429048:	mov	w0, #0x1                   	// #1
  42904c:	b.eq	429148 <feof@plt+0x26778>  // b.none
  429050:	cmp	w10, #0x2e
  429054:	b.eq	429148 <feof@plt+0x26778>  // b.none
  429058:	cmp	w9, #0x37
  42905c:	cset	w0, eq  // eq = none
  429060:	ret
  429064:	cmp	w9, #0x35
  429068:	mov	w0, #0x1                   	// #1
  42906c:	b.eq	429148 <feof@plt+0x26778>  // b.none
  429070:	cmp	w9, #0x38
  429074:	b.eq	429148 <feof@plt+0x26778>  // b.none
  429078:	cmp	w9, #0x37
  42907c:	b.ne	4290cc <feof@plt+0x266fc>  // b.any
  429080:	ldr	w10, [x2, #8]
  429084:	cbz	w10, 428f30 <feof@plt+0x26560>
  429088:	ldr	x11, [x2, #16]
  42908c:	adrp	x12, 461000 <_obstack_memory_used@@Base+0x10a68>
  429090:	add	x12, x12, #0xa50
  429094:	mov	w13, #0x204                 	// #516
  429098:	mov	w0, #0x1                   	// #1
  42909c:	b	4290ac <feof@plt+0x266dc>
  4290a0:	subs	x10, x10, #0x1
  4290a4:	add	x11, x11, #0x1
  4290a8:	b.eq	429148 <feof@plt+0x26778>  // b.none
  4290ac:	ldrb	w14, [x11]
  4290b0:	ldrh	w15, [x12, x14, lsl #1]
  4290b4:	tst	w15, w13
  4290b8:	b.ne	4290a0 <feof@plt+0x266d0>  // b.any
  4290bc:	cmp	w14, #0x24
  4290c0:	b.ne	4290cc <feof@plt+0x266fc>  // b.any
  4290c4:	ldrb	w14, [x8, #1146]
  4290c8:	cbnz	w14, 4290a0 <feof@plt+0x266d0>
  4290cc:	cmp	w9, #0x3e
  4290d0:	cset	w0, eq  // eq = none
  4290d4:	ret
  4290d8:	orr	w8, w9, #0x2
  4290dc:	cmp	w8, #0x37
  4290e0:	cset	w8, eq  // eq = none
  4290e4:	cmp	w10, #0x2e
  4290e8:	cset	w9, eq  // eq = none
  4290ec:	cmp	w10, #0x2b
  4290f0:	orr	w8, w8, w9
  4290f4:	cset	w9, eq  // eq = none
  4290f8:	cmp	w10, #0x2d
  4290fc:	orr	w8, w9, w8
  429100:	cset	w9, eq  // eq = none
  429104:	orr	w0, w9, w8
  429108:	ret
  42910c:	ldr	x10, [x1, #16]
  429110:	cmp	w9, #0x35
  429114:	ldrb	w10, [x10]
  429118:	b.ne	429124 <feof@plt+0x26754>  // b.any
  42911c:	cmp	w10, #0x5c
  429120:	b.eq	428f30 <feof@plt+0x26560>  // b.none
  429124:	cmp	w10, #0x40
  429128:	mov	w0, wzr
  42912c:	b.ne	429148 <feof@plt+0x26778>  // b.any
  429130:	ldrb	w8, [x8, #1122]
  429134:	cbz	w8, 429148 <feof@plt+0x26778>
  429138:	cmp	w9, #0x35
  42913c:	cset	w8, eq  // eq = none
  429140:	cmp	w9, #0x3e
  429144:	b	42902c <feof@plt+0x2665c>
  429148:	ret
  42914c:	stp	x29, x30, [sp, #-48]!
  429150:	stp	x22, x21, [sp, #16]
  429154:	stp	x20, x19, [sp, #32]
  429158:	mov	x29, sp
  42915c:	mov	x19, x1
  429160:	mov	x20, x0
  429164:	bl	42db34 <feof@plt+0x2b164>
  429168:	ldrb	w8, [x0, #4]
  42916c:	cmp	w8, #0x16
  429170:	b.ne	4291a0 <feof@plt+0x267d0>  // b.any
  429174:	ldp	x8, x9, [x19, #40]
  429178:	cmp	x8, x9
  42917c:	b.cs	429200 <feof@plt+0x26830>  // b.hs, b.nlast
  429180:	add	x9, x8, #0x1
  429184:	mov	w10, #0xa                   	// #10
  429188:	str	x9, [x19, #40]
  42918c:	strb	w10, [x8]
  429190:	ldp	x20, x19, [sp, #32]
  429194:	ldp	x22, x21, [sp, #16]
  429198:	ldp	x29, x30, [sp], #48
  42919c:	ret
  4291a0:	mov	x21, x0
  4291a4:	mov	w22, #0x20                  	// #32
  4291a8:	b	4291c4 <feof@plt+0x267f4>
  4291ac:	add	x9, x8, #0x1
  4291b0:	str	x9, [x19, #40]
  4291b4:	strb	w22, [x8]
  4291b8:	ldrb	w8, [x21, #4]
  4291bc:	cmp	w8, #0x16
  4291c0:	b.eq	429174 <feof@plt+0x267a4>  // b.none
  4291c4:	mov	x0, x21
  4291c8:	mov	x1, x19
  4291cc:	bl	428c60 <feof@plt+0x26290>
  4291d0:	mov	x0, x20
  4291d4:	bl	42db34 <feof@plt+0x2b164>
  4291d8:	ldrb	w8, [x0, #6]
  4291dc:	mov	x21, x0
  4291e0:	tbz	w8, #0, 4291b8 <feof@plt+0x267e8>
  4291e4:	ldp	x8, x9, [x19, #40]
  4291e8:	cmp	x8, x9
  4291ec:	b.cc	4291ac <feof@plt+0x267dc>  // b.lo, b.ul, b.last
  4291f0:	mov	w1, #0x20                  	// #32
  4291f4:	mov	x0, x19
  4291f8:	bl	402480 <__overflow@plt>
  4291fc:	b	4291b8 <feof@plt+0x267e8>
  429200:	mov	x0, x19
  429204:	ldp	x20, x19, [sp, #32]
  429208:	ldp	x22, x21, [sp, #16]
  42920c:	mov	w1, #0xa                   	// #10
  429210:	ldp	x29, x30, [sp], #48
  429214:	b	402480 <__overflow@plt>
  429218:	stp	x29, x30, [sp, #-80]!
  42921c:	stp	x20, x19, [sp, #64]
  429220:	mov	x19, x0
  429224:	str	x25, [sp, #16]
  429228:	stp	x24, x23, [sp, #32]
  42922c:	stp	x22, x21, [sp, #48]
  429230:	mov	x29, sp
  429234:	cbz	x1, 429270 <feof@plt+0x268a0>
  429238:	mov	x0, x1
  42923c:	mov	x22, x1
  429240:	bl	402420 <strlen@plt>
  429244:	mov	x23, x0
  429248:	add	w20, w23, #0x78
  42924c:	mov	x0, x20
  429250:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  429254:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  429258:	add	x1, x1, #0x53c
  42925c:	mov	x2, x22
  429260:	mov	x21, x0
  429264:	bl	4025b0 <sprintf@plt>
  429268:	add	w23, w23, #0x2
  42926c:	b	429284 <feof@plt+0x268b4>
  429270:	mov	w0, #0x78                  	// #120
  429274:	mov	w20, #0x78                  	// #120
  429278:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42927c:	mov	x21, x0
  429280:	mov	w23, wzr
  429284:	mov	x0, x19
  429288:	bl	42db34 <feof@plt+0x2b164>
  42928c:	ldrb	w8, [x0, #4]
  429290:	cmp	w8, #0x16
  429294:	b.ne	4292b8 <feof@plt+0x268e8>  // b.any
  429298:	strb	wzr, [x21, w23, uxtw]
  42929c:	mov	x0, x21
  4292a0:	ldp	x20, x19, [sp, #64]
  4292a4:	ldp	x22, x21, [sp, #48]
  4292a8:	ldp	x24, x23, [sp, #32]
  4292ac:	ldr	x25, [sp, #16]
  4292b0:	ldp	x29, x30, [sp], #80
  4292b4:	ret
  4292b8:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0xba68>
  4292bc:	mov	x22, x0
  4292c0:	add	x24, x24, #0xdf8
  4292c4:	mov	w25, #0x20                  	// #32
  4292c8:	b	4292d8 <feof@plt+0x26908>
  4292cc:	ldrb	w8, [x22, #4]
  4292d0:	cmp	w8, #0x16
  4292d4:	b.eq	429298 <feof@plt+0x268c8>  // b.none
  4292d8:	and	x8, x8, #0xff
  4292dc:	lsl	x8, x8, #4
  4292e0:	ldr	w8, [x24, x8]
  4292e4:	cmp	w8, #0x1
  4292e8:	b.eq	4292fc <feof@plt+0x2692c>  // b.none
  4292ec:	cmp	w8, #0x2
  4292f0:	b.ne	429310 <feof@plt+0x26940>  // b.any
  4292f4:	ldr	w8, [x22, #8]
  4292f8:	b	429314 <feof@plt+0x26944>
  4292fc:	ldr	x8, [x22, #8]
  429300:	ldr	w8, [x8, #8]
  429304:	add	w8, w8, w8, lsl #2
  429308:	lsl	w8, w8, #1
  42930c:	b	429314 <feof@plt+0x26944>
  429310:	mov	w8, #0x6                   	// #6
  429314:	add	w8, w23, w8
  429318:	add	w8, w8, #0x2
  42931c:	cmp	w8, w20
  429320:	b.ls	429340 <feof@plt+0x26970>  // b.plast
  429324:	lsl	w9, w20, #1
  429328:	cmp	w8, w9
  42932c:	csel	w20, w8, w9, hi  // hi = pmore
  429330:	mov	x0, x21
  429334:	mov	x1, x20
  429338:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42933c:	mov	x21, x0
  429340:	add	x2, x21, w23, uxtw
  429344:	mov	x0, x19
  429348:	mov	x1, x22
  42934c:	mov	w3, wzr
  429350:	bl	428950 <feof@plt+0x25f80>
  429354:	sub	x23, x0, x21
  429358:	mov	x0, x19
  42935c:	bl	42db34 <feof@plt+0x2b164>
  429360:	ldrb	w8, [x0, #6]
  429364:	mov	x22, x0
  429368:	tbz	w8, #0, 4292cc <feof@plt+0x268fc>
  42936c:	add	w8, w23, #0x1
  429370:	strb	w25, [x21, w23, uxtw]
  429374:	mov	w23, w8
  429378:	b	4292cc <feof@plt+0x268fc>
  42937c:	mov	x9, x1
  429380:	mov	x8, x9
  429384:	ldr	x9, [x9]
  429388:	cbnz	x9, 429380 <feof@plt+0x269b0>
  42938c:	ldr	x9, [x0, #72]
  429390:	str	x9, [x8]
  429394:	str	x1, [x0, #72]
  429398:	ret
  42939c:	stp	x29, x30, [sp, #-32]!
  4293a0:	str	x19, [sp, #16]
  4293a4:	mov	x8, x0
  4293a8:	ldr	x0, [x8, #72]!
  4293ac:	mov	x29, sp
  4293b0:	cbz	x0, 4293f8 <feof@plt+0x26a28>
  4293b4:	mov	x9, x0
  4293b8:	ldr	x11, [x9, #8]!
  4293bc:	add	x10, x1, x1, lsl #1
  4293c0:	mov	w13, #0x1f40                	// #8000
  4293c4:	add	x10, x13, x10, lsr #1
  4293c8:	ldr	x12, [x9, #16]
  4293cc:	sub	x11, x12, x11
  4293d0:	cmp	x11, x1
  4293d4:	ccmp	x11, x10, #0x2, cs  // cs = hs, nlast
  4293d8:	b.ls	429428 <feof@plt+0x26a58>  // b.plast
  4293dc:	mov	x8, x0
  4293e0:	ldr	x0, [x0]
  4293e4:	cbz	x0, 4293f8 <feof@plt+0x26a28>
  4293e8:	mov	x9, x0
  4293ec:	ldr	x11, [x9, #8]!
  4293f0:	ldr	x12, [x9, #16]
  4293f4:	b	4293cc <feof@plt+0x269fc>
  4293f8:	mov	w8, #0x1f40                	// #8000
  4293fc:	cmp	x1, x8
  429400:	csel	x8, x1, x8, hi  // hi = pmore
  429404:	add	x8, x8, #0x7
  429408:	and	x19, x8, #0xfffffffffffffff8
  42940c:	add	x0, x19, #0x20
  429410:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  429414:	mov	x8, x0
  429418:	add	x0, x0, x19
  42941c:	stp	x8, x0, [x0, #16]
  429420:	stp	xzr, x8, [x0]
  429424:	b	42943c <feof@plt+0x26a6c>
  429428:	ldr	x10, [x0]
  42942c:	str	x10, [x8]
  429430:	str	xzr, [x0]
  429434:	ldr	x8, [x9]
  429438:	str	x8, [x0, #16]
  42943c:	ldr	x19, [sp, #16]
  429440:	ldp	x29, x30, [sp], #32
  429444:	ret
  429448:	stp	x29, x30, [sp, #-32]!
  42944c:	stp	x20, x19, [sp, #16]
  429450:	ldp	x9, x8, [x1, #16]
  429454:	ldr	x20, [x0, #72]!
  429458:	mov	x19, x1
  42945c:	mov	x29, sp
  429460:	sub	x8, x8, x9
  429464:	add	x8, x2, x8, lsl #1
  429468:	cbz	x20, 4294b8 <feof@plt+0x26ae8>
  42946c:	ldr	x9, [x20, #24]
  429470:	ldr	x10, [x20, #8]
  429474:	add	x11, x8, x8, lsl #1
  429478:	mov	w12, #0x1f40                	// #8000
  42947c:	sub	x10, x9, x10
  429480:	cmp	x10, x8
  429484:	add	x9, x12, x11, lsr #1
  429488:	b.cc	429494 <feof@plt+0x26ac4>  // b.lo, b.ul, b.last
  42948c:	cmp	x10, x9
  429490:	b.ls	4294e4 <feof@plt+0x26b14>  // b.plast
  429494:	mov	x0, x20
  429498:	ldr	x20, [x20]
  42949c:	cbz	x20, 4294b8 <feof@plt+0x26ae8>
  4294a0:	ldr	x10, [x20, #24]
  4294a4:	ldr	x11, [x20, #8]
  4294a8:	sub	x10, x10, x11
  4294ac:	cmp	x10, x8
  4294b0:	b.cs	42948c <feof@plt+0x26abc>  // b.hs, b.nlast
  4294b4:	b	429494 <feof@plt+0x26ac4>
  4294b8:	mov	w9, #0x1f40                	// #8000
  4294bc:	cmp	x8, x9
  4294c0:	csel	x8, x8, x9, hi  // hi = pmore
  4294c4:	add	x8, x8, #0x7
  4294c8:	and	x20, x8, #0xfffffffffffffff8
  4294cc:	add	x0, x20, #0x20
  4294d0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4294d4:	add	x20, x0, x20
  4294d8:	stp	x0, x20, [x20, #16]
  4294dc:	stp	xzr, x0, [x20]
  4294e0:	b	4294f8 <feof@plt+0x26b28>
  4294e4:	ldr	x8, [x20]
  4294e8:	str	x8, [x0]
  4294ec:	ldr	x8, [x20, #8]
  4294f0:	str	xzr, [x20]
  4294f4:	str	x8, [x20, #16]
  4294f8:	str	x20, [x19]
  4294fc:	ldp	x1, x8, [x19, #16]
  429500:	ldr	x0, [x20, #8]
  429504:	sub	x2, x8, x1
  429508:	bl	402390 <memcpy@plt>
  42950c:	mov	x0, x20
  429510:	ldp	x20, x19, [sp, #16]
  429514:	ldp	x29, x30, [sp], #32
  429518:	ret
  42951c:	stp	x29, x30, [sp, #-48]!
  429520:	stp	x20, x19, [sp, #32]
  429524:	ldr	x20, [x1]
  429528:	str	x21, [sp, #16]
  42952c:	mov	x19, x1
  429530:	mov	x29, sp
  429534:	ldp	x9, x8, [x20, #16]
  429538:	ldr	x21, [x0, #72]!
  42953c:	sub	x8, x8, x9
  429540:	add	x8, x2, x8, lsl #1
  429544:	cbz	x21, 429594 <feof@plt+0x26bc4>
  429548:	ldr	x9, [x21, #24]
  42954c:	ldr	x10, [x21, #8]
  429550:	add	x11, x8, x8, lsl #1
  429554:	mov	w12, #0x1f40                	// #8000
  429558:	sub	x10, x9, x10
  42955c:	cmp	x10, x8
  429560:	add	x9, x12, x11, lsr #1
  429564:	b.cc	429570 <feof@plt+0x26ba0>  // b.lo, b.ul, b.last
  429568:	cmp	x10, x9
  42956c:	b.ls	4295c0 <feof@plt+0x26bf0>  // b.plast
  429570:	mov	x0, x21
  429574:	ldr	x21, [x21]
  429578:	cbz	x21, 429594 <feof@plt+0x26bc4>
  42957c:	ldr	x10, [x21, #24]
  429580:	ldr	x11, [x21, #8]
  429584:	sub	x10, x10, x11
  429588:	cmp	x10, x8
  42958c:	b.cs	429568 <feof@plt+0x26b98>  // b.hs, b.nlast
  429590:	b	429570 <feof@plt+0x26ba0>
  429594:	mov	w9, #0x1f40                	// #8000
  429598:	cmp	x8, x9
  42959c:	csel	x8, x8, x9, hi  // hi = pmore
  4295a0:	add	x8, x8, #0x7
  4295a4:	and	x21, x8, #0xfffffffffffffff8
  4295a8:	add	x0, x21, #0x20
  4295ac:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4295b0:	add	x21, x0, x21
  4295b4:	stp	x0, x21, [x21, #16]
  4295b8:	stp	xzr, x0, [x21]
  4295bc:	b	4295d4 <feof@plt+0x26c04>
  4295c0:	ldr	x8, [x21]
  4295c4:	str	x8, [x0]
  4295c8:	ldr	x8, [x21, #8]
  4295cc:	str	xzr, [x21]
  4295d0:	str	x8, [x21, #16]
  4295d4:	ldp	x1, x8, [x20, #16]
  4295d8:	ldr	x0, [x21, #8]
  4295dc:	sub	x2, x8, x1
  4295e0:	bl	402390 <memcpy@plt>
  4295e4:	str	x20, [x21]
  4295e8:	str	x21, [x19]
  4295ec:	ldp	x20, x19, [sp, #32]
  4295f0:	ldr	x21, [sp, #16]
  4295f4:	ldp	x29, x30, [sp], #48
  4295f8:	ret
  4295fc:	stp	x29, x30, [sp, #-32]!
  429600:	str	x19, [sp, #16]
  429604:	mov	x29, sp
  429608:	cbz	x0, 42961c <feof@plt+0x26c4c>
  42960c:	ldp	x19, x0, [x0]
  429610:	bl	4024c0 <free@plt>
  429614:	mov	x0, x19
  429618:	cbnz	x19, 42960c <feof@plt+0x26c3c>
  42961c:	ldr	x19, [sp, #16]
  429620:	ldp	x29, x30, [sp], #32
  429624:	ret
  429628:	stp	x29, x30, [sp, #-48]!
  42962c:	stp	x20, x19, [sp, #32]
  429630:	ldr	x8, [x0, #56]
  429634:	str	x21, [sp, #16]
  429638:	mov	x20, x0
  42963c:	mov	x19, x1
  429640:	ldp	x0, x9, [x8, #16]
  429644:	mov	x29, sp
  429648:	sub	x9, x9, x0
  42964c:	cmp	x9, x1
  429650:	b.cs	4296f8 <feof@plt+0x26d28>  // b.hs, b.nlast
  429654:	mov	x9, x20
  429658:	ldr	x8, [x9, #72]!
  42965c:	cbz	x8, 4296ac <feof@plt+0x26cdc>
  429660:	ldr	x10, [x8, #24]
  429664:	ldr	x11, [x8, #8]
  429668:	add	x12, x19, x19, lsl #1
  42966c:	mov	w13, #0x1f40                	// #8000
  429670:	sub	x11, x10, x11
  429674:	cmp	x11, x19
  429678:	add	x10, x13, x12, lsr #1
  42967c:	b.cc	429688 <feof@plt+0x26cb8>  // b.lo, b.ul, b.last
  429680:	cmp	x11, x10
  429684:	b.ls	4296d8 <feof@plt+0x26d08>  // b.plast
  429688:	mov	x9, x8
  42968c:	ldr	x8, [x8]
  429690:	cbz	x8, 4296ac <feof@plt+0x26cdc>
  429694:	ldr	x11, [x8, #24]
  429698:	ldr	x12, [x8, #8]
  42969c:	sub	x11, x11, x12
  4296a0:	cmp	x11, x19
  4296a4:	b.cs	429680 <feof@plt+0x26cb0>  // b.hs, b.nlast
  4296a8:	b	429688 <feof@plt+0x26cb8>
  4296ac:	mov	w8, #0x1f40                	// #8000
  4296b0:	cmp	x19, x8
  4296b4:	csel	x8, x19, x8, hi  // hi = pmore
  4296b8:	add	x8, x8, #0x7
  4296bc:	and	x21, x8, #0xfffffffffffffff8
  4296c0:	add	x0, x21, #0x20
  4296c4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4296c8:	add	x8, x0, x21
  4296cc:	stp	x0, x8, [x8, #16]
  4296d0:	stp	xzr, x0, [x8]
  4296d4:	b	4296ec <feof@plt+0x26d1c>
  4296d8:	ldr	x10, [x8]
  4296dc:	str	x10, [x9]
  4296e0:	ldr	x0, [x8, #8]
  4296e4:	str	xzr, [x8]
  4296e8:	str	x0, [x8, #16]
  4296ec:	ldr	x9, [x20, #56]
  4296f0:	str	x9, [x8]
  4296f4:	str	x8, [x20, #56]
  4296f8:	add	x9, x0, x19
  4296fc:	str	x9, [x8, #16]
  429700:	ldp	x20, x19, [sp, #32]
  429704:	ldr	x21, [sp, #16]
  429708:	ldp	x29, x30, [sp], #48
  42970c:	ret
  429710:	stp	x29, x30, [sp, #-48]!
  429714:	stp	x20, x19, [sp, #32]
  429718:	ldr	x8, [x0, #1088]
  42971c:	ldr	x9, [x0, #56]
  429720:	mov	x20, x1
  429724:	str	x21, [sp, #16]
  429728:	ldr	x8, [x8, #104]
  42972c:	ldr	x19, [x9, #16]
  429730:	mov	x29, sp
  429734:	cbz	x8, 429758 <feof@plt+0x26d88>
  429738:	mov	x0, x20
  42973c:	blr	x8
  429740:	mov	x1, x19
  429744:	mov	x2, x20
  429748:	mov	x21, x0
  42974c:	bl	402390 <memcpy@plt>
  429750:	mov	x19, x21
  429754:	b	429760 <feof@plt+0x26d90>
  429758:	add	x8, x19, x20
  42975c:	str	x8, [x9, #16]
  429760:	mov	x0, x19
  429764:	ldp	x20, x19, [sp, #32]
  429768:	ldr	x21, [sp, #16]
  42976c:	ldp	x29, x30, [sp], #48
  429770:	ret
  429774:	ldrb	w8, [x0, #4]
  429778:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  42977c:	add	x10, x10, #0xdf8
  429780:	lsl	x9, x8, #4
  429784:	ldr	w9, [x10, x9]
  429788:	cmp	w9, #0x3
  42978c:	b.hi	4297e8 <feof@plt+0x26e18>  // b.pmore
  429790:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0xba68>
  429794:	add	x10, x10, #0xdef
  429798:	adr	x11, 4297ac <feof@plt+0x26ddc>
  42979c:	ldrb	w12, [x10, x9]
  4297a0:	add	x11, x11, x12, lsl #2
  4297a4:	mov	w0, wzr
  4297a8:	br	x11
  4297ac:	cmp	w8, #0x26
  4297b0:	mov	w8, #0x6                   	// #6
  4297b4:	mov	w9, #0x4                   	// #4
  4297b8:	csel	w0, w9, w8, eq  // eq = none
  4297bc:	ret
  4297c0:	mov	w0, #0x2                   	// #2
  4297c4:	ret
  4297c8:	sub	w8, w8, #0x50
  4297cc:	cmp	w8, #0x4
  4297d0:	b.cs	4297e8 <feof@plt+0x26e18>  // b.hs, b.nlast
  4297d4:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0xba68>
  4297d8:	sxtb	x8, w8
  4297dc:	add	x9, x9, #0xbf0
  4297e0:	ldr	w0, [x9, x8, lsl #2]
  4297e4:	ret
  4297e8:	mov	w0, #0x6                   	// #6
  4297ec:	ret
  4297f0:	str	w1, [x0, #1408]
  4297f4:	ret
  4297f8:	str	wzr, [x0, #1408]
  4297fc:	ret
  429800:	ldr	x0, [x0, #88]
  429804:	cbz	x0, 42980c <feof@plt+0x26e3c>
  429808:	b	44f524 <feof@plt+0x4cb54>
  42980c:	ret
  429810:	stp	x29, x30, [sp, #-48]!
  429814:	adrp	x1, 429000 <feof@plt+0x26630>
  429818:	adrp	x2, 429000 <feof@plt+0x26630>
  42981c:	stp	x20, x19, [sp, #32]
  429820:	mov	x19, x0
  429824:	add	x1, x1, #0x8a4
  429828:	add	x2, x2, #0x8c0
  42982c:	mov	w0, #0x64                  	// #100
  429830:	mov	x3, xzr
  429834:	str	x21, [sp, #16]
  429838:	mov	x29, sp
  42983c:	bl	44f334 <feof@plt+0x4c964>
  429840:	ldr	w8, [x19, #96]
  429844:	str	x0, [x19, #88]
  429848:	cbz	w8, 429894 <feof@plt+0x26ec4>
  42984c:	ldr	x1, [x19, #104]
  429850:	mov	w2, #0x1                   	// #1
  429854:	bl	44fc2c <feof@plt+0x4d25c>
  429858:	ldr	w8, [x19, #96]
  42985c:	cmp	w8, #0x2
  429860:	b.cc	429894 <feof@plt+0x26ec4>  // b.lo, b.ul, b.last
  429864:	mov	w20, #0x1                   	// #1
  429868:	mov	w21, #0x18                  	// #24
  42986c:	ldr	x8, [x19, #104]
  429870:	ldr	x0, [x19, #88]
  429874:	mov	w2, #0x1                   	// #1
  429878:	add	x1, x8, x21
  42987c:	bl	44fc2c <feof@plt+0x4d25c>
  429880:	ldr	w8, [x19, #96]
  429884:	add	x20, x20, #0x1
  429888:	add	x21, x21, #0x18
  42988c:	cmp	x20, x8
  429890:	b.cc	42986c <feof@plt+0x26e9c>  // b.lo, b.ul, b.last
  429894:	ldp	x20, x19, [sp, #32]
  429898:	ldr	x21, [sp, #16]
  42989c:	ldp	x29, x30, [sp], #48
  4298a0:	ret
  4298a4:	ldp	w8, w9, [x0]
  4298a8:	ldr	w10, [x0, #8]
  4298ac:	ldr	w11, [x0, #16]
  4298b0:	add	w8, w9, w8
  4298b4:	add	w8, w8, w10
  4298b8:	add	w0, w8, w11
  4298bc:	ret
  4298c0:	ldr	w8, [x0]
  4298c4:	ldr	w9, [x1]
  4298c8:	cmp	w8, w9
  4298cc:	b.ne	429904 <feof@plt+0x26f34>  // b.any
  4298d0:	ldr	w8, [x0, #4]
  4298d4:	ldr	w9, [x1, #4]
  4298d8:	cmp	w8, w9
  4298dc:	b.ne	429904 <feof@plt+0x26f34>  // b.any
  4298e0:	ldr	w8, [x0, #8]
  4298e4:	ldr	w9, [x1, #8]
  4298e8:	cmp	w8, w9
  4298ec:	b.ne	429904 <feof@plt+0x26f34>  // b.any
  4298f0:	ldr	x8, [x0, #16]
  4298f4:	ldr	x9, [x1, #16]
  4298f8:	cmp	x8, x9
  4298fc:	cset	w0, eq  // eq = none
  429900:	ret
  429904:	mov	w0, wzr
  429908:	ret
  42990c:	sub	sp, sp, #0x60
  429910:	stp	x22, x21, [sp, #64]
  429914:	stp	x20, x19, [sp, #80]
  429918:	mov	x21, x3
  42991c:	mov	x20, x2
  429920:	mov	w22, w1
  429924:	mov	x19, x0
  429928:	stp	x29, x30, [sp, #32]
  42992c:	stp	x24, x23, [sp, #48]
  429930:	add	x29, sp, #0x20
  429934:	tbnz	w1, #31, 429940 <feof@plt+0x26f70>
  429938:	cbz	x21, 429958 <feof@plt+0x26f88>
  42993c:	b	429964 <feof@plt+0x26f94>
  429940:	ldr	x8, [x19, #104]
  429944:	and	w9, w22, #0x7fffffff
  429948:	mov	w10, #0x18                  	// #24
  42994c:	umull	x9, w9, w10
  429950:	ldr	w22, [x8, x9]
  429954:	cbnz	x21, 429964 <feof@plt+0x26f94>
  429958:	cbnz	w22, 429964 <feof@plt+0x26f94>
  42995c:	mov	w23, wzr
  429960:	b	429afc <feof@plt+0x2712c>
  429964:	lsr	w8, w22, #28
  429968:	cmp	w8, #0x4
  42996c:	lsr	x23, x20, #32
  429970:	b.hi	4299e8 <feof@plt+0x27018>  // b.pmore
  429974:	cmp	w20, #0x2
  429978:	b.cc	4299e8 <feof@plt+0x27018>  // b.lo, b.ul, b.last
  42997c:	subs	w24, w23, w20
  429980:	b.cc	4299e8 <feof@plt+0x27018>  // b.lo, b.ul, b.last
  429984:	cbnz	x21, 4299e8 <feof@plt+0x27018>
  429988:	cmp	w22, w20
  42998c:	b.ne	4299e8 <feof@plt+0x27018>  // b.any
  429990:	ldr	w8, [x19, #36]
  429994:	cbz	w8, 4299b4 <feof@plt+0x26fe4>
  429998:	ldr	x9, [x19, #24]
  42999c:	sub	w8, w8, #0x1
  4299a0:	sbfiz	x8, x8, #5, #32
  4299a4:	ldr	w8, [x9, x8]
  4299a8:	cmp	w8, w23
  4299ac:	b.hi	4299c0 <feof@plt+0x26ff0>  // b.pmore
  4299b0:	b	4299e8 <feof@plt+0x27018>
  4299b4:	mov	w8, #0x80000000            	// #-2147483648
  4299b8:	cmp	w8, w23
  4299bc:	b.ls	4299e8 <feof@plt+0x27018>  // b.plast
  4299c0:	cmp	w8, w20
  4299c4:	b.ls	4299e8 <feof@plt+0x27018>  // b.plast
  4299c8:	mov	x0, x19
  4299cc:	mov	w1, w20
  4299d0:	bl	429b2c <feof@plt+0x2715c>
  4299d4:	ldrh	w8, [x0, #6]
  4299d8:	lsr	x9, x8, #8
  4299dc:	lsr	w8, w24, w9
  4299e0:	lsr	w9, w8, w9
  4299e4:	cbz	w9, 429b18 <feof@plt+0x27148>
  4299e8:	cmp	w22, w20
  4299ec:	b.ne	4299fc <feof@plt+0x2702c>  // b.any
  4299f0:	cbnz	x21, 4299fc <feof@plt+0x2702c>
  4299f4:	cmp	w22, w23
  4299f8:	b.eq	429afc <feof@plt+0x2712c>  // b.none
  4299fc:	cbnz	x21, 429a0c <feof@plt+0x2703c>
  429a00:	ldr	w8, [x19, #128]
  429a04:	add	w8, w8, #0x1
  429a08:	str	w8, [x19, #128]
  429a0c:	stp	w22, w20, [sp, #8]
  429a10:	str	w23, [sp, #16]
  429a14:	str	x21, [sp, #24]
  429a18:	ldr	x0, [x19, #88]
  429a1c:	add	x1, sp, #0x8
  429a20:	mov	w2, #0x1                   	// #1
  429a24:	bl	44fc2c <feof@plt+0x4d25c>
  429a28:	ldr	x8, [x0]
  429a2c:	cbnz	x8, 429ae0 <feof@plt+0x27110>
  429a30:	ldp	w8, w9, [x19, #96]
  429a34:	mov	x20, x0
  429a38:	cmp	w8, w9
  429a3c:	b.cc	429aac <feof@plt+0x270dc>  // b.lo, b.ul, b.last
  429a40:	ldr	x8, [x19, #72]
  429a44:	ldr	x21, [x19, #104]
  429a48:	adrp	x10, 450000 <feof@plt+0x4d630>
  429a4c:	add	x10, x10, #0x728
  429a50:	cmp	x8, #0x0
  429a54:	lsl	w11, w9, #1
  429a58:	mov	w12, #0x80                  	// #128
  429a5c:	csel	x8, x10, x8, eq  // eq = none
  429a60:	cmp	w9, #0x0
  429a64:	mov	w13, #0x18                  	// #24
  429a68:	csel	w9, w12, w11, eq  // eq = none
  429a6c:	umull	x1, w9, w13
  429a70:	mov	x0, x21
  429a74:	str	w9, [x19, #100]
  429a78:	blr	x8
  429a7c:	sub	x8, x0, x21
  429a80:	str	x0, [x19, #104]
  429a84:	str	x8, [sp]
  429a88:	ldr	w8, [x19, #100]
  429a8c:	cmp	w8, #0x81
  429a90:	b.cc	429aa8 <feof@plt+0x270d8>  // b.lo, b.ul, b.last
  429a94:	ldr	x0, [x19, #88]
  429a98:	adrp	x1, 429000 <feof@plt+0x26630>
  429a9c:	add	x1, x1, #0xccc
  429aa0:	mov	x2, sp
  429aa4:	bl	44fdf8 <feof@plt+0x4d428>
  429aa8:	ldr	w8, [x19, #96]
  429aac:	ldr	x9, [x19, #104]
  429ab0:	mov	w10, #0x18                  	// #24
  429ab4:	add	w11, w8, #0x1
  429ab8:	umaddl	x9, w8, w10, x9
  429abc:	str	x9, [x20]
  429ac0:	str	w11, [x19, #96]
  429ac4:	ldr	x9, [x19, #104]
  429ac8:	ldr	x11, [sp, #24]
  429acc:	ldur	q0, [sp, #8]
  429ad0:	umaddl	x8, w8, w10, x9
  429ad4:	str	x11, [x8, #16]
  429ad8:	str	q0, [x8]
  429adc:	ldr	x8, [x20]
  429ae0:	ldr	x9, [x19, #104]
  429ae4:	sub	x8, x8, x9
  429ae8:	mov	w9, #0xaaab                	// #43691
  429aec:	lsr	x8, x8, #3
  429af0:	movk	w9, #0xaaaa, lsl #16
  429af4:	mul	w8, w8, w9
  429af8:	orr	w23, w8, #0x80000000
  429afc:	mov	w0, w23
  429b00:	ldp	x20, x19, [sp, #80]
  429b04:	ldp	x22, x21, [sp, #64]
  429b08:	ldp	x24, x23, [sp, #48]
  429b0c:	ldp	x29, x30, [sp, #32]
  429b10:	add	sp, sp, #0x60
  429b14:	ret
  429b18:	ldr	w9, [x19, #124]
  429b1c:	orr	w23, w8, w20
  429b20:	add	w8, w9, #0x1
  429b24:	str	w8, [x19, #124]
  429b28:	b	429afc <feof@plt+0x2712c>
  429b2c:	tbz	w1, #31, 429b48 <feof@plt+0x27178>
  429b30:	ldr	x8, [x0, #104]
  429b34:	and	w9, w1, #0x7fffffff
  429b38:	mov	w10, #0x18                  	// #24
  429b3c:	umull	x9, w9, w10
  429b40:	ldr	w1, [x8, x9]
  429b44:	tbnz	w1, #31, 429c3c <feof@plt+0x2726c>
  429b48:	mov	w8, wzr
  429b4c:	mov	w9, w1
  429b50:	lsr	w10, w9, #28
  429b54:	cmp	w10, #0x7
  429b58:	b.cc	429b7c <feof@plt+0x271ac>  // b.lo, b.ul, b.last
  429b5c:	tbnz	w9, #31, 429b7c <feof@plt+0x271ac>
  429b60:	cbz	w8, 429bc8 <feof@plt+0x271f8>
  429b64:	ldr	x8, [x0, #104]
  429b68:	and	w9, w1, #0x7fffffff
  429b6c:	mov	w10, #0x18                  	// #24
  429b70:	umull	x9, w9, w10
  429b74:	ldr	w1, [x8, x9]
  429b78:	b	429bcc <feof@plt+0x271fc>
  429b7c:	cbz	w8, 429b94 <feof@plt+0x271c4>
  429b80:	ldr	x8, [x0, #104]
  429b84:	and	w9, w1, #0x7fffffff
  429b88:	mov	w10, #0x18                  	// #24
  429b8c:	umull	x9, w9, w10
  429b90:	ldr	w1, [x8, x9]
  429b94:	mov	x8, xzr
  429b98:	cbz	x0, 429cbc <feof@plt+0x272ec>
  429b9c:	cmp	w1, #0x2
  429ba0:	b.cc	429cbc <feof@plt+0x272ec>  // b.lo, b.ul, b.last
  429ba4:	ldrsw	x10, [x0, #16]
  429ba8:	ldr	x9, [x0]
  429bac:	mov	w8, #0x18                  	// #24
  429bb0:	madd	x8, x10, x8, x9
  429bb4:	ldr	w11, [x8]
  429bb8:	cmp	w1, w11
  429bbc:	b.cs	429c54 <feof@plt+0x27284>  // b.hs, b.nlast
  429bc0:	mov	w11, wzr
  429bc4:	b	429c78 <feof@plt+0x272a8>
  429bc8:	cbz	x0, 429cc4 <feof@plt+0x272f4>
  429bcc:	ldrsw	x10, [x0, #40]
  429bd0:	ldr	x9, [x0, #24]
  429bd4:	add	x8, x9, x10, lsl #5
  429bd8:	ldr	w11, [x8]
  429bdc:	cmp	w1, w11
  429be0:	b.cs	429bec <feof@plt+0x2721c>  // b.hs, b.nlast
  429be4:	ldr	w8, [x0, #36]
  429be8:	b	429c24 <feof@plt+0x27254>
  429bec:	cbz	w10, 429cbc <feof@plt+0x272ec>
  429bf0:	ldur	w11, [x8, #-32]
  429bf4:	cmp	w1, w11
  429bf8:	b.cc	429cbc <feof@plt+0x272ec>  // b.lo, b.ul, b.last
  429bfc:	sub	w8, w10, #0x1
  429c00:	mov	w10, wzr
  429c04:	b	429c24 <feof@plt+0x27254>
  429c08:	add	w11, w10, w8
  429c0c:	lsr	w11, w11, #1
  429c10:	lsl	x12, x11, #5
  429c14:	ldr	w12, [x9, x12]
  429c18:	cmp	w12, w1
  429c1c:	csinc	w10, w10, w11, ls  // ls = plast
  429c20:	csel	w8, w8, w11, hi  // hi = pmore
  429c24:	cmp	w10, w8
  429c28:	b.cc	429c08 <feof@plt+0x27238>  // b.lo, b.ul, b.last
  429c2c:	str	w8, [x0, #40]
  429c30:	sxtw	x8, w8
  429c34:	add	x0, x9, x8, lsl #5
  429c38:	ret
  429c3c:	and	x9, x1, #0x7fffffff
  429c40:	mov	w10, #0x18                  	// #24
  429c44:	mul	x9, x9, x10
  429c48:	ldr	w9, [x8, x9]
  429c4c:	mov	w8, #0x1                   	// #1
  429c50:	b	429b50 <feof@plt+0x27180>
  429c54:	ldr	w12, [x0, #12]
  429c58:	add	w11, w10, #0x1
  429c5c:	cmp	w11, w12
  429c60:	b.eq	429cbc <feof@plt+0x272ec>  // b.none
  429c64:	ldr	w11, [x8, #24]
  429c68:	cmp	w1, w11
  429c6c:	mov	w11, w10
  429c70:	mov	w10, w12
  429c74:	b.cc	429cbc <feof@plt+0x272ec>  // b.lo, b.ul, b.last
  429c78:	sub	w8, w10, w11
  429c7c:	cmp	w8, #0x2
  429c80:	b.cc	429cb0 <feof@plt+0x272e0>  // b.lo, b.ul, b.last
  429c84:	mov	w8, #0x18                  	// #24
  429c88:	add	w12, w11, w10
  429c8c:	lsr	w12, w12, #1
  429c90:	umull	x13, w12, w8
  429c94:	ldr	w13, [x9, x13]
  429c98:	cmp	w13, w1
  429c9c:	csel	w11, w11, w12, hi  // hi = pmore
  429ca0:	csel	w10, w12, w10, hi  // hi = pmore
  429ca4:	sub	w12, w10, w11
  429ca8:	cmp	w12, #0x1
  429cac:	b.hi	429c88 <feof@plt+0x272b8>  // b.pmore
  429cb0:	mov	w8, #0x18                  	// #24
  429cb4:	smaddl	x8, w11, w8, x9
  429cb8:	str	w11, [x0, #16]
  429cbc:	mov	x0, x8
  429cc0:	ret
  429cc4:	mov	x0, xzr
  429cc8:	ret
  429ccc:	ldr	x9, [x0]
  429cd0:	ldr	x10, [x1]
  429cd4:	mov	x8, x0
  429cd8:	mov	w0, #0x1                   	// #1
  429cdc:	add	x9, x10, x9
  429ce0:	str	x9, [x8]
  429ce4:	ret
  429ce8:	ldr	x8, [x0, #104]
  429cec:	and	w9, w1, #0x7fffffff
  429cf0:	mov	w10, #0x18                  	// #24
  429cf4:	umaddl	x8, w9, w10, x8
  429cf8:	ldr	x0, [x8, #16]
  429cfc:	ret
  429d00:	ldr	x8, [x0, #104]
  429d04:	and	w9, w1, #0x7fffffff
  429d08:	mov	w10, #0x18                  	// #24
  429d0c:	umull	x9, w9, w10
  429d10:	ldr	w0, [x8, x9]
  429d14:	ret
  429d18:	stp	x29, x30, [sp, #-32]!
  429d1c:	str	x19, [sp, #16]
  429d20:	mov	w19, w1
  429d24:	mov	x29, sp
  429d28:	tbnz	w1, #31, 429d50 <feof@plt+0x27380>
  429d2c:	cmp	w19, #0x2
  429d30:	b.cc	429dac <feof@plt+0x273dc>  // b.lo, b.ul, b.last
  429d34:	ldr	w8, [x0, #36]
  429d38:	cbz	w8, 429d68 <feof@plt+0x27398>
  429d3c:	ldr	x9, [x0, #24]
  429d40:	sub	w8, w8, #0x1
  429d44:	sbfiz	x8, x8, #5, #32
  429d48:	ldr	w8, [x9, x8]
  429d4c:	b	429d6c <feof@plt+0x2739c>
  429d50:	ldr	x8, [x0, #104]
  429d54:	and	w9, w19, #0x7fffffff
  429d58:	mov	w10, #0x18                  	// #24
  429d5c:	umaddl	x8, w9, w10, x8
  429d60:	ldp	w19, w8, [x8, #4]
  429d64:	b	429db0 <feof@plt+0x273e0>
  429d68:	mov	w8, #0x80000000            	// #-2147483648
  429d6c:	mov	w9, #0x50000000            	// #1342177280
  429d70:	cmp	w19, w9
  429d74:	b.hi	429dac <feof@plt+0x273dc>  // b.pmore
  429d78:	cmp	w8, w19
  429d7c:	b.ls	429dac <feof@plt+0x273dc>  // b.plast
  429d80:	mov	w1, w19
  429d84:	bl	429b2c <feof@plt+0x2715c>
  429d88:	ldrh	w8, [x0, #6]
  429d8c:	mov	w9, #0xffffffff            	// #-1
  429d90:	lsr	x8, x8, #8
  429d94:	lsl	w9, w9, w8
  429d98:	bic	w9, w19, w9
  429d9c:	sub	w19, w19, w9
  429da0:	lsl	w8, w9, w8
  429da4:	add	w8, w19, w8
  429da8:	b	429db0 <feof@plt+0x273e0>
  429dac:	mov	w8, w19
  429db0:	mov	w0, w19
  429db4:	ldr	x19, [sp, #16]
  429db8:	bfi	x0, x8, #32, #32
  429dbc:	ldp	x29, x30, [sp], #32
  429dc0:	ret
  429dc4:	stp	x29, x30, [sp, #-32]!
  429dc8:	str	x19, [sp, #16]
  429dcc:	mov	x29, sp
  429dd0:	tbnz	w1, #31, 429df8 <feof@plt+0x27428>
  429dd4:	mov	w19, w1
  429dd8:	bl	429b2c <feof@plt+0x2715c>
  429ddc:	cbz	x0, 429e00 <feof@plt+0x27430>
  429de0:	ldrb	w8, [x0, #7]
  429de4:	mov	w9, #0xffffffff            	// #-1
  429de8:	lsl	w8, w9, w8
  429dec:	bics	wzr, w19, w8
  429df0:	cset	w0, eq  // eq = none
  429df4:	b	429e04 <feof@plt+0x27434>
  429df8:	mov	w0, wzr
  429dfc:	b	429e04 <feof@plt+0x27434>
  429e00:	mov	w0, #0x1                   	// #1
  429e04:	ldr	x19, [sp, #16]
  429e08:	ldp	x29, x30, [sp], #32
  429e0c:	ret
  429e10:	stp	x29, x30, [sp, #-32]!
  429e14:	str	x19, [sp, #16]
  429e18:	mov	w19, w1
  429e1c:	mov	x29, sp
  429e20:	tbnz	w1, #31, 429e48 <feof@plt+0x27478>
  429e24:	ldr	w8, [x0, #36]
  429e28:	cbz	w8, 429e64 <feof@plt+0x27494>
  429e2c:	ldr	x9, [x0, #24]
  429e30:	sub	w8, w8, #0x1
  429e34:	sbfiz	x8, x8, #5, #32
  429e38:	ldr	w8, [x9, x8]
  429e3c:	cmp	w19, #0x2
  429e40:	b.cs	429e70 <feof@plt+0x274a0>  // b.hs, b.nlast
  429e44:	b	429e90 <feof@plt+0x274c0>
  429e48:	ldr	x8, [x0, #104]
  429e4c:	and	w9, w19, #0x7fffffff
  429e50:	mov	w10, #0x18                  	// #24
  429e54:	umull	x9, w9, w10
  429e58:	ldr	w19, [x8, x9]
  429e5c:	ldr	w8, [x0, #36]
  429e60:	cbnz	w8, 429e2c <feof@plt+0x2745c>
  429e64:	mov	w8, #0x80000000            	// #-2147483648
  429e68:	cmp	w19, #0x2
  429e6c:	b.cc	429e90 <feof@plt+0x274c0>  // b.lo, b.ul, b.last
  429e70:	cmp	w19, w8
  429e74:	b.cs	429e90 <feof@plt+0x274c0>  // b.hs, b.nlast
  429e78:	mov	w1, w19
  429e7c:	bl	429b2c <feof@plt+0x2715c>
  429e80:	ldrb	w8, [x0, #7]
  429e84:	mov	w9, #0xffffffff            	// #-1
  429e88:	lsl	w8, w9, w8
  429e8c:	and	w19, w8, w19
  429e90:	mov	w0, w19
  429e94:	ldr	x19, [sp, #16]
  429e98:	ldp	x29, x30, [sp], #32
  429e9c:	ret
  429ea0:	stp	x29, x30, [sp, #-32]!
  429ea4:	movi	v0.2d, #0x0
  429ea8:	adrp	x8, 450000 <feof@plt+0x4d630>
  429eac:	stp	x20, x19, [sp, #16]
  429eb0:	mov	w19, w1
  429eb4:	add	x8, x8, #0x728
  429eb8:	stp	q0, q0, [x0, #96]
  429ebc:	stp	q0, q0, [x0, #64]
  429ec0:	stp	q0, q0, [x0, #32]
  429ec4:	stp	q0, q0, [x0]
  429ec8:	movi	v0.2s, #0x1
  429ecc:	adrp	x1, 429000 <feof@plt+0x26630>
  429ed0:	adrp	x2, 429000 <feof@plt+0x26630>
  429ed4:	mov	x20, x0
  429ed8:	str	xzr, [x0, #128]
  429edc:	str	x8, [x0, #72]
  429ee0:	str	d0, [x0, #56]
  429ee4:	add	x1, x1, #0x8a4
  429ee8:	add	x2, x2, #0x8c0
  429eec:	mov	w0, #0x64                  	// #100
  429ef0:	mov	x3, xzr
  429ef4:	mov	x29, sp
  429ef8:	bl	44f334 <feof@plt+0x4c964>
  429efc:	str	x0, [x20, #88]
  429f00:	str	w19, [x20, #112]
  429f04:	ldp	x20, x19, [sp, #16]
  429f08:	ldp	x29, x30, [sp], #32
  429f0c:	ret
  429f10:	ldr	w9, [x1, #20]
  429f14:	tbz	w9, #31, 429f2c <feof@plt+0x2755c>
  429f18:	ldr	x8, [x0, #104]
  429f1c:	and	x9, x9, #0x7fffffff
  429f20:	mov	w10, #0x18                  	// #24
  429f24:	mul	x9, x9, x10
  429f28:	ldr	w9, [x8, x9]
  429f2c:	mov	x8, xzr
  429f30:	cbz	x0, 429fc8 <feof@plt+0x275f8>
  429f34:	cmp	w9, #0x2
  429f38:	b.cc	429fc8 <feof@plt+0x275f8>  // b.lo, b.ul, b.last
  429f3c:	ldrsw	x11, [x0, #16]
  429f40:	ldr	x10, [x0]
  429f44:	mov	w8, #0x18                  	// #24
  429f48:	madd	x8, x11, x8, x10
  429f4c:	ldr	w12, [x8]
  429f50:	cmp	w9, w12
  429f54:	b.cs	429f60 <feof@plt+0x27590>  // b.hs, b.nlast
  429f58:	mov	w12, wzr
  429f5c:	b	429f84 <feof@plt+0x275b4>
  429f60:	ldr	w13, [x0, #12]
  429f64:	add	w12, w11, #0x1
  429f68:	cmp	w12, w13
  429f6c:	b.eq	429fc8 <feof@plt+0x275f8>  // b.none
  429f70:	ldr	w12, [x8, #24]
  429f74:	cmp	w9, w12
  429f78:	mov	w12, w11
  429f7c:	mov	w11, w13
  429f80:	b.cc	429fc8 <feof@plt+0x275f8>  // b.lo, b.ul, b.last
  429f84:	sub	w8, w11, w12
  429f88:	cmp	w8, #0x2
  429f8c:	b.cc	429fbc <feof@plt+0x275ec>  // b.lo, b.ul, b.last
  429f90:	mov	w8, #0x18                  	// #24
  429f94:	add	w13, w12, w11
  429f98:	lsr	w13, w13, #1
  429f9c:	umull	x14, w13, w8
  429fa0:	ldr	w14, [x10, x14]
  429fa4:	cmp	w14, w9
  429fa8:	csel	w12, w12, w13, hi  // hi = pmore
  429fac:	csel	w11, w13, w11, hi  // hi = pmore
  429fb0:	sub	w13, w11, w12
  429fb4:	cmp	w13, #0x1
  429fb8:	b.hi	429f94 <feof@plt+0x275c4>  // b.pmore
  429fbc:	mov	w8, #0x18                  	// #24
  429fc0:	smaddl	x8, w12, w8, x10
  429fc4:	str	w12, [x0, #16]
  429fc8:	mov	x0, x8
  429fcc:	ret
  429fd0:	stp	x29, x30, [sp, #-64]!
  429fd4:	stp	x22, x21, [sp, #32]
  429fd8:	stp	x20, x19, [sp, #48]
  429fdc:	ldr	w8, [x0, #12]
  429fe0:	ldr	x9, [x0]
  429fe4:	mov	w21, #0x18                  	// #24
  429fe8:	str	x23, [sp, #16]
  429fec:	sub	w8, w8, #0x1
  429ff0:	smaddl	x11, w8, w21, x9
  429ff4:	mov	x23, x11
  429ff8:	ldr	w8, [x23, #20]!
  429ffc:	mov	x29, sp
  42a000:	cbnz	w8, 42a018 <feof@plt+0x27648>
  42a004:	ldp	x20, x19, [sp, #48]
  42a008:	ldp	x22, x21, [sp, #32]
  42a00c:	ldr	x23, [sp, #16]
  42a010:	ldp	x29, x30, [sp], #64
  42a014:	ret
  42a018:	adrp	x20, 45d000 <_obstack_memory_used@@Base+0xca68>
  42a01c:	mov	x19, x0
  42a020:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x25a68>
  42a024:	add	x20, x20, #0xa8f
  42a028:	ldr	x0, [x22, #1336]
  42a02c:	ldr	x2, [x11, #8]
  42a030:	mov	x1, x20
  42a034:	bl	402440 <fprintf@plt>
  42a038:	ldr	w8, [x23]
  42a03c:	tbz	w8, #31, 42a050 <feof@plt+0x27680>
  42a040:	ldr	x9, [x19, #104]
  42a044:	and	x8, x8, #0x7fffffff
  42a048:	mul	x8, x8, x21
  42a04c:	ldr	w8, [x9, x8]
  42a050:	cmp	w8, #0x2
  42a054:	b.cs	42a060 <feof@plt+0x27690>  // b.hs, b.nlast
  42a058:	mov	x11, xzr
  42a05c:	b	42a0e0 <feof@plt+0x27710>
  42a060:	ldrsw	x10, [x19, #16]
  42a064:	ldr	x9, [x19]
  42a068:	madd	x11, x10, x21, x9
  42a06c:	ldr	w12, [x11]
  42a070:	cmp	w8, w12
  42a074:	b.cs	42a080 <feof@plt+0x276b0>  // b.hs, b.nlast
  42a078:	mov	w12, wzr
  42a07c:	b	42a0a4 <feof@plt+0x276d4>
  42a080:	ldr	w13, [x19, #12]
  42a084:	add	w12, w10, #0x1
  42a088:	cmp	w12, w13
  42a08c:	b.eq	42a0e0 <feof@plt+0x27710>  // b.none
  42a090:	ldr	w12, [x11, #24]
  42a094:	cmp	w8, w12
  42a098:	mov	w12, w10
  42a09c:	mov	w10, w13
  42a0a0:	b.cc	42a0e0 <feof@plt+0x27710>  // b.lo, b.ul, b.last
  42a0a4:	sub	w11, w10, w12
  42a0a8:	cmp	w11, #0x2
  42a0ac:	b.cc	42a0d8 <feof@plt+0x27708>  // b.lo, b.ul, b.last
  42a0b0:	add	w11, w12, w10
  42a0b4:	lsr	w11, w11, #1
  42a0b8:	umull	x13, w11, w21
  42a0bc:	ldr	w13, [x9, x13]
  42a0c0:	cmp	w13, w8
  42a0c4:	csel	w12, w12, w11, hi  // hi = pmore
  42a0c8:	csel	w10, w11, w10, hi  // hi = pmore
  42a0cc:	sub	w11, w10, w12
  42a0d0:	cmp	w11, #0x1
  42a0d4:	b.hi	42a0b0 <feof@plt+0x276e0>  // b.pmore
  42a0d8:	smaddl	x11, w12, w21, x9
  42a0dc:	str	w12, [x19, #16]
  42a0e0:	mov	x23, x11
  42a0e4:	ldr	w8, [x23, #20]!
  42a0e8:	cbz	w8, 42a004 <feof@plt+0x27634>
  42a0ec:	b	42a028 <feof@plt+0x27658>
  42a0f0:	stp	x29, x30, [sp, #-96]!
  42a0f4:	stp	x28, x27, [sp, #16]
  42a0f8:	stp	x26, x25, [sp, #32]
  42a0fc:	stp	x24, x23, [sp, #48]
  42a100:	stp	x22, x21, [sp, #64]
  42a104:	stp	x20, x19, [sp, #80]
  42a108:	ldr	w8, [x0, #56]
  42a10c:	mov	w21, w4
  42a110:	mov	x24, x3
  42a114:	mov	w22, w2
  42a118:	lsr	w9, w8, #29
  42a11c:	mov	x19, x0
  42a120:	cmp	w9, #0x2
  42a124:	mov	w23, w1
  42a128:	mov	x29, sp
  42a12c:	b.hi	42a150 <feof@plt+0x27780>  // b.pmore
  42a130:	ldr	w10, [x19, #120]
  42a134:	mov	w9, #0x1                   	// #1
  42a138:	lsl	w9, w9, w10
  42a13c:	add	w8, w9, w8
  42a140:	cbz	w10, 42a154 <feof@plt+0x27784>
  42a144:	neg	w9, w9
  42a148:	and	w8, w8, w9
  42a14c:	b	42a154 <feof@plt+0x27784>
  42a150:	add	w8, w8, #0x1
  42a154:	ldr	w26, [x19, #12]
  42a158:	cmp	w23, #0x1
  42a15c:	b.ne	42a190 <feof@plt+0x277c0>  // b.any
  42a160:	cbnz	x24, 42a190 <feof@plt+0x277c0>
  42a164:	ldr	x9, [x19]
  42a168:	sub	w10, w26, #0x1
  42a16c:	mov	w11, #0x18                  	// #24
  42a170:	smaddl	x9, w10, w11, x9
  42a174:	ldr	w9, [x9, #20]
  42a178:	cbnz	w9, 42a190 <feof@plt+0x277c0>
  42a17c:	ldr	w8, [x19, #48]
  42a180:	mov	x20, xzr
  42a184:	sub	w8, w8, #0x1
  42a188:	str	w8, [x19, #48]
  42a18c:	b	42a404 <feof@plt+0x27a34>
  42a190:	ldr	w9, [x19, #8]
  42a194:	lsr	w10, w8, #28
  42a198:	cmp	w10, #0x6
  42a19c:	csel	w25, wzr, w8, hi  // hi = pmore
  42a1a0:	cmp	w26, w9
  42a1a4:	b.ne	42a21c <feof@plt+0x2784c>  // b.any
  42a1a8:	ldr	x10, [x19, #80]
  42a1ac:	lsl	w8, w26, #1
  42a1b0:	cmp	w26, #0x0
  42a1b4:	mov	w9, #0x100                 	// #256
  42a1b8:	ldr	x20, [x19]
  42a1bc:	csel	w8, w9, w8, eq  // eq = none
  42a1c0:	mov	w27, #0x18                  	// #24
  42a1c4:	umull	x0, w8, w27
  42a1c8:	blr	x10
  42a1cc:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42a1d0:	movk	x8, #0xaaab
  42a1d4:	ldr	x9, [x19, #72]
  42a1d8:	umulh	x8, x0, x8
  42a1dc:	lsr	x28, x8, #4
  42a1e0:	ubfx	x8, x8, #4, #32
  42a1e4:	add	x8, x8, w28, uxtw #1
  42a1e8:	lsl	x1, x8, #3
  42a1ec:	mov	x0, x20
  42a1f0:	blr	x9
  42a1f4:	sub	w8, w28, w26
  42a1f8:	mov	x20, x0
  42a1fc:	madd	x0, x26, x27, x0
  42a200:	umull	x2, w8, w27
  42a204:	mov	w1, wzr
  42a208:	bl	4024e0 <memset@plt>
  42a20c:	ldr	w8, [x19, #12]
  42a210:	str	x20, [x19]
  42a214:	str	w28, [x19, #8]
  42a218:	b	42a224 <feof@plt+0x27854>
  42a21c:	ldr	x20, [x19]
  42a220:	mov	w8, w26
  42a224:	mov	w9, #0x18                  	// #24
  42a228:	add	w8, w8, #0x1
  42a22c:	madd	x20, x26, x9, x20
  42a230:	str	w8, [x19, #12]
  42a234:	str	w25, [x20]
  42a238:	strb	w23, [x20, #4]
  42a23c:	cbz	x24, 42a25c <feof@plt+0x2788c>
  42a240:	ldrb	w8, [x24]
  42a244:	cmp	w8, #0x0
  42a248:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0xca68>
  42a24c:	ccmp	w23, #0x3, #0x4, eq  // eq = none
  42a250:	add	x8, x8, #0xabb
  42a254:	csel	x2, x8, x24, ne  // ne = any
  42a258:	b	42a260 <feof@plt+0x27890>
  42a25c:	mov	x2, xzr
  42a260:	cmp	w23, #0x3
  42a264:	mov	w8, #0x2                   	// #2
  42a268:	csel	w8, w8, w23, eq  // eq = none
  42a26c:	cmp	w8, #0x1
  42a270:	b.ne	42a28c <feof@plt+0x278bc>  // b.any
  42a274:	ldur	w10, [x20, #-4]
  42a278:	tbnz	w10, #31, 42a294 <feof@plt+0x278c4>
  42a27c:	cmp	w10, #0x2
  42a280:	b.cs	42a2b0 <feof@plt+0x278e0>  // b.hs, b.nlast
  42a284:	mov	x9, xzr
  42a288:	b	42a33c <feof@plt+0x2796c>
  42a28c:	mov	x9, xzr
  42a290:	b	42a364 <feof@plt+0x27994>
  42a294:	ldr	x9, [x19, #104]
  42a298:	and	x10, x10, #0x7fffffff
  42a29c:	mov	w11, #0x18                  	// #24
  42a2a0:	mul	x10, x10, x11
  42a2a4:	ldr	w10, [x9, x10]
  42a2a8:	cmp	w10, #0x2
  42a2ac:	b.cc	42a284 <feof@plt+0x278b4>  // b.lo, b.ul, b.last
  42a2b0:	ldrsw	x12, [x19, #16]
  42a2b4:	ldr	x11, [x19]
  42a2b8:	mov	w9, #0x18                  	// #24
  42a2bc:	madd	x9, x12, x9, x11
  42a2c0:	ldr	w13, [x9]
  42a2c4:	cmp	w10, w13
  42a2c8:	b.cs	42a318 <feof@plt+0x27948>  // b.hs, b.nlast
  42a2cc:	mov	w13, wzr
  42a2d0:	sub	w9, w12, w13
  42a2d4:	cmp	w9, #0x2
  42a2d8:	b.cc	42a308 <feof@plt+0x27938>  // b.lo, b.ul, b.last
  42a2dc:	mov	w9, #0x18                  	// #24
  42a2e0:	add	w14, w13, w12
  42a2e4:	lsr	w14, w14, #1
  42a2e8:	umull	x15, w14, w9
  42a2ec:	ldr	w15, [x11, x15]
  42a2f0:	cmp	w15, w10
  42a2f4:	csel	w13, w13, w14, hi  // hi = pmore
  42a2f8:	csel	w12, w14, w12, hi  // hi = pmore
  42a2fc:	sub	w14, w12, w13
  42a300:	cmp	w14, #0x1
  42a304:	b.hi	42a2e0 <feof@plt+0x27910>  // b.pmore
  42a308:	mov	w9, #0x18                  	// #24
  42a30c:	smaddl	x9, w13, w9, x11
  42a310:	str	w13, [x19, #16]
  42a314:	b	42a33c <feof@plt+0x2796c>
  42a318:	ldr	w14, [x19, #12]
  42a31c:	add	w13, w12, #0x1
  42a320:	cmp	w13, w14
  42a324:	b.eq	42a33c <feof@plt+0x2796c>  // b.none
  42a328:	ldr	w13, [x9, #24]
  42a32c:	cmp	w10, w13
  42a330:	mov	w13, w12
  42a334:	mov	w12, w14
  42a338:	b.cs	42a2d0 <feof@plt+0x27900>  // b.hs, b.nlast
  42a33c:	cbnz	x2, 42a364 <feof@plt+0x27994>
  42a340:	ldr	w10, [x9, #24]
  42a344:	ldr	w11, [x9]
  42a348:	ldrb	w12, [x9, #6]
  42a34c:	ldr	w13, [x9, #16]
  42a350:	ldr	x2, [x9, #8]
  42a354:	ldrb	w22, [x9, #5]
  42a358:	sub	w10, w10, w11
  42a35c:	lsr	w10, w10, w12
  42a360:	add	w21, w10, w13
  42a364:	strb	w22, [x20, #5]
  42a368:	str	x2, [x20, #8]
  42a36c:	str	w21, [x20, #16]
  42a370:	ldr	w10, [x19, #12]
  42a374:	cmp	w8, #0x2
  42a378:	sub	w10, w10, #0x1
  42a37c:	str	w10, [x19, #16]
  42a380:	strh	wzr, [x20, #6]
  42a384:	stp	w25, w25, [x19, #56]
  42a388:	str	wzr, [x19, #64]
  42a38c:	b.eq	42a3c4 <feof@plt+0x279f4>  // b.none
  42a390:	cbnz	w8, 42a3cc <feof@plt+0x279fc>
  42a394:	ldr	w21, [x19, #48]
  42a398:	cbz	w21, 42a3ec <feof@plt+0x27a1c>
  42a39c:	ldur	w8, [x20, #-24]
  42a3a0:	ldr	w9, [x20]
  42a3a4:	ldurb	w10, [x20, #-18]
  42a3a8:	mov	w11, #0xffffffff            	// #-1
  42a3ac:	mvn	w12, w8
  42a3b0:	add	w9, w9, w12
  42a3b4:	lsl	w10, w11, w10
  42a3b8:	and	w9, w10, w9
  42a3bc:	add	w8, w9, w8
  42a3c0:	b	42a3f0 <feof@plt+0x27a20>
  42a3c4:	ldur	w8, [x20, #-4]
  42a3c8:	b	42a3e4 <feof@plt+0x27a14>
  42a3cc:	cmp	w8, #0x1
  42a3d0:	b.ne	42a404 <feof@plt+0x27a34>  // b.any
  42a3d4:	ldr	w8, [x19, #48]
  42a3d8:	sub	w8, w8, #0x1
  42a3dc:	str	w8, [x19, #48]
  42a3e0:	ldr	w8, [x9, #20]
  42a3e4:	str	w8, [x20, #20]
  42a3e8:	b	42a404 <feof@plt+0x27a34>
  42a3ec:	mov	w8, wzr
  42a3f0:	str	w8, [x20, #20]
  42a3f4:	ldrb	w8, [x19, #52]
  42a3f8:	add	w9, w21, #0x1
  42a3fc:	str	w9, [x19, #48]
  42a400:	cbnz	w8, 42a424 <feof@plt+0x27a54>
  42a404:	mov	x0, x20
  42a408:	ldp	x20, x19, [sp, #80]
  42a40c:	ldp	x22, x21, [sp, #64]
  42a410:	ldp	x24, x23, [sp, #48]
  42a414:	ldp	x26, x25, [sp, #32]
  42a418:	ldp	x28, x27, [sp, #16]
  42a41c:	ldp	x29, x30, [sp], #96
  42a420:	ret
  42a424:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  42a428:	ldr	x0, [x19, #1336]
  42a42c:	cbz	w21, 42a46c <feof@plt+0x27a9c>
  42a430:	mov	w22, #0x2e                  	// #46
  42a434:	ldp	x8, x9, [x0, #40]
  42a438:	cmp	x8, x9
  42a43c:	b.cs	42a45c <feof@plt+0x27a8c>  // b.hs, b.nlast
  42a440:	add	x9, x8, #0x1
  42a444:	str	x9, [x0, #40]
  42a448:	strb	w22, [x8]
  42a44c:	ldr	x0, [x19, #1336]
  42a450:	subs	w21, w21, #0x1
  42a454:	b.ne	42a434 <feof@plt+0x27a64>  // b.any
  42a458:	b	42a468 <feof@plt+0x27a98>
  42a45c:	mov	w1, #0x2e                  	// #46
  42a460:	bl	402480 <__overflow@plt>
  42a464:	b	42a44c <feof@plt+0x27a7c>
  42a468:	ldr	x2, [x20, #8]
  42a46c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  42a470:	add	x1, x1, #0xec8
  42a474:	bl	402440 <fprintf@plt>
  42a478:	b	42a404 <feof@plt+0x27a34>
  42a47c:	ldr	x8, [x0, #24]
  42a480:	cmp	x8, #0x0
  42a484:	cset	w0, ne  // ne = any
  42a488:	ret
  42a48c:	stp	x29, x30, [sp, #-80]!
  42a490:	stp	x26, x25, [sp, #16]
  42a494:	stp	x24, x23, [sp, #32]
  42a498:	stp	x22, x21, [sp, #48]
  42a49c:	stp	x20, x19, [sp, #64]
  42a4a0:	ldr	w24, [x0, #36]
  42a4a4:	mov	w21, w3
  42a4a8:	mov	w20, w2
  42a4ac:	mov	x19, x0
  42a4b0:	mov	x22, x1
  42a4b4:	mov	x29, sp
  42a4b8:	cbz	w24, 42a4d0 <feof@plt+0x27b00>
  42a4bc:	ldr	x8, [x19, #24]
  42a4c0:	sub	w9, w24, #0x1
  42a4c4:	sbfiz	x9, x9, #5, #32
  42a4c8:	ldr	w8, [x8, x9]
  42a4cc:	b	42a4d4 <feof@plt+0x27b04>
  42a4d0:	mov	w8, #0x80000000            	// #-2147483648
  42a4d4:	sub	w25, w8, w21
  42a4d8:	lsr	w8, w25, #28
  42a4dc:	cmp	w8, #0x7
  42a4e0:	b.cs	42a4ec <feof@plt+0x27b1c>  // b.hs, b.nlast
  42a4e4:	mov	x23, xzr
  42a4e8:	b	42a5a8 <feof@plt+0x27bd8>
  42a4ec:	ldr	w8, [x19, #32]
  42a4f0:	cmp	w24, w8
  42a4f4:	b.ne	42a554 <feof@plt+0x27b84>  // b.any
  42a4f8:	ldr	x9, [x19, #80]
  42a4fc:	lsl	w8, w24, #1
  42a500:	cmp	w24, #0x0
  42a504:	ldr	x23, [x19, #24]
  42a508:	mov	w10, #0x100                 	// #256
  42a50c:	csel	w8, w10, w8, eq  // eq = none
  42a510:	lsl	x0, x8, #5
  42a514:	blr	x9
  42a518:	ldr	x8, [x19, #72]
  42a51c:	lsr	x26, x0, #5
  42a520:	and	x1, x0, #0x1fffffffe0
  42a524:	mov	x0, x23
  42a528:	blr	x8
  42a52c:	sub	w8, w26, w24
  42a530:	mov	x23, x0
  42a534:	add	x0, x0, x24, lsl #5
  42a538:	lsl	x2, x8, #5
  42a53c:	mov	w1, wzr
  42a540:	bl	4024e0 <memset@plt>
  42a544:	ldr	w8, [x19, #36]
  42a548:	str	x23, [x19, #24]
  42a54c:	str	w26, [x19, #32]
  42a550:	b	42a55c <feof@plt+0x27b8c>
  42a554:	ldr	x23, [x19, #24]
  42a558:	mov	w8, w24
  42a55c:	add	x23, x23, x24, lsl #5
  42a560:	add	w8, w8, #0x1
  42a564:	str	w8, [x19, #36]
  42a568:	str	x22, [x23, #8]
  42a56c:	stp	w25, w21, [x23]
  42a570:	ldr	x8, [x19, #72]
  42a574:	lsl	w9, w21, #1
  42a578:	lsl	x21, x9, #2
  42a57c:	mov	x0, xzr
  42a580:	mov	x1, x21
  42a584:	blr	x8
  42a588:	mov	w1, wzr
  42a58c:	mov	x2, x21
  42a590:	str	x0, [x23, #16]
  42a594:	str	w20, [x23, #24]
  42a598:	bl	4024e0 <memset@plt>
  42a59c:	ldr	w8, [x19, #36]
  42a5a0:	sub	w8, w8, #0x1
  42a5a4:	str	w8, [x19, #40]
  42a5a8:	mov	x0, x23
  42a5ac:	ldp	x20, x19, [sp, #64]
  42a5b0:	ldp	x22, x21, [sp, #48]
  42a5b4:	ldp	x24, x23, [sp, #32]
  42a5b8:	ldp	x26, x25, [sp, #16]
  42a5bc:	ldp	x29, x30, [sp], #80
  42a5c0:	ret
  42a5c4:	ldr	x8, [x0, #16]
  42a5c8:	mov	w10, #0x1                   	// #1
  42a5cc:	lsl	w9, w1, #1
  42a5d0:	bfi	w10, w1, #1, #31
  42a5d4:	str	w2, [x8, w9, uxtw #2]
  42a5d8:	str	w3, [x8, w10, uxtw #2]
  42a5dc:	ldr	w8, [x0]
  42a5e0:	add	w0, w8, w1
  42a5e4:	ret
  42a5e8:	stp	x29, x30, [sp, #-64]!
  42a5ec:	stp	x24, x23, [sp, #16]
  42a5f0:	stp	x22, x21, [sp, #32]
  42a5f4:	stp	x20, x19, [sp, #48]
  42a5f8:	ldr	w9, [x0, #12]
  42a5fc:	ldr	x11, [x0]
  42a600:	mov	w12, #0x18                  	// #24
  42a604:	mov	x19, x0
  42a608:	sub	w9, w9, #0x1
  42a60c:	ldp	w10, w8, [x0, #56]
  42a610:	smaddl	x0, w9, w12, x11
  42a614:	ldr	w13, [x0]
  42a618:	ldrh	w16, [x0, #6]
  42a61c:	ldr	w9, [x0, #16]
  42a620:	mov	w20, w1
  42a624:	sub	w11, w8, w13
  42a628:	lsr	w15, w11, w16
  42a62c:	sub	w9, w1, w9
  42a630:	mov	w21, #0x6fffffff            	// #1879048191
  42a634:	and	w12, w16, #0xff
  42a638:	sub	w14, w9, w15
  42a63c:	lsr	w11, w16, #8
  42a640:	mov	x29, sp
  42a644:	tbnz	w14, #31, 42a698 <feof@plt+0x27cc8>
  42a648:	cmp	w14, #0xb
  42a64c:	mul	w1, w14, w12
  42a650:	sub	w17, w12, w11
  42a654:	cset	w18, lt  // lt = tstop
  42a658:	cmp	w1, #0x3e9
  42a65c:	lsr	w3, w2, w17
  42a660:	cset	w1, lt  // lt = tstop
  42a664:	cbnz	w3, 42a698 <feof@plt+0x27cc8>
  42a668:	orr	w18, w18, w1
  42a66c:	cbz	w18, 42a698 <feof@plt+0x27cc8>
  42a670:	cmp	w2, #0x50
  42a674:	b.hi	42a680 <feof@plt+0x27cb0>  // b.pmore
  42a678:	cmp	w17, #0x9
  42a67c:	b.gt	42a698 <feof@plt+0x27cc8>
  42a680:	mov	w17, #0x1                   	// #1
  42a684:	movk	w17, #0x5000, lsl #16
  42a688:	cmp	w10, w17
  42a68c:	b.cc	42a708 <feof@plt+0x27d38>  // b.lo, b.ul, b.last
  42a690:	cmp	w16, #0xff
  42a694:	b.ls	42a6e8 <feof@plt+0x27d18>  // b.plast
  42a698:	cmp	w2, #0x1, lsl #12
  42a69c:	b.hi	42a714 <feof@plt+0x27d44>  // b.pmore
  42a6a0:	mov	w8, #0x1                   	// #1
  42a6a4:	movk	w8, #0x6000, lsl #16
  42a6a8:	cmp	w10, w8
  42a6ac:	b.cs	42a714 <feof@plt+0x27d44>  // b.hs, b.nlast
  42a6b0:	mov	w8, #0x50000000            	// #1342177280
  42a6b4:	cmp	w10, w8
  42a6b8:	b.hi	42a6c4 <feof@plt+0x27cf4>  // b.pmore
  42a6bc:	ldr	w23, [x19, #120]
  42a6c0:	b	42a6c8 <feof@plt+0x27cf8>
  42a6c4:	mov	w23, wzr
  42a6c8:	mov	w8, #0x6                   	// #6
  42a6cc:	mov	w16, #0x1                   	// #1
  42a6d0:	add	w8, w8, #0x1
  42a6d4:	lsl	w22, w16, w8
  42a6d8:	cmp	w22, w2
  42a6dc:	b.ls	42a6d0 <feof@plt+0x27d00>  // b.plast
  42a6e0:	add	w24, w23, w8
  42a6e4:	b	42a72c <feof@plt+0x27d5c>
  42a6e8:	mov	w16, #0x1                   	// #1
  42a6ec:	movk	w16, #0x6000, lsl #16
  42a6f0:	cmp	w10, w16
  42a6f4:	b.cc	42a708 <feof@plt+0x27d38>  // b.lo, b.ul, b.last
  42a6f8:	cmp	w10, w21
  42a6fc:	b.hi	42a714 <feof@plt+0x27d44>  // b.pmore
  42a700:	ldr	w16, [x19, #64]
  42a704:	cbnz	w16, 42a714 <feof@plt+0x27d44>
  42a708:	ldr	w22, [x19, #64]
  42a70c:	lsl	w9, w14, w12
  42a710:	b	42a788 <feof@plt+0x27db8>
  42a714:	mov	w22, wzr
  42a718:	mov	w24, wzr
  42a71c:	mov	w23, wzr
  42a720:	cmp	w10, w21
  42a724:	mov	w8, wzr
  42a728:	b.hi	42a7b4 <feof@plt+0x27de4>  // b.pmore
  42a72c:	cbnz	w15, 42a754 <feof@plt+0x27d84>
  42a730:	tbnz	w14, #31, 42a754 <feof@plt+0x27d84>
  42a734:	sub	w8, w10, w13
  42a738:	mov	w10, #0xffffffff            	// #-1
  42a73c:	lsl	w10, w10, w12
  42a740:	bic	w8, w8, w10
  42a744:	lsr	w8, w8, w11
  42a748:	sub	w10, w24, w23
  42a74c:	lsr	w8, w8, w10
  42a750:	cbz	w8, 42a7cc <feof@plt+0x27dfc>
  42a754:	ldrb	w2, [x0, #5]
  42a758:	ldr	x3, [x0, #8]
  42a75c:	mov	w1, #0x2                   	// #2
  42a760:	mov	x0, x19
  42a764:	mov	w4, w20
  42a768:	bl	42a0f0 <feof@plt+0x27720>
  42a76c:	ldr	w10, [x0, #16]
  42a770:	mov	w9, w24
  42a774:	ldr	w8, [x0]
  42a778:	bfi	w9, w23, #8, #24
  42a77c:	strh	w9, [x0, #6]
  42a780:	sub	w9, w20, w10
  42a784:	lsl	w9, w9, w24
  42a788:	add	w8, w9, w8
  42a78c:	cmp	w8, w21
  42a790:	b.ls	42a79c <feof@plt+0x27dcc>  // b.plast
  42a794:	mov	w8, wzr
  42a798:	b	42a7b4 <feof@plt+0x27de4>
  42a79c:	ldr	w9, [x19, #56]
  42a7a0:	str	w8, [x19, #60]
  42a7a4:	cmp	w8, w9
  42a7a8:	b.ls	42a7b0 <feof@plt+0x27de0>  // b.plast
  42a7ac:	str	w8, [x19, #56]
  42a7b0:	str	w22, [x19, #64]
  42a7b4:	ldp	x20, x19, [sp, #48]
  42a7b8:	ldp	x22, x21, [sp, #32]
  42a7bc:	ldp	x24, x23, [sp, #16]
  42a7c0:	mov	w0, w8
  42a7c4:	ldp	x29, x30, [sp], #64
  42a7c8:	ret
  42a7cc:	cmp	w23, w11
  42a7d0:	b.lt	42a754 <feof@plt+0x27d84>  // b.tstop
  42a7d4:	mov	w8, w9
  42a7d8:	mov	w9, #0x20                  	// #32
  42a7dc:	sub	x9, x9, w24, sxtw
  42a7e0:	lsr	x8, x8, x9
  42a7e4:	cbz	x8, 42a76c <feof@plt+0x27d9c>
  42a7e8:	b	42a754 <feof@plt+0x27d84>
  42a7ec:	stp	x29, x30, [sp, #-48]!
  42a7f0:	str	x21, [sp, #16]
  42a7f4:	stp	x20, x19, [sp, #32]
  42a7f8:	mov	x19, x0
  42a7fc:	ldp	w0, w8, [x0, #60]
  42a800:	mov	w20, w1
  42a804:	mov	x29, sp
  42a808:	cmp	w8, w1
  42a80c:	b.ls	42a820 <feof@plt+0x27e50>  // b.plast
  42a810:	ldr	w9, [x19, #12]
  42a814:	ldr	x8, [x19]
  42a818:	sub	w9, w9, #0x1
  42a81c:	b	42a884 <feof@plt+0x27eb4>
  42a820:	cmp	w20, #0x1, lsl #12
  42a824:	b.hi	42a8ac <feof@plt+0x27edc>  // b.pmore
  42a828:	mov	w8, #0x60000000            	// #1610612736
  42a82c:	cmp	w0, w8
  42a830:	b.hi	42a8ac <feof@plt+0x27edc>  // b.pmore
  42a834:	ldr	w8, [x19, #12]
  42a838:	ldr	x9, [x19]
  42a83c:	mov	w21, #0x18                  	// #24
  42a840:	add	w2, w20, #0x32
  42a844:	sub	w8, w8, #0x1
  42a848:	smaddl	x8, w8, w21, x9
  42a84c:	ldr	w9, [x8]
  42a850:	ldrb	w10, [x8, #6]
  42a854:	ldr	w8, [x8, #16]
  42a858:	sub	w9, w0, w9
  42a85c:	lsr	w9, w9, w10
  42a860:	add	w1, w9, w8
  42a864:	mov	x0, x19
  42a868:	bl	42a5e8 <feof@plt+0x27c18>
  42a86c:	ldr	w9, [x19, #12]
  42a870:	ldr	x8, [x19]
  42a874:	sub	w9, w9, #0x1
  42a878:	smaddl	x10, w9, w21, x8
  42a87c:	ldrb	w10, [x10, #6]
  42a880:	cbz	w10, 42a8ac <feof@plt+0x27edc>
  42a884:	sxtw	x9, w9
  42a888:	mov	w10, #0x18                  	// #24
  42a88c:	madd	x8, x9, x10, x8
  42a890:	ldrb	w8, [x8, #7]
  42a894:	ldr	w9, [x19, #56]
  42a898:	lsl	w8, w20, w8
  42a89c:	add	w0, w8, w0
  42a8a0:	cmp	w0, w9
  42a8a4:	b.cc	42a8ac <feof@plt+0x27edc>  // b.lo, b.ul, b.last
  42a8a8:	str	w0, [x19, #56]
  42a8ac:	ldp	x20, x19, [sp, #32]
  42a8b0:	ldr	x21, [sp, #16]
  42a8b4:	ldp	x29, x30, [sp], #48
  42a8b8:	ret
  42a8bc:	ldr	w8, [x1, #16]
  42a8c0:	ldrh	w9, [x1, #6]
  42a8c4:	ldr	w10, [x1]
  42a8c8:	sub	w8, w2, w8
  42a8cc:	lsl	w8, w8, w9
  42a8d0:	add	w8, w8, w10
  42a8d4:	mov	w10, #0x60000000            	// #1610612736
  42a8d8:	cmp	w8, w10
  42a8dc:	b.hi	42a8fc <feof@plt+0x27f2c>  // b.pmore
  42a8e0:	and	w10, w9, #0xff
  42a8e4:	mov	w11, #0xffffffff            	// #-1
  42a8e8:	lsl	w10, w11, w10
  42a8ec:	bic	w10, w3, w10
  42a8f0:	lsr	w9, w9, #8
  42a8f4:	lsl	w9, w10, w9
  42a8f8:	add	w8, w9, w8
  42a8fc:	ldr	w9, [x0, #36]
  42a900:	cbz	w9, 42a918 <feof@plt+0x27f48>
  42a904:	ldr	x10, [x0, #24]
  42a908:	sub	w9, w9, #0x1
  42a90c:	sbfiz	x9, x9, #5, #32
  42a910:	ldr	w9, [x10, x9]
  42a914:	b	42a91c <feof@plt+0x27f4c>
  42a918:	mov	w9, #0x80000000            	// #-2147483648
  42a91c:	ldr	w10, [x0, #56]
  42a920:	sub	w11, w9, #0x1
  42a924:	cmp	w8, w9
  42a928:	csel	w8, w8, w11, cc  // cc = lo, ul, last
  42a92c:	cmp	w8, w10
  42a930:	b.ls	42a938 <feof@plt+0x27f68>  // b.plast
  42a934:	str	w8, [x0, #56]
  42a938:	mov	w0, w8
  42a93c:	ret
  42a940:	stp	x29, x30, [sp, #-64]!
  42a944:	stp	x22, x21, [sp, #32]
  42a948:	stp	x20, x19, [sp, #48]
  42a94c:	mov	w21, w2
  42a950:	mov	w19, w1
  42a954:	mov	x20, x0
  42a958:	str	x23, [sp, #16]
  42a95c:	mov	x29, sp
  42a960:	tbz	w1, #31, 42a97c <feof@plt+0x27fac>
  42a964:	ldr	x8, [x20, #104]
  42a968:	and	w9, w19, #0x7fffffff
  42a96c:	mov	w10, #0x18                  	// #24
  42a970:	umull	x9, w9, w10
  42a974:	ldr	w19, [x8, x9]
  42a978:	tbnz	w19, #31, 42aa40 <feof@plt+0x28070>
  42a97c:	mov	w8, w19
  42a980:	lsr	w9, w8, #28
  42a984:	cmp	w9, #0x7
  42a988:	b.cc	42a990 <feof@plt+0x27fc0>  // b.lo, b.ul, b.last
  42a98c:	tbz	w8, #31, 42ab48 <feof@plt+0x28178>
  42a990:	cbz	w21, 42ab48 <feof@plt+0x28178>
  42a994:	cmp	w19, #0x2
  42a998:	b.cc	42ab48 <feof@plt+0x28178>  // b.lo, b.ul, b.last
  42a99c:	mov	x0, x20
  42a9a0:	mov	w1, w19
  42a9a4:	bl	429b2c <feof@plt+0x2715c>
  42a9a8:	ldr	w8, [x0]
  42a9ac:	mov	x22, x0
  42a9b0:	lsr	w9, w8, #28
  42a9b4:	cmp	w9, #0x7
  42a9b8:	b.cs	42aa54 <feof@plt+0x28084>  // b.hs, b.nlast
  42a9bc:	ldrh	w9, [x22, #6]
  42a9c0:	lsr	w10, w9, #8
  42a9c4:	lsl	w11, w21, w10
  42a9c8:	add	w11, w11, w19
  42a9cc:	cmp	w8, w11
  42a9d0:	b.cs	42ab48 <feof@plt+0x28178>  // b.hs, b.nlast
  42a9d4:	ldr	w11, [x22, #16]
  42a9d8:	ldr	w13, [x20, #12]
  42a9dc:	sub	w8, w19, w8
  42a9e0:	mov	w12, #0xffffffff            	// #-1
  42a9e4:	ldr	x14, [x20]
  42a9e8:	lsr	w15, w8, w9
  42a9ec:	lsl	w9, w12, w9
  42a9f0:	bic	w8, w8, w9
  42a9f4:	lsr	w9, w8, w10
  42a9f8:	add	w8, w15, w11
  42a9fc:	sub	w10, w13, #0x1
  42aa00:	mov	w11, #0x18                  	// #24
  42aa04:	smaddl	x11, w10, w11, x14
  42aa08:	cmp	x11, x22
  42aa0c:	b.eq	42aaa4 <feof@plt+0x280d4>  // b.none
  42aa10:	ldrh	w12, [x22, #6]
  42aa14:	ldr	w13, [x22, #24]
  42aa18:	lsr	w10, w12, #8
  42aa1c:	lsl	w14, w21, w10
  42aa20:	add	w14, w14, w19
  42aa24:	cmp	w14, w13
  42aa28:	b.cc	42aab0 <feof@plt+0x280e0>  // b.lo, b.ul, b.last
  42aa2c:	ldr	w10, [x22, #40]
  42aa30:	add	x22, x22, #0x18
  42aa34:	cmp	w8, w10
  42aa38:	b.cs	42aa08 <feof@plt+0x28038>  // b.hs, b.nlast
  42aa3c:	b	42ab48 <feof@plt+0x28178>
  42aa40:	and	x9, x19, #0x7fffffff
  42aa44:	mov	w10, #0x18                  	// #24
  42aa48:	mul	x9, x9, x10
  42aa4c:	ldr	w8, [x8, x9]
  42aa50:	b	42a980 <feof@plt+0x27fb0>
  42aa54:	mov	w23, #0x18                  	// #24
  42aa58:	b	42aa8c <feof@plt+0x280bc>
  42aa5c:	ldr	x9, [x22, #16]
  42aa60:	sub	w8, w19, w8
  42aa64:	lsl	w8, w8, #1
  42aa68:	mov	x0, x20
  42aa6c:	ldr	w19, [x9, w8, uxtw #2]
  42aa70:	mov	w1, w19
  42aa74:	bl	429b2c <feof@plt+0x2715c>
  42aa78:	ldr	w8, [x0]
  42aa7c:	mov	x22, x0
  42aa80:	lsr	w9, w8, #28
  42aa84:	cmp	w9, #0x7
  42aa88:	b.cc	42a9bc <feof@plt+0x27fec>  // b.lo, b.ul, b.last
  42aa8c:	tbz	w19, #31, 42aa5c <feof@plt+0x2808c>
  42aa90:	ldr	x9, [x20, #104]
  42aa94:	and	w10, w19, #0x7fffffff
  42aa98:	umull	x10, w10, w23
  42aa9c:	ldr	w19, [x9, x10]
  42aaa0:	b	42aa5c <feof@plt+0x2808c>
  42aaa4:	ldrh	w12, [x11, #6]
  42aaa8:	mov	x22, x11
  42aaac:	lsr	w10, w12, #8
  42aab0:	and	w11, w12, #0xff
  42aab4:	add	w9, w9, w21
  42aab8:	sub	w12, w11, w10
  42aabc:	lsr	w12, w9, w12
  42aac0:	cbnz	w12, 42ab48 <feof@plt+0x28178>
  42aac4:	ldr	w12, [x22, #16]
  42aac8:	ldr	w13, [x22]
  42aacc:	sub	w8, w8, w12
  42aad0:	lsl	w8, w8, w11
  42aad4:	add	w8, w8, w13
  42aad8:	mov	w12, #0x60000000            	// #1610612736
  42aadc:	cmp	w8, w12
  42aae0:	b.hi	42aaf8 <feof@plt+0x28128>  // b.pmore
  42aae4:	mov	w12, #0xffffffff            	// #-1
  42aae8:	lsl	w11, w12, w11
  42aaec:	bic	w9, w9, w11
  42aaf0:	lsl	w9, w9, w10
  42aaf4:	add	w8, w8, w9
  42aaf8:	ldr	w9, [x20, #36]
  42aafc:	cbz	w9, 42ab14 <feof@plt+0x28144>
  42ab00:	ldr	x10, [x20, #24]
  42ab04:	sub	w9, w9, #0x1
  42ab08:	sbfiz	x9, x9, #5, #32
  42ab0c:	ldr	w9, [x10, x9]
  42ab10:	b	42ab18 <feof@plt+0x28148>
  42ab14:	mov	w9, #0x80000000            	// #-2147483648
  42ab18:	ldr	w10, [x20, #56]
  42ab1c:	sub	w11, w9, #0x1
  42ab20:	cmp	w8, w9
  42ab24:	csel	w21, w8, w11, cc  // cc = lo, ul, last
  42ab28:	cmp	w21, w10
  42ab2c:	b.ls	42ab34 <feof@plt+0x28164>  // b.plast
  42ab30:	str	w21, [x20, #56]
  42ab34:	mov	x0, x20
  42ab38:	mov	w1, w21
  42ab3c:	bl	429b2c <feof@plt+0x2715c>
  42ab40:	cmp	x22, x0
  42ab44:	csel	w19, w21, w19, eq  // eq = none
  42ab48:	mov	w0, w19
  42ab4c:	ldp	x20, x19, [sp, #48]
  42ab50:	ldp	x22, x21, [sp, #32]
  42ab54:	ldr	x23, [sp, #16]
  42ab58:	ldp	x29, x30, [sp], #64
  42ab5c:	ret
  42ab60:	tbz	w1, #31, 42ab78 <feof@plt+0x281a8>
  42ab64:	ldr	x8, [x0, #104]
  42ab68:	and	w9, w1, #0x7fffffff
  42ab6c:	mov	w10, #0x18                  	// #24
  42ab70:	umull	x9, w9, w10
  42ab74:	ldr	w1, [x8, x9]
  42ab78:	lsr	w8, w1, #28
  42ab7c:	cmp	w8, #0x6
  42ab80:	cset	w8, hi  // hi = pmore
  42ab84:	cmp	w1, #0x0
  42ab88:	cset	w9, ge  // ge = tcont
  42ab8c:	and	w0, w8, w9
  42ab90:	ret
  42ab94:	stp	x29, x30, [sp, #-64]!
  42ab98:	stp	x22, x21, [sp, #32]
  42ab9c:	stp	x20, x19, [sp, #48]
  42aba0:	mov	x20, x3
  42aba4:	mov	w19, w1
  42aba8:	mov	x21, x0
  42abac:	mov	w8, w1
  42abb0:	str	x23, [sp, #16]
  42abb4:	mov	x29, sp
  42abb8:	tbnz	w1, #31, 42abd0 <feof@plt+0x28200>
  42abbc:	cmp	w8, #0x1
  42abc0:	b.hi	42abec <feof@plt+0x2821c>  // b.pmore
  42abc4:	cbz	x20, 42ad24 <feof@plt+0x28354>
  42abc8:	str	xzr, [x20]
  42abcc:	b	42ad24 <feof@plt+0x28354>
  42abd0:	ldr	x8, [x21, #104]
  42abd4:	and	w9, w19, #0x7fffffff
  42abd8:	mov	w10, #0x18                  	// #24
  42abdc:	umull	x9, w9, w10
  42abe0:	ldr	w8, [x8, x9]
  42abe4:	cmp	w8, #0x1
  42abe8:	b.ls	42abc4 <feof@plt+0x281f4>  // b.plast
  42abec:	cmp	w2, #0x2
  42abf0:	b.eq	42acc0 <feof@plt+0x282f0>  // b.none
  42abf4:	cmp	w2, #0x1
  42abf8:	b.eq	42ac60 <feof@plt+0x28290>  // b.none
  42abfc:	cbnz	w2, 42ad3c <feof@plt+0x2836c>
  42ac00:	tbz	w19, #31, 42ac18 <feof@plt+0x28248>
  42ac04:	ldr	x8, [x21, #104]
  42ac08:	and	w9, w19, #0x7fffffff
  42ac0c:	mov	w10, #0x18                  	// #24
  42ac10:	umull	x9, w9, w10
  42ac14:	ldr	w19, [x8, x9]
  42ac18:	mov	x0, x21
  42ac1c:	mov	w1, w19
  42ac20:	bl	429b2c <feof@plt+0x2715c>
  42ac24:	cbz	x0, 42ad1c <feof@plt+0x2834c>
  42ac28:	ldr	w8, [x0]
  42ac2c:	lsr	w8, w8, #28
  42ac30:	cmp	w8, #0x7
  42ac34:	b.cc	42ad1c <feof@plt+0x2834c>  // b.lo, b.ul, b.last
  42ac38:	mov	w22, #0x6fffffff            	// #1879048191
  42ac3c:	ldr	w19, [x0, #24]
  42ac40:	mov	x0, x21
  42ac44:	mov	w1, w19
  42ac48:	bl	429b2c <feof@plt+0x2715c>
  42ac4c:	cbz	x0, 42ad1c <feof@plt+0x2834c>
  42ac50:	ldr	w8, [x0]
  42ac54:	cmp	w8, w22
  42ac58:	b.hi	42ac3c <feof@plt+0x2826c>  // b.pmore
  42ac5c:	b	42ad1c <feof@plt+0x2834c>
  42ac60:	mov	x0, x21
  42ac64:	mov	w1, w19
  42ac68:	bl	429b2c <feof@plt+0x2715c>
  42ac6c:	cbz	x0, 42ad1c <feof@plt+0x2834c>
  42ac70:	mov	w22, #0x18                  	// #24
  42ac74:	b	42ac98 <feof@plt+0x282c8>
  42ac78:	ldr	x9, [x0, #16]
  42ac7c:	sub	w8, w19, w8
  42ac80:	lsl	w8, w8, #1
  42ac84:	mov	x0, x21
  42ac88:	ldr	w19, [x9, w8, uxtw #2]
  42ac8c:	mov	w1, w19
  42ac90:	bl	429b2c <feof@plt+0x2715c>
  42ac94:	cbz	x0, 42ad1c <feof@plt+0x2834c>
  42ac98:	ldr	w8, [x0]
  42ac9c:	lsr	w9, w8, #28
  42aca0:	cmp	w9, #0x6
  42aca4:	b.ls	42ad1c <feof@plt+0x2834c>  // b.plast
  42aca8:	tbz	w19, #31, 42ac78 <feof@plt+0x282a8>
  42acac:	ldr	x9, [x21, #104]
  42acb0:	and	w10, w19, #0x7fffffff
  42acb4:	umull	x10, w10, w22
  42acb8:	ldr	w19, [x9, x10]
  42acbc:	b	42ac78 <feof@plt+0x282a8>
  42acc0:	mov	w23, #0x18                  	// #24
  42acc4:	mov	w22, w19
  42acc8:	tbz	w19, #31, 42ad0c <feof@plt+0x2833c>
  42accc:	b	42acfc <feof@plt+0x2832c>
  42acd0:	ldr	w8, [x0]
  42acd4:	lsr	w9, w8, #28
  42acd8:	cmp	w9, #0x6
  42acdc:	b.ls	42ad1c <feof@plt+0x2834c>  // b.plast
  42ace0:	ldr	x9, [x0, #16]
  42ace4:	sub	w8, w22, w8
  42ace8:	mov	w10, #0x1                   	// #1
  42acec:	bfi	w10, w8, #1, #31
  42acf0:	ldr	w19, [x9, w10, uxtw #2]
  42acf4:	mov	w22, w19
  42acf8:	tbz	w19, #31, 42ad0c <feof@plt+0x2833c>
  42acfc:	ldr	x8, [x21, #104]
  42ad00:	and	w9, w19, #0x7fffffff
  42ad04:	umull	x9, w9, w23
  42ad08:	ldr	w22, [x8, x9]
  42ad0c:	mov	x0, x21
  42ad10:	mov	w1, w22
  42ad14:	bl	429b2c <feof@plt+0x2715c>
  42ad18:	cbnz	x0, 42acd0 <feof@plt+0x28300>
  42ad1c:	cbz	x20, 42ad24 <feof@plt+0x28354>
  42ad20:	str	x0, [x20]
  42ad24:	mov	w0, w19
  42ad28:	ldp	x20, x19, [sp, #48]
  42ad2c:	ldp	x22, x21, [sp, #32]
  42ad30:	ldr	x23, [sp, #16]
  42ad34:	ldp	x29, x30, [sp], #64
  42ad38:	ret
  42ad3c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42ad40:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42ad44:	add	x0, x0, #0xac3
  42ad48:	add	x2, x2, #0xaf5
  42ad4c:	mov	w1, #0x621                 	// #1569
  42ad50:	bl	404ac4 <feof@plt+0x20f4>
  42ad54:	cbz	x0, 42ad68 <feof@plt+0x28398>
  42ad58:	ldr	w8, [x0]
  42ad5c:	lsr	w8, w8, #28
  42ad60:	cmp	w8, #0x6
  42ad64:	cset	w0, hi  // hi = pmore
  42ad68:	ret
  42ad6c:	tbz	w2, #31, 42ad84 <feof@plt+0x283b4>
  42ad70:	ldr	x8, [x0, #104]
  42ad74:	and	w9, w2, #0x7fffffff
  42ad78:	mov	w10, #0x18                  	// #24
  42ad7c:	umull	x9, w9, w10
  42ad80:	ldr	w2, [x8, x9]
  42ad84:	ldr	w8, [x1]
  42ad88:	ldr	x9, [x1, #16]
  42ad8c:	sub	w8, w2, w8
  42ad90:	lsl	w8, w8, #1
  42ad94:	ldr	w0, [x9, w8, uxtw #2]
  42ad98:	ret
  42ad9c:	stp	x29, x30, [sp, #-48]!
  42ada0:	stp	x20, x19, [sp, #32]
  42ada4:	mov	w19, w1
  42ada8:	mov	x20, x0
  42adac:	str	x21, [sp, #16]
  42adb0:	mov	x29, sp
  42adb4:	tbnz	w1, #31, 42adc8 <feof@plt+0x283f8>
  42adb8:	cmp	w19, #0x2
  42adbc:	b.cs	42ade4 <feof@plt+0x28414>  // b.hs, b.nlast
  42adc0:	mov	w0, wzr
  42adc4:	b	42ae4c <feof@plt+0x2847c>
  42adc8:	ldr	x8, [x20, #104]
  42adcc:	and	w9, w19, #0x7fffffff
  42add0:	mov	w10, #0x18                  	// #24
  42add4:	umull	x9, w9, w10
  42add8:	ldr	w19, [x8, x9]
  42addc:	cmp	w19, #0x2
  42ade0:	b.cc	42adc0 <feof@plt+0x283f0>  // b.lo, b.ul, b.last
  42ade4:	tbz	w19, #31, 42adfc <feof@plt+0x2842c>
  42ade8:	ldr	x8, [x20, #104]
  42adec:	and	w9, w19, #0x7fffffff
  42adf0:	mov	w10, #0x18                  	// #24
  42adf4:	umull	x9, w9, w10
  42adf8:	ldr	w19, [x8, x9]
  42adfc:	mov	x0, x20
  42ae00:	mov	w1, w19
  42ae04:	bl	429b2c <feof@plt+0x2715c>
  42ae08:	ldr	w8, [x0]
  42ae0c:	lsr	w9, w8, #28
  42ae10:	cmp	w9, #0x7
  42ae14:	b.cc	42ae38 <feof@plt+0x28468>  // b.lo, b.ul, b.last
  42ae18:	mov	w21, #0x6fffffff            	// #1879048191
  42ae1c:	ldr	w19, [x0, #24]
  42ae20:	mov	x0, x20
  42ae24:	mov	w1, w19
  42ae28:	bl	429b2c <feof@plt+0x2715c>
  42ae2c:	ldr	w8, [x0]
  42ae30:	cmp	w8, w21
  42ae34:	b.hi	42ae1c <feof@plt+0x2844c>  // b.pmore
  42ae38:	ldrb	w9, [x0, #6]
  42ae3c:	ldr	w10, [x0, #16]
  42ae40:	sub	w8, w19, w8
  42ae44:	lsr	w8, w8, w9
  42ae48:	add	w0, w8, w10
  42ae4c:	ldp	x20, x19, [sp, #32]
  42ae50:	ldr	x21, [sp, #16]
  42ae54:	ldp	x29, x30, [sp], #48
  42ae58:	ret
  42ae5c:	stp	x29, x30, [sp, #-32]!
  42ae60:	stp	x20, x19, [sp, #16]
  42ae64:	mov	x19, x0
  42ae68:	mov	x29, sp
  42ae6c:	tbnz	w1, #31, 42ae80 <feof@plt+0x284b0>
  42ae70:	cmp	w1, #0x2
  42ae74:	b.cs	42ae9c <feof@plt+0x284cc>  // b.hs, b.nlast
  42ae78:	mov	x0, xzr
  42ae7c:	b	42aeec <feof@plt+0x2851c>
  42ae80:	ldr	x8, [x19, #104]
  42ae84:	and	w9, w1, #0x7fffffff
  42ae88:	mov	w10, #0x18                  	// #24
  42ae8c:	umull	x9, w9, w10
  42ae90:	ldr	w1, [x8, x9]
  42ae94:	cmp	w1, #0x2
  42ae98:	b.cc	42ae78 <feof@plt+0x284a8>  // b.lo, b.ul, b.last
  42ae9c:	tbz	w1, #31, 42aeb4 <feof@plt+0x284e4>
  42aea0:	ldr	x8, [x19, #104]
  42aea4:	and	w9, w1, #0x7fffffff
  42aea8:	mov	w10, #0x18                  	// #24
  42aeac:	umull	x9, w9, w10
  42aeb0:	ldr	w1, [x8, x9]
  42aeb4:	mov	x0, x19
  42aeb8:	bl	429b2c <feof@plt+0x2715c>
  42aebc:	ldr	w8, [x0]
  42aec0:	lsr	w8, w8, #28
  42aec4:	cmp	w8, #0x7
  42aec8:	b.cc	42aee8 <feof@plt+0x28518>  // b.lo, b.ul, b.last
  42aecc:	mov	w20, #0x6fffffff            	// #1879048191
  42aed0:	ldr	w1, [x0, #24]
  42aed4:	mov	x0, x19
  42aed8:	bl	429b2c <feof@plt+0x2715c>
  42aedc:	ldr	w8, [x0]
  42aee0:	cmp	w8, w20
  42aee4:	b.hi	42aed0 <feof@plt+0x28500>  // b.pmore
  42aee8:	ldr	x0, [x0, #8]
  42aeec:	ldp	x20, x19, [sp, #16]
  42aef0:	ldp	x29, x30, [sp], #32
  42aef4:	ret
  42aef8:	ldr	x8, [x0, #8]
  42aefc:	ldr	x0, [x8]
  42af00:	ret
  42af04:	stp	x29, x30, [sp, #-48]!
  42af08:	stp	x20, x19, [sp, #32]
  42af0c:	mov	w20, w1
  42af10:	mov	x19, x0
  42af14:	str	x21, [sp, #16]
  42af18:	mov	x29, sp
  42af1c:	tbnz	w1, #31, 42af30 <feof@plt+0x28560>
  42af20:	cmp	w20, #0x2
  42af24:	b.cs	42af4c <feof@plt+0x2857c>  // b.hs, b.nlast
  42af28:	mov	w0, wzr
  42af2c:	b	42afbc <feof@plt+0x285ec>
  42af30:	ldr	x8, [x19, #104]
  42af34:	and	w9, w20, #0x7fffffff
  42af38:	mov	w10, #0x18                  	// #24
  42af3c:	umull	x9, w9, w10
  42af40:	ldr	w20, [x8, x9]
  42af44:	cmp	w20, #0x2
  42af48:	b.cc	42af28 <feof@plt+0x28558>  // b.lo, b.ul, b.last
  42af4c:	mov	x0, x19
  42af50:	mov	w1, w20
  42af54:	bl	429b2c <feof@plt+0x2715c>
  42af58:	cbz	x0, 42afbc <feof@plt+0x285ec>
  42af5c:	mov	w21, #0x18                  	// #24
  42af60:	b	42af74 <feof@plt+0x285a4>
  42af64:	mov	x0, x19
  42af68:	mov	w1, w20
  42af6c:	bl	429b2c <feof@plt+0x2715c>
  42af70:	cbz	x0, 42afbc <feof@plt+0x285ec>
  42af74:	ldr	w8, [x0]
  42af78:	lsr	w9, w8, #28
  42af7c:	cmp	w9, #0x6
  42af80:	b.ls	42afb8 <feof@plt+0x285e8>  // b.plast
  42af84:	tbz	w20, #31, 42af98 <feof@plt+0x285c8>
  42af88:	ldr	x9, [x19, #104]
  42af8c:	and	w10, w20, #0x7fffffff
  42af90:	umull	x10, w10, w21
  42af94:	ldr	w20, [x9, x10]
  42af98:	ldr	x9, [x0, #16]
  42af9c:	sub	w8, w20, w8
  42afa0:	lsl	w8, w8, #1
  42afa4:	ldr	w20, [x9, w8, uxtw #2]
  42afa8:	cmp	w20, #0x1
  42afac:	b.hi	42af64 <feof@plt+0x28594>  // b.pmore
  42afb0:	ldr	w20, [x0, #24]
  42afb4:	b	42af64 <feof@plt+0x28594>
  42afb8:	ldrb	w0, [x0, #5]
  42afbc:	ldp	x20, x19, [sp, #32]
  42afc0:	ldr	x21, [sp, #16]
  42afc4:	ldp	x29, x30, [sp], #48
  42afc8:	ret
  42afcc:	stp	x29, x30, [sp, #-80]!
  42afd0:	stp	x22, x21, [sp, #48]
  42afd4:	stp	x20, x19, [sp, #64]
  42afd8:	mov	w20, w2
  42afdc:	mov	w21, w1
  42afe0:	mov	x19, x0
  42afe4:	mov	w22, w1
  42afe8:	str	x25, [sp, #16]
  42afec:	stp	x24, x23, [sp, #32]
  42aff0:	mov	x29, sp
  42aff4:	tbnz	w1, #31, 42b010 <feof@plt+0x28640>
  42aff8:	mov	w23, w20
  42affc:	tbnz	w20, #31, 42b02c <feof@plt+0x2865c>
  42b000:	cmp	w22, w23
  42b004:	b.ne	42b048 <feof@plt+0x28678>  // b.any
  42b008:	mov	w0, wzr
  42b00c:	b	42b25c <feof@plt+0x2888c>
  42b010:	ldr	x8, [x19, #104]
  42b014:	and	w9, w21, #0x7fffffff
  42b018:	mov	w10, #0x18                  	// #24
  42b01c:	umull	x9, w9, w10
  42b020:	ldr	w22, [x8, x9]
  42b024:	mov	w23, w20
  42b028:	tbz	w20, #31, 42b000 <feof@plt+0x28630>
  42b02c:	ldr	x8, [x19, #104]
  42b030:	and	w9, w20, #0x7fffffff
  42b034:	mov	w10, #0x18                  	// #24
  42b038:	umull	x9, w9, w10
  42b03c:	ldr	w23, [x8, x9]
  42b040:	cmp	w22, w23
  42b044:	b.eq	42b008 <feof@plt+0x28638>  // b.none
  42b048:	mov	w24, w22
  42b04c:	tbz	w22, #31, 42b064 <feof@plt+0x28694>
  42b050:	ldr	x8, [x19, #104]
  42b054:	and	w9, w22, #0x7fffffff
  42b058:	mov	w10, #0x18                  	// #24
  42b05c:	umull	x9, w9, w10
  42b060:	ldr	w24, [x8, x9]
  42b064:	lsr	w8, w24, #28
  42b068:	cmp	w8, #0x7
  42b06c:	mov	w25, #0x6fffffff            	// #1879048191
  42b070:	b.cc	42b09c <feof@plt+0x286cc>  // b.lo, b.ul, b.last
  42b074:	tbnz	w24, #31, 42b09c <feof@plt+0x286cc>
  42b078:	mov	w8, w22
  42b07c:	tbz	w22, #31, 42b094 <feof@plt+0x286c4>
  42b080:	ldr	x8, [x19, #104]
  42b084:	and	w9, w22, #0x7fffffff
  42b088:	mov	w10, #0x18                  	// #24
  42b08c:	umull	x9, w9, w10
  42b090:	ldr	w8, [x8, x9]
  42b094:	cmp	w8, #0x2
  42b098:	b.cs	42b1d8 <feof@plt+0x28808>  // b.hs, b.nlast
  42b09c:	mov	w8, w23
  42b0a0:	tbnz	w23, #31, 42b0b0 <feof@plt+0x286e0>
  42b0a4:	cmp	w8, w25
  42b0a8:	b.hi	42b0cc <feof@plt+0x286fc>  // b.pmore
  42b0ac:	b	42b198 <feof@plt+0x287c8>
  42b0b0:	ldr	x8, [x19, #104]
  42b0b4:	and	w9, w23, #0x7fffffff
  42b0b8:	mov	w10, #0x18                  	// #24
  42b0bc:	umull	x9, w9, w10
  42b0c0:	ldr	w8, [x8, x9]
  42b0c4:	cmp	w8, w25
  42b0c8:	b.ls	42b198 <feof@plt+0x287c8>  // b.plast
  42b0cc:	tbnz	w8, #31, 42b198 <feof@plt+0x287c8>
  42b0d0:	mov	w8, w23
  42b0d4:	tbz	w23, #31, 42b0ec <feof@plt+0x2871c>
  42b0d8:	ldr	x8, [x19, #104]
  42b0dc:	and	w9, w23, #0x7fffffff
  42b0e0:	mov	w10, #0x18                  	// #24
  42b0e4:	umull	x9, w9, w10
  42b0e8:	ldr	w8, [x8, x9]
  42b0ec:	cmp	w8, #0x2
  42b0f0:	b.cs	42b214 <feof@plt+0x28844>  // b.hs, b.nlast
  42b0f4:	cmp	w22, w23
  42b0f8:	b.ne	42b198 <feof@plt+0x287c8>  // b.any
  42b0fc:	cmp	w24, w25
  42b100:	b.ls	42b198 <feof@plt+0x287c8>  // b.plast
  42b104:	tbnz	w24, #31, 42b198 <feof@plt+0x287c8>
  42b108:	mov	x0, x19
  42b10c:	mov	w1, w21
  42b110:	bl	429b2c <feof@plt+0x2715c>
  42b114:	mov	x22, x0
  42b118:	mov	x0, x19
  42b11c:	mov	w1, w20
  42b120:	bl	429b2c <feof@plt+0x2715c>
  42b124:	cbz	x22, 42b274 <feof@plt+0x288a4>
  42b128:	mov	x23, x0
  42b12c:	b	42b148 <feof@plt+0x28778>
  42b130:	ldr	w21, [x22, #24]
  42b134:	mov	x0, x19
  42b138:	mov	w1, w21
  42b13c:	bl	429b2c <feof@plt+0x2715c>
  42b140:	mov	x22, x0
  42b144:	cbz	x0, 42b274 <feof@plt+0x288a4>
  42b148:	cbz	x23, 42b250 <feof@plt+0x28880>
  42b14c:	ldr	w8, [x22]
  42b150:	lsr	w9, w8, #28
  42b154:	cmp	w9, #0x7
  42b158:	b.cc	42b250 <feof@plt+0x28880>  // b.lo, b.ul, b.last
  42b15c:	cmp	x22, x23
  42b160:	b.eq	42b250 <feof@plt+0x28880>  // b.none
  42b164:	ldr	w9, [x23]
  42b168:	lsr	w10, w9, #28
  42b16c:	cmp	w10, #0x7
  42b170:	b.cc	42b250 <feof@plt+0x28880>  // b.lo, b.ul, b.last
  42b174:	cmp	w8, w9
  42b178:	b.cc	42b130 <feof@plt+0x28760>  // b.lo, b.ul, b.last
  42b17c:	ldr	w20, [x23, #24]
  42b180:	mov	x0, x19
  42b184:	mov	w1, w20
  42b188:	bl	429b2c <feof@plt+0x2715c>
  42b18c:	mov	x23, x0
  42b190:	cbnz	x22, 42b148 <feof@plt+0x28778>
  42b194:	b	42b274 <feof@plt+0x288a4>
  42b198:	tbnz	w22, #31, 42b1a8 <feof@plt+0x287d8>
  42b19c:	tbnz	w23, #31, 42b1c0 <feof@plt+0x287f0>
  42b1a0:	sub	w0, w23, w22
  42b1a4:	b	42b25c <feof@plt+0x2888c>
  42b1a8:	ldr	x8, [x19, #104]
  42b1ac:	and	w9, w22, #0x7fffffff
  42b1b0:	mov	w10, #0x18                  	// #24
  42b1b4:	umull	x9, w9, w10
  42b1b8:	ldr	w22, [x8, x9]
  42b1bc:	tbz	w23, #31, 42b1a0 <feof@plt+0x287d0>
  42b1c0:	ldr	x8, [x19, #104]
  42b1c4:	and	w9, w23, #0x7fffffff
  42b1c8:	mov	w10, #0x18                  	// #24
  42b1cc:	umull	x9, w9, w10
  42b1d0:	ldr	w23, [x8, x9]
  42b1d4:	b	42b1a0 <feof@plt+0x287d0>
  42b1d8:	tbz	w22, #31, 42b1f0 <feof@plt+0x28820>
  42b1dc:	ldr	x8, [x19, #104]
  42b1e0:	and	w9, w22, #0x7fffffff
  42b1e4:	mov	w10, #0x18                  	// #24
  42b1e8:	umull	x9, w9, w10
  42b1ec:	ldr	w22, [x8, x9]
  42b1f0:	mov	x0, x19
  42b1f4:	mov	w1, w22
  42b1f8:	bl	429b2c <feof@plt+0x2715c>
  42b1fc:	cbz	x0, 42b09c <feof@plt+0x286cc>
  42b200:	ldr	w8, [x0]
  42b204:	cmp	w8, w25
  42b208:	b.ls	42b09c <feof@plt+0x286cc>  // b.plast
  42b20c:	ldr	w22, [x0, #24]
  42b210:	b	42b1f0 <feof@plt+0x28820>
  42b214:	tbz	w23, #31, 42b22c <feof@plt+0x2885c>
  42b218:	ldr	x8, [x19, #104]
  42b21c:	and	w9, w23, #0x7fffffff
  42b220:	mov	w10, #0x18                  	// #24
  42b224:	umull	x9, w9, w10
  42b228:	ldr	w23, [x8, x9]
  42b22c:	mov	x0, x19
  42b230:	mov	w1, w23
  42b234:	bl	429b2c <feof@plt+0x2715c>
  42b238:	cbz	x0, 42b0f4 <feof@plt+0x28724>
  42b23c:	ldr	w8, [x0]
  42b240:	cmp	w8, w25
  42b244:	b.ls	42b0f4 <feof@plt+0x28724>  // b.plast
  42b248:	ldr	w23, [x0, #24]
  42b24c:	b	42b22c <feof@plt+0x2885c>
  42b250:	cmp	x22, x23
  42b254:	b.ne	42b274 <feof@plt+0x288a4>  // b.any
  42b258:	sub	w0, w20, w21
  42b25c:	ldp	x20, x19, [sp, #64]
  42b260:	ldp	x22, x21, [sp, #48]
  42b264:	ldp	x24, x23, [sp, #32]
  42b268:	ldr	x25, [sp, #16]
  42b26c:	ldp	x29, x30, [sp], #80
  42b270:	ret
  42b274:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b278:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b27c:	add	x0, x0, #0xac3
  42b280:	add	x2, x2, #0xadb
  42b284:	mov	w1, #0x549                 	// #1353
  42b288:	bl	404ac4 <feof@plt+0x20f4>
  42b28c:	stp	x29, x30, [sp, #-48]!
  42b290:	stp	x20, x19, [sp, #32]
  42b294:	mov	x19, x0
  42b298:	stp	x22, x21, [sp, #16]
  42b29c:	mov	x29, sp
  42b2a0:	tbz	w1, #31, 42b2bc <feof@plt+0x288ec>
  42b2a4:	ldr	x8, [x19, #104]
  42b2a8:	and	w9, w1, #0x7fffffff
  42b2ac:	mov	w10, #0x18                  	// #24
  42b2b0:	umull	x9, w9, w10
  42b2b4:	ldr	w1, [x8, x9]
  42b2b8:	tbnz	w1, #31, 42b360 <feof@plt+0x28990>
  42b2bc:	mov	w8, w1
  42b2c0:	lsr	w9, w8, #28
  42b2c4:	cmp	w9, #0x7
  42b2c8:	mov	w0, wzr
  42b2cc:	b.cc	42b350 <feof@plt+0x28980>  // b.lo, b.ul, b.last
  42b2d0:	tbnz	w8, #31, 42b350 <feof@plt+0x28980>
  42b2d4:	mov	w21, #0x6fffffff            	// #1879048191
  42b2d8:	mov	w22, #0x18                  	// #24
  42b2dc:	mov	x0, x19
  42b2e0:	mov	w20, w1
  42b2e4:	bl	429b2c <feof@plt+0x2715c>
  42b2e8:	mov	w10, w20
  42b2ec:	tbz	w20, #31, 42b300 <feof@plt+0x28930>
  42b2f0:	ldr	x8, [x19, #104]
  42b2f4:	and	w9, w20, #0x7fffffff
  42b2f8:	umull	x9, w9, w22
  42b2fc:	ldr	w10, [x8, x9]
  42b300:	ldr	w9, [x0]
  42b304:	ldr	x8, [x0, #16]
  42b308:	sub	w10, w10, w9
  42b30c:	lsl	w10, w10, #1
  42b310:	ldr	w1, [x8, w10, uxtw #2]
  42b314:	mov	w10, w1
  42b318:	tbz	w1, #31, 42b32c <feof@plt+0x2895c>
  42b31c:	ldr	x10, [x19, #104]
  42b320:	and	x11, x1, #0x7fffffff
  42b324:	mul	x11, x11, x22
  42b328:	ldr	w10, [x10, x11]
  42b32c:	cmp	w10, w21
  42b330:	b.ls	42b338 <feof@plt+0x28968>  // b.plast
  42b334:	tbz	w10, #31, 42b2dc <feof@plt+0x2890c>
  42b338:	sub	w9, w20, w9
  42b33c:	mov	w10, #0x1                   	// #1
  42b340:	bfi	w10, w9, #1, #31
  42b344:	ldr	w8, [x8, w10, uxtw #2]
  42b348:	cmp	w1, w8
  42b34c:	cset	w0, eq  // eq = none
  42b350:	ldp	x20, x19, [sp, #32]
  42b354:	ldp	x22, x21, [sp, #16]
  42b358:	ldp	x29, x30, [sp], #48
  42b35c:	ret
  42b360:	and	x9, x1, #0x7fffffff
  42b364:	mov	w10, #0x18                  	// #24
  42b368:	mul	x9, x9, x10
  42b36c:	ldr	w8, [x8, x9]
  42b370:	b	42b2c0 <feof@plt+0x288f0>
  42b374:	stp	x29, x30, [sp, #-48]!
  42b378:	stp	x22, x21, [sp, #16]
  42b37c:	stp	x20, x19, [sp, #32]
  42b380:	ldr	x22, [x2]
  42b384:	mov	x19, x2
  42b388:	mov	x20, x0
  42b38c:	mov	x29, sp
  42b390:	tbz	w1, #31, 42b3bc <feof@plt+0x289ec>
  42b394:	ldr	x8, [x20, #104]
  42b398:	and	w9, w1, #0x7fffffff
  42b39c:	mov	w10, #0x18                  	// #24
  42b3a0:	umull	x9, w9, w10
  42b3a4:	ldr	w1, [x8, x9]
  42b3a8:	tbz	w1, #31, 42b3bc <feof@plt+0x289ec>
  42b3ac:	and	x9, x1, #0x7fffffff
  42b3b0:	mov	w10, #0x18                  	// #24
  42b3b4:	mul	x9, x9, x10
  42b3b8:	ldr	w1, [x8, x9]
  42b3bc:	ldr	w8, [x22]
  42b3c0:	ldr	x9, [x22, #16]
  42b3c4:	mov	x0, x20
  42b3c8:	sub	w8, w1, w8
  42b3cc:	lsl	w8, w8, #1
  42b3d0:	ldr	w21, [x9, w8, uxtw #2]
  42b3d4:	mov	w1, w21
  42b3d8:	bl	429b2c <feof@plt+0x2715c>
  42b3dc:	cbz	x0, 42b3f0 <feof@plt+0x28a20>
  42b3e0:	ldr	w8, [x0]
  42b3e4:	lsr	w8, w8, #28
  42b3e8:	cmp	w8, #0x6
  42b3ec:	b.hi	42b400 <feof@plt+0x28a30>  // b.pmore
  42b3f0:	ldr	w21, [x22, #24]
  42b3f4:	mov	x0, x20
  42b3f8:	mov	w1, w21
  42b3fc:	bl	429b2c <feof@plt+0x2715c>
  42b400:	str	x0, [x19]
  42b404:	mov	w0, w21
  42b408:	ldp	x20, x19, [sp, #32]
  42b40c:	ldp	x22, x21, [sp, #16]
  42b410:	ldp	x29, x30, [sp], #48
  42b414:	ret
  42b418:	stp	x29, x30, [sp, #-80]!
  42b41c:	stp	x22, x21, [sp, #48]
  42b420:	stp	x20, x19, [sp, #64]
  42b424:	mov	x20, x2
  42b428:	mov	w19, w1
  42b42c:	mov	x21, x0
  42b430:	stp	x26, x25, [sp, #16]
  42b434:	stp	x24, x23, [sp, #32]
  42b438:	mov	x29, sp
  42b43c:	tbz	w1, #31, 42b454 <feof@plt+0x28a84>
  42b440:	ldr	x8, [x21, #104]
  42b444:	and	w9, w19, #0x7fffffff
  42b448:	mov	w10, #0x18                  	// #24
  42b44c:	umull	x9, w9, w10
  42b450:	ldr	w19, [x8, x9]
  42b454:	mov	x0, x21
  42b458:	mov	w1, w19
  42b45c:	bl	429b2c <feof@plt+0x2715c>
  42b460:	cbz	x0, 42b660 <feof@plt+0x28c90>
  42b464:	ldr	w8, [x0]
  42b468:	mov	x22, x0
  42b46c:	lsr	w8, w8, #28
  42b470:	cmp	w8, #0x7
  42b474:	b.cc	42b660 <feof@plt+0x28c90>  // b.lo, b.ul, b.last
  42b478:	mov	w8, w19
  42b47c:	tbnz	w19, #31, 42b490 <feof@plt+0x28ac0>
  42b480:	cmp	w8, #0x2
  42b484:	b.cs	42b4ac <feof@plt+0x28adc>  // b.hs, b.nlast
  42b488:	mov	x0, xzr
  42b48c:	b	42b510 <feof@plt+0x28b40>
  42b490:	ldr	x8, [x21, #104]
  42b494:	and	w9, w19, #0x7fffffff
  42b498:	mov	w10, #0x18                  	// #24
  42b49c:	umull	x9, w9, w10
  42b4a0:	ldr	w8, [x8, x9]
  42b4a4:	cmp	w8, #0x2
  42b4a8:	b.cc	42b488 <feof@plt+0x28ab8>  // b.lo, b.ul, b.last
  42b4ac:	mov	x0, x21
  42b4b0:	mov	w1, w19
  42b4b4:	bl	429b2c <feof@plt+0x2715c>
  42b4b8:	cbz	x0, 42b510 <feof@plt+0x28b40>
  42b4bc:	mov	w24, #0x18                  	// #24
  42b4c0:	mov	w23, w19
  42b4c4:	b	42b4e8 <feof@plt+0x28b18>
  42b4c8:	ldr	x9, [x0, #16]
  42b4cc:	sub	w8, w23, w8
  42b4d0:	lsl	w8, w8, #1
  42b4d4:	mov	x0, x21
  42b4d8:	ldr	w23, [x9, w8, uxtw #2]
  42b4dc:	mov	w1, w23
  42b4e0:	bl	429b2c <feof@plt+0x2715c>
  42b4e4:	cbz	x0, 42b514 <feof@plt+0x28b44>
  42b4e8:	ldr	w8, [x0]
  42b4ec:	lsr	w9, w8, #28
  42b4f0:	cmp	w9, #0x6
  42b4f4:	b.ls	42b514 <feof@plt+0x28b44>  // b.plast
  42b4f8:	tbz	w23, #31, 42b4c8 <feof@plt+0x28af8>
  42b4fc:	ldr	x9, [x21, #104]
  42b500:	and	w10, w23, #0x7fffffff
  42b504:	umull	x10, w10, w24
  42b508:	ldr	w23, [x9, x10]
  42b50c:	b	42b4c8 <feof@plt+0x28af8>
  42b510:	mov	w23, w19
  42b514:	cmp	w23, #0x2
  42b518:	b.cc	42b524 <feof@plt+0x28b54>  // b.lo, b.ul, b.last
  42b51c:	ldrb	w8, [x0, #5]
  42b520:	cbz	w8, 42b660 <feof@plt+0x28c90>
  42b524:	mov	w25, #0x6fffffff            	// #1879048191
  42b528:	mov	w26, #0x18                  	// #24
  42b52c:	b	42b540 <feof@plt+0x28b70>
  42b530:	mov	x0, xzr
  42b534:	mov	w23, w19
  42b538:	mov	x22, x24
  42b53c:	cbz	x24, 42b658 <feof@plt+0x28c88>
  42b540:	ldr	w8, [x22]
  42b544:	cmp	w8, w25
  42b548:	b.ls	42b658 <feof@plt+0x28c88>  // b.plast
  42b54c:	cmp	w23, #0x2
  42b550:	b.cc	42b55c <feof@plt+0x28b8c>  // b.lo, b.ul, b.last
  42b554:	ldrb	w9, [x0, #5]
  42b558:	cbz	w9, 42b658 <feof@plt+0x28c88>
  42b55c:	tbz	w19, #31, 42b580 <feof@plt+0x28bb0>
  42b560:	ldr	x9, [x21, #104]
  42b564:	and	w10, w19, #0x7fffffff
  42b568:	umull	x10, w10, w26
  42b56c:	ldr	w19, [x9, x10]
  42b570:	tbz	w19, #31, 42b580 <feof@plt+0x28bb0>
  42b574:	and	x10, x19, #0x7fffffff
  42b578:	mul	x10, x10, x26
  42b57c:	ldr	w19, [x9, x10]
  42b580:	ldr	x9, [x22, #16]
  42b584:	sub	w8, w19, w8
  42b588:	lsl	w8, w8, #1
  42b58c:	mov	x0, x21
  42b590:	ldr	w19, [x9, w8, uxtw #2]
  42b594:	mov	w1, w19
  42b598:	bl	429b2c <feof@plt+0x2715c>
  42b59c:	cbz	x0, 42b5c4 <feof@plt+0x28bf4>
  42b5a0:	ldr	w8, [x0]
  42b5a4:	mov	x24, x0
  42b5a8:	cmp	w8, w25
  42b5ac:	b.ls	42b5c4 <feof@plt+0x28bf4>  // b.plast
  42b5b0:	mov	w8, w19
  42b5b4:	tbnz	w19, #31, 42b5e0 <feof@plt+0x28c10>
  42b5b8:	cmp	w8, #0x2
  42b5bc:	b.cc	42b530 <feof@plt+0x28b60>  // b.lo, b.ul, b.last
  42b5c0:	b	42b5f8 <feof@plt+0x28c28>
  42b5c4:	ldr	w19, [x22, #24]
  42b5c8:	mov	x0, x21
  42b5cc:	mov	w1, w19
  42b5d0:	bl	429b2c <feof@plt+0x2715c>
  42b5d4:	mov	x24, x0
  42b5d8:	mov	w8, w19
  42b5dc:	tbz	w19, #31, 42b5b8 <feof@plt+0x28be8>
  42b5e0:	ldr	x8, [x21, #104]
  42b5e4:	and	w9, w19, #0x7fffffff
  42b5e8:	umull	x9, w9, w26
  42b5ec:	ldr	w8, [x8, x9]
  42b5f0:	cmp	w8, #0x2
  42b5f4:	b.cc	42b530 <feof@plt+0x28b60>  // b.lo, b.ul, b.last
  42b5f8:	mov	x0, x21
  42b5fc:	mov	w1, w19
  42b600:	bl	429b2c <feof@plt+0x2715c>
  42b604:	mov	w23, w19
  42b608:	cbnz	x0, 42b630 <feof@plt+0x28c60>
  42b60c:	b	42b538 <feof@plt+0x28b68>
  42b610:	ldr	x9, [x0, #16]
  42b614:	sub	w8, w23, w8
  42b618:	lsl	w8, w8, #1
  42b61c:	mov	x0, x21
  42b620:	ldr	w23, [x9, w8, uxtw #2]
  42b624:	mov	w1, w23
  42b628:	bl	429b2c <feof@plt+0x2715c>
  42b62c:	cbz	x0, 42b538 <feof@plt+0x28b68>
  42b630:	ldr	w8, [x0]
  42b634:	lsr	w9, w8, #28
  42b638:	cmp	w9, #0x6
  42b63c:	b.ls	42b538 <feof@plt+0x28b68>  // b.plast
  42b640:	tbz	w23, #31, 42b610 <feof@plt+0x28c40>
  42b644:	ldr	x9, [x21, #104]
  42b648:	and	w10, w23, #0x7fffffff
  42b64c:	umull	x10, w10, w26
  42b650:	ldr	w23, [x9, x10]
  42b654:	b	42b610 <feof@plt+0x28c40>
  42b658:	cbz	x20, 42b660 <feof@plt+0x28c90>
  42b65c:	str	x22, [x20]
  42b660:	mov	w0, w19
  42b664:	ldp	x20, x19, [sp, #64]
  42b668:	ldp	x22, x21, [sp, #48]
  42b66c:	ldp	x24, x23, [sp, #32]
  42b670:	ldp	x26, x25, [sp, #16]
  42b674:	ldp	x29, x30, [sp], #80
  42b678:	ret
  42b67c:	stp	x29, x30, [sp, #-16]!
  42b680:	movi	v0.2d, #0x0
  42b684:	mov	x29, sp
  42b688:	stp	q0, q0, [x8]
  42b68c:	tbnz	w2, #31, 42b6a0 <feof@plt+0x28cd0>
  42b690:	cmp	w2, #0x2
  42b694:	b.cs	42b6c4 <feof@plt+0x28cf4>  // b.hs, b.nlast
  42b698:	ldp	x29, x30, [sp], #16
  42b69c:	ret
  42b6a0:	ldr	x9, [x0, #104]
  42b6a4:	and	w10, w2, #0x7fffffff
  42b6a8:	mov	w11, #0x18                  	// #24
  42b6ac:	umaddl	x9, w10, w11, x9
  42b6b0:	ldr	x10, [x9, #16]
  42b6b4:	str	x10, [x8, #16]
  42b6b8:	ldr	w2, [x9]
  42b6bc:	cmp	w2, #0x2
  42b6c0:	b.cc	42b698 <feof@plt+0x28cc8>  // b.lo, b.ul, b.last
  42b6c4:	cbz	x1, 42b744 <feof@plt+0x28d74>
  42b6c8:	mov	w9, w2
  42b6cc:	tbz	w2, #31, 42b6e4 <feof@plt+0x28d14>
  42b6d0:	ldr	x9, [x0, #104]
  42b6d4:	and	w10, w2, #0x7fffffff
  42b6d8:	mov	w11, #0x18                  	// #24
  42b6dc:	umull	x10, w10, w11
  42b6e0:	ldr	w9, [x9, x10]
  42b6e4:	lsr	w10, w9, #28
  42b6e8:	cmp	w10, #0x7
  42b6ec:	b.cc	42b6f4 <feof@plt+0x28d24>  // b.lo, b.ul, b.last
  42b6f0:	tbz	w9, #31, 42b75c <feof@plt+0x28d8c>
  42b6f4:	ldr	x9, [x1, #8]
  42b6f8:	mov	w11, #0xffffffff            	// #-1
  42b6fc:	str	x9, [x8]
  42b700:	ldr	w9, [x1]
  42b704:	ldrh	w10, [x1, #6]
  42b708:	ldr	w12, [x1, #16]
  42b70c:	sub	w9, w2, w9
  42b710:	lsl	w11, w11, w10
  42b714:	bic	w11, w9, w11
  42b718:	lsr	w9, w9, w10
  42b71c:	lsr	x10, x10, #8
  42b720:	add	w9, w9, w12
  42b724:	lsr	w10, w11, w10
  42b728:	stp	w9, w10, [x8, #8]
  42b72c:	ldrb	w9, [x1, #5]
  42b730:	cmp	w9, #0x0
  42b734:	cset	w9, ne  // ne = any
  42b738:	strb	w9, [x8, #24]
  42b73c:	ldp	x29, x30, [sp], #16
  42b740:	ret
  42b744:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b748:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b74c:	add	x0, x0, #0xac3
  42b750:	add	x2, x2, #0xb0e
  42b754:	mov	w1, #0x6bd                 	// #1725
  42b758:	bl	404ac4 <feof@plt+0x20f4>
  42b75c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b760:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b764:	add	x0, x0, #0xac3
  42b768:	add	x2, x2, #0xb0e
  42b76c:	mov	w1, #0x6c5                 	// #1733
  42b770:	bl	404ac4 <feof@plt+0x20f4>
  42b774:	sub	sp, sp, #0x60
  42b778:	adrp	x8, 452000 <_obstack_memory_used@@Base+0x1a68>
  42b77c:	adrp	x9, 452000 <_obstack_memory_used@@Base+0x1a68>
  42b780:	add	x8, x8, #0x675
  42b784:	add	x9, x9, #0x67e
  42b788:	stp	x29, x30, [sp, #48]
  42b78c:	stp	x22, x21, [sp, #64]
  42b790:	stp	x20, x19, [sp, #80]
  42b794:	stp	x8, x9, [sp, #8]
  42b798:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  42b79c:	ldr	x8, [x8, #1336]
  42b7a0:	adrp	x10, 452000 <_obstack_memory_used@@Base+0x1a68>
  42b7a4:	adrp	x11, 452000 <_obstack_memory_used@@Base+0x1a68>
  42b7a8:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b7ac:	cmp	x0, #0x0
  42b7b0:	mov	x20, x1
  42b7b4:	add	x10, x10, #0x687
  42b7b8:	add	x11, x11, #0x691
  42b7bc:	add	x9, x9, #0xb26
  42b7c0:	csel	x19, x8, x0, eq  // eq = none
  42b7c4:	add	x29, sp, #0x30
  42b7c8:	stp	x10, x11, [sp, #24]
  42b7cc:	str	x9, [sp, #40]
  42b7d0:	tbz	w3, #0, 42b828 <feof@plt+0x28e58>
  42b7d4:	ldr	x8, [x20, #24]
  42b7d8:	sxtw	x9, w2
  42b7dc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b7e0:	adrp	x5, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b7e4:	add	x20, x8, x9, lsl #5
  42b7e8:	ldr	w4, [x20]
  42b7ec:	adrp	x6, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b7f0:	add	x1, x1, #0xb35
  42b7f4:	add	x5, x5, #0xb26
  42b7f8:	add	x6, x6, #0xb69
  42b7fc:	mov	x0, x19
  42b800:	mov	x3, x20
  42b804:	bl	402440 <fprintf@plt>
  42b808:	ldr	x8, [x20, #8]
  42b80c:	ldr	w3, [x20, #4]
  42b810:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b814:	add	x1, x1, #0xb96
  42b818:	ldr	x2, [x8]
  42b81c:	mov	x0, x19
  42b820:	bl	402440 <fprintf@plt>
  42b824:	b	42b9a0 <feof@plt+0x28fd0>
  42b828:	ldr	x8, [x20]
  42b82c:	mov	w9, #0x18                  	// #24
  42b830:	smaddl	x21, w2, w9, x8
  42b834:	ldrb	w8, [x21, #4]
  42b838:	ldr	w4, [x21]
  42b83c:	cmp	x8, #0x4
  42b840:	b.hi	42b850 <feof@plt+0x28e80>  // b.pmore
  42b844:	add	x9, sp, #0x8
  42b848:	ldr	x5, [x9, x8, lsl #3]
  42b84c:	b	42b858 <feof@plt+0x28e88>
  42b850:	adrp	x5, 451000 <_obstack_memory_used@@Base+0xa68>
  42b854:	add	x5, x5, #0xb46
  42b858:	ldrb	w8, [x21, #5]
  42b85c:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b860:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b864:	add	x9, x9, #0xb65
  42b868:	add	x10, x10, #0xb69
  42b86c:	cmp	w8, #0x0
  42b870:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b874:	csel	x6, x10, x9, eq  // eq = none
  42b878:	add	x1, x1, #0xb35
  42b87c:	mov	x0, x19
  42b880:	mov	x3, x21
  42b884:	bl	402440 <fprintf@plt>
  42b888:	ldr	w8, [x21, #20]
  42b88c:	tbnz	w8, #31, 42b8a0 <feof@plt+0x28ed0>
  42b890:	cmp	w8, #0x2
  42b894:	b.cs	42b8bc <feof@plt+0x28eec>  // b.hs, b.nlast
  42b898:	mov	x22, xzr
  42b89c:	b	42b948 <feof@plt+0x28f78>
  42b8a0:	ldr	x9, [x20, #104]
  42b8a4:	and	x8, x8, #0x7fffffff
  42b8a8:	mov	w10, #0x18                  	// #24
  42b8ac:	mul	x8, x8, x10
  42b8b0:	ldr	w8, [x9, x8]
  42b8b4:	cmp	w8, #0x2
  42b8b8:	b.cc	42b898 <feof@plt+0x28ec8>  // b.lo, b.ul, b.last
  42b8bc:	ldrsw	x10, [x20, #16]
  42b8c0:	ldr	x9, [x20]
  42b8c4:	mov	w11, #0x18                  	// #24
  42b8c8:	madd	x22, x10, x11, x9
  42b8cc:	ldr	w11, [x22]
  42b8d0:	cmp	w8, w11
  42b8d4:	b.cs	42b8e0 <feof@plt+0x28f10>  // b.hs, b.nlast
  42b8d8:	mov	w11, wzr
  42b8dc:	b	42b904 <feof@plt+0x28f34>
  42b8e0:	ldr	w12, [x20, #12]
  42b8e4:	add	w11, w10, #0x1
  42b8e8:	cmp	w11, w12
  42b8ec:	b.eq	42b948 <feof@plt+0x28f78>  // b.none
  42b8f0:	ldr	w11, [x22, #24]
  42b8f4:	cmp	w8, w11
  42b8f8:	mov	w11, w10
  42b8fc:	mov	w10, w12
  42b900:	b.cc	42b948 <feof@plt+0x28f78>  // b.lo, b.ul, b.last
  42b904:	sub	w12, w10, w11
  42b908:	cmp	w12, #0x2
  42b90c:	b.cc	42b93c <feof@plt+0x28f6c>  // b.lo, b.ul, b.last
  42b910:	mov	w12, #0x18                  	// #24
  42b914:	add	w13, w11, w10
  42b918:	lsr	w13, w13, #1
  42b91c:	umull	x14, w13, w12
  42b920:	ldr	w14, [x9, x14]
  42b924:	cmp	w14, w8
  42b928:	csel	w11, w11, w13, hi  // hi = pmore
  42b92c:	csel	w10, w13, w10, hi  // hi = pmore
  42b930:	sub	w13, w10, w11
  42b934:	cmp	w13, #0x1
  42b938:	b.hi	42b914 <feof@plt+0x28f44>  // b.pmore
  42b93c:	mov	w8, #0x18                  	// #24
  42b940:	smaddl	x22, w11, w8, x9
  42b944:	str	w11, [x20, #16]
  42b948:	ldr	x2, [x21, #8]
  42b94c:	ldr	w3, [x21, #16]
  42b950:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b954:	add	x1, x1, #0xb6c
  42b958:	mov	x0, x19
  42b95c:	bl	402440 <fprintf@plt>
  42b960:	cbz	x22, 42b984 <feof@plt+0x28fb4>
  42b964:	ldr	x8, [x20]
  42b968:	ldr	x3, [x22, #8]
  42b96c:	mov	w9, #0xaaab                	// #43691
  42b970:	movk	w9, #0xaaaa, lsl #16
  42b974:	sub	x8, x22, x8
  42b978:	lsr	x8, x8, #3
  42b97c:	mul	w2, w8, w9
  42b980:	b	42b990 <feof@plt+0x28fc0>
  42b984:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b988:	add	x3, x3, #0xb91
  42b98c:	mov	w2, #0xffffffff            	// #-1
  42b990:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42b994:	add	x1, x1, #0xb79
  42b998:	mov	x0, x19
  42b99c:	bl	402440 <fprintf@plt>
  42b9a0:	mov	x1, x19
  42b9a4:	ldp	x20, x19, [sp, #80]
  42b9a8:	ldp	x22, x21, [sp, #64]
  42b9ac:	ldp	x29, x30, [sp, #48]
  42b9b0:	mov	w0, #0xa                   	// #10
  42b9b4:	add	sp, sp, #0x60
  42b9b8:	b	4026d0 <fputc@plt>
  42b9bc:	sub	sp, sp, #0x70
  42b9c0:	stp	x22, x21, [sp, #80]
  42b9c4:	stp	x20, x19, [sp, #96]
  42b9c8:	mov	x19, x2
  42b9cc:	mov	w20, w1
  42b9d0:	mov	x22, x0
  42b9d4:	stp	x29, x30, [sp, #32]
  42b9d8:	str	x25, [sp, #48]
  42b9dc:	stp	x24, x23, [sp, #64]
  42b9e0:	add	x29, sp, #0x20
  42b9e4:	tbz	w1, #31, 42b9fc <feof@plt+0x2902c>
  42b9e8:	ldr	x8, [x22, #104]
  42b9ec:	and	w9, w20, #0x7fffffff
  42b9f0:	mov	w10, #0x18                  	// #24
  42b9f4:	umull	x9, w9, w10
  42b9f8:	ldr	w20, [x8, x9]
  42b9fc:	cbz	w20, 42bc2c <feof@plt+0x2925c>
  42ba00:	mov	w8, w20
  42ba04:	tbnz	w20, #31, 42ba38 <feof@plt+0x29068>
  42ba08:	cmp	w8, #0x2
  42ba0c:	b.cs	42ba54 <feof@plt+0x29084>  // b.hs, b.nlast
  42ba10:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0xaa68>
  42ba14:	add	x21, x21, #0xb34
  42ba18:	mov	x7, xzr
  42ba1c:	mov	w4, #0xffffffff            	// #-1
  42ba20:	mov	w24, w20
  42ba24:	mov	w5, #0xffffffff            	// #-1
  42ba28:	mov	w6, #0xffffffff            	// #-1
  42ba2c:	mov	x3, x21
  42ba30:	mov	w8, #0xffffffff            	// #-1
  42ba34:	b	42bc0c <feof@plt+0x2923c>
  42ba38:	ldr	x8, [x22, #104]
  42ba3c:	and	w9, w20, #0x7fffffff
  42ba40:	mov	w10, #0x18                  	// #24
  42ba44:	umull	x9, w9, w10
  42ba48:	ldr	w8, [x8, x9]
  42ba4c:	cmp	w8, #0x2
  42ba50:	b.cc	42ba10 <feof@plt+0x29040>  // b.lo, b.ul, b.last
  42ba54:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0xaa68>
  42ba58:	mov	w25, #0x18                  	// #24
  42ba5c:	add	x21, x21, #0xb34
  42ba60:	mov	w24, w20
  42ba64:	mov	w23, w24
  42ba68:	tbz	w24, #31, 42ba7c <feof@plt+0x290ac>
  42ba6c:	ldr	x8, [x22, #104]
  42ba70:	and	w9, w24, #0x7fffffff
  42ba74:	umull	x9, w9, w25
  42ba78:	ldr	w23, [x8, x9]
  42ba7c:	mov	x0, x22
  42ba80:	mov	w1, w23
  42ba84:	bl	429b2c <feof@plt+0x2715c>
  42ba88:	mov	x7, x0
  42ba8c:	cbz	x0, 42bac0 <feof@plt+0x290f0>
  42ba90:	ldr	w8, [x7]
  42ba94:	lsr	w9, w8, #28
  42ba98:	cmp	w9, #0x7
  42ba9c:	b.cc	42bad8 <feof@plt+0x29108>  // b.lo, b.ul, b.last
  42baa0:	ldr	x9, [x7, #16]
  42baa4:	sub	w8, w23, w8
  42baa8:	mov	w10, #0x1                   	// #1
  42baac:	bfi	w10, w8, #1, #31
  42bab0:	ldr	w24, [x9, w10, uxtw #2]
  42bab4:	mov	w23, w24
  42bab8:	tbz	w24, #31, 42ba7c <feof@plt+0x290ac>
  42babc:	b	42ba6c <feof@plt+0x2909c>
  42bac0:	mov	w4, #0xffffffff            	// #-1
  42bac4:	mov	x3, x21
  42bac8:	mov	w5, #0xffffffff            	// #-1
  42bacc:	mov	w6, #0xffffffff            	// #-1
  42bad0:	mov	w8, #0xffffffff            	// #-1
  42bad4:	b	42bc0c <feof@plt+0x2923c>
  42bad8:	ldrb	w8, [x7, #5]
  42badc:	ldr	w9, [x7]
  42bae0:	ldrh	w10, [x7, #6]
  42bae4:	ldr	w11, [x7, #16]
  42bae8:	ldr	x21, [x7, #8]
  42baec:	cmp	w8, #0x0
  42baf0:	mov	w8, #0xffffffff            	// #-1
  42baf4:	sub	w9, w24, w9
  42baf8:	lsl	w8, w8, w10
  42bafc:	bic	w8, w9, w8
  42bb00:	lsr	w9, w9, w10
  42bb04:	lsr	x10, x10, #8
  42bb08:	cset	w6, ne  // ne = any
  42bb0c:	cmp	w24, w20
  42bb10:	add	w4, w9, w11
  42bb14:	lsr	w5, w8, w10
  42bb18:	cset	w8, ne  // ne = any
  42bb1c:	b.eq	42bb30 <feof@plt+0x29160>  // b.none
  42bb20:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bb24:	mov	w8, #0x1                   	// #1
  42bb28:	add	x3, x3, #0xbad
  42bb2c:	b	42bc0c <feof@plt+0x2923c>
  42bb30:	ldr	w9, [x7, #20]
  42bb34:	tbz	w9, #31, 42bb4c <feof@plt+0x2917c>
  42bb38:	ldr	x10, [x22, #104]
  42bb3c:	and	x9, x9, #0x7fffffff
  42bb40:	mov	w11, #0x18                  	// #24
  42bb44:	mul	x9, x9, x11
  42bb48:	ldr	w9, [x10, x9]
  42bb4c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bb50:	add	x3, x3, #0xbb1
  42bb54:	cbz	x22, 42bb84 <feof@plt+0x291b4>
  42bb58:	cmp	w9, #0x2
  42bb5c:	b.cc	42bb84 <feof@plt+0x291b4>  // b.lo, b.ul, b.last
  42bb60:	ldrsw	x11, [x22, #16]
  42bb64:	ldr	x10, [x22]
  42bb68:	mov	w12, #0x18                  	// #24
  42bb6c:	madd	x13, x11, x12, x10
  42bb70:	ldr	w12, [x13]
  42bb74:	cmp	w9, w12
  42bb78:	b.cs	42bb8c <feof@plt+0x291bc>  // b.hs, b.nlast
  42bb7c:	mov	w12, wzr
  42bb80:	b	42bbb0 <feof@plt+0x291e0>
  42bb84:	mov	w8, wzr
  42bb88:	b	42bc08 <feof@plt+0x29238>
  42bb8c:	ldr	w14, [x22, #12]
  42bb90:	add	w12, w11, #0x1
  42bb94:	cmp	w12, w14
  42bb98:	b.eq	42bbf4 <feof@plt+0x29224>  // b.none
  42bb9c:	ldr	w12, [x13, #24]
  42bba0:	cmp	w9, w12
  42bba4:	mov	w12, w11
  42bba8:	mov	w11, w14
  42bbac:	b.cc	42bbf8 <feof@plt+0x29228>  // b.lo, b.ul, b.last
  42bbb0:	sub	w13, w11, w12
  42bbb4:	cmp	w13, #0x2
  42bbb8:	b.cc	42bbe8 <feof@plt+0x29218>  // b.lo, b.ul, b.last
  42bbbc:	mov	w13, #0x18                  	// #24
  42bbc0:	add	w14, w12, w11
  42bbc4:	lsr	w14, w14, #1
  42bbc8:	umull	x15, w14, w13
  42bbcc:	ldr	w15, [x10, x15]
  42bbd0:	cmp	w15, w9
  42bbd4:	csel	w12, w12, w14, hi  // hi = pmore
  42bbd8:	csel	w11, w14, w11, hi  // hi = pmore
  42bbdc:	sub	w14, w11, w12
  42bbe0:	cmp	w14, #0x1
  42bbe4:	b.hi	42bbc0 <feof@plt+0x291f0>  // b.pmore
  42bbe8:	mov	w9, #0x18                  	// #24
  42bbec:	smaddl	x13, w12, w9, x10
  42bbf0:	str	w12, [x22, #16]
  42bbf4:	cbz	x13, 42bc00 <feof@plt+0x29230>
  42bbf8:	ldr	x3, [x13, #8]
  42bbfc:	b	42bc08 <feof@plt+0x29238>
  42bc00:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bc04:	add	x3, x3, #0xbb1
  42bc08:	mov	w24, w20
  42bc0c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bc10:	add	x1, x1, #0xbb8
  42bc14:	mov	x0, x19
  42bc18:	mov	x2, x21
  42bc1c:	str	w24, [sp, #16]
  42bc20:	str	w20, [sp, #8]
  42bc24:	str	w8, [sp]
  42bc28:	bl	402440 <fprintf@plt>
  42bc2c:	ldp	x20, x19, [sp, #96]
  42bc30:	ldp	x22, x21, [sp, #80]
  42bc34:	ldp	x24, x23, [sp, #64]
  42bc38:	ldr	x25, [sp, #48]
  42bc3c:	ldp	x29, x30, [sp, #32]
  42bc40:	add	sp, sp, #0x70
  42bc44:	ret
  42bc48:	stp	x29, x30, [sp, #-64]!
  42bc4c:	stp	x24, x23, [sp, #16]
  42bc50:	stp	x22, x21, [sp, #32]
  42bc54:	stp	x20, x19, [sp, #48]
  42bc58:	mov	x29, sp
  42bc5c:	cbz	x0, 42bcc8 <feof@plt+0x292f8>
  42bc60:	ldr	w22, [x0, #12]
  42bc64:	mov	x20, x0
  42bc68:	cbz	w22, 42bcc4 <feof@plt+0x292f4>
  42bc6c:	cmp	w22, #0x1
  42bc70:	b.mi	42bcc4 <feof@plt+0x292f4>  // b.first
  42bc74:	mov	x19, x2
  42bc78:	mov	x21, x1
  42bc7c:	mov	w23, #0x18                  	// #24
  42bc80:	b	42bc90 <feof@plt+0x292c0>
  42bc84:	cmp	w22, #0x2
  42bc88:	mov	w22, w24
  42bc8c:	b.mi	42bcc4 <feof@plt+0x292f4>  // b.first
  42bc90:	ldr	x8, [x20]
  42bc94:	sub	w24, w22, #0x1
  42bc98:	umaddl	x8, w24, w23, x8
  42bc9c:	ldr	x0, [x8, #8]
  42bca0:	cbz	x0, 42bc84 <feof@plt+0x292b4>
  42bca4:	mov	x1, x21
  42bca8:	bl	44eda0 <feof@plt+0x4c3d0>
  42bcac:	cbnz	w0, 42bc84 <feof@plt+0x292b4>
  42bcb0:	ldr	w8, [x20, #12]
  42bcb4:	cmp	w8, w22
  42bcb8:	b.ne	42bcdc <feof@plt+0x2930c>  // b.any
  42bcbc:	ldr	w8, [x20, #56]
  42bcc0:	b	42bcf0 <feof@plt+0x29320>
  42bcc4:	mov	w0, wzr
  42bcc8:	ldp	x20, x19, [sp, #48]
  42bccc:	ldp	x22, x21, [sp, #32]
  42bcd0:	ldp	x24, x23, [sp, #16]
  42bcd4:	ldp	x29, x30, [sp], #64
  42bcd8:	ret
  42bcdc:	ldr	x8, [x20]
  42bce0:	mov	w9, #0x18                  	// #24
  42bce4:	smull	x9, w22, w9
  42bce8:	ldr	w8, [x8, x9]
  42bcec:	sub	w8, w8, #0x1
  42bcf0:	mov	w0, #0x1                   	// #1
  42bcf4:	str	w8, [x19]
  42bcf8:	b	42bcc8 <feof@plt+0x292f8>
  42bcfc:	ldp	w9, w11, [x0, #8]
  42bd00:	ldp	w10, w8, [x0, #32]
  42bd04:	ldr	x16, [x0, #24]
  42bd08:	add	x12, x9, x9, lsl #1
  42bd0c:	add	x14, x11, x11, lsl #1
  42bd10:	lsl	x13, x12, #3
  42bd14:	lsl	x12, x14, #3
  42bd18:	lsl	x10, x10, #5
  42bd1c:	cbz	x16, 42bd34 <feof@plt+0x29364>
  42bd20:	sub	w14, w8, #0x1
  42bd24:	sxtw	x14, w14
  42bd28:	add	x17, x16, x14, lsl #5
  42bd2c:	cmp	x16, x17
  42bd30:	b.ls	42bd84 <feof@plt+0x293b4>  // b.plast
  42bd34:	mov	x14, xzr
  42bd38:	mov	x15, xzr
  42bd3c:	stp	x9, x11, [x1]
  42bd40:	stp	x13, x12, [x1, #16]
  42bd44:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  42bd48:	ldr	w9, [x9, #1920]
  42bd4c:	adrp	x11, 476000 <_obstack_memory_used@@Base+0x25a68>
  42bd50:	str	x9, [x1, #32]
  42bd54:	ldr	w9, [x11, #1924]
  42bd58:	lsl	x11, x8, #5
  42bd5c:	stp	x10, x11, [x1, #56]
  42bd60:	stp	x14, x15, [x1, #72]
  42bd64:	stp	x9, x8, [x1, #40]
  42bd68:	ldr	w8, [x0, #100]
  42bd6c:	add	x8, x8, x8, lsl #1
  42bd70:	lsl	x8, x8, #3
  42bd74:	str	x8, [x1, #88]
  42bd78:	ldr	w8, [x0, #96]
  42bd7c:	str	x8, [x1, #96]
  42bd80:	ret
  42bd84:	mov	x14, xzr
  42bd88:	mov	x15, xzr
  42bd8c:	b	42bd9c <feof@plt+0x293cc>
  42bd90:	add	x16, x16, #0x20
  42bd94:	cmp	x16, x17
  42bd98:	b.hi	42bd3c <feof@plt+0x2936c>  // b.pmore
  42bd9c:	ldr	w18, [x16, #4]
  42bda0:	lsl	w18, w18, #1
  42bda4:	add	x14, x14, w18, uxtw #2
  42bda8:	cbz	w18, 42bd90 <feof@plt+0x293c0>
  42bdac:	ldr	x2, [x16, #16]
  42bdb0:	mov	x3, xzr
  42bdb4:	add	x4, x2, x3, lsl #2
  42bdb8:	ldp	w5, w4, [x4]
  42bdbc:	add	x6, x15, #0x4
  42bdc0:	add	x3, x3, #0x2
  42bdc4:	cmp	w5, w4
  42bdc8:	csel	x15, x6, x15, eq  // eq = none
  42bdcc:	cmp	x3, x18
  42bdd0:	b.cc	42bdb4 <feof@plt+0x293e4>  // b.lo, b.ul, b.last
  42bdd4:	b	42bd90 <feof@plt+0x293c0>
  42bdd8:	stp	x29, x30, [sp, #-96]!
  42bddc:	stp	x28, x27, [sp, #16]
  42bde0:	stp	x26, x25, [sp, #32]
  42bde4:	stp	x24, x23, [sp, #48]
  42bde8:	stp	x22, x21, [sp, #64]
  42bdec:	stp	x20, x19, [sp, #80]
  42bdf0:	mov	x29, sp
  42bdf4:	cbz	x1, 42bf98 <feof@plt+0x295c8>
  42bdf8:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  42bdfc:	ldr	x8, [x8, #1336]
  42be00:	mov	w22, w2
  42be04:	ldr	w2, [x1, #12]
  42be08:	cmp	x0, #0x0
  42be0c:	mov	x20, x1
  42be10:	csel	x21, x8, x0, eq  // eq = none
  42be14:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42be18:	add	x1, x1, #0xbe9
  42be1c:	mov	x0, x21
  42be20:	mov	w19, w3
  42be24:	bl	402440 <fprintf@plt>
  42be28:	ldr	w2, [x20, #36]
  42be2c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42be30:	add	x1, x1, #0xc02
  42be34:	mov	x0, x21
  42be38:	bl	402440 <fprintf@plt>
  42be3c:	ldr	w2, [x20, #48]
  42be40:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42be44:	add	x1, x1, #0xc1b
  42be48:	mov	x0, x21
  42be4c:	bl	402440 <fprintf@plt>
  42be50:	ldr	w2, [x20, #56]
  42be54:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42be58:	add	x1, x1, #0xc34
  42be5c:	mov	x0, x21
  42be60:	bl	402440 <fprintf@plt>
  42be64:	cbz	w22, 42bebc <feof@plt+0x294ec>
  42be68:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42be6c:	add	x0, x0, #0xc4d
  42be70:	mov	w1, #0x14                  	// #20
  42be74:	mov	w2, #0x1                   	// #1
  42be78:	mov	x3, x21
  42be7c:	bl	4028c0 <fwrite@plt>
  42be80:	mov	w23, wzr
  42be84:	ldr	w8, [x20, #12]
  42be88:	cmp	w23, w8
  42be8c:	b.cs	42beb0 <feof@plt+0x294e0>  // b.hs, b.nlast
  42be90:	mov	x0, x21
  42be94:	mov	x1, x20
  42be98:	mov	w2, w23
  42be9c:	mov	w3, wzr
  42bea0:	bl	42b774 <feof@plt+0x28da4>
  42bea4:	add	w23, w23, #0x1
  42bea8:	cmp	w22, w23
  42beac:	b.ne	42be84 <feof@plt+0x294b4>  // b.any
  42beb0:	mov	w0, #0xa                   	// #10
  42beb4:	mov	x1, x21
  42beb8:	bl	4026d0 <fputc@plt>
  42bebc:	cbz	w19, 42bf98 <feof@plt+0x295c8>
  42bec0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bec4:	add	x0, x0, #0xc62
  42bec8:	mov	w1, #0x11                  	// #17
  42becc:	mov	w2, #0x1                   	// #1
  42bed0:	mov	x3, x21
  42bed4:	bl	4028c0 <fwrite@plt>
  42bed8:	adrp	x23, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bedc:	adrp	x24, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bee0:	adrp	x25, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bee4:	adrp	x26, 45d000 <_obstack_memory_used@@Base+0xca68>
  42bee8:	mov	w22, wzr
  42beec:	add	x23, x23, #0xb35
  42bef0:	add	x24, x24, #0xb26
  42bef4:	add	x25, x25, #0xb69
  42bef8:	add	x26, x26, #0xb96
  42befc:	ldr	w8, [x20, #36]
  42bf00:	cmp	w22, w8
  42bf04:	b.cs	42bf74 <feof@plt+0x295a4>  // b.hs, b.nlast
  42bf08:	ldr	x8, [x20, #24]
  42bf0c:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  42bf10:	ldr	x9, [x9, #1336]
  42bf14:	sxtw	x10, w22
  42bf18:	add	x27, x8, x10, lsl #5
  42bf1c:	ldr	w4, [x27]
  42bf20:	cmp	x21, #0x0
  42bf24:	csel	x28, x9, x21, eq  // eq = none
  42bf28:	mov	x0, x28
  42bf2c:	mov	x1, x23
  42bf30:	mov	w2, w22
  42bf34:	mov	x3, x27
  42bf38:	mov	x5, x24
  42bf3c:	mov	x6, x25
  42bf40:	bl	402440 <fprintf@plt>
  42bf44:	ldr	x8, [x27, #8]
  42bf48:	ldr	w3, [x27, #4]
  42bf4c:	mov	x0, x28
  42bf50:	mov	x1, x26
  42bf54:	ldr	x2, [x8]
  42bf58:	bl	402440 <fprintf@plt>
  42bf5c:	mov	w0, #0xa                   	// #10
  42bf60:	mov	x1, x28
  42bf64:	bl	4026d0 <fputc@plt>
  42bf68:	add	w22, w22, #0x1
  42bf6c:	cmp	w19, w22
  42bf70:	b.ne	42befc <feof@plt+0x2952c>  // b.any
  42bf74:	mov	x1, x21
  42bf78:	ldp	x20, x19, [sp, #80]
  42bf7c:	ldp	x22, x21, [sp, #64]
  42bf80:	ldp	x24, x23, [sp, #48]
  42bf84:	ldp	x26, x25, [sp, #32]
  42bf88:	ldp	x28, x27, [sp, #16]
  42bf8c:	mov	w0, #0xa                   	// #10
  42bf90:	ldp	x29, x30, [sp], #96
  42bf94:	b	4026d0 <fputc@plt>
  42bf98:	ldp	x20, x19, [sp, #80]
  42bf9c:	ldp	x22, x21, [sp, #64]
  42bfa0:	ldp	x24, x23, [sp, #48]
  42bfa4:	ldp	x26, x25, [sp, #32]
  42bfa8:	ldp	x28, x27, [sp, #16]
  42bfac:	ldp	x29, x30, [sp], #96
  42bfb0:	ret
  42bfb4:	mov	w8, #0x1                   	// #1
  42bfb8:	str	x1, [x0]
  42bfbc:	str	wzr, [x0, #64]
  42bfc0:	str	xzr, [x0, #72]
  42bfc4:	str	wzr, [x0, #80]
  42bfc8:	strb	wzr, [x0, #84]
  42bfcc:	str	wzr, [x0, #120]
  42bfd0:	str	wzr, [x0, #144]
  42bfd4:	str	xzr, [x0, #152]
  42bfd8:	strh	wzr, [x0, #160]
  42bfdc:	stp	w2, wzr, [x0, #16]
  42bfe0:	str	w8, [x0, #8]
  42bfe4:	str	x3, [x0, #24]
  42bfe8:	ret
  42bfec:	stp	x29, x30, [sp, #-64]!
  42bff0:	stp	x22, x21, [sp, #32]
  42bff4:	stp	x20, x19, [sp, #48]
  42bff8:	ldrsw	x8, [x0, #8]
  42bffc:	mov	x19, x3
  42c000:	mov	w20, w2
  42c004:	mov	w21, w1
  42c008:	mov	x22, x0
  42c00c:	add	w9, w8, #0x1
  42c010:	cmp	w8, #0x2
  42c014:	str	x23, [sp, #16]
  42c018:	mov	x29, sp
  42c01c:	str	w9, [x0, #8]
  42c020:	b.gt	42c034 <feof@plt+0x29664>
  42c024:	add	x8, x22, x8, lsl #4
  42c028:	stp	w21, w20, [x8, #16]
  42c02c:	add	x8, x8, #0x18
  42c030:	b	42c07c <feof@plt+0x296ac>
  42c034:	ldr	x0, [x22, #72]
  42c038:	sub	w23, w8, #0x3
  42c03c:	cbz	x0, 42c060 <feof@plt+0x29690>
  42c040:	ldrsw	x8, [x22, #64]
  42c044:	cmp	w23, w8
  42c048:	b.lt	42c074 <feof@plt+0x296a4>  // b.tstop
  42c04c:	lsl	w9, w8, #1
  42c050:	lsl	x1, x8, #5
  42c054:	str	w9, [x22, #64]
  42c058:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42c05c:	b	42c070 <feof@plt+0x296a0>
  42c060:	mov	w8, #0x10                  	// #16
  42c064:	mov	w0, #0x100                 	// #256
  42c068:	str	w8, [x22, #64]
  42c06c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42c070:	str	x0, [x22, #72]
  42c074:	add	x8, x0, w23, uxtw #4
  42c078:	stp	w21, w20, [x8], #8
  42c07c:	str	x19, [x8]
  42c080:	ldp	x20, x19, [sp, #48]
  42c084:	ldp	x22, x21, [sp, #32]
  42c088:	ldr	x23, [sp, #16]
  42c08c:	ldp	x29, x30, [sp], #64
  42c090:	ret
  42c094:	stp	x29, x30, [sp, #-48]!
  42c098:	stp	x20, x19, [sp, #32]
  42c09c:	ldr	w8, [x0, #120]
  42c0a0:	mov	x19, x0
  42c0a4:	str	x21, [sp, #16]
  42c0a8:	mov	x29, sp
  42c0ac:	cbz	w8, 42c10c <feof@plt+0x2973c>
  42c0b0:	mov	w21, wzr
  42c0b4:	b	42c0c4 <feof@plt+0x296f4>
  42c0b8:	add	w21, w21, #0x1
  42c0bc:	cmp	w21, w8
  42c0c0:	b.cs	42c10c <feof@plt+0x2973c>  // b.hs, b.nlast
  42c0c4:	cmp	w21, #0x1
  42c0c8:	b.gt	42c0e0 <feof@plt+0x29710>
  42c0cc:	add	x9, x19, w21, sxtw #3
  42c0d0:	add	x9, x9, #0x80
  42c0d4:	ldr	x20, [x9]
  42c0d8:	cbnz	x20, 42c0f4 <feof@plt+0x29724>
  42c0dc:	b	42c0b8 <feof@plt+0x296e8>
  42c0e0:	ldr	x9, [x19, #152]
  42c0e4:	sub	w10, w21, #0x2
  42c0e8:	add	x9, x9, w10, sxtw #3
  42c0ec:	ldr	x20, [x9]
  42c0f0:	cbz	x20, 42c0b8 <feof@plt+0x296e8>
  42c0f4:	ldr	x0, [x20, #8]
  42c0f8:	bl	4024c0 <free@plt>
  42c0fc:	mov	x0, x20
  42c100:	bl	402670 <_ZdlPv@plt>
  42c104:	ldr	w8, [x19, #120]
  42c108:	b	42c0b8 <feof@plt+0x296e8>
  42c10c:	ldr	x0, [x19, #152]
  42c110:	bl	4024c0 <free@plt>
  42c114:	ldr	x0, [x19, #72]
  42c118:	ldp	x20, x19, [sp, #32]
  42c11c:	ldr	x21, [sp, #16]
  42c120:	ldp	x29, x30, [sp], #48
  42c124:	b	4024c0 <free@plt>
  42c128:	cmp	w1, #0x2
  42c12c:	b.gt	42c13c <feof@plt+0x2976c>
  42c130:	add	x8, x0, w1, sxtw #4
  42c134:	ldr	w0, [x8, #16]!
  42c138:	ret
  42c13c:	ldr	x8, [x0, #72]
  42c140:	add	x8, x8, w1, sxtw #4
  42c144:	ldr	w0, [x8, #-48]!
  42c148:	ret
  42c14c:	cmp	w1, #0x2
  42c150:	b.gt	42c160 <feof@plt+0x29790>
  42c154:	add	x8, x0, w1, sxtw #4
  42c158:	add	x0, x8, #0x10
  42c15c:	ret
  42c160:	ldr	x8, [x0, #72]
  42c164:	add	x8, x8, w1, sxtw #4
  42c168:	sub	x0, x8, #0x30
  42c16c:	ret
  42c170:	cmp	w1, #0x2
  42c174:	b.gt	42c184 <feof@plt+0x297b4>
  42c178:	add	x8, x0, w1, sxtw #4
  42c17c:	add	x0, x8, #0x10
  42c180:	ret
  42c184:	ldr	x8, [x0, #72]
  42c188:	add	x8, x8, w1, sxtw #4
  42c18c:	sub	x0, x8, #0x30
  42c190:	ret
  42c194:	sub	sp, sp, #0x40
  42c198:	stp	x20, x19, [sp, #48]
  42c19c:	mov	x20, x0
  42c1a0:	mov	x19, x8
  42c1a4:	stp	x29, x30, [sp, #32]
  42c1a8:	add	x29, sp, #0x20
  42c1ac:	cbz	w1, 42c1c4 <feof@plt+0x297f4>
  42c1b0:	cmp	w1, #0x2
  42c1b4:	b.gt	42c218 <feof@plt+0x29848>
  42c1b8:	add	x8, x20, w1, sxtw #4
  42c1bc:	add	x8, x8, #0x10
  42c1c0:	b	42c224 <feof@plt+0x29854>
  42c1c4:	ldrb	w8, [x20, #84]
  42c1c8:	cbnz	w8, 42c1fc <feof@plt+0x2982c>
  42c1cc:	ldr	w0, [x20, #16]
  42c1d0:	mov	x8, sp
  42c1d4:	mov	w1, wzr
  42c1d8:	bl	4132a8 <feof@plt+0x108d8>
  42c1dc:	ldp	q0, q1, [sp]
  42c1e0:	ldr	w8, [x20, #80]
  42c1e4:	stur	q1, [x20, #104]
  42c1e8:	stur	q0, [x20, #88]
  42c1ec:	cbz	w8, 42c1f4 <feof@plt+0x29824>
  42c1f0:	str	w8, [x20, #100]
  42c1f4:	mov	w8, #0x1                   	// #1
  42c1f8:	strb	w8, [x20, #84]
  42c1fc:	ldur	q0, [x20, #104]
  42c200:	ldur	q1, [x20, #88]
  42c204:	stp	q1, q0, [x19]
  42c208:	ldp	x20, x19, [sp, #48]
  42c20c:	ldp	x29, x30, [sp, #32]
  42c210:	add	sp, sp, #0x40
  42c214:	ret
  42c218:	ldr	x8, [x20, #72]
  42c21c:	add	x8, x8, w1, sxtw #4
  42c220:	sub	x8, x8, #0x30
  42c224:	ldr	w0, [x8]
  42c228:	mov	x8, x19
  42c22c:	ldp	x20, x19, [sp, #48]
  42c230:	ldp	x29, x30, [sp, #32]
  42c234:	mov	w1, wzr
  42c238:	add	sp, sp, #0x40
  42c23c:	b	4132a8 <feof@plt+0x108d8>
  42c240:	str	w1, [x0, #80]
  42c244:	strb	wzr, [x0, #84]
  42c248:	ret
  42c24c:	stp	x29, x30, [sp, #-48]!
  42c250:	stp	x22, x21, [sp, #16]
  42c254:	stp	x20, x19, [sp, #32]
  42c258:	ldr	w8, [x0, #8]
  42c25c:	mov	w19, w3
  42c260:	mov	x20, x0
  42c264:	mov	w21, w2
  42c268:	cmp	w8, w1
  42c26c:	mov	x29, sp
  42c270:	b.ne	42c298 <feof@plt+0x298c8>  // b.any
  42c274:	add	w8, w1, #0x1
  42c278:	cmp	w1, #0x2
  42c27c:	str	w8, [x20, #8]
  42c280:	b.gt	42c2b4 <feof@plt+0x298e4>
  42c284:	add	x8, x20, w1, sxtw #4
  42c288:	stp	w21, w19, [x8, #16]
  42c28c:	str	xzr, [x8, #24]
  42c290:	cbnz	w1, 42c31c <feof@plt+0x2994c>
  42c294:	b	42c2f4 <feof@plt+0x29924>
  42c298:	cmp	w1, #0x2
  42c29c:	b.gt	42c2e0 <feof@plt+0x29910>
  42c2a0:	add	x8, x20, w1, sxtw #4
  42c2a4:	add	x8, x8, #0x10
  42c2a8:	stp	w21, w19, [x8]
  42c2ac:	cbnz	w1, 42c31c <feof@plt+0x2994c>
  42c2b0:	b	42c2f4 <feof@plt+0x29924>
  42c2b4:	ldr	x0, [x20, #72]
  42c2b8:	sub	w22, w1, #0x3
  42c2bc:	cbz	x0, 42c2fc <feof@plt+0x2992c>
  42c2c0:	ldrsw	x8, [x20, #64]
  42c2c4:	cmp	w22, w8
  42c2c8:	b.lt	42c310 <feof@plt+0x29940>  // b.tstop
  42c2cc:	lsl	w9, w8, #1
  42c2d0:	lsl	x1, x8, #5
  42c2d4:	str	w9, [x20, #64]
  42c2d8:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42c2dc:	b	42c30c <feof@plt+0x2993c>
  42c2e0:	ldr	x8, [x20, #72]
  42c2e4:	add	x8, x8, w1, sxtw #4
  42c2e8:	sub	x8, x8, #0x30
  42c2ec:	stp	w21, w19, [x8]
  42c2f0:	cbnz	w1, 42c31c <feof@plt+0x2994c>
  42c2f4:	strb	wzr, [x20, #84]
  42c2f8:	b	42c31c <feof@plt+0x2994c>
  42c2fc:	mov	w8, #0x10                  	// #16
  42c300:	mov	w0, #0x100                 	// #256
  42c304:	str	w8, [x20, #64]
  42c308:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42c30c:	str	x0, [x20, #72]
  42c310:	add	x8, x0, w22, uxtw #4
  42c314:	stp	w21, w19, [x8]
  42c318:	str	xzr, [x8, #8]
  42c31c:	ldp	x20, x19, [sp, #32]
  42c320:	ldp	x22, x21, [sp, #16]
  42c324:	ldp	x29, x30, [sp], #48
  42c328:	ret
  42c32c:	stp	x29, x30, [sp, #-48]!
  42c330:	stp	x20, x19, [sp, #32]
  42c334:	str	x21, [sp, #16]
  42c338:	mov	x20, x0
  42c33c:	ldr	w21, [x0, #16]
  42c340:	ldr	x0, [x0]
  42c344:	mov	x19, x1
  42c348:	mov	x29, sp
  42c34c:	tbnz	w21, #31, 42c374 <feof@plt+0x299a4>
  42c350:	cmp	w21, #0x2
  42c354:	b.cc	42c3bc <feof@plt+0x299ec>  // b.lo, b.ul, b.last
  42c358:	ldr	w8, [x0, #36]
  42c35c:	cbz	w8, 42c38c <feof@plt+0x299bc>
  42c360:	ldr	x9, [x0, #24]
  42c364:	sub	w8, w8, #0x1
  42c368:	sbfiz	x8, x8, #5, #32
  42c36c:	ldr	w8, [x9, x8]
  42c370:	b	42c390 <feof@plt+0x299c0>
  42c374:	ldr	x8, [x0, #104]
  42c378:	and	x9, x21, #0x7fffffff
  42c37c:	mov	w10, #0x18                  	// #24
  42c380:	madd	x8, x9, x10, x8
  42c384:	ldr	w21, [x8, #4]
  42c388:	b	42c3bc <feof@plt+0x299ec>
  42c38c:	mov	w8, #0x80000000            	// #-2147483648
  42c390:	mov	w9, #0x50000000            	// #1342177280
  42c394:	cmp	w21, w9
  42c398:	b.hi	42c3bc <feof@plt+0x299ec>  // b.pmore
  42c39c:	cmp	w8, w21
  42c3a0:	b.ls	42c3bc <feof@plt+0x299ec>  // b.plast
  42c3a4:	mov	w1, w21
  42c3a8:	bl	429b2c <feof@plt+0x2715c>
  42c3ac:	ldrb	w8, [x0, #7]
  42c3b0:	mov	w9, #0xffffffff            	// #-1
  42c3b4:	lsl	w8, w9, w8
  42c3b8:	and	w21, w8, w21
  42c3bc:	mov	x0, x20
  42c3c0:	mov	w1, w21
  42c3c4:	mov	w2, w21
  42c3c8:	mov	x3, x19
  42c3cc:	ldp	x20, x19, [sp, #32]
  42c3d0:	ldr	x21, [sp, #16]
  42c3d4:	ldp	x29, x30, [sp], #48
  42c3d8:	b	42c48c <feof@plt+0x29abc>
  42c3dc:	stp	x29, x30, [sp, #-48]!
  42c3e0:	stp	x20, x19, [sp, #32]
  42c3e4:	mov	x20, x0
  42c3e8:	ldr	x0, [x0]
  42c3ec:	str	x21, [sp, #16]
  42c3f0:	mov	x19, x2
  42c3f4:	mov	w21, w1
  42c3f8:	mov	x29, sp
  42c3fc:	tbnz	w1, #31, 42c424 <feof@plt+0x29a54>
  42c400:	cmp	w21, #0x2
  42c404:	b.cc	42c46c <feof@plt+0x29a9c>  // b.lo, b.ul, b.last
  42c408:	ldr	w8, [x0, #36]
  42c40c:	cbz	w8, 42c43c <feof@plt+0x29a6c>
  42c410:	ldr	x9, [x0, #24]
  42c414:	sub	w8, w8, #0x1
  42c418:	sbfiz	x8, x8, #5, #32
  42c41c:	ldr	w8, [x9, x8]
  42c420:	b	42c440 <feof@plt+0x29a70>
  42c424:	ldr	x8, [x0, #104]
  42c428:	and	w9, w21, #0x7fffffff
  42c42c:	mov	w10, #0x18                  	// #24
  42c430:	umaddl	x8, w9, w10, x8
  42c434:	ldr	w21, [x8, #4]
  42c438:	b	42c46c <feof@plt+0x29a9c>
  42c43c:	mov	w8, #0x80000000            	// #-2147483648
  42c440:	mov	w9, #0x50000000            	// #1342177280
  42c444:	cmp	w21, w9
  42c448:	b.hi	42c46c <feof@plt+0x29a9c>  // b.pmore
  42c44c:	cmp	w8, w21
  42c450:	b.ls	42c46c <feof@plt+0x29a9c>  // b.plast
  42c454:	mov	w1, w21
  42c458:	bl	429b2c <feof@plt+0x2715c>
  42c45c:	ldrb	w8, [x0, #7]
  42c460:	mov	w9, #0xffffffff            	// #-1
  42c464:	lsl	w8, w9, w8
  42c468:	and	w21, w8, w21
  42c46c:	mov	x0, x20
  42c470:	mov	w1, w21
  42c474:	mov	w2, w21
  42c478:	mov	x3, x19
  42c47c:	ldp	x20, x19, [sp, #32]
  42c480:	ldr	x21, [sp, #16]
  42c484:	ldp	x29, x30, [sp], #48
  42c488:	b	42c48c <feof@plt+0x29abc>
  42c48c:	sub	sp, sp, #0x80
  42c490:	stp	x29, x30, [sp, #64]
  42c494:	stp	x24, x23, [sp, #80]
  42c498:	stp	x22, x21, [sp, #96]
  42c49c:	stp	x20, x19, [sp, #112]
  42c4a0:	ldrb	w8, [x0, #160]
  42c4a4:	add	x29, sp, #0x40
  42c4a8:	cbnz	w8, 42c8a4 <feof@plt+0x29ed4>
  42c4ac:	mov	w8, #0x1                   	// #1
  42c4b0:	movk	w8, #0x6000, lsl #16
  42c4b4:	mov	x19, x0
  42c4b8:	mov	w22, w1
  42c4bc:	cmp	w1, w8
  42c4c0:	b.cs	42c56c <feof@plt+0x29b9c>  // b.hs, b.nlast
  42c4c4:	mov	w21, w2
  42c4c8:	cmp	w2, w8
  42c4cc:	b.cs	42c5d4 <feof@plt+0x29c04>  // b.hs, b.nlast
  42c4d0:	add	x8, sp, #0x20
  42c4d4:	mov	w1, #0x1                   	// #1
  42c4d8:	mov	w0, w22
  42c4dc:	mov	x20, x3
  42c4e0:	mov	w23, #0x1                   	// #1
  42c4e4:	bl	4132a8 <feof@plt+0x108d8>
  42c4e8:	mov	x8, sp
  42c4ec:	mov	w1, #0x1                   	// #1
  42c4f0:	mov	w0, w21
  42c4f4:	bl	4132a8 <feof@plt+0x108d8>
  42c4f8:	ldr	x8, [sp, #32]
  42c4fc:	ldr	x9, [sp]
  42c500:	cmp	x8, x9
  42c504:	b.eq	42c63c <feof@plt+0x29c6c>  // b.none
  42c508:	ldr	w8, [x19, #120]
  42c50c:	strb	w23, [x19, #160]
  42c510:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c514:	mov	w21, wzr
  42c518:	b	42c550 <feof@plt+0x29b80>
  42c51c:	ldr	x9, [x19, #152]
  42c520:	sub	w10, w21, #0x2
  42c524:	add	x9, x9, w10, sxtw #3
  42c528:	ldr	x20, [x9]
  42c52c:	cbz	x20, 42c544 <feof@plt+0x29b74>
  42c530:	ldr	x0, [x20, #8]
  42c534:	bl	4024c0 <free@plt>
  42c538:	mov	x0, x20
  42c53c:	bl	402670 <_ZdlPv@plt>
  42c540:	ldr	w8, [x19, #120]
  42c544:	add	w21, w21, #0x1
  42c548:	cmp	w21, w8
  42c54c:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c550:	cmp	w21, #0x1
  42c554:	b.gt	42c51c <feof@plt+0x29b4c>
  42c558:	add	x9, x19, w21, sxtw #3
  42c55c:	add	x9, x9, #0x80
  42c560:	ldr	x20, [x9]
  42c564:	cbnz	x20, 42c530 <feof@plt+0x29b60>
  42c568:	b	42c544 <feof@plt+0x29b74>
  42c56c:	ldr	w8, [x19, #120]
  42c570:	mov	w9, #0x1                   	// #1
  42c574:	strb	w9, [x19, #160]
  42c578:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c57c:	mov	w21, wzr
  42c580:	b	42c5b8 <feof@plt+0x29be8>
  42c584:	ldr	x9, [x19, #152]
  42c588:	sub	w10, w21, #0x2
  42c58c:	add	x9, x9, w10, sxtw #3
  42c590:	ldr	x20, [x9]
  42c594:	cbz	x20, 42c5ac <feof@plt+0x29bdc>
  42c598:	ldr	x0, [x20, #8]
  42c59c:	bl	4024c0 <free@plt>
  42c5a0:	mov	x0, x20
  42c5a4:	bl	402670 <_ZdlPv@plt>
  42c5a8:	ldr	w8, [x19, #120]
  42c5ac:	add	w21, w21, #0x1
  42c5b0:	cmp	w21, w8
  42c5b4:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c5b8:	cmp	w21, #0x1
  42c5bc:	b.gt	42c584 <feof@plt+0x29bb4>
  42c5c0:	add	x9, x19, w21, sxtw #3
  42c5c4:	add	x9, x9, #0x80
  42c5c8:	ldr	x20, [x9]
  42c5cc:	cbnz	x20, 42c598 <feof@plt+0x29bc8>
  42c5d0:	b	42c5ac <feof@plt+0x29bdc>
  42c5d4:	ldr	w8, [x19, #120]
  42c5d8:	mov	w9, #0x1                   	// #1
  42c5dc:	strb	w9, [x19, #160]
  42c5e0:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c5e4:	mov	w21, wzr
  42c5e8:	b	42c620 <feof@plt+0x29c50>
  42c5ec:	ldr	x9, [x19, #152]
  42c5f0:	sub	w10, w21, #0x2
  42c5f4:	add	x9, x9, w10, sxtw #3
  42c5f8:	ldr	x20, [x9]
  42c5fc:	cbz	x20, 42c614 <feof@plt+0x29c44>
  42c600:	ldr	x0, [x20, #8]
  42c604:	bl	4024c0 <free@plt>
  42c608:	mov	x0, x20
  42c60c:	bl	402670 <_ZdlPv@plt>
  42c610:	ldr	w8, [x19, #120]
  42c614:	add	w21, w21, #0x1
  42c618:	cmp	w21, w8
  42c61c:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c620:	cmp	w21, #0x1
  42c624:	b.gt	42c5ec <feof@plt+0x29c1c>
  42c628:	add	x9, x19, w21, sxtw #3
  42c62c:	add	x9, x9, #0x80
  42c630:	ldr	x20, [x9]
  42c634:	cbnz	x20, 42c600 <feof@plt+0x29c30>
  42c638:	b	42c614 <feof@plt+0x29c44>
  42c63c:	ldr	w8, [sp, #40]
  42c640:	ldr	w9, [sp, #8]
  42c644:	cmp	w8, w9
  42c648:	b.ne	42c6c4 <feof@plt+0x29cf4>  // b.any
  42c64c:	ldr	w23, [sp, #44]
  42c650:	ldr	w8, [sp, #12]
  42c654:	cmp	w23, w8
  42c658:	b.le	42c72c <feof@plt+0x29d5c>
  42c65c:	ldr	w8, [x19, #120]
  42c660:	mov	w9, #0x1                   	// #1
  42c664:	strb	w9, [x19, #160]
  42c668:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c66c:	mov	w21, wzr
  42c670:	b	42c6a8 <feof@plt+0x29cd8>
  42c674:	ldr	x9, [x19, #152]
  42c678:	sub	w10, w21, #0x2
  42c67c:	add	x9, x9, w10, sxtw #3
  42c680:	ldr	x20, [x9]
  42c684:	cbz	x20, 42c69c <feof@plt+0x29ccc>
  42c688:	ldr	x0, [x20, #8]
  42c68c:	bl	4024c0 <free@plt>
  42c690:	mov	x0, x20
  42c694:	bl	402670 <_ZdlPv@plt>
  42c698:	ldr	w8, [x19, #120]
  42c69c:	add	w21, w21, #0x1
  42c6a0:	cmp	w21, w8
  42c6a4:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c6a8:	cmp	w21, #0x1
  42c6ac:	b.gt	42c674 <feof@plt+0x29ca4>
  42c6b0:	add	x9, x19, w21, sxtw #3
  42c6b4:	add	x9, x9, #0x80
  42c6b8:	ldr	x20, [x9]
  42c6bc:	cbnz	x20, 42c688 <feof@plt+0x29cb8>
  42c6c0:	b	42c69c <feof@plt+0x29ccc>
  42c6c4:	ldr	w8, [x19, #120]
  42c6c8:	mov	w9, #0x1                   	// #1
  42c6cc:	strb	w9, [x19, #160]
  42c6d0:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c6d4:	mov	w21, wzr
  42c6d8:	b	42c710 <feof@plt+0x29d40>
  42c6dc:	ldr	x9, [x19, #152]
  42c6e0:	sub	w10, w21, #0x2
  42c6e4:	add	x9, x9, w10, sxtw #3
  42c6e8:	ldr	x20, [x9]
  42c6ec:	cbz	x20, 42c704 <feof@plt+0x29d34>
  42c6f0:	ldr	x0, [x20, #8]
  42c6f4:	bl	4024c0 <free@plt>
  42c6f8:	mov	x0, x20
  42c6fc:	bl	402670 <_ZdlPv@plt>
  42c700:	ldr	w8, [x19, #120]
  42c704:	add	w21, w21, #0x1
  42c708:	cmp	w21, w8
  42c70c:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c710:	cmp	w21, #0x1
  42c714:	b.gt	42c6dc <feof@plt+0x29d0c>
  42c718:	add	x9, x19, w21, sxtw #3
  42c71c:	add	x9, x9, #0x80
  42c720:	ldr	x20, [x9]
  42c724:	cbnz	x20, 42c6f0 <feof@plt+0x29d20>
  42c728:	b	42c704 <feof@plt+0x29d34>
  42c72c:	mov	w1, #0xa                   	// #10
  42c730:	mov	x0, x20
  42c734:	bl	402500 <strchr@plt>
  42c738:	cbz	x0, 42c7b8 <feof@plt+0x29de8>
  42c73c:	cmp	w22, w21
  42c740:	b.ne	42c7d8 <feof@plt+0x29e08>  // b.any
  42c744:	cmp	w23, #0x1
  42c748:	b.ne	42c83c <feof@plt+0x29e6c>  // b.any
  42c74c:	ldrb	w8, [x0, #1]
  42c750:	cbz	w8, 42c7b8 <feof@plt+0x29de8>
  42c754:	ldr	w8, [x19, #120]
  42c758:	mov	w9, #0x1                   	// #1
  42c75c:	strb	w9, [x19, #160]
  42c760:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c764:	mov	w21, wzr
  42c768:	b	42c778 <feof@plt+0x29da8>
  42c76c:	add	w21, w21, #0x1
  42c770:	cmp	w21, w8
  42c774:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c778:	cmp	w21, #0x1
  42c77c:	b.gt	42c78c <feof@plt+0x29dbc>
  42c780:	add	x9, x19, w21, sxtw #3
  42c784:	add	x9, x9, #0x80
  42c788:	b	42c798 <feof@plt+0x29dc8>
  42c78c:	ldr	x9, [x19, #152]
  42c790:	sub	w10, w21, #0x2
  42c794:	add	x9, x9, w10, sxtw #3
  42c798:	ldr	x20, [x9]
  42c79c:	cbz	x20, 42c76c <feof@plt+0x29d9c>
  42c7a0:	ldr	x0, [x20, #8]
  42c7a4:	bl	4024c0 <free@plt>
  42c7a8:	mov	x0, x20
  42c7ac:	bl	402670 <_ZdlPv@plt>
  42c7b0:	ldr	w8, [x19, #120]
  42c7b4:	b	42c76c <feof@plt+0x29d9c>
  42c7b8:	ldr	w8, [x19, #120]
  42c7bc:	cbz	w8, 42c948 <feof@plt+0x29f78>
  42c7c0:	sub	w9, w8, #0x1
  42c7c4:	cmp	w9, #0x1
  42c7c8:	b.gt	42c8bc <feof@plt+0x29eec>
  42c7cc:	add	x8, x19, w9, sxtw #3
  42c7d0:	add	x8, x8, #0x80
  42c7d4:	b	42c8c8 <feof@plt+0x29ef8>
  42c7d8:	ldr	w8, [x19, #120]
  42c7dc:	mov	w9, #0x1                   	// #1
  42c7e0:	strb	w9, [x19, #160]
  42c7e4:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c7e8:	mov	w21, wzr
  42c7ec:	b	42c7fc <feof@plt+0x29e2c>
  42c7f0:	add	w21, w21, #0x1
  42c7f4:	cmp	w21, w8
  42c7f8:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c7fc:	cmp	w21, #0x1
  42c800:	b.gt	42c810 <feof@plt+0x29e40>
  42c804:	add	x9, x19, w21, sxtw #3
  42c808:	add	x9, x9, #0x80
  42c80c:	b	42c81c <feof@plt+0x29e4c>
  42c810:	ldr	x9, [x19, #152]
  42c814:	sub	w10, w21, #0x2
  42c818:	add	x9, x9, w10, sxtw #3
  42c81c:	ldr	x20, [x9]
  42c820:	cbz	x20, 42c7f0 <feof@plt+0x29e20>
  42c824:	ldr	x0, [x20, #8]
  42c828:	bl	4024c0 <free@plt>
  42c82c:	mov	x0, x20
  42c830:	bl	402670 <_ZdlPv@plt>
  42c834:	ldr	w8, [x19, #120]
  42c838:	b	42c7f0 <feof@plt+0x29e20>
  42c83c:	ldr	w8, [x19, #120]
  42c840:	mov	w9, #0x1                   	// #1
  42c844:	strb	w9, [x19, #160]
  42c848:	cbz	w8, 42c8a0 <feof@plt+0x29ed0>
  42c84c:	mov	w21, wzr
  42c850:	b	42c860 <feof@plt+0x29e90>
  42c854:	add	w21, w21, #0x1
  42c858:	cmp	w21, w8
  42c85c:	b.cs	42c8a0 <feof@plt+0x29ed0>  // b.hs, b.nlast
  42c860:	cmp	w21, #0x1
  42c864:	b.gt	42c874 <feof@plt+0x29ea4>
  42c868:	add	x9, x19, w21, sxtw #3
  42c86c:	add	x9, x9, #0x80
  42c870:	b	42c880 <feof@plt+0x29eb0>
  42c874:	ldr	x9, [x19, #152]
  42c878:	sub	w10, w21, #0x2
  42c87c:	add	x9, x9, w10, sxtw #3
  42c880:	ldr	x20, [x9]
  42c884:	cbz	x20, 42c854 <feof@plt+0x29e84>
  42c888:	ldr	x0, [x20, #8]
  42c88c:	bl	4024c0 <free@plt>
  42c890:	mov	x0, x20
  42c894:	bl	402670 <_ZdlPv@plt>
  42c898:	ldr	w8, [x19, #120]
  42c89c:	b	42c854 <feof@plt+0x29e84>
  42c8a0:	str	wzr, [x19, #120]
  42c8a4:	ldp	x20, x19, [sp, #112]
  42c8a8:	ldp	x22, x21, [sp, #96]
  42c8ac:	ldp	x24, x23, [sp, #80]
  42c8b0:	ldp	x29, x30, [sp, #64]
  42c8b4:	add	sp, sp, #0x80
  42c8b8:	ret
  42c8bc:	ldr	x9, [x19, #152]
  42c8c0:	sub	w8, w8, #0x3
  42c8c4:	add	x8, x9, w8, sxtw #3
  42c8c8:	ldr	x23, [x8]
  42c8cc:	cbz	x23, 42c948 <feof@plt+0x29f78>
  42c8d0:	ldr	x24, [x23, #16]
  42c8d4:	cbz	x24, 42c8ec <feof@plt+0x29f1c>
  42c8d8:	ldr	x8, [x23, #8]
  42c8dc:	add	x8, x24, x8
  42c8e0:	ldurb	w8, [x8, #-1]
  42c8e4:	cmp	w8, #0xa
  42c8e8:	b.eq	42c948 <feof@plt+0x29f78>  // b.none
  42c8ec:	ldr	w8, [x23, #4]
  42c8f0:	cmp	w8, w22
  42c8f4:	b.ne	42c948 <feof@plt+0x29f78>  // b.any
  42c8f8:	mov	x0, x20
  42c8fc:	str	w21, [x23, #4]
  42c900:	bl	402420 <strlen@plt>
  42c904:	ldr	x8, [x23, #8]
  42c908:	add	x9, x24, x0
  42c90c:	mov	x19, x0
  42c910:	add	x1, x9, #0x1
  42c914:	mov	x0, x8
  42c918:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42c91c:	ldr	x8, [x23, #16]
  42c920:	str	x0, [x23, #8]
  42c924:	mov	x1, x20
  42c928:	mov	x2, x19
  42c92c:	add	x0, x0, x8
  42c930:	bl	402390 <memcpy@plt>
  42c934:	ldp	x9, x8, [x23, #8]
  42c938:	add	x8, x8, x19
  42c93c:	str	x8, [x23, #16]
  42c940:	strb	wzr, [x9, x8]
  42c944:	b	42c8a4 <feof@plt+0x29ed4>
  42c948:	mov	w0, #0x18                  	// #24
  42c94c:	bl	4026a0 <_Znwm@plt>
  42c950:	mov	x23, x0
  42c954:	stp	w22, w21, [x0]
  42c958:	mov	x0, x20
  42c95c:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  42c960:	str	x0, [x23, #8]
  42c964:	mov	x0, x20
  42c968:	bl	402420 <strlen@plt>
  42c96c:	str	x0, [x23, #16]
  42c970:	ldrsw	x8, [x19, #120]
  42c974:	add	w9, w8, #0x1
  42c978:	cmp	w8, #0x1
  42c97c:	str	w9, [x19, #120]
  42c980:	b.gt	42c990 <feof@plt+0x29fc0>
  42c984:	add	x8, x19, x8, lsl #3
  42c988:	str	x23, [x8, #128]
  42c98c:	b	42c8a4 <feof@plt+0x29ed4>
  42c990:	ldr	x0, [x19, #152]
  42c994:	sub	w20, w8, #0x2
  42c998:	cbz	x0, 42c9bc <feof@plt+0x29fec>
  42c99c:	ldrsw	x8, [x19, #144]
  42c9a0:	cmp	w20, w8
  42c9a4:	b.lt	42c9d0 <feof@plt+0x2a000>  // b.tstop
  42c9a8:	lsl	w9, w8, #1
  42c9ac:	lsl	x1, x8, #4
  42c9b0:	str	w9, [x19, #144]
  42c9b4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42c9b8:	b	42c9cc <feof@plt+0x29ffc>
  42c9bc:	mov	w8, #0x10                  	// #16
  42c9c0:	mov	w0, #0x80                  	// #128
  42c9c4:	str	w8, [x19, #144]
  42c9c8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42c9cc:	str	x0, [x19, #152]
  42c9d0:	str	x23, [x0, w20, uxtw #3]
  42c9d4:	b	42c8a4 <feof@plt+0x29ed4>
  42c9d8:	ldr	w8, [x0, #16]
  42c9dc:	mov	x2, x1
  42c9e0:	mov	w1, w8
  42c9e4:	b	42c9e8 <feof@plt+0x2a018>
  42c9e8:	stp	x29, x30, [sp, #-48]!
  42c9ec:	stp	x22, x21, [sp, #16]
  42c9f0:	stp	x20, x19, [sp, #32]
  42c9f4:	mov	x19, x0
  42c9f8:	ldr	x0, [x0]
  42c9fc:	mov	x20, x2
  42ca00:	mov	w21, w1
  42ca04:	mov	x29, sp
  42ca08:	tbnz	w1, #31, 42ca30 <feof@plt+0x2a060>
  42ca0c:	cmp	w21, #0x2
  42ca10:	b.cc	42ca8c <feof@plt+0x2a0bc>  // b.lo, b.ul, b.last
  42ca14:	ldr	w8, [x0, #36]
  42ca18:	cbz	w8, 42ca48 <feof@plt+0x2a078>
  42ca1c:	ldr	x9, [x0, #24]
  42ca20:	sub	w8, w8, #0x1
  42ca24:	sbfiz	x8, x8, #5, #32
  42ca28:	ldr	w8, [x9, x8]
  42ca2c:	b	42ca4c <feof@plt+0x2a07c>
  42ca30:	ldr	x8, [x0, #104]
  42ca34:	and	w9, w21, #0x7fffffff
  42ca38:	mov	w10, #0x18                  	// #24
  42ca3c:	umaddl	x8, w9, w10, x8
  42ca40:	ldr	w21, [x8, #8]
  42ca44:	b	42ca8c <feof@plt+0x2a0bc>
  42ca48:	mov	w8, #0x80000000            	// #-2147483648
  42ca4c:	mov	w9, #0x50000000            	// #1342177280
  42ca50:	cmp	w21, w9
  42ca54:	b.hi	42ca8c <feof@plt+0x2a0bc>  // b.pmore
  42ca58:	cmp	w8, w21
  42ca5c:	b.ls	42ca8c <feof@plt+0x2a0bc>  // b.plast
  42ca60:	mov	w1, w21
  42ca64:	bl	429b2c <feof@plt+0x2715c>
  42ca68:	ldrh	w8, [x0, #6]
  42ca6c:	mov	w9, #0xffffffff            	// #-1
  42ca70:	ldr	x0, [x19]
  42ca74:	lsr	x8, x8, #8
  42ca78:	lsl	w9, w9, w8
  42ca7c:	bic	w9, w21, w9
  42ca80:	sub	w10, w21, w9
  42ca84:	lsl	w8, w9, w8
  42ca88:	add	w21, w10, w8
  42ca8c:	mov	w2, #0x1                   	// #1
  42ca90:	mov	w1, w21
  42ca94:	mov	w22, #0x1                   	// #1
  42ca98:	bl	42a940 <feof@plt+0x27f70>
  42ca9c:	cmp	w0, w21
  42caa0:	b.ne	42cb0c <feof@plt+0x2a13c>  // b.any
  42caa4:	ldr	w8, [x19, #120]
  42caa8:	strb	w22, [x19, #160]
  42caac:	cbz	w8, 42cb2c <feof@plt+0x2a15c>
  42cab0:	mov	w21, wzr
  42cab4:	b	42cac4 <feof@plt+0x2a0f4>
  42cab8:	add	w21, w21, #0x1
  42cabc:	cmp	w21, w8
  42cac0:	b.cs	42cb2c <feof@plt+0x2a15c>  // b.hs, b.nlast
  42cac4:	cmp	w21, #0x1
  42cac8:	b.gt	42cae0 <feof@plt+0x2a110>
  42cacc:	add	x9, x19, w21, sxtw #3
  42cad0:	add	x9, x9, #0x80
  42cad4:	ldr	x20, [x9]
  42cad8:	cbnz	x20, 42caf4 <feof@plt+0x2a124>
  42cadc:	b	42cab8 <feof@plt+0x2a0e8>
  42cae0:	ldr	x9, [x19, #152]
  42cae4:	sub	w10, w21, #0x2
  42cae8:	add	x9, x9, w10, sxtw #3
  42caec:	ldr	x20, [x9]
  42caf0:	cbz	x20, 42cab8 <feof@plt+0x2a0e8>
  42caf4:	ldr	x0, [x20, #8]
  42caf8:	bl	4024c0 <free@plt>
  42cafc:	mov	x0, x20
  42cb00:	bl	402670 <_ZdlPv@plt>
  42cb04:	ldr	w8, [x19, #120]
  42cb08:	b	42cab8 <feof@plt+0x2a0e8>
  42cb0c:	mov	w1, w0
  42cb10:	mov	x0, x19
  42cb14:	mov	x3, x20
  42cb18:	ldp	x20, x19, [sp, #32]
  42cb1c:	ldp	x22, x21, [sp, #16]
  42cb20:	mov	w2, w1
  42cb24:	ldp	x29, x30, [sp], #48
  42cb28:	b	42c48c <feof@plt+0x29abc>
  42cb2c:	str	wzr, [x19, #120]
  42cb30:	ldp	x20, x19, [sp, #32]
  42cb34:	ldp	x22, x21, [sp, #16]
  42cb38:	ldp	x29, x30, [sp], #48
  42cb3c:	ret
  42cb40:	stp	x29, x30, [sp, #-48]!
  42cb44:	stp	x20, x19, [sp, #32]
  42cb48:	ldr	w8, [x0, #120]
  42cb4c:	mov	x19, x0
  42cb50:	mov	w9, #0x1                   	// #1
  42cb54:	str	x21, [sp, #16]
  42cb58:	mov	x29, sp
  42cb5c:	strb	w9, [x0, #160]
  42cb60:	cbz	w8, 42cbc0 <feof@plt+0x2a1f0>
  42cb64:	mov	w21, wzr
  42cb68:	b	42cb78 <feof@plt+0x2a1a8>
  42cb6c:	add	w21, w21, #0x1
  42cb70:	cmp	w21, w8
  42cb74:	b.cs	42cbc0 <feof@plt+0x2a1f0>  // b.hs, b.nlast
  42cb78:	cmp	w21, #0x1
  42cb7c:	b.gt	42cb94 <feof@plt+0x2a1c4>
  42cb80:	add	x9, x19, w21, sxtw #3
  42cb84:	add	x9, x9, #0x80
  42cb88:	ldr	x20, [x9]
  42cb8c:	cbnz	x20, 42cba8 <feof@plt+0x2a1d8>
  42cb90:	b	42cb6c <feof@plt+0x2a19c>
  42cb94:	ldr	x9, [x19, #152]
  42cb98:	sub	w10, w21, #0x2
  42cb9c:	add	x9, x9, w10, sxtw #3
  42cba0:	ldr	x20, [x9]
  42cba4:	cbz	x20, 42cb6c <feof@plt+0x2a19c>
  42cba8:	ldr	x0, [x20, #8]
  42cbac:	bl	4024c0 <free@plt>
  42cbb0:	mov	x0, x20
  42cbb4:	bl	402670 <_ZdlPv@plt>
  42cbb8:	ldr	w8, [x19, #120]
  42cbbc:	b	42cb6c <feof@plt+0x2a19c>
  42cbc0:	str	wzr, [x19, #120]
  42cbc4:	ldp	x20, x19, [sp, #32]
  42cbc8:	ldr	x21, [sp, #16]
  42cbcc:	ldp	x29, x30, [sp], #48
  42cbd0:	ret
  42cbd4:	stp	x29, x30, [sp, #-32]!
  42cbd8:	stp	x20, x19, [sp, #16]
  42cbdc:	mov	x19, x0
  42cbe0:	ldr	w20, [x0, #16]
  42cbe4:	ldr	x0, [x0]
  42cbe8:	mov	x29, sp
  42cbec:	tbnz	w20, #31, 42cc14 <feof@plt+0x2a244>
  42cbf0:	cmp	w20, #0x2
  42cbf4:	b.cc	42cc70 <feof@plt+0x2a2a0>  // b.lo, b.ul, b.last
  42cbf8:	ldr	w8, [x0, #36]
  42cbfc:	cbz	w8, 42cc2c <feof@plt+0x2a25c>
  42cc00:	ldr	x9, [x0, #24]
  42cc04:	sub	w8, w8, #0x1
  42cc08:	sbfiz	x8, x8, #5, #32
  42cc0c:	ldr	w8, [x9, x8]
  42cc10:	b	42cc30 <feof@plt+0x2a260>
  42cc14:	ldr	x8, [x0, #104]
  42cc18:	and	x9, x20, #0x7fffffff
  42cc1c:	mov	w10, #0x18                  	// #24
  42cc20:	madd	x8, x9, x10, x8
  42cc24:	ldp	w20, w8, [x8, #4]
  42cc28:	b	42cc74 <feof@plt+0x2a2a4>
  42cc2c:	mov	w8, #0x80000000            	// #-2147483648
  42cc30:	mov	w9, #0x50000000            	// #1342177280
  42cc34:	cmp	w20, w9
  42cc38:	b.hi	42cc70 <feof@plt+0x2a2a0>  // b.pmore
  42cc3c:	cmp	w8, w20
  42cc40:	b.ls	42cc70 <feof@plt+0x2a2a0>  // b.plast
  42cc44:	mov	w1, w20
  42cc48:	bl	429b2c <feof@plt+0x2715c>
  42cc4c:	ldrh	w8, [x0, #6]
  42cc50:	mov	w9, #0xffffffff            	// #-1
  42cc54:	lsr	x8, x8, #8
  42cc58:	lsl	w9, w9, w8
  42cc5c:	bic	w9, w20, w9
  42cc60:	sub	w20, w20, w9
  42cc64:	lsl	w8, w9, w8
  42cc68:	add	w8, w20, w8
  42cc6c:	b	42cc74 <feof@plt+0x2a2a4>
  42cc70:	mov	w8, w20
  42cc74:	mov	w1, w20
  42cc78:	mov	x0, x19
  42cc7c:	ldp	x20, x19, [sp, #16]
  42cc80:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  42cc84:	bfi	x1, x8, #32, #32
  42cc88:	add	x2, x2, #0xb34
  42cc8c:	ldp	x29, x30, [sp], #32
  42cc90:	b	42cd60 <feof@plt+0x2a390>
  42cc94:	stp	x29, x30, [sp, #-32]!
  42cc98:	stp	x20, x19, [sp, #16]
  42cc9c:	mov	x19, x0
  42cca0:	ldr	x0, [x0]
  42cca4:	mov	w20, w1
  42cca8:	mov	x29, sp
  42ccac:	tbnz	w1, #31, 42ccd4 <feof@plt+0x2a304>
  42ccb0:	cmp	w20, #0x2
  42ccb4:	b.cc	42cd30 <feof@plt+0x2a360>  // b.lo, b.ul, b.last
  42ccb8:	ldr	w8, [x0, #36]
  42ccbc:	cbz	w8, 42ccec <feof@plt+0x2a31c>
  42ccc0:	ldr	x9, [x0, #24]
  42ccc4:	sub	w8, w8, #0x1
  42ccc8:	sbfiz	x8, x8, #5, #32
  42cccc:	ldr	w8, [x9, x8]
  42ccd0:	b	42ccf0 <feof@plt+0x2a320>
  42ccd4:	ldr	x8, [x0, #104]
  42ccd8:	and	w9, w20, #0x7fffffff
  42ccdc:	mov	w10, #0x18                  	// #24
  42cce0:	umaddl	x8, w9, w10, x8
  42cce4:	ldp	w20, w8, [x8, #4]
  42cce8:	b	42cd34 <feof@plt+0x2a364>
  42ccec:	mov	w8, #0x80000000            	// #-2147483648
  42ccf0:	mov	w9, #0x50000000            	// #1342177280
  42ccf4:	cmp	w20, w9
  42ccf8:	b.hi	42cd30 <feof@plt+0x2a360>  // b.pmore
  42ccfc:	cmp	w8, w20
  42cd00:	b.ls	42cd30 <feof@plt+0x2a360>  // b.plast
  42cd04:	mov	w1, w20
  42cd08:	bl	429b2c <feof@plt+0x2715c>
  42cd0c:	ldrh	w8, [x0, #6]
  42cd10:	mov	w9, #0xffffffff            	// #-1
  42cd14:	lsr	x8, x8, #8
  42cd18:	lsl	w9, w9, w8
  42cd1c:	bic	w9, w20, w9
  42cd20:	sub	w20, w20, w9
  42cd24:	lsl	w8, w9, w8
  42cd28:	add	w8, w20, w8
  42cd2c:	b	42cd34 <feof@plt+0x2a364>
  42cd30:	mov	w8, w20
  42cd34:	mov	w1, w20
  42cd38:	mov	x0, x19
  42cd3c:	ldp	x20, x19, [sp, #16]
  42cd40:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  42cd44:	bfi	x1, x8, #32, #32
  42cd48:	add	x2, x2, #0xb34
  42cd4c:	ldp	x29, x30, [sp], #32
  42cd50:	b	42cd60 <feof@plt+0x2a390>
  42cd54:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0xaa68>
  42cd58:	add	x2, x2, #0xb34
  42cd5c:	b	42cd60 <feof@plt+0x2a390>
  42cd60:	stp	x29, x30, [sp, #-64]!
  42cd64:	stp	x22, x21, [sp, #32]
  42cd68:	stp	x20, x19, [sp, #48]
  42cd6c:	mov	x19, x0
  42cd70:	ldr	x0, [x0]
  42cd74:	str	x23, [sp, #16]
  42cd78:	mov	x23, x1
  42cd7c:	mov	x20, x2
  42cd80:	mov	w21, w23
  42cd84:	mov	x29, sp
  42cd88:	tbz	w23, #31, 42cda0 <feof@plt+0x2a3d0>
  42cd8c:	ldr	x8, [x0, #104]
  42cd90:	and	x9, x23, #0x7fffffff
  42cd94:	mov	w10, #0x18                  	// #24
  42cd98:	mul	x9, x9, x10
  42cd9c:	ldr	w21, [x8, x9]
  42cda0:	ldr	w8, [x0, #36]
  42cda4:	lsr	x22, x23, #32
  42cda8:	cbz	w8, 42cdc8 <feof@plt+0x2a3f8>
  42cdac:	ldr	x9, [x0, #24]
  42cdb0:	sub	w8, w8, #0x1
  42cdb4:	sbfiz	x8, x8, #5, #32
  42cdb8:	ldr	w8, [x9, x8]
  42cdbc:	cmp	w21, #0x2
  42cdc0:	b.cs	42cdd4 <feof@plt+0x2a404>  // b.hs, b.nlast
  42cdc4:	b	42cdf8 <feof@plt+0x2a428>
  42cdc8:	mov	w8, #0x80000000            	// #-2147483648
  42cdcc:	cmp	w21, #0x2
  42cdd0:	b.cc	42cdf8 <feof@plt+0x2a428>  // b.lo, b.ul, b.last
  42cdd4:	cmp	w21, w8
  42cdd8:	b.cs	42cdf8 <feof@plt+0x2a428>  // b.hs, b.nlast
  42cddc:	mov	w1, w21
  42cde0:	bl	429b2c <feof@plt+0x2715c>
  42cde4:	ldrb	w8, [x0, #7]
  42cde8:	ldr	x0, [x19]
  42cdec:	mov	w9, #0xffffffff            	// #-1
  42cdf0:	lsl	w8, w9, w8
  42cdf4:	and	w21, w8, w21
  42cdf8:	tbnz	w22, #31, 42ce20 <feof@plt+0x2a450>
  42cdfc:	ldr	w8, [x0, #36]
  42ce00:	cbz	w8, 42ce3c <feof@plt+0x2a46c>
  42ce04:	ldr	x9, [x0, #24]
  42ce08:	sub	w8, w8, #0x1
  42ce0c:	sbfiz	x8, x8, #5, #32
  42ce10:	ldr	w8, [x9, x8]
  42ce14:	cmp	w22, #0x2
  42ce18:	b.cs	42ce48 <feof@plt+0x2a478>  // b.hs, b.nlast
  42ce1c:	b	42ce6c <feof@plt+0x2a49c>
  42ce20:	ldr	x8, [x0, #104]
  42ce24:	ubfx	x9, x23, #32, #31
  42ce28:	mov	w10, #0x18                  	// #24
  42ce2c:	mul	x9, x9, x10
  42ce30:	ldr	w22, [x8, x9]
  42ce34:	ldr	w8, [x0, #36]
  42ce38:	cbnz	w8, 42ce04 <feof@plt+0x2a434>
  42ce3c:	mov	w8, #0x80000000            	// #-2147483648
  42ce40:	cmp	w22, #0x2
  42ce44:	b.cc	42ce6c <feof@plt+0x2a49c>  // b.lo, b.ul, b.last
  42ce48:	cmp	w22, w8
  42ce4c:	b.cs	42ce6c <feof@plt+0x2a49c>  // b.hs, b.nlast
  42ce50:	mov	w1, w22
  42ce54:	bl	429b2c <feof@plt+0x2715c>
  42ce58:	ldrb	w8, [x0, #7]
  42ce5c:	ldr	x0, [x19]
  42ce60:	mov	w9, #0xffffffff            	// #-1
  42ce64:	lsl	w8, w9, w8
  42ce68:	and	w22, w8, w22
  42ce6c:	mov	w2, #0x1                   	// #1
  42ce70:	mov	w1, w22
  42ce74:	mov	w23, #0x1                   	// #1
  42ce78:	bl	42a940 <feof@plt+0x27f70>
  42ce7c:	cmp	w0, w22
  42ce80:	b.ne	42ceec <feof@plt+0x2a51c>  // b.any
  42ce84:	ldr	w8, [x19, #120]
  42ce88:	strb	w23, [x19, #160]
  42ce8c:	cbz	w8, 42cf10 <feof@plt+0x2a540>
  42ce90:	mov	w21, wzr
  42ce94:	b	42cea4 <feof@plt+0x2a4d4>
  42ce98:	add	w21, w21, #0x1
  42ce9c:	cmp	w21, w8
  42cea0:	b.cs	42cf10 <feof@plt+0x2a540>  // b.hs, b.nlast
  42cea4:	cmp	w21, #0x1
  42cea8:	b.gt	42cec0 <feof@plt+0x2a4f0>
  42ceac:	add	x9, x19, w21, sxtw #3
  42ceb0:	add	x9, x9, #0x80
  42ceb4:	ldr	x20, [x9]
  42ceb8:	cbnz	x20, 42ced4 <feof@plt+0x2a504>
  42cebc:	b	42ce98 <feof@plt+0x2a4c8>
  42cec0:	ldr	x9, [x19, #152]
  42cec4:	sub	w10, w21, #0x2
  42cec8:	add	x9, x9, w10, sxtw #3
  42cecc:	ldr	x20, [x9]
  42ced0:	cbz	x20, 42ce98 <feof@plt+0x2a4c8>
  42ced4:	ldr	x0, [x20, #8]
  42ced8:	bl	4024c0 <free@plt>
  42cedc:	mov	x0, x20
  42cee0:	bl	402670 <_ZdlPv@plt>
  42cee4:	ldr	w8, [x19, #120]
  42cee8:	b	42ce98 <feof@plt+0x2a4c8>
  42ceec:	mov	w2, w0
  42cef0:	mov	x0, x19
  42cef4:	mov	w1, w21
  42cef8:	mov	x3, x20
  42cefc:	ldp	x20, x19, [sp, #48]
  42cf00:	ldp	x22, x21, [sp, #32]
  42cf04:	ldr	x23, [sp, #16]
  42cf08:	ldp	x29, x30, [sp], #64
  42cf0c:	b	42c48c <feof@plt+0x29abc>
  42cf10:	str	wzr, [x19, #120]
  42cf14:	ldp	x20, x19, [sp, #48]
  42cf18:	ldp	x22, x21, [sp, #32]
  42cf1c:	ldr	x23, [sp, #16]
  42cf20:	ldp	x29, x30, [sp], #64
  42cf24:	ret
  42cf28:	stp	x29, x30, [sp, #-48]!
  42cf2c:	stp	x20, x19, [sp, #32]
  42cf30:	str	x21, [sp, #16]
  42cf34:	mov	x19, x0
  42cf38:	ldr	w21, [x0, #16]
  42cf3c:	ldr	x0, [x0]
  42cf40:	mov	x20, x1
  42cf44:	mov	x29, sp
  42cf48:	tbnz	w21, #31, 42cf70 <feof@plt+0x2a5a0>
  42cf4c:	cmp	w21, #0x2
  42cf50:	b.cc	42cfcc <feof@plt+0x2a5fc>  // b.lo, b.ul, b.last
  42cf54:	ldr	w8, [x0, #36]
  42cf58:	cbz	w8, 42cf88 <feof@plt+0x2a5b8>
  42cf5c:	ldr	x9, [x0, #24]
  42cf60:	sub	w8, w8, #0x1
  42cf64:	sbfiz	x8, x8, #5, #32
  42cf68:	ldr	w8, [x9, x8]
  42cf6c:	b	42cf8c <feof@plt+0x2a5bc>
  42cf70:	ldr	x8, [x0, #104]
  42cf74:	and	x9, x21, #0x7fffffff
  42cf78:	mov	w10, #0x18                  	// #24
  42cf7c:	madd	x8, x9, x10, x8
  42cf80:	ldp	w21, w8, [x8, #4]
  42cf84:	b	42cfd0 <feof@plt+0x2a600>
  42cf88:	mov	w8, #0x80000000            	// #-2147483648
  42cf8c:	mov	w9, #0x50000000            	// #1342177280
  42cf90:	cmp	w21, w9
  42cf94:	b.hi	42cfcc <feof@plt+0x2a5fc>  // b.pmore
  42cf98:	cmp	w8, w21
  42cf9c:	b.ls	42cfcc <feof@plt+0x2a5fc>  // b.plast
  42cfa0:	mov	w1, w21
  42cfa4:	bl	429b2c <feof@plt+0x2715c>
  42cfa8:	ldrh	w8, [x0, #6]
  42cfac:	mov	w9, #0xffffffff            	// #-1
  42cfb0:	lsr	x8, x8, #8
  42cfb4:	lsl	w9, w9, w8
  42cfb8:	bic	w9, w21, w9
  42cfbc:	sub	w21, w21, w9
  42cfc0:	lsl	w8, w9, w8
  42cfc4:	add	w8, w21, w8
  42cfc8:	b	42cfd0 <feof@plt+0x2a600>
  42cfcc:	mov	w8, w21
  42cfd0:	mov	w1, w21
  42cfd4:	mov	x0, x19
  42cfd8:	mov	x2, x20
  42cfdc:	ldp	x20, x19, [sp, #32]
  42cfe0:	ldr	x21, [sp, #16]
  42cfe4:	bfi	x1, x8, #32, #32
  42cfe8:	ldp	x29, x30, [sp], #48
  42cfec:	b	42cd60 <feof@plt+0x2a390>
  42cff0:	stp	x29, x30, [sp, #-48]!
  42cff4:	stp	x20, x19, [sp, #32]
  42cff8:	mov	x20, x0
  42cffc:	ldr	x0, [x0]
  42d000:	str	x21, [sp, #16]
  42d004:	mov	x19, x2
  42d008:	mov	w21, w1
  42d00c:	mov	x29, sp
  42d010:	tbnz	w1, #31, 42d038 <feof@plt+0x2a668>
  42d014:	cmp	w21, #0x2
  42d018:	b.cc	42d094 <feof@plt+0x2a6c4>  // b.lo, b.ul, b.last
  42d01c:	ldr	w8, [x0, #36]
  42d020:	cbz	w8, 42d050 <feof@plt+0x2a680>
  42d024:	ldr	x9, [x0, #24]
  42d028:	sub	w8, w8, #0x1
  42d02c:	sbfiz	x8, x8, #5, #32
  42d030:	ldr	w8, [x9, x8]
  42d034:	b	42d054 <feof@plt+0x2a684>
  42d038:	ldr	x8, [x0, #104]
  42d03c:	and	w9, w21, #0x7fffffff
  42d040:	mov	w10, #0x18                  	// #24
  42d044:	umaddl	x8, w9, w10, x8
  42d048:	ldp	w21, w8, [x8, #4]
  42d04c:	b	42d098 <feof@plt+0x2a6c8>
  42d050:	mov	w8, #0x80000000            	// #-2147483648
  42d054:	mov	w9, #0x50000000            	// #1342177280
  42d058:	cmp	w21, w9
  42d05c:	b.hi	42d094 <feof@plt+0x2a6c4>  // b.pmore
  42d060:	cmp	w8, w21
  42d064:	b.ls	42d094 <feof@plt+0x2a6c4>  // b.plast
  42d068:	mov	w1, w21
  42d06c:	bl	429b2c <feof@plt+0x2715c>
  42d070:	ldrh	w8, [x0, #6]
  42d074:	mov	w9, #0xffffffff            	// #-1
  42d078:	lsr	x8, x8, #8
  42d07c:	lsl	w9, w9, w8
  42d080:	bic	w9, w21, w9
  42d084:	sub	w21, w21, w9
  42d088:	lsl	w8, w9, w8
  42d08c:	add	w8, w21, w8
  42d090:	b	42d098 <feof@plt+0x2a6c8>
  42d094:	mov	w8, w21
  42d098:	mov	w1, w21
  42d09c:	mov	x0, x20
  42d0a0:	mov	x2, x19
  42d0a4:	ldp	x20, x19, [sp, #32]
  42d0a8:	ldr	x21, [sp, #16]
  42d0ac:	bfi	x1, x8, #32, #32
  42d0b0:	ldp	x29, x30, [sp], #48
  42d0b4:	b	42cd60 <feof@plt+0x2a390>
  42d0b8:	ldr	w8, [x0, #120]
  42d0bc:	cbz	w8, 42d0d8 <feof@plt+0x2a708>
  42d0c0:	sub	w9, w8, #0x1
  42d0c4:	cmp	w9, #0x1
  42d0c8:	b.gt	42d0e0 <feof@plt+0x2a710>
  42d0cc:	add	x8, x0, w9, sxtw #3
  42d0d0:	ldr	x0, [x8, #128]!
  42d0d4:	ret
  42d0d8:	mov	x0, xzr
  42d0dc:	ret
  42d0e0:	ldr	x9, [x0, #152]
  42d0e4:	sub	w8, w8, #0x3
  42d0e8:	add	x8, x9, w8, sxtw #3
  42d0ec:	ldr	x0, [x8]
  42d0f0:	ret
  42d0f4:	stp	x29, x30, [sp, #-48]!
  42d0f8:	stp	x20, x19, [sp, #32]
  42d0fc:	ldrb	w8, [x0, #160]
  42d100:	str	x21, [sp, #16]
  42d104:	mov	x29, sp
  42d108:	cbnz	w8, 42d198 <feof@plt+0x2a7c8>
  42d10c:	mov	w8, #0x1                   	// #1
  42d110:	movk	w8, #0x6000, lsl #16
  42d114:	cmp	w1, w8
  42d118:	b.cs	42d124 <feof@plt+0x2a754>  // b.hs, b.nlast
  42d11c:	mov	w0, wzr
  42d120:	b	42d19c <feof@plt+0x2a7cc>
  42d124:	ldr	w8, [x0, #120]
  42d128:	mov	x19, x0
  42d12c:	mov	w9, #0x1                   	// #1
  42d130:	strb	w9, [x0, #160]
  42d134:	cbz	w8, 42d194 <feof@plt+0x2a7c4>
  42d138:	mov	w21, wzr
  42d13c:	b	42d14c <feof@plt+0x2a77c>
  42d140:	add	w21, w21, #0x1
  42d144:	cmp	w21, w8
  42d148:	b.cs	42d194 <feof@plt+0x2a7c4>  // b.hs, b.nlast
  42d14c:	cmp	w21, #0x1
  42d150:	b.gt	42d168 <feof@plt+0x2a798>
  42d154:	add	x9, x19, w21, sxtw #3
  42d158:	add	x9, x9, #0x80
  42d15c:	ldr	x20, [x9]
  42d160:	cbnz	x20, 42d17c <feof@plt+0x2a7ac>
  42d164:	b	42d140 <feof@plt+0x2a770>
  42d168:	ldr	x9, [x19, #152]
  42d16c:	sub	w10, w21, #0x2
  42d170:	add	x9, x9, w10, sxtw #3
  42d174:	ldr	x20, [x9]
  42d178:	cbz	x20, 42d140 <feof@plt+0x2a770>
  42d17c:	ldr	x0, [x20, #8]
  42d180:	bl	4024c0 <free@plt>
  42d184:	mov	x0, x20
  42d188:	bl	402670 <_ZdlPv@plt>
  42d18c:	ldr	w8, [x19, #120]
  42d190:	b	42d140 <feof@plt+0x2a770>
  42d194:	str	wzr, [x19, #120]
  42d198:	mov	w0, #0x1                   	// #1
  42d19c:	ldp	x20, x19, [sp, #32]
  42d1a0:	ldr	x21, [sp, #16]
  42d1a4:	ldp	x29, x30, [sp], #48
  42d1a8:	ret
  42d1ac:	ldr	x8, [x0, #16]
  42d1b0:	cbz	x8, 42d1cc <feof@plt+0x2a7fc>
  42d1b4:	ldr	x9, [x0, #8]
  42d1b8:	add	x8, x8, x9
  42d1bc:	ldurb	w8, [x8, #-1]
  42d1c0:	cmp	w8, #0xa
  42d1c4:	cset	w0, eq  // eq = none
  42d1c8:	ret
  42d1cc:	mov	w0, wzr
  42d1d0:	ret
  42d1d4:	stp	x29, x30, [sp, #-48]!
  42d1d8:	stp	x20, x19, [sp, #32]
  42d1dc:	ldr	w8, [x0, #4]
  42d1e0:	str	x21, [sp, #16]
  42d1e4:	mov	x29, sp
  42d1e8:	cmp	w8, w1
  42d1ec:	b.ne	42d24c <feof@plt+0x2a87c>  // b.any
  42d1f0:	mov	x19, x0
  42d1f4:	str	w2, [x0, #4]
  42d1f8:	mov	x0, x3
  42d1fc:	mov	x20, x3
  42d200:	bl	402420 <strlen@plt>
  42d204:	ldp	x8, x9, [x19, #8]
  42d208:	mov	x21, x0
  42d20c:	add	x9, x0, x9
  42d210:	add	x1, x9, #0x1
  42d214:	mov	x0, x8
  42d218:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42d21c:	ldr	x8, [x19, #16]
  42d220:	str	x0, [x19, #8]
  42d224:	mov	x1, x20
  42d228:	mov	x2, x21
  42d22c:	add	x0, x0, x8
  42d230:	bl	402390 <memcpy@plt>
  42d234:	ldp	x9, x8, [x19, #8]
  42d238:	mov	w0, #0x1                   	// #1
  42d23c:	add	x8, x8, x21
  42d240:	str	x8, [x19, #16]
  42d244:	strb	wzr, [x9, x8]
  42d248:	b	42d250 <feof@plt+0x2a880>
  42d24c:	mov	w0, wzr
  42d250:	ldp	x20, x19, [sp, #32]
  42d254:	ldr	x21, [sp, #16]
  42d258:	ldp	x29, x30, [sp], #48
  42d25c:	ret
  42d260:	stp	x29, x30, [sp, #-32]!
  42d264:	stp	x20, x19, [sp, #16]
  42d268:	mov	x20, x0
  42d26c:	stp	w1, w2, [x0]
  42d270:	mov	x0, x3
  42d274:	mov	x29, sp
  42d278:	mov	x19, x3
  42d27c:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  42d280:	str	x0, [x20, #8]
  42d284:	mov	x0, x19
  42d288:	bl	402420 <strlen@plt>
  42d28c:	str	x0, [x20, #16]
  42d290:	ldp	x20, x19, [sp, #16]
  42d294:	ldp	x29, x30, [sp], #32
  42d298:	ret
  42d29c:	sub	sp, sp, #0x70
  42d2a0:	stp	x29, x30, [sp, #64]
  42d2a4:	stp	x20, x19, [sp, #96]
  42d2a8:	str	x21, [sp, #80]
  42d2ac:	mov	x21, x0
  42d2b0:	ldr	w0, [x0]
  42d2b4:	mov	x20, x1
  42d2b8:	add	x8, sp, #0x20
  42d2bc:	mov	w1, #0x1                   	// #1
  42d2c0:	add	x29, sp, #0x40
  42d2c4:	mov	w19, w2
  42d2c8:	bl	4132a8 <feof@plt+0x108d8>
  42d2cc:	ldr	x8, [sp, #32]
  42d2d0:	cmp	x8, x20
  42d2d4:	b.ne	42d2e4 <feof@plt+0x2a914>  // b.any
  42d2d8:	ldr	w8, [sp, #40]
  42d2dc:	cmp	w8, w19
  42d2e0:	b.le	42d2ec <feof@plt+0x2a91c>
  42d2e4:	mov	w0, wzr
  42d2e8:	b	42d318 <feof@plt+0x2a948>
  42d2ec:	ldr	w0, [x21, #4]
  42d2f0:	mov	x8, sp
  42d2f4:	mov	w1, #0x1                   	// #1
  42d2f8:	bl	4132a8 <feof@plt+0x108d8>
  42d2fc:	ldr	x8, [sp]
  42d300:	ldr	w9, [sp, #8]
  42d304:	cmp	x8, x20
  42d308:	cset	w8, eq  // eq = none
  42d30c:	cmp	w9, w19
  42d310:	cset	w9, ge  // ge = tcont
  42d314:	and	w0, w8, w9
  42d318:	ldp	x20, x19, [sp, #96]
  42d31c:	ldr	x21, [sp, #80]
  42d320:	ldp	x29, x30, [sp, #64]
  42d324:	add	sp, sp, #0x70
  42d328:	ret
  42d32c:	stp	x29, x30, [sp, #-48]!
  42d330:	stp	x20, x19, [sp, #32]
  42d334:	ldrh	w8, [x1, #18]
  42d338:	str	x21, [sp, #16]
  42d33c:	mov	x29, sp
  42d340:	and	w8, w8, #0x3
  42d344:	cmp	w8, #0x2
  42d348:	b.ne	42d394 <feof@plt+0x2a9c4>  // b.any
  42d34c:	ldr	x21, [x1, #24]
  42d350:	mov	x20, x1
  42d354:	ldrb	w8, [x21, #19]
  42d358:	tbnz	w8, #5, 42d394 <feof@plt+0x2a9c4>
  42d35c:	mov	x19, x0
  42d360:	ldr	x0, [x0, #40]
  42d364:	ldr	w1, [x21, #8]
  42d368:	bl	429b2c <feof@plt+0x2715c>
  42d36c:	ldr	w8, [x0, #20]
  42d370:	cbnz	w8, 42d394 <feof@plt+0x2a9c4>
  42d374:	ldr	w2, [x21, #8]
  42d378:	ldr	x5, [x20]
  42d37c:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d380:	add	x4, x4, #0xd30
  42d384:	mov	w1, #0xe                   	// #14
  42d388:	mov	x0, x19
  42d38c:	mov	w3, wzr
  42d390:	bl	41e3c0 <feof@plt+0x1b9f0>
  42d394:	ldp	x20, x19, [sp, #32]
  42d398:	ldr	x21, [sp, #16]
  42d39c:	mov	w0, #0x1                   	// #1
  42d3a0:	ldp	x29, x30, [sp], #48
  42d3a4:	ret
  42d3a8:	sub	sp, sp, #0x50
  42d3ac:	stp	x29, x30, [sp, #16]
  42d3b0:	stp	x24, x23, [sp, #32]
  42d3b4:	stp	x22, x21, [sp, #48]
  42d3b8:	stp	x20, x19, [sp, #64]
  42d3bc:	ldr	w8, [x1, #24]
  42d3c0:	mov	x20, x1
  42d3c4:	mov	x19, x0
  42d3c8:	add	x29, sp, #0x10
  42d3cc:	cmp	w8, #0xa
  42d3d0:	b.hi	42d470 <feof@plt+0x2aaa0>  // b.pmore
  42d3d4:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d3d8:	add	x9, x9, #0xc78
  42d3dc:	adr	x10, 42d3ec <feof@plt+0x2aa1c>
  42d3e0:	ldrb	w11, [x9, x8]
  42d3e4:	add	x10, x10, x11, lsl #2
  42d3e8:	br	x10
  42d3ec:	ldrb	w8, [x19, #1134]
  42d3f0:	cbz	w8, 42d40c <feof@plt+0x2aa3c>
  42d3f4:	ldr	x3, [x20]
  42d3f8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d3fc:	add	x2, x2, #0xd63
  42d400:	mov	w1, #0x14                  	// #20
  42d404:	mov	x0, x19
  42d408:	bl	41df34 <feof@plt+0x1b564>
  42d40c:	ldr	x8, [x19, #640]
  42d410:	cbnz	x8, 42d748 <feof@plt+0x2ad78>
  42d414:	ldr	x0, [x19, #656]
  42d418:	cmn	x0, #0x2
  42d41c:	b.ne	42d434 <feof@plt+0x2aa64>  // b.any
  42d420:	ldr	x8, [x19, #1056]
  42d424:	cbz	x8, 42d650 <feof@plt+0x2ac80>
  42d428:	mov	x0, x19
  42d42c:	blr	x8
  42d430:	str	x0, [x19, #656]
  42d434:	tbnz	x0, #63, 42d650 <feof@plt+0x2ac80>
  42d438:	add	x0, x19, #0x290
  42d43c:	bl	402430 <gmtime@plt>
  42d440:	mov	x21, x0
  42d444:	cbnz	x0, 42d680 <feof@plt+0x2acb0>
  42d448:	b	42d71c <feof@plt+0x2ad4c>
  42d44c:	ldr	x8, [x19, #40]
  42d450:	ldr	w8, [x8, #48]
  42d454:	sub	w21, w8, #0x1
  42d458:	b	42d76c <feof@plt+0x2ad9c>
  42d45c:	ldrb	w9, [x19, #1160]
  42d460:	ldr	x8, [x19, #40]
  42d464:	cbz	w9, 42d624 <feof@plt+0x2ac54>
  42d468:	ldr	w1, [x8, #60]
  42d46c:	b	42d640 <feof@plt+0x2ac70>
  42d470:	ldr	x3, [x20]
  42d474:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d478:	add	x2, x2, #0xd47
  42d47c:	mov	w1, #0x4                   	// #4
  42d480:	mov	x0, x19
  42d484:	bl	41de04 <feof@plt+0x1b434>
  42d488:	b	42d768 <feof@plt+0x2ad98>
  42d48c:	ldr	x8, [x19]
  42d490:	cbz	x8, 42d768 <feof@plt+0x2ad98>
  42d494:	ldrb	w8, [x8, #106]
  42d498:	cbz	w8, 42d768 <feof@plt+0x2ad98>
  42d49c:	mov	w21, wzr
  42d4a0:	b	42d76c <feof@plt+0x2ad9c>
  42d4a4:	ldrb	w8, [x19, #1134]
  42d4a8:	cbz	w8, 42d4c4 <feof@plt+0x2aaf4>
  42d4ac:	ldr	x3, [x20]
  42d4b0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d4b4:	add	x2, x2, #0xd63
  42d4b8:	mov	w1, #0x14                  	// #20
  42d4bc:	mov	x0, x19
  42d4c0:	bl	41df34 <feof@plt+0x1b564>
  42d4c4:	mov	x0, x19
  42d4c8:	bl	423828 <feof@plt+0x20e58>
  42d4cc:	ldr	x20, [x0, #88]
  42d4d0:	cbnz	x20, 42d78c <feof@plt+0x2adbc>
  42d4d4:	mov	x21, x0
  42d4d8:	bl	423830 <feof@plt+0x20e60>
  42d4dc:	cbz	x0, 42d708 <feof@plt+0x2ad38>
  42d4e0:	bl	4237a4 <feof@plt+0x20dd4>
  42d4e4:	cbz	x0, 42d6e0 <feof@plt+0x2ad10>
  42d4e8:	add	x0, x0, #0x58
  42d4ec:	bl	402600 <localtime@plt>
  42d4f0:	cbz	x0, 42d6e0 <feof@plt+0x2ad10>
  42d4f4:	bl	402750 <asctime@plt>
  42d4f8:	mov	x22, x0
  42d4fc:	bl	402420 <strlen@plt>
  42d500:	mov	x23, x0
  42d504:	add	x1, x0, #0x2
  42d508:	mov	x0, x19
  42d50c:	bl	428b3c <feof@plt+0x2616c>
  42d510:	mov	w24, #0x22                  	// #34
  42d514:	mov	x20, x0
  42d518:	strb	w24, [x0], #1
  42d51c:	mov	x1, x22
  42d520:	bl	402590 <strcpy@plt>
  42d524:	strb	w24, [x20, x23]
  42d528:	b	42d6fc <feof@plt+0x2ad2c>
  42d52c:	ldr	x0, [x19, #40]
  42d530:	ldr	w1, [x0, #60]
  42d534:	bl	42ae5c <feof@plt+0x2848c>
  42d538:	mov	x21, x0
  42d53c:	b	42d550 <feof@plt+0x2ab80>
  42d540:	ldr	x0, [x19, #288]
  42d544:	bl	42379c <feof@plt+0x20dcc>
  42d548:	mov	x21, x0
  42d54c:	cbz	x0, 42d7a8 <feof@plt+0x2add8>
  42d550:	ldr	x8, [x19, #1080]
  42d554:	cbz	x8, 42d564 <feof@plt+0x2ab94>
  42d558:	mov	x0, x21
  42d55c:	blr	x8
  42d560:	mov	x21, x0
  42d564:	mov	x0, x21
  42d568:	bl	402420 <strlen@plt>
  42d56c:	mov	x22, x0
  42d570:	lsl	w8, w22, #1
  42d574:	add	w1, w8, #0x3
  42d578:	mov	x0, x19
  42d57c:	bl	428b3c <feof@plt+0x2616c>
  42d580:	mov	w8, #0x22                  	// #34
  42d584:	mov	x9, x0
  42d588:	mov	x20, x0
  42d58c:	strb	w8, [x9], #1
  42d590:	cbz	w22, 42d5d0 <feof@plt+0x2ac00>
  42d594:	mov	w10, #0x5c                  	// #92
  42d598:	b	42d5a8 <feof@plt+0x2abd8>
  42d59c:	strb	w10, [x9], #1
  42d5a0:	strb	w11, [x9], #1
  42d5a4:	cbz	w22, 42d5d0 <feof@plt+0x2ac00>
  42d5a8:	ldrb	w11, [x21], #1
  42d5ac:	sub	w22, w22, #0x1
  42d5b0:	cmp	w11, #0x5c
  42d5b4:	b.eq	42d59c <feof@plt+0x2abcc>  // b.none
  42d5b8:	cmp	w11, #0x22
  42d5bc:	b.eq	42d59c <feof@plt+0x2abcc>  // b.none
  42d5c0:	cmp	w11, #0xa
  42d5c4:	b.ne	42d5a0 <feof@plt+0x2abd0>  // b.any
  42d5c8:	mov	w11, #0x6e                  	// #110
  42d5cc:	b	42d59c <feof@plt+0x2abcc>
  42d5d0:	strh	w8, [x9]
  42d5d4:	cbnz	x20, 42d78c <feof@plt+0x2adbc>
  42d5d8:	b	42d768 <feof@plt+0x2ad98>
  42d5dc:	ldr	x8, [x19, #1040]
  42d5e0:	mov	x0, x19
  42d5e4:	blr	x8
  42d5e8:	mov	w21, w0
  42d5ec:	b	42d76c <feof@plt+0x2ad9c>
  42d5f0:	ldrb	w8, [x19, #1244]
  42d5f4:	cbz	w8, 42d614 <feof@plt+0x2ac44>
  42d5f8:	ldrb	w8, [x19, #16]
  42d5fc:	cbz	w8, 42d614 <feof@plt+0x2ac44>
  42d600:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d604:	add	x2, x2, #0xe54
  42d608:	mov	w1, #0x3                   	// #3
  42d60c:	mov	x0, x19
  42d610:	bl	41de04 <feof@plt+0x1b434>
  42d614:	ldr	w21, [x19, #1376]
  42d618:	add	w8, w21, #0x1
  42d61c:	str	w8, [x19, #1376]
  42d620:	b	42d76c <feof@plt+0x2ad9c>
  42d624:	mov	x0, x8
  42d628:	mov	w1, w2
  42d62c:	mov	w2, wzr
  42d630:	mov	x3, xzr
  42d634:	bl	42ab94 <feof@plt+0x281c4>
  42d638:	ldr	x8, [x19, #40]
  42d63c:	mov	w1, w0
  42d640:	mov	x0, x8
  42d644:	bl	42ad9c <feof@plt+0x283cc>
  42d648:	mov	w21, w0
  42d64c:	b	42d76c <feof@plt+0x2ad9c>
  42d650:	bl	4027c0 <__errno_location@plt>
  42d654:	mov	x21, x0
  42d658:	str	wzr, [x0]
  42d65c:	mov	x0, xzr
  42d660:	bl	402790 <time@plt>
  42d664:	cmn	x0, #0x1
  42d668:	str	x0, [sp, #8]
  42d66c:	b.eq	42d714 <feof@plt+0x2ad44>  // b.none
  42d670:	add	x0, sp, #0x8
  42d674:	bl	402600 <localtime@plt>
  42d678:	mov	x21, x0
  42d67c:	cbz	x0, 42d71c <feof@plt+0x2ad4c>
  42d680:	mov	w1, #0xe                   	// #14
  42d684:	mov	x0, x19
  42d688:	bl	428b3c <feof@plt+0x2616c>
  42d68c:	str	x0, [x19, #640]
  42d690:	ldp	w3, w8, [x21, #12]
  42d694:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d698:	sxtw	x8, w8
  42d69c:	add	x9, x9, #0xcd0
  42d6a0:	ldr	w10, [x21, #20]
  42d6a4:	ldr	x2, [x9, x8, lsl #3]
  42d6a8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d6ac:	add	x1, x1, #0xdfb
  42d6b0:	add	w4, w10, #0x76c
  42d6b4:	bl	4025b0 <sprintf@plt>
  42d6b8:	mov	w1, #0xb                   	// #11
  42d6bc:	mov	x0, x19
  42d6c0:	bl	428b3c <feof@plt+0x2616c>
  42d6c4:	str	x0, [x19, #648]
  42d6c8:	ldp	w3, w2, [x21, #4]
  42d6cc:	ldr	w4, [x21]
  42d6d0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d6d4:	add	x1, x1, #0xe08
  42d6d8:	bl	4025b0 <sprintf@plt>
  42d6dc:	b	42d748 <feof@plt+0x2ad78>
  42d6e0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d6e4:	add	x2, x2, #0xd90
  42d6e8:	mov	x0, x19
  42d6ec:	mov	w1, wzr
  42d6f0:	bl	41e85c <feof@plt+0x1be8c>
  42d6f4:	adrp	x20, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d6f8:	add	x20, x20, #0xdb3
  42d6fc:	str	x20, [x21, #88]
  42d700:	cbnz	x20, 42d78c <feof@plt+0x2adbc>
  42d704:	b	42d768 <feof@plt+0x2ad98>
  42d708:	ldr	x20, [x21, #88]
  42d70c:	cbnz	x20, 42d78c <feof@plt+0x2adbc>
  42d710:	b	42d768 <feof@plt+0x2ad98>
  42d714:	ldr	w8, [x21]
  42d718:	cbz	w8, 42d670 <feof@plt+0x2aca0>
  42d71c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d720:	add	x2, x2, #0xe19
  42d724:	mov	x0, x19
  42d728:	mov	w1, wzr
  42d72c:	bl	41e85c <feof@plt+0x1be8c>
  42d730:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d734:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d738:	add	x8, x8, #0xe3b
  42d73c:	add	x9, x9, #0xe49
  42d740:	str	x8, [x19, #640]
  42d744:	str	x9, [x19, #648]
  42d748:	ldr	w8, [x20, #24]
  42d74c:	cmp	w8, #0x1
  42d750:	b.ne	42d760 <feof@plt+0x2ad90>  // b.any
  42d754:	ldr	x20, [x19, #640]
  42d758:	cbnz	x20, 42d78c <feof@plt+0x2adbc>
  42d75c:	b	42d768 <feof@plt+0x2ad98>
  42d760:	ldr	x20, [x19, #648]
  42d764:	cbnz	x20, 42d78c <feof@plt+0x2adbc>
  42d768:	mov	w21, #0x1                   	// #1
  42d76c:	mov	w1, #0x15                  	// #21
  42d770:	mov	x0, x19
  42d774:	bl	428b3c <feof@plt+0x2616c>
  42d778:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  42d77c:	add	x1, x1, #0x832
  42d780:	mov	w2, w21
  42d784:	mov	x20, x0
  42d788:	bl	4025b0 <sprintf@plt>
  42d78c:	mov	x0, x20
  42d790:	ldp	x20, x19, [sp, #64]
  42d794:	ldp	x22, x21, [sp, #48]
  42d798:	ldp	x24, x23, [sp, #32]
  42d79c:	ldp	x29, x30, [sp, #16]
  42d7a0:	add	sp, sp, #0x50
  42d7a4:	ret
  42d7a8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d7ac:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d7b0:	add	x0, x0, #0xdce
  42d7b4:	add	x2, x2, #0xde3
  42d7b8:	mov	w1, #0x1c5                 	// #453
  42d7bc:	bl	404ac4 <feof@plt+0x20f4>
  42d7c0:	cbz	w2, 42d800 <feof@plt+0x2ae30>
  42d7c4:	mov	w8, #0x5c                  	// #92
  42d7c8:	b	42d7d8 <feof@plt+0x2ae08>
  42d7cc:	strb	w8, [x0], #1
  42d7d0:	strb	w9, [x0], #1
  42d7d4:	cbz	w2, 42d800 <feof@plt+0x2ae30>
  42d7d8:	ldrb	w9, [x1], #1
  42d7dc:	sub	w2, w2, #0x1
  42d7e0:	cmp	w9, #0x5c
  42d7e4:	b.eq	42d7cc <feof@plt+0x2adfc>  // b.none
  42d7e8:	cmp	w9, #0x22
  42d7ec:	b.eq	42d7cc <feof@plt+0x2adfc>  // b.none
  42d7f0:	cmp	w9, #0xa
  42d7f4:	b.ne	42d7d0 <feof@plt+0x2ae00>  // b.any
  42d7f8:	mov	w9, #0x6e                  	// #110
  42d7fc:	b	42d7cc <feof@plt+0x2adfc>
  42d800:	ret
  42d804:	stp	x29, x30, [sp, #-48]!
  42d808:	stp	x20, x19, [sp, #32]
  42d80c:	ldrh	w5, [x1, #16]
  42d810:	str	x21, [sp, #16]
  42d814:	mov	x29, sp
  42d818:	cmp	w5, w3
  42d81c:	b.ne	42d828 <feof@plt+0x2ae58>  // b.any
  42d820:	mov	w0, #0x1                   	// #1
  42d824:	b	42d8b4 <feof@plt+0x2aee4>
  42d828:	mov	w8, w3
  42d82c:	mov	x20, x2
  42d830:	mov	x21, x1
  42d834:	mov	x19, x0
  42d838:	b.ls	42d870 <feof@plt+0x2aea0>  // b.plast
  42d83c:	add	w9, w8, #0x1
  42d840:	cmp	w9, w5
  42d844:	b.ne	42d850 <feof@plt+0x2ae80>  // b.any
  42d848:	ldrb	w9, [x21, #19]
  42d84c:	tbnz	w9, #3, 42d8c4 <feof@plt+0x2aef4>
  42d850:	ldr	x3, [x20]
  42d854:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d858:	add	x2, x2, #0xf25
  42d85c:	mov	w1, #0x3                   	// #3
  42d860:	mov	x0, x19
  42d864:	mov	w4, w5
  42d868:	mov	w5, w8
  42d86c:	b	42d888 <feof@plt+0x2aeb8>
  42d870:	ldr	x3, [x20]
  42d874:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d878:	add	x2, x2, #0xf59
  42d87c:	mov	w1, #0x3                   	// #3
  42d880:	mov	x0, x19
  42d884:	mov	w4, w8
  42d888:	bl	41de04 <feof@plt+0x1b434>
  42d88c:	ldr	w2, [x21, #8]
  42d890:	cmp	w2, #0x3
  42d894:	b.cc	42d8b0 <feof@plt+0x2aee0>  // b.lo, b.ul, b.last
  42d898:	ldr	x4, [x20]
  42d89c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d8a0:	add	x3, x3, #0xf8b
  42d8a4:	mov	w1, #0x5                   	// #5
  42d8a8:	mov	x0, x19
  42d8ac:	bl	41e6b4 <feof@plt+0x1bce4>
  42d8b0:	mov	w0, wzr
  42d8b4:	ldp	x20, x19, [sp, #32]
  42d8b8:	ldr	x21, [sp, #16]
  42d8bc:	ldp	x29, x30, [sp], #48
  42d8c0:	ret
  42d8c4:	mov	w0, #0x1                   	// #1
  42d8c8:	tbnz	w9, #4, 42d8b4 <feof@plt+0x2aee4>
  42d8cc:	ldrb	w8, [x19, #1154]
  42d8d0:	cbz	w8, 42d8b4 <feof@plt+0x2aee4>
  42d8d4:	ldrb	w8, [x19, #1167]
  42d8d8:	cbnz	w8, 42d820 <feof@plt+0x2ae50>
  42d8dc:	ldrb	w8, [x19, #1120]
  42d8e0:	cbz	w8, 42d8f0 <feof@plt+0x2af20>
  42d8e4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d8e8:	add	x2, x2, #0xe91
  42d8ec:	b	42d8f8 <feof@plt+0x2af28>
  42d8f0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42d8f4:	add	x2, x2, #0xedc
  42d8f8:	mov	w1, #0x2                   	// #2
  42d8fc:	mov	x0, x19
  42d900:	bl	41de04 <feof@plt+0x1b434>
  42d904:	mov	w0, #0x1                   	// #1
  42d908:	b	42d8b4 <feof@plt+0x2aee4>
  42d90c:	stp	x29, x30, [sp, #-48]!
  42d910:	stp	x22, x21, [sp, #16]
  42d914:	stp	x20, x19, [sp, #32]
  42d918:	ldr	x8, [x0, #136]
  42d91c:	mov	w19, w3
  42d920:	mov	x20, x2
  42d924:	mov	x21, x0
  42d928:	mov	x22, x1
  42d92c:	mov	x29, sp
  42d930:	cbz	x1, 42d968 <feof@plt+0x2af98>
  42d934:	ldr	x0, [x8]
  42d938:	cbz	x0, 42d988 <feof@plt+0x2afb8>
  42d93c:	mov	w8, #0x1                   	// #1
  42d940:	mov	w9, #0x18                  	// #24
  42d944:	str	x0, [x21, #136]
  42d948:	str	w8, [x0, #48]
  42d94c:	umaddl	x8, w19, w9, x20
  42d950:	stp	xzr, x22, [x0, #32]
  42d954:	stp	x20, x8, [x0, #16]
  42d958:	ldp	x20, x19, [sp, #32]
  42d95c:	ldp	x22, x21, [sp, #16]
  42d960:	ldp	x29, x30, [sp], #48
  42d964:	ret
  42d968:	ldr	w9, [x8, #48]
  42d96c:	cmp	w9, #0x2
  42d970:	add	x9, x8, #0x28
  42d974:	b.ne	42d97c <feof@plt+0x2afac>  // b.any
  42d978:	ldr	x9, [x9]
  42d97c:	ldr	x22, [x9]
  42d980:	ldr	x0, [x8]
  42d984:	cbnz	x0, 42d93c <feof@plt+0x2af6c>
  42d988:	mov	w0, #0x38                  	// #56
  42d98c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42d990:	movi	v0.2d, #0x0
  42d994:	str	xzr, [x0, #48]
  42d998:	stp	q0, q0, [x0, #16]
  42d99c:	ldr	x8, [x21, #136]
  42d9a0:	stp	xzr, x8, [x0]
  42d9a4:	str	x0, [x8]
  42d9a8:	b	42d93c <feof@plt+0x2af6c>
  42d9ac:	stp	x29, x30, [sp, #-48]!
  42d9b0:	stp	x22, x21, [sp, #16]
  42d9b4:	stp	x20, x19, [sp, #32]
  42d9b8:	ldr	x8, [x0, #136]
  42d9bc:	mov	x22, x0
  42d9c0:	mov	x19, x3
  42d9c4:	mov	x20, x2
  42d9c8:	ldr	x0, [x8]
  42d9cc:	mov	x21, x1
  42d9d0:	mov	x29, sp
  42d9d4:	cbnz	x0, 42d9f8 <feof@plt+0x2b028>
  42d9d8:	mov	w0, #0x38                  	// #56
  42d9dc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42d9e0:	movi	v0.2d, #0x0
  42d9e4:	str	xzr, [x0, #48]
  42d9e8:	stp	q0, q0, [x0, #16]
  42d9ec:	ldr	x8, [x22, #136]
  42d9f0:	stp	xzr, x8, [x0]
  42d9f4:	str	x0, [x8]
  42d9f8:	mov	w8, #0x1                   	// #1
  42d9fc:	add	x9, x20, x19
  42da00:	str	x0, [x22, #136]
  42da04:	stp	xzr, x21, [x0, #32]
  42da08:	str	w8, [x0, #48]
  42da0c:	stp	x20, x9, [x0, #16]
  42da10:	ldrh	w8, [x21, #18]
  42da14:	orr	w8, w8, #0x40
  42da18:	strh	w8, [x21, #18]
  42da1c:	ldp	x20, x19, [sp, #32]
  42da20:	ldp	x22, x21, [sp, #16]
  42da24:	ldp	x29, x30, [sp], #48
  42da28:	ret
  42da2c:	stp	x29, x30, [sp, #-48]!
  42da30:	stp	x22, x21, [sp, #16]
  42da34:	stp	x20, x19, [sp, #32]
  42da38:	ldr	x19, [x0, #136]
  42da3c:	add	x8, x0, #0x50
  42da40:	mov	x29, sp
  42da44:	cmp	x19, x8
  42da48:	b.eq	42db1c <feof@plt+0x2b14c>  // b.none
  42da4c:	ldr	x21, [x19, #40]
  42da50:	mov	x20, x0
  42da54:	cbz	x21, 42dac0 <feof@plt+0x2b0f0>
  42da58:	ldr	w8, [x19, #48]
  42da5c:	cmp	w8, #0x2
  42da60:	b.ne	42daec <feof@plt+0x2b11c>  // b.any
  42da64:	ldr	x8, [x19, #32]
  42da68:	ldr	x22, [x21]
  42da6c:	cbz	x8, 42da7c <feof@plt+0x2b0ac>
  42da70:	ldr	x0, [x21, #8]
  42da74:	cbz	x0, 42da7c <feof@plt+0x2b0ac>
  42da78:	bl	4024c0 <free@plt>
  42da7c:	mov	x0, x21
  42da80:	bl	4024c0 <free@plt>
  42da84:	str	xzr, [x19, #40]
  42da88:	cbz	x22, 42daa8 <feof@plt+0x2b0d8>
  42da8c:	ldr	x8, [x19, #8]
  42da90:	cbnz	x8, 42daf8 <feof@plt+0x2b128>
  42da94:	cmp	x8, x22
  42da98:	b.eq	42daa8 <feof@plt+0x2b0d8>  // b.none
  42da9c:	ldrh	w8, [x22, #18]
  42daa0:	and	w8, w8, #0xffffffbf
  42daa4:	strh	w8, [x22, #18]
  42daa8:	ldr	x8, [x20, #184]
  42daac:	cmp	x22, x8
  42dab0:	b.ne	42dac0 <feof@plt+0x2b0f0>  // b.any
  42dab4:	ldr	x8, [x19, #8]
  42dab8:	cbnz	x8, 42dac0 <feof@plt+0x2b0f0>
  42dabc:	str	xzr, [x20, #184]
  42dac0:	ldr	x0, [x19, #32]
  42dac4:	cbz	x0, 42dacc <feof@plt+0x2b0fc>
  42dac8:	bl	4295fc <feof@plt+0x26c2c>
  42dacc:	ldr	x8, [x19, #8]
  42dad0:	mov	x0, x19
  42dad4:	str	x8, [x20, #136]
  42dad8:	str	xzr, [x8]
  42dadc:	ldp	x20, x19, [sp, #32]
  42dae0:	ldp	x22, x21, [sp, #16]
  42dae4:	ldp	x29, x30, [sp], #48
  42dae8:	b	4024c0 <free@plt>
  42daec:	mov	x22, x21
  42daf0:	ldr	x8, [x19, #8]
  42daf4:	cbz	x8, 42da94 <feof@plt+0x2b0c4>
  42daf8:	ldr	w9, [x8, #48]
  42dafc:	add	x8, x8, #0x28
  42db00:	cmp	w9, #0x2
  42db04:	b.ne	42db0c <feof@plt+0x2b13c>  // b.any
  42db08:	ldr	x8, [x8]
  42db0c:	ldr	x8, [x8]
  42db10:	cmp	x8, x22
  42db14:	b.ne	42da9c <feof@plt+0x2b0cc>  // b.any
  42db18:	b	42daa8 <feof@plt+0x2b0d8>
  42db1c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42db20:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42db24:	add	x0, x0, #0xdce
  42db28:	add	x2, x2, #0xfa3
  42db2c:	mov	w1, #0x9eb                 	// #2539
  42db30:	bl	404ac4 <feof@plt+0x20f4>
  42db34:	mov	x1, xzr
  42db38:	b	42db3c <feof@plt+0x2b16c>
  42db3c:	sub	sp, sp, #0x80
  42db40:	stp	x29, x30, [sp, #32]
  42db44:	stp	x28, x27, [sp, #48]
  42db48:	stp	x26, x25, [sp, #64]
  42db4c:	stp	x24, x23, [sp, #80]
  42db50:	stp	x22, x21, [sp, #96]
  42db54:	stp	x20, x19, [sp, #112]
  42db58:	ldrb	w26, [x0, #192]
  42db5c:	mov	x20, x1
  42db60:	mov	x19, x0
  42db64:	mov	w21, wzr
  42db68:	add	x25, x0, #0xb0
  42db6c:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x25a68>
  42db70:	add	x29, sp, #0x20
  42db74:	b	42db88 <feof@plt+0x2b1b8>
  42db78:	mov	x0, x19
  42db7c:	bl	42da2c <feof@plt+0x2b05c>
  42db80:	ldrb	w8, [x19, #16]
  42db84:	cbz	w8, 42dfa8 <feof@plt+0x2b5d8>
  42db88:	ldr	x8, [x19, #136]
  42db8c:	ldr	x9, [x8, #8]
  42db90:	cbz	x9, 42dbe0 <feof@plt+0x2b210>
  42db94:	ldr	w10, [x8, #48]
  42db98:	cbz	w10, 42dbbc <feof@plt+0x2b1ec>
  42db9c:	cmp	w10, #0x2
  42dba0:	b.eq	42dbbc <feof@plt+0x2b1ec>  // b.none
  42dba4:	cmp	w10, #0x1
  42dba8:	b.ne	42e124 <feof@plt+0x2b754>  // b.any
  42dbac:	ldp	x9, x10, [x8, #16]
  42dbb0:	cmp	x9, x10
  42dbb4:	b.eq	42dbc8 <feof@plt+0x2b1f8>  // b.none
  42dbb8:	b	42dc08 <feof@plt+0x2b238>
  42dbbc:	ldp	x9, x11, [x8, #16]
  42dbc0:	cmp	x9, x11
  42dbc4:	b.ne	42dbf4 <feof@plt+0x2b224>  // b.any
  42dbc8:	ldr	x8, [x8, #40]
  42dbcc:	cbz	x8, 42db78 <feof@plt+0x2b1a8>
  42dbd0:	ldr	w8, [x28, #1920]
  42dbd4:	add	w8, w8, #0x1
  42dbd8:	str	w8, [x28, #1920]
  42dbdc:	b	42db78 <feof@plt+0x2b1a8>
  42dbe0:	mov	x0, x19
  42dbe4:	bl	425308 <feof@plt+0x22938>
  42dbe8:	ldr	w21, [x0]
  42dbec:	mov	x22, x0
  42dbf0:	b	42dc20 <feof@plt+0x2b250>
  42dbf4:	cbz	w10, 42dcec <feof@plt+0x2b31c>
  42dbf8:	cmp	w10, #0x2
  42dbfc:	b.eq	42dcc8 <feof@plt+0x2b2f8>  // b.none
  42dc00:	cmp	w10, #0x1
  42dc04:	b.ne	42e154 <feof@plt+0x2b784>  // b.any
  42dc08:	mov	x10, x9
  42dc0c:	ldr	w21, [x10], #24
  42dc10:	mov	x22, x9
  42dc14:	str	x10, [x8, #16]
  42dc18:	ldrb	w8, [x22, #6]
  42dc1c:	tbnz	w8, #3, 42dd54 <feof@plt+0x2b384>
  42dc20:	ldrb	w9, [x19, #16]
  42dc24:	ldrb	w8, [x22, #4]
  42dc28:	cbz	w9, 42dc34 <feof@plt+0x2b264>
  42dc2c:	cmp	w8, #0x4f
  42dc30:	b.eq	42db88 <feof@plt+0x2b1b8>  // b.none
  42dc34:	cmp	w8, #0x35
  42dc38:	b.ne	42dfac <feof@plt+0x2b5dc>  // b.any
  42dc3c:	ldr	x1, [x22, #8]
  42dc40:	ldrh	w8, [x1, #18]
  42dc44:	tst	w8, #0x3
  42dc48:	b.eq	42dfac <feof@plt+0x2b5dc>  // b.none
  42dc4c:	ldrb	w9, [x22, #7]
  42dc50:	tbnz	w9, #2, 42dfac <feof@plt+0x2b5dc>
  42dc54:	tbnz	w8, #6, 42e054 <feof@plt+0x2b684>
  42dc58:	ldrb	w8, [x19, #192]
  42dc5c:	cbnz	w8, 42dc90 <feof@plt+0x2b2c0>
  42dc60:	ldr	x8, [x19, #136]
  42dc64:	cbz	x8, 42dc84 <feof@plt+0x2b2b4>
  42dc68:	ldr	w9, [x8, #48]
  42dc6c:	add	x8, x8, #0x28
  42dc70:	cmp	w9, #0x2
  42dc74:	b.ne	42dc7c <feof@plt+0x2b2ac>  // b.any
  42dc78:	ldr	x8, [x8]
  42dc7c:	ldr	x8, [x8]
  42dc80:	cbnz	x8, 42dc90 <feof@plt+0x2b2c0>
  42dc84:	ldr	w8, [x22]
  42dc88:	str	x1, [x19, #184]
  42dc8c:	str	w8, [x19, #176]
  42dc90:	ldrb	w8, [x19, #24]
  42dc94:	cbnz	w8, 42dfac <feof@plt+0x2b5dc>
  42dc98:	ldrb	w8, [x1, #19]
  42dc9c:	tbz	w8, #0, 42dd18 <feof@plt+0x2b348>
  42dca0:	ldr	x8, [x19, #992]
  42dca4:	cbz	x8, 42dfac <feof@plt+0x2b5dc>
  42dca8:	mov	x0, x19
  42dcac:	mov	w1, wzr
  42dcb0:	bl	4251b0 <feof@plt+0x227e0>
  42dcb4:	ldrb	w8, [x0, #4]
  42dcb8:	cmp	w8, #0x53
  42dcbc:	b.ne	42dcf8 <feof@plt+0x2b328>  // b.any
  42dcc0:	mov	w23, #0x1                   	// #1
  42dcc4:	b	42dd00 <feof@plt+0x2b330>
  42dcc8:	ldr	x10, [x8, #40]
  42dccc:	ldr	x22, [x9]
  42dcd0:	ldr	x11, [x10, #8]
  42dcd4:	cbz	x11, 42dd40 <feof@plt+0x2b370>
  42dcd8:	ldr	x9, [x10, #16]
  42dcdc:	ldr	w21, [x9], #4
  42dce0:	str	x9, [x10, #16]
  42dce4:	ldr	x9, [x8, #16]
  42dce8:	b	42dd44 <feof@plt+0x2b374>
  42dcec:	ldr	x22, [x9], #8
  42dcf0:	ldr	w21, [x22]
  42dcf4:	b	42dd48 <feof@plt+0x2b378>
  42dcf8:	ldrb	w8, [x0, #6]
  42dcfc:	and	w23, w8, #0x1
  42dd00:	ldr	x8, [x19, #992]
  42dd04:	mov	x0, x19
  42dd08:	mov	x1, x22
  42dd0c:	blr	x8
  42dd10:	mov	x1, x0
  42dd14:	cbz	x0, 42e080 <feof@plt+0x2b6b0>
  42dd18:	mov	x0, x19
  42dd1c:	mov	x2, x22
  42dd20:	mov	w3, w21
  42dd24:	bl	42f630 <feof@plt+0x2cc60>
  42dd28:	cbz	w0, 42dfac <feof@plt+0x2b5dc>
  42dd2c:	cmp	w0, #0x2
  42dd30:	b.eq	42db88 <feof@plt+0x2b1b8>  // b.none
  42dd34:	ldrb	w8, [x19, #16]
  42dd38:	cbnz	w8, 42db88 <feof@plt+0x2b1b8>
  42dd3c:	b	42e034 <feof@plt+0x2b664>
  42dd40:	ldr	w21, [x22]
  42dd44:	add	x9, x9, #0x8
  42dd48:	str	x9, [x8, #16]
  42dd4c:	ldrb	w8, [x22, #6]
  42dd50:	tbz	w8, #3, 42dc20 <feof@plt+0x2b250>
  42dd54:	stur	x22, [x29, #-8]
  42dd58:	ldr	x27, [x19, #136]
  42dd5c:	cbz	x27, 42e16c <feof@plt+0x2b79c>
  42dd60:	ldr	w8, [x27, #48]
  42dd64:	add	x9, x27, #0x28
  42dd68:	cmp	w8, #0x2
  42dd6c:	b.ne	42dd74 <feof@plt+0x2b3a4>  // b.any
  42dd70:	ldr	x9, [x9]
  42dd74:	ldr	x9, [x9]
  42dd78:	cbz	x9, 42e16c <feof@plt+0x2b79c>
  42dd7c:	cmp	w8, #0x2
  42dd80:	mov	x9, x25
  42dd84:	b.ne	42dd94 <feof@plt+0x2b3c4>  // b.any
  42dd88:	ldr	x9, [x27, #40]
  42dd8c:	ldr	x9, [x9, #16]
  42dd90:	sub	x9, x9, #0x4
  42dd94:	ldr	w23, [x9]
  42dd98:	mov	x24, xzr
  42dd9c:	cbz	w8, 42dde4 <feof@plt+0x2b414>
  42dda0:	cmp	w8, #0x2
  42dda4:	b.eq	42ddc0 <feof@plt+0x2b3f0>  // b.none
  42dda8:	cmp	w8, #0x1
  42ddac:	b.ne	42ddf4 <feof@plt+0x2b424>  // b.any
  42ddb0:	ldr	x24, [x27, #16]
  42ddb4:	add	x8, x24, #0x18
  42ddb8:	str	x8, [x27, #16]
  42ddbc:	b	42ddf4 <feof@plt+0x2b424>
  42ddc0:	ldr	x8, [x27, #16]
  42ddc4:	ldr	x9, [x27, #40]
  42ddc8:	add	x10, x8, #0x8
  42ddcc:	str	x10, [x27, #16]
  42ddd0:	ldr	x10, [x9, #16]
  42ddd4:	ldr	x24, [x8]
  42ddd8:	add	x8, x10, #0x4
  42dddc:	str	x8, [x9, #16]
  42dde0:	b	42ddf4 <feof@plt+0x2b424>
  42dde4:	ldr	x8, [x27, #16]
  42dde8:	add	x9, x8, #0x8
  42ddec:	str	x9, [x27, #16]
  42ddf0:	ldr	x24, [x8]
  42ddf4:	ldrb	w8, [x24, #4]
  42ddf8:	cmp	w8, #0x53
  42ddfc:	b.ne	42de08 <feof@plt+0x2b438>  // b.any
  42de00:	ldrb	w8, [x24, #6]
  42de04:	tbnz	w8, #3, 42e13c <feof@plt+0x2b76c>
  42de08:	sub	x2, x29, #0x8
  42de0c:	mov	x0, x19
  42de10:	mov	w1, w23
  42de14:	mov	x3, x24
  42de18:	bl	430c4c <feof@plt+0x2e27c>
  42de1c:	tbz	w0, #0, 42de34 <feof@plt+0x2b464>
  42de20:	ldrb	w8, [x24, #6]
  42de24:	tbz	w8, #3, 42de34 <feof@plt+0x2b464>
  42de28:	ldr	w8, [x27, #48]
  42de2c:	cbnz	w8, 42dda0 <feof@plt+0x2b3d0>
  42de30:	b	42dde4 <feof@plt+0x2b414>
  42de34:	ldr	w8, [x27, #48]
  42de38:	cmp	w8, #0x2
  42de3c:	b.ne	42def4 <feof@plt+0x2b524>  // b.any
  42de40:	mov	w0, #0x10                  	// #16
  42de44:	str	x20, [sp, #8]
  42de48:	mov	x20, x25
  42de4c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42de50:	mov	x24, x0
  42de54:	mov	w1, #0x8                   	// #8
  42de58:	mov	x0, x19
  42de5c:	bl	42939c <feof@plt+0x269cc>
  42de60:	ldp	x8, x9, [x0, #16]
  42de64:	cmp	x8, x9
  42de68:	b.hi	42e184 <feof@plt+0x2b7b4>  // b.pmore
  42de6c:	ldur	x9, [x29, #-8]
  42de70:	mov	x25, x0
  42de74:	stur	w26, [x29, #-12]
  42de78:	cbz	x24, 42de8c <feof@plt+0x2b4bc>
  42de7c:	ldr	x10, [x25, #8]
  42de80:	sub	x10, x8, x10
  42de84:	lsr	x10, x10, #3
  42de88:	str	w23, [x24, w10, uxtw #2]
  42de8c:	str	x9, [x8], #8
  42de90:	str	x8, [x25, #16]
  42de94:	ldr	x8, [x27, #40]
  42de98:	ldr	x27, [x25, #8]
  42de9c:	ldr	x26, [x8]
  42dea0:	ldr	x8, [x19, #136]
  42dea4:	cbz	x26, 42df60 <feof@plt+0x2b590>
  42dea8:	ldr	x23, [x8]
  42deac:	cbz	x23, 42df80 <feof@plt+0x2b5b0>
  42deb0:	mov	w8, #0x2                   	// #2
  42deb4:	mov	w0, #0x18                  	// #24
  42deb8:	str	x23, [x19, #136]
  42debc:	str	w8, [x23, #48]
  42dec0:	str	x25, [x23, #32]
  42dec4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42dec8:	add	x8, x27, #0x8
  42decc:	stp	x26, x24, [x0]
  42ded0:	str	x24, [x0, #16]
  42ded4:	stp	x27, x8, [x23, #16]
  42ded8:	ldur	w26, [x29, #-12]
  42dedc:	mov	x25, x20
  42dee0:	ldr	x20, [sp, #8]
  42dee4:	str	x0, [x23, #40]
  42dee8:	ldrb	w8, [x19, #16]
  42deec:	cbnz	w8, 42db88 <feof@plt+0x2b1b8>
  42def0:	b	42e034 <feof@plt+0x2b664>
  42def4:	ldr	x8, [x19, #136]
  42def8:	ldur	x23, [x29, #-8]
  42defc:	ldr	w9, [x8, #48]
  42df00:	cmp	w9, #0x2
  42df04:	add	x9, x8, #0x28
  42df08:	b.ne	42df10 <feof@plt+0x2b540>  // b.any
  42df0c:	ldr	x9, [x9]
  42df10:	ldr	x0, [x8]
  42df14:	ldr	x24, [x9]
  42df18:	mov	w27, #0x1                   	// #1
  42df1c:	cbnz	x0, 42df40 <feof@plt+0x2b570>
  42df20:	mov	w0, #0x38                  	// #56
  42df24:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42df28:	movi	v0.2d, #0x0
  42df2c:	stp	q0, q0, [x0, #16]
  42df30:	str	xzr, [x0, #48]
  42df34:	ldr	x8, [x19, #136]
  42df38:	stp	xzr, x8, [x0]
  42df3c:	str	x0, [x8]
  42df40:	add	x8, x23, #0x18
  42df44:	str	x0, [x19, #136]
  42df48:	str	w27, [x0, #48]
  42df4c:	stp	xzr, x24, [x0, #32]
  42df50:	stp	x23, x8, [x0, #16]
  42df54:	ldrb	w8, [x19, #16]
  42df58:	cbnz	w8, 42db88 <feof@plt+0x2b1b8>
  42df5c:	b	42e034 <feof@plt+0x2b664>
  42df60:	ldr	w9, [x8, #48]
  42df64:	cmp	w9, #0x2
  42df68:	add	x9, x8, #0x28
  42df6c:	b.ne	42df74 <feof@plt+0x2b5a4>  // b.any
  42df70:	ldr	x9, [x9]
  42df74:	ldr	x26, [x9]
  42df78:	ldr	x23, [x8]
  42df7c:	cbnz	x23, 42deb0 <feof@plt+0x2b4e0>
  42df80:	mov	w0, #0x38                  	// #56
  42df84:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42df88:	movi	v0.2d, #0x0
  42df8c:	stp	q0, q0, [x0, #16]
  42df90:	str	xzr, [x0, #48]
  42df94:	ldr	x8, [x19, #136]
  42df98:	mov	x23, x0
  42df9c:	stp	xzr, x8, [x0]
  42dfa0:	str	x0, [x8]
  42dfa4:	b	42deb0 <feof@plt+0x2b4e0>
  42dfa8:	add	x22, x19, #0x298
  42dfac:	cbz	x20, 42dfdc <feof@plt+0x2b60c>
  42dfb0:	cbnz	w21, 42dfb8 <feof@plt+0x2b5e8>
  42dfb4:	ldr	w21, [x22]
  42dfb8:	str	w21, [x20]
  42dfbc:	ldrb	w8, [x19, #1157]
  42dfc0:	cbz	w8, 42e004 <feof@plt+0x2b634>
  42dfc4:	ldrb	w8, [x19, #1160]
  42dfc8:	cbz	w8, 42dfd8 <feof@plt+0x2b608>
  42dfcc:	ldrb	w8, [x19, #16]
  42dfd0:	cbz	w8, 42dfd8 <feof@plt+0x2b608>
  42dfd4:	ldr	w21, [x19, #48]
  42dfd8:	str	w21, [x20]
  42dfdc:	strb	w26, [x19, #192]
  42dfe0:	mov	x0, x22
  42dfe4:	ldp	x20, x19, [sp, #112]
  42dfe8:	ldp	x22, x21, [sp, #96]
  42dfec:	ldp	x24, x23, [sp, #80]
  42dff0:	ldp	x26, x25, [sp, #64]
  42dff4:	ldp	x28, x27, [sp, #48]
  42dff8:	ldp	x29, x30, [sp, #32]
  42dffc:	add	sp, sp, #0x80
  42e000:	ret
  42e004:	ldr	x8, [x19, #136]
  42e008:	cbz	x8, 42dfc4 <feof@plt+0x2b5f4>
  42e00c:	ldr	w9, [x8, #48]
  42e010:	add	x8, x8, #0x28
  42e014:	cmp	w9, #0x2
  42e018:	b.ne	42e020 <feof@plt+0x2b650>  // b.any
  42e01c:	ldr	x8, [x8]
  42e020:	ldr	x8, [x8]
  42e024:	cbz	x8, 42dfc4 <feof@plt+0x2b5f4>
  42e028:	ldr	w21, [x25]
  42e02c:	str	w21, [x20]
  42e030:	b	42dfc4 <feof@plt+0x2b5f4>
  42e034:	mov	x0, x19
  42e038:	bl	425498 <feof@plt+0x22ac8>
  42e03c:	mov	w8, #0x53                  	// #83
  42e040:	str	x22, [x0, #8]
  42e044:	strb	w8, [x0, #4]
  42e048:	strh	wzr, [x0, #6]
  42e04c:	mov	x22, x0
  42e050:	b	42dfac <feof@plt+0x2b5dc>
  42e054:	mov	x0, x19
  42e058:	bl	425498 <feof@plt+0x22ac8>
  42e05c:	ldrb	w8, [x22, #4]
  42e060:	strb	w8, [x0, #4]
  42e064:	ldrh	w8, [x22, #6]
  42e068:	orr	w8, w8, #0x400
  42e06c:	strh	w8, [x0, #6]
  42e070:	ldur	q0, [x22, #8]
  42e074:	mov	x22, x0
  42e078:	stur	q0, [x0, #8]
  42e07c:	b	42dfac <feof@plt+0x2b5dc>
  42e080:	cbz	w23, 42dfac <feof@plt+0x2b5dc>
  42e084:	mov	x0, x19
  42e088:	mov	w1, wzr
  42e08c:	bl	4251b0 <feof@plt+0x227e0>
  42e090:	ldrb	w8, [x0, #4]
  42e094:	cmp	w8, #0x53
  42e098:	b.eq	42dfac <feof@plt+0x2b5dc>  // b.none
  42e09c:	ldrb	w8, [x0, #6]
  42e0a0:	mov	x24, x0
  42e0a4:	tbnz	w8, #0, 42dfac <feof@plt+0x2b5dc>
  42e0a8:	mov	x0, x19
  42e0ac:	bl	425498 <feof@plt+0x22ac8>
  42e0b0:	mov	w8, #0x53                  	// #83
  42e0b4:	str	x24, [x0, #8]
  42e0b8:	strb	w8, [x0, #4]
  42e0bc:	strh	wzr, [x0, #6]
  42e0c0:	ldr	x8, [x19, #136]
  42e0c4:	mov	x23, x0
  42e0c8:	ldr	w9, [x8, #48]
  42e0cc:	cmp	w9, #0x2
  42e0d0:	add	x9, x8, #0x28
  42e0d4:	b.ne	42e0dc <feof@plt+0x2b70c>  // b.any
  42e0d8:	ldr	x9, [x9]
  42e0dc:	ldr	x0, [x8]
  42e0e0:	ldr	x24, [x9]
  42e0e4:	cbnz	x0, 42e108 <feof@plt+0x2b738>
  42e0e8:	mov	w0, #0x38                  	// #56
  42e0ec:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42e0f0:	movi	v0.2d, #0x0
  42e0f4:	str	xzr, [x0, #48]
  42e0f8:	stp	q0, q0, [x0, #16]
  42e0fc:	ldr	x8, [x19, #136]
  42e100:	stp	xzr, x8, [x0]
  42e104:	str	x0, [x8]
  42e108:	mov	w8, #0x1                   	// #1
  42e10c:	add	x9, x23, #0x18
  42e110:	str	x0, [x19, #136]
  42e114:	stp	xzr, x24, [x0, #32]
  42e118:	str	w8, [x0, #48]
  42e11c:	stp	x23, x9, [x0, #16]
  42e120:	b	42dfac <feof@plt+0x2b5dc>
  42e124:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e128:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e12c:	add	x0, x0, #0xdce
  42e130:	add	x2, x2, #0xb3
  42e134:	mov	w1, #0xa2f                 	// #2607
  42e138:	bl	404ac4 <feof@plt+0x20f4>
  42e13c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e140:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e144:	add	x0, x0, #0xdce
  42e148:	add	x2, x2, #0xea
  42e14c:	mov	w1, #0x380                 	// #896
  42e150:	bl	404ac4 <feof@plt+0x20f4>
  42e154:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e158:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e15c:	add	x0, x0, #0xdce
  42e160:	add	x2, x2, #0xca
  42e164:	mov	w1, #0xa59                 	// #2649
  42e168:	bl	404ac4 <feof@plt+0x20f4>
  42e16c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e170:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e174:	add	x0, x0, #0xdce
  42e178:	add	x2, x2, #0xea
  42e17c:	mov	w1, #0x352                 	// #850
  42e180:	bl	404ac4 <feof@plt+0x20f4>
  42e184:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e188:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e18c:	add	x0, x0, #0xdce
  42e190:	add	x2, x2, #0x13b
  42e194:	mov	w1, #0x953                 	// #2387
  42e198:	bl	404ac4 <feof@plt+0x20f4>
  42e19c:	b	42db3c <feof@plt+0x2b16c>
  42e1a0:	ldr	x8, [x0, #136]
  42e1a4:	ldr	w9, [x8, #48]
  42e1a8:	add	x8, x8, #0x28
  42e1ac:	cmp	w9, #0x2
  42e1b0:	b.ne	42e1b8 <feof@plt+0x2b7e8>  // b.any
  42e1b4:	ldr	x8, [x8]
  42e1b8:	ldr	x8, [x8]
  42e1bc:	cbz	x8, 42e1d4 <feof@plt+0x2b804>
  42e1c0:	ldr	x8, [x8, #24]
  42e1c4:	cbz	x8, 42e1d4 <feof@plt+0x2b804>
  42e1c8:	ldrb	w8, [x8, #19]
  42e1cc:	ubfx	w0, w8, #4, #1
  42e1d0:	ret
  42e1d4:	mov	w0, wzr
  42e1d8:	ret
  42e1dc:	stp	x29, x30, [sp, #-32]!
  42e1e0:	ldr	x8, [x0]
  42e1e4:	str	x19, [sp, #16]
  42e1e8:	mov	x19, x0
  42e1ec:	mov	x29, sp
  42e1f0:	ldrb	w9, [x8, #105]
  42e1f4:	orr	w9, w9, #0x4
  42e1f8:	strb	w9, [x8, #105]
  42e1fc:	ldrb	w8, [x0, #27]
  42e200:	ldrb	w9, [x0, #24]
  42e204:	ldrb	w10, [x0, #1160]
  42e208:	add	w8, w8, #0x1
  42e20c:	add	w9, w9, #0x1
  42e210:	strb	w8, [x0, #27]
  42e214:	strb	w9, [x0, #24]
  42e218:	cbz	w10, 42e22c <feof@plt+0x2b85c>
  42e21c:	mov	x0, x19
  42e220:	bl	432ca0 <feof@plt+0x302d0>
  42e224:	tbnz	w0, #0, 42e21c <feof@plt+0x2b84c>
  42e228:	b	42e244 <feof@plt+0x2b874>
  42e22c:	mov	x0, x19
  42e230:	mov	x1, xzr
  42e234:	bl	42db3c <feof@plt+0x2b16c>
  42e238:	ldrb	w8, [x0, #4]
  42e23c:	cmp	w8, #0x16
  42e240:	b.ne	42e22c <feof@plt+0x2b85c>  // b.any
  42e244:	ldrb	w8, [x19, #27]
  42e248:	ldrb	w9, [x19, #24]
  42e24c:	sub	w8, w8, #0x1
  42e250:	sub	w9, w9, #0x1
  42e254:	strb	w8, [x19, #27]
  42e258:	strb	w9, [x19, #24]
  42e25c:	ldr	x19, [sp, #16]
  42e260:	ldp	x29, x30, [sp], #32
  42e264:	ret
  42e268:	ldr	w8, [x0, #496]
  42e26c:	add	w8, w8, w1
  42e270:	str	w8, [x0, #496]
  42e274:	cbz	w1, 42e2bc <feof@plt+0x2b8ec>
  42e278:	ldr	x8, [x0, #448]
  42e27c:	ldr	x9, [x0, #488]
  42e280:	b	42e288 <feof@plt+0x2b8b8>
  42e284:	cbz	w1, 42e2bc <feof@plt+0x2b8ec>
  42e288:	sub	x8, x8, #0x18
  42e28c:	str	x8, [x0, #448]
  42e290:	ldr	x10, [x9, #16]
  42e294:	sub	w1, w1, #0x1
  42e298:	cmp	x8, x10
  42e29c:	b.ne	42e284 <feof@plt+0x2b8b4>  // b.any
  42e2a0:	ldr	x10, [x9, #8]
  42e2a4:	cbz	x10, 42e284 <feof@plt+0x2b8b4>
  42e2a8:	str	x10, [x0, #488]
  42e2ac:	ldr	x8, [x10, #24]
  42e2b0:	mov	x9, x10
  42e2b4:	str	x8, [x0, #448]
  42e2b8:	b	42e284 <feof@plt+0x2b8b4>
  42e2bc:	ret
  42e2c0:	stp	x29, x30, [sp, #-16]!
  42e2c4:	ldr	x8, [x0, #136]
  42e2c8:	mov	x29, sp
  42e2cc:	ldr	x9, [x8, #8]
  42e2d0:	cbz	x9, 42e300 <feof@plt+0x2b930>
  42e2d4:	cmp	w1, #0x1
  42e2d8:	b.ne	42e38c <feof@plt+0x2b9bc>  // b.any
  42e2dc:	ldr	w9, [x8, #48]
  42e2e0:	cbz	w9, 42e378 <feof@plt+0x2b9a8>
  42e2e4:	cmp	w9, #0x2
  42e2e8:	b.eq	42e354 <feof@plt+0x2b984>  // b.none
  42e2ec:	cmp	w9, #0x1
  42e2f0:	b.ne	42e3a4 <feof@plt+0x2b9d4>  // b.any
  42e2f4:	ldr	x9, [x8, #16]
  42e2f8:	sub	x9, x9, #0x18
  42e2fc:	b	42e380 <feof@plt+0x2b9b0>
  42e300:	ldr	w8, [x0, #496]
  42e304:	add	w8, w8, w1
  42e308:	str	w8, [x0, #496]
  42e30c:	cbz	w1, 42e384 <feof@plt+0x2b9b4>
  42e310:	ldr	x8, [x0, #448]
  42e314:	ldr	x9, [x0, #488]
  42e318:	b	42e320 <feof@plt+0x2b950>
  42e31c:	cbz	w1, 42e384 <feof@plt+0x2b9b4>
  42e320:	sub	x8, x8, #0x18
  42e324:	str	x8, [x0, #448]
  42e328:	ldr	x10, [x9, #16]
  42e32c:	sub	w1, w1, #0x1
  42e330:	cmp	x8, x10
  42e334:	b.ne	42e31c <feof@plt+0x2b94c>  // b.any
  42e338:	ldr	x10, [x9, #8]
  42e33c:	cbz	x10, 42e31c <feof@plt+0x2b94c>
  42e340:	str	x10, [x0, #488]
  42e344:	ldr	x8, [x10, #24]
  42e348:	mov	x9, x10
  42e34c:	str	x8, [x0, #448]
  42e350:	b	42e31c <feof@plt+0x2b94c>
  42e354:	ldr	x9, [x8, #16]
  42e358:	sub	x9, x9, #0x8
  42e35c:	str	x9, [x8, #16]
  42e360:	ldr	x8, [x0, #136]
  42e364:	ldr	x8, [x8, #40]
  42e368:	cbz	x8, 42e3bc <feof@plt+0x2b9ec>
  42e36c:	ldr	x9, [x8, #16]
  42e370:	sub	x9, x9, #0x4
  42e374:	b	42e380 <feof@plt+0x2b9b0>
  42e378:	ldr	x9, [x8, #16]
  42e37c:	sub	x9, x9, #0x8
  42e380:	str	x9, [x8, #16]
  42e384:	ldp	x29, x30, [sp], #16
  42e388:	ret
  42e38c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e390:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e394:	add	x0, x0, #0xdce
  42e398:	add	x2, x2, #0xfb4
  42e39c:	mov	w1, #0xb8f                 	// #2959
  42e3a0:	bl	404ac4 <feof@plt+0x20f4>
  42e3a4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e3a8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e3ac:	add	x0, x0, #0xdce
  42e3b0:	add	x2, x2, #0xfb4
  42e3b4:	mov	w1, #0xba1                 	// #2977
  42e3b8:	bl	404ac4 <feof@plt+0x20f4>
  42e3bc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e3c0:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e3c4:	add	x0, x0, #0xdce
  42e3c8:	add	x2, x2, #0xfb4
  42e3cc:	mov	w1, #0xb9e                 	// #2974
  42e3d0:	bl	404ac4 <feof@plt+0x20f4>
  42e3d4:	ldrh	w8, [x0, #18]
  42e3d8:	mov	w9, #0xff3c                	// #65340
  42e3dc:	str	xzr, [x0, #24]
  42e3e0:	and	w8, w8, w9
  42e3e4:	strh	w8, [x0, #18]
  42e3e8:	ret
  42e3ec:	stp	x29, x30, [sp, #-64]!
  42e3f0:	stp	x24, x23, [sp, #16]
  42e3f4:	stp	x22, x21, [sp, #32]
  42e3f8:	stp	x20, x19, [sp, #48]
  42e3fc:	ldrh	w8, [x2, #18]
  42e400:	mov	x19, x2
  42e404:	mov	x21, x0
  42e408:	mov	x29, sp
  42e40c:	and	w8, w8, #0x3
  42e410:	cmp	w8, #0x1
  42e414:	b.ne	42e438 <feof@plt+0x2ba68>  // b.any
  42e418:	ldr	x3, [x19]
  42e41c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e420:	add	x2, x2, #0xfc7
  42e424:	mov	w1, #0x3                   	// #3
  42e428:	mov	x0, x21
  42e42c:	bl	41de04 <feof@plt+0x1b434>
  42e430:	mov	w0, wzr
  42e434:	b	42e4e8 <feof@plt+0x2bb18>
  42e438:	ldr	w8, [x21, #512]
  42e43c:	add	w23, w1, #0x1
  42e440:	add	w9, w23, w23, lsl #1
  42e444:	lsl	w24, w9, #3
  42e448:	mov	x20, x3
  42e44c:	mov	w22, w1
  42e450:	cmp	w24, w8
  42e454:	b.ls	42e470 <feof@plt+0x2baa0>  // b.plast
  42e458:	ldr	x0, [x21, #504]
  42e45c:	mov	w1, w24
  42e460:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42e464:	str	x0, [x21, #504]
  42e468:	str	w24, [x21, #512]
  42e46c:	b	42e474 <feof@plt+0x2baa4>
  42e470:	ldr	x0, [x21, #504]
  42e474:	mov	w8, #0x18                  	// #24
  42e478:	umaddl	x8, w22, w8, x0
  42e47c:	str	x19, [x8]
  42e480:	ldr	x9, [x19, #24]
  42e484:	mov	x1, x21
  42e488:	mov	w22, w22
  42e48c:	lsl	x10, x22, #3
  42e490:	str	x9, [x8, #8]
  42e494:	ldrh	w9, [x19, #18]
  42e498:	add	x10, x10, #0x8
  42e49c:	and	w9, w9, #0x3
  42e4a0:	str	w9, [x8, #16]
  42e4a4:	ldr	x8, [x1, #56]!
  42e4a8:	ldp	x8, x9, [x8, #16]
  42e4ac:	sub	x9, x9, x8
  42e4b0:	cmp	x9, x10
  42e4b4:	b.cs	42e4cc <feof@plt+0x2bafc>  // b.hs, b.nlast
  42e4b8:	mov	w2, #0x8                   	// #8
  42e4bc:	mov	x0, x21
  42e4c0:	bl	42951c <feof@plt+0x26b4c>
  42e4c4:	ldr	x8, [x21, #56]
  42e4c8:	ldr	x8, [x8, #16]
  42e4cc:	str	x20, [x8, x22, lsl #3]
  42e4d0:	ldrh	w8, [x19, #18]
  42e4d4:	mov	w0, #0x1                   	// #1
  42e4d8:	strh	w23, [x19, #24]
  42e4dc:	and	w8, w8, #0xfffc
  42e4e0:	orr	w8, w8, #0x1
  42e4e4:	strh	w8, [x19, #18]
  42e4e8:	ldp	x20, x19, [sp, #48]
  42e4ec:	ldp	x22, x21, [sp, #32]
  42e4f0:	ldp	x24, x23, [sp, #16]
  42e4f4:	ldp	x29, x30, [sp], #64
  42e4f8:	ret
  42e4fc:	cbz	w1, 42e53c <feof@plt+0x2bb6c>
  42e500:	sub	w8, w1, #0x1
  42e504:	mov	w9, #0x18                  	// #24
  42e508:	umull	x8, w8, w9
  42e50c:	ldr	x9, [x0, #504]
  42e510:	subs	w1, w1, #0x1
  42e514:	add	x9, x9, x8
  42e518:	ldr	x10, [x9]
  42e51c:	ldrh	w11, [x9, #16]
  42e520:	sub	x8, x8, #0x18
  42e524:	ldrh	w12, [x10, #18]
  42e528:	bfxil	w12, w11, #0, #2
  42e52c:	strh	w12, [x10, #18]
  42e530:	ldr	x9, [x9, #8]
  42e534:	str	x9, [x10, #24]
  42e538:	b.ne	42e50c <feof@plt+0x2bb3c>  // b.any
  42e53c:	ret
  42e540:	ldr	w8, [x0, #48]
  42e544:	ldrb	w9, [x2, #19]
  42e548:	str	xzr, [x2]
  42e54c:	strb	wzr, [x2, #18]
  42e550:	str	w8, [x2, #8]
  42e554:	and	w8, w9, #0xfffffff7
  42e558:	strh	wzr, [x2, #16]
  42e55c:	strb	w8, [x2, #19]
  42e560:	ldrb	w10, [x0, #1151]
  42e564:	mov	w8, #0xd7                  	// #215
  42e568:	and	w8, w9, w8
  42e56c:	str	wzr, [x2, #12]
  42e570:	cmp	w10, #0x0
  42e574:	cset	w9, eq  // eq = none
  42e578:	bfi	w8, w9, #5, #1
  42e57c:	and	w9, w8, #0xbbbbbbbb
  42e580:	strb	w9, [x2, #19]
  42e584:	ldr	x9, [x0]
  42e588:	cbz	x9, 42e59c <feof@plt+0x2bbcc>
  42e58c:	ldrb	w9, [x9, #106]
  42e590:	cmp	w9, #0x0
  42e594:	cset	w9, ne  // ne = any
  42e598:	lsl	w9, w9, #4
  42e59c:	mov	w10, #0xa0                  	// #160
  42e5a0:	and	w8, w8, w10
  42e5a4:	bfxil	w8, w1, #0, #2
  42e5a8:	orr	w8, w8, w9
  42e5ac:	mov	x0, x2
  42e5b0:	strb	w8, [x2, #19]
  42e5b4:	ret
  42e5b8:	sub	sp, sp, #0xd0
  42e5bc:	stp	x29, x30, [sp, #112]
  42e5c0:	stp	x28, x27, [sp, #128]
  42e5c4:	stp	x26, x25, [sp, #144]
  42e5c8:	stp	x24, x23, [sp, #160]
  42e5cc:	stp	x22, x21, [sp, #176]
  42e5d0:	stp	x20, x19, [sp, #192]
  42e5d4:	ldrb	w8, [x0, #1160]
  42e5d8:	mov	x21, x0
  42e5dc:	mov	x22, x1
  42e5e0:	add	x29, sp, #0x70
  42e5e4:	str	x0, [sp, #40]
  42e5e8:	cbz	w8, 42e5fc <feof@plt+0x2bc2c>
  42e5ec:	mov	x0, x21
  42e5f0:	bl	433f38 <feof@plt+0x31568>
  42e5f4:	mov	x23, x0
  42e5f8:	b	42ee0c <feof@plt+0x2c43c>
  42e5fc:	ldr	x19, [x21, #448]
  42e600:	add	x8, sp, #0x30
  42e604:	mov	x0, x21
  42e608:	str	x8, [x21, #448]
  42e60c:	bl	425618 <feof@plt+0x22c48>
  42e610:	str	x19, [x21, #448]
  42e614:	ldrb	w8, [x0, #6]
  42e618:	mov	x23, x0
  42e61c:	str	x22, [sp, #8]
  42e620:	tbnz	w8, #0, 42e954 <feof@plt+0x2bf84>
  42e624:	ldrb	w8, [x23, #4]
  42e628:	cmp	w8, #0x4f
  42e62c:	b.eq	42e82c <feof@plt+0x2be5c>  // b.none
  42e630:	cmp	w8, #0x16
  42e634:	b.eq	42e954 <feof@plt+0x2bf84>  // b.none
  42e638:	cmp	w8, #0x14
  42e63c:	b.ne	42e834 <feof@plt+0x2be64>  // b.any
  42e640:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e644:	adrp	x23, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e648:	adrp	x24, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e64c:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e650:	mov	w8, wzr
  42e654:	mov	w27, wzr
  42e658:	mov	w9, wzr
  42e65c:	add	x19, x19, #0xc83
  42e660:	add	x23, x23, #0x52f
  42e664:	add	x24, x24, #0x55d
  42e668:	mov	w25, #0x1                   	// #1
  42e66c:	add	x22, x22, #0x4fe
  42e670:	b	42e690 <feof@plt+0x2bcc0>
  42e674:	tst	w28, #0xff
  42e678:	cset	w11, eq  // eq = none
  42e67c:	mov	w8, wzr
  42e680:	mov	w9, wzr
  42e684:	and	w11, w11, w26
  42e688:	mov	w27, w20
  42e68c:	tbz	w11, #0, 42e860 <feof@plt+0x2be90>
  42e690:	mov	x0, x21
  42e694:	mov	w26, w9
  42e698:	mov	w20, w27
  42e69c:	mov	w28, w8
  42e6a0:	bl	425308 <feof@plt+0x22938>
  42e6a4:	ldrb	w10, [x0, #4]
  42e6a8:	mov	x1, x0
  42e6ac:	sub	w8, w10, #0x13
  42e6b0:	cmp	w8, #0x22
  42e6b4:	b.hi	42e6e0 <feof@plt+0x2bd10>  // b.pmore
  42e6b8:	adr	x9, 42e674 <feof@plt+0x2bca4>
  42e6bc:	ldrb	w11, [x19, x8]
  42e6c0:	add	x9, x9, x11, lsl #2
  42e6c4:	br	x9
  42e6c8:	tst	w28, #0xff
  42e6cc:	b.ne	42f08c <feof@plt+0x2c6bc>  // b.any
  42e6d0:	cbz	w20, 42f08c <feof@plt+0x2c6bc>
  42e6d4:	eor	w8, w26, #0x1
  42e6d8:	tbnz	w8, #0, 42e674 <feof@plt+0x2bca4>
  42e6dc:	b	42f08c <feof@plt+0x2c6bc>
  42e6e0:	cmp	w10, #0x4f
  42e6e4:	b.ne	42e860 <feof@plt+0x2be90>  // b.any
  42e6e8:	ldrb	w11, [x21, #1124]
  42e6ec:	mov	w8, w28
  42e6f0:	mov	w27, w20
  42e6f4:	mov	w9, w26
  42e6f8:	cbz	w11, 42e690 <feof@plt+0x2bcc0>
  42e6fc:	b	42e860 <feof@plt+0x2be90>
  42e700:	tst	w28, #0xff
  42e704:	b.ne	42e860 <feof@plt+0x2be90>  // b.any
  42e708:	tbz	w26, #0, 42e794 <feof@plt+0x2bdc4>
  42e70c:	ldrb	w10, [x21, #1154]
  42e710:	mov	w8, #0x1                   	// #1
  42e714:	mov	w27, w20
  42e718:	mov	w9, #0x1                   	// #1
  42e71c:	cbz	w10, 42e690 <feof@plt+0x2bcc0>
  42e720:	ldrb	w10, [x21, #1142]
  42e724:	mov	w8, #0x1                   	// #1
  42e728:	mov	w27, w20
  42e72c:	mov	w9, #0x1                   	// #1
  42e730:	cbz	w10, 42e690 <feof@plt+0x2bcc0>
  42e734:	ldrb	w8, [x21, #1120]
  42e738:	mov	w1, #0xa                   	// #10
  42e73c:	mov	x0, x21
  42e740:	cmp	w8, #0x0
  42e744:	csel	x2, x24, x23, eq  // eq = none
  42e748:	bl	41e064 <feof@plt+0x1b694>
  42e74c:	mov	w8, #0x1                   	// #1
  42e750:	mov	w27, w20
  42e754:	mov	w9, #0x1                   	// #1
  42e758:	b	42e690 <feof@plt+0x2bcc0>
  42e75c:	tst	w28, #0xff
  42e760:	b.ne	42e860 <feof@plt+0x2be90>  // b.any
  42e764:	eor	w8, w26, #0x1
  42e768:	tbz	w8, #0, 42e860 <feof@plt+0x2be90>
  42e76c:	ldp	x2, x3, [x1, #8]
  42e770:	mov	x0, x21
  42e774:	mov	w1, w20
  42e778:	mov	w26, w20
  42e77c:	bl	42e3ec <feof@plt+0x2ba1c>
  42e780:	mov	w8, wzr
  42e784:	add	w27, w20, #0x1
  42e788:	mov	w9, #0x1                   	// #1
  42e78c:	tbnz	w0, #0, 42e690 <feof@plt+0x2bcc0>
  42e790:	b	42f0a8 <feof@plt+0x2c6d8>
  42e794:	ldr	x2, [x21, #1272]
  42e798:	mov	x0, x21
  42e79c:	mov	w1, w20
  42e7a0:	mov	x3, x2
  42e7a4:	bl	42e3ec <feof@plt+0x2ba1c>
  42e7a8:	ldrb	w8, [x21, #1152]
  42e7ac:	add	w27, w20, #0x1
  42e7b0:	strb	w25, [x21, #22]
  42e7b4:	cbz	w8, 42e7f0 <feof@plt+0x2be20>
  42e7b8:	ldrsb	w8, [x21, #1198]
  42e7bc:	mov	w9, wzr
  42e7c0:	cmp	w8, #0x1
  42e7c4:	mov	w8, #0x1                   	// #1
  42e7c8:	b.lt	42e690 <feof@plt+0x2bcc0>  // b.tstop
  42e7cc:	ldrb	w10, [x21, #1120]
  42e7d0:	mov	w9, wzr
  42e7d4:	mov	w8, #0x1                   	// #1
  42e7d8:	cbnz	w10, 42e690 <feof@plt+0x2bcc0>
  42e7dc:	mov	x0, x21
  42e7e0:	mov	w1, wzr
  42e7e4:	mov	x2, x22
  42e7e8:	bl	41de04 <feof@plt+0x1b434>
  42e7ec:	b	42e820 <feof@plt+0x2be50>
  42e7f0:	ldrb	w8, [x21, #1154]
  42e7f4:	cbz	w8, 42e7b8 <feof@plt+0x2bde8>
  42e7f8:	ldrb	w8, [x21, #1142]
  42e7fc:	cbz	w8, 42e7b8 <feof@plt+0x2bde8>
  42e800:	ldrb	w8, [x21, #1120]
  42e804:	mov	w1, #0xa                   	// #10
  42e808:	mov	x0, x21
  42e80c:	cmp	w8, #0x0
  42e810:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e814:	add	x8, x8, #0x4cb
  42e818:	csel	x2, x22, x8, eq  // eq = none
  42e81c:	bl	41e064 <feof@plt+0x1b694>
  42e820:	mov	w9, wzr
  42e824:	mov	w8, #0x1                   	// #1
  42e828:	b	42e690 <feof@plt+0x2bcc0>
  42e82c:	ldrb	w9, [x21, #1124]
  42e830:	cbz	w9, 42e954 <feof@plt+0x2bf84>
  42e834:	ldrb	w9, [x21, #1152]
  42e838:	cbz	w9, 42e8a8 <feof@plt+0x2bed8>
  42e83c:	ldrb	w8, [x21, #1120]
  42e840:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e844:	adrp	x10, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e848:	add	x9, x9, #0x351
  42e84c:	add	x10, x10, #0x384
  42e850:	cmp	w8, #0x0
  42e854:	csel	x2, x10, x9, eq  // eq = none
  42e858:	mov	w1, #0x2                   	// #2
  42e85c:	b	42e94c <feof@plt+0x2bf7c>
  42e860:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e864:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e868:	adrp	x11, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e86c:	adrp	x12, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e870:	adrp	x13, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e874:	add	x8, x8, #0x423
  42e878:	add	x9, x9, #0x447
  42e87c:	add	x11, x11, #0x467
  42e880:	add	x12, x12, #0x492
  42e884:	add	x13, x13, #0x4b2
  42e888:	tst	w28, #0xff
  42e88c:	stp	x8, x9, [x29, #-40]
  42e890:	stp	x11, x12, [x29, #-24]
  42e894:	stur	x13, [x29, #-8]
  42e898:	b.eq	42e8d8 <feof@plt+0x2bf08>  // b.none
  42e89c:	mov	x3, xzr
  42e8a0:	mov	w19, #0x4                   	// #4
  42e8a4:	b	42e904 <feof@plt+0x2bf34>
  42e8a8:	sub	w8, w8, #0x34
  42e8ac:	cmp	w8, #0xf
  42e8b0:	mov	w1, wzr
  42e8b4:	b.hi	42e944 <feof@plt+0x2bf74>  // b.pmore
  42e8b8:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0xca68>
  42e8bc:	add	x9, x9, #0xca6
  42e8c0:	adr	x10, 42e8d0 <feof@plt+0x2bf00>
  42e8c4:	ldrb	w11, [x9, x8]
  42e8c8:	add	x10, x10, x11, lsl #2
  42e8cc:	br	x10
  42e8d0:	mov	w1, #0x2                   	// #2
  42e8d4:	b	42e944 <feof@plt+0x2bf74>
  42e8d8:	cmp	w10, #0x16
  42e8dc:	b.ne	42e8f4 <feof@plt+0x2bf24>  // b.any
  42e8e0:	tst	w26, #0x1
  42e8e4:	mov	w8, #0x2                   	// #2
  42e8e8:	mov	x3, xzr
  42e8ec:	cinc	x19, x8, ne  // ne = any
  42e8f0:	b	42e904 <feof@plt+0x2bf34>
  42e8f4:	mov	x0, x21
  42e8f8:	and	x19, x26, #0x1
  42e8fc:	bl	428aa4 <feof@plt+0x260d4>
  42e900:	mov	x3, x0
  42e904:	sub	x8, x29, #0x28
  42e908:	ldr	x2, [x8, x19, lsl #3]
  42e90c:	ldr	x22, [sp, #8]
  42e910:	mov	w1, #0x3                   	// #3
  42e914:	mov	x0, x21
  42e918:	bl	41de04 <feof@plt+0x1b434>
  42e91c:	b	42edc4 <feof@plt+0x2c3f4>
  42e920:	ldr	x8, [x23, #16]
  42e924:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e928:	add	x0, x0, #0x3b5
  42e92c:	mov	w2, #0x1d                  	// #29
  42e930:	ldrb	w1, [x8]
  42e934:	bl	402650 <memchr@plt>
  42e938:	cmp	x0, #0x0
  42e93c:	cset	w8, eq  // eq = none
  42e940:	lsl	w1, w8, #1
  42e944:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42e948:	add	x2, x2, #0x3d2
  42e94c:	mov	x0, x21
  42e950:	bl	41de04 <feof@plt+0x1b434>
  42e954:	mov	w20, wzr
  42e958:	mov	w28, wzr
  42e95c:	mov	x24, xzr
  42e960:	mov	x9, x21
  42e964:	ldr	x8, [x9, #56]!
  42e968:	str	x9, [sp, #24]
  42e96c:	ldp	x27, x9, [x8, #16]
  42e970:	sub	x8, x9, x27
  42e974:	cmp	x8, #0x2f
  42e978:	b.hi	42e994 <feof@plt+0x2bfc4>  // b.pmore
  42e97c:	ldr	x1, [sp, #24]
  42e980:	mov	w2, #0x30                  	// #48
  42e984:	mov	x0, x21
  42e988:	bl	42951c <feof@plt+0x26b4c>
  42e98c:	ldr	x8, [x21, #56]
  42e990:	ldr	x27, [x8, #16]
  42e994:	ldr	w8, [x21, #48]
  42e998:	ldrb	w9, [x27, #19]
  42e99c:	str	xzr, [x27]
  42e9a0:	strb	wzr, [x27, #18]
  42e9a4:	str	w8, [x27, #8]
  42e9a8:	and	w8, w9, #0xfffffff7
  42e9ac:	strh	wzr, [x27, #16]
  42e9b0:	strb	w8, [x27, #19]
  42e9b4:	ldrb	w10, [x21, #1151]
  42e9b8:	mov	w8, #0xd7                  	// #215
  42e9bc:	and	w8, w9, w8
  42e9c0:	str	wzr, [x27, #12]
  42e9c4:	cmp	w10, #0x0
  42e9c8:	cset	w9, eq  // eq = none
  42e9cc:	bfi	w8, w9, #5, #1
  42e9d0:	and	w9, w8, #0xbbbbbbbb
  42e9d4:	strb	w9, [x27, #19]
  42e9d8:	ldr	x9, [x21]
  42e9dc:	cbz	x9, 42e9f0 <feof@plt+0x2c020>
  42e9e0:	ldrb	w9, [x9, #106]
  42e9e4:	cmp	w9, #0x0
  42e9e8:	cset	w9, ne  // ne = any
  42e9ec:	lsl	w9, w9, #4
  42e9f0:	mov	w10, #0xa0                  	// #160
  42e9f4:	and	w8, w8, w10
  42e9f8:	orr	w8, w9, w8
  42e9fc:	strb	w8, [x27, #19]
  42ea00:	str	w20, [sp, #4]
  42ea04:	cbz	x23, 42ea28 <feof@plt+0x2c058>
  42ea08:	ldr	x9, [x23, #16]
  42ea0c:	ldr	q0, [x23]
  42ea10:	add	x1, x27, #0x18
  42ea14:	mov	w10, #0x1                   	// #1
  42ea18:	str	x9, [x27, #40]
  42ea1c:	stur	q0, [x27, #24]
  42ea20:	str	w10, [x27, #12]
  42ea24:	b	42ea40 <feof@plt+0x2c070>
  42ea28:	orr	w8, w8, w28, lsl #3
  42ea2c:	orr	w8, w8, #0x4
  42ea30:	mov	x1, xzr
  42ea34:	strh	w20, [x27, #16]
  42ea38:	str	x24, [x27]
  42ea3c:	strb	w8, [x27, #19]
  42ea40:	ldr	x24, [sp, #24]
  42ea44:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x10a68>
  42ea48:	mov	w23, wzr
  42ea4c:	ubfx	w8, w8, #3, #1
  42ea50:	mov	w9, #0x1                   	// #1
  42ea54:	mov	w22, #0x18                  	// #24
  42ea58:	add	x19, x19, #0xa50
  42ea5c:	str	wzr, [sp, #20]
  42ea60:	stur	x21, [x29, #-40]
  42ea64:	sturb	wzr, [x29, #-30]
  42ea68:	stur	xzr, [x29, #-28]
  42ea6c:	stur	wzr, [x29, #-20]
  42ea70:	sturb	w9, [x29, #-32]
  42ea74:	sturb	w8, [x29, #-31]
  42ea78:	b	42eaa0 <feof@plt+0x2c0d0>
  42ea7c:	ldr	w9, [sp, #20]
  42ea80:	str	w8, [x1, #8]
  42ea84:	add	w9, w9, #0x1
  42ea88:	str	w9, [sp, #20]
  42ea8c:	mov	w23, #0x1                   	// #1
  42ea90:	sub	x0, x29, #0x28
  42ea94:	bl	431730 <feof@plt+0x2ed60>
  42ea98:	mov	x1, xzr
  42ea9c:	cbz	w0, 42edbc <feof@plt+0x2c3ec>
  42eaa0:	cbnz	x1, 42ecb0 <feof@plt+0x2c2e0>
  42eaa4:	ldr	x8, [x24]
  42eaa8:	ldr	w9, [x27, #12]
  42eaac:	ldp	x27, x10, [x8, #16]
  42eab0:	sub	x8, x10, x27
  42eab4:	orr	x10, xzr, #0x30
  42eab8:	madd	x9, x9, x22, x10
  42eabc:	cmp	x8, x9
  42eac0:	b.cs	42eadc <feof@plt+0x2c10c>  // b.hs, b.nlast
  42eac4:	mov	w2, #0x18                  	// #24
  42eac8:	mov	x0, x21
  42eacc:	mov	x1, x24
  42ead0:	bl	42951c <feof@plt+0x26b4c>
  42ead4:	ldr	x8, [x21, #56]
  42ead8:	ldr	x27, [x8, #16]
  42eadc:	ldr	w8, [x27, #12]
  42eae0:	ldr	x20, [x21, #448]
  42eae4:	mov	x0, x21
  42eae8:	madd	x8, x8, x22, x27
  42eaec:	add	x8, x8, #0x18
  42eaf0:	str	x8, [x21, #448]
  42eaf4:	bl	425618 <feof@plt+0x22c48>
  42eaf8:	str	x20, [x21, #448]
  42eafc:	ldrb	w8, [x0, #4]
  42eb00:	str	w23, [sp, #36]
  42eb04:	cmp	w8, #0x35
  42eb08:	b.ne	42eb34 <feof@plt+0x2c164>  // b.any
  42eb0c:	ldr	x9, [x0, #8]
  42eb10:	ldrh	w10, [x9, #18]
  42eb14:	and	w10, w10, #0x3
  42eb18:	cmp	w10, #0x1
  42eb1c:	b.ne	42eb34 <feof@plt+0x2c164>  // b.any
  42eb20:	mov	w8, #0x50                  	// #80
  42eb24:	strb	w8, [x0, #4]
  42eb28:	ldrh	w8, [x9, #24]
  42eb2c:	str	w8, [x0, #8]
  42eb30:	b	42ec90 <feof@plt+0x2c2c0>
  42eb34:	ldrb	w9, [x21, #1138]
  42eb38:	cbz	w9, 42ec90 <feof@plt+0x2c2c0>
  42eb3c:	ldrh	w9, [x27, #16]
  42eb40:	cbz	w9, 42ec90 <feof@plt+0x2c2c0>
  42eb44:	cmp	w8, #0x3e
  42eb48:	b.eq	42eb54 <feof@plt+0x2c184>  // b.none
  42eb4c:	cmp	w8, #0x38
  42eb50:	b.ne	42ec90 <feof@plt+0x2c2c0>  // b.any
  42eb54:	ldr	w8, [x0, #8]
  42eb58:	cmp	w8, #0x3
  42eb5c:	b.cc	42ec90 <feof@plt+0x2c2c0>  // b.lo, b.ul, b.last
  42eb60:	ldr	x9, [x0, #16]
  42eb64:	add	x8, x8, x9
  42eb68:	sub	x23, x8, #0x1
  42eb6c:	add	x24, x9, #0x1
  42eb70:	b	42eb80 <feof@plt+0x2c1b0>
  42eb74:	ldr	x21, [sp, #40]
  42eb78:	cmp	x24, x23
  42eb7c:	b.cs	42ec90 <feof@plt+0x2c2c0>  // b.hs, b.nlast
  42eb80:	mov	w11, #0x204                 	// #516
  42eb84:	cmp	x24, x23
  42eb88:	b.cc	42ebe8 <feof@plt+0x2c218>  // b.lo, b.ul, b.last
  42eb8c:	cmp	x24, x23
  42eb90:	b.cs	42ec08 <feof@plt+0x2c238>  // b.hs, b.nlast
  42eb94:	mov	x8, x24
  42eb98:	b	42eba8 <feof@plt+0x2c1d8>
  42eb9c:	add	x8, x8, #0x1
  42eba0:	cmp	x23, x8
  42eba4:	b.eq	42ec18 <feof@plt+0x2c248>  // b.none
  42eba8:	ldrb	w9, [x8]
  42ebac:	ldrh	w10, [x19, x9, lsl #1]
  42ebb0:	tst	w10, w11
  42ebb4:	b.ne	42eb9c <feof@plt+0x2c1cc>  // b.any
  42ebb8:	cmp	w9, #0x24
  42ebbc:	b.ne	42ebc8 <feof@plt+0x2c1f8>  // b.any
  42ebc0:	ldrb	w9, [x21, #1146]
  42ebc4:	cbnz	w9, 42eb9c <feof@plt+0x2c1cc>
  42ebc8:	mov	x22, x24
  42ebcc:	mov	x24, x8
  42ebd0:	ldrh	w20, [x27, #16]
  42ebd4:	cbnz	x20, 42ec30 <feof@plt+0x2c260>
  42ebd8:	b	42eb74 <feof@plt+0x2c1a4>
  42ebdc:	add	x24, x24, #0x1
  42ebe0:	cmp	x23, x24
  42ebe4:	b.eq	42ec20 <feof@plt+0x2c250>  // b.none
  42ebe8:	ldrb	w8, [x24]
  42ebec:	ldrh	w9, [x19, x8, lsl #1]
  42ebf0:	tbnz	w9, #9, 42eb8c <feof@plt+0x2c1bc>
  42ebf4:	cmp	w8, #0x24
  42ebf8:	b.ne	42ebdc <feof@plt+0x2c20c>  // b.any
  42ebfc:	ldrb	w8, [x21, #1146]
  42ec00:	cbz	w8, 42ebdc <feof@plt+0x2c20c>
  42ec04:	b	42eb8c <feof@plt+0x2c1bc>
  42ec08:	mov	x22, x24
  42ec0c:	ldrh	w20, [x27, #16]
  42ec10:	cbnz	x20, 42ec30 <feof@plt+0x2c260>
  42ec14:	b	42eb74 <feof@plt+0x2c1a4>
  42ec18:	mov	x22, x24
  42ec1c:	b	42ec24 <feof@plt+0x2c254>
  42ec20:	mov	x22, x23
  42ec24:	mov	x24, x23
  42ec28:	ldrh	w20, [x27, #16]
  42ec2c:	cbz	x20, 42eb74 <feof@plt+0x2c1a4>
  42ec30:	ldr	x28, [x27]
  42ec34:	sub	x21, x24, x22
  42ec38:	and	x25, x21, #0xffffffff
  42ec3c:	b	42ec4c <feof@plt+0x2c27c>
  42ec40:	subs	x20, x20, #0x1
  42ec44:	add	x28, x28, #0x8
  42ec48:	b.eq	42eb74 <feof@plt+0x2c1a4>  // b.none
  42ec4c:	ldr	x8, [x28]
  42ec50:	ldr	w9, [x8, #8]
  42ec54:	cmp	w9, w21
  42ec58:	b.ne	42ec40 <feof@plt+0x2c270>  // b.any
  42ec5c:	ldr	x26, [x8]
  42ec60:	mov	x0, x22
  42ec64:	mov	x2, x25
  42ec68:	mov	x1, x26
  42ec6c:	bl	402980 <bcmp@plt>
  42ec70:	cbnz	w0, 42ec40 <feof@plt+0x2c270>
  42ec74:	ldr	x0, [sp, #40]
  42ec78:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42ec7c:	mov	w1, #0x6                   	// #6
  42ec80:	add	x2, x2, #0x589
  42ec84:	mov	x3, x26
  42ec88:	bl	41df34 <feof@plt+0x1b564>
  42ec8c:	b	42eb74 <feof@plt+0x2c1a4>
  42ec90:	ldr	w8, [x27, #12]
  42ec94:	ldr	x24, [sp, #24]
  42ec98:	ldr	w23, [sp, #36]
  42ec9c:	mov	w22, #0x18                  	// #24
  42eca0:	add	w9, w8, #0x1
  42eca4:	madd	x8, x8, x22, x27
  42eca8:	add	x1, x8, #0x18
  42ecac:	str	w9, [x27, #12]
  42ecb0:	ldr	w8, [x27, #12]
  42ecb4:	cmp	w8, #0x2
  42ecb8:	b.cc	42ed40 <feof@plt+0x2c370>  // b.lo, b.ul, b.last
  42ecbc:	ldurb	w9, [x1, #-20]
  42ecc0:	cmp	w9, #0x25
  42ecc4:	b.ne	42ed40 <feof@plt+0x2c370>  // b.any
  42ecc8:	ldrb	w9, [x27, #19]
  42eccc:	tbz	w9, #2, 42ed40 <feof@plt+0x2c370>
  42ecd0:	ldrb	w9, [x1, #4]
  42ecd4:	cmp	w9, #0x50
  42ecd8:	b.ne	42ed34 <feof@plt+0x2c364>  // b.any
  42ecdc:	ldrh	w9, [x1, #6]
  42ece0:	sub	x8, x1, #0x18
  42ece4:	tbz	w9, #0, 42ecf0 <feof@plt+0x2c320>
  42ece8:	orr	w9, w9, #0x200
  42ecec:	strh	w9, [x1, #6]
  42ecf0:	ldurh	w10, [x1, #-18]
  42ecf4:	tbz	w10, #1, 42ed00 <feof@plt+0x2c330>
  42ecf8:	orr	w9, w9, #0x100
  42ecfc:	strh	w9, [x1, #6]
  42ed00:	and	w9, w9, #0xfffffffe
  42ed04:	and	w10, w10, #0x1
  42ed08:	orr	w9, w10, w9
  42ed0c:	orr	w9, w9, #0x4
  42ed10:	strh	w9, [x1, #6]
  42ed14:	ldr	x9, [x1, #16]
  42ed18:	ldr	q0, [x1]
  42ed1c:	str	x9, [x8, #16]
  42ed20:	str	q0, [x8]
  42ed24:	ldr	w8, [x27, #12]
  42ed28:	sub	w8, w8, #0x1
  42ed2c:	str	w8, [x27, #12]
  42ed30:	b	42ed40 <feof@plt+0x2c370>
  42ed34:	ldr	w9, [x21, #1116]
  42ed38:	cmp	w9, #0x15
  42ed3c:	b.ne	42f03c <feof@plt+0x2c66c>  // b.any
  42ed40:	ldrb	w9, [x1, #4]
  42ed44:	cmp	w9, #0x26
  42ed48:	b.eq	42ed5c <feof@plt+0x2c38c>  // b.none
  42ed4c:	cmp	w9, #0x16
  42ed50:	b.eq	42eda4 <feof@plt+0x2c3d4>  // b.none
  42ed54:	mov	w23, wzr
  42ed58:	b	42ea90 <feof@plt+0x2c0c0>
  42ed5c:	subs	w8, w8, #0x1
  42ed60:	b.eq	42eda8 <feof@plt+0x2c3d8>  // b.none
  42ed64:	tbnz	w23, #0, 42ea7c <feof@plt+0x2c0ac>
  42ed68:	str	w8, [x27, #12]
  42ed6c:	ldurh	w8, [x1, #-18]
  42ed70:	ldrh	w10, [x1, #6]
  42ed74:	orr	w9, w8, #0x8
  42ed78:	tst	w10, #0x3
  42ed7c:	sturh	w9, [x1, #-18]
  42ed80:	b.eq	42ea8c <feof@plt+0x2c0bc>  // b.none
  42ed84:	mov	w12, #0x108                 	// #264
  42ed88:	orr	w8, w8, w12
  42ed8c:	tst	w10, #0x2
  42ed90:	and	w11, w10, #0x1
  42ed94:	csel	w8, w9, w8, eq  // eq = none
  42ed98:	orr	w8, w8, w11, lsl #9
  42ed9c:	sturh	w8, [x1, #-18]
  42eda0:	b	42ea8c <feof@plt+0x2c0bc>
  42eda4:	tbz	w23, #0, 42ef18 <feof@plt+0x2c548>
  42eda8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42edac:	add	x2, x2, #0x31b
  42edb0:	mov	w1, #0x3                   	// #3
  42edb4:	mov	x0, x21
  42edb8:	bl	41de04 <feof@plt+0x1b434>
  42edbc:	ldr	x22, [sp, #8]
  42edc0:	ldr	w20, [sp, #4]
  42edc4:	mov	x23, xzr
  42edc8:	strb	wzr, [x21, #22]
  42edcc:	cbz	w20, 42ee0c <feof@plt+0x2c43c>
  42edd0:	sub	w8, w20, #0x1
  42edd4:	mov	w9, #0x18                  	// #24
  42edd8:	umull	x8, w8, w9
  42eddc:	ldr	x9, [x21, #504]
  42ede0:	sub	w20, w20, #0x1
  42ede4:	add	x9, x9, x8
  42ede8:	ldr	x10, [x9]
  42edec:	ldrh	w11, [x9, #16]
  42edf0:	sub	x8, x8, #0x18
  42edf4:	ldrh	w12, [x10, #18]
  42edf8:	bfxil	w12, w11, #0, #2
  42edfc:	strh	w12, [x10, #18]
  42ee00:	ldr	x9, [x9, #8]
  42ee04:	str	x9, [x10, #24]
  42ee08:	cbnz	w20, 42eddc <feof@plt+0x2c40c>
  42ee0c:	cbz	x23, 42ee90 <feof@plt+0x2c4c0>
  42ee10:	ldrh	w19, [x22, #18]
  42ee14:	tbz	w19, #1, 42f164 <feof@plt+0x2c794>
  42ee18:	and	w8, w19, #0x3
  42ee1c:	cmp	w8, #0x2
  42ee20:	b.ne	42ee6c <feof@plt+0x2c49c>  // b.any
  42ee24:	ldrb	w8, [x21, #1151]
  42ee28:	cbz	w8, 42ee6c <feof@plt+0x2c49c>
  42ee2c:	ldr	x19, [x22, #24]
  42ee30:	ldrb	w8, [x19, #19]
  42ee34:	tbnz	w8, #5, 42ee6c <feof@plt+0x2c49c>
  42ee38:	ldr	x0, [x21, #40]
  42ee3c:	ldr	w1, [x19, #8]
  42ee40:	bl	429b2c <feof@plt+0x2715c>
  42ee44:	ldr	w8, [x0, #20]
  42ee48:	cbnz	w8, 42ee6c <feof@plt+0x2c49c>
  42ee4c:	ldr	w2, [x19, #8]
  42ee50:	ldr	x5, [x22]
  42ee54:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  42ee58:	add	x4, x4, #0xd30
  42ee5c:	mov	w1, #0xe                   	// #14
  42ee60:	mov	x0, x21
  42ee64:	mov	w3, wzr
  42ee68:	bl	41e3c0 <feof@plt+0x1b9f0>
  42ee6c:	ldrh	w8, [x22, #18]
  42ee70:	tbnz	w8, #5, 42f0e8 <feof@plt+0x2c718>
  42ee74:	mvn	w9, w8
  42ee78:	tst	w9, #0x3
  42ee7c:	b.ne	42ee98 <feof@plt+0x2c4c8>  // b.any
  42ee80:	ldr	x8, [sp, #40]
  42ee84:	ldrb	w8, [x8, #1143]
  42ee88:	cbnz	w8, 42f0e8 <feof@plt+0x2c718>
  42ee8c:	b	42f150 <feof@plt+0x2c780>
  42ee90:	mov	w0, wzr
  42ee94:	b	42f19c <feof@plt+0x2c7cc>
  42ee98:	tbnz	w8, #8, 42f150 <feof@plt+0x2c780>
  42ee9c:	ldr	x21, [x22, #24]
  42eea0:	ldrb	w8, [x21, #18]
  42eea4:	cbz	w8, 42eec0 <feof@plt+0x2c4f0>
  42eea8:	ldr	x0, [sp, #40]
  42eeac:	sub	w2, w8, #0x1
  42eeb0:	mov	x1, x21
  42eeb4:	ldr	x9, [x0, #1048]
  42eeb8:	blr	x9
  42eebc:	strb	wzr, [x21, #18]
  42eec0:	ldrh	w9, [x21, #16]
  42eec4:	ldrh	w8, [x23, #16]
  42eec8:	cmp	w9, w8
  42eecc:	b.ne	42f0e8 <feof@plt+0x2c718>  // b.any
  42eed0:	ldrb	w8, [x21, #19]
  42eed4:	ldrb	w10, [x23, #19]
  42eed8:	eor	w10, w10, w8
  42eedc:	tst	w10, #0xc
  42eee0:	b.ne	42f0e8 <feof@plt+0x2c718>  // b.any
  42eee4:	sub	w9, w9, #0x1
  42eee8:	cmn	w9, #0x1
  42eeec:	b.eq	42f06c <feof@plt+0x2c69c>  // b.none
  42eef0:	ldr	x10, [x21]
  42eef4:	ldr	x11, [x23]
  42eef8:	mov	w12, w9
  42eefc:	lsl	x12, x12, #3
  42ef00:	ldr	x10, [x10, x12]
  42ef04:	ldr	x11, [x11, x12]
  42ef08:	sub	w9, w9, #0x1
  42ef0c:	cmp	x10, x11
  42ef10:	b.eq	42eee8 <feof@plt+0x2c518>  // b.none
  42ef14:	b	42f0e8 <feof@plt+0x2c718>
  42ef18:	ldurb	w8, [x29, #-31]
  42ef1c:	cbz	w8, 42ef40 <feof@plt+0x2c570>
  42ef20:	ldur	w8, [x29, #-28]
  42ef24:	cbz	w8, 42ef48 <feof@plt+0x2c578>
  42ef28:	ldur	x0, [x29, #-40]
  42ef2c:	ldur	w2, [x29, #-20]
  42ef30:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0xda68>
  42ef34:	add	x3, x3, #0x5c3
  42ef38:	mov	w1, #0x3                   	// #3
  42ef3c:	bl	41e6b4 <feof@plt+0x1bce4>
  42ef40:	ldur	w8, [x29, #-28]
  42ef44:	cbnz	w8, 42edbc <feof@plt+0x2c3ec>
  42ef48:	ldr	w8, [x27, #12]
  42ef4c:	mov	w9, #0x18                  	// #24
  42ef50:	mov	x0, x21
  42ef54:	sub	w8, w8, #0x1
  42ef58:	str	w8, [x27, #12]
  42ef5c:	umull	x8, w8, w9
  42ef60:	add	x1, x8, #0x18
  42ef64:	bl	429710 <feof@plt+0x26d40>
  42ef68:	ldr	w8, [x0, #12]
  42ef6c:	mov	x23, x0
  42ef70:	cbz	w8, 42ef80 <feof@plt+0x2c5b0>
  42ef74:	ldrh	w9, [x23, #30]
  42ef78:	and	w9, w9, #0xfffe
  42ef7c:	strh	w9, [x23, #30]
  42ef80:	ldr	x22, [sp, #8]
  42ef84:	ldr	w20, [sp, #4]
  42ef88:	ldr	w12, [sp, #20]
  42ef8c:	cbz	w12, 42edc8 <feof@plt+0x2c3f8>
  42ef90:	ldr	x9, [x24]
  42ef94:	mov	x11, x24
  42ef98:	ldp	x1, x10, [x9, #16]
  42ef9c:	mov	w9, #0x18                  	// #24
  42efa0:	umull	x24, w12, w9
  42efa4:	sub	x9, x10, x1
  42efa8:	cmp	x9, x24
  42efac:	b.cs	42efcc <feof@plt+0x2c5fc>  // b.hs, b.nlast
  42efb0:	mov	x0, x21
  42efb4:	mov	x1, x11
  42efb8:	mov	x2, x24
  42efbc:	bl	42951c <feof@plt+0x26b4c>
  42efc0:	ldr	x8, [x21, #56]
  42efc4:	ldr	x1, [x8, #16]
  42efc8:	ldr	w8, [x23, #12]
  42efcc:	add	x9, x23, #0x18
  42efd0:	cbz	w8, 42f048 <feof@plt+0x2c678>
  42efd4:	mov	w11, wzr
  42efd8:	mov	w10, wzr
  42efdc:	mov	w13, wzr
  42efe0:	mov	w12, #0x18                  	// #24
  42efe4:	b	42f00c <feof@plt+0x2c63c>
  42efe8:	ldr	x15, [x14, #16]
  42efec:	ldr	q0, [x14]
  42eff0:	umaddl	x14, w10, w12, x9
  42eff4:	add	w10, w10, #0x1
  42eff8:	str	x15, [x14, #16]
  42effc:	str	q0, [x14]
  42f000:	add	w11, w11, #0x1
  42f004:	cmp	w11, w8
  42f008:	b.eq	42f04c <feof@plt+0x2c67c>  // b.none
  42f00c:	umaddl	x14, w11, w12, x9
  42f010:	ldrb	w15, [x14, #4]
  42f014:	cmp	w15, #0x26
  42f018:	b.ne	42efe8 <feof@plt+0x2c618>  // b.any
  42f01c:	ldr	x8, [x14, #16]
  42f020:	ldr	q0, [x14]
  42f024:	umaddl	x14, w13, w12, x1
  42f028:	add	w13, w13, #0x1
  42f02c:	str	x8, [x14, #16]
  42f030:	str	q0, [x14]
  42f034:	ldr	w8, [x23, #12]
  42f038:	b	42f000 <feof@plt+0x2c630>
  42f03c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42f040:	add	x2, x2, #0x3fa
  42f044:	b	42edb0 <feof@plt+0x2c3e0>
  42f048:	mov	w10, wzr
  42f04c:	mov	w8, #0x18                  	// #24
  42f050:	umaddl	x0, w10, w8, x9
  42f054:	mov	x2, x24
  42f058:	bl	402390 <memcpy@plt>
  42f05c:	ldrb	w8, [x23, #19]
  42f060:	orr	w8, w8, #0x40
  42f064:	strb	w8, [x23, #19]
  42f068:	b	42edc8 <feof@plt+0x2c3f8>
  42f06c:	and	w8, w8, #0x3
  42f070:	cmp	w8, #0x2
  42f074:	b.ne	42f0b0 <feof@plt+0x2c6e0>  // b.any
  42f078:	mov	x0, x21
  42f07c:	mov	x1, x23
  42f080:	bl	4342cc <feof@plt+0x318fc>
  42f084:	tbnz	w0, #0, 42f0e8 <feof@plt+0x2c718>
  42f088:	b	42f150 <feof@plt+0x2c780>
  42f08c:	mov	w8, w20
  42f090:	lsl	x1, x8, #3
  42f094:	mov	x0, x21
  42f098:	bl	429710 <feof@plt+0x26d40>
  42f09c:	mov	x24, x0
  42f0a0:	mov	x23, xzr
  42f0a4:	b	42e960 <feof@plt+0x2bf90>
  42f0a8:	ldr	x22, [sp, #8]
  42f0ac:	b	42edc4 <feof@plt+0x2c3f4>
  42f0b0:	ldr	w19, [x21, #12]
  42f0b4:	ldr	w8, [x23, #12]
  42f0b8:	cmp	w19, w8
  42f0bc:	b.ne	42f0e8 <feof@plt+0x2c718>  // b.any
  42f0c0:	mov	w20, #0x18                  	// #24
  42f0c4:	cbz	x19, 42f150 <feof@plt+0x2c780>
  42f0c8:	sub	w8, w19, #0x1
  42f0cc:	umaddl	x9, w8, w20, x21
  42f0d0:	umaddl	x8, w8, w20, x23
  42f0d4:	add	x0, x9, #0x18
  42f0d8:	add	x1, x8, #0x18
  42f0dc:	bl	428dcc <feof@plt+0x263fc>
  42f0e0:	sub	x19, x19, #0x1
  42f0e4:	cbnz	w0, 42f0c4 <feof@plt+0x2c6f4>
  42f0e8:	ldr	x0, [sp, #40]
  42f0ec:	ldrh	w8, [x22, #18]
  42f0f0:	mov	w9, #0x23                  	// #35
  42f0f4:	ldr	x5, [x22]
  42f0f8:	ldr	w2, [x0, #48]
  42f0fc:	and	w8, w8, w9
  42f100:	cmp	w8, #0x3
  42f104:	mov	w8, #0xb                   	// #11
  42f108:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  42f10c:	csel	w1, w8, wzr, eq  // eq = none
  42f110:	add	x4, x4, #0xfe6
  42f114:	mov	w3, wzr
  42f118:	bl	41e4bc <feof@plt+0x1baec>
  42f11c:	tbz	w0, #0, 42f150 <feof@plt+0x2c780>
  42f120:	ldrh	w8, [x22, #18]
  42f124:	and	w8, w8, #0x3
  42f128:	cmp	w8, #0x2
  42f12c:	b.ne	42f150 <feof@plt+0x2c780>  // b.any
  42f130:	ldr	x8, [x22, #24]
  42f134:	ldr	x0, [sp, #40]
  42f138:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  42f13c:	add	x4, x4, #0xff5
  42f140:	ldr	w2, [x8, #8]
  42f144:	mov	w1, #0x5                   	// #5
  42f148:	mov	w3, wzr
  42f14c:	bl	41e2c4 <feof@plt+0x1b8f4>
  42f150:	ldrh	w8, [x22, #18]
  42f154:	mov	w9, #0xffffff3c            	// #-196
  42f158:	str	xzr, [x22, #24]
  42f15c:	and	w19, w8, w9
  42f160:	strh	w19, [x22, #18]
  42f164:	ldr	x20, [x22]
  42f168:	and	w8, w19, #0xfffffffc
  42f16c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  42f170:	orr	w21, w8, #0x2
  42f174:	add	x1, x1, #0x25
  42f178:	mov	w2, #0x7                   	// #7
  42f17c:	mov	x0, x20
  42f180:	strh	w21, [x22, #18]
  42f184:	str	x23, [x22, #24]
  42f188:	bl	4026b0 <strncmp@plt>
  42f18c:	cbz	w0, 42f1bc <feof@plt+0x2c7ec>
  42f190:	and	w8, w21, #0xfffffeff
  42f194:	mov	w0, #0x1                   	// #1
  42f198:	strh	w8, [x22, #18]
  42f19c:	ldp	x20, x19, [sp, #192]
  42f1a0:	ldp	x22, x21, [sp, #176]
  42f1a4:	ldp	x24, x23, [sp, #160]
  42f1a8:	ldp	x26, x25, [sp, #144]
  42f1ac:	ldp	x28, x27, [sp, #128]
  42f1b0:	ldp	x29, x30, [sp, #112]
  42f1b4:	add	sp, sp, #0xd0
  42f1b8:	ret
  42f1bc:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  42f1c0:	add	x1, x1, #0x2d
  42f1c4:	mov	x0, x20
  42f1c8:	bl	402820 <strcmp@plt>
  42f1cc:	cbz	w0, 42f190 <feof@plt+0x2c7c0>
  42f1d0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  42f1d4:	add	x1, x1, #0x42
  42f1d8:	mov	x0, x20
  42f1dc:	bl	402820 <strcmp@plt>
  42f1e0:	cbz	w0, 42f190 <feof@plt+0x2c7c0>
  42f1e4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  42f1e8:	add	x1, x1, #0x56
  42f1ec:	mov	x0, x20
  42f1f0:	bl	402820 <strcmp@plt>
  42f1f4:	cbz	w0, 42f190 <feof@plt+0x2c7c0>
  42f1f8:	mov	w9, #0xfffffc02            	// #-1022
  42f1fc:	and	w8, w19, #0x3fc
  42f200:	and	w9, w21, w9
  42f204:	orr	w8, w8, w9
  42f208:	orr	w21, w8, #0x20
  42f20c:	strh	w21, [x22, #18]
  42f210:	b	42f190 <feof@plt+0x2c7c0>
  42f214:	ldr	x8, [x1, #24]
  42f218:	add	w9, w2, #0x1
  42f21c:	strb	w9, [x8, #18]
  42f220:	ret
  42f224:	stp	x29, x30, [sp, #-48]!
  42f228:	stp	x20, x19, [sp, #32]
  42f22c:	ldrh	w8, [x1, #18]
  42f230:	mov	x19, x1
  42f234:	mov	x20, x0
  42f238:	str	x21, [sp, #16]
  42f23c:	orr	w9, w8, #0x80
  42f240:	ands	w8, w8, #0x3
  42f244:	mov	x29, sp
  42f248:	strh	w9, [x1, #18]
  42f24c:	b.eq	42f2a8 <feof@plt+0x2c8d8>  // b.none
  42f250:	cmp	w8, #0x3
  42f254:	b.eq	42f284 <feof@plt+0x2c8b4>  // b.none
  42f258:	cmp	w8, #0x2
  42f25c:	b.ne	42f2c0 <feof@plt+0x2c8f0>  // b.any
  42f260:	ldr	x21, [x19, #24]
  42f264:	ldrb	w8, [x21, #18]
  42f268:	cbz	w8, 42f284 <feof@plt+0x2c8b4>
  42f26c:	ldr	x9, [x20, #1048]
  42f270:	sub	w2, w8, #0x1
  42f274:	mov	x0, x20
  42f278:	mov	x1, x21
  42f27c:	blr	x9
  42f280:	strb	wzr, [x21, #18]
  42f284:	ldr	x3, [x20, #1008]
  42f288:	cbz	x3, 42f2b0 <feof@plt+0x2c8e0>
  42f28c:	ldr	w1, [x20, #48]
  42f290:	mov	x0, x20
  42f294:	mov	x2, x19
  42f298:	ldp	x20, x19, [sp, #32]
  42f29c:	ldr	x21, [sp, #16]
  42f2a0:	ldp	x29, x30, [sp], #48
  42f2a4:	br	x3
  42f2a8:	ldr	x3, [x20, #1016]
  42f2ac:	cbnz	x3, 42f28c <feof@plt+0x2c8bc>
  42f2b0:	ldp	x20, x19, [sp, #32]
  42f2b4:	ldr	x21, [sp, #16]
  42f2b8:	ldp	x29, x30, [sp], #48
  42f2bc:	ret
  42f2c0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  42f2c4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42f2c8:	add	x0, x0, #0xdce
  42f2cc:	add	x2, x2, #0x6d
  42f2d0:	mov	w1, #0xe0b                 	// #3595
  42f2d4:	bl	404ac4 <feof@plt+0x20f4>
  42f2d8:	stp	x29, x30, [sp, #-80]!
  42f2dc:	stp	x26, x25, [sp, #16]
  42f2e0:	stp	x24, x23, [sp, #32]
  42f2e4:	stp	x22, x21, [sp, #48]
  42f2e8:	stp	x20, x19, [sp, #64]
  42f2ec:	ldr	x20, [x1, #24]
  42f2f0:	ldr	w9, [x1, #8]
  42f2f4:	mov	x21, x1
  42f2f8:	mov	x19, x0
  42f2fc:	ldrb	w8, [x20, #19]
  42f300:	add	w9, w9, w9, lsl #2
  42f304:	lsl	w10, w9, #1
  42f308:	mov	x29, sp
  42f30c:	tbnz	w8, #2, 42f318 <feof@plt+0x2c948>
  42f310:	add	w23, w10, #0x2
  42f314:	b	42f398 <feof@plt+0x2c9c8>
  42f318:	ldrh	w9, [x20, #16]
  42f31c:	add	w23, w10, #0x6
  42f320:	cbz	x9, 42f398 <feof@plt+0x2c9c8>
  42f324:	ldr	x10, [x20]
  42f328:	cmp	w9, #0x1
  42f32c:	b.ne	42f338 <feof@plt+0x2c968>  // b.any
  42f330:	mov	x11, xzr
  42f334:	b	42f37c <feof@plt+0x2c9ac>
  42f338:	and	x11, x9, #0xfffe
  42f33c:	mov	w12, wzr
  42f340:	add	x13, x10, #0x8
  42f344:	mov	x14, x11
  42f348:	ldp	x15, x16, [x13, #-8]
  42f34c:	subs	x14, x14, #0x2
  42f350:	add	x13, x13, #0x10
  42f354:	ldr	w15, [x15, #8]
  42f358:	ldr	w16, [x16, #8]
  42f35c:	add	w15, w23, w15
  42f360:	add	w12, w12, w16
  42f364:	add	w23, w15, #0x1
  42f368:	add	w12, w12, #0x1
  42f36c:	b.ne	42f348 <feof@plt+0x2c978>  // b.any
  42f370:	cmp	x11, x9
  42f374:	add	w23, w12, w23
  42f378:	b.eq	42f398 <feof@plt+0x2c9c8>  // b.none
  42f37c:	ldr	x12, [x10, x11, lsl #3]
  42f380:	add	x11, x11, #0x1
  42f384:	cmp	x11, x9
  42f388:	ldr	w12, [x12, #8]
  42f38c:	add	w12, w23, w12
  42f390:	add	w23, w12, #0x1
  42f394:	b.cc	42f37c <feof@plt+0x2c9ac>  // b.lo, b.ul, b.last
  42f398:	ldrb	w9, [x19, #1160]
  42f39c:	cbz	w9, 42f4b4 <feof@plt+0x2cae4>
  42f3a0:	mov	x0, x20
  42f3a4:	bl	433e20 <feof@plt+0x31450>
  42f3a8:	add	w23, w23, w0
  42f3ac:	ldr	w8, [x19, #512]
  42f3b0:	ldr	x0, [x19, #504]
  42f3b4:	cmp	w23, w8
  42f3b8:	b.ls	42f3cc <feof@plt+0x2c9fc>  // b.plast
  42f3bc:	mov	w1, w23
  42f3c0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  42f3c4:	str	x0, [x19, #504]
  42f3c8:	str	w23, [x19, #512]
  42f3cc:	mov	x1, x21
  42f3d0:	bl	4287c4 <feof@plt+0x25df4>
  42f3d4:	ldrb	w8, [x20, #19]
  42f3d8:	mov	x21, x0
  42f3dc:	tbz	w8, #2, 42f474 <feof@plt+0x2caa4>
  42f3e0:	mov	w8, #0x28                  	// #40
  42f3e4:	strb	w8, [x21], #1
  42f3e8:	ldrh	w8, [x20, #16]
  42f3ec:	cbz	w8, 42f46c <feof@plt+0x2ca9c>
  42f3f0:	mov	x22, xzr
  42f3f4:	mov	w23, #0x2c                  	// #44
  42f3f8:	mov	w24, #0x2e2e                	// #11822
  42f3fc:	mov	w25, #0x2e                  	// #46
  42f400:	b	42f414 <feof@plt+0x2ca44>
  42f404:	strb	w23, [x21], #1
  42f408:	ldrh	w8, [x20, #16]
  42f40c:	cmp	x22, x8
  42f410:	b.cs	42f46c <feof@plt+0x2ca9c>  // b.hs, b.nlast
  42f414:	ldr	x9, [x20]
  42f418:	ldr	x26, [x9, x22, lsl #3]
  42f41c:	ldr	x9, [x19, #1272]
  42f420:	cmp	x26, x9
  42f424:	b.eq	42f444 <feof@plt+0x2ca74>  // b.none
  42f428:	ldr	x1, [x26]
  42f42c:	ldr	w2, [x26, #8]
  42f430:	mov	x0, x21
  42f434:	bl	402390 <memcpy@plt>
  42f438:	ldr	w9, [x26, #8]
  42f43c:	ldrh	w8, [x20, #16]
  42f440:	add	x21, x21, x9
  42f444:	add	x22, x22, #0x1
  42f448:	cmp	x22, w8, uxth
  42f44c:	b.cc	42f404 <feof@plt+0x2ca34>  // b.lo, b.ul, b.last
  42f450:	ldrb	w8, [x20, #19]
  42f454:	tbz	w8, #3, 42f408 <feof@plt+0x2ca38>
  42f458:	add	x8, x21, #0x3
  42f45c:	strh	w24, [x21]
  42f460:	strb	w25, [x21, #2]
  42f464:	mov	x21, x8
  42f468:	b	42f408 <feof@plt+0x2ca38>
  42f46c:	mov	w8, #0x29                  	// #41
  42f470:	strb	w8, [x21], #1
  42f474:	mov	w8, #0x20                  	// #32
  42f478:	strb	w8, [x21], #1
  42f47c:	ldrb	w8, [x19, #1160]
  42f480:	cbz	w8, 42f51c <feof@plt+0x2cb4c>
  42f484:	mov	x0, x20
  42f488:	mov	x1, x21
  42f48c:	bl	433e84 <feof@plt+0x314b4>
  42f490:	mov	x21, x0
  42f494:	strb	wzr, [x21]
  42f498:	ldr	x0, [x19, #504]
  42f49c:	ldp	x20, x19, [sp, #64]
  42f4a0:	ldp	x22, x21, [sp, #48]
  42f4a4:	ldp	x24, x23, [sp, #32]
  42f4a8:	ldp	x26, x25, [sp, #16]
  42f4ac:	ldp	x29, x30, [sp], #80
  42f4b0:	ret
  42f4b4:	ldr	w9, [x20, #12]
  42f4b8:	tbnz	w8, #6, 42f5d4 <feof@plt+0x2cc04>
  42f4bc:	cbz	w9, 42f3ac <feof@plt+0x2c9dc>
  42f4c0:	mov	w24, w9
  42f4c4:	add	x22, x20, #0x18
  42f4c8:	b	42f504 <feof@plt+0x2cb34>
  42f4cc:	mov	x0, x22
  42f4d0:	bl	42877c <feof@plt+0x25dac>
  42f4d4:	ldrh	w8, [x22, #6]
  42f4d8:	add	w9, w0, w23
  42f4dc:	add	x22, x22, #0x18
  42f4e0:	ubfx	w10, w8, #2, #1
  42f4e4:	add	w9, w9, w10
  42f4e8:	tst	w8, #0x8
  42f4ec:	add	w10, w9, #0x3
  42f4f0:	and	w8, w8, #0x1
  42f4f4:	csel	w9, w9, w10, eq  // eq = none
  42f4f8:	subs	x24, x24, #0x1
  42f4fc:	add	w23, w9, w8
  42f500:	b.eq	42f3ac <feof@plt+0x2c9dc>  // b.none
  42f504:	ldrb	w8, [x22, #4]
  42f508:	cmp	w8, #0x50
  42f50c:	b.ne	42f4cc <feof@plt+0x2cafc>  // b.any
  42f510:	ldr	x8, [x22, #16]
  42f514:	ldr	w0, [x8, #8]
  42f518:	b	42f4d4 <feof@plt+0x2cb04>
  42f51c:	ldr	w8, [x20, #12]
  42f520:	cbz	w8, 42f494 <feof@plt+0x2cac4>
  42f524:	ldrb	w9, [x20, #19]
  42f528:	tbnz	w9, #6, 42f600 <feof@plt+0x2cc30>
  42f52c:	mov	w22, w8
  42f530:	add	x20, x20, #0x18
  42f534:	mov	w23, #0x2320                	// #8992
  42f538:	mov	w24, #0x23                  	// #35
  42f53c:	mov	w25, #0x20                  	// #32
  42f540:	b	42f550 <feof@plt+0x2cb80>
  42f544:	subs	x22, x22, #0x1
  42f548:	add	x20, x20, #0x18
  42f54c:	b.eq	42f494 <feof@plt+0x2cac4>  // b.none
  42f550:	ldrh	w8, [x20, #6]
  42f554:	tbz	w8, #0, 42f560 <feof@plt+0x2cb90>
  42f558:	strb	w25, [x21], #1
  42f55c:	ldrh	w8, [x20, #6]
  42f560:	tbz	w8, #2, 42f568 <feof@plt+0x2cb98>
  42f564:	strb	w24, [x21], #1
  42f568:	ldrb	w8, [x20, #4]
  42f56c:	cmp	w8, #0x50
  42f570:	b.ne	42f5a0 <feof@plt+0x2cbd0>  // b.any
  42f574:	ldr	x8, [x20, #16]
  42f578:	mov	x0, x21
  42f57c:	ldr	x1, [x8]
  42f580:	ldr	w2, [x8, #8]
  42f584:	bl	402390 <memcpy@plt>
  42f588:	ldr	x8, [x20, #16]
  42f58c:	ldr	w8, [x8, #8]
  42f590:	add	x21, x21, x8
  42f594:	ldrb	w8, [x20, #6]
  42f598:	tbz	w8, #3, 42f544 <feof@plt+0x2cb74>
  42f59c:	b	42f5c0 <feof@plt+0x2cbf0>
  42f5a0:	mov	w3, #0x1                   	// #1
  42f5a4:	mov	x0, x19
  42f5a8:	mov	x1, x20
  42f5ac:	mov	x2, x21
  42f5b0:	bl	428950 <feof@plt+0x25f80>
  42f5b4:	mov	x21, x0
  42f5b8:	ldrb	w8, [x20, #6]
  42f5bc:	tbz	w8, #3, 42f544 <feof@plt+0x2cb74>
  42f5c0:	add	x8, x21, #0x3
  42f5c4:	strh	w23, [x21]
  42f5c8:	strb	w24, [x21, #2]
  42f5cc:	mov	x21, x8
  42f5d0:	b	42f544 <feof@plt+0x2cb74>
  42f5d4:	mov	w8, #0x18                  	// #24
  42f5d8:	cbz	x9, 42f3ac <feof@plt+0x2c9dc>
  42f5dc:	sub	w10, w9, #0x1
  42f5e0:	umaddl	x10, w10, w8, x20
  42f5e4:	ldrb	w10, [x10, #28]
  42f5e8:	sub	x9, x9, #0x1
  42f5ec:	cmp	w10, #0x26
  42f5f0:	b.eq	42f5d8 <feof@plt+0x2cc08>  // b.none
  42f5f4:	add	w9, w9, #0x1
  42f5f8:	cbnz	w9, 42f4c0 <feof@plt+0x2caf0>
  42f5fc:	b	42f3ac <feof@plt+0x2c9dc>
  42f600:	mov	w9, #0x18                  	// #24
  42f604:	cbz	x8, 42f494 <feof@plt+0x2cac4>
  42f608:	sub	w10, w8, #0x1
  42f60c:	umaddl	x10, w10, w9, x20
  42f610:	ldrb	w10, [x10, #28]
  42f614:	sub	x8, x8, #0x1
  42f618:	cmp	w10, #0x26
  42f61c:	b.eq	42f604 <feof@plt+0x2cc34>  // b.none
  42f620:	cmn	w8, #0x1
  42f624:	b.eq	42f494 <feof@plt+0x2cac4>  // b.none
  42f628:	add	x8, x8, #0x1
  42f62c:	b	42f52c <feof@plt+0x2cb5c>
  42f630:	sub	sp, sp, #0x140
  42f634:	mov	w8, #0x1                   	// #1
  42f638:	stp	x29, x30, [sp, #224]
  42f63c:	stp	x28, x27, [sp, #240]
  42f640:	stp	x26, x25, [sp, #256]
  42f644:	stp	x24, x23, [sp, #272]
  42f648:	stp	x22, x21, [sp, #288]
  42f64c:	stp	x20, x19, [sp, #304]
  42f650:	strb	wzr, [x0, #440]
  42f654:	strb	wzr, [x0, #19]
  42f658:	strb	w8, [x0, #192]
  42f65c:	ldrh	w8, [x1, #18]
  42f660:	mov	w26, w3
  42f664:	mov	x27, x1
  42f668:	mov	x19, x0
  42f66c:	and	w9, w8, #0x3
  42f670:	cmp	w9, #0x2
  42f674:	add	x29, sp, #0xe0
  42f678:	b.ne	42f6ec <feof@plt+0x2cd1c>  // b.any
  42f67c:	ldr	x25, [x27, #24]
  42f680:	stur	xzr, [x29, #-48]
  42f684:	str	x2, [sp, #72]
  42f688:	ldrb	w9, [x25, #19]
  42f68c:	tbz	w9, #2, 43080c <feof@plt+0x2de3c>
  42f690:	stur	wzr, [x29, #-52]
  42f694:	ldrb	w8, [x19, #24]
  42f698:	ldr	w9, [x19, #500]
  42f69c:	mov	x0, xzr
  42f6a0:	mov	w10, #0x1                   	// #1
  42f6a4:	add	w8, w8, #0x1
  42f6a8:	add	w9, w9, #0x1
  42f6ac:	strb	w8, [x19, #24]
  42f6b0:	str	w9, [x19, #500]
  42f6b4:	strb	w10, [x19, #25]
  42f6b8:	mov	x20, x0
  42f6bc:	mov	x0, x19
  42f6c0:	mov	x1, xzr
  42f6c4:	bl	42db3c <feof@plt+0x2b16c>
  42f6c8:	ldrb	w8, [x0, #4]
  42f6cc:	cmp	w8, #0x53
  42f6d0:	b.ne	42f74c <feof@plt+0x2cd7c>  // b.any
  42f6d4:	cbz	x20, 42f6b8 <feof@plt+0x2cce8>
  42f6d8:	ldrb	w8, [x20, #6]
  42f6dc:	tbnz	w8, #0, 42f6bc <feof@plt+0x2ccec>
  42f6e0:	ldr	x8, [x0, #8]
  42f6e4:	cbnz	x8, 42f6bc <feof@plt+0x2ccec>
  42f6e8:	b	42f6b8 <feof@plt+0x2cce8>
  42f6ec:	ldr	x8, [x19, #184]
  42f6f0:	strb	wzr, [x19, #192]
  42f6f4:	ldrh	w9, [x8, #18]
  42f6f8:	and	w9, w9, #0x3
  42f6fc:	cmp	w9, #0x2
  42f700:	b.ne	42f71c <feof@plt+0x2cd4c>  // b.any
  42f704:	ldr	x8, [x8, #24]
  42f708:	ldrb	w8, [x8, #19]
  42f70c:	tbz	w8, #2, 42f71c <feof@plt+0x2cd4c>
  42f710:	ldrb	w8, [x19, #1157]
  42f714:	mov	w3, w26
  42f718:	cbnz	w8, 42f720 <feof@plt+0x2cd50>
  42f71c:	ldr	w3, [x19, #176]
  42f720:	mov	x0, x19
  42f724:	mov	x1, x27
  42f728:	mov	w2, w26
  42f72c:	ldp	x20, x19, [sp, #304]
  42f730:	ldp	x22, x21, [sp, #288]
  42f734:	ldp	x24, x23, [sp, #272]
  42f738:	ldp	x26, x25, [sp, #256]
  42f73c:	ldp	x28, x27, [sp, #240]
  42f740:	ldp	x29, x30, [sp, #224]
  42f744:	add	sp, sp, #0x140
  42f748:	b	430e14 <feof@plt+0x2e444>
  42f74c:	cmp	w8, #0x14
  42f750:	b.eq	42f7e4 <feof@plt+0x2ce14>  // b.none
  42f754:	cmp	w8, #0x16
  42f758:	b.ne	42f768 <feof@plt+0x2cd98>  // b.any
  42f75c:	add	x8, x19, #0x2b0
  42f760:	cmp	x0, x8
  42f764:	b.ne	42f7dc <feof@plt+0x2ce0c>  // b.any
  42f768:	mov	w1, #0x1                   	// #1
  42f76c:	mov	x0, x19
  42f770:	bl	42e2c0 <feof@plt+0x2b8f0>
  42f774:	cbz	x20, 42f7dc <feof@plt+0x2ce0c>
  42f778:	ldr	x8, [x19, #136]
  42f77c:	ldr	w9, [x8, #48]
  42f780:	cmp	w9, #0x2
  42f784:	add	x9, x8, #0x28
  42f788:	b.ne	42f790 <feof@plt+0x2cdc0>  // b.any
  42f78c:	ldr	x9, [x9]
  42f790:	ldr	x0, [x8]
  42f794:	ldr	x21, [x9]
  42f798:	cbnz	x0, 42f7bc <feof@plt+0x2cdec>
  42f79c:	mov	w0, #0x38                  	// #56
  42f7a0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42f7a4:	movi	v0.2d, #0x0
  42f7a8:	str	xzr, [x0, #48]
  42f7ac:	stp	q0, q0, [x0, #16]
  42f7b0:	ldr	x8, [x19, #136]
  42f7b4:	stp	xzr, x8, [x0]
  42f7b8:	str	x0, [x8]
  42f7bc:	mov	x10, xzr
  42f7c0:	mov	w8, #0x1                   	// #1
  42f7c4:	add	x9, x20, #0x18
  42f7c8:	str	x0, [x19, #136]
  42f7cc:	stp	xzr, x21, [x0, #32]
  42f7d0:	str	w8, [x0, #48]
  42f7d4:	stp	x20, x9, [x0, #16]
  42f7d8:	b	42f804 <feof@plt+0x2ce34>
  42f7dc:	mov	x10, xzr
  42f7e0:	b	42f804 <feof@plt+0x2ce34>
  42f7e4:	mov	w8, #0x2                   	// #2
  42f7e8:	sub	x2, x29, #0x30
  42f7ec:	sub	x3, x29, #0x34
  42f7f0:	mov	x0, x19
  42f7f4:	mov	x1, x27
  42f7f8:	strb	w8, [x19, #25]
  42f7fc:	bl	431090 <feof@plt+0x2e6c0>
  42f800:	mov	x10, x0
  42f804:	ldr	w8, [x19, #500]
  42f808:	ldrb	w9, [x19, #24]
  42f80c:	strb	wzr, [x19, #25]
  42f810:	sub	w8, w8, #0x1
  42f814:	sub	w9, w9, #0x1
  42f818:	str	w8, [x19, #500]
  42f81c:	strb	w9, [x19, #24]
  42f820:	cbz	x10, 42fc04 <feof@plt+0x2d234>
  42f824:	ldrh	w8, [x25, #16]
  42f828:	str	x10, [sp, #40]
  42f82c:	cbz	w8, 4307a8 <feof@plt+0x2ddd8>
  42f830:	ldr	x8, [sp, #40]
  42f834:	str	x25, [sp, #48]
  42f838:	str	x27, [sp, #64]
  42f83c:	str	w26, [sp, #28]
  42f840:	ldr	x28, [x8, #8]
  42f844:	stur	xzr, [x29, #-16]
  42f848:	ldrb	w8, [x25, #19]
  42f84c:	ldr	w24, [x25, #12]
  42f850:	str	x28, [sp, #112]
  42f854:	tbnz	w8, #6, 430bdc <feof@plt+0x2e20c>
  42f858:	cmp	w24, #0x0
  42f85c:	cset	w8, eq  // eq = none
  42f860:	cbz	w24, 42fc50 <feof@plt+0x2d280>
  42f864:	str	w8, [sp, #100]
  42f868:	mov	x21, xzr
  42f86c:	mov	w8, w24
  42f870:	add	x11, x19, #0x40
  42f874:	mov	w9, #0x18                  	// #24
  42f878:	mov	w23, #0x30                  	// #48
  42f87c:	mov	w20, #0x5c                  	// #92
  42f880:	mov	w10, w24
  42f884:	stur	x8, [x29, #-96]
  42f888:	stur	x11, [x29, #-80]
  42f88c:	b	42f8b8 <feof@plt+0x2cee8>
  42f890:	madd	x8, x22, x23, x28
  42f894:	ldr	w8, [x8, #24]
  42f898:	add	w8, w24, w8
  42f89c:	add	w24, w8, #0x1
  42f8a0:	ldur	w10, [x29, #-88]
  42f8a4:	mov	w9, #0x18                  	// #24
  42f8a8:	ldur	x8, [x29, #-96]
  42f8ac:	add	x21, x21, #0x1
  42f8b0:	cmp	x21, x8
  42f8b4:	b.eq	42fc48 <feof@plt+0x2d278>  // b.none
  42f8b8:	madd	x8, x21, x9, x25
  42f8bc:	ldrb	w8, [x8, #28]
  42f8c0:	cmp	w8, #0x50
  42f8c4:	b.ne	42f8a8 <feof@plt+0x2ced8>  // b.any
  42f8c8:	madd	x8, x21, x9, x25
  42f8cc:	ldr	w9, [x8, #32]
  42f8d0:	ldrh	w8, [x8, #30]
  42f8d4:	mov	w12, #0x18                  	// #24
  42f8d8:	add	w10, w10, #0x2
  42f8dc:	sub	w22, w9, #0x1
  42f8e0:	umaddl	x9, w22, w23, x28
  42f8e4:	stur	w10, [x29, #-88]
  42f8e8:	stur	x9, [x29, #-64]
  42f8ec:	tbnz	w8, #2, 42f92c <feof@plt+0x2cf5c>
  42f8f0:	tbnz	w8, #3, 42f890 <feof@plt+0x2cec0>
  42f8f4:	cbz	x21, 42f904 <feof@plt+0x2cf34>
  42f8f8:	madd	x8, x21, x12, x25
  42f8fc:	ldrb	w8, [x8, #6]
  42f900:	tbnz	w8, #3, 42f890 <feof@plt+0x2cec0>
  42f904:	madd	x8, x22, x23, x28
  42f908:	ldr	x8, [x8, #8]
  42f90c:	cbnz	x8, 42f920 <feof@plt+0x2cf50>
  42f910:	ldur	x1, [x29, #-64]
  42f914:	mov	x0, x19
  42f918:	bl	43152c <feof@plt+0x2eb5c>
  42f91c:	ldur	x11, [x29, #-80]
  42f920:	madd	x8, x22, x23, x28
  42f924:	ldr	w8, [x8, #28]
  42f928:	b	42f898 <feof@plt+0x2cec8>
  42f92c:	madd	x9, x22, x23, x28
  42f930:	ldr	x8, [x9, #16]!
  42f934:	add	w24, w24, #0x2
  42f938:	cbnz	x8, 42f8a0 <feof@plt+0x2ced0>
  42f93c:	ldr	x8, [x11]
  42f940:	stur	x9, [x29, #-104]
  42f944:	ldp	x27, x9, [x8, #16]
  42f948:	sub	x8, x9, x27
  42f94c:	cmp	x8, #0x2
  42f950:	b.hi	42f96c <feof@plt+0x2cf9c>  // b.pmore
  42f954:	ldur	x1, [x29, #-80]
  42f958:	mov	w2, #0x3                   	// #3
  42f95c:	mov	x0, x19
  42f960:	bl	42951c <feof@plt+0x26b4c>
  42f964:	ldr	x8, [x19, #64]
  42f968:	ldr	x27, [x8, #16]
  42f96c:	mov	w8, #0x22                  	// #34
  42f970:	strb	w8, [x27], #1
  42f974:	madd	x9, x22, x23, x28
  42f978:	ldr	w8, [x9, #24]!
  42f97c:	stur	x9, [x29, #-72]
  42f980:	cbz	w8, 42fba4 <feof@plt+0x2d1d4>
  42f984:	str	x24, [sp, #104]
  42f988:	mov	x24, xzr
  42f98c:	mov	w26, wzr
  42f990:	mov	x25, xzr
  42f994:	b	42f9c0 <feof@plt+0x2cff0>
  42f998:	ldr	x8, [x28, #16]
  42f99c:	mov	x25, xzr
  42f9a0:	ldrb	w8, [x8]
  42f9a4:	cmp	w8, #0x5c
  42f9a8:	csinc	w26, wzr, w26, ne  // ne = any
  42f9ac:	ldur	x8, [x29, #-72]
  42f9b0:	add	x24, x24, #0x1
  42f9b4:	ldr	w8, [x8]
  42f9b8:	cmp	x24, x8
  42f9bc:	b.cs	42fb78 <feof@plt+0x2d1a8>  // b.hs, b.nlast
  42f9c0:	ldur	x8, [x29, #-64]
  42f9c4:	ldr	x8, [x8]
  42f9c8:	ldr	x28, [x8, x24, lsl #3]
  42f9cc:	ldrb	w0, [x28, #4]
  42f9d0:	sub	w8, w0, #0x38
  42f9d4:	cmp	w8, #0x1b
  42f9d8:	b.hi	42fb40 <feof@plt+0x2d170>  // b.pmore
  42f9dc:	mov	w9, #0x1                   	// #1
  42f9e0:	lsl	w9, w9, w8
  42f9e4:	mov	w10, #0x7df                 	// #2015
  42f9e8:	tst	w9, w10
  42f9ec:	b.eq	42fb1c <feof@plt+0x2d14c>  // b.none
  42f9f0:	mov	x0, x28
  42f9f4:	bl	42877c <feof@plt+0x25dac>
  42f9f8:	mov	w8, w0
  42f9fc:	ldur	x1, [x29, #-80]
  42fa00:	lsl	x8, x8, #2
  42fa04:	mov	w22, #0x1                   	// #1
  42fa08:	ldr	x9, [x1]
  42fa0c:	add	x23, x8, #0x3
  42fa10:	ldr	x10, [x9, #24]
  42fa14:	sub	x8, x10, x27
  42fa18:	cmp	x8, x23
  42fa1c:	b.cs	42fa44 <feof@plt+0x2d074>  // b.hs, b.nlast
  42fa20:	ldr	x8, [x9, #16]
  42fa24:	mov	x0, x19
  42fa28:	mov	x2, x23
  42fa2c:	sub	x27, x27, x8
  42fa30:	bl	42951c <feof@plt+0x26b4c>
  42fa34:	ldr	x8, [x19, #64]
  42fa38:	ldr	x8, [x8, #16]
  42fa3c:	add	x27, x8, x27
  42fa40:	b	42fa48 <feof@plt+0x2d078>
  42fa44:	ldr	x8, [x9, #16]
  42fa48:	sub	x9, x27, #0x1
  42fa4c:	cmp	x9, x8
  42fa50:	b.eq	42fa6c <feof@plt+0x2d09c>  // b.none
  42fa54:	cmp	x25, #0x0
  42fa58:	csel	x8, x28, x25, eq  // eq = none
  42fa5c:	ldrb	w8, [x8, #6]
  42fa60:	tbz	w8, #0, 42fa6c <feof@plt+0x2d09c>
  42fa64:	mov	w8, #0x20                  	// #32
  42fa68:	strb	w8, [x27], #1
  42fa6c:	cbz	w22, 42fadc <feof@plt+0x2d10c>
  42fa70:	mov	x0, x19
  42fa74:	mov	x1, x23
  42fa78:	bl	42939c <feof@plt+0x269cc>
  42fa7c:	ldr	x23, [x0, #16]
  42fa80:	mov	x25, x0
  42fa84:	mov	w3, #0x1                   	// #1
  42fa88:	mov	x0, x19
  42fa8c:	mov	x1, x28
  42fa90:	mov	x2, x23
  42fa94:	bl	428950 <feof@plt+0x25f80>
  42fa98:	cmp	w0, w23
  42fa9c:	b.eq	42faf8 <feof@plt+0x2d128>  // b.none
  42faa0:	sub	w8, w23, w0
  42faa4:	b	42fab8 <feof@plt+0x2d0e8>
  42faa8:	strb	w20, [x27], #1
  42faac:	adds	w8, w8, #0x1
  42fab0:	strb	w9, [x27], #1
  42fab4:	b.cs	42faf8 <feof@plt+0x2d128>  // b.hs, b.nlast
  42fab8:	ldrb	w9, [x23], #1
  42fabc:	cmp	w9, #0x5c
  42fac0:	b.eq	42faa8 <feof@plt+0x2d0d8>  // b.none
  42fac4:	cmp	w9, #0x22
  42fac8:	b.eq	42faa8 <feof@plt+0x2d0d8>  // b.none
  42facc:	cmp	w9, #0xa
  42fad0:	b.ne	42faac <feof@plt+0x2d0dc>  // b.any
  42fad4:	mov	w9, #0x6e                  	// #110
  42fad8:	b	42faa8 <feof@plt+0x2d0d8>
  42fadc:	mov	w3, #0x1                   	// #1
  42fae0:	mov	x0, x19
  42fae4:	mov	x1, x28
  42fae8:	mov	x2, x27
  42faec:	bl	428950 <feof@plt+0x25f80>
  42faf0:	mov	x27, x0
  42faf4:	b	42fb04 <feof@plt+0x2d134>
  42faf8:	mov	x0, x19
  42fafc:	mov	x1, x25
  42fb00:	bl	42937c <feof@plt+0x269ac>
  42fb04:	ldrb	w8, [x28, #4]
  42fb08:	cmp	w8, #0x3d
  42fb0c:	b.eq	42f998 <feof@plt+0x2cfc8>  // b.none
  42fb10:	mov	x25, xzr
  42fb14:	mov	w26, wzr
  42fb18:	b	42f9ac <feof@plt+0x2cfdc>
  42fb1c:	cmp	w8, #0x1b
  42fb20:	b.ne	42fb40 <feof@plt+0x2d170>  // b.any
  42fb24:	cbz	x25, 42fb70 <feof@plt+0x2d1a0>
  42fb28:	ldrb	w8, [x25, #6]
  42fb2c:	tbnz	w8, #0, 42f9ac <feof@plt+0x2cfdc>
  42fb30:	ldr	x8, [x28, #8]
  42fb34:	cbnz	x8, 42f9ac <feof@plt+0x2cfdc>
  42fb38:	mov	x25, xzr
  42fb3c:	b	42f9ac <feof@plt+0x2cfdc>
  42fb40:	bl	41ef8c <feof@plt+0x1c5bc>
  42fb44:	tbnz	w0, #0, 42f9f0 <feof@plt+0x2d020>
  42fb48:	ldrb	w0, [x28, #4]
  42fb4c:	bl	41ef9c <feof@plt+0x1c5cc>
  42fb50:	mov	w23, w0
  42fb54:	mov	x0, x28
  42fb58:	bl	42877c <feof@plt+0x25dac>
  42fb5c:	mov	w8, w0
  42fb60:	tbnz	w23, #0, 42f9fc <feof@plt+0x2d02c>
  42fb64:	ldur	x1, [x29, #-80]
  42fb68:	mov	w22, wzr
  42fb6c:	b	42fa08 <feof@plt+0x2d038>
  42fb70:	ldr	x25, [x28, #8]
  42fb74:	b	42f9ac <feof@plt+0x2cfdc>
  42fb78:	ldr	x25, [sp, #48]
  42fb7c:	ldr	x24, [sp, #104]
  42fb80:	tbz	w26, #0, 42fb9c <feof@plt+0x2d1cc>
  42fb84:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42fb88:	mov	x0, x19
  42fb8c:	mov	w1, wzr
  42fb90:	add	x2, x2, #0x264
  42fb94:	bl	41de04 <feof@plt+0x1b434>
  42fb98:	sub	x27, x27, #0x1
  42fb9c:	ldr	w26, [sp, #28]
  42fba0:	ldr	x28, [sp, #112]
  42fba4:	mov	x8, x27
  42fba8:	mov	w9, #0x22                  	// #34
  42fbac:	strb	w9, [x8], #2
  42fbb0:	ldr	x9, [x19, #64]
  42fbb4:	mov	x0, x19
  42fbb8:	ldr	x22, [x9, #16]
  42fbbc:	str	x8, [x9, #16]
  42fbc0:	sub	x8, x27, x22
  42fbc4:	add	x23, x8, #0x1
  42fbc8:	bl	425498 <feof@plt+0x22ac8>
  42fbcc:	mov	w8, #0x3e                  	// #62
  42fbd0:	strb	wzr, [x22, w23, uxtw]
  42fbd4:	strb	w8, [x0, #4]
  42fbd8:	ldur	x8, [x29, #-104]
  42fbdc:	ldr	x27, [sp, #64]
  42fbe0:	ldur	w10, [x29, #-88]
  42fbe4:	ldur	x11, [x29, #-80]
  42fbe8:	str	w23, [x0, #8]
  42fbec:	str	x22, [x0, #16]
  42fbf0:	strh	wzr, [x0, #6]
  42fbf4:	str	x0, [x8]
  42fbf8:	mov	w9, #0x18                  	// #24
  42fbfc:	mov	w23, #0x30                  	// #48
  42fc00:	b	42f8a8 <feof@plt+0x2ced8>
  42fc04:	ldrb	w8, [x19, #1138]
  42fc08:	cbz	w8, 42fc30 <feof@plt+0x2d260>
  42fc0c:	ldr	x8, [x27, #24]
  42fc10:	ldrb	w8, [x8, #19]
  42fc14:	tbnz	w8, #4, 42fc30 <feof@plt+0x2d260>
  42fc18:	ldr	x3, [x27]
  42fc1c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  42fc20:	add	x2, x2, #0x151
  42fc24:	mov	w1, #0x6                   	// #6
  42fc28:	mov	x0, x19
  42fc2c:	bl	41df34 <feof@plt+0x1b564>
  42fc30:	ldur	x1, [x29, #-48]
  42fc34:	cbz	x1, 42fc40 <feof@plt+0x2d270>
  42fc38:	mov	x0, x19
  42fc3c:	bl	42937c <feof@plt+0x269ac>
  42fc40:	mov	w0, wzr
  42fc44:	b	430b90 <feof@plt+0x2e1c0>
  42fc48:	stur	w10, [x29, #-88]
  42fc4c:	b	42fc60 <feof@plt+0x2d290>
  42fc50:	mov	w8, #0x1                   	// #1
  42fc54:	stur	xzr, [x29, #-96]
  42fc58:	stur	wzr, [x29, #-88]
  42fc5c:	str	w8, [sp, #100]
  42fc60:	ldrb	w22, [x19, #1157]
  42fc64:	mov	w20, w24
  42fc68:	lsl	x23, x20, #3
  42fc6c:	str	w22, [sp, #104]
  42fc70:	cbz	w22, 42fcc8 <feof@plt+0x2d2f8>
  42fc74:	lsl	x0, x20, #4
  42fc78:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42fc7c:	stur	x0, [x29, #-16]
  42fc80:	mov	x0, x19
  42fc84:	mov	x1, x23
  42fc88:	bl	42939c <feof@plt+0x269cc>
  42fc8c:	mov	x8, x0
  42fc90:	ldr	x9, [x8, #8]!
  42fc94:	mov	x21, x0
  42fc98:	ldr	x0, [x19, #40]
  42fc9c:	cmp	w22, #0x1
  42fca0:	str	x9, [sp, #16]
  42fca4:	stur	x8, [x29, #-80]
  42fca8:	ldur	w8, [x29, #-88]
  42fcac:	mov	x1, x27
  42fcb0:	mov	w2, w26
  42fcb4:	csel	w3, w8, w20, eq  // eq = none
  42fcb8:	bl	42a48c <feof@plt+0x27abc>
  42fcbc:	stur	x0, [x29, #-104]
  42fcc0:	mov	x0, x21
  42fcc4:	b	42fce8 <feof@plt+0x2d318>
  42fcc8:	mov	x0, x19
  42fccc:	mov	x1, x23
  42fcd0:	bl	42939c <feof@plt+0x269cc>
  42fcd4:	mov	x8, x0
  42fcd8:	ldr	x9, [x8, #8]!
  42fcdc:	str	x9, [sp, #16]
  42fce0:	stur	x8, [x29, #-80]
  42fce4:	stur	xzr, [x29, #-104]
  42fce8:	ldrh	w8, [x25, #16]
  42fcec:	mov	w10, #0x30                  	// #48
  42fcf0:	ldrb	w9, [x25, #19]
  42fcf4:	stur	x0, [x29, #-88]
  42fcf8:	madd	x8, x8, x10, x28
  42fcfc:	ldur	w8, [x8, #-24]
  42fd00:	stur	xzr, [x29, #-28]
  42fd04:	ubfx	w9, w9, #3, #1
  42fd08:	stur	x19, [x29, #-40]
  42fd0c:	cmp	w8, #0x0
  42fd10:	cset	w8, ne  // ne = any
  42fd14:	sturb	w8, [x29, #-32]
  42fd18:	ldr	w8, [sp, #100]
  42fd1c:	sturb	w9, [x29, #-31]
  42fd20:	sturb	wzr, [x29, #-30]
  42fd24:	stur	wzr, [x29, #-20]
  42fd28:	tbz	w8, #0, 42fdc8 <feof@plt+0x2d3f8>
  42fd2c:	ldr	w8, [sp, #104]
  42fd30:	cbz	w8, 43071c <feof@plt+0x2dd4c>
  42fd34:	mov	x20, x0
  42fd38:	ldur	x22, [x29, #-16]
  42fd3c:	ldr	x8, [x20, #16]!
  42fd40:	ldur	x9, [x29, #-80]
  42fd44:	ldr	x10, [x19, #136]
  42fd48:	mov	x23, x27
  42fd4c:	ldr	x9, [x9]
  42fd50:	cbnz	x27, 42fd6c <feof@plt+0x2d39c>
  42fd54:	ldr	w11, [x10, #48]
  42fd58:	cmp	w11, #0x2
  42fd5c:	add	x11, x10, #0x28
  42fd60:	b.ne	42fd68 <feof@plt+0x2d398>  // b.any
  42fd64:	ldr	x11, [x11]
  42fd68:	ldr	x23, [x11]
  42fd6c:	ldr	x25, [x10]
  42fd70:	sub	x21, x8, x9
  42fd74:	cbnz	x25, 42fda0 <feof@plt+0x2d3d0>
  42fd78:	mov	w0, #0x38                  	// #56
  42fd7c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42fd80:	mov	x25, x0
  42fd84:	movi	v0.2d, #0x0
  42fd88:	ldur	x0, [x29, #-88]
  42fd8c:	str	xzr, [x25, #48]
  42fd90:	stp	q0, q0, [x25, #16]
  42fd94:	ldr	x8, [x19, #136]
  42fd98:	stp	xzr, x8, [x25]
  42fd9c:	str	x25, [x8]
  42fda0:	str	x25, [x19, #136]
  42fda4:	mov	w8, #0x2                   	// #2
  42fda8:	str	x0, [x25, #32]
  42fdac:	mov	w0, #0x18                  	// #24
  42fdb0:	str	w8, [x25, #48]
  42fdb4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  42fdb8:	stp	x23, x22, [x0]
  42fdbc:	str	x22, [x0, #16]
  42fdc0:	str	x0, [x25, #40]
  42fdc4:	b	430770 <feof@plt+0x2dda0>
  42fdc8:	mov	x22, xzr
  42fdcc:	add	x1, x25, #0x18
  42fdd0:	add	x21, x19, #0x298
  42fdd4:	mov	w20, #0x18                  	// #24
  42fdd8:	stur	wzr, [x29, #-64]
  42fddc:	stp	x21, xzr, [sp, #80]
  42fde0:	b	42fe00 <feof@plt+0x2d430>
  42fde4:	ldur	x0, [x29, #-88]
  42fde8:	ldur	x9, [x29, #-96]
  42fdec:	add	x22, x22, #0x1
  42fdf0:	madd	x8, x22, x20, x25
  42fdf4:	add	x1, x8, #0x18
  42fdf8:	cmp	x22, x9
  42fdfc:	b.eq	42fd2c <feof@plt+0x2d35c>  // b.none
  42fe00:	sub	x0, x29, #0x28
  42fe04:	stur	x1, [x29, #-72]
  42fe08:	bl	431730 <feof@plt+0x2ed60>
  42fe0c:	cmp	w0, #0x2
  42fe10:	b.eq	42ffa0 <feof@plt+0x2d5d0>  // b.none
  42fe14:	cmp	w0, #0x4
  42fe18:	b.eq	42fee4 <feof@plt+0x2d514>  // b.none
  42fe1c:	cmp	w0, #0x3
  42fe20:	b.ne	42fde4 <feof@plt+0x2d414>  // b.any
  42fe24:	ldur	x0, [x29, #-88]
  42fe28:	cbz	x22, 42fec4 <feof@plt+0x2d4f4>
  42fe2c:	ldur	x8, [x29, #-72]
  42fe30:	ldurb	w8, [x8, #-18]
  42fe34:	tbnz	w8, #3, 42fec4 <feof@plt+0x2d4f4>
  42fe38:	mov	x0, x19
  42fe3c:	bl	425498 <feof@plt+0x22ac8>
  42fe40:	mov	x23, x0
  42fe44:	mov	w8, #0x53                  	// #83
  42fe48:	strb	w8, [x23, #4]
  42fe4c:	ldur	x8, [x29, #-72]
  42fe50:	strh	wzr, [x23, #6]
  42fe54:	ldur	x0, [x29, #-88]
  42fe58:	str	x8, [x23, #8]
  42fe5c:	ldrb	w8, [x19, #1157]
  42fe60:	ldp	x20, x9, [x0, #16]
  42fe64:	cmp	w8, #0x1
  42fe68:	ldur	w8, [x29, #-64]
  42fe6c:	csel	w1, w8, w22, hi  // hi = pmore
  42fe70:	cmp	x20, x9
  42fe74:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  42fe78:	ldur	x21, [x29, #-16]
  42fe7c:	cbz	x21, 42feb4 <feof@plt+0x2d4e4>
  42fe80:	ldur	x8, [x29, #-80]
  42fe84:	ldr	w2, [x23]
  42fe88:	ldr	x8, [x8]
  42fe8c:	sub	x8, x20, x8
  42fe90:	ubfx	x24, x8, #3, #32
  42fe94:	ldur	x8, [x29, #-104]
  42fe98:	cbz	x8, 42feb0 <feof@plt+0x2d4e0>
  42fe9c:	mov	x0, x8
  42fea0:	mov	w3, w2
  42fea4:	bl	42a5c4 <feof@plt+0x27bf4>
  42fea8:	mov	w2, w0
  42feac:	ldur	x0, [x29, #-88]
  42feb0:	str	w2, [x21, x24, lsl #2]
  42feb4:	ldr	x21, [sp, #80]
  42feb8:	str	x23, [x20], #8
  42febc:	str	x20, [x0, #16]
  42fec0:	mov	w20, #0x18                  	// #24
  42fec4:	ldur	x9, [x29, #-80]
  42fec8:	ldr	x8, [x0, #16]
  42fecc:	ldr	x9, [x9]
  42fed0:	sub	x10, x8, #0x8
  42fed4:	cmp	x8, x9
  42fed8:	csel	x8, xzr, x10, eq  // eq = none
  42fedc:	str	x8, [sp, #88]
  42fee0:	b	42fde8 <feof@plt+0x2d418>
  42fee4:	ldp	x0, x9, [x29, #-88]
  42fee8:	ldr	x13, [sp, #88]
  42feec:	mov	w12, #0x18                  	// #24
  42fef0:	ldr	x8, [x0, #16]
  42fef4:	ldr	x9, [x9]
  42fef8:	sub	x10, x8, #0x8
  42fefc:	cmp	x8, x9
  42ff00:	csel	x20, xzr, x10, eq  // eq = none
  42ff04:	cmp	x20, #0x0
  42ff08:	cset	w10, ne  // ne = any
  42ff0c:	cmp	x20, x13
  42ff10:	b.eq	42ff58 <feof@plt+0x2d588>  // b.none
  42ff14:	cbz	x20, 42ff58 <feof@plt+0x2d588>
  42ff18:	ldr	x11, [x20]
  42ff1c:	ldrb	w11, [x11, #4]
  42ff20:	cmp	w11, #0x53
  42ff24:	b.ne	42ff58 <feof@plt+0x2d588>  // b.any
  42ff28:	cmp	x8, x9
  42ff2c:	b.ls	42ff38 <feof@plt+0x2d568>  // b.plast
  42ff30:	sub	x8, x8, #0x8
  42ff34:	str	x8, [x0, #16]
  42ff38:	sub	x10, x8, #0x8
  42ff3c:	cmp	x8, x9
  42ff40:	csel	x20, xzr, x10, eq  // eq = none
  42ff44:	cmp	x20, #0x0
  42ff48:	cset	w10, ne  // ne = any
  42ff4c:	cmp	x20, x13
  42ff50:	b.eq	42ff58 <feof@plt+0x2d588>  // b.none
  42ff54:	cbnz	x20, 42ff18 <feof@plt+0x2d548>
  42ff58:	madd	x21, x22, x12, x25
  42ff5c:	ldrb	w11, [x21, #30]!
  42ff60:	tbnz	w11, #3, 43001c <feof@plt+0x2d64c>
  42ff64:	ldr	x10, [x0, #24]
  42ff68:	ldr	x21, [sp, #80]
  42ff6c:	cmp	x8, x10
  42ff70:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  42ff74:	ldur	x10, [x29, #-16]
  42ff78:	mov	w20, #0x18                  	// #24
  42ff7c:	cbz	x10, 42ff90 <feof@plt+0x2d5c0>
  42ff80:	ldr	w11, [x21]
  42ff84:	sub	x9, x8, x9
  42ff88:	lsr	x9, x9, #3
  42ff8c:	str	w11, [x10, w9, uxtw #2]
  42ff90:	str	x21, [x8], #8
  42ff94:	str	xzr, [sp, #88]
  42ff98:	str	x8, [x0, #16]
  42ff9c:	b	42fde8 <feof@plt+0x2d418>
  42ffa0:	madd	x8, x22, x20, x25
  42ffa4:	ldrb	w8, [x8, #28]
  42ffa8:	cmp	w8, #0x50
  42ffac:	b.ne	430038 <feof@plt+0x2d668>  // b.any
  42ffb0:	madd	x8, x22, x20, x25
  42ffb4:	ldrh	w11, [x8, #30]!
  42ffb8:	str	x8, [sp, #56]
  42ffbc:	mov	x17, x8
  42ffc0:	ldr	w8, [x17, #2]!
  42ffc4:	ldur	x0, [x29, #-88]
  42ffc8:	ldr	w13, [sp, #104]
  42ffcc:	ldur	x16, [x29, #-72]
  42ffd0:	sub	w9, w8, #0x1
  42ffd4:	tbnz	w11, #2, 4300b4 <feof@plt+0x2d6e4>
  42ffd8:	mov	w14, #0x30                  	// #48
  42ffdc:	umaddl	x10, w9, w14, x28
  42ffe0:	tbnz	w11, #3, 430138 <feof@plt+0x2d768>
  42ffe4:	cbz	x22, 42fff0 <feof@plt+0x2d620>
  42ffe8:	ldurb	w11, [x16, #-18]
  42ffec:	tbnz	w11, #3, 430184 <feof@plt+0x2d7b4>
  42fff0:	ldrb	w8, [x19, #1157]
  42fff4:	madd	x10, x9, x14, x28
  42fff8:	ldr	w15, [x10, #28]
  42fffc:	ldr	x26, [x10, #8]
  430000:	cmp	w8, #0x0
  430004:	cset	w18, ne  // ne = any
  430008:	cbz	w8, 4301b0 <feof@plt+0x2d7e0>
  43000c:	cbz	x26, 4301d4 <feof@plt+0x2d804>
  430010:	madd	x9, x9, x14, x28
  430014:	ldr	x9, [x9, #40]
  430018:	b	4301d8 <feof@plt+0x2d808>
  43001c:	cbz	w10, 430030 <feof@plt+0x2d660>
  430020:	ldr	x8, [x20]
  430024:	ldrb	w8, [x8, #4]
  430028:	cmp	w8, #0x53
  43002c:	b.ne	4300e0 <feof@plt+0x2d710>  // b.any
  430030:	str	xzr, [sp, #88]
  430034:	b	43012c <feof@plt+0x2d75c>
  430038:	ldrb	w8, [x19, #1157]
  43003c:	ldur	x0, [x29, #-88]
  430040:	cmp	w8, #0x1
  430044:	ldp	x20, x9, [x0, #16]
  430048:	ldur	w8, [x29, #-64]
  43004c:	csel	w1, w8, w22, hi  // hi = pmore
  430050:	cmp	x20, x9
  430054:	ldur	x9, [x29, #-72]
  430058:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  43005c:	ldur	x21, [x29, #-16]
  430060:	cbz	x21, 43009c <feof@plt+0x2d6cc>
  430064:	ldur	x8, [x29, #-80]
  430068:	ldr	w2, [x9]
  43006c:	ldr	x8, [x8]
  430070:	sub	x8, x20, x8
  430074:	ubfx	x23, x8, #3, #32
  430078:	ldur	x8, [x29, #-104]
  43007c:	cbz	x8, 430098 <feof@plt+0x2d6c8>
  430080:	mov	x0, x8
  430084:	mov	w3, w2
  430088:	bl	42a5c4 <feof@plt+0x27bf4>
  43008c:	ldur	x9, [x29, #-72]
  430090:	mov	w2, w0
  430094:	ldur	x0, [x29, #-88]
  430098:	str	w2, [x21, x23, lsl #2]
  43009c:	ldur	w8, [x29, #-64]
  4300a0:	str	x9, [x20], #8
  4300a4:	str	x20, [x0, #16]
  4300a8:	add	w8, w8, #0x1
  4300ac:	stur	w8, [x29, #-64]
  4300b0:	b	43012c <feof@plt+0x2d75c>
  4300b4:	ldrb	w8, [x19, #1157]
  4300b8:	mov	w10, #0x30                  	// #48
  4300bc:	madd	x9, x9, x10, x28
  4300c0:	add	x26, x9, #0x10
  4300c4:	cbz	w8, 43015c <feof@plt+0x2d78c>
  4300c8:	ldr	x25, [x26]
  4300cc:	str	xzr, [sp, #32]
  4300d0:	mov	w12, #0x1                   	// #1
  4300d4:	mov	w18, #0x1                   	// #1
  4300d8:	mov	w15, #0x1                   	// #1
  4300dc:	b	430314 <feof@plt+0x2d944>
  4300e0:	mov	x0, x19
  4300e4:	bl	425498 <feof@plt+0x22ac8>
  4300e8:	ldr	x8, [x20]
  4300ec:	str	xzr, [sp, #88]
  4300f0:	ldrb	w8, [x8, #4]
  4300f4:	strb	w8, [x0, #4]
  4300f8:	ldr	x8, [x20]
  4300fc:	ldur	q0, [x8, #8]
  430100:	stur	q0, [x0, #8]
  430104:	ldr	x8, [x20]
  430108:	ldrh	w9, [x21]
  43010c:	ldrh	w8, [x8, #6]
  430110:	tst	w9, #0x8
  430114:	and	w9, w8, #0xfffffff7
  430118:	orr	w8, w8, #0x8
  43011c:	csel	w8, w9, w8, eq  // eq = none
  430120:	strh	w8, [x0, #6]
  430124:	str	x0, [x20]
  430128:	ldur	x0, [x29, #-88]
  43012c:	ldr	x21, [sp, #80]
  430130:	mov	w20, #0x18                  	// #24
  430134:	b	42fde8 <feof@plt+0x2d418>
  430138:	madd	x8, x9, x14, x28
  43013c:	ldrb	w11, [x19, #1157]
  430140:	ldr	w15, [x8, #24]
  430144:	ldr	x26, [x10]
  430148:	cbz	w11, 430174 <feof@plt+0x2d7a4>
  43014c:	cbz	x26, 4301b8 <feof@plt+0x2d7e8>
  430150:	madd	x8, x9, x14, x28
  430154:	ldr	x8, [x8, #32]
  430158:	b	4301bc <feof@plt+0x2d7ec>
  43015c:	mov	x25, xzr
  430160:	mov	w18, wzr
  430164:	str	xzr, [sp, #32]
  430168:	mov	w12, #0x1                   	// #1
  43016c:	mov	w15, #0x1                   	// #1
  430170:	b	430314 <feof@plt+0x2d944>
  430174:	mov	w12, wzr
  430178:	mov	x25, xzr
  43017c:	mov	w18, wzr
  430180:	b	430310 <feof@plt+0x2d940>
  430184:	ldrb	w12, [x19, #1157]
  430188:	madd	x11, x9, x14, x28
  43018c:	ldr	w15, [x11, #24]
  430190:	ldr	x26, [x10]
  430194:	cmp	w12, #0x0
  430198:	cset	w18, ne  // ne = any
  43019c:	cbz	w12, 430258 <feof@plt+0x2d888>
  4301a0:	cbz	x26, 430260 <feof@plt+0x2d890>
  4301a4:	madd	x9, x9, x14, x28
  4301a8:	ldr	x9, [x9, #32]
  4301ac:	b	430264 <feof@plt+0x2d894>
  4301b0:	mov	x25, xzr
  4301b4:	b	4301e0 <feof@plt+0x2d810>
  4301b8:	mov	x8, xzr
  4301bc:	cmp	x26, #0x0
  4301c0:	mov	w12, wzr
  4301c4:	str	xzr, [sp, #32]
  4301c8:	csel	x25, xzr, x8, eq  // eq = none
  4301cc:	mov	w18, #0x1                   	// #1
  4301d0:	b	430314 <feof@plt+0x2d944>
  4301d4:	mov	x9, xzr
  4301d8:	cmp	x26, #0x0
  4301dc:	csel	x25, xzr, x9, eq  // eq = none
  4301e0:	ldr	x12, [sp, #88]
  4301e4:	cbz	x12, 430208 <feof@plt+0x2d838>
  4301e8:	ldur	x10, [x29, #-80]
  4301ec:	ldr	x9, [x0, #16]
  4301f0:	ldr	x10, [x10]
  4301f4:	sub	x11, x9, #0x8
  4301f8:	cmp	x9, x10
  4301fc:	csel	x9, xzr, x11, eq  // eq = none
  430200:	cmp	x9, x12
  430204:	b.eq	430214 <feof@plt+0x2d844>  // b.none
  430208:	str	xzr, [sp, #32]
  43020c:	mov	w12, #0x2                   	// #2
  430210:	b	430314 <feof@plt+0x2d944>
  430214:	cbz	w15, 430208 <feof@plt+0x2d838>
  430218:	sub	w9, w15, #0x1
  43021c:	add	x9, x26, w9, uxtw #3
  430220:	add	x9, x9, #0x8
  430224:	ldr	x10, [x26]
  430228:	ldrb	w10, [x10, #4]
  43022c:	cmp	w10, #0x53
  430230:	b.ne	430208 <feof@plt+0x2d838>  // b.any
  430234:	add	x10, x25, #0x4
  430238:	cmp	w8, #0x0
  43023c:	add	x26, x26, #0x8
  430240:	csel	x25, x10, x25, ne  // ne = any
  430244:	subs	w15, w15, #0x1
  430248:	mov	w12, #0x2                   	// #2
  43024c:	b.ne	430224 <feof@plt+0x2d854>  // b.any
  430250:	mov	x26, x9
  430254:	b	430310 <feof@plt+0x2d940>
  430258:	mov	x25, xzr
  43025c:	b	43026c <feof@plt+0x2d89c>
  430260:	mov	x9, xzr
  430264:	cmp	x26, #0x0
  430268:	csel	x25, xzr, x9, eq  // eq = none
  43026c:	ldur	x10, [x29, #-80]
  430270:	ldr	x9, [x0, #16]
  430274:	ldr	x10, [x10]
  430278:	sub	x11, x9, x10
  43027c:	lsr	x11, x11, #3
  430280:	cbz	w11, 43030c <feof@plt+0x2d93c>
  430284:	sub	x11, x9, #0x8
  430288:	cmp	x9, x10
  43028c:	csel	x12, xzr, x11, eq  // eq = none
  430290:	str	x12, [sp, #32]
  430294:	ldr	x12, [x12]
  430298:	ldrb	w12, [x12, #4]
  43029c:	cmp	w12, #0x13
  4302a0:	b.ne	4302d4 <feof@plt+0x2d904>  // b.any
  4302a4:	ldr	x12, [sp, #48]
  4302a8:	ldrb	w12, [x12, #19]
  4302ac:	tbz	w12, #3, 4302d4 <feof@plt+0x2d904>
  4302b0:	ldr	x12, [sp, #48]
  4302b4:	ldrh	w12, [x12, #16]
  4302b8:	cmp	w8, w12
  4302bc:	b.ne	4302d4 <feof@plt+0x2d904>  // b.any
  4302c0:	cbz	x26, 4302f4 <feof@plt+0x2d924>
  4302c4:	ldr	x8, [x26]
  4302c8:	cbz	x8, 4302f4 <feof@plt+0x2d924>
  4302cc:	mov	w12, wzr
  4302d0:	b	430314 <feof@plt+0x2d944>
  4302d4:	ldr	x8, [sp, #88]
  4302d8:	ldr	x9, [sp, #32]
  4302dc:	mov	w12, wzr
  4302e0:	cmp	x9, x8
  4302e4:	ccmp	w15, #0x0, #0x0, ne  // ne = any
  4302e8:	csel	x9, xzr, x9, ne  // ne = any
  4302ec:	str	x9, [sp, #32]
  4302f0:	b	430314 <feof@plt+0x2d944>
  4302f4:	cmp	x9, x10
  4302f8:	b.ls	43030c <feof@plt+0x2d93c>  // b.plast
  4302fc:	mov	w12, wzr
  430300:	str	xzr, [sp, #32]
  430304:	str	x11, [x0, #16]
  430308:	b	430314 <feof@plt+0x2d944>
  43030c:	mov	w12, wzr
  430310:	str	xzr, [sp, #32]
  430314:	ldrb	w8, [x19, #16]
  430318:	stp	w18, w15, [sp, #96]
  43031c:	cbz	w8, 430330 <feof@plt+0x2d960>
  430320:	cbz	x22, 430430 <feof@plt+0x2da60>
  430324:	ldrb	w8, [x19, #17]
  430328:	cbnz	w8, 430334 <feof@plt+0x2d964>
  43032c:	b	430430 <feof@plt+0x2da60>
  430330:	cbz	x22, 430430 <feof@plt+0x2da60>
  430334:	ldurb	w8, [x16, #-18]
  430338:	tbnz	w8, #3, 430430 <feof@plt+0x2da60>
  43033c:	ldr	x8, [sp, #88]
  430340:	cbz	x8, 430368 <feof@plt+0x2d998>
  430344:	ldur	x9, [x29, #-80]
  430348:	ldr	x8, [x0, #16]
  43034c:	ldr	x9, [x9]
  430350:	sub	x10, x8, #0x8
  430354:	cmp	x8, x9
  430358:	ldr	x9, [sp, #88]
  43035c:	csel	x8, xzr, x10, eq  // eq = none
  430360:	cmp	x8, x9
  430364:	b.eq	430430 <feof@plt+0x2da60>  // b.none
  430368:	mov	x0, x19
  43036c:	mov	x20, x17
  430370:	mov	w24, w12
  430374:	bl	425498 <feof@plt+0x22ac8>
  430378:	ldur	x16, [x29, #-72]
  43037c:	mov	x10, x0
  430380:	mov	w8, #0x53                  	// #83
  430384:	strb	w8, [x10, #4]
  430388:	str	x16, [x10, #8]
  43038c:	strh	wzr, [x10, #6]
  430390:	ldur	x0, [x29, #-88]
  430394:	ldrb	w8, [x19, #1157]
  430398:	ldp	x21, x9, [x0, #16]
  43039c:	cmp	w8, #0x1
  4303a0:	ldur	w8, [x29, #-64]
  4303a4:	csel	w1, w8, w22, hi  // hi = pmore
  4303a8:	cmp	x21, x9
  4303ac:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  4303b0:	ldur	x23, [x29, #-16]
  4303b4:	ldp	w15, w13, [sp, #100]
  4303b8:	ldr	w18, [sp, #96]
  4303bc:	mov	w12, w24
  4303c0:	mov	x17, x20
  4303c4:	cbz	x23, 430424 <feof@plt+0x2da54>
  4303c8:	str	x17, [sp, #8]
  4303cc:	ldur	x8, [x29, #-80]
  4303d0:	ldr	w2, [x10]
  4303d4:	ldr	x8, [x8]
  4303d8:	sub	x8, x21, x8
  4303dc:	ubfx	x9, x8, #3, #32
  4303e0:	ldur	x8, [x29, #-104]
  4303e4:	cbz	x8, 43041c <feof@plt+0x2da4c>
  4303e8:	mov	x0, x8
  4303ec:	mov	w3, w2
  4303f0:	mov	x20, x10
  4303f4:	str	x9, [sp]
  4303f8:	bl	42a5c4 <feof@plt+0x27bf4>
  4303fc:	ldr	x9, [sp]
  430400:	ldp	w18, w15, [sp, #96]
  430404:	ldur	x16, [x29, #-72]
  430408:	ldr	w13, [sp, #104]
  43040c:	mov	w2, w0
  430410:	ldur	x0, [x29, #-88]
  430414:	mov	x10, x20
  430418:	mov	w12, w24
  43041c:	ldr	x17, [sp, #8]
  430420:	str	w2, [x23, x9, lsl #2]
  430424:	str	x10, [x21], #8
  430428:	str	x21, [x0, #16]
  43042c:	ldr	x21, [sp, #80]
  430430:	cbz	w15, 43054c <feof@plt+0x2db7c>
  430434:	ldur	x21, [x29, #-16]
  430438:	mov	w27, wzr
  43043c:	b	43044c <feof@plt+0x2da7c>
  430440:	add	w27, w27, #0x1
  430444:	cmp	w15, w27
  430448:	b.eq	430510 <feof@plt+0x2db40>  // b.none
  43044c:	ldrb	w8, [x19, #1157]
  430450:	ldur	w10, [x29, #-64]
  430454:	cmp	w13, #0x1
  430458:	csel	w9, w27, wzr, hi  // hi = pmore
  43045c:	cmp	w8, #0x1
  430460:	add	w9, w9, w10
  430464:	csel	w1, w9, w22, hi  // hi = pmore
  430468:	cbz	x26, 430500 <feof@plt+0x2db30>
  43046c:	ldr	x24, [x26]
  430470:	mov	x8, x25
  430474:	cbnz	w18, 43047c <feof@plt+0x2daac>
  430478:	ldr	x8, [x26]
  43047c:	ldp	x23, x9, [x0, #16]
  430480:	cmp	x23, x9
  430484:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  430488:	cbz	x21, 4304d8 <feof@plt+0x2db08>
  43048c:	ldur	x9, [x29, #-80]
  430490:	ldr	w2, [x8]
  430494:	ldr	x9, [x9]
  430498:	sub	x8, x23, x9
  43049c:	ubfx	x28, x8, #3, #32
  4304a0:	ldur	x8, [x29, #-104]
  4304a4:	cbz	x8, 4304d0 <feof@plt+0x2db00>
  4304a8:	ldr	w3, [x16]
  4304ac:	mov	x0, x8
  4304b0:	mov	w20, w12
  4304b4:	bl	42a5c4 <feof@plt+0x27bf4>
  4304b8:	ldp	w18, w15, [sp, #96]
  4304bc:	ldur	x16, [x29, #-72]
  4304c0:	ldr	w13, [sp, #104]
  4304c4:	mov	w2, w0
  4304c8:	ldur	x0, [x29, #-88]
  4304cc:	mov	w12, w20
  4304d0:	str	w2, [x21, x28, lsl #2]
  4304d4:	ldr	x28, [sp, #112]
  4304d8:	orr	w8, w12, #0x2
  4304dc:	str	x24, [x23], #8
  4304e0:	cmp	w8, #0x2
  4304e4:	str	x23, [x0, #16]
  4304e8:	b.ne	430440 <feof@plt+0x2da70>  // b.any
  4304ec:	add	x8, x25, #0x4
  4304f0:	cmp	w18, #0x0
  4304f4:	add	x26, x26, #0x8
  4304f8:	csel	x25, x25, x8, eq  // eq = none
  4304fc:	b	430440 <feof@plt+0x2da70>
  430500:	mov	x24, xzr
  430504:	mov	x8, x25
  430508:	cbnz	w18, 43047c <feof@plt+0x2daac>
  43050c:	b	430478 <feof@plt+0x2daa8>
  430510:	ldp	x8, x27, [sp, #56]
  430514:	ldr	w26, [sp, #28]
  430518:	ldr	x25, [sp, #48]
  43051c:	ldr	x21, [sp, #80]
  430520:	ldrb	w8, [x8]
  430524:	ldr	x12, [sp, #32]
  430528:	mov	w20, #0x18                  	// #24
  43052c:	tbz	w8, #3, 430640 <feof@plt+0x2dc70>
  430530:	ldur	x9, [x29, #-80]
  430534:	ldr	x8, [x0, #16]
  430538:	ldr	x9, [x9]
  43053c:	sub	x10, x8, #0x8
  430540:	cmp	x8, x9
  430544:	csel	x12, xzr, x10, eq  // eq = none
  430548:	b	430640 <feof@plt+0x2dc70>
  43054c:	ldrb	w8, [x19, #1154]
  430550:	ldr	x25, [sp, #48]
  430554:	cbz	w8, 430578 <feof@plt+0x2dba8>
  430558:	ldrb	w8, [x19, #1152]
  43055c:	cbnz	w8, 430578 <feof@plt+0x2dba8>
  430560:	ldrb	w8, [x25, #19]
  430564:	tbnz	w8, #4, 430578 <feof@plt+0x2dba8>
  430568:	ldr	x8, [x19]
  43056c:	cbz	x8, 4305dc <feof@plt+0x2dc0c>
  430570:	ldrb	w8, [x8, #106]
  430574:	cbz	w8, 4305dc <feof@plt+0x2dc0c>
  430578:	ldrsb	w8, [x19, #1198]
  43057c:	ldr	w26, [sp, #28]
  430580:	mov	w20, #0x18                  	// #24
  430584:	cmp	w8, #0x1
  430588:	b.lt	43063c <feof@plt+0x2dc6c>  // b.tstop
  43058c:	ldrb	w8, [x19, #1120]
  430590:	ldr	x12, [sp, #32]
  430594:	cbnz	w8, 430640 <feof@plt+0x2dc70>
  430598:	ldrb	w8, [x25, #19]
  43059c:	tbnz	w8, #4, 430640 <feof@plt+0x2dc70>
  4305a0:	ldr	x8, [x19]
  4305a4:	cbz	x8, 4305b0 <feof@plt+0x2dbe0>
  4305a8:	ldrb	w8, [x8, #106]
  4305ac:	cbnz	w8, 430640 <feof@plt+0x2dc70>
  4305b0:	ldr	x3, [x27]
  4305b4:	ldr	w4, [x17]
  4305b8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  4305bc:	mov	w1, #0x16                  	// #22
  4305c0:	mov	x0, x19
  4305c4:	add	x2, x2, #0x216
  4305c8:	bl	41df34 <feof@plt+0x1b564>
  4305cc:	ldr	x12, [sp, #32]
  4305d0:	ldr	w15, [sp, #100]
  4305d4:	ldur	x0, [x29, #-88]
  4305d8:	b	430640 <feof@plt+0x2dc70>
  4305dc:	ldrb	w8, [x19, #1120]
  4305e0:	ldr	w26, [sp, #28]
  4305e4:	mov	w20, #0x18                  	// #24
  4305e8:	cbz	w8, 430608 <feof@plt+0x2dc38>
  4305ec:	ldr	x3, [x27]
  4305f0:	ldr	w4, [x17]
  4305f4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  4305f8:	mov	w1, #0x15                  	// #21
  4305fc:	mov	x0, x19
  430600:	add	x2, x2, #0x1c6
  430604:	b	430630 <feof@plt+0x2dc60>
  430608:	ldrsb	w8, [x19, #1198]
  43060c:	cbz	w8, 43063c <feof@plt+0x2dc6c>
  430610:	ldr	x3, [x27]
  430614:	ldr	w4, [x17]
  430618:	cmp	w8, #0x0
  43061c:	mov	w8, #0x15                  	// #21
  430620:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  430624:	cinc	w1, w8, gt
  430628:	mov	x0, x19
  43062c:	add	x2, x2, #0x216
  430630:	bl	41e064 <feof@plt+0x1b694>
  430634:	ldr	w15, [sp, #100]
  430638:	ldur	x0, [x29, #-88]
  43063c:	ldr	x12, [sp, #32]
  430640:	ldrb	w8, [x19, #16]
  430644:	cbnz	w8, 4306b4 <feof@plt+0x2dce4>
  430648:	ldr	x8, [sp, #56]
  43064c:	ldrb	w8, [x8]
  430650:	tbnz	w8, #3, 4306b4 <feof@plt+0x2dce4>
  430654:	ldr	x8, [x0, #16]
  430658:	ldr	x9, [sp, #88]
  43065c:	cbz	x9, 430680 <feof@plt+0x2dcb0>
  430660:	ldur	x9, [x29, #-80]
  430664:	sub	x10, x8, #0x8
  430668:	ldr	x9, [x9]
  43066c:	cmp	x8, x9
  430670:	csel	x9, xzr, x10, eq  // eq = none
  430674:	ldr	x10, [sp, #88]
  430678:	cmp	x9, x10
  43067c:	b.eq	4306b4 <feof@plt+0x2dce4>  // b.none
  430680:	ldr	x9, [x0, #24]
  430684:	cmp	x8, x9
  430688:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  43068c:	ldur	x9, [x29, #-16]
  430690:	cbz	x9, 4306ac <feof@plt+0x2dcdc>
  430694:	ldur	x10, [x29, #-80]
  430698:	ldr	w11, [x21]
  43069c:	ldr	x10, [x10]
  4306a0:	sub	x10, x8, x10
  4306a4:	lsr	x10, x10, #3
  4306a8:	str	w11, [x9, w10, uxtw #2]
  4306ac:	str	x21, [x8], #8
  4306b0:	str	x8, [x0, #16]
  4306b4:	cbz	x12, 43070c <feof@plt+0x2dd3c>
  4306b8:	mov	x0, x19
  4306bc:	mov	x23, x12
  4306c0:	bl	425498 <feof@plt+0x22ac8>
  4306c4:	ldr	x8, [x23]
  4306c8:	ldr	x9, [sp, #56]
  4306cc:	ldr	w15, [sp, #100]
  4306d0:	ldrb	w8, [x8, #4]
  4306d4:	strb	w8, [x0, #4]
  4306d8:	ldr	x8, [x23]
  4306dc:	ldur	q0, [x8, #8]
  4306e0:	stur	q0, [x0, #8]
  4306e4:	ldr	x8, [x23]
  4306e8:	ldrh	w9, [x9]
  4306ec:	ldrh	w8, [x8, #6]
  4306f0:	tst	w9, #0x8
  4306f4:	and	w9, w8, #0xfffffff7
  4306f8:	orr	w8, w8, #0x8
  4306fc:	csel	w8, w9, w8, eq  // eq = none
  430700:	strh	w8, [x0, #6]
  430704:	str	x0, [x23]
  430708:	ldur	x0, [x29, #-88]
  43070c:	ldur	w8, [x29, #-64]
  430710:	add	w8, w15, w8
  430714:	stur	w8, [x29, #-64]
  430718:	b	42fde8 <feof@plt+0x2d418>
  43071c:	mov	x20, x0
  430720:	ldr	x8, [x20, #16]!
  430724:	ldur	x10, [x29, #-80]
  430728:	ldr	x9, [x19, #136]
  43072c:	ldr	x10, [x10]
  430730:	ldr	x25, [x9]
  430734:	sub	x21, x8, x10
  430738:	cbnz	x25, 430764 <feof@plt+0x2dd94>
  43073c:	mov	w0, #0x38                  	// #56
  430740:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430744:	mov	x25, x0
  430748:	movi	v0.2d, #0x0
  43074c:	ldur	x0, [x29, #-88]
  430750:	str	xzr, [x25, #48]
  430754:	stp	q0, q0, [x25, #16]
  430758:	ldr	x8, [x19, #136]
  43075c:	stp	xzr, x8, [x25]
  430760:	str	x25, [x8]
  430764:	str	x25, [x19, #136]
  430768:	str	wzr, [x25, #48]
  43076c:	stp	x0, x27, [x25, #32]
  430770:	ldr	x9, [sp, #16]
  430774:	lsr	x8, x21, #3
  430778:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  43077c:	add	x8, x9, w8, uxtw #3
  430780:	stp	x9, x8, [x25, #16]
  430784:	ldur	x9, [x29, #-80]
  430788:	ldr	x8, [x20]
  43078c:	ldr	w11, [x10, #1924]
  430790:	ldr	x25, [sp, #48]
  430794:	ldr	x9, [x9]
  430798:	sub	x8, x8, x9
  43079c:	lsr	x8, x8, #3
  4307a0:	add	w8, w11, w8
  4307a4:	str	w8, [x10, #1924]
  4307a8:	ldur	w20, [x29, #-52]
  4307ac:	cbz	w20, 430800 <feof@plt+0x2de30>
  4307b0:	ldr	x8, [sp, #40]
  4307b4:	ldr	x8, [x8, #8]
  4307b8:	add	x21, x8, #0x28
  4307bc:	b	4307cc <feof@plt+0x2ddfc>
  4307c0:	subs	x20, x20, #0x1
  4307c4:	add	x21, x21, #0x30
  4307c8:	b.eq	430800 <feof@plt+0x2de30>  // b.none
  4307cc:	ldur	x0, [x21, #-32]
  4307d0:	cbz	x0, 4307dc <feof@plt+0x2de0c>
  4307d4:	bl	4024c0 <free@plt>
  4307d8:	stur	xzr, [x21, #-32]
  4307dc:	ldur	x0, [x21, #-8]
  4307e0:	cbz	x0, 4307ec <feof@plt+0x2de1c>
  4307e4:	bl	4024c0 <free@plt>
  4307e8:	stur	xzr, [x21, #-8]
  4307ec:	ldr	x0, [x21]
  4307f0:	cbz	x0, 4307c0 <feof@plt+0x2ddf0>
  4307f4:	bl	4024c0 <free@plt>
  4307f8:	str	xzr, [x21]
  4307fc:	b	4307c0 <feof@plt+0x2ddf0>
  430800:	ldr	x0, [sp, #40]
  430804:	bl	4295fc <feof@plt+0x26c2c>
  430808:	ldrh	w8, [x27, #18]
  43080c:	orr	w9, w8, #0x40
  430810:	strh	w9, [x27, #18]
  430814:	tbnz	w8, #7, 430874 <feof@plt+0x2dea4>
  430818:	orr	w9, w8, #0xc0
  43081c:	ands	w8, w8, #0x3
  430820:	strh	w9, [x27, #18]
  430824:	b.eq	430b00 <feof@plt+0x2e130>  // b.none
  430828:	cmp	w8, #0x3
  43082c:	b.eq	43085c <feof@plt+0x2de8c>  // b.none
  430830:	cmp	w8, #0x2
  430834:	b.ne	430c34 <feof@plt+0x2e264>  // b.any
  430838:	ldr	x23, [x27, #24]
  43083c:	ldrb	w8, [x23, #18]
  430840:	cbz	w8, 43085c <feof@plt+0x2de8c>
  430844:	ldr	x9, [x19, #1048]
  430848:	sub	w2, w8, #0x1
  43084c:	mov	x0, x19
  430850:	mov	x1, x23
  430854:	blr	x9
  430858:	strb	wzr, [x23, #18]
  43085c:	ldr	x8, [x19, #1008]
  430860:	cbz	x8, 430874 <feof@plt+0x2dea4>
  430864:	ldr	w1, [x19, #48]
  430868:	mov	x0, x19
  43086c:	mov	x2, x27
  430870:	blr	x8
  430874:	ldr	x8, [x19, #1032]
  430878:	cbz	x8, 43088c <feof@plt+0x2debc>
  43087c:	mov	x0, x19
  430880:	mov	w1, w26
  430884:	mov	x2, x27
  430888:	blr	x8
  43088c:	ldrb	w8, [x25, #19]
  430890:	ldrh	w9, [x25, #16]
  430894:	orr	w10, w8, #0x20
  430898:	strb	w10, [x25, #19]
  43089c:	cbz	w9, 4309bc <feof@plt+0x2dfec>
  4308a0:	ldur	x20, [x29, #-48]
  4308a4:	cbz	x20, 430b8c <feof@plt+0x2e1bc>
  4308a8:	ldrb	w8, [x19, #16]
  4308ac:	cbnz	w8, 430930 <feof@plt+0x2df60>
  4308b0:	mov	x0, x19
  4308b4:	bl	425498 <feof@plt+0x22ac8>
  4308b8:	ldr	x9, [sp, #72]
  4308bc:	mov	w8, #0x53                  	// #83
  4308c0:	strb	w8, [x0, #4]
  4308c4:	strh	wzr, [x0, #6]
  4308c8:	str	x9, [x0, #8]
  4308cc:	ldr	x8, [x19, #136]
  4308d0:	mov	x21, x0
  4308d4:	ldr	w9, [x8, #48]
  4308d8:	cmp	w9, #0x2
  4308dc:	add	x9, x8, #0x28
  4308e0:	b.ne	4308e8 <feof@plt+0x2df18>  // b.any
  4308e4:	ldr	x9, [x9]
  4308e8:	ldr	x0, [x8]
  4308ec:	ldr	x22, [x9]
  4308f0:	cbnz	x0, 430918 <feof@plt+0x2df48>
  4308f4:	mov	w0, #0x38                  	// #56
  4308f8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4308fc:	movi	v0.2d, #0x0
  430900:	str	xzr, [x0, #48]
  430904:	stp	q0, q0, [x0, #16]
  430908:	ldr	x8, [x19, #136]
  43090c:	stp	xzr, x8, [x0]
  430910:	str	x0, [x8]
  430914:	ldur	x20, [x29, #-48]
  430918:	mov	w8, #0x1                   	// #1
  43091c:	add	x9, x21, #0x18
  430920:	str	x0, [x19, #136]
  430924:	stp	xzr, x22, [x0, #32]
  430928:	str	w8, [x0, #48]
  43092c:	stp	x21, x9, [x0, #16]
  430930:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x25a68>
  430934:	b	430940 <feof@plt+0x2df70>
  430938:	mov	x20, x22
  43093c:	cbz	x22, 4309b0 <feof@plt+0x2dfe0>
  430940:	ldp	x22, x24, [x20]
  430944:	str	xzr, [x20]
  430948:	ldr	x8, [x19, #136]
  43094c:	ldr	x9, [x20, #16]
  430950:	ldr	x0, [x8]
  430954:	sub	x8, x9, x24
  430958:	lsr	x23, x8, #3
  43095c:	cbnz	x0, 430980 <feof@plt+0x2dfb0>
  430960:	mov	w0, #0x38                  	// #56
  430964:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430968:	movi	v0.2d, #0x0
  43096c:	stp	q0, q0, [x0, #16]
  430970:	str	xzr, [x0, #48]
  430974:	ldr	x8, [x19, #136]
  430978:	stp	xzr, x8, [x0]
  43097c:	str	x0, [x8]
  430980:	add	x8, x24, w23, uxtw #3
  430984:	str	x0, [x19, #136]
  430988:	str	wzr, [x0, #48]
  43098c:	stp	x20, xzr, [x0, #32]
  430990:	stp	x24, x8, [x0, #16]
  430994:	stur	x22, [x29, #-48]
  430998:	ldrb	w8, [x19, #1157]
  43099c:	cbnz	w8, 430938 <feof@plt+0x2df68>
  4309a0:	ldr	w8, [x21, #1924]
  4309a4:	add	w8, w8, w23
  4309a8:	str	w8, [x21, #1924]
  4309ac:	b	430938 <feof@plt+0x2df68>
  4309b0:	strb	wzr, [x19, #192]
  4309b4:	mov	w0, #0x2                   	// #2
  4309b8:	b	430b94 <feof@plt+0x2e1c4>
  4309bc:	ldr	w23, [x25, #12]
  4309c0:	tbnz	w8, #6, 430bb4 <feof@plt+0x2e1e4>
  4309c4:	ldrb	w8, [x19, #1157]
  4309c8:	add	x21, x25, #0x18
  4309cc:	cbz	w8, 430b0c <feof@plt+0x2e13c>
  4309d0:	mov	w20, w23
  4309d4:	lsl	x0, x20, #4
  4309d8:	lsl	x25, x20, #3
  4309dc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4309e0:	mov	x24, x0
  4309e4:	mov	x0, x19
  4309e8:	mov	x1, x25
  4309ec:	bl	42939c <feof@plt+0x269cc>
  4309f0:	ldr	x8, [x19, #40]
  4309f4:	mov	x25, x0
  4309f8:	mov	x1, x27
  4309fc:	mov	w2, w26
  430a00:	mov	x0, x8
  430a04:	mov	w3, w23
  430a08:	str	x27, [sp, #64]
  430a0c:	bl	42a48c <feof@plt+0x27abc>
  430a10:	cbz	w23, 430a7c <feof@plt+0x2e0ac>
  430a14:	ldr	x27, [x25, #16]
  430a18:	mov	x22, x0
  430a1c:	mov	x26, xzr
  430a20:	b	430a40 <feof@plt+0x2e070>
  430a24:	str	w2, [x24, x28, lsl #2]
  430a28:	add	x26, x26, #0x1
  430a2c:	str	x21, [x27], #8
  430a30:	cmp	w20, w26
  430a34:	add	x21, x21, #0x18
  430a38:	str	x27, [x25, #16]
  430a3c:	b.eq	430a7c <feof@plt+0x2e0ac>  // b.none
  430a40:	ldr	x8, [x25, #24]
  430a44:	cmp	x27, x8
  430a48:	b.hi	430c1c <feof@plt+0x2e24c>  // b.pmore
  430a4c:	cbz	x24, 430a28 <feof@plt+0x2e058>
  430a50:	ldr	x8, [x25, #8]
  430a54:	ldr	w2, [x21]
  430a58:	sub	x8, x27, x8
  430a5c:	ubfx	x28, x8, #3, #32
  430a60:	cbz	x22, 430a24 <feof@plt+0x2e054>
  430a64:	mov	x0, x22
  430a68:	mov	w1, w26
  430a6c:	mov	w3, w2
  430a70:	bl	42a5c4 <feof@plt+0x27bf4>
  430a74:	mov	w2, w0
  430a78:	b	430a24 <feof@plt+0x2e054>
  430a7c:	ldr	x21, [x25, #8]
  430a80:	ldr	x8, [x19, #136]
  430a84:	ldr	x26, [sp, #64]
  430a88:	cbnz	x26, 430aa4 <feof@plt+0x2e0d4>
  430a8c:	ldr	w9, [x8, #48]
  430a90:	cmp	w9, #0x2
  430a94:	add	x9, x8, #0x28
  430a98:	b.ne	430aa0 <feof@plt+0x2e0d0>  // b.any
  430a9c:	ldr	x9, [x9]
  430aa0:	ldr	x26, [x9]
  430aa4:	ldr	x22, [x8]
  430aa8:	cbnz	x22, 430ad0 <feof@plt+0x2e100>
  430aac:	mov	w0, #0x38                  	// #56
  430ab0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430ab4:	movi	v0.2d, #0x0
  430ab8:	str	xzr, [x0, #48]
  430abc:	stp	q0, q0, [x0, #16]
  430ac0:	ldr	x8, [x19, #136]
  430ac4:	mov	x22, x0
  430ac8:	stp	xzr, x8, [x0]
  430acc:	str	x0, [x8]
  430ad0:	mov	w8, #0x2                   	// #2
  430ad4:	mov	w0, #0x18                  	// #24
  430ad8:	str	x22, [x19, #136]
  430adc:	str	w8, [x22, #48]
  430ae0:	str	x25, [x22, #32]
  430ae4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430ae8:	add	x8, x21, x20, lsl #3
  430aec:	stp	x26, x24, [x0]
  430af0:	str	x24, [x0, #16]
  430af4:	str	x0, [x22, #40]
  430af8:	stp	x21, x8, [x22, #16]
  430afc:	b	430b74 <feof@plt+0x2e1a4>
  430b00:	ldr	x8, [x19, #1016]
  430b04:	cbnz	x8, 430864 <feof@plt+0x2de94>
  430b08:	b	430874 <feof@plt+0x2dea4>
  430b0c:	ldr	x8, [x19, #136]
  430b10:	cbnz	x27, 430b2c <feof@plt+0x2e15c>
  430b14:	ldr	w9, [x8, #48]
  430b18:	cmp	w9, #0x2
  430b1c:	add	x9, x8, #0x28
  430b20:	b.ne	430b28 <feof@plt+0x2e158>  // b.any
  430b24:	ldr	x9, [x9]
  430b28:	ldr	x27, [x9]
  430b2c:	ldr	x0, [x8]
  430b30:	cbnz	x0, 430b54 <feof@plt+0x2e184>
  430b34:	mov	w0, #0x38                  	// #56
  430b38:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430b3c:	movi	v0.2d, #0x0
  430b40:	str	xzr, [x0, #48]
  430b44:	stp	q0, q0, [x0, #16]
  430b48:	ldr	x8, [x19, #136]
  430b4c:	stp	xzr, x8, [x0]
  430b50:	str	x0, [x8]
  430b54:	mov	w8, #0x1                   	// #1
  430b58:	mov	w9, #0x18                  	// #24
  430b5c:	str	x0, [x19, #136]
  430b60:	str	w8, [x0, #48]
  430b64:	umaddl	x8, w23, w9, x25
  430b68:	add	x8, x8, #0x18
  430b6c:	stp	xzr, x27, [x0, #32]
  430b70:	stp	x21, x8, [x0, #16]
  430b74:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  430b78:	ldr	w9, [x8, #1924]
  430b7c:	add	w9, w9, w23
  430b80:	str	w9, [x8, #1924]
  430b84:	ldur	x20, [x29, #-48]
  430b88:	cbnz	x20, 4308a8 <feof@plt+0x2ded8>
  430b8c:	mov	w0, #0x1                   	// #1
  430b90:	strb	wzr, [x19, #192]
  430b94:	ldp	x20, x19, [sp, #304]
  430b98:	ldp	x22, x21, [sp, #288]
  430b9c:	ldp	x24, x23, [sp, #272]
  430ba0:	ldp	x26, x25, [sp, #256]
  430ba4:	ldp	x28, x27, [sp, #240]
  430ba8:	ldp	x29, x30, [sp, #224]
  430bac:	add	sp, sp, #0x140
  430bb0:	ret
  430bb4:	mov	w8, #0x18                  	// #24
  430bb8:	cbz	x23, 4309c4 <feof@plt+0x2dff4>
  430bbc:	sub	w9, w23, #0x1
  430bc0:	umaddl	x9, w9, w8, x25
  430bc4:	ldrb	w9, [x9, #28]
  430bc8:	sub	x23, x23, #0x1
  430bcc:	cmp	w9, #0x26
  430bd0:	b.eq	430bb8 <feof@plt+0x2e1e8>  // b.none
  430bd4:	add	w23, w23, #0x1
  430bd8:	b	4309c4 <feof@plt+0x2dff4>
  430bdc:	mov	w8, #0x18                  	// #24
  430be0:	cbz	x24, 430c08 <feof@plt+0x2e238>
  430be4:	sub	w9, w24, #0x1
  430be8:	umaddl	x9, w9, w8, x25
  430bec:	ldrb	w9, [x9, #28]
  430bf0:	sub	x24, x24, #0x1
  430bf4:	cmp	w9, #0x26
  430bf8:	b.eq	430be0 <feof@plt+0x2e210>  // b.none
  430bfc:	ldr	x28, [sp, #112]
  430c00:	add	w24, w24, #0x1
  430c04:	b	42f858 <feof@plt+0x2ce88>
  430c08:	stur	xzr, [x29, #-96]
  430c0c:	stur	wzr, [x29, #-88]
  430c10:	ldr	x28, [sp, #112]
  430c14:	mov	w8, #0x1                   	// #1
  430c18:	b	42fc5c <feof@plt+0x2d28c>
  430c1c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  430c20:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  430c24:	add	x0, x0, #0xdce
  430c28:	add	x2, x2, #0x13b
  430c2c:	mov	w1, #0x953                 	// #2387
  430c30:	bl	404ac4 <feof@plt+0x20f4>
  430c34:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  430c38:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  430c3c:	add	x0, x0, #0xdce
  430c40:	add	x2, x2, #0x6d
  430c44:	mov	w1, #0xe0b                 	// #3595
  430c48:	bl	404ac4 <feof@plt+0x20f4>
  430c4c:	stp	x29, x30, [sp, #-80]!
  430c50:	stp	x26, x25, [sp, #16]
  430c54:	stp	x24, x23, [sp, #32]
  430c58:	stp	x22, x21, [sp, #48]
  430c5c:	stp	x20, x19, [sp, #64]
  430c60:	ldr	x8, [x2]
  430c64:	mov	x19, x0
  430c68:	mov	x29, sp
  430c6c:	mov	x21, x3
  430c70:	mov	x0, x8
  430c74:	mov	x23, x2
  430c78:	mov	w20, w1
  430c7c:	bl	42877c <feof@plt+0x25dac>
  430c80:	mov	w22, w0
  430c84:	mov	x0, x21
  430c88:	bl	42877c <feof@plt+0x25dac>
  430c8c:	add	w8, w22, w0
  430c90:	add	w8, w8, #0x1
  430c94:	add	x8, x8, #0xf
  430c98:	and	x8, x8, #0x1fffffff0
  430c9c:	mov	x9, sp
  430ca0:	sub	x22, x9, x8
  430ca4:	mov	sp, x22
  430ca8:	ldr	x1, [x23]
  430cac:	mov	w3, #0x1                   	// #1
  430cb0:	mov	x0, x19
  430cb4:	mov	x2, x22
  430cb8:	bl	428950 <feof@plt+0x25f80>
  430cbc:	ldr	x8, [x23]
  430cc0:	mov	x24, x0
  430cc4:	mov	x2, x0
  430cc8:	ldrb	w8, [x8, #4]
  430ccc:	cmp	w8, #0x7
  430cd0:	b.ne	430cec <feof@plt+0x2e31c>  // b.any
  430cd4:	ldrb	w8, [x21, #4]
  430cd8:	mov	x2, x24
  430cdc:	cbz	w8, 430cec <feof@plt+0x2e31c>
  430ce0:	mov	w8, #0x20                  	// #32
  430ce4:	mov	x2, x24
  430ce8:	strb	w8, [x2], #1
  430cec:	ldrb	w8, [x21, #4]
  430cf0:	cmp	w8, #0x53
  430cf4:	b.eq	430d0c <feof@plt+0x2e33c>  // b.none
  430cf8:	mov	w3, #0x1                   	// #1
  430cfc:	mov	x0, x19
  430d00:	mov	x1, x21
  430d04:	bl	428950 <feof@plt+0x25f80>
  430d08:	mov	x2, x0
  430d0c:	mov	w8, #0xa                   	// #10
  430d10:	strb	w8, [x2]
  430d14:	sub	x2, x2, x22
  430d18:	mov	w3, #0x1                   	// #1
  430d1c:	mov	x0, x19
  430d20:	mov	x1, x22
  430d24:	bl	41bfd4 <feof@plt+0x19604>
  430d28:	mov	x0, x19
  430d2c:	bl	4246a8 <feof@plt+0x21cd8>
  430d30:	mov	x0, x19
  430d34:	bl	425498 <feof@plt+0x22ac8>
  430d38:	str	x0, [x19, #448]
  430d3c:	mov	x0, x19
  430d40:	bl	425618 <feof@plt+0x22c48>
  430d44:	ldr	x8, [x19]
  430d48:	mov	x25, x0
  430d4c:	ldr	x9, [x8]
  430d50:	ldr	x8, [x8, #32]
  430d54:	cmp	x9, x8
  430d58:	b.eq	430de8 <feof@plt+0x2e418>  // b.none
  430d5c:	ldr	w26, [x25]
  430d60:	mov	x0, x19
  430d64:	bl	41c0c4 <feof@plt+0x196f4>
  430d68:	mov	w1, #0x1                   	// #1
  430d6c:	mov	x0, x19
  430d70:	bl	42e2c0 <feof@plt+0x2b8f0>
  430d74:	strb	wzr, [x24]
  430d78:	ldr	x8, [x23]
  430d7c:	mov	w0, wzr
  430d80:	ldr	x9, [x8, #16]
  430d84:	ldr	q0, [x8]
  430d88:	str	x9, [x25, #16]
  430d8c:	str	q0, [x25]
  430d90:	str	x25, [x23]
  430d94:	ldrh	w8, [x25, #6]
  430d98:	str	w26, [x25]
  430d9c:	and	w8, w8, #0xfffffff7
  430da0:	strh	w8, [x25, #6]
  430da4:	ldr	w8, [x19, #1116]
  430da8:	cmp	w8, #0x15
  430dac:	b.eq	430df8 <feof@plt+0x2e428>  // b.none
  430db0:	mov	x0, x19
  430db4:	mov	x1, x21
  430db8:	bl	428aa4 <feof@plt+0x260d4>
  430dbc:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0xda68>
  430dc0:	mov	x6, x0
  430dc4:	add	x4, x4, #0xfb
  430dc8:	mov	w1, #0x3                   	// #3
  430dcc:	mov	x0, x19
  430dd0:	mov	w2, w20
  430dd4:	mov	w3, wzr
  430dd8:	mov	x5, x22
  430ddc:	bl	41e2c4 <feof@plt+0x1b8f4>
  430de0:	mov	w0, wzr
  430de4:	b	430df8 <feof@plt+0x2e428>
  430de8:	mov	x0, x19
  430dec:	str	x25, [x23]
  430df0:	bl	41c0c4 <feof@plt+0x196f4>
  430df4:	mov	w0, #0x1                   	// #1
  430df8:	mov	sp, x29
  430dfc:	ldp	x20, x19, [sp, #64]
  430e00:	ldp	x22, x21, [sp, #48]
  430e04:	ldp	x24, x23, [sp, #32]
  430e08:	ldp	x26, x25, [sp, #16]
  430e0c:	ldp	x29, x30, [sp], #80
  430e10:	ret
  430e14:	stp	x29, x30, [sp, #-80]!
  430e18:	stp	x24, x23, [sp, #32]
  430e1c:	stp	x22, x21, [sp, #48]
  430e20:	stp	x20, x19, [sp, #64]
  430e24:	ldr	w8, [x1, #24]
  430e28:	mov	w23, w2
  430e2c:	mov	x19, x0
  430e30:	str	x25, [sp, #16]
  430e34:	cmp	w8, #0x7
  430e38:	mov	x29, sp
  430e3c:	b.ne	430e50 <feof@plt+0x2e480>  // b.any
  430e40:	ldrb	w8, [x19, #16]
  430e44:	cbz	w8, 431054 <feof@plt+0x2e684>
  430e48:	mov	w0, wzr
  430e4c:	b	431038 <feof@plt+0x2e668>
  430e50:	mov	x0, x19
  430e54:	mov	w2, w3
  430e58:	mov	x20, x1
  430e5c:	bl	42d3a8 <feof@plt+0x2a9d8>
  430e60:	mov	x21, x0
  430e64:	bl	402420 <strlen@plt>
  430e68:	add	x8, x0, #0x10
  430e6c:	and	x8, x8, #0xfffffffffffffff0
  430e70:	mov	x9, sp
  430e74:	sub	x24, x9, x8
  430e78:	mov	x22, x0
  430e7c:	mov	sp, x24
  430e80:	mov	x0, x24
  430e84:	mov	x1, x21
  430e88:	mov	x2, x22
  430e8c:	bl	402390 <memcpy@plt>
  430e90:	mov	w8, #0xa                   	// #10
  430e94:	mov	w3, #0x1                   	// #1
  430e98:	mov	x0, x19
  430e9c:	mov	x1, x24
  430ea0:	mov	x2, x22
  430ea4:	strb	w8, [x24, x22]
  430ea8:	bl	41bfd4 <feof@plt+0x19604>
  430eac:	mov	x0, x19
  430eb0:	bl	4246a8 <feof@plt+0x21cd8>
  430eb4:	mov	x0, x19
  430eb8:	bl	425498 <feof@plt+0x22ac8>
  430ebc:	str	x0, [x19, #448]
  430ec0:	mov	x0, x19
  430ec4:	bl	425618 <feof@plt+0x22c48>
  430ec8:	str	w23, [x0]
  430ecc:	ldr	x8, [x19, #136]
  430ed0:	mov	x21, x0
  430ed4:	ldr	w9, [x8, #48]
  430ed8:	cmp	w9, #0x2
  430edc:	b.ne	430fbc <feof@plt+0x2e5ec>  // b.any
  430ee0:	mov	w0, #0x10                  	// #16
  430ee4:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430ee8:	mov	x22, x0
  430eec:	mov	w1, #0x8                   	// #8
  430ef0:	mov	x0, x19
  430ef4:	bl	42939c <feof@plt+0x269cc>
  430ef8:	ldr	x8, [x19, #40]
  430efc:	mov	x24, x0
  430f00:	mov	w3, #0x1                   	// #1
  430f04:	mov	x1, x20
  430f08:	mov	x0, x8
  430f0c:	mov	w2, w23
  430f10:	bl	42a48c <feof@plt+0x27abc>
  430f14:	ldp	x23, x8, [x24, #16]
  430f18:	cmp	x23, x8
  430f1c:	b.hi	431078 <feof@plt+0x2e6a8>  // b.pmore
  430f20:	cbz	x22, 430f50 <feof@plt+0x2e580>
  430f24:	ldr	x8, [x19, #40]
  430f28:	ldr	x9, [x24, #8]
  430f2c:	ldr	w2, [x8, #112]
  430f30:	sub	x8, x23, x9
  430f34:	ubfx	x25, x8, #3, #32
  430f38:	cbz	x0, 430f4c <feof@plt+0x2e57c>
  430f3c:	mov	w1, wzr
  430f40:	mov	w3, w2
  430f44:	bl	42a5c4 <feof@plt+0x27bf4>
  430f48:	mov	w2, w0
  430f4c:	str	w2, [x22, x25, lsl #2]
  430f50:	str	x21, [x23], #8
  430f54:	str	x23, [x24, #16]
  430f58:	ldr	x8, [x19, #136]
  430f5c:	ldr	x23, [x24, #8]
  430f60:	ldr	x21, [x8]
  430f64:	cbnz	x21, 430f8c <feof@plt+0x2e5bc>
  430f68:	mov	w0, #0x38                  	// #56
  430f6c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430f70:	movi	v0.2d, #0x0
  430f74:	str	xzr, [x0, #48]
  430f78:	stp	q0, q0, [x0, #16]
  430f7c:	ldr	x8, [x19, #136]
  430f80:	mov	x21, x0
  430f84:	stp	xzr, x8, [x0]
  430f88:	str	x0, [x8]
  430f8c:	mov	w8, #0x2                   	// #2
  430f90:	mov	w0, #0x18                  	// #24
  430f94:	str	x21, [x19, #136]
  430f98:	str	w8, [x21, #48]
  430f9c:	str	x24, [x21, #32]
  430fa0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430fa4:	add	x8, x23, #0x8
  430fa8:	stp	x20, x22, [x0]
  430fac:	str	x22, [x0, #16]
  430fb0:	str	x0, [x21, #40]
  430fb4:	stp	x23, x8, [x21, #16]
  430fb8:	b	431000 <feof@plt+0x2e630>
  430fbc:	ldr	x0, [x8]
  430fc0:	ldr	x22, [x8, #40]
  430fc4:	cbnz	x0, 430fe8 <feof@plt+0x2e618>
  430fc8:	mov	w0, #0x38                  	// #56
  430fcc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  430fd0:	movi	v0.2d, #0x0
  430fd4:	str	xzr, [x0, #48]
  430fd8:	stp	q0, q0, [x0, #16]
  430fdc:	ldr	x8, [x19, #136]
  430fe0:	stp	xzr, x8, [x0]
  430fe4:	str	x0, [x8]
  430fe8:	mov	w8, #0x1                   	// #1
  430fec:	add	x9, x21, #0x18
  430ff0:	str	x0, [x19, #136]
  430ff4:	stp	xzr, x22, [x0, #32]
  430ff8:	str	w8, [x0, #48]
  430ffc:	stp	x21, x9, [x0, #16]
  431000:	ldr	x8, [x19]
  431004:	ldr	x9, [x8]
  431008:	ldr	x8, [x8, #32]
  43100c:	cmp	x9, x8
  431010:	b.eq	43102c <feof@plt+0x2e65c>  // b.none
  431014:	ldr	x3, [x20]
  431018:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xca68>
  43101c:	add	x2, x2, #0xd47
  431020:	mov	w1, #0x4                   	// #4
  431024:	mov	x0, x19
  431028:	bl	41de04 <feof@plt+0x1b434>
  43102c:	mov	x0, x19
  431030:	bl	41c0c4 <feof@plt+0x196f4>
  431034:	mov	w0, #0x1                   	// #1
  431038:	mov	sp, x29
  43103c:	ldp	x20, x19, [sp, #64]
  431040:	ldp	x22, x21, [sp, #48]
  431044:	ldp	x24, x23, [sp, #32]
  431048:	ldr	x25, [sp, #16]
  43104c:	ldp	x29, x30, [sp], #80
  431050:	ret
  431054:	mov	x0, x19
  431058:	mov	w1, w23
  43105c:	mov	sp, x29
  431060:	ldp	x20, x19, [sp, #64]
  431064:	ldp	x22, x21, [sp, #48]
  431068:	ldp	x24, x23, [sp, #32]
  43106c:	ldr	x25, [sp, #16]
  431070:	ldp	x29, x30, [sp], #80
  431074:	b	41b1f8 <feof@plt+0x18828>
  431078:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xca68>
  43107c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  431080:	add	x0, x0, #0xdce
  431084:	add	x2, x2, #0x13b
  431088:	mov	w1, #0x953                 	// #2387
  43108c:	bl	404ac4 <feof@plt+0x20f4>
  431090:	sub	sp, sp, #0xb0
  431094:	stp	x29, x30, [sp, #80]
  431098:	stp	x28, x27, [sp, #96]
  43109c:	stp	x26, x25, [sp, #112]
  4310a0:	stp	x24, x23, [sp, #128]
  4310a4:	stp	x22, x21, [sp, #144]
  4310a8:	stp	x20, x19, [sp, #160]
  4310ac:	stp	x3, x1, [sp, #16]
  4310b0:	ldr	x8, [x1, #24]
  4310b4:	add	x29, sp, #0x50
  4310b8:	ldrb	w22, [x0, #1157]
  4310bc:	mov	x25, x2
  4310c0:	stur	x8, [x29, #-24]
  4310c4:	ldrh	w8, [x8, #16]
  4310c8:	mov	x20, x0
  4310cc:	cmp	w8, #0x0
  4310d0:	csinc	w19, w8, wzr, ne  // ne = any
  4310d4:	mov	w8, #0x1c0                 	// #448
  4310d8:	umull	x1, w19, w8
  4310dc:	bl	42939c <feof@plt+0x269cc>
  4310e0:	ldr	x24, [x0, #8]
  4310e4:	add	x8, x19, w19, uxtw #1
  4310e8:	lsl	x26, x8, #4
  4310ec:	mov	x21, x0
  4310f0:	mov	x0, x24
  4310f4:	mov	w1, wzr
  4310f8:	mov	x2, x26
  4310fc:	bl	4024e0 <memset@plt>
  431100:	mov	w23, wzr
  431104:	add	x8, x24, x26
  431108:	add	x9, x20, #0x2b0
  43110c:	mov	w19, #0x201                 	// #513
  431110:	mov	x26, x21
  431114:	stur	x9, [x29, #-32]
  431118:	str	x8, [x21, #16]
  43111c:	str	x24, [sp, #8]
  431120:	str	x21, [sp, #32]
  431124:	b	431138 <feof@plt+0x2e768>
  431128:	ldrb	w9, [x27, #4]
  43112c:	sub	w10, w9, #0x15
  431130:	cmp	w10, #0x1
  431134:	b.ls	431410 <feof@plt+0x2ea40>  // b.plast
  431138:	ldr	x8, [x26, #16]
  43113c:	add	w9, w23, #0x1
  431140:	stur	w23, [x29, #-36]
  431144:	stur	w9, [x29, #-12]
  431148:	str	x8, [x24]
  43114c:	cbz	w22, 43115c <feof@plt+0x2e78c>
  431150:	mov	w0, #0xc8                  	// #200
  431154:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  431158:	str	x0, [x24, #32]
  43115c:	mov	w8, wzr
  431160:	mov	w23, #0x32                  	// #50
  431164:	stur	wzr, [x29, #-16]
  431168:	add	w21, w8, #0x2
  43116c:	stur	w8, [x29, #-8]
  431170:	b	431184 <feof@plt+0x2e7b4>
  431174:	strh	w19, [x20, #24]
  431178:	ldrb	w8, [x27, #4]
  43117c:	cmp	w8, #0x16
  431180:	b.eq	43137c <feof@plt+0x2e9ac>  // b.none
  431184:	ldr	x8, [x24]
  431188:	ldr	x9, [x26, #24]
  43118c:	add	x8, x8, x21, lsl #3
  431190:	cmp	x9, x8
  431194:	b.cs	4311b4 <feof@plt+0x2e7e4>  // b.hs, b.nlast
  431198:	mov	w2, #0x1f40                	// #8000
  43119c:	mov	x0, x20
  4311a0:	mov	x1, x26
  4311a4:	bl	429448 <feof@plt+0x26a78>
  4311a8:	ldr	x8, [x0, #16]
  4311ac:	mov	x26, x0
  4311b0:	str	x8, [x24]
  4311b4:	cbz	w22, 4311d4 <feof@plt+0x2e804>
  4311b8:	cmp	w21, w23
  4311bc:	b.ls	4311d4 <feof@plt+0x2e804>  // b.plast
  4311c0:	ldr	x0, [x24, #32]
  4311c4:	add	w23, w23, #0x3e8
  4311c8:	lsl	x1, x23, #2
  4311cc:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4311d0:	str	x0, [x24, #32]
  4311d4:	sub	x1, x29, #0x4
  4311d8:	mov	x0, x20
  4311dc:	bl	42db3c <feof@plt+0x2b16c>
  4311e0:	ldrb	w8, [x0, #4]
  4311e4:	mov	x28, x0
  4311e8:	cmp	w8, #0x51
  4311ec:	b.ne	4312a0 <feof@plt+0x2e8d0>  // b.any
  4311f0:	mov	x0, x20
  4311f4:	bl	425498 <feof@plt+0x22ac8>
  4311f8:	ldr	q0, [x28]
  4311fc:	ldr	x8, [x28, #16]
  431200:	mov	x27, x0
  431204:	str	q0, [x0]
  431208:	str	x8, [x0, #16]
  43120c:	ldr	x28, [x25]
  431210:	cbz	x28, 431248 <feof@plt+0x2e878>
  431214:	ldp	x8, x9, [x28, #16]
  431218:	sub	x9, x9, x8
  43121c:	cmp	x9, #0x8
  431220:	b.cs	43125c <feof@plt+0x2e88c>  // b.hs, b.nlast
  431224:	ldr	x9, [x28, #8]
  431228:	mov	x0, x20
  43122c:	sub	x8, x8, x9
  431230:	lsl	x1, x8, #1
  431234:	bl	42939c <feof@plt+0x269cc>
  431238:	str	x0, [x25]
  43123c:	str	x28, [x0]
  431240:	ldr	x28, [x25]
  431244:	b	43125c <feof@plt+0x2e88c>
  431248:	mov	w1, #0x100                 	// #256
  43124c:	mov	x0, x20
  431250:	bl	42939c <feof@plt+0x269cc>
  431254:	mov	x28, x0
  431258:	str	x0, [x25]
  43125c:	ldr	x8, [x28, #16]
  431260:	str	x27, [x8]
  431264:	ldr	x8, [x25]
  431268:	ldr	x9, [x8, #16]
  43126c:	add	x9, x9, #0x8
  431270:	str	x9, [x8, #16]
  431274:	ldrb	w8, [x27, #4]
  431278:	cmp	w8, #0x52
  43127c:	b.eq	431174 <feof@plt+0x2e7a4>  // b.none
  431280:	sub	x1, x29, #0x4
  431284:	mov	x0, x20
  431288:	bl	42db3c <feof@plt+0x2b16c>
  43128c:	ldrb	w8, [x0, #4]
  431290:	mov	x27, x0
  431294:	cmp	w8, #0x16
  431298:	b.ne	43120c <feof@plt+0x2e83c>  // b.any
  43129c:	b	431174 <feof@plt+0x2e7a4>
  4312a0:	sub	w9, w8, #0x13
  4312a4:	cmp	w9, #0x12
  4312a8:	b.hi	4312f8 <feof@plt+0x2e928>  // b.pmore
  4312ac:	adrp	x11, 45d000 <_obstack_memory_used@@Base+0xca68>
  4312b0:	add	x11, x11, #0xcb6
  4312b4:	adr	x8, 4312c8 <feof@plt+0x2e8f8>
  4312b8:	ldrb	w10, [x11, x9]
  4312bc:	add	x8, x8, x10, lsl #2
  4312c0:	mov	x27, x28
  4312c4:	br	x8
  4312c8:	ldur	w8, [x29, #-16]
  4312cc:	ldur	w12, [x29, #-8]
  4312d0:	cbnz	w8, 431340 <feof@plt+0x2e970>
  4312d4:	ldur	x9, [x29, #-24]
  4312d8:	ldrb	w8, [x9, #19]
  4312dc:	tbz	w8, #3, 431378 <feof@plt+0x2e9a8>
  4312e0:	ldrh	w8, [x9, #16]
  4312e4:	ldur	w9, [x29, #-12]
  4312e8:	cmp	w9, w8
  4312ec:	b.ne	431378 <feof@plt+0x2e9a8>  // b.any
  4312f0:	stur	wzr, [x29, #-16]
  4312f4:	b	431340 <feof@plt+0x2e970>
  4312f8:	cmp	w8, #0x53
  4312fc:	b.ne	43132c <feof@plt+0x2e95c>  // b.any
  431300:	ldur	w12, [x29, #-8]
  431304:	mov	w8, wzr
  431308:	cbz	w12, 431168 <feof@plt+0x2e798>
  43130c:	b	431340 <feof@plt+0x2e970>
  431310:	ldur	w8, [x29, #-16]
  431314:	add	w8, w8, #0x1
  431318:	b	431328 <feof@plt+0x2e958>
  43131c:	ldur	w8, [x29, #-16]
  431320:	cbz	w8, 431378 <feof@plt+0x2e9a8>
  431324:	sub	w8, w8, #0x1
  431328:	stur	w8, [x29, #-16]
  43132c:	ldur	w12, [x29, #-8]
  431330:	b	431340 <feof@plt+0x2e970>
  431334:	ldrb	w8, [x28, #6]
  431338:	ldur	w12, [x29, #-8]
  43133c:	tbnz	w8, #6, 431378 <feof@plt+0x2e9a8>
  431340:	ldrb	w10, [x20, #1157]
  431344:	ldr	x9, [x24]
  431348:	mov	w8, w12
  43134c:	cbz	w10, 43136c <feof@plt+0x2e99c>
  431350:	ldr	x10, [x24, #32]
  431354:	ldur	w11, [x29, #-4]
  431358:	str	x28, [x9, x8, lsl #3]
  43135c:	cbz	x10, 431364 <feof@plt+0x2e994>
  431360:	str	w11, [x10, x8, lsl #2]
  431364:	add	w8, w12, #0x1
  431368:	b	431168 <feof@plt+0x2e798>
  43136c:	str	x28, [x9, x8, lsl #3]
  431370:	add	w8, w12, #0x1
  431374:	b	431168 <feof@plt+0x2e798>
  431378:	mov	x27, x28
  43137c:	ldp	w23, w8, [x29, #-12]
  431380:	mov	w8, w8
  431384:	cbz	x8, 4313a8 <feof@plt+0x2e9d8>
  431388:	ldr	x9, [x24]
  43138c:	sub	w10, w8, #0x1
  431390:	sub	x8, x8, #0x1
  431394:	ldr	x9, [x9, w10, uxtw #3]
  431398:	ldrb	w9, [x9, #4]
  43139c:	cmp	w9, #0x53
  4313a0:	b.eq	431384 <feof@plt+0x2e9b4>  // b.none
  4313a4:	add	w8, w8, #0x1
  4313a8:	str	w8, [x24, #24]
  4313ac:	ldrb	w11, [x20, #1157]
  4313b0:	ldr	x10, [x24]
  4313b4:	mov	w9, w8
  4313b8:	cbz	w11, 4313d8 <feof@plt+0x2ea08>
  4313bc:	ldr	x8, [x24, #32]
  4313c0:	ldr	w11, [x20, #688]
  4313c4:	ldur	x12, [x29, #-32]
  4313c8:	str	x12, [x10, x9, lsl #3]
  4313cc:	cbz	x8, 4313e0 <feof@plt+0x2ea10>
  4313d0:	str	w11, [x8, x9, lsl #2]
  4313d4:	b	4313e0 <feof@plt+0x2ea10>
  4313d8:	ldur	x8, [x29, #-32]
  4313dc:	str	x8, [x10, x9, lsl #3]
  4313e0:	ldur	x8, [x29, #-24]
  4313e4:	ldrh	w8, [x8, #16]
  4313e8:	cmp	w23, w8
  4313ec:	b.hi	431128 <feof@plt+0x2e758>  // b.pmore
  4313f0:	mov	x10, x24
  4313f4:	ldr	x11, [x10], #48
  4313f8:	add	w9, w9, #0x1
  4313fc:	cmp	w23, w8
  431400:	add	x9, x11, w9, uxtw #3
  431404:	csel	x24, x24, x10, eq  // eq = none
  431408:	str	x9, [x26, #16]
  43140c:	b	431128 <feof@plt+0x2e758>
  431410:	cmp	w9, #0x16
  431414:	b.ne	43145c <feof@plt+0x2ea8c>  // b.any
  431418:	ldr	x8, [x20, #136]
  43141c:	ldr	x19, [sp, #32]
  431420:	ldr	x8, [x8, #8]
  431424:	cbnz	x8, 431430 <feof@plt+0x2ea60>
  431428:	ldrb	w8, [x20, #16]
  43142c:	cbz	w8, 43143c <feof@plt+0x2ea6c>
  431430:	mov	w1, #0x1                   	// #1
  431434:	mov	x0, x20
  431438:	bl	42e2c0 <feof@plt+0x2b8f0>
  43143c:	ldr	x8, [sp, #24]
  431440:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  431444:	add	x2, x2, #0x197
  431448:	mov	w1, #0x3                   	// #3
  43144c:	ldr	x3, [x8]
  431450:	mov	x0, x20
  431454:	bl	41de04 <feof@plt+0x1b434>
  431458:	b	4314cc <feof@plt+0x2eafc>
  43145c:	ldr	x19, [sp, #32]
  431460:	ldur	x1, [x29, #-24]
  431464:	ldur	w9, [x29, #-36]
  431468:	mov	w25, w23
  43146c:	cbnz	w9, 43148c <feof@plt+0x2eabc>
  431470:	cbz	w8, 43147c <feof@plt+0x2eaac>
  431474:	mov	w25, #0x1                   	// #1
  431478:	b	43148c <feof@plt+0x2eabc>
  43147c:	ldr	x8, [sp, #8]
  431480:	ldr	w8, [x8, #24]
  431484:	cmp	w8, #0x0
  431488:	cset	w25, ne  // ne = any
  43148c:	ldr	x2, [sp, #24]
  431490:	mov	x0, x20
  431494:	mov	w3, w25
  431498:	mov	x21, x1
  43149c:	bl	42d804 <feof@plt+0x2ae34>
  4314a0:	tbz	w0, #0, 4314cc <feof@plt+0x2eafc>
  4314a4:	ldrb	w8, [x21, #19]
  4314a8:	tbz	w8, #3, 43151c <feof@plt+0x2eb4c>
  4314ac:	ldrh	w8, [x21, #16]
  4314b0:	cmp	w25, w8
  4314b4:	b.cs	431500 <feof@plt+0x2eb30>  // b.hs, b.nlast
  4314b8:	ldr	x10, [sp, #8]
  4314bc:	mov	w9, #0x30                  	// #48
  4314c0:	madd	x8, x8, x9, x10
  4314c4:	stur	xzr, [x8, #-48]
  4314c8:	b	43151c <feof@plt+0x2eb4c>
  4314cc:	mov	x0, x20
  4314d0:	mov	x1, x19
  4314d4:	bl	42937c <feof@plt+0x269ac>
  4314d8:	mov	x19, xzr
  4314dc:	mov	x0, x19
  4314e0:	ldp	x20, x19, [sp, #160]
  4314e4:	ldp	x22, x21, [sp, #144]
  4314e8:	ldp	x24, x23, [sp, #128]
  4314ec:	ldp	x26, x25, [sp, #112]
  4314f0:	ldp	x28, x27, [sp, #96]
  4314f4:	ldp	x29, x30, [sp, #80]
  4314f8:	add	sp, sp, #0xb0
  4314fc:	ret
  431500:	cmp	w25, #0x1
  431504:	b.ne	43151c <feof@plt+0x2eb4c>  // b.any
  431508:	ldr	x9, [sp, #8]
  43150c:	ldr	w9, [x9, #24]
  431510:	cbnz	w9, 43151c <feof@plt+0x2eb4c>
  431514:	ldrb	w9, [x20, #1153]
  431518:	cbz	w9, 4314b8 <feof@plt+0x2eae8>
  43151c:	ldr	x8, [sp, #16]
  431520:	cbz	x8, 4314dc <feof@plt+0x2eb0c>
  431524:	str	w23, [x8]
  431528:	b	4314dc <feof@plt+0x2eb0c>
  43152c:	sub	sp, sp, #0x60
  431530:	stp	x29, x30, [sp, #16]
  431534:	stp	x26, x25, [sp, #32]
  431538:	stp	x24, x23, [sp, #48]
  43153c:	stp	x22, x21, [sp, #64]
  431540:	stp	x20, x19, [sp, #80]
  431544:	ldr	w8, [x1, #24]
  431548:	add	x29, sp, #0x10
  43154c:	cbz	w8, 431714 <feof@plt+0x2ed44>
  431550:	ldr	x8, [x1, #8]
  431554:	mov	x20, x1
  431558:	cbnz	x8, 431714 <feof@plt+0x2ed44>
  43155c:	ldrb	w8, [x0, #1138]
  431560:	ldrb	w21, [x0, #1157]
  431564:	mov	x19, x0
  431568:	strb	wzr, [x0, #1138]
  43156c:	cmp	w8, #0x0
  431570:	mov	w0, #0x800                 	// #2048
  431574:	cset	w22, ne  // ne = any
  431578:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  43157c:	str	x0, [x20, #8]
  431580:	ldrb	w8, [x19, #1157]
  431584:	cbz	w8, 431594 <feof@plt+0x2ebc4>
  431588:	mov	w0, #0x400                 	// #1024
  43158c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  431590:	str	x0, [x20, #40]
  431594:	cbz	w21, 431614 <feof@plt+0x2ec44>
  431598:	ldr	x8, [x19, #136]
  43159c:	ldr	x25, [x20, #32]
  4315a0:	ldr	x23, [x20]
  4315a4:	ldr	w24, [x20, #24]
  4315a8:	ldr	w9, [x8, #48]
  4315ac:	cmp	w9, #0x2
  4315b0:	add	x9, x8, #0x28
  4315b4:	b.ne	4315bc <feof@plt+0x2ebec>  // b.any
  4315b8:	ldr	x9, [x9]
  4315bc:	ldr	x21, [x8]
  4315c0:	ldr	x26, [x9]
  4315c4:	cbnz	x21, 4315ec <feof@plt+0x2ec1c>
  4315c8:	mov	w0, #0x38                  	// #56
  4315cc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4315d0:	movi	v0.2d, #0x0
  4315d4:	str	xzr, [x0, #48]
  4315d8:	stp	q0, q0, [x0, #16]
  4315dc:	ldr	x8, [x19, #136]
  4315e0:	mov	x21, x0
  4315e4:	stp	xzr, x8, [x0]
  4315e8:	str	x0, [x8]
  4315ec:	mov	w8, #0x2                   	// #2
  4315f0:	mov	w0, #0x18                  	// #24
  4315f4:	str	x21, [x19, #136]
  4315f8:	str	w8, [x21, #48]
  4315fc:	str	xzr, [x21, #32]
  431600:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  431604:	stp	x26, x25, [x0]
  431608:	str	x25, [x0, #16]
  43160c:	str	x0, [x21, #40]
  431610:	b	431658 <feof@plt+0x2ec88>
  431614:	ldr	x8, [x19, #136]
  431618:	ldr	x23, [x20]
  43161c:	ldr	w24, [x20, #24]
  431620:	ldr	x21, [x8]
  431624:	cbnz	x21, 43164c <feof@plt+0x2ec7c>
  431628:	mov	w0, #0x38                  	// #56
  43162c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  431630:	movi	v0.2d, #0x0
  431634:	str	xzr, [x0, #48]
  431638:	stp	q0, q0, [x0, #16]
  43163c:	ldr	x8, [x19, #136]
  431640:	mov	x21, x0
  431644:	stp	xzr, x8, [x0]
  431648:	str	x0, [x8]
  43164c:	str	x21, [x19, #136]
  431650:	stp	xzr, xzr, [x21, #32]
  431654:	str	wzr, [x21, #48]
  431658:	add	w8, w24, #0x1
  43165c:	add	x8, x23, w8, uxtw #3
  431660:	stp	x23, x8, [x21, #16]
  431664:	ldr	w8, [x20, #28]
  431668:	mov	w21, #0x100                 	// #256
  43166c:	b	43167c <feof@plt+0x2ecac>
  431670:	str	x0, [x9, x8, lsl #3]
  431674:	add	w8, w8, #0x1
  431678:	str	w8, [x20, #28]
  43167c:	add	w23, w8, #0x1
  431680:	cmp	x21, x23
  431684:	b.cs	4316c4 <feof@plt+0x2ecf4>  // b.hs, b.nlast
  431688:	ldr	x0, [x20, #8]
  43168c:	lsl	x1, x23, #4
  431690:	lsl	x21, x23, #1
  431694:	bl	450728 <_obstack_memory_used@@Base+0x190>
  431698:	str	x0, [x20, #8]
  43169c:	ldrb	w8, [x19, #1157]
  4316a0:	cbz	w8, 4316c4 <feof@plt+0x2ecf4>
  4316a4:	ldr	x0, [x20, #40]
  4316a8:	lsl	x1, x23, #3
  4316ac:	cbz	x0, 4316b8 <feof@plt+0x2ece8>
  4316b0:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4316b4:	b	4316c0 <feof@plt+0x2ecf0>
  4316b8:	mov	x0, x1
  4316bc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4316c0:	str	x0, [x20, #40]
  4316c4:	sub	x1, x29, #0x4
  4316c8:	mov	x0, x19
  4316cc:	bl	42db3c <feof@plt+0x2b16c>
  4316d0:	ldrb	w8, [x0, #4]
  4316d4:	cmp	w8, #0x16
  4316d8:	b.eq	431708 <feof@plt+0x2ed38>  // b.none
  4316dc:	ldr	w8, [x20, #28]
  4316e0:	ldrb	w10, [x19, #1157]
  4316e4:	ldr	x9, [x20, #8]
  4316e8:	cbz	w10, 431670 <feof@plt+0x2eca0>
  4316ec:	ldr	x10, [x20, #40]
  4316f0:	ldur	w11, [x29, #-4]
  4316f4:	str	x0, [x9, x8, lsl #3]
  4316f8:	cbz	x10, 431674 <feof@plt+0x2eca4>
  4316fc:	str	w11, [x10, x8, lsl #2]
  431700:	ldr	w8, [x20, #28]
  431704:	b	431674 <feof@plt+0x2eca4>
  431708:	mov	x0, x19
  43170c:	bl	42da2c <feof@plt+0x2b05c>
  431710:	strb	w22, [x19, #1138]
  431714:	ldp	x20, x19, [sp, #80]
  431718:	ldp	x22, x21, [sp, #64]
  43171c:	ldp	x24, x23, [sp, #48]
  431720:	ldp	x26, x25, [sp, #32]
  431724:	ldp	x29, x30, [sp, #16]
  431728:	add	sp, sp, #0x60
  43172c:	ret
  431730:	stp	x29, x30, [sp, #-16]!
  431734:	ldrb	w8, [x0, #9]
  431738:	mov	x29, sp
  43173c:	cbz	w8, 4317b4 <feof@plt+0x2ede4>
  431740:	ldrb	w9, [x1, #4]
  431744:	cmp	w9, #0x35
  431748:	b.ne	431760 <feof@plt+0x2ed90>  // b.any
  43174c:	ldr	x8, [x0]
  431750:	ldr	x10, [x1, #8]
  431754:	ldr	x11, [x8, #1280]
  431758:	cmp	x10, x11
  43175c:	b.eq	4317d4 <feof@plt+0x2ee04>  // b.none
  431760:	ldr	w8, [x0, #12]
  431764:	cmp	w8, #0x1
  431768:	b.ne	431788 <feof@plt+0x2edb8>  // b.any
  43176c:	cmp	w9, #0x14
  431770:	b.ne	4317c0 <feof@plt+0x2edf0>  // b.any
  431774:	mov	w8, #0x2                   	// #2
  431778:	str	w8, [x0, #12]
  43177c:	mov	w0, #0x1                   	// #1
  431780:	ldp	x29, x30, [sp], #16
  431784:	ret
  431788:	cmp	w8, #0x2
  43178c:	b.lt	4317b4 <feof@plt+0x2ede4>  // b.tstop
  431790:	b.ne	431828 <feof@plt+0x2ee58>  // b.any
  431794:	cmp	w9, #0x26
  431798:	b.ne	431820 <feof@plt+0x2ee50>  // b.any
  43179c:	ldr	x0, [x0]
  4317a0:	ldr	w2, [x1]
  4317a4:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0xda68>
  4317a8:	add	x3, x3, #0x2ec
  4317ac:	mov	w1, #0x3                   	// #3
  4317b0:	b	4317f4 <feof@plt+0x2ee24>
  4317b4:	mov	w0, #0x2                   	// #2
  4317b8:	ldp	x29, x30, [sp], #16
  4317bc:	ret
  4317c0:	ldr	x8, [x0]
  4317c4:	ldr	w2, [x0, #20]
  4317c8:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0xda68>
  4317cc:	add	x3, x3, #0x2b9
  4317d0:	b	4317ec <feof@plt+0x2ee1c>
  4317d4:	ldr	w9, [x0, #12]
  4317d8:	cmp	w9, #0x1
  4317dc:	b.lt	431804 <feof@plt+0x2ee34>  // b.tstop
  4317e0:	ldr	w2, [x1]
  4317e4:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0xda68>
  4317e8:	add	x3, x3, #0x28f
  4317ec:	mov	w1, #0x3                   	// #3
  4317f0:	mov	x0, x8
  4317f4:	bl	41e6b4 <feof@plt+0x1bce4>
  4317f8:	mov	w0, wzr
  4317fc:	ldp	x29, x30, [sp], #16
  431800:	ret
  431804:	add	w8, w9, #0x1
  431808:	str	w8, [x0, #12]
  43180c:	ldr	w8, [x1]
  431810:	str	w8, [x0, #20]
  431814:	mov	w0, #0x3                   	// #3
  431818:	ldp	x29, x30, [sp], #16
  43181c:	ret
  431820:	mov	w8, #0x3                   	// #3
  431824:	str	w8, [x0, #12]
  431828:	ldrb	w9, [x0, #10]
  43182c:	strb	wzr, [x0, #10]
  431830:	ldrb	w10, [x1, #4]
  431834:	cmp	w10, #0x14
  431838:	b.eq	431860 <feof@plt+0x2ee90>  // b.none
  43183c:	cmp	w10, #0x15
  431840:	b.eq	43186c <feof@plt+0x2ee9c>  // b.none
  431844:	cmp	w10, #0x26
  431848:	b.ne	431890 <feof@plt+0x2eec0>  // b.any
  43184c:	mov	w8, #0x1                   	// #1
  431850:	strb	w8, [x0, #10]
  431854:	ldr	w8, [x1]
  431858:	str	w8, [x0, #16]
  43185c:	b	431890 <feof@plt+0x2eec0>
  431860:	add	w8, w8, #0x1
  431864:	str	w8, [x0, #12]
  431868:	b	431890 <feof@plt+0x2eec0>
  43186c:	sub	w8, w8, #0x1
  431870:	cmp	w8, #0x2
  431874:	str	w8, [x0, #12]
  431878:	b.ne	431890 <feof@plt+0x2eec0>  // b.any
  43187c:	str	wzr, [x0, #12]
  431880:	cbnz	w9, 43179c <feof@plt+0x2edcc>
  431884:	mov	w0, #0x4                   	// #4
  431888:	ldp	x29, x30, [sp], #16
  43188c:	ret
  431890:	ldrb	w8, [x0, #8]
  431894:	cmp	w8, #0x0
  431898:	mov	w8, #0x1                   	// #1
  43189c:	cinc	w0, w8, ne  // ne = any
  4318a0:	ldp	x29, x30, [sp], #16
  4318a4:	ret
  4318a8:	mov	w0, #0x1                   	// #1
  4318ac:	mov	w1, #0x38                  	// #56
  4318b0:	b	4506d8 <_obstack_memory_used@@Base+0x140>
  4318b4:	stp	x29, x30, [sp, #-32]!
  4318b8:	stp	x20, x19, [sp, #16]
  4318bc:	mov	x19, x0
  4318c0:	ldr	x0, [x0]
  4318c4:	mov	x29, sp
  4318c8:	cbz	x0, 4318f8 <feof@plt+0x2ef28>
  4318cc:	ldr	w8, [x19, #8]
  4318d0:	cbz	w8, 4318f4 <feof@plt+0x2ef24>
  4318d4:	mov	x20, xzr
  4318d8:	ldr	x0, [x0, x20, lsl #3]
  4318dc:	bl	4024c0 <free@plt>
  4318e0:	ldr	w8, [x19, #8]
  4318e4:	ldr	x0, [x19]
  4318e8:	add	x20, x20, #0x1
  4318ec:	cmp	x20, x8
  4318f0:	b.cc	4318d8 <feof@plt+0x2ef08>  // b.lo, b.ul, b.last
  4318f4:	bl	4024c0 <free@plt>
  4318f8:	ldr	x0, [x19, #16]
  4318fc:	cbz	x0, 43192c <feof@plt+0x2ef5c>
  431900:	ldr	w8, [x19, #24]
  431904:	cbz	w8, 431928 <feof@plt+0x2ef58>
  431908:	mov	x20, xzr
  43190c:	ldr	x0, [x0, x20, lsl #3]
  431910:	bl	4024c0 <free@plt>
  431914:	ldr	w8, [x19, #24]
  431918:	ldr	x0, [x19, #16]
  43191c:	add	x20, x20, #0x1
  431920:	cmp	x20, x8
  431924:	b.cc	43190c <feof@plt+0x2ef3c>  // b.lo, b.ul, b.last
  431928:	bl	4024c0 <free@plt>
  43192c:	ldr	x0, [x19, #32]
  431930:	cbz	x0, 431968 <feof@plt+0x2ef98>
  431934:	ldr	w8, [x19, #48]
  431938:	cbz	w8, 43195c <feof@plt+0x2ef8c>
  43193c:	mov	x20, xzr
  431940:	ldr	x0, [x0, x20, lsl #3]
  431944:	bl	4024c0 <free@plt>
  431948:	ldr	w8, [x19, #48]
  43194c:	ldr	x0, [x19, #32]
  431950:	add	x20, x20, #0x1
  431954:	cmp	x20, x8
  431958:	b.cc	431940 <feof@plt+0x2ef70>  // b.lo, b.ul, b.last
  43195c:	bl	4024c0 <free@plt>
  431960:	ldr	x0, [x19, #40]
  431964:	bl	4024c0 <free@plt>
  431968:	mov	x0, x19
  43196c:	ldp	x20, x19, [sp, #16]
  431970:	ldp	x29, x30, [sp], #32
  431974:	b	4024c0 <free@plt>
  431978:	stp	x29, x30, [sp, #-48]!
  43197c:	stp	x22, x21, [sp, #16]
  431980:	stp	x20, x19, [sp, #32]
  431984:	ldp	w8, w9, [x0, #8]
  431988:	mov	w20, w2
  43198c:	mov	x19, x0
  431990:	mov	x21, x1
  431994:	cmp	w8, w9
  431998:	mov	x29, sp
  43199c:	b.ne	4319bc <feof@plt+0x2efec>  // b.any
  4319a0:	ldr	x0, [x19]
  4319a4:	lsl	w8, w8, #1
  4319a8:	add	w8, w8, #0x4
  4319ac:	lsl	x1, x8, #3
  4319b0:	str	w8, [x19, #12]
  4319b4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4319b8:	str	x0, [x19]
  4319bc:	ldr	x8, [x19, #32]
  4319c0:	cbz	x8, 431a48 <feof@plt+0x2f078>
  4319c4:	ldr	w9, [x19, #48]
  4319c8:	cbz	w9, 431a48 <feof@plt+0x2f078>
  4319cc:	mov	x22, xzr
  4319d0:	ldr	x9, [x19, #40]
  4319d4:	lsl	x10, x22, #3
  4319d8:	ldr	x0, [x8, x10]
  4319dc:	mov	x1, x21
  4319e0:	ldr	x2, [x9, x10]
  4319e4:	bl	44eda4 <feof@plt+0x4c3d4>
  4319e8:	cbnz	w0, 431a28 <feof@plt+0x2f058>
  4319ec:	ldr	x8, [x19, #40]
  4319f0:	ldr	x8, [x8, x22, lsl #3]
  4319f4:	add	x9, x21, x8
  4319f8:	ldrb	w10, [x9]
  4319fc:	cmp	w10, #0x2f
  431a00:	b.ne	431a28 <feof@plt+0x2f058>  // b.any
  431a04:	ldrb	w10, [x9, #1]
  431a08:	cmp	w10, #0x2e
  431a0c:	b.ne	431a40 <feof@plt+0x2f070>  // b.any
  431a10:	ldrb	w10, [x9, #2]
  431a14:	cmp	w10, #0x2e
  431a18:	b.ne	431a40 <feof@plt+0x2f070>  // b.any
  431a1c:	ldrb	w9, [x9, #3]
  431a20:	cmp	w9, #0x2f
  431a24:	b.ne	431a40 <feof@plt+0x2f070>  // b.any
  431a28:	ldr	w8, [x19, #48]
  431a2c:	add	x22, x22, #0x1
  431a30:	cmp	x22, x8
  431a34:	b.cs	431a48 <feof@plt+0x2f078>  // b.hs, b.nlast
  431a38:	ldr	x8, [x19, #32]
  431a3c:	b	4319d0 <feof@plt+0x2f000>
  431a40:	add	x8, x21, x8
  431a44:	add	x21, x8, #0x1
  431a48:	ldrb	w8, [x21]
  431a4c:	cmp	w8, #0x2e
  431a50:	b.ne	431a74 <feof@plt+0x2f0a4>  // b.any
  431a54:	ldrb	w8, [x21, #1]
  431a58:	cmp	w8, #0x2f
  431a5c:	b.ne	431a74 <feof@plt+0x2f0a4>  // b.any
  431a60:	add	x21, x21, #0x1
  431a64:	ldrb	w8, [x21, #1]!
  431a68:	cmp	w8, #0x2f
  431a6c:	b.eq	431a64 <feof@plt+0x2f094>  // b.none
  431a70:	b	431a4c <feof@plt+0x2f07c>
  431a74:	mov	x0, x21
  431a78:	cbz	w20, 431a84 <feof@plt+0x2f0b4>
  431a7c:	bl	431aac <feof@plt+0x2f0dc>
  431a80:	b	431a88 <feof@plt+0x2f0b8>
  431a84:	bl	4507c4 <_obstack_memory_used@@Base+0x22c>
  431a88:	ldr	w8, [x19, #8]
  431a8c:	ldr	x9, [x19]
  431a90:	add	w10, w8, #0x1
  431a94:	str	w10, [x19, #8]
  431a98:	str	x0, [x9, x8, lsl #3]
  431a9c:	ldp	x20, x19, [sp, #32]
  431aa0:	ldp	x22, x21, [sp, #16]
  431aa4:	ldp	x29, x30, [sp], #48
  431aa8:	ret
  431aac:	stp	x29, x30, [sp, #-32]!
  431ab0:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  431ab4:	str	x19, [sp, #16]
  431ab8:	mov	x19, x0
  431abc:	mov	w8, wzr
  431ac0:	add	x9, x9, #0x5db
  431ac4:	mov	x10, x0
  431ac8:	mov	x29, sp
  431acc:	b	431ae0 <feof@plt+0x2f110>
  431ad0:	sub	w8, w8, w11
  431ad4:	add	w8, w8, #0x1
  431ad8:	add	x10, x10, #0x1
  431adc:	add	w8, w8, #0x1
  431ae0:	ldrb	w11, [x10]
  431ae4:	cmp	w11, #0x24
  431ae8:	b.hi	431ad8 <feof@plt+0x2f108>  // b.pmore
  431aec:	adr	x12, 431ad4 <feof@plt+0x2f104>
  431af0:	ldrb	w13, [x9, x11]
  431af4:	add	x12, x12, x13, lsl #2
  431af8:	br	x12
  431afc:	mov	x11, xzr
  431b00:	add	x12, x10, x11
  431b04:	sub	x12, x12, #0x1
  431b08:	cmp	x12, x19
  431b0c:	b.cc	431ad0 <feof@plt+0x2f100>  // b.lo, b.ul, b.last
  431b10:	ldrb	w12, [x12]
  431b14:	sub	x11, x11, #0x1
  431b18:	cmp	w12, #0x5c
  431b1c:	b.eq	431b00 <feof@plt+0x2f130>  // b.none
  431b20:	sub	w8, w8, w11
  431b24:	b	431ad8 <feof@plt+0x2f108>
  431b28:	add	w8, w8, #0x1
  431b2c:	sxtw	x0, w8
  431b30:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  431b34:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  431b38:	sub	x8, x19, #0x1
  431b3c:	add	x9, x9, #0x600
  431b40:	mov	w10, #0x5c                  	// #92
  431b44:	mov	w11, #0x24                  	// #36
  431b48:	mov	x13, x19
  431b4c:	mov	x12, x0
  431b50:	b	431b64 <feof@plt+0x2f194>
  431b54:	strb	w10, [x12], #1
  431b58:	ldrb	w14, [x13], #1
  431b5c:	add	x8, x8, #0x1
  431b60:	strb	w14, [x12], #1
  431b64:	ldrb	w14, [x13]
  431b68:	cmp	w14, #0x24
  431b6c:	b.hi	431b58 <feof@plt+0x2f188>  // b.pmore
  431b70:	adr	x15, 431b54 <feof@plt+0x2f184>
  431b74:	ldrb	w16, [x9, x14]
  431b78:	add	x15, x15, x16, lsl #2
  431b7c:	br	x15
  431b80:	mov	x14, x8
  431b84:	cmp	x14, x19
  431b88:	b.cc	431b54 <feof@plt+0x2f184>  // b.lo, b.ul, b.last
  431b8c:	ldrb	w15, [x14], #-1
  431b90:	strb	w10, [x12], #1
  431b94:	cmp	w15, #0x5c
  431b98:	b.eq	431b84 <feof@plt+0x2f1b4>  // b.none
  431b9c:	b	431b58 <feof@plt+0x2f188>
  431ba0:	strb	w11, [x12], #1
  431ba4:	b	431b58 <feof@plt+0x2f188>
  431ba8:	ldr	x19, [sp, #16]
  431bac:	strb	wzr, [x12]
  431bb0:	ldp	x29, x30, [sp], #32
  431bb4:	ret
  431bb8:	stp	x29, x30, [sp, #-48]!
  431bbc:	stp	x20, x19, [sp, #32]
  431bc0:	ldr	w8, [x0, #8]
  431bc4:	str	x21, [sp, #16]
  431bc8:	mov	x29, sp
  431bcc:	cbnz	w8, 431c44 <feof@plt+0x2f274>
  431bd0:	ldrb	w8, [x1]
  431bd4:	mov	x19, x0
  431bd8:	cbz	w8, 431c58 <feof@plt+0x2f288>
  431bdc:	mov	x0, x1
  431be0:	bl	4501c4 <feof@plt+0x4d7f4>
  431be4:	mov	x21, x0
  431be8:	bl	402420 <strlen@plt>
  431bec:	add	x9, x0, #0x12
  431bf0:	mov	x8, sp
  431bf4:	and	x9, x9, #0xfffffffffffffff0
  431bf8:	sub	x20, x8, x9
  431bfc:	mov	sp, x20
  431c00:	mov	x0, x20
  431c04:	mov	x1, x21
  431c08:	bl	402590 <strcpy@plt>
  431c0c:	mov	w1, #0x2e                  	// #46
  431c10:	mov	x0, x20
  431c14:	bl	4027a0 <strrchr@plt>
  431c18:	cbnz	x0, 431c28 <feof@plt+0x2f258>
  431c1c:	mov	x0, x20
  431c20:	bl	402420 <strlen@plt>
  431c24:	add	x0, x20, x0
  431c28:	mov	w8, #0x6f2e                	// #28462
  431c2c:	strb	wzr, [x0, #2]
  431c30:	strh	w8, [x0]
  431c34:	mov	w2, #0x1                   	// #1
  431c38:	mov	x0, x19
  431c3c:	mov	x1, x20
  431c40:	bl	431978 <feof@plt+0x2efa8>
  431c44:	mov	sp, x29
  431c48:	ldp	x20, x19, [sp, #32]
  431c4c:	ldr	x21, [sp, #16]
  431c50:	ldp	x29, x30, [sp], #48
  431c54:	ret
  431c58:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0xca68>
  431c5c:	add	x1, x1, #0x933
  431c60:	mov	w2, #0x1                   	// #1
  431c64:	mov	x0, x19
  431c68:	mov	sp, x29
  431c6c:	ldp	x20, x19, [sp, #32]
  431c70:	ldr	x21, [sp, #16]
  431c74:	ldp	x29, x30, [sp], #48
  431c78:	b	431978 <feof@plt+0x2efa8>
  431c7c:	stp	x29, x30, [sp, #-48]!
  431c80:	stp	x20, x19, [sp, #32]
  431c84:	ldr	x8, [x0, #32]
  431c88:	mov	x19, x0
  431c8c:	mov	x20, x1
  431c90:	str	x21, [sp, #16]
  431c94:	mov	x29, sp
  431c98:	cbz	x8, 431d20 <feof@plt+0x2f350>
  431c9c:	ldr	w9, [x19, #48]
  431ca0:	cbz	w9, 431d20 <feof@plt+0x2f350>
  431ca4:	mov	x21, xzr
  431ca8:	ldr	x9, [x19, #40]
  431cac:	lsl	x10, x21, #3
  431cb0:	ldr	x0, [x8, x10]
  431cb4:	mov	x1, x20
  431cb8:	ldr	x2, [x9, x10]
  431cbc:	bl	44eda4 <feof@plt+0x4c3d4>
  431cc0:	cbnz	w0, 431d00 <feof@plt+0x2f330>
  431cc4:	ldr	x8, [x19, #40]
  431cc8:	ldr	x8, [x8, x21, lsl #3]
  431ccc:	add	x9, x20, x8
  431cd0:	ldrb	w10, [x9]
  431cd4:	cmp	w10, #0x2f
  431cd8:	b.ne	431d00 <feof@plt+0x2f330>  // b.any
  431cdc:	ldrb	w10, [x9, #1]
  431ce0:	cmp	w10, #0x2e
  431ce4:	b.ne	431d18 <feof@plt+0x2f348>  // b.any
  431ce8:	ldrb	w10, [x9, #2]
  431cec:	cmp	w10, #0x2e
  431cf0:	b.ne	431d18 <feof@plt+0x2f348>  // b.any
  431cf4:	ldrb	w9, [x9, #3]
  431cf8:	cmp	w9, #0x2f
  431cfc:	b.ne	431d18 <feof@plt+0x2f348>  // b.any
  431d00:	ldr	w8, [x19, #48]
  431d04:	add	x21, x21, #0x1
  431d08:	cmp	x21, x8
  431d0c:	b.cs	431d20 <feof@plt+0x2f350>  // b.hs, b.nlast
  431d10:	ldr	x8, [x19, #32]
  431d14:	b	431ca8 <feof@plt+0x2f2d8>
  431d18:	add	x8, x20, x8
  431d1c:	add	x20, x8, #0x1
  431d20:	ldrb	w8, [x20]
  431d24:	cmp	w8, #0x2e
  431d28:	b.ne	431d4c <feof@plt+0x2f37c>  // b.any
  431d2c:	ldrb	w8, [x20, #1]
  431d30:	cmp	w8, #0x2f
  431d34:	b.ne	431d4c <feof@plt+0x2f37c>  // b.any
  431d38:	add	x20, x20, #0x1
  431d3c:	ldrb	w8, [x20, #1]!
  431d40:	cmp	w8, #0x2f
  431d44:	b.eq	431d3c <feof@plt+0x2f36c>  // b.none
  431d48:	b	431d24 <feof@plt+0x2f354>
  431d4c:	mov	x0, x20
  431d50:	bl	431aac <feof@plt+0x2f0dc>
  431d54:	ldp	w8, w9, [x19, #24]
  431d58:	mov	x20, x0
  431d5c:	cmp	w8, w9
  431d60:	b.ne	431d88 <feof@plt+0x2f3b8>  // b.any
  431d64:	ldr	x0, [x19, #16]
  431d68:	lsl	w8, w8, #1
  431d6c:	add	w8, w8, #0x8
  431d70:	lsl	x1, x8, #3
  431d74:	str	w8, [x19, #28]
  431d78:	bl	450728 <_obstack_memory_used@@Base+0x190>
  431d7c:	ldr	w8, [x19, #24]
  431d80:	str	x0, [x19, #16]
  431d84:	b	431d8c <feof@plt+0x2f3bc>
  431d88:	ldr	x0, [x19, #16]
  431d8c:	add	w9, w8, #0x1
  431d90:	str	w9, [x19, #24]
  431d94:	str	x20, [x0, w8, uxtw #3]
  431d98:	ldp	x20, x19, [sp, #32]
  431d9c:	ldr	x21, [sp, #16]
  431da0:	ldp	x29, x30, [sp], #48
  431da4:	ret
  431da8:	stp	x29, x30, [sp, #-64]!
  431dac:	stp	x24, x23, [sp, #16]
  431db0:	stp	x22, x21, [sp, #32]
  431db4:	stp	x20, x19, [sp, #48]
  431db8:	ldrb	w8, [x1]
  431dbc:	mov	x29, sp
  431dc0:	cbz	w8, 431e90 <feof@plt+0x2f4c0>
  431dc4:	mov	x20, x1
  431dc8:	mov	x19, x0
  431dcc:	b	431df8 <feof@plt+0x2f428>
  431dd0:	ldr	x9, [x19, #32]
  431dd4:	mov	w10, w8
  431dd8:	lsl	x10, x10, #3
  431ddc:	add	w8, w8, #0x1
  431de0:	str	x22, [x9, x10]
  431de4:	ldr	x9, [x19, #40]
  431de8:	str	x21, [x9, x10]
  431dec:	str	w8, [x19, #48]
  431df0:	ldrb	w8, [x20]
  431df4:	cbz	w8, 431e90 <feof@plt+0x2f4c0>
  431df8:	add	x23, x20, #0x1
  431dfc:	ands	w8, w8, #0xff
  431e00:	b.eq	431e18 <feof@plt+0x2f448>  // b.none
  431e04:	cmp	w8, #0x3a
  431e08:	b.eq	431e18 <feof@plt+0x2f448>  // b.none
  431e0c:	ldrb	w8, [x23], #1
  431e10:	ands	w8, w8, #0xff
  431e14:	b.ne	431e04 <feof@plt+0x2f434>  // b.any
  431e18:	sub	x24, x23, #0x1
  431e1c:	sub	x21, x24, x20
  431e20:	add	x0, x21, #0x1
  431e24:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  431e28:	mov	x1, x20
  431e2c:	mov	x2, x21
  431e30:	mov	x22, x0
  431e34:	bl	402390 <memcpy@plt>
  431e38:	strb	wzr, [x22, x21]
  431e3c:	ldurb	w9, [x23, #-1]
  431e40:	ldp	w8, w10, [x19, #48]
  431e44:	cmp	w9, #0x3a
  431e48:	csel	x20, x23, x24, eq  // eq = none
  431e4c:	cmp	w8, w10
  431e50:	b.ne	431dd0 <feof@plt+0x2f400>  // b.any
  431e54:	ldr	x0, [x19, #32]
  431e58:	lsl	w8, w8, #1
  431e5c:	add	w8, w8, #0x8
  431e60:	lsl	x1, x8, #3
  431e64:	str	w8, [x19, #52]
  431e68:	bl	450728 <_obstack_memory_used@@Base+0x190>
  431e6c:	ldr	w9, [x19, #52]
  431e70:	ldr	x8, [x19, #40]
  431e74:	str	x0, [x19, #32]
  431e78:	lsl	x1, x9, #3
  431e7c:	mov	x0, x8
  431e80:	bl	450728 <_obstack_memory_used@@Base+0x190>
  431e84:	ldr	w8, [x19, #48]
  431e88:	str	x0, [x19, #40]
  431e8c:	b	431dd0 <feof@plt+0x2f400>
  431e90:	ldp	x20, x19, [sp, #48]
  431e94:	ldp	x22, x21, [sp, #32]
  431e98:	ldp	x24, x23, [sp, #16]
  431e9c:	ldp	x29, x30, [sp], #64
  431ea0:	ret
  431ea4:	stp	x29, x30, [sp, #-80]!
  431ea8:	stp	x26, x25, [sp, #16]
  431eac:	stp	x24, x23, [sp, #32]
  431eb0:	stp	x22, x21, [sp, #48]
  431eb4:	stp	x20, x19, [sp, #64]
  431eb8:	ldr	w8, [x0, #8]
  431ebc:	sub	w9, w2, #0x1
  431ec0:	cmp	w9, #0x21
  431ec4:	mov	w9, #0x22                  	// #34
  431ec8:	mov	x19, x1
  431ecc:	mov	x20, x0
  431ed0:	csel	w24, w9, w2, cc  // cc = lo, ul, last
  431ed4:	mov	x29, sp
  431ed8:	cbz	w8, 431fa0 <feof@plt+0x2f5d0>
  431edc:	ldr	x8, [x20]
  431ee0:	ldr	x0, [x8]
  431ee4:	bl	402420 <strlen@plt>
  431ee8:	ldr	x8, [x20]
  431eec:	mov	x21, x0
  431ef0:	mov	x1, x19
  431ef4:	ldr	x8, [x8]
  431ef8:	mov	x0, x8
  431efc:	bl	4024f0 <fputs_unlocked@plt>
  431f00:	ldr	w8, [x20, #8]
  431f04:	cmp	w8, #0x2
  431f08:	b.cc	431fa4 <feof@plt+0x2f5d4>  // b.lo, b.ul, b.last
  431f0c:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0xda68>
  431f10:	mov	w25, #0x1                   	// #1
  431f14:	add	x22, x22, #0x628
  431f18:	mov	w26, #0x20                  	// #32
  431f1c:	b	431f50 <feof@plt+0x2f580>
  431f20:	mov	x0, x22
  431f24:	mov	x1, x19
  431f28:	bl	4024f0 <fputs_unlocked@plt>
  431f2c:	ldr	x8, [x20]
  431f30:	mov	x1, x19
  431f34:	add	w21, w23, #0x1
  431f38:	ldr	x0, [x8, x25, lsl #3]
  431f3c:	bl	4024f0 <fputs_unlocked@plt>
  431f40:	ldr	w8, [x20, #8]
  431f44:	add	x25, x25, #0x1
  431f48:	cmp	x25, x8
  431f4c:	b.cs	431fa4 <feof@plt+0x2f5d4>  // b.hs, b.nlast
  431f50:	ldr	x8, [x20]
  431f54:	ldr	x0, [x8, x25, lsl #3]
  431f58:	bl	402420 <strlen@plt>
  431f5c:	mov	x23, x0
  431f60:	add	w21, w21, w23
  431f64:	cbz	w24, 431f70 <feof@plt+0x2f5a0>
  431f68:	cmp	w21, w24
  431f6c:	b.hi	431f20 <feof@plt+0x2f550>  // b.pmore
  431f70:	ldp	x8, x9, [x19, #40]
  431f74:	cmp	x8, x9
  431f78:	b.cs	431f90 <feof@plt+0x2f5c0>  // b.hs, b.nlast
  431f7c:	add	x9, x8, #0x1
  431f80:	str	x9, [x19, #40]
  431f84:	strb	w26, [x8]
  431f88:	mov	w23, w21
  431f8c:	b	431f2c <feof@plt+0x2f55c>
  431f90:	mov	w1, #0x20                  	// #32
  431f94:	mov	x0, x19
  431f98:	bl	402480 <__overflow@plt>
  431f9c:	b	431f88 <feof@plt+0x2f5b8>
  431fa0:	mov	w21, wzr
  431fa4:	ldp	x8, x9, [x19, #40]
  431fa8:	cmp	x8, x9
  431fac:	b.cs	432060 <feof@plt+0x2f690>  // b.hs, b.nlast
  431fb0:	add	x9, x8, #0x1
  431fb4:	mov	w10, #0x3a                  	// #58
  431fb8:	str	x9, [x19, #40]
  431fbc:	strb	w10, [x8]
  431fc0:	ldr	w8, [x20, #24]
  431fc4:	cbz	w8, 432074 <feof@plt+0x2f6a4>
  431fc8:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0xda68>
  431fcc:	mov	x23, xzr
  431fd0:	add	x22, x22, #0x628
  431fd4:	mov	w25, #0x20                  	// #32
  431fd8:	b	432008 <feof@plt+0x2f638>
  431fdc:	mov	x0, x22
  431fe0:	mov	x1, x19
  431fe4:	bl	4024f0 <fputs_unlocked@plt>
  431fe8:	ldr	x8, [x20, #16]
  431fec:	mov	x1, x19
  431ff0:	ldr	x0, [x8, x23, lsl #3]
  431ff4:	bl	4024f0 <fputs_unlocked@plt>
  431ff8:	ldr	w8, [x20, #24]
  431ffc:	add	x23, x23, #0x1
  432000:	cmp	x23, x8
  432004:	b.cs	432074 <feof@plt+0x2f6a4>  // b.hs, b.nlast
  432008:	ldr	x8, [x20, #16]
  43200c:	mov	w26, w21
  432010:	ldr	x0, [x8, x23, lsl #3]
  432014:	bl	402420 <strlen@plt>
  432018:	mov	x21, x0
  43201c:	add	w8, w26, w21
  432020:	add	w26, w8, #0x1
  432024:	cbz	w24, 432030 <feof@plt+0x2f660>
  432028:	cmp	w26, w24
  43202c:	b.hi	431fdc <feof@plt+0x2f60c>  // b.pmore
  432030:	ldp	x8, x9, [x19, #40]
  432034:	cmp	x8, x9
  432038:	b.cs	432050 <feof@plt+0x2f680>  // b.hs, b.nlast
  43203c:	add	x9, x8, #0x1
  432040:	str	x9, [x19, #40]
  432044:	strb	w25, [x8]
  432048:	mov	w21, w26
  43204c:	b	431fe8 <feof@plt+0x2f618>
  432050:	mov	w1, #0x20                  	// #32
  432054:	mov	x0, x19
  432058:	bl	402480 <__overflow@plt>
  43205c:	b	432048 <feof@plt+0x2f678>
  432060:	mov	w1, #0x3a                  	// #58
  432064:	mov	x0, x19
  432068:	bl	402480 <__overflow@plt>
  43206c:	ldr	w8, [x20, #24]
  432070:	cbnz	w8, 431fc8 <feof@plt+0x2f5f8>
  432074:	ldp	x8, x9, [x19, #40]
  432078:	cmp	x8, x9
  43207c:	b.cs	4320a8 <feof@plt+0x2f6d8>  // b.hs, b.nlast
  432080:	add	x9, x8, #0x1
  432084:	mov	w10, #0xa                   	// #10
  432088:	str	x9, [x19, #40]
  43208c:	strb	w10, [x8]
  432090:	ldp	x20, x19, [sp, #64]
  432094:	ldp	x22, x21, [sp, #48]
  432098:	ldp	x24, x23, [sp, #32]
  43209c:	ldp	x26, x25, [sp, #16]
  4320a0:	ldp	x29, x30, [sp], #80
  4320a4:	ret
  4320a8:	mov	x0, x19
  4320ac:	ldp	x20, x19, [sp, #64]
  4320b0:	ldp	x22, x21, [sp, #48]
  4320b4:	ldp	x24, x23, [sp, #32]
  4320b8:	ldp	x26, x25, [sp, #16]
  4320bc:	mov	w1, #0xa                   	// #10
  4320c0:	ldp	x29, x30, [sp], #80
  4320c4:	b	402480 <__overflow@plt>
  4320c8:	stp	x29, x30, [sp, #-64]!
  4320cc:	stp	x22, x21, [sp, #32]
  4320d0:	stp	x20, x19, [sp, #48]
  4320d4:	ldr	w8, [x0, #24]
  4320d8:	str	x23, [sp, #16]
  4320dc:	mov	x29, sp
  4320e0:	cmp	w8, #0x2
  4320e4:	b.cc	432198 <feof@plt+0x2f7c8>  // b.lo, b.ul, b.last
  4320e8:	mov	x19, x0
  4320ec:	mov	x20, x1
  4320f0:	mov	w21, #0x1                   	// #1
  4320f4:	mov	w22, #0xa                   	// #10
  4320f8:	mov	w23, #0x3a                  	// #58
  4320fc:	ldp	x8, x9, [x20, #40]
  432100:	cmp	x8, x9
  432104:	b.cs	432168 <feof@plt+0x2f798>  // b.hs, b.nlast
  432108:	add	x9, x8, #0x1
  43210c:	str	x9, [x20, #40]
  432110:	strb	w22, [x8]
  432114:	ldr	x8, [x19, #16]
  432118:	mov	x1, x20
  43211c:	ldr	x0, [x8, x21, lsl #3]
  432120:	bl	4024f0 <fputs_unlocked@plt>
  432124:	ldp	x8, x9, [x20, #40]
  432128:	cmp	x8, x9
  43212c:	b.cs	432178 <feof@plt+0x2f7a8>  // b.hs, b.nlast
  432130:	add	x9, x8, #0x1
  432134:	str	x9, [x20, #40]
  432138:	strb	w23, [x8]
  43213c:	ldp	x8, x9, [x20, #40]
  432140:	cmp	x8, x9
  432144:	b.cs	432188 <feof@plt+0x2f7b8>  // b.hs, b.nlast
  432148:	add	x9, x8, #0x1
  43214c:	str	x9, [x20, #40]
  432150:	strb	w22, [x8]
  432154:	ldr	w8, [x19, #24]
  432158:	add	x21, x21, #0x1
  43215c:	cmp	x21, x8
  432160:	b.cc	4320fc <feof@plt+0x2f72c>  // b.lo, b.ul, b.last
  432164:	b	432198 <feof@plt+0x2f7c8>
  432168:	mov	w1, #0xa                   	// #10
  43216c:	mov	x0, x20
  432170:	bl	402480 <__overflow@plt>
  432174:	b	432114 <feof@plt+0x2f744>
  432178:	mov	w1, #0x3a                  	// #58
  43217c:	mov	x0, x20
  432180:	bl	402480 <__overflow@plt>
  432184:	b	43213c <feof@plt+0x2f76c>
  432188:	mov	w1, #0xa                   	// #10
  43218c:	mov	x0, x20
  432190:	bl	402480 <__overflow@plt>
  432194:	b	432154 <feof@plt+0x2f784>
  432198:	ldp	x20, x19, [sp, #48]
  43219c:	ldp	x22, x21, [sp, #32]
  4321a0:	ldr	x23, [sp, #16]
  4321a4:	ldp	x29, x30, [sp], #64
  4321a8:	ret
  4321ac:	sub	sp, sp, #0x40
  4321b0:	stp	x22, x21, [sp, #32]
  4321b4:	stp	x20, x19, [sp, #48]
  4321b8:	mov	x19, x1
  4321bc:	add	x21, x0, #0x18
  4321c0:	mov	x20, x0
  4321c4:	mov	w1, #0x4                   	// #4
  4321c8:	mov	w2, #0x1                   	// #1
  4321cc:	mov	x0, x21
  4321d0:	mov	x3, x19
  4321d4:	stp	x29, x30, [sp, #16]
  4321d8:	add	x29, sp, #0x10
  4321dc:	bl	4028a0 <fwrite_unlocked@plt>
  4321e0:	cmp	x0, #0x1
  4321e4:	b.ne	432258 <feof@plt+0x2f888>  // b.any
  4321e8:	ldr	w8, [x21]
  4321ec:	cbz	w8, 432250 <feof@plt+0x2f880>
  4321f0:	mov	x22, xzr
  4321f4:	ldr	x8, [x20, #16]
  4321f8:	ldr	x0, [x8, x22, lsl #3]
  4321fc:	bl	402420 <strlen@plt>
  432200:	str	x0, [sp, #8]
  432204:	add	x0, sp, #0x8
  432208:	mov	w1, #0x8                   	// #8
  43220c:	mov	w2, #0x1                   	// #1
  432210:	mov	x3, x19
  432214:	bl	4028a0 <fwrite_unlocked@plt>
  432218:	cmp	x0, #0x1
  43221c:	b.ne	432258 <feof@plt+0x2f888>  // b.any
  432220:	ldr	x8, [x20, #16]
  432224:	ldr	x1, [sp, #8]
  432228:	mov	w2, #0x1                   	// #1
  43222c:	mov	x3, x19
  432230:	ldr	x0, [x8, x22, lsl #3]
  432234:	bl	4028a0 <fwrite_unlocked@plt>
  432238:	cmp	x0, #0x1
  43223c:	b.ne	432258 <feof@plt+0x2f888>  // b.any
  432240:	ldr	w8, [x21]
  432244:	add	x22, x22, #0x1
  432248:	cmp	x22, x8
  43224c:	b.cc	4321f4 <feof@plt+0x2f824>  // b.lo, b.ul, b.last
  432250:	mov	w0, wzr
  432254:	b	43225c <feof@plt+0x2f88c>
  432258:	mov	w0, #0xffffffff            	// #-1
  43225c:	ldp	x20, x19, [sp, #48]
  432260:	ldp	x22, x21, [sp, #32]
  432264:	ldp	x29, x30, [sp, #16]
  432268:	add	sp, sp, #0x40
  43226c:	ret
  432270:	sub	sp, sp, #0x60
  432274:	stp	x29, x30, [sp, #16]
  432278:	stp	x20, x19, [sp, #80]
  43227c:	add	x29, sp, #0x10
  432280:	mov	x20, x1
  432284:	stp	x22, x21, [sp, #64]
  432288:	mov	x19, x2
  43228c:	mov	x21, x0
  432290:	sub	x0, x29, #0x4
  432294:	mov	w1, #0x1                   	// #1
  432298:	mov	w2, #0x4                   	// #4
  43229c:	mov	x3, x20
  4322a0:	stp	x26, x25, [sp, #32]
  4322a4:	stp	x24, x23, [sp, #48]
  4322a8:	bl	4024d0 <fread_unlocked@plt>
  4322ac:	cmp	x0, #0x4
  4322b0:	b.ne	432364 <feof@plt+0x2f994>  // b.any
  4322b4:	mov	w0, #0x200                 	// #512
  4322b8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4322bc:	ldur	w25, [x29, #-4]
  4322c0:	mov	x22, x0
  4322c4:	cbz	w25, 43236c <feof@plt+0x2f99c>
  4322c8:	mov	w26, wzr
  4322cc:	mov	w23, #0x200                 	// #512
  4322d0:	b	4322e0 <feof@plt+0x2f910>
  4322d4:	add	w26, w26, #0x1
  4322d8:	cmp	w26, w25
  4322dc:	b.cs	43236c <feof@plt+0x2f99c>  // b.hs, b.nlast
  4322e0:	mov	x0, sp
  4322e4:	mov	w1, #0x1                   	// #1
  4322e8:	mov	w2, #0x8                   	// #8
  4322ec:	mov	x3, x20
  4322f0:	bl	4024d0 <fread_unlocked@plt>
  4322f4:	cmp	x0, #0x8
  4322f8:	b.ne	432374 <feof@plt+0x2f9a4>  // b.any
  4322fc:	ldr	x24, [sp]
  432300:	add	x8, x24, #0x1
  432304:	cmp	x23, x8
  432308:	b.cs	432320 <feof@plt+0x2f950>  // b.hs, b.nlast
  43230c:	add	x23, x24, #0x80
  432310:	mov	x0, x22
  432314:	mov	x1, x23
  432318:	bl	450728 <_obstack_memory_used@@Base+0x190>
  43231c:	mov	x22, x0
  432320:	mov	w1, #0x1                   	// #1
  432324:	mov	x0, x22
  432328:	mov	x2, x24
  43232c:	mov	x3, x20
  432330:	bl	4024d0 <fread_unlocked@plt>
  432334:	cmp	x0, x24
  432338:	b.ne	432374 <feof@plt+0x2f9a4>  // b.any
  43233c:	strb	wzr, [x22, x24]
  432340:	cbz	x19, 4322d4 <feof@plt+0x2f904>
  432344:	mov	x0, x22
  432348:	mov	x1, x19
  43234c:	bl	44eda0 <feof@plt+0x4c3d0>
  432350:	cbz	w0, 4322d4 <feof@plt+0x2f904>
  432354:	mov	x0, x21
  432358:	mov	x1, x22
  43235c:	bl	431c7c <feof@plt+0x2f2ac>
  432360:	b	4322d4 <feof@plt+0x2f904>
  432364:	mov	w19, #0xffffffff            	// #-1
  432368:	b	432380 <feof@plt+0x2f9b0>
  43236c:	mov	w19, wzr
  432370:	b	432378 <feof@plt+0x2f9a8>
  432374:	mov	w19, #0xffffffff            	// #-1
  432378:	mov	x0, x22
  43237c:	bl	4024c0 <free@plt>
  432380:	mov	w0, w19
  432384:	ldp	x20, x19, [sp, #80]
  432388:	ldp	x22, x21, [sp, #64]
  43238c:	ldp	x24, x23, [sp, #48]
  432390:	ldp	x26, x25, [sp, #32]
  432394:	ldp	x29, x30, [sp, #16]
  432398:	add	sp, sp, #0x60
  43239c:	ret
  4323a0:	stp	x29, x30, [sp, #-48]!
  4323a4:	str	x21, [sp, #16]
  4323a8:	mov	w21, #0x1                   	// #1
  4323ac:	stp	x20, x19, [sp, #32]
  4323b0:	lsl	w19, w21, w0
  4323b4:	mov	w0, #0x1                   	// #1
  4323b8:	mov	w1, #0x90                  	// #144
  4323bc:	mov	x29, sp
  4323c0:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4323c4:	adrp	x3, 450000 <feof@plt+0x4d630>
  4323c8:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x330>
  4323cc:	add	x3, x3, #0x6a4
  4323d0:	add	x4, x4, #0x4c0
  4323d4:	mov	x1, xzr
  4323d8:	mov	x2, xzr
  4323dc:	mov	x20, x0
  4323e0:	bl	450220 <_obstack_begin@@Base>
  4323e4:	mov	w1, #0x8                   	// #8
  4323e8:	mov	x0, x19
  4323ec:	str	xzr, [x20, #48]
  4323f0:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4323f4:	str	x0, [x20, #88]
  4323f8:	strb	w21, [x20, #136]
  4323fc:	str	w19, [x20, #112]
  432400:	mov	x0, x20
  432404:	ldp	x20, x19, [sp, #32]
  432408:	ldr	x21, [sp, #16]
  43240c:	ldp	x29, x30, [sp], #48
  432410:	ret
  432414:	stp	x29, x30, [sp, #-32]!
  432418:	mov	x1, xzr
  43241c:	str	x19, [sp, #16]
  432420:	mov	x29, sp
  432424:	mov	x19, x0
  432428:	bl	450504 <_obstack_free@@Base>
  43242c:	ldrb	w8, [x19, #136]
  432430:	cbz	w8, 43243c <feof@plt+0x2fa6c>
  432434:	ldr	x0, [x19, #88]
  432438:	bl	4024c0 <free@plt>
  43243c:	mov	x0, x19
  432440:	ldr	x19, [sp, #16]
  432444:	ldp	x29, x30, [sp], #32
  432448:	b	4024c0 <free@plt>
  43244c:	mov	w4, w3
  432450:	mov	w8, wzr
  432454:	cbz	x2, 432478 <feof@plt+0x2faa8>
  432458:	mov	w9, #0x43                  	// #67
  43245c:	mov	x10, x2
  432460:	mov	x11, x1
  432464:	ldrb	w12, [x11], #1
  432468:	sub	x10, x10, #0x1
  43246c:	madd	w8, w8, w9, w12
  432470:	sub	w8, w8, #0x71
  432474:	cbnz	x10, 432464 <feof@plt+0x2fa94>
  432478:	add	w3, w8, w2
  43247c:	b	432480 <feof@plt+0x2fab0>
  432480:	sub	sp, sp, #0x70
  432484:	stp	x29, x30, [sp, #16]
  432488:	stp	x28, x27, [sp, #32]
  43248c:	stp	x26, x25, [sp, #48]
  432490:	stp	x24, x23, [sp, #64]
  432494:	stp	x22, x21, [sp, #80]
  432498:	stp	x20, x19, [sp, #96]
  43249c:	ldr	w9, [x0, #112]
  4324a0:	ldr	w8, [x0, #128]
  4324a4:	ldr	x27, [x0, #88]
  4324a8:	add	x29, sp, #0x10
  4324ac:	sub	w28, w9, #0x1
  4324b0:	add	w8, w8, #0x1
  4324b4:	stp	w4, w9, [sp, #4]
  4324b8:	and	w26, w28, w3
  4324bc:	str	w8, [x0, #128]
  4324c0:	ldr	x20, [x27, w26, uxtw #3]
  4324c4:	mov	w23, w3
  4324c8:	mov	x21, x2
  4324cc:	mov	x22, x1
  4324d0:	mov	x19, x0
  4324d4:	cmn	x20, #0x1
  4324d8:	stur	w26, [x29, #-4]
  4324dc:	b.eq	432534 <feof@plt+0x2fb64>  // b.none
  4324e0:	cbnz	x20, 4324f4 <feof@plt+0x2fb24>
  4324e4:	ldp	w8, w10, [sp, #4]
  4324e8:	cbnz	w8, 4325b8 <feof@plt+0x2fbe8>
  4324ec:	mov	x20, xzr
  4324f0:	b	43274c <feof@plt+0x2fd7c>
  4324f4:	ldr	w8, [x20, #12]
  4324f8:	cmp	w8, w23
  4324fc:	b.ne	43252c <feof@plt+0x2fb5c>  // b.any
  432500:	ldr	w8, [x20, #8]
  432504:	cmp	w8, w21
  432508:	b.ne	43252c <feof@plt+0x2fb5c>  // b.any
  43250c:	ldr	x0, [x20]
  432510:	mov	x1, x22
  432514:	mov	x2, x21
  432518:	bl	402980 <bcmp@plt>
  43251c:	ldr	w8, [sp, #8]
  432520:	stur	w8, [x29, #-4]
  432524:	cbnz	w0, 432534 <feof@plt+0x2fb64>
  432528:	b	43274c <feof@plt+0x2fd7c>
  43252c:	ldr	w8, [sp, #8]
  432530:	stur	w8, [x29, #-4]
  432534:	ldr	w24, [x19, #132]
  432538:	add	w8, w23, w23, lsl #4
  43253c:	and	w8, w28, w8
  432540:	orr	w25, w8, #0x1
  432544:	add	w24, w24, #0x1
  432548:	add	w8, w26, w25
  43254c:	str	w24, [x19, #132]
  432550:	and	w26, w8, w28
  432554:	ldr	x20, [x27, w26, uxtw #3]
  432558:	cbz	x20, 4325ac <feof@plt+0x2fbdc>
  43255c:	cmn	x20, #0x1
  432560:	b.eq	432594 <feof@plt+0x2fbc4>  // b.none
  432564:	ldr	w8, [x20, #12]
  432568:	cmp	w8, w23
  43256c:	b.ne	432544 <feof@plt+0x2fb74>  // b.any
  432570:	ldr	w8, [x20, #8]
  432574:	cmp	w8, w21
  432578:	b.ne	432544 <feof@plt+0x2fb74>  // b.any
  43257c:	ldr	x0, [x20]
  432580:	mov	x1, x22
  432584:	mov	x2, x21
  432588:	bl	402980 <bcmp@plt>
  43258c:	cbnz	w0, 432544 <feof@plt+0x2fb74>
  432590:	b	43274c <feof@plt+0x2fd7c>
  432594:	ldr	w8, [sp, #8]
  432598:	ldur	w9, [x29, #-4]
  43259c:	cmp	w9, w8
  4325a0:	csel	w9, w9, w26, eq  // eq = none
  4325a4:	stur	w9, [x29, #-4]
  4325a8:	b	432544 <feof@plt+0x2fb74>
  4325ac:	ldr	w8, [sp, #4]
  4325b0:	ldur	w10, [x29, #-4]
  4325b4:	cbz	w8, 4324ec <feof@plt+0x2fb1c>
  4325b8:	ldr	w9, [sp, #8]
  4325bc:	ldr	x8, [x19, #96]
  4325c0:	mov	x0, x19
  4325c4:	cmp	w10, w9
  4325c8:	csel	w24, w26, w10, eq  // eq = none
  4325cc:	blr	x8
  4325d0:	ldr	x8, [x19, #88]
  4325d4:	mov	x20, x0
  4325d8:	str	x0, [x8, w24, uxtw #3]
  4325dc:	stp	w21, w23, [x0, #8]
  4325e0:	ldr	x8, [x19, #104]
  4325e4:	cbz	x8, 432608 <feof@plt+0x2fc38>
  4325e8:	add	x0, x21, #0x1
  4325ec:	blr	x8
  4325f0:	mov	x1, x22
  4325f4:	mov	x2, x21
  4325f8:	mov	x23, x0
  4325fc:	bl	402390 <memcpy@plt>
  432600:	strb	wzr, [x23, x21]
  432604:	b	432694 <feof@plt+0x2fcc4>
  432608:	ldp	x0, x8, [x19, #24]
  43260c:	add	x1, x21, #0x1
  432610:	sub	x8, x8, x0
  432614:	cmp	x8, x1
  432618:	b.cs	432628 <feof@plt+0x2fc58>  // b.hs, b.nlast
  43261c:	mov	x0, x19
  432620:	bl	45037c <_obstack_newchunk@@Base>
  432624:	ldr	x0, [x19, #24]
  432628:	mov	x1, x22
  43262c:	mov	x2, x21
  432630:	bl	402390 <memcpy@plt>
  432634:	ldr	x8, [x19, #24]
  432638:	add	x8, x8, x21
  43263c:	add	x9, x8, #0x1
  432640:	str	x9, [x19, #24]
  432644:	strb	wzr, [x8]
  432648:	ldp	x23, x8, [x19, #16]
  43264c:	cmp	x8, x23
  432650:	b.ne	432660 <feof@plt+0x2fc90>  // b.any
  432654:	ldrb	w9, [x19, #80]
  432658:	orr	w9, w9, #0x2
  43265c:	strb	w9, [x19, #80]
  432660:	ldr	x10, [x19, #48]
  432664:	ldr	x11, [x19, #8]
  432668:	ldr	x9, [x19, #32]
  43266c:	add	x8, x10, x8
  432670:	bic	x8, x8, x10
  432674:	sub	x10, x8, x11
  432678:	sub	x11, x9, x11
  43267c:	cmp	x10, x11
  432680:	str	x8, [x19, #24]
  432684:	b.ls	432690 <feof@plt+0x2fcc0>  // b.plast
  432688:	mov	x8, x9
  43268c:	str	x9, [x19, #24]
  432690:	str	x8, [x19, #16]
  432694:	str	x23, [x20]
  432698:	ldp	w8, w9, [x19, #112]
  43269c:	add	w9, w9, #0x1
  4326a0:	add	w10, w8, w8, lsl #1
  4326a4:	cmp	w10, w9, lsl #2
  4326a8:	str	w9, [x19, #116]
  4326ac:	b.hi	43274c <feof@plt+0x2fd7c>  // b.pmore
  4326b0:	lsl	w21, w8, #1
  4326b4:	mov	w1, #0x8                   	// #8
  4326b8:	mov	x0, x21
  4326bc:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  4326c0:	mov	x22, x0
  4326c4:	ldr	x0, [x19, #88]
  4326c8:	ldr	w9, [x19, #112]
  4326cc:	sub	w8, w21, #0x1
  4326d0:	mov	x10, x0
  4326d4:	add	x9, x0, x9, lsl #3
  4326d8:	b	4326ec <feof@plt+0x2fd1c>
  4326dc:	str	x11, [x22, x12, lsl #3]
  4326e0:	add	x10, x10, #0x8
  4326e4:	cmp	x10, x9
  4326e8:	b.cs	432730 <feof@plt+0x2fd60>  // b.hs, b.nlast
  4326ec:	ldr	x11, [x10]
  4326f0:	add	x12, x11, #0x1
  4326f4:	cmp	x12, #0x2
  4326f8:	b.cc	4326e0 <feof@plt+0x2fd10>  // b.lo, b.ul, b.last
  4326fc:	ldr	w13, [x11, #12]
  432700:	and	w12, w13, w8
  432704:	ldr	x14, [x22, w12, uxtw #3]
  432708:	cbz	x14, 4326dc <feof@plt+0x2fd0c>
  43270c:	add	w13, w13, w13, lsl #4
  432710:	and	w13, w13, w8
  432714:	orr	w13, w13, #0x1
  432718:	add	w12, w12, w13
  43271c:	and	w12, w12, w8
  432720:	ldr	x14, [x22, w12, uxtw #3]
  432724:	cbnz	x14, 432718 <feof@plt+0x2fd48>
  432728:	mov	w12, w12
  43272c:	b	4326dc <feof@plt+0x2fd0c>
  432730:	ldrb	w8, [x19, #136]
  432734:	cbz	w8, 43273c <feof@plt+0x2fd6c>
  432738:	bl	4024c0 <free@plt>
  43273c:	mov	w8, #0x1                   	// #1
  432740:	str	x22, [x19, #88]
  432744:	strb	w8, [x19, #136]
  432748:	str	w21, [x19, #112]
  43274c:	mov	x0, x20
  432750:	ldp	x20, x19, [sp, #96]
  432754:	ldp	x22, x21, [sp, #80]
  432758:	ldp	x24, x23, [sp, #64]
  43275c:	ldp	x26, x25, [sp, #48]
  432760:	ldp	x28, x27, [sp, #32]
  432764:	ldp	x29, x30, [sp, #16]
  432768:	add	sp, sp, #0x70
  43276c:	ret
  432770:	stp	x29, x30, [sp, #-64]!
  432774:	stp	x22, x21, [sp, #32]
  432778:	stp	x20, x19, [sp, #48]
  43277c:	ldr	x22, [x0, #88]
  432780:	ldr	w8, [x0, #112]
  432784:	str	x23, [sp, #16]
  432788:	mov	x19, x2
  43278c:	mov	x20, x1
  432790:	mov	x21, x0
  432794:	add	x23, x22, x8, lsl #3
  432798:	mov	x29, sp
  43279c:	b	4327ac <feof@plt+0x2fddc>
  4327a0:	add	x22, x22, #0x8
  4327a4:	cmp	x22, x23
  4327a8:	b.cs	4327cc <feof@plt+0x2fdfc>  // b.hs, b.nlast
  4327ac:	ldr	x1, [x22]
  4327b0:	add	x8, x1, #0x1
  4327b4:	cmp	x8, #0x2
  4327b8:	b.cc	4327a0 <feof@plt+0x2fdd0>  // b.lo, b.ul, b.last
  4327bc:	ldr	x0, [x21, #120]
  4327c0:	mov	x2, x19
  4327c4:	blr	x20
  4327c8:	cbnz	w0, 4327a0 <feof@plt+0x2fdd0>
  4327cc:	ldp	x20, x19, [sp, #48]
  4327d0:	ldp	x22, x21, [sp, #32]
  4327d4:	ldr	x23, [sp, #16]
  4327d8:	ldp	x29, x30, [sp], #64
  4327dc:	ret
  4327e0:	stp	x29, x30, [sp, #-64]!
  4327e4:	stp	x24, x23, [sp, #16]
  4327e8:	stp	x22, x21, [sp, #32]
  4327ec:	stp	x20, x19, [sp, #48]
  4327f0:	ldr	x22, [x0, #88]
  4327f4:	ldr	w8, [x0, #112]
  4327f8:	mov	x19, x2
  4327fc:	mov	x20, x1
  432800:	mov	x21, x0
  432804:	add	x23, x22, x8, lsl #3
  432808:	mov	x24, #0xffffffffffffffff    	// #-1
  43280c:	mov	x29, sp
  432810:	b	432820 <feof@plt+0x2fe50>
  432814:	add	x22, x22, #0x8
  432818:	cmp	x22, x23
  43281c:	b.cs	432848 <feof@plt+0x2fe78>  // b.hs, b.nlast
  432820:	ldr	x1, [x22]
  432824:	add	x8, x1, #0x1
  432828:	cmp	x8, #0x2
  43282c:	b.cc	432814 <feof@plt+0x2fe44>  // b.lo, b.ul, b.last
  432830:	ldr	x0, [x21, #120]
  432834:	mov	x2, x19
  432838:	blr	x20
  43283c:	cbz	w0, 432814 <feof@plt+0x2fe44>
  432840:	str	x24, [x22]
  432844:	b	432814 <feof@plt+0x2fe44>
  432848:	ldp	x20, x19, [sp, #48]
  43284c:	ldp	x22, x21, [sp, #32]
  432850:	ldp	x24, x23, [sp, #16]
  432854:	ldp	x29, x30, [sp], #64
  432858:	ret
  43285c:	stp	x29, x30, [sp, #-64]!
  432860:	stp	x22, x21, [sp, #32]
  432864:	stp	x20, x19, [sp, #48]
  432868:	ldrb	w8, [x0, #136]
  43286c:	str	x23, [sp, #16]
  432870:	mov	w19, w3
  432874:	mov	w21, w2
  432878:	mov	x22, x1
  43287c:	mov	x20, x0
  432880:	and	w23, w4, #0x1
  432884:	mov	x29, sp
  432888:	cbz	w8, 432894 <feof@plt+0x2fec4>
  43288c:	ldr	x0, [x20, #88]
  432890:	bl	4024c0 <free@plt>
  432894:	str	x22, [x20, #88]
  432898:	stp	w21, w19, [x20, #112]
  43289c:	strb	w23, [x20, #136]
  4328a0:	ldp	x20, x19, [sp, #48]
  4328a4:	ldp	x22, x21, [sp, #32]
  4328a8:	ldr	x23, [sp, #16]
  4328ac:	ldp	x29, x30, [sp], #64
  4328b0:	ret
  4328b4:	stp	d11, d10, [sp, #-128]!
  4328b8:	stp	d9, d8, [sp, #16]
  4328bc:	stp	x29, x30, [sp, #32]
  4328c0:	stp	x26, x25, [sp, #64]
  4328c4:	stp	x24, x23, [sp, #80]
  4328c8:	stp	x22, x21, [sp, #96]
  4328cc:	stp	x20, x19, [sp, #112]
  4328d0:	str	x27, [sp, #48]
  4328d4:	ldr	x8, [x0, #88]
  4328d8:	ldr	w27, [x0, #112]
  4328dc:	mov	x20, x0
  4328e0:	mov	x22, xzr
  4328e4:	mov	x19, xzr
  4328e8:	mov	x25, xzr
  4328ec:	mov	x23, xzr
  4328f0:	add	x9, x8, x27, lsl #3
  4328f4:	fmov	d8, xzr
  4328f8:	mov	x29, sp
  4328fc:	ldr	x10, [x8]
  432900:	cbz	x10, 432934 <feof@plt+0x2ff64>
  432904:	cmn	x10, #0x1
  432908:	b.ne	432914 <feof@plt+0x2ff44>  // b.any
  43290c:	add	x22, x22, #0x1
  432910:	b	432934 <feof@plt+0x2ff64>
  432914:	ldr	w10, [x10, #8]
  432918:	add	x23, x23, #0x1
  43291c:	ucvtf	d0, w10
  432920:	cmp	x19, x10
  432924:	fmul	d0, d0, d0
  432928:	add	x25, x25, x10
  43292c:	csel	x19, x10, x19, cc  // cc = lo, ul, last
  432930:	fadd	d8, d8, d0
  432934:	add	x8, x8, #0x8
  432938:	cmp	x8, x9
  43293c:	b.cc	4328fc <feof@plt+0x2ff2c>  // b.lo, b.ul, b.last
  432940:	ldr	w24, [x20, #116]
  432944:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x25a68>
  432948:	ldr	x0, [x26, #1336]
  43294c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432950:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432954:	add	x1, x1, #0x638
  432958:	add	x2, x2, #0x64f
  43295c:	mov	x3, x24
  432960:	lsl	x21, x27, #3
  432964:	bl	402440 <fprintf@plt>
  432968:	ldr	x0, [x26, #1336]
  43296c:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  432970:	ucvtf	d0, x23
  432974:	fmov	d1, x8
  432978:	fmul	d0, d0, d1
  43297c:	ucvtf	d9, w24
  432980:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432984:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432988:	fdiv	d0, d0, d9
  43298c:	add	x1, x1, #0x658
  432990:	add	x2, x2, #0x66b
  432994:	mov	x3, x23
  432998:	bl	402440 <fprintf@plt>
  43299c:	ldr	x0, [x26, #1336]
  4329a0:	ldr	w3, [x20, #112]
  4329a4:	adrp	x23, 45e000 <_obstack_memory_used@@Base+0xda68>
  4329a8:	add	x23, x23, #0x645
  4329ac:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  4329b0:	add	x2, x2, #0x678
  4329b4:	mov	x1, x23
  4329b8:	bl	402440 <fprintf@plt>
  4329bc:	ldr	x0, [x26, #1336]
  4329c0:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  4329c4:	add	x2, x2, #0x67f
  4329c8:	mov	x1, x23
  4329cc:	mov	x3, x22
  4329d0:	bl	402440 <fprintf@plt>
  4329d4:	ldr	x8, [x20, #104]
  4329d8:	cbnz	x8, 432a14 <feof@plt+0x30044>
  4329dc:	mov	x0, x20
  4329e0:	bl	450598 <_obstack_memory_used@@Base>
  4329e4:	mov	x8, x0
  4329e8:	ldr	x0, [x26, #1336]
  4329ec:	lsr	x9, x25, #11
  4329f0:	cmp	x9, #0x5
  4329f4:	sub	x8, x8, x25
  4329f8:	mov	x3, x25
  4329fc:	b.cc	432a40 <feof@plt+0x30070>  // b.lo, b.ul, b.last
  432a00:	lsr	x10, x25, #21
  432a04:	cmp	x10, #0x4
  432a08:	b.hi	432a3c <feof@plt+0x3006c>  // b.pmore
  432a0c:	lsr	x3, x25, #10
  432a10:	b	432a40 <feof@plt+0x30070>
  432a14:	ldr	x0, [x26, #1336]
  432a18:	lsr	x8, x25, #11
  432a1c:	cmp	x8, #0x5
  432a20:	mov	x3, x25
  432a24:	b.cc	432a84 <feof@plt+0x300b4>  // b.lo, b.ul, b.last
  432a28:	lsr	x9, x25, #21
  432a2c:	cmp	x9, #0x4
  432a30:	b.hi	432a80 <feof@plt+0x300b0>  // b.pmore
  432a34:	lsr	x3, x25, #10
  432a38:	b	432a84 <feof@plt+0x300b4>
  432a3c:	lsr	x3, x25, #20
  432a40:	cmp	x25, #0xa00, lsl #12
  432a44:	mov	w10, #0x4d                  	// #77
  432a48:	mov	w11, #0x6b                  	// #107
  432a4c:	mov	w12, #0x20                  	// #32
  432a50:	lsr	x13, x8, #11
  432a54:	csel	w14, w11, w10, cc  // cc = lo, ul, last
  432a58:	cmp	x9, #0x5
  432a5c:	csel	w4, w12, w14, cc  // cc = lo, ul, last
  432a60:	cmp	x13, #0x5
  432a64:	mov	x5, x8
  432a68:	b.cc	432abc <feof@plt+0x300ec>  // b.lo, b.ul, b.last
  432a6c:	lsr	x9, x8, #21
  432a70:	cmp	x9, #0x4
  432a74:	b.hi	432ab8 <feof@plt+0x300e8>  // b.pmore
  432a78:	lsr	x5, x8, #10
  432a7c:	b	432abc <feof@plt+0x300ec>
  432a80:	lsr	x3, x25, #20
  432a84:	cmp	x25, #0xa00, lsl #12
  432a88:	mov	w9, #0x4d                  	// #77
  432a8c:	mov	w10, #0x6b                  	// #107
  432a90:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  432a94:	cmp	x8, #0x5
  432a98:	mov	w8, #0x20                  	// #32
  432a9c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432aa0:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432aa4:	csel	w4, w8, w9, cc  // cc = lo, ul, last
  432aa8:	add	x1, x1, #0x688
  432aac:	add	x2, x2, #0x694
  432ab0:	bl	402440 <fprintf@plt>
  432ab4:	b	432ae0 <feof@plt+0x30110>
  432ab8:	lsr	x5, x8, #20
  432abc:	cmp	x8, #0xa00, lsl #12
  432ac0:	csel	w8, w11, w10, cc  // cc = lo, ul, last
  432ac4:	cmp	x13, #0x5
  432ac8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432acc:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432ad0:	csel	w6, w12, w8, cc  // cc = lo, ul, last
  432ad4:	add	x1, x1, #0x69f
  432ad8:	add	x2, x2, #0x6bc
  432adc:	bl	402440 <fprintf@plt>
  432ae0:	ldr	x0, [x26, #1336]
  432ae4:	cmp	w27, #0x500
  432ae8:	b.cc	432b04 <feof@plt+0x30134>  // b.lo, b.ul, b.last
  432aec:	ubfx	x8, x27, #18, #14
  432af0:	cmp	w8, #0x4
  432af4:	b.hi	432b00 <feof@plt+0x30130>  // b.pmore
  432af8:	lsr	x21, x27, #7
  432afc:	b	432b04 <feof@plt+0x30134>
  432b00:	lsr	x21, x27, #17
  432b04:	cmp	w27, #0x140, lsl #12
  432b08:	mov	w8, #0x4d                  	// #77
  432b0c:	mov	w9, #0x6b                  	// #107
  432b10:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  432b14:	cmp	w27, #0x500
  432b18:	mov	w9, #0x20                  	// #32
  432b1c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432b20:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432b24:	csel	w4, w9, w8, cc  // cc = lo, ul, last
  432b28:	add	x1, x1, #0x688
  432b2c:	add	x2, x2, #0x6cb
  432b30:	mov	x3, x21
  432b34:	bl	402440 <fprintf@plt>
  432b38:	ldp	s2, s1, [x20, #128]
  432b3c:	ldr	x0, [x26, #1336]
  432b40:	ucvtf	d0, x25
  432b44:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0xda68>
  432b48:	fdiv	d10, d8, d9
  432b4c:	fdiv	d8, d0, d9
  432b50:	ucvtf	d0, d1
  432b54:	ucvtf	d1, d2
  432b58:	add	x21, x21, #0x6d7
  432b5c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432b60:	fdiv	d0, d0, d1
  432b64:	add	x2, x2, #0x6e2
  432b68:	mov	x1, x21
  432b6c:	fmul	d11, d8, d8
  432b70:	bl	402440 <fprintf@plt>
  432b74:	ldr	s0, [x20, #128]
  432b78:	ldr	x0, [x26, #1336]
  432b7c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432b80:	add	x2, x2, #0x6ef
  432b84:	ucvtf	d0, d0
  432b88:	fdiv	d0, d9, d0
  432b8c:	mov	x1, x21
  432b90:	bl	402440 <fprintf@plt>
  432b94:	fsub	d0, d10, d11
  432b98:	fcmp	d0, #0.0
  432b9c:	b.mi	432c28 <feof@plt+0x30258>  // b.first
  432ba0:	ldr	x0, [x26, #1336]
  432ba4:	fmov	d1, xzr
  432ba8:	b.eq	432bd4 <feof@plt+0x30204>  // b.none
  432bac:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  432bb0:	ldr	d2, [x8, #1584]
  432bb4:	mov	v1.16b, v0.16b
  432bb8:	fmul	d3, d1, d1
  432bbc:	fsub	d3, d3, d0
  432bc0:	fadd	d4, d1, d1
  432bc4:	fdiv	d3, d3, d4
  432bc8:	fcmp	d3, d2
  432bcc:	fsub	d1, d1, d3
  432bd0:	b.gt	432bb8 <feof@plt+0x301e8>
  432bd4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432bd8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432bdc:	add	x1, x1, #0x6fb
  432be0:	add	x2, x2, #0x717
  432be4:	mov	v0.16b, v8.16b
  432be8:	bl	402440 <fprintf@plt>
  432bec:	ldr	x0, [x26, #1336]
  432bf0:	mov	x3, x19
  432bf4:	ldp	x20, x19, [sp, #112]
  432bf8:	ldp	x22, x21, [sp, #96]
  432bfc:	ldp	x24, x23, [sp, #80]
  432c00:	ldp	x26, x25, [sp, #64]
  432c04:	ldr	x27, [sp, #48]
  432c08:	ldp	x29, x30, [sp, #32]
  432c0c:	ldp	d9, d8, [sp, #16]
  432c10:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  432c14:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432c18:	add	x1, x1, #0x645
  432c1c:	add	x2, x2, #0x723
  432c20:	ldp	d11, d10, [sp], #128
  432c24:	b	402440 <fprintf@plt>
  432c28:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0xda68>
  432c2c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  432c30:	add	x0, x0, #0x732
  432c34:	add	x2, x2, #0x748
  432c38:	mov	w1, #0x165                 	// #357
  432c3c:	bl	404ac4 <feof@plt+0x20f4>
  432c40:	ldr	x8, [x0]
  432c44:	add	x10, x1, x2
  432c48:	str	x8, [x0, #8]
  432c4c:	ldr	x9, [x8]
  432c50:	str	x9, [x0, #1344]
  432c54:	ldr	x9, [x8, #32]
  432c58:	str	x9, [x0, #1352]
  432c5c:	ldr	x9, [x8, #16]
  432c60:	str	x9, [x0, #1360]
  432c64:	strb	wzr, [x8, #104]
  432c68:	stp	x1, x1, [x8]
  432c6c:	str	x10, [x8, #32]
  432c70:	ret
  432c74:	ldr	x8, [x0, #8]
  432c78:	ldr	x9, [x0, #1344]
  432c7c:	mov	w10, #0x1                   	// #1
  432c80:	str	x9, [x8]
  432c84:	ldr	x9, [x0, #1352]
  432c88:	str	x9, [x8, #32]
  432c8c:	ldr	x9, [x0, #1360]
  432c90:	strb	w10, [x8, #104]
  432c94:	str	x9, [x8, #8]
  432c98:	str	xzr, [x0, #8]
  432c9c:	ret
  432ca0:	stp	x29, x30, [sp, #-32]!
  432ca4:	str	x19, [sp, #16]
  432ca8:	mov	x19, x0
  432cac:	mov	x29, sp
  432cb0:	ldr	x8, [x19]
  432cb4:	ldrb	w8, [x8, #104]
  432cb8:	cbz	w8, 432cc8 <feof@plt+0x302f8>
  432cbc:	mov	x0, x19
  432cc0:	bl	426d3c <feof@plt+0x2436c>
  432cc4:	tbz	w0, #0, 432cf4 <feof@plt+0x30324>
  432cc8:	mov	x0, x19
  432ccc:	mov	x1, xzr
  432cd0:	mov	w2, wzr
  432cd4:	bl	432d04 <feof@plt+0x30334>
  432cd8:	tbz	w0, #0, 432cb0 <feof@plt+0x302e0>
  432cdc:	ldrb	w8, [x19, #18]
  432ce0:	cbnz	w8, 432cb0 <feof@plt+0x302e0>
  432ce4:	ldr	x8, [x19]
  432ce8:	cmp	x8, #0x0
  432cec:	cset	w0, ne  // ne = any
  432cf0:	b	432cf8 <feof@plt+0x30328>
  432cf4:	mov	w0, wzr
  432cf8:	ldr	x19, [sp, #16]
  432cfc:	ldp	x29, x30, [sp], #32
  432d00:	ret
  432d04:	sub	sp, sp, #0x100
  432d08:	stp	x29, x30, [sp, #160]
  432d0c:	stp	x28, x27, [sp, #176]
  432d10:	stp	x26, x25, [sp, #192]
  432d14:	stp	x24, x23, [sp, #208]
  432d18:	stp	x22, x21, [sp, #224]
  432d1c:	stp	x20, x19, [sp, #240]
  432d20:	ldr	x8, [x0]
  432d24:	ldr	x9, [x0, #136]
  432d28:	ldrb	w10, [x0, #19]
  432d2c:	mov	w25, w2
  432d30:	ldr	x8, [x8]
  432d34:	mov	x19, x0
  432d38:	cmp	w10, #0x0
  432d3c:	cset	w10, ne  // ne = any
  432d40:	str	x8, [x9, #16]
  432d44:	ldr	x8, [x0]
  432d48:	ldr	x9, [x0, #136]
  432d4c:	add	x29, sp, #0xa0
  432d50:	str	w10, [sp, #60]
  432d54:	ldr	x8, [x8, #32]
  432d58:	str	x8, [x9, #24]
  432d5c:	tbnz	w2, #0, 432d74 <feof@plt+0x303a4>
  432d60:	ldr	x8, [x19, #1312]
  432d64:	ldr	x9, [x19, #40]
  432d68:	str	x8, [x19, #1328]
  432d6c:	ldr	w8, [x9, #60]
  432d70:	str	w8, [x19, #1336]
  432d74:	str	xzr, [sp, #40]
  432d78:	ldr	x8, [x19]
  432d7c:	cmp	x1, #0x0
  432d80:	mov	w27, wzr
  432d84:	cset	w9, ne  // ne = any
  432d88:	ldr	x8, [x8]
  432d8c:	stur	wzr, [x29, #-76]
  432d90:	str	xzr, [sp, #8]
  432d94:	stur	xzr, [x29, #-72]
  432d98:	str	xzr, [sp, #32]
  432d9c:	stur	xzr, [x29, #-64]
  432da0:	str	wzr, [sp, #64]
  432da4:	str	wzr, [sp, #48]
  432da8:	str	x1, [sp, #72]
  432dac:	str	w9, [sp, #20]
  432db0:	str	x8, [sp, #24]
  432db4:	stur	w25, [x29, #-52]
  432db8:	ldr	x24, [x19, #136]
  432dbc:	ldr	x9, [x19, #1320]
  432dc0:	ldr	x21, [x19, #1328]
  432dc4:	ldp	x23, x8, [x24, #16]
  432dc8:	sub	x9, x9, x21
  432dcc:	sub	x8, x8, x23
  432dd0:	add	x8, x8, #0x3
  432dd4:	cmp	x8, x9
  432dd8:	b.ls	432e0c <feof@plt+0x3043c>  // b.plast
  432ddc:	ldr	x0, [x19, #1312]
  432de0:	sub	x20, x21, x0
  432de4:	add	x8, x20, x8
  432de8:	add	x8, x8, x8, lsl #1
  432dec:	lsr	x22, x8, #1
  432df0:	mov	x1, x22
  432df4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  432df8:	add	x8, x0, x22
  432dfc:	add	x21, x0, x20
  432e00:	str	x0, [x19, #1312]
  432e04:	str	x8, [x19, #1320]
  432e08:	str	x21, [x19, #1328]
  432e0c:	ldur	w25, [x29, #-52]
  432e10:	mov	w20, w27
  432e14:	sub	w27, w27, #0x1
  432e18:	b	432e24 <feof@plt+0x30454>
  432e1c:	ldr	x8, [x19]
  432e20:	ldr	x23, [x8]
  432e24:	ldr	x8, [x24, #8]
  432e28:	mov	x28, x23
  432e2c:	mov	x26, x21
  432e30:	cbnz	x8, 432e64 <feof@plt+0x30494>
  432e34:	tbnz	w25, #0, 432e64 <feof@plt+0x30494>
  432e38:	ldr	x8, [x19]
  432e3c:	ldr	w9, [x8, #56]
  432e40:	ldr	x10, [x8, #48]
  432e44:	lsl	x9, x9, #4
  432e48:	ldr	x9, [x10, x9]
  432e4c:	cmp	x28, x9
  432e50:	b.cc	432e64 <feof@plt+0x30494>  // b.lo, b.ul, b.last
  432e54:	mov	x0, x19
  432e58:	mov	w1, wzr
  432e5c:	str	x28, [x8]
  432e60:	bl	424c04 <feof@plt+0x22234>
  432e64:	mov	x23, x28
  432e68:	ldrb	w8, [x23], #1
  432e6c:	mov	x21, x26
  432e70:	cmp	w8, #0x7a
  432e74:	strb	w8, [x21], #1
  432e78:	b.hi	433288 <feof@plt+0x308b8>  // b.pmore
  432e7c:	adrp	x11, 45e000 <_obstack_memory_used@@Base+0xda68>
  432e80:	add	x11, x11, #0x754
  432e84:	adr	x9, 432e24 <feof@plt+0x30454>
  432e88:	ldrh	w10, [x11, x8, lsl #1]
  432e8c:	add	x9, x9, x10, lsl #2
  432e90:	br	x9
  432e94:	ldr	x8, [x24, #8]
  432e98:	str	x26, [x19, #1328]
  432e9c:	cbnz	x8, 433624 <feof@plt+0x30c54>
  432ea0:	ldr	x8, [x19]
  432ea4:	mov	w22, #0x1                   	// #1
  432ea8:	str	x23, [x8]
  432eac:	tbnz	w25, #0, 433aec <feof@plt+0x3111c>
  432eb0:	strb	w22, [x8, #104]
  432eb4:	ldr	x0, [x19, #40]
  432eb8:	mov	w10, #0x18                  	// #24
  432ebc:	mov	w2, wzr
  432ec0:	ldr	w8, [x0, #12]
  432ec4:	ldr	x9, [x0]
  432ec8:	sub	w8, w8, #0x1
  432ecc:	smaddl	x8, w8, w10, x9
  432ed0:	ldr	w9, [x0, #60]
  432ed4:	ldr	w10, [x8]
  432ed8:	ldrb	w11, [x8, #6]
  432edc:	ldr	w8, [x8, #16]
  432ee0:	sub	w9, w9, w10
  432ee4:	lsr	w9, w9, w11
  432ee8:	add	w8, w8, w9
  432eec:	add	w1, w8, #0x1
  432ef0:	bl	42a5e8 <feof@plt+0x27c18>
  432ef4:	cmp	w27, #0x1
  432ef8:	b.hi	433aec <feof@plt+0x3111c>  // b.pmore
  432efc:	ldrb	w8, [x19, #16]
  432f00:	cbnz	w8, 433ae8 <feof@plt+0x31118>
  432f04:	mov	x0, x19
  432f08:	bl	426d3c <feof@plt+0x2436c>
  432f0c:	tbz	w0, #0, 433ae8 <feof@plt+0x31118>
  432f10:	cmp	w20, #0x2
  432f14:	b.ne	432e1c <feof@plt+0x3044c>  // b.any
  432f18:	mov	w8, #0x20                  	// #32
  432f1c:	strb	w8, [x26]
  432f20:	b	432e1c <feof@plt+0x3044c>
  432f24:	ldr	w8, [sp, #64]
  432f28:	add	x21, x26, #0x1
  432f2c:	cbnz	w8, 43351c <feof@plt+0x30b4c>
  432f30:	ldrb	w8, [x23]
  432f34:	cmp	w8, #0x2a
  432f38:	b.ne	433518 <feof@plt+0x30b48>  // b.any
  432f3c:	ldr	w2, [sp, #20]
  432f40:	mov	x0, x19
  432f44:	mov	x1, x23
  432f48:	str	x21, [x19, #1328]
  432f4c:	bl	433bb8 <feof@plt+0x311e8>
  432f50:	ldr	x21, [x19, #1328]
  432f54:	mov	x23, x0
  432f58:	str	wzr, [sp, #64]
  432f5c:	b	432e24 <feof@plt+0x30454>
  432f60:	ldr	x8, [sp, #72]
  432f64:	ldr	w9, [sp, #64]
  432f68:	ldrb	w10, [x19, #18]
  432f6c:	cmp	x8, #0x0
  432f70:	cset	w8, ne  // ne = any
  432f74:	cmp	w9, #0x0
  432f78:	cset	w9, eq  // eq = none
  432f7c:	cbnz	w10, 433288 <feof@plt+0x308b8>
  432f80:	orr	w8, w8, w9
  432f84:	tbz	w8, #0, 433288 <feof@plt+0x308b8>
  432f88:	str	x26, [x19, #1328]
  432f8c:	ldrb	w8, [x28]
  432f90:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  432f94:	mov	x22, xzr
  432f98:	mov	x25, x26
  432f9c:	add	x10, x10, #0xa50
  432fa0:	mov	w11, #0x204                 	// #516
  432fa4:	add	x9, x28, x22
  432fa8:	strb	w8, [x26, x22]
  432fac:	ldrb	w8, [x9, #1]
  432fb0:	add	x25, x25, #0x1
  432fb4:	add	x22, x22, #0x1
  432fb8:	ldrh	w9, [x10, x8, lsl #1]
  432fbc:	tst	w9, w11
  432fc0:	b.ne	432fa4 <feof@plt+0x305d4>  // b.any
  432fc4:	ldr	x8, [x19, #136]
  432fc8:	add	x9, x28, x22
  432fcc:	add	x21, x26, x22
  432fd0:	mov	w3, #0x1                   	// #1
  432fd4:	str	x9, [x8, #16]
  432fd8:	ldr	x1, [x19, #1328]
  432fdc:	ldr	x0, [x19, #1088]
  432fe0:	sub	x2, x21, x1
  432fe4:	bl	43244c <feof@plt+0x2fa7c>
  432fe8:	str	x21, [x19, #1328]
  432fec:	ldr	x23, [x24, #16]
  432ff0:	ldrh	w8, [x0, #18]
  432ff4:	mov	x28, x0
  432ff8:	cmp	w20, #0x1
  432ffc:	b.hi	43300c <feof@plt+0x3063c>  // b.pmore
  433000:	tbz	w8, #1, 43300c <feof@plt+0x3063c>
  433004:	ldrb	w9, [x19, #24]
  433008:	cbz	w9, 433304 <feof@plt+0x30934>
  43300c:	ldr	x9, [sp, #72]
  433010:	cbz	x9, 433020 <feof@plt+0x30650>
  433014:	and	w8, w8, #0x3
  433018:	cmp	w8, #0x1
  43301c:	b.eq	433084 <feof@plt+0x306b4>  // b.none
  433020:	cmp	w20, #0x5
  433024:	mov	w27, #0x6                   	// #6
  433028:	b.eq	432e0c <feof@plt+0x3043c>  // b.none
  43302c:	ldrb	w8, [x19, #20]
  433030:	cbz	w8, 43332c <feof@plt+0x3095c>
  433034:	ldr	x8, [x19, #1248]
  433038:	mov	w27, #0x3                   	// #3
  43303c:	cmp	x8, x28
  433040:	b.eq	432e0c <feof@plt+0x3043c>  // b.none
  433044:	ldr	x8, [x19, #1288]
  433048:	mov	w27, #0x8                   	// #8
  43304c:	cmp	x8, x28
  433050:	b.eq	432e0c <feof@plt+0x3043c>  // b.none
  433054:	ldr	x8, [x19, #1296]
  433058:	mov	w27, #0x8                   	// #8
  43305c:	cmp	x8, x28
  433060:	b.eq	432e0c <feof@plt+0x3043c>  // b.none
  433064:	mov	x21, x25
  433068:	b	43328c <feof@plt+0x308bc>
  43306c:	ldr	w9, [sp, #64]
  433070:	add	x21, x26, #0x1
  433074:	cmp	w9, w8
  433078:	b.ne	4332f4 <feof@plt+0x30924>  // b.any
  43307c:	str	wzr, [sp, #64]
  433080:	b	43328c <feof@plt+0x308bc>
  433084:	str	x26, [x19, #1328]
  433088:	ldrh	w2, [x28, #24]
  43308c:	ldr	x1, [sp, #72]
  433090:	mov	x0, x19
  433094:	bl	433d20 <feof@plt+0x31350>
  433098:	ldr	x21, [x19, #1312]
  43309c:	b	43328c <feof@plt+0x308bc>
  4330a0:	ldr	x8, [sp, #24]
  4330a4:	add	x21, x26, #0x1
  4330a8:	cmp	x28, x8
  4330ac:	b.ne	4334ec <feof@plt+0x30b1c>  // b.any
  4330b0:	ldr	x8, [x19, #136]
  4330b4:	ldr	x8, [x8, #8]
  4330b8:	cbnz	x8, 4334ec <feof@plt+0x30b1c>
  4330bc:	ldrb	w8, [x19, #16]
  4330c0:	cbnz	w8, 4334ec <feof@plt+0x30b1c>
  4330c4:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x10a68>
  4330c8:	add	x26, x26, #0xa50
  4330cc:	str	x21, [x19, #1328]
  4330d0:	mov	x22, x23
  4330d4:	ldrb	w8, [x23], #1
  4330d8:	mov	x25, x21
  4330dc:	ldrh	w9, [x26, x8, lsl #1]
  4330e0:	strb	w8, [x21], #1
  4330e4:	tbnz	w9, #11, 4330d0 <feof@plt+0x30700>
  4330e8:	cmp	w8, #0x2f
  4330ec:	b.ne	433458 <feof@plt+0x30a88>  // b.any
  4330f0:	ldrb	w8, [x23]
  4330f4:	cmp	w8, #0x2a
  4330f8:	b.ne	433458 <feof@plt+0x30a88>  // b.any
  4330fc:	mov	x0, x19
  433100:	mov	x1, x23
  433104:	mov	w2, wzr
  433108:	str	x21, [x19, #1328]
  43310c:	bl	433bb8 <feof@plt+0x311e8>
  433110:	ldr	x21, [x19, #1328]
  433114:	mov	x23, x0
  433118:	b	4330d0 <feof@plt+0x30700>
  43311c:	ldr	w8, [sp, #64]
  433120:	add	x21, x26, #0x1
  433124:	cbnz	w8, 43328c <feof@plt+0x308bc>
  433128:	ldr	w8, [sp, #48]
  43312c:	cmp	w27, #0x7
  433130:	add	w8, w8, #0x1
  433134:	str	w8, [sp, #48]
  433138:	b.hi	43307c <feof@plt+0x306ac>  // b.pmore
  43313c:	adrp	x10, 45e000 <_obstack_memory_used@@Base+0xda68>
  433140:	add	x10, x10, #0x84a
  433144:	adr	x8, 43307c <feof@plt+0x306ac>
  433148:	ldrb	w9, [x10, x27]
  43314c:	add	x8, x8, x9, lsl #2
  433150:	br	x8
  433154:	ldur	x11, [x29, #-72]
  433158:	ldrh	w8, [x11, #18]
  43315c:	tbnz	w8, #6, 4334fc <feof@plt+0x30b2c>
  433160:	ldr	x9, [sp, #32]
  433164:	ldr	x10, [sp, #8]
  433168:	ldr	x8, [x19, #1312]
  43316c:	str	wzr, [sp, #64]
  433170:	mov	w20, #0x2                   	// #2
  433174:	str	x10, [x9]
  433178:	mov	w9, #0x1                   	// #1
  43317c:	str	w9, [sp, #48]
  433180:	add	x21, x8, x10
  433184:	b	43328c <feof@plt+0x308bc>
  433188:	ldr	w8, [sp, #64]
  43318c:	add	x21, x26, #0x1
  433190:	cbnz	w8, 43328c <feof@plt+0x308bc>
  433194:	ldr	w8, [sp, #48]
  433198:	cmp	w20, #0x2
  43319c:	sub	w8, w8, #0x1
  4331a0:	b.ne	4333c8 <feof@plt+0x309f8>  // b.any
  4331a4:	cbnz	w8, 4333c8 <feof@plt+0x309f8>
  4331a8:	ldur	x2, [x29, #-72]
  4331ac:	ldrh	w8, [x2, #18]
  4331b0:	mvn	w8, w8
  4331b4:	tst	w8, #0x3
  4331b8:	b.ne	4333f0 <feof@plt+0x30a20>  // b.any
  4331bc:	ldp	w8, w3, [sp, #40]
  4331c0:	add	w3, w3, #0x1
  4331c4:	cmp	w3, w8
  4331c8:	b.hi	4331dc <feof@plt+0x3080c>  // b.pmore
  4331cc:	ldr	x8, [x19, #1312]
  4331d0:	ldr	x9, [sp, #32]
  4331d4:	sub	x8, x21, x8
  4331d8:	str	x8, [x9, w3, uxtw #3]
  4331dc:	ldr	w8, [sp, #40]
  4331e0:	movi	v0.2d, #0x0
  4331e4:	sub	x1, x29, #0x30
  4331e8:	mov	x0, x19
  4331ec:	stp	q0, q0, [x29, #-32]
  4331f0:	stur	q0, [x29, #-48]
  4331f4:	sturh	w8, [x29, #-32]
  4331f8:	str	w3, [sp, #44]
  4331fc:	bl	42d804 <feof@plt+0x2ae34>
  433200:	tbnz	w0, #0, 4336c4 <feof@plt+0x30cf4>
  433204:	mov	w20, wzr
  433208:	str	wzr, [sp, #64]
  43320c:	str	wzr, [sp, #48]
  433210:	b	43328c <feof@plt+0x308bc>
  433214:	cmp	w20, #0x2
  433218:	add	x21, x26, #0x1
  43321c:	b.ne	43328c <feof@plt+0x308bc>  // b.any
  433220:	ldr	w10, [sp, #44]
  433224:	ldr	w8, [sp, #64]
  433228:	cbnz	w8, 43328c <feof@plt+0x308bc>
  43322c:	ldr	w8, [sp, #48]
  433230:	cmp	w8, #0x1
  433234:	b.ne	43328c <feof@plt+0x308bc>  // b.any
  433238:	ldr	w8, [sp, #40]
  43323c:	add	w10, w10, #0x1
  433240:	str	w10, [sp, #44]
  433244:	cmp	w10, w8
  433248:	b.ls	4333a4 <feof@plt+0x309d4>  // b.plast
  43324c:	mov	w8, #0x1                   	// #1
  433250:	str	wzr, [sp, #64]
  433254:	str	w8, [sp, #48]
  433258:	mov	w20, #0x2                   	// #2
  43325c:	b	43328c <feof@plt+0x308bc>
  433260:	ldp	w8, w9, [sp, #60]
  433264:	tst	w8, #0x1
  433268:	mov	w8, #0x3e                  	// #62
  43326c:	csel	w9, w8, w9, ne  // ne = any
  433270:	str	w9, [sp, #64]
  433274:	b	433288 <feof@plt+0x308b8>
  433278:	ldr	w8, [sp, #64]
  43327c:	cmp	w8, #0x3e
  433280:	csel	w8, wzr, w8, eq  // eq = none
  433284:	str	w8, [sp, #64]
  433288:	add	x21, x26, #0x1
  43328c:	ldrb	w8, [x19, #16]
  433290:	cbnz	w8, 433298 <feof@plt+0x308c8>
  433294:	strb	wzr, [x19, #440]
  433298:	mov	w8, #0x16b                 	// #363
  43329c:	lsr	w8, w8, w20
  4332a0:	tst	w8, #0x1
  4332a4:	csel	w8, w20, wzr, eq  // eq = none
  4332a8:	cmp	w20, #0x9
  4332ac:	str	wzr, [sp, #60]
  4332b0:	csel	w27, w8, w20, cc  // cc = lo, ul, last
  4332b4:	b	432e0c <feof@plt+0x3043c>
  4332b8:	ldrb	w8, [x23]
  4332bc:	add	x21, x26, #0x1
  4332c0:	sub	w9, w8, #0x22
  4332c4:	cmp	w9, #0x3a
  4332c8:	b.hi	43328c <feof@plt+0x308bc>  // b.pmore
  4332cc:	mov	w10, #0x1                   	// #1
  4332d0:	lsl	x9, x10, x9
  4332d4:	mov	x10, #0x21                  	// #33
  4332d8:	movk	x10, #0x400, lsl #48
  4332dc:	tst	x9, x10
  4332e0:	b.eq	43328c <feof@plt+0x308bc>  // b.none
  4332e4:	add	x23, x28, #0x2
  4332e8:	add	x21, x26, #0x2
  4332ec:	strb	w8, [x26, #1]
  4332f0:	b	43328c <feof@plt+0x308bc>
  4332f4:	cmp	w9, #0x0
  4332f8:	csel	w9, w8, w9, eq  // eq = none
  4332fc:	str	w9, [sp, #64]
  433300:	b	43328c <feof@plt+0x308bc>
  433304:	strb	wzr, [x19, #440]
  433308:	ldrh	w10, [x28, #18]
  43330c:	and	w8, w10, #0x3
  433310:	cmp	w8, #0x3
  433314:	b.ne	433334 <feof@plt+0x30964>  // b.any
  433318:	ldr	w9, [x28, #24]
  43331c:	cmp	w9, #0xa
  433320:	b.ne	433524 <feof@plt+0x30b54>  // b.any
  433324:	mov	w8, #0x1                   	// #1
  433328:	b	433344 <feof@plt+0x30974>
  43332c:	add	x21, x26, x22
  433330:	b	43328c <feof@plt+0x308bc>
  433334:	ldr	x9, [x28, #24]
  433338:	ldrb	w11, [x9, #19]
  43333c:	tbz	w11, #2, 433524 <feof@plt+0x30b54>
  433340:	ldrh	w8, [x9, #16]
  433344:	ldur	x1, [x29, #-64]
  433348:	add	x21, x26, x22
  43334c:	str	w8, [sp, #40]
  433350:	cbz	x1, 43335c <feof@plt+0x3098c>
  433354:	mov	x0, x19
  433358:	bl	42937c <feof@plt+0x269ac>
  43335c:	ldr	w8, [sp, #40]
  433360:	mov	x0, x19
  433364:	lsl	w8, w8, #3
  433368:	add	w1, w8, #0x8
  43336c:	bl	42939c <feof@plt+0x269cc>
  433370:	ldr	x8, [x19, #40]
  433374:	ldr	x9, [x19, #1312]
  433378:	ldr	x10, [x0, #16]
  43337c:	str	wzr, [sp, #44]
  433380:	ldr	w8, [x8, #60]
  433384:	stur	x0, [x29, #-64]
  433388:	str	x10, [sp, #32]
  43338c:	mov	w27, #0x1                   	// #1
  433390:	stur	w8, [x29, #-76]
  433394:	sub	x8, x26, x9
  433398:	str	x8, [sp, #8]
  43339c:	stur	x28, [x29, #-72]
  4333a0:	b	432e0c <feof@plt+0x3043c>
  4333a4:	ldr	x8, [x19, #1312]
  4333a8:	mov	w9, #0x1                   	// #1
  4333ac:	str	w9, [sp, #48]
  4333b0:	ldr	x9, [sp, #32]
  4333b4:	sub	x8, x21, x8
  4333b8:	str	wzr, [sp, #64]
  4333bc:	mov	w20, #0x2                   	// #2
  4333c0:	str	x8, [x9, w10, uxtw #3]
  4333c4:	b	43328c <feof@plt+0x308bc>
  4333c8:	cmp	w20, #0x9
  4333cc:	str	w8, [sp, #48]
  4333d0:	b.hi	43307c <feof@plt+0x306ac>  // b.pmore
  4333d4:	mov	w8, #0x1                   	// #1
  4333d8:	lsl	w8, w8, w20
  4333dc:	mov	w9, #0x290                 	// #656
  4333e0:	tst	w8, w9
  4333e4:	b.eq	43307c <feof@plt+0x306ac>  // b.none
  4333e8:	mov	w20, wzr
  4333ec:	b	43307c <feof@plt+0x306ac>
  4333f0:	ldr	x1, [x2, #24]
  4333f4:	ldp	w9, w10, [sp, #40]
  4333f8:	ldrb	w8, [x1, #19]
  4333fc:	add	w22, w10, #0x1
  433400:	cmp	w22, w9
  433404:	orr	w8, w8, #0x20
  433408:	strb	w8, [x1, #19]
  43340c:	b.hi	433420 <feof@plt+0x30a50>  // b.pmore
  433410:	ldr	x8, [x19, #1312]
  433414:	ldr	x9, [sp, #32]
  433418:	sub	x8, x21, x8
  43341c:	str	x8, [x9, w22, uxtw #3]
  433420:	cbnz	w10, 433604 <feof@plt+0x30c34>
  433424:	ldrh	w8, [x1, #16]
  433428:	cbz	w8, 4335f0 <feof@plt+0x30c20>
  43342c:	mov	w22, #0x1                   	// #1
  433430:	b	433604 <feof@plt+0x30c34>
  433434:	str	wzr, [sp, #64]
  433438:	mov	w20, #0x4                   	// #4
  43343c:	b	43328c <feof@plt+0x308bc>
  433440:	str	wzr, [sp, #64]
  433444:	mov	w20, #0x7                   	// #7
  433448:	b	43328c <feof@plt+0x308bc>
  43344c:	str	wzr, [sp, #64]
  433450:	mov	w20, #0x9                   	// #9
  433454:	b	43328c <feof@plt+0x308bc>
  433458:	str	x25, [x19, #1328]
  43345c:	ldrb	w8, [x22]
  433460:	cmp	x8, #0xa
  433464:	b.eq	433b64 <feof@plt+0x31194>  // b.none
  433468:	ldrh	w9, [x26, x8, lsl #1]
  43346c:	tbz	w9, #2, 43347c <feof@plt+0x30aac>
  433470:	ldr	w10, [x19, #1116]
  433474:	cmp	w10, #0x15
  433478:	b.ne	433b48 <feof@plt+0x31178>  // b.any
  43347c:	tbnz	w9, #9, 433490 <feof@plt+0x30ac0>
  433480:	cmp	w8, #0x24
  433484:	b.ne	4334d8 <feof@plt+0x30b08>  // b.any
  433488:	ldrb	w9, [x19, #1146]
  43348c:	cbz	w9, 4334d8 <feof@plt+0x30b08>
  433490:	mov	x21, x25
  433494:	mov	x9, x22
  433498:	mov	w11, #0x204                 	// #516
  43349c:	strb	w8, [x21], #1
  4334a0:	ldrb	w8, [x9, #1]!
  4334a4:	ldrh	w10, [x26, x8, lsl #1]
  4334a8:	tst	w10, w11
  4334ac:	b.ne	43349c <feof@plt+0x30acc>  // b.any
  4334b0:	ldr	x8, [x19, #136]
  4334b4:	mov	w3, #0x1                   	// #1
  4334b8:	str	x9, [x8, #16]
  4334bc:	ldr	x1, [x19, #1328]
  4334c0:	ldr	x0, [x19, #1088]
  4334c4:	sub	x2, x21, x1
  4334c8:	bl	43244c <feof@plt+0x2fa7c>
  4334cc:	str	x21, [x19, #1328]
  4334d0:	ldrb	w8, [x0, #16]
  4334d4:	tbnz	w8, #0, 433b48 <feof@plt+0x31178>
  4334d8:	ldr	w8, [x19, #1116]
  4334dc:	cmp	w8, #0x15
  4334e0:	b.ne	433b48 <feof@plt+0x31178>  // b.any
  4334e4:	mov	x21, x25
  4334e8:	mov	x23, x22
  4334ec:	ldrb	w8, [x19, #20]
  4334f0:	mov	w27, #0x5                   	// #5
  4334f4:	cbnz	w8, 432e0c <feof@plt+0x3043c>
  4334f8:	b	43328c <feof@plt+0x308bc>
  4334fc:	mvn	w8, w8
  433500:	tst	w8, #0x3
  433504:	b.ne	43353c <feof@plt+0x30b6c>  // b.any
  433508:	ldr	w8, [x11, #24]
  43350c:	cmp	w8, #0xa
  433510:	b.eq	433548 <feof@plt+0x30b78>  // b.none
  433514:	b	433578 <feof@plt+0x30ba8>
  433518:	mov	w8, wzr
  43351c:	str	w8, [sp, #64]
  433520:	b	43328c <feof@plt+0x308bc>
  433524:	tbz	w10, #6, 433634 <feof@plt+0x30c64>
  433528:	cmp	w8, #0x3
  43352c:	b.ne	433594 <feof@plt+0x30bc4>  // b.any
  433530:	cmp	w9, #0xa
  433534:	b.eq	4335a0 <feof@plt+0x30bd0>  // b.none
  433538:	b	4335d0 <feof@plt+0x30c00>
  43353c:	ldr	x8, [x11, #24]
  433540:	ldrb	w8, [x8, #19]
  433544:	tbz	w8, #2, 433578 <feof@plt+0x30ba8>
  433548:	ldr	x8, [x19, #136]
  43354c:	mov	w9, #0x1                   	// #1
  433550:	b	433560 <feof@plt+0x30b90>
  433554:	ldr	x8, [x8, #8]
  433558:	add	x9, x9, #0x1
  43355c:	cbz	x8, 433160 <feof@plt+0x30790>
  433560:	cmp	x9, #0x15
  433564:	b.cc	433554 <feof@plt+0x30b84>  // b.lo, b.ul, b.last
  433568:	ldr	x10, [x8, #40]
  43356c:	cmp	x10, x11
  433570:	b.ne	433554 <feof@plt+0x30b84>  // b.any
  433574:	cbz	x8, 433160 <feof@plt+0x30790>
  433578:	ldr	x3, [x11]
  43357c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  433580:	mov	w1, #0x3                   	// #3
  433584:	mov	x0, x19
  433588:	add	x2, x2, #0x852
  43358c:	bl	41de04 <feof@plt+0x1b434>
  433590:	b	4333e8 <feof@plt+0x30a18>
  433594:	ldr	x8, [x28, #24]
  433598:	ldrb	w8, [x8, #19]
  43359c:	tbz	w8, #2, 4335d0 <feof@plt+0x30c00>
  4335a0:	ldr	x8, [x19, #136]
  4335a4:	mov	w9, #0x1                   	// #1
  4335a8:	b	4335b8 <feof@plt+0x30be8>
  4335ac:	ldr	x8, [x8, #8]
  4335b0:	add	x9, x9, #0x1
  4335b4:	cbz	x8, 433634 <feof@plt+0x30c64>
  4335b8:	cmp	x9, #0x15
  4335bc:	b.cc	4335ac <feof@plt+0x30bdc>  // b.lo, b.ul, b.last
  4335c0:	ldr	x10, [x8, #40]
  4335c4:	cmp	x10, x28
  4335c8:	b.ne	4335ac <feof@plt+0x30bdc>  // b.any
  4335cc:	cbz	x8, 433634 <feof@plt+0x30c64>
  4335d0:	ldr	x3, [x28]
  4335d4:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  4335d8:	mov	w1, #0x3                   	// #3
  4335dc:	mov	x0, x19
  4335e0:	add	x2, x2, #0x852
  4335e4:	add	x21, x26, x22
  4335e8:	bl	41de04 <feof@plt+0x1b434>
  4335ec:	b	43328c <feof@plt+0x308bc>
  4335f0:	ldr	x8, [x19, #1312]
  4335f4:	ldr	x9, [sp, #8]
  4335f8:	add	x8, x8, x9
  4335fc:	cmp	x8, x26
  433600:	cset	w22, ne  // ne = any
  433604:	mov	x0, x19
  433608:	mov	w3, w22
  43360c:	bl	42d804 <feof@plt+0x2ae34>
  433610:	tbnz	w0, #0, 4338b4 <feof@plt+0x30ee4>
  433614:	mov	w20, wzr
  433618:	str	wzr, [sp, #64]
  43361c:	stp	w22, wzr, [sp, #44]
  433620:	b	43328c <feof@plt+0x308bc>
  433624:	mov	x0, x19
  433628:	bl	42da2c <feof@plt+0x2b05c>
  43362c:	mov	w27, w20
  433630:	b	432db8 <feof@plt+0x303e8>
  433634:	str	x26, [x19, #1328]
  433638:	ldrh	w8, [x28, #18]
  43363c:	mov	x20, x28
  433640:	mvn	w8, w8
  433644:	tst	w8, #0x3
  433648:	b.ne	433690 <feof@plt+0x30cc0>  // b.any
  43364c:	mov	x0, x19
  433650:	mov	x1, x20
  433654:	mov	w2, wzr
  433658:	bl	42d3a8 <feof@plt+0x2a9d8>
  43365c:	mov	x22, x0
  433660:	bl	402420 <strlen@plt>
  433664:	mov	x28, x0
  433668:	add	x1, x0, #0x1
  43366c:	mov	x0, x19
  433670:	bl	428b3c <feof@plt+0x2616c>
  433674:	mov	x1, x22
  433678:	mov	x2, x28
  43367c:	mov	x21, x0
  433680:	bl	402390 <memcpy@plt>
  433684:	mov	w8, #0xa                   	// #10
  433688:	strb	w8, [x21, x28]
  43368c:	b	4336a8 <feof@plt+0x30cd8>
  433690:	ldr	x8, [x20, #24]
  433694:	ldrb	w9, [x8, #19]
  433698:	ldr	x21, [x8, #24]
  43369c:	ldr	w28, [x8, #12]
  4336a0:	orr	w9, w9, #0x20
  4336a4:	strb	w9, [x8, #19]
  4336a8:	mov	x0, x19
  4336ac:	mov	x1, x20
  4336b0:	mov	x2, x21
  4336b4:	mov	x3, x28
  4336b8:	bl	42d9ac <feof@plt+0x2afdc>
  4336bc:	mov	w27, wzr
  4336c0:	b	432db8 <feof@plt+0x303e8>
  4336c4:	ldr	x20, [sp, #32]
  4336c8:	ldr	x10, [x19, #1312]
  4336cc:	mov	x0, x19
  4336d0:	ldp	x9, x8, [x20]
  4336d4:	sub	x21, x8, x9
  4336d8:	ldr	x8, [sp, #8]
  4336dc:	add	x1, x21, #0x2
  4336e0:	add	x8, x10, x8
  4336e4:	str	x8, [x19, #1328]
  4336e8:	str	x23, [x24, #16]
  4336ec:	bl	428b3c <feof@plt+0x2616c>
  4336f0:	mov	x22, x0
  4336f4:	mov	w8, #0x28                  	// #40
  4336f8:	strb	w8, [x22], #1
  4336fc:	ldr	x8, [x19, #1312]
  433700:	ldr	x9, [x20]
  433704:	mov	x25, x0
  433708:	mov	x0, x22
  43370c:	mov	x2, x21
  433710:	add	x1, x8, x9
  433714:	bl	402390 <memcpy@plt>
  433718:	add	x8, x21, x25
  43371c:	mov	w9, #0xa                   	// #10
  433720:	strb	w9, [x8, #1]
  433724:	ldr	x10, [x24, #24]
  433728:	add	x9, x22, x21
  43372c:	mov	w2, #0x1                   	// #1
  433730:	mov	x0, x19
  433734:	str	x10, [sp, #64]
  433738:	ldp	x8, x10, [x19]
  43373c:	mov	x1, xzr
  433740:	str	x10, [sp, #48]
  433744:	ldrb	w10, [x8, #104]
  433748:	ldr	x27, [x8, #32]
  43374c:	ldp	x26, x28, [x8]
  433750:	str	x9, [x8, #32]
  433754:	str	w10, [sp, #4]
  433758:	stp	x25, x25, [x8]
  43375c:	strb	wzr, [x8, #104]
  433760:	ldrb	w9, [x19, #16]
  433764:	str	x8, [x19, #8]
  433768:	mov	w8, #0x1                   	// #1
  43376c:	strb	w8, [x19, #16]
  433770:	ldr	x20, [x24, #8]
  433774:	cmp	w9, #0x0
  433778:	cset	w22, ne  // ne = any
  43377c:	str	xzr, [x24, #8]
  433780:	bl	432d04 <feof@plt+0x30334>
  433784:	ldr	x9, [x19, #1320]
  433788:	ldr	x8, [x19, #1328]
  43378c:	strb	w22, [x19, #16]
  433790:	sub	x9, x9, x8
  433794:	cmp	x9, #0x3
  433798:	b.hi	4337cc <feof@plt+0x30dfc>  // b.pmore
  43379c:	ldr	x0, [x19, #1312]
  4337a0:	sub	x21, x8, x0
  4337a4:	add	x8, x21, x21, lsl #1
  4337a8:	add	x8, x8, #0xc
  4337ac:	lsr	x22, x8, #1
  4337b0:	mov	x1, x22
  4337b4:	bl	450728 <_obstack_memory_used@@Base+0x190>
  4337b8:	add	x9, x0, x22
  4337bc:	add	x8, x0, x21
  4337c0:	str	x0, [x19, #1312]
  4337c4:	str	x9, [x19, #1320]
  4337c8:	str	x8, [x19, #1328]
  4337cc:	mov	w9, #0xa                   	// #10
  4337d0:	strb	w9, [x8]
  4337d4:	ldr	x8, [x19, #1312]
  4337d8:	ldr	x22, [sp, #8]
  4337dc:	ldr	x9, [x19]
  4337e0:	mov	x0, x19
  4337e4:	mov	w2, wzr
  4337e8:	add	x8, x8, x22
  4337ec:	stp	x8, x8, [x9]
  4337f0:	ldr	x10, [x19, #1328]
  4337f4:	ldur	x21, [x29, #-72]
  4337f8:	str	x10, [x9, #32]
  4337fc:	str	x8, [x24, #16]
  433800:	ldr	x8, [x19]
  433804:	mov	x1, x21
  433808:	ldr	x8, [x8, #32]
  43380c:	str	x8, [x24, #24]
  433810:	ldrb	w8, [x19, #24]
  433814:	add	w8, w8, #0x1
  433818:	strb	w8, [x19, #24]
  43381c:	bl	42d3a8 <feof@plt+0x2a9d8>
  433820:	ldrb	w8, [x19, #24]
  433824:	sub	w8, w8, #0x1
  433828:	strb	w8, [x19, #24]
  43382c:	str	x20, [x24, #8]
  433830:	ldr	x8, [x19]
  433834:	mov	x20, x0
  433838:	stp	x26, x28, [x8]
  43383c:	ldr	w9, [sp, #4]
  433840:	str	x27, [x8, #32]
  433844:	strb	w9, [x8, #104]
  433848:	ldr	x8, [x19, #1312]
  43384c:	ldr	x9, [sp, #48]
  433850:	add	x8, x8, x22
  433854:	str	x8, [x19, #1328]
  433858:	ldr	x8, [sp, #64]
  43385c:	str	x9, [x19, #8]
  433860:	stp	x23, x8, [x24, #16]
  433864:	bl	402420 <strlen@plt>
  433868:	mov	x28, x0
  43386c:	add	x1, x0, #0x1
  433870:	mov	x0, x19
  433874:	bl	428b3c <feof@plt+0x2616c>
  433878:	mov	x1, x20
  43387c:	mov	x2, x28
  433880:	mov	x22, x0
  433884:	bl	402390 <memcpy@plt>
  433888:	mov	w8, #0xa                   	// #10
  43388c:	mov	x0, x19
  433890:	mov	x1, x21
  433894:	mov	x2, x22
  433898:	mov	x3, x28
  43389c:	strb	w8, [x22, x28]
  4338a0:	bl	42d9ac <feof@plt+0x2afdc>
  4338a4:	mov	w27, wzr
  4338a8:	str	wzr, [sp, #64]
  4338ac:	str	wzr, [sp, #48]
  4338b0:	b	432db8 <feof@plt+0x303e8>
  4338b4:	ldr	x8, [x19, #1312]
  4338b8:	ldr	x9, [sp, #8]
  4338bc:	mov	w25, w22
  4338c0:	add	x8, x8, x9
  4338c4:	str	x8, [x19, #1328]
  4338c8:	ldur	x8, [x29, #-72]
  4338cc:	str	x23, [x24, #16]
  4338d0:	ldr	x20, [x8, #24]
  4338d4:	ldrh	w8, [x20, #16]
  4338d8:	cbz	w8, 433928 <feof@plt+0x30f58>
  4338dc:	ldr	x9, [x20, #24]
  4338e0:	ldrh	w11, [x9, #4]
  4338e4:	ldr	w8, [x9]
  4338e8:	cbz	w11, 433980 <feof@plt+0x30fb0>
  4338ec:	ldr	x21, [sp, #32]
  4338f0:	mov	x10, x8
  4338f4:	add	x10, x10, #0xd
  4338f8:	add	x11, x21, w11, uxth #3
  4338fc:	and	x10, x10, #0x1fffffff8
  433900:	ldp	x13, x12, [x11, #-8]
  433904:	add	x9, x9, x10
  433908:	ldr	w10, [x9]
  43390c:	ldrh	w11, [x9, #4]
  433910:	mvn	x13, x13
  433914:	add	x12, x13, x12
  433918:	add	x8, x8, x10
  43391c:	add	x8, x8, x12, lsl #1
  433920:	cbnz	w11, 4338f4 <feof@plt+0x30f24>
  433924:	b	433984 <feof@plt+0x30fb4>
  433928:	ldur	x8, [x29, #-72]
  43392c:	ldrh	w8, [x8, #18]
  433930:	mvn	w8, w8
  433934:	tst	w8, #0x3
  433938:	b.ne	433ab0 <feof@plt+0x310e0>  // b.any
  43393c:	ldur	x1, [x29, #-72]
  433940:	mov	x0, x19
  433944:	mov	w2, wzr
  433948:	bl	42d3a8 <feof@plt+0x2a9d8>
  43394c:	mov	x20, x0
  433950:	bl	402420 <strlen@plt>
  433954:	mov	x22, x0
  433958:	add	x1, x0, #0x1
  43395c:	mov	x0, x19
  433960:	bl	428b3c <feof@plt+0x2616c>
  433964:	mov	x1, x20
  433968:	mov	x2, x22
  43396c:	mov	x28, x0
  433970:	bl	402390 <memcpy@plt>
  433974:	mov	w8, #0xa                   	// #10
  433978:	strb	w8, [x28, x22]
  43397c:	b	433ac4 <feof@plt+0x310f4>
  433980:	ldr	x21, [sp, #32]
  433984:	add	x1, x8, #0x1
  433988:	mov	x0, x19
  43398c:	bl	42939c <feof@plt+0x269cc>
  433990:	ldr	x9, [x0, #16]
  433994:	ldr	x10, [x20, #24]
  433998:	mov	x22, x0
  43399c:	mov	w8, wzr
  4339a0:	mov	x3, xzr
  4339a4:	mov	w16, #0x5c                  	// #92
  4339a8:	b	4339bc <feof@plt+0x30fec>
  4339ac:	ldr	w11, [x10]
  4339b0:	add	x11, x11, #0xd
  4339b4:	and	x11, x11, #0x1fffffff8
  4339b8:	add	x10, x10, x11
  4339bc:	ldr	w11, [x10]
  4339c0:	add	x3, x3, x11
  4339c4:	cbz	w11, 4339ec <feof@plt+0x3101c>
  4339c8:	add	x12, x10, #0x6
  4339cc:	ldrb	w13, [x12], #1
  4339d0:	cmp	w8, #0x0
  4339d4:	cset	w14, eq  // eq = none
  4339d8:	cmp	w13, #0x22
  4339dc:	csel	w8, w14, w8, eq  // eq = none
  4339e0:	subs	x11, x11, #0x1
  4339e4:	strb	w13, [x9], #1
  4339e8:	b.ne	4339cc <feof@plt+0x30ffc>  // b.any
  4339ec:	ldrh	w11, [x10, #4]
  4339f0:	cbz	x11, 433a80 <feof@plt+0x310b0>
  4339f4:	add	x11, x21, x11, lsl #3
  4339f8:	ldp	x12, x14, [x11, #-8]
  4339fc:	mvn	x11, x12
  433a00:	cmn	x14, x11
  433a04:	b.eq	4339ac <feof@plt+0x30fdc>  // b.none
  433a08:	ldr	x11, [x19, #1312]
  433a0c:	mov	w13, wzr
  433a10:	add	x11, x11, x12
  433a14:	sub	x12, x12, x14
  433a18:	add	x12, x12, #0x1
  433a1c:	mov	x14, x11
  433a20:	b	433a40 <feof@plt+0x31070>
  433a24:	strb	w16, [x9], #1
  433a28:	add	x3, x3, #0x1
  433a2c:	ldrb	w15, [x14], #1
  433a30:	adds	x12, x12, #0x1
  433a34:	add	x3, x3, #0x1
  433a38:	strb	w15, [x9], #1
  433a3c:	b.cs	4339ac <feof@plt+0x30fdc>  // b.hs, b.nlast
  433a40:	cbz	w8, 433a2c <feof@plt+0x3105c>
  433a44:	ldrb	w15, [x14]
  433a48:	cmp	w15, #0x22
  433a4c:	b.ne	433a70 <feof@plt+0x310a0>  // b.any
  433a50:	cmp	x14, x11
  433a54:	b.ls	433a24 <feof@plt+0x31054>  // b.plast
  433a58:	ldurb	w15, [x14, #-1]
  433a5c:	cmp	w15, #0x5c
  433a60:	b.eq	433a24 <feof@plt+0x31054>  // b.none
  433a64:	cmp	w13, #0x0
  433a68:	cset	w13, eq  // eq = none
  433a6c:	b	433a24 <feof@plt+0x31054>
  433a70:	cbz	w13, 433a2c <feof@plt+0x3105c>
  433a74:	cmp	w15, #0x5c
  433a78:	b.eq	433a24 <feof@plt+0x31054>  // b.none
  433a7c:	b	433a2c <feof@plt+0x3105c>
  433a80:	mov	w8, #0xa                   	// #10
  433a84:	strb	w8, [x9]
  433a88:	ldr	x2, [x22, #16]
  433a8c:	ldur	x1, [x29, #-72]
  433a90:	mov	x0, x19
  433a94:	bl	42d9ac <feof@plt+0x2afdc>
  433a98:	stp	w25, wzr, [sp, #44]
  433a9c:	ldr	x8, [x19, #136]
  433aa0:	mov	w27, wzr
  433aa4:	str	wzr, [sp, #64]
  433aa8:	str	x22, [x8, #32]
  433aac:	b	432db8 <feof@plt+0x303e8>
  433ab0:	ldrb	w8, [x20, #19]
  433ab4:	ldr	x28, [x20, #24]
  433ab8:	ldr	w22, [x20, #12]
  433abc:	orr	w8, w8, #0x20
  433ac0:	strb	w8, [x20, #19]
  433ac4:	ldur	x1, [x29, #-72]
  433ac8:	mov	x0, x19
  433acc:	mov	x2, x28
  433ad0:	mov	x3, x22
  433ad4:	bl	42d9ac <feof@plt+0x2afdc>
  433ad8:	mov	w27, wzr
  433adc:	str	wzr, [sp, #64]
  433ae0:	stp	w25, wzr, [sp, #44]
  433ae4:	b	432db8 <feof@plt+0x303e8>
  433ae8:	mov	w22, #0x1                   	// #1
  433aec:	ldp	x21, x1, [x29, #-72]
  433af0:	cbz	x1, 433afc <feof@plt+0x3112c>
  433af4:	mov	x0, x19
  433af8:	bl	42937c <feof@plt+0x269ac>
  433afc:	cmp	w20, #0x2
  433b00:	b.ne	433b24 <feof@plt+0x31154>  // b.any
  433b04:	ldr	x5, [x21]
  433b08:	ldur	w2, [x29, #-76]
  433b0c:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0xda68>
  433b10:	add	x4, x4, #0x197
  433b14:	mov	w1, #0x3                   	// #3
  433b18:	mov	x0, x19
  433b1c:	mov	w3, wzr
  433b20:	bl	41e2c4 <feof@plt+0x1b8f4>
  433b24:	mov	w0, w22
  433b28:	ldp	x20, x19, [sp, #240]
  433b2c:	ldp	x22, x21, [sp, #224]
  433b30:	ldp	x24, x23, [sp, #208]
  433b34:	ldp	x26, x25, [sp, #192]
  433b38:	ldp	x28, x27, [sp, #176]
  433b3c:	ldp	x29, x30, [sp, #160]
  433b40:	add	sp, sp, #0x100
  433b44:	ret
  433b48:	ldr	x8, [x19]
  433b4c:	mov	x0, x19
  433b50:	mov	w1, wzr
  433b54:	str	x22, [x8]
  433b58:	bl	419c50 <feof@plt+0x17280>
  433b5c:	mov	w22, wzr
  433b60:	b	433aec <feof@plt+0x3111c>
  433b64:	ldr	x8, [x19]
  433b68:	mov	w9, #0x1                   	// #1
  433b6c:	mov	w10, #0x18                  	// #24
  433b70:	mov	w2, wzr
  433b74:	strb	w9, [x8, #104]
  433b78:	ldr	x0, [x19, #40]
  433b7c:	ldr	w8, [x0, #12]
  433b80:	ldr	x9, [x0]
  433b84:	sub	w8, w8, #0x1
  433b88:	smaddl	x8, w8, w10, x9
  433b8c:	ldr	w9, [x0, #60]
  433b90:	ldr	w10, [x8]
  433b94:	ldrb	w11, [x8, #6]
  433b98:	ldr	w8, [x8, #16]
  433b9c:	sub	w9, w9, w10
  433ba0:	lsr	w9, w9, w11
  433ba4:	add	w8, w8, w9
  433ba8:	add	w1, w8, #0x1
  433bac:	bl	42a5e8 <feof@plt+0x27c18>
  433bb0:	mov	w22, wzr
  433bb4:	b	433aec <feof@plt+0x3111c>
  433bb8:	stp	x29, x30, [sp, #-64]!
  433bbc:	stp	x22, x21, [sp, #32]
  433bc0:	stp	x20, x19, [sp, #48]
  433bc4:	str	x23, [sp, #16]
  433bc8:	ldr	x8, [x0, #40]
  433bcc:	ldr	x23, [x0]
  433bd0:	mov	x20, x1
  433bd4:	mov	x19, x0
  433bd8:	ldr	w22, [x8, #60]
  433bdc:	str	x1, [x23]
  433be0:	ldr	x8, [x0, #136]
  433be4:	mov	w21, w2
  433be8:	mov	x29, sp
  433bec:	ldr	x8, [x8, #8]
  433bf0:	cbz	x8, 433c44 <feof@plt+0x31274>
  433bf4:	mov	x8, x20
  433bf8:	ldrb	w9, [x8, #1]!
  433bfc:	cmp	w9, #0x2f
  433c00:	cinc	x8, x8, eq  // eq = none
  433c04:	b	433c10 <feof@plt+0x31240>
  433c08:	cmp	w10, #0xa
  433c0c:	b.eq	433cb4 <feof@plt+0x312e4>  // b.none
  433c10:	mov	x9, x8
  433c14:	ldrb	w10, [x8], #1
  433c18:	cmp	w10, #0x2f
  433c1c:	b.ne	433c08 <feof@plt+0x31238>  // b.any
  433c20:	ldurb	w10, [x9, #-1]
  433c24:	cmp	w10, #0x2a
  433c28:	b.ne	433c10 <feof@plt+0x31240>  // b.any
  433c2c:	add	x8, x9, #0x1
  433c30:	mov	w22, wzr
  433c34:	str	x8, [x23]
  433c38:	ldrb	w8, [x19, #16]
  433c3c:	cbnz	w8, 433ce0 <feof@plt+0x31310>
  433c40:	b	433c5c <feof@plt+0x3128c>
  433c44:	mov	x0, x19
  433c48:	bl	424e48 <feof@plt+0x22478>
  433c4c:	tbnz	w0, #0, 433cb8 <feof@plt+0x312e8>
  433c50:	mov	w22, wzr
  433c54:	ldrb	w8, [x19, #16]
  433c58:	cbnz	w8, 433ce0 <feof@plt+0x31310>
  433c5c:	ldrb	w8, [x19, #1123]
  433c60:	cbnz	w8, 433cec <feof@plt+0x3131c>
  433c64:	ldr	x8, [x23]
  433c68:	ldr	x0, [x19, #1328]
  433c6c:	mov	x1, x20
  433c70:	sub	x21, x8, x20
  433c74:	mov	x2, x21
  433c78:	bl	402390 <memcpy@plt>
  433c7c:	ldr	x8, [x19, #1328]
  433c80:	add	x8, x8, x21
  433c84:	str	x8, [x19, #1328]
  433c88:	cbz	w22, 433d08 <feof@plt+0x31338>
  433c8c:	add	x9, x8, #0x1
  433c90:	mov	w10, #0x2a                  	// #42
  433c94:	str	x9, [x19, #1328]
  433c98:	strb	w10, [x8]
  433c9c:	ldr	x8, [x19, #1328]
  433ca0:	mov	w9, #0x2f                  	// #47
  433ca4:	add	x10, x8, #0x1
  433ca8:	str	x10, [x19, #1328]
  433cac:	strb	w9, [x8]
  433cb0:	b	433d08 <feof@plt+0x31338>
  433cb4:	str	x9, [x23]
  433cb8:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xca68>
  433cbc:	add	x4, x4, #0x473
  433cc0:	mov	w1, #0x3                   	// #3
  433cc4:	mov	x0, x19
  433cc8:	mov	w2, w22
  433ccc:	mov	w3, wzr
  433cd0:	bl	41e2c4 <feof@plt+0x1b8f4>
  433cd4:	mov	w22, #0x1                   	// #1
  433cd8:	ldrb	w8, [x19, #16]
  433cdc:	cbz	w8, 433c5c <feof@plt+0x3128c>
  433ce0:	cbz	w21, 433cfc <feof@plt+0x3132c>
  433ce4:	ldrb	w8, [x19, #1124]
  433ce8:	cbz	w8, 433c64 <feof@plt+0x31294>
  433cec:	ldr	x8, [x19, #1328]
  433cf0:	sub	x8, x8, #0x1
  433cf4:	str	x8, [x19, #1328]
  433cf8:	b	433d08 <feof@plt+0x31338>
  433cfc:	ldr	x8, [x19, #1328]
  433d00:	mov	w9, #0x20                  	// #32
  433d04:	sturb	w9, [x8, #-1]
  433d08:	ldr	x0, [x23]
  433d0c:	ldp	x20, x19, [sp, #48]
  433d10:	ldp	x22, x21, [sp, #32]
  433d14:	ldr	x23, [sp, #16]
  433d18:	ldp	x29, x30, [sp], #64
  433d1c:	ret
  433d20:	stp	x29, x30, [sp, #-64]!
  433d24:	stp	x24, x23, [sp, #16]
  433d28:	stp	x22, x21, [sp, #32]
  433d2c:	stp	x20, x19, [sp, #48]
  433d30:	ldr	x8, [x0, #1328]
  433d34:	ldr	x9, [x0, #1312]
  433d38:	ldrh	w10, [x1, #16]
  433d3c:	mov	x19, x1
  433d40:	mov	x21, x0
  433d44:	sub	x20, x8, x9
  433d48:	mov	x29, sp
  433d4c:	cbz	w10, 433de0 <feof@plt+0x31410>
  433d50:	mov	x23, x21
  433d54:	ldr	w8, [x19, #12]
  433d58:	ldr	x9, [x23, #56]!
  433d5c:	add	x11, x20, #0xd
  433d60:	and	x24, x11, #0xfffffffffffffff8
  433d64:	mov	w22, w2
  433d68:	ldp	x9, x10, [x9, #16]
  433d6c:	add	x2, x24, x8
  433d70:	sub	x10, x10, x9
  433d74:	cmp	x2, x10
  433d78:	b.ls	433d94 <feof@plt+0x313c4>  // b.plast
  433d7c:	mov	x0, x21
  433d80:	mov	x1, x23
  433d84:	bl	42951c <feof@plt+0x26b4c>
  433d88:	ldr	x8, [x21, #56]
  433d8c:	ldr	x9, [x8, #16]
  433d90:	ldr	w8, [x19, #12]
  433d94:	add	x8, x9, x8
  433d98:	str	x9, [x19, #24]
  433d9c:	str	w20, [x8]
  433da0:	strh	w22, [x8, #4]
  433da4:	ldr	x1, [x21, #1312]
  433da8:	add	x0, x8, #0x6
  433dac:	mov	x2, x20
  433db0:	bl	402390 <memcpy@plt>
  433db4:	ldr	x8, [x21, #1312]
  433db8:	str	x8, [x21, #1328]
  433dbc:	ldr	w8, [x19, #12]
  433dc0:	add	w8, w8, w24
  433dc4:	str	w8, [x19, #12]
  433dc8:	cbnz	w22, 433e0c <feof@plt+0x3143c>
  433dcc:	ldr	x9, [x23]
  433dd0:	ldr	x10, [x9, #16]
  433dd4:	add	x8, x10, w8, uxtw
  433dd8:	str	x8, [x9, #16]
  433ddc:	b	433e0c <feof@plt+0x3143c>
  433de0:	add	x1, x20, #0x1
  433de4:	mov	x0, x21
  433de8:	bl	428b3c <feof@plt+0x2616c>
  433dec:	ldr	x1, [x21, #1312]
  433df0:	mov	x2, x20
  433df4:	mov	x21, x0
  433df8:	bl	402390 <memcpy@plt>
  433dfc:	mov	w8, #0xa                   	// #10
  433e00:	strb	w8, [x21, x20]
  433e04:	str	x21, [x19, #24]
  433e08:	str	w20, [x19, #12]
  433e0c:	ldp	x20, x19, [sp, #48]
  433e10:	ldp	x22, x21, [sp, #32]
  433e14:	ldp	x24, x23, [sp, #16]
  433e18:	ldp	x29, x30, [sp], #64
  433e1c:	ret
  433e20:	ldrb	w9, [x0, #19]
  433e24:	mov	x8, x0
  433e28:	tbz	w9, #2, 433e7c <feof@plt+0x314ac>
  433e2c:	ldrh	w9, [x8, #16]
  433e30:	cbz	w9, 433e7c <feof@plt+0x314ac>
  433e34:	ldr	x9, [x8, #24]
  433e38:	ldrh	w11, [x9, #4]
  433e3c:	ldr	w0, [x9]
  433e40:	cbz	w11, 433e78 <feof@plt+0x314a8>
  433e44:	ldr	x8, [x8]
  433e48:	mov	x10, x0
  433e4c:	add	x11, x8, w11, uxth #3
  433e50:	ldur	x11, [x11, #-8]
  433e54:	add	x10, x10, #0xd
  433e58:	and	x10, x10, #0x1fffffff8
  433e5c:	add	x9, x9, x10
  433e60:	ldr	w12, [x11, #8]
  433e64:	ldr	w10, [x9]
  433e68:	ldrh	w11, [x9, #4]
  433e6c:	add	x12, x0, x12
  433e70:	add	x0, x12, x10
  433e74:	cbnz	w11, 433e4c <feof@plt+0x3147c>
  433e78:	ret
  433e7c:	ldr	w0, [x8, #12]
  433e80:	ret
  433e84:	stp	x29, x30, [sp, #-48]!
  433e88:	stp	x22, x21, [sp, #16]
  433e8c:	stp	x20, x19, [sp, #32]
  433e90:	ldrb	w8, [x0, #19]
  433e94:	mov	x19, x0
  433e98:	mov	x20, x1
  433e9c:	mov	x29, sp
  433ea0:	tbz	w8, #2, 433f0c <feof@plt+0x3153c>
  433ea4:	ldrh	w8, [x19, #16]
  433ea8:	cbz	w8, 433f0c <feof@plt+0x3153c>
  433eac:	ldr	x21, [x19, #24]
  433eb0:	ldr	w2, [x21]
  433eb4:	add	x1, x21, #0x6
  433eb8:	mov	x0, x20
  433ebc:	bl	402390 <memcpy@plt>
  433ec0:	ldr	w9, [x21]
  433ec4:	ldrh	w8, [x21, #4]
  433ec8:	add	x20, x20, x9
  433ecc:	cbz	w8, 433f24 <feof@plt+0x31554>
  433ed0:	ldr	x9, [x19]
  433ed4:	mov	x0, x20
  433ed8:	add	x8, x9, w8, uxth #3
  433edc:	ldur	x22, [x8, #-8]
  433ee0:	ldr	x1, [x22]
  433ee4:	ldr	w2, [x22, #8]
  433ee8:	bl	402390 <memcpy@plt>
  433eec:	ldr	w8, [x21]
  433ef0:	ldr	w9, [x22, #8]
  433ef4:	add	x8, x8, #0xd
  433ef8:	and	x8, x8, #0x1fffffff8
  433efc:	add	x21, x21, x8
  433f00:	ldr	w2, [x21]
  433f04:	add	x20, x20, x9
  433f08:	b	433eb4 <feof@plt+0x314e4>
  433f0c:	ldr	x1, [x19, #24]
  433f10:	ldr	w2, [x19, #12]
  433f14:	mov	x0, x20
  433f18:	bl	402390 <memcpy@plt>
  433f1c:	ldr	w8, [x19, #12]
  433f20:	add	x20, x20, x8
  433f24:	mov	x0, x20
  433f28:	ldp	x20, x19, [sp, #32]
  433f2c:	ldp	x22, x21, [sp, #16]
  433f30:	ldp	x29, x30, [sp], #48
  433f34:	ret
  433f38:	stp	x29, x30, [sp, #-80]!
  433f3c:	stp	x24, x23, [sp, #32]
  433f40:	stp	x22, x21, [sp, #48]
  433f44:	stp	x20, x19, [sp, #64]
  433f48:	ldr	x8, [x0, #1312]
  433f4c:	ldr	x9, [x0]
  433f50:	ldr	x24, [x0, #136]
  433f54:	mov	x19, x0
  433f58:	str	x8, [x0, #1328]
  433f5c:	ldr	x9, [x9]
  433f60:	str	x25, [sp, #16]
  433f64:	mov	x29, sp
  433f68:	str	x9, [x24, #16]
  433f6c:	ldr	x8, [x0]
  433f70:	ldr	x10, [x8, #32]
  433f74:	str	x10, [x24, #24]
  433f78:	ldr	x11, [x0, #1320]
  433f7c:	ldr	x8, [x0, #1328]
  433f80:	sub	x10, x10, x9
  433f84:	add	x10, x10, #0x3
  433f88:	sub	x11, x11, x8
  433f8c:	cmp	x10, x11
  433f90:	b.ls	433fc8 <feof@plt+0x315f8>  // b.plast
  433f94:	ldr	x0, [x19, #1312]
  433f98:	sub	x21, x8, x0
  433f9c:	add	x8, x21, x10
  433fa0:	add	x8, x8, x8, lsl #1
  433fa4:	lsr	x20, x8, #1
  433fa8:	mov	x1, x20
  433fac:	bl	450728 <_obstack_memory_used@@Base+0x190>
  433fb0:	add	x9, x0, x20
  433fb4:	add	x8, x0, x21
  433fb8:	str	x0, [x19, #1312]
  433fbc:	str	x9, [x19, #1320]
  433fc0:	str	x8, [x19, #1328]
  433fc4:	ldr	x9, [x24, #16]
  433fc8:	ldrb	w9, [x9]
  433fcc:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  433fd0:	add	x23, x23, #0xa50
  433fd4:	mov	w20, wzr
  433fd8:	cmp	w9, #0x28
  433fdc:	b.ne	43411c <feof@plt+0x3174c>  // b.any
  433fe0:	ldr	x9, [x19, #136]
  433fe4:	mov	w21, #0x204                 	// #516
  433fe8:	ldr	x9, [x9, #16]
  433fec:	add	x1, x9, #0x1
  433ff0:	b	434008 <feof@plt+0x31638>
  433ff4:	sub	x8, x8, #0x1
  433ff8:	str	x8, [x19, #1328]
  433ffc:	ldurb	w9, [x1, #-1]
  434000:	cmp	w9, #0x2c
  434004:	b.ne	434128 <feof@plt+0x31758>  // b.any
  434008:	mov	x22, x1
  43400c:	ldrb	w10, [x1], #1
  434010:	mov	x9, x8
  434014:	ldrh	w11, [x23, x10, lsl #1]
  434018:	strb	w10, [x8], #1
  43401c:	tbnz	w11, #11, 434008 <feof@plt+0x31638>
  434020:	cmp	w10, #0x2f
  434024:	b.ne	434050 <feof@plt+0x31680>  // b.any
  434028:	ldrb	w10, [x1]
  43402c:	cmp	w10, #0x2a
  434030:	b.ne	434050 <feof@plt+0x31680>  // b.any
  434034:	mov	x0, x19
  434038:	mov	w2, wzr
  43403c:	str	x8, [x19, #1328]
  434040:	bl	433bb8 <feof@plt+0x311e8>
  434044:	ldr	x8, [x19, #1328]
  434048:	mov	x1, x0
  43404c:	b	434008 <feof@plt+0x31638>
  434050:	str	x9, [x19, #1328]
  434054:	ldrb	w8, [x22]
  434058:	ldrh	w10, [x23, x8, lsl #1]
  43405c:	tbnz	w10, #9, 434070 <feof@plt+0x316a0>
  434060:	cmp	w8, #0x24
  434064:	b.ne	434138 <feof@plt+0x31768>  // b.any
  434068:	ldrb	w10, [x19, #1146]
  43406c:	cbz	w10, 4341a8 <feof@plt+0x317d8>
  434070:	mov	x10, xzr
  434074:	add	x11, x22, x10
  434078:	strb	w8, [x9, x10]
  43407c:	ldrb	w8, [x11, #1]
  434080:	add	x10, x10, #0x1
  434084:	ldrh	w11, [x23, x8, lsl #1]
  434088:	tst	w11, w21
  43408c:	b.ne	434074 <feof@plt+0x316a4>  // b.any
  434090:	ldr	x8, [x19, #136]
  434094:	add	x11, x22, x10
  434098:	add	x25, x9, x10
  43409c:	mov	w3, #0x1                   	// #1
  4340a0:	str	x11, [x8, #16]
  4340a4:	ldr	x1, [x19, #1328]
  4340a8:	ldr	x0, [x19, #1088]
  4340ac:	sub	x2, x25, x1
  4340b0:	bl	43244c <feof@plt+0x2fa7c>
  4340b4:	mov	x2, x0
  4340b8:	mov	x0, x19
  4340bc:	mov	w1, w20
  4340c0:	mov	x3, x2
  4340c4:	str	x25, [x19, #1328]
  4340c8:	bl	42e3ec <feof@plt+0x2ba1c>
  4340cc:	tbz	w0, #0, 4341a8 <feof@plt+0x317d8>
  4340d0:	ldr	x8, [x19, #136]
  4340d4:	add	w20, w20, #0x1
  4340d8:	ldr	x1, [x8, #16]
  4340dc:	ldr	x8, [x19, #1328]
  4340e0:	ldrb	w9, [x1], #1
  4340e4:	ldrh	w10, [x23, x9, lsl #1]
  4340e8:	strb	w9, [x8], #1
  4340ec:	tbnz	w10, #11, 4340e0 <feof@plt+0x31710>
  4340f0:	cmp	w9, #0x2f
  4340f4:	b.ne	433ff4 <feof@plt+0x31624>  // b.any
  4340f8:	ldrb	w9, [x1]
  4340fc:	cmp	w9, #0x2a
  434100:	b.ne	433ff4 <feof@plt+0x31624>  // b.any
  434104:	mov	x0, x19
  434108:	mov	w2, wzr
  43410c:	str	x8, [x19, #1328]
  434110:	bl	433bb8 <feof@plt+0x311e8>
  434114:	mov	x1, x0
  434118:	b	4340dc <feof@plt+0x3170c>
  43411c:	mov	w25, wzr
  434120:	mov	x22, xzr
  434124:	b	43416c <feof@plt+0x3179c>
  434128:	sub	x22, x1, #0x1
  43412c:	cmp	w9, #0x29
  434130:	b.eq	434148 <feof@plt+0x31778>  // b.none
  434134:	b	4341a8 <feof@plt+0x317d8>
  434138:	cbnz	w20, 4341a8 <feof@plt+0x317d8>
  43413c:	cmp	w8, #0x29
  434140:	b.ne	4341a8 <feof@plt+0x317d8>  // b.any
  434144:	mov	w20, wzr
  434148:	ldr	x8, [x19, #136]
  43414c:	mov	w10, w20
  434150:	add	x9, x22, #0x1
  434154:	lsl	x1, x10, #3
  434158:	mov	x0, x19
  43415c:	str	x9, [x8, #16]
  434160:	bl	429710 <feof@plt+0x26d40>
  434164:	mov	x22, x0
  434168:	mov	w25, #0x4                   	// #4
  43416c:	mov	w1, #0x30                  	// #48
  434170:	mov	x0, x19
  434174:	bl	429628 <feof@plt+0x26c58>
  434178:	mov	x2, x0
  43417c:	mov	w1, #0x2                   	// #2
  434180:	mov	x0, x19
  434184:	bl	42e540 <feof@plt+0x2bb70>
  434188:	ldrb	w8, [x0, #19]
  43418c:	mov	x21, x0
  434190:	str	x22, [x0]
  434194:	strh	w20, [x0, #16]
  434198:	and	w8, w8, #0xfffffffb
  43419c:	orr	w8, w8, w25
  4341a0:	strb	w8, [x0, #19]
  4341a4:	b	4341d8 <feof@plt+0x31808>
  4341a8:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  4341ac:	add	x2, x2, #0x881
  4341b0:	mov	w1, #0x3                   	// #3
  4341b4:	mov	x0, x19
  4341b8:	bl	41de04 <feof@plt+0x1b434>
  4341bc:	mov	x8, x22
  4341c0:	ldrb	w9, [x8], #1
  4341c4:	ldr	x10, [x19, #136]
  4341c8:	mov	x21, xzr
  4341cc:	cmp	w9, #0x29
  4341d0:	csel	x8, x22, x8, ne  // ne = any
  4341d4:	str	x8, [x10, #16]
  4341d8:	ldr	x1, [x24, #16]
  4341dc:	ldrb	w22, [x19, #1124]
  4341e0:	ldr	x8, [x19, #1328]
  4341e4:	mov	x9, x1
  4341e8:	ldrb	w11, [x1], #1
  4341ec:	mov	x10, x8
  4341f0:	ldrh	w12, [x23, x11, lsl #1]
  4341f4:	strb	w11, [x8], #1
  4341f8:	tbnz	w12, #11, 4341e4 <feof@plt+0x31814>
  4341fc:	cmp	w11, #0x2f
  434200:	b.ne	434230 <feof@plt+0x31860>  // b.any
  434204:	cbz	w22, 434230 <feof@plt+0x31860>
  434208:	ldrb	w11, [x1]
  43420c:	cmp	w11, #0x2a
  434210:	b.ne	434230 <feof@plt+0x31860>  // b.any
  434214:	mov	x0, x19
  434218:	mov	w2, wzr
  43421c:	str	x8, [x19, #1328]
  434220:	bl	433bb8 <feof@plt+0x311e8>
  434224:	ldr	x8, [x19, #1328]
  434228:	mov	x1, x0
  43422c:	b	4341e4 <feof@plt+0x31814>
  434230:	ldr	x8, [x19]
  434234:	str	x10, [x19, #1328]
  434238:	mov	x0, x19
  43423c:	mov	x1, x21
  434240:	str	x9, [x8]
  434244:	ldrb	w8, [x19, #24]
  434248:	mov	w2, wzr
  43424c:	add	w8, w8, #0x1
  434250:	strb	w8, [x19, #24]
  434254:	bl	432d04 <feof@plt+0x30334>
  434258:	ldrb	w8, [x19, #24]
  43425c:	mov	x0, x19
  434260:	mov	w1, w20
  434264:	sub	w8, w8, #0x1
  434268:	strb	w8, [x19, #24]
  43426c:	bl	42e4fc <feof@plt+0x2bb2c>
  434270:	cbz	x21, 4342b0 <feof@plt+0x318e0>
  434274:	ldr	x8, [x19, #1312]
  434278:	ldr	x10, [x19, #1328]
  43427c:	mov	x9, x10
  434280:	cmp	x10, x8
  434284:	b.ls	43429c <feof@plt+0x318cc>  // b.plast
  434288:	mov	x10, x9
  43428c:	ldrb	w11, [x10, #-1]!
  434290:	ldrh	w11, [x23, x11, lsl #1]
  434294:	tst	w11, #0xc00
  434298:	b.ne	43427c <feof@plt+0x318ac>  // b.any
  43429c:	mov	x0, x19
  4342a0:	mov	x1, x21
  4342a4:	mov	w2, wzr
  4342a8:	str	x9, [x19, #1328]
  4342ac:	bl	433d20 <feof@plt+0x31350>
  4342b0:	mov	x0, x21
  4342b4:	ldp	x20, x19, [sp, #64]
  4342b8:	ldp	x22, x21, [sp, #48]
  4342bc:	ldp	x24, x23, [sp, #32]
  4342c0:	ldr	x25, [sp, #16]
  4342c4:	ldp	x29, x30, [sp], #80
  4342c8:	ret
  4342cc:	stp	x29, x30, [sp, #-96]!
  4342d0:	stp	x26, x25, [sp, #32]
  4342d4:	stp	x24, x23, [sp, #48]
  4342d8:	stp	x22, x21, [sp, #64]
  4342dc:	stp	x20, x19, [sp, #80]
  4342e0:	ldr	w8, [x0, #12]
  4342e4:	ldr	w9, [x1, #12]
  4342e8:	mov	x19, x0
  4342ec:	str	x27, [sp, #16]
  4342f0:	mov	x29, sp
  4342f4:	add	w0, w9, w8
  4342f8:	mov	x21, x1
  4342fc:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  434300:	ldr	w8, [x19, #12]
  434304:	ldrh	w9, [x19, #16]
  434308:	ldr	x22, [x19, #24]
  43430c:	mov	x19, x0
  434310:	add	x20, x0, x8
  434314:	cbz	w9, 434524 <feof@plt+0x31b54>
  434318:	ldr	x21, [x21, #24]
  43431c:	mov	x25, x22
  434320:	ldrh	w8, [x25, #4]!
  434324:	ldrh	w9, [x21, #4]
  434328:	cmp	w8, w9
  43432c:	b.ne	4346d4 <feof@plt+0x31d04>  // b.any
  434330:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  434334:	mov	w26, wzr
  434338:	mov	w27, wzr
  43433c:	add	x23, x23, #0xa50
  434340:	mov	w24, #0x20                  	// #32
  434344:	ldr	w9, [x22]
  434348:	cbz	w9, 434400 <feof@plt+0x31a30>
  43434c:	add	x10, x22, #0x6
  434350:	mov	x8, x19
  434354:	b	434374 <feof@plt+0x319a4>
  434358:	mov	w12, w27
  43435c:	add	x10, x10, #0x1
  434360:	sub	x9, x9, #0x1
  434364:	mov	w27, w12
  434368:	strb	w11, [x8]
  43436c:	add	x8, x8, #0x1
  434370:	cbz	x9, 434404 <feof@plt+0x31a34>
  434374:	ldrb	w11, [x10]
  434378:	tst	w27, #0xff
  43437c:	b.ne	4343bc <feof@plt+0x319ec>  // b.any
  434380:	ldrh	w12, [x23, x11, lsl #1]
  434384:	and	w12, w12, #0xc00
  434388:	cbz	w12, 4343bc <feof@plt+0x319ec>
  43438c:	add	x11, x10, x9
  434390:	sub	x13, x9, #0x1
  434394:	mov	x9, x13
  434398:	cbz	x13, 4343e4 <feof@plt+0x31a14>
  43439c:	ldrb	w12, [x10, #1]
  4343a0:	ldrh	w13, [x23, x12, lsl #1]
  4343a4:	add	x12, x10, #0x1
  4343a8:	mov	x10, x12
  4343ac:	and	w14, w13, #0xc00
  4343b0:	sub	x13, x9, #0x1
  4343b4:	cbnz	w14, 434394 <feof@plt+0x319c4>
  4343b8:	b	4343e8 <feof@plt+0x31a18>
  4343bc:	cmp	w11, #0x27
  4343c0:	b.eq	4343cc <feof@plt+0x319fc>  // b.none
  4343c4:	cmp	w11, #0x22
  4343c8:	b.ne	434358 <feof@plt+0x31988>  // b.any
  4343cc:	tst	w27, #0xff
  4343d0:	mov	w12, w11
  4343d4:	b.eq	43435c <feof@plt+0x3198c>  // b.none
  4343d8:	cmp	w11, w27, uxtb
  4343dc:	csel	w12, wzr, w27, eq  // eq = none
  4343e0:	b	43435c <feof@plt+0x3198c>
  4343e4:	mov	x12, x11
  4343e8:	mov	w27, wzr
  4343ec:	strb	w24, [x8]
  4343f0:	mov	x10, x12
  4343f4:	add	x8, x8, #0x1
  4343f8:	cbnz	x9, 434374 <feof@plt+0x319a4>
  4343fc:	b	434404 <feof@plt+0x31a34>
  434400:	mov	x8, x19
  434404:	ldr	w9, [x21]
  434408:	sub	x2, x8, x19
  43440c:	cbz	w9, 4344c4 <feof@plt+0x31af4>
  434410:	add	x10, x21, #0x6
  434414:	mov	x8, x20
  434418:	b	434438 <feof@plt+0x31a68>
  43441c:	mov	w12, w26
  434420:	add	x10, x10, #0x1
  434424:	sub	x9, x9, #0x1
  434428:	mov	w26, w12
  43442c:	strb	w11, [x8]
  434430:	add	x8, x8, #0x1
  434434:	cbz	x9, 4344c8 <feof@plt+0x31af8>
  434438:	ldrb	w11, [x10]
  43443c:	tst	w26, #0xff
  434440:	b.ne	434480 <feof@plt+0x31ab0>  // b.any
  434444:	ldrh	w12, [x23, x11, lsl #1]
  434448:	and	w12, w12, #0xc00
  43444c:	cbz	w12, 434480 <feof@plt+0x31ab0>
  434450:	add	x11, x10, x9
  434454:	sub	x13, x9, #0x1
  434458:	mov	x9, x13
  43445c:	cbz	x13, 4344a8 <feof@plt+0x31ad8>
  434460:	ldrb	w12, [x10, #1]
  434464:	ldrh	w13, [x23, x12, lsl #1]
  434468:	add	x12, x10, #0x1
  43446c:	mov	x10, x12
  434470:	and	w14, w13, #0xc00
  434474:	sub	x13, x9, #0x1
  434478:	cbnz	w14, 434458 <feof@plt+0x31a88>
  43447c:	b	4344ac <feof@plt+0x31adc>
  434480:	cmp	w11, #0x27
  434484:	b.eq	434490 <feof@plt+0x31ac0>  // b.none
  434488:	cmp	w11, #0x22
  43448c:	b.ne	43441c <feof@plt+0x31a4c>  // b.any
  434490:	tst	w26, #0xff
  434494:	mov	w12, w11
  434498:	b.eq	434420 <feof@plt+0x31a50>  // b.none
  43449c:	cmp	w11, w26, uxtb
  4344a0:	csel	w12, wzr, w26, eq  // eq = none
  4344a4:	b	434420 <feof@plt+0x31a50>
  4344a8:	mov	x12, x11
  4344ac:	mov	w26, wzr
  4344b0:	strb	w24, [x8]
  4344b4:	mov	x10, x12
  4344b8:	add	x8, x8, #0x1
  4344bc:	cbnz	x9, 434438 <feof@plt+0x31a68>
  4344c0:	b	4344c8 <feof@plt+0x31af8>
  4344c4:	mov	x8, x20
  4344c8:	sub	x8, x8, x20
  4344cc:	cmp	x2, x8
  4344d0:	b.ne	4346d4 <feof@plt+0x31d04>  // b.any
  4344d4:	mov	x0, x19
  4344d8:	mov	x1, x20
  4344dc:	bl	402980 <bcmp@plt>
  4344e0:	cbnz	w0, 4346d4 <feof@plt+0x31d04>
  4344e4:	ldrh	w8, [x25]
  4344e8:	cbz	w8, 434700 <feof@plt+0x31d30>
  4344ec:	ldr	w8, [x22]
  4344f0:	ldr	w9, [x21]
  4344f4:	add	x8, x8, #0xd
  4344f8:	add	x9, x9, #0xd
  4344fc:	and	x8, x8, #0x1fffffff8
  434500:	and	x9, x9, #0x1fffffff8
  434504:	add	x22, x22, x8
  434508:	add	x21, x21, x9
  43450c:	mov	x25, x22
  434510:	ldrh	w8, [x25, #4]!
  434514:	ldrh	w9, [x21, #4]
  434518:	cmp	w8, w9
  43451c:	b.eq	434344 <feof@plt+0x31974>  // b.none
  434520:	b	4346d4 <feof@plt+0x31d04>
  434524:	mov	x9, x19
  434528:	cbz	w8, 4345e4 <feof@plt+0x31c14>
  43452c:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  434530:	mov	w12, wzr
  434534:	add	x10, x10, #0xa50
  434538:	mov	w11, #0x20                  	// #32
  43453c:	mov	x9, x19
  434540:	b	434560 <feof@plt+0x31b90>
  434544:	mov	w14, w12
  434548:	add	x22, x22, #0x1
  43454c:	sub	x8, x8, #0x1
  434550:	strb	w13, [x9]
  434554:	add	x9, x9, #0x1
  434558:	mov	w12, w14
  43455c:	cbz	x8, 4345e4 <feof@plt+0x31c14>
  434560:	ldrb	w13, [x22]
  434564:	tst	w12, #0xff
  434568:	b.ne	4345a8 <feof@plt+0x31bd8>  // b.any
  43456c:	ldrh	w14, [x10, x13, lsl #1]
  434570:	and	w14, w14, #0xc00
  434574:	cbz	w14, 4345a8 <feof@plt+0x31bd8>
  434578:	add	x12, x22, x8
  43457c:	sub	x14, x8, #0x1
  434580:	mov	x8, x14
  434584:	cbz	x14, 4345d0 <feof@plt+0x31c00>
  434588:	ldrb	w13, [x22, #1]
  43458c:	ldrh	w14, [x10, x13, lsl #1]
  434590:	add	x13, x22, #0x1
  434594:	mov	x22, x13
  434598:	and	w15, w14, #0xc00
  43459c:	sub	x14, x8, #0x1
  4345a0:	cbnz	w15, 434580 <feof@plt+0x31bb0>
  4345a4:	b	4345d4 <feof@plt+0x31c04>
  4345a8:	cmp	w13, #0x27
  4345ac:	b.eq	4345b8 <feof@plt+0x31be8>  // b.none
  4345b0:	cmp	w13, #0x22
  4345b4:	b.ne	434544 <feof@plt+0x31b74>  // b.any
  4345b8:	tst	w12, #0xff
  4345bc:	mov	w14, w13
  4345c0:	b.eq	434548 <feof@plt+0x31b78>  // b.none
  4345c4:	cmp	w13, w12, uxtb
  4345c8:	csel	w14, wzr, w12, eq  // eq = none
  4345cc:	b	434548 <feof@plt+0x31b78>
  4345d0:	mov	x13, x12
  4345d4:	mov	w14, wzr
  4345d8:	strb	w11, [x9]
  4345dc:	mov	x22, x13
  4345e0:	b	434554 <feof@plt+0x31b84>
  4345e4:	ldr	w8, [x21, #12]
  4345e8:	sub	x2, x9, x19
  4345ec:	mov	x9, x20
  4345f0:	cbz	w8, 4346b0 <feof@plt+0x31ce0>
  4345f4:	ldr	x12, [x21, #24]
  4345f8:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  4345fc:	mov	w13, wzr
  434600:	add	x10, x10, #0xa50
  434604:	mov	w11, #0x20                  	// #32
  434608:	mov	x9, x20
  43460c:	b	43462c <feof@plt+0x31c5c>
  434610:	mov	w15, w13
  434614:	add	x12, x12, #0x1
  434618:	sub	x8, x8, #0x1
  43461c:	strb	w14, [x9]
  434620:	add	x9, x9, #0x1
  434624:	mov	w13, w15
  434628:	cbz	x8, 4346b0 <feof@plt+0x31ce0>
  43462c:	ldrb	w14, [x12]
  434630:	tst	w13, #0xff
  434634:	b.ne	434674 <feof@plt+0x31ca4>  // b.any
  434638:	ldrh	w15, [x10, x14, lsl #1]
  43463c:	and	w15, w15, #0xc00
  434640:	cbz	w15, 434674 <feof@plt+0x31ca4>
  434644:	add	x13, x12, x8
  434648:	sub	x15, x8, #0x1
  43464c:	mov	x8, x15
  434650:	cbz	x15, 43469c <feof@plt+0x31ccc>
  434654:	ldrb	w14, [x12, #1]
  434658:	ldrh	w15, [x10, x14, lsl #1]
  43465c:	add	x14, x12, #0x1
  434660:	mov	x12, x14
  434664:	and	w16, w15, #0xc00
  434668:	sub	x15, x8, #0x1
  43466c:	cbnz	w16, 43464c <feof@plt+0x31c7c>
  434670:	b	4346a0 <feof@plt+0x31cd0>
  434674:	cmp	w14, #0x27
  434678:	b.eq	434684 <feof@plt+0x31cb4>  // b.none
  43467c:	cmp	w14, #0x22
  434680:	b.ne	434610 <feof@plt+0x31c40>  // b.any
  434684:	tst	w13, #0xff
  434688:	mov	w15, w14
  43468c:	b.eq	434614 <feof@plt+0x31c44>  // b.none
  434690:	cmp	w14, w13, uxtb
  434694:	csel	w15, wzr, w13, eq  // eq = none
  434698:	b	434614 <feof@plt+0x31c44>
  43469c:	mov	x14, x13
  4346a0:	mov	w15, wzr
  4346a4:	strb	w11, [x9]
  4346a8:	mov	x12, x14
  4346ac:	b	434620 <feof@plt+0x31c50>
  4346b0:	sub	x8, x9, x20
  4346b4:	cmp	x2, x8
  4346b8:	b.ne	4346d4 <feof@plt+0x31d04>  // b.any
  4346bc:	mov	x0, x19
  4346c0:	mov	x1, x20
  4346c4:	bl	402980 <bcmp@plt>
  4346c8:	cmp	w0, #0x0
  4346cc:	cset	w20, ne  // ne = any
  4346d0:	b	4346d8 <feof@plt+0x31d08>
  4346d4:	mov	w20, #0x1                   	// #1
  4346d8:	mov	x0, x19
  4346dc:	bl	4024c0 <free@plt>
  4346e0:	mov	w0, w20
  4346e4:	ldp	x20, x19, [sp, #80]
  4346e8:	ldp	x22, x21, [sp, #64]
  4346ec:	ldp	x24, x23, [sp, #48]
  4346f0:	ldp	x26, x25, [sp, #32]
  4346f4:	ldr	x27, [sp, #16]
  4346f8:	ldp	x29, x30, [sp], #96
  4346fc:	ret
  434700:	mov	w20, wzr
  434704:	b	4346d8 <feof@plt+0x31d08>
  434708:	sxtw	x8, w1
  43470c:	sbfiz	x9, x1, #4, #32
  434710:	adrp	x10, 45e000 <_obstack_memory_used@@Base+0xda68>
  434714:	add	x10, x10, #0x8e2
  434718:	sub	x8, x9, x8
  43471c:	add	x8, x10, x8
  434720:	ldrb	w9, [x8]
  434724:	ldrb	w11, [x8, #1]
  434728:	ldrb	w12, [x8, #2]
  43472c:	add	x10, x0, #0x48d
  434730:	strb	w9, [x0, #1152]
  434734:	ldrb	w9, [x8, #3]
  434738:	strb	w11, [x0, #1120]
  43473c:	ldrb	w11, [x8, #4]
  434740:	strb	w12, [x0, #1127]
  434744:	ldrb	w12, [x8, #5]
  434748:	strb	w9, [x0, #1147]
  43474c:	ldrb	w9, [x8, #6]
  434750:	strb	w11, [x0, #1164]
  434754:	ldrb	w11, [x8, #7]
  434758:	strb	w12, [x0, #1153]
  43475c:	ldrb	w12, [x8, #8]
  434760:	strb	w9, [x0, #1126]
  434764:	ldrb	w9, [x8, #9]
  434768:	strb	w11, [x0, #1128]
  43476c:	ldrh	w11, [x8, #10]
  434770:	strb	w12, [x0, #1130]
  434774:	ldrb	w12, [x8, #12]
  434778:	strb	w9, [x0, #1161]
  43477c:	ldrb	w9, [x8, #13]
  434780:	ldrb	w8, [x8, #14]
  434784:	str	w1, [x0, #1116]
  434788:	strh	w11, [x10]
  43478c:	strb	w12, [x0, #1125]
  434790:	strb	w9, [x0, #1129]
  434794:	strb	w8, [x0, #1167]
  434798:	ret
  43479c:	stp	x29, x30, [sp, #-64]!
  4347a0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4347a4:	ldrb	w9, [x8, #2184]
  4347a8:	stp	x22, x21, [sp, #32]
  4347ac:	stp	x20, x19, [sp, #48]
  4347b0:	mov	x21, x2
  4347b4:	mov	x19, x1
  4347b8:	mov	w22, w0
  4347bc:	stp	x24, x23, [sp, #16]
  4347c0:	mov	x29, sp
  4347c4:	tbnz	w9, #0, 434828 <feof@plt+0x31e58>
  4347c8:	mov	w9, #0x1                   	// #1
  4347cc:	strb	w9, [x8, #2184]
  4347d0:	bl	4246a4 <feof@plt+0x21cd4>
  4347d4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4347d8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0xaa68>
  4347dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4347e0:	add	x8, x8, #0x7a9
  4347e4:	mov	w9, #0x5d                  	// #93
  4347e8:	mov	w10, #0x7c                  	// #124
  4347ec:	mov	w11, #0x5b5e                	// #23390
  4347f0:	mov	w12, #0x7d                  	// #125
  4347f4:	mov	w13, #0x5c                  	// #92
  4347f8:	mov	w14, #0x237b                	// #9083
  4347fc:	mov	w15, #0x7e                  	// #126
  434800:	add	x0, x0, #0xf6f
  434804:	add	x1, x1, #0xad
  434808:	strb	w9, [x8, #8]
  43480c:	strb	w10, [x8]
  434810:	strh	w11, [x8, #6]
  434814:	strb	w12, [x8, #29]
  434818:	strb	w13, [x8, #14]
  43481c:	sturh	w14, [x8, #27]
  434820:	strb	w15, [x8, #12]
  434824:	bl	4023f0 <bindtextdomain@plt>
  434828:	mov	w0, #0x1                   	// #1
  43482c:	mov	w1, #0x588                 	// #1416
  434830:	mov	w24, #0x1                   	// #1
  434834:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  434838:	sxtw	x8, w22
  43483c:	sbfiz	x9, x22, #4, #32
  434840:	adrp	x10, 45e000 <_obstack_memory_used@@Base+0xda68>
  434844:	add	x10, x10, #0x8e2
  434848:	sub	x8, x9, x8
  43484c:	add	x8, x10, x8
  434850:	ldrb	w10, [x8, #1]
  434854:	ldrb	w11, [x8, #2]
  434858:	movi	v0.2d, #0x0
  43485c:	mov	x23, x0
  434860:	str	q0, [x23, #80]!
  434864:	ldrb	w9, [x8]
  434868:	strb	w10, [x0, #1120]
  43486c:	ldrb	w10, [x8, #4]
  434870:	strb	w11, [x0, #1127]
  434874:	ldrb	w11, [x8, #5]
  434878:	strb	w9, [x0, #1152]
  43487c:	ldrb	w9, [x8, #3]
  434880:	strb	w10, [x0, #1164]
  434884:	ldrb	w10, [x8, #7]
  434888:	strb	w11, [x0, #1153]
  43488c:	ldrb	w11, [x8, #8]
  434890:	strb	w9, [x0, #1147]
  434894:	ldrb	w9, [x8, #6]
  434898:	strb	w10, [x0, #1128]
  43489c:	ldrb	w10, [x8, #9]
  4348a0:	strb	w11, [x0, #1130]
  4348a4:	ldrh	w11, [x8, #10]
  4348a8:	strb	w9, [x0, #1126]
  4348ac:	add	x9, x0, #0x48d
  4348b0:	strb	w10, [x0, #1161]
  4348b4:	ldrb	w10, [x8, #12]
  4348b8:	str	xzr, [x0, #128]
  4348bc:	str	w22, [x0, #1116]
  4348c0:	stp	q0, q0, [x0, #96]
  4348c4:	strh	w11, [x9]
  4348c8:	ldrb	w11, [x8, #13]
  4348cc:	ldrb	w8, [x8, #14]
  4348d0:	add	x9, x0, #0x463
  4348d4:	strb	w10, [x0, #1125]
  4348d8:	mov	w10, #0x101                 	// #257
  4348dc:	strb	w11, [x0, #1129]
  4348e0:	mov	w11, #0x8                   	// #8
  4348e4:	strb	w8, [x0, #1167]
  4348e8:	strh	w10, [x9]
  4348ec:	mov	w9, #0xff                  	// #255
  4348f0:	mov	w8, #0x102                 	// #258
  4348f4:	str	w11, [x0, #1112]
  4348f8:	add	x11, x0, #0x473
  4348fc:	strh	w9, [x0, #1198]
  434900:	mov	w9, #0x100                 	// #256
  434904:	strh	w8, [x0, #1136]
  434908:	strb	w24, [x0, #1132]
  43490c:	strh	w9, [x11]
  434910:	add	x11, x0, #0x485
  434914:	strb	w24, [x0, #1146]
  434918:	strb	w24, [x0, #1148]
  43491c:	strh	w10, [x0, #1142]
  434920:	strb	wzr, [x0, #1144]
  434924:	strh	w8, [x11]
  434928:	mov	w11, #0x20                  	// #32
  43492c:	dup	v0.2d, x11
  434930:	adrp	x11, 45e000 <_obstack_memory_used@@Base+0xda68>
  434934:	ldr	q1, [x11, #2224]
  434938:	add	x8, x0, #0x4b8
  43493c:	mov	x20, x0
  434940:	str	w24, [x0, #1192]
  434944:	strh	w10, [x0, #1162]
  434948:	strb	w24, [x0, #1245]
  43494c:	strb	wzr, [x0, #1134]
  434950:	stp	q1, q0, [x8]
  434954:	strh	w9, [x0, #1240]
  434958:	strb	w24, [x0, #1242]
  43495c:	bl	4182f0 <feof@plt+0x15920>
  434960:	str	x0, [x20, #1168]
  434964:	str	xzr, [x20, #1176]
  434968:	bl	4182f0 <feof@plt+0x15920>
  43496c:	ldrb	w9, [x20, #1123]
  434970:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  434974:	add	x8, x8, #0xb34
  434978:	str	x8, [x20, #224]
  43497c:	mov	w8, #0x53                  	// #83
  434980:	str	x21, [x20, #40]
  434984:	strb	w8, [x20, #668]
  434988:	mov	w8, #0x16                  	// #22
  43498c:	cmp	w9, #0x0
  434990:	add	x21, x20, #0x1c8
  434994:	str	x0, [x20, #1184]
  434998:	strb	w8, [x20, #692]
  43499c:	cset	w8, eq  // eq = none
  4349a0:	mov	w1, #0xfa                  	// #250
  4349a4:	mov	x0, x21
  4349a8:	str	xzr, [x20, #672]
  4349ac:	strh	wzr, [x20, #694]
  4349b0:	strb	w8, [x20, #21]
  4349b4:	bl	425104 <feof@plt+0x22734>
  4349b8:	ldr	x8, [x20, #472]
  4349bc:	mov	x0, x20
  4349c0:	mov	x1, xzr
  4349c4:	str	x21, [x20, #488]
  4349c8:	str	x23, [x20, #136]
  4349cc:	str	xzr, [x20, #120]
  4349d0:	str	xzr, [x20, #88]
  4349d4:	str	x8, [x20, #448]
  4349d8:	str	xzr, [x23]
  4349dc:	bl	42939c <feof@plt+0x269cc>
  4349e0:	str	x0, [x20, #56]
  4349e4:	mov	x0, x20
  4349e8:	mov	x1, xzr
  4349ec:	bl	42939c <feof@plt+0x269cc>
  4349f0:	str	x0, [x20, #64]
  4349f4:	mov	x8, #0xfffffffffffffffe    	// #-2
  4349f8:	mov	x0, x20
  4349fc:	str	xzr, [x20, #1400]
  434a00:	str	wzr, [x20, #1408]
  434a04:	str	x8, [x20, #656]
  434a08:	bl	421568 <feof@plt+0x1eb98>
  434a0c:	adrp	x3, 450000 <feof@plt+0x4d630>
  434a10:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x330>
  434a14:	add	x0, x20, #0x328
  434a18:	add	x3, x3, #0x6a4
  434a1c:	add	x4, x4, #0x4c0
  434a20:	mov	x1, xzr
  434a24:	mov	x2, xzr
  434a28:	bl	450220 <_obstack_begin@@Base>
  434a2c:	mov	x0, x20
  434a30:	bl	4230a0 <feof@plt+0x206d0>
  434a34:	mov	x0, x20
  434a38:	mov	x1, x19
  434a3c:	bl	4243e0 <feof@plt+0x21a10>
  434a40:	mov	x0, x20
  434a44:	ldp	x20, x19, [sp, #48]
  434a48:	ldp	x22, x21, [sp, #32]
  434a4c:	ldp	x24, x23, [sp, #16]
  434a50:	ldp	x29, x30, [sp], #64
  434a54:	ret
  434a58:	str	x1, [x0, #40]
  434a5c:	ret
  434a60:	stp	x29, x30, [sp, #-48]!
  434a64:	stp	x22, x21, [sp, #16]
  434a68:	stp	x20, x19, [sp, #32]
  434a6c:	mov	x19, x0
  434a70:	ldr	x0, [x0, #1096]
  434a74:	mov	x29, sp
  434a78:	bl	4024c0 <free@plt>
  434a7c:	ldr	x8, [x19]
  434a80:	cbz	x8, 434a94 <feof@plt+0x320c4>
  434a84:	mov	x0, x19
  434a88:	bl	41c0c4 <feof@plt+0x196f4>
  434a8c:	ldr	x8, [x19]
  434a90:	cbnz	x8, 434a84 <feof@plt+0x320b4>
  434a94:	ldr	x0, [x19, #1312]
  434a98:	bl	4024c0 <free@plt>
  434a9c:	ldr	x0, [x19, #504]
  434aa0:	cbz	x0, 434ab0 <feof@plt+0x320e0>
  434aa4:	bl	4024c0 <free@plt>
  434aa8:	str	xzr, [x19, #504]
  434aac:	str	wzr, [x19, #512]
  434ab0:	ldr	x0, [x19, #712]
  434ab4:	cbz	x0, 434abc <feof@plt+0x320ec>
  434ab8:	bl	4318b4 <feof@plt+0x2eee4>
  434abc:	add	x0, x19, #0x328
  434ac0:	mov	x1, xzr
  434ac4:	bl	450504 <_obstack_free@@Base>
  434ac8:	mov	x0, x19
  434acc:	bl	4245f4 <feof@plt+0x21c24>
  434ad0:	mov	x0, x19
  434ad4:	bl	423200 <feof@plt+0x20830>
  434ad8:	mov	x0, x19
  434adc:	bl	416364 <feof@plt+0x13994>
  434ae0:	ldr	x0, [x19, #56]
  434ae4:	bl	4295fc <feof@plt+0x26c2c>
  434ae8:	ldr	x0, [x19, #64]
  434aec:	bl	4295fc <feof@plt+0x26c2c>
  434af0:	ldr	x0, [x19, #72]
  434af4:	bl	4295fc <feof@plt+0x26c2c>
  434af8:	add	x21, x19, #0x1c8
  434afc:	mov	x20, x21
  434b00:	b	434b0c <feof@plt+0x3213c>
  434b04:	mov	x20, x22
  434b08:	cbz	x22, 434b2c <feof@plt+0x3215c>
  434b0c:	ldr	x0, [x20, #16]
  434b10:	ldr	x22, [x20]
  434b14:	bl	4024c0 <free@plt>
  434b18:	cmp	x20, x21
  434b1c:	b.eq	434b04 <feof@plt+0x32134>  // b.none
  434b20:	mov	x0, x20
  434b24:	bl	4024c0 <free@plt>
  434b28:	b	434b04 <feof@plt+0x32134>
  434b2c:	ldr	x0, [x19, #80]
  434b30:	cbz	x0, 434b44 <feof@plt+0x32174>
  434b34:	ldr	x20, [x0]
  434b38:	bl	4024c0 <free@plt>
  434b3c:	mov	x0, x20
  434b40:	cbnz	x20, 434b34 <feof@plt+0x32164>
  434b44:	ldr	x0, [x19, #1384]
  434b48:	cbz	x0, 434b9c <feof@plt+0x321cc>
  434b4c:	ldr	w8, [x19, #1392]
  434b50:	cmp	w8, #0x1
  434b54:	b.lt	434b98 <feof@plt+0x321c8>  // b.tstop
  434b58:	mov	x20, xzr
  434b5c:	mov	x21, xzr
  434b60:	ldr	x0, [x0, x20]
  434b64:	bl	4024c0 <free@plt>
  434b68:	ldrsw	x8, [x19, #1392]
  434b6c:	ldr	x0, [x19, #1384]
  434b70:	add	x21, x21, #0x1
  434b74:	add	x20, x20, #0x10
  434b78:	cmp	x21, x8
  434b7c:	b.lt	434b60 <feof@plt+0x32190>  // b.tstop
  434b80:	b	434b98 <feof@plt+0x321c8>
  434b84:	ldr	x8, [x20]
  434b88:	str	x8, [x19, #1400]
  434b8c:	ldr	x0, [x20, #8]
  434b90:	bl	4024c0 <free@plt>
  434b94:	mov	x0, x20
  434b98:	bl	4024c0 <free@plt>
  434b9c:	ldr	x20, [x19, #1400]
  434ba0:	cbnz	x20, 434b84 <feof@plt+0x321b4>
  434ba4:	mov	x0, x19
  434ba8:	ldp	x20, x19, [sp, #32]
  434bac:	ldp	x22, x21, [sp, #16]
  434bb0:	ldp	x29, x30, [sp], #48
  434bb4:	b	4024c0 <free@plt>
  434bb8:	sub	w8, w0, #0x1
  434bbc:	cmp	w8, #0x21
  434bc0:	mov	x0, xzr
  434bc4:	b.hi	434c60 <feof@plt+0x32290>  // b.pmore
  434bc8:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  434bcc:	add	x9, x9, #0x8c0
  434bd0:	adr	x10, 434be8 <feof@plt+0x32218>
  434bd4:	ldrb	w11, [x9, x8]
  434bd8:	add	x10, x10, x11, lsl #2
  434bdc:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434be0:	add	x8, x8, #0xa30
  434be4:	br	x10
  434be8:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434bec:	add	x8, x8, #0xa80
  434bf0:	b	434c5c <feof@plt+0x3228c>
  434bf4:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434bf8:	add	x8, x8, #0xa50
  434bfc:	b	434c5c <feof@plt+0x3228c>
  434c00:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c04:	add	x8, x8, #0xa60
  434c08:	b	434c5c <feof@plt+0x3228c>
  434c0c:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c10:	add	x8, x8, #0xac0
  434c14:	b	434c5c <feof@plt+0x3228c>
  434c18:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c1c:	add	x8, x8, #0xa70
  434c20:	b	434c5c <feof@plt+0x3228c>
  434c24:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c28:	add	x8, x8, #0xaa0
  434c2c:	b	434c5c <feof@plt+0x3228c>
  434c30:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c34:	add	x8, x8, #0xa90
  434c38:	b	434c5c <feof@plt+0x3228c>
  434c3c:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c40:	add	x8, x8, #0xa40
  434c44:	b	434c5c <feof@plt+0x3228c>
  434c48:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c4c:	add	x8, x8, #0xab0
  434c50:	b	434c5c <feof@plt+0x3228c>
  434c54:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434c58:	add	x8, x8, #0xad0
  434c5c:	ldr	x0, [x8]
  434c60:	ret
  434c64:	stp	x29, x30, [sp, #-48]!
  434c68:	stp	x22, x21, [sp, #16]
  434c6c:	stp	x20, x19, [sp, #32]
  434c70:	ldrb	w8, [x0, #1160]
  434c74:	mov	x19, x0
  434c78:	mov	x29, sp
  434c7c:	cbz	w8, 434c88 <feof@plt+0x322b8>
  434c80:	mov	w8, #0xa                   	// #10
  434c84:	b	434ca4 <feof@plt+0x322d4>
  434c88:	ldrb	w8, [x19, #1243]
  434c8c:	cbz	w8, 434c98 <feof@plt+0x322c8>
  434c90:	ldrb	w8, [x19, #1153]
  434c94:	cbz	w8, 434ca0 <feof@plt+0x322d0>
  434c98:	mov	w8, #0xb                   	// #11
  434c9c:	b	434ca4 <feof@plt+0x322d4>
  434ca0:	mov	w8, #0xc                   	// #12
  434ca4:	adrp	x20, 45e000 <_obstack_memory_used@@Base+0xda68>
  434ca8:	add	x20, x20, #0xae0
  434cac:	add	x21, x20, x8, lsl #4
  434cb0:	mov	w22, #0x23                  	// #35
  434cb4:	b	434ccc <feof@plt+0x322fc>
  434cb8:	ldrh	w8, [x20, #10]
  434cbc:	str	w8, [x0, #24]
  434cc0:	add	x20, x20, #0x10
  434cc4:	cmp	x20, x21
  434cc8:	b.cs	434d1c <feof@plt+0x3234c>  // b.hs, b.nlast
  434ccc:	ldrh	w8, [x20, #10]
  434cd0:	cmp	w8, #0xa
  434cd4:	b.ne	434cec <feof@plt+0x3231c>  // b.any
  434cd8:	ldr	w8, [x19, #1116]
  434cdc:	cmp	w8, #0x15
  434ce0:	b.eq	434cc0 <feof@plt+0x322f0>  // b.none
  434ce4:	ldr	x8, [x19, #1040]
  434ce8:	cbz	x8, 434cc0 <feof@plt+0x322f0>
  434cec:	ldr	x1, [x20]
  434cf0:	ldrh	w2, [x20, #8]
  434cf4:	mov	x0, x19
  434cf8:	bl	4245e4 <feof@plt+0x21c14>
  434cfc:	ldrh	w8, [x0, #18]
  434d00:	orr	w9, w8, #0x3
  434d04:	strh	w9, [x0, #18]
  434d08:	ldrb	w9, [x20, #12]
  434d0c:	cbz	w9, 434cb8 <feof@plt+0x322e8>
  434d10:	orr	w8, w8, w22
  434d14:	strh	w8, [x0, #18]
  434d18:	b	434cb8 <feof@plt+0x322e8>
  434d1c:	ldp	x20, x19, [sp, #32]
  434d20:	ldp	x22, x21, [sp, #16]
  434d24:	ldp	x29, x30, [sp], #48
  434d28:	ret
  434d2c:	stp	x29, x30, [sp, #-64]!
  434d30:	stp	x22, x21, [sp, #32]
  434d34:	stp	x20, x19, [sp, #48]
  434d38:	ldrb	w8, [x0, #1160]
  434d3c:	mov	x19, x0
  434d40:	mov	w20, w1
  434d44:	str	x23, [sp, #16]
  434d48:	mov	x29, sp
  434d4c:	cbz	w8, 434d58 <feof@plt+0x32388>
  434d50:	mov	w8, #0xa                   	// #10
  434d54:	b	434d74 <feof@plt+0x323a4>
  434d58:	ldrb	w8, [x19, #1243]
  434d5c:	cbz	w8, 434d68 <feof@plt+0x32398>
  434d60:	ldrb	w8, [x19, #1153]
  434d64:	cbz	w8, 434d70 <feof@plt+0x323a0>
  434d68:	mov	w8, #0xb                   	// #11
  434d6c:	b	434d74 <feof@plt+0x323a4>
  434d70:	mov	w8, #0xc                   	// #12
  434d74:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0xda68>
  434d78:	add	x21, x21, #0xae0
  434d7c:	add	x22, x21, x8, lsl #4
  434d80:	mov	w23, #0x23                  	// #35
  434d84:	b	434d9c <feof@plt+0x323cc>
  434d88:	ldrh	w8, [x21, #10]
  434d8c:	str	w8, [x0, #24]
  434d90:	add	x21, x21, #0x10
  434d94:	cmp	x21, x22
  434d98:	b.cs	434dec <feof@plt+0x3241c>  // b.hs, b.nlast
  434d9c:	ldrh	w8, [x21, #10]
  434da0:	cmp	w8, #0xa
  434da4:	b.ne	434dbc <feof@plt+0x323ec>  // b.any
  434da8:	ldr	w8, [x19, #1116]
  434dac:	cmp	w8, #0x15
  434db0:	b.eq	434d90 <feof@plt+0x323c0>  // b.none
  434db4:	ldr	x8, [x19, #1040]
  434db8:	cbz	x8, 434d90 <feof@plt+0x323c0>
  434dbc:	ldr	x1, [x21]
  434dc0:	ldrh	w2, [x21, #8]
  434dc4:	mov	x0, x19
  434dc8:	bl	4245e4 <feof@plt+0x21c14>
  434dcc:	ldrh	w8, [x0, #18]
  434dd0:	orr	w9, w8, #0x3
  434dd4:	strh	w9, [x0, #18]
  434dd8:	ldrb	w9, [x21, #12]
  434ddc:	cbz	w9, 434d88 <feof@plt+0x323b8>
  434de0:	orr	w8, w8, w23
  434de4:	strh	w8, [x0, #18]
  434de8:	b	434d88 <feof@plt+0x323b8>
  434dec:	ldrb	w8, [x19, #1160]
  434df0:	cbnz	w8, 434e14 <feof@plt+0x32444>
  434df4:	ldrb	w8, [x19, #1243]
  434df8:	cbz	w8, 434e04 <feof@plt+0x32434>
  434dfc:	ldrb	w8, [x19, #1153]
  434e00:	cbz	w8, 434e14 <feof@plt+0x32444>
  434e04:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  434e08:	add	x1, x1, #0xc80
  434e0c:	mov	x0, x19
  434e10:	bl	41bda4 <feof@plt+0x193d4>
  434e14:	ldrb	w9, [x19, #1120]
  434e18:	ldr	w8, [x19, #1116]
  434e1c:	cbz	w9, 434e38 <feof@plt+0x32468>
  434e20:	sub	w8, w8, #0xd
  434e24:	cmp	w8, #0x8
  434e28:	b.cs	434e68 <feof@plt+0x32498>  // b.hs, b.nlast
  434e2c:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  434e30:	add	x9, x9, #0xba0
  434e34:	b	434e7c <feof@plt+0x324ac>
  434e38:	sub	w8, w8, #0x2
  434e3c:	cmp	w8, #0x14
  434e40:	b.cs	434e54 <feof@plt+0x32484>  // b.hs, b.nlast
  434e44:	mov	w9, #0x1d7                 	// #471
  434e48:	movk	w9, #0x8, lsl #16
  434e4c:	lsr	w9, w9, w8
  434e50:	tbnz	w9, #0, 434e74 <feof@plt+0x324a4>
  434e54:	ldrb	w8, [x19, #1152]
  434e58:	cbz	w8, 434e88 <feof@plt+0x324b8>
  434e5c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  434e60:	add	x1, x1, #0xd63
  434e64:	b	434e80 <feof@plt+0x324b0>
  434e68:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  434e6c:	add	x1, x1, #0xcdb
  434e70:	b	434e80 <feof@plt+0x324b0>
  434e74:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  434e78:	add	x9, x9, #0xbe0
  434e7c:	ldr	x1, [x9, w8, sxtw #3]
  434e80:	mov	x0, x19
  434e84:	bl	41bda4 <feof@plt+0x193d4>
  434e88:	ldrb	w8, [x19, #1128]
  434e8c:	cbz	w8, 434ec8 <feof@plt+0x324f8>
  434e90:	ldrb	w8, [x19, #1120]
  434e94:	cbz	w8, 434ea8 <feof@plt+0x324d8>
  434e98:	ldr	w8, [x19, #1116]
  434e9c:	sub	w8, w8, #0xb
  434ea0:	cmp	w8, #0x2
  434ea4:	b.cc	434ec8 <feof@plt+0x324f8>  // b.lo, b.ul, b.last
  434ea8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  434eac:	add	x1, x1, #0xd7c
  434eb0:	mov	x0, x19
  434eb4:	bl	41bda4 <feof@plt+0x193d4>
  434eb8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  434ebc:	add	x1, x1, #0xd8e
  434ec0:	mov	x0, x19
  434ec4:	bl	41bda4 <feof@plt+0x193d4>
  434ec8:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0xda68>
  434ecc:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0xda68>
  434ed0:	add	x8, x8, #0xda0
  434ed4:	add	x9, x9, #0xdb2
  434ed8:	cmp	w20, #0x0
  434edc:	csel	x1, x9, x8, eq  // eq = none
  434ee0:	mov	x0, x19
  434ee4:	bl	41bda4 <feof@plt+0x193d4>
  434ee8:	ldrb	w8, [x19, #1122]
  434eec:	cbz	w8, 434f10 <feof@plt+0x32540>
  434ef0:	mov	x0, x19
  434ef4:	ldp	x20, x19, [sp, #48]
  434ef8:	ldp	x22, x21, [sp, #32]
  434efc:	ldr	x23, [sp, #16]
  434f00:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  434f04:	add	x1, x1, #0xdc4
  434f08:	ldp	x29, x30, [sp], #64
  434f0c:	b	41bda4 <feof@plt+0x193d4>
  434f10:	ldp	x20, x19, [sp, #48]
  434f14:	ldp	x22, x21, [sp, #32]
  434f18:	ldr	x23, [sp, #16]
  434f1c:	ldp	x29, x30, [sp], #64
  434f20:	ret
  434f24:	stp	x29, x30, [sp, #-48]!
  434f28:	stp	x22, x21, [sp, #16]
  434f2c:	stp	x20, x19, [sp, #32]
  434f30:	ldrb	w8, [x0, #1120]
  434f34:	mov	x19, x0
  434f38:	mov	x29, sp
  434f3c:	cbz	w8, 434f44 <feof@plt+0x32574>
  434f40:	strb	wzr, [x19, #1138]
  434f44:	ldrb	w9, [x19, #1155]
  434f48:	cbz	w9, 434f60 <feof@plt+0x32590>
  434f4c:	ldrb	w9, [x19, #1244]
  434f50:	cbnz	w9, 434f5c <feof@plt+0x3258c>
  434f54:	mov	w9, #0x1                   	// #1
  434f58:	strb	w9, [x19, #24]
  434f5c:	strb	wzr, [x19, #1160]
  434f60:	ldrb	w9, [x19, #1136]
  434f64:	cmp	w9, #0x2
  434f68:	b.ne	434f7c <feof@plt+0x325ac>  // b.any
  434f6c:	ldrb	w9, [x19, #1125]
  434f70:	cmp	w9, #0x0
  434f74:	cset	w9, eq  // eq = none
  434f78:	strb	w9, [x19, #1136]
  434f7c:	ldrb	w9, [x19, #1160]
  434f80:	cbz	w9, 434f8c <feof@plt+0x325bc>
  434f84:	strb	wzr, [x19, #1125]
  434f88:	strb	wzr, [x19, #1136]
  434f8c:	cbz	w8, 434f9c <feof@plt+0x325cc>
  434f90:	ldrb	w8, [x19, #1158]
  434f94:	cmp	w8, #0x0
  434f98:	cset	w8, ne  // ne = any
  434f9c:	ldrb	w9, [x19, #1159]
  434fa0:	mov	w10, #0x84                  	// #132
  434fa4:	orr	w10, w8, w10
  434fa8:	cmp	w9, #0x0
  434fac:	csel	w8, w8, w10, eq  // eq = none
  434fb0:	cbz	w8, 435008 <feof@plt+0x32638>
  434fb4:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0xda68>
  434fb8:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0xda68>
  434fbc:	lsl	w20, w8, #2
  434fc0:	add	x21, x21, #0xa30
  434fc4:	add	x22, x22, #0xae0
  434fc8:	ldr	x1, [x21]
  434fcc:	ldrh	w2, [x21, #8]
  434fd0:	mov	x0, x19
  434fd4:	bl	4245e4 <feof@plt+0x21c14>
  434fd8:	ldrh	w8, [x0, #18]
  434fdc:	ldrb	w9, [x0, #16]
  434fe0:	orr	w8, w8, w20
  434fe4:	and	w9, w9, #0xfe
  434fe8:	strh	w8, [x0, #18]
  434fec:	strb	w9, [x0, #16]
  434ff0:	ldrb	w8, [x21, #10]
  434ff4:	add	x21, x21, #0x10
  434ff8:	cmp	x21, x22
  434ffc:	lsl	w8, w8, #1
  435000:	strb	w8, [x0, #16]
  435004:	b.cc	434fc8 <feof@plt+0x325f8>  // b.lo, b.ul, b.last
  435008:	ldp	x20, x19, [sp, #32]
  43500c:	ldp	x22, x21, [sp, #16]
  435010:	ldp	x29, x30, [sp], #48
  435014:	ret
  435018:	stp	x29, x30, [sp, #-48]!
  43501c:	stp	x20, x19, [sp, #32]
  435020:	ldr	w8, [x0, #1200]
  435024:	mov	x19, x0
  435028:	mov	x20, x1
  43502c:	str	x21, [sp, #16]
  435030:	mov	x29, sp
  435034:	cbz	w8, 435050 <feof@plt+0x32680>
  435038:	ldr	x0, [x19, #712]
  43503c:	cbnz	x0, 435048 <feof@plt+0x32678>
  435040:	bl	4318a8 <feof@plt+0x2eed8>
  435044:	str	x0, [x19, #712]
  435048:	mov	x1, x20
  43504c:	bl	431bb8 <feof@plt+0x2f1e8>
  435050:	add	x2, x19, #0xd8
  435054:	mov	x0, x19
  435058:	mov	x1, x20
  43505c:	mov	w3, wzr
  435060:	mov	w4, wzr
  435064:	mov	w5, wzr
  435068:	mov	w6, wzr
  43506c:	bl	421ea8 <feof@plt+0x1f4d8>
  435070:	str	x0, [x19, #288]
  435074:	bl	421e98 <feof@plt+0x1f4c8>
  435078:	tbz	w0, #0, 435084 <feof@plt+0x326b4>
  43507c:	mov	x20, xzr
  435080:	b	435130 <feof@plt+0x32760>
  435084:	ldr	x1, [x19, #288]
  435088:	mov	x0, x19
  43508c:	mov	w2, wzr
  435090:	mov	w3, wzr
  435094:	bl	4228e0 <feof@plt+0x1ff10>
  435098:	ldrb	w8, [x19, #1155]
  43509c:	cbz	w8, 435130 <feof@plt+0x32760>
  4350a0:	mov	x0, x19
  4350a4:	bl	425618 <feof@plt+0x22c48>
  4350a8:	ldrb	w8, [x0, #4]
  4350ac:	cmp	w8, #0x25
  4350b0:	b.ne	435108 <feof@plt+0x32738>  // b.any
  4350b4:	mov	x20, x0
  4350b8:	mov	w8, #0x1                   	// #1
  4350bc:	mov	x0, x19
  4350c0:	strb	w8, [x19, #16]
  4350c4:	bl	425618 <feof@plt+0x22c48>
  4350c8:	mov	x21, x0
  4350cc:	mov	w1, #0x1                   	// #1
  4350d0:	mov	x0, x19
  4350d4:	bl	42e2c0 <feof@plt+0x2b8f0>
  4350d8:	strb	wzr, [x19, #16]
  4350dc:	ldrb	w8, [x21, #4]
  4350e0:	cmp	w8, #0x37
  4350e4:	b.ne	435108 <feof@plt+0x32738>  // b.any
  4350e8:	ldrh	w8, [x20, #6]
  4350ec:	mov	x0, x19
  4350f0:	and	w1, w8, #0x1
  4350f4:	bl	419c50 <feof@plt+0x17280>
  4350f8:	cbz	w0, 435108 <feof@plt+0x32738>
  4350fc:	mov	x0, x19
  435100:	bl	4351dc <feof@plt+0x3280c>
  435104:	b	435114 <feof@plt+0x32744>
  435108:	mov	w1, #0x1                   	// #1
  43510c:	mov	x0, x19
  435110:	bl	42e2c0 <feof@plt+0x2b8f0>
  435114:	ldr	x8, [x19, #40]
  435118:	mov	w10, #0x18                  	// #24
  43511c:	ldr	w9, [x8, #12]
  435120:	ldr	x8, [x8]
  435124:	sub	w9, w9, #0x1
  435128:	smaddl	x8, w9, w10, x8
  43512c:	ldr	x20, [x8, #8]
  435130:	mov	x0, x20
  435134:	ldp	x20, x19, [sp, #32]
  435138:	ldr	x21, [sp, #16]
  43513c:	ldp	x29, x30, [sp], #48
  435140:	ret
  435144:	stp	x29, x30, [sp, #-32]!
  435148:	stp	x20, x19, [sp, #16]
  43514c:	ldrb	w8, [x0, #1151]
  435150:	mov	x19, x0
  435154:	mov	x20, x1
  435158:	mov	x29, sp
  43515c:	cbz	w8, 435180 <feof@plt+0x327b0>
  435160:	adrp	x1, 42d000 <feof@plt+0x2a630>
  435164:	add	x1, x1, #0x32c
  435168:	mov	x0, x19
  43516c:	mov	x2, xzr
  435170:	bl	424660 <feof@plt+0x21c90>
  435174:	b	435180 <feof@plt+0x327b0>
  435178:	mov	x0, x19
  43517c:	bl	41c0c4 <feof@plt+0x196f4>
  435180:	ldr	x8, [x19]
  435184:	cbnz	x8, 435178 <feof@plt+0x327a8>
  435188:	cbz	x20, 4351b8 <feof@plt+0x327e8>
  43518c:	ldr	w8, [x19, #1200]
  435190:	cbz	w8, 4351b8 <feof@plt+0x327e8>
  435194:	ldr	x0, [x19, #712]
  435198:	mov	w2, #0x48                  	// #72
  43519c:	mov	x1, x20
  4351a0:	bl	431ea4 <feof@plt+0x2f4d4>
  4351a4:	ldrb	w8, [x19, #1205]
  4351a8:	cbz	w8, 4351b8 <feof@plt+0x327e8>
  4351ac:	ldr	x0, [x19, #712]
  4351b0:	mov	x1, x20
  4351b4:	bl	4320c8 <feof@plt+0x2f6f8>
  4351b8:	ldrb	w8, [x19, #1131]
  4351bc:	cbz	w8, 4351d0 <feof@plt+0x32800>
  4351c0:	mov	x0, x19
  4351c4:	ldp	x20, x19, [sp, #16]
  4351c8:	ldp	x29, x30, [sp], #32
  4351cc:	b	42340c <feof@plt+0x20a3c>
  4351d0:	ldp	x20, x19, [sp, #16]
  4351d4:	ldp	x29, x30, [sp], #32
  4351d8:	ret
  4351dc:	stp	x29, x30, [sp, #-48]!
  4351e0:	stp	x22, x21, [sp, #16]
  4351e4:	stp	x20, x19, [sp, #32]
  4351e8:	mov	x29, sp
  4351ec:	mov	x19, x0
  4351f0:	bl	425618 <feof@plt+0x22c48>
  4351f4:	ldrb	w8, [x0, #4]
  4351f8:	cmp	w8, #0x25
  4351fc:	b.ne	4352b4 <feof@plt+0x328e4>  // b.any
  435200:	mov	x0, x19
  435204:	bl	425618 <feof@plt+0x22c48>
  435208:	ldrb	w8, [x0, #4]
  43520c:	cmp	w8, #0x37
  435210:	b.ne	4352bc <feof@plt+0x328ec>  // b.any
  435214:	mov	x0, x19
  435218:	bl	425618 <feof@plt+0x22c48>
  43521c:	ldrb	w8, [x0, #4]
  435220:	cmp	w8, #0x3e
  435224:	b.ne	4352c4 <feof@plt+0x328f4>  // b.any
  435228:	ldr	w8, [x0, #8]
  43522c:	mov	x20, x0
  435230:	cmp	w8, #0x5
  435234:	b.cc	4352c4 <feof@plt+0x328f4>  // b.lo, b.ul, b.last
  435238:	ldr	x9, [x20, #16]
  43523c:	sub	w10, w8, #0x2
  435240:	ldrb	w10, [x9, w10, uxtw]
  435244:	cmp	w10, #0x2f
  435248:	b.ne	4352c4 <feof@plt+0x328f4>  // b.any
  43524c:	sub	w10, w8, #0x3
  435250:	ldrb	w11, [x9, x10]
  435254:	cmp	w11, #0x2f
  435258:	b.ne	4352c4 <feof@plt+0x328f4>  // b.any
  43525c:	ldr	x22, [x19, #920]
  435260:	cbz	x22, 4352a0 <feof@plt+0x328d0>
  435264:	add	x10, x10, #0xf
  435268:	mov	x11, sp
  43526c:	and	x10, x10, #0x1fffffff0
  435270:	sub	x21, x11, x10
  435274:	mov	sp, x21
  435278:	add	x1, x9, #0x1
  43527c:	sub	w2, w8, #0x4
  435280:	mov	x0, x21
  435284:	bl	402390 <memcpy@plt>
  435288:	ldr	w8, [x20, #8]
  43528c:	mov	x0, x19
  435290:	mov	x1, x21
  435294:	sub	w8, w8, #0x4
  435298:	strb	wzr, [x21, w8, uxtw]
  43529c:	blr	x22
  4352a0:	mov	sp, x29
  4352a4:	ldp	x20, x19, [sp, #32]
  4352a8:	ldp	x22, x21, [sp, #16]
  4352ac:	ldp	x29, x30, [sp], #48
  4352b0:	ret
  4352b4:	mov	w1, #0x1                   	// #1
  4352b8:	b	4352c8 <feof@plt+0x328f8>
  4352bc:	mov	w1, #0x2                   	// #2
  4352c0:	b	4352c8 <feof@plt+0x328f8>
  4352c4:	mov	w1, #0x3                   	// #3
  4352c8:	mov	x0, x19
  4352cc:	mov	sp, x29
  4352d0:	ldp	x20, x19, [sp, #32]
  4352d4:	ldp	x22, x21, [sp, #16]
  4352d8:	ldp	x29, x30, [sp], #48
  4352dc:	b	42e2c0 <feof@plt+0x2b8f0>
  4352e0:	sub	sp, sp, #0x60
  4352e4:	stp	x29, x30, [sp, #80]
  4352e8:	add	x29, sp, #0x50
  4352ec:	movi	v0.2d, #0x0
  4352f0:	stp	q0, q0, [sp]
  4352f4:	str	x0, [sp]
  4352f8:	str	w1, [sp, #8]
  4352fc:	mov	x0, sp
  435300:	mov	w1, #0x48                  	// #72
  435304:	str	xzr, [sp, #64]
  435308:	stp	q0, q0, [sp, #32]
  43530c:	bl	435450 <feof@plt+0x32a80>
  435310:	cbz	x0, 43532c <feof@plt+0x3295c>
  435314:	ldp	q0, q3, [sp]
  435318:	ldr	x8, [sp, #64]
  43531c:	ldp	q1, q2, [sp, #32]
  435320:	stp	q0, q3, [x0]
  435324:	str	x8, [x0, #64]
  435328:	stp	q1, q2, [x0, #32]
  43532c:	ldp	x29, x30, [sp, #80]
  435330:	add	sp, sp, #0x60
  435334:	ret
  435338:	sub	sp, sp, #0x50
  43533c:	stp	x29, x30, [sp, #48]
  435340:	str	x19, [sp, #64]
  435344:	add	x29, sp, #0x30
  435348:	add	w8, w1, #0x1
  43534c:	stp	x0, x2, [sp, #8]
  435350:	stp	x3, x4, [sp, #24]
  435354:	mov	w1, #0x1000                	// #4096
  435358:	mov	x2, xzr
  43535c:	mov	x3, xzr
  435360:	mov	x19, x0
  435364:	str	w8, [sp]
  435368:	str	wzr, [sp, #40]
  43536c:	bl	435450 <feof@plt+0x32a80>
  435370:	cbz	x0, 435394 <feof@plt+0x329c4>
  435374:	mov	x1, x0
  435378:	mov	w2, #0x1000                	// #4096
  43537c:	mov	x0, x19
  435380:	mov	x3, xzr
  435384:	mov	x4, xzr
  435388:	bl	435614 <feof@plt+0x32c44>
  43538c:	mov	w8, #0x1                   	// #1
  435390:	b	435398 <feof@plt+0x329c8>
  435394:	mov	w8, wzr
  435398:	adrp	x0, 435000 <feof@plt+0x32630>
  43539c:	add	x0, x0, #0x3c0
  4353a0:	mov	x1, sp
  4353a4:	str	w8, [sp, #44]
  4353a8:	bl	402330 <_Unwind_Backtrace@plt>
  4353ac:	ldr	w0, [sp, #40]
  4353b0:	ldr	x19, [sp, #64]
  4353b4:	ldp	x29, x30, [sp, #48]
  4353b8:	add	sp, sp, #0x50
  4353bc:	ret
  4353c0:	stp	x29, x30, [sp, #-32]!
  4353c4:	str	x19, [sp, #16]
  4353c8:	mov	x29, sp
  4353cc:	mov	x19, x1
  4353d0:	add	x1, x29, #0x1c
  4353d4:	str	wzr, [x29, #28]
  4353d8:	bl	402360 <_Unwind_GetIPInfo@plt>
  4353dc:	ldr	w8, [x19]
  4353e0:	subs	w8, w8, #0x1
  4353e4:	b.lt	4353f4 <feof@plt+0x32a24>  // b.tstop
  4353e8:	mov	w0, wzr
  4353ec:	str	w8, [x19]
  4353f0:	b	435444 <feof@plt+0x32a74>
  4353f4:	ldr	w8, [x29, #28]
  4353f8:	ldr	w9, [x19, #44]
  4353fc:	cmp	w8, #0x0
  435400:	cset	w8, eq  // eq = none
  435404:	sub	x1, x0, x8
  435408:	cbz	w9, 43541c <feof@plt+0x32a4c>
  43540c:	ldp	x0, x2, [x19, #8]
  435410:	ldp	x3, x4, [x19, #24]
  435414:	bl	43588c <feof@plt+0x32ebc>
  435418:	b	435434 <feof@plt+0x32a64>
  43541c:	ldr	x8, [x19, #16]
  435420:	ldr	x0, [x19, #32]
  435424:	mov	x2, xzr
  435428:	mov	w3, wzr
  43542c:	mov	x4, xzr
  435430:	blr	x8
  435434:	cmp	w0, #0x0
  435438:	mov	w8, #0x5                   	// #5
  43543c:	str	w0, [x19, #40]
  435440:	csel	w0, wzr, w8, eq  // eq = none
  435444:	ldr	x19, [sp, #16]
  435448:	ldp	x29, x30, [sp], #32
  43544c:	ret
  435450:	stp	x29, x30, [sp, #-64]!
  435454:	stp	x24, x23, [sp, #16]
  435458:	stp	x22, x21, [sp, #32]
  43545c:	stp	x20, x19, [sp, #48]
  435460:	mov	x29, sp
  435464:	ldr	w8, [x0, #8]
  435468:	mov	x20, x3
  43546c:	mov	x19, x2
  435470:	mov	x21, x0
  435474:	mov	x22, x1
  435478:	cbz	w8, 435494 <feof@plt+0x32ac4>
  43547c:	add	x8, x21, #0x3c
  435480:	mov	w9, #0x1                   	// #1
  435484:	ldaxr	w10, [x8]
  435488:	stlxr	w11, w9, [x8]
  43548c:	cbnz	w11, 435484 <feof@plt+0x32ab4>
  435490:	cbnz	w10, 43557c <feof@plt+0x32bac>
  435494:	mov	x8, x21
  435498:	ldr	x23, [x8, #64]!
  43549c:	cbz	x23, 435568 <feof@plt+0x32b98>
  4354a0:	ldr	x9, [x23, #8]
  4354a4:	cmp	x9, x22
  4354a8:	b.cs	4354c8 <feof@plt+0x32af8>  // b.hs, b.nlast
  4354ac:	mov	x10, x23
  4354b0:	ldr	x23, [x23]
  4354b4:	cbz	x23, 435568 <feof@plt+0x32b98>
  4354b8:	ldr	x9, [x23, #8]
  4354bc:	cmp	x9, x22
  4354c0:	b.cc	4354ac <feof@plt+0x32adc>  // b.lo, b.ul, b.last
  4354c4:	b	4354cc <feof@plt+0x32afc>
  4354c8:	mov	x10, x8
  4354cc:	ldr	x11, [x23]
  4354d0:	add	x12, x22, #0x7
  4354d4:	and	x22, x12, #0xfffffffffffffff8
  4354d8:	subs	x9, x9, x22
  4354dc:	str	x11, [x10]
  4354e0:	b.ls	435568 <feof@plt+0x32b98>  // b.plast
  4354e4:	cmp	x9, #0x10
  4354e8:	b.cc	435568 <feof@plt+0x32b98>  // b.lo, b.ul, b.last
  4354ec:	ldr	x10, [x8]
  4354f0:	cbz	x10, 43555c <feof@plt+0x32b8c>
  4354f4:	mov	x12, xzr
  4354f8:	mov	x11, xzr
  4354fc:	mov	x13, x10
  435500:	mov	x0, x8
  435504:	b	43551c <feof@plt+0x32b4c>
  435508:	mov	x11, x0
  43550c:	mov	x0, x13
  435510:	ldr	x13, [x13]
  435514:	add	x12, x12, #0x1
  435518:	cbz	x13, 435538 <feof@plt+0x32b68>
  43551c:	cbz	x11, 435508 <feof@plt+0x32b38>
  435520:	ldr	x14, [x11]
  435524:	ldr	x15, [x13, #8]
  435528:	ldr	x14, [x14, #8]
  43552c:	cmp	x15, x14
  435530:	b.cc	435508 <feof@plt+0x32b38>  // b.lo, b.ul, b.last
  435534:	b	43550c <feof@plt+0x32b3c>
  435538:	cmp	x12, #0x10
  43553c:	b.cc	43555c <feof@plt+0x32b8c>  // b.lo, b.ul, b.last
  435540:	ldr	x10, [x11]
  435544:	ldr	x12, [x10, #8]
  435548:	cmp	x12, x9
  43554c:	b.cs	435568 <feof@plt+0x32b98>  // b.hs, b.nlast
  435550:	ldr	x10, [x10]
  435554:	str	x10, [x11]
  435558:	ldr	x10, [x8]
  43555c:	add	x11, x23, x22
  435560:	stp	x10, x9, [x11]
  435564:	str	x11, [x8]
  435568:	ldr	w8, [x21, #8]
  43556c:	cbz	w8, 435578 <feof@plt+0x32ba8>
  435570:	add	x8, x21, #0x3c
  435574:	stlr	wzr, [x8]
  435578:	cbnz	x23, 4355fc <feof@plt+0x32c2c>
  43557c:	bl	4028e0 <getpagesize@plt>
  435580:	sxtw	x8, w0
  435584:	add	x9, x22, x8
  435588:	sub	x9, x9, #0x1
  43558c:	neg	x8, x8
  435590:	and	x24, x9, x8
  435594:	mov	w2, #0x3                   	// #3
  435598:	mov	w3, #0x22                  	// #34
  43559c:	mov	w4, #0xffffffff            	// #-1
  4355a0:	mov	x0, xzr
  4355a4:	mov	x1, x24
  4355a8:	mov	x5, xzr
  4355ac:	bl	402690 <mmap@plt>
  4355b0:	cmn	x0, #0x1
  4355b4:	b.eq	4355dc <feof@plt+0x32c0c>  // b.none
  4355b8:	add	x8, x22, #0x7
  4355bc:	and	x8, x8, #0xfffffffffffffff8
  4355c0:	mov	x23, x0
  4355c4:	subs	x2, x24, x8
  4355c8:	b.ls	4355fc <feof@plt+0x32c2c>  // b.plast
  4355cc:	add	x1, x23, x8
  4355d0:	mov	x0, x21
  4355d4:	bl	435614 <feof@plt+0x32c44>
  4355d8:	b	4355fc <feof@plt+0x32c2c>
  4355dc:	cbz	x19, 4355f8 <feof@plt+0x32c28>
  4355e0:	bl	4027c0 <__errno_location@plt>
  4355e4:	ldr	w2, [x0]
  4355e8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  4355ec:	add	x1, x1, #0xe92
  4355f0:	mov	x0, x20
  4355f4:	blr	x19
  4355f8:	mov	x23, xzr
  4355fc:	mov	x0, x23
  435600:	ldp	x20, x19, [sp, #48]
  435604:	ldp	x22, x21, [sp, #32]
  435608:	ldp	x24, x23, [sp, #16]
  43560c:	ldp	x29, x30, [sp], #64
  435610:	ret
  435614:	stp	x29, x30, [sp, #-48]!
  435618:	str	x21, [sp, #16]
  43561c:	stp	x20, x19, [sp, #32]
  435620:	mov	x29, sp
  435624:	mov	x21, x2
  435628:	mov	x20, x1
  43562c:	cmp	x2, #0x10, lsl #12
  435630:	mov	x19, x0
  435634:	b.cc	435660 <feof@plt+0x32c90>  // b.lo, b.ul, b.last
  435638:	bl	4028e0 <getpagesize@plt>
  43563c:	sxtw	x8, w0
  435640:	sub	x8, x8, #0x1
  435644:	orr	x9, x20, x21
  435648:	tst	x8, x9
  43564c:	b.ne	435660 <feof@plt+0x32c90>  // b.any
  435650:	mov	x0, x20
  435654:	mov	x1, x21
  435658:	bl	4026e0 <munmap@plt>
  43565c:	cbz	w0, 435714 <feof@plt+0x32d44>
  435660:	ldr	w8, [x19, #8]
  435664:	cbz	w8, 435680 <feof@plt+0x32cb0>
  435668:	add	x8, x19, #0x3c
  43566c:	mov	w9, #0x1                   	// #1
  435670:	ldaxr	w10, [x8]
  435674:	stlxr	w11, w9, [x8]
  435678:	cbnz	w11, 435670 <feof@plt+0x32ca0>
  43567c:	cbnz	w10, 435714 <feof@plt+0x32d44>
  435680:	cmp	x21, #0x10
  435684:	b.cc	435704 <feof@plt+0x32d34>  // b.lo, b.ul, b.last
  435688:	mov	x8, x19
  43568c:	ldr	x9, [x8, #64]!
  435690:	cbz	x9, 4356fc <feof@plt+0x32d2c>
  435694:	mov	x11, xzr
  435698:	mov	x10, xzr
  43569c:	mov	x12, x9
  4356a0:	mov	x0, x8
  4356a4:	b	4356bc <feof@plt+0x32cec>
  4356a8:	mov	x10, x0
  4356ac:	mov	x0, x12
  4356b0:	ldr	x12, [x12]
  4356b4:	add	x11, x11, #0x1
  4356b8:	cbz	x12, 4356d8 <feof@plt+0x32d08>
  4356bc:	cbz	x10, 4356a8 <feof@plt+0x32cd8>
  4356c0:	ldr	x13, [x10]
  4356c4:	ldr	x14, [x12, #8]
  4356c8:	ldr	x13, [x13, #8]
  4356cc:	cmp	x14, x13
  4356d0:	b.cc	4356a8 <feof@plt+0x32cd8>  // b.lo, b.ul, b.last
  4356d4:	b	4356ac <feof@plt+0x32cdc>
  4356d8:	cmp	x11, #0x10
  4356dc:	b.cc	4356fc <feof@plt+0x32d2c>  // b.lo, b.ul, b.last
  4356e0:	ldr	x9, [x10]
  4356e4:	ldr	x11, [x9, #8]
  4356e8:	cmp	x11, x21
  4356ec:	b.cs	435704 <feof@plt+0x32d34>  // b.hs, b.nlast
  4356f0:	ldr	x9, [x9]
  4356f4:	str	x9, [x10]
  4356f8:	ldr	x9, [x8]
  4356fc:	stp	x9, x21, [x20]
  435700:	str	x20, [x8]
  435704:	ldr	w8, [x19, #8]
  435708:	cbz	w8, 435714 <feof@plt+0x32d44>
  43570c:	add	x8, x19, #0x3c
  435710:	stlr	wzr, [x8]
  435714:	ldp	x20, x19, [sp, #32]
  435718:	ldr	x21, [sp, #16]
  43571c:	ldp	x29, x30, [sp], #48
  435720:	ret
  435724:	stp	x29, x30, [sp, #-80]!
  435728:	str	x25, [sp, #16]
  43572c:	stp	x24, x23, [sp, #32]
  435730:	stp	x22, x21, [sp, #48]
  435734:	stp	x20, x19, [sp, #64]
  435738:	mov	x29, sp
  43573c:	ldr	x8, [x4, #16]
  435740:	mov	x19, x4
  435744:	mov	x20, x1
  435748:	cmp	x8, x1
  43574c:	b.cs	435788 <feof@plt+0x32db8>  // b.hs, b.nlast
  435750:	mov	x22, x3
  435754:	mov	x24, x2
  435758:	mov	x21, x0
  43575c:	bl	4028e0 <getpagesize@plt>
  435760:	ldr	x9, [x19, #8]
  435764:	cbz	x9, 435790 <feof@plt+0x32dc0>
  435768:	sxtw	x8, w0
  43576c:	add	x9, x9, x20
  435770:	cmp	x9, x8
  435774:	lsl	x9, x9, #1
  435778:	b.cs	435798 <feof@plt+0x32dc8>  // b.hs, b.nlast
  43577c:	cmp	x9, x8
  435780:	csel	x23, x8, x9, hi  // hi = pmore
  435784:	b	4357a8 <feof@plt+0x32dd8>
  435788:	ldp	x22, x9, [x19]
  43578c:	b	435804 <feof@plt+0x32e34>
  435790:	lsl	x23, x20, #4
  435794:	b	4357a8 <feof@plt+0x32dd8>
  435798:	add	x9, x8, x9
  43579c:	sub	x9, x9, #0x1
  4357a0:	neg	x8, x8
  4357a4:	and	x23, x9, x8
  4357a8:	mov	x0, x21
  4357ac:	mov	x1, x23
  4357b0:	mov	x2, x24
  4357b4:	mov	x3, x22
  4357b8:	bl	435450 <feof@plt+0x32a80>
  4357bc:	cbz	x0, 435814 <feof@plt+0x32e44>
  4357c0:	ldr	x24, [x19]
  4357c4:	mov	x22, x0
  4357c8:	cbz	x24, 4357f4 <feof@plt+0x32e24>
  4357cc:	ldr	x25, [x19, #8]
  4357d0:	mov	x0, x22
  4357d4:	mov	x1, x24
  4357d8:	mov	x2, x25
  4357dc:	bl	402390 <memcpy@plt>
  4357e0:	ldr	x8, [x19, #16]
  4357e4:	mov	x0, x21
  4357e8:	mov	x1, x24
  4357ec:	add	x2, x8, x25
  4357f0:	bl	435614 <feof@plt+0x32c44>
  4357f4:	ldr	x9, [x19, #8]
  4357f8:	str	x22, [x19]
  4357fc:	sub	x8, x23, x9
  435800:	str	x8, [x19, #16]
  435804:	add	x0, x22, x9
  435808:	add	x9, x9, x20
  43580c:	sub	x8, x8, x20
  435810:	stp	x9, x8, [x19, #8]
  435814:	ldp	x20, x19, [sp, #64]
  435818:	ldp	x22, x21, [sp, #48]
  43581c:	ldp	x24, x23, [sp, #32]
  435820:	ldr	x25, [sp, #16]
  435824:	ldp	x29, x30, [sp], #80
  435828:	ret
  43582c:	ldp	x0, x8, [x1]
  435830:	add	x8, x0, x8
  435834:	stp	x8, xzr, [x1]
  435838:	ret
  43583c:	stp	x29, x30, [sp, #-32]!
  435840:	str	x19, [sp, #16]
  435844:	mov	x29, sp
  435848:	ldp	x8, x9, [x1, #8]
  43584c:	ldr	x10, [x1]
  435850:	mov	x19, x1
  435854:	add	x11, x8, #0x7
  435858:	add	x8, x9, x8
  43585c:	and	x9, x11, #0xfffffffffffffff8
  435860:	sub	x2, x8, x9
  435864:	add	x1, x10, x9
  435868:	bl	435614 <feof@plt+0x32c44>
  43586c:	ldr	x8, [x19, #8]
  435870:	str	xzr, [x19, #16]
  435874:	cbnz	x8, 43587c <feof@plt+0x32eac>
  435878:	str	xzr, [x19]
  43587c:	ldr	x19, [sp, #16]
  435880:	mov	w0, #0x1                   	// #1
  435884:	ldp	x29, x30, [sp], #32
  435888:	ret
  43588c:	stp	x29, x30, [sp, #-64]!
  435890:	str	x23, [sp, #16]
  435894:	stp	x22, x21, [sp, #32]
  435898:	stp	x20, x19, [sp, #48]
  43589c:	mov	x29, sp
  4358a0:	mov	x21, x2
  4358a4:	mov	x22, x1
  4358a8:	mov	x1, x3
  4358ac:	mov	x2, x4
  4358b0:	mov	x19, x4
  4358b4:	mov	x20, x3
  4358b8:	mov	x23, x0
  4358bc:	bl	435910 <feof@plt+0x32f40>
  4358c0:	cbz	w0, 4358cc <feof@plt+0x32efc>
  4358c4:	ldr	w8, [x23, #56]
  4358c8:	cbz	w8, 4358e4 <feof@plt+0x32f14>
  4358cc:	ldp	x20, x19, [sp, #48]
  4358d0:	ldp	x22, x21, [sp, #32]
  4358d4:	ldr	x23, [sp, #16]
  4358d8:	mov	w0, wzr
  4358dc:	ldp	x29, x30, [sp], #64
  4358e0:	ret
  4358e4:	ldr	x5, [x23, #24]
  4358e8:	mov	x0, x23
  4358ec:	mov	x1, x22
  4358f0:	mov	x2, x21
  4358f4:	mov	x3, x20
  4358f8:	mov	x4, x19
  4358fc:	ldp	x20, x19, [sp, #48]
  435900:	ldp	x22, x21, [sp, #32]
  435904:	ldr	x23, [sp, #16]
  435908:	ldp	x29, x30, [sp], #64
  43590c:	br	x5
  435910:	sub	sp, sp, #0x90
  435914:	stp	x29, x30, [sp, #80]
  435918:	str	x23, [sp, #96]
  43591c:	stp	x22, x21, [sp, #112]
  435920:	stp	x20, x19, [sp, #128]
  435924:	add	x29, sp, #0x50
  435928:	ldr	w8, [x0, #8]
  43592c:	mov	x21, x2
  435930:	mov	x19, x0
  435934:	mov	x20, x1
  435938:	cbz	w8, 435964 <feof@plt+0x32f94>
  43593c:	add	x8, x19, #0x38
  435940:	ldar	w8, [x8]
  435944:	cbz	w8, 43596c <feof@plt+0x32f9c>
  435948:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  43594c:	add	x1, x1, #0xe97
  435950:	mov	w2, #0xffffffff            	// #-1
  435954:	mov	x0, x21
  435958:	blr	x20
  43595c:	mov	w0, wzr
  435960:	b	435b00 <feof@plt+0x33130>
  435964:	ldr	w8, [x19, #56]
  435968:	cbnz	w8, 435948 <feof@plt+0x32f78>
  43596c:	ldr	w8, [x19, #8]
  435970:	cbz	w8, 435988 <feof@plt+0x32fb8>
  435974:	add	x8, x19, #0x18
  435978:	ldar	x8, [x8]
  43597c:	str	x8, [x29, #24]
  435980:	cbnz	x8, 435afc <feof@plt+0x3312c>
  435984:	b	435994 <feof@plt+0x32fc4>
  435988:	ldr	x8, [x19, #24]
  43598c:	str	x8, [x29, #24]
  435990:	cbnz	x8, 435afc <feof@plt+0x3312c>
  435994:	ldr	x22, [x19]
  435998:	cbz	x22, 4359d8 <feof@plt+0x33008>
  43599c:	add	x3, sp, #0xc
  4359a0:	mov	x0, x22
  4359a4:	mov	x1, x20
  4359a8:	mov	x2, x21
  4359ac:	bl	435bd4 <feof@plt+0x33204>
  4359b0:	ldr	w8, [sp, #12]
  4359b4:	cmp	w0, #0x0
  4359b8:	cset	w9, lt  // lt = tstop
  4359bc:	mov	w2, w0
  4359c0:	cmp	w8, #0x0
  4359c4:	cset	w10, eq  // eq = none
  4359c8:	and	w23, w9, w10
  4359cc:	tbz	w0, #31, 435aa8 <feof@plt+0x330d8>
  4359d0:	cbnz	w8, 4359dc <feof@plt+0x3300c>
  4359d4:	b	435aa8 <feof@plt+0x330d8>
  4359d8:	mov	w23, wzr
  4359dc:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0xda68>
  4359e0:	add	x22, x22, #0xebd
  4359e4:	add	x3, sp, #0xc
  4359e8:	mov	x0, x22
  4359ec:	mov	x1, x20
  4359f0:	mov	x2, x21
  4359f4:	bl	435bd4 <feof@plt+0x33204>
  4359f8:	ldr	w8, [sp, #12]
  4359fc:	mov	w9, #0xffffffff            	// #-1
  435a00:	mov	w2, w0
  435a04:	cmp	w8, #0x0
  435a08:	ccmp	w0, w9, #0x0, eq  // eq = none
  435a0c:	csinc	w23, w23, wzr, gt
  435a10:	tbz	w0, #31, 435aa8 <feof@plt+0x330d8>
  435a14:	cbz	w8, 435aa8 <feof@plt+0x330d8>
  435a18:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0xda68>
  435a1c:	add	x22, x22, #0xecc
  435a20:	add	x3, sp, #0xc
  435a24:	mov	x0, x22
  435a28:	mov	x1, x20
  435a2c:	mov	x2, x21
  435a30:	bl	435bd4 <feof@plt+0x33204>
  435a34:	ldr	w8, [sp, #12]
  435a38:	mov	w9, #0xffffffff            	// #-1
  435a3c:	mov	w2, w0
  435a40:	cmp	w8, #0x0
  435a44:	ccmp	w0, w9, #0x0, eq  // eq = none
  435a48:	csinc	w23, w23, wzr, gt
  435a4c:	tbz	w0, #31, 435aa8 <feof@plt+0x330d8>
  435a50:	cbz	w8, 435aa8 <feof@plt+0x330d8>
  435a54:	add	x22, sp, #0x10
  435a58:	bl	402660 <getpid@plt>
  435a5c:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0xda68>
  435a60:	sxtw	x3, w0
  435a64:	add	x2, x2, #0xedf
  435a68:	add	x0, sp, #0x10
  435a6c:	mov	w1, #0x40                  	// #64
  435a70:	bl	402740 <snprintf@plt>
  435a74:	add	x0, sp, #0x10
  435a78:	add	x3, sp, #0xc
  435a7c:	mov	x1, x20
  435a80:	mov	x2, x21
  435a84:	bl	435bd4 <feof@plt+0x33204>
  435a88:	ldr	w8, [sp, #12]
  435a8c:	mov	w9, #0xffffffff            	// #-1
  435a90:	mov	w2, w0
  435a94:	cmp	w8, #0x0
  435a98:	ccmp	w0, w9, #0x0, eq  // eq = none
  435a9c:	csinc	w23, w23, wzr, gt
  435aa0:	tbz	w0, #31, 435aa8 <feof@plt+0x330d8>
  435aa4:	cbnz	w8, 435ae0 <feof@plt+0x33110>
  435aa8:	tbnz	w2, #31, 435ae0 <feof@plt+0x33110>
  435aac:	add	x5, x29, #0x18
  435ab0:	mov	x0, x19
  435ab4:	mov	x1, x22
  435ab8:	mov	x3, x20
  435abc:	mov	x4, x21
  435ac0:	bl	435e50 <feof@plt+0x33480>
  435ac4:	cbz	w0, 435b2c <feof@plt+0x3315c>
  435ac8:	ldr	w9, [x19, #8]
  435acc:	ldr	x8, [x29, #24]
  435ad0:	cbz	w9, 435af8 <feof@plt+0x33128>
  435ad4:	add	x9, x19, #0x18
  435ad8:	stlr	x8, [x9]
  435adc:	b	435afc <feof@plt+0x3312c>
  435ae0:	cbnz	w23, 435b2c <feof@plt+0x3315c>
  435ae4:	ldr	x1, [x19]
  435ae8:	cbz	x1, 435b18 <feof@plt+0x33148>
  435aec:	mov	w2, #0x2                   	// #2
  435af0:	mov	x0, x21
  435af4:	b	435b28 <feof@plt+0x33158>
  435af8:	str	x8, [x19, #24]
  435afc:	mov	w0, #0x1                   	// #1
  435b00:	ldp	x20, x19, [sp, #128]
  435b04:	ldp	x22, x21, [sp, #112]
  435b08:	ldr	x23, [sp, #96]
  435b0c:	ldp	x29, x30, [sp, #80]
  435b10:	add	sp, sp, #0x90
  435b14:	ret
  435b18:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  435b1c:	add	x1, x1, #0xef6
  435b20:	mov	x0, x21
  435b24:	mov	w2, wzr
  435b28:	blr	x20
  435b2c:	ldr	w8, [x19, #8]
  435b30:	cbz	w8, 435b48 <feof@plt+0x33178>
  435b34:	add	x8, x19, #0x38
  435b38:	mov	w9, #0x1                   	// #1
  435b3c:	mov	w0, wzr
  435b40:	stlr	w9, [x8]
  435b44:	b	435b00 <feof@plt+0x33130>
  435b48:	mov	w8, #0x1                   	// #1
  435b4c:	mov	w0, wzr
  435b50:	str	w8, [x19, #56]
  435b54:	b	435b00 <feof@plt+0x33130>
  435b58:	stp	x29, x30, [sp, #-64]!
  435b5c:	str	x23, [sp, #16]
  435b60:	stp	x22, x21, [sp, #32]
  435b64:	stp	x20, x19, [sp, #48]
  435b68:	mov	x29, sp
  435b6c:	mov	x21, x2
  435b70:	mov	x22, x1
  435b74:	mov	x1, x3
  435b78:	mov	x2, x4
  435b7c:	mov	x19, x4
  435b80:	mov	x20, x3
  435b84:	mov	x23, x0
  435b88:	bl	435910 <feof@plt+0x32f40>
  435b8c:	cbz	w0, 435bc0 <feof@plt+0x331f0>
  435b90:	ldr	w8, [x23, #56]
  435b94:	cbz	w8, 435ba0 <feof@plt+0x331d0>
  435b98:	mov	w0, wzr
  435b9c:	b	435bc0 <feof@plt+0x331f0>
  435ba0:	ldr	x8, [x23, #40]
  435ba4:	mov	x0, x23
  435ba8:	mov	x1, x22
  435bac:	mov	x2, x21
  435bb0:	mov	x3, x20
  435bb4:	mov	x4, x19
  435bb8:	blr	x8
  435bbc:	mov	w0, #0x1                   	// #1
  435bc0:	ldp	x20, x19, [sp, #48]
  435bc4:	ldp	x22, x21, [sp, #32]
  435bc8:	ldr	x23, [sp, #16]
  435bcc:	ldp	x29, x30, [sp], #64
  435bd0:	ret
  435bd4:	stp	x29, x30, [sp, #-64]!
  435bd8:	str	x23, [sp, #16]
  435bdc:	stp	x22, x21, [sp, #32]
  435be0:	stp	x20, x19, [sp, #48]
  435be4:	mov	x29, sp
  435be8:	mov	x21, x3
  435bec:	mov	x20, x2
  435bf0:	mov	x19, x1
  435bf4:	mov	x22, x0
  435bf8:	cbz	x3, 435c00 <feof@plt+0x33230>
  435bfc:	str	wzr, [x21]
  435c00:	mov	w1, #0x80000               	// #524288
  435c04:	mov	x0, x22
  435c08:	bl	402470 <open@plt>
  435c0c:	tbnz	w0, #31, 435c24 <feof@plt+0x33254>
  435c10:	mov	w1, #0x2                   	// #2
  435c14:	mov	w2, #0x1                   	// #1
  435c18:	mov	w23, w0
  435c1c:	bl	402950 <fcntl@plt>
  435c20:	b	435c58 <feof@plt+0x33288>
  435c24:	bl	4027c0 <__errno_location@plt>
  435c28:	cbz	x21, 435c44 <feof@plt+0x33274>
  435c2c:	ldr	w8, [x0]
  435c30:	cmp	w8, #0x2
  435c34:	b.ne	435c44 <feof@plt+0x33274>  // b.any
  435c38:	mov	w8, #0x1                   	// #1
  435c3c:	str	w8, [x21]
  435c40:	b	435c54 <feof@plt+0x33284>
  435c44:	ldr	w2, [x0]
  435c48:	mov	x0, x20
  435c4c:	mov	x1, x22
  435c50:	blr	x19
  435c54:	mov	w23, #0xffffffff            	// #-1
  435c58:	mov	w0, w23
  435c5c:	ldp	x20, x19, [sp, #48]
  435c60:	ldp	x22, x21, [sp, #32]
  435c64:	ldr	x23, [sp, #16]
  435c68:	ldp	x29, x30, [sp], #64
  435c6c:	ret
  435c70:	stp	x29, x30, [sp, #-32]!
  435c74:	stp	x20, x19, [sp, #16]
  435c78:	mov	x29, sp
  435c7c:	mov	x20, x2
  435c80:	mov	x19, x1
  435c84:	bl	402810 <close@plt>
  435c88:	tbnz	w0, #31, 435c94 <feof@plt+0x332c4>
  435c8c:	mov	w0, #0x1                   	// #1
  435c90:	b	435cb0 <feof@plt+0x332e0>
  435c94:	bl	4027c0 <__errno_location@plt>
  435c98:	ldr	w2, [x0]
  435c9c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  435ca0:	add	x1, x1, #0xf25
  435ca4:	mov	x0, x20
  435ca8:	blr	x19
  435cac:	mov	w0, wzr
  435cb0:	ldp	x20, x19, [sp, #16]
  435cb4:	ldp	x29, x30, [sp], #32
  435cb8:	ret
  435cbc:	stp	x29, x30, [sp, #-80]!
  435cc0:	stp	x26, x25, [sp, #16]
  435cc4:	stp	x24, x23, [sp, #32]
  435cc8:	stp	x22, x21, [sp, #48]
  435ccc:	stp	x20, x19, [sp, #64]
  435cd0:	mov	x29, sp
  435cd4:	mov	x20, x3
  435cd8:	mov	x25, x2
  435cdc:	mov	x26, x1
  435ce0:	mov	w1, #0x13b4                	// #5044
  435ce4:	mov	x2, x3
  435ce8:	mov	x3, x4
  435cec:	mov	x22, x6
  435cf0:	mov	x23, x5
  435cf4:	mov	x19, x4
  435cf8:	mov	x21, x0
  435cfc:	bl	435450 <feof@plt+0x32a80>
  435d00:	cbz	x0, 435d4c <feof@plt+0x3337c>
  435d04:	mov	x24, x0
  435d08:	mov	x0, x21
  435d0c:	mov	x1, x26
  435d10:	mov	x2, x25
  435d14:	mov	x3, x24
  435d18:	mov	x4, x20
  435d1c:	mov	x5, x19
  435d20:	mov	x6, x23
  435d24:	mov	x7, x22
  435d28:	bl	435d64 <feof@plt+0x33394>
  435d2c:	mov	w22, w0
  435d30:	mov	w2, #0x13b4                	// #5044
  435d34:	mov	x0, x21
  435d38:	mov	x1, x24
  435d3c:	mov	x3, x20
  435d40:	mov	x4, x19
  435d44:	bl	435614 <feof@plt+0x32c44>
  435d48:	mov	w0, w22
  435d4c:	ldp	x20, x19, [sp, #64]
  435d50:	ldp	x22, x21, [sp, #48]
  435d54:	ldp	x24, x23, [sp, #32]
  435d58:	ldp	x26, x25, [sp, #16]
  435d5c:	ldp	x29, x30, [sp], #80
  435d60:	ret
  435d64:	stp	x29, x30, [sp, #-80]!
  435d68:	str	x25, [sp, #16]
  435d6c:	stp	x24, x23, [sp, #32]
  435d70:	stp	x22, x21, [sp, #48]
  435d74:	stp	x20, x19, [sp, #64]
  435d78:	mov	x29, sp
  435d7c:	subs	x23, x2, #0xc
  435d80:	str	xzr, [x6]
  435d84:	str	xzr, [x7]
  435d88:	b.cc	435e34 <feof@plt+0x33464>  // b.lo, b.ul, b.last
  435d8c:	ldr	w8, [x1]
  435d90:	mov	w9, #0x4c5a                	// #19546
  435d94:	movk	w9, #0x4249, lsl #16
  435d98:	mov	x22, x1
  435d9c:	cmp	w8, w9
  435da0:	b.ne	435e34 <feof@plt+0x33464>  // b.any
  435da4:	ldrb	w8, [x22, #5]
  435da8:	ldrb	w9, [x22, #4]
  435dac:	ldrb	w10, [x22, #6]
  435db0:	ldrb	w11, [x22, #7]
  435db4:	lsl	w8, w8, #8
  435db8:	bfi	w8, w9, #16, #8
  435dbc:	ldrb	w9, [x22, #8]
  435dc0:	orr	w8, w8, w10
  435dc4:	ldrb	w10, [x22, #9]
  435dc8:	lsl	x8, x8, #16
  435dcc:	bfi	x8, x11, #8, #8
  435dd0:	ldrb	w11, [x22, #10]
  435dd4:	ldrb	w24, [x22, #11]
  435dd8:	orr	x8, x8, x9
  435ddc:	lsl	x9, x10, #8
  435de0:	bfi	x9, x8, #16, #48
  435de4:	orr	x8, x9, x11
  435de8:	bfi	x24, x8, #8, #56
  435dec:	mov	x21, x3
  435df0:	mov	x1, x24
  435df4:	mov	x2, x4
  435df8:	mov	x3, x5
  435dfc:	mov	x19, x7
  435e00:	mov	x20, x6
  435e04:	bl	435450 <feof@plt+0x32a80>
  435e08:	cbz	x0, 435e38 <feof@plt+0x33468>
  435e0c:	mov	x25, x0
  435e10:	add	x0, x22, #0xc
  435e14:	mov	x1, x23
  435e18:	mov	x2, x21
  435e1c:	mov	x3, x25
  435e20:	mov	x4, x24
  435e24:	bl	437998 <feof@plt+0x34fc8>
  435e28:	cbz	w0, 435e34 <feof@plt+0x33464>
  435e2c:	str	x25, [x20]
  435e30:	str	x24, [x19]
  435e34:	mov	w0, #0x1                   	// #1
  435e38:	ldp	x20, x19, [sp, #64]
  435e3c:	ldp	x22, x21, [sp, #48]
  435e40:	ldp	x24, x23, [sp, #32]
  435e44:	ldr	x25, [sp, #16]
  435e48:	ldp	x29, x30, [sp], #80
  435e4c:	ret
  435e50:	sub	sp, sp, #0xe0
  435e54:	stp	x29, x30, [sp, #128]
  435e58:	stp	x28, x27, [sp, #144]
  435e5c:	stp	x26, x25, [sp, #160]
  435e60:	stp	x24, x23, [sp, #176]
  435e64:	stp	x22, x21, [sp, #192]
  435e68:	stp	x20, x19, [sp, #208]
  435e6c:	add	x29, sp, #0x80
  435e70:	mov	x23, x4
  435e74:	mov	x24, x3
  435e78:	adrp	x25, 435000 <feof@plt+0x32630>
  435e7c:	mov	x19, x5
  435e80:	add	x25, x25, #0xfcc
  435e84:	mov	w8, #0x1                   	// #1
  435e88:	sub	x26, x29, #0x8
  435e8c:	sub	x6, x29, #0x10
  435e90:	sub	x7, x29, #0x4
  435e94:	mov	x3, xzr
  435e98:	mov	x4, x24
  435e9c:	mov	x5, x23
  435ea0:	mov	w21, w2
  435ea4:	mov	x22, x1
  435ea8:	mov	x20, x0
  435eac:	stur	x25, [x29, #-16]
  435eb0:	str	wzr, [sp, #40]
  435eb4:	str	xzr, [sp, #32]
  435eb8:	str	wzr, [sp, #24]
  435ebc:	sub	x27, x29, #0x10
  435ec0:	str	w8, [sp, #16]
  435ec4:	stp	x26, xzr, [sp]
  435ec8:	sub	x28, x29, #0x4
  435ecc:	bl	435ff4 <feof@plt+0x33624>
  435ed0:	cbz	w0, 435fac <feof@plt+0x335dc>
  435ed4:	cmp	w0, #0x0
  435ed8:	adrp	x0, 437000 <feof@plt+0x34630>
  435edc:	csinv	w8, w21, wzr, lt  // lt = tstop
  435ee0:	add	x0, x0, #0x788
  435ee4:	add	x1, sp, #0x30
  435ee8:	stp	x20, x24, [sp, #48]
  435eec:	stp	x23, x27, [sp, #64]
  435ef0:	stp	x28, x26, [sp, #80]
  435ef4:	str	x22, [sp, #96]
  435ef8:	str	w8, [sp, #104]
  435efc:	bl	402630 <dl_iterate_phdr@plt>
  435f00:	ldr	w10, [x20, #8]
  435f04:	ldur	w9, [x29, #-4]
  435f08:	add	x8, x20, #0x28
  435f0c:	cbz	w10, 435f24 <feof@plt+0x33554>
  435f10:	cbz	w9, 435f38 <feof@plt+0x33568>
  435f14:	adrp	x9, 437000 <feof@plt+0x34630>
  435f18:	add	x9, x9, #0x878
  435f1c:	stlr	x9, [x8]
  435f20:	b	435f70 <feof@plt+0x335a0>
  435f24:	cbz	w9, 435f54 <feof@plt+0x33584>
  435f28:	adrp	x9, 437000 <feof@plt+0x34630>
  435f2c:	add	x9, x9, #0x878
  435f30:	str	x9, [x8]
  435f34:	b	435f70 <feof@plt+0x335a0>
  435f38:	adrp	x9, 437000 <feof@plt+0x34630>
  435f3c:	add	x9, x9, #0x984
  435f40:	ldaxr	x10, [x8]
  435f44:	cbnz	x10, 435f6c <feof@plt+0x3359c>
  435f48:	stlxr	w10, x9, [x8]
  435f4c:	cbnz	w10, 435f40 <feof@plt+0x33570>
  435f50:	b	435f70 <feof@plt+0x335a0>
  435f54:	ldr	x9, [x8]
  435f58:	cbnz	x9, 435f70 <feof@plt+0x335a0>
  435f5c:	adrp	x9, 437000 <feof@plt+0x34630>
  435f60:	add	x9, x9, #0x984
  435f64:	str	x9, [x8]
  435f68:	b	435f70 <feof@plt+0x335a0>
  435f6c:	clrex
  435f70:	ldr	w8, [x20, #8]
  435f74:	cbz	w8, 435f8c <feof@plt+0x335bc>
  435f78:	add	x8, x20, #0x18
  435f7c:	ldar	x8, [x8]
  435f80:	str	x8, [x19]
  435f84:	cbnz	x8, 435f98 <feof@plt+0x335c8>
  435f88:	b	435fa0 <feof@plt+0x335d0>
  435f8c:	ldr	x8, [x20, #24]
  435f90:	str	x8, [x19]
  435f94:	cbz	x8, 435fa0 <feof@plt+0x335d0>
  435f98:	cmp	x8, x25
  435f9c:	b.ne	435fa8 <feof@plt+0x335d8>  // b.any
  435fa0:	ldur	x8, [x29, #-16]
  435fa4:	str	x8, [x19]
  435fa8:	mov	w0, #0x1                   	// #1
  435fac:	ldp	x20, x19, [sp, #208]
  435fb0:	ldp	x22, x21, [sp, #192]
  435fb4:	ldp	x24, x23, [sp, #176]
  435fb8:	ldp	x26, x25, [sp, #160]
  435fbc:	ldp	x28, x27, [sp, #144]
  435fc0:	ldp	x29, x30, [sp, #128]
  435fc4:	add	sp, sp, #0xe0
  435fc8:	ret
  435fcc:	stp	x29, x30, [sp, #-16]!
  435fd0:	mov	x29, sp
  435fd4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  435fd8:	mov	x0, x4
  435fdc:	add	x1, x1, #0x819
  435fe0:	mov	w2, #0xffffffff            	// #-1
  435fe4:	blr	x3
  435fe8:	mov	w0, wzr
  435fec:	ldp	x29, x30, [sp], #16
  435ff0:	ret
  435ff4:	stp	x29, x30, [sp, #-96]!
  435ff8:	stp	x28, x27, [sp, #16]
  435ffc:	stp	x26, x25, [sp, #32]
  436000:	stp	x24, x23, [sp, #48]
  436004:	stp	x22, x21, [sp, #64]
  436008:	stp	x20, x19, [sp, #80]
  43600c:	mov	x29, sp
  436010:	sub	sp, sp, #0x3c0
  436014:	ldr	w28, [x29, #120]
  436018:	ldr	x21, [x29, #96]
  43601c:	mov	x26, x7
  436020:	mov	x24, x6
  436024:	mov	x25, x5
  436028:	mov	x22, x4
  43602c:	mov	x23, x3
  436030:	mov	w20, w2
  436034:	mov	x27, x1
  436038:	mov	x19, x0
  43603c:	cbnz	w28, 436048 <feof@plt+0x33678>
  436040:	str	wzr, [x26]
  436044:	str	wzr, [x21]
  436048:	sub	x6, x29, #0x28
  43604c:	mov	w3, #0x40                  	// #64
  436050:	mov	x0, x19
  436054:	mov	w1, w20
  436058:	mov	x2, xzr
  43605c:	mov	x4, x22
  436060:	mov	x5, x25
  436064:	bl	438eec <feof@plt+0x3651c>
  436068:	cbz	w0, 436190 <feof@plt+0x337c0>
  43606c:	ldur	x8, [x29, #-40]
  436070:	stp	x27, x24, [sp, #232]
  436074:	stp	x26, x23, [sp, #248]
  436078:	str	w28, [sp, #280]
  43607c:	ldrb	w9, [x8, #5]
  436080:	str	x21, [sp, #224]
  436084:	str	w20, [sp, #324]
  436088:	ldrb	w24, [x8]
  43608c:	str	w9, [sp, #300]
  436090:	ldrh	w9, [x8, #18]
  436094:	ldrb	w23, [x8, #1]
  436098:	mov	x2, x22
  43609c:	ldrb	w22, [x8, #2]
  4360a0:	str	w9, [sp, #264]
  4360a4:	ldr	w9, [x8, #48]
  4360a8:	ldrb	w20, [x8, #3]
  4360ac:	mov	x0, x19
  4360b0:	ldrb	w21, [x8, #4]
  4360b4:	ldrb	w19, [x8, #6]
  4360b8:	mov	x3, x25
  4360bc:	ldrh	w25, [x8, #16]
  4360c0:	ldr	x27, [x8, #40]
  4360c4:	ldrh	w26, [x8, #60]
  4360c8:	ldrh	w28, [x8, #62]
  4360cc:	sub	x1, x29, #0x28
  4360d0:	str	w9, [sp, #272]
  4360d4:	str	x0, [sp, #288]
  4360d8:	stp	x3, x2, [sp, #304]
  4360dc:	bl	438fac <feof@plt+0x365dc>
  4360e0:	cmp	w24, #0x7f
  4360e4:	b.ne	436140 <feof@plt+0x33770>  // b.any
  4360e8:	cmp	w23, #0x45
  4360ec:	b.ne	436140 <feof@plt+0x33770>  // b.any
  4360f0:	cmp	w22, #0x4c
  4360f4:	b.ne	436140 <feof@plt+0x33770>  // b.any
  4360f8:	cmp	w20, #0x46
  4360fc:	b.ne	436140 <feof@plt+0x33770>  // b.any
  436100:	cmp	w19, #0x1
  436104:	b.ne	43614c <feof@plt+0x3377c>  // b.any
  436108:	ldr	x22, [sp, #312]
  43610c:	ldr	w20, [sp, #324]
  436110:	cmp	w21, #0x2
  436114:	b.ne	43616c <feof@plt+0x3379c>  // b.any
  436118:	ldr	w8, [sp, #300]
  43611c:	sub	w8, w8, #0x1
  436120:	cmp	w8, #0x2
  436124:	b.cs	436178 <feof@plt+0x337a8>  // b.hs, b.nlast
  436128:	ldr	w8, [x29, #112]
  43612c:	cbz	w8, 4361d0 <feof@plt+0x33800>
  436130:	cmp	w25, #0x3
  436134:	b.ne	4361d0 <feof@plt+0x33800>  // b.any
  436138:	mov	w25, #0xffffffff            	// #-1
  43613c:	b	4361ac <feof@plt+0x337dc>
  436140:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436144:	add	x1, x1, #0x839
  436148:	b	436154 <feof@plt+0x33784>
  43614c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436150:	add	x1, x1, #0x854
  436154:	ldp	x25, x22, [sp, #304]
  436158:	mov	w2, wzr
  43615c:	mov	x0, x25
  436160:	blr	x22
  436164:	ldr	w20, [sp, #324]
  436168:	b	436190 <feof@plt+0x337c0>
  43616c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436170:	add	x1, x1, #0x880
  436174:	b	436180 <feof@plt+0x337b0>
  436178:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43617c:	add	x1, x1, #0x8a8
  436180:	ldr	x25, [sp, #304]
  436184:	mov	w2, wzr
  436188:	mov	x0, x25
  43618c:	blr	x22
  436190:	cmn	w20, #0x1
  436194:	b.eq	4361a8 <feof@plt+0x337d8>  // b.none
  436198:	mov	w0, w20
  43619c:	mov	x1, x22
  4361a0:	mov	x2, x25
  4361a4:	bl	435c70 <feof@plt+0x332a0>
  4361a8:	mov	w25, wzr
  4361ac:	mov	w0, w25
  4361b0:	add	sp, sp, #0x3c0
  4361b4:	ldp	x20, x19, [sp, #80]
  4361b8:	ldp	x22, x21, [sp, #64]
  4361bc:	ldp	x24, x23, [sp, #48]
  4361c0:	ldp	x26, x25, [sp, #32]
  4361c4:	ldp	x28, x27, [sp, #16]
  4361c8:	ldp	x29, x30, [sp], #96
  4361cc:	ret
  4361d0:	cmp	w26, #0x0
  4361d4:	mov	w9, #0xffff                	// #65535
  4361d8:	cset	w8, eq  // eq = none
  4361dc:	cmp	w28, w9
  4361e0:	cset	w9, eq  // eq = none
  4361e4:	cbz	x27, 436264 <feof@plt+0x33894>
  4361e8:	ldr	x25, [sp, #304]
  4361ec:	ldr	x21, [sp, #288]
  4361f0:	orr	w8, w8, w9
  4361f4:	cbz	w8, 43626c <feof@plt+0x3389c>
  4361f8:	add	x6, sp, #0x220
  4361fc:	mov	w3, #0x8                   	// #8
  436200:	mov	x0, x21
  436204:	mov	w1, w20
  436208:	mov	x2, x27
  43620c:	mov	x4, x22
  436210:	mov	x5, x25
  436214:	bl	438eec <feof@plt+0x3651c>
  436218:	cbz	w0, 436190 <feof@plt+0x337c0>
  43621c:	ldr	x8, [sp, #544]
  436220:	cbnz	w26, 436228 <feof@plt+0x33858>
  436224:	ldr	w26, [x8, #32]
  436228:	mov	w9, #0xffff                	// #65535
  43622c:	cmp	w28, w9
  436230:	b.ne	43624c <feof@plt+0x3387c>  // b.any
  436234:	ldr	w8, [x8, #40]
  436238:	lsr	w9, w8, #16
  43623c:	cmp	w9, #0x0
  436240:	sub	w10, w8, #0x100
  436244:	ccmp	w8, w26, #0x0, ne  // ne = any
  436248:	csel	w28, w10, w8, cs  // cs = hs, nlast
  43624c:	add	x1, sp, #0x220
  436250:	mov	x0, x21
  436254:	mov	x2, x22
  436258:	mov	x3, x25
  43625c:	bl	438fac <feof@plt+0x365dc>
  436260:	b	43626c <feof@plt+0x3389c>
  436264:	ldr	x25, [sp, #304]
  436268:	ldr	x21, [sp, #288]
  43626c:	sub	w8, w26, #0x1
  436270:	add	x2, x27, #0x40
  436274:	lsl	x3, x8, #6
  436278:	sub	x6, x29, #0x40
  43627c:	mov	x0, x21
  436280:	mov	w1, w20
  436284:	mov	x4, x22
  436288:	mov	x5, x25
  43628c:	bl	438eec <feof@plt+0x3651c>
  436290:	cbz	w0, 436190 <feof@plt+0x337c0>
  436294:	ldur	x9, [x29, #-64]
  436298:	sub	w8, w28, #0x1
  43629c:	sub	x6, x29, #0x58
  4362a0:	mov	x0, x21
  4362a4:	str	x9, [sp, #176]
  4362a8:	add	x8, x9, x8, lsl #6
  4362ac:	ldp	x2, x3, [x8, #24]
  4362b0:	mov	w1, w20
  4362b4:	mov	x4, x22
  4362b8:	mov	x5, x25
  4362bc:	str	x3, [sp, #208]
  4362c0:	bl	438eec <feof@plt+0x3651c>
  4362c4:	cbz	w0, 4363a8 <feof@plt+0x339d8>
  4362c8:	ldur	x9, [x29, #-88]
  4362cc:	add	x8, sp, #0x220
  4362d0:	movi	v0.2d, #0x0
  4362d4:	cmp	w26, #0x2
  4362d8:	str	x9, [sp, #200]
  4362dc:	stp	q0, q0, [x8]
  4362e0:	stp	q0, q0, [x8, #32]
  4362e4:	stp	q0, q0, [x8, #64]
  4362e8:	stp	q0, q0, [x8, #96]
  4362ec:	stp	q0, q0, [x8, #128]
  4362f0:	stp	q0, q0, [x8, #160]
  4362f4:	stp	q0, q0, [x8, #192]
  4362f8:	stp	q0, q0, [x8, #224]
  4362fc:	stp	q0, q0, [x8, #256]
  436300:	stp	q0, q0, [x8, #288]
  436304:	str	w26, [sp, #104]
  436308:	b.cc	436818 <feof@plt+0x33e48>  // b.lo, b.ul, b.last
  43630c:	ldr	w8, [sp, #280]
  436310:	ldr	x11, [x29, #128]
  436314:	ldr	w12, [sp, #264]
  436318:	ldr	w13, [x29, #136]
  43631c:	cmp	w8, #0x0
  436320:	cset	w10, ne  // ne = any
  436324:	cmp	x11, #0x0
  436328:	str	x11, [sp, #96]
  43632c:	cset	w11, eq  // eq = none
  436330:	and	w10, w10, w11
  436334:	ldr	w11, [sp, #272]
  436338:	add	x8, sp, #0x160
  43633c:	cmp	w12, #0x15
  436340:	ldr	x19, [sp, #176]
  436344:	mov	w9, w26
  436348:	str	w10, [sp, #196]
  43634c:	cset	w10, eq  // eq = none
  436350:	tst	w11, #0x2
  436354:	add	x8, x8, #0x18
  436358:	cset	w11, eq  // eq = none
  43635c:	str	x8, [sp, #80]
  436360:	sub	x8, x9, #0x1
  436364:	mov	x27, xzr
  436368:	mov	w24, wzr
  43636c:	mov	w28, wzr
  436370:	and	w10, w10, w11
  436374:	str	x8, [sp, #184]
  436378:	mov	w8, w13
  43637c:	str	xzr, [sp, #160]
  436380:	str	wzr, [sp, #220]
  436384:	stp	xzr, xzr, [sp, #120]
  436388:	str	wzr, [sp, #168]
  43638c:	str	xzr, [sp, #112]
  436390:	str	wzr, [sp, #108]
  436394:	stp	xzr, xzr, [sp, #136]
  436398:	str	wzr, [sp, #156]
  43639c:	str	w10, [sp, #192]
  4363a0:	str	x8, [sp, #88]
  4363a4:	b	4363e8 <feof@plt+0x33a18>
  4363a8:	sub	x1, x29, #0x40
  4363ac:	b	436ba4 <feof@plt+0x341d4>
  4363b0:	ldr	x8, [x20, #16]
  4363b4:	ldr	x9, [sp, #376]
  4363b8:	ldr	w20, [sp, #324]
  4363bc:	stp	x8, x9, [sp, #352]
  4363c0:	ldr	x8, [x19]
  4363c4:	ldr	x19, [sp, #176]
  4363c8:	str	x8, [sp, #368]
  4363cc:	add	x8, sp, #0x160
  4363d0:	str	x8, [sp, #136]
  4363d4:	mov	w13, w21
  4363d8:	ldr	x8, [sp, #184]
  4363dc:	add	x27, x27, #0x1
  4363e0:	cmp	x8, x27
  4363e4:	b.eq	436974 <feof@plt+0x33fa4>  // b.none
  4363e8:	and	x8, x27, #0xffffffff
  4363ec:	add	x23, x19, x8, lsl #6
  4363f0:	ldr	w9, [x23, #4]!
  4363f4:	mov	x26, x8
  4363f8:	add	x8, x27, #0x1
  4363fc:	cmp	w9, #0xb
  436400:	b.eq	436414 <feof@plt+0x33a44>  // b.none
  436404:	cmp	w9, #0x2
  436408:	b.ne	436418 <feof@plt+0x33a48>  // b.any
  43640c:	str	w8, [sp, #164]
  436410:	b	436418 <feof@plt+0x33a48>
  436414:	str	w8, [sp, #160]
  436418:	lsl	x8, x26, #6
  43641c:	ldr	w8, [x19, x8]
  436420:	ldr	x9, [sp, #208]
  436424:	cmp	x9, x8
  436428:	b.ls	43694c <feof@plt+0x33f7c>  // b.plast
  43642c:	ldr	x9, [sp, #200]
  436430:	str	x23, [sp, #264]
  436434:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436438:	add	x1, x1, #0x954
  43643c:	add	x23, x9, x8
  436440:	mov	x0, x23
  436444:	mov	w21, w13
  436448:	bl	402820 <strcmp@plt>
  43644c:	str	x23, [sp, #272]
  436450:	cbz	w0, 436510 <feof@plt+0x33b40>
  436454:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436458:	mov	x0, x23
  43645c:	add	x1, x1, #0x960
  436460:	bl	402820 <strcmp@plt>
  436464:	cbz	w0, 436518 <feof@plt+0x33b48>
  436468:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43646c:	mov	x0, x23
  436470:	add	x1, x1, #0x96c
  436474:	bl	402820 <strcmp@plt>
  436478:	cbz	w0, 436520 <feof@plt+0x33b50>
  43647c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436480:	mov	x0, x23
  436484:	add	x1, x1, #0x97a
  436488:	bl	402820 <strcmp@plt>
  43648c:	cbz	w0, 436528 <feof@plt+0x33b58>
  436490:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436494:	mov	x0, x23
  436498:	add	x1, x1, #0x988
  43649c:	bl	402820 <strcmp@plt>
  4364a0:	cbz	w0, 436530 <feof@plt+0x33b60>
  4364a4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4364a8:	mov	x0, x23
  4364ac:	add	x1, x1, #0x993
  4364b0:	bl	402820 <strcmp@plt>
  4364b4:	cbz	w0, 436538 <feof@plt+0x33b68>
  4364b8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4364bc:	mov	x0, x23
  4364c0:	add	x1, x1, #0x9a0
  4364c4:	bl	402820 <strcmp@plt>
  4364c8:	cbz	w0, 436540 <feof@plt+0x33b70>
  4364cc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4364d0:	mov	x0, x23
  4364d4:	add	x1, x1, #0x9ad
  4364d8:	bl	402820 <strcmp@plt>
  4364dc:	cbz	w0, 436548 <feof@plt+0x33b78>
  4364e0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4364e4:	mov	x0, x23
  4364e8:	add	x1, x1, #0x9bc
  4364ec:	bl	402820 <strcmp@plt>
  4364f0:	cbz	w0, 436550 <feof@plt+0x33b80>
  4364f4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4364f8:	mov	x0, x23
  4364fc:	add	x1, x1, #0x9cb
  436500:	bl	402820 <strcmp@plt>
  436504:	cbnz	w0, 436574 <feof@plt+0x33ba4>
  436508:	mov	w8, #0x9                   	// #9
  43650c:	b	436554 <feof@plt+0x33b84>
  436510:	mov	x8, xzr
  436514:	b	436554 <feof@plt+0x33b84>
  436518:	mov	w8, #0x1                   	// #1
  43651c:	b	436554 <feof@plt+0x33b84>
  436520:	mov	w8, #0x2                   	// #2
  436524:	b	436554 <feof@plt+0x33b84>
  436528:	mov	w8, #0x3                   	// #3
  43652c:	b	436554 <feof@plt+0x33b84>
  436530:	mov	w8, #0x4                   	// #4
  436534:	b	436554 <feof@plt+0x33b84>
  436538:	mov	w8, #0x5                   	// #5
  43653c:	b	436554 <feof@plt+0x33b84>
  436540:	mov	w8, #0x6                   	// #6
  436544:	b	436554 <feof@plt+0x33b84>
  436548:	mov	w8, #0x7                   	// #7
  43654c:	b	436554 <feof@plt+0x33b84>
  436550:	mov	w8, #0x8                   	// #8
  436554:	add	x9, x19, x26, lsl #6
  436558:	ldur	q0, [x9, #24]
  43655c:	add	x10, sp, #0x220
  436560:	add	x8, x10, x8, lsl #5
  436564:	str	q0, [x8]
  436568:	ldr	w9, [x9, #8]
  43656c:	ubfx	w9, w9, #11, #1
  436570:	str	w9, [x8, #24]
  436574:	ldr	w8, [sp, #220]
  436578:	ldr	w9, [sp, #196]
  43657c:	cmp	w8, #0x0
  436580:	cset	w8, ne  // ne = any
  436584:	orr	w8, w9, w8
  436588:	tbnz	w8, #0, 4365a4 <feof@plt+0x33bd4>
  43658c:	ldr	x0, [sp, #272]
  436590:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436594:	add	x1, x1, #0x8ed
  436598:	bl	402820 <strcmp@plt>
  43659c:	cbz	w0, 4365d0 <feof@plt+0x33c00>
  4365a0:	str	wzr, [sp, #220]
  4365a4:	mov	w13, w21
  4365a8:	ldr	w8, [sp, #280]
  4365ac:	orr	w8, w24, w8
  4365b0:	cbnz	w8, 436718 <feof@plt+0x33d48>
  4365b4:	ldr	x0, [sp, #272]
  4365b8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4365bc:	add	x1, x1, #0x904
  4365c0:	bl	402820 <strcmp@plt>
  4365c4:	cbz	w0, 43669c <feof@plt+0x33ccc>
  4365c8:	mov	w24, wzr
  4365cc:	b	436714 <feof@plt+0x33d44>
  4365d0:	str	w24, [sp, #172]
  4365d4:	add	x24, x19, x26, lsl #6
  4365d8:	ldr	x3, [x24, #32]!
  4365dc:	ldr	x0, [sp, #288]
  4365e0:	add	x6, sp, #0x1d8
  4365e4:	mov	w1, w20
  4365e8:	ldur	x2, [x24, #-8]
  4365ec:	mov	x4, x22
  4365f0:	mov	x5, x25
  4365f4:	bl	438eec <feof@plt+0x3651c>
  4365f8:	cbz	w0, 437304 <feof@plt+0x34934>
  4365fc:	ldr	x19, [sp, #472]
  436600:	ldr	w8, [x19, #8]
  436604:	cmp	w8, #0x3
  436608:	b.ne	43665c <feof@plt+0x33c8c>  // b.any
  43660c:	ldr	w8, [x19]
  436610:	cmp	w8, #0x4
  436614:	b.ne	43665c <feof@plt+0x33c8c>  // b.any
  436618:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43661c:	add	x0, x19, #0xc
  436620:	mov	w2, #0x4                   	// #4
  436624:	add	x1, x1, #0x900
  436628:	bl	4026b0 <strncmp@plt>
  43662c:	cbnz	w0, 43665c <feof@plt+0x33c8c>
  436630:	ldr	w8, [x19, #4]
  436634:	ldr	x9, [x24]
  436638:	add	x10, x19, #0x10
  43663c:	add	w11, w8, #0x10
  436640:	cmp	x9, x11
  436644:	ldr	w9, [sp, #168]
  436648:	csel	w9, w9, w8, hi  // hi = pmore
  43664c:	ldr	x8, [sp, #128]
  436650:	str	w9, [sp, #168]
  436654:	csel	x8, x8, x10, hi  // hi = pmore
  436658:	str	x8, [sp, #128]
  43665c:	ldr	w24, [sp, #172]
  436660:	ldr	x19, [sp, #176]
  436664:	mov	w13, w21
  436668:	cbz	w21, 4366f4 <feof@plt+0x33d24>
  43666c:	ldr	w8, [sp, #168]
  436670:	cmp	w8, w13
  436674:	b.ne	4374c0 <feof@plt+0x34af0>  // b.any
  436678:	ldr	x0, [sp, #128]
  43667c:	ldp	x2, x1, [sp, #88]
  436680:	bl	402980 <bcmp@plt>
  436684:	mov	w8, #0x1                   	// #1
  436688:	str	w8, [sp, #220]
  43668c:	cbnz	w0, 4374d4 <feof@plt+0x34b04>
  436690:	mov	w13, w21
  436694:	str	w21, [sp, #168]
  436698:	b	4365a8 <feof@plt+0x33bd8>
  43669c:	add	x19, x19, x26, lsl #6
  4366a0:	ldr	x3, [x19, #32]!
  4366a4:	ldr	x0, [sp, #288]
  4366a8:	add	x6, sp, #0x1c0
  4366ac:	mov	w1, w20
  4366b0:	ldur	x2, [x19, #-8]
  4366b4:	mov	x4, x22
  4366b8:	mov	x5, x25
  4366bc:	bl	438eec <feof@plt+0x3651c>
  4366c0:	cbz	w0, 437348 <feof@plt+0x34978>
  4366c4:	ldr	x23, [sp, #448]
  4366c8:	ldr	x19, [x19]
  4366cc:	mov	x0, x23
  4366d0:	mov	x1, x19
  4366d4:	bl	402930 <strnlen@plt>
  4366d8:	add	x8, x0, #0x3
  4366dc:	and	x8, x8, #0xfffffffffffffffc
  4366e0:	add	x9, x8, #0x4
  4366e4:	cmp	x9, x19
  4366e8:	b.ls	436700 <feof@plt+0x33d30>  // b.plast
  4366ec:	mov	w24, #0x1                   	// #1
  4366f0:	b	436710 <feof@plt+0x33d40>
  4366f4:	mov	w8, #0x1                   	// #1
  4366f8:	str	w8, [sp, #220]
  4366fc:	b	4365a8 <feof@plt+0x33bd8>
  436700:	ldr	w8, [x23, x8]
  436704:	mov	w24, #0x1                   	// #1
  436708:	str	x23, [sp, #112]
  43670c:	str	w8, [sp, #108]
  436710:	ldr	x19, [sp, #176]
  436714:	mov	w13, w21
  436718:	cbnz	w28, 4367ac <feof@plt+0x33ddc>
  43671c:	ldr	x0, [sp, #272]
  436720:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436724:	add	x1, x1, #0x913
  436728:	bl	402820 <strcmp@plt>
  43672c:	cbz	w0, 436738 <feof@plt+0x33d68>
  436730:	mov	w28, wzr
  436734:	b	4367a8 <feof@plt+0x33dd8>
  436738:	add	x19, x19, x26, lsl #6
  43673c:	ldr	x3, [x19, #32]!
  436740:	ldr	x0, [sp, #288]
  436744:	add	x6, sp, #0x1a8
  436748:	mov	w1, w20
  43674c:	ldur	x2, [x19, #-8]
  436750:	mov	x4, x22
  436754:	mov	x5, x25
  436758:	bl	438eec <feof@plt+0x3651c>
  43675c:	cbz	w0, 437354 <feof@plt+0x34984>
  436760:	ldr	x28, [sp, #424]
  436764:	ldr	x19, [x19]
  436768:	mov	x0, x28
  43676c:	mov	x1, x19
  436770:	bl	402930 <strnlen@plt>
  436774:	ldr	x10, [sp, #144]
  436778:	add	x8, x0, #0x1
  43677c:	cmp	x0, x19
  436780:	add	x9, x28, x8
  436784:	csel	x10, x9, x10, cc  // cc = lo, ul, last
  436788:	ldr	w9, [sp, #156]
  43678c:	sub	w8, w19, w8
  436790:	ldr	x19, [sp, #176]
  436794:	str	x28, [sp, #120]
  436798:	csel	w9, w8, w9, cc  // cc = lo, ul, last
  43679c:	mov	w28, #0x1                   	// #1
  4367a0:	str	x10, [sp, #144]
  4367a4:	str	w9, [sp, #156]
  4367a8:	mov	w13, w21
  4367ac:	ldr	w8, [sp, #192]
  4367b0:	cbz	w8, 4363d8 <feof@plt+0x33a08>
  4367b4:	ldr	x8, [sp, #264]
  4367b8:	ldr	w8, [x8]
  4367bc:	cmp	w8, #0x1
  4367c0:	b.ne	4363d8 <feof@plt+0x33a08>  // b.any
  4367c4:	ldr	x0, [sp, #272]
  4367c8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  4367cc:	add	x1, x1, #0x925
  4367d0:	bl	402820 <strcmp@plt>
  4367d4:	cbnz	w0, 4363d4 <feof@plt+0x33a04>
  4367d8:	mov	w1, w20
  4367dc:	add	x20, x19, x26, lsl #6
  4367e0:	mov	x19, x20
  4367e4:	ldr	x3, [x19, #32]!
  4367e8:	ldr	x0, [sp, #288]
  4367ec:	ldr	x6, [sp, #80]
  4367f0:	mov	x4, x22
  4367f4:	ldur	x2, [x19, #-8]
  4367f8:	mov	x5, x25
  4367fc:	bl	438eec <feof@plt+0x3651c>
  436800:	cbnz	w0, 4363b0 <feof@plt+0x339e0>
  436804:	str	w24, [sp, #172]
  436808:	ldr	x24, [sp, #136]
  43680c:	ldr	w20, [sp, #324]
  436810:	ldr	x21, [sp, #288]
  436814:	b	436ad0 <feof@plt+0x34100>
  436818:	ldr	x19, [sp, #176]
  43681c:	mov	w23, wzr
  436820:	str	wzr, [sp, #220]
  436824:	stp	xzr, xzr, [sp, #120]
  436828:	str	wzr, [sp, #168]
  43682c:	mov	w24, wzr
  436830:	mov	x27, xzr
  436834:	str	wzr, [sp, #108]
  436838:	mov	w28, wzr
  43683c:	stp	xzr, xzr, [sp, #136]
  436840:	str	wzr, [sp, #156]
  436844:	mov	w10, w23
  436848:	ldr	w9, [sp, #280]
  43684c:	ldr	x21, [sp, #288]
  436850:	mov	w8, wzr
  436854:	cbnz	w9, 436984 <feof@plt+0x33fb4>
  436858:	ldr	x23, [sp, #136]
  43685c:	cbz	w10, 436988 <feof@plt+0x33fb8>
  436860:	sub	w8, w10, #0x1
  436864:	str	w24, [sp, #172]
  436868:	mov	x24, x23
  43686c:	add	x23, x19, x8, lsl #6
  436870:	ldr	w19, [x23, #40]
  436874:	ldr	w8, [sp, #104]
  436878:	cmp	w19, w8
  43687c:	b.cs	436abc <feof@plt+0x340ec>  // b.hs, b.nlast
  436880:	ldr	x3, [x23, #32]!
  436884:	add	x6, sp, #0x208
  436888:	mov	x0, x21
  43688c:	mov	w1, w20
  436890:	ldur	x2, [x23, #-8]
  436894:	mov	x4, x22
  436898:	mov	x5, x25
  43689c:	bl	438eec <feof@plt+0x3651c>
  4368a0:	cbz	w0, 436ad0 <feof@plt+0x34100>
  4368a4:	ldr	x9, [sp, #176]
  4368a8:	sub	w8, w19, #0x1
  4368ac:	mov	x19, x21
  4368b0:	add	x6, sp, #0x1f0
  4368b4:	add	x21, x9, x8, lsl #6
  4368b8:	ldr	x3, [x21, #32]!
  4368bc:	mov	x0, x19
  4368c0:	mov	w1, w20
  4368c4:	mov	x4, x22
  4368c8:	ldur	x2, [x21, #-8]
  4368cc:	mov	x5, x25
  4368d0:	bl	438eec <feof@plt+0x3651c>
  4368d4:	cbz	w0, 4372f0 <feof@plt+0x34920>
  4368d8:	mov	w1, #0x18                  	// #24
  4368dc:	mov	x0, x19
  4368e0:	mov	x2, x22
  4368e4:	mov	x3, x25
  4368e8:	bl	435450 <feof@plt+0x32a80>
  4368ec:	cbz	x0, 437364 <feof@plt+0x34994>
  4368f0:	ldr	x8, [x21]
  4368f4:	ldr	x9, [x23]
  4368f8:	ldr	x1, [sp, #520]
  4368fc:	ldr	x19, [sp, #496]
  436900:	str	x8, [sp, #280]
  436904:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  436908:	movk	x8, #0xaaab
  43690c:	umulh	x8, x9, x8
  436910:	mov	x26, x0
  436914:	cmp	x9, #0x18
  436918:	lsr	x23, x8, #4
  43691c:	str	w28, [sp, #272]
  436920:	str	x9, [sp, #264]
  436924:	b.cc	43736c <feof@plt+0x3499c>  // b.lo, b.ul, b.last
  436928:	cmp	x23, #0x1
  43692c:	csinc	x10, x23, xzr, hi  // hi = pmore
  436930:	cmp	x10, #0x2
  436934:	b.cs	437568 <feof@plt+0x34b98>  // b.hs, b.nlast
  436938:	ldr	x21, [sp, #288]
  43693c:	mov	x8, xzr
  436940:	mov	x28, xzr
  436944:	mov	x9, x1
  436948:	b	437614 <feof@plt+0x34c44>
  43694c:	str	w24, [sp, #172]
  436950:	ldr	x24, [sp, #136]
  436954:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436958:	add	x1, x1, #0x8cf
  43695c:	mov	x0, x25
  436960:	mov	w2, wzr
  436964:	blr	x22
  436968:	mov	w19, wzr
  43696c:	ldr	x21, [sp, #288]
  436970:	b	436ad4 <feof@plt+0x34104>
  436974:	ldr	x27, [sp, #112]
  436978:	ldp	w23, w10, [sp, #160]
  43697c:	cbnz	w10, 436848 <feof@plt+0x33e78>
  436980:	b	436844 <feof@plt+0x33e74>
  436984:	ldr	x23, [sp, #136]
  436988:	sub	x1, x29, #0x40
  43698c:	mov	x0, x21
  436990:	mov	x2, x22
  436994:	mov	x3, x25
  436998:	str	w8, [sp, #324]
  43699c:	mov	w19, w28
  4369a0:	bl	438fac <feof@plt+0x365dc>
  4369a4:	sub	x1, x29, #0x58
  4369a8:	mov	x0, x21
  4369ac:	mov	x2, x22
  4369b0:	mov	x3, x25
  4369b4:	bl	438fac <feof@plt+0x365dc>
  4369b8:	ldr	x8, [sp, #128]
  4369bc:	cbz	x8, 436cbc <feof@plt+0x342ec>
  4369c0:	ldr	w26, [sp, #168]
  4369c4:	str	w24, [sp, #172]
  4369c8:	mov	x24, x23
  4369cc:	str	x27, [sp, #112]
  4369d0:	mov	w23, w26
  4369d4:	lsl	x8, x23, #1
  4369d8:	add	x27, x8, #0x21
  4369dc:	mov	x0, x21
  4369e0:	mov	x1, x27
  4369e4:	mov	x2, x22
  4369e8:	mov	x3, x25
  4369ec:	bl	435450 <feof@plt+0x32a80>
  4369f0:	cbz	x0, 436bb8 <feof@plt+0x341e8>
  4369f4:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0xea68>
  4369f8:	add	x8, x8, #0x9f8
  4369fc:	ldur	q0, [x8, #9]
  436a00:	ldr	q1, [x8]
  436a04:	mov	x28, x0
  436a08:	stur	q0, [x0, #9]
  436a0c:	str	q1, [x0]
  436a10:	cbz	w26, 436bc8 <feof@plt+0x341f8>
  436a14:	ldr	x11, [sp, #128]
  436a18:	ldrb	w9, [x11]
  436a1c:	lsr	w8, w9, #4
  436a20:	cmp	w9, #0xa0
  436a24:	orr	w10, w8, #0x30
  436a28:	add	w8, w8, #0x57
  436a2c:	csel	w8, w10, w8, cc  // cc = lo, ul, last
  436a30:	mov	w10, #0x30                  	// #48
  436a34:	bfxil	w10, w9, #0, #4
  436a38:	and	w9, w9, #0xf
  436a3c:	cmp	w9, #0xa
  436a40:	add	w9, w9, #0x57
  436a44:	strb	w8, [x28, #25]
  436a48:	add	x8, x28, #0x1c
  436a4c:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  436a50:	mov	w10, #0x2f                  	// #47
  436a54:	cmp	w26, #0x1
  436a58:	strb	w9, [x28, #26]
  436a5c:	strb	w10, [x28, #27]
  436a60:	b.eq	436bcc <feof@plt+0x341fc>  // b.none
  436a64:	sub	x9, x23, #0x1
  436a68:	add	x10, x11, #0x1
  436a6c:	ldrb	w12, [x10], #1
  436a70:	lsr	w11, w12, #4
  436a74:	cmp	w12, #0xa0
  436a78:	orr	w13, w11, #0x30
  436a7c:	add	w11, w11, #0x57
  436a80:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  436a84:	mov	w13, #0x30                  	// #48
  436a88:	bfxil	w13, w12, #0, #4
  436a8c:	and	w12, w12, #0xf
  436a90:	cmp	w12, #0xa
  436a94:	add	w12, w12, #0x57
  436a98:	strb	w11, [x8]
  436a9c:	add	x11, x8, #0x2
  436aa0:	csel	w12, w13, w12, cc  // cc = lo, ul, last
  436aa4:	subs	x9, x9, #0x1
  436aa8:	strb	w12, [x8, #1]
  436aac:	mov	x8, x11
  436ab0:	b.ne	436a6c <feof@plt+0x3409c>  // b.any
  436ab4:	mov	x8, x11
  436ab8:	b	436bcc <feof@plt+0x341fc>
  436abc:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  436ac0:	add	x1, x1, #0x92a
  436ac4:	mov	x0, x25
  436ac8:	mov	w2, wzr
  436acc:	blr	x22
  436ad0:	mov	w19, wzr
  436ad4:	mov	w23, #0x1                   	// #1
  436ad8:	sub	x1, x29, #0x40
  436adc:	mov	x0, x21
  436ae0:	mov	x2, x22
  436ae4:	mov	x3, x25
  436ae8:	bl	438fac <feof@plt+0x365dc>
  436aec:	sub	x1, x29, #0x58
  436af0:	mov	x0, x21
  436af4:	mov	x2, x22
  436af8:	mov	x3, x25
  436afc:	bl	438fac <feof@plt+0x365dc>
  436b00:	tbnz	w23, #0, 436b18 <feof@plt+0x34148>
  436b04:	add	x1, sp, #0x208
  436b08:	mov	x0, x21
  436b0c:	mov	x2, x22
  436b10:	mov	x3, x25
  436b14:	bl	438fac <feof@plt+0x365dc>
  436b18:	mov	w23, wzr
  436b1c:	cbz	w19, 436b34 <feof@plt+0x34164>
  436b20:	add	x1, sp, #0x1f0
  436b24:	mov	x0, x21
  436b28:	mov	x2, x22
  436b2c:	mov	x3, x25
  436b30:	bl	438fac <feof@plt+0x365dc>
  436b34:	ldr	w8, [sp, #172]
  436b38:	cbz	w8, 436b50 <feof@plt+0x34180>
  436b3c:	add	x1, sp, #0x1c0
  436b40:	mov	x0, x21
  436b44:	mov	x2, x22
  436b48:	mov	x3, x25
  436b4c:	bl	438fac <feof@plt+0x365dc>
  436b50:	cbz	w28, 436b68 <feof@plt+0x34198>
  436b54:	add	x1, sp, #0x1a8
  436b58:	mov	x0, x21
  436b5c:	mov	x2, x22
  436b60:	mov	x3, x25
  436b64:	bl	438fac <feof@plt+0x365dc>
  436b68:	ldr	w8, [sp, #220]
  436b6c:	cbz	w8, 436b84 <feof@plt+0x341b4>
  436b70:	add	x1, sp, #0x1d8
  436b74:	mov	x0, x21
  436b78:	mov	x2, x22
  436b7c:	mov	x3, x25
  436b80:	bl	438fac <feof@plt+0x365dc>
  436b84:	cbz	w23, 436b9c <feof@plt+0x341cc>
  436b88:	add	x1, sp, #0x190
  436b8c:	mov	x0, x21
  436b90:	mov	x2, x22
  436b94:	mov	x3, x25
  436b98:	bl	438fac <feof@plt+0x365dc>
  436b9c:	cbz	x24, 436190 <feof@plt+0x337c0>
  436ba0:	add	x1, x24, #0x18
  436ba4:	mov	x0, x21
  436ba8:	mov	x2, x22
  436bac:	mov	x3, x25
  436bb0:	bl	438fac <feof@plt+0x365dc>
  436bb4:	b	436190 <feof@plt+0x337c0>
  436bb8:	mov	x23, x24
  436bbc:	ldr	w24, [sp, #172]
  436bc0:	ldr	x27, [sp, #112]
  436bc4:	b	436cbc <feof@plt+0x342ec>
  436bc8:	add	x8, x28, #0x19
  436bcc:	mov	w10, #0x642e                	// #25646
  436bd0:	mov	w9, #0x6775                	// #26485
  436bd4:	movk	w10, #0x6265, lsl #16
  436bd8:	add	x3, sp, #0x190
  436bdc:	mov	x0, x28
  436be0:	mov	x1, x22
  436be4:	mov	x2, x25
  436be8:	mov	x23, x24
  436bec:	strh	w9, [x8, #4]
  436bf0:	str	w10, [x8]
  436bf4:	strb	wzr, [x8, #6]
  436bf8:	bl	435bd4 <feof@plt+0x33204>
  436bfc:	mov	w26, w0
  436c00:	mov	x0, x21
  436c04:	mov	x1, x28
  436c08:	mov	x2, x27
  436c0c:	mov	x3, x22
  436c10:	mov	x4, x25
  436c14:	bl	435614 <feof@plt+0x32c44>
  436c18:	ldr	w24, [sp, #172]
  436c1c:	ldr	x27, [sp, #112]
  436c20:	tbnz	w26, #31, 436cbc <feof@plt+0x342ec>
  436c24:	add	x1, sp, #0x1d8
  436c28:	mov	x0, x21
  436c2c:	mov	x2, x22
  436c30:	mov	x3, x25
  436c34:	bl	438fac <feof@plt+0x365dc>
  436c38:	cbz	w24, 436c50 <feof@plt+0x34280>
  436c3c:	add	x1, sp, #0x1c0
  436c40:	mov	x0, x21
  436c44:	mov	x2, x22
  436c48:	mov	x3, x25
  436c4c:	bl	438fac <feof@plt+0x365dc>
  436c50:	cbz	w19, 436c68 <feof@plt+0x34298>
  436c54:	add	x1, sp, #0x1a8
  436c58:	mov	x0, x21
  436c5c:	mov	x2, x22
  436c60:	mov	x3, x25
  436c64:	bl	438fac <feof@plt+0x365dc>
  436c68:	mov	w8, #0x1                   	// #1
  436c6c:	str	w8, [sp, #24]
  436c70:	ldr	x8, [sp, #224]
  436c74:	ldp	x7, x3, [sp, #248]
  436c78:	ldr	x6, [sp, #240]
  436c7c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  436c80:	add	x1, x1, #0xb34
  436c84:	mov	x0, x21
  436c88:	mov	w2, w26
  436c8c:	mov	x4, x22
  436c90:	mov	x5, x25
  436c94:	str	wzr, [sp, #40]
  436c98:	str	xzr, [sp, #32]
  436c9c:	str	wzr, [sp, #16]
  436ca0:	stp	x8, xzr, [sp]
  436ca4:	bl	435ff4 <feof@plt+0x33624>
  436ca8:	mov	x2, x25
  436cac:	mov	w25, w0
  436cb0:	tbz	w0, #31, 436d94 <feof@plt+0x343c4>
  436cb4:	mov	w0, w26
  436cb8:	b	436e4c <feof@plt+0x3447c>
  436cbc:	ldr	w8, [sp, #220]
  436cc0:	cbz	w8, 436cd8 <feof@plt+0x34308>
  436cc4:	add	x1, sp, #0x1d8
  436cc8:	mov	x0, x21
  436ccc:	mov	x2, x22
  436cd0:	mov	x3, x25
  436cd4:	bl	438fac <feof@plt+0x365dc>
  436cd8:	ldr	x26, [sp, #232]
  436cdc:	cbz	x23, 436cf4 <feof@plt+0x34324>
  436ce0:	add	x1, x23, #0x18
  436ce4:	mov	x0, x21
  436ce8:	mov	x2, x22
  436cec:	mov	x3, x25
  436cf0:	bl	438fac <feof@plt+0x365dc>
  436cf4:	cbz	x27, 436d9c <feof@plt+0x343cc>
  436cf8:	ldr	w3, [sp, #108]
  436cfc:	mov	x0, x21
  436d00:	mov	x1, x26
  436d04:	mov	x2, x27
  436d08:	mov	x4, x22
  436d0c:	mov	x5, x25
  436d10:	bl	438950 <feof@plt+0x35f80>
  436d14:	tbnz	w0, #31, 436d9c <feof@plt+0x343cc>
  436d18:	mov	w27, w0
  436d1c:	add	x1, sp, #0x1c0
  436d20:	mov	x0, x21
  436d24:	mov	x2, x22
  436d28:	mov	x3, x25
  436d2c:	bl	438fac <feof@plt+0x365dc>
  436d30:	cbz	w19, 436d48 <feof@plt+0x34378>
  436d34:	add	x1, sp, #0x1a8
  436d38:	mov	x0, x21
  436d3c:	mov	x2, x22
  436d40:	mov	x3, x25
  436d44:	bl	438fac <feof@plt+0x365dc>
  436d48:	mov	w8, #0x1                   	// #1
  436d4c:	str	w8, [sp, #24]
  436d50:	ldr	x8, [sp, #224]
  436d54:	ldp	x7, x3, [sp, #248]
  436d58:	ldr	x6, [sp, #240]
  436d5c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0xaa68>
  436d60:	add	x1, x1, #0xb34
  436d64:	mov	x0, x21
  436d68:	mov	w2, w27
  436d6c:	mov	x4, x22
  436d70:	mov	x5, x25
  436d74:	str	wzr, [sp, #40]
  436d78:	str	xzr, [sp, #32]
  436d7c:	str	wzr, [sp, #16]
  436d80:	stp	x8, xzr, [sp]
  436d84:	bl	435ff4 <feof@plt+0x33624>
  436d88:	mov	x2, x25
  436d8c:	mov	w25, w0
  436d90:	tbnz	w0, #31, 436e48 <feof@plt+0x34478>
  436d94:	mov	w0, w20
  436d98:	b	436e4c <feof@plt+0x3447c>
  436d9c:	cbz	w24, 436db4 <feof@plt+0x343e4>
  436da0:	add	x1, sp, #0x1c0
  436da4:	mov	x0, x21
  436da8:	mov	x2, x22
  436dac:	mov	x3, x25
  436db0:	bl	438fac <feof@plt+0x365dc>
  436db4:	ldr	x2, [sp, #120]
  436db8:	str	xzr, [sp, #344]
  436dbc:	cbz	x2, 436e58 <feof@plt+0x34488>
  436dc0:	mov	x0, x21
  436dc4:	mov	x1, x26
  436dc8:	mov	w3, wzr
  436dcc:	mov	x4, x22
  436dd0:	mov	x5, x25
  436dd4:	bl	438950 <feof@plt+0x35f80>
  436dd8:	tbnz	w0, #31, 436e58 <feof@plt+0x34488>
  436ddc:	ldr	w8, [sp, #156]
  436de0:	ldp	x7, x3, [sp, #248]
  436de4:	ldr	x6, [sp, #240]
  436de8:	mov	w27, w0
  436dec:	str	w8, [sp, #40]
  436df0:	ldr	x8, [sp, #144]
  436df4:	add	x9, sp, #0x158
  436df8:	mov	x0, x21
  436dfc:	mov	x1, x26
  436e00:	str	x8, [sp, #32]
  436e04:	mov	w8, #0x1                   	// #1
  436e08:	str	w8, [sp, #24]
  436e0c:	ldr	x8, [sp, #224]
  436e10:	mov	w2, w27
  436e14:	mov	x4, x22
  436e18:	mov	x5, x25
  436e1c:	str	wzr, [sp, #16]
  436e20:	stp	x8, x9, [sp]
  436e24:	bl	435ff4 <feof@plt+0x33624>
  436e28:	mov	x3, x25
  436e2c:	mov	w25, w0
  436e30:	add	x1, sp, #0x1a8
  436e34:	mov	x0, x21
  436e38:	mov	x2, x22
  436e3c:	bl	438fac <feof@plt+0x365dc>
  436e40:	tbz	w25, #31, 436e70 <feof@plt+0x344a0>
  436e44:	ldr	x2, [sp, #304]
  436e48:	mov	w0, w27
  436e4c:	mov	x1, x22
  436e50:	bl	435c70 <feof@plt+0x332a0>
  436e54:	b	4361ac <feof@plt+0x337dc>
  436e58:	cbz	w19, 436e70 <feof@plt+0x344a0>
  436e5c:	ldr	x3, [sp, #304]
  436e60:	add	x1, sp, #0x1a8
  436e64:	mov	x0, x21
  436e68:	mov	x2, x22
  436e6c:	bl	438fac <feof@plt+0x365dc>
  436e70:	ldr	x8, [sp, #552]
  436e74:	ldr	x10, [sp, #544]
  436e78:	ldr	x9, [sp, #584]
  436e7c:	cmp	x8, #0x0
  436e80:	add	x11, x10, x8
  436e84:	bic	x8, x11, x11, asr #63
  436e88:	csel	x25, xzr, x10, eq  // eq = none
  436e8c:	csel	x8, xzr, x8, eq  // eq = none
  436e90:	cbz	x9, 436eb0 <feof@plt+0x344e0>
  436e94:	ldr	x10, [sp, #576]
  436e98:	cmp	x10, x25
  436e9c:	add	x9, x10, x9
  436ea0:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436ea4:	csel	x25, x10, x25, eq  // eq = none
  436ea8:	cmp	x9, x8
  436eac:	csel	x8, x9, x8, gt
  436eb0:	ldr	w19, [sp, #324]
  436eb4:	ldr	x9, [sp, #616]
  436eb8:	cbz	x9, 436ed8 <feof@plt+0x34508>
  436ebc:	ldr	x10, [sp, #608]
  436ec0:	cmp	x10, x25
  436ec4:	add	x9, x10, x9
  436ec8:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436ecc:	csel	x25, x10, x25, eq  // eq = none
  436ed0:	cmp	x9, x8
  436ed4:	csel	x8, x9, x8, gt
  436ed8:	ldr	x9, [sp, #648]
  436edc:	cbz	x9, 436efc <feof@plt+0x3452c>
  436ee0:	ldr	x10, [sp, #640]
  436ee4:	cmp	x10, x25
  436ee8:	add	x9, x10, x9
  436eec:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436ef0:	csel	x25, x10, x25, eq  // eq = none
  436ef4:	cmp	x9, x8
  436ef8:	csel	x8, x9, x8, gt
  436efc:	ldr	x9, [sp, #680]
  436f00:	cbz	x9, 436f20 <feof@plt+0x34550>
  436f04:	ldr	x10, [sp, #672]
  436f08:	cmp	x10, x25
  436f0c:	add	x9, x10, x9
  436f10:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436f14:	csel	x25, x10, x25, eq  // eq = none
  436f18:	cmp	x9, x8
  436f1c:	csel	x8, x9, x8, gt
  436f20:	ldr	x9, [sp, #712]
  436f24:	cbz	x9, 436f44 <feof@plt+0x34574>
  436f28:	ldr	x10, [sp, #704]
  436f2c:	cmp	x10, x25
  436f30:	add	x9, x10, x9
  436f34:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436f38:	csel	x25, x10, x25, eq  // eq = none
  436f3c:	cmp	x9, x8
  436f40:	csel	x8, x9, x8, gt
  436f44:	ldr	x9, [sp, #744]
  436f48:	cbz	x9, 436f68 <feof@plt+0x34598>
  436f4c:	ldr	x10, [sp, #736]
  436f50:	cmp	x10, x25
  436f54:	add	x9, x10, x9
  436f58:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436f5c:	csel	x25, x10, x25, eq  // eq = none
  436f60:	cmp	x9, x8
  436f64:	csel	x8, x9, x8, gt
  436f68:	ldr	x9, [sp, #776]
  436f6c:	cbz	x9, 436f8c <feof@plt+0x345bc>
  436f70:	ldr	x10, [sp, #768]
  436f74:	cmp	x10, x25
  436f78:	add	x9, x10, x9
  436f7c:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436f80:	csel	x25, x10, x25, eq  // eq = none
  436f84:	cmp	x9, x8
  436f88:	csel	x8, x9, x8, gt
  436f8c:	ldr	x9, [sp, #808]
  436f90:	cbz	x9, 436fb0 <feof@plt+0x345e0>
  436f94:	ldr	x10, [sp, #800]
  436f98:	cmp	x10, x25
  436f9c:	add	x9, x10, x9
  436fa0:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436fa4:	csel	x25, x10, x25, eq  // eq = none
  436fa8:	cmp	x9, x8
  436fac:	csel	x8, x9, x8, gt
  436fb0:	ldr	x9, [sp, #840]
  436fb4:	cbz	x9, 436fd4 <feof@plt+0x34604>
  436fb8:	ldr	x10, [sp, #832]
  436fbc:	cmp	x10, x25
  436fc0:	add	x9, x10, x9
  436fc4:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  436fc8:	csel	x25, x10, x25, eq  // eq = none
  436fcc:	cmp	x9, x8
  436fd0:	csel	x8, x9, x8, gt
  436fd4:	cbz	x25, 4372d0 <feof@plt+0x34900>
  436fd8:	cbz	x8, 4372d0 <feof@plt+0x34900>
  436fdc:	ldr	x19, [sp, #304]
  436fe0:	sub	x3, x8, x25
  436fe4:	add	x6, sp, #0x190
  436fe8:	mov	x0, x21
  436fec:	mov	w1, w20
  436ff0:	mov	x2, x25
  436ff4:	mov	x4, x22
  436ff8:	mov	x5, x19
  436ffc:	bl	438eec <feof@plt+0x3651c>
  437000:	cbz	w0, 437310 <feof@plt+0x34940>
  437004:	mov	w0, w20
  437008:	mov	x1, x22
  43700c:	mov	x2, x19
  437010:	bl	435c70 <feof@plt+0x332a0>
  437014:	mov	w23, #0x1                   	// #1
  437018:	cbz	w0, 437508 <feof@plt+0x34b38>
  43701c:	ldr	x11, [sp, #544]
  437020:	ldr	x9, [sp, #400]
  437024:	ldr	x8, [sp, #552]
  437028:	ldr	x12, [sp, #576]
  43702c:	ldr	x14, [sp, #608]
  437030:	ldr	x16, [sp, #640]
  437034:	ldr	x18, [sp, #672]
  437038:	ldr	x1, [sp, #704]
  43703c:	ldr	x3, [sp, #736]
  437040:	ldr	x5, [sp, #768]
  437044:	ldr	x7, [sp, #800]
  437048:	ldr	x20, [sp, #832]
  43704c:	ldr	x10, [sp, #584]
  437050:	ldr	x13, [sp, #616]
  437054:	ldr	x15, [sp, #648]
  437058:	sub	x11, x11, x25
  43705c:	ldr	x17, [sp, #680]
  437060:	sub	x12, x12, x25
  437064:	sub	x14, x14, x25
  437068:	sub	x16, x16, x25
  43706c:	sub	x18, x18, x25
  437070:	sub	x1, x1, x25
  437074:	sub	x3, x3, x25
  437078:	sub	x5, x5, x25
  43707c:	sub	x7, x7, x25
  437080:	sub	x20, x20, x25
  437084:	cmp	x8, #0x0
  437088:	add	x11, x9, x11
  43708c:	ldr	x0, [sp, #712]
  437090:	add	x12, x9, x12
  437094:	add	x14, x9, x14
  437098:	add	x16, x9, x16
  43709c:	add	x18, x9, x18
  4370a0:	add	x1, x9, x1
  4370a4:	add	x3, x9, x3
  4370a8:	add	x5, x9, x5
  4370ac:	add	x7, x9, x7
  4370b0:	add	x9, x9, x20
  4370b4:	cset	w20, ne  // ne = any
  4370b8:	cinc	w21, w23, ne  // ne = any
  4370bc:	csel	x11, xzr, x11, eq  // eq = none
  4370c0:	cmp	x10, #0x0
  4370c4:	ldr	x2, [sp, #744]
  4370c8:	csel	w10, w20, w21, eq  // eq = none
  4370cc:	csel	x12, xzr, x12, eq  // eq = none
  4370d0:	cmp	x13, #0x0
  4370d4:	ldr	x4, [sp, #776]
  4370d8:	str	x11, [sp, #560]
  4370dc:	csel	x11, xzr, x14, eq  // eq = none
  4370e0:	cinc	w10, w10, ne  // ne = any
  4370e4:	cmp	x15, #0x0
  4370e8:	ldr	x6, [sp, #808]
  4370ec:	str	x12, [sp, #592]
  4370f0:	csel	x12, xzr, x16, eq  // eq = none
  4370f4:	cinc	w10, w10, ne  // ne = any
  4370f8:	cmp	x17, #0x0
  4370fc:	ldr	x19, [sp, #840]
  437100:	str	x11, [sp, #624]
  437104:	str	x12, [sp, #656]
  437108:	csel	x11, xzr, x18, eq  // eq = none
  43710c:	cinc	w12, w10, ne  // ne = any
  437110:	cmp	x0, #0x0
  437114:	csel	x10, xzr, x1, eq  // eq = none
  437118:	cmp	x2, #0x0
  43711c:	ldr	x21, [sp, #288]
  437120:	str	x10, [sp, #720]
  437124:	csel	x10, xzr, x3, eq  // eq = none
  437128:	cmp	x4, #0x0
  43712c:	ldr	x20, [x29, #104]
  437130:	str	x11, [sp, #688]
  437134:	csel	x11, xzr, x5, eq  // eq = none
  437138:	cmp	x6, #0x0
  43713c:	str	x10, [sp, #752]
  437140:	csel	x10, xzr, x7, eq  // eq = none
  437144:	cmp	x19, #0x0
  437148:	mov	x24, xzr
  43714c:	mov	x22, xzr
  437150:	mov	w19, w12
  437154:	csel	x9, xzr, x9, eq  // eq = none
  437158:	add	x25, sp, #0x220
  43715c:	str	x11, [sp, #784]
  437160:	str	x10, [sp, #816]
  437164:	str	x9, [sp, #848]
  437168:	cbnz	x8, 4371ec <feof@plt+0x3481c>
  43716c:	b	437180 <feof@plt+0x347b0>
  437170:	add	x8, x25, x24
  437174:	ldr	x8, [x8, #40]
  437178:	add	x24, x24, #0x20
  43717c:	cbnz	x8, 4371ec <feof@plt+0x3481c>
  437180:	add	x23, x25, x24
  437184:	ldr	x2, [x23, #168]
  437188:	cbz	x2, 4371ec <feof@plt+0x3481c>
  43718c:	mov	w26, w19
  437190:	cbnz	x22, 4371b0 <feof@plt+0x347e0>
  437194:	ldp	x3, x2, [sp, #304]
  437198:	mov	w1, #0x13b4                	// #5044
  43719c:	mov	x0, x21
  4371a0:	bl	435450 <feof@plt+0x32a80>
  4371a4:	cbz	x0, 437654 <feof@plt+0x34c84>
  4371a8:	ldr	x2, [x23, #168]
  4371ac:	mov	x22, x0
  4371b0:	add	x19, x25, x24
  4371b4:	ldr	x1, [x19, #176]
  4371b8:	ldp	x5, x4, [sp, #304]
  4371bc:	add	x6, sp, #0x150
  4371c0:	add	x7, sp, #0x148
  4371c4:	mov	x0, x21
  4371c8:	mov	x3, x22
  4371cc:	stp	xzr, xzr, [sp, #328]
  4371d0:	bl	435d64 <feof@plt+0x33394>
  4371d4:	cbz	w0, 437654 <feof@plt+0x34c84>
  4371d8:	ldp	x9, x8, [sp, #328]
  4371dc:	str	x8, [x19, #16]
  4371e0:	str	x9, [x23, #8]
  4371e4:	str	wzr, [x19, #24]
  4371e8:	mov	w19, w26
  4371ec:	cmp	x24, #0x80
  4371f0:	b.ne	437170 <feof@plt+0x347a0>  // b.any
  4371f4:	ldr	x25, [sp, #304]
  4371f8:	mov	x24, xzr
  4371fc:	add	x28, sp, #0x220
  437200:	b	43722c <feof@plt+0x3485c>
  437204:	mov	x25, xzr
  437208:	mov	x8, xzr
  43720c:	str	x25, [x23, #16]
  437210:	ldr	x25, [sp, #304]
  437214:	sub	w19, w19, #0x1
  437218:	str	x8, [x27, #8]
  43721c:	str	wzr, [x27, #24]
  437220:	add	x24, x24, #0x20
  437224:	cmp	x24, #0xa0
  437228:	b.eq	4374dc <feof@plt+0x34b0c>  // b.none
  43722c:	add	x27, x28, x24
  437230:	ldr	x8, [x27, #8]
  437234:	cbz	x8, 437220 <feof@plt+0x34850>
  437238:	ldr	w9, [x27, #24]
  43723c:	cbz	w9, 437220 <feof@plt+0x34850>
  437240:	cbnz	x22, 437264 <feof@plt+0x34894>
  437244:	ldr	x2, [sp, #312]
  437248:	mov	w1, #0x13b4                	// #5044
  43724c:	mov	x0, x21
  437250:	mov	x3, x25
  437254:	bl	435450 <feof@plt+0x32a80>
  437258:	cbz	x0, 437754 <feof@plt+0x34d84>
  43725c:	ldr	x8, [x27, #8]
  437260:	mov	x22, x0
  437264:	subs	x26, x8, #0x18
  437268:	add	x23, x28, x24
  43726c:	b.cc	437204 <feof@plt+0x34834>  // b.lo, b.ul, b.last
  437270:	ldr	x21, [x23, #16]
  437274:	ldr	w8, [x21]
  437278:	cmp	w8, #0x1
  43727c:	b.ne	4372c0 <feof@plt+0x348f0>  // b.any
  437280:	ldr	x1, [x21, #8]
  437284:	ldr	x0, [sp, #288]
  437288:	ldr	x2, [sp, #312]
  43728c:	mov	x3, x25
  437290:	bl	435450 <feof@plt+0x32a80>
  437294:	cbz	x0, 43775c <feof@plt+0x34d8c>
  437298:	ldr	x4, [x21, #8]
  43729c:	mov	x25, x0
  4372a0:	add	x0, x21, #0x18
  4372a4:	mov	x1, x26
  4372a8:	mov	x2, x22
  4372ac:	mov	x3, x25
  4372b0:	bl	437998 <feof@plt+0x34fc8>
  4372b4:	cbz	w0, 4372c0 <feof@plt+0x348f0>
  4372b8:	ldr	x8, [x21, #8]
  4372bc:	b	4372c8 <feof@plt+0x348f8>
  4372c0:	mov	x25, xzr
  4372c4:	mov	x8, xzr
  4372c8:	ldr	x21, [sp, #288]
  4372cc:	b	43720c <feof@plt+0x3483c>
  4372d0:	ldr	x25, [sp, #304]
  4372d4:	mov	w0, w20
  4372d8:	mov	x1, x22
  4372dc:	mov	x2, x25
  4372e0:	bl	435c70 <feof@plt+0x332a0>
  4372e4:	cbz	w0, 43732c <feof@plt+0x3495c>
  4372e8:	mov	w25, #0x1                   	// #1
  4372ec:	b	4361ac <feof@plt+0x337dc>
  4372f0:	mov	w8, wzr
  4372f4:	mov	w23, wzr
  4372f8:	mov	x21, x19
  4372fc:	mov	w19, wzr
  437300:	b	436ad8 <feof@plt+0x34108>
  437304:	ldr	x24, [sp, #136]
  437308:	str	wzr, [sp, #220]
  43730c:	b	436968 <feof@plt+0x33f98>
  437310:	mov	w28, wzr
  437314:	mov	x24, xzr
  437318:	mov	w23, wzr
  43731c:	mov	x25, x19
  437320:	str	wzr, [sp, #220]
  437324:	str	wzr, [sp, #172]
  437328:	b	43777c <feof@plt+0x34dac>
  43732c:	str	wzr, [sp, #220]
  437330:	str	wzr, [sp, #172]
  437334:	mov	w28, wzr
  437338:	mov	x24, xzr
  43733c:	mov	w23, wzr
  437340:	cbnz	w19, 436b20 <feof@plt+0x34150>
  437344:	b	436b34 <feof@plt+0x34164>
  437348:	ldr	x24, [sp, #136]
  43734c:	str	wzr, [sp, #172]
  437350:	b	436968 <feof@plt+0x33f98>
  437354:	str	w24, [sp, #172]
  437358:	ldr	x24, [sp, #136]
  43735c:	mov	w28, wzr
  437360:	b	436968 <feof@plt+0x33f98>
  437364:	ldr	x21, [sp, #288]
  437368:	b	437748 <feof@plt+0x34d78>
  43736c:	ldr	x21, [sp, #288]
  437370:	mov	x28, xzr
  437374:	add	x8, x28, x28, lsl #1
  437378:	str	x1, [sp, #208]
  43737c:	lsl	x1, x8, #3
  437380:	mov	x0, x21
  437384:	mov	x2, x22
  437388:	mov	x3, x25
  43738c:	str	x27, [sp, #112]
  437390:	str	x1, [sp, #200]
  437394:	bl	435450 <feof@plt+0x32a80>
  437398:	cbz	x0, 43772c <feof@plt+0x34d5c>
  43739c:	ldp	x17, x8, [sp, #256]
  4373a0:	mov	x27, x0
  4373a4:	ldr	x0, [sp, #280]
  4373a8:	cmp	x8, #0x18
  4373ac:	b.cc	437460 <feof@plt+0x34a90>  // b.lo, b.ul, b.last
  4373b0:	ldr	x10, [sp, #208]
  4373b4:	mov	w8, wzr
  4373b8:	mov	x9, xzr
  4373bc:	mov	w11, #0x18                  	// #24
  4373c0:	add	x10, x10, #0x8
  4373c4:	b	4373f0 <feof@plt+0x34a20>
  4373c8:	madd	x12, x12, x11, x27
  4373cc:	add	x13, x13, x17
  4373d0:	str	x13, [x12, #8]
  4373d4:	ldr	x13, [x10, #8]
  4373d8:	add	w8, w8, #0x1
  4373dc:	str	x13, [x12, #16]
  4373e0:	add	x9, x9, #0x1
  4373e4:	cmp	x9, x23
  4373e8:	add	x10, x10, #0x18
  4373ec:	b.cs	437460 <feof@plt+0x34a90>  // b.hs, b.nlast
  4373f0:	ldurb	w12, [x10, #-4]
  4373f4:	and	w12, w12, #0xf
  4373f8:	sub	w12, w12, #0x1
  4373fc:	and	w12, w12, #0xff
  437400:	cmp	w12, #0x1
  437404:	b.hi	4373e0 <feof@plt+0x34a10>  // b.pmore
  437408:	ldurh	w12, [x10, #-2]
  43740c:	cbz	w12, 4373e0 <feof@plt+0x34a10>
  437410:	ldur	w12, [x10, #-8]
  437414:	cmp	x0, x12
  437418:	b.ls	437700 <feof@plt+0x34d30>  // b.plast
  43741c:	add	x12, x19, x12
  437420:	umull	x13, w8, w11
  437424:	str	x12, [x27, x13]
  437428:	ldr	x13, [x10]
  43742c:	mov	w12, w8
  437430:	cbz	x24, 4373c8 <feof@plt+0x349f8>
  437434:	ldr	x15, [x24]
  437438:	mov	x16, x24
  43743c:	subs	x14, x13, x15
  437440:	b.cc	4373c8 <feof@plt+0x349f8>  // b.lo, b.ul, b.last
  437444:	ldr	x16, [x16, #16]
  437448:	add	x15, x16, x15
  43744c:	cmp	x13, x15
  437450:	b.cs	4373c8 <feof@plt+0x349f8>  // b.hs, b.nlast
  437454:	ldr	x13, [x24, #8]
  437458:	ldr	x13, [x13, x14]
  43745c:	b	4373c8 <feof@plt+0x349f8>
  437460:	adrp	x3, 438000 <feof@plt+0x35630>
  437464:	add	x3, x3, #0xed4
  437468:	mov	w2, #0x18                  	// #24
  43746c:	mov	x0, x27
  437470:	mov	x1, x28
  437474:	bl	43f518 <feof@plt+0x3cb48>
  437478:	add	x1, sp, #0x208
  43747c:	mov	x0, x21
  437480:	mov	x2, x22
  437484:	mov	x3, x25
  437488:	stp	xzr, x27, [x26]
  43748c:	str	x28, [x26, #16]
  437490:	bl	438fac <feof@plt+0x365dc>
  437494:	ldr	x9, [sp, #248]
  437498:	mov	w8, #0x1                   	// #1
  43749c:	str	w8, [x9]
  4374a0:	ldr	w9, [x21, #8]
  4374a4:	add	x8, x21, #0x30
  4374a8:	cbnz	w9, 437524 <feof@plt+0x34b54>
  4374ac:	mov	x9, x8
  4374b0:	ldr	x8, [x8]
  4374b4:	cbnz	x8, 4374ac <feof@plt+0x34adc>
  4374b8:	str	x26, [x9]
  4374bc:	b	437544 <feof@plt+0x34b74>
  4374c0:	ldr	x24, [sp, #136]
  4374c4:	mov	w8, #0x1                   	// #1
  4374c8:	mov	w19, wzr
  4374cc:	str	w8, [sp, #220]
  4374d0:	b	43696c <feof@plt+0x33f9c>
  4374d4:	ldr	x24, [sp, #136]
  4374d8:	b	436968 <feof@plt+0x33f98>
  4374dc:	cbz	x22, 4374f8 <feof@plt+0x34b28>
  4374e0:	ldr	x3, [sp, #312]
  4374e4:	mov	w2, #0x13b4                	// #5044
  4374e8:	mov	x0, x21
  4374ec:	mov	x1, x22
  4374f0:	mov	x4, x25
  4374f4:	bl	435614 <feof@plt+0x32c44>
  4374f8:	cbz	w19, 43765c <feof@plt+0x34c8c>
  4374fc:	ldr	x22, [sp, #312]
  437500:	mov	w23, #0x1                   	// #1
  437504:	b	437678 <feof@plt+0x34ca8>
  437508:	ldr	x25, [sp, #304]
  43750c:	str	wzr, [sp, #220]
  437510:	str	wzr, [sp, #172]
  437514:	mov	w28, wzr
  437518:	mov	x24, xzr
  43751c:	b	43777c <feof@plt+0x34dac>
  437520:	clrex
  437524:	mov	x10, x8
  437528:	mov	x9, x10
  43752c:	ldar	x10, [x10]
  437530:	cbnz	x10, 437528 <feof@plt+0x34b58>
  437534:	ldaxr	x10, [x9]
  437538:	cbnz	x10, 437520 <feof@plt+0x34b50>
  43753c:	stlxr	w10, x26, [x9]
  437540:	cbnz	w10, 437534 <feof@plt+0x34b64>
  437544:	ldp	x25, x22, [sp, #304]
  437548:	ldr	x21, [sp, #288]
  43754c:	ldr	w20, [sp, #324]
  437550:	ldr	w28, [sp, #272]
  437554:	mov	x23, x24
  437558:	ldr	w24, [sp, #172]
  43755c:	ldr	x27, [sp, #112]
  437560:	mov	w8, #0x1                   	// #1
  437564:	b	436988 <feof@plt+0x33fb8>
  437568:	and	x8, x10, #0xffffffffffffffe
  43756c:	mov	w9, #0x18                  	// #24
  437570:	mov	x11, xzr
  437574:	mov	x12, xzr
  437578:	madd	x9, x8, x9, x1
  43757c:	add	x13, x1, #0x1e
  437580:	mov	x14, x8
  437584:	b	4375c8 <feof@plt+0x34bf8>
  437588:	cmp	w18, #0x2
  43758c:	and	w15, w15, #0xff
  437590:	cset	w18, cc  // cc = lo, ul, last
  437594:	cmp	w15, #0x2
  437598:	cset	w15, cc  // cc = lo, ul, last
  43759c:	tst	w16, #0xffff
  4375a0:	cset	w16, ne  // ne = any
  4375a4:	tst	w17, #0xffff
  4375a8:	cset	w17, ne  // ne = any
  4375ac:	and	w15, w15, w16
  4375b0:	add	x11, x11, x15
  4375b4:	and	w15, w18, w17
  4375b8:	subs	x14, x14, #0x2
  4375bc:	add	x12, x12, x15
  4375c0:	add	x13, x13, #0x30
  4375c4:	b.eq	437604 <feof@plt+0x34c34>  // b.none
  4375c8:	ldurb	w15, [x13, #-26]
  4375cc:	ldurb	w16, [x13, #-2]
  4375d0:	and	w15, w15, #0xf
  4375d4:	sub	w15, w15, #0x1
  4375d8:	and	w16, w16, #0xf
  4375dc:	and	w17, w15, #0xff
  4375e0:	cmp	w17, #0x1
  4375e4:	sub	w17, w16, #0x1
  4375e8:	b.hi	4375f0 <feof@plt+0x34c20>  // b.pmore
  4375ec:	ldurh	w16, [x13, #-24]
  4375f0:	and	w18, w17, #0xff
  4375f4:	cmp	w18, #0x1
  4375f8:	b.hi	437588 <feof@plt+0x34bb8>  // b.pmore
  4375fc:	ldrh	w17, [x13]
  437600:	b	437588 <feof@plt+0x34bb8>
  437604:	ldr	x21, [sp, #288]
  437608:	cmp	x10, x8
  43760c:	add	x28, x12, x11
  437610:	b.eq	437374 <feof@plt+0x349a4>  // b.none
  437614:	add	x9, x9, #0x6
  437618:	b	43762c <feof@plt+0x34c5c>
  43761c:	add	x8, x8, #0x1
  437620:	cmp	x8, x23
  437624:	add	x9, x9, #0x18
  437628:	b.cs	437374 <feof@plt+0x349a4>  // b.hs, b.nlast
  43762c:	ldurb	w10, [x9, #-2]
  437630:	and	w10, w10, #0xf
  437634:	sub	w10, w10, #0x1
  437638:	and	w10, w10, #0xff
  43763c:	cmp	w10, #0x1
  437640:	b.hi	43761c <feof@plt+0x34c4c>  // b.pmore
  437644:	ldrh	w10, [x9]
  437648:	cmp	w10, #0x0
  43764c:	cinc	x28, x28, ne  // ne = any
  437650:	b	43761c <feof@plt+0x34c4c>
  437654:	ldp	x25, x22, [sp, #304]
  437658:	b	437764 <feof@plt+0x34d94>
  43765c:	ldr	x22, [sp, #312]
  437660:	add	x1, sp, #0x190
  437664:	mov	x0, x21
  437668:	mov	x3, x25
  43766c:	mov	x2, x22
  437670:	bl	438fac <feof@plt+0x365dc>
  437674:	mov	w23, wzr
  437678:	ldr	w13, [sp, #300]
  43767c:	ldr	x2, [sp, #560]
  437680:	ldr	x3, [sp, #552]
  437684:	ldr	x4, [sp, #592]
  437688:	ldr	x5, [sp, #584]
  43768c:	ldr	x6, [sp, #624]
  437690:	ldr	x7, [sp, #616]
  437694:	ldr	x8, [sp, #656]
  437698:	ldr	x9, [sp, #648]
  43769c:	ldr	x10, [sp, #688]
  4376a0:	ldr	x11, [sp, #680]
  4376a4:	ldr	x12, [sp, #344]
  4376a8:	ldr	x14, [sp, #240]
  4376ac:	ldr	x1, [sp, #256]
  4376b0:	cmp	w13, #0x2
  4376b4:	cset	w13, eq  // eq = none
  4376b8:	mov	x0, x21
  4376bc:	stp	x14, x20, [sp, #64]
  4376c0:	stp	x22, x25, [sp, #48]
  4376c4:	str	x12, [sp, #40]
  4376c8:	str	w13, [sp, #32]
  4376cc:	stp	x10, x11, [sp, #16]
  4376d0:	stp	x8, x9, [sp]
  4376d4:	bl	438ffc <feof@plt+0x3662c>
  4376d8:	cbz	w0, 4376ec <feof@plt+0x34d1c>
  4376dc:	ldr	x8, [sp, #224]
  4376e0:	mov	w25, #0x1                   	// #1
  4376e4:	str	w25, [x8]
  4376e8:	b	4361ac <feof@plt+0x337dc>
  4376ec:	str	wzr, [sp, #220]
  4376f0:	str	wzr, [sp, #172]
  4376f4:	mov	w28, wzr
  4376f8:	mov	x24, xzr
  4376fc:	b	437778 <feof@plt+0x34da8>
  437700:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  437704:	add	x1, x1, #0x9d7
  437708:	mov	x0, x25
  43770c:	mov	w2, wzr
  437710:	blr	x22
  437714:	ldr	x2, [sp, #200]
  437718:	mov	x0, x21
  43771c:	mov	x1, x27
  437720:	mov	x3, x22
  437724:	mov	x4, x25
  437728:	bl	435614 <feof@plt+0x32c44>
  43772c:	mov	w2, #0x18                  	// #24
  437730:	mov	x0, x21
  437734:	mov	x1, x26
  437738:	mov	x3, x22
  43773c:	mov	x4, x25
  437740:	bl	435614 <feof@plt+0x32c44>
  437744:	ldr	w28, [sp, #272]
  437748:	mov	w23, wzr
  43774c:	mov	w19, #0x1                   	// #1
  437750:	b	436ad8 <feof@plt+0x34108>
  437754:	ldr	x22, [sp, #312]
  437758:	b	437764 <feof@plt+0x34d94>
  43775c:	ldp	x25, x22, [sp, #304]
  437760:	ldr	x21, [sp, #288]
  437764:	str	wzr, [sp, #220]
  437768:	str	wzr, [sp, #172]
  43776c:	mov	w28, wzr
  437770:	mov	x24, xzr
  437774:	mov	w23, #0x1                   	// #1
  437778:	mov	w20, #0xffffffff            	// #-1
  43777c:	ldr	w19, [sp, #324]
  437780:	cbnz	w19, 436b20 <feof@plt+0x34150>
  437784:	b	436b34 <feof@plt+0x34164>
  437788:	sub	sp, sp, #0x70
  43778c:	stp	x29, x30, [sp, #64]
  437790:	str	x21, [sp, #80]
  437794:	stp	x20, x19, [sp, #96]
  437798:	add	x29, sp, #0x40
  43779c:	ldr	x20, [x0, #8]
  4377a0:	mov	x21, x0
  4377a4:	mov	x19, x2
  4377a8:	cbz	x20, 4377f0 <feof@plt+0x34e20>
  4377ac:	ldrb	w8, [x20]
  4377b0:	cbz	w8, 4377f0 <feof@plt+0x34e20>
  4377b4:	ldr	w0, [x19, #56]
  4377b8:	cmn	w0, #0x1
  4377bc:	b.eq	4377d4 <feof@plt+0x34e04>  // b.none
  4377c0:	ldp	x1, x2, [x19, #8]
  4377c4:	bl	435c70 <feof@plt+0x332a0>
  4377c8:	mov	w8, #0xffffffff            	// #-1
  4377cc:	str	w8, [x19, #56]
  4377d0:	ldr	x20, [x21, #8]
  4377d4:	ldp	x1, x2, [x19, #8]
  4377d8:	add	x3, x29, #0x1c
  4377dc:	mov	x0, x20
  4377e0:	bl	435bd4 <feof@plt+0x33204>
  4377e4:	mov	w2, w0
  4377e8:	tbz	w0, #31, 437808 <feof@plt+0x34e38>
  4377ec:	b	437860 <feof@plt+0x34e90>
  4377f0:	ldr	w2, [x19, #56]
  4377f4:	cmn	w2, #0x1
  4377f8:	b.eq	437860 <feof@plt+0x34e90>  // b.none
  4377fc:	ldr	x20, [x19, #48]
  437800:	mov	w8, #0xffffffff            	// #-1
  437804:	str	w8, [x19, #56]
  437808:	ldr	x3, [x21]
  43780c:	ldp	x0, x4, [x19]
  437810:	ldr	x5, [x19, #16]
  437814:	ldr	x7, [x19, #32]
  437818:	add	x8, x29, #0x18
  43781c:	sub	x6, x29, #0x8
  437820:	mov	x1, x20
  437824:	str	wzr, [sp, #40]
  437828:	str	xzr, [sp, #32]
  43782c:	str	wzr, [sp, #24]
  437830:	str	wzr, [sp, #16]
  437834:	stp	x8, xzr, [sp]
  437838:	bl	435ff4 <feof@plt+0x33624>
  43783c:	cbz	w0, 437860 <feof@plt+0x34e90>
  437840:	ldr	w8, [x29, #24]
  437844:	cbz	w8, 437860 <feof@plt+0x34e90>
  437848:	ldr	x8, [x19, #40]
  43784c:	mov	w9, #0x1                   	// #1
  437850:	str	w9, [x8]
  437854:	ldur	x8, [x29, #-8]
  437858:	ldr	x9, [x19, #24]
  43785c:	str	x8, [x9]
  437860:	ldp	x20, x19, [sp, #96]
  437864:	ldr	x21, [sp, #80]
  437868:	ldp	x29, x30, [sp, #64]
  43786c:	mov	w0, wzr
  437870:	add	sp, sp, #0x70
  437874:	ret
  437878:	ldr	w8, [x0, #8]
  43787c:	mov	x5, x2
  437880:	cbz	w8, 4378f4 <feof@plt+0x34f24>
  437884:	add	x8, x0, #0x30
  437888:	ldar	x9, [x8]
  43788c:	cbz	x9, 437970 <feof@plt+0x34fa0>
  437890:	mov	w10, #0x18                  	// #24
  437894:	b	4378a0 <feof@plt+0x34ed0>
  437898:	ldar	x9, [x9]
  43789c:	cbz	x9, 437970 <feof@plt+0x34fa0>
  4378a0:	ldr	x13, [x9, #16]
  4378a4:	cbz	x13, 437898 <feof@plt+0x34ec8>
  4378a8:	ldr	x12, [x9, #8]
  4378ac:	mov	x8, xzr
  4378b0:	b	4378c0 <feof@plt+0x34ef0>
  4378b4:	cmp	x8, x14
  4378b8:	mov	x13, x14
  4378bc:	b.cs	437898 <feof@plt+0x34ec8>  // b.hs, b.nlast
  4378c0:	add	x11, x13, x8
  4378c4:	lsr	x14, x11, #1
  4378c8:	madd	x11, x14, x10, x12
  4378cc:	ldr	x3, [x11, #8]
  4378d0:	cmp	x3, x1
  4378d4:	b.hi	4378b4 <feof@plt+0x34ee4>  // b.pmore
  4378d8:	ldr	x8, [x11, #16]
  4378dc:	add	x15, x8, x3
  4378e0:	cmp	x15, x1
  4378e4:	b.hi	437960 <feof@plt+0x34f90>  // b.pmore
  4378e8:	add	x8, x14, #0x1
  4378ec:	mov	x14, x13
  4378f0:	b	4378b4 <feof@plt+0x34ee4>
  4378f4:	ldr	x9, [x0, #48]
  4378f8:	cbz	x9, 437970 <feof@plt+0x34fa0>
  4378fc:	mov	w10, #0x18                  	// #24
  437900:	b	43790c <feof@plt+0x34f3c>
  437904:	ldr	x9, [x9]
  437908:	cbz	x9, 437970 <feof@plt+0x34fa0>
  43790c:	ldr	x13, [x9, #16]
  437910:	cbz	x13, 437904 <feof@plt+0x34f34>
  437914:	ldr	x12, [x9, #8]
  437918:	mov	x8, xzr
  43791c:	b	43792c <feof@plt+0x34f5c>
  437920:	cmp	x8, x14
  437924:	mov	x13, x14
  437928:	b.cs	437904 <feof@plt+0x34f34>  // b.hs, b.nlast
  43792c:	add	x11, x13, x8
  437930:	lsr	x14, x11, #1
  437934:	madd	x11, x14, x10, x12
  437938:	ldr	x3, [x11, #8]
  43793c:	cmp	x3, x1
  437940:	b.hi	437920 <feof@plt+0x34f50>  // b.pmore
  437944:	ldr	x8, [x11, #16]
  437948:	add	x15, x8, x3
  43794c:	cmp	x15, x1
  437950:	b.hi	437960 <feof@plt+0x34f90>  // b.pmore
  437954:	add	x8, x14, #0x1
  437958:	mov	x14, x13
  43795c:	b	437920 <feof@plt+0x34f50>
  437960:	ldr	x2, [x11]
  437964:	mov	x0, x4
  437968:	mov	x4, x8
  43796c:	br	x5
  437970:	mov	x0, x4
  437974:	mov	x2, xzr
  437978:	mov	x3, xzr
  43797c:	mov	x4, xzr
  437980:	br	x5
  437984:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  437988:	mov	x0, x4
  43798c:	add	x1, x1, #0xa37
  437990:	mov	w2, #0xffffffff            	// #-1
  437994:	br	x3
  437998:	sub	sp, sp, #0xd0
  43799c:	stp	x29, x30, [sp, #112]
  4379a0:	stp	x28, x27, [sp, #128]
  4379a4:	stp	x26, x25, [sp, #144]
  4379a8:	stp	x24, x23, [sp, #160]
  4379ac:	stp	x22, x21, [sp, #176]
  4379b0:	stp	x20, x19, [sp, #192]
  4379b4:	add	x29, sp, #0x70
  4379b8:	mov	x19, x3
  4379bc:	add	x27, x0, x1
  4379c0:	cmp	x1, #0x5
  4379c4:	add	x20, x3, x4
  4379c8:	mov	x23, x3
  4379cc:	b.lt	438320 <feof@plt+0x35950>  // b.tstop
  4379d0:	mov	w8, #0x1278                	// #4728
  4379d4:	mov	w9, #0x1378                	// #4984
  4379d8:	add	x10, x2, #0x800
  4379dc:	str	x10, [sp, #32]
  4379e0:	add	x10, x2, x8
  4379e4:	add	x8, x2, x9
  4379e8:	mov	x26, x2
  4379ec:	mov	x25, x0
  4379f0:	str	x8, [sp, #8]
  4379f4:	mov	x23, x19
  4379f8:	stur	x27, [x29, #-48]
  4379fc:	str	x2, [sp, #40]
  437a00:	stur	x20, [x29, #-40]
  437a04:	str	x4, [sp]
  437a08:	str	x10, [sp, #48]
  437a0c:	ldrsb	w8, [x25]
  437a10:	mov	w0, wzr
  437a14:	tbnz	w8, #31, 43832c <feof@plt+0x3595c>
  437a18:	and	w9, w8, #0xf
  437a1c:	cmp	w9, #0x8
  437a20:	b.ne	43832c <feof@plt+0x3595c>  // b.any
  437a24:	ldrb	w9, [x25, #1]
  437a28:	tbnz	w9, #5, 438328 <feof@plt+0x35958>
  437a2c:	and	w8, w8, #0xff
  437a30:	bfi	w9, w8, #8, #8
  437a34:	mov	w8, #0x7bdf                	// #31711
  437a38:	movk	w8, #0xbdef, lsl #16
  437a3c:	mul	w8, w9, w8
  437a40:	mov	w9, #0x1084                	// #4228
  437a44:	movk	w9, #0x842, lsl #16
  437a48:	cmp	w8, w9
  437a4c:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437a50:	add	x25, x25, #0x2
  437a54:	tst	x25, #0x3
  437a58:	b.eq	437a80 <feof@plt+0x350b0>  // b.none
  437a5c:	mov	w24, wzr
  437a60:	mov	x21, xzr
  437a64:	ldrb	w8, [x25], #1
  437a68:	lsl	x8, x8, x24
  437a6c:	tst	x25, #0x3
  437a70:	orr	x21, x8, x21
  437a74:	add	w24, w24, #0x8
  437a78:	b.ne	437a64 <feof@plt+0x35094>  // b.any
  437a7c:	b	437a98 <feof@plt+0x350c8>
  437a80:	mov	w24, wzr
  437a84:	mov	x21, xzr
  437a88:	b	437a98 <feof@plt+0x350c8>
  437a8c:	ldr	x26, [sp, #40]
  437a90:	ldr	x8, [sp, #56]
  437a94:	tbnz	w8, #0, 438310 <feof@plt+0x35940>
  437a98:	cmp	w24, #0xe
  437a9c:	b.hi	437ac0 <feof@plt+0x350f0>  // b.pmore
  437aa0:	sub	x8, x27, x25
  437aa4:	cmp	x8, #0x4
  437aa8:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437aac:	ldr	w8, [x25], #4
  437ab0:	lsl	x8, x8, x24
  437ab4:	add	w24, w24, #0x20
  437ab8:	orr	x21, x8, x21
  437abc:	prfm	pldl1strm, [x25]
  437ac0:	ubfx	w8, w21, #1, #2
  437ac4:	str	x21, [sp, #56]
  437ac8:	cbz	w8, 437be4 <feof@plt+0x35214>
  437acc:	lsr	x21, x21, #3
  437ad0:	cmp	w8, #0x1
  437ad4:	sub	w28, w24, #0x3
  437ad8:	b.eq	437c78 <feof@plt+0x352a8>  // b.none
  437adc:	cmp	w8, #0x3
  437ae0:	b.eq	438328 <feof@plt+0x35958>  // b.none
  437ae4:	cmp	w28, #0xe
  437ae8:	b.hi	437b0c <feof@plt+0x3513c>  // b.pmore
  437aec:	sub	x8, x27, x25
  437af0:	cmp	x8, #0x4
  437af4:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437af8:	ldr	w8, [x25], #4
  437afc:	lsl	x8, x8, x28
  437b00:	add	w28, w24, #0x1d
  437b04:	orr	x21, x8, x21
  437b08:	prfm	pldl1strm, [x25]
  437b0c:	and	w20, w21, #0x1f
  437b10:	cmp	w20, #0x1d
  437b14:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437b18:	ubfx	w22, w21, #5, #5
  437b1c:	cmp	w22, #0x1d
  437b20:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437b24:	sub	w9, w28, #0xe
  437b28:	lsr	x10, x21, #14
  437b2c:	cmp	w9, #0xe
  437b30:	stp	xzr, xzr, [x29, #-24]
  437b34:	stur	wzr, [x29, #-9]
  437b38:	b.hi	437b5c <feof@plt+0x3518c>  // b.pmore
  437b3c:	sub	x8, x27, x25
  437b40:	cmp	x8, #0x4
  437b44:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437b48:	ldr	w8, [x25], #4
  437b4c:	lsl	x8, x8, x9
  437b50:	add	w9, w28, #0x12
  437b54:	orr	x10, x8, x10
  437b58:	prfm	pldl1strm, [x25]
  437b5c:	ubfx	w8, w21, #10, #4
  437b60:	and	w11, w10, #0x7
  437b64:	ubfx	w12, w10, #3, #3
  437b68:	ubfx	w13, w10, #6, #3
  437b6c:	ubfx	w14, w10, #9, #3
  437b70:	sturb	w11, [x29, #-8]
  437b74:	sturb	w12, [x29, #-7]
  437b78:	sturb	w13, [x29, #-6]
  437b7c:	sturb	w14, [x29, #-24]
  437b80:	cbz	w8, 437c98 <feof@plt+0x352c8>
  437b84:	add	w8, w8, #0x4
  437b88:	ubfx	w11, w10, #12, #3
  437b8c:	lsr	x21, x10, #15
  437b90:	cmp	w8, #0x5
  437b94:	sub	w28, w9, #0xf
  437b98:	sturb	w11, [x29, #-16]
  437b9c:	b.eq	437ca0 <feof@plt+0x352d0>  // b.none
  437ba0:	cmp	w28, #0xe
  437ba4:	b.hi	437bc8 <feof@plt+0x351f8>  // b.pmore
  437ba8:	sub	x10, x27, x25
  437bac:	cmp	x10, #0x4
  437bb0:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437bb4:	ldr	w10, [x25], #4
  437bb8:	lsl	x10, x10, x28
  437bbc:	add	w28, w9, #0x11
  437bc0:	orr	x21, x10, x21
  437bc4:	prfm	pldl1strm, [x25]
  437bc8:	and	w9, w21, #0x7
  437bcc:	cmp	w8, #0x6
  437bd0:	sturb	w9, [x29, #-17]
  437bd4:	b.ne	438188 <feof@plt+0x357b8>  // b.any
  437bd8:	lsr	x21, x21, #3
  437bdc:	sub	w28, w28, #0x3
  437be0:	b	437ca0 <feof@plt+0x352d0>
  437be4:	sub	w8, w24, #0xc
  437be8:	lsr	w8, w8, #3
  437bec:	mvn	x8, x8
  437bf0:	add	x9, x8, x25
  437bf4:	sub	x8, x27, x9
  437bf8:	cmp	x8, #0x4
  437bfc:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437c00:	ldrh	w8, [x9, #2]
  437c04:	ldrh	w24, [x9]
  437c08:	eor	w8, w8, #0xffff
  437c0c:	cmp	w8, w24
  437c10:	b.ne	438328 <feof@plt+0x35958>  // b.any
  437c14:	add	x25, x9, #0x4
  437c18:	sub	w9, w27, w25
  437c1c:	cmp	w8, w9
  437c20:	mov	w0, wzr
  437c24:	b.hi	43832c <feof@plt+0x3595c>  // b.pmore
  437c28:	sub	w9, w20, w23
  437c2c:	cmp	w8, w9
  437c30:	b.hi	43832c <feof@plt+0x3595c>  // b.pmore
  437c34:	mov	x0, x23
  437c38:	mov	x1, x25
  437c3c:	mov	x2, x24
  437c40:	bl	402390 <memcpy@plt>
  437c44:	add	x25, x25, x24
  437c48:	tst	x25, #0x3
  437c4c:	add	x23, x23, x24
  437c50:	b.eq	437c8c <feof@plt+0x352bc>  // b.none
  437c54:	mov	w24, wzr
  437c58:	mov	x21, xzr
  437c5c:	ldrb	w8, [x25], #1
  437c60:	lsl	x8, x8, x24
  437c64:	tst	x25, #0x3
  437c68:	orr	x21, x8, x21
  437c6c:	add	w24, w24, #0x8
  437c70:	b.ne	437c5c <feof@plt+0x3528c>  // b.any
  437c74:	b	437a90 <feof@plt+0x350c0>
  437c78:	adrp	x13, 45f000 <_obstack_memory_used@@Base+0xea68>
  437c7c:	adrp	x26, 45e000 <_obstack_memory_used@@Base+0xda68>
  437c80:	add	x13, x13, #0x214
  437c84:	add	x26, x26, #0xf34
  437c88:	b	437d1c <feof@plt+0x3534c>
  437c8c:	mov	x21, xzr
  437c90:	mov	w24, wzr
  437c94:	b	437a90 <feof@plt+0x350c0>
  437c98:	lsr	x21, x10, #12
  437c9c:	sub	w28, w9, #0xc
  437ca0:	sub	x0, x29, #0x18
  437ca4:	mov	w1, #0x13                  	// #19
  437ca8:	mov	x2, x26
  437cac:	mov	x3, x26
  437cb0:	bl	4385e0 <feof@plt+0x35c10>
  437cb4:	cbz	w0, 438328 <feof@plt+0x35958>
  437cb8:	ldr	x24, [sp, #48]
  437cbc:	add	w9, w20, #0x101
  437cc0:	add	w8, w22, #0x1
  437cc4:	stur	x9, [x29, #-32]
  437cc8:	add	x9, x24, x9
  437ccc:	add	x20, x9, x8
  437cd0:	cmp	x20, x24
  437cd4:	stp	x9, x8, [sp, #16]
  437cd8:	b.hi	438014 <feof@plt+0x35644>  // b.pmore
  437cdc:	ldr	x8, [sp, #8]
  437ce0:	ldrb	w8, [x8]
  437ce4:	cbz	w8, 438328 <feof@plt+0x35958>
  437ce8:	ldr	x0, [sp, #48]
  437cec:	ldur	x1, [x29, #-32]
  437cf0:	mov	x2, x26
  437cf4:	mov	x3, x26
  437cf8:	bl	4385e0 <feof@plt+0x35c10>
  437cfc:	cbz	w0, 438328 <feof@plt+0x35958>
  437d00:	ldp	x0, x1, [sp, #16]
  437d04:	ldr	x3, [sp, #32]
  437d08:	mov	x2, x26
  437d0c:	bl	4385e0 <feof@plt+0x35c10>
  437d10:	cbz	w0, 438328 <feof@plt+0x35958>
  437d14:	ldr	x13, [sp, #32]
  437d18:	ldur	x20, [x29, #-40]
  437d1c:	mov	w24, w28
  437d20:	stur	x13, [x29, #-32]
  437d24:	b	437d4c <feof@plt+0x3537c>
  437d28:	mov	w22, w28
  437d2c:	add	x1, x23, x19
  437d30:	mov	x0, x23
  437d34:	mov	x2, x22
  437d38:	bl	402390 <memcpy@plt>
  437d3c:	add	x23, x23, x22
  437d40:	mov	x19, x20
  437d44:	ldp	x27, x20, [x29, #-48]
  437d48:	ldur	x13, [x29, #-32]
  437d4c:	cmp	w24, #0xe
  437d50:	b.hi	437d74 <feof@plt+0x353a4>  // b.pmore
  437d54:	sub	x8, x27, x25
  437d58:	cmp	x8, #0x4
  437d5c:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437d60:	ldr	w8, [x25], #4
  437d64:	lsl	x8, x8, x24
  437d68:	add	w24, w24, #0x20
  437d6c:	orr	x21, x8, x21
  437d70:	prfm	pldl1strm, [x25]
  437d74:	and	x8, x21, #0xff
  437d78:	ldrh	w10, [x26, x8, lsl #1]
  437d7c:	ubfx	w9, w10, #9, #3
  437d80:	and	x8, x10, #0x1ff
  437d84:	tbnz	w10, #12, 437d90 <feof@plt+0x353c0>
  437d88:	add	w9, w9, #0x1
  437d8c:	b	437db8 <feof@plt+0x353e8>
  437d90:	mov	w10, #0xffffffff            	// #-1
  437d94:	lsl	w9, w10, w9
  437d98:	mvn	w9, w9
  437d9c:	and	x9, x9, x21, lsr #8
  437da0:	add	x8, x8, x9
  437da4:	add	x8, x26, x8, lsl #1
  437da8:	ldrh	w10, [x8, #512]
  437dac:	mov	w9, #0x8                   	// #8
  437db0:	and	w8, w10, #0x1ff
  437db4:	bfxil	w9, w10, #9, #3
  437db8:	sub	w24, w24, w9
  437dbc:	cmp	w8, #0xff
  437dc0:	lsr	x21, x21, x9
  437dc4:	b.hi	437ddc <feof@plt+0x3540c>  // b.pmore
  437dc8:	cmp	x23, x20
  437dcc:	b.eq	438328 <feof@plt+0x35958>  // b.none
  437dd0:	strb	w8, [x23], #1
  437dd4:	prfm	pstl1keep, [x23]
  437dd8:	b	437d4c <feof@plt+0x3537c>
  437ddc:	cmp	w8, #0x100
  437de0:	b.eq	437a8c <feof@plt+0x350bc>  // b.none
  437de4:	cmp	w8, #0x108
  437de8:	b.hi	437dfc <feof@plt+0x3542c>  // b.pmore
  437dec:	sub	w28, w8, #0xfe
  437df0:	cmp	w24, #0xe
  437df4:	b.ls	437e8c <feof@plt+0x354bc>  // b.plast
  437df8:	b	437eac <feof@plt+0x354dc>
  437dfc:	cmp	w8, #0x11d
  437e00:	b.ne	437e14 <feof@plt+0x35444>  // b.any
  437e04:	mov	w28, #0x102                 	// #258
  437e08:	cmp	w24, #0xe
  437e0c:	b.ls	437e8c <feof@plt+0x354bc>  // b.plast
  437e10:	b	437eac <feof@plt+0x354dc>
  437e14:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437e18:	cmp	w24, #0xe
  437e1c:	b.hi	437e40 <feof@plt+0x35470>  // b.pmore
  437e20:	sub	x9, x27, x25
  437e24:	cmp	x9, #0x4
  437e28:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437e2c:	ldr	w9, [x25], #4
  437e30:	lsl	x9, x9, x24
  437e34:	add	w24, w24, #0x20
  437e38:	orr	x21, x9, x21
  437e3c:	prfm	pldl1strm, [x25]
  437e40:	sub	w8, w8, #0x109
  437e44:	lsr	w9, w8, #2
  437e48:	mov	w11, #0xfffffff8            	// #-8
  437e4c:	mov	w12, #0x2                   	// #2
  437e50:	and	w8, w8, #0x3
  437e54:	add	w10, w9, #0x1
  437e58:	lsl	w11, w11, w9
  437e5c:	lsl	w9, w12, w9
  437e60:	lsl	w8, w8, w10
  437e64:	eor	w11, w11, #0xfffffff8
  437e68:	sub	w9, w9, #0x1
  437e6c:	add	w8, w8, w11
  437e70:	and	w9, w9, w21
  437e74:	add	w8, w8, w9
  437e78:	lsr	x21, x21, x10
  437e7c:	add	w28, w8, #0xb
  437e80:	sub	w24, w24, w10
  437e84:	cmp	w24, #0xe
  437e88:	b.hi	437eac <feof@plt+0x354dc>  // b.pmore
  437e8c:	sub	x8, x27, x25
  437e90:	cmp	x8, #0x4
  437e94:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437e98:	ldr	w8, [x25], #4
  437e9c:	lsl	x8, x8, x24
  437ea0:	add	w24, w24, #0x20
  437ea4:	orr	x21, x8, x21
  437ea8:	prfm	pldl1strm, [x25]
  437eac:	and	x8, x21, #0xff
  437eb0:	ldrh	w10, [x13, x8, lsl #1]
  437eb4:	ubfx	w9, w10, #9, #3
  437eb8:	and	x8, x10, #0x1ff
  437ebc:	tbnz	w10, #12, 437ec8 <feof@plt+0x354f8>
  437ec0:	add	w9, w9, #0x1
  437ec4:	b	437ef0 <feof@plt+0x35520>
  437ec8:	mov	w10, #0xffffffff            	// #-1
  437ecc:	lsl	w9, w10, w9
  437ed0:	mvn	w9, w9
  437ed4:	and	x9, x9, x21, lsr #8
  437ed8:	add	x8, x8, x9
  437edc:	add	x8, x13, x8, lsl #1
  437ee0:	ldrh	w10, [x8, #512]
  437ee4:	mov	w9, #0x8                   	// #8
  437ee8:	and	w8, w10, #0x1ff
  437eec:	bfxil	w9, w10, #9, #3
  437ef0:	sub	w24, w24, w9
  437ef4:	lsr	x21, x21, x9
  437ef8:	cbz	w8, 437f14 <feof@plt+0x35544>
  437efc:	cmp	w8, #0x1d
  437f00:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437f04:	cmp	w8, #0x3
  437f08:	b.hi	437f48 <feof@plt+0x35578>  // b.pmore
  437f0c:	add	w27, w8, #0x1
  437f10:	b	437fb4 <feof@plt+0x355e4>
  437f14:	cmp	x23, x19
  437f18:	b.eq	438328 <feof@plt+0x35958>  // b.none
  437f1c:	sub	w8, w20, w23
  437f20:	cmp	w28, w8
  437f24:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437f28:	ldurb	w1, [x23, #-1]
  437f2c:	mov	w22, w28
  437f30:	mov	x0, x23
  437f34:	mov	x2, x22
  437f38:	bl	4024e0 <memset@plt>
  437f3c:	ldur	x13, [x29, #-32]
  437f40:	add	x23, x23, x22
  437f44:	b	437d4c <feof@plt+0x3537c>
  437f48:	cmp	w24, #0xe
  437f4c:	b.hi	437f70 <feof@plt+0x355a0>  // b.pmore
  437f50:	sub	x9, x27, x25
  437f54:	cmp	x9, #0x4
  437f58:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  437f5c:	ldr	w9, [x25], #4
  437f60:	lsl	x9, x9, x24
  437f64:	add	w24, w24, #0x20
  437f68:	orr	x21, x9, x21
  437f6c:	prfm	pldl1strm, [x25]
  437f70:	sub	w8, w8, #0x4
  437f74:	lsr	w9, w8, #1
  437f78:	mov	w11, #0xfffffffc            	// #-4
  437f7c:	mov	w12, #0x2                   	// #2
  437f80:	and	w8, w8, #0x1
  437f84:	add	w10, w9, #0x1
  437f88:	lsl	w11, w11, w9
  437f8c:	lsl	w9, w12, w9
  437f90:	lsl	w8, w8, w10
  437f94:	eor	w11, w11, #0xfffffffc
  437f98:	sub	w9, w9, #0x1
  437f9c:	add	w8, w8, w11
  437fa0:	and	w9, w9, w21
  437fa4:	add	w8, w8, w9
  437fa8:	lsr	x21, x21, x10
  437fac:	add	w27, w8, #0x5
  437fb0:	sub	w24, w24, w10
  437fb4:	sub	w8, w23, w19
  437fb8:	cmp	w27, w8
  437fbc:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437fc0:	sub	w8, w20, w23
  437fc4:	cmp	w28, w8
  437fc8:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  437fcc:	mov	x8, xzr
  437fd0:	mov	x20, x19
  437fd4:	cmp	w27, w28
  437fd8:	sub	x19, x8, w27, uxtw
  437fdc:	b.cs	437d28 <feof@plt+0x35358>  // b.hs, b.nlast
  437fe0:	cmp	w28, w27
  437fe4:	csel	w22, w28, w27, cc  // cc = lo, ul, last
  437fe8:	add	x1, x23, x19
  437fec:	mov	x0, x23
  437ff0:	mov	x2, x22
  437ff4:	bl	402390 <memcpy@plt>
  437ff8:	subs	w28, w28, w22
  437ffc:	add	x23, x23, x22
  438000:	b.ne	437fe0 <feof@plt+0x35610>  // b.any
  438004:	b	437d40 <feof@plt+0x35370>
  438008:	strb	w8, [x24], #1
  43800c:	cmp	x24, x20
  438010:	b.cs	437cdc <feof@plt+0x3530c>  // b.hs, b.nlast
  438014:	cmp	w28, #0xe
  438018:	b.hi	43803c <feof@plt+0x3566c>  // b.pmore
  43801c:	sub	x8, x27, x25
  438020:	cmp	x8, #0x4
  438024:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  438028:	ldr	w8, [x25], #4
  43802c:	lsl	x8, x8, x28
  438030:	add	w28, w28, #0x20
  438034:	orr	x21, x8, x21
  438038:	prfm	pldl1strm, [x25]
  43803c:	and	x8, x21, #0xff
  438040:	ldrh	w8, [x26, x8, lsl #1]
  438044:	tbnz	w8, #12, 438328 <feof@plt+0x35958>
  438048:	ubfx	x9, x8, #9, #3
  43804c:	add	x9, x9, #0x1
  438050:	tst	w8, #0x1f0
  438054:	lsr	x21, x21, x9
  438058:	sub	w28, w28, w9
  43805c:	b.eq	438008 <feof@plt+0x35638>  // b.none
  438060:	and	w8, w8, #0x1ff
  438064:	cmp	w8, #0x12
  438068:	b.eq	4380e4 <feof@plt+0x35714>  // b.none
  43806c:	cmp	w8, #0x11
  438070:	b.eq	438118 <feof@plt+0x35748>  // b.none
  438074:	cmp	w8, #0x10
  438078:	b.ne	438328 <feof@plt+0x35958>  // b.any
  43807c:	ldr	x8, [sp, #48]
  438080:	cmp	x24, x8
  438084:	b.eq	438328 <feof@plt+0x35958>  // b.none
  438088:	and	w9, w21, #0x3
  43808c:	add	w8, w9, #0x3
  438090:	sub	w10, w20, w24
  438094:	cmp	w8, w10
  438098:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  43809c:	ldurb	w8, [x24, #-1]
  4380a0:	lsr	x21, x21, #2
  4380a4:	cmp	w9, #0x1
  4380a8:	sub	w28, w28, #0x2
  4380ac:	b.eq	4380c8 <feof@plt+0x356f8>  // b.none
  4380b0:	cmp	w9, #0x2
  4380b4:	b.eq	4380c4 <feof@plt+0x356f4>  // b.none
  4380b8:	cmp	w9, #0x3
  4380bc:	b.ne	4380cc <feof@plt+0x356fc>  // b.any
  4380c0:	strb	w8, [x24], #1
  4380c4:	strb	w8, [x24], #1
  4380c8:	strb	w8, [x24], #1
  4380cc:	add	x9, x24, #0x3
  4380d0:	strb	w8, [x24]
  4380d4:	strb	w8, [x24, #1]
  4380d8:	strb	w8, [x24, #2]
  4380dc:	mov	x24, x9
  4380e0:	b	43800c <feof@plt+0x3563c>
  4380e4:	and	w8, w21, #0x7f
  4380e8:	add	w22, w8, #0xb
  4380ec:	sub	w8, w20, w24
  4380f0:	cmp	w22, w8
  4380f4:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  4380f8:	mov	x0, x24
  4380fc:	mov	w1, wzr
  438100:	mov	x2, x22
  438104:	sub	w28, w28, #0x7
  438108:	lsr	x21, x21, #7
  43810c:	bl	4024e0 <memset@plt>
  438110:	add	x24, x24, x22
  438114:	b	43800c <feof@plt+0x3563c>
  438118:	and	w8, w21, #0x7
  43811c:	add	w9, w8, #0x3
  438120:	sub	w10, w20, w24
  438124:	cmp	w9, w10
  438128:	b.hi	438328 <feof@plt+0x35958>  // b.pmore
  43812c:	sub	w8, w8, #0x1
  438130:	lsr	x21, x21, #3
  438134:	cmp	w8, #0x6
  438138:	sub	w28, w28, #0x3
  43813c:	b.hi	438174 <feof@plt+0x357a4>  // b.pmore
  438140:	adrp	x11, 45e000 <_obstack_memory_used@@Base+0xda68>
  438144:	add	x11, x11, #0xf2c
  438148:	adr	x9, 438158 <feof@plt+0x35788>
  43814c:	ldrb	w10, [x11, x8]
  438150:	add	x9, x9, x10, lsl #2
  438154:	br	x9
  438158:	strb	wzr, [x24], #1
  43815c:	strb	wzr, [x24], #1
  438160:	strb	wzr, [x24], #1
  438164:	strb	wzr, [x24], #1
  438168:	strb	wzr, [x24], #1
  43816c:	strb	wzr, [x24], #1
  438170:	strb	wzr, [x24], #1
  438174:	add	x8, x24, #0x3
  438178:	strh	wzr, [x24]
  43817c:	strb	wzr, [x24, #2]
  438180:	mov	x24, x8
  438184:	b	43800c <feof@plt+0x3563c>
  438188:	ubfx	w9, w21, #3, #3
  43818c:	cmp	w8, #0x7
  438190:	sturb	w9, [x29, #-15]
  438194:	b.ne	4381a4 <feof@plt+0x357d4>  // b.any
  438198:	lsr	x21, x21, #6
  43819c:	sub	w28, w28, #0x6
  4381a0:	b	437ca0 <feof@plt+0x352d0>
  4381a4:	ubfx	w9, w21, #6, #3
  4381a8:	cmp	w8, #0x8
  4381ac:	sturb	w9, [x29, #-18]
  4381b0:	b.ne	4381c0 <feof@plt+0x357f0>  // b.any
  4381b4:	lsr	x21, x21, #9
  4381b8:	sub	w28, w28, #0x9
  4381bc:	b	437ca0 <feof@plt+0x352d0>
  4381c0:	ubfx	w9, w21, #9, #3
  4381c4:	cmp	w8, #0x9
  4381c8:	sturb	w9, [x29, #-14]
  4381cc:	b.ne	4381dc <feof@plt+0x3580c>  // b.any
  4381d0:	lsr	x21, x21, #12
  4381d4:	sub	w28, w28, #0xc
  4381d8:	b	437ca0 <feof@plt+0x352d0>
  4381dc:	ubfx	w9, w21, #12, #3
  4381e0:	lsr	x21, x21, #15
  4381e4:	cmp	w8, #0xa
  4381e8:	sturb	w9, [x29, #-19]
  4381ec:	sub	w9, w28, #0xf
  4381f0:	b.ne	4381fc <feof@plt+0x3582c>  // b.any
  4381f4:	mov	w28, w9
  4381f8:	b	437ca0 <feof@plt+0x352d0>
  4381fc:	cmp	w9, #0xe
  438200:	b.hi	438224 <feof@plt+0x35854>  // b.pmore
  438204:	sub	x10, x27, x25
  438208:	cmp	x10, #0x4
  43820c:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  438210:	ldr	w10, [x25], #4
  438214:	lsl	x10, x10, x9
  438218:	add	w9, w28, #0x11
  43821c:	orr	x21, x10, x21
  438220:	prfm	pldl1strm, [x25]
  438224:	and	w10, w21, #0x7
  438228:	cmp	w8, #0xb
  43822c:	sturb	w10, [x29, #-13]
  438230:	b.ne	438240 <feof@plt+0x35870>  // b.any
  438234:	lsr	x21, x21, #3
  438238:	sub	w28, w9, #0x3
  43823c:	b	437ca0 <feof@plt+0x352d0>
  438240:	ubfx	w10, w21, #3, #3
  438244:	cmp	w8, #0xc
  438248:	sturb	w10, [x29, #-20]
  43824c:	b.ne	43825c <feof@plt+0x3588c>  // b.any
  438250:	lsr	x21, x21, #6
  438254:	sub	w28, w9, #0x6
  438258:	b	437ca0 <feof@plt+0x352d0>
  43825c:	ubfx	w10, w21, #6, #3
  438260:	cmp	w8, #0xd
  438264:	sturb	w10, [x29, #-12]
  438268:	b.ne	438278 <feof@plt+0x358a8>  // b.any
  43826c:	lsr	x21, x21, #9
  438270:	sub	w28, w9, #0x9
  438274:	b	437ca0 <feof@plt+0x352d0>
  438278:	ubfx	w10, w21, #9, #3
  43827c:	cmp	w8, #0xe
  438280:	sturb	w10, [x29, #-21]
  438284:	b.ne	438290 <feof@plt+0x358c0>  // b.any
  438288:	lsr	x21, x21, #12
  43828c:	b	437c9c <feof@plt+0x352cc>
  438290:	ubfx	w10, w21, #12, #3
  438294:	lsr	x21, x21, #15
  438298:	cmp	w8, #0xf
  43829c:	sub	w28, w9, #0xf
  4382a0:	sturb	w10, [x29, #-11]
  4382a4:	b.eq	437ca0 <feof@plt+0x352d0>  // b.none
  4382a8:	cmp	w28, #0xe
  4382ac:	b.hi	4382d0 <feof@plt+0x35900>  // b.pmore
  4382b0:	sub	x10, x27, x25
  4382b4:	cmp	x10, #0x4
  4382b8:	b.lt	438328 <feof@plt+0x35958>  // b.tstop
  4382bc:	ldr	w10, [x25], #4
  4382c0:	lsl	x10, x10, x28
  4382c4:	add	w28, w9, #0x11
  4382c8:	orr	x21, x10, x21
  4382cc:	prfm	pldl1strm, [x25]
  4382d0:	and	w9, w21, #0x7
  4382d4:	cmp	w8, #0x10
  4382d8:	sturb	w9, [x29, #-22]
  4382dc:	b.eq	437bd8 <feof@plt+0x35208>  // b.none
  4382e0:	ubfx	w9, w21, #3, #3
  4382e4:	cmp	w8, #0x11
  4382e8:	sturb	w9, [x29, #-10]
  4382ec:	b.eq	438198 <feof@plt+0x357c8>  // b.none
  4382f0:	ubfx	w9, w21, #6, #3
  4382f4:	cmp	w8, #0x12
  4382f8:	sturb	w9, [x29, #-23]
  4382fc:	b.eq	4381b4 <feof@plt+0x357e4>  // b.none
  438300:	ubfx	w8, w21, #9, #3
  438304:	lsr	x21, x21, #12
  438308:	sturb	w8, [x29, #-9]
  43830c:	b	4381d4 <feof@plt+0x35804>
  438310:	ldr	x4, [sp]
  438314:	sub	x8, x27, x25
  438318:	cmp	x8, #0x5
  43831c:	b.ge	437a0c <feof@plt+0x3503c>  // b.tcont
  438320:	cmp	x23, x20
  438324:	b.eq	43834c <feof@plt+0x3597c>  // b.none
  438328:	mov	w0, wzr
  43832c:	ldp	x20, x19, [sp, #192]
  438330:	ldp	x22, x21, [sp, #176]
  438334:	ldp	x24, x23, [sp, #160]
  438338:	ldp	x26, x25, [sp, #144]
  43833c:	ldp	x28, x27, [sp, #128]
  438340:	ldp	x29, x30, [sp, #112]
  438344:	add	sp, sp, #0xd0
  438348:	ret
  43834c:	ldur	w8, [x27, #-4]
  438350:	lsr	x9, x4, #4
  438354:	cmp	x9, #0x15b
  438358:	b.cc	438578 <feof@plt+0x35ba8>  // b.lo, b.ul, b.last
  43835c:	mov	w13, #0x8071                	// #32881
  438360:	mov	w9, wzr
  438364:	mov	w10, #0x1                   	// #1
  438368:	mov	w11, #0x15b0                	// #5552
  43836c:	mov	x12, #0xffffffffffffea50    	// #-5552
  438370:	movk	w13, #0x8007, lsl #16
  438374:	mov	w14, #0xfff1                	// #65521
  438378:	mov	x15, xzr
  43837c:	add	x16, x19, x15
  438380:	ldrb	w17, [x16]
  438384:	ldrb	w18, [x16, #1]
  438388:	add	x15, x15, #0x10
  43838c:	add	w10, w10, w17
  438390:	ldrb	w17, [x16, #2]
  438394:	add	w9, w10, w9
  438398:	add	w10, w10, w18
  43839c:	ldrb	w18, [x16, #3]
  4383a0:	add	w9, w9, w10
  4383a4:	add	w10, w10, w17
  4383a8:	ldrb	w17, [x16, #4]
  4383ac:	add	w9, w9, w10
  4383b0:	add	w10, w10, w18
  4383b4:	ldrb	w18, [x16, #5]
  4383b8:	add	w9, w9, w10
  4383bc:	add	w10, w10, w17
  4383c0:	ldrb	w17, [x16, #6]
  4383c4:	add	w9, w9, w10
  4383c8:	add	w10, w10, w18
  4383cc:	ldrb	w18, [x16, #7]
  4383d0:	add	w9, w9, w10
  4383d4:	add	w10, w10, w17
  4383d8:	ldrb	w17, [x16, #8]
  4383dc:	add	w9, w9, w10
  4383e0:	add	w10, w10, w18
  4383e4:	ldrb	w18, [x16, #9]
  4383e8:	add	w9, w9, w10
  4383ec:	add	w10, w10, w17
  4383f0:	ldrb	w17, [x16, #10]
  4383f4:	add	w9, w9, w10
  4383f8:	add	w10, w10, w18
  4383fc:	ldrb	w18, [x16, #11]
  438400:	add	w9, w9, w10
  438404:	add	w10, w10, w17
  438408:	ldrb	w17, [x16, #12]
  43840c:	add	w9, w9, w10
  438410:	add	w10, w10, w18
  438414:	ldrb	w18, [x16, #13]
  438418:	add	w9, w9, w10
  43841c:	add	w10, w10, w17
  438420:	ldrb	w17, [x16, #14]
  438424:	ldrb	w16, [x16, #15]
  438428:	add	w9, w9, w10
  43842c:	add	w10, w10, w18
  438430:	add	w9, w9, w10
  438434:	add	w10, w10, w17
  438438:	sub	w17, w15, #0x10
  43843c:	lsr	w17, w17, #5
  438440:	add	w9, w9, w10
  438444:	add	w10, w10, w16
  438448:	cmp	w17, #0xad
  43844c:	add	w9, w9, w10
  438450:	b.cc	43837c <feof@plt+0x359ac>  // b.lo, b.ul, b.last
  438454:	add	x4, x4, x12
  438458:	umull	x15, w10, w13
  43845c:	umull	x16, w9, w13
  438460:	lsr	x15, x15, #47
  438464:	lsr	x16, x16, #47
  438468:	lsr	x17, x4, #4
  43846c:	add	x19, x19, x11
  438470:	msub	w10, w15, w14, w10
  438474:	cmp	x17, #0x15a
  438478:	msub	w9, w16, w14, w9
  43847c:	b.hi	438378 <feof@plt+0x359a8>  // b.pmore
  438480:	subs	x11, x4, #0x10
  438484:	b.cc	438588 <feof@plt+0x35bb8>  // b.lo, b.ul, b.last
  438488:	and	x12, x11, #0xfffffffffffffff0
  43848c:	add	x13, x12, #0x10
  438490:	mov	x14, x19
  438494:	ldrb	w15, [x14]
  438498:	ldrb	w16, [x14, #1]
  43849c:	sub	x4, x4, #0x10
  4384a0:	cmp	x4, #0xf
  4384a4:	add	w10, w10, w15
  4384a8:	ldrb	w15, [x14, #2]
  4384ac:	add	w9, w10, w9
  4384b0:	add	w10, w10, w16
  4384b4:	ldrb	w16, [x14, #3]
  4384b8:	add	w9, w9, w10
  4384bc:	add	w10, w10, w15
  4384c0:	ldrb	w15, [x14, #4]
  4384c4:	add	w9, w9, w10
  4384c8:	add	w10, w10, w16
  4384cc:	ldrb	w16, [x14, #5]
  4384d0:	add	w9, w9, w10
  4384d4:	add	w10, w10, w15
  4384d8:	ldrb	w15, [x14, #6]
  4384dc:	add	w9, w9, w10
  4384e0:	add	w10, w10, w16
  4384e4:	ldrb	w16, [x14, #7]
  4384e8:	add	w9, w9, w10
  4384ec:	add	w10, w10, w15
  4384f0:	ldrb	w15, [x14, #8]
  4384f4:	add	w9, w9, w10
  4384f8:	add	w10, w10, w16
  4384fc:	ldrb	w16, [x14, #9]
  438500:	add	w9, w9, w10
  438504:	add	w10, w10, w15
  438508:	ldrb	w15, [x14, #10]
  43850c:	add	w9, w9, w10
  438510:	add	w10, w10, w16
  438514:	ldrb	w16, [x14, #11]
  438518:	add	w9, w9, w10
  43851c:	add	w10, w10, w15
  438520:	ldrb	w15, [x14, #12]
  438524:	add	w9, w9, w10
  438528:	add	w10, w10, w16
  43852c:	ldrb	w16, [x14, #13]
  438530:	add	w9, w9, w10
  438534:	add	w10, w10, w15
  438538:	ldrb	w15, [x14, #14]
  43853c:	add	w9, w9, w10
  438540:	add	w10, w10, w16
  438544:	add	w9, w9, w10
  438548:	add	w10, w10, w15
  43854c:	ldrb	w15, [x14, #15]
  438550:	add	w9, w9, w10
  438554:	add	x14, x14, #0x10
  438558:	add	w10, w10, w15
  43855c:	add	w9, w9, w10
  438560:	b.hi	438494 <feof@plt+0x35ac4>  // b.pmore
  438564:	add	x19, x19, x13
  438568:	sub	x4, x11, x12
  43856c:	rev	w8, w8
  438570:	cbnz	x4, 438590 <feof@plt+0x35bc0>
  438574:	b	4385ac <feof@plt+0x35bdc>
  438578:	mov	w9, wzr
  43857c:	mov	w10, #0x1                   	// #1
  438580:	subs	x11, x4, #0x10
  438584:	b.cs	438488 <feof@plt+0x35ab8>  // b.hs, b.nlast
  438588:	rev	w8, w8
  43858c:	cbz	x4, 4385ac <feof@plt+0x35bdc>
  438590:	mov	x11, xzr
  438594:	ldrb	w12, [x19, x11]
  438598:	add	x11, x11, #0x1
  43859c:	cmp	x4, w11, uxtw
  4385a0:	add	w10, w10, w12
  4385a4:	add	w9, w10, w9
  4385a8:	b.hi	438594 <feof@plt+0x35bc4>  // b.pmore
  4385ac:	mov	w11, #0x8071                	// #32881
  4385b0:	movk	w11, #0x8007, lsl #16
  4385b4:	umull	x13, w10, w11
  4385b8:	umull	x11, w9, w11
  4385bc:	mov	w12, #0xfff1                	// #65521
  4385c0:	lsr	x13, x13, #47
  4385c4:	lsr	x11, x11, #47
  4385c8:	msub	w10, w13, w12, w10
  4385cc:	msub	w9, w11, w12, w9
  4385d0:	orr	w9, w10, w9, lsl #16
  4385d4:	cmp	w9, w8
  4385d8:	cset	w0, eq  // eq = none
  4385dc:	b	43832c <feof@plt+0x3595c>
  4385e0:	sub	sp, sp, #0xc0
  4385e4:	stp	x29, x30, [sp, #112]
  4385e8:	str	x25, [sp, #128]
  4385ec:	stp	x24, x23, [sp, #144]
  4385f0:	stp	x22, x21, [sp, #160]
  4385f4:	stp	x20, x19, [sp, #176]
  4385f8:	add	x29, sp, #0x70
  4385fc:	mov	x19, x3
  438600:	add	x20, x2, #0x1, lsl #12
  438604:	movi	v0.2d, #0x0
  438608:	stp	q0, q0, [x29, #-32]
  43860c:	cbz	x1, 438670 <feof@plt+0x35ca0>
  438610:	mov	x8, xzr
  438614:	sub	x9, x29, #0x20
  438618:	add	x10, sp, #0x30
  43861c:	add	x11, sp, #0x10
  438620:	b	438650 <feof@plt+0x35c80>
  438624:	ldrh	w12, [x11, x12, lsl #1]
  438628:	strh	w8, [x20, x12, lsl #1]
  43862c:	ldrb	w12, [x0, x8]
  438630:	lsl	x14, x12, #1
  438634:	ldrh	w13, [x9, x14]
  438638:	strh	w8, [x11, x14]
  43863c:	add	x8, x8, #0x1
  438640:	add	w13, w13, #0x1
  438644:	cmp	x1, x8
  438648:	strh	w13, [x9, x12, lsl #1]
  43864c:	b.eq	438670 <feof@plt+0x35ca0>  // b.none
  438650:	ldrb	w12, [x0, x8]
  438654:	cmp	x12, #0xf
  438658:	b.hi	438928 <feof@plt+0x35f58>  // b.pmore
  43865c:	ldrh	w13, [x9, x12, lsl #1]
  438660:	cbnz	w13, 438624 <feof@plt+0x35c54>
  438664:	lsl	x14, x12, #1
  438668:	strh	w8, [x10, x14]
  43866c:	b	438638 <feof@plt+0x35c68>
  438670:	mov	w2, #0x800                 	// #2048
  438674:	mov	x0, x19
  438678:	mov	w1, wzr
  43867c:	bl	4024e0 <memset@plt>
  438680:	mov	w8, wzr
  438684:	mov	w9, #0x1                   	// #1
  438688:	sub	x10, x29, #0x20
  43868c:	add	x11, sp, #0x30
  438690:	mov	w12, #0x1                   	// #1
  438694:	b	4386a4 <feof@plt+0x35cd4>
  438698:	add	x12, x12, #0x1
  43869c:	cmp	x12, #0x9
  4386a0:	b.eq	438748 <feof@plt+0x35d78>  // b.none
  4386a4:	ldrh	w13, [x10, x12, lsl #1]
  4386a8:	cbz	w13, 438698 <feof@plt+0x35cc8>
  4386ac:	lsl	w17, w9, w12
  4386b0:	cmp	w17, w13
  4386b4:	b.cc	438928 <feof@plt+0x35f58>  // b.lo, b.ul, b.last
  4386b8:	ldrh	w15, [x11, x12, lsl #1]
  4386bc:	sub	x18, x12, #0x1
  4386c0:	mov	x14, xzr
  4386c4:	lsl	x16, x18, #9
  4386c8:	sxtw	x17, w17
  4386cc:	lsl	w18, w9, w18
  4386d0:	cmp	w15, #0x1ff
  4386d4:	b.hi	438928 <feof@plt+0x35f58>  // b.pmore
  4386d8:	cmp	w8, #0xff
  4386dc:	b.hi	438700 <feof@plt+0x35d30>  // b.pmore
  4386e0:	orr	w0, w16, w15
  4386e4:	mov	w1, w8
  4386e8:	ldrh	w2, [x19, x1, lsl #1]
  4386ec:	cbnz	w2, 438928 <feof@plt+0x35f58>
  4386f0:	strh	w0, [x19, x1, lsl #1]
  4386f4:	add	x1, x1, x17
  4386f8:	cmp	x1, #0x100
  4386fc:	b.cc	4386e8 <feof@plt+0x35d18>  // b.lo, b.ul, b.last
  438700:	add	x14, x14, #0x1
  438704:	cmp	x14, x13
  438708:	b.cs	438714 <feof@plt+0x35d44>  // b.hs, b.nlast
  43870c:	mov	w15, w15
  438710:	ldrh	w15, [x20, x15, lsl #1]
  438714:	mov	w1, w18
  438718:	mov	w0, w1
  43871c:	tst	w1, w8
  438720:	lsr	w1, w1, #1
  438724:	b.ne	438718 <feof@plt+0x35d48>  // b.any
  438728:	sub	w1, w0, #0x1
  43872c:	and	w8, w1, w8
  438730:	cmp	w0, #0x0
  438734:	add	w8, w8, w0
  438738:	csel	w8, wzr, w8, eq  // eq = none
  43873c:	cmp	x14, x13
  438740:	b.ne	4386d0 <feof@plt+0x35d00>  // b.any
  438744:	b	438698 <feof@plt+0x35cc8>
  438748:	mov	w9, #0x9                   	// #9
  43874c:	sub	x10, x29, #0x20
  438750:	mov	x11, sp
  438754:	mov	w12, #0x1                   	// #1
  438758:	b	43876c <feof@plt+0x35d9c>
  43875c:	cbnz	w13, 438928 <feof@plt+0x35f58>
  438760:	add	x9, x9, #0x1
  438764:	cmp	x9, #0x10
  438768:	b.eq	4387d8 <feof@plt+0x35e08>  // b.none
  43876c:	ldrh	w13, [x10, x9, lsl #1]
  438770:	cbz	w13, 438760 <feof@plt+0x35d90>
  438774:	mov	x14, xzr
  438778:	add	x15, x11, x9, lsl #1
  43877c:	sturh	w8, [x15, #-18]
  438780:	b	438798 <feof@plt+0x35dc8>
  438784:	add	w8, w17, w8
  438788:	bic	w13, w13, w15
  43878c:	add	w14, w14, #0x1
  438790:	cmp	x9, x14
  438794:	b.ls	43875c <feof@plt+0x35d8c>  // b.plast
  438798:	lsl	w15, w12, w14
  43879c:	tst	w15, w13
  4387a0:	b.eq	43878c <feof@plt+0x35dbc>  // b.none
  4387a4:	subs	x16, x9, x14
  4387a8:	b.eq	438788 <feof@plt+0x35db8>  // b.none
  4387ac:	sub	w17, w16, #0x1
  4387b0:	mov	w18, #0x1                   	// #1
  4387b4:	lsl	w17, w18, w17
  4387b8:	tst	w17, w8
  4387bc:	b.eq	438784 <feof@plt+0x35db4>  // b.none
  4387c0:	bic	w8, w8, w17
  4387c4:	cmp	x16, w18, uxtw
  4387c8:	add	w18, w18, #0x1
  4387cc:	lsr	w17, w17, #1
  4387d0:	b.hi	4387b8 <feof@plt+0x35de8>  // b.pmore
  4387d4:	b	438788 <feof@plt+0x35db8>
  4387d8:	mov	x21, xzr
  4387dc:	add	x8, x19, #0x200
  4387e0:	mov	w9, #0xf                   	// #15
  4387e4:	sub	x10, x29, #0x20
  4387e8:	add	x11, sp, #0x30
  4387ec:	mov	x12, sp
  4387f0:	mov	w13, #0x1                   	// #1
  4387f4:	b	43880c <feof@plt+0x35e3c>
  4387f8:	mov	x6, x21
  4387fc:	sub	x9, x9, #0x1
  438800:	cmp	x9, #0x8
  438804:	mov	x21, x6
  438808:	b.ls	438948 <feof@plt+0x35f78>  // b.plast
  43880c:	ldrh	w14, [x10, x9, lsl #1]
  438810:	cbz	x14, 4387f8 <feof@plt+0x35e28>
  438814:	lsl	x18, x9, #1
  438818:	add	x0, x18, x12
  43881c:	ldrh	w17, [x11, x18]
  438820:	ldurh	w1, [x0, #-18]
  438824:	sub	x16, x9, #0x8
  438828:	lsl	w18, w13, w16
  43882c:	sub	w3, w9, #0x1
  438830:	mov	x15, xzr
  438834:	mov	x4, xzr
  438838:	mov	x5, xzr
  43883c:	sxtw	x0, w18
  438840:	lsl	x2, x16, #9
  438844:	lsl	w3, w13, w3
  438848:	mov	w7, #0x100                 	// #256
  43884c:	and	w22, w1, #0xff
  438850:	cmp	x7, x22
  438854:	b.ne	438860 <feof@plt+0x35e90>  // b.any
  438858:	mov	x6, x21
  43885c:	b	4388ac <feof@plt+0x35edc>
  438860:	ldrh	w5, [x19, x22, lsl #1]
  438864:	cbz	w5, 438888 <feof@plt+0x35eb8>
  438868:	tbz	w5, #12, 438928 <feof@plt+0x35f58>
  43886c:	ubfx	x4, x5, #9, #3
  438870:	cmp	x16, x4
  438874:	b.hi	438928 <feof@plt+0x35f58>  // b.pmore
  438878:	and	x5, x5, #0x1ff
  43887c:	mov	x6, x21
  438880:	mov	x7, x22
  438884:	b	4388ac <feof@plt+0x35edc>
  438888:	cmp	x21, #0x1ff
  43888c:	b.hi	438928 <feof@plt+0x35f58>  // b.pmore
  438890:	add	w4, w21, w2
  438894:	add	w4, w4, #0x1, lsl #12
  438898:	add	x6, x21, x0
  43889c:	strh	w4, [x19, x22, lsl #1]
  4388a0:	mov	x7, x22
  4388a4:	mov	x5, x21
  4388a8:	mov	x4, x16
  4388ac:	lsr	w21, w1, #8
  4388b0:	lsl	w22, w13, w4
  4388b4:	cmp	w21, w22
  4388b8:	b.cs	4388dc <feof@plt+0x35f0c>  // b.hs, b.nlast
  4388bc:	orr	w23, w2, w17
  4388c0:	add	x24, x8, x5, lsl #1
  4388c4:	ldrh	w25, [x24, x21, lsl #1]
  4388c8:	cbnz	w25, 438928 <feof@plt+0x35f58>
  4388cc:	strh	w23, [x24, x21, lsl #1]
  4388d0:	add	x21, x21, x18
  4388d4:	cmp	x21, x22
  4388d8:	b.cc	4388c4 <feof@plt+0x35ef4>  // b.lo, b.ul, b.last
  4388dc:	add	x15, x15, #0x1
  4388e0:	cmp	x15, x14
  4388e4:	b.cs	4388f0 <feof@plt+0x35f20>  // b.hs, b.nlast
  4388e8:	mov	w17, w17
  4388ec:	ldrh	w17, [x20, x17, lsl #1]
  4388f0:	mov	w22, w3
  4388f4:	mov	w21, w22
  4388f8:	tst	w22, w1
  4388fc:	lsr	w22, w22, #1
  438900:	b.ne	4388f4 <feof@plt+0x35f24>  // b.any
  438904:	sub	w22, w21, #0x1
  438908:	and	w1, w22, w1
  43890c:	cmp	w21, #0x0
  438910:	add	w1, w1, w21
  438914:	csel	w1, wzr, w1, eq  // eq = none
  438918:	cmp	x15, x14
  43891c:	mov	x21, x6
  438920:	b.ne	43884c <feof@plt+0x35e7c>  // b.any
  438924:	b	4387fc <feof@plt+0x35e2c>
  438928:	mov	w0, wzr
  43892c:	ldp	x20, x19, [sp, #176]
  438930:	ldp	x22, x21, [sp, #160]
  438934:	ldp	x24, x23, [sp, #144]
  438938:	ldr	x25, [sp, #128]
  43893c:	ldp	x29, x30, [sp, #112]
  438940:	add	sp, sp, #0xc0
  438944:	ret
  438948:	mov	w0, #0x1                   	// #1
  43894c:	b	43892c <feof@plt+0x35f5c>
  438950:	sub	sp, sp, #0x120
  438954:	stp	x29, x30, [sp, #192]
  438958:	stp	x28, x27, [sp, #208]
  43895c:	stp	x26, x25, [sp, #224]
  438960:	stp	x24, x23, [sp, #240]
  438964:	stp	x22, x21, [sp, #256]
  438968:	stp	x20, x19, [sp, #272]
  43896c:	add	x29, sp, #0xc0
  438970:	mov	x24, x2
  438974:	mov	x22, x0
  438978:	add	x2, sp, #0x38
  43897c:	mov	w0, wzr
  438980:	mov	x19, x5
  438984:	mov	x20, x4
  438988:	mov	w21, w3
  43898c:	mov	x26, x1
  438990:	bl	402850 <__lxstat@plt>
  438994:	mov	x23, xzr
  438998:	str	w21, [sp, #20]
  43899c:	tbnz	w0, #31, 438b40 <feof@plt+0x36170>
  4389a0:	ldr	w8, [sp, #72]
  4389a4:	and	w8, w8, #0xf000
  4389a8:	cmp	w8, #0xa, lsl #12
  4389ac:	b.ne	438b40 <feof@plt+0x36170>  // b.any
  4389b0:	mov	x27, xzr
  4389b4:	mov	x23, xzr
  4389b8:	mov	w1, #0x80                  	// #128
  4389bc:	mov	x0, x22
  4389c0:	mov	x2, x20
  4389c4:	mov	x3, x19
  4389c8:	bl	435450 <feof@plt+0x32a80>
  4389cc:	cbz	x0, 438b60 <feof@plt+0x36190>
  4389d0:	mov	x28, x0
  4389d4:	mov	w25, #0x80                  	// #128
  4389d8:	mov	x0, x26
  4389dc:	mov	x1, x28
  4389e0:	mov	x2, x25
  4389e4:	bl	4023d0 <readlink@plt>
  4389e8:	tbnz	x0, #63, 438b48 <feof@plt+0x36178>
  4389ec:	sub	x8, x25, #0x1
  4389f0:	cmp	x0, x8
  4389f4:	b.cc	438a34 <feof@plt+0x36064>  // b.lo, b.ul, b.last
  4389f8:	mov	x0, x22
  4389fc:	mov	x1, x28
  438a00:	mov	x2, x25
  438a04:	mov	x3, x20
  438a08:	mov	x4, x19
  438a0c:	bl	435614 <feof@plt+0x32c44>
  438a10:	lsl	x25, x25, #1
  438a14:	mov	x0, x22
  438a18:	mov	x1, x25
  438a1c:	mov	x2, x20
  438a20:	mov	x3, x19
  438a24:	bl	435450 <feof@plt+0x32a80>
  438a28:	mov	x28, x0
  438a2c:	cbnz	x0, 4389d8 <feof@plt+0x36008>
  438a30:	b	438b60 <feof@plt+0x36190>
  438a34:	strb	wzr, [x28, x0]
  438a38:	ldrb	w8, [x28]
  438a3c:	cmp	w8, #0x2f
  438a40:	b.eq	438af0 <feof@plt+0x36120>  // b.none
  438a44:	mov	w1, #0x2f                  	// #47
  438a48:	mov	x0, x26
  438a4c:	bl	4027a0 <strrchr@plt>
  438a50:	cbz	x0, 438af0 <feof@plt+0x36120>
  438a54:	sub	x8, x0, x26
  438a58:	mov	x0, x28
  438a5c:	str	x24, [sp, #24]
  438a60:	add	x24, x8, #0x1
  438a64:	bl	402420 <strlen@plt>
  438a68:	add	x8, x24, x0
  438a6c:	add	x1, x8, #0x1
  438a70:	mov	x0, x22
  438a74:	mov	x2, x20
  438a78:	mov	x3, x19
  438a7c:	str	x1, [sp, #8]
  438a80:	bl	435450 <feof@plt+0x32a80>
  438a84:	cbz	x0, 438ec8 <feof@plt+0x364f8>
  438a88:	mov	x1, x26
  438a8c:	mov	x2, x24
  438a90:	mov	x21, x0
  438a94:	bl	402390 <memcpy@plt>
  438a98:	add	x8, x21, x24
  438a9c:	mov	x0, x28
  438aa0:	str	x8, [sp]
  438aa4:	bl	402420 <strlen@plt>
  438aa8:	mov	x26, x0
  438aac:	ldr	x0, [sp]
  438ab0:	mov	x1, x28
  438ab4:	mov	x2, x26
  438ab8:	bl	402390 <memcpy@plt>
  438abc:	add	x8, x26, x24
  438ac0:	mov	x0, x22
  438ac4:	mov	x1, x28
  438ac8:	mov	x2, x25
  438acc:	mov	x3, x20
  438ad0:	mov	x4, x19
  438ad4:	strb	wzr, [x21, x8]
  438ad8:	bl	435614 <feof@plt+0x32c44>
  438adc:	ldr	x25, [sp, #8]
  438ae0:	ldr	x24, [sp, #24]
  438ae4:	mov	x26, x21
  438ae8:	cbnz	x23, 438af8 <feof@plt+0x36128>
  438aec:	b	438b10 <feof@plt+0x36140>
  438af0:	mov	x26, x28
  438af4:	cbz	x23, 438b10 <feof@plt+0x36140>
  438af8:	mov	x0, x22
  438afc:	mov	x1, x23
  438b00:	mov	x2, x27
  438b04:	mov	x3, x20
  438b08:	mov	x4, x19
  438b0c:	bl	435614 <feof@plt+0x32c44>
  438b10:	add	x2, sp, #0x38
  438b14:	mov	w0, wzr
  438b18:	mov	x1, x26
  438b1c:	bl	402850 <__lxstat@plt>
  438b20:	tbnz	w0, #31, 438ec0 <feof@plt+0x364f0>
  438b24:	ldr	w8, [sp, #72]
  438b28:	mov	x27, x25
  438b2c:	mov	x23, x26
  438b30:	and	w8, w8, #0xf000
  438b34:	cmp	w8, #0xa, lsl #12
  438b38:	b.eq	4389b8 <feof@plt+0x35fe8>  // b.none
  438b3c:	b	438b64 <feof@plt+0x36194>
  438b40:	mov	x25, x23
  438b44:	b	438b64 <feof@plt+0x36194>
  438b48:	mov	x0, x22
  438b4c:	mov	x1, x28
  438b50:	mov	x2, x25
  438b54:	mov	x3, x20
  438b58:	mov	x4, x19
  438b5c:	bl	435614 <feof@plt+0x32c44>
  438b60:	mov	x25, x27
  438b64:	mov	w1, #0x2f                  	// #47
  438b68:	mov	x0, x26
  438b6c:	str	x23, [sp, #24]
  438b70:	bl	4027a0 <strrchr@plt>
  438b74:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0xaa68>
  438b78:	sub	x8, x0, x26
  438b7c:	add	x9, x9, #0xb34
  438b80:	cmp	x0, #0x0
  438b84:	mov	x0, x24
  438b88:	csel	x28, x9, x26, eq  // eq = none
  438b8c:	csinc	x27, xzr, x8, eq  // eq = none
  438b90:	bl	402420 <strlen@plt>
  438b94:	add	x23, x27, x0
  438b98:	mov	x26, x0
  438b9c:	add	x1, x23, #0x1
  438ba0:	mov	x0, x22
  438ba4:	mov	x2, x20
  438ba8:	mov	x3, x19
  438bac:	str	x1, [sp, #8]
  438bb0:	bl	435450 <feof@plt+0x32a80>
  438bb4:	mov	x21, x22
  438bb8:	mov	x22, x24
  438bbc:	str	x28, [sp]
  438bc0:	cbz	x0, 438c28 <feof@plt+0x36258>
  438bc4:	mov	x1, x28
  438bc8:	mov	x2, x27
  438bcc:	mov	x24, x0
  438bd0:	bl	402390 <memcpy@plt>
  438bd4:	add	x0, x24, x27
  438bd8:	mov	x1, x22
  438bdc:	mov	x2, x26
  438be0:	bl	402390 <memcpy@plt>
  438be4:	add	x3, sp, #0x38
  438be8:	mov	x0, x24
  438bec:	mov	x1, x20
  438bf0:	mov	x2, x19
  438bf4:	strb	wzr, [x24, x23]
  438bf8:	bl	435bd4 <feof@plt+0x33204>
  438bfc:	ldr	x2, [sp, #8]
  438c00:	mov	w26, w0
  438c04:	mov	x0, x21
  438c08:	mov	x1, x24
  438c0c:	mov	x3, x20
  438c10:	mov	x4, x19
  438c14:	bl	435614 <feof@plt+0x32c44>
  438c18:	mov	x28, x22
  438c1c:	mov	x22, x21
  438c20:	tbz	w26, #31, 438d90 <feof@plt+0x363c0>
  438c24:	b	438c30 <feof@plt+0x36260>
  438c28:	mov	x28, x22
  438c2c:	mov	x22, x21
  438c30:	mov	x0, x28
  438c34:	bl	402420 <strlen@plt>
  438c38:	add	x23, x27, x0
  438c3c:	add	x21, x23, #0x8
  438c40:	mov	x26, x0
  438c44:	mov	x0, x22
  438c48:	mov	x1, x21
  438c4c:	mov	x2, x20
  438c50:	mov	x3, x19
  438c54:	bl	435450 <feof@plt+0x32a80>
  438c58:	cbz	x0, 438cd4 <feof@plt+0x36304>
  438c5c:	ldr	x1, [sp]
  438c60:	mov	x2, x27
  438c64:	mov	x24, x0
  438c68:	add	x23, x23, #0x7
  438c6c:	bl	402390 <memcpy@plt>
  438c70:	add	x8, x24, x27
  438c74:	mov	w9, #0x642e                	// #25646
  438c78:	mov	w10, #0x7562                	// #30050
  438c7c:	movk	w9, #0x6265, lsl #16
  438c80:	movk	w10, #0x2f67, lsl #16
  438c84:	add	x0, x8, #0x7
  438c88:	mov	x1, x28
  438c8c:	mov	x2, x26
  438c90:	str	w9, [x8]
  438c94:	stur	w10, [x8, #3]
  438c98:	bl	402390 <memcpy@plt>
  438c9c:	add	x3, sp, #0x38
  438ca0:	mov	x0, x24
  438ca4:	mov	x1, x20
  438ca8:	mov	x2, x19
  438cac:	strb	wzr, [x24, x23]
  438cb0:	bl	435bd4 <feof@plt+0x33204>
  438cb4:	mov	w26, w0
  438cb8:	mov	x0, x22
  438cbc:	mov	x1, x24
  438cc0:	mov	x2, x21
  438cc4:	mov	x3, x20
  438cc8:	mov	x4, x19
  438ccc:	bl	435614 <feof@plt+0x32c44>
  438cd0:	tbz	w26, #31, 438d90 <feof@plt+0x363c0>
  438cd4:	mov	x0, x28
  438cd8:	bl	402420 <strlen@plt>
  438cdc:	add	x23, x27, x0
  438ce0:	add	x21, x23, #0x10
  438ce4:	mov	x26, x0
  438ce8:	mov	x0, x22
  438cec:	mov	x1, x21
  438cf0:	mov	x2, x20
  438cf4:	mov	x3, x19
  438cf8:	bl	435450 <feof@plt+0x32a80>
  438cfc:	cbz	x0, 438d8c <feof@plt+0x363bc>
  438d00:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0xea68>
  438d04:	add	x8, x8, #0xa21
  438d08:	ldur	x9, [x8, #7]
  438d0c:	ldr	x8, [x8]
  438d10:	ldr	x1, [sp]
  438d14:	add	x10, x23, #0xf
  438d18:	add	x23, x0, #0xf
  438d1c:	mov	x24, x0
  438d20:	stur	x9, [x0, #7]
  438d24:	str	x8, [x0]
  438d28:	mov	x0, x23
  438d2c:	mov	x2, x27
  438d30:	str	x10, [sp, #8]
  438d34:	bl	402390 <memcpy@plt>
  438d38:	add	x0, x23, x27
  438d3c:	mov	x1, x28
  438d40:	mov	x2, x26
  438d44:	bl	402390 <memcpy@plt>
  438d48:	ldr	x8, [sp, #8]
  438d4c:	add	x3, sp, #0x38
  438d50:	mov	x0, x24
  438d54:	mov	x1, x20
  438d58:	mov	x2, x19
  438d5c:	strb	wzr, [x24, x8]
  438d60:	bl	435bd4 <feof@plt+0x33204>
  438d64:	mov	w23, w0
  438d68:	mov	x0, x22
  438d6c:	mov	x1, x24
  438d70:	mov	x2, x21
  438d74:	mov	x3, x20
  438d78:	mov	x4, x19
  438d7c:	bl	435614 <feof@plt+0x32c44>
  438d80:	cmp	w23, #0x0
  438d84:	csinv	w26, w23, wzr, ge  // ge = tcont
  438d88:	b	438d90 <feof@plt+0x363c0>
  438d8c:	mov	w26, #0xffffffff            	// #-1
  438d90:	ldr	x23, [sp, #24]
  438d94:	mov	x27, x25
  438d98:	cbz	x23, 438db8 <feof@plt+0x363e8>
  438d9c:	cbz	x27, 438db8 <feof@plt+0x363e8>
  438da0:	mov	x0, x22
  438da4:	mov	x1, x23
  438da8:	mov	x2, x27
  438dac:	mov	x3, x20
  438db0:	mov	x4, x19
  438db4:	bl	435614 <feof@plt+0x32c44>
  438db8:	tbnz	w26, #31, 438e98 <feof@plt+0x364c8>
  438dbc:	ldr	w23, [sp, #20]
  438dc0:	cbz	w23, 438e9c <feof@plt+0x364cc>
  438dc4:	add	x2, sp, #0x38
  438dc8:	mov	w0, wzr
  438dcc:	mov	w1, w26
  438dd0:	bl	402350 <__fxstat@plt>
  438dd4:	tbnz	w0, #31, 438e40 <feof@plt+0x36470>
  438dd8:	ldr	x3, [sp, #104]
  438ddc:	add	x6, sp, #0x20
  438de0:	mov	x0, x22
  438de4:	mov	w1, w26
  438de8:	mov	x2, xzr
  438dec:	mov	x4, x20
  438df0:	mov	x5, x19
  438df4:	bl	438eec <feof@plt+0x3651c>
  438df8:	cbz	w0, 438e58 <feof@plt+0x36488>
  438dfc:	ldr	x10, [sp, #104]
  438e00:	cmp	x10, #0x1
  438e04:	b.lt	438e68 <feof@plt+0x36498>  // b.tstop
  438e08:	ldr	x8, [sp, #32]
  438e0c:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  438e10:	mov	w9, #0xffffffff            	// #-1
  438e14:	add	x11, x11, #0x414
  438e18:	add	x10, x8, x10
  438e1c:	ldrb	w12, [x8], #1
  438e20:	and	w13, w9, #0xff
  438e24:	eor	w12, w13, w12
  438e28:	ldr	w12, [x11, w12, uxtw #2]
  438e2c:	cmp	x8, x10
  438e30:	eor	w9, w12, w9, lsr #8
  438e34:	b.cc	438e1c <feof@plt+0x3644c>  // b.lo, b.ul, b.last
  438e38:	mvn	w21, w9
  438e3c:	b	438e6c <feof@plt+0x3649c>
  438e40:	bl	4027c0 <__errno_location@plt>
  438e44:	ldr	w2, [x0]
  438e48:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  438e4c:	add	x1, x1, #0xa31
  438e50:	mov	x0, x19
  438e54:	blr	x20
  438e58:	mov	w21, wzr
  438e5c:	cmp	w21, w23
  438e60:	b.eq	438e9c <feof@plt+0x364cc>  // b.none
  438e64:	b	438e88 <feof@plt+0x364b8>
  438e68:	mov	w21, wzr
  438e6c:	add	x1, sp, #0x20
  438e70:	mov	x0, x22
  438e74:	mov	x2, x20
  438e78:	mov	x3, x19
  438e7c:	bl	438fac <feof@plt+0x365dc>
  438e80:	cmp	w21, w23
  438e84:	b.eq	438e9c <feof@plt+0x364cc>  // b.none
  438e88:	mov	w0, w26
  438e8c:	mov	x1, x20
  438e90:	mov	x2, x19
  438e94:	bl	435c70 <feof@plt+0x332a0>
  438e98:	mov	w26, #0xffffffff            	// #-1
  438e9c:	mov	w0, w26
  438ea0:	ldp	x20, x19, [sp, #272]
  438ea4:	ldp	x22, x21, [sp, #256]
  438ea8:	ldp	x24, x23, [sp, #240]
  438eac:	ldp	x26, x25, [sp, #224]
  438eb0:	ldp	x28, x27, [sp, #208]
  438eb4:	ldp	x29, x30, [sp, #192]
  438eb8:	add	sp, sp, #0x120
  438ebc:	ret
  438ec0:	mov	x23, x26
  438ec4:	b	438b64 <feof@plt+0x36194>
  438ec8:	mov	w26, #0xffffffff            	// #-1
  438ecc:	cbnz	x23, 438d9c <feof@plt+0x363cc>
  438ed0:	b	438db8 <feof@plt+0x363e8>
  438ed4:	ldr	x8, [x0, #8]
  438ed8:	ldr	x9, [x1, #8]
  438edc:	cmp	x8, x9
  438ee0:	cset	w8, hi  // hi = pmore
  438ee4:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  438ee8:	ret
  438eec:	stp	x29, x30, [sp, #-80]!
  438ef0:	str	x25, [sp, #16]
  438ef4:	stp	x24, x23, [sp, #32]
  438ef8:	stp	x22, x21, [sp, #48]
  438efc:	stp	x20, x19, [sp, #64]
  438f00:	mov	x29, sp
  438f04:	mov	x21, x6
  438f08:	mov	x20, x5
  438f0c:	mov	x19, x4
  438f10:	mov	x22, x3
  438f14:	mov	x23, x2
  438f18:	mov	w24, w1
  438f1c:	bl	4028e0 <getpagesize@plt>
  438f20:	sxtw	x8, w0
  438f24:	udiv	x9, x23, x8
  438f28:	add	x10, x22, x8
  438f2c:	msub	w25, w9, w0, w23
  438f30:	add	x9, x10, x25
  438f34:	sub	x9, x9, #0x1
  438f38:	neg	x8, x8
  438f3c:	and	x22, x9, x8
  438f40:	sub	x5, x23, x25
  438f44:	mov	w2, #0x1                   	// #1
  438f48:	mov	w3, #0x2                   	// #2
  438f4c:	mov	x0, xzr
  438f50:	mov	x1, x22
  438f54:	mov	w4, w24
  438f58:	bl	402690 <mmap@plt>
  438f5c:	cmn	x0, #0x1
  438f60:	b.eq	438f78 <feof@plt+0x365a8>  // b.none
  438f64:	add	x8, x0, x25
  438f68:	stp	x0, x22, [x21, #8]
  438f6c:	mov	w0, #0x1                   	// #1
  438f70:	str	x8, [x21]
  438f74:	b	438f94 <feof@plt+0x365c4>
  438f78:	bl	4027c0 <__errno_location@plt>
  438f7c:	ldr	w2, [x0]
  438f80:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0xda68>
  438f84:	add	x1, x1, #0xe92
  438f88:	mov	x0, x20
  438f8c:	blr	x19
  438f90:	mov	w0, wzr
  438f94:	ldp	x20, x19, [sp, #64]
  438f98:	ldp	x22, x21, [sp, #48]
  438f9c:	ldp	x24, x23, [sp, #32]
  438fa0:	ldr	x25, [sp, #16]
  438fa4:	ldp	x29, x30, [sp], #80
  438fa8:	ret
  438fac:	stp	x29, x30, [sp, #-32]!
  438fb0:	str	x19, [sp, #16]
  438fb4:	mov	x29, sp
  438fb8:	ldp	x0, x1, [x1, #8]
  438fbc:	mov	x19, x3
  438fc0:	str	x2, [x29, #24]
  438fc4:	bl	4026e0 <munmap@plt>
  438fc8:	tbnz	w0, #31, 438fd8 <feof@plt+0x36608>
  438fcc:	ldr	x19, [sp, #16]
  438fd0:	ldp	x29, x30, [sp], #32
  438fd4:	ret
  438fd8:	bl	4027c0 <__errno_location@plt>
  438fdc:	ldr	w2, [x0]
  438fe0:	mov	x0, x19
  438fe4:	ldr	x3, [x29, #24]
  438fe8:	ldr	x19, [sp, #16]
  438fec:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  438ff0:	add	x1, x1, #0xa59
  438ff4:	ldp	x29, x30, [sp], #32
  438ff8:	br	x3
  438ffc:	stp	x29, x30, [sp, #-96]!
  439000:	stp	x28, x27, [sp, #16]
  439004:	stp	x26, x25, [sp, #32]
  439008:	stp	x24, x23, [sp, #48]
  43900c:	stp	x22, x21, [sp, #64]
  439010:	stp	x20, x19, [sp, #80]
  439014:	mov	x29, sp
  439018:	sub	sp, sp, #0x2e0
  43901c:	ldr	x8, [x29, #136]
  439020:	ldp	x21, x20, [x29, #144]
  439024:	ldr	w9, [x29, #128]
  439028:	mov	x22, x5
  43902c:	str	x8, [sp, #208]
  439030:	ldr	x8, [x29, #120]
  439034:	mov	x23, x4
  439038:	mov	x19, x0
  43903c:	str	x1, [sp, #232]
  439040:	str	x8, [sp, #248]
  439044:	ldr	x8, [x29, #112]
  439048:	stp	xzr, xzr, [sp, #328]
  43904c:	stp	xzr, xzr, [sp, #344]
  439050:	stp	xzr, xzr, [sp, #288]
  439054:	str	x8, [sp, #240]
  439058:	ldr	x8, [x29, #104]
  43905c:	stp	xzr, xzr, [sp, #304]
  439060:	stp	x2, x3, [sp, #472]
  439064:	str	wzr, [sp, #512]
  439068:	str	x8, [sp, #224]
  43906c:	ldr	x8, [x29, #96]
  439070:	str	x2, [sp, #464]
  439074:	str	w9, [sp, #256]
  439078:	str	w9, [sp, #488]
  43907c:	str	x8, [sp, #216]
  439080:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0xea68>
  439084:	add	x8, x8, #0x954
  439088:	stp	xzr, x8, [sp, #448]
  43908c:	stp	x21, x20, [sp, #496]
  439090:	stp	xzr, xzr, [sp, #432]
  439094:	cbz	x3, 43a14c <feof@plt+0x3777c>
  439098:	mov	x26, x7
  43909c:	mov	x28, x6
  4390a0:	mov	w8, wzr
  4390a4:	mov	x11, x2
  4390a8:	mov	x12, x3
  4390ac:	str	xzr, [sp, #272]
  4390b0:	str	xzr, [sp, #184]
  4390b4:	cbnz	w8, 43a058 <feof@plt+0x37688>
  4390b8:	cmp	x12, #0x3
  4390bc:	stp	x2, x3, [sp, #160]
  4390c0:	str	x11, [sp, #176]
  4390c4:	b.hi	439118 <feof@plt+0x36748>  // b.pmore
  4390c8:	ldr	w8, [sp, #464]
  4390cc:	ldr	x4, [sp, #456]
  4390d0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  4390d4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4390d8:	sub	w5, w11, w8
  4390dc:	sub	x0, x29, #0xd8
  4390e0:	mov	w1, #0xc8                  	// #200
  4390e4:	add	x2, x2, #0xbd7
  4390e8:	add	x3, x3, #0xbc7
  4390ec:	mov	x24, x12
  4390f0:	bl	402740 <snprintf@plt>
  4390f4:	ldp	x8, x0, [sp, #496]
  4390f8:	sub	x1, x29, #0xd8
  4390fc:	mov	w2, wzr
  439100:	blr	x8
  439104:	mov	x12, x24
  439108:	mov	w8, wzr
  43910c:	mov	w9, #0x1                   	// #1
  439110:	str	w9, [sp, #512]
  439114:	b	439178 <feof@plt+0x367a8>
  439118:	ldr	w8, [sp, #488]
  43911c:	add	x9, x11, #0x4
  439120:	sub	x12, x12, #0x4
  439124:	stp	x9, x12, [sp, #472]
  439128:	cbz	w8, 43914c <feof@plt+0x3677c>
  43912c:	ldrb	w8, [x11]
  439130:	ldrb	w9, [x11, #1]
  439134:	ldrb	w10, [x11, #2]
  439138:	lsl	w8, w8, #24
  43913c:	bfi	w8, w9, #16, #8
  439140:	bfi	w8, w10, #8, #8
  439144:	add	x9, x11, #0x3
  439148:	b	439168 <feof@plt+0x36798>
  43914c:	ldrb	w8, [x11, #3]
  439150:	ldrb	w9, [x11, #2]
  439154:	ldrb	w10, [x11, #1]
  439158:	lsl	w8, w8, #24
  43915c:	bfi	w8, w9, #16, #8
  439160:	bfi	w8, w10, #8, #8
  439164:	mov	x9, x11
  439168:	ldrb	w9, [x9]
  43916c:	orr	w8, w8, w9
  439170:	cmn	w8, #0x1
  439174:	b.eq	439614 <feof@plt+0x36c44>  // b.none
  439178:	str	wzr, [sp, #260]
  43917c:	mov	w0, w8
  439180:	add	x8, sp, #0x1c8
  439184:	ldp	q1, q0, [x8]
  439188:	ldp	q2, q3, [x8, #32]
  43918c:	subs	x12, x12, x0
  439190:	str	q1, [sp, #368]
  439194:	stp	q0, q2, [sp, #384]
  439198:	str	q3, [sp, #416]
  43919c:	str	x0, [sp, #392]
  4391a0:	b.cc	43a2bc <feof@plt+0x378ec>  // b.lo, b.ul, b.last
  4391a4:	ldr	x9, [sp, #472]
  4391a8:	ldr	x8, [sp, #384]
  4391ac:	cmp	x0, #0x1
  4391b0:	add	x13, x9, x0
  4391b4:	stp	x13, x12, [sp, #472]
  4391b8:	b.ls	43a310 <feof@plt+0x37940>  // b.plast
  4391bc:	ldr	w10, [sp, #400]
  4391c0:	add	x9, x8, #0x2
  4391c4:	sub	x11, x0, #0x2
  4391c8:	stp	x9, x11, [sp, #384]
  4391cc:	cmp	w10, #0x0
  4391d0:	cinc	x10, x8, eq  // eq = none
  4391d4:	cinc	x8, x8, ne  // ne = any
  4391d8:	ldrb	w10, [x10]
  4391dc:	ldrb	w11, [x8]
  4391e0:	bfi	w11, w10, #8, #8
  4391e4:	sub	w8, w11, #0x2
  4391e8:	and	w8, w8, #0xffff
  4391ec:	cmp	w8, #0x3
  4391f0:	b.cs	43a360 <feof@plt+0x37990>  // b.hs, b.nlast
  4391f4:	str	x0, [sp, #144]
  4391f8:	add	x4, sp, #0x1b0
  4391fc:	mov	w1, #0x8                   	// #8
  439200:	mov	x0, x19
  439204:	mov	x2, x21
  439208:	mov	x3, x20
  43920c:	str	w11, [sp, #140]
  439210:	stp	x13, x12, [sp, #120]
  439214:	bl	435724 <feof@plt+0x32d54>
  439218:	cbz	x0, 43a058 <feof@plt+0x37688>
  43921c:	mov	x25, x0
  439220:	mov	w1, #0x88                  	// #136
  439224:	mov	x0, x19
  439228:	mov	x2, x21
  43922c:	mov	x3, x20
  439230:	bl	435450 <feof@plt+0x32a80>
  439234:	cbz	x0, 43a058 <feof@plt+0x37688>
  439238:	ldr	x8, [sp, #272]
  43923c:	str	x0, [x25]
  439240:	str	x0, [sp, #152]
  439244:	str	xzr, [x0, #88]!
  439248:	add	x8, x8, #0x1
  43924c:	str	x8, [sp, #272]
  439250:	ldr	w8, [sp, #260]
  439254:	str	x0, [sp, #200]
  439258:	str	xzr, [x0, #8]
  43925c:	cbz	w8, 4395f8 <feof@plt+0x36c28>
  439260:	add	x0, sp, #0x170
  439264:	bl	43aae0 <feof@plt+0x38110>
  439268:	ldr	x8, [sp, #200]
  43926c:	cmp	x0, x26
  439270:	stp	xzr, xzr, [x8]
  439274:	b.cs	43a3a0 <feof@plt+0x379d0>  // b.hs, b.nlast
  439278:	stp	x23, x22, [sp, #88]
  43927c:	add	x25, x28, x0
  439280:	sub	x22, x26, x0
  439284:	str	wzr, [sp, #280]
  439288:	str	xzr, [sp, #264]
  43928c:	stp	x26, x25, [sp, #104]
  439290:	str	x22, [sp, #192]
  439294:	mov	w9, #0x2                   	// #2
  439298:	mov	x23, xzr
  43929c:	mov	w27, wzr
  4392a0:	mov	w8, wzr
  4392a4:	sub	x9, x9, x22
  4392a8:	b	4392c8 <feof@plt+0x368f8>
  4392ac:	and	x9, x24, #0x7f
  4392b0:	lsl	x9, x9, x27
  4392b4:	orr	x23, x9, x23
  4392b8:	sxtb	w10, w24
  4392bc:	add	w27, w27, #0x7
  4392c0:	add	x9, x26, #0x1
  4392c4:	tbz	w10, #31, 439324 <feof@plt+0x36954>
  4392c8:	cbz	x22, 43a018 <feof@plt+0x37648>
  4392cc:	ldrb	w24, [x25], #1
  4392d0:	mov	x26, x9
  4392d4:	cmp	w27, #0x3f
  4392d8:	sub	x22, x22, #0x1
  4392dc:	b.ls	4392ac <feof@plt+0x368dc>  // b.plast
  4392e0:	cbnz	w8, 4392b8 <feof@plt+0x368e8>
  4392e4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  4392e8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4392ec:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4392f0:	sub	w5, w25, w28
  4392f4:	sub	x0, x29, #0xd8
  4392f8:	mov	w1, #0xc8                  	// #200
  4392fc:	add	x2, x2, #0xbd7
  439300:	add	x3, x3, #0xc90
  439304:	add	x4, x4, #0x96c
  439308:	bl	402740 <snprintf@plt>
  43930c:	sub	x1, x29, #0xd8
  439310:	mov	x0, x20
  439314:	mov	w2, wzr
  439318:	blr	x21
  43931c:	mov	w8, #0x1                   	// #1
  439320:	b	4392b8 <feof@plt+0x368e8>
  439324:	cbz	x23, 4396a0 <feof@plt+0x36cd0>
  439328:	ldr	w8, [sp, #280]
  43932c:	cbnz	w8, 43a058 <feof@plt+0x37688>
  439330:	ldr	x9, [sp, #264]
  439334:	adrp	x27, 45f000 <_obstack_memory_used@@Base+0xea68>
  439338:	mov	w22, wzr
  43933c:	mov	x23, x25
  439340:	add	x9, x9, #0x1
  439344:	add	x27, x27, #0xbd7
  439348:	str	x9, [sp, #264]
  43934c:	b	43935c <feof@plt+0x3698c>
  439350:	add	w22, w22, #0x7
  439354:	add	x26, x26, #0x1
  439358:	tbz	w24, #31, 4393fc <feof@plt+0x36a2c>
  43935c:	cmp	x26, #0x1
  439360:	mov	x25, x23
  439364:	b.eq	4393b8 <feof@plt+0x369e8>  // b.none
  439368:	mov	x23, x25
  43936c:	ldrsb	w24, [x23], #1
  439370:	cmp	w22, #0x40
  439374:	b.cc	439350 <feof@plt+0x36980>  // b.lo, b.ul, b.last
  439378:	cbnz	w8, 439350 <feof@plt+0x36980>
  43937c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439380:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439384:	sub	w5, w23, w28
  439388:	sub	x0, x29, #0xd8
  43938c:	mov	w1, #0xc8                  	// #200
  439390:	mov	x2, x27
  439394:	add	x3, x3, #0xc90
  439398:	add	x4, x4, #0x96c
  43939c:	bl	402740 <snprintf@plt>
  4393a0:	sub	x1, x29, #0xd8
  4393a4:	mov	x0, x20
  4393a8:	mov	w2, wzr
  4393ac:	blr	x21
  4393b0:	mov	w8, #0x1                   	// #1
  4393b4:	b	439350 <feof@plt+0x36980>
  4393b8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4393bc:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4393c0:	sub	w5, w25, w28
  4393c4:	sub	x0, x29, #0xd8
  4393c8:	mov	w1, #0xc8                  	// #200
  4393cc:	mov	x2, x27
  4393d0:	add	x3, x3, #0xbc7
  4393d4:	add	x4, x4, #0x96c
  4393d8:	bl	402740 <snprintf@plt>
  4393dc:	sub	x1, x29, #0xd8
  4393e0:	mov	x0, x20
  4393e4:	mov	w2, wzr
  4393e8:	blr	x21
  4393ec:	mov	w8, #0x1                   	// #1
  4393f0:	mov	x22, xzr
  4393f4:	str	w8, [sp, #280]
  4393f8:	b	439460 <feof@plt+0x36a90>
  4393fc:	cmp	x26, #0x1
  439400:	b.ne	43944c <feof@plt+0x36a7c>  // b.any
  439404:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439408:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  43940c:	sub	w5, w23, w28
  439410:	sub	x0, x29, #0xd8
  439414:	mov	w1, #0xc8                  	// #200
  439418:	mov	x2, x27
  43941c:	add	x3, x3, #0xbc7
  439420:	add	x4, x4, #0x96c
  439424:	bl	402740 <snprintf@plt>
  439428:	sub	x1, x29, #0xd8
  43942c:	mov	x0, x20
  439430:	mov	w2, wzr
  439434:	blr	x21
  439438:	mov	w8, #0x1                   	// #1
  43943c:	mov	x22, xzr
  439440:	str	w8, [sp, #280]
  439444:	mov	x25, x23
  439448:	b	439460 <feof@plt+0x36a90>
  43944c:	add	x25, x25, #0x2
  439450:	neg	x22, x26
  439454:	str	wzr, [sp, #280]
  439458:	b	439460 <feof@plt+0x36a90>
  43945c:	cbz	x26, 439294 <feof@plt+0x368c4>
  439460:	mov	x26, xzr
  439464:	mov	w23, wzr
  439468:	mov	w8, wzr
  43946c:	b	439488 <feof@plt+0x36ab8>
  439470:	and	x9, x24, #0x7f
  439474:	lsl	x9, x9, x23
  439478:	orr	x26, x9, x26
  43947c:	sxtb	w9, w24
  439480:	add	w23, w23, #0x7
  439484:	tbz	w9, #31, 439534 <feof@plt+0x36b64>
  439488:	cbz	x22, 4394dc <feof@plt+0x36b0c>
  43948c:	ldrb	w24, [x25], #1
  439490:	cmp	w23, #0x3f
  439494:	sub	x22, x22, #0x1
  439498:	b.ls	439470 <feof@plt+0x36aa0>  // b.plast
  43949c:	cbnz	w8, 43947c <feof@plt+0x36aac>
  4394a0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4394a4:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4394a8:	sub	w5, w25, w28
  4394ac:	sub	x0, x29, #0xd8
  4394b0:	mov	w1, #0xc8                  	// #200
  4394b4:	mov	x2, x27
  4394b8:	add	x3, x3, #0xc90
  4394bc:	add	x4, x4, #0x96c
  4394c0:	bl	402740 <snprintf@plt>
  4394c4:	sub	x1, x29, #0xd8
  4394c8:	mov	x0, x20
  4394cc:	mov	w2, wzr
  4394d0:	blr	x21
  4394d4:	mov	w8, #0x1                   	// #1
  4394d8:	b	43947c <feof@plt+0x36aac>
  4394dc:	ldr	w8, [sp, #280]
  4394e0:	cbz	w8, 4394f0 <feof@plt+0x36b20>
  4394e4:	mov	x22, xzr
  4394e8:	mov	x26, xzr
  4394ec:	b	439534 <feof@plt+0x36b64>
  4394f0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4394f4:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4394f8:	sub	w5, w25, w28
  4394fc:	sub	x0, x29, #0xd8
  439500:	mov	w1, #0xc8                  	// #200
  439504:	mov	x2, x27
  439508:	add	x3, x3, #0xbc7
  43950c:	add	x4, x4, #0x96c
  439510:	bl	402740 <snprintf@plt>
  439514:	sub	x1, x29, #0xd8
  439518:	mov	x0, x20
  43951c:	mov	w2, wzr
  439520:	blr	x21
  439524:	mov	w8, #0x1                   	// #1
  439528:	mov	x22, xzr
  43952c:	mov	x26, xzr
  439530:	str	w8, [sp, #280]
  439534:	mov	w23, wzr
  439538:	mov	w8, wzr
  43953c:	b	439548 <feof@plt+0x36b78>
  439540:	add	w23, w23, #0x7
  439544:	tbz	w24, #31, 43945c <feof@plt+0x36a8c>
  439548:	cbz	x22, 43959c <feof@plt+0x36bcc>
  43954c:	ldrsb	w24, [x25], #1
  439550:	cmp	w23, #0x40
  439554:	sub	x22, x22, #0x1
  439558:	b.cc	439540 <feof@plt+0x36b70>  // b.lo, b.ul, b.last
  43955c:	cbnz	w8, 439540 <feof@plt+0x36b70>
  439560:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439564:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439568:	sub	w5, w25, w28
  43956c:	sub	x0, x29, #0xd8
  439570:	mov	w1, #0xc8                  	// #200
  439574:	mov	x2, x27
  439578:	add	x3, x3, #0xc90
  43957c:	add	x4, x4, #0x96c
  439580:	bl	402740 <snprintf@plt>
  439584:	sub	x1, x29, #0xd8
  439588:	mov	x0, x20
  43958c:	mov	w2, wzr
  439590:	blr	x21
  439594:	mov	w8, #0x1                   	// #1
  439598:	b	439540 <feof@plt+0x36b70>
  43959c:	ldr	w8, [sp, #280]
  4395a0:	cbz	w8, 4395b0 <feof@plt+0x36be0>
  4395a4:	mov	x22, xzr
  4395a8:	cbnz	x26, 439460 <feof@plt+0x36a90>
  4395ac:	b	439294 <feof@plt+0x368c4>
  4395b0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4395b4:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4395b8:	sub	w5, w25, w28
  4395bc:	sub	x0, x29, #0xd8
  4395c0:	mov	w1, #0xc8                  	// #200
  4395c4:	mov	x2, x27
  4395c8:	add	x3, x3, #0xbc7
  4395cc:	add	x4, x4, #0x96c
  4395d0:	bl	402740 <snprintf@plt>
  4395d4:	sub	x1, x29, #0xd8
  4395d8:	mov	x0, x20
  4395dc:	mov	w2, wzr
  4395e0:	blr	x21
  4395e4:	mov	x22, xzr
  4395e8:	mov	w8, #0x1                   	// #1
  4395ec:	str	w8, [sp, #280]
  4395f0:	cbnz	x26, 439460 <feof@plt+0x36a90>
  4395f4:	b	439294 <feof@plt+0x368c4>
  4395f8:	ldp	x8, x9, [sp, #384]
  4395fc:	cmp	x9, #0x3
  439600:	b.hi	43962c <feof@plt+0x36c5c>  // b.pmore
  439604:	ldr	w9, [sp, #424]
  439608:	cbz	w9, 439650 <feof@plt+0x36c80>
  43960c:	mov	x0, xzr
  439610:	b	439268 <feof@plt+0x36898>
  439614:	add	x0, sp, #0x1c8
  439618:	bl	43aae0 <feof@plt+0x38110>
  43961c:	ldr	x12, [sp, #480]
  439620:	mov	w8, #0x1                   	// #1
  439624:	str	w8, [sp, #260]
  439628:	b	439180 <feof@plt+0x367b0>
  43962c:	ldr	w10, [sp, #400]
  439630:	add	x11, x8, #0x4
  439634:	sub	x9, x9, #0x4
  439638:	stp	x11, x9, [sp, #384]
  43963c:	cbz	w10, 439698 <feof@plt+0x36cc8>
  439640:	ldr	w8, [x8]
  439644:	lsl	x8, x8, #32
  439648:	rev	x0, x8
  43964c:	b	439268 <feof@plt+0x36898>
  439650:	ldr	w9, [sp, #376]
  439654:	ldr	x4, [sp, #368]
  439658:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43965c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439660:	sub	w5, w8, w9
  439664:	sub	x0, x29, #0xd8
  439668:	mov	w1, #0xc8                  	// #200
  43966c:	add	x2, x2, #0xbd7
  439670:	add	x3, x3, #0xbc7
  439674:	bl	402740 <snprintf@plt>
  439678:	ldp	x8, x0, [sp, #408]
  43967c:	sub	x1, x29, #0xd8
  439680:	mov	w2, wzr
  439684:	blr	x8
  439688:	mov	w8, #0x1                   	// #1
  43968c:	mov	x0, xzr
  439690:	str	w8, [sp, #424]
  439694:	b	439268 <feof@plt+0x36898>
  439698:	ldr	w0, [x8]
  43969c:	b	439268 <feof@plt+0x36898>
  4396a0:	ldr	x26, [sp, #104]
  4396a4:	ldr	x27, [sp, #192]
  4396a8:	ldr	w8, [sp, #280]
  4396ac:	cbnz	w8, 43a058 <feof@plt+0x37688>
  4396b0:	ldr	x23, [sp, #264]
  4396b4:	cbz	x23, 439edc <feof@plt+0x3750c>
  4396b8:	lsl	x24, x23, #5
  4396bc:	mov	x0, x19
  4396c0:	mov	x1, x24
  4396c4:	mov	x2, x21
  4396c8:	mov	x3, x20
  4396cc:	bl	435450 <feof@plt+0x32a80>
  4396d0:	ldr	x8, [sp, #152]
  4396d4:	str	x0, [x8, #96]
  4396d8:	cbz	x0, 43a058 <feof@plt+0x37688>
  4396dc:	ldr	x8, [sp, #200]
  4396e0:	mov	w1, wzr
  4396e4:	mov	x2, x24
  4396e8:	str	x23, [x8]
  4396ec:	bl	4024e0 <memset@plt>
  4396f0:	ldr	x26, [sp, #112]
  4396f4:	str	xzr, [sp, #56]
  4396f8:	mov	w9, #0x2                   	// #2
  4396fc:	mov	w23, wzr
  439700:	mov	w8, wzr
  439704:	mov	x25, x27
  439708:	sub	x9, x9, x27
  43970c:	str	xzr, [sp, #264]
  439710:	b	439738 <feof@plt+0x36d68>
  439714:	ldr	x10, [sp, #264]
  439718:	and	x9, x24, #0x7f
  43971c:	lsl	x9, x9, x23
  439720:	orr	x10, x9, x10
  439724:	str	x10, [sp, #264]
  439728:	sxtb	w10, w24
  43972c:	add	w23, w23, #0x7
  439730:	add	x9, x22, #0x1
  439734:	tbz	w10, #31, 439794 <feof@plt+0x36dc4>
  439738:	cbz	x25, 439e88 <feof@plt+0x374b8>
  43973c:	ldrb	w24, [x26], #1
  439740:	mov	x22, x9
  439744:	cmp	w23, #0x3f
  439748:	sub	x25, x25, #0x1
  43974c:	b.ls	439714 <feof@plt+0x36d44>  // b.plast
  439750:	cbnz	w8, 439728 <feof@plt+0x36d58>
  439754:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439758:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43975c:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439760:	sub	w5, w26, w28
  439764:	sub	x0, x29, #0xd8
  439768:	mov	w1, #0xc8                  	// #200
  43976c:	add	x2, x2, #0xbd7
  439770:	add	x3, x3, #0xc90
  439774:	add	x4, x4, #0x96c
  439778:	bl	402740 <snprintf@plt>
  43977c:	sub	x1, x29, #0xd8
  439780:	mov	x0, x20
  439784:	mov	w2, wzr
  439788:	blr	x21
  43978c:	mov	w8, #0x1                   	// #1
  439790:	b	439728 <feof@plt+0x36d58>
  439794:	ldr	x8, [sp, #264]
  439798:	cbz	x8, 439ec0 <feof@plt+0x374f0>
  43979c:	mov	x24, x26
  4397a0:	adrp	x26, 45f000 <_obstack_memory_used@@Base+0xea68>
  4397a4:	mov	w23, wzr
  4397a8:	mov	w8, wzr
  4397ac:	add	x26, x26, #0xbd7
  4397b0:	str	xzr, [sp, #64]
  4397b4:	b	4397dc <feof@plt+0x36e0c>
  4397b8:	ldr	x10, [sp, #64]
  4397bc:	and	x9, x25, #0x7f
  4397c0:	lsl	x9, x9, x23
  4397c4:	orr	x10, x9, x10
  4397c8:	str	x10, [sp, #64]
  4397cc:	sxtb	w9, w25
  4397d0:	add	w23, w23, #0x7
  4397d4:	add	x22, x22, #0x1
  4397d8:	tbz	w9, #31, 439870 <feof@plt+0x36ea0>
  4397dc:	cmp	x22, #0x1
  4397e0:	b.eq	439834 <feof@plt+0x36e64>  // b.none
  4397e4:	mov	x27, x24
  4397e8:	ldrb	w25, [x24], #1
  4397ec:	cmp	w23, #0x3f
  4397f0:	b.ls	4397b8 <feof@plt+0x36de8>  // b.plast
  4397f4:	cbnz	w8, 4397cc <feof@plt+0x36dfc>
  4397f8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4397fc:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439800:	sub	w5, w24, w28
  439804:	sub	x0, x29, #0xd8
  439808:	mov	w1, #0xc8                  	// #200
  43980c:	mov	x2, x26
  439810:	add	x3, x3, #0xc90
  439814:	add	x4, x4, #0x96c
  439818:	bl	402740 <snprintf@plt>
  43981c:	sub	x1, x29, #0xd8
  439820:	mov	x0, x20
  439824:	mov	w2, wzr
  439828:	blr	x21
  43982c:	mov	w8, #0x1                   	// #1
  439830:	b	4397cc <feof@plt+0x36dfc>
  439834:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439838:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  43983c:	sub	w5, w24, w28
  439840:	sub	x0, x29, #0xd8
  439844:	mov	w1, #0xc8                  	// #200
  439848:	mov	x2, x26
  43984c:	add	x3, x3, #0xbc7
  439850:	add	x4, x4, #0x96c
  439854:	bl	402740 <snprintf@plt>
  439858:	sub	x1, x29, #0xd8
  43985c:	mov	x0, x20
  439860:	mov	w2, wzr
  439864:	blr	x21
  439868:	str	xzr, [sp, #64]
  43986c:	b	4398ac <feof@plt+0x36edc>
  439870:	cmp	x22, #0x1
  439874:	b.ne	4398bc <feof@plt+0x36eec>  // b.any
  439878:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43987c:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439880:	sub	w5, w24, w28
  439884:	sub	x0, x29, #0xd8
  439888:	mov	w1, #0xc8                  	// #200
  43988c:	mov	x2, x26
  439890:	add	x3, x3, #0xbc7
  439894:	add	x4, x4, #0x96c
  439898:	bl	402740 <snprintf@plt>
  43989c:	sub	x1, x29, #0xd8
  4398a0:	mov	x0, x20
  4398a4:	mov	w2, wzr
  4398a8:	blr	x21
  4398ac:	mov	x26, xzr
  4398b0:	str	wzr, [sp, #52]
  4398b4:	mov	w9, #0x1                   	// #1
  4398b8:	b	4398d0 <feof@plt+0x36f00>
  4398bc:	ldrb	w8, [x27, #1]
  4398c0:	mov	w9, wzr
  4398c4:	add	x24, x27, #0x2
  4398c8:	neg	x26, x22
  4398cc:	str	w8, [sp, #52]
  4398d0:	mov	x22, xzr
  4398d4:	str	w9, [sp, #84]
  4398d8:	str	w9, [sp, #280]
  4398dc:	str	x26, [sp, #192]
  4398e0:	str	x24, [sp, #112]
  4398e4:	mov	x23, xzr
  4398e8:	mov	w27, wzr
  4398ec:	mov	w8, wzr
  4398f0:	b	43990c <feof@plt+0x36f3c>
  4398f4:	and	x9, x25, #0x7f
  4398f8:	lsl	x9, x9, x27
  4398fc:	orr	x23, x9, x23
  439900:	sxtb	w9, w25
  439904:	add	w27, w27, #0x7
  439908:	tbz	w9, #31, 439964 <feof@plt+0x36f94>
  43990c:	cbz	x26, 439a28 <feof@plt+0x37058>
  439910:	ldrb	w25, [x24], #1
  439914:	cmp	w27, #0x3f
  439918:	sub	x26, x26, #0x1
  43991c:	b.ls	4398f4 <feof@plt+0x36f24>  // b.plast
  439920:	cbnz	w8, 439900 <feof@plt+0x36f30>
  439924:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439928:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43992c:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439930:	sub	w5, w24, w28
  439934:	sub	x0, x29, #0xd8
  439938:	mov	w1, #0xc8                  	// #200
  43993c:	add	x2, x2, #0xbd7
  439940:	add	x3, x3, #0xc90
  439944:	add	x4, x4, #0x96c
  439948:	bl	402740 <snprintf@plt>
  43994c:	sub	x1, x29, #0xd8
  439950:	mov	x0, x20
  439954:	mov	w2, wzr
  439958:	blr	x21
  43995c:	mov	w8, #0x1                   	// #1
  439960:	b	439900 <feof@plt+0x36f30>
  439964:	cbz	x23, 439a68 <feof@plt+0x37098>
  439968:	adrp	x27, 45f000 <_obstack_memory_used@@Base+0xea68>
  43996c:	mov	w23, wzr
  439970:	mov	w8, wzr
  439974:	add	x22, x22, #0x1
  439978:	add	x27, x27, #0xbd7
  43997c:	b	439988 <feof@plt+0x36fb8>
  439980:	add	w23, w23, #0x7
  439984:	tbz	w25, #31, 4398e4 <feof@plt+0x36f14>
  439988:	cbz	x26, 4399dc <feof@plt+0x3700c>
  43998c:	ldrsb	w25, [x24], #1
  439990:	cmp	w23, #0x40
  439994:	sub	x26, x26, #0x1
  439998:	b.cc	439980 <feof@plt+0x36fb0>  // b.lo, b.ul, b.last
  43999c:	cbnz	w8, 439980 <feof@plt+0x36fb0>
  4399a0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4399a4:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4399a8:	sub	w5, w24, w28
  4399ac:	sub	x0, x29, #0xd8
  4399b0:	mov	w1, #0xc8                  	// #200
  4399b4:	mov	x2, x27
  4399b8:	add	x3, x3, #0xc90
  4399bc:	add	x4, x4, #0x96c
  4399c0:	bl	402740 <snprintf@plt>
  4399c4:	sub	x1, x29, #0xd8
  4399c8:	mov	x0, x20
  4399cc:	mov	w2, wzr
  4399d0:	blr	x21
  4399d4:	mov	w8, #0x1                   	// #1
  4399d8:	b	439980 <feof@plt+0x36fb0>
  4399dc:	ldr	w8, [sp, #280]
  4399e0:	cbnz	w8, 4398e4 <feof@plt+0x36f14>
  4399e4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  4399e8:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  4399ec:	sub	w5, w24, w28
  4399f0:	sub	x0, x29, #0xd8
  4399f4:	mov	w1, #0xc8                  	// #200
  4399f8:	mov	x2, x27
  4399fc:	add	x3, x3, #0xbc7
  439a00:	add	x4, x4, #0x96c
  439a04:	bl	402740 <snprintf@plt>
  439a08:	sub	x1, x29, #0xd8
  439a0c:	mov	x0, x20
  439a10:	mov	w2, wzr
  439a14:	blr	x21
  439a18:	mov	w8, #0x1                   	// #1
  439a1c:	mov	x26, xzr
  439a20:	str	w8, [sp, #280]
  439a24:	b	4398e4 <feof@plt+0x36f14>
  439a28:	ldr	w8, [sp, #280]
  439a2c:	cbnz	w8, 439a68 <feof@plt+0x37098>
  439a30:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439a34:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439a38:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439a3c:	sub	w5, w24, w28
  439a40:	sub	x0, x29, #0xd8
  439a44:	mov	w1, #0xc8                  	// #200
  439a48:	add	x2, x2, #0xbd7
  439a4c:	add	x3, x3, #0xbc7
  439a50:	add	x4, x4, #0x96c
  439a54:	bl	402740 <snprintf@plt>
  439a58:	sub	x1, x29, #0xd8
  439a5c:	mov	x0, x20
  439a60:	mov	w2, wzr
  439a64:	blr	x21
  439a68:	cbz	x22, 439c90 <feof@plt+0x372c0>
  439a6c:	lsl	x1, x22, #3
  439a70:	mov	x0, x19
  439a74:	mov	x2, x21
  439a78:	mov	x3, x20
  439a7c:	bl	435450 <feof@plt+0x32a80>
  439a80:	ldr	x26, [sp, #112]
  439a84:	ldr	x27, [sp, #192]
  439a88:	cbz	x0, 43a3ac <feof@plt+0x379dc>
  439a8c:	str	x0, [sp, #72]
  439a90:	str	xzr, [sp, #280]
  439a94:	b	439ab4 <feof@plt+0x370e4>
  439a98:	ldr	x23, [sp, #72]
  439a9c:	ldr	x11, [sp, #280]
  439aa0:	cbz	x24, 439c88 <feof@plt+0x372b8>
  439aa4:	add	x8, x23, x11, lsl #3
  439aa8:	add	x11, x11, #0x1
  439aac:	stp	w24, w25, [x8]
  439ab0:	str	x11, [sp, #280]
  439ab4:	mov	x24, xzr
  439ab8:	mov	w23, wzr
  439abc:	mov	w8, wzr
  439ac0:	b	439adc <feof@plt+0x3710c>
  439ac4:	and	x9, x25, #0x7f
  439ac8:	lsl	x9, x9, x23
  439acc:	orr	x24, x9, x24
  439ad0:	sxtb	w9, w25
  439ad4:	add	w23, w23, #0x7
  439ad8:	tbz	w9, #31, 439b90 <feof@plt+0x371c0>
  439adc:	cbz	x27, 439b34 <feof@plt+0x37164>
  439ae0:	ldrb	w25, [x26], #1
  439ae4:	cmp	w23, #0x3f
  439ae8:	sub	x27, x27, #0x1
  439aec:	b.ls	439ac4 <feof@plt+0x370f4>  // b.plast
  439af0:	cbnz	w8, 439ad0 <feof@plt+0x37100>
  439af4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439af8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439afc:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439b00:	sub	w5, w26, w28
  439b04:	sub	x0, x29, #0xd8
  439b08:	mov	w1, #0xc8                  	// #200
  439b0c:	add	x2, x2, #0xbd7
  439b10:	add	x3, x3, #0xc90
  439b14:	add	x4, x4, #0x96c
  439b18:	bl	402740 <snprintf@plt>
  439b1c:	sub	x1, x29, #0xd8
  439b20:	mov	x0, x20
  439b24:	mov	w2, wzr
  439b28:	blr	x21
  439b2c:	mov	w8, #0x1                   	// #1
  439b30:	b	439ad0 <feof@plt+0x37100>
  439b34:	ldr	w8, [sp, #84]
  439b38:	cbz	w8, 439b48 <feof@plt+0x37178>
  439b3c:	mov	x27, xzr
  439b40:	mov	x24, xzr
  439b44:	b	439b90 <feof@plt+0x371c0>
  439b48:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439b4c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439b50:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439b54:	sub	w5, w26, w28
  439b58:	sub	x0, x29, #0xd8
  439b5c:	mov	w1, #0xc8                  	// #200
  439b60:	add	x2, x2, #0xbd7
  439b64:	add	x3, x3, #0xbc7
  439b68:	add	x4, x4, #0x96c
  439b6c:	bl	402740 <snprintf@plt>
  439b70:	sub	x1, x29, #0xd8
  439b74:	mov	x0, x20
  439b78:	mov	w2, wzr
  439b7c:	blr	x21
  439b80:	mov	w8, #0x1                   	// #1
  439b84:	mov	x27, xzr
  439b88:	mov	x24, xzr
  439b8c:	str	w8, [sp, #84]
  439b90:	mov	x25, xzr
  439b94:	mov	w23, wzr
  439b98:	mov	w8, wzr
  439b9c:	b	439bbc <feof@plt+0x371ec>
  439ba0:	and	x9, x26, #0x7f
  439ba4:	lsl	x9, x9, x23
  439ba8:	orr	x25, x9, x25
  439bac:	sxtb	w9, w26
  439bb0:	add	w23, w23, #0x7
  439bb4:	mov	x26, x22
  439bb8:	tbz	w9, #31, 439a98 <feof@plt+0x370c8>
  439bbc:	cbz	x27, 439c18 <feof@plt+0x37248>
  439bc0:	mov	x22, x26
  439bc4:	ldrb	w26, [x22], #1
  439bc8:	cmp	w23, #0x3f
  439bcc:	sub	x27, x27, #0x1
  439bd0:	b.ls	439ba0 <feof@plt+0x371d0>  // b.plast
  439bd4:	cbnz	w8, 439bac <feof@plt+0x371dc>
  439bd8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439bdc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439be0:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439be4:	sub	w5, w22, w28
  439be8:	sub	x0, x29, #0xd8
  439bec:	mov	w1, #0xc8                  	// #200
  439bf0:	add	x2, x2, #0xbd7
  439bf4:	add	x3, x3, #0xc90
  439bf8:	add	x4, x4, #0x96c
  439bfc:	bl	402740 <snprintf@plt>
  439c00:	sub	x1, x29, #0xd8
  439c04:	mov	x0, x20
  439c08:	mov	w2, wzr
  439c0c:	blr	x21
  439c10:	mov	w8, #0x1                   	// #1
  439c14:	b	439bac <feof@plt+0x371dc>
  439c18:	ldr	w8, [sp, #84]
  439c1c:	ldr	x23, [sp, #72]
  439c20:	cbz	w8, 439c38 <feof@plt+0x37268>
  439c24:	mov	x27, xzr
  439c28:	mov	x25, xzr
  439c2c:	ldr	x11, [sp, #280]
  439c30:	cbnz	x24, 439aa4 <feof@plt+0x370d4>
  439c34:	b	439c88 <feof@plt+0x372b8>
  439c38:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439c3c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439c40:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439c44:	sub	w5, w26, w28
  439c48:	sub	x0, x29, #0xd8
  439c4c:	mov	w1, #0xc8                  	// #200
  439c50:	add	x2, x2, #0xbd7
  439c54:	add	x3, x3, #0xbc7
  439c58:	add	x4, x4, #0x96c
  439c5c:	bl	402740 <snprintf@plt>
  439c60:	sub	x1, x29, #0xd8
  439c64:	mov	x0, x20
  439c68:	mov	w2, wzr
  439c6c:	blr	x21
  439c70:	mov	w8, #0x1                   	// #1
  439c74:	mov	x27, xzr
  439c78:	mov	x25, xzr
  439c7c:	str	w8, [sp, #84]
  439c80:	ldr	x11, [sp, #280]
  439c84:	cbnz	x24, 439aa4 <feof@plt+0x370d4>
  439c88:	ldr	x9, [sp, #152]
  439c8c:	b	439df8 <feof@plt+0x37428>
  439c90:	ldr	x9, [sp, #152]
  439c94:	ldr	x26, [sp, #112]
  439c98:	mov	w8, wzr
  439c9c:	b	439ca8 <feof@plt+0x372d8>
  439ca0:	add	w22, w22, #0x7
  439ca4:	tbz	w23, #31, 439d64 <feof@plt+0x37394>
  439ca8:	ldr	x10, [sp, #192]
  439cac:	cbz	x10, 439d0c <feof@plt+0x3733c>
  439cb0:	ldrsb	w23, [x26], #1
  439cb4:	cmp	w22, #0x40
  439cb8:	sub	x10, x10, #0x1
  439cbc:	str	x10, [sp, #192]
  439cc0:	b.cc	439ca0 <feof@plt+0x372d0>  // b.lo, b.ul, b.last
  439cc4:	cbnz	w8, 439ca0 <feof@plt+0x372d0>
  439cc8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439ccc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439cd0:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439cd4:	sub	w5, w26, w28
  439cd8:	sub	x0, x29, #0xd8
  439cdc:	mov	w1, #0xc8                  	// #200
  439ce0:	add	x2, x2, #0xbd7
  439ce4:	add	x3, x3, #0xc90
  439ce8:	add	x4, x4, #0x96c
  439cec:	bl	402740 <snprintf@plt>
  439cf0:	sub	x1, x29, #0xd8
  439cf4:	mov	x0, x20
  439cf8:	mov	w2, wzr
  439cfc:	blr	x21
  439d00:	ldr	x9, [sp, #152]
  439d04:	mov	w8, #0x1                   	// #1
  439d08:	b	439ca0 <feof@plt+0x372d0>
  439d0c:	ldr	w8, [sp, #84]
  439d10:	cbz	w8, 439d1c <feof@plt+0x3734c>
  439d14:	str	xzr, [sp, #192]
  439d18:	b	439d64 <feof@plt+0x37394>
  439d1c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439d20:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439d24:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439d28:	sub	w5, w26, w28
  439d2c:	sub	x0, x29, #0xd8
  439d30:	mov	w1, #0xc8                  	// #200
  439d34:	add	x2, x2, #0xbd7
  439d38:	add	x3, x3, #0xbc7
  439d3c:	add	x4, x4, #0x96c
  439d40:	bl	402740 <snprintf@plt>
  439d44:	sub	x1, x29, #0xd8
  439d48:	mov	x0, x20
  439d4c:	mov	w2, wzr
  439d50:	blr	x21
  439d54:	ldr	x9, [sp, #152]
  439d58:	mov	w8, #0x1                   	// #1
  439d5c:	str	xzr, [sp, #192]
  439d60:	str	w8, [sp, #84]
  439d64:	mov	w22, wzr
  439d68:	mov	w8, wzr
  439d6c:	b	439d78 <feof@plt+0x373a8>
  439d70:	add	w22, w22, #0x7
  439d74:	tbz	w23, #31, 439dec <feof@plt+0x3741c>
  439d78:	ldr	x10, [sp, #192]
  439d7c:	cbz	x10, 439ddc <feof@plt+0x3740c>
  439d80:	ldrsb	w23, [x26], #1
  439d84:	cmp	w22, #0x40
  439d88:	sub	x10, x10, #0x1
  439d8c:	str	x10, [sp, #192]
  439d90:	b.cc	439d70 <feof@plt+0x373a0>  // b.lo, b.ul, b.last
  439d94:	cbnz	w8, 439d70 <feof@plt+0x373a0>
  439d98:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439d9c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439da0:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439da4:	sub	w5, w26, w28
  439da8:	sub	x0, x29, #0xd8
  439dac:	mov	w1, #0xc8                  	// #200
  439db0:	add	x2, x2, #0xbd7
  439db4:	add	x3, x3, #0xc90
  439db8:	add	x4, x4, #0x96c
  439dbc:	bl	402740 <snprintf@plt>
  439dc0:	sub	x1, x29, #0xd8
  439dc4:	mov	x0, x20
  439dc8:	mov	w2, wzr
  439dcc:	blr	x21
  439dd0:	ldr	x9, [sp, #152]
  439dd4:	mov	w8, #0x1                   	// #1
  439dd8:	b	439d70 <feof@plt+0x373a0>
  439ddc:	ldr	w8, [sp, #84]
  439de0:	cbz	w8, 439e34 <feof@plt+0x37464>
  439de4:	mov	x27, xzr
  439de8:	b	439df0 <feof@plt+0x37420>
  439dec:	ldr	x27, [sp, #192]
  439df0:	mov	x11, xzr
  439df4:	mov	x23, xzr
  439df8:	ldr	x8, [x9, #96]
  439dfc:	ldr	x9, [sp, #56]
  439e00:	ldr	x10, [sp, #264]
  439e04:	add	x8, x8, x9, lsl #5
  439e08:	str	x10, [x8]
  439e0c:	ldr	x10, [sp, #64]
  439e10:	add	x9, x9, #0x1
  439e14:	str	w10, [x8, #8]
  439e18:	ldr	w10, [sp, #52]
  439e1c:	stp	x11, x23, [x8, #16]
  439e20:	str	x9, [sp, #56]
  439e24:	str	w10, [x8, #12]
  439e28:	ldr	w8, [sp, #84]
  439e2c:	cbz	w8, 4396f8 <feof@plt+0x36d28>
  439e30:	b	43a3ac <feof@plt+0x379dc>
  439e34:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439e38:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439e3c:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439e40:	sub	w5, w26, w28
  439e44:	sub	x0, x29, #0xd8
  439e48:	mov	w1, #0xc8                  	// #200
  439e4c:	add	x2, x2, #0xbd7
  439e50:	add	x3, x3, #0xbc7
  439e54:	add	x4, x4, #0x96c
  439e58:	bl	402740 <snprintf@plt>
  439e5c:	sub	x1, x29, #0xd8
  439e60:	mov	x0, x20
  439e64:	mov	w2, wzr
  439e68:	blr	x21
  439e6c:	ldr	x9, [sp, #152]
  439e70:	mov	w8, #0x1                   	// #1
  439e74:	mov	x27, xzr
  439e78:	mov	x11, xzr
  439e7c:	mov	x23, xzr
  439e80:	str	w8, [sp, #84]
  439e84:	b	439df8 <feof@plt+0x37428>
  439e88:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439e8c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439e90:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  439e94:	sub	w5, w26, w28
  439e98:	sub	x0, x29, #0xd8
  439e9c:	mov	w1, #0xc8                  	// #200
  439ea0:	add	x2, x2, #0xbd7
  439ea4:	add	x3, x3, #0xbc7
  439ea8:	add	x4, x4, #0x96c
  439eac:	bl	402740 <snprintf@plt>
  439eb0:	sub	x1, x29, #0xd8
  439eb4:	mov	x0, x20
  439eb8:	mov	w2, wzr
  439ebc:	blr	x21
  439ec0:	ldr	x8, [sp, #152]
  439ec4:	adrp	x3, 43a000 <feof@plt+0x37630>
  439ec8:	mov	w2, #0x20                  	// #32
  439ecc:	add	x3, x3, #0xb8c
  439ed0:	ldp	x1, x0, [x8, #88]
  439ed4:	bl	43f518 <feof@plt+0x3cb48>
  439ed8:	ldr	x26, [sp, #104]
  439edc:	ldp	x8, x9, [sp, #384]
  439ee0:	ldp	x23, x22, [sp, #88]
  439ee4:	cbz	x9, 439f00 <feof@plt+0x37530>
  439ee8:	add	x11, x8, #0x1
  439eec:	sub	x10, x9, #0x1
  439ef0:	stp	x11, x10, [sp, #384]
  439ef4:	ldrb	w9, [x8]
  439ef8:	mov	x8, x11
  439efc:	b	439f5c <feof@plt+0x3758c>
  439f00:	ldr	w9, [sp, #424]
  439f04:	cbz	w9, 439f14 <feof@plt+0x37544>
  439f08:	mov	x10, xzr
  439f0c:	mov	w9, wzr
  439f10:	b	439f5c <feof@plt+0x3758c>
  439f14:	ldr	w9, [sp, #376]
  439f18:	ldr	x4, [sp, #368]
  439f1c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  439f20:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  439f24:	sub	w5, w8, w9
  439f28:	sub	x0, x29, #0xd8
  439f2c:	mov	w1, #0xc8                  	// #200
  439f30:	add	x2, x2, #0xbd7
  439f34:	add	x3, x3, #0xbc7
  439f38:	bl	402740 <snprintf@plt>
  439f3c:	ldp	x8, x0, [sp, #408]
  439f40:	sub	x1, x29, #0xd8
  439f44:	mov	w2, wzr
  439f48:	blr	x8
  439f4c:	ldp	x8, x10, [sp, #384]
  439f50:	mov	w11, #0x1                   	// #1
  439f54:	mov	w9, wzr
  439f58:	str	w11, [sp, #424]
  439f5c:	ldp	x11, x14, [sp, #144]
  439f60:	ldr	w13, [sp, #260]
  439f64:	ldr	x12, [sp, #184]
  439f68:	ldp	x1, x3, [sp, #232]
  439f6c:	stp	x8, x10, [x14]
  439f70:	ldr	x10, [sp, #176]
  439f74:	cmp	w13, #0x0
  439f78:	str	w9, [x14, #48]
  439f7c:	mov	w9, #0xc                   	// #12
  439f80:	sub	x8, x8, x10
  439f84:	ldr	w10, [sp, #140]
  439f88:	add	x11, x11, x12
  439f8c:	stp	x8, x12, [x14, #16]
  439f90:	ldr	x4, [sp, #248]
  439f94:	stp	w10, w13, [x14, #40]
  439f98:	mov	w10, #0x4                   	// #4
  439f9c:	csel	x9, x10, x9, eq  // eq = none
  439fa0:	add	x8, x11, x9
  439fa4:	str	x8, [sp, #184]
  439fa8:	str	x8, [x14, #32]
  439fac:	add	x8, sp, #0x16c
  439fb0:	str	x8, [sp, #40]
  439fb4:	add	x8, sp, #0x148
  439fb8:	stp	x14, x8, [sp, #24]
  439fbc:	ldp	x8, x5, [sp, #208]
  439fc0:	ldr	x6, [sp, #224]
  439fc4:	ldr	w7, [sp, #256]
  439fc8:	movi	v0.2d, #0x0
  439fcc:	add	x2, sp, #0x170
  439fd0:	mov	x0, x19
  439fd4:	stur	q0, [x14, #56]
  439fd8:	stur	q0, [x14, #72]
  439fdc:	stur	q0, [x14, #104]
  439fe0:	stur	q0, [x14, #120]
  439fe4:	stp	x21, x20, [sp, #8]
  439fe8:	str	x8, [sp]
  439fec:	bl	43a578 <feof@plt+0x37ba8>
  439ff0:	cbz	w0, 43a058 <feof@plt+0x37688>
  439ff4:	ldr	w8, [sp, #424]
  439ff8:	cbnz	w8, 43a058 <feof@plt+0x37688>
  439ffc:	ldr	w8, [sp, #512]
  43a000:	ldp	x11, x12, [sp, #120]
  43a004:	ldp	x2, x3, [sp, #160]
  43a008:	cbnz	x12, 4390b4 <feof@plt+0x366e4>
  43a00c:	ldr	x28, [sp, #272]
  43a010:	cbnz	w8, 43a05c <feof@plt+0x3768c>
  43a014:	b	43a150 <feof@plt+0x37780>
  43a018:	ldr	w8, [sp, #280]
  43a01c:	cbnz	w8, 43a058 <feof@plt+0x37688>
  43a020:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a024:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a028:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a02c:	sub	w5, w25, w28
  43a030:	add	x2, x2, #0xbd7
  43a034:	add	x3, x3, #0xbc7
  43a038:	add	x4, x4, #0x96c
  43a03c:	sub	x0, x29, #0xd8
  43a040:	mov	w1, #0xc8                  	// #200
  43a044:	bl	402740 <snprintf@plt>
  43a048:	sub	x1, x29, #0xd8
  43a04c:	mov	x0, x20
  43a050:	mov	w2, wzr
  43a054:	blr	x21
  43a058:	ldr	x28, [sp, #272]
  43a05c:	cbz	x28, 43a11c <feof@plt+0x3774c>
  43a060:	ldr	x22, [sp, #432]
  43a064:	mov	x23, xzr
  43a068:	b	43a0a8 <feof@plt+0x376d8>
  43a06c:	mov	x2, xzr
  43a070:	mov	x0, x19
  43a074:	mov	x3, x21
  43a078:	mov	x4, x20
  43a07c:	bl	435614 <feof@plt+0x32c44>
  43a080:	stp	xzr, xzr, [x24]
  43a084:	ldr	x1, [x22, x23, lsl #3]
  43a088:	mov	w2, #0x88                  	// #136
  43a08c:	mov	x0, x19
  43a090:	mov	x3, x21
  43a094:	mov	x4, x20
  43a098:	bl	435614 <feof@plt+0x32c44>
  43a09c:	add	x23, x23, #0x1
  43a0a0:	cmp	x23, x28
  43a0a4:	b.eq	43a0fc <feof@plt+0x3772c>  // b.none
  43a0a8:	ldr	x25, [x22, x23, lsl #3]
  43a0ac:	mov	x24, x25
  43a0b0:	ldr	x8, [x24, #88]!
  43a0b4:	ldr	x1, [x25, #96]
  43a0b8:	cbz	x8, 43a06c <feof@plt+0x3769c>
  43a0bc:	mov	x26, xzr
  43a0c0:	mov	x27, xzr
  43a0c4:	add	x8, x1, x26
  43a0c8:	ldp	x9, x1, [x8, #16]
  43a0cc:	mov	x0, x19
  43a0d0:	mov	x3, x21
  43a0d4:	mov	x4, x20
  43a0d8:	lsl	x2, x9, #3
  43a0dc:	bl	435614 <feof@plt+0x32c44>
  43a0e0:	ldp	x8, x1, [x25, #88]
  43a0e4:	add	x27, x27, #0x1
  43a0e8:	add	x26, x26, #0x20
  43a0ec:	cmp	x27, x8
  43a0f0:	b.cc	43a0c4 <feof@plt+0x376f4>  // b.lo, b.ul, b.last
  43a0f4:	lsl	x2, x8, #5
  43a0f8:	b	43a070 <feof@plt+0x376a0>
  43a0fc:	ldp	x8, x9, [sp, #440]
  43a100:	add	x1, sp, #0x1b0
  43a104:	mov	x0, x19
  43a108:	mov	x2, x21
  43a10c:	add	x8, x9, x8
  43a110:	mov	x3, x20
  43a114:	stp	xzr, x8, [sp, #440]
  43a118:	bl	43583c <feof@plt+0x32e6c>
  43a11c:	ldr	x8, [sp, #352]
  43a120:	cbz	x8, 43a260 <feof@plt+0x37890>
  43a124:	ldp	x8, x9, [sp, #336]
  43a128:	add	x1, sp, #0x148
  43a12c:	mov	x0, x19
  43a130:	mov	x2, x21
  43a134:	add	x8, x9, x8
  43a138:	mov	x3, x20
  43a13c:	stp	xzr, x8, [sp, #336]
  43a140:	bl	43583c <feof@plt+0x32e6c>
  43a144:	str	xzr, [sp, #352]
  43a148:	b	43a260 <feof@plt+0x37890>
  43a14c:	mov	x28, xzr
  43a150:	ldr	q0, [sp, #432]
  43a154:	ldr	x8, [sp, #448]
  43a158:	mov	x25, x2
  43a15c:	mov	x24, x3
  43a160:	add	x1, sp, #0x148
  43a164:	mov	x0, x19
  43a168:	mov	x2, x21
  43a16c:	mov	x3, x20
  43a170:	mov	x27, x23
  43a174:	mov	x26, x22
  43a178:	str	q0, [sp, #288]
  43a17c:	stp	x8, x28, [sp, #304]
  43a180:	bl	43583c <feof@plt+0x32e6c>
  43a184:	cbz	w0, 43a260 <feof@plt+0x37890>
  43a188:	add	x1, sp, #0x120
  43a18c:	mov	x0, x19
  43a190:	mov	x2, x21
  43a194:	mov	x3, x20
  43a198:	bl	43583c <feof@plt+0x32e6c>
  43a19c:	cbz	w0, 43a260 <feof@plt+0x37890>
  43a1a0:	ldr	x22, [sp, #328]
  43a1a4:	ldr	x23, [sp, #352]
  43a1a8:	ldr	x8, [sp, #312]
  43a1ac:	ldr	x28, [sp, #288]
  43a1b0:	adrp	x3, 43a000 <feof@plt+0x37630>
  43a1b4:	add	x3, x3, #0x508
  43a1b8:	mov	w2, #0x18                  	// #24
  43a1bc:	mov	x0, x22
  43a1c0:	mov	x1, x23
  43a1c4:	str	x8, [sp, #280]
  43a1c8:	bl	43f518 <feof@plt+0x3cb48>
  43a1cc:	mov	w1, #0xa0                  	// #160
  43a1d0:	mov	x0, x19
  43a1d4:	mov	x2, x21
  43a1d8:	mov	x3, x20
  43a1dc:	bl	435450 <feof@plt+0x32a80>
  43a1e0:	cbz	x0, 43a260 <feof@plt+0x37890>
  43a1e4:	ldr	x10, [sp, #208]
  43a1e8:	ldp	x8, x9, [x29, #160]
  43a1ec:	movi	v0.2d, #0x0
  43a1f0:	stp	x23, x28, [x0, #32]
  43a1f4:	stp	xzr, x10, [x0]
  43a1f8:	ldr	x10, [sp, #232]
  43a1fc:	stp	x24, x27, [x0, #64]
  43a200:	stp	q0, q0, [x0, #128]
  43a204:	stp	x10, x22, [x0, #16]
  43a208:	ldr	x10, [sp, #280]
  43a20c:	stp	x10, x25, [x0, #48]
  43a210:	ldr	x10, [sp, #216]
  43a214:	stp	x26, x10, [x0, #80]
  43a218:	ldr	x10, [sp, #224]
  43a21c:	str	x10, [x0, #96]
  43a220:	ldr	x10, [sp, #240]
  43a224:	str	x10, [x0, #104]
  43a228:	ldr	x10, [sp, #248]
  43a22c:	str	x10, [x0, #112]
  43a230:	ldr	w10, [sp, #256]
  43a234:	str	w10, [x0, #120]
  43a238:	cbz	x9, 43a240 <feof@plt+0x37870>
  43a23c:	str	x0, [x9]
  43a240:	ldr	w10, [x19, #8]
  43a244:	add	x9, x19, #0x20
  43a248:	cbnz	w10, 43a288 <feof@plt+0x378b8>
  43a24c:	mov	x10, x9
  43a250:	ldr	x9, [x9]
  43a254:	cbnz	x9, 43a24c <feof@plt+0x3787c>
  43a258:	str	x0, [x10]
  43a25c:	b	43a2a8 <feof@plt+0x378d8>
  43a260:	mov	w0, wzr
  43a264:	add	sp, sp, #0x2e0
  43a268:	ldp	x20, x19, [sp, #80]
  43a26c:	ldp	x22, x21, [sp, #64]
  43a270:	ldp	x24, x23, [sp, #48]
  43a274:	ldp	x26, x25, [sp, #32]
  43a278:	ldp	x28, x27, [sp, #16]
  43a27c:	ldp	x29, x30, [sp], #96
  43a280:	ret
  43a284:	clrex
  43a288:	mov	x11, x9
  43a28c:	mov	x10, x11
  43a290:	ldar	x11, [x11]
  43a294:	cbnz	x11, 43a28c <feof@plt+0x378bc>
  43a298:	ldaxr	x11, [x10]
  43a29c:	cbnz	x11, 43a284 <feof@plt+0x378b4>
  43a2a0:	stlxr	w11, x0, [x10]
  43a2a4:	cbnz	w11, 43a298 <feof@plt+0x378c8>
  43a2a8:	adrp	x9, 43a000 <feof@plt+0x37630>
  43a2ac:	add	x9, x9, #0x424
  43a2b0:	mov	w0, #0x1                   	// #1
  43a2b4:	str	x9, [x8]
  43a2b8:	b	43a264 <feof@plt+0x37894>
  43a2bc:	ldr	w8, [sp, #512]
  43a2c0:	cbnz	w8, 43a058 <feof@plt+0x37688>
  43a2c4:	ldr	w8, [sp, #472]
  43a2c8:	ldr	w9, [sp, #464]
  43a2cc:	ldr	x4, [sp, #456]
  43a2d0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a2d4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a2d8:	sub	w5, w8, w9
  43a2dc:	add	x2, x2, #0xbd7
  43a2e0:	add	x3, x3, #0xbc7
  43a2e4:	sub	x0, x29, #0xd8
  43a2e8:	mov	w1, #0xc8                  	// #200
  43a2ec:	bl	402740 <snprintf@plt>
  43a2f0:	ldp	x8, x0, [sp, #496]
  43a2f4:	sub	x1, x29, #0xd8
  43a2f8:	mov	w2, wzr
  43a2fc:	blr	x8
  43a300:	ldr	x28, [sp, #272]
  43a304:	mov	w8, #0x1                   	// #1
  43a308:	str	w8, [sp, #512]
  43a30c:	b	43a05c <feof@plt+0x3768c>
  43a310:	ldr	w9, [sp, #424]
  43a314:	cbnz	w9, 43a364 <feof@plt+0x37994>
  43a318:	ldr	w9, [sp, #376]
  43a31c:	ldr	x4, [sp, #368]
  43a320:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a324:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a328:	sub	w5, w8, w9
  43a32c:	add	x2, x2, #0xbd7
  43a330:	add	x3, x3, #0xbc7
  43a334:	sub	x0, x29, #0xd8
  43a338:	mov	w1, #0xc8                  	// #200
  43a33c:	bl	402740 <snprintf@plt>
  43a340:	ldp	x8, x0, [sp, #408]
  43a344:	sub	x1, x29, #0xd8
  43a348:	mov	w2, wzr
  43a34c:	blr	x8
  43a350:	ldr	x8, [sp, #384]
  43a354:	mov	w9, #0x1                   	// #1
  43a358:	str	w9, [sp, #424]
  43a35c:	b	43a364 <feof@plt+0x37994>
  43a360:	mov	x8, x9
  43a364:	ldr	w9, [sp, #376]
  43a368:	ldr	x4, [sp, #368]
  43a36c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a370:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a374:	sub	w5, w8, w9
  43a378:	add	x2, x2, #0xbd7
  43a37c:	add	x3, x3, #0xbac
  43a380:	sub	x0, x29, #0xd8
  43a384:	mov	w1, #0xc8                  	// #200
  43a388:	bl	402740 <snprintf@plt>
  43a38c:	ldp	x8, x0, [sp, #408]
  43a390:	sub	x1, x29, #0xd8
  43a394:	mov	w2, wzr
  43a398:	blr	x8
  43a39c:	b	43a058 <feof@plt+0x37688>
  43a3a0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a3a4:	add	x1, x1, #0xbe6
  43a3a8:	b	43a04c <feof@plt+0x3767c>
  43a3ac:	ldr	x9, [sp, #152]
  43a3b0:	ldp	x8, x1, [x9, #88]
  43a3b4:	cbz	x8, 43a400 <feof@plt+0x37a30>
  43a3b8:	ldr	x28, [sp, #272]
  43a3bc:	mov	x22, xzr
  43a3c0:	mov	x23, xzr
  43a3c4:	add	x8, x1, x22
  43a3c8:	ldp	x9, x1, [x8, #16]
  43a3cc:	mov	x0, x19
  43a3d0:	mov	x3, x21
  43a3d4:	mov	x4, x20
  43a3d8:	lsl	x2, x9, #3
  43a3dc:	bl	435614 <feof@plt+0x32c44>
  43a3e0:	ldr	x9, [sp, #152]
  43a3e4:	add	x23, x23, #0x1
  43a3e8:	add	x22, x22, #0x20
  43a3ec:	ldp	x8, x1, [x9, #88]
  43a3f0:	cmp	x23, x8
  43a3f4:	b.cc	43a3c4 <feof@plt+0x379f4>  // b.lo, b.ul, b.last
  43a3f8:	lsl	x2, x8, #5
  43a3fc:	b	43a408 <feof@plt+0x37a38>
  43a400:	ldr	x28, [sp, #272]
  43a404:	mov	x2, xzr
  43a408:	mov	x0, x19
  43a40c:	mov	x3, x21
  43a410:	mov	x4, x20
  43a414:	bl	435614 <feof@plt+0x32c44>
  43a418:	ldr	x8, [sp, #200]
  43a41c:	stp	xzr, xzr, [x8]
  43a420:	b	43a05c <feof@plt+0x3768c>
  43a424:	sub	sp, sp, #0x50
  43a428:	stp	x29, x30, [sp, #16]
  43a42c:	stp	x24, x23, [sp, #32]
  43a430:	stp	x22, x21, [sp, #48]
  43a434:	stp	x20, x19, [sp, #64]
  43a438:	add	x29, sp, #0x10
  43a43c:	ldr	w8, [x0, #8]
  43a440:	mov	x20, x4
  43a444:	mov	x22, x3
  43a448:	mov	x19, x2
  43a44c:	mov	x23, x0
  43a450:	mov	x21, x1
  43a454:	cbz	w8, 43a49c <feof@plt+0x37acc>
  43a458:	add	x8, x23, #0x20
  43a45c:	ldar	x24, [x8]
  43a460:	cbz	x24, 43a4d8 <feof@plt+0x37b08>
  43a464:	sub	x6, x29, #0x4
  43a468:	mov	x0, x23
  43a46c:	mov	x1, x24
  43a470:	mov	x2, x21
  43a474:	mov	x3, x19
  43a478:	mov	x4, x22
  43a47c:	mov	x5, x20
  43a480:	bl	43bf94 <feof@plt+0x395c4>
  43a484:	ldur	w8, [x29, #-4]
  43a488:	orr	w8, w8, w0
  43a48c:	cbnz	w8, 43a4f0 <feof@plt+0x37b20>
  43a490:	ldar	x24, [x24]
  43a494:	cbnz	x24, 43a464 <feof@plt+0x37a94>
  43a498:	b	43a4d8 <feof@plt+0x37b08>
  43a49c:	ldr	x24, [x23, #32]
  43a4a0:	cbz	x24, 43a4d8 <feof@plt+0x37b08>
  43a4a4:	sub	x6, x29, #0x4
  43a4a8:	mov	x0, x23
  43a4ac:	mov	x1, x24
  43a4b0:	mov	x2, x21
  43a4b4:	mov	x3, x19
  43a4b8:	mov	x4, x22
  43a4bc:	mov	x5, x20
  43a4c0:	bl	43bf94 <feof@plt+0x395c4>
  43a4c4:	ldur	w8, [x29, #-4]
  43a4c8:	orr	w8, w8, w0
  43a4cc:	cbnz	w8, 43a4f0 <feof@plt+0x37b20>
  43a4d0:	ldr	x24, [x24]
  43a4d4:	cbnz	x24, 43a4a4 <feof@plt+0x37ad4>
  43a4d8:	mov	x0, x20
  43a4dc:	mov	x1, x21
  43a4e0:	mov	x2, xzr
  43a4e4:	mov	w3, wzr
  43a4e8:	mov	x4, xzr
  43a4ec:	blr	x19
  43a4f0:	ldp	x20, x19, [sp, #64]
  43a4f4:	ldp	x22, x21, [sp, #48]
  43a4f8:	ldp	x24, x23, [sp, #32]
  43a4fc:	ldp	x29, x30, [sp, #16]
  43a500:	add	sp, sp, #0x50
  43a504:	ret
  43a508:	ldr	x8, [x0]
  43a50c:	ldr	x9, [x1]
  43a510:	cmp	x8, x9
  43a514:	b.cs	43a520 <feof@plt+0x37b50>  // b.hs, b.nlast
  43a518:	mov	w0, #0xffffffff            	// #-1
  43a51c:	ret
  43a520:	b.ls	43a52c <feof@plt+0x37b5c>  // b.plast
  43a524:	mov	w0, #0x1                   	// #1
  43a528:	ret
  43a52c:	ldr	x8, [x0, #8]
  43a530:	ldr	x9, [x1, #8]
  43a534:	cmp	x8, x9
  43a538:	b.cs	43a544 <feof@plt+0x37b74>  // b.hs, b.nlast
  43a53c:	mov	w0, #0x1                   	// #1
  43a540:	ret
  43a544:	b.ls	43a550 <feof@plt+0x37b80>  // b.plast
  43a548:	mov	w0, #0xffffffff            	// #-1
  43a54c:	ret
  43a550:	ldr	x8, [x0, #16]
  43a554:	ldr	x9, [x1, #16]
  43a558:	ldr	x8, [x8, #56]
  43a55c:	ldr	x9, [x9, #56]
  43a560:	cmp	x8, x9
  43a564:	b.ge	43a570 <feof@plt+0x37ba0>  // b.tcont
  43a568:	mov	w0, #0xffffffff            	// #-1
  43a56c:	ret
  43a570:	cset	w0, gt
  43a574:	ret
  43a578:	sub	sp, sp, #0x1d0
  43a57c:	stp	x29, x30, [sp, #368]
  43a580:	stp	x28, x27, [sp, #384]
  43a584:	stp	x26, x25, [sp, #400]
  43a588:	stp	x24, x23, [sp, #416]
  43a58c:	stp	x22, x21, [sp, #432]
  43a590:	stp	x20, x19, [sp, #448]
  43a594:	add	x29, sp, #0x170
  43a598:	ldr	x8, [x2, #24]
  43a59c:	cbz	x8, 43aa50 <feof@plt+0x38080>
  43a5a0:	ldr	x9, [x29, #136]
  43a5a4:	ldp	x27, x20, [x29, #120]
  43a5a8:	ldr	x28, [x29, #96]
  43a5ac:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a5b0:	str	x9, [sp, #128]
  43a5b4:	ldr	x9, [x29, #112]
  43a5b8:	mov	w26, w7
  43a5bc:	mov	x23, x4
  43a5c0:	mov	x24, x3
  43a5c4:	str	x9, [sp, #144]
  43a5c8:	ldr	x9, [x29, #104]
  43a5cc:	mov	x19, x2
  43a5d0:	add	x21, x21, #0xc90
  43a5d4:	stp	x0, x1, [sp, #112]
  43a5d8:	stp	x5, x6, [sp, #96]
  43a5dc:	str	x9, [sp, #152]
  43a5e0:	str	x20, [sp, #136]
  43a5e4:	ldr	x10, [x19, #16]
  43a5e8:	cbz	x8, 43aa58 <feof@plt+0x38088>
  43a5ec:	mov	w9, wzr
  43a5f0:	mov	w22, wzr
  43a5f4:	mov	x20, xzr
  43a5f8:	add	x11, x10, #0x1
  43a5fc:	sub	x8, x8, #0x1
  43a600:	stp	x11, x8, [x19, #16]
  43a604:	ldrb	w25, [x10]
  43a608:	cmp	w22, #0x3f
  43a60c:	b.hi	43a628 <feof@plt+0x37c58>  // b.pmore
  43a610:	and	x8, x25, #0x7f
  43a614:	lsl	x8, x8, x22
  43a618:	orr	x20, x8, x20
  43a61c:	sxtb	w8, w25
  43a620:	tbnz	w8, #31, 43a634 <feof@plt+0x37c64>
  43a624:	b	43a684 <feof@plt+0x37cb4>
  43a628:	cbz	w9, 43a644 <feof@plt+0x37c74>
  43a62c:	sxtb	w8, w25
  43a630:	tbz	w8, #31, 43a684 <feof@plt+0x37cb4>
  43a634:	ldp	x10, x8, [x19, #16]
  43a638:	add	w22, w22, #0x7
  43a63c:	cbnz	x8, 43a5f8 <feof@plt+0x37c28>
  43a640:	b	43aa58 <feof@plt+0x38088>
  43a644:	ldr	w8, [x19, #8]
  43a648:	ldr	x4, [x19]
  43a64c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a650:	add	x0, sp, #0xa0
  43a654:	sub	w5, w11, w8
  43a658:	mov	w1, #0xc8                  	// #200
  43a65c:	add	x2, x2, #0xbd7
  43a660:	mov	x3, x21
  43a664:	bl	402740 <snprintf@plt>
  43a668:	ldp	x8, x0, [x19, #40]
  43a66c:	add	x1, sp, #0xa0
  43a670:	mov	w2, wzr
  43a674:	blr	x8
  43a678:	mov	w9, #0x1                   	// #1
  43a67c:	sxtb	w8, w25
  43a680:	tbnz	w8, #31, 43a634 <feof@plt+0x37c64>
  43a684:	cbz	x20, 43aa50 <feof@plt+0x38080>
  43a688:	ldr	x8, [x27, #88]
  43a68c:	sub	x10, x20, #0x1
  43a690:	cmp	x10, x8
  43a694:	b.cs	43a864 <feof@plt+0x37e94>  // b.hs, b.nlast
  43a698:	ldr	x9, [x27, #96]
  43a69c:	add	x25, x9, x10, lsl #5
  43a6a0:	ldr	x10, [x25]
  43a6a4:	cmp	x10, x20
  43a6a8:	b.ne	43a86c <feof@plt+0x37e9c>  // b.any
  43a6ac:	cbz	x25, 43aab8 <feof@plt+0x380e8>
  43a6b0:	ldr	x9, [sp, #128]
  43a6b4:	cbz	x9, 43a6c0 <feof@plt+0x37cf0>
  43a6b8:	ldr	w8, [x25, #8]
  43a6bc:	str	w8, [x9]
  43a6c0:	ldr	x8, [x25, #16]
  43a6c4:	str	w26, [sp, #60]
  43a6c8:	cbz	x8, 43a8a8 <feof@plt+0x37ed8>
  43a6cc:	str	xzr, [sp, #88]
  43a6d0:	stp	xzr, xzr, [sp, #64]
  43a6d4:	ldr	x8, [x25, #24]
  43a6d8:	mov	x26, xzr
  43a6dc:	mov	x22, xzr
  43a6e0:	mov	x20, xzr
  43a6e4:	str	wzr, [sp, #56]
  43a6e8:	str	wzr, [sp, #84]
  43a6ec:	b	43a720 <feof@plt+0x37d50>
  43a6f0:	ldr	w9, [sp, #160]
  43a6f4:	ldr	x10, [sp, #168]
  43a6f8:	cmp	w9, #0x1
  43a6fc:	ldr	w9, [sp, #92]
  43a700:	csel	x22, x10, x22, eq  // eq = none
  43a704:	csinc	w9, w9, wzr, ne  // ne = any
  43a708:	str	w9, [sp, #92]
  43a70c:	ldr	x9, [x25, #16]
  43a710:	add	x20, x20, #0x1
  43a714:	add	x26, x26, #0x8
  43a718:	cmp	x20, x9
  43a71c:	b.cs	43a8bc <feof@plt+0x37eec>  // b.hs, b.nlast
  43a720:	add	x8, x8, x26
  43a724:	ldp	w3, w2, [x27, #40]
  43a728:	ldr	w0, [x8, #4]
  43a72c:	ldr	w4, [x27, #48]
  43a730:	add	x8, sp, #0xa0
  43a734:	mov	x1, x19
  43a738:	mov	x5, x24
  43a73c:	mov	x6, x23
  43a740:	mov	x7, x28
  43a744:	str	x8, [sp]
  43a748:	bl	43aba4 <feof@plt+0x381d4>
  43a74c:	cbz	w0, 43aab8 <feof@plt+0x380e8>
  43a750:	ldr	x8, [x25, #24]
  43a754:	ldr	w10, [x8, x26]
  43a758:	sub	w9, w10, #0x3
  43a75c:	cmp	w9, #0x18
  43a760:	b.hi	43a7a0 <feof@plt+0x37dd0>  // b.pmore
  43a764:	adrp	x12, 45f000 <_obstack_memory_used@@Base+0xea68>
  43a768:	add	x12, x12, #0xa60
  43a76c:	adr	x10, 43a6f0 <feof@plt+0x37d20>
  43a770:	ldrb	w11, [x12, x9]
  43a774:	add	x10, x10, x11, lsl #2
  43a778:	br	x10
  43a77c:	ldr	w9, [x25, #8]
  43a780:	cmp	w9, #0x11
  43a784:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a788:	ldr	w9, [sp, #160]
  43a78c:	cmp	w9, #0x4
  43a790:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a794:	ldr	x9, [sp, #168]
  43a798:	str	x9, [x27, #64]
  43a79c:	b	43a70c <feof@plt+0x37d3c>
  43a7a0:	cmp	w10, #0x55
  43a7a4:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a7a8:	ldr	w9, [sp, #160]
  43a7ac:	cmp	w9, #0x8
  43a7b0:	b.eq	43a7bc <feof@plt+0x37dec>  // b.none
  43a7b4:	cmp	w9, #0x2
  43a7b8:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a7bc:	ldr	x9, [sp, #168]
  43a7c0:	str	x9, [sp, #64]
  43a7c4:	mov	w9, #0x1                   	// #1
  43a7c8:	str	w9, [sp, #88]
  43a7cc:	b	43a70c <feof@plt+0x37d3c>
  43a7d0:	ldr	w9, [x25, #8]
  43a7d4:	cmp	w9, #0x11
  43a7d8:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a7dc:	ldr	w9, [sp, #160]
  43a7e0:	cmp	w9, #0x8
  43a7e4:	b.eq	43a7f0 <feof@plt+0x37e20>  // b.none
  43a7e8:	cmp	w9, #0x2
  43a7ec:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a7f0:	ldr	x9, [sp, #168]
  43a7f4:	str	x9, [x27, #56]
  43a7f8:	b	43a70c <feof@plt+0x37d3c>
  43a7fc:	ldr	w9, [sp, #160]
  43a800:	cmp	w9, #0x2
  43a804:	b.eq	43a848 <feof@plt+0x37e78>  // b.none
  43a808:	cmp	w9, #0x1
  43a80c:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a810:	ldr	x9, [sp, #168]
  43a814:	str	x9, [sp, #72]
  43a818:	mov	w9, #0x1                   	// #1
  43a81c:	str	w9, [sp, #84]
  43a820:	b	43a70c <feof@plt+0x37d3c>
  43a824:	ldr	w9, [x25, #8]
  43a828:	cmp	w9, #0x11
  43a82c:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a830:	ldr	w9, [sp, #160]
  43a834:	cmp	w9, #0x4
  43a838:	b.ne	43a70c <feof@plt+0x37d3c>  // b.any
  43a83c:	ldr	x9, [sp, #168]
  43a840:	str	x9, [x27, #72]
  43a844:	b	43a70c <feof@plt+0x37d3c>
  43a848:	ldr	x9, [sp, #168]
  43a84c:	str	x9, [sp, #72]
  43a850:	mov	w9, #0x1                   	// #1
  43a854:	str	w9, [sp, #84]
  43a858:	mov	w9, #0x1                   	// #1
  43a85c:	str	w9, [sp, #56]
  43a860:	b	43a70c <feof@plt+0x37d3c>
  43a864:	cbz	x8, 43aaa4 <feof@plt+0x380d4>
  43a868:	ldr	x9, [x27, #96]
  43a86c:	mov	x10, xzr
  43a870:	b	43a880 <feof@plt+0x37eb0>
  43a874:	cmp	x10, x11
  43a878:	mov	x8, x11
  43a87c:	b.cs	43aaa4 <feof@plt+0x380d4>  // b.hs, b.nlast
  43a880:	add	x11, x8, x10
  43a884:	lsr	x11, x11, #1
  43a888:	add	x25, x9, x11, lsl #5
  43a88c:	ldr	x12, [x25]
  43a890:	cmp	x12, x20
  43a894:	b.hi	43a874 <feof@plt+0x37ea4>  // b.pmore
  43a898:	b.cs	43a6ac <feof@plt+0x37cdc>  // b.hs, b.nlast
  43a89c:	add	x10, x11, #0x1
  43a8a0:	mov	x11, x8
  43a8a4:	b	43a874 <feof@plt+0x37ea4>
  43a8a8:	stp	xzr, xzr, [sp, #64]
  43a8ac:	str	wzr, [sp, #84]
  43a8b0:	str	wzr, [sp, #56]
  43a8b4:	str	xzr, [sp, #88]
  43a8b8:	mov	x22, xzr
  43a8bc:	ldr	w8, [x25, #8]
  43a8c0:	ldr	w26, [sp, #60]
  43a8c4:	cmp	w8, #0x2e
  43a8c8:	b.eq	43a8d4 <feof@plt+0x37f04>  // b.none
  43a8cc:	cmp	w8, #0x11
  43a8d0:	b.ne	43a9f0 <feof@plt+0x38020>  // b.any
  43a8d4:	ldr	w8, [sp, #88]
  43a8d8:	cbz	w8, 43a918 <feof@plt+0x37f48>
  43a8dc:	ldr	x8, [sp, #136]
  43a8e0:	ldp	x0, x1, [sp, #112]
  43a8e4:	ldr	x3, [sp, #64]
  43a8e8:	ldp	x6, x7, [sp, #96]
  43a8ec:	str	x8, [sp, #16]
  43a8f0:	ldr	x8, [sp, #144]
  43a8f4:	mov	x2, x27
  43a8f8:	mov	x4, x22
  43a8fc:	mov	w5, w26
  43a900:	str	x8, [sp, #8]
  43a904:	ldr	x8, [sp, #152]
  43a908:	str	x8, [sp]
  43a90c:	bl	43baf4 <feof@plt+0x39124>
  43a910:	cbnz	w0, 43a9cc <feof@plt+0x37ffc>
  43a914:	b	43aab8 <feof@plt+0x380e8>
  43a918:	ldr	w8, [sp, #84]
  43a91c:	cbz	w8, 43a9cc <feof@plt+0x37ffc>
  43a920:	ldr	w8, [sp, #92]
  43a924:	cbz	w8, 43a9cc <feof@plt+0x37ffc>
  43a928:	ldr	w8, [sp, #56]
  43a92c:	ldr	x10, [sp, #120]
  43a930:	ldr	x11, [sp, #72]
  43a934:	cmp	w8, #0x0
  43a938:	ldr	x8, [sp, #136]
  43a93c:	csel	x9, xzr, x22, eq  // eq = none
  43a940:	add	x22, x22, x10
  43a944:	add	x10, x11, x10
  43a948:	ldr	x8, [x8, #24]
  43a94c:	add	x13, x10, x9
  43a950:	cbz	x8, 43a994 <feof@plt+0x37fc4>
  43a954:	ldr	x9, [sp, #136]
  43a958:	sub	x11, x8, #0x1
  43a95c:	mov	w8, #0x18                  	// #24
  43a960:	ldr	x10, [x9]
  43a964:	madd	x8, x11, x8, x10
  43a968:	ldr	x9, [x8, #8]!
  43a96c:	cmp	x22, x9
  43a970:	b.eq	43a980 <feof@plt+0x37fb0>  // b.none
  43a974:	add	x12, x9, #0x1
  43a978:	cmp	x22, x12
  43a97c:	b.ne	43a994 <feof@plt+0x37fc4>  // b.any
  43a980:	mov	w12, #0x18                  	// #24
  43a984:	madd	x10, x11, x12, x10
  43a988:	ldr	x10, [x10, #16]
  43a98c:	cmp	x10, x27
  43a990:	b.eq	43aa40 <feof@plt+0x38070>  // b.none
  43a994:	ldr	x20, [sp, #136]
  43a998:	ldr	x0, [sp, #112]
  43a99c:	ldp	x3, x2, [sp, #144]
  43a9a0:	mov	w1, #0x18                  	// #24
  43a9a4:	mov	x4, x20
  43a9a8:	str	x13, [sp, #72]
  43a9ac:	bl	435724 <feof@plt+0x32d54>
  43a9b0:	cbz	x0, 43aab8 <feof@plt+0x380e8>
  43a9b4:	ldr	x8, [sp, #72]
  43a9b8:	str	x27, [x0, #16]
  43a9bc:	stp	x22, x8, [x0]
  43a9c0:	ldr	x8, [x20, #24]
  43a9c4:	add	x8, x8, #0x1
  43a9c8:	str	x8, [x20, #24]
  43a9cc:	ldr	w8, [x25, #8]
  43a9d0:	cmp	w8, #0x11
  43a9d4:	b.ne	43a9f0 <feof@plt+0x38020>  // b.any
  43a9d8:	ldr	w8, [sp, #88]
  43a9dc:	cbnz	w8, 43aa50 <feof@plt+0x38080>
  43a9e0:	ldr	w8, [sp, #84]
  43a9e4:	cbz	w8, 43a9f0 <feof@plt+0x38020>
  43a9e8:	ldr	w8, [sp, #92]
  43a9ec:	cbnz	w8, 43aa50 <feof@plt+0x38080>
  43a9f0:	ldr	w8, [x25, #12]
  43a9f4:	ldr	x20, [sp, #136]
  43a9f8:	cbz	w8, 43aa30 <feof@plt+0x38060>
  43a9fc:	ldr	x8, [sp, #144]
  43aa00:	ldp	x0, x1, [sp, #112]
  43aa04:	ldp	x5, x6, [sp, #96]
  43aa08:	mov	x2, x19
  43aa0c:	stp	x8, x27, [sp, #16]
  43aa10:	ldr	x8, [sp, #152]
  43aa14:	mov	x3, x24
  43aa18:	mov	x4, x23
  43aa1c:	mov	w7, w26
  43aa20:	stp	x20, xzr, [sp, #32]
  43aa24:	stp	x28, x8, [sp]
  43aa28:	bl	43a578 <feof@plt+0x37ba8>
  43aa2c:	cbz	w0, 43aab8 <feof@plt+0x380e8>
  43aa30:	ldr	x8, [x19, #24]
  43aa34:	mov	w22, #0x1                   	// #1
  43aa38:	cbnz	x8, 43a5e4 <feof@plt+0x37c14>
  43aa3c:	b	43aabc <feof@plt+0x380ec>
  43aa40:	cmp	x13, x9
  43aa44:	b.ls	43a9cc <feof@plt+0x37ffc>  // b.plast
  43aa48:	str	x13, [x8]
  43aa4c:	b	43a9cc <feof@plt+0x37ffc>
  43aa50:	mov	w22, #0x1                   	// #1
  43aa54:	b	43aabc <feof@plt+0x380ec>
  43aa58:	ldr	w8, [x19, #56]
  43aa5c:	mov	w22, #0x1                   	// #1
  43aa60:	cbnz	w8, 43aabc <feof@plt+0x380ec>
  43aa64:	ldr	w8, [x19, #8]
  43aa68:	ldr	x4, [x19]
  43aa6c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43aa70:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43aa74:	sub	w5, w10, w8
  43aa78:	add	x2, x2, #0xbd7
  43aa7c:	add	x3, x3, #0xbc7
  43aa80:	add	x0, sp, #0xa0
  43aa84:	mov	w1, #0xc8                  	// #200
  43aa88:	bl	402740 <snprintf@plt>
  43aa8c:	ldp	x8, x0, [x19, #40]
  43aa90:	add	x1, sp, #0xa0
  43aa94:	mov	w2, wzr
  43aa98:	blr	x8
  43aa9c:	str	w22, [x19, #56]
  43aaa0:	b	43aabc <feof@plt+0x380ec>
  43aaa4:	ldp	x0, x8, [sp, #144]
  43aaa8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43aaac:	add	x1, x1, #0xc01
  43aab0:	mov	w2, wzr
  43aab4:	blr	x8
  43aab8:	mov	w22, wzr
  43aabc:	mov	w0, w22
  43aac0:	ldp	x20, x19, [sp, #448]
  43aac4:	ldp	x22, x21, [sp, #432]
  43aac8:	ldp	x24, x23, [sp, #416]
  43aacc:	ldp	x26, x25, [sp, #400]
  43aad0:	ldp	x28, x27, [sp, #384]
  43aad4:	ldp	x29, x30, [sp, #368]
  43aad8:	add	sp, sp, #0x1d0
  43aadc:	ret
  43aae0:	sub	sp, sp, #0xf0
  43aae4:	stp	x29, x30, [sp, #208]
  43aae8:	str	x19, [sp, #224]
  43aaec:	add	x29, sp, #0xd0
  43aaf0:	ldp	x8, x9, [x0, #16]
  43aaf4:	mov	x19, x0
  43aaf8:	cmp	x9, #0x7
  43aafc:	b.hi	43ab10 <feof@plt+0x38140>  // b.pmore
  43ab00:	ldr	w9, [x19, #56]
  43ab04:	cbz	w9, 43ab30 <feof@plt+0x38160>
  43ab08:	mov	x0, xzr
  43ab0c:	b	43ab7c <feof@plt+0x381ac>
  43ab10:	ldr	w10, [x19, #32]
  43ab14:	add	x11, x8, #0x8
  43ab18:	sub	x9, x9, #0x8
  43ab1c:	stp	x11, x9, [x19, #16]
  43ab20:	cbz	w10, 43ab78 <feof@plt+0x381a8>
  43ab24:	ldr	x8, [x8]
  43ab28:	rev	x0, x8
  43ab2c:	b	43ab7c <feof@plt+0x381ac>
  43ab30:	ldr	w9, [x19, #8]
  43ab34:	ldr	x4, [x19]
  43ab38:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ab3c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ab40:	sub	w5, w8, w9
  43ab44:	add	x2, x2, #0xbd7
  43ab48:	add	x3, x3, #0xbc7
  43ab4c:	add	x0, sp, #0x8
  43ab50:	mov	w1, #0xc8                  	// #200
  43ab54:	bl	402740 <snprintf@plt>
  43ab58:	ldp	x8, x0, [x19, #40]
  43ab5c:	add	x1, sp, #0x8
  43ab60:	mov	w2, wzr
  43ab64:	blr	x8
  43ab68:	mov	w8, #0x1                   	// #1
  43ab6c:	mov	x0, xzr
  43ab70:	str	w8, [x19, #56]
  43ab74:	b	43ab7c <feof@plt+0x381ac>
  43ab78:	ldr	x0, [x8]
  43ab7c:	ldr	x19, [sp, #224]
  43ab80:	ldp	x29, x30, [sp, #208]
  43ab84:	add	sp, sp, #0xf0
  43ab88:	ret
  43ab8c:	ldr	x8, [x0]
  43ab90:	ldr	x9, [x1]
  43ab94:	cmp	x8, x9
  43ab98:	cset	w8, hi  // hi = pmore
  43ab9c:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  43aba0:	ret
  43aba4:	sub	sp, sp, #0x140
  43aba8:	stp	x29, x30, [sp, #224]
  43abac:	stp	x28, x27, [sp, #240]
  43abb0:	stp	x26, x25, [sp, #256]
  43abb4:	stp	x24, x23, [sp, #272]
  43abb8:	stp	x22, x21, [sp, #288]
  43abbc:	stp	x20, x19, [sp, #304]
  43abc0:	add	x29, sp, #0xe0
  43abc4:	ldr	x26, [x29, #96]
  43abc8:	sub	w8, w0, #0x1
  43abcc:	mov	x20, x7
  43abd0:	mov	w23, w2
  43abd4:	mov	x19, x1
  43abd8:	cmp	w8, #0x1f
  43abdc:	stp	xzr, xzr, [x26]
  43abe0:	b.hi	43ac14 <feof@plt+0x38244>  // b.pmore
  43abe4:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43abe8:	add	x9, x9, #0xa7a
  43abec:	adr	x10, 43ac0c <feof@plt+0x3823c>
  43abf0:	ldrh	w11, [x9, x8, lsl #1]
  43abf4:	add	x10, x10, x11, lsl #2
  43abf8:	mov	x22, x6
  43abfc:	mov	x21, x5
  43ac00:	mov	w24, w4
  43ac04:	mov	w25, w3
  43ac08:	br	x10
  43ac0c:	mov	w8, #0x2                   	// #2
  43ac10:	b	43b05c <feof@plt+0x3868c>
  43ac14:	mov	w8, #0xffffe0ff            	// #-7937
  43ac18:	add	w8, w0, w8
  43ac1c:	cmp	w8, #0x20
  43ac20:	b.hi	43b464 <feof@plt+0x38a94>  // b.pmore
  43ac24:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ac28:	add	x9, x9, #0xaba
  43ac2c:	adr	x10, 43ac3c <feof@plt+0x3826c>
  43ac30:	ldrh	w11, [x9, x8, lsl #1]
  43ac34:	add	x10, x10, x11, lsl #2
  43ac38:	br	x10
  43ac3c:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ac40:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ac44:	mov	x22, xzr
  43ac48:	mov	w23, wzr
  43ac4c:	mov	w8, wzr
  43ac50:	mov	w9, #0x8                   	// #8
  43ac54:	add	x20, x20, #0xbd7
  43ac58:	add	x21, x21, #0xc90
  43ac5c:	str	w9, [x26]
  43ac60:	b	43ac7c <feof@plt+0x382ac>
  43ac64:	and	x9, x24, #0x7f
  43ac68:	lsl	x9, x9, x23
  43ac6c:	orr	x22, x9, x22
  43ac70:	sxtb	w9, w24
  43ac74:	add	w23, w23, #0x7
  43ac78:	tbz	w9, #31, 43b4cc <feof@plt+0x38afc>
  43ac7c:	ldp	x10, x11, [x19, #16]
  43ac80:	cbz	x11, 43b3f4 <feof@plt+0x38a24>
  43ac84:	add	x9, x10, #0x1
  43ac88:	sub	x11, x11, #0x1
  43ac8c:	stp	x9, x11, [x19, #16]
  43ac90:	ldrb	w24, [x10]
  43ac94:	cmp	w23, #0x3f
  43ac98:	b.ls	43ac64 <feof@plt+0x38294>  // b.plast
  43ac9c:	cbnz	w8, 43ac70 <feof@plt+0x382a0>
  43aca0:	ldr	w8, [x19, #8]
  43aca4:	ldr	x4, [x19]
  43aca8:	add	x0, sp, #0x10
  43acac:	mov	w1, #0xc8                  	// #200
  43acb0:	sub	w5, w9, w8
  43acb4:	mov	x2, x20
  43acb8:	mov	x3, x21
  43acbc:	bl	402740 <snprintf@plt>
  43acc0:	ldp	x8, x0, [x19, #40]
  43acc4:	add	x1, sp, #0x10
  43acc8:	mov	w2, wzr
  43accc:	blr	x8
  43acd0:	mov	w8, #0x1                   	// #1
  43acd4:	b	43ac70 <feof@plt+0x382a0>
  43acd8:	sub	w8, w24, #0x1
  43acdc:	mov	w9, #0x1                   	// #1
  43ace0:	cmp	w8, #0x7
  43ace4:	str	w9, [x26]
  43ace8:	b.hi	43b758 <feof@plt+0x38d88>  // b.pmore
  43acec:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43acf0:	add	x9, x9, #0xb0c
  43acf4:	adr	x10, 43b03c <feof@plt+0x3866c>
  43acf8:	ldrh	w11, [x9, x8, lsl #1]
  43acfc:	add	x10, x10, x11, lsl #2
  43ad00:	br	x10
  43ad04:	mov	w8, #0xa                   	// #10
  43ad08:	str	w8, [x26]
  43ad0c:	ldp	x9, x8, [x19, #16]
  43ad10:	cmp	x8, #0x1
  43ad14:	b.hi	43b504 <feof@plt+0x38b34>  // b.pmore
  43ad18:	ldr	w10, [x19, #56]
  43ad1c:	cbnz	w10, 43ad88 <feof@plt+0x383b8>
  43ad20:	ldr	w8, [x19, #8]
  43ad24:	ldr	x4, [x19]
  43ad28:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ad2c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ad30:	sub	w5, w9, w8
  43ad34:	add	x2, x2, #0xbd7
  43ad38:	add	x3, x3, #0xbc7
  43ad3c:	add	x0, sp, #0x10
  43ad40:	mov	w1, #0xc8                  	// #200
  43ad44:	bl	402740 <snprintf@plt>
  43ad48:	ldp	x8, x0, [x19, #40]
  43ad4c:	add	x1, sp, #0x10
  43ad50:	mov	w2, wzr
  43ad54:	blr	x8
  43ad58:	ldr	x8, [x19, #24]
  43ad5c:	mov	w10, #0x1                   	// #1
  43ad60:	mov	x9, xzr
  43ad64:	str	w10, [x19, #56]
  43ad68:	b	43b870 <feof@plt+0x38ea0>
  43ad6c:	mov	w8, #0xa                   	// #10
  43ad70:	str	w8, [x26]
  43ad74:	ldp	x9, x8, [x19, #16]
  43ad78:	cmp	x8, #0x3
  43ad7c:	b.hi	43b528 <feof@plt+0x38b58>  // b.pmore
  43ad80:	ldr	w10, [x19, #56]
  43ad84:	cbz	w10, 43ad20 <feof@plt+0x38350>
  43ad88:	mov	x9, xzr
  43ad8c:	b	43b870 <feof@plt+0x38ea0>
  43ad90:	mov	w8, #0x2                   	// #2
  43ad94:	b	43b080 <feof@plt+0x386b0>
  43ad98:	mov	w8, #0x2                   	// #2
  43ad9c:	b	43b0b4 <feof@plt+0x386e4>
  43ada0:	mov	w8, #0x2                   	// #2
  43ada4:	str	w8, [x26]
  43ada8:	b	43b580 <feof@plt+0x38bb0>
  43adac:	mov	w8, #0x4                   	// #4
  43adb0:	str	w8, [x26]
  43adb4:	ldp	x20, x21, [x19, #16]
  43adb8:	mov	x0, x20
  43adbc:	mov	x1, x21
  43adc0:	bl	402930 <strnlen@plt>
  43adc4:	add	x9, x0, #0x1
  43adc8:	subs	x8, x21, x9
  43adcc:	b.cs	43b54c <feof@plt+0x38b7c>  // b.hs, b.nlast
  43add0:	ldr	w8, [x19, #56]
  43add4:	cbz	w8, 43b810 <feof@plt+0x38e40>
  43add8:	mov	x20, xzr
  43addc:	b	43b854 <feof@plt+0x38e84>
  43ade0:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ade4:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ade8:	mov	x22, xzr
  43adec:	mov	w23, wzr
  43adf0:	mov	w8, wzr
  43adf4:	mov	w9, #0xa                   	// #10
  43adf8:	add	x20, x20, #0xbd7
  43adfc:	add	x21, x21, #0xc90
  43ae00:	str	w9, [x26]
  43ae04:	b	43ae20 <feof@plt+0x38450>
  43ae08:	and	x9, x24, #0x7f
  43ae0c:	lsl	x9, x9, x23
  43ae10:	orr	x22, x9, x22
  43ae14:	sxtb	w9, w24
  43ae18:	add	w23, w23, #0x7
  43ae1c:	tbz	w9, #31, 43b454 <feof@plt+0x38a84>
  43ae20:	ldp	x10, x11, [x19, #16]
  43ae24:	cbz	x11, 43b300 <feof@plt+0x38930>
  43ae28:	add	x9, x10, #0x1
  43ae2c:	sub	x11, x11, #0x1
  43ae30:	stp	x9, x11, [x19, #16]
  43ae34:	ldrb	w24, [x10]
  43ae38:	cmp	w23, #0x3f
  43ae3c:	b.ls	43ae08 <feof@plt+0x38438>  // b.plast
  43ae40:	cbnz	w8, 43ae14 <feof@plt+0x38444>
  43ae44:	ldr	w8, [x19, #8]
  43ae48:	ldr	x4, [x19]
  43ae4c:	add	x0, sp, #0x10
  43ae50:	mov	w1, #0xc8                  	// #200
  43ae54:	sub	w5, w9, w8
  43ae58:	mov	x2, x20
  43ae5c:	mov	x3, x21
  43ae60:	bl	402740 <snprintf@plt>
  43ae64:	ldp	x8, x0, [x19, #40]
  43ae68:	add	x1, sp, #0x10
  43ae6c:	mov	w2, wzr
  43ae70:	blr	x8
  43ae74:	mov	w8, #0x1                   	// #1
  43ae78:	b	43ae14 <feof@plt+0x38444>
  43ae7c:	mov	w8, #0xa                   	// #10
  43ae80:	str	w8, [x26]
  43ae84:	ldp	x8, x9, [x19, #16]
  43ae88:	cbz	x9, 43b640 <feof@plt+0x38c70>
  43ae8c:	add	x10, x8, #0x1
  43ae90:	sub	x9, x9, #0x1
  43ae94:	stp	x10, x9, [x19, #16]
  43ae98:	ldrb	w8, [x8]
  43ae9c:	cmp	x9, x8
  43aea0:	b.cc	43b878 <feof@plt+0x38ea8>  // b.lo, b.ul, b.last
  43aea4:	b	43b9c4 <feof@plt+0x38ff4>
  43aea8:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43aeac:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43aeb0:	mov	x22, xzr
  43aeb4:	mov	w23, wzr
  43aeb8:	mov	w8, wzr
  43aebc:	mov	w9, #0x3                   	// #3
  43aec0:	add	x20, x20, #0xbd7
  43aec4:	add	x21, x21, #0xc89
  43aec8:	str	w9, [x26]
  43aecc:	b	43aee8 <feof@plt+0x38518>
  43aed0:	and	x9, x24, #0x7f
  43aed4:	lsl	x9, x9, x23
  43aed8:	orr	x22, x9, x22
  43aedc:	sxtb	w9, w24
  43aee0:	add	w23, w23, #0x7
  43aee4:	tbz	w9, #31, 43b5c0 <feof@plt+0x38bf0>
  43aee8:	ldp	x10, x11, [x19, #16]
  43aeec:	cbz	x11, 43b4dc <feof@plt+0x38b0c>
  43aef0:	add	x9, x10, #0x1
  43aef4:	sub	x11, x11, #0x1
  43aef8:	stp	x9, x11, [x19, #16]
  43aefc:	ldrb	w24, [x10]
  43af00:	cmp	w23, #0x3f
  43af04:	b.ls	43aed0 <feof@plt+0x38500>  // b.plast
  43af08:	cbnz	w8, 43aedc <feof@plt+0x3850c>
  43af0c:	ldr	w8, [x19, #8]
  43af10:	ldr	x4, [x19]
  43af14:	add	x0, sp, #0x10
  43af18:	mov	w1, #0xc8                  	// #200
  43af1c:	sub	w5, w9, w8
  43af20:	mov	x2, x20
  43af24:	mov	x3, x21
  43af28:	bl	402740 <snprintf@plt>
  43af2c:	ldp	x8, x0, [x19, #40]
  43af30:	add	x1, sp, #0x10
  43af34:	mov	w2, wzr
  43af38:	blr	x8
  43af3c:	mov	w8, #0x1                   	// #1
  43af40:	b	43aedc <feof@plt+0x3850c>
  43af44:	cbz	w23, 43b654 <feof@plt+0x38c84>
  43af48:	mov	x0, x19
  43af4c:	bl	43aae0 <feof@plt+0x38110>
  43af50:	cmp	x0, x22
  43af54:	b.cs	43b558 <feof@plt+0x38b88>  // b.hs, b.nlast
  43af58:	mov	w8, #0x4                   	// #4
  43af5c:	add	x9, x21, x0
  43af60:	str	w8, [x26]
  43af64:	str	x9, [x26, #8]
  43af68:	b	43b9d8 <feof@plt+0x39008>
  43af6c:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43af70:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43af74:	mov	x22, xzr
  43af78:	mov	w23, wzr
  43af7c:	mov	w8, wzr
  43af80:	mov	w9, #0x2                   	// #2
  43af84:	add	x20, x20, #0xbd7
  43af88:	add	x21, x21, #0xc90
  43af8c:	str	w9, [x26]
  43af90:	b	43afac <feof@plt+0x385dc>
  43af94:	and	x9, x24, #0x7f
  43af98:	lsl	x9, x9, x23
  43af9c:	orr	x22, x9, x22
  43afa0:	sxtb	w9, w24
  43afa4:	add	w23, w23, #0x7
  43afa8:	tbz	w9, #31, 43b4cc <feof@plt+0x38afc>
  43afac:	ldp	x10, x11, [x19, #16]
  43afb0:	cbz	x11, 43b3f4 <feof@plt+0x38a24>
  43afb4:	add	x9, x10, #0x1
  43afb8:	sub	x11, x11, #0x1
  43afbc:	stp	x9, x11, [x19, #16]
  43afc0:	ldrb	w24, [x10]
  43afc4:	cmp	w23, #0x3f
  43afc8:	b.ls	43af94 <feof@plt+0x385c4>  // b.plast
  43afcc:	cbnz	w8, 43afa0 <feof@plt+0x385d0>
  43afd0:	ldr	w8, [x19, #8]
  43afd4:	ldr	x4, [x19]
  43afd8:	add	x0, sp, #0x10
  43afdc:	mov	w1, #0xc8                  	// #200
  43afe0:	sub	w5, w9, w8
  43afe4:	mov	x2, x20
  43afe8:	mov	x3, x21
  43afec:	bl	402740 <snprintf@plt>
  43aff0:	ldp	x8, x0, [x19, #40]
  43aff4:	add	x1, sp, #0x10
  43aff8:	mov	w2, wzr
  43affc:	blr	x8
  43b000:	mov	w8, #0x1                   	// #1
  43b004:	b	43afa0 <feof@plt+0x385d0>
  43b008:	mov	w8, #0x6                   	// #6
  43b00c:	cmp	w25, #0x2
  43b010:	str	w8, [x26]
  43b014:	b.ne	43b57c <feof@plt+0x38bac>  // b.any
  43b018:	sub	w8, w24, #0x1
  43b01c:	cmp	w8, #0x7
  43b020:	b.hi	43b758 <feof@plt+0x38d88>  // b.pmore
  43b024:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b028:	add	x9, x9, #0xafc
  43b02c:	adr	x10, 43b03c <feof@plt+0x3866c>
  43b030:	ldrh	w11, [x9, x8, lsl #1]
  43b034:	add	x10, x10, x11, lsl #2
  43b038:	br	x10
  43b03c:	ldp	x8, x9, [x19, #16]
  43b040:	cbz	x9, 43b708 <feof@plt+0x38d38>
  43b044:	add	x10, x8, #0x1
  43b048:	sub	x9, x9, #0x1
  43b04c:	stp	x10, x9, [x19, #16]
  43b050:	ldrb	w0, [x8]
  43b054:	b	43b588 <feof@plt+0x38bb8>
  43b058:	mov	w8, #0x5                   	// #5
  43b05c:	str	w8, [x26]
  43b060:	ldp	x8, x9, [x19, #16]
  43b064:	cbz	x9, 43b0c4 <feof@plt+0x386f4>
  43b068:	add	x10, x8, #0x1
  43b06c:	sub	x9, x9, #0x1
  43b070:	stp	x10, x9, [x19, #16]
  43b074:	ldrb	w8, [x8]
  43b078:	b	43b67c <feof@plt+0x38cac>
  43b07c:	mov	w8, #0x5                   	// #5
  43b080:	str	w8, [x26]
  43b084:	ldp	x8, x9, [x19, #16]
  43b088:	cmp	x9, #0x1
  43b08c:	b.ls	43b0c4 <feof@plt+0x386f4>  // b.plast
  43b090:	ldr	w10, [x19, #32]
  43b094:	add	x11, x8, #0x2
  43b098:	sub	x9, x9, #0x2
  43b09c:	stp	x11, x9, [x19, #16]
  43b0a0:	cbz	w10, 43b670 <feof@plt+0x38ca0>
  43b0a4:	ldrh	w8, [x8]
  43b0a8:	lsl	x8, x8, #48
  43b0ac:	b	43b350 <feof@plt+0x38980>
  43b0b0:	mov	w8, #0x5                   	// #5
  43b0b4:	str	w8, [x26]
  43b0b8:	ldp	x8, x9, [x19, #16]
  43b0bc:	cmp	x9, #0x3
  43b0c0:	b.hi	43b334 <feof@plt+0x38964>  // b.pmore
  43b0c4:	ldr	w9, [x19, #56]
  43b0c8:	cbz	w9, 43b0d4 <feof@plt+0x38704>
  43b0cc:	mov	x8, xzr
  43b0d0:	b	43b67c <feof@plt+0x38cac>
  43b0d4:	ldr	w9, [x19, #8]
  43b0d8:	ldr	x4, [x19]
  43b0dc:	sub	w5, w8, w9
  43b0e0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b0e4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b0e8:	add	x2, x2, #0xbd7
  43b0ec:	add	x3, x3, #0xbc7
  43b0f0:	add	x0, sp, #0x10
  43b0f4:	mov	w1, #0xc8                  	// #200
  43b0f8:	bl	402740 <snprintf@plt>
  43b0fc:	ldp	x8, x0, [x19, #40]
  43b100:	add	x1, sp, #0x10
  43b104:	mov	w2, wzr
  43b108:	blr	x8
  43b10c:	mov	w9, #0x1                   	// #1
  43b110:	mov	x8, xzr
  43b114:	str	w9, [x19, #56]
  43b118:	b	43b67c <feof@plt+0x38cac>
  43b11c:	mov	w8, #0x5                   	// #5
  43b120:	str	w8, [x26]
  43b124:	b	43b580 <feof@plt+0x38bb0>
  43b128:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b12c:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b130:	mov	x22, xzr
  43b134:	mov	w23, wzr
  43b138:	mov	w8, wzr
  43b13c:	mov	w9, #0x5                   	// #5
  43b140:	add	x20, x20, #0xbd7
  43b144:	add	x21, x21, #0xc90
  43b148:	str	w9, [x26]
  43b14c:	b	43b168 <feof@plt+0x38798>
  43b150:	and	x9, x24, #0x7f
  43b154:	lsl	x9, x9, x23
  43b158:	orr	x22, x9, x22
  43b15c:	sxtb	w9, w24
  43b160:	add	w23, w23, #0x7
  43b164:	tbz	w9, #31, 43b4cc <feof@plt+0x38afc>
  43b168:	ldp	x10, x11, [x19, #16]
  43b16c:	cbz	x11, 43b3f4 <feof@plt+0x38a24>
  43b170:	add	x9, x10, #0x1
  43b174:	sub	x11, x11, #0x1
  43b178:	stp	x9, x11, [x19, #16]
  43b17c:	ldrb	w24, [x10]
  43b180:	cmp	w23, #0x3f
  43b184:	b.ls	43b150 <feof@plt+0x38780>  // b.plast
  43b188:	cbnz	w8, 43b15c <feof@plt+0x3878c>
  43b18c:	ldr	w8, [x19, #8]
  43b190:	ldr	x4, [x19]
  43b194:	add	x0, sp, #0x10
  43b198:	mov	w1, #0xc8                  	// #200
  43b19c:	sub	w5, w9, w8
  43b1a0:	mov	x2, x20
  43b1a4:	mov	x3, x21
  43b1a8:	bl	402740 <snprintf@plt>
  43b1ac:	ldp	x8, x0, [x19, #40]
  43b1b0:	add	x1, sp, #0x10
  43b1b4:	mov	w2, wzr
  43b1b8:	blr	x8
  43b1bc:	mov	w8, #0x1                   	// #1
  43b1c0:	b	43b15c <feof@plt+0x3878c>
  43b1c4:	str	x26, [sp, #8]
  43b1c8:	mov	x26, xzr
  43b1cc:	mov	w28, wzr
  43b1d0:	mov	w8, wzr
  43b1d4:	b	43b1f0 <feof@plt+0x38820>
  43b1d8:	and	x9, x27, #0x7f
  43b1dc:	lsl	x9, x9, x28
  43b1e0:	orr	x26, x9, x26
  43b1e4:	sxtb	w9, w27
  43b1e8:	add	w28, w28, #0x7
  43b1ec:	tbz	w9, #31, 43b7e0 <feof@plt+0x38e10>
  43b1f0:	ldp	x10, x11, [x19, #16]
  43b1f4:	cbz	x11, 43b4f4 <feof@plt+0x38b24>
  43b1f8:	add	x9, x10, #0x1
  43b1fc:	sub	x11, x11, #0x1
  43b200:	stp	x9, x11, [x19, #16]
  43b204:	ldrb	w27, [x10]
  43b208:	cmp	w28, #0x3f
  43b20c:	b.ls	43b1d8 <feof@plt+0x38808>  // b.plast
  43b210:	cbnz	w8, 43b1e4 <feof@plt+0x38814>
  43b214:	ldr	w8, [x19, #8]
  43b218:	ldr	x4, [x19]
  43b21c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b220:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b224:	sub	w5, w9, w8
  43b228:	add	x0, sp, #0x10
  43b22c:	mov	w1, #0xc8                  	// #200
  43b230:	add	x2, x2, #0xbd7
  43b234:	add	x3, x3, #0xc90
  43b238:	bl	402740 <snprintf@plt>
  43b23c:	ldp	x8, x0, [x19, #40]
  43b240:	add	x1, sp, #0x10
  43b244:	mov	w2, wzr
  43b248:	blr	x8
  43b24c:	mov	w8, #0x1                   	// #1
  43b250:	b	43b1e4 <feof@plt+0x38814>
  43b254:	mov	w8, #0x8                   	// #8
  43b258:	str	w8, [x26]
  43b25c:	cbnz	w23, 43b580 <feof@plt+0x38bb0>
  43b260:	b	43b590 <feof@plt+0x38bc0>
  43b264:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b268:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b26c:	mov	x22, xzr
  43b270:	mov	w23, wzr
  43b274:	mov	w8, wzr
  43b278:	mov	w9, #0xb                   	// #11
  43b27c:	add	x20, x20, #0xbd7
  43b280:	add	x21, x21, #0xc90
  43b284:	str	w9, [x26]
  43b288:	b	43b2a4 <feof@plt+0x388d4>
  43b28c:	and	x9, x24, #0x7f
  43b290:	lsl	x9, x9, x23
  43b294:	orr	x22, x9, x22
  43b298:	sxtb	w9, w24
  43b29c:	add	w23, w23, #0x7
  43b2a0:	tbz	w9, #31, 43b454 <feof@plt+0x38a84>
  43b2a4:	ldp	x10, x11, [x19, #16]
  43b2a8:	cbz	x11, 43b300 <feof@plt+0x38930>
  43b2ac:	add	x9, x10, #0x1
  43b2b0:	sub	x11, x11, #0x1
  43b2b4:	stp	x9, x11, [x19, #16]
  43b2b8:	ldrb	w24, [x10]
  43b2bc:	cmp	w23, #0x3f
  43b2c0:	b.ls	43b28c <feof@plt+0x388bc>  // b.plast
  43b2c4:	cbnz	w8, 43b298 <feof@plt+0x388c8>
  43b2c8:	ldr	w8, [x19, #8]
  43b2cc:	ldr	x4, [x19]
  43b2d0:	add	x0, sp, #0x10
  43b2d4:	mov	w1, #0xc8                  	// #200
  43b2d8:	sub	w5, w9, w8
  43b2dc:	mov	x2, x20
  43b2e0:	mov	x3, x21
  43b2e4:	bl	402740 <snprintf@plt>
  43b2e8:	ldp	x8, x0, [x19, #40]
  43b2ec:	add	x1, sp, #0x10
  43b2f0:	mov	w2, wzr
  43b2f4:	blr	x8
  43b2f8:	mov	w8, #0x1                   	// #1
  43b2fc:	b	43b298 <feof@plt+0x388c8>
  43b300:	ldr	w8, [x19, #56]
  43b304:	cbz	w8, 43b5e4 <feof@plt+0x38c14>
  43b308:	mov	x8, xzr
  43b30c:	mov	x22, xzr
  43b310:	b	43b62c <feof@plt+0x38c5c>
  43b314:	mov	w8, #0x2                   	// #2
  43b318:	mov	w0, #0x1                   	// #1
  43b31c:	str	w8, [x26]
  43b320:	str	x0, [x26, #8]
  43b324:	b	43b9dc <feof@plt+0x3900c>
  43b328:	mov	w8, #0x9                   	// #9
  43b32c:	str	w8, [x26]
  43b330:	b	43b580 <feof@plt+0x38bb0>
  43b334:	ldr	w10, [x19, #32]
  43b338:	add	x11, x8, #0x4
  43b33c:	sub	x9, x9, #0x4
  43b340:	stp	x11, x9, [x19, #16]
  43b344:	cbz	w10, 43b678 <feof@plt+0x38ca8>
  43b348:	ldr	w8, [x8]
  43b34c:	lsl	x8, x8, #32
  43b350:	rev	x8, x8
  43b354:	b	43b67c <feof@plt+0x38cac>
  43b358:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b35c:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b360:	mov	x22, xzr
  43b364:	mov	w23, wzr
  43b368:	mov	w8, wzr
  43b36c:	mov	w9, #0x8                   	// #8
  43b370:	add	x20, x20, #0xbd7
  43b374:	add	x21, x21, #0xc90
  43b378:	str	w9, [x26]
  43b37c:	b	43b398 <feof@plt+0x389c8>
  43b380:	and	x9, x24, #0x7f
  43b384:	lsl	x9, x9, x23
  43b388:	orr	x22, x9, x22
  43b38c:	sxtb	w9, w24
  43b390:	add	w23, w23, #0x7
  43b394:	tbz	w9, #31, 43b4cc <feof@plt+0x38afc>
  43b398:	ldp	x10, x11, [x19, #16]
  43b39c:	cbz	x11, 43b3f4 <feof@plt+0x38a24>
  43b3a0:	add	x9, x10, #0x1
  43b3a4:	sub	x11, x11, #0x1
  43b3a8:	stp	x9, x11, [x19, #16]
  43b3ac:	ldrb	w24, [x10]
  43b3b0:	cmp	w23, #0x3f
  43b3b4:	b.ls	43b380 <feof@plt+0x389b0>  // b.plast
  43b3b8:	cbnz	w8, 43b38c <feof@plt+0x389bc>
  43b3bc:	ldr	w8, [x19, #8]
  43b3c0:	ldr	x4, [x19]
  43b3c4:	add	x0, sp, #0x10
  43b3c8:	mov	w1, #0xc8                  	// #200
  43b3cc:	sub	w5, w9, w8
  43b3d0:	mov	x2, x20
  43b3d4:	mov	x3, x21
  43b3d8:	bl	402740 <snprintf@plt>
  43b3dc:	ldp	x8, x0, [x19, #40]
  43b3e0:	add	x1, sp, #0x10
  43b3e4:	mov	w2, wzr
  43b3e8:	blr	x8
  43b3ec:	mov	w8, #0x1                   	// #1
  43b3f0:	b	43b38c <feof@plt+0x389bc>
  43b3f4:	ldr	w8, [x19, #56]
  43b3f8:	cbz	w8, 43b488 <feof@plt+0x38ab8>
  43b3fc:	mov	x22, xzr
  43b400:	b	43b4cc <feof@plt+0x38afc>
  43b404:	cbz	w23, 43b684 <feof@plt+0x38cb4>
  43b408:	mov	x0, x19
  43b40c:	bl	43aae0 <feof@plt+0x38110>
  43b410:	str	x0, [x26, #8]
  43b414:	cbz	x20, 43b4d4 <feof@plt+0x38b04>
  43b418:	mov	w8, #0x7                   	// #7
  43b41c:	str	w8, [x26]
  43b420:	b	43b9d8 <feof@plt+0x39008>
  43b424:	cbz	w23, 43b6a0 <feof@plt+0x38cd0>
  43b428:	mov	x0, x19
  43b42c:	bl	43aae0 <feof@plt+0x38110>
  43b430:	cbz	x20, 43b4d4 <feof@plt+0x38b04>
  43b434:	ldr	x8, [x20, #112]
  43b438:	cmp	x0, x8
  43b43c:	b.cs	43b6bc <feof@plt+0x38cec>  // b.hs, b.nlast
  43b440:	mov	w8, #0x4                   	// #4
  43b444:	str	w8, [x26]
  43b448:	ldr	x8, [x20, #104]
  43b44c:	add	x8, x8, x0
  43b450:	b	43b67c <feof@plt+0x38cac>
  43b454:	ldr	x8, [x19, #24]
  43b458:	cmp	x8, x22
  43b45c:	b.cs	43b62c <feof@plt+0x38c5c>  // b.hs, b.nlast
  43b460:	b	43b878 <feof@plt+0x38ea8>
  43b464:	ldr	w8, [x19, #16]
  43b468:	ldr	w9, [x19, #8]
  43b46c:	ldr	x4, [x19]
  43b470:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b474:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b478:	sub	w5, w8, w9
  43b47c:	add	x2, x2, #0xbd7
  43b480:	add	x3, x3, #0xc57
  43b484:	b	43b6dc <feof@plt+0x38d0c>
  43b488:	ldr	w8, [x19, #8]
  43b48c:	ldr	x4, [x19]
  43b490:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b494:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b498:	sub	w5, w10, w8
  43b49c:	add	x2, x2, #0xbd7
  43b4a0:	add	x3, x3, #0xbc7
  43b4a4:	add	x0, sp, #0x10
  43b4a8:	mov	w1, #0xc8                  	// #200
  43b4ac:	bl	402740 <snprintf@plt>
  43b4b0:	ldp	x8, x0, [x19, #40]
  43b4b4:	add	x1, sp, #0x10
  43b4b8:	mov	w2, wzr
  43b4bc:	blr	x8
  43b4c0:	mov	w8, #0x1                   	// #1
  43b4c4:	mov	x22, xzr
  43b4c8:	str	w8, [x19, #56]
  43b4cc:	str	x22, [x26, #8]
  43b4d0:	b	43b9d8 <feof@plt+0x39008>
  43b4d4:	str	wzr, [x26]
  43b4d8:	b	43b9d8 <feof@plt+0x39008>
  43b4dc:	ldr	w8, [x19, #56]
  43b4e0:	cbnz	w8, 43b0cc <feof@plt+0x386fc>
  43b4e4:	ldr	w8, [x19, #8]
  43b4e8:	ldr	x4, [x19]
  43b4ec:	sub	w5, w10, w8
  43b4f0:	b	43b0e0 <feof@plt+0x38710>
  43b4f4:	ldr	w8, [x19, #56]
  43b4f8:	cbz	w8, 43b79c <feof@plt+0x38dcc>
  43b4fc:	mov	x26, xzr
  43b500:	b	43b7e0 <feof@plt+0x38e10>
  43b504:	ldr	w10, [x19, #32]
  43b508:	add	x11, x9, #0x2
  43b50c:	sub	x8, x8, #0x2
  43b510:	stp	x11, x8, [x19, #16]
  43b514:	cbz	w10, 43b864 <feof@plt+0x38e94>
  43b518:	ldrh	w9, [x9]
  43b51c:	lsl	x9, x9, #48
  43b520:	rev	x9, x9
  43b524:	b	43b870 <feof@plt+0x38ea0>
  43b528:	ldr	w10, [x19, #32]
  43b52c:	add	x11, x9, #0x4
  43b530:	sub	x8, x8, #0x4
  43b534:	stp	x11, x8, [x19, #16]
  43b538:	cbz	w10, 43b86c <feof@plt+0x38e9c>
  43b53c:	ldr	w9, [x9]
  43b540:	lsl	x9, x9, #32
  43b544:	rev	x9, x9
  43b548:	b	43b870 <feof@plt+0x38ea0>
  43b54c:	add	x9, x20, x9
  43b550:	stp	x9, x8, [x19, #16]
  43b554:	b	43b854 <feof@plt+0x38e84>
  43b558:	ldr	w8, [x19, #16]
  43b55c:	ldr	w9, [x19, #8]
  43b560:	ldr	x4, [x19]
  43b564:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b568:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b56c:	sub	w5, w8, w9
  43b570:	add	x2, x2, #0xbd7
  43b574:	add	x3, x3, #0xc1b
  43b578:	b	43b6dc <feof@plt+0x38d0c>
  43b57c:	cbz	w23, 43b590 <feof@plt+0x38bc0>
  43b580:	mov	x0, x19
  43b584:	bl	43aae0 <feof@plt+0x38110>
  43b588:	str	x0, [x26, #8]
  43b58c:	b	43b9d8 <feof@plt+0x39008>
  43b590:	ldp	x8, x9, [x19, #16]
  43b594:	cmp	x9, #0x3
  43b598:	b.ls	43b708 <feof@plt+0x38d38>  // b.plast
  43b59c:	ldr	w10, [x19, #32]
  43b5a0:	add	x11, x8, #0x4
  43b5a4:	sub	x9, x9, #0x4
  43b5a8:	stp	x11, x9, [x19, #16]
  43b5ac:	cbz	w10, 43b950 <feof@plt+0x38f80>
  43b5b0:	ldr	w8, [x8]
  43b5b4:	lsl	x8, x8, #32
  43b5b8:	rev	x0, x8
  43b5bc:	b	43b588 <feof@plt+0x38bb8>
  43b5c0:	cmp	w23, #0x40
  43b5c4:	and	w8, w24, #0x40
  43b5c8:	mov	x9, #0xffffffffffffffff    	// #-1
  43b5cc:	cset	w10, cc  // cc = lo, ul, last
  43b5d0:	lsl	x9, x9, x23
  43b5d4:	tst	w10, w8, lsr #6
  43b5d8:	csel	x8, x9, xzr, ne  // ne = any
  43b5dc:	orr	x8, x22, x8
  43b5e0:	b	43b67c <feof@plt+0x38cac>
  43b5e4:	ldr	w8, [x19, #8]
  43b5e8:	ldr	x4, [x19]
  43b5ec:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b5f0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b5f4:	sub	w5, w10, w8
  43b5f8:	add	x2, x2, #0xbd7
  43b5fc:	add	x3, x3, #0xbc7
  43b600:	add	x0, sp, #0x10
  43b604:	mov	w1, #0xc8                  	// #200
  43b608:	bl	402740 <snprintf@plt>
  43b60c:	ldp	x8, x0, [x19, #40]
  43b610:	add	x1, sp, #0x10
  43b614:	mov	w2, wzr
  43b618:	blr	x8
  43b61c:	ldr	x8, [x19, #24]
  43b620:	mov	x22, xzr
  43b624:	mov	w9, #0x1                   	// #1
  43b628:	str	w9, [x19, #56]
  43b62c:	ldr	x9, [x19, #16]
  43b630:	sub	x8, x8, x22
  43b634:	str	x8, [x19, #24]
  43b638:	add	x8, x9, x22
  43b63c:	b	43b9d4 <feof@plt+0x39004>
  43b640:	ldr	w9, [x19, #56]
  43b644:	cbz	w9, 43b97c <feof@plt+0x38fac>
  43b648:	mov	x8, xzr
  43b64c:	mov	x9, xzr
  43b650:	b	43b9c4 <feof@plt+0x38ff4>
  43b654:	ldp	x8, x9, [x19, #16]
  43b658:	cmp	x9, #0x3
  43b65c:	b.hi	43b8e4 <feof@plt+0x38f14>  // b.pmore
  43b660:	ldr	w9, [x19, #56]
  43b664:	cbz	w9, 43b9fc <feof@plt+0x3902c>
  43b668:	mov	x0, xzr
  43b66c:	b	43af50 <feof@plt+0x38580>
  43b670:	ldrh	w8, [x8]
  43b674:	b	43b67c <feof@plt+0x38cac>
  43b678:	ldr	w8, [x8]
  43b67c:	str	x8, [x26, #8]
  43b680:	b	43b9d8 <feof@plt+0x39008>
  43b684:	ldp	x8, x9, [x19, #16]
  43b688:	cmp	x9, #0x3
  43b68c:	b.hi	43b908 <feof@plt+0x38f38>  // b.pmore
  43b690:	ldr	w9, [x19, #56]
  43b694:	cbz	w9, 43ba44 <feof@plt+0x39074>
  43b698:	mov	x0, xzr
  43b69c:	b	43b410 <feof@plt+0x38a40>
  43b6a0:	ldp	x8, x9, [x19, #16]
  43b6a4:	cmp	x9, #0x3
  43b6a8:	b.hi	43b92c <feof@plt+0x38f5c>  // b.pmore
  43b6ac:	ldr	w9, [x19, #56]
  43b6b0:	cbz	w9, 43ba8c <feof@plt+0x390bc>
  43b6b4:	mov	x0, xzr
  43b6b8:	b	43b430 <feof@plt+0x38a60>
  43b6bc:	ldr	w8, [x19, #16]
  43b6c0:	ldr	w9, [x19, #8]
  43b6c4:	ldr	x4, [x19]
  43b6c8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b6cc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b6d0:	sub	w5, w8, w9
  43b6d4:	add	x2, x2, #0xbd7
  43b6d8:	add	x3, x3, #0xc35
  43b6dc:	add	x0, sp, #0x10
  43b6e0:	mov	w1, #0xc8                  	// #200
  43b6e4:	bl	402740 <snprintf@plt>
  43b6e8:	ldp	x8, x0, [x19, #40]
  43b6ec:	add	x1, sp, #0x10
  43b6f0:	mov	w2, wzr
  43b6f4:	blr	x8
  43b6f8:	b	43b880 <feof@plt+0x38eb0>
  43b6fc:	ldp	x8, x9, [x19, #16]
  43b700:	cmp	x9, #0x1
  43b704:	b.hi	43b958 <feof@plt+0x38f88>  // b.pmore
  43b708:	ldr	w9, [x19, #56]
  43b70c:	cbnz	w9, 43b794 <feof@plt+0x38dc4>
  43b710:	ldr	w9, [x19, #8]
  43b714:	ldr	x4, [x19]
  43b718:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b71c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b720:	sub	w5, w8, w9
  43b724:	add	x2, x2, #0xbd7
  43b728:	add	x3, x3, #0xbc7
  43b72c:	add	x0, sp, #0x10
  43b730:	mov	w1, #0xc8                  	// #200
  43b734:	bl	402740 <snprintf@plt>
  43b738:	ldp	x8, x0, [x19, #40]
  43b73c:	add	x1, sp, #0x10
  43b740:	mov	w2, wzr
  43b744:	blr	x8
  43b748:	mov	w8, #0x1                   	// #1
  43b74c:	mov	x0, xzr
  43b750:	str	w8, [x19, #56]
  43b754:	b	43b588 <feof@plt+0x38bb8>
  43b758:	ldr	w8, [x19, #16]
  43b75c:	ldr	w9, [x19, #8]
  43b760:	ldr	x4, [x19]
  43b764:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b768:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b76c:	sub	w5, w8, w9
  43b770:	add	x2, x2, #0xbd7
  43b774:	add	x3, x3, #0xc6f
  43b778:	add	x0, sp, #0x10
  43b77c:	mov	w1, #0xc8                  	// #200
  43b780:	bl	402740 <snprintf@plt>
  43b784:	ldp	x8, x0, [x19, #40]
  43b788:	add	x1, sp, #0x10
  43b78c:	mov	w2, wzr
  43b790:	blr	x8
  43b794:	mov	x0, xzr
  43b798:	b	43b588 <feof@plt+0x38bb8>
  43b79c:	ldr	w8, [x19, #8]
  43b7a0:	ldr	x4, [x19]
  43b7a4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b7a8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b7ac:	sub	w5, w10, w8
  43b7b0:	add	x2, x2, #0xbd7
  43b7b4:	add	x3, x3, #0xbc7
  43b7b8:	add	x0, sp, #0x10
  43b7bc:	mov	w1, #0xc8                  	// #200
  43b7c0:	bl	402740 <snprintf@plt>
  43b7c4:	ldp	x8, x0, [x19, #40]
  43b7c8:	add	x1, sp, #0x10
  43b7cc:	mov	w2, wzr
  43b7d0:	blr	x8
  43b7d4:	mov	w8, #0x1                   	// #1
  43b7d8:	mov	x26, xzr
  43b7dc:	str	w8, [x19, #56]
  43b7e0:	ldr	x8, [sp, #8]
  43b7e4:	mov	w0, w26
  43b7e8:	mov	x1, x19
  43b7ec:	mov	w2, w23
  43b7f0:	mov	w3, w25
  43b7f4:	mov	w4, w24
  43b7f8:	mov	x5, x21
  43b7fc:	mov	x6, x22
  43b800:	mov	x7, x20
  43b804:	str	x8, [sp]
  43b808:	bl	43aba4 <feof@plt+0x381d4>
  43b80c:	b	43b9dc <feof@plt+0x3900c>
  43b810:	ldr	w8, [x19, #8]
  43b814:	ldr	x4, [x19]
  43b818:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b81c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b820:	sub	w5, w20, w8
  43b824:	add	x2, x2, #0xbd7
  43b828:	add	x3, x3, #0xbc7
  43b82c:	add	x0, sp, #0x10
  43b830:	mov	w1, #0xc8                  	// #200
  43b834:	bl	402740 <snprintf@plt>
  43b838:	ldp	x8, x0, [x19, #40]
  43b83c:	add	x1, sp, #0x10
  43b840:	mov	w2, wzr
  43b844:	blr	x8
  43b848:	mov	w8, #0x1                   	// #1
  43b84c:	mov	x20, xzr
  43b850:	str	w8, [x19, #56]
  43b854:	cmp	x20, #0x0
  43b858:	str	x20, [x26, #8]
  43b85c:	cset	w0, ne  // ne = any
  43b860:	b	43b9dc <feof@plt+0x3900c>
  43b864:	ldrh	w9, [x9]
  43b868:	b	43b870 <feof@plt+0x38ea0>
  43b86c:	ldr	w9, [x9]
  43b870:	subs	x8, x8, x9
  43b874:	b.cs	43b888 <feof@plt+0x38eb8>  // b.hs, b.nlast
  43b878:	ldr	w8, [x19, #56]
  43b87c:	cbz	w8, 43b898 <feof@plt+0x38ec8>
  43b880:	mov	w0, wzr
  43b884:	b	43b9dc <feof@plt+0x3900c>
  43b888:	ldr	x10, [x19, #16]
  43b88c:	str	x8, [x19, #24]
  43b890:	add	x8, x10, x9
  43b894:	b	43b9d4 <feof@plt+0x39004>
  43b898:	ldr	w8, [x19, #16]
  43b89c:	ldr	w9, [x19, #8]
  43b8a0:	ldr	x4, [x19]
  43b8a4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b8a8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b8ac:	sub	w5, w8, w9
  43b8b0:	add	x2, x2, #0xbd7
  43b8b4:	add	x3, x3, #0xbc7
  43b8b8:	add	x0, sp, #0x10
  43b8bc:	mov	w1, #0xc8                  	// #200
  43b8c0:	bl	402740 <snprintf@plt>
  43b8c4:	ldp	x8, x0, [x19, #40]
  43b8c8:	add	x1, sp, #0x10
  43b8cc:	mov	w2, wzr
  43b8d0:	blr	x8
  43b8d4:	mov	w8, #0x1                   	// #1
  43b8d8:	mov	w0, wzr
  43b8dc:	str	w8, [x19, #56]
  43b8e0:	b	43b9dc <feof@plt+0x3900c>
  43b8e4:	ldr	w10, [x19, #32]
  43b8e8:	add	x11, x8, #0x4
  43b8ec:	sub	x9, x9, #0x4
  43b8f0:	stp	x11, x9, [x19, #16]
  43b8f4:	cbz	w10, 43bad4 <feof@plt+0x39104>
  43b8f8:	ldr	w8, [x8]
  43b8fc:	lsl	x8, x8, #32
  43b900:	rev	x0, x8
  43b904:	b	43af50 <feof@plt+0x38580>
  43b908:	ldr	w10, [x19, #32]
  43b90c:	add	x11, x8, #0x4
  43b910:	sub	x9, x9, #0x4
  43b914:	stp	x11, x9, [x19, #16]
  43b918:	cbz	w10, 43badc <feof@plt+0x3910c>
  43b91c:	ldr	w8, [x8]
  43b920:	lsl	x8, x8, #32
  43b924:	rev	x0, x8
  43b928:	b	43b410 <feof@plt+0x38a40>
  43b92c:	ldr	w10, [x19, #32]
  43b930:	add	x11, x8, #0x4
  43b934:	sub	x9, x9, #0x4
  43b938:	stp	x11, x9, [x19, #16]
  43b93c:	cbz	w10, 43bae4 <feof@plt+0x39114>
  43b940:	ldr	w8, [x8]
  43b944:	lsl	x8, x8, #32
  43b948:	rev	x0, x8
  43b94c:	b	43b430 <feof@plt+0x38a60>
  43b950:	ldr	w0, [x8]
  43b954:	b	43b588 <feof@plt+0x38bb8>
  43b958:	ldr	w10, [x19, #32]
  43b95c:	add	x11, x8, #0x2
  43b960:	sub	x9, x9, #0x2
  43b964:	stp	x11, x9, [x19, #16]
  43b968:	cbz	w10, 43baec <feof@plt+0x3911c>
  43b96c:	ldrh	w8, [x8]
  43b970:	lsl	x8, x8, #48
  43b974:	rev	x0, x8
  43b978:	b	43b588 <feof@plt+0x38bb8>
  43b97c:	ldr	w9, [x19, #8]
  43b980:	ldr	x4, [x19]
  43b984:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b988:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43b98c:	sub	w5, w8, w9
  43b990:	add	x2, x2, #0xbd7
  43b994:	add	x3, x3, #0xbc7
  43b998:	add	x0, sp, #0x10
  43b99c:	mov	w1, #0xc8                  	// #200
  43b9a0:	bl	402740 <snprintf@plt>
  43b9a4:	ldp	x8, x0, [x19, #40]
  43b9a8:	add	x1, sp, #0x10
  43b9ac:	mov	w2, wzr
  43b9b0:	blr	x8
  43b9b4:	ldr	x9, [x19, #24]
  43b9b8:	mov	x8, xzr
  43b9bc:	mov	w10, #0x1                   	// #1
  43b9c0:	str	w10, [x19, #56]
  43b9c4:	ldr	x10, [x19, #16]
  43b9c8:	sub	x9, x9, x8
  43b9cc:	str	x9, [x19, #24]
  43b9d0:	add	x8, x10, x8
  43b9d4:	str	x8, [x19, #16]
  43b9d8:	mov	w0, #0x1                   	// #1
  43b9dc:	ldp	x20, x19, [sp, #304]
  43b9e0:	ldp	x22, x21, [sp, #288]
  43b9e4:	ldp	x24, x23, [sp, #272]
  43b9e8:	ldp	x26, x25, [sp, #256]
  43b9ec:	ldp	x28, x27, [sp, #240]
  43b9f0:	ldp	x29, x30, [sp, #224]
  43b9f4:	add	sp, sp, #0x140
  43b9f8:	ret
  43b9fc:	ldr	w9, [x19, #8]
  43ba00:	ldr	x4, [x19]
  43ba04:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ba08:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ba0c:	sub	w5, w8, w9
  43ba10:	add	x2, x2, #0xbd7
  43ba14:	add	x3, x3, #0xbc7
  43ba18:	add	x0, sp, #0x10
  43ba1c:	mov	w1, #0xc8                  	// #200
  43ba20:	bl	402740 <snprintf@plt>
  43ba24:	ldp	x8, x0, [x19, #40]
  43ba28:	add	x1, sp, #0x10
  43ba2c:	mov	w2, wzr
  43ba30:	blr	x8
  43ba34:	mov	w8, #0x1                   	// #1
  43ba38:	mov	x0, xzr
  43ba3c:	str	w8, [x19, #56]
  43ba40:	b	43af50 <feof@plt+0x38580>
  43ba44:	ldr	w9, [x19, #8]
  43ba48:	ldr	x4, [x19]
  43ba4c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ba50:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ba54:	sub	w5, w8, w9
  43ba58:	add	x2, x2, #0xbd7
  43ba5c:	add	x3, x3, #0xbc7
  43ba60:	add	x0, sp, #0x10
  43ba64:	mov	w1, #0xc8                  	// #200
  43ba68:	bl	402740 <snprintf@plt>
  43ba6c:	ldp	x8, x0, [x19, #40]
  43ba70:	add	x1, sp, #0x10
  43ba74:	mov	w2, wzr
  43ba78:	blr	x8
  43ba7c:	mov	w8, #0x1                   	// #1
  43ba80:	mov	x0, xzr
  43ba84:	str	w8, [x19, #56]
  43ba88:	b	43b410 <feof@plt+0x38a40>
  43ba8c:	ldr	w9, [x19, #8]
  43ba90:	ldr	x4, [x19]
  43ba94:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ba98:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ba9c:	sub	w5, w8, w9
  43baa0:	add	x2, x2, #0xbd7
  43baa4:	add	x3, x3, #0xbc7
  43baa8:	add	x0, sp, #0x10
  43baac:	mov	w1, #0xc8                  	// #200
  43bab0:	bl	402740 <snprintf@plt>
  43bab4:	ldp	x8, x0, [x19, #40]
  43bab8:	add	x1, sp, #0x10
  43babc:	mov	w2, wzr
  43bac0:	blr	x8
  43bac4:	mov	w8, #0x1                   	// #1
  43bac8:	mov	x0, xzr
  43bacc:	str	w8, [x19, #56]
  43bad0:	b	43b430 <feof@plt+0x38a60>
  43bad4:	ldr	w0, [x8]
  43bad8:	b	43af50 <feof@plt+0x38580>
  43badc:	ldr	w0, [x8]
  43bae0:	b	43b410 <feof@plt+0x38a40>
  43bae4:	ldr	w0, [x8]
  43bae8:	b	43b430 <feof@plt+0x38a60>
  43baec:	ldrh	w0, [x8]
  43baf0:	b	43b588 <feof@plt+0x38bb8>
  43baf4:	sub	sp, sp, #0x170
  43baf8:	stp	x29, x30, [sp, #272]
  43bafc:	stp	x28, x27, [sp, #288]
  43bb00:	stp	x26, x25, [sp, #304]
  43bb04:	stp	x24, x23, [sp, #320]
  43bb08:	stp	x22, x21, [sp, #336]
  43bb0c:	stp	x20, x19, [sp, #352]
  43bb10:	add	x29, sp, #0x110
  43bb14:	ldp	x19, x20, [x29, #96]
  43bb18:	subs	x8, x7, x3
  43bb1c:	b.ls	43bf4c <feof@plt+0x3957c>  // b.plast
  43bb20:	ldr	x25, [x29, #112]
  43bb24:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bb28:	adrp	x27, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bb2c:	mov	x23, x4
  43bb30:	mov	x21, x2
  43bb34:	mov	x22, x1
  43bb38:	mov	x24, x0
  43bb3c:	add	x9, x9, #0x97a
  43bb40:	add	x10, x6, x3
  43bb44:	add	x27, x27, #0xb1c
  43bb48:	str	w5, [sp, #32]
  43bb4c:	stp	x19, x20, [sp, #40]
  43bb50:	str	wzr, [sp, #56]
  43bb54:	stp	x9, x6, [sp]
  43bb58:	stp	x10, x8, [sp, #16]
  43bb5c:	b	43bb6c <feof@plt+0x3919c>
  43bb60:	mov	x23, x0
  43bb64:	ldr	w8, [sp, #56]
  43bb68:	cbnz	w8, 43bf60 <feof@plt+0x39590>
  43bb6c:	ldr	w8, [x21, #48]
  43bb70:	sub	w8, w8, #0x1
  43bb74:	cmp	w8, #0x7
  43bb78:	b.hi	43bbd8 <feof@plt+0x39208>  // b.pmore
  43bb7c:	adr	x9, 43bb8c <feof@plt+0x391bc>
  43bb80:	ldrb	w10, [x27, x8]
  43bb84:	add	x9, x9, x10, lsl #2
  43bb88:	br	x9
  43bb8c:	ldp	x8, x9, [sp, #16]
  43bb90:	cbz	x9, 43bc28 <feof@plt+0x39258>
  43bb94:	add	x10, x8, #0x1
  43bb98:	sub	x9, x9, #0x1
  43bb9c:	stp	x10, x9, [sp, #16]
  43bba0:	ldrb	w28, [x8]
  43bba4:	b	43bcb0 <feof@plt+0x392e0>
  43bba8:	ldp	x8, x9, [sp, #16]
  43bbac:	cmp	x9, #0x1
  43bbb0:	b.ls	43bc28 <feof@plt+0x39258>  // b.plast
  43bbb4:	ldr	w10, [sp, #32]
  43bbb8:	add	x11, x8, #0x2
  43bbbc:	sub	x9, x9, #0x2
  43bbc0:	stp	x11, x9, [sp, #16]
  43bbc4:	cbz	w10, 43bca4 <feof@plt+0x392d4>
  43bbc8:	ldrh	w8, [x8]
  43bbcc:	lsl	x8, x8, #48
  43bbd0:	rev	x28, x8
  43bbd4:	b	43bcb0 <feof@plt+0x392e0>
  43bbd8:	ldr	w8, [sp, #16]
  43bbdc:	ldr	w9, [sp, #8]
  43bbe0:	ldr	x4, [sp]
  43bbe4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bbe8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bbec:	sub	w5, w8, w9
  43bbf0:	add	x0, sp, #0x40
  43bbf4:	mov	w1, #0xc8                  	// #200
  43bbf8:	add	x2, x2, #0xbd7
  43bbfc:	add	x3, x3, #0xc6f
  43bc00:	bl	402740 <snprintf@plt>
  43bc04:	ldp	x8, x0, [sp, #40]
  43bc08:	add	x1, sp, #0x40
  43bc0c:	mov	w2, wzr
  43bc10:	blr	x8
  43bc14:	mov	x28, xzr
  43bc18:	b	43bcb0 <feof@plt+0x392e0>
  43bc1c:	ldp	x8, x9, [sp, #16]
  43bc20:	cmp	x9, #0x3
  43bc24:	b.hi	43bc80 <feof@plt+0x392b0>  // b.pmore
  43bc28:	ldr	w9, [sp, #8]
  43bc2c:	ldr	x4, [sp]
  43bc30:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bc34:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bc38:	sub	w5, w8, w9
  43bc3c:	add	x0, sp, #0x40
  43bc40:	mov	w1, #0xc8                  	// #200
  43bc44:	add	x2, x2, #0xbd7
  43bc48:	add	x3, x3, #0xbc7
  43bc4c:	bl	402740 <snprintf@plt>
  43bc50:	ldp	x8, x0, [sp, #40]
  43bc54:	add	x1, sp, #0x40
  43bc58:	mov	w2, wzr
  43bc5c:	blr	x8
  43bc60:	mov	w8, #0x1                   	// #1
  43bc64:	mov	x28, xzr
  43bc68:	str	w8, [sp, #56]
  43bc6c:	b	43bcb0 <feof@plt+0x392e0>
  43bc70:	mov	x0, sp
  43bc74:	bl	43aae0 <feof@plt+0x38110>
  43bc78:	mov	x28, x0
  43bc7c:	b	43bcb0 <feof@plt+0x392e0>
  43bc80:	ldr	w10, [sp, #32]
  43bc84:	add	x11, x8, #0x4
  43bc88:	sub	x9, x9, #0x4
  43bc8c:	stp	x11, x9, [sp, #16]
  43bc90:	cbz	w10, 43bcac <feof@plt+0x392dc>
  43bc94:	ldr	w8, [x8]
  43bc98:	lsl	x8, x8, #32
  43bc9c:	rev	x28, x8
  43bca0:	b	43bcb0 <feof@plt+0x392e0>
  43bca4:	ldrh	w28, [x8]
  43bca8:	b	43bcb0 <feof@plt+0x392e0>
  43bcac:	ldr	w28, [x8]
  43bcb0:	ldr	w8, [x21, #48]
  43bcb4:	sub	w8, w8, #0x1
  43bcb8:	cmp	w8, #0x7
  43bcbc:	b.hi	43bd24 <feof@plt+0x39354>  // b.pmore
  43bcc0:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bcc4:	add	x11, x11, #0xb24
  43bcc8:	adr	x9, 43bcd8 <feof@plt+0x39308>
  43bccc:	ldrb	w10, [x11, x8]
  43bcd0:	add	x9, x9, x10, lsl #2
  43bcd4:	br	x9
  43bcd8:	ldp	x8, x9, [sp, #16]
  43bcdc:	cbz	x9, 43bdb0 <feof@plt+0x393e0>
  43bce0:	add	x10, x8, #0x1
  43bce4:	sub	x9, x9, #0x1
  43bce8:	stp	x10, x9, [sp, #16]
  43bcec:	ldrb	w0, [x8]
  43bcf0:	b	43be54 <feof@plt+0x39484>
  43bcf4:	ldp	x8, x9, [sp, #16]
  43bcf8:	cmp	x9, #0x1
  43bcfc:	b.ls	43bd70 <feof@plt+0x393a0>  // b.plast
  43bd00:	ldr	w10, [sp, #32]
  43bd04:	add	x11, x8, #0x2
  43bd08:	sub	x9, x9, #0x2
  43bd0c:	stp	x11, x9, [sp, #16]
  43bd10:	cbz	w10, 43be00 <feof@plt+0x39430>
  43bd14:	ldrh	w8, [x8]
  43bd18:	lsl	x8, x8, #48
  43bd1c:	rev	x0, x8
  43bd20:	b	43be54 <feof@plt+0x39484>
  43bd24:	ldr	w8, [sp, #16]
  43bd28:	ldr	w9, [sp, #8]
  43bd2c:	ldr	x4, [sp]
  43bd30:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bd34:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bd38:	sub	w5, w8, w9
  43bd3c:	add	x0, sp, #0x40
  43bd40:	mov	w1, #0xc8                  	// #200
  43bd44:	add	x2, x2, #0xbd7
  43bd48:	add	x3, x3, #0xc6f
  43bd4c:	bl	402740 <snprintf@plt>
  43bd50:	ldp	x8, x0, [sp, #40]
  43bd54:	add	x1, sp, #0x40
  43bd58:	mov	w2, wzr
  43bd5c:	blr	x8
  43bd60:	b	43bd78 <feof@plt+0x393a8>
  43bd64:	ldp	x8, x9, [sp, #16]
  43bd68:	cmp	x9, #0x3
  43bd6c:	b.hi	43bd8c <feof@plt+0x393bc>  // b.pmore
  43bd70:	ldr	w9, [sp, #56]
  43bd74:	cbz	w9, 43bdc0 <feof@plt+0x393f0>
  43bd78:	mov	x0, xzr
  43bd7c:	b	43be54 <feof@plt+0x39484>
  43bd80:	mov	x0, sp
  43bd84:	bl	43aae0 <feof@plt+0x38110>
  43bd88:	b	43be54 <feof@plt+0x39484>
  43bd8c:	ldr	w10, [sp, #32]
  43bd90:	add	x11, x8, #0x4
  43bd94:	sub	x9, x9, #0x4
  43bd98:	stp	x11, x9, [sp, #16]
  43bd9c:	cbz	w10, 43be08 <feof@plt+0x39438>
  43bda0:	ldr	w8, [x8]
  43bda4:	lsl	x8, x8, #32
  43bda8:	rev	x0, x8
  43bdac:	b	43be54 <feof@plt+0x39484>
  43bdb0:	ldr	w9, [sp, #56]
  43bdb4:	cbz	w9, 43be10 <feof@plt+0x39440>
  43bdb8:	mov	w0, wzr
  43bdbc:	b	43be54 <feof@plt+0x39484>
  43bdc0:	ldr	w9, [sp, #8]
  43bdc4:	ldr	x4, [sp]
  43bdc8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bdcc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bdd0:	sub	w5, w8, w9
  43bdd4:	add	x0, sp, #0x40
  43bdd8:	mov	w1, #0xc8                  	// #200
  43bddc:	add	x2, x2, #0xbd7
  43bde0:	add	x3, x3, #0xbc7
  43bde4:	bl	402740 <snprintf@plt>
  43bde8:	ldp	x8, x0, [sp, #40]
  43bdec:	add	x1, sp, #0x40
  43bdf0:	mov	w2, wzr
  43bdf4:	blr	x8
  43bdf8:	mov	x0, xzr
  43bdfc:	b	43be4c <feof@plt+0x3947c>
  43be00:	ldrh	w0, [x8]
  43be04:	b	43be54 <feof@plt+0x39484>
  43be08:	ldr	w0, [x8]
  43be0c:	b	43be54 <feof@plt+0x39484>
  43be10:	ldr	w9, [sp, #8]
  43be14:	ldr	x4, [sp]
  43be18:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43be1c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43be20:	sub	w5, w8, w9
  43be24:	add	x0, sp, #0x40
  43be28:	mov	w1, #0xc8                  	// #200
  43be2c:	add	x2, x2, #0xbd7
  43be30:	add	x3, x3, #0xbc7
  43be34:	bl	402740 <snprintf@plt>
  43be38:	ldp	x8, x0, [sp, #40]
  43be3c:	add	x1, sp, #0x40
  43be40:	mov	w2, wzr
  43be44:	blr	x8
  43be48:	mov	w0, wzr
  43be4c:	mov	w8, #0x1                   	// #1
  43be50:	str	w8, [sp, #56]
  43be54:	orr	x8, x0, x28
  43be58:	cbz	x8, 43bf68 <feof@plt+0x39598>
  43be5c:	ldr	w8, [x21, #48]
  43be60:	sub	w8, w8, #0x1
  43be64:	cmp	w8, #0x7
  43be68:	b.hi	43beb8 <feof@plt+0x394e8>  // b.pmore
  43be6c:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43be70:	add	x11, x11, #0xb2c
  43be74:	adr	x9, 43be84 <feof@plt+0x394b4>
  43be78:	ldrb	w10, [x11, x8]
  43be7c:	add	x9, x9, x10, lsl #2
  43be80:	br	x9
  43be84:	cmp	x28, #0xff
  43be88:	b.eq	43bb60 <feof@plt+0x39190>  // b.none
  43be8c:	b	43beb8 <feof@plt+0x394e8>
  43be90:	mov	w8, #0xffff                	// #65535
  43be94:	cmp	x28, x8
  43be98:	b.eq	43bb60 <feof@plt+0x39190>  // b.none
  43be9c:	b	43beb8 <feof@plt+0x394e8>
  43bea0:	mov	w8, #0xffffffff            	// #-1
  43bea4:	cmp	x28, x8
  43bea8:	b.ne	43beb8 <feof@plt+0x394e8>  // b.any
  43beac:	b	43bb60 <feof@plt+0x39190>
  43beb0:	cmn	x28, #0x1
  43beb4:	b.eq	43bb60 <feof@plt+0x39190>  // b.none
  43beb8:	ldr	x8, [x25, #24]
  43bebc:	add	x9, x23, x22
  43bec0:	add	x26, x9, x28
  43bec4:	add	x28, x9, x0
  43bec8:	cbz	x8, 43bf08 <feof@plt+0x39538>
  43becc:	ldr	x10, [x25]
  43bed0:	sub	x11, x8, #0x1
  43bed4:	mov	w8, #0x18                  	// #24
  43bed8:	madd	x8, x11, x8, x10
  43bedc:	ldr	x9, [x8, #8]!
  43bee0:	cmp	x26, x9
  43bee4:	b.eq	43bef4 <feof@plt+0x39524>  // b.none
  43bee8:	add	x12, x9, #0x1
  43beec:	cmp	x26, x12
  43bef0:	b.ne	43bf08 <feof@plt+0x39538>  // b.any
  43bef4:	mov	w12, #0x18                  	// #24
  43bef8:	madd	x10, x11, x12, x10
  43befc:	ldr	x10, [x10, #16]
  43bf00:	cmp	x10, x21
  43bf04:	b.eq	43bf3c <feof@plt+0x3956c>  // b.none
  43bf08:	mov	w1, #0x18                  	// #24
  43bf0c:	mov	x0, x24
  43bf10:	mov	x2, x19
  43bf14:	mov	x3, x20
  43bf18:	mov	x4, x25
  43bf1c:	bl	435724 <feof@plt+0x32d54>
  43bf20:	cbz	x0, 43bf74 <feof@plt+0x395a4>
  43bf24:	stp	x26, x28, [x0]
  43bf28:	str	x21, [x0, #16]
  43bf2c:	ldr	x8, [x25, #24]
  43bf30:	add	x8, x8, #0x1
  43bf34:	str	x8, [x25, #24]
  43bf38:	b	43bb64 <feof@plt+0x39194>
  43bf3c:	cmp	x28, x9
  43bf40:	b.ls	43bb64 <feof@plt+0x39194>  // b.plast
  43bf44:	str	x28, [x8]
  43bf48:	b	43bb64 <feof@plt+0x39194>
  43bf4c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43bf50:	add	x1, x1, #0xe09
  43bf54:	mov	x0, x20
  43bf58:	mov	w2, wzr
  43bf5c:	blr	x19
  43bf60:	mov	w0, wzr
  43bf64:	b	43bf74 <feof@plt+0x395a4>
  43bf68:	ldr	w8, [sp, #56]
  43bf6c:	cmp	w8, #0x0
  43bf70:	cset	w0, eq  // eq = none
  43bf74:	ldp	x20, x19, [sp, #352]
  43bf78:	ldp	x22, x21, [sp, #336]
  43bf7c:	ldp	x24, x23, [sp, #320]
  43bf80:	ldp	x26, x25, [sp, #304]
  43bf84:	ldp	x28, x27, [sp, #288]
  43bf88:	ldp	x29, x30, [sp, #272]
  43bf8c:	add	sp, sp, #0x170
  43bf90:	ret
  43bf94:	sub	sp, sp, #0x140
  43bf98:	stp	x29, x30, [sp, #224]
  43bf9c:	stp	x28, x27, [sp, #240]
  43bfa0:	stp	x26, x25, [sp, #256]
  43bfa4:	stp	x24, x23, [sp, #272]
  43bfa8:	stp	x22, x21, [sp, #288]
  43bfac:	stp	x20, x19, [sp, #304]
  43bfb0:	add	x29, sp, #0xe0
  43bfb4:	mov	w8, #0x1                   	// #1
  43bfb8:	str	w8, [x6]
  43bfbc:	ldr	x8, [x1, #32]
  43bfc0:	mov	x22, x6
  43bfc4:	cbz	x8, 43c034 <feof@plt+0x39664>
  43bfc8:	ldr	x10, [x1, #24]
  43bfcc:	mov	x20, x5
  43bfd0:	mov	x23, x4
  43bfd4:	mov	x27, x3
  43bfd8:	mov	x21, x2
  43bfdc:	mov	x25, x1
  43bfe0:	mov	x24, x0
  43bfe4:	mov	x11, xzr
  43bfe8:	mov	x12, x8
  43bfec:	b	43bffc <feof@plt+0x3962c>
  43bff0:	mov	x12, x13
  43bff4:	cmp	x11, x12
  43bff8:	b.cs	43c034 <feof@plt+0x39664>  // b.hs, b.nlast
  43bffc:	add	x9, x12, x11
  43c000:	lsr	x13, x9, #1
  43c004:	add	x9, x13, x13, lsl #1
  43c008:	lsl	x14, x9, #3
  43c00c:	add	x9, x10, x14
  43c010:	ldr	x15, [x9]
  43c014:	cmp	x15, x21
  43c018:	b.hi	43bff0 <feof@plt+0x39620>  // b.pmore
  43c01c:	ldr	x15, [x9, #8]
  43c020:	cmp	x15, x21
  43c024:	b.hi	43c05c <feof@plt+0x3968c>  // b.pmore
  43c028:	add	x11, x13, #0x1
  43c02c:	cmp	x11, x12
  43c030:	b.cc	43bffc <feof@plt+0x3962c>  // b.lo, b.ul, b.last
  43c034:	mov	w0, wzr
  43c038:	str	wzr, [x22]
  43c03c:	ldp	x20, x19, [sp, #304]
  43c040:	ldp	x22, x21, [sp, #288]
  43c044:	ldp	x24, x23, [sp, #272]
  43c048:	ldp	x26, x25, [sp, #256]
  43c04c:	ldp	x28, x27, [sp, #240]
  43c050:	ldp	x29, x30, [sp, #224]
  43c054:	add	sp, sp, #0x140
  43c058:	ret
  43c05c:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43c060:	asr	x15, x14, #3
  43c064:	movk	x13, #0xaaab
  43c068:	orr	x14, xzr, #0x1
  43c06c:	madd	x15, x15, x13, x14
  43c070:	cmp	x15, x8
  43c074:	b.cs	43c0c4 <feof@plt+0x396f4>  // b.hs, b.nlast
  43c078:	add	x11, x12, x11
  43c07c:	lsr	x11, x11, #1
  43c080:	mov	w12, #0x18                  	// #24
  43c084:	madd	x11, x11, x12, x10
  43c088:	add	x11, x11, #0x18
  43c08c:	ldr	x12, [x11]
  43c090:	cmp	x12, x21
  43c094:	b.hi	43c0c4 <feof@plt+0x396f4>  // b.pmore
  43c098:	ldr	x12, [x11, #8]
  43c09c:	cmp	x12, x21
  43c0a0:	b.ls	43c0c0 <feof@plt+0x396f0>  // b.plast
  43c0a4:	sub	x12, x11, x10
  43c0a8:	asr	x12, x12, #3
  43c0ac:	madd	x12, x12, x13, x14
  43c0b0:	add	x9, x9, #0x18
  43c0b4:	cmp	x12, x8
  43c0b8:	add	x11, x11, #0x18
  43c0bc:	b.cc	43c08c <feof@plt+0x396bc>  // b.lo, b.ul, b.last
  43c0c0:	sub	x9, x11, #0x18
  43c0c4:	ldr	x19, [x9, #16]
  43c0c8:	cmp	x9, x10
  43c0cc:	ldr	x8, [x19, #104]
  43c0d0:	str	x8, [sp, #104]
  43c0d4:	b.ls	43c130 <feof@plt+0x39760>  // b.plast
  43c0d8:	ldur	x10, [x9, #-24]
  43c0dc:	cmp	x10, x21
  43c0e0:	b.hi	43c130 <feof@plt+0x39760>  // b.pmore
  43c0e4:	ldur	x10, [x9, #-16]
  43c0e8:	cmp	x10, x21
  43c0ec:	b.ls	43c130 <feof@plt+0x39760>  // b.plast
  43c0f0:	ldr	w10, [x24, #8]
  43c0f4:	cbz	w10, 43c104 <feof@plt+0x39734>
  43c0f8:	add	x8, x19, #0x68
  43c0fc:	ldar	x8, [x8]
  43c100:	str	x8, [sp, #104]
  43c104:	cmn	x8, #0x1
  43c108:	b.ne	43c130 <feof@plt+0x39760>  // b.any
  43c10c:	ldur	x19, [x9, #-8]
  43c110:	sub	x28, x9, #0x18
  43c114:	mov	x9, x28
  43c118:	ldr	x8, [x19, #104]
  43c11c:	str	x8, [sp, #104]
  43c120:	ldr	x10, [x25, #24]
  43c124:	cmp	x28, x10
  43c128:	b.hi	43c0d8 <feof@plt+0x39708>  // b.pmore
  43c12c:	b	43c134 <feof@plt+0x39764>
  43c130:	mov	x28, x9
  43c134:	ldr	w9, [x24, #8]
  43c138:	cbz	w9, 43c148 <feof@plt+0x39778>
  43c13c:	add	x8, x19, #0x68
  43c140:	ldar	x8, [x8]
  43c144:	str	x8, [sp, #104]
  43c148:	cbz	x8, 43c258 <feof@plt+0x39888>
  43c14c:	mov	w9, wzr
  43c150:	cmn	x8, #0x1
  43c154:	b.eq	43c4b8 <feof@plt+0x39ae8>  // b.none
  43c158:	ldr	x11, [x28, #16]
  43c15c:	ldr	x12, [x11, #112]
  43c160:	cbz	x12, 43c1ac <feof@plt+0x397dc>
  43c164:	mov	x13, xzr
  43c168:	mov	w10, #0x18                  	// #24
  43c16c:	b	43c17c <feof@plt+0x397ac>
  43c170:	cmp	x13, x9
  43c174:	mov	x12, x9
  43c178:	b.cs	43c1ac <feof@plt+0x397dc>  // b.hs, b.nlast
  43c17c:	add	x9, x12, x13
  43c180:	lsr	x9, x9, #1
  43c184:	madd	x14, x9, x10, x8
  43c188:	ldr	x15, [x14]
  43c18c:	cmp	x15, x21
  43c190:	b.hi	43c170 <feof@plt+0x397a0>  // b.pmore
  43c194:	ldr	x13, [x14, #24]
  43c198:	cmp	x13, x21
  43c19c:	b.hi	43c37c <feof@plt+0x399ac>  // b.pmore
  43c1a0:	add	x13, x9, #0x1
  43c1a4:	mov	x9, x12
  43c1a8:	b	43c170 <feof@plt+0x397a0>
  43c1ac:	ldr	x25, [x11, #80]
  43c1b0:	cbnz	x25, 43c248 <feof@plt+0x39878>
  43c1b4:	ldr	x25, [x11, #64]
  43c1b8:	cbz	x25, 43c244 <feof@plt+0x39874>
  43c1bc:	ldrb	w8, [x25]
  43c1c0:	cmp	w8, #0x2f
  43c1c4:	b.eq	43c244 <feof@plt+0x39874>  // b.none
  43c1c8:	ldr	x26, [x11, #72]
  43c1cc:	cbz	x26, 43c244 <feof@plt+0x39874>
  43c1d0:	mov	x0, x25
  43c1d4:	str	x27, [sp, #24]
  43c1d8:	bl	402420 <strlen@plt>
  43c1dc:	mov	x19, x0
  43c1e0:	mov	x0, x26
  43c1e4:	bl	402420 <strlen@plt>
  43c1e8:	add	x8, x19, x0
  43c1ec:	mov	x27, x0
  43c1f0:	add	x1, x8, #0x2
  43c1f4:	mov	x0, x24
  43c1f8:	mov	x2, x23
  43c1fc:	mov	x3, x20
  43c200:	str	x19, [sp, #16]
  43c204:	bl	435450 <feof@plt+0x32a80>
  43c208:	cbz	x0, 43c038 <feof@plt+0x39668>
  43c20c:	mov	x1, x26
  43c210:	mov	x2, x27
  43c214:	mov	x23, x0
  43c218:	bl	402390 <memcpy@plt>
  43c21c:	add	x0, x23, x27
  43c220:	mov	w8, #0x2f                  	// #47
  43c224:	strb	w8, [x0], #1
  43c228:	ldr	x8, [sp, #16]
  43c22c:	mov	x1, x25
  43c230:	add	x2, x8, #0x1
  43c234:	bl	402390 <memcpy@plt>
  43c238:	ldr	x11, [x28, #16]
  43c23c:	ldr	x27, [sp, #24]
  43c240:	mov	x25, x23
  43c244:	str	x25, [x11, #80]
  43c248:	mov	x0, x20
  43c24c:	mov	x1, x21
  43c250:	mov	x2, x25
  43c254:	b	43c4ec <feof@plt+0x39b1c>
  43c258:	ldr	x4, [x28, #16]
  43c25c:	add	x5, sp, #0x28
  43c260:	add	x6, sp, #0x68
  43c264:	add	x7, sp, #0x20
  43c268:	mov	x0, x24
  43c26c:	mov	x1, x25
  43c270:	mov	x2, x23
  43c274:	mov	x3, x20
  43c278:	str	x27, [sp, #24]
  43c27c:	bl	43c5b8 <feof@plt+0x39be8>
  43c280:	cbz	w0, 43c350 <feof@plt+0x39980>
  43c284:	ldr	w8, [x24, #8]
  43c288:	ldr	x26, [x28, #16]
  43c28c:	add	x27, x25, #0x80
  43c290:	cmp	w8, #0x0
  43c294:	csel	x8, x27, xzr, eq  // eq = none
  43c298:	str	x8, [sp, #16]
  43c29c:	cbnz	x8, 43c2ac <feof@plt+0x398dc>
  43c2a0:	movi	v0.2d, #0x0
  43c2a4:	sub	x27, x29, #0x30
  43c2a8:	stp	q0, q0, [x29, #-48]
  43c2ac:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c2b0:	add	x8, x8, #0x954
  43c2b4:	str	x8, [sp, #112]
  43c2b8:	ldr	x8, [x25, #56]
  43c2bc:	str	x8, [sp, #120]
  43c2c0:	ldr	x8, [x26]
  43c2c4:	str	x8, [sp, #128]
  43c2c8:	ldr	x8, [x26, #8]
  43c2cc:	str	x8, [sp, #136]
  43c2d0:	ldr	w9, [x25, #120]
  43c2d4:	stp	x23, x20, [sp, #152]
  43c2d8:	str	wzr, [sp, #168]
  43c2dc:	str	w9, [sp, #144]
  43c2e0:	cbz	x8, 43c318 <feof@plt+0x39948>
  43c2e4:	add	x4, sp, #0x70
  43c2e8:	add	x5, sp, #0x28
  43c2ec:	mov	x0, x24
  43c2f0:	mov	x1, x25
  43c2f4:	mov	x2, x26
  43c2f8:	mov	x3, xzr
  43c2fc:	mov	x6, x23
  43c300:	mov	x7, x20
  43c304:	stp	x27, x27, [sp]
  43c308:	bl	43e430 <feof@plt+0x3ba60>
  43c30c:	cbz	w0, 43c434 <feof@plt+0x39a64>
  43c310:	ldr	x8, [sp, #136]
  43c314:	cbnz	x8, 43c2e4 <feof@plt+0x39914>
  43c318:	ldr	x26, [x27, #24]
  43c31c:	cbz	x26, 43c3f4 <feof@plt+0x39a24>
  43c320:	ldr	x8, [sp, #16]
  43c324:	cbz	x8, 43c3fc <feof@plt+0x39a2c>
  43c328:	mov	x0, x24
  43c32c:	mov	x1, x8
  43c330:	mov	x2, x23
  43c334:	mov	x3, x20
  43c338:	bl	43582c <feof@plt+0x32e5c>
  43c33c:	mov	x27, x0
  43c340:	cbz	x0, 43c438 <feof@plt+0x39a68>
  43c344:	ldr	x8, [sp, #16]
  43c348:	str	xzr, [x8, #24]
  43c34c:	b	43c418 <feof@plt+0x39a48>
  43c350:	mov	x27, xzr
  43c354:	mov	x26, xzr
  43c358:	mov	w9, wzr
  43c35c:	ldr	w8, [x24, #8]
  43c360:	cbnz	w8, 43c480 <feof@plt+0x39ab0>
  43c364:	ldr	x8, [sp, #32]
  43c368:	str	x26, [x19, #128]
  43c36c:	stp	x8, x27, [x19, #112]
  43c370:	ldr	x8, [sp, #104]
  43c374:	str	x8, [x19, #104]
  43c378:	b	43c4ac <feof@plt+0x39adc>
  43c37c:	ldr	x10, [x11, #128]
  43c380:	cbz	x10, 43c3d8 <feof@plt+0x39a08>
  43c384:	ldr	x11, [x11, #120]
  43c388:	mov	x13, xzr
  43c38c:	mov	x14, x10
  43c390:	b	43c3a0 <feof@plt+0x399d0>
  43c394:	mov	x14, x15
  43c398:	cmp	x13, x14
  43c39c:	b.cs	43c3d8 <feof@plt+0x39a08>  // b.hs, b.nlast
  43c3a0:	add	x12, x14, x13
  43c3a4:	lsr	x15, x12, #1
  43c3a8:	add	x12, x15, x15, lsl #1
  43c3ac:	lsl	x16, x12, #3
  43c3b0:	add	x12, x11, x16
  43c3b4:	ldr	x17, [x12]
  43c3b8:	cmp	x17, x21
  43c3bc:	b.hi	43c394 <feof@plt+0x399c4>  // b.pmore
  43c3c0:	ldr	x17, [x12, #8]
  43c3c4:	cmp	x17, x21
  43c3c8:	b.hi	43c4fc <feof@plt+0x39b2c>  // b.pmore
  43c3cc:	add	x13, x15, #0x1
  43c3d0:	cmp	x13, x14
  43c3d4:	b.cc	43c3a0 <feof@plt+0x399d0>  // b.lo, b.ul, b.last
  43c3d8:	mov	w10, #0x18                  	// #24
  43c3dc:	madd	x8, x9, x10, x8
  43c3e0:	ldr	x2, [x8, #8]
  43c3e4:	ldr	w3, [x8, #16]
  43c3e8:	mov	x0, x20
  43c3ec:	mov	x1, x21
  43c3f0:	b	43c4f0 <feof@plt+0x39b20>
  43c3f4:	mov	x27, xzr
  43c3f8:	b	43c43c <feof@plt+0x39a6c>
  43c3fc:	sub	x1, x29, #0x30
  43c400:	mov	x0, x24
  43c404:	mov	x2, x23
  43c408:	mov	x3, x20
  43c40c:	bl	43583c <feof@plt+0x32e6c>
  43c410:	cbz	w0, 43c434 <feof@plt+0x39a64>
  43c414:	ldr	x27, [x27]
  43c418:	adrp	x3, 43e000 <feof@plt+0x3b630>
  43c41c:	add	x3, x3, #0xbc4
  43c420:	mov	w2, #0x18                  	// #24
  43c424:	mov	x0, x27
  43c428:	mov	x1, x26
  43c42c:	bl	43f518 <feof@plt+0x3cb48>
  43c430:	b	43c43c <feof@plt+0x39a6c>
  43c434:	mov	x27, xzr
  43c438:	mov	x26, xzr
  43c43c:	ldr	x8, [sp, #72]
  43c440:	cbz	x8, 43c45c <feof@plt+0x39a8c>
  43c444:	ldr	x1, [sp, #80]
  43c448:	lsl	x2, x8, #3
  43c44c:	mov	x0, x24
  43c450:	mov	x3, x23
  43c454:	mov	x4, x20
  43c458:	bl	435614 <feof@plt+0x32c44>
  43c45c:	ldp	x8, x1, [sp, #88]
  43c460:	mov	x0, x24
  43c464:	mov	x3, x23
  43c468:	mov	x4, x20
  43c46c:	lsl	x2, x8, #3
  43c470:	bl	435614 <feof@plt+0x32c44>
  43c474:	mov	w9, #0x1                   	// #1
  43c478:	ldr	w8, [x24, #8]
  43c47c:	cbz	w8, 43c364 <feof@plt+0x39994>
  43c480:	ldr	x8, [sp, #32]
  43c484:	add	x10, x19, #0x70
  43c488:	add	x11, x19, #0x78
  43c48c:	add	x12, x19, #0x80
  43c490:	stlr	x8, [x10]
  43c494:	stlr	x27, [x11]
  43c498:	stlr	x26, [x12]
  43c49c:	ldr	x8, [sp, #104]
  43c4a0:	add	x10, x19, #0x68
  43c4a4:	stlr	x8, [x10]
  43c4a8:	ldr	x8, [sp, #104]
  43c4ac:	ldr	x27, [sp, #24]
  43c4b0:	cmn	x8, #0x1
  43c4b4:	b.ne	43c158 <feof@plt+0x39788>  // b.any
  43c4b8:	cbz	w9, 43c4e0 <feof@plt+0x39b10>
  43c4bc:	mov	x0, x24
  43c4c0:	mov	x1, x25
  43c4c4:	mov	x2, x21
  43c4c8:	mov	x3, x27
  43c4cc:	mov	x4, x23
  43c4d0:	mov	x5, x20
  43c4d4:	mov	x6, x22
  43c4d8:	bl	43bf94 <feof@plt+0x395c4>
  43c4dc:	b	43c03c <feof@plt+0x3966c>
  43c4e0:	mov	x0, x20
  43c4e4:	mov	x1, x21
  43c4e8:	mov	x2, xzr
  43c4ec:	mov	w3, wzr
  43c4f0:	mov	x4, xzr
  43c4f4:	blr	x27
  43c4f8:	b	43c03c <feof@plt+0x3966c>
  43c4fc:	mov	x15, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43c500:	asr	x17, x16, #3
  43c504:	movk	x15, #0xaaab
  43c508:	orr	x16, xzr, #0x1
  43c50c:	madd	x17, x17, x15, x16
  43c510:	cmp	x17, x10
  43c514:	b.cs	43c564 <feof@plt+0x39b94>  // b.hs, b.nlast
  43c518:	add	x13, x14, x13
  43c51c:	lsr	x13, x13, #1
  43c520:	mov	w14, #0x18                  	// #24
  43c524:	madd	x13, x13, x14, x11
  43c528:	add	x13, x13, #0x18
  43c52c:	ldr	x14, [x13]
  43c530:	cmp	x14, x21
  43c534:	b.hi	43c560 <feof@plt+0x39b90>  // b.pmore
  43c538:	ldr	x14, [x13, #8]
  43c53c:	cmp	x14, x21
  43c540:	b.ls	43c564 <feof@plt+0x39b94>  // b.plast
  43c544:	sub	x14, x13, x11
  43c548:	asr	x14, x14, #3
  43c54c:	madd	x14, x14, x15, x16
  43c550:	add	x12, x12, #0x18
  43c554:	cmp	x14, x10
  43c558:	add	x13, x13, #0x18
  43c55c:	b.cc	43c52c <feof@plt+0x39b5c>  // b.lo, b.ul, b.last
  43c560:	sub	x12, x13, #0x18
  43c564:	mov	w10, #0x18                  	// #24
  43c568:	madd	x8, x9, x10, x8
  43c56c:	ldr	x9, [x8, #8]
  43c570:	ldr	x22, [x12, #16]
  43c574:	add	x4, sp, #0x70
  43c578:	add	x5, sp, #0x28
  43c57c:	str	x9, [sp, #112]
  43c580:	ldr	w8, [x8, #16]
  43c584:	mov	x0, x21
  43c588:	mov	x1, x22
  43c58c:	mov	x2, x27
  43c590:	mov	x3, x20
  43c594:	str	w8, [sp, #40]
  43c598:	bl	43e294 <feof@plt+0x3b8c4>
  43c59c:	cbnz	w0, 43c03c <feof@plt+0x3966c>
  43c5a0:	ldr	x2, [sp, #112]
  43c5a4:	ldr	w3, [sp, #40]
  43c5a8:	ldr	x4, [x22]
  43c5ac:	mov	x0, x20
  43c5b0:	mov	x1, x21
  43c5b4:	b	43c4f4 <feof@plt+0x39b24>
  43c5b8:	sub	sp, sp, #0x1f0
  43c5bc:	stp	x29, x30, [sp, #400]
  43c5c0:	stp	x28, x27, [sp, #416]
  43c5c4:	stp	x26, x25, [sp, #432]
  43c5c8:	stp	x24, x23, [sp, #448]
  43c5cc:	stp	x22, x21, [sp, #464]
  43c5d0:	stp	x20, x19, [sp, #480]
  43c5d4:	add	x29, sp, #0x190
  43c5d8:	movi	v0.2d, #0x0
  43c5dc:	stp	q0, q0, [sp, #160]
  43c5e0:	stp	q0, q0, [x5, #32]
  43c5e4:	stp	q0, q0, [x5]
  43c5e8:	ldr	x8, [x4, #56]
  43c5ec:	ldr	x9, [x1, #80]
  43c5f0:	mov	x23, x5
  43c5f4:	mov	x21, x3
  43c5f8:	mov	x22, x2
  43c5fc:	subs	x9, x9, x8
  43c600:	mov	x19, x7
  43c604:	stp	x7, x0, [sp, #80]
  43c608:	str	x6, [sp, #72]
  43c60c:	b.ls	43c698 <feof@plt+0x39cc8>  // b.plast
  43c610:	adrp	x10, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c614:	add	x10, x10, #0x960
  43c618:	str	x10, [sp, #96]
  43c61c:	ldr	x10, [x1, #72]
  43c620:	mov	x20, x4
  43c624:	mov	x25, x1
  43c628:	mov	x24, x0
  43c62c:	add	x8, x10, x8
  43c630:	str	x10, [sp, #104]
  43c634:	stp	x8, x9, [sp, #112]
  43c638:	ldr	w11, [x1, #120]
  43c63c:	cmp	x9, #0x3
  43c640:	stp	x22, x21, [sp, #136]
  43c644:	str	wzr, [sp, #152]
  43c648:	str	w11, [sp, #128]
  43c64c:	b.hi	43c6b0 <feof@plt+0x39ce0>  // b.pmore
  43c650:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c654:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c658:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c65c:	sub	w5, w8, w10
  43c660:	add	x2, x2, #0xbd7
  43c664:	add	x3, x3, #0xbc7
  43c668:	add	x4, x4, #0x960
  43c66c:	add	x0, sp, #0xc0
  43c670:	mov	w1, #0xc8                  	// #200
  43c674:	bl	402740 <snprintf@plt>
  43c678:	ldp	x8, x0, [sp, #136]
  43c67c:	add	x1, sp, #0xc0
  43c680:	mov	w2, wzr
  43c684:	blr	x8
  43c688:	mov	w8, wzr
  43c68c:	mov	w9, #0x1                   	// #1
  43c690:	str	w9, [sp, #152]
  43c694:	b	43c6fc <feof@plt+0x39d2c>
  43c698:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c69c:	add	x1, x1, #0xcaa
  43c6a0:	mov	x0, x21
  43c6a4:	mov	w2, wzr
  43c6a8:	blr	x22
  43c6ac:	b	43c7e0 <feof@plt+0x39e10>
  43c6b0:	add	x10, x8, #0x4
  43c6b4:	sub	x9, x9, #0x4
  43c6b8:	stp	x10, x9, [sp, #112]
  43c6bc:	cbz	w11, 43c6d4 <feof@plt+0x39d04>
  43c6c0:	ldrb	w9, [x8]
  43c6c4:	ldrb	w10, [x8, #1]
  43c6c8:	ldrb	w11, [x8, #2]
  43c6cc:	add	x8, x8, #0x3
  43c6d0:	b	43c6e0 <feof@plt+0x39d10>
  43c6d4:	ldrb	w9, [x8, #3]
  43c6d8:	ldrb	w10, [x8, #2]
  43c6dc:	ldrb	w11, [x8, #1]
  43c6e0:	lsl	w9, w9, #24
  43c6e4:	bfi	w9, w10, #16, #8
  43c6e8:	bfi	w9, w11, #8, #8
  43c6ec:	ldrb	w8, [x8]
  43c6f0:	orr	w8, w9, w8
  43c6f4:	cmn	w8, #0x1
  43c6f8:	b.eq	43c8e8 <feof@plt+0x39f18>  // b.none
  43c6fc:	mov	w9, wzr
  43c700:	mov	w0, w8
  43c704:	ldr	x8, [sp, #112]
  43c708:	cmp	x0, #0x1
  43c70c:	str	x0, [sp, #120]
  43c710:	b.hi	43c76c <feof@plt+0x39d9c>  // b.pmore
  43c714:	ldr	w9, [sp, #152]
  43c718:	cbnz	w9, 43c760 <feof@plt+0x39d90>
  43c71c:	ldr	w9, [sp, #104]
  43c720:	ldr	x4, [sp, #96]
  43c724:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c728:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c72c:	sub	w5, w8, w9
  43c730:	add	x2, x2, #0xbd7
  43c734:	add	x3, x3, #0xbc7
  43c738:	add	x0, sp, #0xc0
  43c73c:	mov	w1, #0xc8                  	// #200
  43c740:	bl	402740 <snprintf@plt>
  43c744:	ldp	x8, x0, [sp, #136]
  43c748:	add	x1, sp, #0xc0
  43c74c:	mov	w2, wzr
  43c750:	blr	x8
  43c754:	ldr	x8, [sp, #112]
  43c758:	mov	w9, #0x1                   	// #1
  43c75c:	str	w9, [sp, #152]
  43c760:	mov	x10, x8
  43c764:	str	wzr, [x23]
  43c768:	b	43c7a8 <feof@plt+0x39dd8>
  43c76c:	ldr	w11, [sp, #128]
  43c770:	add	x10, x8, #0x2
  43c774:	sub	x12, x0, #0x2
  43c778:	stp	x10, x12, [sp, #112]
  43c77c:	cmp	w11, #0x0
  43c780:	cinc	x13, x8, eq  // eq = none
  43c784:	cinc	x14, x8, ne  // ne = any
  43c788:	ldrb	w13, [x13]
  43c78c:	ldrb	w14, [x14]
  43c790:	bfi	w14, w13, #8, #8
  43c794:	sub	w13, w14, #0x2
  43c798:	and	w13, w13, #0xffff
  43c79c:	cmp	w13, #0x2
  43c7a0:	str	w14, [x23]
  43c7a4:	b.ls	43c878 <feof@plt+0x39ea8>  // b.plast
  43c7a8:	ldr	w8, [sp, #104]
  43c7ac:	ldr	x4, [sp, #96]
  43c7b0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c7b4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c7b8:	sub	w5, w10, w8
  43c7bc:	add	x2, x2, #0xbd7
  43c7c0:	add	x3, x3, #0xcc8
  43c7c4:	add	x0, sp, #0xc0
  43c7c8:	mov	w1, #0xc8                  	// #200
  43c7cc:	bl	402740 <snprintf@plt>
  43c7d0:	ldp	x8, x0, [sp, #136]
  43c7d4:	add	x1, sp, #0xc0
  43c7d8:	mov	w2, wzr
  43c7dc:	blr	x8
  43c7e0:	ldp	x8, x9, [sp, #168]
  43c7e4:	ldr	x19, [sp, #88]
  43c7e8:	add	x1, sp, #0xa0
  43c7ec:	mov	x2, x22
  43c7f0:	add	x8, x9, x8
  43c7f4:	mov	x0, x19
  43c7f8:	mov	x3, x21
  43c7fc:	stp	xzr, x8, [sp, #168]
  43c800:	bl	43583c <feof@plt+0x32e6c>
  43c804:	ldr	x8, [x23, #32]
  43c808:	cbz	x8, 43c824 <feof@plt+0x39e54>
  43c80c:	ldr	x1, [x23, #40]
  43c810:	lsl	x2, x8, #3
  43c814:	mov	x0, x19
  43c818:	mov	x3, x22
  43c81c:	mov	x4, x21
  43c820:	bl	435614 <feof@plt+0x32c44>
  43c824:	ldp	x8, x1, [x23, #48]
  43c828:	mov	x0, x19
  43c82c:	mov	x3, x22
  43c830:	mov	x4, x21
  43c834:	lsl	x2, x8, #3
  43c838:	bl	435614 <feof@plt+0x32c44>
  43c83c:	ldr	x10, [sp, #72]
  43c840:	mov	x9, #0xffffffffffffffff    	// #-1
  43c844:	mov	x8, xzr
  43c848:	mov	w0, wzr
  43c84c:	str	x9, [x10]
  43c850:	ldr	x9, [sp, #80]
  43c854:	str	x8, [x9]
  43c858:	ldp	x20, x19, [sp, #480]
  43c85c:	ldp	x22, x21, [sp, #464]
  43c860:	ldp	x24, x23, [sp, #448]
  43c864:	ldp	x26, x25, [sp, #432]
  43c868:	ldp	x28, x27, [sp, #416]
  43c86c:	ldp	x29, x30, [sp, #400]
  43c870:	add	sp, sp, #0x1f0
  43c874:	ret
  43c878:	cbz	w9, 43c920 <feof@plt+0x39f50>
  43c87c:	add	x0, sp, #0x60
  43c880:	bl	43aae0 <feof@plt+0x38110>
  43c884:	ldr	x9, [sp, #96]
  43c888:	ldp	x19, x8, [sp, #112]
  43c88c:	ldr	w27, [sp, #152]
  43c890:	str	x9, [sp, #64]
  43c894:	ldr	x9, [sp, #104]
  43c898:	subs	x8, x8, x0
  43c89c:	str	x9, [sp, #56]
  43c8a0:	b.cs	43c8f8 <feof@plt+0x39f28>  // b.hs, b.nlast
  43c8a4:	cbnz	w27, 43c7e0 <feof@plt+0x39e10>
  43c8a8:	ldp	x8, x4, [sp, #56]
  43c8ac:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c8b0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c8b4:	add	x2, x2, #0xbd7
  43c8b8:	sub	w5, w19, w8
  43c8bc:	add	x3, x3, #0xbc7
  43c8c0:	add	x0, sp, #0xc0
  43c8c4:	mov	w1, #0xc8                  	// #200
  43c8c8:	bl	402740 <snprintf@plt>
  43c8cc:	ldp	x8, x0, [sp, #136]
  43c8d0:	add	x1, sp, #0xc0
  43c8d4:	mov	w2, wzr
  43c8d8:	blr	x8
  43c8dc:	mov	w8, #0x1                   	// #1
  43c8e0:	str	w8, [sp, #152]
  43c8e4:	b	43c7e0 <feof@plt+0x39e10>
  43c8e8:	add	x0, sp, #0x60
  43c8ec:	bl	43aae0 <feof@plt+0x38110>
  43c8f0:	mov	w9, #0x1                   	// #1
  43c8f4:	b	43c704 <feof@plt+0x39d34>
  43c8f8:	ldr	x9, [sp, #136]
  43c8fc:	str	x9, [sp, #40]
  43c900:	ldr	x9, [sp, #144]
  43c904:	str	x9, [sp, #48]
  43c908:	add	x9, x19, x0
  43c90c:	stp	x9, x8, [sp, #112]
  43c910:	cbz	x0, 43c938 <feof@plt+0x39f68>
  43c914:	ldrb	w9, [x19], #1
  43c918:	sub	x8, x0, #0x1
  43c91c:	b	43c9f0 <feof@plt+0x3a020>
  43c920:	cmp	x12, #0x3
  43c924:	b.hi	43c948 <feof@plt+0x39f78>  // b.pmore
  43c928:	ldr	w8, [sp, #152]
  43c92c:	cbz	w8, 43c968 <feof@plt+0x39f98>
  43c930:	mov	x0, xzr
  43c934:	b	43c884 <feof@plt+0x39eb4>
  43c938:	cbz	w27, 43c9b0 <feof@plt+0x39fe0>
  43c93c:	mov	x8, xzr
  43c940:	mov	w9, wzr
  43c944:	b	43c9f0 <feof@plt+0x3a020>
  43c948:	add	x9, x8, #0x6
  43c94c:	sub	x10, x0, #0x6
  43c950:	stp	x9, x10, [sp, #112]
  43c954:	cbz	w11, 43ca28 <feof@plt+0x3a058>
  43c958:	ldur	w8, [x8, #2]
  43c95c:	lsl	x8, x8, #32
  43c960:	rev	x0, x8
  43c964:	b	43c884 <feof@plt+0x39eb4>
  43c968:	ldr	w8, [sp, #104]
  43c96c:	ldr	x4, [sp, #96]
  43c970:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c974:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c978:	sub	w5, w10, w8
  43c97c:	add	x2, x2, #0xbd7
  43c980:	add	x3, x3, #0xbc7
  43c984:	add	x0, sp, #0xc0
  43c988:	mov	w1, #0xc8                  	// #200
  43c98c:	bl	402740 <snprintf@plt>
  43c990:	ldp	x8, x0, [sp, #136]
  43c994:	add	x1, sp, #0xc0
  43c998:	mov	w2, wzr
  43c99c:	blr	x8
  43c9a0:	mov	w8, #0x1                   	// #1
  43c9a4:	mov	x0, xzr
  43c9a8:	str	w8, [sp, #152]
  43c9ac:	b	43c884 <feof@plt+0x39eb4>
  43c9b0:	ldp	x8, x4, [sp, #56]
  43c9b4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c9b8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43c9bc:	add	x2, x2, #0xbd7
  43c9c0:	sub	w5, w19, w8
  43c9c4:	add	x3, x3, #0xbc7
  43c9c8:	add	x0, sp, #0xc0
  43c9cc:	mov	w1, #0xc8                  	// #200
  43c9d0:	bl	402740 <snprintf@plt>
  43c9d4:	ldp	x8, x0, [sp, #40]
  43c9d8:	add	x1, sp, #0xc0
  43c9dc:	mov	w2, wzr
  43c9e0:	blr	x8
  43c9e4:	mov	x8, xzr
  43c9e8:	mov	w9, wzr
  43c9ec:	mov	w27, #0x1                   	// #1
  43c9f0:	ldr	w10, [x23]
  43c9f4:	str	w9, [x23, #4]
  43c9f8:	cmp	w10, #0x4
  43c9fc:	b.ge	43ca08 <feof@plt+0x3a038>  // b.tcont
  43ca00:	mov	w9, #0x1                   	// #1
  43ca04:	b	43ca70 <feof@plt+0x3a0a0>
  43ca08:	cbz	x8, 43ca18 <feof@plt+0x3a048>
  43ca0c:	ldrb	w9, [x19], #1
  43ca10:	sub	x8, x8, #0x1
  43ca14:	b	43ca70 <feof@plt+0x3a0a0>
  43ca18:	cbz	w27, 43ca30 <feof@plt+0x3a060>
  43ca1c:	mov	x8, xzr
  43ca20:	mov	w9, wzr
  43ca24:	b	43ca70 <feof@plt+0x3a0a0>
  43ca28:	ldur	w0, [x8, #2]
  43ca2c:	b	43c884 <feof@plt+0x39eb4>
  43ca30:	ldp	x8, x4, [sp, #56]
  43ca34:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ca38:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ca3c:	add	x2, x2, #0xbd7
  43ca40:	sub	w5, w19, w8
  43ca44:	add	x3, x3, #0xbc7
  43ca48:	add	x0, sp, #0xc0
  43ca4c:	mov	w1, #0xc8                  	// #200
  43ca50:	bl	402740 <snprintf@plt>
  43ca54:	ldp	x8, x0, [sp, #40]
  43ca58:	add	x1, sp, #0xc0
  43ca5c:	mov	w2, wzr
  43ca60:	blr	x8
  43ca64:	mov	x8, xzr
  43ca68:	mov	w9, wzr
  43ca6c:	mov	w27, #0x1                   	// #1
  43ca70:	str	w9, [x23, #8]
  43ca74:	cbz	x8, 43ca84 <feof@plt+0x3a0b4>
  43ca78:	cmp	x8, #0x1
  43ca7c:	b.ne	43cb6c <feof@plt+0x3a19c>  // b.any
  43ca80:	add	x19, x19, #0x1
  43ca84:	cbnz	w27, 43cac0 <feof@plt+0x3a0f0>
  43ca88:	ldp	x8, x4, [sp, #56]
  43ca8c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ca90:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ca94:	add	x2, x2, #0xbd7
  43ca98:	sub	w5, w19, w8
  43ca9c:	add	x3, x3, #0xbc7
  43caa0:	add	x0, sp, #0xc0
  43caa4:	mov	w1, #0xc8                  	// #200
  43caa8:	bl	402740 <snprintf@plt>
  43caac:	ldp	x8, x0, [sp, #40]
  43cab0:	add	x1, sp, #0xc0
  43cab4:	mov	w2, wzr
  43cab8:	blr	x8
  43cabc:	mov	w27, #0x1                   	// #1
  43cac0:	str	wzr, [x23, #12]
  43cac4:	mov	x8, xzr
  43cac8:	mov	w9, wzr
  43cacc:	str	wzr, [x23, #16]
  43cad0:	str	w9, [x23, #20]
  43cad4:	sub	w9, w9, #0x1
  43cad8:	subs	x28, x8, x9
  43cadc:	str	x19, [x23, #24]
  43cae0:	b.cs	43caf4 <feof@plt+0x3a124>  // b.hs, b.nlast
  43cae4:	cbnz	w27, 43c7e0 <feof@plt+0x39e10>
  43cae8:	ldr	x8, [sp, #56]
  43caec:	sub	w5, w19, w8
  43caf0:	b	43d0f8 <feof@plt+0x3a728>
  43caf4:	stp	x25, x20, [sp]
  43caf8:	add	x25, x19, x9
  43cafc:	str	xzr, [x23, #32]
  43cb00:	b.le	43cbc0 <feof@plt+0x3a1f0>
  43cb04:	mov	x20, xzr
  43cb08:	add	x26, x19, x8
  43cb0c:	mov	x19, x25
  43cb10:	ldrb	w8, [x19]
  43cb14:	cbz	w8, 43cb3c <feof@plt+0x3a16c>
  43cb18:	sub	x1, x26, x19
  43cb1c:	mov	x0, x19
  43cb20:	bl	402930 <strnlen@plt>
  43cb24:	add	x8, x0, x19
  43cb28:	add	x19, x8, #0x1
  43cb2c:	add	x20, x20, #0x1
  43cb30:	cmp	x19, x26
  43cb34:	str	x20, [x23, #32]
  43cb38:	b.cc	43cb10 <feof@plt+0x3a140>  // b.lo, b.ul, b.last
  43cb3c:	mov	x26, x23
  43cb40:	str	xzr, [x26, #40]!
  43cb44:	str	x26, [sp, #32]
  43cb48:	cbz	x20, 43cbf8 <feof@plt+0x3a228>
  43cb4c:	ldp	x2, x3, [sp, #136]
  43cb50:	lsl	x1, x20, #3
  43cb54:	mov	x0, x24
  43cb58:	bl	435450 <feof@plt+0x32a80>
  43cb5c:	mov	x19, x0
  43cb60:	str	x0, [x26]
  43cb64:	cbnz	x0, 43cbfc <feof@plt+0x3a22c>
  43cb68:	b	43c7e0 <feof@plt+0x39e10>
  43cb6c:	ldrsb	w9, [x19, #1]
  43cb70:	cmp	x8, #0x2
  43cb74:	str	w9, [x23, #12]
  43cb78:	b.ne	43cbd4 <feof@plt+0x3a204>  // b.any
  43cb7c:	add	x19, x19, #0x2
  43cb80:	cbnz	w27, 43cac4 <feof@plt+0x3a0f4>
  43cb84:	ldp	x8, x4, [sp, #56]
  43cb88:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cb8c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cb90:	add	x2, x2, #0xbd7
  43cb94:	sub	w5, w19, w8
  43cb98:	add	x3, x3, #0xbc7
  43cb9c:	add	x0, sp, #0xc0
  43cba0:	mov	w1, #0xc8                  	// #200
  43cba4:	bl	402740 <snprintf@plt>
  43cba8:	ldp	x8, x0, [sp, #40]
  43cbac:	add	x1, sp, #0xc0
  43cbb0:	mov	w2, wzr
  43cbb4:	blr	x8
  43cbb8:	mov	w27, #0x1                   	// #1
  43cbbc:	b	43cac4 <feof@plt+0x3a0f4>
  43cbc0:	mov	x8, x23
  43cbc4:	str	xzr, [x8, #40]!
  43cbc8:	mov	x19, xzr
  43cbcc:	str	x8, [sp, #32]
  43cbd0:	b	43cbfc <feof@plt+0x3a22c>
  43cbd4:	ldrb	w9, [x19, #2]
  43cbd8:	cmp	x8, #0x3
  43cbdc:	str	w9, [x23, #16]
  43cbe0:	b.ne	43d120 <feof@plt+0x3a750>  // b.any
  43cbe4:	add	x19, x19, #0x3
  43cbe8:	cbz	w27, 43d148 <feof@plt+0x3a778>
  43cbec:	mov	x8, xzr
  43cbf0:	mov	w9, wzr
  43cbf4:	b	43cad0 <feof@plt+0x3a100>
  43cbf8:	mov	x19, xzr
  43cbfc:	ldrb	w8, [x25]
  43cc00:	cbz	w8, 43cca8 <feof@plt+0x3a2d8>
  43cc04:	mov	x26, xzr
  43cc08:	mov	x20, x25
  43cc0c:	cbnz	w27, 43c7e0 <feof@plt+0x39e10>
  43cc10:	mov	x0, x25
  43cc14:	mov	x1, x28
  43cc18:	bl	402930 <strnlen@plt>
  43cc1c:	add	x9, x0, #0x1
  43cc20:	subs	x8, x28, x9
  43cc24:	b.cs	43cc70 <feof@plt+0x3a2a0>  // b.hs, b.nlast
  43cc28:	ldp	x8, x4, [sp, #56]
  43cc2c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cc30:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cc34:	add	x0, sp, #0xc0
  43cc38:	sub	w5, w20, w8
  43cc3c:	mov	w1, #0xc8                  	// #200
  43cc40:	add	x2, x2, #0xbd7
  43cc44:	add	x3, x3, #0xbc7
  43cc48:	bl	402740 <snprintf@plt>
  43cc4c:	ldp	x8, x0, [sp, #40]
  43cc50:	add	x1, sp, #0xc0
  43cc54:	mov	w2, wzr
  43cc58:	blr	x8
  43cc5c:	ldr	x8, [sp, #32]
  43cc60:	mov	x25, xzr
  43cc64:	mov	w27, #0x1                   	// #1
  43cc68:	ldr	x19, [x8]
  43cc6c:	b	43cc80 <feof@plt+0x3a2b0>
  43cc70:	mov	x28, x8
  43cc74:	ldr	x8, [sp, #32]
  43cc78:	mov	w27, wzr
  43cc7c:	add	x20, x25, x9
  43cc80:	str	x25, [x19, x26]
  43cc84:	ldr	x19, [x8]
  43cc88:	ldr	x8, [x19, x26]
  43cc8c:	cbz	x8, 43c7e0 <feof@plt+0x39e10>
  43cc90:	ldrb	w8, [x20]
  43cc94:	add	x26, x26, #0x8
  43cc98:	mov	x25, x20
  43cc9c:	cbnz	w8, 43cc0c <feof@plt+0x3a23c>
  43cca0:	mov	x25, x20
  43cca4:	b	43ccac <feof@plt+0x3a2dc>
  43cca8:	mov	x20, x25
  43ccac:	ldr	x24, [sp, #88]
  43ccb0:	cbz	x28, 43d0ec <feof@plt+0x3a71c>
  43ccb4:	mov	x19, xzr
  43ccb8:	add	x20, x25, #0x1
  43ccbc:	cmp	x28, #0x2
  43ccc0:	str	xzr, [x23, #48]
  43ccc4:	b.lt	43cd94 <feof@plt+0x3a3c4>  // b.tstop
  43ccc8:	mov	x19, xzr
  43cccc:	add	x26, x25, x28
  43ccd0:	mov	x25, x20
  43ccd4:	b	43ccf0 <feof@plt+0x3a320>
  43ccd8:	mov	w8, #0x1                   	// #1
  43ccdc:	add	x25, x9, x8
  43cce0:	add	x19, x19, #0x1
  43cce4:	cmp	x25, x26
  43cce8:	str	x19, [x23, #48]
  43ccec:	b.cs	43cd94 <feof@plt+0x3a3c4>  // b.hs, b.nlast
  43ccf0:	ldrb	w8, [x25]
  43ccf4:	cbz	w8, 43cd94 <feof@plt+0x3a3c4>
  43ccf8:	sub	x1, x26, x25
  43ccfc:	mov	x0, x25
  43cd00:	bl	402930 <strnlen@plt>
  43cd04:	add	x9, x0, x25
  43cd08:	ldrsb	w8, [x9, #1]!
  43cd0c:	tbnz	w8, #31, 43cd18 <feof@plt+0x3a348>
  43cd10:	mov	w8, #0x1                   	// #1
  43cd14:	b	43cd30 <feof@plt+0x3a360>
  43cd18:	add	x8, x25, x0
  43cd1c:	mov	w10, #0x2                   	// #2
  43cd20:	ldrsb	w11, [x8, x10]
  43cd24:	add	x10, x10, #0x1
  43cd28:	tbnz	w11, #31, 43cd20 <feof@plt+0x3a350>
  43cd2c:	sub	x8, x10, #0x1
  43cd30:	add	x9, x9, x8
  43cd34:	ldrsb	w10, [x9]
  43cd38:	tbnz	w10, #31, 43cd44 <feof@plt+0x3a374>
  43cd3c:	mov	w11, #0x1                   	// #1
  43cd40:	b	43cd60 <feof@plt+0x3a390>
  43cd44:	add	x10, x0, x8
  43cd48:	add	x10, x25, x10
  43cd4c:	mov	w11, #0x2                   	// #2
  43cd50:	ldrsb	w12, [x10, x11]
  43cd54:	add	x11, x11, #0x1
  43cd58:	tbnz	w12, #31, 43cd50 <feof@plt+0x3a380>
  43cd5c:	sub	x11, x11, #0x1
  43cd60:	add	x9, x9, x11
  43cd64:	ldrsb	w10, [x9]
  43cd68:	tbz	w10, #31, 43ccd8 <feof@plt+0x3a308>
  43cd6c:	add	x8, x0, x8
  43cd70:	add	x8, x8, x11
  43cd74:	add	x8, x25, x8
  43cd78:	mov	x10, xzr
  43cd7c:	add	x8, x8, #0x2
  43cd80:	ldrsb	w11, [x8, x10]
  43cd84:	add	x10, x10, #0x1
  43cd88:	tbnz	w11, #31, 43cd80 <feof@plt+0x3a3b0>
  43cd8c:	add	x8, x10, #0x1
  43cd90:	b	43ccdc <feof@plt+0x3a30c>
  43cd94:	ldp	x2, x3, [sp, #136]
  43cd98:	lsl	x1, x19, #3
  43cd9c:	mov	x0, x24
  43cda0:	bl	435450 <feof@plt+0x32a80>
  43cda4:	str	x0, [x23, #56]
  43cda8:	cbz	x0, 43c7e0 <feof@plt+0x39e10>
  43cdac:	ldrb	w9, [x20]
  43cdb0:	cmp	w27, #0x0
  43cdb4:	cset	w8, eq  // eq = none
  43cdb8:	cbz	w9, 43d130 <feof@plt+0x3a760>
  43cdbc:	sub	x25, x28, #0x1
  43cdc0:	str	xzr, [sp, #16]
  43cdc4:	b	43cde4 <feof@plt+0x3a414>
  43cdc8:	ldr	w8, [sp, #24]
  43cdcc:	ldrb	w9, [x20]
  43cdd0:	cmp	w8, #0x0
  43cdd4:	add	x28, x28, #0x1
  43cdd8:	cset	w8, eq  // eq = none
  43cddc:	str	x28, [sp, #16]
  43cde0:	cbz	w9, 43d130 <feof@plt+0x3a760>
  43cde4:	tbz	w8, #0, 43c7e0 <feof@plt+0x39e10>
  43cde8:	mov	x0, x20
  43cdec:	mov	x1, x25
  43cdf0:	bl	402930 <strnlen@plt>
  43cdf4:	add	x9, x0, #0x1
  43cdf8:	subs	x25, x25, x9
  43cdfc:	b.cc	43d0f0 <feof@plt+0x3a720>  // b.lo, b.ul, b.last
  43ce00:	mov	x26, xzr
  43ce04:	mov	w27, wzr
  43ce08:	mov	w8, wzr
  43ce0c:	add	x19, x20, x9
  43ce10:	b	43ce2c <feof@plt+0x3a45c>
  43ce14:	and	x9, x28, #0x7f
  43ce18:	lsl	x9, x9, x27
  43ce1c:	orr	x26, x9, x26
  43ce20:	sxtb	w9, w28
  43ce24:	add	w27, w27, #0x7
  43ce28:	tbz	w9, #31, 43cec4 <feof@plt+0x3a4f4>
  43ce2c:	cbz	x25, 43ce80 <feof@plt+0x3a4b0>
  43ce30:	ldrb	w28, [x19], #1
  43ce34:	cmp	w27, #0x3f
  43ce38:	sub	x25, x25, #0x1
  43ce3c:	b.ls	43ce14 <feof@plt+0x3a444>  // b.plast
  43ce40:	cbnz	w8, 43ce20 <feof@plt+0x3a450>
  43ce44:	ldp	x8, x4, [sp, #56]
  43ce48:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ce4c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ce50:	add	x0, sp, #0xc0
  43ce54:	sub	w5, w19, w8
  43ce58:	mov	w1, #0xc8                  	// #200
  43ce5c:	add	x2, x2, #0xbd7
  43ce60:	add	x3, x3, #0xc90
  43ce64:	bl	402740 <snprintf@plt>
  43ce68:	ldp	x8, x0, [sp, #40]
  43ce6c:	add	x1, sp, #0xc0
  43ce70:	mov	w2, wzr
  43ce74:	blr	x8
  43ce78:	mov	w8, #0x1                   	// #1
  43ce7c:	b	43ce20 <feof@plt+0x3a450>
  43ce80:	ldp	x8, x4, [sp, #56]
  43ce84:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ce88:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ce8c:	add	x0, sp, #0xc0
  43ce90:	sub	w5, w19, w8
  43ce94:	mov	w1, #0xc8                  	// #200
  43ce98:	add	x2, x2, #0xbd7
  43ce9c:	add	x3, x3, #0xbc7
  43cea0:	bl	402740 <snprintf@plt>
  43cea4:	ldp	x27, x0, [sp, #40]
  43cea8:	add	x1, sp, #0xc0
  43ceac:	mov	w2, wzr
  43ceb0:	blr	x27
  43ceb4:	mov	w8, #0x1                   	// #1
  43ceb8:	mov	x26, xzr
  43cebc:	str	w8, [sp, #24]
  43cec0:	b	43cecc <feof@plt+0x3a4fc>
  43cec4:	ldr	x27, [sp, #40]
  43cec8:	str	wzr, [sp, #24]
  43cecc:	ldrb	w8, [x20]
  43ced0:	ldr	x28, [sp, #16]
  43ced4:	cmp	w8, #0x2f
  43ced8:	b.eq	43cf70 <feof@plt+0x3a5a0>  // b.none
  43cedc:	cbz	x26, 43cf00 <feof@plt+0x3a530>
  43cee0:	ldr	x9, [x23, #32]
  43cee4:	sub	x8, x26, #0x1
  43cee8:	cmp	x8, x9
  43ceec:	b.cs	43e190 <feof@plt+0x3b7c0>  // b.hs, b.nlast
  43cef0:	ldr	x9, [sp, #32]
  43cef4:	ldr	x9, [x9]
  43cef8:	ldr	x0, [x9, x8, lsl #3]
  43cefc:	b	43cf0c <feof@plt+0x3a53c>
  43cf00:	ldr	x8, [sp, #8]
  43cf04:	ldr	x0, [x8, #72]
  43cf08:	cbz	x0, 43cf70 <feof@plt+0x3a5a0>
  43cf0c:	mov	x24, x0
  43cf10:	bl	402420 <strlen@plt>
  43cf14:	mov	x28, x0
  43cf18:	mov	x0, x20
  43cf1c:	bl	402420 <strlen@plt>
  43cf20:	ldp	x2, x3, [sp, #136]
  43cf24:	mov	x27, x0
  43cf28:	add	x8, x28, x0
  43cf2c:	ldr	x0, [sp, #88]
  43cf30:	add	x1, x8, #0x2
  43cf34:	bl	435450 <feof@plt+0x32a80>
  43cf38:	cbz	x0, 43c7e0 <feof@plt+0x39e10>
  43cf3c:	mov	x1, x24
  43cf40:	mov	x2, x28
  43cf44:	mov	x26, x0
  43cf48:	bl	402390 <memcpy@plt>
  43cf4c:	add	x0, x26, x28
  43cf50:	mov	w8, #0x2f                  	// #47
  43cf54:	strb	w8, [x0], #1
  43cf58:	add	x2, x27, #0x1
  43cf5c:	mov	x1, x20
  43cf60:	bl	402390 <memcpy@plt>
  43cf64:	ldr	x27, [sp, #40]
  43cf68:	ldr	x28, [sp, #16]
  43cf6c:	mov	x20, x26
  43cf70:	ldr	x9, [x23, #56]
  43cf74:	mov	w26, wzr
  43cf78:	mov	w8, wzr
  43cf7c:	str	x20, [x9, x28, lsl #3]
  43cf80:	b	43cf8c <feof@plt+0x3a5bc>
  43cf84:	add	w26, w26, #0x7
  43cf88:	tbz	w20, #31, 43d030 <feof@plt+0x3a660>
  43cf8c:	cbz	x25, 43cfe0 <feof@plt+0x3a610>
  43cf90:	ldrsb	w20, [x19], #1
  43cf94:	cmp	w26, #0x40
  43cf98:	sub	x25, x25, #0x1
  43cf9c:	b.cc	43cf84 <feof@plt+0x3a5b4>  // b.lo, b.ul, b.last
  43cfa0:	cbnz	w8, 43cf84 <feof@plt+0x3a5b4>
  43cfa4:	ldp	x8, x4, [sp, #56]
  43cfa8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cfac:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cfb0:	add	x0, sp, #0xc0
  43cfb4:	sub	w5, w19, w8
  43cfb8:	mov	w1, #0xc8                  	// #200
  43cfbc:	add	x2, x2, #0xbd7
  43cfc0:	add	x3, x3, #0xc90
  43cfc4:	bl	402740 <snprintf@plt>
  43cfc8:	ldr	x0, [sp, #48]
  43cfcc:	add	x1, sp, #0xc0
  43cfd0:	mov	w2, wzr
  43cfd4:	blr	x27
  43cfd8:	mov	w8, #0x1                   	// #1
  43cfdc:	b	43cf84 <feof@plt+0x3a5b4>
  43cfe0:	ldr	w8, [sp, #24]
  43cfe4:	cbz	w8, 43cff0 <feof@plt+0x3a620>
  43cfe8:	mov	x25, xzr
  43cfec:	b	43d030 <feof@plt+0x3a660>
  43cff0:	ldp	x8, x4, [sp, #56]
  43cff4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cff8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43cffc:	add	x0, sp, #0xc0
  43d000:	sub	w5, w19, w8
  43d004:	mov	w1, #0xc8                  	// #200
  43d008:	add	x2, x2, #0xbd7
  43d00c:	add	x3, x3, #0xbc7
  43d010:	bl	402740 <snprintf@plt>
  43d014:	ldr	x0, [sp, #48]
  43d018:	add	x1, sp, #0xc0
  43d01c:	mov	w2, wzr
  43d020:	blr	x27
  43d024:	mov	w8, #0x1                   	// #1
  43d028:	mov	x25, xzr
  43d02c:	str	w8, [sp, #24]
  43d030:	mov	w26, wzr
  43d034:	mov	w8, wzr
  43d038:	mov	x20, x19
  43d03c:	b	43d048 <feof@plt+0x3a678>
  43d040:	add	w26, w26, #0x7
  43d044:	tbz	w19, #31, 43cdc8 <feof@plt+0x3a3f8>
  43d048:	cbz	x25, 43d09c <feof@plt+0x3a6cc>
  43d04c:	ldrsb	w19, [x20], #1
  43d050:	cmp	w26, #0x40
  43d054:	sub	x25, x25, #0x1
  43d058:	b.cc	43d040 <feof@plt+0x3a670>  // b.lo, b.ul, b.last
  43d05c:	cbnz	w8, 43d040 <feof@plt+0x3a670>
  43d060:	ldp	x8, x4, [sp, #56]
  43d064:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d068:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d06c:	add	x0, sp, #0xc0
  43d070:	sub	w5, w20, w8
  43d074:	mov	w1, #0xc8                  	// #200
  43d078:	add	x2, x2, #0xbd7
  43d07c:	add	x3, x3, #0xc90
  43d080:	bl	402740 <snprintf@plt>
  43d084:	ldr	x0, [sp, #48]
  43d088:	add	x1, sp, #0xc0
  43d08c:	mov	w2, wzr
  43d090:	blr	x27
  43d094:	mov	w8, #0x1                   	// #1
  43d098:	b	43d040 <feof@plt+0x3a670>
  43d09c:	ldr	w8, [sp, #24]
  43d0a0:	cbz	w8, 43d0ac <feof@plt+0x3a6dc>
  43d0a4:	mov	x25, xzr
  43d0a8:	b	43cdcc <feof@plt+0x3a3fc>
  43d0ac:	ldp	x8, x4, [sp, #56]
  43d0b0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d0b4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d0b8:	add	x0, sp, #0xc0
  43d0bc:	sub	w5, w20, w8
  43d0c0:	mov	w1, #0xc8                  	// #200
  43d0c4:	add	x2, x2, #0xbd7
  43d0c8:	add	x3, x3, #0xbc7
  43d0cc:	bl	402740 <snprintf@plt>
  43d0d0:	ldr	x0, [sp, #48]
  43d0d4:	add	x1, sp, #0xc0
  43d0d8:	mov	w2, wzr
  43d0dc:	blr	x27
  43d0e0:	mov	x25, xzr
  43d0e4:	mov	w8, #0x1                   	// #1
  43d0e8:	b	43cdcc <feof@plt+0x3a3fc>
  43d0ec:	cbnz	w27, 43c7e0 <feof@plt+0x39e10>
  43d0f0:	ldr	x8, [sp, #56]
  43d0f4:	sub	w5, w20, w8
  43d0f8:	ldr	x4, [sp, #64]
  43d0fc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d100:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d104:	add	x2, x2, #0xbd7
  43d108:	add	x3, x3, #0xbc7
  43d10c:	add	x0, sp, #0xc0
  43d110:	mov	w1, #0xc8                  	// #200
  43d114:	bl	402740 <snprintf@plt>
  43d118:	ldp	x8, x0, [sp, #40]
  43d11c:	b	43c7d4 <feof@plt+0x39e04>
  43d120:	ldrb	w9, [x19, #3]
  43d124:	add	x19, x19, #0x4
  43d128:	sub	x8, x8, #0x4
  43d12c:	b	43cad0 <feof@plt+0x3a100>
  43d130:	cbz	w8, 43c7e0 <feof@plt+0x39e10>
  43d134:	ldr	x8, [x23, #48]
  43d138:	cbz	x8, 43d18c <feof@plt+0x3a7bc>
  43d13c:	ldr	x8, [x23, #56]
  43d140:	ldr	x27, [x8]
  43d144:	b	43d194 <feof@plt+0x3a7c4>
  43d148:	ldp	x8, x4, [sp, #56]
  43d14c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d150:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d154:	add	x2, x2, #0xbd7
  43d158:	sub	w5, w19, w8
  43d15c:	add	x3, x3, #0xbc7
  43d160:	add	x0, sp, #0xc0
  43d164:	mov	w1, #0xc8                  	// #200
  43d168:	bl	402740 <snprintf@plt>
  43d16c:	ldp	x8, x0, [sp, #40]
  43d170:	add	x1, sp, #0xc0
  43d174:	mov	w2, wzr
  43d178:	blr	x8
  43d17c:	mov	x8, xzr
  43d180:	mov	w9, wzr
  43d184:	mov	w27, #0x1                   	// #1
  43d188:	b	43cad0 <feof@plt+0x3a100>
  43d18c:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0xaa68>
  43d190:	add	x27, x27, #0xb34
  43d194:	ldr	x26, [sp]
  43d198:	ldr	x24, [sp, #88]
  43d19c:	ldr	x20, [sp, #120]
  43d1a0:	mov	w8, #0x1                   	// #1
  43d1a4:	str	w8, [sp, #56]
  43d1a8:	cbz	x20, 43e108 <feof@plt+0x3b738>
  43d1ac:	ldr	x8, [sp, #8]
  43d1b0:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d1b4:	mov	x28, xzr
  43d1b8:	mov	w0, wzr
  43d1bc:	add	x8, x8, #0x48
  43d1c0:	add	x19, x19, #0xb34
  43d1c4:	mov	w25, #0x1                   	// #1
  43d1c8:	str	x8, [sp, #32]
  43d1cc:	str	x27, [sp, #48]
  43d1d0:	ldr	x10, [sp, #112]
  43d1d4:	sub	x9, x20, #0x1
  43d1d8:	str	w0, [sp, #64]
  43d1dc:	add	x8, x10, #0x1
  43d1e0:	stp	x8, x9, [sp, #112]
  43d1e4:	ldrb	w12, [x10]
  43d1e8:	ldr	w11, [x23, #20]
  43d1ec:	cmp	w11, w12
  43d1f0:	b.ls	43d2b0 <feof@plt+0x3a8e0>  // b.plast
  43d1f4:	cmp	w12, #0xc
  43d1f8:	b.hi	43d340 <feof@plt+0x3a970>  // b.pmore
  43d1fc:	adr	x13, 43d20c <feof@plt+0x3a83c>
  43d200:	ldrh	w14, [x19, x12, lsl #1]
  43d204:	add	x13, x13, x14, lsl #2
  43d208:	br	x13
  43d20c:	cbz	x9, 43d2a0 <feof@plt+0x3a8d0>
  43d210:	mov	w10, wzr
  43d214:	mov	w20, wzr
  43d218:	mov	x26, xzr
  43d21c:	add	x11, x8, #0x1
  43d220:	sub	x9, x9, #0x1
  43d224:	stp	x11, x9, [sp, #112]
  43d228:	ldrb	w19, [x8]
  43d22c:	cmp	w20, #0x3f
  43d230:	b.hi	43d244 <feof@plt+0x3a874>  // b.pmore
  43d234:	and	x8, x19, #0x7f
  43d238:	lsl	x8, x8, x20
  43d23c:	orr	x26, x8, x26
  43d240:	b	43d284 <feof@plt+0x3a8b4>
  43d244:	cbnz	w10, 43d284 <feof@plt+0x3a8b4>
  43d248:	ldr	w8, [sp, #104]
  43d24c:	ldr	x4, [sp, #96]
  43d250:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d254:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d258:	sub	w5, w11, w8
  43d25c:	add	x0, sp, #0xc0
  43d260:	mov	w1, #0xc8                  	// #200
  43d264:	add	x2, x2, #0xbd7
  43d268:	add	x3, x3, #0xc90
  43d26c:	bl	402740 <snprintf@plt>
  43d270:	ldp	x8, x0, [sp, #136]
  43d274:	add	x1, sp, #0xc0
  43d278:	mov	w2, wzr
  43d27c:	blr	x8
  43d280:	mov	w10, #0x1                   	// #1
  43d284:	sxtb	w8, w19
  43d288:	tbz	w8, #31, 43d880 <feof@plt+0x3aeb0>
  43d28c:	ldp	x8, x9, [sp, #112]
  43d290:	add	w20, w20, #0x7
  43d294:	cbnz	x9, 43d21c <feof@plt+0x3a84c>
  43d298:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d29c:	add	x19, x19, #0xb34
  43d2a0:	ldr	w9, [sp, #152]
  43d2a4:	cbz	w9, 43d8fc <feof@plt+0x3af2c>
  43d2a8:	mov	x26, xzr
  43d2ac:	b	43d940 <feof@plt+0x3af70>
  43d2b0:	sub	w8, w12, w11
  43d2b4:	ldp	w11, w10, [x23, #12]
  43d2b8:	ldr	w15, [sp, #64]
  43d2bc:	ldp	w12, w13, [x23, #4]
  43d2c0:	ldr	x9, [sp, #184]
  43d2c4:	udiv	w14, w8, w10
  43d2c8:	add	w15, w14, w15
  43d2cc:	ldp	x2, x3, [sp, #136]
  43d2d0:	msub	w8, w14, w10, w8
  43d2d4:	mul	w10, w12, w15
  43d2d8:	add	w11, w11, w25
  43d2dc:	udiv	w12, w15, w13
  43d2e0:	udiv	w10, w10, w13
  43d2e4:	msub	w12, w12, w13, w15
  43d2e8:	add	x28, x28, x10
  43d2ec:	add	w25, w11, w8
  43d2f0:	str	w12, [sp, #64]
  43d2f4:	cbz	x9, 43d42c <feof@plt+0x3aa5c>
  43d2f8:	ldr	x8, [sp, #160]
  43d2fc:	sub	x9, x9, #0x1
  43d300:	mov	w10, #0x18                  	// #24
  43d304:	mul	x10, x9, x10
  43d308:	ldr	x10, [x8, x10]
  43d30c:	cmp	x10, x28
  43d310:	b.ne	43d42c <feof@plt+0x3aa5c>  // b.any
  43d314:	mov	w10, #0x18                  	// #24
  43d318:	madd	x10, x9, x10, x8
  43d31c:	ldr	x10, [x10, #8]
  43d320:	cmp	x10, x27
  43d324:	b.ne	43d42c <feof@plt+0x3aa5c>  // b.any
  43d328:	mov	w10, #0x18                  	// #24
  43d32c:	madd	x8, x9, x10, x8
  43d330:	ldr	w8, [x8, #16]
  43d334:	cmp	w8, w25
  43d338:	b.ne	43d42c <feof@plt+0x3aa5c>  // b.any
  43d33c:	b	43d460 <feof@plt+0x3aa90>
  43d340:	ldr	x8, [x23, #24]
  43d344:	sub	w9, w12, #0x1
  43d348:	ldrb	w20, [x8, w9, uxtw]
  43d34c:	cbnz	w20, 43d364 <feof@plt+0x3a994>
  43d350:	b	43d460 <feof@plt+0x3aa90>
  43d354:	ldr	w8, [sp, #152]
  43d358:	cbz	w8, 43d3dc <feof@plt+0x3aa0c>
  43d35c:	subs	w20, w20, #0x1
  43d360:	b.eq	43df74 <feof@plt+0x3b5a4>  // b.none
  43d364:	mov	w26, wzr
  43d368:	mov	w8, wzr
  43d36c:	b	43d378 <feof@plt+0x3a9a8>
  43d370:	add	w26, w26, #0x7
  43d374:	tbz	w19, #31, 43d35c <feof@plt+0x3a98c>
  43d378:	ldp	x10, x11, [sp, #112]
  43d37c:	cbz	x11, 43d354 <feof@plt+0x3a984>
  43d380:	add	x9, x10, #0x1
  43d384:	sub	x11, x11, #0x1
  43d388:	stp	x9, x11, [sp, #112]
  43d38c:	ldrsb	w19, [x10]
  43d390:	cmp	w26, #0x40
  43d394:	b.cc	43d370 <feof@plt+0x3a9a0>  // b.lo, b.ul, b.last
  43d398:	cbnz	w8, 43d370 <feof@plt+0x3a9a0>
  43d39c:	ldr	w8, [sp, #104]
  43d3a0:	ldr	x4, [sp, #96]
  43d3a4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d3a8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d3ac:	sub	w5, w9, w8
  43d3b0:	add	x0, sp, #0xc0
  43d3b4:	mov	w1, #0xc8                  	// #200
  43d3b8:	add	x2, x2, #0xbd7
  43d3bc:	add	x3, x3, #0xc90
  43d3c0:	bl	402740 <snprintf@plt>
  43d3c4:	ldp	x8, x0, [sp, #136]
  43d3c8:	add	x1, sp, #0xc0
  43d3cc:	mov	w2, wzr
  43d3d0:	blr	x8
  43d3d4:	mov	w8, #0x1                   	// #1
  43d3d8:	b	43d370 <feof@plt+0x3a9a0>
  43d3dc:	ldr	w8, [sp, #104]
  43d3e0:	ldr	x4, [sp, #96]
  43d3e4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d3e8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d3ec:	sub	w5, w10, w8
  43d3f0:	add	x0, sp, #0xc0
  43d3f4:	mov	w1, #0xc8                  	// #200
  43d3f8:	add	x2, x2, #0xbd7
  43d3fc:	add	x3, x3, #0xbc7
  43d400:	bl	402740 <snprintf@plt>
  43d404:	ldp	x8, x0, [sp, #136]
  43d408:	add	x1, sp, #0xc0
  43d40c:	mov	w2, wzr
  43d410:	blr	x8
  43d414:	mov	w8, #0x1                   	// #1
  43d418:	str	w8, [sp, #152]
  43d41c:	b	43d35c <feof@plt+0x3a98c>
  43d420:	ldr	x9, [sp, #184]
  43d424:	ldp	x2, x3, [sp, #136]
  43d428:	cbnz	x9, 43d2f8 <feof@plt+0x3a928>
  43d42c:	add	x4, sp, #0xa0
  43d430:	mov	w1, #0x18                  	// #24
  43d434:	mov	x0, x24
  43d438:	bl	435724 <feof@plt+0x32d54>
  43d43c:	cbz	x0, 43d460 <feof@plt+0x3aa90>
  43d440:	ldr	x8, [x26, #16]
  43d444:	str	w25, [x0, #16]
  43d448:	add	x8, x8, x28
  43d44c:	stp	x8, x27, [x0]
  43d450:	ldr	x8, [sp, #184]
  43d454:	str	w8, [x0, #20]
  43d458:	add	x8, x8, #0x1
  43d45c:	str	x8, [sp, #184]
  43d460:	ldr	x20, [sp, #120]
  43d464:	ldr	w0, [sp, #64]
  43d468:	mov	w10, w25
  43d46c:	mov	x2, x27
  43d470:	mov	x1, x28
  43d474:	mov	x28, x1
  43d478:	mov	x27, x2
  43d47c:	mov	w25, w10
  43d480:	cbnz	x20, 43d1d0 <feof@plt+0x3a800>
  43d484:	b	43e100 <feof@plt+0x3b730>
  43d488:	cbz	x9, 43d520 <feof@plt+0x3ab50>
  43d48c:	mov	w10, wzr
  43d490:	mov	w26, wzr
  43d494:	mov	x20, xzr
  43d498:	add	x11, x8, #0x1
  43d49c:	sub	x9, x9, #0x1
  43d4a0:	stp	x11, x9, [sp, #112]
  43d4a4:	ldrb	w19, [x8]
  43d4a8:	cmp	w26, #0x3f
  43d4ac:	b.hi	43d4c0 <feof@plt+0x3aaf0>  // b.pmore
  43d4b0:	and	x8, x19, #0x7f
  43d4b4:	lsl	x8, x8, x26
  43d4b8:	orr	x20, x8, x20
  43d4bc:	b	43d500 <feof@plt+0x3ab30>
  43d4c0:	cbnz	w10, 43d500 <feof@plt+0x3ab30>
  43d4c4:	ldr	w8, [sp, #104]
  43d4c8:	ldr	x4, [sp, #96]
  43d4cc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d4d0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d4d4:	sub	w5, w11, w8
  43d4d8:	add	x0, sp, #0xc0
  43d4dc:	mov	w1, #0xc8                  	// #200
  43d4e0:	add	x2, x2, #0xbd7
  43d4e4:	add	x3, x3, #0xc90
  43d4e8:	bl	402740 <snprintf@plt>
  43d4ec:	ldp	x8, x0, [sp, #136]
  43d4f0:	add	x1, sp, #0xc0
  43d4f4:	mov	w2, wzr
  43d4f8:	blr	x8
  43d4fc:	mov	w10, #0x1                   	// #1
  43d500:	sxtb	w8, w19
  43d504:	tbz	w8, #31, 43d88c <feof@plt+0x3aebc>
  43d508:	ldp	x8, x9, [sp, #112]
  43d50c:	add	w26, w26, #0x7
  43d510:	cbnz	x9, 43d498 <feof@plt+0x3aac8>
  43d514:	ldr	x26, [sp]
  43d518:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d51c:	add	x19, x19, #0xb34
  43d520:	ldr	w9, [sp, #152]
  43d524:	cbz	w9, 43d9e8 <feof@plt+0x3b018>
  43d528:	mov	x20, xzr
  43d52c:	b	43da2c <feof@plt+0x3b05c>
  43d530:	cbz	x9, 43d5cc <feof@plt+0x3abfc>
  43d534:	mov	w10, wzr
  43d538:	mov	x20, xzr
  43d53c:	mov	w26, #0x7                   	// #7
  43d540:	add	x11, x8, #0x1
  43d544:	sub	x9, x9, #0x1
  43d548:	stp	x11, x9, [sp, #112]
  43d54c:	ldrb	w19, [x8]
  43d550:	sub	w8, w26, #0x7
  43d554:	cmp	w8, #0x3f
  43d558:	b.hi	43d56c <feof@plt+0x3ab9c>  // b.pmore
  43d55c:	and	x9, x19, #0x7f
  43d560:	lsl	x8, x9, x8
  43d564:	orr	x20, x8, x20
  43d568:	b	43d5ac <feof@plt+0x3abdc>
  43d56c:	cbnz	w10, 43d5ac <feof@plt+0x3abdc>
  43d570:	ldr	w8, [sp, #104]
  43d574:	ldr	x4, [sp, #96]
  43d578:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d57c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d580:	sub	w5, w11, w8
  43d584:	add	x0, sp, #0xc0
  43d588:	mov	w1, #0xc8                  	// #200
  43d58c:	add	x2, x2, #0xbd7
  43d590:	add	x3, x3, #0xc89
  43d594:	bl	402740 <snprintf@plt>
  43d598:	ldp	x8, x0, [sp, #136]
  43d59c:	add	x1, sp, #0xc0
  43d5a0:	mov	w2, wzr
  43d5a4:	blr	x8
  43d5a8:	mov	w10, #0x1                   	// #1
  43d5ac:	sxtb	w8, w19
  43d5b0:	tbz	w8, #31, 43d89c <feof@plt+0x3aecc>
  43d5b4:	ldp	x8, x9, [sp, #112]
  43d5b8:	add	w26, w26, #0x7
  43d5bc:	cbnz	x9, 43d540 <feof@plt+0x3ab70>
  43d5c0:	ldr	x26, [sp]
  43d5c4:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d5c8:	add	x19, x19, #0xb34
  43d5cc:	ldr	w9, [sp, #152]
  43d5d0:	cbz	w9, 43da54 <feof@plt+0x3b084>
  43d5d4:	mov	x8, xzr
  43d5d8:	add	w25, w25, w8
  43d5dc:	b	43d460 <feof@plt+0x3aa90>
  43d5e0:	cbz	x9, 43d678 <feof@plt+0x3aca8>
  43d5e4:	mov	w10, wzr
  43d5e8:	mov	w26, wzr
  43d5ec:	mov	x20, xzr
  43d5f0:	add	x11, x8, #0x1
  43d5f4:	sub	x9, x9, #0x1
  43d5f8:	stp	x11, x9, [sp, #112]
  43d5fc:	ldrb	w19, [x8]
  43d600:	cmp	w26, #0x3f
  43d604:	b.hi	43d618 <feof@plt+0x3ac48>  // b.pmore
  43d608:	and	x8, x19, #0x7f
  43d60c:	lsl	x8, x8, x26
  43d610:	orr	x20, x8, x20
  43d614:	b	43d658 <feof@plt+0x3ac88>
  43d618:	cbnz	w10, 43d658 <feof@plt+0x3ac88>
  43d61c:	ldr	w8, [sp, #104]
  43d620:	ldr	x4, [sp, #96]
  43d624:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d628:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d62c:	sub	w5, w11, w8
  43d630:	add	x0, sp, #0xc0
  43d634:	mov	w1, #0xc8                  	// #200
  43d638:	add	x2, x2, #0xbd7
  43d63c:	add	x3, x3, #0xc90
  43d640:	bl	402740 <snprintf@plt>
  43d644:	ldp	x8, x0, [sp, #136]
  43d648:	add	x1, sp, #0xc0
  43d64c:	mov	w2, wzr
  43d650:	blr	x8
  43d654:	mov	w10, #0x1                   	// #1
  43d658:	sxtb	w8, w19
  43d65c:	tbz	w8, #31, 43d8d0 <feof@plt+0x3af00>
  43d660:	ldp	x8, x9, [sp, #112]
  43d664:	add	w26, w26, #0x7
  43d668:	cbnz	x9, 43d5f0 <feof@plt+0x3ac20>
  43d66c:	ldr	x26, [sp]
  43d670:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d674:	add	x19, x19, #0xb34
  43d678:	ldr	w9, [sp, #152]
  43d67c:	cbnz	w9, 43dca8 <feof@plt+0x3b2d8>
  43d680:	ldr	w9, [sp, #104]
  43d684:	ldr	x4, [sp, #96]
  43d688:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d68c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d690:	sub	w5, w8, w9
  43d694:	add	x0, sp, #0xc0
  43d698:	mov	w1, #0xc8                  	// #200
  43d69c:	add	x2, x2, #0xbd7
  43d6a0:	add	x3, x3, #0xbc7
  43d6a4:	bl	402740 <snprintf@plt>
  43d6a8:	ldp	x8, x0, [sp, #136]
  43d6ac:	add	x1, sp, #0xc0
  43d6b0:	mov	w2, wzr
  43d6b4:	blr	x8
  43d6b8:	mov	w8, #0x1                   	// #1
  43d6bc:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0xaa68>
  43d6c0:	str	w8, [sp, #152]
  43d6c4:	add	x27, x27, #0xb34
  43d6c8:	b	43d460 <feof@plt+0x3aa90>
  43d6cc:	cbz	x9, 43d810 <feof@plt+0x3ae40>
  43d6d0:	mov	w10, wzr
  43d6d4:	mov	w20, wzr
  43d6d8:	add	x11, x8, #0x1
  43d6dc:	sub	x9, x9, #0x1
  43d6e0:	stp	x11, x9, [sp, #112]
  43d6e4:	ldrsb	w19, [x8]
  43d6e8:	cmp	w20, #0x40
  43d6ec:	b.cc	43d730 <feof@plt+0x3ad60>  // b.lo, b.ul, b.last
  43d6f0:	cbnz	w10, 43d730 <feof@plt+0x3ad60>
  43d6f4:	ldr	w8, [sp, #104]
  43d6f8:	ldr	x4, [sp, #96]
  43d6fc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d700:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d704:	sub	w5, w11, w8
  43d708:	add	x0, sp, #0xc0
  43d70c:	mov	w1, #0xc8                  	// #200
  43d710:	add	x2, x2, #0xbd7
  43d714:	add	x3, x3, #0xc90
  43d718:	bl	402740 <snprintf@plt>
  43d71c:	ldp	x8, x0, [sp, #136]
  43d720:	add	x1, sp, #0xc0
  43d724:	mov	w2, wzr
  43d728:	blr	x8
  43d72c:	mov	w10, #0x1                   	// #1
  43d730:	tbz	w19, #31, 43df78 <feof@plt+0x3b5a8>
  43d734:	ldp	x8, x9, [sp, #112]
  43d738:	add	w20, w20, #0x7
  43d73c:	cbnz	x9, 43d6d8 <feof@plt+0x3ad08>
  43d740:	b	43d808 <feof@plt+0x3ae38>
  43d744:	ldr	w8, [x23, #16]
  43d748:	mov	w9, #0xff                  	// #255
  43d74c:	sub	w9, w9, w11
  43d750:	ldp	w10, w11, [x23, #4]
  43d754:	udiv	w8, w9, w8
  43d758:	ldr	w9, [sp, #64]
  43d75c:	add	w8, w8, w9
  43d760:	mul	w9, w10, w8
  43d764:	udiv	w10, w8, w11
  43d768:	udiv	w9, w9, w11
  43d76c:	msub	w8, w10, w11, w8
  43d770:	add	x28, x28, x9
  43d774:	str	w8, [sp, #64]
  43d778:	b	43d460 <feof@plt+0x3aa90>
  43d77c:	cmp	x9, #0x1
  43d780:	b.hi	43d85c <feof@plt+0x3ae8c>  // b.pmore
  43d784:	ldr	w9, [sp, #152]
  43d788:	cbz	w9, 43daa0 <feof@plt+0x3b0d0>
  43d78c:	mov	x8, xzr
  43d790:	b	43daec <feof@plt+0x3b11c>
  43d794:	cbz	x9, 43d810 <feof@plt+0x3ae40>
  43d798:	mov	w10, wzr
  43d79c:	mov	w20, wzr
  43d7a0:	add	x11, x8, #0x1
  43d7a4:	sub	x9, x9, #0x1
  43d7a8:	stp	x11, x9, [sp, #112]
  43d7ac:	ldrsb	w19, [x8]
  43d7b0:	cmp	w20, #0x40
  43d7b4:	b.cc	43d7f8 <feof@plt+0x3ae28>  // b.lo, b.ul, b.last
  43d7b8:	cbnz	w10, 43d7f8 <feof@plt+0x3ae28>
  43d7bc:	ldr	w8, [sp, #104]
  43d7c0:	ldr	x4, [sp, #96]
  43d7c4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d7c8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d7cc:	sub	w5, w11, w8
  43d7d0:	add	x0, sp, #0xc0
  43d7d4:	mov	w1, #0xc8                  	// #200
  43d7d8:	add	x2, x2, #0xbd7
  43d7dc:	add	x3, x3, #0xc90
  43d7e0:	bl	402740 <snprintf@plt>
  43d7e4:	ldp	x8, x0, [sp, #136]
  43d7e8:	add	x1, sp, #0xc0
  43d7ec:	mov	w2, wzr
  43d7f0:	blr	x8
  43d7f4:	mov	w10, #0x1                   	// #1
  43d7f8:	tbz	w19, #31, 43df78 <feof@plt+0x3b5a8>
  43d7fc:	ldp	x8, x9, [sp, #112]
  43d800:	add	w20, w20, #0x7
  43d804:	cbnz	x9, 43d7a0 <feof@plt+0x3add0>
  43d808:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d80c:	add	x19, x19, #0xb34
  43d810:	ldr	w9, [sp, #152]
  43d814:	cbnz	w9, 43d460 <feof@plt+0x3aa90>
  43d818:	ldr	w9, [sp, #104]
  43d81c:	ldr	x4, [sp, #96]
  43d820:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d824:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d828:	sub	w5, w8, w9
  43d82c:	add	x0, sp, #0xc0
  43d830:	mov	w1, #0xc8                  	// #200
  43d834:	add	x2, x2, #0xbd7
  43d838:	add	x3, x3, #0xbc7
  43d83c:	bl	402740 <snprintf@plt>
  43d840:	ldp	x8, x0, [sp, #136]
  43d844:	add	x1, sp, #0xc0
  43d848:	mov	w2, wzr
  43d84c:	blr	x8
  43d850:	mov	w8, #0x1                   	// #1
  43d854:	str	w8, [sp, #152]
  43d858:	b	43d460 <feof@plt+0x3aa90>
  43d85c:	ldr	w8, [sp, #128]
  43d860:	add	x9, x10, #0x3
  43d864:	sub	x11, x20, #0x3
  43d868:	stp	x9, x11, [sp, #112]
  43d86c:	cbz	w8, 43dae8 <feof@plt+0x3b118>
  43d870:	ldurh	w8, [x10, #1]
  43d874:	lsl	x8, x8, #48
  43d878:	rev	x8, x8
  43d87c:	b	43daec <feof@plt+0x3b11c>
  43d880:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d884:	add	x19, x19, #0xb34
  43d888:	b	43d940 <feof@plt+0x3af70>
  43d88c:	ldr	x26, [sp]
  43d890:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d894:	add	x19, x19, #0xb34
  43d898:	b	43da2c <feof@plt+0x3b05c>
  43d89c:	cmp	w26, #0x40
  43d8a0:	and	w8, w19, #0x40
  43d8a4:	cset	w9, cc  // cc = lo, ul, last
  43d8a8:	mov	x10, #0xffffffffffffffff    	// #-1
  43d8ac:	lsl	x10, x10, x26
  43d8b0:	tst	w9, w8, lsr #6
  43d8b4:	ldr	x26, [sp]
  43d8b8:	csel	x8, x10, xzr, ne  // ne = any
  43d8bc:	orr	x8, x20, x8
  43d8c0:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d8c4:	add	x19, x19, #0xb34
  43d8c8:	add	w25, w25, w8
  43d8cc:	b	43d460 <feof@plt+0x3aa90>
  43d8d0:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d8d4:	add	x19, x19, #0xb34
  43d8d8:	cbz	x20, 43dca4 <feof@plt+0x3b2d4>
  43d8dc:	ldr	x9, [x23, #48]
  43d8e0:	ldr	x26, [sp]
  43d8e4:	sub	x8, x20, #0x1
  43d8e8:	cmp	x8, x9
  43d8ec:	b.cs	43e1c4 <feof@plt+0x3b7f4>  // b.hs, b.nlast
  43d8f0:	ldr	x9, [x23, #56]
  43d8f4:	ldr	x27, [x9, x8, lsl #3]
  43d8f8:	b	43d460 <feof@plt+0x3aa90>
  43d8fc:	ldr	w9, [sp, #104]
  43d900:	ldr	x4, [sp, #96]
  43d904:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d908:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d90c:	sub	w5, w8, w9
  43d910:	add	x0, sp, #0xc0
  43d914:	mov	w1, #0xc8                  	// #200
  43d918:	add	x2, x2, #0xbd7
  43d91c:	add	x3, x3, #0xbc7
  43d920:	bl	402740 <snprintf@plt>
  43d924:	ldp	x8, x0, [sp, #136]
  43d928:	add	x1, sp, #0xc0
  43d92c:	mov	w2, wzr
  43d930:	blr	x8
  43d934:	mov	x26, xzr
  43d938:	mov	w8, #0x1                   	// #1
  43d93c:	str	w8, [sp, #152]
  43d940:	ldp	x8, x9, [sp, #112]
  43d944:	cbz	x9, 43d9d8 <feof@plt+0x3b008>
  43d948:	add	x10, x8, #0x1
  43d94c:	sub	x20, x9, #0x1
  43d950:	stp	x10, x20, [sp, #112]
  43d954:	str	x10, [sp, #40]
  43d958:	ldrb	w10, [x8]
  43d95c:	sub	w10, w10, #0x1
  43d960:	cmp	w10, #0x3
  43d964:	b.hi	43db3c <feof@plt+0x3b16c>  // b.pmore
  43d968:	adrp	x13, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d96c:	add	x13, x13, #0xb4e
  43d970:	adr	x11, 43d474 <feof@plt+0x3aaa4>
  43d974:	ldrh	w12, [x13, x10, lsl #1]
  43d978:	add	x11, x11, x12, lsl #2
  43d97c:	ldr	x2, [sp, #48]
  43d980:	ldr	x26, [sp]
  43d984:	mov	w0, wzr
  43d988:	mov	x1, xzr
  43d98c:	mov	w10, #0x1                   	// #1
  43d990:	br	x11
  43d994:	ldr	x10, [sp, #8]
  43d998:	ldr	w10, [x10, #48]
  43d99c:	sub	w10, w10, #0x1
  43d9a0:	cmp	w10, #0x7
  43d9a4:	b.hi	43dfd8 <feof@plt+0x3b608>  // b.pmore
  43d9a8:	adrp	x13, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d9ac:	add	x13, x13, #0xb56
  43d9b0:	adr	x11, 43d9c0 <feof@plt+0x3aff0>
  43d9b4:	ldrh	w12, [x13, x10, lsl #1]
  43d9b8:	add	x11, x11, x12, lsl #2
  43d9bc:	br	x11
  43d9c0:	cbz	x20, 43e08c <feof@plt+0x3b6bc>
  43d9c4:	add	x10, x8, #0x2
  43d9c8:	sub	x9, x9, #0x2
  43d9cc:	stp	x10, x9, [sp, #112]
  43d9d0:	ldrb	w28, [x8, #1]
  43d9d4:	b	43e0f4 <feof@plt+0x3b724>
  43d9d8:	ldr	w9, [sp, #152]
  43d9dc:	cbz	w9, 43daf8 <feof@plt+0x3b128>
  43d9e0:	mov	x20, xzr
  43d9e4:	b	43db3c <feof@plt+0x3b16c>
  43d9e8:	ldr	w9, [sp, #104]
  43d9ec:	ldr	x4, [sp, #96]
  43d9f0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d9f4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43d9f8:	sub	w5, w8, w9
  43d9fc:	add	x0, sp, #0xc0
  43da00:	mov	w1, #0xc8                  	// #200
  43da04:	add	x2, x2, #0xbd7
  43da08:	add	x3, x3, #0xbc7
  43da0c:	bl	402740 <snprintf@plt>
  43da10:	ldp	x8, x0, [sp, #136]
  43da14:	add	x1, sp, #0xc0
  43da18:	mov	w2, wzr
  43da1c:	blr	x8
  43da20:	mov	x20, xzr
  43da24:	mov	w8, #0x1                   	// #1
  43da28:	str	w8, [sp, #152]
  43da2c:	ldr	w10, [sp, #64]
  43da30:	ldp	w8, w9, [x23, #4]
  43da34:	add	x10, x20, w10, uxtw
  43da38:	mul	x8, x10, x8
  43da3c:	udiv	x11, x10, x9
  43da40:	udiv	x8, x8, x9
  43da44:	add	x28, x8, x28
  43da48:	msub	w8, w11, w9, w10
  43da4c:	str	w8, [sp, #64]
  43da50:	b	43d460 <feof@plt+0x3aa90>
  43da54:	ldr	w9, [sp, #104]
  43da58:	ldr	x4, [sp, #96]
  43da5c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43da60:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43da64:	sub	w5, w8, w9
  43da68:	add	x0, sp, #0xc0
  43da6c:	mov	w1, #0xc8                  	// #200
  43da70:	add	x2, x2, #0xbd7
  43da74:	add	x3, x3, #0xbc7
  43da78:	bl	402740 <snprintf@plt>
  43da7c:	ldp	x8, x0, [sp, #136]
  43da80:	add	x1, sp, #0xc0
  43da84:	mov	w2, wzr
  43da88:	blr	x8
  43da8c:	mov	x8, xzr
  43da90:	mov	w9, #0x1                   	// #1
  43da94:	str	w9, [sp, #152]
  43da98:	add	w25, w25, w8
  43da9c:	b	43d460 <feof@plt+0x3aa90>
  43daa0:	ldr	w9, [sp, #104]
  43daa4:	ldr	x4, [sp, #96]
  43daa8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43daac:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dab0:	sub	w5, w8, w9
  43dab4:	add	x0, sp, #0xc0
  43dab8:	mov	w1, #0xc8                  	// #200
  43dabc:	add	x2, x2, #0xbd7
  43dac0:	add	x3, x3, #0xbc7
  43dac4:	bl	402740 <snprintf@plt>
  43dac8:	ldp	x8, x0, [sp, #136]
  43dacc:	add	x1, sp, #0xc0
  43dad0:	mov	w2, wzr
  43dad4:	blr	x8
  43dad8:	mov	w9, #0x1                   	// #1
  43dadc:	mov	x8, xzr
  43dae0:	str	w9, [sp, #152]
  43dae4:	b	43daec <feof@plt+0x3b11c>
  43dae8:	ldurh	w8, [x10, #1]
  43daec:	str	wzr, [sp, #64]
  43daf0:	add	x28, x8, x28
  43daf4:	b	43d460 <feof@plt+0x3aa90>
  43daf8:	ldr	w9, [sp, #104]
  43dafc:	ldr	x4, [sp, #96]
  43db00:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43db04:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43db08:	sub	w5, w8, w9
  43db0c:	add	x0, sp, #0xc0
  43db10:	mov	w1, #0xc8                  	// #200
  43db14:	add	x2, x2, #0xbd7
  43db18:	add	x3, x3, #0xbc7
  43db1c:	bl	402740 <snprintf@plt>
  43db20:	ldp	x8, x0, [sp, #136]
  43db24:	add	x1, sp, #0xc0
  43db28:	mov	w2, wzr
  43db2c:	blr	x8
  43db30:	ldr	x20, [sp, #120]
  43db34:	mov	w8, #0x1                   	// #1
  43db38:	str	w8, [sp, #152]
  43db3c:	sub	x8, x26, #0x1
  43db40:	subs	x20, x20, x8
  43db44:	b.cc	43e1b4 <feof@plt+0x3b7e4>  // b.lo, b.ul, b.last
  43db48:	ldr	x9, [sp, #112]
  43db4c:	ldr	w0, [sp, #64]
  43db50:	ldr	x26, [sp]
  43db54:	mov	w10, w25
  43db58:	add	x8, x9, x8
  43db5c:	stp	x8, x20, [sp, #112]
  43db60:	b	43d46c <feof@plt+0x3aa9c>
  43db64:	ldr	x19, [sp, #40]
  43db68:	mov	x1, x20
  43db6c:	mov	x0, x19
  43db70:	bl	402930 <strnlen@plt>
  43db74:	add	x8, x0, #0x1
  43db78:	cmp	x20, x8
  43db7c:	b.cc	43e21c <feof@plt+0x3b84c>  // b.lo, b.ul, b.last
  43db80:	add	x10, x19, x8
  43db84:	subs	x9, x20, x8
  43db88:	stp	x10, x9, [sp, #112]
  43db8c:	b.eq	43dd04 <feof@plt+0x3b334>  // b.none
  43db90:	mov	w8, wzr
  43db94:	mov	w26, wzr
  43db98:	mov	x20, xzr
  43db9c:	add	x11, x10, #0x1
  43dba0:	sub	x9, x9, #0x1
  43dba4:	stp	x11, x9, [sp, #112]
  43dba8:	ldrb	w19, [x10]
  43dbac:	cmp	w26, #0x3f
  43dbb0:	b.hi	43dbc4 <feof@plt+0x3b1f4>  // b.pmore
  43dbb4:	and	x9, x19, #0x7f
  43dbb8:	lsl	x9, x9, x26
  43dbbc:	orr	x20, x9, x20
  43dbc0:	b	43dc04 <feof@plt+0x3b234>
  43dbc4:	cbnz	w8, 43dc04 <feof@plt+0x3b234>
  43dbc8:	ldr	w8, [sp, #104]
  43dbcc:	ldr	x4, [sp, #96]
  43dbd0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dbd4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dbd8:	sub	w5, w11, w8
  43dbdc:	add	x0, sp, #0xc0
  43dbe0:	mov	w1, #0xc8                  	// #200
  43dbe4:	add	x2, x2, #0xbd7
  43dbe8:	add	x3, x3, #0xc90
  43dbec:	bl	402740 <snprintf@plt>
  43dbf0:	ldp	x8, x0, [sp, #136]
  43dbf4:	add	x1, sp, #0xc0
  43dbf8:	mov	w2, wzr
  43dbfc:	blr	x8
  43dc00:	mov	w8, #0x1                   	// #1
  43dc04:	sxtb	w9, w19
  43dc08:	tbz	w9, #31, 43dd5c <feof@plt+0x3b38c>
  43dc0c:	ldr	x9, [sp, #120]
  43dc10:	cbz	x9, 43dd04 <feof@plt+0x3b334>
  43dc14:	ldr	x10, [sp, #112]
  43dc18:	add	w26, w26, #0x7
  43dc1c:	b	43db9c <feof@plt+0x3b1cc>
  43dc20:	cbz	x20, 43dcb4 <feof@plt+0x3b2e4>
  43dc24:	ldr	x10, [sp, #40]
  43dc28:	mov	w8, wzr
  43dc2c:	mov	w26, wzr
  43dc30:	add	x9, x10, #0x1
  43dc34:	mov	x11, x10
  43dc38:	sub	x10, x20, #0x1
  43dc3c:	stp	x9, x10, [sp, #112]
  43dc40:	ldrsb	w19, [x11]
  43dc44:	cbnz	w8, 43dc8c <feof@plt+0x3b2bc>
  43dc48:	cmp	w26, #0x40
  43dc4c:	b.cc	43dc8c <feof@plt+0x3b2bc>  // b.lo, b.ul, b.last
  43dc50:	ldr	w8, [sp, #104]
  43dc54:	ldr	x4, [sp, #96]
  43dc58:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dc5c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dc60:	sub	w5, w9, w8
  43dc64:	add	x0, sp, #0xc0
  43dc68:	mov	w1, #0xc8                  	// #200
  43dc6c:	add	x2, x2, #0xbd7
  43dc70:	add	x3, x3, #0xc90
  43dc74:	bl	402740 <snprintf@plt>
  43dc78:	ldp	x8, x0, [sp, #136]
  43dc7c:	add	x1, sp, #0xc0
  43dc80:	mov	w2, wzr
  43dc84:	blr	x8
  43dc88:	mov	w8, #0x1                   	// #1
  43dc8c:	tbz	w19, #31, 43df74 <feof@plt+0x3b5a4>
  43dc90:	ldr	x20, [sp, #120]
  43dc94:	cbz	x20, 43dcb4 <feof@plt+0x3b2e4>
  43dc98:	ldr	x10, [sp, #112]
  43dc9c:	add	w26, w26, #0x7
  43dca0:	b	43dc30 <feof@plt+0x3b260>
  43dca4:	ldr	x26, [sp]
  43dca8:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0xaa68>
  43dcac:	add	x27, x27, #0xb34
  43dcb0:	b	43d460 <feof@plt+0x3aa90>
  43dcb4:	ldr	w8, [sp, #152]
  43dcb8:	cbnz	w8, 43df74 <feof@plt+0x3b5a4>
  43dcbc:	ldr	w8, [sp, #112]
  43dcc0:	ldr	w9, [sp, #104]
  43dcc4:	ldr	x4, [sp, #96]
  43dcc8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dccc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dcd0:	sub	w5, w8, w9
  43dcd4:	add	x0, sp, #0xc0
  43dcd8:	mov	w1, #0xc8                  	// #200
  43dcdc:	add	x2, x2, #0xbd7
  43dce0:	add	x3, x3, #0xbc7
  43dce4:	bl	402740 <snprintf@plt>
  43dce8:	ldp	x8, x0, [sp, #136]
  43dcec:	add	x1, sp, #0xc0
  43dcf0:	mov	w2, wzr
  43dcf4:	blr	x8
  43dcf8:	mov	w8, #0x1                   	// #1
  43dcfc:	str	w8, [sp, #152]
  43dd00:	b	43df74 <feof@plt+0x3b5a4>
  43dd04:	ldr	w8, [sp, #152]
  43dd08:	cbz	w8, 43dd14 <feof@plt+0x3b344>
  43dd0c:	mov	x20, xzr
  43dd10:	b	43dd5c <feof@plt+0x3b38c>
  43dd14:	ldr	w8, [sp, #112]
  43dd18:	ldr	w9, [sp, #104]
  43dd1c:	ldr	x4, [sp, #96]
  43dd20:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dd24:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dd28:	sub	w5, w8, w9
  43dd2c:	add	x0, sp, #0xc0
  43dd30:	mov	w1, #0xc8                  	// #200
  43dd34:	add	x2, x2, #0xbd7
  43dd38:	add	x3, x3, #0xbc7
  43dd3c:	bl	402740 <snprintf@plt>
  43dd40:	ldp	x8, x0, [sp, #136]
  43dd44:	add	x1, sp, #0xc0
  43dd48:	mov	w2, wzr
  43dd4c:	blr	x8
  43dd50:	mov	w8, #0x1                   	// #1
  43dd54:	mov	x20, xzr
  43dd58:	str	w8, [sp, #152]
  43dd5c:	mov	w26, wzr
  43dd60:	mov	w8, wzr
  43dd64:	b	43dd70 <feof@plt+0x3b3a0>
  43dd68:	add	w26, w26, #0x7
  43dd6c:	tbz	w19, #31, 43de1c <feof@plt+0x3b44c>
  43dd70:	ldp	x10, x11, [sp, #112]
  43dd74:	cbz	x11, 43ddd4 <feof@plt+0x3b404>
  43dd78:	add	x9, x10, #0x1
  43dd7c:	sub	x11, x11, #0x1
  43dd80:	stp	x9, x11, [sp, #112]
  43dd84:	ldrsb	w19, [x10]
  43dd88:	cmp	w26, #0x40
  43dd8c:	b.cc	43dd68 <feof@plt+0x3b398>  // b.lo, b.ul, b.last
  43dd90:	cbnz	w8, 43dd68 <feof@plt+0x3b398>
  43dd94:	ldr	w8, [sp, #104]
  43dd98:	ldr	x4, [sp, #96]
  43dd9c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dda0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dda4:	sub	w5, w9, w8
  43dda8:	add	x0, sp, #0xc0
  43ddac:	mov	w1, #0xc8                  	// #200
  43ddb0:	add	x2, x2, #0xbd7
  43ddb4:	add	x3, x3, #0xc90
  43ddb8:	bl	402740 <snprintf@plt>
  43ddbc:	ldp	x8, x0, [sp, #136]
  43ddc0:	add	x1, sp, #0xc0
  43ddc4:	mov	w2, wzr
  43ddc8:	blr	x8
  43ddcc:	mov	w8, #0x1                   	// #1
  43ddd0:	b	43dd68 <feof@plt+0x3b398>
  43ddd4:	ldr	w8, [sp, #152]
  43ddd8:	cbnz	w8, 43de1c <feof@plt+0x3b44c>
  43dddc:	ldr	w8, [sp, #104]
  43dde0:	ldr	x4, [sp, #96]
  43dde4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dde8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ddec:	sub	w5, w10, w8
  43ddf0:	add	x0, sp, #0xc0
  43ddf4:	mov	w1, #0xc8                  	// #200
  43ddf8:	add	x2, x2, #0xbd7
  43ddfc:	add	x3, x3, #0xbc7
  43de00:	bl	402740 <snprintf@plt>
  43de04:	ldp	x8, x0, [sp, #136]
  43de08:	add	x1, sp, #0xc0
  43de0c:	mov	w2, wzr
  43de10:	blr	x8
  43de14:	mov	w8, #0x1                   	// #1
  43de18:	str	w8, [sp, #152]
  43de1c:	mov	w26, wzr
  43de20:	mov	w8, wzr
  43de24:	b	43de30 <feof@plt+0x3b460>
  43de28:	add	w26, w26, #0x7
  43de2c:	tbz	w19, #31, 43dedc <feof@plt+0x3b50c>
  43de30:	ldp	x10, x11, [sp, #112]
  43de34:	cbz	x11, 43de94 <feof@plt+0x3b4c4>
  43de38:	add	x9, x10, #0x1
  43de3c:	sub	x11, x11, #0x1
  43de40:	stp	x9, x11, [sp, #112]
  43de44:	ldrsb	w19, [x10]
  43de48:	cmp	w26, #0x40
  43de4c:	b.cc	43de28 <feof@plt+0x3b458>  // b.lo, b.ul, b.last
  43de50:	cbnz	w8, 43de28 <feof@plt+0x3b458>
  43de54:	ldr	w8, [sp, #104]
  43de58:	ldr	x4, [sp, #96]
  43de5c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43de60:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43de64:	sub	w5, w9, w8
  43de68:	add	x0, sp, #0xc0
  43de6c:	mov	w1, #0xc8                  	// #200
  43de70:	add	x2, x2, #0xbd7
  43de74:	add	x3, x3, #0xc90
  43de78:	bl	402740 <snprintf@plt>
  43de7c:	ldp	x8, x0, [sp, #136]
  43de80:	add	x1, sp, #0xc0
  43de84:	mov	w2, wzr
  43de88:	blr	x8
  43de8c:	mov	w8, #0x1                   	// #1
  43de90:	b	43de28 <feof@plt+0x3b458>
  43de94:	ldr	w8, [sp, #152]
  43de98:	cbnz	w8, 43dedc <feof@plt+0x3b50c>
  43de9c:	ldr	w8, [sp, #104]
  43dea0:	ldr	x4, [sp, #96]
  43dea4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dea8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43deac:	sub	w5, w10, w8
  43deb0:	add	x0, sp, #0xc0
  43deb4:	mov	w1, #0xc8                  	// #200
  43deb8:	add	x2, x2, #0xbd7
  43debc:	add	x3, x3, #0xbc7
  43dec0:	bl	402740 <snprintf@plt>
  43dec4:	ldp	x8, x0, [sp, #136]
  43dec8:	add	x1, sp, #0xc0
  43decc:	mov	w2, wzr
  43ded0:	blr	x8
  43ded4:	mov	w8, #0x1                   	// #1
  43ded8:	str	w8, [sp, #152]
  43dedc:	ldr	x27, [sp, #40]
  43dee0:	ldrb	w8, [x27]
  43dee4:	cmp	w8, #0x2f
  43dee8:	b.eq	43e0f4 <feof@plt+0x3b724>  // b.none
  43deec:	ldr	x8, [sp, #32]
  43def0:	cbz	w20, 43df0c <feof@plt+0x3b53c>
  43def4:	ldr	x9, [x23, #32]
  43def8:	sub	w8, w20, #0x1
  43defc:	cmp	x8, x9
  43df00:	b.cs	43e270 <feof@plt+0x3b8a0>  // b.hs, b.nlast
  43df04:	ldr	x9, [x23, #40]
  43df08:	add	x8, x9, x8, lsl #3
  43df0c:	ldr	x26, [x8]
  43df10:	mov	x0, x26
  43df14:	bl	402420 <strlen@plt>
  43df18:	ldr	x19, [sp, #40]
  43df1c:	mov	x20, x0
  43df20:	mov	x0, x19
  43df24:	bl	402420 <strlen@plt>
  43df28:	ldr	x24, [sp, #88]
  43df2c:	ldp	x2, x3, [sp, #136]
  43df30:	add	x8, x20, x0
  43df34:	str	x0, [sp, #24]
  43df38:	add	x1, x8, #0x2
  43df3c:	mov	x0, x24
  43df40:	bl	435450 <feof@plt+0x32a80>
  43df44:	cbz	x0, 43e1bc <feof@plt+0x3b7ec>
  43df48:	mov	x1, x26
  43df4c:	mov	x2, x20
  43df50:	mov	x27, x0
  43df54:	bl	402390 <memcpy@plt>
  43df58:	add	x0, x27, x20
  43df5c:	mov	w8, #0x2f                  	// #47
  43df60:	strb	w8, [x0], #1
  43df64:	ldr	x8, [sp, #24]
  43df68:	mov	x1, x19
  43df6c:	add	x2, x8, #0x1
  43df70:	bl	402390 <memcpy@plt>
  43df74:	ldr	x26, [sp]
  43df78:	adrp	x19, 45f000 <_obstack_memory_used@@Base+0xea68>
  43df7c:	add	x19, x19, #0xb34
  43df80:	b	43d460 <feof@plt+0x3aa90>
  43df84:	cmp	x20, #0x1
  43df88:	b.hi	43e044 <feof@plt+0x3b674>  // b.pmore
  43df8c:	ldr	w8, [sp, #152]
  43df90:	cbnz	w8, 43e02c <feof@plt+0x3b65c>
  43df94:	ldr	w8, [sp, #104]
  43df98:	ldr	x9, [sp, #40]
  43df9c:	ldr	x4, [sp, #96]
  43dfa0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dfa4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dfa8:	sub	w5, w9, w8
  43dfac:	add	x0, sp, #0xc0
  43dfb0:	mov	w1, #0xc8                  	// #200
  43dfb4:	add	x2, x2, #0xbd7
  43dfb8:	add	x3, x3, #0xbc7
  43dfbc:	bl	402740 <snprintf@plt>
  43dfc0:	ldp	x8, x0, [sp, #136]
  43dfc4:	add	x1, sp, #0xc0
  43dfc8:	mov	w2, wzr
  43dfcc:	blr	x8
  43dfd0:	mov	x28, xzr
  43dfd4:	b	43e0ec <feof@plt+0x3b71c>
  43dfd8:	ldr	w8, [sp, #104]
  43dfdc:	ldr	x9, [sp, #40]
  43dfe0:	ldr	x4, [sp, #96]
  43dfe4:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dfe8:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43dfec:	sub	w5, w9, w8
  43dff0:	add	x0, sp, #0xc0
  43dff4:	mov	w1, #0xc8                  	// #200
  43dff8:	add	x2, x2, #0xbd7
  43dffc:	add	x3, x3, #0xc6f
  43e000:	bl	402740 <snprintf@plt>
  43e004:	ldp	x8, x0, [sp, #136]
  43e008:	add	x1, sp, #0xc0
  43e00c:	mov	w2, wzr
  43e010:	blr	x8
  43e014:	mov	x28, xzr
  43e018:	b	43d460 <feof@plt+0x3aa90>
  43e01c:	cmp	x20, #0x3
  43e020:	b.hi	43e068 <feof@plt+0x3b698>  // b.pmore
  43e024:	ldr	w8, [sp, #152]
  43e028:	cbz	w8, 43df94 <feof@plt+0x3b5c4>
  43e02c:	mov	x28, xzr
  43e030:	b	43e0f4 <feof@plt+0x3b724>
  43e034:	add	x0, sp, #0x60
  43e038:	bl	43aae0 <feof@plt+0x38110>
  43e03c:	mov	x28, x0
  43e040:	b	43d460 <feof@plt+0x3aa90>
  43e044:	ldr	w10, [sp, #128]
  43e048:	add	x11, x8, #0x3
  43e04c:	sub	x9, x9, #0x3
  43e050:	stp	x11, x9, [sp, #112]
  43e054:	cbz	w10, 43e09c <feof@plt+0x3b6cc>
  43e058:	ldurh	w8, [x8, #1]
  43e05c:	lsl	x8, x8, #48
  43e060:	rev	x28, x8
  43e064:	b	43e0f4 <feof@plt+0x3b724>
  43e068:	ldr	w10, [sp, #128]
  43e06c:	add	x11, x8, #0x5
  43e070:	sub	x9, x9, #0x5
  43e074:	stp	x11, x9, [sp, #112]
  43e078:	cbz	w10, 43e0a4 <feof@plt+0x3b6d4>
  43e07c:	ldur	w8, [x8, #1]
  43e080:	lsl	x8, x8, #32
  43e084:	rev	x28, x8
  43e088:	b	43e0f4 <feof@plt+0x3b724>
  43e08c:	ldr	w8, [sp, #152]
  43e090:	cbz	w8, 43e0ac <feof@plt+0x3b6dc>
  43e094:	mov	w28, wzr
  43e098:	b	43e0f4 <feof@plt+0x3b724>
  43e09c:	ldurh	w28, [x8, #1]
  43e0a0:	b	43e0f4 <feof@plt+0x3b724>
  43e0a4:	ldur	w28, [x8, #1]
  43e0a8:	b	43e0f4 <feof@plt+0x3b724>
  43e0ac:	ldr	w8, [sp, #104]
  43e0b0:	ldr	x9, [sp, #40]
  43e0b4:	ldr	x4, [sp, #96]
  43e0b8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e0bc:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e0c0:	sub	w5, w9, w8
  43e0c4:	add	x0, sp, #0xc0
  43e0c8:	mov	w1, #0xc8                  	// #200
  43e0cc:	add	x2, x2, #0xbd7
  43e0d0:	add	x3, x3, #0xbc7
  43e0d4:	bl	402740 <snprintf@plt>
  43e0d8:	ldp	x8, x0, [sp, #136]
  43e0dc:	add	x1, sp, #0xc0
  43e0e0:	mov	w2, wzr
  43e0e4:	blr	x8
  43e0e8:	mov	w28, wzr
  43e0ec:	mov	w8, #0x1                   	// #1
  43e0f0:	str	w8, [sp, #152]
  43e0f4:	ldr	x26, [sp]
  43e0f8:	ldr	x24, [sp, #88]
  43e0fc:	b	43df78 <feof@plt+0x3b5a8>
  43e100:	mov	w8, #0x1                   	// #1
  43e104:	str	w8, [sp, #56]
  43e108:	ldr	x8, [sp, #184]
  43e10c:	cbz	x8, 43c7e0 <feof@plt+0x39e10>
  43e110:	ldr	w8, [sp, #56]
  43e114:	cbz	w8, 43c7e0 <feof@plt+0x39e10>
  43e118:	ldr	w8, [sp, #152]
  43e11c:	cbnz	w8, 43c7e0 <feof@plt+0x39e10>
  43e120:	ldr	x0, [sp, #88]
  43e124:	add	x4, sp, #0xa0
  43e128:	mov	w1, #0x18                  	// #24
  43e12c:	mov	x2, x22
  43e130:	mov	x3, x21
  43e134:	bl	435724 <feof@plt+0x32d54>
  43e138:	cbz	x0, 43c7e0 <feof@plt+0x39e10>
  43e13c:	mov	x8, #0xffffffffffffffff    	// #-1
  43e140:	stp	xzr, xzr, [x0, #8]
  43e144:	str	x8, [x0]
  43e148:	ldr	x0, [sp, #88]
  43e14c:	add	x1, sp, #0xa0
  43e150:	mov	x2, x22
  43e154:	mov	x3, x21
  43e158:	bl	43583c <feof@plt+0x32e6c>
  43e15c:	cbz	w0, 43c7e0 <feof@plt+0x39e10>
  43e160:	ldr	x19, [sp, #160]
  43e164:	ldr	x1, [sp, #184]
  43e168:	adrp	x3, 43e000 <feof@plt+0x3b630>
  43e16c:	add	x3, x3, #0x3ec
  43e170:	mov	w2, #0x18                  	// #24
  43e174:	mov	x0, x19
  43e178:	bl	43f518 <feof@plt+0x3cb48>
  43e17c:	ldr	x8, [sp, #72]
  43e180:	mov	w0, #0x1                   	// #1
  43e184:	str	x19, [x8]
  43e188:	ldr	x8, [sp, #184]
  43e18c:	b	43c850 <feof@plt+0x39e80>
  43e190:	ldr	w8, [sp, #112]
  43e194:	ldr	w9, [sp, #104]
  43e198:	ldr	x4, [sp, #96]
  43e19c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e1a0:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e1a4:	sub	w5, w8, w9
  43e1a8:	add	x2, x2, #0xbd7
  43e1ac:	add	x3, x3, #0xce8
  43e1b0:	b	43c7c4 <feof@plt+0x39df4>
  43e1b4:	ldr	w8, [sp, #152]
  43e1b8:	cbz	w8, 43e208 <feof@plt+0x3b838>
  43e1bc:	str	wzr, [sp, #56]
  43e1c0:	b	43e108 <feof@plt+0x3b738>
  43e1c4:	ldr	w8, [sp, #112]
  43e1c8:	ldr	w9, [sp, #104]
  43e1cc:	ldr	x4, [sp, #96]
  43e1d0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e1d4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e1d8:	sub	w5, w8, w9
  43e1dc:	add	x2, x2, #0xbd7
  43e1e0:	add	x3, x3, #0xd4d
  43e1e4:	add	x0, sp, #0xc0
  43e1e8:	mov	w1, #0xc8                  	// #200
  43e1ec:	bl	402740 <snprintf@plt>
  43e1f0:	ldp	x8, x0, [sp, #136]
  43e1f4:	add	x1, sp, #0xc0
  43e1f8:	mov	w2, wzr
  43e1fc:	blr	x8
  43e200:	str	wzr, [sp, #56]
  43e204:	b	43e108 <feof@plt+0x3b738>
  43e208:	ldr	w8, [sp, #112]
  43e20c:	ldr	w9, [sp, #104]
  43e210:	ldr	x4, [sp, #96]
  43e214:	sub	w5, w8, w9
  43e218:	b	43e234 <feof@plt+0x3b864>
  43e21c:	ldr	w8, [sp, #152]
  43e220:	cbnz	w8, 43e1bc <feof@plt+0x3b7ec>
  43e224:	ldr	w8, [sp, #104]
  43e228:	ldr	x9, [sp, #40]
  43e22c:	ldr	x4, [sp, #96]
  43e230:	sub	w5, w9, w8
  43e234:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e238:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e23c:	add	x2, x2, #0xbd7
  43e240:	add	x3, x3, #0xbc7
  43e244:	add	x0, sp, #0xc0
  43e248:	mov	w1, #0xc8                  	// #200
  43e24c:	bl	402740 <snprintf@plt>
  43e250:	ldp	x8, x0, [sp, #136]
  43e254:	add	x1, sp, #0xc0
  43e258:	mov	w2, wzr
  43e25c:	blr	x8
  43e260:	mov	w8, #0x1                   	// #1
  43e264:	str	wzr, [sp, #56]
  43e268:	str	w8, [sp, #152]
  43e26c:	b	43e108 <feof@plt+0x3b738>
  43e270:	ldr	w8, [sp, #112]
  43e274:	ldr	w9, [sp, #104]
  43e278:	ldr	x4, [sp, #96]
  43e27c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e280:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e284:	sub	w5, w8, w9
  43e288:	add	x2, x2, #0xbd7
  43e28c:	add	x3, x3, #0xd1e
  43e290:	b	43e1e4 <feof@plt+0x3b814>
  43e294:	stp	x29, x30, [sp, #-64]!
  43e298:	stp	x24, x23, [sp, #16]
  43e29c:	stp	x22, x21, [sp, #32]
  43e2a0:	stp	x20, x19, [sp, #48]
  43e2a4:	mov	x29, sp
  43e2a8:	ldr	x8, [x1, #32]
  43e2ac:	cbz	x8, 43e318 <feof@plt+0x3b948>
  43e2b0:	ldr	x9, [x1, #24]
  43e2b4:	mov	x19, x5
  43e2b8:	mov	x20, x4
  43e2bc:	mov	x22, x3
  43e2c0:	mov	x21, x2
  43e2c4:	mov	x23, x0
  43e2c8:	mov	x11, xzr
  43e2cc:	mov	x12, x8
  43e2d0:	b	43e2e0 <feof@plt+0x3b910>
  43e2d4:	mov	x12, x13
  43e2d8:	cmp	x11, x12
  43e2dc:	b.cs	43e318 <feof@plt+0x3b948>  // b.hs, b.nlast
  43e2e0:	add	x10, x12, x11
  43e2e4:	lsr	x13, x10, #1
  43e2e8:	add	x10, x13, x13, lsl #1
  43e2ec:	lsl	x14, x10, #3
  43e2f0:	add	x10, x9, x14
  43e2f4:	ldr	x15, [x10]
  43e2f8:	cmp	x15, x23
  43e2fc:	b.hi	43e2d4 <feof@plt+0x3b904>  // b.pmore
  43e300:	ldr	x15, [x10, #8]
  43e304:	cmp	x15, x23
  43e308:	b.hi	43e330 <feof@plt+0x3b960>  // b.pmore
  43e30c:	add	x11, x13, #0x1
  43e310:	cmp	x11, x12
  43e314:	b.cc	43e2e0 <feof@plt+0x3b910>  // b.lo, b.ul, b.last
  43e318:	mov	w0, wzr
  43e31c:	ldp	x20, x19, [sp, #48]
  43e320:	ldp	x22, x21, [sp, #32]
  43e324:	ldp	x24, x23, [sp, #16]
  43e328:	ldp	x29, x30, [sp], #64
  43e32c:	ret
  43e330:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43e334:	asr	x15, x14, #3
  43e338:	movk	x13, #0xaaab
  43e33c:	orr	x14, xzr, #0x1
  43e340:	madd	x15, x15, x13, x14
  43e344:	cmp	x15, x8
  43e348:	b.cs	43e398 <feof@plt+0x3b9c8>  // b.hs, b.nlast
  43e34c:	add	x11, x12, x11
  43e350:	lsr	x11, x11, #1
  43e354:	mov	w12, #0x18                  	// #24
  43e358:	madd	x11, x11, x12, x9
  43e35c:	add	x11, x11, #0x18
  43e360:	ldr	x12, [x11]
  43e364:	cmp	x12, x23
  43e368:	b.hi	43e398 <feof@plt+0x3b9c8>  // b.pmore
  43e36c:	ldr	x12, [x11, #8]
  43e370:	cmp	x12, x23
  43e374:	b.ls	43e394 <feof@plt+0x3b9c4>  // b.plast
  43e378:	sub	x12, x11, x9
  43e37c:	asr	x12, x12, #3
  43e380:	madd	x12, x12, x13, x14
  43e384:	add	x10, x10, #0x18
  43e388:	cmp	x12, x8
  43e38c:	add	x11, x11, #0x18
  43e390:	b.cc	43e360 <feof@plt+0x3b990>  // b.lo, b.ul, b.last
  43e394:	sub	x10, x11, #0x18
  43e398:	ldr	x24, [x10, #16]
  43e39c:	mov	x0, x23
  43e3a0:	mov	x2, x21
  43e3a4:	mov	x3, x22
  43e3a8:	mov	x1, x24
  43e3ac:	mov	x4, x20
  43e3b0:	mov	x5, x19
  43e3b4:	bl	43e294 <feof@plt+0x3b8c4>
  43e3b8:	cbnz	w0, 43e31c <feof@plt+0x3b94c>
  43e3bc:	ldr	x2, [x20]
  43e3c0:	ldr	w3, [x19]
  43e3c4:	ldr	x4, [x24]
  43e3c8:	mov	x0, x22
  43e3cc:	mov	x1, x23
  43e3d0:	blr	x21
  43e3d4:	cbnz	w0, 43e31c <feof@plt+0x3b94c>
  43e3d8:	ldr	x8, [x24, #8]
  43e3dc:	str	x8, [x20]
  43e3e0:	ldr	w8, [x24, #16]
  43e3e4:	str	w8, [x19]
  43e3e8:	b	43e31c <feof@plt+0x3b94c>
  43e3ec:	ldr	x8, [x0]
  43e3f0:	ldr	x9, [x1]
  43e3f4:	cmp	x8, x9
  43e3f8:	b.cs	43e404 <feof@plt+0x3ba34>  // b.hs, b.nlast
  43e3fc:	mov	w0, #0xffffffff            	// #-1
  43e400:	ret
  43e404:	b.ls	43e410 <feof@plt+0x3ba40>  // b.plast
  43e408:	mov	w0, #0x1                   	// #1
  43e40c:	ret
  43e410:	ldr	w8, [x0, #20]
  43e414:	ldr	w9, [x1, #20]
  43e418:	cmp	w8, w9
  43e41c:	b.ge	43e428 <feof@plt+0x3ba58>  // b.tcont
  43e420:	mov	w0, #0xffffffff            	// #-1
  43e424:	ret
  43e428:	cset	w0, gt
  43e42c:	ret
  43e430:	sub	sp, sp, #0x1c0
  43e434:	stp	x29, x30, [sp, #352]
  43e438:	stp	x28, x27, [sp, #368]
  43e43c:	stp	x26, x25, [sp, #384]
  43e440:	stp	x24, x23, [sp, #400]
  43e444:	stp	x22, x21, [sp, #416]
  43e448:	stp	x20, x19, [sp, #432]
  43e44c:	add	x29, sp, #0x160
  43e450:	ldr	x8, [x4, #24]
  43e454:	cbz	x8, 43eaf4 <feof@plt+0x3c124>
  43e458:	ldr	x9, [x29, #104]
  43e45c:	mov	x21, x7
  43e460:	mov	x27, x6
  43e464:	mov	x28, x5
  43e468:	str	x9, [sp, #104]
  43e46c:	ldr	x9, [x29, #96]
  43e470:	mov	x19, x4
  43e474:	mov	x23, x3
  43e478:	mov	x24, x2
  43e47c:	mov	x25, x1
  43e480:	mov	x20, x0
  43e484:	stp	x0, x9, [sp, #112]
  43e488:	ldr	x10, [x19, #16]
  43e48c:	cbz	x8, 43eafc <feof@plt+0x3c12c>
  43e490:	mov	w9, wzr
  43e494:	mov	w22, wzr
  43e498:	mov	x20, xzr
  43e49c:	add	x11, x10, #0x1
  43e4a0:	sub	x8, x8, #0x1
  43e4a4:	stp	x11, x8, [x19, #16]
  43e4a8:	ldrb	w26, [x10]
  43e4ac:	cmp	w22, #0x3f
  43e4b0:	b.hi	43e4cc <feof@plt+0x3bafc>  // b.pmore
  43e4b4:	and	x8, x26, #0x7f
  43e4b8:	lsl	x8, x8, x22
  43e4bc:	orr	x20, x8, x20
  43e4c0:	sxtb	w8, w26
  43e4c4:	tbnz	w8, #31, 43e4d8 <feof@plt+0x3bb08>
  43e4c8:	b	43e52c <feof@plt+0x3bb5c>
  43e4cc:	cbz	w9, 43e4e8 <feof@plt+0x3bb18>
  43e4d0:	sxtb	w8, w26
  43e4d4:	tbz	w8, #31, 43e52c <feof@plt+0x3bb5c>
  43e4d8:	ldp	x10, x8, [x19, #16]
  43e4dc:	add	w22, w22, #0x7
  43e4e0:	cbnz	x8, 43e49c <feof@plt+0x3bacc>
  43e4e4:	b	43eafc <feof@plt+0x3c12c>
  43e4e8:	ldr	w8, [x19, #8]
  43e4ec:	ldr	x4, [x19]
  43e4f0:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e4f4:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e4f8:	sub	w5, w11, w8
  43e4fc:	add	x0, sp, #0x90
  43e500:	mov	w1, #0xc8                  	// #200
  43e504:	add	x2, x2, #0xbd7
  43e508:	add	x3, x3, #0xc90
  43e50c:	bl	402740 <snprintf@plt>
  43e510:	ldp	x8, x0, [x19, #40]
  43e514:	add	x1, sp, #0x90
  43e518:	mov	w2, wzr
  43e51c:	blr	x8
  43e520:	mov	w9, #0x1                   	// #1
  43e524:	sxtb	w8, w26
  43e528:	tbnz	w8, #31, 43e4d8 <feof@plt+0x3bb08>
  43e52c:	cbz	x20, 43eaf4 <feof@plt+0x3c124>
  43e530:	ldr	x8, [x24, #88]
  43e534:	sub	x10, x20, #0x1
  43e538:	cmp	x10, x8
  43e53c:	b.cs	43e608 <feof@plt+0x3bc38>  // b.hs, b.nlast
  43e540:	ldr	x9, [x24, #96]
  43e544:	add	x26, x9, x10, lsl #5
  43e548:	ldr	x10, [x26]
  43e54c:	cmp	x10, x20
  43e550:	b.ne	43e610 <feof@plt+0x3bc40>  // b.any
  43e554:	cbz	x26, 43eb5c <feof@plt+0x3c18c>
  43e558:	ldr	w20, [x26, #8]
  43e55c:	str	x28, [sp, #64]
  43e560:	mov	x22, xzr
  43e564:	mov	w28, wzr
  43e568:	cmp	w20, #0x2e
  43e56c:	b.hi	43e9bc <feof@plt+0x3bfec>  // b.pmore
  43e570:	mov	x9, #0x8                   	// #8
  43e574:	mov	w8, #0x1                   	// #1
  43e578:	movk	x9, #0x2000, lsl #16
  43e57c:	lsl	x8, x8, x20
  43e580:	movk	x9, #0x4000, lsl #32
  43e584:	tst	x8, x9
  43e588:	ldr	x8, [sp, #120]
  43e58c:	b.eq	43e5cc <feof@plt+0x3bbfc>  // b.none
  43e590:	ldr	x0, [sp, #112]
  43e594:	mov	w1, #0x28                  	// #40
  43e598:	mov	x2, x27
  43e59c:	mov	x3, x21
  43e5a0:	bl	435450 <feof@plt+0x32a80>
  43e5a4:	mov	x22, x0
  43e5a8:	cbz	x0, 43eb60 <feof@plt+0x3c190>
  43e5ac:	ldr	x8, [sp, #104]
  43e5b0:	ldr	x9, [sp, #120]
  43e5b4:	cmp	w20, #0x1d
  43e5b8:	movi	v0.2d, #0x0
  43e5bc:	mov	w28, #0x1                   	// #1
  43e5c0:	csel	x8, x8, x9, eq  // eq = none
  43e5c4:	str	xzr, [x22, #32]
  43e5c8:	stp	q0, q0, [x22]
  43e5cc:	str	x8, [sp, #24]
  43e5d0:	ldr	x8, [x26, #16]
  43e5d4:	str	x27, [sp, #80]
  43e5d8:	cbz	x8, 43e884 <feof@plt+0x3beb4>
  43e5dc:	mov	x27, xzr
  43e5e0:	mov	x20, xzr
  43e5e4:	str	wzr, [sp, #76]
  43e5e8:	str	wzr, [sp, #60]
  43e5ec:	str	xzr, [sp, #48]
  43e5f0:	str	wzr, [sp, #20]
  43e5f4:	str	wzr, [sp, #44]
  43e5f8:	str	xzr, [sp, #32]
  43e5fc:	str	wzr, [sp, #96]
  43e600:	str	xzr, [sp, #88]
  43e604:	b	43e684 <feof@plt+0x3bcb4>
  43e608:	cbz	x8, 43eb48 <feof@plt+0x3c178>
  43e60c:	ldr	x9, [x24, #96]
  43e610:	mov	x10, xzr
  43e614:	b	43e624 <feof@plt+0x3bc54>
  43e618:	cmp	x10, x11
  43e61c:	mov	x8, x11
  43e620:	b.cs	43eb48 <feof@plt+0x3c178>  // b.hs, b.nlast
  43e624:	add	x11, x8, x10
  43e628:	lsr	x11, x11, #1
  43e62c:	add	x26, x9, x11, lsl #5
  43e630:	ldr	x12, [x26]
  43e634:	cmp	x12, x20
  43e638:	b.hi	43e618 <feof@plt+0x3bc48>  // b.pmore
  43e63c:	b.cs	43e554 <feof@plt+0x3bb84>  // b.hs, b.nlast
  43e640:	add	x10, x11, #0x1
  43e644:	mov	x11, x8
  43e648:	b	43e618 <feof@plt+0x3bc48>
  43e64c:	ldr	w8, [sp, #128]
  43e650:	ldr	x9, [sp, #136]
  43e654:	cmp	w8, #0x1
  43e658:	ldr	x8, [sp, #88]
  43e65c:	csel	x8, x9, x8, eq  // eq = none
  43e660:	str	x8, [sp, #88]
  43e664:	ldr	w8, [sp, #96]
  43e668:	csinc	w8, w8, wzr, ne  // ne = any
  43e66c:	str	w8, [sp, #96]
  43e670:	ldr	x8, [x26, #16]
  43e674:	add	x20, x20, #0x1
  43e678:	add	x27, x27, #0x8
  43e67c:	cmp	x20, x8
  43e680:	b.cs	43e8a0 <feof@plt+0x3bed0>  // b.hs, b.nlast
  43e684:	ldr	x8, [x26, #24]
  43e688:	ldp	w3, w2, [x24, #40]
  43e68c:	ldr	w4, [x24, #48]
  43e690:	ldp	x5, x6, [x25, #104]
  43e694:	add	x8, x8, x27
  43e698:	ldr	w0, [x8, #4]
  43e69c:	ldr	x7, [x25, #8]
  43e6a0:	add	x8, sp, #0x80
  43e6a4:	mov	x1, x19
  43e6a8:	str	x8, [sp]
  43e6ac:	bl	43aba4 <feof@plt+0x381d4>
  43e6b0:	cbz	w0, 43eb5c <feof@plt+0x3c18c>
  43e6b4:	ldr	w8, [x26, #8]
  43e6b8:	cmp	w8, #0x11
  43e6bc:	b.ne	43e6dc <feof@plt+0x3bd0c>  // b.any
  43e6c0:	ldr	x8, [x26, #24]
  43e6c4:	ldr	w9, [sp, #128]
  43e6c8:	ldr	x10, [sp, #136]
  43e6cc:	ldr	w8, [x8, x27]
  43e6d0:	cmp	w9, #0x1
  43e6d4:	ccmp	w8, #0x11, #0x0, eq  // eq = none
  43e6d8:	csel	x23, x10, x23, eq  // eq = none
  43e6dc:	cbz	w28, 43e670 <feof@plt+0x3bca0>
  43e6e0:	ldr	x8, [x26, #24]
  43e6e4:	ldr	w9, [x8, x27]
  43e6e8:	cmp	w9, #0x30
  43e6ec:	b.le	43e73c <feof@plt+0x3bd6c>
  43e6f0:	sub	w10, w9, #0x47
  43e6f4:	cmp	w10, #0x27
  43e6f8:	b.hi	43e77c <feof@plt+0x3bdac>  // b.pmore
  43e6fc:	adrp	x12, 45f000 <_obstack_memory_used@@Base+0xea68>
  43e700:	add	x12, x12, #0xb66
  43e704:	adr	x9, 43e670 <feof@plt+0x3bca0>
  43e708:	ldrb	w11, [x12, x10]
  43e70c:	add	x9, x9, x11, lsl #2
  43e710:	br	x9
  43e714:	ldr	w8, [sp, #128]
  43e718:	cmp	w8, #0x8
  43e71c:	b.eq	43e728 <feof@plt+0x3bd58>  // b.none
  43e720:	cmp	w8, #0x2
  43e724:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e728:	ldr	x8, [sp, #136]
  43e72c:	str	x8, [sp, #48]
  43e730:	mov	w8, #0x1                   	// #1
  43e734:	str	w8, [sp, #60]
  43e738:	b	43e670 <feof@plt+0x3bca0>
  43e73c:	cmp	w9, #0x3
  43e740:	b.eq	43e7e4 <feof@plt+0x3be14>  // b.none
  43e744:	cmp	w9, #0x11
  43e748:	b.eq	43e64c <feof@plt+0x3bc7c>  // b.none
  43e74c:	cmp	w9, #0x12
  43e750:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e754:	ldr	w8, [sp, #128]
  43e758:	cmp	w8, #0x2
  43e75c:	b.eq	43e850 <feof@plt+0x3be80>  // b.none
  43e760:	cmp	w8, #0x1
  43e764:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e768:	ldr	x8, [sp, #136]
  43e76c:	str	x8, [sp, #32]
  43e770:	mov	w8, #0x1                   	// #1
  43e774:	str	w8, [sp, #44]
  43e778:	b	43e670 <feof@plt+0x3bca0>
  43e77c:	cmp	w9, #0x31
  43e780:	b.eq	43e7b0 <feof@plt+0x3bde0>  // b.none
  43e784:	mov	w8, #0x2007                	// #8199
  43e788:	cmp	w9, w8
  43e78c:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e790:	ldr	w8, [sp, #128]
  43e794:	cmp	w8, #0x4
  43e798:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e79c:	ldr	x8, [sp, #136]
  43e7a0:	str	x8, [x22]
  43e7a4:	mov	w8, #0x1                   	// #1
  43e7a8:	str	w8, [sp, #76]
  43e7ac:	b	43e670 <feof@plt+0x3bca0>
  43e7b0:	ldr	w9, [sp, #76]
  43e7b4:	cbnz	w9, 43e670 <feof@plt+0x3bca0>
  43e7b8:	ldr	x4, [sp, #80]
  43e7bc:	add	x2, x8, x27
  43e7c0:	add	x3, sp, #0x80
  43e7c4:	mov	x0, x25
  43e7c8:	mov	x1, x24
  43e7cc:	mov	x5, x21
  43e7d0:	bl	43ec18 <feof@plt+0x3c248>
  43e7d4:	cbz	x0, 43e86c <feof@plt+0x3be9c>
  43e7d8:	str	wzr, [sp, #76]
  43e7dc:	str	x0, [x22]
  43e7e0:	b	43e670 <feof@plt+0x3bca0>
  43e7e4:	ldr	x8, [x22]
  43e7e8:	cbnz	x8, 43e670 <feof@plt+0x3bca0>
  43e7ec:	ldr	w8, [sp, #128]
  43e7f0:	cmp	w8, #0x4
  43e7f4:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e7f8:	ldr	x8, [sp, #136]
  43e7fc:	str	x8, [x22]
  43e800:	b	43e670 <feof@plt+0x3bca0>
  43e804:	ldr	w8, [sp, #128]
  43e808:	cmp	w8, #0x2
  43e80c:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e810:	ldr	x8, [sp, #136]
  43e814:	cbz	x8, 43e874 <feof@plt+0x3bea4>
  43e818:	ldr	x10, [sp, #64]
  43e81c:	sub	x8, x8, #0x1
  43e820:	ldr	x9, [x10, #48]
  43e824:	cmp	x8, x9
  43e828:	b.cs	43eb84 <feof@plt+0x3c1b4>  // b.hs, b.nlast
  43e82c:	ldr	x9, [x10, #56]
  43e830:	ldr	x8, [x9, x8, lsl #3]
  43e834:	b	43e87c <feof@plt+0x3beac>
  43e838:	ldr	w8, [sp, #128]
  43e83c:	cmp	w8, #0x2
  43e840:	b.ne	43e670 <feof@plt+0x3bca0>  // b.any
  43e844:	ldr	x8, [sp, #136]
  43e848:	str	w8, [x22, #16]
  43e84c:	b	43e670 <feof@plt+0x3bca0>
  43e850:	ldr	x8, [sp, #136]
  43e854:	str	x8, [sp, #32]
  43e858:	mov	w8, #0x1                   	// #1
  43e85c:	str	w8, [sp, #44]
  43e860:	mov	w8, #0x1                   	// #1
  43e864:	str	w8, [sp, #20]
  43e868:	b	43e670 <feof@plt+0x3bca0>
  43e86c:	str	wzr, [sp, #76]
  43e870:	b	43e670 <feof@plt+0x3bca0>
  43e874:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0xaa68>
  43e878:	add	x8, x8, #0xb34
  43e87c:	str	x8, [x22, #8]
  43e880:	b	43e670 <feof@plt+0x3bca0>
  43e884:	str	xzr, [sp, #88]
  43e888:	str	wzr, [sp, #96]
  43e88c:	str	xzr, [sp, #32]
  43e890:	str	wzr, [sp, #44]
  43e894:	str	wzr, [sp, #20]
  43e898:	str	xzr, [sp, #48]
  43e89c:	str	wzr, [sp, #60]
  43e8a0:	cbz	w28, 43e8ac <feof@plt+0x3bedc>
  43e8a4:	ldr	x8, [x22]
  43e8a8:	cbz	x8, 43e9c4 <feof@plt+0x3bff4>
  43e8ac:	ldr	x27, [sp, #80]
  43e8b0:	ldr	x20, [sp, #112]
  43e8b4:	cbz	w28, 43e9e4 <feof@plt+0x3c014>
  43e8b8:	ldr	w8, [sp, #60]
  43e8bc:	cbz	w8, 43e8f8 <feof@plt+0x3bf28>
  43e8c0:	ldr	x8, [sp, #24]
  43e8c4:	ldr	x4, [sp, #48]
  43e8c8:	mov	x0, x20
  43e8cc:	mov	x1, x25
  43e8d0:	mov	x2, x24
  43e8d4:	mov	x3, x22
  43e8d8:	mov	x5, x23
  43e8dc:	mov	x6, x27
  43e8e0:	mov	x7, x21
  43e8e4:	str	x8, [sp]
  43e8e8:	bl	43ed24 <feof@plt+0x3c354>
  43e8ec:	ldr	x28, [sp, #64]
  43e8f0:	cbnz	w0, 43e9ac <feof@plt+0x3bfdc>
  43e8f4:	b	43eb5c <feof@plt+0x3c18c>
  43e8f8:	ldr	x28, [sp, #64]
  43e8fc:	ldr	w8, [sp, #96]
  43e900:	cbz	w8, 43eac8 <feof@plt+0x3c0f8>
  43e904:	ldr	w8, [sp, #44]
  43e908:	cbz	w8, 43eac8 <feof@plt+0x3c0f8>
  43e90c:	ldr	w8, [sp, #20]
  43e910:	ldp	x27, x12, [sp, #24]
  43e914:	ldr	x11, [sp, #88]
  43e918:	ldr	x9, [x25, #16]
  43e91c:	cmp	w8, #0x0
  43e920:	ldr	x8, [x27, #24]
  43e924:	csel	x10, xzr, x11, eq  // eq = none
  43e928:	add	x10, x10, x12
  43e92c:	add	x20, x9, x11
  43e930:	add	x11, x10, x9
  43e934:	cbz	x8, 43e96c <feof@plt+0x3bf9c>
  43e938:	ldr	x9, [x27]
  43e93c:	mov	w10, #0x18                  	// #24
  43e940:	madd	x9, x8, x10, x9
  43e944:	ldur	x8, [x9, #-16]
  43e948:	cmp	x20, x8
  43e94c:	b.eq	43e95c <feof@plt+0x3bf8c>  // b.none
  43e950:	add	x10, x8, #0x1
  43e954:	cmp	x20, x10
  43e958:	b.ne	43e96c <feof@plt+0x3bf9c>  // b.any
  43e95c:	sub	x9, x9, #0x18
  43e960:	ldr	x10, [x9, #16]
  43e964:	cmp	x10, x22
  43e968:	b.eq	43eae4 <feof@plt+0x3c114>  // b.none
  43e96c:	ldr	x0, [sp, #112]
  43e970:	ldr	x2, [sp, #80]
  43e974:	mov	w1, #0x18                  	// #24
  43e978:	mov	x3, x21
  43e97c:	mov	x4, x27
  43e980:	str	x11, [sp, #96]
  43e984:	bl	435724 <feof@plt+0x32d54>
  43e988:	cbz	x0, 43eb5c <feof@plt+0x3c18c>
  43e98c:	ldr	x8, [sp, #96]
  43e990:	str	x22, [x0, #16]
  43e994:	stp	x20, x8, [x0]
  43e998:	ldr	x8, [x27, #24]
  43e99c:	add	x8, x8, #0x1
  43e9a0:	str	x8, [x27, #24]
  43e9a4:	ldr	x27, [sp, #80]
  43e9a8:	ldr	x20, [sp, #112]
  43e9ac:	mov	w8, #0x1                   	// #1
  43e9b0:	ldr	w9, [x26, #12]
  43e9b4:	cbnz	w9, 43e9f4 <feof@plt+0x3c024>
  43e9b8:	b	43eab8 <feof@plt+0x3c0e8>
  43e9bc:	ldr	x8, [sp, #120]
  43e9c0:	b	43e5cc <feof@plt+0x3bbfc>
  43e9c4:	ldr	x20, [sp, #112]
  43e9c8:	ldr	x27, [sp, #80]
  43e9cc:	mov	w2, #0x28                  	// #40
  43e9d0:	mov	x1, x22
  43e9d4:	mov	x0, x20
  43e9d8:	mov	x3, x27
  43e9dc:	mov	x4, x21
  43e9e0:	bl	435614 <feof@plt+0x32c44>
  43e9e4:	ldr	x28, [sp, #64]
  43e9e8:	mov	w8, wzr
  43e9ec:	ldr	w9, [x26, #12]
  43e9f0:	cbz	w9, 43eab8 <feof@plt+0x3c0e8>
  43e9f4:	cbz	w8, 43ea80 <feof@plt+0x3c0b0>
  43e9f8:	add	x8, sp, #0x90
  43e9fc:	str	x8, [sp, #8]
  43ea00:	ldr	x8, [sp, #120]
  43ea04:	movi	v0.2d, #0x0
  43ea08:	mov	x0, x20
  43ea0c:	mov	x1, x25
  43ea10:	mov	x2, x24
  43ea14:	mov	x3, x23
  43ea18:	mov	x4, x19
  43ea1c:	mov	x5, x28
  43ea20:	mov	x6, x27
  43ea24:	mov	x7, x21
  43ea28:	stp	q0, q0, [sp, #144]
  43ea2c:	str	x8, [sp]
  43ea30:	bl	43e430 <feof@plt+0x3ba60>
  43ea34:	cbz	w0, 43eb5c <feof@plt+0x3c18c>
  43ea38:	ldr	x8, [sp, #168]
  43ea3c:	cbz	x8, 43eab8 <feof@plt+0x3c0e8>
  43ea40:	add	x1, sp, #0x90
  43ea44:	mov	x0, x20
  43ea48:	mov	x2, x27
  43ea4c:	mov	x3, x21
  43ea50:	bl	43583c <feof@plt+0x32e6c>
  43ea54:	cbz	w0, 43eb5c <feof@plt+0x3c18c>
  43ea58:	ldr	x26, [sp, #144]
  43ea5c:	ldr	x1, [sp, #168]
  43ea60:	adrp	x3, 43e000 <feof@plt+0x3b630>
  43ea64:	mov	w2, #0x18                  	// #24
  43ea68:	mov	x0, x26
  43ea6c:	add	x3, x3, #0xbc4
  43ea70:	bl	43f518 <feof@plt+0x3cb48>
  43ea74:	ldr	x8, [sp, #168]
  43ea78:	stp	x26, x8, [x22, #24]
  43ea7c:	b	43eab8 <feof@plt+0x3c0e8>
  43ea80:	ldr	x8, [sp, #104]
  43ea84:	mov	x0, x20
  43ea88:	mov	x1, x25
  43ea8c:	mov	x2, x24
  43ea90:	str	x8, [sp, #8]
  43ea94:	ldr	x8, [sp, #120]
  43ea98:	mov	x3, x23
  43ea9c:	mov	x4, x19
  43eaa0:	mov	x5, x28
  43eaa4:	mov	x6, x27
  43eaa8:	mov	x7, x21
  43eaac:	str	x8, [sp]
  43eab0:	bl	43e430 <feof@plt+0x3ba60>
  43eab4:	cbz	w0, 43eb5c <feof@plt+0x3c18c>
  43eab8:	ldr	x8, [x19, #24]
  43eabc:	mov	w22, #0x1                   	// #1
  43eac0:	cbnz	x8, 43e488 <feof@plt+0x3bab8>
  43eac4:	b	43eb60 <feof@plt+0x3c190>
  43eac8:	mov	w2, #0x28                  	// #40
  43eacc:	mov	x0, x20
  43ead0:	mov	x1, x22
  43ead4:	mov	x3, x27
  43ead8:	mov	x4, x21
  43eadc:	bl	435614 <feof@plt+0x32c44>
  43eae0:	b	43e9e8 <feof@plt+0x3c018>
  43eae4:	cmp	x11, x8
  43eae8:	b.ls	43e9a4 <feof@plt+0x3bfd4>  // b.plast
  43eaec:	str	x11, [x9, #8]
  43eaf0:	b	43e9a4 <feof@plt+0x3bfd4>
  43eaf4:	mov	w22, #0x1                   	// #1
  43eaf8:	b	43eb60 <feof@plt+0x3c190>
  43eafc:	ldr	w8, [x19, #56]
  43eb00:	mov	w22, #0x1                   	// #1
  43eb04:	cbnz	w8, 43eb60 <feof@plt+0x3c190>
  43eb08:	ldr	w8, [x19, #8]
  43eb0c:	ldr	x4, [x19]
  43eb10:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43eb14:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43eb18:	sub	w5, w10, w8
  43eb1c:	add	x2, x2, #0xbd7
  43eb20:	add	x3, x3, #0xbc7
  43eb24:	add	x0, sp, #0x90
  43eb28:	mov	w1, #0xc8                  	// #200
  43eb2c:	bl	402740 <snprintf@plt>
  43eb30:	ldp	x8, x0, [x19, #40]
  43eb34:	add	x1, sp, #0x90
  43eb38:	mov	w2, wzr
  43eb3c:	blr	x8
  43eb40:	str	w22, [x19, #56]
  43eb44:	b	43eb60 <feof@plt+0x3c190>
  43eb48:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43eb4c:	add	x1, x1, #0xc01
  43eb50:	mov	x0, x21
  43eb54:	mov	w2, wzr
  43eb58:	blr	x27
  43eb5c:	mov	w22, wzr
  43eb60:	mov	w0, w22
  43eb64:	ldp	x20, x19, [sp, #432]
  43eb68:	ldp	x22, x21, [sp, #416]
  43eb6c:	ldp	x24, x23, [sp, #400]
  43eb70:	ldp	x26, x25, [sp, #384]
  43eb74:	ldp	x28, x27, [sp, #368]
  43eb78:	ldp	x29, x30, [sp, #352]
  43eb7c:	add	sp, sp, #0x1c0
  43eb80:	ret
  43eb84:	ldr	w8, [x19, #16]
  43eb88:	ldr	w9, [x19, #8]
  43eb8c:	ldr	x4, [x19]
  43eb90:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43eb94:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43eb98:	sub	w5, w8, w9
  43eb9c:	add	x2, x2, #0xbd7
  43eba0:	add	x3, x3, #0xd78
  43eba4:	add	x0, sp, #0x90
  43eba8:	mov	w1, #0xc8                  	// #200
  43ebac:	bl	402740 <snprintf@plt>
  43ebb0:	ldp	x8, x0, [x19, #40]
  43ebb4:	add	x1, sp, #0x90
  43ebb8:	mov	w2, wzr
  43ebbc:	blr	x8
  43ebc0:	b	43eb5c <feof@plt+0x3c18c>
  43ebc4:	ldr	x8, [x0]
  43ebc8:	ldr	x9, [x1]
  43ebcc:	cmp	x8, x9
  43ebd0:	b.cs	43ebdc <feof@plt+0x3c20c>  // b.hs, b.nlast
  43ebd4:	mov	w0, #0xffffffff            	// #-1
  43ebd8:	ret
  43ebdc:	b.ls	43ebe8 <feof@plt+0x3c218>  // b.plast
  43ebe0:	mov	w0, #0x1                   	// #1
  43ebe4:	ret
  43ebe8:	ldr	x8, [x0, #8]
  43ebec:	ldr	x9, [x1, #8]
  43ebf0:	cmp	x8, x9
  43ebf4:	b.cs	43ec00 <feof@plt+0x3c230>  // b.hs, b.nlast
  43ebf8:	mov	w0, #0x1                   	// #1
  43ebfc:	ret
  43ec00:	b.hi	43ebd4 <feof@plt+0x3c204>  // b.pmore
  43ec04:	ldr	x8, [x0, #16]
  43ec08:	ldr	x9, [x1, #16]
  43ec0c:	ldr	x0, [x8]
  43ec10:	ldr	x1, [x9]
  43ec14:	b	402820 <strcmp@plt>
  43ec18:	ldr	w8, [x2]
  43ec1c:	cmp	w8, #0x47
  43ec20:	b.eq	43ec2c <feof@plt+0x3c25c>  // b.none
  43ec24:	cmp	w8, #0x31
  43ec28:	b.ne	43ec38 <feof@plt+0x3c268>  // b.any
  43ec2c:	ldr	w8, [x2, #4]
  43ec30:	cmp	w8, #0x20
  43ec34:	b.ne	43ec40 <feof@plt+0x3c270>  // b.any
  43ec38:	mov	x0, xzr
  43ec3c:	ret
  43ec40:	ldr	w8, [x3]
  43ec44:	sub	w8, w8, #0x2
  43ec48:	cmp	w8, #0x5
  43ec4c:	b.hi	43ec38 <feof@plt+0x3c268>  // b.pmore
  43ec50:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ec54:	add	x9, x9, #0xb8e
  43ec58:	adr	x10, 43ec38 <feof@plt+0x3c268>
  43ec5c:	ldrb	w11, [x9, x8]
  43ec60:	add	x10, x10, x11, lsl #2
  43ec64:	br	x10
  43ec68:	ldr	x2, [x3, #8]
  43ec6c:	mov	x3, x4
  43ec70:	mov	x4, x5
  43ec74:	b	43f1d8 <feof@plt+0x3c808>
  43ec78:	ldr	x10, [x0, #48]
  43ec7c:	cbz	x10, 43ec38 <feof@plt+0x3c268>
  43ec80:	ldr	x8, [x0, #40]
  43ec84:	ldr	x9, [x3, #8]
  43ec88:	mov	x11, xzr
  43ec8c:	b	43ec9c <feof@plt+0x3c2cc>
  43ec90:	cmp	x11, x12
  43ec94:	mov	x10, x12
  43ec98:	b.cs	43ec38 <feof@plt+0x3c268>  // b.hs, b.nlast
  43ec9c:	add	x12, x10, x11
  43eca0:	lsr	x12, x12, #1
  43eca4:	ldr	x1, [x8, x12, lsl #3]
  43eca8:	ldr	x13, [x1, #24]
  43ecac:	subs	x2, x9, x13
  43ecb0:	b.cc	43ec90 <feof@plt+0x3c2c0>  // b.lo, b.ul, b.last
  43ecb4:	ldr	x11, [x1, #32]
  43ecb8:	cmp	x11, x9
  43ecbc:	b.hi	43ec6c <feof@plt+0x3c29c>  // b.pmore
  43ecc0:	add	x11, x12, #0x1
  43ecc4:	mov	x12, x10
  43ecc8:	b	43ec90 <feof@plt+0x3c2c0>
  43eccc:	ldr	x0, [x0, #8]
  43ecd0:	ldr	x9, [x0, #48]
  43ecd4:	cbz	x9, 43ec38 <feof@plt+0x3c268>
  43ecd8:	ldr	x8, [x0, #40]
  43ecdc:	ldr	x10, [x3, #8]
  43ece0:	mov	x11, xzr
  43ece4:	b	43ecf4 <feof@plt+0x3c324>
  43ece8:	cmp	x11, x12
  43ecec:	mov	x9, x12
  43ecf0:	b.cs	43ec38 <feof@plt+0x3c268>  // b.hs, b.nlast
  43ecf4:	add	x12, x9, x11
  43ecf8:	lsr	x12, x12, #1
  43ecfc:	ldr	x1, [x8, x12, lsl #3]
  43ed00:	ldr	x13, [x1, #24]
  43ed04:	subs	x2, x10, x13
  43ed08:	b.cc	43ece8 <feof@plt+0x3c318>  // b.lo, b.ul, b.last
  43ed0c:	ldr	x11, [x1, #32]
  43ed10:	cmp	x11, x10
  43ed14:	b.hi	43ec6c <feof@plt+0x3c29c>  // b.pmore
  43ed18:	add	x11, x12, #0x1
  43ed1c:	mov	x12, x9
  43ed20:	b	43ece8 <feof@plt+0x3c318>
  43ed24:	sub	sp, sp, #0x170
  43ed28:	stp	x29, x30, [sp, #272]
  43ed2c:	stp	x28, x27, [sp, #288]
  43ed30:	stp	x26, x25, [sp, #304]
  43ed34:	stp	x24, x23, [sp, #320]
  43ed38:	stp	x22, x21, [sp, #336]
  43ed3c:	stp	x20, x19, [sp, #352]
  43ed40:	add	x29, sp, #0x110
  43ed44:	ldr	x8, [x1, #96]
  43ed48:	mov	x20, x7
  43ed4c:	mov	x19, x6
  43ed50:	subs	x8, x8, x4
  43ed54:	b.ls	43f190 <feof@plt+0x3c7c0>  // b.plast
  43ed58:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ed5c:	add	x9, x9, #0x97a
  43ed60:	str	x9, [sp]
  43ed64:	ldr	x9, [x1, #88]
  43ed68:	str	x8, [sp, #24]
  43ed6c:	ldr	x26, [x29, #96]
  43ed70:	mov	x24, x5
  43ed74:	add	x8, x9, x4
  43ed78:	stp	x9, x8, [sp, #8]
  43ed7c:	ldr	w8, [x1, #120]
  43ed80:	mov	x21, x3
  43ed84:	mov	x22, x2
  43ed88:	mov	x23, x1
  43ed8c:	mov	x25, x0
  43ed90:	stp	x19, x20, [sp, #40]
  43ed94:	str	wzr, [sp, #56]
  43ed98:	str	w8, [sp, #32]
  43ed9c:	b	43edac <feof@plt+0x3c3dc>
  43eda0:	mov	x24, x0
  43eda4:	ldr	w8, [sp, #56]
  43eda8:	cbnz	w8, 43f1a4 <feof@plt+0x3c7d4>
  43edac:	ldr	w8, [x22, #48]
  43edb0:	sub	w8, w8, #0x1
  43edb4:	cmp	w8, #0x7
  43edb8:	b.hi	43ee20 <feof@plt+0x3c450>  // b.pmore
  43edbc:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43edc0:	add	x11, x11, #0xb94
  43edc4:	adr	x9, 43edd4 <feof@plt+0x3c404>
  43edc8:	ldrb	w10, [x11, x8]
  43edcc:	add	x9, x9, x10, lsl #2
  43edd0:	br	x9
  43edd4:	ldp	x8, x9, [sp, #16]
  43edd8:	cbz	x9, 43ee70 <feof@plt+0x3c4a0>
  43eddc:	add	x10, x8, #0x1
  43ede0:	sub	x9, x9, #0x1
  43ede4:	stp	x10, x9, [sp, #16]
  43ede8:	ldrb	w28, [x8]
  43edec:	b	43eef8 <feof@plt+0x3c528>
  43edf0:	ldp	x8, x9, [sp, #16]
  43edf4:	cmp	x9, #0x1
  43edf8:	b.ls	43ee70 <feof@plt+0x3c4a0>  // b.plast
  43edfc:	ldr	w10, [sp, #32]
  43ee00:	add	x11, x8, #0x2
  43ee04:	sub	x9, x9, #0x2
  43ee08:	stp	x11, x9, [sp, #16]
  43ee0c:	cbz	w10, 43eeec <feof@plt+0x3c51c>
  43ee10:	ldrh	w8, [x8]
  43ee14:	lsl	x8, x8, #48
  43ee18:	rev	x28, x8
  43ee1c:	b	43eef8 <feof@plt+0x3c528>
  43ee20:	ldr	w8, [sp, #16]
  43ee24:	ldr	w9, [sp, #8]
  43ee28:	ldr	x4, [sp]
  43ee2c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ee30:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ee34:	sub	w5, w8, w9
  43ee38:	add	x0, sp, #0x40
  43ee3c:	mov	w1, #0xc8                  	// #200
  43ee40:	add	x2, x2, #0xbd7
  43ee44:	add	x3, x3, #0xc6f
  43ee48:	bl	402740 <snprintf@plt>
  43ee4c:	ldp	x8, x0, [sp, #40]
  43ee50:	add	x1, sp, #0x40
  43ee54:	mov	w2, wzr
  43ee58:	blr	x8
  43ee5c:	mov	x28, xzr
  43ee60:	b	43eef8 <feof@plt+0x3c528>
  43ee64:	ldp	x8, x9, [sp, #16]
  43ee68:	cmp	x9, #0x3
  43ee6c:	b.hi	43eec8 <feof@plt+0x3c4f8>  // b.pmore
  43ee70:	ldr	w9, [sp, #8]
  43ee74:	ldr	x4, [sp]
  43ee78:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ee7c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ee80:	sub	w5, w8, w9
  43ee84:	add	x0, sp, #0x40
  43ee88:	mov	w1, #0xc8                  	// #200
  43ee8c:	add	x2, x2, #0xbd7
  43ee90:	add	x3, x3, #0xbc7
  43ee94:	bl	402740 <snprintf@plt>
  43ee98:	ldp	x8, x0, [sp, #40]
  43ee9c:	add	x1, sp, #0x40
  43eea0:	mov	w2, wzr
  43eea4:	blr	x8
  43eea8:	mov	w8, #0x1                   	// #1
  43eeac:	mov	x28, xzr
  43eeb0:	str	w8, [sp, #56]
  43eeb4:	b	43eef8 <feof@plt+0x3c528>
  43eeb8:	mov	x0, sp
  43eebc:	bl	43aae0 <feof@plt+0x38110>
  43eec0:	mov	x28, x0
  43eec4:	b	43eef8 <feof@plt+0x3c528>
  43eec8:	ldr	w10, [sp, #32]
  43eecc:	add	x11, x8, #0x4
  43eed0:	sub	x9, x9, #0x4
  43eed4:	stp	x11, x9, [sp, #16]
  43eed8:	cbz	w10, 43eef4 <feof@plt+0x3c524>
  43eedc:	ldr	w8, [x8]
  43eee0:	lsl	x8, x8, #32
  43eee4:	rev	x28, x8
  43eee8:	b	43eef8 <feof@plt+0x3c528>
  43eeec:	ldrh	w28, [x8]
  43eef0:	b	43eef8 <feof@plt+0x3c528>
  43eef4:	ldr	w28, [x8]
  43eef8:	ldr	w8, [x22, #48]
  43eefc:	sub	w8, w8, #0x1
  43ef00:	cmp	w8, #0x7
  43ef04:	b.hi	43ef6c <feof@plt+0x3c59c>  // b.pmore
  43ef08:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ef0c:	add	x11, x11, #0xb9c
  43ef10:	adr	x9, 43ef20 <feof@plt+0x3c550>
  43ef14:	ldrb	w10, [x11, x8]
  43ef18:	add	x9, x9, x10, lsl #2
  43ef1c:	br	x9
  43ef20:	ldp	x8, x9, [sp, #16]
  43ef24:	cbz	x9, 43eff8 <feof@plt+0x3c628>
  43ef28:	add	x10, x8, #0x1
  43ef2c:	sub	x9, x9, #0x1
  43ef30:	stp	x10, x9, [sp, #16]
  43ef34:	ldrb	w0, [x8]
  43ef38:	b	43f09c <feof@plt+0x3c6cc>
  43ef3c:	ldp	x8, x9, [sp, #16]
  43ef40:	cmp	x9, #0x1
  43ef44:	b.ls	43efb8 <feof@plt+0x3c5e8>  // b.plast
  43ef48:	ldr	w10, [sp, #32]
  43ef4c:	add	x11, x8, #0x2
  43ef50:	sub	x9, x9, #0x2
  43ef54:	stp	x11, x9, [sp, #16]
  43ef58:	cbz	w10, 43f048 <feof@plt+0x3c678>
  43ef5c:	ldrh	w8, [x8]
  43ef60:	lsl	x8, x8, #48
  43ef64:	rev	x0, x8
  43ef68:	b	43f09c <feof@plt+0x3c6cc>
  43ef6c:	ldr	w8, [sp, #16]
  43ef70:	ldr	w9, [sp, #8]
  43ef74:	ldr	x4, [sp]
  43ef78:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ef7c:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43ef80:	sub	w5, w8, w9
  43ef84:	add	x0, sp, #0x40
  43ef88:	mov	w1, #0xc8                  	// #200
  43ef8c:	add	x2, x2, #0xbd7
  43ef90:	add	x3, x3, #0xc6f
  43ef94:	bl	402740 <snprintf@plt>
  43ef98:	ldp	x8, x0, [sp, #40]
  43ef9c:	add	x1, sp, #0x40
  43efa0:	mov	w2, wzr
  43efa4:	blr	x8
  43efa8:	b	43efc0 <feof@plt+0x3c5f0>
  43efac:	ldp	x8, x9, [sp, #16]
  43efb0:	cmp	x9, #0x3
  43efb4:	b.hi	43efd4 <feof@plt+0x3c604>  // b.pmore
  43efb8:	ldr	w9, [sp, #56]
  43efbc:	cbz	w9, 43f008 <feof@plt+0x3c638>
  43efc0:	mov	x0, xzr
  43efc4:	b	43f09c <feof@plt+0x3c6cc>
  43efc8:	mov	x0, sp
  43efcc:	bl	43aae0 <feof@plt+0x38110>
  43efd0:	b	43f09c <feof@plt+0x3c6cc>
  43efd4:	ldr	w10, [sp, #32]
  43efd8:	add	x11, x8, #0x4
  43efdc:	sub	x9, x9, #0x4
  43efe0:	stp	x11, x9, [sp, #16]
  43efe4:	cbz	w10, 43f050 <feof@plt+0x3c680>
  43efe8:	ldr	w8, [x8]
  43efec:	lsl	x8, x8, #32
  43eff0:	rev	x0, x8
  43eff4:	b	43f09c <feof@plt+0x3c6cc>
  43eff8:	ldr	w9, [sp, #56]
  43effc:	cbz	w9, 43f058 <feof@plt+0x3c688>
  43f000:	mov	w0, wzr
  43f004:	b	43f09c <feof@plt+0x3c6cc>
  43f008:	ldr	w9, [sp, #8]
  43f00c:	ldr	x4, [sp]
  43f010:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f014:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f018:	sub	w5, w8, w9
  43f01c:	add	x0, sp, #0x40
  43f020:	mov	w1, #0xc8                  	// #200
  43f024:	add	x2, x2, #0xbd7
  43f028:	add	x3, x3, #0xbc7
  43f02c:	bl	402740 <snprintf@plt>
  43f030:	ldp	x8, x0, [sp, #40]
  43f034:	add	x1, sp, #0x40
  43f038:	mov	w2, wzr
  43f03c:	blr	x8
  43f040:	mov	x0, xzr
  43f044:	b	43f094 <feof@plt+0x3c6c4>
  43f048:	ldrh	w0, [x8]
  43f04c:	b	43f09c <feof@plt+0x3c6cc>
  43f050:	ldr	w0, [x8]
  43f054:	b	43f09c <feof@plt+0x3c6cc>
  43f058:	ldr	w9, [sp, #8]
  43f05c:	ldr	x4, [sp]
  43f060:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f064:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f068:	sub	w5, w8, w9
  43f06c:	add	x0, sp, #0x40
  43f070:	mov	w1, #0xc8                  	// #200
  43f074:	add	x2, x2, #0xbd7
  43f078:	add	x3, x3, #0xbc7
  43f07c:	bl	402740 <snprintf@plt>
  43f080:	ldp	x8, x0, [sp, #40]
  43f084:	add	x1, sp, #0x40
  43f088:	mov	w2, wzr
  43f08c:	blr	x8
  43f090:	mov	w0, wzr
  43f094:	mov	w8, #0x1                   	// #1
  43f098:	str	w8, [sp, #56]
  43f09c:	orr	x8, x0, x28
  43f0a0:	cbz	x8, 43f1ac <feof@plt+0x3c7dc>
  43f0a4:	ldr	w8, [x22, #48]
  43f0a8:	sub	w8, w8, #0x1
  43f0ac:	cmp	w8, #0x7
  43f0b0:	b.hi	43f100 <feof@plt+0x3c730>  // b.pmore
  43f0b4:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f0b8:	add	x11, x11, #0xba4
  43f0bc:	adr	x9, 43f0cc <feof@plt+0x3c6fc>
  43f0c0:	ldrb	w10, [x11, x8]
  43f0c4:	add	x9, x9, x10, lsl #2
  43f0c8:	br	x9
  43f0cc:	cmp	x28, #0xff
  43f0d0:	b.eq	43eda0 <feof@plt+0x3c3d0>  // b.none
  43f0d4:	b	43f100 <feof@plt+0x3c730>
  43f0d8:	mov	w8, #0xffff                	// #65535
  43f0dc:	cmp	x28, x8
  43f0e0:	b.eq	43eda0 <feof@plt+0x3c3d0>  // b.none
  43f0e4:	b	43f100 <feof@plt+0x3c730>
  43f0e8:	mov	w8, #0xffffffff            	// #-1
  43f0ec:	cmp	x28, x8
  43f0f0:	b.ne	43f100 <feof@plt+0x3c730>  // b.any
  43f0f4:	b	43eda0 <feof@plt+0x3c3d0>
  43f0f8:	cmn	x28, #0x1
  43f0fc:	b.eq	43eda0 <feof@plt+0x3c3d0>  // b.none
  43f100:	ldr	x9, [x23, #16]
  43f104:	ldr	x8, [x26, #24]
  43f108:	add	x9, x9, x24
  43f10c:	add	x27, x9, x28
  43f110:	add	x28, x9, x0
  43f114:	cbz	x8, 43f14c <feof@plt+0x3c77c>
  43f118:	ldr	x9, [x26]
  43f11c:	mov	w10, #0x18                  	// #24
  43f120:	madd	x9, x8, x10, x9
  43f124:	ldur	x8, [x9, #-16]
  43f128:	cmp	x27, x8
  43f12c:	b.eq	43f13c <feof@plt+0x3c76c>  // b.none
  43f130:	add	x10, x8, #0x1
  43f134:	cmp	x27, x10
  43f138:	b.ne	43f14c <feof@plt+0x3c77c>  // b.any
  43f13c:	sub	x9, x9, #0x18
  43f140:	ldr	x10, [x9, #16]
  43f144:	cmp	x10, x21
  43f148:	b.eq	43f180 <feof@plt+0x3c7b0>  // b.none
  43f14c:	mov	w1, #0x18                  	// #24
  43f150:	mov	x0, x25
  43f154:	mov	x2, x19
  43f158:	mov	x3, x20
  43f15c:	mov	x4, x26
  43f160:	bl	435724 <feof@plt+0x32d54>
  43f164:	cbz	x0, 43f1b8 <feof@plt+0x3c7e8>
  43f168:	stp	x27, x28, [x0]
  43f16c:	str	x21, [x0, #16]
  43f170:	ldr	x8, [x26, #24]
  43f174:	add	x8, x8, #0x1
  43f178:	str	x8, [x26, #24]
  43f17c:	b	43eda4 <feof@plt+0x3c3d4>
  43f180:	cmp	x28, x8
  43f184:	b.ls	43eda4 <feof@plt+0x3c3d4>  // b.plast
  43f188:	str	x28, [x9, #8]
  43f18c:	b	43eda4 <feof@plt+0x3c3d4>
  43f190:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f194:	add	x1, x1, #0xe00
  43f198:	mov	x0, x20
  43f19c:	mov	w2, wzr
  43f1a0:	blr	x19
  43f1a4:	mov	w0, wzr
  43f1a8:	b	43f1b8 <feof@plt+0x3c7e8>
  43f1ac:	ldr	w8, [sp, #56]
  43f1b0:	cmp	w8, #0x0
  43f1b4:	cset	w0, eq  // eq = none
  43f1b8:	ldp	x20, x19, [sp, #352]
  43f1bc:	ldp	x22, x21, [sp, #336]
  43f1c0:	ldp	x24, x23, [sp, #320]
  43f1c4:	ldp	x26, x25, [sp, #304]
  43f1c8:	ldp	x28, x27, [sp, #288]
  43f1cc:	ldp	x29, x30, [sp, #272]
  43f1d0:	add	sp, sp, #0x170
  43f1d4:	ret
  43f1d8:	sub	sp, sp, #0x180
  43f1dc:	stp	x29, x30, [sp, #288]
  43f1e0:	stp	x28, x27, [sp, #304]
  43f1e4:	stp	x26, x25, [sp, #320]
  43f1e8:	stp	x24, x23, [sp, #336]
  43f1ec:	stp	x22, x21, [sp, #352]
  43f1f0:	stp	x20, x19, [sp, #368]
  43f1f4:	add	x29, sp, #0x120
  43f1f8:	ldr	x9, [x1, #16]
  43f1fc:	mov	x20, x4
  43f200:	mov	x19, x3
  43f204:	cmp	x9, x2
  43f208:	b.hi	43f338 <feof@plt+0x3c968>  // b.pmore
  43f20c:	ldr	x8, [x1, #8]
  43f210:	sub	x9, x2, x9
  43f214:	mov	x21, x1
  43f218:	cmp	x8, x9
  43f21c:	b.ls	43f338 <feof@plt+0x3c968>  // b.plast
  43f220:	adrp	x10, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f224:	add	x10, x10, #0x954
  43f228:	str	x10, [sp, #16]
  43f22c:	ldr	x10, [x0, #56]
  43f230:	mov	x22, x0
  43f234:	str	x10, [sp, #24]
  43f238:	ldr	x11, [x21]
  43f23c:	subs	x10, x8, x9
  43f240:	add	x9, x11, x9
  43f244:	stp	x9, x10, [sp, #32]
  43f248:	ldr	w8, [x0, #120]
  43f24c:	stp	x19, x20, [sp, #56]
  43f250:	str	wzr, [sp, #72]
  43f254:	str	w8, [sp, #48]
  43f258:	b.eq	43f2ec <feof@plt+0x3c91c>  // b.none
  43f25c:	adrp	x23, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f260:	adrp	x24, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f264:	mov	w8, wzr
  43f268:	mov	w26, wzr
  43f26c:	mov	x25, xzr
  43f270:	add	x23, x23, #0xbd7
  43f274:	add	x24, x24, #0xc90
  43f278:	add	x11, x9, #0x1
  43f27c:	sub	x10, x10, #0x1
  43f280:	stp	x11, x10, [sp, #32]
  43f284:	ldrb	w27, [x9]
  43f288:	cmp	w26, #0x3f
  43f28c:	b.hi	43f2a0 <feof@plt+0x3c8d0>  // b.pmore
  43f290:	and	x9, x27, #0x7f
  43f294:	lsl	x9, x9, x26
  43f298:	orr	x25, x9, x25
  43f29c:	b	43f2d8 <feof@plt+0x3c908>
  43f2a0:	cbnz	w8, 43f2d8 <feof@plt+0x3c908>
  43f2a4:	ldr	w8, [sp, #24]
  43f2a8:	ldr	x4, [sp, #16]
  43f2ac:	add	x0, sp, #0x50
  43f2b0:	mov	w1, #0xc8                  	// #200
  43f2b4:	sub	w5, w11, w8
  43f2b8:	mov	x2, x23
  43f2bc:	mov	x3, x24
  43f2c0:	bl	402740 <snprintf@plt>
  43f2c4:	ldp	x8, x0, [sp, #56]
  43f2c8:	add	x1, sp, #0x50
  43f2cc:	mov	w2, wzr
  43f2d0:	blr	x8
  43f2d4:	mov	w8, #0x1                   	// #1
  43f2d8:	sxtb	w9, w27
  43f2dc:	tbz	w9, #31, 43f350 <feof@plt+0x3c980>
  43f2e0:	ldp	x9, x10, [sp, #32]
  43f2e4:	add	w26, w26, #0x7
  43f2e8:	cbnz	x10, 43f278 <feof@plt+0x3c8a8>
  43f2ec:	ldr	w8, [sp, #72]
  43f2f0:	cbnz	w8, 43f39c <feof@plt+0x3c9cc>
  43f2f4:	ldr	w8, [sp, #24]
  43f2f8:	ldr	x4, [sp, #16]
  43f2fc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f300:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f304:	sub	w5, w9, w8
  43f308:	add	x2, x2, #0xbd7
  43f30c:	add	x3, x3, #0xbc7
  43f310:	add	x0, sp, #0x50
  43f314:	mov	w1, #0xc8                  	// #200
  43f318:	bl	402740 <snprintf@plt>
  43f31c:	ldp	x8, x0, [sp, #56]
  43f320:	add	x1, sp, #0x50
  43f324:	mov	w2, wzr
  43f328:	blr	x8
  43f32c:	mov	w8, #0x1                   	// #1
  43f330:	str	w8, [sp, #72]
  43f334:	b	43f39c <feof@plt+0x3c9cc>
  43f338:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f33c:	add	x1, x1, #0xda9
  43f340:	mov	x0, x20
  43f344:	mov	w2, wzr
  43f348:	blr	x19
  43f34c:	b	43f3d8 <feof@plt+0x3ca08>
  43f350:	cbz	x25, 43f39c <feof@plt+0x3c9cc>
  43f354:	ldr	x8, [x21, #88]
  43f358:	sub	x10, x25, #0x1
  43f35c:	cmp	x10, x8
  43f360:	b.cs	43f4c0 <feof@plt+0x3caf0>  // b.hs, b.nlast
  43f364:	ldr	x9, [x21, #96]
  43f368:	add	x24, x9, x10, lsl #5
  43f36c:	ldr	x10, [x24]
  43f370:	cmp	x10, x25
  43f374:	b.ne	43f4c8 <feof@plt+0x3caf8>  // b.any
  43f378:	cbz	x24, 43f3d8 <feof@plt+0x3ca08>
  43f37c:	ldr	x8, [x24, #16]
  43f380:	cbz	x8, 43f3d8 <feof@plt+0x3ca08>
  43f384:	mov	x25, xzr
  43f388:	mov	x26, xzr
  43f38c:	mov	x23, xzr
  43f390:	add	x27, sp, #0x50
  43f394:	mov	w28, #0x2007                	// #8199
  43f398:	b	43f420 <feof@plt+0x3ca50>
  43f39c:	ldr	w8, [sp, #32]
  43f3a0:	ldr	w9, [sp, #24]
  43f3a4:	ldr	x4, [sp, #16]
  43f3a8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f3ac:	adrp	x3, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f3b0:	sub	w5, w8, w9
  43f3b4:	add	x2, x2, #0xbd7
  43f3b8:	add	x3, x3, #0xdd7
  43f3bc:	add	x0, sp, #0x50
  43f3c0:	mov	w1, #0xc8                  	// #200
  43f3c4:	bl	402740 <snprintf@plt>
  43f3c8:	ldp	x8, x0, [sp, #56]
  43f3cc:	add	x1, sp, #0x50
  43f3d0:	mov	w2, wzr
  43f3d4:	blr	x8
  43f3d8:	mov	x23, xzr
  43f3dc:	mov	x0, x23
  43f3e0:	ldp	x20, x19, [sp, #368]
  43f3e4:	ldp	x22, x21, [sp, #352]
  43f3e8:	ldp	x24, x23, [sp, #336]
  43f3ec:	ldp	x26, x25, [sp, #320]
  43f3f0:	ldp	x28, x27, [sp, #304]
  43f3f4:	ldp	x29, x30, [sp, #288]
  43f3f8:	add	sp, sp, #0x180
  43f3fc:	ret
  43f400:	ldr	w8, [sp, #80]
  43f404:	cmp	w8, #0x4
  43f408:	b.eq	43f510 <feof@plt+0x3cb40>  // b.none
  43f40c:	ldr	x8, [x24, #16]
  43f410:	add	x26, x26, #0x1
  43f414:	add	x25, x25, #0x8
  43f418:	cmp	x26, x8
  43f41c:	b.cs	43f3dc <feof@plt+0x3ca0c>  // b.hs, b.nlast
  43f420:	ldr	x8, [x24, #24]
  43f424:	ldp	w3, w2, [x21, #40]
  43f428:	ldr	w4, [x21, #48]
  43f42c:	ldp	x5, x6, [x22, #104]
  43f430:	add	x8, x8, x25
  43f434:	ldr	w0, [x8, #4]
  43f438:	ldr	x7, [x22, #8]
  43f43c:	add	x1, sp, #0x10
  43f440:	str	x27, [sp]
  43f444:	bl	43aba4 <feof@plt+0x381d4>
  43f448:	cbz	w0, 43f3d8 <feof@plt+0x3ca08>
  43f44c:	ldr	x8, [x24, #24]
  43f450:	add	x2, x8, x25
  43f454:	ldr	w8, [x2]
  43f458:	cmp	w8, #0x6d
  43f45c:	b.gt	43f494 <feof@plt+0x3cac4>
  43f460:	cmp	w8, #0x3
  43f464:	b.eq	43f4a8 <feof@plt+0x3cad8>  // b.none
  43f468:	cmp	w8, #0x47
  43f46c:	b.ne	43f40c <feof@plt+0x3ca3c>  // b.any
  43f470:	add	x3, sp, #0x50
  43f474:	mov	x0, x22
  43f478:	mov	x1, x21
  43f47c:	mov	x4, x19
  43f480:	mov	x5, x20
  43f484:	bl	43ec18 <feof@plt+0x3c248>
  43f488:	cmp	x0, #0x0
  43f48c:	csel	x23, x23, x0, eq  // eq = none
  43f490:	b	43f40c <feof@plt+0x3ca3c>
  43f494:	cmp	w8, #0x6e
  43f498:	b.eq	43f400 <feof@plt+0x3ca30>  // b.none
  43f49c:	cmp	w8, w28
  43f4a0:	b.eq	43f400 <feof@plt+0x3ca30>  // b.none
  43f4a4:	b	43f40c <feof@plt+0x3ca3c>
  43f4a8:	cbnz	x23, 43f40c <feof@plt+0x3ca3c>
  43f4ac:	ldr	w8, [sp, #80]
  43f4b0:	ldr	x9, [sp, #88]
  43f4b4:	cmp	w8, #0x4
  43f4b8:	csel	x23, x9, xzr, eq  // eq = none
  43f4bc:	b	43f40c <feof@plt+0x3ca3c>
  43f4c0:	cbz	x8, 43f504 <feof@plt+0x3cb34>
  43f4c4:	ldr	x9, [x21, #96]
  43f4c8:	mov	x10, xzr
  43f4cc:	b	43f4dc <feof@plt+0x3cb0c>
  43f4d0:	cmp	x10, x11
  43f4d4:	mov	x8, x11
  43f4d8:	b.cs	43f504 <feof@plt+0x3cb34>  // b.hs, b.nlast
  43f4dc:	add	x11, x8, x10
  43f4e0:	lsr	x11, x11, #1
  43f4e4:	add	x24, x9, x11, lsl #5
  43f4e8:	ldr	x12, [x24]
  43f4ec:	cmp	x12, x25
  43f4f0:	b.hi	43f4d0 <feof@plt+0x3cb00>  // b.pmore
  43f4f4:	b.cs	43f378 <feof@plt+0x3c9a8>  // b.hs, b.nlast
  43f4f8:	add	x10, x11, #0x1
  43f4fc:	mov	x11, x8
  43f500:	b	43f4d0 <feof@plt+0x3cb00>
  43f504:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f508:	add	x1, x1, #0xc01
  43f50c:	b	43f340 <feof@plt+0x3c970>
  43f510:	ldr	x23, [sp, #88]
  43f514:	b	43f3dc <feof@plt+0x3ca0c>
  43f518:	sub	sp, sp, #0x90
  43f51c:	stp	x29, x30, [sp, #48]
  43f520:	stp	x28, x27, [sp, #64]
  43f524:	stp	x26, x25, [sp, #80]
  43f528:	stp	x24, x23, [sp, #96]
  43f52c:	stp	x22, x21, [sp, #112]
  43f530:	stp	x20, x19, [sp, #128]
  43f534:	add	x29, sp, #0x30
  43f538:	cmp	x1, #0x2
  43f53c:	b.cs	43f560 <feof@plt+0x3cb90>  // b.hs, b.nlast
  43f540:	ldp	x20, x19, [sp, #128]
  43f544:	ldp	x22, x21, [sp, #112]
  43f548:	ldp	x24, x23, [sp, #96]
  43f54c:	ldp	x26, x25, [sp, #80]
  43f550:	ldp	x28, x27, [sp, #64]
  43f554:	ldp	x29, x30, [sp, #48]
  43f558:	add	sp, sp, #0x90
  43f55c:	ret
  43f560:	lsl	x8, x2, #1
  43f564:	mov	x19, x3
  43f568:	mov	x20, x2
  43f56c:	mov	x22, x1
  43f570:	mov	x21, x0
  43f574:	stur	x8, [x29, #-8]
  43f578:	and	x26, x2, #0xffffffffffffffe0
  43f57c:	add	x8, x2, #0x10
  43f580:	str	x8, [sp]
  43f584:	add	x8, x21, x20
  43f588:	str	x8, [sp, #16]
  43f58c:	add	x8, x21, x26
  43f590:	str	x8, [sp, #8]
  43f594:	ldr	x8, [sp]
  43f598:	add	x8, x21, x8
  43f59c:	str	x8, [sp, #24]
  43f5a0:	add	x8, x21, #0x10
  43f5a4:	stur	x8, [x29, #-16]
  43f5a8:	cbz	x20, 43f610 <feof@plt+0x3cc40>
  43f5ac:	lsr	x10, x22, #1
  43f5b0:	mul	x9, x10, x20
  43f5b4:	cmp	x20, #0x20
  43f5b8:	add	x8, x21, x9
  43f5bc:	b.cc	43f5dc <feof@plt+0x3cc0c>  // b.lo, b.ul, b.last
  43f5c0:	add	x10, x10, #0x1
  43f5c4:	madd	x10, x10, x20, x21
  43f5c8:	cmp	x21, x10
  43f5cc:	b.cs	43f798 <feof@plt+0x3cdc8>  // b.hs, b.nlast
  43f5d0:	ldr	x10, [sp, #16]
  43f5d4:	cmp	x8, x10
  43f5d8:	b.cs	43f798 <feof@plt+0x3cdc8>  // b.hs, b.nlast
  43f5dc:	mov	x10, xzr
  43f5e0:	mov	x9, x21
  43f5e4:	sub	x10, x20, x10
  43f5e8:	ldrb	w11, [x8]
  43f5ec:	ldrb	w12, [x9]
  43f5f0:	subs	x10, x10, #0x1
  43f5f4:	strb	w11, [x9], #1
  43f5f8:	strb	w12, [x8], #1
  43f5fc:	b.ne	43f5e8 <feof@plt+0x3cc18>  // b.any
  43f600:	cmp	x22, #0x2
  43f604:	b.cs	43f610 <feof@plt+0x3cc40>  // b.hs, b.nlast
  43f608:	mov	x23, xzr
  43f60c:	b	43f768 <feof@plt+0x3cd98>
  43f610:	ldr	x28, [sp, #24]
  43f614:	mov	x27, xzr
  43f618:	mov	x23, xzr
  43f61c:	mov	w25, #0x1                   	// #1
  43f620:	b	43f63c <feof@plt+0x3cc6c>
  43f624:	mov	x23, x8
  43f628:	add	x25, x25, #0x1
  43f62c:	add	x27, x27, #0x1
  43f630:	cmp	x25, x22
  43f634:	add	x28, x28, x20
  43f638:	b.eq	43f710 <feof@plt+0x3cd40>  // b.none
  43f63c:	madd	x24, x25, x20, x21
  43f640:	mov	x0, x21
  43f644:	mov	x1, x24
  43f648:	blr	x19
  43f64c:	cmp	w0, #0x1
  43f650:	b.lt	43f628 <feof@plt+0x3cc58>  // b.tstop
  43f654:	add	x8, x23, #0x1
  43f658:	cmp	x25, x8
  43f65c:	b.eq	43f624 <feof@plt+0x3cc54>  // b.none
  43f660:	cbz	x20, 43f624 <feof@plt+0x3cc54>
  43f664:	mul	x10, x8, x20
  43f668:	cmp	x20, #0x20
  43f66c:	add	x9, x21, x10
  43f670:	b.cc	43f6a4 <feof@plt+0x3ccd4>  // b.lo, b.ul, b.last
  43f674:	ldur	x12, [x29, #-8]
  43f678:	mul	x11, x27, x20
  43f67c:	add	x12, x12, x11
  43f680:	add	x12, x21, x12
  43f684:	cmp	x9, x12
  43f688:	b.cs	43f6c8 <feof@plt+0x3ccf8>  // b.hs, b.nlast
  43f68c:	add	x11, x11, x20
  43f690:	add	x12, x23, #0x2
  43f694:	add	x11, x21, x11
  43f698:	madd	x12, x12, x20, x21
  43f69c:	cmp	x11, x12
  43f6a0:	b.cs	43f6c8 <feof@plt+0x3ccf8>  // b.hs, b.nlast
  43f6a4:	mov	x10, xzr
  43f6a8:	sub	x10, x20, x10
  43f6ac:	ldrb	w11, [x24]
  43f6b0:	ldrb	w12, [x9]
  43f6b4:	subs	x10, x10, #0x1
  43f6b8:	strb	w11, [x9], #1
  43f6bc:	strb	w12, [x24], #1
  43f6c0:	b.ne	43f6ac <feof@plt+0x3ccdc>  // b.any
  43f6c4:	b	43f624 <feof@plt+0x3cc54>
  43f6c8:	ldur	x11, [x29, #-16]
  43f6cc:	add	x9, x9, x26
  43f6d0:	add	x24, x24, x26
  43f6d4:	mov	x12, x26
  43f6d8:	add	x10, x11, x10
  43f6dc:	mov	x11, x28
  43f6e0:	ldp	q0, q3, [x10, #-16]
  43f6e4:	ldp	q1, q2, [x11, #-16]
  43f6e8:	subs	x12, x12, #0x20
  43f6ec:	stp	q1, q2, [x10, #-16]
  43f6f0:	stp	q0, q3, [x11, #-16]
  43f6f4:	add	x11, x11, #0x20
  43f6f8:	add	x10, x10, #0x20
  43f6fc:	b.ne	43f6e0 <feof@plt+0x3cd10>  // b.any
  43f700:	cmp	x26, x20
  43f704:	mov	x10, x26
  43f708:	b.eq	43f624 <feof@plt+0x3cc54>  // b.none
  43f70c:	b	43f6a8 <feof@plt+0x3ccd8>
  43f710:	cbz	x23, 43f768 <feof@plt+0x3cd98>
  43f714:	cbz	x20, 43f768 <feof@plt+0x3cd98>
  43f718:	mul	x9, x23, x20
  43f71c:	cmp	x20, #0x20
  43f720:	add	x8, x21, x9
  43f724:	b.cc	43f744 <feof@plt+0x3cd74>  // b.lo, b.ul, b.last
  43f728:	add	x10, x23, #0x1
  43f72c:	madd	x10, x10, x20, x21
  43f730:	cmp	x21, x10
  43f734:	b.cs	43f7d4 <feof@plt+0x3ce04>  // b.hs, b.nlast
  43f738:	ldr	x10, [sp, #16]
  43f73c:	cmp	x8, x10
  43f740:	b.cs	43f7d4 <feof@plt+0x3ce04>  // b.hs, b.nlast
  43f744:	mov	x10, xzr
  43f748:	mov	x9, x21
  43f74c:	sub	x10, x20, x10
  43f750:	ldrb	w11, [x8]
  43f754:	ldrb	w12, [x9]
  43f758:	subs	x10, x10, #0x1
  43f75c:	strb	w11, [x9], #1
  43f760:	strb	w12, [x8], #1
  43f764:	b.ne	43f750 <feof@plt+0x3cd80>  // b.any
  43f768:	cmp	x22, x23, lsl #1
  43f76c:	b.hi	43f810 <feof@plt+0x3ce40>  // b.pmore
  43f770:	add	x8, x23, #0x1
  43f774:	madd	x0, x8, x20, x21
  43f778:	sub	x1, x22, x8
  43f77c:	mov	x2, x20
  43f780:	mov	x3, x19
  43f784:	bl	43f518 <feof@plt+0x3cb48>
  43f788:	cmp	x23, #0x2
  43f78c:	mov	x22, x23
  43f790:	b.cs	43f5a8 <feof@plt+0x3cbd8>  // b.hs, b.nlast
  43f794:	b	43f540 <feof@plt+0x3cb70>
  43f798:	add	x8, x8, x26
  43f79c:	mov	x10, x26
  43f7a0:	mov	x11, x21
  43f7a4:	add	x12, x11, x9
  43f7a8:	ldp	q0, q1, [x12]
  43f7ac:	ldp	q2, q3, [x11]
  43f7b0:	subs	x10, x10, #0x20
  43f7b4:	stp	q0, q1, [x11], #32
  43f7b8:	stp	q2, q3, [x12]
  43f7bc:	b.ne	43f7a4 <feof@plt+0x3cdd4>  // b.any
  43f7c0:	ldr	x9, [sp, #8]
  43f7c4:	cmp	x26, x20
  43f7c8:	mov	x10, x26
  43f7cc:	b.ne	43f5e4 <feof@plt+0x3cc14>  // b.any
  43f7d0:	b	43f600 <feof@plt+0x3cc30>
  43f7d4:	add	x8, x8, x26
  43f7d8:	mov	x10, x26
  43f7dc:	mov	x11, x21
  43f7e0:	add	x12, x11, x9
  43f7e4:	ldp	q0, q1, [x12]
  43f7e8:	ldp	q2, q3, [x11]
  43f7ec:	subs	x10, x10, #0x20
  43f7f0:	stp	q0, q1, [x11], #32
  43f7f4:	stp	q2, q3, [x12]
  43f7f8:	b.ne	43f7e0 <feof@plt+0x3ce10>  // b.any
  43f7fc:	ldr	x9, [sp, #8]
  43f800:	cmp	x26, x20
  43f804:	mov	x10, x26
  43f808:	b.ne	43f74c <feof@plt+0x3cd7c>  // b.any
  43f80c:	b	43f768 <feof@plt+0x3cd98>
  43f810:	mov	x0, x21
  43f814:	mov	x1, x23
  43f818:	mov	x2, x20
  43f81c:	mov	x3, x19
  43f820:	bl	43f518 <feof@plt+0x3cb48>
  43f824:	add	x8, x23, #0x1
  43f828:	sub	x22, x22, x8
  43f82c:	cmp	x22, #0x2
  43f830:	madd	x21, x8, x20, x21
  43f834:	b.cs	43f584 <feof@plt+0x3cbb4>  // b.hs, b.nlast
  43f838:	b	43f540 <feof@plt+0x3cb70>
  43f83c:	mov	x8, x0
  43f840:	mov	w0, wzr
  43f844:	cbz	x8, 43f860 <feof@plt+0x3ce90>
  43f848:	cbz	x1, 43f860 <feof@plt+0x3ce90>
  43f84c:	cmp	w2, #0x1
  43f850:	b.lt	43f860 <feof@plt+0x3ce90>  // b.tstop
  43f854:	mov	w0, #0x1                   	// #1
  43f858:	stp	xzr, x1, [x8]
  43f85c:	str	w2, [x8, #16]
  43f860:	ret
  43f864:	mov	x8, x0
  43f868:	mov	w0, wzr
  43f86c:	cbz	x8, 43f890 <feof@plt+0x3cec0>
  43f870:	tbnz	w1, #31, 43f890 <feof@plt+0x3cec0>
  43f874:	cbz	x2, 43f890 <feof@plt+0x3cec0>
  43f878:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f87c:	ldr	d0, [x9, #3624]
  43f880:	mov	w0, #0x1                   	// #1
  43f884:	str	w1, [x8, #8]
  43f888:	str	x2, [x8, #16]
  43f88c:	str	d0, [x8]
  43f890:	ret
  43f894:	sub	w9, w1, #0x1
  43f898:	mov	x8, x0
  43f89c:	cmp	w9, #0x4
  43f8a0:	mov	w0, wzr
  43f8a4:	b.hi	43f8c8 <feof@plt+0x3cef8>  // b.pmore
  43f8a8:	cbz	x8, 43f8c8 <feof@plt+0x3cef8>
  43f8ac:	cbz	x2, 43f8c8 <feof@plt+0x3cef8>
  43f8b0:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0xea68>
  43f8b4:	ldr	d0, [x9, #3632]
  43f8b8:	mov	w0, #0x1                   	// #1
  43f8bc:	str	w1, [x8, #8]
  43f8c0:	str	x2, [x8, #16]
  43f8c4:	str	d0, [x8]
  43f8c8:	ret
  43f8cc:	sub	w9, w1, #0x1
  43f8d0:	mov	x8, x0
  43f8d4:	cmp	w9, #0x4
  43f8d8:	mov	w0, wzr
  43f8dc:	b.hi	43f900 <feof@plt+0x3cf30>  // b.pmore
  43f8e0:	cbz	x8, 43f900 <feof@plt+0x3cf30>
  43f8e4:	cbz	x2, 43f900 <feof@plt+0x3cf30>
  43f8e8:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  43f8ec:	ldr	d0, [x9, #1896]
  43f8f0:	mov	w0, #0x1                   	// #1
  43f8f4:	str	w1, [x8, #8]
  43f8f8:	str	x2, [x8, #16]
  43f8fc:	str	d0, [x8]
  43f900:	ret
  43f904:	stp	x29, x30, [sp, #-32]!
  43f908:	stp	x20, x19, [sp, #16]
  43f90c:	ldr	x8, [x0, #24]
  43f910:	mov	x19, x0
  43f914:	mov	w20, w1
  43f918:	mov	x29, sp
  43f91c:	ldrb	w9, [x8]
  43f920:	cmp	w9, #0x5f
  43f924:	b.ne	43f93c <feof@plt+0x3cf6c>  // b.any
  43f928:	add	x10, x8, #0x1
  43f92c:	str	x10, [x19, #24]
  43f930:	ldrb	w9, [x8, #1]
  43f934:	mov	x8, x10
  43f938:	b	43f940 <feof@plt+0x3cf70>
  43f93c:	cbnz	w20, 43f984 <feof@plt+0x3cfb4>
  43f940:	cmp	w9, #0x5a
  43f944:	b.ne	43f984 <feof@plt+0x3cfb4>  // b.any
  43f948:	add	x8, x8, #0x1
  43f94c:	mov	x0, x19
  43f950:	mov	w1, w20
  43f954:	str	x8, [x19, #24]
  43f958:	bl	43fac0 <feof@plt+0x3d0f0>
  43f95c:	cbz	w20, 43faac <feof@plt+0x3d0dc>
  43f960:	ldrb	w8, [x19, #16]
  43f964:	tbz	w8, #0, 43faac <feof@plt+0x3d0dc>
  43f968:	ldr	x11, [x19, #24]
  43f96c:	ldrb	w8, [x11]
  43f970:	cmp	w8, #0x2e
  43f974:	b.ne	43faac <feof@plt+0x3d0dc>  // b.any
  43f978:	mov	w9, #0x18                  	// #24
  43f97c:	mov	w10, #0x4e                  	// #78
  43f980:	b	43f9a4 <feof@plt+0x3cfd4>
  43f984:	mov	x8, xzr
  43f988:	b	43fab0 <feof@plt+0x3d0e0>
  43f98c:	mov	x8, xzr
  43f990:	ldr	x11, [x19, #24]
  43f994:	mov	x0, x8
  43f998:	ldrb	w12, [x11]
  43f99c:	cmp	w12, #0x2e
  43f9a0:	b.ne	43fab0 <feof@plt+0x3d0e0>  // b.any
  43f9a4:	ldrb	w8, [x11, #1]
  43f9a8:	cmp	w8, #0x5f
  43f9ac:	b.eq	43f9d4 <feof@plt+0x3d004>  // b.none
  43f9b0:	sub	w12, w8, #0x61
  43f9b4:	and	w12, w12, #0xff
  43f9b8:	cmp	w12, #0x1a
  43f9bc:	b.cc	43f9d4 <feof@plt+0x3d004>  // b.lo, b.ul, b.last
  43f9c0:	sub	w8, w8, #0x30
  43f9c4:	cmp	w8, #0xa
  43f9c8:	mov	x12, x11
  43f9cc:	b.cc	43f9fc <feof@plt+0x3d02c>  // b.lo, b.ul, b.last
  43f9d0:	b	43faac <feof@plt+0x3d0dc>
  43f9d4:	add	x12, x11, #0x1
  43f9d8:	ldrb	w8, [x12, #1]!
  43f9dc:	cmp	w8, #0x5f
  43f9e0:	sub	w13, w8, #0x61
  43f9e4:	b.eq	43f9d8 <feof@plt+0x3d008>  // b.none
  43f9e8:	and	w13, w13, #0xff
  43f9ec:	cmp	w13, #0x1a
  43f9f0:	b.cc	43f9d8 <feof@plt+0x3d008>  // b.lo, b.ul, b.last
  43f9f4:	cmp	w8, #0x2e
  43f9f8:	b.ne	43fa24 <feof@plt+0x3d054>  // b.any
  43f9fc:	ldrb	w8, [x12, #1]
  43fa00:	sub	w8, w8, #0x30
  43fa04:	cmp	w8, #0x9
  43fa08:	b.hi	43fa24 <feof@plt+0x3d054>  // b.pmore
  43fa0c:	add	x12, x12, #0x1
  43fa10:	ldrb	w8, [x12, #1]!
  43fa14:	sub	w13, w8, #0x30
  43fa18:	cmp	w13, #0xa
  43fa1c:	b.cc	43fa10 <feof@plt+0x3d040>  // b.lo, b.ul, b.last
  43fa20:	b	43f9f4 <feof@plt+0x3d024>
  43fa24:	ldp	w13, w8, [x19, #40]
  43fa28:	str	x12, [x19, #24]
  43fa2c:	sxtw	x13, w13
  43fa30:	cmp	w13, w8
  43fa34:	mov	x8, xzr
  43fa38:	b.ge	43f990 <feof@plt+0x3cfc0>  // b.tcont
  43fa3c:	ldr	x15, [x19, #32]
  43fa40:	sub	w14, w12, w11
  43fa44:	add	w16, w13, #0x1
  43fa48:	cmp	w14, #0x1
  43fa4c:	madd	x12, x13, x9, x15
  43fa50:	str	wzr, [x12, #4]
  43fa54:	str	w16, [x19, #40]
  43fa58:	b.lt	43f990 <feof@plt+0x3cfc0>  // b.tstop
  43fa5c:	cbz	x15, 43f990 <feof@plt+0x3cfc0>
  43fa60:	madd	x8, x13, x9, x15
  43fa64:	str	xzr, [x12]
  43fa68:	str	x11, [x8, #8]
  43fa6c:	str	w14, [x8, #16]
  43fa70:	cbz	x0, 43f98c <feof@plt+0x3cfbc>
  43fa74:	ldp	w11, w8, [x19, #40]
  43fa78:	sxtw	x11, w11
  43fa7c:	cmp	w11, w8
  43fa80:	b.ge	43f98c <feof@plt+0x3cfbc>  // b.tcont
  43fa84:	ldr	x13, [x19, #32]
  43fa88:	add	w14, w11, #0x1
  43fa8c:	madd	x8, x11, x9, x13
  43fa90:	str	wzr, [x8, #4]
  43fa94:	str	w14, [x19, #40]
  43fa98:	cbz	x13, 43f98c <feof@plt+0x3cfbc>
  43fa9c:	madd	x11, x11, x9, x13
  43faa0:	str	w10, [x8]
  43faa4:	stp	x0, x12, [x11, #8]
  43faa8:	b	43f990 <feof@plt+0x3cfc0>
  43faac:	mov	x8, x0
  43fab0:	ldp	x20, x19, [sp, #16]
  43fab4:	mov	x0, x8
  43fab8:	ldp	x29, x30, [sp], #32
  43fabc:	ret
  43fac0:	stp	x29, x30, [sp, #-48]!
  43fac4:	stp	x22, x21, [sp, #16]
  43fac8:	stp	x20, x19, [sp, #32]
  43facc:	mov	x22, x0
  43fad0:	ldr	x9, [x22, #24]!
  43fad4:	mov	x19, x0
  43fad8:	mov	x29, sp
  43fadc:	ldrb	w8, [x9]
  43fae0:	cmp	w8, #0x54
  43fae4:	b.eq	43faf0 <feof@plt+0x3d120>  // b.none
  43fae8:	cmp	w8, #0x47
  43faec:	b.ne	43fb94 <feof@plt+0x3d1c4>  // b.any
  43faf0:	ldr	w10, [x19, #72]
  43faf4:	add	w8, w10, #0x14
  43faf8:	str	w8, [x19, #72]
  43fafc:	ldrb	w8, [x9]
  43fb00:	cmp	w8, #0x47
  43fb04:	b.eq	43fbe4 <feof@plt+0x3d214>  // b.none
  43fb08:	cmp	w8, #0x54
  43fb0c:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  43fb10:	add	x8, x9, #0x1
  43fb14:	str	x8, [x22]
  43fb18:	ldrb	w8, [x9, #1]
  43fb1c:	cbz	w8, 440c44 <feof@plt+0x3e274>
  43fb20:	add	x8, x9, #0x2
  43fb24:	str	x8, [x22]
  43fb28:	ldrb	w11, [x9, #1]
  43fb2c:	mov	x20, xzr
  43fb30:	sub	w11, w11, #0x41
  43fb34:	cmp	w11, #0x35
  43fb38:	b.hi	440c48 <feof@plt+0x3e278>  // b.pmore
  43fb3c:	adrp	x12, 45f000 <_obstack_memory_used@@Base+0xea68>
  43fb40:	add	x12, x12, #0xe9c
  43fb44:	adr	x13, 43fb54 <feof@plt+0x3d184>
  43fb48:	ldrh	w14, [x12, x11, lsl #1]
  43fb4c:	add	x13, x13, x14, lsl #2
  43fb50:	br	x13
  43fb54:	mov	x0, x19
  43fb58:	bl	443650 <feof@plt+0x40c80>
  43fb5c:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43fb60:	ldp	w8, w9, [x19, #40]
  43fb64:	sxtw	x8, w8
  43fb68:	cmp	w8, w9
  43fb6c:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43fb70:	ldr	x9, [x19, #32]
  43fb74:	mov	w10, #0x18                  	// #24
  43fb78:	add	w11, w8, #0x1
  43fb7c:	madd	x20, x8, x10, x9
  43fb80:	str	wzr, [x20, #4]
  43fb84:	str	w11, [x19, #40]
  43fb88:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43fb8c:	mov	w10, #0x30                  	// #48
  43fb90:	b	440604 <feof@plt+0x3dc34>
  43fb94:	mov	x0, x19
  43fb98:	mov	w21, w1
  43fb9c:	bl	442ea0 <feof@plt+0x404d0>
  43fba0:	mov	x20, x0
  43fba4:	cbz	x0, 440c48 <feof@plt+0x3e278>
  43fba8:	cbz	w21, 43fc6c <feof@plt+0x3d29c>
  43fbac:	ldrb	w8, [x19, #16]
  43fbb0:	tbnz	w8, #0, 43fc6c <feof@plt+0x3d29c>
  43fbb4:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0xea68>
  43fbb8:	add	x8, x8, #0xfa6
  43fbbc:	ldr	w9, [x20]
  43fbc0:	sub	w9, w9, #0x2
  43fbc4:	cmp	w9, #0x4e
  43fbc8:	b.hi	440c48 <feof@plt+0x3e278>  // b.pmore
  43fbcc:	adr	x10, 43fbdc <feof@plt+0x3d20c>
  43fbd0:	ldrh	w11, [x8, x9, lsl #1]
  43fbd4:	add	x10, x10, x11, lsl #2
  43fbd8:	br	x10
  43fbdc:	ldr	x20, [x20, #8]
  43fbe0:	b	43fbbc <feof@plt+0x3d1ec>
  43fbe4:	add	x8, x9, #0x1
  43fbe8:	str	x8, [x22]
  43fbec:	ldrb	w8, [x9, #1]
  43fbf0:	cbz	w8, 440c44 <feof@plt+0x3e274>
  43fbf4:	add	x8, x9, #0x2
  43fbf8:	str	x8, [x22]
  43fbfc:	ldrb	w10, [x9, #1]
  43fc00:	mov	x20, xzr
  43fc04:	sub	w10, w10, #0x41
  43fc08:	cmp	w10, #0x31
  43fc0c:	b.hi	440c48 <feof@plt+0x3e278>  // b.pmore
  43fc10:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43fc14:	add	x11, x11, #0xe38
  43fc18:	adr	x12, 43fc28 <feof@plt+0x3d258>
  43fc1c:	ldrh	w13, [x11, x10, lsl #1]
  43fc20:	add	x12, x12, x13, lsl #2
  43fc24:	br	x12
  43fc28:	mov	x0, x19
  43fc2c:	mov	w1, wzr
  43fc30:	bl	43fac0 <feof@plt+0x3d0f0>
  43fc34:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43fc38:	ldp	w8, w9, [x19, #40]
  43fc3c:	sxtw	x8, w8
  43fc40:	cmp	w8, w9
  43fc44:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43fc48:	ldr	x9, [x19, #32]
  43fc4c:	mov	w10, #0x18                  	// #24
  43fc50:	add	w11, w8, #0x1
  43fc54:	madd	x20, x8, x10, x9
  43fc58:	str	wzr, [x20, #4]
  43fc5c:	str	w11, [x19, #40]
  43fc60:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43fc64:	mov	w10, #0x17                  	// #23
  43fc68:	b	440604 <feof@plt+0x3dc34>
  43fc6c:	ldr	x8, [x22]
  43fc70:	ldrb	w9, [x8]
  43fc74:	cbz	w9, 440c48 <feof@plt+0x3e278>
  43fc78:	cmp	w9, #0x45
  43fc7c:	b.eq	440c48 <feof@plt+0x3e278>  // b.none
  43fc80:	adrp	x11, 45f000 <_obstack_memory_used@@Base+0xea68>
  43fc84:	add	x11, x11, #0xf08
  43fc88:	mov	x12, x20
  43fc8c:	ldr	w10, [x12]
  43fc90:	sub	w13, w10, #0x2
  43fc94:	cmp	w13, #0x4e
  43fc98:	mov	w10, wzr
  43fc9c:	b.hi	44073c <feof@plt+0x3dd6c>  // b.pmore
  43fca0:	adr	x14, 43fcb0 <feof@plt+0x3d2e0>
  43fca4:	ldrh	w15, [x11, x13, lsl #1]
  43fca8:	add	x14, x14, x15, lsl #2
  43fcac:	br	x14
  43fcb0:	add	x10, x12, #0x8
  43fcb4:	ldr	x12, [x10]
  43fcb8:	cbnz	x12, 43fc8c <feof@plt+0x3d2bc>
  43fcbc:	b	440738 <feof@plt+0x3dd68>
  43fcc0:	add	x10, x12, #0x10
  43fcc4:	b	43fcb4 <feof@plt+0x3d2e4>
  43fcc8:	ldr	x8, [x20, #16]
  43fccc:	mov	x10, #0x1f                  	// #31
  43fcd0:	mov	w9, #0x1                   	// #1
  43fcd4:	movk	x10, #0x1a, lsl #48
  43fcd8:	ldr	w11, [x8]
  43fcdc:	sub	w11, w11, #0x1c
  43fce0:	cmp	w11, #0x34
  43fce4:	b.hi	440c48 <feof@plt+0x3e278>  // b.pmore
  43fce8:	lsl	x11, x9, x11
  43fcec:	tst	x11, x10
  43fcf0:	b.eq	440c48 <feof@plt+0x3e278>  // b.none
  43fcf4:	ldr	x8, [x8, #8]
  43fcf8:	str	x8, [x20, #16]
  43fcfc:	b	43fcd8 <feof@plt+0x3d308>
  43fd00:	mov	x0, x19
  43fd04:	bl	442ea0 <feof@plt+0x404d0>
  43fd08:	ldp	w9, w8, [x19, #40]
  43fd0c:	sxtw	x9, w9
  43fd10:	cmp	w9, w8
  43fd14:	b.ge	43fe24 <feof@plt+0x3d454>  // b.tcont
  43fd18:	ldr	x10, [x19, #32]
  43fd1c:	mov	w8, #0x18                  	// #24
  43fd20:	add	w11, w9, #0x1
  43fd24:	madd	x8, x9, x8, x10
  43fd28:	str	wzr, [x8, #4]
  43fd2c:	str	w11, [x19, #40]
  43fd30:	cbz	x10, 43fe24 <feof@plt+0x3d454>
  43fd34:	mov	w11, #0x42                  	// #66
  43fd38:	str	w11, [x8]
  43fd3c:	ldr	x15, [x22]
  43fd40:	ldrb	w12, [x15]
  43fd44:	cmp	w12, #0x6e
  43fd48:	b.ne	440818 <feof@plt+0x3de48>  // b.any
  43fd4c:	add	x13, x15, #0x1
  43fd50:	str	x13, [x22]
  43fd54:	ldrb	w12, [x15, #1]
  43fd58:	mov	w11, #0x1                   	// #1
  43fd5c:	mov	x15, x13
  43fd60:	b	44081c <feof@plt+0x3de4c>
  43fd64:	ldrb	w8, [x8]
  43fd68:	cbz	w8, 4405c4 <feof@plt+0x3dbf4>
  43fd6c:	add	x8, x9, #0x3
  43fd70:	str	x8, [x19, #24]
  43fd74:	ldrb	w20, [x9, #2]
  43fd78:	mov	x0, x19
  43fd7c:	mov	w1, wzr
  43fd80:	bl	43fac0 <feof@plt+0x3d0f0>
  43fd84:	cmp	w20, #0x6e
  43fd88:	b.ne	4405d0 <feof@plt+0x3dc00>  // b.any
  43fd8c:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43fd90:	ldp	w8, w9, [x19, #40]
  43fd94:	sxtw	x8, w8
  43fd98:	cmp	w8, w9
  43fd9c:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43fda0:	ldr	x9, [x19, #32]
  43fda4:	mov	w10, #0x18                  	// #24
  43fda8:	add	w11, w8, #0x1
  43fdac:	madd	x20, x8, x10, x9
  43fdb0:	str	wzr, [x20, #4]
  43fdb4:	str	w11, [x19, #40]
  43fdb8:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43fdbc:	mov	w10, #0x4a                  	// #74
  43fdc0:	b	440604 <feof@plt+0x3dc34>
  43fdc4:	mov	x0, x19
  43fdc8:	bl	442ea0 <feof@plt+0x404d0>
  43fdcc:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43fdd0:	ldp	w8, w9, [x19, #40]
  43fdd4:	sxtw	x8, w8
  43fdd8:	cmp	w8, w9
  43fddc:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43fde0:	ldr	x9, [x19, #32]
  43fde4:	mov	w10, #0x18                  	// #24
  43fde8:	add	w11, w8, #0x1
  43fdec:	madd	x20, x8, x10, x9
  43fdf0:	str	wzr, [x20, #4]
  43fdf4:	str	w11, [x19, #40]
  43fdf8:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43fdfc:	mov	w10, #0x13                  	// #19
  43fe00:	b	440604 <feof@plt+0x3dc34>
  43fe04:	ldrb	w10, [x8]
  43fe08:	cmp	w10, #0x6e
  43fe0c:	b.ne	43fe54 <feof@plt+0x3d484>  // b.any
  43fe10:	add	x8, x9, #0x3
  43fe14:	str	x8, [x22]
  43fe18:	ldrb	w10, [x9, #3]
  43fe1c:	mov	w9, #0x1                   	// #1
  43fe20:	b	43fe58 <feof@plt+0x3d488>
  43fe24:	mov	x8, xzr
  43fe28:	b	440a70 <feof@plt+0x3e0a0>
  43fe2c:	ldr	x10, [x12, #8]
  43fe30:	cbz	x10, 43fe4c <feof@plt+0x3d47c>
  43fe34:	ldr	w11, [x10]
  43fe38:	sub	w12, w11, #0x1
  43fe3c:	cmp	w12, #0x2
  43fe40:	b.cs	440710 <feof@plt+0x3dd40>  // b.hs, b.nlast
  43fe44:	ldr	x10, [x10, #16]
  43fe48:	cbnz	x10, 43fe34 <feof@plt+0x3d464>
  43fe4c:	mov	w10, #0x1                   	// #1
  43fe50:	b	44073c <feof@plt+0x3dd6c>
  43fe54:	mov	w9, wzr
  43fe58:	sub	w11, w10, #0x30
  43fe5c:	cmp	w11, #0x9
  43fe60:	b.hi	43fec4 <feof@plt+0x3d4f4>  // b.pmore
  43fe64:	mov	w12, #0x2f                  	// #47
  43fe68:	mov	w13, #0x6667                	// #26215
  43fe6c:	mov	w11, wzr
  43fe70:	movk	w12, #0x8000, lsl #16
  43fe74:	add	x8, x8, #0x1
  43fe78:	movk	w13, #0x6666, lsl #16
  43fe7c:	mov	w14, #0xa                   	// #10
  43fe80:	and	w15, w10, #0xff
  43fe84:	sub	w10, w12, w15
  43fe88:	smull	x10, w10, w13
  43fe8c:	lsr	x16, x10, #63
  43fe90:	asr	x10, x10, #34
  43fe94:	add	w10, w10, w16
  43fe98:	cmp	w11, w10
  43fe9c:	b.gt	440c44 <feof@plt+0x3e274>
  43fea0:	str	x8, [x22]
  43fea4:	ldrb	w10, [x8], #1
  43fea8:	madd	w11, w11, w14, w15
  43feac:	sub	w11, w11, #0x30
  43feb0:	sub	w15, w10, #0x30
  43feb4:	cmp	w15, #0xa
  43feb8:	b.cc	43fe80 <feof@plt+0x3d4b0>  // b.lo, b.ul, b.last
  43febc:	sub	x8, x8, #0x1
  43fec0:	b	43fec8 <feof@plt+0x3d4f8>
  43fec4:	mov	w11, wzr
  43fec8:	cmp	w9, #0x0
  43fecc:	mov	x20, xzr
  43fed0:	cneg	w9, w11, ne  // ne = any
  43fed4:	cbz	w10, 440c48 <feof@plt+0x3e278>
  43fed8:	cmp	w9, #0x2
  43fedc:	b.lt	440c48 <feof@plt+0x3e278>  // b.tstop
  43fee0:	add	x12, x8, #0x1
  43fee4:	str	x12, [x22]
  43fee8:	ldrb	w8, [x8]
  43feec:	cmp	w8, #0x5f
  43fef0:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  43fef4:	mov	x8, xzr
  43fef8:	sub	w13, w9, #0x1
  43fefc:	mov	w9, #0x18                  	// #24
  43ff00:	mov	w10, #0x41                  	// #65
  43ff04:	mov	w11, #0x40                  	// #64
  43ff08:	b	440438 <feof@plt+0x3da68>
  43ff0c:	mov	x0, x19
  43ff10:	bl	440c5c <feof@plt+0x3e28c>
  43ff14:	ldr	x10, [x19, #24]
  43ff18:	mov	x21, x0
  43ff1c:	ldrb	w9, [x10]
  43ff20:	cmp	w9, #0x6e
  43ff24:	b.ne	440618 <feof@plt+0x3dc48>  // b.any
  43ff28:	add	x11, x10, #0x1
  43ff2c:	str	x11, [x22]
  43ff30:	ldrb	w9, [x10, #1]
  43ff34:	mov	w8, #0x1                   	// #1
  43ff38:	mov	x10, x11
  43ff3c:	b	44061c <feof@plt+0x3dc4c>
  43ff40:	mov	x0, x19
  43ff44:	bl	440c5c <feof@plt+0x3e28c>
  43ff48:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43ff4c:	ldp	w8, w9, [x19, #40]
  43ff50:	sxtw	x8, w8
  43ff54:	cmp	w8, w9
  43ff58:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43ff5c:	ldr	x9, [x19, #32]
  43ff60:	mov	w10, #0x18                  	// #24
  43ff64:	add	w11, w8, #0x1
  43ff68:	madd	x20, x8, x10, x9
  43ff6c:	str	wzr, [x20, #4]
  43ff70:	str	w11, [x19, #40]
  43ff74:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43ff78:	mov	w10, #0xe                   	// #14
  43ff7c:	b	440604 <feof@plt+0x3dc34>
  43ff80:	mov	x0, x19
  43ff84:	bl	442ea0 <feof@plt+0x404d0>
  43ff88:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43ff8c:	ldp	w8, w9, [x19, #40]
  43ff90:	sxtw	x8, w8
  43ff94:	cmp	w8, w9
  43ff98:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43ff9c:	ldr	x9, [x19, #32]
  43ffa0:	mov	w10, #0x18                  	// #24
  43ffa4:	add	w11, w8, #0x1
  43ffa8:	madd	x20, x8, x10, x9
  43ffac:	str	wzr, [x20, #4]
  43ffb0:	str	w11, [x19, #40]
  43ffb4:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43ffb8:	mov	w10, #0x14                  	// #20
  43ffbc:	b	440604 <feof@plt+0x3dc34>
  43ffc0:	mov	x0, x19
  43ffc4:	bl	440c5c <feof@plt+0x3e28c>
  43ffc8:	cbz	x0, 440c44 <feof@plt+0x3e274>
  43ffcc:	ldp	w8, w9, [x19, #40]
  43ffd0:	sxtw	x8, w8
  43ffd4:	cmp	w8, w9
  43ffd8:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  43ffdc:	ldr	x9, [x19, #32]
  43ffe0:	mov	w10, #0x18                  	// #24
  43ffe4:	add	w11, w8, #0x1
  43ffe8:	madd	x20, x8, x10, x9
  43ffec:	str	wzr, [x20, #4]
  43fff0:	str	w11, [x19, #40]
  43fff4:	cbz	x9, 440c44 <feof@plt+0x3e274>
  43fff8:	mov	w10, #0xc                   	// #12
  43fffc:	b	440604 <feof@plt+0x3dc34>
  440000:	mov	x0, x19
  440004:	bl	440c5c <feof@plt+0x3e28c>
  440008:	cbz	x0, 440c44 <feof@plt+0x3e274>
  44000c:	ldp	w8, w9, [x19, #40]
  440010:	sxtw	x8, w8
  440014:	cmp	w8, w9
  440018:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  44001c:	ldr	x9, [x19, #32]
  440020:	mov	w10, #0x18                  	// #24
  440024:	add	w11, w8, #0x1
  440028:	madd	x20, x8, x10, x9
  44002c:	str	wzr, [x20, #4]
  440030:	str	w11, [x19, #40]
  440034:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440038:	mov	w10, #0x12                  	// #18
  44003c:	b	440604 <feof@plt+0x3dc34>
  440040:	mov	x0, x19
  440044:	bl	440c5c <feof@plt+0x3e28c>
  440048:	cbz	x0, 440c44 <feof@plt+0x3e274>
  44004c:	ldp	w8, w9, [x19, #40]
  440050:	sxtw	x8, w8
  440054:	cmp	w8, w9
  440058:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  44005c:	ldr	x9, [x19, #32]
  440060:	mov	w10, #0x18                  	// #24
  440064:	add	w11, w8, #0x1
  440068:	madd	x20, x8, x10, x9
  44006c:	str	wzr, [x20, #4]
  440070:	str	w11, [x19, #40]
  440074:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440078:	mov	w10, #0xd                   	// #13
  44007c:	b	440604 <feof@plt+0x3dc34>
  440080:	add	w8, w10, #0xa
  440084:	mov	x0, x19
  440088:	str	w8, [x19, #72]
  44008c:	bl	440c5c <feof@plt+0x3e28c>
  440090:	cbz	x0, 440c44 <feof@plt+0x3e274>
  440094:	ldp	w8, w9, [x19, #40]
  440098:	sxtw	x8, w8
  44009c:	cmp	w8, w9
  4400a0:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  4400a4:	ldr	x9, [x19, #32]
  4400a8:	mov	w10, #0x18                  	// #24
  4400ac:	add	w11, w8, #0x1
  4400b0:	madd	x20, x8, x10, x9
  4400b4:	str	wzr, [x20, #4]
  4400b8:	str	w11, [x19, #40]
  4400bc:	cbz	x9, 440c44 <feof@plt+0x3e274>
  4400c0:	mov	w10, #0xa                   	// #10
  4400c4:	b	440604 <feof@plt+0x3dc34>
  4400c8:	add	w8, w10, #0xf
  4400cc:	mov	x0, x19
  4400d0:	str	w8, [x19, #72]
  4400d4:	bl	440c5c <feof@plt+0x3e28c>
  4400d8:	cbz	x0, 440c44 <feof@plt+0x3e274>
  4400dc:	ldp	w8, w9, [x19, #40]
  4400e0:	sxtw	x8, w8
  4400e4:	cmp	w8, w9
  4400e8:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  4400ec:	ldr	x9, [x19, #32]
  4400f0:	mov	w10, #0x18                  	// #24
  4400f4:	add	w11, w8, #0x1
  4400f8:	madd	x20, x8, x10, x9
  4400fc:	str	wzr, [x20, #4]
  440100:	str	w11, [x19, #40]
  440104:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440108:	mov	w10, #0x9                   	// #9
  44010c:	b	440604 <feof@plt+0x3dc34>
  440110:	mov	x0, x19
  440114:	bl	442ea0 <feof@plt+0x404d0>
  440118:	cbz	x0, 440c44 <feof@plt+0x3e274>
  44011c:	ldp	w8, w9, [x19, #40]
  440120:	sxtw	x8, w8
  440124:	cmp	w8, w9
  440128:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  44012c:	ldr	x9, [x19, #32]
  440130:	mov	w10, #0x18                  	// #24
  440134:	add	w11, w8, #0x1
  440138:	madd	x20, x8, x10, x9
  44013c:	str	wzr, [x20, #4]
  440140:	str	w11, [x19, #40]
  440144:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440148:	mov	w10, #0x15                  	// #21
  44014c:	b	440604 <feof@plt+0x3dc34>
  440150:	ldrb	w8, [x8]
  440154:	cbz	w8, 440c44 <feof@plt+0x3e274>
  440158:	add	x8, x9, #0x3
  44015c:	str	x8, [x22]
  440160:	ldrb	w10, [x9, #2]
  440164:	cmp	w10, #0x76
  440168:	b.eq	440898 <feof@plt+0x3dec8>  // b.none
  44016c:	cmp	w10, #0x68
  440170:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  440174:	ldrb	w10, [x8]
  440178:	cmp	w10, #0x6e
  44017c:	b.ne	44018c <feof@plt+0x3d7bc>  // b.any
  440180:	add	x8, x9, #0x4
  440184:	str	x8, [x22]
  440188:	ldrb	w10, [x9, #4]
  44018c:	sub	w9, w10, #0x30
  440190:	cmp	w9, #0x9
  440194:	b.hi	4409ac <feof@plt+0x3dfdc>  // b.pmore
  440198:	mov	w9, #0x2f                  	// #47
  44019c:	mov	w12, #0x6667                	// #26215
  4401a0:	mov	w11, wzr
  4401a4:	movk	w9, #0x8000, lsl #16
  4401a8:	add	x8, x8, #0x1
  4401ac:	movk	w12, #0x6666, lsl #16
  4401b0:	mov	w13, #0xa                   	// #10
  4401b4:	and	w14, w10, #0xff
  4401b8:	sub	w10, w9, w14
  4401bc:	smull	x10, w10, w12
  4401c0:	lsr	x15, x10, #63
  4401c4:	asr	x10, x10, #34
  4401c8:	add	w10, w10, w15
  4401cc:	cmp	w11, w10
  4401d0:	b.gt	440c44 <feof@plt+0x3e274>
  4401d4:	str	x8, [x22]
  4401d8:	ldrb	w10, [x8], #1
  4401dc:	madd	w11, w11, w13, w14
  4401e0:	sub	w11, w11, #0x30
  4401e4:	sub	w14, w10, #0x30
  4401e8:	cmp	w14, #0xa
  4401ec:	b.cc	4401b4 <feof@plt+0x3d7e4>  // b.lo, b.ul, b.last
  4401f0:	b	4409a8 <feof@plt+0x3dfd8>
  4401f4:	ldrb	w10, [x8]
  4401f8:	cmp	w10, #0x6e
  4401fc:	b.ne	44020c <feof@plt+0x3d83c>  // b.any
  440200:	add	x8, x9, #0x3
  440204:	str	x8, [x22]
  440208:	ldrb	w10, [x9, #3]
  44020c:	sub	w9, w10, #0x30
  440210:	cmp	w9, #0x9
  440214:	b.hi	440274 <feof@plt+0x3d8a4>  // b.pmore
  440218:	mov	w9, #0x2f                  	// #47
  44021c:	mov	w12, #0x6667                	// #26215
  440220:	mov	w11, wzr
  440224:	movk	w9, #0x8000, lsl #16
  440228:	add	x8, x8, #0x1
  44022c:	movk	w12, #0x6666, lsl #16
  440230:	mov	w13, #0xa                   	// #10
  440234:	and	w14, w10, #0xff
  440238:	sub	w10, w9, w14
  44023c:	smull	x10, w10, w12
  440240:	lsr	x15, x10, #63
  440244:	asr	x10, x10, #34
  440248:	add	w10, w10, w15
  44024c:	cmp	w11, w10
  440250:	b.gt	440c44 <feof@plt+0x3e274>
  440254:	str	x8, [x22]
  440258:	ldrb	w10, [x8], #1
  44025c:	madd	w11, w11, w13, w14
  440260:	sub	w11, w11, #0x30
  440264:	sub	w14, w10, #0x30
  440268:	cmp	w14, #0xa
  44026c:	b.cc	440234 <feof@plt+0x3d864>  // b.lo, b.ul, b.last
  440270:	sub	x8, x8, #0x1
  440274:	cmp	w10, #0x5f
  440278:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  44027c:	add	x8, x8, #0x1
  440280:	mov	x0, x19
  440284:	mov	w1, wzr
  440288:	str	x8, [x19, #24]
  44028c:	bl	43fac0 <feof@plt+0x3d0f0>
  440290:	cbz	x0, 440c44 <feof@plt+0x3e274>
  440294:	ldp	w8, w9, [x19, #40]
  440298:	sxtw	x8, w8
  44029c:	cmp	w8, w9
  4402a0:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  4402a4:	ldr	x9, [x19, #32]
  4402a8:	mov	w10, #0x18                  	// #24
  4402ac:	add	w11, w8, #0x1
  4402b0:	madd	x20, x8, x10, x9
  4402b4:	str	wzr, [x20, #4]
  4402b8:	str	w11, [x19, #40]
  4402bc:	cbz	x9, 440c44 <feof@plt+0x3e274>
  4402c0:	mov	w10, #0xf                   	// #15
  4402c4:	b	440604 <feof@plt+0x3dc34>
  4402c8:	ldrb	w10, [x8]
  4402cc:	cmp	w10, #0x6e
  4402d0:	b.ne	4402e0 <feof@plt+0x3d910>  // b.any
  4402d4:	add	x8, x9, #0x3
  4402d8:	str	x8, [x22]
  4402dc:	ldrb	w10, [x9, #3]
  4402e0:	sub	w9, w10, #0x30
  4402e4:	cmp	w9, #0x9
  4402e8:	b.hi	440348 <feof@plt+0x3d978>  // b.pmore
  4402ec:	mov	w9, #0x2f                  	// #47
  4402f0:	mov	w12, #0x6667                	// #26215
  4402f4:	mov	w11, wzr
  4402f8:	movk	w9, #0x8000, lsl #16
  4402fc:	add	x8, x8, #0x1
  440300:	movk	w12, #0x6666, lsl #16
  440304:	mov	w13, #0xa                   	// #10
  440308:	and	w14, w10, #0xff
  44030c:	sub	w10, w9, w14
  440310:	smull	x10, w10, w12
  440314:	lsr	x15, x10, #63
  440318:	asr	x10, x10, #34
  44031c:	add	w10, w10, w15
  440320:	cmp	w11, w10
  440324:	b.gt	440c44 <feof@plt+0x3e274>
  440328:	str	x8, [x22]
  44032c:	ldrb	w10, [x8], #1
  440330:	madd	w11, w11, w13, w14
  440334:	sub	w11, w11, #0x30
  440338:	sub	w14, w10, #0x30
  44033c:	cmp	w14, #0xa
  440340:	b.cc	440308 <feof@plt+0x3d938>  // b.lo, b.ul, b.last
  440344:	sub	x8, x8, #0x1
  440348:	cmp	w10, #0x5f
  44034c:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  440350:	add	x11, x8, #0x1
  440354:	str	x11, [x22]
  440358:	ldrb	w9, [x8, #1]
  44035c:	cmp	w9, #0x6e
  440360:	b.ne	440370 <feof@plt+0x3d9a0>  // b.any
  440364:	add	x11, x8, #0x2
  440368:	str	x11, [x22]
  44036c:	ldrb	w9, [x8, #2]
  440370:	sub	w8, w9, #0x30
  440374:	cmp	w8, #0x9
  440378:	b.hi	4403d8 <feof@plt+0x3da08>  // b.pmore
  44037c:	mov	w10, #0x2f                  	// #47
  440380:	add	x8, x11, #0x1
  440384:	mov	w11, #0x6667                	// #26215
  440388:	mov	w12, wzr
  44038c:	movk	w10, #0x8000, lsl #16
  440390:	movk	w11, #0x6666, lsl #16
  440394:	mov	w13, #0xa                   	// #10
  440398:	and	w14, w9, #0xff
  44039c:	sub	w9, w10, w14
  4403a0:	smull	x9, w9, w11
  4403a4:	lsr	x15, x9, #63
  4403a8:	asr	x9, x9, #34
  4403ac:	add	w9, w9, w15
  4403b0:	cmp	w12, w9
  4403b4:	b.gt	440c44 <feof@plt+0x3e274>
  4403b8:	str	x8, [x22]
  4403bc:	ldrb	w9, [x8], #1
  4403c0:	madd	w12, w12, w13, w14
  4403c4:	sub	w12, w12, #0x30
  4403c8:	sub	w14, w9, #0x30
  4403cc:	cmp	w14, #0xa
  4403d0:	b.cc	440398 <feof@plt+0x3d9c8>  // b.lo, b.ul, b.last
  4403d4:	sub	x11, x8, #0x1
  4403d8:	cmp	w9, #0x5f
  4403dc:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  4403e0:	add	x8, x11, #0x1
  4403e4:	mov	x0, x19
  4403e8:	mov	w1, wzr
  4403ec:	str	x8, [x19, #24]
  4403f0:	bl	43fac0 <feof@plt+0x3d0f0>
  4403f4:	cbz	x0, 440c44 <feof@plt+0x3e274>
  4403f8:	ldp	w8, w9, [x19, #40]
  4403fc:	sxtw	x8, w8
  440400:	cmp	w8, w9
  440404:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  440408:	ldr	x9, [x19, #32]
  44040c:	mov	w10, #0x18                  	// #24
  440410:	add	w11, w8, #0x1
  440414:	madd	x20, x8, x10, x9
  440418:	str	wzr, [x20, #4]
  44041c:	str	w11, [x19, #40]
  440420:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440424:	mov	w10, #0x10                  	// #16
  440428:	b	440604 <feof@plt+0x3dc34>
  44042c:	mov	x8, x14
  440430:	cmp	w13, #0x0
  440434:	b.le	440580 <feof@plt+0x3dbb0>
  440438:	ldrb	w15, [x12]
  44043c:	mov	w13, w13
  440440:	cmp	w15, #0x24
  440444:	b.eq	440480 <feof@plt+0x3dab0>  // b.none
  440448:	cbz	w15, 440c44 <feof@plt+0x3e274>
  44044c:	mov	w14, #0x1                   	// #1
  440450:	ands	w15, w15, #0xff
  440454:	b.eq	440478 <feof@plt+0x3daa8>  // b.none
  440458:	cmp	w15, #0x24
  44045c:	b.eq	440478 <feof@plt+0x3daa8>  // b.none
  440460:	cmp	x13, x14
  440464:	b.eq	4404a4 <feof@plt+0x3dad4>  // b.none
  440468:	ldrb	w15, [x12, x14]
  44046c:	add	x14, x14, #0x1
  440470:	ands	w15, w15, #0xff
  440474:	b.ne	440458 <feof@plt+0x3da88>  // b.any
  440478:	sub	w15, w14, #0x1
  44047c:	b	4404a8 <feof@plt+0x3dad8>
  440480:	ldrb	w12, [x12, #1]
  440484:	cmp	w12, #0x24
  440488:	b.eq	4404f8 <feof@plt+0x3db28>  // b.none
  44048c:	cmp	w12, #0x53
  440490:	b.eq	4404f4 <feof@plt+0x3db24>  // b.none
  440494:	cmp	w12, #0x5f
  440498:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  44049c:	mov	w12, #0x2e                  	// #46
  4404a0:	b	4404f8 <feof@plt+0x3db28>
  4404a4:	mov	w15, w13
  4404a8:	ldp	w16, w14, [x19, #40]
  4404ac:	sxtw	x16, w16
  4404b0:	cmp	w16, w14
  4404b4:	b.ge	440ab8 <feof@plt+0x3e0e8>  // b.tcont
  4404b8:	ldr	x17, [x19, #32]
  4404bc:	add	w18, w16, #0x1
  4404c0:	madd	x14, x16, x9, x17
  4404c4:	str	wzr, [x14, #4]
  4404c8:	str	w18, [x19, #40]
  4404cc:	cbz	w15, 440ab8 <feof@plt+0x3e0e8>
  4404d0:	cbz	x17, 440ab8 <feof@plt+0x3e0e8>
  4404d4:	madd	x16, x16, x9, x17
  4404d8:	str	xzr, [x14]
  4404dc:	str	x12, [x16, #8]
  4404e0:	str	w15, [x16, #16]
  4404e4:	ldr	x12, [x22]
  4404e8:	sub	w13, w13, w15
  4404ec:	add	x12, x12, w15, uxtw
  4404f0:	b	440538 <feof@plt+0x3db68>
  4404f4:	mov	w12, #0x2f                  	// #47
  4404f8:	ldp	w15, w14, [x19, #40]
  4404fc:	sxtw	x15, w15
  440500:	cmp	w15, w14
  440504:	b.ge	440ac8 <feof@plt+0x3e0f8>  // b.tcont
  440508:	ldr	x16, [x19, #32]
  44050c:	add	w17, w15, #0x1
  440510:	madd	x14, x15, x9, x16
  440514:	str	wzr, [x14, #4]
  440518:	str	w17, [x19, #40]
  44051c:	cbz	x16, 440ac8 <feof@plt+0x3e0f8>
  440520:	madd	x15, x15, x9, x16
  440524:	str	w10, [x14]
  440528:	str	w12, [x15, #8]
  44052c:	ldr	x12, [x22]
  440530:	sub	w13, w13, #0x2
  440534:	add	x12, x12, #0x2
  440538:	str	x12, [x22]
  44053c:	cbz	x8, 44042c <feof@plt+0x3da5c>
  440540:	ldp	w15, w16, [x19, #40]
  440544:	sxtw	x15, w15
  440548:	cmp	w15, w16
  44054c:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  440550:	ldr	x16, [x19, #32]
  440554:	add	w18, w15, #0x1
  440558:	madd	x17, x15, x9, x16
  44055c:	str	wzr, [x17, #4]
  440560:	str	w18, [x19, #40]
  440564:	cbz	x16, 440c44 <feof@plt+0x3e274>
  440568:	madd	x15, x15, x9, x16
  44056c:	str	w11, [x17]
  440570:	stp	x8, x14, [x15, #8]
  440574:	mov	x8, x17
  440578:	cmp	w13, #0x0
  44057c:	b.gt	440438 <feof@plt+0x3da68>
  440580:	ldp	w9, w10, [x19, #40]
  440584:	sxtw	x9, w9
  440588:	cmp	w9, w10
  44058c:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  440590:	ldr	x10, [x19, #32]
  440594:	mov	w11, #0x18                  	// #24
  440598:	add	w12, w9, #0x1
  44059c:	madd	x20, x9, x11, x10
  4405a0:	str	wzr, [x20, #4]
  4405a4:	str	w12, [x19, #40]
  4405a8:	cbz	x10, 440c44 <feof@plt+0x3e274>
  4405ac:	mov	w12, #0x18                  	// #24
  4405b0:	mov	w11, #0x3f                  	// #63
  4405b4:	madd	x9, x9, x12, x10
  4405b8:	str	w11, [x20]
  4405bc:	stp	x8, xzr, [x9, #8]
  4405c0:	b	440c48 <feof@plt+0x3e278>
  4405c4:	mov	x0, x19
  4405c8:	mov	w1, wzr
  4405cc:	bl	43fac0 <feof@plt+0x3d0f0>
  4405d0:	cbz	x0, 440c44 <feof@plt+0x3e274>
  4405d4:	ldp	w8, w9, [x19, #40]
  4405d8:	sxtw	x8, w8
  4405dc:	cmp	w8, w9
  4405e0:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  4405e4:	ldr	x9, [x19, #32]
  4405e8:	mov	w10, #0x18                  	// #24
  4405ec:	add	w11, w8, #0x1
  4405f0:	madd	x20, x8, x10, x9
  4405f4:	str	wzr, [x20, #4]
  4405f8:	str	w11, [x19, #40]
  4405fc:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440600:	mov	w10, #0x49                  	// #73
  440604:	mov	w11, #0x18                  	// #24
  440608:	madd	x8, x8, x11, x9
  44060c:	str	w10, [x20]
  440610:	stp	x0, xzr, [x8, #8]
  440614:	b	440c48 <feof@plt+0x3e278>
  440618:	mov	w8, wzr
  44061c:	sub	w11, w9, #0x30
  440620:	cmp	w11, #0x9
  440624:	b.hi	440688 <feof@plt+0x3dcb8>  // b.pmore
  440628:	mov	w12, #0x2f                  	// #47
  44062c:	mov	w13, #0x6667                	// #26215
  440630:	mov	w11, wzr
  440634:	movk	w12, #0x8000, lsl #16
  440638:	add	x10, x10, #0x1
  44063c:	movk	w13, #0x6666, lsl #16
  440640:	mov	w14, #0xa                   	// #10
  440644:	and	w15, w9, #0xff
  440648:	sub	w9, w12, w15
  44064c:	smull	x9, w9, w13
  440650:	lsr	x16, x9, #63
  440654:	asr	x9, x9, #34
  440658:	add	w9, w9, w16
  44065c:	cmp	w11, w9
  440660:	b.gt	440c44 <feof@plt+0x3e274>
  440664:	str	x10, [x22]
  440668:	ldrb	w9, [x10], #1
  44066c:	madd	w11, w11, w14, w15
  440670:	sub	w11, w11, #0x30
  440674:	sub	w15, w9, #0x30
  440678:	cmp	w15, #0xa
  44067c:	b.cc	440644 <feof@plt+0x3dc74>  // b.lo, b.ul, b.last
  440680:	sub	x10, x10, #0x1
  440684:	b	44068c <feof@plt+0x3dcbc>
  440688:	mov	w11, wzr
  44068c:	cmp	w8, #0x0
  440690:	cneg	w8, w11, ne  // ne = any
  440694:	mov	x20, xzr
  440698:	tbnz	w8, #31, 440c48 <feof@plt+0x3e278>
  44069c:	cmp	w9, #0x5f
  4406a0:	b.ne	440c48 <feof@plt+0x3e278>  // b.any
  4406a4:	add	x8, x10, #0x1
  4406a8:	mov	x0, x19
  4406ac:	str	x8, [x19, #24]
  4406b0:	bl	440c5c <feof@plt+0x3e28c>
  4406b4:	ldr	w8, [x19, #72]
  4406b8:	mov	x20, xzr
  4406bc:	add	w8, w8, #0x5
  4406c0:	str	w8, [x19, #72]
  4406c4:	cbz	x21, 440c48 <feof@plt+0x3e278>
  4406c8:	cbz	x0, 440c48 <feof@plt+0x3e278>
  4406cc:	ldp	w8, w9, [x19, #40]
  4406d0:	sxtw	x8, w8
  4406d4:	cmp	w8, w9
  4406d8:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  4406dc:	ldr	x9, [x19, #32]
  4406e0:	mov	w10, #0x18                  	// #24
  4406e4:	add	w11, w8, #0x1
  4406e8:	madd	x20, x8, x10, x9
  4406ec:	str	wzr, [x20, #4]
  4406f0:	str	w11, [x19, #40]
  4406f4:	cbz	x9, 440c44 <feof@plt+0x3e274>
  4406f8:	mov	w11, #0x18                  	// #24
  4406fc:	mov	w10, #0xb                   	// #11
  440700:	madd	x8, x8, x11, x9
  440704:	str	w10, [x20]
  440708:	stp	x0, x21, [x8, #8]
  44070c:	b	440c48 <feof@plt+0x3e278>
  440710:	cmp	w11, #0x35
  440714:	mov	w10, #0x1                   	// #1
  440718:	b.hi	44073c <feof@plt+0x3dd6c>  // b.pmore
  44071c:	mov	w11, w11
  440720:	mov	w12, #0x1                   	// #1
  440724:	lsl	x11, x12, x11
  440728:	mov	x12, #0x180                 	// #384
  44072c:	movk	x12, #0x20, lsl #48
  440730:	tst	x11, x12
  440734:	b.eq	44073c <feof@plt+0x3dd6c>  // b.none
  440738:	mov	w10, wzr
  44073c:	cmp	w9, #0x4a
  440740:	b.ne	440750 <feof@plt+0x3dd80>  // b.any
  440744:	add	x8, x8, #0x1
  440748:	str	x8, [x22]
  44074c:	b	440754 <feof@plt+0x3dd84>
  440750:	cbz	w10, 440768 <feof@plt+0x3dd98>
  440754:	mov	x0, x19
  440758:	bl	440c5c <feof@plt+0x3e28c>
  44075c:	mov	x22, x0
  440760:	cbnz	x0, 44076c <feof@plt+0x3dd9c>
  440764:	b	440c44 <feof@plt+0x3e274>
  440768:	mov	x22, xzr
  44076c:	mov	x0, x19
  440770:	bl	44446c <feof@plt+0x41a9c>
  440774:	cbz	x0, 440c44 <feof@plt+0x3e274>
  440778:	ldp	w9, w8, [x19, #40]
  44077c:	sxtw	x9, w9
  440780:	cmp	w9, w8
  440784:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  440788:	ldr	x10, [x19, #32]
  44078c:	mov	w8, #0x18                  	// #24
  440790:	add	w11, w9, #0x1
  440794:	madd	x8, x9, x8, x10
  440798:	str	wzr, [x8, #4]
  44079c:	str	w11, [x19, #40]
  4407a0:	cbz	x10, 440c44 <feof@plt+0x3e274>
  4407a4:	mov	w12, #0x18                  	// #24
  4407a8:	mov	w11, #0x29                  	// #41
  4407ac:	madd	x9, x9, x12, x10
  4407b0:	str	w11, [x8]
  4407b4:	str	x22, [x9, #8]!
  4407b8:	str	x0, [x9, #8]
  4407bc:	cbnz	w21, 4407d0 <feof@plt+0x3de00>
  4407c0:	ldr	w10, [x20]
  4407c4:	cmp	w10, #0x2
  4407c8:	b.ne	4407d0 <feof@plt+0x3de00>  // b.any
  4407cc:	str	xzr, [x9]
  4407d0:	ldp	w9, w10, [x19, #40]
  4407d4:	sxtw	x9, w9
  4407d8:	cmp	w9, w10
  4407dc:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  4407e0:	ldr	x10, [x19, #32]
  4407e4:	mov	w11, #0x18                  	// #24
  4407e8:	add	w12, w9, #0x1
  4407ec:	madd	x11, x9, x11, x10
  4407f0:	str	wzr, [x11, #4]
  4407f4:	str	w12, [x19, #40]
  4407f8:	cbz	x10, 440c44 <feof@plt+0x3e274>
  4407fc:	mov	w13, #0x18                  	// #24
  440800:	mov	w12, #0x3                   	// #3
  440804:	madd	x9, x9, x13, x10
  440808:	str	w12, [x11]
  44080c:	stp	x20, x8, [x9, #8]
  440810:	mov	x20, x11
  440814:	b	440c48 <feof@plt+0x3e278>
  440818:	mov	w11, wzr
  44081c:	sub	w13, w12, #0x30
  440820:	cmp	w13, #0x9
  440824:	b.hi	440884 <feof@plt+0x3deb4>  // b.pmore
  440828:	mov	w14, #0x2f                  	// #47
  44082c:	mov	w16, #0x6667                	// #26215
  440830:	mov	w13, wzr
  440834:	movk	w14, #0x8000, lsl #16
  440838:	add	x15, x15, #0x1
  44083c:	movk	w16, #0x6666, lsl #16
  440840:	mov	w17, #0xa                   	// #10
  440844:	and	w18, w12, #0xff
  440848:	sub	w12, w14, w18
  44084c:	smull	x12, w12, w16
  440850:	lsr	x1, x12, #63
  440854:	asr	x12, x12, #34
  440858:	add	w12, w12, w1
  44085c:	cmp	w13, w12
  440860:	b.gt	440a60 <feof@plt+0x3e090>
  440864:	str	x15, [x22]
  440868:	ldrb	w12, [x15], #1
  44086c:	madd	w13, w13, w17, w18
  440870:	sub	w13, w13, #0x30
  440874:	sub	w18, w12, #0x30
  440878:	cmp	w18, #0xa
  44087c:	b.cc	440844 <feof@plt+0x3de74>  // b.lo, b.ul, b.last
  440880:	b	440888 <feof@plt+0x3deb8>
  440884:	mov	w13, wzr
  440888:	cmp	w11, #0x0
  44088c:	cneg	w11, w13, ne  // ne = any
  440890:	sxtw	x11, w11
  440894:	b	440a64 <feof@plt+0x3e094>
  440898:	ldrb	w10, [x8]
  44089c:	cmp	w10, #0x6e
  4408a0:	b.ne	4408b0 <feof@plt+0x3dee0>  // b.any
  4408a4:	add	x8, x9, #0x4
  4408a8:	str	x8, [x22]
  4408ac:	ldrb	w10, [x9, #4]
  4408b0:	sub	w9, w10, #0x30
  4408b4:	cmp	w9, #0x9
  4408b8:	b.hi	440918 <feof@plt+0x3df48>  // b.pmore
  4408bc:	mov	w9, #0x2f                  	// #47
  4408c0:	mov	w12, #0x6667                	// #26215
  4408c4:	mov	w11, wzr
  4408c8:	movk	w9, #0x8000, lsl #16
  4408cc:	add	x8, x8, #0x1
  4408d0:	movk	w12, #0x6666, lsl #16
  4408d4:	mov	w13, #0xa                   	// #10
  4408d8:	and	w14, w10, #0xff
  4408dc:	sub	w10, w9, w14
  4408e0:	smull	x10, w10, w12
  4408e4:	lsr	x15, x10, #63
  4408e8:	asr	x10, x10, #34
  4408ec:	add	w10, w10, w15
  4408f0:	cmp	w11, w10
  4408f4:	b.gt	440c44 <feof@plt+0x3e274>
  4408f8:	str	x8, [x22]
  4408fc:	ldrb	w10, [x8], #1
  440900:	madd	w11, w11, w13, w14
  440904:	sub	w11, w11, #0x30
  440908:	sub	w14, w10, #0x30
  44090c:	cmp	w14, #0xa
  440910:	b.cc	4408d8 <feof@plt+0x3df08>  // b.lo, b.ul, b.last
  440914:	sub	x8, x8, #0x1
  440918:	cmp	w10, #0x5f
  44091c:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  440920:	add	x9, x8, #0x1
  440924:	str	x9, [x22]
  440928:	ldrb	w10, [x8, #1]
  44092c:	cmp	w10, #0x6e
  440930:	b.ne	440940 <feof@plt+0x3df70>  // b.any
  440934:	add	x9, x8, #0x2
  440938:	str	x9, [x22]
  44093c:	ldrb	w10, [x8, #2]
  440940:	mov	x8, x9
  440944:	sub	w9, w10, #0x30
  440948:	cmp	w9, #0x9
  44094c:	b.hi	4409ac <feof@plt+0x3dfdc>  // b.pmore
  440950:	mov	w9, #0x2f                  	// #47
  440954:	mov	w12, #0x6667                	// #26215
  440958:	mov	w11, wzr
  44095c:	movk	w9, #0x8000, lsl #16
  440960:	add	x8, x8, #0x1
  440964:	movk	w12, #0x6666, lsl #16
  440968:	mov	w13, #0xa                   	// #10
  44096c:	and	w14, w10, #0xff
  440970:	sub	w10, w9, w14
  440974:	smull	x10, w10, w12
  440978:	lsr	x15, x10, #63
  44097c:	asr	x10, x10, #34
  440980:	add	w10, w10, w15
  440984:	cmp	w11, w10
  440988:	b.gt	440c44 <feof@plt+0x3e274>
  44098c:	str	x8, [x22]
  440990:	ldrb	w10, [x8], #1
  440994:	madd	w11, w11, w13, w14
  440998:	sub	w11, w11, #0x30
  44099c:	sub	w14, w10, #0x30
  4409a0:	cmp	w14, #0xa
  4409a4:	b.cc	44096c <feof@plt+0x3df9c>  // b.lo, b.ul, b.last
  4409a8:	sub	x8, x8, #0x1
  4409ac:	cmp	w10, #0x5f
  4409b0:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  4409b4:	add	x9, x8, #0x1
  4409b8:	str	x9, [x22]
  4409bc:	ldrb	w9, [x8, #1]
  4409c0:	cbz	w9, 440c44 <feof@plt+0x3e274>
  4409c4:	add	x9, x8, #0x2
  4409c8:	str	x9, [x22]
  4409cc:	ldrb	w10, [x8, #1]
  4409d0:	cmp	w10, #0x76
  4409d4:	b.eq	440adc <feof@plt+0x3e10c>  // b.none
  4409d8:	cmp	w10, #0x68
  4409dc:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  4409e0:	ldrb	w10, [x9]
  4409e4:	cmp	w10, #0x6e
  4409e8:	b.ne	4409f8 <feof@plt+0x3e028>  // b.any
  4409ec:	add	x9, x8, #0x3
  4409f0:	str	x9, [x22]
  4409f4:	ldrb	w10, [x8, #3]
  4409f8:	sub	w8, w10, #0x30
  4409fc:	cmp	w8, #0x9
  440a00:	b.hi	440bf0 <feof@plt+0x3e220>  // b.pmore
  440a04:	mov	w11, #0x2f                  	// #47
  440a08:	add	x8, x9, #0x1
  440a0c:	mov	w9, #0x6667                	// #26215
  440a10:	mov	w12, wzr
  440a14:	movk	w11, #0x8000, lsl #16
  440a18:	movk	w9, #0x6666, lsl #16
  440a1c:	mov	w13, #0xa                   	// #10
  440a20:	and	w14, w10, #0xff
  440a24:	sub	w10, w11, w14
  440a28:	smull	x10, w10, w9
  440a2c:	lsr	x15, x10, #63
  440a30:	asr	x10, x10, #34
  440a34:	add	w10, w10, w15
  440a38:	cmp	w12, w10
  440a3c:	b.gt	440c44 <feof@plt+0x3e274>
  440a40:	str	x8, [x22]
  440a44:	ldrb	w10, [x8], #1
  440a48:	madd	w12, w12, w13, w14
  440a4c:	sub	w12, w12, #0x30
  440a50:	sub	w14, w10, #0x30
  440a54:	cmp	w14, #0xa
  440a58:	b.cc	440a20 <feof@plt+0x3e050>  // b.lo, b.ul, b.last
  440a5c:	b	440bec <feof@plt+0x3e21c>
  440a60:	mov	x11, #0xffffffffffffffff    	// #-1
  440a64:	mov	w12, #0x18                  	// #24
  440a68:	madd	x9, x9, x12, x10
  440a6c:	str	x11, [x9, #8]
  440a70:	cbz	x0, 440c44 <feof@plt+0x3e274>
  440a74:	ldp	w9, w10, [x19, #40]
  440a78:	sxtw	x9, w9
  440a7c:	cmp	w9, w10
  440a80:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  440a84:	ldr	x10, [x19, #32]
  440a88:	mov	w11, #0x18                  	// #24
  440a8c:	add	w12, w9, #0x1
  440a90:	madd	x20, x9, x11, x10
  440a94:	str	wzr, [x20, #4]
  440a98:	str	w12, [x19, #40]
  440a9c:	cbz	x10, 440c44 <feof@plt+0x3e274>
  440aa0:	mov	w12, #0x18                  	// #24
  440aa4:	mov	w11, #0x16                  	// #22
  440aa8:	madd	x9, x9, x12, x10
  440aac:	str	w11, [x20]
  440ab0:	stp	x0, x8, [x9, #8]
  440ab4:	b	440c48 <feof@plt+0x3e278>
  440ab8:	ldr	x8, [x22]
  440abc:	mov	x20, xzr
  440ac0:	add	x8, x8, w15, uxtw
  440ac4:	b	440ad4 <feof@plt+0x3e104>
  440ac8:	ldr	x8, [x22]
  440acc:	mov	x20, xzr
  440ad0:	add	x8, x8, #0x2
  440ad4:	str	x8, [x22]
  440ad8:	b	440c48 <feof@plt+0x3e278>
  440adc:	ldrb	w10, [x9]
  440ae0:	cmp	w10, #0x6e
  440ae4:	b.ne	440af4 <feof@plt+0x3e124>  // b.any
  440ae8:	add	x9, x8, #0x3
  440aec:	str	x9, [x22]
  440af0:	ldrb	w10, [x8, #3]
  440af4:	sub	w8, w10, #0x30
  440af8:	cmp	w8, #0x9
  440afc:	b.hi	440b5c <feof@plt+0x3e18c>  // b.pmore
  440b00:	mov	w11, #0x2f                  	// #47
  440b04:	add	x8, x9, #0x1
  440b08:	mov	w9, #0x6667                	// #26215
  440b0c:	mov	w12, wzr
  440b10:	movk	w11, #0x8000, lsl #16
  440b14:	movk	w9, #0x6666, lsl #16
  440b18:	mov	w13, #0xa                   	// #10
  440b1c:	and	w14, w10, #0xff
  440b20:	sub	w10, w11, w14
  440b24:	smull	x10, w10, w9
  440b28:	lsr	x15, x10, #63
  440b2c:	asr	x10, x10, #34
  440b30:	add	w10, w10, w15
  440b34:	cmp	w12, w10
  440b38:	b.gt	440c44 <feof@plt+0x3e274>
  440b3c:	str	x8, [x22]
  440b40:	ldrb	w10, [x8], #1
  440b44:	madd	w12, w12, w13, w14
  440b48:	sub	w12, w12, #0x30
  440b4c:	sub	w14, w10, #0x30
  440b50:	cmp	w14, #0xa
  440b54:	b.cc	440b1c <feof@plt+0x3e14c>  // b.lo, b.ul, b.last
  440b58:	sub	x9, x8, #0x1
  440b5c:	cmp	w10, #0x5f
  440b60:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  440b64:	add	x8, x9, #0x1
  440b68:	str	x8, [x22]
  440b6c:	ldrb	w10, [x9, #1]
  440b70:	cmp	w10, #0x6e
  440b74:	b.ne	440b84 <feof@plt+0x3e1b4>  // b.any
  440b78:	add	x8, x9, #0x2
  440b7c:	str	x8, [x22]
  440b80:	ldrb	w10, [x9, #2]
  440b84:	mov	x9, x8
  440b88:	sub	w8, w10, #0x30
  440b8c:	cmp	w8, #0x9
  440b90:	b.hi	440bf0 <feof@plt+0x3e220>  // b.pmore
  440b94:	mov	w11, #0x2f                  	// #47
  440b98:	add	x8, x9, #0x1
  440b9c:	mov	w9, #0x6667                	// #26215
  440ba0:	mov	w12, wzr
  440ba4:	movk	w11, #0x8000, lsl #16
  440ba8:	movk	w9, #0x6666, lsl #16
  440bac:	mov	w13, #0xa                   	// #10
  440bb0:	and	w14, w10, #0xff
  440bb4:	sub	w10, w11, w14
  440bb8:	smull	x10, w10, w9
  440bbc:	lsr	x15, x10, #63
  440bc0:	asr	x10, x10, #34
  440bc4:	add	w10, w10, w15
  440bc8:	cmp	w12, w10
  440bcc:	b.gt	440c44 <feof@plt+0x3e274>
  440bd0:	str	x8, [x22]
  440bd4:	ldrb	w10, [x8], #1
  440bd8:	madd	w12, w12, w13, w14
  440bdc:	sub	w12, w12, #0x30
  440be0:	sub	w14, w10, #0x30
  440be4:	cmp	w14, #0xa
  440be8:	b.cc	440bb0 <feof@plt+0x3e1e0>  // b.lo, b.ul, b.last
  440bec:	sub	x9, x8, #0x1
  440bf0:	cmp	w10, #0x5f
  440bf4:	b.ne	440c44 <feof@plt+0x3e274>  // b.any
  440bf8:	add	x8, x9, #0x1
  440bfc:	mov	x0, x19
  440c00:	mov	w1, wzr
  440c04:	str	x8, [x19, #24]
  440c08:	bl	43fac0 <feof@plt+0x3d0f0>
  440c0c:	cbz	x0, 440c44 <feof@plt+0x3e274>
  440c10:	ldp	w8, w9, [x19, #40]
  440c14:	sxtw	x8, w8
  440c18:	cmp	w8, w9
  440c1c:	b.ge	440c44 <feof@plt+0x3e274>  // b.tcont
  440c20:	ldr	x9, [x19, #32]
  440c24:	mov	w10, #0x18                  	// #24
  440c28:	add	w11, w8, #0x1
  440c2c:	madd	x20, x8, x10, x9
  440c30:	str	wzr, [x20, #4]
  440c34:	str	w11, [x19, #40]
  440c38:	cbz	x9, 440c44 <feof@plt+0x3e274>
  440c3c:	mov	w10, #0x11                  	// #17
  440c40:	b	440604 <feof@plt+0x3dc34>
  440c44:	mov	x20, xzr
  440c48:	mov	x0, x20
  440c4c:	ldp	x20, x19, [sp, #32]
  440c50:	ldp	x22, x21, [sp, #16]
  440c54:	ldp	x29, x30, [sp], #48
  440c58:	ret
  440c5c:	sub	sp, sp, #0x50
  440c60:	stp	x29, x30, [sp, #16]
  440c64:	stp	x24, x23, [sp, #32]
  440c68:	stp	x22, x21, [sp, #48]
  440c6c:	stp	x20, x19, [sp, #64]
  440c70:	mov	x22, x0
  440c74:	ldr	x8, [x22, #24]!
  440c78:	mov	x21, xzr
  440c7c:	add	x29, sp, #0x10
  440c80:	ldrb	w9, [x8]
  440c84:	sub	w10, w9, #0x30
  440c88:	cmp	w10, #0x4a
  440c8c:	b.hi	441cd0 <feof@plt+0x3f300>  // b.pmore
  440c90:	adrp	x11, 460000 <_obstack_memory_used@@Base+0xfa68>
  440c94:	add	x11, x11, #0x44
  440c98:	adr	x12, 440cac <feof@plt+0x3e2dc>
  440c9c:	ldrh	w13, [x11, x10, lsl #1]
  440ca0:	add	x12, x12, x13, lsl #2
  440ca4:	mov	x19, x0
  440ca8:	br	x12
  440cac:	ldp	w10, w11, [x19, #40]
  440cb0:	sxtw	x10, w10
  440cb4:	cmp	w10, w11
  440cb8:	b.ge	440d04 <feof@plt+0x3e334>  // b.tcont
  440cbc:	ldr	x11, [x19, #32]
  440cc0:	mov	w12, #0x18                  	// #24
  440cc4:	add	w13, w10, #0x1
  440cc8:	madd	x21, x10, x12, x11
  440ccc:	str	wzr, [x21, #4]
  440cd0:	str	w13, [x19, #40]
  440cd4:	cbz	x11, 440d04 <feof@plt+0x3e334>
  440cd8:	adrp	x8, 460000 <_obstack_memory_used@@Base+0xfa68>
  440cdc:	add	x8, x8, #0xb50
  440ce0:	mov	w13, #0x18                  	// #24
  440ce4:	add	x8, x8, x9, lsl #5
  440ce8:	mov	w12, #0x27                  	// #39
  440cec:	sub	x8, x8, #0xc20
  440cf0:	madd	x9, x10, x13, x11
  440cf4:	str	w12, [x21]
  440cf8:	str	x8, [x9, #8]
  440cfc:	ldr	x8, [x22]
  440d00:	b	440d08 <feof@plt+0x3e338>
  440d04:	mov	x21, xzr
  440d08:	str	x21, [sp, #8]
  440d0c:	ldr	x9, [x21, #8]
  440d10:	ldr	w10, [x19, #72]
  440d14:	add	x8, x8, #0x1
  440d18:	ldr	w9, [x9, #8]
  440d1c:	str	x8, [x19, #24]
  440d20:	add	w9, w10, w9
  440d24:	str	w9, [x19, #72]
  440d28:	b	441cd0 <feof@plt+0x3f300>
  440d2c:	mov	x0, x19
  440d30:	bl	442ea0 <feof@plt+0x404d0>
  440d34:	mov	x20, x0
  440d38:	str	x0, [sp, #8]
  440d3c:	b	441ca0 <feof@plt+0x3f2d0>
  440d40:	add	x9, x8, #0x1
  440d44:	str	x9, [x22]
  440d48:	ldrb	w10, [x8, #1]
  440d4c:	cmp	w10, #0x5f
  440d50:	b.ne	4411bc <feof@plt+0x3e7ec>  // b.any
  440d54:	mov	x21, xzr
  440d58:	b	441350 <feof@plt+0x3e980>
  440d5c:	add	x8, x8, #0x1
  440d60:	mov	x0, x19
  440d64:	str	x8, [x19, #24]
  440d68:	bl	440c5c <feof@plt+0x3e28c>
  440d6c:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440d70:	ldp	w8, w9, [x19, #40]
  440d74:	sxtw	x8, w8
  440d78:	cmp	w8, w9
  440d7c:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  440d80:	ldr	x9, [x19, #32]
  440d84:	mov	w10, #0x18                  	// #24
  440d88:	add	w11, w8, #0x1
  440d8c:	madd	x20, x8, x10, x9
  440d90:	str	wzr, [x20, #4]
  440d94:	str	w11, [x19, #40]
  440d98:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  440d9c:	mov	w11, #0x18                  	// #24
  440da0:	mov	w10, #0x25                  	// #37
  440da4:	b	4411a8 <feof@plt+0x3e7d8>
  440da8:	mov	x9, x8
  440dac:	ldrb	w10, [x9, #1]!
  440db0:	sub	w10, w10, #0x4f
  440db4:	cmp	w10, #0x29
  440db8:	b.hi	4413b8 <feof@plt+0x3e9e8>  // b.pmore
  440dbc:	mov	w11, #0x1                   	// #1
  440dc0:	lsl	x10, x11, x10
  440dc4:	mov	x11, #0x1                   	// #1
  440dc8:	movk	x11, #0x301, lsl #32
  440dcc:	tst	x10, x11
  440dd0:	b.eq	4413b8 <feof@plt+0x3e9e8>  // b.none
  440dd4:	add	x1, sp, #0x8
  440dd8:	mov	x0, x19
  440ddc:	mov	w2, wzr
  440de0:	bl	441cec <feof@plt+0x3f31c>
  440de4:	cbz	x0, 441ccc <feof@plt+0x3f2fc>
  440de8:	ldr	x8, [x22]
  440dec:	mov	x20, x0
  440df0:	mov	x0, x19
  440df4:	ldrb	w8, [x8]
  440df8:	cmp	w8, #0x46
  440dfc:	b.ne	440e08 <feof@plt+0x3e438>  // b.any
  440e00:	bl	441f6c <feof@plt+0x3f59c>
  440e04:	b	440e0c <feof@plt+0x3e43c>
  440e08:	bl	440c5c <feof@plt+0x3e28c>
  440e0c:	str	x0, [x20]
  440e10:	cbz	x0, 441ccc <feof@plt+0x3f2fc>
  440e14:	ldr	w8, [x0]
  440e18:	sub	w8, w8, #0x1f
  440e1c:	cmp	w8, #0x1
  440e20:	b.hi	440e3c <feof@plt+0x3e46c>  // b.pmore
  440e24:	ldr	x8, [sp, #8]
  440e28:	ldr	x9, [x0, #8]
  440e2c:	str	x8, [x0, #8]
  440e30:	ldr	x8, [x20]
  440e34:	str	x8, [sp, #8]
  440e38:	str	x9, [x20]
  440e3c:	ldr	x8, [sp, #8]
  440e40:	cbz	x8, 441ccc <feof@plt+0x3f2fc>
  440e44:	ldp	w9, w10, [x19, #56]
  440e48:	sxtw	x9, w9
  440e4c:	cmp	w9, w10
  440e50:	b.ge	441ccc <feof@plt+0x3f2fc>  // b.tcont
  440e54:	ldr	x10, [x19, #48]
  440e58:	add	w11, w9, #0x1
  440e5c:	str	x8, [x10, x9, lsl #3]
  440e60:	str	w11, [x19, #56]
  440e64:	b	441cc4 <feof@plt+0x3f2f4>
  440e68:	mov	x0, x19
  440e6c:	bl	441f6c <feof@plt+0x3f59c>
  440e70:	b	440d34 <feof@plt+0x3e364>
  440e74:	add	x8, x8, #0x1
  440e78:	mov	x0, x19
  440e7c:	str	x8, [x19, #24]
  440e80:	bl	440c5c <feof@plt+0x3e28c>
  440e84:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440e88:	ldp	w8, w9, [x19, #40]
  440e8c:	sxtw	x8, w8
  440e90:	cmp	w8, w9
  440e94:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  440e98:	ldr	x9, [x19, #32]
  440e9c:	mov	w10, #0x18                  	// #24
  440ea0:	add	w11, w8, #0x1
  440ea4:	madd	x20, x8, x10, x9
  440ea8:	str	wzr, [x20, #4]
  440eac:	str	w11, [x19, #40]
  440eb0:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  440eb4:	mov	w11, #0x18                  	// #24
  440eb8:	mov	w10, #0x26                  	// #38
  440ebc:	b	4411a8 <feof@plt+0x3e7d8>
  440ec0:	add	x8, x8, #0x1
  440ec4:	mov	x0, x19
  440ec8:	str	x8, [x19, #24]
  440ecc:	bl	440c5c <feof@plt+0x3e28c>
  440ed0:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440ed4:	mov	x21, x0
  440ed8:	mov	x0, x19
  440edc:	bl	440c5c <feof@plt+0x3e28c>
  440ee0:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440ee4:	ldp	w8, w9, [x19, #40]
  440ee8:	sxtw	x8, w8
  440eec:	cmp	w8, w9
  440ef0:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  440ef4:	ldr	x9, [x19, #32]
  440ef8:	mov	w10, #0x18                  	// #24
  440efc:	add	w11, w8, #0x1
  440f00:	madd	x20, x8, x10, x9
  440f04:	str	wzr, [x20, #4]
  440f08:	str	w11, [x19, #40]
  440f0c:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  440f10:	mov	w11, #0x18                  	// #24
  440f14:	mov	w10, #0x2b                  	// #43
  440f18:	madd	x8, x8, x11, x9
  440f1c:	str	w10, [x20]
  440f20:	stp	x21, x0, [x8, #8]
  440f24:	str	x20, [sp, #8]
  440f28:	b	441ca0 <feof@plt+0x3f2d0>
  440f2c:	add	x8, x8, #0x1
  440f30:	mov	x0, x19
  440f34:	str	x8, [x19, #24]
  440f38:	bl	440c5c <feof@plt+0x3e28c>
  440f3c:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440f40:	ldp	w8, w9, [x19, #40]
  440f44:	sxtw	x8, w8
  440f48:	cmp	w8, w9
  440f4c:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  440f50:	ldr	x9, [x19, #32]
  440f54:	mov	w10, #0x18                  	// #24
  440f58:	add	w11, w8, #0x1
  440f5c:	madd	x20, x8, x10, x9
  440f60:	str	wzr, [x20, #4]
  440f64:	str	w11, [x19, #40]
  440f68:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  440f6c:	mov	w11, #0x18                  	// #24
  440f70:	mov	w10, #0x24                  	// #36
  440f74:	b	4411a8 <feof@plt+0x3e7d8>
  440f78:	add	x8, x8, #0x1
  440f7c:	mov	x0, x19
  440f80:	str	x8, [x19, #24]
  440f84:	bl	440c5c <feof@plt+0x3e28c>
  440f88:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440f8c:	ldp	w8, w9, [x19, #40]
  440f90:	sxtw	x8, w8
  440f94:	cmp	w8, w9
  440f98:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  440f9c:	ldr	x9, [x19, #32]
  440fa0:	mov	w10, #0x18                  	// #24
  440fa4:	add	w11, w8, #0x1
  440fa8:	madd	x20, x8, x10, x9
  440fac:	str	wzr, [x20, #4]
  440fb0:	str	w11, [x19, #40]
  440fb4:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  440fb8:	mov	w11, #0x18                  	// #24
  440fbc:	mov	w10, #0x22                  	// #34
  440fc0:	b	4411a8 <feof@plt+0x3e7d8>
  440fc4:	add	x8, x8, #0x1
  440fc8:	mov	x0, x19
  440fcc:	str	x8, [x19, #24]
  440fd0:	bl	440c5c <feof@plt+0x3e28c>
  440fd4:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  440fd8:	ldp	w8, w9, [x19, #40]
  440fdc:	sxtw	x8, w8
  440fe0:	cmp	w8, w9
  440fe4:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  440fe8:	ldr	x9, [x19, #32]
  440fec:	mov	w10, #0x18                  	// #24
  440ff0:	add	w11, w8, #0x1
  440ff4:	madd	x20, x8, x10, x9
  440ff8:	str	wzr, [x20, #4]
  440ffc:	str	w11, [x19, #40]
  441000:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  441004:	mov	w11, #0x18                  	// #24
  441008:	mov	w10, #0x23                  	// #35
  44100c:	b	4411a8 <feof@plt+0x3e7d8>
  441010:	ldrb	w8, [x8, #1]
  441014:	sub	w9, w8, #0x41
  441018:	cmp	w9, #0x1a
  44101c:	b.cc	441238 <feof@plt+0x3e868>  // b.lo, b.ul, b.last
  441020:	cmp	w8, #0x5f
  441024:	b.eq	441238 <feof@plt+0x3e868>  // b.none
  441028:	sub	w8, w8, #0x30
  44102c:	and	w8, w8, #0xff
  441030:	cmp	w8, #0x9
  441034:	b.ls	441238 <feof@plt+0x3e868>  // b.plast
  441038:	mov	x0, x19
  44103c:	bl	442ea0 <feof@plt+0x404d0>
  441040:	str	x0, [sp, #8]
  441044:	cbz	x0, 441ccc <feof@plt+0x3f2fc>
  441048:	ldr	w8, [x0]
  44104c:	mov	x20, x0
  441050:	mov	x21, x0
  441054:	cmp	w8, #0x18
  441058:	b.ne	441ca4 <feof@plt+0x3f2d4>  // b.any
  44105c:	b	441cd0 <feof@plt+0x3f300>
  441060:	add	x9, x8, #0x1
  441064:	str	x9, [x22]
  441068:	ldrb	w10, [x8, #1]
  44106c:	cmp	w10, #0x6e
  441070:	b.eq	441520 <feof@plt+0x3eb50>  // b.none
  441074:	cmp	w10, #0x5f
  441078:	b.ne	4412b0 <feof@plt+0x3e8e0>  // b.any
  44107c:	mov	w11, wzr
  441080:	add	x21, x8, #0x2
  441084:	str	x21, [x22]
  441088:	ldp	w8, w9, [x19, #40]
  44108c:	sxtw	x8, w8
  441090:	cmp	w8, w9
  441094:	b.ge	4414fc <feof@plt+0x3eb2c>  // b.tcont
  441098:	ldr	x9, [x19, #32]
  44109c:	mov	w10, #0x18                  	// #24
  4410a0:	add	w12, w8, #0x1
  4410a4:	madd	x20, x8, x10, x9
  4410a8:	str	wzr, [x20, #4]
  4410ac:	str	w12, [x19, #40]
  4410b0:	cbz	x9, 4414fc <feof@plt+0x3eb2c>
  4410b4:	mov	w12, #0x18                  	// #24
  4410b8:	mov	w10, #0x5                   	// #5
  4410bc:	mov	w11, w11
  4410c0:	madd	x8, x8, x12, x9
  4410c4:	str	w10, [x20]
  4410c8:	str	x11, [x8, #8]
  4410cc:	ldr	x21, [x22]
  4410d0:	mov	x9, x21
  4410d4:	b	441528 <feof@plt+0x3eb58>
  4410d8:	add	x8, x8, #0x1
  4410dc:	mov	x0, x19
  4410e0:	str	x8, [x19, #24]
  4410e4:	bl	442184 <feof@plt+0x3f7b4>
  4410e8:	str	x0, [sp, #8]
  4410ec:	ldr	x8, [x19, #24]
  4410f0:	mov	x21, x0
  4410f4:	ldrb	w9, [x8]
  4410f8:	cmp	w9, #0x49
  4410fc:	b.ne	441488 <feof@plt+0x3eab8>  // b.any
  441100:	add	x8, x8, #0x1
  441104:	mov	x0, x19
  441108:	str	x8, [x19, #24]
  44110c:	bl	444588 <feof@plt+0x41bb8>
  441110:	mov	x8, xzr
  441114:	cbz	x21, 441480 <feof@plt+0x3eab0>
  441118:	cbz	x0, 441480 <feof@plt+0x3eab0>
  44111c:	ldp	w9, w8, [x19, #40]
  441120:	sxtw	x9, w9
  441124:	cmp	w9, w8
  441128:	b.ge	44147c <feof@plt+0x3eaac>  // b.tcont
  44112c:	ldr	x10, [x19, #32]
  441130:	mov	w8, #0x18                  	// #24
  441134:	add	w11, w9, #0x1
  441138:	madd	x8, x9, x8, x10
  44113c:	str	wzr, [x8, #4]
  441140:	str	w11, [x19, #40]
  441144:	cbz	x10, 44147c <feof@plt+0x3eaac>
  441148:	mov	w12, #0x18                  	// #24
  44114c:	mov	w11, #0x4                   	// #4
  441150:	madd	x9, x9, x12, x10
  441154:	str	w11, [x8]
  441158:	stp	x21, x0, [x9, #8]
  44115c:	b	441480 <feof@plt+0x3eab0>
  441160:	add	x8, x8, #0x1
  441164:	mov	x0, x19
  441168:	str	x8, [x19, #24]
  44116c:	bl	442184 <feof@plt+0x3f7b4>
  441170:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  441174:	ldp	w8, w9, [x19, #40]
  441178:	sxtw	x8, w8
  44117c:	cmp	w8, w9
  441180:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  441184:	ldr	x9, [x19, #32]
  441188:	mov	w10, #0x18                  	// #24
  44118c:	add	w11, w8, #0x1
  441190:	madd	x20, x8, x10, x9
  441194:	str	wzr, [x20, #4]
  441198:	str	w11, [x19, #40]
  44119c:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  4411a0:	mov	w11, #0x18                  	// #24
  4411a4:	mov	w10, #0x28                  	// #40
  4411a8:	madd	x8, x8, x11, x9
  4411ac:	str	w10, [x20]
  4411b0:	stp	x0, xzr, [x8, #8]
  4411b4:	str	x20, [sp, #8]
  4411b8:	b	441ca0 <feof@plt+0x3f2d0>
  4411bc:	sub	w10, w10, #0x30
  4411c0:	cmp	w10, #0x9
  4411c4:	b.hi	441330 <feof@plt+0x3e960>  // b.pmore
  4411c8:	add	x10, x8, #0x2
  4411cc:	str	x10, [x22]
  4411d0:	ldrb	w8, [x10], #1
  4411d4:	sub	w8, w8, #0x30
  4411d8:	cmp	w8, #0xa
  4411dc:	b.cc	4411cc <feof@plt+0x3e7fc>  // b.lo, b.ul, b.last
  4411e0:	ldp	w8, w11, [x19, #40]
  4411e4:	sxtw	x8, w8
  4411e8:	cmp	w8, w11
  4411ec:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  4411f0:	ldr	x11, [x19, #32]
  4411f4:	mvn	w12, w9
  4411f8:	mov	w13, #0x18                  	// #24
  4411fc:	add	w10, w12, w10
  441200:	mov	x20, xzr
  441204:	add	w14, w8, #0x1
  441208:	cmp	w10, #0x1
  44120c:	madd	x21, x8, x13, x11
  441210:	str	wzr, [x21, #4]
  441214:	str	w14, [x19, #40]
  441218:	b.lt	4414dc <feof@plt+0x3eb0c>  // b.tstop
  44121c:	cbz	x11, 4414dc <feof@plt+0x3eb0c>
  441220:	mov	w12, #0x18                  	// #24
  441224:	madd	x8, x8, x12, x11
  441228:	str	xzr, [x21]
  44122c:	str	x9, [x8, #8]
  441230:	str	w10, [x8, #16]
  441234:	b	441350 <feof@plt+0x3e980>
  441238:	mov	x0, x19
  44123c:	mov	w1, wzr
  441240:	bl	44237c <feof@plt+0x3f9ac>
  441244:	str	x0, [sp, #8]
  441248:	ldr	x8, [x19, #24]
  44124c:	mov	x21, x0
  441250:	ldrb	w9, [x8]
  441254:	cmp	w9, #0x49
  441258:	b.ne	441cd0 <feof@plt+0x3f300>  // b.any
  44125c:	add	x8, x8, #0x1
  441260:	mov	x0, x19
  441264:	str	x8, [x19, #24]
  441268:	bl	444588 <feof@plt+0x41bb8>
  44126c:	mov	x20, xzr
  441270:	cbz	x21, 4414dc <feof@plt+0x3eb0c>
  441274:	cbz	x0, 4414dc <feof@plt+0x3eb0c>
  441278:	ldp	w8, w9, [x19, #40]
  44127c:	sxtw	x8, w8
  441280:	cmp	w8, w9
  441284:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  441288:	ldr	x9, [x19, #32]
  44128c:	mov	w10, #0x18                  	// #24
  441290:	add	w11, w8, #0x1
  441294:	madd	x20, x8, x10, x9
  441298:	str	wzr, [x20, #4]
  44129c:	str	w11, [x19, #40]
  4412a0:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  4412a4:	mov	w11, #0x18                  	// #24
  4412a8:	mov	w10, #0x4                   	// #4
  4412ac:	b	4413a8 <feof@plt+0x3e9d8>
  4412b0:	sub	w11, w10, #0x30
  4412b4:	cmp	w11, #0x9
  4412b8:	b.hi	4414e4 <feof@plt+0x3eb14>  // b.pmore
  4412bc:	mov	w11, #0x2f                  	// #47
  4412c0:	movk	w11, #0x8000, lsl #16
  4412c4:	sub	w12, w11, w10
  4412c8:	cmn	w12, #0x9
  4412cc:	b.lt	441520 <feof@plt+0x3eb50>  // b.tstop
  4412d0:	mov	w13, #0x6667                	// #26215
  4412d4:	mov	w12, wzr
  4412d8:	add	x14, x8, #0x2
  4412dc:	mov	w8, #0xa                   	// #10
  4412e0:	movk	w13, #0x6666, lsl #16
  4412e4:	str	x14, [x22]
  4412e8:	madd	w12, w12, w8, w10
  4412ec:	ldrb	w10, [x14]
  4412f0:	mov	x9, x14
  4412f4:	sub	w12, w12, #0x30
  4412f8:	sub	w14, w10, #0x30
  4412fc:	cmp	w14, #0xa
  441300:	b.cs	441508 <feof@plt+0x3eb38>  // b.hs, b.nlast
  441304:	sub	w14, w11, w10
  441308:	smull	x14, w14, w13
  44130c:	lsr	x15, x14, #63
  441310:	asr	x14, x14, #34
  441314:	add	w14, w14, w15
  441318:	cmp	w12, w14
  44131c:	add	x14, x9, #0x1
  441320:	b.le	4412e4 <feof@plt+0x3e914>
  441324:	mov	x20, xzr
  441328:	sub	x21, x14, #0x1
  44132c:	b	441528 <feof@plt+0x3eb58>
  441330:	ldr	w20, [x19, #76]
  441334:	mov	w8, #0x1                   	// #1
  441338:	mov	x0, x19
  44133c:	str	w8, [x19, #76]
  441340:	bl	4446a4 <feof@plt+0x41cd4>
  441344:	mov	x21, x0
  441348:	str	w20, [x19, #76]
  44134c:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  441350:	ldr	x8, [x22]
  441354:	ldrb	w9, [x8]
  441358:	cmp	w9, #0x5f
  44135c:	b.ne	441c98 <feof@plt+0x3f2c8>  // b.any
  441360:	add	x8, x8, #0x1
  441364:	mov	x0, x19
  441368:	str	x8, [x19, #24]
  44136c:	bl	440c5c <feof@plt+0x3e28c>
  441370:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  441374:	ldp	w8, w9, [x19, #40]
  441378:	sxtw	x8, w8
  44137c:	cmp	w8, w9
  441380:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  441384:	ldr	x9, [x19, #32]
  441388:	mov	w10, #0x18                  	// #24
  44138c:	add	w11, w8, #0x1
  441390:	madd	x20, x8, x10, x9
  441394:	str	wzr, [x20, #4]
  441398:	str	w11, [x19, #40]
  44139c:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  4413a0:	mov	w11, #0x18                  	// #24
  4413a4:	mov	w10, #0x2a                  	// #42
  4413a8:	madd	x8, x8, x11, x9
  4413ac:	str	w10, [x20]
  4413b0:	stp	x21, x0, [x8, #8]
  4413b4:	b	4414dc <feof@plt+0x3eb0c>
  4413b8:	str	x9, [x22]
  4413bc:	ldrb	w9, [x9]
  4413c0:	cbz	w9, 441ccc <feof@plt+0x3f2fc>
  4413c4:	add	x11, x8, #0x2
  4413c8:	str	x11, [x22]
  4413cc:	ldrb	w9, [x8, #1]
  4413d0:	mov	x21, xzr
  4413d4:	sub	w9, w9, #0x46
  4413d8:	cmp	w9, #0x30
  4413dc:	b.hi	441cd0 <feof@plt+0x3f300>  // b.pmore
  4413e0:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xfa68>
  4413e4:	add	x10, x10, #0xda
  4413e8:	adr	x12, 4413f8 <feof@plt+0x3ea28>
  4413ec:	ldrh	w13, [x10, x9, lsl #1]
  4413f0:	add	x12, x12, x13, lsl #2
  4413f4:	br	x12
  4413f8:	ldr	w20, [x19, #76]
  4413fc:	mov	w8, #0x1                   	// #1
  441400:	mov	x0, x19
  441404:	str	w8, [x19, #76]
  441408:	bl	4446a4 <feof@plt+0x41cd4>
  44140c:	str	w20, [x19, #76]
  441410:	cbz	x0, 4416fc <feof@plt+0x3ed2c>
  441414:	ldp	w8, w9, [x19, #40]
  441418:	sxtw	x8, w8
  44141c:	cmp	w8, w9
  441420:	b.ge	4416fc <feof@plt+0x3ed2c>  // b.tcont
  441424:	ldr	x9, [x19, #32]
  441428:	mov	w10, #0x18                  	// #24
  44142c:	add	w11, w8, #0x1
  441430:	madd	x20, x8, x10, x9
  441434:	str	wzr, [x20, #4]
  441438:	str	w11, [x19, #40]
  44143c:	cbz	x9, 4416fc <feof@plt+0x3ed2c>
  441440:	mov	w11, #0x18                  	// #24
  441444:	mov	w10, #0x43                  	// #67
  441448:	madd	x8, x8, x11, x9
  44144c:	str	w10, [x20]
  441450:	stp	x0, xzr, [x8, #8]
  441454:	str	x20, [sp, #8]
  441458:	ldr	x8, [x22]
  44145c:	ldrb	w9, [x8]
  441460:	cbz	w9, 4416fc <feof@plt+0x3ed2c>
  441464:	add	x9, x8, #0x1
  441468:	str	x9, [x22]
  44146c:	ldrb	w8, [x8]
  441470:	cmp	w8, #0x45
  441474:	b.eq	441ca4 <feof@plt+0x3f2d4>  // b.none
  441478:	b	4416fc <feof@plt+0x3ed2c>
  44147c:	mov	x8, xzr
  441480:	mov	x21, x8
  441484:	str	x8, [sp, #8]
  441488:	mov	x0, x19
  44148c:	bl	440c5c <feof@plt+0x3e28c>
  441490:	mov	x20, xzr
  441494:	cbz	x0, 4414dc <feof@plt+0x3eb0c>
  441498:	cbz	x21, 4414dc <feof@plt+0x3eb0c>
  44149c:	ldp	w8, w9, [x19, #40]
  4414a0:	sxtw	x8, w8
  4414a4:	cmp	w8, w9
  4414a8:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  4414ac:	ldr	x9, [x19, #32]
  4414b0:	mov	w10, #0x18                  	// #24
  4414b4:	add	w11, w8, #0x1
  4414b8:	madd	x20, x8, x10, x9
  4414bc:	str	wzr, [x20, #4]
  4414c0:	str	w11, [x19, #40]
  4414c4:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  4414c8:	mov	w11, #0x18                  	// #24
  4414cc:	mov	w10, #0x21                  	// #33
  4414d0:	madd	x8, x8, x11, x9
  4414d4:	str	w10, [x20]
  4414d8:	stp	x0, x21, [x8, #8]
  4414dc:	str	x20, [sp, #8]
  4414e0:	b	441ca0 <feof@plt+0x3f2d0>
  4414e4:	mov	w11, #0x1                   	// #1
  4414e8:	cmp	w10, #0x5f
  4414ec:	b.ne	441520 <feof@plt+0x3eb50>  // b.any
  4414f0:	add	x21, x8, #0x2
  4414f4:	str	x21, [x22]
  4414f8:	tbz	w11, #31, 441088 <feof@plt+0x3e6b8>
  4414fc:	mov	x20, xzr
  441500:	mov	x9, x21
  441504:	b	441528 <feof@plt+0x3eb58>
  441508:	cmn	w12, #0x1
  44150c:	b.lt	441520 <feof@plt+0x3eb50>  // b.tstop
  441510:	add	w11, w12, #0x1
  441514:	sub	x8, x9, #0x1
  441518:	cmp	w10, #0x5f
  44151c:	b.eq	4414f0 <feof@plt+0x3eb20>  // b.none
  441520:	mov	x20, xzr
  441524:	mov	x21, x9
  441528:	str	x20, [sp, #8]
  44152c:	ldrb	w8, [x9]
  441530:	cmp	w8, #0x49
  441534:	b.ne	441ca0 <feof@plt+0x3f2d0>  // b.any
  441538:	ldr	w8, [x19, #80]
  44153c:	cbz	w8, 4415e4 <feof@plt+0x3ec14>
  441540:	ldr	w22, [x19, #40]
  441544:	ldr	w23, [x19, #56]
  441548:	ldr	w24, [x19, #72]
  44154c:	add	x8, x9, #0x1
  441550:	mov	x0, x19
  441554:	str	x8, [x19, #24]
  441558:	bl	444588 <feof@plt+0x41bb8>
  44155c:	ldr	x8, [x19, #24]
  441560:	ldrb	w8, [x8]
  441564:	cmp	w8, #0x49
  441568:	b.ne	441628 <feof@plt+0x3ec58>  // b.any
  44156c:	cbz	x20, 441ccc <feof@plt+0x3f2fc>
  441570:	ldp	w8, w9, [x19, #56]
  441574:	sxtw	x8, w8
  441578:	cmp	w8, w9
  44157c:	b.ge	441ccc <feof@plt+0x3f2fc>  // b.tcont
  441580:	ldr	x9, [x19, #48]
  441584:	add	w10, w8, #0x1
  441588:	str	x20, [x9, x8, lsl #3]
  44158c:	mov	x20, xzr
  441590:	str	w10, [x19, #56]
  441594:	cbz	x0, 4414dc <feof@plt+0x3eb0c>
  441598:	ldr	x8, [sp, #8]
  44159c:	cbz	x8, 4414dc <feof@plt+0x3eb0c>
  4415a0:	ldp	w9, w10, [x19, #40]
  4415a4:	sxtw	x9, w9
  4415a8:	cmp	w9, w10
  4415ac:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  4415b0:	ldr	x10, [x19, #32]
  4415b4:	mov	w11, #0x18                  	// #24
  4415b8:	add	w12, w9, #0x1
  4415bc:	madd	x20, x9, x11, x10
  4415c0:	str	wzr, [x20, #4]
  4415c4:	str	w12, [x19, #40]
  4415c8:	cbz	x10, 441c98 <feof@plt+0x3f2c8>
  4415cc:	mov	w12, #0x18                  	// #24
  4415d0:	mov	w11, #0x4                   	// #4
  4415d4:	madd	x9, x9, x12, x10
  4415d8:	str	w11, [x20]
  4415dc:	stp	x8, x0, [x9, #8]
  4415e0:	b	4414dc <feof@plt+0x3eb0c>
  4415e4:	cbz	x20, 441ccc <feof@plt+0x3f2fc>
  4415e8:	ldp	w8, w9, [x19, #56]
  4415ec:	sxtw	x8, w8
  4415f0:	cmp	w8, w9
  4415f4:	b.ge	441ccc <feof@plt+0x3f2fc>  // b.tcont
  4415f8:	ldr	x9, [x19, #48]
  4415fc:	str	x20, [x9, x8, lsl #3]
  441600:	ldr	x9, [x19, #24]
  441604:	add	w8, w8, #0x1
  441608:	str	w8, [x19, #56]
  44160c:	ldrb	w8, [x9]
  441610:	sub	w8, w8, #0x49
  441614:	cmp	w8, #0x1
  441618:	b.hi	441c98 <feof@plt+0x3f2c8>  // b.pmore
  44161c:	ldr	x21, [sp, #8]
  441620:	add	x8, x9, #0x1
  441624:	b	441260 <feof@plt+0x3e890>
  441628:	str	x21, [x19, #24]
  44162c:	str	w22, [x19, #40]
  441630:	str	w23, [x19, #56]
  441634:	str	w24, [x19, #72]
  441638:	b	441ca0 <feof@plt+0x3f2d0>
  44163c:	ldp	w8, w9, [x19, #40]
  441640:	sxtw	x8, w8
  441644:	cmp	w8, w9
  441648:	b.ge	4419e8 <feof@plt+0x3f018>  // b.tcont
  44164c:	ldr	x9, [x19, #32]
  441650:	mov	w10, #0x18                  	// #24
  441654:	add	w12, w8, #0x1
  441658:	madd	x21, x8, x10, x9
  44165c:	str	wzr, [x21, #4]
  441660:	str	w12, [x19, #40]
  441664:	b	4419ec <feof@plt+0x3f01c>
  441668:	ldp	w8, w9, [x19, #40]
  44166c:	sxtw	x8, w8
  441670:	cmp	w8, w9
  441674:	b.ge	4416fc <feof@plt+0x3ed2c>  // b.tcont
  441678:	ldr	x9, [x19, #32]
  44167c:	mov	w10, #0x18                  	// #24
  441680:	add	w11, w8, #0x1
  441684:	madd	x21, x8, x10, x9
  441688:	str	wzr, [x21, #4]
  44168c:	str	w11, [x19, #40]
  441690:	cbz	x9, 4416fc <feof@plt+0x3ed2c>
  441694:	mov	w10, #0x18                  	// #24
  441698:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  44169c:	add	x11, x11, #0x325
  4416a0:	mov	w12, #0x4                   	// #4
  4416a4:	b	4416e4 <feof@plt+0x3ed14>
  4416a8:	ldp	w8, w9, [x19, #40]
  4416ac:	sxtw	x8, w8
  4416b0:	cmp	w8, w9
  4416b4:	b.ge	4416fc <feof@plt+0x3ed2c>  // b.tcont
  4416b8:	ldr	x9, [x19, #32]
  4416bc:	mov	w10, #0x18                  	// #24
  4416c0:	add	w11, w8, #0x1
  4416c4:	madd	x21, x8, x10, x9
  4416c8:	str	wzr, [x21, #4]
  4416cc:	str	w11, [x19, #40]
  4416d0:	cbz	x9, 4416fc <feof@plt+0x3ed2c>
  4416d4:	mov	w10, #0x18                  	// #24
  4416d8:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  4416dc:	add	x11, x11, #0x32a
  4416e0:	mov	w12, #0xe                   	// #14
  4416e4:	madd	x8, x8, x10, x9
  4416e8:	str	xzr, [x21]
  4416ec:	str	x11, [x8, #8]
  4416f0:	str	w12, [x8, #16]
  4416f4:	str	x21, [sp, #8]
  4416f8:	b	441cd0 <feof@plt+0x3f300>
  4416fc:	mov	x21, xzr
  441700:	str	xzr, [sp, #8]
  441704:	b	441cd0 <feof@plt+0x3f300>
  441708:	ldp	w8, w9, [x19, #40]
  44170c:	sxtw	x8, w8
  441710:	cmp	w8, w9
  441714:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  441718:	ldr	x9, [x19, #32]
  44171c:	mov	w10, #0x18                  	// #24
  441720:	add	w11, w8, #0x1
  441724:	madd	x21, x8, x10, x9
  441728:	str	wzr, [x21, #4]
  44172c:	str	w11, [x19, #40]
  441730:	cbz	x9, 441990 <feof@plt+0x3efc0>
  441734:	mov	w11, #0x18                  	// #24
  441738:	mov	w10, #0x27                  	// #39
  44173c:	madd	x8, x8, x11, x9
  441740:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  441744:	str	w10, [x21]
  441748:	add	x9, x9, #0xeb0
  44174c:	b	441988 <feof@plt+0x3efb8>
  441750:	ldp	w8, w9, [x19, #40]
  441754:	sxtw	x8, w8
  441758:	cmp	w8, w9
  44175c:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  441760:	ldr	x9, [x19, #32]
  441764:	mov	w10, #0x18                  	// #24
  441768:	add	w11, w8, #0x1
  44176c:	madd	x21, x8, x10, x9
  441770:	str	wzr, [x21, #4]
  441774:	str	w11, [x19, #40]
  441778:	cbz	x9, 441990 <feof@plt+0x3efc0>
  44177c:	mov	w11, #0x18                  	// #24
  441780:	mov	w10, #0x27                  	// #39
  441784:	madd	x8, x8, x11, x9
  441788:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  44178c:	str	w10, [x21]
  441790:	add	x9, x9, #0xed0
  441794:	b	441988 <feof@plt+0x3efb8>
  441798:	ldp	w8, w9, [x19, #40]
  44179c:	sxtw	x8, w8
  4417a0:	cmp	w8, w9
  4417a4:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  4417a8:	ldr	x9, [x19, #32]
  4417ac:	mov	w10, #0x18                  	// #24
  4417b0:	add	w11, w8, #0x1
  4417b4:	madd	x21, x8, x10, x9
  4417b8:	str	wzr, [x21, #4]
  4417bc:	str	w11, [x19, #40]
  4417c0:	cbz	x9, 441990 <feof@plt+0x3efc0>
  4417c4:	mov	w11, #0x18                  	// #24
  4417c8:	madd	x8, x8, x11, x9
  4417cc:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  4417d0:	mov	w10, #0x27                  	// #39
  4417d4:	add	x9, x9, #0xe90
  4417d8:	str	w10, [x21]
  4417dc:	b	441988 <feof@plt+0x3efb8>
  4417e0:	ldp	w8, w9, [x19, #40]
  4417e4:	sxtw	x8, w8
  4417e8:	cmp	w8, w9
  4417ec:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  4417f0:	ldr	x9, [x19, #32]
  4417f4:	mov	w10, #0x18                  	// #24
  4417f8:	add	w11, w8, #0x1
  4417fc:	madd	x21, x8, x10, x9
  441800:	str	wzr, [x21, #4]
  441804:	str	w11, [x19, #40]
  441808:	cbz	x9, 441990 <feof@plt+0x3efc0>
  44180c:	mov	w11, #0x18                  	// #24
  441810:	mov	w10, #0x27                  	// #39
  441814:	madd	x8, x8, x11, x9
  441818:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  44181c:	str	w10, [x21]
  441820:	add	x9, x9, #0xef0
  441824:	b	441988 <feof@plt+0x3efb8>
  441828:	ldp	w8, w9, [x19, #40]
  44182c:	sxtw	x8, w8
  441830:	cmp	w8, w9
  441834:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  441838:	ldr	x9, [x19, #32]
  44183c:	mov	w10, #0x18                  	// #24
  441840:	add	w11, w8, #0x1
  441844:	madd	x21, x8, x10, x9
  441848:	str	wzr, [x21, #4]
  44184c:	str	w11, [x19, #40]
  441850:	cbz	x9, 441990 <feof@plt+0x3efc0>
  441854:	mov	w11, #0x18                  	// #24
  441858:	mov	w10, #0x27                  	// #39
  44185c:	madd	x8, x8, x11, x9
  441860:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  441864:	str	w10, [x21]
  441868:	add	x9, x9, #0xf50
  44186c:	b	441988 <feof@plt+0x3efb8>
  441870:	ldp	w8, w9, [x19, #40]
  441874:	sxtw	x8, w8
  441878:	cmp	w8, w9
  44187c:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  441880:	ldr	x9, [x19, #32]
  441884:	mov	w10, #0x18                  	// #24
  441888:	add	w11, w8, #0x1
  44188c:	madd	x21, x8, x10, x9
  441890:	str	wzr, [x21, #4]
  441894:	str	w11, [x19, #40]
  441898:	cbz	x9, 441990 <feof@plt+0x3efc0>
  44189c:	mov	w11, #0x18                  	// #24
  4418a0:	mov	w10, #0x27                  	// #39
  4418a4:	madd	x8, x8, x11, x9
  4418a8:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  4418ac:	str	w10, [x21]
  4418b0:	add	x9, x9, #0xf70
  4418b4:	b	441988 <feof@plt+0x3efb8>
  4418b8:	mov	x0, x19
  4418bc:	bl	440c5c <feof@plt+0x3e28c>
  4418c0:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  4418c4:	ldp	w8, w9, [x19, #40]
  4418c8:	sxtw	x8, w8
  4418cc:	cmp	w8, w9
  4418d0:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  4418d4:	ldr	x9, [x19, #32]
  4418d8:	mov	w10, #0x18                  	// #24
  4418dc:	add	w11, w8, #0x1
  4418e0:	madd	x20, x8, x10, x9
  4418e4:	str	wzr, [x20, #4]
  4418e8:	str	w11, [x19, #40]
  4418ec:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  4418f0:	mov	w11, #0x18                  	// #24
  4418f4:	mov	w10, #0x4b                  	// #75
  4418f8:	b	4411a8 <feof@plt+0x3e7d8>
  4418fc:	ldp	w8, w9, [x19, #40]
  441900:	sxtw	x8, w8
  441904:	cmp	w8, w9
  441908:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  44190c:	ldr	x9, [x19, #32]
  441910:	mov	w10, #0x18                  	// #24
  441914:	add	w11, w8, #0x1
  441918:	madd	x21, x8, x10, x9
  44191c:	str	wzr, [x21, #4]
  441920:	str	w11, [x19, #40]
  441924:	cbz	x9, 441990 <feof@plt+0x3efc0>
  441928:	mov	w11, #0x18                  	// #24
  44192c:	mov	w10, #0x27                  	// #39
  441930:	madd	x8, x8, x11, x9
  441934:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  441938:	str	w10, [x21]
  44193c:	add	x9, x9, #0xf30
  441940:	b	441988 <feof@plt+0x3efb8>
  441944:	ldp	w8, w9, [x19, #40]
  441948:	sxtw	x8, w8
  44194c:	cmp	w8, w9
  441950:	b.ge	441990 <feof@plt+0x3efc0>  // b.tcont
  441954:	ldr	x9, [x19, #32]
  441958:	mov	w10, #0x18                  	// #24
  44195c:	add	w11, w8, #0x1
  441960:	madd	x21, x8, x10, x9
  441964:	str	wzr, [x21, #4]
  441968:	str	w11, [x19, #40]
  44196c:	cbz	x9, 441990 <feof@plt+0x3efc0>
  441970:	mov	w11, #0x18                  	// #24
  441974:	mov	w10, #0x27                  	// #39
  441978:	madd	x8, x8, x11, x9
  44197c:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  441980:	str	w10, [x21]
  441984:	add	x9, x9, #0xf10
  441988:	str	x9, [x8, #8]
  44198c:	b	441994 <feof@plt+0x3efc4>
  441990:	mov	x21, xzr
  441994:	str	x21, [sp, #8]
  441998:	ldr	x8, [x21, #8]
  44199c:	ldr	w9, [x19, #72]
  4419a0:	ldr	w8, [x8, #8]
  4419a4:	add	w8, w9, w8
  4419a8:	str	w8, [x19, #72]
  4419ac:	b	441cd0 <feof@plt+0x3f300>
  4419b0:	ldrb	w9, [x11]
  4419b4:	cmp	w9, #0x5f
  4419b8:	b.ne	441b38 <feof@plt+0x3f168>  // b.any
  4419bc:	ldr	w20, [x19, #76]
  4419c0:	add	x8, x8, #0x3
  4419c4:	str	x8, [x19, #24]
  4419c8:	mov	w8, #0x1                   	// #1
  4419cc:	mov	x0, x19
  4419d0:	str	w8, [x19, #76]
  4419d4:	bl	4446a4 <feof@plt+0x41cd4>
  4419d8:	mov	x21, x0
  4419dc:	str	w20, [x19, #76]
  4419e0:	cbnz	x0, 441c3c <feof@plt+0x3f26c>
  4419e4:	b	441c98 <feof@plt+0x3f2c8>
  4419e8:	mov	x21, xzr
  4419ec:	mov	w8, #0x2c                  	// #44
  4419f0:	str	x21, [sp, #8]
  4419f4:	str	w8, [x21]
  4419f8:	ldrb	w8, [x11]
  4419fc:	sub	w8, w8, #0x30
  441a00:	cmp	w8, #0xa
  441a04:	cset	w9, cc  // cc = lo, ul, last
  441a08:	cmp	w8, #0x9
  441a0c:	strh	w9, [x21, #16]
  441a10:	b.hi	441a98 <feof@plt+0x3f0c8>  // b.pmore
  441a14:	ldr	x10, [x22]
  441a18:	ldrb	w8, [x10]
  441a1c:	cmp	w8, #0x6e
  441a20:	b.ne	441a34 <feof@plt+0x3f064>  // b.any
  441a24:	add	x9, x10, #0x1
  441a28:	str	x9, [x22]
  441a2c:	ldrb	w8, [x10, #1]
  441a30:	mov	x10, x9
  441a34:	sub	w9, w8, #0x30
  441a38:	cmp	w9, #0x9
  441a3c:	b.hi	441a98 <feof@plt+0x3f0c8>  // b.pmore
  441a40:	mov	w9, #0x2f                  	// #47
  441a44:	mov	w12, #0x6667                	// #26215
  441a48:	mov	w11, wzr
  441a4c:	movk	w9, #0x8000, lsl #16
  441a50:	add	x10, x10, #0x1
  441a54:	movk	w12, #0x6666, lsl #16
  441a58:	mov	w13, #0xa                   	// #10
  441a5c:	and	w14, w8, #0xff
  441a60:	sub	w8, w9, w14
  441a64:	smull	x8, w8, w12
  441a68:	lsr	x15, x8, #63
  441a6c:	asr	x8, x8, #34
  441a70:	add	w8, w8, w15
  441a74:	cmp	w11, w8
  441a78:	b.gt	441a98 <feof@plt+0x3f0c8>
  441a7c:	str	x10, [x22]
  441a80:	ldrb	w8, [x10], #1
  441a84:	madd	w11, w11, w13, w14
  441a88:	sub	w11, w11, #0x30
  441a8c:	sub	w14, w8, #0x30
  441a90:	cmp	w14, #0xa
  441a94:	b.cc	441a5c <feof@plt+0x3f08c>  // b.lo, b.ul, b.last
  441a98:	mov	x0, x19
  441a9c:	bl	440c5c <feof@plt+0x3e28c>
  441aa0:	str	x0, [x21, #8]
  441aa4:	cbz	x0, 441ccc <feof@plt+0x3f2fc>
  441aa8:	ldr	x9, [x22]
  441aac:	ldrb	w8, [x9]
  441ab0:	cmp	w8, #0x6e
  441ab4:	b.ne	441ac8 <feof@plt+0x3f0f8>  // b.any
  441ab8:	add	x10, x9, #0x1
  441abc:	str	x10, [x22]
  441ac0:	ldrb	w8, [x9, #1]
  441ac4:	mov	x9, x10
  441ac8:	sub	w10, w8, #0x30
  441acc:	cmp	w10, #0x9
  441ad0:	b.hi	441b30 <feof@plt+0x3f160>  // b.pmore
  441ad4:	mov	w10, #0x2f                  	// #47
  441ad8:	mov	w12, #0x6667                	// #26215
  441adc:	mov	w11, wzr
  441ae0:	movk	w10, #0x8000, lsl #16
  441ae4:	add	x9, x9, #0x1
  441ae8:	movk	w12, #0x6666, lsl #16
  441aec:	mov	w13, #0xa                   	// #10
  441af0:	and	w14, w8, #0xff
  441af4:	sub	w8, w10, w14
  441af8:	smull	x8, w8, w12
  441afc:	lsr	x15, x8, #63
  441b00:	asr	x8, x8, #34
  441b04:	add	w8, w8, w15
  441b08:	cmp	w11, w8
  441b0c:	b.gt	441b8c <feof@plt+0x3f1bc>
  441b10:	str	x9, [x22]
  441b14:	ldrb	w8, [x9], #1
  441b18:	madd	w11, w11, w13, w14
  441b1c:	sub	w11, w11, #0x30
  441b20:	sub	w14, w8, #0x30
  441b24:	cmp	w14, #0xa
  441b28:	b.cc	441af0 <feof@plt+0x3f120>  // b.lo, b.ul, b.last
  441b2c:	sub	x9, x9, #0x1
  441b30:	cbnz	w8, 441b90 <feof@plt+0x3f1c0>
  441b34:	b	441ba4 <feof@plt+0x3f1d4>
  441b38:	ldp	w9, w10, [x19, #40]
  441b3c:	sxtw	x9, w9
  441b40:	cmp	w9, w10
  441b44:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  441b48:	ldr	x10, [x19, #32]
  441b4c:	mov	w12, #0x18                  	// #24
  441b50:	add	w13, w9, #0x1
  441b54:	madd	x21, x9, x12, x10
  441b58:	str	wzr, [x21, #4]
  441b5c:	str	w13, [x19, #40]
  441b60:	cbz	x10, 441c98 <feof@plt+0x3f2c8>
  441b64:	mov	w12, #0x42                  	// #66
  441b68:	str	w12, [x21]
  441b6c:	ldrb	w12, [x11]
  441b70:	cmp	w12, #0x6e
  441b74:	b.ne	441bac <feof@plt+0x3f1dc>  // b.any
  441b78:	add	x11, x8, #0x3
  441b7c:	str	x11, [x22]
  441b80:	ldrb	w12, [x8, #3]
  441b84:	mov	w8, #0x1                   	// #1
  441b88:	b	441bb0 <feof@plt+0x3f1e0>
  441b8c:	sub	x9, x9, #0x1
  441b90:	add	x8, x9, #0x1
  441b94:	str	x8, [x22]
  441b98:	ldrb	w8, [x9]
  441b9c:	cmp	w8, #0x73
  441ba0:	cset	w8, eq  // eq = none
  441ba4:	strh	w8, [x21, #18]
  441ba8:	b	441cd0 <feof@plt+0x3f300>
  441bac:	mov	w8, wzr
  441bb0:	sub	w13, w12, #0x30
  441bb4:	cmp	w13, #0x9
  441bb8:	b.hi	441c18 <feof@plt+0x3f248>  // b.pmore
  441bbc:	mov	w14, #0x2f                  	// #47
  441bc0:	mov	w15, #0x6667                	// #26215
  441bc4:	mov	w13, wzr
  441bc8:	movk	w14, #0x8000, lsl #16
  441bcc:	add	x11, x11, #0x1
  441bd0:	movk	w15, #0x6666, lsl #16
  441bd4:	mov	w16, #0xa                   	// #10
  441bd8:	and	w17, w12, #0xff
  441bdc:	sub	w12, w14, w17
  441be0:	smull	x12, w12, w15
  441be4:	lsr	x18, x12, #63
  441be8:	asr	x12, x12, #34
  441bec:	add	w12, w12, w18
  441bf0:	cmp	w13, w12
  441bf4:	b.gt	441c2c <feof@plt+0x3f25c>
  441bf8:	str	x11, [x22]
  441bfc:	ldrb	w12, [x11], #1
  441c00:	madd	w13, w13, w16, w17
  441c04:	sub	w13, w13, #0x30
  441c08:	sub	w17, w12, #0x30
  441c0c:	cmp	w17, #0xa
  441c10:	b.cc	441bd8 <feof@plt+0x3f208>  // b.lo, b.ul, b.last
  441c14:	b	441c1c <feof@plt+0x3f24c>
  441c18:	mov	w13, wzr
  441c1c:	cmp	w8, #0x0
  441c20:	cneg	w8, w13, ne  // ne = any
  441c24:	sxtw	x8, w8
  441c28:	b	441c30 <feof@plt+0x3f260>
  441c2c:	mov	x8, #0xffffffffffffffff    	// #-1
  441c30:	mov	w11, #0x18                  	// #24
  441c34:	madd	x9, x9, x11, x10
  441c38:	str	x8, [x9, #8]
  441c3c:	ldr	x8, [x22]
  441c40:	ldrb	w9, [x8]
  441c44:	cmp	w9, #0x5f
  441c48:	b.ne	441c98 <feof@plt+0x3f2c8>  // b.any
  441c4c:	add	x8, x8, #0x1
  441c50:	mov	x0, x19
  441c54:	str	x8, [x19, #24]
  441c58:	bl	440c5c <feof@plt+0x3e28c>
  441c5c:	cbz	x0, 441c98 <feof@plt+0x3f2c8>
  441c60:	ldp	w8, w9, [x19, #40]
  441c64:	sxtw	x8, w8
  441c68:	cmp	w8, w9
  441c6c:	b.ge	441c98 <feof@plt+0x3f2c8>  // b.tcont
  441c70:	ldr	x9, [x19, #32]
  441c74:	mov	w10, #0x18                  	// #24
  441c78:	add	w11, w8, #0x1
  441c7c:	madd	x20, x8, x10, x9
  441c80:	str	wzr, [x20, #4]
  441c84:	str	w11, [x19, #40]
  441c88:	cbz	x9, 441c98 <feof@plt+0x3f2c8>
  441c8c:	mov	w11, #0x18                  	// #24
  441c90:	mov	w10, #0x2d                  	// #45
  441c94:	b	440f18 <feof@plt+0x3e548>
  441c98:	mov	x20, xzr
  441c9c:	str	xzr, [sp, #8]
  441ca0:	cbz	x20, 441ccc <feof@plt+0x3f2fc>
  441ca4:	ldp	w8, w9, [x19, #56]
  441ca8:	sxtw	x8, w8
  441cac:	cmp	w8, w9
  441cb0:	b.ge	441ccc <feof@plt+0x3f2fc>  // b.tcont
  441cb4:	ldr	x9, [x19, #48]
  441cb8:	add	w10, w8, #0x1
  441cbc:	str	x20, [x9, x8, lsl #3]
  441cc0:	str	w10, [x19, #56]
  441cc4:	ldr	x21, [sp, #8]
  441cc8:	b	441cd0 <feof@plt+0x3f300>
  441ccc:	mov	x21, xzr
  441cd0:	mov	x0, x21
  441cd4:	ldp	x20, x19, [sp, #64]
  441cd8:	ldp	x22, x21, [sp, #48]
  441cdc:	ldp	x24, x23, [sp, #32]
  441ce0:	ldp	x29, x30, [sp, #16]
  441ce4:	add	sp, sp, #0x50
  441ce8:	ret
  441cec:	stp	x29, x30, [sp, #-96]!
  441cf0:	stp	x28, x27, [sp, #16]
  441cf4:	cmp	w2, #0x0
  441cf8:	mov	w8, #0x1e                  	// #30
  441cfc:	mov	w9, #0x1b                  	// #27
  441d00:	mov	w10, #0x1d                  	// #29
  441d04:	mov	w11, #0x1a                  	// #26
  441d08:	mov	w12, #0x1c                  	// #28
  441d0c:	mov	w13, #0x19                  	// #25
  441d10:	mov	x27, #0x1                   	// #1
  441d14:	stp	x26, x25, [sp, #32]
  441d18:	stp	x24, x23, [sp, #48]
  441d1c:	stp	x22, x21, [sp, #64]
  441d20:	stp	x20, x19, [sp, #80]
  441d24:	mov	w20, w2
  441d28:	mov	x19, x1
  441d2c:	mov	x21, x0
  441d30:	csel	w23, w9, w8, eq  // eq = none
  441d34:	mov	w24, #0x1                   	// #1
  441d38:	csel	w25, w11, w10, eq  // eq = none
  441d3c:	csel	w26, w13, w12, eq  // eq = none
  441d40:	movk	x27, #0x301, lsl #32
  441d44:	mov	x22, x1
  441d48:	mov	x29, sp
  441d4c:	ldr	x8, [x21, #24]
  441d50:	ldrb	w9, [x8]
  441d54:	cmp	w9, #0x55
  441d58:	b.gt	441d70 <feof@plt+0x3f3a0>
  441d5c:	cmp	w9, #0x44
  441d60:	b.eq	441db0 <feof@plt+0x3f3e0>  // b.none
  441d64:	cmp	w9, #0x4b
  441d68:	b.eq	441d80 <feof@plt+0x3f3b0>  // b.none
  441d6c:	b	441f0c <feof@plt+0x3f53c>
  441d70:	cmp	w9, #0x56
  441d74:	b.eq	441d80 <feof@plt+0x3f3b0>  // b.none
  441d78:	cmp	w9, #0x72
  441d7c:	b.ne	441f0c <feof@plt+0x3f53c>  // b.any
  441d80:	add	x10, x8, #0x1
  441d84:	cmp	w9, #0x4b
  441d88:	str	x10, [x21, #24]
  441d8c:	b.eq	441e7c <feof@plt+0x3f4ac>  // b.none
  441d90:	cmp	w9, #0x56
  441d94:	b.eq	441e94 <feof@plt+0x3f4c4>  // b.none
  441d98:	cmp	w9, #0x72
  441d9c:	b.ne	441dd4 <feof@plt+0x3f404>  // b.any
  441da0:	ldr	w8, [x21, #72]
  441da4:	mov	x3, xzr
  441da8:	mov	w1, w26
  441dac:	b	441ea0 <feof@plt+0x3f4d0>
  441db0:	ldrb	w9, [x8, #1]
  441db4:	sub	w9, w9, #0x4f
  441db8:	cmp	w9, #0x29
  441dbc:	b.hi	441f18 <feof@plt+0x3f548>  // b.pmore
  441dc0:	lsl	x9, x24, x9
  441dc4:	tst	x9, x27
  441dc8:	b.eq	441f18 <feof@plt+0x3f548>  // b.none
  441dcc:	add	x10, x8, #0x1
  441dd0:	str	x10, [x21, #24]
  441dd4:	ldrb	w9, [x10]
  441dd8:	cbz	w9, 441f4c <feof@plt+0x3f57c>
  441ddc:	add	x9, x8, #0x2
  441de0:	str	x9, [x21, #24]
  441de4:	ldrb	w8, [x8, #1]
  441de8:	mov	x0, xzr
  441dec:	cmp	w8, #0x76
  441df0:	b.gt	441e54 <feof@plt+0x3f484>
  441df4:	cmp	w8, #0x4f
  441df8:	b.eq	441e04 <feof@plt+0x3f434>  // b.none
  441dfc:	cmp	w8, #0x6f
  441e00:	b.ne	441f50 <feof@plt+0x3f580>  // b.any
  441e04:	ldr	w9, [x21, #72]
  441e08:	cmp	w8, #0x4f
  441e0c:	add	w9, w9, #0x9
  441e10:	str	w9, [x21, #72]
  441e14:	b.ne	441eac <feof@plt+0x3f4dc>  // b.any
  441e18:	ldr	w28, [x21, #76]
  441e1c:	mov	x0, x21
  441e20:	str	w24, [x21, #76]
  441e24:	bl	4446a4 <feof@plt+0x41cd4>
  441e28:	str	w28, [x21, #76]
  441e2c:	cbz	x0, 441f50 <feof@plt+0x3f580>
  441e30:	ldr	x8, [x21, #24]
  441e34:	ldrb	w9, [x8]
  441e38:	cmp	w9, #0x45
  441e3c:	b.ne	441f4c <feof@plt+0x3f57c>  // b.any
  441e40:	add	x8, x8, #0x1
  441e44:	mov	x3, x0
  441e48:	str	x8, [x21, #24]
  441e4c:	mov	w1, #0x4f                  	// #79
  441e50:	b	441ef0 <feof@plt+0x3f520>
  441e54:	cmp	w8, #0x77
  441e58:	b.eq	441eb8 <feof@plt+0x3f4e8>  // b.none
  441e5c:	cmp	w8, #0x78
  441e60:	b.ne	441f50 <feof@plt+0x3f580>  // b.any
  441e64:	ldr	w8, [x21, #72]
  441e68:	mov	x3, xzr
  441e6c:	mov	w1, #0x4d                  	// #77
  441e70:	add	w8, w8, #0x11
  441e74:	str	w8, [x21, #72]
  441e78:	b	441ef0 <feof@plt+0x3f520>
  441e7c:	ldr	w8, [x21, #72]
  441e80:	mov	x3, xzr
  441e84:	mov	w1, w23
  441e88:	add	w8, w8, #0x6
  441e8c:	str	w8, [x21, #72]
  441e90:	b	441ef0 <feof@plt+0x3f520>
  441e94:	ldr	w8, [x21, #72]
  441e98:	mov	x3, xzr
  441e9c:	mov	w1, w25
  441ea0:	add	w8, w8, #0x9
  441ea4:	str	w8, [x21, #72]
  441ea8:	b	441ef0 <feof@plt+0x3f520>
  441eac:	mov	x3, xzr
  441eb0:	mov	w1, #0x4f                  	// #79
  441eb4:	b	441ef0 <feof@plt+0x3f520>
  441eb8:	ldr	w8, [x21, #72]
  441ebc:	mov	x0, x21
  441ec0:	add	w8, w8, #0x6
  441ec4:	str	w8, [x21, #72]
  441ec8:	bl	44446c <feof@plt+0x41a9c>
  441ecc:	cbz	x0, 441f50 <feof@plt+0x3f580>
  441ed0:	ldr	x8, [x21, #24]
  441ed4:	ldrb	w9, [x8]
  441ed8:	cmp	w9, #0x45
  441edc:	b.ne	441f4c <feof@plt+0x3f57c>  // b.any
  441ee0:	mov	x3, x0
  441ee4:	add	x8, x8, #0x1
  441ee8:	mov	w1, #0x50                  	// #80
  441eec:	str	x8, [x21, #24]
  441ef0:	mov	x0, x21
  441ef4:	mov	x2, xzr
  441ef8:	bl	4420f8 <feof@plt+0x3f728>
  441efc:	str	x0, [x22]
  441f00:	cbz	x0, 441f50 <feof@plt+0x3f580>
  441f04:	add	x22, x0, #0x8
  441f08:	b	441d4c <feof@plt+0x3f37c>
  441f0c:	cmp	w9, #0x46
  441f10:	b.ne	441f18 <feof@plt+0x3f548>  // b.any
  441f14:	cbz	w20, 441f24 <feof@plt+0x3f554>
  441f18:	mov	x0, x22
  441f1c:	b	441f50 <feof@plt+0x3f580>
  441f20:	add	x19, x8, #0x8
  441f24:	cmp	x22, x19
  441f28:	b.eq	441f18 <feof@plt+0x3f548>  // b.none
  441f2c:	ldr	x8, [x19]
  441f30:	ldr	w9, [x8]
  441f34:	sub	w10, w9, #0x19
  441f38:	cmp	w10, #0x2
  441f3c:	b.hi	441f20 <feof@plt+0x3f550>  // b.pmore
  441f40:	add	w9, w9, #0x3
  441f44:	str	w9, [x8]
  441f48:	b	441f20 <feof@plt+0x3f550>
  441f4c:	mov	x0, xzr
  441f50:	ldp	x20, x19, [sp, #80]
  441f54:	ldp	x22, x21, [sp, #64]
  441f58:	ldp	x24, x23, [sp, #48]
  441f5c:	ldp	x26, x25, [sp, #32]
  441f60:	ldp	x28, x27, [sp, #16]
  441f64:	ldp	x29, x30, [sp], #96
  441f68:	ret
  441f6c:	stp	x29, x30, [sp, #-32]!
  441f70:	stp	x20, x19, [sp, #16]
  441f74:	ldrb	w8, [x0, #18]
  441f78:	mov	x19, x0
  441f7c:	mov	x29, sp
  441f80:	tbnz	w8, #2, 441fa0 <feof@plt+0x3f5d0>
  441f84:	ldr	w8, [x19, #84]
  441f88:	cmp	w8, #0x800
  441f8c:	b.ls	441f98 <feof@plt+0x3f5c8>  // b.plast
  441f90:	mov	x2, xzr
  441f94:	b	4420e8 <feof@plt+0x3f718>
  441f98:	add	w8, w8, #0x1
  441f9c:	str	w8, [x19, #84]
  441fa0:	ldr	x8, [x19, #24]
  441fa4:	ldrb	w9, [x8]
  441fa8:	cmp	w9, #0x46
  441fac:	b.ne	4420d0 <feof@plt+0x3f700>  // b.any
  441fb0:	add	x9, x8, #0x1
  441fb4:	str	x9, [x19, #24]
  441fb8:	ldrb	w9, [x8, #1]
  441fbc:	cmp	w9, #0x59
  441fc0:	b.ne	441fe0 <feof@plt+0x3f610>  // b.any
  441fc4:	add	x9, x8, #0x2
  441fc8:	str	x9, [x19, #24]
  441fcc:	ldrb	w9, [x8, #2]
  441fd0:	mov	w10, #0x2                   	// #2
  441fd4:	cmp	w9, #0x4a
  441fd8:	b.eq	441fec <feof@plt+0x3f61c>  // b.none
  441fdc:	b	441ff8 <feof@plt+0x3f628>
  441fe0:	mov	w10, #0x1                   	// #1
  441fe4:	cmp	w9, #0x4a
  441fe8:	b.ne	441ff8 <feof@plt+0x3f628>  // b.any
  441fec:	add	x8, x8, x10
  441ff0:	add	x8, x8, #0x1
  441ff4:	str	x8, [x19, #24]
  441ff8:	mov	x0, x19
  441ffc:	bl	440c5c <feof@plt+0x3e28c>
  442000:	cbz	x0, 442058 <feof@plt+0x3f688>
  442004:	mov	x20, x0
  442008:	mov	x0, x19
  44200c:	bl	44446c <feof@plt+0x41a9c>
  442010:	cbz	x0, 442058 <feof@plt+0x3f688>
  442014:	ldp	w8, w9, [x19, #40]
  442018:	sxtw	x8, w8
  44201c:	cmp	w8, w9
  442020:	b.ge	442058 <feof@plt+0x3f688>  // b.tcont
  442024:	ldr	x9, [x19, #32]
  442028:	mov	w10, #0x18                  	// #24
  44202c:	add	w11, w8, #0x1
  442030:	madd	x2, x8, x10, x9
  442034:	str	wzr, [x2, #4]
  442038:	str	w11, [x19, #40]
  44203c:	cbz	x9, 442058 <feof@plt+0x3f688>
  442040:	mov	w11, #0x18                  	// #24
  442044:	mov	w10, #0x29                  	// #41
  442048:	madd	x8, x8, x11, x9
  44204c:	str	w10, [x2]
  442050:	stp	x20, x0, [x8, #8]
  442054:	b	44205c <feof@plt+0x3f68c>
  442058:	mov	x2, xzr
  44205c:	ldr	x8, [x19, #24]
  442060:	ldrb	w9, [x8]
  442064:	cmp	w9, #0x52
  442068:	b.eq	442074 <feof@plt+0x3f6a4>  // b.none
  44206c:	cmp	w9, #0x4f
  442070:	b.ne	4420b4 <feof@plt+0x3f6e4>  // b.any
  442074:	ldr	w10, [x19, #72]
  442078:	cmp	w9, #0x52
  44207c:	mov	w9, #0x2                   	// #2
  442080:	mov	w11, #0x1f                  	// #31
  442084:	cinc	w9, w9, ne  // ne = any
  442088:	add	x8, x8, #0x1
  44208c:	cinc	w1, w11, ne  // ne = any
  442090:	add	w9, w10, w9
  442094:	mov	x0, x19
  442098:	mov	x3, xzr
  44209c:	str	w9, [x19, #72]
  4420a0:	str	x8, [x19, #24]
  4420a4:	bl	4420f8 <feof@plt+0x3f728>
  4420a8:	ldr	x8, [x19, #24]
  4420ac:	mov	x2, x0
  4420b0:	ldrb	w9, [x8]
  4420b4:	cmp	w9, #0x45
  4420b8:	b.ne	4420d0 <feof@plt+0x3f700>  // b.any
  4420bc:	add	x8, x8, #0x1
  4420c0:	str	x8, [x19, #24]
  4420c4:	ldrb	w8, [x19, #18]
  4420c8:	tbz	w8, #2, 4420dc <feof@plt+0x3f70c>
  4420cc:	b	4420e8 <feof@plt+0x3f718>
  4420d0:	mov	x2, xzr
  4420d4:	ldrb	w8, [x19, #18]
  4420d8:	tbnz	w8, #2, 4420e8 <feof@plt+0x3f718>
  4420dc:	ldr	w8, [x19, #84]
  4420e0:	sub	w8, w8, #0x1
  4420e4:	str	w8, [x19, #84]
  4420e8:	ldp	x20, x19, [sp, #16]
  4420ec:	mov	x0, x2
  4420f0:	ldp	x29, x30, [sp], #32
  4420f4:	ret
  4420f8:	sub	w9, w1, #0x1
  4420fc:	mov	x8, x0
  442100:	cmp	w9, #0x4f
  442104:	mov	x0, xzr
  442108:	b.hi	442174 <feof@plt+0x3f7a4>  // b.pmore
  44210c:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xfa68>
  442110:	add	x10, x10, #0x13c
  442114:	adr	x11, 442124 <feof@plt+0x3f754>
  442118:	ldrb	w12, [x10, x9]
  44211c:	add	x11, x11, x12, lsl #2
  442120:	br	x11
  442124:	cbnz	x2, 442138 <feof@plt+0x3f768>
  442128:	b	44217c <feof@plt+0x3f7ac>
  44212c:	mov	x0, xzr
  442130:	cbz	x2, 442174 <feof@plt+0x3f7a4>
  442134:	cbz	x3, 442174 <feof@plt+0x3f7a4>
  442138:	ldp	w9, w10, [x8, #40]
  44213c:	sxtw	x9, w9
  442140:	cmp	w9, w10
  442144:	b.ge	44217c <feof@plt+0x3f7ac>  // b.tcont
  442148:	ldr	x10, [x8, #32]
  44214c:	mov	w11, #0x18                  	// #24
  442150:	add	w12, w9, #0x1
  442154:	madd	x0, x9, x11, x10
  442158:	str	wzr, [x0, #4]
  44215c:	str	w12, [x8, #40]
  442160:	cbz	x10, 44217c <feof@plt+0x3f7ac>
  442164:	mov	w8, #0x18                  	// #24
  442168:	madd	x8, x9, x8, x10
  44216c:	str	w1, [x0]
  442170:	stp	x2, x3, [x8, #8]
  442174:	ret
  442178:	cbnz	x3, 442138 <feof@plt+0x3f768>
  44217c:	mov	x0, xzr
  442180:	ret
  442184:	ldr	x9, [x0, #24]
  442188:	ldrb	w10, [x9]
  44218c:	cmp	w10, #0x6e
  442190:	b.ne	4421ac <feof@plt+0x3f7dc>  // b.any
  442194:	add	x11, x9, #0x1
  442198:	str	x11, [x0, #24]
  44219c:	ldrb	w10, [x9, #1]
  4421a0:	mov	w8, #0x1                   	// #1
  4421a4:	mov	x9, x11
  4421a8:	b	4421b0 <feof@plt+0x3f7e0>
  4421ac:	mov	w8, wzr
  4421b0:	sub	w11, w10, #0x30
  4421b4:	cmp	w11, #0x9
  4421b8:	b.hi	44221c <feof@plt+0x3f84c>  // b.pmore
  4421bc:	mov	w12, #0x2f                  	// #47
  4421c0:	mov	w13, #0x6667                	// #26215
  4421c4:	mov	w11, wzr
  4421c8:	add	x9, x9, #0x1
  4421cc:	movk	w12, #0x8000, lsl #16
  4421d0:	movk	w13, #0x6666, lsl #16
  4421d4:	mov	w14, #0xa                   	// #10
  4421d8:	and	w15, w10, #0xff
  4421dc:	sub	w10, w12, w15
  4421e0:	smull	x10, w10, w13
  4421e4:	lsr	x16, x10, #63
  4421e8:	asr	x10, x10, #34
  4421ec:	add	w10, w10, w16
  4421f0:	cmp	w11, w10
  4421f4:	b.gt	4422d0 <feof@plt+0x3f900>
  4421f8:	str	x9, [x0, #24]
  4421fc:	ldrb	w10, [x9], #1
  442200:	madd	w11, w11, w14, w15
  442204:	sub	w11, w11, #0x30
  442208:	sub	w15, w10, #0x30
  44220c:	cmp	w15, #0xa
  442210:	b.cc	4421d8 <feof@plt+0x3f808>  // b.lo, b.ul, b.last
  442214:	sub	x9, x9, #0x1
  442218:	b	442220 <feof@plt+0x3f850>
  44221c:	mov	w11, wzr
  442220:	cmp	w8, #0x0
  442224:	cneg	w10, w11, ne  // ne = any
  442228:	cmp	w10, #0x1
  44222c:	b.lt	4422d0 <feof@plt+0x3f900>  // b.tstop
  442230:	ldr	x8, [x0, #8]
  442234:	sub	x11, x8, x9
  442238:	mov	w8, w10
  44223c:	cmp	x11, x8
  442240:	b.lt	44236c <feof@plt+0x3f99c>  // b.tstop
  442244:	ldrb	w11, [x0, #16]
  442248:	add	x8, x9, x8
  44224c:	str	x8, [x0, #24]
  442250:	tbz	w11, #2, 442268 <feof@plt+0x3f898>
  442254:	ldrb	w11, [x8]
  442258:	cmp	w11, #0x24
  44225c:	b.ne	442268 <feof@plt+0x3f898>  // b.any
  442260:	add	x8, x8, #0x1
  442264:	str	x8, [x0, #24]
  442268:	cmp	w10, #0xa
  44226c:	b.lt	44228c <feof@plt+0x3f8bc>  // b.tstop
  442270:	ldr	x8, [x9]
  442274:	mov	x11, #0x475f                	// #18271
  442278:	movk	x11, #0x4f4c, lsl #16
  44227c:	movk	x11, #0x4142, lsl #32
  442280:	movk	x11, #0x5f4c, lsl #48
  442284:	cmp	x8, x11
  442288:	b.eq	4422d8 <feof@plt+0x3f908>  // b.none
  44228c:	ldp	w11, w8, [x0, #40]
  442290:	sxtw	x11, w11
  442294:	cmp	w11, w8
  442298:	b.ge	44236c <feof@plt+0x3f99c>  // b.tcont
  44229c:	ldr	x12, [x0, #32]
  4422a0:	mov	w8, #0x18                  	// #24
  4422a4:	add	w13, w11, #0x1
  4422a8:	madd	x8, x11, x8, x12
  4422ac:	str	wzr, [x8, #4]
  4422b0:	str	w13, [x0, #40]
  4422b4:	cbz	x12, 44236c <feof@plt+0x3f99c>
  4422b8:	mov	w13, #0x18                  	// #24
  4422bc:	madd	x11, x11, x13, x12
  4422c0:	str	xzr, [x8]
  4422c4:	str	x9, [x11, #8]
  4422c8:	str	w10, [x11, #16]
  4422cc:	b	442370 <feof@plt+0x3f9a0>
  4422d0:	mov	x0, xzr
  4422d4:	ret
  4422d8:	ldrb	w8, [x9, #8]
  4422dc:	sub	w8, w8, #0x24
  4422e0:	cmp	w8, #0x3b
  4422e4:	b.hi	44228c <feof@plt+0x3f8bc>  // b.pmore
  4422e8:	mov	w11, #0x1                   	// #1
  4422ec:	lsl	x8, x11, x8
  4422f0:	mov	x11, #0x401                 	// #1025
  4422f4:	movk	x11, #0x800, lsl #48
  4422f8:	tst	x8, x11
  4422fc:	b.eq	44228c <feof@plt+0x3f8bc>  // b.none
  442300:	ldrb	w8, [x9, #9]
  442304:	cmp	w8, #0x4e
  442308:	b.ne	44228c <feof@plt+0x3f8bc>  // b.any
  44230c:	ldr	w8, [x0, #72]
  442310:	ldp	w9, w11, [x0, #40]
  442314:	sxtw	x9, w9
  442318:	sub	w8, w8, w10
  44231c:	add	w8, w8, #0x16
  442320:	cmp	w9, w11
  442324:	str	w8, [x0, #72]
  442328:	b.ge	44236c <feof@plt+0x3f99c>  // b.tcont
  44232c:	ldr	x10, [x0, #32]
  442330:	mov	w8, #0x18                  	// #24
  442334:	add	w11, w9, #0x1
  442338:	madd	x8, x9, x8, x10
  44233c:	str	wzr, [x8, #4]
  442340:	str	w11, [x0, #40]
  442344:	cbz	x10, 44236c <feof@plt+0x3f99c>
  442348:	mov	w11, #0x18                  	// #24
  44234c:	adrp	x12, 461000 <_obstack_memory_used@@Base+0x10a68>
  442350:	add	x12, x12, #0x346
  442354:	mov	w13, #0x15                  	// #21
  442358:	madd	x9, x9, x11, x10
  44235c:	str	xzr, [x8]
  442360:	str	x12, [x9, #8]
  442364:	str	w13, [x9, #16]
  442368:	b	442370 <feof@plt+0x3f9a0>
  44236c:	mov	x8, xzr
  442370:	str	x8, [x0, #64]
  442374:	mov	x0, x8
  442378:	ret
  44237c:	stp	x29, x30, [sp, #-64]!
  442380:	stp	x22, x21, [sp, #32]
  442384:	stp	x20, x19, [sp, #48]
  442388:	ldr	x8, [x0, #24]
  44238c:	str	x23, [sp, #16]
  442390:	mov	x29, sp
  442394:	ldrb	w9, [x8]
  442398:	cmp	w9, #0x53
  44239c:	b.ne	442688 <feof@plt+0x3fcb8>  // b.any
  4423a0:	add	x9, x8, #0x1
  4423a4:	str	x9, [x0, #24]
  4423a8:	ldrb	w10, [x8, #1]
  4423ac:	mov	x19, x0
  4423b0:	cbz	w10, 442400 <feof@plt+0x3fa30>
  4423b4:	add	x9, x8, #0x2
  4423b8:	str	x9, [x19, #24]
  4423bc:	ldrb	w10, [x8, #1]
  4423c0:	cmp	w10, #0x5f
  4423c4:	b.ne	4423e4 <feof@plt+0x3fa14>  // b.any
  4423c8:	mov	w8, wzr
  4423cc:	ldr	w9, [x19, #56]
  4423d0:	cmp	w8, w9
  4423d4:	b.cs	442688 <feof@plt+0x3fcb8>  // b.hs, b.nlast
  4423d8:	ldr	x9, [x19, #48]
  4423dc:	ldr	x0, [x9, w8, uxtw #3]
  4423e0:	b	44268c <feof@plt+0x3fcbc>
  4423e4:	sub	w8, w10, #0x30
  4423e8:	cmp	w8, #0xa
  4423ec:	b.cc	44245c <feof@plt+0x3fa8c>  // b.lo, b.ul, b.last
  4423f0:	sub	w8, w10, #0x41
  4423f4:	and	w8, w8, #0xff
  4423f8:	cmp	w8, #0x19
  4423fc:	b.ls	44245c <feof@plt+0x3fa8c>  // b.plast
  442400:	ldr	w8, [x19, #16]
  442404:	ubfx	w8, w8, #3, #1
  442408:	cbz	w1, 442420 <feof@plt+0x3fa50>
  44240c:	cbnz	w8, 442420 <feof@plt+0x3fa50>
  442410:	ldrb	w8, [x9]
  442414:	sub	w8, w8, #0x43
  442418:	cmp	w8, #0x2
  44241c:	cset	w8, cc  // cc = lo, ul, last
  442420:	sub	w9, w10, #0x61
  442424:	cmp	w9, #0x13
  442428:	mov	x0, xzr
  44242c:	b.hi	44268c <feof@plt+0x3fcbc>  // b.pmore
  442430:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xfa68>
  442434:	add	x10, x10, #0x18c
  442438:	adr	x11, 442450 <feof@plt+0x3fa80>
  44243c:	ldrb	w12, [x10, x9]
  442440:	add	x11, x11, x12, lsl #2
  442444:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  442448:	add	x9, x9, #0xf90
  44244c:	br	x11
  442450:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  442454:	add	x9, x9, #0xfc8
  442458:	b	442504 <feof@plt+0x3fb34>
  44245c:	mov	w11, wzr
  442460:	mov	w8, #0x24                  	// #36
  442464:	b	442474 <feof@plt+0x3faa4>
  442468:	cmp	w10, #0x5f
  44246c:	mov	w11, w12
  442470:	b.eq	4426a0 <feof@plt+0x3fcd0>  // b.none
  442474:	sub	w12, w10, #0x30
  442478:	and	w12, w12, #0xff
  44247c:	cmp	w12, #0xa
  442480:	and	w10, w10, #0xff
  442484:	b.cs	442490 <feof@plt+0x3fac0>  // b.hs, b.nlast
  442488:	mov	w12, #0xffffffd0            	// #-48
  44248c:	b	4424a0 <feof@plt+0x3fad0>
  442490:	sub	w12, w10, #0x41
  442494:	cmp	w12, #0x19
  442498:	b.hi	442688 <feof@plt+0x3fcb8>  // b.pmore
  44249c:	mov	w12, #0xffffffc9            	// #-55
  4424a0:	madd	w12, w11, w8, w12
  4424a4:	add	w12, w12, w10
  4424a8:	cmp	w12, w11
  4424ac:	b.cc	442688 <feof@plt+0x3fcb8>  // b.lo, b.ul, b.last
  4424b0:	ldrb	w10, [x9]
  4424b4:	cbz	w10, 442468 <feof@plt+0x3fa98>
  4424b8:	add	x11, x9, #0x1
  4424bc:	str	x11, [x19, #24]
  4424c0:	ldrb	w10, [x9]
  4424c4:	mov	x9, x11
  4424c8:	b	442468 <feof@plt+0x3fa98>
  4424cc:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  4424d0:	add	x9, x9, #0x0
  4424d4:	b	442504 <feof@plt+0x3fb34>
  4424d8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  4424dc:	add	x9, x9, #0xe0
  4424e0:	b	442504 <feof@plt+0x3fb34>
  4424e4:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  4424e8:	add	x9, x9, #0x70
  4424ec:	b	442504 <feof@plt+0x3fb34>
  4424f0:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  4424f4:	add	x9, x9, #0xa8
  4424f8:	b	442504 <feof@plt+0x3fb34>
  4424fc:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  442500:	add	x9, x9, #0x38
  442504:	ldr	x10, [x9, #40]
  442508:	cbz	x10, 442558 <feof@plt+0x3fb88>
  44250c:	ldp	w11, w12, [x19, #40]
  442510:	sxtw	x11, w11
  442514:	cmp	w11, w12
  442518:	b.ge	442550 <feof@plt+0x3fb80>  // b.tcont
  44251c:	ldr	x14, [x19, #32]
  442520:	ldr	w13, [x9, #48]
  442524:	mov	w15, #0x18                  	// #24
  442528:	add	w16, w11, #0x1
  44252c:	madd	x12, x11, x15, x14
  442530:	str	wzr, [x12, #4]
  442534:	str	w16, [x19, #40]
  442538:	cbz	x14, 442550 <feof@plt+0x3fb80>
  44253c:	madd	x11, x11, x15, x14
  442540:	str	w15, [x12]
  442544:	str	x10, [x11, #8]
  442548:	str	w13, [x11, #16]
  44254c:	b	442554 <feof@plt+0x3fb84>
  442550:	mov	x12, xzr
  442554:	str	x12, [x19, #64]
  442558:	cmp	w8, #0x0
  44255c:	mov	w8, #0x20                  	// #32
  442560:	mov	w12, #0x10                  	// #16
  442564:	add	x10, x9, #0x18
  442568:	add	x11, x9, #0x8
  44256c:	csel	x8, x12, x8, eq  // eq = none
  442570:	ldr	w13, [x19, #72]
  442574:	ldr	w8, [x9, x8]
  442578:	ldp	w9, w12, [x19, #40]
  44257c:	csel	x10, x11, x10, eq  // eq = none
  442580:	ldr	x10, [x10]
  442584:	add	w11, w13, w8
  442588:	sxtw	x9, w9
  44258c:	cmp	w9, w12
  442590:	str	w11, [x19, #72]
  442594:	b.ge	4425c8 <feof@plt+0x3fbf8>  // b.tcont
  442598:	ldr	x11, [x19, #32]
  44259c:	mov	w12, #0x18                  	// #24
  4425a0:	add	w13, w9, #0x1
  4425a4:	madd	x0, x9, x12, x11
  4425a8:	str	wzr, [x0, #4]
  4425ac:	str	w13, [x19, #40]
  4425b0:	cbz	x11, 4425c8 <feof@plt+0x3fbf8>
  4425b4:	madd	x9, x9, x12, x11
  4425b8:	str	w12, [x0]
  4425bc:	str	x10, [x9, #8]
  4425c0:	str	w8, [x9, #16]
  4425c4:	b	4425cc <feof@plt+0x3fbfc>
  4425c8:	mov	x0, xzr
  4425cc:	ldr	x8, [x19, #24]
  4425d0:	ldrb	w9, [x8]
  4425d4:	cmp	w9, #0x42
  4425d8:	b.ne	44268c <feof@plt+0x3fcbc>  // b.any
  4425dc:	ldr	x20, [x19, #64]
  4425e0:	mov	w21, #0x18                  	// #24
  4425e4:	mov	w22, #0x4c                  	// #76
  4425e8:	b	442600 <feof@plt+0x3fc30>
  4425ec:	mov	x0, xzr
  4425f0:	ldr	x8, [x19, #24]
  4425f4:	ldrb	w9, [x8]
  4425f8:	cmp	w9, #0x42
  4425fc:	b.ne	44265c <feof@plt+0x3fc8c>  // b.any
  442600:	mov	x23, x0
  442604:	add	x8, x8, #0x1
  442608:	mov	x0, x19
  44260c:	str	x8, [x19, #24]
  442610:	bl	442184 <feof@plt+0x3f7b4>
  442614:	mov	x8, x0
  442618:	mov	x0, xzr
  44261c:	cbz	x23, 4425f0 <feof@plt+0x3fc20>
  442620:	cbz	x8, 4425f0 <feof@plt+0x3fc20>
  442624:	ldp	w9, w10, [x19, #40]
  442628:	sxtw	x9, w9
  44262c:	cmp	w9, w10
  442630:	b.ge	4425ec <feof@plt+0x3fc1c>  // b.tcont
  442634:	ldr	x10, [x19, #32]
  442638:	add	w11, w9, #0x1
  44263c:	madd	x0, x9, x21, x10
  442640:	str	wzr, [x0, #4]
  442644:	str	w11, [x19, #40]
  442648:	cbz	x10, 4425ec <feof@plt+0x3fc1c>
  44264c:	madd	x9, x9, x21, x10
  442650:	str	w22, [x0]
  442654:	stp	x23, x8, [x9, #8]
  442658:	b	4425f0 <feof@plt+0x3fc20>
  44265c:	str	x20, [x19, #64]
  442660:	cbz	x0, 44268c <feof@plt+0x3fcbc>
  442664:	ldp	w8, w9, [x19, #56]
  442668:	sxtw	x8, w8
  44266c:	cmp	w8, w9
  442670:	b.ge	442688 <feof@plt+0x3fcb8>  // b.tcont
  442674:	ldr	x9, [x19, #48]
  442678:	add	w10, w8, #0x1
  44267c:	str	x0, [x9, x8, lsl #3]
  442680:	str	w10, [x19, #56]
  442684:	b	44268c <feof@plt+0x3fcbc>
  442688:	mov	x0, xzr
  44268c:	ldp	x20, x19, [sp, #48]
  442690:	ldp	x22, x21, [sp, #32]
  442694:	ldr	x23, [sp, #16]
  442698:	ldp	x29, x30, [sp], #64
  44269c:	ret
  4426a0:	add	w8, w12, #0x1
  4426a4:	b	4423cc <feof@plt+0x3f9fc>
  4426a8:	stp	x29, x30, [sp, #-64]!
  4426ac:	str	x28, [sp, #16]
  4426b0:	stp	x22, x21, [sp, #32]
  4426b4:	stp	x20, x19, [sp, #48]
  4426b8:	mov	x29, sp
  4426bc:	sub	sp, sp, #0x190
  4426c0:	mov	x19, sp
  4426c4:	add	x8, x19, #0x8
  4426c8:	mov	w21, w0
  4426cc:	movi	v0.2d, #0x0
  4426d0:	add	x8, x8, #0x148
  4426d4:	add	x0, x19, #0x8
  4426d8:	mov	x20, x1
  4426dc:	str	xzr, [x19, #264]
  4426e0:	strb	wzr, [x19, #272]
  4426e4:	stp	xzr, xzr, [x19, #296]
  4426e8:	stp	x2, x3, [x19, #280]
  4426ec:	stp	xzr, xzr, [x19, #312]
  4426f0:	str	xzr, [x19, #328]
  4426f4:	stp	q0, q0, [x8]
  4426f8:	str	xzr, [x8, #32]
  4426fc:	bl	445680 <feof@plt+0x42cb0>
  442700:	ldr	w8, [x19, #316]
  442704:	cmp	w8, #0x7ff
  442708:	b.gt	442710 <feof@plt+0x3fd40>
  44270c:	str	wzr, [x19, #316]
  442710:	ldr	w8, [x19, #356]
  442714:	ldr	w9, [x19, #372]
  442718:	mov	x22, sp
  44271c:	str	xzr, [x19, #376]
  442720:	cmp	w8, #0x1
  442724:	mul	w9, w9, w8
  442728:	csinc	w8, w8, wzr, gt
  44272c:	sub	x8, sp, w8, uxtw #4
  442730:	str	w9, [x19, #372]
  442734:	mov	sp, x8
  442738:	mov	w9, w9
  44273c:	cmp	w9, #0x1
  442740:	csinc	w9, w9, wzr, gt
  442744:	sub	x9, sp, w9, uxtw #4
  442748:	mov	sp, x9
  44274c:	str	x8, [x19, #344]
  442750:	str	x9, [x19, #360]
  442754:	cbz	x20, 442770 <feof@plt+0x3fda0>
  442758:	ldr	w8, [x20, #4]
  44275c:	cmp	w8, #0x1
  442760:	b.gt	442770 <feof@plt+0x3fda0>
  442764:	ldr	w9, [x19, #316]
  442768:	cmp	w9, #0x401
  44276c:	b.lt	4427bc <feof@plt+0x3fdec>  // b.tstop
  442770:	mov	w8, #0x1                   	// #1
  442774:	str	w8, [x19, #312]
  442778:	mov	sp, x22
  44277c:	ldr	x8, [x19, #264]
  442780:	add	x9, x19, #0x8
  442784:	add	x0, x19, #0x8
  442788:	strb	wzr, [x9, x8]
  44278c:	ldp	x8, x2, [x19, #280]
  442790:	ldr	x1, [x19, #264]
  442794:	blr	x8
  442798:	ldr	w8, [x19, #312]
  44279c:	cmp	w8, #0x0
  4427a0:	cset	w0, eq  // eq = none
  4427a4:	mov	sp, x29
  4427a8:	ldp	x20, x19, [sp, #48]
  4427ac:	ldp	x22, x21, [sp, #32]
  4427b0:	ldr	x28, [sp, #16]
  4427b4:	ldp	x29, x30, [sp], #64
  4427b8:	ret
  4427bc:	add	w8, w8, #0x1
  4427c0:	str	w8, [x20, #4]
  4427c4:	ldr	x8, [x19, #336]
  4427c8:	add	w9, w9, #0x1
  4427cc:	sub	x10, x29, #0x10
  4427d0:	add	x0, x19, #0x8
  4427d4:	mov	w1, w21
  4427d8:	mov	x2, x20
  4427dc:	str	w9, [x19, #316]
  4427e0:	stp	x20, x8, [x29, #-16]
  4427e4:	str	x10, [x19, #336]
  4427e8:	bl	445750 <feof@plt+0x42d80>
  4427ec:	ldur	x8, [x29, #-8]
  4427f0:	str	x8, [x19, #336]
  4427f4:	ldr	w8, [x20, #4]
  4427f8:	sub	w8, w8, #0x1
  4427fc:	str	w8, [x20, #4]
  442800:	ldr	w8, [x19, #316]
  442804:	sub	w8, w8, #0x1
  442808:	str	w8, [x19, #316]
  44280c:	b	442778 <feof@plt+0x3fda8>
  442810:	sub	sp, sp, #0x50
  442814:	stp	x22, x21, [sp, #48]
  442818:	stp	x20, x19, [sp, #64]
  44281c:	mov	x19, x3
  442820:	mov	x20, x1
  442824:	mov	w21, w0
  442828:	stp	x29, x30, [sp, #32]
  44282c:	add	x29, sp, #0x20
  442830:	stp	xzr, xzr, [sp]
  442834:	str	wzr, [sp, #24]
  442838:	str	xzr, [sp, #16]
  44283c:	cbz	w2, 442880 <feof@plt+0x3feb0>
  442840:	sxtw	x8, w2
  442844:	mov	w9, #0x2                   	// #2
  442848:	mov	x22, x9
  44284c:	cmp	x9, x8
  442850:	lsl	x9, x9, #1
  442854:	b.cc	442848 <feof@plt+0x3fe78>  // b.lo, b.ul, b.last
  442858:	mov	x0, x22
  44285c:	bl	402840 <malloc@plt>
  442860:	cbz	x0, 442870 <feof@plt+0x3fea0>
  442864:	str	x0, [sp]
  442868:	str	x22, [sp, #16]
  44286c:	b	442880 <feof@plt+0x3feb0>
  442870:	mov	w8, #0x1                   	// #1
  442874:	stp	xzr, xzr, [sp]
  442878:	str	xzr, [sp, #16]
  44287c:	str	w8, [sp, #24]
  442880:	adrp	x2, 442000 <feof@plt+0x3f630>
  442884:	add	x2, x2, #0x8dc
  442888:	mov	x3, sp
  44288c:	mov	w0, w21
  442890:	mov	x1, x20
  442894:	bl	4426a8 <feof@plt+0x3fcd8>
  442898:	cbz	w0, 4428b8 <feof@plt+0x3fee8>
  44289c:	ldr	w8, [sp, #24]
  4428a0:	ldr	x9, [sp, #16]
  4428a4:	cmp	w8, #0x0
  4428a8:	csinc	x8, x9, xzr, eq  // eq = none
  4428ac:	str	x8, [x19]
  4428b0:	ldr	x0, [sp]
  4428b4:	b	4428c8 <feof@plt+0x3fef8>
  4428b8:	ldr	x0, [sp]
  4428bc:	bl	4024c0 <free@plt>
  4428c0:	mov	x0, xzr
  4428c4:	str	xzr, [x19]
  4428c8:	ldp	x20, x19, [sp, #64]
  4428cc:	ldp	x22, x21, [sp, #48]
  4428d0:	ldp	x29, x30, [sp, #32]
  4428d4:	add	sp, sp, #0x50
  4428d8:	ret
  4428dc:	stp	x29, x30, [sp, #-48]!
  4428e0:	stp	x22, x21, [sp, #16]
  4428e4:	stp	x20, x19, [sp, #32]
  4428e8:	ldp	x8, x9, [x2, #8]
  4428ec:	mov	x19, x2
  4428f0:	mov	x20, x1
  4428f4:	mov	x21, x0
  4428f8:	add	x8, x1, x8
  4428fc:	add	x8, x8, #0x1
  442900:	cmp	x8, x9
  442904:	mov	x29, sp
  442908:	b.ls	442948 <feof@plt+0x3ff78>  // b.plast
  44290c:	ldr	w10, [x19, #24]
  442910:	cbnz	w10, 442948 <feof@plt+0x3ff78>
  442914:	cmp	x9, #0x0
  442918:	mov	w10, #0x2                   	// #2
  44291c:	csel	x9, x10, x9, eq  // eq = none
  442920:	mov	x22, x9
  442924:	cmp	x9, x8
  442928:	lsl	x9, x9, #1
  44292c:	b.cc	442920 <feof@plt+0x3ff50>  // b.lo, b.ul, b.last
  442930:	ldr	x0, [x19]
  442934:	mov	x1, x22
  442938:	bl	402540 <realloc@plt>
  44293c:	cbz	x0, 44298c <feof@plt+0x3ffbc>
  442940:	str	x0, [x19]
  442944:	str	x22, [x19, #16]
  442948:	ldr	w8, [x19, #24]
  44294c:	cbnz	w8, 44297c <feof@plt+0x3ffac>
  442950:	ldp	x8, x9, [x19]
  442954:	mov	x1, x21
  442958:	mov	x2, x20
  44295c:	add	x0, x8, x9
  442960:	bl	402390 <memcpy@plt>
  442964:	ldp	x9, x8, [x19]
  442968:	add	x8, x8, x20
  44296c:	strb	wzr, [x9, x8]
  442970:	ldr	x8, [x19, #8]
  442974:	add	x8, x8, x20
  442978:	str	x8, [x19, #8]
  44297c:	ldp	x20, x19, [sp, #32]
  442980:	ldp	x22, x21, [sp, #16]
  442984:	ldp	x29, x30, [sp], #48
  442988:	ret
  44298c:	ldr	x0, [x19]
  442990:	bl	4024c0 <free@plt>
  442994:	mov	w8, #0x1                   	// #1
  442998:	stp	xzr, xzr, [x19]
  44299c:	str	xzr, [x19, #16]
  4429a0:	str	w8, [x19, #24]
  4429a4:	ldr	w8, [x19, #24]
  4429a8:	cbnz	w8, 44297c <feof@plt+0x3ffac>
  4429ac:	b	442950 <feof@plt+0x3ff80>
  4429b0:	add	x8, x0, x2
  4429b4:	lsl	w9, w2, #1
  4429b8:	str	w1, [x3, #16]
  4429bc:	str	x0, [x3, #24]
  4429c0:	stp	wzr, w2, [x3, #56]
  4429c4:	stp	xzr, xzr, [x3, #72]
  4429c8:	stp	x0, x8, [x3]
  4429cc:	stp	wzr, w9, [x3, #40]
  4429d0:	str	xzr, [x3, #64]
  4429d4:	ret
  4429d8:	sub	sp, sp, #0x30
  4429dc:	adrp	x2, 442000 <feof@plt+0x3f630>
  4429e0:	add	x2, x2, #0x8dc
  4429e4:	mov	x3, sp
  4429e8:	stp	x29, x30, [sp, #32]
  4429ec:	add	x29, sp, #0x20
  4429f0:	stp	xzr, xzr, [sp]
  4429f4:	str	wzr, [sp, #24]
  4429f8:	str	xzr, [sp, #16]
  4429fc:	bl	442a28 <feof@plt+0x40058>
  442a00:	ldr	x8, [sp]
  442a04:	cbnz	w0, 442a14 <feof@plt+0x40044>
  442a08:	mov	x0, x8
  442a0c:	bl	4024c0 <free@plt>
  442a10:	mov	x8, xzr
  442a14:	ldp	x29, x30, [sp, #32]
  442a18:	mov	x0, x8
  442a1c:	add	sp, sp, #0x30
  442a20:	ret
  442a24:	b	442a28 <feof@plt+0x40058>
  442a28:	stp	x29, x30, [sp, #-96]!
  442a2c:	str	x27, [sp, #16]
  442a30:	stp	x26, x25, [sp, #32]
  442a34:	stp	x24, x23, [sp, #48]
  442a38:	stp	x22, x21, [sp, #64]
  442a3c:	stp	x20, x19, [sp, #80]
  442a40:	mov	x29, sp
  442a44:	sub	sp, sp, #0x60
  442a48:	ldrb	w8, [x0]
  442a4c:	mov	x19, x3
  442a50:	mov	x20, x2
  442a54:	mov	x22, x0
  442a58:	cmp	w8, #0x5f
  442a5c:	mov	w21, w1
  442a60:	b.ne	442a78 <feof@plt+0x400a8>  // b.any
  442a64:	ldrb	w8, [x22, #1]
  442a68:	cmp	w8, #0x5a
  442a6c:	b.ne	442a78 <feof@plt+0x400a8>  // b.any
  442a70:	mov	w24, #0x1                   	// #1
  442a74:	b	442a9c <feof@plt+0x400cc>
  442a78:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  442a7c:	add	x1, x1, #0x33d
  442a80:	mov	w2, #0x8                   	// #8
  442a84:	mov	x0, x22
  442a88:	bl	4026b0 <strncmp@plt>
  442a8c:	cbz	w0, 442b58 <feof@plt+0x40188>
  442a90:	mov	w24, wzr
  442a94:	mov	w1, wzr
  442a98:	tbz	w21, #4, 442c98 <feof@plt+0x402c8>
  442a9c:	mov	x0, x22
  442aa0:	bl	402420 <strlen@plt>
  442aa4:	add	x8, x22, x0
  442aa8:	lsl	w27, w0, #1
  442aac:	stur	w21, [x29, #-72]
  442ab0:	stur	x22, [x29, #-64]
  442ab4:	stp	wzr, w0, [x29, #-32]
  442ab8:	stp	xzr, xzr, [x29, #-16]
  442abc:	stp	x22, x8, [x29, #-88]
  442ac0:	stp	wzr, w27, [x29, #-48]
  442ac4:	stur	xzr, [x29, #-24]
  442ac8:	tbnz	w21, #18, 442ad8 <feof@plt+0x40108>
  442acc:	cmp	w27, #0x800
  442ad0:	mov	w1, wzr
  442ad4:	b.hi	442c98 <feof@plt+0x402c8>  // b.pmore
  442ad8:	mov	w8, #0x18                  	// #24
  442adc:	umull	x8, w27, w8
  442ae0:	add	x8, x8, #0xf
  442ae4:	and	x8, x8, #0x3ffffffff0
  442ae8:	mov	x9, sp
  442aec:	mov	x26, sp
  442af0:	sub	x23, x9, x8
  442af4:	mov	sp, x23
  442af8:	and	x8, x0, #0xffffffff
  442afc:	lsl	x8, x8, #3
  442b00:	add	x8, x8, #0xf
  442b04:	mov	x9, sp
  442b08:	and	x8, x8, #0xffffffff0
  442b0c:	sub	x8, x9, x8
  442b10:	mov	sp, x8
  442b14:	sub	w9, w24, #0x2
  442b18:	cmp	w9, #0x2
  442b1c:	stur	x23, [x29, #-56]
  442b20:	stur	x8, [x29, #-40]
  442b24:	b.cc	442bb0 <feof@plt+0x401e0>  // b.lo, b.ul, b.last
  442b28:	sub	x0, x29, #0x58
  442b2c:	cmp	w24, #0x1
  442b30:	b.eq	442c28 <feof@plt+0x40258>  // b.none
  442b34:	bl	440c5c <feof@plt+0x3e28c>
  442b38:	mov	x22, x0
  442b3c:	tbz	w21, #0, 442c70 <feof@plt+0x402a0>
  442b40:	mov	w1, wzr
  442b44:	cbz	x22, 442c94 <feof@plt+0x402c4>
  442b48:	ldur	x8, [x29, #-64]
  442b4c:	ldrb	w8, [x8]
  442b50:	cbz	w8, 442c74 <feof@plt+0x402a4>
  442b54:	b	442c94 <feof@plt+0x402c4>
  442b58:	ldrb	w8, [x22, #8]
  442b5c:	sub	w8, w8, #0x24
  442b60:	cmp	w8, #0x3b
  442b64:	b.hi	442a90 <feof@plt+0x400c0>  // b.pmore
  442b68:	mov	w9, #0x1                   	// #1
  442b6c:	lsl	x8, x9, x8
  442b70:	mov	x9, #0x401                 	// #1025
  442b74:	movk	x9, #0x800, lsl #48
  442b78:	tst	x8, x9
  442b7c:	b.eq	442a90 <feof@plt+0x400c0>  // b.none
  442b80:	ldrb	w8, [x22, #9]
  442b84:	cmp	w8, #0x49
  442b88:	b.eq	442b94 <feof@plt+0x401c4>  // b.none
  442b8c:	cmp	w8, #0x44
  442b90:	b.ne	442a90 <feof@plt+0x400c0>  // b.any
  442b94:	ldrb	w9, [x22, #10]
  442b98:	cmp	w9, #0x5f
  442b9c:	b.ne	442a90 <feof@plt+0x400c0>  // b.any
  442ba0:	cmp	w8, #0x49
  442ba4:	mov	w8, #0x2                   	// #2
  442ba8:	cinc	w24, w8, ne  // ne = any
  442bac:	b	442a9c <feof@plt+0x400cc>
  442bb0:	add	x25, x22, #0xb
  442bb4:	stur	x25, [x29, #-64]
  442bb8:	ldrb	w8, [x22, #11]
  442bbc:	cmp	w24, #0x2
  442bc0:	mov	w9, #0x44                  	// #68
  442bc4:	cinc	w24, w9, ne  // ne = any
  442bc8:	cmp	w8, #0x5f
  442bcc:	b.ne	442bf8 <feof@plt+0x40228>  // b.any
  442bd0:	ldrb	w8, [x22, #12]
  442bd4:	cmp	w8, #0x5a
  442bd8:	b.ne	442bf8 <feof@plt+0x40228>  // b.any
  442bdc:	add	x8, x22, #0xd
  442be0:	sub	x0, x29, #0x58
  442be4:	mov	w1, wzr
  442be8:	stur	x8, [x29, #-64]
  442bec:	bl	43fac0 <feof@plt+0x3d0f0>
  442bf0:	mov	x23, x0
  442bf4:	b	442c40 <feof@plt+0x40270>
  442bf8:	mov	x0, x25
  442bfc:	bl	402420 <strlen@plt>
  442c00:	cmp	w27, #0x1
  442c04:	b.lt	442c3c <feof@plt+0x4026c>  // b.tstop
  442c08:	mov	w8, #0x1                   	// #1
  442c0c:	cmp	w0, #0x1
  442c10:	str	wzr, [x23, #4]
  442c14:	stur	w8, [x29, #-48]
  442c18:	b.lt	442c3c <feof@plt+0x4026c>  // b.tstop
  442c1c:	stp	xzr, x25, [x23]
  442c20:	str	w0, [x23, #16]
  442c24:	b	442c40 <feof@plt+0x40270>
  442c28:	mov	w1, #0x1                   	// #1
  442c2c:	bl	43f904 <feof@plt+0x3cf34>
  442c30:	mov	x22, x0
  442c34:	tbz	w21, #0, 442c70 <feof@plt+0x402a0>
  442c38:	b	442b40 <feof@plt+0x40170>
  442c3c:	mov	x23, xzr
  442c40:	sub	x0, x29, #0x58
  442c44:	mov	w1, w24
  442c48:	mov	x2, x23
  442c4c:	mov	x3, xzr
  442c50:	bl	4420f8 <feof@plt+0x3f728>
  442c54:	ldur	x23, [x29, #-64]
  442c58:	mov	x22, x0
  442c5c:	mov	x0, x23
  442c60:	bl	402420 <strlen@plt>
  442c64:	add	x8, x23, x0
  442c68:	stur	x8, [x29, #-64]
  442c6c:	tbnz	w21, #0, 442b40 <feof@plt+0x40170>
  442c70:	cbz	x22, 442c90 <feof@plt+0x402c0>
  442c74:	mov	w0, w21
  442c78:	mov	x1, x22
  442c7c:	mov	x2, x20
  442c80:	mov	x3, x19
  442c84:	bl	4426a8 <feof@plt+0x3fcd8>
  442c88:	mov	w1, w0
  442c8c:	b	442c94 <feof@plt+0x402c4>
  442c90:	mov	w1, wzr
  442c94:	mov	sp, x26
  442c98:	mov	w0, w1
  442c9c:	mov	sp, x29
  442ca0:	ldp	x20, x19, [sp, #80]
  442ca4:	ldp	x22, x21, [sp, #64]
  442ca8:	ldp	x24, x23, [sp, #48]
  442cac:	ldp	x26, x25, [sp, #32]
  442cb0:	ldr	x27, [sp, #16]
  442cb4:	ldp	x29, x30, [sp], #96
  442cb8:	ret
  442cbc:	sub	sp, sp, #0x30
  442cc0:	adrp	x2, 442000 <feof@plt+0x3f630>
  442cc4:	add	x2, x2, #0x8dc
  442cc8:	mov	x3, sp
  442ccc:	mov	w1, #0x25                  	// #37
  442cd0:	stp	x29, x30, [sp, #32]
  442cd4:	add	x29, sp, #0x20
  442cd8:	stp	xzr, xzr, [sp]
  442cdc:	str	wzr, [sp, #24]
  442ce0:	str	xzr, [sp, #16]
  442ce4:	bl	442a28 <feof@plt+0x40058>
  442ce8:	ldr	x8, [sp]
  442cec:	cbnz	w0, 442cfc <feof@plt+0x4032c>
  442cf0:	mov	x0, x8
  442cf4:	bl	4024c0 <free@plt>
  442cf8:	mov	x8, xzr
  442cfc:	ldp	x29, x30, [sp, #32]
  442d00:	mov	x0, x8
  442d04:	add	sp, sp, #0x30
  442d08:	ret
  442d0c:	mov	x3, x2
  442d10:	mov	x2, x1
  442d14:	mov	w1, #0x25                  	// #37
  442d18:	b	442a28 <feof@plt+0x40058>
  442d1c:	sub	sp, sp, #0x20
  442d20:	stp	x29, x30, [sp, #16]
  442d24:	add	x29, sp, #0x10
  442d28:	sub	x1, x29, #0x4
  442d2c:	add	x2, sp, #0x8
  442d30:	bl	442d4c <feof@plt+0x4037c>
  442d34:	ldur	w8, [x29, #-4]
  442d38:	ldp	x29, x30, [sp, #16]
  442d3c:	cmp	w0, #0x0
  442d40:	csel	w0, wzr, w8, eq  // eq = none
  442d44:	add	sp, sp, #0x20
  442d48:	ret
  442d4c:	stp	x29, x30, [sp, #-48]!
  442d50:	stp	x22, x21, [sp, #16]
  442d54:	stp	x20, x19, [sp, #32]
  442d58:	mov	x29, sp
  442d5c:	sub	sp, sp, #0x60
  442d60:	mov	x19, x2
  442d64:	mov	x20, x1
  442d68:	mov	x21, x0
  442d6c:	str	wzr, [x1]
  442d70:	str	wzr, [x2]
  442d74:	bl	402420 <strlen@plt>
  442d78:	add	x8, x21, x0
  442d7c:	stp	x21, x8, [x29, #-88]
  442d80:	mov	w8, #0x4000                	// #16384
  442d84:	stur	w8, [x29, #-72]
  442d88:	lsl	w8, w0, #1
  442d8c:	mov	x9, sp
  442d90:	mov	w10, #0x18                  	// #24
  442d94:	mov	x22, sp
  442d98:	stp	wzr, w8, [x29, #-48]
  442d9c:	umsubl	x8, w8, w10, x9
  442da0:	stur	x21, [x29, #-64]
  442da4:	stp	wzr, w0, [x29, #-32]
  442da8:	stp	xzr, xzr, [x29, #-16]
  442dac:	stur	xzr, [x29, #-24]
  442db0:	mov	sp, x8
  442db4:	and	x9, x0, #0xffffffff
  442db8:	lsl	x9, x9, #3
  442dbc:	add	x9, x9, #0xf
  442dc0:	mov	x10, sp
  442dc4:	and	x9, x9, #0xffffffff0
  442dc8:	sub	x9, x10, x9
  442dcc:	mov	sp, x9
  442dd0:	sub	x0, x29, #0x58
  442dd4:	mov	w1, #0x1                   	// #1
  442dd8:	stur	x8, [x29, #-56]
  442ddc:	stur	x9, [x29, #-40]
  442de0:	bl	43f904 <feof@plt+0x3cf34>
  442de4:	cbz	x0, 442e30 <feof@plt+0x40460>
  442de8:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  442dec:	add	x9, x9, #0x1a0
  442df0:	b	442e00 <feof@plt+0x40430>
  442df4:	add	x8, x0, #0x8
  442df8:	ldr	x0, [x8]
  442dfc:	cbz	x0, 442e30 <feof@plt+0x40460>
  442e00:	ldr	w8, [x0]
  442e04:	sub	w10, w8, #0x1
  442e08:	cmp	w10, #0x7
  442e0c:	mov	w8, wzr
  442e10:	b.hi	442e34 <feof@plt+0x40464>  // b.pmore
  442e14:	adr	x11, 442df4 <feof@plt+0x40424>
  442e18:	ldrb	w12, [x9, x10]
  442e1c:	add	x11, x11, x12, lsl #2
  442e20:	br	x11
  442e24:	add	x8, x0, #0x10
  442e28:	ldr	x0, [x8]
  442e2c:	cbnz	x0, 442e00 <feof@plt+0x40430>
  442e30:	mov	w8, wzr
  442e34:	mov	sp, x22
  442e38:	mov	w0, w8
  442e3c:	mov	sp, x29
  442e40:	ldp	x20, x19, [sp, #32]
  442e44:	ldp	x22, x21, [sp, #16]
  442e48:	ldp	x29, x30, [sp], #48
  442e4c:	ret
  442e50:	ldr	w8, [x0, #8]
  442e54:	str	w8, [x20]
  442e58:	mov	w8, #0x1                   	// #1
  442e5c:	b	442e34 <feof@plt+0x40464>
  442e60:	ldr	w8, [x0, #8]
  442e64:	str	w8, [x19]
  442e68:	mov	w8, #0x1                   	// #1
  442e6c:	b	442e34 <feof@plt+0x40464>
  442e70:	sub	sp, sp, #0x20
  442e74:	stp	x29, x30, [sp, #16]
  442e78:	add	x29, sp, #0x10
  442e7c:	sub	x1, x29, #0x4
  442e80:	add	x2, sp, #0x8
  442e84:	bl	442d4c <feof@plt+0x4037c>
  442e88:	ldr	w8, [sp, #8]
  442e8c:	ldp	x29, x30, [sp, #16]
  442e90:	cmp	w0, #0x0
  442e94:	csel	w0, wzr, w8, eq  // eq = none
  442e98:	add	sp, sp, #0x20
  442e9c:	ret
  442ea0:	sub	sp, sp, #0x40
  442ea4:	stp	x29, x30, [sp, #16]
  442ea8:	stp	x22, x21, [sp, #32]
  442eac:	stp	x20, x19, [sp, #48]
  442eb0:	mov	x22, x0
  442eb4:	ldr	x9, [x22, #24]!
  442eb8:	mov	x19, x0
  442ebc:	add	x29, sp, #0x10
  442ec0:	ldrb	w8, [x9]
  442ec4:	sub	w8, w8, #0x4e
  442ec8:	cmp	w8, #0xc
  442ecc:	b.hi	442f60 <feof@plt+0x40590>  // b.pmore
  442ed0:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xfa68>
  442ed4:	add	x10, x10, #0x1a8
  442ed8:	adr	x11, 442ee8 <feof@plt+0x40518>
  442edc:	ldrb	w12, [x10, x8]
  442ee0:	add	x11, x11, x12, lsl #2
  442ee4:	br	x11
  442ee8:	add	x8, x9, #0x1
  442eec:	add	x1, sp, #0x8
  442ef0:	mov	w2, #0x1                   	// #1
  442ef4:	mov	x0, x19
  442ef8:	str	x8, [x19, #24]
  442efc:	bl	441cec <feof@plt+0x3f31c>
  442f00:	cbz	x0, 443634 <feof@plt+0x40c64>
  442f04:	ldr	x8, [x22]
  442f08:	mov	x20, x0
  442f0c:	ldrb	w9, [x8]
  442f10:	cmp	w9, #0x52
  442f14:	b.eq	442f20 <feof@plt+0x40550>  // b.none
  442f18:	cmp	w9, #0x4f
  442f1c:	b.ne	443184 <feof@plt+0x407b4>  // b.any
  442f20:	ldr	w10, [x19, #72]
  442f24:	cmp	w9, #0x52
  442f28:	mov	w9, #0x2                   	// #2
  442f2c:	mov	w11, #0x1f                  	// #31
  442f30:	cinc	w9, w9, ne  // ne = any
  442f34:	add	x8, x8, #0x1
  442f38:	cinc	w1, w11, ne  // ne = any
  442f3c:	add	w9, w10, w9
  442f40:	mov	x0, x19
  442f44:	mov	x2, xzr
  442f48:	mov	x3, xzr
  442f4c:	str	w9, [x19, #72]
  442f50:	str	x8, [x19, #24]
  442f54:	bl	4420f8 <feof@plt+0x3f728>
  442f58:	mov	x21, x0
  442f5c:	b	443188 <feof@plt+0x407b8>
  442f60:	mov	x0, x19
  442f64:	bl	44389c <feof@plt+0x40ecc>
  442f68:	ldr	x8, [x19, #24]
  442f6c:	mov	x21, x0
  442f70:	ldrb	w8, [x8]
  442f74:	cmp	w8, #0x49
  442f78:	b.ne	443638 <feof@plt+0x40c68>  // b.any
  442f7c:	cbz	x21, 443638 <feof@plt+0x40c68>
  442f80:	ldp	w8, w9, [x19, #56]
  442f84:	sxtw	x8, w8
  442f88:	cmp	w8, w9
  442f8c:	b.ge	443634 <feof@plt+0x40c64>  // b.tcont
  442f90:	ldr	x9, [x19, #48]
  442f94:	str	x21, [x9, x8, lsl #3]
  442f98:	ldr	x9, [x19, #24]
  442f9c:	add	w8, w8, #0x1
  442fa0:	str	w8, [x19, #56]
  442fa4:	ldrb	w8, [x9]
  442fa8:	sub	w8, w8, #0x49
  442fac:	cmp	w8, #0x1
  442fb0:	b.hi	443634 <feof@plt+0x40c64>  // b.pmore
  442fb4:	add	x8, x9, #0x1
  442fb8:	mov	x0, x19
  442fbc:	str	x8, [x19, #24]
  442fc0:	bl	444588 <feof@plt+0x41bb8>
  442fc4:	cbz	x0, 443634 <feof@plt+0x40c64>
  442fc8:	ldp	w8, w9, [x19, #40]
  442fcc:	sxtw	x8, w8
  442fd0:	cmp	w8, w9
  442fd4:	b.ge	443634 <feof@plt+0x40c64>  // b.tcont
  442fd8:	ldr	x9, [x19, #32]
  442fdc:	mov	w10, #0x18                  	// #24
  442fe0:	add	w11, w8, #0x1
  442fe4:	madd	x10, x8, x10, x9
  442fe8:	str	wzr, [x10, #4]
  442fec:	str	w11, [x19, #40]
  442ff0:	cbz	x9, 443634 <feof@plt+0x40c64>
  442ff4:	mov	w12, #0x18                  	// #24
  442ff8:	mov	w11, #0x4                   	// #4
  442ffc:	madd	x8, x8, x12, x9
  443000:	str	w11, [x10]
  443004:	stp	x21, x0, [x8, #8]
  443008:	mov	x21, x10
  44300c:	b	443638 <feof@plt+0x40c68>
  443010:	ldrb	w8, [x9, #1]
  443014:	cmp	w8, #0x74
  443018:	b.ne	443110 <feof@plt+0x40740>  // b.any
  44301c:	ldp	w8, w10, [x19, #40]
  443020:	add	x9, x9, #0x2
  443024:	sxtw	x8, w8
  443028:	str	x9, [x19, #24]
  44302c:	cmp	w8, w10
  443030:	b.ge	443128 <feof@plt+0x40758>  // b.tcont
  443034:	ldr	x9, [x19, #32]
  443038:	mov	w10, #0x18                  	// #24
  44303c:	add	w11, w8, #0x1
  443040:	madd	x21, x8, x10, x9
  443044:	str	wzr, [x21, #4]
  443048:	str	w11, [x19, #40]
  44304c:	cbz	x9, 443128 <feof@plt+0x40758>
  443050:	mov	w10, #0x18                  	// #24
  443054:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x10a68>
  443058:	add	x11, x11, #0x339
  44305c:	mov	w12, #0x3                   	// #3
  443060:	madd	x8, x8, x10, x9
  443064:	str	xzr, [x21]
  443068:	str	x11, [x8, #8]
  44306c:	str	w12, [x8, #16]
  443070:	b	44312c <feof@plt+0x4075c>
  443074:	mov	x0, x19
  443078:	ldp	x20, x19, [sp, #48]
  44307c:	ldp	x22, x21, [sp, #32]
  443080:	ldp	x29, x30, [sp, #16]
  443084:	add	sp, sp, #0x40
  443088:	b	44389c <feof@plt+0x40ecc>
  44308c:	add	x8, x9, #0x1
  443090:	mov	x0, x19
  443094:	mov	w1, wzr
  443098:	str	x8, [x19, #24]
  44309c:	bl	43fac0 <feof@plt+0x3d0f0>
  4430a0:	cbz	x0, 443634 <feof@plt+0x40c64>
  4430a4:	ldr	x11, [x22]
  4430a8:	ldrb	w8, [x11]
  4430ac:	cmp	w8, #0x45
  4430b0:	b.ne	443634 <feof@plt+0x40c64>  // b.any
  4430b4:	add	x8, x11, #0x1
  4430b8:	str	x8, [x22]
  4430bc:	ldrb	w8, [x11, #1]
  4430c0:	mov	x20, x0
  4430c4:	cmp	w8, #0x64
  4430c8:	b.eq	443284 <feof@plt+0x408b4>  // b.none
  4430cc:	cmp	w8, #0x73
  4430d0:	b.ne	4432b0 <feof@plt+0x408e0>  // b.any
  4430d4:	add	x8, x11, #0x2
  4430d8:	str	x8, [x22]
  4430dc:	ldrb	w8, [x11, #2]
  4430e0:	cmp	w8, #0x5f
  4430e4:	b.ne	443448 <feof@plt+0x40a78>  // b.any
  4430e8:	add	x10, x11, #0x3
  4430ec:	str	x10, [x22]
  4430f0:	ldrb	w9, [x11, #3]
  4430f4:	cmp	w9, #0x5f
  4430f8:	b.ne	443384 <feof@plt+0x409b4>  // b.any
  4430fc:	add	x10, x11, #0x4
  443100:	str	x10, [x22]
  443104:	ldrb	w9, [x11, #4]
  443108:	mov	w8, #0x2                   	// #2
  44310c:	b	443388 <feof@plt+0x409b8>
  443110:	mov	x0, x19
  443114:	mov	w1, wzr
  443118:	bl	44237c <feof@plt+0x3f9ac>
  44311c:	mov	x20, x0
  443120:	mov	w8, #0x1                   	// #1
  443124:	b	4431dc <feof@plt+0x4080c>
  443128:	mov	x21, xzr
  44312c:	mov	x0, x19
  443130:	bl	44389c <feof@plt+0x40ecc>
  443134:	mov	x20, xzr
  443138:	cbz	x21, 4431cc <feof@plt+0x407fc>
  44313c:	cbz	x0, 4431cc <feof@plt+0x407fc>
  443140:	ldp	w8, w9, [x19, #40]
  443144:	sxtw	x8, w8
  443148:	cmp	w8, w9
  44314c:	b.ge	4431c8 <feof@plt+0x407f8>  // b.tcont
  443150:	ldr	x9, [x19, #32]
  443154:	mov	w10, #0x18                  	// #24
  443158:	add	w11, w8, #0x1
  44315c:	madd	x20, x8, x10, x9
  443160:	str	wzr, [x20, #4]
  443164:	str	w11, [x19, #40]
  443168:	cbz	x9, 4431c8 <feof@plt+0x407f8>
  44316c:	mov	w11, #0x18                  	// #24
  443170:	mov	w10, #0x1                   	// #1
  443174:	madd	x8, x8, x11, x9
  443178:	str	w10, [x20]
  44317c:	stp	x21, x0, [x8, #8]
  443180:	b	4431cc <feof@plt+0x407fc>
  443184:	mov	x21, xzr
  443188:	mov	x0, x19
  44318c:	bl	443fa8 <feof@plt+0x415d8>
  443190:	str	x0, [x20]
  443194:	cbz	x0, 443634 <feof@plt+0x40c64>
  443198:	cbz	x21, 4431a8 <feof@plt+0x407d8>
  44319c:	ldr	x8, [sp, #8]
  4431a0:	str	x8, [x21, #8]
  4431a4:	str	x21, [sp, #8]
  4431a8:	ldr	x8, [x22]
  4431ac:	ldrb	w9, [x8]
  4431b0:	cmp	w9, #0x45
  4431b4:	b.ne	443634 <feof@plt+0x40c64>  // b.any
  4431b8:	add	x8, x8, #0x1
  4431bc:	str	x8, [x22]
  4431c0:	ldr	x21, [sp, #8]
  4431c4:	b	443638 <feof@plt+0x40c68>
  4431c8:	mov	x20, xzr
  4431cc:	ldr	w9, [x19, #72]
  4431d0:	mov	w8, wzr
  4431d4:	add	w9, w9, #0x3
  4431d8:	str	w9, [x19, #72]
  4431dc:	ldr	x9, [x22]
  4431e0:	ldrb	w10, [x9]
  4431e4:	cmp	w10, #0x49
  4431e8:	b.ne	443240 <feof@plt+0x40870>  // b.any
  4431ec:	cbz	w8, 443248 <feof@plt+0x40878>
  4431f0:	add	x8, x9, #0x1
  4431f4:	mov	x0, x19
  4431f8:	str	x8, [x19, #24]
  4431fc:	bl	444588 <feof@plt+0x41bb8>
  443200:	mov	x21, xzr
  443204:	cbz	x20, 443638 <feof@plt+0x40c68>
  443208:	cbz	x0, 443638 <feof@plt+0x40c68>
  44320c:	ldp	w8, w9, [x19, #40]
  443210:	sxtw	x8, w8
  443214:	cmp	w8, w9
  443218:	b.ge	443634 <feof@plt+0x40c64>  // b.tcont
  44321c:	ldr	x9, [x19, #32]
  443220:	mov	w10, #0x18                  	// #24
  443224:	add	w11, w8, #0x1
  443228:	madd	x21, x8, x10, x9
  44322c:	str	wzr, [x21, #4]
  443230:	str	w11, [x19, #40]
  443234:	cbz	x9, 443634 <feof@plt+0x40c64>
  443238:	mov	w10, #0x4                   	// #4
  44323c:	b	443620 <feof@plt+0x40c50>
  443240:	mov	x21, x20
  443244:	b	443638 <feof@plt+0x40c68>
  443248:	cbz	x20, 443634 <feof@plt+0x40c64>
  44324c:	ldp	w8, w9, [x19, #56]
  443250:	sxtw	x8, w8
  443254:	cmp	w8, w9
  443258:	b.ge	443634 <feof@plt+0x40c64>  // b.tcont
  44325c:	ldr	x9, [x19, #48]
  443260:	str	x20, [x9, x8, lsl #3]
  443264:	ldr	x9, [x19, #24]
  443268:	add	w8, w8, #0x1
  44326c:	str	w8, [x19, #56]
  443270:	ldrb	w8, [x9]
  443274:	sub	w8, w8, #0x49
  443278:	cmp	w8, #0x1
  44327c:	b.ls	4431f0 <feof@plt+0x40820>  // b.plast
  443280:	b	443634 <feof@plt+0x40c64>
  443284:	add	x9, x11, #0x2
  443288:	str	x9, [x22]
  44328c:	ldrb	w8, [x11, #2]
  443290:	cmp	w8, #0x6e
  443294:	b.eq	443634 <feof@plt+0x40c64>  // b.none
  443298:	cmp	w8, #0x5f
  44329c:	b.ne	44330c <feof@plt+0x4093c>  // b.any
  4432a0:	mov	w21, wzr
  4432a4:	add	x8, x11, #0x3
  4432a8:	str	x8, [x22]
  4432ac:	b	4432b4 <feof@plt+0x408e4>
  4432b0:	mov	w21, #0xffffffff            	// #-1
  4432b4:	mov	x0, x19
  4432b8:	bl	442ea0 <feof@plt+0x404d0>
  4432bc:	cbz	x0, 443578 <feof@plt+0x40ba8>
  4432c0:	ldr	w8, [x0]
  4432c4:	cmp	w8, #0x46
  4432c8:	b.eq	443578 <feof@plt+0x40ba8>  // b.none
  4432cc:	cmp	w8, #0x48
  4432d0:	b.eq	443578 <feof@plt+0x40ba8>  // b.none
  4432d4:	ldr	x8, [x22]
  4432d8:	ldrb	w9, [x8]
  4432dc:	cmp	w9, #0x5f
  4432e0:	b.ne	443578 <feof@plt+0x40ba8>  // b.any
  4432e4:	add	x10, x8, #0x1
  4432e8:	str	x10, [x22]
  4432ec:	ldrb	w9, [x8, #1]
  4432f0:	cmp	w9, #0x5f
  4432f4:	b.ne	4434b4 <feof@plt+0x40ae4>  // b.any
  4432f8:	add	x10, x8, #0x2
  4432fc:	str	x10, [x22]
  443300:	ldrb	w9, [x8, #2]
  443304:	mov	w8, #0x2                   	// #2
  443308:	b	4434b8 <feof@plt+0x40ae8>
  44330c:	sub	w10, w8, #0x30
  443310:	cmp	w10, #0x9
  443314:	b.hi	443498 <feof@plt+0x40ac8>  // b.pmore
  443318:	mov	w12, #0x2f                  	// #47
  44331c:	add	x9, x11, #0x3
  443320:	mov	w11, #0x6667                	// #26215
  443324:	mov	w10, wzr
  443328:	movk	w12, #0x8000, lsl #16
  44332c:	movk	w11, #0x6666, lsl #16
  443330:	mov	w13, #0xa                   	// #10
  443334:	and	w14, w8, #0xff
  443338:	sub	w8, w12, w14
  44333c:	smull	x8, w8, w11
  443340:	lsr	x15, x8, #63
  443344:	asr	x8, x8, #34
  443348:	add	w8, w8, w15
  44334c:	cmp	w10, w8
  443350:	b.gt	443634 <feof@plt+0x40c64>
  443354:	str	x9, [x22]
  443358:	ldrb	w8, [x9], #1
  44335c:	madd	w10, w10, w13, w14
  443360:	sub	w10, w10, #0x30
  443364:	sub	w14, w8, #0x30
  443368:	cmp	w14, #0xa
  44336c:	b.cc	443334 <feof@plt+0x40964>  // b.lo, b.ul, b.last
  443370:	cmn	w10, #0x1
  443374:	b.lt	443634 <feof@plt+0x40c64>  // b.tstop
  443378:	add	w21, w10, #0x1
  44337c:	sub	x9, x9, #0x1
  443380:	b	44349c <feof@plt+0x40acc>
  443384:	mov	w8, #0x1                   	// #1
  443388:	cmp	w9, #0x6e
  44338c:	b.ne	4433a8 <feof@plt+0x409d8>  // b.any
  443390:	add	x12, x10, #0x1
  443394:	str	x12, [x22]
  443398:	ldrb	w9, [x10, #1]
  44339c:	mov	w11, #0x1                   	// #1
  4433a0:	mov	x10, x12
  4433a4:	b	4433ac <feof@plt+0x409dc>
  4433a8:	mov	w11, wzr
  4433ac:	sub	w12, w9, #0x30
  4433b0:	cmp	w12, #0x9
  4433b4:	b.hi	443418 <feof@plt+0x40a48>  // b.pmore
  4433b8:	mov	w13, #0x2f                  	// #47
  4433bc:	mov	w14, #0x6667                	// #26215
  4433c0:	mov	w12, wzr
  4433c4:	movk	w13, #0x8000, lsl #16
  4433c8:	add	x10, x10, #0x1
  4433cc:	movk	w14, #0x6666, lsl #16
  4433d0:	mov	w15, #0xa                   	// #10
  4433d4:	and	w16, w9, #0xff
  4433d8:	sub	w9, w13, w16
  4433dc:	smull	x9, w9, w14
  4433e0:	lsr	x17, x9, #63
  4433e4:	asr	x9, x9, #34
  4433e8:	add	w9, w9, w17
  4433ec:	cmp	w12, w9
  4433f0:	b.gt	443634 <feof@plt+0x40c64>
  4433f4:	str	x10, [x22]
  4433f8:	ldrb	w9, [x10], #1
  4433fc:	madd	w12, w12, w15, w16
  443400:	sub	w12, w12, #0x30
  443404:	sub	w16, w9, #0x30
  443408:	cmp	w16, #0xa
  44340c:	b.cc	4433d4 <feof@plt+0x40a04>  // b.lo, b.ul, b.last
  443410:	sub	x10, x10, #0x1
  443414:	b	44341c <feof@plt+0x40a4c>
  443418:	mov	w12, wzr
  44341c:	cmp	w11, #0x0
  443420:	cneg	w11, w12, ne  // ne = any
  443424:	tbnz	w11, #31, 443634 <feof@plt+0x40c64>
  443428:	cmp	w8, #0x2
  44342c:	b.cc	443448 <feof@plt+0x40a78>  // b.lo, b.ul, b.last
  443430:	cmp	w11, #0xa
  443434:	b.lt	443448 <feof@plt+0x40a78>  // b.tstop
  443438:	cmp	w9, #0x5f
  44343c:	b.ne	443634 <feof@plt+0x40c64>  // b.any
  443440:	add	x8, x10, #0x1
  443444:	str	x8, [x22]
  443448:	ldp	w8, w9, [x19, #40]
  44344c:	sxtw	x8, w8
  443450:	cmp	w8, w9
  443454:	b.ge	4435c8 <feof@plt+0x40bf8>  // b.tcont
  443458:	ldr	x9, [x19, #32]
  44345c:	mov	w10, #0x18                  	// #24
  443460:	add	w11, w8, #0x1
  443464:	madd	x0, x8, x10, x9
  443468:	str	wzr, [x0, #4]
  44346c:	str	w11, [x19, #40]
  443470:	cbz	x9, 4435c8 <feof@plt+0x40bf8>
  443474:	mov	w10, #0x18                  	// #24
  443478:	adrp	x11, 45b000 <_obstack_memory_used@@Base+0xaa68>
  44347c:	add	x11, x11, #0x54b
  443480:	mov	w12, #0xe                   	// #14
  443484:	madd	x8, x8, x10, x9
  443488:	str	xzr, [x0]
  44348c:	str	x11, [x8, #8]
  443490:	str	w12, [x8, #16]
  443494:	b	4435cc <feof@plt+0x40bfc>
  443498:	mov	w21, #0x1                   	// #1
  44349c:	cmp	w8, #0x5f
  4434a0:	b.ne	443634 <feof@plt+0x40c64>  // b.any
  4434a4:	add	x8, x9, #0x1
  4434a8:	str	x8, [x22]
  4434ac:	tbz	w21, #31, 4432b4 <feof@plt+0x408e4>
  4434b0:	b	443634 <feof@plt+0x40c64>
  4434b4:	mov	w8, #0x1                   	// #1
  4434b8:	cmp	w9, #0x6e
  4434bc:	b.ne	4434d8 <feof@plt+0x40b08>  // b.any
  4434c0:	add	x12, x10, #0x1
  4434c4:	str	x12, [x22]
  4434c8:	ldrb	w9, [x10, #1]
  4434cc:	mov	w11, #0x1                   	// #1
  4434d0:	mov	x10, x12
  4434d4:	b	4434dc <feof@plt+0x40b0c>
  4434d8:	mov	w11, wzr
  4434dc:	sub	w12, w9, #0x30
  4434e0:	cmp	w12, #0x9
  4434e4:	b.hi	443548 <feof@plt+0x40b78>  // b.pmore
  4434e8:	mov	w13, #0x2f                  	// #47
  4434ec:	mov	w14, #0x6667                	// #26215
  4434f0:	mov	w12, wzr
  4434f4:	movk	w13, #0x8000, lsl #16
  4434f8:	add	x10, x10, #0x1
  4434fc:	movk	w14, #0x6666, lsl #16
  443500:	mov	w15, #0xa                   	// #10
  443504:	and	w16, w9, #0xff
  443508:	sub	w9, w13, w16
  44350c:	smull	x9, w9, w14
  443510:	lsr	x17, x9, #63
  443514:	asr	x9, x9, #34
  443518:	add	w9, w9, w17
  44351c:	cmp	w12, w9
  443520:	b.gt	443634 <feof@plt+0x40c64>
  443524:	str	x10, [x22]
  443528:	ldrb	w9, [x10], #1
  44352c:	madd	w12, w12, w15, w16
  443530:	sub	w12, w12, #0x30
  443534:	sub	w16, w9, #0x30
  443538:	cmp	w16, #0xa
  44353c:	b.cc	443504 <feof@plt+0x40b34>  // b.lo, b.ul, b.last
  443540:	sub	x10, x10, #0x1
  443544:	b	44354c <feof@plt+0x40b7c>
  443548:	mov	w12, wzr
  44354c:	cmp	w11, #0x0
  443550:	cneg	w11, w12, ne  // ne = any
  443554:	tbnz	w11, #31, 443634 <feof@plt+0x40c64>
  443558:	cmp	w8, #0x2
  44355c:	b.cc	443578 <feof@plt+0x40ba8>  // b.lo, b.ul, b.last
  443560:	cmp	w11, #0xa
  443564:	b.lt	443578 <feof@plt+0x40ba8>  // b.tstop
  443568:	cmp	w9, #0x5f
  44356c:	b.ne	443634 <feof@plt+0x40c64>  // b.any
  443570:	add	x8, x10, #0x1
  443574:	str	x8, [x22]
  443578:	tbnz	w21, #31, 4435cc <feof@plt+0x40bfc>
  44357c:	ldp	w8, w9, [x19, #40]
  443580:	sxtw	x8, w8
  443584:	cmp	w8, w9
  443588:	b.ge	4435c8 <feof@plt+0x40bf8>  // b.tcont
  44358c:	ldr	x9, [x19, #32]
  443590:	mov	w10, #0x18                  	// #24
  443594:	add	w11, w8, #0x1
  443598:	madd	x10, x8, x10, x9
  44359c:	str	wzr, [x10, #4]
  4435a0:	str	w11, [x19, #40]
  4435a4:	cbz	x9, 4435c8 <feof@plt+0x40bf8>
  4435a8:	mov	w12, #0x18                  	// #24
  4435ac:	mov	w11, #0x47                  	// #71
  4435b0:	madd	x8, x8, x12, x9
  4435b4:	str	w11, [x10]
  4435b8:	str	x0, [x8, #8]
  4435bc:	mov	x0, x10
  4435c0:	str	w21, [x8, #16]
  4435c4:	b	4435cc <feof@plt+0x40bfc>
  4435c8:	mov	x0, xzr
  4435cc:	ldr	w8, [x20]
  4435d0:	cmp	w8, #0x3
  4435d4:	b.ne	4435ec <feof@plt+0x40c1c>  // b.any
  4435d8:	ldr	x8, [x20, #16]
  4435dc:	ldr	w9, [x8]
  4435e0:	cmp	w9, #0x29
  4435e4:	b.ne	4435ec <feof@plt+0x40c1c>  // b.any
  4435e8:	str	xzr, [x8, #8]
  4435ec:	cbz	x0, 443634 <feof@plt+0x40c64>
  4435f0:	ldp	w8, w9, [x19, #40]
  4435f4:	sxtw	x8, w8
  4435f8:	cmp	w8, w9
  4435fc:	b.ge	443634 <feof@plt+0x40c64>  // b.tcont
  443600:	ldr	x9, [x19, #32]
  443604:	mov	w10, #0x18                  	// #24
  443608:	add	w11, w8, #0x1
  44360c:	madd	x21, x8, x10, x9
  443610:	str	wzr, [x21, #4]
  443614:	str	w11, [x19, #40]
  443618:	cbz	x9, 443634 <feof@plt+0x40c64>
  44361c:	mov	w10, #0x2                   	// #2
  443620:	mov	w11, #0x18                  	// #24
  443624:	madd	x8, x8, x11, x9
  443628:	str	w10, [x21]
  44362c:	stp	x20, x0, [x8, #8]
  443630:	b	443638 <feof@plt+0x40c68>
  443634:	mov	x21, xzr
  443638:	mov	x0, x21
  44363c:	ldp	x20, x19, [sp, #48]
  443640:	ldp	x22, x21, [sp, #32]
  443644:	ldp	x29, x30, [sp, #16]
  443648:	add	sp, sp, #0x40
  44364c:	ret
  443650:	stp	x29, x30, [sp, #-32]!
  443654:	stp	x20, x19, [sp, #16]
  443658:	ldr	x8, [x0, #24]
  44365c:	mov	x19, x0
  443660:	mov	x29, sp
  443664:	ldrb	w9, [x8]
  443668:	sub	w10, w9, #0x49
  44366c:	cmp	w10, #0x2
  443670:	b.cc	4436c0 <feof@plt+0x40cf0>  // b.lo, b.ul, b.last
  443674:	cmp	w9, #0x4c
  443678:	b.eq	4436d8 <feof@plt+0x40d08>  // b.none
  44367c:	cmp	w9, #0x58
  443680:	b.ne	4436e8 <feof@plt+0x40d18>  // b.any
  443684:	ldr	w20, [x19, #76]
  443688:	add	x8, x8, #0x1
  44368c:	str	x8, [x19, #24]
  443690:	mov	w8, #0x1                   	// #1
  443694:	mov	x0, x19
  443698:	str	w8, [x19, #76]
  44369c:	bl	4446a4 <feof@plt+0x41cd4>
  4436a0:	ldr	x8, [x19, #24]
  4436a4:	str	w20, [x19, #76]
  4436a8:	ldrb	w9, [x8]
  4436ac:	cmp	w9, #0x45
  4436b0:	b.ne	4436f8 <feof@plt+0x40d28>  // b.any
  4436b4:	add	x8, x8, #0x1
  4436b8:	str	x8, [x19, #24]
  4436bc:	b	4436fc <feof@plt+0x40d2c>
  4436c0:	add	x8, x8, #0x1
  4436c4:	str	x8, [x19, #24]
  4436c8:	mov	x0, x19
  4436cc:	ldp	x20, x19, [sp, #16]
  4436d0:	ldp	x29, x30, [sp], #32
  4436d4:	b	444588 <feof@plt+0x41bb8>
  4436d8:	mov	x0, x19
  4436dc:	ldp	x20, x19, [sp, #16]
  4436e0:	ldp	x29, x30, [sp], #32
  4436e4:	b	443708 <feof@plt+0x40d38>
  4436e8:	mov	x0, x19
  4436ec:	ldp	x20, x19, [sp, #16]
  4436f0:	ldp	x29, x30, [sp], #32
  4436f4:	b	440c5c <feof@plt+0x3e28c>
  4436f8:	mov	x0, xzr
  4436fc:	ldp	x20, x19, [sp, #16]
  443700:	ldp	x29, x30, [sp], #32
  443704:	ret
  443708:	stp	x29, x30, [sp, #-32]!
  44370c:	ldr	x8, [x0, #24]
  443710:	str	x19, [sp, #16]
  443714:	mov	x29, sp
  443718:	ldrb	w9, [x8]
  44371c:	cmp	w9, #0x4c
  443720:	b.ne	44388c <feof@plt+0x40ebc>  // b.any
  443724:	add	x9, x8, #0x1
  443728:	str	x9, [x0, #24]
  44372c:	ldrb	w9, [x8, #1]
  443730:	mov	x19, x0
  443734:	cmp	w9, #0x5a
  443738:	b.eq	443760 <feof@plt+0x40d90>  // b.none
  44373c:	cmp	w9, #0x5f
  443740:	b.ne	443780 <feof@plt+0x40db0>  // b.any
  443744:	add	x9, x8, #0x2
  443748:	str	x9, [x19, #24]
  44374c:	ldrb	w9, [x8, #2]
  443750:	cmp	w9, #0x5a
  443754:	b.ne	4437d8 <feof@plt+0x40e08>  // b.any
  443758:	mov	w9, #0x2                   	// #2
  44375c:	b	443764 <feof@plt+0x40d94>
  443760:	mov	w9, #0x1                   	// #1
  443764:	add	x8, x8, x9
  443768:	add	x8, x8, #0x1
  44376c:	mov	x0, x19
  443770:	mov	w1, wzr
  443774:	str	x8, [x19, #24]
  443778:	bl	43fac0 <feof@plt+0x3d0f0>
  44377c:	b	443870 <feof@plt+0x40ea0>
  443780:	mov	x0, x19
  443784:	bl	440c5c <feof@plt+0x3e28c>
  443788:	cbz	x0, 443890 <feof@plt+0x40ec0>
  44378c:	ldr	w8, [x0]
  443790:	mov	x2, x0
  443794:	cmp	w8, #0x27
  443798:	b.ne	4437b8 <feof@plt+0x40de8>  // b.any
  44379c:	ldr	x8, [x2, #8]
  4437a0:	ldr	w9, [x8, #28]
  4437a4:	cbz	w9, 4437b8 <feof@plt+0x40de8>
  4437a8:	ldr	w8, [x8, #8]
  4437ac:	ldr	w9, [x19, #72]
  4437b0:	sub	w8, w9, w8
  4437b4:	str	w8, [x19, #72]
  4437b8:	ldr	x8, [x19, #24]
  4437bc:	ldrb	w9, [x8]
  4437c0:	cmp	w9, #0x6e
  4437c4:	b.ne	4437e0 <feof@plt+0x40e10>  // b.any
  4437c8:	add	x8, x8, #0x1
  4437cc:	mov	w1, #0x3e                  	// #62
  4437d0:	str	x8, [x19, #24]
  4437d4:	b	4437e4 <feof@plt+0x40e14>
  4437d8:	mov	x0, xzr
  4437dc:	b	443870 <feof@plt+0x40ea0>
  4437e0:	mov	w1, #0x3d                  	// #61
  4437e4:	mov	x10, x8
  4437e8:	ldrb	w9, [x10]
  4437ec:	cbz	w9, 44388c <feof@plt+0x40ebc>
  4437f0:	cmp	w9, #0x45
  4437f4:	b.eq	44380c <feof@plt+0x40e3c>  // b.none
  4437f8:	add	x10, x10, #0x1
  4437fc:	str	x10, [x19, #24]
  443800:	ldrb	w9, [x10]
  443804:	cbnz	w9, 4437f0 <feof@plt+0x40e20>
  443808:	b	44388c <feof@plt+0x40ebc>
  44380c:	ldp	w9, w11, [x19, #40]
  443810:	sxtw	x9, w9
  443814:	cmp	w9, w11
  443818:	b.ge	443864 <feof@plt+0x40e94>  // b.tcont
  44381c:	ldr	x11, [x19, #32]
  443820:	sub	w10, w10, w8
  443824:	mov	w12, #0x18                  	// #24
  443828:	mov	x3, xzr
  44382c:	add	w13, w9, #0x1
  443830:	cmp	w10, #0x1
  443834:	madd	x12, x9, x12, x11
  443838:	str	wzr, [x12, #4]
  44383c:	str	w13, [x19, #40]
  443840:	b.lt	443868 <feof@plt+0x40e98>  // b.tstop
  443844:	cbz	x11, 443868 <feof@plt+0x40e98>
  443848:	mov	w13, #0x18                  	// #24
  44384c:	madd	x9, x9, x13, x11
  443850:	mov	x3, x12
  443854:	str	xzr, [x12]
  443858:	str	x8, [x9, #8]
  44385c:	str	w10, [x9, #16]
  443860:	b	443868 <feof@plt+0x40e98>
  443864:	mov	x3, xzr
  443868:	mov	x0, x19
  44386c:	bl	4420f8 <feof@plt+0x3f728>
  443870:	ldr	x8, [x19, #24]
  443874:	ldrb	w9, [x8]
  443878:	cmp	w9, #0x45
  44387c:	b.ne	44388c <feof@plt+0x40ebc>  // b.any
  443880:	add	x8, x8, #0x1
  443884:	str	x8, [x19, #24]
  443888:	b	443890 <feof@plt+0x40ec0>
  44388c:	mov	x0, xzr
  443890:	ldr	x19, [sp, #16]
  443894:	ldp	x29, x30, [sp], #32
  443898:	ret
  44389c:	stp	x29, x30, [sp, #-80]!
  4438a0:	str	x25, [sp, #16]
  4438a4:	stp	x24, x23, [sp, #32]
  4438a8:	stp	x22, x21, [sp, #48]
  4438ac:	stp	x20, x19, [sp, #64]
  4438b0:	mov	x21, x0
  4438b4:	ldr	x9, [x21, #24]!
  4438b8:	mov	x19, x0
  4438bc:	mov	x29, sp
  4438c0:	ldrb	w8, [x9]
  4438c4:	sub	w10, w8, #0x30
  4438c8:	cmp	w10, #0x9
  4438cc:	b.hi	4438e0 <feof@plt+0x40f10>  // b.pmore
  4438d0:	mov	x0, x19
  4438d4:	bl	442184 <feof@plt+0x3f7b4>
  4438d8:	mov	x20, x0
  4438dc:	b	443efc <feof@plt+0x4152c>
  4438e0:	sub	w10, w8, #0x61
  4438e4:	cmp	w10, #0x19
  4438e8:	b.hi	4439a8 <feof@plt+0x40fd8>  // b.pmore
  4438ec:	cmp	w8, #0x6f
  4438f0:	b.ne	443908 <feof@plt+0x40f38>  // b.any
  4438f4:	ldrb	w8, [x9, #1]
  4438f8:	cmp	w8, #0x6e
  4438fc:	b.ne	443908 <feof@plt+0x40f38>  // b.any
  443900:	add	x8, x9, #0x2
  443904:	str	x8, [x21]
  443908:	mov	x0, x19
  44390c:	bl	444220 <feof@plt+0x41850>
  443910:	mov	x20, x0
  443914:	cbz	x0, 443efc <feof@plt+0x4152c>
  443918:	ldr	w8, [x20]
  44391c:	cmp	w8, #0x32
  443920:	b.ne	443efc <feof@plt+0x4152c>  // b.any
  443924:	ldr	x8, [x20, #8]
  443928:	ldr	w9, [x19, #72]
  44392c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  443930:	add	x1, x1, #0x1a8
  443934:	ldr	w8, [x8, #16]
  443938:	add	w8, w8, w9
  44393c:	add	w8, w8, #0x7
  443940:	str	w8, [x19, #72]
  443944:	ldr	x8, [x20, #8]
  443948:	ldr	x0, [x8]
  44394c:	bl	402820 <strcmp@plt>
  443950:	cbnz	w0, 443efc <feof@plt+0x4152c>
  443954:	mov	x0, x19
  443958:	bl	442184 <feof@plt+0x3f7b4>
  44395c:	cbz	x0, 443ef8 <feof@plt+0x41528>
  443960:	ldp	w8, w9, [x19, #40]
  443964:	sxtw	x8, w8
  443968:	cmp	w8, w9
  44396c:	b.ge	443ef8 <feof@plt+0x41528>  // b.tcont
  443970:	ldr	x9, [x19, #32]
  443974:	mov	w10, #0x18                  	// #24
  443978:	add	w11, w8, #0x1
  44397c:	madd	x10, x8, x10, x9
  443980:	str	wzr, [x10, #4]
  443984:	str	w11, [x19, #40]
  443988:	cbz	x9, 443ef8 <feof@plt+0x41528>
  44398c:	mov	w12, #0x18                  	// #24
  443990:	mov	w11, #0x37                  	// #55
  443994:	madd	x8, x8, x12, x9
  443998:	str	w11, [x10]
  44399c:	stp	x20, x0, [x8, #8]
  4439a0:	mov	x20, x10
  4439a4:	b	443efc <feof@plt+0x4152c>
  4439a8:	sub	w10, w8, #0x43
  4439ac:	cmp	w10, #0x2
  4439b0:	b.cc	443a80 <feof@plt+0x410b0>  // b.lo, b.ul, b.last
  4439b4:	cmp	w8, #0x4c
  4439b8:	b.eq	443ae0 <feof@plt+0x41110>  // b.none
  4439bc:	cmp	w8, #0x55
  4439c0:	b.ne	443dc4 <feof@plt+0x413f4>  // b.any
  4439c4:	mov	x8, x9
  4439c8:	ldrb	w10, [x8, #1]!
  4439cc:	cmp	w10, #0x74
  4439d0:	b.eq	443bc8 <feof@plt+0x411f8>  // b.none
  4439d4:	cmp	w10, #0x6c
  4439d8:	b.ne	443dc4 <feof@plt+0x413f4>  // b.any
  4439dc:	str	x8, [x21]
  4439e0:	ldrb	w8, [x8]
  4439e4:	cmp	w8, #0x6c
  4439e8:	b.ne	443ef8 <feof@plt+0x41528>  // b.any
  4439ec:	add	x8, x9, #0x2
  4439f0:	mov	x0, x19
  4439f4:	str	x8, [x19, #24]
  4439f8:	bl	44446c <feof@plt+0x41a9c>
  4439fc:	cbz	x0, 443ef8 <feof@plt+0x41528>
  443a00:	ldr	x10, [x21]
  443a04:	ldrb	w8, [x10]
  443a08:	cmp	w8, #0x45
  443a0c:	b.ne	443ef8 <feof@plt+0x41528>  // b.any
  443a10:	add	x8, x10, #0x1
  443a14:	str	x8, [x21]
  443a18:	ldrb	w8, [x10, #1]
  443a1c:	cmp	w8, #0x6e
  443a20:	b.eq	443ef8 <feof@plt+0x41528>  // b.none
  443a24:	cmp	w8, #0x5f
  443a28:	b.ne	443e68 <feof@plt+0x41498>  // b.any
  443a2c:	mov	w9, wzr
  443a30:	add	x8, x10, #0x2
  443a34:	str	x8, [x21]
  443a38:	ldp	w8, w10, [x19, #40]
  443a3c:	sxtw	x8, w8
  443a40:	cmp	w8, w10
  443a44:	b.ge	443ef8 <feof@plt+0x41528>  // b.tcont
  443a48:	ldr	x10, [x19, #32]
  443a4c:	mov	w11, #0x18                  	// #24
  443a50:	add	w12, w8, #0x1
  443a54:	madd	x20, x8, x11, x10
  443a58:	str	wzr, [x20, #4]
  443a5c:	str	w12, [x19, #40]
  443a60:	cbz	x10, 443ef8 <feof@plt+0x41528>
  443a64:	mov	w12, #0x18                  	// #24
  443a68:	mov	w11, #0x46                  	// #70
  443a6c:	madd	x8, x8, x12, x10
  443a70:	str	w11, [x20]
  443a74:	str	x0, [x8, #8]
  443a78:	str	w9, [x8, #16]
  443a7c:	b	443c44 <feof@plt+0x41274>
  443a80:	ldr	x8, [x19, #64]
  443a84:	cbz	x8, 443aa8 <feof@plt+0x410d8>
  443a88:	ldr	w10, [x8]
  443a8c:	cmp	w10, #0x18
  443a90:	b.eq	443a98 <feof@plt+0x410c8>  // b.none
  443a94:	cbnz	w10, 443aa8 <feof@plt+0x410d8>
  443a98:	ldr	w10, [x8, #16]
  443a9c:	ldr	w11, [x19, #72]
  443aa0:	add	w10, w11, w10
  443aa4:	str	w10, [x19, #72]
  443aa8:	ldrb	w10, [x9]
  443aac:	cmp	w10, #0x44
  443ab0:	b.eq	443b30 <feof@plt+0x41160>  // b.none
  443ab4:	cmp	w10, #0x43
  443ab8:	b.ne	443ef8 <feof@plt+0x41528>  // b.any
  443abc:	mov	x12, x9
  443ac0:	ldrb	w10, [x12, #1]!
  443ac4:	cmp	w10, #0x49
  443ac8:	b.ne	443c68 <feof@plt+0x41298>  // b.any
  443acc:	str	x12, [x21]
  443ad0:	ldrb	w10, [x9, #2]
  443ad4:	mov	w11, #0x1                   	// #1
  443ad8:	mov	x9, x12
  443adc:	b	443c6c <feof@plt+0x4129c>
  443ae0:	add	x8, x9, #0x1
  443ae4:	mov	x0, x19
  443ae8:	str	x8, [x19, #24]
  443aec:	bl	442184 <feof@plt+0x3f7b4>
  443af0:	mov	x20, x0
  443af4:	cbz	x0, 443f8c <feof@plt+0x415bc>
  443af8:	ldr	x8, [x21]
  443afc:	ldrb	w9, [x8]
  443b00:	cmp	w9, #0x5f
  443b04:	b.ne	443efc <feof@plt+0x4152c>  // b.any
  443b08:	add	x10, x8, #0x1
  443b0c:	str	x10, [x21]
  443b10:	ldrb	w9, [x8, #1]
  443b14:	cmp	w9, #0x5f
  443b18:	b.ne	443cfc <feof@plt+0x4132c>  // b.any
  443b1c:	add	x10, x8, #0x2
  443b20:	str	x10, [x21]
  443b24:	ldrb	w9, [x8, #2]
  443b28:	mov	w8, #0x2                   	// #2
  443b2c:	b	443d00 <feof@plt+0x41330>
  443b30:	ldrb	w10, [x9, #1]
  443b34:	sub	w11, w10, #0x30
  443b38:	cmp	w11, #0x5
  443b3c:	b.hi	443ef8 <feof@plt+0x41528>  // b.pmore
  443b40:	mov	w10, #0x37                  	// #55
  443b44:	lsr	w10, w10, w11
  443b48:	tbz	w10, #0, 443ef8 <feof@plt+0x41528>
  443b4c:	ldp	w10, w12, [x19, #40]
  443b50:	add	x9, x9, #0x2
  443b54:	sxtw	x10, w10
  443b58:	mov	x20, xzr
  443b5c:	cmp	w10, w12
  443b60:	str	x9, [x19, #24]
  443b64:	b.ge	443efc <feof@plt+0x4152c>  // b.tcont
  443b68:	adrp	x12, 461000 <_obstack_memory_used@@Base+0x10a68>
  443b6c:	sxtb	x11, w11
  443b70:	add	x12, x12, #0x118
  443b74:	ldr	x9, [x19, #32]
  443b78:	ldr	w11, [x12, x11, lsl #2]
  443b7c:	mov	w13, #0x18                  	// #24
  443b80:	add	w14, w10, #0x1
  443b84:	madd	x12, x10, x13, x9
  443b88:	sub	w13, w11, #0x1
  443b8c:	cmp	w13, #0x4
  443b90:	str	wzr, [x12, #4]
  443b94:	str	w14, [x19, #40]
  443b98:	b.hi	443efc <feof@plt+0x4152c>  // b.pmore
  443b9c:	cbz	x8, 443efc <feof@plt+0x4152c>
  443ba0:	cbz	x9, 443efc <feof@plt+0x4152c>
  443ba4:	adrp	x13, 451000 <_obstack_memory_used@@Base+0xa68>
  443ba8:	ldr	d0, [x13, #1896]
  443bac:	mov	w13, #0x18                  	// #24
  443bb0:	madd	x9, x10, x13, x9
  443bb4:	mov	x20, x12
  443bb8:	str	d0, [x12]
  443bbc:	str	w11, [x9, #8]
  443bc0:	str	x8, [x9, #16]
  443bc4:	b	443efc <feof@plt+0x4152c>
  443bc8:	str	x8, [x21]
  443bcc:	ldrb	w8, [x8]
  443bd0:	cmp	w8, #0x74
  443bd4:	b.ne	443ef8 <feof@plt+0x41528>  // b.any
  443bd8:	add	x11, x9, #0x2
  443bdc:	str	x11, [x21]
  443be0:	ldrb	w8, [x9, #2]
  443be4:	cmp	w8, #0x6e
  443be8:	b.eq	443ef8 <feof@plt+0x41528>  // b.none
  443bec:	cmp	w8, #0x5f
  443bf0:	b.ne	443dcc <feof@plt+0x413fc>  // b.any
  443bf4:	mov	w10, wzr
  443bf8:	add	x8, x9, #0x3
  443bfc:	str	x8, [x21]
  443c00:	ldp	w8, w9, [x19, #40]
  443c04:	sxtw	x8, w8
  443c08:	cmp	w8, w9
  443c0c:	b.ge	443ef8 <feof@plt+0x41528>  // b.tcont
  443c10:	ldr	x9, [x19, #32]
  443c14:	mov	w11, #0x18                  	// #24
  443c18:	add	w12, w8, #0x1
  443c1c:	madd	x20, x8, x11, x9
  443c20:	str	wzr, [x20, #4]
  443c24:	str	w12, [x19, #40]
  443c28:	cbz	x9, 443ef8 <feof@plt+0x41528>
  443c2c:	mov	w12, #0x18                  	// #24
  443c30:	mov	w11, #0x48                  	// #72
  443c34:	mov	w10, w10
  443c38:	madd	x8, x8, x12, x9
  443c3c:	str	w11, [x20]
  443c40:	str	x10, [x8, #8]
  443c44:	ldp	w8, w9, [x19, #56]
  443c48:	sxtw	x8, w8
  443c4c:	cmp	w8, w9
  443c50:	b.ge	443ef8 <feof@plt+0x41528>  // b.tcont
  443c54:	ldr	x9, [x19, #48]
  443c58:	add	w10, w8, #0x1
  443c5c:	str	x20, [x9, x8, lsl #3]
  443c60:	str	w10, [x19, #56]
  443c64:	b	443efc <feof@plt+0x4152c>
  443c68:	mov	w11, wzr
  443c6c:	sub	w22, w10, #0x31
  443c70:	cmp	w22, #0x4
  443c74:	b.hi	443ef8 <feof@plt+0x41528>  // b.pmore
  443c78:	add	x9, x9, #0x2
  443c7c:	str	x9, [x21]
  443c80:	cbz	w11, 443c90 <feof@plt+0x412c0>
  443c84:	mov	x0, x19
  443c88:	bl	440c5c <feof@plt+0x3e28c>
  443c8c:	ldr	x8, [x19, #64]
  443c90:	ldp	w9, w10, [x19, #40]
  443c94:	sxtw	x9, w9
  443c98:	cmp	w9, w10
  443c9c:	b.ge	443ef8 <feof@plt+0x41528>  // b.tcont
  443ca0:	ldr	x10, [x19, #32]
  443ca4:	mov	w11, #0x18                  	// #24
  443ca8:	and	w13, w22, #0xff
  443cac:	mov	x20, xzr
  443cb0:	add	w12, w9, #0x1
  443cb4:	cmp	w13, #0x4
  443cb8:	madd	x11, x9, x11, x10
  443cbc:	str	wzr, [x11, #4]
  443cc0:	str	w12, [x19, #40]
  443cc4:	b.hi	443efc <feof@plt+0x4152c>  // b.pmore
  443cc8:	cbz	x8, 443efc <feof@plt+0x4152c>
  443ccc:	cbz	x10, 443efc <feof@plt+0x4152c>
  443cd0:	adrp	x13, 45f000 <_obstack_memory_used@@Base+0xea68>
  443cd4:	ldr	d0, [x13, #3632]
  443cd8:	and	w12, w22, #0xff
  443cdc:	mov	w13, #0x18                  	// #24
  443ce0:	add	w12, w12, #0x1
  443ce4:	madd	x9, x9, x13, x10
  443ce8:	str	d0, [x11]
  443cec:	str	w12, [x9, #8]
  443cf0:	str	x8, [x9, #16]
  443cf4:	mov	x20, x11
  443cf8:	b	443efc <feof@plt+0x4152c>
  443cfc:	mov	w8, #0x1                   	// #1
  443d00:	cmp	w9, #0x6e
  443d04:	b.ne	443d20 <feof@plt+0x41350>  // b.any
  443d08:	add	x12, x10, #0x1
  443d0c:	str	x12, [x21]
  443d10:	ldrb	w9, [x10, #1]
  443d14:	mov	w11, #0x1                   	// #1
  443d18:	mov	x10, x12
  443d1c:	b	443d24 <feof@plt+0x41354>
  443d20:	mov	w11, wzr
  443d24:	sub	w12, w9, #0x30
  443d28:	cmp	w12, #0x9
  443d2c:	b.hi	443d90 <feof@plt+0x413c0>  // b.pmore
  443d30:	mov	w13, #0x2f                  	// #47
  443d34:	mov	w14, #0x6667                	// #26215
  443d38:	mov	w12, wzr
  443d3c:	movk	w13, #0x8000, lsl #16
  443d40:	add	x10, x10, #0x1
  443d44:	movk	w14, #0x6666, lsl #16
  443d48:	mov	w15, #0xa                   	// #10
  443d4c:	and	w16, w9, #0xff
  443d50:	sub	w9, w13, w16
  443d54:	smull	x9, w9, w14
  443d58:	lsr	x17, x9, #63
  443d5c:	asr	x9, x9, #34
  443d60:	add	w9, w9, w17
  443d64:	cmp	w12, w9
  443d68:	b.gt	443dc4 <feof@plt+0x413f4>
  443d6c:	str	x10, [x21]
  443d70:	ldrb	w9, [x10], #1
  443d74:	madd	w12, w12, w15, w16
  443d78:	sub	w12, w12, #0x30
  443d7c:	sub	w16, w9, #0x30
  443d80:	cmp	w16, #0xa
  443d84:	b.cc	443d4c <feof@plt+0x4137c>  // b.lo, b.ul, b.last
  443d88:	sub	x10, x10, #0x1
  443d8c:	b	443d94 <feof@plt+0x413c4>
  443d90:	mov	w12, wzr
  443d94:	cmp	w11, #0x0
  443d98:	cneg	w11, w12, ne  // ne = any
  443d9c:	tbnz	w11, #31, 443dc4 <feof@plt+0x413f4>
  443da0:	cmp	w8, #0x2
  443da4:	b.cc	443efc <feof@plt+0x4152c>  // b.lo, b.ul, b.last
  443da8:	cmp	w11, #0xa
  443dac:	b.lt	443efc <feof@plt+0x4152c>  // b.tstop
  443db0:	cmp	w9, #0x5f
  443db4:	b.ne	443dc4 <feof@plt+0x413f4>  // b.any
  443db8:	add	x8, x10, #0x1
  443dbc:	str	x8, [x21]
  443dc0:	b	443efc <feof@plt+0x4152c>
  443dc4:	mov	x20, xzr
  443dc8:	b	443f8c <feof@plt+0x415bc>
  443dcc:	sub	w10, w8, #0x30
  443dd0:	cmp	w10, #0x9
  443dd4:	b.hi	443e4c <feof@plt+0x4147c>  // b.pmore
  443dd8:	mov	w11, #0x2f                  	// #47
  443ddc:	mov	w12, #0x6667                	// #26215
  443de0:	mov	w10, wzr
  443de4:	movk	w11, #0x8000, lsl #16
  443de8:	add	x9, x9, #0x3
  443dec:	movk	w12, #0x6666, lsl #16
  443df0:	mov	w13, #0xa                   	// #10
  443df4:	and	w14, w8, #0xff
  443df8:	sub	w8, w11, w14
  443dfc:	smull	x8, w8, w12
  443e00:	lsr	x15, x8, #63
  443e04:	asr	x8, x8, #34
  443e08:	add	w8, w8, w15
  443e0c:	cmp	w10, w8
  443e10:	b.gt	443ef8 <feof@plt+0x41528>
  443e14:	str	x9, [x21]
  443e18:	ldrb	w8, [x9], #1
  443e1c:	madd	w10, w10, w13, w14
  443e20:	sub	w10, w10, #0x30
  443e24:	sub	w14, w8, #0x30
  443e28:	cmp	w14, #0xa
  443e2c:	b.cc	443df4 <feof@plt+0x41424>  // b.lo, b.ul, b.last
  443e30:	cmn	w10, #0x1
  443e34:	b.lt	443ef8 <feof@plt+0x41528>  // b.tstop
  443e38:	add	w10, w10, #0x1
  443e3c:	sub	x11, x9, #0x1
  443e40:	cmp	w8, #0x5f
  443e44:	b.eq	443e58 <feof@plt+0x41488>  // b.none
  443e48:	b	443ef8 <feof@plt+0x41528>
  443e4c:	mov	w10, #0x1                   	// #1
  443e50:	cmp	w8, #0x5f
  443e54:	b.ne	443ef8 <feof@plt+0x41528>  // b.any
  443e58:	add	x8, x11, #0x1
  443e5c:	str	x8, [x21]
  443e60:	tbz	w10, #31, 443c00 <feof@plt+0x41230>
  443e64:	b	443ef8 <feof@plt+0x41528>
  443e68:	sub	w9, w8, #0x30
  443e6c:	cmp	w9, #0x9
  443e70:	b.hi	443ee0 <feof@plt+0x41510>  // b.pmore
  443e74:	mov	w11, #0x2f                  	// #47
  443e78:	mov	w12, #0x6667                	// #26215
  443e7c:	mov	w9, wzr
  443e80:	movk	w11, #0x8000, lsl #16
  443e84:	add	x10, x10, #0x2
  443e88:	movk	w12, #0x6666, lsl #16
  443e8c:	mov	w13, #0xa                   	// #10
  443e90:	and	w14, w8, #0xff
  443e94:	sub	w8, w11, w14
  443e98:	smull	x8, w8, w12
  443e9c:	lsr	x15, x8, #63
  443ea0:	asr	x8, x8, #34
  443ea4:	add	w8, w8, w15
  443ea8:	cmp	w9, w8
  443eac:	b.gt	443ef8 <feof@plt+0x41528>
  443eb0:	str	x10, [x21]
  443eb4:	ldrb	w8, [x10], #1
  443eb8:	madd	w9, w9, w13, w14
  443ebc:	sub	w9, w9, #0x30
  443ec0:	sub	w14, w8, #0x30
  443ec4:	cmp	w14, #0xa
  443ec8:	b.cc	443e90 <feof@plt+0x414c0>  // b.lo, b.ul, b.last
  443ecc:	cmn	w9, #0x1
  443ed0:	b.lt	443ef8 <feof@plt+0x41528>  // b.tstop
  443ed4:	add	w9, w9, #0x1
  443ed8:	sub	x10, x10, #0x2
  443edc:	b	443ee4 <feof@plt+0x41514>
  443ee0:	mov	w9, #0x1                   	// #1
  443ee4:	cmp	w8, #0x5f
  443ee8:	b.ne	443ef8 <feof@plt+0x41528>  // b.any
  443eec:	add	x8, x10, #0x2
  443ef0:	str	x8, [x21]
  443ef4:	tbz	w9, #31, 443a38 <feof@plt+0x41068>
  443ef8:	mov	x20, xzr
  443efc:	ldr	x8, [x21]
  443f00:	ldrb	w9, [x8]
  443f04:	cmp	w9, #0x42
  443f08:	b.ne	443f8c <feof@plt+0x415bc>  // b.any
  443f0c:	ldr	x22, [x19, #64]
  443f10:	mov	w23, #0x18                  	// #24
  443f14:	mov	w24, #0x4c                  	// #76
  443f18:	b	443f30 <feof@plt+0x41560>
  443f1c:	mov	x20, xzr
  443f20:	ldr	x8, [x21]
  443f24:	ldrb	w9, [x8]
  443f28:	cmp	w9, #0x42
  443f2c:	b.ne	443f88 <feof@plt+0x415b8>  // b.any
  443f30:	add	x8, x8, #0x1
  443f34:	mov	x0, x19
  443f38:	mov	x25, x20
  443f3c:	str	x8, [x19, #24]
  443f40:	bl	442184 <feof@plt+0x3f7b4>
  443f44:	mov	x20, xzr
  443f48:	cbz	x25, 443f20 <feof@plt+0x41550>
  443f4c:	cbz	x0, 443f20 <feof@plt+0x41550>
  443f50:	ldp	w8, w9, [x19, #40]
  443f54:	sxtw	x8, w8
  443f58:	cmp	w8, w9
  443f5c:	b.ge	443f1c <feof@plt+0x4154c>  // b.tcont
  443f60:	ldr	x9, [x19, #32]
  443f64:	add	w10, w8, #0x1
  443f68:	madd	x20, x8, x23, x9
  443f6c:	str	wzr, [x20, #4]
  443f70:	str	w10, [x19, #40]
  443f74:	cbz	x9, 443f1c <feof@plt+0x4154c>
  443f78:	madd	x8, x8, x23, x9
  443f7c:	str	w24, [x20]
  443f80:	stp	x25, x0, [x8, #8]
  443f84:	b	443f20 <feof@plt+0x41550>
  443f88:	str	x22, [x19, #64]
  443f8c:	mov	x0, x20
  443f90:	ldp	x20, x19, [sp, #64]
  443f94:	ldp	x22, x21, [sp, #48]
  443f98:	ldp	x24, x23, [sp, #32]
  443f9c:	ldr	x25, [sp, #16]
  443fa0:	ldp	x29, x30, [sp], #80
  443fa4:	ret
  443fa8:	stp	x29, x30, [sp, #-96]!
  443fac:	stp	x26, x25, [sp, #32]
  443fb0:	stp	x24, x23, [sp, #48]
  443fb4:	stp	x22, x21, [sp, #64]
  443fb8:	adrp	x21, 460000 <_obstack_memory_used@@Base+0xfa68>
  443fbc:	mov	w24, #0x2f                  	// #47
  443fc0:	mov	w25, #0x6667                	// #26215
  443fc4:	stp	x20, x19, [sp, #80]
  443fc8:	mov	x20, x0
  443fcc:	mov	x19, xzr
  443fd0:	add	x21, x21, #0x1b5
  443fd4:	mov	w22, #0x18                  	// #24
  443fd8:	mov	w23, #0x5                   	// #5
  443fdc:	movk	w24, #0x8000, lsl #16
  443fe0:	movk	w25, #0x6666, lsl #16
  443fe4:	mov	w26, #0xa                   	// #10
  443fe8:	str	x27, [sp, #16]
  443fec:	mov	x29, sp
  443ff0:	ldr	x8, [x20, #24]
  443ff4:	ldrb	w27, [x8]
  443ff8:	cbz	w27, 4441fc <feof@plt+0x4182c>
  443ffc:	cmp	w27, #0x44
  444000:	b.eq	444074 <feof@plt+0x416a4>  // b.none
  444004:	sub	w9, w27, #0x30
  444008:	cmp	w9, #0xa
  44400c:	b.cc	444090 <feof@plt+0x416c0>  // b.lo, b.ul, b.last
  444010:	sub	w9, w27, #0x61
  444014:	and	w9, w9, #0xff
  444018:	cmp	w9, #0x1a
  44401c:	b.cc	444090 <feof@plt+0x416c0>  // b.lo, b.ul, b.last
  444020:	cmp	w27, #0x4d
  444024:	b.ne	444038 <feof@plt+0x41668>  // b.any
  444028:	cbz	x19, 444200 <feof@plt+0x41830>
  44402c:	add	x8, x8, #0x1
  444030:	str	x8, [x20, #24]
  444034:	b	443ff0 <feof@plt+0x41620>
  444038:	sub	w9, w27, #0x43
  44403c:	cmp	w9, #0x12
  444040:	b.hi	4441fc <feof@plt+0x4182c>  // b.pmore
  444044:	adr	x10, 444054 <feof@plt+0x41684>
  444048:	ldrb	w11, [x21, x9]
  44404c:	add	x10, x10, x11, lsl #2
  444050:	br	x10
  444054:	cbz	x19, 444200 <feof@plt+0x41830>
  444058:	add	x8, x8, #0x1
  44405c:	mov	x0, x20
  444060:	str	x8, [x20, #24]
  444064:	bl	444588 <feof@plt+0x41bb8>
  444068:	mov	x3, x0
  44406c:	mov	w1, #0x4                   	// #4
  444070:	b	4440a4 <feof@plt+0x416d4>
  444074:	ldrb	w8, [x8, #1]
  444078:	orr	w8, w8, #0x20
  44407c:	cmp	w8, #0x74
  444080:	b.ne	444090 <feof@plt+0x416c0>  // b.any
  444084:	mov	x0, x20
  444088:	bl	440c5c <feof@plt+0x3e28c>
  44408c:	b	444098 <feof@plt+0x416c8>
  444090:	mov	x0, x20
  444094:	bl	44389c <feof@plt+0x40ecc>
  444098:	mov	x3, x0
  44409c:	cbz	x19, 4440c0 <feof@plt+0x416f0>
  4440a0:	mov	w1, #0x1                   	// #1
  4440a4:	mov	x0, x20
  4440a8:	mov	x2, x19
  4440ac:	bl	4420f8 <feof@plt+0x3f728>
  4440b0:	mov	x19, x0
  4440b4:	cmp	w27, #0x53
  4440b8:	b.eq	443ff0 <feof@plt+0x41620>  // b.none
  4440bc:	b	4440cc <feof@plt+0x416fc>
  4440c0:	mov	x19, x3
  4440c4:	cmp	w27, #0x53
  4440c8:	b.eq	443ff0 <feof@plt+0x41620>  // b.none
  4440cc:	ldr	x8, [x20, #24]
  4440d0:	ldrb	w8, [x8]
  4440d4:	cmp	w8, #0x45
  4440d8:	b.eq	443ff0 <feof@plt+0x41620>  // b.none
  4440dc:	cbz	x19, 444200 <feof@plt+0x41830>
  4440e0:	ldp	w8, w9, [x20, #56]
  4440e4:	sxtw	x8, w8
  4440e8:	cmp	w8, w9
  4440ec:	b.ge	4441fc <feof@plt+0x4182c>  // b.tcont
  4440f0:	ldr	x9, [x20, #48]
  4440f4:	add	w10, w8, #0x1
  4440f8:	str	x19, [x9, x8, lsl #3]
  4440fc:	str	w10, [x20, #56]
  444100:	b	443ff0 <feof@plt+0x41620>
  444104:	mov	w1, #0x1                   	// #1
  444108:	mov	x0, x20
  44410c:	bl	44237c <feof@plt+0x3f9ac>
  444110:	b	444098 <feof@plt+0x416c8>
  444114:	add	x9, x8, #0x1
  444118:	str	x9, [x20, #24]
  44411c:	ldrb	w9, [x8, #1]
  444120:	cmp	w9, #0x6e
  444124:	b.eq	4441f4 <feof@plt+0x41824>  // b.none
  444128:	cmp	w9, #0x5f
  44412c:	b.ne	444178 <feof@plt+0x417a8>  // b.any
  444130:	mov	w10, wzr
  444134:	add	x8, x8, #0x2
  444138:	str	x8, [x20, #24]
  44413c:	ldp	w8, w9, [x20, #40]
  444140:	sxtw	x8, w8
  444144:	cmp	w8, w9
  444148:	b.ge	4441f4 <feof@plt+0x41824>  // b.tcont
  44414c:	ldr	x9, [x20, #32]
  444150:	add	w11, w8, #0x1
  444154:	madd	x3, x8, x22, x9
  444158:	str	wzr, [x3, #4]
  44415c:	str	w11, [x20, #40]
  444160:	cbz	x9, 4441f4 <feof@plt+0x41824>
  444164:	mov	w10, w10
  444168:	madd	x8, x8, x22, x9
  44416c:	str	w23, [x3]
  444170:	str	x10, [x8, #8]
  444174:	b	44409c <feof@plt+0x416cc>
  444178:	sub	w10, w9, #0x30
  44417c:	cmp	w10, #0x9
  444180:	b.hi	4441dc <feof@plt+0x4180c>  // b.pmore
  444184:	mov	w10, wzr
  444188:	add	x8, x8, #0x2
  44418c:	and	w11, w9, #0xff
  444190:	sub	w9, w24, w11
  444194:	smull	x9, w9, w25
  444198:	lsr	x12, x9, #63
  44419c:	asr	x9, x9, #34
  4441a0:	add	w9, w9, w12
  4441a4:	cmp	w10, w9
  4441a8:	b.gt	4441f4 <feof@plt+0x41824>
  4441ac:	str	x8, [x20, #24]
  4441b0:	ldrb	w9, [x8], #1
  4441b4:	madd	w10, w10, w26, w11
  4441b8:	sub	w10, w10, #0x30
  4441bc:	sub	w11, w9, #0x30
  4441c0:	cmp	w11, #0xa
  4441c4:	b.cc	44418c <feof@plt+0x417bc>  // b.lo, b.ul, b.last
  4441c8:	cmn	w10, #0x1
  4441cc:	b.lt	4441f4 <feof@plt+0x41824>  // b.tstop
  4441d0:	add	w10, w10, #0x1
  4441d4:	sub	x8, x8, #0x2
  4441d8:	b	4441e0 <feof@plt+0x41810>
  4441dc:	mov	w10, #0x1                   	// #1
  4441e0:	cmp	w9, #0x5f
  4441e4:	b.ne	4441f4 <feof@plt+0x41824>  // b.any
  4441e8:	add	x8, x8, #0x2
  4441ec:	str	x8, [x20, #24]
  4441f0:	tbz	w10, #31, 44413c <feof@plt+0x4176c>
  4441f4:	mov	x3, xzr
  4441f8:	b	44409c <feof@plt+0x416cc>
  4441fc:	mov	x19, xzr
  444200:	mov	x0, x19
  444204:	ldp	x20, x19, [sp, #80]
  444208:	ldp	x22, x21, [sp, #64]
  44420c:	ldp	x24, x23, [sp, #48]
  444210:	ldp	x26, x25, [sp, #32]
  444214:	ldr	x27, [sp, #16]
  444218:	ldp	x29, x30, [sp], #96
  44421c:	ret
  444220:	stp	x29, x30, [sp, #-32]!
  444224:	stp	x20, x19, [sp, #16]
  444228:	ldr	x9, [x0, #24]
  44422c:	mov	x19, x0
  444230:	mov	x29, sp
  444234:	ldrb	w8, [x9]
  444238:	cbz	w8, 4442d8 <feof@plt+0x41908>
  44423c:	add	x8, x9, #0x1
  444240:	str	x8, [x19, #24]
  444244:	ldrb	w10, [x9, #1]
  444248:	ldrb	w8, [x9]
  44424c:	cbz	w10, 4442d8 <feof@plt+0x41908>
  444250:	add	x10, x9, #0x2
  444254:	str	x10, [x19, #24]
  444258:	ldrb	w9, [x9, #1]
  44425c:	cmp	w8, #0x76
  444260:	b.ne	4443a8 <feof@plt+0x419d8>  // b.any
  444264:	sub	w20, w9, #0x30
  444268:	and	w10, w20, #0xff
  44426c:	cmp	w10, #0x9
  444270:	b.hi	4443a8 <feof@plt+0x419d8>  // b.pmore
  444274:	mov	x0, x19
  444278:	bl	442184 <feof@plt+0x3f7b4>
  44427c:	ldp	w9, w8, [x19, #40]
  444280:	sxtw	x9, w9
  444284:	cmp	w9, w8
  444288:	b.ge	444398 <feof@plt+0x419c8>  // b.tcont
  44428c:	ldr	x10, [x19, #32]
  444290:	mov	w11, #0x18                  	// #24
  444294:	mov	x8, x0
  444298:	mov	x0, xzr
  44429c:	add	w12, w9, #0x1
  4442a0:	madd	x11, x9, x11, x10
  4442a4:	str	wzr, [x11, #4]
  4442a8:	str	w12, [x19, #40]
  4442ac:	cbz	x8, 44439c <feof@plt+0x419cc>
  4442b0:	cbz	x10, 44439c <feof@plt+0x419cc>
  4442b4:	adrp	x12, 45f000 <_obstack_memory_used@@Base+0xea68>
  4442b8:	ldr	d0, [x12, #3624]
  4442bc:	mov	w12, #0x18                  	// #24
  4442c0:	madd	x9, x9, x12, x10
  4442c4:	mov	x0, x11
  4442c8:	str	d0, [x11]
  4442cc:	str	w20, [x9, #8]
  4442d0:	str	x8, [x9, #16]
  4442d4:	b	44439c <feof@plt+0x419cc>
  4442d8:	mov	w9, wzr
  4442dc:	adrp	x11, 460000 <_obstack_memory_used@@Base+0xfa68>
  4442e0:	mov	w10, wzr
  4442e4:	mov	w13, #0x43                  	// #67
  4442e8:	add	x11, x11, #0x4f0
  4442ec:	mov	w12, #0x18                  	// #24
  4442f0:	b	444308 <feof@plt+0x41938>
  4442f4:	add	w10, w15, #0x1
  4442f8:	mov	w15, w13
  4442fc:	cmp	w10, w15
  444300:	mov	w13, w15
  444304:	b.eq	444398 <feof@plt+0x419c8>  // b.none
  444308:	sub	w14, w13, w10
  44430c:	cmp	w14, #0x0
  444310:	cinc	w14, w14, lt  // lt = tstop
  444314:	add	w15, w10, w14, asr #1
  444318:	smaddl	x14, w15, w12, x11
  44431c:	ldr	x16, [x14]
  444320:	ldrb	w17, [x16]
  444324:	cmp	w8, w17
  444328:	b.ne	444338 <feof@plt+0x41968>  // b.any
  44432c:	ldrb	w18, [x16, #1]
  444330:	cmp	w9, w18
  444334:	b.eq	444354 <feof@plt+0x41984>  // b.none
  444338:	cmp	w8, w17
  44433c:	b.cc	4442fc <feof@plt+0x4192c>  // b.lo, b.ul, b.last
  444340:	b.ne	4442f4 <feof@plt+0x41924>  // b.any
  444344:	ldrb	w14, [x16, #1]
  444348:	cmp	w9, w14
  44434c:	b.cs	4442f4 <feof@plt+0x41924>  // b.hs, b.nlast
  444350:	b	4442fc <feof@plt+0x4192c>
  444354:	ldp	w8, w9, [x19, #40]
  444358:	sxtw	x8, w8
  44435c:	cmp	w8, w9
  444360:	b.ge	444398 <feof@plt+0x419c8>  // b.tcont
  444364:	ldr	x9, [x19, #32]
  444368:	mov	w10, #0x18                  	// #24
  44436c:	add	w11, w8, #0x1
  444370:	madd	x0, x8, x10, x9
  444374:	str	wzr, [x0, #4]
  444378:	str	w11, [x19, #40]
  44437c:	cbz	x9, 444398 <feof@plt+0x419c8>
  444380:	mov	w11, #0x18                  	// #24
  444384:	mov	w10, #0x32                  	// #50
  444388:	madd	x8, x8, x11, x9
  44438c:	str	w10, [x0]
  444390:	str	x14, [x8, #8]
  444394:	b	44439c <feof@plt+0x419cc>
  444398:	mov	x0, xzr
  44439c:	ldp	x20, x19, [sp, #16]
  4443a0:	ldp	x29, x30, [sp], #32
  4443a4:	ret
  4443a8:	cmp	w8, #0x63
  4443ac:	b.ne	4442dc <feof@plt+0x4190c>  // b.any
  4443b0:	cmp	w9, #0x76
  4443b4:	b.ne	4442dc <feof@plt+0x4190c>  // b.any
  4443b8:	ldp	w8, w20, [x19, #76]
  4443bc:	mov	x0, x19
  4443c0:	cmp	w8, #0x0
  4443c4:	cset	w8, eq  // eq = none
  4443c8:	str	w8, [x19, #80]
  4443cc:	bl	440c5c <feof@plt+0x3e28c>
  4443d0:	ldr	w9, [x19, #80]
  4443d4:	mov	x8, x0
  4443d8:	cbz	w9, 444414 <feof@plt+0x41a44>
  4443dc:	cbz	x8, 444460 <feof@plt+0x41a90>
  4443e0:	ldp	w9, w10, [x19, #40]
  4443e4:	sxtw	x9, w9
  4443e8:	cmp	w9, w10
  4443ec:	b.ge	444460 <feof@plt+0x41a90>  // b.tcont
  4443f0:	ldr	x10, [x19, #32]
  4443f4:	mov	w11, #0x18                  	// #24
  4443f8:	add	w12, w9, #0x1
  4443fc:	madd	x0, x9, x11, x10
  444400:	str	wzr, [x0, #4]
  444404:	str	w12, [x19, #40]
  444408:	cbz	x10, 444460 <feof@plt+0x41a90>
  44440c:	mov	w11, #0x35                  	// #53
  444410:	b	444448 <feof@plt+0x41a78>
  444414:	cbz	x8, 444460 <feof@plt+0x41a90>
  444418:	ldp	w9, w10, [x19, #40]
  44441c:	sxtw	x9, w9
  444420:	cmp	w9, w10
  444424:	b.ge	444460 <feof@plt+0x41a90>  // b.tcont
  444428:	ldr	x10, [x19, #32]
  44442c:	mov	w11, #0x18                  	// #24
  444430:	add	w12, w9, #0x1
  444434:	madd	x0, x9, x11, x10
  444438:	str	wzr, [x0, #4]
  44443c:	str	w12, [x19, #40]
  444440:	cbz	x10, 444460 <feof@plt+0x41a90>
  444444:	mov	w11, #0x34                  	// #52
  444448:	mov	w12, #0x18                  	// #24
  44444c:	madd	x9, x9, x12, x10
  444450:	str	w11, [x0]
  444454:	stp	x8, xzr, [x9, #8]
  444458:	str	w20, [x19, #80]
  44445c:	b	44439c <feof@plt+0x419cc>
  444460:	mov	x0, xzr
  444464:	str	w20, [x19, #80]
  444468:	b	44439c <feof@plt+0x419cc>
  44446c:	stp	x29, x30, [sp, #-64]!
  444470:	str	x23, [sp, #16]
  444474:	mov	x29, sp
  444478:	adrp	x23, 460000 <_obstack_memory_used@@Base+0xfa68>
  44447c:	stp	x22, x21, [sp, #32]
  444480:	stp	x20, x19, [sp, #48]
  444484:	mov	x19, x0
  444488:	add	x20, x29, #0x18
  44448c:	mov	w21, #0x18                  	// #24
  444490:	mov	w22, #0x2e                  	// #46
  444494:	add	x23, x23, #0x1c8
  444498:	str	xzr, [x29, #24]
  44449c:	ldr	x8, [x19, #24]
  4444a0:	ldrb	w9, [x8]
  4444a4:	sub	w10, w9, #0x2e
  4444a8:	cmp	w10, #0x24
  4444ac:	b.hi	4444d0 <feof@plt+0x41b00>  // b.pmore
  4444b0:	adr	x9, 4444c0 <feof@plt+0x41af0>
  4444b4:	ldrb	w11, [x23, x10]
  4444b8:	add	x9, x9, x11, lsl #2
  4444bc:	br	x9
  4444c0:	ldrb	w8, [x8, #1]
  4444c4:	cmp	w8, #0x45
  4444c8:	b.ne	4444d4 <feof@plt+0x41b04>  // b.any
  4444cc:	b	444530 <feof@plt+0x41b60>
  4444d0:	cbz	w9, 444530 <feof@plt+0x41b60>
  4444d4:	mov	x0, x19
  4444d8:	bl	440c5c <feof@plt+0x3e28c>
  4444dc:	cbz	x0, 444574 <feof@plt+0x41ba4>
  4444e0:	ldp	w8, w9, [x19, #40]
  4444e4:	sxtw	x8, w8
  4444e8:	cmp	w8, w9
  4444ec:	b.ge	444524 <feof@plt+0x41b54>  // b.tcont
  4444f0:	ldr	x10, [x19, #32]
  4444f4:	add	w11, w8, #0x1
  4444f8:	madd	x9, x8, x21, x10
  4444fc:	str	wzr, [x9, #4]
  444500:	str	w11, [x19, #40]
  444504:	cbz	x10, 444524 <feof@plt+0x41b54>
  444508:	madd	x8, x8, x21, x10
  44450c:	str	w22, [x9]
  444510:	str	xzr, [x8, #16]!
  444514:	stur	x0, [x8, #-8]
  444518:	str	x9, [x20]
  44451c:	mov	x20, x8
  444520:	b	44449c <feof@plt+0x41acc>
  444524:	mov	x0, xzr
  444528:	str	xzr, [x20]
  44452c:	b	444574 <feof@plt+0x41ba4>
  444530:	ldr	x0, [x29, #24]
  444534:	cbz	x0, 444574 <feof@plt+0x41ba4>
  444538:	ldr	x8, [x0, #16]
  44453c:	cbnz	x8, 444574 <feof@plt+0x41ba4>
  444540:	ldr	x8, [x0, #8]
  444544:	ldr	w9, [x8]
  444548:	cmp	w9, #0x27
  44454c:	b.ne	444574 <feof@plt+0x41ba4>  // b.any
  444550:	ldr	x8, [x8, #8]
  444554:	ldr	w9, [x8, #28]
  444558:	cmp	w9, #0x9
  44455c:	b.ne	444574 <feof@plt+0x41ba4>  // b.any
  444560:	ldr	w8, [x8, #8]
  444564:	ldr	w9, [x19, #72]
  444568:	sub	w8, w9, w8
  44456c:	str	w8, [x19, #72]
  444570:	str	xzr, [x0, #8]
  444574:	ldp	x20, x19, [sp, #48]
  444578:	ldp	x22, x21, [sp, #32]
  44457c:	ldr	x23, [sp, #16]
  444580:	ldp	x29, x30, [sp], #64
  444584:	ret
  444588:	stp	x29, x30, [sp, #-64]!
  44458c:	stp	x22, x21, [sp, #32]
  444590:	stp	x20, x19, [sp, #48]
  444594:	ldr	x9, [x0, #24]
  444598:	mov	x19, x0
  44459c:	str	x23, [sp, #16]
  4445a0:	mov	x29, sp
  4445a4:	ldrb	w8, [x9]
  4445a8:	cmp	w8, #0x45
  4445ac:	b.ne	4445fc <feof@plt+0x41c2c>  // b.any
  4445b0:	ldp	w8, w10, [x19, #40]
  4445b4:	add	x9, x9, #0x1
  4445b8:	sxtw	x8, w8
  4445bc:	str	x9, [x19, #24]
  4445c0:	cmp	w8, w10
  4445c4:	b.ge	444680 <feof@plt+0x41cb0>  // b.tcont
  4445c8:	ldr	x9, [x19, #32]
  4445cc:	mov	w10, #0x18                  	// #24
  4445d0:	add	w11, w8, #0x1
  4445d4:	madd	x0, x8, x10, x9
  4445d8:	str	wzr, [x0, #4]
  4445dc:	str	w11, [x19, #40]
  4445e0:	cbz	x9, 444680 <feof@plt+0x41cb0>
  4445e4:	mov	w11, #0x18                  	// #24
  4445e8:	mov	w10, #0x2f                  	// #47
  4445ec:	madd	x8, x8, x11, x9
  4445f0:	str	w10, [x0]
  4445f4:	stp	xzr, xzr, [x8, #8]
  4445f8:	b	444690 <feof@plt+0x41cc0>
  4445fc:	ldr	x20, [x19, #64]
  444600:	add	x21, x29, #0x18
  444604:	mov	w22, #0x18                  	// #24
  444608:	mov	w23, #0x2f                  	// #47
  44460c:	str	xzr, [x29, #24]
  444610:	mov	x0, x19
  444614:	bl	443650 <feof@plt+0x40c80>
  444618:	cbz	x0, 444690 <feof@plt+0x41cc0>
  44461c:	ldp	w8, w9, [x19, #40]
  444620:	sxtw	x8, w8
  444624:	cmp	w8, w9
  444628:	b.ge	444688 <feof@plt+0x41cb8>  // b.tcont
  44462c:	ldr	x10, [x19, #32]
  444630:	add	w11, w8, #0x1
  444634:	madd	x9, x8, x22, x10
  444638:	str	wzr, [x9, #4]
  44463c:	str	w11, [x19, #40]
  444640:	cbz	x10, 444688 <feof@plt+0x41cb8>
  444644:	madd	x10, x8, x22, x10
  444648:	str	w23, [x9]
  44464c:	str	xzr, [x10, #16]!
  444650:	stur	x0, [x10, #-8]
  444654:	str	x9, [x21]
  444658:	ldr	x8, [x19, #24]
  44465c:	mov	x21, x10
  444660:	ldrb	w9, [x8]
  444664:	cmp	w9, #0x45
  444668:	b.ne	444610 <feof@plt+0x41c40>  // b.any
  44466c:	add	x8, x8, #0x1
  444670:	str	x8, [x19, #24]
  444674:	str	x20, [x19, #64]
  444678:	ldr	x0, [x29, #24]
  44467c:	b	444690 <feof@plt+0x41cc0>
  444680:	mov	x0, xzr
  444684:	b	444690 <feof@plt+0x41cc0>
  444688:	mov	x0, xzr
  44468c:	str	xzr, [x21]
  444690:	ldp	x20, x19, [sp, #48]
  444694:	ldp	x22, x21, [sp, #32]
  444698:	ldr	x23, [sp, #16]
  44469c:	ldp	x29, x30, [sp], #64
  4446a0:	ret
  4446a4:	sub	sp, sp, #0x70
  4446a8:	stp	x29, x30, [sp, #16]
  4446ac:	stp	x28, x27, [sp, #32]
  4446b0:	stp	x26, x25, [sp, #48]
  4446b4:	stp	x24, x23, [sp, #64]
  4446b8:	stp	x22, x21, [sp, #80]
  4446bc:	stp	x20, x19, [sp, #96]
  4446c0:	mov	x23, x0
  4446c4:	ldr	x8, [x23, #24]!
  4446c8:	mov	x19, x0
  4446cc:	add	x29, sp, #0x10
  4446d0:	ldrb	w9, [x8]
  4446d4:	sub	w10, w9, #0x4c
  4446d8:	cmp	w10, #0x27
  4446dc:	b.hi	44471c <feof@plt+0x41d4c>  // b.pmore
  4446e0:	adrp	x11, 460000 <_obstack_memory_used@@Base+0xfa68>
  4446e4:	add	x11, x11, #0x1ed
  4446e8:	adr	x12, 4446f8 <feof@plt+0x41d28>
  4446ec:	ldrb	w13, [x11, x10]
  4446f0:	add	x12, x12, x13, lsl #2
  4446f4:	br	x12
  4446f8:	mov	x0, x19
  4446fc:	ldp	x20, x19, [sp, #96]
  444700:	ldp	x22, x21, [sp, #80]
  444704:	ldp	x24, x23, [sp, #64]
  444708:	ldp	x26, x25, [sp, #48]
  44470c:	ldp	x28, x27, [sp, #32]
  444710:	ldp	x29, x30, [sp, #16]
  444714:	add	sp, sp, #0x70
  444718:	b	443708 <feof@plt+0x40d38>
  44471c:	sub	w10, w9, #0x30
  444720:	cmp	w10, #0xa
  444724:	b.cs	44492c <feof@plt+0x41f5c>  // b.hs, b.nlast
  444728:	mov	x0, x19
  44472c:	bl	44389c <feof@plt+0x40ecc>
  444730:	mov	x21, x0
  444734:	cbz	x0, 4455c0 <feof@plt+0x42bf0>
  444738:	ldr	x8, [x23]
  44473c:	ldrb	w9, [x8]
  444740:	cmp	w9, #0x49
  444744:	b.ne	4455c0 <feof@plt+0x42bf0>  // b.any
  444748:	add	x8, x8, #0x1
  44474c:	mov	x0, x19
  444750:	str	x8, [x19, #24]
  444754:	bl	444588 <feof@plt+0x41bb8>
  444758:	cbz	x0, 4455bc <feof@plt+0x42bec>
  44475c:	ldp	w8, w9, [x19, #40]
  444760:	sxtw	x8, w8
  444764:	cmp	w8, w9
  444768:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  44476c:	ldr	x9, [x19, #32]
  444770:	mov	w10, #0x18                  	// #24
  444774:	add	w11, w8, #0x1
  444778:	madd	x10, x8, x10, x9
  44477c:	str	wzr, [x10, #4]
  444780:	str	w11, [x19, #40]
  444784:	cbz	x9, 4455bc <feof@plt+0x42bec>
  444788:	mov	w12, #0x18                  	// #24
  44478c:	mov	w11, #0x4                   	// #4
  444790:	madd	x8, x8, x12, x9
  444794:	str	w11, [x10]
  444798:	stp	x21, x0, [x8, #8]
  44479c:	mov	x21, x10
  4447a0:	b	4455c0 <feof@plt+0x42bf0>
  4447a4:	add	x9, x8, #0x1
  4447a8:	str	x9, [x23]
  4447ac:	ldrb	w9, [x8, #1]
  4447b0:	cmp	w9, #0x6e
  4447b4:	b.eq	4455bc <feof@plt+0x42bec>  // b.none
  4447b8:	cmp	w9, #0x5f
  4447bc:	b.ne	44495c <feof@plt+0x41f8c>  // b.any
  4447c0:	mov	w10, wzr
  4447c4:	add	x8, x8, #0x2
  4447c8:	str	x8, [x23]
  4447cc:	ldp	w8, w9, [x19, #40]
  4447d0:	sxtw	x8, w8
  4447d4:	cmp	w8, w9
  4447d8:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  4447dc:	ldr	x9, [x19, #32]
  4447e0:	mov	w11, #0x18                  	// #24
  4447e4:	add	w12, w8, #0x1
  4447e8:	madd	x21, x8, x11, x9
  4447ec:	str	wzr, [x21, #4]
  4447f0:	str	w12, [x19, #40]
  4447f4:	cbz	x9, 4455bc <feof@plt+0x42bec>
  4447f8:	mov	w12, #0x18                  	// #24
  4447fc:	mov	w11, #0x5                   	// #5
  444800:	mov	w10, w10
  444804:	madd	x8, x8, x12, x9
  444808:	str	w11, [x21]
  44480c:	str	x10, [x8, #8]
  444810:	b	4455c0 <feof@plt+0x42bf0>
  444814:	ldrb	w9, [x8, #1]
  444818:	cmp	w9, #0x70
  44481c:	b.ne	444a64 <feof@plt+0x42094>  // b.any
  444820:	add	x10, x8, #0x2
  444824:	str	x10, [x23]
  444828:	ldrb	w9, [x8, #2]
  44482c:	cmp	w9, #0x6e
  444830:	b.eq	4455bc <feof@plt+0x42bec>  // b.none
  444834:	cmp	w9, #0x5f
  444838:	b.eq	444c1c <feof@plt+0x4224c>  // b.none
  44483c:	cmp	w9, #0x54
  444840:	b.ne	444c74 <feof@plt+0x422a4>  // b.any
  444844:	add	x8, x8, #0x3
  444848:	mov	x9, xzr
  44484c:	str	x8, [x23]
  444850:	b	444c30 <feof@plt+0x42260>
  444854:	ldrb	w9, [x8, #1]
  444858:	cmp	w9, #0x70
  44485c:	b.eq	4449dc <feof@plt+0x4200c>  // b.none
  444860:	cmp	w9, #0x72
  444864:	b.ne	444a64 <feof@plt+0x42094>  // b.any
  444868:	add	x8, x8, #0x2
  44486c:	mov	x0, x19
  444870:	str	x8, [x19, #24]
  444874:	bl	440c5c <feof@plt+0x3e28c>
  444878:	mov	x20, x0
  44487c:	mov	x0, x19
  444880:	bl	44389c <feof@plt+0x40ecc>
  444884:	ldr	x8, [x19, #24]
  444888:	mov	x22, x0
  44488c:	ldrb	w9, [x8]
  444890:	cmp	w9, #0x49
  444894:	b.ne	444bb0 <feof@plt+0x421e0>  // b.any
  444898:	add	x8, x8, #0x1
  44489c:	mov	x0, x19
  4448a0:	str	x8, [x19, #24]
  4448a4:	bl	444588 <feof@plt+0x41bb8>
  4448a8:	mov	x21, xzr
  4448ac:	cbz	x22, 4455c0 <feof@plt+0x42bf0>
  4448b0:	cbz	x0, 4455c0 <feof@plt+0x42bf0>
  4448b4:	ldp	w9, w8, [x19, #40]
  4448b8:	sxtw	x9, w9
  4448bc:	cmp	w9, w8
  4448c0:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  4448c4:	ldr	x10, [x19, #32]
  4448c8:	mov	w8, #0x18                  	// #24
  4448cc:	add	w11, w9, #0x1
  4448d0:	madd	x8, x9, x8, x10
  4448d4:	str	wzr, [x8, #4]
  4448d8:	str	w11, [x19, #40]
  4448dc:	cbz	x10, 4455bc <feof@plt+0x42bec>
  4448e0:	mov	w12, #0x18                  	// #24
  4448e4:	mov	w11, #0x4                   	// #4
  4448e8:	madd	x9, x9, x12, x10
  4448ec:	str	w11, [x8]
  4448f0:	stp	x22, x0, [x9, #8]
  4448f4:	cbz	x20, 4455bc <feof@plt+0x42bec>
  4448f8:	ldp	w9, w10, [x19, #40]
  4448fc:	sxtw	x9, w9
  444900:	cmp	w9, w10
  444904:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444908:	ldr	x10, [x19, #32]
  44490c:	mov	w11, #0x18                  	// #24
  444910:	add	w12, w9, #0x1
  444914:	madd	x21, x9, x11, x10
  444918:	str	wzr, [x21, #4]
  44491c:	str	w12, [x19, #40]
  444920:	cbz	x10, 4455bc <feof@plt+0x42bec>
  444924:	mov	w11, #0x1                   	// #1
  444928:	b	44544c <feof@plt+0x42a7c>
  44492c:	cmp	w9, #0x69
  444930:	b.eq	444a34 <feof@plt+0x42064>  // b.none
  444934:	cmp	w9, #0x74
  444938:	b.eq	444a34 <feof@plt+0x42064>  // b.none
  44493c:	cmp	w9, #0x6f
  444940:	b.ne	444a64 <feof@plt+0x42094>  // b.any
  444944:	ldrb	w9, [x8, #1]
  444948:	cmp	w9, #0x6e
  44494c:	b.ne	444a64 <feof@plt+0x42094>  // b.any
  444950:	add	x8, x8, #0x2
  444954:	str	x8, [x23]
  444958:	b	444728 <feof@plt+0x41d58>
  44495c:	sub	w10, w9, #0x30
  444960:	cmp	w10, #0x9
  444964:	b.hi	444c00 <feof@plt+0x42230>  // b.pmore
  444968:	mov	w11, #0x2f                  	// #47
  44496c:	mov	w12, #0x6667                	// #26215
  444970:	mov	w10, wzr
  444974:	movk	w11, #0x8000, lsl #16
  444978:	add	x8, x8, #0x2
  44497c:	movk	w12, #0x6666, lsl #16
  444980:	mov	w13, #0xa                   	// #10
  444984:	and	w14, w9, #0xff
  444988:	sub	w9, w11, w14
  44498c:	smull	x9, w9, w12
  444990:	lsr	x15, x9, #63
  444994:	asr	x9, x9, #34
  444998:	add	w9, w9, w15
  44499c:	cmp	w10, w9
  4449a0:	b.gt	4455bc <feof@plt+0x42bec>
  4449a4:	str	x8, [x23]
  4449a8:	ldrb	w9, [x8], #1
  4449ac:	madd	w10, w10, w13, w14
  4449b0:	sub	w10, w10, #0x30
  4449b4:	sub	w14, w9, #0x30
  4449b8:	cmp	w14, #0xa
  4449bc:	b.cc	444984 <feof@plt+0x41fb4>  // b.lo, b.ul, b.last
  4449c0:	cmn	w10, #0x1
  4449c4:	b.lt	4455bc <feof@plt+0x42bec>  // b.tstop
  4449c8:	add	w10, w10, #0x1
  4449cc:	sub	x8, x8, #0x2
  4449d0:	cmp	w9, #0x5f
  4449d4:	b.eq	444c0c <feof@plt+0x4223c>  // b.none
  4449d8:	b	4455bc <feof@plt+0x42bec>
  4449dc:	add	x8, x8, #0x2
  4449e0:	mov	x0, x19
  4449e4:	str	x8, [x19, #24]
  4449e8:	bl	4446a4 <feof@plt+0x41cd4>
  4449ec:	cbz	x0, 4455bc <feof@plt+0x42bec>
  4449f0:	ldp	w8, w9, [x19, #40]
  4449f4:	sxtw	x8, w8
  4449f8:	cmp	w8, w9
  4449fc:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444a00:	ldr	x9, [x19, #32]
  444a04:	mov	w10, #0x18                  	// #24
  444a08:	add	w11, w8, #0x1
  444a0c:	madd	x21, x8, x10, x9
  444a10:	str	wzr, [x21, #4]
  444a14:	str	w11, [x19, #40]
  444a18:	cbz	x9, 4455bc <feof@plt+0x42bec>
  444a1c:	mov	w11, #0x18                  	// #24
  444a20:	mov	w10, #0x4b                  	// #75
  444a24:	madd	x8, x8, x11, x9
  444a28:	str	w10, [x21]
  444a2c:	stp	x0, xzr, [x8, #8]
  444a30:	b	4455c0 <feof@plt+0x42bf0>
  444a34:	ldrb	w10, [x8, #1]
  444a38:	cmp	w10, #0x6c
  444a3c:	b.ne	444a64 <feof@plt+0x42094>  // b.any
  444a40:	add	x8, x8, #0x2
  444a44:	cmp	w9, #0x74
  444a48:	str	x8, [x23]
  444a4c:	b.ne	444d04 <feof@plt+0x42334>  // b.any
  444a50:	mov	x0, x19
  444a54:	bl	440c5c <feof@plt+0x3e28c>
  444a58:	ldr	x8, [x19, #24]
  444a5c:	mov	x20, x0
  444a60:	b	444d08 <feof@plt+0x42338>
  444a64:	mov	x0, x19
  444a68:	bl	444220 <feof@plt+0x41850>
  444a6c:	cbz	x0, 4455bc <feof@plt+0x42bec>
  444a70:	ldr	w8, [x0]
  444a74:	mov	x20, x0
  444a78:	cmp	w8, #0x34
  444a7c:	b.eq	444acc <feof@plt+0x420fc>  // b.none
  444a80:	cmp	w8, #0x33
  444a84:	b.eq	444b40 <feof@plt+0x42170>  // b.none
  444a88:	cmp	w8, #0x32
  444a8c:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  444a90:	ldr	x8, [x20, #8]
  444a94:	ldr	w10, [x19, #72]
  444a98:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  444a9c:	add	x1, x1, #0x179
  444aa0:	ldr	w9, [x8, #16]
  444aa4:	ldr	x21, [x8]
  444aa8:	add	w8, w9, w10
  444aac:	sub	w8, w8, #0x2
  444ab0:	mov	x0, x21
  444ab4:	str	w8, [x19, #72]
  444ab8:	bl	402820 <strcmp@plt>
  444abc:	cbz	w0, 444cf4 <feof@plt+0x42324>
  444ac0:	ldr	x8, [x20, #8]
  444ac4:	add	x8, x8, #0x14
  444ac8:	b	444b48 <feof@plt+0x42178>
  444acc:	ldr	x9, [x23]
  444ad0:	ldrb	w8, [x9]
  444ad4:	cmp	w8, #0x5f
  444ad8:	b.ne	444dd4 <feof@plt+0x42404>  // b.any
  444adc:	add	x8, x9, #0x1
  444ae0:	str	x8, [x23]
  444ae4:	str	xzr, [sp, #8]
  444ae8:	ldrb	w8, [x9, #1]
  444aec:	cmp	w8, #0x45
  444af0:	b.ne	444eb4 <feof@plt+0x424e4>  // b.any
  444af4:	ldp	w8, w10, [x19, #40]
  444af8:	add	x9, x9, #0x2
  444afc:	sxtw	x8, w8
  444b00:	str	x9, [x19, #24]
  444b04:	cmp	w8, w10
  444b08:	b.ge	444ff8 <feof@plt+0x42628>  // b.tcont
  444b0c:	ldr	x9, [x19, #32]
  444b10:	mov	w10, #0x18                  	// #24
  444b14:	add	w11, w8, #0x1
  444b18:	madd	x0, x8, x10, x9
  444b1c:	str	wzr, [x0, #4]
  444b20:	str	w11, [x19, #40]
  444b24:	cbz	x9, 444ff8 <feof@plt+0x42628>
  444b28:	mov	w11, #0x18                  	// #24
  444b2c:	mov	w10, #0x2e                  	// #46
  444b30:	madd	x8, x8, x11, x9
  444b34:	str	w10, [x0]
  444b38:	stp	xzr, xzr, [x8, #8]
  444b3c:	b	445010 <feof@plt+0x42640>
  444b40:	mov	x21, xzr
  444b44:	add	x8, x20, #0x8
  444b48:	ldr	w8, [x8]
  444b4c:	cmp	w8, #0x3
  444b50:	b.hi	4455bc <feof@plt+0x42bec>  // b.pmore
  444b54:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  444b58:	add	x9, x9, #0x215
  444b5c:	adr	x10, 444b6c <feof@plt+0x4219c>
  444b60:	ldrb	w11, [x9, x8]
  444b64:	add	x10, x10, x11, lsl #2
  444b68:	br	x10
  444b6c:	ldp	w8, w9, [x19, #40]
  444b70:	sxtw	x8, w8
  444b74:	cmp	w8, w9
  444b78:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444b7c:	ldr	x9, [x19, #32]
  444b80:	mov	w10, #0x18                  	// #24
  444b84:	add	w11, w8, #0x1
  444b88:	madd	x21, x8, x10, x9
  444b8c:	str	wzr, [x21, #4]
  444b90:	str	w11, [x19, #40]
  444b94:	cbz	x9, 4455bc <feof@plt+0x42bec>
  444b98:	mov	w11, #0x18                  	// #24
  444b9c:	mov	w10, #0x36                  	// #54
  444ba0:	madd	x8, x8, x11, x9
  444ba4:	str	w10, [x21]
  444ba8:	stp	x20, xzr, [x8, #8]
  444bac:	b	4455c0 <feof@plt+0x42bf0>
  444bb0:	mov	x21, xzr
  444bb4:	cbz	x20, 4455c0 <feof@plt+0x42bf0>
  444bb8:	cbz	x22, 4455c0 <feof@plt+0x42bf0>
  444bbc:	ldp	w8, w9, [x19, #40]
  444bc0:	sxtw	x8, w8
  444bc4:	cmp	w8, w9
  444bc8:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444bcc:	ldr	x9, [x19, #32]
  444bd0:	mov	w10, #0x18                  	// #24
  444bd4:	add	w11, w8, #0x1
  444bd8:	madd	x21, x8, x10, x9
  444bdc:	str	wzr, [x21, #4]
  444be0:	str	w11, [x19, #40]
  444be4:	cbz	x9, 4455bc <feof@plt+0x42bec>
  444be8:	mov	w11, #0x18                  	// #24
  444bec:	mov	w10, #0x1                   	// #1
  444bf0:	madd	x8, x8, x11, x9
  444bf4:	str	w10, [x21]
  444bf8:	stp	x20, x22, [x8, #8]
  444bfc:	b	4455c0 <feof@plt+0x42bf0>
  444c00:	mov	w10, #0x1                   	// #1
  444c04:	cmp	w9, #0x5f
  444c08:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  444c0c:	add	x8, x8, #0x2
  444c10:	str	x8, [x23]
  444c14:	tbz	w10, #31, 4447cc <feof@plt+0x41dfc>
  444c18:	b	4455bc <feof@plt+0x42bec>
  444c1c:	mov	w11, wzr
  444c20:	add	x8, x8, #0x3
  444c24:	str	x8, [x23]
  444c28:	add	w8, w11, #0x1
  444c2c:	sxtw	x9, w8
  444c30:	ldp	w8, w10, [x19, #40]
  444c34:	sxtw	x8, w8
  444c38:	cmp	w8, w10
  444c3c:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444c40:	ldr	x10, [x19, #32]
  444c44:	mov	w11, #0x18                  	// #24
  444c48:	add	w12, w8, #0x1
  444c4c:	madd	x21, x8, x11, x10
  444c50:	str	wzr, [x21, #4]
  444c54:	str	w12, [x19, #40]
  444c58:	cbz	x10, 4455bc <feof@plt+0x42bec>
  444c5c:	mov	w12, #0x18                  	// #24
  444c60:	mov	w11, #0x6                   	// #6
  444c64:	madd	x8, x8, x12, x10
  444c68:	str	w11, [x21]
  444c6c:	str	x9, [x8, #8]
  444c70:	b	4455c0 <feof@plt+0x42bf0>
  444c74:	sub	w11, w9, #0x30
  444c78:	cmp	w11, #0x9
  444c7c:	b.hi	444d6c <feof@plt+0x4239c>  // b.pmore
  444c80:	mov	w11, #0x2f                  	// #47
  444c84:	mov	w12, #0x6667                	// #26215
  444c88:	mov	w10, wzr
  444c8c:	movk	w11, #0x8000, lsl #16
  444c90:	add	x8, x8, #0x3
  444c94:	movk	w12, #0x6666, lsl #16
  444c98:	mov	w13, #0xa                   	// #10
  444c9c:	and	w14, w9, #0xff
  444ca0:	sub	w9, w11, w14
  444ca4:	smull	x9, w9, w12
  444ca8:	lsr	x15, x9, #63
  444cac:	asr	x9, x9, #34
  444cb0:	add	w9, w9, w15
  444cb4:	cmp	w10, w9
  444cb8:	b.gt	4455bc <feof@plt+0x42bec>
  444cbc:	str	x8, [x23]
  444cc0:	ldrb	w9, [x8], #1
  444cc4:	madd	w10, w10, w13, w14
  444cc8:	sub	w10, w10, #0x30
  444ccc:	sub	w14, w9, #0x30
  444cd0:	cmp	w14, #0xa
  444cd4:	b.cc	444c9c <feof@plt+0x422cc>  // b.lo, b.ul, b.last
  444cd8:	cmn	w10, #0x1
  444cdc:	b.lt	4455bc <feof@plt+0x42bec>  // b.tstop
  444ce0:	add	w11, w10, #0x1
  444ce4:	sub	x10, x8, #0x1
  444ce8:	cmp	w9, #0x5f
  444cec:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  444cf0:	b	444d78 <feof@plt+0x423a8>
  444cf4:	mov	x0, x19
  444cf8:	bl	440c5c <feof@plt+0x3e28c>
  444cfc:	cbnz	x0, 445014 <feof@plt+0x42644>
  444d00:	b	4455bc <feof@plt+0x42bec>
  444d04:	mov	x20, xzr
  444d08:	mov	x10, x8
  444d0c:	ldrb	w9, [x10, #1]!
  444d10:	cbz	w9, 4455bc <feof@plt+0x42bec>
  444d14:	str	xzr, [sp, #8]
  444d18:	ldrb	w8, [x8]
  444d1c:	cmp	w8, #0x45
  444d20:	b.ne	444f3c <feof@plt+0x4256c>  // b.any
  444d24:	ldp	w9, w8, [x19, #40]
  444d28:	str	x10, [x19, #24]
  444d2c:	sxtw	x9, w9
  444d30:	cmp	w9, w8
  444d34:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444d38:	ldr	x10, [x19, #32]
  444d3c:	mov	w8, #0x18                  	// #24
  444d40:	add	w11, w9, #0x1
  444d44:	madd	x8, x9, x8, x10
  444d48:	str	wzr, [x8, #4]
  444d4c:	str	w11, [x19, #40]
  444d50:	cbz	x10, 4455bc <feof@plt+0x42bec>
  444d54:	mov	w12, #0x18                  	// #24
  444d58:	mov	w11, #0x2e                  	// #46
  444d5c:	madd	x9, x9, x12, x10
  444d60:	str	w11, [x8]
  444d64:	stp	xzr, xzr, [x9, #8]
  444d68:	b	444fc4 <feof@plt+0x425f4>
  444d6c:	mov	w11, #0x1                   	// #1
  444d70:	cmp	w9, #0x5f
  444d74:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  444d78:	mvn	w9, w11
  444d7c:	add	x8, x10, #0x1
  444d80:	tst	w9, #0x7fffffff
  444d84:	str	x8, [x23]
  444d88:	b.eq	4455bc <feof@plt+0x42bec>  // b.none
  444d8c:	b	444c28 <feof@plt+0x42258>
  444d90:	cbz	x21, 444dd4 <feof@plt+0x42404>
  444d94:	ldrb	w8, [x21]
  444d98:	cmp	w8, #0x70
  444d9c:	b.eq	444da8 <feof@plt+0x423d8>  // b.none
  444da0:	cmp	w8, #0x6d
  444da4:	b.ne	445000 <feof@plt+0x42630>  // b.any
  444da8:	ldrb	w9, [x21, #1]
  444dac:	cmp	w9, w8
  444db0:	b.ne	445000 <feof@plt+0x42630>  // b.any
  444db4:	ldr	x8, [x23]
  444db8:	ldrb	w9, [x8]
  444dbc:	cmp	w9, #0x5f
  444dc0:	b.ne	4453a0 <feof@plt+0x429d0>  // b.any
  444dc4:	mov	w22, wzr
  444dc8:	add	x8, x8, #0x1
  444dcc:	str	x8, [x23]
  444dd0:	b	4453a4 <feof@plt+0x429d4>
  444dd4:	mov	w22, wzr
  444dd8:	mov	x0, x19
  444ddc:	bl	4446a4 <feof@plt+0x41cd4>
  444de0:	cbz	w22, 445010 <feof@plt+0x42640>
  444de4:	cbz	x0, 4455bc <feof@plt+0x42bec>
  444de8:	ldp	w8, w9, [x19, #40]
  444dec:	sxtw	x8, w8
  444df0:	cmp	w8, w9
  444df4:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444df8:	ldr	x9, [x19, #32]
  444dfc:	mov	w10, #0x18                  	// #24
  444e00:	add	w11, w8, #0x1
  444e04:	madd	x10, x8, x10, x9
  444e08:	str	wzr, [x10, #4]
  444e0c:	str	w11, [x19, #40]
  444e10:	cbz	x9, 4455bc <feof@plt+0x42bec>
  444e14:	mov	w12, #0x18                  	// #24
  444e18:	mov	w11, #0x39                  	// #57
  444e1c:	madd	x8, x8, x12, x9
  444e20:	str	w11, [x10]
  444e24:	stp	x0, x0, [x8, #8]
  444e28:	mov	x0, x10
  444e2c:	b	445014 <feof@plt+0x42644>
  444e30:	cbz	x21, 4455c0 <feof@plt+0x42bf0>
  444e34:	ldr	x8, [x20, #8]
  444e38:	ldr	x8, [x8]
  444e3c:	ldrb	w9, [x8, #1]
  444e40:	cmp	w9, #0x63
  444e44:	b.ne	445058 <feof@plt+0x42688>  // b.any
  444e48:	ldrb	w8, [x8]
  444e4c:	sub	w8, w8, #0x63
  444e50:	cmp	w8, #0x10
  444e54:	b.hi	445058 <feof@plt+0x42688>  // b.pmore
  444e58:	mov	w9, #0x1                   	// #1
  444e5c:	lsl	w8, w9, w8
  444e60:	mov	w9, #0x8003                	// #32771
  444e64:	movk	w9, #0x1, lsl #16
  444e68:	tst	w8, w9
  444e6c:	b.eq	445058 <feof@plt+0x42688>  // b.none
  444e70:	mov	x0, x19
  444e74:	bl	440c5c <feof@plt+0x3e28c>
  444e78:	b	44516c <feof@plt+0x4279c>
  444e7c:	cbz	x21, 4455c0 <feof@plt+0x42bf0>
  444e80:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  444e84:	add	x1, x1, #0x1e5
  444e88:	mov	x0, x21
  444e8c:	bl	402820 <strcmp@plt>
  444e90:	cbz	w0, 445078 <feof@plt+0x426a8>
  444e94:	ldrb	w8, [x21]
  444e98:	cmp	w8, #0x6e
  444e9c:	b.eq	44529c <feof@plt+0x428cc>  // b.none
  444ea0:	cmp	w8, #0x66
  444ea4:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  444ea8:	mov	x0, x19
  444eac:	bl	444220 <feof@plt+0x41850>
  444eb0:	b	445080 <feof@plt+0x426b0>
  444eb4:	add	x21, sp, #0x8
  444eb8:	mov	w22, #0x1                   	// #1
  444ebc:	mov	w24, #0x18                  	// #24
  444ec0:	mov	w25, #0x2e                  	// #46
  444ec4:	ldr	w26, [x19, #76]
  444ec8:	mov	x0, x19
  444ecc:	str	w22, [x19, #76]
  444ed0:	bl	4446a4 <feof@plt+0x41cd4>
  444ed4:	str	w26, [x19, #76]
  444ed8:	cbz	x0, 445010 <feof@plt+0x42640>
  444edc:	ldp	w8, w9, [x19, #40]
  444ee0:	sxtw	x8, w8
  444ee4:	cmp	w8, w9
  444ee8:	b.ge	445008 <feof@plt+0x42638>  // b.tcont
  444eec:	ldr	x10, [x19, #32]
  444ef0:	add	w11, w8, #0x1
  444ef4:	madd	x9, x8, x24, x10
  444ef8:	str	wzr, [x9, #4]
  444efc:	str	w11, [x19, #40]
  444f00:	cbz	x10, 445008 <feof@plt+0x42638>
  444f04:	madd	x10, x8, x24, x10
  444f08:	str	w25, [x9]
  444f0c:	str	xzr, [x10, #16]!
  444f10:	stur	x0, [x10, #-8]
  444f14:	str	x9, [x21]
  444f18:	ldr	x8, [x23]
  444f1c:	mov	x21, x10
  444f20:	ldrb	w9, [x8]
  444f24:	cmp	w9, #0x45
  444f28:	b.ne	444ec4 <feof@plt+0x424f4>  // b.any
  444f2c:	add	x8, x8, #0x1
  444f30:	str	x8, [x23]
  444f34:	ldr	x0, [sp, #8]
  444f38:	b	445010 <feof@plt+0x42640>
  444f3c:	add	x21, sp, #0x8
  444f40:	mov	w22, #0x1                   	// #1
  444f44:	mov	w24, #0x18                  	// #24
  444f48:	mov	w25, #0x2e                  	// #46
  444f4c:	ldr	w26, [x19, #76]
  444f50:	mov	x0, x19
  444f54:	str	w22, [x19, #76]
  444f58:	bl	4446a4 <feof@plt+0x41cd4>
  444f5c:	str	w26, [x19, #76]
  444f60:	cbz	x0, 4455bc <feof@plt+0x42bec>
  444f64:	ldp	w8, w9, [x19, #40]
  444f68:	sxtw	x8, w8
  444f6c:	cmp	w8, w9
  444f70:	b.ge	445070 <feof@plt+0x426a0>  // b.tcont
  444f74:	ldr	x10, [x19, #32]
  444f78:	add	w11, w8, #0x1
  444f7c:	madd	x9, x8, x24, x10
  444f80:	str	wzr, [x9, #4]
  444f84:	str	w11, [x19, #40]
  444f88:	cbz	x10, 445070 <feof@plt+0x426a0>
  444f8c:	madd	x10, x8, x24, x10
  444f90:	str	w25, [x9]
  444f94:	str	xzr, [x10, #16]!
  444f98:	stur	x0, [x10, #-8]
  444f9c:	str	x9, [x21]
  444fa0:	ldr	x8, [x23]
  444fa4:	mov	x21, x10
  444fa8:	ldrb	w9, [x8]
  444fac:	cmp	w9, #0x45
  444fb0:	b.ne	444f4c <feof@plt+0x4257c>  // b.any
  444fb4:	add	x8, x8, #0x1
  444fb8:	str	x8, [x23]
  444fbc:	ldr	x8, [sp, #8]
  444fc0:	cbz	x8, 4455bc <feof@plt+0x42bec>
  444fc4:	ldp	w9, w10, [x19, #40]
  444fc8:	sxtw	x9, w9
  444fcc:	cmp	w9, w10
  444fd0:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  444fd4:	ldr	x10, [x19, #32]
  444fd8:	mov	w11, #0x18                  	// #24
  444fdc:	add	w12, w9, #0x1
  444fe0:	madd	x21, x9, x11, x10
  444fe4:	str	wzr, [x21, #4]
  444fe8:	str	w12, [x19, #40]
  444fec:	cbz	x10, 4455bc <feof@plt+0x42bec>
  444ff0:	mov	w11, #0x31                  	// #49
  444ff4:	b	44544c <feof@plt+0x42a7c>
  444ff8:	mov	x0, xzr
  444ffc:	b	445010 <feof@plt+0x42640>
  445000:	mov	w22, wzr
  445004:	b	4453a4 <feof@plt+0x429d4>
  445008:	mov	x0, xzr
  44500c:	str	xzr, [x21]
  445010:	cbz	x0, 4455bc <feof@plt+0x42bec>
  445014:	ldp	w8, w9, [x19, #40]
  445018:	sxtw	x8, w8
  44501c:	cmp	w8, w9
  445020:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  445024:	ldr	x9, [x19, #32]
  445028:	mov	w10, #0x18                  	// #24
  44502c:	add	w11, w8, #0x1
  445030:	madd	x21, x8, x10, x9
  445034:	str	wzr, [x21, #4]
  445038:	str	w11, [x19, #40]
  44503c:	cbz	x9, 4455bc <feof@plt+0x42bec>
  445040:	mov	w11, #0x18                  	// #24
  445044:	mov	w10, #0x37                  	// #55
  445048:	madd	x8, x8, x11, x9
  44504c:	str	w10, [x21]
  445050:	stp	x20, x0, [x8, #8]
  445054:	b	4455c0 <feof@plt+0x42bf0>
  445058:	ldrb	w8, [x21]
  44505c:	mov	x0, x19
  445060:	cmp	w8, #0x66
  445064:	b.ne	445168 <feof@plt+0x42798>  // b.any
  445068:	bl	444220 <feof@plt+0x41850>
  44506c:	b	44516c <feof@plt+0x4279c>
  445070:	str	xzr, [x21]
  445074:	b	4455bc <feof@plt+0x42bec>
  445078:	mov	x0, x19
  44507c:	bl	4446a4 <feof@plt+0x41cd4>
  445080:	mov	x21, x0
  445084:	mov	x0, x19
  445088:	bl	4446a4 <feof@plt+0x41cd4>
  44508c:	mov	x22, x0
  445090:	mov	x0, x19
  445094:	bl	4446a4 <feof@plt+0x41cd4>
  445098:	cbz	x0, 4455bc <feof@plt+0x42bec>
  44509c:	cbz	x22, 4455bc <feof@plt+0x42bec>
  4450a0:	ldp	w9, w8, [x19, #40]
  4450a4:	sxtw	x9, w9
  4450a8:	cmp	w9, w8
  4450ac:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  4450b0:	ldr	x10, [x19, #32]
  4450b4:	mov	w8, #0x18                  	// #24
  4450b8:	add	w11, w9, #0x1
  4450bc:	madd	x8, x9, x8, x10
  4450c0:	str	wzr, [x8, #4]
  4450c4:	str	w11, [x19, #40]
  4450c8:	cbz	x10, 4455bc <feof@plt+0x42bec>
  4450cc:	mov	w12, #0x18                  	// #24
  4450d0:	mov	w11, #0x3c                  	// #60
  4450d4:	madd	x9, x9, x12, x10
  4450d8:	str	w11, [x8]
  4450dc:	stp	x22, x0, [x9, #8]
  4450e0:	cbz	x21, 4455c0 <feof@plt+0x42bf0>
  4450e4:	ldp	w10, w9, [x19, #40]
  4450e8:	sxtw	x10, w10
  4450ec:	cmp	w10, w9
  4450f0:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  4450f4:	ldr	x11, [x19, #32]
  4450f8:	mov	w9, #0x18                  	// #24
  4450fc:	add	w12, w10, #0x1
  445100:	madd	x9, x10, x9, x11
  445104:	str	wzr, [x9, #4]
  445108:	str	w12, [x19, #40]
  44510c:	cbz	x11, 4455bc <feof@plt+0x42bec>
  445110:	mov	w13, #0x18                  	// #24
  445114:	mov	w12, #0x3b                  	// #59
  445118:	madd	x10, x10, x13, x11
  44511c:	str	w12, [x9]
  445120:	stp	x21, x8, [x10, #8]
  445124:	ldp	w8, w10, [x19, #40]
  445128:	sxtw	x8, w8
  44512c:	cmp	w8, w10
  445130:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  445134:	ldr	x10, [x19, #32]
  445138:	mov	w11, #0x18                  	// #24
  44513c:	add	w12, w8, #0x1
  445140:	madd	x21, x8, x11, x10
  445144:	str	wzr, [x21, #4]
  445148:	str	w12, [x19, #40]
  44514c:	cbz	x10, 4455bc <feof@plt+0x42bec>
  445150:	mov	w12, #0x18                  	// #24
  445154:	mov	w11, #0x3a                  	// #58
  445158:	madd	x8, x8, x12, x10
  44515c:	str	w11, [x21]
  445160:	stp	x20, x9, [x8, #8]
  445164:	b	4455c0 <feof@plt+0x42bf0>
  445168:	bl	4446a4 <feof@plt+0x41cd4>
  44516c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  445170:	mov	x22, x0
  445174:	add	x1, x1, #0x150
  445178:	mov	x0, x21
  44517c:	bl	402820 <strcmp@plt>
  445180:	cbz	w0, 44523c <feof@plt+0x4286c>
  445184:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  445188:	add	x1, x1, #0x187
  44518c:	mov	x0, x21
  445190:	bl	402820 <strcmp@plt>
  445194:	cbz	w0, 4451bc <feof@plt+0x427ec>
  445198:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44519c:	add	x1, x1, #0x6b8
  4451a0:	mov	x0, x21
  4451a4:	bl	402820 <strcmp@plt>
  4451a8:	cbz	w0, 4451bc <feof@plt+0x427ec>
  4451ac:	mov	x0, x19
  4451b0:	bl	4446a4 <feof@plt+0x41cd4>
  4451b4:	mov	x23, x0
  4451b8:	b	4453d0 <feof@plt+0x42a00>
  4451bc:	mov	x0, x19
  4451c0:	bl	44389c <feof@plt+0x40ecc>
  4451c4:	ldr	x8, [x19, #24]
  4451c8:	mov	x23, x0
  4451cc:	ldrb	w9, [x8]
  4451d0:	cmp	w9, #0x49
  4451d4:	b.ne	4453d0 <feof@plt+0x42a00>  // b.any
  4451d8:	add	x8, x8, #0x1
  4451dc:	mov	x0, x19
  4451e0:	str	x8, [x19, #24]
  4451e4:	bl	444588 <feof@plt+0x41bb8>
  4451e8:	mov	x21, xzr
  4451ec:	cbz	x23, 4455c0 <feof@plt+0x42bf0>
  4451f0:	cbz	x0, 4455c0 <feof@plt+0x42bf0>
  4451f4:	ldp	w8, w9, [x19, #40]
  4451f8:	sxtw	x8, w8
  4451fc:	cmp	w8, w9
  445200:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  445204:	ldr	x9, [x19, #32]
  445208:	mov	w10, #0x18                  	// #24
  44520c:	add	w11, w8, #0x1
  445210:	madd	x10, x8, x10, x9
  445214:	str	wzr, [x10, #4]
  445218:	str	w11, [x19, #40]
  44521c:	cbz	x9, 4455bc <feof@plt+0x42bec>
  445220:	mov	w12, #0x18                  	// #24
  445224:	mov	w11, #0x4                   	// #4
  445228:	madd	x8, x8, x12, x9
  44522c:	str	w11, [x10]
  445230:	stp	x23, x0, [x8, #8]
  445234:	mov	x23, x10
  445238:	b	4453d0 <feof@plt+0x42a00>
  44523c:	str	xzr, [sp, #8]
  445240:	ldr	x9, [x23]
  445244:	ldrb	w8, [x9]
  445248:	cmp	w8, #0x45
  44524c:	b.ne	445310 <feof@plt+0x42940>  // b.any
  445250:	ldp	w8, w10, [x19, #40]
  445254:	add	x9, x9, #0x1
  445258:	sxtw	x8, w8
  44525c:	str	x9, [x19, #24]
  445260:	cmp	w8, w10
  445264:	b.ge	445398 <feof@plt+0x429c8>  // b.tcont
  445268:	ldr	x9, [x19, #32]
  44526c:	mov	w10, #0x18                  	// #24
  445270:	add	w11, w8, #0x1
  445274:	madd	x23, x8, x10, x9
  445278:	str	wzr, [x23, #4]
  44527c:	str	w11, [x19, #40]
  445280:	cbz	x9, 445398 <feof@plt+0x429c8>
  445284:	mov	w11, #0x18                  	// #24
  445288:	mov	w10, #0x2e                  	// #46
  44528c:	madd	x8, x8, x11, x9
  445290:	str	w10, [x23]
  445294:	stp	xzr, xzr, [x8, #8]
  445298:	b	4453d0 <feof@plt+0x42a00>
  44529c:	ldrb	w8, [x21, #1]
  4452a0:	cmp	w8, #0x77
  4452a4:	b.eq	4452b0 <feof@plt+0x428e0>  // b.none
  4452a8:	cmp	w8, #0x61
  4452ac:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  4452b0:	str	xzr, [sp, #8]
  4452b4:	ldr	x9, [x23]
  4452b8:	ldrb	w8, [x9]
  4452bc:	cmp	w8, #0x5f
  4452c0:	b.ne	445460 <feof@plt+0x42a90>  // b.any
  4452c4:	ldp	w8, w10, [x19, #40]
  4452c8:	add	x9, x9, #0x1
  4452cc:	sxtw	x8, w8
  4452d0:	str	x9, [x19, #24]
  4452d4:	cmp	w8, w10
  4452d8:	b.ge	4454e8 <feof@plt+0x42b18>  // b.tcont
  4452dc:	ldr	x9, [x19, #32]
  4452e0:	mov	w10, #0x18                  	// #24
  4452e4:	add	w11, w8, #0x1
  4452e8:	madd	x21, x8, x10, x9
  4452ec:	str	wzr, [x21, #4]
  4452f0:	str	w11, [x19, #40]
  4452f4:	cbz	x9, 4454e8 <feof@plt+0x42b18>
  4452f8:	mov	w11, #0x18                  	// #24
  4452fc:	mov	w10, #0x2e                  	// #46
  445300:	madd	x8, x8, x11, x9
  445304:	str	w10, [x21]
  445308:	stp	xzr, xzr, [x8, #8]
  44530c:	b	4454f8 <feof@plt+0x42b28>
  445310:	add	x21, sp, #0x8
  445314:	mov	w24, #0x1                   	// #1
  445318:	mov	w25, #0x18                  	// #24
  44531c:	mov	w26, #0x2e                  	// #46
  445320:	ldr	w27, [x19, #76]
  445324:	mov	x0, x19
  445328:	str	w24, [x19, #76]
  44532c:	bl	4446a4 <feof@plt+0x41cd4>
  445330:	str	w27, [x19, #76]
  445334:	cbz	x0, 445398 <feof@plt+0x429c8>
  445338:	ldp	w8, w9, [x19, #40]
  44533c:	sxtw	x8, w8
  445340:	cmp	w8, w9
  445344:	b.ge	4453c8 <feof@plt+0x429f8>  // b.tcont
  445348:	ldr	x10, [x19, #32]
  44534c:	add	w11, w8, #0x1
  445350:	madd	x9, x8, x25, x10
  445354:	str	wzr, [x9, #4]
  445358:	str	w11, [x19, #40]
  44535c:	cbz	x10, 4453c8 <feof@plt+0x429f8>
  445360:	madd	x10, x8, x25, x10
  445364:	str	w26, [x9]
  445368:	str	xzr, [x10, #16]!
  44536c:	stur	x0, [x10, #-8]
  445370:	str	x9, [x21]
  445374:	ldr	x8, [x23]
  445378:	mov	x21, x10
  44537c:	ldrb	w9, [x8]
  445380:	cmp	w9, #0x45
  445384:	b.ne	445320 <feof@plt+0x42950>  // b.any
  445388:	add	x8, x8, #0x1
  44538c:	str	x8, [x23]
  445390:	ldr	x23, [sp, #8]
  445394:	b	4453d0 <feof@plt+0x42a00>
  445398:	mov	x23, xzr
  44539c:	b	4453d0 <feof@plt+0x42a00>
  4453a0:	mov	w22, #0x1                   	// #1
  4453a4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  4453a8:	add	x1, x1, #0x202
  4453ac:	mov	x0, x21
  4453b0:	bl	402820 <strcmp@plt>
  4453b4:	cbnz	w0, 444dd8 <feof@plt+0x42408>
  4453b8:	mov	x0, x19
  4453bc:	bl	444588 <feof@plt+0x41bb8>
  4453c0:	cbnz	w22, 444de4 <feof@plt+0x42414>
  4453c4:	b	445010 <feof@plt+0x42640>
  4453c8:	mov	x23, xzr
  4453cc:	str	xzr, [x21]
  4453d0:	mov	x21, xzr
  4453d4:	cbz	x22, 4455c0 <feof@plt+0x42bf0>
  4453d8:	cbz	x23, 4455c0 <feof@plt+0x42bf0>
  4453dc:	ldp	w9, w8, [x19, #40]
  4453e0:	sxtw	x9, w9
  4453e4:	cmp	w9, w8
  4453e8:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  4453ec:	ldr	x10, [x19, #32]
  4453f0:	mov	w8, #0x18                  	// #24
  4453f4:	add	w11, w9, #0x1
  4453f8:	madd	x8, x9, x8, x10
  4453fc:	str	wzr, [x8, #4]
  445400:	str	w11, [x19, #40]
  445404:	cbz	x10, 4455bc <feof@plt+0x42bec>
  445408:	mov	w12, #0x18                  	// #24
  44540c:	mov	w11, #0x39                  	// #57
  445410:	madd	x9, x9, x12, x10
  445414:	str	w11, [x8]
  445418:	stp	x22, x23, [x9, #8]
  44541c:	ldp	w9, w10, [x19, #40]
  445420:	sxtw	x9, w9
  445424:	cmp	w9, w10
  445428:	b.ge	4455bc <feof@plt+0x42bec>  // b.tcont
  44542c:	ldr	x10, [x19, #32]
  445430:	mov	w11, #0x18                  	// #24
  445434:	add	w12, w9, #0x1
  445438:	madd	x21, x9, x11, x10
  44543c:	str	wzr, [x21, #4]
  445440:	str	w12, [x19, #40]
  445444:	cbz	x10, 4455bc <feof@plt+0x42bec>
  445448:	mov	w11, #0x38                  	// #56
  44544c:	mov	w12, #0x18                  	// #24
  445450:	madd	x9, x9, x12, x10
  445454:	str	w11, [x21]
  445458:	stp	x20, x8, [x9, #8]
  44545c:	b	4455c0 <feof@plt+0x42bf0>
  445460:	add	x22, sp, #0x8
  445464:	mov	w21, #0x1                   	// #1
  445468:	mov	w24, #0x18                  	// #24
  44546c:	mov	w25, #0x2e                  	// #46
  445470:	ldr	w26, [x19, #76]
  445474:	mov	x0, x19
  445478:	str	w21, [x19, #76]
  44547c:	bl	4446a4 <feof@plt+0x41cd4>
  445480:	str	w26, [x19, #76]
  445484:	cbz	x0, 4454e8 <feof@plt+0x42b18>
  445488:	ldp	w8, w9, [x19, #40]
  44548c:	sxtw	x8, w8
  445490:	cmp	w8, w9
  445494:	b.ge	4454f0 <feof@plt+0x42b20>  // b.tcont
  445498:	ldr	x10, [x19, #32]
  44549c:	add	w11, w8, #0x1
  4454a0:	madd	x9, x8, x24, x10
  4454a4:	str	wzr, [x9, #4]
  4454a8:	str	w11, [x19, #40]
  4454ac:	cbz	x10, 4454f0 <feof@plt+0x42b20>
  4454b0:	madd	x10, x8, x24, x10
  4454b4:	str	w25, [x9]
  4454b8:	str	xzr, [x10, #16]!
  4454bc:	stur	x0, [x10, #-8]
  4454c0:	str	x9, [x22]
  4454c4:	ldr	x8, [x23]
  4454c8:	mov	x22, x10
  4454cc:	ldrb	w9, [x8]
  4454d0:	cmp	w9, #0x5f
  4454d4:	b.ne	445470 <feof@plt+0x42aa0>  // b.any
  4454d8:	add	x8, x8, #0x1
  4454dc:	str	x8, [x23]
  4454e0:	ldr	x21, [sp, #8]
  4454e4:	b	4454f8 <feof@plt+0x42b28>
  4454e8:	mov	x21, xzr
  4454ec:	b	4454f8 <feof@plt+0x42b28>
  4454f0:	mov	x21, xzr
  4454f4:	str	xzr, [x22]
  4454f8:	mov	x0, x19
  4454fc:	bl	440c5c <feof@plt+0x3e28c>
  445500:	ldr	x8, [x19, #24]
  445504:	mov	x22, x0
  445508:	ldrb	w9, [x8]
  44550c:	cmp	w9, #0x70
  445510:	b.eq	445534 <feof@plt+0x42b64>  // b.none
  445514:	cmp	w9, #0x69
  445518:	b.eq	4455a4 <feof@plt+0x42bd4>  // b.none
  44551c:	cmp	w9, #0x45
  445520:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  445524:	add	x8, x8, #0x1
  445528:	mov	x0, xzr
  44552c:	str	x8, [x23]
  445530:	b	44509c <feof@plt+0x426cc>
  445534:	ldrb	w9, [x8, #1]
  445538:	cmp	w9, #0x69
  44553c:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  445540:	add	x9, x8, #0x2
  445544:	str	x9, [x23]
  445548:	str	xzr, [sp, #8]
  44554c:	ldrb	w9, [x8, #2]
  445550:	cmp	w9, #0x45
  445554:	b.ne	4455e4 <feof@plt+0x42c14>  // b.any
  445558:	ldp	w9, w10, [x19, #40]
  44555c:	add	x8, x8, #0x3
  445560:	sxtw	x9, w9
  445564:	str	x8, [x19, #24]
  445568:	cmp	w9, w10
  44556c:	b.ge	44566c <feof@plt+0x42c9c>  // b.tcont
  445570:	ldr	x8, [x19, #32]
  445574:	mov	w10, #0x18                  	// #24
  445578:	add	w11, w9, #0x1
  44557c:	madd	x0, x9, x10, x8
  445580:	str	wzr, [x0, #4]
  445584:	str	w11, [x19, #40]
  445588:	cbz	x8, 44566c <feof@plt+0x42c9c>
  44558c:	mov	w11, #0x18                  	// #24
  445590:	mov	w10, #0x2e                  	// #46
  445594:	madd	x8, x9, x11, x8
  445598:	str	w10, [x0]
  44559c:	stp	xzr, xzr, [x8, #8]
  4455a0:	b	44509c <feof@plt+0x426cc>
  4455a4:	ldrb	w8, [x8, #1]
  4455a8:	cmp	w8, #0x6c
  4455ac:	b.ne	4455bc <feof@plt+0x42bec>  // b.any
  4455b0:	mov	x0, x19
  4455b4:	bl	4446a4 <feof@plt+0x41cd4>
  4455b8:	b	44509c <feof@plt+0x426cc>
  4455bc:	mov	x21, xzr
  4455c0:	mov	x0, x21
  4455c4:	ldp	x20, x19, [sp, #96]
  4455c8:	ldp	x22, x21, [sp, #80]
  4455cc:	ldp	x24, x23, [sp, #64]
  4455d0:	ldp	x26, x25, [sp, #48]
  4455d4:	ldp	x28, x27, [sp, #32]
  4455d8:	ldp	x29, x30, [sp, #16]
  4455dc:	add	sp, sp, #0x70
  4455e0:	ret
  4455e4:	add	x24, sp, #0x8
  4455e8:	mov	w25, #0x1                   	// #1
  4455ec:	mov	w26, #0x18                  	// #24
  4455f0:	mov	w27, #0x2e                  	// #46
  4455f4:	ldr	w28, [x19, #76]
  4455f8:	mov	x0, x19
  4455fc:	str	w25, [x19, #76]
  445600:	bl	4446a4 <feof@plt+0x41cd4>
  445604:	str	w28, [x19, #76]
  445608:	cbz	x0, 44509c <feof@plt+0x426cc>
  44560c:	ldp	w8, w9, [x19, #40]
  445610:	sxtw	x8, w8
  445614:	cmp	w8, w9
  445618:	b.ge	445674 <feof@plt+0x42ca4>  // b.tcont
  44561c:	ldr	x10, [x19, #32]
  445620:	add	w11, w8, #0x1
  445624:	madd	x9, x8, x26, x10
  445628:	str	wzr, [x9, #4]
  44562c:	str	w11, [x19, #40]
  445630:	cbz	x10, 445674 <feof@plt+0x42ca4>
  445634:	madd	x10, x8, x26, x10
  445638:	str	w27, [x9]
  44563c:	str	xzr, [x10, #16]!
  445640:	stur	x0, [x10, #-8]
  445644:	str	x9, [x24]
  445648:	ldr	x8, [x23]
  44564c:	mov	x24, x10
  445650:	ldrb	w9, [x8]
  445654:	cmp	w9, #0x45
  445658:	b.ne	4455f4 <feof@plt+0x42c24>  // b.any
  44565c:	add	x8, x8, #0x1
  445660:	str	x8, [x23]
  445664:	ldr	x0, [sp, #8]
  445668:	b	44509c <feof@plt+0x426cc>
  44566c:	mov	x0, xzr
  445670:	b	44509c <feof@plt+0x426cc>
  445674:	mov	x0, xzr
  445678:	str	xzr, [x24]
  44567c:	b	44509c <feof@plt+0x426cc>
  445680:	stp	x29, x30, [sp, #-32]!
  445684:	stp	x20, x19, [sp, #16]
  445688:	mov	x29, sp
  44568c:	cbz	x1, 445744 <feof@plt+0x42d74>
  445690:	adrp	x8, 460000 <_obstack_memory_used@@Base+0xfa68>
  445694:	mov	x20, x1
  445698:	mov	x19, x0
  44569c:	add	x8, x8, #0x219
  4456a0:	b	4456b0 <feof@plt+0x42ce0>
  4456a4:	add	x9, x20, #0x10
  4456a8:	ldr	x20, [x9]
  4456ac:	cbz	x20, 445744 <feof@plt+0x42d74>
  4456b0:	ldr	w9, [x20]
  4456b4:	sub	w9, w9, #0x1
  4456b8:	cmp	w9, #0x4f
  4456bc:	b.hi	445744 <feof@plt+0x42d74>  // b.pmore
  4456c0:	adr	x10, 4456a4 <feof@plt+0x42cd4>
  4456c4:	ldrb	w11, [x8, x9]
  4456c8:	add	x10, x10, x11, lsl #2
  4456cc:	br	x10
  4456d0:	add	x9, x20, #0x8
  4456d4:	ldr	x20, [x9]
  4456d8:	cbnz	x20, 4456b0 <feof@plt+0x42ce0>
  4456dc:	b	445744 <feof@plt+0x42d74>
  4456e0:	ldr	x8, [x20, #8]
  4456e4:	ldr	w8, [x8]
  4456e8:	cmp	w8, #0x5
  4456ec:	b.ne	44570c <feof@plt+0x42d3c>  // b.any
  4456f0:	ldr	w8, [x19, #348]
  4456f4:	add	w8, w8, #0x1
  4456f8:	str	w8, [x19, #348]
  4456fc:	b	44570c <feof@plt+0x42d3c>
  445700:	ldr	w8, [x19, #364]
  445704:	add	w8, w8, #0x1
  445708:	str	w8, [x19, #364]
  44570c:	ldr	w8, [x19, #308]
  445710:	cmp	w8, #0x800
  445714:	b.gt	445744 <feof@plt+0x42d74>
  445718:	add	w8, w8, #0x1
  44571c:	str	w8, [x19, #308]
  445720:	ldr	x1, [x20, #8]
  445724:	mov	x0, x19
  445728:	bl	445680 <feof@plt+0x42cb0>
  44572c:	ldr	x1, [x20, #16]
  445730:	mov	x0, x19
  445734:	bl	445680 <feof@plt+0x42cb0>
  445738:	ldr	w8, [x19, #308]
  44573c:	sub	w8, w8, #0x1
  445740:	str	w8, [x19, #308]
  445744:	ldp	x20, x19, [sp, #16]
  445748:	ldp	x29, x30, [sp], #32
  44574c:	ret
  445750:	sub	sp, sp, #0x100
  445754:	stp	x26, x25, [sp, #192]
  445758:	add	x25, x0, #0x130
  44575c:	stp	x29, x30, [sp, #160]
  445760:	stp	x28, x27, [sp, #176]
  445764:	stp	x24, x23, [sp, #208]
  445768:	stp	x22, x21, [sp, #224]
  44576c:	stp	x20, x19, [sp, #240]
  445770:	add	x29, sp, #0xa0
  445774:	cbz	x2, 447e54 <feof@plt+0x45484>
  445778:	ldr	w8, [x25]
  44577c:	cbnz	w8, 447e5c <feof@plt+0x4548c>
  445780:	ldr	w8, [x2]
  445784:	mov	x21, x2
  445788:	cmp	w8, #0x50
  44578c:	b.hi	447e54 <feof@plt+0x45484>  // b.pmore
  445790:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  445794:	add	x9, x9, #0x26a
  445798:	adr	x10, 4457b8 <feof@plt+0x42de8>
  44579c:	ldrh	w11, [x9, x8, lsl #1]
  4457a0:	add	x10, x10, x11, lsl #2
  4457a4:	mov	w20, w1
  4457a8:	mov	x19, x0
  4457ac:	mov	w23, wzr
  4457b0:	mov	x22, xzr
  4457b4:	br	x10
  4457b8:	ldr	x8, [x19, #296]
  4457bc:	add	x9, sp, #0x10
  4457c0:	stp	x8, x21, [sp, #16]
  4457c4:	str	x9, [x19, #296]
  4457c8:	str	wzr, [sp, #32]
  4457cc:	ldr	x8, [x19, #288]
  4457d0:	str	x8, [sp, #40]
  4457d4:	cbnz	x22, 4457e0 <feof@plt+0x42e10>
  4457d8:	ldr	x22, [x21, #8]
  4457dc:	cbz	x22, 4457f8 <feof@plt+0x42e28>
  4457e0:	ldr	w8, [x22, #4]
  4457e4:	cmp	w8, #0x1
  4457e8:	b.gt	4457f8 <feof@plt+0x42e28>
  4457ec:	ldr	w9, [x19, #308]
  4457f0:	cmp	w9, #0x401
  4457f4:	b.lt	445824 <feof@plt+0x42e54>  // b.tstop
  4457f8:	mov	w8, #0x1                   	// #1
  4457fc:	str	w8, [x25]
  445800:	mov	x0, x19
  445804:	mov	w1, w20
  445808:	mov	x2, x21
  44580c:	bl	44b9e8 <feof@plt+0x49018>
  445810:	ldr	x8, [sp, #16]
  445814:	str	x8, [x19, #296]
  445818:	cbz	w23, 447e5c <feof@plt+0x4548c>
  44581c:	str	x24, [x19, #288]
  445820:	b	447e5c <feof@plt+0x4548c>
  445824:	add	w8, w8, #0x1
  445828:	str	w8, [x22, #4]
  44582c:	ldr	x8, [x19, #328]
  445830:	add	w9, w9, #0x1
  445834:	str	w9, [x19, #308]
  445838:	sub	x9, x29, #0x10
  44583c:	mov	x0, x19
  445840:	mov	w1, w20
  445844:	mov	x2, x22
  445848:	stp	x22, x8, [x29, #-16]
  44584c:	str	x9, [x19, #328]
  445850:	bl	445750 <feof@plt+0x42d80>
  445854:	ldur	x8, [x29, #-8]
  445858:	str	x8, [x19, #328]
  44585c:	ldr	w8, [x22, #4]
  445860:	sub	w8, w8, #0x1
  445864:	str	w8, [x22, #4]
  445868:	ldr	w8, [x19, #308]
  44586c:	sub	w8, w8, #0x1
  445870:	str	w8, [x19, #308]
  445874:	ldr	w8, [sp, #32]
  445878:	cbnz	w8, 445810 <feof@plt+0x42e40>
  44587c:	b	445800 <feof@plt+0x42e30>
  445880:	ldr	x9, [x19, #296]
  445884:	cbnz	x9, 44589c <feof@plt+0x42ecc>
  445888:	mov	w23, wzr
  44588c:	mov	x22, xzr
  445890:	b	4457b8 <feof@plt+0x42de8>
  445894:	ldr	x9, [x9]
  445898:	cbz	x9, 445888 <feof@plt+0x42eb8>
  44589c:	ldr	w10, [x9, #16]
  4458a0:	cbnz	w10, 445894 <feof@plt+0x42ec4>
  4458a4:	ldr	x10, [x9, #8]
  4458a8:	ldr	w10, [x10]
  4458ac:	sub	w11, w10, #0x19
  4458b0:	cmp	w11, #0x2
  4458b4:	b.hi	445888 <feof@plt+0x42eb8>  // b.pmore
  4458b8:	cmp	w10, w8
  4458bc:	b.ne	445894 <feof@plt+0x42ec4>  // b.any
  4458c0:	b	447e34 <feof@plt+0x45464>
  4458c4:	ldr	x22, [x21, #8]
  4458c8:	cbz	x22, 4458e4 <feof@plt+0x42f14>
  4458cc:	ldr	w8, [x22, #4]
  4458d0:	cmp	w8, #0x1
  4458d4:	b.gt	4458e4 <feof@plt+0x42f14>
  4458d8:	ldr	w9, [x19, #308]
  4458dc:	cmp	w9, #0x401
  4458e0:	b.lt	448ce8 <feof@plt+0x46318>  // b.tstop
  4458e4:	mov	w8, #0x1                   	// #1
  4458e8:	str	w8, [x25]
  4458ec:	tbnz	w20, #2, 448d3c <feof@plt+0x4636c>
  4458f0:	ldr	x8, [x19, #256]
  4458f4:	cmp	x8, #0xff
  4458f8:	b.ne	445924 <feof@plt+0x42f54>  // b.any
  4458fc:	ldp	x8, x2, [x19, #272]
  445900:	mov	w1, #0xff                  	// #255
  445904:	mov	x0, x19
  445908:	strb	wzr, [x19, #255]
  44590c:	blr	x8
  445910:	ldr	x9, [x19, #320]
  445914:	mov	x8, xzr
  445918:	str	xzr, [x19, #256]
  44591c:	add	x9, x9, #0x1
  445920:	str	x9, [x19, #320]
  445924:	add	x9, x8, #0x1
  445928:	mov	w22, #0x3a                  	// #58
  44592c:	str	x9, [x19, #256]
  445930:	strb	w22, [x19, x8]
  445934:	ldr	x8, [x19, #256]
  445938:	strb	w22, [x19, #264]
  44593c:	cmp	x8, #0xff
  445940:	b.ne	44596c <feof@plt+0x42f9c>  // b.any
  445944:	ldp	x8, x2, [x19, #272]
  445948:	mov	w1, #0xff                  	// #255
  44594c:	mov	x0, x19
  445950:	strb	wzr, [x19, #255]
  445954:	blr	x8
  445958:	ldr	x9, [x19, #320]
  44595c:	mov	x8, xzr
  445960:	str	xzr, [x19, #256]
  445964:	add	x9, x9, #0x1
  445968:	str	x9, [x19, #320]
  44596c:	add	x9, x8, #0x1
  445970:	str	x9, [x19, #256]
  445974:	strb	w22, [x19, x8]
  445978:	strb	w22, [x19, #264]
  44597c:	b	448d84 <feof@plt+0x463b4>
  445980:	ldr	w10, [x19, #312]
  445984:	ldr	x9, [x21, #8]
  445988:	cbnz	w10, 445be8 <feof@plt+0x43218>
  44598c:	ldr	w10, [x9]
  445990:	cmp	w10, #0x5
  445994:	b.ne	445be8 <feof@plt+0x43218>  // b.any
  445998:	ldr	w11, [x19, #344]
  44599c:	cmp	w11, #0x1
  4459a0:	b.lt	4459c8 <feof@plt+0x42ff8>  // b.tstop
  4459a4:	ldr	x10, [x19, #336]
  4459a8:	mov	x12, x11
  4459ac:	add	x10, x10, #0x8
  4459b0:	ldur	x13, [x10, #-8]
  4459b4:	cmp	x13, x9
  4459b8:	b.eq	449900 <feof@plt+0x46f30>  // b.none
  4459bc:	subs	x12, x12, #0x1
  4459c0:	add	x10, x10, #0x10
  4459c4:	b.ne	4459b0 <feof@plt+0x42fe0>  // b.any
  4459c8:	ldr	w10, [x19, #348]
  4459cc:	cmp	w11, w10
  4459d0:	b.ge	447e54 <feof@plt+0x45484>  // b.tcont
  4459d4:	ldr	x10, [x19, #336]
  4459d8:	sxtw	x11, w11
  4459dc:	add	w12, w11, #0x1
  4459e0:	str	w12, [x19, #344]
  4459e4:	add	x10, x10, x11, lsl #4
  4459e8:	str	x9, [x10], #8
  4459ec:	ldr	x11, [x19, #288]
  4459f0:	cbz	x11, 445a44 <feof@plt+0x43074>
  4459f4:	ldrsw	x12, [x19, #360]
  4459f8:	ldrsw	x13, [x19, #364]
  4459fc:	lsl	x14, x12, #4
  445a00:	add	w15, w12, #0x1
  445a04:	cmp	x12, x13
  445a08:	b.ge	447e54 <feof@plt+0x45484>  // b.tcont
  445a0c:	ldr	x16, [x19, #352]
  445a10:	str	w15, [x19, #360]
  445a14:	ldr	x17, [x11, #8]
  445a18:	add	x12, x12, #0x1
  445a1c:	add	x18, x16, x14
  445a20:	add	x14, x14, #0x10
  445a24:	str	x17, [x18, #8]
  445a28:	str	x18, [x10]
  445a2c:	ldr	x11, [x11]
  445a30:	add	w15, w15, #0x1
  445a34:	mov	x10, x18
  445a38:	cbnz	x11, 445a04 <feof@plt+0x43034>
  445a3c:	add	x10, x16, x14
  445a40:	sub	x10, x10, #0x10
  445a44:	mov	w23, wzr
  445a48:	str	xzr, [x10]
  445a4c:	b	449d60 <feof@plt+0x47390>
  445a50:	ldr	x8, [x19, #296]
  445a54:	add	x9, sp, #0x10
  445a58:	stp	x8, x21, [sp, #16]
  445a5c:	str	x9, [x19, #296]
  445a60:	str	wzr, [sp, #32]
  445a64:	ldr	x8, [x19, #288]
  445a68:	str	x8, [sp, #40]
  445a6c:	ldr	x22, [x21, #16]
  445a70:	cbz	x22, 445a8c <feof@plt+0x430bc>
  445a74:	ldr	w8, [x22, #4]
  445a78:	cmp	w8, #0x1
  445a7c:	b.gt	445a8c <feof@plt+0x430bc>
  445a80:	ldr	w9, [x19, #308]
  445a84:	cmp	w9, #0x401
  445a88:	b.lt	448f64 <feof@plt+0x46594>  // b.tstop
  445a8c:	mov	w8, #0x1                   	// #1
  445a90:	str	w8, [x25]
  445a94:	mov	x0, x19
  445a98:	mov	w1, w20
  445a9c:	mov	x2, x21
  445aa0:	bl	44b9e8 <feof@plt+0x49018>
  445aa4:	ldr	x8, [sp, #16]
  445aa8:	str	x8, [x19, #296]
  445aac:	b	447e5c <feof@plt+0x4548c>
  445ab0:	ldr	x22, [x21, #8]
  445ab4:	cbz	x22, 449010 <feof@plt+0x46640>
  445ab8:	ldr	w8, [x22, #4]
  445abc:	cmp	w8, #0x1
  445ac0:	b.gt	445ad0 <feof@plt+0x43100>
  445ac4:	ldr	w9, [x19, #308]
  445ac8:	cmp	w9, #0x401
  445acc:	b.lt	448fc0 <feof@plt+0x465f0>  // b.tstop
  445ad0:	mov	w8, #0x1                   	// #1
  445ad4:	str	w8, [x25]
  445ad8:	b	449010 <feof@plt+0x46640>
  445adc:	ldr	x9, [x21, #8]
  445ae0:	ldr	w10, [x9]
  445ae4:	cmp	w10, #0x27
  445ae8:	b.ne	447988 <feof@plt+0x44fb8>  // b.any
  445aec:	ldr	x9, [x9, #8]
  445af0:	ldr	w23, [x9, #28]
  445af4:	sub	w9, w23, #0x1
  445af8:	cmp	w9, #0x6
  445afc:	b.cs	449228 <feof@plt+0x46858>  // b.hs, b.nlast
  445b00:	ldr	x22, [x21, #16]
  445b04:	ldr	w9, [x22]
  445b08:	cbnz	w9, 44798c <feof@plt+0x44fbc>
  445b0c:	cmp	w8, #0x3e
  445b10:	b.ne	445b60 <feof@plt+0x43190>  // b.any
  445b14:	ldr	x8, [x19, #256]
  445b18:	cmp	x8, #0xff
  445b1c:	b.ne	445b48 <feof@plt+0x43178>  // b.any
  445b20:	ldp	x8, x2, [x19, #272]
  445b24:	mov	w1, #0xff                  	// #255
  445b28:	mov	x0, x19
  445b2c:	strb	wzr, [x19, #255]
  445b30:	blr	x8
  445b34:	ldr	x9, [x19, #320]
  445b38:	mov	x8, xzr
  445b3c:	str	xzr, [x19, #256]
  445b40:	add	x9, x9, #0x1
  445b44:	str	x9, [x19, #320]
  445b48:	add	x9, x8, #0x1
  445b4c:	mov	w10, #0x2d                  	// #45
  445b50:	str	x9, [x19, #256]
  445b54:	strb	w10, [x19, x8]
  445b58:	strb	w10, [x19, #264]
  445b5c:	ldr	x22, [x21, #16]
  445b60:	cbz	x22, 445b7c <feof@plt+0x431ac>
  445b64:	ldr	w8, [x22, #4]
  445b68:	cmp	w8, #0x1
  445b6c:	b.gt	445b7c <feof@plt+0x431ac>
  445b70:	ldr	w9, [x19, #308]
  445b74:	cmp	w9, #0x401
  445b78:	b.lt	44a24c <feof@plt+0x4787c>  // b.tstop
  445b7c:	mov	w8, #0x1                   	// #1
  445b80:	str	w8, [x25]
  445b84:	sub	w8, w23, #0x2
  445b88:	cmp	w8, #0x4
  445b8c:	b.hi	447e5c <feof@plt+0x4548c>  // b.pmore
  445b90:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  445b94:	add	x9, x9, #0x30c
  445b98:	adr	x10, 445ba8 <feof@plt+0x431d8>
  445b9c:	ldrh	w11, [x9, x8, lsl #1]
  445ba0:	add	x10, x10, x11, lsl #2
  445ba4:	br	x10
  445ba8:	ldr	x8, [x19, #256]
  445bac:	cmp	x8, #0xff
  445bb0:	b.ne	445bdc <feof@plt+0x4320c>  // b.any
  445bb4:	ldp	x8, x2, [x19, #272]
  445bb8:	mov	w1, #0xff                  	// #255
  445bbc:	mov	x0, x19
  445bc0:	strb	wzr, [x19, #255]
  445bc4:	blr	x8
  445bc8:	ldr	x9, [x19, #320]
  445bcc:	mov	x8, xzr
  445bd0:	str	xzr, [x19, #256]
  445bd4:	add	x9, x9, #0x1
  445bd8:	str	x9, [x19, #320]
  445bdc:	add	x9, x8, #0x1
  445be0:	mov	w10, #0x75                  	// #117
  445be4:	b	44a750 <feof@plt+0x47d80>
  445be8:	mov	w23, wzr
  445bec:	ldr	w10, [x9]
  445bf0:	mov	x22, xzr
  445bf4:	cmp	w10, #0x23
  445bf8:	b.eq	448360 <feof@plt+0x45990>  // b.none
  445bfc:	cmp	w10, w8
  445c00:	b.eq	448360 <feof@plt+0x45990>  // b.none
  445c04:	cmp	w10, #0x24
  445c08:	b.ne	4487c4 <feof@plt+0x45df4>  // b.any
  445c0c:	ldr	x22, [x9, #8]
  445c10:	b	4457b8 <feof@plt+0x42de8>
  445c14:	ldr	x22, [x21, #8]
  445c18:	ldrsw	x21, [x21, #16]
  445c1c:	tbnz	w20, #2, 448368 <feof@plt+0x45998>
  445c20:	cbnz	w21, 445c44 <feof@plt+0x43274>
  445c24:	b	447e5c <feof@plt+0x4548c>
  445c28:	add	x9, x8, #0x1
  445c2c:	subs	x21, x21, #0x1
  445c30:	add	x22, x22, #0x1
  445c34:	str	x9, [x19, #256]
  445c38:	strb	w20, [x19, x8]
  445c3c:	strb	w20, [x19, #264]
  445c40:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  445c44:	ldr	x8, [x19, #256]
  445c48:	ldrb	w20, [x22]
  445c4c:	cmp	x8, #0xff
  445c50:	b.ne	445c28 <feof@plt+0x43258>  // b.any
  445c54:	ldp	x8, x2, [x19, #272]
  445c58:	mov	w1, #0xff                  	// #255
  445c5c:	mov	x0, x19
  445c60:	strb	wzr, [x19, #255]
  445c64:	blr	x8
  445c68:	ldr	x9, [x19, #320]
  445c6c:	mov	x8, xzr
  445c70:	str	xzr, [x19, #256]
  445c74:	add	x9, x9, #0x1
  445c78:	str	x9, [x19, #320]
  445c7c:	b	445c28 <feof@plt+0x43258>
  445c80:	ldr	x22, [x19, #296]
  445c84:	str	xzr, [x19, #296]
  445c88:	ldr	x24, [x21, #8]
  445c8c:	cbz	x24, 447e54 <feof@plt+0x45484>
  445c90:	ldr	x8, [x19, #288]
  445c94:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xfa68>
  445c98:	mov	x11, xzr
  445c9c:	add	x9, sp, #0x10
  445ca0:	mov	w23, #0x1                   	// #1
  445ca4:	add	x10, x10, #0x316
  445ca8:	cmp	x23, #0x5
  445cac:	b.eq	447e54 <feof@plt+0x45484>  // b.none
  445cb0:	str	x11, [x9]
  445cb4:	str	x9, [x19, #296]
  445cb8:	str	x24, [x9, #8]
  445cbc:	str	wzr, [x9, #16]
  445cc0:	str	x8, [x9, #24]
  445cc4:	ldr	w12, [x24]
  445cc8:	sub	w11, w12, #0x2
  445ccc:	cmp	w11, #0x4e
  445cd0:	b.hi	4499b4 <feof@plt+0x46fe4>  // b.pmore
  445cd4:	adr	x13, 445ce4 <feof@plt+0x43314>
  445cd8:	ldrh	w14, [x10, x11, lsl #1]
  445cdc:	add	x13, x13, x14, lsl #2
  445ce0:	br	x13
  445ce4:	ldr	x24, [x24, #8]
  445ce8:	mov	x11, x9
  445cec:	add	x23, x23, #0x1
  445cf0:	add	x9, x9, #0x20
  445cf4:	cbnz	x24, 445ca8 <feof@plt+0x432d8>
  445cf8:	b	447e54 <feof@plt+0x45484>
  445cfc:	ldr	x23, [x19, #368]
  445d00:	str	x21, [x19, #368]
  445d04:	ldr	x24, [x19, #296]
  445d08:	str	xzr, [x19, #296]
  445d0c:	ldr	x22, [x21, #8]
  445d10:	tbnz	w20, #2, 4484c0 <feof@plt+0x45af0>
  445d14:	cbnz	x22, 4484ec <feof@plt+0x45b1c>
  445d18:	b	448504 <feof@plt+0x45b34>
  445d1c:	ldr	w8, [x19, #312]
  445d20:	cbz	w8, 4487cc <feof@plt+0x45dfc>
  445d24:	ldr	x8, [x19, #256]
  445d28:	cmp	x8, #0xff
  445d2c:	b.ne	445d58 <feof@plt+0x43388>  // b.any
  445d30:	ldp	x8, x2, [x19, #272]
  445d34:	mov	w1, #0xff                  	// #255
  445d38:	mov	x0, x19
  445d3c:	strb	wzr, [x19, #255]
  445d40:	blr	x8
  445d44:	ldr	x9, [x19, #320]
  445d48:	mov	x8, xzr
  445d4c:	str	xzr, [x19, #256]
  445d50:	add	x9, x9, #0x1
  445d54:	str	x9, [x19, #320]
  445d58:	add	x9, x8, #0x1
  445d5c:	mov	w10, #0x61                  	// #97
  445d60:	str	x9, [x19, #256]
  445d64:	strb	w10, [x19, x8]
  445d68:	ldr	x8, [x19, #256]
  445d6c:	strb	w10, [x19, #264]
  445d70:	cmp	x8, #0xff
  445d74:	b.ne	445da0 <feof@plt+0x433d0>  // b.any
  445d78:	ldp	x8, x2, [x19, #272]
  445d7c:	mov	w1, #0xff                  	// #255
  445d80:	mov	x0, x19
  445d84:	strb	wzr, [x19, #255]
  445d88:	blr	x8
  445d8c:	ldr	x9, [x19, #320]
  445d90:	mov	x8, xzr
  445d94:	str	xzr, [x19, #256]
  445d98:	add	x9, x9, #0x1
  445d9c:	str	x9, [x19, #320]
  445da0:	add	x9, x8, #0x1
  445da4:	mov	w10, #0x75                  	// #117
  445da8:	str	x9, [x19, #256]
  445dac:	strb	w10, [x19, x8]
  445db0:	ldr	x8, [x19, #256]
  445db4:	strb	w10, [x19, #264]
  445db8:	cmp	x8, #0xff
  445dbc:	b.ne	445de8 <feof@plt+0x43418>  // b.any
  445dc0:	ldp	x8, x2, [x19, #272]
  445dc4:	mov	w1, #0xff                  	// #255
  445dc8:	mov	x0, x19
  445dcc:	strb	wzr, [x19, #255]
  445dd0:	blr	x8
  445dd4:	ldr	x9, [x19, #320]
  445dd8:	mov	x8, xzr
  445ddc:	str	xzr, [x19, #256]
  445de0:	add	x9, x9, #0x1
  445de4:	str	x9, [x19, #320]
  445de8:	add	x9, x8, #0x1
  445dec:	mov	w10, #0x74                  	// #116
  445df0:	str	x9, [x19, #256]
  445df4:	strb	w10, [x19, x8]
  445df8:	ldr	x8, [x19, #256]
  445dfc:	strb	w10, [x19, #264]
  445e00:	cmp	x8, #0xff
  445e04:	b.ne	445e30 <feof@plt+0x43460>  // b.any
  445e08:	ldp	x8, x2, [x19, #272]
  445e0c:	mov	w1, #0xff                  	// #255
  445e10:	mov	x0, x19
  445e14:	strb	wzr, [x19, #255]
  445e18:	blr	x8
  445e1c:	ldr	x9, [x19, #320]
  445e20:	mov	x8, xzr
  445e24:	str	xzr, [x19, #256]
  445e28:	add	x9, x9, #0x1
  445e2c:	str	x9, [x19, #320]
  445e30:	add	x9, x8, #0x1
  445e34:	mov	w10, #0x6f                  	// #111
  445e38:	str	x9, [x19, #256]
  445e3c:	strb	w10, [x19, x8]
  445e40:	ldr	x8, [x19, #256]
  445e44:	strb	w10, [x19, #264]
  445e48:	cmp	x8, #0xff
  445e4c:	b.ne	445e78 <feof@plt+0x434a8>  // b.any
  445e50:	ldp	x8, x2, [x19, #272]
  445e54:	mov	w1, #0xff                  	// #255
  445e58:	mov	x0, x19
  445e5c:	strb	wzr, [x19, #255]
  445e60:	blr	x8
  445e64:	ldr	x9, [x19, #320]
  445e68:	mov	x8, xzr
  445e6c:	str	xzr, [x19, #256]
  445e70:	add	x9, x9, #0x1
  445e74:	str	x9, [x19, #320]
  445e78:	add	x9, x8, #0x1
  445e7c:	mov	w10, #0x3a                  	// #58
  445e80:	str	x9, [x19, #256]
  445e84:	strb	w10, [x19, x8]
  445e88:	strb	w10, [x19, #264]
  445e8c:	ldr	w8, [x21, #8]
  445e90:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  445e94:	add	x1, x1, #0x6e9
  445e98:	add	x0, sp, #0x10
  445e9c:	add	w2, w8, #0x1
  445ea0:	bl	4025b0 <sprintf@plt>
  445ea4:	add	x0, sp, #0x10
  445ea8:	bl	402420 <strlen@plt>
  445eac:	cbz	x0, 447e5c <feof@plt+0x4548c>
  445eb0:	mov	x20, x0
  445eb4:	add	x21, sp, #0x10
  445eb8:	b	445ed8 <feof@plt+0x43508>
  445ebc:	add	x9, x8, #0x1
  445ec0:	subs	x20, x20, #0x1
  445ec4:	add	x21, x21, #0x1
  445ec8:	str	x9, [x19, #256]
  445ecc:	strb	w22, [x19, x8]
  445ed0:	strb	w22, [x19, #264]
  445ed4:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  445ed8:	ldr	x8, [x19, #256]
  445edc:	ldrb	w22, [x21]
  445ee0:	cmp	x8, #0xff
  445ee4:	b.ne	445ebc <feof@plt+0x434ec>  // b.any
  445ee8:	ldp	x8, x2, [x19, #272]
  445eec:	mov	w1, #0xff                  	// #255
  445ef0:	mov	x0, x19
  445ef4:	strb	wzr, [x19, #255]
  445ef8:	blr	x8
  445efc:	ldr	x9, [x19, #320]
  445f00:	mov	x8, xzr
  445f04:	str	xzr, [x19, #256]
  445f08:	add	x9, x9, #0x1
  445f0c:	str	x9, [x19, #320]
  445f10:	b	445ebc <feof@plt+0x434ec>
  445f14:	ldr	x8, [x19, #256]
  445f18:	ldr	x20, [x21, #8]
  445f1c:	cmp	x8, #0xff
  445f20:	cbz	x20, 44880c <feof@plt+0x45e3c>
  445f24:	b.ne	445f50 <feof@plt+0x43580>  // b.any
  445f28:	ldp	x8, x2, [x19, #272]
  445f2c:	mov	w1, #0xff                  	// #255
  445f30:	mov	x0, x19
  445f34:	strb	wzr, [x19, #255]
  445f38:	blr	x8
  445f3c:	ldr	x9, [x19, #320]
  445f40:	mov	x8, xzr
  445f44:	str	xzr, [x19, #256]
  445f48:	add	x9, x9, #0x1
  445f4c:	str	x9, [x19, #320]
  445f50:	add	x9, x8, #0x1
  445f54:	mov	w10, #0x7b                  	// #123
  445f58:	str	x9, [x19, #256]
  445f5c:	strb	w10, [x19, x8]
  445f60:	ldr	x8, [x19, #256]
  445f64:	strb	w10, [x19, #264]
  445f68:	cmp	x8, #0xff
  445f6c:	b.ne	445f98 <feof@plt+0x435c8>  // b.any
  445f70:	ldp	x8, x2, [x19, #272]
  445f74:	mov	w1, #0xff                  	// #255
  445f78:	mov	x0, x19
  445f7c:	strb	wzr, [x19, #255]
  445f80:	blr	x8
  445f84:	ldr	x9, [x19, #320]
  445f88:	mov	x8, xzr
  445f8c:	str	xzr, [x19, #256]
  445f90:	add	x9, x9, #0x1
  445f94:	str	x9, [x19, #320]
  445f98:	add	x9, x8, #0x1
  445f9c:	mov	w10, #0x70                  	// #112
  445fa0:	str	x9, [x19, #256]
  445fa4:	strb	w10, [x19, x8]
  445fa8:	ldr	x8, [x19, #256]
  445fac:	strb	w10, [x19, #264]
  445fb0:	cmp	x8, #0xff
  445fb4:	b.ne	445fe0 <feof@plt+0x43610>  // b.any
  445fb8:	ldp	x8, x2, [x19, #272]
  445fbc:	mov	w1, #0xff                  	// #255
  445fc0:	mov	x0, x19
  445fc4:	strb	wzr, [x19, #255]
  445fc8:	blr	x8
  445fcc:	ldr	x9, [x19, #320]
  445fd0:	mov	x8, xzr
  445fd4:	str	xzr, [x19, #256]
  445fd8:	add	x9, x9, #0x1
  445fdc:	str	x9, [x19, #320]
  445fe0:	add	x9, x8, #0x1
  445fe4:	mov	w10, #0x61                  	// #97
  445fe8:	str	x9, [x19, #256]
  445fec:	strb	w10, [x19, x8]
  445ff0:	ldr	x8, [x19, #256]
  445ff4:	strb	w10, [x19, #264]
  445ff8:	cmp	x8, #0xff
  445ffc:	b.ne	446028 <feof@plt+0x43658>  // b.any
  446000:	ldp	x8, x2, [x19, #272]
  446004:	mov	w1, #0xff                  	// #255
  446008:	mov	x0, x19
  44600c:	strb	wzr, [x19, #255]
  446010:	blr	x8
  446014:	ldr	x9, [x19, #320]
  446018:	mov	x8, xzr
  44601c:	str	xzr, [x19, #256]
  446020:	add	x9, x9, #0x1
  446024:	str	x9, [x19, #320]
  446028:	add	x9, x8, #0x1
  44602c:	mov	w10, #0x72                  	// #114
  446030:	str	x9, [x19, #256]
  446034:	strb	w10, [x19, x8]
  446038:	ldr	x8, [x19, #256]
  44603c:	strb	w10, [x19, #264]
  446040:	cmp	x8, #0xff
  446044:	b.ne	446070 <feof@plt+0x436a0>  // b.any
  446048:	ldp	x8, x2, [x19, #272]
  44604c:	mov	w1, #0xff                  	// #255
  446050:	mov	x0, x19
  446054:	strb	wzr, [x19, #255]
  446058:	blr	x8
  44605c:	ldr	x9, [x19, #320]
  446060:	mov	x8, xzr
  446064:	str	xzr, [x19, #256]
  446068:	add	x9, x9, #0x1
  44606c:	str	x9, [x19, #320]
  446070:	add	x9, x8, #0x1
  446074:	mov	w10, #0x6d                  	// #109
  446078:	str	x9, [x19, #256]
  44607c:	strb	w10, [x19, x8]
  446080:	ldr	x8, [x19, #256]
  446084:	strb	w10, [x19, #264]
  446088:	cmp	x8, #0xff
  44608c:	b.ne	4460b8 <feof@plt+0x436e8>  // b.any
  446090:	ldp	x8, x2, [x19, #272]
  446094:	mov	w1, #0xff                  	// #255
  446098:	mov	x0, x19
  44609c:	strb	wzr, [x19, #255]
  4460a0:	blr	x8
  4460a4:	ldr	x9, [x19, #320]
  4460a8:	mov	x8, xzr
  4460ac:	str	xzr, [x19, #256]
  4460b0:	add	x9, x9, #0x1
  4460b4:	str	x9, [x19, #320]
  4460b8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4460bc:	add	x9, x8, #0x1
  4460c0:	mov	w10, #0x23                  	// #35
  4460c4:	add	x1, x1, #0x6e9
  4460c8:	add	x0, sp, #0x10
  4460cc:	mov	w2, w20
  4460d0:	str	x9, [x19, #256]
  4460d4:	strb	w10, [x19, x8]
  4460d8:	strb	w10, [x19, #264]
  4460dc:	bl	4025b0 <sprintf@plt>
  4460e0:	add	x0, sp, #0x10
  4460e4:	bl	402420 <strlen@plt>
  4460e8:	cbz	x0, 449560 <feof@plt+0x46b90>
  4460ec:	mov	x20, x0
  4460f0:	add	x21, sp, #0x10
  4460f4:	b	446114 <feof@plt+0x43744>
  4460f8:	add	x9, x8, #0x1
  4460fc:	subs	x20, x20, #0x1
  446100:	add	x21, x21, #0x1
  446104:	str	x9, [x19, #256]
  446108:	strb	w22, [x19, x8]
  44610c:	strb	w22, [x19, #264]
  446110:	b.eq	449560 <feof@plt+0x46b90>  // b.none
  446114:	ldr	x8, [x19, #256]
  446118:	ldrb	w22, [x21]
  44611c:	cmp	x8, #0xff
  446120:	b.ne	4460f8 <feof@plt+0x43728>  // b.any
  446124:	ldp	x8, x2, [x19, #272]
  446128:	mov	w1, #0xff                  	// #255
  44612c:	mov	x0, x19
  446130:	strb	wzr, [x19, #255]
  446134:	blr	x8
  446138:	ldr	x9, [x19, #320]
  44613c:	mov	x8, xzr
  446140:	str	xzr, [x19, #256]
  446144:	add	x9, x9, #0x1
  446148:	str	x9, [x19, #320]
  44614c:	b	4460f8 <feof@plt+0x43728>
  446150:	ldr	x8, [x19, #256]
  446154:	cmp	x8, #0xff
  446158:	b.ne	446184 <feof@plt+0x437b4>  // b.any
  44615c:	ldp	x8, x2, [x19, #272]
  446160:	mov	w1, #0xff                  	// #255
  446164:	mov	x0, x19
  446168:	strb	wzr, [x19, #255]
  44616c:	blr	x8
  446170:	ldr	x9, [x19, #320]
  446174:	mov	x8, xzr
  446178:	str	xzr, [x19, #256]
  44617c:	add	x9, x9, #0x1
  446180:	str	x9, [x19, #320]
  446184:	add	x9, x8, #0x1
  446188:	mov	w10, #0x7e                  	// #126
  44618c:	b	447c8c <feof@plt+0x452bc>
  446190:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446194:	mov	x22, xzr
  446198:	add	x23, x23, #0x504
  44619c:	b	4461bc <feof@plt+0x437ec>
  4461a0:	add	x22, x22, #0x1
  4461a4:	add	x9, x8, #0x1
  4461a8:	cmp	x22, #0xb
  4461ac:	str	x9, [x19, #256]
  4461b0:	strb	w24, [x19, x8]
  4461b4:	strb	w24, [x19, #264]
  4461b8:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4461bc:	ldr	x8, [x19, #256]
  4461c0:	ldrb	w24, [x23, x22]
  4461c4:	cmp	x8, #0xff
  4461c8:	b.ne	4461a0 <feof@plt+0x437d0>  // b.any
  4461cc:	ldp	x8, x2, [x19, #272]
  4461d0:	mov	w1, #0xff                  	// #255
  4461d4:	mov	x0, x19
  4461d8:	strb	wzr, [x19, #255]
  4461dc:	blr	x8
  4461e0:	ldr	x9, [x19, #320]
  4461e4:	mov	x8, xzr
  4461e8:	str	xzr, [x19, #256]
  4461ec:	add	x9, x9, #0x1
  4461f0:	str	x9, [x19, #320]
  4461f4:	b	4461a0 <feof@plt+0x437d0>
  4461f8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4461fc:	mov	x22, xzr
  446200:	add	x23, x23, #0x4ee
  446204:	b	446224 <feof@plt+0x43854>
  446208:	add	x22, x22, #0x1
  44620c:	add	x9, x8, #0x1
  446210:	cmp	x22, #0x8
  446214:	str	x9, [x19, #256]
  446218:	strb	w24, [x19, x8]
  44621c:	strb	w24, [x19, #264]
  446220:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  446224:	ldr	x8, [x19, #256]
  446228:	ldrb	w24, [x23, x22]
  44622c:	cmp	x8, #0xff
  446230:	b.ne	446208 <feof@plt+0x43838>  // b.any
  446234:	ldp	x8, x2, [x19, #272]
  446238:	mov	w1, #0xff                  	// #255
  44623c:	mov	x0, x19
  446240:	strb	wzr, [x19, #255]
  446244:	blr	x8
  446248:	ldr	x9, [x19, #320]
  44624c:	mov	x8, xzr
  446250:	str	xzr, [x19, #256]
  446254:	add	x9, x9, #0x1
  446258:	str	x9, [x19, #320]
  44625c:	b	446208 <feof@plt+0x43838>
  446260:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446264:	mov	x22, xzr
  446268:	add	x23, x23, #0x4f7
  44626c:	b	44628c <feof@plt+0x438bc>
  446270:	add	x22, x22, #0x1
  446274:	add	x9, x8, #0x1
  446278:	cmp	x22, #0x18
  44627c:	str	x9, [x19, #256]
  446280:	strb	w24, [x19, x8]
  446284:	strb	w24, [x19, #264]
  446288:	b.eq	447b50 <feof@plt+0x45180>  // b.none
  44628c:	ldr	x8, [x19, #256]
  446290:	ldrb	w24, [x23, x22]
  446294:	cmp	x8, #0xff
  446298:	b.ne	446270 <feof@plt+0x438a0>  // b.any
  44629c:	ldp	x8, x2, [x19, #272]
  4462a0:	mov	w1, #0xff                  	// #255
  4462a4:	mov	x0, x19
  4462a8:	strb	wzr, [x19, #255]
  4462ac:	blr	x8
  4462b0:	ldr	x9, [x19, #320]
  4462b4:	mov	x8, xzr
  4462b8:	str	xzr, [x19, #256]
  4462bc:	add	x9, x9, #0x1
  4462c0:	str	x9, [x19, #320]
  4462c4:	b	446270 <feof@plt+0x438a0>
  4462c8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4462cc:	mov	x22, xzr
  4462d0:	add	x23, x23, #0x510
  4462d4:	b	4462f4 <feof@plt+0x43924>
  4462d8:	add	x22, x22, #0x1
  4462dc:	add	x9, x8, #0x1
  4462e0:	cmp	x22, #0xd
  4462e4:	str	x9, [x19, #256]
  4462e8:	strb	w24, [x19, x8]
  4462ec:	strb	w24, [x19, #264]
  4462f0:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4462f4:	ldr	x8, [x19, #256]
  4462f8:	ldrb	w24, [x23, x22]
  4462fc:	cmp	x8, #0xff
  446300:	b.ne	4462d8 <feof@plt+0x43908>  // b.any
  446304:	ldp	x8, x2, [x19, #272]
  446308:	mov	w1, #0xff                  	// #255
  44630c:	mov	x0, x19
  446310:	strb	wzr, [x19, #255]
  446314:	blr	x8
  446318:	ldr	x9, [x19, #320]
  44631c:	mov	x8, xzr
  446320:	str	xzr, [x19, #256]
  446324:	add	x9, x9, #0x1
  446328:	str	x9, [x19, #320]
  44632c:	b	4462d8 <feof@plt+0x43908>
  446330:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446334:	mov	x22, xzr
  446338:	add	x23, x23, #0x51e
  44633c:	b	44635c <feof@plt+0x4398c>
  446340:	add	x22, x22, #0x1
  446344:	add	x9, x8, #0x1
  446348:	cmp	x22, #0x12
  44634c:	str	x9, [x19, #256]
  446350:	strb	w24, [x19, x8]
  446354:	strb	w24, [x19, #264]
  446358:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  44635c:	ldr	x8, [x19, #256]
  446360:	ldrb	w24, [x23, x22]
  446364:	cmp	x8, #0xff
  446368:	b.ne	446340 <feof@plt+0x43970>  // b.any
  44636c:	ldp	x8, x2, [x19, #272]
  446370:	mov	w1, #0xff                  	// #255
  446374:	mov	x0, x19
  446378:	strb	wzr, [x19, #255]
  44637c:	blr	x8
  446380:	ldr	x9, [x19, #320]
  446384:	mov	x8, xzr
  446388:	str	xzr, [x19, #256]
  44638c:	add	x9, x9, #0x1
  446390:	str	x9, [x19, #320]
  446394:	b	446340 <feof@plt+0x43970>
  446398:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44639c:	mov	x22, xzr
  4463a0:	add	x23, x23, #0x531
  4463a4:	b	4463c4 <feof@plt+0x439f4>
  4463a8:	add	x22, x22, #0x1
  4463ac:	add	x9, x8, #0x1
  4463b0:	cmp	x22, #0x10
  4463b4:	str	x9, [x19, #256]
  4463b8:	strb	w24, [x19, x8]
  4463bc:	strb	w24, [x19, #264]
  4463c0:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4463c4:	ldr	x8, [x19, #256]
  4463c8:	ldrb	w24, [x23, x22]
  4463cc:	cmp	x8, #0xff
  4463d0:	b.ne	4463a8 <feof@plt+0x439d8>  // b.any
  4463d4:	ldp	x8, x2, [x19, #272]
  4463d8:	mov	w1, #0xff                  	// #255
  4463dc:	mov	x0, x19
  4463e0:	strb	wzr, [x19, #255]
  4463e4:	blr	x8
  4463e8:	ldr	x9, [x19, #320]
  4463ec:	mov	x8, xzr
  4463f0:	str	xzr, [x19, #256]
  4463f4:	add	x9, x9, #0x1
  4463f8:	str	x9, [x19, #320]
  4463fc:	b	4463a8 <feof@plt+0x439d8>
  446400:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446404:	mov	x22, xzr
  446408:	add	x23, x23, #0x542
  44640c:	b	44642c <feof@plt+0x43a5c>
  446410:	add	x22, x22, #0x1
  446414:	add	x9, x8, #0x1
  446418:	cmp	x22, #0x15
  44641c:	str	x9, [x19, #256]
  446420:	strb	w24, [x19, x8]
  446424:	strb	w24, [x19, #264]
  446428:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  44642c:	ldr	x8, [x19, #256]
  446430:	ldrb	w24, [x23, x22]
  446434:	cmp	x8, #0xff
  446438:	b.ne	446410 <feof@plt+0x43a40>  // b.any
  44643c:	ldp	x8, x2, [x19, #272]
  446440:	mov	w1, #0xff                  	// #255
  446444:	mov	x0, x19
  446448:	strb	wzr, [x19, #255]
  44644c:	blr	x8
  446450:	ldr	x9, [x19, #320]
  446454:	mov	x8, xzr
  446458:	str	xzr, [x19, #256]
  44645c:	add	x9, x9, #0x1
  446460:	str	x9, [x19, #320]
  446464:	b	446410 <feof@plt+0x43a40>
  446468:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44646c:	mov	x22, xzr
  446470:	add	x23, x23, #0x546
  446474:	b	446494 <feof@plt+0x43ac4>
  446478:	add	x22, x22, #0x1
  44647c:	add	x9, x8, #0x1
  446480:	cmp	x22, #0x11
  446484:	str	x9, [x19, #256]
  446488:	strb	w24, [x19, x8]
  44648c:	strb	w24, [x19, #264]
  446490:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  446494:	ldr	x8, [x19, #256]
  446498:	ldrb	w24, [x23, x22]
  44649c:	cmp	x8, #0xff
  4464a0:	b.ne	446478 <feof@plt+0x43aa8>  // b.any
  4464a4:	ldp	x8, x2, [x19, #272]
  4464a8:	mov	w1, #0xff                  	// #255
  4464ac:	mov	x0, x19
  4464b0:	strb	wzr, [x19, #255]
  4464b4:	blr	x8
  4464b8:	ldr	x9, [x19, #320]
  4464bc:	mov	x8, xzr
  4464c0:	str	xzr, [x19, #256]
  4464c4:	add	x9, x9, #0x1
  4464c8:	str	x9, [x19, #320]
  4464cc:	b	446478 <feof@plt+0x43aa8>
  4464d0:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4464d4:	mov	x22, xzr
  4464d8:	add	x23, x23, #0x558
  4464dc:	b	4464fc <feof@plt+0x43b2c>
  4464e0:	add	x22, x22, #0x1
  4464e4:	add	x9, x8, #0x1
  4464e8:	cmp	x22, #0x1a
  4464ec:	str	x9, [x19, #256]
  4464f0:	strb	w24, [x19, x8]
  4464f4:	strb	w24, [x19, #264]
  4464f8:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4464fc:	ldr	x8, [x19, #256]
  446500:	ldrb	w24, [x23, x22]
  446504:	cmp	x8, #0xff
  446508:	b.ne	4464e0 <feof@plt+0x43b10>  // b.any
  44650c:	ldp	x8, x2, [x19, #272]
  446510:	mov	w1, #0xff                  	// #255
  446514:	mov	x0, x19
  446518:	strb	wzr, [x19, #255]
  44651c:	blr	x8
  446520:	ldr	x9, [x19, #320]
  446524:	mov	x8, xzr
  446528:	str	xzr, [x19, #256]
  44652c:	add	x9, x9, #0x1
  446530:	str	x9, [x19, #320]
  446534:	b	4464e0 <feof@plt+0x43b10>
  446538:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44653c:	mov	x22, xzr
  446540:	add	x23, x23, #0x573
  446544:	b	446564 <feof@plt+0x43b94>
  446548:	add	x22, x22, #0x1
  44654c:	add	x9, x8, #0x1
  446550:	cmp	x22, #0xf
  446554:	str	x9, [x19, #256]
  446558:	strb	w24, [x19, x8]
  44655c:	strb	w24, [x19, #264]
  446560:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  446564:	ldr	x8, [x19, #256]
  446568:	ldrb	w24, [x23, x22]
  44656c:	cmp	x8, #0xff
  446570:	b.ne	446548 <feof@plt+0x43b78>  // b.any
  446574:	ldp	x8, x2, [x19, #272]
  446578:	mov	w1, #0xff                  	// #255
  44657c:	mov	x0, x19
  446580:	strb	wzr, [x19, #255]
  446584:	blr	x8
  446588:	ldr	x9, [x19, #320]
  44658c:	mov	x8, xzr
  446590:	str	xzr, [x19, #256]
  446594:	add	x9, x9, #0x1
  446598:	str	x9, [x19, #320]
  44659c:	b	446548 <feof@plt+0x43b78>
  4465a0:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4465a4:	mov	x22, xzr
  4465a8:	add	x23, x23, #0x583
  4465ac:	b	4465cc <feof@plt+0x43bfc>
  4465b0:	add	x22, x22, #0x1
  4465b4:	add	x9, x8, #0x1
  4465b8:	cmp	x22, #0x13
  4465bc:	str	x9, [x19, #256]
  4465c0:	strb	w24, [x19, x8]
  4465c4:	strb	w24, [x19, #264]
  4465c8:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4465cc:	ldr	x8, [x19, #256]
  4465d0:	ldrb	w24, [x23, x22]
  4465d4:	cmp	x8, #0xff
  4465d8:	b.ne	4465b0 <feof@plt+0x43be0>  // b.any
  4465dc:	ldp	x8, x2, [x19, #272]
  4465e0:	mov	w1, #0xff                  	// #255
  4465e4:	mov	x0, x19
  4465e8:	strb	wzr, [x19, #255]
  4465ec:	blr	x8
  4465f0:	ldr	x9, [x19, #320]
  4465f4:	mov	x8, xzr
  4465f8:	str	xzr, [x19, #256]
  4465fc:	add	x9, x9, #0x1
  446600:	str	x9, [x19, #320]
  446604:	b	4465b0 <feof@plt+0x43be0>
  446608:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44660c:	mov	x22, xzr
  446610:	add	x23, x23, #0x597
  446614:	b	446634 <feof@plt+0x43c64>
  446618:	add	x22, x22, #0x1
  44661c:	add	x9, x8, #0x1
  446620:	cmp	x22, #0x16
  446624:	str	x9, [x19, #256]
  446628:	strb	w24, [x19, x8]
  44662c:	strb	w24, [x19, #264]
  446630:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  446634:	ldr	x8, [x19, #256]
  446638:	ldrb	w24, [x23, x22]
  44663c:	cmp	x8, #0xff
  446640:	b.ne	446618 <feof@plt+0x43c48>  // b.any
  446644:	ldp	x8, x2, [x19, #272]
  446648:	mov	w1, #0xff                  	// #255
  44664c:	mov	x0, x19
  446650:	strb	wzr, [x19, #255]
  446654:	blr	x8
  446658:	ldr	x9, [x19, #320]
  44665c:	mov	x8, xzr
  446660:	str	xzr, [x19, #256]
  446664:	add	x9, x9, #0x1
  446668:	str	x9, [x19, #320]
  44666c:	b	446618 <feof@plt+0x43c48>
  446670:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446674:	mov	x22, xzr
  446678:	add	x23, x23, #0x5ae
  44667c:	b	44669c <feof@plt+0x43ccc>
  446680:	add	x22, x22, #0x1
  446684:	add	x9, x8, #0x1
  446688:	cmp	x22, #0x19
  44668c:	str	x9, [x19, #256]
  446690:	strb	w24, [x19, x8]
  446694:	strb	w24, [x19, #264]
  446698:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  44669c:	ldr	x8, [x19, #256]
  4466a0:	ldrb	w24, [x23, x22]
  4466a4:	cmp	x8, #0xff
  4466a8:	b.ne	446680 <feof@plt+0x43cb0>  // b.any
  4466ac:	ldp	x8, x2, [x19, #272]
  4466b0:	mov	w1, #0xff                  	// #255
  4466b4:	mov	x0, x19
  4466b8:	strb	wzr, [x19, #255]
  4466bc:	blr	x8
  4466c0:	ldr	x9, [x19, #320]
  4466c4:	mov	x8, xzr
  4466c8:	str	xzr, [x19, #256]
  4466cc:	add	x9, x9, #0x1
  4466d0:	str	x9, [x19, #320]
  4466d4:	b	446680 <feof@plt+0x43cb0>
  4466d8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4466dc:	mov	x22, xzr
  4466e0:	add	x23, x23, #0x5c8
  4466e4:	b	446704 <feof@plt+0x43d34>
  4466e8:	add	x22, x22, #0x1
  4466ec:	add	x9, x8, #0x1
  4466f0:	cmp	x22, #0x15
  4466f4:	str	x9, [x19, #256]
  4466f8:	strb	w24, [x19, x8]
  4466fc:	strb	w24, [x19, #264]
  446700:	b.eq	447ca4 <feof@plt+0x452d4>  // b.none
  446704:	ldr	x8, [x19, #256]
  446708:	ldrb	w24, [x23, x22]
  44670c:	cmp	x8, #0xff
  446710:	b.ne	4466e8 <feof@plt+0x43d18>  // b.any
  446714:	ldp	x8, x2, [x19, #272]
  446718:	mov	w1, #0xff                  	// #255
  44671c:	mov	x0, x19
  446720:	strb	wzr, [x19, #255]
  446724:	blr	x8
  446728:	ldr	x9, [x19, #320]
  44672c:	mov	x8, xzr
  446730:	str	xzr, [x19, #256]
  446734:	add	x9, x9, #0x1
  446738:	str	x9, [x19, #320]
  44673c:	b	4466e8 <feof@plt+0x43d18>
  446740:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446744:	mov	x22, xzr
  446748:	add	x23, x23, #0x5de
  44674c:	b	44676c <feof@plt+0x43d9c>
  446750:	add	x22, x22, #0x1
  446754:	add	x9, x8, #0x1
  446758:	cmp	x22, #0x11
  44675c:	str	x9, [x19, #256]
  446760:	strb	w24, [x19, x8]
  446764:	strb	w24, [x19, #264]
  446768:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  44676c:	ldr	x8, [x19, #256]
  446770:	ldrb	w24, [x23, x22]
  446774:	cmp	x8, #0xff
  446778:	b.ne	446750 <feof@plt+0x43d80>  // b.any
  44677c:	ldp	x8, x2, [x19, #272]
  446780:	mov	w1, #0xff                  	// #255
  446784:	mov	x0, x19
  446788:	strb	wzr, [x19, #255]
  44678c:	blr	x8
  446790:	ldr	x9, [x19, #320]
  446794:	mov	x8, xzr
  446798:	str	xzr, [x19, #256]
  44679c:	add	x9, x9, #0x1
  4467a0:	str	x9, [x19, #320]
  4467a4:	b	446750 <feof@plt+0x43d80>
  4467a8:	ldrsw	x20, [x21, #16]
  4467ac:	cbz	w20, 447e5c <feof@plt+0x4548c>
  4467b0:	ldr	x21, [x21, #8]
  4467b4:	b	4467d4 <feof@plt+0x43e04>
  4467b8:	add	x9, x8, #0x1
  4467bc:	subs	x20, x20, #0x1
  4467c0:	add	x21, x21, #0x1
  4467c4:	str	x9, [x19, #256]
  4467c8:	strb	w22, [x19, x8]
  4467cc:	strb	w22, [x19, #264]
  4467d0:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  4467d4:	ldr	x8, [x19, #256]
  4467d8:	ldrb	w22, [x21]
  4467dc:	cmp	x8, #0xff
  4467e0:	b.ne	4467b8 <feof@plt+0x43de8>  // b.any
  4467e4:	ldp	x8, x2, [x19, #272]
  4467e8:	mov	w1, #0xff                  	// #255
  4467ec:	mov	x0, x19
  4467f0:	strb	wzr, [x19, #255]
  4467f4:	blr	x8
  4467f8:	ldr	x9, [x19, #320]
  4467fc:	mov	x8, xzr
  446800:	str	xzr, [x19, #256]
  446804:	add	x9, x9, #0x1
  446808:	str	x9, [x19, #320]
  44680c:	b	4467b8 <feof@plt+0x43de8>
  446810:	ldr	x8, [x21, #8]
  446814:	tbnz	w20, #2, 448510 <feof@plt+0x45b40>
  446818:	ldrsw	x20, [x8, #8]
  44681c:	cbz	w20, 447e5c <feof@plt+0x4548c>
  446820:	ldr	x21, [x8]
  446824:	b	446844 <feof@plt+0x43e74>
  446828:	add	x9, x8, #0x1
  44682c:	subs	x20, x20, #0x1
  446830:	add	x21, x21, #0x1
  446834:	str	x9, [x19, #256]
  446838:	strb	w22, [x19, x8]
  44683c:	strb	w22, [x19, #264]
  446840:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  446844:	ldr	x8, [x19, #256]
  446848:	ldrb	w22, [x21]
  44684c:	cmp	x8, #0xff
  446850:	b.ne	446828 <feof@plt+0x43e58>  // b.any
  446854:	ldp	x8, x2, [x19, #272]
  446858:	mov	w1, #0xff                  	// #255
  44685c:	mov	x0, x19
  446860:	strb	wzr, [x19, #255]
  446864:	blr	x8
  446868:	ldr	x9, [x19, #320]
  44686c:	mov	x8, xzr
  446870:	str	xzr, [x19, #256]
  446874:	add	x9, x9, #0x1
  446878:	str	x9, [x19, #320]
  44687c:	b	446828 <feof@plt+0x43e58>
  446880:	tbnz	w20, #5, 448578 <feof@plt+0x45ba8>
  446884:	tbnz	w20, #6, 446920 <feof@plt+0x43f50>
  446888:	ldr	x8, [x21, #8]
  44688c:	cbz	x8, 446920 <feof@plt+0x43f50>
  446890:	ldr	x8, [x19, #296]
  446894:	add	x9, sp, #0x10
  446898:	stp	x8, x21, [sp, #16]
  44689c:	str	x9, [x19, #296]
  4468a0:	str	wzr, [sp, #32]
  4468a4:	ldr	x9, [x19, #288]
  4468a8:	str	x9, [sp, #40]
  4468ac:	ldr	x22, [x21, #8]
  4468b0:	cbz	x22, 4468cc <feof@plt+0x43efc>
  4468b4:	ldr	w9, [x22, #4]
  4468b8:	cmp	w9, #0x1
  4468bc:	b.gt	4468cc <feof@plt+0x43efc>
  4468c0:	ldr	w10, [x19, #308]
  4468c4:	cmp	w10, #0x401
  4468c8:	b.lt	44a2a0 <feof@plt+0x478d0>  // b.tstop
  4468cc:	mov	w9, #0x1                   	// #1
  4468d0:	str	w9, [x19, #304]
  4468d4:	str	x8, [x19, #296]
  4468d8:	ldr	x8, [x19, #256]
  4468dc:	cmp	x8, #0xff
  4468e0:	b.ne	44690c <feof@plt+0x43f3c>  // b.any
  4468e4:	ldp	x8, x2, [x19, #272]
  4468e8:	mov	w1, #0xff                  	// #255
  4468ec:	mov	x0, x19
  4468f0:	strb	wzr, [x19, #255]
  4468f4:	blr	x8
  4468f8:	ldr	x9, [x19, #320]
  4468fc:	mov	x8, xzr
  446900:	str	xzr, [x19, #256]
  446904:	add	x9, x9, #0x1
  446908:	str	x9, [x19, #320]
  44690c:	add	x9, x8, #0x1
  446910:	mov	w10, #0x20                  	// #32
  446914:	str	x9, [x19, #256]
  446918:	strb	w10, [x19, x8]
  44691c:	strb	w10, [x19, #264]
  446920:	ldr	x3, [x19, #296]
  446924:	and	w1, w20, #0xffffff9f
  446928:	mov	x0, x19
  44692c:	mov	x2, x21
  446930:	bl	44c588 <feof@plt+0x49bb8>
  446934:	b	447e5c <feof@plt+0x4548c>
  446938:	ldp	x9, x22, [x19, #288]
  44693c:	add	x8, sp, #0x10
  446940:	stp	x22, x21, [sp, #16]
  446944:	str	x8, [x19, #296]
  446948:	str	x9, [sp, #40]
  44694c:	mov	w9, #0x1                   	// #1
  446950:	str	wzr, [sp, #32]
  446954:	cbz	x22, 44891c <feof@plt+0x45f4c>
  446958:	add	x11, sp, #0x10
  44695c:	mov	w24, #0x1                   	// #1
  446960:	mov	x10, x22
  446964:	b	446994 <feof@plt+0x43fc4>
  446968:	ldp	q0, q1, [x10]
  44696c:	mov	w12, w24
  446970:	add	x12, x8, x12, lsl #5
  446974:	add	w24, w24, #0x1
  446978:	stp	q0, q1, [x12]
  44697c:	str	x11, [x12]
  446980:	mov	x11, x12
  446984:	str	x12, [x19, #296]
  446988:	str	w9, [x10, #16]
  44698c:	ldr	x10, [x10]
  446990:	cbz	x10, 448920 <feof@plt+0x45f50>
  446994:	ldr	x12, [x10, #8]
  446998:	ldr	w12, [x12]
  44699c:	sub	w12, w12, #0x19
  4469a0:	cmp	w12, #0x2
  4469a4:	b.hi	448920 <feof@plt+0x45f50>  // b.pmore
  4469a8:	ldr	w12, [x10, #16]
  4469ac:	cbnz	w12, 44698c <feof@plt+0x43fbc>
  4469b0:	cmp	w24, #0x4
  4469b4:	b.cc	446968 <feof@plt+0x43f98>  // b.lo, b.ul, b.last
  4469b8:	b	447e54 <feof@plt+0x45484>
  4469bc:	ldrh	w8, [x21, #18]
  4469c0:	cbz	w8, 446b2c <feof@plt+0x4415c>
  4469c4:	ldr	x8, [x19, #256]
  4469c8:	cmp	x8, #0xff
  4469cc:	b.ne	4469f8 <feof@plt+0x44028>  // b.any
  4469d0:	ldp	x8, x2, [x19, #272]
  4469d4:	mov	w1, #0xff                  	// #255
  4469d8:	mov	x0, x19
  4469dc:	strb	wzr, [x19, #255]
  4469e0:	blr	x8
  4469e4:	ldr	x9, [x19, #320]
  4469e8:	mov	x8, xzr
  4469ec:	str	xzr, [x19, #256]
  4469f0:	add	x9, x9, #0x1
  4469f4:	str	x9, [x19, #320]
  4469f8:	add	x9, x8, #0x1
  4469fc:	mov	w10, #0x5f                  	// #95
  446a00:	str	x9, [x19, #256]
  446a04:	strb	w10, [x19, x8]
  446a08:	ldr	x8, [x19, #256]
  446a0c:	strb	w10, [x19, #264]
  446a10:	cmp	x8, #0xff
  446a14:	b.ne	446a40 <feof@plt+0x44070>  // b.any
  446a18:	ldp	x8, x2, [x19, #272]
  446a1c:	mov	w1, #0xff                  	// #255
  446a20:	mov	x0, x19
  446a24:	strb	wzr, [x19, #255]
  446a28:	blr	x8
  446a2c:	ldr	x9, [x19, #320]
  446a30:	mov	x8, xzr
  446a34:	str	xzr, [x19, #256]
  446a38:	add	x9, x9, #0x1
  446a3c:	str	x9, [x19, #320]
  446a40:	add	x9, x8, #0x1
  446a44:	mov	w10, #0x53                  	// #83
  446a48:	str	x9, [x19, #256]
  446a4c:	strb	w10, [x19, x8]
  446a50:	ldr	x8, [x19, #256]
  446a54:	strb	w10, [x19, #264]
  446a58:	cmp	x8, #0xff
  446a5c:	b.ne	446a88 <feof@plt+0x440b8>  // b.any
  446a60:	ldp	x8, x2, [x19, #272]
  446a64:	mov	w1, #0xff                  	// #255
  446a68:	mov	x0, x19
  446a6c:	strb	wzr, [x19, #255]
  446a70:	blr	x8
  446a74:	ldr	x9, [x19, #320]
  446a78:	mov	x8, xzr
  446a7c:	str	xzr, [x19, #256]
  446a80:	add	x9, x9, #0x1
  446a84:	str	x9, [x19, #320]
  446a88:	add	x9, x8, #0x1
  446a8c:	mov	w10, #0x61                  	// #97
  446a90:	str	x9, [x19, #256]
  446a94:	strb	w10, [x19, x8]
  446a98:	ldr	x8, [x19, #256]
  446a9c:	strb	w10, [x19, #264]
  446aa0:	cmp	x8, #0xff
  446aa4:	b.ne	446ad0 <feof@plt+0x44100>  // b.any
  446aa8:	ldp	x8, x2, [x19, #272]
  446aac:	mov	w1, #0xff                  	// #255
  446ab0:	mov	x0, x19
  446ab4:	strb	wzr, [x19, #255]
  446ab8:	blr	x8
  446abc:	ldr	x9, [x19, #320]
  446ac0:	mov	x8, xzr
  446ac4:	str	xzr, [x19, #256]
  446ac8:	add	x9, x9, #0x1
  446acc:	str	x9, [x19, #320]
  446ad0:	add	x9, x8, #0x1
  446ad4:	mov	w10, #0x74                  	// #116
  446ad8:	str	x9, [x19, #256]
  446adc:	strb	w10, [x19, x8]
  446ae0:	ldr	x8, [x19, #256]
  446ae4:	strb	w10, [x19, #264]
  446ae8:	cmp	x8, #0xff
  446aec:	b.ne	446b18 <feof@plt+0x44148>  // b.any
  446af0:	ldp	x8, x2, [x19, #272]
  446af4:	mov	w1, #0xff                  	// #255
  446af8:	mov	x0, x19
  446afc:	strb	wzr, [x19, #255]
  446b00:	blr	x8
  446b04:	ldr	x9, [x19, #320]
  446b08:	mov	x8, xzr
  446b0c:	str	xzr, [x19, #256]
  446b10:	add	x9, x9, #0x1
  446b14:	str	x9, [x19, #320]
  446b18:	add	x9, x8, #0x1
  446b1c:	mov	w10, #0x20                  	// #32
  446b20:	str	x9, [x19, #256]
  446b24:	strb	w10, [x19, x8]
  446b28:	strb	w10, [x19, #264]
  446b2c:	ldr	x22, [x21, #8]
  446b30:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  446b34:	add	x9, x9, #0xc50
  446b38:	ldr	x8, [x22, #8]
  446b3c:	cmp	x8, x9
  446b40:	b.eq	446bb0 <feof@plt+0x441e0>  // b.none
  446b44:	cbz	x22, 446b60 <feof@plt+0x44190>
  446b48:	ldr	w8, [x22, #4]
  446b4c:	cmp	w8, #0x1
  446b50:	b.gt	446b60 <feof@plt+0x44190>
  446b54:	ldr	w9, [x19, #308]
  446b58:	cmp	w9, #0x401
  446b5c:	b.lt	449ae4 <feof@plt+0x47114>  // b.tstop
  446b60:	mov	w8, #0x1                   	// #1
  446b64:	str	w8, [x25]
  446b68:	ldr	x8, [x19, #256]
  446b6c:	cmp	x8, #0xff
  446b70:	b.ne	446b9c <feof@plt+0x441cc>  // b.any
  446b74:	ldp	x8, x2, [x19, #272]
  446b78:	mov	w1, #0xff                  	// #255
  446b7c:	mov	x0, x19
  446b80:	strb	wzr, [x19, #255]
  446b84:	blr	x8
  446b88:	ldr	x9, [x19, #320]
  446b8c:	mov	x8, xzr
  446b90:	str	xzr, [x19, #256]
  446b94:	add	x9, x9, #0x1
  446b98:	str	x9, [x19, #320]
  446b9c:	add	x9, x8, #0x1
  446ba0:	mov	w10, #0x20                  	// #32
  446ba4:	str	x9, [x19, #256]
  446ba8:	strb	w10, [x19, x8]
  446bac:	strb	w10, [x19, #264]
  446bb0:	ldr	x8, [x19, #256]
  446bb4:	ldrh	w9, [x21, #16]
  446bb8:	cmp	x8, #0xff
  446bbc:	cbz	w9, 4489a4 <feof@plt+0x45fd4>
  446bc0:	b.ne	446bec <feof@plt+0x4421c>  // b.any
  446bc4:	ldp	x8, x2, [x19, #272]
  446bc8:	mov	w1, #0xff                  	// #255
  446bcc:	mov	x0, x19
  446bd0:	strb	wzr, [x19, #255]
  446bd4:	blr	x8
  446bd8:	ldr	x9, [x19, #320]
  446bdc:	mov	x8, xzr
  446be0:	str	xzr, [x19, #256]
  446be4:	add	x9, x9, #0x1
  446be8:	str	x9, [x19, #320]
  446bec:	add	x9, x8, #0x1
  446bf0:	mov	w10, #0x5f                  	// #95
  446bf4:	str	x9, [x19, #256]
  446bf8:	strb	w10, [x19, x8]
  446bfc:	ldr	x8, [x19, #256]
  446c00:	strb	w10, [x19, #264]
  446c04:	cmp	x8, #0xff
  446c08:	b.ne	446c34 <feof@plt+0x44264>  // b.any
  446c0c:	ldp	x8, x2, [x19, #272]
  446c10:	mov	w1, #0xff                  	// #255
  446c14:	mov	x0, x19
  446c18:	strb	wzr, [x19, #255]
  446c1c:	blr	x8
  446c20:	ldr	x9, [x19, #320]
  446c24:	mov	x8, xzr
  446c28:	str	xzr, [x19, #256]
  446c2c:	add	x9, x9, #0x1
  446c30:	str	x9, [x19, #320]
  446c34:	add	x9, x8, #0x1
  446c38:	mov	w10, #0x41                  	// #65
  446c3c:	str	x9, [x19, #256]
  446c40:	strb	w10, [x19, x8]
  446c44:	ldr	x8, [x19, #256]
  446c48:	strb	w10, [x19, #264]
  446c4c:	cmp	x8, #0xff
  446c50:	b.ne	446c7c <feof@plt+0x442ac>  // b.any
  446c54:	ldp	x8, x2, [x19, #272]
  446c58:	mov	w1, #0xff                  	// #255
  446c5c:	mov	x0, x19
  446c60:	strb	wzr, [x19, #255]
  446c64:	blr	x8
  446c68:	ldr	x9, [x19, #320]
  446c6c:	mov	x8, xzr
  446c70:	str	xzr, [x19, #256]
  446c74:	add	x9, x9, #0x1
  446c78:	str	x9, [x19, #320]
  446c7c:	add	x9, x8, #0x1
  446c80:	mov	w20, #0x63                  	// #99
  446c84:	str	x9, [x19, #256]
  446c88:	strb	w20, [x19, x8]
  446c8c:	ldr	x8, [x19, #256]
  446c90:	strb	w20, [x19, #264]
  446c94:	cmp	x8, #0xff
  446c98:	b.ne	446cc4 <feof@plt+0x442f4>  // b.any
  446c9c:	ldp	x8, x2, [x19, #272]
  446ca0:	mov	w1, #0xff                  	// #255
  446ca4:	mov	x0, x19
  446ca8:	strb	wzr, [x19, #255]
  446cac:	blr	x8
  446cb0:	ldr	x9, [x19, #320]
  446cb4:	mov	x8, xzr
  446cb8:	str	xzr, [x19, #256]
  446cbc:	add	x9, x9, #0x1
  446cc0:	str	x9, [x19, #320]
  446cc4:	add	x9, x8, #0x1
  446cc8:	str	x9, [x19, #256]
  446ccc:	strb	w20, [x19, x8]
  446cd0:	ldr	x8, [x19, #256]
  446cd4:	strb	w20, [x19, #264]
  446cd8:	cmp	x8, #0xff
  446cdc:	b.ne	446d08 <feof@plt+0x44338>  // b.any
  446ce0:	ldp	x8, x2, [x19, #272]
  446ce4:	mov	w1, #0xff                  	// #255
  446ce8:	mov	x0, x19
  446cec:	strb	wzr, [x19, #255]
  446cf0:	blr	x8
  446cf4:	ldr	x9, [x19, #320]
  446cf8:	mov	x8, xzr
  446cfc:	str	xzr, [x19, #256]
  446d00:	add	x9, x9, #0x1
  446d04:	str	x9, [x19, #320]
  446d08:	add	x9, x8, #0x1
  446d0c:	mov	w10, #0x75                  	// #117
  446d10:	str	x9, [x19, #256]
  446d14:	strb	w10, [x19, x8]
  446d18:	ldr	x8, [x19, #256]
  446d1c:	strb	w10, [x19, #264]
  446d20:	cmp	x8, #0xff
  446d24:	b.ne	446d50 <feof@plt+0x44380>  // b.any
  446d28:	ldp	x8, x2, [x19, #272]
  446d2c:	mov	w1, #0xff                  	// #255
  446d30:	mov	x0, x19
  446d34:	strb	wzr, [x19, #255]
  446d38:	blr	x8
  446d3c:	ldr	x9, [x19, #320]
  446d40:	mov	x8, xzr
  446d44:	str	xzr, [x19, #256]
  446d48:	add	x9, x9, #0x1
  446d4c:	str	x9, [x19, #320]
  446d50:	add	x9, x8, #0x1
  446d54:	mov	w10, #0x6d                  	// #109
  446d58:	b	44a750 <feof@plt+0x47d80>
  446d5c:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446d60:	mov	x22, xzr
  446d64:	add	x23, x23, #0x4cf
  446d68:	b	446d88 <feof@plt+0x443b8>
  446d6c:	add	x22, x22, #0x1
  446d70:	add	x9, x8, #0x1
  446d74:	cmp	x22, #0x1e
  446d78:	str	x9, [x19, #256]
  446d7c:	strb	w24, [x19, x8]
  446d80:	strb	w24, [x19, #264]
  446d84:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  446d88:	ldr	x8, [x19, #256]
  446d8c:	ldrb	w24, [x23, x22]
  446d90:	cmp	x8, #0xff
  446d94:	b.ne	446d6c <feof@plt+0x4439c>  // b.any
  446d98:	ldp	x8, x2, [x19, #272]
  446d9c:	mov	w1, #0xff                  	// #255
  446da0:	mov	x0, x19
  446da4:	strb	wzr, [x19, #255]
  446da8:	blr	x8
  446dac:	ldr	x9, [x19, #320]
  446db0:	mov	x8, xzr
  446db4:	str	xzr, [x19, #256]
  446db8:	add	x9, x9, #0x1
  446dbc:	str	x9, [x19, #320]
  446dc0:	b	446d6c <feof@plt+0x4439c>
  446dc4:	ldp	x22, x21, [x21, #8]
  446dc8:	cbz	x22, 4494f4 <feof@plt+0x46b24>
  446dcc:	ldr	w8, [x22, #4]
  446dd0:	cmp	w8, #0x1
  446dd4:	b.gt	446de4 <feof@plt+0x44414>
  446dd8:	ldr	w9, [x19, #308]
  446ddc:	cmp	w9, #0x401
  446de0:	b.lt	4494a4 <feof@plt+0x46ad4>  // b.tstop
  446de4:	mov	w8, #0x1                   	// #1
  446de8:	str	w8, [x25]
  446dec:	b	4494f4 <feof@plt+0x46b24>
  446df0:	ldr	x21, [x21, #8]
  446df4:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0xba68>
  446df8:	mov	x22, xzr
  446dfc:	add	x23, x23, #0xa27
  446e00:	ldrsw	x20, [x21, #16]
  446e04:	b	446e24 <feof@plt+0x44454>
  446e08:	add	x22, x22, #0x1
  446e0c:	add	x9, x8, #0x1
  446e10:	cmp	x22, #0x8
  446e14:	str	x9, [x19, #256]
  446e18:	strb	w24, [x19, x8]
  446e1c:	strb	w24, [x19, #264]
  446e20:	b.eq	447ed4 <feof@plt+0x45504>  // b.none
  446e24:	ldr	x8, [x19, #256]
  446e28:	ldrb	w24, [x23, x22]
  446e2c:	cmp	x8, #0xff
  446e30:	b.ne	446e08 <feof@plt+0x44438>  // b.any
  446e34:	ldp	x8, x2, [x19, #272]
  446e38:	mov	w1, #0xff                  	// #255
  446e3c:	mov	x0, x19
  446e40:	strb	wzr, [x19, #255]
  446e44:	blr	x8
  446e48:	ldr	x9, [x19, #320]
  446e4c:	mov	x8, xzr
  446e50:	str	xzr, [x19, #256]
  446e54:	add	x9, x9, #0x1
  446e58:	str	x9, [x19, #320]
  446e5c:	b	446e08 <feof@plt+0x44438>
  446e60:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446e64:	mov	x22, xzr
  446e68:	add	x23, x23, #0x60b
  446e6c:	b	446e8c <feof@plt+0x444bc>
  446e70:	add	x22, x22, #0x1
  446e74:	add	x9, x8, #0x1
  446e78:	cmp	x22, #0x9
  446e7c:	str	x9, [x19, #256]
  446e80:	strb	w24, [x19, x8]
  446e84:	strb	w24, [x19, #264]
  446e88:	b.eq	447c98 <feof@plt+0x452c8>  // b.none
  446e8c:	ldr	x8, [x19, #256]
  446e90:	ldrb	w24, [x23, x22]
  446e94:	cmp	x8, #0xff
  446e98:	b.ne	446e70 <feof@plt+0x444a0>  // b.any
  446e9c:	ldp	x8, x2, [x19, #272]
  446ea0:	mov	w1, #0xff                  	// #255
  446ea4:	mov	x0, x19
  446ea8:	strb	wzr, [x19, #255]
  446eac:	blr	x8
  446eb0:	ldr	x9, [x19, #320]
  446eb4:	mov	x8, xzr
  446eb8:	str	xzr, [x19, #256]
  446ebc:	add	x9, x9, #0x1
  446ec0:	str	x9, [x19, #320]
  446ec4:	b	446e70 <feof@plt+0x444a0>
  446ec8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  446ecc:	mov	x22, xzr
  446ed0:	add	x23, x23, #0x60b
  446ed4:	b	446ef4 <feof@plt+0x44524>
  446ed8:	add	x22, x22, #0x1
  446edc:	add	x9, x8, #0x1
  446ee0:	cmp	x22, #0x9
  446ee4:	str	x9, [x19, #256]
  446ee8:	strb	w24, [x19, x8]
  446eec:	strb	w24, [x19, #264]
  446ef0:	b.eq	447fa8 <feof@plt+0x455d8>  // b.none
  446ef4:	ldr	x8, [x19, #256]
  446ef8:	ldrb	w24, [x23, x22]
  446efc:	cmp	x8, #0xff
  446f00:	b.ne	446ed8 <feof@plt+0x44508>  // b.any
  446f04:	ldp	x8, x2, [x19, #272]
  446f08:	mov	w1, #0xff                  	// #255
  446f0c:	mov	x0, x19
  446f10:	strb	wzr, [x19, #255]
  446f14:	blr	x8
  446f18:	ldr	x9, [x19, #320]
  446f1c:	mov	x8, xzr
  446f20:	str	xzr, [x19, #256]
  446f24:	add	x9, x9, #0x1
  446f28:	str	x9, [x19, #320]
  446f2c:	b	446ed8 <feof@plt+0x44508>
  446f30:	ldr	x21, [x21, #8]
  446f34:	ldr	w8, [x21]
  446f38:	cmp	w8, #0x32
  446f3c:	b.ne	448f5c <feof@plt+0x4658c>  // b.any
  446f40:	ldr	x8, [x21, #8]
  446f44:	ldrsw	x20, [x8, #16]
  446f48:	cbz	w20, 447e5c <feof@plt+0x4548c>
  446f4c:	ldr	x21, [x8, #8]
  446f50:	b	446f70 <feof@plt+0x445a0>
  446f54:	add	x9, x8, #0x1
  446f58:	subs	x20, x20, #0x1
  446f5c:	add	x21, x21, #0x1
  446f60:	str	x9, [x19, #256]
  446f64:	strb	w22, [x19, x8]
  446f68:	strb	w22, [x19, #264]
  446f6c:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  446f70:	ldr	x8, [x19, #256]
  446f74:	ldrb	w22, [x21]
  446f78:	cmp	x8, #0xff
  446f7c:	b.ne	446f54 <feof@plt+0x44584>  // b.any
  446f80:	ldp	x8, x2, [x19, #272]
  446f84:	mov	w1, #0xff                  	// #255
  446f88:	mov	x0, x19
  446f8c:	strb	wzr, [x19, #255]
  446f90:	blr	x8
  446f94:	ldr	x9, [x19, #320]
  446f98:	mov	x8, xzr
  446f9c:	str	xzr, [x19, #256]
  446fa0:	add	x9, x9, #0x1
  446fa4:	str	x9, [x19, #320]
  446fa8:	b	446f54 <feof@plt+0x44584>
  446fac:	ldp	x22, x21, [x21, #8]
  446fb0:	ldr	w8, [x22]
  446fb4:	cmp	w8, #0x34
  446fb8:	b.eq	448b94 <feof@plt+0x461c4>  // b.none
  446fbc:	cmp	w8, #0x32
  446fc0:	b.ne	448c50 <feof@plt+0x46280>  // b.any
  446fc4:	ldr	x24, [x22, #8]
  446fc8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  446fcc:	add	x1, x1, #0x11f
  446fd0:	ldr	x23, [x24]
  446fd4:	mov	x0, x23
  446fd8:	bl	402820 <strcmp@plt>
  446fdc:	cbnz	w0, 44700c <feof@plt+0x4463c>
  446fe0:	ldr	w8, [x21]
  446fe4:	cmp	w8, #0x3
  446fe8:	b.ne	44700c <feof@plt+0x4463c>  // b.any
  446fec:	ldr	x8, [x21, #8]
  446ff0:	ldr	w9, [x8]
  446ff4:	cmp	w9, #0x1
  446ff8:	b.ne	44700c <feof@plt+0x4463c>  // b.any
  446ffc:	ldr	x9, [x21, #16]
  447000:	ldr	w9, [x9]
  447004:	cmp	w9, #0x29
  447008:	csel	x21, x8, x21, eq  // eq = none
  44700c:	ldr	w26, [x21]
  447010:	cmp	w26, #0x39
  447014:	b.ne	449410 <feof@plt+0x46a40>  // b.any
  447018:	ldr	x21, [x21, #8]
  44701c:	ldr	w8, [x21]
  447020:	cmp	w8, #0x31
  447024:	b.hi	44a4b0 <feof@plt+0x47ae0>  // b.pmore
  447028:	mov	w9, #0x1                   	// #1
  44702c:	lsl	x8, x9, x8
  447030:	mov	x9, #0x43                  	// #67
  447034:	movk	x9, #0x2, lsl #48
  447038:	tst	x8, x9
  44703c:	b.eq	44a4b0 <feof@plt+0x47ae0>  // b.none
  447040:	cbz	x21, 44705c <feof@plt+0x4468c>
  447044:	ldr	w8, [x21, #4]
  447048:	cmp	w8, #0x1
  44704c:	b.gt	44705c <feof@plt+0x4468c>
  447050:	ldr	w9, [x19, #308]
  447054:	cmp	w9, #0x401
  447058:	b.lt	44a9c0 <feof@plt+0x47ff0>  // b.tstop
  44705c:	mov	w8, #0x1                   	// #1
  447060:	str	w8, [x25]
  447064:	b	44aa10 <feof@plt+0x48040>
  447068:	ldr	x8, [x21, #16]
  44706c:	ldr	w8, [x8]
  447070:	cmp	w8, #0x39
  447074:	b.ne	447e54 <feof@plt+0x45484>  // b.any
  447078:	ldr	x22, [x21, #8]
  44707c:	ldr	x8, [x22, #8]
  447080:	ldr	x9, [x8]
  447084:	ldrb	w10, [x9, #1]
  447088:	cmp	w10, #0x63
  44708c:	b.ne	4490ec <feof@plt+0x4671c>  // b.any
  447090:	ldrb	w9, [x9]
  447094:	sub	w9, w9, #0x63
  447098:	cmp	w9, #0x10
  44709c:	b.hi	4490ec <feof@plt+0x4671c>  // b.pmore
  4470a0:	mov	w10, #0x1                   	// #1
  4470a4:	lsl	w9, w10, w9
  4470a8:	mov	w10, #0x8003                	// #32771
  4470ac:	movk	w10, #0x1, lsl #16
  4470b0:	tst	w9, w10
  4470b4:	b.eq	4490ec <feof@plt+0x4671c>  // b.none
  4470b8:	ldr	w9, [x22]
  4470bc:	cmp	w9, #0x32
  4470c0:	b.ne	449ac0 <feof@plt+0x470f0>  // b.any
  4470c4:	ldrsw	x22, [x8, #16]
  4470c8:	cbz	w22, 44a5fc <feof@plt+0x47c2c>
  4470cc:	ldr	x23, [x8, #8]
  4470d0:	b	4470f0 <feof@plt+0x44720>
  4470d4:	add	x9, x8, #0x1
  4470d8:	subs	x22, x22, #0x1
  4470dc:	add	x23, x23, #0x1
  4470e0:	str	x9, [x19, #256]
  4470e4:	strb	w24, [x19, x8]
  4470e8:	strb	w24, [x19, #264]
  4470ec:	b.eq	44a5fc <feof@plt+0x47c2c>  // b.none
  4470f0:	ldr	x8, [x19, #256]
  4470f4:	ldrb	w24, [x23]
  4470f8:	cmp	x8, #0xff
  4470fc:	b.ne	4470d4 <feof@plt+0x44704>  // b.any
  447100:	ldp	x8, x2, [x19, #272]
  447104:	mov	w1, #0xff                  	// #255
  447108:	mov	x0, x19
  44710c:	strb	wzr, [x19, #255]
  447110:	blr	x8
  447114:	ldr	x9, [x19, #320]
  447118:	mov	x8, xzr
  44711c:	str	xzr, [x19, #256]
  447120:	add	x9, x9, #0x1
  447124:	str	x9, [x19, #320]
  447128:	b	4470d4 <feof@plt+0x44704>
  44712c:	ldr	x8, [x21, #16]
  447130:	ldr	w9, [x8]
  447134:	cmp	w9, #0x3b
  447138:	b.ne	447e54 <feof@plt+0x45484>  // b.any
  44713c:	ldr	x8, [x8, #16]
  447140:	ldr	w8, [x8]
  447144:	cmp	w8, #0x3c
  447148:	b.ne	447e54 <feof@plt+0x45484>  // b.any
  44714c:	mov	x0, x19
  447150:	mov	w1, w20
  447154:	mov	x2, x21
  447158:	bl	44cc0c <feof@plt+0x4a23c>
  44715c:	cbnz	w0, 447e5c <feof@plt+0x4548c>
  447160:	ldp	x24, x8, [x21, #8]
  447164:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  447168:	add	x1, x1, #0x1e5
  44716c:	ldr	x10, [x24, #8]
  447170:	ldp	x23, x9, [x8, #8]
  447174:	ldr	x0, [x10]
  447178:	ldp	x22, x21, [x9, #8]
  44717c:	bl	402820 <strcmp@plt>
  447180:	cbz	w0, 44a3b8 <feof@plt+0x479e8>
  447184:	ldr	x8, [x19, #256]
  447188:	cmp	x8, #0xff
  44718c:	b.ne	4471b8 <feof@plt+0x447e8>  // b.any
  447190:	ldp	x8, x2, [x19, #272]
  447194:	mov	w1, #0xff                  	// #255
  447198:	mov	x0, x19
  44719c:	strb	wzr, [x19, #255]
  4471a0:	blr	x8
  4471a4:	ldr	x9, [x19, #320]
  4471a8:	mov	x8, xzr
  4471ac:	str	xzr, [x19, #256]
  4471b0:	add	x9, x9, #0x1
  4471b4:	str	x9, [x19, #320]
  4471b8:	add	x9, x8, #0x1
  4471bc:	mov	w10, #0x6e                  	// #110
  4471c0:	str	x9, [x19, #256]
  4471c4:	strb	w10, [x19, x8]
  4471c8:	ldr	x8, [x19, #256]
  4471cc:	strb	w10, [x19, #264]
  4471d0:	cmp	x8, #0xff
  4471d4:	b.ne	447200 <feof@plt+0x44830>  // b.any
  4471d8:	ldp	x8, x2, [x19, #272]
  4471dc:	mov	w1, #0xff                  	// #255
  4471e0:	mov	x0, x19
  4471e4:	strb	wzr, [x19, #255]
  4471e8:	blr	x8
  4471ec:	ldr	x9, [x19, #320]
  4471f0:	mov	x8, xzr
  4471f4:	str	xzr, [x19, #256]
  4471f8:	add	x9, x9, #0x1
  4471fc:	str	x9, [x19, #320]
  447200:	add	x9, x8, #0x1
  447204:	mov	w10, #0x65                  	// #101
  447208:	str	x9, [x19, #256]
  44720c:	strb	w10, [x19, x8]
  447210:	ldr	x8, [x19, #256]
  447214:	strb	w10, [x19, #264]
  447218:	cmp	x8, #0xff
  44721c:	b.ne	447248 <feof@plt+0x44878>  // b.any
  447220:	ldp	x8, x2, [x19, #272]
  447224:	mov	w1, #0xff                  	// #255
  447228:	mov	x0, x19
  44722c:	strb	wzr, [x19, #255]
  447230:	blr	x8
  447234:	ldr	x9, [x19, #320]
  447238:	mov	x8, xzr
  44723c:	str	xzr, [x19, #256]
  447240:	add	x9, x9, #0x1
  447244:	str	x9, [x19, #320]
  447248:	add	x9, x8, #0x1
  44724c:	mov	w10, #0x77                  	// #119
  447250:	str	x9, [x19, #256]
  447254:	strb	w10, [x19, x8]
  447258:	ldr	x8, [x19, #256]
  44725c:	strb	w10, [x19, #264]
  447260:	cmp	x8, #0xff
  447264:	b.ne	447290 <feof@plt+0x448c0>  // b.any
  447268:	ldp	x8, x2, [x19, #272]
  44726c:	mov	w1, #0xff                  	// #255
  447270:	mov	x0, x19
  447274:	strb	wzr, [x19, #255]
  447278:	blr	x8
  44727c:	ldr	x9, [x19, #320]
  447280:	mov	x8, xzr
  447284:	str	xzr, [x19, #256]
  447288:	add	x9, x9, #0x1
  44728c:	str	x9, [x19, #320]
  447290:	add	x9, x8, #0x1
  447294:	mov	w10, #0x20                  	// #32
  447298:	str	x9, [x19, #256]
  44729c:	strb	w10, [x19, x8]
  4472a0:	strb	w10, [x19, #264]
  4472a4:	ldr	x8, [x23, #8]
  4472a8:	cbz	x8, 44b4f8 <feof@plt+0x48b28>
  4472ac:	ldr	w8, [x23]
  4472b0:	cmp	w8, #0x31
  4472b4:	b.hi	44ae6c <feof@plt+0x4849c>  // b.pmore
  4472b8:	mov	w9, #0x1                   	// #1
  4472bc:	lsl	x8, x9, x8
  4472c0:	mov	x9, #0x43                  	// #67
  4472c4:	movk	x9, #0x2, lsl #48
  4472c8:	tst	x8, x9
  4472cc:	b.eq	44ae6c <feof@plt+0x4849c>  // b.none
  4472d0:	ldr	w8, [x23, #4]
  4472d4:	cmp	w8, #0x1
  4472d8:	b.gt	4472e8 <feof@plt+0x44918>
  4472dc:	ldr	w9, [x19, #308]
  4472e0:	cmp	w9, #0x401
  4472e4:	b.lt	44aed8 <feof@plt+0x48508>  // b.tstop
  4472e8:	mov	w8, #0x1                   	// #1
  4472ec:	str	w8, [x25]
  4472f0:	b	44b4b0 <feof@plt+0x48ae0>
  4472f4:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4472f8:	mov	x22, xzr
  4472fc:	add	x23, x23, #0x615
  447300:	b	447320 <feof@plt+0x44950>
  447304:	add	x22, x22, #0x1
  447308:	add	x9, x8, #0x1
  44730c:	cmp	x22, #0xe
  447310:	str	x9, [x19, #256]
  447314:	strb	w24, [x19, x8]
  447318:	strb	w24, [x19, #264]
  44731c:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  447320:	ldr	x8, [x19, #256]
  447324:	ldrb	w24, [x23, x22]
  447328:	cmp	x8, #0xff
  44732c:	b.ne	447304 <feof@plt+0x44934>  // b.any
  447330:	ldp	x8, x2, [x19, #272]
  447334:	mov	w1, #0xff                  	// #255
  447338:	mov	x0, x19
  44733c:	strb	wzr, [x19, #255]
  447340:	blr	x8
  447344:	ldr	x9, [x19, #320]
  447348:	mov	x8, xzr
  44734c:	str	xzr, [x19, #256]
  447350:	add	x9, x9, #0x1
  447354:	str	x9, [x19, #320]
  447358:	b	447304 <feof@plt+0x44934>
  44735c:	ldr	x22, [x21, #8]
  447360:	cbz	x22, 44737c <feof@plt+0x449ac>
  447364:	ldr	w8, [x22, #4]
  447368:	cmp	w8, #0x1
  44736c:	b.gt	44737c <feof@plt+0x449ac>
  447370:	ldr	w9, [x19, #308]
  447374:	cmp	w9, #0x401
  447378:	b.lt	4495a0 <feof@plt+0x46bd0>  // b.tstop
  44737c:	mov	w8, #0x1                   	// #1
  447380:	str	w8, [x25]
  447384:	ldr	x21, [x21, #16]
  447388:	cbnz	x21, 447e3c <feof@plt+0x4546c>
  44738c:	b	447e54 <feof@plt+0x45484>
  447390:	ldr	x8, [x19, #256]
  447394:	ldr	w20, [x21, #8]
  447398:	cmp	x8, #0xff
  44739c:	b.ne	4473c8 <feof@plt+0x449f8>  // b.any
  4473a0:	ldp	x8, x2, [x19, #272]
  4473a4:	mov	w1, #0xff                  	// #255
  4473a8:	mov	x0, x19
  4473ac:	strb	wzr, [x19, #255]
  4473b0:	blr	x8
  4473b4:	ldr	x9, [x19, #320]
  4473b8:	mov	x8, xzr
  4473bc:	str	xzr, [x19, #256]
  4473c0:	add	x9, x9, #0x1
  4473c4:	str	x9, [x19, #320]
  4473c8:	add	x9, x8, #0x1
  4473cc:	str	x9, [x19, #256]
  4473d0:	strb	w20, [x19, x8]
  4473d4:	strb	w20, [x19, #264]
  4473d8:	b	447e5c <feof@plt+0x4548c>
  4473dc:	ldr	w2, [x21, #8]
  4473e0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4473e4:	add	x1, x1, #0x6e9
  4473e8:	add	x0, sp, #0x10
  4473ec:	bl	4025b0 <sprintf@plt>
  4473f0:	add	x0, sp, #0x10
  4473f4:	bl	402420 <strlen@plt>
  4473f8:	cbz	x0, 447e5c <feof@plt+0x4548c>
  4473fc:	mov	x20, x0
  447400:	add	x21, sp, #0x10
  447404:	b	447424 <feof@plt+0x44a54>
  447408:	add	x9, x8, #0x1
  44740c:	subs	x20, x20, #0x1
  447410:	add	x21, x21, #0x1
  447414:	str	x9, [x19, #256]
  447418:	strb	w22, [x19, x8]
  44741c:	strb	w22, [x19, #264]
  447420:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  447424:	ldr	x8, [x19, #256]
  447428:	ldrb	w22, [x21]
  44742c:	cmp	x8, #0xff
  447430:	b.ne	447408 <feof@plt+0x44a38>  // b.any
  447434:	ldp	x8, x2, [x19, #272]
  447438:	mov	w1, #0xff                  	// #255
  44743c:	mov	x0, x19
  447440:	strb	wzr, [x19, #255]
  447444:	blr	x8
  447448:	ldr	x9, [x19, #320]
  44744c:	mov	x8, xzr
  447450:	str	xzr, [x19, #256]
  447454:	add	x9, x9, #0x1
  447458:	str	x9, [x19, #320]
  44745c:	b	447408 <feof@plt+0x44a38>
  447460:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  447464:	mov	x22, xzr
  447468:	add	x23, x23, #0x624
  44746c:	b	44748c <feof@plt+0x44abc>
  447470:	add	x22, x22, #0x1
  447474:	add	x9, x8, #0x1
  447478:	cmp	x22, #0xa
  44747c:	str	x9, [x19, #256]
  447480:	strb	w24, [x19, x8]
  447484:	strb	w24, [x19, #264]
  447488:	b.eq	44810c <feof@plt+0x4573c>  // b.none
  44748c:	ldr	x8, [x19, #256]
  447490:	ldrb	w24, [x23, x22]
  447494:	cmp	x8, #0xff
  447498:	b.ne	447470 <feof@plt+0x44aa0>  // b.any
  44749c:	ldp	x8, x2, [x19, #272]
  4474a0:	mov	w1, #0xff                  	// #255
  4474a4:	mov	x0, x19
  4474a8:	strb	wzr, [x19, #255]
  4474ac:	blr	x8
  4474b0:	ldr	x9, [x19, #320]
  4474b4:	mov	x8, xzr
  4474b8:	str	xzr, [x19, #256]
  4474bc:	add	x9, x9, #0x1
  4474c0:	str	x9, [x19, #320]
  4474c4:	b	447470 <feof@plt+0x44aa0>
  4474c8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4474cc:	mov	x22, xzr
  4474d0:	add	x23, x23, #0x62f
  4474d4:	b	4474f4 <feof@plt+0x44b24>
  4474d8:	add	x22, x22, #0x1
  4474dc:	add	x9, x8, #0x1
  4474e0:	cmp	x22, #0x1d
  4474e4:	str	x9, [x19, #256]
  4474e8:	strb	w24, [x19, x8]
  4474ec:	strb	w24, [x19, #264]
  4474f0:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4474f4:	ldr	x8, [x19, #256]
  4474f8:	ldrb	w24, [x23, x22]
  4474fc:	cmp	x8, #0xff
  447500:	b.ne	4474d8 <feof@plt+0x44b08>  // b.any
  447504:	ldp	x8, x2, [x19, #272]
  447508:	mov	w1, #0xff                  	// #255
  44750c:	mov	x0, x19
  447510:	strb	wzr, [x19, #255]
  447514:	blr	x8
  447518:	ldr	x9, [x19, #320]
  44751c:	mov	x8, xzr
  447520:	str	xzr, [x19, #256]
  447524:	add	x9, x9, #0x1
  447528:	str	x9, [x19, #320]
  44752c:	b	4474d8 <feof@plt+0x44b08>
  447530:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  447534:	mov	x22, xzr
  447538:	add	x23, x23, #0x64d
  44753c:	b	44755c <feof@plt+0x44b8c>
  447540:	add	x22, x22, #0x1
  447544:	add	x9, x8, #0x1
  447548:	cmp	x22, #0x1c
  44754c:	str	x9, [x19, #256]
  447550:	strb	w24, [x19, x8]
  447554:	strb	w24, [x19, #264]
  447558:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  44755c:	ldr	x8, [x19, #256]
  447560:	ldrb	w24, [x23, x22]
  447564:	cmp	x8, #0xff
  447568:	b.ne	447540 <feof@plt+0x44b70>  // b.any
  44756c:	ldp	x8, x2, [x19, #272]
  447570:	mov	w1, #0xff                  	// #255
  447574:	mov	x0, x19
  447578:	strb	wzr, [x19, #255]
  44757c:	blr	x8
  447580:	ldr	x9, [x19, #320]
  447584:	mov	x8, xzr
  447588:	str	xzr, [x19, #256]
  44758c:	add	x9, x9, #0x1
  447590:	str	x9, [x19, #320]
  447594:	b	447540 <feof@plt+0x44b70>
  447598:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44759c:	mov	x22, xzr
  4475a0:	add	x23, x23, #0x66a
  4475a4:	b	4475c4 <feof@plt+0x44bf4>
  4475a8:	add	x22, x22, #0x1
  4475ac:	add	x9, x8, #0x1
  4475b0:	cmp	x22, #0x8
  4475b4:	str	x9, [x19, #256]
  4475b8:	strb	w24, [x19, x8]
  4475bc:	strb	w24, [x19, #264]
  4475c0:	b.eq	448184 <feof@plt+0x457b4>  // b.none
  4475c4:	ldr	x8, [x19, #256]
  4475c8:	ldrb	w24, [x23, x22]
  4475cc:	cmp	x8, #0xff
  4475d0:	b.ne	4475a8 <feof@plt+0x44bd8>  // b.any
  4475d4:	ldp	x8, x2, [x19, #272]
  4475d8:	mov	w1, #0xff                  	// #255
  4475dc:	mov	x0, x19
  4475e0:	strb	wzr, [x19, #255]
  4475e4:	blr	x8
  4475e8:	ldr	x9, [x19, #320]
  4475ec:	mov	x8, xzr
  4475f0:	str	xzr, [x19, #256]
  4475f4:	add	x9, x9, #0x1
  4475f8:	str	x9, [x19, #320]
  4475fc:	b	4475a8 <feof@plt+0x44bd8>
  447600:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x10a68>
  447604:	mov	x20, xzr
  447608:	add	x22, x22, #0x673
  44760c:	b	44762c <feof@plt+0x44c5c>
  447610:	add	x20, x20, #0x1
  447614:	add	x9, x8, #0x1
  447618:	cmp	x20, #0xe
  44761c:	str	x9, [x19, #256]
  447620:	strb	w23, [x19, x8]
  447624:	strb	w23, [x19, #264]
  447628:	b.eq	4482d8 <feof@plt+0x45908>  // b.none
  44762c:	ldr	x8, [x19, #256]
  447630:	ldrb	w23, [x22, x20]
  447634:	cmp	x8, #0xff
  447638:	b.ne	447610 <feof@plt+0x44c40>  // b.any
  44763c:	ldp	x8, x2, [x19, #272]
  447640:	mov	w1, #0xff                  	// #255
  447644:	mov	x0, x19
  447648:	strb	wzr, [x19, #255]
  44764c:	blr	x8
  447650:	ldr	x9, [x19, #320]
  447654:	mov	x8, xzr
  447658:	str	xzr, [x19, #256]
  44765c:	add	x9, x9, #0x1
  447660:	str	x9, [x19, #320]
  447664:	b	447610 <feof@plt+0x44c40>
  447668:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44766c:	mov	x22, xzr
  447670:	add	x23, x23, #0x5f4
  447674:	b	447694 <feof@plt+0x44cc4>
  447678:	add	x22, x22, #0x1
  44767c:	add	x9, x8, #0x1
  447680:	cmp	x22, #0x16
  447684:	str	x9, [x19, #256]
  447688:	strb	w24, [x19, x8]
  44768c:	strb	w24, [x19, #264]
  447690:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  447694:	ldr	x8, [x19, #256]
  447698:	ldrb	w24, [x23, x22]
  44769c:	cmp	x8, #0xff
  4476a0:	b.ne	447678 <feof@plt+0x44ca8>  // b.any
  4476a4:	ldp	x8, x2, [x19, #272]
  4476a8:	mov	w1, #0xff                  	// #255
  4476ac:	mov	x0, x19
  4476b0:	strb	wzr, [x19, #255]
  4476b4:	blr	x8
  4476b8:	ldr	x9, [x19, #320]
  4476bc:	mov	x8, xzr
  4476c0:	str	xzr, [x19, #256]
  4476c4:	add	x9, x9, #0x1
  4476c8:	str	x9, [x19, #320]
  4476cc:	b	447678 <feof@plt+0x44ca8>
  4476d0:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  4476d4:	mov	x22, xzr
  4476d8:	add	x23, x23, #0x5f0
  4476dc:	b	4476fc <feof@plt+0x44d2c>
  4476e0:	add	x22, x22, #0x1
  4476e4:	add	x9, x8, #0x1
  4476e8:	cmp	x22, #0x1a
  4476ec:	str	x9, [x19, #256]
  4476f0:	strb	w24, [x19, x8]
  4476f4:	strb	w24, [x19, #264]
  4476f8:	b.eq	447e34 <feof@plt+0x45464>  // b.none
  4476fc:	ldr	x8, [x19, #256]
  447700:	ldrb	w24, [x23, x22]
  447704:	cmp	x8, #0xff
  447708:	b.ne	4476e0 <feof@plt+0x44d10>  // b.any
  44770c:	ldp	x8, x2, [x19, #272]
  447710:	mov	w1, #0xff                  	// #255
  447714:	mov	x0, x19
  447718:	strb	wzr, [x19, #255]
  44771c:	blr	x8
  447720:	ldr	x9, [x19, #320]
  447724:	mov	x8, xzr
  447728:	str	xzr, [x19, #256]
  44772c:	add	x9, x9, #0x1
  447730:	str	x9, [x19, #320]
  447734:	b	4476e0 <feof@plt+0x44d10>
  447738:	ldr	x1, [x21, #8]
  44773c:	mov	x0, x19
  447740:	bl	44cb34 <feof@plt+0x4a164>
  447744:	cbz	x0, 448b44 <feof@plt+0x46174>
  447748:	mov	w22, wzr
  44774c:	ldr	w8, [x0]
  447750:	cmp	w8, #0x2f
  447754:	b.ne	448684 <feof@plt+0x45cb4>  // b.any
  447758:	ldr	x8, [x0, #8]
  44775c:	cbz	x8, 448684 <feof@plt+0x45cb4>
  447760:	ldr	x0, [x0, #16]
  447764:	add	w22, w22, #0x1
  447768:	cbnz	x0, 44774c <feof@plt+0x44d7c>
  44776c:	b	448688 <feof@plt+0x45cb8>
  447770:	ldr	x22, [x21, #8]
  447774:	cbz	x22, 447790 <feof@plt+0x44dc0>
  447778:	ldr	w8, [x22, #4]
  44777c:	cmp	w8, #0x1
  447780:	b.gt	447790 <feof@plt+0x44dc0>
  447784:	ldr	w9, [x19, #308]
  447788:	cmp	w9, #0x401
  44778c:	b.lt	4495fc <feof@plt+0x46c2c>  // b.tstop
  447790:	mov	w8, #0x1                   	// #1
  447794:	str	w8, [x25]
  447798:	ldr	x8, [x19, #256]
  44779c:	cmp	x8, #0xff
  4477a0:	b.ne	4477cc <feof@plt+0x44dfc>  // b.any
  4477a4:	ldp	x8, x2, [x19, #272]
  4477a8:	mov	w1, #0xff                  	// #255
  4477ac:	mov	x0, x19
  4477b0:	strb	wzr, [x19, #255]
  4477b4:	blr	x8
  4477b8:	ldr	x9, [x19, #320]
  4477bc:	mov	x8, xzr
  4477c0:	str	xzr, [x19, #256]
  4477c4:	add	x9, x9, #0x1
  4477c8:	str	x9, [x19, #320]
  4477cc:	add	x9, x8, #0x1
  4477d0:	mov	w10, #0x5b                  	// #91
  4477d4:	str	x9, [x19, #256]
  4477d8:	strb	w10, [x19, x8]
  4477dc:	ldr	x8, [x19, #256]
  4477e0:	strb	w10, [x19, #264]
  4477e4:	cmp	x8, #0xff
  4477e8:	b.ne	447814 <feof@plt+0x44e44>  // b.any
  4477ec:	ldp	x8, x2, [x19, #272]
  4477f0:	mov	w1, #0xff                  	// #255
  4477f4:	mov	x0, x19
  4477f8:	strb	wzr, [x19, #255]
  4477fc:	blr	x8
  447800:	ldr	x9, [x19, #320]
  447804:	mov	x8, xzr
  447808:	str	xzr, [x19, #256]
  44780c:	add	x9, x9, #0x1
  447810:	str	x9, [x19, #320]
  447814:	add	x9, x8, #0x1
  447818:	mov	w10, #0x61                  	// #97
  44781c:	str	x9, [x19, #256]
  447820:	strb	w10, [x19, x8]
  447824:	ldr	x8, [x19, #256]
  447828:	strb	w10, [x19, #264]
  44782c:	cmp	x8, #0xff
  447830:	b.ne	44785c <feof@plt+0x44e8c>  // b.any
  447834:	ldp	x8, x2, [x19, #272]
  447838:	mov	w1, #0xff                  	// #255
  44783c:	mov	x0, x19
  447840:	strb	wzr, [x19, #255]
  447844:	blr	x8
  447848:	ldr	x9, [x19, #320]
  44784c:	mov	x8, xzr
  447850:	str	xzr, [x19, #256]
  447854:	add	x9, x9, #0x1
  447858:	str	x9, [x19, #320]
  44785c:	add	x9, x8, #0x1
  447860:	mov	w10, #0x62                  	// #98
  447864:	str	x9, [x19, #256]
  447868:	strb	w10, [x19, x8]
  44786c:	ldr	x8, [x19, #256]
  447870:	strb	w10, [x19, #264]
  447874:	cmp	x8, #0xff
  447878:	b.ne	4478a4 <feof@plt+0x44ed4>  // b.any
  44787c:	ldp	x8, x2, [x19, #272]
  447880:	mov	w1, #0xff                  	// #255
  447884:	mov	x0, x19
  447888:	strb	wzr, [x19, #255]
  44788c:	blr	x8
  447890:	ldr	x9, [x19, #320]
  447894:	mov	x8, xzr
  447898:	str	xzr, [x19, #256]
  44789c:	add	x9, x9, #0x1
  4478a0:	str	x9, [x19, #320]
  4478a4:	add	x9, x8, #0x1
  4478a8:	mov	w10, #0x69                  	// #105
  4478ac:	str	x9, [x19, #256]
  4478b0:	strb	w10, [x19, x8]
  4478b4:	ldr	x8, [x19, #256]
  4478b8:	strb	w10, [x19, #264]
  4478bc:	cmp	x8, #0xff
  4478c0:	b.ne	4478ec <feof@plt+0x44f1c>  // b.any
  4478c4:	ldp	x8, x2, [x19, #272]
  4478c8:	mov	w1, #0xff                  	// #255
  4478cc:	mov	x0, x19
  4478d0:	strb	wzr, [x19, #255]
  4478d4:	blr	x8
  4478d8:	ldr	x9, [x19, #320]
  4478dc:	mov	x8, xzr
  4478e0:	str	xzr, [x19, #256]
  4478e4:	add	x9, x9, #0x1
  4478e8:	str	x9, [x19, #320]
  4478ec:	add	x9, x8, #0x1
  4478f0:	mov	w10, #0x3a                  	// #58
  4478f4:	b	447adc <feof@plt+0x4510c>
  4478f8:	ldr	x22, [x21, #8]
  4478fc:	cbz	x22, 447918 <feof@plt+0x44f48>
  447900:	ldr	w8, [x22, #4]
  447904:	cmp	w8, #0x1
  447908:	b.gt	447918 <feof@plt+0x44f48>
  44790c:	ldr	w9, [x19, #308]
  447910:	cmp	w9, #0x401
  447914:	b.lt	449650 <feof@plt+0x46c80>  // b.tstop
  447918:	mov	w8, #0x1                   	// #1
  44791c:	str	w8, [x25]
  447920:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  447924:	mov	x22, xzr
  447928:	add	x23, x23, #0x682
  44792c:	b	44794c <feof@plt+0x44f7c>
  447930:	add	x22, x22, #0x1
  447934:	add	x9, x8, #0x1
  447938:	cmp	x22, #0x8
  44793c:	str	x9, [x19, #256]
  447940:	strb	w24, [x19, x8]
  447944:	strb	w24, [x19, #264]
  447948:	b.eq	447ae8 <feof@plt+0x45118>  // b.none
  44794c:	ldr	x8, [x19, #256]
  447950:	ldrb	w24, [x23, x22]
  447954:	cmp	x8, #0xff
  447958:	b.ne	447930 <feof@plt+0x44f60>  // b.any
  44795c:	ldp	x8, x2, [x19, #272]
  447960:	mov	w1, #0xff                  	// #255
  447964:	mov	x0, x19
  447968:	strb	wzr, [x19, #255]
  44796c:	blr	x8
  447970:	ldr	x9, [x19, #320]
  447974:	mov	x8, xzr
  447978:	str	xzr, [x19, #256]
  44797c:	add	x9, x9, #0x1
  447980:	str	x9, [x19, #320]
  447984:	b	447930 <feof@plt+0x44f60>
  447988:	mov	w23, wzr
  44798c:	ldr	x8, [x19, #256]
  447990:	cmp	x8, #0xff
  447994:	b.ne	4479c0 <feof@plt+0x44ff0>  // b.any
  447998:	ldp	x8, x2, [x19, #272]
  44799c:	mov	w1, #0xff                  	// #255
  4479a0:	mov	x0, x19
  4479a4:	strb	wzr, [x19, #255]
  4479a8:	blr	x8
  4479ac:	ldr	x9, [x19, #320]
  4479b0:	mov	x8, xzr
  4479b4:	str	xzr, [x19, #256]
  4479b8:	add	x9, x9, #0x1
  4479bc:	str	x9, [x19, #320]
  4479c0:	add	x9, x8, #0x1
  4479c4:	mov	w10, #0x28                  	// #40
  4479c8:	str	x9, [x19, #256]
  4479cc:	strb	w10, [x19, x8]
  4479d0:	strb	w10, [x19, #264]
  4479d4:	ldr	x22, [x21, #8]
  4479d8:	cbz	x22, 4479f4 <feof@plt+0x45024>
  4479dc:	ldr	w8, [x22, #4]
  4479e0:	cmp	w8, #0x1
  4479e4:	b.gt	4479f4 <feof@plt+0x45024>
  4479e8:	ldr	w9, [x19, #308]
  4479ec:	cmp	w9, #0x401
  4479f0:	b.lt	4491d4 <feof@plt+0x46804>  // b.tstop
  4479f4:	mov	w8, #0x1                   	// #1
  4479f8:	str	w8, [x25]
  4479fc:	ldr	x8, [x19, #256]
  447a00:	cmp	x8, #0xff
  447a04:	b.ne	447a30 <feof@plt+0x45060>  // b.any
  447a08:	ldp	x8, x2, [x19, #272]
  447a0c:	mov	w1, #0xff                  	// #255
  447a10:	mov	x0, x19
  447a14:	strb	wzr, [x19, #255]
  447a18:	blr	x8
  447a1c:	ldr	x9, [x19, #320]
  447a20:	mov	x8, xzr
  447a24:	str	xzr, [x19, #256]
  447a28:	add	x9, x9, #0x1
  447a2c:	str	x9, [x19, #320]
  447a30:	add	x9, x8, #0x1
  447a34:	mov	w10, #0x29                  	// #41
  447a38:	str	x9, [x19, #256]
  447a3c:	strb	w10, [x19, x8]
  447a40:	strb	w10, [x19, #264]
  447a44:	ldr	w8, [x21]
  447a48:	cmp	w8, #0x3e
  447a4c:	b.ne	447a98 <feof@plt+0x450c8>  // b.any
  447a50:	ldr	x8, [x19, #256]
  447a54:	cmp	x8, #0xff
  447a58:	b.ne	447a84 <feof@plt+0x450b4>  // b.any
  447a5c:	ldp	x8, x2, [x19, #272]
  447a60:	mov	w1, #0xff                  	// #255
  447a64:	mov	x0, x19
  447a68:	strb	wzr, [x19, #255]
  447a6c:	blr	x8
  447a70:	ldr	x9, [x19, #320]
  447a74:	mov	x8, xzr
  447a78:	str	xzr, [x19, #256]
  447a7c:	add	x9, x9, #0x1
  447a80:	str	x9, [x19, #320]
  447a84:	add	x9, x8, #0x1
  447a88:	mov	w10, #0x2d                  	// #45
  447a8c:	str	x9, [x19, #256]
  447a90:	strb	w10, [x19, x8]
  447a94:	strb	w10, [x19, #264]
  447a98:	cmp	w23, #0x8
  447a9c:	b.ne	447c98 <feof@plt+0x452c8>  // b.any
  447aa0:	ldr	x8, [x19, #256]
  447aa4:	cmp	x8, #0xff
  447aa8:	b.ne	447ad4 <feof@plt+0x45104>  // b.any
  447aac:	ldp	x8, x2, [x19, #272]
  447ab0:	mov	w1, #0xff                  	// #255
  447ab4:	mov	x0, x19
  447ab8:	strb	wzr, [x19, #255]
  447abc:	blr	x8
  447ac0:	ldr	x9, [x19, #320]
  447ac4:	mov	x8, xzr
  447ac8:	str	xzr, [x19, #256]
  447acc:	add	x9, x9, #0x1
  447ad0:	str	x9, [x19, #320]
  447ad4:	add	x9, x8, #0x1
  447ad8:	mov	w10, #0x5b                  	// #91
  447adc:	str	x9, [x19, #256]
  447ae0:	strb	w10, [x19, x8]
  447ae4:	strb	w10, [x19, #264]
  447ae8:	ldr	x21, [x21, #16]
  447aec:	cbz	x21, 447b08 <feof@plt+0x45138>
  447af0:	ldr	w8, [x21, #4]
  447af4:	cmp	w8, #0x1
  447af8:	b.gt	447b08 <feof@plt+0x45138>
  447afc:	ldr	w9, [x19, #308]
  447b00:	cmp	w9, #0x401
  447b04:	b.lt	44862c <feof@plt+0x45c5c>  // b.tstop
  447b08:	mov	w8, #0x1                   	// #1
  447b0c:	str	w8, [x25]
  447b10:	ldr	x8, [x19, #256]
  447b14:	cmp	x8, #0xff
  447b18:	b.ne	447b44 <feof@plt+0x45174>  // b.any
  447b1c:	ldp	x8, x2, [x19, #272]
  447b20:	mov	w1, #0xff                  	// #255
  447b24:	mov	x0, x19
  447b28:	strb	wzr, [x19, #255]
  447b2c:	blr	x8
  447b30:	ldr	x9, [x19, #320]
  447b34:	mov	x8, xzr
  447b38:	str	xzr, [x19, #256]
  447b3c:	add	x9, x9, #0x1
  447b40:	str	x9, [x19, #320]
  447b44:	add	x9, x8, #0x1
  447b48:	mov	w10, #0x5d                  	// #93
  447b4c:	b	44a750 <feof@plt+0x47d80>
  447b50:	ldr	x22, [x21, #8]
  447b54:	cbz	x22, 447b70 <feof@plt+0x451a0>
  447b58:	ldr	w8, [x22, #4]
  447b5c:	cmp	w8, #0x1
  447b60:	b.gt	447b70 <feof@plt+0x451a0>
  447b64:	ldr	w9, [x19, #308]
  447b68:	cmp	w9, #0x401
  447b6c:	b.lt	4496a4 <feof@plt+0x46cd4>  // b.tstop
  447b70:	mov	w8, #0x1                   	// #1
  447b74:	str	w8, [x25]
  447b78:	ldr	x8, [x19, #256]
  447b7c:	cmp	x8, #0xff
  447b80:	b.ne	447bac <feof@plt+0x451dc>  // b.any
  447b84:	ldp	x8, x2, [x19, #272]
  447b88:	mov	w1, #0xff                  	// #255
  447b8c:	mov	x0, x19
  447b90:	strb	wzr, [x19, #255]
  447b94:	blr	x8
  447b98:	ldr	x9, [x19, #320]
  447b9c:	mov	x8, xzr
  447ba0:	str	xzr, [x19, #256]
  447ba4:	add	x9, x9, #0x1
  447ba8:	str	x9, [x19, #320]
  447bac:	add	x9, x8, #0x1
  447bb0:	mov	w10, #0x2d                  	// #45
  447bb4:	str	x9, [x19, #256]
  447bb8:	strb	w10, [x19, x8]
  447bbc:	ldr	x8, [x19, #256]
  447bc0:	strb	w10, [x19, #264]
  447bc4:	cmp	x8, #0xff
  447bc8:	b.ne	447bf4 <feof@plt+0x45224>  // b.any
  447bcc:	ldp	x8, x2, [x19, #272]
  447bd0:	mov	w1, #0xff                  	// #255
  447bd4:	mov	x0, x19
  447bd8:	strb	wzr, [x19, #255]
  447bdc:	blr	x8
  447be0:	ldr	x9, [x19, #320]
  447be4:	mov	x8, xzr
  447be8:	str	xzr, [x19, #256]
  447bec:	add	x9, x9, #0x1
  447bf0:	str	x9, [x19, #320]
  447bf4:	add	x9, x8, #0x1
  447bf8:	mov	w10, #0x69                  	// #105
  447bfc:	str	x9, [x19, #256]
  447c00:	strb	w10, [x19, x8]
  447c04:	ldr	x8, [x19, #256]
  447c08:	strb	w10, [x19, #264]
  447c0c:	cmp	x8, #0xff
  447c10:	b.ne	447c3c <feof@plt+0x4526c>  // b.any
  447c14:	ldp	x8, x2, [x19, #272]
  447c18:	mov	w1, #0xff                  	// #255
  447c1c:	mov	x0, x19
  447c20:	strb	wzr, [x19, #255]
  447c24:	blr	x8
  447c28:	ldr	x9, [x19, #320]
  447c2c:	mov	x8, xzr
  447c30:	str	xzr, [x19, #256]
  447c34:	add	x9, x9, #0x1
  447c38:	str	x9, [x19, #320]
  447c3c:	add	x9, x8, #0x1
  447c40:	mov	w10, #0x6e                  	// #110
  447c44:	str	x9, [x19, #256]
  447c48:	strb	w10, [x19, x8]
  447c4c:	ldr	x8, [x19, #256]
  447c50:	strb	w10, [x19, #264]
  447c54:	cmp	x8, #0xff
  447c58:	b.ne	447c84 <feof@plt+0x452b4>  // b.any
  447c5c:	ldp	x8, x2, [x19, #272]
  447c60:	mov	w1, #0xff                  	// #255
  447c64:	mov	x0, x19
  447c68:	strb	wzr, [x19, #255]
  447c6c:	blr	x8
  447c70:	ldr	x9, [x19, #320]
  447c74:	mov	x8, xzr
  447c78:	str	xzr, [x19, #256]
  447c7c:	add	x9, x9, #0x1
  447c80:	str	x9, [x19, #320]
  447c84:	add	x9, x8, #0x1
  447c88:	mov	w10, #0x2d                  	// #45
  447c8c:	str	x9, [x19, #256]
  447c90:	strb	w10, [x19, x8]
  447c94:	strb	w10, [x19, #264]
  447c98:	ldr	x21, [x21, #16]
  447c9c:	cbnz	x21, 447e3c <feof@plt+0x4546c>
  447ca0:	b	447e54 <feof@plt+0x45484>
  447ca4:	ldr	x22, [x21, #16]
  447ca8:	cbz	x22, 447cc4 <feof@plt+0x452f4>
  447cac:	ldr	w8, [x22, #4]
  447cb0:	cmp	w8, #0x1
  447cb4:	b.gt	447cc4 <feof@plt+0x452f4>
  447cb8:	ldr	w9, [x19, #308]
  447cbc:	cmp	w9, #0x401
  447cc0:	b.lt	4496f8 <feof@plt+0x46d28>  // b.tstop
  447cc4:	mov	w8, #0x1                   	// #1
  447cc8:	str	w8, [x25]
  447ccc:	ldr	x8, [x19, #256]
  447cd0:	cmp	x8, #0xff
  447cd4:	b.ne	447d00 <feof@plt+0x45330>  // b.any
  447cd8:	ldp	x8, x2, [x19, #272]
  447cdc:	mov	w1, #0xff                  	// #255
  447ce0:	mov	x0, x19
  447ce4:	strb	wzr, [x19, #255]
  447ce8:	blr	x8
  447cec:	ldr	x9, [x19, #320]
  447cf0:	mov	x8, xzr
  447cf4:	str	xzr, [x19, #256]
  447cf8:	add	x9, x9, #0x1
  447cfc:	str	x9, [x19, #320]
  447d00:	add	x9, x8, #0x1
  447d04:	mov	w10, #0x20                  	// #32
  447d08:	str	x9, [x19, #256]
  447d0c:	strb	w10, [x19, x8]
  447d10:	ldr	x8, [x19, #256]
  447d14:	strb	w10, [x19, #264]
  447d18:	cmp	x8, #0xff
  447d1c:	b.ne	447d48 <feof@plt+0x45378>  // b.any
  447d20:	ldp	x8, x2, [x19, #272]
  447d24:	mov	w1, #0xff                  	// #255
  447d28:	mov	x0, x19
  447d2c:	strb	wzr, [x19, #255]
  447d30:	blr	x8
  447d34:	ldr	x9, [x19, #320]
  447d38:	mov	x8, xzr
  447d3c:	str	xzr, [x19, #256]
  447d40:	add	x9, x9, #0x1
  447d44:	str	x9, [x19, #320]
  447d48:	add	x9, x8, #0x1
  447d4c:	mov	w10, #0x66                  	// #102
  447d50:	str	x9, [x19, #256]
  447d54:	strb	w10, [x19, x8]
  447d58:	ldr	x8, [x19, #256]
  447d5c:	strb	w10, [x19, #264]
  447d60:	cmp	x8, #0xff
  447d64:	b.ne	447d90 <feof@plt+0x453c0>  // b.any
  447d68:	ldp	x8, x2, [x19, #272]
  447d6c:	mov	w1, #0xff                  	// #255
  447d70:	mov	x0, x19
  447d74:	strb	wzr, [x19, #255]
  447d78:	blr	x8
  447d7c:	ldr	x9, [x19, #320]
  447d80:	mov	x8, xzr
  447d84:	str	xzr, [x19, #256]
  447d88:	add	x9, x9, #0x1
  447d8c:	str	x9, [x19, #320]
  447d90:	add	x9, x8, #0x1
  447d94:	mov	w10, #0x6f                  	// #111
  447d98:	str	x9, [x19, #256]
  447d9c:	strb	w10, [x19, x8]
  447da0:	ldr	x8, [x19, #256]
  447da4:	strb	w10, [x19, #264]
  447da8:	cmp	x8, #0xff
  447dac:	b.ne	447dd8 <feof@plt+0x45408>  // b.any
  447db0:	ldp	x8, x2, [x19, #272]
  447db4:	mov	w1, #0xff                  	// #255
  447db8:	mov	x0, x19
  447dbc:	strb	wzr, [x19, #255]
  447dc0:	blr	x8
  447dc4:	ldr	x9, [x19, #320]
  447dc8:	mov	x8, xzr
  447dcc:	str	xzr, [x19, #256]
  447dd0:	add	x9, x9, #0x1
  447dd4:	str	x9, [x19, #320]
  447dd8:	add	x9, x8, #0x1
  447ddc:	mov	w10, #0x72                  	// #114
  447de0:	str	x9, [x19, #256]
  447de4:	strb	w10, [x19, x8]
  447de8:	ldr	x8, [x19, #256]
  447dec:	strb	w10, [x19, #264]
  447df0:	cmp	x8, #0xff
  447df4:	b.ne	447e20 <feof@plt+0x45450>  // b.any
  447df8:	ldp	x8, x2, [x19, #272]
  447dfc:	mov	w1, #0xff                  	// #255
  447e00:	mov	x0, x19
  447e04:	strb	wzr, [x19, #255]
  447e08:	blr	x8
  447e0c:	ldr	x9, [x19, #320]
  447e10:	mov	x8, xzr
  447e14:	str	xzr, [x19, #256]
  447e18:	add	x9, x9, #0x1
  447e1c:	str	x9, [x19, #320]
  447e20:	add	x9, x8, #0x1
  447e24:	mov	w10, #0x20                  	// #32
  447e28:	str	x9, [x19, #256]
  447e2c:	strb	w10, [x19, x8]
  447e30:	strb	w10, [x19, #264]
  447e34:	ldr	x21, [x21, #8]
  447e38:	cbz	x21, 447e54 <feof@plt+0x45484>
  447e3c:	ldr	w8, [x21, #4]
  447e40:	cmp	w8, #0x1
  447e44:	b.gt	447e54 <feof@plt+0x45484>
  447e48:	ldr	w9, [x19, #308]
  447e4c:	cmp	w9, #0x401
  447e50:	b.lt	447e7c <feof@plt+0x454ac>  // b.tstop
  447e54:	mov	w8, #0x1                   	// #1
  447e58:	str	w8, [x25]
  447e5c:	ldp	x20, x19, [sp, #240]
  447e60:	ldp	x22, x21, [sp, #224]
  447e64:	ldp	x24, x23, [sp, #208]
  447e68:	ldp	x26, x25, [sp, #192]
  447e6c:	ldp	x28, x27, [sp, #176]
  447e70:	ldp	x29, x30, [sp, #160]
  447e74:	add	sp, sp, #0x100
  447e78:	ret
  447e7c:	add	w8, w8, #0x1
  447e80:	add	w9, w9, #0x1
  447e84:	str	w8, [x21, #4]
  447e88:	str	w9, [x19, #308]
  447e8c:	str	x21, [sp, #16]
  447e90:	ldr	x8, [x19, #328]
  447e94:	add	x9, sp, #0x10
  447e98:	mov	x0, x19
  447e9c:	mov	w1, w20
  447ea0:	mov	x2, x21
  447ea4:	str	x8, [sp, #24]
  447ea8:	str	x9, [x19, #328]
  447eac:	bl	445750 <feof@plt+0x42d80>
  447eb0:	ldr	x8, [sp, #24]
  447eb4:	str	x8, [x19, #328]
  447eb8:	ldr	w8, [x21, #4]
  447ebc:	sub	w8, w8, #0x1
  447ec0:	str	w8, [x21, #4]
  447ec4:	ldr	w8, [x19, #308]
  447ec8:	sub	w8, w8, #0x1
  447ecc:	str	w8, [x19, #308]
  447ed0:	b	447e5c <feof@plt+0x4548c>
  447ed4:	ldr	x22, [x21, #8]
  447ed8:	ldrb	w8, [x22]
  447edc:	sub	w8, w8, #0x61
  447ee0:	cmp	w8, #0x19
  447ee4:	b.hi	447f34 <feof@plt+0x45564>  // b.pmore
  447ee8:	ldr	x8, [x19, #256]
  447eec:	cmp	x8, #0xff
  447ef0:	b.ne	447f1c <feof@plt+0x4554c>  // b.any
  447ef4:	ldp	x8, x2, [x19, #272]
  447ef8:	mov	w1, #0xff                  	// #255
  447efc:	mov	x0, x19
  447f00:	strb	wzr, [x19, #255]
  447f04:	blr	x8
  447f08:	ldr	x9, [x19, #320]
  447f0c:	mov	x8, xzr
  447f10:	str	xzr, [x19, #256]
  447f14:	add	x9, x9, #0x1
  447f18:	str	x9, [x19, #320]
  447f1c:	add	x9, x8, #0x1
  447f20:	mov	w10, #0x20                  	// #32
  447f24:	str	x9, [x19, #256]
  447f28:	strb	w10, [x19, x8]
  447f2c:	strb	w10, [x19, #264]
  447f30:	ldr	x22, [x21, #8]
  447f34:	sub	x8, x20, #0x1
  447f38:	ldrb	w9, [x22, x8]
  447f3c:	cmp	w9, #0x20
  447f40:	csel	w8, w8, w20, eq  // eq = none
  447f44:	cbz	w8, 447e5c <feof@plt+0x4548c>
  447f48:	sxtw	x20, w8
  447f4c:	b	447f6c <feof@plt+0x4559c>
  447f50:	add	x9, x8, #0x1
  447f54:	subs	x20, x20, #0x1
  447f58:	add	x22, x22, #0x1
  447f5c:	str	x9, [x19, #256]
  447f60:	strb	w21, [x19, x8]
  447f64:	strb	w21, [x19, #264]
  447f68:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  447f6c:	ldr	x8, [x19, #256]
  447f70:	ldrb	w21, [x22]
  447f74:	cmp	x8, #0xff
  447f78:	b.ne	447f50 <feof@plt+0x45580>  // b.any
  447f7c:	ldp	x8, x2, [x19, #272]
  447f80:	mov	w1, #0xff                  	// #255
  447f84:	mov	x0, x19
  447f88:	strb	wzr, [x19, #255]
  447f8c:	blr	x8
  447f90:	ldr	x9, [x19, #320]
  447f94:	mov	x8, xzr
  447f98:	str	xzr, [x19, #256]
  447f9c:	add	x9, x9, #0x1
  447fa0:	str	x9, [x19, #320]
  447fa4:	b	447f50 <feof@plt+0x45580>
  447fa8:	ldr	x8, [x19, #368]
  447fac:	cbz	x8, 447fc0 <feof@plt+0x455f0>
  447fb0:	ldr	x9, [x19, #288]
  447fb4:	sub	x10, x29, #0x10
  447fb8:	stp	x9, x8, [x29, #-16]
  447fbc:	str	x10, [x19, #288]
  447fc0:	ldr	x22, [x21, #8]
  447fc4:	ldr	w9, [x22]
  447fc8:	cmp	w9, #0x4
  447fcc:	b.ne	4485f8 <feof@plt+0x45c28>  // b.any
  447fd0:	ldr	x22, [x22, #8]
  447fd4:	cbz	x22, 447ff0 <feof@plt+0x45620>
  447fd8:	ldr	w9, [x22, #4]
  447fdc:	cmp	w9, #0x1
  447fe0:	b.gt	447ff0 <feof@plt+0x45620>
  447fe4:	ldr	w10, [x19, #308]
  447fe8:	cmp	w10, #0x401
  447fec:	b.lt	449b38 <feof@plt+0x47168>  // b.tstop
  447ff0:	mov	w9, #0x1                   	// #1
  447ff4:	str	w9, [x25]
  447ff8:	cbz	x8, 448004 <feof@plt+0x45634>
  447ffc:	ldur	x8, [x29, #-16]
  448000:	str	x8, [x19, #288]
  448004:	ldrb	w8, [x19, #264]
  448008:	cmp	w8, #0x3c
  44800c:	b.ne	448058 <feof@plt+0x45688>  // b.any
  448010:	ldr	x8, [x19, #256]
  448014:	cmp	x8, #0xff
  448018:	b.ne	448044 <feof@plt+0x45674>  // b.any
  44801c:	ldp	x8, x2, [x19, #272]
  448020:	mov	w1, #0xff                  	// #255
  448024:	mov	x0, x19
  448028:	strb	wzr, [x19, #255]
  44802c:	blr	x8
  448030:	ldr	x9, [x19, #320]
  448034:	mov	x8, xzr
  448038:	str	xzr, [x19, #256]
  44803c:	add	x9, x9, #0x1
  448040:	str	x9, [x19, #320]
  448044:	add	x9, x8, #0x1
  448048:	mov	w10, #0x20                  	// #32
  44804c:	str	x9, [x19, #256]
  448050:	strb	w10, [x19, x8]
  448054:	strb	w10, [x19, #264]
  448058:	ldr	x8, [x19, #256]
  44805c:	cmp	x8, #0xff
  448060:	b.ne	44808c <feof@plt+0x456bc>  // b.any
  448064:	ldp	x8, x2, [x19, #272]
  448068:	mov	w1, #0xff                  	// #255
  44806c:	mov	x0, x19
  448070:	strb	wzr, [x19, #255]
  448074:	blr	x8
  448078:	ldr	x9, [x19, #320]
  44807c:	mov	x8, xzr
  448080:	str	xzr, [x19, #256]
  448084:	add	x9, x9, #0x1
  448088:	str	x9, [x19, #320]
  44808c:	add	x9, x8, #0x1
  448090:	mov	w10, #0x3c                  	// #60
  448094:	str	x9, [x19, #256]
  448098:	strb	w10, [x19, x8]
  44809c:	strb	w10, [x19, #264]
  4480a0:	ldr	x8, [x21, #8]
  4480a4:	ldr	x21, [x8, #16]
  4480a8:	cbz	x21, 4480c4 <feof@plt+0x456f4>
  4480ac:	ldr	w8, [x21, #4]
  4480b0:	cmp	w8, #0x1
  4480b4:	b.gt	4480c4 <feof@plt+0x456f4>
  4480b8:	ldr	w9, [x19, #308]
  4480bc:	cmp	w9, #0x401
  4480c0:	b.lt	449b94 <feof@plt+0x471c4>  // b.tstop
  4480c4:	mov	w8, #0x1                   	// #1
  4480c8:	str	w8, [x25]
  4480cc:	ldr	x8, [x19, #256]
  4480d0:	cmp	x8, #0xff
  4480d4:	b.ne	448100 <feof@plt+0x45730>  // b.any
  4480d8:	ldp	x8, x2, [x19, #272]
  4480dc:	mov	w1, #0xff                  	// #255
  4480e0:	mov	x0, x19
  4480e4:	strb	wzr, [x19, #255]
  4480e8:	blr	x8
  4480ec:	ldr	x9, [x19, #320]
  4480f0:	mov	x8, xzr
  4480f4:	str	xzr, [x19, #256]
  4480f8:	add	x9, x9, #0x1
  4480fc:	str	x9, [x19, #320]
  448100:	add	x9, x8, #0x1
  448104:	mov	w10, #0x3e                  	// #62
  448108:	b	44a750 <feof@plt+0x47d80>
  44810c:	ldr	x21, [x21, #8]
  448110:	cbz	x21, 44a70c <feof@plt+0x47d3c>
  448114:	ldr	w8, [x21, #4]
  448118:	cmp	w8, #0x1
  44811c:	b.gt	44a70c <feof@plt+0x47d3c>
  448120:	ldr	w9, [x19, #308]
  448124:	cmp	w9, #0x401
  448128:	b.ge	44a70c <feof@plt+0x47d3c>  // b.tcont
  44812c:	add	w8, w8, #0x1
  448130:	add	w9, w9, #0x1
  448134:	str	w8, [x21, #4]
  448138:	str	w9, [x19, #308]
  44813c:	str	x21, [sp, #16]
  448140:	ldr	x8, [x19, #328]
  448144:	add	x9, sp, #0x10
  448148:	mov	x0, x19
  44814c:	mov	w1, w20
  448150:	mov	x2, x21
  448154:	str	x8, [sp, #24]
  448158:	str	x9, [x19, #328]
  44815c:	bl	445750 <feof@plt+0x42d80>
  448160:	ldr	x8, [sp, #24]
  448164:	str	x8, [x19, #328]
  448168:	ldr	w8, [x21, #4]
  44816c:	sub	w8, w8, #0x1
  448170:	str	w8, [x21, #4]
  448174:	ldr	w8, [x19, #308]
  448178:	sub	w8, w8, #0x1
  44817c:	str	w8, [x19, #308]
  448180:	b	44a714 <feof@plt+0x47d44>
  448184:	ldr	w8, [x19, #312]
  448188:	add	w8, w8, #0x1
  44818c:	str	w8, [x19, #312]
  448190:	ldr	x22, [x21, #8]
  448194:	cbz	x22, 4481b0 <feof@plt+0x457e0>
  448198:	ldr	w9, [x22, #4]
  44819c:	cmp	w9, #0x1
  4481a0:	b.gt	4481b0 <feof@plt+0x457e0>
  4481a4:	ldr	w10, [x19, #308]
  4481a8:	cmp	w10, #0x401
  4481ac:	b.lt	44974c <feof@plt+0x46d7c>  // b.tstop
  4481b0:	mov	w9, #0x1                   	// #1
  4481b4:	str	w9, [x25]
  4481b8:	ldr	x9, [x19, #256]
  4481bc:	sub	w8, w8, #0x1
  4481c0:	str	w8, [x19, #312]
  4481c4:	cmp	x9, #0xff
  4481c8:	b.ne	4481f4 <feof@plt+0x45824>  // b.any
  4481cc:	ldp	x8, x2, [x19, #272]
  4481d0:	mov	w1, #0xff                  	// #255
  4481d4:	mov	x0, x19
  4481d8:	strb	wzr, [x19, #255]
  4481dc:	blr	x8
  4481e0:	ldr	x8, [x19, #320]
  4481e4:	mov	x9, xzr
  4481e8:	str	xzr, [x19, #256]
  4481ec:	add	x8, x8, #0x1
  4481f0:	str	x8, [x19, #320]
  4481f4:	add	x8, x9, #0x1
  4481f8:	mov	w10, #0x29                  	// #41
  4481fc:	str	x8, [x19, #256]
  448200:	strb	w10, [x19, x9]
  448204:	ldr	x8, [x19, #256]
  448208:	strb	w10, [x19, #264]
  44820c:	cmp	x8, #0xff
  448210:	b.ne	44823c <feof@plt+0x4586c>  // b.any
  448214:	ldp	x8, x2, [x19, #272]
  448218:	mov	w1, #0xff                  	// #255
  44821c:	mov	x0, x19
  448220:	strb	wzr, [x19, #255]
  448224:	blr	x8
  448228:	ldr	x9, [x19, #320]
  44822c:	mov	x8, xzr
  448230:	str	xzr, [x19, #256]
  448234:	add	x9, x9, #0x1
  448238:	str	x9, [x19, #320]
  44823c:	add	x9, x8, #0x1
  448240:	mov	w10, #0x23                  	// #35
  448244:	str	x9, [x19, #256]
  448248:	strb	w10, [x19, x8]
  44824c:	strb	w10, [x19, #264]
  448250:	ldr	w8, [x21, #16]
  448254:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  448258:	add	x1, x1, #0x6e9
  44825c:	add	x0, sp, #0x10
  448260:	add	w2, w8, #0x1
  448264:	bl	4025b0 <sprintf@plt>
  448268:	add	x0, sp, #0x10
  44826c:	bl	402420 <strlen@plt>
  448270:	cbz	x0, 449560 <feof@plt+0x46b90>
  448274:	mov	x20, x0
  448278:	add	x21, sp, #0x10
  44827c:	b	44829c <feof@plt+0x458cc>
  448280:	add	x9, x8, #0x1
  448284:	subs	x20, x20, #0x1
  448288:	add	x21, x21, #0x1
  44828c:	str	x9, [x19, #256]
  448290:	strb	w22, [x19, x8]
  448294:	strb	w22, [x19, #264]
  448298:	b.eq	449560 <feof@plt+0x46b90>  // b.none
  44829c:	ldr	x8, [x19, #256]
  4482a0:	ldrb	w22, [x21]
  4482a4:	cmp	x8, #0xff
  4482a8:	b.ne	448280 <feof@plt+0x458b0>  // b.any
  4482ac:	ldp	x8, x2, [x19, #272]
  4482b0:	mov	w1, #0xff                  	// #255
  4482b4:	mov	x0, x19
  4482b8:	strb	wzr, [x19, #255]
  4482bc:	blr	x8
  4482c0:	ldr	x9, [x19, #320]
  4482c4:	mov	x8, xzr
  4482c8:	str	xzr, [x19, #256]
  4482cc:	add	x9, x9, #0x1
  4482d0:	str	x9, [x19, #320]
  4482d4:	b	448280 <feof@plt+0x458b0>
  4482d8:	ldr	w8, [x21, #8]
  4482dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  4482e0:	add	x1, x1, #0x6e9
  4482e4:	add	x0, sp, #0x10
  4482e8:	add	w2, w8, #0x1
  4482ec:	bl	4025b0 <sprintf@plt>
  4482f0:	add	x0, sp, #0x10
  4482f4:	bl	402420 <strlen@plt>
  4482f8:	cbz	x0, 449560 <feof@plt+0x46b90>
  4482fc:	mov	x20, x0
  448300:	add	x21, sp, #0x10
  448304:	b	448324 <feof@plt+0x45954>
  448308:	add	x9, x8, #0x1
  44830c:	subs	x20, x20, #0x1
  448310:	add	x21, x21, #0x1
  448314:	str	x9, [x19, #256]
  448318:	strb	w22, [x19, x8]
  44831c:	strb	w22, [x19, #264]
  448320:	b.eq	449560 <feof@plt+0x46b90>  // b.none
  448324:	ldr	x8, [x19, #256]
  448328:	ldrb	w22, [x21]
  44832c:	cmp	x8, #0xff
  448330:	b.ne	448308 <feof@plt+0x45938>  // b.any
  448334:	ldp	x8, x2, [x19, #272]
  448338:	mov	w1, #0xff                  	// #255
  44833c:	mov	x0, x19
  448340:	strb	wzr, [x19, #255]
  448344:	blr	x8
  448348:	ldr	x9, [x19, #320]
  44834c:	mov	x8, xzr
  448350:	str	xzr, [x19, #256]
  448354:	add	x9, x9, #0x1
  448358:	str	x9, [x19, #320]
  44835c:	b	448308 <feof@plt+0x45938>
  448360:	mov	x21, x9
  448364:	b	4457b8 <feof@plt+0x42de8>
  448368:	cmp	w21, #0x1
  44836c:	b.lt	447e5c <feof@plt+0x4548c>  // b.tstop
  448370:	add	x20, x22, x21
  448374:	ldrb	w24, [x22]
  448378:	cmp	w24, #0x5f
  44837c:	b.ne	448418 <feof@plt+0x45a48>  // b.any
  448380:	sub	x8, x20, x22
  448384:	cmp	x8, #0x4
  448388:	b.lt	448418 <feof@plt+0x45a48>  // b.tstop
  44838c:	ldrb	w8, [x22, #1]
  448390:	cmp	w8, #0x5f
  448394:	b.ne	448414 <feof@plt+0x45a44>  // b.any
  448398:	ldrb	w8, [x22, #2]
  44839c:	cmp	w8, #0x55
  4483a0:	b.ne	448414 <feof@plt+0x45a44>  // b.any
  4483a4:	add	x21, x22, #0x3
  4483a8:	cmp	x21, x20
  4483ac:	b.cs	448414 <feof@plt+0x45a44>  // b.hs, b.nlast
  4483b0:	mov	x23, xzr
  4483b4:	b	4483d0 <feof@plt+0x45a00>
  4483b8:	mov	x9, #0xffffffffffffffd0    	// #-48
  4483bc:	add	x8, x9, x8
  4483c0:	add	x21, x21, #0x1
  4483c4:	cmp	x20, x21
  4483c8:	add	x23, x8, x23, lsl #4
  4483cc:	b.eq	448414 <feof@plt+0x45a44>  // b.none
  4483d0:	ldrb	w8, [x21]
  4483d4:	sub	w9, w8, #0x30
  4483d8:	and	w9, w9, #0xff
  4483dc:	cmp	w9, #0xa
  4483e0:	b.cc	4483b8 <feof@plt+0x459e8>  // b.lo, b.ul, b.last
  4483e4:	sub	w9, w8, #0x41
  4483e8:	and	w9, w9, #0xff
  4483ec:	cmp	w9, #0x6
  4483f0:	b.cs	4483fc <feof@plt+0x45a2c>  // b.hs, b.nlast
  4483f4:	mov	x9, #0xffffffffffffffc9    	// #-55
  4483f8:	b	4483bc <feof@plt+0x459ec>
  4483fc:	sub	w9, w8, #0x61
  448400:	and	w9, w9, #0xff
  448404:	cmp	w9, #0x5
  448408:	b.hi	448474 <feof@plt+0x45aa4>  // b.pmore
  44840c:	mov	x9, #0xffffffffffffffa9    	// #-87
  448410:	b	4483bc <feof@plt+0x459ec>
  448414:	mov	w24, #0x5f                  	// #95
  448418:	ldr	x8, [x19, #256]
  44841c:	cmp	x8, #0xff
  448420:	b.ne	44844c <feof@plt+0x45a7c>  // b.any
  448424:	ldp	x8, x2, [x19, #272]
  448428:	mov	w1, #0xff                  	// #255
  44842c:	mov	x0, x19
  448430:	strb	wzr, [x19, #255]
  448434:	blr	x8
  448438:	ldr	x9, [x19, #320]
  44843c:	mov	x8, xzr
  448440:	str	xzr, [x19, #256]
  448444:	add	x9, x9, #0x1
  448448:	str	x9, [x19, #320]
  44844c:	mov	w23, w24
  448450:	mov	x21, x22
  448454:	add	x22, x21, #0x1
  448458:	add	x9, x8, #0x1
  44845c:	cmp	x22, x20
  448460:	str	x9, [x19, #256]
  448464:	strb	w23, [x19, x8]
  448468:	strb	w23, [x19, #264]
  44846c:	b.cc	448374 <feof@plt+0x459a4>  // b.lo, b.ul, b.last
  448470:	b	447e5c <feof@plt+0x4548c>
  448474:	cmp	x23, #0xff
  448478:	mov	w24, #0x5f                  	// #95
  44847c:	b.hi	448418 <feof@plt+0x45a48>  // b.pmore
  448480:	cmp	w8, #0x5f
  448484:	b.ne	448418 <feof@plt+0x45a48>  // b.any
  448488:	ldr	x8, [x19, #256]
  44848c:	cmp	x8, #0xff
  448490:	b.ne	448454 <feof@plt+0x45a84>  // b.any
  448494:	ldp	x8, x2, [x19, #272]
  448498:	mov	w1, #0xff                  	// #255
  44849c:	mov	x0, x19
  4484a0:	strb	wzr, [x19, #255]
  4484a4:	blr	x8
  4484a8:	ldr	x9, [x19, #320]
  4484ac:	mov	x8, xzr
  4484b0:	str	xzr, [x19, #256]
  4484b4:	add	x9, x9, #0x1
  4484b8:	str	x9, [x19, #320]
  4484bc:	b	448454 <feof@plt+0x45a84>
  4484c0:	ldr	w8, [x22]
  4484c4:	cbnz	w8, 4484ec <feof@plt+0x45b1c>
  4484c8:	ldr	w8, [x22, #16]
  4484cc:	cmp	w8, #0x6
  4484d0:	b.ne	4484ec <feof@plt+0x45b1c>  // b.any
  4484d4:	ldr	x0, [x22, #8]
  4484d8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  4484dc:	add	x1, x1, #0x4c8
  4484e0:	mov	w2, #0x6                   	// #6
  4484e4:	bl	4026b0 <strncmp@plt>
  4484e8:	cbz	w0, 44a400 <feof@plt+0x47a30>
  4484ec:	ldr	w8, [x22, #4]
  4484f0:	cmp	w8, #0x1
  4484f4:	b.gt	448504 <feof@plt+0x45b34>
  4484f8:	ldr	w9, [x19, #308]
  4484fc:	cmp	w9, #0x401
  448500:	b.lt	4492a8 <feof@plt+0x468d8>  // b.tstop
  448504:	mov	w8, #0x1                   	// #1
  448508:	str	w8, [x25]
  44850c:	b	4492f8 <feof@plt+0x46928>
  448510:	ldrsw	x20, [x8, #24]
  448514:	cbz	w20, 447e5c <feof@plt+0x4548c>
  448518:	ldr	x21, [x8, #16]
  44851c:	b	44853c <feof@plt+0x45b6c>
  448520:	add	x9, x8, #0x1
  448524:	subs	x20, x20, #0x1
  448528:	add	x21, x21, #0x1
  44852c:	str	x9, [x19, #256]
  448530:	strb	w22, [x19, x8]
  448534:	strb	w22, [x19, #264]
  448538:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  44853c:	ldr	x8, [x19, #256]
  448540:	ldrb	w22, [x21]
  448544:	cmp	x8, #0xff
  448548:	b.ne	448520 <feof@plt+0x45b50>  // b.any
  44854c:	ldp	x8, x2, [x19, #272]
  448550:	mov	w1, #0xff                  	// #255
  448554:	mov	x0, x19
  448558:	strb	wzr, [x19, #255]
  44855c:	blr	x8
  448560:	ldr	x9, [x19, #320]
  448564:	mov	x8, xzr
  448568:	str	xzr, [x19, #256]
  44856c:	add	x9, x9, #0x1
  448570:	str	x9, [x19, #320]
  448574:	b	448520 <feof@plt+0x45b50>
  448578:	ldr	x3, [x19, #296]
  44857c:	and	w22, w20, #0xffffff9f
  448580:	mov	x0, x19
  448584:	mov	w1, w22
  448588:	mov	x2, x21
  44858c:	bl	44c588 <feof@plt+0x49bb8>
  448590:	ldr	x20, [x21, #8]
  448594:	cbz	x20, 447e5c <feof@plt+0x4548c>
  448598:	ldr	w8, [x20, #4]
  44859c:	cmp	w8, #0x1
  4485a0:	b.gt	447e54 <feof@plt+0x45484>
  4485a4:	ldr	w9, [x19, #308]
  4485a8:	cmp	w9, #0x401
  4485ac:	b.ge	447e54 <feof@plt+0x45484>  // b.tcont
  4485b0:	add	w8, w8, #0x1
  4485b4:	str	w8, [x20, #4]
  4485b8:	ldr	x8, [x19, #328]
  4485bc:	add	w9, w9, #0x1
  4485c0:	str	w9, [x19, #308]
  4485c4:	add	x9, sp, #0x10
  4485c8:	mov	x0, x19
  4485cc:	mov	w1, w22
  4485d0:	mov	x2, x20
  4485d4:	stp	x20, x8, [sp, #16]
  4485d8:	str	x9, [x19, #328]
  4485dc:	bl	445750 <feof@plt+0x42d80>
  4485e0:	ldr	x8, [sp, #24]
  4485e4:	str	x8, [x19, #328]
  4485e8:	ldr	w8, [x20, #4]
  4485ec:	sub	w8, w8, #0x1
  4485f0:	str	w8, [x20, #4]
  4485f4:	b	447ec4 <feof@plt+0x454f4>
  4485f8:	cbz	x22, 448614 <feof@plt+0x45c44>
  4485fc:	ldr	w9, [x22, #4]
  448600:	cmp	w9, #0x1
  448604:	b.gt	448614 <feof@plt+0x45c44>
  448608:	ldr	w10, [x19, #308]
  44860c:	cmp	w10, #0x401
  448610:	b.lt	449c3c <feof@plt+0x4726c>  // b.tstop
  448614:	mov	w9, #0x1                   	// #1
  448618:	str	w9, [x25]
  44861c:	cbz	x8, 447e5c <feof@plt+0x4548c>
  448620:	ldur	x8, [x29, #-16]
  448624:	str	x8, [x19, #288]
  448628:	b	447e5c <feof@plt+0x4548c>
  44862c:	add	w8, w8, #0x1
  448630:	add	w9, w9, #0x1
  448634:	str	w8, [x21, #4]
  448638:	str	w9, [x19, #308]
  44863c:	str	x21, [sp, #16]
  448640:	ldr	x8, [x19, #328]
  448644:	add	x9, sp, #0x10
  448648:	mov	x0, x19
  44864c:	mov	w1, w20
  448650:	mov	x2, x21
  448654:	str	x8, [sp, #24]
  448658:	str	x9, [x19, #328]
  44865c:	bl	445750 <feof@plt+0x42d80>
  448660:	ldr	x8, [sp, #24]
  448664:	str	x8, [x19, #328]
  448668:	ldr	w8, [x21, #4]
  44866c:	sub	w8, w8, #0x1
  448670:	str	w8, [x21, #4]
  448674:	ldr	w8, [x19, #308]
  448678:	sub	w8, w8, #0x1
  44867c:	str	w8, [x19, #308]
  448680:	b	447b10 <feof@plt+0x45140>
  448684:	cbz	w22, 447e5c <feof@plt+0x4548c>
  448688:	ldr	x21, [x21, #8]
  44868c:	mov	w23, wzr
  448690:	sub	w24, w22, #0x1
  448694:	mov	w26, #0x1                   	// #1
  448698:	mov	w27, #0x2c                  	// #44
  44869c:	mov	w28, #0x20                  	// #32
  4486a0:	b	4486c0 <feof@plt+0x45cf0>
  4486a4:	add	x9, x8, #0x1
  4486a8:	str	x9, [x19, #256]
  4486ac:	strb	w28, [x19, x8]
  4486b0:	strb	w28, [x19, #264]
  4486b4:	add	w23, w23, #0x1
  4486b8:	cmp	w22, w23
  4486bc:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  4486c0:	str	w23, [x19, #316]
  4486c4:	cbz	x21, 4486e0 <feof@plt+0x45d10>
  4486c8:	ldr	w8, [x21, #4]
  4486cc:	cmp	w8, #0x1
  4486d0:	b.gt	4486e0 <feof@plt+0x45d10>
  4486d4:	ldr	w9, [x19, #308]
  4486d8:	cmp	w9, #0x401
  4486dc:	b.lt	448768 <feof@plt+0x45d98>  // b.tstop
  4486e0:	str	w26, [x25]
  4486e4:	cmp	w23, w24
  4486e8:	b.ge	4486b4 <feof@plt+0x45ce4>  // b.tcont
  4486ec:	ldr	x8, [x19, #256]
  4486f0:	cmp	x8, #0xff
  4486f4:	b.ne	448720 <feof@plt+0x45d50>  // b.any
  4486f8:	ldp	x8, x2, [x19, #272]
  4486fc:	mov	w1, #0xff                  	// #255
  448700:	mov	x0, x19
  448704:	strb	wzr, [x19, #255]
  448708:	blr	x8
  44870c:	ldr	x9, [x19, #320]
  448710:	mov	x8, xzr
  448714:	str	xzr, [x19, #256]
  448718:	add	x9, x9, #0x1
  44871c:	str	x9, [x19, #320]
  448720:	add	x9, x8, #0x1
  448724:	str	x9, [x19, #256]
  448728:	strb	w27, [x19, x8]
  44872c:	ldr	x8, [x19, #256]
  448730:	strb	w27, [x19, #264]
  448734:	cmp	x8, #0xff
  448738:	b.ne	4486a4 <feof@plt+0x45cd4>  // b.any
  44873c:	ldp	x8, x2, [x19, #272]
  448740:	mov	w1, #0xff                  	// #255
  448744:	mov	x0, x19
  448748:	strb	wzr, [x19, #255]
  44874c:	blr	x8
  448750:	ldr	x9, [x19, #320]
  448754:	mov	x8, xzr
  448758:	str	xzr, [x19, #256]
  44875c:	add	x9, x9, #0x1
  448760:	str	x9, [x19, #320]
  448764:	b	4486a4 <feof@plt+0x45cd4>
  448768:	add	w8, w8, #0x1
  44876c:	str	w8, [x21, #4]
  448770:	ldr	x8, [x19, #328]
  448774:	add	w9, w9, #0x1
  448778:	str	w9, [x19, #308]
  44877c:	mov	x0, x19
  448780:	stp	x21, x8, [sp, #16]
  448784:	add	x8, sp, #0x10
  448788:	mov	w1, w20
  44878c:	mov	x2, x21
  448790:	str	x8, [x19, #328]
  448794:	bl	445750 <feof@plt+0x42d80>
  448798:	ldr	x8, [sp, #24]
  44879c:	str	x8, [x19, #328]
  4487a0:	ldr	w8, [x21, #4]
  4487a4:	sub	w8, w8, #0x1
  4487a8:	str	w8, [x21, #4]
  4487ac:	ldr	w8, [x19, #308]
  4487b0:	sub	w8, w8, #0x1
  4487b4:	str	w8, [x19, #308]
  4487b8:	cmp	w23, w24
  4487bc:	b.ge	4486b4 <feof@plt+0x45ce4>  // b.tcont
  4487c0:	b	4486ec <feof@plt+0x45d1c>
  4487c4:	mov	x22, xzr
  4487c8:	b	4457b8 <feof@plt+0x42de8>
  4487cc:	ldr	x22, [x19, #288]
  4487d0:	cbz	x22, 4498f4 <feof@plt+0x46f24>
  4487d4:	ldr	x9, [x22, #8]
  4487d8:	ldr	w8, [x21, #8]
  4487dc:	ldr	x21, [x9, #16]
  4487e0:	tbnz	w8, #31, 44a570 <feof@plt+0x47ba0>
  4487e4:	cbz	x21, 447e54 <feof@plt+0x45484>
  4487e8:	ldr	w9, [x21]
  4487ec:	cmp	w9, #0x2f
  4487f0:	b.ne	447e54 <feof@plt+0x45484>  // b.any
  4487f4:	subs	w9, w8, #0x1
  4487f8:	b.lt	44a568 <feof@plt+0x47b98>  // b.tstop
  4487fc:	ldr	x21, [x21, #16]
  448800:	mov	w8, w9
  448804:	cbnz	x21, 4487e8 <feof@plt+0x45e18>
  448808:	b	447e54 <feof@plt+0x45484>
  44880c:	b.ne	448838 <feof@plt+0x45e68>  // b.any
  448810:	ldp	x8, x2, [x19, #272]
  448814:	mov	w1, #0xff                  	// #255
  448818:	mov	x0, x19
  44881c:	strb	wzr, [x19, #255]
  448820:	blr	x8
  448824:	ldr	x9, [x19, #320]
  448828:	mov	x8, xzr
  44882c:	str	xzr, [x19, #256]
  448830:	add	x9, x9, #0x1
  448834:	str	x9, [x19, #320]
  448838:	add	x9, x8, #0x1
  44883c:	mov	w10, #0x74                  	// #116
  448840:	str	x9, [x19, #256]
  448844:	strb	w10, [x19, x8]
  448848:	ldr	x8, [x19, #256]
  44884c:	strb	w10, [x19, #264]
  448850:	cmp	x8, #0xff
  448854:	b.ne	448880 <feof@plt+0x45eb0>  // b.any
  448858:	ldp	x8, x2, [x19, #272]
  44885c:	mov	w1, #0xff                  	// #255
  448860:	mov	x0, x19
  448864:	strb	wzr, [x19, #255]
  448868:	blr	x8
  44886c:	ldr	x9, [x19, #320]
  448870:	mov	x8, xzr
  448874:	str	xzr, [x19, #256]
  448878:	add	x9, x9, #0x1
  44887c:	str	x9, [x19, #320]
  448880:	add	x9, x8, #0x1
  448884:	mov	w10, #0x68                  	// #104
  448888:	str	x9, [x19, #256]
  44888c:	strb	w10, [x19, x8]
  448890:	ldr	x8, [x19, #256]
  448894:	strb	w10, [x19, #264]
  448898:	cmp	x8, #0xff
  44889c:	b.ne	4488c8 <feof@plt+0x45ef8>  // b.any
  4488a0:	ldp	x8, x2, [x19, #272]
  4488a4:	mov	w1, #0xff                  	// #255
  4488a8:	mov	x0, x19
  4488ac:	strb	wzr, [x19, #255]
  4488b0:	blr	x8
  4488b4:	ldr	x9, [x19, #320]
  4488b8:	mov	x8, xzr
  4488bc:	str	xzr, [x19, #256]
  4488c0:	add	x9, x9, #0x1
  4488c4:	str	x9, [x19, #320]
  4488c8:	add	x9, x8, #0x1
  4488cc:	mov	w10, #0x69                  	// #105
  4488d0:	str	x9, [x19, #256]
  4488d4:	strb	w10, [x19, x8]
  4488d8:	ldr	x8, [x19, #256]
  4488dc:	strb	w10, [x19, #264]
  4488e0:	cmp	x8, #0xff
  4488e4:	b.ne	448910 <feof@plt+0x45f40>  // b.any
  4488e8:	ldp	x8, x2, [x19, #272]
  4488ec:	mov	w1, #0xff                  	// #255
  4488f0:	mov	x0, x19
  4488f4:	strb	wzr, [x19, #255]
  4488f8:	blr	x8
  4488fc:	ldr	x9, [x19, #320]
  448900:	mov	x8, xzr
  448904:	str	xzr, [x19, #256]
  448908:	add	x9, x9, #0x1
  44890c:	str	x9, [x19, #320]
  448910:	add	x9, x8, #0x1
  448914:	mov	w10, #0x73                  	// #115
  448918:	b	44a750 <feof@plt+0x47d80>
  44891c:	mov	w24, #0x1                   	// #1
  448920:	ldr	x23, [x21, #16]
  448924:	cbz	x23, 448940 <feof@plt+0x45f70>
  448928:	ldr	w8, [x23, #4]
  44892c:	cmp	w8, #0x1
  448930:	b.gt	448940 <feof@plt+0x45f70>
  448934:	ldr	w9, [x19, #308]
  448938:	cmp	w9, #0x401
  44893c:	b.lt	4498a0 <feof@plt+0x46ed0>  // b.tstop
  448940:	mov	w8, #0x1                   	// #1
  448944:	str	w8, [x25]
  448948:	str	x22, [x19, #296]
  44894c:	ldr	w8, [sp, #32]
  448950:	cbnz	w8, 447e5c <feof@plt+0x4548c>
  448954:	cmp	w24, #0x2
  448958:	b.cc	44898c <feof@plt+0x45fbc>  // b.lo, b.ul, b.last
  44895c:	sub	w8, w24, #0x1
  448960:	add	x9, sp, #0x10
  448964:	add	x8, x9, x8, lsl #5
  448968:	add	x22, x8, #0x8
  44896c:	ldr	x2, [x22], #-32
  448970:	mov	x0, x19
  448974:	mov	w1, w20
  448978:	bl	44b9e8 <feof@plt+0x49018>
  44897c:	sub	w24, w24, #0x1
  448980:	cmp	w24, #0x1
  448984:	b.hi	44896c <feof@plt+0x45f9c>  // b.pmore
  448988:	ldr	x22, [x19, #296]
  44898c:	mov	x0, x19
  448990:	mov	w1, w20
  448994:	mov	x2, x21
  448998:	mov	x3, x22
  44899c:	bl	44c860 <feof@plt+0x49e90>
  4489a0:	b	447e5c <feof@plt+0x4548c>
  4489a4:	b.ne	4489d0 <feof@plt+0x46000>  // b.any
  4489a8:	ldp	x8, x2, [x19, #272]
  4489ac:	mov	w1, #0xff                  	// #255
  4489b0:	mov	x0, x19
  4489b4:	strb	wzr, [x19, #255]
  4489b8:	blr	x8
  4489bc:	ldr	x9, [x19, #320]
  4489c0:	mov	x8, xzr
  4489c4:	str	xzr, [x19, #256]
  4489c8:	add	x9, x9, #0x1
  4489cc:	str	x9, [x19, #320]
  4489d0:	add	x9, x8, #0x1
  4489d4:	mov	w10, #0x5f                  	// #95
  4489d8:	str	x9, [x19, #256]
  4489dc:	strb	w10, [x19, x8]
  4489e0:	ldr	x8, [x19, #256]
  4489e4:	strb	w10, [x19, #264]
  4489e8:	cmp	x8, #0xff
  4489ec:	b.ne	448a18 <feof@plt+0x46048>  // b.any
  4489f0:	ldp	x8, x2, [x19, #272]
  4489f4:	mov	w1, #0xff                  	// #255
  4489f8:	mov	x0, x19
  4489fc:	strb	wzr, [x19, #255]
  448a00:	blr	x8
  448a04:	ldr	x9, [x19, #320]
  448a08:	mov	x8, xzr
  448a0c:	str	xzr, [x19, #256]
  448a10:	add	x9, x9, #0x1
  448a14:	str	x9, [x19, #320]
  448a18:	add	x9, x8, #0x1
  448a1c:	mov	w10, #0x46                  	// #70
  448a20:	str	x9, [x19, #256]
  448a24:	strb	w10, [x19, x8]
  448a28:	ldr	x8, [x19, #256]
  448a2c:	strb	w10, [x19, #264]
  448a30:	cmp	x8, #0xff
  448a34:	b.ne	448a60 <feof@plt+0x46090>  // b.any
  448a38:	ldp	x8, x2, [x19, #272]
  448a3c:	mov	w1, #0xff                  	// #255
  448a40:	mov	x0, x19
  448a44:	strb	wzr, [x19, #255]
  448a48:	blr	x8
  448a4c:	ldr	x9, [x19, #320]
  448a50:	mov	x8, xzr
  448a54:	str	xzr, [x19, #256]
  448a58:	add	x9, x9, #0x1
  448a5c:	str	x9, [x19, #320]
  448a60:	add	x9, x8, #0x1
  448a64:	mov	w10, #0x72                  	// #114
  448a68:	str	x9, [x19, #256]
  448a6c:	strb	w10, [x19, x8]
  448a70:	ldr	x8, [x19, #256]
  448a74:	strb	w10, [x19, #264]
  448a78:	cmp	x8, #0xff
  448a7c:	b.ne	448aa8 <feof@plt+0x460d8>  // b.any
  448a80:	ldp	x8, x2, [x19, #272]
  448a84:	mov	w1, #0xff                  	// #255
  448a88:	mov	x0, x19
  448a8c:	strb	wzr, [x19, #255]
  448a90:	blr	x8
  448a94:	ldr	x9, [x19, #320]
  448a98:	mov	x8, xzr
  448a9c:	str	xzr, [x19, #256]
  448aa0:	add	x9, x9, #0x1
  448aa4:	str	x9, [x19, #320]
  448aa8:	add	x9, x8, #0x1
  448aac:	mov	w10, #0x61                  	// #97
  448ab0:	str	x9, [x19, #256]
  448ab4:	strb	w10, [x19, x8]
  448ab8:	ldr	x8, [x19, #256]
  448abc:	strb	w10, [x19, #264]
  448ac0:	cmp	x8, #0xff
  448ac4:	b.ne	448af0 <feof@plt+0x46120>  // b.any
  448ac8:	ldp	x8, x2, [x19, #272]
  448acc:	mov	w1, #0xff                  	// #255
  448ad0:	mov	x0, x19
  448ad4:	strb	wzr, [x19, #255]
  448ad8:	blr	x8
  448adc:	ldr	x9, [x19, #320]
  448ae0:	mov	x8, xzr
  448ae4:	str	xzr, [x19, #256]
  448ae8:	add	x9, x9, #0x1
  448aec:	str	x9, [x19, #320]
  448af0:	add	x9, x8, #0x1
  448af4:	mov	w10, #0x63                  	// #99
  448af8:	str	x9, [x19, #256]
  448afc:	strb	w10, [x19, x8]
  448b00:	ldr	x8, [x19, #256]
  448b04:	strb	w10, [x19, #264]
  448b08:	cmp	x8, #0xff
  448b0c:	b.ne	448b38 <feof@plt+0x46168>  // b.any
  448b10:	ldp	x8, x2, [x19, #272]
  448b14:	mov	w1, #0xff                  	// #255
  448b18:	mov	x0, x19
  448b1c:	strb	wzr, [x19, #255]
  448b20:	blr	x8
  448b24:	ldr	x9, [x19, #320]
  448b28:	mov	x8, xzr
  448b2c:	str	xzr, [x19, #256]
  448b30:	add	x9, x9, #0x1
  448b34:	str	x9, [x19, #320]
  448b38:	add	x9, x8, #0x1
  448b3c:	mov	w10, #0x74                  	// #116
  448b40:	b	44a750 <feof@plt+0x47d80>
  448b44:	ldr	x21, [x21, #8]
  448b48:	ldr	w8, [x21]
  448b4c:	cmp	w8, #0x31
  448b50:	b.hi	449c98 <feof@plt+0x472c8>  // b.pmore
  448b54:	mov	w9, #0x1                   	// #1
  448b58:	lsl	x8, x9, x8
  448b5c:	mov	x9, #0x43                  	// #67
  448b60:	movk	x9, #0x2, lsl #48
  448b64:	tst	x8, x9
  448b68:	b.eq	449c98 <feof@plt+0x472c8>  // b.none
  448b6c:	cbz	x21, 448b88 <feof@plt+0x461b8>
  448b70:	ldr	w8, [x21, #4]
  448b74:	cmp	w8, #0x1
  448b78:	b.gt	448b88 <feof@plt+0x461b8>
  448b7c:	ldr	w9, [x19, #308]
  448b80:	cmp	w9, #0x401
  448b84:	b.lt	449fe8 <feof@plt+0x47618>  // b.tstop
  448b88:	mov	w8, #0x1                   	// #1
  448b8c:	str	w8, [x25]
  448b90:	b	44a038 <feof@plt+0x47668>
  448b94:	ldr	x8, [x19, #256]
  448b98:	cmp	x8, #0xff
  448b9c:	b.ne	448bc8 <feof@plt+0x461f8>  // b.any
  448ba0:	ldp	x8, x2, [x19, #272]
  448ba4:	mov	w1, #0xff                  	// #255
  448ba8:	mov	x0, x19
  448bac:	strb	wzr, [x19, #255]
  448bb0:	blr	x8
  448bb4:	ldr	x9, [x19, #320]
  448bb8:	mov	x8, xzr
  448bbc:	str	xzr, [x19, #256]
  448bc0:	add	x9, x9, #0x1
  448bc4:	str	x9, [x19, #320]
  448bc8:	add	x9, x8, #0x1
  448bcc:	mov	w10, #0x28                  	// #40
  448bd0:	str	x9, [x19, #256]
  448bd4:	strb	w10, [x19, x8]
  448bd8:	strb	w10, [x19, #264]
  448bdc:	ldr	x22, [x22, #8]
  448be0:	cbz	x22, 448bfc <feof@plt+0x4622c>
  448be4:	ldr	w8, [x22, #4]
  448be8:	cmp	w8, #0x1
  448bec:	b.gt	448bfc <feof@plt+0x4622c>
  448bf0:	ldr	w9, [x19, #308]
  448bf4:	cmp	w9, #0x401
  448bf8:	b.lt	449df8 <feof@plt+0x47428>  // b.tstop
  448bfc:	mov	w8, #0x1                   	// #1
  448c00:	str	w8, [x25]
  448c04:	ldr	x8, [x19, #256]
  448c08:	cmp	x8, #0xff
  448c0c:	b.ne	448c38 <feof@plt+0x46268>  // b.any
  448c10:	ldp	x8, x2, [x19, #272]
  448c14:	mov	w1, #0xff                  	// #255
  448c18:	mov	x0, x19
  448c1c:	strb	wzr, [x19, #255]
  448c20:	blr	x8
  448c24:	ldr	x9, [x19, #320]
  448c28:	mov	x8, xzr
  448c2c:	str	xzr, [x19, #256]
  448c30:	add	x9, x9, #0x1
  448c34:	str	x9, [x19, #320]
  448c38:	add	x9, x8, #0x1
  448c3c:	mov	w10, #0x29                  	// #41
  448c40:	str	x9, [x19, #256]
  448c44:	strb	w10, [x19, x8]
  448c48:	strb	w10, [x19, #264]
  448c4c:	b	448c74 <feof@plt+0x462a4>
  448c50:	cbz	x22, 448c6c <feof@plt+0x4629c>
  448c54:	ldr	w8, [x22, #4]
  448c58:	cmp	w8, #0x1
  448c5c:	b.gt	448c6c <feof@plt+0x4629c>
  448c60:	ldr	w9, [x19, #308]
  448c64:	cmp	w9, #0x401
  448c68:	b.lt	449e4c <feof@plt+0x4747c>  // b.tstop
  448c6c:	mov	w8, #0x1                   	// #1
  448c70:	str	w8, [x25]
  448c74:	ldr	w8, [x21]
  448c78:	cmp	w8, #0x31
  448c7c:	b.hi	448c98 <feof@plt+0x462c8>  // b.pmore
  448c80:	mov	w9, #0x1                   	// #1
  448c84:	lsl	x8, x9, x8
  448c88:	mov	x9, #0x43                  	// #67
  448c8c:	movk	x9, #0x2, lsl #48
  448c90:	tst	x8, x9
  448c94:	b.ne	448f5c <feof@plt+0x4658c>  // b.any
  448c98:	ldr	x8, [x19, #256]
  448c9c:	cmp	x8, #0xff
  448ca0:	b.ne	448ccc <feof@plt+0x462fc>  // b.any
  448ca4:	ldp	x8, x2, [x19, #272]
  448ca8:	mov	w1, #0xff                  	// #255
  448cac:	mov	x0, x19
  448cb0:	strb	wzr, [x19, #255]
  448cb4:	blr	x8
  448cb8:	ldr	x9, [x19, #320]
  448cbc:	mov	x8, xzr
  448cc0:	str	xzr, [x19, #256]
  448cc4:	add	x9, x9, #0x1
  448cc8:	str	x9, [x19, #320]
  448ccc:	add	x9, x8, #0x1
  448cd0:	mov	w10, #0x28                  	// #40
  448cd4:	str	x9, [x19, #256]
  448cd8:	strb	w10, [x19, x8]
  448cdc:	strb	w10, [x19, #264]
  448ce0:	cbnz	x21, 448114 <feof@plt+0x45744>
  448ce4:	b	44a70c <feof@plt+0x47d3c>
  448ce8:	add	w8, w8, #0x1
  448cec:	str	w8, [x22, #4]
  448cf0:	ldr	x8, [x19, #328]
  448cf4:	add	w9, w9, #0x1
  448cf8:	str	w9, [x19, #308]
  448cfc:	add	x9, sp, #0x10
  448d00:	mov	x0, x19
  448d04:	mov	w1, w20
  448d08:	mov	x2, x22
  448d0c:	stp	x22, x8, [sp, #16]
  448d10:	str	x9, [x19, #328]
  448d14:	bl	445750 <feof@plt+0x42d80>
  448d18:	ldr	x8, [sp, #24]
  448d1c:	str	x8, [x19, #328]
  448d20:	ldr	w8, [x22, #4]
  448d24:	sub	w8, w8, #0x1
  448d28:	str	w8, [x22, #4]
  448d2c:	ldr	w8, [x19, #308]
  448d30:	sub	w8, w8, #0x1
  448d34:	str	w8, [x19, #308]
  448d38:	tbz	w20, #2, 4458f0 <feof@plt+0x42f20>
  448d3c:	ldr	x8, [x19, #256]
  448d40:	cmp	x8, #0xff
  448d44:	b.ne	448d70 <feof@plt+0x463a0>  // b.any
  448d48:	ldp	x8, x2, [x19, #272]
  448d4c:	mov	w1, #0xff                  	// #255
  448d50:	mov	x0, x19
  448d54:	strb	wzr, [x19, #255]
  448d58:	blr	x8
  448d5c:	ldr	x9, [x19, #320]
  448d60:	mov	x8, xzr
  448d64:	str	xzr, [x19, #256]
  448d68:	add	x9, x9, #0x1
  448d6c:	str	x9, [x19, #320]
  448d70:	add	x9, x8, #0x1
  448d74:	mov	w10, #0x2e                  	// #46
  448d78:	str	x9, [x19, #256]
  448d7c:	strb	w10, [x19, x8]
  448d80:	strb	w10, [x19, #264]
  448d84:	ldr	x21, [x21, #16]
  448d88:	ldr	w8, [x21]
  448d8c:	cmp	w8, #0x47
  448d90:	b.ne	448f5c <feof@plt+0x4658c>  // b.any
  448d94:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  448d98:	mov	x22, xzr
  448d9c:	add	x23, x23, #0x4ba
  448da0:	b	448dc0 <feof@plt+0x463f0>
  448da4:	add	x22, x22, #0x1
  448da8:	add	x9, x8, #0x1
  448dac:	cmp	x22, #0xd
  448db0:	str	x9, [x19, #256]
  448db4:	strb	w24, [x19, x8]
  448db8:	strb	w24, [x19, #264]
  448dbc:	b.eq	448dfc <feof@plt+0x4642c>  // b.none
  448dc0:	ldr	x8, [x19, #256]
  448dc4:	ldrb	w24, [x23, x22]
  448dc8:	cmp	x8, #0xff
  448dcc:	b.ne	448da4 <feof@plt+0x463d4>  // b.any
  448dd0:	ldp	x8, x2, [x19, #272]
  448dd4:	mov	w1, #0xff                  	// #255
  448dd8:	mov	x0, x19
  448ddc:	strb	wzr, [x19, #255]
  448de0:	blr	x8
  448de4:	ldr	x9, [x19, #320]
  448de8:	mov	x8, xzr
  448dec:	str	xzr, [x19, #256]
  448df0:	add	x9, x9, #0x1
  448df4:	str	x9, [x19, #320]
  448df8:	b	448da4 <feof@plt+0x463d4>
  448dfc:	ldr	w8, [x21, #16]
  448e00:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  448e04:	add	x1, x1, #0x6e9
  448e08:	add	x0, sp, #0x10
  448e0c:	add	w2, w8, #0x1
  448e10:	bl	4025b0 <sprintf@plt>
  448e14:	add	x0, sp, #0x10
  448e18:	bl	402420 <strlen@plt>
  448e1c:	cbz	x0, 448e84 <feof@plt+0x464b4>
  448e20:	mov	x22, x0
  448e24:	add	x23, sp, #0x10
  448e28:	b	448e48 <feof@plt+0x46478>
  448e2c:	add	x9, x8, #0x1
  448e30:	subs	x22, x22, #0x1
  448e34:	add	x23, x23, #0x1
  448e38:	str	x9, [x19, #256]
  448e3c:	strb	w24, [x19, x8]
  448e40:	strb	w24, [x19, #264]
  448e44:	b.eq	448e84 <feof@plt+0x464b4>  // b.none
  448e48:	ldr	x8, [x19, #256]
  448e4c:	ldrb	w24, [x23]
  448e50:	cmp	x8, #0xff
  448e54:	b.ne	448e2c <feof@plt+0x4645c>  // b.any
  448e58:	ldp	x8, x2, [x19, #272]
  448e5c:	mov	w1, #0xff                  	// #255
  448e60:	mov	x0, x19
  448e64:	strb	wzr, [x19, #255]
  448e68:	blr	x8
  448e6c:	ldr	x9, [x19, #320]
  448e70:	mov	x8, xzr
  448e74:	str	xzr, [x19, #256]
  448e78:	add	x9, x9, #0x1
  448e7c:	str	x9, [x19, #320]
  448e80:	b	448e2c <feof@plt+0x4645c>
  448e84:	ldr	x8, [x19, #256]
  448e88:	cmp	x8, #0xff
  448e8c:	b.ne	448eb8 <feof@plt+0x464e8>  // b.any
  448e90:	ldp	x8, x2, [x19, #272]
  448e94:	mov	w1, #0xff                  	// #255
  448e98:	mov	x0, x19
  448e9c:	strb	wzr, [x19, #255]
  448ea0:	blr	x8
  448ea4:	ldr	x9, [x19, #320]
  448ea8:	mov	x8, xzr
  448eac:	str	xzr, [x19, #256]
  448eb0:	add	x9, x9, #0x1
  448eb4:	str	x9, [x19, #320]
  448eb8:	add	x9, x8, #0x1
  448ebc:	mov	w10, #0x7d                  	// #125
  448ec0:	str	x9, [x19, #256]
  448ec4:	strb	w10, [x19, x8]
  448ec8:	ldr	x8, [x19, #256]
  448ecc:	strb	w10, [x19, #264]
  448ed0:	cmp	x8, #0xff
  448ed4:	b.ne	448f00 <feof@plt+0x46530>  // b.any
  448ed8:	ldp	x8, x2, [x19, #272]
  448edc:	mov	w1, #0xff                  	// #255
  448ee0:	mov	x0, x19
  448ee4:	strb	wzr, [x19, #255]
  448ee8:	blr	x8
  448eec:	ldr	x9, [x19, #320]
  448ef0:	mov	x8, xzr
  448ef4:	str	xzr, [x19, #256]
  448ef8:	add	x9, x9, #0x1
  448efc:	str	x9, [x19, #320]
  448f00:	add	x9, x8, #0x1
  448f04:	mov	w22, #0x3a                  	// #58
  448f08:	str	x9, [x19, #256]
  448f0c:	strb	w22, [x19, x8]
  448f10:	ldr	x8, [x19, #256]
  448f14:	strb	w22, [x19, #264]
  448f18:	cmp	x8, #0xff
  448f1c:	b.ne	448f48 <feof@plt+0x46578>  // b.any
  448f20:	ldp	x8, x2, [x19, #272]
  448f24:	mov	w1, #0xff                  	// #255
  448f28:	mov	x0, x19
  448f2c:	strb	wzr, [x19, #255]
  448f30:	blr	x8
  448f34:	ldr	x9, [x19, #320]
  448f38:	mov	x8, xzr
  448f3c:	str	xzr, [x19, #256]
  448f40:	add	x9, x9, #0x1
  448f44:	str	x9, [x19, #320]
  448f48:	add	x9, x8, #0x1
  448f4c:	str	x9, [x19, #256]
  448f50:	strb	w22, [x19, x8]
  448f54:	strb	w22, [x19, #264]
  448f58:	ldr	x21, [x21, #8]
  448f5c:	cbnz	x21, 447e3c <feof@plt+0x4546c>
  448f60:	b	447e54 <feof@plt+0x45484>
  448f64:	add	w8, w8, #0x1
  448f68:	str	w8, [x22, #4]
  448f6c:	ldr	x8, [x19, #328]
  448f70:	add	w9, w9, #0x1
  448f74:	str	w9, [x19, #308]
  448f78:	sub	x9, x29, #0x10
  448f7c:	mov	x0, x19
  448f80:	mov	w1, w20
  448f84:	mov	x2, x22
  448f88:	stp	x22, x8, [x29, #-16]
  448f8c:	str	x9, [x19, #328]
  448f90:	bl	445750 <feof@plt+0x42d80>
  448f94:	ldur	x8, [x29, #-8]
  448f98:	str	x8, [x19, #328]
  448f9c:	ldr	w8, [x22, #4]
  448fa0:	sub	w8, w8, #0x1
  448fa4:	str	w8, [x22, #4]
  448fa8:	ldr	w8, [x19, #308]
  448fac:	sub	w8, w8, #0x1
  448fb0:	str	w8, [x19, #308]
  448fb4:	ldr	w8, [sp, #32]
  448fb8:	cbnz	w8, 445aa4 <feof@plt+0x430d4>
  448fbc:	b	445a94 <feof@plt+0x430c4>
  448fc0:	add	w8, w8, #0x1
  448fc4:	str	w8, [x22, #4]
  448fc8:	ldr	x8, [x19, #328]
  448fcc:	add	w9, w9, #0x1
  448fd0:	str	w9, [x19, #308]
  448fd4:	add	x9, sp, #0x10
  448fd8:	mov	x0, x19
  448fdc:	mov	w1, w20
  448fe0:	mov	x2, x22
  448fe4:	stp	x22, x8, [sp, #16]
  448fe8:	str	x9, [x19, #328]
  448fec:	bl	445750 <feof@plt+0x42d80>
  448ff0:	ldr	x8, [sp, #24]
  448ff4:	str	x8, [x19, #328]
  448ff8:	ldr	w8, [x22, #4]
  448ffc:	sub	w8, w8, #0x1
  449000:	str	w8, [x22, #4]
  449004:	ldr	w8, [x19, #308]
  449008:	sub	w8, w8, #0x1
  44900c:	str	w8, [x19, #308]
  449010:	ldr	x8, [x21, #16]
  449014:	cbz	x8, 447e5c <feof@plt+0x4548c>
  449018:	ldr	x8, [x19, #256]
  44901c:	cmp	x8, #0xfe
  449020:	b.cc	44904c <feof@plt+0x4667c>  // b.lo, b.ul, b.last
  449024:	strb	wzr, [x19, x8]
  449028:	ldr	x1, [x19, #256]
  44902c:	ldp	x8, x2, [x19, #272]
  449030:	mov	x0, x19
  449034:	blr	x8
  449038:	ldr	x9, [x19, #320]
  44903c:	mov	x8, xzr
  449040:	str	xzr, [x19, #256]
  449044:	add	x9, x9, #0x1
  449048:	str	x9, [x19, #320]
  44904c:	add	x9, x8, #0x1
  449050:	mov	w10, #0x2c                  	// #44
  449054:	str	x9, [x19, #256]
  449058:	strb	w10, [x19, x8]
  44905c:	ldr	x8, [x19, #256]
  449060:	strb	w10, [x19, #264]
  449064:	cmp	x8, #0xff
  449068:	b.ne	449094 <feof@plt+0x466c4>  // b.any
  44906c:	ldp	x8, x2, [x19, #272]
  449070:	mov	w1, #0xff                  	// #255
  449074:	mov	x0, x19
  449078:	strb	wzr, [x19, #255]
  44907c:	blr	x8
  449080:	ldr	x9, [x19, #320]
  449084:	mov	x8, xzr
  449088:	str	xzr, [x19, #256]
  44908c:	add	x9, x9, #0x1
  449090:	str	x9, [x19, #320]
  449094:	add	x9, x8, #0x1
  449098:	mov	w10, #0x20                  	// #32
  44909c:	str	x9, [x19, #256]
  4490a0:	strb	w10, [x19, x8]
  4490a4:	strb	w10, [x19, #264]
  4490a8:	ldr	x21, [x21, #16]
  4490ac:	ldr	x22, [x19, #256]
  4490b0:	cbz	x21, 4490cc <feof@plt+0x466fc>
  4490b4:	ldr	w8, [x21, #4]
  4490b8:	cmp	w8, #0x1
  4490bc:	b.gt	4490cc <feof@plt+0x466fc>
  4490c0:	ldr	w9, [x19, #308]
  4490c4:	cmp	w9, #0x401
  4490c8:	b.lt	449244 <feof@plt+0x46874>  // b.tstop
  4490cc:	mov	w8, #0x1                   	// #1
  4490d0:	str	w8, [x25]
  4490d4:	ldr	x8, [x19, #256]
  4490d8:	cmp	x8, x22
  4490dc:	b.ne	447e5c <feof@plt+0x4548c>  // b.any
  4490e0:	sub	x8, x22, #0x2
  4490e4:	str	x8, [x19, #256]
  4490e8:	b	447e5c <feof@plt+0x4548c>
  4490ec:	mov	x0, x19
  4490f0:	mov	w1, w20
  4490f4:	mov	x2, x21
  4490f8:	bl	44cc0c <feof@plt+0x4a23c>
  4490fc:	cbnz	w0, 447e5c <feof@plt+0x4548c>
  449100:	ldr	x8, [x21, #8]
  449104:	ldr	w9, [x8]
  449108:	cmp	w9, #0x32
  44910c:	b.ne	44917c <feof@plt+0x467ac>  // b.any
  449110:	ldr	x9, [x8, #8]
  449114:	ldr	w10, [x9, #16]
  449118:	cmp	w10, #0x1
  44911c:	b.ne	44917c <feof@plt+0x467ac>  // b.any
  449120:	ldr	x9, [x9, #8]
  449124:	ldrb	w9, [x9]
  449128:	cmp	w9, #0x3e
  44912c:	b.ne	44917c <feof@plt+0x467ac>  // b.any
  449130:	ldr	x8, [x19, #256]
  449134:	cmp	x8, #0xff
  449138:	b.ne	449164 <feof@plt+0x46794>  // b.any
  44913c:	ldp	x8, x2, [x19, #272]
  449140:	mov	w1, #0xff                  	// #255
  449144:	mov	x0, x19
  449148:	strb	wzr, [x19, #255]
  44914c:	blr	x8
  449150:	ldr	x9, [x19, #320]
  449154:	mov	x8, xzr
  449158:	str	xzr, [x19, #256]
  44915c:	add	x9, x9, #0x1
  449160:	str	x9, [x19, #320]
  449164:	add	x9, x8, #0x1
  449168:	mov	w10, #0x28                  	// #40
  44916c:	str	x9, [x19, #256]
  449170:	strb	w10, [x19, x8]
  449174:	strb	w10, [x19, #264]
  449178:	ldr	x8, [x21, #8]
  44917c:	ldr	x8, [x8, #8]
  449180:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  449184:	add	x1, x1, #0x150
  449188:	ldr	x0, [x8]
  44918c:	bl	402820 <strcmp@plt>
  449190:	ldr	x8, [x21, #16]
  449194:	ldr	x22, [x8, #8]
  449198:	ldr	w8, [x22]
  44919c:	cbnz	w0, 449dac <feof@plt+0x473dc>
  4491a0:	cmp	w8, #0x3
  4491a4:	b.ne	449dac <feof@plt+0x473dc>  // b.any
  4491a8:	ldr	x8, [x22, #16]
  4491ac:	ldr	w8, [x8]
  4491b0:	cmp	w8, #0x29
  4491b4:	b.eq	4491c0 <feof@plt+0x467f0>  // b.none
  4491b8:	mov	w8, #0x1                   	// #1
  4491bc:	str	w8, [x25]
  4491c0:	ldr	x22, [x22, #8]
  4491c4:	ldr	w8, [x22]
  4491c8:	cmp	w8, #0x31
  4491cc:	b.ls	449db8 <feof@plt+0x473e8>  // b.plast
  4491d0:	b	44a8b4 <feof@plt+0x47ee4>
  4491d4:	add	w8, w8, #0x1
  4491d8:	str	w8, [x22, #4]
  4491dc:	ldr	x8, [x19, #328]
  4491e0:	add	w9, w9, #0x1
  4491e4:	str	w9, [x19, #308]
  4491e8:	add	x9, sp, #0x10
  4491ec:	mov	x0, x19
  4491f0:	mov	w1, w20
  4491f4:	mov	x2, x22
  4491f8:	stp	x22, x8, [sp, #16]
  4491fc:	str	x9, [x19, #328]
  449200:	bl	445750 <feof@plt+0x42d80>
  449204:	ldr	x8, [sp, #24]
  449208:	str	x8, [x19, #328]
  44920c:	ldr	w8, [x22, #4]
  449210:	sub	w8, w8, #0x1
  449214:	str	w8, [x22, #4]
  449218:	ldr	w8, [x19, #308]
  44921c:	sub	w8, w8, #0x1
  449220:	str	w8, [x19, #308]
  449224:	b	4479fc <feof@plt+0x4502c>
  449228:	cmp	w23, #0x7
  44922c:	b.ne	44798c <feof@plt+0x44fbc>  // b.any
  449230:	ldr	x9, [x21, #16]
  449234:	ldr	w10, [x9]
  449238:	cbz	w10, 44a104 <feof@plt+0x47734>
  44923c:	mov	w23, #0x7                   	// #7
  449240:	b	44798c <feof@plt+0x44fbc>
  449244:	add	w8, w8, #0x1
  449248:	ldr	x23, [x19, #320]
  44924c:	str	w8, [x21, #4]
  449250:	ldr	x8, [x19, #328]
  449254:	add	w9, w9, #0x1
  449258:	str	w9, [x19, #308]
  44925c:	add	x9, sp, #0x10
  449260:	mov	x0, x19
  449264:	mov	w1, w20
  449268:	mov	x2, x21
  44926c:	stp	x21, x8, [sp, #16]
  449270:	str	x9, [x19, #328]
  449274:	bl	445750 <feof@plt+0x42d80>
  449278:	ldr	x8, [sp, #24]
  44927c:	str	x8, [x19, #328]
  449280:	ldr	w8, [x21, #4]
  449284:	sub	w8, w8, #0x1
  449288:	str	w8, [x21, #4]
  44928c:	ldr	w8, [x19, #308]
  449290:	ldr	x9, [x19, #320]
  449294:	sub	w8, w8, #0x1
  449298:	cmp	x9, x23
  44929c:	str	w8, [x19, #308]
  4492a0:	b.ne	447e5c <feof@plt+0x4548c>  // b.any
  4492a4:	b	4490d4 <feof@plt+0x46704>
  4492a8:	add	w8, w8, #0x1
  4492ac:	str	w8, [x22, #4]
  4492b0:	ldr	x8, [x19, #328]
  4492b4:	add	w9, w9, #0x1
  4492b8:	str	w9, [x19, #308]
  4492bc:	add	x9, sp, #0x10
  4492c0:	mov	x0, x19
  4492c4:	mov	w1, w20
  4492c8:	mov	x2, x22
  4492cc:	stp	x22, x8, [sp, #16]
  4492d0:	str	x9, [x19, #328]
  4492d4:	bl	445750 <feof@plt+0x42d80>
  4492d8:	ldr	x8, [sp, #24]
  4492dc:	str	x8, [x19, #328]
  4492e0:	ldr	w8, [x22, #4]
  4492e4:	sub	w8, w8, #0x1
  4492e8:	str	w8, [x22, #4]
  4492ec:	ldr	w8, [x19, #308]
  4492f0:	sub	w8, w8, #0x1
  4492f4:	str	w8, [x19, #308]
  4492f8:	ldrb	w8, [x19, #264]
  4492fc:	cmp	w8, #0x3c
  449300:	b.ne	44934c <feof@plt+0x4697c>  // b.any
  449304:	ldr	x8, [x19, #256]
  449308:	cmp	x8, #0xff
  44930c:	b.ne	449338 <feof@plt+0x46968>  // b.any
  449310:	ldp	x8, x2, [x19, #272]
  449314:	mov	w1, #0xff                  	// #255
  449318:	mov	x0, x19
  44931c:	strb	wzr, [x19, #255]
  449320:	blr	x8
  449324:	ldr	x9, [x19, #320]
  449328:	mov	x8, xzr
  44932c:	str	xzr, [x19, #256]
  449330:	add	x9, x9, #0x1
  449334:	str	x9, [x19, #320]
  449338:	add	x9, x8, #0x1
  44933c:	mov	w10, #0x20                  	// #32
  449340:	str	x9, [x19, #256]
  449344:	strb	w10, [x19, x8]
  449348:	strb	w10, [x19, #264]
  44934c:	ldr	x8, [x19, #256]
  449350:	cmp	x8, #0xff
  449354:	b.ne	449380 <feof@plt+0x469b0>  // b.any
  449358:	ldp	x8, x2, [x19, #272]
  44935c:	mov	w1, #0xff                  	// #255
  449360:	mov	x0, x19
  449364:	strb	wzr, [x19, #255]
  449368:	blr	x8
  44936c:	ldr	x9, [x19, #320]
  449370:	mov	x8, xzr
  449374:	str	xzr, [x19, #256]
  449378:	add	x9, x9, #0x1
  44937c:	str	x9, [x19, #320]
  449380:	add	x9, x8, #0x1
  449384:	mov	w10, #0x3c                  	// #60
  449388:	str	x9, [x19, #256]
  44938c:	strb	w10, [x19, x8]
  449390:	strb	w10, [x19, #264]
  449394:	ldr	x21, [x21, #16]
  449398:	cbz	x21, 4493b4 <feof@plt+0x469e4>
  44939c:	ldr	w8, [x21, #4]
  4493a0:	cmp	w8, #0x1
  4493a4:	b.gt	4493b4 <feof@plt+0x469e4>
  4493a8:	ldr	w9, [x19, #308]
  4493ac:	cmp	w9, #0x401
  4493b0:	b.lt	4497f8 <feof@plt+0x46e28>  // b.tstop
  4493b4:	mov	w8, #0x1                   	// #1
  4493b8:	str	w8, [x25]
  4493bc:	ldr	x8, [x19, #256]
  4493c0:	cmp	x8, #0xff
  4493c4:	b.ne	4493f0 <feof@plt+0x46a20>  // b.any
  4493c8:	ldp	x8, x2, [x19, #272]
  4493cc:	mov	w1, #0xff                  	// #255
  4493d0:	mov	x0, x19
  4493d4:	strb	wzr, [x19, #255]
  4493d8:	blr	x8
  4493dc:	ldr	x9, [x19, #320]
  4493e0:	mov	x8, xzr
  4493e4:	str	xzr, [x19, #256]
  4493e8:	add	x9, x9, #0x1
  4493ec:	str	x9, [x19, #320]
  4493f0:	add	x9, x8, #0x1
  4493f4:	mov	w10, #0x3e                  	// #62
  4493f8:	str	x9, [x19, #256]
  4493fc:	strb	w10, [x19, x8]
  449400:	strb	w10, [x19, #264]
  449404:	str	x24, [x19, #296]
  449408:	str	x23, [x19, #368]
  44940c:	b	447e5c <feof@plt+0x4548c>
  449410:	cbz	x23, 44943c <feof@plt+0x46a6c>
  449414:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  449418:	add	x1, x1, #0x20f
  44941c:	mov	x0, x23
  449420:	bl	402820 <strcmp@plt>
  449424:	cbz	w0, 44a304 <feof@plt+0x47934>
  449428:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44942c:	add	x1, x1, #0x202
  449430:	mov	x0, x23
  449434:	bl	402820 <strcmp@plt>
  449438:	cbz	w0, 44a7b4 <feof@plt+0x47de4>
  44943c:	ldrsw	x22, [x24, #16]
  449440:	cbz	w22, 449a90 <feof@plt+0x470c0>
  449444:	ldr	x24, [x24, #8]
  449448:	b	449468 <feof@plt+0x46a98>
  44944c:	add	x9, x8, #0x1
  449450:	subs	x22, x22, #0x1
  449454:	add	x24, x24, #0x1
  449458:	str	x9, [x19, #256]
  44945c:	strb	w26, [x19, x8]
  449460:	strb	w26, [x19, #264]
  449464:	b.eq	449a90 <feof@plt+0x470c0>  // b.none
  449468:	ldr	x8, [x19, #256]
  44946c:	ldrb	w26, [x24]
  449470:	cmp	x8, #0xff
  449474:	b.ne	44944c <feof@plt+0x46a7c>  // b.any
  449478:	ldp	x8, x2, [x19, #272]
  44947c:	mov	w1, #0xff                  	// #255
  449480:	mov	x0, x19
  449484:	strb	wzr, [x19, #255]
  449488:	blr	x8
  44948c:	ldr	x9, [x19, #320]
  449490:	mov	x8, xzr
  449494:	str	xzr, [x19, #256]
  449498:	add	x9, x9, #0x1
  44949c:	str	x9, [x19, #320]
  4494a0:	b	44944c <feof@plt+0x46a7c>
  4494a4:	add	w8, w8, #0x1
  4494a8:	str	w8, [x22, #4]
  4494ac:	ldr	x8, [x19, #328]
  4494b0:	add	w9, w9, #0x1
  4494b4:	str	w9, [x19, #308]
  4494b8:	add	x9, sp, #0x10
  4494bc:	mov	x0, x19
  4494c0:	mov	w1, w20
  4494c4:	mov	x2, x22
  4494c8:	stp	x22, x8, [sp, #16]
  4494cc:	str	x9, [x19, #328]
  4494d0:	bl	445750 <feof@plt+0x42d80>
  4494d4:	ldr	x8, [sp, #24]
  4494d8:	str	x8, [x19, #328]
  4494dc:	ldr	w8, [x22, #4]
  4494e0:	sub	w8, w8, #0x1
  4494e4:	str	w8, [x22, #4]
  4494e8:	ldr	w8, [x19, #308]
  4494ec:	sub	w8, w8, #0x1
  4494f0:	str	w8, [x19, #308]
  4494f4:	ldr	x8, [x19, #256]
  4494f8:	cmp	x8, #0xff
  4494fc:	b.ne	449528 <feof@plt+0x46b58>  // b.any
  449500:	ldp	x8, x2, [x19, #272]
  449504:	mov	w1, #0xff                  	// #255
  449508:	mov	x0, x19
  44950c:	strb	wzr, [x19, #255]
  449510:	blr	x8
  449514:	ldr	x9, [x19, #320]
  449518:	mov	x8, xzr
  44951c:	str	xzr, [x19, #256]
  449520:	add	x9, x9, #0x1
  449524:	str	x9, [x19, #320]
  449528:	add	x9, x8, #0x1
  44952c:	mov	w10, #0x7b                  	// #123
  449530:	str	x9, [x19, #256]
  449534:	strb	w10, [x19, x8]
  449538:	strb	w10, [x19, #264]
  44953c:	cbz	x21, 449558 <feof@plt+0x46b88>
  449540:	ldr	w8, [x21, #4]
  449544:	cmp	w8, #0x1
  449548:	b.gt	449558 <feof@plt+0x46b88>
  44954c:	ldr	w9, [x19, #308]
  449550:	cmp	w9, #0x401
  449554:	b.lt	4497a4 <feof@plt+0x46dd4>  // b.tstop
  449558:	mov	w8, #0x1                   	// #1
  44955c:	str	w8, [x25]
  449560:	ldr	x8, [x19, #256]
  449564:	cmp	x8, #0xff
  449568:	b.ne	449594 <feof@plt+0x46bc4>  // b.any
  44956c:	ldp	x8, x2, [x19, #272]
  449570:	mov	w1, #0xff                  	// #255
  449574:	mov	x0, x19
  449578:	strb	wzr, [x19, #255]
  44957c:	blr	x8
  449580:	ldr	x9, [x19, #320]
  449584:	mov	x8, xzr
  449588:	str	xzr, [x19, #256]
  44958c:	add	x9, x9, #0x1
  449590:	str	x9, [x19, #320]
  449594:	add	x9, x8, #0x1
  449598:	mov	w10, #0x7d                  	// #125
  44959c:	b	44a750 <feof@plt+0x47d80>
  4495a0:	add	w8, w8, #0x1
  4495a4:	str	w8, [x22, #4]
  4495a8:	ldr	x8, [x19, #328]
  4495ac:	add	w9, w9, #0x1
  4495b0:	str	w9, [x19, #308]
  4495b4:	add	x9, sp, #0x10
  4495b8:	mov	x0, x19
  4495bc:	mov	w1, w20
  4495c0:	mov	x2, x22
  4495c4:	stp	x22, x8, [sp, #16]
  4495c8:	str	x9, [x19, #328]
  4495cc:	bl	445750 <feof@plt+0x42d80>
  4495d0:	ldr	x8, [sp, #24]
  4495d4:	str	x8, [x19, #328]
  4495d8:	ldr	w8, [x22, #4]
  4495dc:	sub	w8, w8, #0x1
  4495e0:	str	w8, [x22, #4]
  4495e4:	ldr	w8, [x19, #308]
  4495e8:	sub	w8, w8, #0x1
  4495ec:	str	w8, [x19, #308]
  4495f0:	ldr	x21, [x21, #16]
  4495f4:	cbnz	x21, 447e3c <feof@plt+0x4546c>
  4495f8:	b	447e54 <feof@plt+0x45484>
  4495fc:	add	w8, w8, #0x1
  449600:	str	w8, [x22, #4]
  449604:	ldr	x8, [x19, #328]
  449608:	add	w9, w9, #0x1
  44960c:	str	w9, [x19, #308]
  449610:	add	x9, sp, #0x10
  449614:	mov	x0, x19
  449618:	mov	w1, w20
  44961c:	mov	x2, x22
  449620:	stp	x22, x8, [sp, #16]
  449624:	str	x9, [x19, #328]
  449628:	bl	445750 <feof@plt+0x42d80>
  44962c:	ldr	x8, [sp, #24]
  449630:	str	x8, [x19, #328]
  449634:	ldr	w8, [x22, #4]
  449638:	sub	w8, w8, #0x1
  44963c:	str	w8, [x22, #4]
  449640:	ldr	w8, [x19, #308]
  449644:	sub	w8, w8, #0x1
  449648:	str	w8, [x19, #308]
  44964c:	b	447798 <feof@plt+0x44dc8>
  449650:	add	w8, w8, #0x1
  449654:	str	w8, [x22, #4]
  449658:	ldr	x8, [x19, #328]
  44965c:	add	w9, w9, #0x1
  449660:	str	w9, [x19, #308]
  449664:	add	x9, sp, #0x10
  449668:	mov	x0, x19
  44966c:	mov	w1, w20
  449670:	mov	x2, x22
  449674:	stp	x22, x8, [sp, #16]
  449678:	str	x9, [x19, #328]
  44967c:	bl	445750 <feof@plt+0x42d80>
  449680:	ldr	x8, [sp, #24]
  449684:	str	x8, [x19, #328]
  449688:	ldr	w8, [x22, #4]
  44968c:	sub	w8, w8, #0x1
  449690:	str	w8, [x22, #4]
  449694:	ldr	w8, [x19, #308]
  449698:	sub	w8, w8, #0x1
  44969c:	str	w8, [x19, #308]
  4496a0:	b	447920 <feof@plt+0x44f50>
  4496a4:	add	w8, w8, #0x1
  4496a8:	str	w8, [x22, #4]
  4496ac:	ldr	x8, [x19, #328]
  4496b0:	add	w9, w9, #0x1
  4496b4:	str	w9, [x19, #308]
  4496b8:	add	x9, sp, #0x10
  4496bc:	mov	x0, x19
  4496c0:	mov	w1, w20
  4496c4:	mov	x2, x22
  4496c8:	stp	x22, x8, [sp, #16]
  4496cc:	str	x9, [x19, #328]
  4496d0:	bl	445750 <feof@plt+0x42d80>
  4496d4:	ldr	x8, [sp, #24]
  4496d8:	str	x8, [x19, #328]
  4496dc:	ldr	w8, [x22, #4]
  4496e0:	sub	w8, w8, #0x1
  4496e4:	str	w8, [x22, #4]
  4496e8:	ldr	w8, [x19, #308]
  4496ec:	sub	w8, w8, #0x1
  4496f0:	str	w8, [x19, #308]
  4496f4:	b	447b78 <feof@plt+0x451a8>
  4496f8:	add	w8, w8, #0x1
  4496fc:	str	w8, [x22, #4]
  449700:	ldr	x8, [x19, #328]
  449704:	add	w9, w9, #0x1
  449708:	str	w9, [x19, #308]
  44970c:	add	x9, sp, #0x10
  449710:	mov	x0, x19
  449714:	mov	w1, w20
  449718:	mov	x2, x22
  44971c:	stp	x22, x8, [sp, #16]
  449720:	str	x9, [x19, #328]
  449724:	bl	445750 <feof@plt+0x42d80>
  449728:	ldr	x8, [sp, #24]
  44972c:	str	x8, [x19, #328]
  449730:	ldr	w8, [x22, #4]
  449734:	sub	w8, w8, #0x1
  449738:	str	w8, [x22, #4]
  44973c:	ldr	w8, [x19, #308]
  449740:	sub	w8, w8, #0x1
  449744:	str	w8, [x19, #308]
  449748:	b	447ccc <feof@plt+0x452fc>
  44974c:	add	w8, w9, #0x1
  449750:	str	w8, [x22, #4]
  449754:	ldr	x8, [x19, #328]
  449758:	add	w9, w10, #0x1
  44975c:	str	w9, [x19, #308]
  449760:	add	x9, sp, #0x10
  449764:	mov	x0, x19
  449768:	mov	w1, w20
  44976c:	mov	x2, x22
  449770:	stp	x22, x8, [sp, #16]
  449774:	str	x9, [x19, #328]
  449778:	bl	445750 <feof@plt+0x42d80>
  44977c:	ldr	x8, [sp, #24]
  449780:	str	x8, [x19, #328]
  449784:	ldr	w8, [x22, #4]
  449788:	sub	w8, w8, #0x1
  44978c:	str	w8, [x22, #4]
  449790:	ldr	w9, [x19, #308]
  449794:	ldr	w8, [x19, #312]
  449798:	sub	w9, w9, #0x1
  44979c:	str	w9, [x19, #308]
  4497a0:	b	4481b8 <feof@plt+0x457e8>
  4497a4:	add	w8, w8, #0x1
  4497a8:	str	w8, [x21, #4]
  4497ac:	ldr	x8, [x19, #328]
  4497b0:	add	w9, w9, #0x1
  4497b4:	str	w9, [x19, #308]
  4497b8:	add	x9, sp, #0x10
  4497bc:	mov	x0, x19
  4497c0:	mov	w1, w20
  4497c4:	mov	x2, x21
  4497c8:	stp	x21, x8, [sp, #16]
  4497cc:	str	x9, [x19, #328]
  4497d0:	bl	445750 <feof@plt+0x42d80>
  4497d4:	ldr	x8, [sp, #24]
  4497d8:	str	x8, [x19, #328]
  4497dc:	ldr	w8, [x21, #4]
  4497e0:	sub	w8, w8, #0x1
  4497e4:	str	w8, [x21, #4]
  4497e8:	ldr	w8, [x19, #308]
  4497ec:	sub	w8, w8, #0x1
  4497f0:	str	w8, [x19, #308]
  4497f4:	b	449560 <feof@plt+0x46b90>
  4497f8:	add	w8, w8, #0x1
  4497fc:	str	w8, [x21, #4]
  449800:	ldr	x8, [x19, #328]
  449804:	add	w9, w9, #0x1
  449808:	str	w9, [x19, #308]
  44980c:	add	x9, sp, #0x10
  449810:	mov	x0, x19
  449814:	mov	w1, w20
  449818:	mov	x2, x21
  44981c:	stp	x21, x8, [sp, #16]
  449820:	str	x9, [x19, #328]
  449824:	bl	445750 <feof@plt+0x42d80>
  449828:	ldr	x8, [sp, #24]
  44982c:	str	x8, [x19, #328]
  449830:	ldr	w8, [x21, #4]
  449834:	sub	w8, w8, #0x1
  449838:	str	w8, [x21, #4]
  44983c:	ldr	w8, [x19, #308]
  449840:	ldrb	w9, [x19, #264]
  449844:	sub	w8, w8, #0x1
  449848:	cmp	w9, #0x3e
  44984c:	str	w8, [x19, #308]
  449850:	b.ne	4493bc <feof@plt+0x469ec>  // b.any
  449854:	ldr	x8, [x19, #256]
  449858:	cmp	x8, #0xff
  44985c:	b.ne	449888 <feof@plt+0x46eb8>  // b.any
  449860:	ldp	x8, x2, [x19, #272]
  449864:	mov	w1, #0xff                  	// #255
  449868:	mov	x0, x19
  44986c:	strb	wzr, [x19, #255]
  449870:	blr	x8
  449874:	ldr	x9, [x19, #320]
  449878:	mov	x8, xzr
  44987c:	str	xzr, [x19, #256]
  449880:	add	x9, x9, #0x1
  449884:	str	x9, [x19, #320]
  449888:	add	x9, x8, #0x1
  44988c:	mov	w10, #0x20                  	// #32
  449890:	str	x9, [x19, #256]
  449894:	strb	w10, [x19, x8]
  449898:	strb	w10, [x19, #264]
  44989c:	b	4493bc <feof@plt+0x469ec>
  4498a0:	add	w8, w8, #0x1
  4498a4:	str	w8, [x23, #4]
  4498a8:	ldr	x8, [x19, #328]
  4498ac:	add	w9, w9, #0x1
  4498b0:	str	w9, [x19, #308]
  4498b4:	sub	x9, x29, #0x10
  4498b8:	mov	x0, x19
  4498bc:	mov	w1, w20
  4498c0:	mov	x2, x23
  4498c4:	stp	x23, x8, [x29, #-16]
  4498c8:	str	x9, [x19, #328]
  4498cc:	bl	445750 <feof@plt+0x42d80>
  4498d0:	ldur	x8, [x29, #-8]
  4498d4:	str	x8, [x19, #328]
  4498d8:	ldr	w8, [x23, #4]
  4498dc:	sub	w8, w8, #0x1
  4498e0:	str	w8, [x23, #4]
  4498e4:	ldr	w8, [x19, #308]
  4498e8:	sub	w8, w8, #0x1
  4498ec:	str	w8, [x19, #308]
  4498f0:	b	448948 <feof@plt+0x45f78>
  4498f4:	mov	w8, #0x1                   	// #1
  4498f8:	str	w8, [x25]
  4498fc:	b	447e54 <feof@plt+0x45484>
  449900:	ldr	x11, [x19, #328]
  449904:	cbz	x11, 449d50 <feof@plt+0x47380>
  449908:	mov	x12, x11
  44990c:	b	449918 <feof@plt+0x46f48>
  449910:	ldr	x12, [x12, #8]
  449914:	cbz	x12, 449d50 <feof@plt+0x47380>
  449918:	ldr	x13, [x12]
  44991c:	cmp	x13, x9
  449920:	b.eq	449934 <feof@plt+0x46f64>  // b.none
  449924:	cmp	x13, x21
  449928:	b.ne	449910 <feof@plt+0x46f40>  // b.any
  44992c:	cmp	x12, x11
  449930:	b.eq	449910 <feof@plt+0x46f40>  // b.none
  449934:	mov	w23, wzr
  449938:	b	449d60 <feof@plt+0x47390>
  44993c:	ldr	x24, [x24, #16]
  449940:	ldr	w10, [x24]
  449944:	cmp	w10, #0x47
  449948:	b.ne	449950 <feof@plt+0x46f80>  // b.any
  44994c:	ldr	x24, [x24, #8]
  449950:	cbz	x24, 447e54 <feof@plt+0x45484>
  449954:	mov	x11, #0x1f                  	// #31
  449958:	mov	w10, #0x1                   	// #1
  44995c:	movk	x11, #0x1a, lsl #48
  449960:	ldr	w12, [x24]
  449964:	sub	w13, w12, #0x1c
  449968:	cmp	w13, #0x34
  44996c:	b.hi	4499b4 <feof@plt+0x46fe4>  // b.pmore
  449970:	lsl	x13, x10, x13
  449974:	tst	x13, x11
  449978:	b.eq	4499b4 <feof@plt+0x46fe4>  // b.none
  44997c:	cmp	x23, #0x4
  449980:	b.cs	447e54 <feof@plt+0x45484>  // b.hs, b.nlast
  449984:	ldp	q0, q1, [x9]
  449988:	add	x12, x9, #0x20
  44998c:	add	x23, x23, #0x1
  449990:	stp	q0, q1, [x9, #32]
  449994:	str	x9, [x9, #32]
  449998:	str	x12, [x19, #296]
  44999c:	str	x24, [x9, #8]
  4499a0:	str	wzr, [x9, #16]
  4499a4:	str	x8, [x9, #24]
  4499a8:	ldr	x24, [x24, #8]
  4499ac:	mov	x9, x12
  4499b0:	b	449960 <feof@plt+0x46f90>
  4499b4:	cmp	w12, #0x4
  4499b8:	b.ne	4499c8 <feof@plt+0x46ff8>  // b.any
  4499bc:	stp	x8, x24, [sp]
  4499c0:	mov	x8, sp
  4499c4:	str	x8, [x19, #288]
  4499c8:	ldr	x21, [x21, #16]
  4499cc:	cbz	x21, 4499e8 <feof@plt+0x47018>
  4499d0:	ldr	w8, [x21, #4]
  4499d4:	cmp	w8, #0x1
  4499d8:	b.gt	4499e8 <feof@plt+0x47018>
  4499dc:	ldr	w9, [x19, #308]
  4499e0:	cmp	w9, #0x401
  4499e4:	b.lt	44a96c <feof@plt+0x47f9c>  // b.tstop
  4499e8:	mov	w8, #0x1                   	// #1
  4499ec:	str	w8, [x25]
  4499f0:	ldr	w8, [x24]
  4499f4:	cmp	w8, #0x4
  4499f8:	b.ne	449a04 <feof@plt+0x47034>  // b.any
  4499fc:	ldr	x8, [sp]
  449a00:	str	x8, [x19, #288]
  449a04:	sub	w8, w23, #0x1
  449a08:	add	x9, sp, #0x10
  449a0c:	add	x8, x9, x8, lsl #5
  449a10:	add	x21, x8, #0x10
  449a14:	mov	w24, #0x20                  	// #32
  449a18:	b	449a48 <feof@plt+0x47078>
  449a1c:	add	x9, x8, #0x1
  449a20:	str	x9, [x19, #256]
  449a24:	strb	w24, [x19, x8]
  449a28:	strb	w24, [x19, #264]
  449a2c:	ldur	x2, [x21, #-8]
  449a30:	mov	x0, x19
  449a34:	mov	w1, w20
  449a38:	bl	44b9e8 <feof@plt+0x49018>
  449a3c:	sub	w23, w23, #0x1
  449a40:	sub	x21, x21, #0x20
  449a44:	cbz	w23, 449a88 <feof@plt+0x470b8>
  449a48:	ldr	w8, [x21]
  449a4c:	cbnz	w8, 449a3c <feof@plt+0x4706c>
  449a50:	ldr	x8, [x19, #256]
  449a54:	cmp	x8, #0xff
  449a58:	b.ne	449a1c <feof@plt+0x4704c>  // b.any
  449a5c:	ldp	x8, x2, [x19, #272]
  449a60:	mov	w1, #0xff                  	// #255
  449a64:	mov	x0, x19
  449a68:	strb	wzr, [x19, #255]
  449a6c:	blr	x8
  449a70:	ldr	x9, [x19, #320]
  449a74:	mov	x8, xzr
  449a78:	str	xzr, [x19, #256]
  449a7c:	add	x9, x9, #0x1
  449a80:	str	x9, [x19, #320]
  449a84:	b	449a1c <feof@plt+0x4704c>
  449a88:	str	x22, [x19, #296]
  449a8c:	b	447e5c <feof@plt+0x4548c>
  449a90:	cbz	x23, 448c74 <feof@plt+0x462a4>
  449a94:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  449a98:	add	x1, x1, #0x19f
  449a9c:	mov	x0, x23
  449aa0:	bl	402820 <strcmp@plt>
  449aa4:	cbz	w0, 448f5c <feof@plt+0x4658c>
  449aa8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  449aac:	add	x1, x1, #0x179
  449ab0:	mov	x0, x23
  449ab4:	bl	402820 <strcmp@plt>
  449ab8:	cbnz	w0, 448c74 <feof@plt+0x462a4>
  449abc:	b	448c98 <feof@plt+0x462c8>
  449ac0:	ldr	w8, [x22, #4]
  449ac4:	cmp	w8, #0x1
  449ac8:	b.gt	449ad8 <feof@plt+0x47108>
  449acc:	ldr	w9, [x19, #308]
  449ad0:	cmp	w9, #0x401
  449ad4:	b.lt	44a5ac <feof@plt+0x47bdc>  // b.tstop
  449ad8:	mov	w8, #0x1                   	// #1
  449adc:	str	w8, [x25]
  449ae0:	b	44a5fc <feof@plt+0x47c2c>
  449ae4:	add	w8, w8, #0x1
  449ae8:	str	w8, [x22, #4]
  449aec:	ldr	x8, [x19, #328]
  449af0:	add	w9, w9, #0x1
  449af4:	str	w9, [x19, #308]
  449af8:	add	x9, sp, #0x10
  449afc:	mov	x0, x19
  449b00:	mov	w1, w20
  449b04:	mov	x2, x22
  449b08:	stp	x22, x8, [sp, #16]
  449b0c:	str	x9, [x19, #328]
  449b10:	bl	445750 <feof@plt+0x42d80>
  449b14:	ldr	x8, [sp, #24]
  449b18:	str	x8, [x19, #328]
  449b1c:	ldr	w8, [x22, #4]
  449b20:	sub	w8, w8, #0x1
  449b24:	str	w8, [x22, #4]
  449b28:	ldr	w8, [x19, #308]
  449b2c:	sub	w8, w8, #0x1
  449b30:	str	w8, [x19, #308]
  449b34:	b	446b68 <feof@plt+0x44198>
  449b38:	add	w8, w9, #0x1
  449b3c:	str	w8, [x22, #4]
  449b40:	ldr	x8, [x19, #328]
  449b44:	add	w9, w10, #0x1
  449b48:	str	w9, [x19, #308]
  449b4c:	add	x9, sp, #0x10
  449b50:	mov	x0, x19
  449b54:	mov	w1, w20
  449b58:	mov	x2, x22
  449b5c:	stp	x22, x8, [sp, #16]
  449b60:	str	x9, [x19, #328]
  449b64:	bl	445750 <feof@plt+0x42d80>
  449b68:	ldr	x8, [sp, #24]
  449b6c:	str	x8, [x19, #328]
  449b70:	ldr	w8, [x22, #4]
  449b74:	sub	w8, w8, #0x1
  449b78:	str	w8, [x22, #4]
  449b7c:	ldr	w9, [x19, #308]
  449b80:	ldr	x8, [x19, #368]
  449b84:	sub	w9, w9, #0x1
  449b88:	str	w9, [x19, #308]
  449b8c:	cbnz	x8, 447ffc <feof@plt+0x4562c>
  449b90:	b	448004 <feof@plt+0x45634>
  449b94:	add	w8, w8, #0x1
  449b98:	str	w8, [x21, #4]
  449b9c:	ldr	x8, [x19, #328]
  449ba0:	add	w9, w9, #0x1
  449ba4:	str	w9, [x19, #308]
  449ba8:	add	x9, sp, #0x10
  449bac:	mov	x0, x19
  449bb0:	mov	w1, w20
  449bb4:	mov	x2, x21
  449bb8:	stp	x21, x8, [sp, #16]
  449bbc:	str	x9, [x19, #328]
  449bc0:	bl	445750 <feof@plt+0x42d80>
  449bc4:	ldr	x8, [sp, #24]
  449bc8:	str	x8, [x19, #328]
  449bcc:	ldr	w8, [x21, #4]
  449bd0:	sub	w8, w8, #0x1
  449bd4:	str	w8, [x21, #4]
  449bd8:	ldr	w8, [x19, #308]
  449bdc:	ldrb	w9, [x19, #264]
  449be0:	sub	w8, w8, #0x1
  449be4:	cmp	w9, #0x3e
  449be8:	str	w8, [x19, #308]
  449bec:	b.ne	4480cc <feof@plt+0x456fc>  // b.any
  449bf0:	ldr	x8, [x19, #256]
  449bf4:	cmp	x8, #0xff
  449bf8:	b.ne	449c24 <feof@plt+0x47254>  // b.any
  449bfc:	ldp	x8, x2, [x19, #272]
  449c00:	mov	w1, #0xff                  	// #255
  449c04:	mov	x0, x19
  449c08:	strb	wzr, [x19, #255]
  449c0c:	blr	x8
  449c10:	ldr	x9, [x19, #320]
  449c14:	mov	x8, xzr
  449c18:	str	xzr, [x19, #256]
  449c1c:	add	x9, x9, #0x1
  449c20:	str	x9, [x19, #320]
  449c24:	add	x9, x8, #0x1
  449c28:	mov	w10, #0x20                  	// #32
  449c2c:	str	x9, [x19, #256]
  449c30:	strb	w10, [x19, x8]
  449c34:	strb	w10, [x19, #264]
  449c38:	b	4480cc <feof@plt+0x456fc>
  449c3c:	add	w8, w9, #0x1
  449c40:	str	w8, [x22, #4]
  449c44:	ldr	x8, [x19, #328]
  449c48:	add	w9, w10, #0x1
  449c4c:	str	w9, [x19, #308]
  449c50:	add	x9, sp, #0x10
  449c54:	mov	x0, x19
  449c58:	mov	w1, w20
  449c5c:	mov	x2, x22
  449c60:	stp	x22, x8, [sp, #16]
  449c64:	str	x9, [x19, #328]
  449c68:	bl	445750 <feof@plt+0x42d80>
  449c6c:	ldr	x8, [sp, #24]
  449c70:	str	x8, [x19, #328]
  449c74:	ldr	w8, [x22, #4]
  449c78:	sub	w8, w8, #0x1
  449c7c:	str	w8, [x22, #4]
  449c80:	ldr	w9, [x19, #308]
  449c84:	ldr	x8, [x19, #368]
  449c88:	sub	w9, w9, #0x1
  449c8c:	str	w9, [x19, #308]
  449c90:	cbnz	x8, 448620 <feof@plt+0x45c50>
  449c94:	b	447e5c <feof@plt+0x4548c>
  449c98:	ldr	x8, [x19, #256]
  449c9c:	cmp	x8, #0xff
  449ca0:	b.ne	449ccc <feof@plt+0x472fc>  // b.any
  449ca4:	ldp	x8, x2, [x19, #272]
  449ca8:	mov	w1, #0xff                  	// #255
  449cac:	mov	x0, x19
  449cb0:	strb	wzr, [x19, #255]
  449cb4:	blr	x8
  449cb8:	ldr	x9, [x19, #320]
  449cbc:	mov	x8, xzr
  449cc0:	str	xzr, [x19, #256]
  449cc4:	add	x9, x9, #0x1
  449cc8:	str	x9, [x19, #320]
  449ccc:	add	x9, x8, #0x1
  449cd0:	mov	w10, #0x28                  	// #40
  449cd4:	str	x9, [x19, #256]
  449cd8:	strb	w10, [x19, x8]
  449cdc:	strb	w10, [x19, #264]
  449ce0:	cbz	x21, 449cfc <feof@plt+0x4732c>
  449ce4:	ldr	w8, [x21, #4]
  449ce8:	cmp	w8, #0x1
  449cec:	b.gt	449cfc <feof@plt+0x4732c>
  449cf0:	ldr	w9, [x19, #308]
  449cf4:	cmp	w9, #0x401
  449cf8:	b.lt	44ad00 <feof@plt+0x48330>  // b.tstop
  449cfc:	mov	w8, #0x1                   	// #1
  449d00:	str	w8, [x25]
  449d04:	ldr	x8, [x19, #256]
  449d08:	cmp	x8, #0xff
  449d0c:	b.ne	449d38 <feof@plt+0x47368>  // b.any
  449d10:	ldp	x8, x2, [x19, #272]
  449d14:	mov	w1, #0xff                  	// #255
  449d18:	mov	x0, x19
  449d1c:	strb	wzr, [x19, #255]
  449d20:	blr	x8
  449d24:	ldr	x9, [x19, #320]
  449d28:	mov	x8, xzr
  449d2c:	str	xzr, [x19, #256]
  449d30:	add	x9, x9, #0x1
  449d34:	str	x9, [x19, #320]
  449d38:	add	x9, x8, #0x1
  449d3c:	mov	w10, #0x29                  	// #41
  449d40:	str	x9, [x19, #256]
  449d44:	strb	w10, [x19, x8]
  449d48:	strb	w10, [x19, #264]
  449d4c:	b	44a038 <feof@plt+0x47668>
  449d50:	ldr	x10, [x10]
  449d54:	ldr	x24, [x19, #288]
  449d58:	mov	w23, #0x1                   	// #1
  449d5c:	str	x10, [x19, #288]
  449d60:	ldr	x10, [x19, #288]
  449d64:	cbz	x10, 449da0 <feof@plt+0x473d0>
  449d68:	ldr	x11, [x10, #8]
  449d6c:	ldr	w10, [x9, #8]
  449d70:	ldr	x9, [x11, #16]
  449d74:	tbnz	w10, #31, 44aaf0 <feof@plt+0x48120>
  449d78:	cbz	x9, 44b360 <feof@plt+0x48990>
  449d7c:	ldr	w11, [x9]
  449d80:	cmp	w11, #0x2f
  449d84:	b.ne	44b360 <feof@plt+0x48990>  // b.any
  449d88:	subs	w11, w10, #0x1
  449d8c:	b.lt	44aae8 <feof@plt+0x48118>  // b.tstop
  449d90:	ldr	x9, [x9, #16]
  449d94:	mov	w10, w11
  449d98:	cbnz	x9, 449d7c <feof@plt+0x473ac>
  449d9c:	b	44b360 <feof@plt+0x48990>
  449da0:	mov	w8, #0x1                   	// #1
  449da4:	str	w8, [x25]
  449da8:	b	44b360 <feof@plt+0x48990>
  449dac:	cmp	w8, #0x31
  449db0:	b.hi	44a8b4 <feof@plt+0x47ee4>  // b.pmore
  449db4:	mov	w8, w8
  449db8:	mov	w9, #0x1                   	// #1
  449dbc:	lsl	x8, x9, x8
  449dc0:	mov	x9, #0x43                  	// #67
  449dc4:	movk	x9, #0x2, lsl #48
  449dc8:	tst	x8, x9
  449dcc:	b.eq	44a8b4 <feof@plt+0x47ee4>  // b.none
  449dd0:	cbz	x22, 449dec <feof@plt+0x4741c>
  449dd4:	ldr	w8, [x22, #4]
  449dd8:	cmp	w8, #0x1
  449ddc:	b.gt	449dec <feof@plt+0x4741c>
  449de0:	ldr	w9, [x19, #308]
  449de4:	cmp	w9, #0x401
  449de8:	b.lt	44ab2c <feof@plt+0x4815c>  // b.tstop
  449dec:	mov	w8, #0x1                   	// #1
  449df0:	str	w8, [x25]
  449df4:	b	44ab80 <feof@plt+0x481b0>
  449df8:	add	w8, w8, #0x1
  449dfc:	str	w8, [x22, #4]
  449e00:	ldr	x8, [x19, #328]
  449e04:	add	w9, w9, #0x1
  449e08:	str	w9, [x19, #308]
  449e0c:	add	x9, sp, #0x10
  449e10:	mov	x0, x19
  449e14:	mov	w1, w20
  449e18:	mov	x2, x22
  449e1c:	stp	x22, x8, [sp, #16]
  449e20:	str	x9, [x19, #328]
  449e24:	bl	445750 <feof@plt+0x42d80>
  449e28:	ldr	x8, [sp, #24]
  449e2c:	str	x8, [x19, #328]
  449e30:	ldr	w8, [x22, #4]
  449e34:	sub	w8, w8, #0x1
  449e38:	str	w8, [x22, #4]
  449e3c:	ldr	w8, [x19, #308]
  449e40:	sub	w8, w8, #0x1
  449e44:	str	w8, [x19, #308]
  449e48:	b	448c04 <feof@plt+0x46234>
  449e4c:	add	w8, w8, #0x1
  449e50:	str	w8, [x22, #4]
  449e54:	ldr	x8, [x19, #328]
  449e58:	add	w9, w9, #0x1
  449e5c:	str	w9, [x19, #308]
  449e60:	add	x9, sp, #0x10
  449e64:	mov	x0, x19
  449e68:	mov	w1, w20
  449e6c:	mov	x2, x22
  449e70:	stp	x22, x8, [sp, #16]
  449e74:	str	x9, [x19, #328]
  449e78:	bl	445750 <feof@plt+0x42d80>
  449e7c:	ldr	x8, [sp, #24]
  449e80:	str	x8, [x19, #328]
  449e84:	ldr	w8, [x22, #4]
  449e88:	sub	w8, w8, #0x1
  449e8c:	str	w8, [x22, #4]
  449e90:	ldr	w8, [x19, #308]
  449e94:	sub	w8, w8, #0x1
  449e98:	str	w8, [x19, #308]
  449e9c:	b	448c74 <feof@plt+0x462a4>
  449ea0:	ldr	x8, [x19, #256]
  449ea4:	cmp	x8, #0xff
  449ea8:	b.ne	449ed4 <feof@plt+0x47504>  // b.any
  449eac:	ldp	x8, x2, [x19, #272]
  449eb0:	mov	w1, #0xff                  	// #255
  449eb4:	mov	x0, x19
  449eb8:	strb	wzr, [x19, #255]
  449ebc:	blr	x8
  449ec0:	ldr	x9, [x19, #320]
  449ec4:	mov	x8, xzr
  449ec8:	str	xzr, [x19, #256]
  449ecc:	add	x9, x9, #0x1
  449ed0:	str	x9, [x19, #320]
  449ed4:	add	x9, x8, #0x1
  449ed8:	mov	w10, #0x6c                  	// #108
  449edc:	b	44a750 <feof@plt+0x47d80>
  449ee0:	ldr	x8, [x19, #256]
  449ee4:	cmp	x8, #0xff
  449ee8:	b.ne	449f14 <feof@plt+0x47544>  // b.any
  449eec:	ldp	x8, x2, [x19, #272]
  449ef0:	mov	w1, #0xff                  	// #255
  449ef4:	mov	x0, x19
  449ef8:	strb	wzr, [x19, #255]
  449efc:	blr	x8
  449f00:	ldr	x9, [x19, #320]
  449f04:	mov	x8, xzr
  449f08:	str	xzr, [x19, #256]
  449f0c:	add	x9, x9, #0x1
  449f10:	str	x9, [x19, #320]
  449f14:	add	x9, x8, #0x1
  449f18:	mov	w10, #0x75                  	// #117
  449f1c:	str	x9, [x19, #256]
  449f20:	strb	w10, [x19, x8]
  449f24:	ldr	x8, [x19, #256]
  449f28:	strb	w10, [x19, #264]
  449f2c:	cmp	x8, #0xff
  449f30:	b.eq	449eac <feof@plt+0x474dc>  // b.none
  449f34:	b	449ed4 <feof@plt+0x47504>
  449f38:	ldr	x8, [x19, #256]
  449f3c:	cmp	x8, #0xff
  449f40:	b.ne	449f6c <feof@plt+0x4759c>  // b.any
  449f44:	ldp	x8, x2, [x19, #272]
  449f48:	mov	w1, #0xff                  	// #255
  449f4c:	mov	x0, x19
  449f50:	strb	wzr, [x19, #255]
  449f54:	blr	x8
  449f58:	ldr	x9, [x19, #320]
  449f5c:	mov	x8, xzr
  449f60:	str	xzr, [x19, #256]
  449f64:	add	x9, x9, #0x1
  449f68:	str	x9, [x19, #320]
  449f6c:	add	x9, x8, #0x1
  449f70:	mov	w20, #0x6c                  	// #108
  449f74:	str	x9, [x19, #256]
  449f78:	strb	w20, [x19, x8]
  449f7c:	ldr	x8, [x19, #256]
  449f80:	strb	w20, [x19, #264]
  449f84:	cmp	x8, #0xff
  449f88:	b.eq	4473a0 <feof@plt+0x449d0>  // b.none
  449f8c:	b	4473c8 <feof@plt+0x449f8>
  449f90:	ldr	x8, [x19, #256]
  449f94:	cmp	x8, #0xff
  449f98:	b.ne	449fc4 <feof@plt+0x475f4>  // b.any
  449f9c:	ldp	x8, x2, [x19, #272]
  449fa0:	mov	w1, #0xff                  	// #255
  449fa4:	mov	x0, x19
  449fa8:	strb	wzr, [x19, #255]
  449fac:	blr	x8
  449fb0:	ldr	x9, [x19, #320]
  449fb4:	mov	x8, xzr
  449fb8:	str	xzr, [x19, #256]
  449fbc:	add	x9, x9, #0x1
  449fc0:	str	x9, [x19, #320]
  449fc4:	add	x9, x8, #0x1
  449fc8:	mov	w10, #0x75                  	// #117
  449fcc:	str	x9, [x19, #256]
  449fd0:	strb	w10, [x19, x8]
  449fd4:	ldr	x8, [x19, #256]
  449fd8:	strb	w10, [x19, #264]
  449fdc:	cmp	x8, #0xff
  449fe0:	b.eq	449f44 <feof@plt+0x47574>  // b.none
  449fe4:	b	449f6c <feof@plt+0x4759c>
  449fe8:	add	w8, w8, #0x1
  449fec:	str	w8, [x21, #4]
  449ff0:	ldr	x8, [x19, #328]
  449ff4:	add	w9, w9, #0x1
  449ff8:	str	w9, [x19, #308]
  449ffc:	add	x9, sp, #0x10
  44a000:	mov	x0, x19
  44a004:	mov	w1, w20
  44a008:	mov	x2, x21
  44a00c:	stp	x21, x8, [sp, #16]
  44a010:	str	x9, [x19, #328]
  44a014:	bl	445750 <feof@plt+0x42d80>
  44a018:	ldr	x8, [sp, #24]
  44a01c:	str	x8, [x19, #328]
  44a020:	ldr	w8, [x21, #4]
  44a024:	sub	w8, w8, #0x1
  44a028:	str	w8, [x21, #4]
  44a02c:	ldr	w8, [x19, #308]
  44a030:	sub	w8, w8, #0x1
  44a034:	str	w8, [x19, #308]
  44a038:	ldr	x8, [x19, #256]
  44a03c:	cmp	x8, #0xff
  44a040:	b.ne	44a06c <feof@plt+0x4769c>  // b.any
  44a044:	ldp	x8, x2, [x19, #272]
  44a048:	mov	w1, #0xff                  	// #255
  44a04c:	mov	x0, x19
  44a050:	strb	wzr, [x19, #255]
  44a054:	blr	x8
  44a058:	ldr	x9, [x19, #320]
  44a05c:	mov	x8, xzr
  44a060:	str	xzr, [x19, #256]
  44a064:	add	x9, x9, #0x1
  44a068:	str	x9, [x19, #320]
  44a06c:	add	x9, x8, #0x1
  44a070:	mov	w20, #0x2e                  	// #46
  44a074:	str	x9, [x19, #256]
  44a078:	strb	w20, [x19, x8]
  44a07c:	ldr	x8, [x19, #256]
  44a080:	strb	w20, [x19, #264]
  44a084:	cmp	x8, #0xff
  44a088:	b.ne	44a0b4 <feof@plt+0x476e4>  // b.any
  44a08c:	ldp	x8, x2, [x19, #272]
  44a090:	mov	w1, #0xff                  	// #255
  44a094:	mov	x0, x19
  44a098:	strb	wzr, [x19, #255]
  44a09c:	blr	x8
  44a0a0:	ldr	x9, [x19, #320]
  44a0a4:	mov	x8, xzr
  44a0a8:	str	xzr, [x19, #256]
  44a0ac:	add	x9, x9, #0x1
  44a0b0:	str	x9, [x19, #320]
  44a0b4:	add	x9, x8, #0x1
  44a0b8:	str	x9, [x19, #256]
  44a0bc:	strb	w20, [x19, x8]
  44a0c0:	ldr	x8, [x19, #256]
  44a0c4:	strb	w20, [x19, #264]
  44a0c8:	cmp	x8, #0xff
  44a0cc:	b.ne	44a0f8 <feof@plt+0x47728>  // b.any
  44a0d0:	ldp	x8, x2, [x19, #272]
  44a0d4:	mov	w1, #0xff                  	// #255
  44a0d8:	mov	x0, x19
  44a0dc:	strb	wzr, [x19, #255]
  44a0e0:	blr	x8
  44a0e4:	ldr	x9, [x19, #320]
  44a0e8:	mov	x8, xzr
  44a0ec:	str	xzr, [x19, #256]
  44a0f0:	add	x9, x9, #0x1
  44a0f4:	str	x9, [x19, #320]
  44a0f8:	add	x9, x8, #0x1
  44a0fc:	mov	w10, #0x2e                  	// #46
  44a100:	b	44a750 <feof@plt+0x47d80>
  44a104:	cmp	w8, #0x3d
  44a108:	mov	w23, #0x7                   	// #7
  44a10c:	b.ne	44798c <feof@plt+0x44fbc>  // b.any
  44a110:	ldr	w8, [x9, #16]
  44a114:	cmp	w8, #0x1
  44a118:	b.ne	44798c <feof@plt+0x44fbc>  // b.any
  44a11c:	ldr	x8, [x9, #8]
  44a120:	ldrb	w8, [x8]
  44a124:	cmp	w8, #0x31
  44a128:	b.eq	44ad54 <feof@plt+0x48384>  // b.none
  44a12c:	cmp	w8, #0x30
  44a130:	b.ne	44923c <feof@plt+0x4686c>  // b.any
  44a134:	ldr	x8, [x19, #256]
  44a138:	cmp	x8, #0xff
  44a13c:	b.ne	44a168 <feof@plt+0x47798>  // b.any
  44a140:	ldp	x8, x2, [x19, #272]
  44a144:	mov	w1, #0xff                  	// #255
  44a148:	mov	x0, x19
  44a14c:	strb	wzr, [x19, #255]
  44a150:	blr	x8
  44a154:	ldr	x9, [x19, #320]
  44a158:	mov	x8, xzr
  44a15c:	str	xzr, [x19, #256]
  44a160:	add	x9, x9, #0x1
  44a164:	str	x9, [x19, #320]
  44a168:	add	x9, x8, #0x1
  44a16c:	mov	w10, #0x66                  	// #102
  44a170:	str	x9, [x19, #256]
  44a174:	strb	w10, [x19, x8]
  44a178:	ldr	x8, [x19, #256]
  44a17c:	strb	w10, [x19, #264]
  44a180:	cmp	x8, #0xff
  44a184:	b.ne	44a1b0 <feof@plt+0x477e0>  // b.any
  44a188:	ldp	x8, x2, [x19, #272]
  44a18c:	mov	w1, #0xff                  	// #255
  44a190:	mov	x0, x19
  44a194:	strb	wzr, [x19, #255]
  44a198:	blr	x8
  44a19c:	ldr	x9, [x19, #320]
  44a1a0:	mov	x8, xzr
  44a1a4:	str	xzr, [x19, #256]
  44a1a8:	add	x9, x9, #0x1
  44a1ac:	str	x9, [x19, #320]
  44a1b0:	add	x9, x8, #0x1
  44a1b4:	mov	w10, #0x61                  	// #97
  44a1b8:	str	x9, [x19, #256]
  44a1bc:	strb	w10, [x19, x8]
  44a1c0:	ldr	x8, [x19, #256]
  44a1c4:	strb	w10, [x19, #264]
  44a1c8:	cmp	x8, #0xff
  44a1cc:	b.ne	44a1f8 <feof@plt+0x47828>  // b.any
  44a1d0:	ldp	x8, x2, [x19, #272]
  44a1d4:	mov	w1, #0xff                  	// #255
  44a1d8:	mov	x0, x19
  44a1dc:	strb	wzr, [x19, #255]
  44a1e0:	blr	x8
  44a1e4:	ldr	x9, [x19, #320]
  44a1e8:	mov	x8, xzr
  44a1ec:	str	xzr, [x19, #256]
  44a1f0:	add	x9, x9, #0x1
  44a1f4:	str	x9, [x19, #320]
  44a1f8:	add	x9, x8, #0x1
  44a1fc:	mov	w10, #0x6c                  	// #108
  44a200:	str	x9, [x19, #256]
  44a204:	strb	w10, [x19, x8]
  44a208:	ldr	x8, [x19, #256]
  44a20c:	strb	w10, [x19, #264]
  44a210:	cmp	x8, #0xff
  44a214:	b.ne	44a240 <feof@plt+0x47870>  // b.any
  44a218:	ldp	x8, x2, [x19, #272]
  44a21c:	mov	w1, #0xff                  	// #255
  44a220:	mov	x0, x19
  44a224:	strb	wzr, [x19, #255]
  44a228:	blr	x8
  44a22c:	ldr	x9, [x19, #320]
  44a230:	mov	x8, xzr
  44a234:	str	xzr, [x19, #256]
  44a238:	add	x9, x9, #0x1
  44a23c:	str	x9, [x19, #320]
  44a240:	add	x9, x8, #0x1
  44a244:	mov	w10, #0x73                  	// #115
  44a248:	b	44ae20 <feof@plt+0x48450>
  44a24c:	add	w8, w8, #0x1
  44a250:	str	w8, [x22, #4]
  44a254:	ldr	x8, [x19, #328]
  44a258:	add	w9, w9, #0x1
  44a25c:	str	w9, [x19, #308]
  44a260:	add	x9, sp, #0x10
  44a264:	mov	x0, x19
  44a268:	mov	w1, w20
  44a26c:	mov	x2, x22
  44a270:	stp	x22, x8, [sp, #16]
  44a274:	str	x9, [x19, #328]
  44a278:	bl	445750 <feof@plt+0x42d80>
  44a27c:	ldr	x8, [sp, #24]
  44a280:	str	x8, [x19, #328]
  44a284:	ldr	w8, [x22, #4]
  44a288:	sub	w8, w8, #0x1
  44a28c:	str	w8, [x22, #4]
  44a290:	ldr	w8, [x19, #308]
  44a294:	sub	w8, w8, #0x1
  44a298:	str	w8, [x19, #308]
  44a29c:	b	445b84 <feof@plt+0x431b4>
  44a2a0:	add	w8, w9, #0x1
  44a2a4:	str	w8, [x22, #4]
  44a2a8:	ldr	x8, [x19, #328]
  44a2ac:	add	w9, w10, #0x1
  44a2b0:	str	w9, [x19, #308]
  44a2b4:	and	w1, w20, #0xffffff9f
  44a2b8:	sub	x9, x29, #0x10
  44a2bc:	mov	x0, x19
  44a2c0:	mov	x2, x22
  44a2c4:	stp	x22, x8, [x29, #-16]
  44a2c8:	str	x9, [x19, #328]
  44a2cc:	bl	445750 <feof@plt+0x42d80>
  44a2d0:	ldur	x8, [x29, #-8]
  44a2d4:	str	x8, [x19, #328]
  44a2d8:	ldr	w8, [x22, #4]
  44a2dc:	sub	w8, w8, #0x1
  44a2e0:	str	w8, [x22, #4]
  44a2e4:	ldr	w8, [x19, #308]
  44a2e8:	sub	w8, w8, #0x1
  44a2ec:	str	w8, [x19, #308]
  44a2f0:	ldr	x8, [sp, #16]
  44a2f4:	ldr	w9, [sp, #32]
  44a2f8:	str	x8, [x19, #296]
  44a2fc:	cbnz	w9, 447e5c <feof@plt+0x4548c>
  44a300:	b	4468d8 <feof@plt+0x43f08>
  44a304:	mov	x0, x19
  44a308:	mov	x1, x21
  44a30c:	bl	44cb34 <feof@plt+0x4a164>
  44a310:	mov	w2, wzr
  44a314:	cbz	x0, 44a338 <feof@plt+0x47968>
  44a318:	ldr	w8, [x0]
  44a31c:	cmp	w8, #0x2f
  44a320:	b.ne	44a338 <feof@plt+0x47968>  // b.any
  44a324:	ldr	x8, [x0, #8]
  44a328:	cbz	x8, 44a338 <feof@plt+0x47968>
  44a32c:	ldr	x0, [x0, #16]
  44a330:	add	w2, w2, #0x1
  44a334:	cbnz	x0, 44a318 <feof@plt+0x47948>
  44a338:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  44a33c:	add	x1, x1, #0x6e9
  44a340:	add	x0, sp, #0x10
  44a344:	bl	4025b0 <sprintf@plt>
  44a348:	add	x0, sp, #0x10
  44a34c:	bl	402420 <strlen@plt>
  44a350:	cbz	x0, 447e5c <feof@plt+0x4548c>
  44a354:	mov	x20, x0
  44a358:	add	x21, sp, #0x10
  44a35c:	b	44a37c <feof@plt+0x479ac>
  44a360:	add	x9, x8, #0x1
  44a364:	subs	x20, x20, #0x1
  44a368:	add	x21, x21, #0x1
  44a36c:	str	x9, [x19, #256]
  44a370:	strb	w22, [x19, x8]
  44a374:	strb	w22, [x19, #264]
  44a378:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  44a37c:	ldr	x8, [x19, #256]
  44a380:	ldrb	w22, [x21]
  44a384:	cmp	x8, #0xff
  44a388:	b.ne	44a360 <feof@plt+0x47990>  // b.any
  44a38c:	ldp	x8, x2, [x19, #272]
  44a390:	mov	w1, #0xff                  	// #255
  44a394:	mov	x0, x19
  44a398:	strb	wzr, [x19, #255]
  44a39c:	blr	x8
  44a3a0:	ldr	x9, [x19, #320]
  44a3a4:	mov	x8, xzr
  44a3a8:	str	xzr, [x19, #256]
  44a3ac:	add	x9, x9, #0x1
  44a3b0:	str	x9, [x19, #320]
  44a3b4:	b	44a360 <feof@plt+0x47990>
  44a3b8:	ldr	w8, [x23]
  44a3bc:	cmp	w8, #0x31
  44a3c0:	b.hi	44af2c <feof@plt+0x4855c>  // b.pmore
  44a3c4:	mov	w9, #0x1                   	// #1
  44a3c8:	lsl	x8, x9, x8
  44a3cc:	mov	x9, #0x43                  	// #67
  44a3d0:	movk	x9, #0x2, lsl #48
  44a3d4:	tst	x8, x9
  44a3d8:	b.eq	44af2c <feof@plt+0x4855c>  // b.none
  44a3dc:	ldr	w8, [x23, #4]
  44a3e0:	cmp	w8, #0x1
  44a3e4:	b.gt	44a3f4 <feof@plt+0x47a24>
  44a3e8:	ldr	w9, [x19, #308]
  44a3ec:	cmp	w9, #0x401
  44a3f0:	b.lt	44af98 <feof@plt+0x485c8>  // b.tstop
  44a3f4:	mov	w8, #0x1                   	// #1
  44a3f8:	str	w8, [x25]
  44a3fc:	b	44b614 <feof@plt+0x48c44>
  44a400:	ldr	x21, [x21, #16]
  44a404:	cbz	x21, 44a420 <feof@plt+0x47a50>
  44a408:	ldr	w8, [x21, #4]
  44a40c:	cmp	w8, #0x1
  44a410:	b.gt	44a420 <feof@plt+0x47a50>
  44a414:	ldr	w9, [x19, #308]
  44a418:	cmp	w9, #0x401
  44a41c:	b.lt	44b0cc <feof@plt+0x486fc>  // b.tstop
  44a420:	mov	w8, #0x1                   	// #1
  44a424:	str	w8, [x25]
  44a428:	ldr	x8, [x19, #256]
  44a42c:	cmp	x8, #0xff
  44a430:	b.ne	44a45c <feof@plt+0x47a8c>  // b.any
  44a434:	ldp	x8, x2, [x19, #272]
  44a438:	mov	w1, #0xff                  	// #255
  44a43c:	mov	x0, x19
  44a440:	strb	wzr, [x19, #255]
  44a444:	blr	x8
  44a448:	ldr	x9, [x19, #320]
  44a44c:	mov	x8, xzr
  44a450:	str	xzr, [x19, #256]
  44a454:	add	x9, x9, #0x1
  44a458:	str	x9, [x19, #320]
  44a45c:	add	x9, x8, #0x1
  44a460:	mov	w10, #0x5b                  	// #91
  44a464:	str	x9, [x19, #256]
  44a468:	strb	w10, [x19, x8]
  44a46c:	ldr	x8, [x19, #256]
  44a470:	strb	w10, [x19, #264]
  44a474:	cmp	x8, #0xff
  44a478:	b.ne	44a4a4 <feof@plt+0x47ad4>  // b.any
  44a47c:	ldp	x8, x2, [x19, #272]
  44a480:	mov	w1, #0xff                  	// #255
  44a484:	mov	x0, x19
  44a488:	strb	wzr, [x19, #255]
  44a48c:	blr	x8
  44a490:	ldr	x9, [x19, #320]
  44a494:	mov	x8, xzr
  44a498:	str	xzr, [x19, #256]
  44a49c:	add	x9, x9, #0x1
  44a4a0:	str	x9, [x19, #320]
  44a4a4:	add	x9, x8, #0x1
  44a4a8:	mov	w10, #0x5d                  	// #93
  44a4ac:	b	4493f8 <feof@plt+0x46a28>
  44a4b0:	ldr	x8, [x19, #256]
  44a4b4:	cmp	x8, #0xff
  44a4b8:	b.ne	44a4e4 <feof@plt+0x47b14>  // b.any
  44a4bc:	ldp	x8, x2, [x19, #272]
  44a4c0:	mov	w1, #0xff                  	// #255
  44a4c4:	mov	x0, x19
  44a4c8:	strb	wzr, [x19, #255]
  44a4cc:	blr	x8
  44a4d0:	ldr	x9, [x19, #320]
  44a4d4:	mov	x8, xzr
  44a4d8:	str	xzr, [x19, #256]
  44a4dc:	add	x9, x9, #0x1
  44a4e0:	str	x9, [x19, #320]
  44a4e4:	add	x9, x8, #0x1
  44a4e8:	mov	w10, #0x28                  	// #40
  44a4ec:	str	x9, [x19, #256]
  44a4f0:	strb	w10, [x19, x8]
  44a4f4:	strb	w10, [x19, #264]
  44a4f8:	cbz	x21, 44a514 <feof@plt+0x47b44>
  44a4fc:	ldr	w8, [x21, #4]
  44a500:	cmp	w8, #0x1
  44a504:	b.gt	44a514 <feof@plt+0x47b44>
  44a508:	ldr	w9, [x19, #308]
  44a50c:	cmp	w9, #0x401
  44a510:	b.lt	44b300 <feof@plt+0x48930>  // b.tstop
  44a514:	mov	w8, #0x1                   	// #1
  44a518:	str	w8, [x25]
  44a51c:	ldr	x8, [x19, #256]
  44a520:	cmp	x8, #0xff
  44a524:	b.ne	44a550 <feof@plt+0x47b80>  // b.any
  44a528:	ldp	x8, x2, [x19, #272]
  44a52c:	mov	w1, #0xff                  	// #255
  44a530:	mov	x0, x19
  44a534:	strb	wzr, [x19, #255]
  44a538:	blr	x8
  44a53c:	ldr	x9, [x19, #320]
  44a540:	mov	x8, xzr
  44a544:	str	xzr, [x19, #256]
  44a548:	add	x9, x9, #0x1
  44a54c:	str	x9, [x19, #320]
  44a550:	add	x9, x8, #0x1
  44a554:	mov	w10, #0x29                  	// #41
  44a558:	str	x9, [x19, #256]
  44a55c:	strb	w10, [x19, x8]
  44a560:	strb	w10, [x19, #264]
  44a564:	b	44aa10 <feof@plt+0x48040>
  44a568:	cbnz	w8, 447e54 <feof@plt+0x45484>
  44a56c:	ldr	x21, [x21, #8]
  44a570:	cbz	x21, 447e54 <feof@plt+0x45484>
  44a574:	ldr	w8, [x21]
  44a578:	cmp	w8, #0x2f
  44a57c:	b.ne	44aff8 <feof@plt+0x48628>  // b.any
  44a580:	ldr	w8, [x19, #316]
  44a584:	tbnz	w8, #31, 44aff8 <feof@plt+0x48628>
  44a588:	subs	w9, w8, #0x1
  44a58c:	b.lt	44afec <feof@plt+0x4861c>  // b.tstop
  44a590:	ldr	x21, [x21, #16]
  44a594:	cbz	x21, 447e54 <feof@plt+0x45484>
  44a598:	ldr	w8, [x21]
  44a59c:	cmp	w8, #0x2f
  44a5a0:	mov	w8, w9
  44a5a4:	b.eq	44a588 <feof@plt+0x47bb8>  // b.none
  44a5a8:	b	447e54 <feof@plt+0x45484>
  44a5ac:	add	w8, w8, #0x1
  44a5b0:	str	w8, [x22, #4]
  44a5b4:	ldr	x8, [x19, #328]
  44a5b8:	add	w9, w9, #0x1
  44a5bc:	str	w9, [x19, #308]
  44a5c0:	add	x9, sp, #0x10
  44a5c4:	mov	x0, x19
  44a5c8:	mov	w1, w20
  44a5cc:	mov	x2, x22
  44a5d0:	stp	x22, x8, [sp, #16]
  44a5d4:	str	x9, [x19, #328]
  44a5d8:	bl	445750 <feof@plt+0x42d80>
  44a5dc:	ldr	x8, [sp, #24]
  44a5e0:	str	x8, [x19, #328]
  44a5e4:	ldr	w8, [x22, #4]
  44a5e8:	sub	w8, w8, #0x1
  44a5ec:	str	w8, [x22, #4]
  44a5f0:	ldr	w8, [x19, #308]
  44a5f4:	sub	w8, w8, #0x1
  44a5f8:	str	w8, [x19, #308]
  44a5fc:	ldr	x8, [x19, #256]
  44a600:	cmp	x8, #0xff
  44a604:	b.ne	44a630 <feof@plt+0x47c60>  // b.any
  44a608:	ldp	x8, x2, [x19, #272]
  44a60c:	mov	w1, #0xff                  	// #255
  44a610:	mov	x0, x19
  44a614:	strb	wzr, [x19, #255]
  44a618:	blr	x8
  44a61c:	ldr	x9, [x19, #320]
  44a620:	mov	x8, xzr
  44a624:	str	xzr, [x19, #256]
  44a628:	add	x9, x9, #0x1
  44a62c:	str	x9, [x19, #320]
  44a630:	add	x9, x8, #0x1
  44a634:	mov	w10, #0x3c                  	// #60
  44a638:	str	x9, [x19, #256]
  44a63c:	strb	w10, [x19, x8]
  44a640:	strb	w10, [x19, #264]
  44a644:	ldr	x8, [x21, #16]
  44a648:	ldr	x22, [x8, #8]
  44a64c:	cbz	x22, 44a668 <feof@plt+0x47c98>
  44a650:	ldr	w8, [x22, #4]
  44a654:	cmp	w8, #0x1
  44a658:	b.gt	44a668 <feof@plt+0x47c98>
  44a65c:	ldr	w9, [x19, #308]
  44a660:	cmp	w9, #0x401
  44a664:	b.lt	44a760 <feof@plt+0x47d90>  // b.tstop
  44a668:	mov	w8, #0x1                   	// #1
  44a66c:	str	w8, [x25]
  44a670:	ldr	x8, [x19, #256]
  44a674:	cmp	x8, #0xff
  44a678:	b.ne	44a6a4 <feof@plt+0x47cd4>  // b.any
  44a67c:	ldp	x8, x2, [x19, #272]
  44a680:	mov	w1, #0xff                  	// #255
  44a684:	mov	x0, x19
  44a688:	strb	wzr, [x19, #255]
  44a68c:	blr	x8
  44a690:	ldr	x9, [x19, #320]
  44a694:	mov	x8, xzr
  44a698:	str	xzr, [x19, #256]
  44a69c:	add	x9, x9, #0x1
  44a6a0:	str	x9, [x19, #320]
  44a6a4:	add	x9, x8, #0x1
  44a6a8:	mov	w10, #0x3e                  	// #62
  44a6ac:	str	x9, [x19, #256]
  44a6b0:	strb	w10, [x19, x8]
  44a6b4:	ldr	x8, [x19, #256]
  44a6b8:	strb	w10, [x19, #264]
  44a6bc:	cmp	x8, #0xff
  44a6c0:	b.ne	44a6ec <feof@plt+0x47d1c>  // b.any
  44a6c4:	ldp	x8, x2, [x19, #272]
  44a6c8:	mov	w1, #0xff                  	// #255
  44a6cc:	mov	x0, x19
  44a6d0:	strb	wzr, [x19, #255]
  44a6d4:	blr	x8
  44a6d8:	ldr	x9, [x19, #320]
  44a6dc:	mov	x8, xzr
  44a6e0:	str	xzr, [x19, #256]
  44a6e4:	add	x9, x9, #0x1
  44a6e8:	str	x9, [x19, #320]
  44a6ec:	add	x9, x8, #0x1
  44a6f0:	mov	w10, #0x28                  	// #40
  44a6f4:	str	x9, [x19, #256]
  44a6f8:	strb	w10, [x19, x8]
  44a6fc:	strb	w10, [x19, #264]
  44a700:	ldr	x8, [x21, #16]
  44a704:	ldr	x21, [x8, #16]
  44a708:	cbnz	x21, 448114 <feof@plt+0x45744>
  44a70c:	mov	w8, #0x1                   	// #1
  44a710:	str	w8, [x25]
  44a714:	ldr	x8, [x19, #256]
  44a718:	cmp	x8, #0xff
  44a71c:	b.ne	44a748 <feof@plt+0x47d78>  // b.any
  44a720:	ldp	x8, x2, [x19, #272]
  44a724:	mov	w1, #0xff                  	// #255
  44a728:	mov	x0, x19
  44a72c:	strb	wzr, [x19, #255]
  44a730:	blr	x8
  44a734:	ldr	x9, [x19, #320]
  44a738:	mov	x8, xzr
  44a73c:	str	xzr, [x19, #256]
  44a740:	add	x9, x9, #0x1
  44a744:	str	x9, [x19, #320]
  44a748:	add	x9, x8, #0x1
  44a74c:	mov	w10, #0x29                  	// #41
  44a750:	str	x9, [x19, #256]
  44a754:	strb	w10, [x19, x8]
  44a758:	strb	w10, [x19, #264]
  44a75c:	b	447e5c <feof@plt+0x4548c>
  44a760:	add	w8, w8, #0x1
  44a764:	str	w8, [x22, #4]
  44a768:	ldr	x8, [x19, #328]
  44a76c:	add	w9, w9, #0x1
  44a770:	str	w9, [x19, #308]
  44a774:	add	x9, sp, #0x10
  44a778:	mov	x0, x19
  44a77c:	mov	w1, w20
  44a780:	mov	x2, x22
  44a784:	stp	x22, x8, [sp, #16]
  44a788:	str	x9, [x19, #328]
  44a78c:	bl	445750 <feof@plt+0x42d80>
  44a790:	ldr	x8, [sp, #24]
  44a794:	str	x8, [x19, #328]
  44a798:	ldr	w8, [x22, #4]
  44a79c:	sub	w8, w8, #0x1
  44a7a0:	str	w8, [x22, #4]
  44a7a4:	ldr	w8, [x19, #308]
  44a7a8:	sub	w8, w8, #0x1
  44a7ac:	str	w8, [x19, #308]
  44a7b0:	b	44a670 <feof@plt+0x47ca0>
  44a7b4:	mov	w20, wzr
  44a7b8:	cbz	x21, 44a830 <feof@plt+0x47e60>
  44a7bc:	cmp	w26, #0x2f
  44a7c0:	b.ne	44a830 <feof@plt+0x47e60>  // b.any
  44a7c4:	mov	w20, wzr
  44a7c8:	ldr	x8, [x21, #8]
  44a7cc:	cbz	x8, 44a830 <feof@plt+0x47e60>
  44a7d0:	ldr	w9, [x8]
  44a7d4:	cmp	w9, #0x4b
  44a7d8:	b.ne	44a814 <feof@plt+0x47e44>  // b.any
  44a7dc:	ldr	x1, [x8, #8]
  44a7e0:	mov	x0, x19
  44a7e4:	bl	44cb34 <feof@plt+0x4a164>
  44a7e8:	mov	w8, wzr
  44a7ec:	cbz	x0, 44a818 <feof@plt+0x47e48>
  44a7f0:	ldr	w9, [x0]
  44a7f4:	cmp	w9, #0x2f
  44a7f8:	b.ne	44a818 <feof@plt+0x47e48>  // b.any
  44a7fc:	ldr	x9, [x0, #8]
  44a800:	cbz	x9, 44a818 <feof@plt+0x47e48>
  44a804:	ldr	x0, [x0, #16]
  44a808:	add	w8, w8, #0x1
  44a80c:	cbnz	x0, 44a7f0 <feof@plt+0x47e20>
  44a810:	b	44a818 <feof@plt+0x47e48>
  44a814:	mov	w8, #0x1                   	// #1
  44a818:	ldr	x21, [x21, #16]
  44a81c:	add	w20, w8, w20
  44a820:	cbz	x21, 44a830 <feof@plt+0x47e60>
  44a824:	ldr	w8, [x21]
  44a828:	cmp	w8, #0x2f
  44a82c:	b.eq	44a7c8 <feof@plt+0x47df8>  // b.none
  44a830:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  44a834:	add	x1, x1, #0x6e9
  44a838:	add	x0, sp, #0x10
  44a83c:	mov	w2, w20
  44a840:	bl	4025b0 <sprintf@plt>
  44a844:	add	x0, sp, #0x10
  44a848:	bl	402420 <strlen@plt>
  44a84c:	cbz	x0, 447e5c <feof@plt+0x4548c>
  44a850:	mov	x20, x0
  44a854:	add	x21, sp, #0x10
  44a858:	b	44a878 <feof@plt+0x47ea8>
  44a85c:	add	x9, x8, #0x1
  44a860:	subs	x20, x20, #0x1
  44a864:	add	x21, x21, #0x1
  44a868:	str	x9, [x19, #256]
  44a86c:	strb	w22, [x19, x8]
  44a870:	strb	w22, [x19, #264]
  44a874:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  44a878:	ldr	x8, [x19, #256]
  44a87c:	ldrb	w22, [x21]
  44a880:	cmp	x8, #0xff
  44a884:	b.ne	44a85c <feof@plt+0x47e8c>  // b.any
  44a888:	ldp	x8, x2, [x19, #272]
  44a88c:	mov	w1, #0xff                  	// #255
  44a890:	mov	x0, x19
  44a894:	strb	wzr, [x19, #255]
  44a898:	blr	x8
  44a89c:	ldr	x9, [x19, #320]
  44a8a0:	mov	x8, xzr
  44a8a4:	str	xzr, [x19, #256]
  44a8a8:	add	x9, x9, #0x1
  44a8ac:	str	x9, [x19, #320]
  44a8b0:	b	44a85c <feof@plt+0x47e8c>
  44a8b4:	ldr	x8, [x19, #256]
  44a8b8:	cmp	x8, #0xff
  44a8bc:	b.ne	44a8e8 <feof@plt+0x47f18>  // b.any
  44a8c0:	ldp	x8, x2, [x19, #272]
  44a8c4:	mov	w1, #0xff                  	// #255
  44a8c8:	mov	x0, x19
  44a8cc:	strb	wzr, [x19, #255]
  44a8d0:	blr	x8
  44a8d4:	ldr	x9, [x19, #320]
  44a8d8:	mov	x8, xzr
  44a8dc:	str	xzr, [x19, #256]
  44a8e0:	add	x9, x9, #0x1
  44a8e4:	str	x9, [x19, #320]
  44a8e8:	add	x9, x8, #0x1
  44a8ec:	mov	w10, #0x28                  	// #40
  44a8f0:	str	x9, [x19, #256]
  44a8f4:	strb	w10, [x19, x8]
  44a8f8:	strb	w10, [x19, #264]
  44a8fc:	cbz	x22, 44a918 <feof@plt+0x47f48>
  44a900:	ldr	w8, [x22, #4]
  44a904:	cmp	w8, #0x1
  44a908:	b.gt	44a918 <feof@plt+0x47f48>
  44a90c:	ldr	w9, [x19, #308]
  44a910:	cmp	w9, #0x401
  44a914:	b.lt	44b36c <feof@plt+0x4899c>  // b.tstop
  44a918:	mov	w8, #0x1                   	// #1
  44a91c:	str	w8, [x25]
  44a920:	ldr	x8, [x19, #256]
  44a924:	cmp	x8, #0xff
  44a928:	b.ne	44a954 <feof@plt+0x47f84>  // b.any
  44a92c:	ldp	x8, x2, [x19, #272]
  44a930:	mov	w1, #0xff                  	// #255
  44a934:	mov	x0, x19
  44a938:	strb	wzr, [x19, #255]
  44a93c:	blr	x8
  44a940:	ldr	x9, [x19, #320]
  44a944:	mov	x8, xzr
  44a948:	str	xzr, [x19, #256]
  44a94c:	add	x9, x9, #0x1
  44a950:	str	x9, [x19, #320]
  44a954:	add	x9, x8, #0x1
  44a958:	mov	w10, #0x29                  	// #41
  44a95c:	str	x9, [x19, #256]
  44a960:	strb	w10, [x19, x8]
  44a964:	strb	w10, [x19, #264]
  44a968:	b	44ab80 <feof@plt+0x481b0>
  44a96c:	add	w8, w8, #0x1
  44a970:	str	w8, [x21, #4]
  44a974:	ldr	x8, [x19, #328]
  44a978:	add	w9, w9, #0x1
  44a97c:	str	w9, [x19, #308]
  44a980:	sub	x9, x29, #0x10
  44a984:	mov	x0, x19
  44a988:	mov	w1, w20
  44a98c:	mov	x2, x21
  44a990:	stp	x21, x8, [x29, #-16]
  44a994:	str	x9, [x19, #328]
  44a998:	bl	445750 <feof@plt+0x42d80>
  44a99c:	ldur	x8, [x29, #-8]
  44a9a0:	str	x8, [x19, #328]
  44a9a4:	ldr	w8, [x21, #4]
  44a9a8:	sub	w8, w8, #0x1
  44a9ac:	str	w8, [x21, #4]
  44a9b0:	ldr	w8, [x19, #308]
  44a9b4:	sub	w8, w8, #0x1
  44a9b8:	str	w8, [x19, #308]
  44a9bc:	b	4499f0 <feof@plt+0x47020>
  44a9c0:	add	w8, w8, #0x1
  44a9c4:	str	w8, [x21, #4]
  44a9c8:	ldr	x8, [x19, #328]
  44a9cc:	add	w9, w9, #0x1
  44a9d0:	str	w9, [x19, #308]
  44a9d4:	add	x9, sp, #0x10
  44a9d8:	mov	x0, x19
  44a9dc:	mov	w1, w20
  44a9e0:	mov	x2, x21
  44a9e4:	stp	x21, x8, [sp, #16]
  44a9e8:	str	x9, [x19, #328]
  44a9ec:	bl	445750 <feof@plt+0x42d80>
  44a9f0:	ldr	x8, [sp, #24]
  44a9f4:	str	x8, [x19, #328]
  44a9f8:	ldr	w8, [x21, #4]
  44a9fc:	sub	w8, w8, #0x1
  44aa00:	str	w8, [x21, #4]
  44aa04:	ldr	w8, [x19, #308]
  44aa08:	sub	w8, w8, #0x1
  44aa0c:	str	w8, [x19, #308]
  44aa10:	ldr	w8, [x22]
  44aa14:	cmp	w8, #0x32
  44aa18:	b.ne	44aa88 <feof@plt+0x480b8>  // b.any
  44aa1c:	ldr	x8, [x22, #8]
  44aa20:	ldrsw	x20, [x8, #16]
  44aa24:	cbz	w20, 447e5c <feof@plt+0x4548c>
  44aa28:	ldr	x21, [x8, #8]
  44aa2c:	b	44aa4c <feof@plt+0x4807c>
  44aa30:	add	x9, x8, #0x1
  44aa34:	subs	x20, x20, #0x1
  44aa38:	add	x21, x21, #0x1
  44aa3c:	str	x9, [x19, #256]
  44aa40:	strb	w22, [x19, x8]
  44aa44:	strb	w22, [x19, #264]
  44aa48:	b.eq	447e5c <feof@plt+0x4548c>  // b.none
  44aa4c:	ldr	x8, [x19, #256]
  44aa50:	ldrb	w22, [x21]
  44aa54:	cmp	x8, #0xff
  44aa58:	b.ne	44aa30 <feof@plt+0x48060>  // b.any
  44aa5c:	ldp	x8, x2, [x19, #272]
  44aa60:	mov	w1, #0xff                  	// #255
  44aa64:	mov	x0, x19
  44aa68:	strb	wzr, [x19, #255]
  44aa6c:	blr	x8
  44aa70:	ldr	x9, [x19, #320]
  44aa74:	mov	x8, xzr
  44aa78:	str	xzr, [x19, #256]
  44aa7c:	add	x9, x9, #0x1
  44aa80:	str	x9, [x19, #320]
  44aa84:	b	44aa30 <feof@plt+0x48060>
  44aa88:	ldr	w8, [x22, #4]
  44aa8c:	cmp	w8, #0x1
  44aa90:	b.gt	447e54 <feof@plt+0x45484>
  44aa94:	ldr	w9, [x19, #308]
  44aa98:	cmp	w9, #0x401
  44aa9c:	b.ge	447e54 <feof@plt+0x45484>  // b.tcont
  44aaa0:	add	w8, w8, #0x1
  44aaa4:	str	w8, [x22, #4]
  44aaa8:	ldr	x8, [x19, #328]
  44aaac:	add	w9, w9, #0x1
  44aab0:	str	w9, [x19, #308]
  44aab4:	add	x9, sp, #0x10
  44aab8:	mov	x0, x19
  44aabc:	mov	w1, w20
  44aac0:	mov	x2, x22
  44aac4:	stp	x22, x8, [sp, #16]
  44aac8:	str	x9, [x19, #328]
  44aacc:	bl	445750 <feof@plt+0x42d80>
  44aad0:	ldr	x8, [sp, #24]
  44aad4:	str	x8, [x19, #328]
  44aad8:	ldr	w8, [x22, #4]
  44aadc:	sub	w8, w8, #0x1
  44aae0:	str	w8, [x22, #4]
  44aae4:	b	447ec4 <feof@plt+0x454f4>
  44aae8:	cbnz	w10, 44b360 <feof@plt+0x48990>
  44aaec:	ldr	x9, [x9, #8]
  44aaf0:	cbz	x9, 44b360 <feof@plt+0x48990>
  44aaf4:	ldr	w10, [x9]
  44aaf8:	cmp	w10, #0x2f
  44aafc:	b.ne	445bec <feof@plt+0x4321c>  // b.any
  44ab00:	ldr	w10, [x19, #316]
  44ab04:	tbnz	w10, #31, 445bec <feof@plt+0x4321c>
  44ab08:	subs	w11, w10, #0x1
  44ab0c:	b.lt	44b354 <feof@plt+0x48984>  // b.tstop
  44ab10:	ldr	x9, [x9, #16]
  44ab14:	cbz	x9, 44b360 <feof@plt+0x48990>
  44ab18:	ldr	w10, [x9]
  44ab1c:	cmp	w10, #0x2f
  44ab20:	mov	w10, w11
  44ab24:	b.eq	44ab08 <feof@plt+0x48138>  // b.none
  44ab28:	b	44b360 <feof@plt+0x48990>
  44ab2c:	add	w8, w8, #0x1
  44ab30:	add	w9, w9, #0x1
  44ab34:	str	w8, [x22, #4]
  44ab38:	str	w9, [x19, #308]
  44ab3c:	str	x22, [sp, #16]
  44ab40:	ldr	x8, [x19, #328]
  44ab44:	add	x9, sp, #0x10
  44ab48:	mov	x0, x19
  44ab4c:	mov	w1, w20
  44ab50:	mov	x2, x22
  44ab54:	str	x8, [sp, #24]
  44ab58:	str	x9, [x19, #328]
  44ab5c:	bl	445750 <feof@plt+0x42d80>
  44ab60:	ldr	x8, [sp, #24]
  44ab64:	str	x8, [x19, #328]
  44ab68:	ldr	w8, [x22, #4]
  44ab6c:	sub	w8, w8, #0x1
  44ab70:	str	w8, [x22, #4]
  44ab74:	ldr	w8, [x19, #308]
  44ab78:	sub	w8, w8, #0x1
  44ab7c:	str	w8, [x19, #308]
  44ab80:	ldr	x22, [x21, #8]
  44ab84:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  44ab88:	add	x1, x1, #0x86b
  44ab8c:	ldr	x24, [x22, #8]
  44ab90:	ldr	x23, [x24]
  44ab94:	mov	x0, x23
  44ab98:	bl	402820 <strcmp@plt>
  44ab9c:	cbz	w0, 44ac28 <feof@plt+0x48258>
  44aba0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44aba4:	add	x1, x1, #0x150
  44aba8:	mov	x0, x23
  44abac:	bl	402820 <strcmp@plt>
  44abb0:	cbz	w0, 44b170 <feof@plt+0x487a0>
  44abb4:	ldr	w8, [x22]
  44abb8:	cmp	w8, #0x32
  44abbc:	b.ne	44acdc <feof@plt+0x4830c>  // b.any
  44abc0:	ldrsw	x22, [x24, #16]
  44abc4:	cbz	w22, 44b170 <feof@plt+0x487a0>
  44abc8:	ldr	x23, [x24, #8]
  44abcc:	b	44abec <feof@plt+0x4821c>
  44abd0:	add	x9, x8, #0x1
  44abd4:	subs	x22, x22, #0x1
  44abd8:	add	x23, x23, #0x1
  44abdc:	str	x9, [x19, #256]
  44abe0:	strb	w24, [x19, x8]
  44abe4:	strb	w24, [x19, #264]
  44abe8:	b.eq	44b170 <feof@plt+0x487a0>  // b.none
  44abec:	ldr	x8, [x19, #256]
  44abf0:	ldrb	w24, [x23]
  44abf4:	cmp	x8, #0xff
  44abf8:	b.ne	44abd0 <feof@plt+0x48200>  // b.any
  44abfc:	ldp	x8, x2, [x19, #272]
  44ac00:	mov	w1, #0xff                  	// #255
  44ac04:	mov	x0, x19
  44ac08:	strb	wzr, [x19, #255]
  44ac0c:	blr	x8
  44ac10:	ldr	x9, [x19, #320]
  44ac14:	mov	x8, xzr
  44ac18:	str	xzr, [x19, #256]
  44ac1c:	add	x9, x9, #0x1
  44ac20:	str	x9, [x19, #320]
  44ac24:	b	44abd0 <feof@plt+0x48200>
  44ac28:	ldr	x8, [x19, #256]
  44ac2c:	cmp	x8, #0xff
  44ac30:	b.ne	44ac5c <feof@plt+0x4828c>  // b.any
  44ac34:	ldp	x8, x2, [x19, #272]
  44ac38:	mov	w1, #0xff                  	// #255
  44ac3c:	mov	x0, x19
  44ac40:	strb	wzr, [x19, #255]
  44ac44:	blr	x8
  44ac48:	ldr	x9, [x19, #320]
  44ac4c:	mov	x8, xzr
  44ac50:	str	xzr, [x19, #256]
  44ac54:	add	x9, x9, #0x1
  44ac58:	str	x9, [x19, #320]
  44ac5c:	add	x9, x8, #0x1
  44ac60:	mov	w10, #0x5b                  	// #91
  44ac64:	str	x9, [x19, #256]
  44ac68:	strb	w10, [x19, x8]
  44ac6c:	strb	w10, [x19, #264]
  44ac70:	ldr	x8, [x21, #16]
  44ac74:	ldr	x22, [x8, #16]
  44ac78:	cbz	x22, 44ac94 <feof@plt+0x482c4>
  44ac7c:	ldr	w8, [x22, #4]
  44ac80:	cmp	w8, #0x1
  44ac84:	b.gt	44ac94 <feof@plt+0x482c4>
  44ac88:	ldr	w9, [x19, #308]
  44ac8c:	cmp	w9, #0x401
  44ac90:	b.lt	44b078 <feof@plt+0x486a8>  // b.tstop
  44ac94:	mov	w8, #0x1                   	// #1
  44ac98:	str	w8, [x25]
  44ac9c:	ldr	x8, [x19, #256]
  44aca0:	cmp	x8, #0xff
  44aca4:	b.ne	44acd0 <feof@plt+0x48300>  // b.any
  44aca8:	ldp	x8, x2, [x19, #272]
  44acac:	mov	w1, #0xff                  	// #255
  44acb0:	mov	x0, x19
  44acb4:	strb	wzr, [x19, #255]
  44acb8:	blr	x8
  44acbc:	ldr	x9, [x19, #320]
  44acc0:	mov	x8, xzr
  44acc4:	str	xzr, [x19, #256]
  44acc8:	add	x9, x9, #0x1
  44accc:	str	x9, [x19, #320]
  44acd0:	add	x9, x8, #0x1
  44acd4:	mov	w10, #0x5d                  	// #93
  44acd8:	b	44b26c <feof@plt+0x4889c>
  44acdc:	ldr	w8, [x22, #4]
  44ace0:	cmp	w8, #0x1
  44ace4:	b.gt	44acf4 <feof@plt+0x48324>
  44ace8:	ldr	w9, [x19, #308]
  44acec:	cmp	w9, #0x401
  44acf0:	b.lt	44b120 <feof@plt+0x48750>  // b.tstop
  44acf4:	mov	w8, #0x1                   	// #1
  44acf8:	str	w8, [x25]
  44acfc:	b	44b170 <feof@plt+0x487a0>
  44ad00:	add	w8, w8, #0x1
  44ad04:	str	w8, [x21, #4]
  44ad08:	ldr	x8, [x19, #328]
  44ad0c:	add	w9, w9, #0x1
  44ad10:	str	w9, [x19, #308]
  44ad14:	add	x9, sp, #0x10
  44ad18:	mov	x0, x19
  44ad1c:	mov	w1, w20
  44ad20:	mov	x2, x21
  44ad24:	stp	x21, x8, [sp, #16]
  44ad28:	str	x9, [x19, #328]
  44ad2c:	bl	445750 <feof@plt+0x42d80>
  44ad30:	ldr	x8, [sp, #24]
  44ad34:	str	x8, [x19, #328]
  44ad38:	ldr	w8, [x21, #4]
  44ad3c:	sub	w8, w8, #0x1
  44ad40:	str	w8, [x21, #4]
  44ad44:	ldr	w8, [x19, #308]
  44ad48:	sub	w8, w8, #0x1
  44ad4c:	str	w8, [x19, #308]
  44ad50:	b	449d04 <feof@plt+0x47334>
  44ad54:	ldr	x8, [x19, #256]
  44ad58:	cmp	x8, #0xff
  44ad5c:	b.ne	44ad88 <feof@plt+0x483b8>  // b.any
  44ad60:	ldp	x8, x2, [x19, #272]
  44ad64:	mov	w1, #0xff                  	// #255
  44ad68:	mov	x0, x19
  44ad6c:	strb	wzr, [x19, #255]
  44ad70:	blr	x8
  44ad74:	ldr	x9, [x19, #320]
  44ad78:	mov	x8, xzr
  44ad7c:	str	xzr, [x19, #256]
  44ad80:	add	x9, x9, #0x1
  44ad84:	str	x9, [x19, #320]
  44ad88:	add	x9, x8, #0x1
  44ad8c:	mov	w10, #0x74                  	// #116
  44ad90:	str	x9, [x19, #256]
  44ad94:	strb	w10, [x19, x8]
  44ad98:	ldr	x8, [x19, #256]
  44ad9c:	strb	w10, [x19, #264]
  44ada0:	cmp	x8, #0xff
  44ada4:	b.ne	44add0 <feof@plt+0x48400>  // b.any
  44ada8:	ldp	x8, x2, [x19, #272]
  44adac:	mov	w1, #0xff                  	// #255
  44adb0:	mov	x0, x19
  44adb4:	strb	wzr, [x19, #255]
  44adb8:	blr	x8
  44adbc:	ldr	x9, [x19, #320]
  44adc0:	mov	x8, xzr
  44adc4:	str	xzr, [x19, #256]
  44adc8:	add	x9, x9, #0x1
  44adcc:	str	x9, [x19, #320]
  44add0:	add	x9, x8, #0x1
  44add4:	mov	w10, #0x72                  	// #114
  44add8:	str	x9, [x19, #256]
  44addc:	strb	w10, [x19, x8]
  44ade0:	ldr	x8, [x19, #256]
  44ade4:	strb	w10, [x19, #264]
  44ade8:	cmp	x8, #0xff
  44adec:	b.ne	44ae18 <feof@plt+0x48448>  // b.any
  44adf0:	ldp	x8, x2, [x19, #272]
  44adf4:	mov	w1, #0xff                  	// #255
  44adf8:	mov	x0, x19
  44adfc:	strb	wzr, [x19, #255]
  44ae00:	blr	x8
  44ae04:	ldr	x9, [x19, #320]
  44ae08:	mov	x8, xzr
  44ae0c:	str	xzr, [x19, #256]
  44ae10:	add	x9, x9, #0x1
  44ae14:	str	x9, [x19, #320]
  44ae18:	add	x9, x8, #0x1
  44ae1c:	mov	w10, #0x75                  	// #117
  44ae20:	str	x9, [x19, #256]
  44ae24:	strb	w10, [x19, x8]
  44ae28:	ldr	x8, [x19, #256]
  44ae2c:	strb	w10, [x19, #264]
  44ae30:	cmp	x8, #0xff
  44ae34:	b.ne	44ae60 <feof@plt+0x48490>  // b.any
  44ae38:	ldp	x8, x2, [x19, #272]
  44ae3c:	mov	w1, #0xff                  	// #255
  44ae40:	mov	x0, x19
  44ae44:	strb	wzr, [x19, #255]
  44ae48:	blr	x8
  44ae4c:	ldr	x9, [x19, #320]
  44ae50:	mov	x8, xzr
  44ae54:	str	xzr, [x19, #256]
  44ae58:	add	x9, x9, #0x1
  44ae5c:	str	x9, [x19, #320]
  44ae60:	add	x9, x8, #0x1
  44ae64:	mov	w10, #0x65                  	// #101
  44ae68:	b	44a750 <feof@plt+0x47d80>
  44ae6c:	ldr	x8, [x19, #256]
  44ae70:	cmp	x8, #0xff
  44ae74:	b.ne	44aea0 <feof@plt+0x484d0>  // b.any
  44ae78:	ldp	x8, x2, [x19, #272]
  44ae7c:	mov	w1, #0xff                  	// #255
  44ae80:	mov	x0, x19
  44ae84:	strb	wzr, [x19, #255]
  44ae88:	blr	x8
  44ae8c:	ldr	x9, [x19, #320]
  44ae90:	mov	x8, xzr
  44ae94:	str	xzr, [x19, #256]
  44ae98:	add	x9, x9, #0x1
  44ae9c:	str	x9, [x19, #320]
  44aea0:	add	x9, x8, #0x1
  44aea4:	mov	w10, #0x28                  	// #40
  44aea8:	str	x9, [x19, #256]
  44aeac:	strb	w10, [x19, x8]
  44aeb0:	strb	w10, [x19, #264]
  44aeb4:	ldr	w8, [x23, #4]
  44aeb8:	cmp	w8, #0x1
  44aebc:	b.gt	44aecc <feof@plt+0x484fc>
  44aec0:	ldr	w9, [x19, #308]
  44aec4:	cmp	w9, #0x401
  44aec8:	b.lt	44b418 <feof@plt+0x48a48>  // b.tstop
  44aecc:	mov	w8, #0x1                   	// #1
  44aed0:	str	w8, [x25]
  44aed4:	b	44b468 <feof@plt+0x48a98>
  44aed8:	add	w8, w8, #0x1
  44aedc:	str	w8, [x23, #4]
  44aee0:	ldr	x8, [x19, #328]
  44aee4:	add	w9, w9, #0x1
  44aee8:	str	w9, [x19, #308]
  44aeec:	add	x9, sp, #0x10
  44aef0:	mov	x0, x19
  44aef4:	mov	w1, w20
  44aef8:	mov	x2, x23
  44aefc:	stp	x23, x8, [sp, #16]
  44af00:	str	x9, [x19, #328]
  44af04:	bl	445750 <feof@plt+0x42d80>
  44af08:	ldr	x8, [sp, #24]
  44af0c:	str	x8, [x19, #328]
  44af10:	ldr	w8, [x23, #4]
  44af14:	sub	w8, w8, #0x1
  44af18:	str	w8, [x23, #4]
  44af1c:	ldr	w8, [x19, #308]
  44af20:	sub	w8, w8, #0x1
  44af24:	str	w8, [x19, #308]
  44af28:	b	44b4b0 <feof@plt+0x48ae0>
  44af2c:	ldr	x8, [x19, #256]
  44af30:	cmp	x8, #0xff
  44af34:	b.ne	44af60 <feof@plt+0x48590>  // b.any
  44af38:	ldp	x8, x2, [x19, #272]
  44af3c:	mov	w1, #0xff                  	// #255
  44af40:	mov	x0, x19
  44af44:	strb	wzr, [x19, #255]
  44af48:	blr	x8
  44af4c:	ldr	x9, [x19, #320]
  44af50:	mov	x8, xzr
  44af54:	str	xzr, [x19, #256]
  44af58:	add	x9, x9, #0x1
  44af5c:	str	x9, [x19, #320]
  44af60:	add	x9, x8, #0x1
  44af64:	mov	w10, #0x28                  	// #40
  44af68:	str	x9, [x19, #256]
  44af6c:	strb	w10, [x19, x8]
  44af70:	strb	w10, [x19, #264]
  44af74:	ldr	w8, [x23, #4]
  44af78:	cmp	w8, #0x1
  44af7c:	b.gt	44af8c <feof@plt+0x485bc>
  44af80:	ldr	w9, [x19, #308]
  44af84:	cmp	w9, #0x401
  44af88:	b.lt	44b57c <feof@plt+0x48bac>  // b.tstop
  44af8c:	mov	w8, #0x1                   	// #1
  44af90:	str	w8, [x25]
  44af94:	b	44b5cc <feof@plt+0x48bfc>
  44af98:	add	w8, w8, #0x1
  44af9c:	str	w8, [x23, #4]
  44afa0:	ldr	x8, [x19, #328]
  44afa4:	add	w9, w9, #0x1
  44afa8:	str	w9, [x19, #308]
  44afac:	add	x9, sp, #0x10
  44afb0:	mov	x0, x19
  44afb4:	mov	w1, w20
  44afb8:	mov	x2, x23
  44afbc:	stp	x23, x8, [sp, #16]
  44afc0:	str	x9, [x19, #328]
  44afc4:	bl	445750 <feof@plt+0x42d80>
  44afc8:	ldr	x8, [sp, #24]
  44afcc:	str	x8, [x19, #328]
  44afd0:	ldr	w8, [x23, #4]
  44afd4:	sub	w8, w8, #0x1
  44afd8:	str	w8, [x23, #4]
  44afdc:	ldr	w8, [x19, #308]
  44afe0:	sub	w8, w8, #0x1
  44afe4:	str	w8, [x19, #308]
  44afe8:	b	44b614 <feof@plt+0x48c44>
  44afec:	cbnz	w8, 447e54 <feof@plt+0x45484>
  44aff0:	ldr	x21, [x21, #8]
  44aff4:	cbz	x21, 447e54 <feof@plt+0x45484>
  44aff8:	ldr	x8, [x22]
  44affc:	str	x8, [x19, #288]
  44b000:	ldr	w8, [x21, #4]
  44b004:	cmp	w8, #0x1
  44b008:	b.gt	44b018 <feof@plt+0x48648>
  44b00c:	ldr	w9, [x19, #308]
  44b010:	cmp	w9, #0x401
  44b014:	b.lt	44b028 <feof@plt+0x48658>  // b.tstop
  44b018:	mov	w8, #0x1                   	// #1
  44b01c:	str	w8, [x25]
  44b020:	str	x22, [x19, #288]
  44b024:	b	447e5c <feof@plt+0x4548c>
  44b028:	add	w8, w8, #0x1
  44b02c:	str	w8, [x21, #4]
  44b030:	ldr	x8, [x19, #328]
  44b034:	add	w9, w9, #0x1
  44b038:	str	w9, [x19, #308]
  44b03c:	add	x9, sp, #0x10
  44b040:	mov	x0, x19
  44b044:	mov	w1, w20
  44b048:	mov	x2, x21
  44b04c:	stp	x21, x8, [sp, #16]
  44b050:	str	x9, [x19, #328]
  44b054:	bl	445750 <feof@plt+0x42d80>
  44b058:	ldr	x8, [sp, #24]
  44b05c:	str	x8, [x19, #328]
  44b060:	ldr	w8, [x21, #4]
  44b064:	sub	w8, w8, #0x1
  44b068:	str	w8, [x21, #4]
  44b06c:	ldr	w8, [x19, #308]
  44b070:	str	x22, [x19, #288]
  44b074:	b	447ec8 <feof@plt+0x454f8>
  44b078:	add	w8, w8, #0x1
  44b07c:	str	w8, [x22, #4]
  44b080:	ldr	x8, [x19, #328]
  44b084:	add	w9, w9, #0x1
  44b088:	str	w9, [x19, #308]
  44b08c:	add	x9, sp, #0x10
  44b090:	mov	x0, x19
  44b094:	mov	w1, w20
  44b098:	mov	x2, x22
  44b09c:	stp	x22, x8, [sp, #16]
  44b0a0:	str	x9, [x19, #328]
  44b0a4:	bl	445750 <feof@plt+0x42d80>
  44b0a8:	ldr	x8, [sp, #24]
  44b0ac:	str	x8, [x19, #328]
  44b0b0:	ldr	w8, [x22, #4]
  44b0b4:	sub	w8, w8, #0x1
  44b0b8:	str	w8, [x22, #4]
  44b0bc:	ldr	w8, [x19, #308]
  44b0c0:	sub	w8, w8, #0x1
  44b0c4:	str	w8, [x19, #308]
  44b0c8:	b	44ac9c <feof@plt+0x482cc>
  44b0cc:	add	w8, w8, #0x1
  44b0d0:	str	w8, [x21, #4]
  44b0d4:	ldr	x8, [x19, #328]
  44b0d8:	add	w9, w9, #0x1
  44b0dc:	str	w9, [x19, #308]
  44b0e0:	add	x9, sp, #0x10
  44b0e4:	mov	x0, x19
  44b0e8:	mov	w1, w20
  44b0ec:	mov	x2, x21
  44b0f0:	stp	x21, x8, [sp, #16]
  44b0f4:	str	x9, [x19, #328]
  44b0f8:	bl	445750 <feof@plt+0x42d80>
  44b0fc:	ldr	x8, [sp, #24]
  44b100:	str	x8, [x19, #328]
  44b104:	ldr	w8, [x21, #4]
  44b108:	sub	w8, w8, #0x1
  44b10c:	str	w8, [x21, #4]
  44b110:	ldr	w8, [x19, #308]
  44b114:	sub	w8, w8, #0x1
  44b118:	str	w8, [x19, #308]
  44b11c:	b	44a428 <feof@plt+0x47a58>
  44b120:	add	w8, w8, #0x1
  44b124:	str	w8, [x22, #4]
  44b128:	ldr	x8, [x19, #328]
  44b12c:	add	w9, w9, #0x1
  44b130:	str	w9, [x19, #308]
  44b134:	add	x9, sp, #0x10
  44b138:	mov	x0, x19
  44b13c:	mov	w1, w20
  44b140:	mov	x2, x22
  44b144:	stp	x22, x8, [sp, #16]
  44b148:	str	x9, [x19, #328]
  44b14c:	bl	445750 <feof@plt+0x42d80>
  44b150:	ldr	x8, [sp, #24]
  44b154:	str	x8, [x19, #328]
  44b158:	ldr	w8, [x22, #4]
  44b15c:	sub	w8, w8, #0x1
  44b160:	str	w8, [x22, #4]
  44b164:	ldr	w8, [x19, #308]
  44b168:	sub	w8, w8, #0x1
  44b16c:	str	w8, [x19, #308]
  44b170:	ldr	x8, [x21, #16]
  44b174:	ldr	x22, [x8, #16]
  44b178:	ldr	w8, [x22]
  44b17c:	cmp	w8, #0x31
  44b180:	b.hi	44b1c4 <feof@plt+0x487f4>  // b.pmore
  44b184:	mov	w9, #0x1                   	// #1
  44b188:	lsl	x8, x9, x8
  44b18c:	mov	x9, #0x43                  	// #67
  44b190:	movk	x9, #0x2, lsl #48
  44b194:	tst	x8, x9
  44b198:	b.eq	44b1c4 <feof@plt+0x487f4>  // b.none
  44b19c:	cbz	x22, 44b1b8 <feof@plt+0x487e8>
  44b1a0:	ldr	w8, [x22, #4]
  44b1a4:	cmp	w8, #0x1
  44b1a8:	b.gt	44b1b8 <feof@plt+0x487e8>
  44b1ac:	ldr	w9, [x19, #308]
  44b1b0:	cmp	w9, #0x401
  44b1b4:	b.lt	44b2ac <feof@plt+0x488dc>  // b.tstop
  44b1b8:	mov	w8, #0x1                   	// #1
  44b1bc:	str	w8, [x25]
  44b1c0:	b	44b278 <feof@plt+0x488a8>
  44b1c4:	ldr	x8, [x19, #256]
  44b1c8:	cmp	x8, #0xff
  44b1cc:	b.ne	44b1f8 <feof@plt+0x48828>  // b.any
  44b1d0:	ldp	x8, x2, [x19, #272]
  44b1d4:	mov	w1, #0xff                  	// #255
  44b1d8:	mov	x0, x19
  44b1dc:	strb	wzr, [x19, #255]
  44b1e0:	blr	x8
  44b1e4:	ldr	x9, [x19, #320]
  44b1e8:	mov	x8, xzr
  44b1ec:	str	xzr, [x19, #256]
  44b1f0:	add	x9, x9, #0x1
  44b1f4:	str	x9, [x19, #320]
  44b1f8:	add	x9, x8, #0x1
  44b1fc:	mov	w10, #0x28                  	// #40
  44b200:	str	x9, [x19, #256]
  44b204:	strb	w10, [x19, x8]
  44b208:	strb	w10, [x19, #264]
  44b20c:	cbz	x22, 44b228 <feof@plt+0x48858>
  44b210:	ldr	w8, [x22, #4]
  44b214:	cmp	w8, #0x1
  44b218:	b.gt	44b228 <feof@plt+0x48858>
  44b21c:	ldr	w9, [x19, #308]
  44b220:	cmp	w9, #0x401
  44b224:	b.lt	44b3c4 <feof@plt+0x489f4>  // b.tstop
  44b228:	mov	w8, #0x1                   	// #1
  44b22c:	str	w8, [x25]
  44b230:	ldr	x8, [x19, #256]
  44b234:	cmp	x8, #0xff
  44b238:	b.ne	44b264 <feof@plt+0x48894>  // b.any
  44b23c:	ldp	x8, x2, [x19, #272]
  44b240:	mov	w1, #0xff                  	// #255
  44b244:	mov	x0, x19
  44b248:	strb	wzr, [x19, #255]
  44b24c:	blr	x8
  44b250:	ldr	x9, [x19, #320]
  44b254:	mov	x8, xzr
  44b258:	str	xzr, [x19, #256]
  44b25c:	add	x9, x9, #0x1
  44b260:	str	x9, [x19, #320]
  44b264:	add	x9, x8, #0x1
  44b268:	mov	w10, #0x29                  	// #41
  44b26c:	str	x9, [x19, #256]
  44b270:	strb	w10, [x19, x8]
  44b274:	strb	w10, [x19, #264]
  44b278:	ldr	x8, [x21, #8]
  44b27c:	ldr	w9, [x8]
  44b280:	cmp	w9, #0x32
  44b284:	b.ne	447e5c <feof@plt+0x4548c>  // b.any
  44b288:	ldr	x8, [x8, #8]
  44b28c:	ldr	w9, [x8, #16]
  44b290:	cmp	w9, #0x1
  44b294:	b.ne	447e5c <feof@plt+0x4548c>  // b.any
  44b298:	ldr	x8, [x8, #8]
  44b29c:	ldrb	w8, [x8]
  44b2a0:	cmp	w8, #0x3e
  44b2a4:	b.ne	447e5c <feof@plt+0x4548c>  // b.any
  44b2a8:	b	44a714 <feof@plt+0x47d44>
  44b2ac:	add	w8, w8, #0x1
  44b2b0:	str	w8, [x22, #4]
  44b2b4:	ldr	x8, [x19, #328]
  44b2b8:	add	w9, w9, #0x1
  44b2bc:	str	w9, [x19, #308]
  44b2c0:	add	x9, sp, #0x10
  44b2c4:	mov	x0, x19
  44b2c8:	mov	w1, w20
  44b2cc:	mov	x2, x22
  44b2d0:	stp	x22, x8, [sp, #16]
  44b2d4:	str	x9, [x19, #328]
  44b2d8:	bl	445750 <feof@plt+0x42d80>
  44b2dc:	ldr	x8, [sp, #24]
  44b2e0:	str	x8, [x19, #328]
  44b2e4:	ldr	w8, [x22, #4]
  44b2e8:	sub	w8, w8, #0x1
  44b2ec:	str	w8, [x22, #4]
  44b2f0:	ldr	w8, [x19, #308]
  44b2f4:	sub	w8, w8, #0x1
  44b2f8:	str	w8, [x19, #308]
  44b2fc:	b	44b278 <feof@plt+0x488a8>
  44b300:	add	w8, w8, #0x1
  44b304:	str	w8, [x21, #4]
  44b308:	ldr	x8, [x19, #328]
  44b30c:	add	w9, w9, #0x1
  44b310:	str	w9, [x19, #308]
  44b314:	add	x9, sp, #0x10
  44b318:	mov	x0, x19
  44b31c:	mov	w1, w20
  44b320:	mov	x2, x21
  44b324:	stp	x21, x8, [sp, #16]
  44b328:	str	x9, [x19, #328]
  44b32c:	bl	445750 <feof@plt+0x42d80>
  44b330:	ldr	x8, [sp, #24]
  44b334:	str	x8, [x19, #328]
  44b338:	ldr	w8, [x21, #4]
  44b33c:	sub	w8, w8, #0x1
  44b340:	str	w8, [x21, #4]
  44b344:	ldr	w8, [x19, #308]
  44b348:	sub	w8, w8, #0x1
  44b34c:	str	w8, [x19, #308]
  44b350:	b	44a51c <feof@plt+0x47b4c>
  44b354:	cbnz	w10, 44b360 <feof@plt+0x48990>
  44b358:	ldr	x9, [x9, #8]
  44b35c:	cbnz	x9, 445bec <feof@plt+0x4321c>
  44b360:	cbz	w23, 447e54 <feof@plt+0x45484>
  44b364:	str	x24, [x19, #288]
  44b368:	b	447e54 <feof@plt+0x45484>
  44b36c:	add	w8, w8, #0x1
  44b370:	add	w9, w9, #0x1
  44b374:	str	w8, [x22, #4]
  44b378:	str	w9, [x19, #308]
  44b37c:	str	x22, [sp, #16]
  44b380:	ldr	x8, [x19, #328]
  44b384:	add	x9, sp, #0x10
  44b388:	mov	x0, x19
  44b38c:	mov	w1, w20
  44b390:	mov	x2, x22
  44b394:	str	x8, [sp, #24]
  44b398:	str	x9, [x19, #328]
  44b39c:	bl	445750 <feof@plt+0x42d80>
  44b3a0:	ldr	x8, [sp, #24]
  44b3a4:	str	x8, [x19, #328]
  44b3a8:	ldr	w8, [x22, #4]
  44b3ac:	sub	w8, w8, #0x1
  44b3b0:	str	w8, [x22, #4]
  44b3b4:	ldr	w8, [x19, #308]
  44b3b8:	sub	w8, w8, #0x1
  44b3bc:	str	w8, [x19, #308]
  44b3c0:	b	44a920 <feof@plt+0x47f50>
  44b3c4:	add	w8, w8, #0x1
  44b3c8:	str	w8, [x22, #4]
  44b3cc:	ldr	x8, [x19, #328]
  44b3d0:	add	w9, w9, #0x1
  44b3d4:	str	w9, [x19, #308]
  44b3d8:	add	x9, sp, #0x10
  44b3dc:	mov	x0, x19
  44b3e0:	mov	w1, w20
  44b3e4:	mov	x2, x22
  44b3e8:	stp	x22, x8, [sp, #16]
  44b3ec:	str	x9, [x19, #328]
  44b3f0:	bl	445750 <feof@plt+0x42d80>
  44b3f4:	ldr	x8, [sp, #24]
  44b3f8:	str	x8, [x19, #328]
  44b3fc:	ldr	w8, [x22, #4]
  44b400:	sub	w8, w8, #0x1
  44b404:	str	w8, [x22, #4]
  44b408:	ldr	w8, [x19, #308]
  44b40c:	sub	w8, w8, #0x1
  44b410:	str	w8, [x19, #308]
  44b414:	b	44b230 <feof@plt+0x48860>
  44b418:	add	w8, w8, #0x1
  44b41c:	str	w8, [x23, #4]
  44b420:	ldr	x8, [x19, #328]
  44b424:	add	w9, w9, #0x1
  44b428:	str	w9, [x19, #308]
  44b42c:	add	x9, sp, #0x10
  44b430:	mov	x0, x19
  44b434:	mov	w1, w20
  44b438:	mov	x2, x23
  44b43c:	stp	x23, x8, [sp, #16]
  44b440:	str	x9, [x19, #328]
  44b444:	bl	445750 <feof@plt+0x42d80>
  44b448:	ldr	x8, [sp, #24]
  44b44c:	str	x8, [x19, #328]
  44b450:	ldr	w8, [x23, #4]
  44b454:	sub	w8, w8, #0x1
  44b458:	str	w8, [x23, #4]
  44b45c:	ldr	w8, [x19, #308]
  44b460:	sub	w8, w8, #0x1
  44b464:	str	w8, [x19, #308]
  44b468:	ldr	x8, [x19, #256]
  44b46c:	cmp	x8, #0xff
  44b470:	b.ne	44b49c <feof@plt+0x48acc>  // b.any
  44b474:	ldp	x8, x2, [x19, #272]
  44b478:	mov	w1, #0xff                  	// #255
  44b47c:	mov	x0, x19
  44b480:	strb	wzr, [x19, #255]
  44b484:	blr	x8
  44b488:	ldr	x9, [x19, #320]
  44b48c:	mov	x8, xzr
  44b490:	str	xzr, [x19, #256]
  44b494:	add	x9, x9, #0x1
  44b498:	str	x9, [x19, #320]
  44b49c:	add	x9, x8, #0x1
  44b4a0:	mov	w10, #0x29                  	// #41
  44b4a4:	str	x9, [x19, #256]
  44b4a8:	strb	w10, [x19, x8]
  44b4ac:	strb	w10, [x19, #264]
  44b4b0:	ldr	x8, [x19, #256]
  44b4b4:	cmp	x8, #0xff
  44b4b8:	b.ne	44b4e4 <feof@plt+0x48b14>  // b.any
  44b4bc:	ldp	x8, x2, [x19, #272]
  44b4c0:	mov	w1, #0xff                  	// #255
  44b4c4:	mov	x0, x19
  44b4c8:	strb	wzr, [x19, #255]
  44b4cc:	blr	x8
  44b4d0:	ldr	x9, [x19, #320]
  44b4d4:	mov	x8, xzr
  44b4d8:	str	xzr, [x19, #256]
  44b4dc:	add	x9, x9, #0x1
  44b4e0:	str	x9, [x19, #320]
  44b4e4:	add	x9, x8, #0x1
  44b4e8:	mov	w10, #0x20                  	// #32
  44b4ec:	str	x9, [x19, #256]
  44b4f0:	strb	w10, [x19, x8]
  44b4f4:	strb	w10, [x19, #264]
  44b4f8:	cbz	x22, 44b514 <feof@plt+0x48b44>
  44b4fc:	ldr	w8, [x22, #4]
  44b500:	cmp	w8, #0x1
  44b504:	b.gt	44b514 <feof@plt+0x48b44>
  44b508:	ldr	w9, [x19, #308]
  44b50c:	cmp	w9, #0x401
  44b510:	b.lt	44b524 <feof@plt+0x48b54>  // b.tstop
  44b514:	mov	w8, #0x1                   	// #1
  44b518:	str	w8, [x25]
  44b51c:	cbnz	x21, 44b978 <feof@plt+0x48fa8>
  44b520:	b	447e5c <feof@plt+0x4548c>
  44b524:	add	w8, w8, #0x1
  44b528:	str	w8, [x22, #4]
  44b52c:	ldr	x8, [x19, #328]
  44b530:	add	w9, w9, #0x1
  44b534:	str	w9, [x19, #308]
  44b538:	add	x9, sp, #0x10
  44b53c:	mov	x0, x19
  44b540:	mov	w1, w20
  44b544:	mov	x2, x22
  44b548:	stp	x22, x8, [sp, #16]
  44b54c:	str	x9, [x19, #328]
  44b550:	bl	445750 <feof@plt+0x42d80>
  44b554:	ldr	x8, [sp, #24]
  44b558:	str	x8, [x19, #328]
  44b55c:	ldr	w8, [x22, #4]
  44b560:	sub	w8, w8, #0x1
  44b564:	str	w8, [x22, #4]
  44b568:	ldr	w8, [x19, #308]
  44b56c:	sub	w8, w8, #0x1
  44b570:	str	w8, [x19, #308]
  44b574:	cbnz	x21, 44b978 <feof@plt+0x48fa8>
  44b578:	b	447e5c <feof@plt+0x4548c>
  44b57c:	add	w8, w8, #0x1
  44b580:	str	w8, [x23, #4]
  44b584:	ldr	x8, [x19, #328]
  44b588:	add	w9, w9, #0x1
  44b58c:	str	w9, [x19, #308]
  44b590:	add	x9, sp, #0x10
  44b594:	mov	x0, x19
  44b598:	mov	w1, w20
  44b59c:	mov	x2, x23
  44b5a0:	stp	x23, x8, [sp, #16]
  44b5a4:	str	x9, [x19, #328]
  44b5a8:	bl	445750 <feof@plt+0x42d80>
  44b5ac:	ldr	x8, [sp, #24]
  44b5b0:	str	x8, [x19, #328]
  44b5b4:	ldr	w8, [x23, #4]
  44b5b8:	sub	w8, w8, #0x1
  44b5bc:	str	w8, [x23, #4]
  44b5c0:	ldr	w8, [x19, #308]
  44b5c4:	sub	w8, w8, #0x1
  44b5c8:	str	w8, [x19, #308]
  44b5cc:	ldr	x8, [x19, #256]
  44b5d0:	cmp	x8, #0xff
  44b5d4:	b.ne	44b600 <feof@plt+0x48c30>  // b.any
  44b5d8:	ldp	x8, x2, [x19, #272]
  44b5dc:	mov	w1, #0xff                  	// #255
  44b5e0:	mov	x0, x19
  44b5e4:	strb	wzr, [x19, #255]
  44b5e8:	blr	x8
  44b5ec:	ldr	x9, [x19, #320]
  44b5f0:	mov	x8, xzr
  44b5f4:	str	xzr, [x19, #256]
  44b5f8:	add	x9, x9, #0x1
  44b5fc:	str	x9, [x19, #320]
  44b600:	add	x9, x8, #0x1
  44b604:	mov	w10, #0x29                  	// #41
  44b608:	str	x9, [x19, #256]
  44b60c:	strb	w10, [x19, x8]
  44b610:	strb	w10, [x19, #264]
  44b614:	ldr	w8, [x24]
  44b618:	cmp	w8, #0x32
  44b61c:	b.ne	44b68c <feof@plt+0x48cbc>  // b.any
  44b620:	ldr	x8, [x24, #8]
  44b624:	ldrsw	x23, [x8, #16]
  44b628:	cbz	w23, 44b700 <feof@plt+0x48d30>
  44b62c:	ldr	x24, [x8, #8]
  44b630:	b	44b650 <feof@plt+0x48c80>
  44b634:	add	x9, x8, #0x1
  44b638:	subs	x23, x23, #0x1
  44b63c:	add	x24, x24, #0x1
  44b640:	str	x9, [x19, #256]
  44b644:	strb	w26, [x19, x8]
  44b648:	strb	w26, [x19, #264]
  44b64c:	b.eq	44b700 <feof@plt+0x48d30>  // b.none
  44b650:	ldr	x8, [x19, #256]
  44b654:	ldrb	w26, [x24]
  44b658:	cmp	x8, #0xff
  44b65c:	b.ne	44b634 <feof@plt+0x48c64>  // b.any
  44b660:	ldp	x8, x2, [x19, #272]
  44b664:	mov	w1, #0xff                  	// #255
  44b668:	mov	x0, x19
  44b66c:	strb	wzr, [x19, #255]
  44b670:	blr	x8
  44b674:	ldr	x9, [x19, #320]
  44b678:	mov	x8, xzr
  44b67c:	str	xzr, [x19, #256]
  44b680:	add	x9, x9, #0x1
  44b684:	str	x9, [x19, #320]
  44b688:	b	44b634 <feof@plt+0x48c64>
  44b68c:	ldr	w8, [x24, #4]
  44b690:	cmp	w8, #0x1
  44b694:	b.gt	44b6a4 <feof@plt+0x48cd4>
  44b698:	ldr	w9, [x19, #308]
  44b69c:	cmp	w9, #0x401
  44b6a0:	b.lt	44b6b0 <feof@plt+0x48ce0>  // b.tstop
  44b6a4:	mov	w8, #0x1                   	// #1
  44b6a8:	str	w8, [x25]
  44b6ac:	b	44b700 <feof@plt+0x48d30>
  44b6b0:	add	w8, w8, #0x1
  44b6b4:	str	w8, [x24, #4]
  44b6b8:	ldr	x8, [x19, #328]
  44b6bc:	add	w9, w9, #0x1
  44b6c0:	str	w9, [x19, #308]
  44b6c4:	add	x9, sp, #0x10
  44b6c8:	mov	x0, x19
  44b6cc:	mov	w1, w20
  44b6d0:	mov	x2, x24
  44b6d4:	stp	x24, x8, [sp, #16]
  44b6d8:	str	x9, [x19, #328]
  44b6dc:	bl	445750 <feof@plt+0x42d80>
  44b6e0:	ldr	x8, [sp, #24]
  44b6e4:	str	x8, [x19, #328]
  44b6e8:	ldr	w8, [x24, #4]
  44b6ec:	sub	w8, w8, #0x1
  44b6f0:	str	w8, [x24, #4]
  44b6f4:	ldr	w8, [x19, #308]
  44b6f8:	sub	w8, w8, #0x1
  44b6fc:	str	w8, [x19, #308]
  44b700:	ldr	w8, [x22]
  44b704:	cmp	w8, #0x31
  44b708:	b.hi	44b748 <feof@plt+0x48d78>  // b.pmore
  44b70c:	mov	w9, #0x1                   	// #1
  44b710:	lsl	x8, x9, x8
  44b714:	mov	x9, #0x43                  	// #67
  44b718:	movk	x9, #0x2, lsl #48
  44b71c:	tst	x8, x9
  44b720:	b.eq	44b748 <feof@plt+0x48d78>  // b.none
  44b724:	ldr	w8, [x22, #4]
  44b728:	cmp	w8, #0x1
  44b72c:	b.gt	44b73c <feof@plt+0x48d6c>
  44b730:	ldr	w9, [x19, #308]
  44b734:	cmp	w9, #0x401
  44b738:	b.lt	44b7b4 <feof@plt+0x48de4>  // b.tstop
  44b73c:	mov	w8, #0x1                   	// #1
  44b740:	str	w8, [x25]
  44b744:	b	44b8a0 <feof@plt+0x48ed0>
  44b748:	ldr	x8, [x19, #256]
  44b74c:	cmp	x8, #0xff
  44b750:	b.ne	44b77c <feof@plt+0x48dac>  // b.any
  44b754:	ldp	x8, x2, [x19, #272]
  44b758:	mov	w1, #0xff                  	// #255
  44b75c:	mov	x0, x19
  44b760:	strb	wzr, [x19, #255]
  44b764:	blr	x8
  44b768:	ldr	x9, [x19, #320]
  44b76c:	mov	x8, xzr
  44b770:	str	xzr, [x19, #256]
  44b774:	add	x9, x9, #0x1
  44b778:	str	x9, [x19, #320]
  44b77c:	add	x9, x8, #0x1
  44b780:	mov	w10, #0x28                  	// #40
  44b784:	str	x9, [x19, #256]
  44b788:	strb	w10, [x19, x8]
  44b78c:	strb	w10, [x19, #264]
  44b790:	ldr	w8, [x22, #4]
  44b794:	cmp	w8, #0x1
  44b798:	b.gt	44b7a8 <feof@plt+0x48dd8>
  44b79c:	ldr	w9, [x19, #308]
  44b7a0:	cmp	w9, #0x401
  44b7a4:	b.lt	44b808 <feof@plt+0x48e38>  // b.tstop
  44b7a8:	mov	w8, #0x1                   	// #1
  44b7ac:	str	w8, [x25]
  44b7b0:	b	44b858 <feof@plt+0x48e88>
  44b7b4:	add	w8, w8, #0x1
  44b7b8:	str	w8, [x22, #4]
  44b7bc:	ldr	x8, [x19, #328]
  44b7c0:	add	w9, w9, #0x1
  44b7c4:	str	w9, [x19, #308]
  44b7c8:	add	x9, sp, #0x10
  44b7cc:	mov	x0, x19
  44b7d0:	mov	w1, w20
  44b7d4:	mov	x2, x22
  44b7d8:	stp	x22, x8, [sp, #16]
  44b7dc:	str	x9, [x19, #328]
  44b7e0:	bl	445750 <feof@plt+0x42d80>
  44b7e4:	ldr	x8, [sp, #24]
  44b7e8:	str	x8, [x19, #328]
  44b7ec:	ldr	w8, [x22, #4]
  44b7f0:	sub	w8, w8, #0x1
  44b7f4:	str	w8, [x22, #4]
  44b7f8:	ldr	w8, [x19, #308]
  44b7fc:	sub	w8, w8, #0x1
  44b800:	str	w8, [x19, #308]
  44b804:	b	44b8a0 <feof@plt+0x48ed0>
  44b808:	add	w8, w8, #0x1
  44b80c:	str	w8, [x22, #4]
  44b810:	ldr	x8, [x19, #328]
  44b814:	add	w9, w9, #0x1
  44b818:	str	w9, [x19, #308]
  44b81c:	add	x9, sp, #0x10
  44b820:	mov	x0, x19
  44b824:	mov	w1, w20
  44b828:	mov	x2, x22
  44b82c:	stp	x22, x8, [sp, #16]
  44b830:	str	x9, [x19, #328]
  44b834:	bl	445750 <feof@plt+0x42d80>
  44b838:	ldr	x8, [sp, #24]
  44b83c:	str	x8, [x19, #328]
  44b840:	ldr	w8, [x22, #4]
  44b844:	sub	w8, w8, #0x1
  44b848:	str	w8, [x22, #4]
  44b84c:	ldr	w8, [x19, #308]
  44b850:	sub	w8, w8, #0x1
  44b854:	str	w8, [x19, #308]
  44b858:	ldr	x8, [x19, #256]
  44b85c:	cmp	x8, #0xff
  44b860:	b.ne	44b88c <feof@plt+0x48ebc>  // b.any
  44b864:	ldp	x8, x2, [x19, #272]
  44b868:	mov	w1, #0xff                  	// #255
  44b86c:	mov	x0, x19
  44b870:	strb	wzr, [x19, #255]
  44b874:	blr	x8
  44b878:	ldr	x9, [x19, #320]
  44b87c:	mov	x8, xzr
  44b880:	str	xzr, [x19, #256]
  44b884:	add	x9, x9, #0x1
  44b888:	str	x9, [x19, #320]
  44b88c:	add	x9, x8, #0x1
  44b890:	mov	w10, #0x29                  	// #41
  44b894:	str	x9, [x19, #256]
  44b898:	strb	w10, [x19, x8]
  44b89c:	strb	w10, [x19, #264]
  44b8a0:	ldr	x8, [x19, #256]
  44b8a4:	cmp	x8, #0xff
  44b8a8:	b.ne	44b8d4 <feof@plt+0x48f04>  // b.any
  44b8ac:	ldp	x8, x2, [x19, #272]
  44b8b0:	mov	w1, #0xff                  	// #255
  44b8b4:	mov	x0, x19
  44b8b8:	strb	wzr, [x19, #255]
  44b8bc:	blr	x8
  44b8c0:	ldr	x9, [x19, #320]
  44b8c4:	mov	x8, xzr
  44b8c8:	str	xzr, [x19, #256]
  44b8cc:	add	x9, x9, #0x1
  44b8d0:	str	x9, [x19, #320]
  44b8d4:	add	x9, x8, #0x1
  44b8d8:	mov	w10, #0x20                  	// #32
  44b8dc:	str	x9, [x19, #256]
  44b8e0:	strb	w10, [x19, x8]
  44b8e4:	ldr	x8, [x19, #256]
  44b8e8:	strb	w10, [x19, #264]
  44b8ec:	cmp	x8, #0xff
  44b8f0:	b.ne	44b91c <feof@plt+0x48f4c>  // b.any
  44b8f4:	ldp	x8, x2, [x19, #272]
  44b8f8:	mov	w1, #0xff                  	// #255
  44b8fc:	mov	x0, x19
  44b900:	strb	wzr, [x19, #255]
  44b904:	blr	x8
  44b908:	ldr	x9, [x19, #320]
  44b90c:	mov	x8, xzr
  44b910:	str	xzr, [x19, #256]
  44b914:	add	x9, x9, #0x1
  44b918:	str	x9, [x19, #320]
  44b91c:	add	x9, x8, #0x1
  44b920:	mov	w10, #0x3a                  	// #58
  44b924:	str	x9, [x19, #256]
  44b928:	strb	w10, [x19, x8]
  44b92c:	ldr	x8, [x19, #256]
  44b930:	strb	w10, [x19, #264]
  44b934:	cmp	x8, #0xff
  44b938:	b.ne	44b964 <feof@plt+0x48f94>  // b.any
  44b93c:	ldp	x8, x2, [x19, #272]
  44b940:	mov	w1, #0xff                  	// #255
  44b944:	mov	x0, x19
  44b948:	strb	wzr, [x19, #255]
  44b94c:	blr	x8
  44b950:	ldr	x9, [x19, #320]
  44b954:	mov	x8, xzr
  44b958:	str	xzr, [x19, #256]
  44b95c:	add	x9, x9, #0x1
  44b960:	str	x9, [x19, #320]
  44b964:	add	x9, x8, #0x1
  44b968:	mov	w10, #0x20                  	// #32
  44b96c:	str	x9, [x19, #256]
  44b970:	strb	w10, [x19, x8]
  44b974:	strb	w10, [x19, #264]
  44b978:	ldr	w8, [x21]
  44b97c:	cmp	w8, #0x31
  44b980:	b.hi	44b99c <feof@plt+0x48fcc>  // b.pmore
  44b984:	mov	w9, #0x1                   	// #1
  44b988:	lsl	x8, x9, x8
  44b98c:	mov	x9, #0x43                  	// #67
  44b990:	movk	x9, #0x2, lsl #48
  44b994:	tst	x8, x9
  44b998:	b.ne	447e3c <feof@plt+0x4546c>  // b.any
  44b99c:	ldr	x8, [x19, #256]
  44b9a0:	cmp	x8, #0xff
  44b9a4:	b.ne	44b9d0 <feof@plt+0x49000>  // b.any
  44b9a8:	ldp	x8, x2, [x19, #272]
  44b9ac:	mov	w1, #0xff                  	// #255
  44b9b0:	mov	x0, x19
  44b9b4:	strb	wzr, [x19, #255]
  44b9b8:	blr	x8
  44b9bc:	ldr	x9, [x19, #320]
  44b9c0:	mov	x8, xzr
  44b9c4:	str	xzr, [x19, #256]
  44b9c8:	add	x9, x9, #0x1
  44b9cc:	str	x9, [x19, #320]
  44b9d0:	add	x9, x8, #0x1
  44b9d4:	mov	w10, #0x28                  	// #40
  44b9d8:	str	x9, [x19, #256]
  44b9dc:	strb	w10, [x19, x8]
  44b9e0:	strb	w10, [x19, #264]
  44b9e4:	b	448114 <feof@plt+0x45744>
  44b9e8:	sub	sp, sp, #0x50
  44b9ec:	stp	x29, x30, [sp, #16]
  44b9f0:	stp	x24, x23, [sp, #32]
  44b9f4:	stp	x22, x21, [sp, #48]
  44b9f8:	stp	x20, x19, [sp, #64]
  44b9fc:	ldr	w8, [x2]
  44ba00:	mov	x21, x2
  44ba04:	mov	w20, w1
  44ba08:	mov	x19, x0
  44ba0c:	sub	w8, w8, #0x3
  44ba10:	cmp	w8, #0x4d
  44ba14:	add	x29, sp, #0x10
  44ba18:	b.hi	44be68 <feof@plt+0x49498>  // b.pmore
  44ba1c:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  44ba20:	add	x9, x9, #0x3b4
  44ba24:	adr	x10, 44ba34 <feof@plt+0x49064>
  44ba28:	ldrh	w11, [x9, x8, lsl #1]
  44ba2c:	add	x10, x10, x11, lsl #2
  44ba30:	br	x10
  44ba34:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x10a68>
  44ba38:	mov	x20, xzr
  44ba3c:	add	x21, x21, #0x68b
  44ba40:	b	44ba60 <feof@plt+0x49090>
  44ba44:	add	x20, x20, #0x1
  44ba48:	add	x9, x8, #0x1
  44ba4c:	cmp	x20, #0x9
  44ba50:	str	x9, [x19, #256]
  44ba54:	strb	w22, [x19, x8]
  44ba58:	strb	w22, [x19, #264]
  44ba5c:	b.eq	44c46c <feof@plt+0x49a9c>  // b.none
  44ba60:	ldr	x8, [x19, #256]
  44ba64:	ldrb	w22, [x21, x20]
  44ba68:	cmp	x8, #0xff
  44ba6c:	b.ne	44ba44 <feof@plt+0x49074>  // b.any
  44ba70:	ldp	x8, x2, [x19, #272]
  44ba74:	mov	w1, #0xff                  	// #255
  44ba78:	mov	x0, x19
  44ba7c:	strb	wzr, [x19, #255]
  44ba80:	blr	x8
  44ba84:	ldr	x9, [x19, #320]
  44ba88:	mov	x8, xzr
  44ba8c:	str	xzr, [x19, #256]
  44ba90:	add	x9, x9, #0x1
  44ba94:	str	x9, [x19, #320]
  44ba98:	b	44ba44 <feof@plt+0x49074>
  44ba9c:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x10a68>
  44baa0:	mov	x20, xzr
  44baa4:	add	x21, x21, #0x695
  44baa8:	b	44bac8 <feof@plt+0x490f8>
  44baac:	add	x20, x20, #0x1
  44bab0:	add	x9, x8, #0x1
  44bab4:	cmp	x20, #0x9
  44bab8:	str	x9, [x19, #256]
  44babc:	strb	w22, [x19, x8]
  44bac0:	strb	w22, [x19, #264]
  44bac4:	b.eq	44c46c <feof@plt+0x49a9c>  // b.none
  44bac8:	ldr	x8, [x19, #256]
  44bacc:	ldrb	w22, [x21, x20]
  44bad0:	cmp	x8, #0xff
  44bad4:	b.ne	44baac <feof@plt+0x490dc>  // b.any
  44bad8:	ldp	x8, x2, [x19, #272]
  44badc:	mov	w1, #0xff                  	// #255
  44bae0:	mov	x0, x19
  44bae4:	strb	wzr, [x19, #255]
  44bae8:	blr	x8
  44baec:	ldr	x9, [x19, #320]
  44baf0:	mov	x8, xzr
  44baf4:	str	xzr, [x19, #256]
  44baf8:	add	x9, x9, #0x1
  44bafc:	str	x9, [x19, #320]
  44bb00:	b	44baac <feof@plt+0x490dc>
  44bb04:	ldr	x8, [x19, #256]
  44bb08:	cmp	x8, #0xff
  44bb0c:	b.ne	44bb38 <feof@plt+0x49168>  // b.any
  44bb10:	ldp	x8, x2, [x19, #272]
  44bb14:	mov	w1, #0xff                  	// #255
  44bb18:	mov	x0, x19
  44bb1c:	strb	wzr, [x19, #255]
  44bb20:	blr	x8
  44bb24:	ldr	x9, [x19, #320]
  44bb28:	mov	x8, xzr
  44bb2c:	str	xzr, [x19, #256]
  44bb30:	add	x9, x9, #0x1
  44bb34:	str	x9, [x19, #320]
  44bb38:	add	x9, x8, #0x1
  44bb3c:	mov	w10, #0x20                  	// #32
  44bb40:	str	x9, [x19, #256]
  44bb44:	strb	w10, [x19, x8]
  44bb48:	ldr	x8, [x19, #256]
  44bb4c:	strb	w10, [x19, #264]
  44bb50:	cmp	x8, #0xff
  44bb54:	b.ne	44bb80 <feof@plt+0x491b0>  // b.any
  44bb58:	ldp	x8, x2, [x19, #272]
  44bb5c:	mov	w1, #0xff                  	// #255
  44bb60:	mov	x0, x19
  44bb64:	strb	wzr, [x19, #255]
  44bb68:	blr	x8
  44bb6c:	ldr	x9, [x19, #320]
  44bb70:	mov	x8, xzr
  44bb74:	str	xzr, [x19, #256]
  44bb78:	add	x9, x9, #0x1
  44bb7c:	str	x9, [x19, #320]
  44bb80:	add	x9, x8, #0x1
  44bb84:	mov	w10, #0x63                  	// #99
  44bb88:	str	x9, [x19, #256]
  44bb8c:	strb	w10, [x19, x8]
  44bb90:	ldr	x8, [x19, #256]
  44bb94:	strb	w10, [x19, #264]
  44bb98:	cmp	x8, #0xff
  44bb9c:	b.ne	44bbc8 <feof@plt+0x491f8>  // b.any
  44bba0:	ldp	x8, x2, [x19, #272]
  44bba4:	mov	w1, #0xff                  	// #255
  44bba8:	mov	x0, x19
  44bbac:	strb	wzr, [x19, #255]
  44bbb0:	blr	x8
  44bbb4:	ldr	x9, [x19, #320]
  44bbb8:	mov	x8, xzr
  44bbbc:	str	xzr, [x19, #256]
  44bbc0:	add	x9, x9, #0x1
  44bbc4:	str	x9, [x19, #320]
  44bbc8:	add	x9, x8, #0x1
  44bbcc:	mov	w10, #0x6f                  	// #111
  44bbd0:	str	x9, [x19, #256]
  44bbd4:	strb	w10, [x19, x8]
  44bbd8:	ldr	x8, [x19, #256]
  44bbdc:	strb	w10, [x19, #264]
  44bbe0:	cmp	x8, #0xff
  44bbe4:	b.ne	44bc10 <feof@plt+0x49240>  // b.any
  44bbe8:	ldp	x8, x2, [x19, #272]
  44bbec:	mov	w1, #0xff                  	// #255
  44bbf0:	mov	x0, x19
  44bbf4:	strb	wzr, [x19, #255]
  44bbf8:	blr	x8
  44bbfc:	ldr	x9, [x19, #320]
  44bc00:	mov	x8, xzr
  44bc04:	str	xzr, [x19, #256]
  44bc08:	add	x9, x9, #0x1
  44bc0c:	str	x9, [x19, #320]
  44bc10:	add	x9, x8, #0x1
  44bc14:	mov	w10, #0x6e                  	// #110
  44bc18:	str	x9, [x19, #256]
  44bc1c:	strb	w10, [x19, x8]
  44bc20:	ldr	x8, [x19, #256]
  44bc24:	strb	w10, [x19, #264]
  44bc28:	cmp	x8, #0xff
  44bc2c:	b.ne	44bc58 <feof@plt+0x49288>  // b.any
  44bc30:	ldp	x8, x2, [x19, #272]
  44bc34:	mov	w1, #0xff                  	// #255
  44bc38:	mov	x0, x19
  44bc3c:	strb	wzr, [x19, #255]
  44bc40:	blr	x8
  44bc44:	ldr	x9, [x19, #320]
  44bc48:	mov	x8, xzr
  44bc4c:	str	xzr, [x19, #256]
  44bc50:	add	x9, x9, #0x1
  44bc54:	str	x9, [x19, #320]
  44bc58:	add	x9, x8, #0x1
  44bc5c:	mov	w10, #0x73                  	// #115
  44bc60:	str	x9, [x19, #256]
  44bc64:	strb	w10, [x19, x8]
  44bc68:	ldr	x8, [x19, #256]
  44bc6c:	strb	w10, [x19, #264]
  44bc70:	cmp	x8, #0xff
  44bc74:	b.ne	44bca0 <feof@plt+0x492d0>  // b.any
  44bc78:	ldp	x8, x2, [x19, #272]
  44bc7c:	mov	w1, #0xff                  	// #255
  44bc80:	mov	x0, x19
  44bc84:	strb	wzr, [x19, #255]
  44bc88:	blr	x8
  44bc8c:	ldr	x9, [x19, #320]
  44bc90:	mov	x8, xzr
  44bc94:	str	xzr, [x19, #256]
  44bc98:	add	x9, x9, #0x1
  44bc9c:	str	x9, [x19, #320]
  44bca0:	add	x9, x8, #0x1
  44bca4:	mov	w10, #0x74                  	// #116
  44bca8:	b	44c460 <feof@plt+0x49a90>
  44bcac:	ldr	x21, [x21, #8]
  44bcb0:	cbnz	x21, 44be68 <feof@plt+0x49498>
  44bcb4:	b	44be80 <feof@plt+0x494b0>
  44bcb8:	ldr	x8, [x19, #256]
  44bcbc:	cmp	x8, #0xff
  44bcc0:	b.ne	44bcec <feof@plt+0x4931c>  // b.any
  44bcc4:	ldp	x8, x2, [x19, #272]
  44bcc8:	mov	w1, #0xff                  	// #255
  44bccc:	mov	x0, x19
  44bcd0:	strb	wzr, [x19, #255]
  44bcd4:	blr	x8
  44bcd8:	ldr	x9, [x19, #320]
  44bcdc:	mov	x8, xzr
  44bce0:	str	xzr, [x19, #256]
  44bce4:	add	x9, x9, #0x1
  44bce8:	str	x9, [x19, #320]
  44bcec:	add	x9, x8, #0x1
  44bcf0:	mov	w10, #0x20                  	// #32
  44bcf4:	str	x9, [x19, #256]
  44bcf8:	strb	w10, [x19, x8]
  44bcfc:	strb	w10, [x19, #264]
  44bd00:	ldr	x8, [x19, #256]
  44bd04:	cmp	x8, #0xff
  44bd08:	b.ne	44bd34 <feof@plt+0x49364>  // b.any
  44bd0c:	ldp	x8, x2, [x19, #272]
  44bd10:	mov	w1, #0xff                  	// #255
  44bd14:	mov	x0, x19
  44bd18:	strb	wzr, [x19, #255]
  44bd1c:	blr	x8
  44bd20:	ldr	x9, [x19, #320]
  44bd24:	mov	x8, xzr
  44bd28:	str	xzr, [x19, #256]
  44bd2c:	add	x9, x9, #0x1
  44bd30:	str	x9, [x19, #320]
  44bd34:	add	x9, x8, #0x1
  44bd38:	mov	w10, #0x26                  	// #38
  44bd3c:	b	44c460 <feof@plt+0x49a90>
  44bd40:	ldr	x8, [x19, #256]
  44bd44:	cmp	x8, #0xff
  44bd48:	b.ne	44bd74 <feof@plt+0x493a4>  // b.any
  44bd4c:	ldp	x8, x2, [x19, #272]
  44bd50:	mov	w1, #0xff                  	// #255
  44bd54:	mov	x0, x19
  44bd58:	strb	wzr, [x19, #255]
  44bd5c:	blr	x8
  44bd60:	ldr	x9, [x19, #320]
  44bd64:	mov	x8, xzr
  44bd68:	str	xzr, [x19, #256]
  44bd6c:	add	x9, x9, #0x1
  44bd70:	str	x9, [x19, #320]
  44bd74:	add	x9, x8, #0x1
  44bd78:	mov	w10, #0x20                  	// #32
  44bd7c:	str	x9, [x19, #256]
  44bd80:	strb	w10, [x19, x8]
  44bd84:	strb	w10, [x19, #264]
  44bd88:	ldr	x8, [x19, #256]
  44bd8c:	cmp	x8, #0xff
  44bd90:	b.ne	44bdbc <feof@plt+0x493ec>  // b.any
  44bd94:	ldp	x8, x2, [x19, #272]
  44bd98:	mov	w1, #0xff                  	// #255
  44bd9c:	mov	x0, x19
  44bda0:	strb	wzr, [x19, #255]
  44bda4:	blr	x8
  44bda8:	ldr	x9, [x19, #320]
  44bdac:	mov	x8, xzr
  44bdb0:	str	xzr, [x19, #256]
  44bdb4:	add	x9, x9, #0x1
  44bdb8:	str	x9, [x19, #320]
  44bdbc:	add	x9, x8, #0x1
  44bdc0:	mov	w20, #0x26                  	// #38
  44bdc4:	str	x9, [x19, #256]
  44bdc8:	strb	w20, [x19, x8]
  44bdcc:	ldr	x8, [x19, #256]
  44bdd0:	strb	w20, [x19, #264]
  44bdd4:	cmp	x8, #0xff
  44bdd8:	b.ne	44be04 <feof@plt+0x49434>  // b.any
  44bddc:	ldp	x8, x2, [x19, #272]
  44bde0:	mov	w1, #0xff                  	// #255
  44bde4:	mov	x0, x19
  44bde8:	strb	wzr, [x19, #255]
  44bdec:	blr	x8
  44bdf0:	ldr	x9, [x19, #320]
  44bdf4:	mov	x8, xzr
  44bdf8:	str	xzr, [x19, #256]
  44bdfc:	add	x9, x9, #0x1
  44be00:	str	x9, [x19, #320]
  44be04:	add	x9, x8, #0x1
  44be08:	str	x9, [x19, #256]
  44be0c:	strb	w20, [x19, x8]
  44be10:	strb	w20, [x19, #264]
  44be14:	b	44c46c <feof@plt+0x49a9c>
  44be18:	ldr	x8, [x19, #256]
  44be1c:	cmp	x8, #0xff
  44be20:	b.ne	44be4c <feof@plt+0x4947c>  // b.any
  44be24:	ldp	x8, x2, [x19, #272]
  44be28:	mov	w1, #0xff                  	// #255
  44be2c:	mov	x0, x19
  44be30:	strb	wzr, [x19, #255]
  44be34:	blr	x8
  44be38:	ldr	x9, [x19, #320]
  44be3c:	mov	x8, xzr
  44be40:	str	xzr, [x19, #256]
  44be44:	add	x9, x9, #0x1
  44be48:	str	x9, [x19, #320]
  44be4c:	add	x9, x8, #0x1
  44be50:	mov	w10, #0x20                  	// #32
  44be54:	str	x9, [x19, #256]
  44be58:	strb	w10, [x19, x8]
  44be5c:	strb	w10, [x19, #264]
  44be60:	ldr	x21, [x21, #16]
  44be64:	cbz	x21, 44be80 <feof@plt+0x494b0>
  44be68:	ldr	w8, [x21, #4]
  44be6c:	cmp	w8, #0x1
  44be70:	b.gt	44be80 <feof@plt+0x494b0>
  44be74:	ldr	w9, [x19, #308]
  44be78:	cmp	w9, #0x401
  44be7c:	b.lt	44c484 <feof@plt+0x49ab4>  // b.tstop
  44be80:	mov	w8, #0x1                   	// #1
  44be84:	str	w8, [x19, #304]
  44be88:	b	44c46c <feof@plt+0x49a9c>
  44be8c:	tbnz	w20, #2, 44c46c <feof@plt+0x49a9c>
  44be90:	ldr	x8, [x19, #256]
  44be94:	cmp	x8, #0xff
  44be98:	b.eq	44c084 <feof@plt+0x496b4>  // b.none
  44be9c:	b	44c0ac <feof@plt+0x496dc>
  44bea0:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x10a68>
  44bea4:	mov	x20, xzr
  44bea8:	add	x21, x21, #0x6bb
  44beac:	b	44becc <feof@plt+0x494fc>
  44beb0:	add	x20, x20, #0x1
  44beb4:	add	x9, x8, #0x1
  44beb8:	cmp	x20, #0x8
  44bebc:	str	x9, [x19, #256]
  44bec0:	strb	w22, [x19, x8]
  44bec4:	strb	w22, [x19, #264]
  44bec8:	b.eq	44c46c <feof@plt+0x49a9c>  // b.none
  44becc:	ldr	x8, [x19, #256]
  44bed0:	ldrb	w22, [x21, x20]
  44bed4:	cmp	x8, #0xff
  44bed8:	b.ne	44beb0 <feof@plt+0x494e0>  // b.any
  44bedc:	ldp	x8, x2, [x19, #272]
  44bee0:	mov	w1, #0xff                  	// #255
  44bee4:	mov	x0, x19
  44bee8:	strb	wzr, [x19, #255]
  44beec:	blr	x8
  44bef0:	ldr	x9, [x19, #320]
  44bef4:	mov	x8, xzr
  44bef8:	str	xzr, [x19, #256]
  44befc:	add	x9, x9, #0x1
  44bf00:	str	x9, [x19, #320]
  44bf04:	b	44beb0 <feof@plt+0x494e0>
  44bf08:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x10a68>
  44bf0c:	mov	x20, xzr
  44bf10:	add	x21, x21, #0x6c4
  44bf14:	b	44bf34 <feof@plt+0x49564>
  44bf18:	add	x20, x20, #0x1
  44bf1c:	add	x9, x8, #0x1
  44bf20:	cmp	x20, #0xa
  44bf24:	str	x9, [x19, #256]
  44bf28:	strb	w22, [x19, x8]
  44bf2c:	strb	w22, [x19, #264]
  44bf30:	b.eq	44c46c <feof@plt+0x49a9c>  // b.none
  44bf34:	ldr	x8, [x19, #256]
  44bf38:	ldrb	w22, [x21, x20]
  44bf3c:	cmp	x8, #0xff
  44bf40:	b.ne	44bf18 <feof@plt+0x49548>  // b.any
  44bf44:	ldp	x8, x2, [x19, #272]
  44bf48:	mov	w1, #0xff                  	// #255
  44bf4c:	mov	x0, x19
  44bf50:	strb	wzr, [x19, #255]
  44bf54:	blr	x8
  44bf58:	ldr	x9, [x19, #320]
  44bf5c:	mov	x8, xzr
  44bf60:	str	xzr, [x19, #256]
  44bf64:	add	x9, x9, #0x1
  44bf68:	str	x9, [x19, #320]
  44bf6c:	b	44bf18 <feof@plt+0x49548>
  44bf70:	ldrb	w8, [x19, #264]
  44bf74:	cmp	w8, #0x28
  44bf78:	b.eq	44bfc4 <feof@plt+0x495f4>  // b.none
  44bf7c:	ldr	x8, [x19, #256]
  44bf80:	cmp	x8, #0xff
  44bf84:	b.ne	44bfb0 <feof@plt+0x495e0>  // b.any
  44bf88:	ldp	x8, x2, [x19, #272]
  44bf8c:	mov	w1, #0xff                  	// #255
  44bf90:	mov	x0, x19
  44bf94:	strb	wzr, [x19, #255]
  44bf98:	blr	x8
  44bf9c:	ldr	x9, [x19, #320]
  44bfa0:	mov	x8, xzr
  44bfa4:	str	xzr, [x19, #256]
  44bfa8:	add	x9, x9, #0x1
  44bfac:	str	x9, [x19, #320]
  44bfb0:	add	x9, x8, #0x1
  44bfb4:	mov	w10, #0x20                  	// #32
  44bfb8:	str	x9, [x19, #256]
  44bfbc:	strb	w10, [x19, x8]
  44bfc0:	strb	w10, [x19, #264]
  44bfc4:	ldr	x21, [x21, #8]
  44bfc8:	cbz	x21, 44bfe4 <feof@plt+0x49614>
  44bfcc:	ldr	w8, [x21, #4]
  44bfd0:	cmp	w8, #0x1
  44bfd4:	b.gt	44bfe4 <feof@plt+0x49614>
  44bfd8:	ldr	w9, [x19, #308]
  44bfdc:	cmp	w9, #0x401
  44bfe0:	b.lt	44c534 <feof@plt+0x49b64>  // b.tstop
  44bfe4:	mov	w8, #0x1                   	// #1
  44bfe8:	str	w8, [x19, #304]
  44bfec:	ldr	x8, [x19, #256]
  44bff0:	cmp	x8, #0xff
  44bff4:	b.ne	44c020 <feof@plt+0x49650>  // b.any
  44bff8:	ldp	x8, x2, [x19, #272]
  44bffc:	mov	w1, #0xff                  	// #255
  44c000:	mov	x0, x19
  44c004:	strb	wzr, [x19, #255]
  44c008:	blr	x8
  44c00c:	ldr	x9, [x19, #320]
  44c010:	mov	x8, xzr
  44c014:	str	xzr, [x19, #256]
  44c018:	add	x9, x9, #0x1
  44c01c:	str	x9, [x19, #320]
  44c020:	add	x9, x8, #0x1
  44c024:	mov	w20, #0x3a                  	// #58
  44c028:	str	x9, [x19, #256]
  44c02c:	strb	w20, [x19, x8]
  44c030:	ldr	x8, [x19, #256]
  44c034:	strb	w20, [x19, #264]
  44c038:	cmp	x8, #0xff
  44c03c:	b.ne	44c068 <feof@plt+0x49698>  // b.any
  44c040:	ldp	x8, x2, [x19, #272]
  44c044:	mov	w1, #0xff                  	// #255
  44c048:	mov	x0, x19
  44c04c:	strb	wzr, [x19, #255]
  44c050:	blr	x8
  44c054:	ldr	x9, [x19, #320]
  44c058:	mov	x8, xzr
  44c05c:	str	xzr, [x19, #256]
  44c060:	add	x9, x9, #0x1
  44c064:	str	x9, [x19, #320]
  44c068:	add	x9, x8, #0x1
  44c06c:	str	x9, [x19, #256]
  44c070:	strb	w20, [x19, x8]
  44c074:	ldr	x8, [x19, #256]
  44c078:	strb	w20, [x19, #264]
  44c07c:	cmp	x8, #0xff
  44c080:	b.ne	44c0ac <feof@plt+0x496dc>  // b.any
  44c084:	ldp	x8, x2, [x19, #272]
  44c088:	mov	w1, #0xff                  	// #255
  44c08c:	mov	x0, x19
  44c090:	strb	wzr, [x19, #255]
  44c094:	blr	x8
  44c098:	ldr	x9, [x19, #320]
  44c09c:	mov	x8, xzr
  44c0a0:	str	xzr, [x19, #256]
  44c0a4:	add	x9, x9, #0x1
  44c0a8:	str	x9, [x19, #320]
  44c0ac:	add	x9, x8, #0x1
  44c0b0:	mov	w10, #0x2a                  	// #42
  44c0b4:	b	44c460 <feof@plt+0x49a90>
  44c0b8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44c0bc:	mov	x22, xzr
  44c0c0:	add	x23, x23, #0x6cf
  44c0c4:	b	44c0e4 <feof@plt+0x49714>
  44c0c8:	add	x22, x22, #0x1
  44c0cc:	add	x9, x8, #0x1
  44c0d0:	cmp	x22, #0xa
  44c0d4:	str	x9, [x19, #256]
  44c0d8:	strb	w24, [x19, x8]
  44c0dc:	strb	w24, [x19, #264]
  44c0e0:	b.eq	44c3fc <feof@plt+0x49a2c>  // b.none
  44c0e4:	ldr	x8, [x19, #256]
  44c0e8:	ldrb	w24, [x23, x22]
  44c0ec:	cmp	x8, #0xff
  44c0f0:	b.ne	44c0c8 <feof@plt+0x496f8>  // b.any
  44c0f4:	ldp	x8, x2, [x19, #272]
  44c0f8:	mov	w1, #0xff                  	// #255
  44c0fc:	mov	x0, x19
  44c100:	strb	wzr, [x19, #255]
  44c104:	blr	x8
  44c108:	ldr	x9, [x19, #320]
  44c10c:	mov	x8, xzr
  44c110:	str	xzr, [x19, #256]
  44c114:	add	x9, x9, #0x1
  44c118:	str	x9, [x19, #320]
  44c11c:	b	44c0c8 <feof@plt+0x496f8>
  44c120:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x10a68>
  44c124:	mov	x20, xzr
  44c128:	add	x21, x21, #0x69f
  44c12c:	b	44c14c <feof@plt+0x4977c>
  44c130:	add	x20, x20, #0x1
  44c134:	add	x9, x8, #0x1
  44c138:	cmp	x20, #0x11
  44c13c:	str	x9, [x19, #256]
  44c140:	strb	w22, [x19, x8]
  44c144:	strb	w22, [x19, #264]
  44c148:	b.eq	44c46c <feof@plt+0x49a9c>  // b.none
  44c14c:	ldr	x8, [x19, #256]
  44c150:	ldrb	w22, [x21, x20]
  44c154:	cmp	x8, #0xff
  44c158:	b.ne	44c130 <feof@plt+0x49760>  // b.any
  44c15c:	ldp	x8, x2, [x19, #272]
  44c160:	mov	w1, #0xff                  	// #255
  44c164:	mov	x0, x19
  44c168:	strb	wzr, [x19, #255]
  44c16c:	blr	x8
  44c170:	ldr	x9, [x19, #320]
  44c174:	mov	x8, xzr
  44c178:	str	xzr, [x19, #256]
  44c17c:	add	x9, x9, #0x1
  44c180:	str	x9, [x19, #320]
  44c184:	b	44c130 <feof@plt+0x49760>
  44c188:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x10a68>
  44c18c:	mov	x22, xzr
  44c190:	add	x23, x23, #0x6b1
  44c194:	b	44c1b4 <feof@plt+0x497e4>
  44c198:	add	x22, x22, #0x1
  44c19c:	add	x9, x8, #0x1
  44c1a0:	cmp	x22, #0x9
  44c1a4:	str	x9, [x19, #256]
  44c1a8:	strb	w24, [x19, x8]
  44c1ac:	strb	w24, [x19, #264]
  44c1b0:	b.eq	44c3a0 <feof@plt+0x499d0>  // b.none
  44c1b4:	ldr	x8, [x19, #256]
  44c1b8:	ldrb	w24, [x23, x22]
  44c1bc:	cmp	x8, #0xff
  44c1c0:	b.ne	44c198 <feof@plt+0x497c8>  // b.any
  44c1c4:	ldp	x8, x2, [x19, #272]
  44c1c8:	mov	w1, #0xff                  	// #255
  44c1cc:	mov	x0, x19
  44c1d0:	strb	wzr, [x19, #255]
  44c1d4:	blr	x8
  44c1d8:	ldr	x9, [x19, #320]
  44c1dc:	mov	x8, xzr
  44c1e0:	str	xzr, [x19, #256]
  44c1e4:	add	x9, x9, #0x1
  44c1e8:	str	x9, [x19, #320]
  44c1ec:	b	44c198 <feof@plt+0x497c8>
  44c1f0:	ldr	x8, [x19, #256]
  44c1f4:	cmp	x8, #0xff
  44c1f8:	b.ne	44c224 <feof@plt+0x49854>  // b.any
  44c1fc:	ldp	x8, x2, [x19, #272]
  44c200:	mov	w1, #0xff                  	// #255
  44c204:	mov	x0, x19
  44c208:	strb	wzr, [x19, #255]
  44c20c:	blr	x8
  44c210:	ldr	x9, [x19, #320]
  44c214:	mov	x8, xzr
  44c218:	str	xzr, [x19, #256]
  44c21c:	add	x9, x9, #0x1
  44c220:	str	x9, [x19, #320]
  44c224:	add	x9, x8, #0x1
  44c228:	mov	w10, #0x20                  	// #32
  44c22c:	str	x9, [x19, #256]
  44c230:	strb	w10, [x19, x8]
  44c234:	ldr	x8, [x19, #256]
  44c238:	strb	w10, [x19, #264]
  44c23c:	cmp	x8, #0xff
  44c240:	b.ne	44c26c <feof@plt+0x4989c>  // b.any
  44c244:	ldp	x8, x2, [x19, #272]
  44c248:	mov	w1, #0xff                  	// #255
  44c24c:	mov	x0, x19
  44c250:	strb	wzr, [x19, #255]
  44c254:	blr	x8
  44c258:	ldr	x9, [x19, #320]
  44c25c:	mov	x8, xzr
  44c260:	str	xzr, [x19, #256]
  44c264:	add	x9, x9, #0x1
  44c268:	str	x9, [x19, #320]
  44c26c:	add	x9, x8, #0x1
  44c270:	mov	w10, #0x74                  	// #116
  44c274:	str	x9, [x19, #256]
  44c278:	strb	w10, [x19, x8]
  44c27c:	ldr	x8, [x19, #256]
  44c280:	strb	w10, [x19, #264]
  44c284:	cmp	x8, #0xff
  44c288:	b.ne	44c2b4 <feof@plt+0x498e4>  // b.any
  44c28c:	ldp	x8, x2, [x19, #272]
  44c290:	mov	w1, #0xff                  	// #255
  44c294:	mov	x0, x19
  44c298:	strb	wzr, [x19, #255]
  44c29c:	blr	x8
  44c2a0:	ldr	x9, [x19, #320]
  44c2a4:	mov	x8, xzr
  44c2a8:	str	xzr, [x19, #256]
  44c2ac:	add	x9, x9, #0x1
  44c2b0:	str	x9, [x19, #320]
  44c2b4:	add	x9, x8, #0x1
  44c2b8:	mov	w10, #0x68                  	// #104
  44c2bc:	str	x9, [x19, #256]
  44c2c0:	strb	w10, [x19, x8]
  44c2c4:	ldr	x8, [x19, #256]
  44c2c8:	strb	w10, [x19, #264]
  44c2cc:	cmp	x8, #0xff
  44c2d0:	b.ne	44c2fc <feof@plt+0x4992c>  // b.any
  44c2d4:	ldp	x8, x2, [x19, #272]
  44c2d8:	mov	w1, #0xff                  	// #255
  44c2dc:	mov	x0, x19
  44c2e0:	strb	wzr, [x19, #255]
  44c2e4:	blr	x8
  44c2e8:	ldr	x9, [x19, #320]
  44c2ec:	mov	x8, xzr
  44c2f0:	str	xzr, [x19, #256]
  44c2f4:	add	x9, x9, #0x1
  44c2f8:	str	x9, [x19, #320]
  44c2fc:	add	x9, x8, #0x1
  44c300:	mov	w10, #0x72                  	// #114
  44c304:	str	x9, [x19, #256]
  44c308:	strb	w10, [x19, x8]
  44c30c:	ldr	x8, [x19, #256]
  44c310:	strb	w10, [x19, #264]
  44c314:	cmp	x8, #0xff
  44c318:	b.ne	44c344 <feof@plt+0x49974>  // b.any
  44c31c:	ldp	x8, x2, [x19, #272]
  44c320:	mov	w1, #0xff                  	// #255
  44c324:	mov	x0, x19
  44c328:	strb	wzr, [x19, #255]
  44c32c:	blr	x8
  44c330:	ldr	x9, [x19, #320]
  44c334:	mov	x8, xzr
  44c338:	str	xzr, [x19, #256]
  44c33c:	add	x9, x9, #0x1
  44c340:	str	x9, [x19, #320]
  44c344:	add	x9, x8, #0x1
  44c348:	mov	w10, #0x6f                  	// #111
  44c34c:	str	x9, [x19, #256]
  44c350:	strb	w10, [x19, x8]
  44c354:	ldr	x8, [x19, #256]
  44c358:	strb	w10, [x19, #264]
  44c35c:	cmp	x8, #0xff
  44c360:	b.ne	44c38c <feof@plt+0x499bc>  // b.any
  44c364:	ldp	x8, x2, [x19, #272]
  44c368:	mov	w1, #0xff                  	// #255
  44c36c:	mov	x0, x19
  44c370:	strb	wzr, [x19, #255]
  44c374:	blr	x8
  44c378:	ldr	x9, [x19, #320]
  44c37c:	mov	x8, xzr
  44c380:	str	xzr, [x19, #256]
  44c384:	add	x9, x9, #0x1
  44c388:	str	x9, [x19, #320]
  44c38c:	add	x9, x8, #0x1
  44c390:	mov	w10, #0x77                  	// #119
  44c394:	str	x9, [x19, #256]
  44c398:	strb	w10, [x19, x8]
  44c39c:	strb	w10, [x19, #264]
  44c3a0:	ldr	x8, [x21, #16]
  44c3a4:	cbz	x8, 44c46c <feof@plt+0x49a9c>
  44c3a8:	ldr	x8, [x19, #256]
  44c3ac:	cmp	x8, #0xff
  44c3b0:	b.ne	44c3dc <feof@plt+0x49a0c>  // b.any
  44c3b4:	ldp	x8, x2, [x19, #272]
  44c3b8:	mov	w1, #0xff                  	// #255
  44c3bc:	mov	x0, x19
  44c3c0:	strb	wzr, [x19, #255]
  44c3c4:	blr	x8
  44c3c8:	ldr	x9, [x19, #320]
  44c3cc:	mov	x8, xzr
  44c3d0:	str	xzr, [x19, #256]
  44c3d4:	add	x9, x9, #0x1
  44c3d8:	str	x9, [x19, #320]
  44c3dc:	add	x9, x8, #0x1
  44c3e0:	mov	w10, #0x28                  	// #40
  44c3e4:	str	x9, [x19, #256]
  44c3e8:	strb	w10, [x19, x8]
  44c3ec:	strb	w10, [x19, #264]
  44c3f0:	ldr	x21, [x21, #16]
  44c3f4:	cbnz	x21, 44c404 <feof@plt+0x49a34>
  44c3f8:	b	44c41c <feof@plt+0x49a4c>
  44c3fc:	ldr	x21, [x21, #8]
  44c400:	cbz	x21, 44c41c <feof@plt+0x49a4c>
  44c404:	ldr	w8, [x21, #4]
  44c408:	cmp	w8, #0x1
  44c40c:	b.gt	44c41c <feof@plt+0x49a4c>
  44c410:	ldr	w9, [x19, #308]
  44c414:	cmp	w9, #0x401
  44c418:	b.lt	44c4dc <feof@plt+0x49b0c>  // b.tstop
  44c41c:	mov	w8, #0x1                   	// #1
  44c420:	str	w8, [x19, #304]
  44c424:	ldr	x8, [x19, #256]
  44c428:	cmp	x8, #0xff
  44c42c:	b.ne	44c458 <feof@plt+0x49a88>  // b.any
  44c430:	ldp	x8, x2, [x19, #272]
  44c434:	mov	w1, #0xff                  	// #255
  44c438:	mov	x0, x19
  44c43c:	strb	wzr, [x19, #255]
  44c440:	blr	x8
  44c444:	ldr	x9, [x19, #320]
  44c448:	mov	x8, xzr
  44c44c:	str	xzr, [x19, #256]
  44c450:	add	x9, x9, #0x1
  44c454:	str	x9, [x19, #320]
  44c458:	add	x9, x8, #0x1
  44c45c:	mov	w10, #0x29                  	// #41
  44c460:	str	x9, [x19, #256]
  44c464:	strb	w10, [x19, x8]
  44c468:	strb	w10, [x19, #264]
  44c46c:	ldp	x20, x19, [sp, #64]
  44c470:	ldp	x22, x21, [sp, #48]
  44c474:	ldp	x24, x23, [sp, #32]
  44c478:	ldp	x29, x30, [sp, #16]
  44c47c:	add	sp, sp, #0x50
  44c480:	ret
  44c484:	add	w8, w8, #0x1
  44c488:	add	w9, w9, #0x1
  44c48c:	str	w8, [x21, #4]
  44c490:	str	w9, [x19, #308]
  44c494:	str	x21, [sp]
  44c498:	ldr	x8, [x19, #328]
  44c49c:	mov	x9, sp
  44c4a0:	mov	x0, x19
  44c4a4:	mov	w1, w20
  44c4a8:	mov	x2, x21
  44c4ac:	str	x8, [sp, #8]
  44c4b0:	str	x9, [x19, #328]
  44c4b4:	bl	445750 <feof@plt+0x42d80>
  44c4b8:	ldr	x8, [sp, #8]
  44c4bc:	str	x8, [x19, #328]
  44c4c0:	ldr	w8, [x21, #4]
  44c4c4:	sub	w8, w8, #0x1
  44c4c8:	str	w8, [x21, #4]
  44c4cc:	ldr	w8, [x19, #308]
  44c4d0:	sub	w8, w8, #0x1
  44c4d4:	str	w8, [x19, #308]
  44c4d8:	b	44c46c <feof@plt+0x49a9c>
  44c4dc:	add	w8, w8, #0x1
  44c4e0:	add	w9, w9, #0x1
  44c4e4:	str	w8, [x21, #4]
  44c4e8:	str	w9, [x19, #308]
  44c4ec:	str	x21, [sp]
  44c4f0:	ldr	x8, [x19, #328]
  44c4f4:	mov	x9, sp
  44c4f8:	mov	x0, x19
  44c4fc:	mov	w1, w20
  44c500:	mov	x2, x21
  44c504:	str	x8, [sp, #8]
  44c508:	str	x9, [x19, #328]
  44c50c:	bl	445750 <feof@plt+0x42d80>
  44c510:	ldr	x8, [sp, #8]
  44c514:	str	x8, [x19, #328]
  44c518:	ldr	w8, [x21, #4]
  44c51c:	sub	w8, w8, #0x1
  44c520:	str	w8, [x21, #4]
  44c524:	ldr	w8, [x19, #308]
  44c528:	sub	w8, w8, #0x1
  44c52c:	str	w8, [x19, #308]
  44c530:	b	44c424 <feof@plt+0x49a54>
  44c534:	add	w8, w8, #0x1
  44c538:	str	w8, [x21, #4]
  44c53c:	ldr	x8, [x19, #328]
  44c540:	add	w9, w9, #0x1
  44c544:	str	w9, [x19, #308]
  44c548:	mov	x9, sp
  44c54c:	mov	x0, x19
  44c550:	mov	w1, w20
  44c554:	mov	x2, x21
  44c558:	stp	x21, x8, [sp]
  44c55c:	str	x9, [x19, #328]
  44c560:	bl	445750 <feof@plt+0x42d80>
  44c564:	ldr	x8, [sp, #8]
  44c568:	str	x8, [x19, #328]
  44c56c:	ldr	w8, [x21, #4]
  44c570:	sub	w8, w8, #0x1
  44c574:	str	w8, [x21, #4]
  44c578:	ldr	w8, [x19, #308]
  44c57c:	sub	w8, w8, #0x1
  44c580:	str	w8, [x19, #308]
  44c584:	b	44bfec <feof@plt+0x4961c>
  44c588:	sub	sp, sp, #0x50
  44c58c:	stp	x22, x21, [sp, #48]
  44c590:	stp	x20, x19, [sp, #64]
  44c594:	mov	x19, x3
  44c598:	mov	x22, x2
  44c59c:	mov	w21, w1
  44c5a0:	mov	x20, x0
  44c5a4:	stp	x29, x30, [sp, #16]
  44c5a8:	stp	x24, x23, [sp, #32]
  44c5ac:	add	x29, sp, #0x10
  44c5b0:	cbz	x3, 44c614 <feof@plt+0x49c44>
  44c5b4:	mov	x9, #0xe000000             	// #234881024
  44c5b8:	mov	w8, #0x1                   	// #1
  44c5bc:	movk	x9, #0x862, lsl #32
  44c5c0:	mov	x10, x19
  44c5c4:	b	44c5d0 <feof@plt+0x49c00>
  44c5c8:	ldr	x10, [x10]
  44c5cc:	cbz	x10, 44c614 <feof@plt+0x49c44>
  44c5d0:	ldr	w11, [x10, #16]
  44c5d4:	cbnz	w11, 44c614 <feof@plt+0x49c44>
  44c5d8:	ldr	x11, [x10, #8]
  44c5dc:	ldr	w11, [x11]
  44c5e0:	cmp	w11, #0x2b
  44c5e4:	b.hi	44c5c8 <feof@plt+0x49bf8>  // b.pmore
  44c5e8:	lsl	x12, x8, x11
  44c5ec:	tst	x12, x9
  44c5f0:	b.ne	44c61c <feof@plt+0x49c4c>  // b.any
  44c5f4:	lsl	x11, x8, x11
  44c5f8:	tst	x11, #0x1c00000000
  44c5fc:	b.eq	44c5c8 <feof@plt+0x49bf8>  // b.none
  44c600:	ldrb	w8, [x20, #264]
  44c604:	orr	w9, w8, #0x2
  44c608:	cmp	w9, #0x2a
  44c60c:	b.eq	44c670 <feof@plt+0x49ca0>  // b.none
  44c610:	b	44c620 <feof@plt+0x49c50>
  44c614:	mov	w24, wzr
  44c618:	b	44c6bc <feof@plt+0x49cec>
  44c61c:	ldrb	w8, [x20, #264]
  44c620:	cmp	w8, #0x20
  44c624:	b.eq	44c670 <feof@plt+0x49ca0>  // b.none
  44c628:	ldr	x8, [x20, #256]
  44c62c:	cmp	x8, #0xff
  44c630:	b.ne	44c65c <feof@plt+0x49c8c>  // b.any
  44c634:	ldp	x8, x2, [x20, #272]
  44c638:	mov	w1, #0xff                  	// #255
  44c63c:	mov	x0, x20
  44c640:	strb	wzr, [x20, #255]
  44c644:	blr	x8
  44c648:	ldr	x9, [x20, #320]
  44c64c:	mov	x8, xzr
  44c650:	str	xzr, [x20, #256]
  44c654:	add	x9, x9, #0x1
  44c658:	str	x9, [x20, #320]
  44c65c:	add	x9, x8, #0x1
  44c660:	mov	w10, #0x20                  	// #32
  44c664:	str	x9, [x20, #256]
  44c668:	strb	w10, [x20, x8]
  44c66c:	strb	w10, [x20, #264]
  44c670:	ldr	x8, [x20, #256]
  44c674:	cmp	x8, #0xff
  44c678:	b.ne	44c6a4 <feof@plt+0x49cd4>  // b.any
  44c67c:	ldp	x8, x2, [x20, #272]
  44c680:	mov	w1, #0xff                  	// #255
  44c684:	mov	x0, x20
  44c688:	strb	wzr, [x20, #255]
  44c68c:	blr	x8
  44c690:	ldr	x9, [x20, #320]
  44c694:	mov	x8, xzr
  44c698:	str	xzr, [x20, #256]
  44c69c:	add	x9, x9, #0x1
  44c6a0:	str	x9, [x20, #320]
  44c6a4:	add	x9, x8, #0x1
  44c6a8:	mov	w10, #0x28                  	// #40
  44c6ac:	mov	w24, #0x1                   	// #1
  44c6b0:	str	x9, [x20, #256]
  44c6b4:	strb	w10, [x20, x8]
  44c6b8:	strb	w10, [x20, #264]
  44c6bc:	ldr	x23, [x20, #296]
  44c6c0:	mov	x0, x20
  44c6c4:	mov	w1, w21
  44c6c8:	mov	x2, x19
  44c6cc:	mov	w3, wzr
  44c6d0:	str	xzr, [x20, #296]
  44c6d4:	bl	44da30 <feof@plt+0x4b060>
  44c6d8:	cbz	w24, 44c724 <feof@plt+0x49d54>
  44c6dc:	ldr	x8, [x20, #256]
  44c6e0:	cmp	x8, #0xff
  44c6e4:	b.ne	44c710 <feof@plt+0x49d40>  // b.any
  44c6e8:	ldp	x8, x2, [x20, #272]
  44c6ec:	mov	w1, #0xff                  	// #255
  44c6f0:	mov	x0, x20
  44c6f4:	strb	wzr, [x20, #255]
  44c6f8:	blr	x8
  44c6fc:	ldr	x9, [x20, #320]
  44c700:	mov	x8, xzr
  44c704:	str	xzr, [x20, #256]
  44c708:	add	x9, x9, #0x1
  44c70c:	str	x9, [x20, #320]
  44c710:	add	x9, x8, #0x1
  44c714:	mov	w10, #0x29                  	// #41
  44c718:	str	x9, [x20, #256]
  44c71c:	strb	w10, [x20, x8]
  44c720:	strb	w10, [x20, #264]
  44c724:	ldr	x8, [x20, #256]
  44c728:	cmp	x8, #0xff
  44c72c:	b.ne	44c758 <feof@plt+0x49d88>  // b.any
  44c730:	ldp	x8, x2, [x20, #272]
  44c734:	mov	w1, #0xff                  	// #255
  44c738:	mov	x0, x20
  44c73c:	strb	wzr, [x20, #255]
  44c740:	blr	x8
  44c744:	ldr	x9, [x20, #320]
  44c748:	mov	x8, xzr
  44c74c:	str	xzr, [x20, #256]
  44c750:	add	x9, x9, #0x1
  44c754:	str	x9, [x20, #320]
  44c758:	add	x9, x8, #0x1
  44c75c:	mov	w10, #0x28                  	// #40
  44c760:	str	x9, [x20, #256]
  44c764:	strb	w10, [x20, x8]
  44c768:	strb	w10, [x20, #264]
  44c76c:	ldr	x22, [x22, #16]
  44c770:	cbz	x22, 44c7e8 <feof@plt+0x49e18>
  44c774:	ldr	w8, [x22, #4]
  44c778:	cmp	w8, #0x1
  44c77c:	b.gt	44c78c <feof@plt+0x49dbc>
  44c780:	ldr	w9, [x20, #308]
  44c784:	cmp	w9, #0x401
  44c788:	b.lt	44c798 <feof@plt+0x49dc8>  // b.tstop
  44c78c:	mov	w8, #0x1                   	// #1
  44c790:	str	w8, [x20, #304]
  44c794:	b	44c7e8 <feof@plt+0x49e18>
  44c798:	add	w8, w8, #0x1
  44c79c:	str	w8, [x22, #4]
  44c7a0:	ldr	x8, [x20, #328]
  44c7a4:	add	w9, w9, #0x1
  44c7a8:	str	w9, [x20, #308]
  44c7ac:	mov	x9, sp
  44c7b0:	mov	x0, x20
  44c7b4:	mov	w1, w21
  44c7b8:	mov	x2, x22
  44c7bc:	stp	x22, x8, [sp]
  44c7c0:	str	x9, [x20, #328]
  44c7c4:	bl	445750 <feof@plt+0x42d80>
  44c7c8:	ldr	x8, [sp, #8]
  44c7cc:	str	x8, [x20, #328]
  44c7d0:	ldr	w8, [x22, #4]
  44c7d4:	sub	w8, w8, #0x1
  44c7d8:	str	w8, [x22, #4]
  44c7dc:	ldr	w8, [x20, #308]
  44c7e0:	sub	w8, w8, #0x1
  44c7e4:	str	w8, [x20, #308]
  44c7e8:	ldr	x8, [x20, #256]
  44c7ec:	cmp	x8, #0xff
  44c7f0:	b.ne	44c81c <feof@plt+0x49e4c>  // b.any
  44c7f4:	ldp	x8, x2, [x20, #272]
  44c7f8:	mov	w1, #0xff                  	// #255
  44c7fc:	mov	x0, x20
  44c800:	strb	wzr, [x20, #255]
  44c804:	blr	x8
  44c808:	ldr	x9, [x20, #320]
  44c80c:	mov	x8, xzr
  44c810:	str	xzr, [x20, #256]
  44c814:	add	x9, x9, #0x1
  44c818:	str	x9, [x20, #320]
  44c81c:	add	x9, x8, #0x1
  44c820:	mov	w10, #0x29                  	// #41
  44c824:	mov	w3, #0x1                   	// #1
  44c828:	mov	x0, x20
  44c82c:	mov	w1, w21
  44c830:	mov	x2, x19
  44c834:	str	x9, [x20, #256]
  44c838:	strb	w10, [x20, x8]
  44c83c:	strb	w10, [x20, #264]
  44c840:	bl	44da30 <feof@plt+0x4b060>
  44c844:	str	x23, [x20, #296]
  44c848:	ldp	x20, x19, [sp, #64]
  44c84c:	ldp	x22, x21, [sp, #48]
  44c850:	ldp	x24, x23, [sp, #32]
  44c854:	ldp	x29, x30, [sp, #16]
  44c858:	add	sp, sp, #0x50
  44c85c:	ret
  44c860:	sub	sp, sp, #0x50
  44c864:	stp	x22, x21, [sp, #48]
  44c868:	stp	x20, x19, [sp, #64]
  44c86c:	mov	x21, x2
  44c870:	mov	w20, w1
  44c874:	mov	x19, x0
  44c878:	stp	x29, x30, [sp, #16]
  44c87c:	str	x23, [sp, #32]
  44c880:	add	x29, sp, #0x10
  44c884:	cbz	x3, 44c9c8 <feof@plt+0x49ff8>
  44c888:	mov	x22, x3
  44c88c:	mov	x8, x3
  44c890:	ldr	w9, [x8, #16]
  44c894:	cbz	w9, 44c8a8 <feof@plt+0x49ed8>
  44c898:	ldr	x8, [x8]
  44c89c:	cbnz	x8, 44c890 <feof@plt+0x49ec0>
  44c8a0:	mov	w23, #0x1                   	// #1
  44c8a4:	b	44c8bc <feof@plt+0x49eec>
  44c8a8:	ldr	x8, [x8, #8]
  44c8ac:	ldr	w8, [x8]
  44c8b0:	cmp	w8, #0x2a
  44c8b4:	cset	w23, ne  // ne = any
  44c8b8:	b.ne	44c8d8 <feof@plt+0x49f08>  // b.any
  44c8bc:	mov	x0, x19
  44c8c0:	mov	w1, w20
  44c8c4:	mov	x2, x22
  44c8c8:	mov	w3, wzr
  44c8cc:	bl	44da30 <feof@plt+0x4b060>
  44c8d0:	cbnz	w23, 44c9c8 <feof@plt+0x49ff8>
  44c8d4:	b	44ca10 <feof@plt+0x4a040>
  44c8d8:	ldr	x8, [x19, #256]
  44c8dc:	cmp	x8, #0xff
  44c8e0:	b.ne	44c90c <feof@plt+0x49f3c>  // b.any
  44c8e4:	ldp	x8, x2, [x19, #272]
  44c8e8:	mov	w1, #0xff                  	// #255
  44c8ec:	mov	x0, x19
  44c8f0:	strb	wzr, [x19, #255]
  44c8f4:	blr	x8
  44c8f8:	ldr	x9, [x19, #320]
  44c8fc:	mov	x8, xzr
  44c900:	str	xzr, [x19, #256]
  44c904:	add	x9, x9, #0x1
  44c908:	str	x9, [x19, #320]
  44c90c:	add	x9, x8, #0x1
  44c910:	mov	w10, #0x20                  	// #32
  44c914:	str	x9, [x19, #256]
  44c918:	strb	w10, [x19, x8]
  44c91c:	ldr	x8, [x19, #256]
  44c920:	strb	w10, [x19, #264]
  44c924:	cmp	x8, #0xff
  44c928:	b.ne	44c954 <feof@plt+0x49f84>  // b.any
  44c92c:	ldp	x8, x2, [x19, #272]
  44c930:	mov	w1, #0xff                  	// #255
  44c934:	mov	x0, x19
  44c938:	strb	wzr, [x19, #255]
  44c93c:	blr	x8
  44c940:	ldr	x9, [x19, #320]
  44c944:	mov	x8, xzr
  44c948:	str	xzr, [x19, #256]
  44c94c:	add	x9, x9, #0x1
  44c950:	str	x9, [x19, #320]
  44c954:	add	x9, x8, #0x1
  44c958:	mov	w10, #0x28                  	// #40
  44c95c:	mov	x0, x19
  44c960:	mov	w1, w20
  44c964:	mov	x2, x22
  44c968:	mov	w3, wzr
  44c96c:	str	x9, [x19, #256]
  44c970:	strb	w10, [x19, x8]
  44c974:	strb	w10, [x19, #264]
  44c978:	bl	44da30 <feof@plt+0x4b060>
  44c97c:	ldr	x8, [x19, #256]
  44c980:	cmp	x8, #0xff
  44c984:	b.ne	44c9b0 <feof@plt+0x49fe0>  // b.any
  44c988:	ldp	x8, x2, [x19, #272]
  44c98c:	mov	w1, #0xff                  	// #255
  44c990:	mov	x0, x19
  44c994:	strb	wzr, [x19, #255]
  44c998:	blr	x8
  44c99c:	ldr	x9, [x19, #320]
  44c9a0:	mov	x8, xzr
  44c9a4:	str	xzr, [x19, #256]
  44c9a8:	add	x9, x9, #0x1
  44c9ac:	str	x9, [x19, #320]
  44c9b0:	add	x9, x8, #0x1
  44c9b4:	mov	w10, #0x29                  	// #41
  44c9b8:	str	x9, [x19, #256]
  44c9bc:	strb	w10, [x19, x8]
  44c9c0:	strb	w10, [x19, #264]
  44c9c4:	cbz	w23, 44ca10 <feof@plt+0x4a040>
  44c9c8:	ldr	x8, [x19, #256]
  44c9cc:	cmp	x8, #0xff
  44c9d0:	b.ne	44c9fc <feof@plt+0x4a02c>  // b.any
  44c9d4:	ldp	x8, x2, [x19, #272]
  44c9d8:	mov	w1, #0xff                  	// #255
  44c9dc:	mov	x0, x19
  44c9e0:	strb	wzr, [x19, #255]
  44c9e4:	blr	x8
  44c9e8:	ldr	x9, [x19, #320]
  44c9ec:	mov	x8, xzr
  44c9f0:	str	xzr, [x19, #256]
  44c9f4:	add	x9, x9, #0x1
  44c9f8:	str	x9, [x19, #320]
  44c9fc:	add	x9, x8, #0x1
  44ca00:	mov	w10, #0x20                  	// #32
  44ca04:	str	x9, [x19, #256]
  44ca08:	strb	w10, [x19, x8]
  44ca0c:	strb	w10, [x19, #264]
  44ca10:	ldr	x8, [x19, #256]
  44ca14:	cmp	x8, #0xff
  44ca18:	b.ne	44ca44 <feof@plt+0x4a074>  // b.any
  44ca1c:	ldp	x8, x2, [x19, #272]
  44ca20:	mov	w1, #0xff                  	// #255
  44ca24:	mov	x0, x19
  44ca28:	strb	wzr, [x19, #255]
  44ca2c:	blr	x8
  44ca30:	ldr	x9, [x19, #320]
  44ca34:	mov	x8, xzr
  44ca38:	str	xzr, [x19, #256]
  44ca3c:	add	x9, x9, #0x1
  44ca40:	str	x9, [x19, #320]
  44ca44:	add	x9, x8, #0x1
  44ca48:	mov	w10, #0x5b                  	// #91
  44ca4c:	str	x9, [x19, #256]
  44ca50:	strb	w10, [x19, x8]
  44ca54:	strb	w10, [x19, #264]
  44ca58:	ldr	x21, [x21, #8]
  44ca5c:	cbz	x21, 44cad4 <feof@plt+0x4a104>
  44ca60:	ldr	w8, [x21, #4]
  44ca64:	cmp	w8, #0x1
  44ca68:	b.gt	44ca78 <feof@plt+0x4a0a8>
  44ca6c:	ldr	w9, [x19, #308]
  44ca70:	cmp	w9, #0x401
  44ca74:	b.lt	44ca84 <feof@plt+0x4a0b4>  // b.tstop
  44ca78:	mov	w8, #0x1                   	// #1
  44ca7c:	str	w8, [x19, #304]
  44ca80:	b	44cad4 <feof@plt+0x4a104>
  44ca84:	add	w8, w8, #0x1
  44ca88:	str	w8, [x21, #4]
  44ca8c:	ldr	x8, [x19, #328]
  44ca90:	add	w9, w9, #0x1
  44ca94:	str	w9, [x19, #308]
  44ca98:	mov	x9, sp
  44ca9c:	mov	x0, x19
  44caa0:	mov	w1, w20
  44caa4:	mov	x2, x21
  44caa8:	stp	x21, x8, [sp]
  44caac:	str	x9, [x19, #328]
  44cab0:	bl	445750 <feof@plt+0x42d80>
  44cab4:	ldr	x8, [sp, #8]
  44cab8:	str	x8, [x19, #328]
  44cabc:	ldr	w8, [x21, #4]
  44cac0:	sub	w8, w8, #0x1
  44cac4:	str	w8, [x21, #4]
  44cac8:	ldr	w8, [x19, #308]
  44cacc:	sub	w8, w8, #0x1
  44cad0:	str	w8, [x19, #308]
  44cad4:	ldr	x8, [x19, #256]
  44cad8:	cmp	x8, #0xff
  44cadc:	b.ne	44cb08 <feof@plt+0x4a138>  // b.any
  44cae0:	ldp	x8, x2, [x19, #272]
  44cae4:	mov	w1, #0xff                  	// #255
  44cae8:	mov	x0, x19
  44caec:	strb	wzr, [x19, #255]
  44caf0:	blr	x8
  44caf4:	ldr	x9, [x19, #320]
  44caf8:	mov	x8, xzr
  44cafc:	str	xzr, [x19, #256]
  44cb00:	add	x9, x9, #0x1
  44cb04:	str	x9, [x19, #320]
  44cb08:	add	x9, x8, #0x1
  44cb0c:	mov	w10, #0x5d                  	// #93
  44cb10:	str	x9, [x19, #256]
  44cb14:	strb	w10, [x19, x8]
  44cb18:	strb	w10, [x19, #264]
  44cb1c:	ldp	x20, x19, [sp, #64]
  44cb20:	ldp	x22, x21, [sp, #48]
  44cb24:	ldr	x23, [sp, #32]
  44cb28:	ldp	x29, x30, [sp, #16]
  44cb2c:	add	sp, sp, #0x50
  44cb30:	ret
  44cb34:	stp	x29, x30, [sp, #-48]!
  44cb38:	str	x21, [sp, #16]
  44cb3c:	stp	x20, x19, [sp, #32]
  44cb40:	mov	x29, sp
  44cb44:	cbz	x1, 44cbf8 <feof@plt+0x4a228>
  44cb48:	adrp	x21, 460000 <_obstack_memory_used@@Base+0xfa68>
  44cb4c:	mov	x19, x1
  44cb50:	mov	x20, x0
  44cb54:	add	x21, x21, #0x450
  44cb58:	b	44cb74 <feof@plt+0x4a1a4>
  44cb5c:	ldr	x1, [x19, #8]
  44cb60:	mov	x0, x20
  44cb64:	bl	44cb34 <feof@plt+0x4a164>
  44cb68:	cbnz	x0, 44cbfc <feof@plt+0x4a22c>
  44cb6c:	ldr	x19, [x19, #16]
  44cb70:	cbz	x19, 44cbf8 <feof@plt+0x4a228>
  44cb74:	ldr	w8, [x19]
  44cb78:	cmp	w8, #0x4c
  44cb7c:	b.hi	44cb5c <feof@plt+0x4a18c>  // b.pmore
  44cb80:	adr	x9, 44cb5c <feof@plt+0x4a18c>
  44cb84:	ldrb	w10, [x21, x8]
  44cb88:	add	x9, x9, x10, lsl #2
  44cb8c:	mov	x0, xzr
  44cb90:	br	x9
  44cb94:	ldr	x8, [x20, #288]
  44cb98:	cbz	x8, 44cbd4 <feof@plt+0x4a204>
  44cb9c:	ldr	x9, [x8, #8]
  44cba0:	ldr	w8, [x19, #8]
  44cba4:	ldr	x0, [x9, #16]
  44cba8:	tbnz	w8, #31, 44cbe8 <feof@plt+0x4a218>
  44cbac:	cbz	x0, 44cbf8 <feof@plt+0x4a228>
  44cbb0:	ldr	w9, [x0]
  44cbb4:	cmp	w9, #0x2f
  44cbb8:	b.ne	44cbf8 <feof@plt+0x4a228>  // b.any
  44cbbc:	subs	w9, w8, #0x1
  44cbc0:	b.lt	44cbe0 <feof@plt+0x4a210>  // b.tstop
  44cbc4:	ldr	x0, [x0, #16]
  44cbc8:	mov	w8, w9
  44cbcc:	cbnz	x0, 44cbb0 <feof@plt+0x4a1e0>
  44cbd0:	b	44cbf8 <feof@plt+0x4a228>
  44cbd4:	mov	w8, #0x1                   	// #1
  44cbd8:	str	w8, [x20, #304]
  44cbdc:	b	44cbf8 <feof@plt+0x4a228>
  44cbe0:	cbnz	w8, 44cbf8 <feof@plt+0x4a228>
  44cbe4:	ldr	x0, [x0, #8]
  44cbe8:	cbz	x0, 44cbf8 <feof@plt+0x4a228>
  44cbec:	ldr	w8, [x0]
  44cbf0:	cmp	w8, #0x2f
  44cbf4:	b.eq	44cbfc <feof@plt+0x4a22c>  // b.none
  44cbf8:	mov	x0, xzr
  44cbfc:	ldp	x20, x19, [sp, #32]
  44cc00:	ldr	x21, [sp, #16]
  44cc04:	ldp	x29, x30, [sp], #48
  44cc08:	ret
  44cc0c:	sub	sp, sp, #0x60
  44cc10:	stp	x29, x30, [sp, #16]
  44cc14:	stp	x26, x25, [sp, #32]
  44cc18:	stp	x24, x23, [sp, #48]
  44cc1c:	stp	x22, x21, [sp, #64]
  44cc20:	stp	x20, x19, [sp, #80]
  44cc24:	ldr	x8, [x2, #8]
  44cc28:	add	x29, sp, #0x10
  44cc2c:	ldr	x8, [x8, #8]
  44cc30:	ldr	x8, [x8]
  44cc34:	ldrb	w9, [x8]
  44cc38:	cmp	w9, #0x66
  44cc3c:	b.ne	44cc64 <feof@plt+0x4a294>  // b.any
  44cc40:	ldr	x9, [x2, #16]
  44cc44:	mov	w20, w1
  44cc48:	mov	x19, x0
  44cc4c:	ldp	x21, x22, [x9, #8]
  44cc50:	ldr	w10, [x22]
  44cc54:	cmp	w10, #0x3c
  44cc58:	b.ne	44cc6c <feof@plt+0x4a29c>  // b.any
  44cc5c:	ldp	x22, x23, [x22, #8]
  44cc60:	b	44cc70 <feof@plt+0x4a2a0>
  44cc64:	mov	w0, wzr
  44cc68:	b	44d7ac <feof@plt+0x4addc>
  44cc6c:	mov	x23, xzr
  44cc70:	mov	w9, #0xffffffff            	// #-1
  44cc74:	ldr	w24, [x19, #316]
  44cc78:	str	w9, [x19, #316]
  44cc7c:	ldrb	w8, [x8, #1]
  44cc80:	sub	w8, w8, #0x4c
  44cc84:	cmp	w8, #0x26
  44cc88:	b.hi	44d7a4 <feof@plt+0x4add4>  // b.pmore
  44cc8c:	adrp	x9, 460000 <_obstack_memory_used@@Base+0xfa68>
  44cc90:	add	x9, x9, #0x49e
  44cc94:	adr	x10, 44cca4 <feof@plt+0x4a2d4>
  44cc98:	ldrh	w11, [x9, x8, lsl #1]
  44cc9c:	add	x10, x10, x11, lsl #2
  44cca0:	br	x10
  44cca4:	ldr	x8, [x19, #256]
  44cca8:	cmp	x8, #0xff
  44ccac:	b.ne	44ccd8 <feof@plt+0x4a308>  // b.any
  44ccb0:	ldp	x8, x2, [x19, #272]
  44ccb4:	mov	w1, #0xff                  	// #255
  44ccb8:	mov	x0, x19
  44ccbc:	strb	wzr, [x19, #255]
  44ccc0:	blr	x8
  44ccc4:	ldr	x9, [x19, #320]
  44ccc8:	mov	x8, xzr
  44cccc:	str	xzr, [x19, #256]
  44ccd0:	add	x9, x9, #0x1
  44ccd4:	str	x9, [x19, #320]
  44ccd8:	add	x9, x8, #0x1
  44ccdc:	mov	w10, #0x28                  	// #40
  44cce0:	str	x9, [x19, #256]
  44cce4:	strb	w10, [x19, x8]
  44cce8:	strb	w10, [x19, #264]
  44ccec:	ldr	w8, [x22]
  44ccf0:	cmp	w8, #0x31
  44ccf4:	b.hi	44cfd0 <feof@plt+0x4a600>  // b.pmore
  44ccf8:	mov	w9, #0x1                   	// #1
  44ccfc:	lsl	x8, x9, x8
  44cd00:	mov	x9, #0x43                  	// #67
  44cd04:	movk	x9, #0x2, lsl #48
  44cd08:	tst	x8, x9
  44cd0c:	b.eq	44cfd0 <feof@plt+0x4a600>  // b.none
  44cd10:	ldr	w8, [x22, #4]
  44cd14:	cmp	w8, #0x1
  44cd18:	b.gt	44cd28 <feof@plt+0x4a358>
  44cd1c:	ldr	w9, [x19, #308]
  44cd20:	cmp	w9, #0x401
  44cd24:	b.lt	44cf7c <feof@plt+0x4a5ac>  // b.tstop
  44cd28:	mov	w8, #0x1                   	// #1
  44cd2c:	str	w8, [x19, #304]
  44cd30:	b	44d310 <feof@plt+0x4a940>
  44cd34:	ldr	x8, [x19, #256]
  44cd38:	cmp	x8, #0xff
  44cd3c:	b.ne	44cd68 <feof@plt+0x4a398>  // b.any
  44cd40:	ldp	x8, x2, [x19, #272]
  44cd44:	mov	w1, #0xff                  	// #255
  44cd48:	mov	x0, x19
  44cd4c:	strb	wzr, [x19, #255]
  44cd50:	blr	x8
  44cd54:	ldr	x9, [x19, #320]
  44cd58:	mov	x8, xzr
  44cd5c:	str	xzr, [x19, #256]
  44cd60:	add	x9, x9, #0x1
  44cd64:	str	x9, [x19, #320]
  44cd68:	add	x9, x8, #0x1
  44cd6c:	mov	w10, #0x28                  	// #40
  44cd70:	str	x9, [x19, #256]
  44cd74:	strb	w10, [x19, x8]
  44cd78:	ldr	x8, [x19, #256]
  44cd7c:	strb	w10, [x19, #264]
  44cd80:	cmp	x8, #0xff
  44cd84:	b.ne	44cdb0 <feof@plt+0x4a3e0>  // b.any
  44cd88:	ldp	x8, x2, [x19, #272]
  44cd8c:	mov	w1, #0xff                  	// #255
  44cd90:	mov	x0, x19
  44cd94:	strb	wzr, [x19, #255]
  44cd98:	blr	x8
  44cd9c:	ldr	x9, [x19, #320]
  44cda0:	mov	x8, xzr
  44cda4:	str	xzr, [x19, #256]
  44cda8:	add	x9, x9, #0x1
  44cdac:	str	x9, [x19, #320]
  44cdb0:	add	x9, x8, #0x1
  44cdb4:	mov	w23, #0x2e                  	// #46
  44cdb8:	str	x9, [x19, #256]
  44cdbc:	strb	w23, [x19, x8]
  44cdc0:	ldr	x8, [x19, #256]
  44cdc4:	strb	w23, [x19, #264]
  44cdc8:	cmp	x8, #0xff
  44cdcc:	b.ne	44cdf8 <feof@plt+0x4a428>  // b.any
  44cdd0:	ldp	x8, x2, [x19, #272]
  44cdd4:	mov	w1, #0xff                  	// #255
  44cdd8:	mov	x0, x19
  44cddc:	strb	wzr, [x19, #255]
  44cde0:	blr	x8
  44cde4:	ldr	x9, [x19, #320]
  44cde8:	mov	x8, xzr
  44cdec:	str	xzr, [x19, #256]
  44cdf0:	add	x9, x9, #0x1
  44cdf4:	str	x9, [x19, #320]
  44cdf8:	add	x9, x8, #0x1
  44cdfc:	str	x9, [x19, #256]
  44ce00:	strb	w23, [x19, x8]
  44ce04:	ldr	x8, [x19, #256]
  44ce08:	strb	w23, [x19, #264]
  44ce0c:	cmp	x8, #0xff
  44ce10:	b.ne	44ce3c <feof@plt+0x4a46c>  // b.any
  44ce14:	ldp	x8, x2, [x19, #272]
  44ce18:	mov	w1, #0xff                  	// #255
  44ce1c:	mov	x0, x19
  44ce20:	strb	wzr, [x19, #255]
  44ce24:	blr	x8
  44ce28:	ldr	x9, [x19, #320]
  44ce2c:	mov	x8, xzr
  44ce30:	str	xzr, [x19, #256]
  44ce34:	add	x9, x9, #0x1
  44ce38:	str	x9, [x19, #320]
  44ce3c:	add	x9, x8, #0x1
  44ce40:	mov	w10, #0x2e                  	// #46
  44ce44:	str	x9, [x19, #256]
  44ce48:	strb	w10, [x19, x8]
  44ce4c:	strb	w10, [x19, #264]
  44ce50:	ldr	w8, [x21]
  44ce54:	cmp	w8, #0x32
  44ce58:	b.ne	44cf58 <feof@plt+0x4a588>  // b.any
  44ce5c:	ldr	x8, [x21, #8]
  44ce60:	ldrsw	x21, [x8, #16]
  44ce64:	cbz	w21, 44d14c <feof@plt+0x4a77c>
  44ce68:	ldr	x23, [x8, #8]
  44ce6c:	b	44ce8c <feof@plt+0x4a4bc>
  44ce70:	add	x9, x8, #0x1
  44ce74:	subs	x21, x21, #0x1
  44ce78:	add	x23, x23, #0x1
  44ce7c:	str	x9, [x19, #256]
  44ce80:	strb	w25, [x19, x8]
  44ce84:	strb	w25, [x19, #264]
  44ce88:	b.eq	44d14c <feof@plt+0x4a77c>  // b.none
  44ce8c:	ldr	x8, [x19, #256]
  44ce90:	ldrb	w25, [x23]
  44ce94:	cmp	x8, #0xff
  44ce98:	b.ne	44ce70 <feof@plt+0x4a4a0>  // b.any
  44ce9c:	ldp	x8, x2, [x19, #272]
  44cea0:	mov	w1, #0xff                  	// #255
  44cea4:	mov	x0, x19
  44cea8:	strb	wzr, [x19, #255]
  44ceac:	blr	x8
  44ceb0:	ldr	x9, [x19, #320]
  44ceb4:	mov	x8, xzr
  44ceb8:	str	xzr, [x19, #256]
  44cebc:	add	x9, x9, #0x1
  44cec0:	str	x9, [x19, #320]
  44cec4:	b	44ce70 <feof@plt+0x4a4a0>
  44cec8:	ldr	x8, [x19, #256]
  44cecc:	cmp	x8, #0xff
  44ced0:	b.ne	44cefc <feof@plt+0x4a52c>  // b.any
  44ced4:	ldp	x8, x2, [x19, #272]
  44ced8:	mov	w1, #0xff                  	// #255
  44cedc:	mov	x0, x19
  44cee0:	strb	wzr, [x19, #255]
  44cee4:	blr	x8
  44cee8:	ldr	x9, [x19, #320]
  44ceec:	mov	x8, xzr
  44cef0:	str	xzr, [x19, #256]
  44cef4:	add	x9, x9, #0x1
  44cef8:	str	x9, [x19, #320]
  44cefc:	add	x9, x8, #0x1
  44cf00:	mov	w10, #0x28                  	// #40
  44cf04:	str	x9, [x19, #256]
  44cf08:	strb	w10, [x19, x8]
  44cf0c:	strb	w10, [x19, #264]
  44cf10:	ldr	w8, [x22]
  44cf14:	cmp	w8, #0x31
  44cf18:	b.hi	44d03c <feof@plt+0x4a66c>  // b.pmore
  44cf1c:	mov	w9, #0x1                   	// #1
  44cf20:	lsl	x8, x9, x8
  44cf24:	mov	x9, #0x43                  	// #67
  44cf28:	movk	x9, #0x2, lsl #48
  44cf2c:	tst	x8, x9
  44cf30:	b.eq	44d03c <feof@plt+0x4a66c>  // b.none
  44cf34:	ldr	w8, [x22, #4]
  44cf38:	cmp	w8, #0x1
  44cf3c:	b.gt	44cf4c <feof@plt+0x4a57c>
  44cf40:	ldr	w9, [x19, #308]
  44cf44:	cmp	w9, #0x401
  44cf48:	b.lt	44d0a8 <feof@plt+0x4a6d8>  // b.tstop
  44cf4c:	mov	w8, #0x1                   	// #1
  44cf50:	str	w8, [x19, #304]
  44cf54:	b	44d860 <feof@plt+0x4ae90>
  44cf58:	ldr	w8, [x21, #4]
  44cf5c:	cmp	w8, #0x1
  44cf60:	b.gt	44cf70 <feof@plt+0x4a5a0>
  44cf64:	ldr	w9, [x19, #308]
  44cf68:	cmp	w9, #0x401
  44cf6c:	b.lt	44d0fc <feof@plt+0x4a72c>  // b.tstop
  44cf70:	mov	w8, #0x1                   	// #1
  44cf74:	str	w8, [x19, #304]
  44cf78:	b	44d14c <feof@plt+0x4a77c>
  44cf7c:	add	w8, w8, #0x1
  44cf80:	str	w8, [x22, #4]
  44cf84:	ldr	x8, [x19, #328]
  44cf88:	add	w9, w9, #0x1
  44cf8c:	str	w9, [x19, #308]
  44cf90:	mov	x9, sp
  44cf94:	mov	x0, x19
  44cf98:	mov	w1, w20
  44cf9c:	mov	x2, x22
  44cfa0:	stp	x22, x8, [sp]
  44cfa4:	str	x9, [x19, #328]
  44cfa8:	bl	445750 <feof@plt+0x42d80>
  44cfac:	ldr	x8, [sp, #8]
  44cfb0:	str	x8, [x19, #328]
  44cfb4:	ldr	w8, [x22, #4]
  44cfb8:	sub	w8, w8, #0x1
  44cfbc:	str	w8, [x22, #4]
  44cfc0:	ldr	w8, [x19, #308]
  44cfc4:	sub	w8, w8, #0x1
  44cfc8:	str	w8, [x19, #308]
  44cfcc:	b	44d310 <feof@plt+0x4a940>
  44cfd0:	ldr	x8, [x19, #256]
  44cfd4:	cmp	x8, #0xff
  44cfd8:	b.ne	44d004 <feof@plt+0x4a634>  // b.any
  44cfdc:	ldp	x8, x2, [x19, #272]
  44cfe0:	mov	w1, #0xff                  	// #255
  44cfe4:	mov	x0, x19
  44cfe8:	strb	wzr, [x19, #255]
  44cfec:	blr	x8
  44cff0:	ldr	x9, [x19, #320]
  44cff4:	mov	x8, xzr
  44cff8:	str	xzr, [x19, #256]
  44cffc:	add	x9, x9, #0x1
  44d000:	str	x9, [x19, #320]
  44d004:	add	x9, x8, #0x1
  44d008:	mov	w10, #0x28                  	// #40
  44d00c:	str	x9, [x19, #256]
  44d010:	strb	w10, [x19, x8]
  44d014:	strb	w10, [x19, #264]
  44d018:	ldr	w8, [x22, #4]
  44d01c:	cmp	w8, #0x1
  44d020:	b.gt	44d030 <feof@plt+0x4a660>
  44d024:	ldr	w9, [x19, #308]
  44d028:	cmp	w9, #0x401
  44d02c:	b.lt	44d278 <feof@plt+0x4a8a8>  // b.tstop
  44d030:	mov	w8, #0x1                   	// #1
  44d034:	str	w8, [x19, #304]
  44d038:	b	44d2c8 <feof@plt+0x4a8f8>
  44d03c:	ldr	x8, [x19, #256]
  44d040:	cmp	x8, #0xff
  44d044:	b.ne	44d070 <feof@plt+0x4a6a0>  // b.any
  44d048:	ldp	x8, x2, [x19, #272]
  44d04c:	mov	w1, #0xff                  	// #255
  44d050:	mov	x0, x19
  44d054:	strb	wzr, [x19, #255]
  44d058:	blr	x8
  44d05c:	ldr	x9, [x19, #320]
  44d060:	mov	x8, xzr
  44d064:	str	xzr, [x19, #256]
  44d068:	add	x9, x9, #0x1
  44d06c:	str	x9, [x19, #320]
  44d070:	add	x9, x8, #0x1
  44d074:	mov	w10, #0x28                  	// #40
  44d078:	str	x9, [x19, #256]
  44d07c:	strb	w10, [x19, x8]
  44d080:	strb	w10, [x19, #264]
  44d084:	ldr	w8, [x22, #4]
  44d088:	cmp	w8, #0x1
  44d08c:	b.gt	44d09c <feof@plt+0x4a6cc>
  44d090:	ldr	w9, [x19, #308]
  44d094:	cmp	w9, #0x401
  44d098:	b.lt	44d7c8 <feof@plt+0x4adf8>  // b.tstop
  44d09c:	mov	w8, #0x1                   	// #1
  44d0a0:	str	w8, [x19, #304]
  44d0a4:	b	44d818 <feof@plt+0x4ae48>
  44d0a8:	add	w8, w8, #0x1
  44d0ac:	str	w8, [x22, #4]
  44d0b0:	ldr	x8, [x19, #328]
  44d0b4:	add	w9, w9, #0x1
  44d0b8:	str	w9, [x19, #308]
  44d0bc:	mov	x9, sp
  44d0c0:	mov	x0, x19
  44d0c4:	mov	w1, w20
  44d0c8:	mov	x2, x22
  44d0cc:	stp	x22, x8, [sp]
  44d0d0:	str	x9, [x19, #328]
  44d0d4:	bl	445750 <feof@plt+0x42d80>
  44d0d8:	ldr	x8, [sp, #8]
  44d0dc:	str	x8, [x19, #328]
  44d0e0:	ldr	w8, [x22, #4]
  44d0e4:	sub	w8, w8, #0x1
  44d0e8:	str	w8, [x22, #4]
  44d0ec:	ldr	w8, [x19, #308]
  44d0f0:	sub	w8, w8, #0x1
  44d0f4:	str	w8, [x19, #308]
  44d0f8:	b	44d860 <feof@plt+0x4ae90>
  44d0fc:	add	w8, w8, #0x1
  44d100:	str	w8, [x21, #4]
  44d104:	ldr	x8, [x19, #328]
  44d108:	add	w9, w9, #0x1
  44d10c:	str	w9, [x19, #308]
  44d110:	mov	x9, sp
  44d114:	mov	x0, x19
  44d118:	mov	w1, w20
  44d11c:	mov	x2, x21
  44d120:	stp	x21, x8, [sp]
  44d124:	str	x9, [x19, #328]
  44d128:	bl	445750 <feof@plt+0x42d80>
  44d12c:	ldr	x8, [sp, #8]
  44d130:	str	x8, [x19, #328]
  44d134:	ldr	w8, [x21, #4]
  44d138:	sub	w8, w8, #0x1
  44d13c:	str	w8, [x21, #4]
  44d140:	ldr	w8, [x19, #308]
  44d144:	sub	w8, w8, #0x1
  44d148:	str	w8, [x19, #308]
  44d14c:	ldr	w8, [x22]
  44d150:	cmp	w8, #0x31
  44d154:	b.hi	44d1d0 <feof@plt+0x4a800>  // b.pmore
  44d158:	mov	w9, #0x1                   	// #1
  44d15c:	lsl	x8, x9, x8
  44d160:	mov	x9, #0x43                  	// #67
  44d164:	movk	x9, #0x2, lsl #48
  44d168:	tst	x8, x9
  44d16c:	b.eq	44d1d0 <feof@plt+0x4a800>  // b.none
  44d170:	ldr	w8, [x22, #4]
  44d174:	cmp	w8, #0x1
  44d178:	b.gt	44d5f8 <feof@plt+0x4ac28>
  44d17c:	ldr	w9, [x19, #308]
  44d180:	cmp	w9, #0x401
  44d184:	b.ge	44d5f8 <feof@plt+0x4ac28>  // b.tcont
  44d188:	add	w8, w8, #0x1
  44d18c:	str	w8, [x22, #4]
  44d190:	ldr	x8, [x19, #328]
  44d194:	add	w9, w9, #0x1
  44d198:	str	w9, [x19, #308]
  44d19c:	mov	x9, sp
  44d1a0:	mov	x0, x19
  44d1a4:	mov	w1, w20
  44d1a8:	mov	x2, x22
  44d1ac:	stp	x22, x8, [sp]
  44d1b0:	str	x9, [x19, #328]
  44d1b4:	bl	445750 <feof@plt+0x42d80>
  44d1b8:	ldr	x8, [sp, #8]
  44d1bc:	str	x8, [x19, #328]
  44d1c0:	ldr	w8, [x22, #4]
  44d1c4:	sub	w8, w8, #0x1
  44d1c8:	str	w8, [x22, #4]
  44d1cc:	b	44d648 <feof@plt+0x4ac78>
  44d1d0:	ldr	x8, [x19, #256]
  44d1d4:	cmp	x8, #0xff
  44d1d8:	b.ne	44d204 <feof@plt+0x4a834>  // b.any
  44d1dc:	ldp	x8, x2, [x19, #272]
  44d1e0:	mov	w1, #0xff                  	// #255
  44d1e4:	mov	x0, x19
  44d1e8:	strb	wzr, [x19, #255]
  44d1ec:	blr	x8
  44d1f0:	ldr	x9, [x19, #320]
  44d1f4:	mov	x8, xzr
  44d1f8:	str	xzr, [x19, #256]
  44d1fc:	add	x9, x9, #0x1
  44d200:	str	x9, [x19, #320]
  44d204:	add	x9, x8, #0x1
  44d208:	mov	w10, #0x28                  	// #40
  44d20c:	str	x9, [x19, #256]
  44d210:	strb	w10, [x19, x8]
  44d214:	strb	w10, [x19, #264]
  44d218:	ldr	w8, [x22, #4]
  44d21c:	cmp	w8, #0x1
  44d220:	b.gt	44d6b8 <feof@plt+0x4ace8>
  44d224:	ldr	w9, [x19, #308]
  44d228:	cmp	w9, #0x401
  44d22c:	b.ge	44d6b8 <feof@plt+0x4ace8>  // b.tcont
  44d230:	add	w8, w8, #0x1
  44d234:	str	w8, [x22, #4]
  44d238:	ldr	x8, [x19, #328]
  44d23c:	add	w9, w9, #0x1
  44d240:	str	w9, [x19, #308]
  44d244:	mov	x9, sp
  44d248:	mov	x0, x19
  44d24c:	mov	w1, w20
  44d250:	mov	x2, x22
  44d254:	stp	x22, x8, [sp]
  44d258:	str	x9, [x19, #328]
  44d25c:	bl	445750 <feof@plt+0x42d80>
  44d260:	ldr	x8, [sp, #8]
  44d264:	str	x8, [x19, #328]
  44d268:	ldr	w8, [x22, #4]
  44d26c:	sub	w8, w8, #0x1
  44d270:	str	w8, [x22, #4]
  44d274:	b	44d708 <feof@plt+0x4ad38>
  44d278:	add	w8, w8, #0x1
  44d27c:	str	w8, [x22, #4]
  44d280:	ldr	x8, [x19, #328]
  44d284:	add	w9, w9, #0x1
  44d288:	str	w9, [x19, #308]
  44d28c:	mov	x9, sp
  44d290:	mov	x0, x19
  44d294:	mov	w1, w20
  44d298:	mov	x2, x22
  44d29c:	stp	x22, x8, [sp]
  44d2a0:	str	x9, [x19, #328]
  44d2a4:	bl	445750 <feof@plt+0x42d80>
  44d2a8:	ldr	x8, [sp, #8]
  44d2ac:	str	x8, [x19, #328]
  44d2b0:	ldr	w8, [x22, #4]
  44d2b4:	sub	w8, w8, #0x1
  44d2b8:	str	w8, [x22, #4]
  44d2bc:	ldr	w8, [x19, #308]
  44d2c0:	sub	w8, w8, #0x1
  44d2c4:	str	w8, [x19, #308]
  44d2c8:	ldr	x8, [x19, #256]
  44d2cc:	cmp	x8, #0xff
  44d2d0:	b.ne	44d2fc <feof@plt+0x4a92c>  // b.any
  44d2d4:	ldp	x8, x2, [x19, #272]
  44d2d8:	mov	w1, #0xff                  	// #255
  44d2dc:	mov	x0, x19
  44d2e0:	strb	wzr, [x19, #255]
  44d2e4:	blr	x8
  44d2e8:	ldr	x9, [x19, #320]
  44d2ec:	mov	x8, xzr
  44d2f0:	str	xzr, [x19, #256]
  44d2f4:	add	x9, x9, #0x1
  44d2f8:	str	x9, [x19, #320]
  44d2fc:	add	x9, x8, #0x1
  44d300:	mov	w10, #0x29                  	// #41
  44d304:	str	x9, [x19, #256]
  44d308:	strb	w10, [x19, x8]
  44d30c:	strb	w10, [x19, #264]
  44d310:	ldr	w8, [x21]
  44d314:	cmp	w8, #0x32
  44d318:	b.ne	44d388 <feof@plt+0x4a9b8>  // b.any
  44d31c:	ldr	x8, [x21, #8]
  44d320:	ldrsw	x22, [x8, #16]
  44d324:	cbz	w22, 44d3fc <feof@plt+0x4aa2c>
  44d328:	ldr	x25, [x8, #8]
  44d32c:	b	44d34c <feof@plt+0x4a97c>
  44d330:	add	x9, x8, #0x1
  44d334:	subs	x22, x22, #0x1
  44d338:	add	x25, x25, #0x1
  44d33c:	str	x9, [x19, #256]
  44d340:	strb	w26, [x19, x8]
  44d344:	strb	w26, [x19, #264]
  44d348:	b.eq	44d3fc <feof@plt+0x4aa2c>  // b.none
  44d34c:	ldr	x8, [x19, #256]
  44d350:	ldrb	w26, [x25]
  44d354:	cmp	x8, #0xff
  44d358:	b.ne	44d330 <feof@plt+0x4a960>  // b.any
  44d35c:	ldp	x8, x2, [x19, #272]
  44d360:	mov	w1, #0xff                  	// #255
  44d364:	mov	x0, x19
  44d368:	strb	wzr, [x19, #255]
  44d36c:	blr	x8
  44d370:	ldr	x9, [x19, #320]
  44d374:	mov	x8, xzr
  44d378:	str	xzr, [x19, #256]
  44d37c:	add	x9, x9, #0x1
  44d380:	str	x9, [x19, #320]
  44d384:	b	44d330 <feof@plt+0x4a960>
  44d388:	ldr	w8, [x21, #4]
  44d38c:	cmp	w8, #0x1
  44d390:	b.gt	44d3a0 <feof@plt+0x4a9d0>
  44d394:	ldr	w9, [x19, #308]
  44d398:	cmp	w9, #0x401
  44d39c:	b.lt	44d3ac <feof@plt+0x4a9dc>  // b.tstop
  44d3a0:	mov	w8, #0x1                   	// #1
  44d3a4:	str	w8, [x19, #304]
  44d3a8:	b	44d3fc <feof@plt+0x4aa2c>
  44d3ac:	add	w8, w8, #0x1
  44d3b0:	str	w8, [x21, #4]
  44d3b4:	ldr	x8, [x19, #328]
  44d3b8:	add	w9, w9, #0x1
  44d3bc:	str	w9, [x19, #308]
  44d3c0:	mov	x9, sp
  44d3c4:	mov	x0, x19
  44d3c8:	mov	w1, w20
  44d3cc:	mov	x2, x21
  44d3d0:	stp	x21, x8, [sp]
  44d3d4:	str	x9, [x19, #328]
  44d3d8:	bl	445750 <feof@plt+0x42d80>
  44d3dc:	ldr	x8, [sp, #8]
  44d3e0:	str	x8, [x19, #328]
  44d3e4:	ldr	w8, [x21, #4]
  44d3e8:	sub	w8, w8, #0x1
  44d3ec:	str	w8, [x21, #4]
  44d3f0:	ldr	w8, [x19, #308]
  44d3f4:	sub	w8, w8, #0x1
  44d3f8:	str	w8, [x19, #308]
  44d3fc:	ldr	x8, [x19, #256]
  44d400:	cmp	x8, #0xff
  44d404:	b.ne	44d430 <feof@plt+0x4aa60>  // b.any
  44d408:	ldp	x8, x2, [x19, #272]
  44d40c:	mov	w1, #0xff                  	// #255
  44d410:	mov	x0, x19
  44d414:	strb	wzr, [x19, #255]
  44d418:	blr	x8
  44d41c:	ldr	x9, [x19, #320]
  44d420:	mov	x8, xzr
  44d424:	str	xzr, [x19, #256]
  44d428:	add	x9, x9, #0x1
  44d42c:	str	x9, [x19, #320]
  44d430:	add	x9, x8, #0x1
  44d434:	mov	w22, #0x2e                  	// #46
  44d438:	str	x9, [x19, #256]
  44d43c:	strb	w22, [x19, x8]
  44d440:	ldr	x8, [x19, #256]
  44d444:	strb	w22, [x19, #264]
  44d448:	cmp	x8, #0xff
  44d44c:	b.ne	44d478 <feof@plt+0x4aaa8>  // b.any
  44d450:	ldp	x8, x2, [x19, #272]
  44d454:	mov	w1, #0xff                  	// #255
  44d458:	mov	x0, x19
  44d45c:	strb	wzr, [x19, #255]
  44d460:	blr	x8
  44d464:	ldr	x9, [x19, #320]
  44d468:	mov	x8, xzr
  44d46c:	str	xzr, [x19, #256]
  44d470:	add	x9, x9, #0x1
  44d474:	str	x9, [x19, #320]
  44d478:	add	x9, x8, #0x1
  44d47c:	str	x9, [x19, #256]
  44d480:	strb	w22, [x19, x8]
  44d484:	ldr	x8, [x19, #256]
  44d488:	strb	w22, [x19, #264]
  44d48c:	cmp	x8, #0xff
  44d490:	b.ne	44d4bc <feof@plt+0x4aaec>  // b.any
  44d494:	ldp	x8, x2, [x19, #272]
  44d498:	mov	w1, #0xff                  	// #255
  44d49c:	mov	x0, x19
  44d4a0:	strb	wzr, [x19, #255]
  44d4a4:	blr	x8
  44d4a8:	ldr	x9, [x19, #320]
  44d4ac:	mov	x8, xzr
  44d4b0:	str	xzr, [x19, #256]
  44d4b4:	add	x9, x9, #0x1
  44d4b8:	str	x9, [x19, #320]
  44d4bc:	add	x9, x8, #0x1
  44d4c0:	mov	w10, #0x2e                  	// #46
  44d4c4:	str	x9, [x19, #256]
  44d4c8:	strb	w10, [x19, x8]
  44d4cc:	strb	w10, [x19, #264]
  44d4d0:	ldr	w8, [x21]
  44d4d4:	cmp	w8, #0x32
  44d4d8:	b.ne	44d548 <feof@plt+0x4ab78>  // b.any
  44d4dc:	ldr	x8, [x21, #8]
  44d4e0:	ldrsw	x21, [x8, #16]
  44d4e4:	cbz	w21, 44d5bc <feof@plt+0x4abec>
  44d4e8:	ldr	x22, [x8, #8]
  44d4ec:	b	44d50c <feof@plt+0x4ab3c>
  44d4f0:	add	x9, x8, #0x1
  44d4f4:	subs	x21, x21, #0x1
  44d4f8:	add	x22, x22, #0x1
  44d4fc:	str	x9, [x19, #256]
  44d500:	strb	w25, [x19, x8]
  44d504:	strb	w25, [x19, #264]
  44d508:	b.eq	44d5bc <feof@plt+0x4abec>  // b.none
  44d50c:	ldr	x8, [x19, #256]
  44d510:	ldrb	w25, [x22]
  44d514:	cmp	x8, #0xff
  44d518:	b.ne	44d4f0 <feof@plt+0x4ab20>  // b.any
  44d51c:	ldp	x8, x2, [x19, #272]
  44d520:	mov	w1, #0xff                  	// #255
  44d524:	mov	x0, x19
  44d528:	strb	wzr, [x19, #255]
  44d52c:	blr	x8
  44d530:	ldr	x9, [x19, #320]
  44d534:	mov	x8, xzr
  44d538:	str	xzr, [x19, #256]
  44d53c:	add	x9, x9, #0x1
  44d540:	str	x9, [x19, #320]
  44d544:	b	44d4f0 <feof@plt+0x4ab20>
  44d548:	ldr	w8, [x21, #4]
  44d54c:	cmp	w8, #0x1
  44d550:	b.gt	44d560 <feof@plt+0x4ab90>
  44d554:	ldr	w9, [x19, #308]
  44d558:	cmp	w9, #0x401
  44d55c:	b.lt	44d56c <feof@plt+0x4ab9c>  // b.tstop
  44d560:	mov	w8, #0x1                   	// #1
  44d564:	str	w8, [x19, #304]
  44d568:	b	44d5bc <feof@plt+0x4abec>
  44d56c:	add	w8, w8, #0x1
  44d570:	str	w8, [x21, #4]
  44d574:	ldr	x8, [x19, #328]
  44d578:	add	w9, w9, #0x1
  44d57c:	str	w9, [x19, #308]
  44d580:	mov	x9, sp
  44d584:	mov	x0, x19
  44d588:	mov	w1, w20
  44d58c:	mov	x2, x21
  44d590:	stp	x21, x8, [sp]
  44d594:	str	x9, [x19, #328]
  44d598:	bl	445750 <feof@plt+0x42d80>
  44d59c:	ldr	x8, [sp, #8]
  44d5a0:	str	x8, [x19, #328]
  44d5a4:	ldr	w8, [x21, #4]
  44d5a8:	sub	w8, w8, #0x1
  44d5ac:	str	w8, [x21, #4]
  44d5b0:	ldr	w8, [x19, #308]
  44d5b4:	sub	w8, w8, #0x1
  44d5b8:	str	w8, [x19, #308]
  44d5bc:	ldr	w8, [x23]
  44d5c0:	cmp	w8, #0x31
  44d5c4:	b.hi	44d658 <feof@plt+0x4ac88>  // b.pmore
  44d5c8:	mov	w9, #0x1                   	// #1
  44d5cc:	lsl	x8, x9, x8
  44d5d0:	mov	x9, #0x43                  	// #67
  44d5d4:	movk	x9, #0x2, lsl #48
  44d5d8:	tst	x8, x9
  44d5dc:	b.eq	44d658 <feof@plt+0x4ac88>  // b.none
  44d5e0:	ldr	w8, [x23, #4]
  44d5e4:	cmp	w8, #0x1
  44d5e8:	b.gt	44d5f8 <feof@plt+0x4ac28>
  44d5ec:	ldr	w9, [x19, #308]
  44d5f0:	cmp	w9, #0x401
  44d5f4:	b.lt	44d604 <feof@plt+0x4ac34>  // b.tstop
  44d5f8:	mov	w8, #0x1                   	// #1
  44d5fc:	str	w8, [x19, #304]
  44d600:	b	44d75c <feof@plt+0x4ad8c>
  44d604:	add	w8, w8, #0x1
  44d608:	str	w8, [x23, #4]
  44d60c:	ldr	x8, [x19, #328]
  44d610:	add	w9, w9, #0x1
  44d614:	str	w9, [x19, #308]
  44d618:	mov	x9, sp
  44d61c:	mov	x0, x19
  44d620:	mov	w1, w20
  44d624:	mov	x2, x23
  44d628:	stp	x23, x8, [sp]
  44d62c:	str	x9, [x19, #328]
  44d630:	bl	445750 <feof@plt+0x42d80>
  44d634:	ldr	x8, [sp, #8]
  44d638:	str	x8, [x19, #328]
  44d63c:	ldr	w8, [x23, #4]
  44d640:	sub	w8, w8, #0x1
  44d644:	str	w8, [x23, #4]
  44d648:	ldr	w8, [x19, #308]
  44d64c:	sub	w8, w8, #0x1
  44d650:	str	w8, [x19, #308]
  44d654:	b	44d75c <feof@plt+0x4ad8c>
  44d658:	ldr	x8, [x19, #256]
  44d65c:	cmp	x8, #0xff
  44d660:	b.ne	44d68c <feof@plt+0x4acbc>  // b.any
  44d664:	ldp	x8, x2, [x19, #272]
  44d668:	mov	w1, #0xff                  	// #255
  44d66c:	mov	x0, x19
  44d670:	strb	wzr, [x19, #255]
  44d674:	blr	x8
  44d678:	ldr	x9, [x19, #320]
  44d67c:	mov	x8, xzr
  44d680:	str	xzr, [x19, #256]
  44d684:	add	x9, x9, #0x1
  44d688:	str	x9, [x19, #320]
  44d68c:	add	x9, x8, #0x1
  44d690:	mov	w10, #0x28                  	// #40
  44d694:	str	x9, [x19, #256]
  44d698:	strb	w10, [x19, x8]
  44d69c:	strb	w10, [x19, #264]
  44d6a0:	ldr	w8, [x23, #4]
  44d6a4:	cmp	w8, #0x1
  44d6a8:	b.gt	44d6b8 <feof@plt+0x4ace8>
  44d6ac:	ldr	w9, [x19, #308]
  44d6b0:	cmp	w9, #0x401
  44d6b4:	b.lt	44d6c4 <feof@plt+0x4acf4>  // b.tstop
  44d6b8:	mov	w8, #0x1                   	// #1
  44d6bc:	str	w8, [x19, #304]
  44d6c0:	b	44d714 <feof@plt+0x4ad44>
  44d6c4:	add	w8, w8, #0x1
  44d6c8:	str	w8, [x23, #4]
  44d6cc:	ldr	x8, [x19, #328]
  44d6d0:	add	w9, w9, #0x1
  44d6d4:	str	w9, [x19, #308]
  44d6d8:	mov	x9, sp
  44d6dc:	mov	x0, x19
  44d6e0:	mov	w1, w20
  44d6e4:	mov	x2, x23
  44d6e8:	stp	x23, x8, [sp]
  44d6ec:	str	x9, [x19, #328]
  44d6f0:	bl	445750 <feof@plt+0x42d80>
  44d6f4:	ldr	x8, [sp, #8]
  44d6f8:	str	x8, [x19, #328]
  44d6fc:	ldr	w8, [x23, #4]
  44d700:	sub	w8, w8, #0x1
  44d704:	str	w8, [x23, #4]
  44d708:	ldr	w8, [x19, #308]
  44d70c:	sub	w8, w8, #0x1
  44d710:	str	w8, [x19, #308]
  44d714:	ldr	x8, [x19, #256]
  44d718:	cmp	x8, #0xff
  44d71c:	b.ne	44d748 <feof@plt+0x4ad78>  // b.any
  44d720:	ldp	x8, x2, [x19, #272]
  44d724:	mov	w1, #0xff                  	// #255
  44d728:	mov	x0, x19
  44d72c:	strb	wzr, [x19, #255]
  44d730:	blr	x8
  44d734:	ldr	x9, [x19, #320]
  44d738:	mov	x8, xzr
  44d73c:	str	xzr, [x19, #256]
  44d740:	add	x9, x9, #0x1
  44d744:	str	x9, [x19, #320]
  44d748:	add	x9, x8, #0x1
  44d74c:	mov	w10, #0x29                  	// #41
  44d750:	str	x9, [x19, #256]
  44d754:	strb	w10, [x19, x8]
  44d758:	strb	w10, [x19, #264]
  44d75c:	ldr	x8, [x19, #256]
  44d760:	cmp	x8, #0xff
  44d764:	b.ne	44d790 <feof@plt+0x4adc0>  // b.any
  44d768:	ldp	x8, x2, [x19, #272]
  44d76c:	mov	w1, #0xff                  	// #255
  44d770:	mov	x0, x19
  44d774:	strb	wzr, [x19, #255]
  44d778:	blr	x8
  44d77c:	ldr	x9, [x19, #320]
  44d780:	mov	x8, xzr
  44d784:	str	xzr, [x19, #256]
  44d788:	add	x9, x9, #0x1
  44d78c:	str	x9, [x19, #320]
  44d790:	add	x9, x8, #0x1
  44d794:	mov	w10, #0x29                  	// #41
  44d798:	str	x9, [x19, #256]
  44d79c:	strb	w10, [x19, x8]
  44d7a0:	strb	w10, [x19, #264]
  44d7a4:	mov	w0, #0x1                   	// #1
  44d7a8:	str	w24, [x19, #316]
  44d7ac:	ldp	x20, x19, [sp, #80]
  44d7b0:	ldp	x22, x21, [sp, #64]
  44d7b4:	ldp	x24, x23, [sp, #48]
  44d7b8:	ldp	x26, x25, [sp, #32]
  44d7bc:	ldp	x29, x30, [sp, #16]
  44d7c0:	add	sp, sp, #0x60
  44d7c4:	ret
  44d7c8:	add	w8, w8, #0x1
  44d7cc:	str	w8, [x22, #4]
  44d7d0:	ldr	x8, [x19, #328]
  44d7d4:	add	w9, w9, #0x1
  44d7d8:	str	w9, [x19, #308]
  44d7dc:	mov	x9, sp
  44d7e0:	mov	x0, x19
  44d7e4:	mov	w1, w20
  44d7e8:	mov	x2, x22
  44d7ec:	stp	x22, x8, [sp]
  44d7f0:	str	x9, [x19, #328]
  44d7f4:	bl	445750 <feof@plt+0x42d80>
  44d7f8:	ldr	x8, [sp, #8]
  44d7fc:	str	x8, [x19, #328]
  44d800:	ldr	w8, [x22, #4]
  44d804:	sub	w8, w8, #0x1
  44d808:	str	w8, [x22, #4]
  44d80c:	ldr	w8, [x19, #308]
  44d810:	sub	w8, w8, #0x1
  44d814:	str	w8, [x19, #308]
  44d818:	ldr	x8, [x19, #256]
  44d81c:	cmp	x8, #0xff
  44d820:	b.ne	44d84c <feof@plt+0x4ae7c>  // b.any
  44d824:	ldp	x8, x2, [x19, #272]
  44d828:	mov	w1, #0xff                  	// #255
  44d82c:	mov	x0, x19
  44d830:	strb	wzr, [x19, #255]
  44d834:	blr	x8
  44d838:	ldr	x9, [x19, #320]
  44d83c:	mov	x8, xzr
  44d840:	str	xzr, [x19, #256]
  44d844:	add	x9, x9, #0x1
  44d848:	str	x9, [x19, #320]
  44d84c:	add	x9, x8, #0x1
  44d850:	mov	w10, #0x29                  	// #41
  44d854:	str	x9, [x19, #256]
  44d858:	strb	w10, [x19, x8]
  44d85c:	strb	w10, [x19, #264]
  44d860:	ldr	w8, [x21]
  44d864:	cmp	w8, #0x32
  44d868:	b.ne	44d8d8 <feof@plt+0x4af08>  // b.any
  44d86c:	ldr	x8, [x21, #8]
  44d870:	ldrsw	x20, [x8, #16]
  44d874:	cbz	w20, 44d94c <feof@plt+0x4af7c>
  44d878:	ldr	x21, [x8, #8]
  44d87c:	b	44d89c <feof@plt+0x4aecc>
  44d880:	add	x9, x8, #0x1
  44d884:	subs	x20, x20, #0x1
  44d888:	add	x21, x21, #0x1
  44d88c:	str	x9, [x19, #256]
  44d890:	strb	w22, [x19, x8]
  44d894:	strb	w22, [x19, #264]
  44d898:	b.eq	44d94c <feof@plt+0x4af7c>  // b.none
  44d89c:	ldr	x8, [x19, #256]
  44d8a0:	ldrb	w22, [x21]
  44d8a4:	cmp	x8, #0xff
  44d8a8:	b.ne	44d880 <feof@plt+0x4aeb0>  // b.any
  44d8ac:	ldp	x8, x2, [x19, #272]
  44d8b0:	mov	w1, #0xff                  	// #255
  44d8b4:	mov	x0, x19
  44d8b8:	strb	wzr, [x19, #255]
  44d8bc:	blr	x8
  44d8c0:	ldr	x9, [x19, #320]
  44d8c4:	mov	x8, xzr
  44d8c8:	str	xzr, [x19, #256]
  44d8cc:	add	x9, x9, #0x1
  44d8d0:	str	x9, [x19, #320]
  44d8d4:	b	44d880 <feof@plt+0x4aeb0>
  44d8d8:	ldr	w8, [x21, #4]
  44d8dc:	cmp	w8, #0x1
  44d8e0:	b.gt	44d8f0 <feof@plt+0x4af20>
  44d8e4:	ldr	w9, [x19, #308]
  44d8e8:	cmp	w9, #0x401
  44d8ec:	b.lt	44d8fc <feof@plt+0x4af2c>  // b.tstop
  44d8f0:	mov	w8, #0x1                   	// #1
  44d8f4:	str	w8, [x19, #304]
  44d8f8:	b	44d94c <feof@plt+0x4af7c>
  44d8fc:	add	w8, w8, #0x1
  44d900:	str	w8, [x21, #4]
  44d904:	ldr	x8, [x19, #328]
  44d908:	add	w9, w9, #0x1
  44d90c:	str	w9, [x19, #308]
  44d910:	mov	x9, sp
  44d914:	mov	x0, x19
  44d918:	mov	w1, w20
  44d91c:	mov	x2, x21
  44d920:	stp	x21, x8, [sp]
  44d924:	str	x9, [x19, #328]
  44d928:	bl	445750 <feof@plt+0x42d80>
  44d92c:	ldr	x8, [sp, #8]
  44d930:	str	x8, [x19, #328]
  44d934:	ldr	w8, [x21, #4]
  44d938:	sub	w8, w8, #0x1
  44d93c:	str	w8, [x21, #4]
  44d940:	ldr	w8, [x19, #308]
  44d944:	sub	w8, w8, #0x1
  44d948:	str	w8, [x19, #308]
  44d94c:	ldr	x8, [x19, #256]
  44d950:	cmp	x8, #0xff
  44d954:	b.ne	44d980 <feof@plt+0x4afb0>  // b.any
  44d958:	ldp	x8, x2, [x19, #272]
  44d95c:	mov	w1, #0xff                  	// #255
  44d960:	mov	x0, x19
  44d964:	strb	wzr, [x19, #255]
  44d968:	blr	x8
  44d96c:	ldr	x9, [x19, #320]
  44d970:	mov	x8, xzr
  44d974:	str	xzr, [x19, #256]
  44d978:	add	x9, x9, #0x1
  44d97c:	str	x9, [x19, #320]
  44d980:	add	x9, x8, #0x1
  44d984:	mov	w20, #0x2e                  	// #46
  44d988:	str	x9, [x19, #256]
  44d98c:	strb	w20, [x19, x8]
  44d990:	ldr	x8, [x19, #256]
  44d994:	strb	w20, [x19, #264]
  44d998:	cmp	x8, #0xff
  44d99c:	b.ne	44d9c8 <feof@plt+0x4aff8>  // b.any
  44d9a0:	ldp	x8, x2, [x19, #272]
  44d9a4:	mov	w1, #0xff                  	// #255
  44d9a8:	mov	x0, x19
  44d9ac:	strb	wzr, [x19, #255]
  44d9b0:	blr	x8
  44d9b4:	ldr	x9, [x19, #320]
  44d9b8:	mov	x8, xzr
  44d9bc:	str	xzr, [x19, #256]
  44d9c0:	add	x9, x9, #0x1
  44d9c4:	str	x9, [x19, #320]
  44d9c8:	add	x9, x8, #0x1
  44d9cc:	str	x9, [x19, #256]
  44d9d0:	strb	w20, [x19, x8]
  44d9d4:	ldr	x8, [x19, #256]
  44d9d8:	strb	w20, [x19, #264]
  44d9dc:	cmp	x8, #0xff
  44d9e0:	b.ne	44da0c <feof@plt+0x4b03c>  // b.any
  44d9e4:	ldp	x8, x2, [x19, #272]
  44d9e8:	mov	w1, #0xff                  	// #255
  44d9ec:	mov	x0, x19
  44d9f0:	strb	wzr, [x19, #255]
  44d9f4:	blr	x8
  44d9f8:	ldr	x9, [x19, #320]
  44d9fc:	mov	x8, xzr
  44da00:	str	xzr, [x19, #256]
  44da04:	add	x9, x9, #0x1
  44da08:	str	x9, [x19, #320]
  44da0c:	add	x9, x8, #0x1
  44da10:	mov	w10, #0x2e                  	// #46
  44da14:	str	x9, [x19, #256]
  44da18:	strb	w10, [x19, x8]
  44da1c:	ldr	x8, [x19, #256]
  44da20:	strb	w10, [x19, #264]
  44da24:	cmp	x8, #0xff
  44da28:	b.eq	44d768 <feof@plt+0x4ad98>  // b.none
  44da2c:	b	44d790 <feof@plt+0x4adc0>
  44da30:	sub	sp, sp, #0x70
  44da34:	stp	x29, x30, [sp, #32]
  44da38:	str	x25, [sp, #48]
  44da3c:	stp	x24, x23, [sp, #64]
  44da40:	stp	x22, x21, [sp, #80]
  44da44:	stp	x20, x19, [sp, #96]
  44da48:	add	x29, sp, #0x20
  44da4c:	cbz	x2, 44da5c <feof@plt+0x4b08c>
  44da50:	ldr	w8, [x0, #304]
  44da54:	mov	x19, x0
  44da58:	cbz	w8, 44da78 <feof@plt+0x4b0a8>
  44da5c:	ldp	x20, x19, [sp, #96]
  44da60:	ldp	x22, x21, [sp, #80]
  44da64:	ldp	x24, x23, [sp, #64]
  44da68:	ldr	x25, [sp, #48]
  44da6c:	ldp	x29, x30, [sp, #32]
  44da70:	add	sp, sp, #0x70
  44da74:	ret
  44da78:	ldr	w8, [x2, #16]
  44da7c:	mov	w22, w3
  44da80:	mov	x21, x2
  44da84:	mov	w20, w1
  44da88:	cbz	w8, 44dab8 <feof@plt+0x4b0e8>
  44da8c:	ldr	x2, [x21]
  44da90:	mov	x0, x19
  44da94:	mov	w1, w20
  44da98:	mov	w3, w22
  44da9c:	ldp	x20, x19, [sp, #96]
  44daa0:	ldp	x22, x21, [sp, #80]
  44daa4:	ldp	x24, x23, [sp, #64]
  44daa8:	ldr	x25, [sp, #48]
  44daac:	ldp	x29, x30, [sp, #32]
  44dab0:	add	sp, sp, #0x70
  44dab4:	b	44da30 <feof@plt+0x4b060>
  44dab8:	ldr	x2, [x21, #8]
  44dabc:	ldr	w8, [x2]
  44dac0:	cbz	w22, 44db04 <feof@plt+0x4b134>
  44dac4:	mov	w9, #0x1                   	// #1
  44dac8:	str	w9, [x21, #16]
  44dacc:	ldr	x9, [x21, #24]
  44dad0:	ldr	x23, [x19, #288]
  44dad4:	cmp	w8, #0x2
  44dad8:	str	x9, [x19, #288]
  44dadc:	b.eq	44db2c <feof@plt+0x4b15c>  // b.none
  44dae0:	cmp	w8, #0x2a
  44dae4:	b.eq	44dbf4 <feof@plt+0x4b224>  // b.none
  44dae8:	cmp	w8, #0x29
  44daec:	b.ne	44dc08 <feof@plt+0x4b238>  // b.any
  44daf0:	ldr	x3, [x21]
  44daf4:	mov	x0, x19
  44daf8:	mov	w1, w20
  44dafc:	bl	44c588 <feof@plt+0x49bb8>
  44db00:	b	44dee4 <feof@plt+0x4b514>
  44db04:	sub	w9, w8, #0x1c
  44db08:	cmp	w9, #0x34
  44db0c:	b.hi	44dac4 <feof@plt+0x4b0f4>  // b.pmore
  44db10:	mov	w10, #0x1                   	// #1
  44db14:	lsl	x9, x10, x9
  44db18:	mov	x10, #0x1f                  	// #31
  44db1c:	movk	x10, #0x1a, lsl #48
  44db20:	tst	x9, x10
  44db24:	b.ne	44da8c <feof@plt+0x4b0bc>  // b.any
  44db28:	b	44dac4 <feof@plt+0x4b0f4>
  44db2c:	ldr	x24, [x19, #296]
  44db30:	str	xzr, [x19, #296]
  44db34:	ldr	x22, [x2, #8]
  44db38:	cbz	x22, 44db54 <feof@plt+0x4b184>
  44db3c:	ldr	w8, [x22, #4]
  44db40:	cmp	w8, #0x1
  44db44:	b.gt	44db54 <feof@plt+0x4b184>
  44db48:	ldr	w9, [x19, #308]
  44db4c:	cmp	w9, #0x401
  44db50:	b.lt	44dc1c <feof@plt+0x4b24c>  // b.tstop
  44db54:	mov	w8, #0x1                   	// #1
  44db58:	str	w8, [x19, #304]
  44db5c:	str	x24, [x19, #296]
  44db60:	tbnz	w20, #2, 44dc74 <feof@plt+0x4b2a4>
  44db64:	ldr	x8, [x19, #256]
  44db68:	cmp	x8, #0xff
  44db6c:	b.ne	44db98 <feof@plt+0x4b1c8>  // b.any
  44db70:	ldp	x8, x2, [x19, #272]
  44db74:	mov	w1, #0xff                  	// #255
  44db78:	mov	x0, x19
  44db7c:	strb	wzr, [x19, #255]
  44db80:	blr	x8
  44db84:	ldr	x9, [x19, #320]
  44db88:	mov	x8, xzr
  44db8c:	str	xzr, [x19, #256]
  44db90:	add	x9, x9, #0x1
  44db94:	str	x9, [x19, #320]
  44db98:	add	x9, x8, #0x1
  44db9c:	mov	w22, #0x3a                  	// #58
  44dba0:	str	x9, [x19, #256]
  44dba4:	strb	w22, [x19, x8]
  44dba8:	ldr	x8, [x19, #256]
  44dbac:	strb	w22, [x19, #264]
  44dbb0:	cmp	x8, #0xff
  44dbb4:	b.ne	44dbe0 <feof@plt+0x4b210>  // b.any
  44dbb8:	ldp	x8, x2, [x19, #272]
  44dbbc:	mov	w1, #0xff                  	// #255
  44dbc0:	mov	x0, x19
  44dbc4:	strb	wzr, [x19, #255]
  44dbc8:	blr	x8
  44dbcc:	ldr	x9, [x19, #320]
  44dbd0:	mov	x8, xzr
  44dbd4:	str	xzr, [x19, #256]
  44dbd8:	add	x9, x9, #0x1
  44dbdc:	str	x9, [x19, #320]
  44dbe0:	add	x9, x8, #0x1
  44dbe4:	str	x9, [x19, #256]
  44dbe8:	strb	w22, [x19, x8]
  44dbec:	strb	w22, [x19, #264]
  44dbf0:	b	44dcbc <feof@plt+0x4b2ec>
  44dbf4:	ldr	x3, [x21]
  44dbf8:	mov	x0, x19
  44dbfc:	mov	w1, w20
  44dc00:	bl	44c860 <feof@plt+0x49e90>
  44dc04:	b	44dee4 <feof@plt+0x4b514>
  44dc08:	mov	x0, x19
  44dc0c:	mov	w1, w20
  44dc10:	bl	44b9e8 <feof@plt+0x49018>
  44dc14:	str	x23, [x19, #288]
  44dc18:	b	44da8c <feof@plt+0x4b0bc>
  44dc1c:	add	w8, w8, #0x1
  44dc20:	str	w8, [x22, #4]
  44dc24:	ldr	x8, [x19, #328]
  44dc28:	add	w9, w9, #0x1
  44dc2c:	str	w9, [x19, #308]
  44dc30:	mov	x9, sp
  44dc34:	mov	x0, x19
  44dc38:	mov	w1, w20
  44dc3c:	mov	x2, x22
  44dc40:	stp	x22, x8, [sp]
  44dc44:	str	x9, [x19, #328]
  44dc48:	bl	445750 <feof@plt+0x42d80>
  44dc4c:	ldr	x8, [sp, #8]
  44dc50:	str	x8, [x19, #328]
  44dc54:	ldr	w8, [x22, #4]
  44dc58:	sub	w8, w8, #0x1
  44dc5c:	str	w8, [x22, #4]
  44dc60:	ldr	w8, [x19, #308]
  44dc64:	sub	w8, w8, #0x1
  44dc68:	str	w8, [x19, #308]
  44dc6c:	str	x24, [x19, #296]
  44dc70:	tbz	w20, #2, 44db64 <feof@plt+0x4b194>
  44dc74:	ldr	x8, [x19, #256]
  44dc78:	cmp	x8, #0xff
  44dc7c:	b.ne	44dca8 <feof@plt+0x4b2d8>  // b.any
  44dc80:	ldp	x8, x2, [x19, #272]
  44dc84:	mov	w1, #0xff                  	// #255
  44dc88:	mov	x0, x19
  44dc8c:	strb	wzr, [x19, #255]
  44dc90:	blr	x8
  44dc94:	ldr	x9, [x19, #320]
  44dc98:	mov	x8, xzr
  44dc9c:	str	xzr, [x19, #256]
  44dca0:	add	x9, x9, #0x1
  44dca4:	str	x9, [x19, #320]
  44dca8:	add	x9, x8, #0x1
  44dcac:	mov	w10, #0x2e                  	// #46
  44dcb0:	str	x9, [x19, #256]
  44dcb4:	strb	w10, [x19, x8]
  44dcb8:	strb	w10, [x19, #264]
  44dcbc:	ldr	x8, [x21, #8]
  44dcc0:	ldr	x21, [x8, #16]
  44dcc4:	ldr	w8, [x21]
  44dcc8:	cmp	w8, #0x47
  44dccc:	b.ne	44de98 <feof@plt+0x4b4c8>  // b.any
  44dcd0:	adrp	x24, 461000 <_obstack_memory_used@@Base+0x10a68>
  44dcd4:	mov	x22, xzr
  44dcd8:	add	x24, x24, #0x4ba
  44dcdc:	b	44dcfc <feof@plt+0x4b32c>
  44dce0:	add	x22, x22, #0x1
  44dce4:	add	x9, x8, #0x1
  44dce8:	cmp	x22, #0xd
  44dcec:	str	x9, [x19, #256]
  44dcf0:	strb	w25, [x19, x8]
  44dcf4:	strb	w25, [x19, #264]
  44dcf8:	b.eq	44dd38 <feof@plt+0x4b368>  // b.none
  44dcfc:	ldr	x8, [x19, #256]
  44dd00:	ldrb	w25, [x24, x22]
  44dd04:	cmp	x8, #0xff
  44dd08:	b.ne	44dce0 <feof@plt+0x4b310>  // b.any
  44dd0c:	ldp	x8, x2, [x19, #272]
  44dd10:	mov	w1, #0xff                  	// #255
  44dd14:	mov	x0, x19
  44dd18:	strb	wzr, [x19, #255]
  44dd1c:	blr	x8
  44dd20:	ldr	x9, [x19, #320]
  44dd24:	mov	x8, xzr
  44dd28:	str	xzr, [x19, #256]
  44dd2c:	add	x9, x9, #0x1
  44dd30:	str	x9, [x19, #320]
  44dd34:	b	44dce0 <feof@plt+0x4b310>
  44dd38:	ldr	w8, [x21, #16]
  44dd3c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x1a68>
  44dd40:	add	x1, x1, #0x6e9
  44dd44:	mov	x0, sp
  44dd48:	add	w2, w8, #0x1
  44dd4c:	bl	4025b0 <sprintf@plt>
  44dd50:	mov	x0, sp
  44dd54:	bl	402420 <strlen@plt>
  44dd58:	cbz	x0, 44ddc0 <feof@plt+0x4b3f0>
  44dd5c:	mov	x22, x0
  44dd60:	mov	x24, sp
  44dd64:	b	44dd84 <feof@plt+0x4b3b4>
  44dd68:	add	x9, x8, #0x1
  44dd6c:	subs	x22, x22, #0x1
  44dd70:	add	x24, x24, #0x1
  44dd74:	str	x9, [x19, #256]
  44dd78:	strb	w25, [x19, x8]
  44dd7c:	strb	w25, [x19, #264]
  44dd80:	b.eq	44ddc0 <feof@plt+0x4b3f0>  // b.none
  44dd84:	ldr	x8, [x19, #256]
  44dd88:	ldrb	w25, [x24]
  44dd8c:	cmp	x8, #0xff
  44dd90:	b.ne	44dd68 <feof@plt+0x4b398>  // b.any
  44dd94:	ldp	x8, x2, [x19, #272]
  44dd98:	mov	w1, #0xff                  	// #255
  44dd9c:	mov	x0, x19
  44dda0:	strb	wzr, [x19, #255]
  44dda4:	blr	x8
  44dda8:	ldr	x9, [x19, #320]
  44ddac:	mov	x8, xzr
  44ddb0:	str	xzr, [x19, #256]
  44ddb4:	add	x9, x9, #0x1
  44ddb8:	str	x9, [x19, #320]
  44ddbc:	b	44dd68 <feof@plt+0x4b398>
  44ddc0:	ldr	x8, [x19, #256]
  44ddc4:	cmp	x8, #0xff
  44ddc8:	b.ne	44ddf4 <feof@plt+0x4b424>  // b.any
  44ddcc:	ldp	x8, x2, [x19, #272]
  44ddd0:	mov	w1, #0xff                  	// #255
  44ddd4:	mov	x0, x19
  44ddd8:	strb	wzr, [x19, #255]
  44dddc:	blr	x8
  44dde0:	ldr	x9, [x19, #320]
  44dde4:	mov	x8, xzr
  44dde8:	str	xzr, [x19, #256]
  44ddec:	add	x9, x9, #0x1
  44ddf0:	str	x9, [x19, #320]
  44ddf4:	add	x9, x8, #0x1
  44ddf8:	mov	w10, #0x7d                  	// #125
  44ddfc:	str	x9, [x19, #256]
  44de00:	strb	w10, [x19, x8]
  44de04:	ldr	x8, [x19, #256]
  44de08:	strb	w10, [x19, #264]
  44de0c:	cmp	x8, #0xff
  44de10:	b.ne	44de3c <feof@plt+0x4b46c>  // b.any
  44de14:	ldp	x8, x2, [x19, #272]
  44de18:	mov	w1, #0xff                  	// #255
  44de1c:	mov	x0, x19
  44de20:	strb	wzr, [x19, #255]
  44de24:	blr	x8
  44de28:	ldr	x9, [x19, #320]
  44de2c:	mov	x8, xzr
  44de30:	str	xzr, [x19, #256]
  44de34:	add	x9, x9, #0x1
  44de38:	str	x9, [x19, #320]
  44de3c:	add	x9, x8, #0x1
  44de40:	mov	w22, #0x3a                  	// #58
  44de44:	str	x9, [x19, #256]
  44de48:	strb	w22, [x19, x8]
  44de4c:	ldr	x8, [x19, #256]
  44de50:	strb	w22, [x19, #264]
  44de54:	cmp	x8, #0xff
  44de58:	b.ne	44de84 <feof@plt+0x4b4b4>  // b.any
  44de5c:	ldp	x8, x2, [x19, #272]
  44de60:	mov	w1, #0xff                  	// #255
  44de64:	mov	x0, x19
  44de68:	strb	wzr, [x19, #255]
  44de6c:	blr	x8
  44de70:	ldr	x9, [x19, #320]
  44de74:	mov	x8, xzr
  44de78:	str	xzr, [x19, #256]
  44de7c:	add	x9, x9, #0x1
  44de80:	str	x9, [x19, #320]
  44de84:	add	x9, x8, #0x1
  44de88:	str	x9, [x19, #256]
  44de8c:	strb	w22, [x19, x8]
  44de90:	strb	w22, [x19, #264]
  44de94:	ldr	x21, [x21, #8]
  44de98:	ldr	w8, [x21]
  44de9c:	sub	w8, w8, #0x1c
  44dea0:	cmp	w8, #0x34
  44dea4:	b.hi	44dec0 <feof@plt+0x4b4f0>  // b.pmore
  44dea8:	mov	w9, #0x1                   	// #1
  44deac:	lsl	x8, x9, x8
  44deb0:	mov	x9, #0x1f                  	// #31
  44deb4:	movk	x9, #0x1a, lsl #48
  44deb8:	tst	x8, x9
  44debc:	b.ne	44de94 <feof@plt+0x4b4c4>  // b.any
  44dec0:	cbz	x21, 44dedc <feof@plt+0x4b50c>
  44dec4:	ldr	w8, [x21, #4]
  44dec8:	cmp	w8, #0x1
  44decc:	b.gt	44dedc <feof@plt+0x4b50c>
  44ded0:	ldr	w9, [x19, #308]
  44ded4:	cmp	w9, #0x401
  44ded8:	b.lt	44deec <feof@plt+0x4b51c>  // b.tstop
  44dedc:	mov	w8, #0x1                   	// #1
  44dee0:	str	w8, [x19, #304]
  44dee4:	str	x23, [x19, #288]
  44dee8:	b	44da5c <feof@plt+0x4b08c>
  44deec:	add	w8, w8, #0x1
  44def0:	str	w8, [x21, #4]
  44def4:	ldr	x8, [x19, #328]
  44def8:	add	w9, w9, #0x1
  44defc:	str	w9, [x19, #308]
  44df00:	mov	x9, sp
  44df04:	mov	x0, x19
  44df08:	mov	w1, w20
  44df0c:	mov	x2, x21
  44df10:	stp	x21, x8, [sp]
  44df14:	str	x9, [x19, #328]
  44df18:	bl	445750 <feof@plt+0x42d80>
  44df1c:	ldr	x8, [sp, #8]
  44df20:	str	x8, [x19, #328]
  44df24:	ldr	w8, [x21, #4]
  44df28:	sub	w8, w8, #0x1
  44df2c:	str	w8, [x21, #4]
  44df30:	ldr	w8, [x19, #308]
  44df34:	sub	w8, w8, #0x1
  44df38:	str	w8, [x19, #308]
  44df3c:	b	44dee4 <feof@plt+0x4b514>
  44df40:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  44df44:	ldr	q0, [x8, #1760]
  44df48:	str	xzr, [x0, #16]
  44df4c:	str	wzr, [x0, #24]
  44df50:	str	q0, [x0]
  44df54:	ret
  44df58:	ldr	q0, [x0]
  44df5c:	mov	x0, x1
  44df60:	str	q0, [x1]
  44df64:	ret
  44df68:	stp	x29, x30, [sp, #-80]!
  44df6c:	str	x25, [sp, #16]
  44df70:	stp	x24, x23, [sp, #32]
  44df74:	stp	x22, x21, [sp, #48]
  44df78:	stp	x20, x19, [sp, #64]
  44df7c:	ldp	w24, w23, [x0, #20]
  44df80:	ldr	w8, [x0, #16]
  44df84:	mov	x19, x1
  44df88:	mov	x20, x0
  44df8c:	mov	x29, sp
  44df90:	adds	w25, w8, w23
  44df94:	str	w25, [x0, #16]
  44df98:	b.cc	44dfa4 <feof@plt+0x4b5d4>  // b.lo, b.ul, b.last
  44df9c:	add	w24, w24, #0x1
  44dfa0:	str	w24, [x20, #20]
  44dfa4:	cmp	w23, #0x38
  44dfa8:	mov	w8, #0x78                  	// #120
  44dfac:	mov	w9, #0x38                  	// #56
  44dfb0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  44dfb4:	add	x21, x20, #0x1c
  44dfb8:	sub	w22, w8, w23
  44dfbc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44dfc0:	add	x0, x21, x23
  44dfc4:	add	x1, x1, #0x6f0
  44dfc8:	mov	x2, x22
  44dfcc:	bl	402390 <memcpy@plt>
  44dfd0:	add	x9, x22, x23
  44dfd4:	lsl	w8, w25, #3
  44dfd8:	extr	w10, w24, w25, #29
  44dfdc:	add	x11, x21, x9
  44dfe0:	add	x1, x9, #0x8
  44dfe4:	mov	x0, x21
  44dfe8:	mov	x2, x20
  44dfec:	stp	w8, w10, [x11]
  44dff0:	bl	44e018 <feof@plt+0x4b648>
  44dff4:	ldr	q0, [x20]
  44dff8:	mov	x0, x19
  44dffc:	ldr	x25, [sp, #16]
  44e000:	str	q0, [x19]
  44e004:	ldp	x20, x19, [sp, #64]
  44e008:	ldp	x22, x21, [sp, #48]
  44e00c:	ldp	x24, x23, [sp, #32]
  44e010:	ldp	x29, x30, [sp], #80
  44e014:	ret
  44e018:	stp	x29, x30, [sp, #-96]!
  44e01c:	stp	x28, x27, [sp, #16]
  44e020:	stp	x26, x25, [sp, #32]
  44e024:	stp	x24, x23, [sp, #48]
  44e028:	stp	x22, x21, [sp, #64]
  44e02c:	stp	x20, x19, [sp, #80]
  44e030:	ldp	w10, w13, [x2, #12]
  44e034:	ldr	w14, [x2, #20]
  44e038:	ldp	w8, w9, [x2]
  44e03c:	ldr	w11, [x2, #8]
  44e040:	add	w13, w13, w1
  44e044:	and	x12, x1, #0xfffffffffffffffc
  44e048:	cmp	x13, x1
  44e04c:	lsr	x15, x1, #32
  44e050:	add	x12, x0, x12
  44e054:	str	w13, [x2, #16]
  44e058:	cinc	w13, w15, cc  // cc = lo, ul, last
  44e05c:	add	w13, w14, w13
  44e060:	cmp	x12, x0
  44e064:	str	w13, [x2, #20]
  44e068:	b.ls	44ea20 <feof@plt+0x4c050>  // b.plast
  44e06c:	mov	w22, #0xd391                	// #54161
  44e070:	movk	w22, #0xeb86, lsl #16
  44e074:	ldp	w29, w25, [x0]
  44e078:	bic	w4, w10, w9
  44e07c:	and	w5, w11, w9
  44e080:	orr	w4, w5, w4
  44e084:	add	w4, w8, w4
  44e088:	mov	w19, #0xa478                	// #42104
  44e08c:	add	w4, w4, w29
  44e090:	movk	w19, #0xd76a, lsl #16
  44e094:	add	w4, w4, w19
  44e098:	ror	w4, w4, #25
  44e09c:	add	w4, w4, w9
  44e0a0:	bic	w19, w11, w4
  44e0a4:	and	w20, w9, w4
  44e0a8:	add	w5, w10, w25
  44e0ac:	orr	w19, w20, w19
  44e0b0:	add	w5, w5, w19
  44e0b4:	mov	w19, #0xb756                	// #46934
  44e0b8:	movk	w19, #0xe8c7, lsl #16
  44e0bc:	ldp	w23, w28, [x0, #8]
  44e0c0:	add	w5, w5, w19
  44e0c4:	ror	w5, w5, #20
  44e0c8:	add	w5, w5, w4
  44e0cc:	bic	w19, w9, w5
  44e0d0:	and	w20, w4, w5
  44e0d4:	add	w6, w11, w23
  44e0d8:	orr	w19, w20, w19
  44e0dc:	add	w6, w6, w19
  44e0e0:	mov	w19, #0x70db                	// #28891
  44e0e4:	ldp	w24, w14, [x0, #16]
  44e0e8:	movk	w19, #0x2420, lsl #16
  44e0ec:	add	w6, w6, w19
  44e0f0:	ror	w6, w6, #15
  44e0f4:	add	w6, w6, w5
  44e0f8:	add	w20, w24, w4
  44e0fc:	bic	w4, w4, w6
  44e100:	and	w19, w5, w6
  44e104:	add	w7, w9, w28
  44e108:	orr	w4, w19, w4
  44e10c:	add	w4, w7, w4
  44e110:	mov	w7, #0xceee                	// #52974
  44e114:	movk	w7, #0xc1bd, lsl #16
  44e118:	add	w4, w4, w7
  44e11c:	ror	w4, w4, #10
  44e120:	add	w4, w4, w6
  44e124:	add	w19, w14, w5
  44e128:	bic	w5, w5, w4
  44e12c:	and	w7, w6, w4
  44e130:	orr	w5, w7, w5
  44e134:	add	w5, w20, w5
  44e138:	mov	w20, #0xfaf                 	// #4015
  44e13c:	ldp	w27, w17, [x0, #24]
  44e140:	movk	w20, #0xf57c, lsl #16
  44e144:	add	w5, w5, w20
  44e148:	ror	w5, w5, #25
  44e14c:	add	w5, w5, w4
  44e150:	add	w7, w27, w6
  44e154:	bic	w6, w6, w5
  44e158:	and	w20, w4, w5
  44e15c:	orr	w6, w20, w6
  44e160:	add	w6, w19, w6
  44e164:	mov	w19, #0xc62a                	// #50730
  44e168:	movk	w19, #0x4787, lsl #16
  44e16c:	add	w6, w6, w19
  44e170:	ror	w6, w6, #20
  44e174:	add	w6, w6, w5
  44e178:	add	w20, w17, w4
  44e17c:	bic	w4, w4, w6
  44e180:	and	w19, w5, w6
  44e184:	orr	w4, w19, w4
  44e188:	add	w4, w7, w4
  44e18c:	mov	w7, #0x4613                	// #17939
  44e190:	ldp	w13, w26, [x0, #32]
  44e194:	movk	w7, #0xa830, lsl #16
  44e198:	add	w4, w4, w7
  44e19c:	ror	w4, w4, #15
  44e1a0:	add	w4, w4, w6
  44e1a4:	add	w19, w13, w5
  44e1a8:	bic	w5, w5, w4
  44e1ac:	and	w7, w6, w4
  44e1b0:	orr	w5, w7, w5
  44e1b4:	add	w5, w20, w5
  44e1b8:	mov	w20, #0x9501                	// #38145
  44e1bc:	movk	w20, #0xfd46, lsl #16
  44e1c0:	add	w5, w5, w20
  44e1c4:	ror	w5, w5, #10
  44e1c8:	add	w5, w5, w4
  44e1cc:	add	w7, w26, w6
  44e1d0:	bic	w6, w6, w5
  44e1d4:	and	w20, w4, w5
  44e1d8:	orr	w6, w20, w6
  44e1dc:	add	w6, w19, w6
  44e1e0:	mov	w19, #0x98d8                	// #39128
  44e1e4:	ldp	w16, w30, [x0, #40]
  44e1e8:	movk	w19, #0x6980, lsl #16
  44e1ec:	add	w6, w6, w19
  44e1f0:	ror	w6, w6, #25
  44e1f4:	add	w6, w6, w5
  44e1f8:	add	w20, w16, w4
  44e1fc:	bic	w4, w4, w6
  44e200:	and	w19, w5, w6
  44e204:	orr	w4, w19, w4
  44e208:	add	w4, w7, w4
  44e20c:	mov	w7, #0xf7af                	// #63407
  44e210:	movk	w7, #0x8b44, lsl #16
  44e214:	add	w4, w4, w7
  44e218:	ror	w4, w4, #20
  44e21c:	add	w4, w4, w6
  44e220:	add	w19, w30, w5
  44e224:	bic	w5, w5, w4
  44e228:	and	w7, w6, w4
  44e22c:	orr	w5, w7, w5
  44e230:	ldp	w1, w15, [x0, #48]
  44e234:	add	w5, w20, w5
  44e238:	mov	w20, #0xffff5bb1            	// #-42063
  44e23c:	add	w5, w5, w20
  44e240:	ror	w5, w5, #15
  44e244:	add	w5, w5, w4
  44e248:	add	w7, w1, w6
  44e24c:	bic	w6, w6, w5
  44e250:	and	w20, w4, w5
  44e254:	orr	w6, w20, w6
  44e258:	add	w6, w19, w6
  44e25c:	mov	w19, #0xd7be                	// #55230
  44e260:	movk	w19, #0x895c, lsl #16
  44e264:	add	w6, w6, w19
  44e268:	ror	w6, w6, #10
  44e26c:	add	w6, w6, w5
  44e270:	add	w20, w15, w4
  44e274:	bic	w4, w4, w6
  44e278:	and	w19, w5, w6
  44e27c:	orr	w4, w19, w4
  44e280:	add	w4, w7, w4
  44e284:	mov	w7, #0x1122                	// #4386
  44e288:	ldp	w3, w18, [x0, #56]
  44e28c:	movk	w7, #0x6b90, lsl #16
  44e290:	add	w4, w4, w7
  44e294:	ror	w4, w4, #25
  44e298:	add	w4, w4, w6
  44e29c:	add	w19, w3, w5
  44e2a0:	bic	w5, w5, w4
  44e2a4:	and	w7, w6, w4
  44e2a8:	orr	w5, w7, w5
  44e2ac:	add	w5, w20, w5
  44e2b0:	mov	w20, #0x7193                	// #29075
  44e2b4:	movk	w20, #0xfd98, lsl #16
  44e2b8:	add	w5, w5, w20
  44e2bc:	ror	w5, w5, #20
  44e2c0:	add	w5, w5, w4
  44e2c4:	add	w7, w18, w6
  44e2c8:	bic	w6, w6, w5
  44e2cc:	and	w20, w4, w5
  44e2d0:	orr	w6, w20, w6
  44e2d4:	add	w6, w19, w6
  44e2d8:	mov	w19, #0x438e                	// #17294
  44e2dc:	movk	w19, #0xa679, lsl #16
  44e2e0:	add	w6, w6, w19
  44e2e4:	ror	w6, w6, #15
  44e2e8:	add	w6, w6, w5
  44e2ec:	add	w20, w25, w4
  44e2f0:	bic	w4, w4, w6
  44e2f4:	and	w19, w5, w6
  44e2f8:	orr	w4, w19, w4
  44e2fc:	mov	w21, #0x821                 	// #2081
  44e300:	add	w4, w7, w4
  44e304:	movk	w21, #0x49b4, lsl #16
  44e308:	add	w4, w4, w21
  44e30c:	ror	w4, w4, #10
  44e310:	add	w4, w4, w6
  44e314:	add	w19, w27, w5
  44e318:	bic	w7, w6, w5
  44e31c:	and	w5, w4, w5
  44e320:	orr	w5, w5, w7
  44e324:	mov	w21, #0x2562                	// #9570
  44e328:	add	w5, w20, w5
  44e32c:	movk	w21, #0xf61e, lsl #16
  44e330:	add	w5, w5, w21
  44e334:	ror	w5, w5, #27
  44e338:	add	w5, w5, w4
  44e33c:	add	w7, w30, w6
  44e340:	bic	w20, w4, w6
  44e344:	and	w6, w5, w6
  44e348:	orr	w6, w6, w20
  44e34c:	mov	w21, #0xb340                	// #45888
  44e350:	add	w6, w19, w6
  44e354:	movk	w21, #0xc040, lsl #16
  44e358:	add	w6, w6, w21
  44e35c:	ror	w6, w6, #23
  44e360:	add	w6, w6, w5
  44e364:	add	w20, w29, w4
  44e368:	bic	w19, w5, w4
  44e36c:	and	w4, w6, w4
  44e370:	orr	w4, w4, w19
  44e374:	mov	w21, #0x5a51                	// #23121
  44e378:	add	w4, w7, w4
  44e37c:	movk	w21, #0x265e, lsl #16
  44e380:	add	w4, w4, w21
  44e384:	ror	w4, w4, #18
  44e388:	add	w4, w4, w6
  44e38c:	add	w19, w14, w5
  44e390:	bic	w7, w6, w5
  44e394:	and	w5, w4, w5
  44e398:	orr	w5, w5, w7
  44e39c:	mov	w21, #0xc7aa                	// #51114
  44e3a0:	add	w5, w20, w5
  44e3a4:	movk	w21, #0xe9b6, lsl #16
  44e3a8:	add	w5, w5, w21
  44e3ac:	ror	w5, w5, #12
  44e3b0:	add	w5, w5, w4
  44e3b4:	add	w7, w16, w6
  44e3b8:	bic	w20, w4, w6
  44e3bc:	and	w6, w5, w6
  44e3c0:	orr	w6, w6, w20
  44e3c4:	mov	w21, #0x105d                	// #4189
  44e3c8:	add	w6, w19, w6
  44e3cc:	movk	w21, #0xd62f, lsl #16
  44e3d0:	add	w6, w6, w21
  44e3d4:	ror	w6, w6, #27
  44e3d8:	add	w6, w6, w5
  44e3dc:	add	w20, w18, w4
  44e3e0:	bic	w19, w5, w4
  44e3e4:	and	w4, w6, w4
  44e3e8:	orr	w4, w4, w19
  44e3ec:	mov	w21, #0x1453                	// #5203
  44e3f0:	add	w4, w7, w4
  44e3f4:	movk	w21, #0x244, lsl #16
  44e3f8:	add	w4, w4, w21
  44e3fc:	ror	w4, w4, #23
  44e400:	add	w4, w4, w6
  44e404:	add	w19, w24, w5
  44e408:	bic	w7, w6, w5
  44e40c:	and	w5, w4, w5
  44e410:	orr	w5, w5, w7
  44e414:	mov	w21, #0xe681                	// #59009
  44e418:	add	w5, w20, w5
  44e41c:	movk	w21, #0xd8a1, lsl #16
  44e420:	add	w5, w5, w21
  44e424:	ror	w5, w5, #18
  44e428:	add	w5, w5, w4
  44e42c:	add	w7, w26, w6
  44e430:	bic	w20, w4, w6
  44e434:	and	w6, w5, w6
  44e438:	orr	w6, w6, w20
  44e43c:	mov	w21, #0xfbc8                	// #64456
  44e440:	add	w6, w19, w6
  44e444:	movk	w21, #0xe7d3, lsl #16
  44e448:	add	w6, w6, w21
  44e44c:	ror	w6, w6, #12
  44e450:	add	w6, w6, w5
  44e454:	add	w20, w3, w4
  44e458:	bic	w19, w5, w4
  44e45c:	and	w4, w6, w4
  44e460:	orr	w4, w4, w19
  44e464:	mov	w21, #0xcde6                	// #52710
  44e468:	add	w4, w7, w4
  44e46c:	movk	w21, #0x21e1, lsl #16
  44e470:	add	w4, w4, w21
  44e474:	ror	w4, w4, #27
  44e478:	add	w4, w4, w6
  44e47c:	add	w19, w28, w5
  44e480:	bic	w7, w6, w5
  44e484:	and	w5, w4, w5
  44e488:	orr	w5, w5, w7
  44e48c:	mov	w21, #0x7d6                 	// #2006
  44e490:	add	w5, w20, w5
  44e494:	movk	w21, #0xc337, lsl #16
  44e498:	add	w5, w5, w21
  44e49c:	ror	w5, w5, #23
  44e4a0:	add	w5, w5, w4
  44e4a4:	add	w7, w13, w6
  44e4a8:	bic	w20, w4, w6
  44e4ac:	and	w6, w5, w6
  44e4b0:	orr	w6, w6, w20
  44e4b4:	mov	w21, #0xd87                 	// #3463
  44e4b8:	add	w6, w19, w6
  44e4bc:	movk	w21, #0xf4d5, lsl #16
  44e4c0:	add	w6, w6, w21
  44e4c4:	ror	w6, w6, #18
  44e4c8:	add	w6, w6, w5
  44e4cc:	add	w20, w15, w4
  44e4d0:	bic	w19, w5, w4
  44e4d4:	and	w4, w6, w4
  44e4d8:	orr	w4, w4, w19
  44e4dc:	mov	w21, #0x14ed                	// #5357
  44e4e0:	add	w4, w7, w4
  44e4e4:	movk	w21, #0x455a, lsl #16
  44e4e8:	add	w4, w4, w21
  44e4ec:	ror	w4, w4, #12
  44e4f0:	add	w4, w4, w6
  44e4f4:	add	w19, w23, w5
  44e4f8:	bic	w7, w6, w5
  44e4fc:	and	w5, w4, w5
  44e500:	orr	w5, w5, w7
  44e504:	mov	w21, #0xe905                	// #59653
  44e508:	add	w5, w20, w5
  44e50c:	movk	w21, #0xa9e3, lsl #16
  44e510:	add	w5, w5, w21
  44e514:	ror	w5, w5, #27
  44e518:	add	w5, w5, w4
  44e51c:	add	w7, w17, w6
  44e520:	bic	w20, w4, w6
  44e524:	and	w6, w5, w6
  44e528:	orr	w6, w6, w20
  44e52c:	mov	w21, #0xa3f8                	// #41976
  44e530:	add	w6, w19, w6
  44e534:	movk	w21, #0xfcef, lsl #16
  44e538:	add	w6, w6, w21
  44e53c:	ror	w6, w6, #23
  44e540:	add	w6, w6, w5
  44e544:	add	w20, w1, w4
  44e548:	bic	w19, w5, w4
  44e54c:	and	w4, w6, w4
  44e550:	orr	w4, w4, w19
  44e554:	add	w4, w7, w4
  44e558:	mov	w7, #0x2d9                 	// #729
  44e55c:	movk	w7, #0x676f, lsl #16
  44e560:	add	w4, w4, w7
  44e564:	ror	w4, w4, #18
  44e568:	add	w4, w4, w6
  44e56c:	eor	w7, w4, w6
  44e570:	and	w19, w7, w5
  44e574:	eor	w19, w19, w6
  44e578:	add	w19, w20, w19
  44e57c:	mov	w20, #0x4c8a                	// #19594
  44e580:	movk	w20, #0x8d2a, lsl #16
  44e584:	add	w19, w19, w20
  44e588:	ror	w19, w19, #12
  44e58c:	add	w19, w19, w4
  44e590:	add	w5, w14, w5
  44e594:	eor	w7, w7, w19
  44e598:	mov	w20, #0x3942                	// #14658
  44e59c:	add	w5, w5, w7
  44e5a0:	movk	w20, #0xfffa, lsl #16
  44e5a4:	add	w5, w5, w20
  44e5a8:	ror	w5, w5, #28
  44e5ac:	add	w7, w30, w4
  44e5b0:	eor	w4, w19, w4
  44e5b4:	add	w5, w5, w19
  44e5b8:	add	w6, w13, w6
  44e5bc:	eor	w4, w4, w5
  44e5c0:	mov	w20, #0xf681                	// #63105
  44e5c4:	add	w4, w6, w4
  44e5c8:	movk	w20, #0x8771, lsl #16
  44e5cc:	add	w4, w4, w20
  44e5d0:	ror	w4, w4, #21
  44e5d4:	add	w6, w3, w19
  44e5d8:	eor	w19, w5, w19
  44e5dc:	add	w4, w4, w5
  44e5e0:	eor	w19, w19, w4
  44e5e4:	mov	w20, #0x6122                	// #24866
  44e5e8:	add	w7, w7, w19
  44e5ec:	movk	w20, #0x6d9d, lsl #16
  44e5f0:	add	w7, w7, w20
  44e5f4:	ror	w7, w7, #16
  44e5f8:	add	w19, w25, w5
  44e5fc:	eor	w5, w4, w5
  44e600:	add	w7, w7, w4
  44e604:	eor	w5, w5, w7
  44e608:	mov	w20, #0x380c                	// #14348
  44e60c:	add	w5, w6, w5
  44e610:	movk	w20, #0xfde5, lsl #16
  44e614:	add	w5, w5, w20
  44e618:	ror	w5, w5, #9
  44e61c:	add	w6, w24, w4
  44e620:	eor	w4, w7, w4
  44e624:	add	w5, w5, w7
  44e628:	eor	w4, w4, w5
  44e62c:	mov	w20, #0xea44                	// #59972
  44e630:	add	w4, w19, w4
  44e634:	movk	w20, #0xa4be, lsl #16
  44e638:	add	w4, w4, w20
  44e63c:	ror	w4, w4, #28
  44e640:	add	w19, w17, w7
  44e644:	eor	w7, w5, w7
  44e648:	add	w4, w4, w5
  44e64c:	eor	w7, w7, w4
  44e650:	mov	w20, #0xcfa9                	// #53161
  44e654:	add	w6, w6, w7
  44e658:	movk	w20, #0x4bde, lsl #16
  44e65c:	add	w6, w6, w20
  44e660:	ror	w6, w6, #21
  44e664:	add	w7, w16, w5
  44e668:	eor	w5, w4, w5
  44e66c:	add	w6, w6, w4
  44e670:	eor	w5, w5, w6
  44e674:	mov	w20, #0x4b60                	// #19296
  44e678:	add	w5, w19, w5
  44e67c:	movk	w20, #0xf6bb, lsl #16
  44e680:	add	w5, w5, w20
  44e684:	ror	w5, w5, #16
  44e688:	add	w19, w15, w4
  44e68c:	eor	w4, w6, w4
  44e690:	add	w5, w5, w6
  44e694:	eor	w4, w4, w5
  44e698:	mov	w20, #0xbc70                	// #48240
  44e69c:	add	w4, w7, w4
  44e6a0:	movk	w20, #0xbebf, lsl #16
  44e6a4:	add	w4, w4, w20
  44e6a8:	ror	w4, w4, #9
  44e6ac:	add	w7, w29, w6
  44e6b0:	eor	w6, w5, w6
  44e6b4:	add	w4, w4, w5
  44e6b8:	eor	w6, w6, w4
  44e6bc:	mov	w20, #0x7ec6                	// #32454
  44e6c0:	add	w6, w19, w6
  44e6c4:	movk	w20, #0x289b, lsl #16
  44e6c8:	add	w6, w6, w20
  44e6cc:	ror	w6, w6, #28
  44e6d0:	add	w19, w28, w5
  44e6d4:	eor	w5, w4, w5
  44e6d8:	add	w6, w6, w4
  44e6dc:	eor	w5, w5, w6
  44e6e0:	mov	w20, #0x27fa                	// #10234
  44e6e4:	add	w5, w7, w5
  44e6e8:	movk	w20, #0xeaa1, lsl #16
  44e6ec:	add	w5, w5, w20
  44e6f0:	ror	w5, w5, #21
  44e6f4:	add	w7, w27, w4
  44e6f8:	eor	w4, w6, w4
  44e6fc:	add	w5, w5, w6
  44e700:	eor	w4, w4, w5
  44e704:	mov	w20, #0x3085                	// #12421
  44e708:	add	w4, w19, w4
  44e70c:	movk	w20, #0xd4ef, lsl #16
  44e710:	add	w4, w4, w20
  44e714:	ror	w4, w4, #16
  44e718:	add	w19, w26, w6
  44e71c:	eor	w6, w5, w6
  44e720:	add	w4, w4, w5
  44e724:	eor	w6, w6, w4
  44e728:	mov	w20, #0x1d05                	// #7429
  44e72c:	add	w6, w7, w6
  44e730:	movk	w20, #0x488, lsl #16
  44e734:	add	w6, w6, w20
  44e738:	ror	w6, w6, #9
  44e73c:	add	w7, w1, w5
  44e740:	eor	w5, w4, w5
  44e744:	add	w6, w6, w4
  44e748:	eor	w5, w5, w6
  44e74c:	mov	w20, #0xd039                	// #53305
  44e750:	add	w5, w19, w5
  44e754:	movk	w20, #0xd9d4, lsl #16
  44e758:	add	w5, w5, w20
  44e75c:	ror	w5, w5, #28
  44e760:	add	w19, w18, w4
  44e764:	eor	w4, w6, w4
  44e768:	add	w5, w5, w6
  44e76c:	eor	w4, w4, w5
  44e770:	mov	w20, #0x99e5                	// #39397
  44e774:	add	w4, w7, w4
  44e778:	movk	w20, #0xe6db, lsl #16
  44e77c:	add	w4, w4, w20
  44e780:	ror	w4, w4, #21
  44e784:	eor	w7, w5, w6
  44e788:	add	w4, w4, w5
  44e78c:	eor	w7, w7, w4
  44e790:	mov	w20, #0x7cf8                	// #31992
  44e794:	add	w7, w19, w7
  44e798:	movk	w20, #0x1fa2, lsl #16
  44e79c:	add	w7, w7, w20
  44e7a0:	ror	w7, w7, #16
  44e7a4:	add	w19, w29, w5
  44e7a8:	eor	w5, w4, w5
  44e7ac:	add	w7, w7, w4
  44e7b0:	add	w6, w23, w6
  44e7b4:	eor	w5, w5, w7
  44e7b8:	add	w5, w6, w5
  44e7bc:	mov	w6, #0x5665                	// #22117
  44e7c0:	movk	w6, #0xc4ac, lsl #16
  44e7c4:	add	w5, w5, w6
  44e7c8:	ror	w5, w5, #9
  44e7cc:	add	w5, w5, w7
  44e7d0:	add	w17, w17, w4
  44e7d4:	orn	w4, w5, w4
  44e7d8:	eor	w4, w4, w7
  44e7dc:	mov	w6, #0x2244                	// #8772
  44e7e0:	add	w4, w19, w4
  44e7e4:	movk	w6, #0xf429, lsl #16
  44e7e8:	add	w4, w4, w6
  44e7ec:	ror	w4, w4, #26
  44e7f0:	add	w4, w4, w5
  44e7f4:	orn	w6, w4, w7
  44e7f8:	eor	w6, w6, w5
  44e7fc:	add	w17, w17, w6
  44e800:	mov	w6, #0xff97                	// #65431
  44e804:	movk	w6, #0x432a, lsl #16
  44e808:	add	w17, w17, w6
  44e80c:	ror	w17, w17, #22
  44e810:	add	w17, w17, w4
  44e814:	add	w14, w14, w5
  44e818:	orn	w5, w17, w5
  44e81c:	add	w3, w3, w7
  44e820:	eor	w5, w5, w4
  44e824:	add	w3, w3, w5
  44e828:	mov	w5, #0x23a7                	// #9127
  44e82c:	movk	w5, #0xab94, lsl #16
  44e830:	add	w3, w3, w5
  44e834:	ror	w3, w3, #17
  44e838:	add	w3, w3, w17
  44e83c:	add	w1, w1, w4
  44e840:	orn	w4, w3, w4
  44e844:	eor	w4, w4, w17
  44e848:	mov	w5, #0xa039                	// #41017
  44e84c:	add	w14, w14, w4
  44e850:	movk	w5, #0xfc93, lsl #16
  44e854:	add	w14, w14, w5
  44e858:	ror	w14, w14, #11
  44e85c:	add	w14, w14, w3
  44e860:	add	w4, w28, w17
  44e864:	orn	w17, w14, w17
  44e868:	eor	w17, w17, w3
  44e86c:	add	w17, w1, w17
  44e870:	mov	w1, #0x59c3                	// #22979
  44e874:	movk	w1, #0x655b, lsl #16
  44e878:	add	w17, w17, w1
  44e87c:	ror	w17, w17, #26
  44e880:	add	w17, w17, w14
  44e884:	orn	w1, w17, w3
  44e888:	eor	w1, w1, w14
  44e88c:	add	w1, w4, w1
  44e890:	mov	w4, #0xcc92                	// #52370
  44e894:	movk	w4, #0x8f0c, lsl #16
  44e898:	add	w1, w1, w4
  44e89c:	ror	w1, w1, #22
  44e8a0:	add	w1, w1, w17
  44e8a4:	add	w16, w16, w3
  44e8a8:	add	w3, w25, w14
  44e8ac:	orn	w14, w1, w14
  44e8b0:	eor	w14, w14, w17
  44e8b4:	add	w14, w16, w14
  44e8b8:	mov	w16, #0xf47d                	// #62589
  44e8bc:	movk	w16, #0xffef, lsl #16
  44e8c0:	add	w14, w14, w16
  44e8c4:	ror	w14, w14, #17
  44e8c8:	add	w14, w14, w1
  44e8cc:	orn	w16, w14, w17
  44e8d0:	add	w13, w13, w17
  44e8d4:	eor	w16, w16, w1
  44e8d8:	add	w17, w18, w1
  44e8dc:	mov	w18, #0x5dd1                	// #24017
  44e8e0:	add	w16, w3, w16
  44e8e4:	movk	w18, #0x8584, lsl #16
  44e8e8:	add	w16, w16, w18
  44e8ec:	ror	w16, w16, #11
  44e8f0:	add	w16, w16, w14
  44e8f4:	orn	w18, w16, w1
  44e8f8:	eor	w18, w18, w14
  44e8fc:	mov	w1, #0x7e4f                	// #32335
  44e900:	add	w13, w13, w18
  44e904:	movk	w1, #0x6fa8, lsl #16
  44e908:	add	w13, w13, w1
  44e90c:	ror	w13, w13, #26
  44e910:	add	w13, w13, w16
  44e914:	add	w18, w27, w14
  44e918:	orn	w14, w13, w14
  44e91c:	eor	w14, w14, w16
  44e920:	add	w14, w17, w14
  44e924:	mov	w17, #0xe6e0                	// #59104
  44e928:	movk	w17, #0xfe2c, lsl #16
  44e92c:	add	w14, w14, w17
  44e930:	ror	w14, w14, #22
  44e934:	add	w14, w14, w13
  44e938:	add	w15, w15, w16
  44e93c:	orn	w16, w14, w16
  44e940:	eor	w16, w16, w13
  44e944:	add	w16, w18, w16
  44e948:	mov	w18, #0x4314                	// #17172
  44e94c:	movk	w18, #0xa301, lsl #16
  44e950:	add	w16, w16, w18
  44e954:	ror	w16, w16, #17
  44e958:	add	w16, w16, w14
  44e95c:	add	w17, w24, w13
  44e960:	orn	w13, w16, w13
  44e964:	eor	w13, w13, w14
  44e968:	mov	w18, #0x11a1                	// #4513
  44e96c:	add	w13, w15, w13
  44e970:	movk	w18, #0x4e08, lsl #16
  44e974:	add	w13, w13, w18
  44e978:	ror	w13, w13, #11
  44e97c:	add	w13, w13, w16
  44e980:	add	w15, w30, w14
  44e984:	orn	w14, w13, w14
  44e988:	eor	w14, w14, w16
  44e98c:	mov	w18, #0x7e82                	// #32386
  44e990:	add	w14, w17, w14
  44e994:	movk	w18, #0xf753, lsl #16
  44e998:	add	w14, w14, w18
  44e99c:	ror	w14, w14, #26
  44e9a0:	add	w14, w14, w13
  44e9a4:	add	w17, w23, w16
  44e9a8:	orn	w16, w14, w16
  44e9ac:	eor	w16, w16, w13
  44e9b0:	mov	w18, #0xf235                	// #62005
  44e9b4:	add	w15, w15, w16
  44e9b8:	movk	w18, #0xbd3a, lsl #16
  44e9bc:	add	w15, w15, w18
  44e9c0:	ror	w15, w15, #22
  44e9c4:	add	w15, w15, w14
  44e9c8:	add	w16, w26, w13
  44e9cc:	orn	w13, w15, w13
  44e9d0:	eor	w13, w13, w14
  44e9d4:	add	w13, w17, w13
  44e9d8:	mov	w17, #0xd2bb                	// #53947
  44e9dc:	movk	w17, #0x2ad7, lsl #16
  44e9e0:	add	w13, w13, w17
  44e9e4:	ror	w13, w13, #17
  44e9e8:	add	w13, w13, w15
  44e9ec:	add	w8, w14, w8
  44e9f0:	orn	w14, w13, w14
  44e9f4:	add	w9, w13, w9
  44e9f8:	add	w11, w13, w11
  44e9fc:	eor	w13, w14, w15
  44ea00:	add	w13, w16, w13
  44ea04:	add	w13, w13, w22
  44ea08:	ror	w13, w13, #11
  44ea0c:	add	x0, x0, #0x40
  44ea10:	add	w9, w9, w13
  44ea14:	cmp	x0, x12
  44ea18:	add	w10, w15, w10
  44ea1c:	b.cc	44e074 <feof@plt+0x4b6a4>  // b.lo, b.ul, b.last
  44ea20:	stp	w8, w9, [x2]
  44ea24:	stp	w11, w10, [x2, #8]
  44ea28:	ldp	x20, x19, [sp, #80]
  44ea2c:	ldp	x22, x21, [sp, #64]
  44ea30:	ldp	x24, x23, [sp, #48]
  44ea34:	ldp	x26, x25, [sp, #32]
  44ea38:	ldp	x28, x27, [sp, #16]
  44ea3c:	ldp	x29, x30, [sp], #96
  44ea40:	ret
  44ea44:	stp	x29, x30, [sp, #-80]!
  44ea48:	stp	x28, x25, [sp, #16]
  44ea4c:	stp	x24, x23, [sp, #32]
  44ea50:	stp	x22, x21, [sp, #48]
  44ea54:	stp	x20, x19, [sp, #64]
  44ea58:	mov	x29, sp
  44ea5c:	sub	sp, sp, #0x1, lsl #12
  44ea60:	sub	sp, sp, #0xf0
  44ea64:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  44ea68:	ldr	q0, [x8, #1760]
  44ea6c:	mov	x19, x1
  44ea70:	mov	x21, x0
  44ea74:	mov	x20, xzr
  44ea78:	sub	x22, x29, #0xa0
  44ea7c:	add	x23, sp, #0x8
  44ea80:	mov	w24, #0x1000                	// #4096
  44ea84:	str	q0, [x22]
  44ea88:	stur	xzr, [x29, #-144]
  44ea8c:	stur	wzr, [x29, #-136]
  44ea90:	add	x0, x23, x20
  44ea94:	sub	x2, x24, x20
  44ea98:	mov	w1, #0x1                   	// #1
  44ea9c:	mov	x3, x21
  44eaa0:	bl	4023a0 <fread@plt>
  44eaa4:	add	x20, x0, x20
  44eaa8:	cbz	x0, 44eab4 <feof@plt+0x4c0e4>
  44eaac:	cmp	x20, #0x1, lsl #12
  44eab0:	b.cc	44ea90 <feof@plt+0x4c0c0>  // b.lo, b.ul, b.last
  44eab4:	cbz	x0, 44ead0 <feof@plt+0x4c100>
  44eab8:	add	x0, sp, #0x8
  44eabc:	sub	x2, x29, #0xa0
  44eac0:	mov	w1, #0x1000                	// #4096
  44eac4:	bl	44e018 <feof@plt+0x4b648>
  44eac8:	mov	x20, xzr
  44eacc:	b	44ea90 <feof@plt+0x4c0c0>
  44ead0:	mov	x0, x21
  44ead4:	bl	402910 <ferror@plt>
  44ead8:	cbz	w0, 44eae4 <feof@plt+0x4c114>
  44eadc:	mov	w0, #0x1                   	// #1
  44eae0:	b	44eb74 <feof@plt+0x4c1a4>
  44eae4:	cbz	x20, 44eaf8 <feof@plt+0x4c128>
  44eae8:	add	x0, sp, #0x8
  44eaec:	sub	x2, x29, #0xa0
  44eaf0:	mov	x1, x20
  44eaf4:	bl	44eb94 <feof@plt+0x4c1c4>
  44eaf8:	ldp	w24, w23, [x29, #-140]
  44eafc:	ldur	w8, [x29, #-144]
  44eb00:	adds	w25, w8, w23
  44eb04:	stur	w25, [x29, #-144]
  44eb08:	b.cc	44eb14 <feof@plt+0x4c144>  // b.lo, b.ul, b.last
  44eb0c:	add	w24, w24, #0x1
  44eb10:	stur	w24, [x29, #-140]
  44eb14:	cmp	w23, #0x38
  44eb18:	mov	w8, #0x78                  	// #120
  44eb1c:	mov	w9, #0x38                  	// #56
  44eb20:	sub	x10, x29, #0xa0
  44eb24:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  44eb28:	add	x20, x10, #0x1c
  44eb2c:	sub	w21, w8, w23
  44eb30:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44eb34:	add	x0, x20, x23
  44eb38:	add	x1, x1, #0x6f0
  44eb3c:	mov	x2, x21
  44eb40:	bl	402390 <memcpy@plt>
  44eb44:	add	x9, x21, x23
  44eb48:	lsl	w8, w25, #3
  44eb4c:	extr	w10, w24, w25, #29
  44eb50:	add	x11, x20, x9
  44eb54:	add	x1, x9, #0x8
  44eb58:	sub	x2, x29, #0xa0
  44eb5c:	mov	x0, x20
  44eb60:	stp	w8, w10, [x11]
  44eb64:	bl	44e018 <feof@plt+0x4b648>
  44eb68:	ldr	q0, [x22]
  44eb6c:	mov	w0, wzr
  44eb70:	str	q0, [x19]
  44eb74:	add	sp, sp, #0x1, lsl #12
  44eb78:	add	sp, sp, #0xf0
  44eb7c:	ldp	x20, x19, [sp, #64]
  44eb80:	ldp	x22, x21, [sp, #48]
  44eb84:	ldp	x24, x23, [sp, #32]
  44eb88:	ldp	x28, x25, [sp, #16]
  44eb8c:	ldp	x29, x30, [sp], #80
  44eb90:	ret
  44eb94:	stp	x29, x30, [sp, #-80]!
  44eb98:	stp	x24, x23, [sp, #32]
  44eb9c:	stp	x22, x21, [sp, #48]
  44eba0:	stp	x20, x19, [sp, #64]
  44eba4:	ldr	w23, [x2, #24]
  44eba8:	mov	x19, x2
  44ebac:	mov	x20, x1
  44ebb0:	mov	x21, x0
  44ebb4:	str	x25, [sp, #16]
  44ebb8:	mov	x29, sp
  44ebbc:	cbz	w23, 44ec30 <feof@plt+0x4c260>
  44ebc0:	mov	w8, #0x80                  	// #128
  44ebc4:	sub	x8, x8, x23
  44ebc8:	cmp	x8, x20
  44ebcc:	add	x9, x19, x23
  44ebd0:	csel	x22, x20, x8, hi  // hi = pmore
  44ebd4:	add	x0, x9, #0x1c
  44ebd8:	mov	x1, x21
  44ebdc:	mov	x2, x22
  44ebe0:	bl	402390 <memcpy@plt>
  44ebe4:	add	x25, x22, x23
  44ebe8:	add	w8, w23, w22
  44ebec:	cmp	x25, #0x41
  44ebf0:	str	w8, [x19, #24]
  44ebf4:	b.cc	44ec28 <feof@plt+0x4c258>  // b.lo, b.ul, b.last
  44ebf8:	add	x23, x19, #0x1c
  44ebfc:	and	x24, x25, #0xffffffffffffffc0
  44ec00:	mov	x0, x23
  44ec04:	mov	x1, x24
  44ec08:	mov	x2, x19
  44ec0c:	bl	44e018 <feof@plt+0x4b648>
  44ec10:	add	x1, x23, x24
  44ec14:	and	x24, x25, #0x3f
  44ec18:	mov	x0, x23
  44ec1c:	mov	x2, x24
  44ec20:	bl	402390 <memcpy@plt>
  44ec24:	str	w24, [x19, #24]
  44ec28:	add	x21, x21, x22
  44ec2c:	sub	x20, x20, x22
  44ec30:	subs	x8, x20, #0x41
  44ec34:	b.cc	44ec80 <feof@plt+0x4c2b0>  // b.lo, b.ul, b.last
  44ec38:	tst	x21, #0x3
  44ec3c:	b.eq	44ecb0 <feof@plt+0x4c2e0>  // b.none
  44ec40:	add	x22, x19, #0x1c
  44ec44:	and	x23, x8, #0xffffffffffffffc0
  44ec48:	mov	x24, x20
  44ec4c:	ldp	q1, q0, [x21, #32]
  44ec50:	ldp	q3, q2, [x21], #64
  44ec54:	mov	w1, #0x40                  	// #64
  44ec58:	mov	x0, x22
  44ec5c:	mov	x2, x19
  44ec60:	stp	q1, q0, [x22, #32]
  44ec64:	stp	q3, q2, [x22]
  44ec68:	bl	44e018 <feof@plt+0x4b648>
  44ec6c:	sub	x24, x24, #0x40
  44ec70:	cmp	x24, #0x40
  44ec74:	b.hi	44ec4c <feof@plt+0x4c27c>  // b.pmore
  44ec78:	sub	x8, x20, x23
  44ec7c:	sub	x20, x8, #0x40
  44ec80:	cbz	x20, 44ec98 <feof@plt+0x4c2c8>
  44ec84:	add	x0, x19, #0x1c
  44ec88:	mov	x1, x21
  44ec8c:	mov	x2, x20
  44ec90:	bl	402390 <memcpy@plt>
  44ec94:	str	w20, [x19, #24]
  44ec98:	ldp	x20, x19, [sp, #64]
  44ec9c:	ldp	x22, x21, [sp, #48]
  44eca0:	ldp	x24, x23, [sp, #32]
  44eca4:	ldr	x25, [sp, #16]
  44eca8:	ldp	x29, x30, [sp], #80
  44ecac:	ret
  44ecb0:	and	x22, x20, #0xffffffffffffffc0
  44ecb4:	mov	x0, x21
  44ecb8:	mov	x1, x22
  44ecbc:	mov	x2, x19
  44ecc0:	bl	44e018 <feof@plt+0x4b648>
  44ecc4:	add	x21, x21, x22
  44ecc8:	and	x20, x20, #0x3f
  44eccc:	cbnz	x20, 44ec84 <feof@plt+0x4c2b4>
  44ecd0:	b	44ec98 <feof@plt+0x4c2c8>
  44ecd4:	sub	sp, sp, #0xe0
  44ecd8:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x10a68>
  44ecdc:	ldr	q0, [x8, #1760]
  44ece0:	stp	x20, x19, [sp, #208]
  44ece4:	mov	x19, x2
  44ece8:	mov	x2, sp
  44ecec:	stp	x29, x30, [sp, #160]
  44ecf0:	stp	x24, x23, [sp, #176]
  44ecf4:	stp	x22, x21, [sp, #192]
  44ecf8:	add	x29, sp, #0xa0
  44ecfc:	str	xzr, [sp, #16]
  44ed00:	str	q0, [sp]
  44ed04:	str	wzr, [sp, #24]
  44ed08:	mov	x20, sp
  44ed0c:	bl	44eb94 <feof@plt+0x4c1c4>
  44ed10:	ldp	w23, w22, [sp, #20]
  44ed14:	ldr	w8, [sp, #16]
  44ed18:	adds	w24, w8, w22
  44ed1c:	str	w24, [sp, #16]
  44ed20:	b.cc	44ed2c <feof@plt+0x4c35c>  // b.lo, b.ul, b.last
  44ed24:	add	w23, w23, #0x1
  44ed28:	str	w23, [sp, #20]
  44ed2c:	cmp	w22, #0x38
  44ed30:	mov	w8, #0x78                  	// #120
  44ed34:	mov	w9, #0x38                  	// #56
  44ed38:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  44ed3c:	add	x20, x20, #0x1c
  44ed40:	sub	w21, w8, w22
  44ed44:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44ed48:	add	x0, x20, x22
  44ed4c:	add	x1, x1, #0x6f0
  44ed50:	mov	x2, x21
  44ed54:	bl	402390 <memcpy@plt>
  44ed58:	add	x9, x21, x22
  44ed5c:	lsl	w8, w24, #3
  44ed60:	extr	w10, w23, w24, #29
  44ed64:	add	x11, x20, x9
  44ed68:	add	x1, x9, #0x8
  44ed6c:	mov	x2, sp
  44ed70:	mov	x0, x20
  44ed74:	stp	w8, w10, [x11]
  44ed78:	bl	44e018 <feof@plt+0x4b648>
  44ed7c:	ldr	q0, [sp]
  44ed80:	mov	x0, x19
  44ed84:	str	q0, [x19]
  44ed88:	ldp	x20, x19, [sp, #208]
  44ed8c:	ldp	x22, x21, [sp, #192]
  44ed90:	ldp	x24, x23, [sp, #176]
  44ed94:	ldp	x29, x30, [sp, #160]
  44ed98:	add	sp, sp, #0xe0
  44ed9c:	ret
  44eda0:	b	402820 <strcmp@plt>
  44eda4:	b	4026b0 <strncmp@plt>
  44eda8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  44edac:	mov	w8, wzr
  44edb0:	add	x9, x9, #0xc50
  44edb4:	mov	w10, #0x43                  	// #67
  44edb8:	b	44edcc <feof@plt+0x4c3fc>
  44edbc:	mov	w11, #0x2f                  	// #47
  44edc0:	ldrb	w11, [x9, w11, uxtw]
  44edc4:	madd	w8, w8, w10, w11
  44edc8:	sub	w8, w8, #0x71
  44edcc:	ldrb	w11, [x0], #1
  44edd0:	cmp	w11, #0x5c
  44edd4:	b.eq	44edbc <feof@plt+0x4c3ec>  // b.none
  44edd8:	cbnz	w11, 44edc0 <feof@plt+0x4c3f0>
  44eddc:	mov	w0, w8
  44ede0:	ret
  44ede4:	stp	x29, x30, [sp, #-16]!
  44ede8:	mov	x29, sp
  44edec:	bl	402820 <strcmp@plt>
  44edf0:	cmp	w0, #0x0
  44edf4:	cset	w0, eq  // eq = none
  44edf8:	ldp	x29, x30, [sp], #16
  44edfc:	ret
  44ee00:	stp	x29, x30, [sp, #-48]!
  44ee04:	str	x21, [sp, #16]
  44ee08:	stp	x20, x19, [sp, #32]
  44ee0c:	mov	x29, sp
  44ee10:	mov	x19, x1
  44ee14:	bl	4501e8 <feof@plt+0x4d818>
  44ee18:	mov	x20, x0
  44ee1c:	mov	x0, x19
  44ee20:	bl	4501e8 <feof@plt+0x4d818>
  44ee24:	mov	x19, x0
  44ee28:	mov	x0, x20
  44ee2c:	mov	x1, x19
  44ee30:	bl	402820 <strcmp@plt>
  44ee34:	cmp	w0, #0x0
  44ee38:	mov	x0, x20
  44ee3c:	cset	w21, eq  // eq = none
  44ee40:	bl	4024c0 <free@plt>
  44ee44:	mov	x0, x19
  44ee48:	bl	4024c0 <free@plt>
  44ee4c:	mov	w0, w21
  44ee50:	ldp	x20, x19, [sp, #32]
  44ee54:	ldr	x21, [sp, #16]
  44ee58:	ldp	x29, x30, [sp], #48
  44ee5c:	ret
  44ee60:	cbz	x0, 44ee6c <feof@plt+0x4c49c>
  44ee64:	mov	w1, #0x2                   	// #2
  44ee68:	b	4027f0 <__fsetlocking@plt>
  44ee6c:	ret
  44ee70:	stp	x29, x30, [sp, #-16]!
  44ee74:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44ee78:	ldr	x0, [x8, #1312]
  44ee7c:	mov	x29, sp
  44ee80:	cbz	x0, 44ee8c <feof@plt+0x4c4bc>
  44ee84:	mov	w1, #0x2                   	// #2
  44ee88:	bl	4027f0 <__fsetlocking@plt>
  44ee8c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44ee90:	ldr	x0, [x8, #1328]
  44ee94:	cbz	x0, 44eea0 <feof@plt+0x4c4d0>
  44ee98:	mov	w1, #0x2                   	// #2
  44ee9c:	bl	4027f0 <__fsetlocking@plt>
  44eea0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44eea4:	ldr	x0, [x8, #1336]
  44eea8:	cbz	x0, 44eeb8 <feof@plt+0x4c4e8>
  44eeac:	mov	w1, #0x2                   	// #2
  44eeb0:	ldp	x29, x30, [sp], #16
  44eeb4:	b	4027f0 <__fsetlocking@plt>
  44eeb8:	ldp	x29, x30, [sp], #16
  44eebc:	ret
  44eec0:	stp	x29, x30, [sp, #-32]!
  44eec4:	str	x19, [sp, #16]
  44eec8:	mov	x29, sp
  44eecc:	bl	402800 <fopen@plt>
  44eed0:	mov	x19, x0
  44eed4:	cbz	x0, 44eee4 <feof@plt+0x4c514>
  44eed8:	mov	w1, #0x2                   	// #2
  44eedc:	mov	x0, x19
  44eee0:	bl	4027f0 <__fsetlocking@plt>
  44eee4:	mov	x0, x19
  44eee8:	ldr	x19, [sp, #16]
  44eeec:	ldp	x29, x30, [sp], #32
  44eef0:	ret
  44eef4:	stp	x29, x30, [sp, #-32]!
  44eef8:	str	x19, [sp, #16]
  44eefc:	mov	x29, sp
  44ef00:	bl	402920 <fdopen@plt>
  44ef04:	mov	x19, x0
  44ef08:	cbz	x0, 44ef18 <feof@plt+0x4c548>
  44ef0c:	mov	w1, #0x2                   	// #2
  44ef10:	mov	x0, x19
  44ef14:	bl	4027f0 <__fsetlocking@plt>
  44ef18:	mov	x0, x19
  44ef1c:	ldr	x19, [sp, #16]
  44ef20:	ldp	x29, x30, [sp], #32
  44ef24:	ret
  44ef28:	stp	x29, x30, [sp, #-32]!
  44ef2c:	str	x19, [sp, #16]
  44ef30:	mov	x29, sp
  44ef34:	bl	402560 <freopen@plt>
  44ef38:	mov	x19, x0
  44ef3c:	cbz	x0, 44ef4c <feof@plt+0x4c57c>
  44ef40:	mov	w1, #0x2                   	// #2
  44ef44:	mov	x0, x19
  44ef48:	bl	4027f0 <__fsetlocking@plt>
  44ef4c:	mov	x0, x19
  44ef50:	ldr	x19, [sp, #16]
  44ef54:	ldp	x29, x30, [sp], #32
  44ef58:	ret
  44ef5c:	lsr	x8, x0, #32
  44ef60:	mov	w9, #0xadcc                	// #44492
  44ef64:	movk	w9, #0xbdec, lsl #16
  44ef68:	mov	w10, #0x109a                	// #4250
  44ef6c:	sub	w8, w8, w0
  44ef70:	movk	w10, #0x2, lsl #16
  44ef74:	add	w8, w8, w9
  44ef78:	mov	w9, #0x2785                	// #10117
  44ef7c:	eor	w8, w8, w10
  44ef80:	movk	w9, #0x5c24, lsl #16
  44ef84:	sub	w11, w0, w8
  44ef88:	add	w9, w11, w9
  44ef8c:	mov	w10, #0x5234                	// #21044
  44ef90:	eor	w9, w9, w8, lsl #8
  44ef94:	movk	w10, #0x4213, lsl #16
  44ef98:	add	w11, w8, w9
  44ef9c:	sub	w10, w10, w11
  44efa0:	sub	w8, w8, w9
  44efa4:	eor	w10, w10, w9, lsr #13
  44efa8:	sub	w8, w8, w10
  44efac:	sub	w9, w9, w10
  44efb0:	eor	w8, w8, w10, lsr #12
  44efb4:	sub	w9, w9, w8
  44efb8:	sub	w10, w10, w8
  44efbc:	eor	w9, w9, w8, lsl #16
  44efc0:	sub	w10, w10, w9
  44efc4:	sub	w8, w8, w9
  44efc8:	eor	w10, w10, w9, lsr #5
  44efcc:	sub	w8, w8, w10
  44efd0:	sub	w9, w9, w10
  44efd4:	eor	w8, w8, w10, lsr #3
  44efd8:	sub	w9, w9, w8
  44efdc:	eor	w9, w9, w8, lsl #10
  44efe0:	sub	w8, w10, w8
  44efe4:	sub	w8, w8, w9
  44efe8:	eor	w0, w8, w9, lsr #15
  44efec:	ret
  44eff0:	cmp	x0, x1
  44eff4:	cset	w0, eq  // eq = none
  44eff8:	ret
  44effc:	ldr	x0, [x0, #32]
  44f000:	ret
  44f004:	ldp	x8, x9, [x0, #40]
  44f008:	sub	x0, x8, x9
  44f00c:	ret
  44f010:	stp	x29, x30, [sp, #-80]!
  44f014:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f018:	stp	x26, x25, [sp, #16]
  44f01c:	stp	x24, x23, [sp, #32]
  44f020:	stp	x22, x21, [sp, #48]
  44f024:	stp	x20, x19, [sp, #64]
  44f028:	mov	x19, x5
  44f02c:	mov	x20, x4
  44f030:	mov	x21, x3
  44f034:	mov	x22, x2
  44f038:	mov	x23, x1
  44f03c:	mov	x2, x0
  44f040:	mov	w8, wzr
  44f044:	mov	w26, #0x1e                  	// #30
  44f048:	add	x9, x9, #0x73c
  44f04c:	mov	x29, sp
  44f050:	sub	w10, w26, w8
  44f054:	add	w10, w8, w10, lsr #1
  44f058:	lsl	x11, x10, #4
  44f05c:	ldr	w11, [x9, x11]
  44f060:	cmp	x11, x2
  44f064:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  44f068:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  44f06c:	cmp	w26, w8
  44f070:	b.ne	44f050 <feof@plt+0x4c680>  // b.any
  44f074:	mov	w8, w26
  44f078:	lsl	x8, x8, #4
  44f07c:	ldr	w25, [x9, x8]
  44f080:	cmp	x25, x2
  44f084:	b.cc	44f0f4 <feof@plt+0x4c724>  // b.lo, b.ul, b.last
  44f088:	mov	w0, #0x1                   	// #1
  44f08c:	mov	w1, #0x70                  	// #112
  44f090:	blr	x20
  44f094:	mov	x24, x0
  44f098:	cbz	x0, 44f0d8 <feof@plt+0x4c708>
  44f09c:	mov	w1, #0x8                   	// #8
  44f0a0:	mov	x0, x25
  44f0a4:	blr	x20
  44f0a8:	str	x0, [x24, #24]
  44f0ac:	cbz	x0, 44f0c8 <feof@plt+0x4c6f8>
  44f0b0:	str	x25, [x24, #32]
  44f0b4:	str	w26, [x24, #104]
  44f0b8:	stp	x23, x22, [x24]
  44f0bc:	str	x21, [x24, #16]
  44f0c0:	stp	x20, x19, [x24, #64]
  44f0c4:	b	44f0d8 <feof@plt+0x4c708>
  44f0c8:	cbz	x19, 44f0d4 <feof@plt+0x4c704>
  44f0cc:	mov	x0, x24
  44f0d0:	blr	x19
  44f0d4:	mov	x24, xzr
  44f0d8:	mov	x0, x24
  44f0dc:	ldp	x20, x19, [sp, #64]
  44f0e0:	ldp	x22, x21, [sp, #48]
  44f0e4:	ldp	x24, x23, [sp, #32]
  44f0e8:	ldp	x26, x25, [sp, #16]
  44f0ec:	ldp	x29, x30, [sp], #80
  44f0f0:	ret
  44f0f4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44f0f8:	ldr	x0, [x8, #1336]
  44f0fc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f100:	add	x1, x1, #0x91c
  44f104:	bl	402440 <fprintf@plt>
  44f108:	bl	402860 <abort@plt>
  44f10c:	stp	x29, x30, [sp, #-80]!
  44f110:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f114:	stp	x26, x25, [sp, #16]
  44f118:	stp	x24, x23, [sp, #32]
  44f11c:	stp	x22, x21, [sp, #48]
  44f120:	stp	x20, x19, [sp, #64]
  44f124:	mov	x19, x6
  44f128:	mov	x20, x5
  44f12c:	mov	x21, x3
  44f130:	mov	x22, x2
  44f134:	mov	x23, x1
  44f138:	mov	x2, x0
  44f13c:	mov	w8, wzr
  44f140:	mov	w26, #0x1e                  	// #30
  44f144:	add	x9, x9, #0x73c
  44f148:	mov	x29, sp
  44f14c:	sub	w10, w26, w8
  44f150:	add	w10, w8, w10, lsr #1
  44f154:	lsl	x11, x10, #4
  44f158:	ldr	w11, [x9, x11]
  44f15c:	cmp	x11, x2
  44f160:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  44f164:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  44f168:	cmp	w26, w8
  44f16c:	b.ne	44f14c <feof@plt+0x4c77c>  // b.any
  44f170:	mov	w8, w26
  44f174:	lsl	x8, x8, #4
  44f178:	ldr	w25, [x9, x8]
  44f17c:	cmp	x25, x2
  44f180:	b.cc	44f1f0 <feof@plt+0x4c820>  // b.lo, b.ul, b.last
  44f184:	mov	w0, #0x1                   	// #1
  44f188:	mov	w1, #0x70                  	// #112
  44f18c:	blr	x4
  44f190:	mov	x24, x0
  44f194:	cbz	x0, 44f1d4 <feof@plt+0x4c804>
  44f198:	mov	w1, #0x8                   	// #8
  44f19c:	mov	x0, x25
  44f1a0:	blr	x20
  44f1a4:	str	x0, [x24, #24]
  44f1a8:	cbz	x0, 44f1c4 <feof@plt+0x4c7f4>
  44f1ac:	str	x25, [x24, #32]
  44f1b0:	str	w26, [x24, #104]
  44f1b4:	stp	x23, x22, [x24]
  44f1b8:	str	x21, [x24, #16]
  44f1bc:	stp	x20, x19, [x24, #64]
  44f1c0:	b	44f1d4 <feof@plt+0x4c804>
  44f1c4:	cbz	x19, 44f1d0 <feof@plt+0x4c800>
  44f1c8:	mov	x0, x24
  44f1cc:	blr	x19
  44f1d0:	mov	x24, xzr
  44f1d4:	mov	x0, x24
  44f1d8:	ldp	x20, x19, [sp, #64]
  44f1dc:	ldp	x22, x21, [sp, #48]
  44f1e0:	ldp	x24, x23, [sp, #32]
  44f1e4:	ldp	x26, x25, [sp, #16]
  44f1e8:	ldp	x29, x30, [sp], #80
  44f1ec:	ret
  44f1f0:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44f1f4:	ldr	x0, [x8, #1336]
  44f1f8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f1fc:	add	x1, x1, #0x91c
  44f200:	bl	402440 <fprintf@plt>
  44f204:	bl	402860 <abort@plt>
  44f208:	stp	x29, x30, [sp, #-96]!
  44f20c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f210:	str	x27, [sp, #16]
  44f214:	stp	x24, x23, [sp, #48]
  44f218:	stp	x22, x21, [sp, #64]
  44f21c:	stp	x20, x19, [sp, #80]
  44f220:	mov	x19, x6
  44f224:	mov	x21, x5
  44f228:	mov	x20, x4
  44f22c:	mov	x22, x3
  44f230:	mov	x23, x2
  44f234:	mov	x24, x1
  44f238:	mov	x2, x0
  44f23c:	mov	w8, wzr
  44f240:	mov	w27, #0x1e                  	// #30
  44f244:	add	x9, x9, #0x73c
  44f248:	stp	x26, x25, [sp, #32]
  44f24c:	mov	x29, sp
  44f250:	sub	w10, w27, w8
  44f254:	add	w10, w8, w10, lsr #1
  44f258:	lsl	x11, x10, #4
  44f25c:	ldr	w11, [x9, x11]
  44f260:	cmp	x11, x2
  44f264:	csel	w27, w27, w10, cc  // cc = lo, ul, last
  44f268:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  44f26c:	cmp	w27, w8
  44f270:	b.ne	44f250 <feof@plt+0x4c880>  // b.any
  44f274:	mov	w8, w27
  44f278:	lsl	x8, x8, #4
  44f27c:	ldr	w26, [x9, x8]
  44f280:	cmp	x26, x2
  44f284:	b.cc	44f308 <feof@plt+0x4c938>  // b.lo, b.ul, b.last
  44f288:	mov	w1, #0x1                   	// #1
  44f28c:	mov	w2, #0x70                  	// #112
  44f290:	mov	x0, x20
  44f294:	blr	x21
  44f298:	mov	x25, x0
  44f29c:	cbz	x0, 44f2e8 <feof@plt+0x4c918>
  44f2a0:	mov	w2, #0x8                   	// #8
  44f2a4:	mov	x0, x20
  44f2a8:	mov	x1, x26
  44f2ac:	blr	x21
  44f2b0:	str	x0, [x25, #24]
  44f2b4:	cbz	x0, 44f2d4 <feof@plt+0x4c904>
  44f2b8:	str	x26, [x25, #32]
  44f2bc:	str	w27, [x25, #104]
  44f2c0:	stp	x24, x23, [x25]
  44f2c4:	str	x22, [x25, #16]
  44f2c8:	stp	x20, x21, [x25, #80]
  44f2cc:	str	x19, [x25, #96]
  44f2d0:	b	44f2e8 <feof@plt+0x4c918>
  44f2d4:	cbz	x19, 44f2e4 <feof@plt+0x4c914>
  44f2d8:	mov	x0, x20
  44f2dc:	mov	x1, x25
  44f2e0:	blr	x19
  44f2e4:	mov	x25, xzr
  44f2e8:	mov	x0, x25
  44f2ec:	ldp	x20, x19, [sp, #80]
  44f2f0:	ldp	x22, x21, [sp, #64]
  44f2f4:	ldp	x24, x23, [sp, #48]
  44f2f8:	ldp	x26, x25, [sp, #32]
  44f2fc:	ldr	x27, [sp, #16]
  44f300:	ldp	x29, x30, [sp], #96
  44f304:	ret
  44f308:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44f30c:	ldr	x0, [x8, #1336]
  44f310:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f314:	add	x1, x1, #0x91c
  44f318:	bl	402440 <fprintf@plt>
  44f31c:	bl	402860 <abort@plt>
  44f320:	stp	x1, x2, [x0]
  44f324:	str	x3, [x0, #16]
  44f328:	stp	x4, x5, [x0, #80]
  44f32c:	str	x6, [x0, #96]
  44f330:	ret
  44f334:	stp	x29, x30, [sp, #-64]!
  44f338:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f33c:	stp	x24, x23, [sp, #16]
  44f340:	stp	x22, x21, [sp, #32]
  44f344:	stp	x20, x19, [sp, #48]
  44f348:	mov	x19, x3
  44f34c:	mov	x20, x2
  44f350:	mov	x21, x1
  44f354:	mov	x2, x0
  44f358:	mov	w8, wzr
  44f35c:	mov	w24, #0x1e                  	// #30
  44f360:	add	x9, x9, #0x73c
  44f364:	mov	x29, sp
  44f368:	sub	w10, w24, w8
  44f36c:	add	w10, w8, w10, lsr #1
  44f370:	lsl	x11, x10, #4
  44f374:	ldr	w11, [x9, x11]
  44f378:	cmp	x11, x2
  44f37c:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  44f380:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  44f384:	cmp	w24, w8
  44f388:	b.ne	44f368 <feof@plt+0x4c998>  // b.any
  44f38c:	mov	w8, w24
  44f390:	lsl	x8, x8, #4
  44f394:	ldr	w23, [x9, x8]
  44f398:	cmp	x23, x2
  44f39c:	b.cc	44f414 <feof@plt+0x4ca44>  // b.lo, b.ul, b.last
  44f3a0:	mov	w0, #0x1                   	// #1
  44f3a4:	mov	w1, #0x70                  	// #112
  44f3a8:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  44f3ac:	mov	x22, x0
  44f3b0:	cbz	x0, 44f3fc <feof@plt+0x4ca2c>
  44f3b4:	mov	w1, #0x8                   	// #8
  44f3b8:	mov	x0, x23
  44f3bc:	bl	4506d8 <_obstack_memory_used@@Base+0x140>
  44f3c0:	str	x0, [x22, #24]
  44f3c4:	cbz	x0, 44f3f0 <feof@plt+0x4ca20>
  44f3c8:	adrp	x8, 450000 <feof@plt+0x4d630>
  44f3cc:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x330>
  44f3d0:	add	x8, x8, #0x6d8
  44f3d4:	add	x9, x9, #0x4c0
  44f3d8:	str	x23, [x22, #32]
  44f3dc:	str	w24, [x22, #104]
  44f3e0:	stp	x21, x20, [x22]
  44f3e4:	str	x19, [x22, #16]
  44f3e8:	stp	x8, x9, [x22, #64]
  44f3ec:	b	44f3fc <feof@plt+0x4ca2c>
  44f3f0:	mov	x0, x22
  44f3f4:	bl	4024c0 <free@plt>
  44f3f8:	mov	x22, xzr
  44f3fc:	mov	x0, x22
  44f400:	ldp	x20, x19, [sp, #48]
  44f404:	ldp	x22, x21, [sp, #32]
  44f408:	ldp	x24, x23, [sp, #16]
  44f40c:	ldp	x29, x30, [sp], #64
  44f410:	ret
  44f414:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44f418:	ldr	x0, [x8, #1336]
  44f41c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f420:	add	x1, x1, #0x91c
  44f424:	bl	402440 <fprintf@plt>
  44f428:	bl	402860 <abort@plt>
  44f42c:	stp	x29, x30, [sp, #-64]!
  44f430:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f434:	stp	x24, x23, [sp, #16]
  44f438:	stp	x22, x21, [sp, #32]
  44f43c:	stp	x20, x19, [sp, #48]
  44f440:	mov	x19, x3
  44f444:	mov	x20, x2
  44f448:	mov	x21, x1
  44f44c:	mov	x2, x0
  44f450:	mov	w8, wzr
  44f454:	mov	w24, #0x1e                  	// #30
  44f458:	add	x9, x9, #0x73c
  44f45c:	mov	x29, sp
  44f460:	sub	w10, w24, w8
  44f464:	add	w10, w8, w10, lsr #1
  44f468:	lsl	x11, x10, #4
  44f46c:	ldr	w11, [x9, x11]
  44f470:	cmp	x11, x2
  44f474:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  44f478:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  44f47c:	cmp	w24, w8
  44f480:	b.ne	44f460 <feof@plt+0x4ca90>  // b.any
  44f484:	mov	w8, w24
  44f488:	lsl	x8, x8, #4
  44f48c:	ldr	w23, [x9, x8]
  44f490:	cmp	x23, x2
  44f494:	b.cc	44f50c <feof@plt+0x4cb3c>  // b.lo, b.ul, b.last
  44f498:	mov	w0, #0x1                   	// #1
  44f49c:	mov	w1, #0x70                  	// #112
  44f4a0:	bl	402400 <calloc@plt>
  44f4a4:	mov	x22, x0
  44f4a8:	cbz	x0, 44f4f4 <feof@plt+0x4cb24>
  44f4ac:	mov	w1, #0x8                   	// #8
  44f4b0:	mov	x0, x23
  44f4b4:	bl	402400 <calloc@plt>
  44f4b8:	str	x0, [x22, #24]
  44f4bc:	cbz	x0, 44f4e8 <feof@plt+0x4cb18>
  44f4c0:	adrp	x8, 402000 <_Unwind_Backtrace@plt-0x330>
  44f4c4:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x330>
  44f4c8:	add	x8, x8, #0x400
  44f4cc:	add	x9, x9, #0x4c0
  44f4d0:	str	x23, [x22, #32]
  44f4d4:	str	w24, [x22, #104]
  44f4d8:	stp	x21, x20, [x22]
  44f4dc:	str	x19, [x22, #16]
  44f4e0:	stp	x8, x9, [x22, #64]
  44f4e4:	b	44f4f4 <feof@plt+0x4cb24>
  44f4e8:	mov	x0, x22
  44f4ec:	bl	4024c0 <free@plt>
  44f4f0:	mov	x22, xzr
  44f4f4:	mov	x0, x22
  44f4f8:	ldp	x20, x19, [sp, #48]
  44f4fc:	ldp	x22, x21, [sp, #32]
  44f500:	ldp	x24, x23, [sp, #16]
  44f504:	ldp	x29, x30, [sp], #64
  44f508:	ret
  44f50c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44f510:	ldr	x0, [x8, #1336]
  44f514:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f518:	add	x1, x1, #0x91c
  44f51c:	bl	402440 <fprintf@plt>
  44f520:	bl	402860 <abort@plt>
  44f524:	stp	x29, x30, [sp, #-48]!
  44f528:	str	x21, [sp, #16]
  44f52c:	stp	x20, x19, [sp, #32]
  44f530:	ldp	x8, x20, [x0, #16]
  44f534:	mov	x19, x0
  44f538:	mov	x29, sp
  44f53c:	cbz	x8, 44f54c <feof@plt+0x4cb7c>
  44f540:	ldr	w8, [x19, #32]
  44f544:	subs	w21, w8, #0x1
  44f548:	b.pl	44f57c <feof@plt+0x4cbac>  // b.nfrst
  44f54c:	ldr	x8, [x19, #72]
  44f550:	cbz	x8, 44f594 <feof@plt+0x4cbc4>
  44f554:	mov	x0, x20
  44f558:	blr	x8
  44f55c:	ldr	x1, [x19, #72]
  44f560:	mov	x0, x19
  44f564:	ldp	x20, x19, [sp, #32]
  44f568:	ldr	x21, [sp, #16]
  44f56c:	ldp	x29, x30, [sp], #48
  44f570:	br	x1
  44f574:	subs	w21, w21, #0x1
  44f578:	b.mi	44f54c <feof@plt+0x4cb7c>  // b.first
  44f57c:	ldr	x0, [x20, w21, uxtw #3]
  44f580:	cmp	x0, #0x2
  44f584:	b.cc	44f574 <feof@plt+0x4cba4>  // b.lo, b.ul, b.last
  44f588:	ldr	x8, [x19, #16]
  44f58c:	blr	x8
  44f590:	b	44f574 <feof@plt+0x4cba4>
  44f594:	ldr	x8, [x19, #96]
  44f598:	cbz	x8, 44f5c4 <feof@plt+0x4cbf4>
  44f59c:	ldr	x0, [x19, #80]
  44f5a0:	mov	x1, x20
  44f5a4:	blr	x8
  44f5a8:	ldr	x2, [x19, #96]
  44f5ac:	ldr	x0, [x19, #80]
  44f5b0:	mov	x1, x19
  44f5b4:	ldp	x20, x19, [sp, #32]
  44f5b8:	ldr	x21, [sp, #16]
  44f5bc:	ldp	x29, x30, [sp], #48
  44f5c0:	br	x2
  44f5c4:	ldp	x20, x19, [sp, #32]
  44f5c8:	ldr	x21, [sp, #16]
  44f5cc:	ldp	x29, x30, [sp], #48
  44f5d0:	ret
  44f5d4:	stp	x29, x30, [sp, #-48]!
  44f5d8:	stp	x22, x21, [sp, #16]
  44f5dc:	stp	x20, x19, [sp, #32]
  44f5e0:	ldp	x8, x20, [x0, #16]
  44f5e4:	ldr	x21, [x0, #32]
  44f5e8:	mov	x19, x0
  44f5ec:	mov	x29, sp
  44f5f0:	cbz	x8, 44f5fc <feof@plt+0x4cc2c>
  44f5f4:	subs	w22, w21, #0x1
  44f5f8:	b.pl	44f65c <feof@plt+0x4cc8c>  // b.nfrst
  44f5fc:	cmp	x21, #0x20, lsl #12
  44f600:	b.ls	44f674 <feof@plt+0x4cca4>  // b.plast
  44f604:	mov	w8, wzr
  44f608:	mov	w21, #0x1e                  	// #30
  44f60c:	sub	w9, w21, w8
  44f610:	add	w9, w8, w9, lsr #1
  44f614:	cmp	w9, #0x5
  44f618:	csel	w21, w21, w9, cc  // cc = lo, ul, last
  44f61c:	csinc	w8, w8, w9, cs  // cs = hs, nlast
  44f620:	cmp	w21, w8
  44f624:	b.ne	44f60c <feof@plt+0x4cc3c>  // b.any
  44f628:	cmp	w21, #0x4
  44f62c:	b.ls	44f6e4 <feof@plt+0x4cd14>  // b.plast
  44f630:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f634:	sbfiz	x9, x21, #4, #32
  44f638:	add	x10, x10, #0x73c
  44f63c:	ldr	x8, [x19, #72]
  44f640:	ldrsw	x20, [x10, x9]
  44f644:	cbz	x8, 44f688 <feof@plt+0x4ccb8>
  44f648:	ldr	x0, [x19, #24]
  44f64c:	blr	x8
  44f650:	b	44f69c <feof@plt+0x4cccc>
  44f654:	subs	w22, w22, #0x1
  44f658:	b.mi	44f5fc <feof@plt+0x4cc2c>  // b.first
  44f65c:	ldr	x0, [x20, w22, uxtw #3]
  44f660:	cmp	x0, #0x2
  44f664:	b.cc	44f654 <feof@plt+0x4cc84>  // b.lo, b.ul, b.last
  44f668:	ldr	x8, [x19, #16]
  44f66c:	blr	x8
  44f670:	b	44f654 <feof@plt+0x4cc84>
  44f674:	lsl	x2, x21, #3
  44f678:	mov	x0, x20
  44f67c:	mov	w1, wzr
  44f680:	bl	4024e0 <memset@plt>
  44f684:	b	44f6d0 <feof@plt+0x4cd00>
  44f688:	ldr	x8, [x19, #96]
  44f68c:	cbz	x8, 44f69c <feof@plt+0x4cccc>
  44f690:	ldr	x0, [x19, #80]
  44f694:	ldr	x1, [x19, #24]
  44f698:	blr	x8
  44f69c:	ldr	x8, [x19, #88]
  44f6a0:	cbz	x8, 44f6b8 <feof@plt+0x4cce8>
  44f6a4:	ldr	x0, [x19, #80]
  44f6a8:	mov	w2, #0x8                   	// #8
  44f6ac:	mov	x1, x20
  44f6b0:	blr	x8
  44f6b4:	b	44f6c8 <feof@plt+0x4ccf8>
  44f6b8:	ldr	x8, [x19, #64]
  44f6bc:	mov	w1, #0x8                   	// #8
  44f6c0:	mov	x0, x20
  44f6c4:	blr	x8
  44f6c8:	stp	x0, x20, [x19, #24]
  44f6cc:	str	w21, [x19, #104]
  44f6d0:	stp	xzr, xzr, [x19, #40]
  44f6d4:	ldp	x20, x19, [sp, #32]
  44f6d8:	ldp	x22, x21, [sp, #16]
  44f6dc:	ldp	x29, x30, [sp], #48
  44f6e0:	ret
  44f6e4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44f6e8:	ldr	x0, [x8, #1336]
  44f6ec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f6f0:	add	x1, x1, #0x91c
  44f6f4:	mov	w2, #0x80                  	// #128
  44f6f8:	bl	402440 <fprintf@plt>
  44f6fc:	bl	402860 <abort@plt>
  44f700:	stp	x29, x30, [sp, #-80]!
  44f704:	stp	x26, x25, [sp, #16]
  44f708:	stp	x24, x23, [sp, #32]
  44f70c:	stp	x22, x21, [sp, #48]
  44f710:	stp	x20, x19, [sp, #64]
  44f714:	ldr	w8, [x0, #104]
  44f718:	adrp	x25, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f71c:	add	x25, x25, #0x73c
  44f720:	ldr	w9, [x0, #56]
  44f724:	add	x11, x25, x8, lsl #4
  44f728:	ldp	w10, w12, [x11]
  44f72c:	mov	w26, w2
  44f730:	add	w9, w9, #0x1
  44f734:	str	w9, [x0, #56]
  44f738:	ldr	w9, [x11, #12]
  44f73c:	mul	x11, x12, x26
  44f740:	lsr	x11, x11, #32
  44f744:	sub	w12, w2, w11
  44f748:	ldr	x13, [x0, #24]
  44f74c:	add	w11, w11, w12, lsr #1
  44f750:	lsr	w11, w11, w9
  44f754:	msub	w24, w11, w10, w2
  44f758:	ldr	x22, [x13, w24, uxtw #3]
  44f75c:	mov	x29, sp
  44f760:	cbz	x22, 44f80c <feof@plt+0x4ce3c>
  44f764:	ldr	x23, [x0, #32]
  44f768:	mov	w21, w2
  44f76c:	mov	x19, x0
  44f770:	mov	x20, x1
  44f774:	cmp	x22, #0x1
  44f778:	b.eq	44f7a0 <feof@plt+0x4cdd0>  // b.none
  44f77c:	ldr	x8, [x19, #8]
  44f780:	mov	x0, x22
  44f784:	mov	x1, x20
  44f788:	blr	x8
  44f78c:	cbnz	w0, 44f80c <feof@plt+0x4ce3c>
  44f790:	ldr	w8, [x19, #104]
  44f794:	add	x9, x25, x8, lsl #4
  44f798:	ldr	w10, [x9]
  44f79c:	ldr	w9, [x9, #12]
  44f7a0:	add	x8, x25, x8, lsl #4
  44f7a4:	ldr	w8, [x8, #8]
  44f7a8:	sub	w10, w10, #0x2
  44f7ac:	mul	x8, x8, x26
  44f7b0:	lsr	x8, x8, #32
  44f7b4:	sub	w11, w21, w8
  44f7b8:	add	w8, w8, w11, lsr #1
  44f7bc:	lsr	w8, w8, w9
  44f7c0:	msub	w8, w8, w10, w21
  44f7c4:	add	w21, w8, #0x1
  44f7c8:	ldr	w8, [x19, #60]
  44f7cc:	add	w9, w21, w24
  44f7d0:	ldr	x10, [x19, #24]
  44f7d4:	cmp	x23, x9
  44f7d8:	csel	w11, wzr, w23, hi  // hi = pmore
  44f7dc:	add	w8, w8, #0x1
  44f7e0:	str	w8, [x19, #60]
  44f7e4:	sub	w24, w9, w11
  44f7e8:	ldr	x22, [x10, w24, uxtw #3]
  44f7ec:	cmp	x22, #0x1
  44f7f0:	b.eq	44f7c8 <feof@plt+0x4cdf8>  // b.none
  44f7f4:	cbz	x22, 44f80c <feof@plt+0x4ce3c>
  44f7f8:	ldr	x8, [x19, #8]
  44f7fc:	mov	x0, x22
  44f800:	mov	x1, x20
  44f804:	blr	x8
  44f808:	cbz	w0, 44f7c8 <feof@plt+0x4cdf8>
  44f80c:	mov	x0, x22
  44f810:	ldp	x20, x19, [sp, #64]
  44f814:	ldp	x22, x21, [sp, #48]
  44f818:	ldp	x24, x23, [sp, #32]
  44f81c:	ldp	x26, x25, [sp, #16]
  44f820:	ldp	x29, x30, [sp], #80
  44f824:	ret
  44f828:	stp	x29, x30, [sp, #-32]!
  44f82c:	stp	x20, x19, [sp, #16]
  44f830:	ldr	x8, [x0]
  44f834:	mov	x19, x0
  44f838:	mov	x0, x1
  44f83c:	mov	x29, sp
  44f840:	mov	x20, x1
  44f844:	blr	x8
  44f848:	mov	w2, w0
  44f84c:	mov	x0, x19
  44f850:	mov	x1, x20
  44f854:	ldp	x20, x19, [sp, #16]
  44f858:	ldp	x29, x30, [sp], #32
  44f85c:	b	44f700 <feof@plt+0x4cd30>
  44f860:	stp	x29, x30, [sp, #-96]!
  44f864:	stp	x26, x25, [sp, #32]
  44f868:	stp	x24, x23, [sp, #48]
  44f86c:	stp	x22, x21, [sp, #64]
  44f870:	stp	x20, x19, [sp, #80]
  44f874:	ldr	x24, [x0, #32]
  44f878:	mov	w20, w3
  44f87c:	mov	w23, w2
  44f880:	mov	x19, x0
  44f884:	cmp	w3, #0x1
  44f888:	mov	x21, x1
  44f88c:	str	x27, [sp, #16]
  44f890:	mov	x29, sp
  44f894:	b.ne	44f8b8 <feof@plt+0x4cee8>  // b.any
  44f898:	ldr	x8, [x19, #40]
  44f89c:	add	x9, x24, x24, lsl #1
  44f8a0:	cmp	x9, x8, lsl #2
  44f8a4:	b.hi	44f8b8 <feof@plt+0x4cee8>  // b.pmore
  44f8a8:	mov	x0, x19
  44f8ac:	bl	44fa20 <feof@plt+0x4d050>
  44f8b0:	cbz	w0, 44f94c <feof@plt+0x4cf7c>
  44f8b4:	ldr	x24, [x19, #32]
  44f8b8:	ldr	w8, [x19, #104]
  44f8bc:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x10a68>
  44f8c0:	add	x26, x26, #0x73c
  44f8c4:	ldr	w9, [x19, #56]
  44f8c8:	add	x12, x26, x8, lsl #4
  44f8cc:	ldp	w11, w13, [x12]
  44f8d0:	mov	w27, w23
  44f8d4:	add	w14, w9, #0x1
  44f8d8:	ldr	w9, [x12, #12]
  44f8dc:	mul	x12, x13, x27
  44f8e0:	lsr	x12, x12, #32
  44f8e4:	ldr	x10, [x19, #24]
  44f8e8:	sub	w13, w23, w12
  44f8ec:	add	w12, w12, w13, lsr #1
  44f8f0:	lsr	w12, w12, w9
  44f8f4:	msub	w25, w12, w11, w23
  44f8f8:	str	w14, [x19, #56]
  44f8fc:	add	x22, x10, w25, uxtw #3
  44f900:	ldr	x0, [x22]
  44f904:	cbz	x0, 44f92c <feof@plt+0x4cf5c>
  44f908:	cmp	x0, #0x1
  44f90c:	b.eq	44f968 <feof@plt+0x4cf98>  // b.none
  44f910:	ldr	x8, [x19, #8]
  44f914:	mov	x1, x21
  44f918:	blr	x8
  44f91c:	cbz	w0, 44f954 <feof@plt+0x4cf84>
  44f920:	ldr	x8, [x19, #24]
  44f924:	add	x22, x8, x25, lsl #3
  44f928:	b	44fa00 <feof@plt+0x4d030>
  44f92c:	mov	x22, xzr
  44f930:	cbz	w20, 44f94c <feof@plt+0x4cf7c>
  44f934:	cbz	x22, 44f9f0 <feof@plt+0x4d020>
  44f938:	ldr	x8, [x19, #48]
  44f93c:	sub	x8, x8, #0x1
  44f940:	str	x8, [x19, #48]
  44f944:	str	xzr, [x22]
  44f948:	b	44fa00 <feof@plt+0x4d030>
  44f94c:	mov	x22, xzr
  44f950:	b	44fa00 <feof@plt+0x4d030>
  44f954:	ldr	w8, [x19, #104]
  44f958:	mov	x22, xzr
  44f95c:	add	x9, x26, x8, lsl #4
  44f960:	ldr	w11, [x9]
  44f964:	ldr	w9, [x9, #12]
  44f968:	add	x8, x26, x8, lsl #4
  44f96c:	ldr	w8, [x8, #8]
  44f970:	sub	w10, w11, #0x2
  44f974:	mul	x8, x8, x27
  44f978:	lsr	x8, x8, #32
  44f97c:	sub	w11, w23, w8
  44f980:	add	w8, w8, w11, lsr #1
  44f984:	lsr	w8, w8, w9
  44f988:	msub	w8, w8, w10, w23
  44f98c:	add	w23, w8, #0x1
  44f990:	ldr	w8, [x19, #60]
  44f994:	add	w9, w23, w25
  44f998:	ldr	x10, [x19, #24]
  44f99c:	cmp	x24, x9
  44f9a0:	csel	w11, wzr, w24, hi  // hi = pmore
  44f9a4:	add	w8, w8, #0x1
  44f9a8:	str	w8, [x19, #60]
  44f9ac:	sub	w25, w9, w11
  44f9b0:	ldr	x0, [x10, w25, uxtw #3]
  44f9b4:	cbz	x0, 44f930 <feof@plt+0x4cf60>
  44f9b8:	cmp	x0, #0x1
  44f9bc:	b.eq	44f9d4 <feof@plt+0x4d004>  // b.none
  44f9c0:	ldr	x8, [x19, #8]
  44f9c4:	mov	x1, x21
  44f9c8:	blr	x8
  44f9cc:	cbz	w0, 44f990 <feof@plt+0x4cfc0>
  44f9d0:	b	44f9e4 <feof@plt+0x4d014>
  44f9d4:	add	x8, x10, w25, uxtw #3
  44f9d8:	cmp	x22, #0x0
  44f9dc:	csel	x22, x8, x22, eq  // eq = none
  44f9e0:	b	44f990 <feof@plt+0x4cfc0>
  44f9e4:	ldr	x8, [x19, #24]
  44f9e8:	add	x22, x8, w25, uxtw #3
  44f9ec:	b	44fa00 <feof@plt+0x4d030>
  44f9f0:	ldr	x8, [x19, #40]
  44f9f4:	add	x22, x10, w25, uxtw #3
  44f9f8:	add	x8, x8, #0x1
  44f9fc:	str	x8, [x19, #40]
  44fa00:	mov	x0, x22
  44fa04:	ldp	x20, x19, [sp, #80]
  44fa08:	ldp	x22, x21, [sp, #64]
  44fa0c:	ldp	x24, x23, [sp, #48]
  44fa10:	ldp	x26, x25, [sp, #32]
  44fa14:	ldr	x27, [sp, #16]
  44fa18:	ldp	x29, x30, [sp], #96
  44fa1c:	ret
  44fa20:	stp	x29, x30, [sp, #-64]!
  44fa24:	stp	x24, x23, [sp, #16]
  44fa28:	stp	x22, x21, [sp, #32]
  44fa2c:	stp	x20, x19, [sp, #48]
  44fa30:	ldp	x8, x9, [x0, #40]
  44fa34:	ldp	x19, x23, [x0, #24]
  44fa38:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x10a68>
  44fa3c:	mov	x20, x0
  44fa40:	sub	x8, x8, x9
  44fa44:	lsl	x2, x8, #1
  44fa48:	cmp	x2, x23
  44fa4c:	add	x22, x22, #0x73c
  44fa50:	mov	x29, sp
  44fa54:	b.hi	44fa74 <feof@plt+0x4d0a4>  // b.pmore
  44fa58:	ldr	w24, [x20, #104]
  44fa5c:	cmp	x23, #0x21
  44fa60:	b.cc	44fad4 <feof@plt+0x4d104>  // b.lo, b.ul, b.last
  44fa64:	lsl	x8, x8, #3
  44fa68:	cmp	x8, x23
  44fa6c:	mov	x21, x23
  44fa70:	b.cs	44fab4 <feof@plt+0x4d0e4>  // b.hs, b.nlast
  44fa74:	mov	w8, wzr
  44fa78:	mov	w24, #0x1e                  	// #30
  44fa7c:	sub	w9, w24, w8
  44fa80:	add	w9, w8, w9, lsr #1
  44fa84:	lsl	x10, x9, #4
  44fa88:	ldr	w10, [x22, x10]
  44fa8c:	cmp	x2, x10
  44fa90:	csel	w24, w24, w9, hi  // hi = pmore
  44fa94:	csinc	w8, w8, w9, ls  // ls = plast
  44fa98:	cmp	w24, w8
  44fa9c:	b.ne	44fa7c <feof@plt+0x4d0ac>  // b.any
  44faa0:	mov	w8, w24
  44faa4:	lsl	x8, x8, #4
  44faa8:	ldr	w21, [x22, x8]
  44faac:	cmp	x2, x21
  44fab0:	b.hi	44fc14 <feof@plt+0x4d244>  // b.pmore
  44fab4:	ldr	x8, [x20, #88]
  44fab8:	cbz	x8, 44fae0 <feof@plt+0x4d110>
  44fabc:	ldr	x0, [x20, #80]
  44fac0:	mov	w2, #0x8                   	// #8
  44fac4:	mov	x1, x21
  44fac8:	blr	x8
  44facc:	cbnz	x0, 44faf4 <feof@plt+0x4d124>
  44fad0:	b	44fc00 <feof@plt+0x4d230>
  44fad4:	mov	x21, x23
  44fad8:	ldr	x8, [x20, #88]
  44fadc:	cbnz	x8, 44fabc <feof@plt+0x4d0ec>
  44fae0:	ldr	x8, [x20, #64]
  44fae4:	mov	w1, #0x8                   	// #8
  44fae8:	mov	x0, x21
  44faec:	blr	x8
  44faf0:	cbz	x0, 44fc00 <feof@plt+0x4d230>
  44faf4:	ldp	x9, x8, [x20, #40]
  44faf8:	add	x23, x19, x23, lsl #3
  44fafc:	str	w24, [x20, #104]
  44fb00:	mov	x24, x19
  44fb04:	sub	x8, x9, x8
  44fb08:	stp	x0, x21, [x20, #24]
  44fb0c:	stp	x8, xzr, [x20, #40]
  44fb10:	b	44fb24 <feof@plt+0x4d154>
  44fb14:	str	x21, [x14]
  44fb18:	add	x24, x24, #0x8
  44fb1c:	cmp	x24, x23
  44fb20:	b.cs	44fbd4 <feof@plt+0x4d204>  // b.hs, b.nlast
  44fb24:	ldr	x21, [x24]
  44fb28:	cmp	x21, #0x2
  44fb2c:	b.cc	44fb18 <feof@plt+0x4d148>  // b.lo, b.ul, b.last
  44fb30:	ldr	x8, [x20]
  44fb34:	mov	x0, x21
  44fb38:	blr	x8
  44fb3c:	ldr	w10, [x20, #104]
  44fb40:	mov	w11, w0
  44fb44:	add	x8, x22, x10, lsl #4
  44fb48:	ldp	w13, w9, [x8]
  44fb4c:	ldr	w12, [x8, #12]
  44fb50:	mul	x8, x9, x11
  44fb54:	lsr	x9, x8, #32
  44fb58:	sub	w14, w0, w9
  44fb5c:	ldr	x8, [x20, #24]
  44fb60:	add	w9, w9, w14, lsr #1
  44fb64:	lsr	w9, w9, w12
  44fb68:	msub	w9, w9, w13, w0
  44fb6c:	add	x14, x8, w9, uxtw #3
  44fb70:	ldr	x15, [x14]
  44fb74:	cbz	x15, 44fb14 <feof@plt+0x4d144>
  44fb78:	cmp	x15, #0x1
  44fb7c:	b.eq	44fbd0 <feof@plt+0x4d200>  // b.none
  44fb80:	add	x10, x22, x10, lsl #4
  44fb84:	ldr	w14, [x10, #8]
  44fb88:	ldr	x10, [x20, #32]
  44fb8c:	sub	w13, w13, #0x2
  44fb90:	mul	x14, x14, x11
  44fb94:	lsr	x14, x14, #32
  44fb98:	sub	w15, w11, w14
  44fb9c:	add	w14, w14, w15, lsr #1
  44fba0:	lsr	w12, w14, w12
  44fba4:	msub	w11, w12, w13, w11
  44fba8:	add	w11, w11, #0x1
  44fbac:	add	w9, w11, w9
  44fbb0:	cmp	x10, x9
  44fbb4:	csel	w12, wzr, w10, hi  // hi = pmore
  44fbb8:	sub	w9, w9, w12
  44fbbc:	add	x14, x8, w9, uxtw #3
  44fbc0:	ldr	x12, [x14]
  44fbc4:	cbz	x12, 44fb14 <feof@plt+0x4d144>
  44fbc8:	cmp	x12, #0x1
  44fbcc:	b.ne	44fbac <feof@plt+0x4d1dc>  // b.any
  44fbd0:	bl	402860 <abort@plt>
  44fbd4:	ldr	x8, [x20, #72]
  44fbd8:	cbz	x8, 44fbe8 <feof@plt+0x4d218>
  44fbdc:	mov	x0, x19
  44fbe0:	blr	x8
  44fbe4:	b	44fbfc <feof@plt+0x4d22c>
  44fbe8:	ldr	x8, [x20, #96]
  44fbec:	cbz	x8, 44fbfc <feof@plt+0x4d22c>
  44fbf0:	ldr	x0, [x20, #80]
  44fbf4:	mov	x1, x19
  44fbf8:	blr	x8
  44fbfc:	mov	w0, #0x1                   	// #1
  44fc00:	ldp	x20, x19, [sp, #48]
  44fc04:	ldp	x22, x21, [sp, #32]
  44fc08:	ldp	x24, x23, [sp, #16]
  44fc0c:	ldp	x29, x30, [sp], #64
  44fc10:	ret
  44fc14:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  44fc18:	ldr	x0, [x8, #1336]
  44fc1c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  44fc20:	add	x1, x1, #0x91c
  44fc24:	bl	402440 <fprintf@plt>
  44fc28:	bl	402860 <abort@plt>
  44fc2c:	stp	x29, x30, [sp, #-48]!
  44fc30:	stp	x20, x19, [sp, #32]
  44fc34:	ldr	x8, [x0]
  44fc38:	mov	x20, x0
  44fc3c:	mov	x0, x1
  44fc40:	str	x21, [sp, #16]
  44fc44:	mov	x29, sp
  44fc48:	mov	w19, w2
  44fc4c:	mov	x21, x1
  44fc50:	blr	x8
  44fc54:	mov	w2, w0
  44fc58:	mov	x0, x20
  44fc5c:	mov	x1, x21
  44fc60:	mov	w3, w19
  44fc64:	ldp	x20, x19, [sp, #32]
  44fc68:	ldr	x21, [sp, #16]
  44fc6c:	ldp	x29, x30, [sp], #48
  44fc70:	b	44f860 <feof@plt+0x4ce90>
  44fc74:	stp	x29, x30, [sp, #-32]!
  44fc78:	stp	x20, x19, [sp, #16]
  44fc7c:	ldr	x8, [x0]
  44fc80:	mov	x19, x0
  44fc84:	mov	x0, x1
  44fc88:	mov	x29, sp
  44fc8c:	mov	x20, x1
  44fc90:	blr	x8
  44fc94:	mov	w2, w0
  44fc98:	mov	x0, x19
  44fc9c:	mov	x1, x20
  44fca0:	mov	w3, wzr
  44fca4:	bl	44f860 <feof@plt+0x4ce90>
  44fca8:	cbz	x0, 44fcd4 <feof@plt+0x4d304>
  44fcac:	ldr	x8, [x19, #16]
  44fcb0:	mov	x20, x0
  44fcb4:	cbz	x8, 44fcc0 <feof@plt+0x4d2f0>
  44fcb8:	ldr	x0, [x20]
  44fcbc:	blr	x8
  44fcc0:	mov	w8, #0x1                   	// #1
  44fcc4:	str	x8, [x20]
  44fcc8:	ldr	x8, [x19, #48]
  44fccc:	add	x8, x8, #0x1
  44fcd0:	str	x8, [x19, #48]
  44fcd4:	ldp	x20, x19, [sp, #16]
  44fcd8:	ldp	x29, x30, [sp], #32
  44fcdc:	ret
  44fce0:	stp	x29, x30, [sp, #-32]!
  44fce4:	mov	w3, wzr
  44fce8:	stp	x20, x19, [sp, #16]
  44fcec:	mov	x29, sp
  44fcf0:	mov	x19, x0
  44fcf4:	bl	44f860 <feof@plt+0x4ce90>
  44fcf8:	cbz	x0, 44fd24 <feof@plt+0x4d354>
  44fcfc:	ldr	x8, [x19, #16]
  44fd00:	mov	x20, x0
  44fd04:	cbz	x8, 44fd10 <feof@plt+0x4d340>
  44fd08:	ldr	x0, [x20]
  44fd0c:	blr	x8
  44fd10:	mov	w8, #0x1                   	// #1
  44fd14:	str	x8, [x20]
  44fd18:	ldr	x8, [x19, #48]
  44fd1c:	add	x8, x8, #0x1
  44fd20:	str	x8, [x19, #48]
  44fd24:	ldp	x20, x19, [sp, #16]
  44fd28:	ldp	x29, x30, [sp], #32
  44fd2c:	ret
  44fd30:	stp	x29, x30, [sp, #-32]!
  44fd34:	stp	x20, x19, [sp, #16]
  44fd38:	ldr	x8, [x0, #24]
  44fd3c:	mov	x29, sp
  44fd40:	cmp	x8, x1
  44fd44:	b.hi	44fd98 <feof@plt+0x4d3c8>  // b.pmore
  44fd48:	ldr	x9, [x0, #32]
  44fd4c:	mov	x19, x0
  44fd50:	mov	x20, x1
  44fd54:	add	x8, x8, x9, lsl #3
  44fd58:	cmp	x8, x1
  44fd5c:	b.ls	44fd98 <feof@plt+0x4d3c8>  // b.plast
  44fd60:	ldr	x0, [x20]
  44fd64:	cmp	x0, #0x1
  44fd68:	b.ls	44fd98 <feof@plt+0x4d3c8>  // b.plast
  44fd6c:	ldr	x8, [x19, #16]
  44fd70:	cbz	x8, 44fd78 <feof@plt+0x4d3a8>
  44fd74:	blr	x8
  44fd78:	mov	w8, #0x1                   	// #1
  44fd7c:	str	x8, [x20]
  44fd80:	ldr	x8, [x19, #48]
  44fd84:	add	x8, x8, #0x1
  44fd88:	str	x8, [x19, #48]
  44fd8c:	ldp	x20, x19, [sp, #16]
  44fd90:	ldp	x29, x30, [sp], #32
  44fd94:	ret
  44fd98:	bl	402860 <abort@plt>
  44fd9c:	stp	x29, x30, [sp, #-48]!
  44fda0:	stp	x22, x21, [sp, #16]
  44fda4:	stp	x20, x19, [sp, #32]
  44fda8:	ldp	x21, x8, [x0, #24]
  44fdac:	mov	x19, x2
  44fdb0:	mov	x20, x1
  44fdb4:	mov	x29, sp
  44fdb8:	add	x22, x21, x8, lsl #3
  44fdbc:	b	44fdcc <feof@plt+0x4d3fc>
  44fdc0:	add	x21, x21, #0x8
  44fdc4:	cmp	x21, x22
  44fdc8:	b.cs	44fde8 <feof@plt+0x4d418>  // b.hs, b.nlast
  44fdcc:	ldr	x8, [x21]
  44fdd0:	cmp	x8, #0x2
  44fdd4:	b.cc	44fdc0 <feof@plt+0x4d3f0>  // b.lo, b.ul, b.last
  44fdd8:	mov	x0, x21
  44fddc:	mov	x1, x19
  44fde0:	blr	x20
  44fde4:	cbnz	w0, 44fdc0 <feof@plt+0x4d3f0>
  44fde8:	ldp	x20, x19, [sp, #32]
  44fdec:	ldp	x22, x21, [sp, #16]
  44fdf0:	ldp	x29, x30, [sp], #48
  44fdf4:	ret
  44fdf8:	stp	x29, x30, [sp, #-48]!
  44fdfc:	stp	x22, x21, [sp, #16]
  44fe00:	stp	x20, x19, [sp, #32]
  44fe04:	ldr	x8, [x0, #32]
  44fe08:	mov	x19, x2
  44fe0c:	mov	x21, x0
  44fe10:	mov	x20, x1
  44fe14:	cmp	x8, #0x21
  44fe18:	mov	x29, sp
  44fe1c:	b.cc	44fe40 <feof@plt+0x4d470>  // b.lo, b.ul, b.last
  44fe20:	ldp	x9, x10, [x21, #40]
  44fe24:	sub	x9, x9, x10
  44fe28:	lsl	x9, x9, #3
  44fe2c:	cmp	x9, x8
  44fe30:	b.cs	44fe40 <feof@plt+0x4d470>  // b.hs, b.nlast
  44fe34:	mov	x0, x21
  44fe38:	bl	44fa20 <feof@plt+0x4d050>
  44fe3c:	ldr	x8, [x21, #32]
  44fe40:	ldr	x21, [x21, #24]
  44fe44:	add	x22, x21, x8, lsl #3
  44fe48:	b	44fe58 <feof@plt+0x4d488>
  44fe4c:	add	x21, x21, #0x8
  44fe50:	cmp	x21, x22
  44fe54:	b.cs	44fe74 <feof@plt+0x4d4a4>  // b.hs, b.nlast
  44fe58:	ldr	x8, [x21]
  44fe5c:	cmp	x8, #0x2
  44fe60:	b.cc	44fe4c <feof@plt+0x4d47c>  // b.lo, b.ul, b.last
  44fe64:	mov	x0, x21
  44fe68:	mov	x1, x19
  44fe6c:	blr	x20
  44fe70:	cbnz	w0, 44fe4c <feof@plt+0x4d47c>
  44fe74:	ldp	x20, x19, [sp, #32]
  44fe78:	ldp	x22, x21, [sp, #16]
  44fe7c:	ldp	x29, x30, [sp], #48
  44fe80:	ret
  44fe84:	ldr	w8, [x0, #56]
  44fe88:	cbz	w8, 44fea0 <feof@plt+0x4d4d0>
  44fe8c:	ldr	s0, [x0, #60]
  44fe90:	ucvtf	d1, w8
  44fe94:	ucvtf	d0, d0
  44fe98:	fdiv	d0, d0, d1
  44fe9c:	ret
  44fea0:	fmov	d0, xzr
  44fea4:	ret
  44fea8:	ldrb	w9, [x0]
  44feac:	cbz	w9, 44fed8 <feof@plt+0x4d508>
  44feb0:	mov	x8, x0
  44feb4:	mov	w0, wzr
  44feb8:	add	x8, x8, #0x1
  44febc:	mov	w10, #0x43                  	// #67
  44fec0:	mul	w11, w0, w10
  44fec4:	add	w11, w11, w9, uxtb
  44fec8:	ldrb	w9, [x8], #1
  44fecc:	sub	w0, w11, #0x71
  44fed0:	cbnz	w9, 44fec0 <feof@plt+0x4d4f0>
  44fed4:	ret
  44fed8:	mov	w0, wzr
  44fedc:	ret
  44fee0:	tst	x0, #0x3
  44fee4:	b.eq	44ff98 <feof@plt+0x4d5c8>  // b.none
  44fee8:	mov	w8, #0x79b9                	// #31161
  44feec:	cmp	w1, #0xc
  44fef0:	movk	w8, #0x9e37, lsl #16
  44fef4:	b.cc	450048 <feof@plt+0x4d678>  // b.lo, b.ul, b.last
  44fef8:	mov	w9, #0x79b9                	// #31161
  44fefc:	mov	w10, w1
  44ff00:	movk	w9, #0x9e37, lsl #16
  44ff04:	ldp	w11, w12, [x0]
  44ff08:	sub	w10, w10, #0xc
  44ff0c:	cmp	w10, #0xb
  44ff10:	add	w9, w11, w9
  44ff14:	ldr	w11, [x0, #8]
  44ff18:	add	w8, w12, w8
  44ff1c:	sub	w9, w9, w8
  44ff20:	add	x0, x0, #0xc
  44ff24:	add	w11, w11, w2
  44ff28:	sub	w9, w9, w11
  44ff2c:	sub	w8, w8, w11
  44ff30:	eor	w9, w9, w11, lsr #13
  44ff34:	sub	w8, w8, w9
  44ff38:	sub	w11, w11, w9
  44ff3c:	eor	w8, w8, w9, lsl #8
  44ff40:	sub	w11, w11, w8
  44ff44:	sub	w9, w9, w8
  44ff48:	eor	w11, w11, w8, lsr #13
  44ff4c:	sub	w9, w9, w11
  44ff50:	sub	w8, w8, w11
  44ff54:	eor	w9, w9, w11, lsr #12
  44ff58:	sub	w8, w8, w9
  44ff5c:	sub	w11, w11, w9
  44ff60:	eor	w8, w8, w9, lsl #16
  44ff64:	sub	w11, w11, w8
  44ff68:	sub	w9, w9, w8
  44ff6c:	eor	w11, w11, w8, lsr #5
  44ff70:	sub	w9, w9, w11
  44ff74:	sub	w8, w8, w11
  44ff78:	eor	w9, w9, w11, lsr #3
  44ff7c:	sub	w8, w8, w9
  44ff80:	sub	w11, w11, w9
  44ff84:	eor	w8, w8, w9, lsl #10
  44ff88:	sub	w11, w11, w8
  44ff8c:	eor	w2, w11, w8, lsr #15
  44ff90:	b.hi	44ff04 <feof@plt+0x4d534>  // b.pmore
  44ff94:	b	450054 <feof@plt+0x4d684>
  44ff98:	mov	w8, #0x79b9                	// #31161
  44ff9c:	cmp	w1, #0xc
  44ffa0:	movk	w8, #0x9e37, lsl #16
  44ffa4:	b.cc	450048 <feof@plt+0x4d678>  // b.lo, b.ul, b.last
  44ffa8:	mov	w9, #0x79b9                	// #31161
  44ffac:	mov	w10, w1
  44ffb0:	movk	w9, #0x9e37, lsl #16
  44ffb4:	ldp	w11, w12, [x0]
  44ffb8:	sub	w10, w10, #0xc
  44ffbc:	cmp	w10, #0xb
  44ffc0:	add	w9, w11, w9
  44ffc4:	ldr	w11, [x0, #8]
  44ffc8:	add	w8, w12, w8
  44ffcc:	sub	w9, w9, w8
  44ffd0:	add	x0, x0, #0xc
  44ffd4:	add	w11, w11, w2
  44ffd8:	sub	w9, w9, w11
  44ffdc:	sub	w8, w8, w11
  44ffe0:	eor	w9, w9, w11, lsr #13
  44ffe4:	sub	w8, w8, w9
  44ffe8:	sub	w11, w11, w9
  44ffec:	eor	w8, w8, w9, lsl #8
  44fff0:	sub	w11, w11, w8
  44fff4:	sub	w9, w9, w8
  44fff8:	eor	w11, w11, w8, lsr #13
  44fffc:	sub	w9, w9, w11
  450000:	sub	w8, w8, w11
  450004:	eor	w9, w9, w11, lsr #12
  450008:	sub	w8, w8, w9
  45000c:	sub	w11, w11, w9
  450010:	eor	w8, w8, w9, lsl #16
  450014:	sub	w11, w11, w8
  450018:	sub	w9, w9, w8
  45001c:	eor	w11, w11, w8, lsr #5
  450020:	sub	w9, w9, w11
  450024:	sub	w8, w8, w11
  450028:	eor	w9, w9, w11, lsr #3
  45002c:	sub	w8, w8, w9
  450030:	sub	w11, w11, w9
  450034:	eor	w8, w8, w9, lsl #10
  450038:	sub	w11, w11, w8
  45003c:	eor	w2, w11, w8, lsr #15
  450040:	b.hi	44ffb4 <feof@plt+0x4d5e4>  // b.pmore
  450044:	b	450054 <feof@plt+0x4d684>
  450048:	mov	w9, #0x79b9                	// #31161
  45004c:	movk	w9, #0x9e37, lsl #16
  450050:	mov	w10, w1
  450054:	sub	w11, w10, #0x1
  450058:	cmp	w11, #0xa
  45005c:	add	w10, w2, w1
  450060:	b.hi	4500d4 <feof@plt+0x4d704>  // b.pmore
  450064:	adrp	x12, 461000 <_obstack_memory_used@@Base+0x10a68>
  450068:	add	x12, x12, #0x730
  45006c:	adr	x13, 45007c <feof@plt+0x4d6ac>
  450070:	ldrb	w14, [x12, x11]
  450074:	add	x13, x13, x14, lsl #2
  450078:	br	x13
  45007c:	ldrb	w11, [x0, #10]
  450080:	add	w10, w10, w11, lsl #24
  450084:	ldrb	w11, [x0, #9]
  450088:	add	w10, w10, w11, lsl #16
  45008c:	ldrb	w11, [x0, #8]
  450090:	add	w10, w10, w11, lsl #8
  450094:	ldrb	w11, [x0, #7]
  450098:	add	w8, w8, w11, lsl #24
  45009c:	ldrb	w11, [x0, #6]
  4500a0:	add	w8, w8, w11, lsl #16
  4500a4:	ldrb	w11, [x0, #5]
  4500a8:	add	w8, w8, w11, lsl #8
  4500ac:	ldrb	w11, [x0, #4]
  4500b0:	add	w8, w8, w11
  4500b4:	ldrb	w11, [x0, #3]
  4500b8:	add	w9, w9, w11, lsl #24
  4500bc:	ldrb	w11, [x0, #2]
  4500c0:	add	w9, w9, w11, lsl #16
  4500c4:	ldrb	w11, [x0, #1]
  4500c8:	add	w9, w9, w11, lsl #8
  4500cc:	ldrb	w11, [x0]
  4500d0:	add	w9, w9, w11
  4500d4:	sub	w9, w9, w8
  4500d8:	sub	w9, w9, w10
  4500dc:	sub	w8, w8, w10
  4500e0:	eor	w9, w9, w10, lsr #13
  4500e4:	sub	w8, w8, w9
  4500e8:	sub	w10, w10, w9
  4500ec:	eor	w8, w8, w9, lsl #8
  4500f0:	sub	w10, w10, w8
  4500f4:	sub	w9, w9, w8
  4500f8:	eor	w10, w10, w8, lsr #13
  4500fc:	sub	w9, w9, w10
  450100:	sub	w8, w8, w10
  450104:	eor	w9, w9, w10, lsr #12
  450108:	sub	w8, w8, w9
  45010c:	sub	w10, w10, w9
  450110:	eor	w8, w8, w9, lsl #16
  450114:	sub	w10, w10, w8
  450118:	sub	w9, w9, w8
  45011c:	eor	w10, w10, w8, lsr #5
  450120:	sub	w9, w9, w10
  450124:	sub	w8, w8, w10
  450128:	eor	w9, w9, w10, lsr #3
  45012c:	sub	w8, w8, w9
  450130:	eor	w8, w8, w9, lsl #10
  450134:	sub	w9, w10, w9
  450138:	sub	w9, w9, w8
  45013c:	eor	w0, w9, w8, lsr #15
  450140:	ret
  450144:	ret
  450148:	add	x8, x0, #0x1
  45014c:	b	450158 <feof@plt+0x4d788>
  450150:	mov	x0, x8
  450154:	add	x8, x8, #0x1
  450158:	ldurb	w9, [x8, #-1]
  45015c:	cmp	w9, #0x2f
  450160:	b.eq	450150 <feof@plt+0x4d780>  // b.none
  450164:	cbnz	w9, 450154 <feof@plt+0x4d784>
  450168:	ret
  45016c:	ldrb	w8, [x0]
  450170:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x10a68>
  450174:	add	x9, x9, #0xa50
  450178:	ldrh	w8, [x9, x8, lsl #1]
  45017c:	mov	w9, #0x88                  	// #136
  450180:	tst	w8, w9
  450184:	b.eq	450198 <feof@plt+0x4d7c8>  // b.none
  450188:	ldrb	w8, [x0, #1]
  45018c:	add	x9, x0, #0x2
  450190:	cmp	w8, #0x3a
  450194:	csel	x0, x9, x0, eq  // eq = none
  450198:	add	x8, x0, #0x1
  45019c:	b	4501a8 <feof@plt+0x4d7d8>
  4501a0:	mov	x0, x8
  4501a4:	add	x8, x8, #0x1
  4501a8:	ldurb	w9, [x8, #-1]
  4501ac:	cmp	w9, #0x2f
  4501b0:	b.eq	4501a0 <feof@plt+0x4d7d0>  // b.none
  4501b4:	cmp	w9, #0x5c
  4501b8:	b.eq	4501a0 <feof@plt+0x4d7d0>  // b.none
  4501bc:	cbnz	w9, 4501a4 <feof@plt+0x4d7d4>
  4501c0:	ret
  4501c4:	add	x8, x0, #0x1
  4501c8:	b	4501d4 <feof@plt+0x4d804>
  4501cc:	mov	x0, x8
  4501d0:	add	x8, x8, #0x1
  4501d4:	ldurb	w9, [x8, #-1]
  4501d8:	cmp	w9, #0x2f
  4501dc:	b.eq	4501cc <feof@plt+0x4d7fc>  // b.none
  4501e0:	cbnz	w9, 4501d0 <feof@plt+0x4d800>
  4501e4:	ret
  4501e8:	stp	x29, x30, [sp, #-32]!
  4501ec:	stp	x28, x19, [sp, #16]
  4501f0:	mov	x29, sp
  4501f4:	sub	sp, sp, #0x1, lsl #12
  4501f8:	mov	x1, sp
  4501fc:	mov	x19, x0
  450200:	bl	402940 <realpath@plt>
  450204:	cmp	x0, #0x0
  450208:	csel	x0, x19, x0, eq  // eq = none
  45020c:	bl	402510 <strdup@plt>
  450210:	add	sp, sp, #0x1, lsl #12
  450214:	ldp	x28, x19, [sp, #16]
  450218:	ldp	x29, x30, [sp], #32
  45021c:	ret

0000000000450220 <_obstack_begin@@Base>:
  450220:	stp	x29, x30, [sp, #-48]!
  450224:	stp	x22, x21, [sp, #16]
  450228:	stp	x20, x19, [sp, #32]
  45022c:	ldrb	w8, [x0, #80]
  450230:	cmp	x2, #0x0
  450234:	mov	w9, #0x10                  	// #16
  450238:	csel	x21, x9, x2, eq  // eq = none
  45023c:	mov	w9, #0xfe0                 	// #4064
  450240:	cmp	x1, #0x0
  450244:	mov	x19, x0
  450248:	str	x4, [x0, #64]
  45024c:	csel	x0, x9, x1, eq  // eq = none
  450250:	and	w8, w8, #0xfe
  450254:	sub	x22, x21, #0x1
  450258:	mov	x29, sp
  45025c:	strb	w8, [x19, #80]
  450260:	str	x0, [x19]
  450264:	stp	x22, x3, [x19, #48]
  450268:	blr	x3
  45026c:	mov	x20, x0
  450270:	cbnz	x0, 450280 <_obstack_begin@@Base+0x60>
  450274:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  450278:	ldr	x8, [x8, #1288]
  45027c:	blr	x8
  450280:	add	x8, x20, x22
  450284:	neg	x9, x21
  450288:	add	x8, x8, #0x10
  45028c:	and	x8, x8, x9
  450290:	ldr	x9, [x19]
  450294:	stp	x20, x8, [x19, #8]
  450298:	str	x8, [x19, #24]
  45029c:	mov	w0, #0x1                   	// #1
  4502a0:	add	x8, x20, x9
  4502a4:	str	x8, [x20]
  4502a8:	str	x8, [x19, #32]
  4502ac:	str	xzr, [x20, #8]
  4502b0:	ldrb	w8, [x19, #80]
  4502b4:	and	w8, w8, #0xfffffff9
  4502b8:	strb	w8, [x19, #80]
  4502bc:	ldp	x20, x19, [sp, #32]
  4502c0:	ldp	x22, x21, [sp, #16]
  4502c4:	ldp	x29, x30, [sp], #48
  4502c8:	ret

00000000004502cc <_obstack_begin_1@@Base>:
  4502cc:	stp	x29, x30, [sp, #-48]!
  4502d0:	stp	x22, x21, [sp, #16]
  4502d4:	stp	x20, x19, [sp, #32]
  4502d8:	ldrb	w8, [x0, #80]
  4502dc:	cmp	x2, #0x0
  4502e0:	mov	w9, #0x10                  	// #16
  4502e4:	csel	x21, x9, x2, eq  // eq = none
  4502e8:	mov	w9, #0xfe0                 	// #4064
  4502ec:	cmp	x1, #0x0
  4502f0:	csel	x1, x9, x1, eq  // eq = none
  4502f4:	orr	w8, w8, #0x1
  4502f8:	sub	x22, x21, #0x1
  4502fc:	mov	x19, x0
  450300:	stp	x4, x5, [x0, #64]
  450304:	strb	w8, [x0, #80]
  450308:	str	x1, [x0]
  45030c:	stp	x22, x3, [x0, #48]
  450310:	mov	x0, x5
  450314:	mov	x29, sp
  450318:	blr	x3
  45031c:	mov	x20, x0
  450320:	cbnz	x0, 450330 <_obstack_begin_1@@Base+0x64>
  450324:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  450328:	ldr	x8, [x8, #1288]
  45032c:	blr	x8
  450330:	add	x8, x20, x22
  450334:	neg	x9, x21
  450338:	add	x8, x8, #0x10
  45033c:	and	x8, x8, x9
  450340:	ldr	x9, [x19]
  450344:	stp	x20, x8, [x19, #8]
  450348:	str	x8, [x19, #24]
  45034c:	mov	w0, #0x1                   	// #1
  450350:	add	x8, x20, x9
  450354:	str	x8, [x20]
  450358:	str	x8, [x19, #32]
  45035c:	str	xzr, [x20, #8]
  450360:	ldrb	w8, [x19, #80]
  450364:	and	w8, w8, #0xfffffff9
  450368:	strb	w8, [x19, #80]
  45036c:	ldp	x20, x19, [sp, #32]
  450370:	ldp	x22, x21, [sp, #16]
  450374:	ldp	x29, x30, [sp], #48
  450378:	ret

000000000045037c <_obstack_newchunk@@Base>:
  45037c:	stp	x29, x30, [sp, #-80]!
  450380:	str	x25, [sp, #16]
  450384:	stp	x24, x23, [sp, #32]
  450388:	stp	x22, x21, [sp, #48]
  45038c:	stp	x20, x19, [sp, #64]
  450390:	ldp	x9, x8, [x0, #16]
  450394:	ldr	x10, [x0, #48]
  450398:	ldp	x11, x21, [x0]
  45039c:	mov	x19, x0
  4503a0:	sub	x20, x8, x9
  4503a4:	adds	x8, x20, x1
  4503a8:	lsr	x9, x20, #3
  4503ac:	cset	w12, cs  // cs = hs, nlast
  4503b0:	adds	x10, x8, x10
  4503b4:	add	x9, x9, #0x64
  4503b8:	cset	w8, cs  // cs = hs, nlast
  4503bc:	adds	x9, x9, x10
  4503c0:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4503c4:	cmp	x9, x11
  4503c8:	csel	x22, x11, x9, cc  // cc = lo, ul, last
  4503cc:	mov	x29, sp
  4503d0:	tbnz	w12, #0, 450410 <_obstack_newchunk@@Base+0x94>
  4503d4:	tbnz	w8, #0, 450410 <_obstack_newchunk@@Base+0x94>
  4503d8:	ldrb	w8, [x19, #80]
  4503dc:	tbnz	w8, #0, 4503f8 <_obstack_newchunk@@Base+0x7c>
  4503e0:	ldr	x8, [x19, #56]
  4503e4:	mov	x0, x22
  4503e8:	blr	x8
  4503ec:	mov	x23, x0
  4503f0:	cbnz	x0, 450420 <_obstack_newchunk@@Base+0xa4>
  4503f4:	b	450410 <_obstack_newchunk@@Base+0x94>
  4503f8:	ldr	x8, [x19, #56]
  4503fc:	ldr	x0, [x19, #72]
  450400:	mov	x1, x22
  450404:	blr	x8
  450408:	mov	x23, x0
  45040c:	cbnz	x0, 450420 <_obstack_newchunk@@Base+0xa4>
  450410:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  450414:	ldr	x8, [x8, #1288]
  450418:	blr	x8
  45041c:	mov	x23, xzr
  450420:	add	x8, x23, x22
  450424:	str	x23, [x19, #8]
  450428:	str	x21, [x23, #8]
  45042c:	str	x8, [x19, #32]
  450430:	str	x8, [x23]
  450434:	ldr	x25, [x19, #48]
  450438:	ldr	x24, [x19, #16]
  45043c:	mov	x2, x20
  450440:	add	x8, x23, x25
  450444:	add	x8, x8, #0x10
  450448:	bic	x22, x8, x25
  45044c:	mov	x0, x22
  450450:	mov	x1, x24
  450454:	bl	402390 <memcpy@plt>
  450458:	ldrb	w8, [x19, #80]
  45045c:	tbnz	w8, #1, 4504a4 <_obstack_newchunk@@Base+0x128>
  450460:	add	x9, x21, x25
  450464:	mvn	x8, x25
  450468:	add	x9, x9, #0x10
  45046c:	and	x8, x9, x8
  450470:	cmp	x24, x8
  450474:	b.ne	4504a4 <_obstack_newchunk@@Base+0x128>  // b.any
  450478:	ldr	x8, [x21, #8]
  45047c:	str	x8, [x23, #8]
  450480:	ldrb	w8, [x19, #80]
  450484:	tbnz	w8, #0, 450498 <_obstack_newchunk@@Base+0x11c>
  450488:	ldr	x8, [x19, #64]
  45048c:	mov	x0, x21
  450490:	blr	x8
  450494:	b	4504a4 <_obstack_newchunk@@Base+0x128>
  450498:	ldp	x8, x0, [x19, #64]
  45049c:	mov	x1, x21
  4504a0:	blr	x8
  4504a4:	ldrb	w8, [x19, #80]
  4504a8:	add	x9, x22, x20
  4504ac:	stp	x22, x9, [x19, #16]
  4504b0:	ldr	x25, [sp, #16]
  4504b4:	and	w8, w8, #0xfffffffd
  4504b8:	strb	w8, [x19, #80]
  4504bc:	ldp	x20, x19, [sp, #64]
  4504c0:	ldp	x22, x21, [sp, #48]
  4504c4:	ldp	x24, x23, [sp, #32]
  4504c8:	ldp	x29, x30, [sp], #80
  4504cc:	ret

00000000004504d0 <_obstack_allocated_p@@Base>:
  4504d0:	ldr	x8, [x0, #8]
  4504d4:	cbnz	x8, 4504e8 <_obstack_allocated_p@@Base+0x18>
  4504d8:	mov	w0, wzr
  4504dc:	ret
  4504e0:	ldr	x8, [x8, #8]
  4504e4:	cbz	x8, 4504d8 <_obstack_allocated_p@@Base+0x8>
  4504e8:	cmp	x8, x1
  4504ec:	b.cs	4504e0 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  4504f0:	ldr	x9, [x8]
  4504f4:	cmp	x9, x1
  4504f8:	b.cc	4504e0 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  4504fc:	mov	w0, #0x1                   	// #1
  450500:	ret

0000000000450504 <_obstack_free@@Base>:
  450504:	stp	x29, x30, [sp, #-48]!
  450508:	stp	x20, x19, [sp, #32]
  45050c:	ldr	x8, [x0, #8]
  450510:	mov	x20, x1
  450514:	str	x21, [sp, #16]
  450518:	mov	x29, sp
  45051c:	cbz	x8, 450578 <_obstack_free@@Base+0x74>
  450520:	mov	x19, x0
  450524:	b	450548 <_obstack_free@@Base+0x44>
  450528:	ldr	x9, [x19, #64]
  45052c:	mov	x0, x8
  450530:	blr	x9
  450534:	ldrb	w8, [x19, #80]
  450538:	orr	w8, w8, #0x2
  45053c:	strb	w8, [x19, #80]
  450540:	mov	x8, x21
  450544:	cbz	x21, 450578 <_obstack_free@@Base+0x74>
  450548:	cmp	x8, x20
  45054c:	b.cs	45055c <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  450550:	ldr	x9, [x8]
  450554:	cmp	x9, x20
  450558:	b.cs	450580 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  45055c:	ldrb	w9, [x19, #80]
  450560:	ldr	x21, [x8, #8]
  450564:	tbz	w9, #0, 450528 <_obstack_free@@Base+0x24>
  450568:	ldp	x9, x0, [x19, #64]
  45056c:	mov	x1, x8
  450570:	blr	x9
  450574:	b	450534 <_obstack_free@@Base+0x30>
  450578:	cbz	x20, 450588 <_obstack_free@@Base+0x84>
  45057c:	bl	402860 <abort@plt>
  450580:	stp	x20, x9, [x19, #24]
  450584:	stp	x8, x20, [x19, #8]
  450588:	ldp	x20, x19, [sp, #32]
  45058c:	ldr	x21, [sp, #16]
  450590:	ldp	x29, x30, [sp], #48
  450594:	ret

0000000000450598 <_obstack_memory_used@@Base>:
  450598:	ldr	x8, [x0, #8]
  45059c:	cbz	x8, 4505b8 <_obstack_memory_used@@Base+0x20>
  4505a0:	mov	x0, xzr
  4505a4:	sub	x10, x0, x8
  4505a8:	ldp	x9, x8, [x8]
  4505ac:	add	x0, x10, x9
  4505b0:	cbnz	x8, 4505a4 <_obstack_memory_used@@Base+0xc>
  4505b4:	ret
  4505b8:	mov	x0, xzr
  4505bc:	ret
  4505c0:	stp	x29, x30, [sp, #-16]!
  4505c4:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  4505c8:	ldr	x0, [x8, #1336]
  4505cc:	adrp	x1, 451000 <_obstack_memory_used@@Base+0xa68>
  4505d0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x10a68>
  4505d4:	add	x1, x1, #0xec9
  4505d8:	add	x2, x2, #0xa3f
  4505dc:	mov	x29, sp
  4505e0:	bl	402440 <fprintf@plt>
  4505e4:	mov	w0, #0x1                   	// #1
  4505e8:	bl	402890 <exit@plt>
  4505ec:	stp	x29, x30, [sp, #-32]!
  4505f0:	str	x19, [sp, #16]
  4505f4:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x25a68>
  4505f8:	ldr	x8, [x19, #2192]
  4505fc:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  450600:	mov	x29, sp
  450604:	str	x0, [x9, #1296]
  450608:	cbnz	x8, 450618 <_obstack_memory_used@@Base+0x80>
  45060c:	mov	x0, xzr
  450610:	bl	402770 <sbrk@plt>
  450614:	str	x0, [x19, #2192]
  450618:	ldr	x19, [sp, #16]
  45061c:	ldp	x29, x30, [sp], #32
  450620:	ret
  450624:	stp	x29, x30, [sp, #-48]!
  450628:	stp	x20, x19, [sp, #32]
  45062c:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  450630:	str	x21, [sp, #16]
  450634:	ldr	x21, [x20, #2192]
  450638:	mov	x19, x0
  45063c:	mov	x0, xzr
  450640:	mov	x29, sp
  450644:	bl	402770 <sbrk@plt>
  450648:	ldr	x8, [x20, #2192]
  45064c:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  450650:	ldr	x2, [x10, #1296]
  450654:	adrp	x9, 476000 <_obstack_memory_used@@Base+0x25a68>
  450658:	add	x9, x9, #0x518
  45065c:	cmp	x21, #0x0
  450660:	csel	x8, x9, x8, eq  // eq = none
  450664:	sub	x5, x0, x8
  450668:	ldrb	w8, [x2]
  45066c:	adrp	x10, 476000 <_obstack_memory_used@@Base+0x25a68>
  450670:	ldr	x0, [x10, #1336]
  450674:	adrp	x9, 451000 <_obstack_memory_used@@Base+0xa68>
  450678:	adrp	x10, 45b000 <_obstack_memory_used@@Base+0xaa68>
  45067c:	add	x9, x9, #0x12c
  450680:	add	x10, x10, #0xb34
  450684:	cmp	w8, #0x0
  450688:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  45068c:	csel	x3, x10, x9, eq  // eq = none
  450690:	add	x1, x1, #0xe50
  450694:	mov	x4, x19
  450698:	bl	402440 <fprintf@plt>
  45069c:	mov	w0, #0x1                   	// #1
  4506a0:	bl	450b88 <_obstack_memory_used@@Base+0x5f0>
  4506a4:	stp	x29, x30, [sp, #-32]!
  4506a8:	cmp	x0, #0x0
  4506ac:	str	x19, [sp, #16]
  4506b0:	csinc	x19, x0, xzr, ne  // ne = any
  4506b4:	mov	x0, x19
  4506b8:	mov	x29, sp
  4506bc:	bl	402840 <malloc@plt>
  4506c0:	cbz	x0, 4506d0 <_obstack_memory_used@@Base+0x138>
  4506c4:	ldr	x19, [sp, #16]
  4506c8:	ldp	x29, x30, [sp], #32
  4506cc:	ret
  4506d0:	mov	x0, x19
  4506d4:	bl	450624 <_obstack_memory_used@@Base+0x8c>
  4506d8:	stp	x29, x30, [sp, #-32]!
  4506dc:	cmp	x0, #0x0
  4506e0:	cset	w8, eq  // eq = none
  4506e4:	cmp	x1, #0x0
  4506e8:	cset	w9, eq  // eq = none
  4506ec:	orr	w8, w8, w9
  4506f0:	cmp	w8, #0x0
  4506f4:	stp	x20, x19, [sp, #16]
  4506f8:	csinc	x19, x1, xzr, eq  // eq = none
  4506fc:	csinc	x20, x0, xzr, eq  // eq = none
  450700:	mov	x0, x20
  450704:	mov	x1, x19
  450708:	mov	x29, sp
  45070c:	bl	402400 <calloc@plt>
  450710:	cbz	x0, 450720 <_obstack_memory_used@@Base+0x188>
  450714:	ldp	x20, x19, [sp, #16]
  450718:	ldp	x29, x30, [sp], #32
  45071c:	ret
  450720:	mul	x0, x20, x19
  450724:	bl	450624 <_obstack_memory_used@@Base+0x8c>
  450728:	stp	x29, x30, [sp, #-32]!
  45072c:	cmp	x1, #0x0
  450730:	str	x19, [sp, #16]
  450734:	csinc	x19, x1, xzr, ne  // ne = any
  450738:	mov	x29, sp
  45073c:	cbz	x0, 450758 <_obstack_memory_used@@Base+0x1c0>
  450740:	mov	x1, x19
  450744:	bl	402540 <realloc@plt>
  450748:	cbz	x0, 450764 <_obstack_memory_used@@Base+0x1cc>
  45074c:	ldr	x19, [sp, #16]
  450750:	ldp	x29, x30, [sp], #32
  450754:	ret
  450758:	mov	x0, x19
  45075c:	bl	402840 <malloc@plt>
  450760:	cbnz	x0, 45074c <_obstack_memory_used@@Base+0x1b4>
  450764:	mov	x0, x19
  450768:	bl	450624 <_obstack_memory_used@@Base+0x8c>
  45076c:	stp	x29, x30, [sp, #-48]!
  450770:	stp	x20, x19, [sp, #32]
  450774:	mov	x20, x0
  450778:	mov	x0, x2
  45077c:	str	x21, [sp, #16]
  450780:	mov	x29, sp
  450784:	mov	x21, x2
  450788:	mov	x19, x1
  45078c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  450790:	subs	x2, x21, x19
  450794:	mov	x21, x0
  450798:	b.ls	4507a8 <_obstack_memory_used@@Base+0x210>  // b.plast
  45079c:	add	x0, x21, x19
  4507a0:	mov	w1, wzr
  4507a4:	bl	4024e0 <memset@plt>
  4507a8:	mov	x0, x21
  4507ac:	mov	x1, x20
  4507b0:	mov	x2, x19
  4507b4:	ldp	x20, x19, [sp, #32]
  4507b8:	ldr	x21, [sp, #16]
  4507bc:	ldp	x29, x30, [sp], #48
  4507c0:	b	402390 <memcpy@plt>
  4507c4:	stp	x29, x30, [sp, #-32]!
  4507c8:	stp	x20, x19, [sp, #16]
  4507cc:	mov	x29, sp
  4507d0:	mov	x19, x0
  4507d4:	bl	402420 <strlen@plt>
  4507d8:	add	x20, x0, #0x1
  4507dc:	mov	x0, x20
  4507e0:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4507e4:	mov	x1, x19
  4507e8:	mov	x2, x20
  4507ec:	ldp	x20, x19, [sp, #16]
  4507f0:	ldp	x29, x30, [sp], #32
  4507f4:	b	402390 <memcpy@plt>
  4507f8:	stp	x29, x30, [sp, #-32]!
  4507fc:	stp	x20, x19, [sp, #16]
  450800:	mov	x29, sp
  450804:	mov	w19, w0
  450808:	bl	402580 <strerror@plt>
  45080c:	mov	x20, x0
  450810:	cbnz	x0, 450830 <_obstack_memory_used@@Base+0x298>
  450814:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x25a68>
  450818:	add	x20, x20, #0x898
  45081c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x10a68>
  450820:	add	x1, x1, #0xe94
  450824:	mov	x0, x20
  450828:	mov	w2, w19
  45082c:	bl	4025b0 <sprintf@plt>
  450830:	mov	x0, x20
  450834:	ldp	x20, x19, [sp, #16]
  450838:	ldp	x29, x30, [sp], #32
  45083c:	ret
  450840:	stp	x29, x30, [sp, #-32]!
  450844:	stp	x20, x19, [sp, #16]
  450848:	mov	x29, sp
  45084c:	mov	x19, x0
  450850:	bl	402930 <strnlen@plt>
  450854:	mov	x20, x0
  450858:	add	x0, x0, #0x1
  45085c:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  450860:	strb	wzr, [x0, x20]
  450864:	mov	x1, x19
  450868:	mov	x2, x20
  45086c:	ldp	x20, x19, [sp, #16]
  450870:	ldp	x29, x30, [sp], #32
  450874:	b	402390 <memcpy@plt>
  450878:	sub	sp, sp, #0x50
  45087c:	stp	x29, x30, [sp, #32]
  450880:	str	x21, [sp, #48]
  450884:	stp	x20, x19, [sp, #64]
  450888:	ldp	q1, q0, [x1]
  45088c:	mov	x19, x1
  450890:	mov	x1, sp
  450894:	add	x29, sp, #0x20
  450898:	mov	x20, x0
  45089c:	stp	q1, q0, [sp]
  4508a0:	bl	4508dc <_obstack_memory_used@@Base+0x344>
  4508a4:	sxtw	x0, w0
  4508a8:	bl	4506a4 <_obstack_memory_used@@Base+0x10c>
  4508ac:	ldp	q1, q0, [x19]
  4508b0:	mov	x2, sp
  4508b4:	mov	x1, x20
  4508b8:	mov	x21, x0
  4508bc:	stp	q1, q0, [sp]
  4508c0:	bl	402900 <vsprintf@plt>
  4508c4:	mov	x0, x21
  4508c8:	ldp	x20, x19, [sp, #64]
  4508cc:	ldr	x21, [sp, #48]
  4508d0:	ldp	x29, x30, [sp, #32]
  4508d4:	add	sp, sp, #0x50
  4508d8:	ret
  4508dc:	sub	sp, sp, #0x70
  4508e0:	stp	x29, x30, [sp, #32]
  4508e4:	add	x29, sp, #0x20
  4508e8:	str	x25, [sp, #48]
  4508ec:	stp	x24, x23, [sp, #64]
  4508f0:	stp	x22, x21, [sp, #80]
  4508f4:	stp	x20, x19, [sp, #96]
  4508f8:	mov	x19, x1
  4508fc:	mov	x21, x0
  450900:	str	x0, [x29, #24]
  450904:	bl	402420 <strlen@plt>
  450908:	ldp	q1, q0, [x19]
  45090c:	add	w20, w0, #0x1
  450910:	stp	q1, q0, [sp]
  450914:	ldrb	w8, [x21]
  450918:	cbz	w8, 450b68 <_obstack_memory_used@@Base+0x5d0>
  45091c:	mov	x22, #0x1                   	// #1
  450920:	movk	x22, #0x2809, lsl #32
  450924:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x10a68>
  450928:	adrp	x24, 461000 <_obstack_memory_used@@Base+0x10a68>
  45092c:	movk	x22, #0x1, lsl #48
  450930:	mov	w23, #0x1                   	// #1
  450934:	add	x19, x19, #0xedf
  450938:	add	x24, x24, #0xeab
  45093c:	b	45095c <_obstack_memory_used@@Base+0x3c4>
  450940:	ldr	x8, [sp]
  450944:	add	x8, x8, #0x8
  450948:	str	x8, [sp]
  45094c:	add	x21, x21, #0x1
  450950:	str	x21, [x29, #24]
  450954:	ldrb	w8, [x21]
  450958:	cbz	w8, 450b68 <_obstack_memory_used@@Base+0x5d0>
  45095c:	and	w8, w8, #0xff
  450960:	add	x21, x21, #0x1
  450964:	cmp	w8, #0x25
  450968:	str	x21, [x29, #24]
  45096c:	b.ne	450954 <_obstack_memory_used@@Base+0x3bc>  // b.any
  450970:	ldrb	w8, [x21]
  450974:	cmp	x8, #0x3f
  450978:	b.hi	4509a4 <_obstack_memory_used@@Base+0x40c>  // b.pmore
  45097c:	lsl	x9, x23, x8
  450980:	and	x9, x9, x22
  450984:	cbz	x9, 4509a4 <_obstack_memory_used@@Base+0x40c>
  450988:	ldrb	w8, [x21, #1]!
  45098c:	cmp	x8, #0x3f
  450990:	b.hi	4509a0 <_obstack_memory_used@@Base+0x408>  // b.pmore
  450994:	lsl	x9, x23, x8
  450998:	and	x9, x9, x22
  45099c:	cbnz	x9, 450988 <_obstack_memory_used@@Base+0x3f0>
  4509a0:	str	x21, [x29, #24]
  4509a4:	cmp	w8, #0x2a
  4509a8:	b.ne	4509d8 <_obstack_memory_used@@Base+0x440>  // b.any
  4509ac:	ldrsw	x8, [sp, #24]
  4509b0:	add	x21, x21, #0x1
  4509b4:	str	x21, [x29, #24]
  4509b8:	tbz	w8, #31, 4509f0 <_obstack_memory_used@@Base+0x458>
  4509bc:	add	w9, w8, #0x8
  4509c0:	cmn	w8, #0x8
  4509c4:	str	w9, [sp, #24]
  4509c8:	b.gt	4509f0 <_obstack_memory_used@@Base+0x458>
  4509cc:	ldr	x9, [sp, #8]
  4509d0:	add	x8, x9, x8
  4509d4:	b	4509fc <_obstack_memory_used@@Base+0x464>
  4509d8:	add	x1, x29, #0x18
  4509dc:	mov	w2, #0xa                   	// #10
  4509e0:	mov	x0, x21
  4509e4:	bl	4027e0 <strtoul@plt>
  4509e8:	ldr	x21, [x29, #24]
  4509ec:	b	450a08 <_obstack_memory_used@@Base+0x470>
  4509f0:	ldr	x8, [sp]
  4509f4:	add	x9, x8, #0x8
  4509f8:	str	x9, [sp]
  4509fc:	ldr	w8, [x8]
  450a00:	cmp	w8, #0x0
  450a04:	cneg	w0, w8, mi  // mi = first
  450a08:	ldrb	w8, [x21]
  450a0c:	add	w25, w0, w20
  450a10:	cmp	w8, #0x2e
  450a14:	b.ne	450a8c <_obstack_memory_used@@Base+0x4f4>  // b.any
  450a18:	add	x0, x21, #0x1
  450a1c:	str	x0, [x29, #24]
  450a20:	ldrb	w8, [x21, #1]
  450a24:	cmp	w8, #0x2a
  450a28:	b.ne	450a58 <_obstack_memory_used@@Base+0x4c0>  // b.any
  450a2c:	ldrsw	x8, [sp, #24]
  450a30:	add	x21, x21, #0x2
  450a34:	str	x21, [x29, #24]
  450a38:	tbz	w8, #31, 450a70 <_obstack_memory_used@@Base+0x4d8>
  450a3c:	add	w9, w8, #0x8
  450a40:	cmn	w8, #0x8
  450a44:	str	w9, [sp, #24]
  450a48:	b.gt	450a70 <_obstack_memory_used@@Base+0x4d8>
  450a4c:	ldr	x9, [sp, #8]
  450a50:	add	x8, x9, x8
  450a54:	b	450a7c <_obstack_memory_used@@Base+0x4e4>
  450a58:	add	x1, x29, #0x18
  450a5c:	mov	w2, #0xa                   	// #10
  450a60:	bl	4027e0 <strtoul@plt>
  450a64:	ldr	x21, [x29, #24]
  450a68:	add	w25, w25, w0
  450a6c:	b	450a8c <_obstack_memory_used@@Base+0x4f4>
  450a70:	ldr	x8, [sp]
  450a74:	add	x9, x8, #0x8
  450a78:	str	x9, [sp]
  450a7c:	ldr	w8, [x8]
  450a80:	cmp	w8, #0x0
  450a84:	cneg	w8, w8, mi  // mi = first
  450a88:	add	w25, w8, w25
  450a8c:	ldrb	w20, [x21]
  450a90:	mov	w2, #0x4                   	// #4
  450a94:	mov	x0, x19
  450a98:	mov	w1, w20
  450a9c:	bl	402650 <memchr@plt>
  450aa0:	cbz	x0, 450ac0 <_obstack_memory_used@@Base+0x528>
  450aa4:	ldrb	w20, [x21, #1]!
  450aa8:	mov	w2, #0x4                   	// #4
  450aac:	mov	x0, x19
  450ab0:	mov	w1, w20
  450ab4:	bl	402650 <memchr@plt>
  450ab8:	cbnz	x0, 450aa4 <_obstack_memory_used@@Base+0x50c>
  450abc:	str	x21, [x29, #24]
  450ac0:	sub	w8, w20, #0x45
  450ac4:	cmp	w8, #0x33
  450ac8:	add	w20, w25, #0x1e
  450acc:	b.hi	45094c <_obstack_memory_used@@Base+0x3b4>  // b.pmore
  450ad0:	adr	x9, 45094c <_obstack_memory_used@@Base+0x3b4>
  450ad4:	ldrb	w10, [x24, x8]
  450ad8:	add	x9, x9, x10, lsl #2
  450adc:	br	x9
  450ae0:	ldr	w8, [sp, #24]
  450ae4:	tbz	w8, #31, 450940 <_obstack_memory_used@@Base+0x3a8>
  450ae8:	add	w9, w8, #0x8
  450aec:	cmn	w8, #0x7
  450af0:	str	w9, [sp, #24]
  450af4:	b.ge	450940 <_obstack_memory_used@@Base+0x3a8>  // b.tcont
  450af8:	b	45094c <_obstack_memory_used@@Base+0x3b4>
  450afc:	ldr	w8, [sp, #28]
  450b00:	tbz	w8, #31, 450b14 <_obstack_memory_used@@Base+0x57c>
  450b04:	add	w9, w8, #0x10
  450b08:	cmn	w8, #0xf
  450b0c:	str	w9, [sp, #28]
  450b10:	b.lt	450b20 <_obstack_memory_used@@Base+0x588>  // b.tstop
  450b14:	ldr	x8, [sp]
  450b18:	add	x8, x8, #0x8
  450b1c:	str	x8, [sp]
  450b20:	add	w20, w25, #0x151
  450b24:	b	45094c <_obstack_memory_used@@Base+0x3b4>
  450b28:	ldrsw	x8, [sp, #24]
  450b2c:	tbz	w8, #31, 450b4c <_obstack_memory_used@@Base+0x5b4>
  450b30:	add	w9, w8, #0x8
  450b34:	cmn	w8, #0x8
  450b38:	str	w9, [sp, #24]
  450b3c:	b.gt	450b4c <_obstack_memory_used@@Base+0x5b4>
  450b40:	ldr	x9, [sp, #8]
  450b44:	add	x8, x9, x8
  450b48:	b	450b58 <_obstack_memory_used@@Base+0x5c0>
  450b4c:	ldr	x8, [sp]
  450b50:	add	x9, x8, #0x8
  450b54:	str	x9, [sp]
  450b58:	ldr	x0, [x8]
  450b5c:	bl	402420 <strlen@plt>
  450b60:	add	w20, w20, w0
  450b64:	b	45094c <_obstack_memory_used@@Base+0x3b4>
  450b68:	mov	w0, w20
  450b6c:	ldp	x20, x19, [sp, #96]
  450b70:	ldp	x22, x21, [sp, #80]
  450b74:	ldp	x24, x23, [sp, #64]
  450b78:	ldr	x25, [sp, #48]
  450b7c:	ldp	x29, x30, [sp, #32]
  450b80:	add	sp, sp, #0x70
  450b84:	ret
  450b88:	stp	x29, x30, [sp, #-32]!
  450b8c:	adrp	x8, 476000 <_obstack_memory_used@@Base+0x25a68>
  450b90:	ldr	x8, [x8, #2248]
  450b94:	str	x19, [sp, #16]
  450b98:	mov	w19, w0
  450b9c:	mov	x29, sp
  450ba0:	cbz	x8, 450ba8 <_obstack_memory_used@@Base+0x610>
  450ba4:	blr	x8
  450ba8:	mov	w0, w19
  450bac:	bl	402890 <exit@plt>
  450bb0:	stp	x29, x30, [sp, #-64]!
  450bb4:	mov	x29, sp
  450bb8:	stp	x19, x20, [sp, #16]
  450bbc:	adrp	x20, 475000 <_obstack_memory_used@@Base+0x24a68>
  450bc0:	add	x20, x20, #0xdc0
  450bc4:	stp	x21, x22, [sp, #32]
  450bc8:	adrp	x21, 475000 <_obstack_memory_used@@Base+0x24a68>
  450bcc:	add	x21, x21, #0xdb0
  450bd0:	sub	x20, x20, x21
  450bd4:	mov	w22, w0
  450bd8:	stp	x23, x24, [sp, #48]
  450bdc:	mov	x23, x1
  450be0:	mov	x24, x2
  450be4:	bl	4022f8 <_Unwind_Backtrace@plt-0x38>
  450be8:	cmp	xzr, x20, asr #3
  450bec:	b.eq	450c18 <_obstack_memory_used@@Base+0x680>  // b.none
  450bf0:	asr	x20, x20, #3
  450bf4:	mov	x19, #0x0                   	// #0
  450bf8:	ldr	x3, [x21, x19, lsl #3]
  450bfc:	mov	x2, x24
  450c00:	add	x19, x19, #0x1
  450c04:	mov	x1, x23
  450c08:	mov	w0, w22
  450c0c:	blr	x3
  450c10:	cmp	x20, x19
  450c14:	b.ne	450bf8 <_obstack_memory_used@@Base+0x660>  // b.any
  450c18:	ldp	x19, x20, [sp, #16]
  450c1c:	ldp	x21, x22, [sp, #32]
  450c20:	ldp	x23, x24, [sp, #48]
  450c24:	ldp	x29, x30, [sp], #64
  450c28:	ret
  450c2c:	nop
  450c30:	ret

Disassembly of section .fini:

0000000000450c34 <.fini>:
  450c34:	stp	x29, x30, [sp, #-16]!
  450c38:	mov	x29, sp
  450c3c:	ldp	x29, x30, [sp], #16
  450c40:	ret
