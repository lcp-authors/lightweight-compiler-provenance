
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ordchr.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000608 <.init>:
 608:	stp	x29, x30, [sp, #-16]!
 60c:	mov	x29, sp
 610:	bl	6a0 <fprintf@plt+0x10>
 614:	ldp	x29, x30, [sp], #16
 618:	ret

Disassembly of section .plt:

0000000000000620 <exit@plt-0x20>:
 620:	stp	x16, x30, [sp, #-16]!
 624:	adrp	x16, 10000 <dl_load@@Base+0xf88c>
 628:	ldr	x17, [x16, #4088]
 62c:	add	x16, x16, #0xff8
 630:	br	x17
 634:	nop
 638:	nop
 63c:	nop

0000000000000640 <exit@plt>:
 640:	adrp	x16, 11000 <exit@GLIBC_2.17>
 644:	ldr	x17, [x16]
 648:	add	x16, x16, #0x0
 64c:	br	x17

0000000000000650 <__cxa_finalize@plt>:
 650:	adrp	x16, 11000 <exit@GLIBC_2.17>
 654:	ldr	x17, [x16, #8]
 658:	add	x16, x16, #0x8
 65c:	br	x17

0000000000000660 <__gmon_start__@plt>:
 660:	adrp	x16, 11000 <exit@GLIBC_2.17>
 664:	ldr	x17, [x16, #16]
 668:	add	x16, x16, #0x10
 66c:	br	x17

0000000000000670 <fwrite@plt>:
 670:	adrp	x16, 11000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16, #24]
 678:	add	x16, x16, #0x18
 67c:	br	x17

0000000000000680 <dcgettext@plt>:
 680:	adrp	x16, 11000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #32]
 688:	add	x16, x16, #0x20
 68c:	br	x17

0000000000000690 <fprintf@plt>:
 690:	adrp	x16, 11000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #40]
 698:	add	x16, x16, #0x28
 69c:	br	x17

Disassembly of section .text:

00000000000006a0 <dl_load@@Base-0xd4>:
 6a0:	adrp	x0, 10000 <dl_load@@Base+0xf88c>
 6a4:	ldr	x0, [x0, #4056]
 6a8:	cbz	x0, 6b0 <fprintf@plt+0x20>
 6ac:	b	660 <__gmon_start__@plt>
 6b0:	ret
 6b4:	nop
 6b8:	adrp	x0, 11000 <dl_load@@Base+0x1088c>
 6bc:	add	x0, x0, #0x98
 6c0:	adrp	x1, 11000 <dl_load@@Base+0x1088c>
 6c4:	add	x1, x1, #0x98
 6c8:	cmp	x1, x0
 6cc:	b.eq	6e4 <fprintf@plt+0x54>  // b.none
 6d0:	adrp	x1, 10000 <dl_load@@Base+0xf88c>
 6d4:	ldr	x1, [x1, #4032]
 6d8:	cbz	x1, 6e4 <fprintf@plt+0x54>
 6dc:	mov	x16, x1
 6e0:	br	x16
 6e4:	ret
 6e8:	adrp	x0, 11000 <dl_load@@Base+0x1088c>
 6ec:	add	x0, x0, #0x98
 6f0:	adrp	x1, 11000 <dl_load@@Base+0x1088c>
 6f4:	add	x1, x1, #0x98
 6f8:	sub	x1, x1, x0
 6fc:	lsr	x2, x1, #63
 700:	add	x1, x2, x1, asr #3
 704:	cmp	xzr, x1, asr #1
 708:	asr	x1, x1, #1
 70c:	b.eq	724 <fprintf@plt+0x94>  // b.none
 710:	adrp	x2, 10000 <dl_load@@Base+0xf88c>
 714:	ldr	x2, [x2, #4064]
 718:	cbz	x2, 724 <fprintf@plt+0x94>
 71c:	mov	x16, x2
 720:	br	x16
 724:	ret
 728:	stp	x29, x30, [sp, #-32]!
 72c:	mov	x29, sp
 730:	str	x19, [sp, #16]
 734:	adrp	x19, 11000 <dl_load@@Base+0x1088c>
 738:	ldrb	w0, [x19, #152]
 73c:	cbnz	w0, 764 <fprintf@plt+0xd4>
 740:	adrp	x0, 10000 <dl_load@@Base+0xf88c>
 744:	ldr	x0, [x0, #4040]
 748:	cbz	x0, 758 <fprintf@plt+0xc8>
 74c:	adrp	x0, 11000 <dl_load@@Base+0x1088c>
 750:	ldr	x0, [x0, #48]
 754:	bl	650 <__cxa_finalize@plt>
 758:	bl	6b8 <fprintf@plt+0x28>
 75c:	mov	w0, #0x1                   	// #1
 760:	strb	w0, [x19, #152]
 764:	ldr	x19, [sp, #16]
 768:	ldp	x29, x30, [sp], #32
 76c:	ret
 770:	b	6e8 <fprintf@plt+0x58>

0000000000000774 <dl_load@@Base>:
 774:	stp	x29, x30, [sp, #-48]!
 778:	stp	x20, x19, [sp, #32]
 77c:	adrp	x19, 11000 <dl_load@@Base+0x1088c>
 780:	adrp	x20, 11000 <dl_load@@Base+0x1088c>
 784:	stp	x22, x21, [sp, #16]
 788:	str	x0, [x19, #160]
 78c:	str	x1, [x20, #168]
 790:	ldr	w8, [x0]
 794:	mov	x29, sp
 798:	cmp	w8, #0x2
 79c:	b.ne	888 <dl_load@@Base+0x114>  // b.any
 7a0:	ldr	w8, [x0, #4]
 7a4:	tbnz	w8, #31, 888 <dl_load@@Base+0x114>
 7a8:	adrp	x21, 11000 <dl_load@@Base+0x1088c>
 7ac:	ldr	x8, [x21, #56]
 7b0:	cbz	x8, 7e0 <dl_load@@Base+0x6c>
 7b4:	ldr	x9, [x0, #48]
 7b8:	adrp	x8, 0 <exit@plt-0x640>
 7bc:	add	x8, x8, #0xac1
 7c0:	adrp	x2, 11000 <dl_load@@Base+0x1088c>
 7c4:	add	x2, x2, #0x38
 7c8:	mov	x0, x1
 7cc:	mov	x1, x8
 7d0:	blr	x9
 7d4:	cbz	w0, 7e8 <dl_load@@Base+0x74>
 7d8:	mov	w21, wzr
 7dc:	b	808 <dl_load@@Base+0x94>
 7e0:	mov	w21, wzr
 7e4:	b	858 <dl_load@@Base+0xe4>
 7e8:	ldr	x8, [x19, #160]
 7ec:	ldr	x0, [x20, #168]
 7f0:	ldr	x2, [x21, #56]
 7f4:	adrp	x1, 0 <exit@plt-0x640>
 7f8:	ldr	x8, [x8, #104]
 7fc:	add	x1, x1, #0xaf5
 800:	blr	x8
 804:	mov	w21, #0x1                   	// #1
 808:	adrp	x22, 11000 <dl_load@@Base+0x1088c>
 80c:	ldr	x8, [x22, #104]
 810:	cbz	x8, 858 <dl_load@@Base+0xe4>
 814:	ldr	x8, [x19, #160]
 818:	ldr	x0, [x20, #168]
 81c:	adrp	x1, 0 <exit@plt-0x640>
 820:	adrp	x2, 11000 <dl_load@@Base+0x1088c>
 824:	ldr	x8, [x8, #48]
 828:	add	x1, x1, #0xac1
 82c:	add	x2, x2, #0x68
 830:	blr	x8
 834:	cbnz	w0, 858 <dl_load@@Base+0xe4>
 838:	ldr	x8, [x19, #160]
 83c:	ldr	x0, [x20, #168]
 840:	ldr	x2, [x22, #104]
 844:	adrp	x1, 0 <exit@plt-0x640>
 848:	ldr	x8, [x8, #104]
 84c:	add	x1, x1, #0xaf5
 850:	blr	x8
 854:	mov	w21, #0x1                   	// #1
 858:	ldr	x8, [x19, #160]
 85c:	ldr	x0, [x20, #168]
 860:	adrp	x1, 0 <exit@plt-0x640>
 864:	add	x1, x1, #0xb99
 868:	ldr	x8, [x8, #88]
 86c:	blr	x8
 870:	cmp	w21, #0x0
 874:	ldp	x20, x19, [sp, #32]
 878:	ldp	x22, x21, [sp, #16]
 87c:	cset	w0, eq  // eq = none
 880:	ldp	x29, x30, [sp], #48
 884:	ret
 888:	adrp	x20, 10000 <dl_load@@Base+0xf88c>
 88c:	ldr	x20, [x20, #4048]
 890:	adrp	x0, 0 <exit@plt-0x640>
 894:	add	x0, x0, #0xa9c
 898:	mov	w1, #0x25                  	// #37
 89c:	ldr	x3, [x20]
 8a0:	mov	w2, #0x1                   	// #1
 8a4:	bl	670 <fwrite@plt>
 8a8:	ldr	x8, [x19, #160]
 8ac:	ldr	x0, [x20]
 8b0:	adrp	x1, 0 <exit@plt-0x640>
 8b4:	add	x1, x1, #0xac2
 8b8:	ldp	w4, w5, [x8]
 8bc:	mov	w2, #0x2                   	// #2
 8c0:	mov	w3, wzr
 8c4:	bl	690 <fprintf@plt>
 8c8:	mov	w0, #0x1                   	// #1
 8cc:	bl	640 <exit@plt>
 8d0:	sub	sp, sp, #0x50
 8d4:	str	x21, [sp, #56]
 8d8:	adrp	x21, 11000 <dl_load@@Base+0x1088c>
 8dc:	ldr	x8, [x21, #160]
 8e0:	stp	x29, x30, [sp, #40]
 8e4:	stp	x20, x19, [sp, #64]
 8e8:	adrp	x20, 11000 <dl_load@@Base+0x1088c>
 8ec:	ldr	x8, [x8, #152]
 8f0:	ldr	x0, [x20, #168]
 8f4:	mov	x19, x1
 8f8:	mov	x3, sp
 8fc:	mov	w2, #0x2                   	// #2
 900:	mov	x1, xzr
 904:	str	d8, [sp, #32]
 908:	add	x29, sp, #0x20
 90c:	blr	x8
 910:	cbz	w0, 924 <dl_load@@Base+0x1b0>
 914:	ldr	x8, [sp, #8]
 918:	ldr	b0, [x8]
 91c:	ucvtf	d8, d0
 920:	b	95c <dl_load@@Base+0x1e8>
 924:	ldr	x8, [x21, #160]
 928:	fmov	d8, #-1.000000000000000000e+00
 92c:	ldr	w9, [x8, #24]
 930:	cbz	w9, 95c <dl_load@@Base+0x1e8>
 934:	ldr	x21, [x8, #112]
 938:	ldr	x20, [x20, #168]
 93c:	adrp	x1, 0 <exit@plt-0x640>
 940:	add	x1, x1, #0xb17
 944:	mov	w2, #0x5                   	// #5
 948:	mov	x0, xzr
 94c:	bl	680 <dcgettext@plt>
 950:	mov	x1, x0
 954:	mov	x0, x20
 958:	blr	x21
 95c:	mov	w8, #0x1                   	// #1
 960:	str	d8, [x19, #8]
 964:	str	w8, [x19]
 968:	str	wzr, [x19, #16]
 96c:	mov	x0, x19
 970:	ldp	x20, x19, [sp, #64]
 974:	ldr	x21, [sp, #56]
 978:	ldp	x29, x30, [sp, #40]
 97c:	ldr	d8, [sp, #32]
 980:	add	sp, sp, #0x50
 984:	ret
 988:	sub	sp, sp, #0x60
 98c:	stp	x22, x21, [sp, #64]
 990:	adrp	x21, 11000 <dl_load@@Base+0x1088c>
 994:	ldr	x8, [x21, #160]
 998:	stp	x29, x30, [sp, #32]
 99c:	stp	x24, x23, [sp, #48]
 9a0:	stp	x20, x19, [sp, #80]
 9a4:	adrp	x22, 11000 <dl_load@@Base+0x1088c>
 9a8:	ldr	x8, [x8, #152]
 9ac:	ldr	x0, [x22, #168]
 9b0:	mov	x19, x1
 9b4:	mov	x3, sp
 9b8:	mov	w2, #0x1                   	// #1
 9bc:	mov	x1, xzr
 9c0:	add	x29, sp, #0x20
 9c4:	blr	x8
 9c8:	cbz	w0, 9d8 <dl_load@@Base+0x264>
 9cc:	ldr	d0, [sp, #8]
 9d0:	fcvtzu	w23, d0
 9d4:	b	a10 <dl_load@@Base+0x29c>
 9d8:	ldr	x8, [x21, #160]
 9dc:	ldr	w9, [x8, #24]
 9e0:	cbz	w9, a0c <dl_load@@Base+0x298>
 9e4:	ldr	x23, [x8, #112]
 9e8:	ldr	x20, [x22, #168]
 9ec:	adrp	x1, 0 <exit@plt-0x640>
 9f0:	add	x1, x1, #0xb42
 9f4:	mov	w2, #0x5                   	// #5
 9f8:	mov	x0, xzr
 9fc:	bl	680 <dcgettext@plt>
 a00:	mov	x1, x0
 a04:	mov	x0, x20
 a08:	blr	x23
 a0c:	mov	w23, wzr
 a10:	ldr	x24, [x21, #160]
 a14:	movi	v0.2d, #0x0
 a18:	mov	w8, #0x2                   	// #2
 a1c:	ldr	x20, [x22, #168]
 a20:	stp	q0, q0, [x19]
 a24:	str	w8, [x19]
 a28:	mov	w8, #0x1                   	// #1
 a2c:	str	x8, [x19, #16]
 a30:	ldr	x8, [x24, #280]
 a34:	mov	w0, #0x2                   	// #2
 a38:	blr	x8
 a3c:	mov	x21, x0
 a40:	cbnz	x0, a64 <dl_load@@Base+0x2f0>
 a44:	ldr	x8, [x24, #96]
 a48:	adrp	x1, 0 <exit@plt-0x640>
 a4c:	adrp	x2, 0 <exit@plt-0x640>
 a50:	add	x1, x1, #0xb6d
 a54:	add	x2, x2, #0xb8b
 a58:	mov	w3, #0x2                   	// #2
 a5c:	mov	x0, x20
 a60:	blr	x8
 a64:	strb	w23, [x21]
 a68:	strb	wzr, [x21, #1]
 a6c:	str	x21, [x19, #8]
 a70:	mov	x0, x19
 a74:	ldp	x20, x19, [sp, #80]
 a78:	ldp	x22, x21, [sp, #64]
 a7c:	ldp	x24, x23, [sp, #48]
 a80:	ldp	x29, x30, [sp, #32]
 a84:	add	sp, sp, #0x60
 a88:	ret

Disassembly of section .fini:

0000000000000a8c <.fini>:
 a8c:	stp	x29, x30, [sp, #-16]!
 a90:	mov	x29, sp
 a94:	ldp	x29, x30, [sp], #16
 a98:	ret
