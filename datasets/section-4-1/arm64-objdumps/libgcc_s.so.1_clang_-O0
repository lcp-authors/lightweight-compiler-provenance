
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgcc_s.so.1_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002ac8 <.init>:
    2ac8:	stp	x29, x30, [sp, #-16]!
    2acc:	mov	x29, sp
    2ad0:	bl	2e20 <_Unwind_GetDataRelBase@plt+0x10>
    2ad4:	ldp	x29, x30, [sp], #16
    2ad8:	ret

Disassembly of section .plt:

0000000000002ae0 <memcpy@plt-0x20>:
    2ae0:	stp	x16, x30, [sp, #-16]!
    2ae4:	adrp	x16, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
    2ae8:	ldr	x17, [x16, #4088]
    2aec:	add	x16, x16, #0xff8
    2af0:	br	x17
    2af4:	nop
    2af8:	nop
    2afc:	nop

0000000000002b00 <memcpy@plt>:
    2b00:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16]
    2b08:	add	x16, x16, #0x0
    2b0c:	br	x17

0000000000002b10 <_Unwind_GetRegionStart@plt>:
    2b10:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #8]
    2b18:	add	x16, x16, #0x8
    2b1c:	br	x17

0000000000002b20 <strlen@plt>:
    2b20:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #16]
    2b28:	add	x16, x16, #0x10
    2b2c:	br	x17

0000000000002b30 <_Unwind_RaiseException@plt>:
    2b30:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #24]
    2b38:	add	x16, x16, #0x18
    2b3c:	br	x17

0000000000002b40 <_Unwind_SetIP@plt>:
    2b40:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #32]
    2b48:	add	x16, x16, #0x20
    2b4c:	br	x17

0000000000002b50 <_Unwind_GetLanguageSpecificData@plt>:
    2b50:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #40]
    2b58:	add	x16, x16, #0x28
    2b5c:	br	x17

0000000000002b60 <__floatunditf@plt>:
    2b60:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #48]
    2b68:	add	x16, x16, #0x30
    2b6c:	br	x17

0000000000002b70 <__multf3@plt>:
    2b70:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #56]
    2b78:	add	x16, x16, #0x38
    2b7c:	br	x17

0000000000002b80 <__cxa_finalize@plt>:
    2b80:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #64]
    2b88:	add	x16, x16, #0x40
    2b8c:	br	x17

0000000000002b90 <__eqtf2@plt>:
    2b90:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #72]
    2b98:	add	x16, x16, #0x48
    2b9c:	br	x17

0000000000002ba0 <__floatditf@plt>:
    2ba0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #80]
    2ba8:	add	x16, x16, #0x50
    2bac:	br	x17

0000000000002bb0 <_Unwind_GetTextRelBase@plt>:
    2bb0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #88]
    2bb8:	add	x16, x16, #0x58
    2bbc:	br	x17

0000000000002bc0 <__deregister_frame_info_bases@plt>:
    2bc0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #96]
    2bc8:	add	x16, x16, #0x60
    2bcc:	br	x17

0000000000002bd0 <malloc@plt>:
    2bd0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #104]
    2bd8:	add	x16, x16, #0x68
    2bdc:	br	x17

0000000000002be0 <pthread_getspecific@plt>:
    2be0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #112]
    2be8:	add	x16, x16, #0x70
    2bec:	br	x17

0000000000002bf0 <_Unwind_GetCFA@plt>:
    2bf0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #120]
    2bf8:	add	x16, x16, #0x78
    2bfc:	br	x17

0000000000002c00 <memset@plt>:
    2c00:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #128]
    2c08:	add	x16, x16, #0x80
    2c0c:	br	x17

0000000000002c10 <__fixunssfti@plt>:
    2c10:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #136]
    2c18:	add	x16, x16, #0x88
    2c1c:	br	x17

0000000000002c20 <__letf2@plt>:
    2c20:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #144]
    2c28:	add	x16, x16, #0x90
    2c2c:	br	x17

0000000000002c30 <__register_frame_info_table_bases@plt>:
    2c30:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #152]
    2c38:	add	x16, x16, #0x98
    2c3c:	br	x17

0000000000002c40 <calloc@plt>:
    2c40:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #160]
    2c48:	add	x16, x16, #0xa0
    2c4c:	br	x17

0000000000002c50 <__gttf2@plt>:
    2c50:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #168]
    2c58:	add	x16, x16, #0xa8
    2c5c:	br	x17

0000000000002c60 <_Unwind_GetIPInfo@plt>:
    2c60:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #176]
    2c68:	add	x16, x16, #0xb0
    2c6c:	br	x17

0000000000002c70 <realloc@plt>:
    2c70:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #184]
    2c78:	add	x16, x16, #0xb8
    2c7c:	br	x17

0000000000002c80 <__addtf3@plt>:
    2c80:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #192]
    2c88:	add	x16, x16, #0xc0
    2c8c:	br	x17

0000000000002c90 <pthread_key_create@plt>:
    2c90:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2c94:	ldr	x17, [x16, #200]
    2c98:	add	x16, x16, #0xc8
    2c9c:	br	x17

0000000000002ca0 <__gmon_start__@plt>:
    2ca0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2ca4:	ldr	x17, [x16, #208]
    2ca8:	add	x16, x16, #0xd0
    2cac:	br	x17

0000000000002cb0 <abort@plt>:
    2cb0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2cb4:	ldr	x17, [x16, #216]
    2cb8:	add	x16, x16, #0xd8
    2cbc:	br	x17

0000000000002cc0 <__divtf3@plt>:
    2cc0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2cc4:	ldr	x17, [x16, #224]
    2cc8:	add	x16, x16, #0xe0
    2ccc:	br	x17

0000000000002cd0 <pthread_once@plt>:
    2cd0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2cd4:	ldr	x17, [x16, #232]
    2cd8:	add	x16, x16, #0xe8
    2cdc:	br	x17

0000000000002ce0 <dl_iterate_phdr@plt>:
    2ce0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2ce4:	ldr	x17, [x16, #240]
    2ce8:	add	x16, x16, #0xf0
    2cec:	br	x17

0000000000002cf0 <__trunctfdf2@plt>:
    2cf0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2cf4:	ldr	x17, [x16, #248]
    2cf8:	add	x16, x16, #0xf8
    2cfc:	br	x17

0000000000002d00 <pthread_setspecific@plt>:
    2d00:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d04:	ldr	x17, [x16, #256]
    2d08:	add	x16, x16, #0x100
    2d0c:	br	x17

0000000000002d10 <_Unwind_Find_FDE@plt>:
    2d10:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d14:	ldr	x17, [x16, #264]
    2d18:	add	x16, x16, #0x108
    2d1c:	br	x17

0000000000002d20 <free@plt>:
    2d20:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d24:	ldr	x17, [x16, #272]
    2d28:	add	x16, x16, #0x110
    2d2c:	br	x17

0000000000002d30 <__register_frame_info_table@plt>:
    2d30:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d34:	ldr	x17, [x16, #280]
    2d38:	add	x16, x16, #0x118
    2d3c:	br	x17

0000000000002d40 <__deregister_frame_info@plt>:
    2d40:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d44:	ldr	x17, [x16, #288]
    2d48:	add	x16, x16, #0x120
    2d4c:	br	x17

0000000000002d50 <__lttf2@plt>:
    2d50:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d54:	ldr	x17, [x16, #296]
    2d58:	add	x16, x16, #0x128
    2d5c:	br	x17

0000000000002d60 <__register_frame_info@plt>:
    2d60:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d64:	ldr	x17, [x16, #304]
    2d68:	add	x16, x16, #0x130
    2d6c:	br	x17

0000000000002d70 <__register_frame_info_bases@plt>:
    2d70:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d74:	ldr	x17, [x16, #312]
    2d78:	add	x16, x16, #0x138
    2d7c:	br	x17

0000000000002d80 <_Unwind_Resume@plt>:
    2d80:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d84:	ldr	x17, [x16, #320]
    2d88:	add	x16, x16, #0x140
    2d8c:	br	x17

0000000000002d90 <__fixunsdfti@plt>:
    2d90:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2d94:	ldr	x17, [x16, #328]
    2d98:	add	x16, x16, #0x148
    2d9c:	br	x17

0000000000002da0 <__unordtf2@plt>:
    2da0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2da4:	ldr	x17, [x16, #336]
    2da8:	add	x16, x16, #0x150
    2dac:	br	x17

0000000000002db0 <_Unwind_SetGR@plt>:
    2db0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2db4:	ldr	x17, [x16, #344]
    2db8:	add	x16, x16, #0x158
    2dbc:	br	x17

0000000000002dc0 <pthread_mutex_lock@plt>:
    2dc0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2dc4:	ldr	x17, [x16, #352]
    2dc8:	add	x16, x16, #0x160
    2dcc:	br	x17

0000000000002dd0 <pthread_mutex_unlock@plt>:
    2dd0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2dd4:	ldr	x17, [x16, #360]
    2dd8:	add	x16, x16, #0x168
    2ddc:	br	x17

0000000000002de0 <__floatsitf@plt>:
    2de0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2de4:	ldr	x17, [x16, #368]
    2de8:	add	x16, x16, #0x170
    2dec:	br	x17

0000000000002df0 <__subtf3@plt>:
    2df0:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2df4:	ldr	x17, [x16, #376]
    2df8:	add	x16, x16, #0x178
    2dfc:	br	x17

0000000000002e00 <__trunctfsf2@plt>:
    2e00:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2e04:	ldr	x17, [x16, #384]
    2e08:	add	x16, x16, #0x180
    2e0c:	br	x17

0000000000002e10 <_Unwind_GetDataRelBase@plt>:
    2e10:	adrp	x16, 34000 <memcpy@GLIBC_2.17>
    2e14:	ldr	x17, [x16, #392]
    2e18:	add	x16, x16, #0x188
    2e1c:	br	x17

Disassembly of section .text:

0000000000002e20 <__multi3@@GCC_3.0-0x190>:
    2e20:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
    2e24:	ldr	x0, [x0, #4056]
    2e28:	cbz	x0, 2e30 <_Unwind_GetDataRelBase@plt+0x20>
    2e2c:	b	2ca0 <__gmon_start__@plt>
    2e30:	ret
    2e34:	stp	x29, x30, [sp, #-32]!
    2e38:	mov	x29, sp
    2e3c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2e40:	add	x0, x0, #0x1a8
    2e44:	str	x0, [sp, #24]
    2e48:	ldr	x0, [sp, #24]
    2e4c:	str	x0, [sp, #24]
    2e50:	ldr	x1, [sp, #24]
    2e54:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2e58:	add	x0, x0, #0x1a8
    2e5c:	cmp	x1, x0
    2e60:	b.eq	2e98 <_Unwind_GetDataRelBase@plt+0x88>  // b.none
    2e64:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
    2e68:	ldr	x0, [x0, #4040]
    2e6c:	str	x0, [sp, #16]
    2e70:	ldr	x0, [sp, #16]
    2e74:	str	x0, [sp, #16]
    2e78:	ldr	x0, [sp, #16]
    2e7c:	cmp	x0, #0x0
    2e80:	b.eq	2e9c <_Unwind_GetDataRelBase@plt+0x8c>  // b.none
    2e84:	ldr	x1, [sp, #16]
    2e88:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2e8c:	add	x0, x0, #0x1a8
    2e90:	blr	x1
    2e94:	b	2e9c <_Unwind_GetDataRelBase@plt+0x8c>
    2e98:	nop
    2e9c:	ldp	x29, x30, [sp], #32
    2ea0:	ret
    2ea4:	stp	x29, x30, [sp, #-48]!
    2ea8:	mov	x29, sp
    2eac:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2eb0:	add	x0, x0, #0x1a8
    2eb4:	str	x0, [sp, #40]
    2eb8:	ldr	x0, [sp, #40]
    2ebc:	str	x0, [sp, #40]
    2ec0:	ldr	x1, [sp, #40]
    2ec4:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2ec8:	add	x0, x0, #0x1a8
    2ecc:	sub	x0, x1, x0
    2ed0:	asr	x0, x0, #3
    2ed4:	lsr	x1, x0, #63
    2ed8:	add	x0, x1, x0
    2edc:	asr	x0, x0, #1
    2ee0:	str	x0, [sp, #32]
    2ee4:	ldr	x0, [sp, #32]
    2ee8:	cmp	x0, #0x0
    2eec:	b.eq	2f28 <_Unwind_GetDataRelBase@plt+0x118>  // b.none
    2ef0:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
    2ef4:	ldr	x0, [x0, #4064]
    2ef8:	str	x0, [sp, #24]
    2efc:	ldr	x0, [sp, #24]
    2f00:	str	x0, [sp, #24]
    2f04:	ldr	x0, [sp, #24]
    2f08:	cmp	x0, #0x0
    2f0c:	b.eq	2f2c <_Unwind_GetDataRelBase@plt+0x11c>  // b.none
    2f10:	ldr	x2, [sp, #24]
    2f14:	ldr	x1, [sp, #32]
    2f18:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2f1c:	add	x0, x0, #0x1a8
    2f20:	blr	x2
    2f24:	b	2f2c <_Unwind_GetDataRelBase@plt+0x11c>
    2f28:	nop
    2f2c:	ldp	x29, x30, [sp], #48
    2f30:	ret
    2f34:	stp	x29, x30, [sp, #-16]!
    2f38:	mov	x29, sp
    2f3c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2f40:	add	x0, x0, #0x1a8
    2f44:	ldrb	w0, [x0]
    2f48:	and	x0, x0, #0xff
    2f4c:	cmp	x0, #0x0
    2f50:	b.ne	2f8c <_Unwind_GetDataRelBase@plt+0x17c>  // b.any
    2f54:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
    2f58:	ldr	x0, [x0, #4048]
    2f5c:	cmp	x0, #0x0
    2f60:	b.eq	2f74 <_Unwind_GetDataRelBase@plt+0x164>  // b.none
    2f64:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2f68:	add	x0, x0, #0x190
    2f6c:	ldr	x0, [x0]
    2f70:	bl	2b80 <__cxa_finalize@plt>
    2f74:	bl	2e34 <_Unwind_GetDataRelBase@plt+0x24>
    2f78:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    2f7c:	add	x0, x0, #0x1a8
    2f80:	mov	w1, #0x1                   	// #1
    2f84:	strb	w1, [x0]
    2f88:	b	2f90 <_Unwind_GetDataRelBase@plt+0x180>
    2f8c:	nop
    2f90:	ldp	x29, x30, [sp], #16
    2f94:	ret
    2f98:	stp	x29, x30, [sp, #-16]!
    2f9c:	mov	x29, sp
    2fa0:	bl	2ea4 <_Unwind_GetDataRelBase@plt+0x94>
    2fa4:	nop
    2fa8:	ldp	x29, x30, [sp], #16
    2fac:	ret

0000000000002fb0 <__multi3@@GCC_3.0>:
    2fb0:	sub	sp, sp, #0xa0
    2fb4:	stp	x0, x1, [sp, #16]
    2fb8:	stp	x2, x3, [sp]
    2fbc:	ldp	x0, x1, [sp, #16]
    2fc0:	stp	x0, x1, [sp, #80]
    2fc4:	ldp	x0, x1, [sp]
    2fc8:	stp	x0, x1, [sp, #64]
    2fcc:	ldr	x0, [sp, #80]
    2fd0:	and	x0, x0, #0xffffffff
    2fd4:	str	x0, [sp, #144]
    2fd8:	ldr	x0, [sp, #80]
    2fdc:	lsr	x0, x0, #32
    2fe0:	str	x0, [sp, #136]
    2fe4:	ldr	x0, [sp, #64]
    2fe8:	and	x0, x0, #0xffffffff
    2fec:	str	x0, [sp, #128]
    2ff0:	ldr	x0, [sp, #64]
    2ff4:	lsr	x0, x0, #32
    2ff8:	str	x0, [sp, #120]
    2ffc:	ldr	x1, [sp, #144]
    3000:	ldr	x0, [sp, #128]
    3004:	mul	x0, x1, x0
    3008:	str	x0, [sp, #112]
    300c:	ldr	x1, [sp, #144]
    3010:	ldr	x0, [sp, #120]
    3014:	mul	x0, x1, x0
    3018:	str	x0, [sp, #104]
    301c:	ldr	x1, [sp, #136]
    3020:	ldr	x0, [sp, #128]
    3024:	mul	x0, x1, x0
    3028:	str	x0, [sp, #96]
    302c:	ldr	x1, [sp, #136]
    3030:	ldr	x0, [sp, #120]
    3034:	mul	x0, x1, x0
    3038:	str	x0, [sp, #152]
    303c:	ldr	x0, [sp, #112]
    3040:	lsr	x0, x0, #32
    3044:	ldr	x1, [sp, #104]
    3048:	add	x0, x1, x0
    304c:	str	x0, [sp, #104]
    3050:	ldr	x1, [sp, #104]
    3054:	ldr	x0, [sp, #96]
    3058:	add	x0, x1, x0
    305c:	str	x0, [sp, #104]
    3060:	ldr	x1, [sp, #104]
    3064:	ldr	x0, [sp, #96]
    3068:	cmp	x1, x0
    306c:	b.cs	3080 <__multi3@@GCC_3.0+0xd0>  // b.hs, b.nlast
    3070:	ldr	x1, [sp, #152]
    3074:	mov	x0, #0x100000000           	// #4294967296
    3078:	add	x0, x1, x0
    307c:	str	x0, [sp, #152]
    3080:	ldr	x0, [sp, #104]
    3084:	lsr	x1, x0, #32
    3088:	ldr	x0, [sp, #152]
    308c:	add	x0, x1, x0
    3090:	str	x0, [sp, #40]
    3094:	ldr	x0, [sp, #104]
    3098:	and	x0, x0, #0xffffffff
    309c:	lsl	x1, x0, #32
    30a0:	ldr	x0, [sp, #112]
    30a4:	and	x0, x0, #0xffffffff
    30a8:	add	x0, x1, x0
    30ac:	str	x0, [sp, #32]
    30b0:	ldp	x0, x1, [sp, #32]
    30b4:	stp	x0, x1, [sp, #48]
    30b8:	ldr	x0, [sp, #56]
    30bc:	mov	x2, x0
    30c0:	ldr	x0, [sp, #80]
    30c4:	mov	x1, x0
    30c8:	ldr	x0, [sp, #72]
    30cc:	mul	x1, x1, x0
    30d0:	ldr	x0, [sp, #88]
    30d4:	mov	x3, x0
    30d8:	ldr	x0, [sp, #64]
    30dc:	mul	x0, x3, x0
    30e0:	add	x0, x1, x0
    30e4:	add	x0, x2, x0
    30e8:	str	x0, [sp, #56]
    30ec:	ldp	x0, x1, [sp, #48]
    30f0:	add	sp, sp, #0xa0
    30f4:	ret

00000000000030f8 <__negti2@@GCC_3.0>:
    30f8:	sub	sp, sp, #0x30
    30fc:	stp	x0, x1, [sp]
    3100:	ldp	x0, x1, [sp]
    3104:	stp	x0, x1, [sp, #32]
    3108:	ldr	x0, [sp, #32]
    310c:	neg	x0, x0
    3110:	str	x0, [sp, #16]
    3114:	ldr	x0, [sp, #40]
    3118:	neg	x1, x0
    311c:	ldr	x0, [sp, #32]
    3120:	cmp	x0, #0x0
    3124:	cset	w0, ne  // ne = any
    3128:	and	w0, w0, #0xff
    312c:	and	x0, x0, #0xff
    3130:	sub	x0, x1, x0
    3134:	str	x0, [sp, #24]
    3138:	ldp	x0, x1, [sp, #16]
    313c:	add	sp, sp, #0x30
    3140:	ret

0000000000003144 <__lshrti3@@GCC_3.0>:
    3144:	sub	sp, sp, #0x50
    3148:	stp	x0, x1, [sp, #16]
    314c:	str	x2, [sp, #8]
    3150:	ldr	x0, [sp, #8]
    3154:	cmp	x0, #0x0
    3158:	b.ne	3164 <__lshrti3@@GCC_3.0+0x20>  // b.any
    315c:	ldp	x0, x1, [sp, #16]
    3160:	b	31f0 <__lshrti3@@GCC_3.0+0xac>
    3164:	ldp	x0, x1, [sp, #16]
    3168:	stp	x0, x1, [sp, #48]
    316c:	mov	x1, #0x40                  	// #64
    3170:	ldr	x0, [sp, #8]
    3174:	sub	x0, x1, x0
    3178:	str	x0, [sp, #72]
    317c:	ldr	x0, [sp, #72]
    3180:	cmp	x0, #0x0
    3184:	b.gt	31a8 <__lshrti3@@GCC_3.0+0x64>
    3188:	str	xzr, [sp, #40]
    318c:	ldr	x0, [sp, #56]
    3190:	mov	x1, x0
    3194:	ldr	x0, [sp, #72]
    3198:	neg	w0, w0
    319c:	lsr	x0, x1, x0
    31a0:	str	x0, [sp, #32]
    31a4:	b	31ec <__lshrti3@@GCC_3.0+0xa8>
    31a8:	ldr	x0, [sp, #56]
    31ac:	mov	x1, x0
    31b0:	ldr	x0, [sp, #72]
    31b4:	lsl	x0, x1, x0
    31b8:	str	x0, [sp, #64]
    31bc:	ldr	x0, [sp, #56]
    31c0:	mov	x1, x0
    31c4:	ldr	x0, [sp, #8]
    31c8:	lsr	x0, x1, x0
    31cc:	str	x0, [sp, #40]
    31d0:	ldr	x0, [sp, #48]
    31d4:	mov	x1, x0
    31d8:	ldr	x0, [sp, #8]
    31dc:	lsr	x1, x1, x0
    31e0:	ldr	x0, [sp, #64]
    31e4:	orr	x0, x1, x0
    31e8:	str	x0, [sp, #32]
    31ec:	ldp	x0, x1, [sp, #32]
    31f0:	add	sp, sp, #0x50
    31f4:	ret

00000000000031f8 <__ashlti3@@GCC_3.0>:
    31f8:	sub	sp, sp, #0x50
    31fc:	stp	x0, x1, [sp, #16]
    3200:	str	x2, [sp, #8]
    3204:	ldr	x0, [sp, #8]
    3208:	cmp	x0, #0x0
    320c:	b.ne	3218 <__ashlti3@@GCC_3.0+0x20>  // b.any
    3210:	ldp	x0, x1, [sp, #16]
    3214:	b	32a4 <__ashlti3@@GCC_3.0+0xac>
    3218:	ldp	x0, x1, [sp, #16]
    321c:	stp	x0, x1, [sp, #48]
    3220:	mov	x1, #0x40                  	// #64
    3224:	ldr	x0, [sp, #8]
    3228:	sub	x0, x1, x0
    322c:	str	x0, [sp, #72]
    3230:	ldr	x0, [sp, #72]
    3234:	cmp	x0, #0x0
    3238:	b.gt	325c <__ashlti3@@GCC_3.0+0x64>
    323c:	str	xzr, [sp, #32]
    3240:	ldr	x0, [sp, #48]
    3244:	mov	x1, x0
    3248:	ldr	x0, [sp, #72]
    324c:	neg	w0, w0
    3250:	lsl	x0, x1, x0
    3254:	str	x0, [sp, #40]
    3258:	b	32a0 <__ashlti3@@GCC_3.0+0xa8>
    325c:	ldr	x0, [sp, #48]
    3260:	mov	x1, x0
    3264:	ldr	x0, [sp, #72]
    3268:	lsr	x0, x1, x0
    326c:	str	x0, [sp, #64]
    3270:	ldr	x0, [sp, #48]
    3274:	mov	x1, x0
    3278:	ldr	x0, [sp, #8]
    327c:	lsl	x0, x1, x0
    3280:	str	x0, [sp, #32]
    3284:	ldr	x0, [sp, #56]
    3288:	mov	x1, x0
    328c:	ldr	x0, [sp, #8]
    3290:	lsl	x1, x1, x0
    3294:	ldr	x0, [sp, #64]
    3298:	orr	x0, x1, x0
    329c:	str	x0, [sp, #40]
    32a0:	ldp	x0, x1, [sp, #32]
    32a4:	add	sp, sp, #0x50
    32a8:	ret

00000000000032ac <__ashrti3@@GCC_3.0>:
    32ac:	sub	sp, sp, #0x50
    32b0:	stp	x0, x1, [sp, #16]
    32b4:	str	x2, [sp, #8]
    32b8:	ldr	x0, [sp, #8]
    32bc:	cmp	x0, #0x0
    32c0:	b.ne	32cc <__ashrti3@@GCC_3.0+0x20>  // b.any
    32c4:	ldp	x0, x1, [sp, #16]
    32c8:	b	3358 <__ashrti3@@GCC_3.0+0xac>
    32cc:	ldp	x0, x1, [sp, #16]
    32d0:	stp	x0, x1, [sp, #48]
    32d4:	mov	x1, #0x40                  	// #64
    32d8:	ldr	x0, [sp, #8]
    32dc:	sub	x0, x1, x0
    32e0:	str	x0, [sp, #72]
    32e4:	ldr	x0, [sp, #72]
    32e8:	cmp	x0, #0x0
    32ec:	b.gt	3314 <__ashrti3@@GCC_3.0+0x68>
    32f0:	ldr	x0, [sp, #56]
    32f4:	asr	x0, x0, #63
    32f8:	str	x0, [sp, #40]
    32fc:	ldr	x1, [sp, #56]
    3300:	ldr	x0, [sp, #72]
    3304:	neg	w0, w0
    3308:	asr	x0, x1, x0
    330c:	str	x0, [sp, #32]
    3310:	b	3354 <__ashrti3@@GCC_3.0+0xa8>
    3314:	ldr	x0, [sp, #56]
    3318:	mov	x1, x0
    331c:	ldr	x0, [sp, #72]
    3320:	lsl	x0, x1, x0
    3324:	str	x0, [sp, #64]
    3328:	ldr	x0, [sp, #56]
    332c:	ldr	x1, [sp, #8]
    3330:	asr	x0, x0, x1
    3334:	str	x0, [sp, #40]
    3338:	ldr	x0, [sp, #48]
    333c:	mov	x1, x0
    3340:	ldr	x0, [sp, #8]
    3344:	lsr	x1, x1, x0
    3348:	ldr	x0, [sp, #64]
    334c:	orr	x0, x1, x0
    3350:	str	x0, [sp, #32]
    3354:	ldp	x0, x1, [sp, #32]
    3358:	add	sp, sp, #0x50
    335c:	ret

0000000000003360 <__cmpti2@@GCC_3.0>:
    3360:	sub	sp, sp, #0x40
    3364:	stp	x0, x1, [sp, #16]
    3368:	stp	x2, x3, [sp]
    336c:	ldp	x0, x1, [sp, #16]
    3370:	stp	x0, x1, [sp, #48]
    3374:	ldp	x0, x1, [sp]
    3378:	stp	x0, x1, [sp, #32]
    337c:	ldr	x1, [sp, #56]
    3380:	ldr	x0, [sp, #40]
    3384:	cmp	x1, x0
    3388:	b.ge	3394 <__cmpti2@@GCC_3.0+0x34>  // b.tcont
    338c:	mov	w0, #0x0                   	// #0
    3390:	b	33e8 <__cmpti2@@GCC_3.0+0x88>
    3394:	ldr	x1, [sp, #56]
    3398:	ldr	x0, [sp, #40]
    339c:	cmp	x1, x0
    33a0:	b.le	33ac <__cmpti2@@GCC_3.0+0x4c>
    33a4:	mov	w0, #0x2                   	// #2
    33a8:	b	33e8 <__cmpti2@@GCC_3.0+0x88>
    33ac:	ldr	x0, [sp, #48]
    33b0:	mov	x1, x0
    33b4:	ldr	x0, [sp, #32]
    33b8:	cmp	x1, x0
    33bc:	b.cs	33c8 <__cmpti2@@GCC_3.0+0x68>  // b.hs, b.nlast
    33c0:	mov	w0, #0x0                   	// #0
    33c4:	b	33e8 <__cmpti2@@GCC_3.0+0x88>
    33c8:	ldr	x0, [sp, #48]
    33cc:	mov	x1, x0
    33d0:	ldr	x0, [sp, #32]
    33d4:	cmp	x1, x0
    33d8:	b.ls	33e4 <__cmpti2@@GCC_3.0+0x84>  // b.plast
    33dc:	mov	w0, #0x2                   	// #2
    33e0:	b	33e8 <__cmpti2@@GCC_3.0+0x88>
    33e4:	mov	w0, #0x1                   	// #1
    33e8:	add	sp, sp, #0x40
    33ec:	ret

00000000000033f0 <__ucmpti2@@GCC_3.0>:
    33f0:	sub	sp, sp, #0x40
    33f4:	stp	x0, x1, [sp, #16]
    33f8:	stp	x2, x3, [sp]
    33fc:	ldp	x0, x1, [sp, #16]
    3400:	stp	x0, x1, [sp, #48]
    3404:	ldp	x0, x1, [sp]
    3408:	stp	x0, x1, [sp, #32]
    340c:	ldr	x0, [sp, #56]
    3410:	mov	x1, x0
    3414:	ldr	x0, [sp, #40]
    3418:	cmp	x1, x0
    341c:	b.cs	3428 <__ucmpti2@@GCC_3.0+0x38>  // b.hs, b.nlast
    3420:	mov	w0, #0x0                   	// #0
    3424:	b	3480 <__ucmpti2@@GCC_3.0+0x90>
    3428:	ldr	x0, [sp, #56]
    342c:	mov	x1, x0
    3430:	ldr	x0, [sp, #40]
    3434:	cmp	x1, x0
    3438:	b.ls	3444 <__ucmpti2@@GCC_3.0+0x54>  // b.plast
    343c:	mov	w0, #0x2                   	// #2
    3440:	b	3480 <__ucmpti2@@GCC_3.0+0x90>
    3444:	ldr	x0, [sp, #48]
    3448:	mov	x1, x0
    344c:	ldr	x0, [sp, #32]
    3450:	cmp	x1, x0
    3454:	b.cs	3460 <__ucmpti2@@GCC_3.0+0x70>  // b.hs, b.nlast
    3458:	mov	w0, #0x0                   	// #0
    345c:	b	3480 <__ucmpti2@@GCC_3.0+0x90>
    3460:	ldr	x0, [sp, #48]
    3464:	mov	x1, x0
    3468:	ldr	x0, [sp, #32]
    346c:	cmp	x1, x0
    3470:	b.ls	347c <__ucmpti2@@GCC_3.0+0x8c>  // b.plast
    3474:	mov	w0, #0x2                   	// #2
    3478:	b	3480 <__ucmpti2@@GCC_3.0+0x90>
    347c:	mov	w0, #0x1                   	// #1
    3480:	add	sp, sp, #0x40
    3484:	ret

0000000000003488 <__clear_cache@@GCC_3.0>:
    3488:	stp	x29, x30, [sp, #-32]!
    348c:	mov	x29, sp
    3490:	str	x0, [sp, #24]
    3494:	str	x1, [sp, #16]
    3498:	ldr	x1, [sp, #16]
    349c:	ldr	x0, [sp, #24]
    34a0:	bl	d1e4 <__udivmodti4@@GCC_3.0+0xce0>
    34a4:	nop
    34a8:	ldp	x29, x30, [sp], #32
    34ac:	ret

00000000000034b0 <__absvdi2@@GCC_3.0>:
    34b0:	stp	x29, x30, [sp, #-48]!
    34b4:	mov	x29, sp
    34b8:	str	x0, [sp, #24]
    34bc:	ldr	x0, [sp, #24]
    34c0:	str	x0, [sp, #40]
    34c4:	ldr	x0, [sp, #24]
    34c8:	cmp	x0, #0x0
    34cc:	b.ge	34dc <__absvdi2@@GCC_3.0+0x2c>  // b.tcont
    34d0:	ldr	x0, [sp, #24]
    34d4:	neg	x0, x0
    34d8:	str	x0, [sp, #40]
    34dc:	ldr	x0, [sp, #40]
    34e0:	cmp	x0, #0x0
    34e4:	b.ge	34ec <__absvdi2@@GCC_3.0+0x3c>  // b.tcont
    34e8:	bl	2cb0 <abort@plt>
    34ec:	ldr	x0, [sp, #40]
    34f0:	ldp	x29, x30, [sp], #48
    34f4:	ret

00000000000034f8 <__absvsi2@@GCC_3.0>:
    34f8:	stp	x29, x30, [sp, #-48]!
    34fc:	mov	x29, sp
    3500:	str	w0, [sp, #28]
    3504:	ldr	w0, [sp, #28]
    3508:	str	w0, [sp, #44]
    350c:	ldr	w0, [sp, #28]
    3510:	cmp	w0, #0x0
    3514:	b.ge	3524 <__absvsi2@@GCC_3.0+0x2c>  // b.tcont
    3518:	ldr	w0, [sp, #28]
    351c:	neg	w0, w0
    3520:	str	w0, [sp, #44]
    3524:	ldr	w0, [sp, #44]
    3528:	cmp	w0, #0x0
    352c:	b.ge	3534 <__absvsi2@@GCC_3.0+0x3c>  // b.tcont
    3530:	bl	2cb0 <abort@plt>
    3534:	ldr	w0, [sp, #44]
    3538:	ldp	x29, x30, [sp], #48
    353c:	ret

0000000000003540 <__absvti2@@GCC_3.4.4>:
    3540:	stp	x29, x30, [sp, #-48]!
    3544:	mov	x29, sp
    3548:	stp	x0, x1, [sp, #16]
    354c:	ldp	x0, x1, [sp, #16]
    3550:	stp	x0, x1, [sp, #32]
    3554:	ldr	x0, [sp, #24]
    3558:	cmp	x0, #0x0
    355c:	b.ge	3578 <__absvti2@@GCC_3.4.4+0x38>  // b.tcont
    3560:	ldp	x0, x1, [sp, #16]
    3564:	negs	x4, x0
    3568:	ngc	x0, x1
    356c:	mov	x2, x4
    3570:	mov	x3, x0
    3574:	stp	x2, x3, [sp, #32]
    3578:	ldr	x0, [sp, #40]
    357c:	cmp	x0, #0x0
    3580:	b.ge	3588 <__absvti2@@GCC_3.4.4+0x48>  // b.tcont
    3584:	bl	2cb0 <abort@plt>
    3588:	ldp	x0, x1, [sp, #32]
    358c:	ldp	x29, x30, [sp], #48
    3590:	ret

0000000000003594 <__addvdi3@@GCC_3.0>:
    3594:	stp	x29, x30, [sp, #-48]!
    3598:	mov	x29, sp
    359c:	str	x0, [sp, #24]
    35a0:	str	x1, [sp, #16]
    35a4:	ldr	x1, [sp, #24]
    35a8:	ldr	x0, [sp, #16]
    35ac:	add	x0, x1, x0
    35b0:	str	x0, [sp, #40]
    35b4:	ldr	x0, [sp, #16]
    35b8:	cmp	x0, #0x0
    35bc:	b.lt	35d8 <__addvdi3@@GCC_3.0+0x44>  // b.tstop
    35c0:	ldr	x1, [sp, #40]
    35c4:	ldr	x0, [sp, #24]
    35c8:	cmp	x1, x0
    35cc:	cset	w0, lt  // lt = tstop
    35d0:	and	w0, w0, #0xff
    35d4:	b	35ec <__addvdi3@@GCC_3.0+0x58>
    35d8:	ldr	x1, [sp, #40]
    35dc:	ldr	x0, [sp, #24]
    35e0:	cmp	x1, x0
    35e4:	cset	w0, gt
    35e8:	and	w0, w0, #0xff
    35ec:	cmp	w0, #0x0
    35f0:	b.eq	35f8 <__addvdi3@@GCC_3.0+0x64>  // b.none
    35f4:	bl	2cb0 <abort@plt>
    35f8:	ldr	x0, [sp, #40]
    35fc:	ldp	x29, x30, [sp], #48
    3600:	ret

0000000000003604 <__addvsi3@@GCC_3.0>:
    3604:	stp	x29, x30, [sp, #-48]!
    3608:	mov	x29, sp
    360c:	str	w0, [sp, #28]
    3610:	str	w1, [sp, #24]
    3614:	ldr	w1, [sp, #28]
    3618:	ldr	w0, [sp, #24]
    361c:	add	w0, w1, w0
    3620:	str	w0, [sp, #44]
    3624:	ldr	w0, [sp, #24]
    3628:	cmp	w0, #0x0
    362c:	b.lt	3648 <__addvsi3@@GCC_3.0+0x44>  // b.tstop
    3630:	ldr	w1, [sp, #44]
    3634:	ldr	w0, [sp, #28]
    3638:	cmp	w1, w0
    363c:	cset	w0, lt  // lt = tstop
    3640:	and	w0, w0, #0xff
    3644:	b	365c <__addvsi3@@GCC_3.0+0x58>
    3648:	ldr	w1, [sp, #44]
    364c:	ldr	w0, [sp, #28]
    3650:	cmp	w1, w0
    3654:	cset	w0, gt
    3658:	and	w0, w0, #0xff
    365c:	cmp	w0, #0x0
    3660:	b.eq	3668 <__addvsi3@@GCC_3.0+0x64>  // b.none
    3664:	bl	2cb0 <abort@plt>
    3668:	ldr	w0, [sp, #44]
    366c:	ldp	x29, x30, [sp], #48
    3670:	ret

0000000000003674 <__addvti3@@GCC_3.4.4>:
    3674:	stp	x29, x30, [sp, #-64]!
    3678:	mov	x29, sp
    367c:	stp	x0, x1, [sp, #32]
    3680:	stp	x2, x3, [sp, #16]
    3684:	ldp	x0, x1, [sp, #32]
    3688:	ldp	x2, x3, [sp, #16]
    368c:	mov	x6, x2
    3690:	adds	x6, x0, x6
    3694:	mov	x2, x3
    3698:	adc	x0, x1, x2
    369c:	mov	x4, x6
    36a0:	mov	x5, x0
    36a4:	stp	x4, x5, [sp, #48]
    36a8:	ldr	x0, [sp, #24]
    36ac:	cmp	x0, #0x0
    36b0:	b.lt	36f4 <__addvti3@@GCC_3.4.4+0x80>  // b.tstop
    36b4:	mov	w2, #0x1                   	// #1
    36b8:	ldr	x1, [sp, #40]
    36bc:	ldr	x0, [sp, #56]
    36c0:	cmp	x1, x0
    36c4:	b.gt	36ec <__addvti3@@GCC_3.4.4+0x78>
    36c8:	ldr	x1, [sp, #40]
    36cc:	ldr	x0, [sp, #56]
    36d0:	cmp	x1, x0
    36d4:	b.ne	36e8 <__addvti3@@GCC_3.4.4+0x74>  // b.any
    36d8:	ldr	x1, [sp, #32]
    36dc:	ldr	x0, [sp, #48]
    36e0:	cmp	x1, x0
    36e4:	b.hi	36ec <__addvti3@@GCC_3.4.4+0x78>  // b.pmore
    36e8:	mov	w2, #0x0                   	// #0
    36ec:	and	w0, w2, #0xff
    36f0:	b	3730 <__addvti3@@GCC_3.4.4+0xbc>
    36f4:	mov	w2, #0x1                   	// #1
    36f8:	ldr	x1, [sp, #56]
    36fc:	ldr	x0, [sp, #40]
    3700:	cmp	x1, x0
    3704:	b.gt	372c <__addvti3@@GCC_3.4.4+0xb8>
    3708:	ldr	x1, [sp, #56]
    370c:	ldr	x0, [sp, #40]
    3710:	cmp	x1, x0
    3714:	b.ne	3728 <__addvti3@@GCC_3.4.4+0xb4>  // b.any
    3718:	ldr	x1, [sp, #48]
    371c:	ldr	x0, [sp, #32]
    3720:	cmp	x1, x0
    3724:	b.hi	372c <__addvti3@@GCC_3.4.4+0xb8>  // b.pmore
    3728:	mov	w2, #0x0                   	// #0
    372c:	and	w0, w2, #0xff
    3730:	cmp	w0, #0x0
    3734:	b.eq	373c <__addvti3@@GCC_3.4.4+0xc8>  // b.none
    3738:	bl	2cb0 <abort@plt>
    373c:	ldp	x0, x1, [sp, #48]
    3740:	ldp	x29, x30, [sp], #64
    3744:	ret

0000000000003748 <__subvdi3@@GCC_3.0>:
    3748:	stp	x29, x30, [sp, #-48]!
    374c:	mov	x29, sp
    3750:	str	x0, [sp, #24]
    3754:	str	x1, [sp, #16]
    3758:	ldr	x1, [sp, #24]
    375c:	ldr	x0, [sp, #16]
    3760:	sub	x0, x1, x0
    3764:	str	x0, [sp, #40]
    3768:	ldr	x0, [sp, #16]
    376c:	cmp	x0, #0x0
    3770:	b.lt	378c <__subvdi3@@GCC_3.0+0x44>  // b.tstop
    3774:	ldr	x1, [sp, #40]
    3778:	ldr	x0, [sp, #24]
    377c:	cmp	x1, x0
    3780:	cset	w0, gt
    3784:	and	w0, w0, #0xff
    3788:	b	37a0 <__subvdi3@@GCC_3.0+0x58>
    378c:	ldr	x1, [sp, #40]
    3790:	ldr	x0, [sp, #24]
    3794:	cmp	x1, x0
    3798:	cset	w0, lt  // lt = tstop
    379c:	and	w0, w0, #0xff
    37a0:	cmp	w0, #0x0
    37a4:	b.eq	37ac <__subvdi3@@GCC_3.0+0x64>  // b.none
    37a8:	bl	2cb0 <abort@plt>
    37ac:	ldr	x0, [sp, #40]
    37b0:	ldp	x29, x30, [sp], #48
    37b4:	ret

00000000000037b8 <__subvsi3@@GCC_3.0>:
    37b8:	stp	x29, x30, [sp, #-48]!
    37bc:	mov	x29, sp
    37c0:	str	w0, [sp, #28]
    37c4:	str	w1, [sp, #24]
    37c8:	ldr	w1, [sp, #28]
    37cc:	ldr	w0, [sp, #24]
    37d0:	sub	w0, w1, w0
    37d4:	str	w0, [sp, #44]
    37d8:	ldr	w0, [sp, #24]
    37dc:	cmp	w0, #0x0
    37e0:	b.lt	37fc <__subvsi3@@GCC_3.0+0x44>  // b.tstop
    37e4:	ldr	w1, [sp, #44]
    37e8:	ldr	w0, [sp, #28]
    37ec:	cmp	w1, w0
    37f0:	cset	w0, gt
    37f4:	and	w0, w0, #0xff
    37f8:	b	3810 <__subvsi3@@GCC_3.0+0x58>
    37fc:	ldr	w1, [sp, #44]
    3800:	ldr	w0, [sp, #28]
    3804:	cmp	w1, w0
    3808:	cset	w0, lt  // lt = tstop
    380c:	and	w0, w0, #0xff
    3810:	cmp	w0, #0x0
    3814:	b.eq	381c <__subvsi3@@GCC_3.0+0x64>  // b.none
    3818:	bl	2cb0 <abort@plt>
    381c:	ldr	w0, [sp, #44]
    3820:	ldp	x29, x30, [sp], #48
    3824:	ret

0000000000003828 <__subvti3@@GCC_3.4.4>:
    3828:	stp	x29, x30, [sp, #-64]!
    382c:	mov	x29, sp
    3830:	stp	x0, x1, [sp, #32]
    3834:	stp	x2, x3, [sp, #16]
    3838:	ldp	x2, x3, [sp, #32]
    383c:	ldp	x0, x1, [sp, #16]
    3840:	subs	x6, x2, x0
    3844:	sbc	x0, x3, x1
    3848:	mov	x4, x6
    384c:	mov	x5, x0
    3850:	stp	x4, x5, [sp, #48]
    3854:	ldr	x0, [sp, #24]
    3858:	cmp	x0, #0x0
    385c:	b.lt	38a0 <__subvti3@@GCC_3.4.4+0x78>  // b.tstop
    3860:	mov	w2, #0x1                   	// #1
    3864:	ldr	x1, [sp, #56]
    3868:	ldr	x0, [sp, #40]
    386c:	cmp	x1, x0
    3870:	b.gt	3898 <__subvti3@@GCC_3.4.4+0x70>
    3874:	ldr	x1, [sp, #56]
    3878:	ldr	x0, [sp, #40]
    387c:	cmp	x1, x0
    3880:	b.ne	3894 <__subvti3@@GCC_3.4.4+0x6c>  // b.any
    3884:	ldr	x1, [sp, #48]
    3888:	ldr	x0, [sp, #32]
    388c:	cmp	x1, x0
    3890:	b.hi	3898 <__subvti3@@GCC_3.4.4+0x70>  // b.pmore
    3894:	mov	w2, #0x0                   	// #0
    3898:	and	w0, w2, #0xff
    389c:	b	38dc <__subvti3@@GCC_3.4.4+0xb4>
    38a0:	mov	w2, #0x1                   	// #1
    38a4:	ldr	x1, [sp, #40]
    38a8:	ldr	x0, [sp, #56]
    38ac:	cmp	x1, x0
    38b0:	b.gt	38d8 <__subvti3@@GCC_3.4.4+0xb0>
    38b4:	ldr	x1, [sp, #40]
    38b8:	ldr	x0, [sp, #56]
    38bc:	cmp	x1, x0
    38c0:	b.ne	38d4 <__subvti3@@GCC_3.4.4+0xac>  // b.any
    38c4:	ldr	x1, [sp, #32]
    38c8:	ldr	x0, [sp, #48]
    38cc:	cmp	x1, x0
    38d0:	b.hi	38d8 <__subvti3@@GCC_3.4.4+0xb0>  // b.pmore
    38d4:	mov	w2, #0x0                   	// #0
    38d8:	and	w0, w2, #0xff
    38dc:	cmp	w0, #0x0
    38e0:	b.eq	38e8 <__subvti3@@GCC_3.4.4+0xc0>  // b.none
    38e4:	bl	2cb0 <abort@plt>
    38e8:	ldp	x0, x1, [sp, #48]
    38ec:	ldp	x29, x30, [sp], #64
    38f0:	ret

00000000000038f4 <__mulvdi3@@GCC_3.0>:
    38f4:	stp	x29, x30, [sp, #-48]!
    38f8:	mov	x29, sp
    38fc:	str	x0, [sp, #24]
    3900:	str	x1, [sp, #16]
    3904:	ldr	x0, [sp, #24]
    3908:	mov	x4, x0
    390c:	asr	x0, x0, #63
    3910:	mov	x5, x0
    3914:	ldr	x0, [sp, #16]
    3918:	mov	x2, x0
    391c:	asr	x0, x0, #63
    3920:	mov	x3, x0
    3924:	mul	x1, x4, x2
    3928:	umulh	x0, x4, x2
    392c:	madd	x0, x5, x2, x0
    3930:	madd	x0, x4, x3, x0
    3934:	mov	x8, x1
    3938:	mov	x9, x0
    393c:	stp	x8, x9, [sp, #32]
    3940:	ldr	x0, [sp, #40]
    3944:	mov	x6, x0
    3948:	ldr	x0, [sp, #40]
    394c:	asr	x7, x0, #63
    3950:	mov	x1, x6
    3954:	ldr	x0, [sp, #32]
    3958:	asr	x0, x0, #63
    395c:	cmp	x1, x0
    3960:	b.eq	3968 <__mulvdi3@@GCC_3.0+0x74>  // b.none
    3964:	bl	2cb0 <abort@plt>
    3968:	ldr	x0, [sp, #32]
    396c:	ldp	x29, x30, [sp], #48
    3970:	ret

0000000000003974 <__mulvsi3@@GCC_3.0>:
    3974:	stp	x29, x30, [sp, #-48]!
    3978:	mov	x29, sp
    397c:	str	w0, [sp, #28]
    3980:	str	w1, [sp, #24]
    3984:	ldrsw	x1, [sp, #28]
    3988:	ldrsw	x0, [sp, #24]
    398c:	mul	x0, x1, x0
    3990:	str	x0, [sp, #40]
    3994:	ldr	x0, [sp, #40]
    3998:	asr	x0, x0, #32
    399c:	mov	w1, w0
    39a0:	ldr	x0, [sp, #40]
    39a4:	asr	w0, w0, #31
    39a8:	cmp	w1, w0
    39ac:	b.eq	39b4 <__mulvsi3@@GCC_3.0+0x40>  // b.none
    39b0:	bl	2cb0 <abort@plt>
    39b4:	ldr	x0, [sp, #40]
    39b8:	ldp	x29, x30, [sp], #48
    39bc:	ret

00000000000039c0 <__mulvti3@@GCC_3.4.4>:
    39c0:	sub	sp, sp, #0x270
    39c4:	stp	x29, x30, [sp]
    39c8:	mov	x29, sp
    39cc:	stp	x19, x20, [sp, #16]
    39d0:	stp	x21, x22, [sp, #32]
    39d4:	stp	x23, x24, [sp, #48]
    39d8:	stp	x25, x26, [sp, #64]
    39dc:	str	x27, [sp, #80]
    39e0:	stp	x0, x1, [sp, #448]
    39e4:	stp	x2, x3, [sp, #432]
    39e8:	ldp	x0, x1, [sp, #448]
    39ec:	add	x2, sp, #0x200
    39f0:	stp	x0, x1, [x2, #80]
    39f4:	ldp	x0, x1, [sp, #432]
    39f8:	add	x2, sp, #0x200
    39fc:	stp	x0, x1, [x2, #64]
    3a00:	ldr	x1, [sp, #600]
    3a04:	ldr	x0, [sp, #592]
    3a08:	asr	x0, x0, #63
    3a0c:	cmp	x1, x0
    3a10:	cset	w0, eq  // eq = none
    3a14:	and	w0, w0, #0xff
    3a18:	and	x0, x0, #0xff
    3a1c:	cmp	x0, #0x0
    3a20:	b.eq	3bc4 <__mulvti3@@GCC_3.4.4+0x204>  // b.none
    3a24:	ldr	x1, [sp, #584]
    3a28:	ldr	x0, [sp, #576]
    3a2c:	asr	x0, x0, #63
    3a30:	cmp	x1, x0
    3a34:	cset	w0, eq  // eq = none
    3a38:	and	w0, w0, #0xff
    3a3c:	and	x0, x0, #0xff
    3a40:	cmp	x0, #0x0
    3a44:	b.eq	3a84 <__mulvti3@@GCC_3.4.4+0xc4>  // b.none
    3a48:	ldr	x0, [sp, #592]
    3a4c:	mov	x16, x0
    3a50:	asr	x0, x0, #63
    3a54:	mov	x17, x0
    3a58:	ldr	x0, [sp, #576]
    3a5c:	mov	x14, x0
    3a60:	asr	x0, x0, #63
    3a64:	mov	x15, x0
    3a68:	mul	x1, x16, x14
    3a6c:	umulh	x0, x16, x14
    3a70:	madd	x0, x17, x14, x0
    3a74:	madd	x0, x16, x15, x0
    3a78:	mov	x4, x1
    3a7c:	mov	x5, x0
    3a80:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3a84:	ldr	x0, [sp, #592]
    3a88:	mov	x12, x0
    3a8c:	mov	x13, #0x0                   	// #0
    3a90:	ldr	x0, [sp, #576]
    3a94:	mov	x10, x0
    3a98:	mov	x11, #0x0                   	// #0
    3a9c:	mul	x1, x12, x10
    3aa0:	umulh	x0, x12, x10
    3aa4:	madd	x0, x13, x10, x0
    3aa8:	madd	x0, x12, x11, x0
    3aac:	str	x1, [sp, #96]
    3ab0:	str	x0, [sp, #104]
    3ab4:	ldp	x0, x1, [sp, #96]
    3ab8:	add	x2, sp, #0x200
    3abc:	stp	x0, x1, [x2, #48]
    3ac0:	ldr	x0, [sp, #592]
    3ac4:	mov	x8, x0
    3ac8:	mov	x9, #0x0                   	// #0
    3acc:	ldr	x0, [sp, #584]
    3ad0:	mov	x6, x0
    3ad4:	mov	x7, #0x0                   	// #0
    3ad8:	mul	x1, x8, x6
    3adc:	umulh	x0, x8, x6
    3ae0:	madd	x0, x9, x6, x0
    3ae4:	madd	x0, x8, x7, x0
    3ae8:	str	x1, [sp, #112]
    3aec:	str	x0, [sp, #120]
    3af0:	ldp	x0, x1, [sp, #112]
    3af4:	add	x2, sp, #0x200
    3af8:	stp	x0, x1, [x2, #32]
    3afc:	ldr	x0, [sp, #584]
    3b00:	cmp	x0, #0x0
    3b04:	b.ge	3b18 <__mulvti3@@GCC_3.4.4+0x158>  // b.tcont
    3b08:	ldr	x1, [sp, #552]
    3b0c:	ldr	x0, [sp, #592]
    3b10:	sub	x0, x1, x0
    3b14:	str	x0, [sp, #552]
    3b18:	ldr	x0, [sp, #592]
    3b1c:	cmp	x0, #0x0
    3b20:	b.ge	3b50 <__mulvti3@@GCC_3.4.4+0x190>  // b.tcont
    3b24:	add	x0, sp, #0x200
    3b28:	ldp	x2, x3, [x0, #32]
    3b2c:	add	x0, sp, #0x200
    3b30:	ldp	x0, x1, [x0, #64]
    3b34:	subs	x4, x2, x0
    3b38:	sbc	x0, x3, x1
    3b3c:	str	x4, [sp, #128]
    3b40:	str	x0, [sp, #136]
    3b44:	ldp	x0, x1, [sp, #128]
    3b48:	add	x2, sp, #0x200
    3b4c:	stp	x0, x1, [x2, #32]
    3b50:	add	x0, sp, #0x200
    3b54:	ldp	x0, x1, [x0, #32]
    3b58:	ldr	x2, [sp, #568]
    3b5c:	str	x2, [sp, #144]
    3b60:	str	xzr, [sp, #152]
    3b64:	ldp	x4, x5, [sp, #144]
    3b68:	mov	x2, x4
    3b6c:	adds	x2, x0, x2
    3b70:	mov	x3, x5
    3b74:	adc	x0, x1, x3
    3b78:	str	x2, [sp, #160]
    3b7c:	str	x0, [sp, #168]
    3b80:	ldp	x0, x1, [sp, #160]
    3b84:	add	x2, sp, #0x200
    3b88:	stp	x0, x1, [x2, #32]
    3b8c:	ldr	x1, [sp, #552]
    3b90:	ldr	x0, [sp, #544]
    3b94:	asr	x0, x0, #63
    3b98:	cmp	x1, x0
    3b9c:	cset	w0, eq  // eq = none
    3ba0:	and	w0, w0, #0xff
    3ba4:	and	x0, x0, #0xff
    3ba8:	cmp	x0, #0x0
    3bac:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3bb0:	ldr	x0, [sp, #544]
    3bb4:	str	x0, [sp, #568]
    3bb8:	add	x0, sp, #0x200
    3bbc:	ldp	x4, x5, [x0, #48]
    3bc0:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3bc4:	ldr	x1, [sp, #584]
    3bc8:	ldr	x0, [sp, #576]
    3bcc:	asr	x0, x0, #63
    3bd0:	cmp	x1, x0
    3bd4:	cset	w0, eq  // eq = none
    3bd8:	and	w0, w0, #0xff
    3bdc:	and	x0, x0, #0xff
    3be0:	cmp	x0, #0x0
    3be4:	b.eq	3d70 <__mulvti3@@GCC_3.4.4+0x3b0>  // b.none
    3be8:	ldr	x0, [sp, #592]
    3bec:	str	x0, [sp, #176]
    3bf0:	str	xzr, [sp, #184]
    3bf4:	ldr	x0, [sp, #576]
    3bf8:	str	x0, [sp, #192]
    3bfc:	str	xzr, [sp, #200]
    3c00:	ldp	x4, x5, [sp, #176]
    3c04:	mov	x0, x4
    3c08:	ldp	x2, x3, [sp, #192]
    3c0c:	mov	x1, x2
    3c10:	mul	x1, x0, x1
    3c14:	mov	x0, x4
    3c18:	mov	x6, x2
    3c1c:	umulh	x0, x0, x6
    3c20:	mov	x6, x5
    3c24:	mov	x7, x2
    3c28:	madd	x0, x6, x7, x0
    3c2c:	mov	x2, x3
    3c30:	madd	x0, x4, x2, x0
    3c34:	str	x1, [sp, #208]
    3c38:	str	x0, [sp, #216]
    3c3c:	ldp	x0, x1, [sp, #208]
    3c40:	add	x2, sp, #0x200
    3c44:	stp	x0, x1, [x2, #16]
    3c48:	ldr	x0, [sp, #600]
    3c4c:	str	x0, [sp, #224]
    3c50:	str	xzr, [sp, #232]
    3c54:	ldr	x0, [sp, #576]
    3c58:	str	x0, [sp, #240]
    3c5c:	str	xzr, [sp, #248]
    3c60:	ldp	x4, x5, [sp, #224]
    3c64:	mov	x0, x4
    3c68:	ldp	x2, x3, [sp, #240]
    3c6c:	mov	x1, x2
    3c70:	mul	x1, x0, x1
    3c74:	mov	x0, x4
    3c78:	mov	x6, x2
    3c7c:	umulh	x0, x0, x6
    3c80:	mov	x6, x5
    3c84:	mov	x7, x2
    3c88:	madd	x0, x6, x7, x0
    3c8c:	mov	x2, x3
    3c90:	madd	x0, x4, x2, x0
    3c94:	str	x1, [sp, #256]
    3c98:	str	x0, [sp, #264]
    3c9c:	ldp	x0, x1, [sp, #256]
    3ca0:	add	x2, sp, #0x200
    3ca4:	stp	x0, x1, [x2]
    3ca8:	ldr	x0, [sp, #600]
    3cac:	cmp	x0, #0x0
    3cb0:	b.ge	3cc4 <__mulvti3@@GCC_3.4.4+0x304>  // b.tcont
    3cb4:	ldr	x1, [sp, #520]
    3cb8:	ldr	x0, [sp, #576]
    3cbc:	sub	x0, x1, x0
    3cc0:	str	x0, [sp, #520]
    3cc4:	ldr	x0, [sp, #576]
    3cc8:	cmp	x0, #0x0
    3ccc:	b.ge	3cfc <__mulvti3@@GCC_3.4.4+0x33c>  // b.tcont
    3cd0:	add	x0, sp, #0x200
    3cd4:	ldp	x2, x3, [x0]
    3cd8:	add	x0, sp, #0x200
    3cdc:	ldp	x0, x1, [x0, #80]
    3ce0:	subs	x4, x2, x0
    3ce4:	sbc	x0, x3, x1
    3ce8:	str	x4, [sp, #272]
    3cec:	str	x0, [sp, #280]
    3cf0:	ldp	x0, x1, [sp, #272]
    3cf4:	add	x2, sp, #0x200
    3cf8:	stp	x0, x1, [x2]
    3cfc:	add	x0, sp, #0x200
    3d00:	ldp	x0, x1, [x0]
    3d04:	ldr	x2, [sp, #536]
    3d08:	str	x2, [sp, #288]
    3d0c:	str	xzr, [sp, #296]
    3d10:	ldp	x4, x5, [sp, #288]
    3d14:	mov	x2, x4
    3d18:	adds	x2, x0, x2
    3d1c:	mov	x3, x5
    3d20:	adc	x0, x1, x3
    3d24:	str	x2, [sp, #304]
    3d28:	str	x0, [sp, #312]
    3d2c:	ldp	x0, x1, [sp, #304]
    3d30:	add	x2, sp, #0x200
    3d34:	stp	x0, x1, [x2]
    3d38:	ldr	x1, [sp, #520]
    3d3c:	ldr	x0, [sp, #512]
    3d40:	asr	x0, x0, #63
    3d44:	cmp	x1, x0
    3d48:	cset	w0, eq  // eq = none
    3d4c:	and	w0, w0, #0xff
    3d50:	and	x0, x0, #0xff
    3d54:	cmp	x0, #0x0
    3d58:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3d5c:	ldr	x0, [sp, #512]
    3d60:	str	x0, [sp, #536]
    3d64:	add	x0, sp, #0x200
    3d68:	ldp	x4, x5, [x0, #16]
    3d6c:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3d70:	ldr	x0, [sp, #600]
    3d74:	cmp	x0, #0x0
    3d78:	b.lt	3eb8 <__mulvti3@@GCC_3.4.4+0x4f8>  // b.tstop
    3d7c:	ldr	x0, [sp, #584]
    3d80:	cmp	x0, #0x0
    3d84:	b.lt	3e28 <__mulvti3@@GCC_3.4.4+0x468>  // b.tstop
    3d88:	ldr	x0, [sp, #600]
    3d8c:	cmp	x0, #0x0
    3d90:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3d94:	ldr	x0, [sp, #584]
    3d98:	cmp	x0, #0x0
    3d9c:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3da0:	ldr	x0, [sp, #592]
    3da4:	str	x0, [sp, #320]
    3da8:	str	xzr, [sp, #328]
    3dac:	ldr	x0, [sp, #576]
    3db0:	str	x0, [sp, #336]
    3db4:	str	xzr, [sp, #344]
    3db8:	ldp	x4, x5, [sp, #320]
    3dbc:	mov	x0, x4
    3dc0:	ldp	x2, x3, [sp, #336]
    3dc4:	mov	x1, x2
    3dc8:	mul	x1, x0, x1
    3dcc:	mov	x0, x4
    3dd0:	mov	x6, x2
    3dd4:	umulh	x0, x0, x6
    3dd8:	mov	x6, x5
    3ddc:	mov	x7, x2
    3de0:	madd	x0, x6, x7, x0
    3de4:	mov	x2, x3
    3de8:	madd	x0, x4, x2, x0
    3dec:	str	x1, [sp, #352]
    3df0:	str	x0, [sp, #360]
    3df4:	ldp	x0, x1, [sp, #352]
    3df8:	add	x2, sp, #0x200
    3dfc:	stp	x0, x1, [x2, #96]
    3e00:	ldr	x0, [sp, #616]
    3e04:	mvn	x0, x0
    3e08:	lsr	x0, x0, #63
    3e0c:	and	w0, w0, #0xff
    3e10:	and	x0, x0, #0xff
    3e14:	cmp	x0, #0x0
    3e18:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3e1c:	add	x0, sp, #0x200
    3e20:	ldp	x4, x5, [x0, #96]
    3e24:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3e28:	ldr	x0, [sp, #600]
    3e2c:	cmp	x0, #0x0
    3e30:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3e34:	ldr	x0, [sp, #584]
    3e38:	cmn	x0, #0x1
    3e3c:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3e40:	ldr	x0, [sp, #592]
    3e44:	str	x0, [sp, #368]
    3e48:	str	xzr, [sp, #376]
    3e4c:	ldr	x0, [sp, #576]
    3e50:	mov	x26, x0
    3e54:	mov	x27, #0x0                   	// #0
    3e58:	ldp	x2, x3, [sp, #368]
    3e5c:	mov	x0, x2
    3e60:	mul	x1, x0, x26
    3e64:	mov	x0, x2
    3e68:	umulh	x0, x0, x26
    3e6c:	mov	x4, x3
    3e70:	madd	x0, x4, x26, x0
    3e74:	madd	x0, x2, x27, x0
    3e78:	str	x1, [sp, #384]
    3e7c:	str	x0, [sp, #392]
    3e80:	ldp	x0, x1, [sp, #384]
    3e84:	stp	x0, x1, [sp, #496]
    3e88:	ldr	x1, [sp, #504]
    3e8c:	ldr	x0, [sp, #592]
    3e90:	sub	x0, x1, x0
    3e94:	str	x0, [sp, #504]
    3e98:	ldr	x0, [sp, #504]
    3e9c:	lsr	x0, x0, #63
    3ea0:	and	w0, w0, #0xff
    3ea4:	and	x0, x0, #0xff
    3ea8:	cmp	x0, #0x0
    3eac:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3eb0:	ldp	x4, x5, [sp, #496]
    3eb4:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3eb8:	ldr	x0, [sp, #584]
    3ebc:	cmp	x0, #0x0
    3ec0:	b.lt	3f44 <__mulvti3@@GCC_3.4.4+0x584>  // b.tstop
    3ec4:	ldr	x0, [sp, #600]
    3ec8:	cmn	x0, #0x1
    3ecc:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3ed0:	ldr	x0, [sp, #584]
    3ed4:	cmp	x0, #0x0
    3ed8:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3edc:	ldr	x0, [sp, #592]
    3ee0:	mov	x24, x0
    3ee4:	mov	x25, #0x0                   	// #0
    3ee8:	ldr	x0, [sp, #576]
    3eec:	mov	x22, x0
    3ef0:	mov	x23, #0x0                   	// #0
    3ef4:	mul	x1, x24, x22
    3ef8:	umulh	x0, x24, x22
    3efc:	madd	x0, x25, x22, x0
    3f00:	madd	x0, x24, x23, x0
    3f04:	str	x1, [sp, #400]
    3f08:	str	x0, [sp, #408]
    3f0c:	ldp	x0, x1, [sp, #400]
    3f10:	stp	x0, x1, [sp, #480]
    3f14:	ldr	x1, [sp, #488]
    3f18:	ldr	x0, [sp, #576]
    3f1c:	sub	x0, x1, x0
    3f20:	str	x0, [sp, #488]
    3f24:	ldr	x0, [sp, #488]
    3f28:	lsr	x0, x0, #63
    3f2c:	and	w0, w0, #0xff
    3f30:	and	x0, x0, #0xff
    3f34:	cmp	x0, #0x0
    3f38:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3f3c:	ldp	x4, x5, [sp, #480]
    3f40:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3f44:	ldr	x1, [sp, #600]
    3f48:	ldr	x0, [sp, #584]
    3f4c:	and	x0, x1, x0
    3f50:	cmn	x0, #0x1
    3f54:	b.ne	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.any
    3f58:	ldr	x1, [sp, #592]
    3f5c:	ldr	x0, [sp, #576]
    3f60:	orr	x0, x1, x0
    3f64:	cmp	x0, #0x0
    3f68:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3f6c:	ldr	x0, [sp, #592]
    3f70:	mov	x20, x0
    3f74:	mov	x21, #0x0                   	// #0
    3f78:	ldr	x0, [sp, #576]
    3f7c:	mov	x18, x0
    3f80:	mov	x19, #0x0                   	// #0
    3f84:	mul	x1, x20, x18
    3f88:	umulh	x0, x20, x18
    3f8c:	madd	x0, x21, x18, x0
    3f90:	madd	x0, x20, x19, x0
    3f94:	str	x1, [sp, #416]
    3f98:	str	x0, [sp, #424]
    3f9c:	ldp	x0, x1, [sp, #416]
    3fa0:	stp	x0, x1, [sp, #464]
    3fa4:	ldr	x1, [sp, #472]
    3fa8:	ldr	x0, [sp, #592]
    3fac:	sub	x0, x1, x0
    3fb0:	str	x0, [sp, #472]
    3fb4:	ldr	x1, [sp, #472]
    3fb8:	ldr	x0, [sp, #576]
    3fbc:	sub	x0, x1, x0
    3fc0:	str	x0, [sp, #472]
    3fc4:	ldr	x0, [sp, #472]
    3fc8:	mvn	x0, x0
    3fcc:	lsr	x0, x0, #63
    3fd0:	and	w0, w0, #0xff
    3fd4:	and	x0, x0, #0xff
    3fd8:	cmp	x0, #0x0
    3fdc:	b.eq	3fe8 <__mulvti3@@GCC_3.4.4+0x628>  // b.none
    3fe0:	ldp	x4, x5, [sp, #464]
    3fe4:	b	3fec <__mulvti3@@GCC_3.4.4+0x62c>
    3fe8:	bl	2cb0 <abort@plt>
    3fec:	mov	x0, x4
    3ff0:	mov	x1, x5
    3ff4:	ldp	x19, x20, [sp, #16]
    3ff8:	ldp	x21, x22, [sp, #32]
    3ffc:	ldp	x23, x24, [sp, #48]
    4000:	ldp	x25, x26, [sp, #64]
    4004:	ldr	x27, [sp, #80]
    4008:	ldp	x29, x30, [sp]
    400c:	add	sp, sp, #0x270
    4010:	ret

0000000000004014 <__negvdi2@@GCC_3.0>:
    4014:	stp	x29, x30, [sp, #-48]!
    4018:	mov	x29, sp
    401c:	str	x0, [sp, #24]
    4020:	ldr	x0, [sp, #24]
    4024:	neg	x0, x0
    4028:	str	x0, [sp, #40]
    402c:	ldr	x0, [sp, #24]
    4030:	cmp	x0, #0x0
    4034:	b.lt	404c <__negvdi2@@GCC_3.0+0x38>  // b.tstop
    4038:	ldr	x0, [sp, #40]
    403c:	cmp	x0, #0x0
    4040:	cset	w0, gt
    4044:	and	w0, w0, #0xff
    4048:	b	4058 <__negvdi2@@GCC_3.0+0x44>
    404c:	ldr	x0, [sp, #40]
    4050:	lsr	x0, x0, #63
    4054:	and	w0, w0, #0xff
    4058:	cmp	w0, #0x0
    405c:	b.eq	4064 <__negvdi2@@GCC_3.0+0x50>  // b.none
    4060:	bl	2cb0 <abort@plt>
    4064:	ldr	x0, [sp, #40]
    4068:	ldp	x29, x30, [sp], #48
    406c:	ret

0000000000004070 <__negvsi2@@GCC_3.0>:
    4070:	stp	x29, x30, [sp, #-48]!
    4074:	mov	x29, sp
    4078:	str	w0, [sp, #28]
    407c:	ldr	w0, [sp, #28]
    4080:	neg	w0, w0
    4084:	str	w0, [sp, #44]
    4088:	ldr	w0, [sp, #28]
    408c:	cmp	w0, #0x0
    4090:	b.lt	40a8 <__negvsi2@@GCC_3.0+0x38>  // b.tstop
    4094:	ldr	w0, [sp, #44]
    4098:	cmp	w0, #0x0
    409c:	cset	w0, gt
    40a0:	and	w0, w0, #0xff
    40a4:	b	40b4 <__negvsi2@@GCC_3.0+0x44>
    40a8:	ldr	w0, [sp, #44]
    40ac:	lsr	w0, w0, #31
    40b0:	and	w0, w0, #0xff
    40b4:	cmp	w0, #0x0
    40b8:	b.eq	40c0 <__negvsi2@@GCC_3.0+0x50>  // b.none
    40bc:	bl	2cb0 <abort@plt>
    40c0:	ldr	w0, [sp, #44]
    40c4:	ldp	x29, x30, [sp], #48
    40c8:	ret

00000000000040cc <__negvti2@@GCC_3.4.4>:
    40cc:	stp	x29, x30, [sp, #-48]!
    40d0:	mov	x29, sp
    40d4:	stp	x0, x1, [sp, #16]
    40d8:	ldp	x0, x1, [sp, #16]
    40dc:	negs	x10, x0
    40e0:	ngc	x0, x1
    40e4:	mov	x8, x10
    40e8:	mov	x9, x0
    40ec:	stp	x8, x9, [sp, #32]
    40f0:	ldr	x0, [sp, #24]
    40f4:	cmp	x0, #0x0
    40f8:	b.lt	4134 <__negvti2@@GCC_3.4.4+0x68>  // b.tstop
    40fc:	ldr	x0, [sp, #40]
    4100:	asr	x2, x0, #63
    4104:	ldr	x0, [sp, #40]
    4108:	asr	x3, x0, #63
    410c:	ldp	x0, x1, [sp, #32]
    4110:	subs	x8, x2, x0
    4114:	sbc	x0, x3, x1
    4118:	mov	x6, x8
    411c:	mov	x7, x0
    4120:	lsr	x4, x7, #63
    4124:	mov	x5, #0x0                   	// #0
    4128:	mov	w0, w4
    412c:	and	w0, w0, #0xff
    4130:	b	4140 <__negvti2@@GCC_3.4.4+0x74>
    4134:	ldr	x0, [sp, #40]
    4138:	lsr	x0, x0, #63
    413c:	and	w0, w0, #0xff
    4140:	cmp	w0, #0x0
    4144:	b.eq	414c <__negvti2@@GCC_3.4.4+0x80>  // b.none
    4148:	bl	2cb0 <abort@plt>
    414c:	ldp	x0, x1, [sp, #32]
    4150:	ldp	x29, x30, [sp], #48
    4154:	ret

0000000000004158 <__ffsdi2@@GCC_3.0>:
    4158:	sub	sp, sp, #0x20
    415c:	str	x0, [sp, #8]
    4160:	ldr	x0, [sp, #8]
    4164:	cmp	x0, #0x0
    4168:	b.ne	4174 <__ffsdi2@@GCC_3.0+0x1c>  // b.any
    416c:	mov	w0, #0x0                   	// #0
    4170:	b	4190 <__ffsdi2@@GCC_3.0+0x38>
    4174:	ldr	x0, [sp, #8]
    4178:	rbit	x0, x0
    417c:	clz	x0, x0
    4180:	sxtw	x0, w0
    4184:	str	x0, [sp, #24]
    4188:	ldr	x0, [sp, #24]
    418c:	add	w0, w0, #0x1
    4190:	add	sp, sp, #0x20
    4194:	ret

0000000000004198 <__ffsti2@@GCC_3.0>:
    4198:	sub	sp, sp, #0x40
    419c:	stp	x0, x1, [sp]
    41a0:	ldp	x0, x1, [sp]
    41a4:	stp	x0, x1, [sp, #16]
    41a8:	ldr	x0, [sp, #16]
    41ac:	cmp	x0, #0x0
    41b0:	b.eq	41c4 <__ffsti2@@GCC_3.0+0x2c>  // b.none
    41b4:	ldr	x0, [sp, #16]
    41b8:	str	x0, [sp, #56]
    41bc:	str	xzr, [sp, #48]
    41c0:	b	41ec <__ffsti2@@GCC_3.0+0x54>
    41c4:	ldr	x0, [sp, #24]
    41c8:	cmp	x0, #0x0
    41cc:	b.eq	41e4 <__ffsti2@@GCC_3.0+0x4c>  // b.none
    41d0:	ldr	x0, [sp, #24]
    41d4:	str	x0, [sp, #56]
    41d8:	mov	x0, #0x40                  	// #64
    41dc:	str	x0, [sp, #48]
    41e0:	b	41ec <__ffsti2@@GCC_3.0+0x54>
    41e4:	mov	w0, #0x0                   	// #0
    41e8:	b	4214 <__ffsti2@@GCC_3.0+0x7c>
    41ec:	ldr	x0, [sp, #56]
    41f0:	rbit	x0, x0
    41f4:	clz	x0, x0
    41f8:	sxtw	x0, w0
    41fc:	str	x0, [sp, #40]
    4200:	ldr	x0, [sp, #40]
    4204:	mov	w1, w0
    4208:	ldr	x0, [sp, #48]
    420c:	add	w0, w1, w0
    4210:	add	w0, w0, #0x1
    4214:	add	sp, sp, #0x40
    4218:	ret

000000000000421c <__clzdi2@@GCC_3.4>:
    421c:	sub	sp, sp, #0x20
    4220:	str	x0, [sp, #8]
    4224:	ldr	x0, [sp, #8]
    4228:	clz	x0, x0
    422c:	sxtw	x0, w0
    4230:	str	x0, [sp, #24]
    4234:	ldr	x0, [sp, #24]
    4238:	add	sp, sp, #0x20
    423c:	ret

0000000000004240 <__clzti2@@GCC_3.4>:
    4240:	sub	sp, sp, #0x40
    4244:	stp	x0, x1, [sp]
    4248:	ldp	x0, x1, [sp]
    424c:	stp	x0, x1, [sp, #16]
    4250:	ldr	x0, [sp, #24]
    4254:	cmp	x0, #0x0
    4258:	b.eq	426c <__clzti2@@GCC_3.4+0x2c>  // b.none
    425c:	ldr	x0, [sp, #24]
    4260:	str	x0, [sp, #56]
    4264:	str	xzr, [sp, #48]
    4268:	b	427c <__clzti2@@GCC_3.4+0x3c>
    426c:	ldr	x0, [sp, #16]
    4270:	str	x0, [sp, #56]
    4274:	mov	x0, #0x40                  	// #64
    4278:	str	x0, [sp, #48]
    427c:	ldr	x0, [sp, #56]
    4280:	clz	x0, x0
    4284:	sxtw	x0, w0
    4288:	str	x0, [sp, #40]
    428c:	ldr	x0, [sp, #40]
    4290:	mov	w1, w0
    4294:	ldr	x0, [sp, #48]
    4298:	add	w0, w1, w0
    429c:	add	sp, sp, #0x40
    42a0:	ret

00000000000042a4 <__ctzdi2@@GCC_3.4>:
    42a4:	sub	sp, sp, #0x20
    42a8:	str	x0, [sp, #8]
    42ac:	ldr	x0, [sp, #8]
    42b0:	rbit	x0, x0
    42b4:	clz	x0, x0
    42b8:	sxtw	x0, w0
    42bc:	str	x0, [sp, #24]
    42c0:	ldr	x0, [sp, #24]
    42c4:	add	sp, sp, #0x20
    42c8:	ret

00000000000042cc <__ctzti2@@GCC_3.4>:
    42cc:	sub	sp, sp, #0x40
    42d0:	stp	x0, x1, [sp]
    42d4:	ldp	x0, x1, [sp]
    42d8:	stp	x0, x1, [sp, #16]
    42dc:	ldr	x0, [sp, #16]
    42e0:	cmp	x0, #0x0
    42e4:	b.eq	42f8 <__ctzti2@@GCC_3.4+0x2c>  // b.none
    42e8:	ldr	x0, [sp, #16]
    42ec:	str	x0, [sp, #56]
    42f0:	str	xzr, [sp, #48]
    42f4:	b	4308 <__ctzti2@@GCC_3.4+0x3c>
    42f8:	ldr	x0, [sp, #24]
    42fc:	str	x0, [sp, #56]
    4300:	mov	x0, #0x40                  	// #64
    4304:	str	x0, [sp, #48]
    4308:	ldr	x0, [sp, #56]
    430c:	rbit	x0, x0
    4310:	clz	x0, x0
    4314:	sxtw	x0, w0
    4318:	str	x0, [sp, #40]
    431c:	ldr	x0, [sp, #40]
    4320:	mov	w1, w0
    4324:	ldr	x0, [sp, #48]
    4328:	add	w0, w1, w0
    432c:	add	sp, sp, #0x40
    4330:	ret

0000000000004334 <__popcountdi2@@GCC_3.4>:
    4334:	sub	sp, sp, #0x10
    4338:	str	x0, [sp, #8]
    433c:	ldr	x0, [sp, #8]
    4340:	lsr	x0, x0, #1
    4344:	and	x0, x0, #0x5555555555555555
    4348:	ldr	x1, [sp, #8]
    434c:	sub	x0, x1, x0
    4350:	str	x0, [sp, #8]
    4354:	ldr	x0, [sp, #8]
    4358:	and	x1, x0, #0x3333333333333333
    435c:	ldr	x0, [sp, #8]
    4360:	lsr	x0, x0, #2
    4364:	and	x0, x0, #0x3333333333333333
    4368:	add	x0, x1, x0
    436c:	str	x0, [sp, #8]
    4370:	ldr	x0, [sp, #8]
    4374:	lsr	x1, x0, #4
    4378:	ldr	x0, [sp, #8]
    437c:	add	x0, x1, x0
    4380:	and	x0, x0, #0xf0f0f0f0f0f0f0f
    4384:	str	x0, [sp, #8]
    4388:	ldr	x1, [sp, #8]
    438c:	mov	x0, #0x101010101010101     	// #72340172838076673
    4390:	mul	x0, x1, x0
    4394:	lsr	x0, x0, #56
    4398:	add	sp, sp, #0x10
    439c:	ret

00000000000043a0 <__popcountti2@@GCC_3.4>:
    43a0:	sub	sp, sp, #0x30
    43a4:	stp	x0, x1, [sp]
    43a8:	ldp	x0, x1, [sp]
    43ac:	stp	x0, x1, [sp, #16]
    43b0:	ldr	x0, [sp, #16]
    43b4:	str	x0, [sp, #40]
    43b8:	ldr	x0, [sp, #24]
    43bc:	str	x0, [sp, #32]
    43c0:	ldr	x0, [sp, #40]
    43c4:	lsr	x0, x0, #1
    43c8:	and	x0, x0, #0x5555555555555555
    43cc:	ldr	x1, [sp, #40]
    43d0:	sub	x0, x1, x0
    43d4:	str	x0, [sp, #40]
    43d8:	ldr	x0, [sp, #32]
    43dc:	lsr	x0, x0, #1
    43e0:	and	x0, x0, #0x5555555555555555
    43e4:	ldr	x1, [sp, #32]
    43e8:	sub	x0, x1, x0
    43ec:	str	x0, [sp, #32]
    43f0:	ldr	x0, [sp, #40]
    43f4:	and	x1, x0, #0x3333333333333333
    43f8:	ldr	x0, [sp, #40]
    43fc:	lsr	x0, x0, #2
    4400:	and	x0, x0, #0x3333333333333333
    4404:	add	x0, x1, x0
    4408:	str	x0, [sp, #40]
    440c:	ldr	x0, [sp, #32]
    4410:	and	x1, x0, #0x3333333333333333
    4414:	ldr	x0, [sp, #32]
    4418:	lsr	x0, x0, #2
    441c:	and	x0, x0, #0x3333333333333333
    4420:	add	x0, x1, x0
    4424:	str	x0, [sp, #32]
    4428:	ldr	x0, [sp, #40]
    442c:	lsr	x1, x0, #4
    4430:	ldr	x0, [sp, #40]
    4434:	add	x0, x1, x0
    4438:	and	x0, x0, #0xf0f0f0f0f0f0f0f
    443c:	str	x0, [sp, #40]
    4440:	ldr	x0, [sp, #32]
    4444:	lsr	x1, x0, #4
    4448:	ldr	x0, [sp, #32]
    444c:	add	x0, x1, x0
    4450:	and	x0, x0, #0xf0f0f0f0f0f0f0f
    4454:	str	x0, [sp, #32]
    4458:	ldr	x1, [sp, #40]
    445c:	ldr	x0, [sp, #32]
    4460:	add	x0, x1, x0
    4464:	str	x0, [sp, #40]
    4468:	ldr	x1, [sp, #40]
    446c:	mov	x0, #0x101010101010101     	// #72340172838076673
    4470:	mul	x0, x1, x0
    4474:	lsr	x0, x0, #56
    4478:	add	sp, sp, #0x30
    447c:	ret

0000000000004480 <__paritydi2@@GCC_3.4>:
    4480:	sub	sp, sp, #0x10
    4484:	str	x0, [sp, #8]
    4488:	ldr	x0, [sp, #8]
    448c:	lsr	x0, x0, #32
    4490:	ldr	x1, [sp, #8]
    4494:	eor	x0, x1, x0
    4498:	str	x0, [sp, #8]
    449c:	ldr	x0, [sp, #8]
    44a0:	lsr	x0, x0, #16
    44a4:	ldr	x1, [sp, #8]
    44a8:	eor	x0, x1, x0
    44ac:	str	x0, [sp, #8]
    44b0:	ldr	x0, [sp, #8]
    44b4:	lsr	x0, x0, #8
    44b8:	ldr	x1, [sp, #8]
    44bc:	eor	x0, x1, x0
    44c0:	str	x0, [sp, #8]
    44c4:	ldr	x0, [sp, #8]
    44c8:	lsr	x0, x0, #4
    44cc:	ldr	x1, [sp, #8]
    44d0:	eor	x0, x1, x0
    44d4:	str	x0, [sp, #8]
    44d8:	ldr	x0, [sp, #8]
    44dc:	and	x0, x0, #0xf
    44e0:	str	x0, [sp, #8]
    44e4:	ldr	x0, [sp, #8]
    44e8:	mov	w1, w0
    44ec:	mov	w0, #0x6996                	// #27030
    44f0:	asr	w0, w0, w1
    44f4:	and	w0, w0, #0x1
    44f8:	add	sp, sp, #0x10
    44fc:	ret

0000000000004500 <__parityti2@@GCC_3.4>:
    4500:	sub	sp, sp, #0x30
    4504:	stp	x0, x1, [sp]
    4508:	ldp	x0, x1, [sp]
    450c:	stp	x0, x1, [sp, #16]
    4510:	ldr	x1, [sp, #16]
    4514:	ldr	x0, [sp, #24]
    4518:	eor	x0, x1, x0
    451c:	str	x0, [sp, #40]
    4520:	ldr	x0, [sp, #40]
    4524:	lsr	x0, x0, #32
    4528:	ldr	x1, [sp, #40]
    452c:	eor	x0, x1, x0
    4530:	str	x0, [sp, #40]
    4534:	ldr	x0, [sp, #40]
    4538:	lsr	x0, x0, #16
    453c:	ldr	x1, [sp, #40]
    4540:	eor	x0, x1, x0
    4544:	str	x0, [sp, #40]
    4548:	ldr	x0, [sp, #40]
    454c:	lsr	x0, x0, #8
    4550:	ldr	x1, [sp, #40]
    4554:	eor	x0, x1, x0
    4558:	str	x0, [sp, #40]
    455c:	ldr	x0, [sp, #40]
    4560:	lsr	x0, x0, #4
    4564:	ldr	x1, [sp, #40]
    4568:	eor	x0, x1, x0
    456c:	str	x0, [sp, #40]
    4570:	ldr	x0, [sp, #40]
    4574:	and	x0, x0, #0xf
    4578:	str	x0, [sp, #40]
    457c:	ldr	x0, [sp, #40]
    4580:	mov	w1, w0
    4584:	mov	w0, #0x6996                	// #27030
    4588:	asr	w0, w0, w1
    458c:	and	w0, w0, #0x1
    4590:	add	sp, sp, #0x30
    4594:	ret

0000000000004598 <__powisf2@@GCC_4.0.0>:
    4598:	sub	sp, sp, #0x20
    459c:	str	s0, [sp, #12]
    45a0:	str	w0, [sp, #8]
    45a4:	ldr	w0, [sp, #8]
    45a8:	cmp	w0, #0x0
    45ac:	cneg	w0, w0, lt  // lt = tstop
    45b0:	str	w0, [sp, #28]
    45b4:	ldr	w0, [sp, #28]
    45b8:	and	w0, w0, #0x1
    45bc:	cmp	w0, #0x0
    45c0:	b.eq	45cc <__powisf2@@GCC_4.0.0+0x34>  // b.none
    45c4:	ldr	s0, [sp, #12]
    45c8:	b	45d0 <__powisf2@@GCC_4.0.0+0x38>
    45cc:	fmov	s0, #1.000000000000000000e+00
    45d0:	str	s0, [sp, #24]
    45d4:	b	4604 <__powisf2@@GCC_4.0.0+0x6c>
    45d8:	ldr	s0, [sp, #12]
    45dc:	fmul	s0, s0, s0
    45e0:	str	s0, [sp, #12]
    45e4:	ldr	w0, [sp, #28]
    45e8:	and	w0, w0, #0x1
    45ec:	cmp	w0, #0x0
    45f0:	b.eq	4604 <__powisf2@@GCC_4.0.0+0x6c>  // b.none
    45f4:	ldr	s1, [sp, #24]
    45f8:	ldr	s0, [sp, #12]
    45fc:	fmul	s0, s1, s0
    4600:	str	s0, [sp, #24]
    4604:	ldr	w0, [sp, #28]
    4608:	lsr	w0, w0, #1
    460c:	str	w0, [sp, #28]
    4610:	ldr	w0, [sp, #28]
    4614:	cmp	w0, #0x0
    4618:	b.ne	45d8 <__powisf2@@GCC_4.0.0+0x40>  // b.any
    461c:	ldr	w0, [sp, #8]
    4620:	cmp	w0, #0x0
    4624:	b.ge	4638 <__powisf2@@GCC_4.0.0+0xa0>  // b.tcont
    4628:	ldr	s0, [sp, #24]
    462c:	fmov	s1, #1.000000000000000000e+00
    4630:	fdiv	s0, s1, s0
    4634:	b	463c <__powisf2@@GCC_4.0.0+0xa4>
    4638:	ldr	s0, [sp, #24]
    463c:	add	sp, sp, #0x20
    4640:	ret

0000000000004644 <__powidf2@@GCC_4.0.0>:
    4644:	sub	sp, sp, #0x20
    4648:	str	d0, [sp, #8]
    464c:	str	w0, [sp, #4]
    4650:	ldr	w0, [sp, #4]
    4654:	cmp	w0, #0x0
    4658:	cneg	w0, w0, lt  // lt = tstop
    465c:	str	w0, [sp, #28]
    4660:	ldr	w0, [sp, #28]
    4664:	and	w0, w0, #0x1
    4668:	cmp	w0, #0x0
    466c:	b.eq	4678 <__powidf2@@GCC_4.0.0+0x34>  // b.none
    4670:	ldr	d0, [sp, #8]
    4674:	b	467c <__powidf2@@GCC_4.0.0+0x38>
    4678:	fmov	d0, #1.000000000000000000e+00
    467c:	str	d0, [sp, #16]
    4680:	b	46b0 <__powidf2@@GCC_4.0.0+0x6c>
    4684:	ldr	d0, [sp, #8]
    4688:	fmul	d0, d0, d0
    468c:	str	d0, [sp, #8]
    4690:	ldr	w0, [sp, #28]
    4694:	and	w0, w0, #0x1
    4698:	cmp	w0, #0x0
    469c:	b.eq	46b0 <__powidf2@@GCC_4.0.0+0x6c>  // b.none
    46a0:	ldr	d1, [sp, #16]
    46a4:	ldr	d0, [sp, #8]
    46a8:	fmul	d0, d1, d0
    46ac:	str	d0, [sp, #16]
    46b0:	ldr	w0, [sp, #28]
    46b4:	lsr	w0, w0, #1
    46b8:	str	w0, [sp, #28]
    46bc:	ldr	w0, [sp, #28]
    46c0:	cmp	w0, #0x0
    46c4:	b.ne	4684 <__powidf2@@GCC_4.0.0+0x40>  // b.any
    46c8:	ldr	w0, [sp, #4]
    46cc:	cmp	w0, #0x0
    46d0:	b.ge	46e4 <__powidf2@@GCC_4.0.0+0xa0>  // b.tcont
    46d4:	ldr	d0, [sp, #16]
    46d8:	fmov	d1, #1.000000000000000000e+00
    46dc:	fdiv	d0, d1, d0
    46e0:	b	46e8 <__powidf2@@GCC_4.0.0+0xa4>
    46e4:	ldr	d0, [sp, #16]
    46e8:	add	sp, sp, #0x20
    46ec:	ret

00000000000046f0 <__powitf2@@GCC_4.0.0>:
    46f0:	stp	x29, x30, [sp, #-80]!
    46f4:	mov	x29, sp
    46f8:	str	q0, [sp, #32]
    46fc:	str	w0, [sp, #28]
    4700:	ldr	w0, [sp, #28]
    4704:	cmp	w0, #0x0
    4708:	cneg	w0, w0, lt  // lt = tstop
    470c:	str	w0, [sp, #76]
    4710:	ldr	w0, [sp, #76]
    4714:	and	w0, w0, #0x1
    4718:	cmp	w0, #0x0
    471c:	b.eq	4728 <__powitf2@@GCC_4.0.0+0x38>  // b.none
    4720:	ldr	q0, [sp, #32]
    4724:	b	4734 <__powitf2@@GCC_4.0.0+0x44>
    4728:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    472c:	add	x0, x0, #0x2f0
    4730:	ldr	q0, [x0]
    4734:	str	q0, [sp, #48]
    4738:	b	476c <__powitf2@@GCC_4.0.0+0x7c>
    473c:	ldr	q1, [sp, #32]
    4740:	ldr	q0, [sp, #32]
    4744:	bl	2b70 <__multf3@plt>
    4748:	str	q0, [sp, #32]
    474c:	ldr	w0, [sp, #76]
    4750:	and	w0, w0, #0x1
    4754:	cmp	w0, #0x0
    4758:	b.eq	476c <__powitf2@@GCC_4.0.0+0x7c>  // b.none
    475c:	ldr	q1, [sp, #32]
    4760:	ldr	q0, [sp, #48]
    4764:	bl	2b70 <__multf3@plt>
    4768:	str	q0, [sp, #48]
    476c:	ldr	w0, [sp, #76]
    4770:	lsr	w0, w0, #1
    4774:	str	w0, [sp, #76]
    4778:	ldr	w0, [sp, #76]
    477c:	cmp	w0, #0x0
    4780:	b.ne	473c <__powitf2@@GCC_4.0.0+0x4c>  // b.any
    4784:	ldr	w0, [sp, #28]
    4788:	cmp	w0, #0x0
    478c:	b.ge	47a8 <__powitf2@@GCC_4.0.0+0xb8>  // b.tcont
    4790:	ldr	q1, [sp, #48]
    4794:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    4798:	add	x0, x0, #0x2f0
    479c:	ldr	q0, [x0]
    47a0:	bl	2cc0 <__divtf3@plt>
    47a4:	b	47ac <__powitf2@@GCC_4.0.0+0xbc>
    47a8:	ldr	q0, [sp, #48]
    47ac:	ldp	x29, x30, [sp], #80
    47b0:	ret
    47b4:	sub	sp, sp, #0x30
    47b8:	str	h0, [sp, #14]
    47bc:	str	h1, [sp, #12]
    47c0:	str	h2, [sp, #10]
    47c4:	str	h3, [sp, #8]
    47c8:	ldr	h0, [sp, #14]
    47cc:	fcvt	s1, h0
    47d0:	ldr	h0, [sp, #10]
    47d4:	fcvt	s0, h0
    47d8:	fmul	s0, s1, s0
    47dc:	fcvt	h0, s0
    47e0:	str	h0, [sp, #36]
    47e4:	ldr	h0, [sp, #12]
    47e8:	fcvt	s1, h0
    47ec:	ldr	h0, [sp, #8]
    47f0:	fcvt	s0, h0
    47f4:	fmul	s0, s1, s0
    47f8:	fcvt	h0, s0
    47fc:	str	h0, [sp, #34]
    4800:	ldr	h0, [sp, #14]
    4804:	fcvt	s1, h0
    4808:	ldr	h0, [sp, #8]
    480c:	fcvt	s0, h0
    4810:	fmul	s0, s1, s0
    4814:	fcvt	h0, s0
    4818:	str	h0, [sp, #32]
    481c:	ldr	h0, [sp, #12]
    4820:	fcvt	s1, h0
    4824:	ldr	h0, [sp, #10]
    4828:	fcvt	s0, h0
    482c:	fmul	s0, s1, s0
    4830:	fcvt	h0, s0
    4834:	str	h0, [sp, #30]
    4838:	ldr	h0, [sp, #36]
    483c:	fcvt	s1, h0
    4840:	ldr	h0, [sp, #34]
    4844:	fcvt	s0, h0
    4848:	fsub	s0, s1, s0
    484c:	fcvt	h0, s0
    4850:	str	h0, [sp, #42]
    4854:	ldr	h0, [sp, #32]
    4858:	fcvt	s1, h0
    485c:	ldr	h0, [sp, #30]
    4860:	fcvt	s0, h0
    4864:	fadd	s0, s1, s0
    4868:	fcvt	h0, s0
    486c:	str	h0, [sp, #40]
    4870:	ldr	h0, [sp, #42]
    4874:	fcvt	s1, h0
    4878:	ldr	h0, [sp, #42]
    487c:	fcvt	s0, h0
    4880:	fcmp	s1, s0
    4884:	b.vc	4e2c <__powitf2@@GCC_4.0.0+0x73c>
    4888:	ldr	h0, [sp, #40]
    488c:	fcvt	s1, h0
    4890:	ldr	h0, [sp, #40]
    4894:	fcvt	s0, h0
    4898:	fcmp	s1, s0
    489c:	b.vc	4e2c <__powitf2@@GCC_4.0.0+0x73c>
    48a0:	strb	wzr, [sp, #39]
    48a4:	ldr	h0, [sp, #14]
    48a8:	fcvt	s0, h0
    48ac:	fabs	s0, s0
    48b0:	fcvt	h0, s0
    48b4:	fcvt	s1, h0
    48b8:	mvni	v0.4h, #0x84, lsl #8
    48bc:	fcvt	s0, h0
    48c0:	fcmp	s1, s0
    48c4:	cset	w0, le
    48c8:	and	w0, w0, #0xff
    48cc:	eor	w0, w0, #0x1
    48d0:	and	w0, w0, #0xff
    48d4:	cmp	w0, #0x0
    48d8:	b.ne	4914 <__powitf2@@GCC_4.0.0+0x224>  // b.any
    48dc:	ldr	h0, [sp, #12]
    48e0:	fcvt	s0, h0
    48e4:	fabs	s0, s0
    48e8:	fcvt	h0, s0
    48ec:	fcvt	s1, h0
    48f0:	mvni	v0.4h, #0x84, lsl #8
    48f4:	fcvt	s0, h0
    48f8:	fcmp	s1, s0
    48fc:	cset	w0, le
    4900:	and	w0, w0, #0xff
    4904:	eor	w0, w0, #0x1
    4908:	and	w0, w0, #0xff
    490c:	cmp	w0, #0x0
    4910:	b.eq	4a34 <__powitf2@@GCC_4.0.0+0x344>  // b.none
    4914:	ldr	h0, [sp, #14]
    4918:	fcvt	s0, h0
    491c:	fabs	s0, s0
    4920:	fcvt	h0, s0
    4924:	fcvt	s1, h0
    4928:	mvni	v0.4h, #0x84, lsl #8
    492c:	fcvt	s0, h0
    4930:	fcmp	s1, s0
    4934:	cset	w0, le
    4938:	and	w0, w0, #0xff
    493c:	eor	w0, w0, #0x1
    4940:	and	w0, w0, #0xff
    4944:	scvtf	d0, w0
    4948:	fcvt	h0, d0
    494c:	ldrh	w0, [sp, #14]
    4950:	and	w0, w0, #0xffff8000
    4954:	umov	w1, v0.h[0]
    4958:	and	w1, w1, #0x7fff
    495c:	orr	w0, w1, w0
    4960:	dup	v0.4h, w0
    4964:	str	h0, [sp, #14]
    4968:	ldr	h0, [sp, #12]
    496c:	fcvt	s0, h0
    4970:	fabs	s0, s0
    4974:	fcvt	h0, s0
    4978:	fcvt	s1, h0
    497c:	mvni	v0.4h, #0x84, lsl #8
    4980:	fcvt	s0, h0
    4984:	fcmp	s1, s0
    4988:	cset	w0, le
    498c:	and	w0, w0, #0xff
    4990:	eor	w0, w0, #0x1
    4994:	and	w0, w0, #0xff
    4998:	scvtf	d0, w0
    499c:	fcvt	h0, d0
    49a0:	ldrh	w0, [sp, #12]
    49a4:	and	w0, w0, #0xffff8000
    49a8:	umov	w1, v0.h[0]
    49ac:	and	w1, w1, #0x7fff
    49b0:	orr	w0, w1, w0
    49b4:	dup	v0.4h, w0
    49b8:	str	h0, [sp, #12]
    49bc:	ldr	h0, [sp, #10]
    49c0:	fcvt	s1, h0
    49c4:	ldr	h0, [sp, #10]
    49c8:	fcvt	s0, h0
    49cc:	fcmp	s1, s0
    49d0:	b.vc	49f4 <__powitf2@@GCC_4.0.0+0x304>
    49d4:	ldrh	w0, [sp, #10]
    49d8:	and	w0, w0, #0xffff8000
    49dc:	strh	wzr, [sp, #10]
    49e0:	and	w0, w0, #0xffff
    49e4:	cmp	w0, #0x0
    49e8:	b.eq	49f4 <__powitf2@@GCC_4.0.0+0x304>  // b.none
    49ec:	movi	v0.4h, #0x80, lsl #8
    49f0:	str	h0, [sp, #10]
    49f4:	ldr	h0, [sp, #8]
    49f8:	fcvt	s1, h0
    49fc:	ldr	h0, [sp, #8]
    4a00:	fcvt	s0, h0
    4a04:	fcmp	s1, s0
    4a08:	b.vc	4a2c <__powitf2@@GCC_4.0.0+0x33c>
    4a0c:	ldrh	w0, [sp, #8]
    4a10:	and	w0, w0, #0xffff8000
    4a14:	strh	wzr, [sp, #8]
    4a18:	and	w0, w0, #0xffff
    4a1c:	cmp	w0, #0x0
    4a20:	b.eq	4a2c <__powitf2@@GCC_4.0.0+0x33c>  // b.none
    4a24:	movi	v0.4h, #0x80, lsl #8
    4a28:	str	h0, [sp, #8]
    4a2c:	mov	w0, #0x1                   	// #1
    4a30:	strb	w0, [sp, #39]
    4a34:	ldr	h0, [sp, #10]
    4a38:	fcvt	s0, h0
    4a3c:	fabs	s0, s0
    4a40:	fcvt	h0, s0
    4a44:	fcvt	s1, h0
    4a48:	mvni	v0.4h, #0x84, lsl #8
    4a4c:	fcvt	s0, h0
    4a50:	fcmp	s1, s0
    4a54:	cset	w0, le
    4a58:	and	w0, w0, #0xff
    4a5c:	eor	w0, w0, #0x1
    4a60:	and	w0, w0, #0xff
    4a64:	cmp	w0, #0x0
    4a68:	b.ne	4aa4 <__powitf2@@GCC_4.0.0+0x3b4>  // b.any
    4a6c:	ldr	h0, [sp, #8]
    4a70:	fcvt	s0, h0
    4a74:	fabs	s0, s0
    4a78:	fcvt	h0, s0
    4a7c:	fcvt	s1, h0
    4a80:	mvni	v0.4h, #0x84, lsl #8
    4a84:	fcvt	s0, h0
    4a88:	fcmp	s1, s0
    4a8c:	cset	w0, le
    4a90:	and	w0, w0, #0xff
    4a94:	eor	w0, w0, #0x1
    4a98:	and	w0, w0, #0xff
    4a9c:	cmp	w0, #0x0
    4aa0:	b.eq	4bc4 <__powitf2@@GCC_4.0.0+0x4d4>  // b.none
    4aa4:	ldr	h0, [sp, #10]
    4aa8:	fcvt	s0, h0
    4aac:	fabs	s0, s0
    4ab0:	fcvt	h0, s0
    4ab4:	fcvt	s1, h0
    4ab8:	mvni	v0.4h, #0x84, lsl #8
    4abc:	fcvt	s0, h0
    4ac0:	fcmp	s1, s0
    4ac4:	cset	w0, le
    4ac8:	and	w0, w0, #0xff
    4acc:	eor	w0, w0, #0x1
    4ad0:	and	w0, w0, #0xff
    4ad4:	scvtf	d0, w0
    4ad8:	fcvt	h0, d0
    4adc:	ldrh	w0, [sp, #10]
    4ae0:	and	w0, w0, #0xffff8000
    4ae4:	umov	w1, v0.h[0]
    4ae8:	and	w1, w1, #0x7fff
    4aec:	orr	w0, w1, w0
    4af0:	dup	v0.4h, w0
    4af4:	str	h0, [sp, #10]
    4af8:	ldr	h0, [sp, #8]
    4afc:	fcvt	s0, h0
    4b00:	fabs	s0, s0
    4b04:	fcvt	h0, s0
    4b08:	fcvt	s1, h0
    4b0c:	mvni	v0.4h, #0x84, lsl #8
    4b10:	fcvt	s0, h0
    4b14:	fcmp	s1, s0
    4b18:	cset	w0, le
    4b1c:	and	w0, w0, #0xff
    4b20:	eor	w0, w0, #0x1
    4b24:	and	w0, w0, #0xff
    4b28:	scvtf	d0, w0
    4b2c:	fcvt	h0, d0
    4b30:	ldrh	w0, [sp, #8]
    4b34:	and	w0, w0, #0xffff8000
    4b38:	umov	w1, v0.h[0]
    4b3c:	and	w1, w1, #0x7fff
    4b40:	orr	w0, w1, w0
    4b44:	dup	v0.4h, w0
    4b48:	str	h0, [sp, #8]
    4b4c:	ldr	h0, [sp, #14]
    4b50:	fcvt	s1, h0
    4b54:	ldr	h0, [sp, #14]
    4b58:	fcvt	s0, h0
    4b5c:	fcmp	s1, s0
    4b60:	b.vc	4b84 <__powitf2@@GCC_4.0.0+0x494>
    4b64:	ldrh	w0, [sp, #14]
    4b68:	and	w0, w0, #0xffff8000
    4b6c:	strh	wzr, [sp, #14]
    4b70:	and	w0, w0, #0xffff
    4b74:	cmp	w0, #0x0
    4b78:	b.eq	4b84 <__powitf2@@GCC_4.0.0+0x494>  // b.none
    4b7c:	movi	v0.4h, #0x80, lsl #8
    4b80:	str	h0, [sp, #14]
    4b84:	ldr	h0, [sp, #12]
    4b88:	fcvt	s1, h0
    4b8c:	ldr	h0, [sp, #12]
    4b90:	fcvt	s0, h0
    4b94:	fcmp	s1, s0
    4b98:	b.vc	4bbc <__powitf2@@GCC_4.0.0+0x4cc>
    4b9c:	ldrh	w0, [sp, #12]
    4ba0:	and	w0, w0, #0xffff8000
    4ba4:	strh	wzr, [sp, #12]
    4ba8:	and	w0, w0, #0xffff
    4bac:	cmp	w0, #0x0
    4bb0:	b.eq	4bbc <__powitf2@@GCC_4.0.0+0x4cc>  // b.none
    4bb4:	movi	v0.4h, #0x80, lsl #8
    4bb8:	str	h0, [sp, #12]
    4bbc:	mov	w0, #0x1                   	// #1
    4bc0:	strb	w0, [sp, #39]
    4bc4:	ldrb	w0, [sp, #39]
    4bc8:	eor	w0, w0, #0x1
    4bcc:	and	w0, w0, #0xff
    4bd0:	cmp	w0, #0x0
    4bd4:	b.eq	4da0 <__powitf2@@GCC_4.0.0+0x6b0>  // b.none
    4bd8:	ldr	h0, [sp, #36]
    4bdc:	fcvt	s0, h0
    4be0:	fabs	s0, s0
    4be4:	fcvt	h0, s0
    4be8:	fcvt	s1, h0
    4bec:	mvni	v0.4h, #0x84, lsl #8
    4bf0:	fcvt	s0, h0
    4bf4:	fcmp	s1, s0
    4bf8:	cset	w0, le
    4bfc:	and	w0, w0, #0xff
    4c00:	eor	w0, w0, #0x1
    4c04:	and	w0, w0, #0xff
    4c08:	cmp	w0, #0x0
    4c0c:	b.ne	4cb8 <__powitf2@@GCC_4.0.0+0x5c8>  // b.any
    4c10:	ldr	h0, [sp, #34]
    4c14:	fcvt	s0, h0
    4c18:	fabs	s0, s0
    4c1c:	fcvt	h0, s0
    4c20:	fcvt	s1, h0
    4c24:	mvni	v0.4h, #0x84, lsl #8
    4c28:	fcvt	s0, h0
    4c2c:	fcmp	s1, s0
    4c30:	cset	w0, le
    4c34:	and	w0, w0, #0xff
    4c38:	eor	w0, w0, #0x1
    4c3c:	and	w0, w0, #0xff
    4c40:	cmp	w0, #0x0
    4c44:	b.ne	4cb8 <__powitf2@@GCC_4.0.0+0x5c8>  // b.any
    4c48:	ldr	h0, [sp, #32]
    4c4c:	fcvt	s0, h0
    4c50:	fabs	s0, s0
    4c54:	fcvt	h0, s0
    4c58:	fcvt	s1, h0
    4c5c:	mvni	v0.4h, #0x84, lsl #8
    4c60:	fcvt	s0, h0
    4c64:	fcmp	s1, s0
    4c68:	cset	w0, le
    4c6c:	and	w0, w0, #0xff
    4c70:	eor	w0, w0, #0x1
    4c74:	and	w0, w0, #0xff
    4c78:	cmp	w0, #0x0
    4c7c:	b.ne	4cb8 <__powitf2@@GCC_4.0.0+0x5c8>  // b.any
    4c80:	ldr	h0, [sp, #30]
    4c84:	fcvt	s0, h0
    4c88:	fabs	s0, s0
    4c8c:	fcvt	h0, s0
    4c90:	fcvt	s1, h0
    4c94:	mvni	v0.4h, #0x84, lsl #8
    4c98:	fcvt	s0, h0
    4c9c:	fcmp	s1, s0
    4ca0:	cset	w0, le
    4ca4:	and	w0, w0, #0xff
    4ca8:	eor	w0, w0, #0x1
    4cac:	and	w0, w0, #0xff
    4cb0:	cmp	w0, #0x0
    4cb4:	b.eq	4da0 <__powitf2@@GCC_4.0.0+0x6b0>  // b.none
    4cb8:	ldr	h0, [sp, #14]
    4cbc:	fcvt	s1, h0
    4cc0:	ldr	h0, [sp, #14]
    4cc4:	fcvt	s0, h0
    4cc8:	fcmp	s1, s0
    4ccc:	b.vc	4cf0 <__powitf2@@GCC_4.0.0+0x600>
    4cd0:	ldrh	w0, [sp, #14]
    4cd4:	and	w0, w0, #0xffff8000
    4cd8:	strh	wzr, [sp, #14]
    4cdc:	and	w0, w0, #0xffff
    4ce0:	cmp	w0, #0x0
    4ce4:	b.eq	4cf0 <__powitf2@@GCC_4.0.0+0x600>  // b.none
    4ce8:	movi	v0.4h, #0x80, lsl #8
    4cec:	str	h0, [sp, #14]
    4cf0:	ldr	h0, [sp, #12]
    4cf4:	fcvt	s1, h0
    4cf8:	ldr	h0, [sp, #12]
    4cfc:	fcvt	s0, h0
    4d00:	fcmp	s1, s0
    4d04:	b.vc	4d28 <__powitf2@@GCC_4.0.0+0x638>
    4d08:	ldrh	w0, [sp, #12]
    4d0c:	and	w0, w0, #0xffff8000
    4d10:	strh	wzr, [sp, #12]
    4d14:	and	w0, w0, #0xffff
    4d18:	cmp	w0, #0x0
    4d1c:	b.eq	4d28 <__powitf2@@GCC_4.0.0+0x638>  // b.none
    4d20:	movi	v0.4h, #0x80, lsl #8
    4d24:	str	h0, [sp, #12]
    4d28:	ldr	h0, [sp, #10]
    4d2c:	fcvt	s1, h0
    4d30:	ldr	h0, [sp, #10]
    4d34:	fcvt	s0, h0
    4d38:	fcmp	s1, s0
    4d3c:	b.vc	4d60 <__powitf2@@GCC_4.0.0+0x670>
    4d40:	ldrh	w0, [sp, #10]
    4d44:	and	w0, w0, #0xffff8000
    4d48:	strh	wzr, [sp, #10]
    4d4c:	and	w0, w0, #0xffff
    4d50:	cmp	w0, #0x0
    4d54:	b.eq	4d60 <__powitf2@@GCC_4.0.0+0x670>  // b.none
    4d58:	movi	v0.4h, #0x80, lsl #8
    4d5c:	str	h0, [sp, #10]
    4d60:	ldr	h0, [sp, #8]
    4d64:	fcvt	s1, h0
    4d68:	ldr	h0, [sp, #8]
    4d6c:	fcvt	s0, h0
    4d70:	fcmp	s1, s0
    4d74:	b.vc	4d98 <__powitf2@@GCC_4.0.0+0x6a8>
    4d78:	ldrh	w0, [sp, #8]
    4d7c:	and	w0, w0, #0xffff8000
    4d80:	strh	wzr, [sp, #8]
    4d84:	and	w0, w0, #0xffff
    4d88:	cmp	w0, #0x0
    4d8c:	b.eq	4d98 <__powitf2@@GCC_4.0.0+0x6a8>  // b.none
    4d90:	movi	v0.4h, #0x80, lsl #8
    4d94:	str	h0, [sp, #8]
    4d98:	mov	w0, #0x1                   	// #1
    4d9c:	strb	w0, [sp, #39]
    4da0:	ldrb	w0, [sp, #39]
    4da4:	cmp	w0, #0x0
    4da8:	b.eq	4e2c <__powitf2@@GCC_4.0.0+0x73c>  // b.none
    4dac:	ldr	h0, [sp, #14]
    4db0:	fcvt	s1, h0
    4db4:	ldr	h0, [sp, #10]
    4db8:	fcvt	s0, h0
    4dbc:	fmul	s1, s1, s0
    4dc0:	ldr	h0, [sp, #12]
    4dc4:	fcvt	s2, h0
    4dc8:	ldr	h0, [sp, #8]
    4dcc:	fcvt	s0, h0
    4dd0:	fmul	s0, s2, s0
    4dd4:	fsub	s0, s1, s0
    4dd8:	mov	w0, #0x7f800000            	// #2139095040
    4ddc:	fmov	s1, w0
    4de0:	fmul	s0, s0, s1
    4de4:	fcvt	h0, s0
    4de8:	str	h0, [sp, #42]
    4dec:	ldr	h0, [sp, #14]
    4df0:	fcvt	s1, h0
    4df4:	ldr	h0, [sp, #8]
    4df8:	fcvt	s0, h0
    4dfc:	fmul	s1, s1, s0
    4e00:	ldr	h0, [sp, #12]
    4e04:	fcvt	s2, h0
    4e08:	ldr	h0, [sp, #10]
    4e0c:	fcvt	s0, h0
    4e10:	fmul	s0, s2, s0
    4e14:	fadd	s0, s1, s0
    4e18:	mov	w0, #0x7f800000            	// #2139095040
    4e1c:	fmov	s1, w0
    4e20:	fmul	s0, s0, s1
    4e24:	fcvt	h0, s0
    4e28:	str	h0, [sp, #40]
    4e2c:	ldr	h0, [sp, #46]
    4e30:	ldr	h1, [sp, #42]
    4e34:	str	h1, [sp, #26]
    4e38:	str	h0, [sp, #28]
    4e3c:	ldr	h0, [sp, #42]
    4e40:	str	h0, [sp, #44]
    4e44:	ldr	h0, [sp, #40]
    4e48:	ldr	h1, [sp, #44]
    4e4c:	str	h1, [sp, #26]
    4e50:	str	h0, [sp, #28]
    4e54:	ldr	h1, [sp, #44]
    4e58:	ldr	h0, [sp, #40]
    4e5c:	mov	v2.h[0], v1.h[0]
    4e60:	mov	v1.h[0], v0.h[0]
    4e64:	mov	v0.h[0], v2.h[0]
    4e68:	add	sp, sp, #0x30
    4e6c:	ret

0000000000004e70 <__mulsc3@@GCC_4.0.0>:
    4e70:	sub	sp, sp, #0x40
    4e74:	str	s0, [sp, #12]
    4e78:	str	s1, [sp, #8]
    4e7c:	str	s2, [sp, #4]
    4e80:	str	s3, [sp]
    4e84:	ldr	s1, [sp, #12]
    4e88:	ldr	s0, [sp, #4]
    4e8c:	fmul	s0, s1, s0
    4e90:	str	s0, [sp, #40]
    4e94:	ldr	s1, [sp, #8]
    4e98:	ldr	s0, [sp]
    4e9c:	fmul	s0, s1, s0
    4ea0:	str	s0, [sp, #36]
    4ea4:	ldr	s1, [sp, #12]
    4ea8:	ldr	s0, [sp]
    4eac:	fmul	s0, s1, s0
    4eb0:	str	s0, [sp, #32]
    4eb4:	ldr	s1, [sp, #8]
    4eb8:	ldr	s0, [sp, #4]
    4ebc:	fmul	s0, s1, s0
    4ec0:	str	s0, [sp, #28]
    4ec4:	ldr	s1, [sp, #40]
    4ec8:	ldr	s0, [sp, #36]
    4ecc:	fsub	s0, s1, s0
    4ed0:	str	s0, [sp, #52]
    4ed4:	ldr	s1, [sp, #32]
    4ed8:	ldr	s0, [sp, #28]
    4edc:	fadd	s0, s1, s0
    4ee0:	str	s0, [sp, #48]
    4ee4:	ldr	s1, [sp, #52]
    4ee8:	ldr	s0, [sp, #52]
    4eec:	fcmp	s1, s0
    4ef0:	b.vc	5308 <__mulsc3@@GCC_4.0.0+0x498>
    4ef4:	ldr	s1, [sp, #48]
    4ef8:	ldr	s0, [sp, #48]
    4efc:	fcmp	s1, s0
    4f00:	b.vc	5308 <__mulsc3@@GCC_4.0.0+0x498>
    4f04:	strb	wzr, [sp, #47]
    4f08:	ldr	s0, [sp, #12]
    4f0c:	fabs	s0, s0
    4f10:	mov	w0, #0x7f7fffff            	// #2139095039
    4f14:	fmov	s1, w0
    4f18:	fcmp	s0, s1
    4f1c:	cset	w0, le
    4f20:	and	w0, w0, #0xff
    4f24:	eor	w0, w0, #0x1
    4f28:	and	w0, w0, #0xff
    4f2c:	cmp	w0, #0x0
    4f30:	b.ne	4f60 <__mulsc3@@GCC_4.0.0+0xf0>  // b.any
    4f34:	ldr	s0, [sp, #8]
    4f38:	fabs	s0, s0
    4f3c:	mov	w0, #0x7f7fffff            	// #2139095039
    4f40:	fmov	s1, w0
    4f44:	fcmp	s0, s1
    4f48:	cset	w0, le
    4f4c:	and	w0, w0, #0xff
    4f50:	eor	w0, w0, #0x1
    4f54:	and	w0, w0, #0xff
    4f58:	cmp	w0, #0x0
    4f5c:	b.eq	5028 <__mulsc3@@GCC_4.0.0+0x1b8>  // b.none
    4f60:	ldr	s0, [sp, #12]
    4f64:	fabs	s0, s0
    4f68:	mov	w0, #0x7f7fffff            	// #2139095039
    4f6c:	fmov	s1, w0
    4f70:	fcmp	s0, s1
    4f74:	cset	w0, le
    4f78:	and	w0, w0, #0xff
    4f7c:	eor	w0, w0, #0x1
    4f80:	and	w0, w0, #0xff
    4f84:	fmov	s0, w0
    4f88:	scvtf	s0, s0
    4f8c:	ldr	s1, [sp, #12]
    4f90:	movi	v2.2s, #0x80, lsl #24
    4f94:	bit	v0.8b, v1.8b, v2.8b
    4f98:	str	s0, [sp, #12]
    4f9c:	ldr	s0, [sp, #8]
    4fa0:	fabs	s0, s0
    4fa4:	mov	w0, #0x7f7fffff            	// #2139095039
    4fa8:	fmov	s1, w0
    4fac:	fcmp	s0, s1
    4fb0:	cset	w0, le
    4fb4:	and	w0, w0, #0xff
    4fb8:	eor	w0, w0, #0x1
    4fbc:	and	w0, w0, #0xff
    4fc0:	fmov	s0, w0
    4fc4:	scvtf	s0, s0
    4fc8:	ldr	s1, [sp, #8]
    4fcc:	movi	v2.2s, #0x80, lsl #24
    4fd0:	bit	v0.8b, v1.8b, v2.8b
    4fd4:	str	s0, [sp, #8]
    4fd8:	ldr	s1, [sp, #4]
    4fdc:	ldr	s0, [sp, #4]
    4fe0:	fcmp	s1, s0
    4fe4:	b.vc	4ffc <__mulsc3@@GCC_4.0.0+0x18c>
    4fe8:	movi	v2.2s, #0x0
    4fec:	ldr	s0, [sp, #4]
    4ff0:	movi	v1.2s, #0x80, lsl #24
    4ff4:	bif	v0.8b, v2.8b, v1.8b
    4ff8:	str	s0, [sp, #4]
    4ffc:	ldr	s1, [sp]
    5000:	ldr	s0, [sp]
    5004:	fcmp	s1, s0
    5008:	b.vc	5020 <__mulsc3@@GCC_4.0.0+0x1b0>
    500c:	movi	v2.2s, #0x0
    5010:	ldr	s0, [sp]
    5014:	movi	v1.2s, #0x80, lsl #24
    5018:	bif	v0.8b, v2.8b, v1.8b
    501c:	str	s0, [sp]
    5020:	mov	w0, #0x1                   	// #1
    5024:	strb	w0, [sp, #47]
    5028:	ldr	s0, [sp, #4]
    502c:	fabs	s0, s0
    5030:	mov	w0, #0x7f7fffff            	// #2139095039
    5034:	fmov	s1, w0
    5038:	fcmp	s0, s1
    503c:	cset	w0, le
    5040:	and	w0, w0, #0xff
    5044:	eor	w0, w0, #0x1
    5048:	and	w0, w0, #0xff
    504c:	cmp	w0, #0x0
    5050:	b.ne	5080 <__mulsc3@@GCC_4.0.0+0x210>  // b.any
    5054:	ldr	s0, [sp]
    5058:	fabs	s0, s0
    505c:	mov	w0, #0x7f7fffff            	// #2139095039
    5060:	fmov	s1, w0
    5064:	fcmp	s0, s1
    5068:	cset	w0, le
    506c:	and	w0, w0, #0xff
    5070:	eor	w0, w0, #0x1
    5074:	and	w0, w0, #0xff
    5078:	cmp	w0, #0x0
    507c:	b.eq	5148 <__mulsc3@@GCC_4.0.0+0x2d8>  // b.none
    5080:	ldr	s0, [sp, #4]
    5084:	fabs	s0, s0
    5088:	mov	w0, #0x7f7fffff            	// #2139095039
    508c:	fmov	s1, w0
    5090:	fcmp	s0, s1
    5094:	cset	w0, le
    5098:	and	w0, w0, #0xff
    509c:	eor	w0, w0, #0x1
    50a0:	and	w0, w0, #0xff
    50a4:	fmov	s0, w0
    50a8:	scvtf	s0, s0
    50ac:	ldr	s1, [sp, #4]
    50b0:	movi	v2.2s, #0x80, lsl #24
    50b4:	bit	v0.8b, v1.8b, v2.8b
    50b8:	str	s0, [sp, #4]
    50bc:	ldr	s0, [sp]
    50c0:	fabs	s0, s0
    50c4:	mov	w0, #0x7f7fffff            	// #2139095039
    50c8:	fmov	s1, w0
    50cc:	fcmp	s0, s1
    50d0:	cset	w0, le
    50d4:	and	w0, w0, #0xff
    50d8:	eor	w0, w0, #0x1
    50dc:	and	w0, w0, #0xff
    50e0:	fmov	s0, w0
    50e4:	scvtf	s0, s0
    50e8:	ldr	s1, [sp]
    50ec:	movi	v2.2s, #0x80, lsl #24
    50f0:	bit	v0.8b, v1.8b, v2.8b
    50f4:	str	s0, [sp]
    50f8:	ldr	s1, [sp, #12]
    50fc:	ldr	s0, [sp, #12]
    5100:	fcmp	s1, s0
    5104:	b.vc	511c <__mulsc3@@GCC_4.0.0+0x2ac>
    5108:	movi	v2.2s, #0x0
    510c:	ldr	s0, [sp, #12]
    5110:	movi	v1.2s, #0x80, lsl #24
    5114:	bif	v0.8b, v2.8b, v1.8b
    5118:	str	s0, [sp, #12]
    511c:	ldr	s1, [sp, #8]
    5120:	ldr	s0, [sp, #8]
    5124:	fcmp	s1, s0
    5128:	b.vc	5140 <__mulsc3@@GCC_4.0.0+0x2d0>
    512c:	movi	v2.2s, #0x0
    5130:	ldr	s0, [sp, #8]
    5134:	movi	v1.2s, #0x80, lsl #24
    5138:	bif	v0.8b, v2.8b, v1.8b
    513c:	str	s0, [sp, #8]
    5140:	mov	w0, #0x1                   	// #1
    5144:	strb	w0, [sp, #47]
    5148:	ldrb	w0, [sp, #47]
    514c:	eor	w0, w0, #0x1
    5150:	and	w0, w0, #0xff
    5154:	cmp	w0, #0x0
    5158:	b.eq	52a4 <__mulsc3@@GCC_4.0.0+0x434>  // b.none
    515c:	ldr	s0, [sp, #40]
    5160:	fabs	s0, s0
    5164:	mov	w0, #0x7f7fffff            	// #2139095039
    5168:	fmov	s1, w0
    516c:	fcmp	s0, s1
    5170:	cset	w0, le
    5174:	and	w0, w0, #0xff
    5178:	eor	w0, w0, #0x1
    517c:	and	w0, w0, #0xff
    5180:	cmp	w0, #0x0
    5184:	b.ne	520c <__mulsc3@@GCC_4.0.0+0x39c>  // b.any
    5188:	ldr	s0, [sp, #36]
    518c:	fabs	s0, s0
    5190:	mov	w0, #0x7f7fffff            	// #2139095039
    5194:	fmov	s1, w0
    5198:	fcmp	s0, s1
    519c:	cset	w0, le
    51a0:	and	w0, w0, #0xff
    51a4:	eor	w0, w0, #0x1
    51a8:	and	w0, w0, #0xff
    51ac:	cmp	w0, #0x0
    51b0:	b.ne	520c <__mulsc3@@GCC_4.0.0+0x39c>  // b.any
    51b4:	ldr	s0, [sp, #32]
    51b8:	fabs	s0, s0
    51bc:	mov	w0, #0x7f7fffff            	// #2139095039
    51c0:	fmov	s1, w0
    51c4:	fcmp	s0, s1
    51c8:	cset	w0, le
    51cc:	and	w0, w0, #0xff
    51d0:	eor	w0, w0, #0x1
    51d4:	and	w0, w0, #0xff
    51d8:	cmp	w0, #0x0
    51dc:	b.ne	520c <__mulsc3@@GCC_4.0.0+0x39c>  // b.any
    51e0:	ldr	s0, [sp, #28]
    51e4:	fabs	s0, s0
    51e8:	mov	w0, #0x7f7fffff            	// #2139095039
    51ec:	fmov	s1, w0
    51f0:	fcmp	s0, s1
    51f4:	cset	w0, le
    51f8:	and	w0, w0, #0xff
    51fc:	eor	w0, w0, #0x1
    5200:	and	w0, w0, #0xff
    5204:	cmp	w0, #0x0
    5208:	b.eq	52a4 <__mulsc3@@GCC_4.0.0+0x434>  // b.none
    520c:	ldr	s1, [sp, #12]
    5210:	ldr	s0, [sp, #12]
    5214:	fcmp	s1, s0
    5218:	b.vc	5230 <__mulsc3@@GCC_4.0.0+0x3c0>
    521c:	movi	v2.2s, #0x0
    5220:	ldr	s0, [sp, #12]
    5224:	movi	v1.2s, #0x80, lsl #24
    5228:	bif	v0.8b, v2.8b, v1.8b
    522c:	str	s0, [sp, #12]
    5230:	ldr	s1, [sp, #8]
    5234:	ldr	s0, [sp, #8]
    5238:	fcmp	s1, s0
    523c:	b.vc	5254 <__mulsc3@@GCC_4.0.0+0x3e4>
    5240:	movi	v2.2s, #0x0
    5244:	ldr	s0, [sp, #8]
    5248:	movi	v1.2s, #0x80, lsl #24
    524c:	bif	v0.8b, v2.8b, v1.8b
    5250:	str	s0, [sp, #8]
    5254:	ldr	s1, [sp, #4]
    5258:	ldr	s0, [sp, #4]
    525c:	fcmp	s1, s0
    5260:	b.vc	5278 <__mulsc3@@GCC_4.0.0+0x408>
    5264:	movi	v2.2s, #0x0
    5268:	ldr	s0, [sp, #4]
    526c:	movi	v1.2s, #0x80, lsl #24
    5270:	bif	v0.8b, v2.8b, v1.8b
    5274:	str	s0, [sp, #4]
    5278:	ldr	s1, [sp]
    527c:	ldr	s0, [sp]
    5280:	fcmp	s1, s0
    5284:	b.vc	529c <__mulsc3@@GCC_4.0.0+0x42c>
    5288:	movi	v2.2s, #0x0
    528c:	ldr	s0, [sp]
    5290:	movi	v1.2s, #0x80, lsl #24
    5294:	bif	v0.8b, v2.8b, v1.8b
    5298:	str	s0, [sp]
    529c:	mov	w0, #0x1                   	// #1
    52a0:	strb	w0, [sp, #47]
    52a4:	ldrb	w0, [sp, #47]
    52a8:	cmp	w0, #0x0
    52ac:	b.eq	5308 <__mulsc3@@GCC_4.0.0+0x498>  // b.none
    52b0:	ldr	s1, [sp, #12]
    52b4:	ldr	s0, [sp, #4]
    52b8:	fmul	s1, s1, s0
    52bc:	ldr	s2, [sp, #8]
    52c0:	ldr	s0, [sp]
    52c4:	fmul	s0, s2, s0
    52c8:	fsub	s0, s1, s0
    52cc:	mov	w0, #0x7f800000            	// #2139095040
    52d0:	fmov	s1, w0
    52d4:	fmul	s0, s0, s1
    52d8:	str	s0, [sp, #52]
    52dc:	ldr	s1, [sp, #12]
    52e0:	ldr	s0, [sp]
    52e4:	fmul	s1, s1, s0
    52e8:	ldr	s2, [sp, #8]
    52ec:	ldr	s0, [sp, #4]
    52f0:	fmul	s0, s2, s0
    52f4:	fadd	s0, s1, s0
    52f8:	mov	w0, #0x7f800000            	// #2139095040
    52fc:	fmov	s1, w0
    5300:	fmul	s0, s0, s1
    5304:	str	s0, [sp, #48]
    5308:	ldr	s0, [sp, #60]
    530c:	ldr	s1, [sp, #52]
    5310:	str	s1, [sp, #20]
    5314:	str	s0, [sp, #24]
    5318:	ldr	s0, [sp, #52]
    531c:	str	s0, [sp, #56]
    5320:	ldr	s0, [sp, #48]
    5324:	ldr	s1, [sp, #56]
    5328:	str	s1, [sp, #20]
    532c:	str	s0, [sp, #24]
    5330:	ldr	s1, [sp, #56]
    5334:	ldr	s0, [sp, #48]
    5338:	fmov	s2, s1
    533c:	fmov	s1, s0
    5340:	fmov	s0, s2
    5344:	add	sp, sp, #0x40
    5348:	ret

000000000000534c <__muldc3@@GCC_4.0.0>:
    534c:	sub	sp, sp, #0x80
    5350:	str	d0, [sp, #24]
    5354:	str	d1, [sp, #16]
    5358:	str	d2, [sp, #8]
    535c:	str	d3, [sp]
    5360:	ldr	d1, [sp, #24]
    5364:	ldr	d0, [sp, #8]
    5368:	fmul	d0, d1, d0
    536c:	str	d0, [sp, #80]
    5370:	ldr	d1, [sp, #16]
    5374:	ldr	d0, [sp]
    5378:	fmul	d0, d1, d0
    537c:	str	d0, [sp, #72]
    5380:	ldr	d1, [sp, #24]
    5384:	ldr	d0, [sp]
    5388:	fmul	d0, d1, d0
    538c:	str	d0, [sp, #64]
    5390:	ldr	d1, [sp, #16]
    5394:	ldr	d0, [sp, #8]
    5398:	fmul	d0, d1, d0
    539c:	str	d0, [sp, #56]
    53a0:	ldr	d1, [sp, #80]
    53a4:	ldr	d0, [sp, #72]
    53a8:	fsub	d0, d1, d0
    53ac:	str	d0, [sp, #104]
    53b0:	ldr	d1, [sp, #64]
    53b4:	ldr	d0, [sp, #56]
    53b8:	fadd	d0, d1, d0
    53bc:	str	d0, [sp, #96]
    53c0:	ldr	d1, [sp, #104]
    53c4:	ldr	d0, [sp, #104]
    53c8:	fcmp	d1, d0
    53cc:	b.vc	5804 <__muldc3@@GCC_4.0.0+0x4b8>
    53d0:	ldr	d1, [sp, #96]
    53d4:	ldr	d0, [sp, #96]
    53d8:	fcmp	d1, d0
    53dc:	b.vc	5804 <__muldc3@@GCC_4.0.0+0x4b8>
    53e0:	strb	wzr, [sp, #95]
    53e4:	ldr	d0, [sp, #24]
    53e8:	fabs	d0, d0
    53ec:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    53f0:	fmov	d1, x0
    53f4:	fcmp	d0, d1
    53f8:	cset	w0, le
    53fc:	and	w0, w0, #0xff
    5400:	eor	w0, w0, #0x1
    5404:	and	w0, w0, #0xff
    5408:	cmp	w0, #0x0
    540c:	b.ne	543c <__muldc3@@GCC_4.0.0+0xf0>  // b.any
    5410:	ldr	d0, [sp, #16]
    5414:	fabs	d0, d0
    5418:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    541c:	fmov	d1, x0
    5420:	fcmp	d0, d1
    5424:	cset	w0, le
    5428:	and	w0, w0, #0xff
    542c:	eor	w0, w0, #0x1
    5430:	and	w0, w0, #0xff
    5434:	cmp	w0, #0x0
    5438:	b.eq	550c <__muldc3@@GCC_4.0.0+0x1c0>  // b.none
    543c:	ldr	d0, [sp, #24]
    5440:	fabs	d0, d0
    5444:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5448:	fmov	d1, x0
    544c:	fcmp	d0, d1
    5450:	cset	w0, le
    5454:	and	w0, w0, #0xff
    5458:	eor	w0, w0, #0x1
    545c:	and	w0, w0, #0xff
    5460:	scvtf	d0, w0
    5464:	ldr	d1, [sp, #24]
    5468:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    546c:	fmov	d2, x0
    5470:	bit	v0.8b, v1.8b, v2.8b
    5474:	str	d0, [sp, #24]
    5478:	ldr	d0, [sp, #16]
    547c:	fabs	d0, d0
    5480:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5484:	fmov	d1, x0
    5488:	fcmp	d0, d1
    548c:	cset	w0, le
    5490:	and	w0, w0, #0xff
    5494:	eor	w0, w0, #0x1
    5498:	and	w0, w0, #0xff
    549c:	scvtf	d0, w0
    54a0:	ldr	d1, [sp, #16]
    54a4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    54a8:	fmov	d2, x0
    54ac:	bit	v0.8b, v1.8b, v2.8b
    54b0:	str	d0, [sp, #16]
    54b4:	ldr	d1, [sp, #8]
    54b8:	ldr	d0, [sp, #8]
    54bc:	fcmp	d1, d0
    54c0:	b.vc	54dc <__muldc3@@GCC_4.0.0+0x190>
    54c4:	movi	d1, #0x0
    54c8:	ldr	d0, [sp, #8]
    54cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    54d0:	fmov	d2, x0
    54d4:	bif	v0.8b, v1.8b, v2.8b
    54d8:	str	d0, [sp, #8]
    54dc:	ldr	d1, [sp]
    54e0:	ldr	d0, [sp]
    54e4:	fcmp	d1, d0
    54e8:	b.vc	5504 <__muldc3@@GCC_4.0.0+0x1b8>
    54ec:	movi	d1, #0x0
    54f0:	ldr	d0, [sp]
    54f4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    54f8:	fmov	d2, x0
    54fc:	bif	v0.8b, v1.8b, v2.8b
    5500:	str	d0, [sp]
    5504:	mov	w0, #0x1                   	// #1
    5508:	strb	w0, [sp, #95]
    550c:	ldr	d0, [sp, #8]
    5510:	fabs	d0, d0
    5514:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5518:	fmov	d1, x0
    551c:	fcmp	d0, d1
    5520:	cset	w0, le
    5524:	and	w0, w0, #0xff
    5528:	eor	w0, w0, #0x1
    552c:	and	w0, w0, #0xff
    5530:	cmp	w0, #0x0
    5534:	b.ne	5564 <__muldc3@@GCC_4.0.0+0x218>  // b.any
    5538:	ldr	d0, [sp]
    553c:	fabs	d0, d0
    5540:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5544:	fmov	d1, x0
    5548:	fcmp	d0, d1
    554c:	cset	w0, le
    5550:	and	w0, w0, #0xff
    5554:	eor	w0, w0, #0x1
    5558:	and	w0, w0, #0xff
    555c:	cmp	w0, #0x0
    5560:	b.eq	5634 <__muldc3@@GCC_4.0.0+0x2e8>  // b.none
    5564:	ldr	d0, [sp, #8]
    5568:	fabs	d0, d0
    556c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5570:	fmov	d1, x0
    5574:	fcmp	d0, d1
    5578:	cset	w0, le
    557c:	and	w0, w0, #0xff
    5580:	eor	w0, w0, #0x1
    5584:	and	w0, w0, #0xff
    5588:	scvtf	d0, w0
    558c:	ldr	d1, [sp, #8]
    5590:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5594:	fmov	d2, x0
    5598:	bit	v0.8b, v1.8b, v2.8b
    559c:	str	d0, [sp, #8]
    55a0:	ldr	d0, [sp]
    55a4:	fabs	d0, d0
    55a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    55ac:	fmov	d1, x0
    55b0:	fcmp	d0, d1
    55b4:	cset	w0, le
    55b8:	and	w0, w0, #0xff
    55bc:	eor	w0, w0, #0x1
    55c0:	and	w0, w0, #0xff
    55c4:	scvtf	d0, w0
    55c8:	ldr	d1, [sp]
    55cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    55d0:	fmov	d2, x0
    55d4:	bit	v0.8b, v1.8b, v2.8b
    55d8:	str	d0, [sp]
    55dc:	ldr	d1, [sp, #24]
    55e0:	ldr	d0, [sp, #24]
    55e4:	fcmp	d1, d0
    55e8:	b.vc	5604 <__muldc3@@GCC_4.0.0+0x2b8>
    55ec:	movi	d1, #0x0
    55f0:	ldr	d0, [sp, #24]
    55f4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    55f8:	fmov	d2, x0
    55fc:	bif	v0.8b, v1.8b, v2.8b
    5600:	str	d0, [sp, #24]
    5604:	ldr	d1, [sp, #16]
    5608:	ldr	d0, [sp, #16]
    560c:	fcmp	d1, d0
    5610:	b.vc	562c <__muldc3@@GCC_4.0.0+0x2e0>
    5614:	movi	d1, #0x0
    5618:	ldr	d0, [sp, #16]
    561c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5620:	fmov	d2, x0
    5624:	bif	v0.8b, v1.8b, v2.8b
    5628:	str	d0, [sp, #16]
    562c:	mov	w0, #0x1                   	// #1
    5630:	strb	w0, [sp, #95]
    5634:	ldrb	w0, [sp, #95]
    5638:	eor	w0, w0, #0x1
    563c:	and	w0, w0, #0xff
    5640:	cmp	w0, #0x0
    5644:	b.eq	57a0 <__muldc3@@GCC_4.0.0+0x454>  // b.none
    5648:	ldr	d0, [sp, #80]
    564c:	fabs	d0, d0
    5650:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5654:	fmov	d1, x0
    5658:	fcmp	d0, d1
    565c:	cset	w0, le
    5660:	and	w0, w0, #0xff
    5664:	eor	w0, w0, #0x1
    5668:	and	w0, w0, #0xff
    566c:	cmp	w0, #0x0
    5670:	b.ne	56f8 <__muldc3@@GCC_4.0.0+0x3ac>  // b.any
    5674:	ldr	d0, [sp, #72]
    5678:	fabs	d0, d0
    567c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5680:	fmov	d1, x0
    5684:	fcmp	d0, d1
    5688:	cset	w0, le
    568c:	and	w0, w0, #0xff
    5690:	eor	w0, w0, #0x1
    5694:	and	w0, w0, #0xff
    5698:	cmp	w0, #0x0
    569c:	b.ne	56f8 <__muldc3@@GCC_4.0.0+0x3ac>  // b.any
    56a0:	ldr	d0, [sp, #64]
    56a4:	fabs	d0, d0
    56a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    56ac:	fmov	d1, x0
    56b0:	fcmp	d0, d1
    56b4:	cset	w0, le
    56b8:	and	w0, w0, #0xff
    56bc:	eor	w0, w0, #0x1
    56c0:	and	w0, w0, #0xff
    56c4:	cmp	w0, #0x0
    56c8:	b.ne	56f8 <__muldc3@@GCC_4.0.0+0x3ac>  // b.any
    56cc:	ldr	d0, [sp, #56]
    56d0:	fabs	d0, d0
    56d4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    56d8:	fmov	d1, x0
    56dc:	fcmp	d0, d1
    56e0:	cset	w0, le
    56e4:	and	w0, w0, #0xff
    56e8:	eor	w0, w0, #0x1
    56ec:	and	w0, w0, #0xff
    56f0:	cmp	w0, #0x0
    56f4:	b.eq	57a0 <__muldc3@@GCC_4.0.0+0x454>  // b.none
    56f8:	ldr	d1, [sp, #24]
    56fc:	ldr	d0, [sp, #24]
    5700:	fcmp	d1, d0
    5704:	b.vc	5720 <__muldc3@@GCC_4.0.0+0x3d4>
    5708:	movi	d1, #0x0
    570c:	ldr	d0, [sp, #24]
    5710:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5714:	fmov	d2, x0
    5718:	bif	v0.8b, v1.8b, v2.8b
    571c:	str	d0, [sp, #24]
    5720:	ldr	d1, [sp, #16]
    5724:	ldr	d0, [sp, #16]
    5728:	fcmp	d1, d0
    572c:	b.vc	5748 <__muldc3@@GCC_4.0.0+0x3fc>
    5730:	movi	d1, #0x0
    5734:	ldr	d0, [sp, #16]
    5738:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    573c:	fmov	d2, x0
    5740:	bif	v0.8b, v1.8b, v2.8b
    5744:	str	d0, [sp, #16]
    5748:	ldr	d1, [sp, #8]
    574c:	ldr	d0, [sp, #8]
    5750:	fcmp	d1, d0
    5754:	b.vc	5770 <__muldc3@@GCC_4.0.0+0x424>
    5758:	movi	d1, #0x0
    575c:	ldr	d0, [sp, #8]
    5760:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5764:	fmov	d2, x0
    5768:	bif	v0.8b, v1.8b, v2.8b
    576c:	str	d0, [sp, #8]
    5770:	ldr	d1, [sp]
    5774:	ldr	d0, [sp]
    5778:	fcmp	d1, d0
    577c:	b.vc	5798 <__muldc3@@GCC_4.0.0+0x44c>
    5780:	movi	d1, #0x0
    5784:	ldr	d0, [sp]
    5788:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    578c:	fmov	d2, x0
    5790:	bif	v0.8b, v1.8b, v2.8b
    5794:	str	d0, [sp]
    5798:	mov	w0, #0x1                   	// #1
    579c:	strb	w0, [sp, #95]
    57a0:	ldrb	w0, [sp, #95]
    57a4:	cmp	w0, #0x0
    57a8:	b.eq	5804 <__muldc3@@GCC_4.0.0+0x4b8>  // b.none
    57ac:	ldr	d1, [sp, #24]
    57b0:	ldr	d0, [sp, #8]
    57b4:	fmul	d1, d1, d0
    57b8:	ldr	d2, [sp, #16]
    57bc:	ldr	d0, [sp]
    57c0:	fmul	d0, d2, d0
    57c4:	fsub	d0, d1, d0
    57c8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    57cc:	fmov	d1, x0
    57d0:	fmul	d0, d0, d1
    57d4:	str	d0, [sp, #104]
    57d8:	ldr	d1, [sp, #24]
    57dc:	ldr	d0, [sp]
    57e0:	fmul	d1, d1, d0
    57e4:	ldr	d2, [sp, #16]
    57e8:	ldr	d0, [sp, #8]
    57ec:	fmul	d0, d2, d0
    57f0:	fadd	d0, d1, d0
    57f4:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    57f8:	fmov	d1, x0
    57fc:	fmul	d0, d0, d1
    5800:	str	d0, [sp, #96]
    5804:	ldr	d0, [sp, #120]
    5808:	ldr	d1, [sp, #104]
    580c:	str	d1, [sp, #40]
    5810:	str	d0, [sp, #48]
    5814:	ldr	d0, [sp, #104]
    5818:	str	d0, [sp, #112]
    581c:	ldr	d0, [sp, #96]
    5820:	ldr	d1, [sp, #112]
    5824:	str	d1, [sp, #40]
    5828:	str	d0, [sp, #48]
    582c:	ldr	d1, [sp, #112]
    5830:	ldr	d0, [sp, #96]
    5834:	fmov	d2, d1
    5838:	fmov	d1, d0
    583c:	fmov	d0, d2
    5840:	add	sp, sp, #0x80
    5844:	ret

0000000000005848 <__multc3@@GCC_4.0.0>:
    5848:	stp	x29, x30, [sp, #-464]!
    584c:	mov	x29, sp
    5850:	str	x19, [sp, #16]
    5854:	str	q0, [sp, #272]
    5858:	str	q1, [sp, #256]
    585c:	str	q2, [sp, #240]
    5860:	str	q3, [sp, #224]
    5864:	ldr	q1, [sp, #240]
    5868:	ldr	q0, [sp, #272]
    586c:	bl	2b70 <__multf3@plt>
    5870:	str	q0, [sp, #368]
    5874:	ldr	q1, [sp, #224]
    5878:	ldr	q0, [sp, #256]
    587c:	bl	2b70 <__multf3@plt>
    5880:	str	q0, [sp, #352]
    5884:	ldr	q1, [sp, #224]
    5888:	ldr	q0, [sp, #272]
    588c:	bl	2b70 <__multf3@plt>
    5890:	str	q0, [sp, #336]
    5894:	ldr	q1, [sp, #240]
    5898:	ldr	q0, [sp, #256]
    589c:	bl	2b70 <__multf3@plt>
    58a0:	str	q0, [sp, #320]
    58a4:	ldr	q1, [sp, #352]
    58a8:	ldr	q0, [sp, #368]
    58ac:	bl	2df0 <__subtf3@plt>
    58b0:	str	q0, [sp, #416]
    58b4:	ldr	q1, [sp, #320]
    58b8:	ldr	q0, [sp, #336]
    58bc:	bl	2c80 <__addtf3@plt>
    58c0:	str	q0, [sp, #400]
    58c4:	ldr	q1, [sp, #416]
    58c8:	ldr	q0, [sp, #416]
    58cc:	bl	2da0 <__unordtf2@plt>
    58d0:	cmp	w0, #0x0
    58d4:	b.eq	60c0 <__multc3@@GCC_4.0.0+0x878>  // b.none
    58d8:	ldr	q1, [sp, #400]
    58dc:	ldr	q0, [sp, #400]
    58e0:	bl	2da0 <__unordtf2@plt>
    58e4:	cmp	w0, #0x0
    58e8:	b.eq	60c0 <__multc3@@GCC_4.0.0+0x878>  // b.none
    58ec:	strb	wzr, [sp, #399]
    58f0:	ldr	x0, [sp, #272]
    58f4:	str	x0, [sp, #32]
    58f8:	ldr	x0, [sp, #280]
    58fc:	and	x0, x0, #0x7fffffffffffffff
    5900:	str	x0, [sp, #40]
    5904:	mov	w19, #0x1                   	// #1
    5908:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    590c:	add	x0, x0, #0x300
    5910:	ldr	q1, [x0]
    5914:	ldr	q0, [sp, #32]
    5918:	bl	2da0 <__unordtf2@plt>
    591c:	cmp	w0, #0x0
    5920:	b.ne	5944 <__multc3@@GCC_4.0.0+0xfc>  // b.any
    5924:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5928:	add	x0, x0, #0x300
    592c:	ldr	q1, [x0]
    5930:	ldr	q0, [sp, #32]
    5934:	bl	2c20 <__letf2@plt>
    5938:	cmp	w0, #0x0
    593c:	b.le	5944 <__multc3@@GCC_4.0.0+0xfc>
    5940:	mov	w19, #0x0                   	// #0
    5944:	and	w0, w19, #0xff
    5948:	eor	w0, w0, #0x1
    594c:	and	w0, w0, #0xff
    5950:	cmp	w0, #0x0
    5954:	b.ne	59c0 <__multc3@@GCC_4.0.0+0x178>  // b.any
    5958:	ldr	x0, [sp, #256]
    595c:	str	x0, [sp, #48]
    5960:	ldr	x0, [sp, #264]
    5964:	and	x0, x0, #0x7fffffffffffffff
    5968:	str	x0, [sp, #56]
    596c:	mov	w19, #0x1                   	// #1
    5970:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5974:	add	x0, x0, #0x300
    5978:	ldr	q1, [x0]
    597c:	ldr	q0, [sp, #48]
    5980:	bl	2da0 <__unordtf2@plt>
    5984:	cmp	w0, #0x0
    5988:	b.ne	59ac <__multc3@@GCC_4.0.0+0x164>  // b.any
    598c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5990:	add	x0, x0, #0x300
    5994:	ldr	q1, [x0]
    5998:	ldr	q0, [sp, #48]
    599c:	bl	2c20 <__letf2@plt>
    59a0:	cmp	w0, #0x0
    59a4:	b.le	59ac <__multc3@@GCC_4.0.0+0x164>
    59a8:	mov	w19, #0x0                   	// #0
    59ac:	and	w0, w19, #0xff
    59b0:	eor	w0, w0, #0x1
    59b4:	and	w0, w0, #0xff
    59b8:	cmp	w0, #0x0
    59bc:	b.eq	5b48 <__multc3@@GCC_4.0.0+0x300>  // b.none
    59c0:	ldr	x0, [sp, #272]
    59c4:	str	x0, [sp, #64]
    59c8:	ldr	x0, [sp, #280]
    59cc:	and	x0, x0, #0x7fffffffffffffff
    59d0:	str	x0, [sp, #72]
    59d4:	mov	w19, #0x1                   	// #1
    59d8:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    59dc:	add	x0, x0, #0x300
    59e0:	ldr	q1, [x0]
    59e4:	ldr	q0, [sp, #64]
    59e8:	bl	2da0 <__unordtf2@plt>
    59ec:	cmp	w0, #0x0
    59f0:	b.ne	5a14 <__multc3@@GCC_4.0.0+0x1cc>  // b.any
    59f4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    59f8:	add	x0, x0, #0x300
    59fc:	ldr	q1, [x0]
    5a00:	ldr	q0, [sp, #64]
    5a04:	bl	2c20 <__letf2@plt>
    5a08:	cmp	w0, #0x0
    5a0c:	b.le	5a14 <__multc3@@GCC_4.0.0+0x1cc>
    5a10:	mov	w19, #0x0                   	// #0
    5a14:	and	w0, w19, #0xff
    5a18:	eor	w0, w0, #0x1
    5a1c:	and	w0, w0, #0xff
    5a20:	bl	2de0 <__floatsitf@plt>
    5a24:	str	q0, [sp, #32]
    5a28:	ldr	x0, [sp, #32]
    5a2c:	str	x0, [sp, #272]
    5a30:	ldr	x0, [sp, #40]
    5a34:	and	x1, x0, #0x7fffffffffffffff
    5a38:	ldr	x0, [sp, #280]
    5a3c:	and	x0, x0, #0x8000000000000000
    5a40:	orr	x0, x1, x0
    5a44:	str	x0, [sp, #280]
    5a48:	ldr	x0, [sp, #256]
    5a4c:	str	x0, [sp, #80]
    5a50:	ldr	x0, [sp, #264]
    5a54:	and	x0, x0, #0x7fffffffffffffff
    5a58:	str	x0, [sp, #88]
    5a5c:	mov	w19, #0x1                   	// #1
    5a60:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5a64:	add	x0, x0, #0x300
    5a68:	ldr	q1, [x0]
    5a6c:	ldr	q0, [sp, #80]
    5a70:	bl	2da0 <__unordtf2@plt>
    5a74:	cmp	w0, #0x0
    5a78:	b.ne	5a9c <__multc3@@GCC_4.0.0+0x254>  // b.any
    5a7c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5a80:	add	x0, x0, #0x300
    5a84:	ldr	q1, [x0]
    5a88:	ldr	q0, [sp, #80]
    5a8c:	bl	2c20 <__letf2@plt>
    5a90:	cmp	w0, #0x0
    5a94:	b.le	5a9c <__multc3@@GCC_4.0.0+0x254>
    5a98:	mov	w19, #0x0                   	// #0
    5a9c:	and	w0, w19, #0xff
    5aa0:	eor	w0, w0, #0x1
    5aa4:	and	w0, w0, #0xff
    5aa8:	bl	2de0 <__floatsitf@plt>
    5aac:	str	q0, [sp, #32]
    5ab0:	ldr	x0, [sp, #32]
    5ab4:	str	x0, [sp, #256]
    5ab8:	ldr	x0, [sp, #40]
    5abc:	and	x1, x0, #0x7fffffffffffffff
    5ac0:	ldr	x0, [sp, #264]
    5ac4:	and	x0, x0, #0x8000000000000000
    5ac8:	orr	x0, x1, x0
    5acc:	str	x0, [sp, #264]
    5ad0:	ldr	q1, [sp, #240]
    5ad4:	ldr	q0, [sp, #240]
    5ad8:	bl	2da0 <__unordtf2@plt>
    5adc:	cmp	w0, #0x0
    5ae0:	b.eq	5b08 <__multc3@@GCC_4.0.0+0x2c0>  // b.none
    5ae4:	ldr	x0, [sp, #248]
    5ae8:	and	x0, x0, #0x8000000000000000
    5aec:	stp	xzr, xzr, [sp, #240]
    5af0:	cmp	x0, #0x0
    5af4:	b.eq	5b08 <__multc3@@GCC_4.0.0+0x2c0>  // b.none
    5af8:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5afc:	add	x0, x0, #0x310
    5b00:	ldr	q0, [x0]
    5b04:	str	q0, [sp, #240]
    5b08:	ldr	q1, [sp, #224]
    5b0c:	ldr	q0, [sp, #224]
    5b10:	bl	2da0 <__unordtf2@plt>
    5b14:	cmp	w0, #0x0
    5b18:	b.eq	5b40 <__multc3@@GCC_4.0.0+0x2f8>  // b.none
    5b1c:	ldr	x0, [sp, #232]
    5b20:	and	x0, x0, #0x8000000000000000
    5b24:	stp	xzr, xzr, [sp, #224]
    5b28:	cmp	x0, #0x0
    5b2c:	b.eq	5b40 <__multc3@@GCC_4.0.0+0x2f8>  // b.none
    5b30:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5b34:	add	x0, x0, #0x310
    5b38:	ldr	q0, [x0]
    5b3c:	str	q0, [sp, #224]
    5b40:	mov	w0, #0x1                   	// #1
    5b44:	strb	w0, [sp, #399]
    5b48:	ldr	x0, [sp, #240]
    5b4c:	str	x0, [sp, #96]
    5b50:	ldr	x0, [sp, #248]
    5b54:	and	x0, x0, #0x7fffffffffffffff
    5b58:	str	x0, [sp, #104]
    5b5c:	mov	w19, #0x1                   	// #1
    5b60:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5b64:	add	x0, x0, #0x300
    5b68:	ldr	q1, [x0]
    5b6c:	ldr	q0, [sp, #96]
    5b70:	bl	2da0 <__unordtf2@plt>
    5b74:	cmp	w0, #0x0
    5b78:	b.ne	5b9c <__multc3@@GCC_4.0.0+0x354>  // b.any
    5b7c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5b80:	add	x0, x0, #0x300
    5b84:	ldr	q1, [x0]
    5b88:	ldr	q0, [sp, #96]
    5b8c:	bl	2c20 <__letf2@plt>
    5b90:	cmp	w0, #0x0
    5b94:	b.le	5b9c <__multc3@@GCC_4.0.0+0x354>
    5b98:	mov	w19, #0x0                   	// #0
    5b9c:	and	w0, w19, #0xff
    5ba0:	eor	w0, w0, #0x1
    5ba4:	and	w0, w0, #0xff
    5ba8:	cmp	w0, #0x0
    5bac:	b.ne	5c18 <__multc3@@GCC_4.0.0+0x3d0>  // b.any
    5bb0:	ldr	x0, [sp, #224]
    5bb4:	str	x0, [sp, #112]
    5bb8:	ldr	x0, [sp, #232]
    5bbc:	and	x0, x0, #0x7fffffffffffffff
    5bc0:	str	x0, [sp, #120]
    5bc4:	mov	w19, #0x1                   	// #1
    5bc8:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5bcc:	add	x0, x0, #0x300
    5bd0:	ldr	q1, [x0]
    5bd4:	ldr	q0, [sp, #112]
    5bd8:	bl	2da0 <__unordtf2@plt>
    5bdc:	cmp	w0, #0x0
    5be0:	b.ne	5c04 <__multc3@@GCC_4.0.0+0x3bc>  // b.any
    5be4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5be8:	add	x0, x0, #0x300
    5bec:	ldr	q1, [x0]
    5bf0:	ldr	q0, [sp, #112]
    5bf4:	bl	2c20 <__letf2@plt>
    5bf8:	cmp	w0, #0x0
    5bfc:	b.le	5c04 <__multc3@@GCC_4.0.0+0x3bc>
    5c00:	mov	w19, #0x0                   	// #0
    5c04:	and	w0, w19, #0xff
    5c08:	eor	w0, w0, #0x1
    5c0c:	and	w0, w0, #0xff
    5c10:	cmp	w0, #0x0
    5c14:	b.eq	5da0 <__multc3@@GCC_4.0.0+0x558>  // b.none
    5c18:	ldr	x0, [sp, #240]
    5c1c:	str	x0, [sp, #128]
    5c20:	ldr	x0, [sp, #248]
    5c24:	and	x0, x0, #0x7fffffffffffffff
    5c28:	str	x0, [sp, #136]
    5c2c:	mov	w19, #0x1                   	// #1
    5c30:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5c34:	add	x0, x0, #0x300
    5c38:	ldr	q1, [x0]
    5c3c:	ldr	q0, [sp, #128]
    5c40:	bl	2da0 <__unordtf2@plt>
    5c44:	cmp	w0, #0x0
    5c48:	b.ne	5c6c <__multc3@@GCC_4.0.0+0x424>  // b.any
    5c4c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5c50:	add	x0, x0, #0x300
    5c54:	ldr	q1, [x0]
    5c58:	ldr	q0, [sp, #128]
    5c5c:	bl	2c20 <__letf2@plt>
    5c60:	cmp	w0, #0x0
    5c64:	b.le	5c6c <__multc3@@GCC_4.0.0+0x424>
    5c68:	mov	w19, #0x0                   	// #0
    5c6c:	and	w0, w19, #0xff
    5c70:	eor	w0, w0, #0x1
    5c74:	and	w0, w0, #0xff
    5c78:	bl	2de0 <__floatsitf@plt>
    5c7c:	str	q0, [sp, #32]
    5c80:	ldr	x0, [sp, #32]
    5c84:	str	x0, [sp, #240]
    5c88:	ldr	x0, [sp, #40]
    5c8c:	and	x1, x0, #0x7fffffffffffffff
    5c90:	ldr	x0, [sp, #248]
    5c94:	and	x0, x0, #0x8000000000000000
    5c98:	orr	x0, x1, x0
    5c9c:	str	x0, [sp, #248]
    5ca0:	ldr	x0, [sp, #224]
    5ca4:	str	x0, [sp, #144]
    5ca8:	ldr	x0, [sp, #232]
    5cac:	and	x0, x0, #0x7fffffffffffffff
    5cb0:	str	x0, [sp, #152]
    5cb4:	mov	w19, #0x1                   	// #1
    5cb8:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5cbc:	add	x0, x0, #0x300
    5cc0:	ldr	q1, [x0]
    5cc4:	ldr	q0, [sp, #144]
    5cc8:	bl	2da0 <__unordtf2@plt>
    5ccc:	cmp	w0, #0x0
    5cd0:	b.ne	5cf4 <__multc3@@GCC_4.0.0+0x4ac>  // b.any
    5cd4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5cd8:	add	x0, x0, #0x300
    5cdc:	ldr	q1, [x0]
    5ce0:	ldr	q0, [sp, #144]
    5ce4:	bl	2c20 <__letf2@plt>
    5ce8:	cmp	w0, #0x0
    5cec:	b.le	5cf4 <__multc3@@GCC_4.0.0+0x4ac>
    5cf0:	mov	w19, #0x0                   	// #0
    5cf4:	and	w0, w19, #0xff
    5cf8:	eor	w0, w0, #0x1
    5cfc:	and	w0, w0, #0xff
    5d00:	bl	2de0 <__floatsitf@plt>
    5d04:	str	q0, [sp, #32]
    5d08:	ldr	x0, [sp, #32]
    5d0c:	str	x0, [sp, #224]
    5d10:	ldr	x0, [sp, #40]
    5d14:	and	x1, x0, #0x7fffffffffffffff
    5d18:	ldr	x0, [sp, #232]
    5d1c:	and	x0, x0, #0x8000000000000000
    5d20:	orr	x0, x1, x0
    5d24:	str	x0, [sp, #232]
    5d28:	ldr	q1, [sp, #272]
    5d2c:	ldr	q0, [sp, #272]
    5d30:	bl	2da0 <__unordtf2@plt>
    5d34:	cmp	w0, #0x0
    5d38:	b.eq	5d60 <__multc3@@GCC_4.0.0+0x518>  // b.none
    5d3c:	ldr	x0, [sp, #280]
    5d40:	and	x0, x0, #0x8000000000000000
    5d44:	stp	xzr, xzr, [sp, #272]
    5d48:	cmp	x0, #0x0
    5d4c:	b.eq	5d60 <__multc3@@GCC_4.0.0+0x518>  // b.none
    5d50:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5d54:	add	x0, x0, #0x310
    5d58:	ldr	q0, [x0]
    5d5c:	str	q0, [sp, #272]
    5d60:	ldr	q1, [sp, #256]
    5d64:	ldr	q0, [sp, #256]
    5d68:	bl	2da0 <__unordtf2@plt>
    5d6c:	cmp	w0, #0x0
    5d70:	b.eq	5d98 <__multc3@@GCC_4.0.0+0x550>  // b.none
    5d74:	ldr	x0, [sp, #264]
    5d78:	and	x0, x0, #0x8000000000000000
    5d7c:	stp	xzr, xzr, [sp, #256]
    5d80:	cmp	x0, #0x0
    5d84:	b.eq	5d98 <__multc3@@GCC_4.0.0+0x550>  // b.none
    5d88:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5d8c:	add	x0, x0, #0x310
    5d90:	ldr	q0, [x0]
    5d94:	str	q0, [sp, #256]
    5d98:	mov	w0, #0x1                   	// #1
    5d9c:	strb	w0, [sp, #399]
    5da0:	ldrb	w0, [sp, #399]
    5da4:	eor	w0, w0, #0x1
    5da8:	and	w0, w0, #0xff
    5dac:	cmp	w0, #0x0
    5db0:	b.eq	603c <__multc3@@GCC_4.0.0+0x7f4>  // b.none
    5db4:	ldr	x0, [sp, #368]
    5db8:	str	x0, [sp, #160]
    5dbc:	ldr	x0, [sp, #376]
    5dc0:	and	x0, x0, #0x7fffffffffffffff
    5dc4:	str	x0, [sp, #168]
    5dc8:	mov	w19, #0x1                   	// #1
    5dcc:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5dd0:	add	x0, x0, #0x300
    5dd4:	ldr	q1, [x0]
    5dd8:	ldr	q0, [sp, #160]
    5ddc:	bl	2da0 <__unordtf2@plt>
    5de0:	cmp	w0, #0x0
    5de4:	b.ne	5e08 <__multc3@@GCC_4.0.0+0x5c0>  // b.any
    5de8:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5dec:	add	x0, x0, #0x300
    5df0:	ldr	q1, [x0]
    5df4:	ldr	q0, [sp, #160]
    5df8:	bl	2c20 <__letf2@plt>
    5dfc:	cmp	w0, #0x0
    5e00:	b.le	5e08 <__multc3@@GCC_4.0.0+0x5c0>
    5e04:	mov	w19, #0x0                   	// #0
    5e08:	and	w0, w19, #0xff
    5e0c:	eor	w0, w0, #0x1
    5e10:	and	w0, w0, #0xff
    5e14:	cmp	w0, #0x0
    5e18:	b.ne	5f54 <__multc3@@GCC_4.0.0+0x70c>  // b.any
    5e1c:	ldr	x0, [sp, #352]
    5e20:	str	x0, [sp, #176]
    5e24:	ldr	x0, [sp, #360]
    5e28:	and	x0, x0, #0x7fffffffffffffff
    5e2c:	str	x0, [sp, #184]
    5e30:	mov	w19, #0x1                   	// #1
    5e34:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5e38:	add	x0, x0, #0x300
    5e3c:	ldr	q1, [x0]
    5e40:	ldr	q0, [sp, #176]
    5e44:	bl	2da0 <__unordtf2@plt>
    5e48:	cmp	w0, #0x0
    5e4c:	b.ne	5e70 <__multc3@@GCC_4.0.0+0x628>  // b.any
    5e50:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5e54:	add	x0, x0, #0x300
    5e58:	ldr	q1, [x0]
    5e5c:	ldr	q0, [sp, #176]
    5e60:	bl	2c20 <__letf2@plt>
    5e64:	cmp	w0, #0x0
    5e68:	b.le	5e70 <__multc3@@GCC_4.0.0+0x628>
    5e6c:	mov	w19, #0x0                   	// #0
    5e70:	and	w0, w19, #0xff
    5e74:	eor	w0, w0, #0x1
    5e78:	and	w0, w0, #0xff
    5e7c:	cmp	w0, #0x0
    5e80:	b.ne	5f54 <__multc3@@GCC_4.0.0+0x70c>  // b.any
    5e84:	ldr	x0, [sp, #336]
    5e88:	str	x0, [sp, #192]
    5e8c:	ldr	x0, [sp, #344]
    5e90:	and	x0, x0, #0x7fffffffffffffff
    5e94:	str	x0, [sp, #200]
    5e98:	mov	w19, #0x1                   	// #1
    5e9c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5ea0:	add	x0, x0, #0x300
    5ea4:	ldr	q1, [x0]
    5ea8:	ldr	q0, [sp, #192]
    5eac:	bl	2da0 <__unordtf2@plt>
    5eb0:	cmp	w0, #0x0
    5eb4:	b.ne	5ed8 <__multc3@@GCC_4.0.0+0x690>  // b.any
    5eb8:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5ebc:	add	x0, x0, #0x300
    5ec0:	ldr	q1, [x0]
    5ec4:	ldr	q0, [sp, #192]
    5ec8:	bl	2c20 <__letf2@plt>
    5ecc:	cmp	w0, #0x0
    5ed0:	b.le	5ed8 <__multc3@@GCC_4.0.0+0x690>
    5ed4:	mov	w19, #0x0                   	// #0
    5ed8:	and	w0, w19, #0xff
    5edc:	eor	w0, w0, #0x1
    5ee0:	and	w0, w0, #0xff
    5ee4:	cmp	w0, #0x0
    5ee8:	b.ne	5f54 <__multc3@@GCC_4.0.0+0x70c>  // b.any
    5eec:	ldr	x0, [sp, #320]
    5ef0:	str	x0, [sp, #208]
    5ef4:	ldr	x0, [sp, #328]
    5ef8:	and	x0, x0, #0x7fffffffffffffff
    5efc:	str	x0, [sp, #216]
    5f00:	mov	w19, #0x1                   	// #1
    5f04:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5f08:	add	x0, x0, #0x300
    5f0c:	ldr	q1, [x0]
    5f10:	ldr	q0, [sp, #208]
    5f14:	bl	2da0 <__unordtf2@plt>
    5f18:	cmp	w0, #0x0
    5f1c:	b.ne	5f40 <__multc3@@GCC_4.0.0+0x6f8>  // b.any
    5f20:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5f24:	add	x0, x0, #0x300
    5f28:	ldr	q1, [x0]
    5f2c:	ldr	q0, [sp, #208]
    5f30:	bl	2c20 <__letf2@plt>
    5f34:	cmp	w0, #0x0
    5f38:	b.le	5f40 <__multc3@@GCC_4.0.0+0x6f8>
    5f3c:	mov	w19, #0x0                   	// #0
    5f40:	and	w0, w19, #0xff
    5f44:	eor	w0, w0, #0x1
    5f48:	and	w0, w0, #0xff
    5f4c:	cmp	w0, #0x0
    5f50:	b.eq	603c <__multc3@@GCC_4.0.0+0x7f4>  // b.none
    5f54:	ldr	q1, [sp, #272]
    5f58:	ldr	q0, [sp, #272]
    5f5c:	bl	2da0 <__unordtf2@plt>
    5f60:	cmp	w0, #0x0
    5f64:	b.eq	5f8c <__multc3@@GCC_4.0.0+0x744>  // b.none
    5f68:	ldr	x0, [sp, #280]
    5f6c:	and	x0, x0, #0x8000000000000000
    5f70:	stp	xzr, xzr, [sp, #272]
    5f74:	cmp	x0, #0x0
    5f78:	b.eq	5f8c <__multc3@@GCC_4.0.0+0x744>  // b.none
    5f7c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5f80:	add	x0, x0, #0x310
    5f84:	ldr	q0, [x0]
    5f88:	str	q0, [sp, #272]
    5f8c:	ldr	q1, [sp, #256]
    5f90:	ldr	q0, [sp, #256]
    5f94:	bl	2da0 <__unordtf2@plt>
    5f98:	cmp	w0, #0x0
    5f9c:	b.eq	5fc4 <__multc3@@GCC_4.0.0+0x77c>  // b.none
    5fa0:	ldr	x0, [sp, #264]
    5fa4:	and	x0, x0, #0x8000000000000000
    5fa8:	stp	xzr, xzr, [sp, #256]
    5fac:	cmp	x0, #0x0
    5fb0:	b.eq	5fc4 <__multc3@@GCC_4.0.0+0x77c>  // b.none
    5fb4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5fb8:	add	x0, x0, #0x310
    5fbc:	ldr	q0, [x0]
    5fc0:	str	q0, [sp, #256]
    5fc4:	ldr	q1, [sp, #240]
    5fc8:	ldr	q0, [sp, #240]
    5fcc:	bl	2da0 <__unordtf2@plt>
    5fd0:	cmp	w0, #0x0
    5fd4:	b.eq	5ffc <__multc3@@GCC_4.0.0+0x7b4>  // b.none
    5fd8:	ldr	x0, [sp, #248]
    5fdc:	and	x0, x0, #0x8000000000000000
    5fe0:	stp	xzr, xzr, [sp, #240]
    5fe4:	cmp	x0, #0x0
    5fe8:	b.eq	5ffc <__multc3@@GCC_4.0.0+0x7b4>  // b.none
    5fec:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    5ff0:	add	x0, x0, #0x310
    5ff4:	ldr	q0, [x0]
    5ff8:	str	q0, [sp, #240]
    5ffc:	ldr	q1, [sp, #224]
    6000:	ldr	q0, [sp, #224]
    6004:	bl	2da0 <__unordtf2@plt>
    6008:	cmp	w0, #0x0
    600c:	b.eq	6034 <__multc3@@GCC_4.0.0+0x7ec>  // b.none
    6010:	ldr	x0, [sp, #232]
    6014:	and	x0, x0, #0x8000000000000000
    6018:	stp	xzr, xzr, [sp, #224]
    601c:	cmp	x0, #0x0
    6020:	b.eq	6034 <__multc3@@GCC_4.0.0+0x7ec>  // b.none
    6024:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    6028:	add	x0, x0, #0x310
    602c:	ldr	q0, [x0]
    6030:	str	q0, [sp, #224]
    6034:	mov	w0, #0x1                   	// #1
    6038:	strb	w0, [sp, #399]
    603c:	ldrb	w0, [sp, #399]
    6040:	cmp	w0, #0x0
    6044:	b.eq	60c0 <__multc3@@GCC_4.0.0+0x878>  // b.none
    6048:	ldr	q1, [sp, #240]
    604c:	ldr	q0, [sp, #272]
    6050:	bl	2b70 <__multf3@plt>
    6054:	str	q0, [sp, #32]
    6058:	ldr	q1, [sp, #224]
    605c:	ldr	q0, [sp, #256]
    6060:	bl	2b70 <__multf3@plt>
    6064:	mov	v1.16b, v0.16b
    6068:	ldr	q0, [sp, #32]
    606c:	bl	2df0 <__subtf3@plt>
    6070:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    6074:	add	x0, x0, #0x320
    6078:	ldr	q1, [x0]
    607c:	bl	2b70 <__multf3@plt>
    6080:	str	q0, [sp, #416]
    6084:	ldr	q1, [sp, #224]
    6088:	ldr	q0, [sp, #272]
    608c:	bl	2b70 <__multf3@plt>
    6090:	str	q0, [sp, #32]
    6094:	ldr	q1, [sp, #240]
    6098:	ldr	q0, [sp, #256]
    609c:	bl	2b70 <__multf3@plt>
    60a0:	mov	v1.16b, v0.16b
    60a4:	ldr	q0, [sp, #32]
    60a8:	bl	2c80 <__addtf3@plt>
    60ac:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    60b0:	add	x0, x0, #0x320
    60b4:	ldr	q1, [x0]
    60b8:	bl	2b70 <__multf3@plt>
    60bc:	str	q0, [sp, #400]
    60c0:	ldr	q0, [sp, #448]
    60c4:	ldr	q2, [sp, #416]
    60c8:	str	q2, [sp, #288]
    60cc:	str	q0, [sp, #304]
    60d0:	ldr	q0, [sp, #416]
    60d4:	str	q0, [sp, #432]
    60d8:	ldr	q0, [sp, #400]
    60dc:	ldr	q2, [sp, #432]
    60e0:	str	q2, [sp, #288]
    60e4:	str	q0, [sp, #304]
    60e8:	ldr	q2, [sp, #432]
    60ec:	ldr	q0, [sp, #400]
    60f0:	mov	v4.16b, v2.16b
    60f4:	mov	v2.16b, v0.16b
    60f8:	mov	v0.16b, v4.16b
    60fc:	mov	v1.16b, v2.16b
    6100:	ldr	x19, [sp, #16]
    6104:	ldp	x29, x30, [sp], #464
    6108:	ret
    610c:	sub	sp, sp, #0x20
    6110:	str	h0, [sp, #14]
    6114:	str	h1, [sp, #12]
    6118:	str	h2, [sp, #10]
    611c:	str	h3, [sp, #8]
    6120:	ldr	h0, [sp, #10]
    6124:	fcvt	s0, h0
    6128:	fabs	s0, s0
    612c:	fcvt	h1, s0
    6130:	ldr	h0, [sp, #8]
    6134:	fcvt	s0, h0
    6138:	fabs	s0, s0
    613c:	fcvt	h0, s0
    6140:	fcvt	s1, h1
    6144:	fcvt	s0, h0
    6148:	fcmpe	s1, s0
    614c:	b.pl	6200 <__multc3@@GCC_4.0.0+0x9b8>  // b.nfrst
    6150:	ldr	h0, [sp, #10]
    6154:	fcvt	s1, h0
    6158:	ldr	h0, [sp, #8]
    615c:	fcvt	s0, h0
    6160:	fdiv	s0, s1, s0
    6164:	fcvt	h0, s0
    6168:	str	h0, [sp, #22]
    616c:	ldr	h0, [sp, #10]
    6170:	fcvt	s1, h0
    6174:	ldr	h0, [sp, #22]
    6178:	fcvt	s0, h0
    617c:	fmul	s1, s1, s0
    6180:	ldr	h0, [sp, #8]
    6184:	fcvt	s0, h0
    6188:	fadd	s0, s1, s0
    618c:	fcvt	h0, s0
    6190:	str	h0, [sp, #20]
    6194:	ldr	h0, [sp, #14]
    6198:	fcvt	s1, h0
    619c:	ldr	h0, [sp, #22]
    61a0:	fcvt	s0, h0
    61a4:	fmul	s1, s1, s0
    61a8:	ldr	h0, [sp, #12]
    61ac:	fcvt	s0, h0
    61b0:	fadd	s1, s1, s0
    61b4:	ldr	h0, [sp, #20]
    61b8:	fcvt	s0, h0
    61bc:	fdiv	s0, s1, s0
    61c0:	fcvt	h0, s0
    61c4:	str	h0, [sp, #26]
    61c8:	ldr	h0, [sp, #12]
    61cc:	fcvt	s1, h0
    61d0:	ldr	h0, [sp, #22]
    61d4:	fcvt	s0, h0
    61d8:	fmul	s1, s1, s0
    61dc:	ldr	h0, [sp, #14]
    61e0:	fcvt	s0, h0
    61e4:	fsub	s1, s1, s0
    61e8:	ldr	h0, [sp, #20]
    61ec:	fcvt	s0, h0
    61f0:	fdiv	s0, s1, s0
    61f4:	fcvt	h0, s0
    61f8:	str	h0, [sp, #24]
    61fc:	b	62ac <__multc3@@GCC_4.0.0+0xa64>
    6200:	ldr	h0, [sp, #8]
    6204:	fcvt	s1, h0
    6208:	ldr	h0, [sp, #10]
    620c:	fcvt	s0, h0
    6210:	fdiv	s0, s1, s0
    6214:	fcvt	h0, s0
    6218:	str	h0, [sp, #22]
    621c:	ldr	h0, [sp, #8]
    6220:	fcvt	s1, h0
    6224:	ldr	h0, [sp, #22]
    6228:	fcvt	s0, h0
    622c:	fmul	s1, s1, s0
    6230:	ldr	h0, [sp, #10]
    6234:	fcvt	s0, h0
    6238:	fadd	s0, s1, s0
    623c:	fcvt	h0, s0
    6240:	str	h0, [sp, #20]
    6244:	ldr	h0, [sp, #12]
    6248:	fcvt	s1, h0
    624c:	ldr	h0, [sp, #22]
    6250:	fcvt	s0, h0
    6254:	fmul	s1, s1, s0
    6258:	ldr	h0, [sp, #14]
    625c:	fcvt	s0, h0
    6260:	fadd	s1, s1, s0
    6264:	ldr	h0, [sp, #20]
    6268:	fcvt	s0, h0
    626c:	fdiv	s0, s1, s0
    6270:	fcvt	h0, s0
    6274:	str	h0, [sp, #26]
    6278:	ldr	h0, [sp, #12]
    627c:	fcvt	s1, h0
    6280:	ldr	h0, [sp, #14]
    6284:	fcvt	s2, h0
    6288:	ldr	h0, [sp, #22]
    628c:	fcvt	s0, h0
    6290:	fmul	s0, s2, s0
    6294:	fsub	s1, s1, s0
    6298:	ldr	h0, [sp, #20]
    629c:	fcvt	s0, h0
    62a0:	fdiv	s0, s1, s0
    62a4:	fcvt	h0, s0
    62a8:	str	h0, [sp, #24]
    62ac:	ldr	h0, [sp, #26]
    62b0:	fcvt	s1, h0
    62b4:	ldr	h0, [sp, #26]
    62b8:	fcvt	s0, h0
    62bc:	fcmp	s1, s0
    62c0:	b.vc	67ac <__multc3@@GCC_4.0.0+0xf64>
    62c4:	ldr	h0, [sp, #24]
    62c8:	fcvt	s1, h0
    62cc:	ldr	h0, [sp, #24]
    62d0:	fcvt	s0, h0
    62d4:	fcmp	s1, s0
    62d8:	b.vc	67ac <__multc3@@GCC_4.0.0+0xf64>
    62dc:	ldr	h0, [sp, #10]
    62e0:	fcvt	s0, h0
    62e4:	fcmp	s0, #0.0
    62e8:	b.ne	6398 <__multc3@@GCC_4.0.0+0xb50>  // b.any
    62ec:	ldr	h0, [sp, #8]
    62f0:	fcvt	s0, h0
    62f4:	fcmp	s0, #0.0
    62f8:	b.ne	6398 <__multc3@@GCC_4.0.0+0xb50>  // b.any
    62fc:	ldr	h0, [sp, #14]
    6300:	fcvt	s1, h0
    6304:	ldr	h0, [sp, #14]
    6308:	fcvt	s0, h0
    630c:	fcmp	s1, s0
    6310:	b.vc	632c <__multc3@@GCC_4.0.0+0xae4>
    6314:	ldr	h0, [sp, #12]
    6318:	fcvt	s1, h0
    631c:	ldr	h0, [sp, #12]
    6320:	fcvt	s0, h0
    6324:	fcmp	s1, s0
    6328:	b.vs	6398 <__multc3@@GCC_4.0.0+0xb50>
    632c:	ldrh	w0, [sp, #10]
    6330:	and	w0, w0, #0xffff8000
    6334:	movi	v0.4h, #0x7c, lsl #8
    6338:	and	w0, w0, #0xffff
    633c:	cmp	w0, #0x0
    6340:	b.eq	6348 <__multc3@@GCC_4.0.0+0xb00>  // b.none
    6344:	movi	v0.4h, #0xfc, lsl #8
    6348:	fcvt	s1, h0
    634c:	ldr	h0, [sp, #14]
    6350:	fcvt	s0, h0
    6354:	fmul	s0, s1, s0
    6358:	fcvt	h0, s0
    635c:	str	h0, [sp, #26]
    6360:	ldrh	w0, [sp, #10]
    6364:	and	w0, w0, #0xffff8000
    6368:	movi	v0.4h, #0x7c, lsl #8
    636c:	and	w0, w0, #0xffff
    6370:	cmp	w0, #0x0
    6374:	b.eq	637c <__multc3@@GCC_4.0.0+0xb34>  // b.none
    6378:	movi	v0.4h, #0xfc, lsl #8
    637c:	fcvt	s1, h0
    6380:	ldr	h0, [sp, #12]
    6384:	fcvt	s0, h0
    6388:	fmul	s0, s1, s0
    638c:	fcvt	h0, s0
    6390:	str	h0, [sp, #24]
    6394:	b	67ac <__multc3@@GCC_4.0.0+0xf64>
    6398:	ldr	h0, [sp, #14]
    639c:	fcvt	s0, h0
    63a0:	fabs	s0, s0
    63a4:	fcvt	h0, s0
    63a8:	fcvt	s1, h0
    63ac:	mvni	v0.4h, #0x84, lsl #8
    63b0:	fcvt	s0, h0
    63b4:	fcmp	s1, s0
    63b8:	cset	w0, le
    63bc:	and	w0, w0, #0xff
    63c0:	eor	w0, w0, #0x1
    63c4:	and	w0, w0, #0xff
    63c8:	cmp	w0, #0x0
    63cc:	b.ne	6408 <__multc3@@GCC_4.0.0+0xbc0>  // b.any
    63d0:	ldr	h0, [sp, #12]
    63d4:	fcvt	s0, h0
    63d8:	fabs	s0, s0
    63dc:	fcvt	h0, s0
    63e0:	fcvt	s1, h0
    63e4:	mvni	v0.4h, #0x84, lsl #8
    63e8:	fcvt	s0, h0
    63ec:	fcmp	s1, s0
    63f0:	cset	w0, le
    63f4:	and	w0, w0, #0xff
    63f8:	eor	w0, w0, #0x1
    63fc:	and	w0, w0, #0xff
    6400:	cmp	w0, #0x0
    6404:	b.eq	65a4 <__multc3@@GCC_4.0.0+0xd5c>  // b.none
    6408:	ldr	h0, [sp, #10]
    640c:	fcvt	s0, h0
    6410:	fabs	s0, s0
    6414:	fcvt	h0, s0
    6418:	fcvt	s1, h0
    641c:	mvni	v0.4h, #0x84, lsl #8
    6420:	fcvt	s0, h0
    6424:	fcmp	s1, s0
    6428:	cset	w0, hi  // hi = pmore
    642c:	and	w0, w0, #0xff
    6430:	eor	w0, w0, #0x1
    6434:	and	w0, w0, #0xff
    6438:	cmp	w0, #0x0
    643c:	b.eq	65a4 <__multc3@@GCC_4.0.0+0xd5c>  // b.none
    6440:	ldr	h0, [sp, #8]
    6444:	fcvt	s0, h0
    6448:	fabs	s0, s0
    644c:	fcvt	h0, s0
    6450:	fcvt	s1, h0
    6454:	mvni	v0.4h, #0x84, lsl #8
    6458:	fcvt	s0, h0
    645c:	fcmp	s1, s0
    6460:	cset	w0, hi  // hi = pmore
    6464:	and	w0, w0, #0xff
    6468:	eor	w0, w0, #0x1
    646c:	and	w0, w0, #0xff
    6470:	cmp	w0, #0x0
    6474:	b.eq	65a4 <__multc3@@GCC_4.0.0+0xd5c>  // b.none
    6478:	ldr	h0, [sp, #14]
    647c:	fcvt	s0, h0
    6480:	fabs	s0, s0
    6484:	fcvt	h0, s0
    6488:	fcvt	s1, h0
    648c:	mvni	v0.4h, #0x84, lsl #8
    6490:	fcvt	s0, h0
    6494:	fcmp	s1, s0
    6498:	cset	w0, le
    649c:	and	w0, w0, #0xff
    64a0:	eor	w0, w0, #0x1
    64a4:	and	w0, w0, #0xff
    64a8:	scvtf	d0, w0
    64ac:	fcvt	h0, d0
    64b0:	ldrh	w0, [sp, #14]
    64b4:	and	w0, w0, #0xffff8000
    64b8:	umov	w1, v0.h[0]
    64bc:	and	w1, w1, #0x7fff
    64c0:	orr	w0, w1, w0
    64c4:	dup	v0.4h, w0
    64c8:	str	h0, [sp, #14]
    64cc:	ldr	h0, [sp, #12]
    64d0:	fcvt	s0, h0
    64d4:	fabs	s0, s0
    64d8:	fcvt	h0, s0
    64dc:	fcvt	s1, h0
    64e0:	mvni	v0.4h, #0x84, lsl #8
    64e4:	fcvt	s0, h0
    64e8:	fcmp	s1, s0
    64ec:	cset	w0, le
    64f0:	and	w0, w0, #0xff
    64f4:	eor	w0, w0, #0x1
    64f8:	and	w0, w0, #0xff
    64fc:	scvtf	d0, w0
    6500:	fcvt	h0, d0
    6504:	ldrh	w0, [sp, #12]
    6508:	and	w0, w0, #0xffff8000
    650c:	umov	w1, v0.h[0]
    6510:	and	w1, w1, #0x7fff
    6514:	orr	w0, w1, w0
    6518:	dup	v0.4h, w0
    651c:	str	h0, [sp, #12]
    6520:	ldr	h0, [sp, #14]
    6524:	fcvt	s1, h0
    6528:	ldr	h0, [sp, #10]
    652c:	fcvt	s0, h0
    6530:	fmul	s1, s1, s0
    6534:	ldr	h0, [sp, #12]
    6538:	fcvt	s2, h0
    653c:	ldr	h0, [sp, #8]
    6540:	fcvt	s0, h0
    6544:	fmul	s0, s2, s0
    6548:	fadd	s0, s1, s0
    654c:	mov	w0, #0x7f800000            	// #2139095040
    6550:	fmov	s1, w0
    6554:	fmul	s0, s0, s1
    6558:	fcvt	h0, s0
    655c:	str	h0, [sp, #26]
    6560:	ldr	h0, [sp, #12]
    6564:	fcvt	s1, h0
    6568:	ldr	h0, [sp, #10]
    656c:	fcvt	s0, h0
    6570:	fmul	s1, s1, s0
    6574:	ldr	h0, [sp, #14]
    6578:	fcvt	s2, h0
    657c:	ldr	h0, [sp, #8]
    6580:	fcvt	s0, h0
    6584:	fmul	s0, s2, s0
    6588:	fsub	s0, s1, s0
    658c:	mov	w0, #0x7f800000            	// #2139095040
    6590:	fmov	s1, w0
    6594:	fmul	s0, s0, s1
    6598:	fcvt	h0, s0
    659c:	str	h0, [sp, #24]
    65a0:	b	67ac <__multc3@@GCC_4.0.0+0xf64>
    65a4:	ldr	h0, [sp, #10]
    65a8:	fcvt	s0, h0
    65ac:	fabs	s0, s0
    65b0:	fcvt	h0, s0
    65b4:	fcvt	s1, h0
    65b8:	mvni	v0.4h, #0x84, lsl #8
    65bc:	fcvt	s0, h0
    65c0:	fcmp	s1, s0
    65c4:	cset	w0, le
    65c8:	and	w0, w0, #0xff
    65cc:	eor	w0, w0, #0x1
    65d0:	and	w0, w0, #0xff
    65d4:	cmp	w0, #0x0
    65d8:	b.ne	6614 <__multc3@@GCC_4.0.0+0xdcc>  // b.any
    65dc:	ldr	h0, [sp, #8]
    65e0:	fcvt	s0, h0
    65e4:	fabs	s0, s0
    65e8:	fcvt	h0, s0
    65ec:	fcvt	s1, h0
    65f0:	mvni	v0.4h, #0x84, lsl #8
    65f4:	fcvt	s0, h0
    65f8:	fcmp	s1, s0
    65fc:	cset	w0, le
    6600:	and	w0, w0, #0xff
    6604:	eor	w0, w0, #0x1
    6608:	and	w0, w0, #0xff
    660c:	cmp	w0, #0x0
    6610:	b.eq	67ac <__multc3@@GCC_4.0.0+0xf64>  // b.none
    6614:	ldr	h0, [sp, #14]
    6618:	fcvt	s0, h0
    661c:	fabs	s0, s0
    6620:	fcvt	h0, s0
    6624:	fcvt	s1, h0
    6628:	mvni	v0.4h, #0x84, lsl #8
    662c:	fcvt	s0, h0
    6630:	fcmp	s1, s0
    6634:	cset	w0, hi  // hi = pmore
    6638:	and	w0, w0, #0xff
    663c:	eor	w0, w0, #0x1
    6640:	and	w0, w0, #0xff
    6644:	cmp	w0, #0x0
    6648:	b.eq	67ac <__multc3@@GCC_4.0.0+0xf64>  // b.none
    664c:	ldr	h0, [sp, #12]
    6650:	fcvt	s0, h0
    6654:	fabs	s0, s0
    6658:	fcvt	h0, s0
    665c:	fcvt	s1, h0
    6660:	mvni	v0.4h, #0x84, lsl #8
    6664:	fcvt	s0, h0
    6668:	fcmp	s1, s0
    666c:	cset	w0, hi  // hi = pmore
    6670:	and	w0, w0, #0xff
    6674:	eor	w0, w0, #0x1
    6678:	and	w0, w0, #0xff
    667c:	cmp	w0, #0x0
    6680:	b.eq	67ac <__multc3@@GCC_4.0.0+0xf64>  // b.none
    6684:	ldr	h0, [sp, #10]
    6688:	fcvt	s0, h0
    668c:	fabs	s0, s0
    6690:	fcvt	h0, s0
    6694:	fcvt	s1, h0
    6698:	mvni	v0.4h, #0x84, lsl #8
    669c:	fcvt	s0, h0
    66a0:	fcmp	s1, s0
    66a4:	cset	w0, le
    66a8:	and	w0, w0, #0xff
    66ac:	eor	w0, w0, #0x1
    66b0:	and	w0, w0, #0xff
    66b4:	scvtf	d0, w0
    66b8:	fcvt	h0, d0
    66bc:	ldrh	w0, [sp, #10]
    66c0:	and	w0, w0, #0xffff8000
    66c4:	umov	w1, v0.h[0]
    66c8:	and	w1, w1, #0x7fff
    66cc:	orr	w0, w1, w0
    66d0:	dup	v0.4h, w0
    66d4:	str	h0, [sp, #10]
    66d8:	ldr	h0, [sp, #8]
    66dc:	fcvt	s0, h0
    66e0:	fabs	s0, s0
    66e4:	fcvt	h0, s0
    66e8:	fcvt	s1, h0
    66ec:	mvni	v0.4h, #0x84, lsl #8
    66f0:	fcvt	s0, h0
    66f4:	fcmp	s1, s0
    66f8:	cset	w0, le
    66fc:	and	w0, w0, #0xff
    6700:	eor	w0, w0, #0x1
    6704:	and	w0, w0, #0xff
    6708:	scvtf	d0, w0
    670c:	fcvt	h0, d0
    6710:	ldrh	w0, [sp, #8]
    6714:	and	w0, w0, #0xffff8000
    6718:	umov	w1, v0.h[0]
    671c:	and	w1, w1, #0x7fff
    6720:	orr	w0, w1, w0
    6724:	dup	v0.4h, w0
    6728:	str	h0, [sp, #8]
    672c:	ldr	h0, [sp, #14]
    6730:	fcvt	s1, h0
    6734:	ldr	h0, [sp, #10]
    6738:	fcvt	s0, h0
    673c:	fmul	s1, s1, s0
    6740:	ldr	h0, [sp, #12]
    6744:	fcvt	s2, h0
    6748:	ldr	h0, [sp, #8]
    674c:	fcvt	s0, h0
    6750:	fmul	s0, s2, s0
    6754:	fadd	s0, s1, s0
    6758:	fcvt	d0, s0
    675c:	movi	d1, #0x0
    6760:	fmul	d0, d0, d1
    6764:	fcvt	h0, d0
    6768:	str	h0, [sp, #26]
    676c:	ldr	h0, [sp, #12]
    6770:	fcvt	s1, h0
    6774:	ldr	h0, [sp, #10]
    6778:	fcvt	s0, h0
    677c:	fmul	s1, s1, s0
    6780:	ldr	h0, [sp, #14]
    6784:	fcvt	s2, h0
    6788:	ldr	h0, [sp, #8]
    678c:	fcvt	s0, h0
    6790:	fmul	s0, s2, s0
    6794:	fsub	s0, s1, s0
    6798:	fcvt	d0, s0
    679c:	movi	d1, #0x0
    67a0:	fmul	d0, d0, d1
    67a4:	fcvt	h0, d0
    67a8:	str	h0, [sp, #24]
    67ac:	ldr	h0, [sp, #30]
    67b0:	ldr	h1, [sp, #26]
    67b4:	str	h1, [sp, #16]
    67b8:	str	h0, [sp, #18]
    67bc:	ldr	h0, [sp, #26]
    67c0:	str	h0, [sp, #28]
    67c4:	ldr	h0, [sp, #24]
    67c8:	ldr	h1, [sp, #28]
    67cc:	str	h1, [sp, #16]
    67d0:	str	h0, [sp, #18]
    67d4:	ldr	h1, [sp, #28]
    67d8:	ldr	h0, [sp, #24]
    67dc:	mov	v2.h[0], v1.h[0]
    67e0:	mov	v1.h[0], v0.h[0]
    67e4:	mov	v0.h[0], v2.h[0]
    67e8:	add	sp, sp, #0x20
    67ec:	ret

00000000000067f0 <__divsc3@@GCC_4.0.0>:
    67f0:	sub	sp, sp, #0x30
    67f4:	str	s0, [sp, #12]
    67f8:	str	s1, [sp, #8]
    67fc:	str	s2, [sp, #4]
    6800:	str	s3, [sp]
    6804:	ldr	s0, [sp, #4]
    6808:	fabs	s1, s0
    680c:	ldr	s0, [sp]
    6810:	fabs	s0, s0
    6814:	fcmpe	s1, s0
    6818:	b.pl	6888 <__divsc3@@GCC_4.0.0+0x98>  // b.nfrst
    681c:	ldr	s0, [sp]
    6820:	ldr	s1, [sp, #4]
    6824:	fdiv	s0, s1, s0
    6828:	str	s0, [sp, #28]
    682c:	ldr	s1, [sp, #4]
    6830:	ldr	s0, [sp, #28]
    6834:	fmul	s0, s1, s0
    6838:	ldr	s1, [sp]
    683c:	fadd	s0, s1, s0
    6840:	str	s0, [sp, #24]
    6844:	ldr	s1, [sp, #12]
    6848:	ldr	s0, [sp, #28]
    684c:	fmul	s1, s1, s0
    6850:	ldr	s0, [sp, #8]
    6854:	fadd	s1, s1, s0
    6858:	ldr	s0, [sp, #24]
    685c:	fdiv	s0, s1, s0
    6860:	str	s0, [sp, #36]
    6864:	ldr	s1, [sp, #8]
    6868:	ldr	s0, [sp, #28]
    686c:	fmul	s1, s1, s0
    6870:	ldr	s0, [sp, #12]
    6874:	fsub	s1, s1, s0
    6878:	ldr	s0, [sp, #24]
    687c:	fdiv	s0, s1, s0
    6880:	str	s0, [sp, #32]
    6884:	b	68f0 <__divsc3@@GCC_4.0.0+0x100>
    6888:	ldr	s0, [sp, #4]
    688c:	ldr	s1, [sp]
    6890:	fdiv	s0, s1, s0
    6894:	str	s0, [sp, #28]
    6898:	ldr	s1, [sp]
    689c:	ldr	s0, [sp, #28]
    68a0:	fmul	s0, s1, s0
    68a4:	ldr	s1, [sp, #4]
    68a8:	fadd	s0, s1, s0
    68ac:	str	s0, [sp, #24]
    68b0:	ldr	s1, [sp, #8]
    68b4:	ldr	s0, [sp, #28]
    68b8:	fmul	s1, s1, s0
    68bc:	ldr	s0, [sp, #12]
    68c0:	fadd	s1, s1, s0
    68c4:	ldr	s0, [sp, #24]
    68c8:	fdiv	s0, s1, s0
    68cc:	str	s0, [sp, #36]
    68d0:	ldr	s1, [sp, #12]
    68d4:	ldr	s0, [sp, #28]
    68d8:	fmul	s0, s1, s0
    68dc:	ldr	s1, [sp, #8]
    68e0:	fsub	s1, s1, s0
    68e4:	ldr	s0, [sp, #24]
    68e8:	fdiv	s0, s1, s0
    68ec:	str	s0, [sp, #32]
    68f0:	ldr	s1, [sp, #36]
    68f4:	ldr	s0, [sp, #36]
    68f8:	fcmp	s1, s0
    68fc:	b.vc	6c88 <__divsc3@@GCC_4.0.0+0x498>
    6900:	ldr	s1, [sp, #32]
    6904:	ldr	s0, [sp, #32]
    6908:	fcmp	s1, s0
    690c:	b.vc	6c88 <__divsc3@@GCC_4.0.0+0x498>
    6910:	ldr	s0, [sp, #4]
    6914:	fcmp	s0, #0.0
    6918:	b.ne	698c <__divsc3@@GCC_4.0.0+0x19c>  // b.any
    691c:	ldr	s0, [sp]
    6920:	fcmp	s0, #0.0
    6924:	b.ne	698c <__divsc3@@GCC_4.0.0+0x19c>  // b.any
    6928:	ldr	s1, [sp, #12]
    692c:	ldr	s0, [sp, #12]
    6930:	fcmp	s1, s0
    6934:	b.vc	6948 <__divsc3@@GCC_4.0.0+0x158>
    6938:	ldr	s1, [sp, #8]
    693c:	ldr	s0, [sp, #8]
    6940:	fcmp	s1, s0
    6944:	b.vs	698c <__divsc3@@GCC_4.0.0+0x19c>
    6948:	mov	w0, #0x7f800000            	// #2139095040
    694c:	fmov	s2, w0
    6950:	ldr	s0, [sp, #4]
    6954:	movi	v1.2s, #0x80, lsl #24
    6958:	bif	v0.8b, v2.8b, v1.8b
    695c:	ldr	s1, [sp, #12]
    6960:	fmul	s0, s1, s0
    6964:	str	s0, [sp, #36]
    6968:	mov	w0, #0x7f800000            	// #2139095040
    696c:	fmov	s2, w0
    6970:	ldr	s0, [sp, #4]
    6974:	movi	v1.2s, #0x80, lsl #24
    6978:	bif	v0.8b, v2.8b, v1.8b
    697c:	ldr	s1, [sp, #8]
    6980:	fmul	s0, s1, s0
    6984:	str	s0, [sp, #32]
    6988:	b	6c88 <__divsc3@@GCC_4.0.0+0x498>
    698c:	ldr	s0, [sp, #12]
    6990:	fabs	s0, s0
    6994:	mov	w0, #0x7f7fffff            	// #2139095039
    6998:	fmov	s1, w0
    699c:	fcmp	s0, s1
    69a0:	cset	w0, le
    69a4:	and	w0, w0, #0xff
    69a8:	eor	w0, w0, #0x1
    69ac:	and	w0, w0, #0xff
    69b0:	cmp	w0, #0x0
    69b4:	b.ne	69e4 <__divsc3@@GCC_4.0.0+0x1f4>  // b.any
    69b8:	ldr	s0, [sp, #8]
    69bc:	fabs	s0, s0
    69c0:	mov	w0, #0x7f7fffff            	// #2139095039
    69c4:	fmov	s1, w0
    69c8:	fcmp	s0, s1
    69cc:	cset	w0, le
    69d0:	and	w0, w0, #0xff
    69d4:	eor	w0, w0, #0x1
    69d8:	and	w0, w0, #0xff
    69dc:	cmp	w0, #0x0
    69e0:	b.eq	6b10 <__divsc3@@GCC_4.0.0+0x320>  // b.none
    69e4:	ldr	s0, [sp, #4]
    69e8:	fabs	s0, s0
    69ec:	mov	w0, #0x7f7fffff            	// #2139095039
    69f0:	fmov	s1, w0
    69f4:	fcmp	s0, s1
    69f8:	cset	w0, hi  // hi = pmore
    69fc:	and	w0, w0, #0xff
    6a00:	eor	w0, w0, #0x1
    6a04:	and	w0, w0, #0xff
    6a08:	cmp	w0, #0x0
    6a0c:	b.eq	6b10 <__divsc3@@GCC_4.0.0+0x320>  // b.none
    6a10:	ldr	s0, [sp]
    6a14:	fabs	s0, s0
    6a18:	mov	w0, #0x7f7fffff            	// #2139095039
    6a1c:	fmov	s1, w0
    6a20:	fcmp	s0, s1
    6a24:	cset	w0, hi  // hi = pmore
    6a28:	and	w0, w0, #0xff
    6a2c:	eor	w0, w0, #0x1
    6a30:	and	w0, w0, #0xff
    6a34:	cmp	w0, #0x0
    6a38:	b.eq	6b10 <__divsc3@@GCC_4.0.0+0x320>  // b.none
    6a3c:	ldr	s0, [sp, #12]
    6a40:	fabs	s0, s0
    6a44:	mov	w0, #0x7f7fffff            	// #2139095039
    6a48:	fmov	s1, w0
    6a4c:	fcmp	s0, s1
    6a50:	cset	w0, le
    6a54:	and	w0, w0, #0xff
    6a58:	eor	w0, w0, #0x1
    6a5c:	and	w0, w0, #0xff
    6a60:	fmov	s0, w0
    6a64:	scvtf	s0, s0
    6a68:	ldr	s1, [sp, #12]
    6a6c:	movi	v2.2s, #0x80, lsl #24
    6a70:	bit	v0.8b, v1.8b, v2.8b
    6a74:	str	s0, [sp, #12]
    6a78:	ldr	s0, [sp, #8]
    6a7c:	fabs	s0, s0
    6a80:	mov	w0, #0x7f7fffff            	// #2139095039
    6a84:	fmov	s1, w0
    6a88:	fcmp	s0, s1
    6a8c:	cset	w0, le
    6a90:	and	w0, w0, #0xff
    6a94:	eor	w0, w0, #0x1
    6a98:	and	w0, w0, #0xff
    6a9c:	fmov	s0, w0
    6aa0:	scvtf	s0, s0
    6aa4:	ldr	s1, [sp, #8]
    6aa8:	movi	v2.2s, #0x80, lsl #24
    6aac:	bit	v0.8b, v1.8b, v2.8b
    6ab0:	str	s0, [sp, #8]
    6ab4:	ldr	s1, [sp, #12]
    6ab8:	ldr	s0, [sp, #4]
    6abc:	fmul	s1, s1, s0
    6ac0:	ldr	s2, [sp, #8]
    6ac4:	ldr	s0, [sp]
    6ac8:	fmul	s0, s2, s0
    6acc:	fadd	s0, s1, s0
    6ad0:	mov	w0, #0x7f800000            	// #2139095040
    6ad4:	fmov	s1, w0
    6ad8:	fmul	s0, s0, s1
    6adc:	str	s0, [sp, #36]
    6ae0:	ldr	s1, [sp, #8]
    6ae4:	ldr	s0, [sp, #4]
    6ae8:	fmul	s1, s1, s0
    6aec:	ldr	s2, [sp, #12]
    6af0:	ldr	s0, [sp]
    6af4:	fmul	s0, s2, s0
    6af8:	fsub	s0, s1, s0
    6afc:	mov	w0, #0x7f800000            	// #2139095040
    6b00:	fmov	s1, w0
    6b04:	fmul	s0, s0, s1
    6b08:	str	s0, [sp, #32]
    6b0c:	b	6c88 <__divsc3@@GCC_4.0.0+0x498>
    6b10:	ldr	s0, [sp, #4]
    6b14:	fabs	s0, s0
    6b18:	mov	w0, #0x7f7fffff            	// #2139095039
    6b1c:	fmov	s1, w0
    6b20:	fcmp	s0, s1
    6b24:	cset	w0, le
    6b28:	and	w0, w0, #0xff
    6b2c:	eor	w0, w0, #0x1
    6b30:	and	w0, w0, #0xff
    6b34:	cmp	w0, #0x0
    6b38:	b.ne	6b68 <__divsc3@@GCC_4.0.0+0x378>  // b.any
    6b3c:	ldr	s0, [sp]
    6b40:	fabs	s0, s0
    6b44:	mov	w0, #0x7f7fffff            	// #2139095039
    6b48:	fmov	s1, w0
    6b4c:	fcmp	s0, s1
    6b50:	cset	w0, le
    6b54:	and	w0, w0, #0xff
    6b58:	eor	w0, w0, #0x1
    6b5c:	and	w0, w0, #0xff
    6b60:	cmp	w0, #0x0
    6b64:	b.eq	6c88 <__divsc3@@GCC_4.0.0+0x498>  // b.none
    6b68:	ldr	s0, [sp, #12]
    6b6c:	fabs	s0, s0
    6b70:	mov	w0, #0x7f7fffff            	// #2139095039
    6b74:	fmov	s1, w0
    6b78:	fcmp	s0, s1
    6b7c:	cset	w0, hi  // hi = pmore
    6b80:	and	w0, w0, #0xff
    6b84:	eor	w0, w0, #0x1
    6b88:	and	w0, w0, #0xff
    6b8c:	cmp	w0, #0x0
    6b90:	b.eq	6c88 <__divsc3@@GCC_4.0.0+0x498>  // b.none
    6b94:	ldr	s0, [sp, #8]
    6b98:	fabs	s0, s0
    6b9c:	mov	w0, #0x7f7fffff            	// #2139095039
    6ba0:	fmov	s1, w0
    6ba4:	fcmp	s0, s1
    6ba8:	cset	w0, hi  // hi = pmore
    6bac:	and	w0, w0, #0xff
    6bb0:	eor	w0, w0, #0x1
    6bb4:	and	w0, w0, #0xff
    6bb8:	cmp	w0, #0x0
    6bbc:	b.eq	6c88 <__divsc3@@GCC_4.0.0+0x498>  // b.none
    6bc0:	ldr	s0, [sp, #4]
    6bc4:	fabs	s0, s0
    6bc8:	mov	w0, #0x7f7fffff            	// #2139095039
    6bcc:	fmov	s1, w0
    6bd0:	fcmp	s0, s1
    6bd4:	cset	w0, le
    6bd8:	and	w0, w0, #0xff
    6bdc:	eor	w0, w0, #0x1
    6be0:	and	w0, w0, #0xff
    6be4:	fmov	s0, w0
    6be8:	scvtf	s0, s0
    6bec:	ldr	s1, [sp, #4]
    6bf0:	movi	v2.2s, #0x80, lsl #24
    6bf4:	bit	v0.8b, v1.8b, v2.8b
    6bf8:	str	s0, [sp, #4]
    6bfc:	ldr	s0, [sp]
    6c00:	fabs	s0, s0
    6c04:	mov	w0, #0x7f7fffff            	// #2139095039
    6c08:	fmov	s1, w0
    6c0c:	fcmp	s0, s1
    6c10:	cset	w0, le
    6c14:	and	w0, w0, #0xff
    6c18:	eor	w0, w0, #0x1
    6c1c:	and	w0, w0, #0xff
    6c20:	fmov	s0, w0
    6c24:	scvtf	s0, s0
    6c28:	ldr	s1, [sp]
    6c2c:	movi	v2.2s, #0x80, lsl #24
    6c30:	bit	v0.8b, v1.8b, v2.8b
    6c34:	str	s0, [sp]
    6c38:	ldr	s1, [sp, #12]
    6c3c:	ldr	s0, [sp, #4]
    6c40:	fmul	s1, s1, s0
    6c44:	ldr	s2, [sp, #8]
    6c48:	ldr	s0, [sp]
    6c4c:	fmul	s0, s2, s0
    6c50:	fadd	s0, s1, s0
    6c54:	movi	v1.2s, #0x0
    6c58:	fmul	s0, s0, s1
    6c5c:	str	s0, [sp, #36]
    6c60:	ldr	s1, [sp, #8]
    6c64:	ldr	s0, [sp, #4]
    6c68:	fmul	s1, s1, s0
    6c6c:	ldr	s2, [sp, #12]
    6c70:	ldr	s0, [sp]
    6c74:	fmul	s0, s2, s0
    6c78:	fsub	s0, s1, s0
    6c7c:	movi	v1.2s, #0x0
    6c80:	fmul	s0, s0, s1
    6c84:	str	s0, [sp, #32]
    6c88:	ldr	s0, [sp, #44]
    6c8c:	ldr	s1, [sp, #36]
    6c90:	str	s1, [sp, #16]
    6c94:	str	s0, [sp, #20]
    6c98:	ldr	s0, [sp, #36]
    6c9c:	str	s0, [sp, #40]
    6ca0:	ldr	s0, [sp, #32]
    6ca4:	ldr	s1, [sp, #40]
    6ca8:	str	s1, [sp, #16]
    6cac:	str	s0, [sp, #20]
    6cb0:	ldr	s1, [sp, #40]
    6cb4:	ldr	s0, [sp, #32]
    6cb8:	fmov	s2, s1
    6cbc:	fmov	s1, s0
    6cc0:	fmov	s0, s2
    6cc4:	add	sp, sp, #0x30
    6cc8:	ret

0000000000006ccc <__divdc3@@GCC_4.0.0>:
    6ccc:	sub	sp, sp, #0x60
    6cd0:	str	d0, [sp, #24]
    6cd4:	str	d1, [sp, #16]
    6cd8:	str	d2, [sp, #8]
    6cdc:	str	d3, [sp]
    6ce0:	ldr	d0, [sp, #8]
    6ce4:	fabs	d1, d0
    6ce8:	ldr	d0, [sp]
    6cec:	fabs	d0, d0
    6cf0:	fcmpe	d1, d0
    6cf4:	b.pl	6d64 <__divdc3@@GCC_4.0.0+0x98>  // b.nfrst
    6cf8:	ldr	d0, [sp]
    6cfc:	ldr	d1, [sp, #8]
    6d00:	fdiv	d0, d1, d0
    6d04:	str	d0, [sp, #56]
    6d08:	ldr	d1, [sp, #8]
    6d0c:	ldr	d0, [sp, #56]
    6d10:	fmul	d0, d1, d0
    6d14:	ldr	d1, [sp]
    6d18:	fadd	d0, d1, d0
    6d1c:	str	d0, [sp, #48]
    6d20:	ldr	d1, [sp, #24]
    6d24:	ldr	d0, [sp, #56]
    6d28:	fmul	d1, d1, d0
    6d2c:	ldr	d0, [sp, #16]
    6d30:	fadd	d1, d1, d0
    6d34:	ldr	d0, [sp, #48]
    6d38:	fdiv	d0, d1, d0
    6d3c:	str	d0, [sp, #72]
    6d40:	ldr	d1, [sp, #16]
    6d44:	ldr	d0, [sp, #56]
    6d48:	fmul	d1, d1, d0
    6d4c:	ldr	d0, [sp, #24]
    6d50:	fsub	d1, d1, d0
    6d54:	ldr	d0, [sp, #48]
    6d58:	fdiv	d0, d1, d0
    6d5c:	str	d0, [sp, #64]
    6d60:	b	6dcc <__divdc3@@GCC_4.0.0+0x100>
    6d64:	ldr	d0, [sp, #8]
    6d68:	ldr	d1, [sp]
    6d6c:	fdiv	d0, d1, d0
    6d70:	str	d0, [sp, #56]
    6d74:	ldr	d1, [sp]
    6d78:	ldr	d0, [sp, #56]
    6d7c:	fmul	d0, d1, d0
    6d80:	ldr	d1, [sp, #8]
    6d84:	fadd	d0, d1, d0
    6d88:	str	d0, [sp, #48]
    6d8c:	ldr	d1, [sp, #16]
    6d90:	ldr	d0, [sp, #56]
    6d94:	fmul	d1, d1, d0
    6d98:	ldr	d0, [sp, #24]
    6d9c:	fadd	d1, d1, d0
    6da0:	ldr	d0, [sp, #48]
    6da4:	fdiv	d0, d1, d0
    6da8:	str	d0, [sp, #72]
    6dac:	ldr	d1, [sp, #24]
    6db0:	ldr	d0, [sp, #56]
    6db4:	fmul	d0, d1, d0
    6db8:	ldr	d1, [sp, #16]
    6dbc:	fsub	d1, d1, d0
    6dc0:	ldr	d0, [sp, #48]
    6dc4:	fdiv	d0, d1, d0
    6dc8:	str	d0, [sp, #64]
    6dcc:	ldr	d1, [sp, #72]
    6dd0:	ldr	d0, [sp, #72]
    6dd4:	fcmp	d1, d0
    6dd8:	b.vc	716c <__divdc3@@GCC_4.0.0+0x4a0>
    6ddc:	ldr	d1, [sp, #64]
    6de0:	ldr	d0, [sp, #64]
    6de4:	fcmp	d1, d0
    6de8:	b.vc	716c <__divdc3@@GCC_4.0.0+0x4a0>
    6dec:	ldr	d0, [sp, #8]
    6df0:	fcmp	d0, #0.0
    6df4:	b.ne	6e70 <__divdc3@@GCC_4.0.0+0x1a4>  // b.any
    6df8:	ldr	d0, [sp]
    6dfc:	fcmp	d0, #0.0
    6e00:	b.ne	6e70 <__divdc3@@GCC_4.0.0+0x1a4>  // b.any
    6e04:	ldr	d1, [sp, #24]
    6e08:	ldr	d0, [sp, #24]
    6e0c:	fcmp	d1, d0
    6e10:	b.vc	6e24 <__divdc3@@GCC_4.0.0+0x158>
    6e14:	ldr	d1, [sp, #16]
    6e18:	ldr	d0, [sp, #16]
    6e1c:	fcmp	d1, d0
    6e20:	b.vs	6e70 <__divdc3@@GCC_4.0.0+0x1a4>
    6e24:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    6e28:	fmov	d1, x0
    6e2c:	ldr	d0, [sp, #8]
    6e30:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6e34:	fmov	d2, x0
    6e38:	bif	v0.8b, v1.8b, v2.8b
    6e3c:	ldr	d1, [sp, #24]
    6e40:	fmul	d0, d1, d0
    6e44:	str	d0, [sp, #72]
    6e48:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    6e4c:	fmov	d1, x0
    6e50:	ldr	d0, [sp, #8]
    6e54:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6e58:	fmov	d2, x0
    6e5c:	bif	v0.8b, v1.8b, v2.8b
    6e60:	ldr	d1, [sp, #16]
    6e64:	fmul	d0, d1, d0
    6e68:	str	d0, [sp, #64]
    6e6c:	b	716c <__divdc3@@GCC_4.0.0+0x4a0>
    6e70:	ldr	d0, [sp, #24]
    6e74:	fabs	d0, d0
    6e78:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6e7c:	fmov	d1, x0
    6e80:	fcmp	d0, d1
    6e84:	cset	w0, le
    6e88:	and	w0, w0, #0xff
    6e8c:	eor	w0, w0, #0x1
    6e90:	and	w0, w0, #0xff
    6e94:	cmp	w0, #0x0
    6e98:	b.ne	6ec8 <__divdc3@@GCC_4.0.0+0x1fc>  // b.any
    6e9c:	ldr	d0, [sp, #16]
    6ea0:	fabs	d0, d0
    6ea4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6ea8:	fmov	d1, x0
    6eac:	fcmp	d0, d1
    6eb0:	cset	w0, le
    6eb4:	and	w0, w0, #0xff
    6eb8:	eor	w0, w0, #0x1
    6ebc:	and	w0, w0, #0xff
    6ec0:	cmp	w0, #0x0
    6ec4:	b.eq	6ff4 <__divdc3@@GCC_4.0.0+0x328>  // b.none
    6ec8:	ldr	d0, [sp, #8]
    6ecc:	fabs	d0, d0
    6ed0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6ed4:	fmov	d1, x0
    6ed8:	fcmp	d0, d1
    6edc:	cset	w0, hi  // hi = pmore
    6ee0:	and	w0, w0, #0xff
    6ee4:	eor	w0, w0, #0x1
    6ee8:	and	w0, w0, #0xff
    6eec:	cmp	w0, #0x0
    6ef0:	b.eq	6ff4 <__divdc3@@GCC_4.0.0+0x328>  // b.none
    6ef4:	ldr	d0, [sp]
    6ef8:	fabs	d0, d0
    6efc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6f00:	fmov	d1, x0
    6f04:	fcmp	d0, d1
    6f08:	cset	w0, hi  // hi = pmore
    6f0c:	and	w0, w0, #0xff
    6f10:	eor	w0, w0, #0x1
    6f14:	and	w0, w0, #0xff
    6f18:	cmp	w0, #0x0
    6f1c:	b.eq	6ff4 <__divdc3@@GCC_4.0.0+0x328>  // b.none
    6f20:	ldr	d0, [sp, #24]
    6f24:	fabs	d0, d0
    6f28:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6f2c:	fmov	d1, x0
    6f30:	fcmp	d0, d1
    6f34:	cset	w0, le
    6f38:	and	w0, w0, #0xff
    6f3c:	eor	w0, w0, #0x1
    6f40:	and	w0, w0, #0xff
    6f44:	scvtf	d0, w0
    6f48:	ldr	d1, [sp, #24]
    6f4c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6f50:	fmov	d2, x0
    6f54:	bit	v0.8b, v1.8b, v2.8b
    6f58:	str	d0, [sp, #24]
    6f5c:	ldr	d0, [sp, #16]
    6f60:	fabs	d0, d0
    6f64:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6f68:	fmov	d1, x0
    6f6c:	fcmp	d0, d1
    6f70:	cset	w0, le
    6f74:	and	w0, w0, #0xff
    6f78:	eor	w0, w0, #0x1
    6f7c:	and	w0, w0, #0xff
    6f80:	scvtf	d0, w0
    6f84:	ldr	d1, [sp, #16]
    6f88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6f8c:	fmov	d2, x0
    6f90:	bit	v0.8b, v1.8b, v2.8b
    6f94:	str	d0, [sp, #16]
    6f98:	ldr	d1, [sp, #24]
    6f9c:	ldr	d0, [sp, #8]
    6fa0:	fmul	d1, d1, d0
    6fa4:	ldr	d2, [sp, #16]
    6fa8:	ldr	d0, [sp]
    6fac:	fmul	d0, d2, d0
    6fb0:	fadd	d0, d1, d0
    6fb4:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    6fb8:	fmov	d1, x0
    6fbc:	fmul	d0, d0, d1
    6fc0:	str	d0, [sp, #72]
    6fc4:	ldr	d1, [sp, #16]
    6fc8:	ldr	d0, [sp, #8]
    6fcc:	fmul	d1, d1, d0
    6fd0:	ldr	d2, [sp, #24]
    6fd4:	ldr	d0, [sp]
    6fd8:	fmul	d0, d2, d0
    6fdc:	fsub	d0, d1, d0
    6fe0:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    6fe4:	fmov	d1, x0
    6fe8:	fmul	d0, d0, d1
    6fec:	str	d0, [sp, #64]
    6ff0:	b	716c <__divdc3@@GCC_4.0.0+0x4a0>
    6ff4:	ldr	d0, [sp, #8]
    6ff8:	fabs	d0, d0
    6ffc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7000:	fmov	d1, x0
    7004:	fcmp	d0, d1
    7008:	cset	w0, le
    700c:	and	w0, w0, #0xff
    7010:	eor	w0, w0, #0x1
    7014:	and	w0, w0, #0xff
    7018:	cmp	w0, #0x0
    701c:	b.ne	704c <__divdc3@@GCC_4.0.0+0x380>  // b.any
    7020:	ldr	d0, [sp]
    7024:	fabs	d0, d0
    7028:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    702c:	fmov	d1, x0
    7030:	fcmp	d0, d1
    7034:	cset	w0, le
    7038:	and	w0, w0, #0xff
    703c:	eor	w0, w0, #0x1
    7040:	and	w0, w0, #0xff
    7044:	cmp	w0, #0x0
    7048:	b.eq	716c <__divdc3@@GCC_4.0.0+0x4a0>  // b.none
    704c:	ldr	d0, [sp, #24]
    7050:	fabs	d0, d0
    7054:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7058:	fmov	d1, x0
    705c:	fcmp	d0, d1
    7060:	cset	w0, hi  // hi = pmore
    7064:	and	w0, w0, #0xff
    7068:	eor	w0, w0, #0x1
    706c:	and	w0, w0, #0xff
    7070:	cmp	w0, #0x0
    7074:	b.eq	716c <__divdc3@@GCC_4.0.0+0x4a0>  // b.none
    7078:	ldr	d0, [sp, #16]
    707c:	fabs	d0, d0
    7080:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7084:	fmov	d1, x0
    7088:	fcmp	d0, d1
    708c:	cset	w0, hi  // hi = pmore
    7090:	and	w0, w0, #0xff
    7094:	eor	w0, w0, #0x1
    7098:	and	w0, w0, #0xff
    709c:	cmp	w0, #0x0
    70a0:	b.eq	716c <__divdc3@@GCC_4.0.0+0x4a0>  // b.none
    70a4:	ldr	d0, [sp, #8]
    70a8:	fabs	d0, d0
    70ac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    70b0:	fmov	d1, x0
    70b4:	fcmp	d0, d1
    70b8:	cset	w0, le
    70bc:	and	w0, w0, #0xff
    70c0:	eor	w0, w0, #0x1
    70c4:	and	w0, w0, #0xff
    70c8:	scvtf	d0, w0
    70cc:	ldr	d1, [sp, #8]
    70d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    70d4:	fmov	d2, x0
    70d8:	bit	v0.8b, v1.8b, v2.8b
    70dc:	str	d0, [sp, #8]
    70e0:	ldr	d0, [sp]
    70e4:	fabs	d0, d0
    70e8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    70ec:	fmov	d1, x0
    70f0:	fcmp	d0, d1
    70f4:	cset	w0, le
    70f8:	and	w0, w0, #0xff
    70fc:	eor	w0, w0, #0x1
    7100:	and	w0, w0, #0xff
    7104:	scvtf	d0, w0
    7108:	ldr	d1, [sp]
    710c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7110:	fmov	d2, x0
    7114:	bit	v0.8b, v1.8b, v2.8b
    7118:	str	d0, [sp]
    711c:	ldr	d1, [sp, #24]
    7120:	ldr	d0, [sp, #8]
    7124:	fmul	d1, d1, d0
    7128:	ldr	d2, [sp, #16]
    712c:	ldr	d0, [sp]
    7130:	fmul	d0, d2, d0
    7134:	fadd	d0, d1, d0
    7138:	movi	d1, #0x0
    713c:	fmul	d0, d0, d1
    7140:	str	d0, [sp, #72]
    7144:	ldr	d1, [sp, #16]
    7148:	ldr	d0, [sp, #8]
    714c:	fmul	d1, d1, d0
    7150:	ldr	d2, [sp, #24]
    7154:	ldr	d0, [sp]
    7158:	fmul	d0, d2, d0
    715c:	fsub	d0, d1, d0
    7160:	movi	d1, #0x0
    7164:	fmul	d0, d0, d1
    7168:	str	d0, [sp, #64]
    716c:	ldr	d0, [sp, #88]
    7170:	ldr	d1, [sp, #72]
    7174:	str	d1, [sp, #32]
    7178:	str	d0, [sp, #40]
    717c:	ldr	d0, [sp, #72]
    7180:	str	d0, [sp, #80]
    7184:	ldr	d0, [sp, #64]
    7188:	ldr	d1, [sp, #80]
    718c:	str	d1, [sp, #32]
    7190:	str	d0, [sp, #40]
    7194:	ldr	d1, [sp, #80]
    7198:	ldr	d0, [sp, #64]
    719c:	fmov	d2, d1
    71a0:	fmov	d1, d0
    71a4:	fmov	d0, d2
    71a8:	add	sp, sp, #0x60
    71ac:	ret

00000000000071b0 <__divtc3@@GCC_4.0.0>:
    71b0:	stp	x29, x30, [sp, #-416]!
    71b4:	mov	x29, sp
    71b8:	str	x19, [sp, #16]
    71bc:	str	q0, [sp, #272]
    71c0:	str	q1, [sp, #256]
    71c4:	str	q2, [sp, #240]
    71c8:	str	q3, [sp, #224]
    71cc:	ldr	x2, [sp, #240]
    71d0:	ldr	x0, [sp, #248]
    71d4:	and	x3, x0, #0x7fffffffffffffff
    71d8:	ldr	x4, [sp, #224]
    71dc:	ldr	x0, [sp, #232]
    71e0:	and	x5, x0, #0x7fffffffffffffff
    71e4:	fmov	d1, x4
    71e8:	fmov	v1.d[1], x5
    71ec:	fmov	d0, x2
    71f0:	fmov	v0.d[1], x3
    71f4:	bl	2d50 <__lttf2@plt>
    71f8:	cmp	w0, #0x0
    71fc:	b.ge	7270 <__divtc3@@GCC_4.0.0+0xc0>  // b.tcont
    7200:	ldr	q1, [sp, #224]
    7204:	ldr	q0, [sp, #240]
    7208:	bl	2cc0 <__divtf3@plt>
    720c:	str	q0, [sp, #336]
    7210:	ldr	q1, [sp, #336]
    7214:	ldr	q0, [sp, #240]
    7218:	bl	2b70 <__multf3@plt>
    721c:	mov	v1.16b, v0.16b
    7220:	ldr	q0, [sp, #224]
    7224:	bl	2c80 <__addtf3@plt>
    7228:	str	q0, [sp, #320]
    722c:	ldr	q1, [sp, #336]
    7230:	ldr	q0, [sp, #272]
    7234:	bl	2b70 <__multf3@plt>
    7238:	ldr	q1, [sp, #256]
    723c:	bl	2c80 <__addtf3@plt>
    7240:	ldr	q1, [sp, #320]
    7244:	bl	2cc0 <__divtf3@plt>
    7248:	str	q0, [sp, #368]
    724c:	ldr	q1, [sp, #336]
    7250:	ldr	q0, [sp, #256]
    7254:	bl	2b70 <__multf3@plt>
    7258:	ldr	q1, [sp, #272]
    725c:	bl	2df0 <__subtf3@plt>
    7260:	ldr	q1, [sp, #320]
    7264:	bl	2cc0 <__divtf3@plt>
    7268:	str	q0, [sp, #352]
    726c:	b	72e0 <__divtc3@@GCC_4.0.0+0x130>
    7270:	ldr	q1, [sp, #240]
    7274:	ldr	q0, [sp, #224]
    7278:	bl	2cc0 <__divtf3@plt>
    727c:	str	q0, [sp, #336]
    7280:	ldr	q1, [sp, #336]
    7284:	ldr	q0, [sp, #224]
    7288:	bl	2b70 <__multf3@plt>
    728c:	mov	v1.16b, v0.16b
    7290:	ldr	q0, [sp, #240]
    7294:	bl	2c80 <__addtf3@plt>
    7298:	str	q0, [sp, #320]
    729c:	ldr	q1, [sp, #336]
    72a0:	ldr	q0, [sp, #256]
    72a4:	bl	2b70 <__multf3@plt>
    72a8:	ldr	q1, [sp, #272]
    72ac:	bl	2c80 <__addtf3@plt>
    72b0:	ldr	q1, [sp, #320]
    72b4:	bl	2cc0 <__divtf3@plt>
    72b8:	str	q0, [sp, #368]
    72bc:	ldr	q1, [sp, #336]
    72c0:	ldr	q0, [sp, #272]
    72c4:	bl	2b70 <__multf3@plt>
    72c8:	mov	v1.16b, v0.16b
    72cc:	ldr	q0, [sp, #256]
    72d0:	bl	2df0 <__subtf3@plt>
    72d4:	ldr	q1, [sp, #320]
    72d8:	bl	2cc0 <__divtf3@plt>
    72dc:	str	q0, [sp, #352]
    72e0:	ldr	q1, [sp, #368]
    72e4:	ldr	q0, [sp, #368]
    72e8:	bl	2da0 <__unordtf2@plt>
    72ec:	cmp	w0, #0x0
    72f0:	b.eq	7a10 <__divtc3@@GCC_4.0.0+0x860>  // b.none
    72f4:	ldr	q1, [sp, #352]
    72f8:	ldr	q0, [sp, #352]
    72fc:	bl	2da0 <__unordtf2@plt>
    7300:	cmp	w0, #0x0
    7304:	b.eq	7a10 <__divtc3@@GCC_4.0.0+0x860>  // b.none
    7308:	movi	v1.2d, #0x0
    730c:	ldr	q0, [sp, #240]
    7310:	bl	2b90 <__eqtf2@plt>
    7314:	cmp	w0, #0x0
    7318:	b.ne	73cc <__divtc3@@GCC_4.0.0+0x21c>  // b.any
    731c:	movi	v1.2d, #0x0
    7320:	ldr	q0, [sp, #224]
    7324:	bl	2b90 <__eqtf2@plt>
    7328:	cmp	w0, #0x0
    732c:	b.ne	73cc <__divtc3@@GCC_4.0.0+0x21c>  // b.any
    7330:	ldr	q1, [sp, #272]
    7334:	ldr	q0, [sp, #272]
    7338:	bl	2da0 <__unordtf2@plt>
    733c:	cmp	w0, #0x0
    7340:	b.eq	7358 <__divtc3@@GCC_4.0.0+0x1a8>  // b.none
    7344:	ldr	q1, [sp, #256]
    7348:	ldr	q0, [sp, #256]
    734c:	bl	2da0 <__unordtf2@plt>
    7350:	cmp	w0, #0x0
    7354:	b.ne	73cc <__divtc3@@GCC_4.0.0+0x21c>  // b.any
    7358:	ldr	x0, [sp, #248]
    735c:	and	x0, x0, #0x8000000000000000
    7360:	adrp	x1, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7364:	add	x1, x1, #0x330
    7368:	ldr	q0, [x1]
    736c:	cmp	x0, #0x0
    7370:	b.eq	7380 <__divtc3@@GCC_4.0.0+0x1d0>  // b.none
    7374:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7378:	add	x0, x0, #0x340
    737c:	ldr	q0, [x0]
    7380:	mov	v1.16b, v0.16b
    7384:	ldr	q0, [sp, #272]
    7388:	bl	2b70 <__multf3@plt>
    738c:	str	q0, [sp, #368]
    7390:	ldr	x0, [sp, #248]
    7394:	and	x0, x0, #0x8000000000000000
    7398:	adrp	x1, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    739c:	add	x1, x1, #0x330
    73a0:	ldr	q0, [x1]
    73a4:	cmp	x0, #0x0
    73a8:	b.eq	73b8 <__divtc3@@GCC_4.0.0+0x208>  // b.none
    73ac:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    73b0:	add	x0, x0, #0x340
    73b4:	ldr	q0, [x0]
    73b8:	mov	v1.16b, v0.16b
    73bc:	ldr	q0, [sp, #256]
    73c0:	bl	2b70 <__multf3@plt>
    73c4:	str	q0, [sp, #352]
    73c8:	b	7a10 <__divtc3@@GCC_4.0.0+0x860>
    73cc:	ldr	x0, [sp, #272]
    73d0:	str	x0, [sp, #32]
    73d4:	ldr	x0, [sp, #280]
    73d8:	and	x0, x0, #0x7fffffffffffffff
    73dc:	str	x0, [sp, #40]
    73e0:	mov	w19, #0x1                   	// #1
    73e4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    73e8:	add	x0, x0, #0x350
    73ec:	ldr	q1, [x0]
    73f0:	ldr	q0, [sp, #32]
    73f4:	bl	2da0 <__unordtf2@plt>
    73f8:	cmp	w0, #0x0
    73fc:	b.ne	7420 <__divtc3@@GCC_4.0.0+0x270>  // b.any
    7400:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7404:	add	x0, x0, #0x350
    7408:	ldr	q1, [x0]
    740c:	ldr	q0, [sp, #32]
    7410:	bl	2c20 <__letf2@plt>
    7414:	cmp	w0, #0x0
    7418:	b.le	7420 <__divtc3@@GCC_4.0.0+0x270>
    741c:	mov	w19, #0x0                   	// #0
    7420:	and	w0, w19, #0xff
    7424:	eor	w0, w0, #0x1
    7428:	and	w0, w0, #0xff
    742c:	cmp	w0, #0x0
    7430:	b.ne	749c <__divtc3@@GCC_4.0.0+0x2ec>  // b.any
    7434:	ldr	x0, [sp, #256]
    7438:	str	x0, [sp, #48]
    743c:	ldr	x0, [sp, #264]
    7440:	and	x0, x0, #0x7fffffffffffffff
    7444:	str	x0, [sp, #56]
    7448:	mov	w19, #0x1                   	// #1
    744c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7450:	add	x0, x0, #0x350
    7454:	ldr	q1, [x0]
    7458:	ldr	q0, [sp, #48]
    745c:	bl	2da0 <__unordtf2@plt>
    7460:	cmp	w0, #0x0
    7464:	b.ne	7488 <__divtc3@@GCC_4.0.0+0x2d8>  // b.any
    7468:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    746c:	add	x0, x0, #0x350
    7470:	ldr	q1, [x0]
    7474:	ldr	q0, [sp, #48]
    7478:	bl	2c20 <__letf2@plt>
    747c:	cmp	w0, #0x0
    7480:	b.le	7488 <__divtc3@@GCC_4.0.0+0x2d8>
    7484:	mov	w19, #0x0                   	// #0
    7488:	and	w0, w19, #0xff
    748c:	eor	w0, w0, #0x1
    7490:	and	w0, w0, #0xff
    7494:	cmp	w0, #0x0
    7498:	b.eq	76f8 <__divtc3@@GCC_4.0.0+0x548>  // b.none
    749c:	ldr	x0, [sp, #240]
    74a0:	str	x0, [sp, #64]
    74a4:	ldr	x0, [sp, #248]
    74a8:	and	x0, x0, #0x7fffffffffffffff
    74ac:	str	x0, [sp, #72]
    74b0:	mov	w19, #0x1                   	// #1
    74b4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    74b8:	add	x0, x0, #0x350
    74bc:	ldr	q1, [x0]
    74c0:	ldr	q0, [sp, #64]
    74c4:	bl	2da0 <__unordtf2@plt>
    74c8:	cmp	w0, #0x0
    74cc:	b.ne	74f0 <__divtc3@@GCC_4.0.0+0x340>  // b.any
    74d0:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    74d4:	add	x0, x0, #0x350
    74d8:	ldr	q1, [x0]
    74dc:	ldr	q0, [sp, #64]
    74e0:	bl	2c50 <__gttf2@plt>
    74e4:	cmp	w0, #0x0
    74e8:	b.gt	74f0 <__divtc3@@GCC_4.0.0+0x340>
    74ec:	mov	w19, #0x0                   	// #0
    74f0:	and	w0, w19, #0xff
    74f4:	eor	w0, w0, #0x1
    74f8:	and	w0, w0, #0xff
    74fc:	cmp	w0, #0x0
    7500:	b.eq	76f8 <__divtc3@@GCC_4.0.0+0x548>  // b.none
    7504:	ldr	x0, [sp, #224]
    7508:	str	x0, [sp, #80]
    750c:	ldr	x0, [sp, #232]
    7510:	and	x0, x0, #0x7fffffffffffffff
    7514:	str	x0, [sp, #88]
    7518:	mov	w19, #0x1                   	// #1
    751c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7520:	add	x0, x0, #0x350
    7524:	ldr	q1, [x0]
    7528:	ldr	q0, [sp, #80]
    752c:	bl	2da0 <__unordtf2@plt>
    7530:	cmp	w0, #0x0
    7534:	b.ne	7558 <__divtc3@@GCC_4.0.0+0x3a8>  // b.any
    7538:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    753c:	add	x0, x0, #0x350
    7540:	ldr	q1, [x0]
    7544:	ldr	q0, [sp, #80]
    7548:	bl	2c50 <__gttf2@plt>
    754c:	cmp	w0, #0x0
    7550:	b.gt	7558 <__divtc3@@GCC_4.0.0+0x3a8>
    7554:	mov	w19, #0x0                   	// #0
    7558:	and	w0, w19, #0xff
    755c:	eor	w0, w0, #0x1
    7560:	and	w0, w0, #0xff
    7564:	cmp	w0, #0x0
    7568:	b.eq	76f8 <__divtc3@@GCC_4.0.0+0x548>  // b.none
    756c:	ldr	x0, [sp, #272]
    7570:	str	x0, [sp, #96]
    7574:	ldr	x0, [sp, #280]
    7578:	and	x0, x0, #0x7fffffffffffffff
    757c:	str	x0, [sp, #104]
    7580:	mov	w19, #0x1                   	// #1
    7584:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7588:	add	x0, x0, #0x350
    758c:	ldr	q1, [x0]
    7590:	ldr	q0, [sp, #96]
    7594:	bl	2da0 <__unordtf2@plt>
    7598:	cmp	w0, #0x0
    759c:	b.ne	75c0 <__divtc3@@GCC_4.0.0+0x410>  // b.any
    75a0:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    75a4:	add	x0, x0, #0x350
    75a8:	ldr	q1, [x0]
    75ac:	ldr	q0, [sp, #96]
    75b0:	bl	2c20 <__letf2@plt>
    75b4:	cmp	w0, #0x0
    75b8:	b.le	75c0 <__divtc3@@GCC_4.0.0+0x410>
    75bc:	mov	w19, #0x0                   	// #0
    75c0:	and	w0, w19, #0xff
    75c4:	eor	w0, w0, #0x1
    75c8:	and	w0, w0, #0xff
    75cc:	bl	2de0 <__floatsitf@plt>
    75d0:	str	q0, [sp, #32]
    75d4:	ldr	x0, [sp, #32]
    75d8:	str	x0, [sp, #272]
    75dc:	ldr	x0, [sp, #40]
    75e0:	and	x1, x0, #0x7fffffffffffffff
    75e4:	ldr	x0, [sp, #280]
    75e8:	and	x0, x0, #0x8000000000000000
    75ec:	orr	x0, x1, x0
    75f0:	str	x0, [sp, #280]
    75f4:	ldr	x0, [sp, #256]
    75f8:	str	x0, [sp, #112]
    75fc:	ldr	x0, [sp, #264]
    7600:	and	x0, x0, #0x7fffffffffffffff
    7604:	str	x0, [sp, #120]
    7608:	mov	w19, #0x1                   	// #1
    760c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7610:	add	x0, x0, #0x350
    7614:	ldr	q1, [x0]
    7618:	ldr	q0, [sp, #112]
    761c:	bl	2da0 <__unordtf2@plt>
    7620:	cmp	w0, #0x0
    7624:	b.ne	7648 <__divtc3@@GCC_4.0.0+0x498>  // b.any
    7628:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    762c:	add	x0, x0, #0x350
    7630:	ldr	q1, [x0]
    7634:	ldr	q0, [sp, #112]
    7638:	bl	2c20 <__letf2@plt>
    763c:	cmp	w0, #0x0
    7640:	b.le	7648 <__divtc3@@GCC_4.0.0+0x498>
    7644:	mov	w19, #0x0                   	// #0
    7648:	and	w0, w19, #0xff
    764c:	eor	w0, w0, #0x1
    7650:	and	w0, w0, #0xff
    7654:	bl	2de0 <__floatsitf@plt>
    7658:	str	q0, [sp, #32]
    765c:	ldr	x0, [sp, #32]
    7660:	str	x0, [sp, #256]
    7664:	ldr	x0, [sp, #40]
    7668:	and	x1, x0, #0x7fffffffffffffff
    766c:	ldr	x0, [sp, #264]
    7670:	and	x0, x0, #0x8000000000000000
    7674:	orr	x0, x1, x0
    7678:	str	x0, [sp, #264]
    767c:	ldr	q1, [sp, #240]
    7680:	ldr	q0, [sp, #272]
    7684:	bl	2b70 <__multf3@plt>
    7688:	str	q0, [sp, #32]
    768c:	ldr	q1, [sp, #224]
    7690:	ldr	q0, [sp, #256]
    7694:	bl	2b70 <__multf3@plt>
    7698:	mov	v1.16b, v0.16b
    769c:	ldr	q0, [sp, #32]
    76a0:	bl	2c80 <__addtf3@plt>
    76a4:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    76a8:	add	x0, x0, #0x330
    76ac:	ldr	q1, [x0]
    76b0:	bl	2b70 <__multf3@plt>
    76b4:	str	q0, [sp, #368]
    76b8:	ldr	q1, [sp, #240]
    76bc:	ldr	q0, [sp, #256]
    76c0:	bl	2b70 <__multf3@plt>
    76c4:	str	q0, [sp, #32]
    76c8:	ldr	q1, [sp, #224]
    76cc:	ldr	q0, [sp, #272]
    76d0:	bl	2b70 <__multf3@plt>
    76d4:	mov	v1.16b, v0.16b
    76d8:	ldr	q0, [sp, #32]
    76dc:	bl	2df0 <__subtf3@plt>
    76e0:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    76e4:	add	x0, x0, #0x330
    76e8:	ldr	q1, [x0]
    76ec:	bl	2b70 <__multf3@plt>
    76f0:	str	q0, [sp, #352]
    76f4:	b	7a10 <__divtc3@@GCC_4.0.0+0x860>
    76f8:	ldr	x0, [sp, #240]
    76fc:	str	x0, [sp, #128]
    7700:	ldr	x0, [sp, #248]
    7704:	and	x0, x0, #0x7fffffffffffffff
    7708:	str	x0, [sp, #136]
    770c:	mov	w19, #0x1                   	// #1
    7710:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7714:	add	x0, x0, #0x350
    7718:	ldr	q1, [x0]
    771c:	ldr	q0, [sp, #128]
    7720:	bl	2da0 <__unordtf2@plt>
    7724:	cmp	w0, #0x0
    7728:	b.ne	774c <__divtc3@@GCC_4.0.0+0x59c>  // b.any
    772c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7730:	add	x0, x0, #0x350
    7734:	ldr	q1, [x0]
    7738:	ldr	q0, [sp, #128]
    773c:	bl	2c20 <__letf2@plt>
    7740:	cmp	w0, #0x0
    7744:	b.le	774c <__divtc3@@GCC_4.0.0+0x59c>
    7748:	mov	w19, #0x0                   	// #0
    774c:	and	w0, w19, #0xff
    7750:	eor	w0, w0, #0x1
    7754:	and	w0, w0, #0xff
    7758:	cmp	w0, #0x0
    775c:	b.ne	77c8 <__divtc3@@GCC_4.0.0+0x618>  // b.any
    7760:	ldr	x0, [sp, #224]
    7764:	str	x0, [sp, #144]
    7768:	ldr	x0, [sp, #232]
    776c:	and	x0, x0, #0x7fffffffffffffff
    7770:	str	x0, [sp, #152]
    7774:	mov	w19, #0x1                   	// #1
    7778:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    777c:	add	x0, x0, #0x350
    7780:	ldr	q1, [x0]
    7784:	ldr	q0, [sp, #144]
    7788:	bl	2da0 <__unordtf2@plt>
    778c:	cmp	w0, #0x0
    7790:	b.ne	77b4 <__divtc3@@GCC_4.0.0+0x604>  // b.any
    7794:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7798:	add	x0, x0, #0x350
    779c:	ldr	q1, [x0]
    77a0:	ldr	q0, [sp, #144]
    77a4:	bl	2c20 <__letf2@plt>
    77a8:	cmp	w0, #0x0
    77ac:	b.le	77b4 <__divtc3@@GCC_4.0.0+0x604>
    77b0:	mov	w19, #0x0                   	// #0
    77b4:	and	w0, w19, #0xff
    77b8:	eor	w0, w0, #0x1
    77bc:	and	w0, w0, #0xff
    77c0:	cmp	w0, #0x0
    77c4:	b.eq	7a10 <__divtc3@@GCC_4.0.0+0x860>  // b.none
    77c8:	ldr	x0, [sp, #272]
    77cc:	str	x0, [sp, #160]
    77d0:	ldr	x0, [sp, #280]
    77d4:	and	x0, x0, #0x7fffffffffffffff
    77d8:	str	x0, [sp, #168]
    77dc:	mov	w19, #0x1                   	// #1
    77e0:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    77e4:	add	x0, x0, #0x350
    77e8:	ldr	q1, [x0]
    77ec:	ldr	q0, [sp, #160]
    77f0:	bl	2da0 <__unordtf2@plt>
    77f4:	cmp	w0, #0x0
    77f8:	b.ne	781c <__divtc3@@GCC_4.0.0+0x66c>  // b.any
    77fc:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7800:	add	x0, x0, #0x350
    7804:	ldr	q1, [x0]
    7808:	ldr	q0, [sp, #160]
    780c:	bl	2c50 <__gttf2@plt>
    7810:	cmp	w0, #0x0
    7814:	b.gt	781c <__divtc3@@GCC_4.0.0+0x66c>
    7818:	mov	w19, #0x0                   	// #0
    781c:	and	w0, w19, #0xff
    7820:	eor	w0, w0, #0x1
    7824:	and	w0, w0, #0xff
    7828:	cmp	w0, #0x0
    782c:	b.eq	7a10 <__divtc3@@GCC_4.0.0+0x860>  // b.none
    7830:	ldr	x0, [sp, #256]
    7834:	str	x0, [sp, #176]
    7838:	ldr	x0, [sp, #264]
    783c:	and	x0, x0, #0x7fffffffffffffff
    7840:	str	x0, [sp, #184]
    7844:	mov	w19, #0x1                   	// #1
    7848:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    784c:	add	x0, x0, #0x350
    7850:	ldr	q1, [x0]
    7854:	ldr	q0, [sp, #176]
    7858:	bl	2da0 <__unordtf2@plt>
    785c:	cmp	w0, #0x0
    7860:	b.ne	7884 <__divtc3@@GCC_4.0.0+0x6d4>  // b.any
    7864:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7868:	add	x0, x0, #0x350
    786c:	ldr	q1, [x0]
    7870:	ldr	q0, [sp, #176]
    7874:	bl	2c50 <__gttf2@plt>
    7878:	cmp	w0, #0x0
    787c:	b.gt	7884 <__divtc3@@GCC_4.0.0+0x6d4>
    7880:	mov	w19, #0x0                   	// #0
    7884:	and	w0, w19, #0xff
    7888:	eor	w0, w0, #0x1
    788c:	and	w0, w0, #0xff
    7890:	cmp	w0, #0x0
    7894:	b.eq	7a10 <__divtc3@@GCC_4.0.0+0x860>  // b.none
    7898:	ldr	x0, [sp, #240]
    789c:	str	x0, [sp, #192]
    78a0:	ldr	x0, [sp, #248]
    78a4:	and	x0, x0, #0x7fffffffffffffff
    78a8:	str	x0, [sp, #200]
    78ac:	mov	w19, #0x1                   	// #1
    78b0:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    78b4:	add	x0, x0, #0x350
    78b8:	ldr	q1, [x0]
    78bc:	ldr	q0, [sp, #192]
    78c0:	bl	2da0 <__unordtf2@plt>
    78c4:	cmp	w0, #0x0
    78c8:	b.ne	78ec <__divtc3@@GCC_4.0.0+0x73c>  // b.any
    78cc:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    78d0:	add	x0, x0, #0x350
    78d4:	ldr	q1, [x0]
    78d8:	ldr	q0, [sp, #192]
    78dc:	bl	2c20 <__letf2@plt>
    78e0:	cmp	w0, #0x0
    78e4:	b.le	78ec <__divtc3@@GCC_4.0.0+0x73c>
    78e8:	mov	w19, #0x0                   	// #0
    78ec:	and	w0, w19, #0xff
    78f0:	eor	w0, w0, #0x1
    78f4:	and	w0, w0, #0xff
    78f8:	bl	2de0 <__floatsitf@plt>
    78fc:	str	q0, [sp, #32]
    7900:	ldr	x0, [sp, #32]
    7904:	str	x0, [sp, #240]
    7908:	ldr	x0, [sp, #40]
    790c:	and	x1, x0, #0x7fffffffffffffff
    7910:	ldr	x0, [sp, #248]
    7914:	and	x0, x0, #0x8000000000000000
    7918:	orr	x0, x1, x0
    791c:	str	x0, [sp, #248]
    7920:	ldr	x0, [sp, #224]
    7924:	str	x0, [sp, #208]
    7928:	ldr	x0, [sp, #232]
    792c:	and	x0, x0, #0x7fffffffffffffff
    7930:	str	x0, [sp, #216]
    7934:	mov	w19, #0x1                   	// #1
    7938:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    793c:	add	x0, x0, #0x350
    7940:	ldr	q1, [x0]
    7944:	ldr	q0, [sp, #208]
    7948:	bl	2da0 <__unordtf2@plt>
    794c:	cmp	w0, #0x0
    7950:	b.ne	7974 <__divtc3@@GCC_4.0.0+0x7c4>  // b.any
    7954:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7958:	add	x0, x0, #0x350
    795c:	ldr	q1, [x0]
    7960:	ldr	q0, [sp, #208]
    7964:	bl	2c20 <__letf2@plt>
    7968:	cmp	w0, #0x0
    796c:	b.le	7974 <__divtc3@@GCC_4.0.0+0x7c4>
    7970:	mov	w19, #0x0                   	// #0
    7974:	and	w0, w19, #0xff
    7978:	eor	w0, w0, #0x1
    797c:	and	w0, w0, #0xff
    7980:	bl	2de0 <__floatsitf@plt>
    7984:	str	q0, [sp, #32]
    7988:	ldr	x0, [sp, #32]
    798c:	str	x0, [sp, #224]
    7990:	ldr	x0, [sp, #40]
    7994:	and	x1, x0, #0x7fffffffffffffff
    7998:	ldr	x0, [sp, #232]
    799c:	and	x0, x0, #0x8000000000000000
    79a0:	orr	x0, x1, x0
    79a4:	str	x0, [sp, #232]
    79a8:	ldr	q1, [sp, #240]
    79ac:	ldr	q0, [sp, #272]
    79b0:	bl	2b70 <__multf3@plt>
    79b4:	str	q0, [sp, #32]
    79b8:	ldr	q1, [sp, #224]
    79bc:	ldr	q0, [sp, #256]
    79c0:	bl	2b70 <__multf3@plt>
    79c4:	mov	v1.16b, v0.16b
    79c8:	ldr	q0, [sp, #32]
    79cc:	bl	2c80 <__addtf3@plt>
    79d0:	movi	v1.2d, #0x0
    79d4:	bl	2b70 <__multf3@plt>
    79d8:	str	q0, [sp, #368]
    79dc:	ldr	q1, [sp, #240]
    79e0:	ldr	q0, [sp, #256]
    79e4:	bl	2b70 <__multf3@plt>
    79e8:	str	q0, [sp, #32]
    79ec:	ldr	q1, [sp, #224]
    79f0:	ldr	q0, [sp, #272]
    79f4:	bl	2b70 <__multf3@plt>
    79f8:	mov	v1.16b, v0.16b
    79fc:	ldr	q0, [sp, #32]
    7a00:	bl	2df0 <__subtf3@plt>
    7a04:	movi	v1.2d, #0x0
    7a08:	bl	2b70 <__multf3@plt>
    7a0c:	str	q0, [sp, #352]
    7a10:	ldr	q0, [sp, #400]
    7a14:	ldr	q2, [sp, #368]
    7a18:	str	q2, [sp, #288]
    7a1c:	str	q0, [sp, #304]
    7a20:	ldr	q0, [sp, #368]
    7a24:	str	q0, [sp, #384]
    7a28:	ldr	q0, [sp, #352]
    7a2c:	ldr	q2, [sp, #384]
    7a30:	str	q2, [sp, #288]
    7a34:	str	q0, [sp, #304]
    7a38:	ldr	q2, [sp, #384]
    7a3c:	ldr	q0, [sp, #352]
    7a40:	mov	v4.16b, v2.16b
    7a44:	mov	v2.16b, v0.16b
    7a48:	mov	v0.16b, v4.16b
    7a4c:	mov	v1.16b, v2.16b
    7a50:	ldr	x19, [sp, #16]
    7a54:	ldp	x29, x30, [sp], #416
    7a58:	ret

0000000000007a5c <__bswapsi2@@GCC_4.3.0>:
    7a5c:	sub	sp, sp, #0x10
    7a60:	str	w0, [sp, #12]
    7a64:	ldr	w0, [sp, #12]
    7a68:	lsr	w1, w0, #24
    7a6c:	ldr	w0, [sp, #12]
    7a70:	asr	w0, w0, #8
    7a74:	and	w0, w0, #0xff00
    7a78:	orr	w1, w1, w0
    7a7c:	ldr	w0, [sp, #12]
    7a80:	lsl	w0, w0, #8
    7a84:	and	w0, w0, #0xff0000
    7a88:	orr	w0, w1, w0
    7a8c:	ldr	w1, [sp, #12]
    7a90:	lsl	w1, w1, #24
    7a94:	orr	w0, w0, w1
    7a98:	add	sp, sp, #0x10
    7a9c:	ret

0000000000007aa0 <__bswapdi2@@GCC_4.3.0>:
    7aa0:	sub	sp, sp, #0x10
    7aa4:	str	x0, [sp, #8]
    7aa8:	ldr	x0, [sp, #8]
    7aac:	lsr	x1, x0, #56
    7ab0:	ldr	x0, [sp, #8]
    7ab4:	lsr	x0, x0, #40
    7ab8:	and	x0, x0, #0xff00
    7abc:	orr	x1, x1, x0
    7ac0:	ldr	x0, [sp, #8]
    7ac4:	lsr	x0, x0, #24
    7ac8:	and	x0, x0, #0xff0000
    7acc:	orr	x1, x1, x0
    7ad0:	ldr	x0, [sp, #8]
    7ad4:	lsr	x0, x0, #8
    7ad8:	and	x0, x0, #0xff000000
    7adc:	orr	x1, x1, x0
    7ae0:	ldr	x0, [sp, #8]
    7ae4:	lsl	x0, x0, #8
    7ae8:	and	x0, x0, #0xff00000000
    7aec:	orr	x1, x1, x0
    7af0:	ldr	x0, [sp, #8]
    7af4:	lsl	x0, x0, #24
    7af8:	and	x0, x0, #0xff0000000000
    7afc:	orr	x1, x1, x0
    7b00:	ldr	x0, [sp, #8]
    7b04:	lsl	x0, x0, #40
    7b08:	and	x0, x0, #0xff000000000000
    7b0c:	orr	x1, x1, x0
    7b10:	ldr	x0, [sp, #8]
    7b14:	lsl	x0, x0, #56
    7b18:	orr	x0, x1, x0
    7b1c:	add	sp, sp, #0x10
    7b20:	ret

0000000000007b24 <__clrsbdi2@@GCC_4.7.0>:
    7b24:	sub	sp, sp, #0x20
    7b28:	str	x0, [sp, #8]
    7b2c:	ldr	x0, [sp, #8]
    7b30:	cmp	x0, #0x0
    7b34:	b.ge	7b44 <__clrsbdi2@@GCC_4.7.0+0x20>  // b.tcont
    7b38:	ldr	x0, [sp, #8]
    7b3c:	mvn	x0, x0
    7b40:	str	x0, [sp, #8]
    7b44:	ldr	x0, [sp, #8]
    7b48:	cmp	x0, #0x0
    7b4c:	b.ne	7b58 <__clrsbdi2@@GCC_4.7.0+0x34>  // b.any
    7b50:	mov	w0, #0x3f                  	// #63
    7b54:	b	7b70 <__clrsbdi2@@GCC_4.7.0+0x4c>
    7b58:	ldr	x0, [sp, #8]
    7b5c:	clz	x0, x0
    7b60:	sxtw	x0, w0
    7b64:	str	x0, [sp, #24]
    7b68:	ldr	x0, [sp, #24]
    7b6c:	sub	w0, w0, #0x1
    7b70:	add	sp, sp, #0x20
    7b74:	ret

0000000000007b78 <__clrsbti2@@GCC_4.7.0>:
    7b78:	sub	sp, sp, #0x40
    7b7c:	stp	x0, x1, [sp]
    7b80:	ldp	x0, x1, [sp]
    7b84:	stp	x0, x1, [sp, #16]
    7b88:	ldr	x0, [sp, #24]
    7b8c:	cmp	x0, #0x0
    7b90:	b.ne	7ba8 <__clrsbti2@@GCC_4.7.0+0x30>  // b.any
    7b94:	ldr	x0, [sp, #16]
    7b98:	str	x0, [sp, #56]
    7b9c:	mov	x0, #0x40                  	// #64
    7ba0:	str	x0, [sp, #40]
    7ba4:	b	7bf8 <__clrsbti2@@GCC_4.7.0+0x80>
    7ba8:	ldr	x0, [sp, #24]
    7bac:	cmn	x0, #0x1
    7bb0:	b.ne	7bcc <__clrsbti2@@GCC_4.7.0+0x54>  // b.any
    7bb4:	ldr	x0, [sp, #16]
    7bb8:	mvn	x0, x0
    7bbc:	str	x0, [sp, #56]
    7bc0:	mov	x0, #0x40                  	// #64
    7bc4:	str	x0, [sp, #40]
    7bc8:	b	7bf8 <__clrsbti2@@GCC_4.7.0+0x80>
    7bcc:	ldr	x0, [sp, #24]
    7bd0:	cmp	x0, #0x0
    7bd4:	b.lt	7be8 <__clrsbti2@@GCC_4.7.0+0x70>  // b.tstop
    7bd8:	ldr	x0, [sp, #24]
    7bdc:	str	x0, [sp, #56]
    7be0:	str	xzr, [sp, #40]
    7be4:	b	7bf8 <__clrsbti2@@GCC_4.7.0+0x80>
    7be8:	ldr	x0, [sp, #24]
    7bec:	mvn	x0, x0
    7bf0:	str	x0, [sp, #56]
    7bf4:	str	xzr, [sp, #40]
    7bf8:	ldr	x0, [sp, #56]
    7bfc:	cmp	x0, #0x0
    7c00:	b.ne	7c10 <__clrsbti2@@GCC_4.7.0+0x98>  // b.any
    7c04:	mov	x0, #0x40                  	// #64
    7c08:	str	x0, [sp, #48]
    7c0c:	b	7c20 <__clrsbti2@@GCC_4.7.0+0xa8>
    7c10:	ldr	x0, [sp, #56]
    7c14:	clz	x0, x0
    7c18:	sxtw	x0, w0
    7c1c:	str	x0, [sp, #48]
    7c20:	ldr	x0, [sp, #48]
    7c24:	mov	w1, w0
    7c28:	ldr	x0, [sp, #40]
    7c2c:	add	w0, w1, w0
    7c30:	sub	w0, w0, #0x1
    7c34:	add	sp, sp, #0x40
    7c38:	ret

0000000000007c3c <__fixunssfdi@@GCC_3.0>:
    7c3c:	sub	sp, sp, #0x10
    7c40:	str	s0, [sp, #12]
    7c44:	ldr	s1, [sp, #12]
    7c48:	movi	v0.2s, #0x5f, lsl #24
    7c4c:	fcmpe	s1, s0
    7c50:	b.lt	7c70 <__fixunssfdi@@GCC_3.0+0x34>  // b.tstop
    7c54:	ldr	s1, [sp, #12]
    7c58:	movi	v0.2s, #0x5f, lsl #24
    7c5c:	fsub	s0, s1, s0
    7c60:	fcvtzs	x1, s0
    7c64:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7c68:	add	x0, x1, x0
    7c6c:	b	7c78 <__fixunssfdi@@GCC_3.0+0x3c>
    7c70:	ldr	s0, [sp, #12]
    7c74:	fcvtzs	x0, s0
    7c78:	add	sp, sp, #0x10
    7c7c:	ret

0000000000007c80 <__fixunsdfdi@@GCC_3.0>:
    7c80:	sub	sp, sp, #0x10
    7c84:	str	d0, [sp, #8]
    7c88:	ldr	d0, [sp, #8]
    7c8c:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
    7c90:	fmov	d1, x0
    7c94:	fcmpe	d0, d1
    7c98:	b.lt	7cc0 <__fixunsdfdi@@GCC_3.0+0x40>  // b.tstop
    7c9c:	ldr	d0, [sp, #8]
    7ca0:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
    7ca4:	fmov	d1, x0
    7ca8:	fsub	d0, d0, d1
    7cac:	fcvtzs	d0, d0
    7cb0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7cb4:	fmov	x1, d0
    7cb8:	add	x0, x1, x0
    7cbc:	b	7ccc <__fixunsdfdi@@GCC_3.0+0x4c>
    7cc0:	ldr	d0, [sp, #8]
    7cc4:	fcvtzs	d0, d0
    7cc8:	fmov	x0, d0
    7ccc:	add	sp, sp, #0x10
    7cd0:	ret

0000000000007cd4 <__fixsfti@@GCC_3.0>:
    7cd4:	stp	x29, x30, [sp, #-48]!
    7cd8:	mov	x29, sp
    7cdc:	stp	x20, x21, [sp, #16]
    7ce0:	str	s0, [sp, #44]
    7ce4:	ldr	s0, [sp, #44]
    7ce8:	fcmpe	s0, #0.0
    7cec:	b.pl	7d18 <__fixsfti@@GCC_3.0+0x44>  // b.nfrst
    7cf0:	ldr	s0, [sp, #44]
    7cf4:	fneg	s0, s0
    7cf8:	bl	2c10 <__fixunssfti@plt>
    7cfc:	negs	x2, x0
    7d00:	ngc	x0, x1
    7d04:	mov	x20, x2
    7d08:	mov	x21, x0
    7d0c:	mov	x0, x20
    7d10:	mov	x1, x21
    7d14:	b	7d20 <__fixsfti@@GCC_3.0+0x4c>
    7d18:	ldr	s0, [sp, #44]
    7d1c:	bl	2c10 <__fixunssfti@plt>
    7d20:	ldp	x20, x21, [sp, #16]
    7d24:	ldp	x29, x30, [sp], #48
    7d28:	ret

0000000000007d2c <__fixdfti@@GCC_3.0>:
    7d2c:	stp	x29, x30, [sp, #-48]!
    7d30:	mov	x29, sp
    7d34:	stp	x20, x21, [sp, #16]
    7d38:	str	d0, [sp, #40]
    7d3c:	ldr	d0, [sp, #40]
    7d40:	fcmpe	d0, #0.0
    7d44:	b.pl	7d70 <__fixdfti@@GCC_3.0+0x44>  // b.nfrst
    7d48:	ldr	d0, [sp, #40]
    7d4c:	fneg	d0, d0
    7d50:	bl	2d90 <__fixunsdfti@plt>
    7d54:	negs	x2, x0
    7d58:	ngc	x0, x1
    7d5c:	mov	x20, x2
    7d60:	mov	x21, x0
    7d64:	mov	x0, x20
    7d68:	mov	x1, x21
    7d6c:	b	7d78 <__fixdfti@@GCC_3.0+0x4c>
    7d70:	ldr	d0, [sp, #40]
    7d74:	bl	2d90 <__fixunsdfti@plt>
    7d78:	ldp	x20, x21, [sp, #16]
    7d7c:	ldp	x29, x30, [sp], #48
    7d80:	ret

0000000000007d84 <__fixunssfti@@GCC_3.0>:
    7d84:	sub	sp, sp, #0x30
    7d88:	str	s0, [sp, #12]
    7d8c:	ldr	s0, [sp, #12]
    7d90:	fcvt	d0, s0
    7d94:	str	d0, [sp, #40]
    7d98:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
    7d9c:	fmov	d1, x8
    7da0:	ldr	d0, [sp, #40]
    7da4:	fdiv	d0, d0, d1
    7da8:	fcvtzu	d0, d0
    7dac:	str	d0, [sp, #32]
    7db0:	ldr	d0, [sp, #32]
    7db4:	ucvtf	d0, d0
    7db8:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
    7dbc:	fmov	d1, x8
    7dc0:	fmul	d0, d0, d1
    7dc4:	ldr	d1, [sp, #40]
    7dc8:	fsub	d0, d1, d0
    7dcc:	fcvtzu	d0, d0
    7dd0:	str	d0, [sp, #24]
    7dd4:	ldr	x8, [sp, #32]
    7dd8:	mov	x6, x8
    7ddc:	mov	x7, #0x0                   	// #0
    7de0:	mov	x3, x6
    7de4:	mov	x2, #0x0                   	// #0
    7de8:	ldr	x6, [sp, #24]
    7dec:	mov	x0, x6
    7df0:	mov	x1, #0x0                   	// #0
    7df4:	orr	x4, x2, x0
    7df8:	orr	x5, x3, x1
    7dfc:	mov	x0, x4
    7e00:	mov	x1, x5
    7e04:	add	sp, sp, #0x30
    7e08:	ret

0000000000007e0c <__fixunsdfti@@GCC_3.0>:
    7e0c:	sub	sp, sp, #0x20
    7e10:	str	d0, [sp, #8]
    7e14:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
    7e18:	fmov	d1, x8
    7e1c:	ldr	d0, [sp, #8]
    7e20:	fdiv	d0, d0, d1
    7e24:	fcvtzu	d0, d0
    7e28:	str	d0, [sp, #24]
    7e2c:	ldr	d0, [sp, #24]
    7e30:	ucvtf	d0, d0
    7e34:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
    7e38:	fmov	d1, x8
    7e3c:	fmul	d0, d0, d1
    7e40:	ldr	d1, [sp, #8]
    7e44:	fsub	d0, d1, d0
    7e48:	fcvtzu	d0, d0
    7e4c:	str	d0, [sp, #16]
    7e50:	ldr	x8, [sp, #24]
    7e54:	mov	x6, x8
    7e58:	mov	x7, #0x0                   	// #0
    7e5c:	mov	x3, x6
    7e60:	mov	x2, #0x0                   	// #0
    7e64:	ldr	x6, [sp, #16]
    7e68:	mov	x0, x6
    7e6c:	mov	x1, #0x0                   	// #0
    7e70:	orr	x4, x2, x0
    7e74:	orr	x5, x3, x1
    7e78:	mov	x0, x4
    7e7c:	mov	x1, x5
    7e80:	add	sp, sp, #0x20
    7e84:	ret

0000000000007e88 <__floattisf@@GCC_3.0>:
    7e88:	stp	x29, x30, [sp, #-48]!
    7e8c:	mov	x29, sp
    7e90:	stp	x0, x1, [sp, #16]
    7e94:	ldr	x1, [sp, #24]
    7e98:	mov	x0, #0xfffe000000000000    	// #-562949953421312
    7e9c:	cmp	x1, x0
    7ea0:	b.lt	7ee0 <__floattisf@@GCC_3.0+0x58>  // b.tstop
    7ea4:	ldr	x1, [sp, #24]
    7ea8:	mov	x0, #0xfffe000000000000    	// #-562949953421312
    7eac:	cmp	x1, x0
    7eb0:	b.ne	7ec0 <__floattisf@@GCC_3.0+0x38>  // b.any
    7eb4:	ldr	x0, [sp, #16]
    7eb8:	cmp	x0, #0x0
    7ebc:	b.eq	7ee0 <__floattisf@@GCC_3.0+0x58>  // b.none
    7ec0:	ldr	x1, [sp, #24]
    7ec4:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    7ec8:	cmp	x1, x0
    7ecc:	b.gt	7ee0 <__floattisf@@GCC_3.0+0x58>
    7ed0:	ldr	x1, [sp, #24]
    7ed4:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    7ed8:	cmp	x1, x0
    7edc:	b	7f30 <__floattisf@@GCC_3.0+0xa8>
    7ee0:	ldp	x0, x1, [sp, #16]
    7ee4:	and	x2, x0, #0x7fff
    7ee8:	mov	x8, #0x0                   	// #0
    7eec:	and	x3, x1, x8
    7ef0:	mov	x0, x2
    7ef4:	orr	x0, x0, x3
    7ef8:	cmp	x0, #0x0
    7efc:	b.eq	7f30 <__floattisf@@GCC_3.0+0xa8>  // b.none
    7f00:	ldr	x0, [sp, #16]
    7f04:	and	x0, x0, #0xffffffffffff8000
    7f08:	str	x0, [sp, #16]
    7f0c:	ldr	x1, [sp, #24]
    7f10:	mov	x0, #0xffffffffffffffff    	// #-1
    7f14:	and	x0, x1, x0
    7f18:	str	x0, [sp, #24]
    7f1c:	ldp	x0, x1, [sp, #16]
    7f20:	orr	x4, x0, #0x8000
    7f24:	mov	x2, #0x0                   	// #0
    7f28:	orr	x5, x1, x2
    7f2c:	stp	x4, x5, [sp, #16]
    7f30:	ldr	x0, [sp, #24]
    7f34:	mov	x6, x0
    7f38:	ldr	x0, [sp, #24]
    7f3c:	asr	x7, x0, #63
    7f40:	mov	x0, x6
    7f44:	bl	2ba0 <__floatditf@plt>
    7f48:	str	q0, [sp, #32]
    7f4c:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    7f50:	add	x0, x0, #0x360
    7f54:	ldr	q1, [x0]
    7f58:	ldr	q0, [sp, #32]
    7f5c:	bl	2b70 <__multf3@plt>
    7f60:	str	q0, [sp, #32]
    7f64:	ldr	x0, [sp, #16]
    7f68:	bl	2b60 <__floatunditf@plt>
    7f6c:	mov	v1.16b, v0.16b
    7f70:	ldr	q0, [sp, #32]
    7f74:	bl	2c80 <__addtf3@plt>
    7f78:	str	q0, [sp, #32]
    7f7c:	ldr	q0, [sp, #32]
    7f80:	bl	2e00 <__trunctfsf2@plt>
    7f84:	ldp	x29, x30, [sp], #48
    7f88:	ret

0000000000007f8c <__floattidf@@GCC_3.0>:
    7f8c:	stp	x29, x30, [sp, #-48]!
    7f90:	mov	x29, sp
    7f94:	stp	x0, x1, [sp, #16]
    7f98:	ldr	x1, [sp, #24]
    7f9c:	mov	x0, #0xfffe000000000000    	// #-562949953421312
    7fa0:	cmp	x1, x0
    7fa4:	b.lt	7fe4 <__floattidf@@GCC_3.0+0x58>  // b.tstop
    7fa8:	ldr	x1, [sp, #24]
    7fac:	mov	x0, #0xfffe000000000000    	// #-562949953421312
    7fb0:	cmp	x1, x0
    7fb4:	b.ne	7fc4 <__floattidf@@GCC_3.0+0x38>  // b.any
    7fb8:	ldr	x0, [sp, #16]
    7fbc:	cmp	x0, #0x0
    7fc0:	b.eq	7fe4 <__floattidf@@GCC_3.0+0x58>  // b.none
    7fc4:	ldr	x1, [sp, #24]
    7fc8:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    7fcc:	cmp	x1, x0
    7fd0:	b.gt	7fe4 <__floattidf@@GCC_3.0+0x58>
    7fd4:	ldr	x1, [sp, #24]
    7fd8:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    7fdc:	cmp	x1, x0
    7fe0:	b	8034 <__floattidf@@GCC_3.0+0xa8>
    7fe4:	ldp	x0, x1, [sp, #16]
    7fe8:	and	x2, x0, #0x7fff
    7fec:	mov	x8, #0x0                   	// #0
    7ff0:	and	x3, x1, x8
    7ff4:	mov	x0, x2
    7ff8:	orr	x0, x0, x3
    7ffc:	cmp	x0, #0x0
    8000:	b.eq	8034 <__floattidf@@GCC_3.0+0xa8>  // b.none
    8004:	ldr	x0, [sp, #16]
    8008:	and	x0, x0, #0xffffffffffff8000
    800c:	str	x0, [sp, #16]
    8010:	ldr	x1, [sp, #24]
    8014:	mov	x0, #0xffffffffffffffff    	// #-1
    8018:	and	x0, x1, x0
    801c:	str	x0, [sp, #24]
    8020:	ldp	x0, x1, [sp, #16]
    8024:	orr	x4, x0, #0x8000
    8028:	mov	x2, #0x0                   	// #0
    802c:	orr	x5, x1, x2
    8030:	stp	x4, x5, [sp, #16]
    8034:	ldr	x0, [sp, #24]
    8038:	mov	x6, x0
    803c:	ldr	x0, [sp, #24]
    8040:	asr	x7, x0, #63
    8044:	mov	x0, x6
    8048:	bl	2ba0 <__floatditf@plt>
    804c:	str	q0, [sp, #32]
    8050:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    8054:	add	x0, x0, #0x370
    8058:	ldr	q1, [x0]
    805c:	ldr	q0, [sp, #32]
    8060:	bl	2b70 <__multf3@plt>
    8064:	str	q0, [sp, #32]
    8068:	ldr	x0, [sp, #16]
    806c:	bl	2b60 <__floatunditf@plt>
    8070:	mov	v1.16b, v0.16b
    8074:	ldr	q0, [sp, #32]
    8078:	bl	2c80 <__addtf3@plt>
    807c:	str	q0, [sp, #32]
    8080:	ldr	q0, [sp, #32]
    8084:	bl	2cf0 <__trunctfdf2@plt>
    8088:	ldp	x29, x30, [sp], #48
    808c:	ret

0000000000008090 <__floatuntisf@@GCC_4.2.0>:
    8090:	stp	x29, x30, [sp, #-48]!
    8094:	mov	x29, sp
    8098:	stp	x0, x1, [sp, #16]
    809c:	ldr	x1, [sp, #24]
    80a0:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    80a4:	cmp	x1, x0
    80a8:	b.hi	80bc <__floatuntisf@@GCC_4.2.0+0x2c>  // b.pmore
    80ac:	ldr	x1, [sp, #24]
    80b0:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    80b4:	cmp	x1, x0
    80b8:	b	8118 <__floatuntisf@@GCC_4.2.0+0x88>
    80bc:	ldr	x0, [sp, #16]
    80c0:	and	x2, x0, #0x7fff
    80c4:	ldr	x0, [sp, #24]
    80c8:	mov	x1, #0x0                   	// #0
    80cc:	and	x3, x0, x1
    80d0:	mov	x0, x2
    80d4:	orr	x0, x0, x3
    80d8:	cmp	x0, #0x0
    80dc:	b.eq	8118 <__floatuntisf@@GCC_4.2.0+0x88>  // b.none
    80e0:	ldr	x0, [sp, #16]
    80e4:	and	x0, x0, #0xffffffffffff8000
    80e8:	str	x0, [sp, #16]
    80ec:	ldr	x1, [sp, #24]
    80f0:	mov	x0, #0xffffffffffffffff    	// #-1
    80f4:	and	x0, x1, x0
    80f8:	str	x0, [sp, #24]
    80fc:	ldr	x0, [sp, #16]
    8100:	orr	x0, x0, #0x8000
    8104:	str	x0, [sp, #16]
    8108:	ldr	x0, [sp, #24]
    810c:	mov	x1, #0x0                   	// #0
    8110:	orr	x0, x0, x1
    8114:	str	x0, [sp, #24]
    8118:	ldr	x0, [sp, #24]
    811c:	mov	x4, x0
    8120:	mov	x5, #0x0                   	// #0
    8124:	mov	x0, x4
    8128:	bl	2b60 <__floatunditf@plt>
    812c:	str	q0, [sp, #32]
    8130:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    8134:	add	x0, x0, #0x380
    8138:	ldr	q1, [x0]
    813c:	ldr	q0, [sp, #32]
    8140:	bl	2b70 <__multf3@plt>
    8144:	str	q0, [sp, #32]
    8148:	ldr	x0, [sp, #16]
    814c:	bl	2b60 <__floatunditf@plt>
    8150:	mov	v1.16b, v0.16b
    8154:	ldr	q0, [sp, #32]
    8158:	bl	2c80 <__addtf3@plt>
    815c:	str	q0, [sp, #32]
    8160:	ldr	q0, [sp, #32]
    8164:	bl	2e00 <__trunctfsf2@plt>
    8168:	ldp	x29, x30, [sp], #48
    816c:	ret

0000000000008170 <__floatuntidf@@GCC_4.2.0>:
    8170:	stp	x29, x30, [sp, #-48]!
    8174:	mov	x29, sp
    8178:	stp	x0, x1, [sp, #16]
    817c:	ldr	x1, [sp, #24]
    8180:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    8184:	cmp	x1, x0
    8188:	b.hi	819c <__floatuntidf@@GCC_4.2.0+0x2c>  // b.pmore
    818c:	ldr	x1, [sp, #24]
    8190:	mov	x0, #0x1ffffffffffff       	// #562949953421311
    8194:	cmp	x1, x0
    8198:	b	81f8 <__floatuntidf@@GCC_4.2.0+0x88>
    819c:	ldr	x0, [sp, #16]
    81a0:	and	x2, x0, #0x7fff
    81a4:	ldr	x0, [sp, #24]
    81a8:	mov	x1, #0x0                   	// #0
    81ac:	and	x3, x0, x1
    81b0:	mov	x0, x2
    81b4:	orr	x0, x0, x3
    81b8:	cmp	x0, #0x0
    81bc:	b.eq	81f8 <__floatuntidf@@GCC_4.2.0+0x88>  // b.none
    81c0:	ldr	x0, [sp, #16]
    81c4:	and	x0, x0, #0xffffffffffff8000
    81c8:	str	x0, [sp, #16]
    81cc:	ldr	x1, [sp, #24]
    81d0:	mov	x0, #0xffffffffffffffff    	// #-1
    81d4:	and	x0, x1, x0
    81d8:	str	x0, [sp, #24]
    81dc:	ldr	x0, [sp, #16]
    81e0:	orr	x0, x0, #0x8000
    81e4:	str	x0, [sp, #16]
    81e8:	ldr	x0, [sp, #24]
    81ec:	mov	x1, #0x0                   	// #0
    81f0:	orr	x0, x0, x1
    81f4:	str	x0, [sp, #24]
    81f8:	ldr	x0, [sp, #24]
    81fc:	mov	x4, x0
    8200:	mov	x5, #0x0                   	// #0
    8204:	mov	x0, x4
    8208:	bl	2b60 <__floatunditf@plt>
    820c:	str	q0, [sp, #32]
    8210:	adrp	x0, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
    8214:	add	x0, x0, #0x390
    8218:	ldr	q1, [x0]
    821c:	ldr	q0, [sp, #32]
    8220:	bl	2b70 <__multf3@plt>
    8224:	str	q0, [sp, #32]
    8228:	ldr	x0, [sp, #16]
    822c:	bl	2b60 <__floatunditf@plt>
    8230:	mov	v1.16b, v0.16b
    8234:	ldr	q0, [sp, #32]
    8238:	bl	2c80 <__addtf3@plt>
    823c:	str	q0, [sp, #32]
    8240:	ldr	q0, [sp, #32]
    8244:	bl	2cf0 <__trunctfdf2@plt>
    8248:	ldp	x29, x30, [sp], #48
    824c:	ret

0000000000008250 <__divti3@@GCC_3.0>:
    8250:	sub	sp, sp, #0x260
    8254:	stp	x0, x1, [sp, #16]
    8258:	stp	x2, x3, [sp]
    825c:	str	xzr, [sp, #600]
    8260:	ldp	x0, x1, [sp, #16]
    8264:	stp	x0, x1, [sp, #112]
    8268:	ldp	x0, x1, [sp]
    826c:	stp	x0, x1, [sp, #96]
    8270:	ldr	x0, [sp, #120]
    8274:	cmp	x0, #0x0
    8278:	b.ge	82a0 <__divti3@@GCC_3.0+0x50>  // b.tcont
    827c:	ldr	x0, [sp, #600]
    8280:	mvn	x0, x0
    8284:	str	x0, [sp, #600]
    8288:	ldp	x0, x1, [sp, #112]
    828c:	negs	x2, x0
    8290:	ngc	x0, x1
    8294:	mov	x8, x2
    8298:	mov	x9, x0
    829c:	stp	x8, x9, [sp, #112]
    82a0:	ldr	x0, [sp, #104]
    82a4:	cmp	x0, #0x0
    82a8:	b.ge	82d0 <__divti3@@GCC_3.0+0x80>  // b.tcont
    82ac:	ldr	x0, [sp, #600]
    82b0:	mvn	x0, x0
    82b4:	str	x0, [sp, #600]
    82b8:	ldp	x0, x1, [sp, #96]
    82bc:	negs	x2, x0
    82c0:	ngc	x0, x1
    82c4:	mov	x6, x2
    82c8:	mov	x7, x0
    82cc:	stp	x6, x7, [sp, #96]
    82d0:	ldp	x0, x1, [sp, #112]
    82d4:	mov	x2, x0
    82d8:	mov	x3, x1
    82dc:	ldp	x0, x1, [sp, #96]
    82e0:	add	x6, sp, #0x200
    82e4:	stp	x2, x3, [x6, #48]
    82e8:	add	x2, sp, #0x200
    82ec:	stp	x0, x1, [x2, #32]
    82f0:	str	xzr, [sp, #536]
    82f4:	add	x0, sp, #0x200
    82f8:	ldp	x0, x1, [x0, #48]
    82fc:	stp	x0, x1, [sp, #80]
    8300:	add	x0, sp, #0x200
    8304:	ldp	x0, x1, [x0, #32]
    8308:	stp	x0, x1, [sp, #64]
    830c:	ldr	x0, [sp, #64]
    8310:	str	x0, [sp, #528]
    8314:	ldr	x0, [sp, #72]
    8318:	str	x0, [sp, #520]
    831c:	ldr	x0, [sp, #80]
    8320:	str	x0, [sp, #512]
    8324:	ldr	x0, [sp, #88]
    8328:	str	x0, [sp, #504]
    832c:	ldr	x0, [sp, #520]
    8330:	cmp	x0, #0x0
    8334:	b.ne	8a24 <__divti3@@GCC_3.0+0x7d4>  // b.any
    8338:	ldr	x1, [sp, #528]
    833c:	ldr	x0, [sp, #504]
    8340:	cmp	x1, x0
    8344:	b.ls	8590 <__divti3@@GCC_3.0+0x340>  // b.plast
    8348:	ldr	x0, [sp, #528]
    834c:	clz	x0, x0
    8350:	sxtw	x0, w0
    8354:	str	x0, [sp, #496]
    8358:	ldr	x0, [sp, #496]
    835c:	cmp	x0, #0x0
    8360:	b.eq	83bc <__divti3@@GCC_3.0+0x16c>  // b.none
    8364:	ldr	x0, [sp, #496]
    8368:	mov	w1, w0
    836c:	ldr	x0, [sp, #528]
    8370:	lsl	x0, x0, x1
    8374:	str	x0, [sp, #528]
    8378:	ldr	x0, [sp, #496]
    837c:	mov	w1, w0
    8380:	ldr	x0, [sp, #504]
    8384:	lsl	x1, x0, x1
    8388:	ldr	x0, [sp, #496]
    838c:	mov	w2, w0
    8390:	mov	w0, #0x40                  	// #64
    8394:	sub	w0, w0, w2
    8398:	ldr	x2, [sp, #512]
    839c:	lsr	x0, x2, x0
    83a0:	orr	x0, x1, x0
    83a4:	str	x0, [sp, #504]
    83a8:	ldr	x0, [sp, #496]
    83ac:	mov	w1, w0
    83b0:	ldr	x0, [sp, #512]
    83b4:	lsl	x0, x0, x1
    83b8:	str	x0, [sp, #512]
    83bc:	ldr	x0, [sp, #528]
    83c0:	lsr	x0, x0, #32
    83c4:	str	x0, [sp, #488]
    83c8:	ldr	x0, [sp, #528]
    83cc:	and	x0, x0, #0xffffffff
    83d0:	str	x0, [sp, #480]
    83d4:	ldr	x0, [sp, #504]
    83d8:	ldr	x1, [sp, #488]
    83dc:	udiv	x2, x0, x1
    83e0:	ldr	x1, [sp, #488]
    83e4:	mul	x1, x2, x1
    83e8:	sub	x0, x0, x1
    83ec:	str	x0, [sp, #472]
    83f0:	ldr	x1, [sp, #504]
    83f4:	ldr	x0, [sp, #488]
    83f8:	udiv	x0, x1, x0
    83fc:	str	x0, [sp, #464]
    8400:	ldr	x1, [sp, #480]
    8404:	ldr	x0, [sp, #464]
    8408:	mul	x0, x1, x0
    840c:	str	x0, [sp, #456]
    8410:	ldr	x0, [sp, #472]
    8414:	lsl	x1, x0, #32
    8418:	ldr	x0, [sp, #512]
    841c:	lsr	x0, x0, #32
    8420:	orr	x0, x1, x0
    8424:	str	x0, [sp, #472]
    8428:	ldr	x1, [sp, #456]
    842c:	ldr	x0, [sp, #472]
    8430:	cmp	x1, x0
    8434:	b.ls	8490 <__divti3@@GCC_3.0+0x240>  // b.plast
    8438:	ldr	x0, [sp, #464]
    843c:	sub	x0, x0, #0x1
    8440:	str	x0, [sp, #464]
    8444:	ldr	x1, [sp, #472]
    8448:	ldr	x0, [sp, #528]
    844c:	add	x0, x1, x0
    8450:	str	x0, [sp, #472]
    8454:	ldr	x1, [sp, #528]
    8458:	ldr	x0, [sp, #472]
    845c:	cmp	x1, x0
    8460:	b.hi	8490 <__divti3@@GCC_3.0+0x240>  // b.pmore
    8464:	ldr	x1, [sp, #456]
    8468:	ldr	x0, [sp, #472]
    846c:	cmp	x1, x0
    8470:	b.ls	8490 <__divti3@@GCC_3.0+0x240>  // b.plast
    8474:	ldr	x0, [sp, #464]
    8478:	sub	x0, x0, #0x1
    847c:	str	x0, [sp, #464]
    8480:	ldr	x1, [sp, #472]
    8484:	ldr	x0, [sp, #528]
    8488:	add	x0, x1, x0
    848c:	str	x0, [sp, #472]
    8490:	ldr	x1, [sp, #472]
    8494:	ldr	x0, [sp, #456]
    8498:	sub	x0, x1, x0
    849c:	str	x0, [sp, #472]
    84a0:	ldr	x0, [sp, #472]
    84a4:	ldr	x1, [sp, #488]
    84a8:	udiv	x2, x0, x1
    84ac:	ldr	x1, [sp, #488]
    84b0:	mul	x1, x2, x1
    84b4:	sub	x0, x0, x1
    84b8:	str	x0, [sp, #448]
    84bc:	ldr	x1, [sp, #472]
    84c0:	ldr	x0, [sp, #488]
    84c4:	udiv	x0, x1, x0
    84c8:	str	x0, [sp, #440]
    84cc:	ldr	x1, [sp, #480]
    84d0:	ldr	x0, [sp, #440]
    84d4:	mul	x0, x1, x0
    84d8:	str	x0, [sp, #456]
    84dc:	ldr	x0, [sp, #448]
    84e0:	lsl	x1, x0, #32
    84e4:	ldr	x0, [sp, #512]
    84e8:	and	x0, x0, #0xffffffff
    84ec:	orr	x0, x1, x0
    84f0:	str	x0, [sp, #448]
    84f4:	ldr	x1, [sp, #456]
    84f8:	ldr	x0, [sp, #448]
    84fc:	cmp	x1, x0
    8500:	b.ls	855c <__divti3@@GCC_3.0+0x30c>  // b.plast
    8504:	ldr	x0, [sp, #440]
    8508:	sub	x0, x0, #0x1
    850c:	str	x0, [sp, #440]
    8510:	ldr	x1, [sp, #448]
    8514:	ldr	x0, [sp, #528]
    8518:	add	x0, x1, x0
    851c:	str	x0, [sp, #448]
    8520:	ldr	x1, [sp, #528]
    8524:	ldr	x0, [sp, #448]
    8528:	cmp	x1, x0
    852c:	b.hi	855c <__divti3@@GCC_3.0+0x30c>  // b.pmore
    8530:	ldr	x1, [sp, #456]
    8534:	ldr	x0, [sp, #448]
    8538:	cmp	x1, x0
    853c:	b.ls	855c <__divti3@@GCC_3.0+0x30c>  // b.plast
    8540:	ldr	x0, [sp, #440]
    8544:	sub	x0, x0, #0x1
    8548:	str	x0, [sp, #440]
    854c:	ldr	x1, [sp, #448]
    8550:	ldr	x0, [sp, #528]
    8554:	add	x0, x1, x0
    8558:	str	x0, [sp, #448]
    855c:	ldr	x1, [sp, #448]
    8560:	ldr	x0, [sp, #456]
    8564:	sub	x0, x1, x0
    8568:	str	x0, [sp, #448]
    856c:	ldr	x0, [sp, #464]
    8570:	lsl	x1, x0, #32
    8574:	ldr	x0, [sp, #440]
    8578:	orr	x0, x1, x0
    857c:	str	x0, [sp, #432]
    8580:	ldr	x0, [sp, #448]
    8584:	str	x0, [sp, #512]
    8588:	str	xzr, [sp, #424]
    858c:	b	89f0 <__divti3@@GCC_3.0+0x7a0>
    8590:	ldr	x0, [sp, #528]
    8594:	cmp	x0, #0x0
    8598:	b.ne	85ac <__divti3@@GCC_3.0+0x35c>  // b.any
    859c:	mov	x1, #0x1                   	// #1
    85a0:	ldr	x0, [sp, #528]
    85a4:	udiv	x0, x1, x0
    85a8:	str	x0, [sp, #528]
    85ac:	ldr	x0, [sp, #528]
    85b0:	clz	x0, x0
    85b4:	sxtw	x0, w0
    85b8:	str	x0, [sp, #496]
    85bc:	ldr	x0, [sp, #496]
    85c0:	cmp	x0, #0x0
    85c4:	b.ne	85e4 <__divti3@@GCC_3.0+0x394>  // b.any
    85c8:	ldr	x1, [sp, #504]
    85cc:	ldr	x0, [sp, #528]
    85d0:	sub	x0, x1, x0
    85d4:	str	x0, [sp, #504]
    85d8:	mov	x0, #0x1                   	// #1
    85dc:	str	x0, [sp, #424]
    85e0:	b	8824 <__divti3@@GCC_3.0+0x5d4>
    85e4:	mov	x1, #0x40                  	// #64
    85e8:	ldr	x0, [sp, #496]
    85ec:	sub	x0, x1, x0
    85f0:	str	x0, [sp, #416]
    85f4:	ldr	x0, [sp, #496]
    85f8:	mov	w1, w0
    85fc:	ldr	x0, [sp, #528]
    8600:	lsl	x0, x0, x1
    8604:	str	x0, [sp, #528]
    8608:	ldr	x0, [sp, #416]
    860c:	mov	w1, w0
    8610:	ldr	x0, [sp, #504]
    8614:	lsr	x0, x0, x1
    8618:	str	x0, [sp, #408]
    861c:	ldr	x0, [sp, #496]
    8620:	mov	w1, w0
    8624:	ldr	x0, [sp, #504]
    8628:	lsl	x1, x0, x1
    862c:	ldr	x0, [sp, #416]
    8630:	mov	w2, w0
    8634:	ldr	x0, [sp, #512]
    8638:	lsr	x0, x0, x2
    863c:	orr	x0, x1, x0
    8640:	str	x0, [sp, #504]
    8644:	ldr	x0, [sp, #496]
    8648:	mov	w1, w0
    864c:	ldr	x0, [sp, #512]
    8650:	lsl	x0, x0, x1
    8654:	str	x0, [sp, #512]
    8658:	ldr	x0, [sp, #528]
    865c:	lsr	x0, x0, #32
    8660:	str	x0, [sp, #400]
    8664:	ldr	x0, [sp, #528]
    8668:	and	x0, x0, #0xffffffff
    866c:	str	x0, [sp, #392]
    8670:	ldr	x0, [sp, #408]
    8674:	ldr	x1, [sp, #400]
    8678:	udiv	x2, x0, x1
    867c:	ldr	x1, [sp, #400]
    8680:	mul	x1, x2, x1
    8684:	sub	x0, x0, x1
    8688:	str	x0, [sp, #384]
    868c:	ldr	x1, [sp, #408]
    8690:	ldr	x0, [sp, #400]
    8694:	udiv	x0, x1, x0
    8698:	str	x0, [sp, #376]
    869c:	ldr	x1, [sp, #392]
    86a0:	ldr	x0, [sp, #376]
    86a4:	mul	x0, x1, x0
    86a8:	str	x0, [sp, #368]
    86ac:	ldr	x0, [sp, #384]
    86b0:	lsl	x1, x0, #32
    86b4:	ldr	x0, [sp, #504]
    86b8:	lsr	x0, x0, #32
    86bc:	orr	x0, x1, x0
    86c0:	str	x0, [sp, #384]
    86c4:	ldr	x1, [sp, #368]
    86c8:	ldr	x0, [sp, #384]
    86cc:	cmp	x1, x0
    86d0:	b.ls	872c <__divti3@@GCC_3.0+0x4dc>  // b.plast
    86d4:	ldr	x0, [sp, #376]
    86d8:	sub	x0, x0, #0x1
    86dc:	str	x0, [sp, #376]
    86e0:	ldr	x1, [sp, #384]
    86e4:	ldr	x0, [sp, #528]
    86e8:	add	x0, x1, x0
    86ec:	str	x0, [sp, #384]
    86f0:	ldr	x1, [sp, #528]
    86f4:	ldr	x0, [sp, #384]
    86f8:	cmp	x1, x0
    86fc:	b.hi	872c <__divti3@@GCC_3.0+0x4dc>  // b.pmore
    8700:	ldr	x1, [sp, #368]
    8704:	ldr	x0, [sp, #384]
    8708:	cmp	x1, x0
    870c:	b.ls	872c <__divti3@@GCC_3.0+0x4dc>  // b.plast
    8710:	ldr	x0, [sp, #376]
    8714:	sub	x0, x0, #0x1
    8718:	str	x0, [sp, #376]
    871c:	ldr	x1, [sp, #384]
    8720:	ldr	x0, [sp, #528]
    8724:	add	x0, x1, x0
    8728:	str	x0, [sp, #384]
    872c:	ldr	x1, [sp, #384]
    8730:	ldr	x0, [sp, #368]
    8734:	sub	x0, x1, x0
    8738:	str	x0, [sp, #384]
    873c:	ldr	x0, [sp, #384]
    8740:	ldr	x1, [sp, #400]
    8744:	udiv	x2, x0, x1
    8748:	ldr	x1, [sp, #400]
    874c:	mul	x1, x2, x1
    8750:	sub	x0, x0, x1
    8754:	str	x0, [sp, #360]
    8758:	ldr	x1, [sp, #384]
    875c:	ldr	x0, [sp, #400]
    8760:	udiv	x0, x1, x0
    8764:	str	x0, [sp, #352]
    8768:	ldr	x1, [sp, #392]
    876c:	ldr	x0, [sp, #352]
    8770:	mul	x0, x1, x0
    8774:	str	x0, [sp, #368]
    8778:	ldr	x0, [sp, #360]
    877c:	lsl	x1, x0, #32
    8780:	ldr	x0, [sp, #504]
    8784:	and	x0, x0, #0xffffffff
    8788:	orr	x0, x1, x0
    878c:	str	x0, [sp, #360]
    8790:	ldr	x1, [sp, #368]
    8794:	ldr	x0, [sp, #360]
    8798:	cmp	x1, x0
    879c:	b.ls	87f8 <__divti3@@GCC_3.0+0x5a8>  // b.plast
    87a0:	ldr	x0, [sp, #352]
    87a4:	sub	x0, x0, #0x1
    87a8:	str	x0, [sp, #352]
    87ac:	ldr	x1, [sp, #360]
    87b0:	ldr	x0, [sp, #528]
    87b4:	add	x0, x1, x0
    87b8:	str	x0, [sp, #360]
    87bc:	ldr	x1, [sp, #528]
    87c0:	ldr	x0, [sp, #360]
    87c4:	cmp	x1, x0
    87c8:	b.hi	87f8 <__divti3@@GCC_3.0+0x5a8>  // b.pmore
    87cc:	ldr	x1, [sp, #368]
    87d0:	ldr	x0, [sp, #360]
    87d4:	cmp	x1, x0
    87d8:	b.ls	87f8 <__divti3@@GCC_3.0+0x5a8>  // b.plast
    87dc:	ldr	x0, [sp, #352]
    87e0:	sub	x0, x0, #0x1
    87e4:	str	x0, [sp, #352]
    87e8:	ldr	x1, [sp, #360]
    87ec:	ldr	x0, [sp, #528]
    87f0:	add	x0, x1, x0
    87f4:	str	x0, [sp, #360]
    87f8:	ldr	x1, [sp, #360]
    87fc:	ldr	x0, [sp, #368]
    8800:	sub	x0, x1, x0
    8804:	str	x0, [sp, #360]
    8808:	ldr	x0, [sp, #376]
    880c:	lsl	x1, x0, #32
    8810:	ldr	x0, [sp, #352]
    8814:	orr	x0, x1, x0
    8818:	str	x0, [sp, #424]
    881c:	ldr	x0, [sp, #360]
    8820:	str	x0, [sp, #504]
    8824:	ldr	x0, [sp, #528]
    8828:	lsr	x0, x0, #32
    882c:	str	x0, [sp, #344]
    8830:	ldr	x0, [sp, #528]
    8834:	and	x0, x0, #0xffffffff
    8838:	str	x0, [sp, #336]
    883c:	ldr	x0, [sp, #504]
    8840:	ldr	x1, [sp, #344]
    8844:	udiv	x2, x0, x1
    8848:	ldr	x1, [sp, #344]
    884c:	mul	x1, x2, x1
    8850:	sub	x0, x0, x1
    8854:	str	x0, [sp, #328]
    8858:	ldr	x1, [sp, #504]
    885c:	ldr	x0, [sp, #344]
    8860:	udiv	x0, x1, x0
    8864:	str	x0, [sp, #320]
    8868:	ldr	x1, [sp, #336]
    886c:	ldr	x0, [sp, #320]
    8870:	mul	x0, x1, x0
    8874:	str	x0, [sp, #312]
    8878:	ldr	x0, [sp, #328]
    887c:	lsl	x1, x0, #32
    8880:	ldr	x0, [sp, #512]
    8884:	lsr	x0, x0, #32
    8888:	orr	x0, x1, x0
    888c:	str	x0, [sp, #328]
    8890:	ldr	x1, [sp, #312]
    8894:	ldr	x0, [sp, #328]
    8898:	cmp	x1, x0
    889c:	b.ls	88f8 <__divti3@@GCC_3.0+0x6a8>  // b.plast
    88a0:	ldr	x0, [sp, #320]
    88a4:	sub	x0, x0, #0x1
    88a8:	str	x0, [sp, #320]
    88ac:	ldr	x1, [sp, #328]
    88b0:	ldr	x0, [sp, #528]
    88b4:	add	x0, x1, x0
    88b8:	str	x0, [sp, #328]
    88bc:	ldr	x1, [sp, #528]
    88c0:	ldr	x0, [sp, #328]
    88c4:	cmp	x1, x0
    88c8:	b.hi	88f8 <__divti3@@GCC_3.0+0x6a8>  // b.pmore
    88cc:	ldr	x1, [sp, #312]
    88d0:	ldr	x0, [sp, #328]
    88d4:	cmp	x1, x0
    88d8:	b.ls	88f8 <__divti3@@GCC_3.0+0x6a8>  // b.plast
    88dc:	ldr	x0, [sp, #320]
    88e0:	sub	x0, x0, #0x1
    88e4:	str	x0, [sp, #320]
    88e8:	ldr	x1, [sp, #328]
    88ec:	ldr	x0, [sp, #528]
    88f0:	add	x0, x1, x0
    88f4:	str	x0, [sp, #328]
    88f8:	ldr	x1, [sp, #328]
    88fc:	ldr	x0, [sp, #312]
    8900:	sub	x0, x1, x0
    8904:	str	x0, [sp, #328]
    8908:	ldr	x0, [sp, #328]
    890c:	ldr	x1, [sp, #344]
    8910:	udiv	x2, x0, x1
    8914:	ldr	x1, [sp, #344]
    8918:	mul	x1, x2, x1
    891c:	sub	x0, x0, x1
    8920:	str	x0, [sp, #304]
    8924:	ldr	x1, [sp, #328]
    8928:	ldr	x0, [sp, #344]
    892c:	udiv	x0, x1, x0
    8930:	str	x0, [sp, #296]
    8934:	ldr	x1, [sp, #336]
    8938:	ldr	x0, [sp, #296]
    893c:	mul	x0, x1, x0
    8940:	str	x0, [sp, #312]
    8944:	ldr	x0, [sp, #304]
    8948:	lsl	x1, x0, #32
    894c:	ldr	x0, [sp, #512]
    8950:	and	x0, x0, #0xffffffff
    8954:	orr	x0, x1, x0
    8958:	str	x0, [sp, #304]
    895c:	ldr	x1, [sp, #312]
    8960:	ldr	x0, [sp, #304]
    8964:	cmp	x1, x0
    8968:	b.ls	89c4 <__divti3@@GCC_3.0+0x774>  // b.plast
    896c:	ldr	x0, [sp, #296]
    8970:	sub	x0, x0, #0x1
    8974:	str	x0, [sp, #296]
    8978:	ldr	x1, [sp, #304]
    897c:	ldr	x0, [sp, #528]
    8980:	add	x0, x1, x0
    8984:	str	x0, [sp, #304]
    8988:	ldr	x1, [sp, #528]
    898c:	ldr	x0, [sp, #304]
    8990:	cmp	x1, x0
    8994:	b.hi	89c4 <__divti3@@GCC_3.0+0x774>  // b.pmore
    8998:	ldr	x1, [sp, #312]
    899c:	ldr	x0, [sp, #304]
    89a0:	cmp	x1, x0
    89a4:	b.ls	89c4 <__divti3@@GCC_3.0+0x774>  // b.plast
    89a8:	ldr	x0, [sp, #296]
    89ac:	sub	x0, x0, #0x1
    89b0:	str	x0, [sp, #296]
    89b4:	ldr	x1, [sp, #304]
    89b8:	ldr	x0, [sp, #528]
    89bc:	add	x0, x1, x0
    89c0:	str	x0, [sp, #304]
    89c4:	ldr	x1, [sp, #304]
    89c8:	ldr	x0, [sp, #312]
    89cc:	sub	x0, x1, x0
    89d0:	str	x0, [sp, #304]
    89d4:	ldr	x0, [sp, #320]
    89d8:	lsl	x1, x0, #32
    89dc:	ldr	x0, [sp, #296]
    89e0:	orr	x0, x1, x0
    89e4:	str	x0, [sp, #432]
    89e8:	ldr	x0, [sp, #304]
    89ec:	str	x0, [sp, #512]
    89f0:	ldr	x0, [sp, #536]
    89f4:	cmp	x0, #0x0
    89f8:	b.eq	8f90 <__divti3@@GCC_3.0+0xd40>  // b.none
    89fc:	ldr	x0, [sp, #496]
    8a00:	mov	w1, w0
    8a04:	ldr	x0, [sp, #512]
    8a08:	lsr	x0, x0, x1
    8a0c:	str	x0, [sp, #48]
    8a10:	str	xzr, [sp, #56]
    8a14:	ldp	x0, x1, [sp, #48]
    8a18:	ldr	x2, [sp, #536]
    8a1c:	stp	x0, x1, [x2]
    8a20:	b	8f90 <__divti3@@GCC_3.0+0xd40>
    8a24:	ldr	x1, [sp, #520]
    8a28:	ldr	x0, [sp, #504]
    8a2c:	cmp	x1, x0
    8a30:	b.ls	8a68 <__divti3@@GCC_3.0+0x818>  // b.plast
    8a34:	str	xzr, [sp, #432]
    8a38:	str	xzr, [sp, #424]
    8a3c:	ldr	x0, [sp, #536]
    8a40:	cmp	x0, #0x0
    8a44:	b.eq	8f90 <__divti3@@GCC_3.0+0xd40>  // b.none
    8a48:	ldr	x0, [sp, #512]
    8a4c:	str	x0, [sp, #48]
    8a50:	ldr	x0, [sp, #504]
    8a54:	str	x0, [sp, #56]
    8a58:	ldp	x0, x1, [sp, #48]
    8a5c:	ldr	x2, [sp, #536]
    8a60:	stp	x0, x1, [x2]
    8a64:	b	8f90 <__divti3@@GCC_3.0+0xd40>
    8a68:	ldr	x0, [sp, #520]
    8a6c:	clz	x0, x0
    8a70:	sxtw	x0, w0
    8a74:	str	x0, [sp, #496]
    8a78:	ldr	x0, [sp, #496]
    8a7c:	cmp	x0, #0x0
    8a80:	b.ne	8b28 <__divti3@@GCC_3.0+0x8d8>  // b.any
    8a84:	ldr	x1, [sp, #520]
    8a88:	ldr	x0, [sp, #504]
    8a8c:	cmp	x1, x0
    8a90:	b.cc	8aa4 <__divti3@@GCC_3.0+0x854>  // b.lo, b.ul, b.last
    8a94:	ldr	x1, [sp, #528]
    8a98:	ldr	x0, [sp, #512]
    8a9c:	cmp	x1, x0
    8aa0:	b.hi	8af4 <__divti3@@GCC_3.0+0x8a4>  // b.pmore
    8aa4:	mov	x0, #0x1                   	// #1
    8aa8:	str	x0, [sp, #432]
    8aac:	ldr	x1, [sp, #512]
    8ab0:	ldr	x0, [sp, #528]
    8ab4:	sub	x0, x1, x0
    8ab8:	str	x0, [sp, #288]
    8abc:	ldr	x1, [sp, #504]
    8ac0:	ldr	x0, [sp, #520]
    8ac4:	sub	x1, x1, x0
    8ac8:	ldr	x2, [sp, #512]
    8acc:	ldr	x0, [sp, #288]
    8ad0:	cmp	x2, x0
    8ad4:	cset	w0, cc  // cc = lo, ul, last
    8ad8:	and	w0, w0, #0xff
    8adc:	and	x0, x0, #0xff
    8ae0:	sub	x0, x1, x0
    8ae4:	str	x0, [sp, #504]
    8ae8:	ldr	x0, [sp, #288]
    8aec:	str	x0, [sp, #512]
    8af0:	b	8af8 <__divti3@@GCC_3.0+0x8a8>
    8af4:	str	xzr, [sp, #432]
    8af8:	str	xzr, [sp, #424]
    8afc:	ldr	x0, [sp, #536]
    8b00:	cmp	x0, #0x0
    8b04:	b.eq	8f90 <__divti3@@GCC_3.0+0xd40>  // b.none
    8b08:	ldr	x0, [sp, #512]
    8b0c:	str	x0, [sp, #48]
    8b10:	ldr	x0, [sp, #504]
    8b14:	str	x0, [sp, #56]
    8b18:	ldp	x0, x1, [sp, #48]
    8b1c:	ldr	x2, [sp, #536]
    8b20:	stp	x0, x1, [x2]
    8b24:	b	8f90 <__divti3@@GCC_3.0+0xd40>
    8b28:	mov	x1, #0x40                  	// #64
    8b2c:	ldr	x0, [sp, #496]
    8b30:	sub	x0, x1, x0
    8b34:	str	x0, [sp, #416]
    8b38:	ldr	x0, [sp, #496]
    8b3c:	mov	w1, w0
    8b40:	ldr	x0, [sp, #520]
    8b44:	lsl	x1, x0, x1
    8b48:	ldr	x0, [sp, #416]
    8b4c:	mov	w2, w0
    8b50:	ldr	x0, [sp, #528]
    8b54:	lsr	x0, x0, x2
    8b58:	orr	x0, x1, x0
    8b5c:	str	x0, [sp, #520]
    8b60:	ldr	x0, [sp, #496]
    8b64:	mov	w1, w0
    8b68:	ldr	x0, [sp, #528]
    8b6c:	lsl	x0, x0, x1
    8b70:	str	x0, [sp, #528]
    8b74:	ldr	x0, [sp, #416]
    8b78:	mov	w1, w0
    8b7c:	ldr	x0, [sp, #504]
    8b80:	lsr	x0, x0, x1
    8b84:	str	x0, [sp, #408]
    8b88:	ldr	x0, [sp, #496]
    8b8c:	mov	w1, w0
    8b90:	ldr	x0, [sp, #504]
    8b94:	lsl	x1, x0, x1
    8b98:	ldr	x0, [sp, #416]
    8b9c:	mov	w2, w0
    8ba0:	ldr	x0, [sp, #512]
    8ba4:	lsr	x0, x0, x2
    8ba8:	orr	x0, x1, x0
    8bac:	str	x0, [sp, #504]
    8bb0:	ldr	x0, [sp, #496]
    8bb4:	mov	w1, w0
    8bb8:	ldr	x0, [sp, #512]
    8bbc:	lsl	x0, x0, x1
    8bc0:	str	x0, [sp, #512]
    8bc4:	ldr	x0, [sp, #520]
    8bc8:	lsr	x0, x0, #32
    8bcc:	str	x0, [sp, #280]
    8bd0:	ldr	x0, [sp, #520]
    8bd4:	and	x0, x0, #0xffffffff
    8bd8:	str	x0, [sp, #272]
    8bdc:	ldr	x0, [sp, #408]
    8be0:	ldr	x1, [sp, #280]
    8be4:	udiv	x2, x0, x1
    8be8:	ldr	x1, [sp, #280]
    8bec:	mul	x1, x2, x1
    8bf0:	sub	x0, x0, x1
    8bf4:	str	x0, [sp, #264]
    8bf8:	ldr	x1, [sp, #408]
    8bfc:	ldr	x0, [sp, #280]
    8c00:	udiv	x0, x1, x0
    8c04:	str	x0, [sp, #256]
    8c08:	ldr	x1, [sp, #272]
    8c0c:	ldr	x0, [sp, #256]
    8c10:	mul	x0, x1, x0
    8c14:	str	x0, [sp, #248]
    8c18:	ldr	x0, [sp, #264]
    8c1c:	lsl	x1, x0, #32
    8c20:	ldr	x0, [sp, #504]
    8c24:	lsr	x0, x0, #32
    8c28:	orr	x0, x1, x0
    8c2c:	str	x0, [sp, #264]
    8c30:	ldr	x1, [sp, #248]
    8c34:	ldr	x0, [sp, #264]
    8c38:	cmp	x1, x0
    8c3c:	b.ls	8c98 <__divti3@@GCC_3.0+0xa48>  // b.plast
    8c40:	ldr	x0, [sp, #256]
    8c44:	sub	x0, x0, #0x1
    8c48:	str	x0, [sp, #256]
    8c4c:	ldr	x1, [sp, #264]
    8c50:	ldr	x0, [sp, #520]
    8c54:	add	x0, x1, x0
    8c58:	str	x0, [sp, #264]
    8c5c:	ldr	x1, [sp, #520]
    8c60:	ldr	x0, [sp, #264]
    8c64:	cmp	x1, x0
    8c68:	b.hi	8c98 <__divti3@@GCC_3.0+0xa48>  // b.pmore
    8c6c:	ldr	x1, [sp, #248]
    8c70:	ldr	x0, [sp, #264]
    8c74:	cmp	x1, x0
    8c78:	b.ls	8c98 <__divti3@@GCC_3.0+0xa48>  // b.plast
    8c7c:	ldr	x0, [sp, #256]
    8c80:	sub	x0, x0, #0x1
    8c84:	str	x0, [sp, #256]
    8c88:	ldr	x1, [sp, #264]
    8c8c:	ldr	x0, [sp, #520]
    8c90:	add	x0, x1, x0
    8c94:	str	x0, [sp, #264]
    8c98:	ldr	x1, [sp, #264]
    8c9c:	ldr	x0, [sp, #248]
    8ca0:	sub	x0, x1, x0
    8ca4:	str	x0, [sp, #264]
    8ca8:	ldr	x0, [sp, #264]
    8cac:	ldr	x1, [sp, #280]
    8cb0:	udiv	x2, x0, x1
    8cb4:	ldr	x1, [sp, #280]
    8cb8:	mul	x1, x2, x1
    8cbc:	sub	x0, x0, x1
    8cc0:	str	x0, [sp, #240]
    8cc4:	ldr	x1, [sp, #264]
    8cc8:	ldr	x0, [sp, #280]
    8ccc:	udiv	x0, x1, x0
    8cd0:	str	x0, [sp, #232]
    8cd4:	ldr	x1, [sp, #272]
    8cd8:	ldr	x0, [sp, #232]
    8cdc:	mul	x0, x1, x0
    8ce0:	str	x0, [sp, #248]
    8ce4:	ldr	x0, [sp, #240]
    8ce8:	lsl	x1, x0, #32
    8cec:	ldr	x0, [sp, #504]
    8cf0:	and	x0, x0, #0xffffffff
    8cf4:	orr	x0, x1, x0
    8cf8:	str	x0, [sp, #240]
    8cfc:	ldr	x1, [sp, #248]
    8d00:	ldr	x0, [sp, #240]
    8d04:	cmp	x1, x0
    8d08:	b.ls	8d64 <__divti3@@GCC_3.0+0xb14>  // b.plast
    8d0c:	ldr	x0, [sp, #232]
    8d10:	sub	x0, x0, #0x1
    8d14:	str	x0, [sp, #232]
    8d18:	ldr	x1, [sp, #240]
    8d1c:	ldr	x0, [sp, #520]
    8d20:	add	x0, x1, x0
    8d24:	str	x0, [sp, #240]
    8d28:	ldr	x1, [sp, #520]
    8d2c:	ldr	x0, [sp, #240]
    8d30:	cmp	x1, x0
    8d34:	b.hi	8d64 <__divti3@@GCC_3.0+0xb14>  // b.pmore
    8d38:	ldr	x1, [sp, #248]
    8d3c:	ldr	x0, [sp, #240]
    8d40:	cmp	x1, x0
    8d44:	b.ls	8d64 <__divti3@@GCC_3.0+0xb14>  // b.plast
    8d48:	ldr	x0, [sp, #232]
    8d4c:	sub	x0, x0, #0x1
    8d50:	str	x0, [sp, #232]
    8d54:	ldr	x1, [sp, #240]
    8d58:	ldr	x0, [sp, #520]
    8d5c:	add	x0, x1, x0
    8d60:	str	x0, [sp, #240]
    8d64:	ldr	x1, [sp, #240]
    8d68:	ldr	x0, [sp, #248]
    8d6c:	sub	x0, x1, x0
    8d70:	str	x0, [sp, #240]
    8d74:	ldr	x0, [sp, #256]
    8d78:	lsl	x1, x0, #32
    8d7c:	ldr	x0, [sp, #232]
    8d80:	orr	x0, x1, x0
    8d84:	str	x0, [sp, #432]
    8d88:	ldr	x0, [sp, #240]
    8d8c:	str	x0, [sp, #504]
    8d90:	ldr	x0, [sp, #432]
    8d94:	and	x0, x0, #0xffffffff
    8d98:	str	x0, [sp, #224]
    8d9c:	ldr	x0, [sp, #432]
    8da0:	lsr	x0, x0, #32
    8da4:	str	x0, [sp, #216]
    8da8:	ldr	x0, [sp, #528]
    8dac:	and	x0, x0, #0xffffffff
    8db0:	str	x0, [sp, #208]
    8db4:	ldr	x0, [sp, #528]
    8db8:	lsr	x0, x0, #32
    8dbc:	str	x0, [sp, #200]
    8dc0:	ldr	x1, [sp, #224]
    8dc4:	ldr	x0, [sp, #208]
    8dc8:	mul	x0, x1, x0
    8dcc:	str	x0, [sp, #192]
    8dd0:	ldr	x1, [sp, #224]
    8dd4:	ldr	x0, [sp, #200]
    8dd8:	mul	x0, x1, x0
    8ddc:	str	x0, [sp, #184]
    8de0:	ldr	x1, [sp, #216]
    8de4:	ldr	x0, [sp, #208]
    8de8:	mul	x0, x1, x0
    8dec:	str	x0, [sp, #176]
    8df0:	ldr	x1, [sp, #216]
    8df4:	ldr	x0, [sp, #200]
    8df8:	mul	x0, x1, x0
    8dfc:	str	x0, [sp, #168]
    8e00:	ldr	x0, [sp, #192]
    8e04:	lsr	x0, x0, #32
    8e08:	ldr	x1, [sp, #184]
    8e0c:	add	x0, x1, x0
    8e10:	str	x0, [sp, #184]
    8e14:	ldr	x1, [sp, #184]
    8e18:	ldr	x0, [sp, #176]
    8e1c:	add	x0, x1, x0
    8e20:	str	x0, [sp, #184]
    8e24:	ldr	x1, [sp, #176]
    8e28:	ldr	x0, [sp, #184]
    8e2c:	cmp	x1, x0
    8e30:	b.ls	8e44 <__divti3@@GCC_3.0+0xbf4>  // b.plast
    8e34:	ldr	x1, [sp, #168]
    8e38:	mov	x0, #0x100000000           	// #4294967296
    8e3c:	add	x0, x1, x0
    8e40:	str	x0, [sp, #168]
    8e44:	ldr	x0, [sp, #184]
    8e48:	lsr	x1, x0, #32
    8e4c:	ldr	x0, [sp, #168]
    8e50:	add	x0, x1, x0
    8e54:	str	x0, [sp, #160]
    8e58:	ldr	x0, [sp, #184]
    8e5c:	and	x0, x0, #0xffffffff
    8e60:	lsl	x1, x0, #32
    8e64:	ldr	x0, [sp, #192]
    8e68:	and	x0, x0, #0xffffffff
    8e6c:	add	x0, x1, x0
    8e70:	str	x0, [sp, #152]
    8e74:	ldr	x1, [sp, #504]
    8e78:	ldr	x0, [sp, #160]
    8e7c:	cmp	x1, x0
    8e80:	b.cc	8ea4 <__divti3@@GCC_3.0+0xc54>  // b.lo, b.ul, b.last
    8e84:	ldr	x1, [sp, #504]
    8e88:	ldr	x0, [sp, #160]
    8e8c:	cmp	x1, x0
    8e90:	b.ne	8ef4 <__divti3@@GCC_3.0+0xca4>  // b.any
    8e94:	ldr	x1, [sp, #512]
    8e98:	ldr	x0, [sp, #152]
    8e9c:	cmp	x1, x0
    8ea0:	b.cs	8ef4 <__divti3@@GCC_3.0+0xca4>  // b.hs, b.nlast
    8ea4:	ldr	x0, [sp, #432]
    8ea8:	sub	x0, x0, #0x1
    8eac:	str	x0, [sp, #432]
    8eb0:	ldr	x1, [sp, #152]
    8eb4:	ldr	x0, [sp, #528]
    8eb8:	sub	x0, x1, x0
    8ebc:	str	x0, [sp, #144]
    8ec0:	ldr	x1, [sp, #160]
    8ec4:	ldr	x0, [sp, #520]
    8ec8:	sub	x1, x1, x0
    8ecc:	ldr	x2, [sp, #152]
    8ed0:	ldr	x0, [sp, #144]
    8ed4:	cmp	x2, x0
    8ed8:	cset	w0, cc  // cc = lo, ul, last
    8edc:	and	w0, w0, #0xff
    8ee0:	and	x0, x0, #0xff
    8ee4:	sub	x0, x1, x0
    8ee8:	str	x0, [sp, #160]
    8eec:	ldr	x0, [sp, #144]
    8ef0:	str	x0, [sp, #152]
    8ef4:	str	xzr, [sp, #424]
    8ef8:	ldr	x0, [sp, #536]
    8efc:	cmp	x0, #0x0
    8f00:	b.eq	8f90 <__divti3@@GCC_3.0+0xd40>  // b.none
    8f04:	ldr	x1, [sp, #512]
    8f08:	ldr	x0, [sp, #152]
    8f0c:	sub	x0, x1, x0
    8f10:	str	x0, [sp, #136]
    8f14:	ldr	x1, [sp, #504]
    8f18:	ldr	x0, [sp, #160]
    8f1c:	sub	x1, x1, x0
    8f20:	ldr	x2, [sp, #512]
    8f24:	ldr	x0, [sp, #136]
    8f28:	cmp	x2, x0
    8f2c:	cset	w0, cc  // cc = lo, ul, last
    8f30:	and	w0, w0, #0xff
    8f34:	and	x0, x0, #0xff
    8f38:	sub	x0, x1, x0
    8f3c:	str	x0, [sp, #504]
    8f40:	ldr	x0, [sp, #136]
    8f44:	str	x0, [sp, #512]
    8f48:	ldr	x0, [sp, #416]
    8f4c:	mov	w1, w0
    8f50:	ldr	x0, [sp, #504]
    8f54:	lsl	x1, x0, x1
    8f58:	ldr	x0, [sp, #496]
    8f5c:	mov	w2, w0
    8f60:	ldr	x0, [sp, #512]
    8f64:	lsr	x0, x0, x2
    8f68:	orr	x0, x1, x0
    8f6c:	str	x0, [sp, #48]
    8f70:	ldr	x0, [sp, #496]
    8f74:	mov	w1, w0
    8f78:	ldr	x0, [sp, #504]
    8f7c:	lsr	x0, x0, x1
    8f80:	str	x0, [sp, #56]
    8f84:	ldp	x0, x1, [sp, #48]
    8f88:	ldr	x2, [sp, #536]
    8f8c:	stp	x0, x1, [x2]
    8f90:	ldr	x0, [sp, #432]
    8f94:	str	x0, [sp, #32]
    8f98:	ldr	x0, [sp, #424]
    8f9c:	str	x0, [sp, #40]
    8fa0:	ldp	x0, x1, [sp, #32]
    8fa4:	add	x2, sp, #0x200
    8fa8:	stp	x0, x1, [x2, #64]
    8fac:	ldr	x0, [sp, #600]
    8fb0:	cmp	x0, #0x0
    8fb4:	b.eq	8fd8 <__divti3@@GCC_3.0+0xd88>  // b.none
    8fb8:	add	x0, sp, #0x200
    8fbc:	ldp	x0, x1, [x0, #64]
    8fc0:	negs	x2, x0
    8fc4:	ngc	x0, x1
    8fc8:	mov	x4, x2
    8fcc:	mov	x5, x0
    8fd0:	add	x0, sp, #0x200
    8fd4:	stp	x4, x5, [x0, #64]
    8fd8:	add	x0, sp, #0x200
    8fdc:	ldp	x0, x1, [x0, #64]
    8fe0:	add	sp, sp, #0x260
    8fe4:	ret

0000000000008fe8 <__modti3@@GCC_3.0>:
    8fe8:	sub	sp, sp, #0x260
    8fec:	stp	x0, x1, [sp, #16]
    8ff0:	stp	x2, x3, [sp]
    8ff4:	str	xzr, [sp, #600]
    8ff8:	ldp	x0, x1, [sp, #16]
    8ffc:	stp	x0, x1, [sp, #128]
    9000:	ldp	x0, x1, [sp]
    9004:	stp	x0, x1, [sp, #112]
    9008:	ldr	x0, [sp, #136]
    900c:	cmp	x0, #0x0
    9010:	b.ge	9038 <__modti3@@GCC_3.0+0x50>  // b.tcont
    9014:	ldr	x0, [sp, #600]
    9018:	mvn	x0, x0
    901c:	str	x0, [sp, #600]
    9020:	ldp	x0, x1, [sp, #128]
    9024:	negs	x2, x0
    9028:	ngc	x0, x1
    902c:	mov	x8, x2
    9030:	mov	x9, x0
    9034:	stp	x8, x9, [sp, #128]
    9038:	ldr	x0, [sp, #120]
    903c:	cmp	x0, #0x0
    9040:	b.ge	905c <__modti3@@GCC_3.0+0x74>  // b.tcont
    9044:	ldp	x0, x1, [sp, #112]
    9048:	negs	x2, x0
    904c:	ngc	x0, x1
    9050:	mov	x6, x2
    9054:	mov	x7, x0
    9058:	stp	x6, x7, [sp, #112]
    905c:	ldp	x0, x1, [sp, #128]
    9060:	mov	x2, x0
    9064:	mov	x3, x1
    9068:	ldp	x0, x1, [sp, #112]
    906c:	add	x6, sp, #0x200
    9070:	stp	x2, x3, [x6, #64]
    9074:	add	x2, sp, #0x200
    9078:	stp	x0, x1, [x2, #48]
    907c:	add	x0, sp, #0x60
    9080:	str	x0, [sp, #552]
    9084:	add	x0, sp, #0x200
    9088:	ldp	x0, x1, [x0, #64]
    908c:	stp	x0, x1, [sp, #80]
    9090:	add	x0, sp, #0x200
    9094:	ldp	x0, x1, [x0, #48]
    9098:	stp	x0, x1, [sp, #64]
    909c:	ldr	x0, [sp, #64]
    90a0:	str	x0, [sp, #544]
    90a4:	ldr	x0, [sp, #72]
    90a8:	str	x0, [sp, #536]
    90ac:	ldr	x0, [sp, #80]
    90b0:	str	x0, [sp, #528]
    90b4:	ldr	x0, [sp, #88]
    90b8:	str	x0, [sp, #520]
    90bc:	ldr	x0, [sp, #536]
    90c0:	cmp	x0, #0x0
    90c4:	b.ne	97b4 <__modti3@@GCC_3.0+0x7cc>  // b.any
    90c8:	ldr	x1, [sp, #544]
    90cc:	ldr	x0, [sp, #520]
    90d0:	cmp	x1, x0
    90d4:	b.ls	9320 <__modti3@@GCC_3.0+0x338>  // b.plast
    90d8:	ldr	x0, [sp, #544]
    90dc:	clz	x0, x0
    90e0:	sxtw	x0, w0
    90e4:	str	x0, [sp, #512]
    90e8:	ldr	x0, [sp, #512]
    90ec:	cmp	x0, #0x0
    90f0:	b.eq	914c <__modti3@@GCC_3.0+0x164>  // b.none
    90f4:	ldr	x0, [sp, #512]
    90f8:	mov	w1, w0
    90fc:	ldr	x0, [sp, #544]
    9100:	lsl	x0, x0, x1
    9104:	str	x0, [sp, #544]
    9108:	ldr	x0, [sp, #512]
    910c:	mov	w1, w0
    9110:	ldr	x0, [sp, #520]
    9114:	lsl	x1, x0, x1
    9118:	ldr	x0, [sp, #512]
    911c:	mov	w2, w0
    9120:	mov	w0, #0x40                  	// #64
    9124:	sub	w0, w0, w2
    9128:	ldr	x2, [sp, #528]
    912c:	lsr	x0, x2, x0
    9130:	orr	x0, x1, x0
    9134:	str	x0, [sp, #520]
    9138:	ldr	x0, [sp, #512]
    913c:	mov	w1, w0
    9140:	ldr	x0, [sp, #528]
    9144:	lsl	x0, x0, x1
    9148:	str	x0, [sp, #528]
    914c:	ldr	x0, [sp, #544]
    9150:	lsr	x0, x0, #32
    9154:	str	x0, [sp, #504]
    9158:	ldr	x0, [sp, #544]
    915c:	and	x0, x0, #0xffffffff
    9160:	str	x0, [sp, #496]
    9164:	ldr	x0, [sp, #520]
    9168:	ldr	x1, [sp, #504]
    916c:	udiv	x2, x0, x1
    9170:	ldr	x1, [sp, #504]
    9174:	mul	x1, x2, x1
    9178:	sub	x0, x0, x1
    917c:	str	x0, [sp, #488]
    9180:	ldr	x1, [sp, #520]
    9184:	ldr	x0, [sp, #504]
    9188:	udiv	x0, x1, x0
    918c:	str	x0, [sp, #480]
    9190:	ldr	x1, [sp, #496]
    9194:	ldr	x0, [sp, #480]
    9198:	mul	x0, x1, x0
    919c:	str	x0, [sp, #472]
    91a0:	ldr	x0, [sp, #488]
    91a4:	lsl	x1, x0, #32
    91a8:	ldr	x0, [sp, #528]
    91ac:	lsr	x0, x0, #32
    91b0:	orr	x0, x1, x0
    91b4:	str	x0, [sp, #488]
    91b8:	ldr	x1, [sp, #472]
    91bc:	ldr	x0, [sp, #488]
    91c0:	cmp	x1, x0
    91c4:	b.ls	9220 <__modti3@@GCC_3.0+0x238>  // b.plast
    91c8:	ldr	x0, [sp, #480]
    91cc:	sub	x0, x0, #0x1
    91d0:	str	x0, [sp, #480]
    91d4:	ldr	x1, [sp, #488]
    91d8:	ldr	x0, [sp, #544]
    91dc:	add	x0, x1, x0
    91e0:	str	x0, [sp, #488]
    91e4:	ldr	x1, [sp, #544]
    91e8:	ldr	x0, [sp, #488]
    91ec:	cmp	x1, x0
    91f0:	b.hi	9220 <__modti3@@GCC_3.0+0x238>  // b.pmore
    91f4:	ldr	x1, [sp, #472]
    91f8:	ldr	x0, [sp, #488]
    91fc:	cmp	x1, x0
    9200:	b.ls	9220 <__modti3@@GCC_3.0+0x238>  // b.plast
    9204:	ldr	x0, [sp, #480]
    9208:	sub	x0, x0, #0x1
    920c:	str	x0, [sp, #480]
    9210:	ldr	x1, [sp, #488]
    9214:	ldr	x0, [sp, #544]
    9218:	add	x0, x1, x0
    921c:	str	x0, [sp, #488]
    9220:	ldr	x1, [sp, #488]
    9224:	ldr	x0, [sp, #472]
    9228:	sub	x0, x1, x0
    922c:	str	x0, [sp, #488]
    9230:	ldr	x0, [sp, #488]
    9234:	ldr	x1, [sp, #504]
    9238:	udiv	x2, x0, x1
    923c:	ldr	x1, [sp, #504]
    9240:	mul	x1, x2, x1
    9244:	sub	x0, x0, x1
    9248:	str	x0, [sp, #464]
    924c:	ldr	x1, [sp, #488]
    9250:	ldr	x0, [sp, #504]
    9254:	udiv	x0, x1, x0
    9258:	str	x0, [sp, #456]
    925c:	ldr	x1, [sp, #496]
    9260:	ldr	x0, [sp, #456]
    9264:	mul	x0, x1, x0
    9268:	str	x0, [sp, #472]
    926c:	ldr	x0, [sp, #464]
    9270:	lsl	x1, x0, #32
    9274:	ldr	x0, [sp, #528]
    9278:	and	x0, x0, #0xffffffff
    927c:	orr	x0, x1, x0
    9280:	str	x0, [sp, #464]
    9284:	ldr	x1, [sp, #472]
    9288:	ldr	x0, [sp, #464]
    928c:	cmp	x1, x0
    9290:	b.ls	92ec <__modti3@@GCC_3.0+0x304>  // b.plast
    9294:	ldr	x0, [sp, #456]
    9298:	sub	x0, x0, #0x1
    929c:	str	x0, [sp, #456]
    92a0:	ldr	x1, [sp, #464]
    92a4:	ldr	x0, [sp, #544]
    92a8:	add	x0, x1, x0
    92ac:	str	x0, [sp, #464]
    92b0:	ldr	x1, [sp, #544]
    92b4:	ldr	x0, [sp, #464]
    92b8:	cmp	x1, x0
    92bc:	b.hi	92ec <__modti3@@GCC_3.0+0x304>  // b.pmore
    92c0:	ldr	x1, [sp, #472]
    92c4:	ldr	x0, [sp, #464]
    92c8:	cmp	x1, x0
    92cc:	b.ls	92ec <__modti3@@GCC_3.0+0x304>  // b.plast
    92d0:	ldr	x0, [sp, #456]
    92d4:	sub	x0, x0, #0x1
    92d8:	str	x0, [sp, #456]
    92dc:	ldr	x1, [sp, #464]
    92e0:	ldr	x0, [sp, #544]
    92e4:	add	x0, x1, x0
    92e8:	str	x0, [sp, #464]
    92ec:	ldr	x1, [sp, #464]
    92f0:	ldr	x0, [sp, #472]
    92f4:	sub	x0, x1, x0
    92f8:	str	x0, [sp, #464]
    92fc:	ldr	x0, [sp, #480]
    9300:	lsl	x1, x0, #32
    9304:	ldr	x0, [sp, #456]
    9308:	orr	x0, x1, x0
    930c:	str	x0, [sp, #448]
    9310:	ldr	x0, [sp, #464]
    9314:	str	x0, [sp, #528]
    9318:	str	xzr, [sp, #440]
    931c:	b	9780 <__modti3@@GCC_3.0+0x798>
    9320:	ldr	x0, [sp, #544]
    9324:	cmp	x0, #0x0
    9328:	b.ne	933c <__modti3@@GCC_3.0+0x354>  // b.any
    932c:	mov	x1, #0x1                   	// #1
    9330:	ldr	x0, [sp, #544]
    9334:	udiv	x0, x1, x0
    9338:	str	x0, [sp, #544]
    933c:	ldr	x0, [sp, #544]
    9340:	clz	x0, x0
    9344:	sxtw	x0, w0
    9348:	str	x0, [sp, #512]
    934c:	ldr	x0, [sp, #512]
    9350:	cmp	x0, #0x0
    9354:	b.ne	9374 <__modti3@@GCC_3.0+0x38c>  // b.any
    9358:	ldr	x1, [sp, #520]
    935c:	ldr	x0, [sp, #544]
    9360:	sub	x0, x1, x0
    9364:	str	x0, [sp, #520]
    9368:	mov	x0, #0x1                   	// #1
    936c:	str	x0, [sp, #440]
    9370:	b	95b4 <__modti3@@GCC_3.0+0x5cc>
    9374:	mov	x1, #0x40                  	// #64
    9378:	ldr	x0, [sp, #512]
    937c:	sub	x0, x1, x0
    9380:	str	x0, [sp, #432]
    9384:	ldr	x0, [sp, #512]
    9388:	mov	w1, w0
    938c:	ldr	x0, [sp, #544]
    9390:	lsl	x0, x0, x1
    9394:	str	x0, [sp, #544]
    9398:	ldr	x0, [sp, #432]
    939c:	mov	w1, w0
    93a0:	ldr	x0, [sp, #520]
    93a4:	lsr	x0, x0, x1
    93a8:	str	x0, [sp, #424]
    93ac:	ldr	x0, [sp, #512]
    93b0:	mov	w1, w0
    93b4:	ldr	x0, [sp, #520]
    93b8:	lsl	x1, x0, x1
    93bc:	ldr	x0, [sp, #432]
    93c0:	mov	w2, w0
    93c4:	ldr	x0, [sp, #528]
    93c8:	lsr	x0, x0, x2
    93cc:	orr	x0, x1, x0
    93d0:	str	x0, [sp, #520]
    93d4:	ldr	x0, [sp, #512]
    93d8:	mov	w1, w0
    93dc:	ldr	x0, [sp, #528]
    93e0:	lsl	x0, x0, x1
    93e4:	str	x0, [sp, #528]
    93e8:	ldr	x0, [sp, #544]
    93ec:	lsr	x0, x0, #32
    93f0:	str	x0, [sp, #416]
    93f4:	ldr	x0, [sp, #544]
    93f8:	and	x0, x0, #0xffffffff
    93fc:	str	x0, [sp, #408]
    9400:	ldr	x0, [sp, #424]
    9404:	ldr	x1, [sp, #416]
    9408:	udiv	x2, x0, x1
    940c:	ldr	x1, [sp, #416]
    9410:	mul	x1, x2, x1
    9414:	sub	x0, x0, x1
    9418:	str	x0, [sp, #400]
    941c:	ldr	x1, [sp, #424]
    9420:	ldr	x0, [sp, #416]
    9424:	udiv	x0, x1, x0
    9428:	str	x0, [sp, #392]
    942c:	ldr	x1, [sp, #408]
    9430:	ldr	x0, [sp, #392]
    9434:	mul	x0, x1, x0
    9438:	str	x0, [sp, #384]
    943c:	ldr	x0, [sp, #400]
    9440:	lsl	x1, x0, #32
    9444:	ldr	x0, [sp, #520]
    9448:	lsr	x0, x0, #32
    944c:	orr	x0, x1, x0
    9450:	str	x0, [sp, #400]
    9454:	ldr	x1, [sp, #384]
    9458:	ldr	x0, [sp, #400]
    945c:	cmp	x1, x0
    9460:	b.ls	94bc <__modti3@@GCC_3.0+0x4d4>  // b.plast
    9464:	ldr	x0, [sp, #392]
    9468:	sub	x0, x0, #0x1
    946c:	str	x0, [sp, #392]
    9470:	ldr	x1, [sp, #400]
    9474:	ldr	x0, [sp, #544]
    9478:	add	x0, x1, x0
    947c:	str	x0, [sp, #400]
    9480:	ldr	x1, [sp, #544]
    9484:	ldr	x0, [sp, #400]
    9488:	cmp	x1, x0
    948c:	b.hi	94bc <__modti3@@GCC_3.0+0x4d4>  // b.pmore
    9490:	ldr	x1, [sp, #384]
    9494:	ldr	x0, [sp, #400]
    9498:	cmp	x1, x0
    949c:	b.ls	94bc <__modti3@@GCC_3.0+0x4d4>  // b.plast
    94a0:	ldr	x0, [sp, #392]
    94a4:	sub	x0, x0, #0x1
    94a8:	str	x0, [sp, #392]
    94ac:	ldr	x1, [sp, #400]
    94b0:	ldr	x0, [sp, #544]
    94b4:	add	x0, x1, x0
    94b8:	str	x0, [sp, #400]
    94bc:	ldr	x1, [sp, #400]
    94c0:	ldr	x0, [sp, #384]
    94c4:	sub	x0, x1, x0
    94c8:	str	x0, [sp, #400]
    94cc:	ldr	x0, [sp, #400]
    94d0:	ldr	x1, [sp, #416]
    94d4:	udiv	x2, x0, x1
    94d8:	ldr	x1, [sp, #416]
    94dc:	mul	x1, x2, x1
    94e0:	sub	x0, x0, x1
    94e4:	str	x0, [sp, #376]
    94e8:	ldr	x1, [sp, #400]
    94ec:	ldr	x0, [sp, #416]
    94f0:	udiv	x0, x1, x0
    94f4:	str	x0, [sp, #368]
    94f8:	ldr	x1, [sp, #408]
    94fc:	ldr	x0, [sp, #368]
    9500:	mul	x0, x1, x0
    9504:	str	x0, [sp, #384]
    9508:	ldr	x0, [sp, #376]
    950c:	lsl	x1, x0, #32
    9510:	ldr	x0, [sp, #520]
    9514:	and	x0, x0, #0xffffffff
    9518:	orr	x0, x1, x0
    951c:	str	x0, [sp, #376]
    9520:	ldr	x1, [sp, #384]
    9524:	ldr	x0, [sp, #376]
    9528:	cmp	x1, x0
    952c:	b.ls	9588 <__modti3@@GCC_3.0+0x5a0>  // b.plast
    9530:	ldr	x0, [sp, #368]
    9534:	sub	x0, x0, #0x1
    9538:	str	x0, [sp, #368]
    953c:	ldr	x1, [sp, #376]
    9540:	ldr	x0, [sp, #544]
    9544:	add	x0, x1, x0
    9548:	str	x0, [sp, #376]
    954c:	ldr	x1, [sp, #544]
    9550:	ldr	x0, [sp, #376]
    9554:	cmp	x1, x0
    9558:	b.hi	9588 <__modti3@@GCC_3.0+0x5a0>  // b.pmore
    955c:	ldr	x1, [sp, #384]
    9560:	ldr	x0, [sp, #376]
    9564:	cmp	x1, x0
    9568:	b.ls	9588 <__modti3@@GCC_3.0+0x5a0>  // b.plast
    956c:	ldr	x0, [sp, #368]
    9570:	sub	x0, x0, #0x1
    9574:	str	x0, [sp, #368]
    9578:	ldr	x1, [sp, #376]
    957c:	ldr	x0, [sp, #544]
    9580:	add	x0, x1, x0
    9584:	str	x0, [sp, #376]
    9588:	ldr	x1, [sp, #376]
    958c:	ldr	x0, [sp, #384]
    9590:	sub	x0, x1, x0
    9594:	str	x0, [sp, #376]
    9598:	ldr	x0, [sp, #392]
    959c:	lsl	x1, x0, #32
    95a0:	ldr	x0, [sp, #368]
    95a4:	orr	x0, x1, x0
    95a8:	str	x0, [sp, #440]
    95ac:	ldr	x0, [sp, #376]
    95b0:	str	x0, [sp, #520]
    95b4:	ldr	x0, [sp, #544]
    95b8:	lsr	x0, x0, #32
    95bc:	str	x0, [sp, #360]
    95c0:	ldr	x0, [sp, #544]
    95c4:	and	x0, x0, #0xffffffff
    95c8:	str	x0, [sp, #352]
    95cc:	ldr	x0, [sp, #520]
    95d0:	ldr	x1, [sp, #360]
    95d4:	udiv	x2, x0, x1
    95d8:	ldr	x1, [sp, #360]
    95dc:	mul	x1, x2, x1
    95e0:	sub	x0, x0, x1
    95e4:	str	x0, [sp, #344]
    95e8:	ldr	x1, [sp, #520]
    95ec:	ldr	x0, [sp, #360]
    95f0:	udiv	x0, x1, x0
    95f4:	str	x0, [sp, #336]
    95f8:	ldr	x1, [sp, #352]
    95fc:	ldr	x0, [sp, #336]
    9600:	mul	x0, x1, x0
    9604:	str	x0, [sp, #328]
    9608:	ldr	x0, [sp, #344]
    960c:	lsl	x1, x0, #32
    9610:	ldr	x0, [sp, #528]
    9614:	lsr	x0, x0, #32
    9618:	orr	x0, x1, x0
    961c:	str	x0, [sp, #344]
    9620:	ldr	x1, [sp, #328]
    9624:	ldr	x0, [sp, #344]
    9628:	cmp	x1, x0
    962c:	b.ls	9688 <__modti3@@GCC_3.0+0x6a0>  // b.plast
    9630:	ldr	x0, [sp, #336]
    9634:	sub	x0, x0, #0x1
    9638:	str	x0, [sp, #336]
    963c:	ldr	x1, [sp, #344]
    9640:	ldr	x0, [sp, #544]
    9644:	add	x0, x1, x0
    9648:	str	x0, [sp, #344]
    964c:	ldr	x1, [sp, #544]
    9650:	ldr	x0, [sp, #344]
    9654:	cmp	x1, x0
    9658:	b.hi	9688 <__modti3@@GCC_3.0+0x6a0>  // b.pmore
    965c:	ldr	x1, [sp, #328]
    9660:	ldr	x0, [sp, #344]
    9664:	cmp	x1, x0
    9668:	b.ls	9688 <__modti3@@GCC_3.0+0x6a0>  // b.plast
    966c:	ldr	x0, [sp, #336]
    9670:	sub	x0, x0, #0x1
    9674:	str	x0, [sp, #336]
    9678:	ldr	x1, [sp, #344]
    967c:	ldr	x0, [sp, #544]
    9680:	add	x0, x1, x0
    9684:	str	x0, [sp, #344]
    9688:	ldr	x1, [sp, #344]
    968c:	ldr	x0, [sp, #328]
    9690:	sub	x0, x1, x0
    9694:	str	x0, [sp, #344]
    9698:	ldr	x0, [sp, #344]
    969c:	ldr	x1, [sp, #360]
    96a0:	udiv	x2, x0, x1
    96a4:	ldr	x1, [sp, #360]
    96a8:	mul	x1, x2, x1
    96ac:	sub	x0, x0, x1
    96b0:	str	x0, [sp, #320]
    96b4:	ldr	x1, [sp, #344]
    96b8:	ldr	x0, [sp, #360]
    96bc:	udiv	x0, x1, x0
    96c0:	str	x0, [sp, #312]
    96c4:	ldr	x1, [sp, #352]
    96c8:	ldr	x0, [sp, #312]
    96cc:	mul	x0, x1, x0
    96d0:	str	x0, [sp, #328]
    96d4:	ldr	x0, [sp, #320]
    96d8:	lsl	x1, x0, #32
    96dc:	ldr	x0, [sp, #528]
    96e0:	and	x0, x0, #0xffffffff
    96e4:	orr	x0, x1, x0
    96e8:	str	x0, [sp, #320]
    96ec:	ldr	x1, [sp, #328]
    96f0:	ldr	x0, [sp, #320]
    96f4:	cmp	x1, x0
    96f8:	b.ls	9754 <__modti3@@GCC_3.0+0x76c>  // b.plast
    96fc:	ldr	x0, [sp, #312]
    9700:	sub	x0, x0, #0x1
    9704:	str	x0, [sp, #312]
    9708:	ldr	x1, [sp, #320]
    970c:	ldr	x0, [sp, #544]
    9710:	add	x0, x1, x0
    9714:	str	x0, [sp, #320]
    9718:	ldr	x1, [sp, #544]
    971c:	ldr	x0, [sp, #320]
    9720:	cmp	x1, x0
    9724:	b.hi	9754 <__modti3@@GCC_3.0+0x76c>  // b.pmore
    9728:	ldr	x1, [sp, #328]
    972c:	ldr	x0, [sp, #320]
    9730:	cmp	x1, x0
    9734:	b.ls	9754 <__modti3@@GCC_3.0+0x76c>  // b.plast
    9738:	ldr	x0, [sp, #312]
    973c:	sub	x0, x0, #0x1
    9740:	str	x0, [sp, #312]
    9744:	ldr	x1, [sp, #320]
    9748:	ldr	x0, [sp, #544]
    974c:	add	x0, x1, x0
    9750:	str	x0, [sp, #320]
    9754:	ldr	x1, [sp, #320]
    9758:	ldr	x0, [sp, #328]
    975c:	sub	x0, x1, x0
    9760:	str	x0, [sp, #320]
    9764:	ldr	x0, [sp, #336]
    9768:	lsl	x1, x0, #32
    976c:	ldr	x0, [sp, #312]
    9770:	orr	x0, x1, x0
    9774:	str	x0, [sp, #448]
    9778:	ldr	x0, [sp, #320]
    977c:	str	x0, [sp, #528]
    9780:	ldr	x0, [sp, #552]
    9784:	cmp	x0, #0x0
    9788:	b.eq	9d20 <__modti3@@GCC_3.0+0xd38>  // b.none
    978c:	ldr	x0, [sp, #512]
    9790:	mov	w1, w0
    9794:	ldr	x0, [sp, #528]
    9798:	lsr	x0, x0, x1
    979c:	str	x0, [sp, #48]
    97a0:	str	xzr, [sp, #56]
    97a4:	ldp	x0, x1, [sp, #48]
    97a8:	ldr	x2, [sp, #552]
    97ac:	stp	x0, x1, [x2]
    97b0:	b	9d20 <__modti3@@GCC_3.0+0xd38>
    97b4:	ldr	x1, [sp, #536]
    97b8:	ldr	x0, [sp, #520]
    97bc:	cmp	x1, x0
    97c0:	b.ls	97f8 <__modti3@@GCC_3.0+0x810>  // b.plast
    97c4:	str	xzr, [sp, #448]
    97c8:	str	xzr, [sp, #440]
    97cc:	ldr	x0, [sp, #552]
    97d0:	cmp	x0, #0x0
    97d4:	b.eq	9d20 <__modti3@@GCC_3.0+0xd38>  // b.none
    97d8:	ldr	x0, [sp, #528]
    97dc:	str	x0, [sp, #48]
    97e0:	ldr	x0, [sp, #520]
    97e4:	str	x0, [sp, #56]
    97e8:	ldp	x0, x1, [sp, #48]
    97ec:	ldr	x2, [sp, #552]
    97f0:	stp	x0, x1, [x2]
    97f4:	b	9d20 <__modti3@@GCC_3.0+0xd38>
    97f8:	ldr	x0, [sp, #536]
    97fc:	clz	x0, x0
    9800:	sxtw	x0, w0
    9804:	str	x0, [sp, #512]
    9808:	ldr	x0, [sp, #512]
    980c:	cmp	x0, #0x0
    9810:	b.ne	98b8 <__modti3@@GCC_3.0+0x8d0>  // b.any
    9814:	ldr	x1, [sp, #536]
    9818:	ldr	x0, [sp, #520]
    981c:	cmp	x1, x0
    9820:	b.cc	9834 <__modti3@@GCC_3.0+0x84c>  // b.lo, b.ul, b.last
    9824:	ldr	x1, [sp, #544]
    9828:	ldr	x0, [sp, #528]
    982c:	cmp	x1, x0
    9830:	b.hi	9884 <__modti3@@GCC_3.0+0x89c>  // b.pmore
    9834:	mov	x0, #0x1                   	// #1
    9838:	str	x0, [sp, #448]
    983c:	ldr	x1, [sp, #528]
    9840:	ldr	x0, [sp, #544]
    9844:	sub	x0, x1, x0
    9848:	str	x0, [sp, #304]
    984c:	ldr	x1, [sp, #520]
    9850:	ldr	x0, [sp, #536]
    9854:	sub	x1, x1, x0
    9858:	ldr	x2, [sp, #528]
    985c:	ldr	x0, [sp, #304]
    9860:	cmp	x2, x0
    9864:	cset	w0, cc  // cc = lo, ul, last
    9868:	and	w0, w0, #0xff
    986c:	and	x0, x0, #0xff
    9870:	sub	x0, x1, x0
    9874:	str	x0, [sp, #520]
    9878:	ldr	x0, [sp, #304]
    987c:	str	x0, [sp, #528]
    9880:	b	9888 <__modti3@@GCC_3.0+0x8a0>
    9884:	str	xzr, [sp, #448]
    9888:	str	xzr, [sp, #440]
    988c:	ldr	x0, [sp, #552]
    9890:	cmp	x0, #0x0
    9894:	b.eq	9d20 <__modti3@@GCC_3.0+0xd38>  // b.none
    9898:	ldr	x0, [sp, #528]
    989c:	str	x0, [sp, #48]
    98a0:	ldr	x0, [sp, #520]
    98a4:	str	x0, [sp, #56]
    98a8:	ldp	x0, x1, [sp, #48]
    98ac:	ldr	x2, [sp, #552]
    98b0:	stp	x0, x1, [x2]
    98b4:	b	9d20 <__modti3@@GCC_3.0+0xd38>
    98b8:	mov	x1, #0x40                  	// #64
    98bc:	ldr	x0, [sp, #512]
    98c0:	sub	x0, x1, x0
    98c4:	str	x0, [sp, #432]
    98c8:	ldr	x0, [sp, #512]
    98cc:	mov	w1, w0
    98d0:	ldr	x0, [sp, #536]
    98d4:	lsl	x1, x0, x1
    98d8:	ldr	x0, [sp, #432]
    98dc:	mov	w2, w0
    98e0:	ldr	x0, [sp, #544]
    98e4:	lsr	x0, x0, x2
    98e8:	orr	x0, x1, x0
    98ec:	str	x0, [sp, #536]
    98f0:	ldr	x0, [sp, #512]
    98f4:	mov	w1, w0
    98f8:	ldr	x0, [sp, #544]
    98fc:	lsl	x0, x0, x1
    9900:	str	x0, [sp, #544]
    9904:	ldr	x0, [sp, #432]
    9908:	mov	w1, w0
    990c:	ldr	x0, [sp, #520]
    9910:	lsr	x0, x0, x1
    9914:	str	x0, [sp, #424]
    9918:	ldr	x0, [sp, #512]
    991c:	mov	w1, w0
    9920:	ldr	x0, [sp, #520]
    9924:	lsl	x1, x0, x1
    9928:	ldr	x0, [sp, #432]
    992c:	mov	w2, w0
    9930:	ldr	x0, [sp, #528]
    9934:	lsr	x0, x0, x2
    9938:	orr	x0, x1, x0
    993c:	str	x0, [sp, #520]
    9940:	ldr	x0, [sp, #512]
    9944:	mov	w1, w0
    9948:	ldr	x0, [sp, #528]
    994c:	lsl	x0, x0, x1
    9950:	str	x0, [sp, #528]
    9954:	ldr	x0, [sp, #536]
    9958:	lsr	x0, x0, #32
    995c:	str	x0, [sp, #296]
    9960:	ldr	x0, [sp, #536]
    9964:	and	x0, x0, #0xffffffff
    9968:	str	x0, [sp, #288]
    996c:	ldr	x0, [sp, #424]
    9970:	ldr	x1, [sp, #296]
    9974:	udiv	x2, x0, x1
    9978:	ldr	x1, [sp, #296]
    997c:	mul	x1, x2, x1
    9980:	sub	x0, x0, x1
    9984:	str	x0, [sp, #280]
    9988:	ldr	x1, [sp, #424]
    998c:	ldr	x0, [sp, #296]
    9990:	udiv	x0, x1, x0
    9994:	str	x0, [sp, #272]
    9998:	ldr	x1, [sp, #288]
    999c:	ldr	x0, [sp, #272]
    99a0:	mul	x0, x1, x0
    99a4:	str	x0, [sp, #264]
    99a8:	ldr	x0, [sp, #280]
    99ac:	lsl	x1, x0, #32
    99b0:	ldr	x0, [sp, #520]
    99b4:	lsr	x0, x0, #32
    99b8:	orr	x0, x1, x0
    99bc:	str	x0, [sp, #280]
    99c0:	ldr	x1, [sp, #264]
    99c4:	ldr	x0, [sp, #280]
    99c8:	cmp	x1, x0
    99cc:	b.ls	9a28 <__modti3@@GCC_3.0+0xa40>  // b.plast
    99d0:	ldr	x0, [sp, #272]
    99d4:	sub	x0, x0, #0x1
    99d8:	str	x0, [sp, #272]
    99dc:	ldr	x1, [sp, #280]
    99e0:	ldr	x0, [sp, #536]
    99e4:	add	x0, x1, x0
    99e8:	str	x0, [sp, #280]
    99ec:	ldr	x1, [sp, #536]
    99f0:	ldr	x0, [sp, #280]
    99f4:	cmp	x1, x0
    99f8:	b.hi	9a28 <__modti3@@GCC_3.0+0xa40>  // b.pmore
    99fc:	ldr	x1, [sp, #264]
    9a00:	ldr	x0, [sp, #280]
    9a04:	cmp	x1, x0
    9a08:	b.ls	9a28 <__modti3@@GCC_3.0+0xa40>  // b.plast
    9a0c:	ldr	x0, [sp, #272]
    9a10:	sub	x0, x0, #0x1
    9a14:	str	x0, [sp, #272]
    9a18:	ldr	x1, [sp, #280]
    9a1c:	ldr	x0, [sp, #536]
    9a20:	add	x0, x1, x0
    9a24:	str	x0, [sp, #280]
    9a28:	ldr	x1, [sp, #280]
    9a2c:	ldr	x0, [sp, #264]
    9a30:	sub	x0, x1, x0
    9a34:	str	x0, [sp, #280]
    9a38:	ldr	x0, [sp, #280]
    9a3c:	ldr	x1, [sp, #296]
    9a40:	udiv	x2, x0, x1
    9a44:	ldr	x1, [sp, #296]
    9a48:	mul	x1, x2, x1
    9a4c:	sub	x0, x0, x1
    9a50:	str	x0, [sp, #256]
    9a54:	ldr	x1, [sp, #280]
    9a58:	ldr	x0, [sp, #296]
    9a5c:	udiv	x0, x1, x0
    9a60:	str	x0, [sp, #248]
    9a64:	ldr	x1, [sp, #288]
    9a68:	ldr	x0, [sp, #248]
    9a6c:	mul	x0, x1, x0
    9a70:	str	x0, [sp, #264]
    9a74:	ldr	x0, [sp, #256]
    9a78:	lsl	x1, x0, #32
    9a7c:	ldr	x0, [sp, #520]
    9a80:	and	x0, x0, #0xffffffff
    9a84:	orr	x0, x1, x0
    9a88:	str	x0, [sp, #256]
    9a8c:	ldr	x1, [sp, #264]
    9a90:	ldr	x0, [sp, #256]
    9a94:	cmp	x1, x0
    9a98:	b.ls	9af4 <__modti3@@GCC_3.0+0xb0c>  // b.plast
    9a9c:	ldr	x0, [sp, #248]
    9aa0:	sub	x0, x0, #0x1
    9aa4:	str	x0, [sp, #248]
    9aa8:	ldr	x1, [sp, #256]
    9aac:	ldr	x0, [sp, #536]
    9ab0:	add	x0, x1, x0
    9ab4:	str	x0, [sp, #256]
    9ab8:	ldr	x1, [sp, #536]
    9abc:	ldr	x0, [sp, #256]
    9ac0:	cmp	x1, x0
    9ac4:	b.hi	9af4 <__modti3@@GCC_3.0+0xb0c>  // b.pmore
    9ac8:	ldr	x1, [sp, #264]
    9acc:	ldr	x0, [sp, #256]
    9ad0:	cmp	x1, x0
    9ad4:	b.ls	9af4 <__modti3@@GCC_3.0+0xb0c>  // b.plast
    9ad8:	ldr	x0, [sp, #248]
    9adc:	sub	x0, x0, #0x1
    9ae0:	str	x0, [sp, #248]
    9ae4:	ldr	x1, [sp, #256]
    9ae8:	ldr	x0, [sp, #536]
    9aec:	add	x0, x1, x0
    9af0:	str	x0, [sp, #256]
    9af4:	ldr	x1, [sp, #256]
    9af8:	ldr	x0, [sp, #264]
    9afc:	sub	x0, x1, x0
    9b00:	str	x0, [sp, #256]
    9b04:	ldr	x0, [sp, #272]
    9b08:	lsl	x1, x0, #32
    9b0c:	ldr	x0, [sp, #248]
    9b10:	orr	x0, x1, x0
    9b14:	str	x0, [sp, #448]
    9b18:	ldr	x0, [sp, #256]
    9b1c:	str	x0, [sp, #520]
    9b20:	ldr	x0, [sp, #448]
    9b24:	and	x0, x0, #0xffffffff
    9b28:	str	x0, [sp, #240]
    9b2c:	ldr	x0, [sp, #448]
    9b30:	lsr	x0, x0, #32
    9b34:	str	x0, [sp, #232]
    9b38:	ldr	x0, [sp, #544]
    9b3c:	and	x0, x0, #0xffffffff
    9b40:	str	x0, [sp, #224]
    9b44:	ldr	x0, [sp, #544]
    9b48:	lsr	x0, x0, #32
    9b4c:	str	x0, [sp, #216]
    9b50:	ldr	x1, [sp, #240]
    9b54:	ldr	x0, [sp, #224]
    9b58:	mul	x0, x1, x0
    9b5c:	str	x0, [sp, #208]
    9b60:	ldr	x1, [sp, #240]
    9b64:	ldr	x0, [sp, #216]
    9b68:	mul	x0, x1, x0
    9b6c:	str	x0, [sp, #200]
    9b70:	ldr	x1, [sp, #232]
    9b74:	ldr	x0, [sp, #224]
    9b78:	mul	x0, x1, x0
    9b7c:	str	x0, [sp, #192]
    9b80:	ldr	x1, [sp, #232]
    9b84:	ldr	x0, [sp, #216]
    9b88:	mul	x0, x1, x0
    9b8c:	str	x0, [sp, #184]
    9b90:	ldr	x0, [sp, #208]
    9b94:	lsr	x0, x0, #32
    9b98:	ldr	x1, [sp, #200]
    9b9c:	add	x0, x1, x0
    9ba0:	str	x0, [sp, #200]
    9ba4:	ldr	x1, [sp, #200]
    9ba8:	ldr	x0, [sp, #192]
    9bac:	add	x0, x1, x0
    9bb0:	str	x0, [sp, #200]
    9bb4:	ldr	x1, [sp, #192]
    9bb8:	ldr	x0, [sp, #200]
    9bbc:	cmp	x1, x0
    9bc0:	b.ls	9bd4 <__modti3@@GCC_3.0+0xbec>  // b.plast
    9bc4:	ldr	x1, [sp, #184]
    9bc8:	mov	x0, #0x100000000           	// #4294967296
    9bcc:	add	x0, x1, x0
    9bd0:	str	x0, [sp, #184]
    9bd4:	ldr	x0, [sp, #200]
    9bd8:	lsr	x1, x0, #32
    9bdc:	ldr	x0, [sp, #184]
    9be0:	add	x0, x1, x0
    9be4:	str	x0, [sp, #176]
    9be8:	ldr	x0, [sp, #200]
    9bec:	and	x0, x0, #0xffffffff
    9bf0:	lsl	x1, x0, #32
    9bf4:	ldr	x0, [sp, #208]
    9bf8:	and	x0, x0, #0xffffffff
    9bfc:	add	x0, x1, x0
    9c00:	str	x0, [sp, #168]
    9c04:	ldr	x1, [sp, #520]
    9c08:	ldr	x0, [sp, #176]
    9c0c:	cmp	x1, x0
    9c10:	b.cc	9c34 <__modti3@@GCC_3.0+0xc4c>  // b.lo, b.ul, b.last
    9c14:	ldr	x1, [sp, #520]
    9c18:	ldr	x0, [sp, #176]
    9c1c:	cmp	x1, x0
    9c20:	b.ne	9c84 <__modti3@@GCC_3.0+0xc9c>  // b.any
    9c24:	ldr	x1, [sp, #528]
    9c28:	ldr	x0, [sp, #168]
    9c2c:	cmp	x1, x0
    9c30:	b.cs	9c84 <__modti3@@GCC_3.0+0xc9c>  // b.hs, b.nlast
    9c34:	ldr	x0, [sp, #448]
    9c38:	sub	x0, x0, #0x1
    9c3c:	str	x0, [sp, #448]
    9c40:	ldr	x1, [sp, #168]
    9c44:	ldr	x0, [sp, #544]
    9c48:	sub	x0, x1, x0
    9c4c:	str	x0, [sp, #160]
    9c50:	ldr	x1, [sp, #176]
    9c54:	ldr	x0, [sp, #536]
    9c58:	sub	x1, x1, x0
    9c5c:	ldr	x2, [sp, #168]
    9c60:	ldr	x0, [sp, #160]
    9c64:	cmp	x2, x0
    9c68:	cset	w0, cc  // cc = lo, ul, last
    9c6c:	and	w0, w0, #0xff
    9c70:	and	x0, x0, #0xff
    9c74:	sub	x0, x1, x0
    9c78:	str	x0, [sp, #176]
    9c7c:	ldr	x0, [sp, #160]
    9c80:	str	x0, [sp, #168]
    9c84:	str	xzr, [sp, #440]
    9c88:	ldr	x0, [sp, #552]
    9c8c:	cmp	x0, #0x0
    9c90:	b.eq	9d20 <__modti3@@GCC_3.0+0xd38>  // b.none
    9c94:	ldr	x1, [sp, #528]
    9c98:	ldr	x0, [sp, #168]
    9c9c:	sub	x0, x1, x0
    9ca0:	str	x0, [sp, #152]
    9ca4:	ldr	x1, [sp, #520]
    9ca8:	ldr	x0, [sp, #176]
    9cac:	sub	x1, x1, x0
    9cb0:	ldr	x2, [sp, #528]
    9cb4:	ldr	x0, [sp, #152]
    9cb8:	cmp	x2, x0
    9cbc:	cset	w0, cc  // cc = lo, ul, last
    9cc0:	and	w0, w0, #0xff
    9cc4:	and	x0, x0, #0xff
    9cc8:	sub	x0, x1, x0
    9ccc:	str	x0, [sp, #520]
    9cd0:	ldr	x0, [sp, #152]
    9cd4:	str	x0, [sp, #528]
    9cd8:	ldr	x0, [sp, #432]
    9cdc:	mov	w1, w0
    9ce0:	ldr	x0, [sp, #520]
    9ce4:	lsl	x1, x0, x1
    9ce8:	ldr	x0, [sp, #512]
    9cec:	mov	w2, w0
    9cf0:	ldr	x0, [sp, #528]
    9cf4:	lsr	x0, x0, x2
    9cf8:	orr	x0, x1, x0
    9cfc:	str	x0, [sp, #48]
    9d00:	ldr	x0, [sp, #512]
    9d04:	mov	w1, w0
    9d08:	ldr	x0, [sp, #520]
    9d0c:	lsr	x0, x0, x1
    9d10:	str	x0, [sp, #56]
    9d14:	ldp	x0, x1, [sp, #48]
    9d18:	ldr	x2, [sp, #552]
    9d1c:	stp	x0, x1, [x2]
    9d20:	ldr	x0, [sp, #448]
    9d24:	str	x0, [sp, #32]
    9d28:	ldr	x0, [sp, #440]
    9d2c:	str	x0, [sp, #40]
    9d30:	ldr	x0, [sp, #600]
    9d34:	cmp	x0, #0x0
    9d38:	b.eq	9d54 <__modti3@@GCC_3.0+0xd6c>  // b.none
    9d3c:	ldp	x0, x1, [sp, #96]
    9d40:	negs	x2, x0
    9d44:	ngc	x0, x1
    9d48:	mov	x4, x2
    9d4c:	mov	x5, x0
    9d50:	stp	x4, x5, [sp, #96]
    9d54:	ldp	x0, x1, [sp, #96]
    9d58:	add	sp, sp, #0x260
    9d5c:	ret

0000000000009d60 <__divmodti4@@GCC_7.0.0>:
    9d60:	sub	sp, sp, #0x280
    9d64:	stp	x0, x1, [sp, #32]
    9d68:	stp	x2, x3, [sp, #16]
    9d6c:	str	x4, [sp, #8]
    9d70:	str	xzr, [sp, #632]
    9d74:	str	xzr, [sp, #624]
    9d78:	ldp	x0, x1, [sp, #32]
    9d7c:	stp	x0, x1, [sp, #144]
    9d80:	ldp	x0, x1, [sp, #16]
    9d84:	stp	x0, x1, [sp, #128]
    9d88:	ldr	x0, [sp, #152]
    9d8c:	cmp	x0, #0x0
    9d90:	b.ge	9dc4 <__divmodti4@@GCC_7.0.0+0x64>  // b.tcont
    9d94:	ldr	x0, [sp, #632]
    9d98:	mvn	x0, x0
    9d9c:	str	x0, [sp, #632]
    9da0:	ldr	x0, [sp, #624]
    9da4:	mvn	x0, x0
    9da8:	str	x0, [sp, #624]
    9dac:	ldp	x0, x1, [sp, #144]
    9db0:	negs	x2, x0
    9db4:	ngc	x0, x1
    9db8:	mov	x12, x2
    9dbc:	mov	x13, x0
    9dc0:	stp	x12, x13, [sp, #144]
    9dc4:	ldr	x0, [sp, #136]
    9dc8:	cmp	x0, #0x0
    9dcc:	b.ge	9df4 <__divmodti4@@GCC_7.0.0+0x94>  // b.tcont
    9dd0:	ldr	x0, [sp, #632]
    9dd4:	mvn	x0, x0
    9dd8:	str	x0, [sp, #632]
    9ddc:	ldp	x0, x1, [sp, #128]
    9de0:	negs	x2, x0
    9de4:	ngc	x0, x1
    9de8:	mov	x10, x2
    9dec:	mov	x11, x0
    9df0:	stp	x10, x11, [sp, #128]
    9df4:	ldp	x0, x1, [sp, #144]
    9df8:	mov	x2, x0
    9dfc:	mov	x3, x1
    9e00:	ldp	x0, x1, [sp, #128]
    9e04:	add	x4, sp, #0x200
    9e08:	stp	x2, x3, [x4, #80]
    9e0c:	add	x2, sp, #0x200
    9e10:	stp	x0, x1, [x2, #64]
    9e14:	add	x0, sp, #0x70
    9e18:	str	x0, [sp, #568]
    9e1c:	add	x0, sp, #0x200
    9e20:	ldp	x0, x1, [x0, #80]
    9e24:	stp	x0, x1, [sp, #96]
    9e28:	add	x0, sp, #0x200
    9e2c:	ldp	x0, x1, [x0, #64]
    9e30:	stp	x0, x1, [sp, #80]
    9e34:	ldr	x0, [sp, #80]
    9e38:	str	x0, [sp, #560]
    9e3c:	ldr	x0, [sp, #88]
    9e40:	str	x0, [sp, #552]
    9e44:	ldr	x0, [sp, #96]
    9e48:	str	x0, [sp, #544]
    9e4c:	ldr	x0, [sp, #104]
    9e50:	str	x0, [sp, #536]
    9e54:	ldr	x0, [sp, #552]
    9e58:	cmp	x0, #0x0
    9e5c:	b.ne	a54c <__divmodti4@@GCC_7.0.0+0x7ec>  // b.any
    9e60:	ldr	x1, [sp, #560]
    9e64:	ldr	x0, [sp, #536]
    9e68:	cmp	x1, x0
    9e6c:	b.ls	a0b8 <__divmodti4@@GCC_7.0.0+0x358>  // b.plast
    9e70:	ldr	x0, [sp, #560]
    9e74:	clz	x0, x0
    9e78:	sxtw	x0, w0
    9e7c:	str	x0, [sp, #528]
    9e80:	ldr	x0, [sp, #528]
    9e84:	cmp	x0, #0x0
    9e88:	b.eq	9ee4 <__divmodti4@@GCC_7.0.0+0x184>  // b.none
    9e8c:	ldr	x0, [sp, #528]
    9e90:	mov	w1, w0
    9e94:	ldr	x0, [sp, #560]
    9e98:	lsl	x0, x0, x1
    9e9c:	str	x0, [sp, #560]
    9ea0:	ldr	x0, [sp, #528]
    9ea4:	mov	w1, w0
    9ea8:	ldr	x0, [sp, #536]
    9eac:	lsl	x1, x0, x1
    9eb0:	ldr	x0, [sp, #528]
    9eb4:	mov	w2, w0
    9eb8:	mov	w0, #0x40                  	// #64
    9ebc:	sub	w0, w0, w2
    9ec0:	ldr	x2, [sp, #544]
    9ec4:	lsr	x0, x2, x0
    9ec8:	orr	x0, x1, x0
    9ecc:	str	x0, [sp, #536]
    9ed0:	ldr	x0, [sp, #528]
    9ed4:	mov	w1, w0
    9ed8:	ldr	x0, [sp, #544]
    9edc:	lsl	x0, x0, x1
    9ee0:	str	x0, [sp, #544]
    9ee4:	ldr	x0, [sp, #560]
    9ee8:	lsr	x0, x0, #32
    9eec:	str	x0, [sp, #520]
    9ef0:	ldr	x0, [sp, #560]
    9ef4:	and	x0, x0, #0xffffffff
    9ef8:	str	x0, [sp, #512]
    9efc:	ldr	x0, [sp, #536]
    9f00:	ldr	x1, [sp, #520]
    9f04:	udiv	x2, x0, x1
    9f08:	ldr	x1, [sp, #520]
    9f0c:	mul	x1, x2, x1
    9f10:	sub	x0, x0, x1
    9f14:	str	x0, [sp, #504]
    9f18:	ldr	x1, [sp, #536]
    9f1c:	ldr	x0, [sp, #520]
    9f20:	udiv	x0, x1, x0
    9f24:	str	x0, [sp, #496]
    9f28:	ldr	x1, [sp, #512]
    9f2c:	ldr	x0, [sp, #496]
    9f30:	mul	x0, x1, x0
    9f34:	str	x0, [sp, #488]
    9f38:	ldr	x0, [sp, #504]
    9f3c:	lsl	x1, x0, #32
    9f40:	ldr	x0, [sp, #544]
    9f44:	lsr	x0, x0, #32
    9f48:	orr	x0, x1, x0
    9f4c:	str	x0, [sp, #504]
    9f50:	ldr	x1, [sp, #488]
    9f54:	ldr	x0, [sp, #504]
    9f58:	cmp	x1, x0
    9f5c:	b.ls	9fb8 <__divmodti4@@GCC_7.0.0+0x258>  // b.plast
    9f60:	ldr	x0, [sp, #496]
    9f64:	sub	x0, x0, #0x1
    9f68:	str	x0, [sp, #496]
    9f6c:	ldr	x1, [sp, #504]
    9f70:	ldr	x0, [sp, #560]
    9f74:	add	x0, x1, x0
    9f78:	str	x0, [sp, #504]
    9f7c:	ldr	x1, [sp, #560]
    9f80:	ldr	x0, [sp, #504]
    9f84:	cmp	x1, x0
    9f88:	b.hi	9fb8 <__divmodti4@@GCC_7.0.0+0x258>  // b.pmore
    9f8c:	ldr	x1, [sp, #488]
    9f90:	ldr	x0, [sp, #504]
    9f94:	cmp	x1, x0
    9f98:	b.ls	9fb8 <__divmodti4@@GCC_7.0.0+0x258>  // b.plast
    9f9c:	ldr	x0, [sp, #496]
    9fa0:	sub	x0, x0, #0x1
    9fa4:	str	x0, [sp, #496]
    9fa8:	ldr	x1, [sp, #504]
    9fac:	ldr	x0, [sp, #560]
    9fb0:	add	x0, x1, x0
    9fb4:	str	x0, [sp, #504]
    9fb8:	ldr	x1, [sp, #504]
    9fbc:	ldr	x0, [sp, #488]
    9fc0:	sub	x0, x1, x0
    9fc4:	str	x0, [sp, #504]
    9fc8:	ldr	x0, [sp, #504]
    9fcc:	ldr	x1, [sp, #520]
    9fd0:	udiv	x2, x0, x1
    9fd4:	ldr	x1, [sp, #520]
    9fd8:	mul	x1, x2, x1
    9fdc:	sub	x0, x0, x1
    9fe0:	str	x0, [sp, #480]
    9fe4:	ldr	x1, [sp, #504]
    9fe8:	ldr	x0, [sp, #520]
    9fec:	udiv	x0, x1, x0
    9ff0:	str	x0, [sp, #472]
    9ff4:	ldr	x1, [sp, #512]
    9ff8:	ldr	x0, [sp, #472]
    9ffc:	mul	x0, x1, x0
    a000:	str	x0, [sp, #488]
    a004:	ldr	x0, [sp, #480]
    a008:	lsl	x1, x0, #32
    a00c:	ldr	x0, [sp, #544]
    a010:	and	x0, x0, #0xffffffff
    a014:	orr	x0, x1, x0
    a018:	str	x0, [sp, #480]
    a01c:	ldr	x1, [sp, #488]
    a020:	ldr	x0, [sp, #480]
    a024:	cmp	x1, x0
    a028:	b.ls	a084 <__divmodti4@@GCC_7.0.0+0x324>  // b.plast
    a02c:	ldr	x0, [sp, #472]
    a030:	sub	x0, x0, #0x1
    a034:	str	x0, [sp, #472]
    a038:	ldr	x1, [sp, #480]
    a03c:	ldr	x0, [sp, #560]
    a040:	add	x0, x1, x0
    a044:	str	x0, [sp, #480]
    a048:	ldr	x1, [sp, #560]
    a04c:	ldr	x0, [sp, #480]
    a050:	cmp	x1, x0
    a054:	b.hi	a084 <__divmodti4@@GCC_7.0.0+0x324>  // b.pmore
    a058:	ldr	x1, [sp, #488]
    a05c:	ldr	x0, [sp, #480]
    a060:	cmp	x1, x0
    a064:	b.ls	a084 <__divmodti4@@GCC_7.0.0+0x324>  // b.plast
    a068:	ldr	x0, [sp, #472]
    a06c:	sub	x0, x0, #0x1
    a070:	str	x0, [sp, #472]
    a074:	ldr	x1, [sp, #480]
    a078:	ldr	x0, [sp, #560]
    a07c:	add	x0, x1, x0
    a080:	str	x0, [sp, #480]
    a084:	ldr	x1, [sp, #480]
    a088:	ldr	x0, [sp, #488]
    a08c:	sub	x0, x1, x0
    a090:	str	x0, [sp, #480]
    a094:	ldr	x0, [sp, #496]
    a098:	lsl	x1, x0, #32
    a09c:	ldr	x0, [sp, #472]
    a0a0:	orr	x0, x1, x0
    a0a4:	str	x0, [sp, #464]
    a0a8:	ldr	x0, [sp, #480]
    a0ac:	str	x0, [sp, #544]
    a0b0:	str	xzr, [sp, #456]
    a0b4:	b	a518 <__divmodti4@@GCC_7.0.0+0x7b8>
    a0b8:	ldr	x0, [sp, #560]
    a0bc:	cmp	x0, #0x0
    a0c0:	b.ne	a0d4 <__divmodti4@@GCC_7.0.0+0x374>  // b.any
    a0c4:	mov	x1, #0x1                   	// #1
    a0c8:	ldr	x0, [sp, #560]
    a0cc:	udiv	x0, x1, x0
    a0d0:	str	x0, [sp, #560]
    a0d4:	ldr	x0, [sp, #560]
    a0d8:	clz	x0, x0
    a0dc:	sxtw	x0, w0
    a0e0:	str	x0, [sp, #528]
    a0e4:	ldr	x0, [sp, #528]
    a0e8:	cmp	x0, #0x0
    a0ec:	b.ne	a10c <__divmodti4@@GCC_7.0.0+0x3ac>  // b.any
    a0f0:	ldr	x1, [sp, #536]
    a0f4:	ldr	x0, [sp, #560]
    a0f8:	sub	x0, x1, x0
    a0fc:	str	x0, [sp, #536]
    a100:	mov	x0, #0x1                   	// #1
    a104:	str	x0, [sp, #456]
    a108:	b	a34c <__divmodti4@@GCC_7.0.0+0x5ec>
    a10c:	mov	x1, #0x40                  	// #64
    a110:	ldr	x0, [sp, #528]
    a114:	sub	x0, x1, x0
    a118:	str	x0, [sp, #448]
    a11c:	ldr	x0, [sp, #528]
    a120:	mov	w1, w0
    a124:	ldr	x0, [sp, #560]
    a128:	lsl	x0, x0, x1
    a12c:	str	x0, [sp, #560]
    a130:	ldr	x0, [sp, #448]
    a134:	mov	w1, w0
    a138:	ldr	x0, [sp, #536]
    a13c:	lsr	x0, x0, x1
    a140:	str	x0, [sp, #440]
    a144:	ldr	x0, [sp, #528]
    a148:	mov	w1, w0
    a14c:	ldr	x0, [sp, #536]
    a150:	lsl	x1, x0, x1
    a154:	ldr	x0, [sp, #448]
    a158:	mov	w2, w0
    a15c:	ldr	x0, [sp, #544]
    a160:	lsr	x0, x0, x2
    a164:	orr	x0, x1, x0
    a168:	str	x0, [sp, #536]
    a16c:	ldr	x0, [sp, #528]
    a170:	mov	w1, w0
    a174:	ldr	x0, [sp, #544]
    a178:	lsl	x0, x0, x1
    a17c:	str	x0, [sp, #544]
    a180:	ldr	x0, [sp, #560]
    a184:	lsr	x0, x0, #32
    a188:	str	x0, [sp, #432]
    a18c:	ldr	x0, [sp, #560]
    a190:	and	x0, x0, #0xffffffff
    a194:	str	x0, [sp, #424]
    a198:	ldr	x0, [sp, #440]
    a19c:	ldr	x1, [sp, #432]
    a1a0:	udiv	x2, x0, x1
    a1a4:	ldr	x1, [sp, #432]
    a1a8:	mul	x1, x2, x1
    a1ac:	sub	x0, x0, x1
    a1b0:	str	x0, [sp, #416]
    a1b4:	ldr	x1, [sp, #440]
    a1b8:	ldr	x0, [sp, #432]
    a1bc:	udiv	x0, x1, x0
    a1c0:	str	x0, [sp, #408]
    a1c4:	ldr	x1, [sp, #424]
    a1c8:	ldr	x0, [sp, #408]
    a1cc:	mul	x0, x1, x0
    a1d0:	str	x0, [sp, #400]
    a1d4:	ldr	x0, [sp, #416]
    a1d8:	lsl	x1, x0, #32
    a1dc:	ldr	x0, [sp, #536]
    a1e0:	lsr	x0, x0, #32
    a1e4:	orr	x0, x1, x0
    a1e8:	str	x0, [sp, #416]
    a1ec:	ldr	x1, [sp, #400]
    a1f0:	ldr	x0, [sp, #416]
    a1f4:	cmp	x1, x0
    a1f8:	b.ls	a254 <__divmodti4@@GCC_7.0.0+0x4f4>  // b.plast
    a1fc:	ldr	x0, [sp, #408]
    a200:	sub	x0, x0, #0x1
    a204:	str	x0, [sp, #408]
    a208:	ldr	x1, [sp, #416]
    a20c:	ldr	x0, [sp, #560]
    a210:	add	x0, x1, x0
    a214:	str	x0, [sp, #416]
    a218:	ldr	x1, [sp, #560]
    a21c:	ldr	x0, [sp, #416]
    a220:	cmp	x1, x0
    a224:	b.hi	a254 <__divmodti4@@GCC_7.0.0+0x4f4>  // b.pmore
    a228:	ldr	x1, [sp, #400]
    a22c:	ldr	x0, [sp, #416]
    a230:	cmp	x1, x0
    a234:	b.ls	a254 <__divmodti4@@GCC_7.0.0+0x4f4>  // b.plast
    a238:	ldr	x0, [sp, #408]
    a23c:	sub	x0, x0, #0x1
    a240:	str	x0, [sp, #408]
    a244:	ldr	x1, [sp, #416]
    a248:	ldr	x0, [sp, #560]
    a24c:	add	x0, x1, x0
    a250:	str	x0, [sp, #416]
    a254:	ldr	x1, [sp, #416]
    a258:	ldr	x0, [sp, #400]
    a25c:	sub	x0, x1, x0
    a260:	str	x0, [sp, #416]
    a264:	ldr	x0, [sp, #416]
    a268:	ldr	x1, [sp, #432]
    a26c:	udiv	x2, x0, x1
    a270:	ldr	x1, [sp, #432]
    a274:	mul	x1, x2, x1
    a278:	sub	x0, x0, x1
    a27c:	str	x0, [sp, #392]
    a280:	ldr	x1, [sp, #416]
    a284:	ldr	x0, [sp, #432]
    a288:	udiv	x0, x1, x0
    a28c:	str	x0, [sp, #384]
    a290:	ldr	x1, [sp, #424]
    a294:	ldr	x0, [sp, #384]
    a298:	mul	x0, x1, x0
    a29c:	str	x0, [sp, #400]
    a2a0:	ldr	x0, [sp, #392]
    a2a4:	lsl	x1, x0, #32
    a2a8:	ldr	x0, [sp, #536]
    a2ac:	and	x0, x0, #0xffffffff
    a2b0:	orr	x0, x1, x0
    a2b4:	str	x0, [sp, #392]
    a2b8:	ldr	x1, [sp, #400]
    a2bc:	ldr	x0, [sp, #392]
    a2c0:	cmp	x1, x0
    a2c4:	b.ls	a320 <__divmodti4@@GCC_7.0.0+0x5c0>  // b.plast
    a2c8:	ldr	x0, [sp, #384]
    a2cc:	sub	x0, x0, #0x1
    a2d0:	str	x0, [sp, #384]
    a2d4:	ldr	x1, [sp, #392]
    a2d8:	ldr	x0, [sp, #560]
    a2dc:	add	x0, x1, x0
    a2e0:	str	x0, [sp, #392]
    a2e4:	ldr	x1, [sp, #560]
    a2e8:	ldr	x0, [sp, #392]
    a2ec:	cmp	x1, x0
    a2f0:	b.hi	a320 <__divmodti4@@GCC_7.0.0+0x5c0>  // b.pmore
    a2f4:	ldr	x1, [sp, #400]
    a2f8:	ldr	x0, [sp, #392]
    a2fc:	cmp	x1, x0
    a300:	b.ls	a320 <__divmodti4@@GCC_7.0.0+0x5c0>  // b.plast
    a304:	ldr	x0, [sp, #384]
    a308:	sub	x0, x0, #0x1
    a30c:	str	x0, [sp, #384]
    a310:	ldr	x1, [sp, #392]
    a314:	ldr	x0, [sp, #560]
    a318:	add	x0, x1, x0
    a31c:	str	x0, [sp, #392]
    a320:	ldr	x1, [sp, #392]
    a324:	ldr	x0, [sp, #400]
    a328:	sub	x0, x1, x0
    a32c:	str	x0, [sp, #392]
    a330:	ldr	x0, [sp, #408]
    a334:	lsl	x1, x0, #32
    a338:	ldr	x0, [sp, #384]
    a33c:	orr	x0, x1, x0
    a340:	str	x0, [sp, #456]
    a344:	ldr	x0, [sp, #392]
    a348:	str	x0, [sp, #536]
    a34c:	ldr	x0, [sp, #560]
    a350:	lsr	x0, x0, #32
    a354:	str	x0, [sp, #376]
    a358:	ldr	x0, [sp, #560]
    a35c:	and	x0, x0, #0xffffffff
    a360:	str	x0, [sp, #368]
    a364:	ldr	x0, [sp, #536]
    a368:	ldr	x1, [sp, #376]
    a36c:	udiv	x2, x0, x1
    a370:	ldr	x1, [sp, #376]
    a374:	mul	x1, x2, x1
    a378:	sub	x0, x0, x1
    a37c:	str	x0, [sp, #360]
    a380:	ldr	x1, [sp, #536]
    a384:	ldr	x0, [sp, #376]
    a388:	udiv	x0, x1, x0
    a38c:	str	x0, [sp, #352]
    a390:	ldr	x1, [sp, #368]
    a394:	ldr	x0, [sp, #352]
    a398:	mul	x0, x1, x0
    a39c:	str	x0, [sp, #344]
    a3a0:	ldr	x0, [sp, #360]
    a3a4:	lsl	x1, x0, #32
    a3a8:	ldr	x0, [sp, #544]
    a3ac:	lsr	x0, x0, #32
    a3b0:	orr	x0, x1, x0
    a3b4:	str	x0, [sp, #360]
    a3b8:	ldr	x1, [sp, #344]
    a3bc:	ldr	x0, [sp, #360]
    a3c0:	cmp	x1, x0
    a3c4:	b.ls	a420 <__divmodti4@@GCC_7.0.0+0x6c0>  // b.plast
    a3c8:	ldr	x0, [sp, #352]
    a3cc:	sub	x0, x0, #0x1
    a3d0:	str	x0, [sp, #352]
    a3d4:	ldr	x1, [sp, #360]
    a3d8:	ldr	x0, [sp, #560]
    a3dc:	add	x0, x1, x0
    a3e0:	str	x0, [sp, #360]
    a3e4:	ldr	x1, [sp, #560]
    a3e8:	ldr	x0, [sp, #360]
    a3ec:	cmp	x1, x0
    a3f0:	b.hi	a420 <__divmodti4@@GCC_7.0.0+0x6c0>  // b.pmore
    a3f4:	ldr	x1, [sp, #344]
    a3f8:	ldr	x0, [sp, #360]
    a3fc:	cmp	x1, x0
    a400:	b.ls	a420 <__divmodti4@@GCC_7.0.0+0x6c0>  // b.plast
    a404:	ldr	x0, [sp, #352]
    a408:	sub	x0, x0, #0x1
    a40c:	str	x0, [sp, #352]
    a410:	ldr	x1, [sp, #360]
    a414:	ldr	x0, [sp, #560]
    a418:	add	x0, x1, x0
    a41c:	str	x0, [sp, #360]
    a420:	ldr	x1, [sp, #360]
    a424:	ldr	x0, [sp, #344]
    a428:	sub	x0, x1, x0
    a42c:	str	x0, [sp, #360]
    a430:	ldr	x0, [sp, #360]
    a434:	ldr	x1, [sp, #376]
    a438:	udiv	x2, x0, x1
    a43c:	ldr	x1, [sp, #376]
    a440:	mul	x1, x2, x1
    a444:	sub	x0, x0, x1
    a448:	str	x0, [sp, #336]
    a44c:	ldr	x1, [sp, #360]
    a450:	ldr	x0, [sp, #376]
    a454:	udiv	x0, x1, x0
    a458:	str	x0, [sp, #328]
    a45c:	ldr	x1, [sp, #368]
    a460:	ldr	x0, [sp, #328]
    a464:	mul	x0, x1, x0
    a468:	str	x0, [sp, #344]
    a46c:	ldr	x0, [sp, #336]
    a470:	lsl	x1, x0, #32
    a474:	ldr	x0, [sp, #544]
    a478:	and	x0, x0, #0xffffffff
    a47c:	orr	x0, x1, x0
    a480:	str	x0, [sp, #336]
    a484:	ldr	x1, [sp, #344]
    a488:	ldr	x0, [sp, #336]
    a48c:	cmp	x1, x0
    a490:	b.ls	a4ec <__divmodti4@@GCC_7.0.0+0x78c>  // b.plast
    a494:	ldr	x0, [sp, #328]
    a498:	sub	x0, x0, #0x1
    a49c:	str	x0, [sp, #328]
    a4a0:	ldr	x1, [sp, #336]
    a4a4:	ldr	x0, [sp, #560]
    a4a8:	add	x0, x1, x0
    a4ac:	str	x0, [sp, #336]
    a4b0:	ldr	x1, [sp, #560]
    a4b4:	ldr	x0, [sp, #336]
    a4b8:	cmp	x1, x0
    a4bc:	b.hi	a4ec <__divmodti4@@GCC_7.0.0+0x78c>  // b.pmore
    a4c0:	ldr	x1, [sp, #344]
    a4c4:	ldr	x0, [sp, #336]
    a4c8:	cmp	x1, x0
    a4cc:	b.ls	a4ec <__divmodti4@@GCC_7.0.0+0x78c>  // b.plast
    a4d0:	ldr	x0, [sp, #328]
    a4d4:	sub	x0, x0, #0x1
    a4d8:	str	x0, [sp, #328]
    a4dc:	ldr	x1, [sp, #336]
    a4e0:	ldr	x0, [sp, #560]
    a4e4:	add	x0, x1, x0
    a4e8:	str	x0, [sp, #336]
    a4ec:	ldr	x1, [sp, #336]
    a4f0:	ldr	x0, [sp, #344]
    a4f4:	sub	x0, x1, x0
    a4f8:	str	x0, [sp, #336]
    a4fc:	ldr	x0, [sp, #352]
    a500:	lsl	x1, x0, #32
    a504:	ldr	x0, [sp, #328]
    a508:	orr	x0, x1, x0
    a50c:	str	x0, [sp, #464]
    a510:	ldr	x0, [sp, #336]
    a514:	str	x0, [sp, #544]
    a518:	ldr	x0, [sp, #568]
    a51c:	cmp	x0, #0x0
    a520:	b.eq	aab8 <__divmodti4@@GCC_7.0.0+0xd58>  // b.none
    a524:	ldr	x0, [sp, #528]
    a528:	mov	w1, w0
    a52c:	ldr	x0, [sp, #544]
    a530:	lsr	x0, x0, x1
    a534:	str	x0, [sp, #64]
    a538:	str	xzr, [sp, #72]
    a53c:	ldp	x0, x1, [sp, #64]
    a540:	ldr	x2, [sp, #568]
    a544:	stp	x0, x1, [x2]
    a548:	b	aab8 <__divmodti4@@GCC_7.0.0+0xd58>
    a54c:	ldr	x1, [sp, #552]
    a550:	ldr	x0, [sp, #536]
    a554:	cmp	x1, x0
    a558:	b.ls	a590 <__divmodti4@@GCC_7.0.0+0x830>  // b.plast
    a55c:	str	xzr, [sp, #464]
    a560:	str	xzr, [sp, #456]
    a564:	ldr	x0, [sp, #568]
    a568:	cmp	x0, #0x0
    a56c:	b.eq	aab8 <__divmodti4@@GCC_7.0.0+0xd58>  // b.none
    a570:	ldr	x0, [sp, #544]
    a574:	str	x0, [sp, #64]
    a578:	ldr	x0, [sp, #536]
    a57c:	str	x0, [sp, #72]
    a580:	ldp	x0, x1, [sp, #64]
    a584:	ldr	x2, [sp, #568]
    a588:	stp	x0, x1, [x2]
    a58c:	b	aab8 <__divmodti4@@GCC_7.0.0+0xd58>
    a590:	ldr	x0, [sp, #552]
    a594:	clz	x0, x0
    a598:	sxtw	x0, w0
    a59c:	str	x0, [sp, #528]
    a5a0:	ldr	x0, [sp, #528]
    a5a4:	cmp	x0, #0x0
    a5a8:	b.ne	a650 <__divmodti4@@GCC_7.0.0+0x8f0>  // b.any
    a5ac:	ldr	x1, [sp, #552]
    a5b0:	ldr	x0, [sp, #536]
    a5b4:	cmp	x1, x0
    a5b8:	b.cc	a5cc <__divmodti4@@GCC_7.0.0+0x86c>  // b.lo, b.ul, b.last
    a5bc:	ldr	x1, [sp, #560]
    a5c0:	ldr	x0, [sp, #544]
    a5c4:	cmp	x1, x0
    a5c8:	b.hi	a61c <__divmodti4@@GCC_7.0.0+0x8bc>  // b.pmore
    a5cc:	mov	x0, #0x1                   	// #1
    a5d0:	str	x0, [sp, #464]
    a5d4:	ldr	x1, [sp, #544]
    a5d8:	ldr	x0, [sp, #560]
    a5dc:	sub	x0, x1, x0
    a5e0:	str	x0, [sp, #320]
    a5e4:	ldr	x1, [sp, #536]
    a5e8:	ldr	x0, [sp, #552]
    a5ec:	sub	x1, x1, x0
    a5f0:	ldr	x2, [sp, #544]
    a5f4:	ldr	x0, [sp, #320]
    a5f8:	cmp	x2, x0
    a5fc:	cset	w0, cc  // cc = lo, ul, last
    a600:	and	w0, w0, #0xff
    a604:	and	x0, x0, #0xff
    a608:	sub	x0, x1, x0
    a60c:	str	x0, [sp, #536]
    a610:	ldr	x0, [sp, #320]
    a614:	str	x0, [sp, #544]
    a618:	b	a620 <__divmodti4@@GCC_7.0.0+0x8c0>
    a61c:	str	xzr, [sp, #464]
    a620:	str	xzr, [sp, #456]
    a624:	ldr	x0, [sp, #568]
    a628:	cmp	x0, #0x0
    a62c:	b.eq	aab8 <__divmodti4@@GCC_7.0.0+0xd58>  // b.none
    a630:	ldr	x0, [sp, #544]
    a634:	str	x0, [sp, #64]
    a638:	ldr	x0, [sp, #536]
    a63c:	str	x0, [sp, #72]
    a640:	ldp	x0, x1, [sp, #64]
    a644:	ldr	x2, [sp, #568]
    a648:	stp	x0, x1, [x2]
    a64c:	b	aab8 <__divmodti4@@GCC_7.0.0+0xd58>
    a650:	mov	x1, #0x40                  	// #64
    a654:	ldr	x0, [sp, #528]
    a658:	sub	x0, x1, x0
    a65c:	str	x0, [sp, #448]
    a660:	ldr	x0, [sp, #528]
    a664:	mov	w1, w0
    a668:	ldr	x0, [sp, #552]
    a66c:	lsl	x1, x0, x1
    a670:	ldr	x0, [sp, #448]
    a674:	mov	w2, w0
    a678:	ldr	x0, [sp, #560]
    a67c:	lsr	x0, x0, x2
    a680:	orr	x0, x1, x0
    a684:	str	x0, [sp, #552]
    a688:	ldr	x0, [sp, #528]
    a68c:	mov	w1, w0
    a690:	ldr	x0, [sp, #560]
    a694:	lsl	x0, x0, x1
    a698:	str	x0, [sp, #560]
    a69c:	ldr	x0, [sp, #448]
    a6a0:	mov	w1, w0
    a6a4:	ldr	x0, [sp, #536]
    a6a8:	lsr	x0, x0, x1
    a6ac:	str	x0, [sp, #440]
    a6b0:	ldr	x0, [sp, #528]
    a6b4:	mov	w1, w0
    a6b8:	ldr	x0, [sp, #536]
    a6bc:	lsl	x1, x0, x1
    a6c0:	ldr	x0, [sp, #448]
    a6c4:	mov	w2, w0
    a6c8:	ldr	x0, [sp, #544]
    a6cc:	lsr	x0, x0, x2
    a6d0:	orr	x0, x1, x0
    a6d4:	str	x0, [sp, #536]
    a6d8:	ldr	x0, [sp, #528]
    a6dc:	mov	w1, w0
    a6e0:	ldr	x0, [sp, #544]
    a6e4:	lsl	x0, x0, x1
    a6e8:	str	x0, [sp, #544]
    a6ec:	ldr	x0, [sp, #552]
    a6f0:	lsr	x0, x0, #32
    a6f4:	str	x0, [sp, #312]
    a6f8:	ldr	x0, [sp, #552]
    a6fc:	and	x0, x0, #0xffffffff
    a700:	str	x0, [sp, #304]
    a704:	ldr	x0, [sp, #440]
    a708:	ldr	x1, [sp, #312]
    a70c:	udiv	x2, x0, x1
    a710:	ldr	x1, [sp, #312]
    a714:	mul	x1, x2, x1
    a718:	sub	x0, x0, x1
    a71c:	str	x0, [sp, #296]
    a720:	ldr	x1, [sp, #440]
    a724:	ldr	x0, [sp, #312]
    a728:	udiv	x0, x1, x0
    a72c:	str	x0, [sp, #288]
    a730:	ldr	x1, [sp, #304]
    a734:	ldr	x0, [sp, #288]
    a738:	mul	x0, x1, x0
    a73c:	str	x0, [sp, #280]
    a740:	ldr	x0, [sp, #296]
    a744:	lsl	x1, x0, #32
    a748:	ldr	x0, [sp, #536]
    a74c:	lsr	x0, x0, #32
    a750:	orr	x0, x1, x0
    a754:	str	x0, [sp, #296]
    a758:	ldr	x1, [sp, #280]
    a75c:	ldr	x0, [sp, #296]
    a760:	cmp	x1, x0
    a764:	b.ls	a7c0 <__divmodti4@@GCC_7.0.0+0xa60>  // b.plast
    a768:	ldr	x0, [sp, #288]
    a76c:	sub	x0, x0, #0x1
    a770:	str	x0, [sp, #288]
    a774:	ldr	x1, [sp, #296]
    a778:	ldr	x0, [sp, #552]
    a77c:	add	x0, x1, x0
    a780:	str	x0, [sp, #296]
    a784:	ldr	x1, [sp, #552]
    a788:	ldr	x0, [sp, #296]
    a78c:	cmp	x1, x0
    a790:	b.hi	a7c0 <__divmodti4@@GCC_7.0.0+0xa60>  // b.pmore
    a794:	ldr	x1, [sp, #280]
    a798:	ldr	x0, [sp, #296]
    a79c:	cmp	x1, x0
    a7a0:	b.ls	a7c0 <__divmodti4@@GCC_7.0.0+0xa60>  // b.plast
    a7a4:	ldr	x0, [sp, #288]
    a7a8:	sub	x0, x0, #0x1
    a7ac:	str	x0, [sp, #288]
    a7b0:	ldr	x1, [sp, #296]
    a7b4:	ldr	x0, [sp, #552]
    a7b8:	add	x0, x1, x0
    a7bc:	str	x0, [sp, #296]
    a7c0:	ldr	x1, [sp, #296]
    a7c4:	ldr	x0, [sp, #280]
    a7c8:	sub	x0, x1, x0
    a7cc:	str	x0, [sp, #296]
    a7d0:	ldr	x0, [sp, #296]
    a7d4:	ldr	x1, [sp, #312]
    a7d8:	udiv	x2, x0, x1
    a7dc:	ldr	x1, [sp, #312]
    a7e0:	mul	x1, x2, x1
    a7e4:	sub	x0, x0, x1
    a7e8:	str	x0, [sp, #272]
    a7ec:	ldr	x1, [sp, #296]
    a7f0:	ldr	x0, [sp, #312]
    a7f4:	udiv	x0, x1, x0
    a7f8:	str	x0, [sp, #264]
    a7fc:	ldr	x1, [sp, #304]
    a800:	ldr	x0, [sp, #264]
    a804:	mul	x0, x1, x0
    a808:	str	x0, [sp, #280]
    a80c:	ldr	x0, [sp, #272]
    a810:	lsl	x1, x0, #32
    a814:	ldr	x0, [sp, #536]
    a818:	and	x0, x0, #0xffffffff
    a81c:	orr	x0, x1, x0
    a820:	str	x0, [sp, #272]
    a824:	ldr	x1, [sp, #280]
    a828:	ldr	x0, [sp, #272]
    a82c:	cmp	x1, x0
    a830:	b.ls	a88c <__divmodti4@@GCC_7.0.0+0xb2c>  // b.plast
    a834:	ldr	x0, [sp, #264]
    a838:	sub	x0, x0, #0x1
    a83c:	str	x0, [sp, #264]
    a840:	ldr	x1, [sp, #272]
    a844:	ldr	x0, [sp, #552]
    a848:	add	x0, x1, x0
    a84c:	str	x0, [sp, #272]
    a850:	ldr	x1, [sp, #552]
    a854:	ldr	x0, [sp, #272]
    a858:	cmp	x1, x0
    a85c:	b.hi	a88c <__divmodti4@@GCC_7.0.0+0xb2c>  // b.pmore
    a860:	ldr	x1, [sp, #280]
    a864:	ldr	x0, [sp, #272]
    a868:	cmp	x1, x0
    a86c:	b.ls	a88c <__divmodti4@@GCC_7.0.0+0xb2c>  // b.plast
    a870:	ldr	x0, [sp, #264]
    a874:	sub	x0, x0, #0x1
    a878:	str	x0, [sp, #264]
    a87c:	ldr	x1, [sp, #272]
    a880:	ldr	x0, [sp, #552]
    a884:	add	x0, x1, x0
    a888:	str	x0, [sp, #272]
    a88c:	ldr	x1, [sp, #272]
    a890:	ldr	x0, [sp, #280]
    a894:	sub	x0, x1, x0
    a898:	str	x0, [sp, #272]
    a89c:	ldr	x0, [sp, #288]
    a8a0:	lsl	x1, x0, #32
    a8a4:	ldr	x0, [sp, #264]
    a8a8:	orr	x0, x1, x0
    a8ac:	str	x0, [sp, #464]
    a8b0:	ldr	x0, [sp, #272]
    a8b4:	str	x0, [sp, #536]
    a8b8:	ldr	x0, [sp, #464]
    a8bc:	and	x0, x0, #0xffffffff
    a8c0:	str	x0, [sp, #256]
    a8c4:	ldr	x0, [sp, #464]
    a8c8:	lsr	x0, x0, #32
    a8cc:	str	x0, [sp, #248]
    a8d0:	ldr	x0, [sp, #560]
    a8d4:	and	x0, x0, #0xffffffff
    a8d8:	str	x0, [sp, #240]
    a8dc:	ldr	x0, [sp, #560]
    a8e0:	lsr	x0, x0, #32
    a8e4:	str	x0, [sp, #232]
    a8e8:	ldr	x1, [sp, #256]
    a8ec:	ldr	x0, [sp, #240]
    a8f0:	mul	x0, x1, x0
    a8f4:	str	x0, [sp, #224]
    a8f8:	ldr	x1, [sp, #256]
    a8fc:	ldr	x0, [sp, #232]
    a900:	mul	x0, x1, x0
    a904:	str	x0, [sp, #216]
    a908:	ldr	x1, [sp, #248]
    a90c:	ldr	x0, [sp, #240]
    a910:	mul	x0, x1, x0
    a914:	str	x0, [sp, #208]
    a918:	ldr	x1, [sp, #248]
    a91c:	ldr	x0, [sp, #232]
    a920:	mul	x0, x1, x0
    a924:	str	x0, [sp, #200]
    a928:	ldr	x0, [sp, #224]
    a92c:	lsr	x0, x0, #32
    a930:	ldr	x1, [sp, #216]
    a934:	add	x0, x1, x0
    a938:	str	x0, [sp, #216]
    a93c:	ldr	x1, [sp, #216]
    a940:	ldr	x0, [sp, #208]
    a944:	add	x0, x1, x0
    a948:	str	x0, [sp, #216]
    a94c:	ldr	x1, [sp, #208]
    a950:	ldr	x0, [sp, #216]
    a954:	cmp	x1, x0
    a958:	b.ls	a96c <__divmodti4@@GCC_7.0.0+0xc0c>  // b.plast
    a95c:	ldr	x1, [sp, #200]
    a960:	mov	x0, #0x100000000           	// #4294967296
    a964:	add	x0, x1, x0
    a968:	str	x0, [sp, #200]
    a96c:	ldr	x0, [sp, #216]
    a970:	lsr	x1, x0, #32
    a974:	ldr	x0, [sp, #200]
    a978:	add	x0, x1, x0
    a97c:	str	x0, [sp, #192]
    a980:	ldr	x0, [sp, #216]
    a984:	and	x0, x0, #0xffffffff
    a988:	lsl	x1, x0, #32
    a98c:	ldr	x0, [sp, #224]
    a990:	and	x0, x0, #0xffffffff
    a994:	add	x0, x1, x0
    a998:	str	x0, [sp, #184]
    a99c:	ldr	x1, [sp, #536]
    a9a0:	ldr	x0, [sp, #192]
    a9a4:	cmp	x1, x0
    a9a8:	b.cc	a9cc <__divmodti4@@GCC_7.0.0+0xc6c>  // b.lo, b.ul, b.last
    a9ac:	ldr	x1, [sp, #536]
    a9b0:	ldr	x0, [sp, #192]
    a9b4:	cmp	x1, x0
    a9b8:	b.ne	aa1c <__divmodti4@@GCC_7.0.0+0xcbc>  // b.any
    a9bc:	ldr	x1, [sp, #544]
    a9c0:	ldr	x0, [sp, #184]
    a9c4:	cmp	x1, x0
    a9c8:	b.cs	aa1c <__divmodti4@@GCC_7.0.0+0xcbc>  // b.hs, b.nlast
    a9cc:	ldr	x0, [sp, #464]
    a9d0:	sub	x0, x0, #0x1
    a9d4:	str	x0, [sp, #464]
    a9d8:	ldr	x1, [sp, #184]
    a9dc:	ldr	x0, [sp, #560]
    a9e0:	sub	x0, x1, x0
    a9e4:	str	x0, [sp, #176]
    a9e8:	ldr	x1, [sp, #192]
    a9ec:	ldr	x0, [sp, #552]
    a9f0:	sub	x1, x1, x0
    a9f4:	ldr	x2, [sp, #184]
    a9f8:	ldr	x0, [sp, #176]
    a9fc:	cmp	x2, x0
    aa00:	cset	w0, cc  // cc = lo, ul, last
    aa04:	and	w0, w0, #0xff
    aa08:	and	x0, x0, #0xff
    aa0c:	sub	x0, x1, x0
    aa10:	str	x0, [sp, #192]
    aa14:	ldr	x0, [sp, #176]
    aa18:	str	x0, [sp, #184]
    aa1c:	str	xzr, [sp, #456]
    aa20:	ldr	x0, [sp, #568]
    aa24:	cmp	x0, #0x0
    aa28:	b.eq	aab8 <__divmodti4@@GCC_7.0.0+0xd58>  // b.none
    aa2c:	ldr	x1, [sp, #544]
    aa30:	ldr	x0, [sp, #184]
    aa34:	sub	x0, x1, x0
    aa38:	str	x0, [sp, #168]
    aa3c:	ldr	x1, [sp, #536]
    aa40:	ldr	x0, [sp, #192]
    aa44:	sub	x1, x1, x0
    aa48:	ldr	x2, [sp, #544]
    aa4c:	ldr	x0, [sp, #168]
    aa50:	cmp	x2, x0
    aa54:	cset	w0, cc  // cc = lo, ul, last
    aa58:	and	w0, w0, #0xff
    aa5c:	and	x0, x0, #0xff
    aa60:	sub	x0, x1, x0
    aa64:	str	x0, [sp, #536]
    aa68:	ldr	x0, [sp, #168]
    aa6c:	str	x0, [sp, #544]
    aa70:	ldr	x0, [sp, #448]
    aa74:	mov	w1, w0
    aa78:	ldr	x0, [sp, #536]
    aa7c:	lsl	x1, x0, x1
    aa80:	ldr	x0, [sp, #528]
    aa84:	mov	w2, w0
    aa88:	ldr	x0, [sp, #544]
    aa8c:	lsr	x0, x0, x2
    aa90:	orr	x0, x1, x0
    aa94:	str	x0, [sp, #64]
    aa98:	ldr	x0, [sp, #528]
    aa9c:	mov	w1, w0
    aaa0:	ldr	x0, [sp, #536]
    aaa4:	lsr	x0, x0, x1
    aaa8:	str	x0, [sp, #72]
    aaac:	ldp	x0, x1, [sp, #64]
    aab0:	ldr	x2, [sp, #568]
    aab4:	stp	x0, x1, [x2]
    aab8:	ldr	x0, [sp, #464]
    aabc:	str	x0, [sp, #48]
    aac0:	ldr	x0, [sp, #456]
    aac4:	str	x0, [sp, #56]
    aac8:	ldp	x0, x1, [sp, #48]
    aacc:	add	x2, sp, #0x200
    aad0:	stp	x0, x1, [x2, #96]
    aad4:	ldr	x0, [sp, #632]
    aad8:	cmp	x0, #0x0
    aadc:	b.eq	ab00 <__divmodti4@@GCC_7.0.0+0xda0>  // b.none
    aae0:	add	x0, sp, #0x200
    aae4:	ldp	x0, x1, [x0, #96]
    aae8:	negs	x2, x0
    aaec:	ngc	x0, x1
    aaf0:	mov	x8, x2
    aaf4:	mov	x9, x0
    aaf8:	add	x0, sp, #0x200
    aafc:	stp	x8, x9, [x0, #96]
    ab00:	ldr	x0, [sp, #624]
    ab04:	cmp	x0, #0x0
    ab08:	b.eq	ab24 <__divmodti4@@GCC_7.0.0+0xdc4>  // b.none
    ab0c:	ldp	x0, x1, [sp, #112]
    ab10:	negs	x2, x0
    ab14:	ngc	x0, x1
    ab18:	mov	x6, x2
    ab1c:	mov	x7, x0
    ab20:	stp	x6, x7, [sp, #112]
    ab24:	ldp	x0, x1, [sp, #112]
    ab28:	ldr	x2, [sp, #8]
    ab2c:	stp	x0, x1, [x2]
    ab30:	add	x0, sp, #0x200
    ab34:	ldp	x0, x1, [x0, #96]
    ab38:	add	sp, sp, #0x280
    ab3c:	ret

000000000000ab40 <__udivti3@@GCC_3.0>:
    ab40:	sub	sp, sp, #0x220
    ab44:	stp	x0, x1, [sp, #16]
    ab48:	stp	x2, x3, [sp]
    ab4c:	ldp	x0, x1, [sp, #16]
    ab50:	add	x2, sp, #0x200
    ab54:	stp	x0, x1, [x2, #16]
    ab58:	ldp	x0, x1, [sp]
    ab5c:	add	x2, sp, #0x200
    ab60:	stp	x0, x1, [x2]
    ab64:	str	xzr, [sp, #504]
    ab68:	add	x0, sp, #0x200
    ab6c:	ldp	x0, x1, [x0, #16]
    ab70:	stp	x0, x1, [sp, #80]
    ab74:	add	x0, sp, #0x200
    ab78:	ldp	x0, x1, [x0]
    ab7c:	stp	x0, x1, [sp, #64]
    ab80:	ldr	x0, [sp, #64]
    ab84:	str	x0, [sp, #496]
    ab88:	ldr	x0, [sp, #72]
    ab8c:	str	x0, [sp, #488]
    ab90:	ldr	x0, [sp, #80]
    ab94:	str	x0, [sp, #480]
    ab98:	ldr	x0, [sp, #88]
    ab9c:	str	x0, [sp, #472]
    aba0:	ldr	x0, [sp, #488]
    aba4:	cmp	x0, #0x0
    aba8:	b.ne	b298 <__udivti3@@GCC_3.0+0x758>  // b.any
    abac:	ldr	x1, [sp, #496]
    abb0:	ldr	x0, [sp, #472]
    abb4:	cmp	x1, x0
    abb8:	b.ls	ae04 <__udivti3@@GCC_3.0+0x2c4>  // b.plast
    abbc:	ldr	x0, [sp, #496]
    abc0:	clz	x0, x0
    abc4:	sxtw	x0, w0
    abc8:	str	x0, [sp, #464]
    abcc:	ldr	x0, [sp, #464]
    abd0:	cmp	x0, #0x0
    abd4:	b.eq	ac30 <__udivti3@@GCC_3.0+0xf0>  // b.none
    abd8:	ldr	x0, [sp, #464]
    abdc:	mov	w1, w0
    abe0:	ldr	x0, [sp, #496]
    abe4:	lsl	x0, x0, x1
    abe8:	str	x0, [sp, #496]
    abec:	ldr	x0, [sp, #464]
    abf0:	mov	w1, w0
    abf4:	ldr	x0, [sp, #472]
    abf8:	lsl	x1, x0, x1
    abfc:	ldr	x0, [sp, #464]
    ac00:	mov	w2, w0
    ac04:	mov	w0, #0x40                  	// #64
    ac08:	sub	w0, w0, w2
    ac0c:	ldr	x2, [sp, #480]
    ac10:	lsr	x0, x2, x0
    ac14:	orr	x0, x1, x0
    ac18:	str	x0, [sp, #472]
    ac1c:	ldr	x0, [sp, #464]
    ac20:	mov	w1, w0
    ac24:	ldr	x0, [sp, #480]
    ac28:	lsl	x0, x0, x1
    ac2c:	str	x0, [sp, #480]
    ac30:	ldr	x0, [sp, #496]
    ac34:	lsr	x0, x0, #32
    ac38:	str	x0, [sp, #456]
    ac3c:	ldr	x0, [sp, #496]
    ac40:	and	x0, x0, #0xffffffff
    ac44:	str	x0, [sp, #448]
    ac48:	ldr	x0, [sp, #472]
    ac4c:	ldr	x1, [sp, #456]
    ac50:	udiv	x2, x0, x1
    ac54:	ldr	x1, [sp, #456]
    ac58:	mul	x1, x2, x1
    ac5c:	sub	x0, x0, x1
    ac60:	str	x0, [sp, #440]
    ac64:	ldr	x1, [sp, #472]
    ac68:	ldr	x0, [sp, #456]
    ac6c:	udiv	x0, x1, x0
    ac70:	str	x0, [sp, #432]
    ac74:	ldr	x1, [sp, #448]
    ac78:	ldr	x0, [sp, #432]
    ac7c:	mul	x0, x1, x0
    ac80:	str	x0, [sp, #424]
    ac84:	ldr	x0, [sp, #440]
    ac88:	lsl	x1, x0, #32
    ac8c:	ldr	x0, [sp, #480]
    ac90:	lsr	x0, x0, #32
    ac94:	orr	x0, x1, x0
    ac98:	str	x0, [sp, #440]
    ac9c:	ldr	x1, [sp, #424]
    aca0:	ldr	x0, [sp, #440]
    aca4:	cmp	x1, x0
    aca8:	b.ls	ad04 <__udivti3@@GCC_3.0+0x1c4>  // b.plast
    acac:	ldr	x0, [sp, #432]
    acb0:	sub	x0, x0, #0x1
    acb4:	str	x0, [sp, #432]
    acb8:	ldr	x1, [sp, #440]
    acbc:	ldr	x0, [sp, #496]
    acc0:	add	x0, x1, x0
    acc4:	str	x0, [sp, #440]
    acc8:	ldr	x1, [sp, #496]
    accc:	ldr	x0, [sp, #440]
    acd0:	cmp	x1, x0
    acd4:	b.hi	ad04 <__udivti3@@GCC_3.0+0x1c4>  // b.pmore
    acd8:	ldr	x1, [sp, #424]
    acdc:	ldr	x0, [sp, #440]
    ace0:	cmp	x1, x0
    ace4:	b.ls	ad04 <__udivti3@@GCC_3.0+0x1c4>  // b.plast
    ace8:	ldr	x0, [sp, #432]
    acec:	sub	x0, x0, #0x1
    acf0:	str	x0, [sp, #432]
    acf4:	ldr	x1, [sp, #440]
    acf8:	ldr	x0, [sp, #496]
    acfc:	add	x0, x1, x0
    ad00:	str	x0, [sp, #440]
    ad04:	ldr	x1, [sp, #440]
    ad08:	ldr	x0, [sp, #424]
    ad0c:	sub	x0, x1, x0
    ad10:	str	x0, [sp, #440]
    ad14:	ldr	x0, [sp, #440]
    ad18:	ldr	x1, [sp, #456]
    ad1c:	udiv	x2, x0, x1
    ad20:	ldr	x1, [sp, #456]
    ad24:	mul	x1, x2, x1
    ad28:	sub	x0, x0, x1
    ad2c:	str	x0, [sp, #416]
    ad30:	ldr	x1, [sp, #440]
    ad34:	ldr	x0, [sp, #456]
    ad38:	udiv	x0, x1, x0
    ad3c:	str	x0, [sp, #408]
    ad40:	ldr	x1, [sp, #448]
    ad44:	ldr	x0, [sp, #408]
    ad48:	mul	x0, x1, x0
    ad4c:	str	x0, [sp, #424]
    ad50:	ldr	x0, [sp, #416]
    ad54:	lsl	x1, x0, #32
    ad58:	ldr	x0, [sp, #480]
    ad5c:	and	x0, x0, #0xffffffff
    ad60:	orr	x0, x1, x0
    ad64:	str	x0, [sp, #416]
    ad68:	ldr	x1, [sp, #424]
    ad6c:	ldr	x0, [sp, #416]
    ad70:	cmp	x1, x0
    ad74:	b.ls	add0 <__udivti3@@GCC_3.0+0x290>  // b.plast
    ad78:	ldr	x0, [sp, #408]
    ad7c:	sub	x0, x0, #0x1
    ad80:	str	x0, [sp, #408]
    ad84:	ldr	x1, [sp, #416]
    ad88:	ldr	x0, [sp, #496]
    ad8c:	add	x0, x1, x0
    ad90:	str	x0, [sp, #416]
    ad94:	ldr	x1, [sp, #496]
    ad98:	ldr	x0, [sp, #416]
    ad9c:	cmp	x1, x0
    ada0:	b.hi	add0 <__udivti3@@GCC_3.0+0x290>  // b.pmore
    ada4:	ldr	x1, [sp, #424]
    ada8:	ldr	x0, [sp, #416]
    adac:	cmp	x1, x0
    adb0:	b.ls	add0 <__udivti3@@GCC_3.0+0x290>  // b.plast
    adb4:	ldr	x0, [sp, #408]
    adb8:	sub	x0, x0, #0x1
    adbc:	str	x0, [sp, #408]
    adc0:	ldr	x1, [sp, #416]
    adc4:	ldr	x0, [sp, #496]
    adc8:	add	x0, x1, x0
    adcc:	str	x0, [sp, #416]
    add0:	ldr	x1, [sp, #416]
    add4:	ldr	x0, [sp, #424]
    add8:	sub	x0, x1, x0
    addc:	str	x0, [sp, #416]
    ade0:	ldr	x0, [sp, #432]
    ade4:	lsl	x1, x0, #32
    ade8:	ldr	x0, [sp, #408]
    adec:	orr	x0, x1, x0
    adf0:	str	x0, [sp, #400]
    adf4:	ldr	x0, [sp, #416]
    adf8:	str	x0, [sp, #480]
    adfc:	str	xzr, [sp, #392]
    ae00:	b	b264 <__udivti3@@GCC_3.0+0x724>
    ae04:	ldr	x0, [sp, #496]
    ae08:	cmp	x0, #0x0
    ae0c:	b.ne	ae20 <__udivti3@@GCC_3.0+0x2e0>  // b.any
    ae10:	mov	x1, #0x1                   	// #1
    ae14:	ldr	x0, [sp, #496]
    ae18:	udiv	x0, x1, x0
    ae1c:	str	x0, [sp, #496]
    ae20:	ldr	x0, [sp, #496]
    ae24:	clz	x0, x0
    ae28:	sxtw	x0, w0
    ae2c:	str	x0, [sp, #464]
    ae30:	ldr	x0, [sp, #464]
    ae34:	cmp	x0, #0x0
    ae38:	b.ne	ae58 <__udivti3@@GCC_3.0+0x318>  // b.any
    ae3c:	ldr	x1, [sp, #472]
    ae40:	ldr	x0, [sp, #496]
    ae44:	sub	x0, x1, x0
    ae48:	str	x0, [sp, #472]
    ae4c:	mov	x0, #0x1                   	// #1
    ae50:	str	x0, [sp, #392]
    ae54:	b	b098 <__udivti3@@GCC_3.0+0x558>
    ae58:	mov	x1, #0x40                  	// #64
    ae5c:	ldr	x0, [sp, #464]
    ae60:	sub	x0, x1, x0
    ae64:	str	x0, [sp, #384]
    ae68:	ldr	x0, [sp, #464]
    ae6c:	mov	w1, w0
    ae70:	ldr	x0, [sp, #496]
    ae74:	lsl	x0, x0, x1
    ae78:	str	x0, [sp, #496]
    ae7c:	ldr	x0, [sp, #384]
    ae80:	mov	w1, w0
    ae84:	ldr	x0, [sp, #472]
    ae88:	lsr	x0, x0, x1
    ae8c:	str	x0, [sp, #376]
    ae90:	ldr	x0, [sp, #464]
    ae94:	mov	w1, w0
    ae98:	ldr	x0, [sp, #472]
    ae9c:	lsl	x1, x0, x1
    aea0:	ldr	x0, [sp, #384]
    aea4:	mov	w2, w0
    aea8:	ldr	x0, [sp, #480]
    aeac:	lsr	x0, x0, x2
    aeb0:	orr	x0, x1, x0
    aeb4:	str	x0, [sp, #472]
    aeb8:	ldr	x0, [sp, #464]
    aebc:	mov	w1, w0
    aec0:	ldr	x0, [sp, #480]
    aec4:	lsl	x0, x0, x1
    aec8:	str	x0, [sp, #480]
    aecc:	ldr	x0, [sp, #496]
    aed0:	lsr	x0, x0, #32
    aed4:	str	x0, [sp, #368]
    aed8:	ldr	x0, [sp, #496]
    aedc:	and	x0, x0, #0xffffffff
    aee0:	str	x0, [sp, #360]
    aee4:	ldr	x0, [sp, #376]
    aee8:	ldr	x1, [sp, #368]
    aeec:	udiv	x2, x0, x1
    aef0:	ldr	x1, [sp, #368]
    aef4:	mul	x1, x2, x1
    aef8:	sub	x0, x0, x1
    aefc:	str	x0, [sp, #352]
    af00:	ldr	x1, [sp, #376]
    af04:	ldr	x0, [sp, #368]
    af08:	udiv	x0, x1, x0
    af0c:	str	x0, [sp, #344]
    af10:	ldr	x1, [sp, #360]
    af14:	ldr	x0, [sp, #344]
    af18:	mul	x0, x1, x0
    af1c:	str	x0, [sp, #336]
    af20:	ldr	x0, [sp, #352]
    af24:	lsl	x1, x0, #32
    af28:	ldr	x0, [sp, #472]
    af2c:	lsr	x0, x0, #32
    af30:	orr	x0, x1, x0
    af34:	str	x0, [sp, #352]
    af38:	ldr	x1, [sp, #336]
    af3c:	ldr	x0, [sp, #352]
    af40:	cmp	x1, x0
    af44:	b.ls	afa0 <__udivti3@@GCC_3.0+0x460>  // b.plast
    af48:	ldr	x0, [sp, #344]
    af4c:	sub	x0, x0, #0x1
    af50:	str	x0, [sp, #344]
    af54:	ldr	x1, [sp, #352]
    af58:	ldr	x0, [sp, #496]
    af5c:	add	x0, x1, x0
    af60:	str	x0, [sp, #352]
    af64:	ldr	x1, [sp, #496]
    af68:	ldr	x0, [sp, #352]
    af6c:	cmp	x1, x0
    af70:	b.hi	afa0 <__udivti3@@GCC_3.0+0x460>  // b.pmore
    af74:	ldr	x1, [sp, #336]
    af78:	ldr	x0, [sp, #352]
    af7c:	cmp	x1, x0
    af80:	b.ls	afa0 <__udivti3@@GCC_3.0+0x460>  // b.plast
    af84:	ldr	x0, [sp, #344]
    af88:	sub	x0, x0, #0x1
    af8c:	str	x0, [sp, #344]
    af90:	ldr	x1, [sp, #352]
    af94:	ldr	x0, [sp, #496]
    af98:	add	x0, x1, x0
    af9c:	str	x0, [sp, #352]
    afa0:	ldr	x1, [sp, #352]
    afa4:	ldr	x0, [sp, #336]
    afa8:	sub	x0, x1, x0
    afac:	str	x0, [sp, #352]
    afb0:	ldr	x0, [sp, #352]
    afb4:	ldr	x1, [sp, #368]
    afb8:	udiv	x2, x0, x1
    afbc:	ldr	x1, [sp, #368]
    afc0:	mul	x1, x2, x1
    afc4:	sub	x0, x0, x1
    afc8:	str	x0, [sp, #328]
    afcc:	ldr	x1, [sp, #352]
    afd0:	ldr	x0, [sp, #368]
    afd4:	udiv	x0, x1, x0
    afd8:	str	x0, [sp, #320]
    afdc:	ldr	x1, [sp, #360]
    afe0:	ldr	x0, [sp, #320]
    afe4:	mul	x0, x1, x0
    afe8:	str	x0, [sp, #336]
    afec:	ldr	x0, [sp, #328]
    aff0:	lsl	x1, x0, #32
    aff4:	ldr	x0, [sp, #472]
    aff8:	and	x0, x0, #0xffffffff
    affc:	orr	x0, x1, x0
    b000:	str	x0, [sp, #328]
    b004:	ldr	x1, [sp, #336]
    b008:	ldr	x0, [sp, #328]
    b00c:	cmp	x1, x0
    b010:	b.ls	b06c <__udivti3@@GCC_3.0+0x52c>  // b.plast
    b014:	ldr	x0, [sp, #320]
    b018:	sub	x0, x0, #0x1
    b01c:	str	x0, [sp, #320]
    b020:	ldr	x1, [sp, #328]
    b024:	ldr	x0, [sp, #496]
    b028:	add	x0, x1, x0
    b02c:	str	x0, [sp, #328]
    b030:	ldr	x1, [sp, #496]
    b034:	ldr	x0, [sp, #328]
    b038:	cmp	x1, x0
    b03c:	b.hi	b06c <__udivti3@@GCC_3.0+0x52c>  // b.pmore
    b040:	ldr	x1, [sp, #336]
    b044:	ldr	x0, [sp, #328]
    b048:	cmp	x1, x0
    b04c:	b.ls	b06c <__udivti3@@GCC_3.0+0x52c>  // b.plast
    b050:	ldr	x0, [sp, #320]
    b054:	sub	x0, x0, #0x1
    b058:	str	x0, [sp, #320]
    b05c:	ldr	x1, [sp, #328]
    b060:	ldr	x0, [sp, #496]
    b064:	add	x0, x1, x0
    b068:	str	x0, [sp, #328]
    b06c:	ldr	x1, [sp, #328]
    b070:	ldr	x0, [sp, #336]
    b074:	sub	x0, x1, x0
    b078:	str	x0, [sp, #328]
    b07c:	ldr	x0, [sp, #344]
    b080:	lsl	x1, x0, #32
    b084:	ldr	x0, [sp, #320]
    b088:	orr	x0, x1, x0
    b08c:	str	x0, [sp, #392]
    b090:	ldr	x0, [sp, #328]
    b094:	str	x0, [sp, #472]
    b098:	ldr	x0, [sp, #496]
    b09c:	lsr	x0, x0, #32
    b0a0:	str	x0, [sp, #312]
    b0a4:	ldr	x0, [sp, #496]
    b0a8:	and	x0, x0, #0xffffffff
    b0ac:	str	x0, [sp, #304]
    b0b0:	ldr	x0, [sp, #472]
    b0b4:	ldr	x1, [sp, #312]
    b0b8:	udiv	x2, x0, x1
    b0bc:	ldr	x1, [sp, #312]
    b0c0:	mul	x1, x2, x1
    b0c4:	sub	x0, x0, x1
    b0c8:	str	x0, [sp, #296]
    b0cc:	ldr	x1, [sp, #472]
    b0d0:	ldr	x0, [sp, #312]
    b0d4:	udiv	x0, x1, x0
    b0d8:	str	x0, [sp, #288]
    b0dc:	ldr	x1, [sp, #304]
    b0e0:	ldr	x0, [sp, #288]
    b0e4:	mul	x0, x1, x0
    b0e8:	str	x0, [sp, #280]
    b0ec:	ldr	x0, [sp, #296]
    b0f0:	lsl	x1, x0, #32
    b0f4:	ldr	x0, [sp, #480]
    b0f8:	lsr	x0, x0, #32
    b0fc:	orr	x0, x1, x0
    b100:	str	x0, [sp, #296]
    b104:	ldr	x1, [sp, #280]
    b108:	ldr	x0, [sp, #296]
    b10c:	cmp	x1, x0
    b110:	b.ls	b16c <__udivti3@@GCC_3.0+0x62c>  // b.plast
    b114:	ldr	x0, [sp, #288]
    b118:	sub	x0, x0, #0x1
    b11c:	str	x0, [sp, #288]
    b120:	ldr	x1, [sp, #296]
    b124:	ldr	x0, [sp, #496]
    b128:	add	x0, x1, x0
    b12c:	str	x0, [sp, #296]
    b130:	ldr	x1, [sp, #496]
    b134:	ldr	x0, [sp, #296]
    b138:	cmp	x1, x0
    b13c:	b.hi	b16c <__udivti3@@GCC_3.0+0x62c>  // b.pmore
    b140:	ldr	x1, [sp, #280]
    b144:	ldr	x0, [sp, #296]
    b148:	cmp	x1, x0
    b14c:	b.ls	b16c <__udivti3@@GCC_3.0+0x62c>  // b.plast
    b150:	ldr	x0, [sp, #288]
    b154:	sub	x0, x0, #0x1
    b158:	str	x0, [sp, #288]
    b15c:	ldr	x1, [sp, #296]
    b160:	ldr	x0, [sp, #496]
    b164:	add	x0, x1, x0
    b168:	str	x0, [sp, #296]
    b16c:	ldr	x1, [sp, #296]
    b170:	ldr	x0, [sp, #280]
    b174:	sub	x0, x1, x0
    b178:	str	x0, [sp, #296]
    b17c:	ldr	x0, [sp, #296]
    b180:	ldr	x1, [sp, #312]
    b184:	udiv	x2, x0, x1
    b188:	ldr	x1, [sp, #312]
    b18c:	mul	x1, x2, x1
    b190:	sub	x0, x0, x1
    b194:	str	x0, [sp, #272]
    b198:	ldr	x1, [sp, #296]
    b19c:	ldr	x0, [sp, #312]
    b1a0:	udiv	x0, x1, x0
    b1a4:	str	x0, [sp, #264]
    b1a8:	ldr	x1, [sp, #304]
    b1ac:	ldr	x0, [sp, #264]
    b1b0:	mul	x0, x1, x0
    b1b4:	str	x0, [sp, #280]
    b1b8:	ldr	x0, [sp, #272]
    b1bc:	lsl	x1, x0, #32
    b1c0:	ldr	x0, [sp, #480]
    b1c4:	and	x0, x0, #0xffffffff
    b1c8:	orr	x0, x1, x0
    b1cc:	str	x0, [sp, #272]
    b1d0:	ldr	x1, [sp, #280]
    b1d4:	ldr	x0, [sp, #272]
    b1d8:	cmp	x1, x0
    b1dc:	b.ls	b238 <__udivti3@@GCC_3.0+0x6f8>  // b.plast
    b1e0:	ldr	x0, [sp, #264]
    b1e4:	sub	x0, x0, #0x1
    b1e8:	str	x0, [sp, #264]
    b1ec:	ldr	x1, [sp, #272]
    b1f0:	ldr	x0, [sp, #496]
    b1f4:	add	x0, x1, x0
    b1f8:	str	x0, [sp, #272]
    b1fc:	ldr	x1, [sp, #496]
    b200:	ldr	x0, [sp, #272]
    b204:	cmp	x1, x0
    b208:	b.hi	b238 <__udivti3@@GCC_3.0+0x6f8>  // b.pmore
    b20c:	ldr	x1, [sp, #280]
    b210:	ldr	x0, [sp, #272]
    b214:	cmp	x1, x0
    b218:	b.ls	b238 <__udivti3@@GCC_3.0+0x6f8>  // b.plast
    b21c:	ldr	x0, [sp, #264]
    b220:	sub	x0, x0, #0x1
    b224:	str	x0, [sp, #264]
    b228:	ldr	x1, [sp, #272]
    b22c:	ldr	x0, [sp, #496]
    b230:	add	x0, x1, x0
    b234:	str	x0, [sp, #272]
    b238:	ldr	x1, [sp, #272]
    b23c:	ldr	x0, [sp, #280]
    b240:	sub	x0, x1, x0
    b244:	str	x0, [sp, #272]
    b248:	ldr	x0, [sp, #288]
    b24c:	lsl	x1, x0, #32
    b250:	ldr	x0, [sp, #264]
    b254:	orr	x0, x1, x0
    b258:	str	x0, [sp, #400]
    b25c:	ldr	x0, [sp, #272]
    b260:	str	x0, [sp, #480]
    b264:	ldr	x0, [sp, #504]
    b268:	cmp	x0, #0x0
    b26c:	b.eq	b804 <__udivti3@@GCC_3.0+0xcc4>  // b.none
    b270:	ldr	x0, [sp, #464]
    b274:	mov	w1, w0
    b278:	ldr	x0, [sp, #480]
    b27c:	lsr	x0, x0, x1
    b280:	str	x0, [sp, #48]
    b284:	str	xzr, [sp, #56]
    b288:	ldp	x0, x1, [sp, #48]
    b28c:	ldr	x2, [sp, #504]
    b290:	stp	x0, x1, [x2]
    b294:	b	b804 <__udivti3@@GCC_3.0+0xcc4>
    b298:	ldr	x1, [sp, #488]
    b29c:	ldr	x0, [sp, #472]
    b2a0:	cmp	x1, x0
    b2a4:	b.ls	b2dc <__udivti3@@GCC_3.0+0x79c>  // b.plast
    b2a8:	str	xzr, [sp, #400]
    b2ac:	str	xzr, [sp, #392]
    b2b0:	ldr	x0, [sp, #504]
    b2b4:	cmp	x0, #0x0
    b2b8:	b.eq	b804 <__udivti3@@GCC_3.0+0xcc4>  // b.none
    b2bc:	ldr	x0, [sp, #480]
    b2c0:	str	x0, [sp, #48]
    b2c4:	ldr	x0, [sp, #472]
    b2c8:	str	x0, [sp, #56]
    b2cc:	ldp	x0, x1, [sp, #48]
    b2d0:	ldr	x2, [sp, #504]
    b2d4:	stp	x0, x1, [x2]
    b2d8:	b	b804 <__udivti3@@GCC_3.0+0xcc4>
    b2dc:	ldr	x0, [sp, #488]
    b2e0:	clz	x0, x0
    b2e4:	sxtw	x0, w0
    b2e8:	str	x0, [sp, #464]
    b2ec:	ldr	x0, [sp, #464]
    b2f0:	cmp	x0, #0x0
    b2f4:	b.ne	b39c <__udivti3@@GCC_3.0+0x85c>  // b.any
    b2f8:	ldr	x1, [sp, #488]
    b2fc:	ldr	x0, [sp, #472]
    b300:	cmp	x1, x0
    b304:	b.cc	b318 <__udivti3@@GCC_3.0+0x7d8>  // b.lo, b.ul, b.last
    b308:	ldr	x1, [sp, #496]
    b30c:	ldr	x0, [sp, #480]
    b310:	cmp	x1, x0
    b314:	b.hi	b368 <__udivti3@@GCC_3.0+0x828>  // b.pmore
    b318:	mov	x0, #0x1                   	// #1
    b31c:	str	x0, [sp, #400]
    b320:	ldr	x1, [sp, #480]
    b324:	ldr	x0, [sp, #496]
    b328:	sub	x0, x1, x0
    b32c:	str	x0, [sp, #256]
    b330:	ldr	x1, [sp, #472]
    b334:	ldr	x0, [sp, #488]
    b338:	sub	x1, x1, x0
    b33c:	ldr	x2, [sp, #480]
    b340:	ldr	x0, [sp, #256]
    b344:	cmp	x2, x0
    b348:	cset	w0, cc  // cc = lo, ul, last
    b34c:	and	w0, w0, #0xff
    b350:	and	x0, x0, #0xff
    b354:	sub	x0, x1, x0
    b358:	str	x0, [sp, #472]
    b35c:	ldr	x0, [sp, #256]
    b360:	str	x0, [sp, #480]
    b364:	b	b36c <__udivti3@@GCC_3.0+0x82c>
    b368:	str	xzr, [sp, #400]
    b36c:	str	xzr, [sp, #392]
    b370:	ldr	x0, [sp, #504]
    b374:	cmp	x0, #0x0
    b378:	b.eq	b804 <__udivti3@@GCC_3.0+0xcc4>  // b.none
    b37c:	ldr	x0, [sp, #480]
    b380:	str	x0, [sp, #48]
    b384:	ldr	x0, [sp, #472]
    b388:	str	x0, [sp, #56]
    b38c:	ldp	x0, x1, [sp, #48]
    b390:	ldr	x2, [sp, #504]
    b394:	stp	x0, x1, [x2]
    b398:	b	b804 <__udivti3@@GCC_3.0+0xcc4>
    b39c:	mov	x1, #0x40                  	// #64
    b3a0:	ldr	x0, [sp, #464]
    b3a4:	sub	x0, x1, x0
    b3a8:	str	x0, [sp, #384]
    b3ac:	ldr	x0, [sp, #464]
    b3b0:	mov	w1, w0
    b3b4:	ldr	x0, [sp, #488]
    b3b8:	lsl	x1, x0, x1
    b3bc:	ldr	x0, [sp, #384]
    b3c0:	mov	w2, w0
    b3c4:	ldr	x0, [sp, #496]
    b3c8:	lsr	x0, x0, x2
    b3cc:	orr	x0, x1, x0
    b3d0:	str	x0, [sp, #488]
    b3d4:	ldr	x0, [sp, #464]
    b3d8:	mov	w1, w0
    b3dc:	ldr	x0, [sp, #496]
    b3e0:	lsl	x0, x0, x1
    b3e4:	str	x0, [sp, #496]
    b3e8:	ldr	x0, [sp, #384]
    b3ec:	mov	w1, w0
    b3f0:	ldr	x0, [sp, #472]
    b3f4:	lsr	x0, x0, x1
    b3f8:	str	x0, [sp, #376]
    b3fc:	ldr	x0, [sp, #464]
    b400:	mov	w1, w0
    b404:	ldr	x0, [sp, #472]
    b408:	lsl	x1, x0, x1
    b40c:	ldr	x0, [sp, #384]
    b410:	mov	w2, w0
    b414:	ldr	x0, [sp, #480]
    b418:	lsr	x0, x0, x2
    b41c:	orr	x0, x1, x0
    b420:	str	x0, [sp, #472]
    b424:	ldr	x0, [sp, #464]
    b428:	mov	w1, w0
    b42c:	ldr	x0, [sp, #480]
    b430:	lsl	x0, x0, x1
    b434:	str	x0, [sp, #480]
    b438:	ldr	x0, [sp, #488]
    b43c:	lsr	x0, x0, #32
    b440:	str	x0, [sp, #248]
    b444:	ldr	x0, [sp, #488]
    b448:	and	x0, x0, #0xffffffff
    b44c:	str	x0, [sp, #240]
    b450:	ldr	x0, [sp, #376]
    b454:	ldr	x1, [sp, #248]
    b458:	udiv	x2, x0, x1
    b45c:	ldr	x1, [sp, #248]
    b460:	mul	x1, x2, x1
    b464:	sub	x0, x0, x1
    b468:	str	x0, [sp, #232]
    b46c:	ldr	x1, [sp, #376]
    b470:	ldr	x0, [sp, #248]
    b474:	udiv	x0, x1, x0
    b478:	str	x0, [sp, #224]
    b47c:	ldr	x1, [sp, #240]
    b480:	ldr	x0, [sp, #224]
    b484:	mul	x0, x1, x0
    b488:	str	x0, [sp, #216]
    b48c:	ldr	x0, [sp, #232]
    b490:	lsl	x1, x0, #32
    b494:	ldr	x0, [sp, #472]
    b498:	lsr	x0, x0, #32
    b49c:	orr	x0, x1, x0
    b4a0:	str	x0, [sp, #232]
    b4a4:	ldr	x1, [sp, #216]
    b4a8:	ldr	x0, [sp, #232]
    b4ac:	cmp	x1, x0
    b4b0:	b.ls	b50c <__udivti3@@GCC_3.0+0x9cc>  // b.plast
    b4b4:	ldr	x0, [sp, #224]
    b4b8:	sub	x0, x0, #0x1
    b4bc:	str	x0, [sp, #224]
    b4c0:	ldr	x1, [sp, #232]
    b4c4:	ldr	x0, [sp, #488]
    b4c8:	add	x0, x1, x0
    b4cc:	str	x0, [sp, #232]
    b4d0:	ldr	x1, [sp, #488]
    b4d4:	ldr	x0, [sp, #232]
    b4d8:	cmp	x1, x0
    b4dc:	b.hi	b50c <__udivti3@@GCC_3.0+0x9cc>  // b.pmore
    b4e0:	ldr	x1, [sp, #216]
    b4e4:	ldr	x0, [sp, #232]
    b4e8:	cmp	x1, x0
    b4ec:	b.ls	b50c <__udivti3@@GCC_3.0+0x9cc>  // b.plast
    b4f0:	ldr	x0, [sp, #224]
    b4f4:	sub	x0, x0, #0x1
    b4f8:	str	x0, [sp, #224]
    b4fc:	ldr	x1, [sp, #232]
    b500:	ldr	x0, [sp, #488]
    b504:	add	x0, x1, x0
    b508:	str	x0, [sp, #232]
    b50c:	ldr	x1, [sp, #232]
    b510:	ldr	x0, [sp, #216]
    b514:	sub	x0, x1, x0
    b518:	str	x0, [sp, #232]
    b51c:	ldr	x0, [sp, #232]
    b520:	ldr	x1, [sp, #248]
    b524:	udiv	x2, x0, x1
    b528:	ldr	x1, [sp, #248]
    b52c:	mul	x1, x2, x1
    b530:	sub	x0, x0, x1
    b534:	str	x0, [sp, #208]
    b538:	ldr	x1, [sp, #232]
    b53c:	ldr	x0, [sp, #248]
    b540:	udiv	x0, x1, x0
    b544:	str	x0, [sp, #200]
    b548:	ldr	x1, [sp, #240]
    b54c:	ldr	x0, [sp, #200]
    b550:	mul	x0, x1, x0
    b554:	str	x0, [sp, #216]
    b558:	ldr	x0, [sp, #208]
    b55c:	lsl	x1, x0, #32
    b560:	ldr	x0, [sp, #472]
    b564:	and	x0, x0, #0xffffffff
    b568:	orr	x0, x1, x0
    b56c:	str	x0, [sp, #208]
    b570:	ldr	x1, [sp, #216]
    b574:	ldr	x0, [sp, #208]
    b578:	cmp	x1, x0
    b57c:	b.ls	b5d8 <__udivti3@@GCC_3.0+0xa98>  // b.plast
    b580:	ldr	x0, [sp, #200]
    b584:	sub	x0, x0, #0x1
    b588:	str	x0, [sp, #200]
    b58c:	ldr	x1, [sp, #208]
    b590:	ldr	x0, [sp, #488]
    b594:	add	x0, x1, x0
    b598:	str	x0, [sp, #208]
    b59c:	ldr	x1, [sp, #488]
    b5a0:	ldr	x0, [sp, #208]
    b5a4:	cmp	x1, x0
    b5a8:	b.hi	b5d8 <__udivti3@@GCC_3.0+0xa98>  // b.pmore
    b5ac:	ldr	x1, [sp, #216]
    b5b0:	ldr	x0, [sp, #208]
    b5b4:	cmp	x1, x0
    b5b8:	b.ls	b5d8 <__udivti3@@GCC_3.0+0xa98>  // b.plast
    b5bc:	ldr	x0, [sp, #200]
    b5c0:	sub	x0, x0, #0x1
    b5c4:	str	x0, [sp, #200]
    b5c8:	ldr	x1, [sp, #208]
    b5cc:	ldr	x0, [sp, #488]
    b5d0:	add	x0, x1, x0
    b5d4:	str	x0, [sp, #208]
    b5d8:	ldr	x1, [sp, #208]
    b5dc:	ldr	x0, [sp, #216]
    b5e0:	sub	x0, x1, x0
    b5e4:	str	x0, [sp, #208]
    b5e8:	ldr	x0, [sp, #224]
    b5ec:	lsl	x1, x0, #32
    b5f0:	ldr	x0, [sp, #200]
    b5f4:	orr	x0, x1, x0
    b5f8:	str	x0, [sp, #400]
    b5fc:	ldr	x0, [sp, #208]
    b600:	str	x0, [sp, #472]
    b604:	ldr	x0, [sp, #400]
    b608:	and	x0, x0, #0xffffffff
    b60c:	str	x0, [sp, #192]
    b610:	ldr	x0, [sp, #400]
    b614:	lsr	x0, x0, #32
    b618:	str	x0, [sp, #184]
    b61c:	ldr	x0, [sp, #496]
    b620:	and	x0, x0, #0xffffffff
    b624:	str	x0, [sp, #176]
    b628:	ldr	x0, [sp, #496]
    b62c:	lsr	x0, x0, #32
    b630:	str	x0, [sp, #168]
    b634:	ldr	x1, [sp, #192]
    b638:	ldr	x0, [sp, #176]
    b63c:	mul	x0, x1, x0
    b640:	str	x0, [sp, #160]
    b644:	ldr	x1, [sp, #192]
    b648:	ldr	x0, [sp, #168]
    b64c:	mul	x0, x1, x0
    b650:	str	x0, [sp, #152]
    b654:	ldr	x1, [sp, #184]
    b658:	ldr	x0, [sp, #176]
    b65c:	mul	x0, x1, x0
    b660:	str	x0, [sp, #144]
    b664:	ldr	x1, [sp, #184]
    b668:	ldr	x0, [sp, #168]
    b66c:	mul	x0, x1, x0
    b670:	str	x0, [sp, #136]
    b674:	ldr	x0, [sp, #160]
    b678:	lsr	x0, x0, #32
    b67c:	ldr	x1, [sp, #152]
    b680:	add	x0, x1, x0
    b684:	str	x0, [sp, #152]
    b688:	ldr	x1, [sp, #152]
    b68c:	ldr	x0, [sp, #144]
    b690:	add	x0, x1, x0
    b694:	str	x0, [sp, #152]
    b698:	ldr	x1, [sp, #144]
    b69c:	ldr	x0, [sp, #152]
    b6a0:	cmp	x1, x0
    b6a4:	b.ls	b6b8 <__udivti3@@GCC_3.0+0xb78>  // b.plast
    b6a8:	ldr	x1, [sp, #136]
    b6ac:	mov	x0, #0x100000000           	// #4294967296
    b6b0:	add	x0, x1, x0
    b6b4:	str	x0, [sp, #136]
    b6b8:	ldr	x0, [sp, #152]
    b6bc:	lsr	x1, x0, #32
    b6c0:	ldr	x0, [sp, #136]
    b6c4:	add	x0, x1, x0
    b6c8:	str	x0, [sp, #128]
    b6cc:	ldr	x0, [sp, #152]
    b6d0:	and	x0, x0, #0xffffffff
    b6d4:	lsl	x1, x0, #32
    b6d8:	ldr	x0, [sp, #160]
    b6dc:	and	x0, x0, #0xffffffff
    b6e0:	add	x0, x1, x0
    b6e4:	str	x0, [sp, #120]
    b6e8:	ldr	x1, [sp, #472]
    b6ec:	ldr	x0, [sp, #128]
    b6f0:	cmp	x1, x0
    b6f4:	b.cc	b718 <__udivti3@@GCC_3.0+0xbd8>  // b.lo, b.ul, b.last
    b6f8:	ldr	x1, [sp, #472]
    b6fc:	ldr	x0, [sp, #128]
    b700:	cmp	x1, x0
    b704:	b.ne	b768 <__udivti3@@GCC_3.0+0xc28>  // b.any
    b708:	ldr	x1, [sp, #480]
    b70c:	ldr	x0, [sp, #120]
    b710:	cmp	x1, x0
    b714:	b.cs	b768 <__udivti3@@GCC_3.0+0xc28>  // b.hs, b.nlast
    b718:	ldr	x0, [sp, #400]
    b71c:	sub	x0, x0, #0x1
    b720:	str	x0, [sp, #400]
    b724:	ldr	x1, [sp, #120]
    b728:	ldr	x0, [sp, #496]
    b72c:	sub	x0, x1, x0
    b730:	str	x0, [sp, #112]
    b734:	ldr	x1, [sp, #128]
    b738:	ldr	x0, [sp, #488]
    b73c:	sub	x1, x1, x0
    b740:	ldr	x2, [sp, #120]
    b744:	ldr	x0, [sp, #112]
    b748:	cmp	x2, x0
    b74c:	cset	w0, cc  // cc = lo, ul, last
    b750:	and	w0, w0, #0xff
    b754:	and	x0, x0, #0xff
    b758:	sub	x0, x1, x0
    b75c:	str	x0, [sp, #128]
    b760:	ldr	x0, [sp, #112]
    b764:	str	x0, [sp, #120]
    b768:	str	xzr, [sp, #392]
    b76c:	ldr	x0, [sp, #504]
    b770:	cmp	x0, #0x0
    b774:	b.eq	b804 <__udivti3@@GCC_3.0+0xcc4>  // b.none
    b778:	ldr	x1, [sp, #480]
    b77c:	ldr	x0, [sp, #120]
    b780:	sub	x0, x1, x0
    b784:	str	x0, [sp, #104]
    b788:	ldr	x1, [sp, #472]
    b78c:	ldr	x0, [sp, #128]
    b790:	sub	x1, x1, x0
    b794:	ldr	x2, [sp, #480]
    b798:	ldr	x0, [sp, #104]
    b79c:	cmp	x2, x0
    b7a0:	cset	w0, cc  // cc = lo, ul, last
    b7a4:	and	w0, w0, #0xff
    b7a8:	and	x0, x0, #0xff
    b7ac:	sub	x0, x1, x0
    b7b0:	str	x0, [sp, #472]
    b7b4:	ldr	x0, [sp, #104]
    b7b8:	str	x0, [sp, #480]
    b7bc:	ldr	x0, [sp, #384]
    b7c0:	mov	w1, w0
    b7c4:	ldr	x0, [sp, #472]
    b7c8:	lsl	x1, x0, x1
    b7cc:	ldr	x0, [sp, #464]
    b7d0:	mov	w2, w0
    b7d4:	ldr	x0, [sp, #480]
    b7d8:	lsr	x0, x0, x2
    b7dc:	orr	x0, x1, x0
    b7e0:	str	x0, [sp, #48]
    b7e4:	ldr	x0, [sp, #464]
    b7e8:	mov	w1, w0
    b7ec:	ldr	x0, [sp, #472]
    b7f0:	lsr	x0, x0, x1
    b7f4:	str	x0, [sp, #56]
    b7f8:	ldp	x0, x1, [sp, #48]
    b7fc:	ldr	x2, [sp, #504]
    b800:	stp	x0, x1, [x2]
    b804:	ldr	x0, [sp, #400]
    b808:	str	x0, [sp, #32]
    b80c:	ldr	x0, [sp, #392]
    b810:	str	x0, [sp, #40]
    b814:	ldp	x0, x1, [sp, #32]
    b818:	add	sp, sp, #0x220
    b81c:	ret

000000000000b820 <__umodti3@@GCC_3.0>:
    b820:	sub	sp, sp, #0x230
    b824:	stp	x0, x1, [sp, #16]
    b828:	stp	x2, x3, [sp]
    b82c:	ldp	x0, x1, [sp, #16]
    b830:	add	x2, sp, #0x200
    b834:	stp	x0, x1, [x2, #32]
    b838:	ldp	x0, x1, [sp]
    b83c:	add	x2, sp, #0x200
    b840:	stp	x0, x1, [x2, #16]
    b844:	add	x0, sp, #0x60
    b848:	str	x0, [sp, #520]
    b84c:	add	x0, sp, #0x200
    b850:	ldp	x0, x1, [x0, #32]
    b854:	stp	x0, x1, [sp, #80]
    b858:	add	x0, sp, #0x200
    b85c:	ldp	x0, x1, [x0, #16]
    b860:	stp	x0, x1, [sp, #64]
    b864:	ldr	x0, [sp, #64]
    b868:	str	x0, [sp, #512]
    b86c:	ldr	x0, [sp, #72]
    b870:	str	x0, [sp, #504]
    b874:	ldr	x0, [sp, #80]
    b878:	str	x0, [sp, #496]
    b87c:	ldr	x0, [sp, #88]
    b880:	str	x0, [sp, #488]
    b884:	ldr	x0, [sp, #504]
    b888:	cmp	x0, #0x0
    b88c:	b.ne	bf7c <__umodti3@@GCC_3.0+0x75c>  // b.any
    b890:	ldr	x1, [sp, #512]
    b894:	ldr	x0, [sp, #488]
    b898:	cmp	x1, x0
    b89c:	b.ls	bae8 <__umodti3@@GCC_3.0+0x2c8>  // b.plast
    b8a0:	ldr	x0, [sp, #512]
    b8a4:	clz	x0, x0
    b8a8:	sxtw	x0, w0
    b8ac:	str	x0, [sp, #480]
    b8b0:	ldr	x0, [sp, #480]
    b8b4:	cmp	x0, #0x0
    b8b8:	b.eq	b914 <__umodti3@@GCC_3.0+0xf4>  // b.none
    b8bc:	ldr	x0, [sp, #480]
    b8c0:	mov	w1, w0
    b8c4:	ldr	x0, [sp, #512]
    b8c8:	lsl	x0, x0, x1
    b8cc:	str	x0, [sp, #512]
    b8d0:	ldr	x0, [sp, #480]
    b8d4:	mov	w1, w0
    b8d8:	ldr	x0, [sp, #488]
    b8dc:	lsl	x1, x0, x1
    b8e0:	ldr	x0, [sp, #480]
    b8e4:	mov	w2, w0
    b8e8:	mov	w0, #0x40                  	// #64
    b8ec:	sub	w0, w0, w2
    b8f0:	ldr	x2, [sp, #496]
    b8f4:	lsr	x0, x2, x0
    b8f8:	orr	x0, x1, x0
    b8fc:	str	x0, [sp, #488]
    b900:	ldr	x0, [sp, #480]
    b904:	mov	w1, w0
    b908:	ldr	x0, [sp, #496]
    b90c:	lsl	x0, x0, x1
    b910:	str	x0, [sp, #496]
    b914:	ldr	x0, [sp, #512]
    b918:	lsr	x0, x0, #32
    b91c:	str	x0, [sp, #472]
    b920:	ldr	x0, [sp, #512]
    b924:	and	x0, x0, #0xffffffff
    b928:	str	x0, [sp, #464]
    b92c:	ldr	x0, [sp, #488]
    b930:	ldr	x1, [sp, #472]
    b934:	udiv	x2, x0, x1
    b938:	ldr	x1, [sp, #472]
    b93c:	mul	x1, x2, x1
    b940:	sub	x0, x0, x1
    b944:	str	x0, [sp, #456]
    b948:	ldr	x1, [sp, #488]
    b94c:	ldr	x0, [sp, #472]
    b950:	udiv	x0, x1, x0
    b954:	str	x0, [sp, #448]
    b958:	ldr	x1, [sp, #464]
    b95c:	ldr	x0, [sp, #448]
    b960:	mul	x0, x1, x0
    b964:	str	x0, [sp, #440]
    b968:	ldr	x0, [sp, #456]
    b96c:	lsl	x1, x0, #32
    b970:	ldr	x0, [sp, #496]
    b974:	lsr	x0, x0, #32
    b978:	orr	x0, x1, x0
    b97c:	str	x0, [sp, #456]
    b980:	ldr	x1, [sp, #440]
    b984:	ldr	x0, [sp, #456]
    b988:	cmp	x1, x0
    b98c:	b.ls	b9e8 <__umodti3@@GCC_3.0+0x1c8>  // b.plast
    b990:	ldr	x0, [sp, #448]
    b994:	sub	x0, x0, #0x1
    b998:	str	x0, [sp, #448]
    b99c:	ldr	x1, [sp, #456]
    b9a0:	ldr	x0, [sp, #512]
    b9a4:	add	x0, x1, x0
    b9a8:	str	x0, [sp, #456]
    b9ac:	ldr	x1, [sp, #512]
    b9b0:	ldr	x0, [sp, #456]
    b9b4:	cmp	x1, x0
    b9b8:	b.hi	b9e8 <__umodti3@@GCC_3.0+0x1c8>  // b.pmore
    b9bc:	ldr	x1, [sp, #440]
    b9c0:	ldr	x0, [sp, #456]
    b9c4:	cmp	x1, x0
    b9c8:	b.ls	b9e8 <__umodti3@@GCC_3.0+0x1c8>  // b.plast
    b9cc:	ldr	x0, [sp, #448]
    b9d0:	sub	x0, x0, #0x1
    b9d4:	str	x0, [sp, #448]
    b9d8:	ldr	x1, [sp, #456]
    b9dc:	ldr	x0, [sp, #512]
    b9e0:	add	x0, x1, x0
    b9e4:	str	x0, [sp, #456]
    b9e8:	ldr	x1, [sp, #456]
    b9ec:	ldr	x0, [sp, #440]
    b9f0:	sub	x0, x1, x0
    b9f4:	str	x0, [sp, #456]
    b9f8:	ldr	x0, [sp, #456]
    b9fc:	ldr	x1, [sp, #472]
    ba00:	udiv	x2, x0, x1
    ba04:	ldr	x1, [sp, #472]
    ba08:	mul	x1, x2, x1
    ba0c:	sub	x0, x0, x1
    ba10:	str	x0, [sp, #432]
    ba14:	ldr	x1, [sp, #456]
    ba18:	ldr	x0, [sp, #472]
    ba1c:	udiv	x0, x1, x0
    ba20:	str	x0, [sp, #424]
    ba24:	ldr	x1, [sp, #464]
    ba28:	ldr	x0, [sp, #424]
    ba2c:	mul	x0, x1, x0
    ba30:	str	x0, [sp, #440]
    ba34:	ldr	x0, [sp, #432]
    ba38:	lsl	x1, x0, #32
    ba3c:	ldr	x0, [sp, #496]
    ba40:	and	x0, x0, #0xffffffff
    ba44:	orr	x0, x1, x0
    ba48:	str	x0, [sp, #432]
    ba4c:	ldr	x1, [sp, #440]
    ba50:	ldr	x0, [sp, #432]
    ba54:	cmp	x1, x0
    ba58:	b.ls	bab4 <__umodti3@@GCC_3.0+0x294>  // b.plast
    ba5c:	ldr	x0, [sp, #424]
    ba60:	sub	x0, x0, #0x1
    ba64:	str	x0, [sp, #424]
    ba68:	ldr	x1, [sp, #432]
    ba6c:	ldr	x0, [sp, #512]
    ba70:	add	x0, x1, x0
    ba74:	str	x0, [sp, #432]
    ba78:	ldr	x1, [sp, #512]
    ba7c:	ldr	x0, [sp, #432]
    ba80:	cmp	x1, x0
    ba84:	b.hi	bab4 <__umodti3@@GCC_3.0+0x294>  // b.pmore
    ba88:	ldr	x1, [sp, #440]
    ba8c:	ldr	x0, [sp, #432]
    ba90:	cmp	x1, x0
    ba94:	b.ls	bab4 <__umodti3@@GCC_3.0+0x294>  // b.plast
    ba98:	ldr	x0, [sp, #424]
    ba9c:	sub	x0, x0, #0x1
    baa0:	str	x0, [sp, #424]
    baa4:	ldr	x1, [sp, #432]
    baa8:	ldr	x0, [sp, #512]
    baac:	add	x0, x1, x0
    bab0:	str	x0, [sp, #432]
    bab4:	ldr	x1, [sp, #432]
    bab8:	ldr	x0, [sp, #440]
    babc:	sub	x0, x1, x0
    bac0:	str	x0, [sp, #432]
    bac4:	ldr	x0, [sp, #448]
    bac8:	lsl	x1, x0, #32
    bacc:	ldr	x0, [sp, #424]
    bad0:	orr	x0, x1, x0
    bad4:	str	x0, [sp, #416]
    bad8:	ldr	x0, [sp, #432]
    badc:	str	x0, [sp, #496]
    bae0:	str	xzr, [sp, #408]
    bae4:	b	bf48 <__umodti3@@GCC_3.0+0x728>
    bae8:	ldr	x0, [sp, #512]
    baec:	cmp	x0, #0x0
    baf0:	b.ne	bb04 <__umodti3@@GCC_3.0+0x2e4>  // b.any
    baf4:	mov	x1, #0x1                   	// #1
    baf8:	ldr	x0, [sp, #512]
    bafc:	udiv	x0, x1, x0
    bb00:	str	x0, [sp, #512]
    bb04:	ldr	x0, [sp, #512]
    bb08:	clz	x0, x0
    bb0c:	sxtw	x0, w0
    bb10:	str	x0, [sp, #480]
    bb14:	ldr	x0, [sp, #480]
    bb18:	cmp	x0, #0x0
    bb1c:	b.ne	bb3c <__umodti3@@GCC_3.0+0x31c>  // b.any
    bb20:	ldr	x1, [sp, #488]
    bb24:	ldr	x0, [sp, #512]
    bb28:	sub	x0, x1, x0
    bb2c:	str	x0, [sp, #488]
    bb30:	mov	x0, #0x1                   	// #1
    bb34:	str	x0, [sp, #408]
    bb38:	b	bd7c <__umodti3@@GCC_3.0+0x55c>
    bb3c:	mov	x1, #0x40                  	// #64
    bb40:	ldr	x0, [sp, #480]
    bb44:	sub	x0, x1, x0
    bb48:	str	x0, [sp, #400]
    bb4c:	ldr	x0, [sp, #480]
    bb50:	mov	w1, w0
    bb54:	ldr	x0, [sp, #512]
    bb58:	lsl	x0, x0, x1
    bb5c:	str	x0, [sp, #512]
    bb60:	ldr	x0, [sp, #400]
    bb64:	mov	w1, w0
    bb68:	ldr	x0, [sp, #488]
    bb6c:	lsr	x0, x0, x1
    bb70:	str	x0, [sp, #392]
    bb74:	ldr	x0, [sp, #480]
    bb78:	mov	w1, w0
    bb7c:	ldr	x0, [sp, #488]
    bb80:	lsl	x1, x0, x1
    bb84:	ldr	x0, [sp, #400]
    bb88:	mov	w2, w0
    bb8c:	ldr	x0, [sp, #496]
    bb90:	lsr	x0, x0, x2
    bb94:	orr	x0, x1, x0
    bb98:	str	x0, [sp, #488]
    bb9c:	ldr	x0, [sp, #480]
    bba0:	mov	w1, w0
    bba4:	ldr	x0, [sp, #496]
    bba8:	lsl	x0, x0, x1
    bbac:	str	x0, [sp, #496]
    bbb0:	ldr	x0, [sp, #512]
    bbb4:	lsr	x0, x0, #32
    bbb8:	str	x0, [sp, #384]
    bbbc:	ldr	x0, [sp, #512]
    bbc0:	and	x0, x0, #0xffffffff
    bbc4:	str	x0, [sp, #376]
    bbc8:	ldr	x0, [sp, #392]
    bbcc:	ldr	x1, [sp, #384]
    bbd0:	udiv	x2, x0, x1
    bbd4:	ldr	x1, [sp, #384]
    bbd8:	mul	x1, x2, x1
    bbdc:	sub	x0, x0, x1
    bbe0:	str	x0, [sp, #368]
    bbe4:	ldr	x1, [sp, #392]
    bbe8:	ldr	x0, [sp, #384]
    bbec:	udiv	x0, x1, x0
    bbf0:	str	x0, [sp, #360]
    bbf4:	ldr	x1, [sp, #376]
    bbf8:	ldr	x0, [sp, #360]
    bbfc:	mul	x0, x1, x0
    bc00:	str	x0, [sp, #352]
    bc04:	ldr	x0, [sp, #368]
    bc08:	lsl	x1, x0, #32
    bc0c:	ldr	x0, [sp, #488]
    bc10:	lsr	x0, x0, #32
    bc14:	orr	x0, x1, x0
    bc18:	str	x0, [sp, #368]
    bc1c:	ldr	x1, [sp, #352]
    bc20:	ldr	x0, [sp, #368]
    bc24:	cmp	x1, x0
    bc28:	b.ls	bc84 <__umodti3@@GCC_3.0+0x464>  // b.plast
    bc2c:	ldr	x0, [sp, #360]
    bc30:	sub	x0, x0, #0x1
    bc34:	str	x0, [sp, #360]
    bc38:	ldr	x1, [sp, #368]
    bc3c:	ldr	x0, [sp, #512]
    bc40:	add	x0, x1, x0
    bc44:	str	x0, [sp, #368]
    bc48:	ldr	x1, [sp, #512]
    bc4c:	ldr	x0, [sp, #368]
    bc50:	cmp	x1, x0
    bc54:	b.hi	bc84 <__umodti3@@GCC_3.0+0x464>  // b.pmore
    bc58:	ldr	x1, [sp, #352]
    bc5c:	ldr	x0, [sp, #368]
    bc60:	cmp	x1, x0
    bc64:	b.ls	bc84 <__umodti3@@GCC_3.0+0x464>  // b.plast
    bc68:	ldr	x0, [sp, #360]
    bc6c:	sub	x0, x0, #0x1
    bc70:	str	x0, [sp, #360]
    bc74:	ldr	x1, [sp, #368]
    bc78:	ldr	x0, [sp, #512]
    bc7c:	add	x0, x1, x0
    bc80:	str	x0, [sp, #368]
    bc84:	ldr	x1, [sp, #368]
    bc88:	ldr	x0, [sp, #352]
    bc8c:	sub	x0, x1, x0
    bc90:	str	x0, [sp, #368]
    bc94:	ldr	x0, [sp, #368]
    bc98:	ldr	x1, [sp, #384]
    bc9c:	udiv	x2, x0, x1
    bca0:	ldr	x1, [sp, #384]
    bca4:	mul	x1, x2, x1
    bca8:	sub	x0, x0, x1
    bcac:	str	x0, [sp, #344]
    bcb0:	ldr	x1, [sp, #368]
    bcb4:	ldr	x0, [sp, #384]
    bcb8:	udiv	x0, x1, x0
    bcbc:	str	x0, [sp, #336]
    bcc0:	ldr	x1, [sp, #376]
    bcc4:	ldr	x0, [sp, #336]
    bcc8:	mul	x0, x1, x0
    bccc:	str	x0, [sp, #352]
    bcd0:	ldr	x0, [sp, #344]
    bcd4:	lsl	x1, x0, #32
    bcd8:	ldr	x0, [sp, #488]
    bcdc:	and	x0, x0, #0xffffffff
    bce0:	orr	x0, x1, x0
    bce4:	str	x0, [sp, #344]
    bce8:	ldr	x1, [sp, #352]
    bcec:	ldr	x0, [sp, #344]
    bcf0:	cmp	x1, x0
    bcf4:	b.ls	bd50 <__umodti3@@GCC_3.0+0x530>  // b.plast
    bcf8:	ldr	x0, [sp, #336]
    bcfc:	sub	x0, x0, #0x1
    bd00:	str	x0, [sp, #336]
    bd04:	ldr	x1, [sp, #344]
    bd08:	ldr	x0, [sp, #512]
    bd0c:	add	x0, x1, x0
    bd10:	str	x0, [sp, #344]
    bd14:	ldr	x1, [sp, #512]
    bd18:	ldr	x0, [sp, #344]
    bd1c:	cmp	x1, x0
    bd20:	b.hi	bd50 <__umodti3@@GCC_3.0+0x530>  // b.pmore
    bd24:	ldr	x1, [sp, #352]
    bd28:	ldr	x0, [sp, #344]
    bd2c:	cmp	x1, x0
    bd30:	b.ls	bd50 <__umodti3@@GCC_3.0+0x530>  // b.plast
    bd34:	ldr	x0, [sp, #336]
    bd38:	sub	x0, x0, #0x1
    bd3c:	str	x0, [sp, #336]
    bd40:	ldr	x1, [sp, #344]
    bd44:	ldr	x0, [sp, #512]
    bd48:	add	x0, x1, x0
    bd4c:	str	x0, [sp, #344]
    bd50:	ldr	x1, [sp, #344]
    bd54:	ldr	x0, [sp, #352]
    bd58:	sub	x0, x1, x0
    bd5c:	str	x0, [sp, #344]
    bd60:	ldr	x0, [sp, #360]
    bd64:	lsl	x1, x0, #32
    bd68:	ldr	x0, [sp, #336]
    bd6c:	orr	x0, x1, x0
    bd70:	str	x0, [sp, #408]
    bd74:	ldr	x0, [sp, #344]
    bd78:	str	x0, [sp, #488]
    bd7c:	ldr	x0, [sp, #512]
    bd80:	lsr	x0, x0, #32
    bd84:	str	x0, [sp, #328]
    bd88:	ldr	x0, [sp, #512]
    bd8c:	and	x0, x0, #0xffffffff
    bd90:	str	x0, [sp, #320]
    bd94:	ldr	x0, [sp, #488]
    bd98:	ldr	x1, [sp, #328]
    bd9c:	udiv	x2, x0, x1
    bda0:	ldr	x1, [sp, #328]
    bda4:	mul	x1, x2, x1
    bda8:	sub	x0, x0, x1
    bdac:	str	x0, [sp, #312]
    bdb0:	ldr	x1, [sp, #488]
    bdb4:	ldr	x0, [sp, #328]
    bdb8:	udiv	x0, x1, x0
    bdbc:	str	x0, [sp, #304]
    bdc0:	ldr	x1, [sp, #320]
    bdc4:	ldr	x0, [sp, #304]
    bdc8:	mul	x0, x1, x0
    bdcc:	str	x0, [sp, #296]
    bdd0:	ldr	x0, [sp, #312]
    bdd4:	lsl	x1, x0, #32
    bdd8:	ldr	x0, [sp, #496]
    bddc:	lsr	x0, x0, #32
    bde0:	orr	x0, x1, x0
    bde4:	str	x0, [sp, #312]
    bde8:	ldr	x1, [sp, #296]
    bdec:	ldr	x0, [sp, #312]
    bdf0:	cmp	x1, x0
    bdf4:	b.ls	be50 <__umodti3@@GCC_3.0+0x630>  // b.plast
    bdf8:	ldr	x0, [sp, #304]
    bdfc:	sub	x0, x0, #0x1
    be00:	str	x0, [sp, #304]
    be04:	ldr	x1, [sp, #312]
    be08:	ldr	x0, [sp, #512]
    be0c:	add	x0, x1, x0
    be10:	str	x0, [sp, #312]
    be14:	ldr	x1, [sp, #512]
    be18:	ldr	x0, [sp, #312]
    be1c:	cmp	x1, x0
    be20:	b.hi	be50 <__umodti3@@GCC_3.0+0x630>  // b.pmore
    be24:	ldr	x1, [sp, #296]
    be28:	ldr	x0, [sp, #312]
    be2c:	cmp	x1, x0
    be30:	b.ls	be50 <__umodti3@@GCC_3.0+0x630>  // b.plast
    be34:	ldr	x0, [sp, #304]
    be38:	sub	x0, x0, #0x1
    be3c:	str	x0, [sp, #304]
    be40:	ldr	x1, [sp, #312]
    be44:	ldr	x0, [sp, #512]
    be48:	add	x0, x1, x0
    be4c:	str	x0, [sp, #312]
    be50:	ldr	x1, [sp, #312]
    be54:	ldr	x0, [sp, #296]
    be58:	sub	x0, x1, x0
    be5c:	str	x0, [sp, #312]
    be60:	ldr	x0, [sp, #312]
    be64:	ldr	x1, [sp, #328]
    be68:	udiv	x2, x0, x1
    be6c:	ldr	x1, [sp, #328]
    be70:	mul	x1, x2, x1
    be74:	sub	x0, x0, x1
    be78:	str	x0, [sp, #288]
    be7c:	ldr	x1, [sp, #312]
    be80:	ldr	x0, [sp, #328]
    be84:	udiv	x0, x1, x0
    be88:	str	x0, [sp, #280]
    be8c:	ldr	x1, [sp, #320]
    be90:	ldr	x0, [sp, #280]
    be94:	mul	x0, x1, x0
    be98:	str	x0, [sp, #296]
    be9c:	ldr	x0, [sp, #288]
    bea0:	lsl	x1, x0, #32
    bea4:	ldr	x0, [sp, #496]
    bea8:	and	x0, x0, #0xffffffff
    beac:	orr	x0, x1, x0
    beb0:	str	x0, [sp, #288]
    beb4:	ldr	x1, [sp, #296]
    beb8:	ldr	x0, [sp, #288]
    bebc:	cmp	x1, x0
    bec0:	b.ls	bf1c <__umodti3@@GCC_3.0+0x6fc>  // b.plast
    bec4:	ldr	x0, [sp, #280]
    bec8:	sub	x0, x0, #0x1
    becc:	str	x0, [sp, #280]
    bed0:	ldr	x1, [sp, #288]
    bed4:	ldr	x0, [sp, #512]
    bed8:	add	x0, x1, x0
    bedc:	str	x0, [sp, #288]
    bee0:	ldr	x1, [sp, #512]
    bee4:	ldr	x0, [sp, #288]
    bee8:	cmp	x1, x0
    beec:	b.hi	bf1c <__umodti3@@GCC_3.0+0x6fc>  // b.pmore
    bef0:	ldr	x1, [sp, #296]
    bef4:	ldr	x0, [sp, #288]
    bef8:	cmp	x1, x0
    befc:	b.ls	bf1c <__umodti3@@GCC_3.0+0x6fc>  // b.plast
    bf00:	ldr	x0, [sp, #280]
    bf04:	sub	x0, x0, #0x1
    bf08:	str	x0, [sp, #280]
    bf0c:	ldr	x1, [sp, #288]
    bf10:	ldr	x0, [sp, #512]
    bf14:	add	x0, x1, x0
    bf18:	str	x0, [sp, #288]
    bf1c:	ldr	x1, [sp, #288]
    bf20:	ldr	x0, [sp, #296]
    bf24:	sub	x0, x1, x0
    bf28:	str	x0, [sp, #288]
    bf2c:	ldr	x0, [sp, #304]
    bf30:	lsl	x1, x0, #32
    bf34:	ldr	x0, [sp, #280]
    bf38:	orr	x0, x1, x0
    bf3c:	str	x0, [sp, #416]
    bf40:	ldr	x0, [sp, #288]
    bf44:	str	x0, [sp, #496]
    bf48:	ldr	x0, [sp, #520]
    bf4c:	cmp	x0, #0x0
    bf50:	b.eq	c4e8 <__umodti3@@GCC_3.0+0xcc8>  // b.none
    bf54:	ldr	x0, [sp, #480]
    bf58:	mov	w1, w0
    bf5c:	ldr	x0, [sp, #496]
    bf60:	lsr	x0, x0, x1
    bf64:	str	x0, [sp, #48]
    bf68:	str	xzr, [sp, #56]
    bf6c:	ldp	x0, x1, [sp, #48]
    bf70:	ldr	x2, [sp, #520]
    bf74:	stp	x0, x1, [x2]
    bf78:	b	c4e8 <__umodti3@@GCC_3.0+0xcc8>
    bf7c:	ldr	x1, [sp, #504]
    bf80:	ldr	x0, [sp, #488]
    bf84:	cmp	x1, x0
    bf88:	b.ls	bfc0 <__umodti3@@GCC_3.0+0x7a0>  // b.plast
    bf8c:	str	xzr, [sp, #416]
    bf90:	str	xzr, [sp, #408]
    bf94:	ldr	x0, [sp, #520]
    bf98:	cmp	x0, #0x0
    bf9c:	b.eq	c4e8 <__umodti3@@GCC_3.0+0xcc8>  // b.none
    bfa0:	ldr	x0, [sp, #496]
    bfa4:	str	x0, [sp, #48]
    bfa8:	ldr	x0, [sp, #488]
    bfac:	str	x0, [sp, #56]
    bfb0:	ldp	x0, x1, [sp, #48]
    bfb4:	ldr	x2, [sp, #520]
    bfb8:	stp	x0, x1, [x2]
    bfbc:	b	c4e8 <__umodti3@@GCC_3.0+0xcc8>
    bfc0:	ldr	x0, [sp, #504]
    bfc4:	clz	x0, x0
    bfc8:	sxtw	x0, w0
    bfcc:	str	x0, [sp, #480]
    bfd0:	ldr	x0, [sp, #480]
    bfd4:	cmp	x0, #0x0
    bfd8:	b.ne	c080 <__umodti3@@GCC_3.0+0x860>  // b.any
    bfdc:	ldr	x1, [sp, #504]
    bfe0:	ldr	x0, [sp, #488]
    bfe4:	cmp	x1, x0
    bfe8:	b.cc	bffc <__umodti3@@GCC_3.0+0x7dc>  // b.lo, b.ul, b.last
    bfec:	ldr	x1, [sp, #512]
    bff0:	ldr	x0, [sp, #496]
    bff4:	cmp	x1, x0
    bff8:	b.hi	c04c <__umodti3@@GCC_3.0+0x82c>  // b.pmore
    bffc:	mov	x0, #0x1                   	// #1
    c000:	str	x0, [sp, #416]
    c004:	ldr	x1, [sp, #496]
    c008:	ldr	x0, [sp, #512]
    c00c:	sub	x0, x1, x0
    c010:	str	x0, [sp, #272]
    c014:	ldr	x1, [sp, #488]
    c018:	ldr	x0, [sp, #504]
    c01c:	sub	x1, x1, x0
    c020:	ldr	x2, [sp, #496]
    c024:	ldr	x0, [sp, #272]
    c028:	cmp	x2, x0
    c02c:	cset	w0, cc  // cc = lo, ul, last
    c030:	and	w0, w0, #0xff
    c034:	and	x0, x0, #0xff
    c038:	sub	x0, x1, x0
    c03c:	str	x0, [sp, #488]
    c040:	ldr	x0, [sp, #272]
    c044:	str	x0, [sp, #496]
    c048:	b	c050 <__umodti3@@GCC_3.0+0x830>
    c04c:	str	xzr, [sp, #416]
    c050:	str	xzr, [sp, #408]
    c054:	ldr	x0, [sp, #520]
    c058:	cmp	x0, #0x0
    c05c:	b.eq	c4e8 <__umodti3@@GCC_3.0+0xcc8>  // b.none
    c060:	ldr	x0, [sp, #496]
    c064:	str	x0, [sp, #48]
    c068:	ldr	x0, [sp, #488]
    c06c:	str	x0, [sp, #56]
    c070:	ldp	x0, x1, [sp, #48]
    c074:	ldr	x2, [sp, #520]
    c078:	stp	x0, x1, [x2]
    c07c:	b	c4e8 <__umodti3@@GCC_3.0+0xcc8>
    c080:	mov	x1, #0x40                  	// #64
    c084:	ldr	x0, [sp, #480]
    c088:	sub	x0, x1, x0
    c08c:	str	x0, [sp, #400]
    c090:	ldr	x0, [sp, #480]
    c094:	mov	w1, w0
    c098:	ldr	x0, [sp, #504]
    c09c:	lsl	x1, x0, x1
    c0a0:	ldr	x0, [sp, #400]
    c0a4:	mov	w2, w0
    c0a8:	ldr	x0, [sp, #512]
    c0ac:	lsr	x0, x0, x2
    c0b0:	orr	x0, x1, x0
    c0b4:	str	x0, [sp, #504]
    c0b8:	ldr	x0, [sp, #480]
    c0bc:	mov	w1, w0
    c0c0:	ldr	x0, [sp, #512]
    c0c4:	lsl	x0, x0, x1
    c0c8:	str	x0, [sp, #512]
    c0cc:	ldr	x0, [sp, #400]
    c0d0:	mov	w1, w0
    c0d4:	ldr	x0, [sp, #488]
    c0d8:	lsr	x0, x0, x1
    c0dc:	str	x0, [sp, #392]
    c0e0:	ldr	x0, [sp, #480]
    c0e4:	mov	w1, w0
    c0e8:	ldr	x0, [sp, #488]
    c0ec:	lsl	x1, x0, x1
    c0f0:	ldr	x0, [sp, #400]
    c0f4:	mov	w2, w0
    c0f8:	ldr	x0, [sp, #496]
    c0fc:	lsr	x0, x0, x2
    c100:	orr	x0, x1, x0
    c104:	str	x0, [sp, #488]
    c108:	ldr	x0, [sp, #480]
    c10c:	mov	w1, w0
    c110:	ldr	x0, [sp, #496]
    c114:	lsl	x0, x0, x1
    c118:	str	x0, [sp, #496]
    c11c:	ldr	x0, [sp, #504]
    c120:	lsr	x0, x0, #32
    c124:	str	x0, [sp, #264]
    c128:	ldr	x0, [sp, #504]
    c12c:	and	x0, x0, #0xffffffff
    c130:	str	x0, [sp, #256]
    c134:	ldr	x0, [sp, #392]
    c138:	ldr	x1, [sp, #264]
    c13c:	udiv	x2, x0, x1
    c140:	ldr	x1, [sp, #264]
    c144:	mul	x1, x2, x1
    c148:	sub	x0, x0, x1
    c14c:	str	x0, [sp, #248]
    c150:	ldr	x1, [sp, #392]
    c154:	ldr	x0, [sp, #264]
    c158:	udiv	x0, x1, x0
    c15c:	str	x0, [sp, #240]
    c160:	ldr	x1, [sp, #256]
    c164:	ldr	x0, [sp, #240]
    c168:	mul	x0, x1, x0
    c16c:	str	x0, [sp, #232]
    c170:	ldr	x0, [sp, #248]
    c174:	lsl	x1, x0, #32
    c178:	ldr	x0, [sp, #488]
    c17c:	lsr	x0, x0, #32
    c180:	orr	x0, x1, x0
    c184:	str	x0, [sp, #248]
    c188:	ldr	x1, [sp, #232]
    c18c:	ldr	x0, [sp, #248]
    c190:	cmp	x1, x0
    c194:	b.ls	c1f0 <__umodti3@@GCC_3.0+0x9d0>  // b.plast
    c198:	ldr	x0, [sp, #240]
    c19c:	sub	x0, x0, #0x1
    c1a0:	str	x0, [sp, #240]
    c1a4:	ldr	x1, [sp, #248]
    c1a8:	ldr	x0, [sp, #504]
    c1ac:	add	x0, x1, x0
    c1b0:	str	x0, [sp, #248]
    c1b4:	ldr	x1, [sp, #504]
    c1b8:	ldr	x0, [sp, #248]
    c1bc:	cmp	x1, x0
    c1c0:	b.hi	c1f0 <__umodti3@@GCC_3.0+0x9d0>  // b.pmore
    c1c4:	ldr	x1, [sp, #232]
    c1c8:	ldr	x0, [sp, #248]
    c1cc:	cmp	x1, x0
    c1d0:	b.ls	c1f0 <__umodti3@@GCC_3.0+0x9d0>  // b.plast
    c1d4:	ldr	x0, [sp, #240]
    c1d8:	sub	x0, x0, #0x1
    c1dc:	str	x0, [sp, #240]
    c1e0:	ldr	x1, [sp, #248]
    c1e4:	ldr	x0, [sp, #504]
    c1e8:	add	x0, x1, x0
    c1ec:	str	x0, [sp, #248]
    c1f0:	ldr	x1, [sp, #248]
    c1f4:	ldr	x0, [sp, #232]
    c1f8:	sub	x0, x1, x0
    c1fc:	str	x0, [sp, #248]
    c200:	ldr	x0, [sp, #248]
    c204:	ldr	x1, [sp, #264]
    c208:	udiv	x2, x0, x1
    c20c:	ldr	x1, [sp, #264]
    c210:	mul	x1, x2, x1
    c214:	sub	x0, x0, x1
    c218:	str	x0, [sp, #224]
    c21c:	ldr	x1, [sp, #248]
    c220:	ldr	x0, [sp, #264]
    c224:	udiv	x0, x1, x0
    c228:	str	x0, [sp, #216]
    c22c:	ldr	x1, [sp, #256]
    c230:	ldr	x0, [sp, #216]
    c234:	mul	x0, x1, x0
    c238:	str	x0, [sp, #232]
    c23c:	ldr	x0, [sp, #224]
    c240:	lsl	x1, x0, #32
    c244:	ldr	x0, [sp, #488]
    c248:	and	x0, x0, #0xffffffff
    c24c:	orr	x0, x1, x0
    c250:	str	x0, [sp, #224]
    c254:	ldr	x1, [sp, #232]
    c258:	ldr	x0, [sp, #224]
    c25c:	cmp	x1, x0
    c260:	b.ls	c2bc <__umodti3@@GCC_3.0+0xa9c>  // b.plast
    c264:	ldr	x0, [sp, #216]
    c268:	sub	x0, x0, #0x1
    c26c:	str	x0, [sp, #216]
    c270:	ldr	x1, [sp, #224]
    c274:	ldr	x0, [sp, #504]
    c278:	add	x0, x1, x0
    c27c:	str	x0, [sp, #224]
    c280:	ldr	x1, [sp, #504]
    c284:	ldr	x0, [sp, #224]
    c288:	cmp	x1, x0
    c28c:	b.hi	c2bc <__umodti3@@GCC_3.0+0xa9c>  // b.pmore
    c290:	ldr	x1, [sp, #232]
    c294:	ldr	x0, [sp, #224]
    c298:	cmp	x1, x0
    c29c:	b.ls	c2bc <__umodti3@@GCC_3.0+0xa9c>  // b.plast
    c2a0:	ldr	x0, [sp, #216]
    c2a4:	sub	x0, x0, #0x1
    c2a8:	str	x0, [sp, #216]
    c2ac:	ldr	x1, [sp, #224]
    c2b0:	ldr	x0, [sp, #504]
    c2b4:	add	x0, x1, x0
    c2b8:	str	x0, [sp, #224]
    c2bc:	ldr	x1, [sp, #224]
    c2c0:	ldr	x0, [sp, #232]
    c2c4:	sub	x0, x1, x0
    c2c8:	str	x0, [sp, #224]
    c2cc:	ldr	x0, [sp, #240]
    c2d0:	lsl	x1, x0, #32
    c2d4:	ldr	x0, [sp, #216]
    c2d8:	orr	x0, x1, x0
    c2dc:	str	x0, [sp, #416]
    c2e0:	ldr	x0, [sp, #224]
    c2e4:	str	x0, [sp, #488]
    c2e8:	ldr	x0, [sp, #416]
    c2ec:	and	x0, x0, #0xffffffff
    c2f0:	str	x0, [sp, #208]
    c2f4:	ldr	x0, [sp, #416]
    c2f8:	lsr	x0, x0, #32
    c2fc:	str	x0, [sp, #200]
    c300:	ldr	x0, [sp, #512]
    c304:	and	x0, x0, #0xffffffff
    c308:	str	x0, [sp, #192]
    c30c:	ldr	x0, [sp, #512]
    c310:	lsr	x0, x0, #32
    c314:	str	x0, [sp, #184]
    c318:	ldr	x1, [sp, #208]
    c31c:	ldr	x0, [sp, #192]
    c320:	mul	x0, x1, x0
    c324:	str	x0, [sp, #176]
    c328:	ldr	x1, [sp, #208]
    c32c:	ldr	x0, [sp, #184]
    c330:	mul	x0, x1, x0
    c334:	str	x0, [sp, #168]
    c338:	ldr	x1, [sp, #200]
    c33c:	ldr	x0, [sp, #192]
    c340:	mul	x0, x1, x0
    c344:	str	x0, [sp, #160]
    c348:	ldr	x1, [sp, #200]
    c34c:	ldr	x0, [sp, #184]
    c350:	mul	x0, x1, x0
    c354:	str	x0, [sp, #152]
    c358:	ldr	x0, [sp, #176]
    c35c:	lsr	x0, x0, #32
    c360:	ldr	x1, [sp, #168]
    c364:	add	x0, x1, x0
    c368:	str	x0, [sp, #168]
    c36c:	ldr	x1, [sp, #168]
    c370:	ldr	x0, [sp, #160]
    c374:	add	x0, x1, x0
    c378:	str	x0, [sp, #168]
    c37c:	ldr	x1, [sp, #160]
    c380:	ldr	x0, [sp, #168]
    c384:	cmp	x1, x0
    c388:	b.ls	c39c <__umodti3@@GCC_3.0+0xb7c>  // b.plast
    c38c:	ldr	x1, [sp, #152]
    c390:	mov	x0, #0x100000000           	// #4294967296
    c394:	add	x0, x1, x0
    c398:	str	x0, [sp, #152]
    c39c:	ldr	x0, [sp, #168]
    c3a0:	lsr	x1, x0, #32
    c3a4:	ldr	x0, [sp, #152]
    c3a8:	add	x0, x1, x0
    c3ac:	str	x0, [sp, #144]
    c3b0:	ldr	x0, [sp, #168]
    c3b4:	and	x0, x0, #0xffffffff
    c3b8:	lsl	x1, x0, #32
    c3bc:	ldr	x0, [sp, #176]
    c3c0:	and	x0, x0, #0xffffffff
    c3c4:	add	x0, x1, x0
    c3c8:	str	x0, [sp, #136]
    c3cc:	ldr	x1, [sp, #488]
    c3d0:	ldr	x0, [sp, #144]
    c3d4:	cmp	x1, x0
    c3d8:	b.cc	c3fc <__umodti3@@GCC_3.0+0xbdc>  // b.lo, b.ul, b.last
    c3dc:	ldr	x1, [sp, #488]
    c3e0:	ldr	x0, [sp, #144]
    c3e4:	cmp	x1, x0
    c3e8:	b.ne	c44c <__umodti3@@GCC_3.0+0xc2c>  // b.any
    c3ec:	ldr	x1, [sp, #496]
    c3f0:	ldr	x0, [sp, #136]
    c3f4:	cmp	x1, x0
    c3f8:	b.cs	c44c <__umodti3@@GCC_3.0+0xc2c>  // b.hs, b.nlast
    c3fc:	ldr	x0, [sp, #416]
    c400:	sub	x0, x0, #0x1
    c404:	str	x0, [sp, #416]
    c408:	ldr	x1, [sp, #136]
    c40c:	ldr	x0, [sp, #512]
    c410:	sub	x0, x1, x0
    c414:	str	x0, [sp, #128]
    c418:	ldr	x1, [sp, #144]
    c41c:	ldr	x0, [sp, #504]
    c420:	sub	x1, x1, x0
    c424:	ldr	x2, [sp, #136]
    c428:	ldr	x0, [sp, #128]
    c42c:	cmp	x2, x0
    c430:	cset	w0, cc  // cc = lo, ul, last
    c434:	and	w0, w0, #0xff
    c438:	and	x0, x0, #0xff
    c43c:	sub	x0, x1, x0
    c440:	str	x0, [sp, #144]
    c444:	ldr	x0, [sp, #128]
    c448:	str	x0, [sp, #136]
    c44c:	str	xzr, [sp, #408]
    c450:	ldr	x0, [sp, #520]
    c454:	cmp	x0, #0x0
    c458:	b.eq	c4e8 <__umodti3@@GCC_3.0+0xcc8>  // b.none
    c45c:	ldr	x1, [sp, #496]
    c460:	ldr	x0, [sp, #136]
    c464:	sub	x0, x1, x0
    c468:	str	x0, [sp, #120]
    c46c:	ldr	x1, [sp, #488]
    c470:	ldr	x0, [sp, #144]
    c474:	sub	x1, x1, x0
    c478:	ldr	x2, [sp, #496]
    c47c:	ldr	x0, [sp, #120]
    c480:	cmp	x2, x0
    c484:	cset	w0, cc  // cc = lo, ul, last
    c488:	and	w0, w0, #0xff
    c48c:	and	x0, x0, #0xff
    c490:	sub	x0, x1, x0
    c494:	str	x0, [sp, #488]
    c498:	ldr	x0, [sp, #120]
    c49c:	str	x0, [sp, #496]
    c4a0:	ldr	x0, [sp, #400]
    c4a4:	mov	w1, w0
    c4a8:	ldr	x0, [sp, #488]
    c4ac:	lsl	x1, x0, x1
    c4b0:	ldr	x0, [sp, #480]
    c4b4:	mov	w2, w0
    c4b8:	ldr	x0, [sp, #496]
    c4bc:	lsr	x0, x0, x2
    c4c0:	orr	x0, x1, x0
    c4c4:	str	x0, [sp, #48]
    c4c8:	ldr	x0, [sp, #480]
    c4cc:	mov	w1, w0
    c4d0:	ldr	x0, [sp, #488]
    c4d4:	lsr	x0, x0, x1
    c4d8:	str	x0, [sp, #56]
    c4dc:	ldp	x0, x1, [sp, #48]
    c4e0:	ldr	x2, [sp, #520]
    c4e4:	stp	x0, x1, [x2]
    c4e8:	ldr	x0, [sp, #416]
    c4ec:	str	x0, [sp, #32]
    c4f0:	ldr	x0, [sp, #408]
    c4f4:	str	x0, [sp, #40]
    c4f8:	ldp	x0, x1, [sp, #96]
    c4fc:	add	sp, sp, #0x230
    c500:	ret

000000000000c504 <__udivmodti4@@GCC_3.0>:
    c504:	sub	sp, sp, #0x200
    c508:	stp	x0, x1, [sp, #32]
    c50c:	stp	x2, x3, [sp, #16]
    c510:	str	x4, [sp, #8]
    c514:	ldp	x0, x1, [sp, #32]
    c518:	stp	x0, x1, [sp, #96]
    c51c:	ldp	x0, x1, [sp, #16]
    c520:	stp	x0, x1, [sp, #80]
    c524:	ldr	x0, [sp, #80]
    c528:	str	x0, [sp, #504]
    c52c:	ldr	x0, [sp, #88]
    c530:	str	x0, [sp, #304]
    c534:	ldr	x0, [sp, #96]
    c538:	str	x0, [sp, #496]
    c53c:	ldr	x0, [sp, #104]
    c540:	str	x0, [sp, #488]
    c544:	ldr	x0, [sp, #304]
    c548:	cmp	x0, #0x0
    c54c:	b.ne	cc3c <__udivmodti4@@GCC_3.0+0x738>  // b.any
    c550:	ldr	x1, [sp, #504]
    c554:	ldr	x0, [sp, #488]
    c558:	cmp	x1, x0
    c55c:	b.ls	c7a8 <__udivmodti4@@GCC_3.0+0x2a4>  // b.plast
    c560:	ldr	x0, [sp, #504]
    c564:	clz	x0, x0
    c568:	sxtw	x0, w0
    c56c:	str	x0, [sp, #464]
    c570:	ldr	x0, [sp, #464]
    c574:	cmp	x0, #0x0
    c578:	b.eq	c5d4 <__udivmodti4@@GCC_3.0+0xd0>  // b.none
    c57c:	ldr	x0, [sp, #464]
    c580:	mov	w1, w0
    c584:	ldr	x0, [sp, #504]
    c588:	lsl	x0, x0, x1
    c58c:	str	x0, [sp, #504]
    c590:	ldr	x0, [sp, #464]
    c594:	mov	w1, w0
    c598:	ldr	x0, [sp, #488]
    c59c:	lsl	x1, x0, x1
    c5a0:	ldr	x0, [sp, #464]
    c5a4:	mov	w2, w0
    c5a8:	mov	w0, #0x40                  	// #64
    c5ac:	sub	w0, w0, w2
    c5b0:	ldr	x2, [sp, #496]
    c5b4:	lsr	x0, x2, x0
    c5b8:	orr	x0, x1, x0
    c5bc:	str	x0, [sp, #488]
    c5c0:	ldr	x0, [sp, #464]
    c5c4:	mov	w1, w0
    c5c8:	ldr	x0, [sp, #496]
    c5cc:	lsl	x0, x0, x1
    c5d0:	str	x0, [sp, #496]
    c5d4:	ldr	x0, [sp, #504]
    c5d8:	lsr	x0, x0, #32
    c5dc:	str	x0, [sp, #128]
    c5e0:	ldr	x0, [sp, #504]
    c5e4:	and	x0, x0, #0xffffffff
    c5e8:	str	x0, [sp, #120]
    c5ec:	ldr	x0, [sp, #488]
    c5f0:	ldr	x1, [sp, #128]
    c5f4:	udiv	x2, x0, x1
    c5f8:	ldr	x1, [sp, #128]
    c5fc:	mul	x1, x2, x1
    c600:	sub	x0, x0, x1
    c604:	str	x0, [sp, #440]
    c608:	ldr	x1, [sp, #488]
    c60c:	ldr	x0, [sp, #128]
    c610:	udiv	x0, x1, x0
    c614:	str	x0, [sp, #456]
    c618:	ldr	x1, [sp, #456]
    c61c:	ldr	x0, [sp, #120]
    c620:	mul	x0, x1, x0
    c624:	str	x0, [sp, #112]
    c628:	ldr	x0, [sp, #440]
    c62c:	lsl	x1, x0, #32
    c630:	ldr	x0, [sp, #496]
    c634:	lsr	x0, x0, #32
    c638:	orr	x0, x1, x0
    c63c:	str	x0, [sp, #440]
    c640:	ldr	x1, [sp, #440]
    c644:	ldr	x0, [sp, #112]
    c648:	cmp	x1, x0
    c64c:	b.cs	c6a8 <__udivmodti4@@GCC_3.0+0x1a4>  // b.hs, b.nlast
    c650:	ldr	x0, [sp, #456]
    c654:	sub	x0, x0, #0x1
    c658:	str	x0, [sp, #456]
    c65c:	ldr	x1, [sp, #440]
    c660:	ldr	x0, [sp, #504]
    c664:	add	x0, x1, x0
    c668:	str	x0, [sp, #440]
    c66c:	ldr	x1, [sp, #440]
    c670:	ldr	x0, [sp, #504]
    c674:	cmp	x1, x0
    c678:	b.cc	c6a8 <__udivmodti4@@GCC_3.0+0x1a4>  // b.lo, b.ul, b.last
    c67c:	ldr	x1, [sp, #440]
    c680:	ldr	x0, [sp, #112]
    c684:	cmp	x1, x0
    c688:	b.cs	c6a8 <__udivmodti4@@GCC_3.0+0x1a4>  // b.hs, b.nlast
    c68c:	ldr	x0, [sp, #456]
    c690:	sub	x0, x0, #0x1
    c694:	str	x0, [sp, #456]
    c698:	ldr	x1, [sp, #440]
    c69c:	ldr	x0, [sp, #504]
    c6a0:	add	x0, x1, x0
    c6a4:	str	x0, [sp, #440]
    c6a8:	ldr	x1, [sp, #440]
    c6ac:	ldr	x0, [sp, #112]
    c6b0:	sub	x0, x1, x0
    c6b4:	str	x0, [sp, #440]
    c6b8:	ldr	x0, [sp, #440]
    c6bc:	ldr	x1, [sp, #128]
    c6c0:	udiv	x2, x0, x1
    c6c4:	ldr	x1, [sp, #128]
    c6c8:	mul	x1, x2, x1
    c6cc:	sub	x0, x0, x1
    c6d0:	str	x0, [sp, #432]
    c6d4:	ldr	x1, [sp, #440]
    c6d8:	ldr	x0, [sp, #128]
    c6dc:	udiv	x0, x1, x0
    c6e0:	str	x0, [sp, #448]
    c6e4:	ldr	x1, [sp, #448]
    c6e8:	ldr	x0, [sp, #120]
    c6ec:	mul	x0, x1, x0
    c6f0:	str	x0, [sp, #112]
    c6f4:	ldr	x0, [sp, #432]
    c6f8:	lsl	x1, x0, #32
    c6fc:	ldr	x0, [sp, #496]
    c700:	and	x0, x0, #0xffffffff
    c704:	orr	x0, x1, x0
    c708:	str	x0, [sp, #432]
    c70c:	ldr	x1, [sp, #432]
    c710:	ldr	x0, [sp, #112]
    c714:	cmp	x1, x0
    c718:	b.cs	c774 <__udivmodti4@@GCC_3.0+0x270>  // b.hs, b.nlast
    c71c:	ldr	x0, [sp, #448]
    c720:	sub	x0, x0, #0x1
    c724:	str	x0, [sp, #448]
    c728:	ldr	x1, [sp, #432]
    c72c:	ldr	x0, [sp, #504]
    c730:	add	x0, x1, x0
    c734:	str	x0, [sp, #432]
    c738:	ldr	x1, [sp, #432]
    c73c:	ldr	x0, [sp, #504]
    c740:	cmp	x1, x0
    c744:	b.cc	c774 <__udivmodti4@@GCC_3.0+0x270>  // b.lo, b.ul, b.last
    c748:	ldr	x1, [sp, #432]
    c74c:	ldr	x0, [sp, #112]
    c750:	cmp	x1, x0
    c754:	b.cs	c774 <__udivmodti4@@GCC_3.0+0x270>  // b.hs, b.nlast
    c758:	ldr	x0, [sp, #448]
    c75c:	sub	x0, x0, #0x1
    c760:	str	x0, [sp, #448]
    c764:	ldr	x1, [sp, #432]
    c768:	ldr	x0, [sp, #504]
    c76c:	add	x0, x1, x0
    c770:	str	x0, [sp, #432]
    c774:	ldr	x1, [sp, #432]
    c778:	ldr	x0, [sp, #112]
    c77c:	sub	x0, x1, x0
    c780:	str	x0, [sp, #432]
    c784:	ldr	x0, [sp, #456]
    c788:	lsl	x0, x0, #32
    c78c:	ldr	x1, [sp, #448]
    c790:	orr	x0, x1, x0
    c794:	str	x0, [sp, #480]
    c798:	ldr	x0, [sp, #432]
    c79c:	str	x0, [sp, #496]
    c7a0:	str	xzr, [sp, #472]
    c7a4:	b	cc08 <__udivmodti4@@GCC_3.0+0x704>
    c7a8:	ldr	x0, [sp, #504]
    c7ac:	cmp	x0, #0x0
    c7b0:	b.ne	c7c4 <__udivmodti4@@GCC_3.0+0x2c0>  // b.any
    c7b4:	mov	x1, #0x1                   	// #1
    c7b8:	ldr	x0, [sp, #504]
    c7bc:	udiv	x0, x1, x0
    c7c0:	str	x0, [sp, #504]
    c7c4:	ldr	x0, [sp, #504]
    c7c8:	clz	x0, x0
    c7cc:	sxtw	x0, w0
    c7d0:	str	x0, [sp, #464]
    c7d4:	ldr	x0, [sp, #464]
    c7d8:	cmp	x0, #0x0
    c7dc:	b.ne	c7fc <__udivmodti4@@GCC_3.0+0x2f8>  // b.any
    c7e0:	ldr	x1, [sp, #488]
    c7e4:	ldr	x0, [sp, #504]
    c7e8:	sub	x0, x1, x0
    c7ec:	str	x0, [sp, #488]
    c7f0:	mov	x0, #0x1                   	// #1
    c7f4:	str	x0, [sp, #472]
    c7f8:	b	ca3c <__udivmodti4@@GCC_3.0+0x538>
    c7fc:	mov	x1, #0x40                  	// #64
    c800:	ldr	x0, [sp, #464]
    c804:	sub	x0, x1, x0
    c808:	str	x0, [sp, #296]
    c80c:	ldr	x0, [sp, #464]
    c810:	mov	w1, w0
    c814:	ldr	x0, [sp, #504]
    c818:	lsl	x0, x0, x1
    c81c:	str	x0, [sp, #504]
    c820:	ldr	x0, [sp, #296]
    c824:	mov	w1, w0
    c828:	ldr	x0, [sp, #488]
    c82c:	lsr	x0, x0, x1
    c830:	str	x0, [sp, #288]
    c834:	ldr	x0, [sp, #464]
    c838:	mov	w1, w0
    c83c:	ldr	x0, [sp, #488]
    c840:	lsl	x1, x0, x1
    c844:	ldr	x0, [sp, #296]
    c848:	mov	w2, w0
    c84c:	ldr	x0, [sp, #496]
    c850:	lsr	x0, x0, x2
    c854:	orr	x0, x1, x0
    c858:	str	x0, [sp, #488]
    c85c:	ldr	x0, [sp, #464]
    c860:	mov	w1, w0
    c864:	ldr	x0, [sp, #496]
    c868:	lsl	x0, x0, x1
    c86c:	str	x0, [sp, #496]
    c870:	ldr	x0, [sp, #504]
    c874:	lsr	x0, x0, #32
    c878:	str	x0, [sp, #176]
    c87c:	ldr	x0, [sp, #504]
    c880:	and	x0, x0, #0xffffffff
    c884:	str	x0, [sp, #168]
    c888:	ldr	x0, [sp, #288]
    c88c:	ldr	x1, [sp, #176]
    c890:	udiv	x2, x0, x1
    c894:	ldr	x1, [sp, #176]
    c898:	mul	x1, x2, x1
    c89c:	sub	x0, x0, x1
    c8a0:	str	x0, [sp, #408]
    c8a4:	ldr	x1, [sp, #288]
    c8a8:	ldr	x0, [sp, #176]
    c8ac:	udiv	x0, x1, x0
    c8b0:	str	x0, [sp, #424]
    c8b4:	ldr	x1, [sp, #424]
    c8b8:	ldr	x0, [sp, #168]
    c8bc:	mul	x0, x1, x0
    c8c0:	str	x0, [sp, #160]
    c8c4:	ldr	x0, [sp, #408]
    c8c8:	lsl	x1, x0, #32
    c8cc:	ldr	x0, [sp, #488]
    c8d0:	lsr	x0, x0, #32
    c8d4:	orr	x0, x1, x0
    c8d8:	str	x0, [sp, #408]
    c8dc:	ldr	x1, [sp, #408]
    c8e0:	ldr	x0, [sp, #160]
    c8e4:	cmp	x1, x0
    c8e8:	b.cs	c944 <__udivmodti4@@GCC_3.0+0x440>  // b.hs, b.nlast
    c8ec:	ldr	x0, [sp, #424]
    c8f0:	sub	x0, x0, #0x1
    c8f4:	str	x0, [sp, #424]
    c8f8:	ldr	x1, [sp, #408]
    c8fc:	ldr	x0, [sp, #504]
    c900:	add	x0, x1, x0
    c904:	str	x0, [sp, #408]
    c908:	ldr	x1, [sp, #408]
    c90c:	ldr	x0, [sp, #504]
    c910:	cmp	x1, x0
    c914:	b.cc	c944 <__udivmodti4@@GCC_3.0+0x440>  // b.lo, b.ul, b.last
    c918:	ldr	x1, [sp, #408]
    c91c:	ldr	x0, [sp, #160]
    c920:	cmp	x1, x0
    c924:	b.cs	c944 <__udivmodti4@@GCC_3.0+0x440>  // b.hs, b.nlast
    c928:	ldr	x0, [sp, #424]
    c92c:	sub	x0, x0, #0x1
    c930:	str	x0, [sp, #424]
    c934:	ldr	x1, [sp, #408]
    c938:	ldr	x0, [sp, #504]
    c93c:	add	x0, x1, x0
    c940:	str	x0, [sp, #408]
    c944:	ldr	x1, [sp, #408]
    c948:	ldr	x0, [sp, #160]
    c94c:	sub	x0, x1, x0
    c950:	str	x0, [sp, #408]
    c954:	ldr	x0, [sp, #408]
    c958:	ldr	x1, [sp, #176]
    c95c:	udiv	x2, x0, x1
    c960:	ldr	x1, [sp, #176]
    c964:	mul	x1, x2, x1
    c968:	sub	x0, x0, x1
    c96c:	str	x0, [sp, #400]
    c970:	ldr	x1, [sp, #408]
    c974:	ldr	x0, [sp, #176]
    c978:	udiv	x0, x1, x0
    c97c:	str	x0, [sp, #416]
    c980:	ldr	x1, [sp, #416]
    c984:	ldr	x0, [sp, #168]
    c988:	mul	x0, x1, x0
    c98c:	str	x0, [sp, #160]
    c990:	ldr	x0, [sp, #400]
    c994:	lsl	x1, x0, #32
    c998:	ldr	x0, [sp, #488]
    c99c:	and	x0, x0, #0xffffffff
    c9a0:	orr	x0, x1, x0
    c9a4:	str	x0, [sp, #400]
    c9a8:	ldr	x1, [sp, #400]
    c9ac:	ldr	x0, [sp, #160]
    c9b0:	cmp	x1, x0
    c9b4:	b.cs	ca10 <__udivmodti4@@GCC_3.0+0x50c>  // b.hs, b.nlast
    c9b8:	ldr	x0, [sp, #416]
    c9bc:	sub	x0, x0, #0x1
    c9c0:	str	x0, [sp, #416]
    c9c4:	ldr	x1, [sp, #400]
    c9c8:	ldr	x0, [sp, #504]
    c9cc:	add	x0, x1, x0
    c9d0:	str	x0, [sp, #400]
    c9d4:	ldr	x1, [sp, #400]
    c9d8:	ldr	x0, [sp, #504]
    c9dc:	cmp	x1, x0
    c9e0:	b.cc	ca10 <__udivmodti4@@GCC_3.0+0x50c>  // b.lo, b.ul, b.last
    c9e4:	ldr	x1, [sp, #400]
    c9e8:	ldr	x0, [sp, #160]
    c9ec:	cmp	x1, x0
    c9f0:	b.cs	ca10 <__udivmodti4@@GCC_3.0+0x50c>  // b.hs, b.nlast
    c9f4:	ldr	x0, [sp, #416]
    c9f8:	sub	x0, x0, #0x1
    c9fc:	str	x0, [sp, #416]
    ca00:	ldr	x1, [sp, #400]
    ca04:	ldr	x0, [sp, #504]
    ca08:	add	x0, x1, x0
    ca0c:	str	x0, [sp, #400]
    ca10:	ldr	x1, [sp, #400]
    ca14:	ldr	x0, [sp, #160]
    ca18:	sub	x0, x1, x0
    ca1c:	str	x0, [sp, #400]
    ca20:	ldr	x0, [sp, #424]
    ca24:	lsl	x0, x0, #32
    ca28:	ldr	x1, [sp, #416]
    ca2c:	orr	x0, x1, x0
    ca30:	str	x0, [sp, #472]
    ca34:	ldr	x0, [sp, #400]
    ca38:	str	x0, [sp, #488]
    ca3c:	ldr	x0, [sp, #504]
    ca40:	lsr	x0, x0, #32
    ca44:	str	x0, [sp, #152]
    ca48:	ldr	x0, [sp, #504]
    ca4c:	and	x0, x0, #0xffffffff
    ca50:	str	x0, [sp, #144]
    ca54:	ldr	x0, [sp, #488]
    ca58:	ldr	x1, [sp, #152]
    ca5c:	udiv	x2, x0, x1
    ca60:	ldr	x1, [sp, #152]
    ca64:	mul	x1, x2, x1
    ca68:	sub	x0, x0, x1
    ca6c:	str	x0, [sp, #376]
    ca70:	ldr	x1, [sp, #488]
    ca74:	ldr	x0, [sp, #152]
    ca78:	udiv	x0, x1, x0
    ca7c:	str	x0, [sp, #392]
    ca80:	ldr	x1, [sp, #392]
    ca84:	ldr	x0, [sp, #144]
    ca88:	mul	x0, x1, x0
    ca8c:	str	x0, [sp, #136]
    ca90:	ldr	x0, [sp, #376]
    ca94:	lsl	x1, x0, #32
    ca98:	ldr	x0, [sp, #496]
    ca9c:	lsr	x0, x0, #32
    caa0:	orr	x0, x1, x0
    caa4:	str	x0, [sp, #376]
    caa8:	ldr	x1, [sp, #376]
    caac:	ldr	x0, [sp, #136]
    cab0:	cmp	x1, x0
    cab4:	b.cs	cb10 <__udivmodti4@@GCC_3.0+0x60c>  // b.hs, b.nlast
    cab8:	ldr	x0, [sp, #392]
    cabc:	sub	x0, x0, #0x1
    cac0:	str	x0, [sp, #392]
    cac4:	ldr	x1, [sp, #376]
    cac8:	ldr	x0, [sp, #504]
    cacc:	add	x0, x1, x0
    cad0:	str	x0, [sp, #376]
    cad4:	ldr	x1, [sp, #376]
    cad8:	ldr	x0, [sp, #504]
    cadc:	cmp	x1, x0
    cae0:	b.cc	cb10 <__udivmodti4@@GCC_3.0+0x60c>  // b.lo, b.ul, b.last
    cae4:	ldr	x1, [sp, #376]
    cae8:	ldr	x0, [sp, #136]
    caec:	cmp	x1, x0
    caf0:	b.cs	cb10 <__udivmodti4@@GCC_3.0+0x60c>  // b.hs, b.nlast
    caf4:	ldr	x0, [sp, #392]
    caf8:	sub	x0, x0, #0x1
    cafc:	str	x0, [sp, #392]
    cb00:	ldr	x1, [sp, #376]
    cb04:	ldr	x0, [sp, #504]
    cb08:	add	x0, x1, x0
    cb0c:	str	x0, [sp, #376]
    cb10:	ldr	x1, [sp, #376]
    cb14:	ldr	x0, [sp, #136]
    cb18:	sub	x0, x1, x0
    cb1c:	str	x0, [sp, #376]
    cb20:	ldr	x0, [sp, #376]
    cb24:	ldr	x1, [sp, #152]
    cb28:	udiv	x2, x0, x1
    cb2c:	ldr	x1, [sp, #152]
    cb30:	mul	x1, x2, x1
    cb34:	sub	x0, x0, x1
    cb38:	str	x0, [sp, #368]
    cb3c:	ldr	x1, [sp, #376]
    cb40:	ldr	x0, [sp, #152]
    cb44:	udiv	x0, x1, x0
    cb48:	str	x0, [sp, #384]
    cb4c:	ldr	x1, [sp, #384]
    cb50:	ldr	x0, [sp, #144]
    cb54:	mul	x0, x1, x0
    cb58:	str	x0, [sp, #136]
    cb5c:	ldr	x0, [sp, #368]
    cb60:	lsl	x1, x0, #32
    cb64:	ldr	x0, [sp, #496]
    cb68:	and	x0, x0, #0xffffffff
    cb6c:	orr	x0, x1, x0
    cb70:	str	x0, [sp, #368]
    cb74:	ldr	x1, [sp, #368]
    cb78:	ldr	x0, [sp, #136]
    cb7c:	cmp	x1, x0
    cb80:	b.cs	cbdc <__udivmodti4@@GCC_3.0+0x6d8>  // b.hs, b.nlast
    cb84:	ldr	x0, [sp, #384]
    cb88:	sub	x0, x0, #0x1
    cb8c:	str	x0, [sp, #384]
    cb90:	ldr	x1, [sp, #368]
    cb94:	ldr	x0, [sp, #504]
    cb98:	add	x0, x1, x0
    cb9c:	str	x0, [sp, #368]
    cba0:	ldr	x1, [sp, #368]
    cba4:	ldr	x0, [sp, #504]
    cba8:	cmp	x1, x0
    cbac:	b.cc	cbdc <__udivmodti4@@GCC_3.0+0x6d8>  // b.lo, b.ul, b.last
    cbb0:	ldr	x1, [sp, #368]
    cbb4:	ldr	x0, [sp, #136]
    cbb8:	cmp	x1, x0
    cbbc:	b.cs	cbdc <__udivmodti4@@GCC_3.0+0x6d8>  // b.hs, b.nlast
    cbc0:	ldr	x0, [sp, #384]
    cbc4:	sub	x0, x0, #0x1
    cbc8:	str	x0, [sp, #384]
    cbcc:	ldr	x1, [sp, #368]
    cbd0:	ldr	x0, [sp, #504]
    cbd4:	add	x0, x1, x0
    cbd8:	str	x0, [sp, #368]
    cbdc:	ldr	x1, [sp, #368]
    cbe0:	ldr	x0, [sp, #136]
    cbe4:	sub	x0, x1, x0
    cbe8:	str	x0, [sp, #368]
    cbec:	ldr	x0, [sp, #392]
    cbf0:	lsl	x0, x0, #32
    cbf4:	ldr	x1, [sp, #384]
    cbf8:	orr	x0, x1, x0
    cbfc:	str	x0, [sp, #480]
    cc00:	ldr	x0, [sp, #368]
    cc04:	str	x0, [sp, #496]
    cc08:	ldr	x0, [sp, #8]
    cc0c:	cmp	x0, #0x0
    cc10:	b.eq	d1a8 <__udivmodti4@@GCC_3.0+0xca4>  // b.none
    cc14:	ldr	x0, [sp, #464]
    cc18:	mov	w1, w0
    cc1c:	ldr	x0, [sp, #496]
    cc20:	lsr	x0, x0, x1
    cc24:	str	x0, [sp, #64]
    cc28:	str	xzr, [sp, #72]
    cc2c:	ldp	x0, x1, [sp, #64]
    cc30:	ldr	x2, [sp, #8]
    cc34:	stp	x0, x1, [x2]
    cc38:	b	d1a8 <__udivmodti4@@GCC_3.0+0xca4>
    cc3c:	ldr	x1, [sp, #304]
    cc40:	ldr	x0, [sp, #488]
    cc44:	cmp	x1, x0
    cc48:	b.ls	cc80 <__udivmodti4@@GCC_3.0+0x77c>  // b.plast
    cc4c:	str	xzr, [sp, #480]
    cc50:	str	xzr, [sp, #472]
    cc54:	ldr	x0, [sp, #8]
    cc58:	cmp	x0, #0x0
    cc5c:	b.eq	d1a8 <__udivmodti4@@GCC_3.0+0xca4>  // b.none
    cc60:	ldr	x0, [sp, #496]
    cc64:	str	x0, [sp, #64]
    cc68:	ldr	x0, [sp, #488]
    cc6c:	str	x0, [sp, #72]
    cc70:	ldp	x0, x1, [sp, #64]
    cc74:	ldr	x2, [sp, #8]
    cc78:	stp	x0, x1, [x2]
    cc7c:	b	d1a8 <__udivmodti4@@GCC_3.0+0xca4>
    cc80:	ldr	x0, [sp, #304]
    cc84:	clz	x0, x0
    cc88:	sxtw	x0, w0
    cc8c:	str	x0, [sp, #464]
    cc90:	ldr	x0, [sp, #464]
    cc94:	cmp	x0, #0x0
    cc98:	b.ne	cd40 <__udivmodti4@@GCC_3.0+0x83c>  // b.any
    cc9c:	ldr	x1, [sp, #488]
    cca0:	ldr	x0, [sp, #304]
    cca4:	cmp	x1, x0
    cca8:	b.hi	ccbc <__udivmodti4@@GCC_3.0+0x7b8>  // b.pmore
    ccac:	ldr	x1, [sp, #496]
    ccb0:	ldr	x0, [sp, #504]
    ccb4:	cmp	x1, x0
    ccb8:	b.cc	cd0c <__udivmodti4@@GCC_3.0+0x808>  // b.lo, b.ul, b.last
    ccbc:	mov	x0, #0x1                   	// #1
    ccc0:	str	x0, [sp, #480]
    ccc4:	ldr	x1, [sp, #496]
    ccc8:	ldr	x0, [sp, #504]
    cccc:	sub	x0, x1, x0
    ccd0:	str	x0, [sp, #184]
    ccd4:	ldr	x1, [sp, #488]
    ccd8:	ldr	x0, [sp, #304]
    ccdc:	sub	x1, x1, x0
    cce0:	ldr	x2, [sp, #184]
    cce4:	ldr	x0, [sp, #496]
    cce8:	cmp	x2, x0
    ccec:	cset	w0, hi  // hi = pmore
    ccf0:	and	w0, w0, #0xff
    ccf4:	and	x0, x0, #0xff
    ccf8:	sub	x0, x1, x0
    ccfc:	str	x0, [sp, #488]
    cd00:	ldr	x0, [sp, #184]
    cd04:	str	x0, [sp, #496]
    cd08:	b	cd10 <__udivmodti4@@GCC_3.0+0x80c>
    cd0c:	str	xzr, [sp, #480]
    cd10:	str	xzr, [sp, #472]
    cd14:	ldr	x0, [sp, #8]
    cd18:	cmp	x0, #0x0
    cd1c:	b.eq	d1a8 <__udivmodti4@@GCC_3.0+0xca4>  // b.none
    cd20:	ldr	x0, [sp, #496]
    cd24:	str	x0, [sp, #64]
    cd28:	ldr	x0, [sp, #488]
    cd2c:	str	x0, [sp, #72]
    cd30:	ldp	x0, x1, [sp, #64]
    cd34:	ldr	x2, [sp, #8]
    cd38:	stp	x0, x1, [x2]
    cd3c:	b	d1a8 <__udivmodti4@@GCC_3.0+0xca4>
    cd40:	mov	x1, #0x40                  	// #64
    cd44:	ldr	x0, [sp, #464]
    cd48:	sub	x0, x1, x0
    cd4c:	str	x0, [sp, #296]
    cd50:	ldr	x0, [sp, #464]
    cd54:	mov	w1, w0
    cd58:	ldr	x0, [sp, #304]
    cd5c:	lsl	x1, x0, x1
    cd60:	ldr	x0, [sp, #296]
    cd64:	mov	w2, w0
    cd68:	ldr	x0, [sp, #504]
    cd6c:	lsr	x0, x0, x2
    cd70:	orr	x0, x1, x0
    cd74:	str	x0, [sp, #304]
    cd78:	ldr	x0, [sp, #464]
    cd7c:	mov	w1, w0
    cd80:	ldr	x0, [sp, #504]
    cd84:	lsl	x0, x0, x1
    cd88:	str	x0, [sp, #504]
    cd8c:	ldr	x0, [sp, #296]
    cd90:	mov	w1, w0
    cd94:	ldr	x0, [sp, #488]
    cd98:	lsr	x0, x0, x1
    cd9c:	str	x0, [sp, #288]
    cda0:	ldr	x0, [sp, #464]
    cda4:	mov	w1, w0
    cda8:	ldr	x0, [sp, #488]
    cdac:	lsl	x1, x0, x1
    cdb0:	ldr	x0, [sp, #296]
    cdb4:	mov	w2, w0
    cdb8:	ldr	x0, [sp, #496]
    cdbc:	lsr	x0, x0, x2
    cdc0:	orr	x0, x1, x0
    cdc4:	str	x0, [sp, #488]
    cdc8:	ldr	x0, [sp, #464]
    cdcc:	mov	w1, w0
    cdd0:	ldr	x0, [sp, #496]
    cdd4:	lsl	x0, x0, x1
    cdd8:	str	x0, [sp, #496]
    cddc:	ldr	x0, [sp, #304]
    cde0:	lsr	x0, x0, #32
    cde4:	str	x0, [sp, #280]
    cde8:	ldr	x0, [sp, #304]
    cdec:	and	x0, x0, #0xffffffff
    cdf0:	str	x0, [sp, #272]
    cdf4:	ldr	x0, [sp, #288]
    cdf8:	ldr	x1, [sp, #280]
    cdfc:	udiv	x2, x0, x1
    ce00:	ldr	x1, [sp, #280]
    ce04:	mul	x1, x2, x1
    ce08:	sub	x0, x0, x1
    ce0c:	str	x0, [sp, #328]
    ce10:	ldr	x1, [sp, #288]
    ce14:	ldr	x0, [sp, #280]
    ce18:	udiv	x0, x1, x0
    ce1c:	str	x0, [sp, #344]
    ce20:	ldr	x1, [sp, #344]
    ce24:	ldr	x0, [sp, #272]
    ce28:	mul	x0, x1, x0
    ce2c:	str	x0, [sp, #264]
    ce30:	ldr	x0, [sp, #328]
    ce34:	lsl	x1, x0, #32
    ce38:	ldr	x0, [sp, #488]
    ce3c:	lsr	x0, x0, #32
    ce40:	orr	x0, x1, x0
    ce44:	str	x0, [sp, #328]
    ce48:	ldr	x1, [sp, #328]
    ce4c:	ldr	x0, [sp, #264]
    ce50:	cmp	x1, x0
    ce54:	b.cs	ceb0 <__udivmodti4@@GCC_3.0+0x9ac>  // b.hs, b.nlast
    ce58:	ldr	x0, [sp, #344]
    ce5c:	sub	x0, x0, #0x1
    ce60:	str	x0, [sp, #344]
    ce64:	ldr	x1, [sp, #328]
    ce68:	ldr	x0, [sp, #304]
    ce6c:	add	x0, x1, x0
    ce70:	str	x0, [sp, #328]
    ce74:	ldr	x1, [sp, #328]
    ce78:	ldr	x0, [sp, #304]
    ce7c:	cmp	x1, x0
    ce80:	b.cc	ceb0 <__udivmodti4@@GCC_3.0+0x9ac>  // b.lo, b.ul, b.last
    ce84:	ldr	x1, [sp, #328]
    ce88:	ldr	x0, [sp, #264]
    ce8c:	cmp	x1, x0
    ce90:	b.cs	ceb0 <__udivmodti4@@GCC_3.0+0x9ac>  // b.hs, b.nlast
    ce94:	ldr	x0, [sp, #344]
    ce98:	sub	x0, x0, #0x1
    ce9c:	str	x0, [sp, #344]
    cea0:	ldr	x1, [sp, #328]
    cea4:	ldr	x0, [sp, #304]
    cea8:	add	x0, x1, x0
    ceac:	str	x0, [sp, #328]
    ceb0:	ldr	x1, [sp, #328]
    ceb4:	ldr	x0, [sp, #264]
    ceb8:	sub	x0, x1, x0
    cebc:	str	x0, [sp, #328]
    cec0:	ldr	x0, [sp, #328]
    cec4:	ldr	x1, [sp, #280]
    cec8:	udiv	x2, x0, x1
    cecc:	ldr	x1, [sp, #280]
    ced0:	mul	x1, x2, x1
    ced4:	sub	x0, x0, x1
    ced8:	str	x0, [sp, #320]
    cedc:	ldr	x1, [sp, #328]
    cee0:	ldr	x0, [sp, #280]
    cee4:	udiv	x0, x1, x0
    cee8:	str	x0, [sp, #336]
    ceec:	ldr	x1, [sp, #336]
    cef0:	ldr	x0, [sp, #272]
    cef4:	mul	x0, x1, x0
    cef8:	str	x0, [sp, #264]
    cefc:	ldr	x0, [sp, #320]
    cf00:	lsl	x1, x0, #32
    cf04:	ldr	x0, [sp, #488]
    cf08:	and	x0, x0, #0xffffffff
    cf0c:	orr	x0, x1, x0
    cf10:	str	x0, [sp, #320]
    cf14:	ldr	x1, [sp, #320]
    cf18:	ldr	x0, [sp, #264]
    cf1c:	cmp	x1, x0
    cf20:	b.cs	cf7c <__udivmodti4@@GCC_3.0+0xa78>  // b.hs, b.nlast
    cf24:	ldr	x0, [sp, #336]
    cf28:	sub	x0, x0, #0x1
    cf2c:	str	x0, [sp, #336]
    cf30:	ldr	x1, [sp, #320]
    cf34:	ldr	x0, [sp, #304]
    cf38:	add	x0, x1, x0
    cf3c:	str	x0, [sp, #320]
    cf40:	ldr	x1, [sp, #320]
    cf44:	ldr	x0, [sp, #304]
    cf48:	cmp	x1, x0
    cf4c:	b.cc	cf7c <__udivmodti4@@GCC_3.0+0xa78>  // b.lo, b.ul, b.last
    cf50:	ldr	x1, [sp, #320]
    cf54:	ldr	x0, [sp, #264]
    cf58:	cmp	x1, x0
    cf5c:	b.cs	cf7c <__udivmodti4@@GCC_3.0+0xa78>  // b.hs, b.nlast
    cf60:	ldr	x0, [sp, #336]
    cf64:	sub	x0, x0, #0x1
    cf68:	str	x0, [sp, #336]
    cf6c:	ldr	x1, [sp, #320]
    cf70:	ldr	x0, [sp, #304]
    cf74:	add	x0, x1, x0
    cf78:	str	x0, [sp, #320]
    cf7c:	ldr	x1, [sp, #320]
    cf80:	ldr	x0, [sp, #264]
    cf84:	sub	x0, x1, x0
    cf88:	str	x0, [sp, #320]
    cf8c:	ldr	x0, [sp, #344]
    cf90:	lsl	x0, x0, #32
    cf94:	ldr	x1, [sp, #336]
    cf98:	orr	x0, x1, x0
    cf9c:	str	x0, [sp, #480]
    cfa0:	ldr	x0, [sp, #320]
    cfa4:	str	x0, [sp, #488]
    cfa8:	ldr	x0, [sp, #480]
    cfac:	and	x0, x0, #0xffffffff
    cfb0:	str	x0, [sp, #256]
    cfb4:	ldr	x0, [sp, #480]
    cfb8:	lsr	x0, x0, #32
    cfbc:	str	x0, [sp, #248]
    cfc0:	ldr	x0, [sp, #504]
    cfc4:	and	x0, x0, #0xffffffff
    cfc8:	str	x0, [sp, #240]
    cfcc:	ldr	x0, [sp, #504]
    cfd0:	lsr	x0, x0, #32
    cfd4:	str	x0, [sp, #232]
    cfd8:	ldr	x1, [sp, #256]
    cfdc:	ldr	x0, [sp, #240]
    cfe0:	mul	x0, x1, x0
    cfe4:	str	x0, [sp, #224]
    cfe8:	ldr	x1, [sp, #256]
    cfec:	ldr	x0, [sp, #232]
    cff0:	mul	x0, x1, x0
    cff4:	str	x0, [sp, #216]
    cff8:	ldr	x1, [sp, #248]
    cffc:	ldr	x0, [sp, #240]
    d000:	mul	x0, x1, x0
    d004:	str	x0, [sp, #208]
    d008:	ldr	x1, [sp, #248]
    d00c:	ldr	x0, [sp, #232]
    d010:	mul	x0, x1, x0
    d014:	str	x0, [sp, #312]
    d018:	ldr	x0, [sp, #224]
    d01c:	lsr	x0, x0, #32
    d020:	ldr	x1, [sp, #216]
    d024:	add	x0, x1, x0
    d028:	str	x0, [sp, #216]
    d02c:	ldr	x1, [sp, #216]
    d030:	ldr	x0, [sp, #208]
    d034:	add	x0, x1, x0
    d038:	str	x0, [sp, #216]
    d03c:	ldr	x1, [sp, #216]
    d040:	ldr	x0, [sp, #208]
    d044:	cmp	x1, x0
    d048:	b.cs	d05c <__udivmodti4@@GCC_3.0+0xb58>  // b.hs, b.nlast
    d04c:	ldr	x1, [sp, #312]
    d050:	mov	x0, #0x100000000           	// #4294967296
    d054:	add	x0, x1, x0
    d058:	str	x0, [sp, #312]
    d05c:	ldr	x0, [sp, #216]
    d060:	lsr	x0, x0, #32
    d064:	ldr	x1, [sp, #312]
    d068:	add	x0, x1, x0
    d06c:	str	x0, [sp, #360]
    d070:	ldr	x0, [sp, #216]
    d074:	and	x0, x0, #0xffffffff
    d078:	lsl	x1, x0, #32
    d07c:	ldr	x0, [sp, #224]
    d080:	and	x0, x0, #0xffffffff
    d084:	add	x0, x1, x0
    d088:	str	x0, [sp, #352]
    d08c:	ldr	x1, [sp, #360]
    d090:	ldr	x0, [sp, #488]
    d094:	cmp	x1, x0
    d098:	b.hi	d0bc <__udivmodti4@@GCC_3.0+0xbb8>  // b.pmore
    d09c:	ldr	x1, [sp, #360]
    d0a0:	ldr	x0, [sp, #488]
    d0a4:	cmp	x1, x0
    d0a8:	b.ne	d10c <__udivmodti4@@GCC_3.0+0xc08>  // b.any
    d0ac:	ldr	x1, [sp, #352]
    d0b0:	ldr	x0, [sp, #496]
    d0b4:	cmp	x1, x0
    d0b8:	b.ls	d10c <__udivmodti4@@GCC_3.0+0xc08>  // b.plast
    d0bc:	ldr	x0, [sp, #480]
    d0c0:	sub	x0, x0, #0x1
    d0c4:	str	x0, [sp, #480]
    d0c8:	ldr	x1, [sp, #352]
    d0cc:	ldr	x0, [sp, #504]
    d0d0:	sub	x0, x1, x0
    d0d4:	str	x0, [sp, #200]
    d0d8:	ldr	x1, [sp, #360]
    d0dc:	ldr	x0, [sp, #304]
    d0e0:	sub	x1, x1, x0
    d0e4:	ldr	x2, [sp, #200]
    d0e8:	ldr	x0, [sp, #352]
    d0ec:	cmp	x2, x0
    d0f0:	cset	w0, hi  // hi = pmore
    d0f4:	and	w0, w0, #0xff
    d0f8:	and	x0, x0, #0xff
    d0fc:	sub	x0, x1, x0
    d100:	str	x0, [sp, #360]
    d104:	ldr	x0, [sp, #200]
    d108:	str	x0, [sp, #352]
    d10c:	str	xzr, [sp, #472]
    d110:	ldr	x0, [sp, #8]
    d114:	cmp	x0, #0x0
    d118:	b.eq	d1a8 <__udivmodti4@@GCC_3.0+0xca4>  // b.none
    d11c:	ldr	x1, [sp, #496]
    d120:	ldr	x0, [sp, #352]
    d124:	sub	x0, x1, x0
    d128:	str	x0, [sp, #192]
    d12c:	ldr	x1, [sp, #488]
    d130:	ldr	x0, [sp, #360]
    d134:	sub	x1, x1, x0
    d138:	ldr	x2, [sp, #192]
    d13c:	ldr	x0, [sp, #496]
    d140:	cmp	x2, x0
    d144:	cset	w0, hi  // hi = pmore
    d148:	and	w0, w0, #0xff
    d14c:	and	x0, x0, #0xff
    d150:	sub	x0, x1, x0
    d154:	str	x0, [sp, #488]
    d158:	ldr	x0, [sp, #192]
    d15c:	str	x0, [sp, #496]
    d160:	ldr	x0, [sp, #296]
    d164:	mov	w1, w0
    d168:	ldr	x0, [sp, #488]
    d16c:	lsl	x1, x0, x1
    d170:	ldr	x0, [sp, #464]
    d174:	mov	w2, w0
    d178:	ldr	x0, [sp, #496]
    d17c:	lsr	x0, x0, x2
    d180:	orr	x0, x1, x0
    d184:	str	x0, [sp, #64]
    d188:	ldr	x0, [sp, #464]
    d18c:	mov	w1, w0
    d190:	ldr	x0, [sp, #488]
    d194:	lsr	x0, x0, x1
    d198:	str	x0, [sp, #72]
    d19c:	ldp	x0, x1, [sp, #64]
    d1a0:	ldr	x2, [sp, #8]
    d1a4:	stp	x0, x1, [x2]
    d1a8:	ldr	x0, [sp, #480]
    d1ac:	str	x0, [sp, #48]
    d1b0:	ldr	x0, [sp, #472]
    d1b4:	str	x0, [sp, #56]
    d1b8:	ldp	x0, x1, [sp, #48]
    d1bc:	add	sp, sp, #0x200
    d1c0:	ret
    d1c4:	sub	sp, sp, #0x20
    d1c8:	str	x0, [sp, #24]
    d1cc:	str	x1, [sp, #16]
    d1d0:	str	x2, [sp, #8]
    d1d4:	str	x3, [sp]
    d1d8:	mov	x0, #0x0                   	// #0
    d1dc:	add	sp, sp, #0x20
    d1e0:	ret
    d1e4:	sub	sp, sp, #0x20
    d1e8:	str	x0, [sp, #8]
    d1ec:	str	x1, [sp]
    d1f0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    d1f4:	add	x0, x0, #0x1d0
    d1f8:	ldr	w0, [x0]
    d1fc:	cmp	w0, #0x0
    d200:	b.ne	d214 <__udivmodti4@@GCC_3.0+0xd10>  // b.any
    d204:	mrs	x1, ctr_el0
    d208:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    d20c:	add	x0, x0, #0x1d0
    d210:	str	w1, [x0]
    d214:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    d218:	add	x0, x0, #0x1d0
    d21c:	ldr	w0, [x0]
    d220:	and	w0, w0, #0xf
    d224:	mov	w1, #0x4                   	// #4
    d228:	lsl	w0, w1, w0
    d22c:	str	w0, [sp, #20]
    d230:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
    d234:	add	x0, x0, #0x1d0
    d238:	ldr	w0, [x0]
    d23c:	lsr	w0, w0, #16
    d240:	and	w0, w0, #0xf
    d244:	mov	w1, #0x4                   	// #4
    d248:	lsl	w0, w1, w0
    d24c:	str	w0, [sp, #16]
    d250:	ldr	w0, [sp, #16]
    d254:	sub	w0, w0, #0x1
    d258:	mov	w0, w0
    d25c:	mvn	x1, x0
    d260:	ldr	x0, [sp, #8]
    d264:	and	x0, x1, x0
    d268:	str	x0, [sp, #24]
    d26c:	b	d288 <__udivmodti4@@GCC_3.0+0xd84>
    d270:	ldr	x0, [sp, #24]
    d274:	dc	cvau, x0
    d278:	ldr	w0, [sp, #16]
    d27c:	ldr	x1, [sp, #24]
    d280:	add	x0, x1, x0
    d284:	str	x0, [sp, #24]
    d288:	ldr	x1, [sp, #24]
    d28c:	ldr	x0, [sp]
    d290:	cmp	x1, x0
    d294:	b.cc	d270 <__udivmodti4@@GCC_3.0+0xd6c>  // b.lo, b.ul, b.last
    d298:	dsb	ish
    d29c:	ldr	w0, [sp, #20]
    d2a0:	sub	w0, w0, #0x1
    d2a4:	mov	w0, w0
    d2a8:	mvn	x1, x0
    d2ac:	ldr	x0, [sp, #8]
    d2b0:	and	x0, x1, x0
    d2b4:	str	x0, [sp, #24]
    d2b8:	b	d2d4 <__udivmodti4@@GCC_3.0+0xdd0>
    d2bc:	ldr	x0, [sp, #24]
    d2c0:	ic	ivau, x0
    d2c4:	ldr	w0, [sp, #20]
    d2c8:	ldr	x1, [sp, #24]
    d2cc:	add	x0, x1, x0
    d2d0:	str	x0, [sp, #24]
    d2d4:	ldr	x1, [sp, #24]
    d2d8:	ldr	x0, [sp]
    d2dc:	cmp	x1, x0
    d2e0:	b.cc	d2bc <__udivmodti4@@GCC_3.0+0xdb8>  // b.lo, b.ul, b.last
    d2e4:	dsb	ish
    d2e8:	isb
    d2ec:	nop
    d2f0:	add	sp, sp, #0x20
    d2f4:	ret
    d2f8:	sub	sp, sp, #0x30
    d2fc:	str	w0, [sp, #12]
    d300:	mov	w0, #0x7f7fffff            	// #2139095039
    d304:	fmov	s0, w0
    d308:	str	s0, [sp, #44]
    d30c:	movi	v0.2s, #0x80, lsl #16
    d310:	str	s0, [sp, #40]
    d314:	mov	w0, #0xc5ae                	// #50606
    d318:	movk	w0, #0x749d, lsl #16
    d31c:	fmov	s0, w0
    d320:	str	s0, [sp, #36]
    d324:	str	wzr, [sp, #32]
    d328:	fmov	s0, #1.000000000000000000e+00
    d32c:	str	s0, [sp, #28]
    d330:	ldr	w0, [sp, #12]
    d334:	and	w0, w0, #0x1
    d338:	cmp	w0, #0x0
    d33c:	b.eq	d350 <__udivmodti4@@GCC_3.0+0xe4c>  // b.none
    d340:	ldr	s1, [sp, #32]
    d344:	fdiv	s0, s1, s1
    d348:	mrs	x0, fpsr
    d34c:	str	w0, [sp, #24]
    d350:	ldr	w0, [sp, #12]
    d354:	and	w0, w0, #0x2
    d358:	cmp	w0, #0x0
    d35c:	b.eq	d374 <__udivmodti4@@GCC_3.0+0xe70>  // b.none
    d360:	ldr	s1, [sp, #28]
    d364:	ldr	s2, [sp, #32]
    d368:	fdiv	s0, s1, s2
    d36c:	mrs	x0, fpsr
    d370:	str	w0, [sp, #24]
    d374:	ldr	w0, [sp, #12]
    d378:	and	w0, w0, #0x4
    d37c:	cmp	w0, #0x0
    d380:	b.eq	d398 <__udivmodti4@@GCC_3.0+0xe94>  // b.none
    d384:	ldr	s1, [sp, #44]
    d388:	ldr	s2, [sp, #36]
    d38c:	fadd	s0, s1, s2
    d390:	mrs	x0, fpsr
    d394:	str	w0, [sp, #24]
    d398:	ldr	w0, [sp, #12]
    d39c:	and	w0, w0, #0x8
    d3a0:	cmp	w0, #0x0
    d3a4:	b.eq	d3b8 <__udivmodti4@@GCC_3.0+0xeb4>  // b.none
    d3a8:	ldr	s1, [sp, #40]
    d3ac:	fmul	s0, s1, s1
    d3b0:	mrs	x0, fpsr
    d3b4:	str	w0, [sp, #24]
    d3b8:	ldr	w0, [sp, #12]
    d3bc:	and	w0, w0, #0x10
    d3c0:	cmp	w0, #0x0
    d3c4:	b.eq	d3dc <__udivmodti4@@GCC_3.0+0xed8>  // b.none
    d3c8:	ldr	s1, [sp, #44]
    d3cc:	ldr	s2, [sp, #28]
    d3d0:	fsub	s0, s1, s2
    d3d4:	mrs	x0, fpsr
    d3d8:	str	w0, [sp, #24]
    d3dc:	nop
    d3e0:	add	sp, sp, #0x30
    d3e4:	ret

000000000000d3e8 <__addtf3@@GCC_3.0>:
    d3e8:	stp	x29, x30, [sp, #-400]!
    d3ec:	mov	x29, sp
    d3f0:	str	q0, [sp, #32]
    d3f4:	str	q1, [sp, #16]
    d3f8:	str	wzr, [sp, #356]
    d3fc:	str	xzr, [sp, #304]
    d400:	mrs	x0, fpcr
    d404:	str	x0, [sp, #304]
    d408:	ldr	q0, [sp, #32]
    d40c:	str	q0, [sp, #80]
    d410:	ldr	x0, [sp, #80]
    d414:	str	x0, [sp, #360]
    d418:	ldr	x0, [sp, #88]
    d41c:	ubfx	x0, x0, #0, #48
    d420:	str	x0, [sp, #376]
    d424:	ldrh	w0, [sp, #94]
    d428:	ubfx	x0, x0, #0, #15
    d42c:	and	w0, w0, #0xffff
    d430:	and	x0, x0, #0xffff
    d434:	str	x0, [sp, #296]
    d438:	ldrb	w0, [sp, #95]
    d43c:	ubfx	x0, x0, #7, #1
    d440:	and	w0, w0, #0xff
    d444:	and	x0, x0, #0xff
    d448:	str	x0, [sp, #288]
    d44c:	ldr	x0, [sp, #376]
    d450:	lsl	x1, x0, #3
    d454:	ldr	x0, [sp, #360]
    d458:	lsr	x0, x0, #61
    d45c:	orr	x0, x1, x0
    d460:	str	x0, [sp, #376]
    d464:	ldr	x0, [sp, #360]
    d468:	lsl	x0, x0, #3
    d46c:	str	x0, [sp, #360]
    d470:	ldr	q0, [sp, #16]
    d474:	str	q0, [sp, #64]
    d478:	ldr	x0, [sp, #64]
    d47c:	str	x0, [sp, #368]
    d480:	ldr	x0, [sp, #72]
    d484:	ubfx	x0, x0, #0, #48
    d488:	str	x0, [sp, #392]
    d48c:	ldrh	w0, [sp, #78]
    d490:	ubfx	x0, x0, #0, #15
    d494:	and	w0, w0, #0xffff
    d498:	and	x0, x0, #0xffff
    d49c:	str	x0, [sp, #280]
    d4a0:	ldrb	w0, [sp, #79]
    d4a4:	ubfx	x0, x0, #7, #1
    d4a8:	and	w0, w0, #0xff
    d4ac:	and	x0, x0, #0xff
    d4b0:	str	x0, [sp, #272]
    d4b4:	ldr	x0, [sp, #392]
    d4b8:	lsl	x1, x0, #3
    d4bc:	ldr	x0, [sp, #368]
    d4c0:	lsr	x0, x0, #61
    d4c4:	orr	x0, x1, x0
    d4c8:	str	x0, [sp, #392]
    d4cc:	ldr	x0, [sp, #368]
    d4d0:	lsl	x0, x0, #3
    d4d4:	str	x0, [sp, #368]
    d4d8:	ldr	x1, [sp, #288]
    d4dc:	ldr	x0, [sp, #272]
    d4e0:	cmp	x1, x0
    d4e4:	b.ne	dfcc <__addtf3@@GCC_3.0+0xbe4>  // b.any
    d4e8:	ldr	x0, [sp, #288]
    d4ec:	str	x0, [sp, #384]
    d4f0:	ldr	x0, [sp, #296]
    d4f4:	mov	w1, w0
    d4f8:	ldr	x0, [sp, #280]
    d4fc:	sub	w0, w1, w0
    d500:	str	w0, [sp, #324]
    d504:	ldr	w0, [sp, #324]
    d508:	cmp	w0, #0x0
    d50c:	b.le	d80c <__addtf3@@GCC_3.0+0x424>
    d510:	ldr	x0, [sp, #296]
    d514:	str	x0, [sp, #344]
    d518:	ldr	x0, [sp, #280]
    d51c:	cmp	x0, #0x0
    d520:	b.ne	d650 <__addtf3@@GCC_3.0+0x268>  // b.any
    d524:	ldr	x1, [sp, #392]
    d528:	ldr	x0, [sp, #368]
    d52c:	orr	x0, x1, x0
    d530:	cmp	x0, #0x0
    d534:	b.ne	d58c <__addtf3@@GCC_3.0+0x1a4>  // b.any
    d538:	ldr	x1, [sp, #296]
    d53c:	mov	x0, #0x7fff                	// #32767
    d540:	cmp	x1, x0
    d544:	b.ne	d578 <__addtf3@@GCC_3.0+0x190>  // b.any
    d548:	ldr	x1, [sp, #376]
    d54c:	ldr	x0, [sp, #360]
    d550:	orr	x0, x1, x0
    d554:	cmp	x0, #0x0
    d558:	b.eq	d578 <__addtf3@@GCC_3.0+0x190>  // b.none
    d55c:	ldr	x0, [sp, #376]
    d560:	and	x0, x0, #0x4000000000000
    d564:	cmp	x0, #0x0
    d568:	b.ne	d578 <__addtf3@@GCC_3.0+0x190>  // b.any
    d56c:	ldr	w0, [sp, #356]
    d570:	orr	w0, w0, #0x1
    d574:	str	w0, [sp, #356]
    d578:	ldr	x0, [sp, #360]
    d57c:	str	x0, [sp, #336]
    d580:	ldr	x0, [sp, #376]
    d584:	str	x0, [sp, #328]
    d588:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    d58c:	ldr	w0, [sp, #324]
    d590:	sub	w0, w0, #0x1
    d594:	str	w0, [sp, #324]
    d598:	ldr	w0, [sp, #324]
    d59c:	cmp	w0, #0x0
    d5a0:	b.ne	d5ec <__addtf3@@GCC_3.0+0x204>  // b.any
    d5a4:	ldr	x1, [sp, #360]
    d5a8:	ldr	x0, [sp, #368]
    d5ac:	add	x0, x1, x0
    d5b0:	str	x0, [sp, #160]
    d5b4:	ldr	x1, [sp, #376]
    d5b8:	ldr	x0, [sp, #392]
    d5bc:	add	x1, x1, x0
    d5c0:	ldr	x2, [sp, #160]
    d5c4:	ldr	x0, [sp, #360]
    d5c8:	cmp	x2, x0
    d5cc:	cset	w0, cc  // cc = lo, ul, last
    d5d0:	and	w0, w0, #0xff
    d5d4:	and	x0, x0, #0xff
    d5d8:	add	x0, x1, x0
    d5dc:	str	x0, [sp, #328]
    d5e0:	ldr	x0, [sp, #160]
    d5e4:	str	x0, [sp, #336]
    d5e8:	b	ded4 <__addtf3@@GCC_3.0+0xaec>
    d5ec:	ldr	x1, [sp, #296]
    d5f0:	mov	x0, #0x7fff                	// #32767
    d5f4:	cmp	x1, x0
    d5f8:	b.ne	d6c4 <__addtf3@@GCC_3.0+0x2dc>  // b.any
    d5fc:	ldr	x1, [sp, #296]
    d600:	mov	x0, #0x7fff                	// #32767
    d604:	cmp	x1, x0
    d608:	b.ne	d63c <__addtf3@@GCC_3.0+0x254>  // b.any
    d60c:	ldr	x1, [sp, #376]
    d610:	ldr	x0, [sp, #360]
    d614:	orr	x0, x1, x0
    d618:	cmp	x0, #0x0
    d61c:	b.eq	d63c <__addtf3@@GCC_3.0+0x254>  // b.none
    d620:	ldr	x0, [sp, #376]
    d624:	and	x0, x0, #0x4000000000000
    d628:	cmp	x0, #0x0
    d62c:	b.ne	d63c <__addtf3@@GCC_3.0+0x254>  // b.any
    d630:	ldr	w0, [sp, #356]
    d634:	orr	w0, w0, #0x1
    d638:	str	w0, [sp, #356]
    d63c:	ldr	x0, [sp, #360]
    d640:	str	x0, [sp, #336]
    d644:	ldr	x0, [sp, #376]
    d648:	str	x0, [sp, #328]
    d64c:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    d650:	ldr	x1, [sp, #296]
    d654:	mov	x0, #0x7fff                	// #32767
    d658:	cmp	x1, x0
    d65c:	b.ne	d6b4 <__addtf3@@GCC_3.0+0x2cc>  // b.any
    d660:	ldr	x1, [sp, #296]
    d664:	mov	x0, #0x7fff                	// #32767
    d668:	cmp	x1, x0
    d66c:	b.ne	d6a0 <__addtf3@@GCC_3.0+0x2b8>  // b.any
    d670:	ldr	x1, [sp, #376]
    d674:	ldr	x0, [sp, #360]
    d678:	orr	x0, x1, x0
    d67c:	cmp	x0, #0x0
    d680:	b.eq	d6a0 <__addtf3@@GCC_3.0+0x2b8>  // b.none
    d684:	ldr	x0, [sp, #376]
    d688:	and	x0, x0, #0x4000000000000
    d68c:	cmp	x0, #0x0
    d690:	b.ne	d6a0 <__addtf3@@GCC_3.0+0x2b8>  // b.any
    d694:	ldr	w0, [sp, #356]
    d698:	orr	w0, w0, #0x1
    d69c:	str	w0, [sp, #356]
    d6a0:	ldr	x0, [sp, #360]
    d6a4:	str	x0, [sp, #336]
    d6a8:	ldr	x0, [sp, #376]
    d6ac:	str	x0, [sp, #328]
    d6b0:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    d6b4:	ldr	x0, [sp, #392]
    d6b8:	orr	x0, x0, #0x8000000000000
    d6bc:	str	x0, [sp, #392]
    d6c0:	b	d6c8 <__addtf3@@GCC_3.0+0x2e0>
    d6c4:	nop
    d6c8:	ldr	w0, [sp, #324]
    d6cc:	cmp	w0, #0x74
    d6d0:	b.gt	d7a4 <__addtf3@@GCC_3.0+0x3bc>
    d6d4:	ldr	w0, [sp, #324]
    d6d8:	cmp	w0, #0x3f
    d6dc:	b.gt	d744 <__addtf3@@GCC_3.0+0x35c>
    d6e0:	mov	w1, #0x40                  	// #64
    d6e4:	ldr	w0, [sp, #324]
    d6e8:	sub	w0, w1, w0
    d6ec:	ldr	x1, [sp, #392]
    d6f0:	lsl	x1, x1, x0
    d6f4:	ldr	w0, [sp, #324]
    d6f8:	ldr	x2, [sp, #368]
    d6fc:	lsr	x0, x2, x0
    d700:	orr	x1, x1, x0
    d704:	mov	w2, #0x40                  	// #64
    d708:	ldr	w0, [sp, #324]
    d70c:	sub	w0, w2, w0
    d710:	ldr	x2, [sp, #368]
    d714:	lsl	x0, x2, x0
    d718:	cmp	x0, #0x0
    d71c:	cset	w0, ne  // ne = any
    d720:	and	w0, w0, #0xff
    d724:	sxtw	x0, w0
    d728:	orr	x0, x1, x0
    d72c:	str	x0, [sp, #368]
    d730:	ldr	w0, [sp, #324]
    d734:	ldr	x1, [sp, #392]
    d738:	lsr	x0, x1, x0
    d73c:	str	x0, [sp, #392]
    d740:	b	d7c4 <__addtf3@@GCC_3.0+0x3dc>
    d744:	ldr	w0, [sp, #324]
    d748:	sub	w0, w0, #0x40
    d74c:	ldr	x1, [sp, #392]
    d750:	lsr	x1, x1, x0
    d754:	ldr	w0, [sp, #324]
    d758:	cmp	w0, #0x40
    d75c:	b.eq	d778 <__addtf3@@GCC_3.0+0x390>  // b.none
    d760:	mov	w2, #0x80                  	// #128
    d764:	ldr	w0, [sp, #324]
    d768:	sub	w0, w2, w0
    d76c:	ldr	x2, [sp, #392]
    d770:	lsl	x0, x2, x0
    d774:	b	d77c <__addtf3@@GCC_3.0+0x394>
    d778:	mov	x0, #0x0                   	// #0
    d77c:	ldr	x2, [sp, #368]
    d780:	orr	x0, x0, x2
    d784:	cmp	x0, #0x0
    d788:	cset	w0, ne  // ne = any
    d78c:	and	w0, w0, #0xff
    d790:	and	x0, x0, #0xff
    d794:	orr	x0, x1, x0
    d798:	str	x0, [sp, #368]
    d79c:	str	xzr, [sp, #392]
    d7a0:	b	d7c4 <__addtf3@@GCC_3.0+0x3dc>
    d7a4:	ldr	x1, [sp, #392]
    d7a8:	ldr	x0, [sp, #368]
    d7ac:	orr	x0, x1, x0
    d7b0:	cmp	x0, #0x0
    d7b4:	b.eq	d7c4 <__addtf3@@GCC_3.0+0x3dc>  // b.none
    d7b8:	mov	x0, #0x1                   	// #1
    d7bc:	str	x0, [sp, #368]
    d7c0:	str	xzr, [sp, #392]
    d7c4:	ldr	x1, [sp, #360]
    d7c8:	ldr	x0, [sp, #368]
    d7cc:	add	x0, x1, x0
    d7d0:	str	x0, [sp, #152]
    d7d4:	ldr	x1, [sp, #376]
    d7d8:	ldr	x0, [sp, #392]
    d7dc:	add	x1, x1, x0
    d7e0:	ldr	x2, [sp, #152]
    d7e4:	ldr	x0, [sp, #360]
    d7e8:	cmp	x2, x0
    d7ec:	cset	w0, cc  // cc = lo, ul, last
    d7f0:	and	w0, w0, #0xff
    d7f4:	and	x0, x0, #0xff
    d7f8:	add	x0, x1, x0
    d7fc:	str	x0, [sp, #328]
    d800:	ldr	x0, [sp, #152]
    d804:	str	x0, [sp, #336]
    d808:	b	ded4 <__addtf3@@GCC_3.0+0xaec>
    d80c:	ldr	w0, [sp, #324]
    d810:	cmp	w0, #0x0
    d814:	b.ge	db20 <__addtf3@@GCC_3.0+0x738>  // b.tcont
    d818:	ldr	w0, [sp, #324]
    d81c:	neg	w0, w0
    d820:	str	w0, [sp, #324]
    d824:	ldr	x0, [sp, #280]
    d828:	str	x0, [sp, #344]
    d82c:	ldr	x0, [sp, #296]
    d830:	cmp	x0, #0x0
    d834:	b.ne	d964 <__addtf3@@GCC_3.0+0x57c>  // b.any
    d838:	ldr	x1, [sp, #376]
    d83c:	ldr	x0, [sp, #360]
    d840:	orr	x0, x1, x0
    d844:	cmp	x0, #0x0
    d848:	b.ne	d8a0 <__addtf3@@GCC_3.0+0x4b8>  // b.any
    d84c:	ldr	x1, [sp, #280]
    d850:	mov	x0, #0x7fff                	// #32767
    d854:	cmp	x1, x0
    d858:	b.ne	d88c <__addtf3@@GCC_3.0+0x4a4>  // b.any
    d85c:	ldr	x1, [sp, #392]
    d860:	ldr	x0, [sp, #368]
    d864:	orr	x0, x1, x0
    d868:	cmp	x0, #0x0
    d86c:	b.eq	d88c <__addtf3@@GCC_3.0+0x4a4>  // b.none
    d870:	ldr	x0, [sp, #392]
    d874:	and	x0, x0, #0x4000000000000
    d878:	cmp	x0, #0x0
    d87c:	b.ne	d88c <__addtf3@@GCC_3.0+0x4a4>  // b.any
    d880:	ldr	w0, [sp, #356]
    d884:	orr	w0, w0, #0x1
    d888:	str	w0, [sp, #356]
    d88c:	ldr	x0, [sp, #368]
    d890:	str	x0, [sp, #336]
    d894:	ldr	x0, [sp, #392]
    d898:	str	x0, [sp, #328]
    d89c:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    d8a0:	ldr	w0, [sp, #324]
    d8a4:	sub	w0, w0, #0x1
    d8a8:	str	w0, [sp, #324]
    d8ac:	ldr	w0, [sp, #324]
    d8b0:	cmp	w0, #0x0
    d8b4:	b.ne	d900 <__addtf3@@GCC_3.0+0x518>  // b.any
    d8b8:	ldr	x1, [sp, #368]
    d8bc:	ldr	x0, [sp, #360]
    d8c0:	add	x0, x1, x0
    d8c4:	str	x0, [sp, #176]
    d8c8:	ldr	x1, [sp, #392]
    d8cc:	ldr	x0, [sp, #376]
    d8d0:	add	x1, x1, x0
    d8d4:	ldr	x2, [sp, #176]
    d8d8:	ldr	x0, [sp, #368]
    d8dc:	cmp	x2, x0
    d8e0:	cset	w0, cc  // cc = lo, ul, last
    d8e4:	and	w0, w0, #0xff
    d8e8:	and	x0, x0, #0xff
    d8ec:	add	x0, x1, x0
    d8f0:	str	x0, [sp, #328]
    d8f4:	ldr	x0, [sp, #176]
    d8f8:	str	x0, [sp, #336]
    d8fc:	b	ded4 <__addtf3@@GCC_3.0+0xaec>
    d900:	ldr	x1, [sp, #280]
    d904:	mov	x0, #0x7fff                	// #32767
    d908:	cmp	x1, x0
    d90c:	b.ne	d9d8 <__addtf3@@GCC_3.0+0x5f0>  // b.any
    d910:	ldr	x1, [sp, #280]
    d914:	mov	x0, #0x7fff                	// #32767
    d918:	cmp	x1, x0
    d91c:	b.ne	d950 <__addtf3@@GCC_3.0+0x568>  // b.any
    d920:	ldr	x1, [sp, #392]
    d924:	ldr	x0, [sp, #368]
    d928:	orr	x0, x1, x0
    d92c:	cmp	x0, #0x0
    d930:	b.eq	d950 <__addtf3@@GCC_3.0+0x568>  // b.none
    d934:	ldr	x0, [sp, #392]
    d938:	and	x0, x0, #0x4000000000000
    d93c:	cmp	x0, #0x0
    d940:	b.ne	d950 <__addtf3@@GCC_3.0+0x568>  // b.any
    d944:	ldr	w0, [sp, #356]
    d948:	orr	w0, w0, #0x1
    d94c:	str	w0, [sp, #356]
    d950:	ldr	x0, [sp, #368]
    d954:	str	x0, [sp, #336]
    d958:	ldr	x0, [sp, #392]
    d95c:	str	x0, [sp, #328]
    d960:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    d964:	ldr	x1, [sp, #280]
    d968:	mov	x0, #0x7fff                	// #32767
    d96c:	cmp	x1, x0
    d970:	b.ne	d9c8 <__addtf3@@GCC_3.0+0x5e0>  // b.any
    d974:	ldr	x1, [sp, #280]
    d978:	mov	x0, #0x7fff                	// #32767
    d97c:	cmp	x1, x0
    d980:	b.ne	d9b4 <__addtf3@@GCC_3.0+0x5cc>  // b.any
    d984:	ldr	x1, [sp, #392]
    d988:	ldr	x0, [sp, #368]
    d98c:	orr	x0, x1, x0
    d990:	cmp	x0, #0x0
    d994:	b.eq	d9b4 <__addtf3@@GCC_3.0+0x5cc>  // b.none
    d998:	ldr	x0, [sp, #392]
    d99c:	and	x0, x0, #0x4000000000000
    d9a0:	cmp	x0, #0x0
    d9a4:	b.ne	d9b4 <__addtf3@@GCC_3.0+0x5cc>  // b.any
    d9a8:	ldr	w0, [sp, #356]
    d9ac:	orr	w0, w0, #0x1
    d9b0:	str	w0, [sp, #356]
    d9b4:	ldr	x0, [sp, #368]
    d9b8:	str	x0, [sp, #336]
    d9bc:	ldr	x0, [sp, #392]
    d9c0:	str	x0, [sp, #328]
    d9c4:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    d9c8:	ldr	x0, [sp, #376]
    d9cc:	orr	x0, x0, #0x8000000000000
    d9d0:	str	x0, [sp, #376]
    d9d4:	b	d9dc <__addtf3@@GCC_3.0+0x5f4>
    d9d8:	nop
    d9dc:	ldr	w0, [sp, #324]
    d9e0:	cmp	w0, #0x74
    d9e4:	b.gt	dab8 <__addtf3@@GCC_3.0+0x6d0>
    d9e8:	ldr	w0, [sp, #324]
    d9ec:	cmp	w0, #0x3f
    d9f0:	b.gt	da58 <__addtf3@@GCC_3.0+0x670>
    d9f4:	mov	w1, #0x40                  	// #64
    d9f8:	ldr	w0, [sp, #324]
    d9fc:	sub	w0, w1, w0
    da00:	ldr	x1, [sp, #376]
    da04:	lsl	x1, x1, x0
    da08:	ldr	w0, [sp, #324]
    da0c:	ldr	x2, [sp, #360]
    da10:	lsr	x0, x2, x0
    da14:	orr	x1, x1, x0
    da18:	mov	w2, #0x40                  	// #64
    da1c:	ldr	w0, [sp, #324]
    da20:	sub	w0, w2, w0
    da24:	ldr	x2, [sp, #360]
    da28:	lsl	x0, x2, x0
    da2c:	cmp	x0, #0x0
    da30:	cset	w0, ne  // ne = any
    da34:	and	w0, w0, #0xff
    da38:	sxtw	x0, w0
    da3c:	orr	x0, x1, x0
    da40:	str	x0, [sp, #360]
    da44:	ldr	w0, [sp, #324]
    da48:	ldr	x1, [sp, #376]
    da4c:	lsr	x0, x1, x0
    da50:	str	x0, [sp, #376]
    da54:	b	dad8 <__addtf3@@GCC_3.0+0x6f0>
    da58:	ldr	w0, [sp, #324]
    da5c:	sub	w0, w0, #0x40
    da60:	ldr	x1, [sp, #376]
    da64:	lsr	x1, x1, x0
    da68:	ldr	w0, [sp, #324]
    da6c:	cmp	w0, #0x40
    da70:	b.eq	da8c <__addtf3@@GCC_3.0+0x6a4>  // b.none
    da74:	mov	w2, #0x80                  	// #128
    da78:	ldr	w0, [sp, #324]
    da7c:	sub	w0, w2, w0
    da80:	ldr	x2, [sp, #376]
    da84:	lsl	x0, x2, x0
    da88:	b	da90 <__addtf3@@GCC_3.0+0x6a8>
    da8c:	mov	x0, #0x0                   	// #0
    da90:	ldr	x2, [sp, #360]
    da94:	orr	x0, x0, x2
    da98:	cmp	x0, #0x0
    da9c:	cset	w0, ne  // ne = any
    daa0:	and	w0, w0, #0xff
    daa4:	and	x0, x0, #0xff
    daa8:	orr	x0, x1, x0
    daac:	str	x0, [sp, #360]
    dab0:	str	xzr, [sp, #376]
    dab4:	b	dad8 <__addtf3@@GCC_3.0+0x6f0>
    dab8:	ldr	x1, [sp, #376]
    dabc:	ldr	x0, [sp, #360]
    dac0:	orr	x0, x1, x0
    dac4:	cmp	x0, #0x0
    dac8:	b.eq	dad8 <__addtf3@@GCC_3.0+0x6f0>  // b.none
    dacc:	mov	x0, #0x1                   	// #1
    dad0:	str	x0, [sp, #360]
    dad4:	str	xzr, [sp, #376]
    dad8:	ldr	x1, [sp, #368]
    dadc:	ldr	x0, [sp, #360]
    dae0:	add	x0, x1, x0
    dae4:	str	x0, [sp, #168]
    dae8:	ldr	x1, [sp, #392]
    daec:	ldr	x0, [sp, #376]
    daf0:	add	x1, x1, x0
    daf4:	ldr	x2, [sp, #168]
    daf8:	ldr	x0, [sp, #368]
    dafc:	cmp	x2, x0
    db00:	cset	w0, cc  // cc = lo, ul, last
    db04:	and	w0, w0, #0xff
    db08:	and	x0, x0, #0xff
    db0c:	add	x0, x1, x0
    db10:	str	x0, [sp, #328]
    db14:	ldr	x0, [sp, #168]
    db18:	str	x0, [sp, #336]
    db1c:	b	ded4 <__addtf3@@GCC_3.0+0xaec>
    db20:	ldr	x0, [sp, #296]
    db24:	add	x0, x0, #0x1
    db28:	and	x0, x0, #0x7ffe
    db2c:	cmp	x0, #0x0
    db30:	b.ne	ddb4 <__addtf3@@GCC_3.0+0x9cc>  // b.any
    db34:	ldr	x0, [sp, #296]
    db38:	cmp	x0, #0x0
    db3c:	b.ne	dc10 <__addtf3@@GCC_3.0+0x828>  // b.any
    db40:	str	xzr, [sp, #344]
    db44:	ldr	x1, [sp, #376]
    db48:	ldr	x0, [sp, #360]
    db4c:	orr	x0, x1, x0
    db50:	cmp	x0, #0x0
    db54:	b.ne	db7c <__addtf3@@GCC_3.0+0x794>  // b.any
    db58:	ldr	x1, [sp, #392]
    db5c:	ldr	x0, [sp, #368]
    db60:	orr	x0, x1, x0
    db64:	cmp	x0, #0x0
    db68:	ldr	x0, [sp, #368]
    db6c:	str	x0, [sp, #336]
    db70:	ldr	x0, [sp, #392]
    db74:	str	x0, [sp, #328]
    db78:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    db7c:	ldr	x1, [sp, #392]
    db80:	ldr	x0, [sp, #368]
    db84:	orr	x0, x1, x0
    db88:	cmp	x0, #0x0
    db8c:	b.ne	dba4 <__addtf3@@GCC_3.0+0x7bc>  // b.any
    db90:	ldr	x0, [sp, #360]
    db94:	str	x0, [sp, #336]
    db98:	ldr	x0, [sp, #376]
    db9c:	str	x0, [sp, #328]
    dba0:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    dba4:	ldr	x1, [sp, #360]
    dba8:	ldr	x0, [sp, #368]
    dbac:	add	x0, x1, x0
    dbb0:	str	x0, [sp, #184]
    dbb4:	ldr	x1, [sp, #376]
    dbb8:	ldr	x0, [sp, #392]
    dbbc:	add	x1, x1, x0
    dbc0:	ldr	x2, [sp, #184]
    dbc4:	ldr	x0, [sp, #360]
    dbc8:	cmp	x2, x0
    dbcc:	cset	w0, cc  // cc = lo, ul, last
    dbd0:	and	w0, w0, #0xff
    dbd4:	and	x0, x0, #0xff
    dbd8:	add	x0, x1, x0
    dbdc:	str	x0, [sp, #328]
    dbe0:	ldr	x0, [sp, #184]
    dbe4:	str	x0, [sp, #336]
    dbe8:	ldr	x0, [sp, #328]
    dbec:	and	x0, x0, #0x8000000000000
    dbf0:	cmp	x0, #0x0
    dbf4:	b.eq	ec7c <__addtf3@@GCC_3.0+0x1894>  // b.none
    dbf8:	ldr	x0, [sp, #328]
    dbfc:	and	x0, x0, #0xfff7ffffffffffff
    dc00:	str	x0, [sp, #328]
    dc04:	mov	x0, #0x1                   	// #1
    dc08:	str	x0, [sp, #344]
    dc0c:	b	ec7c <__addtf3@@GCC_3.0+0x1894>
    dc10:	ldr	x1, [sp, #296]
    dc14:	mov	x0, #0x7fff                	// #32767
    dc18:	cmp	x1, x0
    dc1c:	b.ne	dc50 <__addtf3@@GCC_3.0+0x868>  // b.any
    dc20:	ldr	x1, [sp, #376]
    dc24:	ldr	x0, [sp, #360]
    dc28:	orr	x0, x1, x0
    dc2c:	cmp	x0, #0x0
    dc30:	b.eq	dc50 <__addtf3@@GCC_3.0+0x868>  // b.none
    dc34:	ldr	x0, [sp, #376]
    dc38:	and	x0, x0, #0x4000000000000
    dc3c:	cmp	x0, #0x0
    dc40:	b.ne	dc50 <__addtf3@@GCC_3.0+0x868>  // b.any
    dc44:	ldr	w0, [sp, #356]
    dc48:	orr	w0, w0, #0x1
    dc4c:	str	w0, [sp, #356]
    dc50:	ldr	x1, [sp, #280]
    dc54:	mov	x0, #0x7fff                	// #32767
    dc58:	cmp	x1, x0
    dc5c:	b.ne	dc90 <__addtf3@@GCC_3.0+0x8a8>  // b.any
    dc60:	ldr	x1, [sp, #392]
    dc64:	ldr	x0, [sp, #368]
    dc68:	orr	x0, x1, x0
    dc6c:	cmp	x0, #0x0
    dc70:	b.eq	dc90 <__addtf3@@GCC_3.0+0x8a8>  // b.none
    dc74:	ldr	x0, [sp, #392]
    dc78:	and	x0, x0, #0x4000000000000
    dc7c:	cmp	x0, #0x0
    dc80:	b.ne	dc90 <__addtf3@@GCC_3.0+0x8a8>  // b.any
    dc84:	ldr	w0, [sp, #356]
    dc88:	orr	w0, w0, #0x1
    dc8c:	str	w0, [sp, #356]
    dc90:	mov	x0, #0x7fff                	// #32767
    dc94:	str	x0, [sp, #344]
    dc98:	ldr	x1, [sp, #376]
    dc9c:	ldr	x0, [sp, #360]
    dca0:	orr	x0, x1, x0
    dca4:	cmp	x0, #0x0
    dca8:	b.ne	dcc0 <__addtf3@@GCC_3.0+0x8d8>  // b.any
    dcac:	ldr	x0, [sp, #368]
    dcb0:	str	x0, [sp, #336]
    dcb4:	ldr	x0, [sp, #392]
    dcb8:	str	x0, [sp, #328]
    dcbc:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    dcc0:	ldr	x1, [sp, #392]
    dcc4:	ldr	x0, [sp, #368]
    dcc8:	orr	x0, x1, x0
    dccc:	cmp	x0, #0x0
    dcd0:	b.ne	dce8 <__addtf3@@GCC_3.0+0x900>  // b.any
    dcd4:	ldr	x0, [sp, #360]
    dcd8:	str	x0, [sp, #336]
    dcdc:	ldr	x0, [sp, #376]
    dce0:	str	x0, [sp, #328]
    dce4:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    dce8:	ldr	x0, [sp, #360]
    dcec:	lsr	x1, x0, #3
    dcf0:	ldr	x0, [sp, #376]
    dcf4:	lsl	x0, x0, #61
    dcf8:	orr	x0, x1, x0
    dcfc:	str	x0, [sp, #360]
    dd00:	ldr	x0, [sp, #376]
    dd04:	lsr	x0, x0, #3
    dd08:	str	x0, [sp, #376]
    dd0c:	ldr	x0, [sp, #368]
    dd10:	lsr	x1, x0, #3
    dd14:	ldr	x0, [sp, #392]
    dd18:	lsl	x0, x0, #61
    dd1c:	orr	x0, x1, x0
    dd20:	str	x0, [sp, #368]
    dd24:	ldr	x0, [sp, #392]
    dd28:	lsr	x0, x0, #3
    dd2c:	str	x0, [sp, #392]
    dd30:	ldr	x0, [sp, #376]
    dd34:	and	x0, x0, #0x800000000000
    dd38:	cmp	x0, #0x0
    dd3c:	b.eq	dd6c <__addtf3@@GCC_3.0+0x984>  // b.none
    dd40:	ldr	x0, [sp, #392]
    dd44:	and	x0, x0, #0x800000000000
    dd48:	cmp	x0, #0x0
    dd4c:	b.ne	dd6c <__addtf3@@GCC_3.0+0x984>  // b.any
    dd50:	ldr	x0, [sp, #272]
    dd54:	str	x0, [sp, #384]
    dd58:	ldr	x0, [sp, #368]
    dd5c:	str	x0, [sp, #336]
    dd60:	ldr	x0, [sp, #392]
    dd64:	str	x0, [sp, #328]
    dd68:	b	dd84 <__addtf3@@GCC_3.0+0x99c>
    dd6c:	ldr	x0, [sp, #288]
    dd70:	str	x0, [sp, #384]
    dd74:	ldr	x0, [sp, #360]
    dd78:	str	x0, [sp, #336]
    dd7c:	ldr	x0, [sp, #376]
    dd80:	str	x0, [sp, #328]
    dd84:	mov	x0, #0x3                   	// #3
    dd88:	str	x0, [sp, #248]
    dd8c:	ldr	x0, [sp, #328]
    dd90:	lsl	x1, x0, #3
    dd94:	ldr	x0, [sp, #336]
    dd98:	lsr	x0, x0, #61
    dd9c:	orr	x0, x1, x0
    dda0:	str	x0, [sp, #328]
    dda4:	ldr	x0, [sp, #336]
    dda8:	lsl	x0, x0, #3
    ddac:	str	x0, [sp, #336]
    ddb0:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ddb4:	ldr	x1, [sp, #360]
    ddb8:	ldr	x0, [sp, #368]
    ddbc:	add	x0, x1, x0
    ddc0:	str	x0, [sp, #192]
    ddc4:	ldr	x1, [sp, #376]
    ddc8:	ldr	x0, [sp, #392]
    ddcc:	add	x1, x1, x0
    ddd0:	ldr	x2, [sp, #192]
    ddd4:	ldr	x0, [sp, #360]
    ddd8:	cmp	x2, x0
    dddc:	cset	w0, cc  // cc = lo, ul, last
    dde0:	and	w0, w0, #0xff
    dde4:	and	x0, x0, #0xff
    dde8:	add	x0, x1, x0
    ddec:	str	x0, [sp, #328]
    ddf0:	ldr	x0, [sp, #192]
    ddf4:	str	x0, [sp, #336]
    ddf8:	ldr	x0, [sp, #296]
    ddfc:	add	x0, x0, #0x1
    de00:	str	x0, [sp, #344]
    de04:	ldr	x0, [sp, #328]
    de08:	lsl	x1, x0, #63
    de0c:	ldr	x0, [sp, #336]
    de10:	lsr	x0, x0, #1
    de14:	orr	x1, x1, x0
    de18:	ldr	x0, [sp, #336]
    de1c:	and	x0, x0, #0x1
    de20:	orr	x0, x1, x0
    de24:	str	x0, [sp, #336]
    de28:	ldr	x0, [sp, #328]
    de2c:	lsr	x0, x0, #1
    de30:	str	x0, [sp, #328]
    de34:	ldr	x1, [sp, #344]
    de38:	mov	x0, #0x7fff                	// #32767
    de3c:	cmp	x1, x0
    de40:	b.ne	ec84 <__addtf3@@GCC_3.0+0x189c>  // b.any
    de44:	ldr	x0, [sp, #304]
    de48:	and	x0, x0, #0xc00000
    de4c:	cmp	x0, #0x0
    de50:	b.eq	de8c <__addtf3@@GCC_3.0+0xaa4>  // b.none
    de54:	ldr	x0, [sp, #304]
    de58:	and	x0, x0, #0xc00000
    de5c:	cmp	x0, #0x400, lsl #12
    de60:	b.ne	de70 <__addtf3@@GCC_3.0+0xa88>  // b.any
    de64:	ldr	x0, [sp, #384]
    de68:	cmp	x0, #0x0
    de6c:	b.eq	de8c <__addtf3@@GCC_3.0+0xaa4>  // b.none
    de70:	ldr	x0, [sp, #304]
    de74:	and	x0, x0, #0xc00000
    de78:	cmp	x0, #0x800, lsl #12
    de7c:	b.ne	dea0 <__addtf3@@GCC_3.0+0xab8>  // b.any
    de80:	ldr	x0, [sp, #384]
    de84:	cmp	x0, #0x0
    de88:	b.eq	dea0 <__addtf3@@GCC_3.0+0xab8>  // b.none
    de8c:	mov	x0, #0x7fff                	// #32767
    de90:	str	x0, [sp, #344]
    de94:	str	xzr, [sp, #336]
    de98:	str	xzr, [sp, #328]
    de9c:	b	deb8 <__addtf3@@GCC_3.0+0xad0>
    dea0:	mov	x0, #0x7ffe                	// #32766
    dea4:	str	x0, [sp, #344]
    dea8:	mov	x0, #0xffffffffffffffff    	// #-1
    deac:	str	x0, [sp, #336]
    deb0:	mov	x0, #0xffffffffffffffff    	// #-1
    deb4:	str	x0, [sp, #328]
    deb8:	ldr	w0, [sp, #356]
    debc:	orr	w0, w0, #0x10
    dec0:	str	w0, [sp, #356]
    dec4:	ldr	w0, [sp, #356]
    dec8:	orr	w0, w0, #0x4
    decc:	str	w0, [sp, #356]
    ded0:	b	ec84 <__addtf3@@GCC_3.0+0x189c>
    ded4:	ldr	x0, [sp, #328]
    ded8:	and	x0, x0, #0x8000000000000
    dedc:	cmp	x0, #0x0
    dee0:	b.eq	ec8c <__addtf3@@GCC_3.0+0x18a4>  // b.none
    dee4:	ldr	x0, [sp, #328]
    dee8:	and	x0, x0, #0xfff7ffffffffffff
    deec:	str	x0, [sp, #328]
    def0:	ldr	x0, [sp, #344]
    def4:	add	x0, x0, #0x1
    def8:	str	x0, [sp, #344]
    defc:	ldr	x0, [sp, #328]
    df00:	lsl	x1, x0, #63
    df04:	ldr	x0, [sp, #336]
    df08:	lsr	x0, x0, #1
    df0c:	orr	x1, x1, x0
    df10:	ldr	x0, [sp, #336]
    df14:	and	x0, x0, #0x1
    df18:	orr	x0, x1, x0
    df1c:	str	x0, [sp, #336]
    df20:	ldr	x0, [sp, #328]
    df24:	lsr	x0, x0, #1
    df28:	str	x0, [sp, #328]
    df2c:	ldr	x1, [sp, #344]
    df30:	mov	x0, #0x7fff                	// #32767
    df34:	cmp	x1, x0
    df38:	b.ne	ec8c <__addtf3@@GCC_3.0+0x18a4>  // b.any
    df3c:	ldr	x0, [sp, #304]
    df40:	and	x0, x0, #0xc00000
    df44:	cmp	x0, #0x0
    df48:	b.eq	df84 <__addtf3@@GCC_3.0+0xb9c>  // b.none
    df4c:	ldr	x0, [sp, #304]
    df50:	and	x0, x0, #0xc00000
    df54:	cmp	x0, #0x400, lsl #12
    df58:	b.ne	df68 <__addtf3@@GCC_3.0+0xb80>  // b.any
    df5c:	ldr	x0, [sp, #384]
    df60:	cmp	x0, #0x0
    df64:	b.eq	df84 <__addtf3@@GCC_3.0+0xb9c>  // b.none
    df68:	ldr	x0, [sp, #304]
    df6c:	and	x0, x0, #0xc00000
    df70:	cmp	x0, #0x800, lsl #12
    df74:	b.ne	df98 <__addtf3@@GCC_3.0+0xbb0>  // b.any
    df78:	ldr	x0, [sp, #384]
    df7c:	cmp	x0, #0x0
    df80:	b.eq	df98 <__addtf3@@GCC_3.0+0xbb0>  // b.none
    df84:	mov	x0, #0x7fff                	// #32767
    df88:	str	x0, [sp, #344]
    df8c:	str	xzr, [sp, #336]
    df90:	str	xzr, [sp, #328]
    df94:	b	dfb0 <__addtf3@@GCC_3.0+0xbc8>
    df98:	mov	x0, #0x7ffe                	// #32766
    df9c:	str	x0, [sp, #344]
    dfa0:	mov	x0, #0xffffffffffffffff    	// #-1
    dfa4:	str	x0, [sp, #336]
    dfa8:	mov	x0, #0xffffffffffffffff    	// #-1
    dfac:	str	x0, [sp, #328]
    dfb0:	ldr	w0, [sp, #356]
    dfb4:	orr	w0, w0, #0x10
    dfb8:	str	w0, [sp, #356]
    dfbc:	ldr	w0, [sp, #356]
    dfc0:	orr	w0, w0, #0x4
    dfc4:	str	w0, [sp, #356]
    dfc8:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    dfcc:	ldr	x0, [sp, #296]
    dfd0:	mov	w1, w0
    dfd4:	ldr	x0, [sp, #280]
    dfd8:	sub	w0, w1, w0
    dfdc:	str	w0, [sp, #320]
    dfe0:	ldr	w0, [sp, #320]
    dfe4:	cmp	w0, #0x0
    dfe8:	b.le	e2f0 <__addtf3@@GCC_3.0+0xf08>
    dfec:	ldr	x0, [sp, #296]
    dff0:	str	x0, [sp, #344]
    dff4:	ldr	x0, [sp, #288]
    dff8:	str	x0, [sp, #384]
    dffc:	ldr	x0, [sp, #280]
    e000:	cmp	x0, #0x0
    e004:	b.ne	e134 <__addtf3@@GCC_3.0+0xd4c>  // b.any
    e008:	ldr	x1, [sp, #392]
    e00c:	ldr	x0, [sp, #368]
    e010:	orr	x0, x1, x0
    e014:	cmp	x0, #0x0
    e018:	b.ne	e070 <__addtf3@@GCC_3.0+0xc88>  // b.any
    e01c:	ldr	x1, [sp, #296]
    e020:	mov	x0, #0x7fff                	// #32767
    e024:	cmp	x1, x0
    e028:	b.ne	e05c <__addtf3@@GCC_3.0+0xc74>  // b.any
    e02c:	ldr	x1, [sp, #376]
    e030:	ldr	x0, [sp, #360]
    e034:	orr	x0, x1, x0
    e038:	cmp	x0, #0x0
    e03c:	b.eq	e05c <__addtf3@@GCC_3.0+0xc74>  // b.none
    e040:	ldr	x0, [sp, #376]
    e044:	and	x0, x0, #0x4000000000000
    e048:	cmp	x0, #0x0
    e04c:	b.ne	e05c <__addtf3@@GCC_3.0+0xc74>  // b.any
    e050:	ldr	w0, [sp, #356]
    e054:	orr	w0, w0, #0x1
    e058:	str	w0, [sp, #356]
    e05c:	ldr	x0, [sp, #360]
    e060:	str	x0, [sp, #336]
    e064:	ldr	x0, [sp, #376]
    e068:	str	x0, [sp, #328]
    e06c:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e070:	ldr	w0, [sp, #320]
    e074:	sub	w0, w0, #0x1
    e078:	str	w0, [sp, #320]
    e07c:	ldr	w0, [sp, #320]
    e080:	cmp	w0, #0x0
    e084:	b.ne	e0d0 <__addtf3@@GCC_3.0+0xce8>  // b.any
    e088:	ldr	x1, [sp, #360]
    e08c:	ldr	x0, [sp, #368]
    e090:	sub	x0, x1, x0
    e094:	str	x0, [sp, #208]
    e098:	ldr	x1, [sp, #376]
    e09c:	ldr	x0, [sp, #392]
    e0a0:	sub	x1, x1, x0
    e0a4:	ldr	x2, [sp, #208]
    e0a8:	ldr	x0, [sp, #360]
    e0ac:	cmp	x2, x0
    e0b0:	cset	w0, hi  // hi = pmore
    e0b4:	and	w0, w0, #0xff
    e0b8:	and	x0, x0, #0xff
    e0bc:	sub	x0, x1, x0
    e0c0:	str	x0, [sp, #328]
    e0c4:	ldr	x0, [sp, #208]
    e0c8:	str	x0, [sp, #336]
    e0cc:	b	eaa0 <__addtf3@@GCC_3.0+0x16b8>
    e0d0:	ldr	x1, [sp, #296]
    e0d4:	mov	x0, #0x7fff                	// #32767
    e0d8:	cmp	x1, x0
    e0dc:	b.ne	e1a8 <__addtf3@@GCC_3.0+0xdc0>  // b.any
    e0e0:	ldr	x1, [sp, #296]
    e0e4:	mov	x0, #0x7fff                	// #32767
    e0e8:	cmp	x1, x0
    e0ec:	b.ne	e120 <__addtf3@@GCC_3.0+0xd38>  // b.any
    e0f0:	ldr	x1, [sp, #376]
    e0f4:	ldr	x0, [sp, #360]
    e0f8:	orr	x0, x1, x0
    e0fc:	cmp	x0, #0x0
    e100:	b.eq	e120 <__addtf3@@GCC_3.0+0xd38>  // b.none
    e104:	ldr	x0, [sp, #376]
    e108:	and	x0, x0, #0x4000000000000
    e10c:	cmp	x0, #0x0
    e110:	b.ne	e120 <__addtf3@@GCC_3.0+0xd38>  // b.any
    e114:	ldr	w0, [sp, #356]
    e118:	orr	w0, w0, #0x1
    e11c:	str	w0, [sp, #356]
    e120:	ldr	x0, [sp, #360]
    e124:	str	x0, [sp, #336]
    e128:	ldr	x0, [sp, #376]
    e12c:	str	x0, [sp, #328]
    e130:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e134:	ldr	x1, [sp, #296]
    e138:	mov	x0, #0x7fff                	// #32767
    e13c:	cmp	x1, x0
    e140:	b.ne	e198 <__addtf3@@GCC_3.0+0xdb0>  // b.any
    e144:	ldr	x1, [sp, #296]
    e148:	mov	x0, #0x7fff                	// #32767
    e14c:	cmp	x1, x0
    e150:	b.ne	e184 <__addtf3@@GCC_3.0+0xd9c>  // b.any
    e154:	ldr	x1, [sp, #376]
    e158:	ldr	x0, [sp, #360]
    e15c:	orr	x0, x1, x0
    e160:	cmp	x0, #0x0
    e164:	b.eq	e184 <__addtf3@@GCC_3.0+0xd9c>  // b.none
    e168:	ldr	x0, [sp, #376]
    e16c:	and	x0, x0, #0x4000000000000
    e170:	cmp	x0, #0x0
    e174:	b.ne	e184 <__addtf3@@GCC_3.0+0xd9c>  // b.any
    e178:	ldr	w0, [sp, #356]
    e17c:	orr	w0, w0, #0x1
    e180:	str	w0, [sp, #356]
    e184:	ldr	x0, [sp, #360]
    e188:	str	x0, [sp, #336]
    e18c:	ldr	x0, [sp, #376]
    e190:	str	x0, [sp, #328]
    e194:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e198:	ldr	x0, [sp, #392]
    e19c:	orr	x0, x0, #0x8000000000000
    e1a0:	str	x0, [sp, #392]
    e1a4:	b	e1ac <__addtf3@@GCC_3.0+0xdc4>
    e1a8:	nop
    e1ac:	ldr	w0, [sp, #320]
    e1b0:	cmp	w0, #0x74
    e1b4:	b.gt	e288 <__addtf3@@GCC_3.0+0xea0>
    e1b8:	ldr	w0, [sp, #320]
    e1bc:	cmp	w0, #0x3f
    e1c0:	b.gt	e228 <__addtf3@@GCC_3.0+0xe40>
    e1c4:	mov	w1, #0x40                  	// #64
    e1c8:	ldr	w0, [sp, #320]
    e1cc:	sub	w0, w1, w0
    e1d0:	ldr	x1, [sp, #392]
    e1d4:	lsl	x1, x1, x0
    e1d8:	ldr	w0, [sp, #320]
    e1dc:	ldr	x2, [sp, #368]
    e1e0:	lsr	x0, x2, x0
    e1e4:	orr	x1, x1, x0
    e1e8:	mov	w2, #0x40                  	// #64
    e1ec:	ldr	w0, [sp, #320]
    e1f0:	sub	w0, w2, w0
    e1f4:	ldr	x2, [sp, #368]
    e1f8:	lsl	x0, x2, x0
    e1fc:	cmp	x0, #0x0
    e200:	cset	w0, ne  // ne = any
    e204:	and	w0, w0, #0xff
    e208:	sxtw	x0, w0
    e20c:	orr	x0, x1, x0
    e210:	str	x0, [sp, #368]
    e214:	ldr	w0, [sp, #320]
    e218:	ldr	x1, [sp, #392]
    e21c:	lsr	x0, x1, x0
    e220:	str	x0, [sp, #392]
    e224:	b	e2a8 <__addtf3@@GCC_3.0+0xec0>
    e228:	ldr	w0, [sp, #320]
    e22c:	sub	w0, w0, #0x40
    e230:	ldr	x1, [sp, #392]
    e234:	lsr	x1, x1, x0
    e238:	ldr	w0, [sp, #320]
    e23c:	cmp	w0, #0x40
    e240:	b.eq	e25c <__addtf3@@GCC_3.0+0xe74>  // b.none
    e244:	mov	w2, #0x80                  	// #128
    e248:	ldr	w0, [sp, #320]
    e24c:	sub	w0, w2, w0
    e250:	ldr	x2, [sp, #392]
    e254:	lsl	x0, x2, x0
    e258:	b	e260 <__addtf3@@GCC_3.0+0xe78>
    e25c:	mov	x0, #0x0                   	// #0
    e260:	ldr	x2, [sp, #368]
    e264:	orr	x0, x0, x2
    e268:	cmp	x0, #0x0
    e26c:	cset	w0, ne  // ne = any
    e270:	and	w0, w0, #0xff
    e274:	and	x0, x0, #0xff
    e278:	orr	x0, x1, x0
    e27c:	str	x0, [sp, #368]
    e280:	str	xzr, [sp, #392]
    e284:	b	e2a8 <__addtf3@@GCC_3.0+0xec0>
    e288:	ldr	x1, [sp, #392]
    e28c:	ldr	x0, [sp, #368]
    e290:	orr	x0, x1, x0
    e294:	cmp	x0, #0x0
    e298:	b.eq	e2a8 <__addtf3@@GCC_3.0+0xec0>  // b.none
    e29c:	mov	x0, #0x1                   	// #1
    e2a0:	str	x0, [sp, #368]
    e2a4:	str	xzr, [sp, #392]
    e2a8:	ldr	x1, [sp, #360]
    e2ac:	ldr	x0, [sp, #368]
    e2b0:	sub	x0, x1, x0
    e2b4:	str	x0, [sp, #200]
    e2b8:	ldr	x1, [sp, #376]
    e2bc:	ldr	x0, [sp, #392]
    e2c0:	sub	x1, x1, x0
    e2c4:	ldr	x2, [sp, #200]
    e2c8:	ldr	x0, [sp, #360]
    e2cc:	cmp	x2, x0
    e2d0:	cset	w0, hi  // hi = pmore
    e2d4:	and	w0, w0, #0xff
    e2d8:	and	x0, x0, #0xff
    e2dc:	sub	x0, x1, x0
    e2e0:	str	x0, [sp, #328]
    e2e4:	ldr	x0, [sp, #200]
    e2e8:	str	x0, [sp, #336]
    e2ec:	b	eaa0 <__addtf3@@GCC_3.0+0x16b8>
    e2f0:	ldr	w0, [sp, #320]
    e2f4:	cmp	w0, #0x0
    e2f8:	b.ge	e60c <__addtf3@@GCC_3.0+0x1224>  // b.tcont
    e2fc:	ldr	w0, [sp, #320]
    e300:	neg	w0, w0
    e304:	str	w0, [sp, #320]
    e308:	ldr	x0, [sp, #280]
    e30c:	str	x0, [sp, #344]
    e310:	ldr	x0, [sp, #272]
    e314:	str	x0, [sp, #384]
    e318:	ldr	x0, [sp, #296]
    e31c:	cmp	x0, #0x0
    e320:	b.ne	e450 <__addtf3@@GCC_3.0+0x1068>  // b.any
    e324:	ldr	x1, [sp, #376]
    e328:	ldr	x0, [sp, #360]
    e32c:	orr	x0, x1, x0
    e330:	cmp	x0, #0x0
    e334:	b.ne	e38c <__addtf3@@GCC_3.0+0xfa4>  // b.any
    e338:	ldr	x1, [sp, #280]
    e33c:	mov	x0, #0x7fff                	// #32767
    e340:	cmp	x1, x0
    e344:	b.ne	e378 <__addtf3@@GCC_3.0+0xf90>  // b.any
    e348:	ldr	x1, [sp, #392]
    e34c:	ldr	x0, [sp, #368]
    e350:	orr	x0, x1, x0
    e354:	cmp	x0, #0x0
    e358:	b.eq	e378 <__addtf3@@GCC_3.0+0xf90>  // b.none
    e35c:	ldr	x0, [sp, #392]
    e360:	and	x0, x0, #0x4000000000000
    e364:	cmp	x0, #0x0
    e368:	b.ne	e378 <__addtf3@@GCC_3.0+0xf90>  // b.any
    e36c:	ldr	w0, [sp, #356]
    e370:	orr	w0, w0, #0x1
    e374:	str	w0, [sp, #356]
    e378:	ldr	x0, [sp, #368]
    e37c:	str	x0, [sp, #336]
    e380:	ldr	x0, [sp, #392]
    e384:	str	x0, [sp, #328]
    e388:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e38c:	ldr	w0, [sp, #320]
    e390:	sub	w0, w0, #0x1
    e394:	str	w0, [sp, #320]
    e398:	ldr	w0, [sp, #320]
    e39c:	cmp	w0, #0x0
    e3a0:	b.ne	e3ec <__addtf3@@GCC_3.0+0x1004>  // b.any
    e3a4:	ldr	x1, [sp, #368]
    e3a8:	ldr	x0, [sp, #360]
    e3ac:	sub	x0, x1, x0
    e3b0:	str	x0, [sp, #224]
    e3b4:	ldr	x1, [sp, #392]
    e3b8:	ldr	x0, [sp, #376]
    e3bc:	sub	x1, x1, x0
    e3c0:	ldr	x2, [sp, #224]
    e3c4:	ldr	x0, [sp, #368]
    e3c8:	cmp	x2, x0
    e3cc:	cset	w0, hi  // hi = pmore
    e3d0:	and	w0, w0, #0xff
    e3d4:	and	x0, x0, #0xff
    e3d8:	sub	x0, x1, x0
    e3dc:	str	x0, [sp, #328]
    e3e0:	ldr	x0, [sp, #224]
    e3e4:	str	x0, [sp, #336]
    e3e8:	b	eaa0 <__addtf3@@GCC_3.0+0x16b8>
    e3ec:	ldr	x1, [sp, #280]
    e3f0:	mov	x0, #0x7fff                	// #32767
    e3f4:	cmp	x1, x0
    e3f8:	b.ne	e4c4 <__addtf3@@GCC_3.0+0x10dc>  // b.any
    e3fc:	ldr	x1, [sp, #280]
    e400:	mov	x0, #0x7fff                	// #32767
    e404:	cmp	x1, x0
    e408:	b.ne	e43c <__addtf3@@GCC_3.0+0x1054>  // b.any
    e40c:	ldr	x1, [sp, #392]
    e410:	ldr	x0, [sp, #368]
    e414:	orr	x0, x1, x0
    e418:	cmp	x0, #0x0
    e41c:	b.eq	e43c <__addtf3@@GCC_3.0+0x1054>  // b.none
    e420:	ldr	x0, [sp, #392]
    e424:	and	x0, x0, #0x4000000000000
    e428:	cmp	x0, #0x0
    e42c:	b.ne	e43c <__addtf3@@GCC_3.0+0x1054>  // b.any
    e430:	ldr	w0, [sp, #356]
    e434:	orr	w0, w0, #0x1
    e438:	str	w0, [sp, #356]
    e43c:	ldr	x0, [sp, #368]
    e440:	str	x0, [sp, #336]
    e444:	ldr	x0, [sp, #392]
    e448:	str	x0, [sp, #328]
    e44c:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e450:	ldr	x1, [sp, #280]
    e454:	mov	x0, #0x7fff                	// #32767
    e458:	cmp	x1, x0
    e45c:	b.ne	e4b4 <__addtf3@@GCC_3.0+0x10cc>  // b.any
    e460:	ldr	x1, [sp, #280]
    e464:	mov	x0, #0x7fff                	// #32767
    e468:	cmp	x1, x0
    e46c:	b.ne	e4a0 <__addtf3@@GCC_3.0+0x10b8>  // b.any
    e470:	ldr	x1, [sp, #392]
    e474:	ldr	x0, [sp, #368]
    e478:	orr	x0, x1, x0
    e47c:	cmp	x0, #0x0
    e480:	b.eq	e4a0 <__addtf3@@GCC_3.0+0x10b8>  // b.none
    e484:	ldr	x0, [sp, #392]
    e488:	and	x0, x0, #0x4000000000000
    e48c:	cmp	x0, #0x0
    e490:	b.ne	e4a0 <__addtf3@@GCC_3.0+0x10b8>  // b.any
    e494:	ldr	w0, [sp, #356]
    e498:	orr	w0, w0, #0x1
    e49c:	str	w0, [sp, #356]
    e4a0:	ldr	x0, [sp, #368]
    e4a4:	str	x0, [sp, #336]
    e4a8:	ldr	x0, [sp, #392]
    e4ac:	str	x0, [sp, #328]
    e4b0:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e4b4:	ldr	x0, [sp, #376]
    e4b8:	orr	x0, x0, #0x8000000000000
    e4bc:	str	x0, [sp, #376]
    e4c0:	b	e4c8 <__addtf3@@GCC_3.0+0x10e0>
    e4c4:	nop
    e4c8:	ldr	w0, [sp, #320]
    e4cc:	cmp	w0, #0x74
    e4d0:	b.gt	e5a4 <__addtf3@@GCC_3.0+0x11bc>
    e4d4:	ldr	w0, [sp, #320]
    e4d8:	cmp	w0, #0x3f
    e4dc:	b.gt	e544 <__addtf3@@GCC_3.0+0x115c>
    e4e0:	mov	w1, #0x40                  	// #64
    e4e4:	ldr	w0, [sp, #320]
    e4e8:	sub	w0, w1, w0
    e4ec:	ldr	x1, [sp, #376]
    e4f0:	lsl	x1, x1, x0
    e4f4:	ldr	w0, [sp, #320]
    e4f8:	ldr	x2, [sp, #360]
    e4fc:	lsr	x0, x2, x0
    e500:	orr	x1, x1, x0
    e504:	mov	w2, #0x40                  	// #64
    e508:	ldr	w0, [sp, #320]
    e50c:	sub	w0, w2, w0
    e510:	ldr	x2, [sp, #360]
    e514:	lsl	x0, x2, x0
    e518:	cmp	x0, #0x0
    e51c:	cset	w0, ne  // ne = any
    e520:	and	w0, w0, #0xff
    e524:	sxtw	x0, w0
    e528:	orr	x0, x1, x0
    e52c:	str	x0, [sp, #360]
    e530:	ldr	w0, [sp, #320]
    e534:	ldr	x1, [sp, #376]
    e538:	lsr	x0, x1, x0
    e53c:	str	x0, [sp, #376]
    e540:	b	e5c4 <__addtf3@@GCC_3.0+0x11dc>
    e544:	ldr	w0, [sp, #320]
    e548:	sub	w0, w0, #0x40
    e54c:	ldr	x1, [sp, #376]
    e550:	lsr	x1, x1, x0
    e554:	ldr	w0, [sp, #320]
    e558:	cmp	w0, #0x40
    e55c:	b.eq	e578 <__addtf3@@GCC_3.0+0x1190>  // b.none
    e560:	mov	w2, #0x80                  	// #128
    e564:	ldr	w0, [sp, #320]
    e568:	sub	w0, w2, w0
    e56c:	ldr	x2, [sp, #376]
    e570:	lsl	x0, x2, x0
    e574:	b	e57c <__addtf3@@GCC_3.0+0x1194>
    e578:	mov	x0, #0x0                   	// #0
    e57c:	ldr	x2, [sp, #360]
    e580:	orr	x0, x0, x2
    e584:	cmp	x0, #0x0
    e588:	cset	w0, ne  // ne = any
    e58c:	and	w0, w0, #0xff
    e590:	and	x0, x0, #0xff
    e594:	orr	x0, x1, x0
    e598:	str	x0, [sp, #360]
    e59c:	str	xzr, [sp, #376]
    e5a0:	b	e5c4 <__addtf3@@GCC_3.0+0x11dc>
    e5a4:	ldr	x1, [sp, #376]
    e5a8:	ldr	x0, [sp, #360]
    e5ac:	orr	x0, x1, x0
    e5b0:	cmp	x0, #0x0
    e5b4:	b.eq	e5c4 <__addtf3@@GCC_3.0+0x11dc>  // b.none
    e5b8:	mov	x0, #0x1                   	// #1
    e5bc:	str	x0, [sp, #360]
    e5c0:	str	xzr, [sp, #376]
    e5c4:	ldr	x1, [sp, #368]
    e5c8:	ldr	x0, [sp, #360]
    e5cc:	sub	x0, x1, x0
    e5d0:	str	x0, [sp, #216]
    e5d4:	ldr	x1, [sp, #392]
    e5d8:	ldr	x0, [sp, #376]
    e5dc:	sub	x1, x1, x0
    e5e0:	ldr	x2, [sp, #216]
    e5e4:	ldr	x0, [sp, #368]
    e5e8:	cmp	x2, x0
    e5ec:	cset	w0, hi  // hi = pmore
    e5f0:	and	w0, w0, #0xff
    e5f4:	and	x0, x0, #0xff
    e5f8:	sub	x0, x1, x0
    e5fc:	str	x0, [sp, #328]
    e600:	ldr	x0, [sp, #216]
    e604:	str	x0, [sp, #336]
    e608:	b	eaa0 <__addtf3@@GCC_3.0+0x16b8>
    e60c:	ldr	x0, [sp, #296]
    e610:	add	x0, x0, #0x1
    e614:	and	x0, x0, #0x7ffe
    e618:	cmp	x0, #0x0
    e61c:	b.ne	e9b4 <__addtf3@@GCC_3.0+0x15cc>  // b.any
    e620:	ldr	x0, [sp, #296]
    e624:	cmp	x0, #0x0
    e628:	b.ne	e7a4 <__addtf3@@GCC_3.0+0x13bc>  // b.any
    e62c:	str	xzr, [sp, #344]
    e630:	ldr	x1, [sp, #376]
    e634:	ldr	x0, [sp, #360]
    e638:	orr	x0, x1, x0
    e63c:	cmp	x0, #0x0
    e640:	b.ne	e694 <__addtf3@@GCC_3.0+0x12ac>  // b.any
    e644:	ldr	x0, [sp, #368]
    e648:	str	x0, [sp, #336]
    e64c:	ldr	x0, [sp, #392]
    e650:	str	x0, [sp, #328]
    e654:	ldr	x1, [sp, #392]
    e658:	ldr	x0, [sp, #368]
    e65c:	orr	x0, x1, x0
    e660:	cmp	x0, #0x0
    e664:	b.ne	e688 <__addtf3@@GCC_3.0+0x12a0>  // b.any
    e668:	ldr	x0, [sp, #304]
    e66c:	and	x0, x0, #0xc00000
    e670:	cmp	x0, #0x800, lsl #12
    e674:	cset	w0, eq  // eq = none
    e678:	and	w0, w0, #0xff
    e67c:	and	x0, x0, #0xff
    e680:	str	x0, [sp, #384]
    e684:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e688:	ldr	x0, [sp, #272]
    e68c:	str	x0, [sp, #384]
    e690:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e694:	ldr	x1, [sp, #392]
    e698:	ldr	x0, [sp, #368]
    e69c:	orr	x0, x1, x0
    e6a0:	cmp	x0, #0x0
    e6a4:	b.ne	e6c4 <__addtf3@@GCC_3.0+0x12dc>  // b.any
    e6a8:	ldr	x0, [sp, #360]
    e6ac:	str	x0, [sp, #336]
    e6b0:	ldr	x0, [sp, #376]
    e6b4:	str	x0, [sp, #328]
    e6b8:	ldr	x0, [sp, #288]
    e6bc:	str	x0, [sp, #384]
    e6c0:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e6c4:	ldr	x1, [sp, #360]
    e6c8:	ldr	x0, [sp, #368]
    e6cc:	sub	x0, x1, x0
    e6d0:	str	x0, [sp, #240]
    e6d4:	ldr	x1, [sp, #376]
    e6d8:	ldr	x0, [sp, #392]
    e6dc:	sub	x1, x1, x0
    e6e0:	ldr	x2, [sp, #240]
    e6e4:	ldr	x0, [sp, #360]
    e6e8:	cmp	x2, x0
    e6ec:	cset	w0, hi  // hi = pmore
    e6f0:	and	w0, w0, #0xff
    e6f4:	and	x0, x0, #0xff
    e6f8:	sub	x0, x1, x0
    e6fc:	str	x0, [sp, #328]
    e700:	ldr	x0, [sp, #240]
    e704:	str	x0, [sp, #336]
    e708:	ldr	x0, [sp, #288]
    e70c:	str	x0, [sp, #384]
    e710:	ldr	x0, [sp, #328]
    e714:	and	x0, x0, #0x8000000000000
    e718:	cmp	x0, #0x0
    e71c:	b.eq	e770 <__addtf3@@GCC_3.0+0x1388>  // b.none
    e720:	ldr	x1, [sp, #368]
    e724:	ldr	x0, [sp, #360]
    e728:	sub	x0, x1, x0
    e72c:	str	x0, [sp, #232]
    e730:	ldr	x1, [sp, #392]
    e734:	ldr	x0, [sp, #376]
    e738:	sub	x1, x1, x0
    e73c:	ldr	x2, [sp, #232]
    e740:	ldr	x0, [sp, #368]
    e744:	cmp	x2, x0
    e748:	cset	w0, hi  // hi = pmore
    e74c:	and	w0, w0, #0xff
    e750:	and	x0, x0, #0xff
    e754:	sub	x0, x1, x0
    e758:	str	x0, [sp, #328]
    e75c:	ldr	x0, [sp, #232]
    e760:	str	x0, [sp, #336]
    e764:	ldr	x0, [sp, #272]
    e768:	str	x0, [sp, #384]
    e76c:	b	ec94 <__addtf3@@GCC_3.0+0x18ac>
    e770:	ldr	x1, [sp, #328]
    e774:	ldr	x0, [sp, #336]
    e778:	orr	x0, x1, x0
    e77c:	cmp	x0, #0x0
    e780:	b.ne	ec94 <__addtf3@@GCC_3.0+0x18ac>  // b.any
    e784:	ldr	x0, [sp, #304]
    e788:	and	x0, x0, #0xc00000
    e78c:	cmp	x0, #0x800, lsl #12
    e790:	cset	w0, eq  // eq = none
    e794:	and	w0, w0, #0xff
    e798:	and	x0, x0, #0xff
    e79c:	str	x0, [sp, #384]
    e7a0:	b	ec94 <__addtf3@@GCC_3.0+0x18ac>
    e7a4:	ldr	x1, [sp, #296]
    e7a8:	mov	x0, #0x7fff                	// #32767
    e7ac:	cmp	x1, x0
    e7b0:	b.ne	e7e4 <__addtf3@@GCC_3.0+0x13fc>  // b.any
    e7b4:	ldr	x1, [sp, #376]
    e7b8:	ldr	x0, [sp, #360]
    e7bc:	orr	x0, x1, x0
    e7c0:	cmp	x0, #0x0
    e7c4:	b.eq	e7e4 <__addtf3@@GCC_3.0+0x13fc>  // b.none
    e7c8:	ldr	x0, [sp, #376]
    e7cc:	and	x0, x0, #0x4000000000000
    e7d0:	cmp	x0, #0x0
    e7d4:	b.ne	e7e4 <__addtf3@@GCC_3.0+0x13fc>  // b.any
    e7d8:	ldr	w0, [sp, #356]
    e7dc:	orr	w0, w0, #0x1
    e7e0:	str	w0, [sp, #356]
    e7e4:	ldr	x1, [sp, #280]
    e7e8:	mov	x0, #0x7fff                	// #32767
    e7ec:	cmp	x1, x0
    e7f0:	b.ne	e824 <__addtf3@@GCC_3.0+0x143c>  // b.any
    e7f4:	ldr	x1, [sp, #392]
    e7f8:	ldr	x0, [sp, #368]
    e7fc:	orr	x0, x1, x0
    e800:	cmp	x0, #0x0
    e804:	b.eq	e824 <__addtf3@@GCC_3.0+0x143c>  // b.none
    e808:	ldr	x0, [sp, #392]
    e80c:	and	x0, x0, #0x4000000000000
    e810:	cmp	x0, #0x0
    e814:	b.ne	e824 <__addtf3@@GCC_3.0+0x143c>  // b.any
    e818:	ldr	w0, [sp, #356]
    e81c:	orr	w0, w0, #0x1
    e820:	str	w0, [sp, #356]
    e824:	mov	x0, #0x7fff                	// #32767
    e828:	str	x0, [sp, #344]
    e82c:	ldr	x1, [sp, #376]
    e830:	ldr	x0, [sp, #360]
    e834:	orr	x0, x1, x0
    e838:	cmp	x0, #0x0
    e83c:	b.ne	e8b8 <__addtf3@@GCC_3.0+0x14d0>  // b.any
    e840:	ldr	x1, [sp, #392]
    e844:	ldr	x0, [sp, #368]
    e848:	orr	x0, x1, x0
    e84c:	cmp	x0, #0x0
    e850:	b.ne	e89c <__addtf3@@GCC_3.0+0x14b4>  // b.any
    e854:	str	xzr, [sp, #384]
    e858:	mov	x0, #0xffffffffffffffff    	// #-1
    e85c:	str	x0, [sp, #336]
    e860:	mov	x0, #0xffffffffffff        	// #281474976710655
    e864:	str	x0, [sp, #328]
    e868:	ldr	x0, [sp, #328]
    e86c:	lsl	x1, x0, #3
    e870:	ldr	x0, [sp, #336]
    e874:	lsr	x0, x0, #61
    e878:	orr	x0, x1, x0
    e87c:	str	x0, [sp, #328]
    e880:	ldr	x0, [sp, #336]
    e884:	lsl	x0, x0, #3
    e888:	str	x0, [sp, #336]
    e88c:	ldr	w0, [sp, #356]
    e890:	orr	w0, w0, #0x1
    e894:	str	w0, [sp, #356]
    e898:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e89c:	ldr	x0, [sp, #272]
    e8a0:	str	x0, [sp, #384]
    e8a4:	ldr	x0, [sp, #368]
    e8a8:	str	x0, [sp, #336]
    e8ac:	ldr	x0, [sp, #392]
    e8b0:	str	x0, [sp, #328]
    e8b4:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e8b8:	ldr	x1, [sp, #392]
    e8bc:	ldr	x0, [sp, #368]
    e8c0:	orr	x0, x1, x0
    e8c4:	cmp	x0, #0x0
    e8c8:	b.ne	e8e8 <__addtf3@@GCC_3.0+0x1500>  // b.any
    e8cc:	ldr	x0, [sp, #288]
    e8d0:	str	x0, [sp, #384]
    e8d4:	ldr	x0, [sp, #360]
    e8d8:	str	x0, [sp, #336]
    e8dc:	ldr	x0, [sp, #376]
    e8e0:	str	x0, [sp, #328]
    e8e4:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e8e8:	ldr	x0, [sp, #360]
    e8ec:	lsr	x1, x0, #3
    e8f0:	ldr	x0, [sp, #376]
    e8f4:	lsl	x0, x0, #61
    e8f8:	orr	x0, x1, x0
    e8fc:	str	x0, [sp, #360]
    e900:	ldr	x0, [sp, #376]
    e904:	lsr	x0, x0, #3
    e908:	str	x0, [sp, #376]
    e90c:	ldr	x0, [sp, #368]
    e910:	lsr	x1, x0, #3
    e914:	ldr	x0, [sp, #392]
    e918:	lsl	x0, x0, #61
    e91c:	orr	x0, x1, x0
    e920:	str	x0, [sp, #368]
    e924:	ldr	x0, [sp, #392]
    e928:	lsr	x0, x0, #3
    e92c:	str	x0, [sp, #392]
    e930:	ldr	x0, [sp, #376]
    e934:	and	x0, x0, #0x800000000000
    e938:	cmp	x0, #0x0
    e93c:	b.eq	e96c <__addtf3@@GCC_3.0+0x1584>  // b.none
    e940:	ldr	x0, [sp, #392]
    e944:	and	x0, x0, #0x800000000000
    e948:	cmp	x0, #0x0
    e94c:	b.ne	e96c <__addtf3@@GCC_3.0+0x1584>  // b.any
    e950:	ldr	x0, [sp, #272]
    e954:	str	x0, [sp, #384]
    e958:	ldr	x0, [sp, #368]
    e95c:	str	x0, [sp, #336]
    e960:	ldr	x0, [sp, #392]
    e964:	str	x0, [sp, #328]
    e968:	b	e984 <__addtf3@@GCC_3.0+0x159c>
    e96c:	ldr	x0, [sp, #288]
    e970:	str	x0, [sp, #384]
    e974:	ldr	x0, [sp, #360]
    e978:	str	x0, [sp, #336]
    e97c:	ldr	x0, [sp, #376]
    e980:	str	x0, [sp, #328]
    e984:	mov	x0, #0x3                   	// #3
    e988:	str	x0, [sp, #248]
    e98c:	ldr	x0, [sp, #328]
    e990:	lsl	x1, x0, #3
    e994:	ldr	x0, [sp, #336]
    e998:	lsr	x0, x0, #61
    e99c:	orr	x0, x1, x0
    e9a0:	str	x0, [sp, #328]
    e9a4:	ldr	x0, [sp, #336]
    e9a8:	lsl	x0, x0, #3
    e9ac:	str	x0, [sp, #336]
    e9b0:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    e9b4:	ldr	x0, [sp, #296]
    e9b8:	str	x0, [sp, #344]
    e9bc:	ldr	x1, [sp, #360]
    e9c0:	ldr	x0, [sp, #368]
    e9c4:	sub	x0, x1, x0
    e9c8:	str	x0, [sp, #264]
    e9cc:	ldr	x1, [sp, #376]
    e9d0:	ldr	x0, [sp, #392]
    e9d4:	sub	x1, x1, x0
    e9d8:	ldr	x2, [sp, #264]
    e9dc:	ldr	x0, [sp, #360]
    e9e0:	cmp	x2, x0
    e9e4:	cset	w0, hi  // hi = pmore
    e9e8:	and	w0, w0, #0xff
    e9ec:	and	x0, x0, #0xff
    e9f0:	sub	x0, x1, x0
    e9f4:	str	x0, [sp, #328]
    e9f8:	ldr	x0, [sp, #264]
    e9fc:	str	x0, [sp, #336]
    ea00:	ldr	x0, [sp, #288]
    ea04:	str	x0, [sp, #384]
    ea08:	ldr	x0, [sp, #328]
    ea0c:	and	x0, x0, #0x8000000000000
    ea10:	cmp	x0, #0x0
    ea14:	b.eq	ea68 <__addtf3@@GCC_3.0+0x1680>  // b.none
    ea18:	ldr	x1, [sp, #368]
    ea1c:	ldr	x0, [sp, #360]
    ea20:	sub	x0, x1, x0
    ea24:	str	x0, [sp, #256]
    ea28:	ldr	x1, [sp, #392]
    ea2c:	ldr	x0, [sp, #376]
    ea30:	sub	x1, x1, x0
    ea34:	ldr	x2, [sp, #256]
    ea38:	ldr	x0, [sp, #368]
    ea3c:	cmp	x2, x0
    ea40:	cset	w0, hi  // hi = pmore
    ea44:	and	w0, w0, #0xff
    ea48:	and	x0, x0, #0xff
    ea4c:	sub	x0, x1, x0
    ea50:	str	x0, [sp, #328]
    ea54:	ldr	x0, [sp, #256]
    ea58:	str	x0, [sp, #336]
    ea5c:	ldr	x0, [sp, #272]
    ea60:	str	x0, [sp, #384]
    ea64:	b	eac0 <__addtf3@@GCC_3.0+0x16d8>
    ea68:	ldr	x1, [sp, #328]
    ea6c:	ldr	x0, [sp, #336]
    ea70:	orr	x0, x1, x0
    ea74:	cmp	x0, #0x0
    ea78:	b.ne	eac0 <__addtf3@@GCC_3.0+0x16d8>  // b.any
    ea7c:	str	xzr, [sp, #344]
    ea80:	ldr	x0, [sp, #304]
    ea84:	and	x0, x0, #0xc00000
    ea88:	cmp	x0, #0x800, lsl #12
    ea8c:	cset	w0, eq  // eq = none
    ea90:	and	w0, w0, #0xff
    ea94:	and	x0, x0, #0xff
    ea98:	str	x0, [sp, #384]
    ea9c:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    eaa0:	ldr	x0, [sp, #328]
    eaa4:	and	x0, x0, #0x8000000000000
    eaa8:	cmp	x0, #0x0
    eaac:	b.eq	ec9c <__addtf3@@GCC_3.0+0x18b4>  // b.none
    eab0:	ldr	x0, [sp, #328]
    eab4:	and	x0, x0, #0x7ffffffffffff
    eab8:	str	x0, [sp, #328]
    eabc:	b	eac4 <__addtf3@@GCC_3.0+0x16dc>
    eac0:	nop
    eac4:	ldr	x0, [sp, #328]
    eac8:	cmp	x0, #0x0
    eacc:	b.eq	eae0 <__addtf3@@GCC_3.0+0x16f8>  // b.none
    ead0:	ldr	x0, [sp, #328]
    ead4:	clz	x0, x0
    ead8:	str	w0, [sp, #316]
    eadc:	b	eaf8 <__addtf3@@GCC_3.0+0x1710>
    eae0:	ldr	x0, [sp, #336]
    eae4:	clz	x0, x0
    eae8:	str	w0, [sp, #316]
    eaec:	ldr	w0, [sp, #316]
    eaf0:	add	w0, w0, #0x40
    eaf4:	str	w0, [sp, #316]
    eaf8:	ldr	w0, [sp, #316]
    eafc:	sub	w0, w0, #0xc
    eb00:	str	w0, [sp, #316]
    eb04:	ldr	w0, [sp, #316]
    eb08:	cmp	w0, #0x3f
    eb0c:	b.gt	eb4c <__addtf3@@GCC_3.0+0x1764>
    eb10:	ldr	w0, [sp, #316]
    eb14:	ldr	x1, [sp, #328]
    eb18:	lsl	x1, x1, x0
    eb1c:	mov	w2, #0x40                  	// #64
    eb20:	ldr	w0, [sp, #316]
    eb24:	sub	w0, w2, w0
    eb28:	ldr	x2, [sp, #336]
    eb2c:	lsr	x0, x2, x0
    eb30:	orr	x0, x1, x0
    eb34:	str	x0, [sp, #328]
    eb38:	ldr	w0, [sp, #316]
    eb3c:	ldr	x1, [sp, #336]
    eb40:	lsl	x0, x1, x0
    eb44:	str	x0, [sp, #336]
    eb48:	b	eb64 <__addtf3@@GCC_3.0+0x177c>
    eb4c:	ldr	w0, [sp, #316]
    eb50:	sub	w0, w0, #0x40
    eb54:	ldr	x1, [sp, #336]
    eb58:	lsl	x0, x1, x0
    eb5c:	str	x0, [sp, #328]
    eb60:	str	xzr, [sp, #336]
    eb64:	ldrsw	x0, [sp, #316]
    eb68:	ldr	x1, [sp, #344]
    eb6c:	cmp	x1, x0
    eb70:	b.gt	ec5c <__addtf3@@GCC_3.0+0x1874>
    eb74:	ldr	w0, [sp, #316]
    eb78:	ldr	x1, [sp, #344]
    eb7c:	sub	w0, w0, w1
    eb80:	add	w0, w0, #0x1
    eb84:	str	w0, [sp, #316]
    eb88:	ldr	w0, [sp, #316]
    eb8c:	cmp	w0, #0x3f
    eb90:	b.gt	ebf8 <__addtf3@@GCC_3.0+0x1810>
    eb94:	mov	w1, #0x40                  	// #64
    eb98:	ldr	w0, [sp, #316]
    eb9c:	sub	w0, w1, w0
    eba0:	ldr	x1, [sp, #328]
    eba4:	lsl	x1, x1, x0
    eba8:	ldr	w0, [sp, #316]
    ebac:	ldr	x2, [sp, #336]
    ebb0:	lsr	x0, x2, x0
    ebb4:	orr	x1, x1, x0
    ebb8:	mov	w2, #0x40                  	// #64
    ebbc:	ldr	w0, [sp, #316]
    ebc0:	sub	w0, w2, w0
    ebc4:	ldr	x2, [sp, #336]
    ebc8:	lsl	x0, x2, x0
    ebcc:	cmp	x0, #0x0
    ebd0:	cset	w0, ne  // ne = any
    ebd4:	and	w0, w0, #0xff
    ebd8:	sxtw	x0, w0
    ebdc:	orr	x0, x1, x0
    ebe0:	str	x0, [sp, #336]
    ebe4:	ldr	w0, [sp, #316]
    ebe8:	ldr	x1, [sp, #328]
    ebec:	lsr	x0, x1, x0
    ebf0:	str	x0, [sp, #328]
    ebf4:	b	ec54 <__addtf3@@GCC_3.0+0x186c>
    ebf8:	ldr	w0, [sp, #316]
    ebfc:	sub	w0, w0, #0x40
    ec00:	ldr	x1, [sp, #328]
    ec04:	lsr	x1, x1, x0
    ec08:	ldr	w0, [sp, #316]
    ec0c:	cmp	w0, #0x40
    ec10:	b.eq	ec2c <__addtf3@@GCC_3.0+0x1844>  // b.none
    ec14:	mov	w2, #0x80                  	// #128
    ec18:	ldr	w0, [sp, #316]
    ec1c:	sub	w0, w2, w0
    ec20:	ldr	x2, [sp, #328]
    ec24:	lsl	x0, x2, x0
    ec28:	b	ec30 <__addtf3@@GCC_3.0+0x1848>
    ec2c:	mov	x0, #0x0                   	// #0
    ec30:	ldr	x2, [sp, #336]
    ec34:	orr	x0, x0, x2
    ec38:	cmp	x0, #0x0
    ec3c:	cset	w0, ne  // ne = any
    ec40:	and	w0, w0, #0xff
    ec44:	and	x0, x0, #0xff
    ec48:	orr	x0, x1, x0
    ec4c:	str	x0, [sp, #336]
    ec50:	str	xzr, [sp, #328]
    ec54:	str	xzr, [sp, #344]
    ec58:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ec5c:	ldrsw	x0, [sp, #316]
    ec60:	ldr	x1, [sp, #344]
    ec64:	sub	x0, x1, x0
    ec68:	str	x0, [sp, #344]
    ec6c:	ldr	x0, [sp, #328]
    ec70:	and	x0, x0, #0xfff7ffffffffffff
    ec74:	str	x0, [sp, #328]
    ec78:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ec7c:	nop
    ec80:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ec84:	nop
    ec88:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ec8c:	nop
    ec90:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ec94:	nop
    ec98:	b	eca0 <__addtf3@@GCC_3.0+0x18b8>
    ec9c:	nop
    eca0:	ldr	x0, [sp, #344]
    eca4:	cmp	x0, #0x0
    eca8:	b.ne	ecc8 <__addtf3@@GCC_3.0+0x18e0>  // b.any
    ecac:	ldr	x1, [sp, #328]
    ecb0:	ldr	x0, [sp, #336]
    ecb4:	orr	x0, x1, x0
    ecb8:	cmp	x0, #0x0
    ecbc:	b.eq	ecc8 <__addtf3@@GCC_3.0+0x18e0>  // b.none
    ecc0:	mov	w0, #0x1                   	// #1
    ecc4:	b	eccc <__addtf3@@GCC_3.0+0x18e4>
    ecc8:	mov	w0, #0x0                   	// #0
    eccc:	str	w0, [sp, #148]
    ecd0:	ldr	x0, [sp, #336]
    ecd4:	and	x0, x0, #0x7
    ecd8:	cmp	x0, #0x0
    ecdc:	b.eq	ee24 <__addtf3@@GCC_3.0+0x1a3c>  // b.none
    ece0:	ldr	w0, [sp, #356]
    ece4:	orr	w0, w0, #0x10
    ece8:	str	w0, [sp, #356]
    ecec:	ldr	x0, [sp, #304]
    ecf0:	and	x0, x0, #0xc00000
    ecf4:	cmp	x0, #0xc00, lsl #12
    ecf8:	b.eq	ee2c <__addtf3@@GCC_3.0+0x1a44>  // b.none
    ecfc:	cmp	x0, #0xc00, lsl #12
    ed00:	b.hi	ee30 <__addtf3@@GCC_3.0+0x1a48>  // b.pmore
    ed04:	cmp	x0, #0x800, lsl #12
    ed08:	b.eq	edcc <__addtf3@@GCC_3.0+0x19e4>  // b.none
    ed0c:	cmp	x0, #0x800, lsl #12
    ed10:	b.hi	ee30 <__addtf3@@GCC_3.0+0x1a48>  // b.pmore
    ed14:	cmp	x0, #0x0
    ed18:	b.eq	ed28 <__addtf3@@GCC_3.0+0x1940>  // b.none
    ed1c:	cmp	x0, #0x400, lsl #12
    ed20:	b.eq	ed74 <__addtf3@@GCC_3.0+0x198c>  // b.none
    ed24:	b	ee30 <__addtf3@@GCC_3.0+0x1a48>
    ed28:	ldr	x0, [sp, #336]
    ed2c:	and	x0, x0, #0xf
    ed30:	cmp	x0, #0x4
    ed34:	b.eq	ee2c <__addtf3@@GCC_3.0+0x1a44>  // b.none
    ed38:	ldr	x0, [sp, #336]
    ed3c:	add	x0, x0, #0x4
    ed40:	str	x0, [sp, #120]
    ed44:	ldr	x1, [sp, #120]
    ed48:	ldr	x0, [sp, #336]
    ed4c:	cmp	x1, x0
    ed50:	cset	w0, cc  // cc = lo, ul, last
    ed54:	and	w0, w0, #0xff
    ed58:	and	x0, x0, #0xff
    ed5c:	ldr	x1, [sp, #328]
    ed60:	add	x0, x1, x0
    ed64:	str	x0, [sp, #328]
    ed68:	ldr	x0, [sp, #120]
    ed6c:	str	x0, [sp, #336]
    ed70:	b	ee2c <__addtf3@@GCC_3.0+0x1a44>
    ed74:	ldr	x0, [sp, #384]
    ed78:	cmp	x0, #0x0
    ed7c:	b.ne	ee2c <__addtf3@@GCC_3.0+0x1a44>  // b.any
    ed80:	ldr	x0, [sp, #336]
    ed84:	and	x0, x0, #0x7
    ed88:	cmp	x0, #0x0
    ed8c:	b.eq	ee2c <__addtf3@@GCC_3.0+0x1a44>  // b.none
    ed90:	ldr	x0, [sp, #336]
    ed94:	add	x0, x0, #0x8
    ed98:	str	x0, [sp, #128]
    ed9c:	ldr	x1, [sp, #128]
    eda0:	ldr	x0, [sp, #336]
    eda4:	cmp	x1, x0
    eda8:	cset	w0, cc  // cc = lo, ul, last
    edac:	and	w0, w0, #0xff
    edb0:	and	x0, x0, #0xff
    edb4:	ldr	x1, [sp, #328]
    edb8:	add	x0, x1, x0
    edbc:	str	x0, [sp, #328]
    edc0:	ldr	x0, [sp, #128]
    edc4:	str	x0, [sp, #336]
    edc8:	b	ee2c <__addtf3@@GCC_3.0+0x1a44>
    edcc:	ldr	x0, [sp, #384]
    edd0:	cmp	x0, #0x0
    edd4:	b.eq	ee2c <__addtf3@@GCC_3.0+0x1a44>  // b.none
    edd8:	ldr	x0, [sp, #336]
    eddc:	and	x0, x0, #0x7
    ede0:	cmp	x0, #0x0
    ede4:	b.eq	ee2c <__addtf3@@GCC_3.0+0x1a44>  // b.none
    ede8:	ldr	x0, [sp, #336]
    edec:	add	x0, x0, #0x8
    edf0:	str	x0, [sp, #136]
    edf4:	ldr	x1, [sp, #136]
    edf8:	ldr	x0, [sp, #336]
    edfc:	cmp	x1, x0
    ee00:	cset	w0, cc  // cc = lo, ul, last
    ee04:	and	w0, w0, #0xff
    ee08:	and	x0, x0, #0xff
    ee0c:	ldr	x1, [sp, #328]
    ee10:	add	x0, x1, x0
    ee14:	str	x0, [sp, #328]
    ee18:	ldr	x0, [sp, #136]
    ee1c:	str	x0, [sp, #336]
    ee20:	b	ee2c <__addtf3@@GCC_3.0+0x1a44>
    ee24:	nop
    ee28:	b	ee30 <__addtf3@@GCC_3.0+0x1a48>
    ee2c:	nop
    ee30:	ldr	w0, [sp, #148]
    ee34:	cmp	w0, #0x0
    ee38:	b.eq	ee68 <__addtf3@@GCC_3.0+0x1a80>  // b.none
    ee3c:	ldr	w0, [sp, #356]
    ee40:	and	w0, w0, #0x10
    ee44:	cmp	w0, #0x0
    ee48:	b.ne	ee5c <__addtf3@@GCC_3.0+0x1a74>  // b.any
    ee4c:	ldr	x0, [sp, #304]
    ee50:	and	x0, x0, #0x800
    ee54:	cmp	x0, #0x0
    ee58:	b.eq	ee68 <__addtf3@@GCC_3.0+0x1a80>  // b.none
    ee5c:	ldr	w0, [sp, #356]
    ee60:	orr	w0, w0, #0x8
    ee64:	str	w0, [sp, #356]
    ee68:	ldr	x0, [sp, #328]
    ee6c:	and	x0, x0, #0x8000000000000
    ee70:	cmp	x0, #0x0
    ee74:	b.eq	ef2c <__addtf3@@GCC_3.0+0x1b44>  // b.none
    ee78:	ldr	x0, [sp, #328]
    ee7c:	and	x0, x0, #0xfff7ffffffffffff
    ee80:	str	x0, [sp, #328]
    ee84:	ldr	x0, [sp, #344]
    ee88:	add	x0, x0, #0x1
    ee8c:	str	x0, [sp, #344]
    ee90:	ldr	x1, [sp, #344]
    ee94:	mov	x0, #0x7fff                	// #32767
    ee98:	cmp	x1, x0
    ee9c:	b.ne	ef2c <__addtf3@@GCC_3.0+0x1b44>  // b.any
    eea0:	ldr	x0, [sp, #304]
    eea4:	and	x0, x0, #0xc00000
    eea8:	cmp	x0, #0x0
    eeac:	b.eq	eee8 <__addtf3@@GCC_3.0+0x1b00>  // b.none
    eeb0:	ldr	x0, [sp, #304]
    eeb4:	and	x0, x0, #0xc00000
    eeb8:	cmp	x0, #0x400, lsl #12
    eebc:	b.ne	eecc <__addtf3@@GCC_3.0+0x1ae4>  // b.any
    eec0:	ldr	x0, [sp, #384]
    eec4:	cmp	x0, #0x0
    eec8:	b.eq	eee8 <__addtf3@@GCC_3.0+0x1b00>  // b.none
    eecc:	ldr	x0, [sp, #304]
    eed0:	and	x0, x0, #0xc00000
    eed4:	cmp	x0, #0x800, lsl #12
    eed8:	b.ne	eefc <__addtf3@@GCC_3.0+0x1b14>  // b.any
    eedc:	ldr	x0, [sp, #384]
    eee0:	cmp	x0, #0x0
    eee4:	b.eq	eefc <__addtf3@@GCC_3.0+0x1b14>  // b.none
    eee8:	mov	x0, #0x7fff                	// #32767
    eeec:	str	x0, [sp, #344]
    eef0:	str	xzr, [sp, #336]
    eef4:	str	xzr, [sp, #328]
    eef8:	b	ef14 <__addtf3@@GCC_3.0+0x1b2c>
    eefc:	mov	x0, #0x7ffe                	// #32766
    ef00:	str	x0, [sp, #344]
    ef04:	mov	x0, #0xffffffffffffffff    	// #-1
    ef08:	str	x0, [sp, #336]
    ef0c:	mov	x0, #0xffffffffffffffff    	// #-1
    ef10:	str	x0, [sp, #328]
    ef14:	ldr	w0, [sp, #356]
    ef18:	orr	w0, w0, #0x10
    ef1c:	str	w0, [sp, #356]
    ef20:	ldr	w0, [sp, #356]
    ef24:	orr	w0, w0, #0x4
    ef28:	str	w0, [sp, #356]
    ef2c:	ldr	x0, [sp, #336]
    ef30:	lsr	x1, x0, #3
    ef34:	ldr	x0, [sp, #328]
    ef38:	lsl	x0, x0, #61
    ef3c:	orr	x0, x1, x0
    ef40:	str	x0, [sp, #336]
    ef44:	ldr	x0, [sp, #328]
    ef48:	lsr	x0, x0, #3
    ef4c:	str	x0, [sp, #328]
    ef50:	ldr	x1, [sp, #344]
    ef54:	mov	x0, #0x7fff                	// #32767
    ef58:	cmp	x1, x0
    ef5c:	b.ne	ef80 <__addtf3@@GCC_3.0+0x1b98>  // b.any
    ef60:	ldr	x1, [sp, #328]
    ef64:	ldr	x0, [sp, #336]
    ef68:	orr	x0, x1, x0
    ef6c:	cmp	x0, #0x0
    ef70:	b.eq	ef80 <__addtf3@@GCC_3.0+0x1b98>  // b.none
    ef74:	ldr	x0, [sp, #328]
    ef78:	orr	x0, x0, #0x800000000000
    ef7c:	str	x0, [sp, #328]
    ef80:	ldr	x0, [sp, #336]
    ef84:	str	x0, [sp, #48]
    ef88:	ldr	x0, [sp, #328]
    ef8c:	and	x1, x0, #0xffffffffffff
    ef90:	ldr	x0, [sp, #56]
    ef94:	bfxil	x0, x1, #0, #48
    ef98:	str	x0, [sp, #56]
    ef9c:	ldr	x0, [sp, #344]
    efa0:	and	w0, w0, #0x7fff
    efa4:	and	w1, w0, #0xffff
    efa8:	ldrh	w0, [sp, #62]
    efac:	bfxil	w0, w1, #0, #15
    efb0:	strh	w0, [sp, #62]
    efb4:	ldr	x0, [sp, #384]
    efb8:	and	w0, w0, #0x1
    efbc:	and	w1, w0, #0xff
    efc0:	ldrb	w0, [sp, #63]
    efc4:	bfi	w0, w1, #7, #1
    efc8:	strb	w0, [sp, #63]
    efcc:	ldr	q0, [sp, #48]
    efd0:	str	q0, [sp, #96]
    efd4:	ldrsw	x0, [sp, #356]
    efd8:	cmp	x0, #0x0
    efdc:	b.eq	efe8 <__addtf3@@GCC_3.0+0x1c00>  // b.none
    efe0:	ldr	w0, [sp, #356]
    efe4:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
    efe8:	ldr	q0, [sp, #96]
    efec:	ldp	x29, x30, [sp], #400
    eff0:	ret

000000000000eff4 <__divtf3@@GCC_3.0>:
    eff4:	sub	sp, sp, #0x290
    eff8:	stp	x29, x30, [sp]
    effc:	mov	x29, sp
    f000:	str	q0, [sp, #32]
    f004:	str	q1, [sp, #16]
    f008:	str	wzr, [sp, #564]
    f00c:	str	xzr, [sp, #400]
    f010:	mrs	x0, fpcr
    f014:	str	x0, [sp, #400]
    f018:	ldr	q0, [sp, #32]
    f01c:	str	q0, [sp, #80]
    f020:	ldr	x0, [sp, #80]
    f024:	str	x0, [sp, #584]
    f028:	ldr	x0, [sp, #88]
    f02c:	ubfx	x0, x0, #0, #48
    f030:	str	x0, [sp, #592]
    f034:	ldrh	w0, [sp, #94]
    f038:	ubfx	x0, x0, #0, #15
    f03c:	and	w0, w0, #0xffff
    f040:	and	x0, x0, #0xffff
    f044:	str	x0, [sp, #568]
    f048:	ldrb	w0, [sp, #95]
    f04c:	ubfx	x0, x0, #7, #1
    f050:	and	w0, w0, #0xff
    f054:	and	x0, x0, #0xff
    f058:	str	x0, [sp, #392]
    f05c:	ldr	x0, [sp, #568]
    f060:	cmp	x0, #0x0
    f064:	b.eq	f0c0 <__divtf3@@GCC_3.0+0xcc>  // b.none
    f068:	ldr	x1, [sp, #568]
    f06c:	mov	x0, #0x7fff                	// #32767
    f070:	cmp	x1, x0
    f074:	b.eq	f1b4 <__divtf3@@GCC_3.0+0x1c0>  // b.none
    f078:	ldr	x0, [sp, #592]
    f07c:	orr	x0, x0, #0x1000000000000
    f080:	str	x0, [sp, #592]
    f084:	ldr	x0, [sp, #592]
    f088:	lsl	x1, x0, #3
    f08c:	ldr	x0, [sp, #584]
    f090:	lsr	x0, x0, #61
    f094:	orr	x0, x1, x0
    f098:	str	x0, [sp, #592]
    f09c:	ldr	x0, [sp, #584]
    f0a0:	lsl	x0, x0, #3
    f0a4:	str	x0, [sp, #584]
    f0a8:	ldr	x1, [sp, #568]
    f0ac:	mov	x0, #0xffffffffffffc001    	// #-16383
    f0b0:	add	x0, x1, x0
    f0b4:	str	x0, [sp, #568]
    f0b8:	str	xzr, [sp, #576]
    f0bc:	b	f1f8 <__divtf3@@GCC_3.0+0x204>
    f0c0:	ldr	x1, [sp, #592]
    f0c4:	ldr	x0, [sp, #584]
    f0c8:	orr	x0, x1, x0
    f0cc:	cmp	x0, #0x0
    f0d0:	b.ne	f0e0 <__divtf3@@GCC_3.0+0xec>  // b.any
    f0d4:	mov	x0, #0x1                   	// #1
    f0d8:	str	x0, [sp, #576]
    f0dc:	b	f1f8 <__divtf3@@GCC_3.0+0x204>
    f0e0:	ldr	x0, [sp, #592]
    f0e4:	cmp	x0, #0x0
    f0e8:	b.eq	f100 <__divtf3@@GCC_3.0+0x10c>  // b.none
    f0ec:	ldr	x0, [sp, #592]
    f0f0:	clz	x0, x0
    f0f4:	sxtw	x0, w0
    f0f8:	str	x0, [sp, #536]
    f0fc:	b	f11c <__divtf3@@GCC_3.0+0x128>
    f100:	ldr	x0, [sp, #584]
    f104:	clz	x0, x0
    f108:	sxtw	x0, w0
    f10c:	str	x0, [sp, #536]
    f110:	ldr	x0, [sp, #536]
    f114:	add	x0, x0, #0x40
    f118:	str	x0, [sp, #536]
    f11c:	ldr	x0, [sp, #536]
    f120:	sub	x0, x0, #0xf
    f124:	str	x0, [sp, #536]
    f128:	ldr	x0, [sp, #536]
    f12c:	cmp	x0, #0x3c
    f130:	b.gt	f17c <__divtf3@@GCC_3.0+0x188>
    f134:	ldr	x0, [sp, #536]
    f138:	add	w0, w0, #0x3
    f13c:	ldr	x1, [sp, #592]
    f140:	lsl	x1, x1, x0
    f144:	ldr	x0, [sp, #536]
    f148:	mov	w2, w0
    f14c:	mov	w0, #0x3d                  	// #61
    f150:	sub	w0, w0, w2
    f154:	ldr	x2, [sp, #584]
    f158:	lsr	x0, x2, x0
    f15c:	orr	x0, x1, x0
    f160:	str	x0, [sp, #592]
    f164:	ldr	x0, [sp, #536]
    f168:	add	w0, w0, #0x3
    f16c:	ldr	x1, [sp, #584]
    f170:	lsl	x0, x1, x0
    f174:	str	x0, [sp, #584]
    f178:	b	f194 <__divtf3@@GCC_3.0+0x1a0>
    f17c:	ldr	x0, [sp, #536]
    f180:	sub	w0, w0, #0x3d
    f184:	ldr	x1, [sp, #584]
    f188:	lsl	x0, x1, x0
    f18c:	str	x0, [sp, #592]
    f190:	str	xzr, [sp, #584]
    f194:	ldr	x1, [sp, #536]
    f198:	mov	x0, #0x3ffe                	// #16382
    f19c:	add	x0, x1, x0
    f1a0:	ldr	x1, [sp, #568]
    f1a4:	sub	x0, x1, x0
    f1a8:	str	x0, [sp, #568]
    f1ac:	str	xzr, [sp, #576]
    f1b0:	b	f1f8 <__divtf3@@GCC_3.0+0x204>
    f1b4:	ldr	x1, [sp, #592]
    f1b8:	ldr	x0, [sp, #584]
    f1bc:	orr	x0, x1, x0
    f1c0:	cmp	x0, #0x0
    f1c4:	b.ne	f1d4 <__divtf3@@GCC_3.0+0x1e0>  // b.any
    f1c8:	mov	x0, #0x2                   	// #2
    f1cc:	str	x0, [sp, #576]
    f1d0:	b	f1f8 <__divtf3@@GCC_3.0+0x204>
    f1d4:	mov	x0, #0x3                   	// #3
    f1d8:	str	x0, [sp, #576]
    f1dc:	ldr	x0, [sp, #592]
    f1e0:	and	x0, x0, #0x800000000000
    f1e4:	cmp	x0, #0x0
    f1e8:	b.ne	f1f8 <__divtf3@@GCC_3.0+0x204>  // b.any
    f1ec:	ldr	w0, [sp, #564]
    f1f0:	orr	w0, w0, #0x1
    f1f4:	str	w0, [sp, #564]
    f1f8:	nop
    f1fc:	ldr	q0, [sp, #16]
    f200:	str	q0, [sp, #64]
    f204:	ldr	x0, [sp, #64]
    f208:	str	x0, [sp, #616]
    f20c:	ldr	x0, [sp, #72]
    f210:	ubfx	x0, x0, #0, #48
    f214:	str	x0, [sp, #624]
    f218:	ldrh	w0, [sp, #78]
    f21c:	ubfx	x0, x0, #0, #15
    f220:	and	w0, w0, #0xffff
    f224:	and	x0, x0, #0xffff
    f228:	str	x0, [sp, #600]
    f22c:	ldrb	w0, [sp, #79]
    f230:	ubfx	x0, x0, #7, #1
    f234:	and	w0, w0, #0xff
    f238:	and	x0, x0, #0xff
    f23c:	str	x0, [sp, #384]
    f240:	ldr	x0, [sp, #600]
    f244:	cmp	x0, #0x0
    f248:	b.eq	f2a4 <__divtf3@@GCC_3.0+0x2b0>  // b.none
    f24c:	ldr	x1, [sp, #600]
    f250:	mov	x0, #0x7fff                	// #32767
    f254:	cmp	x1, x0
    f258:	b.eq	f398 <__divtf3@@GCC_3.0+0x3a4>  // b.none
    f25c:	ldr	x0, [sp, #624]
    f260:	orr	x0, x0, #0x1000000000000
    f264:	str	x0, [sp, #624]
    f268:	ldr	x0, [sp, #624]
    f26c:	lsl	x1, x0, #3
    f270:	ldr	x0, [sp, #616]
    f274:	lsr	x0, x0, #61
    f278:	orr	x0, x1, x0
    f27c:	str	x0, [sp, #624]
    f280:	ldr	x0, [sp, #616]
    f284:	lsl	x0, x0, #3
    f288:	str	x0, [sp, #616]
    f28c:	ldr	x1, [sp, #600]
    f290:	mov	x0, #0xffffffffffffc001    	// #-16383
    f294:	add	x0, x1, x0
    f298:	str	x0, [sp, #600]
    f29c:	str	xzr, [sp, #608]
    f2a0:	b	f3dc <__divtf3@@GCC_3.0+0x3e8>
    f2a4:	ldr	x1, [sp, #624]
    f2a8:	ldr	x0, [sp, #616]
    f2ac:	orr	x0, x1, x0
    f2b0:	cmp	x0, #0x0
    f2b4:	b.ne	f2c4 <__divtf3@@GCC_3.0+0x2d0>  // b.any
    f2b8:	mov	x0, #0x1                   	// #1
    f2bc:	str	x0, [sp, #608]
    f2c0:	b	f3dc <__divtf3@@GCC_3.0+0x3e8>
    f2c4:	ldr	x0, [sp, #624]
    f2c8:	cmp	x0, #0x0
    f2cc:	b.eq	f2e4 <__divtf3@@GCC_3.0+0x2f0>  // b.none
    f2d0:	ldr	x0, [sp, #624]
    f2d4:	clz	x0, x0
    f2d8:	sxtw	x0, w0
    f2dc:	str	x0, [sp, #528]
    f2e0:	b	f300 <__divtf3@@GCC_3.0+0x30c>
    f2e4:	ldr	x0, [sp, #616]
    f2e8:	clz	x0, x0
    f2ec:	sxtw	x0, w0
    f2f0:	str	x0, [sp, #528]
    f2f4:	ldr	x0, [sp, #528]
    f2f8:	add	x0, x0, #0x40
    f2fc:	str	x0, [sp, #528]
    f300:	ldr	x0, [sp, #528]
    f304:	sub	x0, x0, #0xf
    f308:	str	x0, [sp, #528]
    f30c:	ldr	x0, [sp, #528]
    f310:	cmp	x0, #0x3c
    f314:	b.gt	f360 <__divtf3@@GCC_3.0+0x36c>
    f318:	ldr	x0, [sp, #528]
    f31c:	add	w0, w0, #0x3
    f320:	ldr	x1, [sp, #624]
    f324:	lsl	x1, x1, x0
    f328:	ldr	x0, [sp, #528]
    f32c:	mov	w2, w0
    f330:	mov	w0, #0x3d                  	// #61
    f334:	sub	w0, w0, w2
    f338:	ldr	x2, [sp, #616]
    f33c:	lsr	x0, x2, x0
    f340:	orr	x0, x1, x0
    f344:	str	x0, [sp, #624]
    f348:	ldr	x0, [sp, #528]
    f34c:	add	w0, w0, #0x3
    f350:	ldr	x1, [sp, #616]
    f354:	lsl	x0, x1, x0
    f358:	str	x0, [sp, #616]
    f35c:	b	f378 <__divtf3@@GCC_3.0+0x384>
    f360:	ldr	x0, [sp, #528]
    f364:	sub	w0, w0, #0x3d
    f368:	ldr	x1, [sp, #616]
    f36c:	lsl	x0, x1, x0
    f370:	str	x0, [sp, #624]
    f374:	str	xzr, [sp, #616]
    f378:	ldr	x1, [sp, #528]
    f37c:	mov	x0, #0x3ffe                	// #16382
    f380:	add	x0, x1, x0
    f384:	ldr	x1, [sp, #600]
    f388:	sub	x0, x1, x0
    f38c:	str	x0, [sp, #600]
    f390:	str	xzr, [sp, #608]
    f394:	b	f3dc <__divtf3@@GCC_3.0+0x3e8>
    f398:	ldr	x1, [sp, #624]
    f39c:	ldr	x0, [sp, #616]
    f3a0:	orr	x0, x1, x0
    f3a4:	cmp	x0, #0x0
    f3a8:	b.ne	f3b8 <__divtf3@@GCC_3.0+0x3c4>  // b.any
    f3ac:	mov	x0, #0x2                   	// #2
    f3b0:	str	x0, [sp, #608]
    f3b4:	b	f3dc <__divtf3@@GCC_3.0+0x3e8>
    f3b8:	mov	x0, #0x3                   	// #3
    f3bc:	str	x0, [sp, #608]
    f3c0:	ldr	x0, [sp, #624]
    f3c4:	and	x0, x0, #0x800000000000
    f3c8:	cmp	x0, #0x0
    f3cc:	b.ne	f3dc <__divtf3@@GCC_3.0+0x3e8>  // b.any
    f3d0:	ldr	w0, [sp, #564]
    f3d4:	orr	w0, w0, #0x1
    f3d8:	str	w0, [sp, #564]
    f3dc:	nop
    f3e0:	ldr	x1, [sp, #392]
    f3e4:	ldr	x0, [sp, #384]
    f3e8:	eor	x0, x1, x0
    f3ec:	str	x0, [sp, #648]
    f3f0:	ldr	x1, [sp, #568]
    f3f4:	ldr	x0, [sp, #600]
    f3f8:	sub	x0, x1, x0
    f3fc:	str	x0, [sp, #640]
    f400:	ldr	x0, [sp, #576]
    f404:	lsl	x1, x0, #2
    f408:	ldr	x0, [sp, #608]
    f40c:	orr	x0, x1, x0
    f410:	cmp	x0, #0xf
    f414:	b.eq	fdcc <__divtf3@@GCC_3.0+0xdd8>  // b.none
    f418:	cmp	x0, #0xf
    f41c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f420:	cmp	x0, #0xe
    f424:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f428:	cmp	x0, #0xc
    f42c:	b.ge	fe2c <__divtf3@@GCC_3.0+0xe38>  // b.tcont
    f430:	cmp	x0, #0xb
    f434:	b.eq	fe50 <__divtf3@@GCC_3.0+0xe5c>  // b.none
    f438:	cmp	x0, #0xb
    f43c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f440:	cmp	x0, #0xa
    f444:	b.eq	fe98 <__divtf3@@GCC_3.0+0xea4>  // b.none
    f448:	cmp	x0, #0xa
    f44c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f450:	cmp	x0, #0x9
    f454:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f458:	cmp	x0, #0x8
    f45c:	b.ge	fe8c <__divtf3@@GCC_3.0+0xe98>  // b.tcont
    f460:	cmp	x0, #0x7
    f464:	b.eq	fe50 <__divtf3@@GCC_3.0+0xe5c>  // b.none
    f468:	cmp	x0, #0x7
    f46c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f470:	cmp	x0, #0x6
    f474:	b.eq	fe74 <__divtf3@@GCC_3.0+0xe80>  // b.none
    f478:	cmp	x0, #0x6
    f47c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f480:	cmp	x0, #0x5
    f484:	b.eq	fe98 <__divtf3@@GCC_3.0+0xea4>  // b.none
    f488:	cmp	x0, #0x5
    f48c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f490:	cmp	x0, #0x4
    f494:	b.eq	fe74 <__divtf3@@GCC_3.0+0xe80>  // b.none
    f498:	cmp	x0, #0x4
    f49c:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f4a0:	cmp	x0, #0x3
    f4a4:	b.eq	fe50 <__divtf3@@GCC_3.0+0xe5c>  // b.none
    f4a8:	cmp	x0, #0x3
    f4ac:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f4b0:	cmp	x0, #0x2
    f4b4:	b.eq	fe74 <__divtf3@@GCC_3.0+0xe80>  // b.none
    f4b8:	cmp	x0, #0x2
    f4bc:	b.gt	fec4 <__divtf3@@GCC_3.0+0xed0>
    f4c0:	cmp	x0, #0x0
    f4c4:	b.eq	f4d4 <__divtf3@@GCC_3.0+0x4e0>  // b.none
    f4c8:	cmp	x0, #0x1
    f4cc:	b.eq	fe80 <__divtf3@@GCC_3.0+0xe8c>  // b.none
    f4d0:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    f4d4:	str	xzr, [sp, #632]
    f4d8:	ldr	x1, [sp, #592]
    f4dc:	ldr	x0, [sp, #624]
    f4e0:	cmp	x1, x0
    f4e4:	b.hi	f508 <__divtf3@@GCC_3.0+0x514>  // b.pmore
    f4e8:	ldr	x1, [sp, #592]
    f4ec:	ldr	x0, [sp, #624]
    f4f0:	cmp	x1, x0
    f4f4:	b.ne	f53c <__divtf3@@GCC_3.0+0x548>  // b.any
    f4f8:	ldr	x1, [sp, #584]
    f4fc:	ldr	x0, [sp, #616]
    f500:	cmp	x1, x0
    f504:	b.cc	f53c <__divtf3@@GCC_3.0+0x548>  // b.lo, b.ul, b.last
    f508:	ldr	x0, [sp, #592]
    f50c:	lsr	x0, x0, #1
    f510:	str	x0, [sp, #520]
    f514:	ldr	x0, [sp, #592]
    f518:	lsl	x1, x0, #63
    f51c:	ldr	x0, [sp, #584]
    f520:	lsr	x0, x0, #1
    f524:	orr	x0, x1, x0
    f528:	str	x0, [sp, #512]
    f52c:	ldr	x0, [sp, #584]
    f530:	lsl	x0, x0, #63
    f534:	str	x0, [sp, #504]
    f538:	b	f55c <__divtf3@@GCC_3.0+0x568>
    f53c:	ldr	x0, [sp, #640]
    f540:	sub	x0, x0, #0x1
    f544:	str	x0, [sp, #640]
    f548:	ldr	x0, [sp, #592]
    f54c:	str	x0, [sp, #520]
    f550:	ldr	x0, [sp, #584]
    f554:	str	x0, [sp, #512]
    f558:	str	xzr, [sp, #504]
    f55c:	ldr	x0, [sp, #624]
    f560:	lsl	x1, x0, #12
    f564:	ldr	x0, [sp, #616]
    f568:	lsr	x0, x0, #52
    f56c:	orr	x0, x1, x0
    f570:	str	x0, [sp, #624]
    f574:	ldr	x0, [sp, #616]
    f578:	lsl	x0, x0, #12
    f57c:	str	x0, [sp, #616]
    f580:	ldr	x0, [sp, #624]
    f584:	lsr	x0, x0, #32
    f588:	str	x0, [sp, #376]
    f58c:	ldr	x0, [sp, #624]
    f590:	and	x0, x0, #0xffffffff
    f594:	str	x0, [sp, #368]
    f598:	ldr	x0, [sp, #520]
    f59c:	ldr	x1, [sp, #376]
    f5a0:	udiv	x2, x0, x1
    f5a4:	ldr	x1, [sp, #376]
    f5a8:	mul	x1, x2, x1
    f5ac:	sub	x0, x0, x1
    f5b0:	str	x0, [sp, #464]
    f5b4:	ldr	x1, [sp, #520]
    f5b8:	ldr	x0, [sp, #376]
    f5bc:	udiv	x0, x1, x0
    f5c0:	str	x0, [sp, #480]
    f5c4:	ldr	x1, [sp, #480]
    f5c8:	ldr	x0, [sp, #368]
    f5cc:	mul	x0, x1, x0
    f5d0:	str	x0, [sp, #360]
    f5d4:	ldr	x0, [sp, #464]
    f5d8:	lsl	x1, x0, #32
    f5dc:	ldr	x0, [sp, #512]
    f5e0:	lsr	x0, x0, #32
    f5e4:	orr	x0, x1, x0
    f5e8:	str	x0, [sp, #464]
    f5ec:	ldr	x1, [sp, #464]
    f5f0:	ldr	x0, [sp, #360]
    f5f4:	cmp	x1, x0
    f5f8:	b.cs	f654 <__divtf3@@GCC_3.0+0x660>  // b.hs, b.nlast
    f5fc:	ldr	x0, [sp, #480]
    f600:	sub	x0, x0, #0x1
    f604:	str	x0, [sp, #480]
    f608:	ldr	x1, [sp, #464]
    f60c:	ldr	x0, [sp, #624]
    f610:	add	x0, x1, x0
    f614:	str	x0, [sp, #464]
    f618:	ldr	x1, [sp, #464]
    f61c:	ldr	x0, [sp, #624]
    f620:	cmp	x1, x0
    f624:	b.cc	f654 <__divtf3@@GCC_3.0+0x660>  // b.lo, b.ul, b.last
    f628:	ldr	x1, [sp, #464]
    f62c:	ldr	x0, [sp, #360]
    f630:	cmp	x1, x0
    f634:	b.cs	f654 <__divtf3@@GCC_3.0+0x660>  // b.hs, b.nlast
    f638:	ldr	x0, [sp, #480]
    f63c:	sub	x0, x0, #0x1
    f640:	str	x0, [sp, #480]
    f644:	ldr	x1, [sp, #464]
    f648:	ldr	x0, [sp, #624]
    f64c:	add	x0, x1, x0
    f650:	str	x0, [sp, #464]
    f654:	ldr	x1, [sp, #464]
    f658:	ldr	x0, [sp, #360]
    f65c:	sub	x0, x1, x0
    f660:	str	x0, [sp, #464]
    f664:	ldr	x0, [sp, #464]
    f668:	ldr	x1, [sp, #376]
    f66c:	udiv	x2, x0, x1
    f670:	ldr	x1, [sp, #376]
    f674:	mul	x1, x2, x1
    f678:	sub	x0, x0, x1
    f67c:	str	x0, [sp, #456]
    f680:	ldr	x1, [sp, #464]
    f684:	ldr	x0, [sp, #376]
    f688:	udiv	x0, x1, x0
    f68c:	str	x0, [sp, #472]
    f690:	ldr	x1, [sp, #472]
    f694:	ldr	x0, [sp, #368]
    f698:	mul	x0, x1, x0
    f69c:	str	x0, [sp, #360]
    f6a0:	ldr	x0, [sp, #456]
    f6a4:	lsl	x1, x0, #32
    f6a8:	ldr	x0, [sp, #512]
    f6ac:	and	x0, x0, #0xffffffff
    f6b0:	orr	x0, x1, x0
    f6b4:	str	x0, [sp, #456]
    f6b8:	ldr	x1, [sp, #456]
    f6bc:	ldr	x0, [sp, #360]
    f6c0:	cmp	x1, x0
    f6c4:	b.cs	f720 <__divtf3@@GCC_3.0+0x72c>  // b.hs, b.nlast
    f6c8:	ldr	x0, [sp, #472]
    f6cc:	sub	x0, x0, #0x1
    f6d0:	str	x0, [sp, #472]
    f6d4:	ldr	x1, [sp, #456]
    f6d8:	ldr	x0, [sp, #624]
    f6dc:	add	x0, x1, x0
    f6e0:	str	x0, [sp, #456]
    f6e4:	ldr	x1, [sp, #456]
    f6e8:	ldr	x0, [sp, #624]
    f6ec:	cmp	x1, x0
    f6f0:	b.cc	f720 <__divtf3@@GCC_3.0+0x72c>  // b.lo, b.ul, b.last
    f6f4:	ldr	x1, [sp, #456]
    f6f8:	ldr	x0, [sp, #360]
    f6fc:	cmp	x1, x0
    f700:	b.cs	f720 <__divtf3@@GCC_3.0+0x72c>  // b.hs, b.nlast
    f704:	ldr	x0, [sp, #472]
    f708:	sub	x0, x0, #0x1
    f70c:	str	x0, [sp, #472]
    f710:	ldr	x1, [sp, #456]
    f714:	ldr	x0, [sp, #624]
    f718:	add	x0, x1, x0
    f71c:	str	x0, [sp, #456]
    f720:	ldr	x1, [sp, #456]
    f724:	ldr	x0, [sp, #360]
    f728:	sub	x0, x1, x0
    f72c:	str	x0, [sp, #456]
    f730:	ldr	x0, [sp, #480]
    f734:	lsl	x0, x0, #32
    f738:	ldr	x1, [sp, #472]
    f73c:	orr	x0, x1, x0
    f740:	str	x0, [sp, #544]
    f744:	ldr	x0, [sp, #456]
    f748:	str	x0, [sp, #496]
    f74c:	ldr	x0, [sp, #544]
    f750:	str	w0, [sp, #356]
    f754:	ldr	x0, [sp, #544]
    f758:	lsr	x0, x0, #32
    f75c:	str	w0, [sp, #352]
    f760:	ldr	x0, [sp, #616]
    f764:	str	w0, [sp, #348]
    f768:	ldr	x0, [sp, #616]
    f76c:	lsr	x0, x0, #32
    f770:	str	w0, [sp, #344]
    f774:	ldr	w1, [sp, #356]
    f778:	ldr	w0, [sp, #348]
    f77c:	mul	x0, x1, x0
    f780:	str	x0, [sp, #336]
    f784:	ldr	w1, [sp, #356]
    f788:	ldr	w0, [sp, #344]
    f78c:	mul	x0, x1, x0
    f790:	str	x0, [sp, #328]
    f794:	ldr	w1, [sp, #352]
    f798:	ldr	w0, [sp, #348]
    f79c:	mul	x0, x1, x0
    f7a0:	str	x0, [sp, #320]
    f7a4:	ldr	w1, [sp, #352]
    f7a8:	ldr	w0, [sp, #344]
    f7ac:	mul	x0, x1, x0
    f7b0:	str	x0, [sp, #448]
    f7b4:	ldr	x0, [sp, #336]
    f7b8:	lsr	x0, x0, #32
    f7bc:	ldr	x1, [sp, #328]
    f7c0:	add	x0, x1, x0
    f7c4:	str	x0, [sp, #328]
    f7c8:	ldr	x1, [sp, #328]
    f7cc:	ldr	x0, [sp, #320]
    f7d0:	add	x0, x1, x0
    f7d4:	str	x0, [sp, #328]
    f7d8:	ldr	x1, [sp, #328]
    f7dc:	ldr	x0, [sp, #320]
    f7e0:	cmp	x1, x0
    f7e4:	b.cs	f7f8 <__divtf3@@GCC_3.0+0x804>  // b.hs, b.nlast
    f7e8:	ldr	x1, [sp, #448]
    f7ec:	mov	x0, #0x100000000           	// #4294967296
    f7f0:	add	x0, x1, x0
    f7f4:	str	x0, [sp, #448]
    f7f8:	ldr	x0, [sp, #328]
    f7fc:	lsr	x0, x0, #32
    f800:	ldr	x1, [sp, #448]
    f804:	add	x0, x1, x0
    f808:	str	x0, [sp, #312]
    f80c:	ldr	x0, [sp, #328]
    f810:	and	x0, x0, #0xffffffff
    f814:	lsl	x1, x0, #32
    f818:	ldr	x0, [sp, #336]
    f81c:	and	x0, x0, #0xffffffff
    f820:	add	x0, x1, x0
    f824:	str	x0, [sp, #304]
    f828:	ldr	x0, [sp, #504]
    f82c:	str	x0, [sp, #488]
    f830:	ldr	x1, [sp, #312]
    f834:	ldr	x0, [sp, #496]
    f838:	cmp	x1, x0
    f83c:	b.hi	f860 <__divtf3@@GCC_3.0+0x86c>  // b.pmore
    f840:	ldr	x1, [sp, #312]
    f844:	ldr	x0, [sp, #496]
    f848:	cmp	x1, x0
    f84c:	b.ne	f960 <__divtf3@@GCC_3.0+0x96c>  // b.any
    f850:	ldr	x1, [sp, #304]
    f854:	ldr	x0, [sp, #488]
    f858:	cmp	x1, x0
    f85c:	b.ls	f960 <__divtf3@@GCC_3.0+0x96c>  // b.plast
    f860:	ldr	x0, [sp, #544]
    f864:	sub	x0, x0, #0x1
    f868:	str	x0, [sp, #544]
    f86c:	ldr	x1, [sp, #616]
    f870:	ldr	x0, [sp, #488]
    f874:	add	x0, x1, x0
    f878:	str	x0, [sp, #296]
    f87c:	ldr	x1, [sp, #624]
    f880:	ldr	x0, [sp, #496]
    f884:	add	x1, x1, x0
    f888:	ldr	x2, [sp, #296]
    f88c:	ldr	x0, [sp, #616]
    f890:	cmp	x2, x0
    f894:	cset	w0, cc  // cc = lo, ul, last
    f898:	and	w0, w0, #0xff
    f89c:	and	x0, x0, #0xff
    f8a0:	add	x0, x1, x0
    f8a4:	str	x0, [sp, #496]
    f8a8:	ldr	x0, [sp, #296]
    f8ac:	str	x0, [sp, #488]
    f8b0:	ldr	x1, [sp, #496]
    f8b4:	ldr	x0, [sp, #624]
    f8b8:	cmp	x1, x0
    f8bc:	b.hi	f8e0 <__divtf3@@GCC_3.0+0x8ec>  // b.pmore
    f8c0:	ldr	x1, [sp, #496]
    f8c4:	ldr	x0, [sp, #624]
    f8c8:	cmp	x1, x0
    f8cc:	b.ne	f960 <__divtf3@@GCC_3.0+0x96c>  // b.any
    f8d0:	ldr	x1, [sp, #488]
    f8d4:	ldr	x0, [sp, #616]
    f8d8:	cmp	x1, x0
    f8dc:	b.cc	f960 <__divtf3@@GCC_3.0+0x96c>  // b.lo, b.ul, b.last
    f8e0:	ldr	x1, [sp, #312]
    f8e4:	ldr	x0, [sp, #496]
    f8e8:	cmp	x1, x0
    f8ec:	b.hi	f910 <__divtf3@@GCC_3.0+0x91c>  // b.pmore
    f8f0:	ldr	x1, [sp, #312]
    f8f4:	ldr	x0, [sp, #496]
    f8f8:	cmp	x1, x0
    f8fc:	b.ne	f960 <__divtf3@@GCC_3.0+0x96c>  // b.any
    f900:	ldr	x1, [sp, #304]
    f904:	ldr	x0, [sp, #488]
    f908:	cmp	x1, x0
    f90c:	b.ls	f960 <__divtf3@@GCC_3.0+0x96c>  // b.plast
    f910:	ldr	x0, [sp, #544]
    f914:	sub	x0, x0, #0x1
    f918:	str	x0, [sp, #544]
    f91c:	ldr	x1, [sp, #616]
    f920:	ldr	x0, [sp, #488]
    f924:	add	x0, x1, x0
    f928:	str	x0, [sp, #288]
    f92c:	ldr	x1, [sp, #624]
    f930:	ldr	x0, [sp, #496]
    f934:	add	x1, x1, x0
    f938:	ldr	x2, [sp, #288]
    f93c:	ldr	x0, [sp, #616]
    f940:	cmp	x2, x0
    f944:	cset	w0, cc  // cc = lo, ul, last
    f948:	and	w0, w0, #0xff
    f94c:	and	x0, x0, #0xff
    f950:	add	x0, x1, x0
    f954:	str	x0, [sp, #496]
    f958:	ldr	x0, [sp, #288]
    f95c:	str	x0, [sp, #488]
    f960:	ldr	x1, [sp, #488]
    f964:	ldr	x0, [sp, #304]
    f968:	sub	x0, x1, x0
    f96c:	str	x0, [sp, #280]
    f970:	ldr	x1, [sp, #496]
    f974:	ldr	x0, [sp, #312]
    f978:	sub	x1, x1, x0
    f97c:	ldr	x2, [sp, #280]
    f980:	ldr	x0, [sp, #488]
    f984:	cmp	x2, x0
    f988:	cset	w0, hi  // hi = pmore
    f98c:	and	w0, w0, #0xff
    f990:	and	x0, x0, #0xff
    f994:	sub	x0, x1, x0
    f998:	str	x0, [sp, #496]
    f99c:	ldr	x0, [sp, #280]
    f9a0:	str	x0, [sp, #488]
    f9a4:	ldr	x1, [sp, #496]
    f9a8:	ldr	x0, [sp, #624]
    f9ac:	cmp	x1, x0
    f9b0:	b.ne	f9c0 <__divtf3@@GCC_3.0+0x9cc>  // b.any
    f9b4:	mov	x0, #0xffffffffffffffff    	// #-1
    f9b8:	str	x0, [sp, #552]
    f9bc:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    f9c0:	ldr	x0, [sp, #624]
    f9c4:	lsr	x0, x0, #32
    f9c8:	str	x0, [sp, #272]
    f9cc:	ldr	x0, [sp, #624]
    f9d0:	and	x0, x0, #0xffffffff
    f9d4:	str	x0, [sp, #264]
    f9d8:	ldr	x0, [sp, #496]
    f9dc:	ldr	x1, [sp, #272]
    f9e0:	udiv	x2, x0, x1
    f9e4:	ldr	x1, [sp, #272]
    f9e8:	mul	x1, x2, x1
    f9ec:	sub	x0, x0, x1
    f9f0:	str	x0, [sp, #424]
    f9f4:	ldr	x1, [sp, #496]
    f9f8:	ldr	x0, [sp, #272]
    f9fc:	udiv	x0, x1, x0
    fa00:	str	x0, [sp, #440]
    fa04:	ldr	x1, [sp, #440]
    fa08:	ldr	x0, [sp, #264]
    fa0c:	mul	x0, x1, x0
    fa10:	str	x0, [sp, #256]
    fa14:	ldr	x0, [sp, #424]
    fa18:	lsl	x1, x0, #32
    fa1c:	ldr	x0, [sp, #488]
    fa20:	lsr	x0, x0, #32
    fa24:	orr	x0, x1, x0
    fa28:	str	x0, [sp, #424]
    fa2c:	ldr	x1, [sp, #424]
    fa30:	ldr	x0, [sp, #256]
    fa34:	cmp	x1, x0
    fa38:	b.cs	fa94 <__divtf3@@GCC_3.0+0xaa0>  // b.hs, b.nlast
    fa3c:	ldr	x0, [sp, #440]
    fa40:	sub	x0, x0, #0x1
    fa44:	str	x0, [sp, #440]
    fa48:	ldr	x1, [sp, #424]
    fa4c:	ldr	x0, [sp, #624]
    fa50:	add	x0, x1, x0
    fa54:	str	x0, [sp, #424]
    fa58:	ldr	x1, [sp, #424]
    fa5c:	ldr	x0, [sp, #624]
    fa60:	cmp	x1, x0
    fa64:	b.cc	fa94 <__divtf3@@GCC_3.0+0xaa0>  // b.lo, b.ul, b.last
    fa68:	ldr	x1, [sp, #424]
    fa6c:	ldr	x0, [sp, #256]
    fa70:	cmp	x1, x0
    fa74:	b.cs	fa94 <__divtf3@@GCC_3.0+0xaa0>  // b.hs, b.nlast
    fa78:	ldr	x0, [sp, #440]
    fa7c:	sub	x0, x0, #0x1
    fa80:	str	x0, [sp, #440]
    fa84:	ldr	x1, [sp, #424]
    fa88:	ldr	x0, [sp, #624]
    fa8c:	add	x0, x1, x0
    fa90:	str	x0, [sp, #424]
    fa94:	ldr	x1, [sp, #424]
    fa98:	ldr	x0, [sp, #256]
    fa9c:	sub	x0, x1, x0
    faa0:	str	x0, [sp, #424]
    faa4:	ldr	x0, [sp, #424]
    faa8:	ldr	x1, [sp, #272]
    faac:	udiv	x2, x0, x1
    fab0:	ldr	x1, [sp, #272]
    fab4:	mul	x1, x2, x1
    fab8:	sub	x0, x0, x1
    fabc:	str	x0, [sp, #416]
    fac0:	ldr	x1, [sp, #424]
    fac4:	ldr	x0, [sp, #272]
    fac8:	udiv	x0, x1, x0
    facc:	str	x0, [sp, #432]
    fad0:	ldr	x1, [sp, #432]
    fad4:	ldr	x0, [sp, #264]
    fad8:	mul	x0, x1, x0
    fadc:	str	x0, [sp, #256]
    fae0:	ldr	x0, [sp, #416]
    fae4:	lsl	x1, x0, #32
    fae8:	ldr	x0, [sp, #488]
    faec:	and	x0, x0, #0xffffffff
    faf0:	orr	x0, x1, x0
    faf4:	str	x0, [sp, #416]
    faf8:	ldr	x1, [sp, #416]
    fafc:	ldr	x0, [sp, #256]
    fb00:	cmp	x1, x0
    fb04:	b.cs	fb60 <__divtf3@@GCC_3.0+0xb6c>  // b.hs, b.nlast
    fb08:	ldr	x0, [sp, #432]
    fb0c:	sub	x0, x0, #0x1
    fb10:	str	x0, [sp, #432]
    fb14:	ldr	x1, [sp, #416]
    fb18:	ldr	x0, [sp, #624]
    fb1c:	add	x0, x1, x0
    fb20:	str	x0, [sp, #416]
    fb24:	ldr	x1, [sp, #416]
    fb28:	ldr	x0, [sp, #624]
    fb2c:	cmp	x1, x0
    fb30:	b.cc	fb60 <__divtf3@@GCC_3.0+0xb6c>  // b.lo, b.ul, b.last
    fb34:	ldr	x1, [sp, #416]
    fb38:	ldr	x0, [sp, #256]
    fb3c:	cmp	x1, x0
    fb40:	b.cs	fb60 <__divtf3@@GCC_3.0+0xb6c>  // b.hs, b.nlast
    fb44:	ldr	x0, [sp, #432]
    fb48:	sub	x0, x0, #0x1
    fb4c:	str	x0, [sp, #432]
    fb50:	ldr	x1, [sp, #416]
    fb54:	ldr	x0, [sp, #624]
    fb58:	add	x0, x1, x0
    fb5c:	str	x0, [sp, #416]
    fb60:	ldr	x1, [sp, #416]
    fb64:	ldr	x0, [sp, #256]
    fb68:	sub	x0, x1, x0
    fb6c:	str	x0, [sp, #416]
    fb70:	ldr	x0, [sp, #440]
    fb74:	lsl	x0, x0, #32
    fb78:	ldr	x1, [sp, #432]
    fb7c:	orr	x0, x1, x0
    fb80:	str	x0, [sp, #552]
    fb84:	ldr	x0, [sp, #416]
    fb88:	str	x0, [sp, #496]
    fb8c:	ldr	x0, [sp, #552]
    fb90:	str	w0, [sp, #252]
    fb94:	ldr	x0, [sp, #552]
    fb98:	lsr	x0, x0, #32
    fb9c:	str	w0, [sp, #248]
    fba0:	ldr	x0, [sp, #616]
    fba4:	str	w0, [sp, #244]
    fba8:	ldr	x0, [sp, #616]
    fbac:	lsr	x0, x0, #32
    fbb0:	str	w0, [sp, #240]
    fbb4:	ldr	w1, [sp, #252]
    fbb8:	ldr	w0, [sp, #244]
    fbbc:	mul	x0, x1, x0
    fbc0:	str	x0, [sp, #232]
    fbc4:	ldr	w1, [sp, #252]
    fbc8:	ldr	w0, [sp, #240]
    fbcc:	mul	x0, x1, x0
    fbd0:	str	x0, [sp, #224]
    fbd4:	ldr	w1, [sp, #248]
    fbd8:	ldr	w0, [sp, #244]
    fbdc:	mul	x0, x1, x0
    fbe0:	str	x0, [sp, #216]
    fbe4:	ldr	w1, [sp, #248]
    fbe8:	ldr	w0, [sp, #240]
    fbec:	mul	x0, x1, x0
    fbf0:	str	x0, [sp, #408]
    fbf4:	ldr	x0, [sp, #232]
    fbf8:	lsr	x0, x0, #32
    fbfc:	ldr	x1, [sp, #224]
    fc00:	add	x0, x1, x0
    fc04:	str	x0, [sp, #224]
    fc08:	ldr	x1, [sp, #224]
    fc0c:	ldr	x0, [sp, #216]
    fc10:	add	x0, x1, x0
    fc14:	str	x0, [sp, #224]
    fc18:	ldr	x1, [sp, #224]
    fc1c:	ldr	x0, [sp, #216]
    fc20:	cmp	x1, x0
    fc24:	b.cs	fc38 <__divtf3@@GCC_3.0+0xc44>  // b.hs, b.nlast
    fc28:	ldr	x1, [sp, #408]
    fc2c:	mov	x0, #0x100000000           	// #4294967296
    fc30:	add	x0, x1, x0
    fc34:	str	x0, [sp, #408]
    fc38:	ldr	x0, [sp, #224]
    fc3c:	lsr	x0, x0, #32
    fc40:	ldr	x1, [sp, #408]
    fc44:	add	x0, x1, x0
    fc48:	str	x0, [sp, #312]
    fc4c:	ldr	x0, [sp, #224]
    fc50:	and	x0, x0, #0xffffffff
    fc54:	lsl	x1, x0, #32
    fc58:	ldr	x0, [sp, #232]
    fc5c:	and	x0, x0, #0xffffffff
    fc60:	add	x0, x1, x0
    fc64:	str	x0, [sp, #304]
    fc68:	str	xzr, [sp, #488]
    fc6c:	ldr	x1, [sp, #312]
    fc70:	ldr	x0, [sp, #496]
    fc74:	cmp	x1, x0
    fc78:	b.hi	fc9c <__divtf3@@GCC_3.0+0xca8>  // b.pmore
    fc7c:	ldr	x1, [sp, #312]
    fc80:	ldr	x0, [sp, #496]
    fc84:	cmp	x1, x0
    fc88:	b.ne	fd9c <__divtf3@@GCC_3.0+0xda8>  // b.any
    fc8c:	ldr	x1, [sp, #304]
    fc90:	ldr	x0, [sp, #488]
    fc94:	cmp	x1, x0
    fc98:	b.ls	fd9c <__divtf3@@GCC_3.0+0xda8>  // b.plast
    fc9c:	ldr	x0, [sp, #552]
    fca0:	sub	x0, x0, #0x1
    fca4:	str	x0, [sp, #552]
    fca8:	ldr	x1, [sp, #616]
    fcac:	ldr	x0, [sp, #488]
    fcb0:	add	x0, x1, x0
    fcb4:	str	x0, [sp, #208]
    fcb8:	ldr	x1, [sp, #624]
    fcbc:	ldr	x0, [sp, #496]
    fcc0:	add	x1, x1, x0
    fcc4:	ldr	x2, [sp, #208]
    fcc8:	ldr	x0, [sp, #616]
    fccc:	cmp	x2, x0
    fcd0:	cset	w0, cc  // cc = lo, ul, last
    fcd4:	and	w0, w0, #0xff
    fcd8:	and	x0, x0, #0xff
    fcdc:	add	x0, x1, x0
    fce0:	str	x0, [sp, #496]
    fce4:	ldr	x0, [sp, #208]
    fce8:	str	x0, [sp, #488]
    fcec:	ldr	x1, [sp, #496]
    fcf0:	ldr	x0, [sp, #624]
    fcf4:	cmp	x1, x0
    fcf8:	b.hi	fd1c <__divtf3@@GCC_3.0+0xd28>  // b.pmore
    fcfc:	ldr	x1, [sp, #496]
    fd00:	ldr	x0, [sp, #624]
    fd04:	cmp	x1, x0
    fd08:	b.ne	fd9c <__divtf3@@GCC_3.0+0xda8>  // b.any
    fd0c:	ldr	x1, [sp, #488]
    fd10:	ldr	x0, [sp, #616]
    fd14:	cmp	x1, x0
    fd18:	b.cc	fd9c <__divtf3@@GCC_3.0+0xda8>  // b.lo, b.ul, b.last
    fd1c:	ldr	x1, [sp, #312]
    fd20:	ldr	x0, [sp, #496]
    fd24:	cmp	x1, x0
    fd28:	b.hi	fd4c <__divtf3@@GCC_3.0+0xd58>  // b.pmore
    fd2c:	ldr	x1, [sp, #312]
    fd30:	ldr	x0, [sp, #496]
    fd34:	cmp	x1, x0
    fd38:	b.ne	fd9c <__divtf3@@GCC_3.0+0xda8>  // b.any
    fd3c:	ldr	x1, [sp, #304]
    fd40:	ldr	x0, [sp, #488]
    fd44:	cmp	x1, x0
    fd48:	b.ls	fd9c <__divtf3@@GCC_3.0+0xda8>  // b.plast
    fd4c:	ldr	x0, [sp, #552]
    fd50:	sub	x0, x0, #0x1
    fd54:	str	x0, [sp, #552]
    fd58:	ldr	x1, [sp, #616]
    fd5c:	ldr	x0, [sp, #488]
    fd60:	add	x0, x1, x0
    fd64:	str	x0, [sp, #200]
    fd68:	ldr	x1, [sp, #624]
    fd6c:	ldr	x0, [sp, #496]
    fd70:	add	x1, x1, x0
    fd74:	ldr	x2, [sp, #200]
    fd78:	ldr	x0, [sp, #616]
    fd7c:	cmp	x2, x0
    fd80:	cset	w0, cc  // cc = lo, ul, last
    fd84:	and	w0, w0, #0xff
    fd88:	and	x0, x0, #0xff
    fd8c:	add	x0, x1, x0
    fd90:	str	x0, [sp, #496]
    fd94:	ldr	x0, [sp, #200]
    fd98:	str	x0, [sp, #488]
    fd9c:	ldr	x1, [sp, #496]
    fda0:	ldr	x0, [sp, #312]
    fda4:	cmp	x1, x0
    fda8:	b.ne	fdbc <__divtf3@@GCC_3.0+0xdc8>  // b.any
    fdac:	ldr	x1, [sp, #488]
    fdb0:	ldr	x0, [sp, #304]
    fdb4:	cmp	x1, x0
    fdb8:	b.eq	fec4 <__divtf3@@GCC_3.0+0xed0>  // b.none
    fdbc:	ldr	x0, [sp, #552]
    fdc0:	orr	x0, x0, #0x1
    fdc4:	str	x0, [sp, #552]
    fdc8:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fdcc:	ldr	x0, [sp, #592]
    fdd0:	and	x0, x0, #0x800000000000
    fdd4:	cmp	x0, #0x0
    fdd8:	b.eq	fe08 <__divtf3@@GCC_3.0+0xe14>  // b.none
    fddc:	ldr	x0, [sp, #624]
    fde0:	and	x0, x0, #0x800000000000
    fde4:	cmp	x0, #0x0
    fde8:	b.ne	fe08 <__divtf3@@GCC_3.0+0xe14>  // b.any
    fdec:	ldr	x0, [sp, #384]
    fdf0:	str	x0, [sp, #648]
    fdf4:	ldr	x0, [sp, #616]
    fdf8:	str	x0, [sp, #552]
    fdfc:	ldr	x0, [sp, #624]
    fe00:	str	x0, [sp, #544]
    fe04:	b	fe20 <__divtf3@@GCC_3.0+0xe2c>
    fe08:	ldr	x0, [sp, #392]
    fe0c:	str	x0, [sp, #648]
    fe10:	ldr	x0, [sp, #584]
    fe14:	str	x0, [sp, #552]
    fe18:	ldr	x0, [sp, #592]
    fe1c:	str	x0, [sp, #544]
    fe20:	mov	x0, #0x3                   	// #3
    fe24:	str	x0, [sp, #632]
    fe28:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fe2c:	ldr	x0, [sp, #392]
    fe30:	str	x0, [sp, #648]
    fe34:	ldr	x0, [sp, #584]
    fe38:	str	x0, [sp, #552]
    fe3c:	ldr	x0, [sp, #592]
    fe40:	str	x0, [sp, #544]
    fe44:	ldr	x0, [sp, #576]
    fe48:	str	x0, [sp, #632]
    fe4c:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fe50:	ldr	x0, [sp, #384]
    fe54:	str	x0, [sp, #648]
    fe58:	ldr	x0, [sp, #616]
    fe5c:	str	x0, [sp, #552]
    fe60:	ldr	x0, [sp, #624]
    fe64:	str	x0, [sp, #544]
    fe68:	ldr	x0, [sp, #608]
    fe6c:	str	x0, [sp, #632]
    fe70:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fe74:	mov	x0, #0x1                   	// #1
    fe78:	str	x0, [sp, #632]
    fe7c:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fe80:	ldr	w0, [sp, #564]
    fe84:	orr	w0, w0, #0x2
    fe88:	str	w0, [sp, #564]
    fe8c:	mov	x0, #0x2                   	// #2
    fe90:	str	x0, [sp, #632]
    fe94:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fe98:	str	xzr, [sp, #648]
    fe9c:	mov	x0, #0x3                   	// #3
    fea0:	str	x0, [sp, #632]
    fea4:	mov	x0, #0xffffffffffffffff    	// #-1
    fea8:	str	x0, [sp, #552]
    feac:	mov	x0, #0xffffffffffff        	// #281474976710655
    feb0:	str	x0, [sp, #544]
    feb4:	ldr	w0, [sp, #564]
    feb8:	orr	w0, w0, #0x1
    febc:	str	w0, [sp, #564]
    fec0:	b	fec4 <__divtf3@@GCC_3.0+0xed0>
    fec4:	nop
    fec8:	ldr	x0, [sp, #632]
    fecc:	cmp	x0, #0x3
    fed0:	b.eq	10664 <__divtf3@@GCC_3.0+0x1670>  // b.none
    fed4:	ldr	x0, [sp, #632]
    fed8:	cmp	x0, #0x3
    fedc:	b.gt	1067c <__divtf3@@GCC_3.0+0x1688>
    fee0:	ldr	x0, [sp, #632]
    fee4:	cmp	x0, #0x2
    fee8:	b.eq	10650 <__divtf3@@GCC_3.0+0x165c>  // b.none
    feec:	ldr	x0, [sp, #632]
    fef0:	cmp	x0, #0x2
    fef4:	b.gt	1067c <__divtf3@@GCC_3.0+0x1688>
    fef8:	ldr	x0, [sp, #632]
    fefc:	cmp	x0, #0x0
    ff00:	b.eq	ff14 <__divtf3@@GCC_3.0+0xf20>  // b.none
    ff04:	ldr	x0, [sp, #632]
    ff08:	cmp	x0, #0x1
    ff0c:	b.eq	10640 <__divtf3@@GCC_3.0+0x164c>  // b.none
    ff10:	b	1067c <__divtf3@@GCC_3.0+0x1688>
    ff14:	ldr	x1, [sp, #640]
    ff18:	mov	x0, #0x3fff                	// #16383
    ff1c:	add	x0, x1, x0
    ff20:	str	x0, [sp, #640]
    ff24:	ldr	x0, [sp, #640]
    ff28:	cmp	x0, #0x0
    ff2c:	b.le	101a8 <__divtf3@@GCC_3.0+0x11b4>
    ff30:	ldr	x0, [sp, #552]
    ff34:	and	x0, x0, #0x7
    ff38:	cmp	x0, #0x0
    ff3c:	b.eq	10084 <__divtf3@@GCC_3.0+0x1090>  // b.none
    ff40:	ldr	w0, [sp, #564]
    ff44:	orr	w0, w0, #0x10
    ff48:	str	w0, [sp, #564]
    ff4c:	ldr	x0, [sp, #400]
    ff50:	and	x0, x0, #0xc00000
    ff54:	cmp	x0, #0xc00, lsl #12
    ff58:	b.eq	1008c <__divtf3@@GCC_3.0+0x1098>  // b.none
    ff5c:	cmp	x0, #0xc00, lsl #12
    ff60:	b.hi	10090 <__divtf3@@GCC_3.0+0x109c>  // b.pmore
    ff64:	cmp	x0, #0x800, lsl #12
    ff68:	b.eq	1002c <__divtf3@@GCC_3.0+0x1038>  // b.none
    ff6c:	cmp	x0, #0x800, lsl #12
    ff70:	b.hi	10090 <__divtf3@@GCC_3.0+0x109c>  // b.pmore
    ff74:	cmp	x0, #0x0
    ff78:	b.eq	ff88 <__divtf3@@GCC_3.0+0xf94>  // b.none
    ff7c:	cmp	x0, #0x400, lsl #12
    ff80:	b.eq	ffd4 <__divtf3@@GCC_3.0+0xfe0>  // b.none
    ff84:	b	10090 <__divtf3@@GCC_3.0+0x109c>
    ff88:	ldr	x0, [sp, #552]
    ff8c:	and	x0, x0, #0xf
    ff90:	cmp	x0, #0x4
    ff94:	b.eq	1008c <__divtf3@@GCC_3.0+0x1098>  // b.none
    ff98:	ldr	x0, [sp, #552]
    ff9c:	add	x0, x0, #0x4
    ffa0:	str	x0, [sp, #120]
    ffa4:	ldr	x1, [sp, #120]
    ffa8:	ldr	x0, [sp, #552]
    ffac:	cmp	x1, x0
    ffb0:	cset	w0, cc  // cc = lo, ul, last
    ffb4:	and	w0, w0, #0xff
    ffb8:	and	x0, x0, #0xff
    ffbc:	ldr	x1, [sp, #544]
    ffc0:	add	x0, x1, x0
    ffc4:	str	x0, [sp, #544]
    ffc8:	ldr	x0, [sp, #120]
    ffcc:	str	x0, [sp, #552]
    ffd0:	b	1008c <__divtf3@@GCC_3.0+0x1098>
    ffd4:	ldr	x0, [sp, #648]
    ffd8:	cmp	x0, #0x0
    ffdc:	b.ne	1008c <__divtf3@@GCC_3.0+0x1098>  // b.any
    ffe0:	ldr	x0, [sp, #552]
    ffe4:	and	x0, x0, #0x7
    ffe8:	cmp	x0, #0x0
    ffec:	b.eq	1008c <__divtf3@@GCC_3.0+0x1098>  // b.none
    fff0:	ldr	x0, [sp, #552]
    fff4:	add	x0, x0, #0x8
    fff8:	str	x0, [sp, #128]
    fffc:	ldr	x1, [sp, #128]
   10000:	ldr	x0, [sp, #552]
   10004:	cmp	x1, x0
   10008:	cset	w0, cc  // cc = lo, ul, last
   1000c:	and	w0, w0, #0xff
   10010:	and	x0, x0, #0xff
   10014:	ldr	x1, [sp, #544]
   10018:	add	x0, x1, x0
   1001c:	str	x0, [sp, #544]
   10020:	ldr	x0, [sp, #128]
   10024:	str	x0, [sp, #552]
   10028:	b	1008c <__divtf3@@GCC_3.0+0x1098>
   1002c:	ldr	x0, [sp, #648]
   10030:	cmp	x0, #0x0
   10034:	b.eq	1008c <__divtf3@@GCC_3.0+0x1098>  // b.none
   10038:	ldr	x0, [sp, #552]
   1003c:	and	x0, x0, #0x7
   10040:	cmp	x0, #0x0
   10044:	b.eq	1008c <__divtf3@@GCC_3.0+0x1098>  // b.none
   10048:	ldr	x0, [sp, #552]
   1004c:	add	x0, x0, #0x8
   10050:	str	x0, [sp, #136]
   10054:	ldr	x1, [sp, #136]
   10058:	ldr	x0, [sp, #552]
   1005c:	cmp	x1, x0
   10060:	cset	w0, cc  // cc = lo, ul, last
   10064:	and	w0, w0, #0xff
   10068:	and	x0, x0, #0xff
   1006c:	ldr	x1, [sp, #544]
   10070:	add	x0, x1, x0
   10074:	str	x0, [sp, #544]
   10078:	ldr	x0, [sp, #136]
   1007c:	str	x0, [sp, #552]
   10080:	b	1008c <__divtf3@@GCC_3.0+0x1098>
   10084:	nop
   10088:	b	10090 <__divtf3@@GCC_3.0+0x109c>
   1008c:	nop
   10090:	ldr	x0, [sp, #544]
   10094:	and	x0, x0, #0x10000000000000
   10098:	cmp	x0, #0x0
   1009c:	b.eq	100b8 <__divtf3@@GCC_3.0+0x10c4>  // b.none
   100a0:	ldr	x0, [sp, #544]
   100a4:	and	x0, x0, #0xffefffffffffffff
   100a8:	str	x0, [sp, #544]
   100ac:	ldr	x0, [sp, #640]
   100b0:	add	x0, x0, #0x1
   100b4:	str	x0, [sp, #640]
   100b8:	ldr	x0, [sp, #552]
   100bc:	lsr	x1, x0, #3
   100c0:	ldr	x0, [sp, #544]
   100c4:	lsl	x0, x0, #61
   100c8:	orr	x0, x1, x0
   100cc:	str	x0, [sp, #552]
   100d0:	ldr	x0, [sp, #544]
   100d4:	lsr	x0, x0, #3
   100d8:	str	x0, [sp, #544]
   100dc:	ldr	x1, [sp, #640]
   100e0:	mov	x0, #0x7ffe                	// #32766
   100e4:	cmp	x1, x0
   100e8:	b.le	10678 <__divtf3@@GCC_3.0+0x1684>
   100ec:	ldr	x0, [sp, #400]
   100f0:	and	x0, x0, #0xc00000
   100f4:	cmp	x0, #0x800, lsl #12
   100f8:	b.eq	1013c <__divtf3@@GCC_3.0+0x1148>  // b.none
   100fc:	cmp	x0, #0x800, lsl #12
   10100:	b.hi	10154 <__divtf3@@GCC_3.0+0x1160>  // b.pmore
   10104:	cmp	x0, #0x0
   10108:	b.eq	10118 <__divtf3@@GCC_3.0+0x1124>  // b.none
   1010c:	cmp	x0, #0x400, lsl #12
   10110:	b.eq	10124 <__divtf3@@GCC_3.0+0x1130>  // b.none
   10114:	b	10154 <__divtf3@@GCC_3.0+0x1160>
   10118:	mov	x0, #0x2                   	// #2
   1011c:	str	x0, [sp, #632]
   10120:	b	10150 <__divtf3@@GCC_3.0+0x115c>
   10124:	ldr	x0, [sp, #648]
   10128:	cmp	x0, #0x0
   1012c:	b.ne	10150 <__divtf3@@GCC_3.0+0x115c>  // b.any
   10130:	mov	x0, #0x2                   	// #2
   10134:	str	x0, [sp, #632]
   10138:	b	10150 <__divtf3@@GCC_3.0+0x115c>
   1013c:	ldr	x0, [sp, #648]
   10140:	cmp	x0, #0x0
   10144:	b.eq	10150 <__divtf3@@GCC_3.0+0x115c>  // b.none
   10148:	mov	x0, #0x2                   	// #2
   1014c:	str	x0, [sp, #632]
   10150:	nop
   10154:	ldr	x0, [sp, #632]
   10158:	cmp	x0, #0x2
   1015c:	b.ne	10174 <__divtf3@@GCC_3.0+0x1180>  // b.any
   10160:	mov	x0, #0x7fff                	// #32767
   10164:	str	x0, [sp, #640]
   10168:	str	xzr, [sp, #552]
   1016c:	str	xzr, [sp, #544]
   10170:	b	1018c <__divtf3@@GCC_3.0+0x1198>
   10174:	mov	x0, #0x7ffe                	// #32766
   10178:	str	x0, [sp, #640]
   1017c:	mov	x0, #0xffffffffffffffff    	// #-1
   10180:	str	x0, [sp, #552]
   10184:	mov	x0, #0xffffffffffffffff    	// #-1
   10188:	str	x0, [sp, #544]
   1018c:	ldr	w0, [sp, #564]
   10190:	orr	w0, w0, #0x4
   10194:	str	w0, [sp, #564]
   10198:	ldr	w0, [sp, #564]
   1019c:	orr	w0, w0, #0x10
   101a0:	str	w0, [sp, #564]
   101a4:	b	10678 <__divtf3@@GCC_3.0+0x1684>
   101a8:	mov	w0, #0x1                   	// #1
   101ac:	str	w0, [sp, #196]
   101b0:	mov	x1, #0x1                   	// #1
   101b4:	ldr	x0, [sp, #640]
   101b8:	sub	x0, x1, x0
   101bc:	str	x0, [sp, #640]
   101c0:	ldr	x0, [sp, #640]
   101c4:	cmp	x0, #0x74
   101c8:	b.gt	104a0 <__divtf3@@GCC_3.0+0x14ac>
   101cc:	ldr	x0, [sp, #640]
   101d0:	cmp	x0, #0x3f
   101d4:	b.gt	1024c <__divtf3@@GCC_3.0+0x1258>
   101d8:	ldr	x0, [sp, #640]
   101dc:	mov	w1, w0
   101e0:	mov	w0, #0x40                  	// #64
   101e4:	sub	w0, w0, w1
   101e8:	ldr	x1, [sp, #544]
   101ec:	lsl	x1, x1, x0
   101f0:	ldr	x0, [sp, #640]
   101f4:	mov	w2, w0
   101f8:	ldr	x0, [sp, #552]
   101fc:	lsr	x0, x0, x2
   10200:	orr	x1, x1, x0
   10204:	ldr	x0, [sp, #640]
   10208:	mov	w2, w0
   1020c:	mov	w0, #0x40                  	// #64
   10210:	sub	w0, w0, w2
   10214:	ldr	x2, [sp, #552]
   10218:	lsl	x0, x2, x0
   1021c:	cmp	x0, #0x0
   10220:	cset	w0, ne  // ne = any
   10224:	and	w0, w0, #0xff
   10228:	sxtw	x0, w0
   1022c:	orr	x0, x1, x0
   10230:	str	x0, [sp, #552]
   10234:	ldr	x0, [sp, #640]
   10238:	mov	w1, w0
   1023c:	ldr	x0, [sp, #544]
   10240:	lsr	x0, x0, x1
   10244:	str	x0, [sp, #544]
   10248:	b	102ac <__divtf3@@GCC_3.0+0x12b8>
   1024c:	ldr	x0, [sp, #640]
   10250:	sub	w0, w0, #0x40
   10254:	ldr	x1, [sp, #544]
   10258:	lsr	x1, x1, x0
   1025c:	ldr	x0, [sp, #640]
   10260:	cmp	x0, #0x40
   10264:	b.eq	10284 <__divtf3@@GCC_3.0+0x1290>  // b.none
   10268:	ldr	x0, [sp, #640]
   1026c:	mov	w2, w0
   10270:	mov	w0, #0x80                  	// #128
   10274:	sub	w0, w0, w2
   10278:	ldr	x2, [sp, #544]
   1027c:	lsl	x0, x2, x0
   10280:	b	10288 <__divtf3@@GCC_3.0+0x1294>
   10284:	mov	x0, #0x0                   	// #0
   10288:	ldr	x2, [sp, #552]
   1028c:	orr	x0, x0, x2
   10290:	cmp	x0, #0x0
   10294:	cset	w0, ne  // ne = any
   10298:	and	w0, w0, #0xff
   1029c:	and	x0, x0, #0xff
   102a0:	orr	x0, x1, x0
   102a4:	str	x0, [sp, #552]
   102a8:	str	xzr, [sp, #544]
   102ac:	ldr	x0, [sp, #552]
   102b0:	and	x0, x0, #0x7
   102b4:	cmp	x0, #0x0
   102b8:	b.eq	10400 <__divtf3@@GCC_3.0+0x140c>  // b.none
   102bc:	ldr	w0, [sp, #564]
   102c0:	orr	w0, w0, #0x10
   102c4:	str	w0, [sp, #564]
   102c8:	ldr	x0, [sp, #400]
   102cc:	and	x0, x0, #0xc00000
   102d0:	cmp	x0, #0xc00, lsl #12
   102d4:	b.eq	10408 <__divtf3@@GCC_3.0+0x1414>  // b.none
   102d8:	cmp	x0, #0xc00, lsl #12
   102dc:	b.hi	1040c <__divtf3@@GCC_3.0+0x1418>  // b.pmore
   102e0:	cmp	x0, #0x800, lsl #12
   102e4:	b.eq	103a8 <__divtf3@@GCC_3.0+0x13b4>  // b.none
   102e8:	cmp	x0, #0x800, lsl #12
   102ec:	b.hi	1040c <__divtf3@@GCC_3.0+0x1418>  // b.pmore
   102f0:	cmp	x0, #0x0
   102f4:	b.eq	10304 <__divtf3@@GCC_3.0+0x1310>  // b.none
   102f8:	cmp	x0, #0x400, lsl #12
   102fc:	b.eq	10350 <__divtf3@@GCC_3.0+0x135c>  // b.none
   10300:	b	1040c <__divtf3@@GCC_3.0+0x1418>
   10304:	ldr	x0, [sp, #552]
   10308:	and	x0, x0, #0xf
   1030c:	cmp	x0, #0x4
   10310:	b.eq	10408 <__divtf3@@GCC_3.0+0x1414>  // b.none
   10314:	ldr	x0, [sp, #552]
   10318:	add	x0, x0, #0x4
   1031c:	str	x0, [sp, #144]
   10320:	ldr	x1, [sp, #144]
   10324:	ldr	x0, [sp, #552]
   10328:	cmp	x1, x0
   1032c:	cset	w0, cc  // cc = lo, ul, last
   10330:	and	w0, w0, #0xff
   10334:	and	x0, x0, #0xff
   10338:	ldr	x1, [sp, #544]
   1033c:	add	x0, x1, x0
   10340:	str	x0, [sp, #544]
   10344:	ldr	x0, [sp, #144]
   10348:	str	x0, [sp, #552]
   1034c:	b	10408 <__divtf3@@GCC_3.0+0x1414>
   10350:	ldr	x0, [sp, #648]
   10354:	cmp	x0, #0x0
   10358:	b.ne	10408 <__divtf3@@GCC_3.0+0x1414>  // b.any
   1035c:	ldr	x0, [sp, #552]
   10360:	and	x0, x0, #0x7
   10364:	cmp	x0, #0x0
   10368:	b.eq	10408 <__divtf3@@GCC_3.0+0x1414>  // b.none
   1036c:	ldr	x0, [sp, #552]
   10370:	add	x0, x0, #0x8
   10374:	str	x0, [sp, #152]
   10378:	ldr	x1, [sp, #152]
   1037c:	ldr	x0, [sp, #552]
   10380:	cmp	x1, x0
   10384:	cset	w0, cc  // cc = lo, ul, last
   10388:	and	w0, w0, #0xff
   1038c:	and	x0, x0, #0xff
   10390:	ldr	x1, [sp, #544]
   10394:	add	x0, x1, x0
   10398:	str	x0, [sp, #544]
   1039c:	ldr	x0, [sp, #152]
   103a0:	str	x0, [sp, #552]
   103a4:	b	10408 <__divtf3@@GCC_3.0+0x1414>
   103a8:	ldr	x0, [sp, #648]
   103ac:	cmp	x0, #0x0
   103b0:	b.eq	10408 <__divtf3@@GCC_3.0+0x1414>  // b.none
   103b4:	ldr	x0, [sp, #552]
   103b8:	and	x0, x0, #0x7
   103bc:	cmp	x0, #0x0
   103c0:	b.eq	10408 <__divtf3@@GCC_3.0+0x1414>  // b.none
   103c4:	ldr	x0, [sp, #552]
   103c8:	add	x0, x0, #0x8
   103cc:	str	x0, [sp, #160]
   103d0:	ldr	x1, [sp, #160]
   103d4:	ldr	x0, [sp, #552]
   103d8:	cmp	x1, x0
   103dc:	cset	w0, cc  // cc = lo, ul, last
   103e0:	and	w0, w0, #0xff
   103e4:	and	x0, x0, #0xff
   103e8:	ldr	x1, [sp, #544]
   103ec:	add	x0, x1, x0
   103f0:	str	x0, [sp, #544]
   103f4:	ldr	x0, [sp, #160]
   103f8:	str	x0, [sp, #552]
   103fc:	b	10408 <__divtf3@@GCC_3.0+0x1414>
   10400:	nop
   10404:	b	1040c <__divtf3@@GCC_3.0+0x1418>
   10408:	nop
   1040c:	ldr	x0, [sp, #544]
   10410:	and	x0, x0, #0x8000000000000
   10414:	cmp	x0, #0x0
   10418:	b.eq	1043c <__divtf3@@GCC_3.0+0x1448>  // b.none
   1041c:	mov	x0, #0x1                   	// #1
   10420:	str	x0, [sp, #640]
   10424:	str	xzr, [sp, #552]
   10428:	str	xzr, [sp, #544]
   1042c:	ldr	w0, [sp, #564]
   10430:	orr	w0, w0, #0x10
   10434:	str	w0, [sp, #564]
   10438:	b	10464 <__divtf3@@GCC_3.0+0x1470>
   1043c:	str	xzr, [sp, #640]
   10440:	ldr	x0, [sp, #552]
   10444:	lsr	x1, x0, #3
   10448:	ldr	x0, [sp, #544]
   1044c:	lsl	x0, x0, #61
   10450:	orr	x0, x1, x0
   10454:	str	x0, [sp, #552]
   10458:	ldr	x0, [sp, #544]
   1045c:	lsr	x0, x0, #3
   10460:	str	x0, [sp, #544]
   10464:	ldr	w0, [sp, #196]
   10468:	cmp	w0, #0x0
   1046c:	b.eq	10678 <__divtf3@@GCC_3.0+0x1684>  // b.none
   10470:	ldr	w0, [sp, #564]
   10474:	and	w0, w0, #0x10
   10478:	cmp	w0, #0x0
   1047c:	b.ne	10490 <__divtf3@@GCC_3.0+0x149c>  // b.any
   10480:	ldr	x0, [sp, #400]
   10484:	and	x0, x0, #0x800
   10488:	cmp	x0, #0x0
   1048c:	b.eq	10678 <__divtf3@@GCC_3.0+0x1684>  // b.none
   10490:	ldr	w0, [sp, #564]
   10494:	orr	w0, w0, #0x8
   10498:	str	w0, [sp, #564]
   1049c:	b	10678 <__divtf3@@GCC_3.0+0x1684>
   104a0:	str	xzr, [sp, #640]
   104a4:	ldr	x1, [sp, #544]
   104a8:	ldr	x0, [sp, #552]
   104ac:	orr	x0, x1, x0
   104b0:	cmp	x0, #0x0
   104b4:	b.eq	10630 <__divtf3@@GCC_3.0+0x163c>  // b.none
   104b8:	mov	x0, #0x1                   	// #1
   104bc:	str	x0, [sp, #552]
   104c0:	str	xzr, [sp, #544]
   104c4:	ldr	x0, [sp, #552]
   104c8:	and	x0, x0, #0x7
   104cc:	cmp	x0, #0x0
   104d0:	b.eq	10618 <__divtf3@@GCC_3.0+0x1624>  // b.none
   104d4:	ldr	w0, [sp, #564]
   104d8:	orr	w0, w0, #0x10
   104dc:	str	w0, [sp, #564]
   104e0:	ldr	x0, [sp, #400]
   104e4:	and	x0, x0, #0xc00000
   104e8:	cmp	x0, #0xc00, lsl #12
   104ec:	b.eq	10620 <__divtf3@@GCC_3.0+0x162c>  // b.none
   104f0:	cmp	x0, #0xc00, lsl #12
   104f4:	b.hi	10624 <__divtf3@@GCC_3.0+0x1630>  // b.pmore
   104f8:	cmp	x0, #0x800, lsl #12
   104fc:	b.eq	105c0 <__divtf3@@GCC_3.0+0x15cc>  // b.none
   10500:	cmp	x0, #0x800, lsl #12
   10504:	b.hi	10624 <__divtf3@@GCC_3.0+0x1630>  // b.pmore
   10508:	cmp	x0, #0x0
   1050c:	b.eq	1051c <__divtf3@@GCC_3.0+0x1528>  // b.none
   10510:	cmp	x0, #0x400, lsl #12
   10514:	b.eq	10568 <__divtf3@@GCC_3.0+0x1574>  // b.none
   10518:	b	10624 <__divtf3@@GCC_3.0+0x1630>
   1051c:	ldr	x0, [sp, #552]
   10520:	and	x0, x0, #0xf
   10524:	cmp	x0, #0x4
   10528:	b.eq	10620 <__divtf3@@GCC_3.0+0x162c>  // b.none
   1052c:	ldr	x0, [sp, #552]
   10530:	add	x0, x0, #0x4
   10534:	str	x0, [sp, #168]
   10538:	ldr	x1, [sp, #168]
   1053c:	ldr	x0, [sp, #552]
   10540:	cmp	x1, x0
   10544:	cset	w0, cc  // cc = lo, ul, last
   10548:	and	w0, w0, #0xff
   1054c:	and	x0, x0, #0xff
   10550:	ldr	x1, [sp, #544]
   10554:	add	x0, x1, x0
   10558:	str	x0, [sp, #544]
   1055c:	ldr	x0, [sp, #168]
   10560:	str	x0, [sp, #552]
   10564:	b	10620 <__divtf3@@GCC_3.0+0x162c>
   10568:	ldr	x0, [sp, #648]
   1056c:	cmp	x0, #0x0
   10570:	b.ne	10620 <__divtf3@@GCC_3.0+0x162c>  // b.any
   10574:	ldr	x0, [sp, #552]
   10578:	and	x0, x0, #0x7
   1057c:	cmp	x0, #0x0
   10580:	b.eq	10620 <__divtf3@@GCC_3.0+0x162c>  // b.none
   10584:	ldr	x0, [sp, #552]
   10588:	add	x0, x0, #0x8
   1058c:	str	x0, [sp, #176]
   10590:	ldr	x1, [sp, #176]
   10594:	ldr	x0, [sp, #552]
   10598:	cmp	x1, x0
   1059c:	cset	w0, cc  // cc = lo, ul, last
   105a0:	and	w0, w0, #0xff
   105a4:	and	x0, x0, #0xff
   105a8:	ldr	x1, [sp, #544]
   105ac:	add	x0, x1, x0
   105b0:	str	x0, [sp, #544]
   105b4:	ldr	x0, [sp, #176]
   105b8:	str	x0, [sp, #552]
   105bc:	b	10620 <__divtf3@@GCC_3.0+0x162c>
   105c0:	ldr	x0, [sp, #648]
   105c4:	cmp	x0, #0x0
   105c8:	b.eq	10620 <__divtf3@@GCC_3.0+0x162c>  // b.none
   105cc:	ldr	x0, [sp, #552]
   105d0:	and	x0, x0, #0x7
   105d4:	cmp	x0, #0x0
   105d8:	b.eq	10620 <__divtf3@@GCC_3.0+0x162c>  // b.none
   105dc:	ldr	x0, [sp, #552]
   105e0:	add	x0, x0, #0x8
   105e4:	str	x0, [sp, #184]
   105e8:	ldr	x1, [sp, #184]
   105ec:	ldr	x0, [sp, #552]
   105f0:	cmp	x1, x0
   105f4:	cset	w0, cc  // cc = lo, ul, last
   105f8:	and	w0, w0, #0xff
   105fc:	and	x0, x0, #0xff
   10600:	ldr	x1, [sp, #544]
   10604:	add	x0, x1, x0
   10608:	str	x0, [sp, #544]
   1060c:	ldr	x0, [sp, #184]
   10610:	str	x0, [sp, #552]
   10614:	b	10620 <__divtf3@@GCC_3.0+0x162c>
   10618:	nop
   1061c:	b	10624 <__divtf3@@GCC_3.0+0x1630>
   10620:	nop
   10624:	ldr	x0, [sp, #552]
   10628:	lsr	x0, x0, #3
   1062c:	str	x0, [sp, #552]
   10630:	ldr	w0, [sp, #564]
   10634:	orr	w0, w0, #0x8
   10638:	str	w0, [sp, #564]
   1063c:	b	10678 <__divtf3@@GCC_3.0+0x1684>
   10640:	str	xzr, [sp, #640]
   10644:	str	xzr, [sp, #552]
   10648:	str	xzr, [sp, #544]
   1064c:	b	10678 <__divtf3@@GCC_3.0+0x1684>
   10650:	mov	x0, #0x7fff                	// #32767
   10654:	str	x0, [sp, #640]
   10658:	str	xzr, [sp, #552]
   1065c:	str	xzr, [sp, #544]
   10660:	b	10678 <__divtf3@@GCC_3.0+0x1684>
   10664:	mov	x0, #0x7fff                	// #32767
   10668:	str	x0, [sp, #640]
   1066c:	ldr	x0, [sp, #544]
   10670:	orr	x0, x0, #0x800000000000
   10674:	str	x0, [sp, #544]
   10678:	nop
   1067c:	ldr	x0, [sp, #552]
   10680:	str	x0, [sp, #48]
   10684:	ldr	x0, [sp, #544]
   10688:	and	x1, x0, #0xffffffffffff
   1068c:	ldr	x0, [sp, #56]
   10690:	bfxil	x0, x1, #0, #48
   10694:	str	x0, [sp, #56]
   10698:	ldr	x0, [sp, #640]
   1069c:	and	w0, w0, #0x7fff
   106a0:	and	w1, w0, #0xffff
   106a4:	ldrh	w0, [sp, #62]
   106a8:	bfxil	w0, w1, #0, #15
   106ac:	strh	w0, [sp, #62]
   106b0:	ldr	x0, [sp, #648]
   106b4:	and	w0, w0, #0x1
   106b8:	and	w1, w0, #0xff
   106bc:	ldrb	w0, [sp, #63]
   106c0:	bfi	w0, w1, #7, #1
   106c4:	strb	w0, [sp, #63]
   106c8:	ldr	q0, [sp, #48]
   106cc:	str	q0, [sp, #96]
   106d0:	ldrsw	x0, [sp, #564]
   106d4:	cmp	x0, #0x0
   106d8:	b.eq	106e4 <__divtf3@@GCC_3.0+0x16f0>  // b.none
   106dc:	ldr	w0, [sp, #564]
   106e0:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   106e4:	ldr	q0, [sp, #96]
   106e8:	ldp	x29, x30, [sp]
   106ec:	add	sp, sp, #0x290
   106f0:	ret

00000000000106f4 <__eqtf2@@GCC_3.0>:
   106f4:	stp	x29, x30, [sp, #-176]!
   106f8:	mov	x29, sp
   106fc:	str	q0, [sp, #32]
   10700:	str	q1, [sp, #16]
   10704:	str	wzr, [sp, #160]
   10708:	str	xzr, [sp, #152]
   1070c:	mrs	x0, fpcr
   10710:	str	x0, [sp, #152]
   10714:	ldr	q0, [sp, #32]
   10718:	str	q0, [sp, #64]
   1071c:	ldr	x0, [sp, #64]
   10720:	str	x0, [sp, #144]
   10724:	ldr	x0, [sp, #72]
   10728:	ubfx	x0, x0, #0, #48
   1072c:	str	x0, [sp, #136]
   10730:	ldrh	w0, [sp, #78]
   10734:	ubfx	x0, x0, #0, #15
   10738:	and	w0, w0, #0xffff
   1073c:	and	x0, x0, #0xffff
   10740:	str	x0, [sp, #128]
   10744:	ldrb	w0, [sp, #79]
   10748:	ubfx	x0, x0, #7, #1
   1074c:	and	w0, w0, #0xff
   10750:	and	x0, x0, #0xff
   10754:	str	x0, [sp, #120]
   10758:	ldr	q0, [sp, #16]
   1075c:	str	q0, [sp, #48]
   10760:	ldr	x0, [sp, #48]
   10764:	str	x0, [sp, #112]
   10768:	ldr	x0, [sp, #56]
   1076c:	ubfx	x0, x0, #0, #48
   10770:	str	x0, [sp, #104]
   10774:	ldrh	w0, [sp, #62]
   10778:	ubfx	x0, x0, #0, #15
   1077c:	and	w0, w0, #0xffff
   10780:	and	x0, x0, #0xffff
   10784:	str	x0, [sp, #96]
   10788:	ldrb	w0, [sp, #63]
   1078c:	ubfx	x0, x0, #7, #1
   10790:	and	w0, w0, #0xff
   10794:	and	x0, x0, #0xff
   10798:	str	x0, [sp, #88]
   1079c:	ldr	x1, [sp, #128]
   107a0:	mov	x0, #0x7fff                	// #32767
   107a4:	cmp	x1, x0
   107a8:	b.ne	107c0 <__eqtf2@@GCC_3.0+0xcc>  // b.any
   107ac:	ldr	x1, [sp, #136]
   107b0:	ldr	x0, [sp, #144]
   107b4:	orr	x0, x1, x0
   107b8:	cmp	x0, #0x0
   107bc:	b.ne	107e4 <__eqtf2@@GCC_3.0+0xf0>  // b.any
   107c0:	ldr	x1, [sp, #96]
   107c4:	mov	x0, #0x7fff                	// #32767
   107c8:	cmp	x1, x0
   107cc:	b.ne	10894 <__eqtf2@@GCC_3.0+0x1a0>  // b.any
   107d0:	ldr	x1, [sp, #104]
   107d4:	ldr	x0, [sp, #112]
   107d8:	orr	x0, x1, x0
   107dc:	cmp	x0, #0x0
   107e0:	b.eq	10894 <__eqtf2@@GCC_3.0+0x1a0>  // b.none
   107e4:	mov	w0, #0x1                   	// #1
   107e8:	str	w0, [sp, #164]
   107ec:	str	wzr, [sp, #168]
   107f0:	ldr	x1, [sp, #128]
   107f4:	mov	x0, #0x7fff                	// #32767
   107f8:	cmp	x1, x0
   107fc:	b.ne	1082c <__eqtf2@@GCC_3.0+0x138>  // b.any
   10800:	ldr	x1, [sp, #136]
   10804:	ldr	x0, [sp, #144]
   10808:	orr	x0, x1, x0
   1080c:	cmp	x0, #0x0
   10810:	b.eq	1082c <__eqtf2@@GCC_3.0+0x138>  // b.none
   10814:	ldr	x0, [sp, #136]
   10818:	and	x0, x0, #0x800000000000
   1081c:	cmp	x0, #0x0
   10820:	b.ne	1082c <__eqtf2@@GCC_3.0+0x138>  // b.any
   10824:	mov	w0, #0x1                   	// #1
   10828:	str	w0, [sp, #168]
   1082c:	ldr	w0, [sp, #168]
   10830:	cmp	w0, #0x0
   10834:	b.ne	10884 <__eqtf2@@GCC_3.0+0x190>  // b.any
   10838:	str	wzr, [sp, #172]
   1083c:	ldr	x1, [sp, #96]
   10840:	mov	x0, #0x7fff                	// #32767
   10844:	cmp	x1, x0
   10848:	b.ne	10878 <__eqtf2@@GCC_3.0+0x184>  // b.any
   1084c:	ldr	x1, [sp, #104]
   10850:	ldr	x0, [sp, #112]
   10854:	orr	x0, x1, x0
   10858:	cmp	x0, #0x0
   1085c:	b.eq	10878 <__eqtf2@@GCC_3.0+0x184>  // b.none
   10860:	ldr	x0, [sp, #104]
   10864:	and	x0, x0, #0x800000000000
   10868:	cmp	x0, #0x0
   1086c:	b.ne	10878 <__eqtf2@@GCC_3.0+0x184>  // b.any
   10870:	mov	w0, #0x1                   	// #1
   10874:	str	w0, [sp, #172]
   10878:	ldr	w0, [sp, #172]
   1087c:	cmp	w0, #0x0
   10880:	b.eq	10908 <__eqtf2@@GCC_3.0+0x214>  // b.none
   10884:	ldr	w0, [sp, #160]
   10888:	orr	w0, w0, #0x1
   1088c:	str	w0, [sp, #160]
   10890:	b	10908 <__eqtf2@@GCC_3.0+0x214>
   10894:	ldr	x1, [sp, #128]
   10898:	ldr	x0, [sp, #96]
   1089c:	cmp	x1, x0
   108a0:	b.ne	108f4 <__eqtf2@@GCC_3.0+0x200>  // b.any
   108a4:	ldr	x1, [sp, #136]
   108a8:	ldr	x0, [sp, #104]
   108ac:	cmp	x1, x0
   108b0:	b.ne	108f4 <__eqtf2@@GCC_3.0+0x200>  // b.any
   108b4:	ldr	x1, [sp, #144]
   108b8:	ldr	x0, [sp, #112]
   108bc:	cmp	x1, x0
   108c0:	b.ne	108f4 <__eqtf2@@GCC_3.0+0x200>  // b.any
   108c4:	ldr	x1, [sp, #120]
   108c8:	ldr	x0, [sp, #88]
   108cc:	cmp	x1, x0
   108d0:	b.eq	108fc <__eqtf2@@GCC_3.0+0x208>  // b.none
   108d4:	ldr	x0, [sp, #128]
   108d8:	cmp	x0, #0x0
   108dc:	b.ne	108f4 <__eqtf2@@GCC_3.0+0x200>  // b.any
   108e0:	ldr	x1, [sp, #136]
   108e4:	ldr	x0, [sp, #144]
   108e8:	orr	x0, x1, x0
   108ec:	cmp	x0, #0x0
   108f0:	b.eq	108fc <__eqtf2@@GCC_3.0+0x208>  // b.none
   108f4:	mov	w0, #0x1                   	// #1
   108f8:	b	10900 <__eqtf2@@GCC_3.0+0x20c>
   108fc:	mov	w0, #0x0                   	// #0
   10900:	str	w0, [sp, #164]
   10904:	b	1090c <__eqtf2@@GCC_3.0+0x218>
   10908:	nop
   1090c:	ldrsw	x0, [sp, #160]
   10910:	cmp	x0, #0x0
   10914:	b.eq	10920 <__eqtf2@@GCC_3.0+0x22c>  // b.none
   10918:	ldr	w0, [sp, #160]
   1091c:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   10920:	ldr	w0, [sp, #164]
   10924:	ldp	x29, x30, [sp], #176
   10928:	ret

000000000001092c <__getf2@@GCC_3.0>:
   1092c:	stp	x29, x30, [sp, #-176]!
   10930:	mov	x29, sp
   10934:	str	q0, [sp, #32]
   10938:	str	q1, [sp, #16]
   1093c:	str	wzr, [sp, #168]
   10940:	str	xzr, [sp, #160]
   10944:	mrs	x0, fpcr
   10948:	str	x0, [sp, #160]
   1094c:	ldr	q0, [sp, #32]
   10950:	str	q0, [sp, #64]
   10954:	ldr	x0, [sp, #64]
   10958:	str	x0, [sp, #152]
   1095c:	ldr	x0, [sp, #72]
   10960:	ubfx	x0, x0, #0, #48
   10964:	str	x0, [sp, #144]
   10968:	ldrh	w0, [sp, #78]
   1096c:	ubfx	x0, x0, #0, #15
   10970:	and	w0, w0, #0xffff
   10974:	and	x0, x0, #0xffff
   10978:	str	x0, [sp, #136]
   1097c:	ldrb	w0, [sp, #79]
   10980:	ubfx	x0, x0, #7, #1
   10984:	and	w0, w0, #0xff
   10988:	and	x0, x0, #0xff
   1098c:	str	x0, [sp, #128]
   10990:	ldr	q0, [sp, #16]
   10994:	str	q0, [sp, #48]
   10998:	ldr	x0, [sp, #48]
   1099c:	str	x0, [sp, #120]
   109a0:	ldr	x0, [sp, #56]
   109a4:	ubfx	x0, x0, #0, #48
   109a8:	str	x0, [sp, #112]
   109ac:	ldrh	w0, [sp, #62]
   109b0:	ubfx	x0, x0, #0, #15
   109b4:	and	w0, w0, #0xffff
   109b8:	and	x0, x0, #0xffff
   109bc:	str	x0, [sp, #104]
   109c0:	ldrb	w0, [sp, #63]
   109c4:	ubfx	x0, x0, #7, #1
   109c8:	and	w0, w0, #0xff
   109cc:	and	x0, x0, #0xff
   109d0:	str	x0, [sp, #96]
   109d4:	ldr	x1, [sp, #136]
   109d8:	mov	x0, #0x7fff                	// #32767
   109dc:	cmp	x1, x0
   109e0:	b.ne	109f8 <__getf2@@GCC_3.0+0xcc>  // b.any
   109e4:	ldr	x1, [sp, #144]
   109e8:	ldr	x0, [sp, #152]
   109ec:	orr	x0, x1, x0
   109f0:	cmp	x0, #0x0
   109f4:	b.ne	10a1c <__getf2@@GCC_3.0+0xf0>  // b.any
   109f8:	ldr	x1, [sp, #104]
   109fc:	mov	x0, #0x7fff                	// #32767
   10a00:	cmp	x1, x0
   10a04:	b.ne	10a34 <__getf2@@GCC_3.0+0x108>  // b.any
   10a08:	ldr	x1, [sp, #112]
   10a0c:	ldr	x0, [sp, #120]
   10a10:	orr	x0, x1, x0
   10a14:	cmp	x0, #0x0
   10a18:	b.eq	10a34 <__getf2@@GCC_3.0+0x108>  // b.none
   10a1c:	mov	w0, #0xfffffffe            	// #-2
   10a20:	str	w0, [sp, #172]
   10a24:	ldr	w0, [sp, #168]
   10a28:	orr	w0, w0, #0x1
   10a2c:	str	w0, [sp, #168]
   10a30:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10a34:	ldr	x0, [sp, #136]
   10a38:	cmp	x0, #0x0
   10a3c:	b.ne	10a5c <__getf2@@GCC_3.0+0x130>  // b.any
   10a40:	ldr	x1, [sp, #144]
   10a44:	ldr	x0, [sp, #152]
   10a48:	orr	x0, x1, x0
   10a4c:	cmp	x0, #0x0
   10a50:	b.ne	10a5c <__getf2@@GCC_3.0+0x130>  // b.any
   10a54:	mov	w0, #0x1                   	// #1
   10a58:	b	10a60 <__getf2@@GCC_3.0+0x134>
   10a5c:	mov	w0, #0x0                   	// #0
   10a60:	str	w0, [sp, #92]
   10a64:	ldr	x0, [sp, #104]
   10a68:	cmp	x0, #0x0
   10a6c:	b.ne	10a8c <__getf2@@GCC_3.0+0x160>  // b.any
   10a70:	ldr	x1, [sp, #112]
   10a74:	ldr	x0, [sp, #120]
   10a78:	orr	x0, x1, x0
   10a7c:	cmp	x0, #0x0
   10a80:	b.ne	10a8c <__getf2@@GCC_3.0+0x160>  // b.any
   10a84:	mov	w0, #0x1                   	// #1
   10a88:	b	10a90 <__getf2@@GCC_3.0+0x164>
   10a8c:	mov	w0, #0x0                   	// #0
   10a90:	str	w0, [sp, #88]
   10a94:	ldr	w0, [sp, #92]
   10a98:	cmp	w0, #0x0
   10a9c:	b.eq	10ab4 <__getf2@@GCC_3.0+0x188>  // b.none
   10aa0:	ldr	w0, [sp, #88]
   10aa4:	cmp	w0, #0x0
   10aa8:	b.eq	10ab4 <__getf2@@GCC_3.0+0x188>  // b.none
   10aac:	str	wzr, [sp, #172]
   10ab0:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10ab4:	ldr	w0, [sp, #92]
   10ab8:	cmp	w0, #0x0
   10abc:	b.eq	10ae0 <__getf2@@GCC_3.0+0x1b4>  // b.none
   10ac0:	ldr	x0, [sp, #96]
   10ac4:	cmp	x0, #0x0
   10ac8:	b.eq	10ad4 <__getf2@@GCC_3.0+0x1a8>  // b.none
   10acc:	mov	w0, #0x1                   	// #1
   10ad0:	b	10ad8 <__getf2@@GCC_3.0+0x1ac>
   10ad4:	mov	w0, #0xffffffff            	// #-1
   10ad8:	str	w0, [sp, #172]
   10adc:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10ae0:	ldr	w0, [sp, #88]
   10ae4:	cmp	w0, #0x0
   10ae8:	b.eq	10b0c <__getf2@@GCC_3.0+0x1e0>  // b.none
   10aec:	ldr	x0, [sp, #128]
   10af0:	cmp	x0, #0x0
   10af4:	b.eq	10b00 <__getf2@@GCC_3.0+0x1d4>  // b.none
   10af8:	mov	w0, #0xffffffff            	// #-1
   10afc:	b	10b04 <__getf2@@GCC_3.0+0x1d8>
   10b00:	mov	w0, #0x1                   	// #1
   10b04:	str	w0, [sp, #172]
   10b08:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10b0c:	ldr	x1, [sp, #128]
   10b10:	ldr	x0, [sp, #96]
   10b14:	cmp	x1, x0
   10b18:	b.eq	10b3c <__getf2@@GCC_3.0+0x210>  // b.none
   10b1c:	ldr	x0, [sp, #128]
   10b20:	cmp	x0, #0x0
   10b24:	b.eq	10b30 <__getf2@@GCC_3.0+0x204>  // b.none
   10b28:	mov	w0, #0xffffffff            	// #-1
   10b2c:	b	10b34 <__getf2@@GCC_3.0+0x208>
   10b30:	mov	w0, #0x1                   	// #1
   10b34:	str	w0, [sp, #172]
   10b38:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10b3c:	ldr	x1, [sp, #136]
   10b40:	ldr	x0, [sp, #104]
   10b44:	cmp	x1, x0
   10b48:	b.le	10b6c <__getf2@@GCC_3.0+0x240>
   10b4c:	ldr	x0, [sp, #128]
   10b50:	cmp	x0, #0x0
   10b54:	b.eq	10b60 <__getf2@@GCC_3.0+0x234>  // b.none
   10b58:	mov	w0, #0xffffffff            	// #-1
   10b5c:	b	10b64 <__getf2@@GCC_3.0+0x238>
   10b60:	mov	w0, #0x1                   	// #1
   10b64:	str	w0, [sp, #172]
   10b68:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10b6c:	ldr	x1, [sp, #136]
   10b70:	ldr	x0, [sp, #104]
   10b74:	cmp	x1, x0
   10b78:	b.ge	10b9c <__getf2@@GCC_3.0+0x270>  // b.tcont
   10b7c:	ldr	x0, [sp, #128]
   10b80:	cmp	x0, #0x0
   10b84:	b.eq	10b90 <__getf2@@GCC_3.0+0x264>  // b.none
   10b88:	mov	w0, #0x1                   	// #1
   10b8c:	b	10b94 <__getf2@@GCC_3.0+0x268>
   10b90:	mov	w0, #0xffffffff            	// #-1
   10b94:	str	w0, [sp, #172]
   10b98:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10b9c:	ldr	x1, [sp, #144]
   10ba0:	ldr	x0, [sp, #112]
   10ba4:	cmp	x1, x0
   10ba8:	b.hi	10bcc <__getf2@@GCC_3.0+0x2a0>  // b.pmore
   10bac:	ldr	x1, [sp, #144]
   10bb0:	ldr	x0, [sp, #112]
   10bb4:	cmp	x1, x0
   10bb8:	b.ne	10bec <__getf2@@GCC_3.0+0x2c0>  // b.any
   10bbc:	ldr	x1, [sp, #152]
   10bc0:	ldr	x0, [sp, #120]
   10bc4:	cmp	x1, x0
   10bc8:	b.ls	10bec <__getf2@@GCC_3.0+0x2c0>  // b.plast
   10bcc:	ldr	x0, [sp, #128]
   10bd0:	cmp	x0, #0x0
   10bd4:	b.eq	10be0 <__getf2@@GCC_3.0+0x2b4>  // b.none
   10bd8:	mov	w0, #0xffffffff            	// #-1
   10bdc:	b	10be4 <__getf2@@GCC_3.0+0x2b8>
   10be0:	mov	w0, #0x1                   	// #1
   10be4:	str	w0, [sp, #172]
   10be8:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10bec:	ldr	x1, [sp, #112]
   10bf0:	ldr	x0, [sp, #144]
   10bf4:	cmp	x1, x0
   10bf8:	b.hi	10c1c <__getf2@@GCC_3.0+0x2f0>  // b.pmore
   10bfc:	ldr	x1, [sp, #112]
   10c00:	ldr	x0, [sp, #144]
   10c04:	cmp	x1, x0
   10c08:	b.ne	10c3c <__getf2@@GCC_3.0+0x310>  // b.any
   10c0c:	ldr	x1, [sp, #120]
   10c10:	ldr	x0, [sp, #152]
   10c14:	cmp	x1, x0
   10c18:	b.ls	10c3c <__getf2@@GCC_3.0+0x310>  // b.plast
   10c1c:	ldr	x0, [sp, #128]
   10c20:	cmp	x0, #0x0
   10c24:	b.eq	10c30 <__getf2@@GCC_3.0+0x304>  // b.none
   10c28:	mov	w0, #0x1                   	// #1
   10c2c:	b	10c34 <__getf2@@GCC_3.0+0x308>
   10c30:	mov	w0, #0xffffffff            	// #-1
   10c34:	str	w0, [sp, #172]
   10c38:	b	10c40 <__getf2@@GCC_3.0+0x314>
   10c3c:	str	wzr, [sp, #172]
   10c40:	ldrsw	x0, [sp, #168]
   10c44:	cmp	x0, #0x0
   10c48:	b.eq	10c54 <__getf2@@GCC_3.0+0x328>  // b.none
   10c4c:	ldr	w0, [sp, #168]
   10c50:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   10c54:	ldr	w0, [sp, #172]
   10c58:	ldp	x29, x30, [sp], #176
   10c5c:	ret

0000000000010c60 <__letf2@@GCC_3.0>:
   10c60:	stp	x29, x30, [sp, #-176]!
   10c64:	mov	x29, sp
   10c68:	str	q0, [sp, #32]
   10c6c:	str	q1, [sp, #16]
   10c70:	str	wzr, [sp, #168]
   10c74:	str	xzr, [sp, #160]
   10c78:	mrs	x0, fpcr
   10c7c:	str	x0, [sp, #160]
   10c80:	ldr	q0, [sp, #32]
   10c84:	str	q0, [sp, #64]
   10c88:	ldr	x0, [sp, #64]
   10c8c:	str	x0, [sp, #152]
   10c90:	ldr	x0, [sp, #72]
   10c94:	ubfx	x0, x0, #0, #48
   10c98:	str	x0, [sp, #144]
   10c9c:	ldrh	w0, [sp, #78]
   10ca0:	ubfx	x0, x0, #0, #15
   10ca4:	and	w0, w0, #0xffff
   10ca8:	and	x0, x0, #0xffff
   10cac:	str	x0, [sp, #136]
   10cb0:	ldrb	w0, [sp, #79]
   10cb4:	ubfx	x0, x0, #7, #1
   10cb8:	and	w0, w0, #0xff
   10cbc:	and	x0, x0, #0xff
   10cc0:	str	x0, [sp, #128]
   10cc4:	ldr	q0, [sp, #16]
   10cc8:	str	q0, [sp, #48]
   10ccc:	ldr	x0, [sp, #48]
   10cd0:	str	x0, [sp, #120]
   10cd4:	ldr	x0, [sp, #56]
   10cd8:	ubfx	x0, x0, #0, #48
   10cdc:	str	x0, [sp, #112]
   10ce0:	ldrh	w0, [sp, #62]
   10ce4:	ubfx	x0, x0, #0, #15
   10ce8:	and	w0, w0, #0xffff
   10cec:	and	x0, x0, #0xffff
   10cf0:	str	x0, [sp, #104]
   10cf4:	ldrb	w0, [sp, #63]
   10cf8:	ubfx	x0, x0, #7, #1
   10cfc:	and	w0, w0, #0xff
   10d00:	and	x0, x0, #0xff
   10d04:	str	x0, [sp, #96]
   10d08:	ldr	x1, [sp, #136]
   10d0c:	mov	x0, #0x7fff                	// #32767
   10d10:	cmp	x1, x0
   10d14:	b.ne	10d2c <__letf2@@GCC_3.0+0xcc>  // b.any
   10d18:	ldr	x1, [sp, #144]
   10d1c:	ldr	x0, [sp, #152]
   10d20:	orr	x0, x1, x0
   10d24:	cmp	x0, #0x0
   10d28:	b.ne	10d50 <__letf2@@GCC_3.0+0xf0>  // b.any
   10d2c:	ldr	x1, [sp, #104]
   10d30:	mov	x0, #0x7fff                	// #32767
   10d34:	cmp	x1, x0
   10d38:	b.ne	10d68 <__letf2@@GCC_3.0+0x108>  // b.any
   10d3c:	ldr	x1, [sp, #112]
   10d40:	ldr	x0, [sp, #120]
   10d44:	orr	x0, x1, x0
   10d48:	cmp	x0, #0x0
   10d4c:	b.eq	10d68 <__letf2@@GCC_3.0+0x108>  // b.none
   10d50:	mov	w0, #0x2                   	// #2
   10d54:	str	w0, [sp, #172]
   10d58:	ldr	w0, [sp, #168]
   10d5c:	orr	w0, w0, #0x1
   10d60:	str	w0, [sp, #168]
   10d64:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10d68:	ldr	x0, [sp, #136]
   10d6c:	cmp	x0, #0x0
   10d70:	b.ne	10d90 <__letf2@@GCC_3.0+0x130>  // b.any
   10d74:	ldr	x1, [sp, #144]
   10d78:	ldr	x0, [sp, #152]
   10d7c:	orr	x0, x1, x0
   10d80:	cmp	x0, #0x0
   10d84:	b.ne	10d90 <__letf2@@GCC_3.0+0x130>  // b.any
   10d88:	mov	w0, #0x1                   	// #1
   10d8c:	b	10d94 <__letf2@@GCC_3.0+0x134>
   10d90:	mov	w0, #0x0                   	// #0
   10d94:	str	w0, [sp, #92]
   10d98:	ldr	x0, [sp, #104]
   10d9c:	cmp	x0, #0x0
   10da0:	b.ne	10dc0 <__letf2@@GCC_3.0+0x160>  // b.any
   10da4:	ldr	x1, [sp, #112]
   10da8:	ldr	x0, [sp, #120]
   10dac:	orr	x0, x1, x0
   10db0:	cmp	x0, #0x0
   10db4:	b.ne	10dc0 <__letf2@@GCC_3.0+0x160>  // b.any
   10db8:	mov	w0, #0x1                   	// #1
   10dbc:	b	10dc4 <__letf2@@GCC_3.0+0x164>
   10dc0:	mov	w0, #0x0                   	// #0
   10dc4:	str	w0, [sp, #88]
   10dc8:	ldr	w0, [sp, #92]
   10dcc:	cmp	w0, #0x0
   10dd0:	b.eq	10de8 <__letf2@@GCC_3.0+0x188>  // b.none
   10dd4:	ldr	w0, [sp, #88]
   10dd8:	cmp	w0, #0x0
   10ddc:	b.eq	10de8 <__letf2@@GCC_3.0+0x188>  // b.none
   10de0:	str	wzr, [sp, #172]
   10de4:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10de8:	ldr	w0, [sp, #92]
   10dec:	cmp	w0, #0x0
   10df0:	b.eq	10e14 <__letf2@@GCC_3.0+0x1b4>  // b.none
   10df4:	ldr	x0, [sp, #96]
   10df8:	cmp	x0, #0x0
   10dfc:	b.eq	10e08 <__letf2@@GCC_3.0+0x1a8>  // b.none
   10e00:	mov	w0, #0x1                   	// #1
   10e04:	b	10e0c <__letf2@@GCC_3.0+0x1ac>
   10e08:	mov	w0, #0xffffffff            	// #-1
   10e0c:	str	w0, [sp, #172]
   10e10:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10e14:	ldr	w0, [sp, #88]
   10e18:	cmp	w0, #0x0
   10e1c:	b.eq	10e40 <__letf2@@GCC_3.0+0x1e0>  // b.none
   10e20:	ldr	x0, [sp, #128]
   10e24:	cmp	x0, #0x0
   10e28:	b.eq	10e34 <__letf2@@GCC_3.0+0x1d4>  // b.none
   10e2c:	mov	w0, #0xffffffff            	// #-1
   10e30:	b	10e38 <__letf2@@GCC_3.0+0x1d8>
   10e34:	mov	w0, #0x1                   	// #1
   10e38:	str	w0, [sp, #172]
   10e3c:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10e40:	ldr	x1, [sp, #128]
   10e44:	ldr	x0, [sp, #96]
   10e48:	cmp	x1, x0
   10e4c:	b.eq	10e70 <__letf2@@GCC_3.0+0x210>  // b.none
   10e50:	ldr	x0, [sp, #128]
   10e54:	cmp	x0, #0x0
   10e58:	b.eq	10e64 <__letf2@@GCC_3.0+0x204>  // b.none
   10e5c:	mov	w0, #0xffffffff            	// #-1
   10e60:	b	10e68 <__letf2@@GCC_3.0+0x208>
   10e64:	mov	w0, #0x1                   	// #1
   10e68:	str	w0, [sp, #172]
   10e6c:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10e70:	ldr	x1, [sp, #136]
   10e74:	ldr	x0, [sp, #104]
   10e78:	cmp	x1, x0
   10e7c:	b.le	10ea0 <__letf2@@GCC_3.0+0x240>
   10e80:	ldr	x0, [sp, #128]
   10e84:	cmp	x0, #0x0
   10e88:	b.eq	10e94 <__letf2@@GCC_3.0+0x234>  // b.none
   10e8c:	mov	w0, #0xffffffff            	// #-1
   10e90:	b	10e98 <__letf2@@GCC_3.0+0x238>
   10e94:	mov	w0, #0x1                   	// #1
   10e98:	str	w0, [sp, #172]
   10e9c:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10ea0:	ldr	x1, [sp, #136]
   10ea4:	ldr	x0, [sp, #104]
   10ea8:	cmp	x1, x0
   10eac:	b.ge	10ed0 <__letf2@@GCC_3.0+0x270>  // b.tcont
   10eb0:	ldr	x0, [sp, #128]
   10eb4:	cmp	x0, #0x0
   10eb8:	b.eq	10ec4 <__letf2@@GCC_3.0+0x264>  // b.none
   10ebc:	mov	w0, #0x1                   	// #1
   10ec0:	b	10ec8 <__letf2@@GCC_3.0+0x268>
   10ec4:	mov	w0, #0xffffffff            	// #-1
   10ec8:	str	w0, [sp, #172]
   10ecc:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10ed0:	ldr	x1, [sp, #144]
   10ed4:	ldr	x0, [sp, #112]
   10ed8:	cmp	x1, x0
   10edc:	b.hi	10f00 <__letf2@@GCC_3.0+0x2a0>  // b.pmore
   10ee0:	ldr	x1, [sp, #144]
   10ee4:	ldr	x0, [sp, #112]
   10ee8:	cmp	x1, x0
   10eec:	b.ne	10f20 <__letf2@@GCC_3.0+0x2c0>  // b.any
   10ef0:	ldr	x1, [sp, #152]
   10ef4:	ldr	x0, [sp, #120]
   10ef8:	cmp	x1, x0
   10efc:	b.ls	10f20 <__letf2@@GCC_3.0+0x2c0>  // b.plast
   10f00:	ldr	x0, [sp, #128]
   10f04:	cmp	x0, #0x0
   10f08:	b.eq	10f14 <__letf2@@GCC_3.0+0x2b4>  // b.none
   10f0c:	mov	w0, #0xffffffff            	// #-1
   10f10:	b	10f18 <__letf2@@GCC_3.0+0x2b8>
   10f14:	mov	w0, #0x1                   	// #1
   10f18:	str	w0, [sp, #172]
   10f1c:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10f20:	ldr	x1, [sp, #112]
   10f24:	ldr	x0, [sp, #144]
   10f28:	cmp	x1, x0
   10f2c:	b.hi	10f50 <__letf2@@GCC_3.0+0x2f0>  // b.pmore
   10f30:	ldr	x1, [sp, #112]
   10f34:	ldr	x0, [sp, #144]
   10f38:	cmp	x1, x0
   10f3c:	b.ne	10f70 <__letf2@@GCC_3.0+0x310>  // b.any
   10f40:	ldr	x1, [sp, #120]
   10f44:	ldr	x0, [sp, #152]
   10f48:	cmp	x1, x0
   10f4c:	b.ls	10f70 <__letf2@@GCC_3.0+0x310>  // b.plast
   10f50:	ldr	x0, [sp, #128]
   10f54:	cmp	x0, #0x0
   10f58:	b.eq	10f64 <__letf2@@GCC_3.0+0x304>  // b.none
   10f5c:	mov	w0, #0x1                   	// #1
   10f60:	b	10f68 <__letf2@@GCC_3.0+0x308>
   10f64:	mov	w0, #0xffffffff            	// #-1
   10f68:	str	w0, [sp, #172]
   10f6c:	b	10f74 <__letf2@@GCC_3.0+0x314>
   10f70:	str	wzr, [sp, #172]
   10f74:	ldrsw	x0, [sp, #168]
   10f78:	cmp	x0, #0x0
   10f7c:	b.eq	10f88 <__letf2@@GCC_3.0+0x328>  // b.none
   10f80:	ldr	w0, [sp, #168]
   10f84:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   10f88:	ldr	w0, [sp, #172]
   10f8c:	ldp	x29, x30, [sp], #176
   10f90:	ret

0000000000010f94 <__multf3@@GCC_3.0>:
   10f94:	sub	sp, sp, #0x2a0
   10f98:	stp	x29, x30, [sp]
   10f9c:	mov	x29, sp
   10fa0:	str	q0, [sp, #32]
   10fa4:	str	q1, [sp, #16]
   10fa8:	str	wzr, [sp, #596]
   10fac:	str	xzr, [sp, #488]
   10fb0:	mrs	x0, fpcr
   10fb4:	str	x0, [sp, #488]
   10fb8:	ldr	q0, [sp, #32]
   10fbc:	str	q0, [sp, #112]
   10fc0:	ldr	x0, [sp, #112]
   10fc4:	str	x0, [sp, #608]
   10fc8:	ldr	x0, [sp, #120]
   10fcc:	ubfx	x0, x0, #0, #48
   10fd0:	str	x0, [sp, #616]
   10fd4:	ldrh	w0, [sp, #126]
   10fd8:	ubfx	x0, x0, #0, #15
   10fdc:	and	w0, w0, #0xffff
   10fe0:	and	x0, x0, #0xffff
   10fe4:	str	x0, [sp, #600]
   10fe8:	ldrb	w0, [sp, #127]
   10fec:	ubfx	x0, x0, #7, #1
   10ff0:	and	w0, w0, #0xff
   10ff4:	and	x0, x0, #0xff
   10ff8:	str	x0, [sp, #480]
   10ffc:	ldr	x0, [sp, #600]
   11000:	cmp	x0, #0x0
   11004:	b.eq	11060 <__multf3@@GCC_3.0+0xcc>  // b.none
   11008:	ldr	x1, [sp, #600]
   1100c:	mov	x0, #0x7fff                	// #32767
   11010:	cmp	x1, x0
   11014:	b.eq	11154 <__multf3@@GCC_3.0+0x1c0>  // b.none
   11018:	ldr	x0, [sp, #616]
   1101c:	orr	x0, x0, #0x1000000000000
   11020:	str	x0, [sp, #616]
   11024:	ldr	x0, [sp, #616]
   11028:	lsl	x1, x0, #3
   1102c:	ldr	x0, [sp, #608]
   11030:	lsr	x0, x0, #61
   11034:	orr	x0, x1, x0
   11038:	str	x0, [sp, #616]
   1103c:	ldr	x0, [sp, #608]
   11040:	lsl	x0, x0, #3
   11044:	str	x0, [sp, #608]
   11048:	ldr	x1, [sp, #600]
   1104c:	mov	x0, #0xffffffffffffc001    	// #-16383
   11050:	add	x0, x1, x0
   11054:	str	x0, [sp, #600]
   11058:	str	xzr, [sp, #584]
   1105c:	b	11198 <__multf3@@GCC_3.0+0x204>
   11060:	ldr	x1, [sp, #616]
   11064:	ldr	x0, [sp, #608]
   11068:	orr	x0, x1, x0
   1106c:	cmp	x0, #0x0
   11070:	b.ne	11080 <__multf3@@GCC_3.0+0xec>  // b.any
   11074:	mov	x0, #0x1                   	// #1
   11078:	str	x0, [sp, #584]
   1107c:	b	11198 <__multf3@@GCC_3.0+0x204>
   11080:	ldr	x0, [sp, #616]
   11084:	cmp	x0, #0x0
   11088:	b.eq	110a0 <__multf3@@GCC_3.0+0x10c>  // b.none
   1108c:	ldr	x0, [sp, #616]
   11090:	clz	x0, x0
   11094:	sxtw	x0, w0
   11098:	str	x0, [sp, #552]
   1109c:	b	110bc <__multf3@@GCC_3.0+0x128>
   110a0:	ldr	x0, [sp, #608]
   110a4:	clz	x0, x0
   110a8:	sxtw	x0, w0
   110ac:	str	x0, [sp, #552]
   110b0:	ldr	x0, [sp, #552]
   110b4:	add	x0, x0, #0x40
   110b8:	str	x0, [sp, #552]
   110bc:	ldr	x0, [sp, #552]
   110c0:	sub	x0, x0, #0xf
   110c4:	str	x0, [sp, #552]
   110c8:	ldr	x0, [sp, #552]
   110cc:	cmp	x0, #0x3c
   110d0:	b.gt	1111c <__multf3@@GCC_3.0+0x188>
   110d4:	ldr	x0, [sp, #552]
   110d8:	add	w0, w0, #0x3
   110dc:	ldr	x1, [sp, #616]
   110e0:	lsl	x1, x1, x0
   110e4:	ldr	x0, [sp, #552]
   110e8:	mov	w2, w0
   110ec:	mov	w0, #0x3d                  	// #61
   110f0:	sub	w0, w0, w2
   110f4:	ldr	x2, [sp, #608]
   110f8:	lsr	x0, x2, x0
   110fc:	orr	x0, x1, x0
   11100:	str	x0, [sp, #616]
   11104:	ldr	x0, [sp, #552]
   11108:	add	w0, w0, #0x3
   1110c:	ldr	x1, [sp, #608]
   11110:	lsl	x0, x1, x0
   11114:	str	x0, [sp, #608]
   11118:	b	11134 <__multf3@@GCC_3.0+0x1a0>
   1111c:	ldr	x0, [sp, #552]
   11120:	sub	w0, w0, #0x3d
   11124:	ldr	x1, [sp, #608]
   11128:	lsl	x0, x1, x0
   1112c:	str	x0, [sp, #616]
   11130:	str	xzr, [sp, #608]
   11134:	ldr	x1, [sp, #552]
   11138:	mov	x0, #0x3ffe                	// #16382
   1113c:	add	x0, x1, x0
   11140:	ldr	x1, [sp, #600]
   11144:	sub	x0, x1, x0
   11148:	str	x0, [sp, #600]
   1114c:	str	xzr, [sp, #584]
   11150:	b	11198 <__multf3@@GCC_3.0+0x204>
   11154:	ldr	x1, [sp, #616]
   11158:	ldr	x0, [sp, #608]
   1115c:	orr	x0, x1, x0
   11160:	cmp	x0, #0x0
   11164:	b.ne	11174 <__multf3@@GCC_3.0+0x1e0>  // b.any
   11168:	mov	x0, #0x2                   	// #2
   1116c:	str	x0, [sp, #584]
   11170:	b	11198 <__multf3@@GCC_3.0+0x204>
   11174:	mov	x0, #0x3                   	// #3
   11178:	str	x0, [sp, #584]
   1117c:	ldr	x0, [sp, #616]
   11180:	and	x0, x0, #0x800000000000
   11184:	cmp	x0, #0x0
   11188:	b.ne	11198 <__multf3@@GCC_3.0+0x204>  // b.any
   1118c:	ldr	w0, [sp, #596]
   11190:	orr	w0, w0, #0x1
   11194:	str	w0, [sp, #596]
   11198:	nop
   1119c:	ldr	q0, [sp, #16]
   111a0:	str	q0, [sp, #96]
   111a4:	ldr	x0, [sp, #96]
   111a8:	str	x0, [sp, #640]
   111ac:	ldr	x0, [sp, #104]
   111b0:	ubfx	x0, x0, #0, #48
   111b4:	str	x0, [sp, #648]
   111b8:	ldrh	w0, [sp, #110]
   111bc:	ubfx	x0, x0, #0, #15
   111c0:	and	w0, w0, #0xffff
   111c4:	and	x0, x0, #0xffff
   111c8:	str	x0, [sp, #624]
   111cc:	ldrb	w0, [sp, #111]
   111d0:	ubfx	x0, x0, #7, #1
   111d4:	and	w0, w0, #0xff
   111d8:	and	x0, x0, #0xff
   111dc:	str	x0, [sp, #472]
   111e0:	ldr	x0, [sp, #624]
   111e4:	cmp	x0, #0x0
   111e8:	b.eq	11244 <__multf3@@GCC_3.0+0x2b0>  // b.none
   111ec:	ldr	x1, [sp, #624]
   111f0:	mov	x0, #0x7fff                	// #32767
   111f4:	cmp	x1, x0
   111f8:	b.eq	11338 <__multf3@@GCC_3.0+0x3a4>  // b.none
   111fc:	ldr	x0, [sp, #648]
   11200:	orr	x0, x0, #0x1000000000000
   11204:	str	x0, [sp, #648]
   11208:	ldr	x0, [sp, #648]
   1120c:	lsl	x1, x0, #3
   11210:	ldr	x0, [sp, #640]
   11214:	lsr	x0, x0, #61
   11218:	orr	x0, x1, x0
   1121c:	str	x0, [sp, #648]
   11220:	ldr	x0, [sp, #640]
   11224:	lsl	x0, x0, #3
   11228:	str	x0, [sp, #640]
   1122c:	ldr	x1, [sp, #624]
   11230:	mov	x0, #0xffffffffffffc001    	// #-16383
   11234:	add	x0, x1, x0
   11238:	str	x0, [sp, #624]
   1123c:	str	xzr, [sp, #632]
   11240:	b	1137c <__multf3@@GCC_3.0+0x3e8>
   11244:	ldr	x1, [sp, #648]
   11248:	ldr	x0, [sp, #640]
   1124c:	orr	x0, x1, x0
   11250:	cmp	x0, #0x0
   11254:	b.ne	11264 <__multf3@@GCC_3.0+0x2d0>  // b.any
   11258:	mov	x0, #0x1                   	// #1
   1125c:	str	x0, [sp, #632]
   11260:	b	1137c <__multf3@@GCC_3.0+0x3e8>
   11264:	ldr	x0, [sp, #648]
   11268:	cmp	x0, #0x0
   1126c:	b.eq	11284 <__multf3@@GCC_3.0+0x2f0>  // b.none
   11270:	ldr	x0, [sp, #648]
   11274:	clz	x0, x0
   11278:	sxtw	x0, w0
   1127c:	str	x0, [sp, #544]
   11280:	b	112a0 <__multf3@@GCC_3.0+0x30c>
   11284:	ldr	x0, [sp, #640]
   11288:	clz	x0, x0
   1128c:	sxtw	x0, w0
   11290:	str	x0, [sp, #544]
   11294:	ldr	x0, [sp, #544]
   11298:	add	x0, x0, #0x40
   1129c:	str	x0, [sp, #544]
   112a0:	ldr	x0, [sp, #544]
   112a4:	sub	x0, x0, #0xf
   112a8:	str	x0, [sp, #544]
   112ac:	ldr	x0, [sp, #544]
   112b0:	cmp	x0, #0x3c
   112b4:	b.gt	11300 <__multf3@@GCC_3.0+0x36c>
   112b8:	ldr	x0, [sp, #544]
   112bc:	add	w0, w0, #0x3
   112c0:	ldr	x1, [sp, #648]
   112c4:	lsl	x1, x1, x0
   112c8:	ldr	x0, [sp, #544]
   112cc:	mov	w2, w0
   112d0:	mov	w0, #0x3d                  	// #61
   112d4:	sub	w0, w0, w2
   112d8:	ldr	x2, [sp, #640]
   112dc:	lsr	x0, x2, x0
   112e0:	orr	x0, x1, x0
   112e4:	str	x0, [sp, #648]
   112e8:	ldr	x0, [sp, #544]
   112ec:	add	w0, w0, #0x3
   112f0:	ldr	x1, [sp, #640]
   112f4:	lsl	x0, x1, x0
   112f8:	str	x0, [sp, #640]
   112fc:	b	11318 <__multf3@@GCC_3.0+0x384>
   11300:	ldr	x0, [sp, #544]
   11304:	sub	w0, w0, #0x3d
   11308:	ldr	x1, [sp, #640]
   1130c:	lsl	x0, x1, x0
   11310:	str	x0, [sp, #648]
   11314:	str	xzr, [sp, #640]
   11318:	ldr	x1, [sp, #544]
   1131c:	mov	x0, #0x3ffe                	// #16382
   11320:	add	x0, x1, x0
   11324:	ldr	x1, [sp, #624]
   11328:	sub	x0, x1, x0
   1132c:	str	x0, [sp, #624]
   11330:	str	xzr, [sp, #632]
   11334:	b	1137c <__multf3@@GCC_3.0+0x3e8>
   11338:	ldr	x1, [sp, #648]
   1133c:	ldr	x0, [sp, #640]
   11340:	orr	x0, x1, x0
   11344:	cmp	x0, #0x0
   11348:	b.ne	11358 <__multf3@@GCC_3.0+0x3c4>  // b.any
   1134c:	mov	x0, #0x2                   	// #2
   11350:	str	x0, [sp, #632]
   11354:	b	1137c <__multf3@@GCC_3.0+0x3e8>
   11358:	mov	x0, #0x3                   	// #3
   1135c:	str	x0, [sp, #632]
   11360:	ldr	x0, [sp, #648]
   11364:	and	x0, x0, #0x800000000000
   11368:	cmp	x0, #0x0
   1136c:	b.ne	1137c <__multf3@@GCC_3.0+0x3e8>  // b.any
   11370:	ldr	w0, [sp, #596]
   11374:	orr	w0, w0, #0x1
   11378:	str	w0, [sp, #596]
   1137c:	nop
   11380:	ldr	x1, [sp, #480]
   11384:	ldr	x0, [sp, #472]
   11388:	eor	x0, x1, x0
   1138c:	str	x0, [sp, #656]
   11390:	ldr	x1, [sp, #600]
   11394:	ldr	x0, [sp, #624]
   11398:	add	x0, x1, x0
   1139c:	add	x0, x0, #0x1
   113a0:	str	x0, [sp, #576]
   113a4:	ldr	x0, [sp, #584]
   113a8:	lsl	x1, x0, #2
   113ac:	ldr	x0, [sp, #632]
   113b0:	orr	x0, x1, x0
   113b4:	cmp	x0, #0xf
   113b8:	b.eq	11bc8 <__multf3@@GCC_3.0+0xc34>  // b.none
   113bc:	cmp	x0, #0xf
   113c0:	b.gt	11c9c <__multf3@@GCC_3.0+0xd08>
   113c4:	cmp	x0, #0xe
   113c8:	b.gt	11c9c <__multf3@@GCC_3.0+0xd08>
   113cc:	cmp	x0, #0xc
   113d0:	b.ge	11c28 <__multf3@@GCC_3.0+0xc94>  // b.tcont
   113d4:	cmp	x0, #0xb
   113d8:	b.eq	11c4c <__multf3@@GCC_3.0+0xcb8>  // b.none
   113dc:	cmp	x0, #0xb
   113e0:	b.gt	11c9c <__multf3@@GCC_3.0+0xd08>
   113e4:	cmp	x0, #0xa
   113e8:	b.gt	11c9c <__multf3@@GCC_3.0+0xd08>
   113ec:	cmp	x0, #0x3
   113f0:	b.ge	11414 <__multf3@@GCC_3.0+0x480>  // b.tcont
   113f4:	cmp	x0, #0x0
   113f8:	b.eq	11478 <__multf3@@GCC_3.0+0x4e4>  // b.none
   113fc:	cmp	x0, #0x0
   11400:	b.lt	11c9c <__multf3@@GCC_3.0+0xd08>  // b.tstop
   11404:	sub	x0, x0, #0x1
   11408:	cmp	x0, #0x1
   1140c:	b.hi	11c9c <__multf3@@GCC_3.0+0xd08>  // b.pmore
   11410:	b	11c54 <__multf3@@GCC_3.0+0xcc0>
   11414:	mov	w1, w0
   11418:	mov	x0, #0x1                   	// #1
   1141c:	lsl	x0, x0, x1
   11420:	mov	x1, #0x530                 	// #1328
   11424:	and	x1, x0, x1
   11428:	cmp	x1, #0x0
   1142c:	cset	w1, ne  // ne = any
   11430:	and	w1, w1, #0xff
   11434:	cmp	w1, #0x0
   11438:	b.ne	11c30 <__multf3@@GCC_3.0+0xc9c>  // b.any
   1143c:	mov	x1, #0x240                 	// #576
   11440:	and	x1, x0, x1
   11444:	cmp	x1, #0x0
   11448:	cset	w1, ne  // ne = any
   1144c:	and	w1, w1, #0xff
   11450:	cmp	w1, #0x0
   11454:	b.ne	11c70 <__multf3@@GCC_3.0+0xcdc>  // b.any
   11458:	mov	x1, #0x88                  	// #136
   1145c:	and	x0, x0, x1
   11460:	cmp	x0, #0x0
   11464:	cset	w0, ne  // ne = any
   11468:	and	w0, w0, #0xff
   1146c:	cmp	w0, #0x0
   11470:	b.ne	11c4c <__multf3@@GCC_3.0+0xcb8>  // b.any
   11474:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11478:	str	xzr, [sp, #664]
   1147c:	ldr	x0, [sp, #608]
   11480:	str	w0, [sp, #468]
   11484:	ldr	x0, [sp, #608]
   11488:	lsr	x0, x0, #32
   1148c:	str	w0, [sp, #464]
   11490:	ldr	x0, [sp, #640]
   11494:	str	w0, [sp, #460]
   11498:	ldr	x0, [sp, #640]
   1149c:	lsr	x0, x0, #32
   114a0:	str	w0, [sp, #456]
   114a4:	ldr	w1, [sp, #468]
   114a8:	ldr	w0, [sp, #460]
   114ac:	mul	x0, x1, x0
   114b0:	str	x0, [sp, #448]
   114b4:	ldr	w1, [sp, #468]
   114b8:	ldr	w0, [sp, #456]
   114bc:	mul	x0, x1, x0
   114c0:	str	x0, [sp, #440]
   114c4:	ldr	w1, [sp, #464]
   114c8:	ldr	w0, [sp, #460]
   114cc:	mul	x0, x1, x0
   114d0:	str	x0, [sp, #432]
   114d4:	ldr	w1, [sp, #464]
   114d8:	ldr	w0, [sp, #456]
   114dc:	mul	x0, x1, x0
   114e0:	str	x0, [sp, #536]
   114e4:	ldr	x0, [sp, #448]
   114e8:	lsr	x0, x0, #32
   114ec:	ldr	x1, [sp, #440]
   114f0:	add	x0, x1, x0
   114f4:	str	x0, [sp, #440]
   114f8:	ldr	x1, [sp, #440]
   114fc:	ldr	x0, [sp, #432]
   11500:	add	x0, x1, x0
   11504:	str	x0, [sp, #440]
   11508:	ldr	x1, [sp, #440]
   1150c:	ldr	x0, [sp, #432]
   11510:	cmp	x1, x0
   11514:	b.cs	11528 <__multf3@@GCC_3.0+0x594>  // b.hs, b.nlast
   11518:	ldr	x1, [sp, #536]
   1151c:	mov	x0, #0x100000000           	// #4294967296
   11520:	add	x0, x1, x0
   11524:	str	x0, [sp, #536]
   11528:	ldr	x0, [sp, #440]
   1152c:	lsr	x1, x0, #32
   11530:	ldr	x0, [sp, #536]
   11534:	add	x1, x1, x0
   11538:	add	x0, sp, #0x30
   1153c:	str	x1, [x0, #8]
   11540:	ldr	x0, [sp, #440]
   11544:	and	x0, x0, #0xffffffff
   11548:	lsl	x1, x0, #32
   1154c:	ldr	x0, [sp, #448]
   11550:	and	x0, x0, #0xffffffff
   11554:	add	x1, x1, x0
   11558:	add	x0, sp, #0x30
   1155c:	str	x1, [x0]
   11560:	ldr	x0, [sp, #608]
   11564:	str	w0, [sp, #428]
   11568:	ldr	x0, [sp, #608]
   1156c:	lsr	x0, x0, #32
   11570:	str	w0, [sp, #424]
   11574:	ldr	x0, [sp, #648]
   11578:	str	w0, [sp, #420]
   1157c:	ldr	x0, [sp, #648]
   11580:	lsr	x0, x0, #32
   11584:	str	w0, [sp, #416]
   11588:	ldr	w1, [sp, #428]
   1158c:	ldr	w0, [sp, #420]
   11590:	mul	x0, x1, x0
   11594:	str	x0, [sp, #408]
   11598:	ldr	w1, [sp, #428]
   1159c:	ldr	w0, [sp, #416]
   115a0:	mul	x0, x1, x0
   115a4:	str	x0, [sp, #400]
   115a8:	ldr	w1, [sp, #424]
   115ac:	ldr	w0, [sp, #420]
   115b0:	mul	x0, x1, x0
   115b4:	str	x0, [sp, #392]
   115b8:	ldr	w1, [sp, #424]
   115bc:	ldr	w0, [sp, #416]
   115c0:	mul	x0, x1, x0
   115c4:	str	x0, [sp, #528]
   115c8:	ldr	x0, [sp, #408]
   115cc:	lsr	x0, x0, #32
   115d0:	ldr	x1, [sp, #400]
   115d4:	add	x0, x1, x0
   115d8:	str	x0, [sp, #400]
   115dc:	ldr	x1, [sp, #400]
   115e0:	ldr	x0, [sp, #392]
   115e4:	add	x0, x1, x0
   115e8:	str	x0, [sp, #400]
   115ec:	ldr	x1, [sp, #400]
   115f0:	ldr	x0, [sp, #392]
   115f4:	cmp	x1, x0
   115f8:	b.cs	1160c <__multf3@@GCC_3.0+0x678>  // b.hs, b.nlast
   115fc:	ldr	x1, [sp, #528]
   11600:	mov	x0, #0x100000000           	// #4294967296
   11604:	add	x0, x1, x0
   11608:	str	x0, [sp, #528]
   1160c:	ldr	x0, [sp, #400]
   11610:	lsr	x0, x0, #32
   11614:	ldr	x1, [sp, #528]
   11618:	add	x0, x1, x0
   1161c:	str	x0, [sp, #384]
   11620:	ldr	x0, [sp, #400]
   11624:	and	x0, x0, #0xffffffff
   11628:	lsl	x1, x0, #32
   1162c:	ldr	x0, [sp, #408]
   11630:	and	x0, x0, #0xffffffff
   11634:	add	x0, x1, x0
   11638:	str	x0, [sp, #376]
   1163c:	ldr	x0, [sp, #616]
   11640:	str	w0, [sp, #372]
   11644:	ldr	x0, [sp, #616]
   11648:	lsr	x0, x0, #32
   1164c:	str	w0, [sp, #368]
   11650:	ldr	x0, [sp, #640]
   11654:	str	w0, [sp, #364]
   11658:	ldr	x0, [sp, #640]
   1165c:	lsr	x0, x0, #32
   11660:	str	w0, [sp, #360]
   11664:	ldr	w1, [sp, #372]
   11668:	ldr	w0, [sp, #364]
   1166c:	mul	x0, x1, x0
   11670:	str	x0, [sp, #352]
   11674:	ldr	w1, [sp, #372]
   11678:	ldr	w0, [sp, #360]
   1167c:	mul	x0, x1, x0
   11680:	str	x0, [sp, #344]
   11684:	ldr	w1, [sp, #368]
   11688:	ldr	w0, [sp, #364]
   1168c:	mul	x0, x1, x0
   11690:	str	x0, [sp, #336]
   11694:	ldr	w1, [sp, #368]
   11698:	ldr	w0, [sp, #360]
   1169c:	mul	x0, x1, x0
   116a0:	str	x0, [sp, #520]
   116a4:	ldr	x0, [sp, #352]
   116a8:	lsr	x0, x0, #32
   116ac:	ldr	x1, [sp, #344]
   116b0:	add	x0, x1, x0
   116b4:	str	x0, [sp, #344]
   116b8:	ldr	x1, [sp, #344]
   116bc:	ldr	x0, [sp, #336]
   116c0:	add	x0, x1, x0
   116c4:	str	x0, [sp, #344]
   116c8:	ldr	x1, [sp, #344]
   116cc:	ldr	x0, [sp, #336]
   116d0:	cmp	x1, x0
   116d4:	b.cs	116e8 <__multf3@@GCC_3.0+0x754>  // b.hs, b.nlast
   116d8:	ldr	x1, [sp, #520]
   116dc:	mov	x0, #0x100000000           	// #4294967296
   116e0:	add	x0, x1, x0
   116e4:	str	x0, [sp, #520]
   116e8:	ldr	x0, [sp, #344]
   116ec:	lsr	x0, x0, #32
   116f0:	ldr	x1, [sp, #520]
   116f4:	add	x0, x1, x0
   116f8:	str	x0, [sp, #328]
   116fc:	ldr	x0, [sp, #344]
   11700:	and	x0, x0, #0xffffffff
   11704:	lsl	x1, x0, #32
   11708:	ldr	x0, [sp, #352]
   1170c:	and	x0, x0, #0xffffffff
   11710:	add	x0, x1, x0
   11714:	str	x0, [sp, #320]
   11718:	ldr	x0, [sp, #616]
   1171c:	str	w0, [sp, #316]
   11720:	ldr	x0, [sp, #616]
   11724:	lsr	x0, x0, #32
   11728:	str	w0, [sp, #312]
   1172c:	ldr	x0, [sp, #648]
   11730:	str	w0, [sp, #308]
   11734:	ldr	x0, [sp, #648]
   11738:	lsr	x0, x0, #32
   1173c:	str	w0, [sp, #304]
   11740:	ldr	w1, [sp, #316]
   11744:	ldr	w0, [sp, #308]
   11748:	mul	x0, x1, x0
   1174c:	str	x0, [sp, #296]
   11750:	ldr	w1, [sp, #316]
   11754:	ldr	w0, [sp, #304]
   11758:	mul	x0, x1, x0
   1175c:	str	x0, [sp, #288]
   11760:	ldr	w1, [sp, #312]
   11764:	ldr	w0, [sp, #308]
   11768:	mul	x0, x1, x0
   1176c:	str	x0, [sp, #280]
   11770:	ldr	w1, [sp, #312]
   11774:	ldr	w0, [sp, #304]
   11778:	mul	x0, x1, x0
   1177c:	str	x0, [sp, #512]
   11780:	ldr	x0, [sp, #296]
   11784:	lsr	x0, x0, #32
   11788:	ldr	x1, [sp, #288]
   1178c:	add	x0, x1, x0
   11790:	str	x0, [sp, #288]
   11794:	ldr	x1, [sp, #288]
   11798:	ldr	x0, [sp, #280]
   1179c:	add	x0, x1, x0
   117a0:	str	x0, [sp, #288]
   117a4:	ldr	x1, [sp, #288]
   117a8:	ldr	x0, [sp, #280]
   117ac:	cmp	x1, x0
   117b0:	b.cs	117c4 <__multf3@@GCC_3.0+0x830>  // b.hs, b.nlast
   117b4:	ldr	x1, [sp, #512]
   117b8:	mov	x0, #0x100000000           	// #4294967296
   117bc:	add	x0, x1, x0
   117c0:	str	x0, [sp, #512]
   117c4:	ldr	x0, [sp, #288]
   117c8:	lsr	x1, x0, #32
   117cc:	ldr	x0, [sp, #512]
   117d0:	add	x1, x1, x0
   117d4:	add	x0, sp, #0x30
   117d8:	str	x1, [x0, #24]
   117dc:	ldr	x0, [sp, #288]
   117e0:	and	x0, x0, #0xffffffff
   117e4:	lsl	x1, x0, #32
   117e8:	ldr	x0, [sp, #296]
   117ec:	and	x0, x0, #0xffffffff
   117f0:	add	x1, x1, x0
   117f4:	add	x0, sp, #0x30
   117f8:	str	x1, [x0, #16]
   117fc:	add	x0, sp, #0x30
   11800:	ldr	x1, [x0, #8]
   11804:	ldr	x0, [sp, #376]
   11808:	add	x1, x1, x0
   1180c:	add	x0, sp, #0x30
   11810:	str	x1, [x0, #8]
   11814:	add	x0, sp, #0x30
   11818:	ldr	x0, [x0, #8]
   1181c:	ldr	x1, [sp, #376]
   11820:	cmp	x1, x0
   11824:	cset	w0, hi  // hi = pmore
   11828:	and	w0, w0, #0xff
   1182c:	and	x0, x0, #0xff
   11830:	str	x0, [sp, #272]
   11834:	add	x0, sp, #0x30
   11838:	ldr	x1, [x0, #16]
   1183c:	ldr	x0, [sp, #384]
   11840:	add	x1, x1, x0
   11844:	add	x0, sp, #0x30
   11848:	str	x1, [x0, #16]
   1184c:	add	x0, sp, #0x30
   11850:	ldr	x0, [x0, #16]
   11854:	ldr	x1, [sp, #384]
   11858:	cmp	x1, x0
   1185c:	cset	w0, hi  // hi = pmore
   11860:	and	w0, w0, #0xff
   11864:	and	x0, x0, #0xff
   11868:	str	x0, [sp, #264]
   1186c:	add	x0, sp, #0x30
   11870:	ldr	x1, [x0, #16]
   11874:	ldr	x0, [sp, #272]
   11878:	add	x1, x1, x0
   1187c:	add	x0, sp, #0x30
   11880:	str	x1, [x0, #16]
   11884:	add	x0, sp, #0x30
   11888:	ldr	x0, [x0, #16]
   1188c:	ldr	x1, [sp, #272]
   11890:	cmp	x1, x0
   11894:	cset	w0, hi  // hi = pmore
   11898:	and	w0, w0, #0xff
   1189c:	and	x0, x0, #0xff
   118a0:	ldr	x1, [sp, #264]
   118a4:	orr	x0, x1, x0
   118a8:	str	x0, [sp, #264]
   118ac:	add	x0, sp, #0x30
   118b0:	ldr	x1, [x0, #24]
   118b4:	ldr	x0, [sp, #264]
   118b8:	add	x1, x1, x0
   118bc:	add	x0, sp, #0x30
   118c0:	str	x1, [x0, #24]
   118c4:	add	x0, sp, #0x30
   118c8:	ldr	x1, [x0, #8]
   118cc:	ldr	x0, [sp, #320]
   118d0:	add	x1, x1, x0
   118d4:	add	x0, sp, #0x30
   118d8:	str	x1, [x0, #8]
   118dc:	add	x0, sp, #0x30
   118e0:	ldr	x0, [x0, #8]
   118e4:	ldr	x1, [sp, #320]
   118e8:	cmp	x1, x0
   118ec:	cset	w0, hi  // hi = pmore
   118f0:	and	w0, w0, #0xff
   118f4:	and	x0, x0, #0xff
   118f8:	str	x0, [sp, #256]
   118fc:	add	x0, sp, #0x30
   11900:	ldr	x1, [x0, #16]
   11904:	ldr	x0, [sp, #328]
   11908:	add	x1, x1, x0
   1190c:	add	x0, sp, #0x30
   11910:	str	x1, [x0, #16]
   11914:	add	x0, sp, #0x30
   11918:	ldr	x0, [x0, #16]
   1191c:	ldr	x1, [sp, #328]
   11920:	cmp	x1, x0
   11924:	cset	w0, hi  // hi = pmore
   11928:	and	w0, w0, #0xff
   1192c:	and	x0, x0, #0xff
   11930:	str	x0, [sp, #248]
   11934:	add	x0, sp, #0x30
   11938:	ldr	x1, [x0, #16]
   1193c:	ldr	x0, [sp, #256]
   11940:	add	x1, x1, x0
   11944:	add	x0, sp, #0x30
   11948:	str	x1, [x0, #16]
   1194c:	add	x0, sp, #0x30
   11950:	ldr	x0, [x0, #16]
   11954:	ldr	x1, [sp, #256]
   11958:	cmp	x1, x0
   1195c:	cset	w0, hi  // hi = pmore
   11960:	and	w0, w0, #0xff
   11964:	and	x0, x0, #0xff
   11968:	ldr	x1, [sp, #248]
   1196c:	orr	x0, x1, x0
   11970:	str	x0, [sp, #248]
   11974:	add	x0, sp, #0x30
   11978:	ldr	x1, [x0, #24]
   1197c:	ldr	x0, [sp, #248]
   11980:	add	x1, x1, x0
   11984:	add	x0, sp, #0x30
   11988:	str	x1, [x0, #24]
   1198c:	mov	x0, #0x1                   	// #1
   11990:	str	x0, [sp, #240]
   11994:	mov	x0, #0x33                  	// #51
   11998:	str	x0, [sp, #232]
   1199c:	mov	x1, #0x40                  	// #64
   119a0:	ldr	x0, [sp, #232]
   119a4:	sub	x0, x1, x0
   119a8:	str	x0, [sp, #224]
   119ac:	str	xzr, [sp, #504]
   119b0:	str	xzr, [sp, #496]
   119b4:	b	119dc <__multf3@@GCC_3.0+0xa48>
   119b8:	add	x0, sp, #0x30
   119bc:	ldr	x1, [sp, #504]
   119c0:	ldr	x0, [x0, x1, lsl #3]
   119c4:	ldr	x1, [sp, #496]
   119c8:	orr	x0, x1, x0
   119cc:	str	x0, [sp, #496]
   119d0:	ldr	x0, [sp, #504]
   119d4:	add	x0, x0, #0x1
   119d8:	str	x0, [sp, #504]
   119dc:	ldr	x1, [sp, #504]
   119e0:	ldr	x0, [sp, #240]
   119e4:	cmp	x1, x0
   119e8:	b.lt	119b8 <__multf3@@GCC_3.0+0xa24>  // b.tstop
   119ec:	ldr	x0, [sp, #232]
   119f0:	cmp	x0, #0x0
   119f4:	b.ne	11a48 <__multf3@@GCC_3.0+0xab4>  // b.any
   119f8:	str	xzr, [sp, #504]
   119fc:	b	11a2c <__multf3@@GCC_3.0+0xa98>
   11a00:	ldr	x1, [sp, #504]
   11a04:	ldr	x0, [sp, #240]
   11a08:	add	x1, x1, x0
   11a0c:	add	x0, sp, #0x30
   11a10:	ldr	x2, [x0, x1, lsl #3]
   11a14:	add	x0, sp, #0x30
   11a18:	ldr	x1, [sp, #504]
   11a1c:	str	x2, [x0, x1, lsl #3]
   11a20:	ldr	x0, [sp, #504]
   11a24:	add	x0, x0, #0x1
   11a28:	str	x0, [sp, #504]
   11a2c:	mov	x1, #0x3                   	// #3
   11a30:	ldr	x0, [sp, #240]
   11a34:	sub	x0, x1, x0
   11a38:	ldr	x1, [sp, #504]
   11a3c:	cmp	x1, x0
   11a40:	b.le	11a00 <__multf3@@GCC_3.0+0xa6c>
   11a44:	b	11b24 <__multf3@@GCC_3.0+0xb90>
   11a48:	add	x0, sp, #0x30
   11a4c:	ldr	x1, [sp, #504]
   11a50:	ldr	x0, [x0, x1, lsl #3]
   11a54:	ldr	x1, [sp, #224]
   11a58:	lsl	x0, x0, x1
   11a5c:	ldr	x1, [sp, #496]
   11a60:	orr	x0, x1, x0
   11a64:	str	x0, [sp, #496]
   11a68:	str	xzr, [sp, #504]
   11a6c:	b	11ac8 <__multf3@@GCC_3.0+0xb34>
   11a70:	ldr	x1, [sp, #504]
   11a74:	ldr	x0, [sp, #240]
   11a78:	add	x1, x1, x0
   11a7c:	add	x0, sp, #0x30
   11a80:	ldr	x0, [x0, x1, lsl #3]
   11a84:	ldr	x1, [sp, #232]
   11a88:	lsr	x1, x0, x1
   11a8c:	ldr	x2, [sp, #504]
   11a90:	ldr	x0, [sp, #240]
   11a94:	add	x0, x2, x0
   11a98:	add	x2, x0, #0x1
   11a9c:	add	x0, sp, #0x30
   11aa0:	ldr	x0, [x0, x2, lsl #3]
   11aa4:	ldr	x2, [sp, #224]
   11aa8:	lsl	x0, x0, x2
   11aac:	orr	x2, x1, x0
   11ab0:	add	x0, sp, #0x30
   11ab4:	ldr	x1, [sp, #504]
   11ab8:	str	x2, [x0, x1, lsl #3]
   11abc:	ldr	x0, [sp, #504]
   11ac0:	add	x0, x0, #0x1
   11ac4:	str	x0, [sp, #504]
   11ac8:	mov	x1, #0x3                   	// #3
   11acc:	ldr	x0, [sp, #240]
   11ad0:	sub	x0, x1, x0
   11ad4:	ldr	x1, [sp, #504]
   11ad8:	cmp	x1, x0
   11adc:	b.lt	11a70 <__multf3@@GCC_3.0+0xadc>  // b.tstop
   11ae0:	add	x0, sp, #0x30
   11ae4:	ldr	x1, [x0, #24]
   11ae8:	ldr	x0, [sp, #232]
   11aec:	mov	w3, w0
   11af0:	ldr	x0, [sp, #504]
   11af4:	add	x2, x0, #0x1
   11af8:	str	x2, [sp, #504]
   11afc:	lsr	x2, x1, x3
   11b00:	add	x1, sp, #0x30
   11b04:	str	x2, [x1, x0, lsl #3]
   11b08:	b	11b24 <__multf3@@GCC_3.0+0xb90>
   11b0c:	add	x0, sp, #0x30
   11b10:	ldr	x1, [sp, #504]
   11b14:	str	xzr, [x0, x1, lsl #3]
   11b18:	ldr	x0, [sp, #504]
   11b1c:	add	x0, x0, #0x1
   11b20:	str	x0, [sp, #504]
   11b24:	ldr	x0, [sp, #504]
   11b28:	cmp	x0, #0x3
   11b2c:	b.le	11b0c <__multf3@@GCC_3.0+0xb78>
   11b30:	ldr	x0, [sp, #496]
   11b34:	cmp	x0, #0x0
   11b38:	cset	w0, ne  // ne = any
   11b3c:	and	w0, w0, #0xff
   11b40:	str	w0, [sp, #220]
   11b44:	add	x0, sp, #0x30
   11b48:	ldr	x1, [x0]
   11b4c:	ldrsw	x0, [sp, #220]
   11b50:	orr	x1, x1, x0
   11b54:	add	x0, sp, #0x30
   11b58:	str	x1, [x0]
   11b5c:	add	x0, sp, #0x30
   11b60:	ldr	x0, [x0]
   11b64:	str	x0, [sp, #568]
   11b68:	add	x0, sp, #0x30
   11b6c:	ldr	x0, [x0, #8]
   11b70:	str	x0, [sp, #560]
   11b74:	ldr	x0, [sp, #560]
   11b78:	and	x0, x0, #0x10000000000000
   11b7c:	cmp	x0, #0x0
   11b80:	b.eq	11bb8 <__multf3@@GCC_3.0+0xc24>  // b.none
   11b84:	ldr	x0, [sp, #560]
   11b88:	lsl	x1, x0, #63
   11b8c:	ldr	x0, [sp, #568]
   11b90:	lsr	x0, x0, #1
   11b94:	orr	x1, x1, x0
   11b98:	ldr	x0, [sp, #568]
   11b9c:	and	x0, x0, #0x1
   11ba0:	orr	x0, x1, x0
   11ba4:	str	x0, [sp, #568]
   11ba8:	ldr	x0, [sp, #560]
   11bac:	lsr	x0, x0, #1
   11bb0:	str	x0, [sp, #560]
   11bb4:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11bb8:	ldr	x0, [sp, #576]
   11bbc:	sub	x0, x0, #0x1
   11bc0:	str	x0, [sp, #576]
   11bc4:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11bc8:	ldr	x0, [sp, #616]
   11bcc:	and	x0, x0, #0x800000000000
   11bd0:	cmp	x0, #0x0
   11bd4:	b.eq	11c04 <__multf3@@GCC_3.0+0xc70>  // b.none
   11bd8:	ldr	x0, [sp, #648]
   11bdc:	and	x0, x0, #0x800000000000
   11be0:	cmp	x0, #0x0
   11be4:	b.ne	11c04 <__multf3@@GCC_3.0+0xc70>  // b.any
   11be8:	ldr	x0, [sp, #472]
   11bec:	str	x0, [sp, #656]
   11bf0:	ldr	x0, [sp, #640]
   11bf4:	str	x0, [sp, #568]
   11bf8:	ldr	x0, [sp, #648]
   11bfc:	str	x0, [sp, #560]
   11c00:	b	11c1c <__multf3@@GCC_3.0+0xc88>
   11c04:	ldr	x0, [sp, #480]
   11c08:	str	x0, [sp, #656]
   11c0c:	ldr	x0, [sp, #608]
   11c10:	str	x0, [sp, #568]
   11c14:	ldr	x0, [sp, #616]
   11c18:	str	x0, [sp, #560]
   11c1c:	mov	x0, #0x3                   	// #3
   11c20:	str	x0, [sp, #664]
   11c24:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11c28:	ldr	x0, [sp, #480]
   11c2c:	str	x0, [sp, #656]
   11c30:	ldr	x0, [sp, #608]
   11c34:	str	x0, [sp, #568]
   11c38:	ldr	x0, [sp, #616]
   11c3c:	str	x0, [sp, #560]
   11c40:	ldr	x0, [sp, #584]
   11c44:	str	x0, [sp, #664]
   11c48:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11c4c:	ldr	x0, [sp, #472]
   11c50:	str	x0, [sp, #656]
   11c54:	ldr	x0, [sp, #640]
   11c58:	str	x0, [sp, #568]
   11c5c:	ldr	x0, [sp, #648]
   11c60:	str	x0, [sp, #560]
   11c64:	ldr	x0, [sp, #632]
   11c68:	str	x0, [sp, #664]
   11c6c:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11c70:	str	xzr, [sp, #656]
   11c74:	mov	x0, #0x3                   	// #3
   11c78:	str	x0, [sp, #664]
   11c7c:	mov	x0, #0xffffffffffffffff    	// #-1
   11c80:	str	x0, [sp, #568]
   11c84:	mov	x0, #0xffffffffffff        	// #281474976710655
   11c88:	str	x0, [sp, #560]
   11c8c:	ldr	w0, [sp, #596]
   11c90:	orr	w0, w0, #0x1
   11c94:	str	w0, [sp, #596]
   11c98:	b	11c9c <__multf3@@GCC_3.0+0xd08>
   11c9c:	ldr	x0, [sp, #664]
   11ca0:	cmp	x0, #0x3
   11ca4:	b.eq	12438 <__multf3@@GCC_3.0+0x14a4>  // b.none
   11ca8:	ldr	x0, [sp, #664]
   11cac:	cmp	x0, #0x3
   11cb0:	b.gt	12450 <__multf3@@GCC_3.0+0x14bc>
   11cb4:	ldr	x0, [sp, #664]
   11cb8:	cmp	x0, #0x2
   11cbc:	b.eq	12424 <__multf3@@GCC_3.0+0x1490>  // b.none
   11cc0:	ldr	x0, [sp, #664]
   11cc4:	cmp	x0, #0x2
   11cc8:	b.gt	12450 <__multf3@@GCC_3.0+0x14bc>
   11ccc:	ldr	x0, [sp, #664]
   11cd0:	cmp	x0, #0x0
   11cd4:	b.eq	11ce8 <__multf3@@GCC_3.0+0xd54>  // b.none
   11cd8:	ldr	x0, [sp, #664]
   11cdc:	cmp	x0, #0x1
   11ce0:	b.eq	12414 <__multf3@@GCC_3.0+0x1480>  // b.none
   11ce4:	b	12450 <__multf3@@GCC_3.0+0x14bc>
   11ce8:	ldr	x1, [sp, #576]
   11cec:	mov	x0, #0x3fff                	// #16383
   11cf0:	add	x0, x1, x0
   11cf4:	str	x0, [sp, #576]
   11cf8:	ldr	x0, [sp, #576]
   11cfc:	cmp	x0, #0x0
   11d00:	b.le	11f7c <__multf3@@GCC_3.0+0xfe8>
   11d04:	ldr	x0, [sp, #568]
   11d08:	and	x0, x0, #0x7
   11d0c:	cmp	x0, #0x0
   11d10:	b.eq	11e58 <__multf3@@GCC_3.0+0xec4>  // b.none
   11d14:	ldr	w0, [sp, #596]
   11d18:	orr	w0, w0, #0x10
   11d1c:	str	w0, [sp, #596]
   11d20:	ldr	x0, [sp, #488]
   11d24:	and	x0, x0, #0xc00000
   11d28:	cmp	x0, #0xc00, lsl #12
   11d2c:	b.eq	11e60 <__multf3@@GCC_3.0+0xecc>  // b.none
   11d30:	cmp	x0, #0xc00, lsl #12
   11d34:	b.hi	11e64 <__multf3@@GCC_3.0+0xed0>  // b.pmore
   11d38:	cmp	x0, #0x800, lsl #12
   11d3c:	b.eq	11e00 <__multf3@@GCC_3.0+0xe6c>  // b.none
   11d40:	cmp	x0, #0x800, lsl #12
   11d44:	b.hi	11e64 <__multf3@@GCC_3.0+0xed0>  // b.pmore
   11d48:	cmp	x0, #0x0
   11d4c:	b.eq	11d5c <__multf3@@GCC_3.0+0xdc8>  // b.none
   11d50:	cmp	x0, #0x400, lsl #12
   11d54:	b.eq	11da8 <__multf3@@GCC_3.0+0xe14>  // b.none
   11d58:	b	11e64 <__multf3@@GCC_3.0+0xed0>
   11d5c:	ldr	x0, [sp, #568]
   11d60:	and	x0, x0, #0xf
   11d64:	cmp	x0, #0x4
   11d68:	b.eq	11e60 <__multf3@@GCC_3.0+0xecc>  // b.none
   11d6c:	ldr	x0, [sp, #568]
   11d70:	add	x0, x0, #0x4
   11d74:	str	x0, [sp, #144]
   11d78:	ldr	x1, [sp, #144]
   11d7c:	ldr	x0, [sp, #568]
   11d80:	cmp	x1, x0
   11d84:	cset	w0, cc  // cc = lo, ul, last
   11d88:	and	w0, w0, #0xff
   11d8c:	and	x0, x0, #0xff
   11d90:	ldr	x1, [sp, #560]
   11d94:	add	x0, x1, x0
   11d98:	str	x0, [sp, #560]
   11d9c:	ldr	x0, [sp, #144]
   11da0:	str	x0, [sp, #568]
   11da4:	b	11e60 <__multf3@@GCC_3.0+0xecc>
   11da8:	ldr	x0, [sp, #656]
   11dac:	cmp	x0, #0x0
   11db0:	b.ne	11e60 <__multf3@@GCC_3.0+0xecc>  // b.any
   11db4:	ldr	x0, [sp, #568]
   11db8:	and	x0, x0, #0x7
   11dbc:	cmp	x0, #0x0
   11dc0:	b.eq	11e60 <__multf3@@GCC_3.0+0xecc>  // b.none
   11dc4:	ldr	x0, [sp, #568]
   11dc8:	add	x0, x0, #0x8
   11dcc:	str	x0, [sp, #152]
   11dd0:	ldr	x1, [sp, #152]
   11dd4:	ldr	x0, [sp, #568]
   11dd8:	cmp	x1, x0
   11ddc:	cset	w0, cc  // cc = lo, ul, last
   11de0:	and	w0, w0, #0xff
   11de4:	and	x0, x0, #0xff
   11de8:	ldr	x1, [sp, #560]
   11dec:	add	x0, x1, x0
   11df0:	str	x0, [sp, #560]
   11df4:	ldr	x0, [sp, #152]
   11df8:	str	x0, [sp, #568]
   11dfc:	b	11e60 <__multf3@@GCC_3.0+0xecc>
   11e00:	ldr	x0, [sp, #656]
   11e04:	cmp	x0, #0x0
   11e08:	b.eq	11e60 <__multf3@@GCC_3.0+0xecc>  // b.none
   11e0c:	ldr	x0, [sp, #568]
   11e10:	and	x0, x0, #0x7
   11e14:	cmp	x0, #0x0
   11e18:	b.eq	11e60 <__multf3@@GCC_3.0+0xecc>  // b.none
   11e1c:	ldr	x0, [sp, #568]
   11e20:	add	x0, x0, #0x8
   11e24:	str	x0, [sp, #160]
   11e28:	ldr	x1, [sp, #160]
   11e2c:	ldr	x0, [sp, #568]
   11e30:	cmp	x1, x0
   11e34:	cset	w0, cc  // cc = lo, ul, last
   11e38:	and	w0, w0, #0xff
   11e3c:	and	x0, x0, #0xff
   11e40:	ldr	x1, [sp, #560]
   11e44:	add	x0, x1, x0
   11e48:	str	x0, [sp, #560]
   11e4c:	ldr	x0, [sp, #160]
   11e50:	str	x0, [sp, #568]
   11e54:	b	11e60 <__multf3@@GCC_3.0+0xecc>
   11e58:	nop
   11e5c:	b	11e64 <__multf3@@GCC_3.0+0xed0>
   11e60:	nop
   11e64:	ldr	x0, [sp, #560]
   11e68:	and	x0, x0, #0x10000000000000
   11e6c:	cmp	x0, #0x0
   11e70:	b.eq	11e8c <__multf3@@GCC_3.0+0xef8>  // b.none
   11e74:	ldr	x0, [sp, #560]
   11e78:	and	x0, x0, #0xffefffffffffffff
   11e7c:	str	x0, [sp, #560]
   11e80:	ldr	x0, [sp, #576]
   11e84:	add	x0, x0, #0x1
   11e88:	str	x0, [sp, #576]
   11e8c:	ldr	x0, [sp, #568]
   11e90:	lsr	x1, x0, #3
   11e94:	ldr	x0, [sp, #560]
   11e98:	lsl	x0, x0, #61
   11e9c:	orr	x0, x1, x0
   11ea0:	str	x0, [sp, #568]
   11ea4:	ldr	x0, [sp, #560]
   11ea8:	lsr	x0, x0, #3
   11eac:	str	x0, [sp, #560]
   11eb0:	ldr	x1, [sp, #576]
   11eb4:	mov	x0, #0x7ffe                	// #32766
   11eb8:	cmp	x1, x0
   11ebc:	b.le	1244c <__multf3@@GCC_3.0+0x14b8>
   11ec0:	ldr	x0, [sp, #488]
   11ec4:	and	x0, x0, #0xc00000
   11ec8:	cmp	x0, #0x800, lsl #12
   11ecc:	b.eq	11f10 <__multf3@@GCC_3.0+0xf7c>  // b.none
   11ed0:	cmp	x0, #0x800, lsl #12
   11ed4:	b.hi	11f28 <__multf3@@GCC_3.0+0xf94>  // b.pmore
   11ed8:	cmp	x0, #0x0
   11edc:	b.eq	11eec <__multf3@@GCC_3.0+0xf58>  // b.none
   11ee0:	cmp	x0, #0x400, lsl #12
   11ee4:	b.eq	11ef8 <__multf3@@GCC_3.0+0xf64>  // b.none
   11ee8:	b	11f28 <__multf3@@GCC_3.0+0xf94>
   11eec:	mov	x0, #0x2                   	// #2
   11ef0:	str	x0, [sp, #664]
   11ef4:	b	11f24 <__multf3@@GCC_3.0+0xf90>
   11ef8:	ldr	x0, [sp, #656]
   11efc:	cmp	x0, #0x0
   11f00:	b.ne	11f24 <__multf3@@GCC_3.0+0xf90>  // b.any
   11f04:	mov	x0, #0x2                   	// #2
   11f08:	str	x0, [sp, #664]
   11f0c:	b	11f24 <__multf3@@GCC_3.0+0xf90>
   11f10:	ldr	x0, [sp, #656]
   11f14:	cmp	x0, #0x0
   11f18:	b.eq	11f24 <__multf3@@GCC_3.0+0xf90>  // b.none
   11f1c:	mov	x0, #0x2                   	// #2
   11f20:	str	x0, [sp, #664]
   11f24:	nop
   11f28:	ldr	x0, [sp, #664]
   11f2c:	cmp	x0, #0x2
   11f30:	b.ne	11f48 <__multf3@@GCC_3.0+0xfb4>  // b.any
   11f34:	mov	x0, #0x7fff                	// #32767
   11f38:	str	x0, [sp, #576]
   11f3c:	str	xzr, [sp, #568]
   11f40:	str	xzr, [sp, #560]
   11f44:	b	11f60 <__multf3@@GCC_3.0+0xfcc>
   11f48:	mov	x0, #0x7ffe                	// #32766
   11f4c:	str	x0, [sp, #576]
   11f50:	mov	x0, #0xffffffffffffffff    	// #-1
   11f54:	str	x0, [sp, #568]
   11f58:	mov	x0, #0xffffffffffffffff    	// #-1
   11f5c:	str	x0, [sp, #560]
   11f60:	ldr	w0, [sp, #596]
   11f64:	orr	w0, w0, #0x4
   11f68:	str	w0, [sp, #596]
   11f6c:	ldr	w0, [sp, #596]
   11f70:	orr	w0, w0, #0x10
   11f74:	str	w0, [sp, #596]
   11f78:	b	1244c <__multf3@@GCC_3.0+0x14b8>
   11f7c:	mov	w0, #0x1                   	// #1
   11f80:	str	w0, [sp, #216]
   11f84:	mov	x1, #0x1                   	// #1
   11f88:	ldr	x0, [sp, #576]
   11f8c:	sub	x0, x1, x0
   11f90:	str	x0, [sp, #576]
   11f94:	ldr	x0, [sp, #576]
   11f98:	cmp	x0, #0x74
   11f9c:	b.gt	12274 <__multf3@@GCC_3.0+0x12e0>
   11fa0:	ldr	x0, [sp, #576]
   11fa4:	cmp	x0, #0x3f
   11fa8:	b.gt	12020 <__multf3@@GCC_3.0+0x108c>
   11fac:	ldr	x0, [sp, #576]
   11fb0:	mov	w1, w0
   11fb4:	mov	w0, #0x40                  	// #64
   11fb8:	sub	w0, w0, w1
   11fbc:	ldr	x1, [sp, #560]
   11fc0:	lsl	x1, x1, x0
   11fc4:	ldr	x0, [sp, #576]
   11fc8:	mov	w2, w0
   11fcc:	ldr	x0, [sp, #568]
   11fd0:	lsr	x0, x0, x2
   11fd4:	orr	x1, x1, x0
   11fd8:	ldr	x0, [sp, #576]
   11fdc:	mov	w2, w0
   11fe0:	mov	w0, #0x40                  	// #64
   11fe4:	sub	w0, w0, w2
   11fe8:	ldr	x2, [sp, #568]
   11fec:	lsl	x0, x2, x0
   11ff0:	cmp	x0, #0x0
   11ff4:	cset	w0, ne  // ne = any
   11ff8:	and	w0, w0, #0xff
   11ffc:	sxtw	x0, w0
   12000:	orr	x0, x1, x0
   12004:	str	x0, [sp, #568]
   12008:	ldr	x0, [sp, #576]
   1200c:	mov	w1, w0
   12010:	ldr	x0, [sp, #560]
   12014:	lsr	x0, x0, x1
   12018:	str	x0, [sp, #560]
   1201c:	b	12080 <__multf3@@GCC_3.0+0x10ec>
   12020:	ldr	x0, [sp, #576]
   12024:	sub	w0, w0, #0x40
   12028:	ldr	x1, [sp, #560]
   1202c:	lsr	x1, x1, x0
   12030:	ldr	x0, [sp, #576]
   12034:	cmp	x0, #0x40
   12038:	b.eq	12058 <__multf3@@GCC_3.0+0x10c4>  // b.none
   1203c:	ldr	x0, [sp, #576]
   12040:	mov	w2, w0
   12044:	mov	w0, #0x80                  	// #128
   12048:	sub	w0, w0, w2
   1204c:	ldr	x2, [sp, #560]
   12050:	lsl	x0, x2, x0
   12054:	b	1205c <__multf3@@GCC_3.0+0x10c8>
   12058:	mov	x0, #0x0                   	// #0
   1205c:	ldr	x2, [sp, #568]
   12060:	orr	x0, x0, x2
   12064:	cmp	x0, #0x0
   12068:	cset	w0, ne  // ne = any
   1206c:	and	w0, w0, #0xff
   12070:	and	x0, x0, #0xff
   12074:	orr	x0, x1, x0
   12078:	str	x0, [sp, #568]
   1207c:	str	xzr, [sp, #560]
   12080:	ldr	x0, [sp, #568]
   12084:	and	x0, x0, #0x7
   12088:	cmp	x0, #0x0
   1208c:	b.eq	121d4 <__multf3@@GCC_3.0+0x1240>  // b.none
   12090:	ldr	w0, [sp, #596]
   12094:	orr	w0, w0, #0x10
   12098:	str	w0, [sp, #596]
   1209c:	ldr	x0, [sp, #488]
   120a0:	and	x0, x0, #0xc00000
   120a4:	cmp	x0, #0xc00, lsl #12
   120a8:	b.eq	121dc <__multf3@@GCC_3.0+0x1248>  // b.none
   120ac:	cmp	x0, #0xc00, lsl #12
   120b0:	b.hi	121e0 <__multf3@@GCC_3.0+0x124c>  // b.pmore
   120b4:	cmp	x0, #0x800, lsl #12
   120b8:	b.eq	1217c <__multf3@@GCC_3.0+0x11e8>  // b.none
   120bc:	cmp	x0, #0x800, lsl #12
   120c0:	b.hi	121e0 <__multf3@@GCC_3.0+0x124c>  // b.pmore
   120c4:	cmp	x0, #0x0
   120c8:	b.eq	120d8 <__multf3@@GCC_3.0+0x1144>  // b.none
   120cc:	cmp	x0, #0x400, lsl #12
   120d0:	b.eq	12124 <__multf3@@GCC_3.0+0x1190>  // b.none
   120d4:	b	121e0 <__multf3@@GCC_3.0+0x124c>
   120d8:	ldr	x0, [sp, #568]
   120dc:	and	x0, x0, #0xf
   120e0:	cmp	x0, #0x4
   120e4:	b.eq	121dc <__multf3@@GCC_3.0+0x1248>  // b.none
   120e8:	ldr	x0, [sp, #568]
   120ec:	add	x0, x0, #0x4
   120f0:	str	x0, [sp, #168]
   120f4:	ldr	x1, [sp, #168]
   120f8:	ldr	x0, [sp, #568]
   120fc:	cmp	x1, x0
   12100:	cset	w0, cc  // cc = lo, ul, last
   12104:	and	w0, w0, #0xff
   12108:	and	x0, x0, #0xff
   1210c:	ldr	x1, [sp, #560]
   12110:	add	x0, x1, x0
   12114:	str	x0, [sp, #560]
   12118:	ldr	x0, [sp, #168]
   1211c:	str	x0, [sp, #568]
   12120:	b	121dc <__multf3@@GCC_3.0+0x1248>
   12124:	ldr	x0, [sp, #656]
   12128:	cmp	x0, #0x0
   1212c:	b.ne	121dc <__multf3@@GCC_3.0+0x1248>  // b.any
   12130:	ldr	x0, [sp, #568]
   12134:	and	x0, x0, #0x7
   12138:	cmp	x0, #0x0
   1213c:	b.eq	121dc <__multf3@@GCC_3.0+0x1248>  // b.none
   12140:	ldr	x0, [sp, #568]
   12144:	add	x0, x0, #0x8
   12148:	str	x0, [sp, #176]
   1214c:	ldr	x1, [sp, #176]
   12150:	ldr	x0, [sp, #568]
   12154:	cmp	x1, x0
   12158:	cset	w0, cc  // cc = lo, ul, last
   1215c:	and	w0, w0, #0xff
   12160:	and	x0, x0, #0xff
   12164:	ldr	x1, [sp, #560]
   12168:	add	x0, x1, x0
   1216c:	str	x0, [sp, #560]
   12170:	ldr	x0, [sp, #176]
   12174:	str	x0, [sp, #568]
   12178:	b	121dc <__multf3@@GCC_3.0+0x1248>
   1217c:	ldr	x0, [sp, #656]
   12180:	cmp	x0, #0x0
   12184:	b.eq	121dc <__multf3@@GCC_3.0+0x1248>  // b.none
   12188:	ldr	x0, [sp, #568]
   1218c:	and	x0, x0, #0x7
   12190:	cmp	x0, #0x0
   12194:	b.eq	121dc <__multf3@@GCC_3.0+0x1248>  // b.none
   12198:	ldr	x0, [sp, #568]
   1219c:	add	x0, x0, #0x8
   121a0:	str	x0, [sp, #184]
   121a4:	ldr	x1, [sp, #184]
   121a8:	ldr	x0, [sp, #568]
   121ac:	cmp	x1, x0
   121b0:	cset	w0, cc  // cc = lo, ul, last
   121b4:	and	w0, w0, #0xff
   121b8:	and	x0, x0, #0xff
   121bc:	ldr	x1, [sp, #560]
   121c0:	add	x0, x1, x0
   121c4:	str	x0, [sp, #560]
   121c8:	ldr	x0, [sp, #184]
   121cc:	str	x0, [sp, #568]
   121d0:	b	121dc <__multf3@@GCC_3.0+0x1248>
   121d4:	nop
   121d8:	b	121e0 <__multf3@@GCC_3.0+0x124c>
   121dc:	nop
   121e0:	ldr	x0, [sp, #560]
   121e4:	and	x0, x0, #0x8000000000000
   121e8:	cmp	x0, #0x0
   121ec:	b.eq	12210 <__multf3@@GCC_3.0+0x127c>  // b.none
   121f0:	mov	x0, #0x1                   	// #1
   121f4:	str	x0, [sp, #576]
   121f8:	str	xzr, [sp, #568]
   121fc:	str	xzr, [sp, #560]
   12200:	ldr	w0, [sp, #596]
   12204:	orr	w0, w0, #0x10
   12208:	str	w0, [sp, #596]
   1220c:	b	12238 <__multf3@@GCC_3.0+0x12a4>
   12210:	str	xzr, [sp, #576]
   12214:	ldr	x0, [sp, #568]
   12218:	lsr	x1, x0, #3
   1221c:	ldr	x0, [sp, #560]
   12220:	lsl	x0, x0, #61
   12224:	orr	x0, x1, x0
   12228:	str	x0, [sp, #568]
   1222c:	ldr	x0, [sp, #560]
   12230:	lsr	x0, x0, #3
   12234:	str	x0, [sp, #560]
   12238:	ldr	w0, [sp, #216]
   1223c:	cmp	w0, #0x0
   12240:	b.eq	1244c <__multf3@@GCC_3.0+0x14b8>  // b.none
   12244:	ldr	w0, [sp, #596]
   12248:	and	w0, w0, #0x10
   1224c:	cmp	w0, #0x0
   12250:	b.ne	12264 <__multf3@@GCC_3.0+0x12d0>  // b.any
   12254:	ldr	x0, [sp, #488]
   12258:	and	x0, x0, #0x800
   1225c:	cmp	x0, #0x0
   12260:	b.eq	1244c <__multf3@@GCC_3.0+0x14b8>  // b.none
   12264:	ldr	w0, [sp, #596]
   12268:	orr	w0, w0, #0x8
   1226c:	str	w0, [sp, #596]
   12270:	b	1244c <__multf3@@GCC_3.0+0x14b8>
   12274:	str	xzr, [sp, #576]
   12278:	ldr	x1, [sp, #560]
   1227c:	ldr	x0, [sp, #568]
   12280:	orr	x0, x1, x0
   12284:	cmp	x0, #0x0
   12288:	b.eq	12404 <__multf3@@GCC_3.0+0x1470>  // b.none
   1228c:	mov	x0, #0x1                   	// #1
   12290:	str	x0, [sp, #568]
   12294:	str	xzr, [sp, #560]
   12298:	ldr	x0, [sp, #568]
   1229c:	and	x0, x0, #0x7
   122a0:	cmp	x0, #0x0
   122a4:	b.eq	123ec <__multf3@@GCC_3.0+0x1458>  // b.none
   122a8:	ldr	w0, [sp, #596]
   122ac:	orr	w0, w0, #0x10
   122b0:	str	w0, [sp, #596]
   122b4:	ldr	x0, [sp, #488]
   122b8:	and	x0, x0, #0xc00000
   122bc:	cmp	x0, #0xc00, lsl #12
   122c0:	b.eq	123f4 <__multf3@@GCC_3.0+0x1460>  // b.none
   122c4:	cmp	x0, #0xc00, lsl #12
   122c8:	b.hi	123f8 <__multf3@@GCC_3.0+0x1464>  // b.pmore
   122cc:	cmp	x0, #0x800, lsl #12
   122d0:	b.eq	12394 <__multf3@@GCC_3.0+0x1400>  // b.none
   122d4:	cmp	x0, #0x800, lsl #12
   122d8:	b.hi	123f8 <__multf3@@GCC_3.0+0x1464>  // b.pmore
   122dc:	cmp	x0, #0x0
   122e0:	b.eq	122f0 <__multf3@@GCC_3.0+0x135c>  // b.none
   122e4:	cmp	x0, #0x400, lsl #12
   122e8:	b.eq	1233c <__multf3@@GCC_3.0+0x13a8>  // b.none
   122ec:	b	123f8 <__multf3@@GCC_3.0+0x1464>
   122f0:	ldr	x0, [sp, #568]
   122f4:	and	x0, x0, #0xf
   122f8:	cmp	x0, #0x4
   122fc:	b.eq	123f4 <__multf3@@GCC_3.0+0x1460>  // b.none
   12300:	ldr	x0, [sp, #568]
   12304:	add	x0, x0, #0x4
   12308:	str	x0, [sp, #192]
   1230c:	ldr	x1, [sp, #192]
   12310:	ldr	x0, [sp, #568]
   12314:	cmp	x1, x0
   12318:	cset	w0, cc  // cc = lo, ul, last
   1231c:	and	w0, w0, #0xff
   12320:	and	x0, x0, #0xff
   12324:	ldr	x1, [sp, #560]
   12328:	add	x0, x1, x0
   1232c:	str	x0, [sp, #560]
   12330:	ldr	x0, [sp, #192]
   12334:	str	x0, [sp, #568]
   12338:	b	123f4 <__multf3@@GCC_3.0+0x1460>
   1233c:	ldr	x0, [sp, #656]
   12340:	cmp	x0, #0x0
   12344:	b.ne	123f4 <__multf3@@GCC_3.0+0x1460>  // b.any
   12348:	ldr	x0, [sp, #568]
   1234c:	and	x0, x0, #0x7
   12350:	cmp	x0, #0x0
   12354:	b.eq	123f4 <__multf3@@GCC_3.0+0x1460>  // b.none
   12358:	ldr	x0, [sp, #568]
   1235c:	add	x0, x0, #0x8
   12360:	str	x0, [sp, #200]
   12364:	ldr	x1, [sp, #200]
   12368:	ldr	x0, [sp, #568]
   1236c:	cmp	x1, x0
   12370:	cset	w0, cc  // cc = lo, ul, last
   12374:	and	w0, w0, #0xff
   12378:	and	x0, x0, #0xff
   1237c:	ldr	x1, [sp, #560]
   12380:	add	x0, x1, x0
   12384:	str	x0, [sp, #560]
   12388:	ldr	x0, [sp, #200]
   1238c:	str	x0, [sp, #568]
   12390:	b	123f4 <__multf3@@GCC_3.0+0x1460>
   12394:	ldr	x0, [sp, #656]
   12398:	cmp	x0, #0x0
   1239c:	b.eq	123f4 <__multf3@@GCC_3.0+0x1460>  // b.none
   123a0:	ldr	x0, [sp, #568]
   123a4:	and	x0, x0, #0x7
   123a8:	cmp	x0, #0x0
   123ac:	b.eq	123f4 <__multf3@@GCC_3.0+0x1460>  // b.none
   123b0:	ldr	x0, [sp, #568]
   123b4:	add	x0, x0, #0x8
   123b8:	str	x0, [sp, #208]
   123bc:	ldr	x1, [sp, #208]
   123c0:	ldr	x0, [sp, #568]
   123c4:	cmp	x1, x0
   123c8:	cset	w0, cc  // cc = lo, ul, last
   123cc:	and	w0, w0, #0xff
   123d0:	and	x0, x0, #0xff
   123d4:	ldr	x1, [sp, #560]
   123d8:	add	x0, x1, x0
   123dc:	str	x0, [sp, #560]
   123e0:	ldr	x0, [sp, #208]
   123e4:	str	x0, [sp, #568]
   123e8:	b	123f4 <__multf3@@GCC_3.0+0x1460>
   123ec:	nop
   123f0:	b	123f8 <__multf3@@GCC_3.0+0x1464>
   123f4:	nop
   123f8:	ldr	x0, [sp, #568]
   123fc:	lsr	x0, x0, #3
   12400:	str	x0, [sp, #568]
   12404:	ldr	w0, [sp, #596]
   12408:	orr	w0, w0, #0x8
   1240c:	str	w0, [sp, #596]
   12410:	b	1244c <__multf3@@GCC_3.0+0x14b8>
   12414:	str	xzr, [sp, #576]
   12418:	str	xzr, [sp, #568]
   1241c:	str	xzr, [sp, #560]
   12420:	b	1244c <__multf3@@GCC_3.0+0x14b8>
   12424:	mov	x0, #0x7fff                	// #32767
   12428:	str	x0, [sp, #576]
   1242c:	str	xzr, [sp, #568]
   12430:	str	xzr, [sp, #560]
   12434:	b	1244c <__multf3@@GCC_3.0+0x14b8>
   12438:	mov	x0, #0x7fff                	// #32767
   1243c:	str	x0, [sp, #576]
   12440:	ldr	x0, [sp, #560]
   12444:	orr	x0, x0, #0x800000000000
   12448:	str	x0, [sp, #560]
   1244c:	nop
   12450:	ldr	x0, [sp, #568]
   12454:	str	x0, [sp, #80]
   12458:	ldr	x0, [sp, #560]
   1245c:	and	x1, x0, #0xffffffffffff
   12460:	ldr	x0, [sp, #88]
   12464:	bfxil	x0, x1, #0, #48
   12468:	str	x0, [sp, #88]
   1246c:	ldr	x0, [sp, #576]
   12470:	and	w0, w0, #0x7fff
   12474:	and	w1, w0, #0xffff
   12478:	ldrh	w0, [sp, #94]
   1247c:	bfxil	w0, w1, #0, #15
   12480:	strh	w0, [sp, #94]
   12484:	ldr	x0, [sp, #656]
   12488:	and	w0, w0, #0x1
   1248c:	and	w1, w0, #0xff
   12490:	ldrb	w0, [sp, #95]
   12494:	bfi	w0, w1, #7, #1
   12498:	strb	w0, [sp, #95]
   1249c:	ldr	q0, [sp, #80]
   124a0:	str	q0, [sp, #128]
   124a4:	ldrsw	x0, [sp, #596]
   124a8:	cmp	x0, #0x0
   124ac:	b.eq	124b8 <__multf3@@GCC_3.0+0x1524>  // b.none
   124b0:	ldr	w0, [sp, #596]
   124b4:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   124b8:	ldr	q0, [sp, #128]
   124bc:	ldp	x29, x30, [sp]
   124c0:	add	sp, sp, #0x2a0
   124c4:	ret

00000000000124c8 <__negtf2@@GCC_3.0>:
   124c8:	sub	sp, sp, #0x80
   124cc:	str	q0, [sp]
   124d0:	ldr	q0, [sp]
   124d4:	str	q0, [sp, #32]
   124d8:	ldr	x0, [sp, #32]
   124dc:	str	x0, [sp, #120]
   124e0:	ldr	x0, [sp, #40]
   124e4:	ubfx	x0, x0, #0, #48
   124e8:	str	x0, [sp, #112]
   124ec:	ldrh	w0, [sp, #46]
   124f0:	ubfx	x0, x0, #0, #15
   124f4:	and	w0, w0, #0xffff
   124f8:	and	x0, x0, #0xffff
   124fc:	str	x0, [sp, #104]
   12500:	ldrb	w0, [sp, #47]
   12504:	ubfx	x0, x0, #7, #1
   12508:	and	w0, w0, #0xff
   1250c:	and	x0, x0, #0xff
   12510:	str	x0, [sp, #96]
   12514:	ldr	x0, [sp, #120]
   12518:	str	x0, [sp, #88]
   1251c:	ldr	x0, [sp, #112]
   12520:	str	x0, [sp, #80]
   12524:	ldr	x0, [sp, #104]
   12528:	str	x0, [sp, #72]
   1252c:	ldr	x0, [sp, #96]
   12530:	eor	x0, x0, #0x1
   12534:	str	x0, [sp, #64]
   12538:	ldr	x0, [sp, #88]
   1253c:	str	x0, [sp, #16]
   12540:	ldr	x0, [sp, #80]
   12544:	and	x1, x0, #0xffffffffffff
   12548:	ldr	x0, [sp, #24]
   1254c:	bfxil	x0, x1, #0, #48
   12550:	str	x0, [sp, #24]
   12554:	ldr	x0, [sp, #72]
   12558:	and	w0, w0, #0x7fff
   1255c:	and	w1, w0, #0xffff
   12560:	ldrh	w0, [sp, #30]
   12564:	bfxil	w0, w1, #0, #15
   12568:	strh	w0, [sp, #30]
   1256c:	ldr	x0, [sp, #64]
   12570:	and	w0, w0, #0x1
   12574:	and	w1, w0, #0xff
   12578:	ldrb	w0, [sp, #31]
   1257c:	bfi	w0, w1, #7, #1
   12580:	strb	w0, [sp, #31]
   12584:	ldr	q0, [sp, #16]
   12588:	str	q0, [sp, #48]
   1258c:	ldr	q0, [sp, #48]
   12590:	add	sp, sp, #0x80
   12594:	ret

0000000000012598 <__subtf3@@GCC_3.0>:
   12598:	stp	x29, x30, [sp, #-400]!
   1259c:	mov	x29, sp
   125a0:	str	q0, [sp, #32]
   125a4:	str	q1, [sp, #16]
   125a8:	str	wzr, [sp, #356]
   125ac:	str	xzr, [sp, #296]
   125b0:	mrs	x0, fpcr
   125b4:	str	x0, [sp, #296]
   125b8:	ldr	q0, [sp, #32]
   125bc:	str	q0, [sp, #80]
   125c0:	ldr	x0, [sp, #80]
   125c4:	str	x0, [sp, #360]
   125c8:	ldr	x0, [sp, #88]
   125cc:	ubfx	x0, x0, #0, #48
   125d0:	str	x0, [sp, #384]
   125d4:	ldrh	w0, [sp, #94]
   125d8:	ubfx	x0, x0, #0, #15
   125dc:	and	w0, w0, #0xffff
   125e0:	and	x0, x0, #0xffff
   125e4:	str	x0, [sp, #288]
   125e8:	ldrb	w0, [sp, #95]
   125ec:	ubfx	x0, x0, #7, #1
   125f0:	and	w0, w0, #0xff
   125f4:	and	x0, x0, #0xff
   125f8:	str	x0, [sp, #280]
   125fc:	ldr	x0, [sp, #384]
   12600:	lsl	x1, x0, #3
   12604:	ldr	x0, [sp, #360]
   12608:	lsr	x0, x0, #61
   1260c:	orr	x0, x1, x0
   12610:	str	x0, [sp, #384]
   12614:	ldr	x0, [sp, #360]
   12618:	lsl	x0, x0, #3
   1261c:	str	x0, [sp, #360]
   12620:	ldr	q0, [sp, #16]
   12624:	str	q0, [sp, #64]
   12628:	ldr	x0, [sp, #64]
   1262c:	str	x0, [sp, #368]
   12630:	ldr	x0, [sp, #72]
   12634:	ubfx	x0, x0, #0, #48
   12638:	str	x0, [sp, #392]
   1263c:	ldrh	w0, [sp, #78]
   12640:	ubfx	x0, x0, #0, #15
   12644:	and	w0, w0, #0xffff
   12648:	and	x0, x0, #0xffff
   1264c:	str	x0, [sp, #272]
   12650:	ldrb	w0, [sp, #79]
   12654:	ubfx	x0, x0, #7, #1
   12658:	and	w0, w0, #0xff
   1265c:	and	x0, x0, #0xff
   12660:	str	x0, [sp, #376]
   12664:	ldr	x0, [sp, #392]
   12668:	lsl	x1, x0, #3
   1266c:	ldr	x0, [sp, #368]
   12670:	lsr	x0, x0, #61
   12674:	orr	x0, x1, x0
   12678:	str	x0, [sp, #392]
   1267c:	ldr	x0, [sp, #368]
   12680:	lsl	x0, x0, #3
   12684:	str	x0, [sp, #368]
   12688:	ldr	x1, [sp, #272]
   1268c:	mov	x0, #0x7fff                	// #32767
   12690:	cmp	x1, x0
   12694:	b.ne	126ac <__subtf3@@GCC_3.0+0x114>  // b.any
   12698:	ldr	x1, [sp, #392]
   1269c:	ldr	x0, [sp, #368]
   126a0:	orr	x0, x1, x0
   126a4:	cmp	x0, #0x0
   126a8:	b.ne	126b8 <__subtf3@@GCC_3.0+0x120>  // b.any
   126ac:	ldr	x0, [sp, #376]
   126b0:	eor	x0, x0, #0x1
   126b4:	str	x0, [sp, #376]
   126b8:	ldr	x1, [sp, #280]
   126bc:	ldr	x0, [sp, #376]
   126c0:	cmp	x1, x0
   126c4:	b.ne	131ac <__subtf3@@GCC_3.0+0xc14>  // b.any
   126c8:	ldr	x0, [sp, #280]
   126cc:	str	x0, [sp, #344]
   126d0:	ldr	x0, [sp, #288]
   126d4:	mov	w1, w0
   126d8:	ldr	x0, [sp, #272]
   126dc:	sub	w0, w1, w0
   126e0:	str	w0, [sp, #316]
   126e4:	ldr	w0, [sp, #316]
   126e8:	cmp	w0, #0x0
   126ec:	b.le	129ec <__subtf3@@GCC_3.0+0x454>
   126f0:	ldr	x0, [sp, #288]
   126f4:	str	x0, [sp, #336]
   126f8:	ldr	x0, [sp, #272]
   126fc:	cmp	x0, #0x0
   12700:	b.ne	12830 <__subtf3@@GCC_3.0+0x298>  // b.any
   12704:	ldr	x1, [sp, #392]
   12708:	ldr	x0, [sp, #368]
   1270c:	orr	x0, x1, x0
   12710:	cmp	x0, #0x0
   12714:	b.ne	1276c <__subtf3@@GCC_3.0+0x1d4>  // b.any
   12718:	ldr	x1, [sp, #288]
   1271c:	mov	x0, #0x7fff                	// #32767
   12720:	cmp	x1, x0
   12724:	b.ne	12758 <__subtf3@@GCC_3.0+0x1c0>  // b.any
   12728:	ldr	x1, [sp, #384]
   1272c:	ldr	x0, [sp, #360]
   12730:	orr	x0, x1, x0
   12734:	cmp	x0, #0x0
   12738:	b.eq	12758 <__subtf3@@GCC_3.0+0x1c0>  // b.none
   1273c:	ldr	x0, [sp, #384]
   12740:	and	x0, x0, #0x4000000000000
   12744:	cmp	x0, #0x0
   12748:	b.ne	12758 <__subtf3@@GCC_3.0+0x1c0>  // b.any
   1274c:	ldr	w0, [sp, #356]
   12750:	orr	w0, w0, #0x1
   12754:	str	w0, [sp, #356]
   12758:	ldr	x0, [sp, #360]
   1275c:	str	x0, [sp, #328]
   12760:	ldr	x0, [sp, #384]
   12764:	str	x0, [sp, #320]
   12768:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   1276c:	ldr	w0, [sp, #316]
   12770:	sub	w0, w0, #0x1
   12774:	str	w0, [sp, #316]
   12778:	ldr	w0, [sp, #316]
   1277c:	cmp	w0, #0x0
   12780:	b.ne	127cc <__subtf3@@GCC_3.0+0x234>  // b.any
   12784:	ldr	x1, [sp, #360]
   12788:	ldr	x0, [sp, #368]
   1278c:	add	x0, x1, x0
   12790:	str	x0, [sp, #160]
   12794:	ldr	x1, [sp, #384]
   12798:	ldr	x0, [sp, #392]
   1279c:	add	x1, x1, x0
   127a0:	ldr	x2, [sp, #160]
   127a4:	ldr	x0, [sp, #360]
   127a8:	cmp	x2, x0
   127ac:	cset	w0, cc  // cc = lo, ul, last
   127b0:	and	w0, w0, #0xff
   127b4:	and	x0, x0, #0xff
   127b8:	add	x0, x1, x0
   127bc:	str	x0, [sp, #320]
   127c0:	ldr	x0, [sp, #160]
   127c4:	str	x0, [sp, #328]
   127c8:	b	130b4 <__subtf3@@GCC_3.0+0xb1c>
   127cc:	ldr	x1, [sp, #288]
   127d0:	mov	x0, #0x7fff                	// #32767
   127d4:	cmp	x1, x0
   127d8:	b.ne	128a4 <__subtf3@@GCC_3.0+0x30c>  // b.any
   127dc:	ldr	x1, [sp, #288]
   127e0:	mov	x0, #0x7fff                	// #32767
   127e4:	cmp	x1, x0
   127e8:	b.ne	1281c <__subtf3@@GCC_3.0+0x284>  // b.any
   127ec:	ldr	x1, [sp, #384]
   127f0:	ldr	x0, [sp, #360]
   127f4:	orr	x0, x1, x0
   127f8:	cmp	x0, #0x0
   127fc:	b.eq	1281c <__subtf3@@GCC_3.0+0x284>  // b.none
   12800:	ldr	x0, [sp, #384]
   12804:	and	x0, x0, #0x4000000000000
   12808:	cmp	x0, #0x0
   1280c:	b.ne	1281c <__subtf3@@GCC_3.0+0x284>  // b.any
   12810:	ldr	w0, [sp, #356]
   12814:	orr	w0, w0, #0x1
   12818:	str	w0, [sp, #356]
   1281c:	ldr	x0, [sp, #360]
   12820:	str	x0, [sp, #328]
   12824:	ldr	x0, [sp, #384]
   12828:	str	x0, [sp, #320]
   1282c:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12830:	ldr	x1, [sp, #288]
   12834:	mov	x0, #0x7fff                	// #32767
   12838:	cmp	x1, x0
   1283c:	b.ne	12894 <__subtf3@@GCC_3.0+0x2fc>  // b.any
   12840:	ldr	x1, [sp, #288]
   12844:	mov	x0, #0x7fff                	// #32767
   12848:	cmp	x1, x0
   1284c:	b.ne	12880 <__subtf3@@GCC_3.0+0x2e8>  // b.any
   12850:	ldr	x1, [sp, #384]
   12854:	ldr	x0, [sp, #360]
   12858:	orr	x0, x1, x0
   1285c:	cmp	x0, #0x0
   12860:	b.eq	12880 <__subtf3@@GCC_3.0+0x2e8>  // b.none
   12864:	ldr	x0, [sp, #384]
   12868:	and	x0, x0, #0x4000000000000
   1286c:	cmp	x0, #0x0
   12870:	b.ne	12880 <__subtf3@@GCC_3.0+0x2e8>  // b.any
   12874:	ldr	w0, [sp, #356]
   12878:	orr	w0, w0, #0x1
   1287c:	str	w0, [sp, #356]
   12880:	ldr	x0, [sp, #360]
   12884:	str	x0, [sp, #328]
   12888:	ldr	x0, [sp, #384]
   1288c:	str	x0, [sp, #320]
   12890:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12894:	ldr	x0, [sp, #392]
   12898:	orr	x0, x0, #0x8000000000000
   1289c:	str	x0, [sp, #392]
   128a0:	b	128a8 <__subtf3@@GCC_3.0+0x310>
   128a4:	nop
   128a8:	ldr	w0, [sp, #316]
   128ac:	cmp	w0, #0x74
   128b0:	b.gt	12984 <__subtf3@@GCC_3.0+0x3ec>
   128b4:	ldr	w0, [sp, #316]
   128b8:	cmp	w0, #0x3f
   128bc:	b.gt	12924 <__subtf3@@GCC_3.0+0x38c>
   128c0:	mov	w1, #0x40                  	// #64
   128c4:	ldr	w0, [sp, #316]
   128c8:	sub	w0, w1, w0
   128cc:	ldr	x1, [sp, #392]
   128d0:	lsl	x1, x1, x0
   128d4:	ldr	w0, [sp, #316]
   128d8:	ldr	x2, [sp, #368]
   128dc:	lsr	x0, x2, x0
   128e0:	orr	x1, x1, x0
   128e4:	mov	w2, #0x40                  	// #64
   128e8:	ldr	w0, [sp, #316]
   128ec:	sub	w0, w2, w0
   128f0:	ldr	x2, [sp, #368]
   128f4:	lsl	x0, x2, x0
   128f8:	cmp	x0, #0x0
   128fc:	cset	w0, ne  // ne = any
   12900:	and	w0, w0, #0xff
   12904:	sxtw	x0, w0
   12908:	orr	x0, x1, x0
   1290c:	str	x0, [sp, #368]
   12910:	ldr	w0, [sp, #316]
   12914:	ldr	x1, [sp, #392]
   12918:	lsr	x0, x1, x0
   1291c:	str	x0, [sp, #392]
   12920:	b	129a4 <__subtf3@@GCC_3.0+0x40c>
   12924:	ldr	w0, [sp, #316]
   12928:	sub	w0, w0, #0x40
   1292c:	ldr	x1, [sp, #392]
   12930:	lsr	x1, x1, x0
   12934:	ldr	w0, [sp, #316]
   12938:	cmp	w0, #0x40
   1293c:	b.eq	12958 <__subtf3@@GCC_3.0+0x3c0>  // b.none
   12940:	mov	w2, #0x80                  	// #128
   12944:	ldr	w0, [sp, #316]
   12948:	sub	w0, w2, w0
   1294c:	ldr	x2, [sp, #392]
   12950:	lsl	x0, x2, x0
   12954:	b	1295c <__subtf3@@GCC_3.0+0x3c4>
   12958:	mov	x0, #0x0                   	// #0
   1295c:	ldr	x2, [sp, #368]
   12960:	orr	x0, x0, x2
   12964:	cmp	x0, #0x0
   12968:	cset	w0, ne  // ne = any
   1296c:	and	w0, w0, #0xff
   12970:	and	x0, x0, #0xff
   12974:	orr	x0, x1, x0
   12978:	str	x0, [sp, #368]
   1297c:	str	xzr, [sp, #392]
   12980:	b	129a4 <__subtf3@@GCC_3.0+0x40c>
   12984:	ldr	x1, [sp, #392]
   12988:	ldr	x0, [sp, #368]
   1298c:	orr	x0, x1, x0
   12990:	cmp	x0, #0x0
   12994:	b.eq	129a4 <__subtf3@@GCC_3.0+0x40c>  // b.none
   12998:	mov	x0, #0x1                   	// #1
   1299c:	str	x0, [sp, #368]
   129a0:	str	xzr, [sp, #392]
   129a4:	ldr	x1, [sp, #360]
   129a8:	ldr	x0, [sp, #368]
   129ac:	add	x0, x1, x0
   129b0:	str	x0, [sp, #152]
   129b4:	ldr	x1, [sp, #384]
   129b8:	ldr	x0, [sp, #392]
   129bc:	add	x1, x1, x0
   129c0:	ldr	x2, [sp, #152]
   129c4:	ldr	x0, [sp, #360]
   129c8:	cmp	x2, x0
   129cc:	cset	w0, cc  // cc = lo, ul, last
   129d0:	and	w0, w0, #0xff
   129d4:	and	x0, x0, #0xff
   129d8:	add	x0, x1, x0
   129dc:	str	x0, [sp, #320]
   129e0:	ldr	x0, [sp, #152]
   129e4:	str	x0, [sp, #328]
   129e8:	b	130b4 <__subtf3@@GCC_3.0+0xb1c>
   129ec:	ldr	w0, [sp, #316]
   129f0:	cmp	w0, #0x0
   129f4:	b.ge	12d00 <__subtf3@@GCC_3.0+0x768>  // b.tcont
   129f8:	ldr	w0, [sp, #316]
   129fc:	neg	w0, w0
   12a00:	str	w0, [sp, #316]
   12a04:	ldr	x0, [sp, #272]
   12a08:	str	x0, [sp, #336]
   12a0c:	ldr	x0, [sp, #288]
   12a10:	cmp	x0, #0x0
   12a14:	b.ne	12b44 <__subtf3@@GCC_3.0+0x5ac>  // b.any
   12a18:	ldr	x1, [sp, #384]
   12a1c:	ldr	x0, [sp, #360]
   12a20:	orr	x0, x1, x0
   12a24:	cmp	x0, #0x0
   12a28:	b.ne	12a80 <__subtf3@@GCC_3.0+0x4e8>  // b.any
   12a2c:	ldr	x1, [sp, #272]
   12a30:	mov	x0, #0x7fff                	// #32767
   12a34:	cmp	x1, x0
   12a38:	b.ne	12a6c <__subtf3@@GCC_3.0+0x4d4>  // b.any
   12a3c:	ldr	x1, [sp, #392]
   12a40:	ldr	x0, [sp, #368]
   12a44:	orr	x0, x1, x0
   12a48:	cmp	x0, #0x0
   12a4c:	b.eq	12a6c <__subtf3@@GCC_3.0+0x4d4>  // b.none
   12a50:	ldr	x0, [sp, #392]
   12a54:	and	x0, x0, #0x4000000000000
   12a58:	cmp	x0, #0x0
   12a5c:	b.ne	12a6c <__subtf3@@GCC_3.0+0x4d4>  // b.any
   12a60:	ldr	w0, [sp, #356]
   12a64:	orr	w0, w0, #0x1
   12a68:	str	w0, [sp, #356]
   12a6c:	ldr	x0, [sp, #368]
   12a70:	str	x0, [sp, #328]
   12a74:	ldr	x0, [sp, #392]
   12a78:	str	x0, [sp, #320]
   12a7c:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12a80:	ldr	w0, [sp, #316]
   12a84:	sub	w0, w0, #0x1
   12a88:	str	w0, [sp, #316]
   12a8c:	ldr	w0, [sp, #316]
   12a90:	cmp	w0, #0x0
   12a94:	b.ne	12ae0 <__subtf3@@GCC_3.0+0x548>  // b.any
   12a98:	ldr	x1, [sp, #368]
   12a9c:	ldr	x0, [sp, #360]
   12aa0:	add	x0, x1, x0
   12aa4:	str	x0, [sp, #176]
   12aa8:	ldr	x1, [sp, #392]
   12aac:	ldr	x0, [sp, #384]
   12ab0:	add	x1, x1, x0
   12ab4:	ldr	x2, [sp, #176]
   12ab8:	ldr	x0, [sp, #368]
   12abc:	cmp	x2, x0
   12ac0:	cset	w0, cc  // cc = lo, ul, last
   12ac4:	and	w0, w0, #0xff
   12ac8:	and	x0, x0, #0xff
   12acc:	add	x0, x1, x0
   12ad0:	str	x0, [sp, #320]
   12ad4:	ldr	x0, [sp, #176]
   12ad8:	str	x0, [sp, #328]
   12adc:	b	130b4 <__subtf3@@GCC_3.0+0xb1c>
   12ae0:	ldr	x1, [sp, #272]
   12ae4:	mov	x0, #0x7fff                	// #32767
   12ae8:	cmp	x1, x0
   12aec:	b.ne	12bb8 <__subtf3@@GCC_3.0+0x620>  // b.any
   12af0:	ldr	x1, [sp, #272]
   12af4:	mov	x0, #0x7fff                	// #32767
   12af8:	cmp	x1, x0
   12afc:	b.ne	12b30 <__subtf3@@GCC_3.0+0x598>  // b.any
   12b00:	ldr	x1, [sp, #392]
   12b04:	ldr	x0, [sp, #368]
   12b08:	orr	x0, x1, x0
   12b0c:	cmp	x0, #0x0
   12b10:	b.eq	12b30 <__subtf3@@GCC_3.0+0x598>  // b.none
   12b14:	ldr	x0, [sp, #392]
   12b18:	and	x0, x0, #0x4000000000000
   12b1c:	cmp	x0, #0x0
   12b20:	b.ne	12b30 <__subtf3@@GCC_3.0+0x598>  // b.any
   12b24:	ldr	w0, [sp, #356]
   12b28:	orr	w0, w0, #0x1
   12b2c:	str	w0, [sp, #356]
   12b30:	ldr	x0, [sp, #368]
   12b34:	str	x0, [sp, #328]
   12b38:	ldr	x0, [sp, #392]
   12b3c:	str	x0, [sp, #320]
   12b40:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12b44:	ldr	x1, [sp, #272]
   12b48:	mov	x0, #0x7fff                	// #32767
   12b4c:	cmp	x1, x0
   12b50:	b.ne	12ba8 <__subtf3@@GCC_3.0+0x610>  // b.any
   12b54:	ldr	x1, [sp, #272]
   12b58:	mov	x0, #0x7fff                	// #32767
   12b5c:	cmp	x1, x0
   12b60:	b.ne	12b94 <__subtf3@@GCC_3.0+0x5fc>  // b.any
   12b64:	ldr	x1, [sp, #392]
   12b68:	ldr	x0, [sp, #368]
   12b6c:	orr	x0, x1, x0
   12b70:	cmp	x0, #0x0
   12b74:	b.eq	12b94 <__subtf3@@GCC_3.0+0x5fc>  // b.none
   12b78:	ldr	x0, [sp, #392]
   12b7c:	and	x0, x0, #0x4000000000000
   12b80:	cmp	x0, #0x0
   12b84:	b.ne	12b94 <__subtf3@@GCC_3.0+0x5fc>  // b.any
   12b88:	ldr	w0, [sp, #356]
   12b8c:	orr	w0, w0, #0x1
   12b90:	str	w0, [sp, #356]
   12b94:	ldr	x0, [sp, #368]
   12b98:	str	x0, [sp, #328]
   12b9c:	ldr	x0, [sp, #392]
   12ba0:	str	x0, [sp, #320]
   12ba4:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12ba8:	ldr	x0, [sp, #384]
   12bac:	orr	x0, x0, #0x8000000000000
   12bb0:	str	x0, [sp, #384]
   12bb4:	b	12bbc <__subtf3@@GCC_3.0+0x624>
   12bb8:	nop
   12bbc:	ldr	w0, [sp, #316]
   12bc0:	cmp	w0, #0x74
   12bc4:	b.gt	12c98 <__subtf3@@GCC_3.0+0x700>
   12bc8:	ldr	w0, [sp, #316]
   12bcc:	cmp	w0, #0x3f
   12bd0:	b.gt	12c38 <__subtf3@@GCC_3.0+0x6a0>
   12bd4:	mov	w1, #0x40                  	// #64
   12bd8:	ldr	w0, [sp, #316]
   12bdc:	sub	w0, w1, w0
   12be0:	ldr	x1, [sp, #384]
   12be4:	lsl	x1, x1, x0
   12be8:	ldr	w0, [sp, #316]
   12bec:	ldr	x2, [sp, #360]
   12bf0:	lsr	x0, x2, x0
   12bf4:	orr	x1, x1, x0
   12bf8:	mov	w2, #0x40                  	// #64
   12bfc:	ldr	w0, [sp, #316]
   12c00:	sub	w0, w2, w0
   12c04:	ldr	x2, [sp, #360]
   12c08:	lsl	x0, x2, x0
   12c0c:	cmp	x0, #0x0
   12c10:	cset	w0, ne  // ne = any
   12c14:	and	w0, w0, #0xff
   12c18:	sxtw	x0, w0
   12c1c:	orr	x0, x1, x0
   12c20:	str	x0, [sp, #360]
   12c24:	ldr	w0, [sp, #316]
   12c28:	ldr	x1, [sp, #384]
   12c2c:	lsr	x0, x1, x0
   12c30:	str	x0, [sp, #384]
   12c34:	b	12cb8 <__subtf3@@GCC_3.0+0x720>
   12c38:	ldr	w0, [sp, #316]
   12c3c:	sub	w0, w0, #0x40
   12c40:	ldr	x1, [sp, #384]
   12c44:	lsr	x1, x1, x0
   12c48:	ldr	w0, [sp, #316]
   12c4c:	cmp	w0, #0x40
   12c50:	b.eq	12c6c <__subtf3@@GCC_3.0+0x6d4>  // b.none
   12c54:	mov	w2, #0x80                  	// #128
   12c58:	ldr	w0, [sp, #316]
   12c5c:	sub	w0, w2, w0
   12c60:	ldr	x2, [sp, #384]
   12c64:	lsl	x0, x2, x0
   12c68:	b	12c70 <__subtf3@@GCC_3.0+0x6d8>
   12c6c:	mov	x0, #0x0                   	// #0
   12c70:	ldr	x2, [sp, #360]
   12c74:	orr	x0, x0, x2
   12c78:	cmp	x0, #0x0
   12c7c:	cset	w0, ne  // ne = any
   12c80:	and	w0, w0, #0xff
   12c84:	and	x0, x0, #0xff
   12c88:	orr	x0, x1, x0
   12c8c:	str	x0, [sp, #360]
   12c90:	str	xzr, [sp, #384]
   12c94:	b	12cb8 <__subtf3@@GCC_3.0+0x720>
   12c98:	ldr	x1, [sp, #384]
   12c9c:	ldr	x0, [sp, #360]
   12ca0:	orr	x0, x1, x0
   12ca4:	cmp	x0, #0x0
   12ca8:	b.eq	12cb8 <__subtf3@@GCC_3.0+0x720>  // b.none
   12cac:	mov	x0, #0x1                   	// #1
   12cb0:	str	x0, [sp, #360]
   12cb4:	str	xzr, [sp, #384]
   12cb8:	ldr	x1, [sp, #368]
   12cbc:	ldr	x0, [sp, #360]
   12cc0:	add	x0, x1, x0
   12cc4:	str	x0, [sp, #168]
   12cc8:	ldr	x1, [sp, #392]
   12ccc:	ldr	x0, [sp, #384]
   12cd0:	add	x1, x1, x0
   12cd4:	ldr	x2, [sp, #168]
   12cd8:	ldr	x0, [sp, #368]
   12cdc:	cmp	x2, x0
   12ce0:	cset	w0, cc  // cc = lo, ul, last
   12ce4:	and	w0, w0, #0xff
   12ce8:	and	x0, x0, #0xff
   12cec:	add	x0, x1, x0
   12cf0:	str	x0, [sp, #320]
   12cf4:	ldr	x0, [sp, #168]
   12cf8:	str	x0, [sp, #328]
   12cfc:	b	130b4 <__subtf3@@GCC_3.0+0xb1c>
   12d00:	ldr	x0, [sp, #288]
   12d04:	add	x0, x0, #0x1
   12d08:	and	x0, x0, #0x7ffe
   12d0c:	cmp	x0, #0x0
   12d10:	b.ne	12f94 <__subtf3@@GCC_3.0+0x9fc>  // b.any
   12d14:	ldr	x0, [sp, #288]
   12d18:	cmp	x0, #0x0
   12d1c:	b.ne	12df0 <__subtf3@@GCC_3.0+0x858>  // b.any
   12d20:	str	xzr, [sp, #336]
   12d24:	ldr	x1, [sp, #384]
   12d28:	ldr	x0, [sp, #360]
   12d2c:	orr	x0, x1, x0
   12d30:	cmp	x0, #0x0
   12d34:	b.ne	12d5c <__subtf3@@GCC_3.0+0x7c4>  // b.any
   12d38:	ldr	x1, [sp, #392]
   12d3c:	ldr	x0, [sp, #368]
   12d40:	orr	x0, x1, x0
   12d44:	cmp	x0, #0x0
   12d48:	ldr	x0, [sp, #368]
   12d4c:	str	x0, [sp, #328]
   12d50:	ldr	x0, [sp, #392]
   12d54:	str	x0, [sp, #320]
   12d58:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12d5c:	ldr	x1, [sp, #392]
   12d60:	ldr	x0, [sp, #368]
   12d64:	orr	x0, x1, x0
   12d68:	cmp	x0, #0x0
   12d6c:	b.ne	12d84 <__subtf3@@GCC_3.0+0x7ec>  // b.any
   12d70:	ldr	x0, [sp, #360]
   12d74:	str	x0, [sp, #328]
   12d78:	ldr	x0, [sp, #384]
   12d7c:	str	x0, [sp, #320]
   12d80:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12d84:	ldr	x1, [sp, #360]
   12d88:	ldr	x0, [sp, #368]
   12d8c:	add	x0, x1, x0
   12d90:	str	x0, [sp, #184]
   12d94:	ldr	x1, [sp, #384]
   12d98:	ldr	x0, [sp, #392]
   12d9c:	add	x1, x1, x0
   12da0:	ldr	x2, [sp, #184]
   12da4:	ldr	x0, [sp, #360]
   12da8:	cmp	x2, x0
   12dac:	cset	w0, cc  // cc = lo, ul, last
   12db0:	and	w0, w0, #0xff
   12db4:	and	x0, x0, #0xff
   12db8:	add	x0, x1, x0
   12dbc:	str	x0, [sp, #320]
   12dc0:	ldr	x0, [sp, #184]
   12dc4:	str	x0, [sp, #328]
   12dc8:	ldr	x0, [sp, #320]
   12dcc:	and	x0, x0, #0x8000000000000
   12dd0:	cmp	x0, #0x0
   12dd4:	b.eq	13e5c <__subtf3@@GCC_3.0+0x18c4>  // b.none
   12dd8:	ldr	x0, [sp, #320]
   12ddc:	and	x0, x0, #0xfff7ffffffffffff
   12de0:	str	x0, [sp, #320]
   12de4:	mov	x0, #0x1                   	// #1
   12de8:	str	x0, [sp, #336]
   12dec:	b	13e5c <__subtf3@@GCC_3.0+0x18c4>
   12df0:	ldr	x1, [sp, #288]
   12df4:	mov	x0, #0x7fff                	// #32767
   12df8:	cmp	x1, x0
   12dfc:	b.ne	12e30 <__subtf3@@GCC_3.0+0x898>  // b.any
   12e00:	ldr	x1, [sp, #384]
   12e04:	ldr	x0, [sp, #360]
   12e08:	orr	x0, x1, x0
   12e0c:	cmp	x0, #0x0
   12e10:	b.eq	12e30 <__subtf3@@GCC_3.0+0x898>  // b.none
   12e14:	ldr	x0, [sp, #384]
   12e18:	and	x0, x0, #0x4000000000000
   12e1c:	cmp	x0, #0x0
   12e20:	b.ne	12e30 <__subtf3@@GCC_3.0+0x898>  // b.any
   12e24:	ldr	w0, [sp, #356]
   12e28:	orr	w0, w0, #0x1
   12e2c:	str	w0, [sp, #356]
   12e30:	ldr	x1, [sp, #272]
   12e34:	mov	x0, #0x7fff                	// #32767
   12e38:	cmp	x1, x0
   12e3c:	b.ne	12e70 <__subtf3@@GCC_3.0+0x8d8>  // b.any
   12e40:	ldr	x1, [sp, #392]
   12e44:	ldr	x0, [sp, #368]
   12e48:	orr	x0, x1, x0
   12e4c:	cmp	x0, #0x0
   12e50:	b.eq	12e70 <__subtf3@@GCC_3.0+0x8d8>  // b.none
   12e54:	ldr	x0, [sp, #392]
   12e58:	and	x0, x0, #0x4000000000000
   12e5c:	cmp	x0, #0x0
   12e60:	b.ne	12e70 <__subtf3@@GCC_3.0+0x8d8>  // b.any
   12e64:	ldr	w0, [sp, #356]
   12e68:	orr	w0, w0, #0x1
   12e6c:	str	w0, [sp, #356]
   12e70:	mov	x0, #0x7fff                	// #32767
   12e74:	str	x0, [sp, #336]
   12e78:	ldr	x1, [sp, #384]
   12e7c:	ldr	x0, [sp, #360]
   12e80:	orr	x0, x1, x0
   12e84:	cmp	x0, #0x0
   12e88:	b.ne	12ea0 <__subtf3@@GCC_3.0+0x908>  // b.any
   12e8c:	ldr	x0, [sp, #368]
   12e90:	str	x0, [sp, #328]
   12e94:	ldr	x0, [sp, #392]
   12e98:	str	x0, [sp, #320]
   12e9c:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12ea0:	ldr	x1, [sp, #392]
   12ea4:	ldr	x0, [sp, #368]
   12ea8:	orr	x0, x1, x0
   12eac:	cmp	x0, #0x0
   12eb0:	b.ne	12ec8 <__subtf3@@GCC_3.0+0x930>  // b.any
   12eb4:	ldr	x0, [sp, #360]
   12eb8:	str	x0, [sp, #328]
   12ebc:	ldr	x0, [sp, #384]
   12ec0:	str	x0, [sp, #320]
   12ec4:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12ec8:	ldr	x0, [sp, #360]
   12ecc:	lsr	x1, x0, #3
   12ed0:	ldr	x0, [sp, #384]
   12ed4:	lsl	x0, x0, #61
   12ed8:	orr	x0, x1, x0
   12edc:	str	x0, [sp, #360]
   12ee0:	ldr	x0, [sp, #384]
   12ee4:	lsr	x0, x0, #3
   12ee8:	str	x0, [sp, #384]
   12eec:	ldr	x0, [sp, #368]
   12ef0:	lsr	x1, x0, #3
   12ef4:	ldr	x0, [sp, #392]
   12ef8:	lsl	x0, x0, #61
   12efc:	orr	x0, x1, x0
   12f00:	str	x0, [sp, #368]
   12f04:	ldr	x0, [sp, #392]
   12f08:	lsr	x0, x0, #3
   12f0c:	str	x0, [sp, #392]
   12f10:	ldr	x0, [sp, #384]
   12f14:	and	x0, x0, #0x800000000000
   12f18:	cmp	x0, #0x0
   12f1c:	b.eq	12f4c <__subtf3@@GCC_3.0+0x9b4>  // b.none
   12f20:	ldr	x0, [sp, #392]
   12f24:	and	x0, x0, #0x800000000000
   12f28:	cmp	x0, #0x0
   12f2c:	b.ne	12f4c <__subtf3@@GCC_3.0+0x9b4>  // b.any
   12f30:	ldr	x0, [sp, #376]
   12f34:	str	x0, [sp, #344]
   12f38:	ldr	x0, [sp, #368]
   12f3c:	str	x0, [sp, #328]
   12f40:	ldr	x0, [sp, #392]
   12f44:	str	x0, [sp, #320]
   12f48:	b	12f64 <__subtf3@@GCC_3.0+0x9cc>
   12f4c:	ldr	x0, [sp, #280]
   12f50:	str	x0, [sp, #344]
   12f54:	ldr	x0, [sp, #360]
   12f58:	str	x0, [sp, #328]
   12f5c:	ldr	x0, [sp, #384]
   12f60:	str	x0, [sp, #320]
   12f64:	mov	x0, #0x3                   	// #3
   12f68:	str	x0, [sp, #248]
   12f6c:	ldr	x0, [sp, #320]
   12f70:	lsl	x1, x0, #3
   12f74:	ldr	x0, [sp, #328]
   12f78:	lsr	x0, x0, #61
   12f7c:	orr	x0, x1, x0
   12f80:	str	x0, [sp, #320]
   12f84:	ldr	x0, [sp, #328]
   12f88:	lsl	x0, x0, #3
   12f8c:	str	x0, [sp, #328]
   12f90:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   12f94:	ldr	x1, [sp, #360]
   12f98:	ldr	x0, [sp, #368]
   12f9c:	add	x0, x1, x0
   12fa0:	str	x0, [sp, #192]
   12fa4:	ldr	x1, [sp, #384]
   12fa8:	ldr	x0, [sp, #392]
   12fac:	add	x1, x1, x0
   12fb0:	ldr	x2, [sp, #192]
   12fb4:	ldr	x0, [sp, #360]
   12fb8:	cmp	x2, x0
   12fbc:	cset	w0, cc  // cc = lo, ul, last
   12fc0:	and	w0, w0, #0xff
   12fc4:	and	x0, x0, #0xff
   12fc8:	add	x0, x1, x0
   12fcc:	str	x0, [sp, #320]
   12fd0:	ldr	x0, [sp, #192]
   12fd4:	str	x0, [sp, #328]
   12fd8:	ldr	x0, [sp, #288]
   12fdc:	add	x0, x0, #0x1
   12fe0:	str	x0, [sp, #336]
   12fe4:	ldr	x0, [sp, #320]
   12fe8:	lsl	x1, x0, #63
   12fec:	ldr	x0, [sp, #328]
   12ff0:	lsr	x0, x0, #1
   12ff4:	orr	x1, x1, x0
   12ff8:	ldr	x0, [sp, #328]
   12ffc:	and	x0, x0, #0x1
   13000:	orr	x0, x1, x0
   13004:	str	x0, [sp, #328]
   13008:	ldr	x0, [sp, #320]
   1300c:	lsr	x0, x0, #1
   13010:	str	x0, [sp, #320]
   13014:	ldr	x1, [sp, #336]
   13018:	mov	x0, #0x7fff                	// #32767
   1301c:	cmp	x1, x0
   13020:	b.ne	13e64 <__subtf3@@GCC_3.0+0x18cc>  // b.any
   13024:	ldr	x0, [sp, #296]
   13028:	and	x0, x0, #0xc00000
   1302c:	cmp	x0, #0x0
   13030:	b.eq	1306c <__subtf3@@GCC_3.0+0xad4>  // b.none
   13034:	ldr	x0, [sp, #296]
   13038:	and	x0, x0, #0xc00000
   1303c:	cmp	x0, #0x400, lsl #12
   13040:	b.ne	13050 <__subtf3@@GCC_3.0+0xab8>  // b.any
   13044:	ldr	x0, [sp, #344]
   13048:	cmp	x0, #0x0
   1304c:	b.eq	1306c <__subtf3@@GCC_3.0+0xad4>  // b.none
   13050:	ldr	x0, [sp, #296]
   13054:	and	x0, x0, #0xc00000
   13058:	cmp	x0, #0x800, lsl #12
   1305c:	b.ne	13080 <__subtf3@@GCC_3.0+0xae8>  // b.any
   13060:	ldr	x0, [sp, #344]
   13064:	cmp	x0, #0x0
   13068:	b.eq	13080 <__subtf3@@GCC_3.0+0xae8>  // b.none
   1306c:	mov	x0, #0x7fff                	// #32767
   13070:	str	x0, [sp, #336]
   13074:	str	xzr, [sp, #328]
   13078:	str	xzr, [sp, #320]
   1307c:	b	13098 <__subtf3@@GCC_3.0+0xb00>
   13080:	mov	x0, #0x7ffe                	// #32766
   13084:	str	x0, [sp, #336]
   13088:	mov	x0, #0xffffffffffffffff    	// #-1
   1308c:	str	x0, [sp, #328]
   13090:	mov	x0, #0xffffffffffffffff    	// #-1
   13094:	str	x0, [sp, #320]
   13098:	ldr	w0, [sp, #356]
   1309c:	orr	w0, w0, #0x10
   130a0:	str	w0, [sp, #356]
   130a4:	ldr	w0, [sp, #356]
   130a8:	orr	w0, w0, #0x4
   130ac:	str	w0, [sp, #356]
   130b0:	b	13e64 <__subtf3@@GCC_3.0+0x18cc>
   130b4:	ldr	x0, [sp, #320]
   130b8:	and	x0, x0, #0x8000000000000
   130bc:	cmp	x0, #0x0
   130c0:	b.eq	13e6c <__subtf3@@GCC_3.0+0x18d4>  // b.none
   130c4:	ldr	x0, [sp, #320]
   130c8:	and	x0, x0, #0xfff7ffffffffffff
   130cc:	str	x0, [sp, #320]
   130d0:	ldr	x0, [sp, #336]
   130d4:	add	x0, x0, #0x1
   130d8:	str	x0, [sp, #336]
   130dc:	ldr	x0, [sp, #320]
   130e0:	lsl	x1, x0, #63
   130e4:	ldr	x0, [sp, #328]
   130e8:	lsr	x0, x0, #1
   130ec:	orr	x1, x1, x0
   130f0:	ldr	x0, [sp, #328]
   130f4:	and	x0, x0, #0x1
   130f8:	orr	x0, x1, x0
   130fc:	str	x0, [sp, #328]
   13100:	ldr	x0, [sp, #320]
   13104:	lsr	x0, x0, #1
   13108:	str	x0, [sp, #320]
   1310c:	ldr	x1, [sp, #336]
   13110:	mov	x0, #0x7fff                	// #32767
   13114:	cmp	x1, x0
   13118:	b.ne	13e6c <__subtf3@@GCC_3.0+0x18d4>  // b.any
   1311c:	ldr	x0, [sp, #296]
   13120:	and	x0, x0, #0xc00000
   13124:	cmp	x0, #0x0
   13128:	b.eq	13164 <__subtf3@@GCC_3.0+0xbcc>  // b.none
   1312c:	ldr	x0, [sp, #296]
   13130:	and	x0, x0, #0xc00000
   13134:	cmp	x0, #0x400, lsl #12
   13138:	b.ne	13148 <__subtf3@@GCC_3.0+0xbb0>  // b.any
   1313c:	ldr	x0, [sp, #344]
   13140:	cmp	x0, #0x0
   13144:	b.eq	13164 <__subtf3@@GCC_3.0+0xbcc>  // b.none
   13148:	ldr	x0, [sp, #296]
   1314c:	and	x0, x0, #0xc00000
   13150:	cmp	x0, #0x800, lsl #12
   13154:	b.ne	13178 <__subtf3@@GCC_3.0+0xbe0>  // b.any
   13158:	ldr	x0, [sp, #344]
   1315c:	cmp	x0, #0x0
   13160:	b.eq	13178 <__subtf3@@GCC_3.0+0xbe0>  // b.none
   13164:	mov	x0, #0x7fff                	// #32767
   13168:	str	x0, [sp, #336]
   1316c:	str	xzr, [sp, #328]
   13170:	str	xzr, [sp, #320]
   13174:	b	13190 <__subtf3@@GCC_3.0+0xbf8>
   13178:	mov	x0, #0x7ffe                	// #32766
   1317c:	str	x0, [sp, #336]
   13180:	mov	x0, #0xffffffffffffffff    	// #-1
   13184:	str	x0, [sp, #328]
   13188:	mov	x0, #0xffffffffffffffff    	// #-1
   1318c:	str	x0, [sp, #320]
   13190:	ldr	w0, [sp, #356]
   13194:	orr	w0, w0, #0x10
   13198:	str	w0, [sp, #356]
   1319c:	ldr	w0, [sp, #356]
   131a0:	orr	w0, w0, #0x4
   131a4:	str	w0, [sp, #356]
   131a8:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   131ac:	ldr	x0, [sp, #288]
   131b0:	mov	w1, w0
   131b4:	ldr	x0, [sp, #272]
   131b8:	sub	w0, w1, w0
   131bc:	str	w0, [sp, #312]
   131c0:	ldr	w0, [sp, #312]
   131c4:	cmp	w0, #0x0
   131c8:	b.le	134d0 <__subtf3@@GCC_3.0+0xf38>
   131cc:	ldr	x0, [sp, #288]
   131d0:	str	x0, [sp, #336]
   131d4:	ldr	x0, [sp, #280]
   131d8:	str	x0, [sp, #344]
   131dc:	ldr	x0, [sp, #272]
   131e0:	cmp	x0, #0x0
   131e4:	b.ne	13314 <__subtf3@@GCC_3.0+0xd7c>  // b.any
   131e8:	ldr	x1, [sp, #392]
   131ec:	ldr	x0, [sp, #368]
   131f0:	orr	x0, x1, x0
   131f4:	cmp	x0, #0x0
   131f8:	b.ne	13250 <__subtf3@@GCC_3.0+0xcb8>  // b.any
   131fc:	ldr	x1, [sp, #288]
   13200:	mov	x0, #0x7fff                	// #32767
   13204:	cmp	x1, x0
   13208:	b.ne	1323c <__subtf3@@GCC_3.0+0xca4>  // b.any
   1320c:	ldr	x1, [sp, #384]
   13210:	ldr	x0, [sp, #360]
   13214:	orr	x0, x1, x0
   13218:	cmp	x0, #0x0
   1321c:	b.eq	1323c <__subtf3@@GCC_3.0+0xca4>  // b.none
   13220:	ldr	x0, [sp, #384]
   13224:	and	x0, x0, #0x4000000000000
   13228:	cmp	x0, #0x0
   1322c:	b.ne	1323c <__subtf3@@GCC_3.0+0xca4>  // b.any
   13230:	ldr	w0, [sp, #356]
   13234:	orr	w0, w0, #0x1
   13238:	str	w0, [sp, #356]
   1323c:	ldr	x0, [sp, #360]
   13240:	str	x0, [sp, #328]
   13244:	ldr	x0, [sp, #384]
   13248:	str	x0, [sp, #320]
   1324c:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13250:	ldr	w0, [sp, #312]
   13254:	sub	w0, w0, #0x1
   13258:	str	w0, [sp, #312]
   1325c:	ldr	w0, [sp, #312]
   13260:	cmp	w0, #0x0
   13264:	b.ne	132b0 <__subtf3@@GCC_3.0+0xd18>  // b.any
   13268:	ldr	x1, [sp, #360]
   1326c:	ldr	x0, [sp, #368]
   13270:	sub	x0, x1, x0
   13274:	str	x0, [sp, #208]
   13278:	ldr	x1, [sp, #384]
   1327c:	ldr	x0, [sp, #392]
   13280:	sub	x1, x1, x0
   13284:	ldr	x2, [sp, #208]
   13288:	ldr	x0, [sp, #360]
   1328c:	cmp	x2, x0
   13290:	cset	w0, hi  // hi = pmore
   13294:	and	w0, w0, #0xff
   13298:	and	x0, x0, #0xff
   1329c:	sub	x0, x1, x0
   132a0:	str	x0, [sp, #320]
   132a4:	ldr	x0, [sp, #208]
   132a8:	str	x0, [sp, #328]
   132ac:	b	13c80 <__subtf3@@GCC_3.0+0x16e8>
   132b0:	ldr	x1, [sp, #288]
   132b4:	mov	x0, #0x7fff                	// #32767
   132b8:	cmp	x1, x0
   132bc:	b.ne	13388 <__subtf3@@GCC_3.0+0xdf0>  // b.any
   132c0:	ldr	x1, [sp, #288]
   132c4:	mov	x0, #0x7fff                	// #32767
   132c8:	cmp	x1, x0
   132cc:	b.ne	13300 <__subtf3@@GCC_3.0+0xd68>  // b.any
   132d0:	ldr	x1, [sp, #384]
   132d4:	ldr	x0, [sp, #360]
   132d8:	orr	x0, x1, x0
   132dc:	cmp	x0, #0x0
   132e0:	b.eq	13300 <__subtf3@@GCC_3.0+0xd68>  // b.none
   132e4:	ldr	x0, [sp, #384]
   132e8:	and	x0, x0, #0x4000000000000
   132ec:	cmp	x0, #0x0
   132f0:	b.ne	13300 <__subtf3@@GCC_3.0+0xd68>  // b.any
   132f4:	ldr	w0, [sp, #356]
   132f8:	orr	w0, w0, #0x1
   132fc:	str	w0, [sp, #356]
   13300:	ldr	x0, [sp, #360]
   13304:	str	x0, [sp, #328]
   13308:	ldr	x0, [sp, #384]
   1330c:	str	x0, [sp, #320]
   13310:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13314:	ldr	x1, [sp, #288]
   13318:	mov	x0, #0x7fff                	// #32767
   1331c:	cmp	x1, x0
   13320:	b.ne	13378 <__subtf3@@GCC_3.0+0xde0>  // b.any
   13324:	ldr	x1, [sp, #288]
   13328:	mov	x0, #0x7fff                	// #32767
   1332c:	cmp	x1, x0
   13330:	b.ne	13364 <__subtf3@@GCC_3.0+0xdcc>  // b.any
   13334:	ldr	x1, [sp, #384]
   13338:	ldr	x0, [sp, #360]
   1333c:	orr	x0, x1, x0
   13340:	cmp	x0, #0x0
   13344:	b.eq	13364 <__subtf3@@GCC_3.0+0xdcc>  // b.none
   13348:	ldr	x0, [sp, #384]
   1334c:	and	x0, x0, #0x4000000000000
   13350:	cmp	x0, #0x0
   13354:	b.ne	13364 <__subtf3@@GCC_3.0+0xdcc>  // b.any
   13358:	ldr	w0, [sp, #356]
   1335c:	orr	w0, w0, #0x1
   13360:	str	w0, [sp, #356]
   13364:	ldr	x0, [sp, #360]
   13368:	str	x0, [sp, #328]
   1336c:	ldr	x0, [sp, #384]
   13370:	str	x0, [sp, #320]
   13374:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13378:	ldr	x0, [sp, #392]
   1337c:	orr	x0, x0, #0x8000000000000
   13380:	str	x0, [sp, #392]
   13384:	b	1338c <__subtf3@@GCC_3.0+0xdf4>
   13388:	nop
   1338c:	ldr	w0, [sp, #312]
   13390:	cmp	w0, #0x74
   13394:	b.gt	13468 <__subtf3@@GCC_3.0+0xed0>
   13398:	ldr	w0, [sp, #312]
   1339c:	cmp	w0, #0x3f
   133a0:	b.gt	13408 <__subtf3@@GCC_3.0+0xe70>
   133a4:	mov	w1, #0x40                  	// #64
   133a8:	ldr	w0, [sp, #312]
   133ac:	sub	w0, w1, w0
   133b0:	ldr	x1, [sp, #392]
   133b4:	lsl	x1, x1, x0
   133b8:	ldr	w0, [sp, #312]
   133bc:	ldr	x2, [sp, #368]
   133c0:	lsr	x0, x2, x0
   133c4:	orr	x1, x1, x0
   133c8:	mov	w2, #0x40                  	// #64
   133cc:	ldr	w0, [sp, #312]
   133d0:	sub	w0, w2, w0
   133d4:	ldr	x2, [sp, #368]
   133d8:	lsl	x0, x2, x0
   133dc:	cmp	x0, #0x0
   133e0:	cset	w0, ne  // ne = any
   133e4:	and	w0, w0, #0xff
   133e8:	sxtw	x0, w0
   133ec:	orr	x0, x1, x0
   133f0:	str	x0, [sp, #368]
   133f4:	ldr	w0, [sp, #312]
   133f8:	ldr	x1, [sp, #392]
   133fc:	lsr	x0, x1, x0
   13400:	str	x0, [sp, #392]
   13404:	b	13488 <__subtf3@@GCC_3.0+0xef0>
   13408:	ldr	w0, [sp, #312]
   1340c:	sub	w0, w0, #0x40
   13410:	ldr	x1, [sp, #392]
   13414:	lsr	x1, x1, x0
   13418:	ldr	w0, [sp, #312]
   1341c:	cmp	w0, #0x40
   13420:	b.eq	1343c <__subtf3@@GCC_3.0+0xea4>  // b.none
   13424:	mov	w2, #0x80                  	// #128
   13428:	ldr	w0, [sp, #312]
   1342c:	sub	w0, w2, w0
   13430:	ldr	x2, [sp, #392]
   13434:	lsl	x0, x2, x0
   13438:	b	13440 <__subtf3@@GCC_3.0+0xea8>
   1343c:	mov	x0, #0x0                   	// #0
   13440:	ldr	x2, [sp, #368]
   13444:	orr	x0, x0, x2
   13448:	cmp	x0, #0x0
   1344c:	cset	w0, ne  // ne = any
   13450:	and	w0, w0, #0xff
   13454:	and	x0, x0, #0xff
   13458:	orr	x0, x1, x0
   1345c:	str	x0, [sp, #368]
   13460:	str	xzr, [sp, #392]
   13464:	b	13488 <__subtf3@@GCC_3.0+0xef0>
   13468:	ldr	x1, [sp, #392]
   1346c:	ldr	x0, [sp, #368]
   13470:	orr	x0, x1, x0
   13474:	cmp	x0, #0x0
   13478:	b.eq	13488 <__subtf3@@GCC_3.0+0xef0>  // b.none
   1347c:	mov	x0, #0x1                   	// #1
   13480:	str	x0, [sp, #368]
   13484:	str	xzr, [sp, #392]
   13488:	ldr	x1, [sp, #360]
   1348c:	ldr	x0, [sp, #368]
   13490:	sub	x0, x1, x0
   13494:	str	x0, [sp, #200]
   13498:	ldr	x1, [sp, #384]
   1349c:	ldr	x0, [sp, #392]
   134a0:	sub	x1, x1, x0
   134a4:	ldr	x2, [sp, #200]
   134a8:	ldr	x0, [sp, #360]
   134ac:	cmp	x2, x0
   134b0:	cset	w0, hi  // hi = pmore
   134b4:	and	w0, w0, #0xff
   134b8:	and	x0, x0, #0xff
   134bc:	sub	x0, x1, x0
   134c0:	str	x0, [sp, #320]
   134c4:	ldr	x0, [sp, #200]
   134c8:	str	x0, [sp, #328]
   134cc:	b	13c80 <__subtf3@@GCC_3.0+0x16e8>
   134d0:	ldr	w0, [sp, #312]
   134d4:	cmp	w0, #0x0
   134d8:	b.ge	137ec <__subtf3@@GCC_3.0+0x1254>  // b.tcont
   134dc:	ldr	w0, [sp, #312]
   134e0:	neg	w0, w0
   134e4:	str	w0, [sp, #312]
   134e8:	ldr	x0, [sp, #272]
   134ec:	str	x0, [sp, #336]
   134f0:	ldr	x0, [sp, #376]
   134f4:	str	x0, [sp, #344]
   134f8:	ldr	x0, [sp, #288]
   134fc:	cmp	x0, #0x0
   13500:	b.ne	13630 <__subtf3@@GCC_3.0+0x1098>  // b.any
   13504:	ldr	x1, [sp, #384]
   13508:	ldr	x0, [sp, #360]
   1350c:	orr	x0, x1, x0
   13510:	cmp	x0, #0x0
   13514:	b.ne	1356c <__subtf3@@GCC_3.0+0xfd4>  // b.any
   13518:	ldr	x1, [sp, #272]
   1351c:	mov	x0, #0x7fff                	// #32767
   13520:	cmp	x1, x0
   13524:	b.ne	13558 <__subtf3@@GCC_3.0+0xfc0>  // b.any
   13528:	ldr	x1, [sp, #392]
   1352c:	ldr	x0, [sp, #368]
   13530:	orr	x0, x1, x0
   13534:	cmp	x0, #0x0
   13538:	b.eq	13558 <__subtf3@@GCC_3.0+0xfc0>  // b.none
   1353c:	ldr	x0, [sp, #392]
   13540:	and	x0, x0, #0x4000000000000
   13544:	cmp	x0, #0x0
   13548:	b.ne	13558 <__subtf3@@GCC_3.0+0xfc0>  // b.any
   1354c:	ldr	w0, [sp, #356]
   13550:	orr	w0, w0, #0x1
   13554:	str	w0, [sp, #356]
   13558:	ldr	x0, [sp, #368]
   1355c:	str	x0, [sp, #328]
   13560:	ldr	x0, [sp, #392]
   13564:	str	x0, [sp, #320]
   13568:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   1356c:	ldr	w0, [sp, #312]
   13570:	sub	w0, w0, #0x1
   13574:	str	w0, [sp, #312]
   13578:	ldr	w0, [sp, #312]
   1357c:	cmp	w0, #0x0
   13580:	b.ne	135cc <__subtf3@@GCC_3.0+0x1034>  // b.any
   13584:	ldr	x1, [sp, #368]
   13588:	ldr	x0, [sp, #360]
   1358c:	sub	x0, x1, x0
   13590:	str	x0, [sp, #224]
   13594:	ldr	x1, [sp, #392]
   13598:	ldr	x0, [sp, #384]
   1359c:	sub	x1, x1, x0
   135a0:	ldr	x2, [sp, #224]
   135a4:	ldr	x0, [sp, #368]
   135a8:	cmp	x2, x0
   135ac:	cset	w0, hi  // hi = pmore
   135b0:	and	w0, w0, #0xff
   135b4:	and	x0, x0, #0xff
   135b8:	sub	x0, x1, x0
   135bc:	str	x0, [sp, #320]
   135c0:	ldr	x0, [sp, #224]
   135c4:	str	x0, [sp, #328]
   135c8:	b	13c80 <__subtf3@@GCC_3.0+0x16e8>
   135cc:	ldr	x1, [sp, #272]
   135d0:	mov	x0, #0x7fff                	// #32767
   135d4:	cmp	x1, x0
   135d8:	b.ne	136a4 <__subtf3@@GCC_3.0+0x110c>  // b.any
   135dc:	ldr	x1, [sp, #272]
   135e0:	mov	x0, #0x7fff                	// #32767
   135e4:	cmp	x1, x0
   135e8:	b.ne	1361c <__subtf3@@GCC_3.0+0x1084>  // b.any
   135ec:	ldr	x1, [sp, #392]
   135f0:	ldr	x0, [sp, #368]
   135f4:	orr	x0, x1, x0
   135f8:	cmp	x0, #0x0
   135fc:	b.eq	1361c <__subtf3@@GCC_3.0+0x1084>  // b.none
   13600:	ldr	x0, [sp, #392]
   13604:	and	x0, x0, #0x4000000000000
   13608:	cmp	x0, #0x0
   1360c:	b.ne	1361c <__subtf3@@GCC_3.0+0x1084>  // b.any
   13610:	ldr	w0, [sp, #356]
   13614:	orr	w0, w0, #0x1
   13618:	str	w0, [sp, #356]
   1361c:	ldr	x0, [sp, #368]
   13620:	str	x0, [sp, #328]
   13624:	ldr	x0, [sp, #392]
   13628:	str	x0, [sp, #320]
   1362c:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13630:	ldr	x1, [sp, #272]
   13634:	mov	x0, #0x7fff                	// #32767
   13638:	cmp	x1, x0
   1363c:	b.ne	13694 <__subtf3@@GCC_3.0+0x10fc>  // b.any
   13640:	ldr	x1, [sp, #272]
   13644:	mov	x0, #0x7fff                	// #32767
   13648:	cmp	x1, x0
   1364c:	b.ne	13680 <__subtf3@@GCC_3.0+0x10e8>  // b.any
   13650:	ldr	x1, [sp, #392]
   13654:	ldr	x0, [sp, #368]
   13658:	orr	x0, x1, x0
   1365c:	cmp	x0, #0x0
   13660:	b.eq	13680 <__subtf3@@GCC_3.0+0x10e8>  // b.none
   13664:	ldr	x0, [sp, #392]
   13668:	and	x0, x0, #0x4000000000000
   1366c:	cmp	x0, #0x0
   13670:	b.ne	13680 <__subtf3@@GCC_3.0+0x10e8>  // b.any
   13674:	ldr	w0, [sp, #356]
   13678:	orr	w0, w0, #0x1
   1367c:	str	w0, [sp, #356]
   13680:	ldr	x0, [sp, #368]
   13684:	str	x0, [sp, #328]
   13688:	ldr	x0, [sp, #392]
   1368c:	str	x0, [sp, #320]
   13690:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13694:	ldr	x0, [sp, #384]
   13698:	orr	x0, x0, #0x8000000000000
   1369c:	str	x0, [sp, #384]
   136a0:	b	136a8 <__subtf3@@GCC_3.0+0x1110>
   136a4:	nop
   136a8:	ldr	w0, [sp, #312]
   136ac:	cmp	w0, #0x74
   136b0:	b.gt	13784 <__subtf3@@GCC_3.0+0x11ec>
   136b4:	ldr	w0, [sp, #312]
   136b8:	cmp	w0, #0x3f
   136bc:	b.gt	13724 <__subtf3@@GCC_3.0+0x118c>
   136c0:	mov	w1, #0x40                  	// #64
   136c4:	ldr	w0, [sp, #312]
   136c8:	sub	w0, w1, w0
   136cc:	ldr	x1, [sp, #384]
   136d0:	lsl	x1, x1, x0
   136d4:	ldr	w0, [sp, #312]
   136d8:	ldr	x2, [sp, #360]
   136dc:	lsr	x0, x2, x0
   136e0:	orr	x1, x1, x0
   136e4:	mov	w2, #0x40                  	// #64
   136e8:	ldr	w0, [sp, #312]
   136ec:	sub	w0, w2, w0
   136f0:	ldr	x2, [sp, #360]
   136f4:	lsl	x0, x2, x0
   136f8:	cmp	x0, #0x0
   136fc:	cset	w0, ne  // ne = any
   13700:	and	w0, w0, #0xff
   13704:	sxtw	x0, w0
   13708:	orr	x0, x1, x0
   1370c:	str	x0, [sp, #360]
   13710:	ldr	w0, [sp, #312]
   13714:	ldr	x1, [sp, #384]
   13718:	lsr	x0, x1, x0
   1371c:	str	x0, [sp, #384]
   13720:	b	137a4 <__subtf3@@GCC_3.0+0x120c>
   13724:	ldr	w0, [sp, #312]
   13728:	sub	w0, w0, #0x40
   1372c:	ldr	x1, [sp, #384]
   13730:	lsr	x1, x1, x0
   13734:	ldr	w0, [sp, #312]
   13738:	cmp	w0, #0x40
   1373c:	b.eq	13758 <__subtf3@@GCC_3.0+0x11c0>  // b.none
   13740:	mov	w2, #0x80                  	// #128
   13744:	ldr	w0, [sp, #312]
   13748:	sub	w0, w2, w0
   1374c:	ldr	x2, [sp, #384]
   13750:	lsl	x0, x2, x0
   13754:	b	1375c <__subtf3@@GCC_3.0+0x11c4>
   13758:	mov	x0, #0x0                   	// #0
   1375c:	ldr	x2, [sp, #360]
   13760:	orr	x0, x0, x2
   13764:	cmp	x0, #0x0
   13768:	cset	w0, ne  // ne = any
   1376c:	and	w0, w0, #0xff
   13770:	and	x0, x0, #0xff
   13774:	orr	x0, x1, x0
   13778:	str	x0, [sp, #360]
   1377c:	str	xzr, [sp, #384]
   13780:	b	137a4 <__subtf3@@GCC_3.0+0x120c>
   13784:	ldr	x1, [sp, #384]
   13788:	ldr	x0, [sp, #360]
   1378c:	orr	x0, x1, x0
   13790:	cmp	x0, #0x0
   13794:	b.eq	137a4 <__subtf3@@GCC_3.0+0x120c>  // b.none
   13798:	mov	x0, #0x1                   	// #1
   1379c:	str	x0, [sp, #360]
   137a0:	str	xzr, [sp, #384]
   137a4:	ldr	x1, [sp, #368]
   137a8:	ldr	x0, [sp, #360]
   137ac:	sub	x0, x1, x0
   137b0:	str	x0, [sp, #216]
   137b4:	ldr	x1, [sp, #392]
   137b8:	ldr	x0, [sp, #384]
   137bc:	sub	x1, x1, x0
   137c0:	ldr	x2, [sp, #216]
   137c4:	ldr	x0, [sp, #368]
   137c8:	cmp	x2, x0
   137cc:	cset	w0, hi  // hi = pmore
   137d0:	and	w0, w0, #0xff
   137d4:	and	x0, x0, #0xff
   137d8:	sub	x0, x1, x0
   137dc:	str	x0, [sp, #320]
   137e0:	ldr	x0, [sp, #216]
   137e4:	str	x0, [sp, #328]
   137e8:	b	13c80 <__subtf3@@GCC_3.0+0x16e8>
   137ec:	ldr	x0, [sp, #288]
   137f0:	add	x0, x0, #0x1
   137f4:	and	x0, x0, #0x7ffe
   137f8:	cmp	x0, #0x0
   137fc:	b.ne	13b94 <__subtf3@@GCC_3.0+0x15fc>  // b.any
   13800:	ldr	x0, [sp, #288]
   13804:	cmp	x0, #0x0
   13808:	b.ne	13984 <__subtf3@@GCC_3.0+0x13ec>  // b.any
   1380c:	str	xzr, [sp, #336]
   13810:	ldr	x1, [sp, #384]
   13814:	ldr	x0, [sp, #360]
   13818:	orr	x0, x1, x0
   1381c:	cmp	x0, #0x0
   13820:	b.ne	13874 <__subtf3@@GCC_3.0+0x12dc>  // b.any
   13824:	ldr	x0, [sp, #368]
   13828:	str	x0, [sp, #328]
   1382c:	ldr	x0, [sp, #392]
   13830:	str	x0, [sp, #320]
   13834:	ldr	x1, [sp, #392]
   13838:	ldr	x0, [sp, #368]
   1383c:	orr	x0, x1, x0
   13840:	cmp	x0, #0x0
   13844:	b.ne	13868 <__subtf3@@GCC_3.0+0x12d0>  // b.any
   13848:	ldr	x0, [sp, #296]
   1384c:	and	x0, x0, #0xc00000
   13850:	cmp	x0, #0x800, lsl #12
   13854:	cset	w0, eq  // eq = none
   13858:	and	w0, w0, #0xff
   1385c:	and	x0, x0, #0xff
   13860:	str	x0, [sp, #344]
   13864:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13868:	ldr	x0, [sp, #376]
   1386c:	str	x0, [sp, #344]
   13870:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13874:	ldr	x1, [sp, #392]
   13878:	ldr	x0, [sp, #368]
   1387c:	orr	x0, x1, x0
   13880:	cmp	x0, #0x0
   13884:	b.ne	138a4 <__subtf3@@GCC_3.0+0x130c>  // b.any
   13888:	ldr	x0, [sp, #360]
   1388c:	str	x0, [sp, #328]
   13890:	ldr	x0, [sp, #384]
   13894:	str	x0, [sp, #320]
   13898:	ldr	x0, [sp, #280]
   1389c:	str	x0, [sp, #344]
   138a0:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   138a4:	ldr	x1, [sp, #360]
   138a8:	ldr	x0, [sp, #368]
   138ac:	sub	x0, x1, x0
   138b0:	str	x0, [sp, #240]
   138b4:	ldr	x1, [sp, #384]
   138b8:	ldr	x0, [sp, #392]
   138bc:	sub	x1, x1, x0
   138c0:	ldr	x2, [sp, #240]
   138c4:	ldr	x0, [sp, #360]
   138c8:	cmp	x2, x0
   138cc:	cset	w0, hi  // hi = pmore
   138d0:	and	w0, w0, #0xff
   138d4:	and	x0, x0, #0xff
   138d8:	sub	x0, x1, x0
   138dc:	str	x0, [sp, #320]
   138e0:	ldr	x0, [sp, #240]
   138e4:	str	x0, [sp, #328]
   138e8:	ldr	x0, [sp, #280]
   138ec:	str	x0, [sp, #344]
   138f0:	ldr	x0, [sp, #320]
   138f4:	and	x0, x0, #0x8000000000000
   138f8:	cmp	x0, #0x0
   138fc:	b.eq	13950 <__subtf3@@GCC_3.0+0x13b8>  // b.none
   13900:	ldr	x1, [sp, #368]
   13904:	ldr	x0, [sp, #360]
   13908:	sub	x0, x1, x0
   1390c:	str	x0, [sp, #232]
   13910:	ldr	x1, [sp, #392]
   13914:	ldr	x0, [sp, #384]
   13918:	sub	x1, x1, x0
   1391c:	ldr	x2, [sp, #232]
   13920:	ldr	x0, [sp, #368]
   13924:	cmp	x2, x0
   13928:	cset	w0, hi  // hi = pmore
   1392c:	and	w0, w0, #0xff
   13930:	and	x0, x0, #0xff
   13934:	sub	x0, x1, x0
   13938:	str	x0, [sp, #320]
   1393c:	ldr	x0, [sp, #232]
   13940:	str	x0, [sp, #328]
   13944:	ldr	x0, [sp, #376]
   13948:	str	x0, [sp, #344]
   1394c:	b	13e74 <__subtf3@@GCC_3.0+0x18dc>
   13950:	ldr	x1, [sp, #320]
   13954:	ldr	x0, [sp, #328]
   13958:	orr	x0, x1, x0
   1395c:	cmp	x0, #0x0
   13960:	b.ne	13e74 <__subtf3@@GCC_3.0+0x18dc>  // b.any
   13964:	ldr	x0, [sp, #296]
   13968:	and	x0, x0, #0xc00000
   1396c:	cmp	x0, #0x800, lsl #12
   13970:	cset	w0, eq  // eq = none
   13974:	and	w0, w0, #0xff
   13978:	and	x0, x0, #0xff
   1397c:	str	x0, [sp, #344]
   13980:	b	13e74 <__subtf3@@GCC_3.0+0x18dc>
   13984:	ldr	x1, [sp, #288]
   13988:	mov	x0, #0x7fff                	// #32767
   1398c:	cmp	x1, x0
   13990:	b.ne	139c4 <__subtf3@@GCC_3.0+0x142c>  // b.any
   13994:	ldr	x1, [sp, #384]
   13998:	ldr	x0, [sp, #360]
   1399c:	orr	x0, x1, x0
   139a0:	cmp	x0, #0x0
   139a4:	b.eq	139c4 <__subtf3@@GCC_3.0+0x142c>  // b.none
   139a8:	ldr	x0, [sp, #384]
   139ac:	and	x0, x0, #0x4000000000000
   139b0:	cmp	x0, #0x0
   139b4:	b.ne	139c4 <__subtf3@@GCC_3.0+0x142c>  // b.any
   139b8:	ldr	w0, [sp, #356]
   139bc:	orr	w0, w0, #0x1
   139c0:	str	w0, [sp, #356]
   139c4:	ldr	x1, [sp, #272]
   139c8:	mov	x0, #0x7fff                	// #32767
   139cc:	cmp	x1, x0
   139d0:	b.ne	13a04 <__subtf3@@GCC_3.0+0x146c>  // b.any
   139d4:	ldr	x1, [sp, #392]
   139d8:	ldr	x0, [sp, #368]
   139dc:	orr	x0, x1, x0
   139e0:	cmp	x0, #0x0
   139e4:	b.eq	13a04 <__subtf3@@GCC_3.0+0x146c>  // b.none
   139e8:	ldr	x0, [sp, #392]
   139ec:	and	x0, x0, #0x4000000000000
   139f0:	cmp	x0, #0x0
   139f4:	b.ne	13a04 <__subtf3@@GCC_3.0+0x146c>  // b.any
   139f8:	ldr	w0, [sp, #356]
   139fc:	orr	w0, w0, #0x1
   13a00:	str	w0, [sp, #356]
   13a04:	mov	x0, #0x7fff                	// #32767
   13a08:	str	x0, [sp, #336]
   13a0c:	ldr	x1, [sp, #384]
   13a10:	ldr	x0, [sp, #360]
   13a14:	orr	x0, x1, x0
   13a18:	cmp	x0, #0x0
   13a1c:	b.ne	13a98 <__subtf3@@GCC_3.0+0x1500>  // b.any
   13a20:	ldr	x1, [sp, #392]
   13a24:	ldr	x0, [sp, #368]
   13a28:	orr	x0, x1, x0
   13a2c:	cmp	x0, #0x0
   13a30:	b.ne	13a7c <__subtf3@@GCC_3.0+0x14e4>  // b.any
   13a34:	str	xzr, [sp, #344]
   13a38:	mov	x0, #0xffffffffffffffff    	// #-1
   13a3c:	str	x0, [sp, #328]
   13a40:	mov	x0, #0xffffffffffff        	// #281474976710655
   13a44:	str	x0, [sp, #320]
   13a48:	ldr	x0, [sp, #320]
   13a4c:	lsl	x1, x0, #3
   13a50:	ldr	x0, [sp, #328]
   13a54:	lsr	x0, x0, #61
   13a58:	orr	x0, x1, x0
   13a5c:	str	x0, [sp, #320]
   13a60:	ldr	x0, [sp, #328]
   13a64:	lsl	x0, x0, #3
   13a68:	str	x0, [sp, #328]
   13a6c:	ldr	w0, [sp, #356]
   13a70:	orr	w0, w0, #0x1
   13a74:	str	w0, [sp, #356]
   13a78:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13a7c:	ldr	x0, [sp, #376]
   13a80:	str	x0, [sp, #344]
   13a84:	ldr	x0, [sp, #368]
   13a88:	str	x0, [sp, #328]
   13a8c:	ldr	x0, [sp, #392]
   13a90:	str	x0, [sp, #320]
   13a94:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13a98:	ldr	x1, [sp, #392]
   13a9c:	ldr	x0, [sp, #368]
   13aa0:	orr	x0, x1, x0
   13aa4:	cmp	x0, #0x0
   13aa8:	b.ne	13ac8 <__subtf3@@GCC_3.0+0x1530>  // b.any
   13aac:	ldr	x0, [sp, #280]
   13ab0:	str	x0, [sp, #344]
   13ab4:	ldr	x0, [sp, #360]
   13ab8:	str	x0, [sp, #328]
   13abc:	ldr	x0, [sp, #384]
   13ac0:	str	x0, [sp, #320]
   13ac4:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13ac8:	ldr	x0, [sp, #360]
   13acc:	lsr	x1, x0, #3
   13ad0:	ldr	x0, [sp, #384]
   13ad4:	lsl	x0, x0, #61
   13ad8:	orr	x0, x1, x0
   13adc:	str	x0, [sp, #360]
   13ae0:	ldr	x0, [sp, #384]
   13ae4:	lsr	x0, x0, #3
   13ae8:	str	x0, [sp, #384]
   13aec:	ldr	x0, [sp, #368]
   13af0:	lsr	x1, x0, #3
   13af4:	ldr	x0, [sp, #392]
   13af8:	lsl	x0, x0, #61
   13afc:	orr	x0, x1, x0
   13b00:	str	x0, [sp, #368]
   13b04:	ldr	x0, [sp, #392]
   13b08:	lsr	x0, x0, #3
   13b0c:	str	x0, [sp, #392]
   13b10:	ldr	x0, [sp, #384]
   13b14:	and	x0, x0, #0x800000000000
   13b18:	cmp	x0, #0x0
   13b1c:	b.eq	13b4c <__subtf3@@GCC_3.0+0x15b4>  // b.none
   13b20:	ldr	x0, [sp, #392]
   13b24:	and	x0, x0, #0x800000000000
   13b28:	cmp	x0, #0x0
   13b2c:	b.ne	13b4c <__subtf3@@GCC_3.0+0x15b4>  // b.any
   13b30:	ldr	x0, [sp, #376]
   13b34:	str	x0, [sp, #344]
   13b38:	ldr	x0, [sp, #368]
   13b3c:	str	x0, [sp, #328]
   13b40:	ldr	x0, [sp, #392]
   13b44:	str	x0, [sp, #320]
   13b48:	b	13b64 <__subtf3@@GCC_3.0+0x15cc>
   13b4c:	ldr	x0, [sp, #280]
   13b50:	str	x0, [sp, #344]
   13b54:	ldr	x0, [sp, #360]
   13b58:	str	x0, [sp, #328]
   13b5c:	ldr	x0, [sp, #384]
   13b60:	str	x0, [sp, #320]
   13b64:	mov	x0, #0x3                   	// #3
   13b68:	str	x0, [sp, #248]
   13b6c:	ldr	x0, [sp, #320]
   13b70:	lsl	x1, x0, #3
   13b74:	ldr	x0, [sp, #328]
   13b78:	lsr	x0, x0, #61
   13b7c:	orr	x0, x1, x0
   13b80:	str	x0, [sp, #320]
   13b84:	ldr	x0, [sp, #328]
   13b88:	lsl	x0, x0, #3
   13b8c:	str	x0, [sp, #328]
   13b90:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13b94:	ldr	x0, [sp, #288]
   13b98:	str	x0, [sp, #336]
   13b9c:	ldr	x1, [sp, #360]
   13ba0:	ldr	x0, [sp, #368]
   13ba4:	sub	x0, x1, x0
   13ba8:	str	x0, [sp, #264]
   13bac:	ldr	x1, [sp, #384]
   13bb0:	ldr	x0, [sp, #392]
   13bb4:	sub	x1, x1, x0
   13bb8:	ldr	x2, [sp, #264]
   13bbc:	ldr	x0, [sp, #360]
   13bc0:	cmp	x2, x0
   13bc4:	cset	w0, hi  // hi = pmore
   13bc8:	and	w0, w0, #0xff
   13bcc:	and	x0, x0, #0xff
   13bd0:	sub	x0, x1, x0
   13bd4:	str	x0, [sp, #320]
   13bd8:	ldr	x0, [sp, #264]
   13bdc:	str	x0, [sp, #328]
   13be0:	ldr	x0, [sp, #280]
   13be4:	str	x0, [sp, #344]
   13be8:	ldr	x0, [sp, #320]
   13bec:	and	x0, x0, #0x8000000000000
   13bf0:	cmp	x0, #0x0
   13bf4:	b.eq	13c48 <__subtf3@@GCC_3.0+0x16b0>  // b.none
   13bf8:	ldr	x1, [sp, #368]
   13bfc:	ldr	x0, [sp, #360]
   13c00:	sub	x0, x1, x0
   13c04:	str	x0, [sp, #256]
   13c08:	ldr	x1, [sp, #392]
   13c0c:	ldr	x0, [sp, #384]
   13c10:	sub	x1, x1, x0
   13c14:	ldr	x2, [sp, #256]
   13c18:	ldr	x0, [sp, #368]
   13c1c:	cmp	x2, x0
   13c20:	cset	w0, hi  // hi = pmore
   13c24:	and	w0, w0, #0xff
   13c28:	and	x0, x0, #0xff
   13c2c:	sub	x0, x1, x0
   13c30:	str	x0, [sp, #320]
   13c34:	ldr	x0, [sp, #256]
   13c38:	str	x0, [sp, #328]
   13c3c:	ldr	x0, [sp, #376]
   13c40:	str	x0, [sp, #344]
   13c44:	b	13ca0 <__subtf3@@GCC_3.0+0x1708>
   13c48:	ldr	x1, [sp, #320]
   13c4c:	ldr	x0, [sp, #328]
   13c50:	orr	x0, x1, x0
   13c54:	cmp	x0, #0x0
   13c58:	b.ne	13ca0 <__subtf3@@GCC_3.0+0x1708>  // b.any
   13c5c:	str	xzr, [sp, #336]
   13c60:	ldr	x0, [sp, #296]
   13c64:	and	x0, x0, #0xc00000
   13c68:	cmp	x0, #0x800, lsl #12
   13c6c:	cset	w0, eq  // eq = none
   13c70:	and	w0, w0, #0xff
   13c74:	and	x0, x0, #0xff
   13c78:	str	x0, [sp, #344]
   13c7c:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13c80:	ldr	x0, [sp, #320]
   13c84:	and	x0, x0, #0x8000000000000
   13c88:	cmp	x0, #0x0
   13c8c:	b.eq	13e7c <__subtf3@@GCC_3.0+0x18e4>  // b.none
   13c90:	ldr	x0, [sp, #320]
   13c94:	and	x0, x0, #0x7ffffffffffff
   13c98:	str	x0, [sp, #320]
   13c9c:	b	13ca4 <__subtf3@@GCC_3.0+0x170c>
   13ca0:	nop
   13ca4:	ldr	x0, [sp, #320]
   13ca8:	cmp	x0, #0x0
   13cac:	b.eq	13cc0 <__subtf3@@GCC_3.0+0x1728>  // b.none
   13cb0:	ldr	x0, [sp, #320]
   13cb4:	clz	x0, x0
   13cb8:	str	w0, [sp, #308]
   13cbc:	b	13cd8 <__subtf3@@GCC_3.0+0x1740>
   13cc0:	ldr	x0, [sp, #328]
   13cc4:	clz	x0, x0
   13cc8:	str	w0, [sp, #308]
   13ccc:	ldr	w0, [sp, #308]
   13cd0:	add	w0, w0, #0x40
   13cd4:	str	w0, [sp, #308]
   13cd8:	ldr	w0, [sp, #308]
   13cdc:	sub	w0, w0, #0xc
   13ce0:	str	w0, [sp, #308]
   13ce4:	ldr	w0, [sp, #308]
   13ce8:	cmp	w0, #0x3f
   13cec:	b.gt	13d2c <__subtf3@@GCC_3.0+0x1794>
   13cf0:	ldr	w0, [sp, #308]
   13cf4:	ldr	x1, [sp, #320]
   13cf8:	lsl	x1, x1, x0
   13cfc:	mov	w2, #0x40                  	// #64
   13d00:	ldr	w0, [sp, #308]
   13d04:	sub	w0, w2, w0
   13d08:	ldr	x2, [sp, #328]
   13d0c:	lsr	x0, x2, x0
   13d10:	orr	x0, x1, x0
   13d14:	str	x0, [sp, #320]
   13d18:	ldr	w0, [sp, #308]
   13d1c:	ldr	x1, [sp, #328]
   13d20:	lsl	x0, x1, x0
   13d24:	str	x0, [sp, #328]
   13d28:	b	13d44 <__subtf3@@GCC_3.0+0x17ac>
   13d2c:	ldr	w0, [sp, #308]
   13d30:	sub	w0, w0, #0x40
   13d34:	ldr	x1, [sp, #328]
   13d38:	lsl	x0, x1, x0
   13d3c:	str	x0, [sp, #320]
   13d40:	str	xzr, [sp, #328]
   13d44:	ldrsw	x0, [sp, #308]
   13d48:	ldr	x1, [sp, #336]
   13d4c:	cmp	x1, x0
   13d50:	b.gt	13e3c <__subtf3@@GCC_3.0+0x18a4>
   13d54:	ldr	w0, [sp, #308]
   13d58:	ldr	x1, [sp, #336]
   13d5c:	sub	w0, w0, w1
   13d60:	add	w0, w0, #0x1
   13d64:	str	w0, [sp, #308]
   13d68:	ldr	w0, [sp, #308]
   13d6c:	cmp	w0, #0x3f
   13d70:	b.gt	13dd8 <__subtf3@@GCC_3.0+0x1840>
   13d74:	mov	w1, #0x40                  	// #64
   13d78:	ldr	w0, [sp, #308]
   13d7c:	sub	w0, w1, w0
   13d80:	ldr	x1, [sp, #320]
   13d84:	lsl	x1, x1, x0
   13d88:	ldr	w0, [sp, #308]
   13d8c:	ldr	x2, [sp, #328]
   13d90:	lsr	x0, x2, x0
   13d94:	orr	x1, x1, x0
   13d98:	mov	w2, #0x40                  	// #64
   13d9c:	ldr	w0, [sp, #308]
   13da0:	sub	w0, w2, w0
   13da4:	ldr	x2, [sp, #328]
   13da8:	lsl	x0, x2, x0
   13dac:	cmp	x0, #0x0
   13db0:	cset	w0, ne  // ne = any
   13db4:	and	w0, w0, #0xff
   13db8:	sxtw	x0, w0
   13dbc:	orr	x0, x1, x0
   13dc0:	str	x0, [sp, #328]
   13dc4:	ldr	w0, [sp, #308]
   13dc8:	ldr	x1, [sp, #320]
   13dcc:	lsr	x0, x1, x0
   13dd0:	str	x0, [sp, #320]
   13dd4:	b	13e34 <__subtf3@@GCC_3.0+0x189c>
   13dd8:	ldr	w0, [sp, #308]
   13ddc:	sub	w0, w0, #0x40
   13de0:	ldr	x1, [sp, #320]
   13de4:	lsr	x1, x1, x0
   13de8:	ldr	w0, [sp, #308]
   13dec:	cmp	w0, #0x40
   13df0:	b.eq	13e0c <__subtf3@@GCC_3.0+0x1874>  // b.none
   13df4:	mov	w2, #0x80                  	// #128
   13df8:	ldr	w0, [sp, #308]
   13dfc:	sub	w0, w2, w0
   13e00:	ldr	x2, [sp, #320]
   13e04:	lsl	x0, x2, x0
   13e08:	b	13e10 <__subtf3@@GCC_3.0+0x1878>
   13e0c:	mov	x0, #0x0                   	// #0
   13e10:	ldr	x2, [sp, #328]
   13e14:	orr	x0, x0, x2
   13e18:	cmp	x0, #0x0
   13e1c:	cset	w0, ne  // ne = any
   13e20:	and	w0, w0, #0xff
   13e24:	and	x0, x0, #0xff
   13e28:	orr	x0, x1, x0
   13e2c:	str	x0, [sp, #328]
   13e30:	str	xzr, [sp, #320]
   13e34:	str	xzr, [sp, #336]
   13e38:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13e3c:	ldrsw	x0, [sp, #308]
   13e40:	ldr	x1, [sp, #336]
   13e44:	sub	x0, x1, x0
   13e48:	str	x0, [sp, #336]
   13e4c:	ldr	x0, [sp, #320]
   13e50:	and	x0, x0, #0xfff7ffffffffffff
   13e54:	str	x0, [sp, #320]
   13e58:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13e5c:	nop
   13e60:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13e64:	nop
   13e68:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13e6c:	nop
   13e70:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13e74:	nop
   13e78:	b	13e80 <__subtf3@@GCC_3.0+0x18e8>
   13e7c:	nop
   13e80:	ldr	x0, [sp, #336]
   13e84:	cmp	x0, #0x0
   13e88:	b.ne	13ea8 <__subtf3@@GCC_3.0+0x1910>  // b.any
   13e8c:	ldr	x1, [sp, #320]
   13e90:	ldr	x0, [sp, #328]
   13e94:	orr	x0, x1, x0
   13e98:	cmp	x0, #0x0
   13e9c:	b.eq	13ea8 <__subtf3@@GCC_3.0+0x1910>  // b.none
   13ea0:	mov	w0, #0x1                   	// #1
   13ea4:	b	13eac <__subtf3@@GCC_3.0+0x1914>
   13ea8:	mov	w0, #0x0                   	// #0
   13eac:	str	w0, [sp, #148]
   13eb0:	ldr	x0, [sp, #328]
   13eb4:	and	x0, x0, #0x7
   13eb8:	cmp	x0, #0x0
   13ebc:	b.eq	14004 <__subtf3@@GCC_3.0+0x1a6c>  // b.none
   13ec0:	ldr	w0, [sp, #356]
   13ec4:	orr	w0, w0, #0x10
   13ec8:	str	w0, [sp, #356]
   13ecc:	ldr	x0, [sp, #296]
   13ed0:	and	x0, x0, #0xc00000
   13ed4:	cmp	x0, #0xc00, lsl #12
   13ed8:	b.eq	1400c <__subtf3@@GCC_3.0+0x1a74>  // b.none
   13edc:	cmp	x0, #0xc00, lsl #12
   13ee0:	b.hi	14010 <__subtf3@@GCC_3.0+0x1a78>  // b.pmore
   13ee4:	cmp	x0, #0x800, lsl #12
   13ee8:	b.eq	13fac <__subtf3@@GCC_3.0+0x1a14>  // b.none
   13eec:	cmp	x0, #0x800, lsl #12
   13ef0:	b.hi	14010 <__subtf3@@GCC_3.0+0x1a78>  // b.pmore
   13ef4:	cmp	x0, #0x0
   13ef8:	b.eq	13f08 <__subtf3@@GCC_3.0+0x1970>  // b.none
   13efc:	cmp	x0, #0x400, lsl #12
   13f00:	b.eq	13f54 <__subtf3@@GCC_3.0+0x19bc>  // b.none
   13f04:	b	14010 <__subtf3@@GCC_3.0+0x1a78>
   13f08:	ldr	x0, [sp, #328]
   13f0c:	and	x0, x0, #0xf
   13f10:	cmp	x0, #0x4
   13f14:	b.eq	1400c <__subtf3@@GCC_3.0+0x1a74>  // b.none
   13f18:	ldr	x0, [sp, #328]
   13f1c:	add	x0, x0, #0x4
   13f20:	str	x0, [sp, #120]
   13f24:	ldr	x1, [sp, #120]
   13f28:	ldr	x0, [sp, #328]
   13f2c:	cmp	x1, x0
   13f30:	cset	w0, cc  // cc = lo, ul, last
   13f34:	and	w0, w0, #0xff
   13f38:	and	x0, x0, #0xff
   13f3c:	ldr	x1, [sp, #320]
   13f40:	add	x0, x1, x0
   13f44:	str	x0, [sp, #320]
   13f48:	ldr	x0, [sp, #120]
   13f4c:	str	x0, [sp, #328]
   13f50:	b	1400c <__subtf3@@GCC_3.0+0x1a74>
   13f54:	ldr	x0, [sp, #344]
   13f58:	cmp	x0, #0x0
   13f5c:	b.ne	1400c <__subtf3@@GCC_3.0+0x1a74>  // b.any
   13f60:	ldr	x0, [sp, #328]
   13f64:	and	x0, x0, #0x7
   13f68:	cmp	x0, #0x0
   13f6c:	b.eq	1400c <__subtf3@@GCC_3.0+0x1a74>  // b.none
   13f70:	ldr	x0, [sp, #328]
   13f74:	add	x0, x0, #0x8
   13f78:	str	x0, [sp, #128]
   13f7c:	ldr	x1, [sp, #128]
   13f80:	ldr	x0, [sp, #328]
   13f84:	cmp	x1, x0
   13f88:	cset	w0, cc  // cc = lo, ul, last
   13f8c:	and	w0, w0, #0xff
   13f90:	and	x0, x0, #0xff
   13f94:	ldr	x1, [sp, #320]
   13f98:	add	x0, x1, x0
   13f9c:	str	x0, [sp, #320]
   13fa0:	ldr	x0, [sp, #128]
   13fa4:	str	x0, [sp, #328]
   13fa8:	b	1400c <__subtf3@@GCC_3.0+0x1a74>
   13fac:	ldr	x0, [sp, #344]
   13fb0:	cmp	x0, #0x0
   13fb4:	b.eq	1400c <__subtf3@@GCC_3.0+0x1a74>  // b.none
   13fb8:	ldr	x0, [sp, #328]
   13fbc:	and	x0, x0, #0x7
   13fc0:	cmp	x0, #0x0
   13fc4:	b.eq	1400c <__subtf3@@GCC_3.0+0x1a74>  // b.none
   13fc8:	ldr	x0, [sp, #328]
   13fcc:	add	x0, x0, #0x8
   13fd0:	str	x0, [sp, #136]
   13fd4:	ldr	x1, [sp, #136]
   13fd8:	ldr	x0, [sp, #328]
   13fdc:	cmp	x1, x0
   13fe0:	cset	w0, cc  // cc = lo, ul, last
   13fe4:	and	w0, w0, #0xff
   13fe8:	and	x0, x0, #0xff
   13fec:	ldr	x1, [sp, #320]
   13ff0:	add	x0, x1, x0
   13ff4:	str	x0, [sp, #320]
   13ff8:	ldr	x0, [sp, #136]
   13ffc:	str	x0, [sp, #328]
   14000:	b	1400c <__subtf3@@GCC_3.0+0x1a74>
   14004:	nop
   14008:	b	14010 <__subtf3@@GCC_3.0+0x1a78>
   1400c:	nop
   14010:	ldr	w0, [sp, #148]
   14014:	cmp	w0, #0x0
   14018:	b.eq	14048 <__subtf3@@GCC_3.0+0x1ab0>  // b.none
   1401c:	ldr	w0, [sp, #356]
   14020:	and	w0, w0, #0x10
   14024:	cmp	w0, #0x0
   14028:	b.ne	1403c <__subtf3@@GCC_3.0+0x1aa4>  // b.any
   1402c:	ldr	x0, [sp, #296]
   14030:	and	x0, x0, #0x800
   14034:	cmp	x0, #0x0
   14038:	b.eq	14048 <__subtf3@@GCC_3.0+0x1ab0>  // b.none
   1403c:	ldr	w0, [sp, #356]
   14040:	orr	w0, w0, #0x8
   14044:	str	w0, [sp, #356]
   14048:	ldr	x0, [sp, #320]
   1404c:	and	x0, x0, #0x8000000000000
   14050:	cmp	x0, #0x0
   14054:	b.eq	1410c <__subtf3@@GCC_3.0+0x1b74>  // b.none
   14058:	ldr	x0, [sp, #320]
   1405c:	and	x0, x0, #0xfff7ffffffffffff
   14060:	str	x0, [sp, #320]
   14064:	ldr	x0, [sp, #336]
   14068:	add	x0, x0, #0x1
   1406c:	str	x0, [sp, #336]
   14070:	ldr	x1, [sp, #336]
   14074:	mov	x0, #0x7fff                	// #32767
   14078:	cmp	x1, x0
   1407c:	b.ne	1410c <__subtf3@@GCC_3.0+0x1b74>  // b.any
   14080:	ldr	x0, [sp, #296]
   14084:	and	x0, x0, #0xc00000
   14088:	cmp	x0, #0x0
   1408c:	b.eq	140c8 <__subtf3@@GCC_3.0+0x1b30>  // b.none
   14090:	ldr	x0, [sp, #296]
   14094:	and	x0, x0, #0xc00000
   14098:	cmp	x0, #0x400, lsl #12
   1409c:	b.ne	140ac <__subtf3@@GCC_3.0+0x1b14>  // b.any
   140a0:	ldr	x0, [sp, #344]
   140a4:	cmp	x0, #0x0
   140a8:	b.eq	140c8 <__subtf3@@GCC_3.0+0x1b30>  // b.none
   140ac:	ldr	x0, [sp, #296]
   140b0:	and	x0, x0, #0xc00000
   140b4:	cmp	x0, #0x800, lsl #12
   140b8:	b.ne	140dc <__subtf3@@GCC_3.0+0x1b44>  // b.any
   140bc:	ldr	x0, [sp, #344]
   140c0:	cmp	x0, #0x0
   140c4:	b.eq	140dc <__subtf3@@GCC_3.0+0x1b44>  // b.none
   140c8:	mov	x0, #0x7fff                	// #32767
   140cc:	str	x0, [sp, #336]
   140d0:	str	xzr, [sp, #328]
   140d4:	str	xzr, [sp, #320]
   140d8:	b	140f4 <__subtf3@@GCC_3.0+0x1b5c>
   140dc:	mov	x0, #0x7ffe                	// #32766
   140e0:	str	x0, [sp, #336]
   140e4:	mov	x0, #0xffffffffffffffff    	// #-1
   140e8:	str	x0, [sp, #328]
   140ec:	mov	x0, #0xffffffffffffffff    	// #-1
   140f0:	str	x0, [sp, #320]
   140f4:	ldr	w0, [sp, #356]
   140f8:	orr	w0, w0, #0x10
   140fc:	str	w0, [sp, #356]
   14100:	ldr	w0, [sp, #356]
   14104:	orr	w0, w0, #0x4
   14108:	str	w0, [sp, #356]
   1410c:	ldr	x0, [sp, #328]
   14110:	lsr	x1, x0, #3
   14114:	ldr	x0, [sp, #320]
   14118:	lsl	x0, x0, #61
   1411c:	orr	x0, x1, x0
   14120:	str	x0, [sp, #328]
   14124:	ldr	x0, [sp, #320]
   14128:	lsr	x0, x0, #3
   1412c:	str	x0, [sp, #320]
   14130:	ldr	x1, [sp, #336]
   14134:	mov	x0, #0x7fff                	// #32767
   14138:	cmp	x1, x0
   1413c:	b.ne	14160 <__subtf3@@GCC_3.0+0x1bc8>  // b.any
   14140:	ldr	x1, [sp, #320]
   14144:	ldr	x0, [sp, #328]
   14148:	orr	x0, x1, x0
   1414c:	cmp	x0, #0x0
   14150:	b.eq	14160 <__subtf3@@GCC_3.0+0x1bc8>  // b.none
   14154:	ldr	x0, [sp, #320]
   14158:	orr	x0, x0, #0x800000000000
   1415c:	str	x0, [sp, #320]
   14160:	ldr	x0, [sp, #328]
   14164:	str	x0, [sp, #48]
   14168:	ldr	x0, [sp, #320]
   1416c:	and	x1, x0, #0xffffffffffff
   14170:	ldr	x0, [sp, #56]
   14174:	bfxil	x0, x1, #0, #48
   14178:	str	x0, [sp, #56]
   1417c:	ldr	x0, [sp, #336]
   14180:	and	w0, w0, #0x7fff
   14184:	and	w1, w0, #0xffff
   14188:	ldrh	w0, [sp, #62]
   1418c:	bfxil	w0, w1, #0, #15
   14190:	strh	w0, [sp, #62]
   14194:	ldr	x0, [sp, #344]
   14198:	and	w0, w0, #0x1
   1419c:	and	w1, w0, #0xff
   141a0:	ldrb	w0, [sp, #63]
   141a4:	bfi	w0, w1, #7, #1
   141a8:	strb	w0, [sp, #63]
   141ac:	ldr	q0, [sp, #48]
   141b0:	str	q0, [sp, #96]
   141b4:	ldrsw	x0, [sp, #356]
   141b8:	cmp	x0, #0x0
   141bc:	b.eq	141c8 <__subtf3@@GCC_3.0+0x1c30>  // b.none
   141c0:	ldr	w0, [sp, #356]
   141c4:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   141c8:	ldr	q0, [sp, #96]
   141cc:	ldp	x29, x30, [sp], #400
   141d0:	ret

00000000000141d4 <__unordtf2@@GCC_4.5.0>:
   141d4:	stp	x29, x30, [sp, #-176]!
   141d8:	mov	x29, sp
   141dc:	str	q0, [sp, #32]
   141e0:	str	q1, [sp, #16]
   141e4:	str	wzr, [sp, #172]
   141e8:	str	xzr, [sp, #152]
   141ec:	mrs	x0, fpcr
   141f0:	str	x0, [sp, #152]
   141f4:	ldr	q0, [sp, #32]
   141f8:	str	q0, [sp, #64]
   141fc:	ldr	x0, [sp, #64]
   14200:	str	x0, [sp, #144]
   14204:	ldr	x0, [sp, #72]
   14208:	ubfx	x0, x0, #0, #48
   1420c:	str	x0, [sp, #136]
   14210:	ldrh	w0, [sp, #78]
   14214:	ubfx	x0, x0, #0, #15
   14218:	and	w0, w0, #0xffff
   1421c:	and	x0, x0, #0xffff
   14220:	str	x0, [sp, #128]
   14224:	ldrb	w0, [sp, #79]
   14228:	ubfx	x0, x0, #7, #1
   1422c:	and	w0, w0, #0xff
   14230:	and	x0, x0, #0xff
   14234:	str	x0, [sp, #120]
   14238:	ldr	q0, [sp, #16]
   1423c:	str	q0, [sp, #48]
   14240:	ldr	x0, [sp, #48]
   14244:	str	x0, [sp, #112]
   14248:	ldr	x0, [sp, #56]
   1424c:	ubfx	x0, x0, #0, #48
   14250:	str	x0, [sp, #104]
   14254:	ldrh	w0, [sp, #62]
   14258:	ubfx	x0, x0, #0, #15
   1425c:	and	w0, w0, #0xffff
   14260:	and	x0, x0, #0xffff
   14264:	str	x0, [sp, #96]
   14268:	ldrb	w0, [sp, #63]
   1426c:	ubfx	x0, x0, #7, #1
   14270:	and	w0, w0, #0xff
   14274:	and	x0, x0, #0xff
   14278:	str	x0, [sp, #88]
   1427c:	ldr	x1, [sp, #128]
   14280:	mov	x0, #0x7fff                	// #32767
   14284:	cmp	x1, x0
   14288:	b.ne	142a0 <__unordtf2@@GCC_4.5.0+0xcc>  // b.any
   1428c:	ldr	x1, [sp, #136]
   14290:	ldr	x0, [sp, #144]
   14294:	orr	x0, x1, x0
   14298:	cmp	x0, #0x0
   1429c:	b.ne	142c4 <__unordtf2@@GCC_4.5.0+0xf0>  // b.any
   142a0:	ldr	x1, [sp, #96]
   142a4:	mov	x0, #0x7fff                	// #32767
   142a8:	cmp	x1, x0
   142ac:	b.ne	142cc <__unordtf2@@GCC_4.5.0+0xf8>  // b.any
   142b0:	ldr	x1, [sp, #104]
   142b4:	ldr	x0, [sp, #112]
   142b8:	orr	x0, x1, x0
   142bc:	cmp	x0, #0x0
   142c0:	b.eq	142cc <__unordtf2@@GCC_4.5.0+0xf8>  // b.none
   142c4:	mov	w0, #0x1                   	// #1
   142c8:	b	142d0 <__unordtf2@@GCC_4.5.0+0xfc>
   142cc:	mov	w0, #0x0                   	// #0
   142d0:	str	w0, [sp, #84]
   142d4:	ldr	w0, [sp, #84]
   142d8:	cmp	w0, #0x0
   142dc:	b.eq	14384 <__unordtf2@@GCC_4.5.0+0x1b0>  // b.none
   142e0:	str	wzr, [sp, #164]
   142e4:	ldr	x1, [sp, #128]
   142e8:	mov	x0, #0x7fff                	// #32767
   142ec:	cmp	x1, x0
   142f0:	b.ne	14320 <__unordtf2@@GCC_4.5.0+0x14c>  // b.any
   142f4:	ldr	x1, [sp, #136]
   142f8:	ldr	x0, [sp, #144]
   142fc:	orr	x0, x1, x0
   14300:	cmp	x0, #0x0
   14304:	b.eq	14320 <__unordtf2@@GCC_4.5.0+0x14c>  // b.none
   14308:	ldr	x0, [sp, #136]
   1430c:	and	x0, x0, #0x800000000000
   14310:	cmp	x0, #0x0
   14314:	b.ne	14320 <__unordtf2@@GCC_4.5.0+0x14c>  // b.any
   14318:	mov	w0, #0x1                   	// #1
   1431c:	str	w0, [sp, #164]
   14320:	ldr	w0, [sp, #164]
   14324:	cmp	w0, #0x0
   14328:	b.ne	14378 <__unordtf2@@GCC_4.5.0+0x1a4>  // b.any
   1432c:	str	wzr, [sp, #168]
   14330:	ldr	x1, [sp, #96]
   14334:	mov	x0, #0x7fff                	// #32767
   14338:	cmp	x1, x0
   1433c:	b.ne	1436c <__unordtf2@@GCC_4.5.0+0x198>  // b.any
   14340:	ldr	x1, [sp, #104]
   14344:	ldr	x0, [sp, #112]
   14348:	orr	x0, x1, x0
   1434c:	cmp	x0, #0x0
   14350:	b.eq	1436c <__unordtf2@@GCC_4.5.0+0x198>  // b.none
   14354:	ldr	x0, [sp, #104]
   14358:	and	x0, x0, #0x800000000000
   1435c:	cmp	x0, #0x0
   14360:	b.ne	1436c <__unordtf2@@GCC_4.5.0+0x198>  // b.any
   14364:	mov	w0, #0x1                   	// #1
   14368:	str	w0, [sp, #168]
   1436c:	ldr	w0, [sp, #168]
   14370:	cmp	w0, #0x0
   14374:	b.eq	14384 <__unordtf2@@GCC_4.5.0+0x1b0>  // b.none
   14378:	ldr	w0, [sp, #172]
   1437c:	orr	w0, w0, #0x1
   14380:	str	w0, [sp, #172]
   14384:	ldrsw	x0, [sp, #172]
   14388:	cmp	x0, #0x0
   1438c:	b.eq	14398 <__unordtf2@@GCC_4.5.0+0x1c4>  // b.none
   14390:	ldr	w0, [sp, #172]
   14394:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   14398:	ldr	w0, [sp, #84]
   1439c:	ldp	x29, x30, [sp], #176
   143a0:	ret

00000000000143a4 <__fixtfsi@@GCC_3.0>:
   143a4:	stp	x29, x30, [sp, #-112]!
   143a8:	mov	x29, sp
   143ac:	str	q0, [sp, #16]
   143b0:	str	wzr, [sp, #108]
   143b4:	str	xzr, [sp, #80]
   143b8:	mrs	x0, fpcr
   143bc:	str	x0, [sp, #80]
   143c0:	ldr	q0, [sp, #16]
   143c4:	str	q0, [sp, #32]
   143c8:	ldr	x0, [sp, #32]
   143cc:	str	x0, [sp, #96]
   143d0:	ldr	x0, [sp, #40]
   143d4:	ubfx	x0, x0, #0, #48
   143d8:	str	x0, [sp, #72]
   143dc:	ldrh	w0, [sp, #46]
   143e0:	ubfx	x0, x0, #0, #15
   143e4:	and	w0, w0, #0xffff
   143e8:	and	x0, x0, #0xffff
   143ec:	str	x0, [sp, #64]
   143f0:	ldrb	w0, [sp, #47]
   143f4:	ubfx	x0, x0, #7, #1
   143f8:	and	w0, w0, #0xff
   143fc:	and	x0, x0, #0xff
   14400:	str	x0, [sp, #56]
   14404:	ldr	x1, [sp, #64]
   14408:	mov	x0, #0x3ffe                	// #16382
   1440c:	cmp	x1, x0
   14410:	b.gt	14458 <__fixtfsi@@GCC_3.0+0xb4>
   14414:	str	wzr, [sp, #92]
   14418:	ldr	x0, [sp, #64]
   1441c:	cmp	x0, #0x0
   14420:	b.ne	14448 <__fixtfsi@@GCC_3.0+0xa4>  // b.any
   14424:	ldr	x1, [sp, #72]
   14428:	ldr	x0, [sp, #96]
   1442c:	orr	x0, x1, x0
   14430:	cmp	x0, #0x0
   14434:	b.eq	146bc <__fixtfsi@@GCC_3.0+0x318>  // b.none
   14438:	ldr	w0, [sp, #108]
   1443c:	orr	w0, w0, #0x10
   14440:	str	w0, [sp, #108]
   14444:	b	146bc <__fixtfsi@@GCC_3.0+0x318>
   14448:	ldr	w0, [sp, #108]
   1444c:	orr	w0, w0, #0x10
   14450:	str	w0, [sp, #108]
   14454:	b	146bc <__fixtfsi@@GCC_3.0+0x318>
   14458:	ldr	x1, [sp, #64]
   1445c:	mov	x0, #0x401d                	// #16413
   14460:	cmp	x1, x0
   14464:	b.le	14534 <__fixtfsi@@GCC_3.0+0x190>
   14468:	mov	w0, #0x1                   	// #1
   1446c:	str	w0, [sp, #92]
   14470:	ldr	w0, [sp, #92]
   14474:	lsl	w0, w0, #31
   14478:	str	w0, [sp, #92]
   1447c:	ldr	x0, [sp, #56]
   14480:	mov	w1, w0
   14484:	ldr	w0, [sp, #92]
   14488:	add	w0, w1, w0
   1448c:	sub	w0, w0, #0x1
   14490:	str	w0, [sp, #92]
   14494:	ldr	x0, [sp, #56]
   14498:	cmp	x0, #0x0
   1449c:	b.eq	14524 <__fixtfsi@@GCC_3.0+0x180>  // b.none
   144a0:	ldr	x1, [sp, #64]
   144a4:	mov	x0, #0x401e                	// #16414
   144a8:	cmp	x1, x0
   144ac:	b.ne	14524 <__fixtfsi@@GCC_3.0+0x180>  // b.any
   144b0:	str	wzr, [sp, #52]
   144b4:	ldr	x0, [sp, #72]
   144b8:	lsl	x1, x0, #47
   144bc:	ldr	x0, [sp, #96]
   144c0:	orr	x0, x1, x0
   144c4:	cmp	x0, #0x0
   144c8:	cset	w0, ne  // ne = any
   144cc:	and	w0, w0, #0xff
   144d0:	str	w0, [sp, #52]
   144d4:	ldr	x0, [sp, #72]
   144d8:	lsr	x0, x0, #17
   144dc:	str	x0, [sp, #96]
   144e0:	str	xzr, [sp, #72]
   144e4:	ldr	x1, [sp, #72]
   144e8:	ldr	x0, [sp, #96]
   144ec:	orr	x0, x1, x0
   144f0:	cmp	x0, #0x0
   144f4:	b.eq	14508 <__fixtfsi@@GCC_3.0+0x164>  // b.none
   144f8:	ldr	w0, [sp, #108]
   144fc:	orr	w0, w0, #0x1
   14500:	str	w0, [sp, #108]
   14504:	b	146b8 <__fixtfsi@@GCC_3.0+0x314>
   14508:	ldr	w0, [sp, #52]
   1450c:	cmp	w0, #0x0
   14510:	b.eq	146b8 <__fixtfsi@@GCC_3.0+0x314>  // b.none
   14514:	ldr	w0, [sp, #108]
   14518:	orr	w0, w0, #0x10
   1451c:	str	w0, [sp, #108]
   14520:	b	146b8 <__fixtfsi@@GCC_3.0+0x314>
   14524:	ldr	w0, [sp, #108]
   14528:	orr	w0, w0, #0x1
   1452c:	str	w0, [sp, #108]
   14530:	b	146bc <__fixtfsi@@GCC_3.0+0x318>
   14534:	str	wzr, [sp, #88]
   14538:	ldr	x0, [sp, #72]
   1453c:	orr	x0, x0, #0x1000000000000
   14540:	str	x0, [sp, #72]
   14544:	ldr	x1, [sp, #64]
   14548:	mov	x0, #0x406e                	// #16494
   1454c:	cmp	x1, x0
   14550:	b.le	1457c <__fixtfsi@@GCC_3.0+0x1d8>
   14554:	ldr	x0, [sp, #96]
   14558:	str	w0, [sp, #92]
   1455c:	ldr	x0, [sp, #64]
   14560:	mov	w1, w0
   14564:	mov	w0, #0xffffbf91            	// #-16495
   14568:	add	w0, w1, w0
   1456c:	ldr	w1, [sp, #92]
   14570:	lsl	w0, w1, w0
   14574:	str	w0, [sp, #92]
   14578:	b	14684 <__fixtfsi@@GCC_3.0+0x2e0>
   1457c:	mov	x1, #0x406f                	// #16495
   14580:	ldr	x0, [sp, #64]
   14584:	sub	x0, x1, x0
   14588:	cmp	x0, #0x3f
   1458c:	b.gt	14610 <__fixtfsi@@GCC_3.0+0x26c>
   14590:	ldr	x0, [sp, #64]
   14594:	mov	w1, w0
   14598:	mov	w0, #0xffffbfd1            	// #-16431
   1459c:	add	w0, w1, w0
   145a0:	ldr	x1, [sp, #96]
   145a4:	lsl	x0, x1, x0
   145a8:	cmp	x0, #0x0
   145ac:	cset	w0, ne  // ne = any
   145b0:	and	w0, w0, #0xff
   145b4:	str	w0, [sp, #88]
   145b8:	ldr	x0, [sp, #64]
   145bc:	mov	w1, w0
   145c0:	mov	w0, #0xffffbfd1            	// #-16431
   145c4:	add	w0, w1, w0
   145c8:	ldr	x1, [sp, #72]
   145cc:	lsl	x1, x1, x0
   145d0:	ldr	x0, [sp, #64]
   145d4:	mov	w2, w0
   145d8:	mov	w0, #0x406f                	// #16495
   145dc:	sub	w0, w0, w2
   145e0:	ldr	x2, [sp, #96]
   145e4:	lsr	x0, x2, x0
   145e8:	orr	x0, x1, x0
   145ec:	str	x0, [sp, #96]
   145f0:	ldr	x0, [sp, #64]
   145f4:	mov	w1, w0
   145f8:	mov	w0, #0x406f                	// #16495
   145fc:	sub	w0, w0, w1
   14600:	ldr	x1, [sp, #72]
   14604:	lsr	x0, x1, x0
   14608:	str	x0, [sp, #72]
   1460c:	b	1467c <__fixtfsi@@GCC_3.0+0x2d8>
   14610:	mov	x1, #0x406f                	// #16495
   14614:	ldr	x0, [sp, #64]
   14618:	sub	x0, x1, x0
   1461c:	cmp	x0, #0x40
   14620:	b.eq	14640 <__fixtfsi@@GCC_3.0+0x29c>  // b.none
   14624:	ldr	x0, [sp, #64]
   14628:	mov	w1, w0
   1462c:	mov	w0, #0xffffc011            	// #-16367
   14630:	add	w0, w1, w0
   14634:	ldr	x1, [sp, #72]
   14638:	lsl	x0, x1, x0
   1463c:	b	14644 <__fixtfsi@@GCC_3.0+0x2a0>
   14640:	mov	x0, #0x0                   	// #0
   14644:	ldr	x1, [sp, #96]
   14648:	orr	x0, x0, x1
   1464c:	cmp	x0, #0x0
   14650:	cset	w0, ne  // ne = any
   14654:	and	w0, w0, #0xff
   14658:	str	w0, [sp, #88]
   1465c:	ldr	x0, [sp, #64]
   14660:	mov	w1, w0
   14664:	mov	w0, #0x402f                	// #16431
   14668:	sub	w0, w0, w1
   1466c:	ldr	x1, [sp, #72]
   14670:	lsr	x0, x1, x0
   14674:	str	x0, [sp, #96]
   14678:	str	xzr, [sp, #72]
   1467c:	ldr	x0, [sp, #96]
   14680:	str	w0, [sp, #92]
   14684:	ldr	x0, [sp, #56]
   14688:	cmp	x0, #0x0
   1468c:	b.eq	1469c <__fixtfsi@@GCC_3.0+0x2f8>  // b.none
   14690:	ldr	w0, [sp, #92]
   14694:	neg	w0, w0
   14698:	str	w0, [sp, #92]
   1469c:	ldr	w0, [sp, #88]
   146a0:	cmp	w0, #0x0
   146a4:	b.eq	146bc <__fixtfsi@@GCC_3.0+0x318>  // b.none
   146a8:	ldr	w0, [sp, #108]
   146ac:	orr	w0, w0, #0x10
   146b0:	str	w0, [sp, #108]
   146b4:	b	146bc <__fixtfsi@@GCC_3.0+0x318>
   146b8:	nop
   146bc:	ldrsw	x0, [sp, #108]
   146c0:	cmp	x0, #0x0
   146c4:	b.eq	146d0 <__fixtfsi@@GCC_3.0+0x32c>  // b.none
   146c8:	ldr	w0, [sp, #108]
   146cc:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   146d0:	ldr	w0, [sp, #92]
   146d4:	ldp	x29, x30, [sp], #112
   146d8:	ret

00000000000146dc <__fixunstfsi@@GCC_3.0>:
   146dc:	stp	x29, x30, [sp, #-112]!
   146e0:	mov	x29, sp
   146e4:	str	q0, [sp, #16]
   146e8:	str	wzr, [sp, #100]
   146ec:	str	xzr, [sp, #80]
   146f0:	mrs	x0, fpcr
   146f4:	str	x0, [sp, #80]
   146f8:	ldr	q0, [sp, #16]
   146fc:	str	q0, [sp, #32]
   14700:	ldr	x0, [sp, #32]
   14704:	str	x0, [sp, #88]
   14708:	ldr	x0, [sp, #40]
   1470c:	ubfx	x0, x0, #0, #48
   14710:	str	x0, [sp, #72]
   14714:	ldrh	w0, [sp, #46]
   14718:	ubfx	x0, x0, #0, #15
   1471c:	and	w0, w0, #0xffff
   14720:	and	x0, x0, #0xffff
   14724:	str	x0, [sp, #64]
   14728:	ldrb	w0, [sp, #47]
   1472c:	ubfx	x0, x0, #7, #1
   14730:	and	w0, w0, #0xff
   14734:	and	x0, x0, #0xff
   14738:	str	x0, [sp, #56]
   1473c:	ldr	x1, [sp, #64]
   14740:	mov	x0, #0x3ffe                	// #16382
   14744:	cmp	x1, x0
   14748:	b.gt	14790 <__fixunstfsi@@GCC_3.0+0xb4>
   1474c:	str	wzr, [sp, #108]
   14750:	ldr	x0, [sp, #64]
   14754:	cmp	x0, #0x0
   14758:	b.ne	14780 <__fixunstfsi@@GCC_3.0+0xa4>  // b.any
   1475c:	ldr	x1, [sp, #72]
   14760:	ldr	x0, [sp, #88]
   14764:	orr	x0, x1, x0
   14768:	cmp	x0, #0x0
   1476c:	b.eq	14954 <__fixunstfsi@@GCC_3.0+0x278>  // b.none
   14770:	ldr	w0, [sp, #100]
   14774:	orr	w0, w0, #0x10
   14778:	str	w0, [sp, #100]
   1477c:	b	14954 <__fixunstfsi@@GCC_3.0+0x278>
   14780:	ldr	w0, [sp, #100]
   14784:	orr	w0, w0, #0x10
   14788:	str	w0, [sp, #100]
   1478c:	b	14954 <__fixunstfsi@@GCC_3.0+0x278>
   14790:	ldr	x0, [sp, #56]
   14794:	cmp	x0, #0x0
   14798:	b.eq	147a4 <__fixunstfsi@@GCC_3.0+0xc8>  // b.none
   1479c:	mov	x0, #0x401e                	// #16414
   147a0:	b	147a8 <__fixunstfsi@@GCC_3.0+0xcc>
   147a4:	mov	x0, #0x401f                	// #16415
   147a8:	ldr	x1, [sp, #64]
   147ac:	cmp	x0, x1
   147b0:	b.le	147c0 <__fixunstfsi@@GCC_3.0+0xe4>
   147b4:	ldr	x0, [sp, #56]
   147b8:	cmp	x0, #0x0
   147bc:	b.eq	147ec <__fixunstfsi@@GCC_3.0+0x110>  // b.none
   147c0:	str	wzr, [sp, #108]
   147c4:	ldr	x0, [sp, #56]
   147c8:	cmp	x0, #0x0
   147cc:	b.ne	147dc <__fixunstfsi@@GCC_3.0+0x100>  // b.any
   147d0:	ldr	w0, [sp, #108]
   147d4:	mvn	w0, w0
   147d8:	str	w0, [sp, #108]
   147dc:	ldr	w0, [sp, #100]
   147e0:	orr	w0, w0, #0x1
   147e4:	str	w0, [sp, #100]
   147e8:	b	14954 <__fixunstfsi@@GCC_3.0+0x278>
   147ec:	str	wzr, [sp, #104]
   147f0:	ldr	x0, [sp, #72]
   147f4:	orr	x0, x0, #0x1000000000000
   147f8:	str	x0, [sp, #72]
   147fc:	ldr	x1, [sp, #64]
   14800:	mov	x0, #0x406e                	// #16494
   14804:	cmp	x1, x0
   14808:	b.le	14834 <__fixunstfsi@@GCC_3.0+0x158>
   1480c:	ldr	x0, [sp, #88]
   14810:	str	w0, [sp, #108]
   14814:	ldr	x0, [sp, #64]
   14818:	mov	w1, w0
   1481c:	mov	w0, #0xffffbf91            	// #-16495
   14820:	add	w0, w1, w0
   14824:	ldr	w1, [sp, #108]
   14828:	lsl	w0, w1, w0
   1482c:	str	w0, [sp, #108]
   14830:	b	1493c <__fixunstfsi@@GCC_3.0+0x260>
   14834:	mov	x1, #0x406f                	// #16495
   14838:	ldr	x0, [sp, #64]
   1483c:	sub	x0, x1, x0
   14840:	cmp	x0, #0x3f
   14844:	b.gt	148c8 <__fixunstfsi@@GCC_3.0+0x1ec>
   14848:	ldr	x0, [sp, #64]
   1484c:	mov	w1, w0
   14850:	mov	w0, #0xffffbfd1            	// #-16431
   14854:	add	w0, w1, w0
   14858:	ldr	x1, [sp, #88]
   1485c:	lsl	x0, x1, x0
   14860:	cmp	x0, #0x0
   14864:	cset	w0, ne  // ne = any
   14868:	and	w0, w0, #0xff
   1486c:	str	w0, [sp, #104]
   14870:	ldr	x0, [sp, #64]
   14874:	mov	w1, w0
   14878:	mov	w0, #0xffffbfd1            	// #-16431
   1487c:	add	w0, w1, w0
   14880:	ldr	x1, [sp, #72]
   14884:	lsl	x1, x1, x0
   14888:	ldr	x0, [sp, #64]
   1488c:	mov	w2, w0
   14890:	mov	w0, #0x406f                	// #16495
   14894:	sub	w0, w0, w2
   14898:	ldr	x2, [sp, #88]
   1489c:	lsr	x0, x2, x0
   148a0:	orr	x0, x1, x0
   148a4:	str	x0, [sp, #88]
   148a8:	ldr	x0, [sp, #64]
   148ac:	mov	w1, w0
   148b0:	mov	w0, #0x406f                	// #16495
   148b4:	sub	w0, w0, w1
   148b8:	ldr	x1, [sp, #72]
   148bc:	lsr	x0, x1, x0
   148c0:	str	x0, [sp, #72]
   148c4:	b	14934 <__fixunstfsi@@GCC_3.0+0x258>
   148c8:	mov	x1, #0x406f                	// #16495
   148cc:	ldr	x0, [sp, #64]
   148d0:	sub	x0, x1, x0
   148d4:	cmp	x0, #0x40
   148d8:	b.eq	148f8 <__fixunstfsi@@GCC_3.0+0x21c>  // b.none
   148dc:	ldr	x0, [sp, #64]
   148e0:	mov	w1, w0
   148e4:	mov	w0, #0xffffc011            	// #-16367
   148e8:	add	w0, w1, w0
   148ec:	ldr	x1, [sp, #72]
   148f0:	lsl	x0, x1, x0
   148f4:	b	148fc <__fixunstfsi@@GCC_3.0+0x220>
   148f8:	mov	x0, #0x0                   	// #0
   148fc:	ldr	x1, [sp, #88]
   14900:	orr	x0, x0, x1
   14904:	cmp	x0, #0x0
   14908:	cset	w0, ne  // ne = any
   1490c:	and	w0, w0, #0xff
   14910:	str	w0, [sp, #104]
   14914:	ldr	x0, [sp, #64]
   14918:	mov	w1, w0
   1491c:	mov	w0, #0x402f                	// #16431
   14920:	sub	w0, w0, w1
   14924:	ldr	x1, [sp, #72]
   14928:	lsr	x0, x1, x0
   1492c:	str	x0, [sp, #88]
   14930:	str	xzr, [sp, #72]
   14934:	ldr	x0, [sp, #88]
   14938:	str	w0, [sp, #108]
   1493c:	ldr	w0, [sp, #104]
   14940:	cmp	w0, #0x0
   14944:	b.eq	14954 <__fixunstfsi@@GCC_3.0+0x278>  // b.none
   14948:	ldr	w0, [sp, #100]
   1494c:	orr	w0, w0, #0x10
   14950:	str	w0, [sp, #100]
   14954:	ldrsw	x0, [sp, #100]
   14958:	cmp	x0, #0x0
   1495c:	b.eq	14968 <__fixunstfsi@@GCC_3.0+0x28c>  // b.none
   14960:	ldr	w0, [sp, #100]
   14964:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   14968:	ldr	w0, [sp, #108]
   1496c:	ldp	x29, x30, [sp], #112
   14970:	ret

0000000000014974 <__floatsitf@@GCC_3.0>:
   14974:	sub	sp, sp, #0x60
   14978:	str	w0, [sp, #12]
   1497c:	ldr	w0, [sp, #12]
   14980:	cmp	w0, #0x0
   14984:	b.eq	14a8c <__floatsitf@@GCC_3.0+0x118>  // b.none
   14988:	ldr	w0, [sp, #12]
   1498c:	str	w0, [sp, #36]
   14990:	ldr	w0, [sp, #12]
   14994:	lsr	w0, w0, #31
   14998:	and	w0, w0, #0xff
   1499c:	and	x0, x0, #0xff
   149a0:	str	x0, [sp, #40]
   149a4:	ldr	x0, [sp, #40]
   149a8:	cmp	x0, #0x0
   149ac:	b.eq	149bc <__floatsitf@@GCC_3.0+0x48>  // b.none
   149b0:	ldr	w0, [sp, #36]
   149b4:	neg	w0, w0
   149b8:	str	w0, [sp, #36]
   149bc:	ldr	w0, [sp, #36]
   149c0:	clz	x0, x0
   149c4:	str	w0, [sp, #52]
   149c8:	mov	w1, #0x403e                	// #16446
   149cc:	ldr	w0, [sp, #52]
   149d0:	sub	w0, w1, w0
   149d4:	sxtw	x0, w0
   149d8:	str	x0, [sp, #56]
   149dc:	ldr	w0, [sp, #36]
   149e0:	str	x0, [sp, #64]
   149e4:	str	xzr, [sp, #72]
   149e8:	mov	x1, #0x406f                	// #16495
   149ec:	ldr	x0, [sp, #56]
   149f0:	sub	x0, x1, x0
   149f4:	cmp	x0, #0x0
   149f8:	b.le	14a9c <__floatsitf@@GCC_3.0+0x128>
   149fc:	mov	x1, #0x406f                	// #16495
   14a00:	ldr	x0, [sp, #56]
   14a04:	sub	x0, x1, x0
   14a08:	cmp	x0, #0x3f
   14a0c:	b.gt	14a68 <__floatsitf@@GCC_3.0+0xf4>
   14a10:	ldr	x0, [sp, #56]
   14a14:	mov	w1, w0
   14a18:	mov	w0, #0x406f                	// #16495
   14a1c:	sub	w0, w0, w1
   14a20:	ldr	x1, [sp, #72]
   14a24:	lsl	x1, x1, x0
   14a28:	ldr	x0, [sp, #56]
   14a2c:	mov	w2, w0
   14a30:	mov	w0, #0xffffbfd1            	// #-16431
   14a34:	add	w0, w2, w0
   14a38:	ldr	x2, [sp, #64]
   14a3c:	lsr	x0, x2, x0
   14a40:	orr	x0, x1, x0
   14a44:	str	x0, [sp, #72]
   14a48:	ldr	x0, [sp, #56]
   14a4c:	mov	w1, w0
   14a50:	mov	w0, #0x406f                	// #16495
   14a54:	sub	w0, w0, w1
   14a58:	ldr	x1, [sp, #64]
   14a5c:	lsl	x0, x1, x0
   14a60:	str	x0, [sp, #64]
   14a64:	b	14a9c <__floatsitf@@GCC_3.0+0x128>
   14a68:	ldr	x0, [sp, #56]
   14a6c:	mov	w1, w0
   14a70:	mov	w0, #0x402f                	// #16431
   14a74:	sub	w0, w0, w1
   14a78:	ldr	x1, [sp, #64]
   14a7c:	lsl	x0, x1, x0
   14a80:	str	x0, [sp, #72]
   14a84:	str	xzr, [sp, #64]
   14a88:	b	14a9c <__floatsitf@@GCC_3.0+0x128>
   14a8c:	str	xzr, [sp, #40]
   14a90:	str	xzr, [sp, #56]
   14a94:	str	xzr, [sp, #64]
   14a98:	str	xzr, [sp, #72]
   14a9c:	ldr	x0, [sp, #64]
   14aa0:	str	x0, [sp, #16]
   14aa4:	ldr	x0, [sp, #72]
   14aa8:	and	x1, x0, #0xffffffffffff
   14aac:	ldr	x0, [sp, #24]
   14ab0:	bfxil	x0, x1, #0, #48
   14ab4:	str	x0, [sp, #24]
   14ab8:	ldr	x0, [sp, #56]
   14abc:	and	w0, w0, #0x7fff
   14ac0:	and	w1, w0, #0xffff
   14ac4:	ldrh	w0, [sp, #30]
   14ac8:	bfxil	w0, w1, #0, #15
   14acc:	strh	w0, [sp, #30]
   14ad0:	ldr	x0, [sp, #40]
   14ad4:	and	w0, w0, #0x1
   14ad8:	and	w1, w0, #0xff
   14adc:	ldrb	w0, [sp, #31]
   14ae0:	bfi	w0, w1, #7, #1
   14ae4:	strb	w0, [sp, #31]
   14ae8:	ldr	q0, [sp, #16]
   14aec:	str	q0, [sp, #80]
   14af0:	ldr	q0, [sp, #80]
   14af4:	add	sp, sp, #0x60
   14af8:	ret

0000000000014afc <__floatunsitf@@GCC_4.2.0>:
   14afc:	sub	sp, sp, #0x60
   14b00:	str	w0, [sp, #12]
   14b04:	ldr	w0, [sp, #12]
   14b08:	cmp	w0, #0x0
   14b0c:	b.eq	14c04 <__floatunsitf@@GCC_4.2.0+0x108>  // b.none
   14b10:	ldr	w0, [sp, #12]
   14b14:	str	w0, [sp, #36]
   14b18:	str	xzr, [sp, #40]
   14b1c:	ldr	x0, [sp, #40]
   14b20:	cmp	x0, #0x0
   14b24:	b.eq	14b34 <__floatunsitf@@GCC_4.2.0+0x38>  // b.none
   14b28:	ldr	w0, [sp, #36]
   14b2c:	neg	w0, w0
   14b30:	str	w0, [sp, #36]
   14b34:	ldr	w0, [sp, #36]
   14b38:	clz	x0, x0
   14b3c:	str	w0, [sp, #52]
   14b40:	mov	w1, #0x403e                	// #16446
   14b44:	ldr	w0, [sp, #52]
   14b48:	sub	w0, w1, w0
   14b4c:	sxtw	x0, w0
   14b50:	str	x0, [sp, #56]
   14b54:	ldr	w0, [sp, #36]
   14b58:	str	x0, [sp, #64]
   14b5c:	str	xzr, [sp, #72]
   14b60:	mov	x1, #0x406f                	// #16495
   14b64:	ldr	x0, [sp, #56]
   14b68:	sub	x0, x1, x0
   14b6c:	cmp	x0, #0x0
   14b70:	b.le	14c14 <__floatunsitf@@GCC_4.2.0+0x118>
   14b74:	mov	x1, #0x406f                	// #16495
   14b78:	ldr	x0, [sp, #56]
   14b7c:	sub	x0, x1, x0
   14b80:	cmp	x0, #0x3f
   14b84:	b.gt	14be0 <__floatunsitf@@GCC_4.2.0+0xe4>
   14b88:	ldr	x0, [sp, #56]
   14b8c:	mov	w1, w0
   14b90:	mov	w0, #0x406f                	// #16495
   14b94:	sub	w0, w0, w1
   14b98:	ldr	x1, [sp, #72]
   14b9c:	lsl	x1, x1, x0
   14ba0:	ldr	x0, [sp, #56]
   14ba4:	mov	w2, w0
   14ba8:	mov	w0, #0xffffbfd1            	// #-16431
   14bac:	add	w0, w2, w0
   14bb0:	ldr	x2, [sp, #64]
   14bb4:	lsr	x0, x2, x0
   14bb8:	orr	x0, x1, x0
   14bbc:	str	x0, [sp, #72]
   14bc0:	ldr	x0, [sp, #56]
   14bc4:	mov	w1, w0
   14bc8:	mov	w0, #0x406f                	// #16495
   14bcc:	sub	w0, w0, w1
   14bd0:	ldr	x1, [sp, #64]
   14bd4:	lsl	x0, x1, x0
   14bd8:	str	x0, [sp, #64]
   14bdc:	b	14c14 <__floatunsitf@@GCC_4.2.0+0x118>
   14be0:	ldr	x0, [sp, #56]
   14be4:	mov	w1, w0
   14be8:	mov	w0, #0x402f                	// #16431
   14bec:	sub	w0, w0, w1
   14bf0:	ldr	x1, [sp, #64]
   14bf4:	lsl	x0, x1, x0
   14bf8:	str	x0, [sp, #72]
   14bfc:	str	xzr, [sp, #64]
   14c00:	b	14c14 <__floatunsitf@@GCC_4.2.0+0x118>
   14c04:	str	xzr, [sp, #40]
   14c08:	str	xzr, [sp, #56]
   14c0c:	str	xzr, [sp, #64]
   14c10:	str	xzr, [sp, #72]
   14c14:	ldr	x0, [sp, #64]
   14c18:	str	x0, [sp, #16]
   14c1c:	ldr	x0, [sp, #72]
   14c20:	and	x1, x0, #0xffffffffffff
   14c24:	ldr	x0, [sp, #24]
   14c28:	bfxil	x0, x1, #0, #48
   14c2c:	str	x0, [sp, #24]
   14c30:	ldr	x0, [sp, #56]
   14c34:	and	w0, w0, #0x7fff
   14c38:	and	w1, w0, #0xffff
   14c3c:	ldrh	w0, [sp, #30]
   14c40:	bfxil	w0, w1, #0, #15
   14c44:	strh	w0, [sp, #30]
   14c48:	ldr	x0, [sp, #40]
   14c4c:	and	w0, w0, #0x1
   14c50:	and	w1, w0, #0xff
   14c54:	ldrb	w0, [sp, #31]
   14c58:	bfi	w0, w1, #7, #1
   14c5c:	strb	w0, [sp, #31]
   14c60:	ldr	q0, [sp, #16]
   14c64:	str	q0, [sp, #80]
   14c68:	ldr	q0, [sp, #80]
   14c6c:	add	sp, sp, #0x60
   14c70:	ret

0000000000014c74 <__fixtfdi@@GCC_3.0>:
   14c74:	stp	x29, x30, [sp, #-128]!
   14c78:	mov	x29, sp
   14c7c:	str	q0, [sp, #16]
   14c80:	str	wzr, [sp, #124]
   14c84:	str	xzr, [sp, #88]
   14c88:	mrs	x0, fpcr
   14c8c:	str	x0, [sp, #88]
   14c90:	ldr	q0, [sp, #16]
   14c94:	str	q0, [sp, #32]
   14c98:	ldr	x0, [sp, #32]
   14c9c:	str	x0, [sp, #112]
   14ca0:	ldr	x0, [sp, #40]
   14ca4:	ubfx	x0, x0, #0, #48
   14ca8:	str	x0, [sp, #80]
   14cac:	ldrh	w0, [sp, #46]
   14cb0:	ubfx	x0, x0, #0, #15
   14cb4:	and	w0, w0, #0xffff
   14cb8:	and	x0, x0, #0xffff
   14cbc:	str	x0, [sp, #72]
   14cc0:	ldrb	w0, [sp, #47]
   14cc4:	ubfx	x0, x0, #7, #1
   14cc8:	and	w0, w0, #0xff
   14ccc:	and	x0, x0, #0xff
   14cd0:	str	x0, [sp, #64]
   14cd4:	ldr	x1, [sp, #72]
   14cd8:	mov	x0, #0x3ffe                	// #16382
   14cdc:	cmp	x1, x0
   14ce0:	b.gt	14d28 <__fixtfdi@@GCC_3.0+0xb4>
   14ce4:	str	xzr, [sp, #104]
   14ce8:	ldr	x0, [sp, #72]
   14cec:	cmp	x0, #0x0
   14cf0:	b.ne	14d18 <__fixtfdi@@GCC_3.0+0xa4>  // b.any
   14cf4:	ldr	x1, [sp, #80]
   14cf8:	ldr	x0, [sp, #112]
   14cfc:	orr	x0, x1, x0
   14d00:	cmp	x0, #0x0
   14d04:	b.eq	14f94 <__fixtfdi@@GCC_3.0+0x320>  // b.none
   14d08:	ldr	w0, [sp, #124]
   14d0c:	orr	w0, w0, #0x10
   14d10:	str	w0, [sp, #124]
   14d14:	b	14f94 <__fixtfdi@@GCC_3.0+0x320>
   14d18:	ldr	w0, [sp, #124]
   14d1c:	orr	w0, w0, #0x10
   14d20:	str	w0, [sp, #124]
   14d24:	b	14f94 <__fixtfdi@@GCC_3.0+0x320>
   14d28:	ldr	x1, [sp, #72]
   14d2c:	mov	x0, #0x403d                	// #16445
   14d30:	cmp	x1, x0
   14d34:	b.le	14e0c <__fixtfdi@@GCC_3.0+0x198>
   14d38:	mov	x0, #0x1                   	// #1
   14d3c:	str	x0, [sp, #104]
   14d40:	ldr	x0, [sp, #104]
   14d44:	lsl	x0, x0, #63
   14d48:	str	x0, [sp, #104]
   14d4c:	ldr	x1, [sp, #64]
   14d50:	ldr	x0, [sp, #104]
   14d54:	add	x0, x1, x0
   14d58:	sub	x0, x0, #0x1
   14d5c:	str	x0, [sp, #104]
   14d60:	ldr	x0, [sp, #64]
   14d64:	cmp	x0, #0x0
   14d68:	b.eq	14dfc <__fixtfdi@@GCC_3.0+0x188>  // b.none
   14d6c:	ldr	x1, [sp, #72]
   14d70:	mov	x0, #0x403e                	// #16446
   14d74:	cmp	x1, x0
   14d78:	b.ne	14dfc <__fixtfdi@@GCC_3.0+0x188>  // b.any
   14d7c:	str	wzr, [sp, #60]
   14d80:	ldr	x0, [sp, #112]
   14d84:	lsl	x0, x0, #15
   14d88:	cmp	x0, #0x0
   14d8c:	cset	w0, ne  // ne = any
   14d90:	and	w0, w0, #0xff
   14d94:	str	w0, [sp, #60]
   14d98:	ldr	x0, [sp, #80]
   14d9c:	lsl	x1, x0, #15
   14da0:	ldr	x0, [sp, #112]
   14da4:	lsr	x0, x0, #49
   14da8:	orr	x0, x1, x0
   14dac:	str	x0, [sp, #112]
   14db0:	ldr	x0, [sp, #80]
   14db4:	lsr	x0, x0, #49
   14db8:	str	x0, [sp, #80]
   14dbc:	ldr	x1, [sp, #80]
   14dc0:	ldr	x0, [sp, #112]
   14dc4:	orr	x0, x1, x0
   14dc8:	cmp	x0, #0x0
   14dcc:	b.eq	14de0 <__fixtfdi@@GCC_3.0+0x16c>  // b.none
   14dd0:	ldr	w0, [sp, #124]
   14dd4:	orr	w0, w0, #0x1
   14dd8:	str	w0, [sp, #124]
   14ddc:	b	14f90 <__fixtfdi@@GCC_3.0+0x31c>
   14de0:	ldr	w0, [sp, #60]
   14de4:	cmp	w0, #0x0
   14de8:	b.eq	14f90 <__fixtfdi@@GCC_3.0+0x31c>  // b.none
   14dec:	ldr	w0, [sp, #124]
   14df0:	orr	w0, w0, #0x10
   14df4:	str	w0, [sp, #124]
   14df8:	b	14f90 <__fixtfdi@@GCC_3.0+0x31c>
   14dfc:	ldr	w0, [sp, #124]
   14e00:	orr	w0, w0, #0x1
   14e04:	str	w0, [sp, #124]
   14e08:	b	14f94 <__fixtfdi@@GCC_3.0+0x320>
   14e0c:	str	wzr, [sp, #100]
   14e10:	ldr	x0, [sp, #80]
   14e14:	orr	x0, x0, #0x1000000000000
   14e18:	str	x0, [sp, #80]
   14e1c:	ldr	x1, [sp, #72]
   14e20:	mov	x0, #0x406e                	// #16494
   14e24:	cmp	x1, x0
   14e28:	b.le	14e54 <__fixtfdi@@GCC_3.0+0x1e0>
   14e2c:	ldr	x0, [sp, #112]
   14e30:	str	x0, [sp, #104]
   14e34:	ldr	x0, [sp, #72]
   14e38:	mov	w1, w0
   14e3c:	mov	w0, #0xffffbf91            	// #-16495
   14e40:	add	w0, w1, w0
   14e44:	ldr	x1, [sp, #104]
   14e48:	lsl	x0, x1, x0
   14e4c:	str	x0, [sp, #104]
   14e50:	b	14f5c <__fixtfdi@@GCC_3.0+0x2e8>
   14e54:	mov	x1, #0x406f                	// #16495
   14e58:	ldr	x0, [sp, #72]
   14e5c:	sub	x0, x1, x0
   14e60:	cmp	x0, #0x3f
   14e64:	b.gt	14ee8 <__fixtfdi@@GCC_3.0+0x274>
   14e68:	ldr	x0, [sp, #72]
   14e6c:	mov	w1, w0
   14e70:	mov	w0, #0xffffbfd1            	// #-16431
   14e74:	add	w0, w1, w0
   14e78:	ldr	x1, [sp, #112]
   14e7c:	lsl	x0, x1, x0
   14e80:	cmp	x0, #0x0
   14e84:	cset	w0, ne  // ne = any
   14e88:	and	w0, w0, #0xff
   14e8c:	str	w0, [sp, #100]
   14e90:	ldr	x0, [sp, #72]
   14e94:	mov	w1, w0
   14e98:	mov	w0, #0xffffbfd1            	// #-16431
   14e9c:	add	w0, w1, w0
   14ea0:	ldr	x1, [sp, #80]
   14ea4:	lsl	x1, x1, x0
   14ea8:	ldr	x0, [sp, #72]
   14eac:	mov	w2, w0
   14eb0:	mov	w0, #0x406f                	// #16495
   14eb4:	sub	w0, w0, w2
   14eb8:	ldr	x2, [sp, #112]
   14ebc:	lsr	x0, x2, x0
   14ec0:	orr	x0, x1, x0
   14ec4:	str	x0, [sp, #112]
   14ec8:	ldr	x0, [sp, #72]
   14ecc:	mov	w1, w0
   14ed0:	mov	w0, #0x406f                	// #16495
   14ed4:	sub	w0, w0, w1
   14ed8:	ldr	x1, [sp, #80]
   14edc:	lsr	x0, x1, x0
   14ee0:	str	x0, [sp, #80]
   14ee4:	b	14f54 <__fixtfdi@@GCC_3.0+0x2e0>
   14ee8:	mov	x1, #0x406f                	// #16495
   14eec:	ldr	x0, [sp, #72]
   14ef0:	sub	x0, x1, x0
   14ef4:	cmp	x0, #0x40
   14ef8:	b.eq	14f18 <__fixtfdi@@GCC_3.0+0x2a4>  // b.none
   14efc:	ldr	x0, [sp, #72]
   14f00:	mov	w1, w0
   14f04:	mov	w0, #0xffffc011            	// #-16367
   14f08:	add	w0, w1, w0
   14f0c:	ldr	x1, [sp, #80]
   14f10:	lsl	x0, x1, x0
   14f14:	b	14f1c <__fixtfdi@@GCC_3.0+0x2a8>
   14f18:	mov	x0, #0x0                   	// #0
   14f1c:	ldr	x1, [sp, #112]
   14f20:	orr	x0, x0, x1
   14f24:	cmp	x0, #0x0
   14f28:	cset	w0, ne  // ne = any
   14f2c:	and	w0, w0, #0xff
   14f30:	str	w0, [sp, #100]
   14f34:	ldr	x0, [sp, #72]
   14f38:	mov	w1, w0
   14f3c:	mov	w0, #0x402f                	// #16431
   14f40:	sub	w0, w0, w1
   14f44:	ldr	x1, [sp, #80]
   14f48:	lsr	x0, x1, x0
   14f4c:	str	x0, [sp, #112]
   14f50:	str	xzr, [sp, #80]
   14f54:	ldr	x0, [sp, #112]
   14f58:	str	x0, [sp, #104]
   14f5c:	ldr	x0, [sp, #64]
   14f60:	cmp	x0, #0x0
   14f64:	b.eq	14f74 <__fixtfdi@@GCC_3.0+0x300>  // b.none
   14f68:	ldr	x0, [sp, #104]
   14f6c:	neg	x0, x0
   14f70:	str	x0, [sp, #104]
   14f74:	ldr	w0, [sp, #100]
   14f78:	cmp	w0, #0x0
   14f7c:	b.eq	14f94 <__fixtfdi@@GCC_3.0+0x320>  // b.none
   14f80:	ldr	w0, [sp, #124]
   14f84:	orr	w0, w0, #0x10
   14f88:	str	w0, [sp, #124]
   14f8c:	b	14f94 <__fixtfdi@@GCC_3.0+0x320>
   14f90:	nop
   14f94:	ldrsw	x0, [sp, #124]
   14f98:	cmp	x0, #0x0
   14f9c:	b.eq	14fa8 <__fixtfdi@@GCC_3.0+0x334>  // b.none
   14fa0:	ldr	w0, [sp, #124]
   14fa4:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   14fa8:	ldr	x0, [sp, #104]
   14fac:	ldp	x29, x30, [sp], #128
   14fb0:	ret

0000000000014fb4 <__fixunstfdi@@GCC_3.0>:
   14fb4:	stp	x29, x30, [sp, #-112]!
   14fb8:	mov	x29, sp
   14fbc:	str	q0, [sp, #16]
   14fc0:	str	wzr, [sp, #104]
   14fc4:	str	xzr, [sp, #80]
   14fc8:	mrs	x0, fpcr
   14fcc:	str	x0, [sp, #80]
   14fd0:	ldr	q0, [sp, #16]
   14fd4:	str	q0, [sp, #32]
   14fd8:	ldr	x0, [sp, #32]
   14fdc:	str	x0, [sp, #96]
   14fe0:	ldr	x0, [sp, #40]
   14fe4:	ubfx	x0, x0, #0, #48
   14fe8:	str	x0, [sp, #72]
   14fec:	ldrh	w0, [sp, #46]
   14ff0:	ubfx	x0, x0, #0, #15
   14ff4:	and	w0, w0, #0xffff
   14ff8:	and	x0, x0, #0xffff
   14ffc:	str	x0, [sp, #64]
   15000:	ldrb	w0, [sp, #47]
   15004:	ubfx	x0, x0, #7, #1
   15008:	and	w0, w0, #0xff
   1500c:	and	x0, x0, #0xff
   15010:	str	x0, [sp, #56]
   15014:	ldr	x1, [sp, #64]
   15018:	mov	x0, #0x3ffe                	// #16382
   1501c:	cmp	x1, x0
   15020:	b.gt	15068 <__fixunstfdi@@GCC_3.0+0xb4>
   15024:	str	xzr, [sp, #88]
   15028:	ldr	x0, [sp, #64]
   1502c:	cmp	x0, #0x0
   15030:	b.ne	15058 <__fixunstfdi@@GCC_3.0+0xa4>  // b.any
   15034:	ldr	x1, [sp, #72]
   15038:	ldr	x0, [sp, #96]
   1503c:	orr	x0, x1, x0
   15040:	cmp	x0, #0x0
   15044:	b.eq	1522c <__fixunstfdi@@GCC_3.0+0x278>  // b.none
   15048:	ldr	w0, [sp, #104]
   1504c:	orr	w0, w0, #0x10
   15050:	str	w0, [sp, #104]
   15054:	b	1522c <__fixunstfdi@@GCC_3.0+0x278>
   15058:	ldr	w0, [sp, #104]
   1505c:	orr	w0, w0, #0x10
   15060:	str	w0, [sp, #104]
   15064:	b	1522c <__fixunstfdi@@GCC_3.0+0x278>
   15068:	ldr	x0, [sp, #56]
   1506c:	cmp	x0, #0x0
   15070:	b.eq	1507c <__fixunstfdi@@GCC_3.0+0xc8>  // b.none
   15074:	mov	x0, #0x403e                	// #16446
   15078:	b	15080 <__fixunstfdi@@GCC_3.0+0xcc>
   1507c:	mov	x0, #0x403f                	// #16447
   15080:	ldr	x1, [sp, #64]
   15084:	cmp	x0, x1
   15088:	b.le	15098 <__fixunstfdi@@GCC_3.0+0xe4>
   1508c:	ldr	x0, [sp, #56]
   15090:	cmp	x0, #0x0
   15094:	b.eq	150c4 <__fixunstfdi@@GCC_3.0+0x110>  // b.none
   15098:	str	xzr, [sp, #88]
   1509c:	ldr	x0, [sp, #56]
   150a0:	cmp	x0, #0x0
   150a4:	b.ne	150b4 <__fixunstfdi@@GCC_3.0+0x100>  // b.any
   150a8:	ldr	x0, [sp, #88]
   150ac:	mvn	x0, x0
   150b0:	str	x0, [sp, #88]
   150b4:	ldr	w0, [sp, #104]
   150b8:	orr	w0, w0, #0x1
   150bc:	str	w0, [sp, #104]
   150c0:	b	1522c <__fixunstfdi@@GCC_3.0+0x278>
   150c4:	str	wzr, [sp, #108]
   150c8:	ldr	x0, [sp, #72]
   150cc:	orr	x0, x0, #0x1000000000000
   150d0:	str	x0, [sp, #72]
   150d4:	ldr	x1, [sp, #64]
   150d8:	mov	x0, #0x406e                	// #16494
   150dc:	cmp	x1, x0
   150e0:	b.le	1510c <__fixunstfdi@@GCC_3.0+0x158>
   150e4:	ldr	x0, [sp, #96]
   150e8:	str	x0, [sp, #88]
   150ec:	ldr	x0, [sp, #64]
   150f0:	mov	w1, w0
   150f4:	mov	w0, #0xffffbf91            	// #-16495
   150f8:	add	w0, w1, w0
   150fc:	ldr	x1, [sp, #88]
   15100:	lsl	x0, x1, x0
   15104:	str	x0, [sp, #88]
   15108:	b	15214 <__fixunstfdi@@GCC_3.0+0x260>
   1510c:	mov	x1, #0x406f                	// #16495
   15110:	ldr	x0, [sp, #64]
   15114:	sub	x0, x1, x0
   15118:	cmp	x0, #0x3f
   1511c:	b.gt	151a0 <__fixunstfdi@@GCC_3.0+0x1ec>
   15120:	ldr	x0, [sp, #64]
   15124:	mov	w1, w0
   15128:	mov	w0, #0xffffbfd1            	// #-16431
   1512c:	add	w0, w1, w0
   15130:	ldr	x1, [sp, #96]
   15134:	lsl	x0, x1, x0
   15138:	cmp	x0, #0x0
   1513c:	cset	w0, ne  // ne = any
   15140:	and	w0, w0, #0xff
   15144:	str	w0, [sp, #108]
   15148:	ldr	x0, [sp, #64]
   1514c:	mov	w1, w0
   15150:	mov	w0, #0xffffbfd1            	// #-16431
   15154:	add	w0, w1, w0
   15158:	ldr	x1, [sp, #72]
   1515c:	lsl	x1, x1, x0
   15160:	ldr	x0, [sp, #64]
   15164:	mov	w2, w0
   15168:	mov	w0, #0x406f                	// #16495
   1516c:	sub	w0, w0, w2
   15170:	ldr	x2, [sp, #96]
   15174:	lsr	x0, x2, x0
   15178:	orr	x0, x1, x0
   1517c:	str	x0, [sp, #96]
   15180:	ldr	x0, [sp, #64]
   15184:	mov	w1, w0
   15188:	mov	w0, #0x406f                	// #16495
   1518c:	sub	w0, w0, w1
   15190:	ldr	x1, [sp, #72]
   15194:	lsr	x0, x1, x0
   15198:	str	x0, [sp, #72]
   1519c:	b	1520c <__fixunstfdi@@GCC_3.0+0x258>
   151a0:	mov	x1, #0x406f                	// #16495
   151a4:	ldr	x0, [sp, #64]
   151a8:	sub	x0, x1, x0
   151ac:	cmp	x0, #0x40
   151b0:	b.eq	151d0 <__fixunstfdi@@GCC_3.0+0x21c>  // b.none
   151b4:	ldr	x0, [sp, #64]
   151b8:	mov	w1, w0
   151bc:	mov	w0, #0xffffc011            	// #-16367
   151c0:	add	w0, w1, w0
   151c4:	ldr	x1, [sp, #72]
   151c8:	lsl	x0, x1, x0
   151cc:	b	151d4 <__fixunstfdi@@GCC_3.0+0x220>
   151d0:	mov	x0, #0x0                   	// #0
   151d4:	ldr	x1, [sp, #96]
   151d8:	orr	x0, x0, x1
   151dc:	cmp	x0, #0x0
   151e0:	cset	w0, ne  // ne = any
   151e4:	and	w0, w0, #0xff
   151e8:	str	w0, [sp, #108]
   151ec:	ldr	x0, [sp, #64]
   151f0:	mov	w1, w0
   151f4:	mov	w0, #0x402f                	// #16431
   151f8:	sub	w0, w0, w1
   151fc:	ldr	x1, [sp, #72]
   15200:	lsr	x0, x1, x0
   15204:	str	x0, [sp, #96]
   15208:	str	xzr, [sp, #72]
   1520c:	ldr	x0, [sp, #96]
   15210:	str	x0, [sp, #88]
   15214:	ldr	w0, [sp, #108]
   15218:	cmp	w0, #0x0
   1521c:	b.eq	1522c <__fixunstfdi@@GCC_3.0+0x278>  // b.none
   15220:	ldr	w0, [sp, #104]
   15224:	orr	w0, w0, #0x10
   15228:	str	w0, [sp, #104]
   1522c:	ldrsw	x0, [sp, #104]
   15230:	cmp	x0, #0x0
   15234:	b.eq	15240 <__fixunstfdi@@GCC_3.0+0x28c>  // b.none
   15238:	ldr	w0, [sp, #104]
   1523c:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   15240:	ldr	x0, [sp, #88]
   15244:	ldp	x29, x30, [sp], #112
   15248:	ret

000000000001524c <__floatditf@@GCC_3.0>:
   1524c:	sub	sp, sp, #0x60
   15250:	str	x0, [sp, #8]
   15254:	ldr	x0, [sp, #8]
   15258:	cmp	x0, #0x0
   1525c:	b.eq	15364 <__floatditf@@GCC_3.0+0x118>  // b.none
   15260:	ldr	x0, [sp, #8]
   15264:	str	x0, [sp, #32]
   15268:	ldr	x0, [sp, #8]
   1526c:	lsr	x0, x0, #63
   15270:	and	w0, w0, #0xff
   15274:	and	x0, x0, #0xff
   15278:	str	x0, [sp, #40]
   1527c:	ldr	x0, [sp, #40]
   15280:	cmp	x0, #0x0
   15284:	b.eq	15294 <__floatditf@@GCC_3.0+0x48>  // b.none
   15288:	ldr	x0, [sp, #32]
   1528c:	neg	x0, x0
   15290:	str	x0, [sp, #32]
   15294:	ldr	x0, [sp, #32]
   15298:	clz	x0, x0
   1529c:	str	w0, [sp, #52]
   152a0:	mov	w1, #0x403e                	// #16446
   152a4:	ldr	w0, [sp, #52]
   152a8:	sub	w0, w1, w0
   152ac:	sxtw	x0, w0
   152b0:	str	x0, [sp, #56]
   152b4:	ldr	x0, [sp, #32]
   152b8:	str	x0, [sp, #64]
   152bc:	str	xzr, [sp, #72]
   152c0:	mov	x1, #0x406f                	// #16495
   152c4:	ldr	x0, [sp, #56]
   152c8:	sub	x0, x1, x0
   152cc:	cmp	x0, #0x0
   152d0:	b.le	15374 <__floatditf@@GCC_3.0+0x128>
   152d4:	mov	x1, #0x406f                	// #16495
   152d8:	ldr	x0, [sp, #56]
   152dc:	sub	x0, x1, x0
   152e0:	cmp	x0, #0x3f
   152e4:	b.gt	15340 <__floatditf@@GCC_3.0+0xf4>
   152e8:	ldr	x0, [sp, #56]
   152ec:	mov	w1, w0
   152f0:	mov	w0, #0x406f                	// #16495
   152f4:	sub	w0, w0, w1
   152f8:	ldr	x1, [sp, #72]
   152fc:	lsl	x1, x1, x0
   15300:	ldr	x0, [sp, #56]
   15304:	mov	w2, w0
   15308:	mov	w0, #0xffffbfd1            	// #-16431
   1530c:	add	w0, w2, w0
   15310:	ldr	x2, [sp, #64]
   15314:	lsr	x0, x2, x0
   15318:	orr	x0, x1, x0
   1531c:	str	x0, [sp, #72]
   15320:	ldr	x0, [sp, #56]
   15324:	mov	w1, w0
   15328:	mov	w0, #0x406f                	// #16495
   1532c:	sub	w0, w0, w1
   15330:	ldr	x1, [sp, #64]
   15334:	lsl	x0, x1, x0
   15338:	str	x0, [sp, #64]
   1533c:	b	15374 <__floatditf@@GCC_3.0+0x128>
   15340:	ldr	x0, [sp, #56]
   15344:	mov	w1, w0
   15348:	mov	w0, #0x402f                	// #16431
   1534c:	sub	w0, w0, w1
   15350:	ldr	x1, [sp, #64]
   15354:	lsl	x0, x1, x0
   15358:	str	x0, [sp, #72]
   1535c:	str	xzr, [sp, #64]
   15360:	b	15374 <__floatditf@@GCC_3.0+0x128>
   15364:	str	xzr, [sp, #40]
   15368:	str	xzr, [sp, #56]
   1536c:	str	xzr, [sp, #64]
   15370:	str	xzr, [sp, #72]
   15374:	ldr	x0, [sp, #64]
   15378:	str	x0, [sp, #16]
   1537c:	ldr	x0, [sp, #72]
   15380:	and	x1, x0, #0xffffffffffff
   15384:	ldr	x0, [sp, #24]
   15388:	bfxil	x0, x1, #0, #48
   1538c:	str	x0, [sp, #24]
   15390:	ldr	x0, [sp, #56]
   15394:	and	w0, w0, #0x7fff
   15398:	and	w1, w0, #0xffff
   1539c:	ldrh	w0, [sp, #30]
   153a0:	bfxil	w0, w1, #0, #15
   153a4:	strh	w0, [sp, #30]
   153a8:	ldr	x0, [sp, #40]
   153ac:	and	w0, w0, #0x1
   153b0:	and	w1, w0, #0xff
   153b4:	ldrb	w0, [sp, #31]
   153b8:	bfi	w0, w1, #7, #1
   153bc:	strb	w0, [sp, #31]
   153c0:	ldr	q0, [sp, #16]
   153c4:	str	q0, [sp, #80]
   153c8:	ldr	q0, [sp, #80]
   153cc:	add	sp, sp, #0x60
   153d0:	ret

00000000000153d4 <__floatunditf@@GCC_4.2.0>:
   153d4:	sub	sp, sp, #0x60
   153d8:	str	x0, [sp, #8]
   153dc:	ldr	x0, [sp, #8]
   153e0:	cmp	x0, #0x0
   153e4:	b.eq	154dc <__floatunditf@@GCC_4.2.0+0x108>  // b.none
   153e8:	ldr	x0, [sp, #8]
   153ec:	str	x0, [sp, #32]
   153f0:	str	xzr, [sp, #40]
   153f4:	ldr	x0, [sp, #40]
   153f8:	cmp	x0, #0x0
   153fc:	b.eq	1540c <__floatunditf@@GCC_4.2.0+0x38>  // b.none
   15400:	ldr	x0, [sp, #32]
   15404:	neg	x0, x0
   15408:	str	x0, [sp, #32]
   1540c:	ldr	x0, [sp, #32]
   15410:	clz	x0, x0
   15414:	str	w0, [sp, #52]
   15418:	mov	w1, #0x403e                	// #16446
   1541c:	ldr	w0, [sp, #52]
   15420:	sub	w0, w1, w0
   15424:	sxtw	x0, w0
   15428:	str	x0, [sp, #56]
   1542c:	ldr	x0, [sp, #32]
   15430:	str	x0, [sp, #64]
   15434:	str	xzr, [sp, #72]
   15438:	mov	x1, #0x406f                	// #16495
   1543c:	ldr	x0, [sp, #56]
   15440:	sub	x0, x1, x0
   15444:	cmp	x0, #0x0
   15448:	b.le	154ec <__floatunditf@@GCC_4.2.0+0x118>
   1544c:	mov	x1, #0x406f                	// #16495
   15450:	ldr	x0, [sp, #56]
   15454:	sub	x0, x1, x0
   15458:	cmp	x0, #0x3f
   1545c:	b.gt	154b8 <__floatunditf@@GCC_4.2.0+0xe4>
   15460:	ldr	x0, [sp, #56]
   15464:	mov	w1, w0
   15468:	mov	w0, #0x406f                	// #16495
   1546c:	sub	w0, w0, w1
   15470:	ldr	x1, [sp, #72]
   15474:	lsl	x1, x1, x0
   15478:	ldr	x0, [sp, #56]
   1547c:	mov	w2, w0
   15480:	mov	w0, #0xffffbfd1            	// #-16431
   15484:	add	w0, w2, w0
   15488:	ldr	x2, [sp, #64]
   1548c:	lsr	x0, x2, x0
   15490:	orr	x0, x1, x0
   15494:	str	x0, [sp, #72]
   15498:	ldr	x0, [sp, #56]
   1549c:	mov	w1, w0
   154a0:	mov	w0, #0x406f                	// #16495
   154a4:	sub	w0, w0, w1
   154a8:	ldr	x1, [sp, #64]
   154ac:	lsl	x0, x1, x0
   154b0:	str	x0, [sp, #64]
   154b4:	b	154ec <__floatunditf@@GCC_4.2.0+0x118>
   154b8:	ldr	x0, [sp, #56]
   154bc:	mov	w1, w0
   154c0:	mov	w0, #0x402f                	// #16431
   154c4:	sub	w0, w0, w1
   154c8:	ldr	x1, [sp, #64]
   154cc:	lsl	x0, x1, x0
   154d0:	str	x0, [sp, #72]
   154d4:	str	xzr, [sp, #64]
   154d8:	b	154ec <__floatunditf@@GCC_4.2.0+0x118>
   154dc:	str	xzr, [sp, #40]
   154e0:	str	xzr, [sp, #56]
   154e4:	str	xzr, [sp, #64]
   154e8:	str	xzr, [sp, #72]
   154ec:	ldr	x0, [sp, #64]
   154f0:	str	x0, [sp, #16]
   154f4:	ldr	x0, [sp, #72]
   154f8:	and	x1, x0, #0xffffffffffff
   154fc:	ldr	x0, [sp, #24]
   15500:	bfxil	x0, x1, #0, #48
   15504:	str	x0, [sp, #24]
   15508:	ldr	x0, [sp, #56]
   1550c:	and	w0, w0, #0x7fff
   15510:	and	w1, w0, #0xffff
   15514:	ldrh	w0, [sp, #30]
   15518:	bfxil	w0, w1, #0, #15
   1551c:	strh	w0, [sp, #30]
   15520:	ldr	x0, [sp, #40]
   15524:	and	w0, w0, #0x1
   15528:	and	w1, w0, #0xff
   1552c:	ldrb	w0, [sp, #31]
   15530:	bfi	w0, w1, #7, #1
   15534:	strb	w0, [sp, #31]
   15538:	ldr	q0, [sp, #16]
   1553c:	str	q0, [sp, #80]
   15540:	ldr	q0, [sp, #80]
   15544:	add	sp, sp, #0x60
   15548:	ret

000000000001554c <__fixtfti@@GCC_3.0>:
   1554c:	stp	x29, x30, [sp, #-144]!
   15550:	mov	x29, sp
   15554:	str	q0, [sp, #16]
   15558:	str	wzr, [sp, #140]
   1555c:	str	xzr, [sp, #80]
   15560:	mrs	x0, fpcr
   15564:	str	x0, [sp, #80]
   15568:	ldr	q0, [sp, #16]
   1556c:	str	q0, [sp, #32]
   15570:	ldr	x0, [sp, #32]
   15574:	str	x0, [sp, #128]
   15578:	ldr	x0, [sp, #40]
   1557c:	ubfx	x0, x0, #0, #48
   15580:	str	x0, [sp, #120]
   15584:	ldrh	w0, [sp, #46]
   15588:	ubfx	x0, x0, #0, #15
   1558c:	and	w0, w0, #0xffff
   15590:	and	x0, x0, #0xffff
   15594:	str	x0, [sp, #72]
   15598:	ldrb	w0, [sp, #47]
   1559c:	ubfx	x0, x0, #7, #1
   155a0:	and	w0, w0, #0xff
   155a4:	and	x0, x0, #0xff
   155a8:	str	x0, [sp, #64]
   155ac:	ldr	x1, [sp, #72]
   155b0:	mov	x0, #0x3ffe                	// #16382
   155b4:	cmp	x1, x0
   155b8:	b.gt	15600 <__fixtfti@@GCC_3.0+0xb4>
   155bc:	stp	xzr, xzr, [sp, #96]
   155c0:	ldr	x0, [sp, #72]
   155c4:	cmp	x0, #0x0
   155c8:	b.ne	155f0 <__fixtfti@@GCC_3.0+0xa4>  // b.any
   155cc:	ldr	x1, [sp, #120]
   155d0:	ldr	x0, [sp, #128]
   155d4:	orr	x0, x1, x0
   155d8:	cmp	x0, #0x0
   155dc:	b.eq	1592c <__fixtfti@@GCC_3.0+0x3e0>  // b.none
   155e0:	ldr	w0, [sp, #140]
   155e4:	orr	w0, w0, #0x10
   155e8:	str	w0, [sp, #140]
   155ec:	b	1592c <__fixtfti@@GCC_3.0+0x3e0>
   155f0:	ldr	w0, [sp, #140]
   155f4:	orr	w0, w0, #0x10
   155f8:	str	w0, [sp, #140]
   155fc:	b	1592c <__fixtfti@@GCC_3.0+0x3e0>
   15600:	ldr	x1, [sp, #72]
   15604:	mov	x0, #0x407d                	// #16509
   15608:	cmp	x1, x0
   1560c:	b.le	156cc <__fixtfti@@GCC_3.0+0x180>
   15610:	mov	x0, #0x1                   	// #1
   15614:	mov	x1, #0x0                   	// #0
   15618:	stp	x0, x1, [sp, #96]
   1561c:	ldr	x0, [sp, #96]
   15620:	lsl	x0, x0, #63
   15624:	str	x0, [sp, #104]
   15628:	str	xzr, [sp, #96]
   1562c:	mov	x1, #0x1                   	// #1
   15630:	ldr	x0, [sp, #64]
   15634:	sub	x0, x1, x0
   15638:	mov	x2, x0
   1563c:	asr	x0, x0, #63
   15640:	mov	x3, x0
   15644:	ldp	x0, x1, [sp, #96]
   15648:	subs	x4, x0, x2
   1564c:	sbc	x0, x1, x3
   15650:	mov	x14, x4
   15654:	mov	x15, x0
   15658:	stp	x14, x15, [sp, #96]
   1565c:	ldr	x0, [sp, #64]
   15660:	cmp	x0, #0x0
   15664:	b.eq	156bc <__fixtfti@@GCC_3.0+0x170>  // b.none
   15668:	ldr	x1, [sp, #72]
   1566c:	mov	x0, #0x407e                	// #16510
   15670:	cmp	x1, x0
   15674:	b.ne	156bc <__fixtfti@@GCC_3.0+0x170>  // b.any
   15678:	str	wzr, [sp, #60]
   1567c:	ldr	x1, [sp, #120]
   15680:	ldr	x0, [sp, #128]
   15684:	orr	x0, x1, x0
   15688:	cmp	x0, #0x0
   1568c:	b.eq	156a0 <__fixtfti@@GCC_3.0+0x154>  // b.none
   15690:	ldr	w0, [sp, #140]
   15694:	orr	w0, w0, #0x1
   15698:	str	w0, [sp, #140]
   1569c:	b	15928 <__fixtfti@@GCC_3.0+0x3dc>
   156a0:	ldr	w0, [sp, #60]
   156a4:	cmp	w0, #0x0
   156a8:	b.eq	15928 <__fixtfti@@GCC_3.0+0x3dc>  // b.none
   156ac:	ldr	w0, [sp, #140]
   156b0:	orr	w0, w0, #0x10
   156b4:	str	w0, [sp, #140]
   156b8:	b	15928 <__fixtfti@@GCC_3.0+0x3dc>
   156bc:	ldr	w0, [sp, #140]
   156c0:	orr	w0, w0, #0x1
   156c4:	str	w0, [sp, #140]
   156c8:	b	1592c <__fixtfti@@GCC_3.0+0x3e0>
   156cc:	str	wzr, [sp, #92]
   156d0:	ldr	x0, [sp, #120]
   156d4:	orr	x0, x0, #0x1000000000000
   156d8:	str	x0, [sp, #120]
   156dc:	ldr	x1, [sp, #72]
   156e0:	mov	x0, #0x406e                	// #16494
   156e4:	cmp	x1, x0
   156e8:	b.le	157a4 <__fixtfti@@GCC_3.0+0x258>
   156ec:	ldr	x0, [sp, #120]
   156f0:	str	x0, [sp, #96]
   156f4:	str	xzr, [sp, #104]
   156f8:	ldr	x0, [sp, #96]
   156fc:	str	x0, [sp, #104]
   15700:	str	xzr, [sp, #96]
   15704:	ldr	x0, [sp, #128]
   15708:	mov	x12, x0
   1570c:	mov	x13, #0x0                   	// #0
   15710:	ldp	x0, x1, [sp, #96]
   15714:	mov	x2, x12
   15718:	adds	x2, x0, x2
   1571c:	mov	x3, x13
   15720:	adc	x0, x1, x3
   15724:	mov	x10, x2
   15728:	mov	x11, x0
   1572c:	stp	x10, x11, [sp, #96]
   15730:	ldr	x0, [sp, #72]
   15734:	mov	w1, w0
   15738:	mov	w0, #0xffffbf91            	// #-16495
   1573c:	add	w0, w1, w0
   15740:	sub	w1, w0, #0x40
   15744:	ldr	x2, [sp, #96]
   15748:	lsl	x2, x2, x1
   1574c:	mov	x7, #0x0                   	// #0
   15750:	ldr	x3, [sp, #96]
   15754:	lsr	x6, x3, #1
   15758:	mov	w3, #0x3f                  	// #63
   1575c:	sub	w3, w3, w0
   15760:	lsr	x3, x6, x3
   15764:	ldr	x6, [sp, #104]
   15768:	lsl	x6, x6, x0
   1576c:	orr	x3, x6, x3
   15770:	str	x3, [sp, #104]
   15774:	ldr	x3, [sp, #96]
   15778:	lsl	x0, x3, x0
   1577c:	str	x0, [sp, #96]
   15780:	ldr	x0, [sp, #104]
   15784:	cmp	w1, #0x0
   15788:	csel	x0, x0, x2, lt  // lt = tstop
   1578c:	str	x0, [sp, #104]
   15790:	ldr	x0, [sp, #96]
   15794:	cmp	w1, #0x0
   15798:	csel	x0, x0, x7, lt  // lt = tstop
   1579c:	str	x0, [sp, #96]
   157a0:	b	158e8 <__fixtfti@@GCC_3.0+0x39c>
   157a4:	mov	x1, #0x406f                	// #16495
   157a8:	ldr	x0, [sp, #72]
   157ac:	sub	x0, x1, x0
   157b0:	cmp	x0, #0x3f
   157b4:	b.gt	15838 <__fixtfti@@GCC_3.0+0x2ec>
   157b8:	ldr	x0, [sp, #72]
   157bc:	mov	w1, w0
   157c0:	mov	w0, #0xffffbfd1            	// #-16431
   157c4:	add	w0, w1, w0
   157c8:	ldr	x1, [sp, #128]
   157cc:	lsl	x0, x1, x0
   157d0:	cmp	x0, #0x0
   157d4:	cset	w0, ne  // ne = any
   157d8:	and	w0, w0, #0xff
   157dc:	str	w0, [sp, #92]
   157e0:	ldr	x0, [sp, #72]
   157e4:	mov	w1, w0
   157e8:	mov	w0, #0xffffbfd1            	// #-16431
   157ec:	add	w0, w1, w0
   157f0:	ldr	x1, [sp, #120]
   157f4:	lsl	x1, x1, x0
   157f8:	ldr	x0, [sp, #72]
   157fc:	mov	w2, w0
   15800:	mov	w0, #0x406f                	// #16495
   15804:	sub	w0, w0, w2
   15808:	ldr	x2, [sp, #128]
   1580c:	lsr	x0, x2, x0
   15810:	orr	x0, x1, x0
   15814:	str	x0, [sp, #128]
   15818:	ldr	x0, [sp, #72]
   1581c:	mov	w1, w0
   15820:	mov	w0, #0x406f                	// #16495
   15824:	sub	w0, w0, w1
   15828:	ldr	x1, [sp, #120]
   1582c:	lsr	x0, x1, x0
   15830:	str	x0, [sp, #120]
   15834:	b	158a4 <__fixtfti@@GCC_3.0+0x358>
   15838:	mov	x1, #0x406f                	// #16495
   1583c:	ldr	x0, [sp, #72]
   15840:	sub	x0, x1, x0
   15844:	cmp	x0, #0x40
   15848:	b.eq	15868 <__fixtfti@@GCC_3.0+0x31c>  // b.none
   1584c:	ldr	x0, [sp, #72]
   15850:	mov	w1, w0
   15854:	mov	w0, #0xffffc011            	// #-16367
   15858:	add	w0, w1, w0
   1585c:	ldr	x1, [sp, #120]
   15860:	lsl	x0, x1, x0
   15864:	b	1586c <__fixtfti@@GCC_3.0+0x320>
   15868:	mov	x0, #0x0                   	// #0
   1586c:	ldr	x1, [sp, #128]
   15870:	orr	x0, x0, x1
   15874:	cmp	x0, #0x0
   15878:	cset	w0, ne  // ne = any
   1587c:	and	w0, w0, #0xff
   15880:	str	w0, [sp, #92]
   15884:	ldr	x0, [sp, #72]
   15888:	mov	w1, w0
   1588c:	mov	w0, #0x402f                	// #16431
   15890:	sub	w0, w0, w1
   15894:	ldr	x1, [sp, #120]
   15898:	lsr	x0, x1, x0
   1589c:	str	x0, [sp, #128]
   158a0:	str	xzr, [sp, #120]
   158a4:	ldr	x0, [sp, #120]
   158a8:	str	x0, [sp, #96]
   158ac:	str	xzr, [sp, #104]
   158b0:	ldr	x0, [sp, #96]
   158b4:	str	x0, [sp, #104]
   158b8:	str	xzr, [sp, #96]
   158bc:	ldr	x0, [sp, #128]
   158c0:	mov	x8, x0
   158c4:	mov	x9, #0x0                   	// #0
   158c8:	ldp	x0, x1, [sp, #96]
   158cc:	mov	x2, x8
   158d0:	adds	x2, x0, x2
   158d4:	mov	x3, x9
   158d8:	adc	x0, x1, x3
   158dc:	mov	x6, x2
   158e0:	mov	x7, x0
   158e4:	stp	x6, x7, [sp, #96]
   158e8:	ldr	x0, [sp, #64]
   158ec:	cmp	x0, #0x0
   158f0:	b.eq	1590c <__fixtfti@@GCC_3.0+0x3c0>  // b.none
   158f4:	ldp	x0, x1, [sp, #96]
   158f8:	negs	x2, x0
   158fc:	ngc	x0, x1
   15900:	mov	x4, x2
   15904:	mov	x5, x0
   15908:	stp	x4, x5, [sp, #96]
   1590c:	ldr	w0, [sp, #92]
   15910:	cmp	w0, #0x0
   15914:	b.eq	1592c <__fixtfti@@GCC_3.0+0x3e0>  // b.none
   15918:	ldr	w0, [sp, #140]
   1591c:	orr	w0, w0, #0x10
   15920:	str	w0, [sp, #140]
   15924:	b	1592c <__fixtfti@@GCC_3.0+0x3e0>
   15928:	nop
   1592c:	ldrsw	x0, [sp, #140]
   15930:	cmp	x0, #0x0
   15934:	b.eq	15940 <__fixtfti@@GCC_3.0+0x3f4>  // b.none
   15938:	ldr	w0, [sp, #140]
   1593c:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   15940:	ldp	x0, x1, [sp, #96]
   15944:	ldp	x29, x30, [sp], #144
   15948:	ret

000000000001594c <__fixunstfti@@GCC_3.0>:
   1594c:	stp	x29, x30, [sp, #-128]!
   15950:	mov	x29, sp
   15954:	str	q0, [sp, #16]
   15958:	str	wzr, [sp, #108]
   1595c:	str	xzr, [sp, #64]
   15960:	mrs	x0, fpcr
   15964:	str	x0, [sp, #64]
   15968:	ldr	q0, [sp, #16]
   1596c:	str	q0, [sp, #32]
   15970:	ldr	x0, [sp, #32]
   15974:	str	x0, [sp, #120]
   15978:	ldr	x0, [sp, #40]
   1597c:	ubfx	x0, x0, #0, #48
   15980:	str	x0, [sp, #112]
   15984:	ldrh	w0, [sp, #46]
   15988:	ubfx	x0, x0, #0, #15
   1598c:	and	w0, w0, #0xffff
   15990:	and	x0, x0, #0xffff
   15994:	str	x0, [sp, #56]
   15998:	ldrb	w0, [sp, #47]
   1599c:	ubfx	x0, x0, #7, #1
   159a0:	and	w0, w0, #0xff
   159a4:	and	x0, x0, #0xff
   159a8:	str	x0, [sp, #48]
   159ac:	ldr	x1, [sp, #56]
   159b0:	mov	x0, #0x3ffe                	// #16382
   159b4:	cmp	x1, x0
   159b8:	b.gt	15a00 <__fixunstfti@@GCC_3.0+0xb4>
   159bc:	stp	xzr, xzr, [sp, #80]
   159c0:	ldr	x0, [sp, #56]
   159c4:	cmp	x0, #0x0
   159c8:	b.ne	159f0 <__fixunstfti@@GCC_3.0+0xa4>  // b.any
   159cc:	ldr	x1, [sp, #112]
   159d0:	ldr	x0, [sp, #120]
   159d4:	orr	x0, x1, x0
   159d8:	cmp	x0, #0x0
   159dc:	b.eq	15c9c <__fixunstfti@@GCC_3.0+0x350>  // b.none
   159e0:	ldr	w0, [sp, #108]
   159e4:	orr	w0, w0, #0x10
   159e8:	str	w0, [sp, #108]
   159ec:	b	15c9c <__fixunstfti@@GCC_3.0+0x350>
   159f0:	ldr	w0, [sp, #108]
   159f4:	orr	w0, w0, #0x10
   159f8:	str	w0, [sp, #108]
   159fc:	b	15c9c <__fixunstfti@@GCC_3.0+0x350>
   15a00:	ldr	x0, [sp, #48]
   15a04:	cmp	x0, #0x0
   15a08:	b.eq	15a14 <__fixunstfti@@GCC_3.0+0xc8>  // b.none
   15a0c:	mov	x0, #0x407e                	// #16510
   15a10:	b	15a18 <__fixunstfti@@GCC_3.0+0xcc>
   15a14:	mov	x0, #0x407f                	// #16511
   15a18:	ldr	x1, [sp, #56]
   15a1c:	cmp	x0, x1
   15a20:	b.le	15a30 <__fixunstfti@@GCC_3.0+0xe4>
   15a24:	ldr	x0, [sp, #48]
   15a28:	cmp	x0, #0x0
   15a2c:	b.eq	15a68 <__fixunstfti@@GCC_3.0+0x11c>  // b.none
   15a30:	stp	xzr, xzr, [sp, #80]
   15a34:	ldr	x0, [sp, #48]
   15a38:	cmp	x0, #0x0
   15a3c:	b.ne	15a58 <__fixunstfti@@GCC_3.0+0x10c>  // b.any
   15a40:	ldr	x0, [sp, #80]
   15a44:	mvn	x0, x0
   15a48:	str	x0, [sp, #80]
   15a4c:	ldr	x0, [sp, #88]
   15a50:	mvn	x0, x0
   15a54:	str	x0, [sp, #88]
   15a58:	ldr	w0, [sp, #108]
   15a5c:	orr	w0, w0, #0x1
   15a60:	str	w0, [sp, #108]
   15a64:	b	15c9c <__fixunstfti@@GCC_3.0+0x350>
   15a68:	str	wzr, [sp, #76]
   15a6c:	ldr	x0, [sp, #112]
   15a70:	orr	x0, x0, #0x1000000000000
   15a74:	str	x0, [sp, #112]
   15a78:	ldr	x1, [sp, #56]
   15a7c:	mov	x0, #0x406e                	// #16494
   15a80:	cmp	x1, x0
   15a84:	b.le	15b40 <__fixunstfti@@GCC_3.0+0x1f4>
   15a88:	ldr	x0, [sp, #112]
   15a8c:	str	x0, [sp, #80]
   15a90:	str	xzr, [sp, #88]
   15a94:	ldr	x0, [sp, #80]
   15a98:	str	x0, [sp, #88]
   15a9c:	str	xzr, [sp, #80]
   15aa0:	ldr	x0, [sp, #120]
   15aa4:	mov	x8, x0
   15aa8:	mov	x9, #0x0                   	// #0
   15aac:	ldp	x0, x1, [sp, #80]
   15ab0:	mov	x2, x8
   15ab4:	adds	x2, x0, x2
   15ab8:	mov	x3, x9
   15abc:	adc	x0, x1, x3
   15ac0:	mov	x6, x2
   15ac4:	mov	x7, x0
   15ac8:	stp	x6, x7, [sp, #80]
   15acc:	ldr	x0, [sp, #56]
   15ad0:	mov	w1, w0
   15ad4:	mov	w0, #0xffffbf91            	// #-16495
   15ad8:	add	w0, w1, w0
   15adc:	sub	w1, w0, #0x40
   15ae0:	ldr	x2, [sp, #80]
   15ae4:	lsl	x2, x2, x1
   15ae8:	mov	x5, #0x0                   	// #0
   15aec:	ldr	x3, [sp, #80]
   15af0:	lsr	x4, x3, #1
   15af4:	mov	w3, #0x3f                  	// #63
   15af8:	sub	w3, w3, w0
   15afc:	lsr	x3, x4, x3
   15b00:	ldr	x4, [sp, #88]
   15b04:	lsl	x4, x4, x0
   15b08:	orr	x3, x4, x3
   15b0c:	str	x3, [sp, #88]
   15b10:	ldr	x3, [sp, #80]
   15b14:	lsl	x0, x3, x0
   15b18:	str	x0, [sp, #80]
   15b1c:	ldr	x0, [sp, #88]
   15b20:	cmp	w1, #0x0
   15b24:	csel	x0, x0, x2, lt  // lt = tstop
   15b28:	str	x0, [sp, #88]
   15b2c:	ldr	x0, [sp, #80]
   15b30:	cmp	w1, #0x0
   15b34:	csel	x0, x0, x5, lt  // lt = tstop
   15b38:	str	x0, [sp, #80]
   15b3c:	b	15c84 <__fixunstfti@@GCC_3.0+0x338>
   15b40:	mov	x1, #0x406f                	// #16495
   15b44:	ldr	x0, [sp, #56]
   15b48:	sub	x0, x1, x0
   15b4c:	cmp	x0, #0x3f
   15b50:	b.gt	15bd4 <__fixunstfti@@GCC_3.0+0x288>
   15b54:	ldr	x0, [sp, #56]
   15b58:	mov	w1, w0
   15b5c:	mov	w0, #0xffffbfd1            	// #-16431
   15b60:	add	w0, w1, w0
   15b64:	ldr	x1, [sp, #120]
   15b68:	lsl	x0, x1, x0
   15b6c:	cmp	x0, #0x0
   15b70:	cset	w0, ne  // ne = any
   15b74:	and	w0, w0, #0xff
   15b78:	str	w0, [sp, #76]
   15b7c:	ldr	x0, [sp, #56]
   15b80:	mov	w1, w0
   15b84:	mov	w0, #0xffffbfd1            	// #-16431
   15b88:	add	w0, w1, w0
   15b8c:	ldr	x1, [sp, #112]
   15b90:	lsl	x1, x1, x0
   15b94:	ldr	x0, [sp, #56]
   15b98:	mov	w6, w0
   15b9c:	mov	w0, #0x406f                	// #16495
   15ba0:	sub	w0, w0, w6
   15ba4:	ldr	x6, [sp, #120]
   15ba8:	lsr	x0, x6, x0
   15bac:	orr	x0, x1, x0
   15bb0:	str	x0, [sp, #120]
   15bb4:	ldr	x0, [sp, #56]
   15bb8:	mov	w1, w0
   15bbc:	mov	w0, #0x406f                	// #16495
   15bc0:	sub	w0, w0, w1
   15bc4:	ldr	x1, [sp, #112]
   15bc8:	lsr	x0, x1, x0
   15bcc:	str	x0, [sp, #112]
   15bd0:	b	15c40 <__fixunstfti@@GCC_3.0+0x2f4>
   15bd4:	mov	x1, #0x406f                	// #16495
   15bd8:	ldr	x0, [sp, #56]
   15bdc:	sub	x0, x1, x0
   15be0:	cmp	x0, #0x40
   15be4:	b.eq	15c04 <__fixunstfti@@GCC_3.0+0x2b8>  // b.none
   15be8:	ldr	x0, [sp, #56]
   15bec:	mov	w1, w0
   15bf0:	mov	w0, #0xffffc011            	// #-16367
   15bf4:	add	w0, w1, w0
   15bf8:	ldr	x1, [sp, #112]
   15bfc:	lsl	x0, x1, x0
   15c00:	b	15c08 <__fixunstfti@@GCC_3.0+0x2bc>
   15c04:	mov	x0, #0x0                   	// #0
   15c08:	ldr	x1, [sp, #120]
   15c0c:	orr	x0, x0, x1
   15c10:	cmp	x0, #0x0
   15c14:	cset	w0, ne  // ne = any
   15c18:	and	w0, w0, #0xff
   15c1c:	str	w0, [sp, #76]
   15c20:	ldr	x0, [sp, #56]
   15c24:	mov	w1, w0
   15c28:	mov	w0, #0x402f                	// #16431
   15c2c:	sub	w0, w0, w1
   15c30:	ldr	x1, [sp, #112]
   15c34:	lsr	x0, x1, x0
   15c38:	str	x0, [sp, #120]
   15c3c:	str	xzr, [sp, #112]
   15c40:	ldr	x0, [sp, #112]
   15c44:	str	x0, [sp, #80]
   15c48:	str	xzr, [sp, #88]
   15c4c:	ldr	x0, [sp, #80]
   15c50:	str	x0, [sp, #88]
   15c54:	str	xzr, [sp, #80]
   15c58:	ldr	x0, [sp, #120]
   15c5c:	mov	x4, x0
   15c60:	mov	x5, #0x0                   	// #0
   15c64:	ldp	x0, x1, [sp, #80]
   15c68:	mov	x6, x4
   15c6c:	adds	x6, x0, x6
   15c70:	mov	x4, x5
   15c74:	adc	x0, x1, x4
   15c78:	mov	x2, x6
   15c7c:	mov	x3, x0
   15c80:	stp	x2, x3, [sp, #80]
   15c84:	ldr	w0, [sp, #76]
   15c88:	cmp	w0, #0x0
   15c8c:	b.eq	15c9c <__fixunstfti@@GCC_3.0+0x350>  // b.none
   15c90:	ldr	w0, [sp, #108]
   15c94:	orr	w0, w0, #0x10
   15c98:	str	w0, [sp, #108]
   15c9c:	ldrsw	x0, [sp, #108]
   15ca0:	cmp	x0, #0x0
   15ca4:	b.eq	15cb0 <__fixunstfti@@GCC_3.0+0x364>  // b.none
   15ca8:	ldr	w0, [sp, #108]
   15cac:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   15cb0:	ldp	x0, x1, [sp, #80]
   15cb4:	ldp	x29, x30, [sp], #128
   15cb8:	ret

0000000000015cbc <__floattitf@@GCC_3.0>:
   15cbc:	stp	x29, x30, [sp, #-160]!
   15cc0:	mov	x29, sp
   15cc4:	stp	x0, x1, [sp, #16]
   15cc8:	str	wzr, [sp, #124]
   15ccc:	str	xzr, [sp, #128]
   15cd0:	mrs	x0, fpcr
   15cd4:	str	x0, [sp, #128]
   15cd8:	ldr	x0, [sp, #16]
   15cdc:	ldr	x1, [sp, #24]
   15ce0:	orr	x0, x0, x1
   15ce4:	cmp	x0, #0x0
   15ce8:	b.eq	162f4 <__floattitf@@GCC_3.0+0x638>  // b.none
   15cec:	ldp	x0, x1, [sp, #16]
   15cf0:	stp	x0, x1, [sp, #96]
   15cf4:	ldr	x0, [sp, #24]
   15cf8:	lsr	x0, x0, #63
   15cfc:	and	w0, w0, #0xff
   15d00:	and	x0, x0, #0xff
   15d04:	str	x0, [sp, #136]
   15d08:	ldr	x0, [sp, #136]
   15d0c:	cmp	x0, #0x0
   15d10:	b.eq	15d2c <__floattitf@@GCC_3.0+0x70>  // b.none
   15d14:	ldp	x0, x1, [sp, #96]
   15d18:	negs	x18, x0
   15d1c:	ngc	x0, x1
   15d20:	mov	x8, x18
   15d24:	mov	x9, x0
   15d28:	stp	x8, x9, [sp, #96]
   15d2c:	ldr	x0, [sp, #104]
   15d30:	mov	x16, x0
   15d34:	mov	x17, #0x0                   	// #0
   15d38:	mov	x0, x16
   15d3c:	cmp	x0, #0x0
   15d40:	b.eq	15d60 <__floattitf@@GCC_3.0+0xa4>  // b.none
   15d44:	ldr	x0, [sp, #104]
   15d48:	mov	x14, x0
   15d4c:	mov	x15, #0x0                   	// #0
   15d50:	mov	x0, x14
   15d54:	clz	x0, x0
   15d58:	str	w0, [sp, #92]
   15d5c:	b	15d78 <__floattitf@@GCC_3.0+0xbc>
   15d60:	ldr	x0, [sp, #96]
   15d64:	clz	x0, x0
   15d68:	str	w0, [sp, #92]
   15d6c:	ldr	w0, [sp, #92]
   15d70:	add	w0, w0, #0x40
   15d74:	str	w0, [sp, #92]
   15d78:	mov	w1, #0x407e                	// #16510
   15d7c:	ldr	w0, [sp, #92]
   15d80:	sub	w0, w1, w0
   15d84:	sxtw	x0, w0
   15d88:	str	x0, [sp, #152]
   15d8c:	ldr	x1, [sp, #152]
   15d90:	mov	x0, #0x406f                	// #16495
   15d94:	cmp	x1, x0
   15d98:	b.gt	15e5c <__floattitf@@GCC_3.0+0x1a0>
   15d9c:	ldr	x0, [sp, #96]
   15da0:	str	x0, [sp, #144]
   15da4:	ldr	x0, [sp, #104]
   15da8:	mov	x10, x0
   15dac:	mov	x11, #0x0                   	// #0
   15db0:	mov	x0, x10
   15db4:	str	x0, [sp, #112]
   15db8:	mov	x1, #0x406f                	// #16495
   15dbc:	ldr	x0, [sp, #152]
   15dc0:	sub	x0, x1, x0
   15dc4:	cmp	x0, #0x0
   15dc8:	b.le	16304 <__floattitf@@GCC_3.0+0x648>
   15dcc:	mov	x1, #0x406f                	// #16495
   15dd0:	ldr	x0, [sp, #152]
   15dd4:	sub	x0, x1, x0
   15dd8:	cmp	x0, #0x3f
   15ddc:	b.gt	15e38 <__floattitf@@GCC_3.0+0x17c>
   15de0:	ldr	x0, [sp, #152]
   15de4:	mov	w1, w0
   15de8:	mov	w0, #0x406f                	// #16495
   15dec:	sub	w0, w0, w1
   15df0:	ldr	x1, [sp, #112]
   15df4:	lsl	x1, x1, x0
   15df8:	ldr	x0, [sp, #152]
   15dfc:	mov	w2, w0
   15e00:	mov	w0, #0xffffbfd1            	// #-16431
   15e04:	add	w0, w2, w0
   15e08:	ldr	x2, [sp, #144]
   15e0c:	lsr	x0, x2, x0
   15e10:	orr	x0, x1, x0
   15e14:	str	x0, [sp, #112]
   15e18:	ldr	x0, [sp, #152]
   15e1c:	mov	w1, w0
   15e20:	mov	w0, #0x406f                	// #16495
   15e24:	sub	w0, w0, w1
   15e28:	ldr	x1, [sp, #144]
   15e2c:	lsl	x0, x1, x0
   15e30:	str	x0, [sp, #144]
   15e34:	b	16304 <__floattitf@@GCC_3.0+0x648>
   15e38:	ldr	x0, [sp, #152]
   15e3c:	mov	w1, w0
   15e40:	mov	w0, #0x402f                	// #16431
   15e44:	sub	w0, w0, w1
   15e48:	ldr	x1, [sp, #144]
   15e4c:	lsl	x0, x1, x0
   15e50:	str	x0, [sp, #112]
   15e54:	str	xzr, [sp, #144]
   15e58:	b	16304 <__floattitf@@GCC_3.0+0x648>
   15e5c:	ldr	x1, [sp, #152]
   15e60:	mov	x0, #0x4072                	// #16498
   15e64:	cmp	x1, x0
   15e68:	b.le	15f48 <__floattitf@@GCC_3.0+0x28c>
   15e6c:	ldr	x0, [sp, #152]
   15e70:	mov	w1, w0
   15e74:	mov	w0, #0xffffbf8e            	// #-16498
   15e78:	add	w0, w1, w0
   15e7c:	sub	w1, w0, #0x40
   15e80:	ldr	x8, [sp, #104]
   15e84:	lsr	x8, x8, x1
   15e88:	mov	x11, #0x0                   	// #0
   15e8c:	ldr	x9, [sp, #104]
   15e90:	lsl	x10, x9, #1
   15e94:	mov	w9, #0x3f                  	// #63
   15e98:	sub	w9, w9, w0
   15e9c:	lsl	x9, x10, x9
   15ea0:	ldr	x10, [sp, #96]
   15ea4:	lsr	x2, x10, x0
   15ea8:	orr	x2, x9, x2
   15eac:	ldr	x9, [sp, #104]
   15eb0:	lsr	x3, x9, x0
   15eb4:	cmp	w1, #0x0
   15eb8:	csel	x2, x8, x2, ge  // ge = tcont
   15ebc:	cmp	w1, #0x0
   15ec0:	csel	x3, x11, x3, ge  // ge = tcont
   15ec4:	ldr	x0, [sp, #152]
   15ec8:	mov	w1, w0
   15ecc:	mov	w0, #0x40f2                	// #16626
   15ed0:	sub	w0, w0, w1
   15ed4:	sub	w1, w0, #0x40
   15ed8:	ldr	x8, [sp, #96]
   15edc:	lsl	x8, x8, x1
   15ee0:	mov	x11, #0x0                   	// #0
   15ee4:	ldr	x9, [sp, #96]
   15ee8:	lsr	x10, x9, #1
   15eec:	mov	w9, #0x3f                  	// #63
   15ef0:	sub	w9, w9, w0
   15ef4:	lsr	x9, x10, x9
   15ef8:	ldr	x10, [sp, #104]
   15efc:	lsl	x5, x10, x0
   15f00:	orr	x5, x9, x5
   15f04:	ldr	x9, [sp, #96]
   15f08:	lsl	x4, x9, x0
   15f0c:	cmp	w1, #0x0
   15f10:	csel	x5, x8, x5, ge  // ge = tcont
   15f14:	cmp	w1, #0x0
   15f18:	csel	x4, x11, x4, ge  // ge = tcont
   15f1c:	orr	x0, x4, x5
   15f20:	cmp	x0, #0x0
   15f24:	cset	w0, ne  // ne = any
   15f28:	and	w0, w0, #0xff
   15f2c:	and	x0, x0, #0xff
   15f30:	mov	x6, x0
   15f34:	mov	x7, #0x0                   	// #0
   15f38:	orr	x0, x2, x6
   15f3c:	str	x0, [sp, #96]
   15f40:	orr	x0, x3, x7
   15f44:	str	x0, [sp, #104]
   15f48:	ldr	x0, [sp, #96]
   15f4c:	str	x0, [sp, #144]
   15f50:	ldr	x0, [sp, #104]
   15f54:	mov	x12, x0
   15f58:	mov	x13, #0x0                   	// #0
   15f5c:	mov	x0, x12
   15f60:	str	x0, [sp, #112]
   15f64:	mov	x1, #0x4072                	// #16498
   15f68:	ldr	x0, [sp, #152]
   15f6c:	sub	x0, x1, x0
   15f70:	cmp	x0, #0x0
   15f74:	b.le	16004 <__floattitf@@GCC_3.0+0x348>
   15f78:	mov	x1, #0x4072                	// #16498
   15f7c:	ldr	x0, [sp, #152]
   15f80:	sub	x0, x1, x0
   15f84:	cmp	x0, #0x3f
   15f88:	b.gt	15fe4 <__floattitf@@GCC_3.0+0x328>
   15f8c:	ldr	x0, [sp, #152]
   15f90:	mov	w1, w0
   15f94:	mov	w0, #0x4072                	// #16498
   15f98:	sub	w0, w0, w1
   15f9c:	ldr	x1, [sp, #112]
   15fa0:	lsl	x1, x1, x0
   15fa4:	ldr	x0, [sp, #152]
   15fa8:	mov	w2, w0
   15fac:	mov	w0, #0xffffbfce            	// #-16434
   15fb0:	add	w0, w2, w0
   15fb4:	ldr	x2, [sp, #144]
   15fb8:	lsr	x0, x2, x0
   15fbc:	orr	x0, x1, x0
   15fc0:	str	x0, [sp, #112]
   15fc4:	ldr	x0, [sp, #152]
   15fc8:	mov	w1, w0
   15fcc:	mov	w0, #0x4072                	// #16498
   15fd0:	sub	w0, w0, w1
   15fd4:	ldr	x1, [sp, #144]
   15fd8:	lsl	x0, x1, x0
   15fdc:	str	x0, [sp, #144]
   15fe0:	b	16004 <__floattitf@@GCC_3.0+0x348>
   15fe4:	ldr	x0, [sp, #152]
   15fe8:	mov	w1, w0
   15fec:	mov	w0, #0x4032                	// #16434
   15ff0:	sub	w0, w0, w1
   15ff4:	ldr	x1, [sp, #144]
   15ff8:	lsl	x0, x1, x0
   15ffc:	str	x0, [sp, #112]
   16000:	str	xzr, [sp, #144]
   16004:	ldr	x0, [sp, #112]
   16008:	and	x0, x0, #0xfff7ffffffffffff
   1600c:	str	x0, [sp, #112]
   16010:	ldr	x0, [sp, #152]
   16014:	cmp	x0, #0x0
   16018:	b.ne	16038 <__floattitf@@GCC_3.0+0x37c>  // b.any
   1601c:	ldr	x1, [sp, #112]
   16020:	ldr	x0, [sp, #144]
   16024:	orr	x0, x1, x0
   16028:	cmp	x0, #0x0
   1602c:	b.eq	16038 <__floattitf@@GCC_3.0+0x37c>  // b.none
   16030:	mov	w0, #0x1                   	// #1
   16034:	b	1603c <__floattitf@@GCC_3.0+0x380>
   16038:	mov	w0, #0x0                   	// #0
   1603c:	str	w0, [sp, #88]
   16040:	ldr	x0, [sp, #144]
   16044:	and	x0, x0, #0x7
   16048:	cmp	x0, #0x0
   1604c:	b.eq	16194 <__floattitf@@GCC_3.0+0x4d8>  // b.none
   16050:	ldr	w0, [sp, #124]
   16054:	orr	w0, w0, #0x10
   16058:	str	w0, [sp, #124]
   1605c:	ldr	x0, [sp, #128]
   16060:	and	x0, x0, #0xc00000
   16064:	cmp	x0, #0xc00, lsl #12
   16068:	b.eq	1619c <__floattitf@@GCC_3.0+0x4e0>  // b.none
   1606c:	cmp	x0, #0xc00, lsl #12
   16070:	b.hi	161a0 <__floattitf@@GCC_3.0+0x4e4>  // b.pmore
   16074:	cmp	x0, #0x800, lsl #12
   16078:	b.eq	1613c <__floattitf@@GCC_3.0+0x480>  // b.none
   1607c:	cmp	x0, #0x800, lsl #12
   16080:	b.hi	161a0 <__floattitf@@GCC_3.0+0x4e4>  // b.pmore
   16084:	cmp	x0, #0x0
   16088:	b.eq	16098 <__floattitf@@GCC_3.0+0x3dc>  // b.none
   1608c:	cmp	x0, #0x400, lsl #12
   16090:	b.eq	160e4 <__floattitf@@GCC_3.0+0x428>  // b.none
   16094:	b	161a0 <__floattitf@@GCC_3.0+0x4e4>
   16098:	ldr	x0, [sp, #144]
   1609c:	and	x0, x0, #0xf
   160a0:	cmp	x0, #0x4
   160a4:	b.eq	1619c <__floattitf@@GCC_3.0+0x4e0>  // b.none
   160a8:	ldr	x0, [sp, #144]
   160ac:	add	x0, x0, #0x4
   160b0:	str	x0, [sp, #64]
   160b4:	ldr	x1, [sp, #64]
   160b8:	ldr	x0, [sp, #144]
   160bc:	cmp	x1, x0
   160c0:	cset	w0, cc  // cc = lo, ul, last
   160c4:	and	w0, w0, #0xff
   160c8:	and	x0, x0, #0xff
   160cc:	ldr	x1, [sp, #112]
   160d0:	add	x0, x1, x0
   160d4:	str	x0, [sp, #112]
   160d8:	ldr	x0, [sp, #64]
   160dc:	str	x0, [sp, #144]
   160e0:	b	1619c <__floattitf@@GCC_3.0+0x4e0>
   160e4:	ldr	x0, [sp, #136]
   160e8:	cmp	x0, #0x0
   160ec:	b.ne	1619c <__floattitf@@GCC_3.0+0x4e0>  // b.any
   160f0:	ldr	x0, [sp, #144]
   160f4:	and	x0, x0, #0x7
   160f8:	cmp	x0, #0x0
   160fc:	b.eq	1619c <__floattitf@@GCC_3.0+0x4e0>  // b.none
   16100:	ldr	x0, [sp, #144]
   16104:	add	x0, x0, #0x8
   16108:	str	x0, [sp, #72]
   1610c:	ldr	x1, [sp, #72]
   16110:	ldr	x0, [sp, #144]
   16114:	cmp	x1, x0
   16118:	cset	w0, cc  // cc = lo, ul, last
   1611c:	and	w0, w0, #0xff
   16120:	and	x0, x0, #0xff
   16124:	ldr	x1, [sp, #112]
   16128:	add	x0, x1, x0
   1612c:	str	x0, [sp, #112]
   16130:	ldr	x0, [sp, #72]
   16134:	str	x0, [sp, #144]
   16138:	b	1619c <__floattitf@@GCC_3.0+0x4e0>
   1613c:	ldr	x0, [sp, #136]
   16140:	cmp	x0, #0x0
   16144:	b.eq	1619c <__floattitf@@GCC_3.0+0x4e0>  // b.none
   16148:	ldr	x0, [sp, #144]
   1614c:	and	x0, x0, #0x7
   16150:	cmp	x0, #0x0
   16154:	b.eq	1619c <__floattitf@@GCC_3.0+0x4e0>  // b.none
   16158:	ldr	x0, [sp, #144]
   1615c:	add	x0, x0, #0x8
   16160:	str	x0, [sp, #80]
   16164:	ldr	x1, [sp, #80]
   16168:	ldr	x0, [sp, #144]
   1616c:	cmp	x1, x0
   16170:	cset	w0, cc  // cc = lo, ul, last
   16174:	and	w0, w0, #0xff
   16178:	and	x0, x0, #0xff
   1617c:	ldr	x1, [sp, #112]
   16180:	add	x0, x1, x0
   16184:	str	x0, [sp, #112]
   16188:	ldr	x0, [sp, #80]
   1618c:	str	x0, [sp, #144]
   16190:	b	1619c <__floattitf@@GCC_3.0+0x4e0>
   16194:	nop
   16198:	b	161a0 <__floattitf@@GCC_3.0+0x4e4>
   1619c:	nop
   161a0:	ldr	w0, [sp, #88]
   161a4:	cmp	w0, #0x0
   161a8:	b.eq	161d8 <__floattitf@@GCC_3.0+0x51c>  // b.none
   161ac:	ldr	w0, [sp, #124]
   161b0:	and	w0, w0, #0x10
   161b4:	cmp	w0, #0x0
   161b8:	b.ne	161cc <__floattitf@@GCC_3.0+0x510>  // b.any
   161bc:	ldr	x0, [sp, #128]
   161c0:	and	x0, x0, #0x800
   161c4:	cmp	x0, #0x0
   161c8:	b.eq	161d8 <__floattitf@@GCC_3.0+0x51c>  // b.none
   161cc:	ldr	w0, [sp, #124]
   161d0:	orr	w0, w0, #0x8
   161d4:	str	w0, [sp, #124]
   161d8:	ldr	x0, [sp, #112]
   161dc:	and	x0, x0, #0x8000000000000
   161e0:	cmp	x0, #0x0
   161e4:	b.eq	1629c <__floattitf@@GCC_3.0+0x5e0>  // b.none
   161e8:	ldr	x0, [sp, #112]
   161ec:	and	x0, x0, #0xfff7ffffffffffff
   161f0:	str	x0, [sp, #112]
   161f4:	ldr	x0, [sp, #152]
   161f8:	add	x0, x0, #0x1
   161fc:	str	x0, [sp, #152]
   16200:	ldr	x1, [sp, #152]
   16204:	mov	x0, #0x7fff                	// #32767
   16208:	cmp	x1, x0
   1620c:	b.ne	1629c <__floattitf@@GCC_3.0+0x5e0>  // b.any
   16210:	ldr	x0, [sp, #128]
   16214:	and	x0, x0, #0xc00000
   16218:	cmp	x0, #0x0
   1621c:	b.eq	16258 <__floattitf@@GCC_3.0+0x59c>  // b.none
   16220:	ldr	x0, [sp, #128]
   16224:	and	x0, x0, #0xc00000
   16228:	cmp	x0, #0x400, lsl #12
   1622c:	b.ne	1623c <__floattitf@@GCC_3.0+0x580>  // b.any
   16230:	ldr	x0, [sp, #136]
   16234:	cmp	x0, #0x0
   16238:	b.eq	16258 <__floattitf@@GCC_3.0+0x59c>  // b.none
   1623c:	ldr	x0, [sp, #128]
   16240:	and	x0, x0, #0xc00000
   16244:	cmp	x0, #0x800, lsl #12
   16248:	b.ne	1626c <__floattitf@@GCC_3.0+0x5b0>  // b.any
   1624c:	ldr	x0, [sp, #136]
   16250:	cmp	x0, #0x0
   16254:	b.eq	1626c <__floattitf@@GCC_3.0+0x5b0>  // b.none
   16258:	mov	x0, #0x7fff                	// #32767
   1625c:	str	x0, [sp, #152]
   16260:	str	xzr, [sp, #144]
   16264:	str	xzr, [sp, #112]
   16268:	b	16284 <__floattitf@@GCC_3.0+0x5c8>
   1626c:	mov	x0, #0x7ffe                	// #32766
   16270:	str	x0, [sp, #152]
   16274:	mov	x0, #0xffffffffffffffff    	// #-1
   16278:	str	x0, [sp, #144]
   1627c:	mov	x0, #0xffffffffffffffff    	// #-1
   16280:	str	x0, [sp, #112]
   16284:	ldr	w0, [sp, #124]
   16288:	orr	w0, w0, #0x10
   1628c:	str	w0, [sp, #124]
   16290:	ldr	w0, [sp, #124]
   16294:	orr	w0, w0, #0x4
   16298:	str	w0, [sp, #124]
   1629c:	ldr	x0, [sp, #144]
   162a0:	lsr	x1, x0, #3
   162a4:	ldr	x0, [sp, #112]
   162a8:	lsl	x0, x0, #61
   162ac:	orr	x0, x1, x0
   162b0:	str	x0, [sp, #144]
   162b4:	ldr	x0, [sp, #112]
   162b8:	lsr	x0, x0, #3
   162bc:	str	x0, [sp, #112]
   162c0:	ldr	x1, [sp, #152]
   162c4:	mov	x0, #0x7fff                	// #32767
   162c8:	cmp	x1, x0
   162cc:	b.ne	16304 <__floattitf@@GCC_3.0+0x648>  // b.any
   162d0:	ldr	x1, [sp, #112]
   162d4:	ldr	x0, [sp, #144]
   162d8:	orr	x0, x1, x0
   162dc:	cmp	x0, #0x0
   162e0:	b.eq	16304 <__floattitf@@GCC_3.0+0x648>  // b.none
   162e4:	ldr	x0, [sp, #112]
   162e8:	orr	x0, x0, #0x800000000000
   162ec:	str	x0, [sp, #112]
   162f0:	b	16304 <__floattitf@@GCC_3.0+0x648>
   162f4:	str	xzr, [sp, #136]
   162f8:	str	xzr, [sp, #152]
   162fc:	str	xzr, [sp, #144]
   16300:	str	xzr, [sp, #112]
   16304:	ldr	x0, [sp, #144]
   16308:	str	x0, [sp, #32]
   1630c:	ldr	x0, [sp, #112]
   16310:	and	x1, x0, #0xffffffffffff
   16314:	ldr	x0, [sp, #40]
   16318:	bfxil	x0, x1, #0, #48
   1631c:	str	x0, [sp, #40]
   16320:	ldr	x0, [sp, #152]
   16324:	and	w0, w0, #0x7fff
   16328:	and	w1, w0, #0xffff
   1632c:	ldrh	w0, [sp, #46]
   16330:	bfxil	w0, w1, #0, #15
   16334:	strh	w0, [sp, #46]
   16338:	ldr	x0, [sp, #136]
   1633c:	and	w0, w0, #0x1
   16340:	and	w1, w0, #0xff
   16344:	ldrb	w0, [sp, #47]
   16348:	bfi	w0, w1, #7, #1
   1634c:	strb	w0, [sp, #47]
   16350:	ldr	q0, [sp, #32]
   16354:	str	q0, [sp, #48]
   16358:	ldrsw	x0, [sp, #124]
   1635c:	cmp	x0, #0x0
   16360:	b.eq	1636c <__floattitf@@GCC_3.0+0x6b0>  // b.none
   16364:	ldr	w0, [sp, #124]
   16368:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   1636c:	ldr	q0, [sp, #48]
   16370:	ldp	x29, x30, [sp], #160
   16374:	ret

0000000000016378 <__floatuntitf@@GCC_4.2.0>:
   16378:	stp	x29, x30, [sp, #-160]!
   1637c:	mov	x29, sp
   16380:	stp	x0, x1, [sp, #16]
   16384:	str	wzr, [sp, #124]
   16388:	str	xzr, [sp, #128]
   1638c:	mrs	x0, fpcr
   16390:	str	x0, [sp, #128]
   16394:	ldr	x0, [sp, #16]
   16398:	ldr	x1, [sp, #24]
   1639c:	orr	x0, x0, x1
   163a0:	cmp	x0, #0x0
   163a4:	b.eq	169a0 <__floatuntitf@@GCC_4.2.0+0x628>  // b.none
   163a8:	ldp	x0, x1, [sp, #16]
   163ac:	stp	x0, x1, [sp, #96]
   163b0:	str	xzr, [sp, #136]
   163b4:	ldr	x0, [sp, #136]
   163b8:	cmp	x0, #0x0
   163bc:	b.eq	163d8 <__floatuntitf@@GCC_4.2.0+0x60>  // b.none
   163c0:	ldp	x0, x1, [sp, #96]
   163c4:	negs	x18, x0
   163c8:	ngc	x0, x1
   163cc:	mov	x8, x18
   163d0:	mov	x9, x0
   163d4:	stp	x8, x9, [sp, #96]
   163d8:	ldr	x0, [sp, #104]
   163dc:	mov	x16, x0
   163e0:	mov	x17, #0x0                   	// #0
   163e4:	mov	x0, x16
   163e8:	cmp	x0, #0x0
   163ec:	b.eq	1640c <__floatuntitf@@GCC_4.2.0+0x94>  // b.none
   163f0:	ldr	x0, [sp, #104]
   163f4:	mov	x14, x0
   163f8:	mov	x15, #0x0                   	// #0
   163fc:	mov	x0, x14
   16400:	clz	x0, x0
   16404:	str	w0, [sp, #92]
   16408:	b	16424 <__floatuntitf@@GCC_4.2.0+0xac>
   1640c:	ldr	x0, [sp, #96]
   16410:	clz	x0, x0
   16414:	str	w0, [sp, #92]
   16418:	ldr	w0, [sp, #92]
   1641c:	add	w0, w0, #0x40
   16420:	str	w0, [sp, #92]
   16424:	mov	w1, #0x407e                	// #16510
   16428:	ldr	w0, [sp, #92]
   1642c:	sub	w0, w1, w0
   16430:	sxtw	x0, w0
   16434:	str	x0, [sp, #152]
   16438:	ldr	x1, [sp, #152]
   1643c:	mov	x0, #0x406f                	// #16495
   16440:	cmp	x1, x0
   16444:	b.gt	16508 <__floatuntitf@@GCC_4.2.0+0x190>
   16448:	ldr	x0, [sp, #96]
   1644c:	str	x0, [sp, #144]
   16450:	ldr	x0, [sp, #104]
   16454:	mov	x10, x0
   16458:	mov	x11, #0x0                   	// #0
   1645c:	mov	x0, x10
   16460:	str	x0, [sp, #112]
   16464:	mov	x1, #0x406f                	// #16495
   16468:	ldr	x0, [sp, #152]
   1646c:	sub	x0, x1, x0
   16470:	cmp	x0, #0x0
   16474:	b.le	169b0 <__floatuntitf@@GCC_4.2.0+0x638>
   16478:	mov	x1, #0x406f                	// #16495
   1647c:	ldr	x0, [sp, #152]
   16480:	sub	x0, x1, x0
   16484:	cmp	x0, #0x3f
   16488:	b.gt	164e4 <__floatuntitf@@GCC_4.2.0+0x16c>
   1648c:	ldr	x0, [sp, #152]
   16490:	mov	w1, w0
   16494:	mov	w0, #0x406f                	// #16495
   16498:	sub	w0, w0, w1
   1649c:	ldr	x1, [sp, #112]
   164a0:	lsl	x1, x1, x0
   164a4:	ldr	x0, [sp, #152]
   164a8:	mov	w2, w0
   164ac:	mov	w0, #0xffffbfd1            	// #-16431
   164b0:	add	w0, w2, w0
   164b4:	ldr	x2, [sp, #144]
   164b8:	lsr	x0, x2, x0
   164bc:	orr	x0, x1, x0
   164c0:	str	x0, [sp, #112]
   164c4:	ldr	x0, [sp, #152]
   164c8:	mov	w1, w0
   164cc:	mov	w0, #0x406f                	// #16495
   164d0:	sub	w0, w0, w1
   164d4:	ldr	x1, [sp, #144]
   164d8:	lsl	x0, x1, x0
   164dc:	str	x0, [sp, #144]
   164e0:	b	169b0 <__floatuntitf@@GCC_4.2.0+0x638>
   164e4:	ldr	x0, [sp, #152]
   164e8:	mov	w1, w0
   164ec:	mov	w0, #0x402f                	// #16431
   164f0:	sub	w0, w0, w1
   164f4:	ldr	x1, [sp, #144]
   164f8:	lsl	x0, x1, x0
   164fc:	str	x0, [sp, #112]
   16500:	str	xzr, [sp, #144]
   16504:	b	169b0 <__floatuntitf@@GCC_4.2.0+0x638>
   16508:	ldr	x1, [sp, #152]
   1650c:	mov	x0, #0x4072                	// #16498
   16510:	cmp	x1, x0
   16514:	b.le	165f4 <__floatuntitf@@GCC_4.2.0+0x27c>
   16518:	ldr	x0, [sp, #152]
   1651c:	mov	w1, w0
   16520:	mov	w0, #0xffffbf8e            	// #-16498
   16524:	add	w0, w1, w0
   16528:	sub	w1, w0, #0x40
   1652c:	ldr	x8, [sp, #104]
   16530:	lsr	x8, x8, x1
   16534:	mov	x11, #0x0                   	// #0
   16538:	ldr	x9, [sp, #104]
   1653c:	lsl	x10, x9, #1
   16540:	mov	w9, #0x3f                  	// #63
   16544:	sub	w9, w9, w0
   16548:	lsl	x9, x10, x9
   1654c:	ldr	x10, [sp, #96]
   16550:	lsr	x2, x10, x0
   16554:	orr	x2, x9, x2
   16558:	ldr	x9, [sp, #104]
   1655c:	lsr	x3, x9, x0
   16560:	cmp	w1, #0x0
   16564:	csel	x2, x8, x2, ge  // ge = tcont
   16568:	cmp	w1, #0x0
   1656c:	csel	x3, x11, x3, ge  // ge = tcont
   16570:	ldr	x0, [sp, #152]
   16574:	mov	w1, w0
   16578:	mov	w0, #0x40f2                	// #16626
   1657c:	sub	w0, w0, w1
   16580:	sub	w1, w0, #0x40
   16584:	ldr	x8, [sp, #96]
   16588:	lsl	x8, x8, x1
   1658c:	mov	x11, #0x0                   	// #0
   16590:	ldr	x9, [sp, #96]
   16594:	lsr	x10, x9, #1
   16598:	mov	w9, #0x3f                  	// #63
   1659c:	sub	w9, w9, w0
   165a0:	lsr	x9, x10, x9
   165a4:	ldr	x10, [sp, #104]
   165a8:	lsl	x5, x10, x0
   165ac:	orr	x5, x9, x5
   165b0:	ldr	x9, [sp, #96]
   165b4:	lsl	x4, x9, x0
   165b8:	cmp	w1, #0x0
   165bc:	csel	x5, x8, x5, ge  // ge = tcont
   165c0:	cmp	w1, #0x0
   165c4:	csel	x4, x11, x4, ge  // ge = tcont
   165c8:	orr	x0, x4, x5
   165cc:	cmp	x0, #0x0
   165d0:	cset	w0, ne  // ne = any
   165d4:	and	w0, w0, #0xff
   165d8:	and	x0, x0, #0xff
   165dc:	mov	x6, x0
   165e0:	mov	x7, #0x0                   	// #0
   165e4:	orr	x0, x2, x6
   165e8:	str	x0, [sp, #96]
   165ec:	orr	x0, x3, x7
   165f0:	str	x0, [sp, #104]
   165f4:	ldr	x0, [sp, #96]
   165f8:	str	x0, [sp, #144]
   165fc:	ldr	x0, [sp, #104]
   16600:	mov	x12, x0
   16604:	mov	x13, #0x0                   	// #0
   16608:	mov	x0, x12
   1660c:	str	x0, [sp, #112]
   16610:	mov	x1, #0x4072                	// #16498
   16614:	ldr	x0, [sp, #152]
   16618:	sub	x0, x1, x0
   1661c:	cmp	x0, #0x0
   16620:	b.le	166b0 <__floatuntitf@@GCC_4.2.0+0x338>
   16624:	mov	x1, #0x4072                	// #16498
   16628:	ldr	x0, [sp, #152]
   1662c:	sub	x0, x1, x0
   16630:	cmp	x0, #0x3f
   16634:	b.gt	16690 <__floatuntitf@@GCC_4.2.0+0x318>
   16638:	ldr	x0, [sp, #152]
   1663c:	mov	w1, w0
   16640:	mov	w0, #0x4072                	// #16498
   16644:	sub	w0, w0, w1
   16648:	ldr	x1, [sp, #112]
   1664c:	lsl	x1, x1, x0
   16650:	ldr	x0, [sp, #152]
   16654:	mov	w2, w0
   16658:	mov	w0, #0xffffbfce            	// #-16434
   1665c:	add	w0, w2, w0
   16660:	ldr	x2, [sp, #144]
   16664:	lsr	x0, x2, x0
   16668:	orr	x0, x1, x0
   1666c:	str	x0, [sp, #112]
   16670:	ldr	x0, [sp, #152]
   16674:	mov	w1, w0
   16678:	mov	w0, #0x4072                	// #16498
   1667c:	sub	w0, w0, w1
   16680:	ldr	x1, [sp, #144]
   16684:	lsl	x0, x1, x0
   16688:	str	x0, [sp, #144]
   1668c:	b	166b0 <__floatuntitf@@GCC_4.2.0+0x338>
   16690:	ldr	x0, [sp, #152]
   16694:	mov	w1, w0
   16698:	mov	w0, #0x4032                	// #16434
   1669c:	sub	w0, w0, w1
   166a0:	ldr	x1, [sp, #144]
   166a4:	lsl	x0, x1, x0
   166a8:	str	x0, [sp, #112]
   166ac:	str	xzr, [sp, #144]
   166b0:	ldr	x0, [sp, #112]
   166b4:	and	x0, x0, #0xfff7ffffffffffff
   166b8:	str	x0, [sp, #112]
   166bc:	ldr	x0, [sp, #152]
   166c0:	cmp	x0, #0x0
   166c4:	b.ne	166e4 <__floatuntitf@@GCC_4.2.0+0x36c>  // b.any
   166c8:	ldr	x1, [sp, #112]
   166cc:	ldr	x0, [sp, #144]
   166d0:	orr	x0, x1, x0
   166d4:	cmp	x0, #0x0
   166d8:	b.eq	166e4 <__floatuntitf@@GCC_4.2.0+0x36c>  // b.none
   166dc:	mov	w0, #0x1                   	// #1
   166e0:	b	166e8 <__floatuntitf@@GCC_4.2.0+0x370>
   166e4:	mov	w0, #0x0                   	// #0
   166e8:	str	w0, [sp, #88]
   166ec:	ldr	x0, [sp, #144]
   166f0:	and	x0, x0, #0x7
   166f4:	cmp	x0, #0x0
   166f8:	b.eq	16840 <__floatuntitf@@GCC_4.2.0+0x4c8>  // b.none
   166fc:	ldr	w0, [sp, #124]
   16700:	orr	w0, w0, #0x10
   16704:	str	w0, [sp, #124]
   16708:	ldr	x0, [sp, #128]
   1670c:	and	x0, x0, #0xc00000
   16710:	cmp	x0, #0xc00, lsl #12
   16714:	b.eq	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>  // b.none
   16718:	cmp	x0, #0xc00, lsl #12
   1671c:	b.hi	1684c <__floatuntitf@@GCC_4.2.0+0x4d4>  // b.pmore
   16720:	cmp	x0, #0x800, lsl #12
   16724:	b.eq	167e8 <__floatuntitf@@GCC_4.2.0+0x470>  // b.none
   16728:	cmp	x0, #0x800, lsl #12
   1672c:	b.hi	1684c <__floatuntitf@@GCC_4.2.0+0x4d4>  // b.pmore
   16730:	cmp	x0, #0x0
   16734:	b.eq	16744 <__floatuntitf@@GCC_4.2.0+0x3cc>  // b.none
   16738:	cmp	x0, #0x400, lsl #12
   1673c:	b.eq	16790 <__floatuntitf@@GCC_4.2.0+0x418>  // b.none
   16740:	b	1684c <__floatuntitf@@GCC_4.2.0+0x4d4>
   16744:	ldr	x0, [sp, #144]
   16748:	and	x0, x0, #0xf
   1674c:	cmp	x0, #0x4
   16750:	b.eq	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>  // b.none
   16754:	ldr	x0, [sp, #144]
   16758:	add	x0, x0, #0x4
   1675c:	str	x0, [sp, #64]
   16760:	ldr	x1, [sp, #64]
   16764:	ldr	x0, [sp, #144]
   16768:	cmp	x1, x0
   1676c:	cset	w0, cc  // cc = lo, ul, last
   16770:	and	w0, w0, #0xff
   16774:	and	x0, x0, #0xff
   16778:	ldr	x1, [sp, #112]
   1677c:	add	x0, x1, x0
   16780:	str	x0, [sp, #112]
   16784:	ldr	x0, [sp, #64]
   16788:	str	x0, [sp, #144]
   1678c:	b	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>
   16790:	ldr	x0, [sp, #136]
   16794:	cmp	x0, #0x0
   16798:	b.ne	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>  // b.any
   1679c:	ldr	x0, [sp, #144]
   167a0:	and	x0, x0, #0x7
   167a4:	cmp	x0, #0x0
   167a8:	b.eq	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>  // b.none
   167ac:	ldr	x0, [sp, #144]
   167b0:	add	x0, x0, #0x8
   167b4:	str	x0, [sp, #72]
   167b8:	ldr	x1, [sp, #72]
   167bc:	ldr	x0, [sp, #144]
   167c0:	cmp	x1, x0
   167c4:	cset	w0, cc  // cc = lo, ul, last
   167c8:	and	w0, w0, #0xff
   167cc:	and	x0, x0, #0xff
   167d0:	ldr	x1, [sp, #112]
   167d4:	add	x0, x1, x0
   167d8:	str	x0, [sp, #112]
   167dc:	ldr	x0, [sp, #72]
   167e0:	str	x0, [sp, #144]
   167e4:	b	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>
   167e8:	ldr	x0, [sp, #136]
   167ec:	cmp	x0, #0x0
   167f0:	b.eq	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>  // b.none
   167f4:	ldr	x0, [sp, #144]
   167f8:	and	x0, x0, #0x7
   167fc:	cmp	x0, #0x0
   16800:	b.eq	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>  // b.none
   16804:	ldr	x0, [sp, #144]
   16808:	add	x0, x0, #0x8
   1680c:	str	x0, [sp, #80]
   16810:	ldr	x1, [sp, #80]
   16814:	ldr	x0, [sp, #144]
   16818:	cmp	x1, x0
   1681c:	cset	w0, cc  // cc = lo, ul, last
   16820:	and	w0, w0, #0xff
   16824:	and	x0, x0, #0xff
   16828:	ldr	x1, [sp, #112]
   1682c:	add	x0, x1, x0
   16830:	str	x0, [sp, #112]
   16834:	ldr	x0, [sp, #80]
   16838:	str	x0, [sp, #144]
   1683c:	b	16848 <__floatuntitf@@GCC_4.2.0+0x4d0>
   16840:	nop
   16844:	b	1684c <__floatuntitf@@GCC_4.2.0+0x4d4>
   16848:	nop
   1684c:	ldr	w0, [sp, #88]
   16850:	cmp	w0, #0x0
   16854:	b.eq	16884 <__floatuntitf@@GCC_4.2.0+0x50c>  // b.none
   16858:	ldr	w0, [sp, #124]
   1685c:	and	w0, w0, #0x10
   16860:	cmp	w0, #0x0
   16864:	b.ne	16878 <__floatuntitf@@GCC_4.2.0+0x500>  // b.any
   16868:	ldr	x0, [sp, #128]
   1686c:	and	x0, x0, #0x800
   16870:	cmp	x0, #0x0
   16874:	b.eq	16884 <__floatuntitf@@GCC_4.2.0+0x50c>  // b.none
   16878:	ldr	w0, [sp, #124]
   1687c:	orr	w0, w0, #0x8
   16880:	str	w0, [sp, #124]
   16884:	ldr	x0, [sp, #112]
   16888:	and	x0, x0, #0x8000000000000
   1688c:	cmp	x0, #0x0
   16890:	b.eq	16948 <__floatuntitf@@GCC_4.2.0+0x5d0>  // b.none
   16894:	ldr	x0, [sp, #112]
   16898:	and	x0, x0, #0xfff7ffffffffffff
   1689c:	str	x0, [sp, #112]
   168a0:	ldr	x0, [sp, #152]
   168a4:	add	x0, x0, #0x1
   168a8:	str	x0, [sp, #152]
   168ac:	ldr	x1, [sp, #152]
   168b0:	mov	x0, #0x7fff                	// #32767
   168b4:	cmp	x1, x0
   168b8:	b.ne	16948 <__floatuntitf@@GCC_4.2.0+0x5d0>  // b.any
   168bc:	ldr	x0, [sp, #128]
   168c0:	and	x0, x0, #0xc00000
   168c4:	cmp	x0, #0x0
   168c8:	b.eq	16904 <__floatuntitf@@GCC_4.2.0+0x58c>  // b.none
   168cc:	ldr	x0, [sp, #128]
   168d0:	and	x0, x0, #0xc00000
   168d4:	cmp	x0, #0x400, lsl #12
   168d8:	b.ne	168e8 <__floatuntitf@@GCC_4.2.0+0x570>  // b.any
   168dc:	ldr	x0, [sp, #136]
   168e0:	cmp	x0, #0x0
   168e4:	b.eq	16904 <__floatuntitf@@GCC_4.2.0+0x58c>  // b.none
   168e8:	ldr	x0, [sp, #128]
   168ec:	and	x0, x0, #0xc00000
   168f0:	cmp	x0, #0x800, lsl #12
   168f4:	b.ne	16918 <__floatuntitf@@GCC_4.2.0+0x5a0>  // b.any
   168f8:	ldr	x0, [sp, #136]
   168fc:	cmp	x0, #0x0
   16900:	b.eq	16918 <__floatuntitf@@GCC_4.2.0+0x5a0>  // b.none
   16904:	mov	x0, #0x7fff                	// #32767
   16908:	str	x0, [sp, #152]
   1690c:	str	xzr, [sp, #144]
   16910:	str	xzr, [sp, #112]
   16914:	b	16930 <__floatuntitf@@GCC_4.2.0+0x5b8>
   16918:	mov	x0, #0x7ffe                	// #32766
   1691c:	str	x0, [sp, #152]
   16920:	mov	x0, #0xffffffffffffffff    	// #-1
   16924:	str	x0, [sp, #144]
   16928:	mov	x0, #0xffffffffffffffff    	// #-1
   1692c:	str	x0, [sp, #112]
   16930:	ldr	w0, [sp, #124]
   16934:	orr	w0, w0, #0x10
   16938:	str	w0, [sp, #124]
   1693c:	ldr	w0, [sp, #124]
   16940:	orr	w0, w0, #0x4
   16944:	str	w0, [sp, #124]
   16948:	ldr	x0, [sp, #144]
   1694c:	lsr	x1, x0, #3
   16950:	ldr	x0, [sp, #112]
   16954:	lsl	x0, x0, #61
   16958:	orr	x0, x1, x0
   1695c:	str	x0, [sp, #144]
   16960:	ldr	x0, [sp, #112]
   16964:	lsr	x0, x0, #3
   16968:	str	x0, [sp, #112]
   1696c:	ldr	x1, [sp, #152]
   16970:	mov	x0, #0x7fff                	// #32767
   16974:	cmp	x1, x0
   16978:	b.ne	169b0 <__floatuntitf@@GCC_4.2.0+0x638>  // b.any
   1697c:	ldr	x1, [sp, #112]
   16980:	ldr	x0, [sp, #144]
   16984:	orr	x0, x1, x0
   16988:	cmp	x0, #0x0
   1698c:	b.eq	169b0 <__floatuntitf@@GCC_4.2.0+0x638>  // b.none
   16990:	ldr	x0, [sp, #112]
   16994:	orr	x0, x0, #0x800000000000
   16998:	str	x0, [sp, #112]
   1699c:	b	169b0 <__floatuntitf@@GCC_4.2.0+0x638>
   169a0:	str	xzr, [sp, #136]
   169a4:	str	xzr, [sp, #152]
   169a8:	str	xzr, [sp, #144]
   169ac:	str	xzr, [sp, #112]
   169b0:	ldr	x0, [sp, #144]
   169b4:	str	x0, [sp, #32]
   169b8:	ldr	x0, [sp, #112]
   169bc:	and	x1, x0, #0xffffffffffff
   169c0:	ldr	x0, [sp, #40]
   169c4:	bfxil	x0, x1, #0, #48
   169c8:	str	x0, [sp, #40]
   169cc:	ldr	x0, [sp, #152]
   169d0:	and	w0, w0, #0x7fff
   169d4:	and	w1, w0, #0xffff
   169d8:	ldrh	w0, [sp, #46]
   169dc:	bfxil	w0, w1, #0, #15
   169e0:	strh	w0, [sp, #46]
   169e4:	ldr	x0, [sp, #136]
   169e8:	and	w0, w0, #0x1
   169ec:	and	w1, w0, #0xff
   169f0:	ldrb	w0, [sp, #47]
   169f4:	bfi	w0, w1, #7, #1
   169f8:	strb	w0, [sp, #47]
   169fc:	ldr	q0, [sp, #32]
   16a00:	str	q0, [sp, #48]
   16a04:	ldrsw	x0, [sp, #124]
   16a08:	cmp	x0, #0x0
   16a0c:	b.eq	16a18 <__floatuntitf@@GCC_4.2.0+0x6a0>  // b.none
   16a10:	ldr	w0, [sp, #124]
   16a14:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   16a18:	ldr	q0, [sp, #48]
   16a1c:	ldp	x29, x30, [sp], #160
   16a20:	ret

0000000000016a24 <__extendsftf2@@GCC_3.0>:
   16a24:	stp	x29, x30, [sp, #-160]!
   16a28:	mov	x29, sp
   16a2c:	str	s0, [sp, #28]
   16a30:	str	wzr, [sp, #148]
   16a34:	str	xzr, [sp, #120]
   16a38:	mrs	x0, fpcr
   16a3c:	str	x0, [sp, #120]
   16a40:	ldr	s0, [sp, #28]
   16a44:	str	s0, [sp, #56]
   16a48:	ldr	w0, [sp, #56]
   16a4c:	ubfx	x0, x0, #0, #23
   16a50:	mov	w0, w0
   16a54:	str	x0, [sp, #112]
   16a58:	ldrh	w0, [sp, #58]
   16a5c:	ubfx	x0, x0, #7, #8
   16a60:	and	w0, w0, #0xff
   16a64:	and	x0, x0, #0xff
   16a68:	str	x0, [sp, #104]
   16a6c:	ldrb	w0, [sp, #59]
   16a70:	ubfx	x0, x0, #7, #1
   16a74:	and	w0, w0, #0xff
   16a78:	and	x0, x0, #0xff
   16a7c:	str	x0, [sp, #96]
   16a80:	ldr	x0, [sp, #96]
   16a84:	str	x0, [sp, #88]
   16a88:	ldr	x0, [sp, #112]
   16a8c:	str	x0, [sp, #128]
   16a90:	str	xzr, [sp, #152]
   16a94:	ldr	x0, [sp, #104]
   16a98:	add	x0, x0, #0x1
   16a9c:	and	x0, x0, #0xfe
   16aa0:	cmp	x0, #0x0
   16aa4:	b.eq	16acc <__extendsftf2@@GCC_3.0+0xa8>  // b.none
   16aa8:	ldr	x1, [sp, #104]
   16aac:	mov	x0, #0x3f80                	// #16256
   16ab0:	add	x0, x1, x0
   16ab4:	str	x0, [sp, #136]
   16ab8:	ldr	x0, [sp, #128]
   16abc:	lsl	x0, x0, #25
   16ac0:	str	x0, [sp, #152]
   16ac4:	str	xzr, [sp, #128]
   16ac8:	b	16bc4 <__extendsftf2@@GCC_3.0+0x1a0>
   16acc:	ldr	x0, [sp, #104]
   16ad0:	cmp	x0, #0x0
   16ad4:	b.ne	16b78 <__extendsftf2@@GCC_3.0+0x154>  // b.any
   16ad8:	ldr	x0, [sp, #112]
   16adc:	cmp	x0, #0x0
   16ae0:	b.ne	16aec <__extendsftf2@@GCC_3.0+0xc8>  // b.any
   16ae4:	str	xzr, [sp, #136]
   16ae8:	b	16bc4 <__extendsftf2@@GCC_3.0+0x1a0>
   16aec:	ldr	x0, [sp, #112]
   16af0:	clz	x0, x0
   16af4:	str	w0, [sp, #84]
   16af8:	ldr	w0, [sp, #84]
   16afc:	cmp	w0, #0xe
   16b00:	b.gt	16b48 <__extendsftf2@@GCC_3.0+0x124>
   16b04:	ldr	w0, [sp, #84]
   16b08:	add	w0, w0, #0x31
   16b0c:	ldr	x1, [sp, #152]
   16b10:	lsl	x1, x1, x0
   16b14:	mov	w2, #0xf                   	// #15
   16b18:	ldr	w0, [sp, #84]
   16b1c:	sub	w0, w2, w0
   16b20:	ldr	x2, [sp, #128]
   16b24:	lsr	x0, x2, x0
   16b28:	orr	x0, x1, x0
   16b2c:	str	x0, [sp, #152]
   16b30:	ldr	w0, [sp, #84]
   16b34:	add	w0, w0, #0x31
   16b38:	ldr	x1, [sp, #128]
   16b3c:	lsl	x0, x1, x0
   16b40:	str	x0, [sp, #128]
   16b44:	b	16b60 <__extendsftf2@@GCC_3.0+0x13c>
   16b48:	ldr	w0, [sp, #84]
   16b4c:	sub	w0, w0, #0xf
   16b50:	ldr	x1, [sp, #128]
   16b54:	lsl	x0, x1, x0
   16b58:	str	x0, [sp, #152]
   16b5c:	str	xzr, [sp, #128]
   16b60:	mov	w1, #0x3fa9                	// #16297
   16b64:	ldr	w0, [sp, #84]
   16b68:	sub	w0, w1, w0
   16b6c:	sxtw	x0, w0
   16b70:	str	x0, [sp, #136]
   16b74:	b	16bc4 <__extendsftf2@@GCC_3.0+0x1a0>
   16b78:	mov	x0, #0x7fff                	// #32767
   16b7c:	str	x0, [sp, #136]
   16b80:	ldr	x0, [sp, #112]
   16b84:	cmp	x0, #0x0
   16b88:	b.eq	16bc4 <__extendsftf2@@GCC_3.0+0x1a0>  // b.none
   16b8c:	ldr	x0, [sp, #112]
   16b90:	and	x0, x0, #0x400000
   16b94:	cmp	x0, #0x0
   16b98:	b.ne	16ba8 <__extendsftf2@@GCC_3.0+0x184>  // b.any
   16b9c:	ldr	w0, [sp, #148]
   16ba0:	orr	w0, w0, #0x1
   16ba4:	str	w0, [sp, #148]
   16ba8:	ldr	x0, [sp, #128]
   16bac:	lsl	x0, x0, #25
   16bb0:	str	x0, [sp, #152]
   16bb4:	str	xzr, [sp, #128]
   16bb8:	ldr	x0, [sp, #152]
   16bbc:	orr	x0, x0, #0x800000000000
   16bc0:	str	x0, [sp, #152]
   16bc4:	ldr	x0, [sp, #128]
   16bc8:	str	x0, [sp, #32]
   16bcc:	ldr	x0, [sp, #152]
   16bd0:	and	x1, x0, #0xffffffffffff
   16bd4:	ldr	x0, [sp, #40]
   16bd8:	bfxil	x0, x1, #0, #48
   16bdc:	str	x0, [sp, #40]
   16be0:	ldr	x0, [sp, #136]
   16be4:	and	w0, w0, #0x7fff
   16be8:	and	w1, w0, #0xffff
   16bec:	ldrh	w0, [sp, #46]
   16bf0:	bfxil	w0, w1, #0, #15
   16bf4:	strh	w0, [sp, #46]
   16bf8:	ldr	x0, [sp, #88]
   16bfc:	and	w0, w0, #0x1
   16c00:	and	w1, w0, #0xff
   16c04:	ldrb	w0, [sp, #47]
   16c08:	bfi	w0, w1, #7, #1
   16c0c:	strb	w0, [sp, #47]
   16c10:	ldr	q0, [sp, #32]
   16c14:	str	q0, [sp, #64]
   16c18:	ldrsw	x0, [sp, #148]
   16c1c:	cmp	x0, #0x0
   16c20:	b.eq	16c2c <__extendsftf2@@GCC_3.0+0x208>  // b.none
   16c24:	ldr	w0, [sp, #148]
   16c28:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   16c2c:	ldr	q0, [sp, #64]
   16c30:	ldp	x29, x30, [sp], #160
   16c34:	ret

0000000000016c38 <__extenddftf2@@GCC_3.0>:
   16c38:	stp	x29, x30, [sp, #-160]!
   16c3c:	mov	x29, sp
   16c40:	str	d0, [sp, #24]
   16c44:	str	wzr, [sp, #100]
   16c48:	str	xzr, [sp, #112]
   16c4c:	mrs	x0, fpcr
   16c50:	str	x0, [sp, #112]
   16c54:	ldr	d0, [sp, #24]
   16c58:	str	d0, [sp, #56]
   16c5c:	ldr	x0, [sp, #56]
   16c60:	ubfx	x0, x0, #0, #52
   16c64:	str	x0, [sp, #128]
   16c68:	ldrh	w0, [sp, #62]
   16c6c:	ubfx	x0, x0, #4, #11
   16c70:	and	w0, w0, #0xffff
   16c74:	and	x0, x0, #0xffff
   16c78:	str	x0, [sp, #120]
   16c7c:	ldrb	w0, [sp, #63]
   16c80:	ubfx	x0, x0, #7, #1
   16c84:	and	w0, w0, #0xff
   16c88:	and	x0, x0, #0xff
   16c8c:	str	x0, [sp, #152]
   16c90:	ldr	x0, [sp, #152]
   16c94:	str	x0, [sp, #144]
   16c98:	ldr	x0, [sp, #128]
   16c9c:	str	x0, [sp, #136]
   16ca0:	str	xzr, [sp, #104]
   16ca4:	ldr	x0, [sp, #120]
   16ca8:	add	x0, x0, #0x1
   16cac:	and	x0, x0, #0x7fe
   16cb0:	cmp	x0, #0x0
   16cb4:	b.eq	16cf0 <__extenddftf2@@GCC_3.0+0xb8>  // b.none
   16cb8:	ldr	x1, [sp, #120]
   16cbc:	mov	x0, #0x3c00                	// #15360
   16cc0:	add	x0, x1, x0
   16cc4:	str	x0, [sp, #88]
   16cc8:	ldr	x0, [sp, #104]
   16ccc:	lsl	x1, x0, #60
   16cd0:	ldr	x0, [sp, #136]
   16cd4:	lsr	x0, x0, #4
   16cd8:	orr	x0, x1, x0
   16cdc:	str	x0, [sp, #104]
   16ce0:	ldr	x0, [sp, #136]
   16ce4:	lsl	x0, x0, #60
   16ce8:	str	x0, [sp, #136]
   16cec:	b	16dfc <__extenddftf2@@GCC_3.0+0x1c4>
   16cf0:	ldr	x0, [sp, #120]
   16cf4:	cmp	x0, #0x0
   16cf8:	b.ne	16d9c <__extenddftf2@@GCC_3.0+0x164>  // b.any
   16cfc:	ldr	x0, [sp, #128]
   16d00:	cmp	x0, #0x0
   16d04:	b.ne	16d10 <__extenddftf2@@GCC_3.0+0xd8>  // b.any
   16d08:	str	xzr, [sp, #88]
   16d0c:	b	16dfc <__extenddftf2@@GCC_3.0+0x1c4>
   16d10:	ldr	x0, [sp, #128]
   16d14:	clz	x0, x0
   16d18:	str	w0, [sp, #84]
   16d1c:	ldr	w0, [sp, #84]
   16d20:	cmp	w0, #0xe
   16d24:	b.gt	16d6c <__extenddftf2@@GCC_3.0+0x134>
   16d28:	ldr	w0, [sp, #84]
   16d2c:	add	w0, w0, #0x31
   16d30:	ldr	x1, [sp, #104]
   16d34:	lsl	x1, x1, x0
   16d38:	mov	w2, #0xf                   	// #15
   16d3c:	ldr	w0, [sp, #84]
   16d40:	sub	w0, w2, w0
   16d44:	ldr	x2, [sp, #136]
   16d48:	lsr	x0, x2, x0
   16d4c:	orr	x0, x1, x0
   16d50:	str	x0, [sp, #104]
   16d54:	ldr	w0, [sp, #84]
   16d58:	add	w0, w0, #0x31
   16d5c:	ldr	x1, [sp, #136]
   16d60:	lsl	x0, x1, x0
   16d64:	str	x0, [sp, #136]
   16d68:	b	16d84 <__extenddftf2@@GCC_3.0+0x14c>
   16d6c:	ldr	w0, [sp, #84]
   16d70:	sub	w0, w0, #0xf
   16d74:	ldr	x1, [sp, #136]
   16d78:	lsl	x0, x1, x0
   16d7c:	str	x0, [sp, #104]
   16d80:	str	xzr, [sp, #136]
   16d84:	mov	w1, #0x3c0c                	// #15372
   16d88:	ldr	w0, [sp, #84]
   16d8c:	sub	w0, w1, w0
   16d90:	sxtw	x0, w0
   16d94:	str	x0, [sp, #88]
   16d98:	b	16dfc <__extenddftf2@@GCC_3.0+0x1c4>
   16d9c:	mov	x0, #0x7fff                	// #32767
   16da0:	str	x0, [sp, #88]
   16da4:	ldr	x0, [sp, #128]
   16da8:	cmp	x0, #0x0
   16dac:	b.eq	16dfc <__extenddftf2@@GCC_3.0+0x1c4>  // b.none
   16db0:	ldr	x0, [sp, #128]
   16db4:	and	x0, x0, #0x8000000000000
   16db8:	cmp	x0, #0x0
   16dbc:	b.ne	16dcc <__extenddftf2@@GCC_3.0+0x194>  // b.any
   16dc0:	ldr	w0, [sp, #100]
   16dc4:	orr	w0, w0, #0x1
   16dc8:	str	w0, [sp, #100]
   16dcc:	ldr	x0, [sp, #104]
   16dd0:	lsl	x1, x0, #60
   16dd4:	ldr	x0, [sp, #136]
   16dd8:	lsr	x0, x0, #4
   16ddc:	orr	x0, x1, x0
   16de0:	str	x0, [sp, #104]
   16de4:	ldr	x0, [sp, #136]
   16de8:	lsl	x0, x0, #60
   16dec:	str	x0, [sp, #136]
   16df0:	ldr	x0, [sp, #104]
   16df4:	orr	x0, x0, #0x800000000000
   16df8:	str	x0, [sp, #104]
   16dfc:	ldr	x0, [sp, #136]
   16e00:	str	x0, [sp, #32]
   16e04:	ldr	x0, [sp, #104]
   16e08:	and	x1, x0, #0xffffffffffff
   16e0c:	ldr	x0, [sp, #40]
   16e10:	bfxil	x0, x1, #0, #48
   16e14:	str	x0, [sp, #40]
   16e18:	ldr	x0, [sp, #88]
   16e1c:	and	w0, w0, #0x7fff
   16e20:	and	w1, w0, #0xffff
   16e24:	ldrh	w0, [sp, #46]
   16e28:	bfxil	w0, w1, #0, #15
   16e2c:	strh	w0, [sp, #46]
   16e30:	ldr	x0, [sp, #144]
   16e34:	and	w0, w0, #0x1
   16e38:	and	w1, w0, #0xff
   16e3c:	ldrb	w0, [sp, #47]
   16e40:	bfi	w0, w1, #7, #1
   16e44:	strb	w0, [sp, #47]
   16e48:	ldr	q0, [sp, #32]
   16e4c:	str	q0, [sp, #64]
   16e50:	ldrsw	x0, [sp, #100]
   16e54:	cmp	x0, #0x0
   16e58:	b.eq	16e64 <__extenddftf2@@GCC_3.0+0x22c>  // b.none
   16e5c:	ldr	w0, [sp, #100]
   16e60:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   16e64:	ldr	q0, [sp, #64]
   16e68:	ldp	x29, x30, [sp], #160
   16e6c:	ret
   16e70:	stp	x29, x30, [sp, #-160]!
   16e74:	mov	x29, sp
   16e78:	str	h0, [sp, #30]
   16e7c:	str	wzr, [sp, #148]
   16e80:	str	xzr, [sp, #120]
   16e84:	mrs	x0, fpcr
   16e88:	str	x0, [sp, #120]
   16e8c:	ldr	h0, [sp, #30]
   16e90:	str	h0, [sp, #56]
   16e94:	ldrh	w0, [sp, #56]
   16e98:	ubfx	x0, x0, #0, #10
   16e9c:	and	w0, w0, #0xffff
   16ea0:	and	x0, x0, #0xffff
   16ea4:	str	x0, [sp, #112]
   16ea8:	ldrb	w0, [sp, #57]
   16eac:	ubfx	x0, x0, #2, #5
   16eb0:	and	w0, w0, #0xff
   16eb4:	and	x0, x0, #0xff
   16eb8:	str	x0, [sp, #104]
   16ebc:	ldrb	w0, [sp, #57]
   16ec0:	ubfx	x0, x0, #7, #1
   16ec4:	and	w0, w0, #0xff
   16ec8:	and	x0, x0, #0xff
   16ecc:	str	x0, [sp, #96]
   16ed0:	ldr	x0, [sp, #96]
   16ed4:	str	x0, [sp, #88]
   16ed8:	ldr	x0, [sp, #112]
   16edc:	str	x0, [sp, #128]
   16ee0:	str	xzr, [sp, #152]
   16ee4:	ldr	x0, [sp, #104]
   16ee8:	add	x0, x0, #0x1
   16eec:	and	x0, x0, #0x1e
   16ef0:	cmp	x0, #0x0
   16ef4:	b.eq	16f1c <__extenddftf2@@GCC_3.0+0x2e4>  // b.none
   16ef8:	ldr	x1, [sp, #104]
   16efc:	mov	x0, #0x3ff0                	// #16368
   16f00:	add	x0, x1, x0
   16f04:	str	x0, [sp, #136]
   16f08:	ldr	x0, [sp, #128]
   16f0c:	lsl	x0, x0, #38
   16f10:	str	x0, [sp, #152]
   16f14:	str	xzr, [sp, #128]
   16f18:	b	17014 <__extenddftf2@@GCC_3.0+0x3dc>
   16f1c:	ldr	x0, [sp, #104]
   16f20:	cmp	x0, #0x0
   16f24:	b.ne	16fc8 <__extenddftf2@@GCC_3.0+0x390>  // b.any
   16f28:	ldr	x0, [sp, #112]
   16f2c:	cmp	x0, #0x0
   16f30:	b.ne	16f3c <__extenddftf2@@GCC_3.0+0x304>  // b.any
   16f34:	str	xzr, [sp, #136]
   16f38:	b	17014 <__extenddftf2@@GCC_3.0+0x3dc>
   16f3c:	ldr	x0, [sp, #112]
   16f40:	clz	x0, x0
   16f44:	str	w0, [sp, #84]
   16f48:	ldr	w0, [sp, #84]
   16f4c:	cmp	w0, #0xe
   16f50:	b.gt	16f98 <__extenddftf2@@GCC_3.0+0x360>
   16f54:	ldr	w0, [sp, #84]
   16f58:	add	w0, w0, #0x31
   16f5c:	ldr	x1, [sp, #152]
   16f60:	lsl	x1, x1, x0
   16f64:	mov	w2, #0xf                   	// #15
   16f68:	ldr	w0, [sp, #84]
   16f6c:	sub	w0, w2, w0
   16f70:	ldr	x2, [sp, #128]
   16f74:	lsr	x0, x2, x0
   16f78:	orr	x0, x1, x0
   16f7c:	str	x0, [sp, #152]
   16f80:	ldr	w0, [sp, #84]
   16f84:	add	w0, w0, #0x31
   16f88:	ldr	x1, [sp, #128]
   16f8c:	lsl	x0, x1, x0
   16f90:	str	x0, [sp, #128]
   16f94:	b	16fb0 <__extenddftf2@@GCC_3.0+0x378>
   16f98:	ldr	w0, [sp, #84]
   16f9c:	sub	w0, w0, #0xf
   16fa0:	ldr	x1, [sp, #128]
   16fa4:	lsl	x0, x1, x0
   16fa8:	str	x0, [sp, #152]
   16fac:	str	xzr, [sp, #128]
   16fb0:	mov	w1, #0x4026                	// #16422
   16fb4:	ldr	w0, [sp, #84]
   16fb8:	sub	w0, w1, w0
   16fbc:	sxtw	x0, w0
   16fc0:	str	x0, [sp, #136]
   16fc4:	b	17014 <__extenddftf2@@GCC_3.0+0x3dc>
   16fc8:	mov	x0, #0x7fff                	// #32767
   16fcc:	str	x0, [sp, #136]
   16fd0:	ldr	x0, [sp, #112]
   16fd4:	cmp	x0, #0x0
   16fd8:	b.eq	17014 <__extenddftf2@@GCC_3.0+0x3dc>  // b.none
   16fdc:	ldr	x0, [sp, #112]
   16fe0:	and	x0, x0, #0x200
   16fe4:	cmp	x0, #0x0
   16fe8:	b.ne	16ff8 <__extenddftf2@@GCC_3.0+0x3c0>  // b.any
   16fec:	ldr	w0, [sp, #148]
   16ff0:	orr	w0, w0, #0x1
   16ff4:	str	w0, [sp, #148]
   16ff8:	ldr	x0, [sp, #128]
   16ffc:	lsl	x0, x0, #38
   17000:	str	x0, [sp, #152]
   17004:	str	xzr, [sp, #128]
   17008:	ldr	x0, [sp, #152]
   1700c:	orr	x0, x0, #0x800000000000
   17010:	str	x0, [sp, #152]
   17014:	ldr	x0, [sp, #128]
   17018:	str	x0, [sp, #32]
   1701c:	ldr	x0, [sp, #152]
   17020:	and	x1, x0, #0xffffffffffff
   17024:	ldr	x0, [sp, #40]
   17028:	bfxil	x0, x1, #0, #48
   1702c:	str	x0, [sp, #40]
   17030:	ldr	x0, [sp, #136]
   17034:	and	w0, w0, #0x7fff
   17038:	and	w1, w0, #0xffff
   1703c:	ldrh	w0, [sp, #46]
   17040:	bfxil	w0, w1, #0, #15
   17044:	strh	w0, [sp, #46]
   17048:	ldr	x0, [sp, #88]
   1704c:	and	w0, w0, #0x1
   17050:	and	w1, w0, #0xff
   17054:	ldrb	w0, [sp, #47]
   17058:	bfi	w0, w1, #7, #1
   1705c:	strb	w0, [sp, #47]
   17060:	ldr	q0, [sp, #32]
   17064:	str	q0, [sp, #64]
   17068:	ldrsw	x0, [sp, #148]
   1706c:	cmp	x0, #0x0
   17070:	b.eq	1707c <__extenddftf2@@GCC_3.0+0x444>  // b.none
   17074:	ldr	w0, [sp, #148]
   17078:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   1707c:	ldr	q0, [sp, #64]
   17080:	ldp	x29, x30, [sp], #160
   17084:	ret

0000000000017088 <__trunctfsf2@@GCC_3.0>:
   17088:	stp	x29, x30, [sp, #-144]!
   1708c:	mov	x29, sp
   17090:	str	q0, [sp, #16]
   17094:	str	wzr, [sp, #116]
   17098:	str	xzr, [sp, #104]
   1709c:	mrs	x0, fpcr
   170a0:	str	x0, [sp, #104]
   170a4:	ldr	q0, [sp, #16]
   170a8:	str	q0, [sp, #48]
   170ac:	ldr	x0, [sp, #48]
   170b0:	str	x0, [sp, #120]
   170b4:	ldr	x0, [sp, #56]
   170b8:	ubfx	x0, x0, #0, #48
   170bc:	str	x0, [sp, #96]
   170c0:	ldrh	w0, [sp, #62]
   170c4:	ubfx	x0, x0, #0, #15
   170c8:	and	w0, w0, #0xffff
   170cc:	and	x0, x0, #0xffff
   170d0:	str	x0, [sp, #88]
   170d4:	ldrb	w0, [sp, #63]
   170d8:	ubfx	x0, x0, #7, #1
   170dc:	and	w0, w0, #0xff
   170e0:	and	x0, x0, #0xff
   170e4:	str	x0, [sp, #80]
   170e8:	ldr	x0, [sp, #96]
   170ec:	lsl	x1, x0, #3
   170f0:	ldr	x0, [sp, #120]
   170f4:	lsr	x0, x0, #61
   170f8:	orr	x0, x1, x0
   170fc:	str	x0, [sp, #96]
   17100:	ldr	x0, [sp, #120]
   17104:	lsl	x0, x0, #3
   17108:	str	x0, [sp, #120]
   1710c:	ldr	x0, [sp, #80]
   17110:	str	x0, [sp, #72]
   17114:	ldr	x0, [sp, #88]
   17118:	add	x0, x0, #0x1
   1711c:	and	x0, x0, #0x7ffe
   17120:	cmp	x0, #0x0
   17124:	b.eq	1733c <__trunctfsf2@@GCC_3.0+0x2b4>  // b.none
   17128:	ldr	x1, [sp, #88]
   1712c:	mov	x0, #0xffffffffffffc080    	// #-16256
   17130:	add	x0, x1, x0
   17134:	str	x0, [sp, #136]
   17138:	ldr	x0, [sp, #136]
   1713c:	cmp	x0, #0xfe
   17140:	b.le	171c8 <__trunctfsf2@@GCC_3.0+0x140>
   17144:	ldr	x0, [sp, #104]
   17148:	and	x0, x0, #0xc00000
   1714c:	cmp	x0, #0x0
   17150:	b.eq	1718c <__trunctfsf2@@GCC_3.0+0x104>  // b.none
   17154:	ldr	x0, [sp, #104]
   17158:	and	x0, x0, #0xc00000
   1715c:	cmp	x0, #0x400, lsl #12
   17160:	b.ne	17170 <__trunctfsf2@@GCC_3.0+0xe8>  // b.any
   17164:	ldr	x0, [sp, #72]
   17168:	cmp	x0, #0x0
   1716c:	b.eq	1718c <__trunctfsf2@@GCC_3.0+0x104>  // b.none
   17170:	ldr	x0, [sp, #104]
   17174:	and	x0, x0, #0xc00000
   17178:	cmp	x0, #0x800, lsl #12
   1717c:	b.ne	1719c <__trunctfsf2@@GCC_3.0+0x114>  // b.any
   17180:	ldr	x0, [sp, #72]
   17184:	cmp	x0, #0x0
   17188:	b.eq	1719c <__trunctfsf2@@GCC_3.0+0x114>  // b.none
   1718c:	mov	x0, #0xff                  	// #255
   17190:	str	x0, [sp, #136]
   17194:	str	xzr, [sp, #128]
   17198:	b	171ac <__trunctfsf2@@GCC_3.0+0x124>
   1719c:	mov	x0, #0xfe                  	// #254
   171a0:	str	x0, [sp, #136]
   171a4:	mov	x0, #0xffffffffffffffff    	// #-1
   171a8:	str	x0, [sp, #128]
   171ac:	ldr	w0, [sp, #116]
   171b0:	orr	w0, w0, #0x10
   171b4:	str	w0, [sp, #116]
   171b8:	ldr	w0, [sp, #116]
   171bc:	orr	w0, w0, #0x4
   171c0:	str	w0, [sp, #116]
   171c4:	b	17410 <__trunctfsf2@@GCC_3.0+0x388>
   171c8:	ldr	x0, [sp, #136]
   171cc:	cmp	x0, #0x0
   171d0:	b.gt	172fc <__trunctfsf2@@GCC_3.0+0x274>
   171d4:	ldr	x0, [sp, #136]
   171d8:	cmn	x0, #0x17
   171dc:	b.ge	171f8 <__trunctfsf2@@GCC_3.0+0x170>  // b.tcont
   171e0:	str	xzr, [sp, #120]
   171e4:	str	xzr, [sp, #96]
   171e8:	ldr	x0, [sp, #120]
   171ec:	orr	x0, x0, #0x1
   171f0:	str	x0, [sp, #120]
   171f4:	b	172f4 <__trunctfsf2@@GCC_3.0+0x26c>
   171f8:	ldr	x0, [sp, #96]
   171fc:	orr	x0, x0, #0x8000000000000
   17200:	str	x0, [sp, #96]
   17204:	mov	x1, #0x5a                  	// #90
   17208:	ldr	x0, [sp, #136]
   1720c:	sub	x0, x1, x0
   17210:	cmp	x0, #0x3f
   17214:	b.gt	1728c <__trunctfsf2@@GCC_3.0+0x204>
   17218:	ldr	x0, [sp, #136]
   1721c:	sub	w0, w0, #0x1a
   17220:	ldr	x1, [sp, #96]
   17224:	lsl	x1, x1, x0
   17228:	ldr	x0, [sp, #136]
   1722c:	mov	w2, w0
   17230:	mov	w0, #0x5a                  	// #90
   17234:	sub	w0, w0, w2
   17238:	ldr	x2, [sp, #120]
   1723c:	lsr	x0, x2, x0
   17240:	orr	x1, x1, x0
   17244:	ldr	x0, [sp, #136]
   17248:	sub	w0, w0, #0x1a
   1724c:	ldr	x2, [sp, #120]
   17250:	lsl	x0, x2, x0
   17254:	cmp	x0, #0x0
   17258:	cset	w0, ne  // ne = any
   1725c:	and	w0, w0, #0xff
   17260:	sxtw	x0, w0
   17264:	orr	x0, x1, x0
   17268:	str	x0, [sp, #120]
   1726c:	ldr	x0, [sp, #136]
   17270:	mov	w1, w0
   17274:	mov	w0, #0x5a                  	// #90
   17278:	sub	w0, w0, w1
   1727c:	ldr	x1, [sp, #96]
   17280:	lsr	x0, x1, x0
   17284:	str	x0, [sp, #96]
   17288:	b	172f4 <__trunctfsf2@@GCC_3.0+0x26c>
   1728c:	ldr	x0, [sp, #136]
   17290:	mov	w1, w0
   17294:	mov	w0, #0x1a                  	// #26
   17298:	sub	w0, w0, w1
   1729c:	ldr	x1, [sp, #96]
   172a0:	lsr	x1, x1, x0
   172a4:	mov	x2, #0x5a                  	// #90
   172a8:	ldr	x0, [sp, #136]
   172ac:	sub	x0, x2, x0
   172b0:	cmp	x0, #0x40
   172b4:	b.eq	172cc <__trunctfsf2@@GCC_3.0+0x244>  // b.none
   172b8:	ldr	x0, [sp, #136]
   172bc:	add	w0, w0, #0x26
   172c0:	ldr	x2, [sp, #96]
   172c4:	lsl	x0, x2, x0
   172c8:	b	172d0 <__trunctfsf2@@GCC_3.0+0x248>
   172cc:	mov	x0, #0x0                   	// #0
   172d0:	ldr	x2, [sp, #120]
   172d4:	orr	x0, x0, x2
   172d8:	cmp	x0, #0x0
   172dc:	cset	w0, ne  // ne = any
   172e0:	and	w0, w0, #0xff
   172e4:	and	x0, x0, #0xff
   172e8:	orr	x0, x1, x0
   172ec:	str	x0, [sp, #120]
   172f0:	str	xzr, [sp, #96]
   172f4:	str	xzr, [sp, #136]
   172f8:	b	17330 <__trunctfsf2@@GCC_3.0+0x2a8>
   172fc:	ldr	x0, [sp, #96]
   17300:	lsr	x1, x0, #25
   17304:	ldr	x0, [sp, #96]
   17308:	lsl	x2, x0, #39
   1730c:	ldr	x0, [sp, #120]
   17310:	orr	x0, x2, x0
   17314:	cmp	x0, #0x0
   17318:	cset	w0, ne  // ne = any
   1731c:	and	w0, w0, #0xff
   17320:	and	x0, x0, #0xff
   17324:	orr	x0, x1, x0
   17328:	str	x0, [sp, #120]
   1732c:	str	xzr, [sp, #96]
   17330:	ldr	x0, [sp, #120]
   17334:	str	x0, [sp, #128]
   17338:	b	17410 <__trunctfsf2@@GCC_3.0+0x388>
   1733c:	ldr	x0, [sp, #88]
   17340:	cmp	x0, #0x0
   17344:	b.ne	1737c <__trunctfsf2@@GCC_3.0+0x2f4>  // b.any
   17348:	str	xzr, [sp, #136]
   1734c:	ldr	x1, [sp, #96]
   17350:	ldr	x0, [sp, #120]
   17354:	orr	x0, x1, x0
   17358:	cmp	x0, #0x0
   1735c:	b.ne	17368 <__trunctfsf2@@GCC_3.0+0x2e0>  // b.any
   17360:	str	xzr, [sp, #128]
   17364:	b	17410 <__trunctfsf2@@GCC_3.0+0x388>
   17368:	str	xzr, [sp, #128]
   1736c:	ldr	x0, [sp, #128]
   17370:	orr	x0, x0, #0x1
   17374:	str	x0, [sp, #128]
   17378:	b	17410 <__trunctfsf2@@GCC_3.0+0x388>
   1737c:	mov	x0, #0xff                  	// #255
   17380:	str	x0, [sp, #136]
   17384:	ldr	x1, [sp, #96]
   17388:	ldr	x0, [sp, #120]
   1738c:	orr	x0, x1, x0
   17390:	cmp	x0, #0x0
   17394:	b.ne	173a0 <__trunctfsf2@@GCC_3.0+0x318>  // b.any
   17398:	str	xzr, [sp, #128]
   1739c:	b	17410 <__trunctfsf2@@GCC_3.0+0x388>
   173a0:	ldr	x1, [sp, #88]
   173a4:	mov	x0, #0x7fff                	// #32767
   173a8:	cmp	x1, x0
   173ac:	b.ne	173e0 <__trunctfsf2@@GCC_3.0+0x358>  // b.any
   173b0:	ldr	x1, [sp, #96]
   173b4:	ldr	x0, [sp, #120]
   173b8:	orr	x0, x1, x0
   173bc:	cmp	x0, #0x0
   173c0:	b.eq	173e0 <__trunctfsf2@@GCC_3.0+0x358>  // b.none
   173c4:	ldr	x0, [sp, #96]
   173c8:	and	x0, x0, #0x4000000000000
   173cc:	cmp	x0, #0x0
   173d0:	b.ne	173e0 <__trunctfsf2@@GCC_3.0+0x358>  // b.any
   173d4:	ldr	w0, [sp, #116]
   173d8:	orr	w0, w0, #0x1
   173dc:	str	w0, [sp, #116]
   173e0:	ldr	x0, [sp, #96]
   173e4:	lsr	x0, x0, #25
   173e8:	str	x0, [sp, #120]
   173ec:	str	xzr, [sp, #96]
   173f0:	ldr	x0, [sp, #120]
   173f4:	str	x0, [sp, #128]
   173f8:	ldr	x0, [sp, #128]
   173fc:	and	x0, x0, #0xfffffffffffffff8
   17400:	str	x0, [sp, #128]
   17404:	ldr	x0, [sp, #128]
   17408:	orr	x0, x0, #0x2000000
   1740c:	str	x0, [sp, #128]
   17410:	ldr	x0, [sp, #136]
   17414:	cmp	x0, #0x0
   17418:	b.ne	17430 <__trunctfsf2@@GCC_3.0+0x3a8>  // b.any
   1741c:	ldr	x0, [sp, #128]
   17420:	cmp	x0, #0x0
   17424:	b.eq	17430 <__trunctfsf2@@GCC_3.0+0x3a8>  // b.none
   17428:	mov	w0, #0x1                   	// #1
   1742c:	b	17434 <__trunctfsf2@@GCC_3.0+0x3ac>
   17430:	mov	w0, #0x0                   	// #0
   17434:	str	w0, [sp, #68]
   17438:	ldr	x0, [sp, #128]
   1743c:	and	x0, x0, #0x7
   17440:	cmp	x0, #0x0
   17444:	b.eq	17508 <__trunctfsf2@@GCC_3.0+0x480>  // b.none
   17448:	ldr	w0, [sp, #116]
   1744c:	orr	w0, w0, #0x10
   17450:	str	w0, [sp, #116]
   17454:	ldr	x0, [sp, #104]
   17458:	and	x0, x0, #0xc00000
   1745c:	cmp	x0, #0xc00, lsl #12
   17460:	b.eq	17510 <__trunctfsf2@@GCC_3.0+0x488>  // b.none
   17464:	cmp	x0, #0xc00, lsl #12
   17468:	b.hi	17514 <__trunctfsf2@@GCC_3.0+0x48c>  // b.pmore
   1746c:	cmp	x0, #0x800, lsl #12
   17470:	b.eq	174dc <__trunctfsf2@@GCC_3.0+0x454>  // b.none
   17474:	cmp	x0, #0x800, lsl #12
   17478:	b.hi	17514 <__trunctfsf2@@GCC_3.0+0x48c>  // b.pmore
   1747c:	cmp	x0, #0x0
   17480:	b.eq	17490 <__trunctfsf2@@GCC_3.0+0x408>  // b.none
   17484:	cmp	x0, #0x400, lsl #12
   17488:	b.eq	174b0 <__trunctfsf2@@GCC_3.0+0x428>  // b.none
   1748c:	b	17514 <__trunctfsf2@@GCC_3.0+0x48c>
   17490:	ldr	x0, [sp, #128]
   17494:	and	x0, x0, #0xf
   17498:	cmp	x0, #0x4
   1749c:	b.eq	17510 <__trunctfsf2@@GCC_3.0+0x488>  // b.none
   174a0:	ldr	x0, [sp, #128]
   174a4:	add	x0, x0, #0x4
   174a8:	str	x0, [sp, #128]
   174ac:	b	17510 <__trunctfsf2@@GCC_3.0+0x488>
   174b0:	ldr	x0, [sp, #72]
   174b4:	cmp	x0, #0x0
   174b8:	b.ne	17510 <__trunctfsf2@@GCC_3.0+0x488>  // b.any
   174bc:	ldr	x0, [sp, #128]
   174c0:	and	x0, x0, #0x7
   174c4:	cmp	x0, #0x0
   174c8:	b.eq	17510 <__trunctfsf2@@GCC_3.0+0x488>  // b.none
   174cc:	ldr	x0, [sp, #128]
   174d0:	add	x0, x0, #0x8
   174d4:	str	x0, [sp, #128]
   174d8:	b	17510 <__trunctfsf2@@GCC_3.0+0x488>
   174dc:	ldr	x0, [sp, #72]
   174e0:	cmp	x0, #0x0
   174e4:	b.eq	17510 <__trunctfsf2@@GCC_3.0+0x488>  // b.none
   174e8:	ldr	x0, [sp, #128]
   174ec:	and	x0, x0, #0x7
   174f0:	cmp	x0, #0x0
   174f4:	b.eq	17510 <__trunctfsf2@@GCC_3.0+0x488>  // b.none
   174f8:	ldr	x0, [sp, #128]
   174fc:	add	x0, x0, #0x8
   17500:	str	x0, [sp, #128]
   17504:	b	17510 <__trunctfsf2@@GCC_3.0+0x488>
   17508:	nop
   1750c:	b	17514 <__trunctfsf2@@GCC_3.0+0x48c>
   17510:	nop
   17514:	ldr	w0, [sp, #68]
   17518:	cmp	w0, #0x0
   1751c:	b.eq	1754c <__trunctfsf2@@GCC_3.0+0x4c4>  // b.none
   17520:	ldr	w0, [sp, #116]
   17524:	and	w0, w0, #0x10
   17528:	cmp	w0, #0x0
   1752c:	b.ne	17540 <__trunctfsf2@@GCC_3.0+0x4b8>  // b.any
   17530:	ldr	x0, [sp, #104]
   17534:	and	x0, x0, #0x800
   17538:	cmp	x0, #0x0
   1753c:	b.eq	1754c <__trunctfsf2@@GCC_3.0+0x4c4>  // b.none
   17540:	ldr	w0, [sp, #116]
   17544:	orr	w0, w0, #0x8
   17548:	str	w0, [sp, #116]
   1754c:	ldr	x0, [sp, #128]
   17550:	and	x0, x0, #0x4000000
   17554:	cmp	x0, #0x0
   17558:	b.eq	17600 <__trunctfsf2@@GCC_3.0+0x578>  // b.none
   1755c:	ldr	x0, [sp, #128]
   17560:	and	x0, x0, #0xfffffffffbffffff
   17564:	str	x0, [sp, #128]
   17568:	ldr	x0, [sp, #136]
   1756c:	add	x0, x0, #0x1
   17570:	str	x0, [sp, #136]
   17574:	ldr	x0, [sp, #136]
   17578:	cmp	x0, #0xff
   1757c:	b.ne	17600 <__trunctfsf2@@GCC_3.0+0x578>  // b.any
   17580:	ldr	x0, [sp, #104]
   17584:	and	x0, x0, #0xc00000
   17588:	cmp	x0, #0x0
   1758c:	b.eq	175c8 <__trunctfsf2@@GCC_3.0+0x540>  // b.none
   17590:	ldr	x0, [sp, #104]
   17594:	and	x0, x0, #0xc00000
   17598:	cmp	x0, #0x400, lsl #12
   1759c:	b.ne	175ac <__trunctfsf2@@GCC_3.0+0x524>  // b.any
   175a0:	ldr	x0, [sp, #72]
   175a4:	cmp	x0, #0x0
   175a8:	b.eq	175c8 <__trunctfsf2@@GCC_3.0+0x540>  // b.none
   175ac:	ldr	x0, [sp, #104]
   175b0:	and	x0, x0, #0xc00000
   175b4:	cmp	x0, #0x800, lsl #12
   175b8:	b.ne	175d8 <__trunctfsf2@@GCC_3.0+0x550>  // b.any
   175bc:	ldr	x0, [sp, #72]
   175c0:	cmp	x0, #0x0
   175c4:	b.eq	175d8 <__trunctfsf2@@GCC_3.0+0x550>  // b.none
   175c8:	mov	x0, #0xff                  	// #255
   175cc:	str	x0, [sp, #136]
   175d0:	str	xzr, [sp, #128]
   175d4:	b	175e8 <__trunctfsf2@@GCC_3.0+0x560>
   175d8:	mov	x0, #0xfe                  	// #254
   175dc:	str	x0, [sp, #136]
   175e0:	mov	x0, #0xffffffffffffffff    	// #-1
   175e4:	str	x0, [sp, #128]
   175e8:	ldr	w0, [sp, #116]
   175ec:	orr	w0, w0, #0x10
   175f0:	str	w0, [sp, #116]
   175f4:	ldr	w0, [sp, #116]
   175f8:	orr	w0, w0, #0x4
   175fc:	str	w0, [sp, #116]
   17600:	ldr	x0, [sp, #128]
   17604:	lsr	x0, x0, #3
   17608:	str	x0, [sp, #128]
   1760c:	ldr	x0, [sp, #136]
   17610:	cmp	x0, #0xff
   17614:	b.ne	17630 <__trunctfsf2@@GCC_3.0+0x5a8>  // b.any
   17618:	ldr	x0, [sp, #128]
   1761c:	cmp	x0, #0x0
   17620:	b.eq	17630 <__trunctfsf2@@GCC_3.0+0x5a8>  // b.none
   17624:	ldr	x0, [sp, #128]
   17628:	orr	x0, x0, #0x400000
   1762c:	str	x0, [sp, #128]
   17630:	ldr	x0, [sp, #128]
   17634:	mov	w1, w0
   17638:	and	w1, w1, #0x7fffff
   1763c:	ldr	w0, [sp, #40]
   17640:	bfxil	w0, w1, #0, #23
   17644:	str	w0, [sp, #40]
   17648:	ldr	x0, [sp, #136]
   1764c:	and	w1, w0, #0xff
   17650:	ldrh	w0, [sp, #42]
   17654:	bfi	w0, w1, #7, #8
   17658:	strh	w0, [sp, #42]
   1765c:	ldr	x0, [sp, #72]
   17660:	and	w0, w0, #0x1
   17664:	and	w1, w0, #0xff
   17668:	ldrb	w0, [sp, #43]
   1766c:	bfi	w0, w1, #7, #1
   17670:	strb	w0, [sp, #43]
   17674:	ldr	s0, [sp, #40]
   17678:	str	s0, [sp, #64]
   1767c:	ldrsw	x0, [sp, #116]
   17680:	cmp	x0, #0x0
   17684:	b.eq	17690 <__trunctfsf2@@GCC_3.0+0x608>  // b.none
   17688:	ldr	w0, [sp, #116]
   1768c:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   17690:	ldr	s0, [sp, #64]
   17694:	ldp	x29, x30, [sp], #144
   17698:	ret

000000000001769c <__trunctfdf2@@GCC_3.0>:
   1769c:	stp	x29, x30, [sp, #-160]!
   176a0:	mov	x29, sp
   176a4:	str	q0, [sp, #16]
   176a8:	str	wzr, [sp, #132]
   176ac:	str	xzr, [sp, #120]
   176b0:	mrs	x0, fpcr
   176b4:	str	x0, [sp, #120]
   176b8:	ldr	q0, [sp, #16]
   176bc:	str	q0, [sp, #48]
   176c0:	ldr	x0, [sp, #48]
   176c4:	str	x0, [sp, #144]
   176c8:	ldr	x0, [sp, #56]
   176cc:	ubfx	x0, x0, #0, #48
   176d0:	str	x0, [sp, #112]
   176d4:	ldrh	w0, [sp, #62]
   176d8:	ubfx	x0, x0, #0, #15
   176dc:	and	w0, w0, #0xffff
   176e0:	and	x0, x0, #0xffff
   176e4:	str	x0, [sp, #104]
   176e8:	ldrb	w0, [sp, #63]
   176ec:	ubfx	x0, x0, #7, #1
   176f0:	and	w0, w0, #0xff
   176f4:	and	x0, x0, #0xff
   176f8:	str	x0, [sp, #96]
   176fc:	ldr	x0, [sp, #112]
   17700:	lsl	x1, x0, #3
   17704:	ldr	x0, [sp, #144]
   17708:	lsr	x0, x0, #61
   1770c:	orr	x0, x1, x0
   17710:	str	x0, [sp, #112]
   17714:	ldr	x0, [sp, #144]
   17718:	lsl	x0, x0, #3
   1771c:	str	x0, [sp, #144]
   17720:	ldr	x0, [sp, #96]
   17724:	str	x0, [sp, #88]
   17728:	ldr	x0, [sp, #104]
   1772c:	add	x0, x0, #0x1
   17730:	and	x0, x0, #0x7ffe
   17734:	cmp	x0, #0x0
   17738:	b.eq	1795c <__trunctfdf2@@GCC_3.0+0x2c0>  // b.none
   1773c:	ldr	x1, [sp, #104]
   17740:	mov	x0, #0xffffffffffffc400    	// #-15360
   17744:	add	x0, x1, x0
   17748:	str	x0, [sp, #136]
   1774c:	ldr	x0, [sp, #136]
   17750:	cmp	x0, #0x7fe
   17754:	b.le	177dc <__trunctfdf2@@GCC_3.0+0x140>
   17758:	ldr	x0, [sp, #120]
   1775c:	and	x0, x0, #0xc00000
   17760:	cmp	x0, #0x0
   17764:	b.eq	177a0 <__trunctfdf2@@GCC_3.0+0x104>  // b.none
   17768:	ldr	x0, [sp, #120]
   1776c:	and	x0, x0, #0xc00000
   17770:	cmp	x0, #0x400, lsl #12
   17774:	b.ne	17784 <__trunctfdf2@@GCC_3.0+0xe8>  // b.any
   17778:	ldr	x0, [sp, #88]
   1777c:	cmp	x0, #0x0
   17780:	b.eq	177a0 <__trunctfdf2@@GCC_3.0+0x104>  // b.none
   17784:	ldr	x0, [sp, #120]
   17788:	and	x0, x0, #0xc00000
   1778c:	cmp	x0, #0x800, lsl #12
   17790:	b.ne	177b0 <__trunctfdf2@@GCC_3.0+0x114>  // b.any
   17794:	ldr	x0, [sp, #88]
   17798:	cmp	x0, #0x0
   1779c:	b.eq	177b0 <__trunctfdf2@@GCC_3.0+0x114>  // b.none
   177a0:	mov	x0, #0x7ff                 	// #2047
   177a4:	str	x0, [sp, #136]
   177a8:	str	xzr, [sp, #152]
   177ac:	b	177c0 <__trunctfdf2@@GCC_3.0+0x124>
   177b0:	mov	x0, #0x7fe                 	// #2046
   177b4:	str	x0, [sp, #136]
   177b8:	mov	x0, #0xffffffffffffffff    	// #-1
   177bc:	str	x0, [sp, #152]
   177c0:	ldr	w0, [sp, #132]
   177c4:	orr	w0, w0, #0x10
   177c8:	str	w0, [sp, #132]
   177cc:	ldr	w0, [sp, #132]
   177d0:	orr	w0, w0, #0x4
   177d4:	str	w0, [sp, #132]
   177d8:	b	17a44 <__trunctfdf2@@GCC_3.0+0x3a8>
   177dc:	ldr	x0, [sp, #136]
   177e0:	cmp	x0, #0x0
   177e4:	b.gt	17910 <__trunctfdf2@@GCC_3.0+0x274>
   177e8:	ldr	x0, [sp, #136]
   177ec:	cmn	x0, #0x34
   177f0:	b.ge	1780c <__trunctfdf2@@GCC_3.0+0x170>  // b.tcont
   177f4:	str	xzr, [sp, #144]
   177f8:	str	xzr, [sp, #112]
   177fc:	ldr	x0, [sp, #144]
   17800:	orr	x0, x0, #0x1
   17804:	str	x0, [sp, #144]
   17808:	b	17908 <__trunctfdf2@@GCC_3.0+0x26c>
   1780c:	ldr	x0, [sp, #112]
   17810:	orr	x0, x0, #0x8000000000000
   17814:	str	x0, [sp, #112]
   17818:	mov	x1, #0x3d                  	// #61
   1781c:	ldr	x0, [sp, #136]
   17820:	sub	x0, x1, x0
   17824:	cmp	x0, #0x3f
   17828:	b.gt	178a0 <__trunctfdf2@@GCC_3.0+0x204>
   1782c:	ldr	x0, [sp, #136]
   17830:	add	w0, w0, #0x3
   17834:	ldr	x1, [sp, #112]
   17838:	lsl	x1, x1, x0
   1783c:	ldr	x0, [sp, #136]
   17840:	mov	w2, w0
   17844:	mov	w0, #0x3d                  	// #61
   17848:	sub	w0, w0, w2
   1784c:	ldr	x2, [sp, #144]
   17850:	lsr	x0, x2, x0
   17854:	orr	x1, x1, x0
   17858:	ldr	x0, [sp, #136]
   1785c:	add	w0, w0, #0x3
   17860:	ldr	x2, [sp, #144]
   17864:	lsl	x0, x2, x0
   17868:	cmp	x0, #0x0
   1786c:	cset	w0, ne  // ne = any
   17870:	and	w0, w0, #0xff
   17874:	sxtw	x0, w0
   17878:	orr	x0, x1, x0
   1787c:	str	x0, [sp, #144]
   17880:	ldr	x0, [sp, #136]
   17884:	mov	w1, w0
   17888:	mov	w0, #0x3d                  	// #61
   1788c:	sub	w0, w0, w1
   17890:	ldr	x1, [sp, #112]
   17894:	lsr	x0, x1, x0
   17898:	str	x0, [sp, #112]
   1789c:	b	17908 <__trunctfdf2@@GCC_3.0+0x26c>
   178a0:	ldr	x0, [sp, #136]
   178a4:	mov	w1, w0
   178a8:	mov	w0, #0xfffffffd            	// #-3
   178ac:	sub	w0, w0, w1
   178b0:	ldr	x1, [sp, #112]
   178b4:	lsr	x1, x1, x0
   178b8:	mov	x2, #0x3d                  	// #61
   178bc:	ldr	x0, [sp, #136]
   178c0:	sub	x0, x2, x0
   178c4:	cmp	x0, #0x40
   178c8:	b.eq	178e0 <__trunctfdf2@@GCC_3.0+0x244>  // b.none
   178cc:	ldr	x0, [sp, #136]
   178d0:	add	w0, w0, #0x43
   178d4:	ldr	x2, [sp, #112]
   178d8:	lsl	x0, x2, x0
   178dc:	b	178e4 <__trunctfdf2@@GCC_3.0+0x248>
   178e0:	mov	x0, #0x0                   	// #0
   178e4:	ldr	x2, [sp, #144]
   178e8:	orr	x0, x0, x2
   178ec:	cmp	x0, #0x0
   178f0:	cset	w0, ne  // ne = any
   178f4:	and	w0, w0, #0xff
   178f8:	and	x0, x0, #0xff
   178fc:	orr	x0, x1, x0
   17900:	str	x0, [sp, #144]
   17904:	str	xzr, [sp, #112]
   17908:	str	xzr, [sp, #136]
   1790c:	b	17950 <__trunctfdf2@@GCC_3.0+0x2b4>
   17910:	ldr	x0, [sp, #112]
   17914:	lsl	x1, x0, #4
   17918:	ldr	x0, [sp, #144]
   1791c:	lsr	x0, x0, #60
   17920:	orr	x1, x1, x0
   17924:	ldr	x0, [sp, #144]
   17928:	lsl	x0, x0, #4
   1792c:	cmp	x0, #0x0
   17930:	cset	w0, ne  // ne = any
   17934:	and	w0, w0, #0xff
   17938:	sxtw	x0, w0
   1793c:	orr	x0, x1, x0
   17940:	str	x0, [sp, #144]
   17944:	ldr	x0, [sp, #112]
   17948:	lsr	x0, x0, #60
   1794c:	str	x0, [sp, #112]
   17950:	ldr	x0, [sp, #144]
   17954:	str	x0, [sp, #152]
   17958:	b	17a44 <__trunctfdf2@@GCC_3.0+0x3a8>
   1795c:	ldr	x0, [sp, #104]
   17960:	cmp	x0, #0x0
   17964:	b.ne	1799c <__trunctfdf2@@GCC_3.0+0x300>  // b.any
   17968:	str	xzr, [sp, #136]
   1796c:	ldr	x1, [sp, #112]
   17970:	ldr	x0, [sp, #144]
   17974:	orr	x0, x1, x0
   17978:	cmp	x0, #0x0
   1797c:	b.ne	17988 <__trunctfdf2@@GCC_3.0+0x2ec>  // b.any
   17980:	str	xzr, [sp, #152]
   17984:	b	17a44 <__trunctfdf2@@GCC_3.0+0x3a8>
   17988:	str	xzr, [sp, #152]
   1798c:	ldr	x0, [sp, #152]
   17990:	orr	x0, x0, #0x1
   17994:	str	x0, [sp, #152]
   17998:	b	17a44 <__trunctfdf2@@GCC_3.0+0x3a8>
   1799c:	mov	x0, #0x7ff                 	// #2047
   179a0:	str	x0, [sp, #136]
   179a4:	ldr	x1, [sp, #112]
   179a8:	ldr	x0, [sp, #144]
   179ac:	orr	x0, x1, x0
   179b0:	cmp	x0, #0x0
   179b4:	b.ne	179c0 <__trunctfdf2@@GCC_3.0+0x324>  // b.any
   179b8:	str	xzr, [sp, #152]
   179bc:	b	17a44 <__trunctfdf2@@GCC_3.0+0x3a8>
   179c0:	ldr	x1, [sp, #104]
   179c4:	mov	x0, #0x7fff                	// #32767
   179c8:	cmp	x1, x0
   179cc:	b.ne	17a00 <__trunctfdf2@@GCC_3.0+0x364>  // b.any
   179d0:	ldr	x1, [sp, #112]
   179d4:	ldr	x0, [sp, #144]
   179d8:	orr	x0, x1, x0
   179dc:	cmp	x0, #0x0
   179e0:	b.eq	17a00 <__trunctfdf2@@GCC_3.0+0x364>  // b.none
   179e4:	ldr	x0, [sp, #112]
   179e8:	and	x0, x0, #0x4000000000000
   179ec:	cmp	x0, #0x0
   179f0:	b.ne	17a00 <__trunctfdf2@@GCC_3.0+0x364>  // b.any
   179f4:	ldr	w0, [sp, #132]
   179f8:	orr	w0, w0, #0x1
   179fc:	str	w0, [sp, #132]
   17a00:	ldr	x0, [sp, #144]
   17a04:	lsr	x1, x0, #60
   17a08:	ldr	x0, [sp, #112]
   17a0c:	lsl	x0, x0, #4
   17a10:	orr	x0, x1, x0
   17a14:	str	x0, [sp, #144]
   17a18:	ldr	x0, [sp, #112]
   17a1c:	lsr	x0, x0, #60
   17a20:	str	x0, [sp, #112]
   17a24:	ldr	x0, [sp, #144]
   17a28:	str	x0, [sp, #152]
   17a2c:	ldr	x0, [sp, #152]
   17a30:	and	x0, x0, #0xfffffffffffffff8
   17a34:	str	x0, [sp, #152]
   17a38:	ldr	x0, [sp, #152]
   17a3c:	orr	x0, x0, #0x40000000000000
   17a40:	str	x0, [sp, #152]
   17a44:	ldr	x0, [sp, #136]
   17a48:	cmp	x0, #0x0
   17a4c:	b.ne	17a64 <__trunctfdf2@@GCC_3.0+0x3c8>  // b.any
   17a50:	ldr	x0, [sp, #152]
   17a54:	cmp	x0, #0x0
   17a58:	b.eq	17a64 <__trunctfdf2@@GCC_3.0+0x3c8>  // b.none
   17a5c:	mov	w0, #0x1                   	// #1
   17a60:	b	17a68 <__trunctfdf2@@GCC_3.0+0x3cc>
   17a64:	mov	w0, #0x0                   	// #0
   17a68:	str	w0, [sp, #84]
   17a6c:	ldr	x0, [sp, #152]
   17a70:	and	x0, x0, #0x7
   17a74:	cmp	x0, #0x0
   17a78:	b.eq	17b3c <__trunctfdf2@@GCC_3.0+0x4a0>  // b.none
   17a7c:	ldr	w0, [sp, #132]
   17a80:	orr	w0, w0, #0x10
   17a84:	str	w0, [sp, #132]
   17a88:	ldr	x0, [sp, #120]
   17a8c:	and	x0, x0, #0xc00000
   17a90:	cmp	x0, #0xc00, lsl #12
   17a94:	b.eq	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>  // b.none
   17a98:	cmp	x0, #0xc00, lsl #12
   17a9c:	b.hi	17b48 <__trunctfdf2@@GCC_3.0+0x4ac>  // b.pmore
   17aa0:	cmp	x0, #0x800, lsl #12
   17aa4:	b.eq	17b10 <__trunctfdf2@@GCC_3.0+0x474>  // b.none
   17aa8:	cmp	x0, #0x800, lsl #12
   17aac:	b.hi	17b48 <__trunctfdf2@@GCC_3.0+0x4ac>  // b.pmore
   17ab0:	cmp	x0, #0x0
   17ab4:	b.eq	17ac4 <__trunctfdf2@@GCC_3.0+0x428>  // b.none
   17ab8:	cmp	x0, #0x400, lsl #12
   17abc:	b.eq	17ae4 <__trunctfdf2@@GCC_3.0+0x448>  // b.none
   17ac0:	b	17b48 <__trunctfdf2@@GCC_3.0+0x4ac>
   17ac4:	ldr	x0, [sp, #152]
   17ac8:	and	x0, x0, #0xf
   17acc:	cmp	x0, #0x4
   17ad0:	b.eq	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>  // b.none
   17ad4:	ldr	x0, [sp, #152]
   17ad8:	add	x0, x0, #0x4
   17adc:	str	x0, [sp, #152]
   17ae0:	b	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>
   17ae4:	ldr	x0, [sp, #88]
   17ae8:	cmp	x0, #0x0
   17aec:	b.ne	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>  // b.any
   17af0:	ldr	x0, [sp, #152]
   17af4:	and	x0, x0, #0x7
   17af8:	cmp	x0, #0x0
   17afc:	b.eq	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>  // b.none
   17b00:	ldr	x0, [sp, #152]
   17b04:	add	x0, x0, #0x8
   17b08:	str	x0, [sp, #152]
   17b0c:	b	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>
   17b10:	ldr	x0, [sp, #88]
   17b14:	cmp	x0, #0x0
   17b18:	b.eq	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>  // b.none
   17b1c:	ldr	x0, [sp, #152]
   17b20:	and	x0, x0, #0x7
   17b24:	cmp	x0, #0x0
   17b28:	b.eq	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>  // b.none
   17b2c:	ldr	x0, [sp, #152]
   17b30:	add	x0, x0, #0x8
   17b34:	str	x0, [sp, #152]
   17b38:	b	17b44 <__trunctfdf2@@GCC_3.0+0x4a8>
   17b3c:	nop
   17b40:	b	17b48 <__trunctfdf2@@GCC_3.0+0x4ac>
   17b44:	nop
   17b48:	ldr	w0, [sp, #84]
   17b4c:	cmp	w0, #0x0
   17b50:	b.eq	17b80 <__trunctfdf2@@GCC_3.0+0x4e4>  // b.none
   17b54:	ldr	w0, [sp, #132]
   17b58:	and	w0, w0, #0x10
   17b5c:	cmp	w0, #0x0
   17b60:	b.ne	17b74 <__trunctfdf2@@GCC_3.0+0x4d8>  // b.any
   17b64:	ldr	x0, [sp, #120]
   17b68:	and	x0, x0, #0x800
   17b6c:	cmp	x0, #0x0
   17b70:	b.eq	17b80 <__trunctfdf2@@GCC_3.0+0x4e4>  // b.none
   17b74:	ldr	w0, [sp, #132]
   17b78:	orr	w0, w0, #0x8
   17b7c:	str	w0, [sp, #132]
   17b80:	ldr	x0, [sp, #152]
   17b84:	and	x0, x0, #0x80000000000000
   17b88:	cmp	x0, #0x0
   17b8c:	b.eq	17c34 <__trunctfdf2@@GCC_3.0+0x598>  // b.none
   17b90:	ldr	x0, [sp, #152]
   17b94:	and	x0, x0, #0xff7fffffffffffff
   17b98:	str	x0, [sp, #152]
   17b9c:	ldr	x0, [sp, #136]
   17ba0:	add	x0, x0, #0x1
   17ba4:	str	x0, [sp, #136]
   17ba8:	ldr	x0, [sp, #136]
   17bac:	cmp	x0, #0x7ff
   17bb0:	b.ne	17c34 <__trunctfdf2@@GCC_3.0+0x598>  // b.any
   17bb4:	ldr	x0, [sp, #120]
   17bb8:	and	x0, x0, #0xc00000
   17bbc:	cmp	x0, #0x0
   17bc0:	b.eq	17bfc <__trunctfdf2@@GCC_3.0+0x560>  // b.none
   17bc4:	ldr	x0, [sp, #120]
   17bc8:	and	x0, x0, #0xc00000
   17bcc:	cmp	x0, #0x400, lsl #12
   17bd0:	b.ne	17be0 <__trunctfdf2@@GCC_3.0+0x544>  // b.any
   17bd4:	ldr	x0, [sp, #88]
   17bd8:	cmp	x0, #0x0
   17bdc:	b.eq	17bfc <__trunctfdf2@@GCC_3.0+0x560>  // b.none
   17be0:	ldr	x0, [sp, #120]
   17be4:	and	x0, x0, #0xc00000
   17be8:	cmp	x0, #0x800, lsl #12
   17bec:	b.ne	17c0c <__trunctfdf2@@GCC_3.0+0x570>  // b.any
   17bf0:	ldr	x0, [sp, #88]
   17bf4:	cmp	x0, #0x0
   17bf8:	b.eq	17c0c <__trunctfdf2@@GCC_3.0+0x570>  // b.none
   17bfc:	mov	x0, #0x7ff                 	// #2047
   17c00:	str	x0, [sp, #136]
   17c04:	str	xzr, [sp, #152]
   17c08:	b	17c1c <__trunctfdf2@@GCC_3.0+0x580>
   17c0c:	mov	x0, #0x7fe                 	// #2046
   17c10:	str	x0, [sp, #136]
   17c14:	mov	x0, #0xffffffffffffffff    	// #-1
   17c18:	str	x0, [sp, #152]
   17c1c:	ldr	w0, [sp, #132]
   17c20:	orr	w0, w0, #0x10
   17c24:	str	w0, [sp, #132]
   17c28:	ldr	w0, [sp, #132]
   17c2c:	orr	w0, w0, #0x4
   17c30:	str	w0, [sp, #132]
   17c34:	ldr	x0, [sp, #152]
   17c38:	lsr	x0, x0, #3
   17c3c:	str	x0, [sp, #152]
   17c40:	ldr	x0, [sp, #136]
   17c44:	cmp	x0, #0x7ff
   17c48:	b.ne	17c64 <__trunctfdf2@@GCC_3.0+0x5c8>  // b.any
   17c4c:	ldr	x0, [sp, #152]
   17c50:	cmp	x0, #0x0
   17c54:	b.eq	17c64 <__trunctfdf2@@GCC_3.0+0x5c8>  // b.none
   17c58:	ldr	x0, [sp, #152]
   17c5c:	orr	x0, x0, #0x8000000000000
   17c60:	str	x0, [sp, #152]
   17c64:	ldr	x0, [sp, #152]
   17c68:	and	x1, x0, #0xfffffffffffff
   17c6c:	ldr	x0, [sp, #40]
   17c70:	bfxil	x0, x1, #0, #52
   17c74:	str	x0, [sp, #40]
   17c78:	ldr	x0, [sp, #136]
   17c7c:	and	w0, w0, #0x7ff
   17c80:	and	w1, w0, #0xffff
   17c84:	ldrh	w0, [sp, #46]
   17c88:	bfi	w0, w1, #4, #11
   17c8c:	strh	w0, [sp, #46]
   17c90:	ldr	x0, [sp, #88]
   17c94:	and	w0, w0, #0x1
   17c98:	and	w1, w0, #0xff
   17c9c:	ldrb	w0, [sp, #47]
   17ca0:	bfi	w0, w1, #7, #1
   17ca4:	strb	w0, [sp, #47]
   17ca8:	ldr	d0, [sp, #40]
   17cac:	str	d0, [sp, #72]
   17cb0:	ldrsw	x0, [sp, #132]
   17cb4:	cmp	x0, #0x0
   17cb8:	b.eq	17cc4 <__trunctfdf2@@GCC_3.0+0x628>  // b.none
   17cbc:	ldr	w0, [sp, #132]
   17cc0:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   17cc4:	ldr	d0, [sp, #72]
   17cc8:	ldp	x29, x30, [sp], #160
   17ccc:	ret
   17cd0:	stp	x29, x30, [sp, #-144]!
   17cd4:	mov	x29, sp
   17cd8:	str	q0, [sp, #16]
   17cdc:	str	wzr, [sp, #116]
   17ce0:	str	xzr, [sp, #104]
   17ce4:	mrs	x0, fpcr
   17ce8:	str	x0, [sp, #104]
   17cec:	ldr	q0, [sp, #16]
   17cf0:	str	q0, [sp, #48]
   17cf4:	ldr	x0, [sp, #48]
   17cf8:	str	x0, [sp, #120]
   17cfc:	ldr	x0, [sp, #56]
   17d00:	ubfx	x0, x0, #0, #48
   17d04:	str	x0, [sp, #96]
   17d08:	ldrh	w0, [sp, #62]
   17d0c:	ubfx	x0, x0, #0, #15
   17d10:	and	w0, w0, #0xffff
   17d14:	and	x0, x0, #0xffff
   17d18:	str	x0, [sp, #88]
   17d1c:	ldrb	w0, [sp, #63]
   17d20:	ubfx	x0, x0, #7, #1
   17d24:	and	w0, w0, #0xff
   17d28:	and	x0, x0, #0xff
   17d2c:	str	x0, [sp, #80]
   17d30:	ldr	x0, [sp, #96]
   17d34:	lsl	x1, x0, #3
   17d38:	ldr	x0, [sp, #120]
   17d3c:	lsr	x0, x0, #61
   17d40:	orr	x0, x1, x0
   17d44:	str	x0, [sp, #96]
   17d48:	ldr	x0, [sp, #120]
   17d4c:	lsl	x0, x0, #3
   17d50:	str	x0, [sp, #120]
   17d54:	ldr	x0, [sp, #80]
   17d58:	str	x0, [sp, #72]
   17d5c:	ldr	x0, [sp, #88]
   17d60:	add	x0, x0, #0x1
   17d64:	and	x0, x0, #0x7ffe
   17d68:	cmp	x0, #0x0
   17d6c:	b.eq	17f84 <__trunctfdf2@@GCC_3.0+0x8e8>  // b.none
   17d70:	ldr	x1, [sp, #88]
   17d74:	mov	x0, #0xffffffffffffc010    	// #-16368
   17d78:	add	x0, x1, x0
   17d7c:	str	x0, [sp, #136]
   17d80:	ldr	x0, [sp, #136]
   17d84:	cmp	x0, #0x1e
   17d88:	b.le	17e10 <__trunctfdf2@@GCC_3.0+0x774>
   17d8c:	ldr	x0, [sp, #104]
   17d90:	and	x0, x0, #0xc00000
   17d94:	cmp	x0, #0x0
   17d98:	b.eq	17dd4 <__trunctfdf2@@GCC_3.0+0x738>  // b.none
   17d9c:	ldr	x0, [sp, #104]
   17da0:	and	x0, x0, #0xc00000
   17da4:	cmp	x0, #0x400, lsl #12
   17da8:	b.ne	17db8 <__trunctfdf2@@GCC_3.0+0x71c>  // b.any
   17dac:	ldr	x0, [sp, #72]
   17db0:	cmp	x0, #0x0
   17db4:	b.eq	17dd4 <__trunctfdf2@@GCC_3.0+0x738>  // b.none
   17db8:	ldr	x0, [sp, #104]
   17dbc:	and	x0, x0, #0xc00000
   17dc0:	cmp	x0, #0x800, lsl #12
   17dc4:	b.ne	17de4 <__trunctfdf2@@GCC_3.0+0x748>  // b.any
   17dc8:	ldr	x0, [sp, #72]
   17dcc:	cmp	x0, #0x0
   17dd0:	b.eq	17de4 <__trunctfdf2@@GCC_3.0+0x748>  // b.none
   17dd4:	mov	x0, #0x1f                  	// #31
   17dd8:	str	x0, [sp, #136]
   17ddc:	str	xzr, [sp, #128]
   17de0:	b	17df4 <__trunctfdf2@@GCC_3.0+0x758>
   17de4:	mov	x0, #0x1e                  	// #30
   17de8:	str	x0, [sp, #136]
   17dec:	mov	x0, #0xffffffffffffffff    	// #-1
   17df0:	str	x0, [sp, #128]
   17df4:	ldr	w0, [sp, #116]
   17df8:	orr	w0, w0, #0x10
   17dfc:	str	w0, [sp, #116]
   17e00:	ldr	w0, [sp, #116]
   17e04:	orr	w0, w0, #0x4
   17e08:	str	w0, [sp, #116]
   17e0c:	b	18058 <__trunctfdf2@@GCC_3.0+0x9bc>
   17e10:	ldr	x0, [sp, #136]
   17e14:	cmp	x0, #0x0
   17e18:	b.gt	17f44 <__trunctfdf2@@GCC_3.0+0x8a8>
   17e1c:	ldr	x0, [sp, #136]
   17e20:	cmn	x0, #0xa
   17e24:	b.ge	17e40 <__trunctfdf2@@GCC_3.0+0x7a4>  // b.tcont
   17e28:	str	xzr, [sp, #120]
   17e2c:	str	xzr, [sp, #96]
   17e30:	ldr	x0, [sp, #120]
   17e34:	orr	x0, x0, #0x1
   17e38:	str	x0, [sp, #120]
   17e3c:	b	17f3c <__trunctfdf2@@GCC_3.0+0x8a0>
   17e40:	ldr	x0, [sp, #96]
   17e44:	orr	x0, x0, #0x8000000000000
   17e48:	str	x0, [sp, #96]
   17e4c:	mov	x1, #0x67                  	// #103
   17e50:	ldr	x0, [sp, #136]
   17e54:	sub	x0, x1, x0
   17e58:	cmp	x0, #0x3f
   17e5c:	b.gt	17ed4 <__trunctfdf2@@GCC_3.0+0x838>
   17e60:	ldr	x0, [sp, #136]
   17e64:	sub	w0, w0, #0x27
   17e68:	ldr	x1, [sp, #96]
   17e6c:	lsl	x1, x1, x0
   17e70:	ldr	x0, [sp, #136]
   17e74:	mov	w2, w0
   17e78:	mov	w0, #0x67                  	// #103
   17e7c:	sub	w0, w0, w2
   17e80:	ldr	x2, [sp, #120]
   17e84:	lsr	x0, x2, x0
   17e88:	orr	x1, x1, x0
   17e8c:	ldr	x0, [sp, #136]
   17e90:	sub	w0, w0, #0x27
   17e94:	ldr	x2, [sp, #120]
   17e98:	lsl	x0, x2, x0
   17e9c:	cmp	x0, #0x0
   17ea0:	cset	w0, ne  // ne = any
   17ea4:	and	w0, w0, #0xff
   17ea8:	sxtw	x0, w0
   17eac:	orr	x0, x1, x0
   17eb0:	str	x0, [sp, #120]
   17eb4:	ldr	x0, [sp, #136]
   17eb8:	mov	w1, w0
   17ebc:	mov	w0, #0x67                  	// #103
   17ec0:	sub	w0, w0, w1
   17ec4:	ldr	x1, [sp, #96]
   17ec8:	lsr	x0, x1, x0
   17ecc:	str	x0, [sp, #96]
   17ed0:	b	17f3c <__trunctfdf2@@GCC_3.0+0x8a0>
   17ed4:	ldr	x0, [sp, #136]
   17ed8:	mov	w1, w0
   17edc:	mov	w0, #0x27                  	// #39
   17ee0:	sub	w0, w0, w1
   17ee4:	ldr	x1, [sp, #96]
   17ee8:	lsr	x1, x1, x0
   17eec:	mov	x2, #0x67                  	// #103
   17ef0:	ldr	x0, [sp, #136]
   17ef4:	sub	x0, x2, x0
   17ef8:	cmp	x0, #0x40
   17efc:	b.eq	17f14 <__trunctfdf2@@GCC_3.0+0x878>  // b.none
   17f00:	ldr	x0, [sp, #136]
   17f04:	add	w0, w0, #0x19
   17f08:	ldr	x2, [sp, #96]
   17f0c:	lsl	x0, x2, x0
   17f10:	b	17f18 <__trunctfdf2@@GCC_3.0+0x87c>
   17f14:	mov	x0, #0x0                   	// #0
   17f18:	ldr	x2, [sp, #120]
   17f1c:	orr	x0, x0, x2
   17f20:	cmp	x0, #0x0
   17f24:	cset	w0, ne  // ne = any
   17f28:	and	w0, w0, #0xff
   17f2c:	and	x0, x0, #0xff
   17f30:	orr	x0, x1, x0
   17f34:	str	x0, [sp, #120]
   17f38:	str	xzr, [sp, #96]
   17f3c:	str	xzr, [sp, #136]
   17f40:	b	17f78 <__trunctfdf2@@GCC_3.0+0x8dc>
   17f44:	ldr	x0, [sp, #96]
   17f48:	lsr	x1, x0, #38
   17f4c:	ldr	x0, [sp, #96]
   17f50:	lsl	x2, x0, #26
   17f54:	ldr	x0, [sp, #120]
   17f58:	orr	x0, x2, x0
   17f5c:	cmp	x0, #0x0
   17f60:	cset	w0, ne  // ne = any
   17f64:	and	w0, w0, #0xff
   17f68:	and	x0, x0, #0xff
   17f6c:	orr	x0, x1, x0
   17f70:	str	x0, [sp, #120]
   17f74:	str	xzr, [sp, #96]
   17f78:	ldr	x0, [sp, #120]
   17f7c:	str	x0, [sp, #128]
   17f80:	b	18058 <__trunctfdf2@@GCC_3.0+0x9bc>
   17f84:	ldr	x0, [sp, #88]
   17f88:	cmp	x0, #0x0
   17f8c:	b.ne	17fc4 <__trunctfdf2@@GCC_3.0+0x928>  // b.any
   17f90:	str	xzr, [sp, #136]
   17f94:	ldr	x1, [sp, #96]
   17f98:	ldr	x0, [sp, #120]
   17f9c:	orr	x0, x1, x0
   17fa0:	cmp	x0, #0x0
   17fa4:	b.ne	17fb0 <__trunctfdf2@@GCC_3.0+0x914>  // b.any
   17fa8:	str	xzr, [sp, #128]
   17fac:	b	18058 <__trunctfdf2@@GCC_3.0+0x9bc>
   17fb0:	str	xzr, [sp, #128]
   17fb4:	ldr	x0, [sp, #128]
   17fb8:	orr	x0, x0, #0x1
   17fbc:	str	x0, [sp, #128]
   17fc0:	b	18058 <__trunctfdf2@@GCC_3.0+0x9bc>
   17fc4:	mov	x0, #0x1f                  	// #31
   17fc8:	str	x0, [sp, #136]
   17fcc:	ldr	x1, [sp, #96]
   17fd0:	ldr	x0, [sp, #120]
   17fd4:	orr	x0, x1, x0
   17fd8:	cmp	x0, #0x0
   17fdc:	b.ne	17fe8 <__trunctfdf2@@GCC_3.0+0x94c>  // b.any
   17fe0:	str	xzr, [sp, #128]
   17fe4:	b	18058 <__trunctfdf2@@GCC_3.0+0x9bc>
   17fe8:	ldr	x1, [sp, #88]
   17fec:	mov	x0, #0x7fff                	// #32767
   17ff0:	cmp	x1, x0
   17ff4:	b.ne	18028 <__trunctfdf2@@GCC_3.0+0x98c>  // b.any
   17ff8:	ldr	x1, [sp, #96]
   17ffc:	ldr	x0, [sp, #120]
   18000:	orr	x0, x1, x0
   18004:	cmp	x0, #0x0
   18008:	b.eq	18028 <__trunctfdf2@@GCC_3.0+0x98c>  // b.none
   1800c:	ldr	x0, [sp, #96]
   18010:	and	x0, x0, #0x4000000000000
   18014:	cmp	x0, #0x0
   18018:	b.ne	18028 <__trunctfdf2@@GCC_3.0+0x98c>  // b.any
   1801c:	ldr	w0, [sp, #116]
   18020:	orr	w0, w0, #0x1
   18024:	str	w0, [sp, #116]
   18028:	ldr	x0, [sp, #96]
   1802c:	lsr	x0, x0, #38
   18030:	str	x0, [sp, #120]
   18034:	str	xzr, [sp, #96]
   18038:	ldr	x0, [sp, #120]
   1803c:	str	x0, [sp, #128]
   18040:	ldr	x0, [sp, #128]
   18044:	and	x0, x0, #0xfffffffffffffff8
   18048:	str	x0, [sp, #128]
   1804c:	ldr	x0, [sp, #128]
   18050:	orr	x0, x0, #0x1000
   18054:	str	x0, [sp, #128]
   18058:	ldr	x0, [sp, #136]
   1805c:	cmp	x0, #0x0
   18060:	b.ne	18078 <__trunctfdf2@@GCC_3.0+0x9dc>  // b.any
   18064:	ldr	x0, [sp, #128]
   18068:	cmp	x0, #0x0
   1806c:	b.eq	18078 <__trunctfdf2@@GCC_3.0+0x9dc>  // b.none
   18070:	mov	w0, #0x1                   	// #1
   18074:	b	1807c <__trunctfdf2@@GCC_3.0+0x9e0>
   18078:	mov	w0, #0x0                   	// #0
   1807c:	str	w0, [sp, #68]
   18080:	ldr	x0, [sp, #128]
   18084:	and	x0, x0, #0x7
   18088:	cmp	x0, #0x0
   1808c:	b.eq	18150 <__trunctfdf2@@GCC_3.0+0xab4>  // b.none
   18090:	ldr	w0, [sp, #116]
   18094:	orr	w0, w0, #0x10
   18098:	str	w0, [sp, #116]
   1809c:	ldr	x0, [sp, #104]
   180a0:	and	x0, x0, #0xc00000
   180a4:	cmp	x0, #0xc00, lsl #12
   180a8:	b.eq	18158 <__trunctfdf2@@GCC_3.0+0xabc>  // b.none
   180ac:	cmp	x0, #0xc00, lsl #12
   180b0:	b.hi	1815c <__trunctfdf2@@GCC_3.0+0xac0>  // b.pmore
   180b4:	cmp	x0, #0x800, lsl #12
   180b8:	b.eq	18124 <__trunctfdf2@@GCC_3.0+0xa88>  // b.none
   180bc:	cmp	x0, #0x800, lsl #12
   180c0:	b.hi	1815c <__trunctfdf2@@GCC_3.0+0xac0>  // b.pmore
   180c4:	cmp	x0, #0x0
   180c8:	b.eq	180d8 <__trunctfdf2@@GCC_3.0+0xa3c>  // b.none
   180cc:	cmp	x0, #0x400, lsl #12
   180d0:	b.eq	180f8 <__trunctfdf2@@GCC_3.0+0xa5c>  // b.none
   180d4:	b	1815c <__trunctfdf2@@GCC_3.0+0xac0>
   180d8:	ldr	x0, [sp, #128]
   180dc:	and	x0, x0, #0xf
   180e0:	cmp	x0, #0x4
   180e4:	b.eq	18158 <__trunctfdf2@@GCC_3.0+0xabc>  // b.none
   180e8:	ldr	x0, [sp, #128]
   180ec:	add	x0, x0, #0x4
   180f0:	str	x0, [sp, #128]
   180f4:	b	18158 <__trunctfdf2@@GCC_3.0+0xabc>
   180f8:	ldr	x0, [sp, #72]
   180fc:	cmp	x0, #0x0
   18100:	b.ne	18158 <__trunctfdf2@@GCC_3.0+0xabc>  // b.any
   18104:	ldr	x0, [sp, #128]
   18108:	and	x0, x0, #0x7
   1810c:	cmp	x0, #0x0
   18110:	b.eq	18158 <__trunctfdf2@@GCC_3.0+0xabc>  // b.none
   18114:	ldr	x0, [sp, #128]
   18118:	add	x0, x0, #0x8
   1811c:	str	x0, [sp, #128]
   18120:	b	18158 <__trunctfdf2@@GCC_3.0+0xabc>
   18124:	ldr	x0, [sp, #72]
   18128:	cmp	x0, #0x0
   1812c:	b.eq	18158 <__trunctfdf2@@GCC_3.0+0xabc>  // b.none
   18130:	ldr	x0, [sp, #128]
   18134:	and	x0, x0, #0x7
   18138:	cmp	x0, #0x0
   1813c:	b.eq	18158 <__trunctfdf2@@GCC_3.0+0xabc>  // b.none
   18140:	ldr	x0, [sp, #128]
   18144:	add	x0, x0, #0x8
   18148:	str	x0, [sp, #128]
   1814c:	b	18158 <__trunctfdf2@@GCC_3.0+0xabc>
   18150:	nop
   18154:	b	1815c <__trunctfdf2@@GCC_3.0+0xac0>
   18158:	nop
   1815c:	ldr	w0, [sp, #68]
   18160:	cmp	w0, #0x0
   18164:	b.eq	18194 <__trunctfdf2@@GCC_3.0+0xaf8>  // b.none
   18168:	ldr	w0, [sp, #116]
   1816c:	and	w0, w0, #0x10
   18170:	cmp	w0, #0x0
   18174:	b.ne	18188 <__trunctfdf2@@GCC_3.0+0xaec>  // b.any
   18178:	ldr	x0, [sp, #104]
   1817c:	and	x0, x0, #0x800
   18180:	cmp	x0, #0x0
   18184:	b.eq	18194 <__trunctfdf2@@GCC_3.0+0xaf8>  // b.none
   18188:	ldr	w0, [sp, #116]
   1818c:	orr	w0, w0, #0x8
   18190:	str	w0, [sp, #116]
   18194:	ldr	x0, [sp, #128]
   18198:	and	x0, x0, #0x2000
   1819c:	cmp	x0, #0x0
   181a0:	b.eq	18248 <__trunctfdf2@@GCC_3.0+0xbac>  // b.none
   181a4:	ldr	x0, [sp, #128]
   181a8:	and	x0, x0, #0xffffffffffffdfff
   181ac:	str	x0, [sp, #128]
   181b0:	ldr	x0, [sp, #136]
   181b4:	add	x0, x0, #0x1
   181b8:	str	x0, [sp, #136]
   181bc:	ldr	x0, [sp, #136]
   181c0:	cmp	x0, #0x1f
   181c4:	b.ne	18248 <__trunctfdf2@@GCC_3.0+0xbac>  // b.any
   181c8:	ldr	x0, [sp, #104]
   181cc:	and	x0, x0, #0xc00000
   181d0:	cmp	x0, #0x0
   181d4:	b.eq	18210 <__trunctfdf2@@GCC_3.0+0xb74>  // b.none
   181d8:	ldr	x0, [sp, #104]
   181dc:	and	x0, x0, #0xc00000
   181e0:	cmp	x0, #0x400, lsl #12
   181e4:	b.ne	181f4 <__trunctfdf2@@GCC_3.0+0xb58>  // b.any
   181e8:	ldr	x0, [sp, #72]
   181ec:	cmp	x0, #0x0
   181f0:	b.eq	18210 <__trunctfdf2@@GCC_3.0+0xb74>  // b.none
   181f4:	ldr	x0, [sp, #104]
   181f8:	and	x0, x0, #0xc00000
   181fc:	cmp	x0, #0x800, lsl #12
   18200:	b.ne	18220 <__trunctfdf2@@GCC_3.0+0xb84>  // b.any
   18204:	ldr	x0, [sp, #72]
   18208:	cmp	x0, #0x0
   1820c:	b.eq	18220 <__trunctfdf2@@GCC_3.0+0xb84>  // b.none
   18210:	mov	x0, #0x1f                  	// #31
   18214:	str	x0, [sp, #136]
   18218:	str	xzr, [sp, #128]
   1821c:	b	18230 <__trunctfdf2@@GCC_3.0+0xb94>
   18220:	mov	x0, #0x1e                  	// #30
   18224:	str	x0, [sp, #136]
   18228:	mov	x0, #0xffffffffffffffff    	// #-1
   1822c:	str	x0, [sp, #128]
   18230:	ldr	w0, [sp, #116]
   18234:	orr	w0, w0, #0x10
   18238:	str	w0, [sp, #116]
   1823c:	ldr	w0, [sp, #116]
   18240:	orr	w0, w0, #0x4
   18244:	str	w0, [sp, #116]
   18248:	ldr	x0, [sp, #128]
   1824c:	lsr	x0, x0, #3
   18250:	str	x0, [sp, #128]
   18254:	ldr	x0, [sp, #136]
   18258:	cmp	x0, #0x1f
   1825c:	b.ne	18278 <__trunctfdf2@@GCC_3.0+0xbdc>  // b.any
   18260:	ldr	x0, [sp, #128]
   18264:	cmp	x0, #0x0
   18268:	b.eq	18278 <__trunctfdf2@@GCC_3.0+0xbdc>  // b.none
   1826c:	ldr	x0, [sp, #128]
   18270:	orr	x0, x0, #0x200
   18274:	str	x0, [sp, #128]
   18278:	ldr	x0, [sp, #128]
   1827c:	and	w0, w0, #0x3ff
   18280:	and	w1, w0, #0xffff
   18284:	ldrh	w0, [sp, #40]
   18288:	bfxil	w0, w1, #0, #10
   1828c:	strh	w0, [sp, #40]
   18290:	ldr	x0, [sp, #136]
   18294:	and	w0, w0, #0x1f
   18298:	and	w1, w0, #0xff
   1829c:	ldrb	w0, [sp, #41]
   182a0:	bfi	w0, w1, #2, #5
   182a4:	strb	w0, [sp, #41]
   182a8:	ldr	x0, [sp, #72]
   182ac:	and	w0, w0, #0x1
   182b0:	and	w1, w0, #0xff
   182b4:	ldrb	w0, [sp, #41]
   182b8:	bfi	w0, w1, #7, #1
   182bc:	strb	w0, [sp, #41]
   182c0:	ldr	h0, [sp, #40]
   182c4:	str	h0, [sp, #66]
   182c8:	ldrsw	x0, [sp, #116]
   182cc:	cmp	x0, #0x0
   182d0:	b.eq	182dc <__trunctfdf2@@GCC_3.0+0xc40>  // b.none
   182d4:	ldr	w0, [sp, #116]
   182d8:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   182dc:	ldr	h0, [sp, #66]
   182e0:	ldp	x29, x30, [sp], #144
   182e4:	ret
   182e8:	stp	x29, x30, [sp, #-112]!
   182ec:	mov	x29, sp
   182f0:	str	h0, [sp, #30]
   182f4:	str	wzr, [sp, #108]
   182f8:	str	xzr, [sp, #64]
   182fc:	mrs	x0, fpcr
   18300:	str	x0, [sp, #64]
   18304:	ldr	h0, [sp, #30]
   18308:	str	h0, [sp, #32]
   1830c:	ldrh	w0, [sp, #32]
   18310:	ubfx	x0, x0, #0, #10
   18314:	and	w0, w0, #0xffff
   18318:	and	x0, x0, #0xffff
   1831c:	str	x0, [sp, #56]
   18320:	ldrb	w0, [sp, #33]
   18324:	ubfx	x0, x0, #2, #5
   18328:	and	w0, w0, #0xff
   1832c:	and	x0, x0, #0xff
   18330:	str	x0, [sp, #48]
   18334:	ldrb	w0, [sp, #33]
   18338:	ubfx	x0, x0, #7, #1
   1833c:	and	w0, w0, #0xff
   18340:	and	x0, x0, #0xff
   18344:	str	x0, [sp, #40]
   18348:	ldr	x0, [sp, #48]
   1834c:	cmp	x0, #0xe
   18350:	b.gt	18390 <__trunctfdf2@@GCC_3.0+0xcf4>
   18354:	stp	xzr, xzr, [sp, #80]
   18358:	ldr	x0, [sp, #48]
   1835c:	cmp	x0, #0x0
   18360:	b.ne	18380 <__trunctfdf2@@GCC_3.0+0xce4>  // b.any
   18364:	ldr	x0, [sp, #56]
   18368:	cmp	x0, #0x0
   1836c:	b.eq	18510 <__trunctfdf2@@GCC_3.0+0xe74>  // b.none
   18370:	ldr	w0, [sp, #108]
   18374:	orr	w0, w0, #0x10
   18378:	str	w0, [sp, #108]
   1837c:	b	18510 <__trunctfdf2@@GCC_3.0+0xe74>
   18380:	ldr	w0, [sp, #108]
   18384:	orr	w0, w0, #0x10
   18388:	str	w0, [sp, #108]
   1838c:	b	18510 <__trunctfdf2@@GCC_3.0+0xe74>
   18390:	ldr	x0, [sp, #48]
   18394:	cmp	x0, #0x1e
   18398:	b.le	183f8 <__trunctfdf2@@GCC_3.0+0xd5c>
   1839c:	mov	x0, #0x1                   	// #1
   183a0:	mov	x1, #0x0                   	// #0
   183a4:	stp	x0, x1, [sp, #80]
   183a8:	ldr	x0, [sp, #80]
   183ac:	lsl	x0, x0, #63
   183b0:	str	x0, [sp, #88]
   183b4:	str	xzr, [sp, #80]
   183b8:	mov	x1, #0x1                   	// #1
   183bc:	ldr	x0, [sp, #40]
   183c0:	sub	x0, x1, x0
   183c4:	mov	x2, x0
   183c8:	asr	x0, x0, #63
   183cc:	mov	x3, x0
   183d0:	ldp	x0, x1, [sp, #80]
   183d4:	subs	x4, x0, x2
   183d8:	sbc	x0, x1, x3
   183dc:	mov	x6, x4
   183e0:	mov	x7, x0
   183e4:	stp	x6, x7, [sp, #80]
   183e8:	ldr	w0, [sp, #108]
   183ec:	orr	w0, w0, #0x1
   183f0:	str	w0, [sp, #108]
   183f4:	b	18510 <__trunctfdf2@@GCC_3.0+0xe74>
   183f8:	str	wzr, [sp, #76]
   183fc:	ldr	x0, [sp, #56]
   18400:	orr	x0, x0, #0x400
   18404:	str	x0, [sp, #56]
   18408:	ldr	x0, [sp, #48]
   1840c:	cmp	x0, #0x18
   18410:	b.le	1848c <__trunctfdf2@@GCC_3.0+0xdf0>
   18414:	ldr	x0, [sp, #56]
   18418:	str	x0, [sp, #80]
   1841c:	str	xzr, [sp, #88]
   18420:	ldr	x0, [sp, #48]
   18424:	sub	w0, w0, #0x19
   18428:	sub	w1, w0, #0x40
   1842c:	ldr	x2, [sp, #80]
   18430:	lsl	x2, x2, x1
   18434:	mov	x7, #0x0                   	// #0
   18438:	ldr	x3, [sp, #80]
   1843c:	lsr	x6, x3, #1
   18440:	mov	w3, #0x3f                  	// #63
   18444:	sub	w3, w3, w0
   18448:	lsr	x3, x6, x3
   1844c:	ldr	x6, [sp, #88]
   18450:	lsl	x6, x6, x0
   18454:	orr	x3, x6, x3
   18458:	str	x3, [sp, #88]
   1845c:	ldr	x3, [sp, #80]
   18460:	lsl	x0, x3, x0
   18464:	str	x0, [sp, #80]
   18468:	ldr	x0, [sp, #88]
   1846c:	cmp	w1, #0x0
   18470:	csel	x0, x0, x2, lt  // lt = tstop
   18474:	str	x0, [sp, #88]
   18478:	ldr	x0, [sp, #80]
   1847c:	cmp	w1, #0x0
   18480:	csel	x0, x0, x7, lt  // lt = tstop
   18484:	str	x0, [sp, #80]
   18488:	b	184d4 <__trunctfdf2@@GCC_3.0+0xe38>
   1848c:	ldr	x0, [sp, #48]
   18490:	add	w0, w0, #0x27
   18494:	ldr	x1, [sp, #56]
   18498:	lsl	x0, x1, x0
   1849c:	cmp	x0, #0x0
   184a0:	cset	w0, ne  // ne = any
   184a4:	and	w0, w0, #0xff
   184a8:	str	w0, [sp, #76]
   184ac:	ldr	x0, [sp, #48]
   184b0:	mov	w1, w0
   184b4:	mov	w0, #0x19                  	// #25
   184b8:	sub	w0, w0, w1
   184bc:	ldr	x1, [sp, #56]
   184c0:	lsr	x0, x1, x0
   184c4:	str	x0, [sp, #56]
   184c8:	ldr	x0, [sp, #56]
   184cc:	str	x0, [sp, #80]
   184d0:	str	xzr, [sp, #88]
   184d4:	ldr	x0, [sp, #40]
   184d8:	cmp	x0, #0x0
   184dc:	b.eq	184f8 <__trunctfdf2@@GCC_3.0+0xe5c>  // b.none
   184e0:	ldp	x0, x1, [sp, #80]
   184e4:	negs	x2, x0
   184e8:	ngc	x0, x1
   184ec:	mov	x4, x2
   184f0:	mov	x5, x0
   184f4:	stp	x4, x5, [sp, #80]
   184f8:	ldr	w0, [sp, #76]
   184fc:	cmp	w0, #0x0
   18500:	b.eq	18510 <__trunctfdf2@@GCC_3.0+0xe74>  // b.none
   18504:	ldr	w0, [sp, #108]
   18508:	orr	w0, w0, #0x10
   1850c:	str	w0, [sp, #108]
   18510:	ldrsw	x0, [sp, #108]
   18514:	cmp	x0, #0x0
   18518:	b.eq	18524 <__trunctfdf2@@GCC_3.0+0xe88>  // b.none
   1851c:	ldr	w0, [sp, #108]
   18520:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   18524:	ldp	x0, x1, [sp, #80]
   18528:	ldp	x29, x30, [sp], #112
   1852c:	ret
   18530:	stp	x29, x30, [sp, #-112]!
   18534:	mov	x29, sp
   18538:	str	h0, [sp, #30]
   1853c:	str	wzr, [sp, #108]
   18540:	str	xzr, [sp, #64]
   18544:	mrs	x0, fpcr
   18548:	str	x0, [sp, #64]
   1854c:	ldr	h0, [sp, #30]
   18550:	str	h0, [sp, #32]
   18554:	ldrh	w0, [sp, #32]
   18558:	ubfx	x0, x0, #0, #10
   1855c:	and	w0, w0, #0xffff
   18560:	and	x0, x0, #0xffff
   18564:	str	x0, [sp, #56]
   18568:	ldrb	w0, [sp, #33]
   1856c:	ubfx	x0, x0, #2, #5
   18570:	and	w0, w0, #0xff
   18574:	and	x0, x0, #0xff
   18578:	str	x0, [sp, #48]
   1857c:	ldrb	w0, [sp, #33]
   18580:	ubfx	x0, x0, #7, #1
   18584:	and	w0, w0, #0xff
   18588:	and	x0, x0, #0xff
   1858c:	str	x0, [sp, #40]
   18590:	ldr	x0, [sp, #48]
   18594:	cmp	x0, #0xe
   18598:	b.gt	185d8 <__trunctfdf2@@GCC_3.0+0xf3c>
   1859c:	stp	xzr, xzr, [sp, #80]
   185a0:	ldr	x0, [sp, #48]
   185a4:	cmp	x0, #0x0
   185a8:	b.ne	185c8 <__trunctfdf2@@GCC_3.0+0xf2c>  // b.any
   185ac:	ldr	x0, [sp, #56]
   185b0:	cmp	x0, #0x0
   185b4:	b.eq	1871c <__trunctfdf2@@GCC_3.0+0x1080>  // b.none
   185b8:	ldr	w0, [sp, #108]
   185bc:	orr	w0, w0, #0x10
   185c0:	str	w0, [sp, #108]
   185c4:	b	1871c <__trunctfdf2@@GCC_3.0+0x1080>
   185c8:	ldr	w0, [sp, #108]
   185cc:	orr	w0, w0, #0x10
   185d0:	str	w0, [sp, #108]
   185d4:	b	1871c <__trunctfdf2@@GCC_3.0+0x1080>
   185d8:	ldr	x0, [sp, #48]
   185dc:	cmp	x0, #0x1e
   185e0:	b.gt	185f0 <__trunctfdf2@@GCC_3.0+0xf54>
   185e4:	ldr	x0, [sp, #40]
   185e8:	cmp	x0, #0x0
   185ec:	b.eq	18628 <__trunctfdf2@@GCC_3.0+0xf8c>  // b.none
   185f0:	stp	xzr, xzr, [sp, #80]
   185f4:	ldr	x0, [sp, #40]
   185f8:	cmp	x0, #0x0
   185fc:	b.ne	18618 <__trunctfdf2@@GCC_3.0+0xf7c>  // b.any
   18600:	ldr	x0, [sp, #80]
   18604:	mvn	x0, x0
   18608:	str	x0, [sp, #80]
   1860c:	ldr	x0, [sp, #88]
   18610:	mvn	x0, x0
   18614:	str	x0, [sp, #88]
   18618:	ldr	w0, [sp, #108]
   1861c:	orr	w0, w0, #0x1
   18620:	str	w0, [sp, #108]
   18624:	b	1871c <__trunctfdf2@@GCC_3.0+0x1080>
   18628:	str	wzr, [sp, #76]
   1862c:	ldr	x0, [sp, #56]
   18630:	orr	x0, x0, #0x400
   18634:	str	x0, [sp, #56]
   18638:	ldr	x0, [sp, #48]
   1863c:	cmp	x0, #0x18
   18640:	b.le	186bc <__trunctfdf2@@GCC_3.0+0x1020>
   18644:	ldr	x0, [sp, #56]
   18648:	str	x0, [sp, #80]
   1864c:	str	xzr, [sp, #88]
   18650:	ldr	x0, [sp, #48]
   18654:	sub	w0, w0, #0x19
   18658:	sub	w1, w0, #0x40
   1865c:	ldr	x2, [sp, #80]
   18660:	lsl	x2, x2, x1
   18664:	mov	x5, #0x0                   	// #0
   18668:	ldr	x3, [sp, #80]
   1866c:	lsr	x4, x3, #1
   18670:	mov	w3, #0x3f                  	// #63
   18674:	sub	w3, w3, w0
   18678:	lsr	x3, x4, x3
   1867c:	ldr	x4, [sp, #88]
   18680:	lsl	x4, x4, x0
   18684:	orr	x3, x4, x3
   18688:	str	x3, [sp, #88]
   1868c:	ldr	x3, [sp, #80]
   18690:	lsl	x0, x3, x0
   18694:	str	x0, [sp, #80]
   18698:	ldr	x0, [sp, #88]
   1869c:	cmp	w1, #0x0
   186a0:	csel	x0, x0, x2, lt  // lt = tstop
   186a4:	str	x0, [sp, #88]
   186a8:	ldr	x0, [sp, #80]
   186ac:	cmp	w1, #0x0
   186b0:	csel	x0, x0, x5, lt  // lt = tstop
   186b4:	str	x0, [sp, #80]
   186b8:	b	18704 <__trunctfdf2@@GCC_3.0+0x1068>
   186bc:	ldr	x0, [sp, #48]
   186c0:	add	w0, w0, #0x27
   186c4:	ldr	x1, [sp, #56]
   186c8:	lsl	x0, x1, x0
   186cc:	cmp	x0, #0x0
   186d0:	cset	w0, ne  // ne = any
   186d4:	and	w0, w0, #0xff
   186d8:	str	w0, [sp, #76]
   186dc:	ldr	x0, [sp, #48]
   186e0:	mov	w1, w0
   186e4:	mov	w0, #0x19                  	// #25
   186e8:	sub	w0, w0, w1
   186ec:	ldr	x1, [sp, #56]
   186f0:	lsr	x0, x1, x0
   186f4:	str	x0, [sp, #56]
   186f8:	ldr	x0, [sp, #56]
   186fc:	str	x0, [sp, #80]
   18700:	str	xzr, [sp, #88]
   18704:	ldr	w0, [sp, #76]
   18708:	cmp	w0, #0x0
   1870c:	b.eq	1871c <__trunctfdf2@@GCC_3.0+0x1080>  // b.none
   18710:	ldr	w0, [sp, #108]
   18714:	orr	w0, w0, #0x10
   18718:	str	w0, [sp, #108]
   1871c:	ldrsw	x0, [sp, #108]
   18720:	cmp	x0, #0x0
   18724:	b.eq	18730 <__trunctfdf2@@GCC_3.0+0x1094>  // b.none
   18728:	ldr	w0, [sp, #108]
   1872c:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   18730:	ldp	x0, x1, [sp, #80]
   18734:	ldp	x29, x30, [sp], #112
   18738:	ret
   1873c:	stp	x29, x30, [sp, #-112]!
   18740:	mov	x29, sp
   18744:	stp	x0, x1, [sp, #16]
   18748:	str	wzr, [sp, #84]
   1874c:	str	xzr, [sp, #48]
   18750:	mrs	x0, fpcr
   18754:	str	x0, [sp, #48]
   18758:	ldr	x0, [sp, #16]
   1875c:	ldr	x1, [sp, #24]
   18760:	orr	x0, x0, x1
   18764:	cmp	x0, #0x0
   18768:	b.eq	18c2c <__trunctfdf2@@GCC_3.0+0x1590>  // b.none
   1876c:	ldp	x0, x1, [sp, #16]
   18770:	stp	x0, x1, [sp, #64]
   18774:	ldr	x0, [sp, #24]
   18778:	lsr	x0, x0, #63
   1877c:	and	w0, w0, #0xff
   18780:	and	x0, x0, #0xff
   18784:	str	x0, [sp, #88]
   18788:	ldr	x0, [sp, #88]
   1878c:	cmp	x0, #0x0
   18790:	b.eq	187ac <__trunctfdf2@@GCC_3.0+0x1110>  // b.none
   18794:	ldp	x0, x1, [sp, #64]
   18798:	negs	x14, x0
   1879c:	ngc	x0, x1
   187a0:	mov	x8, x14
   187a4:	mov	x9, x0
   187a8:	stp	x8, x9, [sp, #64]
   187ac:	ldr	x0, [sp, #72]
   187b0:	mov	x12, x0
   187b4:	mov	x13, #0x0                   	// #0
   187b8:	mov	x0, x12
   187bc:	cmp	x0, #0x0
   187c0:	b.eq	187e0 <__trunctfdf2@@GCC_3.0+0x1144>  // b.none
   187c4:	ldr	x0, [sp, #72]
   187c8:	mov	x10, x0
   187cc:	mov	x11, #0x0                   	// #0
   187d0:	mov	x0, x10
   187d4:	clz	x0, x0
   187d8:	str	w0, [sp, #60]
   187dc:	b	187f8 <__trunctfdf2@@GCC_3.0+0x115c>
   187e0:	ldr	x0, [sp, #64]
   187e4:	clz	x0, x0
   187e8:	str	w0, [sp, #60]
   187ec:	ldr	w0, [sp, #60]
   187f0:	add	w0, w0, #0x40
   187f4:	str	w0, [sp, #60]
   187f8:	mov	w1, #0x8e                  	// #142
   187fc:	ldr	w0, [sp, #60]
   18800:	sub	w0, w1, w0
   18804:	sxtw	x0, w0
   18808:	str	x0, [sp, #104]
   1880c:	ldr	x0, [sp, #104]
   18810:	cmp	x0, #0x1e
   18814:	b.le	1889c <__trunctfdf2@@GCC_3.0+0x1200>
   18818:	ldr	x0, [sp, #48]
   1881c:	and	x0, x0, #0xc00000
   18820:	cmp	x0, #0x0
   18824:	b.eq	18860 <__trunctfdf2@@GCC_3.0+0x11c4>  // b.none
   18828:	ldr	x0, [sp, #48]
   1882c:	and	x0, x0, #0xc00000
   18830:	cmp	x0, #0x400, lsl #12
   18834:	b.ne	18844 <__trunctfdf2@@GCC_3.0+0x11a8>  // b.any
   18838:	ldr	x0, [sp, #88]
   1883c:	cmp	x0, #0x0
   18840:	b.eq	18860 <__trunctfdf2@@GCC_3.0+0x11c4>  // b.none
   18844:	ldr	x0, [sp, #48]
   18848:	and	x0, x0, #0xc00000
   1884c:	cmp	x0, #0x800, lsl #12
   18850:	b.ne	18870 <__trunctfdf2@@GCC_3.0+0x11d4>  // b.any
   18854:	ldr	x0, [sp, #88]
   18858:	cmp	x0, #0x0
   1885c:	b.eq	18870 <__trunctfdf2@@GCC_3.0+0x11d4>  // b.none
   18860:	mov	x0, #0x1f                  	// #31
   18864:	str	x0, [sp, #104]
   18868:	str	xzr, [sp, #96]
   1886c:	b	18880 <__trunctfdf2@@GCC_3.0+0x11e4>
   18870:	mov	x0, #0x1e                  	// #30
   18874:	str	x0, [sp, #104]
   18878:	mov	x0, #0xffffffffffffffff    	// #-1
   1887c:	str	x0, [sp, #96]
   18880:	ldr	w0, [sp, #84]
   18884:	orr	w0, w0, #0x10
   18888:	str	w0, [sp, #84]
   1888c:	ldr	w0, [sp, #84]
   18890:	orr	w0, w0, #0x4
   18894:	str	w0, [sp, #84]
   18898:	b	18a08 <__trunctfdf2@@GCC_3.0+0x136c>
   1889c:	ldr	x0, [sp, #104]
   188a0:	cmp	x0, #0x19
   188a4:	b.gt	188e4 <__trunctfdf2@@GCC_3.0+0x1248>
   188a8:	ldr	x0, [sp, #64]
   188ac:	str	x0, [sp, #96]
   188b0:	mov	x1, #0x19                  	// #25
   188b4:	ldr	x0, [sp, #104]
   188b8:	sub	x0, x1, x0
   188bc:	cmp	x0, #0x0
   188c0:	b.le	18c38 <__trunctfdf2@@GCC_3.0+0x159c>
   188c4:	ldr	x0, [sp, #104]
   188c8:	mov	w1, w0
   188cc:	mov	w0, #0x19                  	// #25
   188d0:	sub	w0, w0, w1
   188d4:	ldr	x1, [sp, #96]
   188d8:	lsl	x0, x1, x0
   188dc:	str	x0, [sp, #96]
   188e0:	b	18c38 <__trunctfdf2@@GCC_3.0+0x159c>
   188e4:	ldr	x0, [sp, #104]
   188e8:	cmp	x0, #0x1c
   188ec:	b.le	189c4 <__trunctfdf2@@GCC_3.0+0x1328>
   188f0:	ldr	x0, [sp, #104]
   188f4:	sub	w0, w0, #0x1c
   188f8:	sub	w1, w0, #0x40
   188fc:	ldr	x8, [sp, #72]
   18900:	lsr	x8, x8, x1
   18904:	mov	x11, #0x0                   	// #0
   18908:	ldr	x9, [sp, #72]
   1890c:	lsl	x10, x9, #1
   18910:	mov	w9, #0x3f                  	// #63
   18914:	sub	w9, w9, w0
   18918:	lsl	x9, x10, x9
   1891c:	ldr	x10, [sp, #64]
   18920:	lsr	x2, x10, x0
   18924:	orr	x2, x9, x2
   18928:	ldr	x9, [sp, #72]
   1892c:	lsr	x3, x9, x0
   18930:	cmp	w1, #0x0
   18934:	csel	x2, x8, x2, ge  // ge = tcont
   18938:	cmp	w1, #0x0
   1893c:	csel	x3, x11, x3, ge  // ge = tcont
   18940:	ldr	x0, [sp, #104]
   18944:	mov	w1, w0
   18948:	mov	w0, #0x9c                  	// #156
   1894c:	sub	w0, w0, w1
   18950:	sub	w1, w0, #0x40
   18954:	ldr	x8, [sp, #64]
   18958:	lsl	x8, x8, x1
   1895c:	mov	x11, #0x0                   	// #0
   18960:	ldr	x9, [sp, #64]
   18964:	lsr	x10, x9, #1
   18968:	mov	w9, #0x3f                  	// #63
   1896c:	sub	w9, w9, w0
   18970:	lsr	x9, x10, x9
   18974:	ldr	x10, [sp, #72]
   18978:	lsl	x5, x10, x0
   1897c:	orr	x5, x9, x5
   18980:	ldr	x9, [sp, #64]
   18984:	lsl	x4, x9, x0
   18988:	cmp	w1, #0x0
   1898c:	csel	x5, x8, x5, ge  // ge = tcont
   18990:	cmp	w1, #0x0
   18994:	csel	x4, x11, x4, ge  // ge = tcont
   18998:	orr	x0, x4, x5
   1899c:	cmp	x0, #0x0
   189a0:	cset	w0, ne  // ne = any
   189a4:	and	w0, w0, #0xff
   189a8:	and	x0, x0, #0xff
   189ac:	mov	x6, x0
   189b0:	mov	x7, #0x0                   	// #0
   189b4:	orr	x0, x2, x6
   189b8:	str	x0, [sp, #64]
   189bc:	orr	x0, x3, x7
   189c0:	str	x0, [sp, #72]
   189c4:	ldr	x0, [sp, #64]
   189c8:	str	x0, [sp, #96]
   189cc:	mov	x1, #0x1c                  	// #28
   189d0:	ldr	x0, [sp, #104]
   189d4:	sub	x0, x1, x0
   189d8:	cmp	x0, #0x0
   189dc:	b.le	189fc <__trunctfdf2@@GCC_3.0+0x1360>
   189e0:	ldr	x0, [sp, #104]
   189e4:	mov	w1, w0
   189e8:	mov	w0, #0x1c                  	// #28
   189ec:	sub	w0, w0, w1
   189f0:	ldr	x1, [sp, #96]
   189f4:	lsl	x0, x1, x0
   189f8:	str	x0, [sp, #96]
   189fc:	ldr	x0, [sp, #96]
   18a00:	and	x0, x0, #0xffffffffffffdfff
   18a04:	str	x0, [sp, #96]
   18a08:	ldr	x0, [sp, #104]
   18a0c:	cmp	x0, #0x0
   18a10:	b.ne	18a28 <__trunctfdf2@@GCC_3.0+0x138c>  // b.any
   18a14:	ldr	x0, [sp, #96]
   18a18:	cmp	x0, #0x0
   18a1c:	b.eq	18a28 <__trunctfdf2@@GCC_3.0+0x138c>  // b.none
   18a20:	mov	w0, #0x1                   	// #1
   18a24:	b	18a2c <__trunctfdf2@@GCC_3.0+0x1390>
   18a28:	mov	w0, #0x0                   	// #0
   18a2c:	str	w0, [sp, #44]
   18a30:	ldr	x0, [sp, #96]
   18a34:	and	x0, x0, #0x7
   18a38:	cmp	x0, #0x0
   18a3c:	b.eq	18b00 <__trunctfdf2@@GCC_3.0+0x1464>  // b.none
   18a40:	ldr	w0, [sp, #84]
   18a44:	orr	w0, w0, #0x10
   18a48:	str	w0, [sp, #84]
   18a4c:	ldr	x0, [sp, #48]
   18a50:	and	x0, x0, #0xc00000
   18a54:	cmp	x0, #0xc00, lsl #12
   18a58:	b.eq	18b08 <__trunctfdf2@@GCC_3.0+0x146c>  // b.none
   18a5c:	cmp	x0, #0xc00, lsl #12
   18a60:	b.hi	18b0c <__trunctfdf2@@GCC_3.0+0x1470>  // b.pmore
   18a64:	cmp	x0, #0x800, lsl #12
   18a68:	b.eq	18ad4 <__trunctfdf2@@GCC_3.0+0x1438>  // b.none
   18a6c:	cmp	x0, #0x800, lsl #12
   18a70:	b.hi	18b0c <__trunctfdf2@@GCC_3.0+0x1470>  // b.pmore
   18a74:	cmp	x0, #0x0
   18a78:	b.eq	18a88 <__trunctfdf2@@GCC_3.0+0x13ec>  // b.none
   18a7c:	cmp	x0, #0x400, lsl #12
   18a80:	b.eq	18aa8 <__trunctfdf2@@GCC_3.0+0x140c>  // b.none
   18a84:	b	18b0c <__trunctfdf2@@GCC_3.0+0x1470>
   18a88:	ldr	x0, [sp, #96]
   18a8c:	and	x0, x0, #0xf
   18a90:	cmp	x0, #0x4
   18a94:	b.eq	18b08 <__trunctfdf2@@GCC_3.0+0x146c>  // b.none
   18a98:	ldr	x0, [sp, #96]
   18a9c:	add	x0, x0, #0x4
   18aa0:	str	x0, [sp, #96]
   18aa4:	b	18b08 <__trunctfdf2@@GCC_3.0+0x146c>
   18aa8:	ldr	x0, [sp, #88]
   18aac:	cmp	x0, #0x0
   18ab0:	b.ne	18b08 <__trunctfdf2@@GCC_3.0+0x146c>  // b.any
   18ab4:	ldr	x0, [sp, #96]
   18ab8:	and	x0, x0, #0x7
   18abc:	cmp	x0, #0x0
   18ac0:	b.eq	18b08 <__trunctfdf2@@GCC_3.0+0x146c>  // b.none
   18ac4:	ldr	x0, [sp, #96]
   18ac8:	add	x0, x0, #0x8
   18acc:	str	x0, [sp, #96]
   18ad0:	b	18b08 <__trunctfdf2@@GCC_3.0+0x146c>
   18ad4:	ldr	x0, [sp, #88]
   18ad8:	cmp	x0, #0x0
   18adc:	b.eq	18b08 <__trunctfdf2@@GCC_3.0+0x146c>  // b.none
   18ae0:	ldr	x0, [sp, #96]
   18ae4:	and	x0, x0, #0x7
   18ae8:	cmp	x0, #0x0
   18aec:	b.eq	18b08 <__trunctfdf2@@GCC_3.0+0x146c>  // b.none
   18af0:	ldr	x0, [sp, #96]
   18af4:	add	x0, x0, #0x8
   18af8:	str	x0, [sp, #96]
   18afc:	b	18b08 <__trunctfdf2@@GCC_3.0+0x146c>
   18b00:	nop
   18b04:	b	18b0c <__trunctfdf2@@GCC_3.0+0x1470>
   18b08:	nop
   18b0c:	ldr	w0, [sp, #44]
   18b10:	cmp	w0, #0x0
   18b14:	b.eq	18b44 <__trunctfdf2@@GCC_3.0+0x14a8>  // b.none
   18b18:	ldr	w0, [sp, #84]
   18b1c:	and	w0, w0, #0x10
   18b20:	cmp	w0, #0x0
   18b24:	b.ne	18b38 <__trunctfdf2@@GCC_3.0+0x149c>  // b.any
   18b28:	ldr	x0, [sp, #48]
   18b2c:	and	x0, x0, #0x800
   18b30:	cmp	x0, #0x0
   18b34:	b.eq	18b44 <__trunctfdf2@@GCC_3.0+0x14a8>  // b.none
   18b38:	ldr	w0, [sp, #84]
   18b3c:	orr	w0, w0, #0x8
   18b40:	str	w0, [sp, #84]
   18b44:	ldr	x0, [sp, #96]
   18b48:	and	x0, x0, #0x2000
   18b4c:	cmp	x0, #0x0
   18b50:	b.eq	18bf8 <__trunctfdf2@@GCC_3.0+0x155c>  // b.none
   18b54:	ldr	x0, [sp, #96]
   18b58:	and	x0, x0, #0xffffffffffffdfff
   18b5c:	str	x0, [sp, #96]
   18b60:	ldr	x0, [sp, #104]
   18b64:	add	x0, x0, #0x1
   18b68:	str	x0, [sp, #104]
   18b6c:	ldr	x0, [sp, #104]
   18b70:	cmp	x0, #0x1f
   18b74:	b.ne	18bf8 <__trunctfdf2@@GCC_3.0+0x155c>  // b.any
   18b78:	ldr	x0, [sp, #48]
   18b7c:	and	x0, x0, #0xc00000
   18b80:	cmp	x0, #0x0
   18b84:	b.eq	18bc0 <__trunctfdf2@@GCC_3.0+0x1524>  // b.none
   18b88:	ldr	x0, [sp, #48]
   18b8c:	and	x0, x0, #0xc00000
   18b90:	cmp	x0, #0x400, lsl #12
   18b94:	b.ne	18ba4 <__trunctfdf2@@GCC_3.0+0x1508>  // b.any
   18b98:	ldr	x0, [sp, #88]
   18b9c:	cmp	x0, #0x0
   18ba0:	b.eq	18bc0 <__trunctfdf2@@GCC_3.0+0x1524>  // b.none
   18ba4:	ldr	x0, [sp, #48]
   18ba8:	and	x0, x0, #0xc00000
   18bac:	cmp	x0, #0x800, lsl #12
   18bb0:	b.ne	18bd0 <__trunctfdf2@@GCC_3.0+0x1534>  // b.any
   18bb4:	ldr	x0, [sp, #88]
   18bb8:	cmp	x0, #0x0
   18bbc:	b.eq	18bd0 <__trunctfdf2@@GCC_3.0+0x1534>  // b.none
   18bc0:	mov	x0, #0x1f                  	// #31
   18bc4:	str	x0, [sp, #104]
   18bc8:	str	xzr, [sp, #96]
   18bcc:	b	18be0 <__trunctfdf2@@GCC_3.0+0x1544>
   18bd0:	mov	x0, #0x1e                  	// #30
   18bd4:	str	x0, [sp, #104]
   18bd8:	mov	x0, #0xffffffffffffffff    	// #-1
   18bdc:	str	x0, [sp, #96]
   18be0:	ldr	w0, [sp, #84]
   18be4:	orr	w0, w0, #0x10
   18be8:	str	w0, [sp, #84]
   18bec:	ldr	w0, [sp, #84]
   18bf0:	orr	w0, w0, #0x4
   18bf4:	str	w0, [sp, #84]
   18bf8:	ldr	x0, [sp, #96]
   18bfc:	lsr	x0, x0, #3
   18c00:	str	x0, [sp, #96]
   18c04:	ldr	x0, [sp, #104]
   18c08:	cmp	x0, #0x1f
   18c0c:	b.ne	18c38 <__trunctfdf2@@GCC_3.0+0x159c>  // b.any
   18c10:	ldr	x0, [sp, #96]
   18c14:	cmp	x0, #0x0
   18c18:	b.eq	18c38 <__trunctfdf2@@GCC_3.0+0x159c>  // b.none
   18c1c:	ldr	x0, [sp, #96]
   18c20:	orr	x0, x0, #0x200
   18c24:	str	x0, [sp, #96]
   18c28:	b	18c38 <__trunctfdf2@@GCC_3.0+0x159c>
   18c2c:	str	xzr, [sp, #88]
   18c30:	str	xzr, [sp, #104]
   18c34:	str	xzr, [sp, #96]
   18c38:	ldr	x0, [sp, #96]
   18c3c:	and	w0, w0, #0x3ff
   18c40:	and	w1, w0, #0xffff
   18c44:	ldrh	w0, [sp, #32]
   18c48:	bfxil	w0, w1, #0, #10
   18c4c:	strh	w0, [sp, #32]
   18c50:	ldr	x0, [sp, #104]
   18c54:	and	w0, w0, #0x1f
   18c58:	and	w1, w0, #0xff
   18c5c:	ldrb	w0, [sp, #33]
   18c60:	bfi	w0, w1, #2, #5
   18c64:	strb	w0, [sp, #33]
   18c68:	ldr	x0, [sp, #88]
   18c6c:	and	w0, w0, #0x1
   18c70:	and	w1, w0, #0xff
   18c74:	ldrb	w0, [sp, #33]
   18c78:	bfi	w0, w1, #7, #1
   18c7c:	strb	w0, [sp, #33]
   18c80:	ldr	h0, [sp, #32]
   18c84:	str	h0, [sp, #42]
   18c88:	ldrsw	x0, [sp, #84]
   18c8c:	cmp	x0, #0x0
   18c90:	b.eq	18c9c <__trunctfdf2@@GCC_3.0+0x1600>  // b.none
   18c94:	ldr	w0, [sp, #84]
   18c98:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   18c9c:	ldr	h0, [sp, #42]
   18ca0:	ldp	x29, x30, [sp], #112
   18ca4:	ret
   18ca8:	stp	x29, x30, [sp, #-112]!
   18cac:	mov	x29, sp
   18cb0:	stp	x0, x1, [sp, #16]
   18cb4:	str	wzr, [sp, #84]
   18cb8:	str	xzr, [sp, #48]
   18cbc:	mrs	x0, fpcr
   18cc0:	str	x0, [sp, #48]
   18cc4:	ldr	x0, [sp, #16]
   18cc8:	ldr	x1, [sp, #24]
   18ccc:	orr	x0, x0, x1
   18cd0:	cmp	x0, #0x0
   18cd4:	b.eq	19188 <__trunctfdf2@@GCC_3.0+0x1aec>  // b.none
   18cd8:	ldp	x0, x1, [sp, #16]
   18cdc:	stp	x0, x1, [sp, #64]
   18ce0:	str	xzr, [sp, #88]
   18ce4:	ldr	x0, [sp, #88]
   18ce8:	cmp	x0, #0x0
   18cec:	b.eq	18d08 <__trunctfdf2@@GCC_3.0+0x166c>  // b.none
   18cf0:	ldp	x0, x1, [sp, #64]
   18cf4:	negs	x14, x0
   18cf8:	ngc	x0, x1
   18cfc:	mov	x8, x14
   18d00:	mov	x9, x0
   18d04:	stp	x8, x9, [sp, #64]
   18d08:	ldr	x0, [sp, #72]
   18d0c:	mov	x12, x0
   18d10:	mov	x13, #0x0                   	// #0
   18d14:	mov	x0, x12
   18d18:	cmp	x0, #0x0
   18d1c:	b.eq	18d3c <__trunctfdf2@@GCC_3.0+0x16a0>  // b.none
   18d20:	ldr	x0, [sp, #72]
   18d24:	mov	x10, x0
   18d28:	mov	x11, #0x0                   	// #0
   18d2c:	mov	x0, x10
   18d30:	clz	x0, x0
   18d34:	str	w0, [sp, #60]
   18d38:	b	18d54 <__trunctfdf2@@GCC_3.0+0x16b8>
   18d3c:	ldr	x0, [sp, #64]
   18d40:	clz	x0, x0
   18d44:	str	w0, [sp, #60]
   18d48:	ldr	w0, [sp, #60]
   18d4c:	add	w0, w0, #0x40
   18d50:	str	w0, [sp, #60]
   18d54:	mov	w1, #0x8e                  	// #142
   18d58:	ldr	w0, [sp, #60]
   18d5c:	sub	w0, w1, w0
   18d60:	sxtw	x0, w0
   18d64:	str	x0, [sp, #104]
   18d68:	ldr	x0, [sp, #104]
   18d6c:	cmp	x0, #0x1e
   18d70:	b.le	18df8 <__trunctfdf2@@GCC_3.0+0x175c>
   18d74:	ldr	x0, [sp, #48]
   18d78:	and	x0, x0, #0xc00000
   18d7c:	cmp	x0, #0x0
   18d80:	b.eq	18dbc <__trunctfdf2@@GCC_3.0+0x1720>  // b.none
   18d84:	ldr	x0, [sp, #48]
   18d88:	and	x0, x0, #0xc00000
   18d8c:	cmp	x0, #0x400, lsl #12
   18d90:	b.ne	18da0 <__trunctfdf2@@GCC_3.0+0x1704>  // b.any
   18d94:	ldr	x0, [sp, #88]
   18d98:	cmp	x0, #0x0
   18d9c:	b.eq	18dbc <__trunctfdf2@@GCC_3.0+0x1720>  // b.none
   18da0:	ldr	x0, [sp, #48]
   18da4:	and	x0, x0, #0xc00000
   18da8:	cmp	x0, #0x800, lsl #12
   18dac:	b.ne	18dcc <__trunctfdf2@@GCC_3.0+0x1730>  // b.any
   18db0:	ldr	x0, [sp, #88]
   18db4:	cmp	x0, #0x0
   18db8:	b.eq	18dcc <__trunctfdf2@@GCC_3.0+0x1730>  // b.none
   18dbc:	mov	x0, #0x1f                  	// #31
   18dc0:	str	x0, [sp, #104]
   18dc4:	str	xzr, [sp, #96]
   18dc8:	b	18ddc <__trunctfdf2@@GCC_3.0+0x1740>
   18dcc:	mov	x0, #0x1e                  	// #30
   18dd0:	str	x0, [sp, #104]
   18dd4:	mov	x0, #0xffffffffffffffff    	// #-1
   18dd8:	str	x0, [sp, #96]
   18ddc:	ldr	w0, [sp, #84]
   18de0:	orr	w0, w0, #0x10
   18de4:	str	w0, [sp, #84]
   18de8:	ldr	w0, [sp, #84]
   18dec:	orr	w0, w0, #0x4
   18df0:	str	w0, [sp, #84]
   18df4:	b	18f64 <__trunctfdf2@@GCC_3.0+0x18c8>
   18df8:	ldr	x0, [sp, #104]
   18dfc:	cmp	x0, #0x19
   18e00:	b.gt	18e40 <__trunctfdf2@@GCC_3.0+0x17a4>
   18e04:	ldr	x0, [sp, #64]
   18e08:	str	x0, [sp, #96]
   18e0c:	mov	x1, #0x19                  	// #25
   18e10:	ldr	x0, [sp, #104]
   18e14:	sub	x0, x1, x0
   18e18:	cmp	x0, #0x0
   18e1c:	b.le	19194 <__trunctfdf2@@GCC_3.0+0x1af8>
   18e20:	ldr	x0, [sp, #104]
   18e24:	mov	w1, w0
   18e28:	mov	w0, #0x19                  	// #25
   18e2c:	sub	w0, w0, w1
   18e30:	ldr	x1, [sp, #96]
   18e34:	lsl	x0, x1, x0
   18e38:	str	x0, [sp, #96]
   18e3c:	b	19194 <__trunctfdf2@@GCC_3.0+0x1af8>
   18e40:	ldr	x0, [sp, #104]
   18e44:	cmp	x0, #0x1c
   18e48:	b.le	18f20 <__trunctfdf2@@GCC_3.0+0x1884>
   18e4c:	ldr	x0, [sp, #104]
   18e50:	sub	w0, w0, #0x1c
   18e54:	sub	w1, w0, #0x40
   18e58:	ldr	x8, [sp, #72]
   18e5c:	lsr	x8, x8, x1
   18e60:	mov	x11, #0x0                   	// #0
   18e64:	ldr	x9, [sp, #72]
   18e68:	lsl	x10, x9, #1
   18e6c:	mov	w9, #0x3f                  	// #63
   18e70:	sub	w9, w9, w0
   18e74:	lsl	x9, x10, x9
   18e78:	ldr	x10, [sp, #64]
   18e7c:	lsr	x2, x10, x0
   18e80:	orr	x2, x9, x2
   18e84:	ldr	x9, [sp, #72]
   18e88:	lsr	x3, x9, x0
   18e8c:	cmp	w1, #0x0
   18e90:	csel	x2, x8, x2, ge  // ge = tcont
   18e94:	cmp	w1, #0x0
   18e98:	csel	x3, x11, x3, ge  // ge = tcont
   18e9c:	ldr	x0, [sp, #104]
   18ea0:	mov	w1, w0
   18ea4:	mov	w0, #0x9c                  	// #156
   18ea8:	sub	w0, w0, w1
   18eac:	sub	w1, w0, #0x40
   18eb0:	ldr	x8, [sp, #64]
   18eb4:	lsl	x8, x8, x1
   18eb8:	mov	x11, #0x0                   	// #0
   18ebc:	ldr	x9, [sp, #64]
   18ec0:	lsr	x10, x9, #1
   18ec4:	mov	w9, #0x3f                  	// #63
   18ec8:	sub	w9, w9, w0
   18ecc:	lsr	x9, x10, x9
   18ed0:	ldr	x10, [sp, #72]
   18ed4:	lsl	x5, x10, x0
   18ed8:	orr	x5, x9, x5
   18edc:	ldr	x9, [sp, #64]
   18ee0:	lsl	x4, x9, x0
   18ee4:	cmp	w1, #0x0
   18ee8:	csel	x5, x8, x5, ge  // ge = tcont
   18eec:	cmp	w1, #0x0
   18ef0:	csel	x4, x11, x4, ge  // ge = tcont
   18ef4:	orr	x0, x4, x5
   18ef8:	cmp	x0, #0x0
   18efc:	cset	w0, ne  // ne = any
   18f00:	and	w0, w0, #0xff
   18f04:	and	x0, x0, #0xff
   18f08:	mov	x6, x0
   18f0c:	mov	x7, #0x0                   	// #0
   18f10:	orr	x0, x2, x6
   18f14:	str	x0, [sp, #64]
   18f18:	orr	x0, x3, x7
   18f1c:	str	x0, [sp, #72]
   18f20:	ldr	x0, [sp, #64]
   18f24:	str	x0, [sp, #96]
   18f28:	mov	x1, #0x1c                  	// #28
   18f2c:	ldr	x0, [sp, #104]
   18f30:	sub	x0, x1, x0
   18f34:	cmp	x0, #0x0
   18f38:	b.le	18f58 <__trunctfdf2@@GCC_3.0+0x18bc>
   18f3c:	ldr	x0, [sp, #104]
   18f40:	mov	w1, w0
   18f44:	mov	w0, #0x1c                  	// #28
   18f48:	sub	w0, w0, w1
   18f4c:	ldr	x1, [sp, #96]
   18f50:	lsl	x0, x1, x0
   18f54:	str	x0, [sp, #96]
   18f58:	ldr	x0, [sp, #96]
   18f5c:	and	x0, x0, #0xffffffffffffdfff
   18f60:	str	x0, [sp, #96]
   18f64:	ldr	x0, [sp, #104]
   18f68:	cmp	x0, #0x0
   18f6c:	b.ne	18f84 <__trunctfdf2@@GCC_3.0+0x18e8>  // b.any
   18f70:	ldr	x0, [sp, #96]
   18f74:	cmp	x0, #0x0
   18f78:	b.eq	18f84 <__trunctfdf2@@GCC_3.0+0x18e8>  // b.none
   18f7c:	mov	w0, #0x1                   	// #1
   18f80:	b	18f88 <__trunctfdf2@@GCC_3.0+0x18ec>
   18f84:	mov	w0, #0x0                   	// #0
   18f88:	str	w0, [sp, #44]
   18f8c:	ldr	x0, [sp, #96]
   18f90:	and	x0, x0, #0x7
   18f94:	cmp	x0, #0x0
   18f98:	b.eq	1905c <__trunctfdf2@@GCC_3.0+0x19c0>  // b.none
   18f9c:	ldr	w0, [sp, #84]
   18fa0:	orr	w0, w0, #0x10
   18fa4:	str	w0, [sp, #84]
   18fa8:	ldr	x0, [sp, #48]
   18fac:	and	x0, x0, #0xc00000
   18fb0:	cmp	x0, #0xc00, lsl #12
   18fb4:	b.eq	19064 <__trunctfdf2@@GCC_3.0+0x19c8>  // b.none
   18fb8:	cmp	x0, #0xc00, lsl #12
   18fbc:	b.hi	19068 <__trunctfdf2@@GCC_3.0+0x19cc>  // b.pmore
   18fc0:	cmp	x0, #0x800, lsl #12
   18fc4:	b.eq	19030 <__trunctfdf2@@GCC_3.0+0x1994>  // b.none
   18fc8:	cmp	x0, #0x800, lsl #12
   18fcc:	b.hi	19068 <__trunctfdf2@@GCC_3.0+0x19cc>  // b.pmore
   18fd0:	cmp	x0, #0x0
   18fd4:	b.eq	18fe4 <__trunctfdf2@@GCC_3.0+0x1948>  // b.none
   18fd8:	cmp	x0, #0x400, lsl #12
   18fdc:	b.eq	19004 <__trunctfdf2@@GCC_3.0+0x1968>  // b.none
   18fe0:	b	19068 <__trunctfdf2@@GCC_3.0+0x19cc>
   18fe4:	ldr	x0, [sp, #96]
   18fe8:	and	x0, x0, #0xf
   18fec:	cmp	x0, #0x4
   18ff0:	b.eq	19064 <__trunctfdf2@@GCC_3.0+0x19c8>  // b.none
   18ff4:	ldr	x0, [sp, #96]
   18ff8:	add	x0, x0, #0x4
   18ffc:	str	x0, [sp, #96]
   19000:	b	19064 <__trunctfdf2@@GCC_3.0+0x19c8>
   19004:	ldr	x0, [sp, #88]
   19008:	cmp	x0, #0x0
   1900c:	b.ne	19064 <__trunctfdf2@@GCC_3.0+0x19c8>  // b.any
   19010:	ldr	x0, [sp, #96]
   19014:	and	x0, x0, #0x7
   19018:	cmp	x0, #0x0
   1901c:	b.eq	19064 <__trunctfdf2@@GCC_3.0+0x19c8>  // b.none
   19020:	ldr	x0, [sp, #96]
   19024:	add	x0, x0, #0x8
   19028:	str	x0, [sp, #96]
   1902c:	b	19064 <__trunctfdf2@@GCC_3.0+0x19c8>
   19030:	ldr	x0, [sp, #88]
   19034:	cmp	x0, #0x0
   19038:	b.eq	19064 <__trunctfdf2@@GCC_3.0+0x19c8>  // b.none
   1903c:	ldr	x0, [sp, #96]
   19040:	and	x0, x0, #0x7
   19044:	cmp	x0, #0x0
   19048:	b.eq	19064 <__trunctfdf2@@GCC_3.0+0x19c8>  // b.none
   1904c:	ldr	x0, [sp, #96]
   19050:	add	x0, x0, #0x8
   19054:	str	x0, [sp, #96]
   19058:	b	19064 <__trunctfdf2@@GCC_3.0+0x19c8>
   1905c:	nop
   19060:	b	19068 <__trunctfdf2@@GCC_3.0+0x19cc>
   19064:	nop
   19068:	ldr	w0, [sp, #44]
   1906c:	cmp	w0, #0x0
   19070:	b.eq	190a0 <__trunctfdf2@@GCC_3.0+0x1a04>  // b.none
   19074:	ldr	w0, [sp, #84]
   19078:	and	w0, w0, #0x10
   1907c:	cmp	w0, #0x0
   19080:	b.ne	19094 <__trunctfdf2@@GCC_3.0+0x19f8>  // b.any
   19084:	ldr	x0, [sp, #48]
   19088:	and	x0, x0, #0x800
   1908c:	cmp	x0, #0x0
   19090:	b.eq	190a0 <__trunctfdf2@@GCC_3.0+0x1a04>  // b.none
   19094:	ldr	w0, [sp, #84]
   19098:	orr	w0, w0, #0x8
   1909c:	str	w0, [sp, #84]
   190a0:	ldr	x0, [sp, #96]
   190a4:	and	x0, x0, #0x2000
   190a8:	cmp	x0, #0x0
   190ac:	b.eq	19154 <__trunctfdf2@@GCC_3.0+0x1ab8>  // b.none
   190b0:	ldr	x0, [sp, #96]
   190b4:	and	x0, x0, #0xffffffffffffdfff
   190b8:	str	x0, [sp, #96]
   190bc:	ldr	x0, [sp, #104]
   190c0:	add	x0, x0, #0x1
   190c4:	str	x0, [sp, #104]
   190c8:	ldr	x0, [sp, #104]
   190cc:	cmp	x0, #0x1f
   190d0:	b.ne	19154 <__trunctfdf2@@GCC_3.0+0x1ab8>  // b.any
   190d4:	ldr	x0, [sp, #48]
   190d8:	and	x0, x0, #0xc00000
   190dc:	cmp	x0, #0x0
   190e0:	b.eq	1911c <__trunctfdf2@@GCC_3.0+0x1a80>  // b.none
   190e4:	ldr	x0, [sp, #48]
   190e8:	and	x0, x0, #0xc00000
   190ec:	cmp	x0, #0x400, lsl #12
   190f0:	b.ne	19100 <__trunctfdf2@@GCC_3.0+0x1a64>  // b.any
   190f4:	ldr	x0, [sp, #88]
   190f8:	cmp	x0, #0x0
   190fc:	b.eq	1911c <__trunctfdf2@@GCC_3.0+0x1a80>  // b.none
   19100:	ldr	x0, [sp, #48]
   19104:	and	x0, x0, #0xc00000
   19108:	cmp	x0, #0x800, lsl #12
   1910c:	b.ne	1912c <__trunctfdf2@@GCC_3.0+0x1a90>  // b.any
   19110:	ldr	x0, [sp, #88]
   19114:	cmp	x0, #0x0
   19118:	b.eq	1912c <__trunctfdf2@@GCC_3.0+0x1a90>  // b.none
   1911c:	mov	x0, #0x1f                  	// #31
   19120:	str	x0, [sp, #104]
   19124:	str	xzr, [sp, #96]
   19128:	b	1913c <__trunctfdf2@@GCC_3.0+0x1aa0>
   1912c:	mov	x0, #0x1e                  	// #30
   19130:	str	x0, [sp, #104]
   19134:	mov	x0, #0xffffffffffffffff    	// #-1
   19138:	str	x0, [sp, #96]
   1913c:	ldr	w0, [sp, #84]
   19140:	orr	w0, w0, #0x10
   19144:	str	w0, [sp, #84]
   19148:	ldr	w0, [sp, #84]
   1914c:	orr	w0, w0, #0x4
   19150:	str	w0, [sp, #84]
   19154:	ldr	x0, [sp, #96]
   19158:	lsr	x0, x0, #3
   1915c:	str	x0, [sp, #96]
   19160:	ldr	x0, [sp, #104]
   19164:	cmp	x0, #0x1f
   19168:	b.ne	19194 <__trunctfdf2@@GCC_3.0+0x1af8>  // b.any
   1916c:	ldr	x0, [sp, #96]
   19170:	cmp	x0, #0x0
   19174:	b.eq	19194 <__trunctfdf2@@GCC_3.0+0x1af8>  // b.none
   19178:	ldr	x0, [sp, #96]
   1917c:	orr	x0, x0, #0x200
   19180:	str	x0, [sp, #96]
   19184:	b	19194 <__trunctfdf2@@GCC_3.0+0x1af8>
   19188:	str	xzr, [sp, #88]
   1918c:	str	xzr, [sp, #104]
   19190:	str	xzr, [sp, #96]
   19194:	ldr	x0, [sp, #96]
   19198:	and	w0, w0, #0x3ff
   1919c:	and	w1, w0, #0xffff
   191a0:	ldrh	w0, [sp, #32]
   191a4:	bfxil	w0, w1, #0, #10
   191a8:	strh	w0, [sp, #32]
   191ac:	ldr	x0, [sp, #104]
   191b0:	and	w0, w0, #0x1f
   191b4:	and	w1, w0, #0xff
   191b8:	ldrb	w0, [sp, #33]
   191bc:	bfi	w0, w1, #2, #5
   191c0:	strb	w0, [sp, #33]
   191c4:	ldr	x0, [sp, #88]
   191c8:	and	w0, w0, #0x1
   191cc:	and	w1, w0, #0xff
   191d0:	ldrb	w0, [sp, #33]
   191d4:	bfi	w0, w1, #7, #1
   191d8:	strb	w0, [sp, #33]
   191dc:	ldr	h0, [sp, #32]
   191e0:	str	h0, [sp, #42]
   191e4:	ldrsw	x0, [sp, #84]
   191e8:	cmp	x0, #0x0
   191ec:	b.eq	191f8 <__trunctfdf2@@GCC_3.0+0x1b5c>  // b.none
   191f0:	ldr	w0, [sp, #84]
   191f4:	bl	d2f8 <__udivmodti4@@GCC_3.0+0xdf4>
   191f8:	ldr	h0, [sp, #42]
   191fc:	ldp	x29, x30, [sp], #112
   19200:	ret

0000000000019204 <__enable_execute_stack@@GCC_3.4.2>:
   19204:	sub	sp, sp, #0x10
   19208:	str	x0, [sp, #8]
   1920c:	nop
   19210:	add	sp, sp, #0x10
   19214:	ret
   19218:	cntd	x0
   1921c:	ret
   19220:	stp	x29, x30, [sp, #-32]!
   19224:	mov	x29, sp
   19228:	strb	w0, [sp, #31]
   1922c:	ldrb	w0, [sp, #31]
   19230:	cmp	w0, #0xff
   19234:	b.ne	19240 <__enable_execute_stack@@GCC_3.4.2+0x3c>  // b.any
   19238:	mov	w0, #0x0                   	// #0
   1923c:	b	192a0 <__enable_execute_stack@@GCC_3.4.2+0x9c>
   19240:	ldrb	w0, [sp, #31]
   19244:	and	w0, w0, #0x7
   19248:	cmp	w0, #0x4
   1924c:	b.eq	19294 <__enable_execute_stack@@GCC_3.4.2+0x90>  // b.none
   19250:	cmp	w0, #0x4
   19254:	b.gt	1929c <__enable_execute_stack@@GCC_3.4.2+0x98>
   19258:	cmp	w0, #0x3
   1925c:	b.eq	1928c <__enable_execute_stack@@GCC_3.4.2+0x88>  // b.none
   19260:	cmp	w0, #0x3
   19264:	b.gt	1929c <__enable_execute_stack@@GCC_3.4.2+0x98>
   19268:	cmp	w0, #0x0
   1926c:	b.eq	1927c <__enable_execute_stack@@GCC_3.4.2+0x78>  // b.none
   19270:	cmp	w0, #0x2
   19274:	b.eq	19284 <__enable_execute_stack@@GCC_3.4.2+0x80>  // b.none
   19278:	b	1929c <__enable_execute_stack@@GCC_3.4.2+0x98>
   1927c:	mov	w0, #0x8                   	// #8
   19280:	b	192a0 <__enable_execute_stack@@GCC_3.4.2+0x9c>
   19284:	mov	w0, #0x2                   	// #2
   19288:	b	192a0 <__enable_execute_stack@@GCC_3.4.2+0x9c>
   1928c:	mov	w0, #0x4                   	// #4
   19290:	b	192a0 <__enable_execute_stack@@GCC_3.4.2+0x9c>
   19294:	mov	w0, #0x8                   	// #8
   19298:	b	192a0 <__enable_execute_stack@@GCC_3.4.2+0x9c>
   1929c:	bl	2cb0 <abort@plt>
   192a0:	ldp	x29, x30, [sp], #32
   192a4:	ret
   192a8:	stp	x29, x30, [sp, #-32]!
   192ac:	mov	x29, sp
   192b0:	strb	w0, [sp, #31]
   192b4:	str	x1, [sp, #16]
   192b8:	ldrb	w0, [sp, #31]
   192bc:	cmp	w0, #0xff
   192c0:	b.ne	192cc <__enable_execute_stack@@GCC_3.4.2+0xc8>  // b.any
   192c4:	mov	x0, #0x0                   	// #0
   192c8:	b	19354 <__enable_execute_stack@@GCC_3.4.2+0x150>
   192cc:	ldrb	w0, [sp, #31]
   192d0:	and	w0, w0, #0x70
   192d4:	cmp	w0, #0x50
   192d8:	b.eq	19324 <__enable_execute_stack@@GCC_3.4.2+0x120>  // b.none
   192dc:	cmp	w0, #0x50
   192e0:	b.gt	19350 <__enable_execute_stack@@GCC_3.4.2+0x14c>
   192e4:	cmp	w0, #0x40
   192e8:	b.eq	19344 <__enable_execute_stack@@GCC_3.4.2+0x140>  // b.none
   192ec:	cmp	w0, #0x40
   192f0:	b.gt	19350 <__enable_execute_stack@@GCC_3.4.2+0x14c>
   192f4:	cmp	w0, #0x30
   192f8:	b.eq	19338 <__enable_execute_stack@@GCC_3.4.2+0x134>  // b.none
   192fc:	cmp	w0, #0x30
   19300:	b.gt	19350 <__enable_execute_stack@@GCC_3.4.2+0x14c>
   19304:	cmp	w0, #0x20
   19308:	b.eq	1932c <__enable_execute_stack@@GCC_3.4.2+0x128>  // b.none
   1930c:	cmp	w0, #0x20
   19310:	b.gt	19350 <__enable_execute_stack@@GCC_3.4.2+0x14c>
   19314:	cmp	w0, #0x0
   19318:	b.eq	19324 <__enable_execute_stack@@GCC_3.4.2+0x120>  // b.none
   1931c:	cmp	w0, #0x10
   19320:	b.ne	19350 <__enable_execute_stack@@GCC_3.4.2+0x14c>  // b.any
   19324:	mov	x0, #0x0                   	// #0
   19328:	b	19354 <__enable_execute_stack@@GCC_3.4.2+0x150>
   1932c:	ldr	x0, [sp, #16]
   19330:	bl	2bb0 <_Unwind_GetTextRelBase@plt>
   19334:	b	19354 <__enable_execute_stack@@GCC_3.4.2+0x150>
   19338:	ldr	x0, [sp, #16]
   1933c:	bl	2e10 <_Unwind_GetDataRelBase@plt>
   19340:	b	19354 <__enable_execute_stack@@GCC_3.4.2+0x150>
   19344:	ldr	x0, [sp, #16]
   19348:	bl	2b10 <_Unwind_GetRegionStart@plt>
   1934c:	b	19354 <__enable_execute_stack@@GCC_3.4.2+0x150>
   19350:	bl	2cb0 <abort@plt>
   19354:	ldp	x29, x30, [sp], #32
   19358:	ret
   1935c:	sub	sp, sp, #0x30
   19360:	str	x0, [sp, #8]
   19364:	str	x1, [sp]
   19368:	str	wzr, [sp, #44]
   1936c:	str	xzr, [sp, #32]
   19370:	ldr	x0, [sp, #8]
   19374:	add	x1, x0, #0x1
   19378:	str	x1, [sp, #8]
   1937c:	ldrb	w0, [x0]
   19380:	strb	w0, [sp, #31]
   19384:	ldrb	w0, [sp, #31]
   19388:	and	x1, x0, #0x7f
   1938c:	ldr	w0, [sp, #44]
   19390:	lsl	x0, x1, x0
   19394:	ldr	x1, [sp, #32]
   19398:	orr	x0, x1, x0
   1939c:	str	x0, [sp, #32]
   193a0:	ldr	w0, [sp, #44]
   193a4:	add	w0, w0, #0x7
   193a8:	str	w0, [sp, #44]
   193ac:	ldrsb	w0, [sp, #31]
   193b0:	cmp	w0, #0x0
   193b4:	b.lt	19370 <__enable_execute_stack@@GCC_3.4.2+0x16c>  // b.tstop
   193b8:	ldr	x0, [sp]
   193bc:	ldr	x1, [sp, #32]
   193c0:	str	x1, [x0]
   193c4:	ldr	x0, [sp, #8]
   193c8:	add	sp, sp, #0x30
   193cc:	ret
   193d0:	sub	sp, sp, #0x30
   193d4:	str	x0, [sp, #8]
   193d8:	str	x1, [sp]
   193dc:	str	wzr, [sp, #44]
   193e0:	str	xzr, [sp, #32]
   193e4:	ldr	x0, [sp, #8]
   193e8:	add	x1, x0, #0x1
   193ec:	str	x1, [sp, #8]
   193f0:	ldrb	w0, [x0]
   193f4:	strb	w0, [sp, #31]
   193f8:	ldrb	w0, [sp, #31]
   193fc:	and	x1, x0, #0x7f
   19400:	ldr	w0, [sp, #44]
   19404:	lsl	x0, x1, x0
   19408:	ldr	x1, [sp, #32]
   1940c:	orr	x0, x1, x0
   19410:	str	x0, [sp, #32]
   19414:	ldr	w0, [sp, #44]
   19418:	add	w0, w0, #0x7
   1941c:	str	w0, [sp, #44]
   19420:	ldrsb	w0, [sp, #31]
   19424:	cmp	w0, #0x0
   19428:	b.lt	193e4 <__enable_execute_stack@@GCC_3.4.2+0x1e0>  // b.tstop
   1942c:	ldr	w0, [sp, #44]
   19430:	cmp	w0, #0x3f
   19434:	b.hi	19464 <__enable_execute_stack@@GCC_3.4.2+0x260>  // b.pmore
   19438:	ldrb	w0, [sp, #31]
   1943c:	and	w0, w0, #0x40
   19440:	cmp	w0, #0x0
   19444:	b.eq	19464 <__enable_execute_stack@@GCC_3.4.2+0x260>  // b.none
   19448:	ldr	w0, [sp, #44]
   1944c:	mov	x1, #0x1                   	// #1
   19450:	lsl	x0, x1, x0
   19454:	neg	x0, x0
   19458:	ldr	x1, [sp, #32]
   1945c:	orr	x0, x1, x0
   19460:	str	x0, [sp, #32]
   19464:	ldr	x1, [sp, #32]
   19468:	ldr	x0, [sp]
   1946c:	str	x1, [x0]
   19470:	ldr	x0, [sp, #8]
   19474:	add	sp, sp, #0x30
   19478:	ret
   1947c:	stp	x29, x30, [sp, #-96]!
   19480:	mov	x29, sp
   19484:	strb	w0, [sp, #47]
   19488:	str	x1, [sp, #32]
   1948c:	str	x2, [sp, #24]
   19490:	str	x3, [sp, #16]
   19494:	ldr	x0, [sp, #24]
   19498:	str	x0, [sp, #80]
   1949c:	ldrb	w0, [sp, #47]
   194a0:	cmp	w0, #0x50
   194a4:	b.ne	194dc <__enable_execute_stack@@GCC_3.4.2+0x2d8>  // b.any
   194a8:	ldr	x0, [sp, #24]
   194ac:	str	x0, [sp, #72]
   194b0:	ldr	x0, [sp, #72]
   194b4:	add	x0, x0, #0x7
   194b8:	and	x0, x0, #0xfffffffffffffff8
   194bc:	str	x0, [sp, #72]
   194c0:	ldr	x0, [sp, #72]
   194c4:	ldr	x0, [x0]
   194c8:	str	x0, [sp, #88]
   194cc:	ldr	x0, [sp, #72]
   194d0:	add	x0, x0, #0x8
   194d4:	str	x0, [sp, #24]
   194d8:	b	196cc <__enable_execute_stack@@GCC_3.4.2+0x4c8>
   194dc:	ldrb	w0, [sp, #47]
   194e0:	and	w0, w0, #0xf
   194e4:	cmp	w0, #0xc
   194e8:	b.eq	19660 <__enable_execute_stack@@GCC_3.4.2+0x45c>  // b.none
   194ec:	cmp	w0, #0xc
   194f0:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   194f4:	cmp	w0, #0xb
   194f8:	b.eq	19640 <__enable_execute_stack@@GCC_3.4.2+0x43c>  // b.none
   194fc:	cmp	w0, #0xb
   19500:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19504:	cmp	w0, #0xa
   19508:	b.eq	19620 <__enable_execute_stack@@GCC_3.4.2+0x41c>  // b.none
   1950c:	cmp	w0, #0xa
   19510:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19514:	cmp	w0, #0x9
   19518:	b.eq	195a4 <__enable_execute_stack@@GCC_3.4.2+0x3a0>  // b.none
   1951c:	cmp	w0, #0x9
   19520:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19524:	cmp	w0, #0x4
   19528:	b.eq	19604 <__enable_execute_stack@@GCC_3.4.2+0x400>  // b.none
   1952c:	cmp	w0, #0x4
   19530:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19534:	cmp	w0, #0x3
   19538:	b.eq	195e4 <__enable_execute_stack@@GCC_3.4.2+0x3e0>  // b.none
   1953c:	cmp	w0, #0x3
   19540:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19544:	cmp	w0, #0x2
   19548:	b.eq	195c4 <__enable_execute_stack@@GCC_3.4.2+0x3c0>  // b.none
   1954c:	cmp	w0, #0x2
   19550:	b.gt	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19554:	cmp	w0, #0x0
   19558:	b.eq	19568 <__enable_execute_stack@@GCC_3.4.2+0x364>  // b.none
   1955c:	cmp	w0, #0x1
   19560:	b.eq	19584 <__enable_execute_stack@@GCC_3.4.2+0x380>  // b.none
   19564:	b	1967c <__enable_execute_stack@@GCC_3.4.2+0x478>
   19568:	ldr	x0, [sp, #80]
   1956c:	ldr	x0, [x0]
   19570:	str	x0, [sp, #88]
   19574:	ldr	x0, [sp, #24]
   19578:	add	x0, x0, #0x8
   1957c:	str	x0, [sp, #24]
   19580:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   19584:	add	x0, sp, #0x40
   19588:	mov	x1, x0
   1958c:	ldr	x0, [sp, #24]
   19590:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   19594:	str	x0, [sp, #24]
   19598:	ldr	x0, [sp, #64]
   1959c:	str	x0, [sp, #88]
   195a0:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   195a4:	add	x0, sp, #0x38
   195a8:	mov	x1, x0
   195ac:	ldr	x0, [sp, #24]
   195b0:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   195b4:	str	x0, [sp, #24]
   195b8:	ldr	x0, [sp, #56]
   195bc:	str	x0, [sp, #88]
   195c0:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   195c4:	ldr	x0, [sp, #80]
   195c8:	ldrh	w0, [x0]
   195cc:	and	x0, x0, #0xffff
   195d0:	str	x0, [sp, #88]
   195d4:	ldr	x0, [sp, #24]
   195d8:	add	x0, x0, #0x2
   195dc:	str	x0, [sp, #24]
   195e0:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   195e4:	ldr	x0, [sp, #80]
   195e8:	ldr	w0, [x0]
   195ec:	mov	w0, w0
   195f0:	str	x0, [sp, #88]
   195f4:	ldr	x0, [sp, #24]
   195f8:	add	x0, x0, #0x4
   195fc:	str	x0, [sp, #24]
   19600:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   19604:	ldr	x0, [sp, #80]
   19608:	ldr	x0, [x0]
   1960c:	str	x0, [sp, #88]
   19610:	ldr	x0, [sp, #24]
   19614:	add	x0, x0, #0x8
   19618:	str	x0, [sp, #24]
   1961c:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   19620:	ldr	x0, [sp, #80]
   19624:	ldrsh	w0, [x0]
   19628:	sxth	x0, w0
   1962c:	str	x0, [sp, #88]
   19630:	ldr	x0, [sp, #24]
   19634:	add	x0, x0, #0x2
   19638:	str	x0, [sp, #24]
   1963c:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   19640:	ldr	x0, [sp, #80]
   19644:	ldr	w0, [x0]
   19648:	sxtw	x0, w0
   1964c:	str	x0, [sp, #88]
   19650:	ldr	x0, [sp, #24]
   19654:	add	x0, x0, #0x4
   19658:	str	x0, [sp, #24]
   1965c:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   19660:	ldr	x0, [sp, #80]
   19664:	ldr	x0, [x0]
   19668:	str	x0, [sp, #88]
   1966c:	ldr	x0, [sp, #24]
   19670:	add	x0, x0, #0x8
   19674:	str	x0, [sp, #24]
   19678:	b	19680 <__enable_execute_stack@@GCC_3.4.2+0x47c>
   1967c:	bl	2cb0 <abort@plt>
   19680:	ldr	x0, [sp, #88]
   19684:	cmp	x0, #0x0
   19688:	b.eq	196cc <__enable_execute_stack@@GCC_3.4.2+0x4c8>  // b.none
   1968c:	ldrb	w0, [sp, #47]
   19690:	and	w0, w0, #0x70
   19694:	cmp	w0, #0x10
   19698:	b.ne	196a4 <__enable_execute_stack@@GCC_3.4.2+0x4a0>  // b.any
   1969c:	ldr	x0, [sp, #80]
   196a0:	b	196a8 <__enable_execute_stack@@GCC_3.4.2+0x4a4>
   196a4:	ldr	x0, [sp, #32]
   196a8:	ldr	x1, [sp, #88]
   196ac:	add	x0, x1, x0
   196b0:	str	x0, [sp, #88]
   196b4:	ldrsb	w0, [sp, #47]
   196b8:	cmp	w0, #0x0
   196bc:	b.ge	196cc <__enable_execute_stack@@GCC_3.4.2+0x4c8>  // b.tcont
   196c0:	ldr	x0, [sp, #88]
   196c4:	ldr	x0, [x0]
   196c8:	str	x0, [sp, #88]
   196cc:	ldr	x0, [sp, #16]
   196d0:	ldr	x1, [sp, #88]
   196d4:	str	x1, [x0]
   196d8:	ldr	x0, [sp, #24]
   196dc:	ldp	x29, x30, [sp], #96
   196e0:	ret
   196e4:	stp	x29, x30, [sp, #-48]!
   196e8:	mov	x29, sp
   196ec:	str	x0, [sp, #40]
   196f0:	strb	w1, [sp, #39]
   196f4:	str	x2, [sp, #24]
   196f8:	str	x3, [sp, #16]
   196fc:	ldr	x1, [sp, #40]
   19700:	ldrb	w0, [sp, #39]
   19704:	bl	192a8 <__enable_execute_stack@@GCC_3.4.2+0xa4>
   19708:	ldr	x3, [sp, #16]
   1970c:	ldr	x2, [sp, #24]
   19710:	mov	x1, x0
   19714:	ldrb	w0, [sp, #39]
   19718:	bl	1947c <__enable_execute_stack@@GCC_3.4.2+0x278>
   1971c:	ldp	x29, x30, [sp], #48
   19720:	ret
   19724:	sub	sp, sp, #0x10
   19728:	str	x0, [sp, #8]
   1972c:	ldr	x0, [sp, #8]
   19730:	add	x1, x0, #0x4
   19734:	ldr	x0, [sp, #8]
   19738:	ldr	w0, [x0, #4]
   1973c:	sxtw	x0, w0
   19740:	neg	x0, x0
   19744:	add	x0, x1, x0
   19748:	add	sp, sp, #0x10
   1974c:	ret
   19750:	sub	sp, sp, #0x10
   19754:	str	x0, [sp, #8]
   19758:	ldr	x0, [sp, #8]
   1975c:	ldr	w0, [x0]
   19760:	mov	w0, w0
   19764:	add	x0, x0, #0x4
   19768:	ldr	x1, [sp, #8]
   1976c:	add	x0, x1, x0
   19770:	add	sp, sp, #0x10
   19774:	ret
   19778:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
   1977c:	add	x0, x0, #0xda8
   19780:	ldr	x0, [x0]
   19784:	cmp	x0, #0x0
   19788:	cset	w0, ne  // ne = any
   1978c:	and	w0, w0, #0xff
   19790:	ret
   19794:	stp	x29, x30, [sp, #-32]!
   19798:	mov	x29, sp
   1979c:	str	x0, [sp, #24]
   197a0:	str	x1, [sp, #16]
   197a4:	bl	19778 <__enable_execute_stack@@GCC_3.4.2+0x574>
   197a8:	cmp	w0, #0x0
   197ac:	b.eq	197c0 <__enable_execute_stack@@GCC_3.4.2+0x5bc>  // b.none
   197b0:	ldr	x1, [sp, #16]
   197b4:	ldr	x0, [sp, #24]
   197b8:	bl	2cd0 <pthread_once@plt>
   197bc:	b	197c4 <__enable_execute_stack@@GCC_3.4.2+0x5c0>
   197c0:	mov	w0, #0xffffffff            	// #-1
   197c4:	ldp	x29, x30, [sp], #32
   197c8:	ret
   197cc:	sub	sp, sp, #0x10
   197d0:	str	x0, [sp, #8]
   197d4:	ldr	x0, [sp, #8]
   197d8:	add	sp, sp, #0x10
   197dc:	ret
   197e0:	sub	sp, sp, #0x10
   197e4:	str	x0, [sp, #8]
   197e8:	ldr	x0, [sp, #8]
   197ec:	add	sp, sp, #0x10
   197f0:	ret
   197f4:	sub	sp, sp, #0x20
   197f8:	str	x0, [sp, #8]
   197fc:	ldr	x0, [sp, #8]
   19800:	str	x0, [sp, #24]
   19804:	ldr	x0, [sp, #24]
   19808:	ldr	x0, [x0]
   1980c:	add	sp, sp, #0x20
   19810:	ret
   19814:	sub	sp, sp, #0x10
   19818:	str	x0, [sp, #8]
   1981c:	ldr	x0, [sp, #8]
   19820:	ldrb	w0, [x0]
   19824:	add	sp, sp, #0x10
   19828:	ret
   1982c:	sub	sp, sp, #0x10
   19830:	str	x0, [sp, #8]
   19834:	ldr	x0, [sp, #8]
   19838:	ldrsb	w0, [x0]
   1983c:	add	sp, sp, #0x10
   19840:	ret
   19844:	sub	sp, sp, #0x20
   19848:	str	x0, [sp, #8]
   1984c:	ldr	x0, [sp, #8]
   19850:	str	x0, [sp, #24]
   19854:	ldr	x0, [sp, #24]
   19858:	ldrh	w0, [x0]
   1985c:	add	sp, sp, #0x20
   19860:	ret
   19864:	sub	sp, sp, #0x20
   19868:	str	x0, [sp, #8]
   1986c:	ldr	x0, [sp, #8]
   19870:	str	x0, [sp, #24]
   19874:	ldr	x0, [sp, #24]
   19878:	ldrsh	w0, [x0]
   1987c:	add	sp, sp, #0x20
   19880:	ret
   19884:	sub	sp, sp, #0x20
   19888:	str	x0, [sp, #8]
   1988c:	ldr	x0, [sp, #8]
   19890:	str	x0, [sp, #24]
   19894:	ldr	x0, [sp, #24]
   19898:	ldr	w0, [x0]
   1989c:	add	sp, sp, #0x20
   198a0:	ret
   198a4:	sub	sp, sp, #0x20
   198a8:	str	x0, [sp, #8]
   198ac:	ldr	x0, [sp, #8]
   198b0:	str	x0, [sp, #24]
   198b4:	ldr	x0, [sp, #24]
   198b8:	ldr	w0, [x0]
   198bc:	add	sp, sp, #0x20
   198c0:	ret
   198c4:	sub	sp, sp, #0x20
   198c8:	str	x0, [sp, #8]
   198cc:	ldr	x0, [sp, #8]
   198d0:	str	x0, [sp, #24]
   198d4:	ldr	x0, [sp, #24]
   198d8:	ldr	x0, [x0]
   198dc:	add	sp, sp, #0x20
   198e0:	ret
   198e4:	sub	sp, sp, #0x20
   198e8:	str	x0, [sp, #8]
   198ec:	ldr	x0, [sp, #8]
   198f0:	str	x0, [sp, #24]
   198f4:	ldr	x0, [sp, #24]
   198f8:	ldr	x0, [x0]
   198fc:	add	sp, sp, #0x20
   19900:	ret
   19904:	sub	sp, sp, #0x10
   19908:	str	x0, [sp, #8]
   1990c:	ldr	x0, [sp, #8]
   19910:	ldr	x0, [x0, #832]
   19914:	asr	x0, x0, #63
   19918:	mov	w0, w0
   1991c:	and	x0, x0, #0x1
   19920:	add	sp, sp, #0x10
   19924:	ret
   19928:	sub	sp, sp, #0x10
   1992c:	str	x0, [sp, #8]
   19930:	str	w1, [sp, #4]
   19934:	ldr	w0, [sp, #4]
   19938:	cmp	w0, #0x0
   1993c:	b.eq	19958 <__enable_execute_stack@@GCC_3.4.2+0x754>  // b.none
   19940:	ldr	x0, [sp, #8]
   19944:	ldr	x0, [x0, #832]
   19948:	orr	x1, x0, #0x8000000000000000
   1994c:	ldr	x0, [sp, #8]
   19950:	str	x1, [x0, #832]
   19954:	b	1996c <__enable_execute_stack@@GCC_3.4.2+0x768>
   19958:	ldr	x0, [sp, #8]
   1995c:	ldr	x0, [x0, #832]
   19960:	and	x1, x0, #0x7fffffffffffffff
   19964:	ldr	x0, [sp, #8]
   19968:	str	x1, [x0, #832]
   1996c:	nop
   19970:	add	sp, sp, #0x10
   19974:	ret
   19978:	sub	sp, sp, #0x10
   1997c:	str	x0, [sp, #8]
   19980:	ldr	x0, [sp, #8]
   19984:	ldr	x0, [x0, #832]
   19988:	and	x0, x0, #0x4000000000000000
   1998c:	cmp	x0, #0x0
   19990:	cset	w0, ne  // ne = any
   19994:	and	w0, w0, #0xff
   19998:	and	x0, x0, #0xff
   1999c:	add	sp, sp, #0x10
   199a0:	ret

00000000000199a4 <_Unwind_GetGR@@GCC_3.0>:
   199a4:	stp	x29, x30, [sp, #-64]!
   199a8:	mov	x29, sp
   199ac:	str	x0, [sp, #24]
   199b0:	str	w1, [sp, #20]
   199b4:	ldr	w0, [sp, #20]
   199b8:	str	w0, [sp, #60]
   199bc:	ldr	w0, [sp, #60]
   199c0:	cmp	w0, #0x61
   199c4:	b.le	199cc <_Unwind_GetGR@@GCC_3.0+0x28>
   199c8:	bl	2cb0 <abort@plt>
   199cc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   199d0:	add	x1, x0, #0x1d8
   199d4:	ldrsw	x0, [sp, #60]
   199d8:	ldrb	w0, [x1, x0]
   199dc:	str	w0, [sp, #56]
   199e0:	ldr	x0, [sp, #24]
   199e4:	ldrsw	x1, [sp, #60]
   199e8:	ldr	x0, [x0, x1, lsl #3]
   199ec:	str	x0, [sp, #48]
   199f0:	ldr	x0, [sp, #24]
   199f4:	bl	19978 <__enable_execute_stack@@GCC_3.4.2+0x774>
   199f8:	cmp	x0, #0x0
   199fc:	b.eq	19a24 <_Unwind_GetGR@@GCC_3.0+0x80>  // b.none
   19a00:	ldr	x1, [sp, #24]
   19a04:	ldrsw	x0, [sp, #60]
   19a08:	add	x0, x1, x0
   19a0c:	ldrb	w0, [x0, #856]
   19a10:	cmp	w0, #0x0
   19a14:	b.eq	19a24 <_Unwind_GetGR@@GCC_3.0+0x80>  // b.none
   19a18:	ldr	x0, [sp, #48]
   19a1c:	bl	197cc <__enable_execute_stack@@GCC_3.4.2+0x5c8>
   19a20:	b	19a74 <_Unwind_GetGR@@GCC_3.0+0xd0>
   19a24:	ldr	w0, [sp, #20]
   19a28:	cmp	w0, #0x2e
   19a2c:	b.ne	19a44 <_Unwind_GetGR@@GCC_3.0+0xa0>  // b.any
   19a30:	bl	19218 <__enable_execute_stack@@GCC_3.4.2+0x14>
   19a34:	sxtw	x0, w0
   19a38:	str	x0, [sp, #40]
   19a3c:	ldr	x0, [sp, #40]
   19a40:	b	19a74 <_Unwind_GetGR@@GCC_3.0+0xd0>
   19a44:	ldr	w0, [sp, #56]
   19a48:	cmp	w0, #0x8
   19a4c:	b.ne	19a5c <_Unwind_GetGR@@GCC_3.0+0xb8>  // b.any
   19a50:	ldr	x0, [sp, #48]
   19a54:	ldr	x0, [x0]
   19a58:	b	19a74 <_Unwind_GetGR@@GCC_3.0+0xd0>
   19a5c:	ldr	w0, [sp, #56]
   19a60:	cmp	w0, #0x8
   19a64:	b.eq	19a6c <_Unwind_GetGR@@GCC_3.0+0xc8>  // b.none
   19a68:	bl	2cb0 <abort@plt>
   19a6c:	ldr	x0, [sp, #48]
   19a70:	ldr	x0, [x0]
   19a74:	ldp	x29, x30, [sp], #64
   19a78:	ret
   19a7c:	stp	x29, x30, [sp, #-32]!
   19a80:	mov	x29, sp
   19a84:	str	x0, [sp, #24]
   19a88:	str	w1, [sp, #20]
   19a8c:	ldr	w1, [sp, #20]
   19a90:	ldr	x0, [sp, #24]
   19a94:	bl	199a4 <_Unwind_GetGR@@GCC_3.0>
   19a98:	ldp	x29, x30, [sp], #32
   19a9c:	ret

0000000000019aa0 <_Unwind_GetCFA@@GCC_3.3>:
   19aa0:	sub	sp, sp, #0x10
   19aa4:	str	x0, [sp, #8]
   19aa8:	ldr	x0, [sp, #8]
   19aac:	ldr	x0, [x0, #784]
   19ab0:	add	sp, sp, #0x10
   19ab4:	ret

0000000000019ab8 <_Unwind_SetGR@@GCC_3.0>:
   19ab8:	stp	x29, x30, [sp, #-64]!
   19abc:	mov	x29, sp
   19ac0:	str	x0, [sp, #40]
   19ac4:	str	w1, [sp, #36]
   19ac8:	str	x2, [sp, #24]
   19acc:	ldr	w0, [sp, #36]
   19ad0:	cmp	w0, #0x61
   19ad4:	b.le	19adc <_Unwind_SetGR@@GCC_3.0+0x24>
   19ad8:	bl	2cb0 <abort@plt>
   19adc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   19ae0:	add	x1, x0, #0x1d8
   19ae4:	ldrsw	x0, [sp, #36]
   19ae8:	ldrb	w0, [x1, x0]
   19aec:	str	w0, [sp, #60]
   19af0:	ldr	x0, [sp, #40]
   19af4:	bl	19978 <__enable_execute_stack@@GCC_3.4.2+0x774>
   19af8:	cmp	x0, #0x0
   19afc:	b.eq	19b34 <_Unwind_SetGR@@GCC_3.0+0x7c>  // b.none
   19b00:	ldr	x1, [sp, #40]
   19b04:	ldrsw	x0, [sp, #36]
   19b08:	add	x0, x1, x0
   19b0c:	ldrb	w0, [x0, #856]
   19b10:	cmp	w0, #0x0
   19b14:	b.eq	19b34 <_Unwind_SetGR@@GCC_3.0+0x7c>  // b.none
   19b18:	ldr	x0, [sp, #24]
   19b1c:	bl	197e0 <__enable_execute_stack@@GCC_3.4.2+0x5dc>
   19b20:	mov	x2, x0
   19b24:	ldr	x0, [sp, #40]
   19b28:	ldrsw	x1, [sp, #36]
   19b2c:	str	x2, [x0, x1, lsl #3]
   19b30:	b	19b7c <_Unwind_SetGR@@GCC_3.0+0xc4>
   19b34:	ldr	x0, [sp, #40]
   19b38:	ldrsw	x1, [sp, #36]
   19b3c:	ldr	x0, [x0, x1, lsl #3]
   19b40:	str	x0, [sp, #48]
   19b44:	ldr	w0, [sp, #60]
   19b48:	cmp	w0, #0x8
   19b4c:	b.ne	19b60 <_Unwind_SetGR@@GCC_3.0+0xa8>  // b.any
   19b50:	ldr	x0, [sp, #48]
   19b54:	ldr	x1, [sp, #24]
   19b58:	str	x1, [x0]
   19b5c:	b	19b7c <_Unwind_SetGR@@GCC_3.0+0xc4>
   19b60:	ldr	w0, [sp, #60]
   19b64:	cmp	w0, #0x8
   19b68:	b.eq	19b70 <_Unwind_SetGR@@GCC_3.0+0xb8>  // b.none
   19b6c:	bl	2cb0 <abort@plt>
   19b70:	ldr	x0, [sp, #48]
   19b74:	ldr	x1, [sp, #24]
   19b78:	str	x1, [x0]
   19b7c:	ldp	x29, x30, [sp], #64
   19b80:	ret
   19b84:	stp	x29, x30, [sp, #-32]!
   19b88:	mov	x29, sp
   19b8c:	str	x0, [sp, #24]
   19b90:	str	w1, [sp, #20]
   19b94:	ldr	x0, [sp, #24]
   19b98:	bl	19978 <__enable_execute_stack@@GCC_3.4.2+0x774>
   19b9c:	cmp	x0, #0x0
   19ba0:	b.eq	19bd0 <_Unwind_SetGR@@GCC_3.0+0x118>  // b.none
   19ba4:	ldr	x1, [sp, #24]
   19ba8:	ldrsw	x0, [sp, #20]
   19bac:	add	x0, x1, x0
   19bb0:	ldrb	w0, [x0, #856]
   19bb4:	cmp	w0, #0x0
   19bb8:	b.eq	19bd0 <_Unwind_SetGR@@GCC_3.0+0x118>  // b.none
   19bbc:	ldrsw	x0, [sp, #20]
   19bc0:	lsl	x0, x0, #3
   19bc4:	ldr	x1, [sp, #24]
   19bc8:	add	x0, x1, x0
   19bcc:	b	19bdc <_Unwind_SetGR@@GCC_3.0+0x124>
   19bd0:	ldr	x0, [sp, #24]
   19bd4:	ldrsw	x1, [sp, #20]
   19bd8:	ldr	x0, [x0, x1, lsl #3]
   19bdc:	ldp	x29, x30, [sp], #32
   19be0:	ret
   19be4:	stp	x29, x30, [sp, #-48]!
   19be8:	mov	x29, sp
   19bec:	str	x0, [sp, #40]
   19bf0:	str	w1, [sp, #36]
   19bf4:	str	x2, [sp, #24]
   19bf8:	ldr	x0, [sp, #40]
   19bfc:	bl	19978 <__enable_execute_stack@@GCC_3.4.2+0x774>
   19c00:	cmp	x0, #0x0
   19c04:	b.eq	19c18 <_Unwind_SetGR@@GCC_3.0+0x160>  // b.none
   19c08:	ldr	x1, [sp, #40]
   19c0c:	ldrsw	x0, [sp, #36]
   19c10:	add	x0, x1, x0
   19c14:	strb	wzr, [x0, #856]
   19c18:	ldr	x0, [sp, #40]
   19c1c:	ldrsw	x1, [sp, #36]
   19c20:	ldr	x2, [sp, #24]
   19c24:	str	x2, [x0, x1, lsl #3]
   19c28:	nop
   19c2c:	ldp	x29, x30, [sp], #48
   19c30:	ret
   19c34:	stp	x29, x30, [sp, #-48]!
   19c38:	mov	x29, sp
   19c3c:	str	x0, [sp, #40]
   19c40:	str	w1, [sp, #36]
   19c44:	str	x2, [sp, #24]
   19c48:	ldr	w0, [sp, #36]
   19c4c:	cmp	w0, #0x61
   19c50:	b.le	19c58 <_Unwind_SetGR@@GCC_3.0+0x1a0>
   19c54:	bl	2cb0 <abort@plt>
   19c58:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   19c5c:	add	x1, x0, #0x1d8
   19c60:	ldrsw	x0, [sp, #36]
   19c64:	ldrb	w0, [x1, x0]
   19c68:	cmp	w0, #0x8
   19c6c:	b.ls	19c74 <_Unwind_SetGR@@GCC_3.0+0x1bc>  // b.plast
   19c70:	bl	2cb0 <abort@plt>
   19c74:	ldr	x1, [sp, #40]
   19c78:	ldrsw	x0, [sp, #36]
   19c7c:	add	x0, x1, x0
   19c80:	mov	w1, #0x1                   	// #1
   19c84:	strb	w1, [x0, #856]
   19c88:	ldr	x0, [sp, #24]
   19c8c:	bl	197e0 <__enable_execute_stack@@GCC_3.4.2+0x5dc>
   19c90:	mov	x2, x0
   19c94:	ldr	x0, [sp, #40]
   19c98:	ldrsw	x1, [sp, #36]
   19c9c:	str	x2, [x0, x1, lsl #3]
   19ca0:	nop
   19ca4:	ldp	x29, x30, [sp], #48
   19ca8:	ret
   19cac:	sub	sp, sp, #0x10
   19cb0:	str	x0, [sp, #8]
   19cb4:	str	w1, [sp, #4]
   19cb8:	ldr	x1, [sp, #8]
   19cbc:	ldrsw	x0, [sp, #4]
   19cc0:	add	x0, x1, x0
   19cc4:	ldrb	w0, [x0, #856]
   19cc8:	add	sp, sp, #0x10
   19ccc:	ret

0000000000019cd0 <_Unwind_GetIP@@GCC_3.0>:
   19cd0:	sub	sp, sp, #0x10
   19cd4:	str	x0, [sp, #8]
   19cd8:	ldr	x0, [sp, #8]
   19cdc:	ldr	x0, [x0, #792]
   19ce0:	add	sp, sp, #0x10
   19ce4:	ret

0000000000019ce8 <_Unwind_GetIPInfo@@GCC_4.2.0>:
   19ce8:	stp	x29, x30, [sp, #-32]!
   19cec:	mov	x29, sp
   19cf0:	str	x0, [sp, #24]
   19cf4:	str	x1, [sp, #16]
   19cf8:	ldr	x0, [sp, #24]
   19cfc:	bl	19904 <__enable_execute_stack@@GCC_3.4.2+0x700>
   19d00:	mov	w1, w0
   19d04:	ldr	x0, [sp, #16]
   19d08:	str	w1, [x0]
   19d0c:	ldr	x0, [sp, #24]
   19d10:	ldr	x0, [x0, #792]
   19d14:	ldp	x29, x30, [sp], #32
   19d18:	ret

0000000000019d1c <_Unwind_SetIP@@GCC_3.0>:
   19d1c:	sub	sp, sp, #0x10
   19d20:	str	x0, [sp, #8]
   19d24:	str	x1, [sp]
   19d28:	ldr	x1, [sp]
   19d2c:	ldr	x0, [sp, #8]
   19d30:	str	x1, [x0, #792]
   19d34:	nop
   19d38:	add	sp, sp, #0x10
   19d3c:	ret

0000000000019d40 <_Unwind_GetLanguageSpecificData@@GCC_3.0>:
   19d40:	sub	sp, sp, #0x10
   19d44:	str	x0, [sp, #8]
   19d48:	ldr	x0, [sp, #8]
   19d4c:	ldr	x0, [x0, #800]
   19d50:	add	sp, sp, #0x10
   19d54:	ret

0000000000019d58 <_Unwind_GetRegionStart@@GCC_3.0>:
   19d58:	sub	sp, sp, #0x10
   19d5c:	str	x0, [sp, #8]
   19d60:	ldr	x0, [sp, #8]
   19d64:	ldr	x0, [x0, #824]
   19d68:	add	sp, sp, #0x10
   19d6c:	ret

0000000000019d70 <_Unwind_FindEnclosingFunction@@GCC_3.3>:
   19d70:	stp	x29, x30, [sp, #-64]!
   19d74:	mov	x29, sp
   19d78:	str	x0, [sp, #24]
   19d7c:	ldr	x0, [sp, #24]
   19d80:	sub	x0, x0, #0x1
   19d84:	add	x1, sp, #0x20
   19d88:	bl	2d10 <_Unwind_Find_FDE@plt>
   19d8c:	str	x0, [sp, #56]
   19d90:	ldr	x0, [sp, #56]
   19d94:	cmp	x0, #0x0
   19d98:	b.eq	19da4 <_Unwind_FindEnclosingFunction@@GCC_3.3+0x34>  // b.none
   19d9c:	ldr	x0, [sp, #48]
   19da0:	b	19da8 <_Unwind_FindEnclosingFunction@@GCC_3.3+0x38>
   19da4:	mov	x0, #0x0                   	// #0
   19da8:	ldp	x29, x30, [sp], #64
   19dac:	ret

0000000000019db0 <_Unwind_GetDataRelBase@@GCC_3.0>:
   19db0:	sub	sp, sp, #0x10
   19db4:	str	x0, [sp, #8]
   19db8:	ldr	x0, [sp, #8]
   19dbc:	ldr	x0, [x0, #816]
   19dc0:	add	sp, sp, #0x10
   19dc4:	ret

0000000000019dc8 <_Unwind_GetTextRelBase@@GCC_3.0>:
   19dc8:	sub	sp, sp, #0x10
   19dcc:	str	x0, [sp, #8]
   19dd0:	ldr	x0, [sp, #8]
   19dd4:	ldr	x0, [x0, #808]
   19dd8:	add	sp, sp, #0x10
   19ddc:	ret
   19de0:	sub	sp, sp, #0x30
   19de4:	str	x0, [sp, #24]
   19de8:	str	x1, [sp, #16]
   19dec:	str	x2, [sp, #8]
   19df0:	ldr	x0, [sp, #16]
   19df4:	ldr	x0, [x0, #544]
   19df8:	and	x0, x0, #0x1
   19dfc:	cmp	x0, #0x0
   19e00:	b.eq	19e30 <_Unwind_GetTextRelBase@@GCC_3.0+0x68>  // b.none
   19e04:	ldr	x0, [sp, #24]
   19e08:	ldr	x0, [x0, #784]
   19e0c:	str	x0, [sp, #40]
   19e10:	ldr	x1, [sp, #8]
   19e14:	mov	x0, x1
   19e18:	ldr	x0, [sp, #40]
   19e1c:	mov	x17, x1
   19e20:	mov	x16, x0
   19e24:	autia1716
   19e28:	mov	x0, x17
   19e2c:	b	19e34 <_Unwind_GetTextRelBase@@GCC_3.0+0x6c>
   19e30:	ldr	x0, [sp, #8]
   19e34:	add	sp, sp, #0x30
   19e38:	ret
   19e3c:	sub	sp, sp, #0x20
   19e40:	str	x0, [sp, #24]
   19e44:	str	x1, [sp, #16]
   19e48:	str	x2, [sp, #8]
   19e4c:	ldr	x0, [sp, #24]
   19e50:	ldr	x0, [x0, #832]
   19e54:	and	x0, x0, #0x2000000000000000
   19e58:	cmp	x0, #0x0
   19e5c:	b.eq	19e88 <_Unwind_GetTextRelBase@@GCC_3.0+0xc0>  // b.none
   19e60:	ldr	x0, [sp, #24]
   19e64:	ldr	x0, [x0, #784]
   19e68:	mov	x2, x0
   19e6c:	ldr	x1, [sp, #8]
   19e70:	mov	x0, x1
   19e74:	mov	x17, x1
   19e78:	mov	x16, x2
   19e7c:	pacia1716
   19e80:	mov	x0, x17
   19e84:	b	19e8c <_Unwind_GetTextRelBase@@GCC_3.0+0xc4>
   19e88:	ldr	x0, [sp, #8]
   19e8c:	add	sp, sp, #0x20
   19e90:	ret
   19e94:	sub	sp, sp, #0x10
   19e98:	str	x0, [sp, #8]
   19e9c:	str	x1, [sp]
   19ea0:	ldr	x0, [sp]
   19ea4:	ldr	x0, [x0, #544]
   19ea8:	and	x0, x0, #0x1
   19eac:	cmp	x0, #0x0
   19eb0:	b.eq	19ecc <_Unwind_GetTextRelBase@@GCC_3.0+0x104>  // b.none
   19eb4:	ldr	x0, [sp, #8]
   19eb8:	ldr	x0, [x0, #832]
   19ebc:	orr	x1, x0, #0x2000000000000000
   19ec0:	ldr	x0, [sp, #8]
   19ec4:	str	x1, [x0, #832]
   19ec8:	nop
   19ecc:	nop
   19ed0:	add	sp, sp, #0x10
   19ed4:	ret
   19ed8:	sub	sp, sp, #0x50
   19edc:	str	x0, [sp, #8]
   19ee0:	str	x1, [sp]
   19ee4:	ldr	x0, [sp, #8]
   19ee8:	ldr	x0, [x0, #792]
   19eec:	str	x0, [sp, #56]
   19ef0:	ldr	x0, [sp, #56]
   19ef4:	ldr	w1, [x0]
   19ef8:	mov	w0, #0x1168                	// #4456
   19efc:	movk	w0, #0xd280, lsl #16
   19f00:	cmp	w1, w0
   19f04:	b.ne	19f24 <_Unwind_GetTextRelBase@@GCC_3.0+0x15c>  // b.any
   19f08:	ldr	x0, [sp, #56]
   19f0c:	add	x0, x0, #0x4
   19f10:	ldr	w1, [x0]
   19f14:	mov	w0, #0x1                   	// #1
   19f18:	movk	w0, #0xd400, lsl #16
   19f1c:	cmp	w1, w0
   19f20:	b.eq	19f2c <_Unwind_GetTextRelBase@@GCC_3.0+0x164>  // b.none
   19f24:	mov	w0, #0x5                   	// #5
   19f28:	b	1a140 <_Unwind_GetTextRelBase@@GCC_3.0+0x378>
   19f2c:	ldr	x0, [sp, #8]
   19f30:	ldr	x0, [x0, #784]
   19f34:	str	x0, [sp, #48]
   19f38:	ldr	x0, [sp, #48]
   19f3c:	add	x0, x0, #0x130
   19f40:	str	x0, [sp, #40]
   19f44:	ldr	x0, [sp, #40]
   19f48:	str	x0, [sp, #32]
   19f4c:	ldr	x0, [sp]
   19f50:	mov	w1, #0x1                   	// #1
   19f54:	str	w1, [x0, #1600]
   19f58:	ldr	x0, [sp]
   19f5c:	mov	x1, #0x1f                  	// #31
   19f60:	str	x1, [x0, #1584]
   19f64:	ldr	x0, [sp, #8]
   19f68:	ldr	x0, [x0, #784]
   19f6c:	mov	x1, x0
   19f70:	ldr	x0, [sp, #32]
   19f74:	sub	x0, x0, x1
   19f78:	mov	x1, x0
   19f7c:	ldr	x0, [sp]
   19f80:	str	x1, [x0, #1576]
   19f84:	str	wzr, [sp, #68]
   19f88:	b	19fe8 <_Unwind_GetTextRelBase@@GCC_3.0+0x220>
   19f8c:	ldr	x1, [sp]
   19f90:	ldrsw	x0, [sp, #68]
   19f94:	lsl	x0, x0, #4
   19f98:	add	x0, x1, x0
   19f9c:	mov	w1, #0x1                   	// #1
   19fa0:	str	w1, [x0, #8]
   19fa4:	ldrsw	x0, [sp, #68]
   19fa8:	lsl	x0, x0, #3
   19fac:	ldr	x1, [sp, #40]
   19fb0:	add	x0, x1, x0
   19fb4:	add	x0, x0, #0x8
   19fb8:	mov	x1, x0
   19fbc:	ldr	x0, [sp, #32]
   19fc0:	sub	x0, x1, x0
   19fc4:	mov	x2, x0
   19fc8:	ldr	x1, [sp]
   19fcc:	ldrsw	x0, [sp, #68]
   19fd0:	lsl	x0, x0, #4
   19fd4:	add	x0, x1, x0
   19fd8:	str	x2, [x0]
   19fdc:	ldr	w0, [sp, #68]
   19fe0:	add	w0, w0, #0x1
   19fe4:	str	w0, [sp, #68]
   19fe8:	ldr	w0, [sp, #68]
   19fec:	cmp	w0, #0x1e
   19ff0:	b.le	19f8c <_Unwind_GetTextRelBase@@GCC_3.0+0x1c4>
   19ff4:	ldr	x0, [sp, #40]
   19ff8:	add	x0, x0, #0x120
   19ffc:	str	x0, [sp, #72]
   1a000:	b	1a0c0 <_Unwind_GetTextRelBase@@GCC_3.0+0x2f8>
   1a004:	ldr	x0, [sp, #72]
   1a008:	ldr	w1, [x0]
   1a00c:	mov	w0, #0x8001                	// #32769
   1a010:	movk	w0, #0x4650, lsl #16
   1a014:	cmp	w1, w0
   1a018:	b.ne	1a0a8 <_Unwind_GetTextRelBase@@GCC_3.0+0x2e0>  // b.any
   1a01c:	ldr	x0, [sp, #72]
   1a020:	str	x0, [sp, #24]
   1a024:	str	wzr, [sp, #64]
   1a028:	b	1a09c <_Unwind_GetTextRelBase@@GCC_3.0+0x2d4>
   1a02c:	ldr	w0, [sp, #64]
   1a030:	add	w0, w0, #0x40
   1a034:	ldr	x1, [sp]
   1a038:	sxtw	x0, w0
   1a03c:	lsl	x0, x0, #4
   1a040:	add	x0, x1, x0
   1a044:	mov	w1, #0x1                   	// #1
   1a048:	str	w1, [x0, #8]
   1a04c:	ldrsw	x0, [sp, #64]
   1a050:	add	x0, x0, #0x1
   1a054:	lsl	x0, x0, #4
   1a058:	ldr	x1, [sp, #24]
   1a05c:	add	x0, x1, x0
   1a060:	mov	x1, x0
   1a064:	ldr	x0, [sp, #32]
   1a068:	sub	x0, x1, x0
   1a06c:	str	x0, [sp, #16]
   1a070:	ldr	w0, [sp, #64]
   1a074:	add	w0, w0, #0x40
   1a078:	ldr	x1, [sp]
   1a07c:	sxtw	x0, w0
   1a080:	lsl	x0, x0, #4
   1a084:	add	x0, x1, x0
   1a088:	ldr	x1, [sp, #16]
   1a08c:	str	x1, [x0]
   1a090:	ldr	w0, [sp, #64]
   1a094:	add	w0, w0, #0x1
   1a098:	str	w0, [sp, #64]
   1a09c:	ldr	w0, [sp, #64]
   1a0a0:	cmp	w0, #0x1f
   1a0a4:	b.le	1a02c <_Unwind_GetTextRelBase@@GCC_3.0+0x264>
   1a0a8:	ldr	x0, [sp, #72]
   1a0ac:	ldr	w0, [x0, #4]
   1a0b0:	mov	w0, w0
   1a0b4:	ldr	x1, [sp, #72]
   1a0b8:	add	x0, x1, x0
   1a0bc:	str	x0, [sp, #72]
   1a0c0:	ldr	x0, [sp, #72]
   1a0c4:	ldr	w0, [x0]
   1a0c8:	cmp	w0, #0x0
   1a0cc:	b.ne	1a004 <_Unwind_GetTextRelBase@@GCC_3.0+0x23c>  // b.any
   1a0d0:	ldr	x0, [sp]
   1a0d4:	mov	w1, #0x1                   	// #1
   1a0d8:	str	w1, [x0, #504]
   1a0dc:	ldr	x0, [sp, #40]
   1a0e0:	add	x0, x0, #0x100
   1a0e4:	mov	x1, x0
   1a0e8:	ldr	x0, [sp, #32]
   1a0ec:	sub	x0, x1, x0
   1a0f0:	mov	x1, x0
   1a0f4:	ldr	x0, [sp]
   1a0f8:	str	x1, [x0, #496]
   1a0fc:	ldr	x0, [sp]
   1a100:	mov	w1, #0x1                   	// #1
   1a104:	strb	w1, [x0, #1651]
   1a108:	ldr	x0, [sp]
   1a10c:	mov	w1, #0x4                   	// #4
   1a110:	str	w1, [x0, #1544]
   1a114:	ldr	x0, [sp, #40]
   1a118:	ldr	x1, [x0, #264]
   1a11c:	ldr	x0, [sp, #32]
   1a120:	sub	x0, x1, x0
   1a124:	mov	x1, x0
   1a128:	ldr	x0, [sp]
   1a12c:	str	x1, [x0, #1536]
   1a130:	ldr	x0, [sp]
   1a134:	mov	x1, #0x60                  	// #96
   1a138:	str	x1, [x0, #1640]
   1a13c:	mov	w0, #0x0                   	// #0
   1a140:	add	sp, sp, #0x50
   1a144:	ret
   1a148:	stp	x29, x30, [sp, #-96]!
   1a14c:	mov	x29, sp
   1a150:	str	x0, [sp, #40]
   1a154:	str	x1, [sp, #32]
   1a158:	str	x2, [sp, #24]
   1a15c:	ldr	x0, [sp, #40]
   1a160:	add	x0, x0, #0x9
   1a164:	str	x0, [sp, #88]
   1a168:	ldr	x0, [sp, #88]
   1a16c:	bl	2b20 <strlen@plt>
   1a170:	add	x0, x0, #0x1
   1a174:	ldr	x1, [sp, #88]
   1a178:	add	x0, x1, x0
   1a17c:	str	x0, [sp, #80]
   1a180:	str	xzr, [sp, #72]
   1a184:	ldr	x0, [sp, #88]
   1a188:	ldrb	w0, [x0]
   1a18c:	cmp	w0, #0x65
   1a190:	b.ne	1a1d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x40c>  // b.any
   1a194:	ldr	x0, [sp, #88]
   1a198:	add	x0, x0, #0x1
   1a19c:	ldrb	w0, [x0]
   1a1a0:	cmp	w0, #0x68
   1a1a4:	b.ne	1a1d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x40c>  // b.any
   1a1a8:	ldr	x0, [sp, #80]
   1a1ac:	bl	197f4 <__enable_execute_stack@@GCC_3.4.2+0x5f0>
   1a1b0:	mov	x1, x0
   1a1b4:	ldr	x0, [sp, #24]
   1a1b8:	str	x1, [x0, #1656]
   1a1bc:	ldr	x0, [sp, #80]
   1a1c0:	add	x0, x0, #0x8
   1a1c4:	str	x0, [sp, #80]
   1a1c8:	ldr	x0, [sp, #88]
   1a1cc:	add	x0, x0, #0x2
   1a1d0:	str	x0, [sp, #88]
   1a1d4:	ldr	x0, [sp, #40]
   1a1d8:	ldrb	w0, [x0, #8]
   1a1dc:	cmp	w0, #0x3
   1a1e0:	cset	w0, hi  // hi = pmore
   1a1e4:	and	w0, w0, #0xff
   1a1e8:	and	x0, x0, #0xff
   1a1ec:	cmp	x0, #0x0
   1a1f0:	b.eq	1a22c <_Unwind_GetTextRelBase@@GCC_3.0+0x464>  // b.none
   1a1f4:	ldr	x0, [sp, #80]
   1a1f8:	ldrb	w0, [x0]
   1a1fc:	cmp	w0, #0x8
   1a200:	b.ne	1a218 <_Unwind_GetTextRelBase@@GCC_3.0+0x450>  // b.any
   1a204:	ldr	x0, [sp, #80]
   1a208:	add	x0, x0, #0x1
   1a20c:	ldrb	w0, [x0]
   1a210:	cmp	w0, #0x0
   1a214:	b.eq	1a220 <_Unwind_GetTextRelBase@@GCC_3.0+0x458>  // b.none
   1a218:	mov	x0, #0x0                   	// #0
   1a21c:	b	1a440 <_Unwind_GetTextRelBase@@GCC_3.0+0x678>
   1a220:	ldr	x0, [sp, #80]
   1a224:	add	x0, x0, #0x2
   1a228:	str	x0, [sp, #80]
   1a22c:	add	x0, sp, #0x40
   1a230:	mov	x1, x0
   1a234:	ldr	x0, [sp, #80]
   1a238:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1a23c:	str	x0, [sp, #80]
   1a240:	ldr	x1, [sp, #64]
   1a244:	ldr	x0, [sp, #24]
   1a248:	str	x1, [x0, #1632]
   1a24c:	add	x0, sp, #0x38
   1a250:	mov	x1, x0
   1a254:	ldr	x0, [sp, #80]
   1a258:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1a25c:	str	x0, [sp, #80]
   1a260:	ldr	x1, [sp, #56]
   1a264:	ldr	x0, [sp, #24]
   1a268:	str	x1, [x0, #1624]
   1a26c:	ldr	x0, [sp, #40]
   1a270:	ldrb	w0, [x0, #8]
   1a274:	cmp	w0, #0x1
   1a278:	b.ne	1a29c <_Unwind_GetTextRelBase@@GCC_3.0+0x4d4>  // b.any
   1a27c:	ldr	x0, [sp, #80]
   1a280:	add	x1, x0, #0x1
   1a284:	str	x1, [sp, #80]
   1a288:	ldrb	w0, [x0]
   1a28c:	and	x1, x0, #0xff
   1a290:	ldr	x0, [sp, #24]
   1a294:	str	x1, [x0, #1640]
   1a298:	b	1a2bc <_Unwind_GetTextRelBase@@GCC_3.0+0x4f4>
   1a29c:	add	x0, sp, #0x40
   1a2a0:	mov	x1, x0
   1a2a4:	ldr	x0, [sp, #80]
   1a2a8:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1a2ac:	str	x0, [sp, #80]
   1a2b0:	ldr	x1, [sp, #64]
   1a2b4:	ldr	x0, [sp, #24]
   1a2b8:	str	x1, [x0, #1640]
   1a2bc:	ldr	x0, [sp, #24]
   1a2c0:	mov	w1, #0xffffffff            	// #-1
   1a2c4:	strb	w1, [x0, #1649]
   1a2c8:	ldr	x0, [sp, #88]
   1a2cc:	ldrb	w0, [x0]
   1a2d0:	cmp	w0, #0x7a
   1a2d4:	b.ne	1a418 <_Unwind_GetTextRelBase@@GCC_3.0+0x650>  // b.any
   1a2d8:	add	x0, sp, #0x40
   1a2dc:	mov	x1, x0
   1a2e0:	ldr	x0, [sp, #80]
   1a2e4:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1a2e8:	str	x0, [sp, #80]
   1a2ec:	ldr	x0, [sp, #64]
   1a2f0:	ldr	x1, [sp, #80]
   1a2f4:	add	x0, x1, x0
   1a2f8:	str	x0, [sp, #72]
   1a2fc:	ldr	x0, [sp, #24]
   1a300:	mov	w1, #0x1                   	// #1
   1a304:	strb	w1, [x0, #1650]
   1a308:	ldr	x0, [sp, #88]
   1a30c:	add	x0, x0, #0x1
   1a310:	str	x0, [sp, #88]
   1a314:	b	1a418 <_Unwind_GetTextRelBase@@GCC_3.0+0x650>
   1a318:	ldr	x0, [sp, #88]
   1a31c:	ldrb	w0, [x0]
   1a320:	cmp	w0, #0x4c
   1a324:	b.ne	1a350 <_Unwind_GetTextRelBase@@GCC_3.0+0x588>  // b.any
   1a328:	ldr	x0, [sp, #80]
   1a32c:	add	x1, x0, #0x1
   1a330:	str	x1, [sp, #80]
   1a334:	ldrb	w1, [x0]
   1a338:	ldr	x0, [sp, #24]
   1a33c:	strb	w1, [x0, #1649]
   1a340:	ldr	x0, [sp, #88]
   1a344:	add	x0, x0, #0x1
   1a348:	str	x0, [sp, #88]
   1a34c:	b	1a418 <_Unwind_GetTextRelBase@@GCC_3.0+0x650>
   1a350:	ldr	x0, [sp, #88]
   1a354:	ldrb	w0, [x0]
   1a358:	cmp	w0, #0x52
   1a35c:	b.ne	1a388 <_Unwind_GetTextRelBase@@GCC_3.0+0x5c0>  // b.any
   1a360:	ldr	x0, [sp, #80]
   1a364:	add	x1, x0, #0x1
   1a368:	str	x1, [sp, #80]
   1a36c:	ldrb	w1, [x0]
   1a370:	ldr	x0, [sp, #24]
   1a374:	strb	w1, [x0, #1648]
   1a378:	ldr	x0, [sp, #88]
   1a37c:	add	x0, x0, #0x1
   1a380:	str	x0, [sp, #88]
   1a384:	b	1a418 <_Unwind_GetTextRelBase@@GCC_3.0+0x650>
   1a388:	ldr	x0, [sp, #88]
   1a38c:	ldrb	w0, [x0]
   1a390:	cmp	w0, #0x50
   1a394:	b.ne	1a3e4 <_Unwind_GetTextRelBase@@GCC_3.0+0x61c>  // b.any
   1a398:	ldr	x0, [sp, #80]
   1a39c:	ldrb	w4, [x0]
   1a3a0:	ldr	x0, [sp, #80]
   1a3a4:	add	x0, x0, #0x1
   1a3a8:	add	x1, sp, #0x30
   1a3ac:	mov	x3, x1
   1a3b0:	mov	x2, x0
   1a3b4:	mov	w1, w4
   1a3b8:	ldr	x0, [sp, #32]
   1a3bc:	bl	196e4 <__enable_execute_stack@@GCC_3.4.2+0x4e0>
   1a3c0:	str	x0, [sp, #80]
   1a3c4:	ldr	x0, [sp, #48]
   1a3c8:	mov	x1, x0
   1a3cc:	ldr	x0, [sp, #24]
   1a3d0:	str	x1, [x0, #1616]
   1a3d4:	ldr	x0, [sp, #88]
   1a3d8:	add	x0, x0, #0x1
   1a3dc:	str	x0, [sp, #88]
   1a3e0:	b	1a418 <_Unwind_GetTextRelBase@@GCC_3.0+0x650>
   1a3e4:	ldr	x0, [sp, #88]
   1a3e8:	ldrb	w0, [x0]
   1a3ec:	cmp	w0, #0x53
   1a3f0:	b.ne	1a410 <_Unwind_GetTextRelBase@@GCC_3.0+0x648>  // b.any
   1a3f4:	ldr	x0, [sp, #24]
   1a3f8:	mov	w1, #0x1                   	// #1
   1a3fc:	strb	w1, [x0, #1651]
   1a400:	ldr	x0, [sp, #88]
   1a404:	add	x0, x0, #0x1
   1a408:	str	x0, [sp, #88]
   1a40c:	b	1a418 <_Unwind_GetTextRelBase@@GCC_3.0+0x650>
   1a410:	ldr	x0, [sp, #72]
   1a414:	b	1a440 <_Unwind_GetTextRelBase@@GCC_3.0+0x678>
   1a418:	ldr	x0, [sp, #88]
   1a41c:	ldrb	w0, [x0]
   1a420:	cmp	w0, #0x0
   1a424:	b.ne	1a318 <_Unwind_GetTextRelBase@@GCC_3.0+0x550>  // b.any
   1a428:	ldr	x0, [sp, #72]
   1a42c:	cmp	x0, #0x0
   1a430:	b.eq	1a43c <_Unwind_GetTextRelBase@@GCC_3.0+0x674>  // b.none
   1a434:	ldr	x0, [sp, #72]
   1a438:	b	1a440 <_Unwind_GetTextRelBase@@GCC_3.0+0x678>
   1a43c:	ldr	x0, [sp, #80]
   1a440:	ldp	x29, x30, [sp], #96
   1a444:	ret
   1a448:	sub	sp, sp, #0x2b0
   1a44c:	stp	x29, x30, [sp]
   1a450:	mov	x29, sp
   1a454:	str	x0, [sp, #40]
   1a458:	str	x1, [sp, #32]
   1a45c:	str	x2, [sp, #24]
   1a460:	str	x3, [sp, #16]
   1a464:	ldr	x0, [sp, #16]
   1a468:	str	x0, [sp, #88]
   1a46c:	mov	w0, #0x1                   	// #1
   1a470:	str	w0, [sp, #684]
   1a474:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1a478:	ldr	x0, [sp, #40]
   1a47c:	add	x1, x0, #0x1
   1a480:	str	x1, [sp, #40]
   1a484:	ldrb	w0, [x0]
   1a488:	str	w0, [sp, #668]
   1a48c:	ldr	w0, [sp, #668]
   1a490:	sub	w0, w0, #0x3
   1a494:	cmp	w0, #0xee
   1a498:	b.hi	1adcc <_Unwind_GetTextRelBase@@GCC_3.0+0x1004>  // b.pmore
   1a49c:	adrp	x1, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
   1a4a0:	add	x1, x1, #0x3a0
   1a4a4:	ldr	w0, [x1, w0, uxtw #2]
   1a4a8:	adr	x1, 1a4b4 <_Unwind_GetTextRelBase@@GCC_3.0+0x6ec>
   1a4ac:	add	x0, x1, w0, sxtw #2
   1a4b0:	br	x0
   1a4b4:	ldr	w0, [sp, #668]
   1a4b8:	sub	w0, w0, #0x30
   1a4bc:	mov	w0, w0
   1a4c0:	str	x0, [sp, #672]
   1a4c4:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a4c8:	ldr	x0, [sp, #40]
   1a4cc:	bl	197f4 <__enable_execute_stack@@GCC_3.4.2+0x5f0>
   1a4d0:	str	x0, [sp, #672]
   1a4d4:	ldr	x0, [sp, #40]
   1a4d8:	add	x0, x0, #0x8
   1a4dc:	str	x0, [sp, #40]
   1a4e0:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a4e4:	ldr	x0, [sp, #40]
   1a4e8:	ldrb	w4, [x0]
   1a4ec:	ldr	x0, [sp, #40]
   1a4f0:	add	x0, x0, #0x1
   1a4f4:	add	x1, sp, #0x30
   1a4f8:	mov	x3, x1
   1a4fc:	mov	x2, x0
   1a500:	mov	w1, w4
   1a504:	ldr	x0, [sp, #24]
   1a508:	bl	196e4 <__enable_execute_stack@@GCC_3.4.2+0x4e0>
   1a50c:	str	x0, [sp, #40]
   1a510:	ldr	x0, [sp, #48]
   1a514:	str	x0, [sp, #672]
   1a518:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a51c:	ldr	x0, [sp, #40]
   1a520:	bl	19814 <__enable_execute_stack@@GCC_3.4.2+0x610>
   1a524:	sxtw	x0, w0
   1a528:	str	x0, [sp, #672]
   1a52c:	ldr	x0, [sp, #40]
   1a530:	add	x0, x0, #0x1
   1a534:	str	x0, [sp, #40]
   1a538:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a53c:	ldr	x0, [sp, #40]
   1a540:	bl	1982c <__enable_execute_stack@@GCC_3.4.2+0x628>
   1a544:	sxtw	x0, w0
   1a548:	str	x0, [sp, #672]
   1a54c:	ldr	x0, [sp, #40]
   1a550:	add	x0, x0, #0x1
   1a554:	str	x0, [sp, #40]
   1a558:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a55c:	ldr	x0, [sp, #40]
   1a560:	bl	19844 <__enable_execute_stack@@GCC_3.4.2+0x640>
   1a564:	sxtw	x0, w0
   1a568:	str	x0, [sp, #672]
   1a56c:	ldr	x0, [sp, #40]
   1a570:	add	x0, x0, #0x2
   1a574:	str	x0, [sp, #40]
   1a578:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a57c:	ldr	x0, [sp, #40]
   1a580:	bl	19864 <__enable_execute_stack@@GCC_3.4.2+0x660>
   1a584:	sxtw	x0, w0
   1a588:	str	x0, [sp, #672]
   1a58c:	ldr	x0, [sp, #40]
   1a590:	add	x0, x0, #0x2
   1a594:	str	x0, [sp, #40]
   1a598:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a59c:	ldr	x0, [sp, #40]
   1a5a0:	bl	19884 <__enable_execute_stack@@GCC_3.4.2+0x680>
   1a5a4:	mov	w0, w0
   1a5a8:	str	x0, [sp, #672]
   1a5ac:	ldr	x0, [sp, #40]
   1a5b0:	add	x0, x0, #0x4
   1a5b4:	str	x0, [sp, #40]
   1a5b8:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a5bc:	ldr	x0, [sp, #40]
   1a5c0:	bl	198a4 <__enable_execute_stack@@GCC_3.4.2+0x6a0>
   1a5c4:	sxtw	x0, w0
   1a5c8:	str	x0, [sp, #672]
   1a5cc:	ldr	x0, [sp, #40]
   1a5d0:	add	x0, x0, #0x4
   1a5d4:	str	x0, [sp, #40]
   1a5d8:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a5dc:	ldr	x0, [sp, #40]
   1a5e0:	bl	198c4 <__enable_execute_stack@@GCC_3.4.2+0x6c0>
   1a5e4:	str	x0, [sp, #672]
   1a5e8:	ldr	x0, [sp, #40]
   1a5ec:	add	x0, x0, #0x8
   1a5f0:	str	x0, [sp, #40]
   1a5f4:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a5f8:	ldr	x0, [sp, #40]
   1a5fc:	bl	198e4 <__enable_execute_stack@@GCC_3.4.2+0x6e0>
   1a600:	str	x0, [sp, #672]
   1a604:	ldr	x0, [sp, #40]
   1a608:	add	x0, x0, #0x8
   1a60c:	str	x0, [sp, #40]
   1a610:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a614:	add	x0, sp, #0x48
   1a618:	mov	x1, x0
   1a61c:	ldr	x0, [sp, #40]
   1a620:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1a624:	str	x0, [sp, #40]
   1a628:	ldr	x0, [sp, #72]
   1a62c:	str	x0, [sp, #672]
   1a630:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a634:	add	x0, sp, #0x38
   1a638:	mov	x1, x0
   1a63c:	ldr	x0, [sp, #40]
   1a640:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1a644:	str	x0, [sp, #40]
   1a648:	ldr	x0, [sp, #56]
   1a64c:	str	x0, [sp, #672]
   1a650:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a654:	ldr	w0, [sp, #668]
   1a658:	sub	w0, w0, #0x50
   1a65c:	mov	w1, w0
   1a660:	ldr	x0, [sp, #24]
   1a664:	bl	199a4 <_Unwind_GetGR@@GCC_3.0>
   1a668:	str	x0, [sp, #672]
   1a66c:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a670:	add	x0, sp, #0x50
   1a674:	mov	x1, x0
   1a678:	ldr	x0, [sp, #40]
   1a67c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1a680:	str	x0, [sp, #40]
   1a684:	ldr	x0, [sp, #80]
   1a688:	mov	w1, w0
   1a68c:	ldr	x0, [sp, #24]
   1a690:	bl	199a4 <_Unwind_GetGR@@GCC_3.0>
   1a694:	str	x0, [sp, #672]
   1a698:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a69c:	add	x0, sp, #0x40
   1a6a0:	mov	x1, x0
   1a6a4:	ldr	x0, [sp, #40]
   1a6a8:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1a6ac:	str	x0, [sp, #40]
   1a6b0:	ldr	w0, [sp, #668]
   1a6b4:	sub	w0, w0, #0x70
   1a6b8:	mov	w1, w0
   1a6bc:	ldr	x0, [sp, #24]
   1a6c0:	bl	199a4 <_Unwind_GetGR@@GCC_3.0>
   1a6c4:	ldr	x1, [sp, #64]
   1a6c8:	add	x0, x0, x1
   1a6cc:	str	x0, [sp, #672]
   1a6d0:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a6d4:	add	x0, sp, #0x50
   1a6d8:	mov	x1, x0
   1a6dc:	ldr	x0, [sp, #40]
   1a6e0:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1a6e4:	str	x0, [sp, #40]
   1a6e8:	add	x0, sp, #0x40
   1a6ec:	mov	x1, x0
   1a6f0:	ldr	x0, [sp, #40]
   1a6f4:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1a6f8:	str	x0, [sp, #40]
   1a6fc:	ldr	x0, [sp, #80]
   1a700:	mov	w1, w0
   1a704:	ldr	x0, [sp, #24]
   1a708:	bl	199a4 <_Unwind_GetGR@@GCC_3.0>
   1a70c:	ldr	x1, [sp, #64]
   1a710:	add	x0, x0, x1
   1a714:	str	x0, [sp, #672]
   1a718:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a71c:	ldr	w0, [sp, #684]
   1a720:	cmp	w0, #0x0
   1a724:	b.ne	1a72c <_Unwind_GetTextRelBase@@GCC_3.0+0x964>  // b.any
   1a728:	bl	2cb0 <abort@plt>
   1a72c:	ldr	w0, [sp, #684]
   1a730:	sub	w0, w0, #0x1
   1a734:	sxtw	x0, w0
   1a738:	lsl	x0, x0, #3
   1a73c:	add	x1, sp, #0x58
   1a740:	ldr	x0, [x1, x0]
   1a744:	str	x0, [sp, #672]
   1a748:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a74c:	ldr	w0, [sp, #684]
   1a750:	cmp	w0, #0x0
   1a754:	b.ne	1a75c <_Unwind_GetTextRelBase@@GCC_3.0+0x994>  // b.any
   1a758:	bl	2cb0 <abort@plt>
   1a75c:	ldr	w0, [sp, #684]
   1a760:	sub	w0, w0, #0x1
   1a764:	str	w0, [sp, #684]
   1a768:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1a76c:	ldr	x0, [sp, #40]
   1a770:	add	x1, x0, #0x1
   1a774:	str	x1, [sp, #40]
   1a778:	ldrb	w0, [x0]
   1a77c:	and	x0, x0, #0xff
   1a780:	str	x0, [sp, #64]
   1a784:	ldr	w0, [sp, #684]
   1a788:	sub	w0, w0, #0x1
   1a78c:	sxtw	x1, w0
   1a790:	ldr	x0, [sp, #64]
   1a794:	cmp	x1, x0
   1a798:	b.gt	1a7a0 <_Unwind_GetTextRelBase@@GCC_3.0+0x9d8>
   1a79c:	bl	2cb0 <abort@plt>
   1a7a0:	ldr	w0, [sp, #684]
   1a7a4:	sub	w0, w0, #0x1
   1a7a8:	sxtw	x1, w0
   1a7ac:	ldr	x0, [sp, #64]
   1a7b0:	sub	x0, x1, x0
   1a7b4:	lsl	x0, x0, #3
   1a7b8:	add	x1, sp, #0x58
   1a7bc:	ldr	x0, [x1, x0]
   1a7c0:	str	x0, [sp, #672]
   1a7c4:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a7c8:	ldr	w0, [sp, #684]
   1a7cc:	cmp	w0, #0x1
   1a7d0:	b.gt	1a7d8 <_Unwind_GetTextRelBase@@GCC_3.0+0xa10>
   1a7d4:	bl	2cb0 <abort@plt>
   1a7d8:	ldr	w0, [sp, #684]
   1a7dc:	sub	w0, w0, #0x2
   1a7e0:	sxtw	x0, w0
   1a7e4:	lsl	x0, x0, #3
   1a7e8:	add	x1, sp, #0x58
   1a7ec:	ldr	x0, [x1, x0]
   1a7f0:	str	x0, [sp, #672]
   1a7f4:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1a7f8:	ldr	w0, [sp, #684]
   1a7fc:	cmp	w0, #0x1
   1a800:	b.gt	1a808 <_Unwind_GetTextRelBase@@GCC_3.0+0xa40>
   1a804:	bl	2cb0 <abort@plt>
   1a808:	ldr	w0, [sp, #684]
   1a80c:	sub	w0, w0, #0x1
   1a810:	sxtw	x0, w0
   1a814:	lsl	x0, x0, #3
   1a818:	add	x1, sp, #0x58
   1a81c:	ldr	x0, [x1, x0]
   1a820:	str	x0, [sp, #616]
   1a824:	ldr	w0, [sp, #684]
   1a828:	sub	w1, w0, #0x2
   1a82c:	ldr	w0, [sp, #684]
   1a830:	sub	w3, w0, #0x1
   1a834:	sxtw	x0, w1
   1a838:	lsl	x0, x0, #3
   1a83c:	add	x1, sp, #0x58
   1a840:	ldr	x2, [x1, x0]
   1a844:	sxtw	x0, w3
   1a848:	lsl	x0, x0, #3
   1a84c:	add	x1, sp, #0x58
   1a850:	str	x2, [x1, x0]
   1a854:	ldr	w0, [sp, #684]
   1a858:	sub	w0, w0, #0x2
   1a85c:	sxtw	x0, w0
   1a860:	lsl	x0, x0, #3
   1a864:	add	x1, sp, #0x58
   1a868:	ldr	x2, [sp, #616]
   1a86c:	str	x2, [x1, x0]
   1a870:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1a874:	ldr	w0, [sp, #684]
   1a878:	cmp	w0, #0x2
   1a87c:	b.gt	1a884 <_Unwind_GetTextRelBase@@GCC_3.0+0xabc>
   1a880:	bl	2cb0 <abort@plt>
   1a884:	ldr	w0, [sp, #684]
   1a888:	sub	w0, w0, #0x1
   1a88c:	sxtw	x0, w0
   1a890:	lsl	x0, x0, #3
   1a894:	add	x1, sp, #0x58
   1a898:	ldr	x0, [x1, x0]
   1a89c:	str	x0, [sp, #640]
   1a8a0:	ldr	w0, [sp, #684]
   1a8a4:	sub	w0, w0, #0x2
   1a8a8:	sxtw	x0, w0
   1a8ac:	lsl	x0, x0, #3
   1a8b0:	add	x1, sp, #0x58
   1a8b4:	ldr	x0, [x1, x0]
   1a8b8:	str	x0, [sp, #632]
   1a8bc:	ldr	w0, [sp, #684]
   1a8c0:	sub	w0, w0, #0x3
   1a8c4:	sxtw	x0, w0
   1a8c8:	lsl	x0, x0, #3
   1a8cc:	add	x1, sp, #0x58
   1a8d0:	ldr	x0, [x1, x0]
   1a8d4:	str	x0, [sp, #624]
   1a8d8:	ldr	w0, [sp, #684]
   1a8dc:	sub	w0, w0, #0x1
   1a8e0:	sxtw	x0, w0
   1a8e4:	lsl	x0, x0, #3
   1a8e8:	add	x1, sp, #0x58
   1a8ec:	ldr	x2, [sp, #632]
   1a8f0:	str	x2, [x1, x0]
   1a8f4:	ldr	w0, [sp, #684]
   1a8f8:	sub	w0, w0, #0x2
   1a8fc:	sxtw	x0, w0
   1a900:	lsl	x0, x0, #3
   1a904:	add	x1, sp, #0x58
   1a908:	ldr	x2, [sp, #624]
   1a90c:	str	x2, [x1, x0]
   1a910:	ldr	w0, [sp, #684]
   1a914:	sub	w0, w0, #0x3
   1a918:	sxtw	x0, w0
   1a91c:	lsl	x0, x0, #3
   1a920:	add	x1, sp, #0x58
   1a924:	ldr	x2, [sp, #640]
   1a928:	str	x2, [x1, x0]
   1a92c:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1a930:	ldr	w0, [sp, #684]
   1a934:	cmp	w0, #0x0
   1a938:	b.ne	1a940 <_Unwind_GetTextRelBase@@GCC_3.0+0xb78>  // b.any
   1a93c:	bl	2cb0 <abort@plt>
   1a940:	ldr	w0, [sp, #684]
   1a944:	sub	w0, w0, #0x1
   1a948:	str	w0, [sp, #684]
   1a94c:	ldrsw	x0, [sp, #684]
   1a950:	lsl	x0, x0, #3
   1a954:	add	x1, sp, #0x58
   1a958:	ldr	x0, [x1, x0]
   1a95c:	str	x0, [sp, #672]
   1a960:	ldr	w0, [sp, #668]
   1a964:	cmp	w0, #0x94
   1a968:	b.eq	1a9f4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc2c>  // b.none
   1a96c:	ldr	w0, [sp, #668]
   1a970:	cmp	w0, #0x94
   1a974:	b.hi	1aaf8 <_Unwind_GetTextRelBase@@GCC_3.0+0xd30>  // b.pmore
   1a978:	ldr	w0, [sp, #668]
   1a97c:	cmp	w0, #0x23
   1a980:	b.eq	1aad0 <_Unwind_GetTextRelBase@@GCC_3.0+0xd08>  // b.none
   1a984:	ldr	w0, [sp, #668]
   1a988:	cmp	w0, #0x23
   1a98c:	b.hi	1aaf8 <_Unwind_GetTextRelBase@@GCC_3.0+0xd30>  // b.pmore
   1a990:	ldr	w0, [sp, #668]
   1a994:	cmp	w0, #0x20
   1a998:	b.eq	1aac0 <_Unwind_GetTextRelBase@@GCC_3.0+0xcf8>  // b.none
   1a99c:	ldr	w0, [sp, #668]
   1a9a0:	cmp	w0, #0x20
   1a9a4:	b.hi	1aaf8 <_Unwind_GetTextRelBase@@GCC_3.0+0xd30>  // b.pmore
   1a9a8:	ldr	w0, [sp, #668]
   1a9ac:	cmp	w0, #0x1f
   1a9b0:	b.eq	1aab0 <_Unwind_GetTextRelBase@@GCC_3.0+0xce8>  // b.none
   1a9b4:	ldr	w0, [sp, #668]
   1a9b8:	cmp	w0, #0x1f
   1a9bc:	b.hi	1aaf8 <_Unwind_GetTextRelBase@@GCC_3.0+0xd30>  // b.pmore
   1a9c0:	ldr	w0, [sp, #668]
   1a9c4:	cmp	w0, #0x6
   1a9c8:	b.eq	1a9dc <_Unwind_GetTextRelBase@@GCC_3.0+0xc14>  // b.none
   1a9cc:	ldr	w0, [sp, #668]
   1a9d0:	cmp	w0, #0x19
   1a9d4:	b.eq	1aa94 <_Unwind_GetTextRelBase@@GCC_3.0+0xccc>  // b.none
   1a9d8:	b	1aaf8 <_Unwind_GetTextRelBase@@GCC_3.0+0xd30>
   1a9dc:	ldr	x0, [sp, #672]
   1a9e0:	str	x0, [sp, #600]
   1a9e4:	ldr	x0, [sp, #600]
   1a9e8:	bl	197f4 <__enable_execute_stack@@GCC_3.4.2+0x5f0>
   1a9ec:	str	x0, [sp, #672]
   1a9f0:	b	1ab00 <_Unwind_GetTextRelBase@@GCC_3.0+0xd38>
   1a9f4:	ldr	x0, [sp, #672]
   1a9f8:	str	x0, [sp, #608]
   1a9fc:	ldr	x0, [sp, #40]
   1aa00:	add	x1, x0, #0x1
   1aa04:	str	x1, [sp, #40]
   1aa08:	ldrb	w0, [x0]
   1aa0c:	cmp	w0, #0x8
   1aa10:	b.eq	1aa7c <_Unwind_GetTextRelBase@@GCC_3.0+0xcb4>  // b.none
   1aa14:	cmp	w0, #0x8
   1aa18:	b.gt	1aa8c <_Unwind_GetTextRelBase@@GCC_3.0+0xcc4>
   1aa1c:	cmp	w0, #0x4
   1aa20:	b.eq	1aa68 <_Unwind_GetTextRelBase@@GCC_3.0+0xca0>  // b.none
   1aa24:	cmp	w0, #0x4
   1aa28:	b.gt	1aa8c <_Unwind_GetTextRelBase@@GCC_3.0+0xcc4>
   1aa2c:	cmp	w0, #0x1
   1aa30:	b.eq	1aa40 <_Unwind_GetTextRelBase@@GCC_3.0+0xc78>  // b.none
   1aa34:	cmp	w0, #0x2
   1aa38:	b.eq	1aa54 <_Unwind_GetTextRelBase@@GCC_3.0+0xc8c>  // b.none
   1aa3c:	b	1aa8c <_Unwind_GetTextRelBase@@GCC_3.0+0xcc4>
   1aa40:	ldr	x0, [sp, #608]
   1aa44:	bl	19814 <__enable_execute_stack@@GCC_3.4.2+0x610>
   1aa48:	sxtw	x0, w0
   1aa4c:	str	x0, [sp, #672]
   1aa50:	b	1aa90 <_Unwind_GetTextRelBase@@GCC_3.0+0xcc8>
   1aa54:	ldr	x0, [sp, #608]
   1aa58:	bl	19844 <__enable_execute_stack@@GCC_3.4.2+0x640>
   1aa5c:	sxtw	x0, w0
   1aa60:	str	x0, [sp, #672]
   1aa64:	b	1aa90 <_Unwind_GetTextRelBase@@GCC_3.0+0xcc8>
   1aa68:	ldr	x0, [sp, #608]
   1aa6c:	bl	19884 <__enable_execute_stack@@GCC_3.4.2+0x680>
   1aa70:	mov	w0, w0
   1aa74:	str	x0, [sp, #672]
   1aa78:	b	1aa90 <_Unwind_GetTextRelBase@@GCC_3.0+0xcc8>
   1aa7c:	ldr	x0, [sp, #608]
   1aa80:	bl	198c4 <__enable_execute_stack@@GCC_3.4.2+0x6c0>
   1aa84:	str	x0, [sp, #672]
   1aa88:	b	1aa90 <_Unwind_GetTextRelBase@@GCC_3.0+0xcc8>
   1aa8c:	bl	2cb0 <abort@plt>
   1aa90:	b	1ab00 <_Unwind_GetTextRelBase@@GCC_3.0+0xd38>
   1aa94:	ldr	x0, [sp, #672]
   1aa98:	cmp	x0, #0x0
   1aa9c:	b.ge	1aafc <_Unwind_GetTextRelBase@@GCC_3.0+0xd34>  // b.tcont
   1aaa0:	ldr	x0, [sp, #672]
   1aaa4:	neg	x0, x0
   1aaa8:	str	x0, [sp, #672]
   1aaac:	b	1aafc <_Unwind_GetTextRelBase@@GCC_3.0+0xd34>
   1aab0:	ldr	x0, [sp, #672]
   1aab4:	neg	x0, x0
   1aab8:	str	x0, [sp, #672]
   1aabc:	b	1ab00 <_Unwind_GetTextRelBase@@GCC_3.0+0xd38>
   1aac0:	ldr	x0, [sp, #672]
   1aac4:	mvn	x0, x0
   1aac8:	str	x0, [sp, #672]
   1aacc:	b	1ab00 <_Unwind_GetTextRelBase@@GCC_3.0+0xd38>
   1aad0:	add	x0, sp, #0x48
   1aad4:	mov	x1, x0
   1aad8:	ldr	x0, [sp, #40]
   1aadc:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1aae0:	str	x0, [sp, #40]
   1aae4:	ldr	x0, [sp, #72]
   1aae8:	ldr	x1, [sp, #672]
   1aaec:	add	x0, x1, x0
   1aaf0:	str	x0, [sp, #672]
   1aaf4:	b	1ab00 <_Unwind_GetTextRelBase@@GCC_3.0+0xd38>
   1aaf8:	bl	2cb0 <abort@plt>
   1aafc:	nop
   1ab00:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1ab04:	ldr	w0, [sp, #684]
   1ab08:	cmp	w0, #0x1
   1ab0c:	b.gt	1ab14 <_Unwind_GetTextRelBase@@GCC_3.0+0xd4c>
   1ab10:	bl	2cb0 <abort@plt>
   1ab14:	ldr	w0, [sp, #684]
   1ab18:	sub	w0, w0, #0x2
   1ab1c:	str	w0, [sp, #684]
   1ab20:	ldrsw	x0, [sp, #684]
   1ab24:	lsl	x0, x0, #3
   1ab28:	add	x1, sp, #0x58
   1ab2c:	ldr	x0, [x1, x0]
   1ab30:	str	x0, [sp, #656]
   1ab34:	ldr	w0, [sp, #684]
   1ab38:	add	w0, w0, #0x1
   1ab3c:	sxtw	x0, w0
   1ab40:	lsl	x0, x0, #3
   1ab44:	add	x1, sp, #0x58
   1ab48:	ldr	x0, [x1, x0]
   1ab4c:	str	x0, [sp, #648]
   1ab50:	ldr	w0, [sp, #668]
   1ab54:	sub	w0, w0, #0x1a
   1ab58:	cmp	w0, #0x14
   1ab5c:	b.hi	1ad28 <_Unwind_GetTextRelBase@@GCC_3.0+0xf60>  // b.pmore
   1ab60:	adrp	x1, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
   1ab64:	add	x1, x1, #0x75c
   1ab68:	ldr	w0, [x1, w0, uxtw #2]
   1ab6c:	adr	x1, 1ab78 <_Unwind_GetTextRelBase@@GCC_3.0+0xdb0>
   1ab70:	add	x0, x1, w0, sxtw #2
   1ab74:	br	x0
   1ab78:	ldr	x1, [sp, #656]
   1ab7c:	ldr	x0, [sp, #648]
   1ab80:	and	x0, x1, x0
   1ab84:	str	x0, [sp, #672]
   1ab88:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ab8c:	ldr	x1, [sp, #656]
   1ab90:	ldr	x0, [sp, #648]
   1ab94:	sdiv	x0, x1, x0
   1ab98:	str	x0, [sp, #672]
   1ab9c:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1aba0:	ldr	x1, [sp, #656]
   1aba4:	ldr	x0, [sp, #648]
   1aba8:	sub	x0, x1, x0
   1abac:	str	x0, [sp, #672]
   1abb0:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1abb4:	ldr	x0, [sp, #656]
   1abb8:	ldr	x1, [sp, #648]
   1abbc:	udiv	x2, x0, x1
   1abc0:	ldr	x1, [sp, #648]
   1abc4:	mul	x1, x2, x1
   1abc8:	sub	x0, x0, x1
   1abcc:	str	x0, [sp, #672]
   1abd0:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1abd4:	ldr	x1, [sp, #656]
   1abd8:	ldr	x0, [sp, #648]
   1abdc:	mul	x0, x1, x0
   1abe0:	str	x0, [sp, #672]
   1abe4:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1abe8:	ldr	x1, [sp, #656]
   1abec:	ldr	x0, [sp, #648]
   1abf0:	orr	x0, x1, x0
   1abf4:	str	x0, [sp, #672]
   1abf8:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1abfc:	ldr	x1, [sp, #656]
   1ac00:	ldr	x0, [sp, #648]
   1ac04:	add	x0, x1, x0
   1ac08:	str	x0, [sp, #672]
   1ac0c:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ac10:	ldr	x0, [sp, #648]
   1ac14:	mov	w1, w0
   1ac18:	ldr	x0, [sp, #656]
   1ac1c:	lsl	x0, x0, x1
   1ac20:	str	x0, [sp, #672]
   1ac24:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ac28:	ldr	x0, [sp, #648]
   1ac2c:	mov	w1, w0
   1ac30:	ldr	x0, [sp, #656]
   1ac34:	lsr	x0, x0, x1
   1ac38:	str	x0, [sp, #672]
   1ac3c:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ac40:	ldr	x0, [sp, #656]
   1ac44:	ldr	x1, [sp, #648]
   1ac48:	asr	x0, x0, x1
   1ac4c:	str	x0, [sp, #672]
   1ac50:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ac54:	ldr	x1, [sp, #656]
   1ac58:	ldr	x0, [sp, #648]
   1ac5c:	eor	x0, x1, x0
   1ac60:	str	x0, [sp, #672]
   1ac64:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ac68:	ldr	x1, [sp, #656]
   1ac6c:	ldr	x0, [sp, #648]
   1ac70:	cmp	x1, x0
   1ac74:	cset	w0, le
   1ac78:	and	w0, w0, #0xff
   1ac7c:	and	x0, x0, #0xff
   1ac80:	str	x0, [sp, #672]
   1ac84:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ac88:	ldr	x1, [sp, #656]
   1ac8c:	ldr	x0, [sp, #648]
   1ac90:	cmp	x1, x0
   1ac94:	cset	w0, ge  // ge = tcont
   1ac98:	and	w0, w0, #0xff
   1ac9c:	and	x0, x0, #0xff
   1aca0:	str	x0, [sp, #672]
   1aca4:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1aca8:	ldr	x1, [sp, #656]
   1acac:	ldr	x0, [sp, #648]
   1acb0:	cmp	x1, x0
   1acb4:	cset	w0, eq  // eq = none
   1acb8:	and	w0, w0, #0xff
   1acbc:	and	x0, x0, #0xff
   1acc0:	str	x0, [sp, #672]
   1acc4:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1acc8:	ldr	x1, [sp, #656]
   1accc:	ldr	x0, [sp, #648]
   1acd0:	cmp	x1, x0
   1acd4:	cset	w0, lt  // lt = tstop
   1acd8:	and	w0, w0, #0xff
   1acdc:	and	x0, x0, #0xff
   1ace0:	str	x0, [sp, #672]
   1ace4:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ace8:	ldr	x1, [sp, #656]
   1acec:	ldr	x0, [sp, #648]
   1acf0:	cmp	x1, x0
   1acf4:	cset	w0, gt
   1acf8:	and	w0, w0, #0xff
   1acfc:	and	x0, x0, #0xff
   1ad00:	str	x0, [sp, #672]
   1ad04:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ad08:	ldr	x1, [sp, #656]
   1ad0c:	ldr	x0, [sp, #648]
   1ad10:	cmp	x1, x0
   1ad14:	cset	w0, ne  // ne = any
   1ad18:	and	w0, w0, #0xff
   1ad1c:	and	x0, x0, #0xff
   1ad20:	str	x0, [sp, #672]
   1ad24:	b	1ad2c <_Unwind_GetTextRelBase@@GCC_3.0+0xf64>
   1ad28:	bl	2cb0 <abort@plt>
   1ad2c:	b	1add0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1008>
   1ad30:	ldr	x0, [sp, #40]
   1ad34:	bl	19864 <__enable_execute_stack@@GCC_3.4.2+0x660>
   1ad38:	sxtw	x0, w0
   1ad3c:	str	x0, [sp, #64]
   1ad40:	ldr	x0, [sp, #40]
   1ad44:	add	x0, x0, #0x2
   1ad48:	str	x0, [sp, #40]
   1ad4c:	ldr	x0, [sp, #64]
   1ad50:	mov	x1, x0
   1ad54:	ldr	x0, [sp, #40]
   1ad58:	add	x0, x0, x1
   1ad5c:	str	x0, [sp, #40]
   1ad60:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1ad64:	ldr	w0, [sp, #684]
   1ad68:	cmp	w0, #0x0
   1ad6c:	b.ne	1ad74 <_Unwind_GetTextRelBase@@GCC_3.0+0xfac>  // b.any
   1ad70:	bl	2cb0 <abort@plt>
   1ad74:	ldr	w0, [sp, #684]
   1ad78:	sub	w0, w0, #0x1
   1ad7c:	str	w0, [sp, #684]
   1ad80:	ldr	x0, [sp, #40]
   1ad84:	bl	19864 <__enable_execute_stack@@GCC_3.4.2+0x660>
   1ad88:	sxtw	x0, w0
   1ad8c:	str	x0, [sp, #64]
   1ad90:	ldr	x0, [sp, #40]
   1ad94:	add	x0, x0, #0x2
   1ad98:	str	x0, [sp, #40]
   1ad9c:	ldrsw	x0, [sp, #684]
   1ada0:	lsl	x0, x0, #3
   1ada4:	add	x1, sp, #0x58
   1ada8:	ldr	x0, [x1, x0]
   1adac:	cmp	x0, #0x0
   1adb0:	b.eq	1ae0c <_Unwind_GetTextRelBase@@GCC_3.0+0x1044>  // b.none
   1adb4:	ldr	x0, [sp, #64]
   1adb8:	mov	x1, x0
   1adbc:	ldr	x0, [sp, #40]
   1adc0:	add	x0, x0, x1
   1adc4:	str	x0, [sp, #40]
   1adc8:	b	1ae0c <_Unwind_GetTextRelBase@@GCC_3.0+0x1044>
   1adcc:	bl	2cb0 <abort@plt>
   1add0:	ldr	w0, [sp, #684]
   1add4:	cmp	w0, #0x3f
   1add8:	b.ls	1ade0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1018>  // b.plast
   1addc:	bl	2cb0 <abort@plt>
   1ade0:	ldr	w0, [sp, #684]
   1ade4:	add	w1, w0, #0x1
   1ade8:	str	w1, [sp, #684]
   1adec:	sxtw	x0, w0
   1adf0:	lsl	x0, x0, #3
   1adf4:	add	x1, sp, #0x58
   1adf8:	ldr	x2, [sp, #672]
   1adfc:	str	x2, [x1, x0]
   1ae00:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1ae04:	nop
   1ae08:	b	1ae10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1048>
   1ae0c:	nop
   1ae10:	ldr	x1, [sp, #40]
   1ae14:	ldr	x0, [sp, #32]
   1ae18:	cmp	x1, x0
   1ae1c:	b.cc	1a478 <_Unwind_GetTextRelBase@@GCC_3.0+0x6b0>  // b.lo, b.ul, b.last
   1ae20:	ldr	w0, [sp, #684]
   1ae24:	cmp	w0, #0x0
   1ae28:	b.ne	1ae30 <_Unwind_GetTextRelBase@@GCC_3.0+0x1068>  // b.any
   1ae2c:	bl	2cb0 <abort@plt>
   1ae30:	ldr	w0, [sp, #684]
   1ae34:	sub	w0, w0, #0x1
   1ae38:	str	w0, [sp, #684]
   1ae3c:	ldrsw	x0, [sp, #684]
   1ae40:	lsl	x0, x0, #3
   1ae44:	add	x1, sp, #0x58
   1ae48:	ldr	x0, [x1, x0]
   1ae4c:	b	1ae54 <_Unwind_GetTextRelBase@@GCC_3.0+0x108c>
   1ae50:	bl	2d80 <_Unwind_Resume@plt>
   1ae54:	ldp	x29, x30, [sp]
   1ae58:	add	sp, sp, #0x2b0
   1ae5c:	ret
   1ae60:	stp	x29, x30, [sp, #-144]!
   1ae64:	mov	x29, sp
   1ae68:	stp	x19, x20, [sp, #16]
   1ae6c:	str	x0, [x29, #56]
   1ae70:	str	x1, [x29, #48]
   1ae74:	str	x2, [x29, #40]
   1ae78:	str	x3, [x29, #32]
   1ae7c:	str	xzr, [x29, #136]
   1ae80:	ldr	x0, [x29, #32]
   1ae84:	str	xzr, [x0, #1568]
   1ae88:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1ae8c:	ldr	x0, [x29, #56]
   1ae90:	add	x1, x0, #0x1
   1ae94:	str	x1, [x29, #56]
   1ae98:	ldrb	w0, [x0]
   1ae9c:	strb	w0, [x29, #127]
   1aea0:	ldrb	w0, [x29, #127]
   1aea4:	and	w0, w0, #0xc0
   1aea8:	cmp	w0, #0x40
   1aeac:	b.ne	1aedc <_Unwind_GetTextRelBase@@GCC_3.0+0x1114>  // b.any
   1aeb0:	ldr	x0, [x29, #32]
   1aeb4:	ldr	x1, [x0, #1608]
   1aeb8:	ldrb	w0, [x29, #127]
   1aebc:	and	x2, x0, #0x3f
   1aec0:	ldr	x0, [x29, #32]
   1aec4:	ldr	x0, [x0, #1632]
   1aec8:	mul	x0, x2, x0
   1aecc:	add	x1, x1, x0
   1aed0:	ldr	x0, [x29, #32]
   1aed4:	str	x1, [x0, #1608]
   1aed8:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1aedc:	ldrb	w0, [x29, #127]
   1aee0:	and	w0, w0, #0xc0
   1aee4:	cmp	w0, #0x80
   1aee8:	b.ne	1af78 <_Unwind_GetTextRelBase@@GCC_3.0+0x11b0>  // b.any
   1aeec:	ldrb	w0, [x29, #127]
   1aef0:	and	x0, x0, #0x3f
   1aef4:	str	x0, [x29, #96]
   1aef8:	add	x0, x29, #0x58
   1aefc:	mov	x1, x0
   1af00:	ldr	x0, [x29, #56]
   1af04:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1af08:	str	x0, [x29, #56]
   1af0c:	ldr	x0, [x29, #32]
   1af10:	ldr	x0, [x0, #1624]
   1af14:	ldr	x1, [x29, #88]
   1af18:	mul	x0, x0, x1
   1af1c:	str	x0, [x29, #112]
   1af20:	ldr	x0, [x29, #96]
   1af24:	str	x0, [x29, #96]
   1af28:	ldr	x0, [x29, #96]
   1af2c:	cmp	x0, #0x61
   1af30:	cset	w0, ls  // ls = plast
   1af34:	and	w0, w0, #0xff
   1af38:	and	x0, x0, #0xff
   1af3c:	cmp	x0, #0x0
   1af40:	b.eq	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>  // b.none
   1af44:	ldr	x0, [x29, #96]
   1af48:	ldr	x1, [x29, #32]
   1af4c:	lsl	x0, x0, #4
   1af50:	add	x0, x1, x0
   1af54:	mov	w1, #0x1                   	// #1
   1af58:	str	w1, [x0, #8]
   1af5c:	ldr	x0, [x29, #96]
   1af60:	ldr	x1, [x29, #32]
   1af64:	lsl	x0, x0, #4
   1af68:	add	x0, x1, x0
   1af6c:	ldr	x1, [x29, #112]
   1af70:	str	x1, [x0]
   1af74:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1af78:	ldrb	w0, [x29, #127]
   1af7c:	and	w0, w0, #0xc0
   1af80:	cmp	w0, #0xc0
   1af84:	b.ne	1afd0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1208>  // b.any
   1af88:	ldrb	w0, [x29, #127]
   1af8c:	and	x0, x0, #0x3f
   1af90:	str	x0, [x29, #96]
   1af94:	ldr	x0, [x29, #96]
   1af98:	str	x0, [x29, #96]
   1af9c:	ldr	x0, [x29, #96]
   1afa0:	cmp	x0, #0x61
   1afa4:	cset	w0, ls  // ls = plast
   1afa8:	and	w0, w0, #0xff
   1afac:	and	x0, x0, #0xff
   1afb0:	cmp	x0, #0x0
   1afb4:	b.eq	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>  // b.none
   1afb8:	ldr	x0, [x29, #96]
   1afbc:	ldr	x1, [x29, #32]
   1afc0:	lsl	x0, x0, #4
   1afc4:	add	x0, x1, x0
   1afc8:	str	wzr, [x0, #8]
   1afcc:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1afd0:	ldrb	w0, [x29, #127]
   1afd4:	cmp	w0, #0x2f
   1afd8:	b.hi	1b8e0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b18>  // b.pmore
   1afdc:	adrp	x1, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
   1afe0:	add	x1, x1, #0x7b0
   1afe4:	ldr	w0, [x1, w0, uxtw #2]
   1afe8:	adr	x1, 1aff4 <_Unwind_GetTextRelBase@@GCC_3.0+0x122c>
   1afec:	add	x0, x1, w0, sxtw #2
   1aff0:	br	x0
   1aff4:	ldr	x0, [x29, #32]
   1aff8:	ldrb	w1, [x0, #1648]
   1affc:	add	x0, x29, #0x48
   1b000:	mov	x3, x0
   1b004:	ldr	x2, [x29, #56]
   1b008:	ldr	x0, [x29, #40]
   1b00c:	bl	196e4 <__enable_execute_stack@@GCC_3.4.2+0x4e0>
   1b010:	str	x0, [x29, #56]
   1b014:	ldr	x0, [x29, #72]
   1b018:	mov	x1, x0
   1b01c:	ldr	x0, [x29, #32]
   1b020:	str	x1, [x0, #1608]
   1b024:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b028:	ldr	x0, [x29, #56]
   1b02c:	bl	19814 <__enable_execute_stack@@GCC_3.4.2+0x610>
   1b030:	sxtw	x1, w0
   1b034:	ldr	x0, [x29, #32]
   1b038:	ldr	x0, [x0, #1632]
   1b03c:	mul	x0, x1, x0
   1b040:	ldr	x1, [x29, #32]
   1b044:	ldr	x1, [x1, #1608]
   1b048:	add	x1, x1, x0
   1b04c:	ldr	x0, [x29, #32]
   1b050:	str	x1, [x0, #1608]
   1b054:	ldr	x0, [x29, #56]
   1b058:	add	x0, x0, #0x1
   1b05c:	str	x0, [x29, #56]
   1b060:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b064:	ldr	x0, [x29, #56]
   1b068:	bl	19844 <__enable_execute_stack@@GCC_3.4.2+0x640>
   1b06c:	sxtw	x1, w0
   1b070:	ldr	x0, [x29, #32]
   1b074:	ldr	x0, [x0, #1632]
   1b078:	mul	x0, x1, x0
   1b07c:	ldr	x1, [x29, #32]
   1b080:	ldr	x1, [x1, #1608]
   1b084:	add	x1, x1, x0
   1b088:	ldr	x0, [x29, #32]
   1b08c:	str	x1, [x0, #1608]
   1b090:	ldr	x0, [x29, #56]
   1b094:	add	x0, x0, #0x2
   1b098:	str	x0, [x29, #56]
   1b09c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b0a0:	ldr	x0, [x29, #56]
   1b0a4:	bl	19884 <__enable_execute_stack@@GCC_3.4.2+0x680>
   1b0a8:	mov	w1, w0
   1b0ac:	ldr	x0, [x29, #32]
   1b0b0:	ldr	x0, [x0, #1632]
   1b0b4:	mul	x0, x1, x0
   1b0b8:	ldr	x1, [x29, #32]
   1b0bc:	ldr	x1, [x1, #1608]
   1b0c0:	add	x1, x1, x0
   1b0c4:	ldr	x0, [x29, #32]
   1b0c8:	str	x1, [x0, #1608]
   1b0cc:	ldr	x0, [x29, #56]
   1b0d0:	add	x0, x0, #0x4
   1b0d4:	str	x0, [x29, #56]
   1b0d8:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b0dc:	add	x0, x29, #0x60
   1b0e0:	mov	x1, x0
   1b0e4:	ldr	x0, [x29, #56]
   1b0e8:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b0ec:	str	x0, [x29, #56]
   1b0f0:	add	x0, x29, #0x58
   1b0f4:	mov	x1, x0
   1b0f8:	ldr	x0, [x29, #56]
   1b0fc:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b100:	str	x0, [x29, #56]
   1b104:	ldr	x0, [x29, #32]
   1b108:	ldr	x0, [x0, #1624]
   1b10c:	ldr	x1, [x29, #88]
   1b110:	mul	x0, x0, x1
   1b114:	str	x0, [x29, #112]
   1b118:	ldr	x0, [x29, #96]
   1b11c:	str	x0, [x29, #96]
   1b120:	ldr	x0, [x29, #96]
   1b124:	cmp	x0, #0x61
   1b128:	cset	w0, ls  // ls = plast
   1b12c:	and	w0, w0, #0xff
   1b130:	and	x0, x0, #0xff
   1b134:	cmp	x0, #0x0
   1b138:	b.eq	1b8ec <_Unwind_GetTextRelBase@@GCC_3.0+0x1b24>  // b.none
   1b13c:	ldr	x0, [x29, #96]
   1b140:	ldr	x1, [x29, #32]
   1b144:	lsl	x0, x0, #4
   1b148:	add	x0, x1, x0
   1b14c:	mov	w1, #0x1                   	// #1
   1b150:	str	w1, [x0, #8]
   1b154:	ldr	x0, [x29, #96]
   1b158:	ldr	x1, [x29, #32]
   1b15c:	lsl	x0, x0, #4
   1b160:	add	x0, x1, x0
   1b164:	ldr	x1, [x29, #112]
   1b168:	str	x1, [x0]
   1b16c:	b	1b8ec <_Unwind_GetTextRelBase@@GCC_3.0+0x1b24>
   1b170:	add	x0, x29, #0x60
   1b174:	mov	x1, x0
   1b178:	ldr	x0, [x29, #56]
   1b17c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b180:	str	x0, [x29, #56]
   1b184:	ldr	x0, [x29, #96]
   1b188:	str	x0, [x29, #96]
   1b18c:	ldr	x0, [x29, #96]
   1b190:	cmp	x0, #0x61
   1b194:	cset	w0, ls  // ls = plast
   1b198:	and	w0, w0, #0xff
   1b19c:	and	x0, x0, #0xff
   1b1a0:	cmp	x0, #0x0
   1b1a4:	b.eq	1b8f4 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b2c>  // b.none
   1b1a8:	ldr	x0, [x29, #96]
   1b1ac:	ldr	x1, [x29, #32]
   1b1b0:	lsl	x0, x0, #4
   1b1b4:	add	x0, x1, x0
   1b1b8:	str	wzr, [x0, #8]
   1b1bc:	b	1b8f4 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b2c>
   1b1c0:	add	x0, x29, #0x60
   1b1c4:	mov	x1, x0
   1b1c8:	ldr	x0, [x29, #56]
   1b1cc:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b1d0:	str	x0, [x29, #56]
   1b1d4:	ldr	x0, [x29, #96]
   1b1d8:	str	x0, [x29, #96]
   1b1dc:	ldr	x0, [x29, #96]
   1b1e0:	cmp	x0, #0x61
   1b1e4:	cset	w0, ls  // ls = plast
   1b1e8:	and	w0, w0, #0xff
   1b1ec:	and	x0, x0, #0xff
   1b1f0:	cmp	x0, #0x0
   1b1f4:	b.eq	1b8fc <_Unwind_GetTextRelBase@@GCC_3.0+0x1b34>  // b.none
   1b1f8:	ldr	x0, [x29, #96]
   1b1fc:	ldr	x1, [x29, #32]
   1b200:	lsl	x0, x0, #4
   1b204:	add	x0, x1, x0
   1b208:	str	wzr, [x0, #8]
   1b20c:	b	1b8fc <_Unwind_GetTextRelBase@@GCC_3.0+0x1b34>
   1b210:	add	x0, x29, #0x60
   1b214:	mov	x1, x0
   1b218:	ldr	x0, [x29, #56]
   1b21c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b220:	str	x0, [x29, #56]
   1b224:	ldr	x0, [x29, #96]
   1b228:	str	x0, [x29, #96]
   1b22c:	ldr	x0, [x29, #96]
   1b230:	cmp	x0, #0x61
   1b234:	cset	w0, ls  // ls = plast
   1b238:	and	w0, w0, #0xff
   1b23c:	and	x0, x0, #0xff
   1b240:	cmp	x0, #0x0
   1b244:	b.eq	1b904 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b3c>  // b.none
   1b248:	ldr	x0, [x29, #96]
   1b24c:	ldr	x1, [x29, #32]
   1b250:	lsl	x0, x0, #4
   1b254:	add	x0, x1, x0
   1b258:	mov	w1, #0x6                   	// #6
   1b25c:	str	w1, [x0, #8]
   1b260:	b	1b904 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b3c>
   1b264:	add	x0, x29, #0x60
   1b268:	mov	x1, x0
   1b26c:	ldr	x0, [x29, #56]
   1b270:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b274:	str	x0, [x29, #56]
   1b278:	add	x0, x29, #0x40
   1b27c:	mov	x1, x0
   1b280:	ldr	x0, [x29, #56]
   1b284:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b288:	str	x0, [x29, #56]
   1b28c:	ldr	x0, [x29, #96]
   1b290:	str	x0, [x29, #96]
   1b294:	ldr	x0, [x29, #96]
   1b298:	cmp	x0, #0x61
   1b29c:	cset	w0, ls  // ls = plast
   1b2a0:	and	w0, w0, #0xff
   1b2a4:	and	x0, x0, #0xff
   1b2a8:	cmp	x0, #0x0
   1b2ac:	b.eq	1b90c <_Unwind_GetTextRelBase@@GCC_3.0+0x1b44>  // b.none
   1b2b0:	ldr	x0, [x29, #96]
   1b2b4:	ldr	x1, [x29, #32]
   1b2b8:	lsl	x0, x0, #4
   1b2bc:	add	x0, x1, x0
   1b2c0:	mov	w1, #0x2                   	// #2
   1b2c4:	str	w1, [x0, #8]
   1b2c8:	ldr	x0, [x29, #96]
   1b2cc:	ldr	x1, [x29, #64]
   1b2d0:	ldr	x2, [x29, #32]
   1b2d4:	lsl	x0, x0, #4
   1b2d8:	add	x0, x2, x0
   1b2dc:	str	x1, [x0]
   1b2e0:	b	1b90c <_Unwind_GetTextRelBase@@GCC_3.0+0x1b44>
   1b2e4:	ldr	x0, [x29, #136]
   1b2e8:	cmp	x0, #0x0
   1b2ec:	b.eq	1b308 <_Unwind_GetTextRelBase@@GCC_3.0+0x1540>  // b.none
   1b2f0:	ldr	x0, [x29, #136]
   1b2f4:	str	x0, [x29, #128]
   1b2f8:	ldr	x0, [x29, #136]
   1b2fc:	ldr	x0, [x0, #1568]
   1b300:	str	x0, [x29, #136]
   1b304:	b	1b320 <_Unwind_GetTextRelBase@@GCC_3.0+0x1558>
   1b308:	sub	sp, sp, #0x650
   1b30c:	mov	x0, sp
   1b310:	add	x0, x0, #0xf
   1b314:	lsr	x0, x0, #4
   1b318:	lsl	x0, x0, #4
   1b31c:	str	x0, [x29, #128]
   1b320:	ldr	x1, [x29, #128]
   1b324:	ldr	x0, [x29, #32]
   1b328:	mov	x3, x1
   1b32c:	mov	x1, x0
   1b330:	mov	x0, #0x648                 	// #1608
   1b334:	mov	x2, x0
   1b338:	mov	x0, x3
   1b33c:	bl	2b00 <memcpy@plt>
   1b340:	ldr	x0, [x29, #32]
   1b344:	ldr	x1, [x29, #128]
   1b348:	str	x1, [x0, #1568]
   1b34c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b350:	ldr	x0, [x29, #32]
   1b354:	ldr	x0, [x0, #1568]
   1b358:	str	x0, [x29, #104]
   1b35c:	ldr	x1, [x29, #32]
   1b360:	ldr	x0, [x29, #104]
   1b364:	mov	x3, x1
   1b368:	mov	x1, x0
   1b36c:	mov	x0, #0x648                 	// #1608
   1b370:	mov	x2, x0
   1b374:	mov	x0, x3
   1b378:	bl	2b00 <memcpy@plt>
   1b37c:	ldr	x0, [x29, #104]
   1b380:	ldr	x1, [x29, #136]
   1b384:	str	x1, [x0, #1568]
   1b388:	ldr	x0, [x29, #104]
   1b38c:	str	x0, [x29, #136]
   1b390:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b394:	add	x0, x29, #0x58
   1b398:	mov	x1, x0
   1b39c:	ldr	x0, [x29, #56]
   1b3a0:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b3a4:	str	x0, [x29, #56]
   1b3a8:	ldr	x1, [x29, #88]
   1b3ac:	ldr	x0, [x29, #32]
   1b3b0:	str	x1, [x0, #1584]
   1b3b4:	add	x0, x29, #0x58
   1b3b8:	mov	x1, x0
   1b3bc:	ldr	x0, [x29, #56]
   1b3c0:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b3c4:	str	x0, [x29, #56]
   1b3c8:	ldr	x0, [x29, #88]
   1b3cc:	mov	x1, x0
   1b3d0:	ldr	x0, [x29, #32]
   1b3d4:	str	x1, [x0, #1576]
   1b3d8:	ldr	x0, [x29, #32]
   1b3dc:	mov	w1, #0x1                   	// #1
   1b3e0:	str	w1, [x0, #1600]
   1b3e4:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b3e8:	add	x0, x29, #0x58
   1b3ec:	mov	x1, x0
   1b3f0:	ldr	x0, [x29, #56]
   1b3f4:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b3f8:	str	x0, [x29, #56]
   1b3fc:	ldr	x1, [x29, #88]
   1b400:	ldr	x0, [x29, #32]
   1b404:	str	x1, [x0, #1584]
   1b408:	ldr	x0, [x29, #32]
   1b40c:	mov	w1, #0x1                   	// #1
   1b410:	str	w1, [x0, #1600]
   1b414:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b418:	add	x0, x29, #0x58
   1b41c:	mov	x1, x0
   1b420:	ldr	x0, [x29, #56]
   1b424:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b428:	str	x0, [x29, #56]
   1b42c:	ldr	x0, [x29, #88]
   1b430:	mov	x1, x0
   1b434:	ldr	x0, [x29, #32]
   1b438:	str	x1, [x0, #1576]
   1b43c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b440:	ldr	x0, [x29, #32]
   1b444:	ldr	x1, [x29, #56]
   1b448:	str	x1, [x0, #1592]
   1b44c:	ldr	x0, [x29, #32]
   1b450:	mov	w1, #0x2                   	// #2
   1b454:	str	w1, [x0, #1600]
   1b458:	add	x0, x29, #0x58
   1b45c:	mov	x1, x0
   1b460:	ldr	x0, [x29, #56]
   1b464:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b468:	str	x0, [x29, #56]
   1b46c:	ldr	x0, [x29, #88]
   1b470:	ldr	x1, [x29, #56]
   1b474:	add	x0, x1, x0
   1b478:	str	x0, [x29, #56]
   1b47c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b480:	add	x0, x29, #0x60
   1b484:	mov	x1, x0
   1b488:	ldr	x0, [x29, #56]
   1b48c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b490:	str	x0, [x29, #56]
   1b494:	ldr	x0, [x29, #96]
   1b498:	str	x0, [x29, #96]
   1b49c:	ldr	x0, [x29, #96]
   1b4a0:	cmp	x0, #0x61
   1b4a4:	cset	w0, ls  // ls = plast
   1b4a8:	and	w0, w0, #0xff
   1b4ac:	and	x0, x0, #0xff
   1b4b0:	cmp	x0, #0x0
   1b4b4:	b.eq	1b4e8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1720>  // b.none
   1b4b8:	ldr	x0, [x29, #96]
   1b4bc:	ldr	x1, [x29, #32]
   1b4c0:	lsl	x0, x0, #4
   1b4c4:	add	x0, x1, x0
   1b4c8:	mov	w1, #0x3                   	// #3
   1b4cc:	str	w1, [x0, #8]
   1b4d0:	ldr	x0, [x29, #96]
   1b4d4:	ldr	x1, [x29, #32]
   1b4d8:	lsl	x0, x0, #4
   1b4dc:	add	x0, x1, x0
   1b4e0:	ldr	x1, [x29, #56]
   1b4e4:	str	x1, [x0]
   1b4e8:	add	x0, x29, #0x58
   1b4ec:	mov	x1, x0
   1b4f0:	ldr	x0, [x29, #56]
   1b4f4:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b4f8:	str	x0, [x29, #56]
   1b4fc:	ldr	x0, [x29, #88]
   1b500:	ldr	x1, [x29, #56]
   1b504:	add	x0, x1, x0
   1b508:	str	x0, [x29, #56]
   1b50c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b510:	add	x0, x29, #0x60
   1b514:	mov	x1, x0
   1b518:	ldr	x0, [x29, #56]
   1b51c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b520:	str	x0, [x29, #56]
   1b524:	add	x0, x29, #0x50
   1b528:	mov	x1, x0
   1b52c:	ldr	x0, [x29, #56]
   1b530:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1b534:	str	x0, [x29, #56]
   1b538:	ldr	x0, [x29, #32]
   1b53c:	ldr	x1, [x0, #1624]
   1b540:	ldr	x0, [x29, #80]
   1b544:	mul	x0, x1, x0
   1b548:	str	x0, [x29, #112]
   1b54c:	ldr	x0, [x29, #96]
   1b550:	str	x0, [x29, #96]
   1b554:	ldr	x0, [x29, #96]
   1b558:	cmp	x0, #0x61
   1b55c:	cset	w0, ls  // ls = plast
   1b560:	and	w0, w0, #0xff
   1b564:	and	x0, x0, #0xff
   1b568:	cmp	x0, #0x0
   1b56c:	b.eq	1b914 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b4c>  // b.none
   1b570:	ldr	x0, [x29, #96]
   1b574:	ldr	x1, [x29, #32]
   1b578:	lsl	x0, x0, #4
   1b57c:	add	x0, x1, x0
   1b580:	mov	w1, #0x1                   	// #1
   1b584:	str	w1, [x0, #8]
   1b588:	ldr	x0, [x29, #96]
   1b58c:	ldr	x1, [x29, #32]
   1b590:	lsl	x0, x0, #4
   1b594:	add	x0, x1, x0
   1b598:	ldr	x1, [x29, #112]
   1b59c:	str	x1, [x0]
   1b5a0:	b	1b914 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b4c>
   1b5a4:	add	x0, x29, #0x58
   1b5a8:	mov	x1, x0
   1b5ac:	ldr	x0, [x29, #56]
   1b5b0:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b5b4:	str	x0, [x29, #56]
   1b5b8:	ldr	x1, [x29, #88]
   1b5bc:	ldr	x0, [x29, #32]
   1b5c0:	str	x1, [x0, #1584]
   1b5c4:	add	x0, x29, #0x50
   1b5c8:	mov	x1, x0
   1b5cc:	ldr	x0, [x29, #56]
   1b5d0:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1b5d4:	str	x0, [x29, #56]
   1b5d8:	ldr	x1, [x29, #80]
   1b5dc:	ldr	x0, [x29, #32]
   1b5e0:	str	x1, [x0, #1576]
   1b5e4:	ldr	x0, [x29, #32]
   1b5e8:	mov	w1, #0x1                   	// #1
   1b5ec:	str	w1, [x0, #1600]
   1b5f0:	ldr	x0, [x29, #32]
   1b5f4:	ldr	x1, [x0, #1576]
   1b5f8:	ldr	x0, [x29, #32]
   1b5fc:	ldr	x0, [x0, #1624]
   1b600:	mul	x1, x1, x0
   1b604:	ldr	x0, [x29, #32]
   1b608:	str	x1, [x0, #1576]
   1b60c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b610:	add	x0, x29, #0x50
   1b614:	mov	x1, x0
   1b618:	ldr	x0, [x29, #56]
   1b61c:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1b620:	str	x0, [x29, #56]
   1b624:	ldr	x1, [x29, #80]
   1b628:	ldr	x0, [x29, #32]
   1b62c:	str	x1, [x0, #1576]
   1b630:	ldr	x0, [x29, #32]
   1b634:	ldr	x1, [x0, #1576]
   1b638:	ldr	x0, [x29, #32]
   1b63c:	ldr	x0, [x0, #1624]
   1b640:	mul	x1, x1, x0
   1b644:	ldr	x0, [x29, #32]
   1b648:	str	x1, [x0, #1576]
   1b64c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b650:	add	x0, x29, #0x60
   1b654:	mov	x1, x0
   1b658:	ldr	x0, [x29, #56]
   1b65c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b660:	str	x0, [x29, #56]
   1b664:	add	x0, x29, #0x58
   1b668:	mov	x1, x0
   1b66c:	ldr	x0, [x29, #56]
   1b670:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b674:	str	x0, [x29, #56]
   1b678:	ldr	x0, [x29, #32]
   1b67c:	ldr	x0, [x0, #1624]
   1b680:	ldr	x1, [x29, #88]
   1b684:	mul	x0, x0, x1
   1b688:	str	x0, [x29, #112]
   1b68c:	ldr	x0, [x29, #96]
   1b690:	str	x0, [x29, #96]
   1b694:	ldr	x0, [x29, #96]
   1b698:	cmp	x0, #0x61
   1b69c:	cset	w0, ls  // ls = plast
   1b6a0:	and	w0, w0, #0xff
   1b6a4:	and	x0, x0, #0xff
   1b6a8:	cmp	x0, #0x0
   1b6ac:	b.eq	1b91c <_Unwind_GetTextRelBase@@GCC_3.0+0x1b54>  // b.none
   1b6b0:	ldr	x0, [x29, #96]
   1b6b4:	ldr	x1, [x29, #32]
   1b6b8:	lsl	x0, x0, #4
   1b6bc:	add	x0, x1, x0
   1b6c0:	mov	w1, #0x4                   	// #4
   1b6c4:	str	w1, [x0, #8]
   1b6c8:	ldr	x0, [x29, #96]
   1b6cc:	ldr	x1, [x29, #32]
   1b6d0:	lsl	x0, x0, #4
   1b6d4:	add	x0, x1, x0
   1b6d8:	ldr	x1, [x29, #112]
   1b6dc:	str	x1, [x0]
   1b6e0:	b	1b91c <_Unwind_GetTextRelBase@@GCC_3.0+0x1b54>
   1b6e4:	add	x0, x29, #0x60
   1b6e8:	mov	x1, x0
   1b6ec:	ldr	x0, [x29, #56]
   1b6f0:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b6f4:	str	x0, [x29, #56]
   1b6f8:	add	x0, x29, #0x50
   1b6fc:	mov	x1, x0
   1b700:	ldr	x0, [x29, #56]
   1b704:	bl	193d0 <__enable_execute_stack@@GCC_3.4.2+0x1cc>
   1b708:	str	x0, [x29, #56]
   1b70c:	ldr	x0, [x29, #32]
   1b710:	ldr	x1, [x0, #1624]
   1b714:	ldr	x0, [x29, #80]
   1b718:	mul	x0, x1, x0
   1b71c:	str	x0, [x29, #112]
   1b720:	ldr	x0, [x29, #96]
   1b724:	str	x0, [x29, #96]
   1b728:	ldr	x0, [x29, #96]
   1b72c:	cmp	x0, #0x61
   1b730:	cset	w0, ls  // ls = plast
   1b734:	and	w0, w0, #0xff
   1b738:	and	x0, x0, #0xff
   1b73c:	cmp	x0, #0x0
   1b740:	b.eq	1b924 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b5c>  // b.none
   1b744:	ldr	x0, [x29, #96]
   1b748:	ldr	x1, [x29, #32]
   1b74c:	lsl	x0, x0, #4
   1b750:	add	x0, x1, x0
   1b754:	mov	w1, #0x4                   	// #4
   1b758:	str	w1, [x0, #8]
   1b75c:	ldr	x0, [x29, #96]
   1b760:	ldr	x1, [x29, #32]
   1b764:	lsl	x0, x0, #4
   1b768:	add	x0, x1, x0
   1b76c:	ldr	x1, [x29, #112]
   1b770:	str	x1, [x0]
   1b774:	b	1b924 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b5c>
   1b778:	add	x0, x29, #0x60
   1b77c:	mov	x1, x0
   1b780:	ldr	x0, [x29, #56]
   1b784:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b788:	str	x0, [x29, #56]
   1b78c:	ldr	x0, [x29, #96]
   1b790:	str	x0, [x29, #96]
   1b794:	ldr	x0, [x29, #96]
   1b798:	cmp	x0, #0x61
   1b79c:	cset	w0, ls  // ls = plast
   1b7a0:	and	w0, w0, #0xff
   1b7a4:	and	x0, x0, #0xff
   1b7a8:	cmp	x0, #0x0
   1b7ac:	b.eq	1b7e0 <_Unwind_GetTextRelBase@@GCC_3.0+0x1a18>  // b.none
   1b7b0:	ldr	x0, [x29, #96]
   1b7b4:	ldr	x1, [x29, #32]
   1b7b8:	lsl	x0, x0, #4
   1b7bc:	add	x0, x1, x0
   1b7c0:	mov	w1, #0x5                   	// #5
   1b7c4:	str	w1, [x0, #8]
   1b7c8:	ldr	x0, [x29, #96]
   1b7cc:	ldr	x1, [x29, #32]
   1b7d0:	lsl	x0, x0, #4
   1b7d4:	add	x0, x1, x0
   1b7d8:	ldr	x1, [x29, #56]
   1b7dc:	str	x1, [x0]
   1b7e0:	add	x0, x29, #0x58
   1b7e4:	mov	x1, x0
   1b7e8:	ldr	x0, [x29, #56]
   1b7ec:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b7f0:	str	x0, [x29, #56]
   1b7f4:	ldr	x0, [x29, #88]
   1b7f8:	ldr	x1, [x29, #56]
   1b7fc:	add	x0, x1, x0
   1b800:	str	x0, [x29, #56]
   1b804:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b808:	ldr	x0, [x29, #32]
   1b80c:	ldr	x0, [x0, #544]
   1b810:	eor	x1, x0, #0x1
   1b814:	ldr	x0, [x29, #32]
   1b818:	str	x1, [x0, #544]
   1b81c:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b820:	add	x0, x29, #0x58
   1b824:	mov	x1, x0
   1b828:	ldr	x0, [x29, #56]
   1b82c:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b830:	str	x0, [x29, #56]
   1b834:	ldr	x1, [x29, #88]
   1b838:	ldr	x0, [x29, #40]
   1b83c:	str	x1, [x0, #848]
   1b840:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b844:	add	x0, x29, #0x60
   1b848:	mov	x1, x0
   1b84c:	ldr	x0, [x29, #56]
   1b850:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b854:	str	x0, [x29, #56]
   1b858:	add	x0, x29, #0x58
   1b85c:	mov	x1, x0
   1b860:	ldr	x0, [x29, #56]
   1b864:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1b868:	str	x0, [x29, #56]
   1b86c:	ldr	x0, [x29, #32]
   1b870:	ldr	x0, [x0, #1624]
   1b874:	mov	x1, x0
   1b878:	ldr	x0, [x29, #88]
   1b87c:	mul	x0, x1, x0
   1b880:	str	x0, [x29, #112]
   1b884:	ldr	x0, [x29, #96]
   1b888:	str	x0, [x29, #96]
   1b88c:	ldr	x0, [x29, #96]
   1b890:	cmp	x0, #0x61
   1b894:	cset	w0, ls  // ls = plast
   1b898:	and	w0, w0, #0xff
   1b89c:	and	x0, x0, #0xff
   1b8a0:	cmp	x0, #0x0
   1b8a4:	b.eq	1b92c <_Unwind_GetTextRelBase@@GCC_3.0+0x1b64>  // b.none
   1b8a8:	ldr	x0, [x29, #96]
   1b8ac:	ldr	x1, [x29, #32]
   1b8b0:	lsl	x0, x0, #4
   1b8b4:	add	x0, x1, x0
   1b8b8:	mov	w1, #0x1                   	// #1
   1b8bc:	str	w1, [x0, #8]
   1b8c0:	ldr	x0, [x29, #96]
   1b8c4:	ldr	x1, [x29, #112]
   1b8c8:	neg	x1, x1
   1b8cc:	ldr	x2, [x29, #32]
   1b8d0:	lsl	x0, x0, #4
   1b8d4:	add	x0, x2, x0
   1b8d8:	str	x1, [x0]
   1b8dc:	b	1b92c <_Unwind_GetTextRelBase@@GCC_3.0+0x1b64>
   1b8e0:	bl	2cb0 <abort@plt>
   1b8e4:	nop
   1b8e8:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b8ec:	nop
   1b8f0:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b8f4:	nop
   1b8f8:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b8fc:	nop
   1b900:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b904:	nop
   1b908:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b90c:	nop
   1b910:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b914:	nop
   1b918:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b91c:	nop
   1b920:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b924:	nop
   1b928:	b	1b930 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b68>
   1b92c:	nop
   1b930:	ldr	x1, [x29, #56]
   1b934:	ldr	x0, [x29, #48]
   1b938:	cmp	x1, x0
   1b93c:	b.cs	1b964 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b9c>  // b.hs, b.nlast
   1b940:	ldr	x0, [x29, #32]
   1b944:	ldr	x19, [x0, #1608]
   1b948:	ldr	x0, [x29, #40]
   1b94c:	ldr	x20, [x0, #792]
   1b950:	ldr	x0, [x29, #40]
   1b954:	bl	19904 <__enable_execute_stack@@GCC_3.4.2+0x700>
   1b958:	add	x0, x20, x0
   1b95c:	cmp	x19, x0
   1b960:	b.cc	1ae8c <_Unwind_GetTextRelBase@@GCC_3.0+0x10c4>  // b.lo, b.ul, b.last
   1b964:	nop
   1b968:	mov	sp, x29
   1b96c:	ldp	x19, x20, [sp, #16]
   1b970:	ldp	x29, x30, [sp], #144
   1b974:	ret
   1b978:	stp	x29, x30, [sp, #-112]!
   1b97c:	mov	x29, sp
   1b980:	str	x19, [sp, #16]
   1b984:	str	x0, [sp, #40]
   1b988:	str	x1, [sp, #32]
   1b98c:	mov	x2, #0x680                 	// #1664
   1b990:	mov	w1, #0x0                   	// #0
   1b994:	ldr	x0, [sp, #32]
   1b998:	bl	2c00 <memset@plt>
   1b99c:	ldr	x0, [sp, #40]
   1b9a0:	str	xzr, [x0, #848]
   1b9a4:	ldr	x0, [sp, #40]
   1b9a8:	str	xzr, [x0, #800]
   1b9ac:	ldr	x0, [sp, #40]
   1b9b0:	ldr	x0, [x0, #792]
   1b9b4:	cmp	x0, #0x0
   1b9b8:	b.ne	1b9c4 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bfc>  // b.any
   1b9bc:	mov	w0, #0x5                   	// #5
   1b9c0:	b	1bb50 <_Unwind_GetTextRelBase@@GCC_3.0+0x1d88>
   1b9c4:	ldr	x0, [sp, #40]
   1b9c8:	ldr	x19, [x0, #792]
   1b9cc:	ldr	x0, [sp, #40]
   1b9d0:	bl	19904 <__enable_execute_stack@@GCC_3.4.2+0x700>
   1b9d4:	sub	x0, x0, #0x1
   1b9d8:	add	x2, x19, x0
   1b9dc:	ldr	x0, [sp, #40]
   1b9e0:	add	x0, x0, #0x328
   1b9e4:	mov	x1, x0
   1b9e8:	mov	x0, x2
   1b9ec:	bl	2d10 <_Unwind_Find_FDE@plt>
   1b9f0:	str	x0, [sp, #88]
   1b9f4:	ldr	x0, [sp, #88]
   1b9f8:	cmp	x0, #0x0
   1b9fc:	b.ne	1ba10 <_Unwind_GetTextRelBase@@GCC_3.0+0x1c48>  // b.any
   1ba00:	ldr	x1, [sp, #32]
   1ba04:	ldr	x0, [sp, #40]
   1ba08:	bl	19ed8 <_Unwind_GetTextRelBase@@GCC_3.0+0x110>
   1ba0c:	b	1bb50 <_Unwind_GetTextRelBase@@GCC_3.0+0x1d88>
   1ba10:	ldr	x0, [sp, #40]
   1ba14:	ldr	x1, [x0, #824]
   1ba18:	ldr	x0, [sp, #32]
   1ba1c:	str	x1, [x0, #1608]
   1ba20:	ldr	x0, [sp, #88]
   1ba24:	bl	19724 <__enable_execute_stack@@GCC_3.4.2+0x520>
   1ba28:	str	x0, [sp, #80]
   1ba2c:	ldr	x2, [sp, #32]
   1ba30:	ldr	x1, [sp, #40]
   1ba34:	ldr	x0, [sp, #80]
   1ba38:	bl	1a148 <_Unwind_GetTextRelBase@@GCC_3.0+0x380>
   1ba3c:	str	x0, [sp, #96]
   1ba40:	ldr	x0, [sp, #96]
   1ba44:	cmp	x0, #0x0
   1ba48:	b.ne	1ba54 <_Unwind_GetTextRelBase@@GCC_3.0+0x1c8c>  // b.any
   1ba4c:	mov	w0, #0x3                   	// #3
   1ba50:	b	1bb50 <_Unwind_GetTextRelBase@@GCC_3.0+0x1d88>
   1ba54:	ldr	x0, [sp, #80]
   1ba58:	bl	19750 <__enable_execute_stack@@GCC_3.4.2+0x54c>
   1ba5c:	str	x0, [sp, #72]
   1ba60:	ldr	x3, [sp, #32]
   1ba64:	ldr	x2, [sp, #40]
   1ba68:	ldr	x1, [sp, #72]
   1ba6c:	ldr	x0, [sp, #96]
   1ba70:	bl	1ae60 <_Unwind_GetTextRelBase@@GCC_3.0+0x1098>
   1ba74:	ldr	x0, [sp, #88]
   1ba78:	add	x0, x0, #0x8
   1ba7c:	str	x0, [sp, #104]
   1ba80:	ldr	x0, [sp, #32]
   1ba84:	ldrb	w0, [x0, #1648]
   1ba88:	bl	19220 <__enable_execute_stack@@GCC_3.4.2+0x1c>
   1ba8c:	lsl	w0, w0, #1
   1ba90:	mov	w0, w0
   1ba94:	ldr	x1, [sp, #104]
   1ba98:	add	x0, x1, x0
   1ba9c:	str	x0, [sp, #104]
   1baa0:	str	xzr, [sp, #96]
   1baa4:	ldr	x0, [sp, #32]
   1baa8:	ldrb	w0, [x0, #1650]
   1baac:	cmp	w0, #0x0
   1bab0:	b.eq	1bad8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1d10>  // b.none
   1bab4:	add	x0, sp, #0x40
   1bab8:	mov	x1, x0
   1babc:	ldr	x0, [sp, #104]
   1bac0:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1bac4:	str	x0, [sp, #104]
   1bac8:	ldr	x0, [sp, #64]
   1bacc:	ldr	x1, [sp, #104]
   1bad0:	add	x0, x1, x0
   1bad4:	str	x0, [sp, #96]
   1bad8:	ldr	x0, [sp, #32]
   1badc:	ldrb	w0, [x0, #1649]
   1bae0:	cmp	w0, #0xff
   1bae4:	b.eq	1bb18 <_Unwind_GetTextRelBase@@GCC_3.0+0x1d50>  // b.none
   1bae8:	ldr	x0, [sp, #32]
   1baec:	ldrb	w1, [x0, #1649]
   1baf0:	add	x0, sp, #0x38
   1baf4:	mov	x3, x0
   1baf8:	ldr	x2, [sp, #104]
   1bafc:	ldr	x0, [sp, #40]
   1bb00:	bl	196e4 <__enable_execute_stack@@GCC_3.4.2+0x4e0>
   1bb04:	str	x0, [sp, #104]
   1bb08:	ldr	x0, [sp, #56]
   1bb0c:	mov	x1, x0
   1bb10:	ldr	x0, [sp, #40]
   1bb14:	str	x1, [x0, #800]
   1bb18:	ldr	x0, [sp, #96]
   1bb1c:	cmp	x0, #0x0
   1bb20:	b.ne	1bb2c <_Unwind_GetTextRelBase@@GCC_3.0+0x1d64>  // b.any
   1bb24:	ldr	x0, [sp, #104]
   1bb28:	str	x0, [sp, #96]
   1bb2c:	ldr	x0, [sp, #88]
   1bb30:	bl	19750 <__enable_execute_stack@@GCC_3.4.2+0x54c>
   1bb34:	str	x0, [sp, #72]
   1bb38:	ldr	x3, [sp, #32]
   1bb3c:	ldr	x2, [sp, #40]
   1bb40:	ldr	x1, [sp, #72]
   1bb44:	ldr	x0, [sp, #96]
   1bb48:	bl	1ae60 <_Unwind_GetTextRelBase@@GCC_3.0+0x1098>
   1bb4c:	mov	w0, #0x0                   	// #0
   1bb50:	ldr	x19, [sp, #16]
   1bb54:	ldp	x29, x30, [sp], #112
   1bb58:	ret

000000000001bb5c <__frame_state_for@@GLIBC_2.0>:
   1bb5c:	sub	sp, sp, #0xa70
   1bb60:	stp	x29, x30, [sp]
   1bb64:	mov	x29, sp
   1bb68:	str	x0, [sp, #24]
   1bb6c:	str	x1, [sp, #16]
   1bb70:	add	x0, sp, #0x6a8
   1bb74:	mov	x2, #0x3c0                 	// #960
   1bb78:	mov	w1, #0x0                   	// #0
   1bb7c:	bl	2c00 <memset@plt>
   1bb80:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   1bb84:	str	x0, [sp, #2536]
   1bb88:	ldr	x0, [sp, #24]
   1bb8c:	add	x0, x0, #0x1
   1bb90:	str	x0, [sp, #2496]
   1bb94:	add	x1, sp, #0x28
   1bb98:	add	x0, sp, #0x6a8
   1bb9c:	bl	1b978 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bb0>
   1bba0:	cmp	w0, #0x0
   1bba4:	b.eq	1bbb0 <__frame_state_for@@GLIBC_2.0+0x54>  // b.none
   1bba8:	mov	x0, #0x0                   	// #0
   1bbac:	b	1bcd8 <__frame_state_for@@GLIBC_2.0+0x17c>
   1bbb0:	ldr	w0, [sp, #1640]
   1bbb4:	cmp	w0, #0x2
   1bbb8:	b.ne	1bbc4 <__frame_state_for@@GLIBC_2.0+0x68>  // b.any
   1bbbc:	mov	x0, #0x0                   	// #0
   1bbc0:	b	1bcd8 <__frame_state_for@@GLIBC_2.0+0x17c>
   1bbc4:	str	wzr, [sp, #2668]
   1bbc8:	b	1bc80 <__frame_state_for@@GLIBC_2.0+0x124>
   1bbcc:	ldrsw	x0, [sp, #2668]
   1bbd0:	lsl	x0, x0, #4
   1bbd4:	add	x1, sp, #0x30
   1bbd8:	ldr	w0, [x1, x0]
   1bbdc:	and	w2, w0, #0xff
   1bbe0:	ldr	x1, [sp, #16]
   1bbe4:	ldrsw	x0, [sp, #2668]
   1bbe8:	add	x0, x1, x0
   1bbec:	mov	w1, w2
   1bbf0:	strb	w1, [x0, #820]
   1bbf4:	ldr	x1, [sp, #16]
   1bbf8:	ldrsw	x0, [sp, #2668]
   1bbfc:	add	x0, x1, x0
   1bc00:	ldrb	w0, [x0, #820]
   1bc04:	cmp	w0, #0x1
   1bc08:	b.eq	1bc3c <__frame_state_for@@GLIBC_2.0+0xe0>  // b.none
   1bc0c:	cmp	w0, #0x2
   1bc10:	b.ne	1bc60 <__frame_state_for@@GLIBC_2.0+0x104>  // b.any
   1bc14:	ldrsw	x0, [sp, #2668]
   1bc18:	lsl	x0, x0, #4
   1bc1c:	add	x1, sp, #0x28
   1bc20:	ldr	x0, [x1, x0]
   1bc24:	mov	x2, x0
   1bc28:	ldr	x0, [sp, #16]
   1bc2c:	ldrsw	x1, [sp, #2668]
   1bc30:	add	x1, x1, #0x4
   1bc34:	str	x2, [x0, x1, lsl #3]
   1bc38:	b	1bc74 <__frame_state_for@@GLIBC_2.0+0x118>
   1bc3c:	ldrsw	x0, [sp, #2668]
   1bc40:	lsl	x0, x0, #4
   1bc44:	add	x1, sp, #0x28
   1bc48:	ldr	x2, [x1, x0]
   1bc4c:	ldr	x0, [sp, #16]
   1bc50:	ldrsw	x1, [sp, #2668]
   1bc54:	add	x1, x1, #0x4
   1bc58:	str	x2, [x0, x1, lsl #3]
   1bc5c:	b	1bc74 <__frame_state_for@@GLIBC_2.0+0x118>
   1bc60:	ldr	x0, [sp, #16]
   1bc64:	ldrsw	x1, [sp, #2668]
   1bc68:	add	x1, x1, #0x4
   1bc6c:	str	xzr, [x0, x1, lsl #3]
   1bc70:	nop
   1bc74:	ldr	w0, [sp, #2668]
   1bc78:	add	w0, w0, #0x1
   1bc7c:	str	w0, [sp, #2668]
   1bc80:	ldr	w0, [sp, #2668]
   1bc84:	cmp	w0, #0x61
   1bc88:	b.le	1bbcc <__frame_state_for@@GLIBC_2.0+0x70>
   1bc8c:	ldr	x1, [sp, #1616]
   1bc90:	ldr	x0, [sp, #16]
   1bc94:	str	x1, [x0, #16]
   1bc98:	ldr	x0, [sp, #1624]
   1bc9c:	and	w1, w0, #0xffff
   1bca0:	ldr	x0, [sp, #16]
   1bca4:	strh	w1, [x0, #816]
   1bca8:	ldr	x0, [sp, #1680]
   1bcac:	and	w1, w0, #0xffff
   1bcb0:	ldr	x0, [sp, #16]
   1bcb4:	strh	w1, [x0, #818]
   1bcb8:	ldr	x0, [sp, #2552]
   1bcbc:	mov	x1, x0
   1bcc0:	ldr	x0, [sp, #16]
   1bcc4:	str	x1, [x0, #24]
   1bcc8:	ldr	x1, [sp, #1696]
   1bccc:	ldr	x0, [sp, #16]
   1bcd0:	str	x1, [x0, #8]
   1bcd4:	ldr	x0, [sp, #16]
   1bcd8:	ldp	x29, x30, [sp]
   1bcdc:	add	sp, sp, #0xa70
   1bce0:	ret
   1bce4:	stp	x29, x30, [sp, #-64]!
   1bce8:	mov	x29, sp
   1bcec:	str	x0, [sp, #40]
   1bcf0:	str	x1, [sp, #32]
   1bcf4:	str	x2, [sp, #24]
   1bcf8:	mov	w2, #0x1f                  	// #31
   1bcfc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1bd00:	add	x1, x0, #0x1d8
   1bd04:	mov	w0, w2
   1bd08:	ldrb	w0, [x1, x0]
   1bd0c:	str	w0, [sp, #60]
   1bd10:	ldr	w0, [sp, #60]
   1bd14:	cmp	w0, #0x8
   1bd18:	b.ne	1bd2c <__frame_state_for@@GLIBC_2.0+0x1d0>  // b.any
   1bd1c:	ldr	x1, [sp, #32]
   1bd20:	ldr	x0, [sp, #24]
   1bd24:	str	x1, [x0]
   1bd28:	b	1bd48 <__frame_state_for@@GLIBC_2.0+0x1ec>
   1bd2c:	ldr	w0, [sp, #60]
   1bd30:	cmp	w0, #0x8
   1bd34:	b.eq	1bd3c <__frame_state_for@@GLIBC_2.0+0x1e0>  // b.none
   1bd38:	bl	2cb0 <abort@plt>
   1bd3c:	ldr	x1, [sp, #32]
   1bd40:	ldr	x0, [sp, #24]
   1bd44:	str	x1, [x0]
   1bd48:	mov	w0, #0x1f                  	// #31
   1bd4c:	ldr	x2, [sp, #24]
   1bd50:	mov	w1, w0
   1bd54:	ldr	x0, [sp, #40]
   1bd58:	bl	19be4 <_Unwind_SetGR@@GCC_3.0+0x12c>
   1bd5c:	nop
   1bd60:	ldp	x29, x30, [sp], #64
   1bd64:	ret
   1bd68:	sub	sp, sp, #0x450
   1bd6c:	stp	x29, x30, [sp]
   1bd70:	mov	x29, sp
   1bd74:	str	x19, [sp, #16]
   1bd78:	str	x0, [sp, #40]
   1bd7c:	str	x1, [sp, #32]
   1bd80:	ldr	x1, [sp, #40]
   1bd84:	add	x0, sp, #0x58
   1bd88:	mov	x3, x1
   1bd8c:	mov	x1, #0x3c0                 	// #960
   1bd90:	mov	x2, x1
   1bd94:	mov	x1, x3
   1bd98:	bl	2b00 <memcpy@plt>
   1bd9c:	mov	w0, #0x1f                  	// #31
   1bda0:	mov	w1, w0
   1bda4:	add	x0, sp, #0x58
   1bda8:	bl	19b84 <_Unwind_SetGR@@GCC_3.0+0xcc>
   1bdac:	cmp	x0, #0x0
   1bdb0:	b.ne	1bdc8 <__frame_state_for@@GLIBC_2.0+0x26c>  // b.any
   1bdb4:	ldr	x0, [sp, #40]
   1bdb8:	ldr	x1, [x0, #784]
   1bdbc:	add	x2, sp, #0x50
   1bdc0:	add	x0, sp, #0x58
   1bdc4:	bl	1bce4 <__frame_state_for@@GLIBC_2.0+0x188>
   1bdc8:	mov	w0, #0x1f                  	// #31
   1bdcc:	mov	x2, #0x0                   	// #0
   1bdd0:	mov	w1, w0
   1bdd4:	ldr	x0, [sp, #40]
   1bdd8:	bl	19be4 <_Unwind_SetGR@@GCC_3.0+0x12c>
   1bddc:	ldr	x0, [sp, #32]
   1bde0:	ldr	w0, [x0, #1600]
   1bde4:	cmp	w0, #0x1
   1bde8:	b.eq	1bdf8 <__frame_state_for@@GLIBC_2.0+0x29c>  // b.none
   1bdec:	cmp	w0, #0x2
   1bdf0:	b.eq	1be2c <__frame_state_for@@GLIBC_2.0+0x2d0>  // b.none
   1bdf4:	b	1be78 <__frame_state_for@@GLIBC_2.0+0x31c>
   1bdf8:	ldr	x0, [sp, #32]
   1bdfc:	ldr	x0, [x0, #1584]
   1be00:	mov	w1, w0
   1be04:	add	x0, sp, #0x58
   1be08:	bl	19a7c <_Unwind_GetGR@@GCC_3.0+0xd8>
   1be0c:	str	x0, [sp, #1096]
   1be10:	ldr	x0, [sp, #32]
   1be14:	ldr	x0, [x0, #1576]
   1be18:	mov	x1, x0
   1be1c:	ldr	x0, [sp, #1096]
   1be20:	add	x0, x0, x1
   1be24:	str	x0, [sp, #1096]
   1be28:	b	1be7c <__frame_state_for@@GLIBC_2.0+0x320>
   1be2c:	ldr	x0, [sp, #32]
   1be30:	ldr	x0, [x0, #1592]
   1be34:	str	x0, [sp, #1080]
   1be38:	add	x0, sp, #0x48
   1be3c:	mov	x1, x0
   1be40:	ldr	x0, [sp, #1080]
   1be44:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1be48:	str	x0, [sp, #1080]
   1be4c:	ldr	x0, [sp, #72]
   1be50:	ldr	x1, [sp, #1080]
   1be54:	add	x0, x1, x0
   1be58:	add	x1, sp, #0x58
   1be5c:	mov	x3, #0x0                   	// #0
   1be60:	mov	x2, x1
   1be64:	mov	x1, x0
   1be68:	ldr	x0, [sp, #1080]
   1be6c:	bl	1a448 <_Unwind_GetTextRelBase@@GCC_3.0+0x680>
   1be70:	str	x0, [sp, #1096]
   1be74:	b	1be7c <__frame_state_for@@GLIBC_2.0+0x320>
   1be78:	bl	2cb0 <abort@plt>
   1be7c:	ldr	x0, [sp, #40]
   1be80:	ldr	x1, [sp, #1096]
   1be84:	str	x1, [x0, #784]
   1be88:	str	xzr, [sp, #1088]
   1be8c:	b	1c110 <__frame_state_for@@GLIBC_2.0+0x5b4>
   1be90:	ldr	x1, [sp, #32]
   1be94:	ldr	x0, [sp, #1088]
   1be98:	lsl	x0, x0, #4
   1be9c:	add	x0, x1, x0
   1bea0:	ldr	w0, [x0, #8]
   1bea4:	cmp	w0, #0x6
   1bea8:	b.eq	1c100 <__frame_state_for@@GLIBC_2.0+0x5a4>  // b.none
   1beac:	cmp	w0, #0x6
   1beb0:	b.hi	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>  // b.pmore
   1beb4:	cmp	w0, #0x5
   1beb8:	b.eq	1c090 <__frame_state_for@@GLIBC_2.0+0x534>  // b.none
   1bebc:	cmp	w0, #0x5
   1bec0:	b.hi	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>  // b.pmore
   1bec4:	cmp	w0, #0x4
   1bec8:	b.eq	1c054 <__frame_state_for@@GLIBC_2.0+0x4f8>  // b.none
   1becc:	cmp	w0, #0x4
   1bed0:	b.hi	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>  // b.pmore
   1bed4:	cmp	w0, #0x3
   1bed8:	b.eq	1bfe0 <__frame_state_for@@GLIBC_2.0+0x484>  // b.none
   1bedc:	cmp	w0, #0x3
   1bee0:	b.hi	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>  // b.pmore
   1bee4:	cmp	w0, #0x2
   1bee8:	b.eq	1bf40 <__frame_state_for@@GLIBC_2.0+0x3e4>  // b.none
   1beec:	cmp	w0, #0x2
   1bef0:	b.hi	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>  // b.pmore
   1bef4:	cmp	w0, #0x0
   1bef8:	b.eq	1c100 <__frame_state_for@@GLIBC_2.0+0x5a4>  // b.none
   1befc:	cmp	w0, #0x1
   1bf00:	b.ne	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>  // b.any
   1bf04:	ldr	x0, [sp, #1088]
   1bf08:	mov	w3, w0
   1bf0c:	ldr	x1, [sp, #32]
   1bf10:	ldr	x0, [sp, #1088]
   1bf14:	lsl	x0, x0, #4
   1bf18:	add	x0, x1, x0
   1bf1c:	ldr	x0, [x0]
   1bf20:	mov	x1, x0
   1bf24:	ldr	x0, [sp, #1096]
   1bf28:	add	x0, x0, x1
   1bf2c:	mov	x2, x0
   1bf30:	mov	w1, w3
   1bf34:	ldr	x0, [sp, #40]
   1bf38:	bl	19be4 <_Unwind_SetGR@@GCC_3.0+0x12c>
   1bf3c:	b	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>
   1bf40:	ldr	x1, [sp, #32]
   1bf44:	ldr	x0, [sp, #1088]
   1bf48:	lsl	x0, x0, #4
   1bf4c:	add	x0, x1, x0
   1bf50:	ldr	x0, [x0]
   1bf54:	mov	w1, w0
   1bf58:	add	x0, sp, #0x58
   1bf5c:	bl	19cac <_Unwind_SetGR@@GCC_3.0+0x1f4>
   1bf60:	cmp	w0, #0x0
   1bf64:	b.eq	1bfa4 <__frame_state_for@@GLIBC_2.0+0x448>  // b.none
   1bf68:	ldr	x0, [sp, #1088]
   1bf6c:	mov	w19, w0
   1bf70:	ldr	x1, [sp, #32]
   1bf74:	ldr	x0, [sp, #1088]
   1bf78:	lsl	x0, x0, #4
   1bf7c:	add	x0, x1, x0
   1bf80:	ldr	x0, [x0]
   1bf84:	mov	w1, w0
   1bf88:	add	x0, sp, #0x58
   1bf8c:	bl	199a4 <_Unwind_GetGR@@GCC_3.0>
   1bf90:	mov	x2, x0
   1bf94:	mov	w1, w19
   1bf98:	ldr	x0, [sp, #40]
   1bf9c:	bl	19c34 <_Unwind_SetGR@@GCC_3.0+0x17c>
   1bfa0:	b	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>
   1bfa4:	ldr	x0, [sp, #1088]
   1bfa8:	mov	w19, w0
   1bfac:	ldr	x1, [sp, #32]
   1bfb0:	ldr	x0, [sp, #1088]
   1bfb4:	lsl	x0, x0, #4
   1bfb8:	add	x0, x1, x0
   1bfbc:	ldr	x0, [x0]
   1bfc0:	mov	w1, w0
   1bfc4:	add	x0, sp, #0x58
   1bfc8:	bl	19b84 <_Unwind_SetGR@@GCC_3.0+0xcc>
   1bfcc:	mov	x2, x0
   1bfd0:	mov	w1, w19
   1bfd4:	ldr	x0, [sp, #40]
   1bfd8:	bl	19be4 <_Unwind_SetGR@@GCC_3.0+0x12c>
   1bfdc:	b	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>
   1bfe0:	ldr	x1, [sp, #32]
   1bfe4:	ldr	x0, [sp, #1088]
   1bfe8:	lsl	x0, x0, #4
   1bfec:	add	x0, x1, x0
   1bff0:	ldr	x0, [x0]
   1bff4:	str	x0, [sp, #1056]
   1bff8:	add	x0, sp, #0x40
   1bffc:	mov	x1, x0
   1c000:	ldr	x0, [sp, #1056]
   1c004:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1c008:	str	x0, [sp, #1056]
   1c00c:	ldr	x0, [sp, #64]
   1c010:	ldr	x1, [sp, #1056]
   1c014:	add	x0, x1, x0
   1c018:	ldr	x2, [sp, #1096]
   1c01c:	add	x1, sp, #0x58
   1c020:	mov	x3, x2
   1c024:	mov	x2, x1
   1c028:	mov	x1, x0
   1c02c:	ldr	x0, [sp, #1056]
   1c030:	bl	1a448 <_Unwind_GetTextRelBase@@GCC_3.0+0x680>
   1c034:	str	x0, [sp, #1048]
   1c038:	ldr	x0, [sp, #1088]
   1c03c:	mov	w1, w0
   1c040:	ldr	x0, [sp, #1048]
   1c044:	mov	x2, x0
   1c048:	ldr	x0, [sp, #40]
   1c04c:	bl	19be4 <_Unwind_SetGR@@GCC_3.0+0x12c>
   1c050:	b	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>
   1c054:	ldr	x0, [sp, #1088]
   1c058:	mov	w3, w0
   1c05c:	ldr	x1, [sp, #32]
   1c060:	ldr	x0, [sp, #1088]
   1c064:	lsl	x0, x0, #4
   1c068:	add	x0, x1, x0
   1c06c:	ldr	x0, [x0]
   1c070:	mov	x1, x0
   1c074:	ldr	x0, [sp, #1096]
   1c078:	add	x0, x0, x1
   1c07c:	mov	x2, x0
   1c080:	mov	w1, w3
   1c084:	ldr	x0, [sp, #40]
   1c088:	bl	19c34 <_Unwind_SetGR@@GCC_3.0+0x17c>
   1c08c:	b	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>
   1c090:	ldr	x1, [sp, #32]
   1c094:	ldr	x0, [sp, #1088]
   1c098:	lsl	x0, x0, #4
   1c09c:	add	x0, x1, x0
   1c0a0:	ldr	x0, [x0]
   1c0a4:	str	x0, [sp, #1072]
   1c0a8:	add	x0, sp, #0x38
   1c0ac:	mov	x1, x0
   1c0b0:	ldr	x0, [sp, #1072]
   1c0b4:	bl	1935c <__enable_execute_stack@@GCC_3.4.2+0x158>
   1c0b8:	str	x0, [sp, #1072]
   1c0bc:	ldr	x0, [sp, #56]
   1c0c0:	ldr	x1, [sp, #1072]
   1c0c4:	add	x0, x1, x0
   1c0c8:	ldr	x2, [sp, #1096]
   1c0cc:	add	x1, sp, #0x58
   1c0d0:	mov	x3, x2
   1c0d4:	mov	x2, x1
   1c0d8:	mov	x1, x0
   1c0dc:	ldr	x0, [sp, #1072]
   1c0e0:	bl	1a448 <_Unwind_GetTextRelBase@@GCC_3.0+0x680>
   1c0e4:	str	x0, [sp, #1064]
   1c0e8:	ldr	x0, [sp, #1088]
   1c0ec:	ldr	x2, [sp, #1064]
   1c0f0:	mov	w1, w0
   1c0f4:	ldr	x0, [sp, #40]
   1c0f8:	bl	19c34 <_Unwind_SetGR@@GCC_3.0+0x17c>
   1c0fc:	b	1c104 <__frame_state_for@@GLIBC_2.0+0x5a8>
   1c100:	nop
   1c104:	ldr	x0, [sp, #1088]
   1c108:	add	x0, x0, #0x1
   1c10c:	str	x0, [sp, #1088]
   1c110:	ldr	x0, [sp, #1088]
   1c114:	cmp	x0, #0x61
   1c118:	b.le	1be90 <__frame_state_for@@GLIBC_2.0+0x334>
   1c11c:	ldr	x0, [sp, #32]
   1c120:	ldrb	w0, [x0, #1651]
   1c124:	mov	w1, w0
   1c128:	ldr	x0, [sp, #40]
   1c12c:	bl	19928 <__enable_execute_stack@@GCC_3.4.2+0x724>
   1c130:	ldr	x1, [sp, #32]
   1c134:	ldr	x0, [sp, #40]
   1c138:	bl	19e94 <_Unwind_GetTextRelBase@@GCC_3.0+0xcc>
   1c13c:	nop
   1c140:	ldr	x19, [sp, #16]
   1c144:	ldp	x29, x30, [sp]
   1c148:	add	sp, sp, #0x450
   1c14c:	ret
   1c150:	stp	x29, x30, [sp, #-32]!
   1c154:	mov	x29, sp
   1c158:	str	x0, [sp, #24]
   1c15c:	str	x1, [sp, #16]
   1c160:	ldr	x1, [sp, #16]
   1c164:	ldr	x0, [sp, #24]
   1c168:	bl	1bd68 <__frame_state_for@@GLIBC_2.0+0x20c>
   1c16c:	ldr	x0, [sp, #16]
   1c170:	ldr	x0, [x0, #1640]
   1c174:	ldr	x1, [sp, #16]
   1c178:	lsl	x0, x0, #4
   1c17c:	add	x0, x1, x0
   1c180:	ldr	w0, [x0, #8]
   1c184:	cmp	w0, #0x6
   1c188:	b.ne	1c198 <__frame_state_for@@GLIBC_2.0+0x63c>  // b.any
   1c18c:	ldr	x0, [sp, #24]
   1c190:	str	xzr, [x0, #792]
   1c194:	b	1c1dc <__frame_state_for@@GLIBC_2.0+0x680>
   1c198:	ldr	x0, [sp, #16]
   1c19c:	ldr	x0, [x0, #1640]
   1c1a0:	mov	w1, w0
   1c1a4:	ldr	x0, [sp, #24]
   1c1a8:	bl	19a7c <_Unwind_GetGR@@GCC_3.0+0xd8>
   1c1ac:	mov	x1, x0
   1c1b0:	ldr	x0, [sp, #24]
   1c1b4:	str	x1, [x0, #792]
   1c1b8:	ldr	x0, [sp, #24]
   1c1bc:	ldr	x0, [x0, #792]
   1c1c0:	mov	x2, x0
   1c1c4:	ldr	x1, [sp, #16]
   1c1c8:	ldr	x0, [sp, #24]
   1c1cc:	bl	19de0 <_Unwind_GetTextRelBase@@GCC_3.0+0x18>
   1c1d0:	mov	x1, x0
   1c1d4:	ldr	x0, [sp, #24]
   1c1d8:	str	x1, [x0, #792]
   1c1dc:	nop
   1c1e0:	ldp	x29, x30, [sp], #32
   1c1e4:	ret
   1c1e8:	stp	x29, x30, [sp, #-32]!
   1c1ec:	mov	x29, sp
   1c1f0:	str	x0, [sp, #24]
   1c1f4:	str	x1, [sp, #16]
   1c1f8:	ldr	x1, [sp, #16]
   1c1fc:	ldr	x0, [sp, #24]
   1c200:	bl	1c150 <__frame_state_for@@GLIBC_2.0+0x5f4>
   1c204:	nop
   1c208:	ldp	x29, x30, [sp], #32
   1c20c:	ret
   1c210:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c214:	add	x0, x0, #0x1d8
   1c218:	mov	w1, #0x8                   	// #8
   1c21c:	strb	w1, [x0]
   1c220:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c224:	add	x0, x0, #0x1d9
   1c228:	mov	w1, #0x8                   	// #8
   1c22c:	strb	w1, [x0]
   1c230:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c234:	add	x0, x0, #0x1da
   1c238:	mov	w1, #0x8                   	// #8
   1c23c:	strb	w1, [x0]
   1c240:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c244:	add	x0, x0, #0x1db
   1c248:	mov	w1, #0x8                   	// #8
   1c24c:	strb	w1, [x0]
   1c250:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c254:	add	x0, x0, #0x1dc
   1c258:	mov	w1, #0x8                   	// #8
   1c25c:	strb	w1, [x0]
   1c260:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c264:	add	x0, x0, #0x1dd
   1c268:	mov	w1, #0x8                   	// #8
   1c26c:	strb	w1, [x0]
   1c270:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c274:	add	x0, x0, #0x1de
   1c278:	mov	w1, #0x8                   	// #8
   1c27c:	strb	w1, [x0]
   1c280:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c284:	add	x0, x0, #0x1df
   1c288:	mov	w1, #0x8                   	// #8
   1c28c:	strb	w1, [x0]
   1c290:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c294:	add	x0, x0, #0x1e0
   1c298:	mov	w1, #0x8                   	// #8
   1c29c:	strb	w1, [x0]
   1c2a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c2a4:	add	x0, x0, #0x1e1
   1c2a8:	mov	w1, #0x8                   	// #8
   1c2ac:	strb	w1, [x0]
   1c2b0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c2b4:	add	x0, x0, #0x1e2
   1c2b8:	mov	w1, #0x8                   	// #8
   1c2bc:	strb	w1, [x0]
   1c2c0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c2c4:	add	x0, x0, #0x1e3
   1c2c8:	mov	w1, #0x8                   	// #8
   1c2cc:	strb	w1, [x0]
   1c2d0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c2d4:	add	x0, x0, #0x1e4
   1c2d8:	mov	w1, #0x8                   	// #8
   1c2dc:	strb	w1, [x0]
   1c2e0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c2e4:	add	x0, x0, #0x1e5
   1c2e8:	mov	w1, #0x8                   	// #8
   1c2ec:	strb	w1, [x0]
   1c2f0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c2f4:	add	x0, x0, #0x1e6
   1c2f8:	mov	w1, #0x8                   	// #8
   1c2fc:	strb	w1, [x0]
   1c300:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c304:	add	x0, x0, #0x1e7
   1c308:	mov	w1, #0x8                   	// #8
   1c30c:	strb	w1, [x0]
   1c310:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c314:	add	x0, x0, #0x1e8
   1c318:	mov	w1, #0x8                   	// #8
   1c31c:	strb	w1, [x0]
   1c320:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c324:	add	x0, x0, #0x1e9
   1c328:	mov	w1, #0x8                   	// #8
   1c32c:	strb	w1, [x0]
   1c330:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c334:	add	x0, x0, #0x1ea
   1c338:	mov	w1, #0x8                   	// #8
   1c33c:	strb	w1, [x0]
   1c340:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c344:	add	x0, x0, #0x1eb
   1c348:	mov	w1, #0x8                   	// #8
   1c34c:	strb	w1, [x0]
   1c350:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c354:	add	x0, x0, #0x1ec
   1c358:	mov	w1, #0x8                   	// #8
   1c35c:	strb	w1, [x0]
   1c360:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c364:	add	x0, x0, #0x1ed
   1c368:	mov	w1, #0x8                   	// #8
   1c36c:	strb	w1, [x0]
   1c370:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c374:	add	x0, x0, #0x1ee
   1c378:	mov	w1, #0x8                   	// #8
   1c37c:	strb	w1, [x0]
   1c380:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c384:	add	x0, x0, #0x1ef
   1c388:	mov	w1, #0x8                   	// #8
   1c38c:	strb	w1, [x0]
   1c390:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c394:	add	x0, x0, #0x1f0
   1c398:	mov	w1, #0x8                   	// #8
   1c39c:	strb	w1, [x0]
   1c3a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c3a4:	add	x0, x0, #0x1f1
   1c3a8:	mov	w1, #0x8                   	// #8
   1c3ac:	strb	w1, [x0]
   1c3b0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c3b4:	add	x0, x0, #0x1f2
   1c3b8:	mov	w1, #0x8                   	// #8
   1c3bc:	strb	w1, [x0]
   1c3c0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c3c4:	add	x0, x0, #0x1f3
   1c3c8:	mov	w1, #0x8                   	// #8
   1c3cc:	strb	w1, [x0]
   1c3d0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c3d4:	add	x0, x0, #0x1f4
   1c3d8:	mov	w1, #0x8                   	// #8
   1c3dc:	strb	w1, [x0]
   1c3e0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c3e4:	add	x0, x0, #0x1f5
   1c3e8:	mov	w1, #0x8                   	// #8
   1c3ec:	strb	w1, [x0]
   1c3f0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c3f4:	add	x0, x0, #0x1f6
   1c3f8:	mov	w1, #0x8                   	// #8
   1c3fc:	strb	w1, [x0]
   1c400:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c404:	add	x0, x0, #0x1f7
   1c408:	mov	w1, #0x8                   	// #8
   1c40c:	strb	w1, [x0]
   1c410:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c414:	add	x0, x0, #0x218
   1c418:	mov	w1, #0x8                   	// #8
   1c41c:	strb	w1, [x0]
   1c420:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c424:	add	x0, x0, #0x219
   1c428:	mov	w1, #0x8                   	// #8
   1c42c:	strb	w1, [x0]
   1c430:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c434:	add	x0, x0, #0x21a
   1c438:	mov	w1, #0x8                   	// #8
   1c43c:	strb	w1, [x0]
   1c440:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c444:	add	x0, x0, #0x21b
   1c448:	mov	w1, #0x8                   	// #8
   1c44c:	strb	w1, [x0]
   1c450:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c454:	add	x0, x0, #0x21c
   1c458:	mov	w1, #0x8                   	// #8
   1c45c:	strb	w1, [x0]
   1c460:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c464:	add	x0, x0, #0x21d
   1c468:	mov	w1, #0x8                   	// #8
   1c46c:	strb	w1, [x0]
   1c470:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c474:	add	x0, x0, #0x21e
   1c478:	mov	w1, #0x8                   	// #8
   1c47c:	strb	w1, [x0]
   1c480:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c484:	add	x0, x0, #0x21f
   1c488:	mov	w1, #0x8                   	// #8
   1c48c:	strb	w1, [x0]
   1c490:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c494:	add	x0, x0, #0x220
   1c498:	mov	w1, #0x8                   	// #8
   1c49c:	strb	w1, [x0]
   1c4a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c4a4:	add	x0, x0, #0x221
   1c4a8:	mov	w1, #0x8                   	// #8
   1c4ac:	strb	w1, [x0]
   1c4b0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c4b4:	add	x0, x0, #0x222
   1c4b8:	mov	w1, #0x8                   	// #8
   1c4bc:	strb	w1, [x0]
   1c4c0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c4c4:	add	x0, x0, #0x223
   1c4c8:	mov	w1, #0x8                   	// #8
   1c4cc:	strb	w1, [x0]
   1c4d0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c4d4:	add	x0, x0, #0x224
   1c4d8:	mov	w1, #0x8                   	// #8
   1c4dc:	strb	w1, [x0]
   1c4e0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c4e4:	add	x0, x0, #0x225
   1c4e8:	mov	w1, #0x8                   	// #8
   1c4ec:	strb	w1, [x0]
   1c4f0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c4f4:	add	x0, x0, #0x226
   1c4f8:	mov	w1, #0x8                   	// #8
   1c4fc:	strb	w1, [x0]
   1c500:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c504:	add	x0, x0, #0x227
   1c508:	mov	w1, #0x8                   	// #8
   1c50c:	strb	w1, [x0]
   1c510:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c514:	add	x0, x0, #0x228
   1c518:	mov	w1, #0x8                   	// #8
   1c51c:	strb	w1, [x0]
   1c520:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c524:	add	x0, x0, #0x229
   1c528:	mov	w1, #0x8                   	// #8
   1c52c:	strb	w1, [x0]
   1c530:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c534:	add	x0, x0, #0x22a
   1c538:	mov	w1, #0x8                   	// #8
   1c53c:	strb	w1, [x0]
   1c540:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c544:	add	x0, x0, #0x22b
   1c548:	mov	w1, #0x8                   	// #8
   1c54c:	strb	w1, [x0]
   1c550:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c554:	add	x0, x0, #0x22c
   1c558:	mov	w1, #0x8                   	// #8
   1c55c:	strb	w1, [x0]
   1c560:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c564:	add	x0, x0, #0x22d
   1c568:	mov	w1, #0x8                   	// #8
   1c56c:	strb	w1, [x0]
   1c570:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c574:	add	x0, x0, #0x22e
   1c578:	mov	w1, #0x8                   	// #8
   1c57c:	strb	w1, [x0]
   1c580:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c584:	add	x0, x0, #0x22f
   1c588:	mov	w1, #0x8                   	// #8
   1c58c:	strb	w1, [x0]
   1c590:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c594:	add	x0, x0, #0x230
   1c598:	mov	w1, #0x8                   	// #8
   1c59c:	strb	w1, [x0]
   1c5a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c5a4:	add	x0, x0, #0x231
   1c5a8:	mov	w1, #0x8                   	// #8
   1c5ac:	strb	w1, [x0]
   1c5b0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c5b4:	add	x0, x0, #0x232
   1c5b8:	mov	w1, #0x8                   	// #8
   1c5bc:	strb	w1, [x0]
   1c5c0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c5c4:	add	x0, x0, #0x233
   1c5c8:	mov	w1, #0x8                   	// #8
   1c5cc:	strb	w1, [x0]
   1c5d0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c5d4:	add	x0, x0, #0x234
   1c5d8:	mov	w1, #0x8                   	// #8
   1c5dc:	strb	w1, [x0]
   1c5e0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c5e4:	add	x0, x0, #0x235
   1c5e8:	mov	w1, #0x8                   	// #8
   1c5ec:	strb	w1, [x0]
   1c5f0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c5f4:	add	x0, x0, #0x236
   1c5f8:	mov	w1, #0x8                   	// #8
   1c5fc:	strb	w1, [x0]
   1c600:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c604:	add	x0, x0, #0x237
   1c608:	mov	w1, #0x8                   	// #8
   1c60c:	strb	w1, [x0]
   1c610:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c614:	add	x0, x0, #0x206
   1c618:	mov	w1, #0x8                   	// #8
   1c61c:	strb	w1, [x0]
   1c620:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c624:	add	x0, x0, #0x208
   1c628:	mov	w1, #0x8                   	// #8
   1c62c:	strb	w1, [x0]
   1c630:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c634:	add	x0, x0, #0x209
   1c638:	mov	w1, #0x8                   	// #8
   1c63c:	strb	w1, [x0]
   1c640:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c644:	add	x0, x0, #0x20a
   1c648:	mov	w1, #0x8                   	// #8
   1c64c:	strb	w1, [x0]
   1c650:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c654:	add	x0, x0, #0x20b
   1c658:	mov	w1, #0x8                   	// #8
   1c65c:	strb	w1, [x0]
   1c660:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c664:	add	x0, x0, #0x20c
   1c668:	mov	w1, #0x8                   	// #8
   1c66c:	strb	w1, [x0]
   1c670:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c674:	add	x0, x0, #0x20d
   1c678:	mov	w1, #0x8                   	// #8
   1c67c:	strb	w1, [x0]
   1c680:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c684:	add	x0, x0, #0x20e
   1c688:	mov	w1, #0x8                   	// #8
   1c68c:	strb	w1, [x0]
   1c690:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c694:	add	x0, x0, #0x20f
   1c698:	mov	w1, #0x8                   	// #8
   1c69c:	strb	w1, [x0]
   1c6a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c6a4:	add	x0, x0, #0x210
   1c6a8:	mov	w1, #0x8                   	// #8
   1c6ac:	strb	w1, [x0]
   1c6b0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c6b4:	add	x0, x0, #0x211
   1c6b8:	mov	w1, #0x8                   	// #8
   1c6bc:	strb	w1, [x0]
   1c6c0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c6c4:	add	x0, x0, #0x212
   1c6c8:	mov	w1, #0x8                   	// #8
   1c6cc:	strb	w1, [x0]
   1c6d0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c6d4:	add	x0, x0, #0x213
   1c6d8:	mov	w1, #0x8                   	// #8
   1c6dc:	strb	w1, [x0]
   1c6e0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c6e4:	add	x0, x0, #0x214
   1c6e8:	mov	w1, #0x8                   	// #8
   1c6ec:	strb	w1, [x0]
   1c6f0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c6f4:	add	x0, x0, #0x215
   1c6f8:	mov	w1, #0x8                   	// #8
   1c6fc:	strb	w1, [x0]
   1c700:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c704:	add	x0, x0, #0x216
   1c708:	mov	w1, #0x8                   	// #8
   1c70c:	strb	w1, [x0]
   1c710:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c714:	add	x0, x0, #0x217
   1c718:	mov	w1, #0x8                   	// #8
   1c71c:	strb	w1, [x0]
   1c720:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c724:	add	x0, x0, #0x238
   1c728:	mov	w1, #0x8                   	// #8
   1c72c:	strb	w1, [x0]
   1c730:	nop
   1c734:	ret
   1c738:	sub	sp, sp, #0x6d0
   1c73c:	stp	x29, x30, [sp]
   1c740:	mov	x29, sp
   1c744:	mov	x3, x30
   1c748:	str	x0, [sp, #40]
   1c74c:	str	x1, [sp, #32]
   1c750:	str	x2, [sp, #24]
   1c754:	mov	x0, x3
   1c758:	str	x0, [sp, #1736]
   1c75c:	ldr	x1, [sp, #1736]
   1c760:	mov	x0, x1
   1c764:	mov	x30, x1
   1c768:	xpaclri
   1c76c:	mov	x0, x30
   1c770:	str	x0, [sp, #1736]
   1c774:	mov	x2, #0x3c0                 	// #960
   1c778:	mov	w1, #0x0                   	// #0
   1c77c:	ldr	x0, [sp, #40]
   1c780:	bl	2c00 <memset@plt>
   1c784:	ldr	x0, [sp, #40]
   1c788:	ldr	x1, [sp, #1736]
   1c78c:	str	x1, [x0, #792]
   1c790:	ldr	x0, [sp, #40]
   1c794:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   1c798:	str	x1, [x0, #832]
   1c79c:	add	x0, sp, #0x40
   1c7a0:	mov	x1, x0
   1c7a4:	ldr	x0, [sp, #40]
   1c7a8:	bl	1b978 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bb0>
   1c7ac:	str	w0, [sp, #1732]
   1c7b0:	ldr	w0, [sp, #1732]
   1c7b4:	cmp	w0, #0x0
   1c7b8:	b.eq	1c7c0 <__frame_state_for@@GLIBC_2.0+0xc64>  // b.none
   1c7bc:	bl	2cb0 <abort@plt>
   1c7c0:	adrp	x0, 1c000 <__frame_state_for@@GLIBC_2.0+0x4a4>
   1c7c4:	add	x1, x0, #0x210
   1c7c8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c7cc:	add	x0, x0, #0x23c
   1c7d0:	bl	19794 <__enable_execute_stack@@GCC_3.4.2+0x590>
   1c7d4:	cmp	w0, #0x0
   1c7d8:	b.eq	1c7f4 <__frame_state_for@@GLIBC_2.0+0xc98>  // b.none
   1c7dc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c7e0:	add	x0, x0, #0x1d8
   1c7e4:	ldrb	w0, [x0]
   1c7e8:	cmp	w0, #0x0
   1c7ec:	b.ne	1c7f4 <__frame_state_for@@GLIBC_2.0+0xc98>  // b.any
   1c7f0:	bl	1c210 <__frame_state_for@@GLIBC_2.0+0x6b4>
   1c7f4:	add	x0, sp, #0x38
   1c7f8:	mov	x2, x0
   1c7fc:	ldr	x1, [sp, #32]
   1c800:	ldr	x0, [sp, #40]
   1c804:	bl	1bce4 <__frame_state_for@@GLIBC_2.0+0x188>
   1c808:	mov	w0, #0x1                   	// #1
   1c80c:	str	w0, [sp, #1664]
   1c810:	mov	w0, #0x1f                  	// #31
   1c814:	mov	w0, w0
   1c818:	str	x0, [sp, #1648]
   1c81c:	str	xzr, [sp, #1640]
   1c820:	add	x0, sp, #0x40
   1c824:	mov	x1, x0
   1c828:	ldr	x0, [sp, #40]
   1c82c:	bl	1bd68 <__frame_state_for@@GLIBC_2.0+0x20c>
   1c830:	ldr	x1, [sp, #24]
   1c834:	ldr	x0, [sp, #40]
   1c838:	str	x1, [x0, #792]
   1c83c:	ldr	x0, [sp, #40]
   1c840:	ldr	x0, [x0, #792]
   1c844:	mov	x1, x0
   1c848:	mov	x30, x0
   1c84c:	xpaclri
   1c850:	mov	x1, x30
   1c854:	ldr	x0, [sp, #40]
   1c858:	str	x1, [x0, #792]
   1c85c:	nop
   1c860:	ldp	x29, x30, [sp]
   1c864:	add	sp, sp, #0x6d0
   1c868:	ret
   1c86c:	sub	sp, sp, #0x10
   1c870:	str	x0, [sp, #8]
   1c874:	str	x1, [sp]
   1c878:	nop
   1c87c:	add	sp, sp, #0x10
   1c880:	ret
   1c884:	stp	x29, x30, [sp, #-48]!
   1c888:	mov	x29, sp
   1c88c:	str	x0, [sp, #24]
   1c890:	str	x1, [sp, #16]
   1c894:	ldr	x0, [sp, #16]
   1c898:	ldr	x0, [x0, #792]
   1c89c:	str	x0, [sp, #40]
   1c8a0:	ldr	x2, [sp, #40]
   1c8a4:	ldr	x1, [sp, #16]
   1c8a8:	ldr	x0, [sp, #24]
   1c8ac:	bl	19e3c <_Unwind_GetTextRelBase@@GCC_3.0+0x74>
   1c8b0:	str	x0, [sp, #40]
   1c8b4:	ldr	x0, [sp, #40]
   1c8b8:	ldp	x29, x30, [sp], #48
   1c8bc:	ret
   1c8c0:	stp	x29, x30, [sp, #-96]!
   1c8c4:	mov	x29, sp
   1c8c8:	str	x0, [sp, #24]
   1c8cc:	str	x1, [sp, #16]
   1c8d0:	mov	w0, #0x1f                  	// #31
   1c8d4:	mov	w1, w0
   1c8d8:	ldr	x0, [sp, #16]
   1c8dc:	bl	19b84 <_Unwind_SetGR@@GCC_3.0+0xcc>
   1c8e0:	cmp	x0, #0x0
   1c8e4:	b.ne	1c904 <__frame_state_for@@GLIBC_2.0+0xda8>  // b.any
   1c8e8:	ldr	x0, [sp, #16]
   1c8ec:	ldr	x0, [x0, #784]
   1c8f0:	add	x1, sp, #0x38
   1c8f4:	mov	x2, x1
   1c8f8:	mov	x1, x0
   1c8fc:	ldr	x0, [sp, #16]
   1c900:	bl	1bce4 <__frame_state_for@@GLIBC_2.0+0x188>
   1c904:	str	xzr, [sp, #88]
   1c908:	b	1ca34 <__frame_state_for@@GLIBC_2.0+0xed8>
   1c90c:	ldr	x0, [sp, #24]
   1c910:	ldr	x1, [sp, #88]
   1c914:	ldr	x0, [x0, x1, lsl #3]
   1c918:	str	x0, [sp, #72]
   1c91c:	ldr	x0, [sp, #16]
   1c920:	ldr	x1, [sp, #88]
   1c924:	ldr	x0, [x0, x1, lsl #3]
   1c928:	str	x0, [sp, #64]
   1c92c:	ldr	x1, [sp, #24]
   1c930:	ldr	x0, [sp, #88]
   1c934:	add	x0, x1, x0
   1c938:	ldrb	w0, [x0, #856]
   1c93c:	cmp	w0, #0x0
   1c940:	b.eq	1c948 <__frame_state_for@@GLIBC_2.0+0xdec>  // b.none
   1c944:	bl	2cb0 <abort@plt>
   1c948:	ldr	x1, [sp, #16]
   1c94c:	ldr	x0, [sp, #88]
   1c950:	add	x0, x1, x0
   1c954:	ldrb	w0, [x0, #856]
   1c958:	cmp	w0, #0x0
   1c95c:	b.eq	1c9d8 <__frame_state_for@@GLIBC_2.0+0xe7c>  // b.none
   1c960:	ldr	x0, [sp, #72]
   1c964:	cmp	x0, #0x0
   1c968:	b.eq	1c9d8 <__frame_state_for@@GLIBC_2.0+0xe7c>  // b.none
   1c96c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c970:	add	x1, x0, #0x1d8
   1c974:	ldr	x0, [sp, #88]
   1c978:	add	x0, x1, x0
   1c97c:	ldrb	w0, [x0]
   1c980:	cmp	w0, #0x8
   1c984:	b.ne	1c9a0 <__frame_state_for@@GLIBC_2.0+0xe44>  // b.any
   1c988:	ldr	x0, [sp, #64]
   1c98c:	str	x0, [sp, #48]
   1c990:	ldr	x1, [sp, #48]
   1c994:	ldr	x0, [sp, #72]
   1c998:	str	x1, [x0]
   1c99c:	b	1ca28 <__frame_state_for@@GLIBC_2.0+0xecc>
   1c9a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1c9a4:	add	x1, x0, #0x1d8
   1c9a8:	ldr	x0, [sp, #88]
   1c9ac:	add	x0, x1, x0
   1c9b0:	ldrb	w0, [x0]
   1c9b4:	cmp	w0, #0x8
   1c9b8:	b.eq	1c9c0 <__frame_state_for@@GLIBC_2.0+0xe64>  // b.none
   1c9bc:	bl	2cb0 <abort@plt>
   1c9c0:	ldr	x0, [sp, #64]
   1c9c4:	str	x0, [sp, #40]
   1c9c8:	ldr	x1, [sp, #40]
   1c9cc:	ldr	x0, [sp, #72]
   1c9d0:	str	x1, [x0]
   1c9d4:	b	1ca28 <__frame_state_for@@GLIBC_2.0+0xecc>
   1c9d8:	ldr	x0, [sp, #64]
   1c9dc:	cmp	x0, #0x0
   1c9e0:	b.eq	1ca28 <__frame_state_for@@GLIBC_2.0+0xecc>  // b.none
   1c9e4:	ldr	x0, [sp, #72]
   1c9e8:	cmp	x0, #0x0
   1c9ec:	b.eq	1ca28 <__frame_state_for@@GLIBC_2.0+0xecc>  // b.none
   1c9f0:	ldr	x1, [sp, #64]
   1c9f4:	ldr	x0, [sp, #72]
   1c9f8:	cmp	x1, x0
   1c9fc:	b.eq	1ca28 <__frame_state_for@@GLIBC_2.0+0xecc>  // b.none
   1ca00:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1ca04:	add	x1, x0, #0x1d8
   1ca08:	ldr	x0, [sp, #88]
   1ca0c:	add	x0, x1, x0
   1ca10:	ldrb	w0, [x0]
   1ca14:	and	x0, x0, #0xff
   1ca18:	mov	x2, x0
   1ca1c:	ldr	x1, [sp, #64]
   1ca20:	ldr	x0, [sp, #72]
   1ca24:	bl	2b00 <memcpy@plt>
   1ca28:	ldr	x0, [sp, #88]
   1ca2c:	add	x0, x0, #0x1
   1ca30:	str	x0, [sp, #88]
   1ca34:	ldr	x0, [sp, #88]
   1ca38:	cmp	x0, #0x60
   1ca3c:	b.le	1c90c <__frame_state_for@@GLIBC_2.0+0xdb0>
   1ca40:	mov	w0, #0x1f                  	// #31
   1ca44:	mov	w1, w0
   1ca48:	ldr	x0, [sp, #24]
   1ca4c:	bl	19b84 <_Unwind_SetGR@@GCC_3.0+0xcc>
   1ca50:	cmp	x0, #0x0
   1ca54:	b.ne	1ca90 <__frame_state_for@@GLIBC_2.0+0xf34>  // b.any
   1ca58:	mov	w0, #0x1f                  	// #31
   1ca5c:	mov	w1, w0
   1ca60:	ldr	x0, [sp, #16]
   1ca64:	bl	19a7c <_Unwind_GetGR@@GCC_3.0+0xd8>
   1ca68:	str	x0, [sp, #80]
   1ca6c:	ldr	x0, [sp, #24]
   1ca70:	ldr	x0, [x0, #784]
   1ca74:	ldr	x1, [sp, #80]
   1ca78:	sub	x0, x1, x0
   1ca7c:	mov	x1, x0
   1ca80:	ldr	x0, [sp, #16]
   1ca84:	ldr	x0, [x0, #848]
   1ca88:	add	x0, x1, x0
   1ca8c:	b	1ca94 <__frame_state_for@@GLIBC_2.0+0xf38>
   1ca90:	mov	x0, #0x0                   	// #0
   1ca94:	ldp	x29, x30, [sp], #96
   1ca98:	ret
   1ca9c:	stp	x29, x30, [sp, #-48]!
   1caa0:	mov	x29, sp
   1caa4:	str	x19, [sp, #16]
   1caa8:	str	x0, [sp, #40]
   1caac:	ldr	x0, [sp, #40]
   1cab0:	bl	2bf0 <_Unwind_GetCFA@plt>
   1cab4:	mov	x19, x0
   1cab8:	ldr	x0, [sp, #40]
   1cabc:	bl	19904 <__enable_execute_stack@@GCC_3.4.2+0x700>
   1cac0:	sub	x0, x19, x0
   1cac4:	ldr	x19, [sp, #16]
   1cac8:	ldp	x29, x30, [sp], #48
   1cacc:	ret
   1cad0:	sub	sp, sp, #0x6c0
   1cad4:	stp	x29, x30, [sp]
   1cad8:	mov	x29, sp
   1cadc:	str	x0, [sp, #40]
   1cae0:	str	x1, [sp, #32]
   1cae4:	str	x2, [sp, #24]
   1cae8:	mov	x0, #0x1                   	// #1
   1caec:	str	x0, [sp, #1720]
   1caf0:	add	x0, sp, #0x30
   1caf4:	mov	x1, x0
   1caf8:	ldr	x0, [sp, #32]
   1cafc:	bl	1b978 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bb0>
   1cb00:	str	w0, [sp, #1716]
   1cb04:	ldr	x0, [sp, #32]
   1cb08:	bl	1ca9c <__frame_state_for@@GLIBC_2.0+0xf40>
   1cb0c:	mov	x1, x0
   1cb10:	ldr	x0, [sp, #40]
   1cb14:	ldr	x0, [x0, #24]
   1cb18:	cmp	x1, x0
   1cb1c:	b.ne	1cb28 <__frame_state_for@@GLIBC_2.0+0xfcc>  // b.any
   1cb20:	mov	w0, #0x4                   	// #4
   1cb24:	b	1cb2c <__frame_state_for@@GLIBC_2.0+0xfd0>
   1cb28:	mov	w0, #0x0                   	// #0
   1cb2c:	str	w0, [sp, #1712]
   1cb30:	ldr	w0, [sp, #1716]
   1cb34:	cmp	w0, #0x0
   1cb38:	b.eq	1cb44 <__frame_state_for@@GLIBC_2.0+0xfe8>  // b.none
   1cb3c:	mov	w0, #0x2                   	// #2
   1cb40:	b	1cbe0 <__frame_state_for@@GLIBC_2.0+0x1084>
   1cb44:	ldr	x0, [sp, #1664]
   1cb48:	cmp	x0, #0x0
   1cb4c:	b.eq	1cbb0 <__frame_state_for@@GLIBC_2.0+0x1054>  // b.none
   1cb50:	ldr	x5, [sp, #1664]
   1cb54:	ldr	w0, [sp, #1712]
   1cb58:	orr	w1, w0, #0x2
   1cb5c:	ldr	x0, [sp, #40]
   1cb60:	ldr	x0, [x0]
   1cb64:	ldr	x4, [sp, #32]
   1cb68:	ldr	x3, [sp, #40]
   1cb6c:	mov	x2, x0
   1cb70:	mov	w0, #0x1                   	// #1
   1cb74:	blr	x5
   1cb78:	str	w0, [sp, #1716]
   1cb7c:	ldr	w0, [sp, #1716]
   1cb80:	cmp	w0, #0x7
   1cb84:	b.ne	1cb9c <__frame_state_for@@GLIBC_2.0+0x1040>  // b.any
   1cb88:	ldr	x0, [sp, #24]
   1cb8c:	ldr	x1, [sp, #1720]
   1cb90:	str	x1, [x0]
   1cb94:	ldr	w0, [sp, #1716]
   1cb98:	b	1cbe0 <__frame_state_for@@GLIBC_2.0+0x1084>
   1cb9c:	ldr	w0, [sp, #1716]
   1cba0:	cmp	w0, #0x8
   1cba4:	b.eq	1cbb0 <__frame_state_for@@GLIBC_2.0+0x1054>  // b.none
   1cba8:	mov	w0, #0x2                   	// #2
   1cbac:	b	1cbe0 <__frame_state_for@@GLIBC_2.0+0x1084>
   1cbb0:	ldr	w0, [sp, #1712]
   1cbb4:	cmp	w0, #0x0
   1cbb8:	b.eq	1cbc0 <__frame_state_for@@GLIBC_2.0+0x1064>  // b.none
   1cbbc:	bl	2cb0 <abort@plt>
   1cbc0:	add	x0, sp, #0x30
   1cbc4:	mov	x1, x0
   1cbc8:	ldr	x0, [sp, #32]
   1cbcc:	bl	1c150 <__frame_state_for@@GLIBC_2.0+0x5f4>
   1cbd0:	ldr	x0, [sp, #1720]
   1cbd4:	add	x0, x0, #0x1
   1cbd8:	str	x0, [sp, #1720]
   1cbdc:	b	1caf0 <__frame_state_for@@GLIBC_2.0+0xf94>
   1cbe0:	ldp	x29, x30, [sp]
   1cbe4:	add	sp, sp, #0x6c0
   1cbe8:	ret

000000000001cbec <_Unwind_RaiseException@@GCC_3.0>:
   1cbec:	sub	sp, sp, #0xef0
   1cbf0:	stp	x29, x30, [sp]
   1cbf4:	mov	x29, sp
   1cbf8:	stp	x0, x1, [sp, #16]
   1cbfc:	stp	x2, x3, [sp, #32]
   1cc00:	stp	x19, x20, [sp, #48]
   1cc04:	stp	x21, x22, [sp, #64]
   1cc08:	stp	x23, x24, [sp, #80]
   1cc0c:	stp	x25, x26, [sp, #96]
   1cc10:	stp	x27, x28, [sp, #112]
   1cc14:	stp	d8, d9, [sp, #128]
   1cc18:	stp	d10, d11, [sp, #144]
   1cc1c:	stp	d12, d13, [sp, #160]
   1cc20:	stp	d14, d15, [sp, #176]
   1cc24:	mov	x2, x30
   1cc28:	str	x0, [sp, #200]
   1cc2c:	add	x1, sp, #0xef0
   1cc30:	add	x0, sp, #0xb18
   1cc34:	bl	1c738 <__frame_state_for@@GLIBC_2.0+0xbdc>
   1cc38:	add	x0, sp, #0x758
   1cc3c:	add	x1, sp, #0xb18
   1cc40:	mov	x2, #0x3c0                 	// #960
   1cc44:	bl	2b00 <memcpy@plt>
   1cc48:	add	x1, sp, #0xd0
   1cc4c:	add	x0, sp, #0x758
   1cc50:	bl	1b978 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bb0>
   1cc54:	str	w0, [sp, #3820]
   1cc58:	ldr	w0, [sp, #3820]
   1cc5c:	cmp	w0, #0x5
   1cc60:	b.ne	1cc6c <_Unwind_RaiseException@@GCC_3.0+0x80>  // b.any
   1cc64:	mov	w0, #0x5                   	// #5
   1cc68:	b	1cd88 <_Unwind_RaiseException@@GCC_3.0+0x19c>
   1cc6c:	ldr	w0, [sp, #3820]
   1cc70:	cmp	w0, #0x0
   1cc74:	b.eq	1cc80 <_Unwind_RaiseException@@GCC_3.0+0x94>  // b.none
   1cc78:	mov	w0, #0x3                   	// #3
   1cc7c:	b	1cd88 <_Unwind_RaiseException@@GCC_3.0+0x19c>
   1cc80:	ldr	x0, [sp, #1824]
   1cc84:	cmp	x0, #0x0
   1cc88:	b.eq	1cd30 <_Unwind_RaiseException@@GCC_3.0+0x144>  // b.none
   1cc8c:	ldr	x5, [sp, #1824]
   1cc90:	ldr	x0, [sp, #200]
   1cc94:	ldr	x0, [x0]
   1cc98:	add	x1, sp, #0x758
   1cc9c:	mov	x4, x1
   1cca0:	ldr	x3, [sp, #200]
   1cca4:	mov	x2, x0
   1cca8:	mov	w1, #0x1                   	// #1
   1ccac:	mov	w0, #0x1                   	// #1
   1ccb0:	blr	x5
   1ccb4:	str	w0, [sp, #3820]
   1ccb8:	ldr	w0, [sp, #3820]
   1ccbc:	cmp	w0, #0x6
   1ccc0:	b.ne	1cd1c <_Unwind_RaiseException@@GCC_3.0+0x130>  // b.any
   1ccc4:	ldr	x0, [sp, #200]
   1ccc8:	str	xzr, [x0, #16]
   1cccc:	add	x0, sp, #0x758
   1ccd0:	bl	1ca9c <__frame_state_for@@GLIBC_2.0+0xf40>
   1ccd4:	mov	x1, x0
   1ccd8:	ldr	x0, [sp, #200]
   1ccdc:	str	x1, [x0, #24]
   1cce0:	add	x0, sp, #0x758
   1cce4:	add	x1, sp, #0xb18
   1cce8:	mov	x2, #0x3c0                 	// #960
   1ccec:	bl	2b00 <memcpy@plt>
   1ccf0:	add	x1, sp, #0x750
   1ccf4:	add	x0, sp, #0x758
   1ccf8:	mov	x2, x1
   1ccfc:	mov	x1, x0
   1cd00:	ldr	x0, [sp, #200]
   1cd04:	bl	1cad0 <__frame_state_for@@GLIBC_2.0+0xf74>
   1cd08:	str	w0, [sp, #3820]
   1cd0c:	ldr	w0, [sp, #3820]
   1cd10:	cmp	w0, #0x7
   1cd14:	b.ne	1cd40 <_Unwind_RaiseException@@GCC_3.0+0x154>  // b.any
   1cd18:	b	1cd48 <_Unwind_RaiseException@@GCC_3.0+0x15c>
   1cd1c:	ldr	w0, [sp, #3820]
   1cd20:	cmp	w0, #0x8
   1cd24:	b.eq	1cd30 <_Unwind_RaiseException@@GCC_3.0+0x144>  // b.none
   1cd28:	mov	w0, #0x3                   	// #3
   1cd2c:	b	1cd88 <_Unwind_RaiseException@@GCC_3.0+0x19c>
   1cd30:	add	x1, sp, #0xd0
   1cd34:	add	x0, sp, #0x758
   1cd38:	bl	1c150 <__frame_state_for@@GLIBC_2.0+0x5f4>
   1cd3c:	b	1cc48 <_Unwind_RaiseException@@GCC_3.0+0x5c>
   1cd40:	ldr	w0, [sp, #3820]
   1cd44:	b	1cd88 <_Unwind_RaiseException@@GCC_3.0+0x19c>
   1cd48:	add	x1, sp, #0x758
   1cd4c:	add	x0, sp, #0xb18
   1cd50:	bl	1c8c0 <__frame_state_for@@GLIBC_2.0+0xd64>
   1cd54:	str	x0, [sp, #3808]
   1cd58:	add	x1, sp, #0x758
   1cd5c:	add	x0, sp, #0xb18
   1cd60:	bl	1c884 <__frame_state_for@@GLIBC_2.0+0xd28>
   1cd64:	str	x0, [sp, #3800]
   1cd68:	ldr	x0, [sp, #2664]
   1cd6c:	ldr	x1, [sp, #3800]
   1cd70:	bl	1c86c <__frame_state_for@@GLIBC_2.0+0xd10>
   1cd74:	ldr	x2, [sp, #3808]
   1cd78:	ldr	x1, [sp, #3800]
   1cd7c:	mov	x4, x2
   1cd80:	str	x1, [x29, #8]
   1cd84:	b	1cd8c <_Unwind_RaiseException@@GCC_3.0+0x1a0>
   1cd88:	mov	x4, #0x0                   	// #0
   1cd8c:	ldp	x0, x1, [sp, #16]
   1cd90:	ldp	x2, x3, [sp, #32]
   1cd94:	ldp	x19, x20, [sp, #48]
   1cd98:	ldp	x21, x22, [sp, #64]
   1cd9c:	ldp	x23, x24, [sp, #80]
   1cda0:	ldp	x25, x26, [sp, #96]
   1cda4:	ldp	x27, x28, [sp, #112]
   1cda8:	ldp	x29, x30, [sp]
   1cdac:	ldp	d8, d9, [sp, #128]
   1cdb0:	ldp	d10, d11, [sp, #144]
   1cdb4:	ldp	d12, d13, [sp, #160]
   1cdb8:	ldp	d14, d15, [sp, #176]
   1cdbc:	add	sp, sp, #0xef0
   1cdc0:	add	sp, sp, x4
   1cdc4:	ret
   1cdc8:	sub	sp, sp, #0x6e0
   1cdcc:	stp	x29, x30, [sp]
   1cdd0:	mov	x29, sp
   1cdd4:	str	x0, [sp, #40]
   1cdd8:	str	x1, [sp, #32]
   1cddc:	str	x2, [sp, #24]
   1cde0:	ldr	x0, [sp, #40]
   1cde4:	ldr	x0, [x0, #16]
   1cde8:	str	x0, [sp, #1728]
   1cdec:	ldr	x0, [sp, #40]
   1cdf0:	ldr	x0, [x0, #24]
   1cdf4:	str	x0, [sp, #1720]
   1cdf8:	mov	x0, #0x1                   	// #1
   1cdfc:	str	x0, [sp, #1744]
   1ce00:	add	x0, sp, #0x30
   1ce04:	mov	x1, x0
   1ce08:	ldr	x0, [sp, #32]
   1ce0c:	bl	1b978 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bb0>
   1ce10:	str	w0, [sp, #1756]
   1ce14:	ldr	w0, [sp, #1756]
   1ce18:	cmp	w0, #0x0
   1ce1c:	b.eq	1ce34 <_Unwind_RaiseException@@GCC_3.0+0x248>  // b.none
   1ce20:	ldr	w0, [sp, #1756]
   1ce24:	cmp	w0, #0x5
   1ce28:	b.eq	1ce34 <_Unwind_RaiseException@@GCC_3.0+0x248>  // b.none
   1ce2c:	mov	w0, #0x2                   	// #2
   1ce30:	b	1cf30 <_Unwind_RaiseException@@GCC_3.0+0x344>
   1ce34:	mov	w0, #0xa                   	// #10
   1ce38:	str	w0, [sp, #1740]
   1ce3c:	ldr	w0, [sp, #1756]
   1ce40:	cmp	w0, #0x5
   1ce44:	b.ne	1ce54 <_Unwind_RaiseException@@GCC_3.0+0x268>  // b.any
   1ce48:	ldr	w0, [sp, #1740]
   1ce4c:	orr	w0, w0, #0x10
   1ce50:	str	w0, [sp, #1740]
   1ce54:	ldr	x0, [sp, #40]
   1ce58:	ldr	x0, [x0]
   1ce5c:	ldr	x6, [sp, #1728]
   1ce60:	ldr	x5, [sp, #1720]
   1ce64:	ldr	x4, [sp, #32]
   1ce68:	ldr	x3, [sp, #40]
   1ce6c:	mov	x2, x0
   1ce70:	ldr	w1, [sp, #1740]
   1ce74:	mov	w0, #0x1                   	// #1
   1ce78:	blr	x6
   1ce7c:	str	w0, [sp, #1716]
   1ce80:	ldr	w0, [sp, #1716]
   1ce84:	cmp	w0, #0x0
   1ce88:	b.eq	1ce94 <_Unwind_RaiseException@@GCC_3.0+0x2a8>  // b.none
   1ce8c:	mov	w0, #0x2                   	// #2
   1ce90:	b	1cf30 <_Unwind_RaiseException@@GCC_3.0+0x344>
   1ce94:	ldr	w0, [sp, #1756]
   1ce98:	cmp	w0, #0x5
   1ce9c:	b.eq	1cf14 <_Unwind_RaiseException@@GCC_3.0+0x328>  // b.none
   1cea0:	ldr	x0, [sp, #1664]
   1cea4:	cmp	x0, #0x0
   1cea8:	b.eq	1cef4 <_Unwind_RaiseException@@GCC_3.0+0x308>  // b.none
   1ceac:	ldr	x5, [sp, #1664]
   1ceb0:	ldr	x0, [sp, #40]
   1ceb4:	ldr	x0, [x0]
   1ceb8:	ldr	x4, [sp, #32]
   1cebc:	ldr	x3, [sp, #40]
   1cec0:	mov	x2, x0
   1cec4:	mov	w1, #0xa                   	// #10
   1cec8:	mov	w0, #0x1                   	// #1
   1cecc:	blr	x5
   1ced0:	str	w0, [sp, #1756]
   1ced4:	ldr	w0, [sp, #1756]
   1ced8:	cmp	w0, #0x7
   1cedc:	b.eq	1cf1c <_Unwind_RaiseException@@GCC_3.0+0x330>  // b.none
   1cee0:	ldr	w0, [sp, #1756]
   1cee4:	cmp	w0, #0x8
   1cee8:	b.eq	1cef4 <_Unwind_RaiseException@@GCC_3.0+0x308>  // b.none
   1ceec:	mov	w0, #0x2                   	// #2
   1cef0:	b	1cf30 <_Unwind_RaiseException@@GCC_3.0+0x344>
   1cef4:	add	x0, sp, #0x30
   1cef8:	mov	x1, x0
   1cefc:	ldr	x0, [sp, #32]
   1cf00:	bl	1c1e8 <__frame_state_for@@GLIBC_2.0+0x68c>
   1cf04:	ldr	x0, [sp, #1744]
   1cf08:	add	x0, x0, #0x1
   1cf0c:	str	x0, [sp, #1744]
   1cf10:	b	1ce00 <_Unwind_RaiseException@@GCC_3.0+0x214>
   1cf14:	nop
   1cf18:	b	1cf20 <_Unwind_RaiseException@@GCC_3.0+0x334>
   1cf1c:	nop
   1cf20:	ldr	x0, [sp, #24]
   1cf24:	ldr	x1, [sp, #1744]
   1cf28:	str	x1, [x0]
   1cf2c:	ldr	w0, [sp, #1756]
   1cf30:	ldp	x29, x30, [sp]
   1cf34:	add	sp, sp, #0x6e0
   1cf38:	ret

000000000001cf3c <_Unwind_ForcedUnwind@@GCC_3.0>:
   1cf3c:	sub	sp, sp, #0x880
   1cf40:	stp	x29, x30, [sp]
   1cf44:	mov	x29, sp
   1cf48:	stp	x0, x1, [sp, #16]
   1cf4c:	stp	x2, x3, [sp, #32]
   1cf50:	stp	x19, x20, [sp, #48]
   1cf54:	stp	x21, x22, [sp, #64]
   1cf58:	stp	x23, x24, [sp, #80]
   1cf5c:	stp	x25, x26, [sp, #96]
   1cf60:	stp	x27, x28, [sp, #112]
   1cf64:	stp	d8, d9, [sp, #128]
   1cf68:	stp	d10, d11, [sp, #144]
   1cf6c:	stp	d12, d13, [sp, #160]
   1cf70:	stp	d14, d15, [sp, #176]
   1cf74:	mov	x3, x30
   1cf78:	str	x0, [sp, #216]
   1cf7c:	str	x1, [sp, #208]
   1cf80:	str	x2, [sp, #200]
   1cf84:	add	x1, sp, #0x880
   1cf88:	mov	x2, x3
   1cf8c:	add	x0, sp, #0x4a8
   1cf90:	bl	1c738 <__frame_state_for@@GLIBC_2.0+0xbdc>
   1cf94:	add	x0, sp, #0xe8
   1cf98:	add	x1, sp, #0x4a8
   1cf9c:	mov	x2, #0x3c0                 	// #960
   1cfa0:	bl	2b00 <memcpy@plt>
   1cfa4:	ldr	x1, [sp, #208]
   1cfa8:	ldr	x0, [sp, #216]
   1cfac:	str	x1, [x0, #16]
   1cfb0:	ldr	x1, [sp, #200]
   1cfb4:	ldr	x0, [sp, #216]
   1cfb8:	str	x1, [x0, #24]
   1cfbc:	add	x1, sp, #0xe0
   1cfc0:	add	x0, sp, #0xe8
   1cfc4:	mov	x2, x1
   1cfc8:	mov	x1, x0
   1cfcc:	ldr	x0, [sp, #216]
   1cfd0:	bl	1cdc8 <_Unwind_RaiseException@@GCC_3.0+0x1dc>
   1cfd4:	str	w0, [sp, #2172]
   1cfd8:	ldr	w0, [sp, #2172]
   1cfdc:	cmp	w0, #0x7
   1cfe0:	b.eq	1cff0 <_Unwind_ForcedUnwind@@GCC_3.0+0xb4>  // b.none
   1cfe4:	ldr	w0, [sp, #2172]
   1cfe8:	mov	x4, #0x0                   	// #0
   1cfec:	b	1d02c <_Unwind_ForcedUnwind@@GCC_3.0+0xf0>
   1cff0:	add	x1, sp, #0xe8
   1cff4:	add	x0, sp, #0x4a8
   1cff8:	bl	1c8c0 <__frame_state_for@@GLIBC_2.0+0xd64>
   1cffc:	str	x0, [sp, #2160]
   1d000:	add	x1, sp, #0xe8
   1d004:	add	x0, sp, #0x4a8
   1d008:	bl	1c884 <__frame_state_for@@GLIBC_2.0+0xd28>
   1d00c:	str	x0, [sp, #2152]
   1d010:	ldr	x0, [sp, #1016]
   1d014:	ldr	x1, [sp, #2152]
   1d018:	bl	1c86c <__frame_state_for@@GLIBC_2.0+0xd10>
   1d01c:	ldr	x2, [sp, #2160]
   1d020:	ldr	x1, [sp, #2152]
   1d024:	mov	x4, x2
   1d028:	str	x1, [x29, #8]
   1d02c:	ldp	x0, x1, [sp, #16]
   1d030:	ldp	x2, x3, [sp, #32]
   1d034:	ldp	x19, x20, [sp, #48]
   1d038:	ldp	x21, x22, [sp, #64]
   1d03c:	ldp	x23, x24, [sp, #80]
   1d040:	ldp	x25, x26, [sp, #96]
   1d044:	ldp	x27, x28, [sp, #112]
   1d048:	ldp	x29, x30, [sp]
   1d04c:	ldp	d8, d9, [sp, #128]
   1d050:	ldp	d10, d11, [sp, #144]
   1d054:	ldp	d12, d13, [sp, #160]
   1d058:	ldp	d14, d15, [sp, #176]
   1d05c:	add	sp, sp, #0x880
   1d060:	add	sp, sp, x4
   1d064:	ret

000000000001d068 <_Unwind_Resume@@GCC_3.0>:
   1d068:	sub	sp, sp, #0x870
   1d06c:	stp	x29, x30, [sp]
   1d070:	mov	x29, sp
   1d074:	stp	x0, x1, [sp, #16]
   1d078:	stp	x2, x3, [sp, #32]
   1d07c:	stp	x19, x20, [sp, #48]
   1d080:	stp	x21, x22, [sp, #64]
   1d084:	stp	x23, x24, [sp, #80]
   1d088:	stp	x25, x26, [sp, #96]
   1d08c:	stp	x27, x28, [sp, #112]
   1d090:	stp	d8, d9, [sp, #128]
   1d094:	stp	d10, d11, [sp, #144]
   1d098:	stp	d12, d13, [sp, #160]
   1d09c:	stp	d14, d15, [sp, #176]
   1d0a0:	mov	x2, x30
   1d0a4:	str	x0, [sp, #200]
   1d0a8:	add	x1, sp, #0x870
   1d0ac:	add	x0, sp, #0x498
   1d0b0:	bl	1c738 <__frame_state_for@@GLIBC_2.0+0xbdc>
   1d0b4:	add	x0, sp, #0xd8
   1d0b8:	add	x1, sp, #0x498
   1d0bc:	mov	x2, #0x3c0                 	// #960
   1d0c0:	bl	2b00 <memcpy@plt>
   1d0c4:	ldr	x0, [sp, #200]
   1d0c8:	ldr	x0, [x0, #16]
   1d0cc:	cmp	x0, #0x0
   1d0d0:	b.ne	1d0f4 <_Unwind_Resume@@GCC_3.0+0x8c>  // b.any
   1d0d4:	add	x1, sp, #0xd0
   1d0d8:	add	x0, sp, #0xd8
   1d0dc:	mov	x2, x1
   1d0e0:	mov	x1, x0
   1d0e4:	ldr	x0, [sp, #200]
   1d0e8:	bl	1cad0 <__frame_state_for@@GLIBC_2.0+0xf74>
   1d0ec:	str	w0, [sp, #2156]
   1d0f0:	b	1d110 <_Unwind_Resume@@GCC_3.0+0xa8>
   1d0f4:	add	x1, sp, #0xd0
   1d0f8:	add	x0, sp, #0xd8
   1d0fc:	mov	x2, x1
   1d100:	mov	x1, x0
   1d104:	ldr	x0, [sp, #200]
   1d108:	bl	1cdc8 <_Unwind_RaiseException@@GCC_3.0+0x1dc>
   1d10c:	str	w0, [sp, #2156]
   1d110:	ldr	w0, [sp, #2156]
   1d114:	cmp	w0, #0x7
   1d118:	b.eq	1d120 <_Unwind_Resume@@GCC_3.0+0xb8>  // b.none
   1d11c:	bl	2cb0 <abort@plt>
   1d120:	add	x1, sp, #0xd8
   1d124:	add	x0, sp, #0x498
   1d128:	bl	1c8c0 <__frame_state_for@@GLIBC_2.0+0xd64>
   1d12c:	str	x0, [sp, #2144]
   1d130:	add	x1, sp, #0xd8
   1d134:	add	x0, sp, #0x498
   1d138:	bl	1c884 <__frame_state_for@@GLIBC_2.0+0xd28>
   1d13c:	str	x0, [sp, #2136]
   1d140:	ldr	x0, [sp, #1000]
   1d144:	ldr	x1, [sp, #2136]
   1d148:	bl	1c86c <__frame_state_for@@GLIBC_2.0+0xd10>
   1d14c:	ldr	x1, [sp, #2144]
   1d150:	ldr	x0, [sp, #2136]
   1d154:	mov	x4, x1
   1d158:	str	x0, [x29, #8]
   1d15c:	ldp	x0, x1, [sp, #16]
   1d160:	ldp	x2, x3, [sp, #32]
   1d164:	ldp	x19, x20, [sp, #48]
   1d168:	ldp	x21, x22, [sp, #64]
   1d16c:	ldp	x23, x24, [sp, #80]
   1d170:	ldp	x25, x26, [sp, #96]
   1d174:	ldp	x27, x28, [sp, #112]
   1d178:	ldp	x29, x30, [sp]
   1d17c:	ldp	d8, d9, [sp, #128]
   1d180:	ldp	d10, d11, [sp, #144]
   1d184:	ldp	d12, d13, [sp, #160]
   1d188:	ldp	d14, d15, [sp, #176]
   1d18c:	add	sp, sp, #0x870
   1d190:	add	sp, sp, x4
   1d194:	ret

000000000001d198 <_Unwind_Resume_or_Rethrow@@GCC_3.3>:
   1d198:	sub	sp, sp, #0x870
   1d19c:	stp	x29, x30, [sp]
   1d1a0:	mov	x29, sp
   1d1a4:	stp	x0, x1, [sp, #16]
   1d1a8:	stp	x2, x3, [sp, #32]
   1d1ac:	stp	x19, x20, [sp, #48]
   1d1b0:	stp	x21, x22, [sp, #64]
   1d1b4:	stp	x23, x24, [sp, #80]
   1d1b8:	stp	x25, x26, [sp, #96]
   1d1bc:	stp	x27, x28, [sp, #112]
   1d1c0:	stp	d8, d9, [sp, #128]
   1d1c4:	stp	d10, d11, [sp, #144]
   1d1c8:	stp	d12, d13, [sp, #160]
   1d1cc:	stp	d14, d15, [sp, #176]
   1d1d0:	mov	x2, x30
   1d1d4:	str	x0, [sp, #200]
   1d1d8:	ldr	x0, [sp, #200]
   1d1dc:	ldr	x0, [x0, #16]
   1d1e0:	cmp	x0, #0x0
   1d1e4:	b.ne	1d1f8 <_Unwind_Resume_or_Rethrow@@GCC_3.3+0x60>  // b.any
   1d1e8:	ldr	x0, [sp, #200]
   1d1ec:	bl	2b30 <_Unwind_RaiseException@plt>
   1d1f0:	mov	x4, #0x0                   	// #0
   1d1f4:	b	1d27c <_Unwind_Resume_or_Rethrow@@GCC_3.3+0xe4>
   1d1f8:	add	x1, sp, #0x870
   1d1fc:	add	x0, sp, #0x498
   1d200:	bl	1c738 <__frame_state_for@@GLIBC_2.0+0xbdc>
   1d204:	add	x0, sp, #0xd8
   1d208:	add	x1, sp, #0x498
   1d20c:	mov	x2, #0x3c0                 	// #960
   1d210:	bl	2b00 <memcpy@plt>
   1d214:	add	x1, sp, #0xd0
   1d218:	add	x0, sp, #0xd8
   1d21c:	mov	x2, x1
   1d220:	mov	x1, x0
   1d224:	ldr	x0, [sp, #200]
   1d228:	bl	1cdc8 <_Unwind_RaiseException@@GCC_3.0+0x1dc>
   1d22c:	str	w0, [sp, #2156]
   1d230:	ldr	w0, [sp, #2156]
   1d234:	cmp	w0, #0x7
   1d238:	b.eq	1d240 <_Unwind_Resume_or_Rethrow@@GCC_3.3+0xa8>  // b.none
   1d23c:	bl	2cb0 <abort@plt>
   1d240:	add	x1, sp, #0xd8
   1d244:	add	x0, sp, #0x498
   1d248:	bl	1c8c0 <__frame_state_for@@GLIBC_2.0+0xd64>
   1d24c:	str	x0, [sp, #2144]
   1d250:	add	x1, sp, #0xd8
   1d254:	add	x0, sp, #0x498
   1d258:	bl	1c884 <__frame_state_for@@GLIBC_2.0+0xd28>
   1d25c:	str	x0, [sp, #2136]
   1d260:	ldr	x0, [sp, #1000]
   1d264:	ldr	x1, [sp, #2136]
   1d268:	bl	1c86c <__frame_state_for@@GLIBC_2.0+0xd10>
   1d26c:	ldr	x2, [sp, #2144]
   1d270:	ldr	x1, [sp, #2136]
   1d274:	mov	x4, x2
   1d278:	str	x1, [x29, #8]
   1d27c:	ldp	x0, x1, [sp, #16]
   1d280:	ldp	x2, x3, [sp, #32]
   1d284:	ldp	x19, x20, [sp, #48]
   1d288:	ldp	x21, x22, [sp, #64]
   1d28c:	ldp	x23, x24, [sp, #80]
   1d290:	ldp	x25, x26, [sp, #96]
   1d294:	ldp	x27, x28, [sp, #112]
   1d298:	ldp	x29, x30, [sp]
   1d29c:	ldp	d8, d9, [sp, #128]
   1d2a0:	ldp	d10, d11, [sp, #144]
   1d2a4:	ldp	d12, d13, [sp, #160]
   1d2a8:	ldp	d14, d15, [sp, #176]
   1d2ac:	add	sp, sp, #0x870
   1d2b0:	add	sp, sp, x4
   1d2b4:	ret

000000000001d2b8 <_Unwind_DeleteException@@GCC_3.0>:
   1d2b8:	stp	x29, x30, [sp, #-32]!
   1d2bc:	mov	x29, sp
   1d2c0:	str	x0, [sp, #24]
   1d2c4:	ldr	x0, [sp, #24]
   1d2c8:	ldr	x0, [x0, #8]
   1d2cc:	cmp	x0, #0x0
   1d2d0:	b.eq	1d2e8 <_Unwind_DeleteException@@GCC_3.0+0x30>  // b.none
   1d2d4:	ldr	x0, [sp, #24]
   1d2d8:	ldr	x2, [x0, #8]
   1d2dc:	ldr	x1, [sp, #24]
   1d2e0:	mov	w0, #0x1                   	// #1
   1d2e4:	blr	x2
   1d2e8:	nop
   1d2ec:	ldp	x29, x30, [sp], #32
   1d2f0:	ret

000000000001d2f4 <_Unwind_Backtrace@@GCC_3.3>:
   1d2f4:	sub	sp, sp, #0xb00
   1d2f8:	stp	x29, x30, [sp]
   1d2fc:	mov	x29, sp
   1d300:	stp	x19, x20, [sp, #16]
   1d304:	stp	x21, x22, [sp, #32]
   1d308:	stp	x23, x24, [sp, #48]
   1d30c:	stp	x25, x26, [sp, #64]
   1d310:	stp	x27, x28, [sp, #80]
   1d314:	stp	d8, d9, [sp, #96]
   1d318:	stp	d10, d11, [sp, #112]
   1d31c:	stp	d12, d13, [sp, #128]
   1d320:	stp	d14, d15, [sp, #144]
   1d324:	mov	x2, x30
   1d328:	str	x0, [sp, #168]
   1d32c:	str	x1, [sp, #160]
   1d330:	add	x1, sp, #0xb00
   1d334:	add	x0, sp, #0x738
   1d338:	bl	1c738 <__frame_state_for@@GLIBC_2.0+0xbdc>
   1d33c:	add	x1, sp, #0xb8
   1d340:	add	x0, sp, #0x738
   1d344:	bl	1b978 <_Unwind_GetTextRelBase@@GCC_3.0+0x1bb0>
   1d348:	str	w0, [sp, #2812]
   1d34c:	ldr	w0, [sp, #2812]
   1d350:	cmp	w0, #0x0
   1d354:	b.eq	1d36c <_Unwind_Backtrace@@GCC_3.3+0x78>  // b.none
   1d358:	ldr	w0, [sp, #2812]
   1d35c:	cmp	w0, #0x5
   1d360:	b.eq	1d36c <_Unwind_Backtrace@@GCC_3.3+0x78>  // b.none
   1d364:	mov	w0, #0x3                   	// #3
   1d368:	b	1d3b0 <_Unwind_Backtrace@@GCC_3.3+0xbc>
   1d36c:	add	x0, sp, #0x738
   1d370:	ldr	x2, [sp, #168]
   1d374:	ldr	x1, [sp, #160]
   1d378:	blr	x2
   1d37c:	cmp	w0, #0x0
   1d380:	b.eq	1d38c <_Unwind_Backtrace@@GCC_3.3+0x98>  // b.none
   1d384:	mov	w0, #0x3                   	// #3
   1d388:	b	1d3b0 <_Unwind_Backtrace@@GCC_3.3+0xbc>
   1d38c:	ldr	w0, [sp, #2812]
   1d390:	cmp	w0, #0x5
   1d394:	b.ne	1d3a0 <_Unwind_Backtrace@@GCC_3.3+0xac>  // b.any
   1d398:	ldr	w0, [sp, #2812]
   1d39c:	b	1d3b0 <_Unwind_Backtrace@@GCC_3.3+0xbc>
   1d3a0:	add	x1, sp, #0xb8
   1d3a4:	add	x0, sp, #0x738
   1d3a8:	bl	1c150 <__frame_state_for@@GLIBC_2.0+0x5f4>
   1d3ac:	b	1d33c <_Unwind_Backtrace@@GCC_3.3+0x48>
   1d3b0:	ldp	x19, x20, [sp, #16]
   1d3b4:	ldp	x21, x22, [sp, #32]
   1d3b8:	ldp	x23, x24, [sp, #48]
   1d3bc:	ldp	x25, x26, [sp, #64]
   1d3c0:	ldp	x27, x28, [sp, #80]
   1d3c4:	ldp	x29, x30, [sp]
   1d3c8:	ldp	d8, d9, [sp, #96]
   1d3cc:	ldp	d10, d11, [sp, #112]
   1d3d0:	ldp	d12, d13, [sp, #128]
   1d3d4:	ldp	d14, d15, [sp, #144]
   1d3d8:	add	sp, sp, #0xb00
   1d3dc:	ret
   1d3e0:	stp	x29, x30, [sp, #-32]!
   1d3e4:	mov	x29, sp
   1d3e8:	strb	w0, [sp, #31]
   1d3ec:	ldrb	w0, [sp, #31]
   1d3f0:	cmp	w0, #0xff
   1d3f4:	b.ne	1d400 <_Unwind_Backtrace@@GCC_3.3+0x10c>  // b.any
   1d3f8:	mov	w0, #0x0                   	// #0
   1d3fc:	b	1d460 <_Unwind_Backtrace@@GCC_3.3+0x16c>
   1d400:	ldrb	w0, [sp, #31]
   1d404:	and	w0, w0, #0x7
   1d408:	cmp	w0, #0x4
   1d40c:	b.eq	1d454 <_Unwind_Backtrace@@GCC_3.3+0x160>  // b.none
   1d410:	cmp	w0, #0x4
   1d414:	b.gt	1d45c <_Unwind_Backtrace@@GCC_3.3+0x168>
   1d418:	cmp	w0, #0x3
   1d41c:	b.eq	1d44c <_Unwind_Backtrace@@GCC_3.3+0x158>  // b.none
   1d420:	cmp	w0, #0x3
   1d424:	b.gt	1d45c <_Unwind_Backtrace@@GCC_3.3+0x168>
   1d428:	cmp	w0, #0x0
   1d42c:	b.eq	1d43c <_Unwind_Backtrace@@GCC_3.3+0x148>  // b.none
   1d430:	cmp	w0, #0x2
   1d434:	b.eq	1d444 <_Unwind_Backtrace@@GCC_3.3+0x150>  // b.none
   1d438:	b	1d45c <_Unwind_Backtrace@@GCC_3.3+0x168>
   1d43c:	mov	w0, #0x8                   	// #8
   1d440:	b	1d460 <_Unwind_Backtrace@@GCC_3.3+0x16c>
   1d444:	mov	w0, #0x2                   	// #2
   1d448:	b	1d460 <_Unwind_Backtrace@@GCC_3.3+0x16c>
   1d44c:	mov	w0, #0x4                   	// #4
   1d450:	b	1d460 <_Unwind_Backtrace@@GCC_3.3+0x16c>
   1d454:	mov	w0, #0x8                   	// #8
   1d458:	b	1d460 <_Unwind_Backtrace@@GCC_3.3+0x16c>
   1d45c:	bl	2cb0 <abort@plt>
   1d460:	ldp	x29, x30, [sp], #32
   1d464:	ret
   1d468:	sub	sp, sp, #0x30
   1d46c:	str	x0, [sp, #8]
   1d470:	str	x1, [sp]
   1d474:	str	wzr, [sp, #44]
   1d478:	str	xzr, [sp, #32]
   1d47c:	ldr	x0, [sp, #8]
   1d480:	add	x1, x0, #0x1
   1d484:	str	x1, [sp, #8]
   1d488:	ldrb	w0, [x0]
   1d48c:	strb	w0, [sp, #31]
   1d490:	ldrb	w0, [sp, #31]
   1d494:	and	x1, x0, #0x7f
   1d498:	ldr	w0, [sp, #44]
   1d49c:	lsl	x0, x1, x0
   1d4a0:	ldr	x1, [sp, #32]
   1d4a4:	orr	x0, x1, x0
   1d4a8:	str	x0, [sp, #32]
   1d4ac:	ldr	w0, [sp, #44]
   1d4b0:	add	w0, w0, #0x7
   1d4b4:	str	w0, [sp, #44]
   1d4b8:	ldrsb	w0, [sp, #31]
   1d4bc:	cmp	w0, #0x0
   1d4c0:	b.lt	1d47c <_Unwind_Backtrace@@GCC_3.3+0x188>  // b.tstop
   1d4c4:	ldr	x0, [sp]
   1d4c8:	ldr	x1, [sp, #32]
   1d4cc:	str	x1, [x0]
   1d4d0:	ldr	x0, [sp, #8]
   1d4d4:	add	sp, sp, #0x30
   1d4d8:	ret
   1d4dc:	sub	sp, sp, #0x30
   1d4e0:	str	x0, [sp, #8]
   1d4e4:	str	x1, [sp]
   1d4e8:	str	wzr, [sp, #44]
   1d4ec:	str	xzr, [sp, #32]
   1d4f0:	ldr	x0, [sp, #8]
   1d4f4:	add	x1, x0, #0x1
   1d4f8:	str	x1, [sp, #8]
   1d4fc:	ldrb	w0, [x0]
   1d500:	strb	w0, [sp, #31]
   1d504:	ldrb	w0, [sp, #31]
   1d508:	and	x1, x0, #0x7f
   1d50c:	ldr	w0, [sp, #44]
   1d510:	lsl	x0, x1, x0
   1d514:	ldr	x1, [sp, #32]
   1d518:	orr	x0, x1, x0
   1d51c:	str	x0, [sp, #32]
   1d520:	ldr	w0, [sp, #44]
   1d524:	add	w0, w0, #0x7
   1d528:	str	w0, [sp, #44]
   1d52c:	ldrsb	w0, [sp, #31]
   1d530:	cmp	w0, #0x0
   1d534:	b.lt	1d4f0 <_Unwind_Backtrace@@GCC_3.3+0x1fc>  // b.tstop
   1d538:	ldr	w0, [sp, #44]
   1d53c:	cmp	w0, #0x3f
   1d540:	b.hi	1d570 <_Unwind_Backtrace@@GCC_3.3+0x27c>  // b.pmore
   1d544:	ldrb	w0, [sp, #31]
   1d548:	and	w0, w0, #0x40
   1d54c:	cmp	w0, #0x0
   1d550:	b.eq	1d570 <_Unwind_Backtrace@@GCC_3.3+0x27c>  // b.none
   1d554:	ldr	w0, [sp, #44]
   1d558:	mov	x1, #0x1                   	// #1
   1d55c:	lsl	x0, x1, x0
   1d560:	neg	x0, x0
   1d564:	ldr	x1, [sp, #32]
   1d568:	orr	x0, x1, x0
   1d56c:	str	x0, [sp, #32]
   1d570:	ldr	x1, [sp, #32]
   1d574:	ldr	x0, [sp]
   1d578:	str	x1, [x0]
   1d57c:	ldr	x0, [sp, #8]
   1d580:	add	sp, sp, #0x30
   1d584:	ret
   1d588:	stp	x29, x30, [sp, #-96]!
   1d58c:	mov	x29, sp
   1d590:	strb	w0, [sp, #47]
   1d594:	str	x1, [sp, #32]
   1d598:	str	x2, [sp, #24]
   1d59c:	str	x3, [sp, #16]
   1d5a0:	ldr	x0, [sp, #24]
   1d5a4:	str	x0, [sp, #80]
   1d5a8:	ldrb	w0, [sp, #47]
   1d5ac:	cmp	w0, #0x50
   1d5b0:	b.ne	1d5e8 <_Unwind_Backtrace@@GCC_3.3+0x2f4>  // b.any
   1d5b4:	ldr	x0, [sp, #24]
   1d5b8:	str	x0, [sp, #72]
   1d5bc:	ldr	x0, [sp, #72]
   1d5c0:	add	x0, x0, #0x7
   1d5c4:	and	x0, x0, #0xfffffffffffffff8
   1d5c8:	str	x0, [sp, #72]
   1d5cc:	ldr	x0, [sp, #72]
   1d5d0:	ldr	x0, [x0]
   1d5d4:	str	x0, [sp, #88]
   1d5d8:	ldr	x0, [sp, #72]
   1d5dc:	add	x0, x0, #0x8
   1d5e0:	str	x0, [sp, #24]
   1d5e4:	b	1d7d8 <_Unwind_Backtrace@@GCC_3.3+0x4e4>
   1d5e8:	ldrb	w0, [sp, #47]
   1d5ec:	and	w0, w0, #0xf
   1d5f0:	cmp	w0, #0xc
   1d5f4:	b.eq	1d76c <_Unwind_Backtrace@@GCC_3.3+0x478>  // b.none
   1d5f8:	cmp	w0, #0xc
   1d5fc:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d600:	cmp	w0, #0xb
   1d604:	b.eq	1d74c <_Unwind_Backtrace@@GCC_3.3+0x458>  // b.none
   1d608:	cmp	w0, #0xb
   1d60c:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d610:	cmp	w0, #0xa
   1d614:	b.eq	1d72c <_Unwind_Backtrace@@GCC_3.3+0x438>  // b.none
   1d618:	cmp	w0, #0xa
   1d61c:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d620:	cmp	w0, #0x9
   1d624:	b.eq	1d6b0 <_Unwind_Backtrace@@GCC_3.3+0x3bc>  // b.none
   1d628:	cmp	w0, #0x9
   1d62c:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d630:	cmp	w0, #0x4
   1d634:	b.eq	1d710 <_Unwind_Backtrace@@GCC_3.3+0x41c>  // b.none
   1d638:	cmp	w0, #0x4
   1d63c:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d640:	cmp	w0, #0x3
   1d644:	b.eq	1d6f0 <_Unwind_Backtrace@@GCC_3.3+0x3fc>  // b.none
   1d648:	cmp	w0, #0x3
   1d64c:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d650:	cmp	w0, #0x2
   1d654:	b.eq	1d6d0 <_Unwind_Backtrace@@GCC_3.3+0x3dc>  // b.none
   1d658:	cmp	w0, #0x2
   1d65c:	b.gt	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d660:	cmp	w0, #0x0
   1d664:	b.eq	1d674 <_Unwind_Backtrace@@GCC_3.3+0x380>  // b.none
   1d668:	cmp	w0, #0x1
   1d66c:	b.eq	1d690 <_Unwind_Backtrace@@GCC_3.3+0x39c>  // b.none
   1d670:	b	1d788 <_Unwind_Backtrace@@GCC_3.3+0x494>
   1d674:	ldr	x0, [sp, #80]
   1d678:	ldr	x0, [x0]
   1d67c:	str	x0, [sp, #88]
   1d680:	ldr	x0, [sp, #24]
   1d684:	add	x0, x0, #0x8
   1d688:	str	x0, [sp, #24]
   1d68c:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d690:	add	x0, sp, #0x40
   1d694:	mov	x1, x0
   1d698:	ldr	x0, [sp, #24]
   1d69c:	bl	1d468 <_Unwind_Backtrace@@GCC_3.3+0x174>
   1d6a0:	str	x0, [sp, #24]
   1d6a4:	ldr	x0, [sp, #64]
   1d6a8:	str	x0, [sp, #88]
   1d6ac:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d6b0:	add	x0, sp, #0x38
   1d6b4:	mov	x1, x0
   1d6b8:	ldr	x0, [sp, #24]
   1d6bc:	bl	1d4dc <_Unwind_Backtrace@@GCC_3.3+0x1e8>
   1d6c0:	str	x0, [sp, #24]
   1d6c4:	ldr	x0, [sp, #56]
   1d6c8:	str	x0, [sp, #88]
   1d6cc:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d6d0:	ldr	x0, [sp, #80]
   1d6d4:	ldrh	w0, [x0]
   1d6d8:	and	x0, x0, #0xffff
   1d6dc:	str	x0, [sp, #88]
   1d6e0:	ldr	x0, [sp, #24]
   1d6e4:	add	x0, x0, #0x2
   1d6e8:	str	x0, [sp, #24]
   1d6ec:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d6f0:	ldr	x0, [sp, #80]
   1d6f4:	ldr	w0, [x0]
   1d6f8:	mov	w0, w0
   1d6fc:	str	x0, [sp, #88]
   1d700:	ldr	x0, [sp, #24]
   1d704:	add	x0, x0, #0x4
   1d708:	str	x0, [sp, #24]
   1d70c:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d710:	ldr	x0, [sp, #80]
   1d714:	ldr	x0, [x0]
   1d718:	str	x0, [sp, #88]
   1d71c:	ldr	x0, [sp, #24]
   1d720:	add	x0, x0, #0x8
   1d724:	str	x0, [sp, #24]
   1d728:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d72c:	ldr	x0, [sp, #80]
   1d730:	ldrsh	w0, [x0]
   1d734:	sxth	x0, w0
   1d738:	str	x0, [sp, #88]
   1d73c:	ldr	x0, [sp, #24]
   1d740:	add	x0, x0, #0x2
   1d744:	str	x0, [sp, #24]
   1d748:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d74c:	ldr	x0, [sp, #80]
   1d750:	ldr	w0, [x0]
   1d754:	sxtw	x0, w0
   1d758:	str	x0, [sp, #88]
   1d75c:	ldr	x0, [sp, #24]
   1d760:	add	x0, x0, #0x4
   1d764:	str	x0, [sp, #24]
   1d768:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d76c:	ldr	x0, [sp, #80]
   1d770:	ldr	x0, [x0]
   1d774:	str	x0, [sp, #88]
   1d778:	ldr	x0, [sp, #24]
   1d77c:	add	x0, x0, #0x8
   1d780:	str	x0, [sp, #24]
   1d784:	b	1d78c <_Unwind_Backtrace@@GCC_3.3+0x498>
   1d788:	bl	2cb0 <abort@plt>
   1d78c:	ldr	x0, [sp, #88]
   1d790:	cmp	x0, #0x0
   1d794:	b.eq	1d7d8 <_Unwind_Backtrace@@GCC_3.3+0x4e4>  // b.none
   1d798:	ldrb	w0, [sp, #47]
   1d79c:	and	w0, w0, #0x70
   1d7a0:	cmp	w0, #0x10
   1d7a4:	b.ne	1d7b0 <_Unwind_Backtrace@@GCC_3.3+0x4bc>  // b.any
   1d7a8:	ldr	x0, [sp, #80]
   1d7ac:	b	1d7b4 <_Unwind_Backtrace@@GCC_3.3+0x4c0>
   1d7b0:	ldr	x0, [sp, #32]
   1d7b4:	ldr	x1, [sp, #88]
   1d7b8:	add	x0, x1, x0
   1d7bc:	str	x0, [sp, #88]
   1d7c0:	ldrsb	w0, [sp, #47]
   1d7c4:	cmp	w0, #0x0
   1d7c8:	b.ge	1d7d8 <_Unwind_Backtrace@@GCC_3.3+0x4e4>  // b.tcont
   1d7cc:	ldr	x0, [sp, #88]
   1d7d0:	ldr	x0, [x0]
   1d7d4:	str	x0, [sp, #88]
   1d7d8:	ldr	x0, [sp, #16]
   1d7dc:	ldr	x1, [sp, #88]
   1d7e0:	str	x1, [x0]
   1d7e4:	ldr	x0, [sp, #24]
   1d7e8:	ldp	x29, x30, [sp], #96
   1d7ec:	ret
   1d7f0:	sub	sp, sp, #0x10
   1d7f4:	str	x0, [sp, #8]
   1d7f8:	ldr	x0, [sp, #8]
   1d7fc:	add	x1, x0, #0x4
   1d800:	ldr	x0, [sp, #8]
   1d804:	ldr	w0, [x0, #4]
   1d808:	sxtw	x0, w0
   1d80c:	neg	x0, x0
   1d810:	add	x0, x1, x0
   1d814:	add	sp, sp, #0x10
   1d818:	ret
   1d81c:	sub	sp, sp, #0x10
   1d820:	str	x0, [sp, #8]
   1d824:	ldr	x0, [sp, #8]
   1d828:	ldr	w0, [x0]
   1d82c:	mov	w0, w0
   1d830:	add	x0, x0, #0x4
   1d834:	ldr	x1, [sp, #8]
   1d838:	add	x0, x1, x0
   1d83c:	add	sp, sp, #0x10
   1d840:	ret
   1d844:	sub	sp, sp, #0x10
   1d848:	str	x0, [sp, #8]
   1d84c:	str	x1, [sp]
   1d850:	ldr	x0, [sp]
   1d854:	ldr	w0, [x0]
   1d858:	cmp	w0, #0x0
   1d85c:	cset	w0, eq  // eq = none
   1d860:	and	w0, w0, #0xff
   1d864:	add	sp, sp, #0x10
   1d868:	ret
   1d86c:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
   1d870:	add	x0, x0, #0xdb0
   1d874:	ldr	x0, [x0]
   1d878:	cmp	x0, #0x0
   1d87c:	cset	w0, ne  // ne = any
   1d880:	and	w0, w0, #0xff
   1d884:	ret
   1d888:	stp	x29, x30, [sp, #-32]!
   1d88c:	mov	x29, sp
   1d890:	str	x0, [sp, #24]
   1d894:	bl	1d86c <_Unwind_Backtrace@@GCC_3.3+0x578>
   1d898:	cmp	w0, #0x0
   1d89c:	b.eq	1d8ac <_Unwind_Backtrace@@GCC_3.3+0x5b8>  // b.none
   1d8a0:	ldr	x0, [sp, #24]
   1d8a4:	bl	2dc0 <pthread_mutex_lock@plt>
   1d8a8:	b	1d8b0 <_Unwind_Backtrace@@GCC_3.3+0x5bc>
   1d8ac:	mov	w0, #0x0                   	// #0
   1d8b0:	ldp	x29, x30, [sp], #32
   1d8b4:	ret
   1d8b8:	stp	x29, x30, [sp, #-32]!
   1d8bc:	mov	x29, sp
   1d8c0:	str	x0, [sp, #24]
   1d8c4:	bl	1d86c <_Unwind_Backtrace@@GCC_3.3+0x578>
   1d8c8:	cmp	w0, #0x0
   1d8cc:	b.eq	1d8dc <_Unwind_Backtrace@@GCC_3.3+0x5e8>  // b.none
   1d8d0:	ldr	x0, [sp, #24]
   1d8d4:	bl	2dd0 <pthread_mutex_unlock@plt>
   1d8d8:	b	1d8e0 <_Unwind_Backtrace@@GCC_3.3+0x5ec>
   1d8dc:	mov	w0, #0x0                   	// #0
   1d8e0:	ldp	x29, x30, [sp], #32
   1d8e4:	ret

000000000001d8e8 <__register_frame_info_bases@@GCC_3.0>:
   1d8e8:	stp	x29, x30, [sp, #-48]!
   1d8ec:	mov	x29, sp
   1d8f0:	str	x0, [sp, #40]
   1d8f4:	str	x1, [sp, #32]
   1d8f8:	str	x2, [sp, #24]
   1d8fc:	str	x3, [sp, #16]
   1d900:	ldr	x0, [sp, #40]
   1d904:	cmp	x0, #0x0
   1d908:	b.eq	1d9c8 <__register_frame_info_bases@@GCC_3.0+0xe0>  // b.none
   1d90c:	ldr	x0, [sp, #40]
   1d910:	ldr	w0, [x0]
   1d914:	cmp	w0, #0x0
   1d918:	b.eq	1d9c8 <__register_frame_info_bases@@GCC_3.0+0xe0>  // b.none
   1d91c:	ldr	x0, [sp, #32]
   1d920:	mov	x1, #0xffffffffffffffff    	// #-1
   1d924:	str	x1, [x0]
   1d928:	ldr	x0, [sp, #32]
   1d92c:	ldr	x1, [sp, #24]
   1d930:	str	x1, [x0, #8]
   1d934:	ldr	x0, [sp, #32]
   1d938:	ldr	x1, [sp, #16]
   1d93c:	str	x1, [x0, #16]
   1d940:	ldr	x0, [sp, #32]
   1d944:	ldr	x1, [sp, #40]
   1d948:	str	x1, [x0, #24]
   1d94c:	ldr	x0, [sp, #32]
   1d950:	str	xzr, [x0, #32]
   1d954:	ldr	x0, [sp, #32]
   1d958:	ldrh	w1, [x0, #32]
   1d95c:	orr	w1, w1, #0x7f8
   1d960:	strh	w1, [x0, #32]
   1d964:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1d968:	add	x0, x0, #0x258
   1d96c:	bl	1d888 <_Unwind_Backtrace@@GCC_3.3+0x594>
   1d970:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1d974:	add	x0, x0, #0x240
   1d978:	ldr	x1, [x0]
   1d97c:	ldr	x0, [sp, #32]
   1d980:	str	x1, [x0, #40]
   1d984:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1d988:	add	x0, x0, #0x240
   1d98c:	ldr	x1, [sp, #32]
   1d990:	str	x1, [x0]
   1d994:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1d998:	add	x0, x0, #0x250
   1d99c:	ldr	w0, [x0]
   1d9a0:	cmp	w0, #0x0
   1d9a4:	b.ne	1d9b8 <__register_frame_info_bases@@GCC_3.0+0xd0>  // b.any
   1d9a8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1d9ac:	add	x0, x0, #0x250
   1d9b0:	mov	w1, #0x1                   	// #1
   1d9b4:	str	w1, [x0]
   1d9b8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1d9bc:	add	x0, x0, #0x258
   1d9c0:	bl	1d8b8 <_Unwind_Backtrace@@GCC_3.3+0x5c4>
   1d9c4:	b	1d9cc <__register_frame_info_bases@@GCC_3.0+0xe4>
   1d9c8:	nop
   1d9cc:	ldp	x29, x30, [sp], #48
   1d9d0:	ret

000000000001d9d4 <__register_frame_info@@GLIBC_2.0>:
   1d9d4:	stp	x29, x30, [sp, #-32]!
   1d9d8:	mov	x29, sp
   1d9dc:	str	x0, [sp, #24]
   1d9e0:	str	x1, [sp, #16]
   1d9e4:	mov	x3, #0x0                   	// #0
   1d9e8:	mov	x2, #0x0                   	// #0
   1d9ec:	ldr	x1, [sp, #16]
   1d9f0:	ldr	x0, [sp, #24]
   1d9f4:	bl	2d70 <__register_frame_info_bases@plt>
   1d9f8:	nop
   1d9fc:	ldp	x29, x30, [sp], #32
   1da00:	ret

000000000001da04 <__register_frame@@GLIBC_2.0>:
   1da04:	stp	x29, x30, [sp, #-48]!
   1da08:	mov	x29, sp
   1da0c:	str	x0, [sp, #24]
   1da10:	ldr	x0, [sp, #24]
   1da14:	ldr	w0, [x0]
   1da18:	cmp	w0, #0x0
   1da1c:	b.eq	1da3c <__register_frame@@GLIBC_2.0+0x38>  // b.none
   1da20:	mov	x0, #0x30                  	// #48
   1da24:	bl	2bd0 <malloc@plt>
   1da28:	str	x0, [sp, #40]
   1da2c:	ldr	x1, [sp, #40]
   1da30:	ldr	x0, [sp, #24]
   1da34:	bl	2d60 <__register_frame_info@plt>
   1da38:	b	1da40 <__register_frame@@GLIBC_2.0+0x3c>
   1da3c:	nop
   1da40:	ldp	x29, x30, [sp], #48
   1da44:	ret

000000000001da48 <__register_frame_info_table_bases@@GCC_3.0>:
   1da48:	stp	x29, x30, [sp, #-48]!
   1da4c:	mov	x29, sp
   1da50:	str	x0, [sp, #40]
   1da54:	str	x1, [sp, #32]
   1da58:	str	x2, [sp, #24]
   1da5c:	str	x3, [sp, #16]
   1da60:	ldr	x0, [sp, #32]
   1da64:	mov	x1, #0xffffffffffffffff    	// #-1
   1da68:	str	x1, [x0]
   1da6c:	ldr	x0, [sp, #32]
   1da70:	ldr	x1, [sp, #24]
   1da74:	str	x1, [x0, #8]
   1da78:	ldr	x0, [sp, #32]
   1da7c:	ldr	x1, [sp, #16]
   1da80:	str	x1, [x0, #16]
   1da84:	ldr	x0, [sp, #32]
   1da88:	ldr	x1, [sp, #40]
   1da8c:	str	x1, [x0, #24]
   1da90:	ldr	x0, [sp, #32]
   1da94:	str	xzr, [x0, #32]
   1da98:	ldr	x0, [sp, #32]
   1da9c:	ldrb	w1, [x0, #32]
   1daa0:	orr	w1, w1, #0x2
   1daa4:	strb	w1, [x0, #32]
   1daa8:	ldr	x0, [sp, #32]
   1daac:	ldrh	w1, [x0, #32]
   1dab0:	orr	w1, w1, #0x7f8
   1dab4:	strh	w1, [x0, #32]
   1dab8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dabc:	add	x0, x0, #0x258
   1dac0:	bl	1d888 <_Unwind_Backtrace@@GCC_3.3+0x594>
   1dac4:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dac8:	add	x0, x0, #0x240
   1dacc:	ldr	x1, [x0]
   1dad0:	ldr	x0, [sp, #32]
   1dad4:	str	x1, [x0, #40]
   1dad8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dadc:	add	x0, x0, #0x240
   1dae0:	ldr	x1, [sp, #32]
   1dae4:	str	x1, [x0]
   1dae8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1daec:	add	x0, x0, #0x250
   1daf0:	ldr	w0, [x0]
   1daf4:	cmp	w0, #0x0
   1daf8:	b.ne	1db0c <__register_frame_info_table_bases@@GCC_3.0+0xc4>  // b.any
   1dafc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1db00:	add	x0, x0, #0x250
   1db04:	mov	w1, #0x1                   	// #1
   1db08:	str	w1, [x0]
   1db0c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1db10:	add	x0, x0, #0x258
   1db14:	bl	1d8b8 <_Unwind_Backtrace@@GCC_3.3+0x5c4>
   1db18:	nop
   1db1c:	ldp	x29, x30, [sp], #48
   1db20:	ret

000000000001db24 <__register_frame_info_table@@GLIBC_2.0>:
   1db24:	stp	x29, x30, [sp, #-32]!
   1db28:	mov	x29, sp
   1db2c:	str	x0, [sp, #24]
   1db30:	str	x1, [sp, #16]
   1db34:	mov	x3, #0x0                   	// #0
   1db38:	mov	x2, #0x0                   	// #0
   1db3c:	ldr	x1, [sp, #16]
   1db40:	ldr	x0, [sp, #24]
   1db44:	bl	2c30 <__register_frame_info_table_bases@plt>
   1db48:	nop
   1db4c:	ldp	x29, x30, [sp], #32
   1db50:	ret

000000000001db54 <__register_frame_table@@GLIBC_2.0>:
   1db54:	stp	x29, x30, [sp, #-48]!
   1db58:	mov	x29, sp
   1db5c:	str	x0, [sp, #24]
   1db60:	mov	x0, #0x30                  	// #48
   1db64:	bl	2bd0 <malloc@plt>
   1db68:	str	x0, [sp, #40]
   1db6c:	ldr	x1, [sp, #40]
   1db70:	ldr	x0, [sp, #24]
   1db74:	bl	2d30 <__register_frame_info_table@plt>
   1db78:	nop
   1db7c:	ldp	x29, x30, [sp], #48
   1db80:	ret

000000000001db84 <__deregister_frame_info_bases@@GCC_3.0>:
   1db84:	stp	x29, x30, [sp, #-48]!
   1db88:	mov	x29, sp
   1db8c:	str	x0, [sp, #24]
   1db90:	str	xzr, [sp, #32]
   1db94:	ldr	x0, [sp, #24]
   1db98:	cmp	x0, #0x0
   1db9c:	b.eq	1dbb0 <__deregister_frame_info_bases@@GCC_3.0+0x2c>  // b.none
   1dba0:	ldr	x0, [sp, #24]
   1dba4:	ldr	w0, [x0]
   1dba8:	cmp	w0, #0x0
   1dbac:	b.ne	1dbb8 <__deregister_frame_info_bases@@GCC_3.0+0x34>  // b.any
   1dbb0:	ldr	x0, [sp, #32]
   1dbb4:	b	1dd1c <__deregister_frame_info_bases@@GCC_3.0+0x198>
   1dbb8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dbbc:	add	x0, x0, #0x258
   1dbc0:	bl	1d888 <_Unwind_Backtrace@@GCC_3.3+0x594>
   1dbc4:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dbc8:	add	x0, x0, #0x240
   1dbcc:	str	x0, [sp, #40]
   1dbd0:	b	1dc1c <__deregister_frame_info_bases@@GCC_3.0+0x98>
   1dbd4:	ldr	x0, [sp, #40]
   1dbd8:	ldr	x0, [x0]
   1dbdc:	ldr	x0, [x0, #24]
   1dbe0:	ldr	x1, [sp, #24]
   1dbe4:	cmp	x1, x0
   1dbe8:	b.ne	1dc0c <__deregister_frame_info_bases@@GCC_3.0+0x88>  // b.any
   1dbec:	ldr	x0, [sp, #40]
   1dbf0:	ldr	x0, [x0]
   1dbf4:	str	x0, [sp, #32]
   1dbf8:	ldr	x0, [sp, #32]
   1dbfc:	ldr	x1, [x0, #40]
   1dc00:	ldr	x0, [sp, #40]
   1dc04:	str	x1, [x0]
   1dc08:	b	1dcfc <__deregister_frame_info_bases@@GCC_3.0+0x178>
   1dc0c:	ldr	x0, [sp, #40]
   1dc10:	ldr	x0, [x0]
   1dc14:	add	x0, x0, #0x28
   1dc18:	str	x0, [sp, #40]
   1dc1c:	ldr	x0, [sp, #40]
   1dc20:	ldr	x0, [x0]
   1dc24:	cmp	x0, #0x0
   1dc28:	b.ne	1dbd4 <__deregister_frame_info_bases@@GCC_3.0+0x50>  // b.any
   1dc2c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dc30:	add	x0, x0, #0x248
   1dc34:	str	x0, [sp, #40]
   1dc38:	b	1dce8 <__deregister_frame_info_bases@@GCC_3.0+0x164>
   1dc3c:	ldr	x0, [sp, #40]
   1dc40:	ldr	x0, [x0]
   1dc44:	ldrb	w0, [x0, #32]
   1dc48:	and	w0, w0, #0x1
   1dc4c:	and	w0, w0, #0xff
   1dc50:	cmp	w0, #0x0
   1dc54:	b.eq	1dca0 <__deregister_frame_info_bases@@GCC_3.0+0x11c>  // b.none
   1dc58:	ldr	x0, [sp, #40]
   1dc5c:	ldr	x0, [x0]
   1dc60:	ldr	x0, [x0, #24]
   1dc64:	ldr	x0, [x0]
   1dc68:	ldr	x1, [sp, #24]
   1dc6c:	cmp	x1, x0
   1dc70:	b.ne	1dcd8 <__deregister_frame_info_bases@@GCC_3.0+0x154>  // b.any
   1dc74:	ldr	x0, [sp, #40]
   1dc78:	ldr	x0, [x0]
   1dc7c:	str	x0, [sp, #32]
   1dc80:	ldr	x0, [sp, #32]
   1dc84:	ldr	x1, [x0, #40]
   1dc88:	ldr	x0, [sp, #40]
   1dc8c:	str	x1, [x0]
   1dc90:	ldr	x0, [sp, #32]
   1dc94:	ldr	x0, [x0, #24]
   1dc98:	bl	2d20 <free@plt>
   1dc9c:	b	1dcfc <__deregister_frame_info_bases@@GCC_3.0+0x178>
   1dca0:	ldr	x0, [sp, #40]
   1dca4:	ldr	x0, [x0]
   1dca8:	ldr	x0, [x0, #24]
   1dcac:	ldr	x1, [sp, #24]
   1dcb0:	cmp	x1, x0
   1dcb4:	b.ne	1dcd8 <__deregister_frame_info_bases@@GCC_3.0+0x154>  // b.any
   1dcb8:	ldr	x0, [sp, #40]
   1dcbc:	ldr	x0, [x0]
   1dcc0:	str	x0, [sp, #32]
   1dcc4:	ldr	x0, [sp, #32]
   1dcc8:	ldr	x1, [x0, #40]
   1dccc:	ldr	x0, [sp, #40]
   1dcd0:	str	x1, [x0]
   1dcd4:	b	1dcfc <__deregister_frame_info_bases@@GCC_3.0+0x178>
   1dcd8:	ldr	x0, [sp, #40]
   1dcdc:	ldr	x0, [x0]
   1dce0:	add	x0, x0, #0x28
   1dce4:	str	x0, [sp, #40]
   1dce8:	ldr	x0, [sp, #40]
   1dcec:	ldr	x0, [x0]
   1dcf0:	cmp	x0, #0x0
   1dcf4:	b.ne	1dc3c <__deregister_frame_info_bases@@GCC_3.0+0xb8>  // b.any
   1dcf8:	nop
   1dcfc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1dd00:	add	x0, x0, #0x258
   1dd04:	bl	1d8b8 <_Unwind_Backtrace@@GCC_3.3+0x5c4>
   1dd08:	ldr	x0, [sp, #32]
   1dd0c:	cmp	x0, #0x0
   1dd10:	b.ne	1dd18 <__deregister_frame_info_bases@@GCC_3.0+0x194>  // b.any
   1dd14:	bl	2cb0 <abort@plt>
   1dd18:	ldr	x0, [sp, #32]
   1dd1c:	ldp	x29, x30, [sp], #48
   1dd20:	ret

000000000001dd24 <__deregister_frame_info@@GLIBC_2.0>:
   1dd24:	stp	x29, x30, [sp, #-32]!
   1dd28:	mov	x29, sp
   1dd2c:	str	x0, [sp, #24]
   1dd30:	ldr	x0, [sp, #24]
   1dd34:	bl	2bc0 <__deregister_frame_info_bases@plt>
   1dd38:	ldp	x29, x30, [sp], #32
   1dd3c:	ret

000000000001dd40 <__deregister_frame@@GLIBC_2.0>:
   1dd40:	stp	x29, x30, [sp, #-32]!
   1dd44:	mov	x29, sp
   1dd48:	str	x0, [sp, #24]
   1dd4c:	ldr	x0, [sp, #24]
   1dd50:	ldr	w0, [x0]
   1dd54:	cmp	w0, #0x0
   1dd58:	b.eq	1dd68 <__deregister_frame@@GLIBC_2.0+0x28>  // b.none
   1dd5c:	ldr	x0, [sp, #24]
   1dd60:	bl	2d40 <__deregister_frame_info@plt>
   1dd64:	bl	2d20 <free@plt>
   1dd68:	nop
   1dd6c:	ldp	x29, x30, [sp], #32
   1dd70:	ret
   1dd74:	stp	x29, x30, [sp, #-32]!
   1dd78:	mov	x29, sp
   1dd7c:	strb	w0, [sp, #31]
   1dd80:	str	x1, [sp, #16]
   1dd84:	ldrb	w0, [sp, #31]
   1dd88:	cmp	w0, #0xff
   1dd8c:	b.ne	1dd98 <__deregister_frame@@GLIBC_2.0+0x58>  // b.any
   1dd90:	mov	x0, #0x0                   	// #0
   1dd94:	b	1de04 <__deregister_frame@@GLIBC_2.0+0xc4>
   1dd98:	ldrb	w0, [sp, #31]
   1dd9c:	and	w0, w0, #0x70
   1dda0:	cmp	w0, #0x50
   1dda4:	b.eq	1dde0 <__deregister_frame@@GLIBC_2.0+0xa0>  // b.none
   1dda8:	cmp	w0, #0x50
   1ddac:	b.gt	1de00 <__deregister_frame@@GLIBC_2.0+0xc0>
   1ddb0:	cmp	w0, #0x30
   1ddb4:	b.eq	1ddf4 <__deregister_frame@@GLIBC_2.0+0xb4>  // b.none
   1ddb8:	cmp	w0, #0x30
   1ddbc:	b.gt	1de00 <__deregister_frame@@GLIBC_2.0+0xc0>
   1ddc0:	cmp	w0, #0x20
   1ddc4:	b.eq	1dde8 <__deregister_frame@@GLIBC_2.0+0xa8>  // b.none
   1ddc8:	cmp	w0, #0x20
   1ddcc:	b.gt	1de00 <__deregister_frame@@GLIBC_2.0+0xc0>
   1ddd0:	cmp	w0, #0x0
   1ddd4:	b.eq	1dde0 <__deregister_frame@@GLIBC_2.0+0xa0>  // b.none
   1ddd8:	cmp	w0, #0x10
   1dddc:	b.ne	1de00 <__deregister_frame@@GLIBC_2.0+0xc0>  // b.any
   1dde0:	mov	x0, #0x0                   	// #0
   1dde4:	b	1de04 <__deregister_frame@@GLIBC_2.0+0xc4>
   1dde8:	ldr	x0, [sp, #16]
   1ddec:	ldr	x0, [x0, #8]
   1ddf0:	b	1de04 <__deregister_frame@@GLIBC_2.0+0xc4>
   1ddf4:	ldr	x0, [sp, #16]
   1ddf8:	ldr	x0, [x0, #16]
   1ddfc:	b	1de04 <__deregister_frame@@GLIBC_2.0+0xc4>
   1de00:	bl	2cb0 <abort@plt>
   1de04:	ldp	x29, x30, [sp], #32
   1de08:	ret
   1de0c:	stp	x29, x30, [sp, #-80]!
   1de10:	mov	x29, sp
   1de14:	str	x0, [sp, #24]
   1de18:	ldr	x0, [sp, #24]
   1de1c:	add	x0, x0, #0x9
   1de20:	str	x0, [sp, #72]
   1de24:	ldr	x0, [sp, #72]
   1de28:	bl	2b20 <strlen@plt>
   1de2c:	add	x0, x0, #0x1
   1de30:	ldr	x1, [sp, #72]
   1de34:	add	x0, x1, x0
   1de38:	str	x0, [sp, #64]
   1de3c:	ldr	x0, [sp, #24]
   1de40:	ldrb	w0, [x0, #8]
   1de44:	cmp	w0, #0x3
   1de48:	cset	w0, hi  // hi = pmore
   1de4c:	and	w0, w0, #0xff
   1de50:	and	x0, x0, #0xff
   1de54:	cmp	x0, #0x0
   1de58:	b.eq	1de94 <__deregister_frame@@GLIBC_2.0+0x154>  // b.none
   1de5c:	ldr	x0, [sp, #64]
   1de60:	ldrb	w0, [x0]
   1de64:	cmp	w0, #0x8
   1de68:	b.ne	1de80 <__deregister_frame@@GLIBC_2.0+0x140>  // b.any
   1de6c:	ldr	x0, [sp, #64]
   1de70:	add	x0, x0, #0x1
   1de74:	ldrb	w0, [x0]
   1de78:	cmp	w0, #0x0
   1de7c:	b.eq	1de88 <__deregister_frame@@GLIBC_2.0+0x148>  // b.none
   1de80:	mov	w0, #0xff                  	// #255
   1de84:	b	1dfc4 <__deregister_frame@@GLIBC_2.0+0x284>
   1de88:	ldr	x0, [sp, #64]
   1de8c:	add	x0, x0, #0x2
   1de90:	str	x0, [sp, #64]
   1de94:	ldr	x0, [sp, #72]
   1de98:	ldrb	w0, [x0]
   1de9c:	cmp	w0, #0x7a
   1dea0:	b.eq	1deac <__deregister_frame@@GLIBC_2.0+0x16c>  // b.none
   1dea4:	mov	w0, #0x0                   	// #0
   1dea8:	b	1dfc4 <__deregister_frame@@GLIBC_2.0+0x284>
   1deac:	add	x0, sp, #0x30
   1deb0:	mov	x1, x0
   1deb4:	ldr	x0, [sp, #64]
   1deb8:	bl	1d468 <_Unwind_Backtrace@@GCC_3.3+0x174>
   1debc:	str	x0, [sp, #64]
   1dec0:	add	x0, sp, #0x28
   1dec4:	mov	x1, x0
   1dec8:	ldr	x0, [sp, #64]
   1decc:	bl	1d4dc <_Unwind_Backtrace@@GCC_3.3+0x1e8>
   1ded0:	str	x0, [sp, #64]
   1ded4:	ldr	x0, [sp, #24]
   1ded8:	ldrb	w0, [x0, #8]
   1dedc:	cmp	w0, #0x1
   1dee0:	b.ne	1def4 <__deregister_frame@@GLIBC_2.0+0x1b4>  // b.any
   1dee4:	ldr	x0, [sp, #64]
   1dee8:	add	x0, x0, #0x1
   1deec:	str	x0, [sp, #64]
   1def0:	b	1df08 <__deregister_frame@@GLIBC_2.0+0x1c8>
   1def4:	add	x0, sp, #0x30
   1def8:	mov	x1, x0
   1defc:	ldr	x0, [sp, #64]
   1df00:	bl	1d468 <_Unwind_Backtrace@@GCC_3.3+0x174>
   1df04:	str	x0, [sp, #64]
   1df08:	ldr	x0, [sp, #72]
   1df0c:	add	x0, x0, #0x1
   1df10:	str	x0, [sp, #72]
   1df14:	add	x0, sp, #0x30
   1df18:	mov	x1, x0
   1df1c:	ldr	x0, [sp, #64]
   1df20:	bl	1d468 <_Unwind_Backtrace@@GCC_3.3+0x174>
   1df24:	str	x0, [sp, #64]
   1df28:	ldr	x0, [sp, #72]
   1df2c:	ldrb	w0, [x0]
   1df30:	cmp	w0, #0x52
   1df34:	b.ne	1df44 <__deregister_frame@@GLIBC_2.0+0x204>  // b.any
   1df38:	ldr	x0, [sp, #64]
   1df3c:	ldrb	w0, [x0]
   1df40:	b	1dfc4 <__deregister_frame@@GLIBC_2.0+0x284>
   1df44:	ldr	x0, [sp, #72]
   1df48:	ldrb	w0, [x0]
   1df4c:	cmp	w0, #0x50
   1df50:	b.ne	1df8c <__deregister_frame@@GLIBC_2.0+0x24c>  // b.any
   1df54:	ldr	x0, [sp, #64]
   1df58:	ldrb	w0, [x0]
   1df5c:	and	w0, w0, #0x7f
   1df60:	and	w4, w0, #0xff
   1df64:	ldr	x0, [sp, #64]
   1df68:	add	x0, x0, #0x1
   1df6c:	add	x1, sp, #0x38
   1df70:	mov	x3, x1
   1df74:	mov	x2, x0
   1df78:	mov	x1, #0x0                   	// #0
   1df7c:	mov	w0, w4
   1df80:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1df84:	str	x0, [sp, #64]
   1df88:	b	1dfb4 <__deregister_frame@@GLIBC_2.0+0x274>
   1df8c:	ldr	x0, [sp, #72]
   1df90:	ldrb	w0, [x0]
   1df94:	cmp	w0, #0x4c
   1df98:	b.ne	1dfac <__deregister_frame@@GLIBC_2.0+0x26c>  // b.any
   1df9c:	ldr	x0, [sp, #64]
   1dfa0:	add	x0, x0, #0x1
   1dfa4:	str	x0, [sp, #64]
   1dfa8:	b	1dfb4 <__deregister_frame@@GLIBC_2.0+0x274>
   1dfac:	mov	w0, #0x0                   	// #0
   1dfb0:	b	1dfc4 <__deregister_frame@@GLIBC_2.0+0x284>
   1dfb4:	ldr	x0, [sp, #72]
   1dfb8:	add	x0, x0, #0x1
   1dfbc:	str	x0, [sp, #72]
   1dfc0:	b	1df28 <__deregister_frame@@GLIBC_2.0+0x1e8>
   1dfc4:	ldp	x29, x30, [sp], #80
   1dfc8:	ret
   1dfcc:	stp	x29, x30, [sp, #-32]!
   1dfd0:	mov	x29, sp
   1dfd4:	str	x0, [sp, #24]
   1dfd8:	ldr	x0, [sp, #24]
   1dfdc:	bl	1d7f0 <_Unwind_Backtrace@@GCC_3.3+0x4fc>
   1dfe0:	bl	1de0c <__deregister_frame@@GLIBC_2.0+0xcc>
   1dfe4:	ldp	x29, x30, [sp], #32
   1dfe8:	ret
   1dfec:	sub	sp, sp, #0x30
   1dff0:	str	x0, [sp, #24]
   1dff4:	str	x1, [sp, #16]
   1dff8:	str	x2, [sp, #8]
   1dffc:	ldr	x0, [sp, #16]
   1e000:	add	x0, x0, #0x8
   1e004:	ldr	x0, [x0]
   1e008:	str	x0, [sp, #40]
   1e00c:	ldr	x0, [sp, #8]
   1e010:	add	x0, x0, #0x8
   1e014:	ldr	x0, [x0]
   1e018:	str	x0, [sp, #32]
   1e01c:	ldr	x1, [sp, #40]
   1e020:	ldr	x0, [sp, #32]
   1e024:	cmp	x1, x0
   1e028:	b.ls	1e034 <__deregister_frame@@GLIBC_2.0+0x2f4>  // b.plast
   1e02c:	mov	w0, #0x1                   	// #1
   1e030:	b	1e050 <__deregister_frame@@GLIBC_2.0+0x310>
   1e034:	ldr	x1, [sp, #40]
   1e038:	ldr	x0, [sp, #32]
   1e03c:	cmp	x1, x0
   1e040:	b.cs	1e04c <__deregister_frame@@GLIBC_2.0+0x30c>  // b.hs, b.nlast
   1e044:	mov	w0, #0xffffffff            	// #-1
   1e048:	b	1e050 <__deregister_frame@@GLIBC_2.0+0x310>
   1e04c:	mov	w0, #0x0                   	// #0
   1e050:	add	sp, sp, #0x30
   1e054:	ret
   1e058:	stp	x29, x30, [sp, #-80]!
   1e05c:	mov	x29, sp
   1e060:	str	x0, [sp, #40]
   1e064:	str	x1, [sp, #32]
   1e068:	str	x2, [sp, #24]
   1e06c:	ldr	x0, [sp, #40]
   1e070:	ldrh	w0, [x0, #32]
   1e074:	ubfx	x0, x0, #3, #8
   1e078:	and	w0, w0, #0xff
   1e07c:	ldr	x1, [sp, #40]
   1e080:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1e084:	str	x0, [sp, #72]
   1e088:	ldr	x0, [sp, #40]
   1e08c:	ldrh	w0, [x0, #32]
   1e090:	ubfx	x0, x0, #3, #8
   1e094:	and	w4, w0, #0xff
   1e098:	ldr	x0, [sp, #32]
   1e09c:	add	x0, x0, #0x8
   1e0a0:	add	x1, sp, #0x40
   1e0a4:	mov	x3, x1
   1e0a8:	mov	x2, x0
   1e0ac:	ldr	x1, [sp, #72]
   1e0b0:	mov	w0, w4
   1e0b4:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1e0b8:	ldr	x0, [sp, #40]
   1e0bc:	ldrh	w0, [x0, #32]
   1e0c0:	ubfx	x0, x0, #3, #8
   1e0c4:	and	w4, w0, #0xff
   1e0c8:	ldr	x0, [sp, #24]
   1e0cc:	add	x0, x0, #0x8
   1e0d0:	add	x1, sp, #0x38
   1e0d4:	mov	x3, x1
   1e0d8:	mov	x2, x0
   1e0dc:	ldr	x1, [sp, #72]
   1e0e0:	mov	w0, w4
   1e0e4:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1e0e8:	ldr	x1, [sp, #64]
   1e0ec:	ldr	x0, [sp, #56]
   1e0f0:	cmp	x1, x0
   1e0f4:	b.ls	1e100 <__deregister_frame@@GLIBC_2.0+0x3c0>  // b.plast
   1e0f8:	mov	w0, #0x1                   	// #1
   1e0fc:	b	1e11c <__deregister_frame@@GLIBC_2.0+0x3dc>
   1e100:	ldr	x1, [sp, #64]
   1e104:	ldr	x0, [sp, #56]
   1e108:	cmp	x1, x0
   1e10c:	b.cs	1e118 <__deregister_frame@@GLIBC_2.0+0x3d8>  // b.hs, b.nlast
   1e110:	mov	w0, #0xffffffff            	// #-1
   1e114:	b	1e11c <__deregister_frame@@GLIBC_2.0+0x3dc>
   1e118:	mov	w0, #0x0                   	// #0
   1e11c:	ldp	x29, x30, [sp], #80
   1e120:	ret
   1e124:	stp	x29, x30, [sp, #-96]!
   1e128:	mov	x29, sp
   1e12c:	str	x19, [sp, #16]
   1e130:	str	x0, [sp, #56]
   1e134:	str	x1, [sp, #48]
   1e138:	str	x2, [sp, #40]
   1e13c:	ldr	x0, [sp, #48]
   1e140:	bl	1dfcc <__deregister_frame@@GLIBC_2.0+0x28c>
   1e144:	str	w0, [sp, #92]
   1e148:	ldr	w0, [sp, #92]
   1e14c:	and	w19, w0, #0xff
   1e150:	ldr	w0, [sp, #92]
   1e154:	and	w0, w0, #0xff
   1e158:	ldr	x1, [sp, #56]
   1e15c:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1e160:	mov	x4, x0
   1e164:	ldr	x0, [sp, #48]
   1e168:	add	x0, x0, #0x8
   1e16c:	add	x1, sp, #0x50
   1e170:	mov	x3, x1
   1e174:	mov	x2, x0
   1e178:	mov	x1, x4
   1e17c:	mov	w0, w19
   1e180:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1e184:	ldr	x0, [sp, #40]
   1e188:	bl	1dfcc <__deregister_frame@@GLIBC_2.0+0x28c>
   1e18c:	str	w0, [sp, #88]
   1e190:	ldr	w0, [sp, #88]
   1e194:	and	w19, w0, #0xff
   1e198:	ldr	w0, [sp, #88]
   1e19c:	and	w0, w0, #0xff
   1e1a0:	ldr	x1, [sp, #56]
   1e1a4:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1e1a8:	mov	x4, x0
   1e1ac:	ldr	x0, [sp, #40]
   1e1b0:	add	x0, x0, #0x8
   1e1b4:	add	x1, sp, #0x48
   1e1b8:	mov	x3, x1
   1e1bc:	mov	x2, x0
   1e1c0:	mov	x1, x4
   1e1c4:	mov	w0, w19
   1e1c8:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1e1cc:	ldr	x1, [sp, #80]
   1e1d0:	ldr	x0, [sp, #72]
   1e1d4:	cmp	x1, x0
   1e1d8:	b.ls	1e1e4 <__deregister_frame@@GLIBC_2.0+0x4a4>  // b.plast
   1e1dc:	mov	w0, #0x1                   	// #1
   1e1e0:	b	1e200 <__deregister_frame@@GLIBC_2.0+0x4c0>
   1e1e4:	ldr	x1, [sp, #80]
   1e1e8:	ldr	x0, [sp, #72]
   1e1ec:	cmp	x1, x0
   1e1f0:	b.cs	1e1fc <__deregister_frame@@GLIBC_2.0+0x4bc>  // b.hs, b.nlast
   1e1f4:	mov	w0, #0xffffffff            	// #-1
   1e1f8:	b	1e200 <__deregister_frame@@GLIBC_2.0+0x4c0>
   1e1fc:	mov	w0, #0x0                   	// #0
   1e200:	ldr	x19, [sp, #16]
   1e204:	ldp	x29, x30, [sp], #96
   1e208:	ret
   1e20c:	stp	x29, x30, [sp, #-48]!
   1e210:	mov	x29, sp
   1e214:	str	x0, [sp, #24]
   1e218:	str	x1, [sp, #16]
   1e21c:	ldr	x0, [sp, #16]
   1e220:	cmp	x0, #0x0
   1e224:	b.ne	1e230 <__deregister_frame@@GLIBC_2.0+0x4f0>  // b.any
   1e228:	mov	w0, #0x0                   	// #0
   1e22c:	b	1e2ac <__deregister_frame@@GLIBC_2.0+0x56c>
   1e230:	ldr	x0, [sp, #16]
   1e234:	add	x0, x0, #0x2
   1e238:	lsl	x0, x0, #3
   1e23c:	str	x0, [sp, #40]
   1e240:	ldr	x0, [sp, #40]
   1e244:	bl	2bd0 <malloc@plt>
   1e248:	mov	x1, x0
   1e24c:	ldr	x0, [sp, #24]
   1e250:	str	x1, [x0]
   1e254:	ldr	x0, [sp, #24]
   1e258:	ldr	x0, [x0]
   1e25c:	cmp	x0, #0x0
   1e260:	b.eq	1e2a8 <__deregister_frame@@GLIBC_2.0+0x568>  // b.none
   1e264:	ldr	x0, [sp, #24]
   1e268:	ldr	x0, [x0]
   1e26c:	str	xzr, [x0, #8]
   1e270:	ldr	x0, [sp, #40]
   1e274:	bl	2bd0 <malloc@plt>
   1e278:	mov	x1, x0
   1e27c:	ldr	x0, [sp, #24]
   1e280:	str	x1, [x0, #8]
   1e284:	ldr	x0, [sp, #24]
   1e288:	ldr	x0, [x0, #8]
   1e28c:	cmp	x0, #0x0
   1e290:	b.eq	1e2a0 <__deregister_frame@@GLIBC_2.0+0x560>  // b.none
   1e294:	ldr	x0, [sp, #24]
   1e298:	ldr	x0, [x0, #8]
   1e29c:	str	xzr, [x0, #8]
   1e2a0:	mov	w0, #0x1                   	// #1
   1e2a4:	b	1e2ac <__deregister_frame@@GLIBC_2.0+0x56c>
   1e2a8:	mov	w0, #0x0                   	// #0
   1e2ac:	ldp	x29, x30, [sp], #48
   1e2b0:	ret
   1e2b4:	sub	sp, sp, #0x10
   1e2b8:	str	x0, [sp, #8]
   1e2bc:	str	x1, [sp]
   1e2c0:	ldr	x0, [sp, #8]
   1e2c4:	ldr	x0, [x0]
   1e2c8:	cmp	x0, #0x0
   1e2cc:	b.eq	1e2f8 <__deregister_frame@@GLIBC_2.0+0x5b8>  // b.none
   1e2d0:	ldr	x0, [sp, #8]
   1e2d4:	ldr	x2, [x0]
   1e2d8:	ldr	x0, [sp, #8]
   1e2dc:	ldr	x1, [x0]
   1e2e0:	ldr	x0, [x1, #8]
   1e2e4:	add	x3, x0, #0x1
   1e2e8:	str	x3, [x1, #8]
   1e2ec:	add	x0, x0, #0x2
   1e2f0:	ldr	x1, [sp]
   1e2f4:	str	x1, [x2, x0, lsl #3]
   1e2f8:	nop
   1e2fc:	add	sp, sp, #0x10
   1e300:	ret
   1e304:	stp	x29, x30, [sp, #-96]!
   1e308:	mov	x29, sp
   1e30c:	str	x0, [sp, #40]
   1e310:	str	x1, [sp, #32]
   1e314:	str	x2, [sp, #24]
   1e318:	str	x3, [sp, #16]
   1e31c:	ldr	x0, [sp, #24]
   1e320:	ldr	x0, [x0, #8]
   1e324:	str	x0, [sp, #48]
   1e328:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1e32c:	add	x0, x0, #0x410
   1e330:	str	x0, [sp, #88]
   1e334:	str	xzr, [sp, #80]
   1e338:	b	1e418 <__deregister_frame@@GLIBC_2.0+0x6d8>
   1e33c:	ldr	x0, [sp, #88]
   1e340:	str	x0, [sp, #56]
   1e344:	b	1e39c <__deregister_frame@@GLIBC_2.0+0x65c>
   1e348:	ldr	x0, [sp, #24]
   1e34c:	add	x0, x0, #0x10
   1e350:	ldr	x1, [sp, #56]
   1e354:	sub	x0, x1, x0
   1e358:	asr	x0, x0, #3
   1e35c:	mov	x1, x0
   1e360:	ldr	x0, [sp, #16]
   1e364:	add	x1, x1, #0x2
   1e368:	ldr	x0, [x0, x1, lsl #3]
   1e36c:	str	x0, [sp, #88]
   1e370:	ldr	x0, [sp, #24]
   1e374:	add	x0, x0, #0x10
   1e378:	ldr	x1, [sp, #56]
   1e37c:	sub	x0, x1, x0
   1e380:	asr	x0, x0, #3
   1e384:	mov	x1, x0
   1e388:	ldr	x0, [sp, #16]
   1e38c:	add	x1, x1, #0x2
   1e390:	str	xzr, [x0, x1, lsl #3]
   1e394:	ldr	x0, [sp, #88]
   1e398:	str	x0, [sp, #56]
   1e39c:	ldr	x1, [sp, #56]
   1e3a0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1e3a4:	add	x0, x0, #0x410
   1e3a8:	cmp	x1, x0
   1e3ac:	b.eq	1e3e0 <__deregister_frame@@GLIBC_2.0+0x6a0>  // b.none
   1e3b0:	ldr	x0, [sp, #24]
   1e3b4:	ldr	x1, [sp, #80]
   1e3b8:	add	x1, x1, #0x2
   1e3bc:	ldr	x1, [x0, x1, lsl #3]
   1e3c0:	ldr	x0, [sp, #56]
   1e3c4:	ldr	x0, [x0]
   1e3c8:	ldr	x3, [sp, #32]
   1e3cc:	mov	x2, x0
   1e3d0:	ldr	x0, [sp, #40]
   1e3d4:	blr	x3
   1e3d8:	cmp	w0, #0x0
   1e3dc:	b.lt	1e348 <__deregister_frame@@GLIBC_2.0+0x608>  // b.tstop
   1e3e0:	ldr	x0, [sp, #16]
   1e3e4:	ldr	x1, [sp, #80]
   1e3e8:	add	x1, x1, #0x2
   1e3ec:	ldr	x2, [sp, #88]
   1e3f0:	str	x2, [x0, x1, lsl #3]
   1e3f4:	ldr	x0, [sp, #80]
   1e3f8:	add	x0, x0, #0x2
   1e3fc:	lsl	x0, x0, #3
   1e400:	ldr	x1, [sp, #24]
   1e404:	add	x0, x1, x0
   1e408:	str	x0, [sp, #88]
   1e40c:	ldr	x0, [sp, #80]
   1e410:	add	x0, x0, #0x1
   1e414:	str	x0, [sp, #80]
   1e418:	ldr	x1, [sp, #80]
   1e41c:	ldr	x0, [sp, #48]
   1e420:	cmp	x1, x0
   1e424:	b.cc	1e33c <__deregister_frame@@GLIBC_2.0+0x5fc>  // b.lo, b.ul, b.last
   1e428:	str	xzr, [sp, #64]
   1e42c:	ldr	x0, [sp, #64]
   1e430:	str	x0, [sp, #72]
   1e434:	ldr	x0, [sp, #72]
   1e438:	str	x0, [sp, #80]
   1e43c:	b	1e4b8 <__deregister_frame@@GLIBC_2.0+0x778>
   1e440:	ldr	x0, [sp, #16]
   1e444:	ldr	x1, [sp, #80]
   1e448:	add	x1, x1, #0x2
   1e44c:	ldr	x0, [x0, x1, lsl #3]
   1e450:	cmp	x0, #0x0
   1e454:	b.eq	1e484 <__deregister_frame@@GLIBC_2.0+0x744>  // b.none
   1e458:	ldr	x0, [sp, #72]
   1e45c:	add	x1, x0, #0x1
   1e460:	str	x1, [sp, #72]
   1e464:	ldr	x1, [sp, #24]
   1e468:	ldr	x2, [sp, #80]
   1e46c:	add	x2, x2, #0x2
   1e470:	ldr	x2, [x1, x2, lsl #3]
   1e474:	ldr	x1, [sp, #24]
   1e478:	add	x0, x0, #0x2
   1e47c:	str	x2, [x1, x0, lsl #3]
   1e480:	b	1e4ac <__deregister_frame@@GLIBC_2.0+0x76c>
   1e484:	ldr	x0, [sp, #64]
   1e488:	add	x1, x0, #0x1
   1e48c:	str	x1, [sp, #64]
   1e490:	ldr	x1, [sp, #24]
   1e494:	ldr	x2, [sp, #80]
   1e498:	add	x2, x2, #0x2
   1e49c:	ldr	x2, [x1, x2, lsl #3]
   1e4a0:	ldr	x1, [sp, #16]
   1e4a4:	add	x0, x0, #0x2
   1e4a8:	str	x2, [x1, x0, lsl #3]
   1e4ac:	ldr	x0, [sp, #80]
   1e4b0:	add	x0, x0, #0x1
   1e4b4:	str	x0, [sp, #80]
   1e4b8:	ldr	x1, [sp, #80]
   1e4bc:	ldr	x0, [sp, #48]
   1e4c0:	cmp	x1, x0
   1e4c4:	b.cc	1e440 <__deregister_frame@@GLIBC_2.0+0x700>  // b.lo, b.ul, b.last
   1e4c8:	ldr	x0, [sp, #24]
   1e4cc:	ldr	x1, [sp, #72]
   1e4d0:	str	x1, [x0, #8]
   1e4d4:	ldr	x0, [sp, #16]
   1e4d8:	ldr	x1, [sp, #64]
   1e4dc:	str	x1, [x0, #8]
   1e4e0:	nop
   1e4e4:	ldp	x29, x30, [sp], #96
   1e4e8:	ret
   1e4ec:	stp	x29, x30, [sp, #-64]!
   1e4f0:	mov	x29, sp
   1e4f4:	str	x0, [sp, #40]
   1e4f8:	str	x1, [sp, #32]
   1e4fc:	str	x2, [sp, #24]
   1e500:	str	w3, [sp, #20]
   1e504:	str	w4, [sp, #16]
   1e508:	ldr	w0, [sp, #20]
   1e50c:	str	w0, [sp, #60]
   1e510:	ldr	w0, [sp, #60]
   1e514:	lsl	w0, w0, #1
   1e518:	add	w0, w0, #0x1
   1e51c:	str	w0, [sp, #56]
   1e520:	b	1e640 <__deregister_frame@@GLIBC_2.0+0x900>
   1e524:	ldr	w0, [sp, #56]
   1e528:	add	w0, w0, #0x1
   1e52c:	ldr	w1, [sp, #16]
   1e530:	cmp	w1, w0
   1e534:	b.le	1e58c <__deregister_frame@@GLIBC_2.0+0x84c>
   1e538:	ldrsw	x0, [sp, #56]
   1e53c:	lsl	x0, x0, #3
   1e540:	ldr	x1, [sp, #24]
   1e544:	add	x0, x1, x0
   1e548:	ldr	x4, [x0]
   1e54c:	ldrsw	x0, [sp, #56]
   1e550:	add	x0, x0, #0x1
   1e554:	lsl	x0, x0, #3
   1e558:	ldr	x1, [sp, #24]
   1e55c:	add	x0, x1, x0
   1e560:	ldr	x0, [x0]
   1e564:	ldr	x3, [sp, #32]
   1e568:	mov	x2, x0
   1e56c:	mov	x1, x4
   1e570:	ldr	x0, [sp, #40]
   1e574:	blr	x3
   1e578:	cmp	w0, #0x0
   1e57c:	b.ge	1e58c <__deregister_frame@@GLIBC_2.0+0x84c>  // b.tcont
   1e580:	ldr	w0, [sp, #56]
   1e584:	add	w0, w0, #0x1
   1e588:	str	w0, [sp, #56]
   1e58c:	ldrsw	x0, [sp, #60]
   1e590:	lsl	x0, x0, #3
   1e594:	ldr	x1, [sp, #24]
   1e598:	add	x0, x1, x0
   1e59c:	ldr	x4, [x0]
   1e5a0:	ldrsw	x0, [sp, #56]
   1e5a4:	lsl	x0, x0, #3
   1e5a8:	ldr	x1, [sp, #24]
   1e5ac:	add	x0, x1, x0
   1e5b0:	ldr	x0, [x0]
   1e5b4:	ldr	x3, [sp, #32]
   1e5b8:	mov	x2, x0
   1e5bc:	mov	x1, x4
   1e5c0:	ldr	x0, [sp, #40]
   1e5c4:	blr	x3
   1e5c8:	cmp	w0, #0x0
   1e5cc:	b.ge	1e654 <__deregister_frame@@GLIBC_2.0+0x914>  // b.tcont
   1e5d0:	ldrsw	x0, [sp, #60]
   1e5d4:	lsl	x0, x0, #3
   1e5d8:	ldr	x1, [sp, #24]
   1e5dc:	add	x0, x1, x0
   1e5e0:	ldr	x0, [x0]
   1e5e4:	str	x0, [sp, #48]
   1e5e8:	ldrsw	x0, [sp, #56]
   1e5ec:	lsl	x0, x0, #3
   1e5f0:	ldr	x1, [sp, #24]
   1e5f4:	add	x1, x1, x0
   1e5f8:	ldrsw	x0, [sp, #60]
   1e5fc:	lsl	x0, x0, #3
   1e600:	ldr	x2, [sp, #24]
   1e604:	add	x0, x2, x0
   1e608:	ldr	x1, [x1]
   1e60c:	str	x1, [x0]
   1e610:	ldrsw	x0, [sp, #56]
   1e614:	lsl	x0, x0, #3
   1e618:	ldr	x1, [sp, #24]
   1e61c:	add	x0, x1, x0
   1e620:	ldr	x1, [sp, #48]
   1e624:	str	x1, [x0]
   1e628:	ldr	w0, [sp, #56]
   1e62c:	str	w0, [sp, #60]
   1e630:	ldr	w0, [sp, #60]
   1e634:	lsl	w0, w0, #1
   1e638:	add	w0, w0, #0x1
   1e63c:	str	w0, [sp, #56]
   1e640:	ldr	w1, [sp, #56]
   1e644:	ldr	w0, [sp, #16]
   1e648:	cmp	w1, w0
   1e64c:	b.lt	1e524 <__deregister_frame@@GLIBC_2.0+0x7e4>  // b.tstop
   1e650:	b	1e658 <__deregister_frame@@GLIBC_2.0+0x918>
   1e654:	nop
   1e658:	nop
   1e65c:	ldp	x29, x30, [sp], #64
   1e660:	ret
   1e664:	stp	x29, x30, [sp, #-80]!
   1e668:	mov	x29, sp
   1e66c:	str	x0, [sp, #40]
   1e670:	str	x1, [sp, #32]
   1e674:	str	x2, [sp, #24]
   1e678:	ldr	x0, [sp, #24]
   1e67c:	add	x0, x0, #0x10
   1e680:	str	x0, [sp, #64]
   1e684:	ldr	x0, [sp, #24]
   1e688:	ldr	x0, [x0, #8]
   1e68c:	str	x0, [sp, #56]
   1e690:	ldr	x0, [sp, #56]
   1e694:	lsr	x0, x0, #1
   1e698:	sub	w0, w0, #0x1
   1e69c:	str	w0, [sp, #76]
   1e6a0:	b	1e6cc <__deregister_frame@@GLIBC_2.0+0x98c>
   1e6a4:	ldr	x0, [sp, #56]
   1e6a8:	mov	w4, w0
   1e6ac:	ldr	w3, [sp, #76]
   1e6b0:	ldr	x2, [sp, #64]
   1e6b4:	ldr	x1, [sp, #32]
   1e6b8:	ldr	x0, [sp, #40]
   1e6bc:	bl	1e4ec <__deregister_frame@@GLIBC_2.0+0x7ac>
   1e6c0:	ldr	w0, [sp, #76]
   1e6c4:	sub	w0, w0, #0x1
   1e6c8:	str	w0, [sp, #76]
   1e6cc:	ldr	w0, [sp, #76]
   1e6d0:	cmp	w0, #0x0
   1e6d4:	b.ge	1e6a4 <__deregister_frame@@GLIBC_2.0+0x964>  // b.tcont
   1e6d8:	ldr	x0, [sp, #56]
   1e6dc:	sub	w0, w0, #0x1
   1e6e0:	str	w0, [sp, #76]
   1e6e4:	b	1e74c <__deregister_frame@@GLIBC_2.0+0xa0c>
   1e6e8:	ldr	x0, [sp, #64]
   1e6ec:	ldr	x0, [x0]
   1e6f0:	str	x0, [sp, #48]
   1e6f4:	ldrsw	x0, [sp, #76]
   1e6f8:	lsl	x0, x0, #3
   1e6fc:	ldr	x1, [sp, #64]
   1e700:	add	x0, x1, x0
   1e704:	ldr	x1, [x0]
   1e708:	ldr	x0, [sp, #64]
   1e70c:	str	x1, [x0]
   1e710:	ldrsw	x0, [sp, #76]
   1e714:	lsl	x0, x0, #3
   1e718:	ldr	x1, [sp, #64]
   1e71c:	add	x0, x1, x0
   1e720:	ldr	x1, [sp, #48]
   1e724:	str	x1, [x0]
   1e728:	ldr	w4, [sp, #76]
   1e72c:	mov	w3, #0x0                   	// #0
   1e730:	ldr	x2, [sp, #64]
   1e734:	ldr	x1, [sp, #32]
   1e738:	ldr	x0, [sp, #40]
   1e73c:	bl	1e4ec <__deregister_frame@@GLIBC_2.0+0x7ac>
   1e740:	ldr	w0, [sp, #76]
   1e744:	sub	w0, w0, #0x1
   1e748:	str	w0, [sp, #76]
   1e74c:	ldr	w0, [sp, #76]
   1e750:	cmp	w0, #0x0
   1e754:	b.gt	1e6e8 <__deregister_frame@@GLIBC_2.0+0x9a8>
   1e758:	nop
   1e75c:	nop
   1e760:	ldp	x29, x30, [sp], #80
   1e764:	ret
   1e768:	stp	x29, x30, [sp, #-80]!
   1e76c:	mov	x29, sp
   1e770:	str	x0, [sp, #40]
   1e774:	str	x1, [sp, #32]
   1e778:	str	x2, [sp, #24]
   1e77c:	str	x3, [sp, #16]
   1e780:	ldr	x0, [sp, #16]
   1e784:	ldr	x0, [x0, #8]
   1e788:	str	x0, [sp, #64]
   1e78c:	ldr	x0, [sp, #64]
   1e790:	cmp	x0, #0x0
   1e794:	b.eq	1e880 <__deregister_frame@@GLIBC_2.0+0xb40>  // b.none
   1e798:	ldr	x0, [sp, #24]
   1e79c:	ldr	x0, [x0, #8]
   1e7a0:	str	x0, [sp, #72]
   1e7a4:	ldr	x0, [sp, #64]
   1e7a8:	sub	x0, x0, #0x1
   1e7ac:	str	x0, [sp, #64]
   1e7b0:	ldr	x0, [sp, #16]
   1e7b4:	ldr	x1, [sp, #64]
   1e7b8:	add	x1, x1, #0x2
   1e7bc:	ldr	x0, [x0, x1, lsl #3]
   1e7c0:	str	x0, [sp, #56]
   1e7c4:	b	1e800 <__deregister_frame@@GLIBC_2.0+0xac0>
   1e7c8:	ldr	x0, [sp, #72]
   1e7cc:	sub	x2, x0, #0x1
   1e7d0:	ldr	x1, [sp, #72]
   1e7d4:	ldr	x0, [sp, #64]
   1e7d8:	add	x1, x1, x0
   1e7dc:	ldr	x0, [sp, #24]
   1e7e0:	add	x2, x2, #0x2
   1e7e4:	ldr	x2, [x0, x2, lsl #3]
   1e7e8:	ldr	x0, [sp, #24]
   1e7ec:	add	x1, x1, #0x2
   1e7f0:	str	x2, [x0, x1, lsl #3]
   1e7f4:	ldr	x0, [sp, #72]
   1e7f8:	sub	x0, x0, #0x1
   1e7fc:	str	x0, [sp, #72]
   1e800:	ldr	x0, [sp, #72]
   1e804:	cmp	x0, #0x0
   1e808:	b.eq	1e83c <__deregister_frame@@GLIBC_2.0+0xafc>  // b.none
   1e80c:	ldr	x0, [sp, #72]
   1e810:	sub	x1, x0, #0x1
   1e814:	ldr	x0, [sp, #24]
   1e818:	add	x1, x1, #0x2
   1e81c:	ldr	x0, [x0, x1, lsl #3]
   1e820:	ldr	x3, [sp, #32]
   1e824:	ldr	x2, [sp, #56]
   1e828:	mov	x1, x0
   1e82c:	ldr	x0, [sp, #40]
   1e830:	blr	x3
   1e834:	cmp	w0, #0x0
   1e838:	b.gt	1e7c8 <__deregister_frame@@GLIBC_2.0+0xa88>
   1e83c:	ldr	x1, [sp, #72]
   1e840:	ldr	x0, [sp, #64]
   1e844:	add	x1, x1, x0
   1e848:	ldr	x0, [sp, #24]
   1e84c:	add	x1, x1, #0x2
   1e850:	ldr	x2, [sp, #56]
   1e854:	str	x2, [x0, x1, lsl #3]
   1e858:	ldr	x0, [sp, #64]
   1e85c:	cmp	x0, #0x0
   1e860:	b.ne	1e7a4 <__deregister_frame@@GLIBC_2.0+0xa64>  // b.any
   1e864:	ldr	x0, [sp, #24]
   1e868:	ldr	x1, [x0, #8]
   1e86c:	ldr	x0, [sp, #16]
   1e870:	ldr	x0, [x0, #8]
   1e874:	add	x1, x1, x0
   1e878:	ldr	x0, [sp, #24]
   1e87c:	str	x1, [x0, #8]
   1e880:	nop
   1e884:	ldp	x29, x30, [sp], #80
   1e888:	ret
   1e88c:	stp	x29, x30, [sp, #-64]!
   1e890:	mov	x29, sp
   1e894:	str	x0, [sp, #40]
   1e898:	str	x1, [sp, #32]
   1e89c:	str	x2, [sp, #24]
   1e8a0:	ldr	x0, [sp, #32]
   1e8a4:	ldr	x0, [x0]
   1e8a8:	cmp	x0, #0x0
   1e8ac:	b.eq	1e8cc <__deregister_frame@@GLIBC_2.0+0xb8c>  // b.none
   1e8b0:	ldr	x0, [sp, #32]
   1e8b4:	ldr	x0, [x0]
   1e8b8:	ldr	x0, [x0, #8]
   1e8bc:	ldr	x1, [sp, #24]
   1e8c0:	cmp	x1, x0
   1e8c4:	b.eq	1e8cc <__deregister_frame@@GLIBC_2.0+0xb8c>  // b.none
   1e8c8:	bl	2cb0 <abort@plt>
   1e8cc:	ldr	x0, [sp, #40]
   1e8d0:	ldrb	w0, [x0, #32]
   1e8d4:	and	w0, w0, #0x4
   1e8d8:	and	w0, w0, #0xff
   1e8dc:	cmp	w0, #0x0
   1e8e0:	b.eq	1e8f4 <__deregister_frame@@GLIBC_2.0+0xbb4>  // b.none
   1e8e4:	adrp	x0, 1e000 <__deregister_frame@@GLIBC_2.0+0x2c0>
   1e8e8:	add	x0, x0, #0x124
   1e8ec:	str	x0, [sp, #56]
   1e8f0:	b	1e928 <__deregister_frame@@GLIBC_2.0+0xbe8>
   1e8f4:	ldr	x0, [sp, #40]
   1e8f8:	ldrh	w0, [x0, #32]
   1e8fc:	and	w0, w0, #0x7f8
   1e900:	and	w0, w0, #0xffff
   1e904:	cmp	w0, #0x0
   1e908:	b.ne	1e91c <__deregister_frame@@GLIBC_2.0+0xbdc>  // b.any
   1e90c:	adrp	x0, 1d000 <_Unwind_ForcedUnwind@@GCC_3.0+0xc4>
   1e910:	add	x0, x0, #0xfec
   1e914:	str	x0, [sp, #56]
   1e918:	b	1e928 <__deregister_frame@@GLIBC_2.0+0xbe8>
   1e91c:	adrp	x0, 1e000 <__deregister_frame@@GLIBC_2.0+0x2c0>
   1e920:	add	x0, x0, #0x58
   1e924:	str	x0, [sp, #56]
   1e928:	ldr	x0, [sp, #32]
   1e92c:	ldr	x0, [x0, #8]
   1e930:	cmp	x0, #0x0
   1e934:	b.eq	1e9d4 <__deregister_frame@@GLIBC_2.0+0xc94>  // b.none
   1e938:	ldr	x0, [sp, #32]
   1e93c:	ldr	x1, [x0]
   1e940:	ldr	x0, [sp, #32]
   1e944:	ldr	x0, [x0, #8]
   1e948:	mov	x3, x0
   1e94c:	mov	x2, x1
   1e950:	ldr	x1, [sp, #56]
   1e954:	ldr	x0, [sp, #40]
   1e958:	bl	1e304 <__deregister_frame@@GLIBC_2.0+0x5c4>
   1e95c:	ldr	x0, [sp, #32]
   1e960:	ldr	x0, [x0]
   1e964:	ldr	x1, [x0, #8]
   1e968:	ldr	x0, [sp, #32]
   1e96c:	ldr	x0, [x0, #8]
   1e970:	ldr	x0, [x0, #8]
   1e974:	add	x0, x1, x0
   1e978:	ldr	x1, [sp, #24]
   1e97c:	cmp	x1, x0
   1e980:	b.eq	1e988 <__deregister_frame@@GLIBC_2.0+0xc48>  // b.none
   1e984:	bl	2cb0 <abort@plt>
   1e988:	ldr	x0, [sp, #32]
   1e98c:	ldr	x0, [x0, #8]
   1e990:	mov	x2, x0
   1e994:	ldr	x1, [sp, #56]
   1e998:	ldr	x0, [sp, #40]
   1e99c:	bl	1e664 <__deregister_frame@@GLIBC_2.0+0x924>
   1e9a0:	ldr	x0, [sp, #32]
   1e9a4:	ldr	x1, [x0]
   1e9a8:	ldr	x0, [sp, #32]
   1e9ac:	ldr	x0, [x0, #8]
   1e9b0:	mov	x3, x0
   1e9b4:	mov	x2, x1
   1e9b8:	ldr	x1, [sp, #56]
   1e9bc:	ldr	x0, [sp, #40]
   1e9c0:	bl	1e768 <__deregister_frame@@GLIBC_2.0+0xa28>
   1e9c4:	ldr	x0, [sp, #32]
   1e9c8:	ldr	x0, [x0, #8]
   1e9cc:	bl	2d20 <free@plt>
   1e9d0:	b	1e9ec <__deregister_frame@@GLIBC_2.0+0xcac>
   1e9d4:	ldr	x0, [sp, #32]
   1e9d8:	ldr	x0, [x0]
   1e9dc:	mov	x2, x0
   1e9e0:	ldr	x1, [sp, #56]
   1e9e4:	ldr	x0, [sp, #40]
   1e9e8:	bl	1e664 <__deregister_frame@@GLIBC_2.0+0x924>
   1e9ec:	nop
   1e9f0:	ldp	x29, x30, [sp], #64
   1e9f4:	ret
   1e9f8:	stp	x29, x30, [sp, #-96]!
   1e9fc:	mov	x29, sp
   1ea00:	str	x0, [sp, #24]
   1ea04:	str	x1, [sp, #16]
   1ea08:	str	xzr, [sp, #88]
   1ea0c:	str	xzr, [sp, #80]
   1ea10:	str	wzr, [sp, #76]
   1ea14:	str	xzr, [sp, #64]
   1ea18:	b	1ebb4 <__deregister_frame@@GLIBC_2.0+0xe74>
   1ea1c:	ldr	x0, [sp, #16]
   1ea20:	ldr	w0, [x0, #4]
   1ea24:	cmp	w0, #0x0
   1ea28:	b.eq	1eb9c <__deregister_frame@@GLIBC_2.0+0xe5c>  // b.none
   1ea2c:	ldr	x0, [sp, #16]
   1ea30:	bl	1d7f0 <_Unwind_Backtrace@@GCC_3.3+0x4fc>
   1ea34:	str	x0, [sp, #48]
   1ea38:	ldr	x1, [sp, #48]
   1ea3c:	ldr	x0, [sp, #88]
   1ea40:	cmp	x1, x0
   1ea44:	b.eq	1eae8 <__deregister_frame@@GLIBC_2.0+0xda8>  // b.none
   1ea48:	ldr	x0, [sp, #48]
   1ea4c:	str	x0, [sp, #88]
   1ea50:	ldr	x0, [sp, #48]
   1ea54:	bl	1de0c <__deregister_frame@@GLIBC_2.0+0xcc>
   1ea58:	str	w0, [sp, #76]
   1ea5c:	ldr	w0, [sp, #76]
   1ea60:	cmp	w0, #0xff
   1ea64:	b.ne	1ea70 <__deregister_frame@@GLIBC_2.0+0xd30>  // b.any
   1ea68:	mov	x0, #0xffffffffffffffff    	// #-1
   1ea6c:	b	1ebcc <__deregister_frame@@GLIBC_2.0+0xe8c>
   1ea70:	ldr	w0, [sp, #76]
   1ea74:	and	w0, w0, #0xff
   1ea78:	ldr	x1, [sp, #24]
   1ea7c:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1ea80:	str	x0, [sp, #64]
   1ea84:	ldr	x0, [sp, #24]
   1ea88:	ldrh	w0, [x0, #32]
   1ea8c:	and	w0, w0, #0x7f8
   1ea90:	and	w0, w0, #0xffff
   1ea94:	cmp	w0, #0x7f8
   1ea98:	b.ne	1eab8 <__deregister_frame@@GLIBC_2.0+0xd78>  // b.any
   1ea9c:	ldr	w0, [sp, #76]
   1eaa0:	and	w2, w0, #0xff
   1eaa4:	ldr	x1, [sp, #24]
   1eaa8:	ldrh	w0, [x1, #32]
   1eaac:	bfi	w0, w2, #3, #8
   1eab0:	strh	w0, [x1, #32]
   1eab4:	b	1eae8 <__deregister_frame@@GLIBC_2.0+0xda8>
   1eab8:	ldr	x0, [sp, #24]
   1eabc:	ldrh	w0, [x0, #32]
   1eac0:	ubfx	x0, x0, #3, #8
   1eac4:	and	w0, w0, #0xff
   1eac8:	mov	w1, w0
   1eacc:	ldr	w0, [sp, #76]
   1ead0:	cmp	w0, w1
   1ead4:	b.eq	1eae8 <__deregister_frame@@GLIBC_2.0+0xda8>  // b.none
   1ead8:	ldr	x0, [sp, #24]
   1eadc:	ldrb	w1, [x0, #32]
   1eae0:	orr	w1, w1, #0x4
   1eae4:	strb	w1, [x0, #32]
   1eae8:	ldr	w0, [sp, #76]
   1eaec:	and	w4, w0, #0xff
   1eaf0:	ldr	x0, [sp, #16]
   1eaf4:	add	x0, x0, #0x8
   1eaf8:	add	x1, sp, #0x28
   1eafc:	mov	x3, x1
   1eb00:	mov	x2, x0
   1eb04:	ldr	x1, [sp, #64]
   1eb08:	mov	w0, w4
   1eb0c:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1eb10:	ldr	w0, [sp, #76]
   1eb14:	and	w0, w0, #0xff
   1eb18:	bl	1d3e0 <_Unwind_Backtrace@@GCC_3.3+0xec>
   1eb1c:	mov	w0, w0
   1eb20:	str	x0, [sp, #56]
   1eb24:	ldr	x0, [sp, #56]
   1eb28:	cmp	x0, #0x7
   1eb2c:	b.hi	1eb4c <__deregister_frame@@GLIBC_2.0+0xe0c>  // b.pmore
   1eb30:	ldr	x0, [sp, #56]
   1eb34:	lsl	w0, w0, #3
   1eb38:	mov	x1, #0x1                   	// #1
   1eb3c:	lsl	x0, x1, x0
   1eb40:	sub	x0, x0, #0x1
   1eb44:	str	x0, [sp, #56]
   1eb48:	b	1eb54 <__deregister_frame@@GLIBC_2.0+0xe14>
   1eb4c:	mov	x0, #0xffffffffffffffff    	// #-1
   1eb50:	str	x0, [sp, #56]
   1eb54:	ldr	x1, [sp, #40]
   1eb58:	ldr	x0, [sp, #56]
   1eb5c:	and	x0, x1, x0
   1eb60:	cmp	x0, #0x0
   1eb64:	b.eq	1eba4 <__deregister_frame@@GLIBC_2.0+0xe64>  // b.none
   1eb68:	ldr	x0, [sp, #80]
   1eb6c:	add	x0, x0, #0x1
   1eb70:	str	x0, [sp, #80]
   1eb74:	ldr	x0, [sp, #24]
   1eb78:	ldr	x0, [x0]
   1eb7c:	ldr	x1, [sp, #40]
   1eb80:	cmp	x0, x1
   1eb84:	b.ls	1eba8 <__deregister_frame@@GLIBC_2.0+0xe68>  // b.plast
   1eb88:	ldr	x0, [sp, #40]
   1eb8c:	mov	x1, x0
   1eb90:	ldr	x0, [sp, #24]
   1eb94:	str	x1, [x0]
   1eb98:	b	1eba8 <__deregister_frame@@GLIBC_2.0+0xe68>
   1eb9c:	nop
   1eba0:	b	1eba8 <__deregister_frame@@GLIBC_2.0+0xe68>
   1eba4:	nop
   1eba8:	ldr	x0, [sp, #16]
   1ebac:	bl	1d81c <_Unwind_Backtrace@@GCC_3.3+0x528>
   1ebb0:	str	x0, [sp, #16]
   1ebb4:	ldr	x1, [sp, #16]
   1ebb8:	ldr	x0, [sp, #24]
   1ebbc:	bl	1d844 <_Unwind_Backtrace@@GCC_3.3+0x550>
   1ebc0:	cmp	w0, #0x0
   1ebc4:	b.eq	1ea1c <__deregister_frame@@GLIBC_2.0+0xcdc>  // b.none
   1ebc8:	ldr	x0, [sp, #80]
   1ebcc:	ldp	x29, x30, [sp], #96
   1ebd0:	ret
   1ebd4:	stp	x29, x30, [sp, #-112]!
   1ebd8:	mov	x29, sp
   1ebdc:	str	x0, [sp, #40]
   1ebe0:	str	x1, [sp, #32]
   1ebe4:	str	x2, [sp, #24]
   1ebe8:	str	xzr, [sp, #104]
   1ebec:	ldr	x0, [sp, #40]
   1ebf0:	ldrh	w0, [x0, #32]
   1ebf4:	ubfx	x0, x0, #3, #8
   1ebf8:	and	w0, w0, #0xff
   1ebfc:	str	w0, [sp, #100]
   1ec00:	ldr	x0, [sp, #40]
   1ec04:	ldrh	w0, [x0, #32]
   1ec08:	ubfx	x0, x0, #3, #8
   1ec0c:	and	w0, w0, #0xff
   1ec10:	ldr	x1, [sp, #40]
   1ec14:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1ec18:	str	x0, [sp, #88]
   1ec1c:	b	1ed60 <__deregister_frame@@GLIBC_2.0+0x1020>
   1ec20:	ldr	x0, [sp, #24]
   1ec24:	ldr	w0, [x0, #4]
   1ec28:	cmp	w0, #0x0
   1ec2c:	b.eq	1ed48 <__deregister_frame@@GLIBC_2.0+0x1008>  // b.none
   1ec30:	ldr	x0, [sp, #40]
   1ec34:	ldrb	w0, [x0, #32]
   1ec38:	and	w0, w0, #0x4
   1ec3c:	and	w0, w0, #0xff
   1ec40:	cmp	w0, #0x0
   1ec44:	b.eq	1ec8c <__deregister_frame@@GLIBC_2.0+0xf4c>  // b.none
   1ec48:	ldr	x0, [sp, #24]
   1ec4c:	bl	1d7f0 <_Unwind_Backtrace@@GCC_3.3+0x4fc>
   1ec50:	str	x0, [sp, #72]
   1ec54:	ldr	x1, [sp, #72]
   1ec58:	ldr	x0, [sp, #104]
   1ec5c:	cmp	x1, x0
   1ec60:	b.eq	1ec8c <__deregister_frame@@GLIBC_2.0+0xf4c>  // b.none
   1ec64:	ldr	x0, [sp, #72]
   1ec68:	str	x0, [sp, #104]
   1ec6c:	ldr	x0, [sp, #72]
   1ec70:	bl	1de0c <__deregister_frame@@GLIBC_2.0+0xcc>
   1ec74:	str	w0, [sp, #100]
   1ec78:	ldr	w0, [sp, #100]
   1ec7c:	and	w0, w0, #0xff
   1ec80:	ldr	x1, [sp, #40]
   1ec84:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1ec88:	str	x0, [sp, #88]
   1ec8c:	ldr	w0, [sp, #100]
   1ec90:	cmp	w0, #0x0
   1ec94:	b.ne	1ecb8 <__deregister_frame@@GLIBC_2.0+0xf78>  // b.any
   1ec98:	ldr	x0, [sp, #24]
   1ec9c:	add	x0, x0, #0x8
   1eca0:	ldr	x0, [x0]
   1eca4:	str	x0, [sp, #64]
   1eca8:	ldr	x0, [sp, #64]
   1ecac:	cmp	x0, #0x0
   1ecb0:	b.ne	1ed38 <__deregister_frame@@GLIBC_2.0+0xff8>  // b.any
   1ecb4:	b	1ed54 <__deregister_frame@@GLIBC_2.0+0x1014>
   1ecb8:	ldr	w0, [sp, #100]
   1ecbc:	and	w4, w0, #0xff
   1ecc0:	ldr	x0, [sp, #24]
   1ecc4:	add	x0, x0, #0x8
   1ecc8:	add	x1, sp, #0x38
   1eccc:	mov	x3, x1
   1ecd0:	mov	x2, x0
   1ecd4:	ldr	x1, [sp, #88]
   1ecd8:	mov	w0, w4
   1ecdc:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1ece0:	ldr	w0, [sp, #100]
   1ece4:	and	w0, w0, #0xff
   1ece8:	bl	1d3e0 <_Unwind_Backtrace@@GCC_3.3+0xec>
   1ecec:	mov	w0, w0
   1ecf0:	str	x0, [sp, #80]
   1ecf4:	ldr	x0, [sp, #80]
   1ecf8:	cmp	x0, #0x7
   1ecfc:	b.hi	1ed1c <__deregister_frame@@GLIBC_2.0+0xfdc>  // b.pmore
   1ed00:	ldr	x0, [sp, #80]
   1ed04:	lsl	w0, w0, #3
   1ed08:	mov	x1, #0x1                   	// #1
   1ed0c:	lsl	x0, x1, x0
   1ed10:	sub	x0, x0, #0x1
   1ed14:	str	x0, [sp, #80]
   1ed18:	b	1ed24 <__deregister_frame@@GLIBC_2.0+0xfe4>
   1ed1c:	mov	x0, #0xffffffffffffffff    	// #-1
   1ed20:	str	x0, [sp, #80]
   1ed24:	ldr	x1, [sp, #56]
   1ed28:	ldr	x0, [sp, #80]
   1ed2c:	and	x0, x1, x0
   1ed30:	cmp	x0, #0x0
   1ed34:	b.eq	1ed50 <__deregister_frame@@GLIBC_2.0+0x1010>  // b.none
   1ed38:	ldr	x1, [sp, #24]
   1ed3c:	ldr	x0, [sp, #32]
   1ed40:	bl	1e2b4 <__deregister_frame@@GLIBC_2.0+0x574>
   1ed44:	b	1ed54 <__deregister_frame@@GLIBC_2.0+0x1014>
   1ed48:	nop
   1ed4c:	b	1ed54 <__deregister_frame@@GLIBC_2.0+0x1014>
   1ed50:	nop
   1ed54:	ldr	x0, [sp, #24]
   1ed58:	bl	1d81c <_Unwind_Backtrace@@GCC_3.3+0x528>
   1ed5c:	str	x0, [sp, #24]
   1ed60:	ldr	x1, [sp, #24]
   1ed64:	ldr	x0, [sp, #40]
   1ed68:	bl	1d844 <_Unwind_Backtrace@@GCC_3.3+0x550>
   1ed6c:	cmp	w0, #0x0
   1ed70:	b.eq	1ec20 <__deregister_frame@@GLIBC_2.0+0xee0>  // b.none
   1ed74:	nop
   1ed78:	nop
   1ed7c:	ldp	x29, x30, [sp], #112
   1ed80:	ret
   1ed84:	stp	x29, x30, [sp, #-80]!
   1ed88:	mov	x29, sp
   1ed8c:	str	x0, [sp, #24]
   1ed90:	ldr	x0, [sp, #24]
   1ed94:	ldr	w0, [x0, #32]
   1ed98:	lsr	w0, w0, #11
   1ed9c:	mov	w0, w0
   1eda0:	str	x0, [sp, #72]
   1eda4:	ldr	x0, [sp, #72]
   1eda8:	cmp	x0, #0x0
   1edac:	b.ne	1eed0 <__deregister_frame@@GLIBC_2.0+0x1190>  // b.any
   1edb0:	ldr	x0, [sp, #24]
   1edb4:	ldrb	w0, [x0, #32]
   1edb8:	and	w0, w0, #0x2
   1edbc:	and	w0, w0, #0xff
   1edc0:	cmp	w0, #0x0
   1edc4:	b.eq	1ee30 <__deregister_frame@@GLIBC_2.0+0x10f0>  // b.none
   1edc8:	ldr	x0, [sp, #24]
   1edcc:	ldr	x0, [x0, #24]
   1edd0:	str	x0, [sp, #64]
   1edd4:	str	xzr, [sp, #72]
   1edd8:	b	1ee1c <__deregister_frame@@GLIBC_2.0+0x10dc>
   1eddc:	ldr	x0, [sp, #64]
   1ede0:	ldr	x0, [x0]
   1ede4:	mov	x1, x0
   1ede8:	ldr	x0, [sp, #24]
   1edec:	bl	1e9f8 <__deregister_frame@@GLIBC_2.0+0xcb8>
   1edf0:	str	x0, [sp, #48]
   1edf4:	ldr	x0, [sp, #48]
   1edf8:	cmn	x0, #0x1
   1edfc:	b.eq	1ee58 <__deregister_frame@@GLIBC_2.0+0x1118>  // b.none
   1ee00:	ldr	x1, [sp, #72]
   1ee04:	ldr	x0, [sp, #48]
   1ee08:	add	x0, x1, x0
   1ee0c:	str	x0, [sp, #72]
   1ee10:	ldr	x0, [sp, #64]
   1ee14:	add	x0, x0, #0x8
   1ee18:	str	x0, [sp, #64]
   1ee1c:	ldr	x0, [sp, #64]
   1ee20:	ldr	x0, [x0]
   1ee24:	cmp	x0, #0x0
   1ee28:	b.ne	1eddc <__deregister_frame@@GLIBC_2.0+0x109c>  // b.any
   1ee2c:	b	1ee88 <__deregister_frame@@GLIBC_2.0+0x1148>
   1ee30:	ldr	x0, [sp, #24]
   1ee34:	ldr	x0, [x0, #24]
   1ee38:	mov	x1, x0
   1ee3c:	ldr	x0, [sp, #24]
   1ee40:	bl	1e9f8 <__deregister_frame@@GLIBC_2.0+0xcb8>
   1ee44:	str	x0, [sp, #72]
   1ee48:	ldr	x0, [sp, #72]
   1ee4c:	cmn	x0, #0x1
   1ee50:	b.ne	1ee88 <__deregister_frame@@GLIBC_2.0+0x1148>  // b.any
   1ee54:	b	1ee5c <__deregister_frame@@GLIBC_2.0+0x111c>
   1ee58:	nop
   1ee5c:	ldr	x0, [sp, #24]
   1ee60:	str	xzr, [x0, #32]
   1ee64:	ldr	x0, [sp, #24]
   1ee68:	ldrh	w1, [x0, #32]
   1ee6c:	orr	w1, w1, #0x7f8
   1ee70:	strh	w1, [x0, #32]
   1ee74:	ldr	x0, [sp, #24]
   1ee78:	adrp	x1, 21000 <__emutls_get_address@@GCC_4.3.0+0x280>
   1ee7c:	add	x1, x1, #0x870
   1ee80:	str	x1, [x0, #24]
   1ee84:	b	1efac <__deregister_frame@@GLIBC_2.0+0x126c>
   1ee88:	ldr	x0, [sp, #72]
   1ee8c:	mov	w1, w0
   1ee90:	and	w1, w1, #0x1fffff
   1ee94:	ldr	x2, [sp, #24]
   1ee98:	ldr	w0, [x2, #32]
   1ee9c:	bfi	w0, w1, #11, #21
   1eea0:	str	w0, [x2, #32]
   1eea4:	ldr	x0, [sp, #24]
   1eea8:	ldr	w0, [x0, #32]
   1eeac:	lsr	w0, w0, #11
   1eeb0:	mov	w0, w0
   1eeb4:	ldr	x1, [sp, #72]
   1eeb8:	cmp	x1, x0
   1eebc:	b.eq	1eed0 <__deregister_frame@@GLIBC_2.0+0x1190>  // b.none
   1eec0:	ldr	x0, [sp, #24]
   1eec4:	ldr	w1, [x0, #32]
   1eec8:	and	w1, w1, #0x7ff
   1eecc:	str	w1, [x0, #32]
   1eed0:	add	x0, sp, #0x20
   1eed4:	ldr	x1, [sp, #72]
   1eed8:	bl	1e20c <__deregister_frame@@GLIBC_2.0+0x4cc>
   1eedc:	cmp	w0, #0x0
   1eee0:	b.eq	1efa8 <__deregister_frame@@GLIBC_2.0+0x1268>  // b.none
   1eee4:	ldr	x0, [sp, #24]
   1eee8:	ldrb	w0, [x0, #32]
   1eeec:	and	w0, w0, #0x2
   1eef0:	and	w0, w0, #0xff
   1eef4:	cmp	w0, #0x0
   1eef8:	b.eq	1ef48 <__deregister_frame@@GLIBC_2.0+0x1208>  // b.none
   1eefc:	ldr	x0, [sp, #24]
   1ef00:	ldr	x0, [x0, #24]
   1ef04:	str	x0, [sp, #56]
   1ef08:	b	1ef34 <__deregister_frame@@GLIBC_2.0+0x11f4>
   1ef0c:	ldr	x0, [sp, #56]
   1ef10:	ldr	x1, [x0]
   1ef14:	add	x0, sp, #0x20
   1ef18:	mov	x2, x1
   1ef1c:	mov	x1, x0
   1ef20:	ldr	x0, [sp, #24]
   1ef24:	bl	1ebd4 <__deregister_frame@@GLIBC_2.0+0xe94>
   1ef28:	ldr	x0, [sp, #56]
   1ef2c:	add	x0, x0, #0x8
   1ef30:	str	x0, [sp, #56]
   1ef34:	ldr	x0, [sp, #56]
   1ef38:	ldr	x0, [x0]
   1ef3c:	cmp	x0, #0x0
   1ef40:	b.ne	1ef0c <__deregister_frame@@GLIBC_2.0+0x11cc>  // b.any
   1ef44:	b	1ef64 <__deregister_frame@@GLIBC_2.0+0x1224>
   1ef48:	ldr	x0, [sp, #24]
   1ef4c:	ldr	x1, [x0, #24]
   1ef50:	add	x0, sp, #0x20
   1ef54:	mov	x2, x1
   1ef58:	mov	x1, x0
   1ef5c:	ldr	x0, [sp, #24]
   1ef60:	bl	1ebd4 <__deregister_frame@@GLIBC_2.0+0xe94>
   1ef64:	add	x0, sp, #0x20
   1ef68:	ldr	x2, [sp, #72]
   1ef6c:	mov	x1, x0
   1ef70:	ldr	x0, [sp, #24]
   1ef74:	bl	1e88c <__deregister_frame@@GLIBC_2.0+0xb4c>
   1ef78:	ldr	x0, [sp, #32]
   1ef7c:	ldr	x1, [sp, #24]
   1ef80:	ldr	x1, [x1, #24]
   1ef84:	str	x1, [x0]
   1ef88:	ldr	x1, [sp, #32]
   1ef8c:	ldr	x0, [sp, #24]
   1ef90:	str	x1, [x0, #24]
   1ef94:	ldr	x0, [sp, #24]
   1ef98:	ldrb	w1, [x0, #32]
   1ef9c:	orr	w1, w1, #0x1
   1efa0:	strb	w1, [x0, #32]
   1efa4:	b	1efac <__deregister_frame@@GLIBC_2.0+0x126c>
   1efa8:	nop
   1efac:	ldp	x29, x30, [sp], #80
   1efb0:	ret
   1efb4:	stp	x29, x30, [sp, #-128]!
   1efb8:	mov	x29, sp
   1efbc:	str	x0, [sp, #40]
   1efc0:	str	x1, [sp, #32]
   1efc4:	str	x2, [sp, #24]
   1efc8:	str	xzr, [sp, #120]
   1efcc:	ldr	x0, [sp, #40]
   1efd0:	ldrh	w0, [x0, #32]
   1efd4:	ubfx	x0, x0, #3, #8
   1efd8:	and	w0, w0, #0xff
   1efdc:	str	w0, [sp, #116]
   1efe0:	ldr	x0, [sp, #40]
   1efe4:	ldrh	w0, [x0, #32]
   1efe8:	ubfx	x0, x0, #3, #8
   1efec:	and	w0, w0, #0xff
   1eff0:	ldr	x1, [sp, #40]
   1eff4:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1eff8:	str	x0, [sp, #104]
   1effc:	b	1f190 <__deregister_frame@@GLIBC_2.0+0x1450>
   1f000:	ldr	x0, [sp, #32]
   1f004:	ldr	w0, [x0, #4]
   1f008:	cmp	w0, #0x0
   1f00c:	b.eq	1f178 <__deregister_frame@@GLIBC_2.0+0x1438>  // b.none
   1f010:	ldr	x0, [sp, #40]
   1f014:	ldrb	w0, [x0, #32]
   1f018:	and	w0, w0, #0x4
   1f01c:	and	w0, w0, #0xff
   1f020:	cmp	w0, #0x0
   1f024:	b.eq	1f06c <__deregister_frame@@GLIBC_2.0+0x132c>  // b.none
   1f028:	ldr	x0, [sp, #32]
   1f02c:	bl	1d7f0 <_Unwind_Backtrace@@GCC_3.3+0x4fc>
   1f030:	str	x0, [sp, #88]
   1f034:	ldr	x1, [sp, #88]
   1f038:	ldr	x0, [sp, #120]
   1f03c:	cmp	x1, x0
   1f040:	b.eq	1f06c <__deregister_frame@@GLIBC_2.0+0x132c>  // b.none
   1f044:	ldr	x0, [sp, #88]
   1f048:	str	x0, [sp, #120]
   1f04c:	ldr	x0, [sp, #88]
   1f050:	bl	1de0c <__deregister_frame@@GLIBC_2.0+0xcc>
   1f054:	str	w0, [sp, #116]
   1f058:	ldr	w0, [sp, #116]
   1f05c:	and	w0, w0, #0xff
   1f060:	ldr	x1, [sp, #40]
   1f064:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1f068:	str	x0, [sp, #104]
   1f06c:	ldr	w0, [sp, #116]
   1f070:	cmp	w0, #0x0
   1f074:	b.ne	1f0ac <__deregister_frame@@GLIBC_2.0+0x136c>  // b.any
   1f078:	ldr	x0, [sp, #32]
   1f07c:	add	x0, x0, #0x8
   1f080:	str	x0, [sp, #72]
   1f084:	ldr	x0, [sp, #72]
   1f088:	ldr	x0, [x0]
   1f08c:	str	x0, [sp, #64]
   1f090:	ldr	x0, [sp, #72]
   1f094:	ldr	x0, [x0, #8]
   1f098:	str	x0, [sp, #56]
   1f09c:	ldr	x0, [sp, #64]
   1f0a0:	cmp	x0, #0x0
   1f0a4:	b.ne	1f158 <__deregister_frame@@GLIBC_2.0+0x1418>  // b.any
   1f0a8:	b	1f184 <__deregister_frame@@GLIBC_2.0+0x1444>
   1f0ac:	ldr	w0, [sp, #116]
   1f0b0:	and	w4, w0, #0xff
   1f0b4:	ldr	x0, [sp, #32]
   1f0b8:	add	x0, x0, #0x8
   1f0bc:	add	x1, sp, #0x40
   1f0c0:	mov	x3, x1
   1f0c4:	mov	x2, x0
   1f0c8:	ldr	x1, [sp, #104]
   1f0cc:	mov	w0, w4
   1f0d0:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f0d4:	str	x0, [sp, #80]
   1f0d8:	ldr	w0, [sp, #116]
   1f0dc:	and	w0, w0, #0xff
   1f0e0:	and	w0, w0, #0xf
   1f0e4:	and	w4, w0, #0xff
   1f0e8:	add	x0, sp, #0x38
   1f0ec:	mov	x3, x0
   1f0f0:	ldr	x2, [sp, #80]
   1f0f4:	mov	x1, #0x0                   	// #0
   1f0f8:	mov	w0, w4
   1f0fc:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f100:	ldr	w0, [sp, #116]
   1f104:	and	w0, w0, #0xff
   1f108:	bl	1d3e0 <_Unwind_Backtrace@@GCC_3.3+0xec>
   1f10c:	mov	w0, w0
   1f110:	str	x0, [sp, #96]
   1f114:	ldr	x0, [sp, #96]
   1f118:	cmp	x0, #0x7
   1f11c:	b.hi	1f13c <__deregister_frame@@GLIBC_2.0+0x13fc>  // b.pmore
   1f120:	ldr	x0, [sp, #96]
   1f124:	lsl	w0, w0, #3
   1f128:	mov	x1, #0x1                   	// #1
   1f12c:	lsl	x0, x1, x0
   1f130:	sub	x0, x0, #0x1
   1f134:	str	x0, [sp, #96]
   1f138:	b	1f144 <__deregister_frame@@GLIBC_2.0+0x1404>
   1f13c:	mov	x0, #0xffffffffffffffff    	// #-1
   1f140:	str	x0, [sp, #96]
   1f144:	ldr	x1, [sp, #64]
   1f148:	ldr	x0, [sp, #96]
   1f14c:	and	x0, x1, x0
   1f150:	cmp	x0, #0x0
   1f154:	b.eq	1f180 <__deregister_frame@@GLIBC_2.0+0x1440>  // b.none
   1f158:	ldr	x1, [sp, #24]
   1f15c:	ldr	x0, [sp, #64]
   1f160:	sub	x1, x1, x0
   1f164:	ldr	x0, [sp, #56]
   1f168:	cmp	x1, x0
   1f16c:	b.cs	1f184 <__deregister_frame@@GLIBC_2.0+0x1444>  // b.hs, b.nlast
   1f170:	ldr	x0, [sp, #32]
   1f174:	b	1f1a8 <__deregister_frame@@GLIBC_2.0+0x1468>
   1f178:	nop
   1f17c:	b	1f184 <__deregister_frame@@GLIBC_2.0+0x1444>
   1f180:	nop
   1f184:	ldr	x0, [sp, #32]
   1f188:	bl	1d81c <_Unwind_Backtrace@@GCC_3.3+0x528>
   1f18c:	str	x0, [sp, #32]
   1f190:	ldr	x1, [sp, #32]
   1f194:	ldr	x0, [sp, #40]
   1f198:	bl	1d844 <_Unwind_Backtrace@@GCC_3.3+0x550>
   1f19c:	cmp	w0, #0x0
   1f1a0:	b.eq	1f000 <__deregister_frame@@GLIBC_2.0+0x12c0>  // b.none
   1f1a4:	mov	x0, #0x0                   	// #0
   1f1a8:	ldp	x29, x30, [sp], #128
   1f1ac:	ret
   1f1b0:	sub	sp, sp, #0x50
   1f1b4:	str	x0, [sp, #8]
   1f1b8:	str	x1, [sp]
   1f1bc:	ldr	x0, [sp, #8]
   1f1c0:	ldr	x0, [x0, #24]
   1f1c4:	str	x0, [sp, #56]
   1f1c8:	str	xzr, [sp, #72]
   1f1cc:	ldr	x0, [sp, #56]
   1f1d0:	ldr	x0, [x0, #8]
   1f1d4:	str	x0, [sp, #64]
   1f1d8:	b	1f274 <__deregister_frame@@GLIBC_2.0+0x1534>
   1f1dc:	ldr	x1, [sp, #72]
   1f1e0:	ldr	x0, [sp, #64]
   1f1e4:	add	x0, x1, x0
   1f1e8:	lsr	x0, x0, #1
   1f1ec:	str	x0, [sp, #48]
   1f1f0:	ldr	x0, [sp, #56]
   1f1f4:	ldr	x1, [sp, #48]
   1f1f8:	add	x1, x1, #0x2
   1f1fc:	ldr	x0, [x0, x1, lsl #3]
   1f200:	str	x0, [sp, #40]
   1f204:	ldr	x0, [sp, #40]
   1f208:	add	x0, x0, #0x8
   1f20c:	ldr	x0, [x0]
   1f210:	str	x0, [sp, #32]
   1f214:	ldr	x0, [sp, #40]
   1f218:	add	x0, x0, #0x8
   1f21c:	add	x0, x0, #0x8
   1f220:	ldr	x0, [x0]
   1f224:	str	x0, [sp, #24]
   1f228:	ldr	x0, [sp, #32]
   1f22c:	ldr	x1, [sp]
   1f230:	cmp	x1, x0
   1f234:	b.cs	1f244 <__deregister_frame@@GLIBC_2.0+0x1504>  // b.hs, b.nlast
   1f238:	ldr	x0, [sp, #48]
   1f23c:	str	x0, [sp, #64]
   1f240:	b	1f274 <__deregister_frame@@GLIBC_2.0+0x1534>
   1f244:	ldr	x1, [sp, #32]
   1f248:	ldr	x0, [sp, #24]
   1f24c:	add	x0, x1, x0
   1f250:	ldr	x1, [sp]
   1f254:	cmp	x1, x0
   1f258:	b.cc	1f26c <__deregister_frame@@GLIBC_2.0+0x152c>  // b.lo, b.ul, b.last
   1f25c:	ldr	x0, [sp, #48]
   1f260:	add	x0, x0, #0x1
   1f264:	str	x0, [sp, #72]
   1f268:	b	1f274 <__deregister_frame@@GLIBC_2.0+0x1534>
   1f26c:	ldr	x0, [sp, #40]
   1f270:	b	1f288 <__deregister_frame@@GLIBC_2.0+0x1548>
   1f274:	ldr	x1, [sp, #72]
   1f278:	ldr	x0, [sp, #64]
   1f27c:	cmp	x1, x0
   1f280:	b.cc	1f1dc <__deregister_frame@@GLIBC_2.0+0x149c>  // b.lo, b.ul, b.last
   1f284:	mov	x0, #0x0                   	// #0
   1f288:	add	sp, sp, #0x50
   1f28c:	ret
   1f290:	stp	x29, x30, [sp, #-112]!
   1f294:	mov	x29, sp
   1f298:	str	x0, [sp, #24]
   1f29c:	str	x1, [sp, #16]
   1f2a0:	ldr	x0, [sp, #24]
   1f2a4:	ldr	x0, [x0, #24]
   1f2a8:	str	x0, [sp, #88]
   1f2ac:	ldr	x0, [sp, #24]
   1f2b0:	ldrh	w0, [x0, #32]
   1f2b4:	ubfx	x0, x0, #3, #8
   1f2b8:	and	w0, w0, #0xff
   1f2bc:	str	w0, [sp, #84]
   1f2c0:	ldr	w0, [sp, #84]
   1f2c4:	and	w0, w0, #0xff
   1f2c8:	ldr	x1, [sp, #24]
   1f2cc:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1f2d0:	str	x0, [sp, #72]
   1f2d4:	str	xzr, [sp, #104]
   1f2d8:	ldr	x0, [sp, #88]
   1f2dc:	ldr	x0, [x0, #8]
   1f2e0:	str	x0, [sp, #96]
   1f2e4:	b	1f3b0 <__deregister_frame@@GLIBC_2.0+0x1670>
   1f2e8:	ldr	x1, [sp, #104]
   1f2ec:	ldr	x0, [sp, #96]
   1f2f0:	add	x0, x1, x0
   1f2f4:	lsr	x0, x0, #1
   1f2f8:	str	x0, [sp, #64]
   1f2fc:	ldr	x0, [sp, #88]
   1f300:	ldr	x1, [sp, #64]
   1f304:	add	x1, x1, #0x2
   1f308:	ldr	x0, [x0, x1, lsl #3]
   1f30c:	str	x0, [sp, #56]
   1f310:	ldr	w0, [sp, #84]
   1f314:	and	w4, w0, #0xff
   1f318:	ldr	x0, [sp, #56]
   1f31c:	add	x0, x0, #0x8
   1f320:	add	x1, sp, #0x28
   1f324:	mov	x3, x1
   1f328:	mov	x2, x0
   1f32c:	ldr	x1, [sp, #72]
   1f330:	mov	w0, w4
   1f334:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f338:	str	x0, [sp, #48]
   1f33c:	ldr	w0, [sp, #84]
   1f340:	and	w0, w0, #0xff
   1f344:	and	w0, w0, #0xf
   1f348:	and	w4, w0, #0xff
   1f34c:	add	x0, sp, #0x20
   1f350:	mov	x3, x0
   1f354:	ldr	x2, [sp, #48]
   1f358:	mov	x1, #0x0                   	// #0
   1f35c:	mov	w0, w4
   1f360:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f364:	ldr	x1, [sp, #16]
   1f368:	ldr	x0, [sp, #40]
   1f36c:	cmp	x1, x0
   1f370:	b.cs	1f380 <__deregister_frame@@GLIBC_2.0+0x1640>  // b.hs, b.nlast
   1f374:	ldr	x0, [sp, #64]
   1f378:	str	x0, [sp, #96]
   1f37c:	b	1f3b0 <__deregister_frame@@GLIBC_2.0+0x1670>
   1f380:	ldr	x1, [sp, #40]
   1f384:	ldr	x0, [sp, #32]
   1f388:	add	x1, x1, x0
   1f38c:	ldr	x0, [sp, #16]
   1f390:	cmp	x1, x0
   1f394:	b.hi	1f3a8 <__deregister_frame@@GLIBC_2.0+0x1668>  // b.pmore
   1f398:	ldr	x0, [sp, #64]
   1f39c:	add	x0, x0, #0x1
   1f3a0:	str	x0, [sp, #104]
   1f3a4:	b	1f3b0 <__deregister_frame@@GLIBC_2.0+0x1670>
   1f3a8:	ldr	x0, [sp, #56]
   1f3ac:	b	1f3c4 <__deregister_frame@@GLIBC_2.0+0x1684>
   1f3b0:	ldr	x1, [sp, #104]
   1f3b4:	ldr	x0, [sp, #96]
   1f3b8:	cmp	x1, x0
   1f3bc:	b.cc	1f2e8 <__deregister_frame@@GLIBC_2.0+0x15a8>  // b.lo, b.ul, b.last
   1f3c0:	mov	x0, #0x0                   	// #0
   1f3c4:	ldp	x29, x30, [sp], #112
   1f3c8:	ret
   1f3cc:	stp	x29, x30, [sp, #-128]!
   1f3d0:	mov	x29, sp
   1f3d4:	str	x19, [sp, #16]
   1f3d8:	str	x0, [sp, #40]
   1f3dc:	str	x1, [sp, #32]
   1f3e0:	ldr	x0, [sp, #40]
   1f3e4:	ldr	x0, [x0, #24]
   1f3e8:	str	x0, [sp, #104]
   1f3ec:	str	xzr, [sp, #120]
   1f3f0:	ldr	x0, [sp, #104]
   1f3f4:	ldr	x0, [x0, #8]
   1f3f8:	str	x0, [sp, #112]
   1f3fc:	b	1f4e8 <__deregister_frame@@GLIBC_2.0+0x17a8>
   1f400:	ldr	x1, [sp, #120]
   1f404:	ldr	x0, [sp, #112]
   1f408:	add	x0, x1, x0
   1f40c:	lsr	x0, x0, #1
   1f410:	str	x0, [sp, #96]
   1f414:	ldr	x0, [sp, #104]
   1f418:	ldr	x1, [sp, #96]
   1f41c:	add	x1, x1, #0x2
   1f420:	ldr	x0, [x0, x1, lsl #3]
   1f424:	str	x0, [sp, #88]
   1f428:	ldr	x0, [sp, #88]
   1f42c:	bl	1dfcc <__deregister_frame@@GLIBC_2.0+0x28c>
   1f430:	str	w0, [sp, #84]
   1f434:	ldr	w0, [sp, #84]
   1f438:	and	w19, w0, #0xff
   1f43c:	ldr	w0, [sp, #84]
   1f440:	and	w0, w0, #0xff
   1f444:	ldr	x1, [sp, #40]
   1f448:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1f44c:	mov	x4, x0
   1f450:	ldr	x0, [sp, #88]
   1f454:	add	x0, x0, #0x8
   1f458:	add	x1, sp, #0x40
   1f45c:	mov	x3, x1
   1f460:	mov	x2, x0
   1f464:	mov	x1, x4
   1f468:	mov	w0, w19
   1f46c:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f470:	str	x0, [sp, #72]
   1f474:	ldr	w0, [sp, #84]
   1f478:	and	w0, w0, #0xff
   1f47c:	and	w0, w0, #0xf
   1f480:	and	w4, w0, #0xff
   1f484:	add	x0, sp, #0x38
   1f488:	mov	x3, x0
   1f48c:	ldr	x2, [sp, #72]
   1f490:	mov	x1, #0x0                   	// #0
   1f494:	mov	w0, w4
   1f498:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f49c:	ldr	x1, [sp, #32]
   1f4a0:	ldr	x0, [sp, #64]
   1f4a4:	cmp	x1, x0
   1f4a8:	b.cs	1f4b8 <__deregister_frame@@GLIBC_2.0+0x1778>  // b.hs, b.nlast
   1f4ac:	ldr	x0, [sp, #96]
   1f4b0:	str	x0, [sp, #112]
   1f4b4:	b	1f4e8 <__deregister_frame@@GLIBC_2.0+0x17a8>
   1f4b8:	ldr	x1, [sp, #64]
   1f4bc:	ldr	x0, [sp, #56]
   1f4c0:	add	x1, x1, x0
   1f4c4:	ldr	x0, [sp, #32]
   1f4c8:	cmp	x1, x0
   1f4cc:	b.hi	1f4e0 <__deregister_frame@@GLIBC_2.0+0x17a0>  // b.pmore
   1f4d0:	ldr	x0, [sp, #96]
   1f4d4:	add	x0, x0, #0x1
   1f4d8:	str	x0, [sp, #120]
   1f4dc:	b	1f4e8 <__deregister_frame@@GLIBC_2.0+0x17a8>
   1f4e0:	ldr	x0, [sp, #88]
   1f4e4:	b	1f4fc <__deregister_frame@@GLIBC_2.0+0x17bc>
   1f4e8:	ldr	x1, [sp, #120]
   1f4ec:	ldr	x0, [sp, #112]
   1f4f0:	cmp	x1, x0
   1f4f4:	b.cc	1f400 <__deregister_frame@@GLIBC_2.0+0x16c0>  // b.lo, b.ul, b.last
   1f4f8:	mov	x0, #0x0                   	// #0
   1f4fc:	ldr	x19, [sp, #16]
   1f500:	ldp	x29, x30, [sp], #128
   1f504:	ret
   1f508:	stp	x29, x30, [sp, #-48]!
   1f50c:	mov	x29, sp
   1f510:	str	x0, [sp, #24]
   1f514:	str	x1, [sp, #16]
   1f518:	ldr	x0, [sp, #24]
   1f51c:	ldrb	w0, [x0, #32]
   1f520:	and	w0, w0, #0x1
   1f524:	and	w0, w0, #0xff
   1f528:	cmp	w0, #0x0
   1f52c:	b.ne	1f554 <__deregister_frame@@GLIBC_2.0+0x1814>  // b.any
   1f530:	ldr	x0, [sp, #24]
   1f534:	bl	1ed84 <__deregister_frame@@GLIBC_2.0+0x1044>
   1f538:	ldr	x0, [sp, #24]
   1f53c:	ldr	x0, [x0]
   1f540:	ldr	x1, [sp, #16]
   1f544:	cmp	x1, x0
   1f548:	b.cs	1f554 <__deregister_frame@@GLIBC_2.0+0x1814>  // b.hs, b.nlast
   1f54c:	mov	x0, #0x0                   	// #0
   1f550:	b	1f660 <__deregister_frame@@GLIBC_2.0+0x1920>
   1f554:	ldr	x0, [sp, #24]
   1f558:	ldrb	w0, [x0, #32]
   1f55c:	and	w0, w0, #0x1
   1f560:	and	w0, w0, #0xff
   1f564:	cmp	w0, #0x0
   1f568:	b.eq	1f5cc <__deregister_frame@@GLIBC_2.0+0x188c>  // b.none
   1f56c:	ldr	x0, [sp, #24]
   1f570:	ldrb	w0, [x0, #32]
   1f574:	and	w0, w0, #0x4
   1f578:	and	w0, w0, #0xff
   1f57c:	cmp	w0, #0x0
   1f580:	b.eq	1f594 <__deregister_frame@@GLIBC_2.0+0x1854>  // b.none
   1f584:	ldr	x1, [sp, #16]
   1f588:	ldr	x0, [sp, #24]
   1f58c:	bl	1f3cc <__deregister_frame@@GLIBC_2.0+0x168c>
   1f590:	b	1f660 <__deregister_frame@@GLIBC_2.0+0x1920>
   1f594:	ldr	x0, [sp, #24]
   1f598:	ldrh	w0, [x0, #32]
   1f59c:	and	w0, w0, #0x7f8
   1f5a0:	and	w0, w0, #0xffff
   1f5a4:	cmp	w0, #0x0
   1f5a8:	b.ne	1f5bc <__deregister_frame@@GLIBC_2.0+0x187c>  // b.any
   1f5ac:	ldr	x1, [sp, #16]
   1f5b0:	ldr	x0, [sp, #24]
   1f5b4:	bl	1f1b0 <__deregister_frame@@GLIBC_2.0+0x1470>
   1f5b8:	b	1f660 <__deregister_frame@@GLIBC_2.0+0x1920>
   1f5bc:	ldr	x1, [sp, #16]
   1f5c0:	ldr	x0, [sp, #24]
   1f5c4:	bl	1f290 <__deregister_frame@@GLIBC_2.0+0x1550>
   1f5c8:	b	1f660 <__deregister_frame@@GLIBC_2.0+0x1920>
   1f5cc:	ldr	x0, [sp, #24]
   1f5d0:	ldrb	w0, [x0, #32]
   1f5d4:	and	w0, w0, #0x2
   1f5d8:	and	w0, w0, #0xff
   1f5dc:	cmp	w0, #0x0
   1f5e0:	b.eq	1f648 <__deregister_frame@@GLIBC_2.0+0x1908>  // b.none
   1f5e4:	ldr	x0, [sp, #24]
   1f5e8:	ldr	x0, [x0, #24]
   1f5ec:	str	x0, [sp, #40]
   1f5f0:	b	1f630 <__deregister_frame@@GLIBC_2.0+0x18f0>
   1f5f4:	ldr	x0, [sp, #40]
   1f5f8:	ldr	x0, [x0]
   1f5fc:	ldr	x2, [sp, #16]
   1f600:	mov	x1, x0
   1f604:	ldr	x0, [sp, #24]
   1f608:	bl	1efb4 <__deregister_frame@@GLIBC_2.0+0x1274>
   1f60c:	str	x0, [sp, #32]
   1f610:	ldr	x0, [sp, #32]
   1f614:	cmp	x0, #0x0
   1f618:	b.eq	1f624 <__deregister_frame@@GLIBC_2.0+0x18e4>  // b.none
   1f61c:	ldr	x0, [sp, #32]
   1f620:	b	1f660 <__deregister_frame@@GLIBC_2.0+0x1920>
   1f624:	ldr	x0, [sp, #40]
   1f628:	add	x0, x0, #0x8
   1f62c:	str	x0, [sp, #40]
   1f630:	ldr	x0, [sp, #40]
   1f634:	ldr	x0, [x0]
   1f638:	cmp	x0, #0x0
   1f63c:	b.ne	1f5f4 <__deregister_frame@@GLIBC_2.0+0x18b4>  // b.any
   1f640:	mov	x0, #0x0                   	// #0
   1f644:	b	1f660 <__deregister_frame@@GLIBC_2.0+0x1920>
   1f648:	ldr	x0, [sp, #24]
   1f64c:	ldr	x0, [x0, #24]
   1f650:	ldr	x2, [sp, #16]
   1f654:	mov	x1, x0
   1f658:	ldr	x0, [sp, #24]
   1f65c:	bl	1efb4 <__deregister_frame@@GLIBC_2.0+0x1274>
   1f660:	ldp	x29, x30, [sp], #48
   1f664:	ret
   1f668:	stp	x29, x30, [sp, #-96]!
   1f66c:	mov	x29, sp
   1f670:	str	x19, [sp, #16]
   1f674:	str	x0, [sp, #40]
   1f678:	str	x1, [sp, #32]
   1f67c:	str	xzr, [sp, #80]
   1f680:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f684:	add	x0, x0, #0x250
   1f688:	ldr	w0, [x0]
   1f68c:	cmp	w0, #0x0
   1f690:	cset	w0, eq  // eq = none
   1f694:	and	w0, w0, #0xff
   1f698:	and	x0, x0, #0xff
   1f69c:	cmp	x0, #0x0
   1f6a0:	b.eq	1f6ac <__deregister_frame@@GLIBC_2.0+0x196c>  // b.none
   1f6a4:	mov	x0, #0x0                   	// #0
   1f6a8:	b	1f8a8 <__deregister_frame@@GLIBC_2.0+0x1b68>
   1f6ac:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f6b0:	add	x0, x0, #0x258
   1f6b4:	bl	1d888 <_Unwind_Backtrace@@GCC_3.3+0x594>
   1f6b8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f6bc:	add	x0, x0, #0x248
   1f6c0:	ldr	x0, [x0]
   1f6c4:	str	x0, [sp, #88]
   1f6c8:	b	1f70c <__deregister_frame@@GLIBC_2.0+0x19cc>
   1f6cc:	ldr	x0, [sp, #88]
   1f6d0:	ldr	x0, [x0]
   1f6d4:	ldr	x1, [sp, #40]
   1f6d8:	cmp	x1, x0
   1f6dc:	b.cc	1f700 <__deregister_frame@@GLIBC_2.0+0x19c0>  // b.lo, b.ul, b.last
   1f6e0:	ldr	x1, [sp, #40]
   1f6e4:	ldr	x0, [sp, #88]
   1f6e8:	bl	1f508 <__deregister_frame@@GLIBC_2.0+0x17c8>
   1f6ec:	str	x0, [sp, #80]
   1f6f0:	ldr	x0, [sp, #80]
   1f6f4:	cmp	x0, #0x0
   1f6f8:	b.eq	1f71c <__deregister_frame@@GLIBC_2.0+0x19dc>  // b.none
   1f6fc:	b	1f7e8 <__deregister_frame@@GLIBC_2.0+0x1aa8>
   1f700:	ldr	x0, [sp, #88]
   1f704:	ldr	x0, [x0, #40]
   1f708:	str	x0, [sp, #88]
   1f70c:	ldr	x0, [sp, #88]
   1f710:	cmp	x0, #0x0
   1f714:	b.ne	1f6cc <__deregister_frame@@GLIBC_2.0+0x198c>  // b.any
   1f718:	b	1f7c4 <__deregister_frame@@GLIBC_2.0+0x1a84>
   1f71c:	nop
   1f720:	b	1f7c4 <__deregister_frame@@GLIBC_2.0+0x1a84>
   1f724:	ldr	x0, [sp, #88]
   1f728:	ldr	x1, [x0, #40]
   1f72c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f730:	add	x0, x0, #0x240
   1f734:	str	x1, [x0]
   1f738:	ldr	x1, [sp, #40]
   1f73c:	ldr	x0, [sp, #88]
   1f740:	bl	1f508 <__deregister_frame@@GLIBC_2.0+0x17c8>
   1f744:	str	x0, [sp, #80]
   1f748:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f74c:	add	x0, x0, #0x248
   1f750:	str	x0, [sp, #72]
   1f754:	b	1f784 <__deregister_frame@@GLIBC_2.0+0x1a44>
   1f758:	ldr	x0, [sp, #72]
   1f75c:	ldr	x0, [x0]
   1f760:	ldr	x1, [x0]
   1f764:	ldr	x0, [sp, #88]
   1f768:	ldr	x0, [x0]
   1f76c:	cmp	x1, x0
   1f770:	b.cc	1f798 <__deregister_frame@@GLIBC_2.0+0x1a58>  // b.lo, b.ul, b.last
   1f774:	ldr	x0, [sp, #72]
   1f778:	ldr	x0, [x0]
   1f77c:	add	x0, x0, #0x28
   1f780:	str	x0, [sp, #72]
   1f784:	ldr	x0, [sp, #72]
   1f788:	ldr	x0, [x0]
   1f78c:	cmp	x0, #0x0
   1f790:	b.ne	1f758 <__deregister_frame@@GLIBC_2.0+0x1a18>  // b.any
   1f794:	b	1f79c <__deregister_frame@@GLIBC_2.0+0x1a5c>
   1f798:	nop
   1f79c:	ldr	x0, [sp, #72]
   1f7a0:	ldr	x1, [x0]
   1f7a4:	ldr	x0, [sp, #88]
   1f7a8:	str	x1, [x0, #40]
   1f7ac:	ldr	x0, [sp, #72]
   1f7b0:	ldr	x1, [sp, #88]
   1f7b4:	str	x1, [x0]
   1f7b8:	ldr	x0, [sp, #80]
   1f7bc:	cmp	x0, #0x0
   1f7c0:	b.ne	1f7e4 <__deregister_frame@@GLIBC_2.0+0x1aa4>  // b.any
   1f7c4:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f7c8:	add	x0, x0, #0x240
   1f7cc:	ldr	x0, [x0]
   1f7d0:	str	x0, [sp, #88]
   1f7d4:	ldr	x0, [sp, #88]
   1f7d8:	cmp	x0, #0x0
   1f7dc:	b.ne	1f724 <__deregister_frame@@GLIBC_2.0+0x19e4>  // b.any
   1f7e0:	b	1f7e8 <__deregister_frame@@GLIBC_2.0+0x1aa8>
   1f7e4:	nop
   1f7e8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f7ec:	add	x0, x0, #0x258
   1f7f0:	bl	1d8b8 <_Unwind_Backtrace@@GCC_3.3+0x5c4>
   1f7f4:	ldr	x0, [sp, #80]
   1f7f8:	cmp	x0, #0x0
   1f7fc:	b.eq	1f8a4 <__deregister_frame@@GLIBC_2.0+0x1b64>  // b.none
   1f800:	ldr	x0, [sp, #88]
   1f804:	ldr	x1, [x0, #8]
   1f808:	ldr	x0, [sp, #32]
   1f80c:	str	x1, [x0]
   1f810:	ldr	x0, [sp, #88]
   1f814:	ldr	x1, [x0, #16]
   1f818:	ldr	x0, [sp, #32]
   1f81c:	str	x1, [x0, #8]
   1f820:	ldr	x0, [sp, #88]
   1f824:	ldrh	w0, [x0, #32]
   1f828:	ubfx	x0, x0, #3, #8
   1f82c:	and	w0, w0, #0xff
   1f830:	str	w0, [sp, #68]
   1f834:	ldr	x0, [sp, #88]
   1f838:	ldrb	w0, [x0, #32]
   1f83c:	and	w0, w0, #0x4
   1f840:	and	w0, w0, #0xff
   1f844:	cmp	w0, #0x0
   1f848:	b.eq	1f858 <__deregister_frame@@GLIBC_2.0+0x1b18>  // b.none
   1f84c:	ldr	x0, [sp, #80]
   1f850:	bl	1dfcc <__deregister_frame@@GLIBC_2.0+0x28c>
   1f854:	str	w0, [sp, #68]
   1f858:	ldr	w0, [sp, #68]
   1f85c:	and	w19, w0, #0xff
   1f860:	ldr	w0, [sp, #68]
   1f864:	and	w0, w0, #0xff
   1f868:	ldr	x1, [sp, #88]
   1f86c:	bl	1dd74 <__deregister_frame@@GLIBC_2.0+0x34>
   1f870:	mov	x4, x0
   1f874:	ldr	x0, [sp, #80]
   1f878:	add	x0, x0, #0x8
   1f87c:	add	x1, sp, #0x38
   1f880:	mov	x3, x1
   1f884:	mov	x2, x0
   1f888:	mov	x1, x4
   1f88c:	mov	w0, w19
   1f890:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1f894:	ldr	x0, [sp, #56]
   1f898:	mov	x1, x0
   1f89c:	ldr	x0, [sp, #32]
   1f8a0:	str	x1, [x0, #16]
   1f8a4:	ldr	x0, [sp, #80]
   1f8a8:	ldr	x19, [sp, #16]
   1f8ac:	ldp	x29, x30, [sp], #96
   1f8b0:	ret
   1f8b4:	stp	x29, x30, [sp, #-32]!
   1f8b8:	mov	x29, sp
   1f8bc:	strb	w0, [sp, #31]
   1f8c0:	str	x1, [sp, #16]
   1f8c4:	ldrb	w0, [sp, #31]
   1f8c8:	cmp	w0, #0xff
   1f8cc:	b.ne	1f8d8 <__deregister_frame@@GLIBC_2.0+0x1b98>  // b.any
   1f8d0:	mov	x0, #0x0                   	// #0
   1f8d4:	b	1f944 <__deregister_frame@@GLIBC_2.0+0x1c04>
   1f8d8:	ldrb	w0, [sp, #31]
   1f8dc:	and	w0, w0, #0x70
   1f8e0:	cmp	w0, #0x50
   1f8e4:	b.eq	1f920 <__deregister_frame@@GLIBC_2.0+0x1be0>  // b.none
   1f8e8:	cmp	w0, #0x50
   1f8ec:	b.gt	1f940 <__deregister_frame@@GLIBC_2.0+0x1c00>
   1f8f0:	cmp	w0, #0x30
   1f8f4:	b.eq	1f934 <__deregister_frame@@GLIBC_2.0+0x1bf4>  // b.none
   1f8f8:	cmp	w0, #0x30
   1f8fc:	b.gt	1f940 <__deregister_frame@@GLIBC_2.0+0x1c00>
   1f900:	cmp	w0, #0x20
   1f904:	b.eq	1f928 <__deregister_frame@@GLIBC_2.0+0x1be8>  // b.none
   1f908:	cmp	w0, #0x20
   1f90c:	b.gt	1f940 <__deregister_frame@@GLIBC_2.0+0x1c00>
   1f910:	cmp	w0, #0x0
   1f914:	b.eq	1f920 <__deregister_frame@@GLIBC_2.0+0x1be0>  // b.none
   1f918:	cmp	w0, #0x10
   1f91c:	b.ne	1f940 <__deregister_frame@@GLIBC_2.0+0x1c00>  // b.any
   1f920:	mov	x0, #0x0                   	// #0
   1f924:	b	1f944 <__deregister_frame@@GLIBC_2.0+0x1c04>
   1f928:	ldr	x0, [sp, #16]
   1f92c:	ldr	x0, [x0, #8]
   1f930:	b	1f944 <__deregister_frame@@GLIBC_2.0+0x1c04>
   1f934:	ldr	x0, [sp, #16]
   1f938:	ldr	x0, [x0, #16]
   1f93c:	b	1f944 <__deregister_frame@@GLIBC_2.0+0x1c04>
   1f940:	bl	2cb0 <abort@plt>
   1f944:	ldp	x29, x30, [sp], #32
   1f948:	ret
   1f94c:	stp	x29, x30, [sp, #-352]!
   1f950:	mov	x29, sp
   1f954:	str	x19, [sp, #16]
   1f958:	str	x0, [sp, #56]
   1f95c:	str	x1, [sp, #48]
   1f960:	str	x2, [sp, #40]
   1f964:	ldr	x0, [sp, #40]
   1f968:	str	x0, [sp, #224]
   1f96c:	str	xzr, [sp, #296]
   1f970:	str	xzr, [sp, #288]
   1f974:	str	xzr, [sp, #312]
   1f978:	ldr	x0, [sp, #56]
   1f97c:	ldr	x0, [x0, #16]
   1f980:	str	x0, [sp, #344]
   1f984:	ldr	x0, [sp, #56]
   1f988:	ldr	x0, [x0]
   1f98c:	str	x0, [sp, #304]
   1f990:	str	xzr, [sp, #336]
   1f994:	str	xzr, [sp, #328]
   1f998:	str	xzr, [sp, #280]
   1f99c:	str	xzr, [sp, #272]
   1f9a0:	ldr	x0, [sp, #224]
   1f9a4:	ldr	w0, [x0, #40]
   1f9a8:	cmp	w0, #0x0
   1f9ac:	b.eq	1fc38 <__deregister_frame@@GLIBC_2.0+0x1ef8>  // b.none
   1f9b0:	ldr	x0, [sp, #48]
   1f9b4:	cmp	x0, #0x2f
   1f9b8:	b.ls	1fc38 <__deregister_frame@@GLIBC_2.0+0x1ef8>  // b.plast
   1f9bc:	ldr	x0, [sp, #56]
   1f9c0:	str	x0, [sp, #216]
   1f9c4:	ldr	x0, [sp, #216]
   1f9c8:	ldr	x1, [x0, #32]
   1f9cc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f9d0:	add	x0, x0, #0x1a0
   1f9d4:	ldr	x0, [x0]
   1f9d8:	cmp	x1, x0
   1f9dc:	b.ne	1fb14 <__deregister_frame@@GLIBC_2.0+0x1dd4>  // b.any
   1f9e0:	ldr	x0, [sp, #216]
   1f9e4:	ldr	x1, [x0, #40]
   1f9e8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1f9ec:	add	x0, x0, #0x418
   1f9f0:	ldr	x0, [x0]
   1f9f4:	cmp	x1, x0
   1f9f8:	b.ne	1fb14 <__deregister_frame@@GLIBC_2.0+0x1dd4>  // b.any
   1f9fc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fa00:	add	x0, x0, #0x408
   1fa04:	ldr	x0, [x0]
   1fa08:	str	x0, [sp, #264]
   1fa0c:	b	1fafc <__deregister_frame@@GLIBC_2.0+0x1dbc>
   1fa10:	ldr	x0, [sp, #224]
   1fa14:	ldr	x1, [x0]
   1fa18:	ldr	x0, [sp, #264]
   1fa1c:	ldr	x0, [x0]
   1fa20:	cmp	x1, x0
   1fa24:	b.cc	1fab4 <__deregister_frame@@GLIBC_2.0+0x1d74>  // b.lo, b.ul, b.last
   1fa28:	ldr	x0, [sp, #224]
   1fa2c:	ldr	x1, [x0]
   1fa30:	ldr	x0, [sp, #264]
   1fa34:	ldr	x0, [x0, #8]
   1fa38:	cmp	x1, x0
   1fa3c:	b.cs	1fab4 <__deregister_frame@@GLIBC_2.0+0x1d74>  // b.hs, b.nlast
   1fa40:	ldr	x0, [sp, #264]
   1fa44:	ldr	x0, [x0, #16]
   1fa48:	str	x0, [sp, #304]
   1fa4c:	ldr	x0, [sp, #264]
   1fa50:	ldr	x0, [x0, #24]
   1fa54:	str	x0, [sp, #336]
   1fa58:	ldr	x0, [sp, #264]
   1fa5c:	ldr	x0, [x0, #32]
   1fa60:	str	x0, [sp, #328]
   1fa64:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fa68:	add	x0, x0, #0x408
   1fa6c:	ldr	x0, [x0]
   1fa70:	ldr	x1, [sp, #264]
   1fa74:	cmp	x1, x0
   1fa78:	b.eq	1fe14 <__deregister_frame@@GLIBC_2.0+0x20d4>  // b.none
   1fa7c:	ldr	x0, [sp, #264]
   1fa80:	ldr	x1, [x0, #40]
   1fa84:	ldr	x0, [sp, #280]
   1fa88:	str	x1, [x0, #40]
   1fa8c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fa90:	add	x0, x0, #0x408
   1fa94:	ldr	x1, [x0]
   1fa98:	ldr	x0, [sp, #264]
   1fa9c:	str	x1, [x0, #40]
   1faa0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1faa4:	add	x0, x0, #0x408
   1faa8:	ldr	x1, [sp, #264]
   1faac:	str	x1, [x0]
   1fab0:	b	1fe14 <__deregister_frame@@GLIBC_2.0+0x20d4>
   1fab4:	ldr	x0, [sp, #264]
   1fab8:	str	x0, [sp, #272]
   1fabc:	ldr	x0, [sp, #264]
   1fac0:	ldr	x1, [x0]
   1fac4:	ldr	x0, [sp, #264]
   1fac8:	ldr	x0, [x0, #8]
   1facc:	orr	x0, x1, x0
   1fad0:	cmp	x0, #0x0
   1fad4:	b.eq	1fb0c <__deregister_frame@@GLIBC_2.0+0x1dcc>  // b.none
   1fad8:	ldr	x0, [sp, #264]
   1fadc:	ldr	x0, [x0, #40]
   1fae0:	cmp	x0, #0x0
   1fae4:	b.eq	1faf0 <__deregister_frame@@GLIBC_2.0+0x1db0>  // b.none
   1fae8:	ldr	x0, [sp, #264]
   1faec:	str	x0, [sp, #280]
   1faf0:	ldr	x0, [sp, #264]
   1faf4:	ldr	x0, [x0, #40]
   1faf8:	str	x0, [sp, #264]
   1fafc:	ldr	x0, [sp, #264]
   1fb00:	cmp	x0, #0x0
   1fb04:	b.ne	1fa10 <__deregister_frame@@GLIBC_2.0+0x1cd0>  // b.any
   1fb08:	b	1fc38 <__deregister_frame@@GLIBC_2.0+0x1ef8>
   1fb0c:	nop
   1fb10:	b	1fc38 <__deregister_frame@@GLIBC_2.0+0x1ef8>
   1fb14:	ldr	x0, [sp, #216]
   1fb18:	ldr	x1, [x0, #32]
   1fb1c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fb20:	add	x0, x0, #0x1a0
   1fb24:	str	x1, [x0]
   1fb28:	ldr	x0, [sp, #216]
   1fb2c:	ldr	x1, [x0, #40]
   1fb30:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fb34:	add	x0, x0, #0x418
   1fb38:	str	x1, [x0]
   1fb3c:	str	wzr, [sp, #260]
   1fb40:	b	1fbe4 <__deregister_frame@@GLIBC_2.0+0x1ea4>
   1fb44:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fb48:	add	x2, x0, #0x288
   1fb4c:	ldrsw	x1, [sp, #260]
   1fb50:	mov	x0, x1
   1fb54:	lsl	x0, x0, #1
   1fb58:	add	x0, x0, x1
   1fb5c:	lsl	x0, x0, #4
   1fb60:	add	x0, x2, x0
   1fb64:	str	xzr, [x0]
   1fb68:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fb6c:	add	x2, x0, #0x288
   1fb70:	ldrsw	x1, [sp, #260]
   1fb74:	mov	x0, x1
   1fb78:	lsl	x0, x0, #1
   1fb7c:	add	x0, x0, x1
   1fb80:	lsl	x0, x0, #4
   1fb84:	add	x0, x2, x0
   1fb88:	str	xzr, [x0, #8]
   1fb8c:	ldr	w0, [sp, #260]
   1fb90:	add	w0, w0, #0x1
   1fb94:	sxtw	x1, w0
   1fb98:	mov	x0, x1
   1fb9c:	lsl	x0, x0, #1
   1fba0:	add	x0, x0, x1
   1fba4:	lsl	x0, x0, #4
   1fba8:	adrp	x1, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fbac:	add	x1, x1, #0x288
   1fbb0:	add	x2, x0, x1
   1fbb4:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fbb8:	add	x3, x0, #0x288
   1fbbc:	ldrsw	x1, [sp, #260]
   1fbc0:	mov	x0, x1
   1fbc4:	lsl	x0, x0, #1
   1fbc8:	add	x0, x0, x1
   1fbcc:	lsl	x0, x0, #4
   1fbd0:	add	x0, x3, x0
   1fbd4:	str	x2, [x0, #40]
   1fbd8:	ldr	w0, [sp, #260]
   1fbdc:	add	w0, w0, #0x1
   1fbe0:	str	w0, [sp, #260]
   1fbe4:	ldr	w0, [sp, #260]
   1fbe8:	cmp	w0, #0x7
   1fbec:	b.le	1fb44 <__deregister_frame@@GLIBC_2.0+0x1e04>
   1fbf0:	ldr	w0, [sp, #260]
   1fbf4:	sub	w1, w0, #0x1
   1fbf8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fbfc:	add	x2, x0, #0x288
   1fc00:	sxtw	x1, w1
   1fc04:	mov	x0, x1
   1fc08:	lsl	x0, x0, #1
   1fc0c:	add	x0, x0, x1
   1fc10:	lsl	x0, x0, #4
   1fc14:	add	x0, x2, x0
   1fc18:	str	xzr, [x0, #40]
   1fc1c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fc20:	add	x0, x0, #0x408
   1fc24:	adrp	x1, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fc28:	add	x1, x1, #0x288
   1fc2c:	str	x1, [x0]
   1fc30:	ldr	x0, [sp, #224]
   1fc34:	str	wzr, [x0, #40]
   1fc38:	ldr	x0, [sp, #48]
   1fc3c:	cmp	x0, #0x19
   1fc40:	b.hi	1fc4c <__deregister_frame@@GLIBC_2.0+0x1f0c>  // b.pmore
   1fc44:	mov	w0, #0xffffffff            	// #-1
   1fc48:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   1fc4c:	ldr	x0, [sp, #56]
   1fc50:	ldrh	w0, [x0, #24]
   1fc54:	and	x0, x0, #0xffff
   1fc58:	str	x0, [sp, #320]
   1fc5c:	b	1fd28 <__deregister_frame@@GLIBC_2.0+0x1fe8>
   1fc60:	ldr	x0, [sp, #344]
   1fc64:	ldr	w0, [x0]
   1fc68:	cmp	w0, #0x1
   1fc6c:	b.ne	1fce0 <__deregister_frame@@GLIBC_2.0+0x1fa0>  // b.any
   1fc70:	ldr	x0, [sp, #344]
   1fc74:	ldr	x0, [x0, #16]
   1fc78:	ldr	x1, [sp, #304]
   1fc7c:	add	x0, x1, x0
   1fc80:	str	x0, [sp, #208]
   1fc84:	ldr	x0, [sp, #224]
   1fc88:	ldr	x0, [x0]
   1fc8c:	ldr	x1, [sp, #208]
   1fc90:	cmp	x1, x0
   1fc94:	b.hi	1fd1c <__deregister_frame@@GLIBC_2.0+0x1fdc>  // b.pmore
   1fc98:	ldr	x0, [sp, #224]
   1fc9c:	ldr	x1, [x0]
   1fca0:	ldr	x0, [sp, #344]
   1fca4:	ldr	x2, [x0, #40]
   1fca8:	ldr	x0, [sp, #208]
   1fcac:	add	x0, x2, x0
   1fcb0:	cmp	x1, x0
   1fcb4:	b.cs	1fd1c <__deregister_frame@@GLIBC_2.0+0x1fdc>  // b.hs, b.nlast
   1fcb8:	mov	x0, #0x1                   	// #1
   1fcbc:	str	x0, [sp, #312]
   1fcc0:	ldr	x0, [sp, #208]
   1fcc4:	str	x0, [sp, #296]
   1fcc8:	ldr	x0, [sp, #344]
   1fccc:	ldr	x0, [x0, #40]
   1fcd0:	ldr	x1, [sp, #208]
   1fcd4:	add	x0, x1, x0
   1fcd8:	str	x0, [sp, #288]
   1fcdc:	b	1fd1c <__deregister_frame@@GLIBC_2.0+0x1fdc>
   1fce0:	ldr	x0, [sp, #344]
   1fce4:	ldr	w1, [x0]
   1fce8:	mov	w0, #0xe550                	// #58704
   1fcec:	movk	w0, #0x6474, lsl #16
   1fcf0:	cmp	w1, w0
   1fcf4:	b.ne	1fd04 <__deregister_frame@@GLIBC_2.0+0x1fc4>  // b.any
   1fcf8:	ldr	x0, [sp, #344]
   1fcfc:	str	x0, [sp, #336]
   1fd00:	b	1fd1c <__deregister_frame@@GLIBC_2.0+0x1fdc>
   1fd04:	ldr	x0, [sp, #344]
   1fd08:	ldr	w0, [x0]
   1fd0c:	cmp	w0, #0x2
   1fd10:	b.ne	1fd1c <__deregister_frame@@GLIBC_2.0+0x1fdc>  // b.any
   1fd14:	ldr	x0, [sp, #344]
   1fd18:	str	x0, [sp, #328]
   1fd1c:	ldr	x0, [sp, #344]
   1fd20:	add	x0, x0, #0x38
   1fd24:	str	x0, [sp, #344]
   1fd28:	ldr	x0, [sp, #320]
   1fd2c:	sub	x0, x0, #0x1
   1fd30:	str	x0, [sp, #320]
   1fd34:	ldr	x0, [sp, #320]
   1fd38:	cmp	x0, #0x0
   1fd3c:	b.ge	1fc60 <__deregister_frame@@GLIBC_2.0+0x1f20>  // b.tcont
   1fd40:	ldr	x0, [sp, #312]
   1fd44:	cmp	x0, #0x0
   1fd48:	b.ne	1fd54 <__deregister_frame@@GLIBC_2.0+0x2014>  // b.any
   1fd4c:	mov	w0, #0x0                   	// #0
   1fd50:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   1fd54:	ldr	x0, [sp, #48]
   1fd58:	cmp	x0, #0x2f
   1fd5c:	b.ls	1fe1c <__deregister_frame@@GLIBC_2.0+0x20dc>  // b.plast
   1fd60:	ldr	x0, [sp, #272]
   1fd64:	cmp	x0, #0x0
   1fd68:	b.eq	1fdac <__deregister_frame@@GLIBC_2.0+0x206c>  // b.none
   1fd6c:	ldr	x0, [sp, #280]
   1fd70:	cmp	x0, #0x0
   1fd74:	b.eq	1fdac <__deregister_frame@@GLIBC_2.0+0x206c>  // b.none
   1fd78:	ldr	x0, [sp, #272]
   1fd7c:	ldr	x1, [x0, #40]
   1fd80:	ldr	x0, [sp, #280]
   1fd84:	str	x1, [x0, #40]
   1fd88:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fd8c:	add	x0, x0, #0x408
   1fd90:	ldr	x1, [x0]
   1fd94:	ldr	x0, [sp, #272]
   1fd98:	str	x1, [x0, #40]
   1fd9c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fda0:	add	x0, x0, #0x408
   1fda4:	ldr	x1, [sp, #272]
   1fda8:	str	x1, [x0]
   1fdac:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fdb0:	add	x0, x0, #0x408
   1fdb4:	ldr	x0, [x0]
   1fdb8:	ldr	x1, [sp, #304]
   1fdbc:	str	x1, [x0, #16]
   1fdc0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fdc4:	add	x0, x0, #0x408
   1fdc8:	ldr	x0, [x0]
   1fdcc:	ldr	x1, [sp, #336]
   1fdd0:	str	x1, [x0, #24]
   1fdd4:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fdd8:	add	x0, x0, #0x408
   1fddc:	ldr	x0, [x0]
   1fde0:	ldr	x1, [sp, #328]
   1fde4:	str	x1, [x0, #32]
   1fde8:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fdec:	add	x0, x0, #0x408
   1fdf0:	ldr	x0, [x0]
   1fdf4:	ldr	x1, [sp, #296]
   1fdf8:	str	x1, [x0]
   1fdfc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   1fe00:	add	x0, x0, #0x408
   1fe04:	ldr	x0, [x0]
   1fe08:	ldr	x1, [sp, #288]
   1fe0c:	str	x1, [x0, #8]
   1fe10:	b	1fe20 <__deregister_frame@@GLIBC_2.0+0x20e0>
   1fe14:	nop
   1fe18:	b	1fe20 <__deregister_frame@@GLIBC_2.0+0x20e0>
   1fe1c:	nop
   1fe20:	ldr	x0, [sp, #336]
   1fe24:	cmp	x0, #0x0
   1fe28:	b.ne	1fe34 <__deregister_frame@@GLIBC_2.0+0x20f4>  // b.any
   1fe2c:	mov	w0, #0x0                   	// #0
   1fe30:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   1fe34:	ldr	x0, [sp, #336]
   1fe38:	ldr	x1, [x0, #16]
   1fe3c:	ldr	x0, [sp, #304]
   1fe40:	add	x0, x1, x0
   1fe44:	str	x0, [sp, #200]
   1fe48:	ldr	x0, [sp, #200]
   1fe4c:	ldrb	w0, [x0]
   1fe50:	cmp	w0, #0x1
   1fe54:	b.eq	1fe60 <__deregister_frame@@GLIBC_2.0+0x2120>  // b.none
   1fe58:	mov	w0, #0x1                   	// #1
   1fe5c:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   1fe60:	ldr	x0, [sp, #200]
   1fe64:	ldrb	w19, [x0, #1]
   1fe68:	ldr	x0, [sp, #200]
   1fe6c:	ldrb	w0, [x0, #1]
   1fe70:	ldr	x1, [sp, #224]
   1fe74:	bl	1f8b4 <__deregister_frame@@GLIBC_2.0+0x1b74>
   1fe78:	mov	x4, x0
   1fe7c:	ldr	x0, [sp, #200]
   1fe80:	add	x0, x0, #0x4
   1fe84:	add	x1, sp, #0x90
   1fe88:	mov	x3, x1
   1fe8c:	mov	x2, x0
   1fe90:	mov	x1, x4
   1fe94:	mov	w0, w19
   1fe98:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1fe9c:	str	x0, [sp, #192]
   1fea0:	ldr	x0, [sp, #200]
   1fea4:	ldrb	w0, [x0, #2]
   1fea8:	cmp	w0, #0xff
   1feac:	b.eq	2014c <__deregister_frame@@GLIBC_2.0+0x240c>  // b.none
   1feb0:	ldr	x0, [sp, #200]
   1feb4:	ldrb	w0, [x0, #3]
   1feb8:	cmp	w0, #0x3b
   1febc:	b.ne	2014c <__deregister_frame@@GLIBC_2.0+0x240c>  // b.any
   1fec0:	ldr	x0, [sp, #200]
   1fec4:	ldrb	w19, [x0, #2]
   1fec8:	ldr	x0, [sp, #200]
   1fecc:	ldrb	w0, [x0, #2]
   1fed0:	ldr	x1, [sp, #224]
   1fed4:	bl	1f8b4 <__deregister_frame@@GLIBC_2.0+0x1b74>
   1fed8:	mov	x1, x0
   1fedc:	add	x0, sp, #0x58
   1fee0:	mov	x3, x0
   1fee4:	ldr	x2, [sp, #192]
   1fee8:	mov	w0, w19
   1feec:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   1fef0:	str	x0, [sp, #192]
   1fef4:	ldr	x0, [sp, #88]
   1fef8:	cmp	x0, #0x0
   1fefc:	b.ne	1ff08 <__deregister_frame@@GLIBC_2.0+0x21c8>  // b.any
   1ff00:	mov	w0, #0x1                   	// #1
   1ff04:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   1ff08:	ldr	x0, [sp, #192]
   1ff0c:	and	x0, x0, #0x3
   1ff10:	cmp	x0, #0x0
   1ff14:	b.ne	2014c <__deregister_frame@@GLIBC_2.0+0x240c>  // b.any
   1ff18:	ldr	x0, [sp, #192]
   1ff1c:	str	x0, [sp, #184]
   1ff20:	ldr	x0, [sp, #200]
   1ff24:	str	x0, [sp, #176]
   1ff28:	ldr	x0, [sp, #88]
   1ff2c:	sub	x0, x0, #0x1
   1ff30:	str	x0, [sp, #232]
   1ff34:	ldr	x0, [sp, #224]
   1ff38:	ldr	x1, [x0]
   1ff3c:	ldr	x0, [sp, #184]
   1ff40:	ldr	w0, [x0]
   1ff44:	sxtw	x2, w0
   1ff48:	ldr	x0, [sp, #176]
   1ff4c:	add	x0, x2, x0
   1ff50:	cmp	x1, x0
   1ff54:	b.cs	1ff60 <__deregister_frame@@GLIBC_2.0+0x2220>  // b.hs, b.nlast
   1ff58:	mov	w0, #0x1                   	// #1
   1ff5c:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   1ff60:	ldr	x0, [sp, #224]
   1ff64:	ldr	x1, [x0]
   1ff68:	ldr	x0, [sp, #232]
   1ff6c:	lsl	x0, x0, #3
   1ff70:	ldr	x2, [sp, #184]
   1ff74:	add	x0, x2, x0
   1ff78:	ldr	w0, [x0]
   1ff7c:	sxtw	x2, w0
   1ff80:	ldr	x0, [sp, #176]
   1ff84:	add	x0, x2, x0
   1ff88:	cmp	x1, x0
   1ff8c:	b.cs	2005c <__deregister_frame@@GLIBC_2.0+0x231c>  // b.hs, b.nlast
   1ff90:	str	xzr, [sp, #248]
   1ff94:	ldr	x0, [sp, #232]
   1ff98:	str	x0, [sp, #240]
   1ff9c:	b	20030 <__deregister_frame@@GLIBC_2.0+0x22f0>
   1ffa0:	ldr	x1, [sp, #248]
   1ffa4:	ldr	x0, [sp, #240]
   1ffa8:	add	x0, x1, x0
   1ffac:	lsr	x0, x0, #1
   1ffb0:	str	x0, [sp, #232]
   1ffb4:	ldr	x0, [sp, #224]
   1ffb8:	ldr	x1, [x0]
   1ffbc:	ldr	x0, [sp, #232]
   1ffc0:	lsl	x0, x0, #3
   1ffc4:	ldr	x2, [sp, #184]
   1ffc8:	add	x0, x2, x0
   1ffcc:	ldr	w0, [x0]
   1ffd0:	sxtw	x2, w0
   1ffd4:	ldr	x0, [sp, #176]
   1ffd8:	add	x0, x2, x0
   1ffdc:	cmp	x1, x0
   1ffe0:	b.cs	1fff0 <__deregister_frame@@GLIBC_2.0+0x22b0>  // b.hs, b.nlast
   1ffe4:	ldr	x0, [sp, #232]
   1ffe8:	str	x0, [sp, #240]
   1ffec:	b	20030 <__deregister_frame@@GLIBC_2.0+0x22f0>
   1fff0:	ldr	x0, [sp, #224]
   1fff4:	ldr	x1, [x0]
   1fff8:	ldr	x0, [sp, #232]
   1fffc:	add	x0, x0, #0x1
   20000:	lsl	x0, x0, #3
   20004:	ldr	x2, [sp, #184]
   20008:	add	x0, x2, x0
   2000c:	ldr	w0, [x0]
   20010:	sxtw	x2, w0
   20014:	ldr	x0, [sp, #176]
   20018:	add	x0, x2, x0
   2001c:	cmp	x1, x0
   20020:	b.cc	20044 <__deregister_frame@@GLIBC_2.0+0x2304>  // b.lo, b.ul, b.last
   20024:	ldr	x0, [sp, #232]
   20028:	add	x0, x0, #0x1
   2002c:	str	x0, [sp, #248]
   20030:	ldr	x1, [sp, #248]
   20034:	ldr	x0, [sp, #240]
   20038:	cmp	x1, x0
   2003c:	b.cc	1ffa0 <__deregister_frame@@GLIBC_2.0+0x2260>  // b.lo, b.ul, b.last
   20040:	b	20048 <__deregister_frame@@GLIBC_2.0+0x2308>
   20044:	nop
   20048:	ldr	x1, [sp, #248]
   2004c:	ldr	x0, [sp, #240]
   20050:	cmp	x1, x0
   20054:	b.cc	2005c <__deregister_frame@@GLIBC_2.0+0x231c>  // b.lo, b.ul, b.last
   20058:	bl	2cb0 <abort@plt>
   2005c:	ldr	x0, [sp, #232]
   20060:	lsl	x0, x0, #3
   20064:	ldr	x1, [sp, #184]
   20068:	add	x0, x1, x0
   2006c:	ldr	w0, [x0, #4]
   20070:	sxtw	x1, w0
   20074:	ldr	x0, [sp, #176]
   20078:	add	x0, x1, x0
   2007c:	str	x0, [sp, #168]
   20080:	ldr	x0, [sp, #168]
   20084:	bl	1dfcc <__deregister_frame@@GLIBC_2.0+0x28c>
   20088:	str	w0, [sp, #164]
   2008c:	ldr	w0, [sp, #164]
   20090:	and	w0, w0, #0xff
   20094:	bl	1d3e0 <_Unwind_Backtrace@@GCC_3.3+0xec>
   20098:	str	w0, [sp, #160]
   2009c:	ldr	w0, [sp, #164]
   200a0:	and	w0, w0, #0xff
   200a4:	and	w0, w0, #0xf
   200a8:	and	w4, w0, #0xff
   200ac:	ldr	w0, [sp, #160]
   200b0:	ldr	x1, [sp, #168]
   200b4:	add	x0, x1, x0
   200b8:	add	x0, x0, #0x8
   200bc:	add	x1, sp, #0x50
   200c0:	mov	x3, x1
   200c4:	mov	x2, x0
   200c8:	mov	x1, #0x0                   	// #0
   200cc:	mov	w0, w4
   200d0:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   200d4:	ldr	x0, [sp, #224]
   200d8:	ldr	x1, [x0]
   200dc:	ldr	x0, [sp, #232]
   200e0:	lsl	x0, x0, #3
   200e4:	ldr	x2, [sp, #184]
   200e8:	add	x0, x2, x0
   200ec:	ldr	w0, [x0]
   200f0:	sxtw	x2, w0
   200f4:	ldr	x0, [sp, #176]
   200f8:	add	x2, x2, x0
   200fc:	ldr	x0, [sp, #80]
   20100:	add	x0, x2, x0
   20104:	cmp	x1, x0
   20108:	b.cs	20118 <__deregister_frame@@GLIBC_2.0+0x23d8>  // b.hs, b.nlast
   2010c:	ldr	x0, [sp, #224]
   20110:	ldr	x1, [sp, #168]
   20114:	str	x1, [x0, #32]
   20118:	ldr	x0, [sp, #232]
   2011c:	lsl	x0, x0, #3
   20120:	ldr	x1, [sp, #184]
   20124:	add	x0, x1, x0
   20128:	ldr	w0, [x0]
   2012c:	sxtw	x1, w0
   20130:	ldr	x0, [sp, #176]
   20134:	add	x0, x1, x0
   20138:	mov	x1, x0
   2013c:	ldr	x0, [sp, #224]
   20140:	str	x1, [x0, #24]
   20144:	mov	w0, #0x1                   	// #1
   20148:	b	2021c <__deregister_frame@@GLIBC_2.0+0x24dc>
   2014c:	str	xzr, [sp, #96]
   20150:	ldr	x0, [sp, #224]
   20154:	ldr	x0, [x0, #8]
   20158:	str	x0, [sp, #104]
   2015c:	ldr	x0, [sp, #224]
   20160:	ldr	x0, [x0, #16]
   20164:	str	x0, [sp, #112]
   20168:	ldr	x0, [sp, #144]
   2016c:	str	x0, [sp, #120]
   20170:	str	xzr, [sp, #128]
   20174:	ldrb	w0, [sp, #128]
   20178:	orr	w0, w0, #0x4
   2017c:	strb	w0, [sp, #128]
   20180:	ldr	x0, [sp, #144]
   20184:	mov	x1, x0
   20188:	ldr	x0, [sp, #224]
   2018c:	ldr	x0, [x0]
   20190:	mov	x2, x0
   20194:	add	x0, sp, #0x60
   20198:	bl	1efb4 <__deregister_frame@@GLIBC_2.0+0x1274>
   2019c:	mov	x1, x0
   201a0:	ldr	x0, [sp, #224]
   201a4:	str	x1, [x0, #32]
   201a8:	ldr	x0, [sp, #224]
   201ac:	ldr	x0, [x0, #32]
   201b0:	cmp	x0, #0x0
   201b4:	b.eq	20218 <__deregister_frame@@GLIBC_2.0+0x24d8>  // b.none
   201b8:	ldr	x0, [sp, #224]
   201bc:	ldr	x0, [x0, #32]
   201c0:	bl	1dfcc <__deregister_frame@@GLIBC_2.0+0x28c>
   201c4:	str	w0, [sp, #156]
   201c8:	ldr	w0, [sp, #156]
   201cc:	and	w19, w0, #0xff
   201d0:	ldr	w0, [sp, #156]
   201d4:	and	w0, w0, #0xff
   201d8:	ldr	x1, [sp, #224]
   201dc:	bl	1f8b4 <__deregister_frame@@GLIBC_2.0+0x1b74>
   201e0:	mov	x4, x0
   201e4:	ldr	x0, [sp, #224]
   201e8:	ldr	x0, [x0, #32]
   201ec:	add	x0, x0, #0x8
   201f0:	add	x1, sp, #0x48
   201f4:	mov	x3, x1
   201f8:	mov	x2, x0
   201fc:	mov	x1, x4
   20200:	mov	w0, w19
   20204:	bl	1d588 <_Unwind_Backtrace@@GCC_3.3+0x294>
   20208:	ldr	x0, [sp, #72]
   2020c:	mov	x1, x0
   20210:	ldr	x0, [sp, #224]
   20214:	str	x1, [x0, #24]
   20218:	mov	w0, #0x1                   	// #1
   2021c:	ldr	x19, [sp, #16]
   20220:	ldp	x29, x30, [sp], #352
   20224:	ret

0000000000020228 <_Unwind_Find_FDE@@GCC_3.0>:
   20228:	stp	x29, x30, [sp, #-96]!
   2022c:	mov	x29, sp
   20230:	str	x0, [sp, #24]
   20234:	str	x1, [sp, #16]
   20238:	ldr	x1, [sp, #16]
   2023c:	ldr	x0, [sp, #24]
   20240:	bl	1f668 <__deregister_frame@@GLIBC_2.0+0x1928>
   20244:	str	x0, [sp, #88]
   20248:	ldr	x0, [sp, #88]
   2024c:	cmp	x0, #0x0
   20250:	b.eq	2025c <_Unwind_Find_FDE@@GCC_3.0+0x34>  // b.none
   20254:	ldr	x0, [sp, #88]
   20258:	b	202d4 <_Unwind_Find_FDE@@GCC_3.0+0xac>
   2025c:	ldr	x0, [sp, #24]
   20260:	str	x0, [sp, #40]
   20264:	str	xzr, [sp, #48]
   20268:	str	xzr, [sp, #56]
   2026c:	str	xzr, [sp, #64]
   20270:	str	xzr, [sp, #72]
   20274:	mov	w0, #0x1                   	// #1
   20278:	str	w0, [sp, #80]
   2027c:	add	x0, sp, #0x28
   20280:	mov	x1, x0
   20284:	adrp	x0, 1f000 <__deregister_frame@@GLIBC_2.0+0x12c0>
   20288:	add	x0, x0, #0x94c
   2028c:	bl	2ce0 <dl_iterate_phdr@plt>
   20290:	cmp	w0, #0x0
   20294:	b.ge	202a0 <_Unwind_Find_FDE@@GCC_3.0+0x78>  // b.tcont
   20298:	mov	x0, #0x0                   	// #0
   2029c:	b	202d4 <_Unwind_Find_FDE@@GCC_3.0+0xac>
   202a0:	ldr	x0, [sp, #72]
   202a4:	cmp	x0, #0x0
   202a8:	b.eq	202d0 <_Unwind_Find_FDE@@GCC_3.0+0xa8>  // b.none
   202ac:	ldr	x1, [sp, #48]
   202b0:	ldr	x0, [sp, #16]
   202b4:	str	x1, [x0]
   202b8:	ldr	x1, [sp, #56]
   202bc:	ldr	x0, [sp, #16]
   202c0:	str	x1, [x0, #8]
   202c4:	ldr	x1, [sp, #64]
   202c8:	ldr	x0, [sp, #16]
   202cc:	str	x1, [x0, #16]
   202d0:	ldr	x0, [sp, #72]
   202d4:	ldp	x29, x30, [sp], #96
   202d8:	ret
   202dc:	stp	x29, x30, [sp, #-32]!
   202e0:	mov	x29, sp
   202e4:	strb	w0, [sp, #31]
   202e8:	str	x1, [sp, #16]
   202ec:	ldrb	w0, [sp, #31]
   202f0:	cmp	w0, #0xff
   202f4:	b.ne	20300 <_Unwind_Find_FDE@@GCC_3.0+0xd8>  // b.any
   202f8:	mov	x0, #0x0                   	// #0
   202fc:	b	20388 <_Unwind_Find_FDE@@GCC_3.0+0x160>
   20300:	ldrb	w0, [sp, #31]
   20304:	and	w0, w0, #0x70
   20308:	cmp	w0, #0x50
   2030c:	b.eq	20358 <_Unwind_Find_FDE@@GCC_3.0+0x130>  // b.none
   20310:	cmp	w0, #0x50
   20314:	b.gt	20384 <_Unwind_Find_FDE@@GCC_3.0+0x15c>
   20318:	cmp	w0, #0x40
   2031c:	b.eq	20378 <_Unwind_Find_FDE@@GCC_3.0+0x150>  // b.none
   20320:	cmp	w0, #0x40
   20324:	b.gt	20384 <_Unwind_Find_FDE@@GCC_3.0+0x15c>
   20328:	cmp	w0, #0x30
   2032c:	b.eq	2036c <_Unwind_Find_FDE@@GCC_3.0+0x144>  // b.none
   20330:	cmp	w0, #0x30
   20334:	b.gt	20384 <_Unwind_Find_FDE@@GCC_3.0+0x15c>
   20338:	cmp	w0, #0x20
   2033c:	b.eq	20360 <_Unwind_Find_FDE@@GCC_3.0+0x138>  // b.none
   20340:	cmp	w0, #0x20
   20344:	b.gt	20384 <_Unwind_Find_FDE@@GCC_3.0+0x15c>
   20348:	cmp	w0, #0x0
   2034c:	b.eq	20358 <_Unwind_Find_FDE@@GCC_3.0+0x130>  // b.none
   20350:	cmp	w0, #0x10
   20354:	b.ne	20384 <_Unwind_Find_FDE@@GCC_3.0+0x15c>  // b.any
   20358:	mov	x0, #0x0                   	// #0
   2035c:	b	20388 <_Unwind_Find_FDE@@GCC_3.0+0x160>
   20360:	ldr	x0, [sp, #16]
   20364:	bl	2bb0 <_Unwind_GetTextRelBase@plt>
   20368:	b	20388 <_Unwind_Find_FDE@@GCC_3.0+0x160>
   2036c:	ldr	x0, [sp, #16]
   20370:	bl	2e10 <_Unwind_GetDataRelBase@plt>
   20374:	b	20388 <_Unwind_Find_FDE@@GCC_3.0+0x160>
   20378:	ldr	x0, [sp, #16]
   2037c:	bl	2b10 <_Unwind_GetRegionStart@plt>
   20380:	b	20388 <_Unwind_Find_FDE@@GCC_3.0+0x160>
   20384:	bl	2cb0 <abort@plt>
   20388:	ldp	x29, x30, [sp], #32
   2038c:	ret
   20390:	sub	sp, sp, #0x30
   20394:	str	x0, [sp, #8]
   20398:	str	x1, [sp]
   2039c:	str	wzr, [sp, #44]
   203a0:	str	xzr, [sp, #32]
   203a4:	ldr	x0, [sp, #8]
   203a8:	add	x1, x0, #0x1
   203ac:	str	x1, [sp, #8]
   203b0:	ldrb	w0, [x0]
   203b4:	strb	w0, [sp, #31]
   203b8:	ldrb	w0, [sp, #31]
   203bc:	and	x1, x0, #0x7f
   203c0:	ldr	w0, [sp, #44]
   203c4:	lsl	x0, x1, x0
   203c8:	ldr	x1, [sp, #32]
   203cc:	orr	x0, x1, x0
   203d0:	str	x0, [sp, #32]
   203d4:	ldr	w0, [sp, #44]
   203d8:	add	w0, w0, #0x7
   203dc:	str	w0, [sp, #44]
   203e0:	ldrsb	w0, [sp, #31]
   203e4:	cmp	w0, #0x0
   203e8:	b.lt	203a4 <_Unwind_Find_FDE@@GCC_3.0+0x17c>  // b.tstop
   203ec:	ldr	x0, [sp]
   203f0:	ldr	x1, [sp, #32]
   203f4:	str	x1, [x0]
   203f8:	ldr	x0, [sp, #8]
   203fc:	add	sp, sp, #0x30
   20400:	ret
   20404:	sub	sp, sp, #0x30
   20408:	str	x0, [sp, #8]
   2040c:	str	x1, [sp]
   20410:	str	wzr, [sp, #44]
   20414:	str	xzr, [sp, #32]
   20418:	ldr	x0, [sp, #8]
   2041c:	add	x1, x0, #0x1
   20420:	str	x1, [sp, #8]
   20424:	ldrb	w0, [x0]
   20428:	strb	w0, [sp, #31]
   2042c:	ldrb	w0, [sp, #31]
   20430:	and	x1, x0, #0x7f
   20434:	ldr	w0, [sp, #44]
   20438:	lsl	x0, x1, x0
   2043c:	ldr	x1, [sp, #32]
   20440:	orr	x0, x1, x0
   20444:	str	x0, [sp, #32]
   20448:	ldr	w0, [sp, #44]
   2044c:	add	w0, w0, #0x7
   20450:	str	w0, [sp, #44]
   20454:	ldrsb	w0, [sp, #31]
   20458:	cmp	w0, #0x0
   2045c:	b.lt	20418 <_Unwind_Find_FDE@@GCC_3.0+0x1f0>  // b.tstop
   20460:	ldr	w0, [sp, #44]
   20464:	cmp	w0, #0x3f
   20468:	b.hi	20498 <_Unwind_Find_FDE@@GCC_3.0+0x270>  // b.pmore
   2046c:	ldrb	w0, [sp, #31]
   20470:	and	w0, w0, #0x40
   20474:	cmp	w0, #0x0
   20478:	b.eq	20498 <_Unwind_Find_FDE@@GCC_3.0+0x270>  // b.none
   2047c:	ldr	w0, [sp, #44]
   20480:	mov	x1, #0x1                   	// #1
   20484:	lsl	x0, x1, x0
   20488:	neg	x0, x0
   2048c:	ldr	x1, [sp, #32]
   20490:	orr	x0, x1, x0
   20494:	str	x0, [sp, #32]
   20498:	ldr	x1, [sp, #32]
   2049c:	ldr	x0, [sp]
   204a0:	str	x1, [x0]
   204a4:	ldr	x0, [sp, #8]
   204a8:	add	sp, sp, #0x30
   204ac:	ret
   204b0:	stp	x29, x30, [sp, #-96]!
   204b4:	mov	x29, sp
   204b8:	strb	w0, [sp, #47]
   204bc:	str	x1, [sp, #32]
   204c0:	str	x2, [sp, #24]
   204c4:	str	x3, [sp, #16]
   204c8:	ldr	x0, [sp, #24]
   204cc:	str	x0, [sp, #80]
   204d0:	ldrb	w0, [sp, #47]
   204d4:	cmp	w0, #0x50
   204d8:	b.ne	20510 <_Unwind_Find_FDE@@GCC_3.0+0x2e8>  // b.any
   204dc:	ldr	x0, [sp, #24]
   204e0:	str	x0, [sp, #72]
   204e4:	ldr	x0, [sp, #72]
   204e8:	add	x0, x0, #0x7
   204ec:	and	x0, x0, #0xfffffffffffffff8
   204f0:	str	x0, [sp, #72]
   204f4:	ldr	x0, [sp, #72]
   204f8:	ldr	x0, [x0]
   204fc:	str	x0, [sp, #88]
   20500:	ldr	x0, [sp, #72]
   20504:	add	x0, x0, #0x8
   20508:	str	x0, [sp, #24]
   2050c:	b	20700 <_Unwind_Find_FDE@@GCC_3.0+0x4d8>
   20510:	ldrb	w0, [sp, #47]
   20514:	and	w0, w0, #0xf
   20518:	cmp	w0, #0xc
   2051c:	b.eq	20694 <_Unwind_Find_FDE@@GCC_3.0+0x46c>  // b.none
   20520:	cmp	w0, #0xc
   20524:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20528:	cmp	w0, #0xb
   2052c:	b.eq	20674 <_Unwind_Find_FDE@@GCC_3.0+0x44c>  // b.none
   20530:	cmp	w0, #0xb
   20534:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20538:	cmp	w0, #0xa
   2053c:	b.eq	20654 <_Unwind_Find_FDE@@GCC_3.0+0x42c>  // b.none
   20540:	cmp	w0, #0xa
   20544:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20548:	cmp	w0, #0x9
   2054c:	b.eq	205d8 <_Unwind_Find_FDE@@GCC_3.0+0x3b0>  // b.none
   20550:	cmp	w0, #0x9
   20554:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20558:	cmp	w0, #0x4
   2055c:	b.eq	20638 <_Unwind_Find_FDE@@GCC_3.0+0x410>  // b.none
   20560:	cmp	w0, #0x4
   20564:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20568:	cmp	w0, #0x3
   2056c:	b.eq	20618 <_Unwind_Find_FDE@@GCC_3.0+0x3f0>  // b.none
   20570:	cmp	w0, #0x3
   20574:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20578:	cmp	w0, #0x2
   2057c:	b.eq	205f8 <_Unwind_Find_FDE@@GCC_3.0+0x3d0>  // b.none
   20580:	cmp	w0, #0x2
   20584:	b.gt	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   20588:	cmp	w0, #0x0
   2058c:	b.eq	2059c <_Unwind_Find_FDE@@GCC_3.0+0x374>  // b.none
   20590:	cmp	w0, #0x1
   20594:	b.eq	205b8 <_Unwind_Find_FDE@@GCC_3.0+0x390>  // b.none
   20598:	b	206b0 <_Unwind_Find_FDE@@GCC_3.0+0x488>
   2059c:	ldr	x0, [sp, #80]
   205a0:	ldr	x0, [x0]
   205a4:	str	x0, [sp, #88]
   205a8:	ldr	x0, [sp, #24]
   205ac:	add	x0, x0, #0x8
   205b0:	str	x0, [sp, #24]
   205b4:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   205b8:	add	x0, sp, #0x40
   205bc:	mov	x1, x0
   205c0:	ldr	x0, [sp, #24]
   205c4:	bl	20390 <_Unwind_Find_FDE@@GCC_3.0+0x168>
   205c8:	str	x0, [sp, #24]
   205cc:	ldr	x0, [sp, #64]
   205d0:	str	x0, [sp, #88]
   205d4:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   205d8:	add	x0, sp, #0x38
   205dc:	mov	x1, x0
   205e0:	ldr	x0, [sp, #24]
   205e4:	bl	20404 <_Unwind_Find_FDE@@GCC_3.0+0x1dc>
   205e8:	str	x0, [sp, #24]
   205ec:	ldr	x0, [sp, #56]
   205f0:	str	x0, [sp, #88]
   205f4:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   205f8:	ldr	x0, [sp, #80]
   205fc:	ldrh	w0, [x0]
   20600:	and	x0, x0, #0xffff
   20604:	str	x0, [sp, #88]
   20608:	ldr	x0, [sp, #24]
   2060c:	add	x0, x0, #0x2
   20610:	str	x0, [sp, #24]
   20614:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   20618:	ldr	x0, [sp, #80]
   2061c:	ldr	w0, [x0]
   20620:	mov	w0, w0
   20624:	str	x0, [sp, #88]
   20628:	ldr	x0, [sp, #24]
   2062c:	add	x0, x0, #0x4
   20630:	str	x0, [sp, #24]
   20634:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   20638:	ldr	x0, [sp, #80]
   2063c:	ldr	x0, [x0]
   20640:	str	x0, [sp, #88]
   20644:	ldr	x0, [sp, #24]
   20648:	add	x0, x0, #0x8
   2064c:	str	x0, [sp, #24]
   20650:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   20654:	ldr	x0, [sp, #80]
   20658:	ldrsh	w0, [x0]
   2065c:	sxth	x0, w0
   20660:	str	x0, [sp, #88]
   20664:	ldr	x0, [sp, #24]
   20668:	add	x0, x0, #0x2
   2066c:	str	x0, [sp, #24]
   20670:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   20674:	ldr	x0, [sp, #80]
   20678:	ldr	w0, [x0]
   2067c:	sxtw	x0, w0
   20680:	str	x0, [sp, #88]
   20684:	ldr	x0, [sp, #24]
   20688:	add	x0, x0, #0x4
   2068c:	str	x0, [sp, #24]
   20690:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   20694:	ldr	x0, [sp, #80]
   20698:	ldr	x0, [x0]
   2069c:	str	x0, [sp, #88]
   206a0:	ldr	x0, [sp, #24]
   206a4:	add	x0, x0, #0x8
   206a8:	str	x0, [sp, #24]
   206ac:	b	206b4 <_Unwind_Find_FDE@@GCC_3.0+0x48c>
   206b0:	bl	2cb0 <abort@plt>
   206b4:	ldr	x0, [sp, #88]
   206b8:	cmp	x0, #0x0
   206bc:	b.eq	20700 <_Unwind_Find_FDE@@GCC_3.0+0x4d8>  // b.none
   206c0:	ldrb	w0, [sp, #47]
   206c4:	and	w0, w0, #0x70
   206c8:	cmp	w0, #0x10
   206cc:	b.ne	206d8 <_Unwind_Find_FDE@@GCC_3.0+0x4b0>  // b.any
   206d0:	ldr	x0, [sp, #80]
   206d4:	b	206dc <_Unwind_Find_FDE@@GCC_3.0+0x4b4>
   206d8:	ldr	x0, [sp, #32]
   206dc:	ldr	x1, [sp, #88]
   206e0:	add	x0, x1, x0
   206e4:	str	x0, [sp, #88]
   206e8:	ldrsb	w0, [sp, #47]
   206ec:	cmp	w0, #0x0
   206f0:	b.ge	20700 <_Unwind_Find_FDE@@GCC_3.0+0x4d8>  // b.tcont
   206f4:	ldr	x0, [sp, #88]
   206f8:	ldr	x0, [x0]
   206fc:	str	x0, [sp, #88]
   20700:	ldr	x0, [sp, #16]
   20704:	ldr	x1, [sp, #88]
   20708:	str	x1, [x0]
   2070c:	ldr	x0, [sp, #24]
   20710:	ldp	x29, x30, [sp], #96
   20714:	ret
   20718:	stp	x29, x30, [sp, #-48]!
   2071c:	mov	x29, sp
   20720:	str	x0, [sp, #40]
   20724:	strb	w1, [sp, #39]
   20728:	str	x2, [sp, #24]
   2072c:	str	x3, [sp, #16]
   20730:	ldr	x1, [sp, #40]
   20734:	ldrb	w0, [sp, #39]
   20738:	bl	202dc <_Unwind_Find_FDE@@GCC_3.0+0xb4>
   2073c:	ldr	x3, [sp, #16]
   20740:	ldr	x2, [sp, #24]
   20744:	mov	x1, x0
   20748:	ldrb	w0, [sp, #39]
   2074c:	bl	204b0 <_Unwind_Find_FDE@@GCC_3.0+0x288>
   20750:	ldp	x29, x30, [sp], #48
   20754:	ret
   20758:	stp	x29, x30, [sp, #-64]!
   2075c:	mov	x29, sp
   20760:	str	x0, [sp, #40]
   20764:	str	x1, [sp, #32]
   20768:	str	x2, [sp, #24]
   2076c:	ldr	x0, [sp, #40]
   20770:	cmp	x0, #0x0
   20774:	b.eq	20788 <_Unwind_Find_FDE@@GCC_3.0+0x560>  // b.none
   20778:	ldr	x0, [sp, #40]
   2077c:	bl	2b10 <_Unwind_GetRegionStart@plt>
   20780:	mov	x1, x0
   20784:	b	2078c <_Unwind_Find_FDE@@GCC_3.0+0x564>
   20788:	mov	x1, #0x0                   	// #0
   2078c:	ldr	x0, [sp, #24]
   20790:	str	x1, [x0]
   20794:	ldr	x0, [sp, #32]
   20798:	add	x1, x0, #0x1
   2079c:	str	x1, [sp, #32]
   207a0:	ldrb	w0, [x0]
   207a4:	strb	w0, [sp, #63]
   207a8:	ldrb	w0, [sp, #63]
   207ac:	cmp	w0, #0xff
   207b0:	b.eq	207d8 <_Unwind_Find_FDE@@GCC_3.0+0x5b0>  // b.none
   207b4:	ldr	x0, [sp, #24]
   207b8:	add	x0, x0, #0x8
   207bc:	mov	x3, x0
   207c0:	ldr	x2, [sp, #32]
   207c4:	ldrb	w1, [sp, #63]
   207c8:	ldr	x0, [sp, #40]
   207cc:	bl	20718 <_Unwind_Find_FDE@@GCC_3.0+0x4f0>
   207d0:	str	x0, [sp, #32]
   207d4:	b	207e8 <_Unwind_Find_FDE@@GCC_3.0+0x5c0>
   207d8:	ldr	x0, [sp, #24]
   207dc:	ldr	x1, [x0]
   207e0:	ldr	x0, [sp, #24]
   207e4:	str	x1, [x0, #8]
   207e8:	ldr	x0, [sp, #32]
   207ec:	add	x1, x0, #0x1
   207f0:	str	x1, [sp, #32]
   207f4:	ldrb	w1, [x0]
   207f8:	ldr	x0, [sp, #24]
   207fc:	strb	w1, [x0, #40]
   20800:	ldr	x0, [sp, #24]
   20804:	ldrb	w0, [x0, #40]
   20808:	cmp	w0, #0xff
   2080c:	b.eq	2083c <_Unwind_Find_FDE@@GCC_3.0+0x614>  // b.none
   20810:	add	x0, sp, #0x30
   20814:	mov	x1, x0
   20818:	ldr	x0, [sp, #32]
   2081c:	bl	20390 <_Unwind_Find_FDE@@GCC_3.0+0x168>
   20820:	str	x0, [sp, #32]
   20824:	ldr	x0, [sp, #48]
   20828:	ldr	x1, [sp, #32]
   2082c:	add	x1, x1, x0
   20830:	ldr	x0, [sp, #24]
   20834:	str	x1, [x0, #24]
   20838:	b	20844 <_Unwind_Find_FDE@@GCC_3.0+0x61c>
   2083c:	ldr	x0, [sp, #24]
   20840:	str	xzr, [x0, #24]
   20844:	ldr	x0, [sp, #32]
   20848:	add	x1, x0, #0x1
   2084c:	str	x1, [sp, #32]
   20850:	ldrb	w1, [x0]
   20854:	ldr	x0, [sp, #24]
   20858:	strb	w1, [x0, #41]
   2085c:	add	x0, sp, #0x30
   20860:	mov	x1, x0
   20864:	ldr	x0, [sp, #32]
   20868:	bl	20390 <_Unwind_Find_FDE@@GCC_3.0+0x168>
   2086c:	str	x0, [sp, #32]
   20870:	ldr	x0, [sp, #48]
   20874:	ldr	x1, [sp, #32]
   20878:	add	x1, x1, x0
   2087c:	ldr	x0, [sp, #24]
   20880:	str	x1, [x0, #32]
   20884:	ldr	x0, [sp, #32]
   20888:	ldp	x29, x30, [sp], #64
   2088c:	ret

0000000000020890 <__gcc_personality_v0@@GCC_3.3.1>:
   20890:	stp	x29, x30, [sp, #-176]!
   20894:	mov	x29, sp
   20898:	str	w0, [sp, #44]
   2089c:	str	w1, [sp, #40]
   208a0:	str	x2, [sp, #32]
   208a4:	str	x3, [sp, #24]
   208a8:	str	x4, [sp, #16]
   208ac:	str	wzr, [sp, #92]
   208b0:	ldr	w0, [sp, #44]
   208b4:	cmp	w0, #0x1
   208b8:	b.eq	208c4 <__gcc_personality_v0@@GCC_3.3.1+0x34>  // b.none
   208bc:	mov	w0, #0x3                   	// #3
   208c0:	b	20a7c <__gcc_personality_v0@@GCC_3.3.1+0x1ec>
   208c4:	ldr	w0, [sp, #40]
   208c8:	and	w0, w0, #0x2
   208cc:	cmp	w0, #0x0
   208d0:	b.ne	208dc <__gcc_personality_v0@@GCC_3.3.1+0x4c>  // b.any
   208d4:	mov	w0, #0x8                   	// #8
   208d8:	b	20a7c <__gcc_personality_v0@@GCC_3.3.1+0x1ec>
   208dc:	ldr	x0, [sp, #16]
   208e0:	bl	2b50 <_Unwind_GetLanguageSpecificData@plt>
   208e4:	str	x0, [sp, #144]
   208e8:	ldr	x0, [sp, #144]
   208ec:	cmp	x0, #0x0
   208f0:	b.ne	208fc <__gcc_personality_v0@@GCC_3.3.1+0x6c>  // b.any
   208f4:	mov	w0, #0x8                   	// #8
   208f8:	b	20a7c <__gcc_personality_v0@@GCC_3.3.1+0x1ec>
   208fc:	add	x0, sp, #0x60
   20900:	mov	x2, x0
   20904:	ldr	x1, [sp, #144]
   20908:	ldr	x0, [sp, #16]
   2090c:	bl	20758 <_Unwind_Find_FDE@@GCC_3.0+0x530>
   20910:	str	x0, [sp, #168]
   20914:	add	x0, sp, #0x5c
   20918:	mov	x1, x0
   2091c:	ldr	x0, [sp, #16]
   20920:	bl	2c60 <_Unwind_GetIPInfo@plt>
   20924:	str	x0, [sp, #152]
   20928:	ldr	w0, [sp, #92]
   2092c:	cmp	w0, #0x0
   20930:	b.ne	20940 <__gcc_personality_v0@@GCC_3.3.1+0xb0>  // b.any
   20934:	ldr	x0, [sp, #152]
   20938:	sub	x0, x0, #0x1
   2093c:	str	x0, [sp, #152]
   20940:	str	xzr, [sp, #160]
   20944:	b	20a14 <__gcc_personality_v0@@GCC_3.3.1+0x184>
   20948:	ldrb	w1, [sp, #137]
   2094c:	add	x0, sp, #0x50
   20950:	mov	x3, x0
   20954:	ldr	x2, [sp, #168]
   20958:	mov	x0, #0x0                   	// #0
   2095c:	bl	20718 <_Unwind_Find_FDE@@GCC_3.0+0x4f0>
   20960:	str	x0, [sp, #168]
   20964:	ldrb	w1, [sp, #137]
   20968:	add	x0, sp, #0x48
   2096c:	mov	x3, x0
   20970:	ldr	x2, [sp, #168]
   20974:	mov	x0, #0x0                   	// #0
   20978:	bl	20718 <_Unwind_Find_FDE@@GCC_3.0+0x4f0>
   2097c:	str	x0, [sp, #168]
   20980:	ldrb	w1, [sp, #137]
   20984:	add	x0, sp, #0x40
   20988:	mov	x3, x0
   2098c:	ldr	x2, [sp, #168]
   20990:	mov	x0, #0x0                   	// #0
   20994:	bl	20718 <_Unwind_Find_FDE@@GCC_3.0+0x4f0>
   20998:	str	x0, [sp, #168]
   2099c:	add	x0, sp, #0x38
   209a0:	mov	x1, x0
   209a4:	ldr	x0, [sp, #168]
   209a8:	bl	20390 <_Unwind_Find_FDE@@GCC_3.0+0x168>
   209ac:	str	x0, [sp, #168]
   209b0:	ldr	x1, [sp, #96]
   209b4:	ldr	x0, [sp, #80]
   209b8:	add	x0, x1, x0
   209bc:	ldr	x1, [sp, #152]
   209c0:	cmp	x1, x0
   209c4:	b.cs	209d4 <__gcc_personality_v0@@GCC_3.3.1+0x144>  // b.hs, b.nlast
   209c8:	ldr	x0, [sp, #128]
   209cc:	str	x0, [sp, #168]
   209d0:	b	20a14 <__gcc_personality_v0@@GCC_3.3.1+0x184>
   209d4:	ldr	x1, [sp, #96]
   209d8:	ldr	x0, [sp, #80]
   209dc:	add	x1, x1, x0
   209e0:	ldr	x0, [sp, #72]
   209e4:	add	x0, x1, x0
   209e8:	ldr	x1, [sp, #152]
   209ec:	cmp	x1, x0
   209f0:	b.cs	20a14 <__gcc_personality_v0@@GCC_3.3.1+0x184>  // b.hs, b.nlast
   209f4:	ldr	x0, [sp, #64]
   209f8:	cmp	x0, #0x0
   209fc:	b.eq	20a2c <__gcc_personality_v0@@GCC_3.3.1+0x19c>  // b.none
   20a00:	ldr	x1, [sp, #104]
   20a04:	ldr	x0, [sp, #64]
   20a08:	add	x0, x1, x0
   20a0c:	str	x0, [sp, #160]
   20a10:	b	20a30 <__gcc_personality_v0@@GCC_3.3.1+0x1a0>
   20a14:	ldr	x0, [sp, #128]
   20a18:	ldr	x1, [sp, #168]
   20a1c:	cmp	x1, x0
   20a20:	b.cc	20948 <__gcc_personality_v0@@GCC_3.3.1+0xb8>  // b.lo, b.ul, b.last
   20a24:	mov	w0, #0x8                   	// #8
   20a28:	b	20a7c <__gcc_personality_v0@@GCC_3.3.1+0x1ec>
   20a2c:	nop
   20a30:	ldr	x0, [sp, #160]
   20a34:	cmp	x0, #0x0
   20a38:	b.ne	20a44 <__gcc_personality_v0@@GCC_3.3.1+0x1b4>  // b.any
   20a3c:	mov	w0, #0x8                   	// #8
   20a40:	b	20a7c <__gcc_personality_v0@@GCC_3.3.1+0x1ec>
   20a44:	mov	w1, #0x0                   	// #0
   20a48:	ldr	x0, [sp, #24]
   20a4c:	mov	x2, x0
   20a50:	ldr	x0, [sp, #16]
   20a54:	bl	2db0 <_Unwind_SetGR@plt>
   20a58:	mov	w0, #0x1                   	// #1
   20a5c:	mov	x2, #0x0                   	// #0
   20a60:	mov	w1, w0
   20a64:	ldr	x0, [sp, #16]
   20a68:	bl	2db0 <_Unwind_SetGR@plt>
   20a6c:	ldr	x1, [sp, #160]
   20a70:	ldr	x0, [sp, #16]
   20a74:	bl	2b40 <_Unwind_SetIP@plt>
   20a78:	mov	w0, #0x7                   	// #7
   20a7c:	ldp	x29, x30, [sp], #176
   20a80:	ret
   20a84:	adrp	x0, 33000 <__emutls_register_common@@GCC_4.3.0+0x11fb4>
   20a88:	add	x0, x0, #0xdb8
   20a8c:	ldr	x0, [x0]
   20a90:	cmp	x0, #0x0
   20a94:	cset	w0, ne  // ne = any
   20a98:	and	w0, w0, #0xff
   20a9c:	ret
   20aa0:	stp	x29, x30, [sp, #-32]!
   20aa4:	mov	x29, sp
   20aa8:	str	x0, [sp, #24]
   20aac:	str	x1, [sp, #16]
   20ab0:	bl	20a84 <__gcc_personality_v0@@GCC_3.3.1+0x1f4>
   20ab4:	cmp	w0, #0x0
   20ab8:	b.eq	20acc <__gcc_personality_v0@@GCC_3.3.1+0x23c>  // b.none
   20abc:	ldr	x1, [sp, #16]
   20ac0:	ldr	x0, [sp, #24]
   20ac4:	bl	2cd0 <pthread_once@plt>
   20ac8:	b	20ad0 <__gcc_personality_v0@@GCC_3.3.1+0x240>
   20acc:	mov	w0, #0xffffffff            	// #-1
   20ad0:	ldp	x29, x30, [sp], #32
   20ad4:	ret
   20ad8:	stp	x29, x30, [sp, #-32]!
   20adc:	mov	x29, sp
   20ae0:	str	x0, [sp, #24]
   20ae4:	str	x1, [sp, #16]
   20ae8:	ldr	x1, [sp, #16]
   20aec:	ldr	x0, [sp, #24]
   20af0:	bl	2c90 <pthread_key_create@plt>
   20af4:	ldp	x29, x30, [sp], #32
   20af8:	ret
   20afc:	stp	x29, x30, [sp, #-32]!
   20b00:	mov	x29, sp
   20b04:	str	w0, [sp, #28]
   20b08:	ldr	w0, [sp, #28]
   20b0c:	bl	2be0 <pthread_getspecific@plt>
   20b10:	ldp	x29, x30, [sp], #32
   20b14:	ret
   20b18:	stp	x29, x30, [sp, #-32]!
   20b1c:	mov	x29, sp
   20b20:	str	w0, [sp, #28]
   20b24:	str	x1, [sp, #16]
   20b28:	ldr	x1, [sp, #16]
   20b2c:	ldr	w0, [sp, #28]
   20b30:	bl	2d00 <pthread_setspecific@plt>
   20b34:	ldp	x29, x30, [sp], #32
   20b38:	ret
   20b3c:	stp	x29, x30, [sp, #-32]!
   20b40:	mov	x29, sp
   20b44:	str	x0, [sp, #24]
   20b48:	bl	20a84 <__gcc_personality_v0@@GCC_3.3.1+0x1f4>
   20b4c:	cmp	w0, #0x0
   20b50:	b.eq	20b60 <__gcc_personality_v0@@GCC_3.3.1+0x2d0>  // b.none
   20b54:	ldr	x0, [sp, #24]
   20b58:	bl	2dc0 <pthread_mutex_lock@plt>
   20b5c:	b	20b64 <__gcc_personality_v0@@GCC_3.3.1+0x2d4>
   20b60:	mov	w0, #0x0                   	// #0
   20b64:	ldp	x29, x30, [sp], #32
   20b68:	ret
   20b6c:	stp	x29, x30, [sp, #-32]!
   20b70:	mov	x29, sp
   20b74:	str	x0, [sp, #24]
   20b78:	bl	20a84 <__gcc_personality_v0@@GCC_3.3.1+0x1f4>
   20b7c:	cmp	w0, #0x0
   20b80:	b.eq	20b90 <__gcc_personality_v0@@GCC_3.3.1+0x300>  // b.none
   20b84:	ldr	x0, [sp, #24]
   20b88:	bl	2dd0 <pthread_mutex_unlock@plt>
   20b8c:	b	20b94 <__gcc_personality_v0@@GCC_3.3.1+0x304>
   20b90:	mov	w0, #0x0                   	// #0
   20b94:	ldp	x29, x30, [sp], #32
   20b98:	ret
   20b9c:	stp	x29, x30, [sp, #-64]!
   20ba0:	mov	x29, sp
   20ba4:	str	x0, [sp, #24]
   20ba8:	ldr	x0, [sp, #24]
   20bac:	str	x0, [sp, #48]
   20bb0:	ldr	x0, [sp, #48]
   20bb4:	ldr	x0, [x0]
   20bb8:	str	x0, [sp, #40]
   20bbc:	str	xzr, [sp, #56]
   20bc0:	b	20c0c <__gcc_personality_v0@@GCC_3.3.1+0x37c>
   20bc4:	ldr	x1, [sp, #48]
   20bc8:	ldr	x0, [sp, #56]
   20bcc:	lsl	x0, x0, #3
   20bd0:	add	x0, x1, x0
   20bd4:	ldr	x0, [x0, #8]
   20bd8:	cmp	x0, #0x0
   20bdc:	b.eq	20c00 <__gcc_personality_v0@@GCC_3.3.1+0x370>  // b.none
   20be0:	ldr	x1, [sp, #48]
   20be4:	ldr	x0, [sp, #56]
   20be8:	lsl	x0, x0, #3
   20bec:	add	x0, x1, x0
   20bf0:	ldr	x0, [x0, #8]
   20bf4:	sub	x0, x0, #0x8
   20bf8:	ldr	x0, [x0]
   20bfc:	bl	2d20 <free@plt>
   20c00:	ldr	x0, [sp, #56]
   20c04:	add	x0, x0, #0x1
   20c08:	str	x0, [sp, #56]
   20c0c:	ldr	x1, [sp, #56]
   20c10:	ldr	x0, [sp, #40]
   20c14:	cmp	x1, x0
   20c18:	b.cc	20bc4 <__gcc_personality_v0@@GCC_3.3.1+0x334>  // b.lo, b.ul, b.last
   20c1c:	ldr	x0, [sp, #24]
   20c20:	bl	2d20 <free@plt>
   20c24:	nop
   20c28:	ldp	x29, x30, [sp], #64
   20c2c:	ret
   20c30:	stp	x29, x30, [sp, #-16]!
   20c34:	mov	x29, sp
   20c38:	adrp	x0, 20000 <__deregister_frame@@GLIBC_2.0+0x22c0>
   20c3c:	add	x1, x0, #0xb9c
   20c40:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20c44:	add	x0, x0, #0x450
   20c48:	bl	20ad8 <__gcc_personality_v0@@GCC_3.3.1+0x248>
   20c4c:	cmp	w0, #0x0
   20c50:	b.eq	20c58 <__gcc_personality_v0@@GCC_3.3.1+0x3c8>  // b.none
   20c54:	bl	2cb0 <abort@plt>
   20c58:	nop
   20c5c:	ldp	x29, x30, [sp], #16
   20c60:	ret
   20c64:	stp	x29, x30, [sp, #-48]!
   20c68:	mov	x29, sp
   20c6c:	str	x0, [sp, #24]
   20c70:	ldr	x0, [sp, #24]
   20c74:	ldr	x0, [x0, #8]
   20c78:	cmp	x0, #0x8
   20c7c:	b.hi	20cc0 <__gcc_personality_v0@@GCC_3.3.1+0x430>  // b.pmore
   20c80:	ldr	x0, [sp, #24]
   20c84:	ldr	x0, [x0]
   20c88:	add	x0, x0, #0x8
   20c8c:	bl	2bd0 <malloc@plt>
   20c90:	str	x0, [sp, #32]
   20c94:	ldr	x0, [sp, #32]
   20c98:	cmp	x0, #0x0
   20c9c:	b.ne	20ca4 <__gcc_personality_v0@@GCC_3.3.1+0x414>  // b.any
   20ca0:	bl	2cb0 <abort@plt>
   20ca4:	ldr	x0, [sp, #32]
   20ca8:	ldr	x1, [sp, #32]
   20cac:	str	x1, [x0]
   20cb0:	ldr	x0, [sp, #32]
   20cb4:	add	x0, x0, #0x8
   20cb8:	str	x0, [sp, #40]
   20cbc:	b	20d2c <__gcc_personality_v0@@GCC_3.3.1+0x49c>
   20cc0:	ldr	x0, [sp, #24]
   20cc4:	ldr	x1, [x0]
   20cc8:	ldr	x0, [sp, #24]
   20ccc:	ldr	x0, [x0, #8]
   20cd0:	add	x0, x1, x0
   20cd4:	add	x0, x0, #0x7
   20cd8:	bl	2bd0 <malloc@plt>
   20cdc:	str	x0, [sp, #32]
   20ce0:	ldr	x0, [sp, #32]
   20ce4:	cmp	x0, #0x0
   20ce8:	b.ne	20cf0 <__gcc_personality_v0@@GCC_3.3.1+0x460>  // b.any
   20cec:	bl	2cb0 <abort@plt>
   20cf0:	ldr	x0, [sp, #24]
   20cf4:	ldr	x0, [x0, #8]
   20cf8:	add	x0, x0, #0x7
   20cfc:	ldr	x1, [sp, #32]
   20d00:	add	x0, x1, x0
   20d04:	mov	x1, x0
   20d08:	ldr	x0, [sp, #24]
   20d0c:	ldr	x0, [x0, #8]
   20d10:	neg	x0, x0
   20d14:	and	x0, x1, x0
   20d18:	str	x0, [sp, #40]
   20d1c:	ldr	x0, [sp, #40]
   20d20:	sub	x0, x0, #0x8
   20d24:	ldr	x1, [sp, #32]
   20d28:	str	x1, [x0]
   20d2c:	ldr	x0, [sp, #24]
   20d30:	ldr	x0, [x0, #24]
   20d34:	cmp	x0, #0x0
   20d38:	b.eq	20d5c <__gcc_personality_v0@@GCC_3.3.1+0x4cc>  // b.none
   20d3c:	ldr	x0, [sp, #24]
   20d40:	ldr	x1, [x0, #24]
   20d44:	ldr	x0, [sp, #24]
   20d48:	ldr	x0, [x0]
   20d4c:	mov	x2, x0
   20d50:	ldr	x0, [sp, #40]
   20d54:	bl	2b00 <memcpy@plt>
   20d58:	b	20d74 <__gcc_personality_v0@@GCC_3.3.1+0x4e4>
   20d5c:	ldr	x0, [sp, #24]
   20d60:	ldr	x0, [x0]
   20d64:	mov	x2, x0
   20d68:	mov	w1, #0x0                   	// #0
   20d6c:	ldr	x0, [sp, #40]
   20d70:	bl	2c00 <memset@plt>
   20d74:	ldr	x0, [sp, #40]
   20d78:	ldp	x29, x30, [sp], #48
   20d7c:	ret

0000000000020d80 <__emutls_get_address@@GCC_4.3.0>:
   20d80:	stp	x29, x30, [sp, #-80]!
   20d84:	mov	x29, sp
   20d88:	str	x0, [sp, #24]
   20d8c:	bl	20a84 <__gcc_personality_v0@@GCC_3.3.1+0x1f4>
   20d90:	cmp	w0, #0x0
   20d94:	b.ne	20dd8 <__emutls_get_address@@GCC_4.3.0+0x58>  // b.any
   20d98:	ldr	x0, [sp, #24]
   20d9c:	ldr	x0, [x0, #16]
   20da0:	cmp	x0, #0x0
   20da4:	cset	w0, eq  // eq = none
   20da8:	and	w0, w0, #0xff
   20dac:	and	x0, x0, #0xff
   20db0:	cmp	x0, #0x0
   20db4:	b.eq	20dcc <__emutls_get_address@@GCC_4.3.0+0x4c>  // b.none
   20db8:	ldr	x0, [sp, #24]
   20dbc:	bl	20c64 <__gcc_personality_v0@@GCC_3.3.1+0x3d4>
   20dc0:	mov	x1, x0
   20dc4:	ldr	x0, [sp, #24]
   20dc8:	str	x1, [x0, #16]
   20dcc:	ldr	x0, [sp, #24]
   20dd0:	ldr	x0, [x0, #16]
   20dd4:	b	21044 <__emutls_get_address@@GCC_4.3.0+0x2c4>
   20dd8:	ldr	x0, [sp, #24]
   20ddc:	add	x0, x0, #0x10
   20de0:	ldar	x0, [x0]
   20de4:	str	x0, [sp, #72]
   20de8:	ldr	x0, [sp, #72]
   20dec:	cmp	x0, #0x0
   20df0:	cset	w0, eq  // eq = none
   20df4:	and	w0, w0, #0xff
   20df8:	and	x0, x0, #0xff
   20dfc:	cmp	x0, #0x0
   20e00:	b.eq	20e84 <__emutls_get_address@@GCC_4.3.0+0x104>  // b.none
   20e04:	adrp	x0, 20000 <__deregister_frame@@GLIBC_2.0+0x22c0>
   20e08:	add	x1, x0, #0xc30
   20e0c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e10:	add	x0, x0, #0x460
   20e14:	bl	20aa0 <__gcc_personality_v0@@GCC_3.3.1+0x210>
   20e18:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e1c:	add	x0, x0, #0x420
   20e20:	bl	20b3c <__gcc_personality_v0@@GCC_3.3.1+0x2ac>
   20e24:	ldr	x0, [sp, #24]
   20e28:	ldr	x0, [x0, #16]
   20e2c:	str	x0, [sp, #72]
   20e30:	ldr	x0, [sp, #72]
   20e34:	cmp	x0, #0x0
   20e38:	b.ne	20e78 <__emutls_get_address@@GCC_4.3.0+0xf8>  // b.any
   20e3c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e40:	add	x0, x0, #0x458
   20e44:	ldr	x0, [x0]
   20e48:	add	x1, x0, #0x1
   20e4c:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e50:	add	x0, x0, #0x458
   20e54:	str	x1, [x0]
   20e58:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e5c:	add	x0, x0, #0x458
   20e60:	ldr	x0, [x0]
   20e64:	str	x0, [sp, #72]
   20e68:	ldr	x0, [sp, #24]
   20e6c:	add	x0, x0, #0x10
   20e70:	ldr	x1, [sp, #72]
   20e74:	stlr	x1, [x0]
   20e78:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e7c:	add	x0, x0, #0x420
   20e80:	bl	20b6c <__gcc_personality_v0@@GCC_3.3.1+0x2dc>
   20e84:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20e88:	add	x0, x0, #0x450
   20e8c:	ldr	w0, [x0]
   20e90:	bl	20afc <__gcc_personality_v0@@GCC_3.3.1+0x26c>
   20e94:	str	x0, [sp, #64]
   20e98:	ldr	x0, [sp, #64]
   20e9c:	cmp	x0, #0x0
   20ea0:	cset	w0, eq  // eq = none
   20ea4:	and	w0, w0, #0xff
   20ea8:	and	x0, x0, #0xff
   20eac:	cmp	x0, #0x0
   20eb0:	b.eq	20f08 <__emutls_get_address@@GCC_4.3.0+0x188>  // b.none
   20eb4:	ldr	x0, [sp, #72]
   20eb8:	add	x0, x0, #0x20
   20ebc:	str	x0, [sp, #32]
   20ec0:	ldr	x0, [sp, #32]
   20ec4:	add	x0, x0, #0x1
   20ec8:	mov	x1, #0x8                   	// #8
   20ecc:	bl	2c40 <calloc@plt>
   20ed0:	str	x0, [sp, #64]
   20ed4:	ldr	x0, [sp, #64]
   20ed8:	cmp	x0, #0x0
   20edc:	b.ne	20ee4 <__emutls_get_address@@GCC_4.3.0+0x164>  // b.any
   20ee0:	bl	2cb0 <abort@plt>
   20ee4:	ldr	x0, [sp, #64]
   20ee8:	ldr	x1, [sp, #32]
   20eec:	str	x1, [x0]
   20ef0:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20ef4:	add	x0, x0, #0x450
   20ef8:	ldr	w0, [x0]
   20efc:	ldr	x1, [sp, #64]
   20f00:	bl	20b18 <__gcc_personality_v0@@GCC_3.3.1+0x288>
   20f04:	b	20fe0 <__emutls_get_address@@GCC_4.3.0+0x260>
   20f08:	ldr	x0, [sp, #64]
   20f0c:	ldr	x0, [x0]
   20f10:	ldr	x1, [sp, #72]
   20f14:	cmp	x1, x0
   20f18:	cset	w0, hi  // hi = pmore
   20f1c:	and	w0, w0, #0xff
   20f20:	and	x0, x0, #0xff
   20f24:	cmp	x0, #0x0
   20f28:	b.eq	20fe0 <__emutls_get_address@@GCC_4.3.0+0x260>  // b.none
   20f2c:	ldr	x0, [sp, #64]
   20f30:	ldr	x0, [x0]
   20f34:	str	x0, [sp, #40]
   20f38:	ldr	x0, [sp, #40]
   20f3c:	lsl	x0, x0, #1
   20f40:	str	x0, [sp, #56]
   20f44:	ldr	x1, [sp, #72]
   20f48:	ldr	x0, [sp, #56]
   20f4c:	cmp	x1, x0
   20f50:	b.ls	20f60 <__emutls_get_address@@GCC_4.3.0+0x1e0>  // b.plast
   20f54:	ldr	x0, [sp, #72]
   20f58:	add	x0, x0, #0x20
   20f5c:	str	x0, [sp, #56]
   20f60:	ldr	x0, [sp, #56]
   20f64:	add	x0, x0, #0x1
   20f68:	lsl	x0, x0, #3
   20f6c:	mov	x1, x0
   20f70:	ldr	x0, [sp, #64]
   20f74:	bl	2c70 <realloc@plt>
   20f78:	str	x0, [sp, #64]
   20f7c:	ldr	x0, [sp, #64]
   20f80:	cmp	x0, #0x0
   20f84:	b.ne	20f8c <__emutls_get_address@@GCC_4.3.0+0x20c>  // b.any
   20f88:	bl	2cb0 <abort@plt>
   20f8c:	ldr	x0, [sp, #64]
   20f90:	ldr	x1, [sp, #56]
   20f94:	str	x1, [x0]
   20f98:	ldr	x0, [sp, #64]
   20f9c:	add	x1, x0, #0x8
   20fa0:	ldr	x0, [sp, #40]
   20fa4:	lsl	x0, x0, #3
   20fa8:	add	x3, x1, x0
   20fac:	ldr	x1, [sp, #56]
   20fb0:	ldr	x0, [sp, #40]
   20fb4:	sub	x0, x1, x0
   20fb8:	lsl	x0, x0, #3
   20fbc:	mov	x2, x0
   20fc0:	mov	w1, #0x0                   	// #0
   20fc4:	mov	x0, x3
   20fc8:	bl	2c00 <memset@plt>
   20fcc:	adrp	x0, 34000 <__emutls_register_common@@GCC_4.3.0+0x12fb4>
   20fd0:	add	x0, x0, #0x450
   20fd4:	ldr	w0, [x0]
   20fd8:	ldr	x1, [sp, #64]
   20fdc:	bl	20b18 <__gcc_personality_v0@@GCC_3.3.1+0x288>
   20fe0:	ldr	x0, [sp, #72]
   20fe4:	sub	x0, x0, #0x1
   20fe8:	ldr	x1, [sp, #64]
   20fec:	lsl	x0, x0, #3
   20ff0:	add	x0, x1, x0
   20ff4:	ldr	x0, [x0, #8]
   20ff8:	str	x0, [sp, #48]
   20ffc:	ldr	x0, [sp, #48]
   21000:	cmp	x0, #0x0
   21004:	cset	w0, eq  // eq = none
   21008:	and	w0, w0, #0xff
   2100c:	and	x0, x0, #0xff
   21010:	cmp	x0, #0x0
   21014:	b.eq	21040 <__emutls_get_address@@GCC_4.3.0+0x2c0>  // b.none
   21018:	ldr	x0, [sp, #24]
   2101c:	bl	20c64 <__gcc_personality_v0@@GCC_3.3.1+0x3d4>
   21020:	str	x0, [sp, #48]
   21024:	ldr	x0, [sp, #72]
   21028:	sub	x0, x0, #0x1
   2102c:	ldr	x1, [sp, #64]
   21030:	lsl	x0, x0, #3
   21034:	add	x0, x1, x0
   21038:	ldr	x1, [sp, #48]
   2103c:	str	x1, [x0, #8]
   21040:	ldr	x0, [sp, #48]
   21044:	ldp	x29, x30, [sp], #80
   21048:	ret

000000000002104c <__emutls_register_common@@GCC_4.3.0>:
   2104c:	sub	sp, sp, #0x20
   21050:	str	x0, [sp, #24]
   21054:	str	x1, [sp, #16]
   21058:	str	x2, [sp, #8]
   2105c:	str	x3, [sp]
   21060:	ldr	x0, [sp, #24]
   21064:	ldr	x0, [x0]
   21068:	ldr	x1, [sp, #16]
   2106c:	cmp	x1, x0
   21070:	b.ls	21088 <__emutls_register_common@@GCC_4.3.0+0x3c>  // b.plast
   21074:	ldr	x0, [sp, #24]
   21078:	ldr	x1, [sp, #16]
   2107c:	str	x1, [x0]
   21080:	ldr	x0, [sp, #24]
   21084:	str	xzr, [x0, #24]
   21088:	ldr	x0, [sp, #24]
   2108c:	ldr	x0, [x0, #8]
   21090:	ldr	x1, [sp, #8]
   21094:	cmp	x1, x0
   21098:	b.ls	210a8 <__emutls_register_common@@GCC_4.3.0+0x5c>  // b.plast
   2109c:	ldr	x0, [sp, #24]
   210a0:	ldr	x1, [sp, #8]
   210a4:	str	x1, [x0, #8]
   210a8:	ldr	x0, [sp]
   210ac:	cmp	x0, #0x0
   210b0:	b.eq	210d4 <__emutls_register_common@@GCC_4.3.0+0x88>  // b.none
   210b4:	ldr	x0, [sp, #24]
   210b8:	ldr	x0, [x0]
   210bc:	ldr	x1, [sp, #16]
   210c0:	cmp	x1, x0
   210c4:	b.ne	210d4 <__emutls_register_common@@GCC_4.3.0+0x88>  // b.any
   210c8:	ldr	x0, [sp, #24]
   210cc:	ldr	x1, [sp]
   210d0:	str	x1, [x0, #24]
   210d4:	nop
   210d8:	add	sp, sp, #0x20
   210dc:	ret

Disassembly of section .fini:

00000000000210e0 <.fini>:
   210e0:	stp	x29, x30, [sp, #-16]!
   210e4:	mov	x29, sp
   210e8:	ldp	x29, x30, [sp], #16
   210ec:	ret
