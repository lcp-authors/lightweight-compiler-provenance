In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf-nobfd.a_clang_-O3:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_arc_write_fd>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x22, x21, [sp, #128]
   8:	mov	w21, w0
   c:	adrp	x0, 0 <ctf_arc_write_fd>
  10:	stp	x29, x30, [sp, #64]
  14:	stp	x28, x27, [sp, #80]
  18:	add	x29, sp, #0x40
  1c:	mov	x28, x1
  20:	add	x0, x0, #0x0
  24:	mov	x1, x2
  28:	stp	x26, x25, [sp, #96]
  2c:	stp	x24, x23, [sp, #112]
  30:	stp	x20, x19, [sp, #144]
  34:	mov	x26, x4
  38:	mov	x23, x3
  3c:	mov	x25, x2
  40:	sturb	wzr, [x29, #-12]
  44:	bl	0 <ctf_dprintf>
  48:	lsl	x20, x25, #4
  4c:	add	x19, x20, #0x28
  50:	adrp	x0, 0 <ctf_arc_write_fd>
  54:	add	x0, x0, #0x0
  58:	mov	x1, x19
  5c:	bl	0 <ctf_dprintf>
  60:	add	x1, x20, #0x27
  64:	mov	w0, w21
  68:	mov	w2, wzr
  6c:	bl	0 <lseek>
  70:	tbnz	x0, #63, bc <ctf_arc_write_fd+0xbc>
  74:	sub	x1, x29, #0xc
  78:	mov	w2, #0x1                   	// #1
  7c:	mov	w0, w21
  80:	bl	0 <write>
  84:	tbnz	x0, #63, bc <ctf_arc_write_fd+0xbc>
  88:	mov	w2, #0x3                   	// #3
  8c:	mov	w3, #0x1                   	// #1
  90:	mov	x0, xzr
  94:	mov	x1, x19
  98:	mov	w4, w21
  9c:	mov	x5, xzr
  a0:	bl	0 <mmap>
  a4:	add	x8, x0, #0x1
  a8:	cmp	x8, #0x2
  ac:	b.cs	114 <ctf_arc_write_fd+0x114>  // b.hs, b.nlast
  b0:	adrp	x20, 0 <ctf_arc_write_fd>
  b4:	add	x20, x20, #0x0
  b8:	b	c4 <ctf_arc_write_fd+0xc4>
  bc:	adrp	x20, 0 <ctf_arc_write_fd>
  c0:	add	x20, x20, #0x0
  c4:	bl	0 <__errno_location>
  c8:	mov	x19, x0
  cc:	ldr	w0, [x0]
  d0:	cmp	w0, #0x3e7
  d4:	b.gt	e0 <ctf_arc_write_fd+0xe0>
  d8:	bl	0 <strerror>
  dc:	b	e4 <ctf_arc_write_fd+0xe4>
  e0:	bl	0 <ctf_errmsg>
  e4:	mov	x1, x0
  e8:	mov	x0, x20
  ec:	bl	0 <ctf_dprintf>
  f0:	ldr	w0, [x19]
  f4:	ldp	x20, x19, [sp, #144]
  f8:	ldp	x22, x21, [sp, #128]
  fc:	ldp	x24, x23, [sp, #112]
 100:	ldp	x26, x25, [sp, #96]
 104:	ldp	x28, x27, [sp, #80]
 108:	ldp	x29, x30, [sp, #64]
 10c:	add	sp, sp, #0xa0
 110:	ret
 114:	mov	x8, #0x3eeb                	// #16107
 118:	movk	x8, #0xd762, lsl #16
 11c:	movk	x8, #0xf2a4, lsl #32
 120:	mov	x22, x0
 124:	movk	x8, #0x8b47, lsl #48
 128:	str	x25, [x0, #16]
 12c:	str	x8, [x0]
 130:	str	x19, [x0, #32]
 134:	str	x0, [sp, #24]
 138:	cbz	x25, 32c <ctf_arc_write_fd+0x32c>
 13c:	ldr	x0, [x28]
 140:	bl	0 <ctf_getmodel>
 144:	ldr	x20, [x22, #16]
 148:	sxtw	x8, w0
 14c:	str	x8, [x22, #8]
 150:	cbz	x20, 350 <ctf_arc_write_fd+0x350>
 154:	mov	x24, xzr
 158:	mov	x22, xzr
 15c:	ldr	x0, [x23, x24, lsl #3]
 160:	bl	0 <strlen>
 164:	add	x8, x22, x0
 168:	add	x24, x24, #0x1
 16c:	cmp	x24, x20
 170:	add	x22, x8, #0x1
 174:	b.cc	15c <ctf_arc_write_fd+0x15c>  // b.lo, b.ul, b.last
 178:	mov	x0, x22
 17c:	bl	0 <malloc>
 180:	stur	x0, [x29, #-24]
 184:	cbz	x0, 340 <ctf_arc_write_fd+0x340>
 188:	ldr	x24, [sp, #24]
 18c:	ldr	x8, [x24, #16]
 190:	add	x25, x24, #0x28
 194:	cbz	x8, 368 <ctf_arc_write_fd+0x368>
 198:	mov	x20, xzr
 19c:	mov	x27, xzr
 1a0:	stp	x25, x26, [sp]
 1a4:	str	x28, [sp, #32]
 1a8:	lsl	x22, x20, #3
 1ac:	ldur	x8, [x29, #-24]
 1b0:	ldr	x1, [x23, x22]
 1b4:	add	x0, x8, x27
 1b8:	bl	0 <strcpy>
 1bc:	ldr	x26, [x28, x22]
 1c0:	stur	xzr, [x29, #-8]
 1c4:	mov	x0, x26
 1c8:	bl	0 <ctf_serialize>
 1cc:	tbnz	w0, #31, 24c <ctf_arc_write_fd+0x24c>
 1d0:	mov	w2, #0x1                   	// #1
 1d4:	mov	w0, w21
 1d8:	mov	x1, xzr
 1dc:	bl	0 <lseek>
 1e0:	tbnz	x0, #63, 2d4 <ctf_arc_write_fd+0x2d4>
 1e4:	ldr	x8, [x26, #416]
 1e8:	ldr	x9, [sp, #8]
 1ec:	mov	x28, x0
 1f0:	sub	x22, x29, #0x8
 1f4:	mov	w24, #0x8                   	// #8
 1f8:	cmp	x8, x9
 1fc:	adrp	x8, 0 <ctf_write>
 200:	adrp	x9, 0 <ctf_compress_write>
 204:	add	x8, x8, #0x0
 208:	add	x9, x9, #0x0
 20c:	csel	x8, x9, x8, hi  // hi = pmore
 210:	str	x8, [sp, #16]
 214:	mov	w0, w21
 218:	mov	x1, x22
 21c:	mov	x2, x24
 220:	bl	0 <write>
 224:	tbnz	x0, #63, 2dc <ctf_arc_write_fd+0x2dc>
 228:	subs	x24, x24, x0
 22c:	add	x22, x22, x0
 230:	b.ne	214 <ctf_arc_write_fd+0x214>  // b.any
 234:	ldr	x8, [sp, #16]
 238:	mov	x0, x26
 23c:	mov	w1, w21
 240:	blr	x8
 244:	cbz	w0, 254 <ctf_arc_write_fd+0x254>
 248:	ldr	x24, [sp, #24]
 24c:	add	x0, x26, #0x22c
 250:	b	2e4 <ctf_arc_write_fd+0x2e4>
 254:	mov	w2, #0x1                   	// #1
 258:	mov	w0, w21
 25c:	mov	x1, xzr
 260:	bl	0 <lseek>
 264:	tbnz	x0, #63, 2dc <ctf_arc_write_fd+0x2dc>
 268:	mov	x22, x0
 26c:	sub	x8, x0, x28
 270:	mov	w0, w21
 274:	mov	x1, x28
 278:	mov	w2, wzr
 27c:	stur	x8, [x29, #-8]
 280:	bl	0 <lseek>
 284:	ldr	x24, [sp, #24]
 288:	tbnz	x0, #63, 2d4 <ctf_arc_write_fd+0x2d4>
 28c:	str	x22, [sp, #16]
 290:	sub	x22, x29, #0x8
 294:	mov	w26, #0x8                   	// #8
 298:	mov	w0, w21
 29c:	mov	x1, x22
 2a0:	mov	x2, x26
 2a4:	bl	0 <write>
 2a8:	tbnz	x0, #63, 2d4 <ctf_arc_write_fd+0x2d4>
 2ac:	subs	x26, x26, x0
 2b0:	add	x22, x22, x0
 2b4:	b.ne	298 <ctf_arc_write_fd+0x298>  // b.any
 2b8:	ldr	x8, [sp, #16]
 2bc:	mov	w0, w21
 2c0:	mov	w2, wzr
 2c4:	add	x8, x8, #0x7
 2c8:	and	x1, x8, #0xfffffffffffffff8
 2cc:	bl	0 <lseek>
 2d0:	tbz	x0, #63, 2ec <ctf_arc_write_fd+0x2ec>
 2d4:	bl	0 <__errno_location>
 2d8:	b	2e4 <ctf_arc_write_fd+0x2e4>
 2dc:	bl	0 <__errno_location>
 2e0:	ldr	x24, [sp, #24]
 2e4:	ldrsw	x8, [x0]
 2e8:	neg	x28, x8
 2ec:	cmn	x28, #0x3e8
 2f0:	b.hi	418 <ctf_arc_write_fd+0x418>  // b.pmore
 2f4:	tbnz	x28, #63, 424 <ctf_arc_write_fd+0x424>
 2f8:	sub	x8, x28, x19
 2fc:	stp	x27, x8, [x25], #16
 300:	ldr	x0, [x23, x20, lsl #3]
 304:	bl	0 <strlen>
 308:	ldr	x1, [x24, #16]
 30c:	ldr	x28, [sp, #32]
 310:	add	x8, x27, x0
 314:	add	x20, x20, #0x1
 318:	add	x27, x8, #0x1
 31c:	cmp	x20, x1
 320:	b.cc	1a8 <ctf_arc_write_fd+0x1a8>  // b.lo, b.ul, b.last
 324:	ldr	x25, [sp]
 328:	b	370 <ctf_arc_write_fd+0x370>
 32c:	mov	x22, xzr
 330:	mov	x0, x22
 334:	bl	0 <malloc>
 338:	stur	x0, [x29, #-24]
 33c:	cbnz	x0, 188 <ctf_arc_write_fd+0x188>
 340:	ldr	x24, [sp, #24]
 344:	adrp	x20, 0 <ctf_arc_write_fd>
 348:	add	x20, x20, #0x0
 34c:	b	440 <ctf_arc_write_fd+0x440>
 350:	mov	x22, xzr
 354:	mov	x0, x22
 358:	bl	0 <malloc>
 35c:	stur	x0, [x29, #-24]
 360:	cbnz	x0, 188 <ctf_arc_write_fd+0x188>
 364:	b	340 <ctf_arc_write_fd+0x340>
 368:	mov	x27, xzr
 36c:	mov	x1, xzr
 370:	ldur	x4, [x29, #-24]
 374:	adrp	x3, 0 <ctf_arc_write_fd>
 378:	add	x3, x3, #0x0
 37c:	mov	w2, #0x10                  	// #16
 380:	mov	x0, x25
 384:	bl	0 <qsort_r>
 388:	mov	w2, #0x1                   	// #1
 38c:	mov	w0, w21
 390:	mov	x1, xzr
 394:	bl	0 <lseek>
 398:	tbnz	x0, #63, 40c <ctf_arc_write_fd+0x40c>
 39c:	cmp	x27, #0x1
 3a0:	str	x0, [x24, #24]
 3a4:	b.lt	3d8 <ctf_arc_write_fd+0x3d8>  // b.tstop
 3a8:	ldur	x22, [x29, #-24]
 3ac:	adrp	x20, 0 <ctf_arc_write_fd>
 3b0:	add	x20, x20, #0x0
 3b4:	mov	w0, w21
 3b8:	mov	x1, x22
 3bc:	mov	x2, x27
 3c0:	bl	0 <write>
 3c4:	tbnz	x0, #63, 438 <ctf_arc_write_fd+0x438>
 3c8:	sub	x27, x27, x0
 3cc:	cmp	x27, #0x0
 3d0:	add	x22, x22, x0
 3d4:	b.gt	3b4 <ctf_arc_write_fd+0x3b4>
 3d8:	ldur	x0, [x29, #-24]
 3dc:	bl	0 <free>
 3e0:	mov	w2, #0x1                   	// #1
 3e4:	mov	x0, x24
 3e8:	mov	x1, x19
 3ec:	bl	0 <msync>
 3f0:	tbnz	w0, #31, 450 <ctf_arc_write_fd+0x450>
 3f4:	mov	x0, x24
 3f8:	mov	x1, x19
 3fc:	bl	0 <munmap>
 400:	tbnz	w0, #31, 45c <ctf_arc_write_fd+0x45c>
 404:	mov	w0, wzr
 408:	b	f4 <ctf_arc_write_fd+0xf4>
 40c:	adrp	x20, 0 <ctf_arc_write_fd>
 410:	add	x20, x20, #0x0
 414:	b	438 <ctf_arc_write_fd+0x438>
 418:	adrp	x20, 0 <ctf_arc_write_fd>
 41c:	add	x20, x20, #0x0
 420:	b	438 <ctf_arc_write_fd+0x438>
 424:	neg	w20, w28
 428:	bl	0 <__errno_location>
 42c:	str	w20, [x0]
 430:	adrp	x20, 0 <ctf_arc_write_fd>
 434:	add	x20, x20, #0x0
 438:	ldur	x0, [x29, #-24]
 43c:	bl	0 <free>
 440:	mov	x0, x24
 444:	mov	x1, x19
 448:	bl	0 <munmap>
 44c:	b	c4 <ctf_arc_write_fd+0xc4>
 450:	adrp	x20, 0 <ctf_arc_write_fd>
 454:	add	x20, x20, #0x0
 458:	b	440 <ctf_arc_write_fd+0x440>
 45c:	adrp	x20, 0 <ctf_arc_write_fd>
 460:	add	x20, x20, #0x0
 464:	b	c4 <ctf_arc_write_fd+0xc4>

0000000000000468 <sort_modent_by_name>:
 468:	ldr	x8, [x0]
 46c:	ldr	x9, [x1]
 470:	add	x0, x2, x8
 474:	add	x1, x2, x9
 478:	b	0 <strcmp>

000000000000047c <ctf_arc_write>:
 47c:	stp	x29, x30, [sp, #-64]!
 480:	stp	x24, x23, [sp, #16]
 484:	mov	x24, x1
 488:	mov	w1, #0x242                 	// #578
 48c:	mov	x23, x2
 490:	movk	w1, #0x8, lsl #16
 494:	mov	w2, #0x1b6                 	// #438
 498:	stp	x22, x21, [sp, #32]
 49c:	stp	x20, x19, [sp, #48]
 4a0:	mov	x29, sp
 4a4:	mov	x20, x4
 4a8:	mov	x22, x3
 4ac:	mov	x19, x0
 4b0:	bl	0 <open>
 4b4:	tbnz	w0, #31, 4f4 <ctf_arc_write+0x78>
 4b8:	mov	x1, x24
 4bc:	mov	x2, x23
 4c0:	mov	x3, x22
 4c4:	mov	x4, x20
 4c8:	mov	w21, w0
 4cc:	bl	0 <ctf_arc_write_fd>
 4d0:	mov	w22, w0
 4d4:	mov	w0, w21
 4d8:	bl	0 <close>
 4dc:	cbz	w22, 520 <ctf_arc_write+0xa4>
 4e0:	tbz	w22, #31, 4ec <ctf_arc_write+0x70>
 4e4:	mov	x0, x19
 4e8:	bl	0 <unlink>
 4ec:	mov	w20, w22
 4f0:	b	558 <ctf_arc_write+0xdc>
 4f4:	bl	0 <__errno_location>
 4f8:	mov	x20, x0
 4fc:	ldr	w0, [x0]
 500:	bl	0 <strerror>
 504:	mov	x2, x0
 508:	adrp	x0, 0 <ctf_arc_write_fd>
 50c:	add	x0, x0, #0x0
 510:	mov	x1, x19
 514:	bl	0 <ctf_dprintf>
 518:	ldr	w20, [x20]
 51c:	b	558 <ctf_arc_write+0xdc>
 520:	mov	w20, w0
 524:	tbnz	w0, #31, 534 <ctf_arc_write+0xb8>
 528:	mov	w0, w21
 52c:	bl	0 <close>
 530:	b	558 <ctf_arc_write+0xdc>
 534:	bl	0 <__errno_location>
 538:	ldr	w0, [x0]
 53c:	bl	0 <strerror>
 540:	mov	x1, x0
 544:	adrp	x0, 0 <ctf_arc_write_fd>
 548:	add	x0, x0, #0x0
 54c:	bl	0 <ctf_dprintf>
 550:	mov	x0, x19
 554:	bl	0 <unlink>
 558:	mov	w0, w20
 55c:	ldp	x20, x19, [sp, #48]
 560:	ldp	x22, x21, [sp, #32]
 564:	ldp	x24, x23, [sp, #16]
 568:	ldp	x29, x30, [sp], #64
 56c:	ret

0000000000000570 <ctf_arc_bufopen>:
 570:	ldr	x8, [x0]
 574:	mov	x9, #0x3eeb                	// #16107
 578:	movk	x9, #0xd762, lsl #16
 57c:	movk	x9, #0xf2a4, lsl #32
 580:	movk	x9, #0x8b47, lsl #48
 584:	cmp	x8, x9
 588:	b.eq	59c <ctf_arc_bufopen+0x2c>  // b.none
 58c:	mov	x0, xzr
 590:	cbz	x2, 59c <ctf_arc_bufopen+0x2c>
 594:	mov	w8, #0x3e8                 	// #1000
 598:	str	w8, [x2]
 59c:	ret

00000000000005a0 <ctf_arc_open_internal>:
 5a0:	sub	sp, sp, #0xb0
 5a4:	stp	x29, x30, [sp, #128]
 5a8:	stp	x22, x21, [sp, #144]
 5ac:	stp	x20, x19, [sp, #160]
 5b0:	add	x29, sp, #0x80
 5b4:	mov	x20, x1
 5b8:	mov	x19, x0
 5bc:	bl	0 <libctf_init_debug>
 5c0:	mov	x0, x19
 5c4:	mov	w1, wzr
 5c8:	bl	0 <open>
 5cc:	tbnz	w0, #31, 640 <ctf_arc_open_internal+0xa0>
 5d0:	mov	w21, w0
 5d4:	mov	x2, sp
 5d8:	mov	w0, wzr
 5dc:	mov	w1, w21
 5e0:	bl	0 <__fxstat>
 5e4:	tbnz	w0, #31, 654 <ctf_arc_open_internal+0xb4>
 5e8:	ldr	x1, [sp, #48]
 5ec:	mov	w2, #0x3                   	// #3
 5f0:	mov	w3, #0x2                   	// #2
 5f4:	mov	x0, xzr
 5f8:	mov	w4, w21
 5fc:	mov	x5, xzr
 600:	bl	0 <mmap>
 604:	cmn	x0, #0x1
 608:	csel	x22, xzr, x0, eq  // eq = none
 60c:	cbz	x22, 670 <ctf_arc_open_internal+0xd0>
 610:	ldr	x8, [x22]
 614:	mov	x9, #0x3eeb                	// #16107
 618:	movk	x9, #0xd762, lsl #16
 61c:	movk	x9, #0xf2a4, lsl #32
 620:	movk	x9, #0x8b47, lsl #48
 624:	cmp	x8, x9
 628:	b.ne	6d4 <ctf_arc_open_internal+0x134>  // b.any
 62c:	ldr	x8, [sp, #48]
 630:	mov	w0, w21
 634:	str	x8, [x22]
 638:	bl	0 <close>
 63c:	b	6bc <ctf_arc_open_internal+0x11c>
 640:	adrp	x22, 0 <ctf_arc_write_fd>
 644:	add	x22, x22, #0x0
 648:	bl	0 <__errno_location>
 64c:	cbnz	x20, 688 <ctf_arc_open_internal+0xe8>
 650:	b	690 <ctf_arc_open_internal+0xf0>
 654:	adrp	x22, 0 <ctf_arc_write_fd>
 658:	add	x22, x22, #0x0
 65c:	mov	w0, w21
 660:	bl	0 <close>
 664:	bl	0 <__errno_location>
 668:	cbnz	x20, 688 <ctf_arc_open_internal+0xe8>
 66c:	b	690 <ctf_arc_open_internal+0xf0>
 670:	adrp	x22, 0 <ctf_arc_write_fd>
 674:	add	x22, x22, #0x0
 678:	mov	w0, w21
 67c:	bl	0 <close>
 680:	bl	0 <__errno_location>
 684:	cbz	x20, 690 <ctf_arc_open_internal+0xf0>
 688:	ldr	w8, [x0]
 68c:	str	w8, [x20]
 690:	ldr	w0, [x0]
 694:	cmp	w0, #0x3e7
 698:	b.gt	6a4 <ctf_arc_open_internal+0x104>
 69c:	bl	0 <strerror>
 6a0:	b	6a8 <ctf_arc_open_internal+0x108>
 6a4:	bl	0 <ctf_errmsg>
 6a8:	mov	x2, x0
 6ac:	mov	x0, x22
 6b0:	mov	x1, x19
 6b4:	bl	0 <ctf_dprintf>
 6b8:	mov	x22, xzr
 6bc:	mov	x0, x22
 6c0:	ldp	x20, x19, [sp, #160]
 6c4:	ldp	x22, x21, [sp, #144]
 6c8:	ldp	x29, x30, [sp, #128]
 6cc:	add	sp, sp, #0xb0
 6d0:	ret
 6d4:	bl	0 <__errno_location>
 6d8:	mov	w8, #0x3e8                 	// #1000
 6dc:	str	w8, [x0]
 6e0:	ldr	x1, [sp, #48]
 6e4:	mov	x0, x22
 6e8:	bl	0 <munmap>
 6ec:	adrp	x22, 0 <ctf_arc_write_fd>
 6f0:	add	x22, x22, #0x0
 6f4:	mov	w0, w21
 6f8:	bl	0 <close>
 6fc:	bl	0 <__errno_location>
 700:	cbnz	x20, 688 <ctf_arc_open_internal+0xe8>
 704:	b	690 <ctf_arc_open_internal+0xf0>

0000000000000708 <ctf_arc_close_internal>:
 708:	cbz	x0, 714 <ctf_arc_close_internal+0xc>
 70c:	ldr	x1, [x0]
 710:	b	0 <munmap>
 714:	ret

0000000000000718 <ctf_arc_close>:
 718:	cbz	x0, 748 <ctf_arc_close+0x30>
 71c:	stp	x29, x30, [sp, #-32]!
 720:	ldr	w8, [x0]
 724:	str	x19, [sp, #16]
 728:	mov	x19, x0
 72c:	mov	x29, sp
 730:	cbz	w8, 74c <ctf_arc_close+0x34>
 734:	ldr	x0, [x19, #16]
 738:	cbz	x0, 754 <ctf_arc_close+0x3c>
 73c:	ldr	x1, [x0]
 740:	bl	0 <munmap>
 744:	b	754 <ctf_arc_close+0x3c>
 748:	ret
 74c:	ldr	x0, [x19, #8]
 750:	bl	0 <ctf_file_close>
 754:	ldr	x0, [x19, #32]
 758:	bl	0 <free>
 75c:	ldr	x0, [x19, #88]
 760:	bl	0 <free>
 764:	ldr	x8, [x19, #104]
 768:	cbz	x8, 774 <ctf_arc_close+0x5c>
 76c:	mov	x0, x19
 770:	blr	x8
 774:	mov	x0, x19
 778:	ldr	x19, [sp, #16]
 77c:	ldp	x29, x30, [sp], #32
 780:	b	0 <free>

0000000000000784 <ctf_arc_open_by_name_sections>:
 784:	stp	x29, x30, [sp, #-32]!
 788:	stp	x20, x19, [sp, #16]
 78c:	ldr	w8, [x0]
 790:	mov	x20, x4
 794:	mov	x19, x0
 798:	mov	x29, sp
 79c:	cbz	w8, 7c0 <ctf_arc_open_by_name_sections+0x3c>
 7a0:	ldr	x0, [x19, #16]
 7a4:	mov	x4, x20
 7a8:	bl	814 <ctf_arc_open_by_name_internal>
 7ac:	cbz	x0, 7b4 <ctf_arc_open_by_name_sections+0x30>
 7b0:	str	x19, [x0, #640]
 7b4:	ldp	x20, x19, [sp, #16]
 7b8:	ldp	x29, x30, [sp], #32
 7bc:	ret
 7c0:	cbz	x3, 7f4 <ctf_arc_open_by_name_sections+0x70>
 7c4:	adrp	x1, 0 <_CTF_SECTION>
 7c8:	add	x1, x1, #0x0
 7cc:	mov	x0, x3
 7d0:	bl	0 <strcmp>
 7d4:	cbz	w0, 7f4 <ctf_arc_open_by_name_sections+0x70>
 7d8:	mov	x0, xzr
 7dc:	cbz	x20, 7b4 <ctf_arc_open_by_name_sections+0x30>
 7e0:	mov	w8, #0x415                 	// #1045
 7e4:	str	w8, [x20]
 7e8:	ldp	x20, x19, [sp, #16]
 7ec:	ldp	x29, x30, [sp], #32
 7f0:	ret
 7f4:	ldr	x0, [x19, #8]
 7f8:	ldr	w8, [x0, #548]
 7fc:	str	x19, [x0, #640]
 800:	add	w8, w8, #0x1
 804:	str	w8, [x0, #548]
 808:	ldp	x20, x19, [sp, #16]
 80c:	ldp	x29, x30, [sp], #32
 810:	ret

0000000000000814 <ctf_arc_open_by_name_internal>:
 814:	sub	sp, sp, #0x90
 818:	stp	x24, x23, [sp, #96]
 81c:	adrp	x24, 0 <_CTF_SECTION>
 820:	add	x24, x24, #0x0
 824:	cmp	x3, #0x0
 828:	stp	x20, x19, [sp, #128]
 82c:	mov	x20, x0
 830:	csel	x23, x24, x3, eq  // eq = none
 834:	adrp	x0, 0 <ctf_arc_write_fd>
 838:	stp	x1, x2, [sp]
 83c:	add	x0, x0, #0x0
 840:	mov	x1, x23
 844:	stp	x29, x30, [sp, #48]
 848:	stp	x28, x27, [sp, #64]
 84c:	stp	x26, x25, [sp, #80]
 850:	stp	x22, x21, [sp, #112]
 854:	add	x29, sp, #0x30
 858:	mov	x19, x4
 85c:	bl	0 <ctf_dprintf>
 860:	ldp	x21, x8, [x20, #16]
 864:	mrs	x9, tpidr_el0
 868:	add	x9, x9, #0x0, lsl #12
 86c:	add	x25, x20, x8
 870:	add	x8, x9, #0x0
 874:	str	x25, [x8]
 878:	cbz	x21, 8c4 <ctf_arc_open_by_name_internal+0xb0>
 87c:	mov	x28, xzr
 880:	add	x26, x20, #0x28
 884:	b	894 <ctf_arc_open_by_name_internal+0x80>
 888:	cmp	x28, x27
 88c:	mov	x21, x27
 890:	b.cs	8c4 <ctf_arc_open_by_name_internal+0xb0>  // b.hs, b.nlast
 894:	add	x8, x21, x28
 898:	lsr	x27, x8, #1
 89c:	add	x22, x26, x27, lsl #4
 8a0:	ldr	x8, [x22]
 8a4:	mov	x0, x23
 8a8:	add	x1, x25, x8
 8ac:	bl	0 <strcmp>
 8b0:	tbnz	w0, #31, 888 <ctf_arc_open_by_name_internal+0x74>
 8b4:	cbz	w0, 8d8 <ctf_arc_open_by_name_internal+0xc4>
 8b8:	add	x28, x27, #0x1
 8bc:	mov	x27, x21
 8c0:	b	888 <ctf_arc_open_by_name_internal+0x74>
 8c4:	mov	x21, xzr
 8c8:	cbz	x19, 930 <ctf_arc_open_by_name_internal+0x11c>
 8cc:	mov	w8, #0x415                 	// #1045
 8d0:	str	w8, [x19]
 8d4:	b	930 <ctf_arc_open_by_name_internal+0x11c>
 8d8:	ldr	x23, [x22, #8]
 8dc:	adrp	x0, 0 <ctf_arc_write_fd>
 8e0:	add	x0, x0, #0x0
 8e4:	mov	x1, x23
 8e8:	bl	0 <ctf_dprintf>
 8ec:	ldr	x8, [x20, #32]
 8f0:	str	x24, [sp, #16]
 8f4:	mov	w10, #0x1                   	// #1
 8f8:	add	x0, sp, #0x10
 8fc:	add	x8, x8, x23
 900:	add	x8, x20, x8
 904:	ldr	x9, [x8], #8
 908:	ldp	x1, x2, [sp]
 90c:	mov	x3, x19
 910:	stp	x9, x10, [sp, #32]
 914:	str	x8, [sp, #24]
 918:	bl	0 <ctf_bufopen>
 91c:	mov	x21, x0
 920:	cbz	x0, 930 <ctf_arc_open_by_name_internal+0x11c>
 924:	ldr	w1, [x20, #8]
 928:	mov	x0, x21
 92c:	bl	0 <ctf_setmodel>
 930:	mov	x0, x21
 934:	ldp	x20, x19, [sp, #128]
 938:	ldp	x22, x21, [sp, #112]
 93c:	ldp	x24, x23, [sp, #96]
 940:	ldp	x26, x25, [sp, #80]
 944:	ldp	x28, x27, [sp, #64]
 948:	ldp	x29, x30, [sp, #48]
 94c:	add	sp, sp, #0x90
 950:	ret

0000000000000954 <ctf_arc_open_by_name>:
 954:	stp	x29, x30, [sp, #-32]!
 958:	stp	x20, x19, [sp, #16]
 95c:	mov	x8, x0
 960:	ldr	w9, [x8], #56
 964:	mov	x20, x2
 968:	mov	x19, x0
 96c:	mov	x3, x1
 970:	mov	x29, sp
 974:	cbz	w9, 9b0 <ctf_arc_open_by_name+0x5c>
 978:	ldr	x9, [x19, #56]
 97c:	ldp	x0, x11, [x19, #16]
 980:	add	x10, x19, #0x18
 984:	mov	x4, x20
 988:	cmp	x9, #0x0
 98c:	csel	x2, xzr, x8, eq  // eq = none
 990:	cmp	x11, #0x0
 994:	csel	x1, xzr, x10, eq  // eq = none
 998:	bl	814 <ctf_arc_open_by_name_internal>
 99c:	cbz	x0, 9a4 <ctf_arc_open_by_name+0x50>
 9a0:	str	x19, [x0, #640]
 9a4:	ldp	x20, x19, [sp, #16]
 9a8:	ldp	x29, x30, [sp], #32
 9ac:	ret
 9b0:	cbz	x3, 9e4 <ctf_arc_open_by_name+0x90>
 9b4:	adrp	x1, 0 <_CTF_SECTION>
 9b8:	add	x1, x1, #0x0
 9bc:	mov	x0, x3
 9c0:	bl	0 <strcmp>
 9c4:	cbz	w0, 9e4 <ctf_arc_open_by_name+0x90>
 9c8:	mov	x0, xzr
 9cc:	cbz	x20, 9a4 <ctf_arc_open_by_name+0x50>
 9d0:	mov	w8, #0x415                 	// #1045
 9d4:	str	w8, [x20]
 9d8:	ldp	x20, x19, [sp, #16]
 9dc:	ldp	x29, x30, [sp], #32
 9e0:	ret
 9e4:	ldr	x0, [x19, #8]
 9e8:	ldr	w8, [x0, #548]
 9ec:	str	x19, [x0, #640]
 9f0:	add	w8, w8, #0x1
 9f4:	str	w8, [x0, #548]
 9f8:	ldp	x20, x19, [sp, #16]
 9fc:	ldp	x29, x30, [sp], #32
 a00:	ret

0000000000000a04 <ctf_archive_raw_iter>:
 a04:	stp	x29, x30, [sp, #-64]!
 a08:	stp	x24, x23, [sp, #16]
 a0c:	stp	x22, x21, [sp, #32]
 a10:	stp	x20, x19, [sp, #48]
 a14:	ldr	w8, [x0]
 a18:	mov	x29, sp
 a1c:	cbz	w8, a84 <ctf_archive_raw_iter+0x80>
 a20:	ldr	x21, [x0, #16]
 a24:	ldr	x8, [x21, #16]
 a28:	cbz	x8, a7c <ctf_archive_raw_iter+0x78>
 a2c:	ldr	x8, [x21, #24]
 a30:	mov	x19, x2
 a34:	mov	x20, x1
 a38:	mov	x22, xzr
 a3c:	add	x23, x21, x8
 a40:	add	x24, x21, #0x30
 a44:	ldr	x8, [x21, #32]
 a48:	ldp	x10, x9, [x24, #-8]
 a4c:	mov	x3, x19
 a50:	add	x8, x21, x8
 a54:	add	x1, x8, x9
 a58:	ldr	x2, [x1], #8
 a5c:	add	x0, x23, x10
 a60:	blr	x20
 a64:	cbnz	w0, a88 <ctf_archive_raw_iter+0x84>
 a68:	ldr	x8, [x21, #16]
 a6c:	add	x22, x22, #0x1
 a70:	add	x24, x24, #0x10
 a74:	cmp	x22, x8
 a78:	b.cc	a44 <ctf_archive_raw_iter+0x40>  // b.lo, b.ul, b.last
 a7c:	mov	w0, wzr
 a80:	b	a88 <ctf_archive_raw_iter+0x84>
 a84:	mov	w0, #0xffffffea            	// #-22
 a88:	ldp	x20, x19, [sp, #48]
 a8c:	ldp	x22, x21, [sp, #32]
 a90:	ldp	x24, x23, [sp, #16]
 a94:	ldp	x29, x30, [sp], #64
 a98:	ret

0000000000000a9c <ctf_archive_iter>:
 a9c:	sub	sp, sp, #0x70
 aa0:	stp	x29, x30, [sp, #16]
 aa4:	stp	x28, x27, [sp, #32]
 aa8:	stp	x26, x25, [sp, #48]
 aac:	stp	x24, x23, [sp, #64]
 ab0:	stp	x22, x21, [sp, #80]
 ab4:	stp	x20, x19, [sp, #96]
 ab8:	mov	x8, x0
 abc:	ldr	x9, [x8, #24]!
 ac0:	mov	x10, x0
 ac4:	ldr	x11, [x10, #56]!
 ac8:	ldr	w12, [x0]
 acc:	cmp	x9, #0x0
 ad0:	csel	x21, xzr, x8, eq  // eq = none
 ad4:	cmp	x11, #0x0
 ad8:	mov	x19, x2
 adc:	mov	x3, x1
 ae0:	mov	x20, x0
 ae4:	csel	x22, xzr, x10, eq  // eq = none
 ae8:	add	x29, sp, #0x10
 aec:	cbz	w12, b7c <ctf_archive_iter+0xe0>
 af0:	ldr	x23, [x20, #16]
 af4:	ldr	x8, [x23, #16]
 af8:	cbz	x8, b74 <ctf_archive_iter+0xd8>
 afc:	ldr	x8, [x23, #24]
 b00:	mov	x26, xzr
 b04:	mov	w28, #0x28                  	// #40
 b08:	str	x3, [sp]
 b0c:	add	x27, x23, x8
 b10:	ldr	x8, [x23, x28]
 b14:	sub	x4, x29, #0x4
 b18:	mov	x0, x23
 b1c:	mov	x1, x21
 b20:	add	x24, x27, x8
 b24:	mov	x2, x22
 b28:	mov	x3, x24
 b2c:	bl	814 <ctf_arc_open_by_name_internal>
 b30:	cbz	x0, bac <ctf_archive_iter+0x110>
 b34:	ldr	x3, [sp]
 b38:	mov	x1, x24
 b3c:	mov	x2, x19
 b40:	mov	x25, x0
 b44:	str	x20, [x0, #640]
 b48:	blr	x3
 b4c:	mov	w24, w0
 b50:	stur	w0, [x29, #-4]
 b54:	mov	x0, x25
 b58:	bl	0 <ctf_file_close>
 b5c:	cbnz	w24, bac <ctf_archive_iter+0x110>
 b60:	ldr	x8, [x23, #16]
 b64:	add	x26, x26, #0x1
 b68:	add	x28, x28, #0x10
 b6c:	cmp	x26, x8
 b70:	b.cc	b10 <ctf_archive_iter+0x74>  // b.lo, b.ul, b.last
 b74:	mov	w0, wzr
 b78:	b	bb0 <ctf_archive_iter+0x114>
 b7c:	ldr	x0, [x20, #8]
 b80:	mov	x2, x19
 b84:	ldp	x20, x19, [sp, #96]
 b88:	ldp	x22, x21, [sp, #80]
 b8c:	ldp	x24, x23, [sp, #64]
 b90:	ldp	x26, x25, [sp, #48]
 b94:	ldp	x28, x27, [sp, #32]
 b98:	ldp	x29, x30, [sp, #16]
 b9c:	adrp	x1, 0 <_CTF_SECTION>
 ba0:	add	x1, x1, #0x0
 ba4:	add	sp, sp, #0x70
 ba8:	br	x3
 bac:	ldur	w0, [x29, #-4]
 bb0:	ldp	x20, x19, [sp, #96]
 bb4:	ldp	x22, x21, [sp, #80]
 bb8:	ldp	x24, x23, [sp, #64]
 bbc:	ldp	x26, x25, [sp, #48]
 bc0:	ldp	x28, x27, [sp, #32]
 bc4:	ldp	x29, x30, [sp, #16]
 bc8:	add	sp, sp, #0x70
 bcc:	ret

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_dump>:
       0:	sub	sp, sp, #0xb0
       4:	stp	x29, x30, [sp, #80]
       8:	stp	x28, x27, [sp, #96]
       c:	stp	x26, x25, [sp, #112]
      10:	stp	x24, x23, [sp, #128]
      14:	stp	x22, x21, [sp, #144]
      18:	stp	x20, x19, [sp, #160]
      1c:	ldr	x21, [x1]
      20:	mov	x22, x4
      24:	mov	x23, x3
      28:	mov	w24, w2
      2c:	mov	x20, x1
      30:	mov	x19, x0
      34:	add	x29, sp, #0x50
      38:	cbz	x21, 100 <ctf_dump+0x100>
      3c:	ldr	w8, [x21]
      40:	cmp	w8, w24
      44:	b.ne	1c8 <ctf_dump+0x1c8>  // b.any
      48:	str	x22, [sp, #8]
      4c:	ldr	x8, [x21, #16]
      50:	add	x9, x21, #0x20
      54:	add	x10, x8, #0x8
      58:	cmp	x8, #0x0
      5c:	csel	x8, x9, x10, eq  // eq = none
      60:	ldr	x8, [x8]
      64:	str	x8, [x21, #16]
      68:	cbz	x8, 1d4 <ctf_dump+0x1d4>
      6c:	ldr	x25, [x8, #16]
      70:	cbz	x23, 24c <ctf_dump+0x24c>
      74:	cbz	x25, 228 <ctf_dump+0x228>
      78:	ldrb	w8, [x25]
      7c:	cbz	w8, 228 <ctf_dump+0x228>
      80:	ldr	x28, [sp, #8]
      84:	adrp	x20, 0 <ctf_dump>
      88:	mov	x21, xzr
      8c:	mov	w22, #0xa                   	// #10
      90:	add	x20, x20, #0x0
      94:	mov	w1, #0xa                   	// #10
      98:	mov	x0, x25
      9c:	bl	0 <strchr>
      a0:	mov	x26, x0
      a4:	cbz	x0, ac <ctf_dump+0xac>
      a8:	strb	wzr, [x26]
      ac:	mov	w0, w24
      b0:	mov	x1, x25
      b4:	mov	x2, x28
      b8:	blr	x23
      bc:	mov	x27, x0
      c0:	mov	x0, x21
      c4:	mov	x1, x27
      c8:	bl	0 <ctf_str_append_noerr>
      cc:	mov	x1, x20
      d0:	bl	0 <ctf_str_append_noerr>
      d4:	cmp	x27, x25
      d8:	mov	x21, x0
      dc:	b.eq	e8 <ctf_dump+0xe8>  // b.none
      e0:	mov	x0, x27
      e4:	bl	0 <free>
      e8:	cbz	x26, 22c <ctf_dump+0x22c>
      ec:	strb	w22, [x26]
      f0:	ldrb	w8, [x26, #1]!
      f4:	mov	x25, x26
      f8:	cbnz	w8, 94 <ctf_dump+0x94>
      fc:	b	22c <ctf_dump+0x22c>
     100:	mov	w0, #0x28                  	// #40
     104:	bl	0 <malloc>
     108:	mov	x21, x0
     10c:	str	x0, [x20]
     110:	cbz	x0, 1fc <ctf_dump+0x1fc>
     114:	movi	v0.2d, #0x0
     118:	mov	x28, x21
     11c:	str	xzr, [x21, #32]
     120:	cmp	w24, #0x6
     124:	stp	q0, q0, [x21]
     128:	str	x19, [x28, #8]!
     12c:	str	x22, [sp, #8]
     130:	str	w24, [x21]
     134:	b.hi	298 <ctf_dump+0x298>  // b.pmore
     138:	adrp	x9, 0 <ctf_dump>
     13c:	mov	w8, w24
     140:	add	x9, x9, #0x0
     144:	adr	x10, 154 <ctf_dump+0x154>
     148:	ldrh	w11, [x9, x8, lsl #1]
     14c:	add	x10, x10, x11, lsl #2
     150:	br	x10
     154:	adrp	x8, 0 <ctf_dump>
     158:	adrp	x9, 0 <ctf_dump>
     15c:	ldr	x25, [x19, #8]
     160:	movi	v0.2d, #0x0
     164:	add	x8, x8, #0x0
     168:	add	x9, x9, #0x0
     16c:	adrp	x10, 0 <ctf_dump>
     170:	stp	q0, q0, [sp, #16]
     174:	stp	x8, x9, [sp, #24]
     178:	adrp	x8, 0 <ctf_dump>
     17c:	add	x10, x10, #0x0
     180:	add	x8, x8, #0x0
     184:	str	q0, [sp, #48]
     188:	stp	x10, x8, [sp, #40]
     18c:	ldrh	w2, [x25]
     190:	adrp	x1, 0 <ctf_dump>
     194:	add	x1, x1, #0x0
     198:	sub	x0, x29, #0x10
     19c:	bl	0 <asprintf>
     1a0:	tbnz	w0, #31, c6c <ctf_dump+0xc6c>
     1a4:	ldur	x22, [x29, #-16]
     1a8:	mov	w0, #0x18                  	// #24
     1ac:	bl	0 <malloc>
     1b0:	cbz	x0, 704 <ctf_dump+0x704>
     1b4:	mov	x1, x0
     1b8:	str	x22, [x0, #16]
     1bc:	add	x0, x21, #0x18
     1c0:	bl	0 <ctf_list_append>
     1c4:	b	710 <ctf_dump+0x710>
     1c8:	mov	w1, #0x418                 	// #1048
     1cc:	mov	x0, x19
     1d0:	bl	0 <ctf_set_errno>
     1d4:	ldr	x22, [x21, #32]
     1d8:	cbz	x22, 208 <ctf_dump+0x208>
     1dc:	ldr	x0, [x22, #16]
     1e0:	bl	0 <free>
     1e4:	ldr	x23, [x22, #8]
     1e8:	mov	x0, x22
     1ec:	bl	0 <free>
     1f0:	mov	x22, x23
     1f4:	cbnz	x23, 1dc <ctf_dump+0x1dc>
     1f8:	b	208 <ctf_dump+0x208>
     1fc:	mov	w1, #0xc                   	// #12
     200:	mov	x0, x19
     204:	bl	0 <ctf_set_errno>
     208:	mov	x0, x21
     20c:	bl	0 <free>
     210:	mov	x0, x19
     214:	mov	w1, wzr
     218:	bl	0 <ctf_set_errno>
     21c:	mov	x21, xzr
     220:	str	xzr, [x20]
     224:	b	268 <ctf_dump+0x268>
     228:	mov	x21, xzr
     22c:	mov	x0, x21
     230:	bl	0 <strlen>
     234:	sub	x8, x0, #0x1
     238:	ldrb	w9, [x21, x8]
     23c:	cmp	w9, #0xa
     240:	b.ne	25c <ctf_dump+0x25c>  // b.any
     244:	strb	wzr, [x21, x8]
     248:	b	25c <ctf_dump+0x25c>
     24c:	mov	x0, x25
     250:	bl	0 <strdup>
     254:	mov	x21, x0
     258:	cbz	x0, 28c <ctf_dump+0x28c>
     25c:	mov	x0, x19
     260:	mov	w1, wzr
     264:	bl	0 <ctf_set_errno>
     268:	mov	x0, x21
     26c:	ldp	x20, x19, [sp, #160]
     270:	ldp	x22, x21, [sp, #144]
     274:	ldp	x24, x23, [sp, #128]
     278:	ldp	x26, x25, [sp, #112]
     27c:	ldp	x28, x27, [sp, #96]
     280:	ldp	x29, x30, [sp, #80]
     284:	add	sp, sp, #0xb0
     288:	ret
     28c:	mov	w1, #0xc                   	// #12
     290:	mov	x0, x19
     294:	b	264 <ctf_dump+0x264>
     298:	mov	w1, #0x417                 	// #1047
     29c:	b	1cc <ctf_dump+0x1cc>
     2a0:	adrp	x1, 0 <ctf_dump>
     2a4:	add	x1, x1, #0x0
     2a8:	mov	x0, x19
     2ac:	mov	x2, x21
     2b0:	bl	0 <ctf_label_iter>
     2b4:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     2b8:	mov	x0, x19
     2bc:	bl	0 <ctf_errno>
     2c0:	cmp	w0, #0x409
     2c4:	b.ne	1d4 <ctf_dump+0x1d4>  // b.any
     2c8:	mov	x0, x19
     2cc:	mov	w1, wzr
     2d0:	bl	0 <ctf_set_errno>
     2d4:	b	4c <ctf_dump+0x4c>
     2d8:	ldr	x8, [x19, #432]
     2dc:	cbz	x8, 4c <ctf_dump+0x4c>
     2e0:	mov	x25, xzr
     2e4:	add	x26, x21, #0x18
     2e8:	mov	x0, x19
     2ec:	mov	x1, x25
     2f0:	bl	0 <ctf_lookup_by_symbol>
     2f4:	mov	x27, x0
     2f8:	cmn	x0, #0x1
     2fc:	b.eq	334 <ctf_dump+0x334>  // b.none
     300:	mov	x0, x19
     304:	mov	x1, x25
     308:	bl	0 <ctf_lookup_symbol_name>
     30c:	ldrb	w8, [x0]
     310:	cbz	w8, 354 <ctf_dump+0x354>
     314:	adrp	x1, 0 <ctf_dump>
     318:	mov	x2, x0
     31c:	add	x0, sp, #0x10
     320:	add	x1, x1, #0x0
     324:	mov	x3, x25
     328:	bl	0 <asprintf>
     32c:	tbz	w0, #31, 36c <ctf_dump+0x36c>
     330:	b	8fc <ctf_dump+0x8fc>
     334:	ldr	x0, [x28]
     338:	bl	0 <ctf_errno>
     33c:	sub	w8, w0, #0x406
     340:	cmp	w8, #0x2
     344:	b.cc	3c0 <ctf_dump+0x3c0>  // b.lo, b.ul, b.last
     348:	cmp	w0, #0x3f2
     34c:	b.ne	300 <ctf_dump+0x300>  // b.any
     350:	b	1d4 <ctf_dump+0x1d4>
     354:	adrp	x1, 0 <ctf_dump>
     358:	add	x0, sp, #0x10
     35c:	add	x1, x1, #0x0
     360:	mov	x2, x25
     364:	bl	0 <asprintf>
     368:	tbnz	w0, #31, 8fc <ctf_dump+0x8fc>
     36c:	ldr	x0, [x28]
     370:	mov	w2, #0x1                   	// #1
     374:	mov	x1, x27
     378:	bl	f90 <ctf_dump_format_type>
     37c:	ldr	x8, [sp, #16]
     380:	cbz	x0, 774 <ctf_dump+0x774>
     384:	mov	x27, x0
     388:	mov	x0, x8
     38c:	mov	x1, x27
     390:	bl	0 <ctf_str_append_noerr>
     394:	str	x0, [sp, #16]
     398:	mov	x0, x27
     39c:	bl	0 <free>
     3a0:	ldr	x22, [sp, #16]
     3a4:	mov	w0, #0x18                  	// #24
     3a8:	bl	0 <malloc>
     3ac:	cbz	x0, 3d4 <ctf_dump+0x3d4>
     3b0:	mov	x1, x0
     3b4:	str	x22, [x0, #16]
     3b8:	mov	x0, x26
     3bc:	bl	0 <ctf_list_append>
     3c0:	ldr	x8, [x19, #432]
     3c4:	add	x25, x25, #0x1
     3c8:	cmp	x25, x8
     3cc:	b.cc	3f0 <ctf_dump+0x3f0>  // b.lo, b.ul, b.last
     3d0:	b	4c <ctf_dump+0x4c>
     3d4:	ldr	x0, [x28]
     3d8:	mov	w1, #0xc                   	// #12
     3dc:	bl	0 <ctf_set_errno>
     3e0:	ldr	x8, [x19, #432]
     3e4:	add	x25, x25, #0x1
     3e8:	cmp	x25, x8
     3ec:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     3f0:	ldr	x0, [x28]
     3f4:	b	2ec <ctf_dump+0x2ec>
     3f8:	ldr	x8, [x19, #432]
     3fc:	cbz	x8, 4c <ctf_dump+0x4c>
     400:	mov	x25, xzr
     404:	add	x8, x21, #0x18
     408:	mov	x0, x19
     40c:	str	x8, [sp]
     410:	add	x2, sp, #0x10
     414:	mov	x1, x25
     418:	bl	0 <ctf_func_info>
     41c:	mov	w26, w0
     420:	cmn	w0, #0x1
     424:	b.eq	490 <ctf_dump+0x490>  // b.none
     428:	ldr	w0, [sp, #24]
     42c:	mov	w1, #0x8                   	// #8
     430:	bl	0 <calloc>
     434:	cbz	x0, 85c <ctf_dump+0x85c>
     438:	mov	x27, x0
     43c:	ldr	x0, [x28]
     440:	sxtw	x1, w26
     444:	bl	0 <ctf_type_aname>
     448:	cbz	x0, 864 <ctf_dump+0x864>
     44c:	adrp	x1, 0 <ctf_dump>
     450:	add	x1, x1, #0x0
     454:	bl	0 <ctf_str_append_noerr>
     458:	mov	x26, x0
     45c:	mov	x0, x19
     460:	mov	x1, x25
     464:	bl	0 <ctf_lookup_symbol_name>
     468:	ldrb	w8, [x0]
     46c:	cbz	w8, 4b0 <ctf_dump+0x4b0>
     470:	adrp	x1, 0 <ctf_dump>
     474:	mov	x2, x0
     478:	sub	x0, x29, #0x8
     47c:	add	x1, x1, #0x0
     480:	mov	x3, x25
     484:	bl	0 <asprintf>
     488:	tbz	w0, #31, 4c8 <ctf_dump+0x4c8>
     48c:	b	8ec <ctf_dump+0x8ec>
     490:	ldr	x0, [x28]
     494:	bl	0 <ctf_errno>
     498:	sub	w8, w0, #0x404
     49c:	cmp	w8, #0x3
     4a0:	b.cc	5e8 <ctf_dump+0x5e8>  // b.lo, b.ul, b.last
     4a4:	cmp	w0, #0x3f2
     4a8:	b.ne	428 <ctf_dump+0x428>  // b.any
     4ac:	b	1d4 <ctf_dump+0x1d4>
     4b0:	adrp	x1, 0 <ctf_dump>
     4b4:	sub	x0, x29, #0x8
     4b8:	add	x1, x1, #0x0
     4bc:	mov	x2, x25
     4c0:	bl	0 <asprintf>
     4c4:	tbnz	w0, #31, 8ec <ctf_dump+0x8ec>
     4c8:	ldur	x1, [x29, #-8]
     4cc:	mov	x0, x26
     4d0:	bl	0 <ctf_str_append_noerr>
     4d4:	adrp	x1, 0 <ctf_dump>
     4d8:	add	x1, x1, #0x0
     4dc:	bl	0 <ctf_str_append_noerr>
     4e0:	ldur	x8, [x29, #-8]
     4e4:	mov	x26, x0
     4e8:	mov	x0, x8
     4ec:	bl	0 <free>
     4f0:	ldr	x0, [x28]
     4f4:	ldr	w2, [sp, #24]
     4f8:	mov	x1, x25
     4fc:	mov	x3, x27
     500:	bl	0 <ctf_func_args>
     504:	tbnz	w0, #31, 98c <ctf_dump+0x98c>
     508:	ldr	w8, [sp, #24]
     50c:	cbz	w8, 584 <ctf_dump+0x584>
     510:	mov	x22, xzr
     514:	b	544 <ctf_dump+0x544>
     518:	adrp	x1, 0 <ctf_dump>
     51c:	mov	x0, x26
     520:	add	x1, x1, #0x0
     524:	bl	0 <ctf_str_append_noerr>
     528:	mov	x26, x0
     52c:	ldur	x0, [x29, #-8]
     530:	bl	0 <free>
     534:	ldr	w8, [sp, #24]
     538:	add	x22, x22, #0x1
     53c:	cmp	x22, x8
     540:	b.cs	584 <ctf_dump+0x584>  // b.hs, b.nlast
     544:	ldr	x0, [x28]
     548:	ldr	x1, [x27, x22, lsl #3]
     54c:	bl	0 <ctf_type_aname>
     550:	stur	x0, [x29, #-8]
     554:	cbz	x0, 6c4 <ctf_dump+0x6c4>
     558:	mov	x1, x0
     55c:	mov	x0, x26
     560:	bl	0 <ctf_str_append_noerr>
     564:	ldr	w8, [sp, #24]
     568:	mov	x26, x0
     56c:	sub	w8, w8, #0x1
     570:	cmp	x22, x8
     574:	b.cc	518 <ctf_dump+0x518>  // b.lo, b.ul, b.last
     578:	ldrb	w8, [sp, #28]
     57c:	tbnz	w8, #0, 518 <ctf_dump+0x518>
     580:	b	52c <ctf_dump+0x52c>
     584:	ldrb	w8, [sp, #28]
     588:	tbz	w8, #0, 5a0 <ctf_dump+0x5a0>
     58c:	adrp	x1, 0 <ctf_dump>
     590:	mov	x0, x26
     594:	add	x1, x1, #0x0
     598:	bl	0 <ctf_str_append_noerr>
     59c:	mov	x26, x0
     5a0:	adrp	x1, 0 <ctf_dump>
     5a4:	mov	x0, x26
     5a8:	add	x1, x1, #0x0
     5ac:	bl	0 <ctf_str_append_noerr>
     5b0:	mov	x26, x0
     5b4:	mov	x0, x27
     5b8:	bl	0 <free>
     5bc:	mov	w0, #0x18                  	// #24
     5c0:	bl	0 <malloc>
     5c4:	cbz	x0, 5dc <ctf_dump+0x5dc>
     5c8:	mov	x1, x0
     5cc:	str	x26, [x0, #16]
     5d0:	ldr	x0, [sp]
     5d4:	bl	0 <ctf_list_append>
     5d8:	b	5e8 <ctf_dump+0x5e8>
     5dc:	ldr	x0, [x28]
     5e0:	mov	w1, #0xc                   	// #12
     5e4:	bl	0 <ctf_set_errno>
     5e8:	ldr	x8, [x19, #432]
     5ec:	add	x25, x25, #0x1
     5f0:	cmp	x25, x8
     5f4:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     5f8:	ldr	x0, [x28]
     5fc:	b	410 <ctf_dump+0x410>
     600:	adrp	x1, 0 <ctf_dump>
     604:	add	x1, x1, #0x0
     608:	mov	x0, x19
     60c:	mov	x2, x21
     610:	bl	0 <ctf_variable_iter>
     614:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     618:	b	1d4 <ctf_dump+0x1d4>
     61c:	adrp	x1, 0 <ctf_dump>
     620:	add	x1, x1, #0x0
     624:	mov	x0, x19
     628:	mov	x2, x21
     62c:	bl	0 <ctf_type_iter_all>
     630:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     634:	b	1d4 <ctf_dump+0x1d4>
     638:	ldr	x8, [x19, #344]
     63c:	cmp	x8, #0x1
     640:	b.lt	4c <ctf_dump+0x4c>  // b.tstop
     644:	ldr	x8, [x19, #336]
     648:	adrp	x26, 0 <ctf_dump>
     64c:	add	x25, x21, #0x18
     650:	add	x26, x26, #0x0
     654:	mov	x27, x8
     658:	b	68c <ctf_dump+0x68c>
     65c:	mov	x1, x0
     660:	str	x22, [x0, #16]
     664:	mov	x0, x25
     668:	bl	0 <ctf_list_append>
     66c:	mov	x0, x27
     670:	bl	0 <strlen>
     674:	ldp	x8, x9, [x19, #336]
     678:	add	x10, x0, x27
     67c:	add	x27, x10, #0x1
     680:	add	x9, x8, x9
     684:	cmp	x27, x9
     688:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     68c:	sub	x2, x27, x8
     690:	add	x0, sp, #0x10
     694:	mov	x1, x26
     698:	mov	x3, x27
     69c:	bl	0 <asprintf>
     6a0:	tbnz	w0, #31, c6c <ctf_dump+0xc6c>
     6a4:	ldr	x22, [sp, #16]
     6a8:	mov	w0, #0x18                  	// #24
     6ac:	bl	0 <malloc>
     6b0:	cbnz	x0, 65c <ctf_dump+0x65c>
     6b4:	ldr	x0, [x28]
     6b8:	mov	w1, #0xc                   	// #12
     6bc:	bl	0 <ctf_set_errno>
     6c0:	b	66c <ctf_dump+0x66c>
     6c4:	adrp	x22, 0 <ctf_dump>
     6c8:	add	x22, x22, #0x0
     6cc:	ldr	x0, [x28]
     6d0:	bl	0 <ctf_errno>
     6d4:	bl	0 <ctf_errmsg>
     6d8:	mov	x3, x0
     6dc:	adrp	x0, 0 <ctf_dump>
     6e0:	add	x0, x0, #0x0
     6e4:	mov	x1, x22
     6e8:	mov	x2, x25
     6ec:	bl	0 <ctf_dprintf>
     6f0:	mov	x0, x27
     6f4:	bl	0 <free>
     6f8:	mov	x0, x26
     6fc:	bl	0 <free>
     700:	b	1d4 <ctf_dump+0x1d4>
     704:	ldr	x0, [x28]
     708:	mov	w1, #0xc                   	// #12
     70c:	bl	0 <ctf_set_errno>
     710:	ldrb	w2, [x25, #2]
     714:	cmp	x2, #0x4
     718:	b.hi	728 <ctf_dump+0x728>  // b.pmore
     71c:	add	x8, sp, #0x10
     720:	ldr	x8, [x8, x2, lsl #3]
     724:	b	72c <ctf_dump+0x72c>
     728:	mov	x8, xzr
     72c:	adrp	x9, 0 <ctf_dump>
     730:	add	x9, x9, #0x0
     734:	cmp	x8, #0x0
     738:	adrp	x1, 0 <ctf_dump>
     73c:	csel	x3, x9, x8, eq  // eq = none
     740:	add	x1, x1, #0x0
     744:	sub	x0, x29, #0x10
     748:	bl	0 <asprintf>
     74c:	tbnz	w0, #31, c6c <ctf_dump+0xc6c>
     750:	ldur	x22, [x29, #-16]
     754:	mov	w0, #0x18                  	// #24
     758:	bl	0 <malloc>
     75c:	cbz	x0, 780 <ctf_dump+0x780>
     760:	mov	x1, x0
     764:	str	x22, [x0, #16]
     768:	add	x0, x21, #0x18
     76c:	bl	0 <ctf_list_append>
     770:	b	78c <ctf_dump+0x78c>
     774:	mov	x0, x8
     778:	bl	0 <free>
     77c:	b	1d4 <ctf_dump+0x1d4>
     780:	ldr	x0, [x28]
     784:	mov	w1, #0xc                   	// #12
     788:	bl	0 <ctf_set_errno>
     78c:	ldrb	w2, [x19, #16]
     790:	cbz	w2, 7f0 <ctf_dump+0x7f0>
     794:	adrp	x8, 0 <ctf_dump>
     798:	adrp	x9, 0 <ctf_dump>
     79c:	add	x8, x8, #0x0
     7a0:	add	x9, x9, #0x0
     7a4:	tst	w2, #0x1
     7a8:	adrp	x1, 0 <ctf_dump>
     7ac:	csel	x3, x9, x8, eq  // eq = none
     7b0:	add	x1, x1, #0x0
     7b4:	sub	x0, x29, #0x10
     7b8:	bl	0 <asprintf>
     7bc:	tbnz	w0, #31, c6c <ctf_dump+0xc6c>
     7c0:	ldur	x22, [x29, #-16]
     7c4:	mov	w0, #0x18                  	// #24
     7c8:	bl	0 <malloc>
     7cc:	cbz	x0, 7e4 <ctf_dump+0x7e4>
     7d0:	mov	x1, x0
     7d4:	str	x22, [x0, #16]
     7d8:	add	x0, x21, #0x18
     7dc:	bl	0 <ctf_list_append>
     7e0:	b	7f0 <ctf_dump+0x7f0>
     7e4:	ldr	x0, [x28]
     7e8:	mov	w1, #0xc                   	// #12
     7ec:	bl	0 <ctf_set_errno>
     7f0:	ldr	w1, [x25, #4]
     7f4:	cbz	w1, 880 <ctf_dump+0x880>
     7f8:	mov	x0, x19
     7fc:	bl	0 <ctf_strptr>
     800:	adrp	x1, 0 <ctf_dump>
     804:	adrp	x2, 0 <ctf_dump>
     808:	mov	x3, x0
     80c:	add	x1, x1, #0x0
     810:	add	x2, x2, #0x0
     814:	sub	x0, x29, #0x8
     818:	bl	0 <asprintf>
     81c:	tbnz	w0, #31, 844 <ctf_dump+0x844>
     820:	ldur	x22, [x29, #-8]
     824:	mov	w0, #0x18                  	// #24
     828:	bl	0 <malloc>
     82c:	cbz	x0, 874 <ctf_dump+0x874>
     830:	mov	x1, x0
     834:	str	x22, [x0, #16]
     838:	add	x0, x21, #0x18
     83c:	bl	0 <ctf_list_append>
     840:	b	880 <ctf_dump+0x880>
     844:	bl	0 <__errno_location>
     848:	ldr	w1, [x0]
     84c:	mov	x0, x19
     850:	bl	0 <ctf_set_errno>
     854:	tbz	w0, #31, 880 <ctf_dump+0x880>
     858:	b	c6c <ctf_dump+0xc6c>
     85c:	mov	w1, #0xc                   	// #12
     860:	b	904 <ctf_dump+0x904>
     864:	adrp	x22, 0 <ctf_dump>
     868:	mov	x26, xzr
     86c:	add	x22, x22, #0x0
     870:	b	6cc <ctf_dump+0x6cc>
     874:	ldr	x0, [x28]
     878:	mov	w1, #0xc                   	// #12
     87c:	bl	0 <ctf_set_errno>
     880:	ldr	w1, [x25, #8]
     884:	cbz	w1, 920 <ctf_dump+0x920>
     888:	mov	x0, x19
     88c:	bl	0 <ctf_strptr>
     890:	adrp	x1, 0 <ctf_dump>
     894:	adrp	x2, 0 <ctf_dump>
     898:	mov	x3, x0
     89c:	add	x1, x1, #0x0
     8a0:	add	x2, x2, #0x0
     8a4:	sub	x0, x29, #0x8
     8a8:	bl	0 <asprintf>
     8ac:	tbnz	w0, #31, 8d4 <ctf_dump+0x8d4>
     8b0:	ldur	x22, [x29, #-8]
     8b4:	mov	w0, #0x18                  	// #24
     8b8:	bl	0 <malloc>
     8bc:	cbz	x0, 914 <ctf_dump+0x914>
     8c0:	mov	x1, x0
     8c4:	str	x22, [x0, #16]
     8c8:	add	x0, x21, #0x18
     8cc:	bl	0 <ctf_list_append>
     8d0:	b	920 <ctf_dump+0x920>
     8d4:	bl	0 <__errno_location>
     8d8:	ldr	w1, [x0]
     8dc:	mov	x0, x19
     8e0:	bl	0 <ctf_set_errno>
     8e4:	tbz	w0, #31, 920 <ctf_dump+0x920>
     8e8:	b	c6c <ctf_dump+0xc6c>
     8ec:	mov	x0, x27
     8f0:	bl	0 <free>
     8f4:	mov	x0, x26
     8f8:	bl	0 <free>
     8fc:	bl	0 <__errno_location>
     900:	ldr	w1, [x0]
     904:	mov	x0, x19
     908:	bl	0 <ctf_set_errno>
     90c:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     910:	b	1d4 <ctf_dump+0x1d4>
     914:	ldr	x0, [x28]
     918:	mov	w1, #0xc                   	// #12
     91c:	bl	0 <ctf_set_errno>
     920:	ldr	w1, [x25, #12]
     924:	cbz	w1, 9a4 <ctf_dump+0x9a4>
     928:	mov	x0, x19
     92c:	bl	0 <ctf_strptr>
     930:	adrp	x1, 0 <ctf_dump>
     934:	adrp	x2, 0 <ctf_dump>
     938:	mov	x3, x0
     93c:	add	x1, x1, #0x0
     940:	add	x2, x2, #0x0
     944:	sub	x0, x29, #0x8
     948:	bl	0 <asprintf>
     94c:	tbnz	w0, #31, 974 <ctf_dump+0x974>
     950:	ldur	x22, [x29, #-8]
     954:	mov	w0, #0x18                  	// #24
     958:	bl	0 <malloc>
     95c:	cbz	x0, 998 <ctf_dump+0x998>
     960:	mov	x1, x0
     964:	str	x22, [x0, #16]
     968:	add	x0, x21, #0x18
     96c:	bl	0 <ctf_list_append>
     970:	b	9a4 <ctf_dump+0x9a4>
     974:	bl	0 <__errno_location>
     978:	ldr	w1, [x0]
     97c:	mov	x0, x19
     980:	bl	0 <ctf_set_errno>
     984:	tbz	w0, #31, 9a4 <ctf_dump+0x9a4>
     988:	b	c6c <ctf_dump+0xc6c>
     98c:	adrp	x22, 0 <ctf_dump>
     990:	add	x22, x22, #0x0
     994:	b	6cc <ctf_dump+0x6cc>
     998:	ldr	x0, [x28]
     99c:	mov	w1, #0xc                   	// #12
     9a0:	bl	0 <ctf_set_errno>
     9a4:	ldp	w3, w9, [x25, #16]
     9a8:	subs	w8, w9, w3
     9ac:	b.eq	a1c <ctf_dump+0xa1c>  // b.none
     9b0:	adrp	x1, 0 <ctf_dump>
     9b4:	adrp	x2, 0 <ctf_dump>
     9b8:	sub	w4, w9, #0x1
     9bc:	mov	w5, w8
     9c0:	add	x1, x1, #0x0
     9c4:	add	x2, x2, #0x0
     9c8:	sub	x0, x29, #0x8
     9cc:	bl	0 <asprintf>
     9d0:	tbnz	w0, #31, 9f8 <ctf_dump+0x9f8>
     9d4:	ldur	x22, [x29, #-8]
     9d8:	mov	w0, #0x18                  	// #24
     9dc:	bl	0 <malloc>
     9e0:	cbz	x0, a10 <ctf_dump+0xa10>
     9e4:	mov	x1, x0
     9e8:	str	x22, [x0, #16]
     9ec:	add	x0, x21, #0x18
     9f0:	bl	0 <ctf_list_append>
     9f4:	b	a1c <ctf_dump+0xa1c>
     9f8:	bl	0 <__errno_location>
     9fc:	ldr	w1, [x0]
     a00:	mov	x0, x19
     a04:	bl	0 <ctf_set_errno>
     a08:	tbz	w0, #31, a1c <ctf_dump+0xa1c>
     a0c:	b	c6c <ctf_dump+0xc6c>
     a10:	ldr	x0, [x28]
     a14:	mov	w1, #0xc                   	// #12
     a18:	bl	0 <ctf_set_errno>
     a1c:	ldp	w3, w9, [x25, #20]
     a20:	subs	w8, w9, w3
     a24:	b.eq	a94 <ctf_dump+0xa94>  // b.none
     a28:	adrp	x1, 0 <ctf_dump>
     a2c:	adrp	x2, 0 <ctf_dump>
     a30:	sub	w4, w9, #0x1
     a34:	mov	w5, w8
     a38:	add	x1, x1, #0x0
     a3c:	add	x2, x2, #0x0
     a40:	sub	x0, x29, #0x8
     a44:	bl	0 <asprintf>
     a48:	tbnz	w0, #31, a70 <ctf_dump+0xa70>
     a4c:	ldur	x22, [x29, #-8]
     a50:	mov	w0, #0x18                  	// #24
     a54:	bl	0 <malloc>
     a58:	cbz	x0, a88 <ctf_dump+0xa88>
     a5c:	mov	x1, x0
     a60:	str	x22, [x0, #16]
     a64:	add	x0, x21, #0x18
     a68:	bl	0 <ctf_list_append>
     a6c:	b	a94 <ctf_dump+0xa94>
     a70:	bl	0 <__errno_location>
     a74:	ldr	w1, [x0]
     a78:	mov	x0, x19
     a7c:	bl	0 <ctf_set_errno>
     a80:	tbz	w0, #31, a94 <ctf_dump+0xa94>
     a84:	b	c6c <ctf_dump+0xc6c>
     a88:	ldr	x0, [x28]
     a8c:	mov	w1, #0xc                   	// #12
     a90:	bl	0 <ctf_set_errno>
     a94:	ldr	w3, [x25, #24]
     a98:	ldr	w9, [x25, #36]
     a9c:	subs	w8, w9, w3
     aa0:	b.eq	b10 <ctf_dump+0xb10>  // b.none
     aa4:	adrp	x1, 0 <ctf_dump>
     aa8:	adrp	x2, 0 <ctf_dump>
     aac:	sub	w4, w9, #0x1
     ab0:	mov	w5, w8
     ab4:	add	x1, x1, #0x0
     ab8:	add	x2, x2, #0x0
     abc:	sub	x0, x29, #0x8
     ac0:	bl	0 <asprintf>
     ac4:	tbnz	w0, #31, aec <ctf_dump+0xaec>
     ac8:	ldur	x22, [x29, #-8]
     acc:	mov	w0, #0x18                  	// #24
     ad0:	bl	0 <malloc>
     ad4:	cbz	x0, b04 <ctf_dump+0xb04>
     ad8:	mov	x1, x0
     adc:	str	x22, [x0, #16]
     ae0:	add	x0, x21, #0x18
     ae4:	bl	0 <ctf_list_append>
     ae8:	b	b10 <ctf_dump+0xb10>
     aec:	bl	0 <__errno_location>
     af0:	ldr	w1, [x0]
     af4:	mov	x0, x19
     af8:	bl	0 <ctf_set_errno>
     afc:	tbz	w0, #31, b10 <ctf_dump+0xb10>
     b00:	b	c6c <ctf_dump+0xc6c>
     b04:	ldr	x0, [x28]
     b08:	mov	w1, #0xc                   	// #12
     b0c:	bl	0 <ctf_set_errno>
     b10:	ldp	w3, w9, [x25, #36]
     b14:	subs	w8, w9, w3
     b18:	b.eq	b88 <ctf_dump+0xb88>  // b.none
     b1c:	adrp	x1, 0 <ctf_dump>
     b20:	adrp	x2, 0 <ctf_dump>
     b24:	sub	w4, w9, #0x1
     b28:	mov	w5, w8
     b2c:	add	x1, x1, #0x0
     b30:	add	x2, x2, #0x0
     b34:	sub	x0, x29, #0x8
     b38:	bl	0 <asprintf>
     b3c:	tbnz	w0, #31, b64 <ctf_dump+0xb64>
     b40:	ldur	x22, [x29, #-8]
     b44:	mov	w0, #0x18                  	// #24
     b48:	bl	0 <malloc>
     b4c:	cbz	x0, b7c <ctf_dump+0xb7c>
     b50:	mov	x1, x0
     b54:	str	x22, [x0, #16]
     b58:	add	x0, x21, #0x18
     b5c:	bl	0 <ctf_list_append>
     b60:	b	b88 <ctf_dump+0xb88>
     b64:	bl	0 <__errno_location>
     b68:	ldr	w1, [x0]
     b6c:	mov	x0, x19
     b70:	bl	0 <ctf_set_errno>
     b74:	tbz	w0, #31, b88 <ctf_dump+0xb88>
     b78:	b	c6c <ctf_dump+0xc6c>
     b7c:	ldr	x0, [x28]
     b80:	mov	w1, #0xc                   	// #12
     b84:	bl	0 <ctf_set_errno>
     b88:	ldp	w3, w9, [x25, #40]
     b8c:	subs	w8, w9, w3
     b90:	b.eq	c00 <ctf_dump+0xc00>  // b.none
     b94:	adrp	x1, 0 <ctf_dump>
     b98:	adrp	x2, 0 <ctf_dump>
     b9c:	sub	w4, w9, #0x1
     ba0:	mov	w5, w8
     ba4:	add	x1, x1, #0x0
     ba8:	add	x2, x2, #0x0
     bac:	sub	x0, x29, #0x8
     bb0:	bl	0 <asprintf>
     bb4:	tbnz	w0, #31, bdc <ctf_dump+0xbdc>
     bb8:	ldur	x22, [x29, #-8]
     bbc:	mov	w0, #0x18                  	// #24
     bc0:	bl	0 <malloc>
     bc4:	cbz	x0, bf4 <ctf_dump+0xbf4>
     bc8:	mov	x1, x0
     bcc:	str	x22, [x0, #16]
     bd0:	add	x0, x21, #0x18
     bd4:	bl	0 <ctf_list_append>
     bd8:	b	c00 <ctf_dump+0xc00>
     bdc:	bl	0 <__errno_location>
     be0:	ldr	w1, [x0]
     be4:	mov	x0, x19
     be8:	bl	0 <ctf_set_errno>
     bec:	tbz	w0, #31, c00 <ctf_dump+0xc00>
     bf0:	b	c6c <ctf_dump+0xc6c>
     bf4:	ldr	x0, [x28]
     bf8:	mov	w1, #0xc                   	// #12
     bfc:	bl	0 <ctf_set_errno>
     c00:	ldr	w9, [x25, #48]
     c04:	adds	w8, w9, #0x1
     c08:	b.cs	4c <ctf_dump+0x4c>  // b.hs, b.nlast
     c0c:	ldr	w3, [x25, #44]
     c10:	adrp	x1, 0 <ctf_dump>
     c14:	adrp	x2, 0 <ctf_dump>
     c18:	mov	w5, w8
     c1c:	add	w4, w9, w3
     c20:	add	x1, x1, #0x0
     c24:	add	x2, x2, #0x0
     c28:	sub	x0, x29, #0x8
     c2c:	bl	0 <asprintf>
     c30:	tbnz	w0, #31, c58 <ctf_dump+0xc58>
     c34:	ldur	x22, [x29, #-8]
     c38:	mov	w0, #0x18                  	// #24
     c3c:	bl	0 <malloc>
     c40:	cbz	x0, c80 <ctf_dump+0xc80>
     c44:	mov	x1, x0
     c48:	str	x22, [x0, #16]
     c4c:	add	x0, x21, #0x18
     c50:	bl	0 <ctf_list_append>
     c54:	b	4c <ctf_dump+0x4c>
     c58:	bl	0 <__errno_location>
     c5c:	ldr	w1, [x0]
     c60:	mov	x0, x19
     c64:	bl	0 <ctf_set_errno>
     c68:	tbz	w0, #31, 4c <ctf_dump+0x4c>
     c6c:	bl	0 <__errno_location>
     c70:	ldr	w1, [x0]
     c74:	mov	x0, x19
     c78:	bl	0 <ctf_set_errno>
     c7c:	b	4c <ctf_dump+0x4c>
     c80:	ldr	x0, [x28]
     c84:	mov	w1, #0xc                   	// #12
     c88:	bl	0 <ctf_set_errno>
     c8c:	b	4c <ctf_dump+0x4c>

0000000000000c90 <ctf_dump_label>:
     c90:	stp	x29, x30, [sp, #-48]!
     c94:	str	x21, [sp, #16]
     c98:	mov	x29, sp
     c9c:	mov	x21, x1
     ca0:	adrp	x1, 0 <ctf_dump>
     ca4:	stp	x20, x19, [sp, #32]
     ca8:	mov	x19, x2
     cac:	mov	x2, x0
     cb0:	add	x1, x1, #0x0
     cb4:	add	x0, x29, #0x18
     cb8:	bl	0 <asprintf>
     cbc:	ldr	x20, [x19, #8]
     cc0:	tbnz	w0, #31, d1c <ctf_dump_label+0x8c>
     cc4:	ldr	x1, [x21]
     cc8:	mov	w2, #0x1                   	// #1
     ccc:	mov	x0, x20
     cd0:	bl	f90 <ctf_dump_format_type>
     cd4:	ldr	x8, [x29, #24]
     cd8:	cbz	x0, d3c <ctf_dump_label+0xac>
     cdc:	mov	x20, x0
     ce0:	mov	x0, x8
     ce4:	mov	x1, x20
     ce8:	bl	0 <ctf_str_append_noerr>
     cec:	str	x0, [x29, #24]
     cf0:	mov	x0, x20
     cf4:	bl	0 <free>
     cf8:	ldr	x20, [x29, #24]
     cfc:	mov	w0, #0x18                  	// #24
     d00:	bl	0 <malloc>
     d04:	cbz	x0, d58 <ctf_dump_label+0xc8>
     d08:	mov	x1, x0
     d0c:	str	x20, [x0, #16]
     d10:	add	x0, x19, #0x18
     d14:	bl	0 <ctf_list_append>
     d18:	b	d64 <ctf_dump_label+0xd4>
     d1c:	bl	0 <__errno_location>
     d20:	ldr	w1, [x0]
     d24:	mov	x0, x20
     d28:	bl	0 <ctf_set_errno>
     d2c:	ldp	x20, x19, [sp, #32]
     d30:	ldr	x21, [sp, #16]
     d34:	ldp	x29, x30, [sp], #48
     d38:	ret
     d3c:	mov	x0, x8
     d40:	bl	0 <free>
     d44:	mov	w0, #0xffffffff            	// #-1
     d48:	ldp	x20, x19, [sp, #32]
     d4c:	ldr	x21, [sp, #16]
     d50:	ldp	x29, x30, [sp], #48
     d54:	ret
     d58:	ldr	x0, [x19, #8]
     d5c:	mov	w1, #0xc                   	// #12
     d60:	bl	0 <ctf_set_errno>
     d64:	mov	w0, wzr
     d68:	ldp	x20, x19, [sp, #32]
     d6c:	ldr	x21, [sp, #16]
     d70:	ldp	x29, x30, [sp], #48
     d74:	ret

0000000000000d78 <ctf_dump_var>:
     d78:	stp	x29, x30, [sp, #-48]!
     d7c:	stp	x20, x19, [sp, #32]
     d80:	mov	x29, sp
     d84:	mov	x20, x1
     d88:	adrp	x1, 0 <ctf_dump>
     d8c:	mov	x19, x2
     d90:	mov	x2, x0
     d94:	add	x1, x1, #0x0
     d98:	add	x0, x29, #0x18
     d9c:	str	x21, [sp, #16]
     da0:	bl	0 <asprintf>
     da4:	ldr	x21, [x19, #8]
     da8:	tbnz	w0, #31, e04 <ctf_dump_var+0x8c>
     dac:	mov	w2, #0x1                   	// #1
     db0:	mov	x0, x21
     db4:	mov	x1, x20
     db8:	bl	f90 <ctf_dump_format_type>
     dbc:	ldr	x8, [x29, #24]
     dc0:	cbz	x0, e24 <ctf_dump_var+0xac>
     dc4:	mov	x20, x0
     dc8:	mov	x0, x8
     dcc:	mov	x1, x20
     dd0:	bl	0 <ctf_str_append_noerr>
     dd4:	str	x0, [x29, #24]
     dd8:	mov	x0, x20
     ddc:	bl	0 <free>
     de0:	ldr	x20, [x29, #24]
     de4:	mov	w0, #0x18                  	// #24
     de8:	bl	0 <malloc>
     dec:	cbz	x0, e40 <ctf_dump_var+0xc8>
     df0:	mov	x1, x0
     df4:	str	x20, [x0, #16]
     df8:	add	x0, x19, #0x18
     dfc:	bl	0 <ctf_list_append>
     e00:	b	e4c <ctf_dump_var+0xd4>
     e04:	bl	0 <__errno_location>
     e08:	ldr	w1, [x0]
     e0c:	mov	x0, x21
     e10:	bl	0 <ctf_set_errno>
     e14:	ldp	x20, x19, [sp, #32]
     e18:	ldr	x21, [sp, #16]
     e1c:	ldp	x29, x30, [sp], #48
     e20:	ret
     e24:	mov	x0, x8
     e28:	bl	0 <free>
     e2c:	mov	w0, #0xffffffff            	// #-1
     e30:	ldp	x20, x19, [sp, #32]
     e34:	ldr	x21, [sp, #16]
     e38:	ldp	x29, x30, [sp], #48
     e3c:	ret
     e40:	ldr	x0, [x19, #8]
     e44:	mov	w1, #0xc                   	// #12
     e48:	bl	0 <ctf_set_errno>
     e4c:	mov	w0, wzr
     e50:	ldp	x20, x19, [sp, #32]
     e54:	ldr	x21, [sp, #16]
     e58:	ldp	x29, x30, [sp], #48
     e5c:	ret

0000000000000e60 <ctf_dump_type>:
     e60:	sub	sp, sp, #0x40
     e64:	stp	x29, x30, [sp, #16]
     e68:	stp	x20, x19, [sp, #48]
     e6c:	mov	x19, x2
     e70:	mov	x20, x0
     e74:	ldr	x0, [x19, #8]
     e78:	add	x29, sp, #0x10
     e7c:	mov	w2, w1
     e80:	add	x8, x29, #0x18
     e84:	mov	x1, x20
     e88:	str	x21, [sp, #32]
     e8c:	stp	x8, x0, [sp]
     e90:	bl	f90 <ctf_dump_format_type>
     e94:	str	x0, [x29, #24]
     e98:	cbz	x0, eec <ctf_dump_type+0x8c>
     e9c:	adrp	x1, 0 <ctf_dump>
     ea0:	add	x1, x1, #0x0
     ea4:	bl	0 <ctf_str_append_noerr>
     ea8:	str	x0, [x29, #24]
     eac:	ldr	x0, [x19, #8]
     eb0:	adrp	x2, 0 <ctf_dump>
     eb4:	add	x2, x2, #0x0
     eb8:	mov	x3, sp
     ebc:	mov	x1, x20
     ec0:	bl	0 <ctf_type_visit>
     ec4:	tbnz	w0, #31, f28 <ctf_dump_type+0xc8>
     ec8:	ldr	x20, [x29, #24]
     ecc:	mov	x0, x20
     ed0:	bl	0 <strlen>
     ed4:	sub	x8, x0, #0x1
     ed8:	ldrb	w9, [x20, x8]
     edc:	cmp	w9, #0xa
     ee0:	b.ne	f40 <ctf_dump_type+0xe0>  // b.any
     ee4:	strb	wzr, [x20, x8]
     ee8:	b	f3c <ctf_dump_type+0xdc>
     eec:	adrp	x21, 0 <ctf_dump>
     ef0:	add	x21, x21, #0x0
     ef4:	ldr	x0, [x19, #8]
     ef8:	bl	0 <ctf_errno>
     efc:	bl	0 <ctf_errmsg>
     f00:	mov	x3, x0
     f04:	adrp	x0, 0 <ctf_dump>
     f08:	add	x0, x0, #0x0
     f0c:	mov	x1, x21
     f10:	mov	x2, x20
     f14:	bl	0 <ctf_dprintf>
     f18:	ldr	x0, [x29, #24]
     f1c:	bl	0 <free>
     f20:	mov	w0, #0xffffffff            	// #-1
     f24:	b	f70 <ctf_dump_type+0x110>
     f28:	cbz	x20, f3c <ctf_dump_type+0xdc>
     f2c:	ldr	x0, [x19, #8]
     f30:	bl	0 <ctf_errno>
     f34:	cmp	w0, #0x41b
     f38:	b.ne	f84 <ctf_dump_type+0x124>  // b.any
     f3c:	ldr	x20, [x29, #24]
     f40:	mov	w0, #0x18                  	// #24
     f44:	bl	0 <malloc>
     f48:	cbz	x0, f60 <ctf_dump_type+0x100>
     f4c:	mov	x1, x0
     f50:	str	x20, [x0, #16]
     f54:	add	x0, x19, #0x18
     f58:	bl	0 <ctf_list_append>
     f5c:	b	f6c <ctf_dump_type+0x10c>
     f60:	ldr	x0, [x19, #8]
     f64:	mov	w1, #0xc                   	// #12
     f68:	bl	0 <ctf_set_errno>
     f6c:	mov	w0, wzr
     f70:	ldp	x20, x19, [sp, #48]
     f74:	ldr	x21, [sp, #32]
     f78:	ldp	x29, x30, [sp, #16]
     f7c:	add	sp, sp, #0x40
     f80:	ret
     f84:	adrp	x21, 0 <ctf_dump>
     f88:	add	x21, x21, #0x0
     f8c:	b	ef4 <ctf_dump_type+0x94>

0000000000000f90 <ctf_dump_format_type>:
     f90:	sub	sp, sp, #0x80
     f94:	adrp	x8, 0 <ctf_dump>
     f98:	adrp	x9, 0 <ctf_dump>
     f9c:	adrp	x10, 0 <ctf_dump>
     fa0:	stp	x29, x30, [sp, #32]
     fa4:	add	x29, sp, #0x20
     fa8:	add	x8, x8, #0x0
     fac:	add	x9, x9, #0x0
     fb0:	cmp	w2, #0x0
     fb4:	add	x10, x10, #0x0
     fb8:	stp	x28, x27, [sp, #48]
     fbc:	stp	x26, x25, [sp, #64]
     fc0:	stp	x24, x23, [sp, #80]
     fc4:	stp	x22, x21, [sp, #96]
     fc8:	stp	x20, x19, [sp, #112]
     fcc:	mov	x20, x1
     fd0:	mov	x19, x0
     fd4:	stur	xzr, [x29, #-8]
     fd8:	csel	x22, x9, x8, eq  // eq = none
     fdc:	csel	x23, x10, x8, eq  // eq = none
     fe0:	bl	0 <ctf_type_aname>
     fe4:	cbz	x0, 1140 <ctf_dump_format_type+0x1b0>
     fe8:	adrp	x25, 0 <ctf_dump>
     fec:	mov	x27, x0
     ff0:	mov	x21, xzr
     ff4:	add	x25, x25, #0x0
     ff8:	mov	w26, #0x1                   	// #1
     ffc:	mov	w24, #0x106                 	// #262
    1000:	mov	x0, x19
    1004:	mov	x1, x20
    1008:	bl	0 <ctf_type_kind>
    100c:	cmp	w0, #0x8
    1010:	b.hi	1048 <ctf_dump_format_type+0xb8>  // b.pmore
    1014:	lsl	w8, w26, w0
    1018:	tst	w8, w24
    101c:	b.eq	1048 <ctf_dump_format_type+0xb8>  // b.none
    1020:	mov	x0, x19
    1024:	mov	x1, x20
    1028:	bl	0 <ctf_type_reference>
    102c:	cmn	x0, #0x1
    1030:	b.eq	1048 <ctf_dump_format_type+0xb8>  // b.none
    1034:	add	x2, sp, #0x8
    1038:	mov	x0, x19
    103c:	mov	x1, x20
    1040:	bl	0 <ctf_type_encoding>
    1044:	cbz	w0, 10f8 <ctf_dump_format_type+0x168>
    1048:	ldrb	w8, [x27]
    104c:	mov	x0, x19
    1050:	mov	x1, x20
    1054:	cmp	w8, #0x0
    1058:	adrp	x8, 0 <ctf_dump>
    105c:	add	x8, x8, #0x0
    1060:	csel	x28, x8, x27, eq  // eq = none
    1064:	bl	0 <ctf_type_size>
    1068:	adrp	x1, 0 <ctf_dump>
    106c:	mov	x5, x0
    1070:	sub	x0, x29, #0x8
    1074:	add	x1, x1, #0x0
    1078:	mov	x2, x22
    107c:	mov	x3, x20
    1080:	mov	x4, x28
    1084:	mov	x6, x23
    1088:	bl	0 <asprintf>
    108c:	tbnz	w0, #31, 112c <ctf_dump_format_type+0x19c>
    1090:	mov	x0, x27
    1094:	bl	0 <free>
    1098:	ldur	x1, [x29, #-8]
    109c:	mov	x0, x21
    10a0:	bl	0 <ctf_str_append_noerr>
    10a4:	ldur	x8, [x29, #-8]
    10a8:	mov	x21, x0
    10ac:	mov	x0, x8
    10b0:	bl	0 <free>
    10b4:	mov	x0, x19
    10b8:	mov	x1, x20
    10bc:	stur	xzr, [x29, #-8]
    10c0:	bl	0 <ctf_type_reference>
    10c4:	cmn	x0, #0x1
    10c8:	b.eq	1178 <ctf_dump_format_type+0x1e8>  // b.none
    10cc:	mov	x20, x0
    10d0:	mov	x0, x21
    10d4:	mov	x1, x25
    10d8:	bl	0 <ctf_str_append_noerr>
    10dc:	mov	x21, x0
    10e0:	mov	x0, x19
    10e4:	mov	x1, x20
    10e8:	bl	0 <ctf_type_aname>
    10ec:	mov	x27, x0
    10f0:	cbnz	x0, 1000 <ctf_dump_format_type+0x70>
    10f4:	b	1144 <ctf_dump_format_type+0x1b4>
    10f8:	add	x2, sp, #0x8
    10fc:	mov	x0, x19
    1100:	mov	x1, x20
    1104:	bl	0 <ctf_type_encoding>
    1108:	ldp	w4, w5, [sp, #12]
    110c:	adrp	x1, 0 <ctf_dump>
    1110:	sub	x0, x29, #0x8
    1114:	add	x1, x1, #0x0
    1118:	mov	x2, x22
    111c:	mov	x3, x20
    1120:	mov	x6, x23
    1124:	bl	0 <asprintf>
    1128:	tbz	w0, #31, 1090 <ctf_dump_format_type+0x100>
    112c:	bl	0 <__errno_location>
    1130:	ldr	w1, [x0]
    1134:	mov	x0, x19
    1138:	bl	0 <ctf_set_errno>
    113c:	b	1190 <ctf_dump_format_type+0x200>
    1140:	mov	x21, xzr
    1144:	cbz	x20, 1158 <ctf_dump_format_type+0x1c8>
    1148:	mov	x0, x19
    114c:	bl	0 <ctf_errno>
    1150:	cmp	w0, #0x41b
    1154:	b.ne	118c <ctf_dump_format_type+0x1fc>  // b.any
    1158:	adrp	x1, 0 <ctf_dump>
    115c:	add	x1, x1, #0x0
    1160:	mov	x0, x21
    1164:	bl	0 <ctf_str_append_noerr>
    1168:	mov	x21, x0
    116c:	mov	w1, #0x400                 	// #1024
    1170:	mov	x0, x19
    1174:	bl	0 <ctf_set_errno>
    1178:	mov	x0, x19
    117c:	bl	0 <ctf_errno>
    1180:	cmp	w0, #0x400
    1184:	b.ne	11a4 <ctf_dump_format_type+0x214>  // b.any
    1188:	b	11b0 <ctf_dump_format_type+0x220>
    118c:	mov	x27, xzr
    1190:	mov	x0, x27
    1194:	bl	0 <free>
    1198:	mov	x0, x21
    119c:	bl	0 <free>
    11a0:	ldur	x21, [x29, #-8]
    11a4:	mov	x0, x21
    11a8:	bl	0 <free>
    11ac:	mov	x21, xzr
    11b0:	mov	x0, x21
    11b4:	ldp	x20, x19, [sp, #112]
    11b8:	ldp	x22, x21, [sp, #96]
    11bc:	ldp	x24, x23, [sp, #80]
    11c0:	ldp	x26, x25, [sp, #64]
    11c4:	ldp	x28, x27, [sp, #48]
    11c8:	ldp	x29, x30, [sp, #32]
    11cc:	add	sp, sp, #0x80
    11d0:	ret

00000000000011d4 <ctf_dump_member>:
    11d4:	sub	sp, sp, #0x60
    11d8:	stp	x29, x30, [sp, #32]
    11dc:	stp	x22, x21, [sp, #64]
    11e0:	stp	x20, x19, [sp, #80]
    11e4:	add	x29, sp, #0x20
    11e8:	mov	x19, x4
    11ec:	mov	x21, x2
    11f0:	mov	x20, x1
    11f4:	mov	x22, x0
    11f8:	cmp	w3, #0x1
    11fc:	stp	x24, x23, [sp, #48]
    1200:	stur	xzr, [x29, #-8]
    1204:	b.lt	1234 <ctf_dump_member+0x60>  // b.tstop
    1208:	adrp	x23, 0 <ctf_dump>
    120c:	sxtw	x24, w3
    1210:	add	x23, x23, #0x0
    1214:	ldr	x8, [x19]
    1218:	mov	x1, x23
    121c:	ldr	x0, [x8]
    1220:	bl	0 <ctf_str_append_noerr>
    1224:	ldr	x8, [x19]
    1228:	subs	x24, x24, #0x1
    122c:	str	x0, [x8]
    1230:	b.ne	1214 <ctf_dump_member+0x40>  // b.any
    1234:	ldr	x0, [x19, #8]
    1238:	mov	x1, x20
    123c:	bl	0 <ctf_type_aname>
    1240:	cbz	x0, 133c <ctf_dump_member+0x168>
    1244:	mov	x23, x0
    1248:	ldr	x0, [x19, #8]
    124c:	mov	x1, x20
    1250:	bl	0 <ctf_type_kind>
    1254:	ldr	x8, [x19, #8]
    1258:	mov	w24, w0
    125c:	mov	x1, x20
    1260:	mov	x0, x8
    1264:	bl	0 <ctf_type_align>
    1268:	adrp	x1, 0 <ctf_dump>
    126c:	mov	x7, x0
    1270:	add	x1, x1, #0x0
    1274:	sub	x0, x29, #0x8
    1278:	mov	x2, x21
    127c:	mov	x3, x20
    1280:	mov	w4, w24
    1284:	mov	x5, x23
    1288:	mov	x6, x22
    128c:	bl	0 <asprintf>
    1290:	tbnz	w0, #31, 1394 <ctf_dump_member+0x1c0>
    1294:	ldr	x8, [x19]
    1298:	ldur	x1, [x29, #-8]
    129c:	ldr	x0, [x8]
    12a0:	bl	0 <ctf_str_append_noerr>
    12a4:	ldr	x8, [x19]
    12a8:	str	x0, [x8]
    12ac:	mov	x0, x23
    12b0:	bl	0 <free>
    12b4:	ldur	x0, [x29, #-8]
    12b8:	bl	0 <free>
    12bc:	stur	xzr, [x29, #-8]
    12c0:	ldr	x0, [x19, #8]
    12c4:	mov	x1, x20
    12c8:	bl	0 <ctf_type_kind>
    12cc:	cmp	w0, #0x1
    12d0:	b.eq	12e8 <ctf_dump_member+0x114>  // b.none
    12d4:	ldr	x0, [x19, #8]
    12d8:	mov	x1, x20
    12dc:	bl	0 <ctf_type_kind>
    12e0:	cmp	w0, #0x2
    12e4:	b.ne	13bc <ctf_dump_member+0x1e8>  // b.any
    12e8:	ldr	x0, [x19, #8]
    12ec:	add	x2, sp, #0x8
    12f0:	mov	x1, x20
    12f4:	bl	0 <ctf_type_encoding>
    12f8:	ldp	w2, w3, [sp, #8]
    12fc:	ldr	w4, [sp, #16]
    1300:	adrp	x1, 0 <ctf_dump>
    1304:	add	x1, x1, #0x0
    1308:	sub	x0, x29, #0x8
    130c:	bl	0 <asprintf>
    1310:	tbnz	w0, #31, 1390 <ctf_dump_member+0x1bc>
    1314:	ldr	x8, [x19]
    1318:	ldur	x1, [x29, #-8]
    131c:	ldr	x0, [x8]
    1320:	bl	0 <ctf_str_append_noerr>
    1324:	ldr	x8, [x19]
    1328:	str	x0, [x8]
    132c:	ldur	x0, [x29, #-8]
    1330:	bl	0 <free>
    1334:	stur	xzr, [x29, #-8]
    1338:	b	140c <ctf_dump_member+0x238>
    133c:	cbz	x20, 1350 <ctf_dump_member+0x17c>
    1340:	ldr	x0, [x19, #8]
    1344:	bl	0 <ctf_errno>
    1348:	cmp	w0, #0x41b
    134c:	b.ne	1390 <ctf_dump_member+0x1bc>  // b.any
    1350:	adrp	x1, 0 <ctf_dump>
    1354:	add	x1, x1, #0x0
    1358:	sub	x0, x29, #0x8
    135c:	mov	x2, x21
    1360:	bl	0 <asprintf>
    1364:	tbnz	w0, #31, 1390 <ctf_dump_member+0x1bc>
    1368:	ldr	x8, [x19]
    136c:	ldur	x1, [x29, #-8]
    1370:	ldr	x0, [x8]
    1374:	bl	0 <ctf_str_append_noerr>
    1378:	ldr	x8, [x19]
    137c:	str	x0, [x8]
    1380:	ldur	x0, [x29, #-8]
    1384:	bl	0 <free>
    1388:	mov	w0, wzr
    138c:	b	1430 <ctf_dump_member+0x25c>
    1390:	mov	x23, xzr
    1394:	mov	x0, x23
    1398:	bl	0 <free>
    139c:	ldur	x0, [x29, #-8]
    13a0:	bl	0 <free>
    13a4:	ldr	x19, [x19, #8]
    13a8:	bl	0 <__errno_location>
    13ac:	ldr	w1, [x0]
    13b0:	mov	x0, x19
    13b4:	bl	0 <ctf_set_errno>
    13b8:	b	1430 <ctf_dump_member+0x25c>
    13bc:	ldr	x21, [x19, #8]
    13c0:	mov	x1, x20
    13c4:	mov	x0, x21
    13c8:	bl	0 <ctf_type_kind>
    13cc:	cmp	w0, #0x8
    13d0:	b.hi	140c <ctf_dump_member+0x238>  // b.pmore
    13d4:	mov	w8, #0x1                   	// #1
    13d8:	lsl	w8, w8, w0
    13dc:	mov	w9, #0x106                 	// #262
    13e0:	tst	w8, w9
    13e4:	b.eq	140c <ctf_dump_member+0x238>  // b.none
    13e8:	mov	x0, x21
    13ec:	mov	x1, x20
    13f0:	bl	0 <ctf_type_reference>
    13f4:	cmn	x0, #0x1
    13f8:	b.eq	140c <ctf_dump_member+0x238>  // b.none
    13fc:	add	x2, sp, #0x8
    1400:	mov	x0, x21
    1404:	mov	x1, x20
    1408:	bl	0 <ctf_type_encoding>
    140c:	ldr	x8, [x19]
    1410:	adrp	x1, 0 <ctf_dump>
    1414:	add	x1, x1, #0x0
    1418:	ldr	x0, [x8]
    141c:	bl	0 <ctf_str_append_noerr>
    1420:	ldr	x9, [x19]
    1424:	mov	x8, x0
    1428:	mov	w0, wzr
    142c:	str	x8, [x9]
    1430:	ldp	x20, x19, [sp, #80]
    1434:	ldp	x22, x21, [sp, #64]
    1438:	ldp	x24, x23, [sp, #48]
    143c:	ldp	x29, x30, [sp, #32]
    1440:	add	sp, sp, #0x60
    1444:	ret

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_create>:
       0:	sub	sp, sp, #0x70
       4:	stp	x29, x30, [sp, #32]
       8:	stp	x26, x25, [sp, #48]
       c:	stp	x24, x23, [sp, #64]
      10:	stp	x22, x21, [sp, #80]
      14:	stp	x20, x19, [sp, #96]
      18:	add	x29, sp, #0x20
      1c:	mov	x19, x0
      20:	bl	0 <libctf_init_debug>
      24:	adrp	x0, 0 <ctf_hash_integer>
      28:	adrp	x1, 0 <ctf_hash_eq_integer>
      2c:	add	x0, x0, #0x0
      30:	add	x1, x1, #0x0
      34:	mov	x2, xzr
      38:	mov	x3, xzr
      3c:	bl	0 <ctf_dynhash_create>
      40:	cbz	x0, 198 <ctf_create+0x198>
      44:	mov	x20, x0
      48:	adrp	x0, 0 <ctf_hash_string>
      4c:	adrp	x1, 0 <ctf_hash_eq_string>
      50:	add	x0, x0, #0x0
      54:	add	x1, x1, #0x0
      58:	mov	x2, xzr
      5c:	mov	x3, xzr
      60:	bl	0 <ctf_dynhash_create>
      64:	cbz	x0, 1a8 <ctf_create+0x1a8>
      68:	adrp	x21, 0 <ctf_hash_string>
      6c:	adrp	x26, 0 <ctf_hash_eq_string>
      70:	add	x21, x21, #0x0
      74:	add	x26, x26, #0x0
      78:	mov	x22, x0
      7c:	mov	x0, x21
      80:	mov	x1, x26
      84:	mov	x2, xzr
      88:	mov	x3, xzr
      8c:	bl	0 <ctf_dynhash_create>
      90:	mov	x23, x0
      94:	mov	x0, x21
      98:	mov	x1, x26
      9c:	mov	x2, xzr
      a0:	mov	x3, xzr
      a4:	bl	0 <ctf_dynhash_create>
      a8:	mov	x24, x0
      ac:	mov	x0, x21
      b0:	mov	x1, x26
      b4:	mov	x2, xzr
      b8:	mov	x3, xzr
      bc:	bl	0 <ctf_dynhash_create>
      c0:	mov	x25, x0
      c4:	mov	x0, x21
      c8:	mov	x1, x26
      cc:	mov	x2, xzr
      d0:	mov	x3, xzr
      d4:	bl	0 <ctf_dynhash_create>
      d8:	mov	x26, x0
      dc:	cbz	x23, 1b8 <ctf_create+0x1b8>
      e0:	cbz	x24, 1b8 <ctf_create+0x1b8>
      e4:	cbz	x25, 1b8 <ctf_create+0x1b8>
      e8:	cbz	x26, 1b8 <ctf_create+0x1b8>
      ec:	adrp	x9, 0 <ctf_create>
      f0:	ldr	q0, [x9]
      f4:	adrp	x8, 0 <_CTF_SECTION>
      f8:	adrp	x9, 0 <ctf_create>
      fc:	add	x8, x8, #0x0
     100:	add	x9, x9, #0x0
     104:	mov	x0, sp
     108:	mov	w4, #0x1                   	// #1
     10c:	mov	x1, xzr
     110:	mov	x2, xzr
     114:	mov	x3, xzr
     118:	mov	x5, x19
     11c:	stp	x8, x9, [sp]
     120:	str	q0, [sp, #16]
     124:	bl	0 <ctf_bufopen_internal>
     128:	cbz	x0, 1c4 <ctf_create+0x1c4>
     12c:	adrp	x8, 0 <ctf_create>
     130:	ldr	q0, [x8]
     134:	add	x8, x0, #0x268
     138:	mov	x21, x0
     13c:	str	x23, [x0, #160]
     140:	str	x24, [x0, #176]
     144:	str	x25, [x0, #192]
     148:	str	x26, [x0, #208]
     14c:	str	x20, [x0, #568]
     150:	str	x22, [x0, #592]
     154:	str	q0, [x8]
     158:	str	xzr, [x0, #632]
     15c:	bl	0 <ctf_set_ctl_hashes>
     160:	mov	w1, #0x2                   	// #2
     164:	mov	x0, x21
     168:	bl	0 <ctf_setmodel>
     16c:	ldp	x0, x8, [x21, #448]
     170:	cbz	x0, 218 <ctf_create+0x218>
     174:	ldr	x9, [x21, #480]
     178:	add	x9, x9, #0x2
     17c:	cmp	x9, x8
     180:	b.ls	1f8 <ctf_create+0x1f8>  // b.plast
     184:	ucvtf	d0, x8
     188:	fmov	d1, #1.250000000000000000e+00
     18c:	fmul	d0, d0, d1
     190:	fcvtzu	x20, d0
     194:	b	21c <ctf_create+0x21c>
     198:	mov	w1, #0xb                   	// #11
     19c:	mov	x0, x19
     1a0:	bl	0 <ctf_set_open_errno>
     1a4:	b	1f4 <ctf_create+0x1f4>
     1a8:	mov	w1, #0xb                   	// #11
     1ac:	mov	x0, x19
     1b0:	bl	0 <ctf_set_open_errno>
     1b4:	b	1ec <ctf_create+0x1ec>
     1b8:	mov	w1, #0xb                   	// #11
     1bc:	mov	x0, x19
     1c0:	bl	0 <ctf_set_open_errno>
     1c4:	mov	x0, x23
     1c8:	bl	0 <ctf_dynhash_destroy>
     1cc:	mov	x0, x24
     1d0:	bl	0 <ctf_dynhash_destroy>
     1d4:	mov	x0, x25
     1d8:	bl	0 <ctf_dynhash_destroy>
     1dc:	mov	x0, x26
     1e0:	bl	0 <ctf_dynhash_destroy>
     1e4:	mov	x0, x22
     1e8:	bl	0 <ctf_dynhash_destroy>
     1ec:	mov	x0, x20
     1f0:	bl	0 <ctf_dynhash_destroy>
     1f4:	mov	x21, xzr
     1f8:	mov	x0, x21
     1fc:	ldp	x20, x19, [sp, #96]
     200:	ldp	x22, x21, [sp, #80]
     204:	ldp	x24, x23, [sp, #64]
     208:	ldp	x26, x25, [sp, #48]
     20c:	ldp	x29, x30, [sp, #32]
     210:	add	sp, sp, #0x70
     214:	ret
     218:	mov	w20, #0x400                 	// #1024
     21c:	cmp	x20, x8
     220:	b.eq	1f8 <ctf_create+0x1f8>  // b.none
     224:	lsl	x1, x20, #2
     228:	bl	0 <realloc>
     22c:	cbz	x0, 254 <ctf_create+0x254>
     230:	ldr	x8, [x21, #456]
     234:	str	x0, [x21, #448]
     238:	mov	w1, wzr
     23c:	add	x0, x0, x8, lsl #2
     240:	sub	x8, x20, x8
     244:	lsl	x2, x8, #2
     248:	bl	0 <memset>
     24c:	str	x20, [x21, #456]
     250:	b	1f8 <ctf_create+0x1f8>
     254:	mov	w1, #0xc                   	// #12
     258:	mov	x0, x21
     25c:	bl	0 <ctf_set_errno>
     260:	tbz	w0, #31, 1f8 <ctf_create+0x1f8>
     264:	mov	x0, x21
     268:	bl	0 <ctf_errno>
     26c:	mov	w1, w0
     270:	mov	x0, x19
     274:	bl	0 <ctf_set_open_errno>
     278:	mov	x0, x21
     27c:	bl	0 <ctf_file_close>
     280:	b	1f4 <ctf_create+0x1f4>

0000000000000284 <ctf_update>:
     284:	stp	x29, x30, [sp, #-16]!
     288:	ldrb	w9, [x0, #552]
     28c:	mov	x8, x0
     290:	mov	x29, sp
     294:	tbnz	w9, #1, 2ac <ctf_update+0x28>
     298:	mov	w1, #0x40d                 	// #1037
     29c:	mov	x0, x8
     2a0:	bl	0 <ctf_set_errno>
     2a4:	ldp	x29, x30, [sp], #16
     2a8:	ret
     2ac:	ldr	x9, [x8, #480]
     2b0:	mov	w0, wzr
     2b4:	str	x9, [x8, #616]
     2b8:	ldp	x29, x30, [sp], #16
     2bc:	ret

00000000000002c0 <ctf_serialize>:
     2c0:	stp	x29, x30, [sp, #-96]!
     2c4:	stp	x28, x27, [sp, #16]
     2c8:	stp	x26, x25, [sp, #32]
     2cc:	stp	x24, x23, [sp, #48]
     2d0:	stp	x22, x21, [sp, #64]
     2d4:	stp	x20, x19, [sp, #80]
     2d8:	mov	x29, sp
     2dc:	sub	sp, sp, #0x370
     2e0:	ldr	w8, [x0, #552]
     2e4:	mov	x19, x0
     2e8:	tbnz	w8, #1, 2fc <ctf_serialize+0x3c>
     2ec:	mov	w1, #0x40d                 	// #1037
     2f0:	mov	x0, x19
     2f4:	bl	0 <ctf_set_errno>
     2f8:	b	304 <ctf_serialize+0x44>
     2fc:	tbnz	w8, #2, 324 <ctf_serialize+0x64>
     300:	mov	w0, wzr
     304:	add	sp, sp, #0x370
     308:	ldp	x20, x19, [sp, #80]
     30c:	ldp	x22, x21, [sp, #64]
     310:	ldp	x24, x23, [sp, #48]
     314:	ldp	x26, x25, [sp, #32]
     318:	ldp	x28, x27, [sp, #16]
     31c:	ldp	x29, x30, [sp], #96
     320:	ret
     324:	movi	v0.2d, #0x0
     328:	strb	wzr, [sp, #128]
     32c:	stp	q0, q0, [sp, #96]
     330:	ldr	x21, [x19, #584]
     334:	cbz	x21, 3f4 <ctf_serialize+0x134>
     338:	adrp	x25, 0 <ctf_create>
     33c:	mov	x22, xzr
     340:	mov	w23, #0xc                   	// #12
     344:	mov	w24, #0x14                  	// #20
     348:	add	x25, x25, #0x0
     34c:	b	35c <ctf_serialize+0x9c>
     350:	add	x22, x22, #0x4
     354:	ldr	x21, [x21, #8]
     358:	cbz	x21, 3f8 <ctf_serialize+0x138>
     35c:	ldr	x8, [x19]
     360:	ldr	w0, [x21, #28]
     364:	ldr	x8, [x8]
     368:	blr	x8
     36c:	ldr	x8, [x19]
     370:	mov	w20, w0
     374:	ldr	x9, [x8, #16]
     378:	ldr	w8, [x21, #28]
     37c:	mov	w0, w8
     380:	blr	x9
     384:	ldr	w8, [x21, #32]
     388:	sub	w9, w20, #0x1
     38c:	cmn	w8, #0x1
     390:	csel	x10, x24, x23, eq  // eq = none
     394:	cmp	w9, #0xd
     398:	add	x22, x10, x22
     39c:	b.hi	354 <ctf_serialize+0x94>  // b.pmore
     3a0:	adr	x10, 350 <ctf_serialize+0x90>
     3a4:	ldrb	w11, [x25, x9]
     3a8:	add	x10, x10, x11, lsl #2
     3ac:	br	x10
     3b0:	lsr	w9, w8, #29
     3b4:	mov	w8, w0
     3b8:	cbnz	w9, 3dc <ctf_serialize+0x11c>
     3bc:	madd	x22, x8, x23, x22
     3c0:	b	354 <ctf_serialize+0x94>
     3c4:	add	x22, x22, w0, uxtw #3
     3c8:	b	354 <ctf_serialize+0x94>
     3cc:	add	x22, x22, #0x8
     3d0:	b	354 <ctf_serialize+0x94>
     3d4:	add	x22, x22, #0xc
     3d8:	b	354 <ctf_serialize+0x94>
     3dc:	add	x22, x22, x8, lsl #4
     3e0:	b	354 <ctf_serialize+0x94>
     3e4:	and	w8, w0, #0x1
     3e8:	add	w8, w8, w0
     3ec:	add	x22, x22, w8, uxtw #2
     3f0:	b	354 <ctf_serialize+0x94>
     3f4:	mov	x22, xzr
     3f8:	ldr	x8, [x19, #608]
     3fc:	cbz	x8, 414 <ctf_serialize+0x154>
     400:	mov	x21, xzr
     404:	ldr	x8, [x8, #8]
     408:	add	x21, x21, #0x1
     40c:	cbnz	x8, 404 <ctf_serialize+0x144>
     410:	b	418 <ctf_serialize+0x158>
     414:	mov	x21, xzr
     418:	lsl	x23, x21, #3
     41c:	add	x20, x23, x22
     420:	and	x24, x20, #0xffffffff
     424:	add	x22, x24, #0x34
     428:	mov	x0, x22
     42c:	bl	0 <malloc>
     430:	cbz	x0, 974 <ctf_serialize+0x6b4>
     434:	ldp	q0, q1, [sp, #96]
     438:	ldrb	w10, [sp, #128]
     43c:	mov	w8, #0xdff2                	// #57330
     440:	mov	w9, #0x4                   	// #4
     444:	stp	wzr, w23, [x0, #36]
     448:	strh	w8, [x0]
     44c:	strb	w9, [x0, #2]
     450:	strb	w10, [x0, #35]
     454:	stur	q1, [x0, #19]
     458:	stur	q0, [x0, #3]
     45c:	stp	w20, wzr, [x0, #44]
     460:	ldrb	w8, [x19, #552]
     464:	mov	x25, x0
     468:	tbz	w8, #0, 480 <ctf_serialize+0x1c0>
     46c:	ldr	x1, [x19, #528]
     470:	cbz	x1, 480 <ctf_serialize+0x1c0>
     474:	add	x2, x25, #0x8
     478:	mov	x0, x19
     47c:	bl	0 <ctf_str_add_ref>
     480:	ldr	x1, [x19, #496]
     484:	add	x8, x25, #0x34
     488:	str	x8, [sp, #48]
     48c:	cbz	x1, 49c <ctf_serialize+0x1dc>
     490:	add	x2, x25, #0xc
     494:	mov	x0, x19
     498:	bl	0 <ctf_str_add_ref>
     49c:	stp	x22, x24, [sp, #24]
     4a0:	ldr	x22, [x19, #608]
     4a4:	cbz	x22, 97c <ctf_serialize+0x6bc>
     4a8:	ldr	x24, [sp, #48]
     4ac:	mov	x20, xzr
     4b0:	ldr	x1, [x22, #16]
     4b4:	mov	x0, x19
     4b8:	mov	x2, x24
     4bc:	bl	0 <ctf_str_add_ref>
     4c0:	ldr	x8, [x22, #24]
     4c4:	add	x20, x20, #0x1
     4c8:	str	w8, [x24, #4]
     4cc:	ldr	x22, [x22, #8]
     4d0:	add	x24, x24, #0x8
     4d4:	cbnz	x22, 4b0 <ctf_serialize+0x1f0>
     4d8:	cmp	x20, x21
     4dc:	b.ne	988 <ctf_serialize+0x6c8>  // b.any
     4e0:	and	x8, x23, #0xfffffff8
     4e4:	cmp	x23, x8
     4e8:	b.ne	9e0 <ctf_serialize+0x720>  // b.any
     4ec:	ldr	x8, [sp, #48]
     4f0:	ldr	x20, [x19, #584]
     4f4:	str	x25, [sp, #40]
     4f8:	add	x24, x8, x23
     4fc:	cbz	x20, 6d0 <ctf_serialize+0x410>
     500:	mov	w23, #0xc                   	// #12
     504:	mov	w22, #0x14                  	// #20
     508:	b	52c <ctf_serialize+0x26c>
     50c:	ldp	w9, w8, [x20, #48]
     510:	ldr	w10, [x20, #56]
     514:	lsl	w8, w8, #16
     518:	orr	w8, w8, w9, lsl #24
     51c:	orr	w8, w8, w10
     520:	str	w8, [x24], #4
     524:	ldr	x20, [x20, #8]
     528:	cbz	x20, 6d0 <ctf_serialize+0x410>
     52c:	ldr	x8, [x19]
     530:	ldr	w0, [x20, #28]
     534:	add	x28, x20, #0x18
     538:	ldr	x8, [x8]
     53c:	blr	x8
     540:	ldr	x8, [x19]
     544:	mov	w26, w0
     548:	ldr	x9, [x8, #16]
     54c:	ldr	w8, [x20, #28]
     550:	mov	w0, w8
     554:	blr	x9
     558:	ldr	w8, [x20, #32]
     55c:	mov	w25, w0
     560:	mov	x0, x24
     564:	mov	x1, x28
     568:	cmn	w8, #0x1
     56c:	csel	x27, x22, x23, eq  // eq = none
     570:	mov	x2, x27
     574:	bl	0 <memcpy>
     578:	ldr	w1, [x24]
     57c:	cbz	w1, 59c <ctf_serialize+0x2dc>
     580:	mov	x0, x19
     584:	bl	0 <ctf_strraw>
     588:	cbz	x0, 59c <ctf_serialize+0x2dc>
     58c:	mov	x1, x0
     590:	mov	x0, x19
     594:	mov	x2, x24
     598:	bl	0 <ctf_str_add_ref>
     59c:	sub	w8, w26, #0x1
     5a0:	cmp	w8, #0xd
     5a4:	add	x24, x24, x27
     5a8:	b.hi	524 <ctf_serialize+0x264>  // b.pmore
     5ac:	adrp	x11, 0 <ctf_create>
     5b0:	add	x11, x11, #0x0
     5b4:	adr	x9, 50c <ctf_serialize+0x24c>
     5b8:	ldrb	w10, [x11, x8]
     5bc:	add	x9, x9, x10, lsl #2
     5c0:	br	x9
     5c4:	ldr	w8, [x20, #32]
     5c8:	ldr	x25, [x20, #56]
     5cc:	lsr	w8, w8, #29
     5d0:	cbnz	w8, 660 <ctf_serialize+0x3a0>
     5d4:	cbnz	x25, 5e8 <ctf_serialize+0x328>
     5d8:	b	524 <ctf_serialize+0x264>
     5dc:	ldr	x25, [x25, #8]
     5e0:	add	x24, x24, #0xc
     5e4:	cbz	x25, 524 <ctf_serialize+0x264>
     5e8:	ldp	x9, x8, [x25, #24]
     5ec:	stp	wzr, w8, [x24]
     5f0:	str	w9, [x24, #8]
     5f4:	ldr	x1, [x25, #16]
     5f8:	cbz	x1, 5dc <ctf_serialize+0x31c>
     5fc:	mov	x0, x19
     600:	mov	x2, x24
     604:	bl	0 <ctf_str_add_ref>
     608:	b	5dc <ctf_serialize+0x31c>
     60c:	ldr	x25, [x20, #56]
     610:	cbz	x25, 524 <ctf_serialize+0x264>
     614:	ldr	w8, [x25, #40]
     618:	mov	x0, x19
     61c:	mov	x2, x24
     620:	str	w8, [x24, #4]
     624:	ldr	x1, [x25, #16]
     628:	bl	0 <ctf_str_add_ref>
     62c:	ldr	x25, [x25, #8]
     630:	add	x24, x24, #0x8
     634:	cbnz	x25, 614 <ctf_serialize+0x354>
     638:	b	524 <ctf_serialize+0x264>
     63c:	ldr	x8, [x20, #48]
     640:	str	x8, [x24], #8
     644:	b	524 <ctf_serialize+0x264>
     648:	ldr	q0, [x20, #48]
     64c:	ldr	w8, [x20, #64]
     650:	xtn	v0.2s, v0.2d
     654:	str	w8, [x24, #8]
     658:	str	d0, [x24], #12
     65c:	b	524 <ctf_serialize+0x264>
     660:	cbnz	x25, 674 <ctf_serialize+0x3b4>
     664:	b	524 <ctf_serialize+0x264>
     668:	ldr	x25, [x25, #8]
     66c:	add	x24, x24, #0x10
     670:	cbz	x25, 524 <ctf_serialize+0x264>
     674:	ldp	x9, x8, [x25, #24]
     678:	lsr	x10, x8, #32
     67c:	stp	wzr, w10, [x24]
     680:	stp	w9, w8, [x24, #8]
     684:	ldr	x1, [x25, #16]
     688:	cbz	x1, 668 <ctf_serialize+0x3a8>
     68c:	mov	x0, x19
     690:	mov	x2, x24
     694:	bl	0 <ctf_str_add_ref>
     698:	b	668 <ctf_serialize+0x3a8>
     69c:	cbz	w25, 524 <ctf_serialize+0x264>
     6a0:	mov	w9, w25
     6a4:	mov	x8, xzr
     6a8:	lsl	x9, x9, #3
     6ac:	ldr	x10, [x20, #48]
     6b0:	ldr	x10, [x10, x8]
     6b4:	add	x8, x8, #0x8
     6b8:	cmp	x9, x8
     6bc:	str	w10, [x24], #4
     6c0:	b.ne	6ac <ctf_serialize+0x3ec>  // b.any
     6c4:	tbz	w25, #0, 524 <ctf_serialize+0x264>
     6c8:	str	wzr, [x24], #4
     6cc:	b	524 <ctf_serialize+0x264>
     6d0:	ldr	x8, [sp, #32]
     6d4:	ldr	x9, [sp, #48]
     6d8:	add	x8, x9, x8
     6dc:	cmp	x24, x8
     6e0:	b.ne	a00 <ctf_serialize+0x740>  // b.any
     6e4:	mov	x0, x19
     6e8:	bl	0 <ctf_str_write_strtab>
     6ec:	mov	x24, x0
     6f0:	stp	x0, x1, [sp, #80]
     6f4:	mov	x0, x19
     6f8:	bl	0 <ctf_str_purge_refs>
     6fc:	ldr	x22, [sp, #40]
     700:	cbz	x24, 9a8 <ctf_serialize+0x6e8>
     704:	ldr	x0, [sp, #48]
     708:	adrp	x3, 0 <ctf_create>
     70c:	add	x8, sp, #0x50
     710:	add	x3, x3, #0x0
     714:	add	x4, sp, #0x38
     718:	mov	w2, #0x8                   	// #8
     71c:	mov	x1, x21
     720:	stp	x19, x8, [sp, #56]
     724:	bl	0 <qsort_r>
     728:	ldr	x8, [sp, #88]
     72c:	ldr	x20, [sp, #24]
     730:	mov	x0, x19
     734:	mov	x1, x22
     738:	add	x2, x8, x20
     73c:	bl	0 <ctf_realloc>
     740:	cbz	x0, 9b8 <ctf_serialize+0x6f8>
     744:	ldp	x1, x2, [sp, #80]
     748:	mov	x21, x0
     74c:	add	x0, x0, x20
     750:	bl	0 <memcpy>
     754:	ldp	x0, x8, [sp, #80]
     758:	str	w8, [x21, #48]
     75c:	add	x20, x20, w8, uxtw
     760:	bl	0 <free>
     764:	ldr	x7, [x19, #128]
     768:	add	x8, sp, #0x4c
     76c:	mov	w9, #0x1                   	// #1
     770:	mov	x0, x21
     774:	mov	x1, x20
     778:	mov	x2, xzr
     77c:	mov	x3, xzr
     780:	mov	x4, xzr
     784:	mov	x5, xzr
     788:	mov	x6, xzr
     78c:	str	x8, [sp, #8]
     790:	str	w9, [sp]
     794:	bl	0 <ctf_simple_open_internal>
     798:	cbz	x0, 9d0 <ctf_serialize+0x710>
     79c:	mov	x20, x0
     7a0:	add	x24, x0, #0x288
     7a4:	mov	x0, x19
     7a8:	add	x22, x19, #0x288
     7ac:	add	x23, x19, #0x240
     7b0:	add	x25, x19, #0x258
     7b4:	bl	0 <ctf_getmodel>
     7b8:	mov	w1, w0
     7bc:	mov	x0, x20
     7c0:	bl	0 <ctf_setmodel>
     7c4:	ldr	x1, [x19, #512]
     7c8:	mov	x0, x20
     7cc:	bl	0 <ctf_import>
     7d0:	ldr	w8, [x19, #548]
     7d4:	ldr	w9, [x20, #552]
     7d8:	ldr	x10, [x20, #400]
     7dc:	str	w8, [x20, #548]
     7e0:	ldr	w8, [x19, #552]
     7e4:	and	w8, w8, #0xfffffffb
     7e8:	orr	w8, w9, w8
     7ec:	str	w8, [x20, #552]
     7f0:	cbnz	x10, 7f8 <ctf_serialize+0x538>
     7f4:	str	x21, [x20, #400]
     7f8:	ldr	x8, [x19, #568]
     7fc:	add	x10, x19, #0xd8
     800:	add	x9, x20, #0xd8
     804:	mov	x0, x20
     808:	str	x8, [x20, #568]
     80c:	ldr	q0, [x23]
     810:	str	q0, [x20, #576]
     814:	ldr	x8, [x19, #592]
     818:	str	x8, [x20, #592]
     81c:	ldr	q0, [x25]
     820:	add	x8, x20, #0x258
     824:	str	q0, [x8]
     828:	ldr	x8, [x19, #616]
     82c:	str	x8, [x20, #616]
     830:	ldr	x8, [x19, #696]
     834:	str	x8, [x20, #696]
     838:	ldr	x8, [x19, #624]
     83c:	add	x8, x8, #0x1
     840:	str	x8, [x20, #624]
     844:	ldr	x8, [x19, #720]
     848:	str	x8, [x20, #720]
     84c:	ldr	q0, [x19, #448]
     850:	str	q0, [x20, #448]
     854:	ldr	q0, [x22]
     858:	str	q0, [x24]
     85c:	ldr	w8, [x19, #384]
     860:	str	w8, [x20, #384]
     864:	ldr	x8, [x19, #128]
     868:	str	x8, [x20, #128]
     86c:	ldr	q0, [x22, #16]
     870:	str	q0, [x24, #16]
     874:	ldr	q0, [x22, #32]
     878:	str	q0, [x24, #32]
     87c:	ldr	x8, [x19, #624]
     880:	str	x8, [x20, #632]
     884:	ldr	q0, [x10, #48]
     888:	ldur	q1, [x19, #248]
     88c:	ldur	q2, [x19, #232]
     890:	ldur	q3, [x19, #216]
     894:	str	q0, [x9, #48]
     898:	stur	q1, [x20, #248]
     89c:	stur	q2, [x20, #232]
     8a0:	stur	q3, [x20, #216]
     8a4:	ldr	x8, [x10, #112]
     8a8:	ldp	q1, q0, [x10, #80]
     8ac:	ldr	q2, [x10, #64]
     8b0:	str	x8, [x9, #112]
     8b4:	stp	q1, q0, [x9, #80]
     8b8:	str	q2, [x9, #64]
     8bc:	ldur	q0, [x19, #152]
     8c0:	stur	q0, [x20, #152]
     8c4:	ldur	q0, [x19, #168]
     8c8:	stur	q0, [x20, #168]
     8cc:	ldur	q0, [x19, #184]
     8d0:	stur	q0, [x20, #184]
     8d4:	ldur	q0, [x19, #200]
     8d8:	stur	q0, [x20, #200]
     8dc:	str	xzr, [x19, #568]
     8e0:	bl	0 <ctf_str_free_atoms>
     8e4:	ldr	x8, [x19, #368]
     8e8:	movi	v0.2d, #0x0
     8ec:	add	x0, sp, #0x90
     8f0:	mov	w2, #0x2d8                 	// #728
     8f4:	str	x8, [x20, #368]
     8f8:	ldr	x8, [x19, #120]
     8fc:	mov	x1, x19
     900:	str	x8, [x20, #120]
     904:	str	xzr, [x19, #368]
     908:	str	xzr, [x19, #696]
     90c:	str	xzr, [x19, #448]
     910:	str	xzr, [x19, #160]
     914:	str	xzr, [x19, #176]
     918:	str	xzr, [x19, #192]
     91c:	stp	xzr, xzr, [x19, #120]
     920:	stp	q0, q0, [x19, #208]
     924:	stp	q0, q0, [x19, #240]
     928:	stp	q0, q0, [x19, #272]
     92c:	stp	q0, q0, [x19, #304]
     930:	stp	q0, q0, [x23]
     934:	str	xzr, [x23, #32]
     938:	stp	q0, q0, [x22]
     93c:	bl	0 <memcpy>
     940:	mov	w2, #0x2d8                 	// #728
     944:	mov	x0, x19
     948:	mov	x1, x20
     94c:	bl	0 <memcpy>
     950:	add	x1, sp, #0x90
     954:	mov	w2, #0x2d8                 	// #728
     958:	mov	x0, x20
     95c:	bl	0 <memcpy>
     960:	mov	w8, #0x1                   	// #1
     964:	mov	x0, x20
     968:	str	w8, [x20, #548]
     96c:	bl	0 <ctf_file_close>
     970:	b	300 <ctf_serialize+0x40>
     974:	mov	w1, #0xb                   	// #11
     978:	b	2f0 <ctf_serialize+0x30>
     97c:	mov	x20, xzr
     980:	cmp	x20, x21
     984:	b.eq	4e0 <ctf_serialize+0x220>  // b.none
     988:	adrp	x0, 0 <ctf_create>
     98c:	adrp	x1, 0 <ctf_create>
     990:	adrp	x3, 0 <ctf_create>
     994:	add	x0, x0, #0x0
     998:	add	x1, x1, #0x0
     99c:	add	x3, x3, #0x0
     9a0:	mov	w2, #0x179                 	// #377
     9a4:	bl	0 <__assert_fail>
     9a8:	mov	x0, x22
     9ac:	bl	0 <free>
     9b0:	mov	w1, #0xb                   	// #11
     9b4:	b	2f0 <ctf_serialize+0x30>
     9b8:	mov	x0, x22
     9bc:	bl	0 <free>
     9c0:	ldr	x0, [sp, #80]
     9c4:	bl	0 <free>
     9c8:	mov	w1, #0xb                   	// #11
     9cc:	b	2f0 <ctf_serialize+0x30>
     9d0:	mov	x0, x21
     9d4:	bl	0 <free>
     9d8:	ldr	w1, [sp, #76]
     9dc:	b	2f0 <ctf_serialize+0x30>
     9e0:	adrp	x0, 0 <ctf_create>
     9e4:	adrp	x1, 0 <ctf_create>
     9e8:	adrp	x3, 0 <ctf_create>
     9ec:	add	x0, x0, #0x0
     9f0:	add	x1, x1, #0x0
     9f4:	add	x3, x3, #0x0
     9f8:	mov	w2, #0x17d                 	// #381
     9fc:	bl	0 <__assert_fail>
     a00:	adrp	x0, 0 <ctf_create>
     a04:	adrp	x1, 0 <ctf_create>
     a08:	adrp	x3, 0 <ctf_create>
     a0c:	add	x0, x0, #0x0
     a10:	add	x1, x1, #0x0
     a14:	add	x3, x3, #0x0
     a18:	mov	w2, #0x1d8                 	// #472
     a1c:	bl	0 <__assert_fail>

0000000000000a20 <ctf_sort_var>:
     a20:	stp	x29, x30, [sp, #-32]!
     a24:	stp	x20, x19, [sp, #16]
     a28:	ldr	w8, [x0]
     a2c:	mov	x19, x2
     a30:	ldp	x0, x2, [x2]
     a34:	mov	x20, x1
     a38:	mov	w1, w8
     a3c:	mov	x29, sp
     a40:	bl	0 <ctf_strraw_explicit>
     a44:	ldp	x8, x2, [x19]
     a48:	ldr	w1, [x20]
     a4c:	mov	x19, x0
     a50:	mov	x0, x8
     a54:	bl	0 <ctf_strraw_explicit>
     a58:	mov	x1, x0
     a5c:	mov	x0, x19
     a60:	ldp	x20, x19, [sp, #16]
     a64:	ldp	x29, x30, [sp], #32
     a68:	b	0 <strcmp>

0000000000000a6c <ctf_name_table>:
     a6c:	cmp	w1, #0x8
     a70:	b.eq	a8c <ctf_name_table+0x20>  // b.none
     a74:	cmp	w1, #0x7
     a78:	b.eq	a94 <ctf_name_table+0x28>  // b.none
     a7c:	cmp	w1, #0x6
     a80:	b.ne	a9c <ctf_name_table+0x30>  // b.any
     a84:	add	x0, x0, #0x98
     a88:	ret
     a8c:	add	x0, x0, #0xb8
     a90:	ret
     a94:	add	x0, x0, #0xa8
     a98:	ret
     a9c:	add	x0, x0, #0xc8
     aa0:	ret

0000000000000aa4 <ctf_dtd_insert>:
     aa4:	stp	x29, x30, [sp, #-48]!
     aa8:	stp	x20, x19, [sp, #32]
     aac:	mov	x19, x1
     ab0:	mov	x20, x0
     ab4:	ldr	x0, [x0, #568]
     ab8:	ldr	x1, [x1, #16]
     abc:	str	x21, [sp, #16]
     ac0:	mov	w21, w2
     ac4:	mov	x2, x19
     ac8:	mov	x29, sp
     acc:	bl	0 <ctf_dynhash_insert>
     ad0:	tbnz	w0, #31, b58 <ctf_dtd_insert+0xb4>
     ad4:	ldr	w1, [x19, #24]
     ad8:	cbz	w1, b18 <ctf_dtd_insert+0x74>
     adc:	mov	x0, x20
     ae0:	bl	0 <ctf_strraw>
     ae4:	cbz	x0, b18 <ctf_dtd_insert+0x74>
     ae8:	mov	x1, x0
     aec:	cmp	w21, #0x8
     af0:	b.eq	b38 <ctf_dtd_insert+0x94>  // b.none
     af4:	cmp	w21, #0x7
     af8:	b.eq	b6c <ctf_dtd_insert+0xc8>  // b.none
     afc:	cmp	w21, #0x6
     b00:	b.ne	b84 <ctf_dtd_insert+0xe0>  // b.any
     b04:	add	x8, x20, #0x98
     b08:	ldr	x0, [x8, #8]
     b0c:	ldr	x2, [x19, #16]
     b10:	bl	0 <ctf_dynhash_insert>
     b14:	tbnz	w0, #31, b4c <ctf_dtd_insert+0xa8>
     b18:	add	x0, x20, #0x240
     b1c:	mov	x1, x19
     b20:	bl	0 <ctf_list_append>
     b24:	mov	w0, wzr
     b28:	ldp	x20, x19, [sp, #32]
     b2c:	ldr	x21, [sp, #16]
     b30:	ldp	x29, x30, [sp], #48
     b34:	ret
     b38:	add	x8, x20, #0xb8
     b3c:	ldr	x0, [x8, #8]
     b40:	ldr	x2, [x19, #16]
     b44:	bl	0 <ctf_dynhash_insert>
     b48:	tbz	w0, #31, b18 <ctf_dtd_insert+0x74>
     b4c:	ldr	x0, [x20, #568]
     b50:	ldr	x1, [x19, #16]
     b54:	bl	0 <ctf_dynhash_remove>
     b58:	mov	w0, #0xffffffff            	// #-1
     b5c:	ldp	x20, x19, [sp, #32]
     b60:	ldr	x21, [sp, #16]
     b64:	ldp	x29, x30, [sp], #48
     b68:	ret
     b6c:	add	x8, x20, #0xa8
     b70:	ldr	x0, [x8, #8]
     b74:	ldr	x2, [x19, #16]
     b78:	bl	0 <ctf_dynhash_insert>
     b7c:	tbz	w0, #31, b18 <ctf_dtd_insert+0x74>
     b80:	b	b4c <ctf_dtd_insert+0xa8>
     b84:	add	x8, x20, #0xc8
     b88:	ldr	x0, [x8, #8]
     b8c:	ldr	x2, [x19, #16]
     b90:	bl	0 <ctf_dynhash_insert>
     b94:	tbz	w0, #31, b18 <ctf_dtd_insert+0x74>
     b98:	b	b4c <ctf_dtd_insert+0xa8>

0000000000000b9c <ctf_dtd_delete>:
     b9c:	stp	x29, x30, [sp, #-64]!
     ba0:	stp	x22, x21, [sp, #32]
     ba4:	stp	x20, x19, [sp, #48]
     ba8:	ldr	x8, [x0]
     bac:	mov	x20, x0
     bb0:	ldr	w0, [x1, #28]
     bb4:	str	x23, [sp, #16]
     bb8:	ldr	x8, [x8]
     bbc:	mov	x29, sp
     bc0:	mov	x19, x1
     bc4:	blr	x8
     bc8:	ldr	x8, [x20, #568]
     bcc:	ldr	x1, [x19, #16]
     bd0:	mov	w21, w0
     bd4:	mov	x0, x8
     bd8:	bl	0 <ctf_dynhash_remove>
     bdc:	sub	w8, w21, #0x6
     be0:	cmp	w8, #0x3
     be4:	b.cs	c18 <ctf_dtd_delete+0x7c>  // b.hs, b.nlast
     be8:	ldr	x22, [x19, #56]
     bec:	cbnz	x22, c08 <ctf_dtd_delete+0x6c>
     bf0:	b	c28 <ctf_dtd_delete+0x8c>
     bf4:	ldr	x23, [x22, #8]
     bf8:	mov	x0, x22
     bfc:	bl	0 <free>
     c00:	mov	x22, x23
     c04:	cbz	x23, c28 <ctf_dtd_delete+0x8c>
     c08:	ldr	x0, [x22, #16]
     c0c:	cbz	x0, bf4 <ctf_dtd_delete+0x58>
     c10:	bl	0 <free>
     c14:	b	bf4 <ctf_dtd_delete+0x58>
     c18:	cmp	w21, #0x5
     c1c:	b.ne	c28 <ctf_dtd_delete+0x8c>  // b.any
     c20:	ldr	x0, [x19, #48]
     c24:	bl	0 <free>
     c28:	mov	x22, x19
     c2c:	ldr	w1, [x22, #24]!
     c30:	cbz	w1, c94 <ctf_dtd_delete+0xf8>
     c34:	mov	x0, x20
     c38:	bl	0 <ctf_strraw>
     c3c:	cbz	x0, c94 <ctf_dtd_delete+0xf8>
     c40:	mov	x23, x0
     c44:	cmp	w21, #0x8
     c48:	b.eq	c64 <ctf_dtd_delete+0xc8>  // b.none
     c4c:	cmp	w21, #0x7
     c50:	b.eq	c6c <ctf_dtd_delete+0xd0>  // b.none
     c54:	cmp	w21, #0x6
     c58:	b.ne	c74 <ctf_dtd_delete+0xd8>  // b.any
     c5c:	add	x8, x20, #0x98
     c60:	b	c78 <ctf_dtd_delete+0xdc>
     c64:	add	x8, x20, #0xb8
     c68:	b	c78 <ctf_dtd_delete+0xdc>
     c6c:	add	x8, x20, #0xa8
     c70:	b	c78 <ctf_dtd_delete+0xdc>
     c74:	add	x8, x20, #0xc8
     c78:	ldr	x0, [x8, #8]
     c7c:	mov	x1, x23
     c80:	bl	0 <ctf_dynhash_remove>
     c84:	mov	x0, x20
     c88:	mov	x1, x23
     c8c:	mov	x2, x22
     c90:	bl	0 <ctf_str_remove_ref>
     c94:	add	x0, x20, #0x240
     c98:	mov	x1, x19
     c9c:	bl	0 <ctf_list_delete>
     ca0:	mov	x0, x19
     ca4:	ldp	x20, x19, [sp, #48]
     ca8:	ldp	x22, x21, [sp, #32]
     cac:	ldr	x23, [sp, #16]
     cb0:	ldp	x29, x30, [sp], #64
     cb4:	b	0 <free>

0000000000000cb8 <ctf_dtd_lookup>:
     cb8:	ldr	x0, [x0, #568]
     cbc:	b	0 <ctf_dynhash_lookup>

0000000000000cc0 <ctf_dynamic_type>:
     cc0:	ldr	w8, [x0, #552]
     cc4:	tbz	w8, #1, cf0 <ctf_dynamic_type+0x30>
     cc8:	tbz	w8, #0, cdc <ctf_dynamic_type+0x1c>
     ccc:	ldr	w8, [x0, #544]
     cd0:	cmp	x8, x1
     cd4:	b.cc	cdc <ctf_dynamic_type+0x1c>  // b.lo, b.ul, b.last
     cd8:	ldr	x0, [x0, #512]
     cdc:	ldr	w8, [x0, #544]
     ce0:	ldr	x9, [x0, #480]
     ce4:	and	x8, x8, x1
     ce8:	cmp	x8, x9
     cec:	b.ls	cf8 <ctf_dynamic_type+0x38>  // b.plast
     cf0:	mov	x0, xzr
     cf4:	ret
     cf8:	ldr	x0, [x0, #568]
     cfc:	b	0 <ctf_dynhash_lookup>

0000000000000d00 <ctf_dvd_insert>:
     d00:	stp	x29, x30, [sp, #-32]!
     d04:	stp	x20, x19, [sp, #16]
     d08:	mov	x19, x1
     d0c:	mov	x20, x0
     d10:	ldr	x0, [x0, #592]
     d14:	ldr	x1, [x1, #16]
     d18:	mov	x2, x19
     d1c:	mov	x29, sp
     d20:	bl	0 <ctf_dynhash_insert>
     d24:	tbnz	w0, #31, d44 <ctf_dvd_insert+0x44>
     d28:	add	x0, x20, #0x258
     d2c:	mov	x1, x19
     d30:	bl	0 <ctf_list_append>
     d34:	mov	w0, wzr
     d38:	ldp	x20, x19, [sp, #16]
     d3c:	ldp	x29, x30, [sp], #32
     d40:	ret
     d44:	mov	w0, #0xffffffff            	// #-1
     d48:	ldp	x20, x19, [sp, #16]
     d4c:	ldp	x29, x30, [sp], #32
     d50:	ret

0000000000000d54 <ctf_dvd_delete>:
     d54:	stp	x29, x30, [sp, #-32]!
     d58:	stp	x20, x19, [sp, #16]
     d5c:	mov	x19, x1
     d60:	mov	x20, x0
     d64:	ldr	x0, [x0, #592]
     d68:	ldr	x1, [x1, #16]
     d6c:	mov	x29, sp
     d70:	bl	0 <ctf_dynhash_remove>
     d74:	ldr	x0, [x19, #16]
     d78:	bl	0 <free>
     d7c:	add	x0, x20, #0x258
     d80:	mov	x1, x19
     d84:	bl	0 <ctf_list_delete>
     d88:	mov	x0, x19
     d8c:	ldp	x20, x19, [sp, #16]
     d90:	ldp	x29, x30, [sp], #32
     d94:	b	0 <free>

0000000000000d98 <ctf_dvd_lookup>:
     d98:	ldr	x0, [x0, #592]
     d9c:	b	0 <ctf_dynhash_lookup>

0000000000000da0 <ctf_discard>:
     da0:	ldrb	w8, [x0, #552]
     da4:	tbnz	w8, #2, db0 <ctf_discard+0x10>
     da8:	mov	w0, wzr
     dac:	ret
     db0:	ldr	x8, [x0, #632]
     db4:	ldr	x1, [x0, #616]
     db8:	add	x2, x8, #0x1
     dbc:	b	dc0 <ctf_rollback>

0000000000000dc0 <ctf_rollback>:
     dc0:	sub	sp, sp, #0x70
     dc4:	stp	x29, x30, [sp, #16]
     dc8:	stp	x28, x27, [sp, #32]
     dcc:	stp	x26, x25, [sp, #48]
     dd0:	stp	x24, x23, [sp, #64]
     dd4:	stp	x22, x21, [sp, #80]
     dd8:	stp	x20, x19, [sp, #96]
     ddc:	ldrb	w8, [x0, #552]
     de0:	mov	x19, x0
     de4:	add	x29, sp, #0x10
     de8:	tbnz	w8, #1, df4 <ctf_rollback+0x34>
     dec:	mov	w1, #0x40d                 	// #1037
     df0:	b	edc <ctf_rollback+0x11c>
     df4:	ldr	x8, [x19, #632]
     df8:	mov	x20, x2
     dfc:	cmp	x8, x2
     e00:	b.cs	ed8 <ctf_rollback+0x118>  // b.hs, b.nlast
     e04:	ldr	x22, [x19, #584]
     e08:	mov	x21, x1
     e0c:	cbz	x22, f04 <ctf_rollback+0x144>
     e10:	add	x8, x19, #0xa8
     e14:	add	x26, x19, #0xb8
     e18:	str	x8, [sp, #8]
     e1c:	add	x28, x19, #0x98
     e20:	add	x8, x19, #0xc8
     e24:	str	x8, [sp]
     e28:	b	e68 <ctf_rollback+0xa8>
     e2c:	ldr	x0, [x8, #8]
     e30:	mov	x1, x24
     e34:	bl	0 <ctf_dynhash_remove>
     e38:	mov	x0, x19
     e3c:	mov	x1, x24
     e40:	mov	x2, x23
     e44:	bl	0 <ctf_str_remove_ref>
     e48:	ldr	x0, [x19, #568]
     e4c:	ldr	x1, [x22, #16]
     e50:	bl	0 <ctf_dynhash_remove>
     e54:	mov	x0, x19
     e58:	mov	x1, x22
     e5c:	bl	b9c <ctf_dtd_delete>
     e60:	mov	x22, x27
     e64:	cbz	x27, f04 <ctf_rollback+0x144>
     e68:	ldp	x27, x8, [x22, #8]
     e6c:	ldr	w9, [x19, #544]
     e70:	and	x8, x8, x9
     e74:	cmp	x8, x21
     e78:	b.ls	e60 <ctf_rollback+0xa0>  // b.plast
     e7c:	ldr	x8, [x19]
     e80:	ldr	w0, [x22, #28]
     e84:	ldr	x8, [x8]
     e88:	blr	x8
     e8c:	mov	x23, x22
     e90:	ldr	w1, [x23, #24]!
     e94:	cbz	w1, e48 <ctf_rollback+0x88>
     e98:	mov	w25, w0
     e9c:	mov	x0, x19
     ea0:	bl	0 <ctf_strraw>
     ea4:	cbz	x0, e48 <ctf_rollback+0x88>
     ea8:	mov	x24, x0
     eac:	cmp	w25, #0x6
     eb0:	mov	x8, x28
     eb4:	b.eq	e2c <ctf_rollback+0x6c>  // b.none
     eb8:	cmp	w25, #0x8
     ebc:	mov	x8, x26
     ec0:	b.eq	e2c <ctf_rollback+0x6c>  // b.none
     ec4:	ldr	x8, [sp, #8]
     ec8:	cmp	w25, #0x7
     ecc:	b.eq	e2c <ctf_rollback+0x6c>  // b.none
     ed0:	ldr	x8, [sp]
     ed4:	b	e2c <ctf_rollback+0x6c>
     ed8:	mov	w1, #0x412                 	// #1042
     edc:	mov	x0, x19
     ee0:	bl	0 <ctf_set_errno>
     ee4:	ldp	x20, x19, [sp, #96]
     ee8:	ldp	x22, x21, [sp, #80]
     eec:	ldp	x24, x23, [sp, #64]
     ef0:	ldp	x26, x25, [sp, #48]
     ef4:	ldp	x28, x27, [sp, #32]
     ef8:	ldp	x29, x30, [sp, #16]
     efc:	add	sp, sp, #0x70
     f00:	ret
     f04:	ldr	x22, [x19, #608]
     f08:	cbz	x22, f58 <ctf_rollback+0x198>
     f0c:	add	x23, x19, #0x258
     f10:	b	f1c <ctf_rollback+0x15c>
     f14:	mov	x22, x24
     f18:	cbz	x24, f58 <ctf_rollback+0x198>
     f1c:	ldr	x8, [x22, #32]
     f20:	ldr	x24, [x22, #8]
     f24:	cmp	x8, x20
     f28:	b.ls	f14 <ctf_rollback+0x154>  // b.plast
     f2c:	ldr	x0, [x19, #592]
     f30:	ldr	x1, [x22, #16]
     f34:	bl	0 <ctf_dynhash_remove>
     f38:	ldr	x0, [x22, #16]
     f3c:	bl	0 <free>
     f40:	mov	x0, x23
     f44:	mov	x1, x22
     f48:	bl	0 <ctf_list_delete>
     f4c:	mov	x0, x22
     f50:	bl	0 <free>
     f54:	b	f14 <ctf_rollback+0x154>
     f58:	ldr	x8, [x19, #632]
     f5c:	mov	w0, wzr
     f60:	str	x21, [x19, #480]
     f64:	str	x20, [x19, #624]
     f68:	cmp	x20, x8
     f6c:	b.ne	ee4 <ctf_rollback+0x124>  // b.any
     f70:	ldr	w8, [x19, #552]
     f74:	and	w8, w8, #0xfffffffb
     f78:	str	w8, [x19, #552]
     f7c:	b	ee4 <ctf_rollback+0x124>

0000000000000f80 <ctf_snapshot>:
     f80:	ldr	x1, [x0, #624]
     f84:	ldr	x8, [x0, #480]
     f88:	add	x9, x1, #0x1
     f8c:	str	x9, [x0, #624]
     f90:	mov	x0, x8
     f94:	ret

0000000000000f98 <ctf_add_slice>:
     f98:	sub	sp, sp, #0x40
     f9c:	stp	x22, x21, [sp, #32]
     fa0:	mov	x21, x0
     fa4:	stp	x29, x30, [sp, #16]
     fa8:	stp	x20, x19, [sp, #48]
     fac:	add	x29, sp, #0x10
     fb0:	str	x0, [sp]
     fb4:	cbz	x3, fec <ctf_add_slice+0x54>
     fb8:	ldr	w8, [x3, #8]
     fbc:	mov	x19, x3
     fc0:	cmp	w8, #0xff
     fc4:	b.hi	fd4 <ctf_add_slice+0x3c>  // b.pmore
     fc8:	ldr	w8, [x19, #4]
     fcc:	cmp	w8, #0x100
     fd0:	b.cc	fdc <ctf_add_slice+0x44>  // b.lo, b.ul, b.last
     fd4:	mov	w1, #0x416                 	// #1046
     fd8:	b	ff0 <ctf_add_slice+0x58>
     fdc:	mov	w8, #0xffffffff            	// #-1
     fe0:	mov	x20, x2
     fe4:	cmp	x2, x8
     fe8:	b.cc	100c <ctf_add_slice+0x74>  // b.lo, b.ul, b.last
     fec:	mov	w1, #0x16                  	// #22
     ff0:	mov	x0, x21
     ff4:	bl	0 <ctf_set_errno>
     ff8:	ldp	x20, x19, [sp, #48]
     ffc:	ldp	x22, x21, [sp, #32]
    1000:	ldp	x29, x30, [sp, #16]
    1004:	add	sp, sp, #0x40
    1008:	ret
    100c:	mov	w22, w1
    1010:	mov	x0, sp
    1014:	mov	x1, x20
    1018:	bl	0 <ctf_lookup_by_id>
    101c:	cbz	x0, 10d0 <ctf_add_slice+0x138>
    1020:	ldr	x0, [sp]
    1024:	mov	x1, x20
    1028:	bl	0 <ctf_type_kind_unsliced>
    102c:	cmp	w0, #0x8
    1030:	b.hi	10d8 <ctf_add_slice+0x140>  // b.pmore
    1034:	mov	w8, #0x1                   	// #1
    1038:	lsl	w8, w8, w0
    103c:	mov	w9, #0x106                 	// #262
    1040:	tst	w8, w9
    1044:	b.eq	10d8 <ctf_add_slice+0x140>  // b.none
    1048:	add	x4, sp, #0x8
    104c:	mov	w3, #0xe                   	// #14
    1050:	mov	x0, x21
    1054:	mov	w1, w22
    1058:	mov	x2, xzr
    105c:	bl	10e0 <ctf_add_generic>
    1060:	cmn	x0, #0x1
    1064:	b.eq	ff8 <ctf_add_slice+0x60>  // b.none
    1068:	ldr	x8, [sp, #8]
    106c:	cmp	w22, #0x0
    1070:	mov	w9, #0x3a000000            	// #973078528
    1074:	mov	w10, #0x38000000            	// #939524096
    1078:	csel	w9, w10, w9, eq  // eq = none
    107c:	str	w9, [x8, #28]
    1080:	ldr	w9, [x19, #8]
    1084:	str	w20, [x8, #48]
    1088:	neg	w9, w9
    108c:	and	w9, w9, #0xfffffff8
    1090:	neg	w9, w9
    1094:	lsr	w9, w9, #3
    1098:	sub	x9, x9, #0x1
    109c:	orr	x9, x9, x9, lsr #1
    10a0:	orr	x9, x9, x9, lsr #2
    10a4:	orr	x9, x9, x9, lsr #4
    10a8:	orr	x9, x9, x9, lsr #8
    10ac:	lsr	x10, x9, #16
    10b0:	orr	w9, w10, w9
    10b4:	add	w9, w9, #0x1
    10b8:	str	w9, [x8, #32]
    10bc:	ldr	w9, [x19, #8]
    10c0:	strh	w9, [x8, #54]
    10c4:	ldr	w9, [x19, #4]
    10c8:	strh	w9, [x8, #52]
    10cc:	b	ff8 <ctf_add_slice+0x60>
    10d0:	mov	x0, #0xffffffffffffffff    	// #-1
    10d4:	b	ff8 <ctf_add_slice+0x60>
    10d8:	mov	w1, #0x3fe                 	// #1022
    10dc:	b	ff0 <ctf_add_slice+0x58>

00000000000010e0 <ctf_add_generic>:
    10e0:	stp	x29, x30, [sp, #-64]!
    10e4:	stp	x20, x19, [sp, #48]
    10e8:	cmp	w1, #0x2
    10ec:	mov	x19, x0
    10f0:	stp	x24, x23, [sp, #16]
    10f4:	stp	x22, x21, [sp, #32]
    10f8:	mov	x29, sp
    10fc:	b.cc	1108 <ctf_add_generic+0x28>  // b.lo, b.ul, b.last
    1100:	mov	w1, #0x16                  	// #22
    1104:	b	1144 <ctf_add_generic+0x64>
    1108:	ldrb	w8, [x19, #552]
    110c:	tbnz	w8, #1, 1118 <ctf_add_generic+0x38>
    1110:	mov	w1, #0x40d                 	// #1037
    1114:	b	1144 <ctf_add_generic+0x64>
    1118:	ldr	w8, [x19, #544]
    111c:	ldr	x9, [x19, #480]
    1120:	mov	w10, #0xfffffffe            	// #-2
    1124:	add	w8, w8, #0x1
    1128:	orr	x8, x9, x8
    112c:	cmp	x8, x10
    1130:	b.cs	1140 <ctf_add_generic+0x60>  // b.hs, b.nlast
    1134:	mov	w10, #0x7ffffffe            	// #2147483646
    1138:	cmp	x8, x10
    113c:	b.ne	115c <ctf_add_generic+0x7c>  // b.any
    1140:	mov	w1, #0x40f                 	// #1039
    1144:	mov	x0, x19
    1148:	ldp	x20, x19, [sp, #48]
    114c:	ldp	x22, x21, [sp, #32]
    1150:	ldp	x24, x23, [sp, #16]
    1154:	ldp	x29, x30, [sp], #64
    1158:	b	0 <ctf_set_errno>
    115c:	ldp	x0, x8, [x19, #448]
    1160:	mov	x20, x4
    1164:	mov	w21, w3
    1168:	mov	x22, x2
    116c:	cbz	x0, 1190 <ctf_add_generic+0xb0>
    1170:	add	x9, x9, #0x2
    1174:	cmp	x9, x8
    1178:	b.ls	11dc <ctf_add_generic+0xfc>  // b.plast
    117c:	ucvtf	d0, x8
    1180:	fmov	d1, #1.250000000000000000e+00
    1184:	fmul	d0, d0, d1
    1188:	fcvtzu	x23, d0
    118c:	b	1194 <ctf_add_generic+0xb4>
    1190:	mov	w23, #0x400                 	// #1024
    1194:	cmp	x23, x8
    1198:	b.eq	11dc <ctf_add_generic+0xfc>  // b.none
    119c:	lsl	x1, x23, #2
    11a0:	bl	0 <realloc>
    11a4:	cbz	x0, 11cc <ctf_add_generic+0xec>
    11a8:	ldr	x8, [x19, #456]
    11ac:	str	x0, [x19, #448]
    11b0:	mov	w1, wzr
    11b4:	add	x0, x0, x8, lsl #2
    11b8:	sub	x8, x23, x8
    11bc:	lsl	x2, x8, #2
    11c0:	bl	0 <memset>
    11c4:	str	x23, [x19, #456]
    11c8:	b	11dc <ctf_add_generic+0xfc>
    11cc:	mov	w1, #0xc                   	// #12
    11d0:	mov	x0, x19
    11d4:	bl	0 <ctf_set_errno>
    11d8:	tbnz	w0, #31, 128c <ctf_add_generic+0x1ac>
    11dc:	mov	w0, #0x48                  	// #72
    11e0:	bl	0 <malloc>
    11e4:	cbz	x0, 127c <ctf_add_generic+0x19c>
    11e8:	ldr	x8, [x19, #480]
    11ec:	ldrb	w9, [x19, #552]
    11f0:	mov	x23, x0
    11f4:	add	x24, x8, #0x1
    11f8:	str	x24, [x19, #480]
    11fc:	tbz	w9, #0, 120c <ctf_add_generic+0x12c>
    1200:	ldr	w8, [x19, #544]
    1204:	add	w8, w8, #0x1
    1208:	orr	x24, x24, x8
    120c:	movi	v0.2d, #0x0
    1210:	add	x2, x23, #0x18
    1214:	mov	x0, x19
    1218:	mov	x1, x22
    121c:	str	xzr, [x23, #64]
    1220:	stp	q0, q0, [x23, #32]
    1224:	stp	q0, q0, [x23]
    1228:	bl	0 <ctf_str_add_ref>
    122c:	str	w0, [x23, #24]
    1230:	str	x24, [x23, #16]
    1234:	cbz	x22, 1254 <ctf_add_generic+0x174>
    1238:	cbnz	w0, 1254 <ctf_add_generic+0x174>
    123c:	ldrb	w8, [x22]
    1240:	cbz	w8, 1254 <ctf_add_generic+0x174>
    1244:	mov	x0, x23
    1248:	bl	0 <free>
    124c:	mov	w1, #0xb                   	// #11
    1250:	b	1144 <ctf_add_generic+0x64>
    1254:	mov	x0, x19
    1258:	mov	x1, x23
    125c:	mov	w2, w21
    1260:	bl	aa4 <ctf_dtd_insert>
    1264:	tbnz	w0, #31, 1284 <ctf_add_generic+0x1a4>
    1268:	ldr	w8, [x19, #552]
    126c:	orr	w8, w8, #0x4
    1270:	str	w8, [x19, #552]
    1274:	str	x23, [x20]
    1278:	b	1290 <ctf_add_generic+0x1b0>
    127c:	mov	w1, #0xb                   	// #11
    1280:	b	1144 <ctf_add_generic+0x64>
    1284:	mov	x0, x23
    1288:	bl	0 <free>
    128c:	mov	x24, #0xffffffffffffffff    	// #-1
    1290:	mov	x0, x24
    1294:	ldp	x20, x19, [sp, #48]
    1298:	ldp	x22, x21, [sp, #32]
    129c:	ldp	x24, x23, [sp, #16]
    12a0:	ldp	x29, x30, [sp], #64
    12a4:	ret

00000000000012a8 <ctf_add_integer>:
    12a8:	sub	sp, sp, #0x30
    12ac:	stp	x29, x30, [sp, #16]
    12b0:	stp	x20, x19, [sp, #32]
    12b4:	add	x29, sp, #0x10
    12b8:	cbz	x3, 1348 <ctf_add_integer+0xa0>
    12bc:	mov	x19, x3
    12c0:	add	x4, sp, #0x8
    12c4:	mov	w3, #0x1                   	// #1
    12c8:	mov	w20, w1
    12cc:	bl	10e0 <ctf_add_generic>
    12d0:	cmn	x0, #0x1
    12d4:	b.eq	1338 <ctf_add_integer+0x90>  // b.none
    12d8:	ldr	x8, [sp, #8]
    12dc:	cmp	w20, #0x0
    12e0:	mov	w9, #0x6000000             	// #100663296
    12e4:	mov	w10, #0x4000000             	// #67108864
    12e8:	csel	w9, w10, w9, eq  // eq = none
    12ec:	str	w9, [x8, #28]
    12f0:	ldr	w9, [x19, #8]
    12f4:	neg	w9, w9
    12f8:	and	w9, w9, #0xfffffff8
    12fc:	neg	w9, w9
    1300:	lsr	w9, w9, #3
    1304:	sub	x9, x9, #0x1
    1308:	orr	x9, x9, x9, lsr #1
    130c:	orr	x9, x9, x9, lsr #2
    1310:	orr	x9, x9, x9, lsr #4
    1314:	orr	x9, x9, x9, lsr #8
    1318:	lsr	x10, x9, #16
    131c:	orr	w9, w10, w9
    1320:	add	w9, w9, #0x1
    1324:	str	w9, [x8, #32]
    1328:	ldr	w9, [x19, #8]
    132c:	ldr	x10, [x19]
    1330:	str	w9, [x8, #56]
    1334:	str	x10, [x8, #48]
    1338:	ldp	x20, x19, [sp, #32]
    133c:	ldp	x29, x30, [sp, #16]
    1340:	add	sp, sp, #0x30
    1344:	ret
    1348:	mov	w1, #0x16                  	// #22
    134c:	bl	0 <ctf_set_errno>
    1350:	ldp	x20, x19, [sp, #32]
    1354:	ldp	x29, x30, [sp, #16]
    1358:	add	sp, sp, #0x30
    135c:	ret

0000000000001360 <ctf_add_float>:
    1360:	sub	sp, sp, #0x30
    1364:	stp	x29, x30, [sp, #16]
    1368:	stp	x20, x19, [sp, #32]
    136c:	add	x29, sp, #0x10
    1370:	cbz	x3, 1400 <ctf_add_float+0xa0>
    1374:	mov	x19, x3
    1378:	add	x4, sp, #0x8
    137c:	mov	w3, #0x2                   	// #2
    1380:	mov	w20, w1
    1384:	bl	10e0 <ctf_add_generic>
    1388:	cmn	x0, #0x1
    138c:	b.eq	13f0 <ctf_add_float+0x90>  // b.none
    1390:	ldr	x8, [sp, #8]
    1394:	cmp	w20, #0x0
    1398:	mov	w9, #0xa000000             	// #167772160
    139c:	mov	w10, #0x8000000             	// #134217728
    13a0:	csel	w9, w10, w9, eq  // eq = none
    13a4:	str	w9, [x8, #28]
    13a8:	ldr	w9, [x19, #8]
    13ac:	neg	w9, w9
    13b0:	and	w9, w9, #0xfffffff8
    13b4:	neg	w9, w9
    13b8:	lsr	w9, w9, #3
    13bc:	sub	x9, x9, #0x1
    13c0:	orr	x9, x9, x9, lsr #1
    13c4:	orr	x9, x9, x9, lsr #2
    13c8:	orr	x9, x9, x9, lsr #4
    13cc:	orr	x9, x9, x9, lsr #8
    13d0:	lsr	x10, x9, #16
    13d4:	orr	w9, w10, w9
    13d8:	add	w9, w9, #0x1
    13dc:	str	w9, [x8, #32]
    13e0:	ldr	w9, [x19, #8]
    13e4:	ldr	x10, [x19]
    13e8:	str	w9, [x8, #56]
    13ec:	str	x10, [x8, #48]
    13f0:	ldp	x20, x19, [sp, #32]
    13f4:	ldp	x29, x30, [sp, #16]
    13f8:	add	sp, sp, #0x30
    13fc:	ret
    1400:	mov	w1, #0x16                  	// #22
    1404:	bl	0 <ctf_set_errno>
    1408:	ldp	x20, x19, [sp, #32]
    140c:	ldp	x29, x30, [sp, #16]
    1410:	add	sp, sp, #0x30
    1414:	ret

0000000000001418 <ctf_add_pointer>:
    1418:	mov	w3, #0x3                   	// #3
    141c:	b	1420 <ctf_add_reftype>

0000000000001420 <ctf_add_reftype>:
    1420:	sub	sp, sp, #0x50
    1424:	mov	w8, #0xffffffff            	// #-1
    1428:	stp	x20, x19, [sp, #64]
    142c:	mov	x20, x0
    1430:	cmp	x2, x8
    1434:	stp	x29, x30, [sp, #16]
    1438:	stp	x24, x23, [sp, #32]
    143c:	stp	x22, x21, [sp, #48]
    1440:	add	x29, sp, #0x10
    1444:	str	x0, [sp]
    1448:	b.cc	1460 <ctf_add_reftype+0x40>  // b.lo, b.ul, b.last
    144c:	mov	w1, #0x16                  	// #22
    1450:	mov	x0, x20
    1454:	bl	0 <ctf_set_errno>
    1458:	mov	x19, x0
    145c:	b	1558 <ctf_add_reftype+0x138>
    1460:	ldr	w24, [x20, #552]
    1464:	mov	w23, w1
    1468:	mov	x0, sp
    146c:	mov	x1, x2
    1470:	mov	w22, w3
    1474:	mov	x21, x2
    1478:	bl	0 <ctf_lookup_by_id>
    147c:	cbz	x0, 1554 <ctf_add_reftype+0x134>
    1480:	add	x4, sp, #0x8
    1484:	mov	x0, x20
    1488:	mov	w1, w23
    148c:	mov	x2, xzr
    1490:	mov	w3, w22
    1494:	bl	10e0 <ctf_add_generic>
    1498:	mov	x19, x0
    149c:	cmn	x0, #0x1
    14a0:	b.eq	1558 <ctf_add_reftype+0x138>  // b.none
    14a4:	cmp	w23, #0x0
    14a8:	ldr	x23, [sp, #8]
    14ac:	cset	w8, ne  // ne = any
    14b0:	lsl	w8, w8, #25
    14b4:	cmp	w22, #0x3
    14b8:	bfi	w8, w22, #26, #6
    14bc:	stp	w8, w21, [x23, #28]
    14c0:	b.ne	1558 <ctf_add_reftype+0x138>  // b.any
    14c4:	ldr	w8, [x20, #544]
    14c8:	and	w10, w24, #0x1
    14cc:	cmp	x8, x21
    14d0:	cset	w9, cs  // cs = hs, nlast
    14d4:	cmp	w10, w9
    14d8:	b.eq	1558 <ctf_add_reftype+0x138>  // b.none
    14dc:	ldr	x10, [x20, #480]
    14e0:	mov	w9, w21
    14e4:	and	x9, x8, x9
    14e8:	cmp	x10, x9
    14ec:	b.ls	1558 <ctf_add_reftype+0x138>  // b.plast
    14f0:	ldr	x10, [x20, #448]
    14f4:	and	w21, w8, w19
    14f8:	str	w21, [x10, x9, lsl #2]
    14fc:	ldr	x8, [sp]
    1500:	cmp	x8, x20
    1504:	b.ne	1558 <ctf_add_reftype+0x138>  // b.any
    1508:	ldr	x8, [x20]
    150c:	ldp	w0, w24, [x23, #28]
    1510:	ldr	w22, [x20, #544]
    1514:	ldr	x8, [x8]
    1518:	blr	x8
    151c:	cmp	w0, #0xa
    1520:	b.ne	1558 <ctf_add_reftype+0x138>  // b.any
    1524:	ldr	w1, [x23, #24]
    1528:	mov	x0, x20
    152c:	bl	0 <ctf_strptr>
    1530:	ldrb	w8, [x0]
    1534:	cbnz	w8, 1558 <ctf_add_reftype+0x138>
    1538:	ldr	x9, [x20, #480]
    153c:	and	w8, w22, w24
    1540:	cmp	x9, x8
    1544:	b.ls	1558 <ctf_add_reftype+0x138>  // b.plast
    1548:	ldr	x9, [x20, #448]
    154c:	str	w21, [x9, x8, lsl #2]
    1550:	b	1558 <ctf_add_reftype+0x138>
    1554:	mov	x19, #0xffffffffffffffff    	// #-1
    1558:	mov	x0, x19
    155c:	ldp	x20, x19, [sp, #64]
    1560:	ldp	x22, x21, [sp, #48]
    1564:	ldp	x24, x23, [sp, #32]
    1568:	ldp	x29, x30, [sp, #16]
    156c:	add	sp, sp, #0x50
    1570:	ret

0000000000001574 <ctf_add_array>:
    1574:	sub	sp, sp, #0x40
    1578:	str	x21, [sp, #32]
    157c:	mov	x21, x0
    1580:	stp	x29, x30, [sp, #16]
    1584:	stp	x20, x19, [sp, #48]
    1588:	add	x29, sp, #0x10
    158c:	str	x0, [sp, #8]
    1590:	cbz	x2, 160c <ctf_add_array+0x98>
    1594:	mov	w20, w1
    1598:	ldr	x1, [x2]
    159c:	add	x0, sp, #0x8
    15a0:	mov	x19, x2
    15a4:	bl	0 <ctf_lookup_by_id>
    15a8:	cbz	x0, 161c <ctf_add_array+0xa8>
    15ac:	str	x21, [sp, #8]
    15b0:	ldr	x1, [x19, #8]
    15b4:	add	x0, sp, #0x8
    15b8:	bl	0 <ctf_lookup_by_id>
    15bc:	cbz	x0, 161c <ctf_add_array+0xa8>
    15c0:	add	x4, x29, #0x18
    15c4:	mov	w3, #0x4                   	// #4
    15c8:	mov	x0, x21
    15cc:	mov	w1, w20
    15d0:	mov	x2, xzr
    15d4:	bl	10e0 <ctf_add_generic>
    15d8:	cmn	x0, #0x1
    15dc:	b.eq	1620 <ctf_add_array+0xac>  // b.none
    15e0:	ldr	x8, [x29, #24]
    15e4:	cmp	w20, #0x0
    15e8:	mov	w9, #0x12000000            	// #301989888
    15ec:	mov	w10, #0x10000000            	// #268435456
    15f0:	csel	w9, w10, w9, eq  // eq = none
    15f4:	stp	w9, wzr, [x8, #28]
    15f8:	ldr	x9, [x19, #16]
    15fc:	ldr	q0, [x19]
    1600:	str	x9, [x8, #64]
    1604:	str	q0, [x8, #48]
    1608:	b	1620 <ctf_add_array+0xac>
    160c:	mov	w1, #0x16                  	// #22
    1610:	mov	x0, x21
    1614:	bl	0 <ctf_set_errno>
    1618:	b	1620 <ctf_add_array+0xac>
    161c:	mov	x0, #0xffffffffffffffff    	// #-1
    1620:	ldp	x20, x19, [sp, #48]
    1624:	ldr	x21, [sp, #32]
    1628:	ldp	x29, x30, [sp, #16]
    162c:	add	sp, sp, #0x40
    1630:	ret

0000000000001634 <ctf_set_array>:
    1634:	stp	x29, x30, [sp, #-48]!
    1638:	stp	x20, x19, [sp, #32]
    163c:	mov	x19, x0
    1640:	ldr	x0, [x0, #568]
    1644:	str	x21, [sp, #16]
    1648:	mov	x29, sp
    164c:	mov	x20, x2
    1650:	bl	0 <ctf_dynhash_lookup>
    1654:	ldrb	w8, [x19, #552]
    1658:	tbnz	w8, #1, 1664 <ctf_set_array+0x30>
    165c:	mov	w1, #0x40d                 	// #1037
    1660:	b	16b8 <ctf_set_array+0x84>
    1664:	mov	x21, x0
    1668:	cbz	x0, 16b4 <ctf_set_array+0x80>
    166c:	ldr	x8, [x19]
    1670:	ldr	w0, [x21, #28]
    1674:	ldr	x8, [x8]
    1678:	blr	x8
    167c:	cmp	w0, #0x4
    1680:	b.ne	16b4 <ctf_set_array+0x80>  // b.any
    1684:	ldr	w8, [x19, #552]
    1688:	mov	w0, wzr
    168c:	orr	w8, w8, #0x4
    1690:	str	w8, [x19, #552]
    1694:	ldr	x8, [x20, #16]
    1698:	ldr	q0, [x20]
    169c:	str	x8, [x21, #64]
    16a0:	str	q0, [x21, #48]
    16a4:	ldp	x20, x19, [sp, #32]
    16a8:	ldr	x21, [sp, #16]
    16ac:	ldp	x29, x30, [sp], #48
    16b0:	ret
    16b4:	mov	w1, #0x3fa                 	// #1018
    16b8:	mov	x0, x19
    16bc:	bl	0 <ctf_set_errno>
    16c0:	ldp	x20, x19, [sp, #32]
    16c4:	ldr	x21, [sp, #16]
    16c8:	ldp	x29, x30, [sp], #48
    16cc:	ret

00000000000016d0 <ctf_add_function>:
    16d0:	sub	sp, sp, #0x50
    16d4:	stp	x22, x21, [sp, #48]
    16d8:	mov	x21, x0
    16dc:	stp	x29, x30, [sp, #16]
    16e0:	stp	x24, x23, [sp, #32]
    16e4:	stp	x20, x19, [sp, #64]
    16e8:	add	x29, sp, #0x10
    16ec:	str	x0, [sp]
    16f0:	cbz	x2, 1718 <ctf_add_function+0x48>
    16f4:	ldr	w8, [x2, #12]
    16f8:	mov	x19, x2
    16fc:	cmp	w8, #0x1
    1700:	b.hi	1718 <ctf_add_function+0x48>  // b.pmore
    1704:	ldr	w9, [x19, #8]
    1708:	mov	x20, x3
    170c:	mov	w22, w1
    1710:	cbnz	x3, 1744 <ctf_add_function+0x74>
    1714:	cbz	w9, 1744 <ctf_add_function+0x74>
    1718:	mov	w1, #0x16                  	// #22
    171c:	mov	x0, x21
    1720:	bl	0 <ctf_set_errno>
    1724:	mov	x21, x0
    1728:	mov	x0, x21
    172c:	ldp	x20, x19, [sp, #64]
    1730:	ldp	x22, x21, [sp, #48]
    1734:	ldp	x24, x23, [sp, #32]
    1738:	ldp	x29, x30, [sp, #16]
    173c:	add	sp, sp, #0x50
    1740:	ret
    1744:	ldr	x1, [x19]
    1748:	cmp	w8, #0x0
    174c:	mov	x0, sp
    1750:	cinc	w24, w9, ne  // ne = any
    1754:	bl	0 <ctf_lookup_by_id>
    1758:	cbz	x0, 179c <ctf_add_function+0xcc>
    175c:	ldr	w8, [x19, #8]
    1760:	cbz	w8, 178c <ctf_add_function+0xbc>
    1764:	mov	x23, xzr
    1768:	str	x21, [sp]
    176c:	ldr	x1, [x20, x23, lsl #3]
    1770:	mov	x0, sp
    1774:	bl	0 <ctf_lookup_by_id>
    1778:	cbz	x0, 179c <ctf_add_function+0xcc>
    177c:	ldr	w8, [x19, #8]
    1780:	add	x23, x23, #0x1
    1784:	cmp	x23, x8
    1788:	b.cc	1768 <ctf_add_function+0x98>  // b.lo, b.ul, b.last
    178c:	lsr	w8, w24, #24
    1790:	cbz	w8, 17a4 <ctf_add_function+0xd4>
    1794:	mov	w1, #0x4b                  	// #75
    1798:	b	171c <ctf_add_function+0x4c>
    179c:	mov	x21, #0xffffffffffffffff    	// #-1
    17a0:	b	1728 <ctf_add_function+0x58>
    17a4:	cbz	w24, 17c4 <ctf_add_function+0xf4>
    17a8:	mov	w8, w24
    17ac:	lsl	x0, x8, #3
    17b0:	bl	0 <malloc>
    17b4:	mov	x23, x0
    17b8:	cbnz	x0, 17c8 <ctf_add_function+0xf8>
    17bc:	mov	w1, #0xb                   	// #11
    17c0:	b	171c <ctf_add_function+0x4c>
    17c4:	mov	x23, xzr
    17c8:	add	x4, sp, #0x8
    17cc:	mov	w3, #0x5                   	// #5
    17d0:	mov	x0, x21
    17d4:	mov	w1, w22
    17d8:	mov	x2, xzr
    17dc:	bl	10e0 <ctf_add_generic>
    17e0:	mov	x21, x0
    17e4:	cmn	x0, #0x1
    17e8:	b.eq	183c <ctf_add_function+0x16c>  // b.none
    17ec:	cmp	w22, #0x0
    17f0:	ldr	x22, [sp, #8]
    17f4:	mov	w8, #0x16000000            	// #369098752
    17f8:	mov	w9, #0x14000000            	// #335544320
    17fc:	csel	w8, w9, w8, eq  // eq = none
    1800:	orr	w8, w24, w8
    1804:	str	w8, [x22, #28]
    1808:	ldr	x8, [x19]
    180c:	mov	x0, x23
    1810:	mov	x1, x20
    1814:	str	w8, [x22, #32]
    1818:	ldr	w8, [x19, #8]
    181c:	lsl	x2, x8, #3
    1820:	bl	0 <memcpy>
    1824:	ldrb	w8, [x19, #12]
    1828:	tbz	w8, #0, 1834 <ctf_add_function+0x164>
    182c:	sub	w8, w24, #0x1
    1830:	str	xzr, [x23, w8, uxtw #3]
    1834:	str	x23, [x22, #48]
    1838:	b	1728 <ctf_add_function+0x58>
    183c:	mov	x0, x23
    1840:	bl	0 <free>
    1844:	b	1728 <ctf_add_function+0x58>

0000000000001848 <ctf_add_struct_sized>:
    1848:	stp	x29, x30, [sp, #-64]!
    184c:	str	x23, [sp, #16]
    1850:	stp	x22, x21, [sp, #32]
    1854:	stp	x20, x19, [sp, #48]
    1858:	mov	x19, x3
    185c:	mov	x22, x2
    1860:	mov	w21, w1
    1864:	mov	x23, x0
    1868:	mov	x29, sp
    186c:	cbz	x2, 18b0 <ctf_add_struct_sized+0x68>
    1870:	mov	w1, #0x6                   	// #6
    1874:	mov	x0, x23
    1878:	mov	x2, x22
    187c:	bl	0 <ctf_lookup_by_rawname>
    1880:	cbz	x0, 18b0 <ctf_add_struct_sized+0x68>
    1884:	mov	x20, x0
    1888:	mov	x0, x23
    188c:	mov	x1, x20
    1890:	bl	0 <ctf_type_kind>
    1894:	cmp	w0, #0x9
    1898:	b.ne	18b0 <ctf_add_struct_sized+0x68>  // b.any
    189c:	ldr	x0, [x23, #568]
    18a0:	mov	x1, x20
    18a4:	bl	0 <ctf_dynhash_lookup>
    18a8:	str	x0, [x29, #24]
    18ac:	b	18d8 <ctf_add_struct_sized+0x90>
    18b0:	add	x4, x29, #0x18
    18b4:	mov	w3, #0x6                   	// #6
    18b8:	mov	x0, x23
    18bc:	mov	w1, w21
    18c0:	mov	x2, x22
    18c4:	bl	10e0 <ctf_add_generic>
    18c8:	mov	x20, x0
    18cc:	cmn	x0, #0x1
    18d0:	b.eq	190c <ctf_add_struct_sized+0xc4>  // b.none
    18d4:	ldr	x0, [x29, #24]
    18d8:	cmp	w21, #0x0
    18dc:	mov	w9, #0x1a000000            	// #436207616
    18e0:	mov	w10, #0x18000000            	// #402653184
    18e4:	mov	w8, #0xffffffff            	// #-1
    18e8:	csel	w9, w10, w9, eq  // eq = none
    18ec:	cmp	x19, x8
    18f0:	str	w9, [x0, #28]
    18f4:	b.cc	1908 <ctf_add_struct_sized+0xc0>  // b.lo, b.ul, b.last
    18f8:	lsr	x9, x19, #32
    18fc:	stp	w8, w9, [x0, #32]
    1900:	str	w19, [x0, #40]
    1904:	b	190c <ctf_add_struct_sized+0xc4>
    1908:	str	w19, [x0, #32]
    190c:	mov	x0, x20
    1910:	ldp	x20, x19, [sp, #48]
    1914:	ldp	x22, x21, [sp, #32]
    1918:	ldr	x23, [sp, #16]
    191c:	ldp	x29, x30, [sp], #64
    1920:	ret

0000000000001924 <ctf_add_struct>:
    1924:	sub	sp, sp, #0x40
    1928:	stp	x22, x21, [sp, #32]
    192c:	stp	x20, x19, [sp, #48]
    1930:	mov	x21, x2
    1934:	mov	w19, w1
    1938:	mov	x22, x0
    193c:	stp	x29, x30, [sp, #16]
    1940:	add	x29, sp, #0x10
    1944:	cbz	x2, 1988 <ctf_add_struct+0x64>
    1948:	mov	w1, #0x6                   	// #6
    194c:	mov	x0, x22
    1950:	mov	x2, x21
    1954:	bl	0 <ctf_lookup_by_rawname>
    1958:	cbz	x0, 1988 <ctf_add_struct+0x64>
    195c:	mov	x20, x0
    1960:	mov	x0, x22
    1964:	mov	x1, x20
    1968:	bl	0 <ctf_type_kind>
    196c:	cmp	w0, #0x9
    1970:	b.ne	1988 <ctf_add_struct+0x64>  // b.any
    1974:	ldr	x0, [x22, #568]
    1978:	mov	x1, x20
    197c:	bl	0 <ctf_dynhash_lookup>
    1980:	str	x0, [sp, #8]
    1984:	b	19b0 <ctf_add_struct+0x8c>
    1988:	add	x4, sp, #0x8
    198c:	mov	w3, #0x6                   	// #6
    1990:	mov	x0, x22
    1994:	mov	w1, w19
    1998:	mov	x2, x21
    199c:	bl	10e0 <ctf_add_generic>
    19a0:	mov	x20, x0
    19a4:	cmn	x0, #0x1
    19a8:	b.eq	19c4 <ctf_add_struct+0xa0>  // b.none
    19ac:	ldr	x0, [sp, #8]
    19b0:	cmp	w19, #0x0
    19b4:	mov	w8, #0x1a000000            	// #436207616
    19b8:	mov	w9, #0x18000000            	// #402653184
    19bc:	csel	w8, w9, w8, eq  // eq = none
    19c0:	stp	w8, wzr, [x0, #28]
    19c4:	mov	x0, x20
    19c8:	ldp	x20, x19, [sp, #48]
    19cc:	ldp	x22, x21, [sp, #32]
    19d0:	ldp	x29, x30, [sp, #16]
    19d4:	add	sp, sp, #0x40
    19d8:	ret

00000000000019dc <ctf_add_union_sized>:
    19dc:	stp	x29, x30, [sp, #-64]!
    19e0:	str	x23, [sp, #16]
    19e4:	stp	x22, x21, [sp, #32]
    19e8:	stp	x20, x19, [sp, #48]
    19ec:	mov	x19, x3
    19f0:	mov	x22, x2
    19f4:	mov	w21, w1
    19f8:	mov	x23, x0
    19fc:	mov	x29, sp
    1a00:	cbz	x2, 1a44 <ctf_add_union_sized+0x68>
    1a04:	mov	w1, #0x7                   	// #7
    1a08:	mov	x0, x23
    1a0c:	mov	x2, x22
    1a10:	bl	0 <ctf_lookup_by_rawname>
    1a14:	cbz	x0, 1a44 <ctf_add_union_sized+0x68>
    1a18:	mov	x20, x0
    1a1c:	mov	x0, x23
    1a20:	mov	x1, x20
    1a24:	bl	0 <ctf_type_kind>
    1a28:	cmp	w0, #0x9
    1a2c:	b.ne	1a44 <ctf_add_union_sized+0x68>  // b.any
    1a30:	ldr	x0, [x23, #568]
    1a34:	mov	x1, x20
    1a38:	bl	0 <ctf_dynhash_lookup>
    1a3c:	str	x0, [x29, #24]
    1a40:	b	1a6c <ctf_add_union_sized+0x90>
    1a44:	add	x4, x29, #0x18
    1a48:	mov	w3, #0x7                   	// #7
    1a4c:	mov	x0, x23
    1a50:	mov	w1, w21
    1a54:	mov	x2, x22
    1a58:	bl	10e0 <ctf_add_generic>
    1a5c:	mov	x20, x0
    1a60:	cmn	x0, #0x1
    1a64:	b.eq	1aa0 <ctf_add_union_sized+0xc4>  // b.none
    1a68:	ldr	x0, [x29, #24]
    1a6c:	cmp	w21, #0x0
    1a70:	mov	w9, #0x1e000000            	// #503316480
    1a74:	mov	w10, #0x1c000000            	// #469762048
    1a78:	mov	w8, #0xffffffff            	// #-1
    1a7c:	csel	w9, w10, w9, eq  // eq = none
    1a80:	cmp	x19, x8
    1a84:	str	w9, [x0, #28]
    1a88:	b.cc	1a9c <ctf_add_union_sized+0xc0>  // b.lo, b.ul, b.last
    1a8c:	lsr	x9, x19, #32
    1a90:	stp	w8, w9, [x0, #32]
    1a94:	str	w19, [x0, #40]
    1a98:	b	1aa0 <ctf_add_union_sized+0xc4>
    1a9c:	str	w19, [x0, #32]
    1aa0:	mov	x0, x20
    1aa4:	ldp	x20, x19, [sp, #48]
    1aa8:	ldp	x22, x21, [sp, #32]
    1aac:	ldr	x23, [sp, #16]
    1ab0:	ldp	x29, x30, [sp], #64
    1ab4:	ret

0000000000001ab8 <ctf_add_union>:
    1ab8:	sub	sp, sp, #0x40
    1abc:	stp	x22, x21, [sp, #32]
    1ac0:	stp	x20, x19, [sp, #48]
    1ac4:	mov	x21, x2
    1ac8:	mov	w19, w1
    1acc:	mov	x22, x0
    1ad0:	stp	x29, x30, [sp, #16]
    1ad4:	add	x29, sp, #0x10
    1ad8:	cbz	x2, 1b1c <ctf_add_union+0x64>
    1adc:	mov	w1, #0x7                   	// #7
    1ae0:	mov	x0, x22
    1ae4:	mov	x2, x21
    1ae8:	bl	0 <ctf_lookup_by_rawname>
    1aec:	cbz	x0, 1b1c <ctf_add_union+0x64>
    1af0:	mov	x20, x0
    1af4:	mov	x0, x22
    1af8:	mov	x1, x20
    1afc:	bl	0 <ctf_type_kind>
    1b00:	cmp	w0, #0x9
    1b04:	b.ne	1b1c <ctf_add_union+0x64>  // b.any
    1b08:	ldr	x0, [x22, #568]
    1b0c:	mov	x1, x20
    1b10:	bl	0 <ctf_dynhash_lookup>
    1b14:	str	x0, [sp, #8]
    1b18:	b	1b44 <ctf_add_union+0x8c>
    1b1c:	add	x4, sp, #0x8
    1b20:	mov	w3, #0x7                   	// #7
    1b24:	mov	x0, x22
    1b28:	mov	w1, w19
    1b2c:	mov	x2, x21
    1b30:	bl	10e0 <ctf_add_generic>
    1b34:	mov	x20, x0
    1b38:	cmn	x0, #0x1
    1b3c:	b.eq	1b58 <ctf_add_union+0xa0>  // b.none
    1b40:	ldr	x0, [sp, #8]
    1b44:	cmp	w19, #0x0
    1b48:	mov	w8, #0x1e000000            	// #503316480
    1b4c:	mov	w9, #0x1c000000            	// #469762048
    1b50:	csel	w8, w9, w8, eq  // eq = none
    1b54:	stp	w8, wzr, [x0, #28]
    1b58:	mov	x0, x20
    1b5c:	ldp	x20, x19, [sp, #48]
    1b60:	ldp	x22, x21, [sp, #32]
    1b64:	ldp	x29, x30, [sp, #16]
    1b68:	add	sp, sp, #0x40
    1b6c:	ret

0000000000001b70 <ctf_add_enum>:
    1b70:	sub	sp, sp, #0x40
    1b74:	stp	x22, x21, [sp, #32]
    1b78:	stp	x20, x19, [sp, #48]
    1b7c:	mov	x22, x2
    1b80:	mov	w20, w1
    1b84:	mov	x19, x0
    1b88:	stp	x29, x30, [sp, #16]
    1b8c:	add	x29, sp, #0x10
    1b90:	cbz	x2, 1bd4 <ctf_add_enum+0x64>
    1b94:	mov	w1, #0x8                   	// #8
    1b98:	mov	x0, x19
    1b9c:	mov	x2, x22
    1ba0:	bl	0 <ctf_lookup_by_rawname>
    1ba4:	cbz	x0, 1bd4 <ctf_add_enum+0x64>
    1ba8:	mov	x21, x0
    1bac:	mov	x0, x19
    1bb0:	mov	x1, x21
    1bb4:	bl	0 <ctf_type_kind>
    1bb8:	cmp	w0, #0x9
    1bbc:	b.ne	1bd4 <ctf_add_enum+0x64>  // b.any
    1bc0:	ldr	x0, [x19, #568]
    1bc4:	mov	x1, x21
    1bc8:	bl	0 <ctf_dynhash_lookup>
    1bcc:	str	x0, [sp, #8]
    1bd0:	b	1bfc <ctf_add_enum+0x8c>
    1bd4:	add	x4, sp, #0x8
    1bd8:	mov	w3, #0x8                   	// #8
    1bdc:	mov	x0, x19
    1be0:	mov	w1, w20
    1be4:	mov	x2, x22
    1be8:	bl	10e0 <ctf_add_generic>
    1bec:	mov	x21, x0
    1bf0:	cmn	x0, #0x1
    1bf4:	b.eq	1c1c <ctf_add_enum+0xac>  // b.none
    1bf8:	ldr	x0, [sp, #8]
    1bfc:	cmp	w20, #0x0
    1c00:	mov	w8, #0x22000000            	// #570425344
    1c04:	mov	w9, #0x20000000            	// #536870912
    1c08:	csel	w8, w9, w8, eq  // eq = none
    1c0c:	str	w8, [x0, #28]
    1c10:	ldr	x8, [x19, #488]
    1c14:	ldr	x8, [x8, #40]
    1c18:	str	w8, [x0, #32]
    1c1c:	mov	x0, x21
    1c20:	ldp	x20, x19, [sp, #48]
    1c24:	ldp	x22, x21, [sp, #32]
    1c28:	ldp	x29, x30, [sp, #16]
    1c2c:	add	sp, sp, #0x40
    1c30:	ret

0000000000001c34 <ctf_add_enum_encoded>:
    1c34:	stp	x29, x30, [sp, #-64]!
    1c38:	str	x23, [sp, #16]
    1c3c:	stp	x22, x21, [sp, #32]
    1c40:	stp	x20, x19, [sp, #48]
    1c44:	mov	x19, x3
    1c48:	mov	x23, x2
    1c4c:	mov	w21, w1
    1c50:	mov	x20, x0
    1c54:	mov	x29, sp
    1c58:	cbz	x2, 1cf8 <ctf_add_enum_encoded+0xc4>
    1c5c:	mov	w1, #0x8                   	// #8
    1c60:	mov	x0, x20
    1c64:	mov	x2, x23
    1c68:	bl	0 <ctf_lookup_by_rawname>
    1c6c:	cbz	x0, 1cb8 <ctf_add_enum_encoded+0x84>
    1c70:	mov	x22, x0
    1c74:	mov	x0, x20
    1c78:	mov	x1, x22
    1c7c:	bl	0 <ctf_type_kind>
    1c80:	cmp	w0, #0x9
    1c84:	b.eq	1d48 <ctf_add_enum_encoded+0x114>  // b.none
    1c88:	mov	x0, x20
    1c8c:	mov	x1, x22
    1c90:	bl	0 <ctf_type_kind_unsliced>
    1c94:	cmp	w0, #0x8
    1c98:	b.eq	1d48 <ctf_add_enum_encoded+0x114>  // b.none
    1c9c:	mov	x0, x20
    1ca0:	ldp	x20, x19, [sp, #48]
    1ca4:	ldp	x22, x21, [sp, #32]
    1ca8:	ldr	x23, [sp, #16]
    1cac:	mov	w1, #0x3fe                 	// #1022
    1cb0:	ldp	x29, x30, [sp], #64
    1cb4:	b	0 <ctf_set_errno>
    1cb8:	mov	w1, #0x8                   	// #8
    1cbc:	mov	x0, x20
    1cc0:	mov	x2, x23
    1cc4:	bl	0 <ctf_lookup_by_rawname>
    1cc8:	cbz	x0, 1cf8 <ctf_add_enum_encoded+0xc4>
    1ccc:	mov	x22, x0
    1cd0:	mov	x0, x20
    1cd4:	mov	x1, x22
    1cd8:	bl	0 <ctf_type_kind>
    1cdc:	cmp	w0, #0x9
    1ce0:	b.ne	1cf8 <ctf_add_enum_encoded+0xc4>  // b.any
    1ce4:	ldr	x0, [x20, #568]
    1ce8:	mov	x1, x22
    1cec:	bl	0 <ctf_dynhash_lookup>
    1cf0:	str	x0, [x29, #24]
    1cf4:	b	1d20 <ctf_add_enum_encoded+0xec>
    1cf8:	add	x4, x29, #0x18
    1cfc:	mov	w3, #0x8                   	// #8
    1d00:	mov	x0, x20
    1d04:	mov	w1, w21
    1d08:	mov	x2, x23
    1d0c:	bl	10e0 <ctf_add_generic>
    1d10:	cmn	x0, #0x1
    1d14:	b.eq	1d6c <ctf_add_enum_encoded+0x138>  // b.none
    1d18:	mov	x22, x0
    1d1c:	ldr	x0, [x29, #24]
    1d20:	cmp	w21, #0x0
    1d24:	mov	w8, #0x22000000            	// #570425344
    1d28:	mov	w9, #0x20000000            	// #536870912
    1d2c:	csel	w8, w9, w8, eq  // eq = none
    1d30:	str	w8, [x0, #28]
    1d34:	ldr	x8, [x20, #488]
    1d38:	cmn	x22, #0x1
    1d3c:	ldr	x8, [x8, #40]
    1d40:	str	w8, [x0, #32]
    1d44:	b.eq	1d6c <ctf_add_enum_encoded+0x138>  // b.none
    1d48:	mov	x0, x20
    1d4c:	mov	w1, w21
    1d50:	mov	x2, x22
    1d54:	mov	x3, x19
    1d58:	ldp	x20, x19, [sp, #48]
    1d5c:	ldp	x22, x21, [sp, #32]
    1d60:	ldr	x23, [sp, #16]
    1d64:	ldp	x29, x30, [sp], #64
    1d68:	b	f98 <ctf_add_slice>
    1d6c:	ldp	x20, x19, [sp, #48]
    1d70:	ldp	x22, x21, [sp, #32]
    1d74:	ldr	x23, [sp, #16]
    1d78:	mov	x0, #0xffffffffffffffff    	// #-1
    1d7c:	ldp	x29, x30, [sp], #64
    1d80:	ret

0000000000001d84 <ctf_add_forward>:
    1d84:	sub	sp, sp, #0x40
    1d88:	sub	w8, w3, #0x6
    1d8c:	stp	x22, x21, [sp, #32]
    1d90:	cmp	w8, #0x3
    1d94:	mov	x21, x0
    1d98:	stp	x29, x30, [sp, #16]
    1d9c:	stp	x20, x19, [sp, #48]
    1da0:	add	x29, sp, #0x10
    1da4:	b.cs	1dec <ctf_add_forward+0x68>  // b.hs, b.nlast
    1da8:	mov	w19, w3
    1dac:	mov	x22, x2
    1db0:	mov	w20, w1
    1db4:	cbz	x2, 1dfc <ctf_add_forward+0x78>
    1db8:	mov	x0, x21
    1dbc:	mov	w1, w19
    1dc0:	mov	x2, x22
    1dc4:	bl	0 <ctf_lookup_by_rawname>
    1dc8:	add	x4, sp, #0x8
    1dcc:	mov	w3, #0x9                   	// #9
    1dd0:	mov	x0, x21
    1dd4:	mov	w1, w20
    1dd8:	mov	x2, x22
    1ddc:	bl	10e0 <ctf_add_generic>
    1de0:	cmn	x0, #0x1
    1de4:	b.ne	1e1c <ctf_add_forward+0x98>  // b.any
    1de8:	b	1e34 <ctf_add_forward+0xb0>
    1dec:	mov	w1, #0x3fd                 	// #1021
    1df0:	mov	x0, x21
    1df4:	bl	0 <ctf_set_errno>
    1df8:	b	1e34 <ctf_add_forward+0xb0>
    1dfc:	add	x4, sp, #0x8
    1e00:	mov	w3, #0x9                   	// #9
    1e04:	mov	x0, x21
    1e08:	mov	w1, w20
    1e0c:	mov	x2, xzr
    1e10:	bl	10e0 <ctf_add_generic>
    1e14:	cmn	x0, #0x1
    1e18:	b.eq	1e34 <ctf_add_forward+0xb0>  // b.none
    1e1c:	ldr	x8, [sp, #8]
    1e20:	cmp	w20, #0x0
    1e24:	mov	w9, #0x26000000            	// #637534208
    1e28:	mov	w10, #0x24000000            	// #603979776
    1e2c:	csel	w9, w10, w9, eq  // eq = none
    1e30:	stp	w9, w19, [x8, #28]
    1e34:	ldp	x20, x19, [sp, #48]
    1e38:	ldp	x22, x21, [sp, #32]
    1e3c:	ldp	x29, x30, [sp, #16]
    1e40:	add	sp, sp, #0x40
    1e44:	ret

0000000000001e48 <ctf_add_typedef>:
    1e48:	sub	sp, sp, #0x40
    1e4c:	mov	w8, #0xffffffff            	// #-1
    1e50:	stp	x22, x21, [sp, #32]
    1e54:	mov	x21, x0
    1e58:	cmp	x3, x8
    1e5c:	stp	x29, x30, [sp, #16]
    1e60:	stp	x20, x19, [sp, #48]
    1e64:	add	x29, sp, #0x10
    1e68:	str	x0, [sp]
    1e6c:	b.cc	1e80 <ctf_add_typedef+0x38>  // b.lo, b.ul, b.last
    1e70:	mov	w1, #0x16                  	// #22
    1e74:	mov	x0, x21
    1e78:	bl	0 <ctf_set_errno>
    1e7c:	b	1edc <ctf_add_typedef+0x94>
    1e80:	mov	w20, w1
    1e84:	mov	x0, sp
    1e88:	mov	x1, x3
    1e8c:	mov	x19, x3
    1e90:	mov	x22, x2
    1e94:	bl	0 <ctf_lookup_by_id>
    1e98:	cbz	x0, 1ed8 <ctf_add_typedef+0x90>
    1e9c:	add	x4, sp, #0x8
    1ea0:	mov	w3, #0xa                   	// #10
    1ea4:	mov	x0, x21
    1ea8:	mov	w1, w20
    1eac:	mov	x2, x22
    1eb0:	bl	10e0 <ctf_add_generic>
    1eb4:	cmn	x0, #0x1
    1eb8:	b.eq	1edc <ctf_add_typedef+0x94>  // b.none
    1ebc:	ldr	x8, [sp, #8]
    1ec0:	cmp	w20, #0x0
    1ec4:	mov	w9, #0x2a000000            	// #704643072
    1ec8:	mov	w10, #0x28000000            	// #671088640
    1ecc:	csel	w9, w10, w9, eq  // eq = none
    1ed0:	stp	w9, w19, [x8, #28]
    1ed4:	b	1edc <ctf_add_typedef+0x94>
    1ed8:	mov	x0, #0xffffffffffffffff    	// #-1
    1edc:	ldp	x20, x19, [sp, #48]
    1ee0:	ldp	x22, x21, [sp, #32]
    1ee4:	ldp	x29, x30, [sp, #16]
    1ee8:	add	sp, sp, #0x40
    1eec:	ret

0000000000001ef0 <ctf_add_volatile>:
    1ef0:	sub	sp, sp, #0x40
    1ef4:	mov	w8, #0xffffffff            	// #-1
    1ef8:	str	x21, [sp, #32]
    1efc:	mov	x21, x0
    1f00:	cmp	x2, x8
    1f04:	stp	x29, x30, [sp, #16]
    1f08:	stp	x20, x19, [sp, #48]
    1f0c:	add	x29, sp, #0x10
    1f10:	str	x0, [sp, #8]
    1f14:	b.cc	1f28 <ctf_add_volatile+0x38>  // b.lo, b.ul, b.last
    1f18:	mov	w1, #0x16                  	// #22
    1f1c:	mov	x0, x21
    1f20:	bl	0 <ctf_set_errno>
    1f24:	b	1f80 <ctf_add_volatile+0x90>
    1f28:	mov	w20, w1
    1f2c:	add	x0, sp, #0x8
    1f30:	mov	x1, x2
    1f34:	mov	x19, x2
    1f38:	bl	0 <ctf_lookup_by_id>
    1f3c:	cbz	x0, 1f7c <ctf_add_volatile+0x8c>
    1f40:	add	x4, x29, #0x18
    1f44:	mov	w3, #0xb                   	// #11
    1f48:	mov	x0, x21
    1f4c:	mov	w1, w20
    1f50:	mov	x2, xzr
    1f54:	bl	10e0 <ctf_add_generic>
    1f58:	cmn	x0, #0x1
    1f5c:	b.eq	1f80 <ctf_add_volatile+0x90>  // b.none
    1f60:	ldr	x8, [x29, #24]
    1f64:	cmp	w20, #0x0
    1f68:	mov	w9, #0x2e000000            	// #771751936
    1f6c:	mov	w10, #0x2c000000            	// #738197504
    1f70:	csel	w9, w10, w9, eq  // eq = none
    1f74:	stp	w9, w19, [x8, #28]
    1f78:	b	1f80 <ctf_add_volatile+0x90>
    1f7c:	mov	x0, #0xffffffffffffffff    	// #-1
    1f80:	ldp	x20, x19, [sp, #48]
    1f84:	ldr	x21, [sp, #32]
    1f88:	ldp	x29, x30, [sp, #16]
    1f8c:	add	sp, sp, #0x40
    1f90:	ret

0000000000001f94 <ctf_add_const>:
    1f94:	sub	sp, sp, #0x40
    1f98:	mov	w8, #0xffffffff            	// #-1
    1f9c:	str	x21, [sp, #32]
    1fa0:	mov	x21, x0
    1fa4:	cmp	x2, x8
    1fa8:	stp	x29, x30, [sp, #16]
    1fac:	stp	x20, x19, [sp, #48]
    1fb0:	add	x29, sp, #0x10
    1fb4:	str	x0, [sp, #8]
    1fb8:	b.cc	1fcc <ctf_add_const+0x38>  // b.lo, b.ul, b.last
    1fbc:	mov	w1, #0x16                  	// #22
    1fc0:	mov	x0, x21
    1fc4:	bl	0 <ctf_set_errno>
    1fc8:	b	2024 <ctf_add_const+0x90>
    1fcc:	mov	w20, w1
    1fd0:	add	x0, sp, #0x8
    1fd4:	mov	x1, x2
    1fd8:	mov	x19, x2
    1fdc:	bl	0 <ctf_lookup_by_id>
    1fe0:	cbz	x0, 2020 <ctf_add_const+0x8c>
    1fe4:	add	x4, x29, #0x18
    1fe8:	mov	w3, #0xc                   	// #12
    1fec:	mov	x0, x21
    1ff0:	mov	w1, w20
    1ff4:	mov	x2, xzr
    1ff8:	bl	10e0 <ctf_add_generic>
    1ffc:	cmn	x0, #0x1
    2000:	b.eq	2024 <ctf_add_const+0x90>  // b.none
    2004:	ldr	x8, [x29, #24]
    2008:	cmp	w20, #0x0
    200c:	mov	w9, #0x32000000            	// #838860800
    2010:	mov	w10, #0x30000000            	// #805306368
    2014:	csel	w9, w10, w9, eq  // eq = none
    2018:	stp	w9, w19, [x8, #28]
    201c:	b	2024 <ctf_add_const+0x90>
    2020:	mov	x0, #0xffffffffffffffff    	// #-1
    2024:	ldp	x20, x19, [sp, #48]
    2028:	ldr	x21, [sp, #32]
    202c:	ldp	x29, x30, [sp, #16]
    2030:	add	sp, sp, #0x40
    2034:	ret

0000000000002038 <ctf_add_restrict>:
    2038:	sub	sp, sp, #0x40
    203c:	mov	w8, #0xffffffff            	// #-1
    2040:	str	x21, [sp, #32]
    2044:	mov	x21, x0
    2048:	cmp	x2, x8
    204c:	stp	x29, x30, [sp, #16]
    2050:	stp	x20, x19, [sp, #48]
    2054:	add	x29, sp, #0x10
    2058:	str	x0, [sp, #8]
    205c:	b.cc	2070 <ctf_add_restrict+0x38>  // b.lo, b.ul, b.last
    2060:	mov	w1, #0x16                  	// #22
    2064:	mov	x0, x21
    2068:	bl	0 <ctf_set_errno>
    206c:	b	20c8 <ctf_add_restrict+0x90>
    2070:	mov	w20, w1
    2074:	add	x0, sp, #0x8
    2078:	mov	x1, x2
    207c:	mov	x19, x2
    2080:	bl	0 <ctf_lookup_by_id>
    2084:	cbz	x0, 20c4 <ctf_add_restrict+0x8c>
    2088:	add	x4, x29, #0x18
    208c:	mov	w3, #0xd                   	// #13
    2090:	mov	x0, x21
    2094:	mov	w1, w20
    2098:	mov	x2, xzr
    209c:	bl	10e0 <ctf_add_generic>
    20a0:	cmn	x0, #0x1
    20a4:	b.eq	20c8 <ctf_add_restrict+0x90>  // b.none
    20a8:	ldr	x8, [x29, #24]
    20ac:	cmp	w20, #0x0
    20b0:	mov	w9, #0x36000000            	// #905969664
    20b4:	mov	w10, #0x34000000            	// #872415232
    20b8:	csel	w9, w10, w9, eq  // eq = none
    20bc:	stp	w9, w19, [x8, #28]
    20c0:	b	20c8 <ctf_add_restrict+0x90>
    20c4:	mov	x0, #0xffffffffffffffff    	// #-1
    20c8:	ldp	x20, x19, [sp, #48]
    20cc:	ldr	x21, [sp, #32]
    20d0:	ldp	x29, x30, [sp, #16]
    20d4:	add	sp, sp, #0x40
    20d8:	ret

00000000000020dc <ctf_add_enumerator>:
    20dc:	stp	x29, x30, [sp, #-80]!
    20e0:	stp	x24, x23, [sp, #32]
    20e4:	stp	x22, x21, [sp, #48]
    20e8:	stp	x20, x19, [sp, #64]
    20ec:	mov	x19, x0
    20f0:	ldr	x0, [x0, #568]
    20f4:	str	x25, [sp, #16]
    20f8:	mov	x29, sp
    20fc:	mov	w20, w3
    2100:	mov	x22, x2
    2104:	bl	0 <ctf_dynhash_lookup>
    2108:	cbz	x22, 211c <ctf_add_enumerator+0x40>
    210c:	ldrb	w8, [x19, #552]
    2110:	tbnz	w8, #1, 2124 <ctf_add_enumerator+0x48>
    2114:	mov	w1, #0x40d                 	// #1037
    2118:	b	2198 <ctf_add_enumerator+0xbc>
    211c:	mov	w1, #0x16                  	// #22
    2120:	b	2198 <ctf_add_enumerator+0xbc>
    2124:	mov	x21, x0
    2128:	cbz	x0, 218c <ctf_add_enumerator+0xb0>
    212c:	ldr	x8, [x19]
    2130:	ldr	w0, [x21, #28]
    2134:	ldr	x8, [x8]
    2138:	blr	x8
    213c:	ldr	x8, [x19]
    2140:	mov	w24, w0
    2144:	ldr	x9, [x8, #8]
    2148:	ldr	w8, [x21, #28]
    214c:	mov	w0, w8
    2150:	blr	x9
    2154:	ldr	x8, [x19]
    2158:	mov	w23, w0
    215c:	ldr	x9, [x8, #16]
    2160:	ldr	w8, [x21, #28]
    2164:	mov	w0, w8
    2168:	blr	x9
    216c:	cmp	w24, #0x8
    2170:	b.ne	2194 <ctf_add_enumerator+0xb8>  // b.any
    2174:	mov	w8, #0xffffff              	// #16777215
    2178:	mov	w24, w0
    217c:	cmp	w0, w8
    2180:	b.ne	21b8 <ctf_add_enumerator+0xdc>  // b.any
    2184:	mov	w1, #0x40e                 	// #1038
    2188:	b	2198 <ctf_add_enumerator+0xbc>
    218c:	mov	w1, #0x3fa                 	// #1018
    2190:	b	2198 <ctf_add_enumerator+0xbc>
    2194:	mov	w1, #0x3fc                 	// #1020
    2198:	mov	x0, x19
    219c:	bl	0 <ctf_set_errno>
    21a0:	ldp	x20, x19, [sp, #64]
    21a4:	ldp	x22, x21, [sp, #48]
    21a8:	ldp	x24, x23, [sp, #32]
    21ac:	ldr	x25, [sp, #16]
    21b0:	ldp	x29, x30, [sp], #80
    21b4:	ret
    21b8:	ldr	x25, [x21, #56]
    21bc:	cbz	x25, 21d8 <ctf_add_enumerator+0xfc>
    21c0:	ldr	x0, [x25, #16]
    21c4:	mov	x1, x22
    21c8:	bl	0 <strcmp>
    21cc:	cbz	w0, 2248 <ctf_add_enumerator+0x16c>
    21d0:	ldr	x25, [x25, #8]
    21d4:	cbnz	x25, 21c0 <ctf_add_enumerator+0xe4>
    21d8:	mov	w0, #0x30                  	// #48
    21dc:	bl	0 <malloc>
    21e0:	cbz	x0, 2250 <ctf_add_enumerator+0x174>
    21e4:	mov	x25, x0
    21e8:	mov	x0, x22
    21ec:	bl	0 <strdup>
    21f0:	cbz	x0, 2258 <ctf_add_enumerator+0x17c>
    21f4:	adrp	x9, 0 <ctf_create>
    21f8:	ldr	q0, [x9]
    21fc:	cmp	w23, #0x0
    2200:	mov	w10, #0x22000000            	// #570425344
    2204:	mov	w11, #0x20000000            	// #536870912
    2208:	add	x8, x21, #0x30
    220c:	add	w9, w24, #0x1
    2210:	csel	w10, w11, w10, eq  // eq = none
    2214:	str	x0, [x25, #16]
    2218:	bfxil	w10, w9, #0, #24
    221c:	mov	x0, x8
    2220:	mov	x1, x25
    2224:	str	w20, [x25, #40]
    2228:	stur	q0, [x25, #24]
    222c:	str	w10, [x21, #28]
    2230:	bl	0 <ctf_list_append>
    2234:	ldr	w8, [x19, #552]
    2238:	mov	w0, wzr
    223c:	orr	w8, w8, #0x4
    2240:	str	w8, [x19, #552]
    2244:	b	21a0 <ctf_add_enumerator+0xc4>
    2248:	mov	w1, #0x410                 	// #1040
    224c:	b	2198 <ctf_add_enumerator+0xbc>
    2250:	mov	w1, #0xb                   	// #11
    2254:	b	2198 <ctf_add_enumerator+0xbc>
    2258:	mov	x0, x25
    225c:	bl	0 <free>
    2260:	mov	w1, #0xb                   	// #11
    2264:	b	2198 <ctf_add_enumerator+0xbc>

0000000000002268 <ctf_add_member_offset>:
    2268:	sub	sp, sp, #0x80
    226c:	stp	x29, x30, [sp, #32]
    2270:	stp	x28, x27, [sp, #48]
    2274:	stp	x26, x25, [sp, #64]
    2278:	stp	x24, x23, [sp, #80]
    227c:	stp	x22, x21, [sp, #96]
    2280:	stp	x20, x19, [sp, #112]
    2284:	mov	x19, x0
    2288:	ldr	x0, [x0, #568]
    228c:	add	x29, sp, #0x20
    2290:	mov	x25, x4
    2294:	mov	x27, x3
    2298:	mov	x28, x2
    229c:	bl	0 <ctf_dynhash_lookup>
    22a0:	ldrb	w8, [x19, #552]
    22a4:	tbnz	w8, #1, 22b0 <ctf_add_member_offset+0x48>
    22a8:	mov	w1, #0x40d                 	// #1037
    22ac:	b	2328 <ctf_add_member_offset+0xc0>
    22b0:	mov	x20, x0
    22b4:	cbz	x0, 231c <ctf_add_member_offset+0xb4>
    22b8:	ldr	x8, [x19]
    22bc:	ldr	w0, [x20, #28]
    22c0:	ldr	x8, [x8]
    22c4:	blr	x8
    22c8:	ldr	x8, [x19]
    22cc:	mov	w21, w0
    22d0:	ldr	x9, [x8, #8]
    22d4:	ldr	w8, [x20, #28]
    22d8:	mov	w0, w8
    22dc:	blr	x9
    22e0:	ldr	x8, [x19]
    22e4:	mov	w22, w0
    22e8:	ldr	x9, [x8, #16]
    22ec:	ldr	w8, [x20, #28]
    22f0:	mov	w0, w8
    22f4:	blr	x9
    22f8:	orr	w8, w21, #0x1
    22fc:	cmp	w8, #0x7
    2300:	b.ne	2324 <ctf_add_member_offset+0xbc>  // b.any
    2304:	mov	w8, #0xffffff              	// #16777215
    2308:	mov	w23, w0
    230c:	cmp	w0, w8
    2310:	b.ne	2350 <ctf_add_member_offset+0xe8>  // b.any
    2314:	mov	w1, #0x40e                 	// #1038
    2318:	b	2328 <ctf_add_member_offset+0xc0>
    231c:	mov	w1, #0x3fa                 	// #1018
    2320:	b	2328 <ctf_add_member_offset+0xc0>
    2324:	mov	w1, #0x3fb                 	// #1019
    2328:	mov	x0, x19
    232c:	bl	0 <ctf_set_errno>
    2330:	ldp	x20, x19, [sp, #112]
    2334:	ldp	x22, x21, [sp, #96]
    2338:	ldp	x24, x23, [sp, #80]
    233c:	ldp	x26, x25, [sp, #64]
    2340:	ldp	x28, x27, [sp, #48]
    2344:	ldp	x29, x30, [sp, #32]
    2348:	add	sp, sp, #0x80
    234c:	ret
    2350:	cbz	x28, 235c <ctf_add_member_offset+0xf4>
    2354:	ldr	x24, [x20, #56]
    2358:	cbnz	x24, 23bc <ctf_add_member_offset+0x154>
    235c:	mov	x0, x19
    2360:	mov	x1, x27
    2364:	bl	0 <ctf_type_size>
    2368:	tbnz	x0, #63, 23d8 <ctf_add_member_offset+0x170>
    236c:	mov	x26, x0
    2370:	mov	x0, x19
    2374:	mov	x1, x27
    2378:	bl	0 <ctf_type_align>
    237c:	tbnz	x0, #63, 23d8 <ctf_add_member_offset+0x170>
    2380:	str	x0, [sp, #8]
    2384:	mov	w0, #0x30                  	// #48
    2388:	bl	0 <malloc>
    238c:	cbz	x0, 23e0 <ctf_add_member_offset+0x178>
    2390:	mov	x24, x0
    2394:	cbz	x28, 23e8 <ctf_add_member_offset+0x180>
    2398:	mov	x0, x28
    239c:	bl	0 <strdup>
    23a0:	cbnz	x0, 23ec <ctf_add_member_offset+0x184>
    23a4:	mov	x0, x24
    23a8:	bl	0 <free>
    23ac:	mov	w1, #0xb                   	// #11
    23b0:	b	2328 <ctf_add_member_offset+0xc0>
    23b4:	ldr	x24, [x24, #8]
    23b8:	cbz	x24, 235c <ctf_add_member_offset+0xf4>
    23bc:	ldr	x0, [x24, #16]
    23c0:	cbz	x0, 23b4 <ctf_add_member_offset+0x14c>
    23c4:	mov	x1, x28
    23c8:	bl	0 <strcmp>
    23cc:	cbnz	w0, 23b4 <ctf_add_member_offset+0x14c>
    23d0:	mov	w1, #0x410                 	// #1040
    23d4:	b	2328 <ctf_add_member_offset+0xc0>
    23d8:	mov	w0, #0xffffffff            	// #-1
    23dc:	b	2330 <ctf_add_member_offset+0xc8>
    23e0:	mov	w1, #0xb                   	// #11
    23e4:	b	2328 <ctf_add_member_offset+0xc0>
    23e8:	mov	x0, xzr
    23ec:	add	x1, x20, #0x18
    23f0:	mov	w8, #0xffffffff            	// #-1
    23f4:	cmp	w21, #0x6
    23f8:	stp	x0, x27, [x24, #16]
    23fc:	str	w8, [x24, #40]
    2400:	b.ne	244c <ctf_add_member_offset+0x1e4>  // b.any
    2404:	cbz	w23, 244c <ctf_add_member_offset+0x1e4>
    2408:	cmn	x25, #0x1
    240c:	b.eq	2474 <ctf_add_member_offset+0x20c>  // b.none
    2410:	str	x25, [x24, #32]
    2414:	ldr	x8, [x19]
    2418:	mov	x0, x19
    241c:	mov	x2, xzr
    2420:	mov	x3, xzr
    2424:	ldr	x8, [x8, #24]
    2428:	blr	x8
    242c:	add	w8, w25, #0x7
    2430:	cmp	w25, #0x0
    2434:	csel	w8, w8, w25, lt  // lt = tstop
    2438:	asr	w8, w8, #3
    243c:	add	x8, x26, w8, sxtw
    2440:	cmp	x0, x8
    2444:	csel	x8, x0, x8, gt
    2448:	b	24f0 <ctf_add_member_offset+0x288>
    244c:	str	xzr, [x24, #32]
    2450:	ldr	x8, [x19]
    2454:	mov	x0, x19
    2458:	mov	x2, xzr
    245c:	mov	x3, xzr
    2460:	ldr	x8, [x8, #24]
    2464:	blr	x8
    2468:	cmp	x0, x26
    246c:	csel	x8, x0, x26, gt
    2470:	b	24f0 <ctf_add_member_offset+0x288>
    2474:	ldr	x25, [x20, #48]
    2478:	mov	x0, x19
    247c:	ldr	x1, [x25, #24]
    2480:	bl	0 <ctf_type_resolve>
    2484:	ldr	x27, [x25, #32]
    2488:	mov	x25, x0
    248c:	add	x2, sp, #0x10
    2490:	mov	x0, x19
    2494:	mov	x1, x25
    2498:	bl	0 <ctf_type_encoding>
    249c:	cbz	w0, 24bc <ctf_add_member_offset+0x254>
    24a0:	mov	x0, x19
    24a4:	mov	x1, x25
    24a8:	bl	0 <ctf_type_size>
    24ac:	cmp	x0, #0x1
    24b0:	b.lt	24c4 <ctf_add_member_offset+0x25c>  // b.tstop
    24b4:	add	x27, x27, x0, lsl #3
    24b8:	b	24c4 <ctf_add_member_offset+0x25c>
    24bc:	ldr	w8, [sp, #24]
    24c0:	add	x27, x27, x8
    24c4:	ldr	x9, [sp, #8]
    24c8:	add	x8, x27, #0x7
    24cc:	cmp	x9, #0x1
    24d0:	csinc	x9, x9, xzr, gt
    24d4:	add	x8, x9, x8, lsr #3
    24d8:	sub	x8, x8, #0x1
    24dc:	udiv	x8, x8, x9
    24e0:	mul	x8, x8, x9
    24e4:	lsl	x9, x8, #3
    24e8:	str	x9, [x24, #32]
    24ec:	add	x8, x8, x26
    24f0:	mov	w9, #0xffffffff            	// #-1
    24f4:	cmp	x8, x9
    24f8:	b.cc	250c <ctf_add_member_offset+0x2a4>  // b.lo, b.ul, b.last
    24fc:	lsr	x10, x8, #32
    2500:	stp	w9, w10, [x20, #32]
    2504:	mov	w9, #0x28                  	// #40
    2508:	b	2510 <ctf_add_member_offset+0x2a8>
    250c:	mov	w9, #0x20                  	// #32
    2510:	cmp	w22, #0x0
    2514:	str	w8, [x20, x9]
    2518:	lsl	w8, w21, #26
    251c:	cset	w10, ne  // ne = any
    2520:	add	w9, w23, #0x1
    2524:	bfi	w8, w10, #25, #1
    2528:	bfxil	w8, w9, #0, #24
    252c:	add	x0, x20, #0x30
    2530:	mov	x1, x24
    2534:	str	w8, [x20, #28]
    2538:	bl	0 <ctf_list_append>
    253c:	ldr	w8, [x19, #552]
    2540:	mov	w0, wzr
    2544:	orr	w8, w8, #0x4
    2548:	str	w8, [x19, #552]
    254c:	b	2330 <ctf_add_member_offset+0xc8>

0000000000002550 <ctf_add_member_encoded>:
    2550:	sub	sp, sp, #0x50
    2554:	stp	x29, x30, [sp, #16]
    2558:	stp	x22, x21, [sp, #48]
    255c:	stp	x20, x19, [sp, #64]
    2560:	str	x5, [sp]
    2564:	str	w6, [sp, #8]
    2568:	mov	x20, x0
    256c:	ldr	x0, [x0, #568]
    2570:	mov	x22, x1
    2574:	mov	x1, x3
    2578:	str	x23, [sp, #32]
    257c:	add	x29, sp, #0x10
    2580:	mov	x19, x4
    2584:	mov	x23, x3
    2588:	mov	x21, x2
    258c:	bl	0 <ctf_dynhash_lookup>
    2590:	ldr	x8, [x20]
    2594:	ldr	w0, [x0, #28]
    2598:	ldr	x8, [x8]
    259c:	blr	x8
    25a0:	cmp	w0, #0x8
    25a4:	b.hi	25f4 <ctf_add_member_encoded+0xa4>  // b.pmore
    25a8:	mov	w8, #0x1                   	// #1
    25ac:	lsl	w8, w8, w0
    25b0:	mov	w9, #0x106                 	// #262
    25b4:	tst	w8, w9
    25b8:	b.eq	25f4 <ctf_add_member_encoded+0xa4>  // b.none
    25bc:	sxtw	x2, w23
    25c0:	mov	x3, sp
    25c4:	mov	x0, x20
    25c8:	mov	w1, wzr
    25cc:	bl	f98 <ctf_add_slice>
    25d0:	cmn	x0, #0x1
    25d4:	b.eq	2600 <ctf_add_member_encoded+0xb0>  // b.none
    25d8:	mov	x3, x0
    25dc:	mov	x0, x20
    25e0:	mov	x1, x22
    25e4:	mov	x2, x21
    25e8:	mov	x4, x19
    25ec:	bl	2268 <ctf_add_member_offset>
    25f0:	b	2600 <ctf_add_member_encoded+0xb0>
    25f4:	mov	w1, #0x3fe                 	// #1022
    25f8:	mov	x0, x20
    25fc:	bl	0 <ctf_set_errno>
    2600:	ldp	x20, x19, [sp, #64]
    2604:	ldp	x22, x21, [sp, #48]
    2608:	ldr	x23, [sp, #32]
    260c:	ldp	x29, x30, [sp, #16]
    2610:	add	sp, sp, #0x50
    2614:	ret

0000000000002618 <ctf_add_member>:
    2618:	mov	x4, #0xffffffffffffffff    	// #-1
    261c:	b	2268 <ctf_add_member_offset>

0000000000002620 <ctf_add_variable>:
    2620:	sub	sp, sp, #0x40
    2624:	stp	x29, x30, [sp, #16]
    2628:	stp	x22, x21, [sp, #32]
    262c:	stp	x20, x19, [sp, #48]
    2630:	str	x0, [sp, #8]
    2634:	ldrb	w8, [x0, #552]
    2638:	mov	x19, x0
    263c:	add	x29, sp, #0x10
    2640:	tbnz	w8, #1, 264c <ctf_add_variable+0x2c>
    2644:	mov	w1, #0x40d                 	// #1037
    2648:	b	2664 <ctf_add_variable+0x44>
    264c:	ldr	x0, [x19, #592]
    2650:	mov	x20, x2
    2654:	mov	x21, x1
    2658:	bl	0 <ctf_dynhash_lookup>
    265c:	cbz	x0, 2680 <ctf_add_variable+0x60>
    2660:	mov	w1, #0x410                 	// #1040
    2664:	mov	x0, x19
    2668:	bl	0 <ctf_set_errno>
    266c:	ldp	x20, x19, [sp, #48]
    2670:	ldp	x22, x21, [sp, #32]
    2674:	ldp	x29, x30, [sp, #16]
    2678:	add	sp, sp, #0x40
    267c:	ret
    2680:	add	x0, sp, #0x8
    2684:	mov	x1, x20
    2688:	bl	0 <ctf_lookup_by_id>
    268c:	cbz	x0, 26b4 <ctf_add_variable+0x94>
    2690:	mov	x0, x19
    2694:	mov	x1, x20
    2698:	bl	0 <ctf_type_resolve>
    269c:	cmn	x0, #0x1
    26a0:	b.ne	26bc <ctf_add_variable+0x9c>  // b.any
    26a4:	mov	x0, x19
    26a8:	bl	0 <ctf_errno>
    26ac:	cmp	w0, #0x41b
    26b0:	b.ne	26bc <ctf_add_variable+0x9c>  // b.any
    26b4:	mov	w0, #0xffffffff            	// #-1
    26b8:	b	266c <ctf_add_variable+0x4c>
    26bc:	mov	w0, #0x28                  	// #40
    26c0:	bl	0 <malloc>
    26c4:	cbz	x0, 26f4 <ctf_add_variable+0xd4>
    26c8:	mov	x22, x0
    26cc:	cbz	x21, 26fc <ctf_add_variable+0xdc>
    26d0:	mov	x0, x21
    26d4:	bl	0 <strdup>
    26d8:	mov	x1, x0
    26dc:	str	x0, [x22, #16]
    26e0:	cbnz	x0, 26fc <ctf_add_variable+0xdc>
    26e4:	mov	x0, x22
    26e8:	bl	0 <free>
    26ec:	mov	w1, #0xb                   	// #11
    26f0:	b	2664 <ctf_add_variable+0x44>
    26f4:	mov	w1, #0xb                   	// #11
    26f8:	b	2664 <ctf_add_variable+0x44>
    26fc:	ldr	x8, [x19, #624]
    2700:	mov	x2, x22
    2704:	stp	x20, x8, [x22, #24]
    2708:	ldr	x0, [x19, #592]
    270c:	bl	0 <ctf_dynhash_insert>
    2710:	tbnz	w0, #31, 2734 <ctf_add_variable+0x114>
    2714:	add	x0, x19, #0x258
    2718:	mov	x1, x22
    271c:	bl	0 <ctf_list_append>
    2720:	ldr	w8, [x19, #552]
    2724:	mov	w0, wzr
    2728:	orr	w8, w8, #0x4
    272c:	str	w8, [x19, #552]
    2730:	b	266c <ctf_add_variable+0x4c>
    2734:	ldr	x0, [x22, #16]
    2738:	bl	0 <free>
    273c:	mov	x0, x22
    2740:	bl	0 <free>
    2744:	mov	w0, #0xffffffff            	// #-1
    2748:	b	266c <ctf_add_variable+0x4c>

000000000000274c <ctf_add_type>:
    274c:	stp	x29, x30, [sp, #-48]!
    2750:	stp	x20, x19, [sp, #32]
    2754:	ldr	x8, [x1, #696]
    2758:	str	x21, [sp, #16]
    275c:	mov	x20, x2
    2760:	mov	x19, x1
    2764:	mov	x21, x0
    2768:	mov	x29, sp
    276c:	cbnz	x8, 2794 <ctf_add_type+0x48>
    2770:	adrp	x0, 0 <ctf_hash_integer>
    2774:	adrp	x1, 0 <ctf_hash_eq_integer>
    2778:	add	x0, x0, #0x0
    277c:	add	x1, x1, #0x0
    2780:	mov	x2, xzr
    2784:	mov	x3, xzr
    2788:	bl	0 <ctf_dynhash_create>
    278c:	str	x0, [x19, #696]
    2790:	cbz	x0, 27cc <ctf_add_type+0x80>
    2794:	mov	x0, x21
    2798:	mov	x1, x19
    279c:	mov	x2, x20
    27a0:	mov	x3, x19
    27a4:	bl	27e4 <ctf_add_type_internal>
    27a8:	ldr	x8, [x19, #696]
    27ac:	mov	x19, x0
    27b0:	mov	x0, x8
    27b4:	bl	0 <ctf_dynhash_empty>
    27b8:	mov	x0, x19
    27bc:	ldp	x20, x19, [sp, #32]
    27c0:	ldr	x21, [sp, #16]
    27c4:	ldp	x29, x30, [sp], #48
    27c8:	ret
    27cc:	mov	x0, x21
    27d0:	ldp	x20, x19, [sp, #32]
    27d4:	ldr	x21, [sp, #16]
    27d8:	mov	w1, #0xc                   	// #12
    27dc:	ldp	x29, x30, [sp], #48
    27e0:	b	0 <ctf_set_errno>

00000000000027e4 <ctf_add_type_internal>:
    27e4:	sub	sp, sp, #0x120
    27e8:	stp	x29, x30, [sp, #192]
    27ec:	add	x29, sp, #0xc0
    27f0:	stp	x28, x27, [sp, #208]
    27f4:	stp	x26, x25, [sp, #224]
    27f8:	stp	x24, x23, [sp, #240]
    27fc:	stp	x22, x21, [sp, #256]
    2800:	stp	x20, x19, [sp, #272]
    2804:	stp	x0, x1, [x29, #-32]
    2808:	ldrb	w8, [x0, #552]
    280c:	mov	x19, x0
    2810:	tbnz	w8, #1, 281c <ctf_add_type_internal+0x38>
    2814:	mov	w1, #0x40d                 	// #1037
    2818:	b	2a84 <ctf_add_type_internal+0x2a0>
    281c:	sub	x0, x29, #0x18
    2820:	mov	x1, x2
    2824:	mov	x24, x3
    2828:	mov	x20, x2
    282c:	bl	0 <ctf_lookup_by_id>
    2830:	ldur	x8, [x29, #-24]
    2834:	cbz	x0, 2948 <ctf_add_type_internal+0x164>
    2838:	mov	x27, x0
    283c:	mov	x0, x8
    2840:	mov	x1, x20
    2844:	bl	0 <ctf_type_resolve>
    2848:	cmn	x0, #0x1
    284c:	b.ne	2868 <ctf_add_type_internal+0x84>  // b.any
    2850:	ldur	x0, [x29, #-24]
    2854:	bl	0 <ctf_errno>
    2858:	cmp	w0, #0x41b
    285c:	b.ne	2868 <ctf_add_type_internal+0x84>  // b.any
    2860:	mov	w1, #0x41b                 	// #1051
    2864:	b	2a84 <ctf_add_type_internal+0x2a0>
    2868:	ldur	x0, [x29, #-24]
    286c:	ldr	w1, [x27]
    2870:	bl	0 <ctf_strptr>
    2874:	ldur	x8, [x29, #-24]
    2878:	mov	x23, x0
    287c:	ldr	x8, [x8]
    2880:	ldr	x9, [x8]
    2884:	ldr	w8, [x27, #4]
    2888:	mov	w0, w8
    288c:	blr	x9
    2890:	ldur	x8, [x29, #-24]
    2894:	mov	w25, w0
    2898:	ldr	x8, [x8]
    289c:	ldr	x9, [x8, #8]
    28a0:	ldr	w8, [x27, #4]
    28a4:	mov	w0, w8
    28a8:	blr	x9
    28ac:	ldur	x8, [x29, #-24]
    28b0:	mov	w22, w0
    28b4:	ldr	x8, [x8]
    28b8:	ldr	x9, [x8, #16]
    28bc:	ldr	w8, [x27, #4]
    28c0:	mov	w0, w8
    28c4:	blr	x9
    28c8:	ldur	x8, [x29, #-24]
    28cc:	mov	w26, w0
    28d0:	sub	x2, x29, #0x20
    28d4:	mov	x1, x20
    28d8:	mov	x0, x8
    28dc:	bl	0 <ctf_type_mapping>
    28e0:	cbz	x0, 2950 <ctf_add_type_internal+0x16c>
    28e4:	mov	x21, x0
    28e8:	ldr	x0, [x24, #696]
    28ec:	mov	x1, x20
    28f0:	bl	0 <ctf_dynhash_lookup>
    28f4:	cbnz	x0, 2a90 <ctf_add_type_internal+0x2ac>
    28f8:	ldur	x0, [x29, #-32]
    28fc:	mov	x1, x21
    2900:	bl	0 <ctf_type_kind_unsliced>
    2904:	sub	w8, w25, #0x6
    2908:	cmp	w8, #0x2
    290c:	b.hi	2950 <ctf_add_type_internal+0x16c>  // b.pmore
    2910:	cmp	w0, w25
    2914:	b.ne	2950 <ctf_add_type_internal+0x16c>  // b.any
    2918:	sub	x0, x29, #0x20
    291c:	mov	x1, #0xffffffffffffffff    	// #-1
    2920:	bl	0 <ctf_lookup_by_id>
    2924:	cbz	x0, 2970 <ctf_add_type_internal+0x18c>
    2928:	ldur	x8, [x29, #-32]
    292c:	ldr	w0, [x0, #4]
    2930:	ldr	x8, [x8]
    2934:	ldr	x8, [x8, #16]
    2938:	blr	x8
    293c:	cmp	w26, w0
    2940:	b.eq	2a90 <ctf_add_type_internal+0x2ac>  // b.none
    2944:	b	2970 <ctf_add_type_internal+0x18c>
    2948:	mov	x0, x8
    294c:	b	2a7c <ctf_add_type_internal+0x298>
    2950:	cmp	w25, #0x9
    2954:	b.ne	2970 <ctf_add_type_internal+0x18c>  // b.any
    2958:	ldr	w21, [x27, #8]
    295c:	mov	w28, #0x1                   	// #1
    2960:	str	w22, [sp, #20]
    2964:	str	x23, [sp, #24]
    2968:	tbz	w22, #0, 29fc <ctf_add_type_internal+0x218>
    296c:	b	2984 <ctf_add_type_internal+0x1a0>
    2970:	mov	w28, wzr
    2974:	mov	w21, w25
    2978:	str	w22, [sp, #20]
    297c:	str	x23, [sp, #24]
    2980:	tbz	w22, #0, 29fc <ctf_add_type_internal+0x218>
    2984:	ldrb	w8, [x23]
    2988:	cbz	w8, 29fc <ctf_add_type_internal+0x218>
    298c:	mov	x0, x19
    2990:	mov	w1, w21
    2994:	mov	x2, x23
    2998:	str	w26, [sp, #16]
    299c:	mov	w26, w21
    29a0:	bl	0 <ctf_lookup_by_rawname>
    29a4:	cbz	x0, 2a14 <ctf_add_type_internal+0x230>
    29a8:	mov	x21, x0
    29ac:	mov	x0, x19
    29b0:	mov	x1, x21
    29b4:	bl	0 <ctf_type_kind_unsliced>
    29b8:	cmn	x21, #0x1
    29bc:	mov	w22, w0
    29c0:	cset	w23, ne  // ne = any
    29c4:	cmp	w0, w25
    29c8:	b.eq	2a3c <ctf_add_type_internal+0x258>  // b.none
    29cc:	cmn	x21, #0x1
    29d0:	b.eq	2a3c <ctf_add_type_internal+0x258>  // b.none
    29d4:	cbz	w28, 2a24 <ctf_add_type_internal+0x240>
    29d8:	sub	w8, w22, #0x6
    29dc:	cmp	w8, #0x3
    29e0:	b.cs	2a24 <ctf_add_type_internal+0x240>  // b.hs, b.nlast
    29e4:	ldur	x0, [x29, #-24]
    29e8:	mov	x1, x20
    29ec:	mov	x2, x19
    29f0:	mov	x3, x21
    29f4:	bl	0 <ctf_add_type_mapping>
    29f8:	b	2a90 <ctf_add_type_internal+0x2ac>
    29fc:	mov	w23, wzr
    2a00:	mov	w22, wzr
    2a04:	mov	x28, #0xffffffffffffffff    	// #-1
    2a08:	cmp	w25, #0xe
    2a0c:	b.ls	2a50 <ctf_add_type_internal+0x26c>  // b.plast
    2a10:	b	2b88 <ctf_add_type_internal+0x3a4>
    2a14:	mov	w23, wzr
    2a18:	mov	w22, wzr
    2a1c:	mov	x28, #0xffffffffffffffff    	// #-1
    2a20:	b	2a40 <ctf_add_type_internal+0x25c>
    2a24:	cmp	w22, #0x9
    2a28:	b.ne	2b3c <ctf_add_type_internal+0x358>  // b.any
    2a2c:	sub	w8, w25, #0x6
    2a30:	cmp	w8, #0x3
    2a34:	b.cs	2b3c <ctf_add_type_internal+0x358>  // b.hs, b.nlast
    2a38:	mov	w22, #0x9                   	// #9
    2a3c:	mov	x28, x21
    2a40:	mov	w21, w26
    2a44:	ldr	w26, [sp, #16]
    2a48:	cmp	w25, #0xe
    2a4c:	b.hi	2b88 <ctf_add_type_internal+0x3a4>  // b.pmore
    2a50:	mov	w8, #0x1                   	// #1
    2a54:	lsl	w8, w8, w25
    2a58:	mov	w9, #0x4006                	// #16390
    2a5c:	tst	w8, w9
    2a60:	b.eq	2b88 <ctf_add_type_internal+0x3a4>  // b.none
    2a64:	ldur	x0, [x29, #-24]
    2a68:	add	x2, sp, #0x60
    2a6c:	mov	x1, x20
    2a70:	bl	0 <ctf_type_encoding>
    2a74:	cbz	w0, 2ab4 <ctf_add_type_internal+0x2d0>
    2a78:	ldur	x0, [x29, #-24]
    2a7c:	bl	0 <ctf_errno>
    2a80:	mov	w1, w0
    2a84:	mov	x0, x19
    2a88:	bl	0 <ctf_set_errno>
    2a8c:	mov	x21, x0
    2a90:	mov	x0, x21
    2a94:	ldp	x20, x19, [sp, #272]
    2a98:	ldp	x22, x21, [sp, #256]
    2a9c:	ldp	x24, x23, [sp, #240]
    2aa0:	ldp	x26, x25, [sp, #224]
    2aa4:	ldp	x28, x27, [sp, #208]
    2aa8:	ldp	x29, x30, [sp, #192]
    2aac:	add	sp, sp, #0x120
    2ab0:	ret
    2ab4:	cbz	w23, 2b88 <ctf_add_type_internal+0x3a4>
    2ab8:	sub	x0, x29, #0x38
    2abc:	mov	x1, x28
    2ac0:	str	w26, [sp, #16]
    2ac4:	mov	w26, w21
    2ac8:	stur	x19, [x29, #-56]
    2acc:	bl	0 <ctf_lookup_by_id>
    2ad0:	cbz	x0, 3324 <ctf_add_type_internal+0xb40>
    2ad4:	mov	x21, x0
    2ad8:	add	x2, sp, #0x50
    2adc:	mov	x0, x19
    2ae0:	mov	x1, x28
    2ae4:	bl	0 <ctf_type_encoding>
    2ae8:	cbnz	w0, 3324 <ctf_add_type_internal+0xb40>
    2aec:	ldur	x8, [x29, #-56]
    2af0:	ldr	w0, [x21, #4]
    2af4:	ldr	x8, [x8]
    2af8:	ldr	x8, [x8, #8]
    2afc:	blr	x8
    2b00:	ldr	x8, [sp, #96]
    2b04:	ldr	x9, [sp, #80]
    2b08:	ldr	w10, [sp, #104]
    2b0c:	ldr	w11, [sp, #88]
    2b10:	eor	x8, x8, x9
    2b14:	eor	w9, w10, w11
    2b18:	orr	x8, x8, x9
    2b1c:	cmp	x8, #0x0
    2b20:	cset	w8, ne  // ne = any
    2b24:	tbnz	w0, #0, 2b60 <ctf_add_type_internal+0x37c>
    2b28:	cmp	w25, #0xe
    2b2c:	mov	w21, w26
    2b30:	b.eq	2b84 <ctf_add_type_internal+0x3a0>  // b.none
    2b34:	cbz	w8, 3308 <ctf_add_type_internal+0xb24>
    2b38:	b	2b84 <ctf_add_type_internal+0x3a0>
    2b3c:	ldr	x1, [sp, #24]
    2b40:	adrp	x0, 0 <ctf_create>
    2b44:	add	x0, x0, #0x0
    2b48:	mov	w2, w25
    2b4c:	mov	x3, x21
    2b50:	mov	w4, w22
    2b54:	bl	0 <ctf_dprintf>
    2b58:	mov	w1, #0x411                 	// #1041
    2b5c:	b	2a84 <ctf_add_type_internal+0x2a0>
    2b60:	cbz	w8, 2b78 <ctf_add_type_internal+0x394>
    2b64:	mov	w1, #0x411                 	// #1041
    2b68:	mov	x0, x19
    2b6c:	bl	0 <ctf_set_errno>
    2b70:	mov	x28, x0
    2b74:	b	2a8c <ctf_add_type_internal+0x2a8>
    2b78:	mov	w21, w26
    2b7c:	cmp	w25, #0xe
    2b80:	b.ne	3308 <ctf_add_type_internal+0xb24>  // b.any
    2b84:	ldr	w26, [sp, #16]
    2b88:	ldur	x8, [x29, #-24]
    2b8c:	stp	x20, xzr, [x29, #-48]
    2b90:	stp	x19, x28, [x29, #-80]
    2b94:	mov	w2, #0x1                   	// #1
    2b98:	stp	xzr, x8, [x29, #-64]
    2b9c:	ldr	x0, [x24, #696]
    2ba0:	mov	x1, x20
    2ba4:	bl	0 <ctf_dynhash_insert>
    2ba8:	tbnz	w0, #31, 2c14 <ctf_add_type_internal+0x430>
    2bac:	sub	w8, w25, #0x1
    2bb0:	cmp	w8, #0xd
    2bb4:	b.hi	2c84 <ctf_add_type_internal+0x4a0>  // b.pmore
    2bb8:	adrp	x9, 0 <ctf_create>
    2bbc:	add	x9, x9, #0x0
    2bc0:	adr	x10, 2bd0 <ctf_add_type_internal+0x3ec>
    2bc4:	ldrb	w11, [x9, x8]
    2bc8:	add	x10, x10, x11, lsl #2
    2bcc:	br	x10
    2bd0:	ldur	x0, [x29, #-24]
    2bd4:	mov	x1, x20
    2bd8:	bl	0 <ctf_type_reference>
    2bdc:	ldur	x1, [x29, #-24]
    2be0:	mov	x2, x0
    2be4:	mov	x0, x19
    2be8:	mov	x3, x24
    2bec:	bl	27e4 <ctf_add_type_internal>
    2bf0:	cmn	x0, #0x1
    2bf4:	b.eq	3324 <ctf_add_type_internal+0xb40>  // b.none
    2bf8:	ldr	w1, [sp, #20]
    2bfc:	mov	x2, x0
    2c00:	mov	x0, x19
    2c04:	mov	w3, w25
    2c08:	bl	1420 <ctf_add_reftype>
    2c0c:	mov	x28, x0
    2c10:	b	3300 <ctf_add_type_internal+0xb1c>
    2c14:	mov	w1, #0xc                   	// #12
    2c18:	b	2a84 <ctf_add_type_internal+0x2a0>
    2c1c:	cmp	w22, #0x9
    2c20:	cset	w8, eq  // eq = none
    2c24:	eor	w9, w23, #0x1
    2c28:	orr	w8, w8, w9
    2c2c:	tbnz	w8, #0, 2ef8 <ctf_add_type_internal+0x714>
    2c30:	ldur	x0, [x29, #-24]
    2c34:	mov	x1, x20
    2c38:	bl	0 <ctf_type_size>
    2c3c:	mov	x21, x0
    2c40:	mov	x0, x19
    2c44:	mov	x1, x28
    2c48:	bl	0 <ctf_type_size>
    2c4c:	ldur	x8, [x29, #-24]
    2c50:	cmp	x21, x0
    2c54:	ldr	x21, [sp, #24]
    2c58:	b.ne	2f8c <ctf_add_type_internal+0x7a8>  // b.any
    2c5c:	adrp	x2, 0 <ctf_create>
    2c60:	add	x2, x2, #0x0
    2c64:	sub	x3, x29, #0x50
    2c68:	mov	x0, x8
    2c6c:	mov	x1, x20
    2c70:	bl	0 <ctf_member_iter>
    2c74:	cbz	w0, 3300 <ctf_add_type_internal+0xb1c>
    2c78:	adrp	x0, 0 <ctf_create>
    2c7c:	add	x0, x0, #0x0
    2c80:	b	2e08 <ctf_add_type_internal+0x624>
    2c84:	mov	w1, #0x3ef                 	// #1007
    2c88:	b	2a84 <ctf_add_type_internal+0x2a0>
    2c8c:	ldr	w21, [sp, #20]
    2c90:	ldr	x2, [sp, #24]
    2c94:	add	x4, sp, #0x38
    2c98:	mov	w3, #0x1                   	// #1
    2c9c:	mov	x0, x19
    2ca0:	mov	w1, w21
    2ca4:	bl	10e0 <ctf_add_generic>
    2ca8:	mov	x28, x0
    2cac:	cmn	x0, #0x1
    2cb0:	b.eq	3300 <ctf_add_type_internal+0xb1c>  // b.none
    2cb4:	ldr	x8, [sp, #56]
    2cb8:	cmp	w21, #0x0
    2cbc:	mov	w9, #0x6000000             	// #100663296
    2cc0:	mov	w10, #0x4000000             	// #67108864
    2cc4:	b	2d00 <ctf_add_type_internal+0x51c>
    2cc8:	ldr	w21, [sp, #20]
    2ccc:	ldr	x2, [sp, #24]
    2cd0:	add	x4, sp, #0x38
    2cd4:	mov	w3, #0x2                   	// #2
    2cd8:	mov	x0, x19
    2cdc:	mov	w1, w21
    2ce0:	bl	10e0 <ctf_add_generic>
    2ce4:	mov	x28, x0
    2ce8:	cmn	x0, #0x1
    2cec:	b.eq	3300 <ctf_add_type_internal+0xb1c>  // b.none
    2cf0:	ldr	x8, [sp, #56]
    2cf4:	cmp	w21, #0x0
    2cf8:	mov	w9, #0xa000000             	// #167772160
    2cfc:	mov	w10, #0x8000000             	// #134217728
    2d00:	csel	w9, w10, w9, eq  // eq = none
    2d04:	str	w9, [x8, #28]
    2d08:	ldr	w9, [sp, #104]
    2d0c:	neg	w9, w9
    2d10:	and	w9, w9, #0xfffffff8
    2d14:	neg	w9, w9
    2d18:	lsr	w9, w9, #3
    2d1c:	sub	x9, x9, #0x1
    2d20:	orr	x9, x9, x9, lsr #1
    2d24:	orr	x9, x9, x9, lsr #2
    2d28:	orr	x9, x9, x9, lsr #4
    2d2c:	orr	x9, x9, x9, lsr #8
    2d30:	lsr	x10, x9, #16
    2d34:	orr	w9, w10, w9
    2d38:	add	w9, w9, #0x1
    2d3c:	str	w9, [x8, #32]
    2d40:	ldr	w9, [sp, #104]
    2d44:	ldr	x10, [sp, #96]
    2d48:	str	w9, [x8, #56]
    2d4c:	str	x10, [x8, #48]
    2d50:	b	3300 <ctf_add_type_internal+0xb1c>
    2d54:	ldur	x0, [x29, #-24]
    2d58:	add	x2, sp, #0x38
    2d5c:	mov	x1, x20
    2d60:	bl	0 <ctf_array_info>
    2d64:	ldur	x1, [x29, #-24]
    2d68:	cbz	w0, 3090 <ctf_add_type_internal+0x8ac>
    2d6c:	mov	x0, x1
    2d70:	b	2a7c <ctf_add_type_internal+0x298>
    2d74:	ldur	x1, [x29, #-24]
    2d78:	ldr	w2, [x27, #8]
    2d7c:	mov	x0, x19
    2d80:	mov	x3, x24
    2d84:	bl	27e4 <ctf_add_type_internal>
    2d88:	cmn	x0, #0x1
    2d8c:	stp	x0, xzr, [sp, #56]
    2d90:	b.eq	3324 <ctf_add_type_internal+0xb40>  // b.none
    2d94:	ldr	w1, [sp, #20]
    2d98:	add	x2, sp, #0x38
    2d9c:	mov	x0, x19
    2da0:	mov	x3, xzr
    2da4:	bl	16d0 <ctf_add_function>
    2da8:	mov	x28, x0
    2dac:	b	3300 <ctf_add_type_internal+0xb1c>
    2db0:	cmp	w22, #0x9
    2db4:	cset	w8, eq  // eq = none
    2db8:	eor	w9, w23, #0x1
    2dbc:	orr	w8, w8, w9
    2dc0:	tbnz	w8, #0, 2fcc <ctf_add_type_internal+0x7e8>
    2dc4:	ldur	x0, [x29, #-24]
    2dc8:	adrp	x2, 0 <ctf_create>
    2dcc:	add	x2, x2, #0x0
    2dd0:	sub	x3, x29, #0x50
    2dd4:	mov	x1, x20
    2dd8:	bl	0 <ctf_enum_iter>
    2ddc:	ldr	x21, [sp, #24]
    2de0:	cbnz	w0, 2e00 <ctf_add_type_internal+0x61c>
    2de4:	adrp	x2, 0 <ctf_create>
    2de8:	add	x2, x2, #0x0
    2dec:	sub	x3, x29, #0x38
    2df0:	mov	x0, x19
    2df4:	mov	x1, x28
    2df8:	bl	0 <ctf_enum_iter>
    2dfc:	cbz	w0, 3300 <ctf_add_type_internal+0xb1c>
    2e00:	adrp	x0, 0 <ctf_create>
    2e04:	add	x0, x0, #0x0
    2e08:	mov	x1, x21
    2e0c:	mov	x2, x28
    2e10:	bl	0 <ctf_dprintf>
    2e14:	mov	w1, #0x411                 	// #1041
    2e18:	b	2a84 <ctf_add_type_internal+0x2a0>
    2e1c:	cmn	x28, #0x1
    2e20:	b.ne	3308 <ctf_add_type_internal+0xb24>  // b.any
    2e24:	sub	w8, w21, #0x6
    2e28:	cmp	w8, #0x3
    2e2c:	b.cs	31cc <ctf_add_type_internal+0x9e8>  // b.hs, b.nlast
    2e30:	ldr	x22, [sp, #24]
    2e34:	cbz	x22, 32bc <ctf_add_type_internal+0xad8>
    2e38:	mov	x0, x19
    2e3c:	mov	w1, w21
    2e40:	mov	x2, x22
    2e44:	mov	w23, w21
    2e48:	bl	0 <ctf_lookup_by_rawname>
    2e4c:	ldr	w21, [sp, #20]
    2e50:	add	x4, sp, #0x38
    2e54:	mov	w3, #0x9                   	// #9
    2e58:	mov	x0, x19
    2e5c:	mov	w1, w21
    2e60:	mov	x2, x22
    2e64:	b	32d8 <ctf_add_type_internal+0xaf4>
    2e68:	ldur	x0, [x29, #-24]
    2e6c:	mov	x1, x20
    2e70:	bl	0 <ctf_type_reference>
    2e74:	ldur	x1, [x29, #-24]
    2e78:	mov	x2, x0
    2e7c:	mov	x0, x19
    2e80:	mov	x3, x24
    2e84:	bl	27e4 <ctf_add_type_internal>
    2e88:	mov	x21, x0
    2e8c:	cmn	x0, #0x1
    2e90:	b.eq	2a90 <ctf_add_type_internal+0x2ac>  // b.none
    2e94:	cmn	x28, #0x1
    2e98:	b.ne	3308 <ctf_add_type_internal+0xb24>  // b.any
    2e9c:	mov	w8, #0xffffffff            	// #-1
    2ea0:	cmp	x21, x8
    2ea4:	str	x19, [sp, #32]
    2ea8:	b.cc	31ec <ctf_add_type_internal+0xa08>  // b.lo, b.ul, b.last
    2eac:	mov	w1, #0x16                  	// #22
    2eb0:	b	31d0 <ctf_add_type_internal+0x9ec>
    2eb4:	ldur	x0, [x29, #-24]
    2eb8:	mov	x1, x20
    2ebc:	bl	0 <ctf_type_reference>
    2ec0:	ldur	x1, [x29, #-24]
    2ec4:	mov	x2, x0
    2ec8:	mov	x0, x19
    2ecc:	mov	x3, x24
    2ed0:	bl	27e4 <ctf_add_type_internal>
    2ed4:	cmn	x0, #0x1
    2ed8:	b.eq	3324 <ctf_add_type_internal+0xb40>  // b.none
    2edc:	ldr	w1, [sp, #20]
    2ee0:	mov	x2, x0
    2ee4:	add	x3, sp, #0x60
    2ee8:	mov	x0, x19
    2eec:	bl	f98 <ctf_add_slice>
    2ef0:	mov	x28, x0
    2ef4:	b	3300 <ctf_add_type_internal+0xb1c>
    2ef8:	ldr	w22, [sp, #20]
    2efc:	ldr	x2, [sp, #24]
    2f00:	add	x4, sp, #0x38
    2f04:	mov	x0, x19
    2f08:	mov	w1, w22
    2f0c:	mov	w3, w25
    2f10:	bl	10e0 <ctf_add_generic>
    2f14:	cmn	x0, #0x1
    2f18:	b.eq	3324 <ctf_add_type_internal+0xb40>  // b.none
    2f1c:	mov	x28, x0
    2f20:	ldr	x23, [sp, #56]
    2f24:	ldur	x0, [x29, #-24]
    2f28:	mov	x1, x20
    2f2c:	mov	x2, x19
    2f30:	mov	x3, x28
    2f34:	stp	x28, x23, [x29, #-72]
    2f38:	bl	0 <ctf_add_type_mapping>
    2f3c:	ldur	x0, [x29, #-24]
    2f40:	adrp	x2, 0 <ctf_create>
    2f44:	add	x2, x2, #0x0
    2f48:	sub	x3, x29, #0x50
    2f4c:	mov	x1, x20
    2f50:	bl	0 <ctf_member_iter>
    2f54:	ldur	x8, [x29, #-24]
    2f58:	cmp	w0, #0x0
    2f5c:	mov	x1, x20
    2f60:	cset	w21, ne  // ne = any
    2f64:	mov	x0, x8
    2f68:	bl	0 <ctf_type_size>
    2f6c:	tbnz	x0, #63, 3324 <ctf_add_type_internal+0xb40>
    2f70:	mov	w8, #0xffffffff            	// #-1
    2f74:	cmp	x0, x8
    2f78:	b.cc	3148 <ctf_add_type_internal+0x964>  // b.lo, b.ul, b.last
    2f7c:	lsr	x9, x0, #32
    2f80:	stp	w8, w9, [x23, #32]
    2f84:	str	w0, [x23, #40]
    2f88:	b	314c <ctf_add_type_internal+0x968>
    2f8c:	mov	x0, x8
    2f90:	mov	x1, x20
    2f94:	bl	0 <ctf_type_size>
    2f98:	mov	x20, x0
    2f9c:	mov	x0, x19
    2fa0:	mov	x1, x28
    2fa4:	bl	0 <ctf_type_size>
    2fa8:	mov	x4, x0
    2fac:	adrp	x0, 0 <ctf_create>
    2fb0:	add	x0, x0, #0x0
    2fb4:	mov	x1, x21
    2fb8:	mov	x2, x28
    2fbc:	mov	x3, x20
    2fc0:	bl	0 <ctf_dprintf>
    2fc4:	mov	w1, #0x411                 	// #1041
    2fc8:	b	2a84 <ctf_add_type_internal+0x2a0>
    2fcc:	ldr	x22, [sp, #24]
    2fd0:	cbz	x22, 3018 <ctf_add_type_internal+0x834>
    2fd4:	mov	w1, #0x8                   	// #8
    2fd8:	mov	x0, x19
    2fdc:	mov	x2, x22
    2fe0:	bl	0 <ctf_lookup_by_rawname>
    2fe4:	cbz	x0, 3018 <ctf_add_type_internal+0x834>
    2fe8:	mov	x28, x0
    2fec:	mov	x0, x19
    2ff0:	mov	x1, x28
    2ff4:	bl	0 <ctf_type_kind>
    2ff8:	cmp	w0, #0x9
    2ffc:	b.ne	3018 <ctf_add_type_internal+0x834>  // b.any
    3000:	ldr	x0, [x19, #568]
    3004:	mov	x1, x28
    3008:	bl	0 <ctf_dynhash_lookup>
    300c:	ldr	w21, [sp, #20]
    3010:	str	x0, [sp, #56]
    3014:	b	3044 <ctf_add_type_internal+0x860>
    3018:	ldr	w21, [sp, #20]
    301c:	add	x4, sp, #0x38
    3020:	mov	w3, #0x8                   	// #8
    3024:	mov	x0, x19
    3028:	mov	w1, w21
    302c:	mov	x2, x22
    3030:	bl	10e0 <ctf_add_generic>
    3034:	cmn	x0, #0x1
    3038:	b.eq	31e0 <ctf_add_type_internal+0x9fc>  // b.none
    303c:	mov	x28, x0
    3040:	ldr	x0, [sp, #56]
    3044:	cmp	w21, #0x0
    3048:	mov	w8, #0x22000000            	// #570425344
    304c:	mov	w9, #0x20000000            	// #536870912
    3050:	csel	w8, w9, w8, eq  // eq = none
    3054:	str	w8, [x0, #28]
    3058:	ldr	x8, [x19, #488]
    305c:	cmn	x28, #0x1
    3060:	ldr	x8, [x8, #40]
    3064:	str	w8, [x0, #32]
    3068:	stur	x28, [x29, #-72]
    306c:	b.eq	3324 <ctf_add_type_internal+0xb40>  // b.none
    3070:	ldur	x0, [x29, #-24]
    3074:	adrp	x2, 0 <ctf_create>
    3078:	add	x2, x2, #0x0
    307c:	sub	x3, x29, #0x50
    3080:	mov	x1, x20
    3084:	bl	0 <ctf_enum_iter>
    3088:	cbnz	w0, 3324 <ctf_add_type_internal+0xb40>
    308c:	b	3308 <ctf_add_type_internal+0xb24>
    3090:	ldr	x2, [sp, #56]
    3094:	mov	x0, x19
    3098:	mov	x3, x24
    309c:	bl	27e4 <ctf_add_type_internal>
    30a0:	ldur	x1, [x29, #-24]
    30a4:	ldr	x2, [sp, #64]
    30a8:	str	x0, [sp, #56]
    30ac:	mov	x0, x19
    30b0:	mov	x3, x24
    30b4:	bl	27e4 <ctf_add_type_internal>
    30b8:	cmn	x0, #0x1
    30bc:	mov	x21, #0xffffffffffffffff    	// #-1
    30c0:	str	x0, [sp, #64]
    30c4:	b.eq	2a90 <ctf_add_type_internal+0x2ac>  // b.none
    30c8:	ldr	x1, [sp, #56]
    30cc:	ldr	w22, [sp, #20]
    30d0:	cmn	x1, #0x1
    30d4:	b.eq	2a90 <ctf_add_type_internal+0x2ac>  // b.none
    30d8:	cbz	w23, 3240 <ctf_add_type_internal+0xa5c>
    30dc:	add	x2, sp, #0x20
    30e0:	mov	x0, x19
    30e4:	mov	x1, x28
    30e8:	bl	0 <ctf_array_info>
    30ec:	cbnz	w0, 3324 <ctf_add_type_internal+0xb40>
    30f0:	ldp	x8, x9, [sp, #56]
    30f4:	ldp	x10, x11, [sp, #32]
    30f8:	ldr	x12, [sp, #72]
    30fc:	ldr	x13, [sp, #48]
    3100:	eor	x8, x8, x10
    3104:	eor	x9, x9, x11
    3108:	eor	x10, x12, x13
    310c:	orr	x8, x8, x9
    3110:	orr	x8, x8, x10
    3114:	cbz	x8, 3300 <ctf_add_type_internal+0xb1c>
    3118:	ldp	x3, x4, [sp, #56]
    311c:	ldr	w5, [sp, #72]
    3120:	ldp	x6, x7, [sp, #32]
    3124:	ldr	w8, [sp, #48]
    3128:	ldr	x1, [sp, #24]
    312c:	adrp	x0, 0 <ctf_create>
    3130:	add	x0, x0, #0x0
    3134:	mov	x2, x28
    3138:	str	w8, [sp]
    313c:	bl	0 <ctf_dprintf>
    3140:	mov	w1, #0x411                 	// #1041
    3144:	b	2a84 <ctf_add_type_internal+0x2a0>
    3148:	str	w0, [x23, #32]
    314c:	cmp	w22, #0x0
    3150:	ldr	x22, [x23, #56]
    3154:	lsl	w8, w25, #26
    3158:	cset	w9, ne  // ne = any
    315c:	bfi	w8, w9, #25, #1
    3160:	bfxil	w8, w26, #0, #24
    3164:	str	w8, [x23, #28]
    3168:	cbnz	x22, 3180 <ctf_add_type_internal+0x99c>
    316c:	cbnz	w21, 3324 <ctf_add_type_internal+0xb40>
    3170:	b	3300 <ctf_add_type_internal+0xb1c>
    3174:	str	x0, [x22, #24]
    3178:	ldr	x22, [x22, #8]
    317c:	cbz	x22, 316c <ctf_add_type_internal+0x988>
    3180:	str	x19, [sp, #32]
    3184:	ldur	x0, [x29, #-24]
    3188:	ldr	x1, [x22, #24]
    318c:	add	x2, sp, #0x20
    3190:	bl	0 <ctf_type_mapping>
    3194:	cbnz	x0, 3174 <ctf_add_type_internal+0x990>
    3198:	ldur	x1, [x29, #-24]
    319c:	ldr	x2, [x22, #24]
    31a0:	mov	x0, x19
    31a4:	mov	x3, x24
    31a8:	bl	27e4 <ctf_add_type_internal>
    31ac:	cmn	x0, #0x1
    31b0:	str	x0, [x22, #24]
    31b4:	b.ne	3178 <ctf_add_type_internal+0x994>  // b.any
    31b8:	mov	x0, x19
    31bc:	bl	0 <ctf_errno>
    31c0:	cmp	w0, #0x41b
    31c4:	cinc	w21, w21, ne  // ne = any
    31c8:	b	3178 <ctf_add_type_internal+0x994>
    31cc:	mov	w1, #0x3fd                 	// #1021
    31d0:	mov	x0, x19
    31d4:	bl	0 <ctf_set_errno>
    31d8:	mov	x28, x0
    31dc:	b	3300 <ctf_add_type_internal+0xb1c>
    31e0:	mov	x21, #0xffffffffffffffff    	// #-1
    31e4:	stur	x21, [x29, #-72]
    31e8:	b	2a90 <ctf_add_type_internal+0x2ac>
    31ec:	add	x0, sp, #0x20
    31f0:	mov	x1, x21
    31f4:	bl	0 <ctf_lookup_by_id>
    31f8:	cbz	x0, 32b4 <ctf_add_type_internal+0xad0>
    31fc:	ldr	w22, [sp, #20]
    3200:	ldr	x2, [sp, #24]
    3204:	add	x4, sp, #0x38
    3208:	mov	w3, #0xa                   	// #10
    320c:	mov	x0, x19
    3210:	mov	w1, w22
    3214:	bl	10e0 <ctf_add_generic>
    3218:	mov	x28, x0
    321c:	cmn	x0, #0x1
    3220:	b.eq	3300 <ctf_add_type_internal+0xb1c>  // b.none
    3224:	ldr	x8, [sp, #56]
    3228:	cmp	w22, #0x0
    322c:	mov	w9, #0x2a000000            	// #704643072
    3230:	mov	w10, #0x28000000            	// #671088640
    3234:	csel	w9, w10, w9, eq  // eq = none
    3238:	stp	w9, w21, [x8, #28]
    323c:	b	3300 <ctf_add_type_internal+0xb1c>
    3240:	sub	x0, x29, #0x10
    3244:	stur	x19, [x29, #-16]
    3248:	bl	0 <ctf_lookup_by_id>
    324c:	cbz	x0, 32b4 <ctf_add_type_internal+0xad0>
    3250:	ldr	x1, [sp, #64]
    3254:	sub	x0, x29, #0x10
    3258:	stur	x19, [x29, #-16]
    325c:	bl	0 <ctf_lookup_by_id>
    3260:	cbz	x0, 32b4 <ctf_add_type_internal+0xad0>
    3264:	add	x4, sp, #0x20
    3268:	mov	w3, #0x4                   	// #4
    326c:	mov	x0, x19
    3270:	mov	w1, w22
    3274:	mov	x2, xzr
    3278:	bl	10e0 <ctf_add_generic>
    327c:	mov	x28, x0
    3280:	cmn	x0, #0x1
    3284:	b.eq	3300 <ctf_add_type_internal+0xb1c>  // b.none
    3288:	ldr	x8, [sp, #32]
    328c:	cmp	w22, #0x0
    3290:	mov	w9, #0x12000000            	// #301989888
    3294:	mov	w10, #0x10000000            	// #268435456
    3298:	csel	w9, w10, w9, eq  // eq = none
    329c:	stp	w9, wzr, [x8, #28]
    32a0:	ldr	x9, [sp, #72]
    32a4:	ldur	q0, [sp, #56]
    32a8:	str	x9, [x8, #64]
    32ac:	str	q0, [x8, #48]
    32b0:	b	3300 <ctf_add_type_internal+0xb1c>
    32b4:	mov	x28, #0xffffffffffffffff    	// #-1
    32b8:	b	3300 <ctf_add_type_internal+0xb1c>
    32bc:	mov	w23, w21
    32c0:	ldr	w21, [sp, #20]
    32c4:	add	x4, sp, #0x38
    32c8:	mov	w3, #0x9                   	// #9
    32cc:	mov	x0, x19
    32d0:	mov	w1, w21
    32d4:	mov	x2, xzr
    32d8:	bl	10e0 <ctf_add_generic>
    32dc:	mov	x28, x0
    32e0:	cmn	x0, #0x1
    32e4:	b.eq	3300 <ctf_add_type_internal+0xb1c>  // b.none
    32e8:	ldr	x8, [sp, #56]
    32ec:	cmp	w21, #0x0
    32f0:	mov	w9, #0x26000000            	// #637534208
    32f4:	mov	w10, #0x24000000            	// #603979776
    32f8:	csel	w9, w10, w9, eq  // eq = none
    32fc:	stp	w9, w23, [x8, #28]
    3300:	cmn	x28, #0x1
    3304:	b.eq	3324 <ctf_add_type_internal+0xb40>  // b.none
    3308:	ldur	x0, [x29, #-24]
    330c:	mov	x1, x20
    3310:	mov	x2, x19
    3314:	mov	x3, x28
    3318:	bl	0 <ctf_add_type_mapping>
    331c:	mov	x21, x28
    3320:	b	2a90 <ctf_add_type_internal+0x2ac>
    3324:	mov	x21, #0xffffffffffffffff    	// #-1
    3328:	b	2a90 <ctf_add_type_internal+0x2ac>

000000000000332c <ctf_gzwrite>:
    332c:	stp	x29, x30, [sp, #-48]!
    3330:	stp	x22, x21, [sp, #16]
    3334:	stp	x20, x19, [sp, #32]
    3338:	ldr	x21, [x0, #8]
    333c:	mov	x20, x1
    3340:	mov	x19, x0
    3344:	mov	w22, #0x34                  	// #52
    3348:	mov	x29, sp
    334c:	mov	x0, x20
    3350:	mov	x1, x21
    3354:	mov	w2, w22
    3358:	bl	0 <gzwrite>
    335c:	cmp	w0, #0x0
    3360:	b.le	33bc <ctf_gzwrite+0x90>
    3364:	sxtw	x8, w0
    3368:	subs	x22, x22, x8
    336c:	add	x21, x21, x8
    3370:	b.ne	334c <ctf_gzwrite+0x20>  // b.any
    3374:	ldr	x21, [x19, #416]
    3378:	cbz	x21, 33a8 <ctf_gzwrite+0x7c>
    337c:	ldr	x22, [x19, #408]
    3380:	mov	x0, x20
    3384:	mov	x1, x22
    3388:	mov	w2, w21
    338c:	bl	0 <gzwrite>
    3390:	cmp	w0, #0x0
    3394:	b.le	33bc <ctf_gzwrite+0x90>
    3398:	sxtw	x8, w0
    339c:	subs	x21, x21, x8
    33a0:	add	x22, x22, x8
    33a4:	b.ne	3380 <ctf_gzwrite+0x54>  // b.any
    33a8:	mov	w0, wzr
    33ac:	ldp	x20, x19, [sp, #32]
    33b0:	ldp	x22, x21, [sp, #16]
    33b4:	ldp	x29, x30, [sp], #48
    33b8:	ret
    33bc:	bl	0 <__errno_location>
    33c0:	ldr	w1, [x0]
    33c4:	mov	x0, x19
    33c8:	bl	0 <ctf_set_errno>
    33cc:	ldp	x20, x19, [sp, #32]
    33d0:	ldp	x22, x21, [sp, #16]
    33d4:	ldp	x29, x30, [sp], #48
    33d8:	ret

00000000000033dc <ctf_compress_write>:
    33dc:	sub	sp, sp, #0x90
    33e0:	stp	x29, x30, [sp, #80]
    33e4:	stp	x24, x23, [sp, #96]
    33e8:	stp	x22, x21, [sp, #112]
    33ec:	stp	x20, x19, [sp, #128]
    33f0:	add	x29, sp, #0x50
    33f4:	mov	w21, w1
    33f8:	mov	x19, x0
    33fc:	bl	2c0 <ctf_serialize>
    3400:	tbnz	w0, #31, 3470 <ctf_compress_write+0x94>
    3404:	ldr	x8, [x19, #8]
    3408:	ldp	q0, q1, [x8]
    340c:	ldr	q2, [x8, #32]
    3410:	ldr	w8, [x8, #48]
    3414:	stp	q0, q1, [sp, #16]
    3418:	ldrb	w9, [sp, #19]
    341c:	str	w8, [sp, #64]
    3420:	str	q2, [sp, #48]
    3424:	orr	w8, w9, #0x1
    3428:	strb	w8, [sp, #19]
    342c:	ldr	x0, [x19, #416]
    3430:	bl	0 <compressBound>
    3434:	str	x0, [sp, #8]
    3438:	bl	0 <malloc>
    343c:	cbz	x0, 3478 <ctf_compress_write+0x9c>
    3440:	ldp	x2, x3, [x19, #408]
    3444:	add	x1, sp, #0x8
    3448:	mov	x20, x0
    344c:	bl	0 <compress>
    3450:	cbz	w0, 348c <ctf_compress_write+0xb0>
    3454:	bl	0 <zError>
    3458:	mov	x1, x0
    345c:	adrp	x0, 0 <ctf_create>
    3460:	add	x0, x0, #0x0
    3464:	bl	0 <ctf_dprintf>
    3468:	mov	w1, #0x413                 	// #1043
    346c:	b	3504 <ctf_compress_write+0x128>
    3470:	mov	w19, #0xffffffff            	// #-1
    3474:	b	3518 <ctf_compress_write+0x13c>
    3478:	mov	w1, #0x3f6                 	// #1014
    347c:	mov	x0, x19
    3480:	bl	0 <ctf_set_errno>
    3484:	mov	x19, x0
    3488:	b	3518 <ctf_compress_write+0x13c>
    348c:	add	x22, sp, #0x10
    3490:	mov	w24, #0x34                  	// #52
    3494:	mov	w23, #0x34                  	// #52
    3498:	mov	w0, w21
    349c:	mov	x1, x22
    34a0:	mov	x2, x23
    34a4:	bl	0 <write>
    34a8:	tbnz	x0, #63, 34fc <ctf_compress_write+0x120>
    34ac:	sub	x23, x23, x0
    34b0:	cmp	x23, #0x0
    34b4:	madd	x22, x0, x24, x22
    34b8:	b.gt	3498 <ctf_compress_write+0xbc>
    34bc:	ldr	x2, [sp, #8]
    34c0:	cmp	x2, #0x1
    34c4:	b.lt	34f4 <ctf_compress_write+0x118>  // b.tstop
    34c8:	mov	x22, x20
    34cc:	mov	w0, w21
    34d0:	mov	x1, x22
    34d4:	bl	0 <write>
    34d8:	tbnz	x0, #63, 34fc <ctf_compress_write+0x120>
    34dc:	ldr	x8, [sp, #8]
    34e0:	add	x22, x22, x0
    34e4:	sub	x2, x8, x0
    34e8:	cmp	x2, #0x0
    34ec:	str	x2, [sp, #8]
    34f0:	b.gt	34cc <ctf_compress_write+0xf0>
    34f4:	mov	w19, wzr
    34f8:	b	3510 <ctf_compress_write+0x134>
    34fc:	bl	0 <__errno_location>
    3500:	ldr	w1, [x0]
    3504:	mov	x0, x19
    3508:	bl	0 <ctf_set_errno>
    350c:	mov	x19, x0
    3510:	mov	x0, x20
    3514:	bl	0 <free>
    3518:	mov	w0, w19
    351c:	ldp	x20, x19, [sp, #128]
    3520:	ldp	x22, x21, [sp, #112]
    3524:	ldp	x24, x23, [sp, #96]
    3528:	ldp	x29, x30, [sp, #80]
    352c:	add	sp, sp, #0x90
    3530:	ret

0000000000003534 <ctf_write_mem>:
    3534:	stp	x29, x30, [sp, #-64]!
    3538:	str	x23, [sp, #16]
    353c:	stp	x22, x21, [sp, #32]
    3540:	stp	x20, x19, [sp, #48]
    3544:	mov	x29, sp
    3548:	mov	x22, x2
    354c:	mov	x21, x1
    3550:	mov	x20, x0
    3554:	bl	2c0 <ctf_serialize>
    3558:	tbnz	w0, #31, 35d8 <ctf_write_mem+0xa4>
    355c:	ldr	x0, [x20, #416]
    3560:	bl	0 <compressBound>
    3564:	ldr	x8, [x20, #416]
    3568:	cmp	x8, x22
    356c:	csel	x8, x8, x0, cc  // cc = lo, ul, last
    3570:	add	x0, x8, #0x34
    3574:	str	x8, [x29, #24]
    3578:	bl	0 <malloc>
    357c:	mov	x19, x0
    3580:	cbz	x0, 35e0 <ctf_write_mem+0xac>
    3584:	ldr	x8, [x20, #8]
    3588:	add	x0, x19, #0x34
    358c:	ldp	q2, q0, [x8, #16]
    3590:	ldr	w9, [x8, #48]
    3594:	ldr	q1, [x8]
    3598:	mov	w8, #0x34                  	// #52
    359c:	stp	q2, q0, [x19, #16]
    35a0:	str	w9, [x19, #48]
    35a4:	str	q1, [x19]
    35a8:	str	x8, [x21]
    35ac:	ldr	x23, [x20, #416]
    35b0:	ldrb	w8, [x19, #3]
    35b4:	cmp	x23, x22
    35b8:	b.cs	35f0 <ctf_write_mem+0xbc>  // b.hs, b.nlast
    35bc:	and	w8, w8, #0xfe
    35c0:	strb	w8, [x19, #3]
    35c4:	ldr	x1, [x20, #408]
    35c8:	mov	x2, x23
    35cc:	bl	0 <memcpy>
    35d0:	add	x8, x23, #0x34
    35d4:	b	3648 <ctf_write_mem+0x114>
    35d8:	mov	x19, xzr
    35dc:	b	364c <ctf_write_mem+0x118>
    35e0:	mov	w1, #0xc                   	// #12
    35e4:	mov	x0, x20
    35e8:	bl	0 <ctf_set_errno>
    35ec:	b	364c <ctf_write_mem+0x118>
    35f0:	orr	w8, w8, #0x1
    35f4:	strb	w8, [x19, #3]
    35f8:	ldr	x2, [x20, #408]
    35fc:	add	x1, x29, #0x18
    3600:	mov	x3, x23
    3604:	bl	0 <compress>
    3608:	cbz	w0, 363c <ctf_write_mem+0x108>
    360c:	bl	0 <zError>
    3610:	mov	x1, x0
    3614:	adrp	x0, 0 <ctf_create>
    3618:	add	x0, x0, #0x0
    361c:	bl	0 <ctf_dprintf>
    3620:	mov	w1, #0x413                 	// #1043
    3624:	mov	x0, x20
    3628:	bl	0 <ctf_set_errno>
    362c:	mov	x0, x19
    3630:	bl	0 <free>
    3634:	mov	x19, xzr
    3638:	b	364c <ctf_write_mem+0x118>
    363c:	ldr	x8, [x29, #24]
    3640:	ldr	x9, [x21]
    3644:	add	x8, x9, x8
    3648:	str	x8, [x21]
    364c:	mov	x0, x19
    3650:	ldp	x20, x19, [sp, #48]
    3654:	ldp	x22, x21, [sp, #32]
    3658:	ldr	x23, [sp, #16]
    365c:	ldp	x29, x30, [sp], #64
    3660:	ret

0000000000003664 <ctf_write>:
    3664:	stp	x29, x30, [sp, #-48]!
    3668:	stp	x22, x21, [sp, #16]
    366c:	stp	x20, x19, [sp, #32]
    3670:	mov	x29, sp
    3674:	mov	w20, w1
    3678:	mov	x19, x0
    367c:	bl	2c0 <ctf_serialize>
    3680:	tbnz	w0, #31, 3714 <ctf_write+0xb0>
    3684:	ldr	x21, [x19, #8]
    3688:	mov	w22, #0x34                  	// #52
    368c:	mov	w0, w20
    3690:	mov	x1, x21
    3694:	mov	x2, x22
    3698:	bl	0 <write>
    369c:	cmp	x0, #0x0
    36a0:	b.le	36f4 <ctf_write+0x90>
    36a4:	subs	x22, x22, x0
    36a8:	add	x21, x21, x0
    36ac:	b.ne	368c <ctf_write+0x28>  // b.any
    36b0:	ldr	x21, [x19, #416]
    36b4:	cbz	x21, 36e0 <ctf_write+0x7c>
    36b8:	ldr	x22, [x19, #408]
    36bc:	mov	w0, w20
    36c0:	mov	x1, x22
    36c4:	mov	x2, x21
    36c8:	bl	0 <write>
    36cc:	cmp	x0, #0x0
    36d0:	b.le	36f4 <ctf_write+0x90>
    36d4:	subs	x21, x21, x0
    36d8:	add	x22, x22, x0
    36dc:	b.ne	36bc <ctf_write+0x58>  // b.any
    36e0:	mov	w0, wzr
    36e4:	ldp	x20, x19, [sp, #32]
    36e8:	ldp	x22, x21, [sp, #16]
    36ec:	ldp	x29, x30, [sp], #48
    36f0:	ret
    36f4:	bl	0 <__errno_location>
    36f8:	ldr	w1, [x0]
    36fc:	mov	x0, x19
    3700:	bl	0 <ctf_set_errno>
    3704:	ldp	x20, x19, [sp, #32]
    3708:	ldp	x22, x21, [sp, #16]
    370c:	ldp	x29, x30, [sp], #48
    3710:	ret
    3714:	mov	w0, #0xffffffff            	// #-1
    3718:	ldp	x20, x19, [sp, #32]
    371c:	ldp	x22, x21, [sp, #16]
    3720:	ldp	x29, x30, [sp], #48
    3724:	ret

0000000000003728 <membcmp>:
    3728:	sub	sp, sp, #0x40
    372c:	stp	x29, x30, [sp, #16]
    3730:	str	x21, [sp, #32]
    3734:	stp	x20, x19, [sp, #48]
    3738:	ldp	x8, x1, [x3]
    373c:	mov	x19, x0
    3740:	mov	x21, x3
    3744:	mov	x20, x2
    3748:	mov	x3, sp
    374c:	mov	x0, x8
    3750:	mov	x2, x19
    3754:	add	x29, sp, #0x10
    3758:	bl	0 <ctf_member_info>
    375c:	tbnz	w0, #31, 3774 <membcmp+0x4c>
    3760:	ldr	x2, [sp, #8]
    3764:	cmp	x2, x20
    3768:	b.ne	3798 <membcmp+0x70>  // b.any
    376c:	mov	w0, wzr
    3770:	b	37b0 <membcmp+0x88>
    3774:	ldr	x0, [x21]
    3778:	bl	0 <ctf_errno>
    377c:	bl	0 <ctf_errmsg>
    3780:	mov	x2, x0
    3784:	adrp	x0, 0 <ctf_create>
    3788:	add	x0, x0, #0x0
    378c:	mov	x1, x19
    3790:	bl	0 <ctf_dprintf>
    3794:	b	37ac <membcmp+0x84>
    3798:	adrp	x0, 0 <ctf_create>
    379c:	add	x0, x0, #0x0
    37a0:	mov	x1, x19
    37a4:	mov	x3, x20
    37a8:	bl	0 <ctf_dprintf>
    37ac:	mov	w0, #0x1                   	// #1
    37b0:	ldp	x20, x19, [sp, #48]
    37b4:	ldr	x21, [sp, #32]
    37b8:	ldp	x29, x30, [sp, #16]
    37bc:	add	sp, sp, #0x40
    37c0:	ret

00000000000037c4 <membadd>:
    37c4:	stp	x29, x30, [sp, #-64]!
    37c8:	str	x23, [sp, #16]
    37cc:	mov	x23, x0
    37d0:	mov	w0, #0x30                  	// #48
    37d4:	stp	x22, x21, [sp, #32]
    37d8:	stp	x20, x19, [sp, #48]
    37dc:	mov	x29, sp
    37e0:	mov	x19, x3
    37e4:	mov	x21, x2
    37e8:	mov	x22, x1
    37ec:	bl	0 <malloc>
    37f0:	cbz	x0, 3810 <membadd+0x4c>
    37f4:	mov	x20, x0
    37f8:	cbz	x23, 3820 <membadd+0x5c>
    37fc:	mov	x0, x23
    3800:	bl	0 <strdup>
    3804:	cbnz	x0, 3824 <membadd+0x60>
    3808:	mov	x0, x20
    380c:	bl	0 <free>
    3810:	ldr	x0, [x19]
    3814:	mov	w1, #0xb                   	// #11
    3818:	bl	0 <ctf_set_errno>
    381c:	b	3858 <membadd+0x94>
    3820:	mov	x0, xzr
    3824:	mov	w8, #0xffffffff            	// #-1
    3828:	stp	x0, x22, [x20, #16]
    382c:	str	x21, [x20, #32]
    3830:	str	w8, [x20, #40]
    3834:	ldr	x8, [x19, #16]
    3838:	mov	x1, x20
    383c:	add	x0, x8, #0x30
    3840:	bl	0 <ctf_list_append>
    3844:	ldr	x8, [x19]
    3848:	mov	w0, wzr
    384c:	ldr	w9, [x8, #552]
    3850:	orr	w9, w9, #0x4
    3854:	str	w9, [x8, #552]
    3858:	ldp	x20, x19, [sp, #48]
    385c:	ldp	x22, x21, [sp, #32]
    3860:	ldr	x23, [sp, #16]
    3864:	ldp	x29, x30, [sp], #64
    3868:	ret

000000000000386c <enumcmp>:
    386c:	stp	x29, x30, [sp, #-48]!
    3870:	str	x21, [sp, #16]
    3874:	stp	x20, x19, [sp, #32]
    3878:	mov	w20, w1
    387c:	ldp	x8, x1, [x2]
    3880:	mov	x29, sp
    3884:	mov	x19, x0
    3888:	mov	x21, x2
    388c:	add	x3, x29, #0x1c
    3890:	mov	x0, x8
    3894:	mov	x2, x19
    3898:	bl	0 <ctf_enum_value>
    389c:	tbnz	w0, #31, 38c0 <enumcmp+0x54>
    38a0:	ldr	w2, [x29, #28]
    38a4:	cmp	w2, w20
    38a8:	b.ne	38e4 <enumcmp+0x78>  // b.any
    38ac:	mov	w0, wzr
    38b0:	ldp	x20, x19, [sp, #32]
    38b4:	ldr	x21, [sp, #16]
    38b8:	ldp	x29, x30, [sp], #48
    38bc:	ret
    38c0:	ldr	x0, [x21]
    38c4:	bl	0 <ctf_errno>
    38c8:	bl	0 <ctf_errmsg>
    38cc:	mov	x2, x0
    38d0:	adrp	x0, 0 <ctf_create>
    38d4:	add	x0, x0, #0x0
    38d8:	mov	x1, x19
    38dc:	bl	0 <ctf_dprintf>
    38e0:	b	38f4 <enumcmp+0x88>
    38e4:	adrp	x0, 0 <ctf_create>
    38e8:	add	x0, x0, #0x0
    38ec:	mov	w1, w20
    38f0:	bl	0 <ctf_dprintf>
    38f4:	mov	w0, #0x1                   	// #1
    38f8:	ldp	x20, x19, [sp, #32]
    38fc:	ldr	x21, [sp, #16]
    3900:	ldp	x29, x30, [sp], #48
    3904:	ret

0000000000003908 <enumadd>:
    3908:	stp	x29, x30, [sp, #-16]!
    390c:	mov	w3, w1
    3910:	ldp	x8, x1, [x2]
    3914:	mov	x2, x0
    3918:	mov	x29, sp
    391c:	mov	x0, x8
    3920:	bl	20dc <ctf_add_enumerator>
    3924:	lsr	w0, w0, #31
    3928:	ldp	x29, x30, [sp], #16
    392c:	ret

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	movi	v0.2d, #0x0
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	str	xzr, [x0, #96]
   c:	stp	q0, q0, [x0, #64]
  10:	stp	q0, q0, [x0, #32]
  14:	stp	q0, q0, [x0]
  18:	stp	x8, x8, [x0, #64]
  1c:	str	xzr, [x0, #80]
  20:	ret

0000000000000024 <ctf_decl_fini>:
  24:	stp	x29, x30, [sp, #-32]!
  28:	stp	x20, x19, [sp, #16]
  2c:	mov	x19, x0
  30:	ldr	x0, [x0, #8]
  34:	mov	x29, sp
  38:	cbz	x0, 4c <ctf_decl_fini+0x28>
  3c:	ldr	x20, [x0, #8]
  40:	bl	0 <free>
  44:	mov	x0, x20
  48:	cbnz	x20, 3c <ctf_decl_fini+0x18>
  4c:	ldr	x0, [x19, #24]
  50:	cbz	x0, 64 <ctf_decl_fini+0x40>
  54:	ldr	x20, [x0, #8]
  58:	bl	0 <free>
  5c:	mov	x0, x20
  60:	cbnz	x20, 54 <ctf_decl_fini+0x30>
  64:	ldr	x0, [x19, #40]
  68:	cbz	x0, 7c <ctf_decl_fini+0x58>
  6c:	ldr	x20, [x0, #8]
  70:	bl	0 <free>
  74:	mov	x0, x20
  78:	cbnz	x20, 6c <ctf_decl_fini+0x48>
  7c:	ldr	x0, [x19, #56]
  80:	cbz	x0, 94 <ctf_decl_fini+0x70>
  84:	ldr	x19, [x0, #8]
  88:	bl	0 <free>
  8c:	mov	x0, x19
  90:	cbnz	x19, 84 <ctf_decl_fini+0x60>
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret

00000000000000a0 <ctf_decl_push>:
  a0:	sub	sp, sp, #0x70
  a4:	stp	x29, x30, [sp, #32]
  a8:	add	x29, sp, #0x20
  ac:	stp	x20, x19, [sp, #96]
  b0:	mov	x19, x0
  b4:	str	x1, [x29, #24]
  b8:	add	x0, x29, #0x18
  bc:	mov	x1, x2
  c0:	str	x25, [sp, #48]
  c4:	stp	x24, x23, [sp, #64]
  c8:	stp	x22, x21, [sp, #80]
  cc:	mov	x21, x2
  d0:	bl	0 <ctf_lookup_by_id>
  d4:	ldr	x8, [x29, #24]
  d8:	cbz	x0, 154 <ctf_decl_push+0xb4>
  dc:	ldr	x8, [x8]
  e0:	mov	x22, x0
  e4:	ldr	w0, [x0, #4]
  e8:	ldr	x8, [x8]
  ec:	blr	x8
  f0:	sub	w8, w0, #0x3
  f4:	mov	w20, w0
  f8:	mov	w23, wzr
  fc:	cmp	w8, #0xb
 100:	mov	w25, #0x1                   	// #1
 104:	b.hi	2d4 <ctf_decl_push+0x234>  // b.pmore
 108:	adrp	x9, 0 <ctf_decl_init>
 10c:	add	x9, x9, #0x0
 110:	adr	x10, 124 <ctf_decl_push+0x84>
 114:	ldrb	w11, [x9, x8]
 118:	add	x10, x10, x11, lsl #2
 11c:	mov	w24, w23
 120:	br	x10
 124:	ldr	x1, [x29, #24]
 128:	ldr	w2, [x22, #8]
 12c:	mov	x0, x19
 130:	bl	a0 <ctf_decl_push>
 134:	ldr	w24, [x19, #80]
 138:	mov	w25, #0x1                   	// #1
 13c:	mov	w23, #0x1                   	// #1
 140:	mov	w0, #0x20                  	// #32
 144:	bl	0 <malloc>
 148:	cbnz	x0, 254 <ctf_decl_push+0x1b4>
 14c:	mov	w8, #0xb                   	// #11
 150:	b	158 <ctf_decl_push+0xb8>
 154:	ldr	w8, [x8, #556]
 158:	str	w8, [x19, #96]
 15c:	b	2b8 <ctf_decl_push+0x218>
 160:	ldr	x1, [x29, #24]
 164:	ldr	w2, [x22, #8]
 168:	mov	x0, x19
 16c:	bl	a0 <ctf_decl_push>
 170:	mov	w23, wzr
 174:	mov	w25, #0x1                   	// #1
 178:	mov	w24, #0x1                   	// #1
 17c:	mov	w0, #0x20                  	// #32
 180:	bl	0 <malloc>
 184:	cbnz	x0, 254 <ctf_decl_push+0x1b4>
 188:	b	14c <ctf_decl_push+0xac>
 18c:	ldr	x0, [x29, #24]
 190:	add	x2, sp, #0x8
 194:	mov	x1, x21
 198:	bl	0 <ctf_array_info>
 19c:	ldr	x1, [x29, #24]
 1a0:	ldr	x2, [sp, #8]
 1a4:	mov	x0, x19
 1a8:	bl	a0 <ctf_decl_push>
 1ac:	ldr	w25, [sp, #24]
 1b0:	mov	w23, wzr
 1b4:	mov	w24, #0x2                   	// #2
 1b8:	mov	w0, #0x20                  	// #32
 1bc:	bl	0 <malloc>
 1c0:	cbnz	x0, 254 <ctf_decl_push+0x1b4>
 1c4:	b	14c <ctf_decl_push+0xac>
 1c8:	ldr	x1, [x29, #24]
 1cc:	ldr	w2, [x22, #8]
 1d0:	mov	x0, x19
 1d4:	bl	a0 <ctf_decl_push>
 1d8:	mov	w23, wzr
 1dc:	mov	w24, #0x3                   	// #3
 1e0:	mov	w25, #0x1                   	// #1
 1e4:	mov	w0, #0x20                  	// #32
 1e8:	bl	0 <malloc>
 1ec:	cbnz	x0, 254 <ctf_decl_push+0x1b4>
 1f0:	b	14c <ctf_decl_push+0xac>
 1f4:	ldr	x0, [x29, #24]
 1f8:	ldr	w1, [x22]
 1fc:	bl	0 <ctf_strptr>
 200:	ldrb	w8, [x0]
 204:	cbnz	w8, 23c <ctf_decl_push+0x19c>
 208:	ldr	x1, [x29, #24]
 20c:	ldr	w2, [x22, #8]
 210:	mov	x0, x19
 214:	bl	a0 <ctf_decl_push>
 218:	b	2b8 <ctf_decl_push+0x218>
 21c:	ldr	x22, [x29, #24]
 220:	mov	x1, x21
 224:	mov	x0, x22
 228:	bl	0 <ctf_type_reference>
 22c:	mov	x2, x0
 230:	mov	x0, x19
 234:	mov	x1, x22
 238:	bl	a0 <ctf_decl_push>
 23c:	mov	w23, wzr
 240:	mov	w24, wzr
 244:	mov	w25, #0x1                   	// #1
 248:	mov	w0, #0x20                  	// #32
 24c:	bl	0 <malloc>
 250:	cbz	x0, 14c <ctf_decl_push+0xac>
 254:	mov	x1, x0
 258:	str	x21, [x0, #16]
 25c:	stp	w20, w25, [x0, #24]
 260:	add	x0, x19, w24, uxtw #4
 264:	ldr	x8, [x0, #8]
 268:	cbnz	x8, 284 <ctf_decl_push+0x1e4>
 26c:	ldr	w8, [x19, #84]
 270:	mov	w9, w24
 274:	add	x9, x19, x9, lsl #2
 278:	add	w10, w8, #0x1
 27c:	str	w10, [x19, #84]
 280:	str	w8, [x9, #64]
 284:	cmp	w24, #0x1
 288:	b.hi	29c <ctf_decl_push+0x1fc>  // b.pmore
 28c:	ldr	w8, [x19, #80]
 290:	cmp	w24, w8
 294:	b.ls	29c <ctf_decl_push+0x1fc>  // b.plast
 298:	str	w24, [x19, #80]
 29c:	cmp	w20, #0x4
 2a0:	b.eq	2ac <ctf_decl_push+0x20c>  // b.none
 2a4:	cbz	w23, 2b4 <ctf_decl_push+0x214>
 2a8:	cbnz	w24, 2b4 <ctf_decl_push+0x214>
 2ac:	bl	0 <ctf_list_prepend>
 2b0:	b	2b8 <ctf_decl_push+0x218>
 2b4:	bl	0 <ctf_list_append>
 2b8:	ldp	x20, x19, [sp, #96]
 2bc:	ldp	x22, x21, [sp, #80]
 2c0:	ldp	x24, x23, [sp, #64]
 2c4:	ldr	x25, [sp, #48]
 2c8:	ldp	x29, x30, [sp, #32]
 2cc:	add	sp, sp, #0x70
 2d0:	ret
 2d4:	mov	w24, w23
 2d8:	mov	w0, #0x20                  	// #32
 2dc:	bl	0 <malloc>
 2e0:	cbnz	x0, 254 <ctf_decl_push+0x1b4>
 2e4:	b	14c <ctf_decl_push+0xac>

00000000000002e8 <ctf_decl_sprintf>:
 2e8:	sub	sp, sp, #0x120
 2ec:	stp	x29, x30, [sp, #256]
 2f0:	stp	x28, x19, [sp, #272]
 2f4:	stp	x2, x3, [sp, #128]
 2f8:	stp	x4, x5, [sp, #144]
 2fc:	stp	x6, x7, [sp, #160]
 300:	stp	q1, q2, [sp, #16]
 304:	stp	q3, q4, [sp, #48]
 308:	str	q0, [sp]
 30c:	stp	q5, q6, [sp, #80]
 310:	str	q7, [sp, #112]
 314:	ldr	w8, [x0, #100]
 318:	add	x29, sp, #0x100
 31c:	cbz	w8, 330 <ctf_decl_sprintf+0x48>
 320:	ldp	x28, x19, [sp, #272]
 324:	ldp	x29, x30, [sp, #256]
 328:	add	sp, sp, #0x120
 32c:	ret
 330:	mov	x8, #0xffffffffffffffd0    	// #-48
 334:	mov	x10, sp
 338:	add	x11, sp, #0x80
 33c:	movk	x8, #0xff80, lsl #32
 340:	add	x9, x29, #0x20
 344:	add	x10, x10, #0x80
 348:	add	x11, x11, #0x30
 34c:	stp	x10, x8, [x29, #-16]
 350:	stp	x9, x11, [x29, #-32]
 354:	ldp	q0, q1, [x29, #-32]
 358:	mov	x19, x0
 35c:	sub	x0, x29, #0x28
 360:	sub	x2, x29, #0x50
 364:	stp	q0, q1, [x29, #-80]
 368:	bl	0 <vasprintf>
 36c:	cmp	w0, #0x1
 370:	b.lt	38c <ctf_decl_sprintf+0xa4>  // b.tstop
 374:	ldr	x0, [x19, #88]
 378:	ldur	x1, [x29, #-40]
 37c:	bl	0 <ctf_str_append>
 380:	cbz	x0, 390 <ctf_decl_sprintf+0xa8>
 384:	str	x0, [x19, #88]
 388:	b	390 <ctf_decl_sprintf+0xa8>
 38c:	tbnz	w0, #31, 3a0 <ctf_decl_sprintf+0xb8>
 390:	ldr	x8, [x19, #88]
 394:	cbnz	x8, 3b4 <ctf_decl_sprintf+0xcc>
 398:	mov	x0, xzr
 39c:	b	3a4 <ctf_decl_sprintf+0xbc>
 3a0:	ldr	x0, [x19, #88]
 3a4:	bl	0 <free>
 3a8:	mov	w8, #0x1                   	// #1
 3ac:	str	xzr, [x19, #88]
 3b0:	str	w8, [x19, #100]
 3b4:	ldur	x0, [x29, #-40]
 3b8:	bl	0 <free>
 3bc:	ldp	x28, x19, [sp, #272]
 3c0:	ldp	x29, x30, [sp, #256]
 3c4:	add	sp, sp, #0x120
 3c8:	ret

00000000000003cc <ctf_decl_buf>:
 3cc:	ldr	x0, [x0, #88]
 3d0:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	sub	w8, w0, #0x3e8
   8:	cmp	w8, #0x33
   c:	mov	x29, sp
  10:	b.hi	24 <ctf_errmsg+0x24>  // b.pmore
  14:	adrp	x9, 0 <ctf_errmsg>
  18:	add	x9, x9, #0x0
  1c:	ldr	x0, [x9, w8, uxtw #3]
  20:	b	28 <ctf_errmsg+0x28>
  24:	bl	0 <ctf_strerror>
  28:	adrp	x8, 0 <ctf_errmsg>
  2c:	add	x8, x8, #0x0
  30:	cmp	x0, #0x0
  34:	csel	x0, x8, x0, eq  // eq = none
  38:	ldp	x29, x30, [sp], #16
  3c:	ret

0000000000000040 <ctf_errno>:
  40:	ldr	w0, [x0, #556]
  44:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hash_integer>:
   0:	adrp	x8, 0 <htab_hash_pointer>
   4:	ldr	x1, [x8]
   8:	ldr	x0, [x0]
   c:	br	x1

0000000000000010 <ctf_hash_eq_integer>:
  10:	adrp	x8, 0 <htab_eq_pointer>
  14:	ldr	x0, [x0]
  18:	ldr	x2, [x8]
  1c:	ldr	x1, [x1]
  20:	br	x2

0000000000000024 <ctf_hash_string>:
  24:	ldr	x0, [x0]
  28:	b	0 <htab_hash_string>

000000000000002c <ctf_hash_eq_string>:
  2c:	stp	x29, x30, [sp, #-16]!
  30:	ldr	x0, [x0]
  34:	ldr	x1, [x1]
  38:	mov	x29, sp
  3c:	bl	0 <strcmp>
  40:	cmp	w0, #0x0
  44:	cset	w0, eq  // eq = none
  48:	ldp	x29, x30, [sp], #16
  4c:	ret

0000000000000050 <ctf_hash_type_mapping_key>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	stp	x20, x19, [sp, #16]
  58:	ldr	x19, [x0]
  5c:	adrp	x20, 0 <htab_hash_pointer>
  60:	ldr	x8, [x20]
  64:	mov	x29, sp
  68:	ldr	x0, [x19]
  6c:	blr	x8
  70:	ldr	x8, [x19, #8]
  74:	ldr	x9, [x20]
  78:	mov	w19, w0
  7c:	mov	x0, x8
  80:	blr	x9
  84:	mov	w8, #0x3b                  	// #59
  88:	madd	w0, w0, w8, w19
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret

0000000000000098 <ctf_hash_eq_type_mapping_key>:
  98:	ldr	x8, [x0]
  9c:	ldr	x9, [x1]
  a0:	ldr	x10, [x8]
  a4:	ldr	x11, [x9]
  a8:	cmp	x10, x11
  ac:	b.eq	b8 <ctf_hash_eq_type_mapping_key+0x20>  // b.none
  b0:	mov	w0, wzr
  b4:	ret
  b8:	ldr	x8, [x8, #8]
  bc:	ldr	x9, [x9, #8]
  c0:	cmp	x8, x9
  c4:	cset	w0, eq  // eq = none
  c8:	ret

00000000000000cc <ctf_dynhash_create>:
  cc:	stp	x29, x30, [sp, #-64]!
  d0:	str	x23, [sp, #16]
  d4:	mov	x23, x0
  d8:	mov	w0, #0x18                  	// #24
  dc:	stp	x22, x21, [sp, #32]
  e0:	stp	x20, x19, [sp, #48]
  e4:	mov	x29, sp
  e8:	mov	x19, x3
  ec:	mov	x21, x2
  f0:	mov	x22, x1
  f4:	bl	0 <malloc>
  f8:	mov	x20, x0
  fc:	cbz	x0, 144 <ctf_dynhash_create+0x78>
 100:	adrp	x3, 0 <ctf_hash_integer>
 104:	adrp	x4, 0 <xcalloc>
 108:	adrp	x5, 0 <free>
 10c:	add	x3, x3, #0x0
 110:	add	x4, x4, #0x0
 114:	add	x5, x5, #0x0
 118:	mov	w0, #0x7                   	// #7
 11c:	mov	x1, x23
 120:	mov	x2, x22
 124:	bl	0 <htab_create_alloc>
 128:	str	x0, [x20]
 12c:	cbz	x0, 138 <ctf_dynhash_create+0x6c>
 130:	stp	x21, x19, [x20, #8]
 134:	b	144 <ctf_dynhash_create+0x78>
 138:	mov	x0, x20
 13c:	bl	0 <free>
 140:	mov	x20, xzr
 144:	mov	x0, x20
 148:	ldp	x20, x19, [sp, #48]
 14c:	ldp	x22, x21, [sp, #32]
 150:	ldr	x23, [sp, #16]
 154:	ldp	x29, x30, [sp], #64
 158:	ret

000000000000015c <ctf_dynhash_item_free>:
 15c:	stp	x29, x30, [sp, #-32]!
 160:	ldr	x8, [x0, #16]
 164:	str	x19, [sp, #16]
 168:	mov	x19, x0
 16c:	mov	x29, sp
 170:	cbz	x8, 180 <ctf_dynhash_item_free+0x24>
 174:	ldr	x0, [x19]
 178:	cbz	x0, 180 <ctf_dynhash_item_free+0x24>
 17c:	blr	x8
 180:	ldr	x8, [x19, #24]
 184:	cbz	x8, 194 <ctf_dynhash_item_free+0x38>
 188:	ldr	x0, [x19, #8]
 18c:	cbz	x0, 194 <ctf_dynhash_item_free+0x38>
 190:	blr	x8
 194:	mov	x0, x19
 198:	ldr	x19, [sp, #16]
 19c:	ldp	x29, x30, [sp], #32
 1a0:	b	0 <free>

00000000000001a4 <ctf_dynhash_insert>:
 1a4:	sub	sp, sp, #0x60
 1a8:	stp	x29, x30, [sp, #32]
 1ac:	stp	x24, x23, [sp, #48]
 1b0:	stp	x22, x21, [sp, #64]
 1b4:	stp	x20, x19, [sp, #80]
 1b8:	mov	x19, x0
 1bc:	ldr	x0, [x0]
 1c0:	ldp	x24, x23, [x19, #8]
 1c4:	mov	x20, x2
 1c8:	mov	x21, x1
 1cc:	stp	x1, xzr, [sp]
 1d0:	mov	x1, sp
 1d4:	mov	w2, #0x1                   	// #1
 1d8:	add	x29, sp, #0x20
 1dc:	stp	xzr, xzr, [sp, #16]
 1e0:	bl	0 <htab_find_slot>
 1e4:	cbz	x0, 214 <ctf_dynhash_insert+0x70>
 1e8:	ldr	x8, [x0]
 1ec:	mov	x22, x0
 1f0:	cbz	x8, 224 <ctf_dynhash_insert+0x80>
 1f4:	cbz	x24, 200 <ctf_dynhash_insert+0x5c>
 1f8:	ldr	x0, [x8]
 1fc:	blr	x24
 200:	cbz	x23, 234 <ctf_dynhash_insert+0x90>
 204:	ldr	x8, [x22]
 208:	ldr	x0, [x8, #8]
 20c:	blr	x23
 210:	b	234 <ctf_dynhash_insert+0x90>
 214:	bl	0 <__errno_location>
 218:	mov	w8, #0xfffffff4            	// #-12
 21c:	str	w8, [x0]
 220:	b	25c <ctf_dynhash_insert+0xb8>
 224:	mov	w0, #0x20                  	// #32
 228:	bl	0 <malloc>
 22c:	str	x0, [x22]
 230:	cbz	x0, 25c <ctf_dynhash_insert+0xb8>
 234:	ldr	x8, [x22]
 238:	str	x21, [x8]
 23c:	ldr	x8, [x22]
 240:	str	x20, [x8, #8]
 244:	ldr	x8, [x22]
 248:	cbz	x8, 25c <ctf_dynhash_insert+0xb8>
 24c:	ldur	q0, [x19, #8]
 250:	mov	w0, wzr
 254:	str	q0, [x8, #16]
 258:	b	264 <ctf_dynhash_insert+0xc0>
 25c:	bl	0 <__errno_location>
 260:	ldr	w0, [x0]
 264:	ldp	x20, x19, [sp, #80]
 268:	ldp	x22, x21, [sp, #64]
 26c:	ldp	x24, x23, [sp, #48]
 270:	ldp	x29, x30, [sp, #32]
 274:	add	sp, sp, #0x60
 278:	ret

000000000000027c <ctf_dynhash_remove>:
 27c:	sub	sp, sp, #0x30
 280:	stp	x29, x30, [sp, #32]
 284:	stp	xzr, xzr, [sp, #16]
 288:	stp	x1, xzr, [sp]
 28c:	ldr	x0, [x0]
 290:	mov	x1, sp
 294:	add	x29, sp, #0x20
 298:	bl	0 <htab_remove_elt>
 29c:	ldp	x29, x30, [sp, #32]
 2a0:	add	sp, sp, #0x30
 2a4:	ret

00000000000002a8 <ctf_dynhash_empty>:
 2a8:	ldr	x0, [x0]
 2ac:	b	0 <htab_empty>

00000000000002b0 <ctf_dynhash_lookup>:
 2b0:	sub	sp, sp, #0x30
 2b4:	stp	x29, x30, [sp, #32]
 2b8:	ldr	x0, [x0]
 2bc:	stp	x1, xzr, [sp]
 2c0:	mov	x1, sp
 2c4:	mov	w2, wzr
 2c8:	add	x29, sp, #0x20
 2cc:	stp	xzr, xzr, [sp, #16]
 2d0:	bl	0 <htab_find_slot>
 2d4:	cbz	x0, 2e0 <ctf_dynhash_lookup+0x30>
 2d8:	ldr	x8, [x0]
 2dc:	ldr	x0, [x8, #8]
 2e0:	ldp	x29, x30, [sp, #32]
 2e4:	add	sp, sp, #0x30
 2e8:	ret

00000000000002ec <ctf_dynhash_iter>:
 2ec:	sub	sp, sp, #0x20
 2f0:	stp	x29, x30, [sp, #16]
 2f4:	stp	x1, x2, [sp]
 2f8:	ldr	x0, [x0]
 2fc:	adrp	x1, 0 <ctf_hash_integer>
 300:	add	x1, x1, #0x0
 304:	mov	x2, sp
 308:	add	x29, sp, #0x10
 30c:	bl	0 <htab_traverse>
 310:	ldp	x29, x30, [sp, #16]
 314:	add	sp, sp, #0x20
 318:	ret

000000000000031c <ctf_hashtab_traverse>:
 31c:	stp	x29, x30, [sp, #-16]!
 320:	ldr	x8, [x0]
 324:	ldp	x9, x2, [x1]
 328:	mov	x29, sp
 32c:	ldp	x0, x8, [x8]
 330:	mov	x1, x8
 334:	blr	x9
 338:	mov	w0, #0x1                   	// #1
 33c:	ldp	x29, x30, [sp], #16
 340:	ret

0000000000000344 <ctf_dynhash_iter_remove>:
 344:	sub	sp, sp, #0x30
 348:	stp	x29, x30, [sp, #32]
 34c:	ldr	x0, [x0]
 350:	str	x2, [sp, #24]
 354:	add	x2, sp, #0x8
 358:	add	x29, sp, #0x20
 35c:	stp	x0, x1, [sp, #8]
 360:	adrp	x1, 0 <ctf_hash_integer>
 364:	add	x1, x1, #0x0
 368:	bl	0 <htab_traverse>
 36c:	ldp	x29, x30, [sp, #32]
 370:	add	sp, sp, #0x30
 374:	ret

0000000000000378 <ctf_hashtab_traverse_remove>:
 378:	stp	x29, x30, [sp, #-32]!
 37c:	stp	x20, x19, [sp, #16]
 380:	ldr	x8, [x0]
 384:	mov	x20, x1
 388:	mov	x19, x0
 38c:	mov	x29, sp
 390:	ldp	x0, x1, [x8]
 394:	ldp	x8, x2, [x20, #8]
 398:	blr	x8
 39c:	cbz	w0, 3ac <ctf_hashtab_traverse_remove+0x34>
 3a0:	ldr	x0, [x20]
 3a4:	mov	x1, x19
 3a8:	bl	0 <htab_clear_slot>
 3ac:	ldp	x20, x19, [sp, #16]
 3b0:	mov	w0, #0x1                   	// #1
 3b4:	ldp	x29, x30, [sp], #32
 3b8:	ret

00000000000003bc <ctf_dynhash_destroy>:
 3bc:	stp	x29, x30, [sp, #-32]!
 3c0:	str	x19, [sp, #16]
 3c4:	mov	x19, x0
 3c8:	mov	x29, sp
 3cc:	cbz	x0, 3d8 <ctf_dynhash_destroy+0x1c>
 3d0:	ldr	x0, [x19]
 3d4:	bl	0 <htab_delete>
 3d8:	mov	x0, x19
 3dc:	ldr	x19, [sp, #16]
 3e0:	ldp	x29, x30, [sp], #32
 3e4:	b	0 <free>

00000000000003e8 <ctf_hash_create>:
 3e8:	adrp	x3, 0 <free>
 3ec:	adrp	x4, 0 <xcalloc>
 3f0:	add	x3, x3, #0x0
 3f4:	add	x4, x4, #0x0
 3f8:	mov	x5, x3
 3fc:	b	0 <htab_create_alloc>

0000000000000400 <ctf_hash_size>:
 400:	stp	x29, x30, [sp, #-16]!
 404:	mov	x29, sp
 408:	bl	0 <htab_elements>
 40c:	ldp	x29, x30, [sp], #16
 410:	ret

0000000000000414 <ctf_hash_insert_type>:
 414:	sub	sp, sp, #0x60
 418:	stp	x22, x21, [sp, #64]
 41c:	mov	x22, x1
 420:	mov	x21, x0
 424:	mov	x0, x1
 428:	mov	w1, w3
 42c:	stp	x29, x30, [sp, #32]
 430:	str	x23, [sp, #48]
 434:	stp	x20, x19, [sp, #80]
 438:	add	x29, sp, #0x20
 43c:	mov	w23, w3
 440:	mov	w19, w2
 444:	bl	0 <ctf_strraw>
 448:	cbz	w19, 4c4 <ctf_hash_insert_type+0xb0>
 44c:	mov	x20, x0
 450:	tbz	w23, #31, 460 <ctf_hash_insert_type+0x4c>
 454:	cbnz	x20, 460 <ctf_hash_insert_type+0x4c>
 458:	ldr	x8, [x22, #128]
 45c:	cbz	x8, 4d4 <ctf_hash_insert_type+0xc0>
 460:	cbz	x20, 4cc <ctf_hash_insert_type+0xb8>
 464:	ldrb	w8, [x20]
 468:	cbz	w8, 4bc <ctf_hash_insert_type+0xa8>
 46c:	mov	x1, sp
 470:	mov	w2, #0x1                   	// #1
 474:	mov	x0, x21
 478:	stp	xzr, xzr, [sp, #16]
 47c:	stp	x20, xzr, [sp]
 480:	bl	0 <htab_find_slot>
 484:	cbz	x0, 4e8 <ctf_hash_insert_type+0xd4>
 488:	mov	x21, x0
 48c:	ldr	x0, [x0]
 490:	cbnz	x0, 4a4 <ctf_hash_insert_type+0x90>
 494:	mov	w0, #0x20                  	// #32
 498:	bl	0 <malloc>
 49c:	str	x0, [x21]
 4a0:	cbz	x0, 4f4 <ctf_hash_insert_type+0xe0>
 4a4:	str	x20, [x0]
 4a8:	ldr	x8, [x21]
 4ac:	mov	w9, w19
 4b0:	str	x9, [x8, #8]
 4b4:	ldr	x8, [x21]
 4b8:	cbz	x8, 4f4 <ctf_hash_insert_type+0xe0>
 4bc:	mov	w0, wzr
 4c0:	b	4fc <ctf_hash_insert_type+0xe8>
 4c4:	mov	w0, #0x16                  	// #22
 4c8:	b	4fc <ctf_hash_insert_type+0xe8>
 4cc:	mov	w0, #0x3f9                 	// #1017
 4d0:	b	4fc <ctf_hash_insert_type+0xe8>
 4d4:	ldr	x8, [x22, #352]
 4d8:	cmp	x8, #0x0
 4dc:	mov	w8, #0x3f8                 	// #1016
 4e0:	cinc	w0, w8, ne  // ne = any
 4e4:	b	4fc <ctf_hash_insert_type+0xe8>
 4e8:	bl	0 <__errno_location>
 4ec:	mov	w8, #0xfffffff4            	// #-12
 4f0:	str	w8, [x0]
 4f4:	bl	0 <__errno_location>
 4f8:	ldr	w0, [x0]
 4fc:	ldp	x20, x19, [sp, #80]
 500:	ldp	x22, x21, [sp, #64]
 504:	ldr	x23, [sp, #48]
 508:	ldp	x29, x30, [sp, #32]
 50c:	add	sp, sp, #0x60
 510:	ret

0000000000000514 <ctf_hash_define_type>:
 514:	b	414 <ctf_hash_insert_type>

0000000000000518 <ctf_hash_lookup_type>:
 518:	stp	x2, xzr, [sp, #-48]!
 51c:	mov	x1, sp
 520:	mov	w2, wzr
 524:	stp	x29, x30, [sp, #32]
 528:	add	x29, sp, #0x20
 52c:	stp	xzr, xzr, [sp, #16]
 530:	bl	0 <htab_find_slot>
 534:	cbz	x0, 540 <ctf_hash_lookup_type+0x28>
 538:	ldr	x8, [x0]
 53c:	ldr	x0, [x8, #8]
 540:	ldp	x29, x30, [sp, #32]
 544:	add	sp, sp, #0x30
 548:	ret

000000000000054c <ctf_hash_destroy>:
 54c:	cbz	x0, 554 <ctf_hash_destroy+0x8>
 550:	b	0 <htab_delete>
 554:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_label_topmost>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	ldr	x9, [x0, #32]
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x9, #16]
  18:	sub	w9, w9, w8
  1c:	lsr	w9, w9, #3
  20:	cbz	w9, 4c <ctf_label_topmost+0x4c>
  24:	ldr	x10, [x19, #408]
  28:	mov	x0, x19
  2c:	add	x8, x10, x8
  30:	add	x8, x8, w9, uxtw #3
  34:	ldur	w1, [x8, #-8]
  38:	bl	0 <ctf_strraw>
  3c:	cbz	x0, 54 <ctf_label_topmost+0x54>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	w1, #0x409                 	// #1033
  50:	b	58 <ctf_label_topmost+0x58>
  54:	mov	w1, #0x3ef                 	// #1007
  58:	mov	x0, x19
  5c:	bl	0 <ctf_set_errno>
  60:	mov	x0, xzr
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

0000000000000070 <ctf_label_iter>:
  70:	stp	x29, x30, [sp, #-64]!
  74:	stp	x22, x21, [sp, #32]
  78:	stp	x20, x19, [sp, #48]
  7c:	ldr	x9, [x0, #32]
  80:	str	x23, [sp, #16]
  84:	mov	x19, x0
  88:	mov	x29, sp
  8c:	ldp	w8, w9, [x9, #16]
  90:	sub	w9, w9, w8
  94:	lsr	w22, w9, #3
  98:	cbz	w22, e8 <ctf_label_iter+0x78>
  9c:	ldr	x9, [x19, #408]
  a0:	mov	x20, x2
  a4:	mov	x21, x1
  a8:	add	x23, x9, x8
  ac:	ldr	w1, [x23]
  b0:	mov	x0, x19
  b4:	bl	0 <ctf_strraw>
  b8:	cbz	x0, f0 <ctf_label_iter+0x80>
  bc:	ldr	w8, [x23, #4]
  c0:	add	x1, x29, #0x18
  c4:	mov	x2, x20
  c8:	str	x8, [x29, #24]
  cc:	blr	x21
  d0:	cbnz	w0, 10c <ctf_label_iter+0x9c>
  d4:	subs	w22, w22, #0x1
  d8:	add	x23, x23, #0x8
  dc:	b.ne	ac <ctf_label_iter+0x3c>  // b.any
  e0:	mov	w0, wzr
  e4:	b	10c <ctf_label_iter+0x9c>
  e8:	mov	w1, #0x409                 	// #1033
  ec:	b	104 <ctf_label_iter+0x94>
  f0:	ldp	w1, w2, [x23]
  f4:	adrp	x0, 0 <ctf_label_topmost>
  f8:	add	x0, x0, #0x0
  fc:	bl	0 <ctf_dprintf>
 100:	mov	w1, #0x3ef                 	// #1007
 104:	mov	x0, x19
 108:	bl	0 <ctf_set_errno>
 10c:	ldp	x20, x19, [sp, #48]
 110:	ldp	x22, x21, [sp, #32]
 114:	ldr	x23, [sp, #16]
 118:	ldp	x29, x30, [sp], #64
 11c:	ret

0000000000000120 <ctf_label_info>:
 120:	stp	x29, x30, [sp, #-64]!
 124:	stp	x22, x21, [sp, #32]
 128:	stp	x20, x19, [sp, #48]
 12c:	ldr	x9, [x0, #32]
 130:	str	x23, [sp, #16]
 134:	mov	x19, x0
 138:	mov	x29, sp
 13c:	ldp	w8, w9, [x9, #16]
 140:	sub	w9, w9, w8
 144:	lsr	w22, w9, #3
 148:	cbz	w22, 18c <ctf_label_info+0x6c>
 14c:	ldr	x9, [x19, #408]
 150:	mov	x20, x2
 154:	mov	x21, x1
 158:	add	x8, x8, x9
 15c:	add	x23, x8, #0x4
 160:	ldur	w1, [x23, #-4]
 164:	mov	x0, x19
 168:	bl	0 <ctf_strraw>
 16c:	cbz	x0, 1a0 <ctf_label_info+0x80>
 170:	mov	x1, x21
 174:	bl	0 <strcmp>
 178:	cbz	w0, 1e0 <ctf_label_info+0xc0>
 17c:	subs	w22, w22, #0x1
 180:	add	x23, x23, #0x8
 184:	b.ne	160 <ctf_label_info+0x40>  // b.any
 188:	b	1d0 <ctf_label_info+0xb0>
 18c:	mov	w1, #0x409                 	// #1033
 190:	mov	x0, x19
 194:	bl	0 <ctf_set_errno>
 198:	tbz	w0, #31, 1c0 <ctf_label_info+0xa0>
 19c:	b	1f0 <ctf_label_info+0xd0>
 1a0:	ldp	w1, w2, [x23, #-4]
 1a4:	adrp	x0, 0 <ctf_label_topmost>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <ctf_dprintf>
 1b0:	mov	w1, #0x3ef                 	// #1007
 1b4:	mov	x0, x19
 1b8:	bl	0 <ctf_set_errno>
 1bc:	tbnz	w0, #31, 1f0 <ctf_label_info+0xd0>
 1c0:	cmp	w0, #0x1
 1c4:	b.ne	1d0 <ctf_label_info+0xb0>  // b.any
 1c8:	mov	w0, wzr
 1cc:	b	1f0 <ctf_label_info+0xd0>
 1d0:	mov	w1, #0x408                 	// #1032
 1d4:	mov	x0, x19
 1d8:	bl	0 <ctf_set_errno>
 1dc:	b	1f0 <ctf_label_info+0xd0>
 1e0:	mov	w0, wzr
 1e4:	cbz	x20, 1f0 <ctf_label_info+0xd0>
 1e8:	ldr	w8, [x23]
 1ec:	str	x8, [x20]
 1f0:	ldp	x20, x19, [sp, #48]
 1f4:	ldp	x22, x21, [sp, #32]
 1f8:	ldr	x23, [sp, #16]
 1fc:	ldp	x29, x30, [sp], #64
 200:	ret

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_add_type_mapping>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	stp	x24, x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	ldr	w23, [x0, #544]
      14:	mov	x19, x3
      18:	mov	x20, x0
      1c:	mov	x22, x1
      20:	cmp	x23, x1
      24:	mov	x21, x2
      28:	mov	x29, sp
      2c:	b.cs	48 <ctf_add_type_mapping+0x48>  // b.hs, b.nlast
      30:	ldr	w24, [x21, #544]
      34:	cmp	x24, x19
      38:	b.cs	64 <ctf_add_type_mapping+0x64>  // b.hs, b.nlast
      3c:	ldr	x8, [x21, #664]
      40:	cbnz	x8, a4 <ctf_add_type_mapping+0xa4>
      44:	b	7c <ctf_add_type_mapping+0x7c>
      48:	ldr	x8, [x20, #512]
      4c:	cmp	x8, #0x0
      50:	csel	x20, x20, x8, eq  // eq = none
      54:	ldr	w23, [x20, #544]
      58:	ldr	w24, [x21, #544]
      5c:	cmp	x24, x19
      60:	b.cc	3c <ctf_add_type_mapping+0x3c>  // b.lo, b.ul, b.last
      64:	ldr	x8, [x21, #512]
      68:	cmp	x8, #0x0
      6c:	csel	x21, x21, x8, eq  // eq = none
      70:	ldr	w24, [x21, #544]
      74:	ldr	x8, [x21, #664]
      78:	cbnz	x8, a4 <ctf_add_type_mapping+0xa4>
      7c:	adrp	x0, 0 <ctf_hash_type_mapping_key>
      80:	adrp	x1, 0 <ctf_hash_eq_type_mapping_key>
      84:	adrp	x2, 0 <free>
      88:	add	x0, x0, #0x0
      8c:	add	x1, x1, #0x0
      90:	add	x2, x2, #0x0
      94:	mov	x3, xzr
      98:	bl	0 <ctf_dynhash_create>
      9c:	str	x0, [x21, #664]
      a0:	cbz	x0, dc <ctf_add_type_mapping+0xdc>
      a4:	mov	w0, #0x1                   	// #1
      a8:	mov	w1, #0x10                  	// #16
      ac:	bl	0 <calloc>
      b0:	cbz	x0, dc <ctf_add_type_mapping+0xdc>
      b4:	and	x8, x23, x22
      b8:	stp	x20, x8, [x0]
      bc:	mov	x1, x0
      c0:	ldr	x0, [x21, #664]
      c4:	and	x2, x24, x19
      c8:	ldp	x20, x19, [sp, #48]
      cc:	ldp	x22, x21, [sp, #32]
      d0:	ldp	x24, x23, [sp, #16]
      d4:	ldp	x29, x30, [sp], #64
      d8:	b	0 <ctf_dynhash_insert>
      dc:	ldp	x20, x19, [sp, #48]
      e0:	ldp	x22, x21, [sp, #32]
      e4:	ldp	x24, x23, [sp, #16]
      e8:	ldp	x29, x30, [sp], #64
      ec:	ret

00000000000000f0 <ctf_type_mapping>:
      f0:	sub	sp, sp, #0x40
      f4:	stp	x29, x30, [sp, #16]
      f8:	stp	x20, x19, [sp, #48]
      fc:	ldr	w8, [x0, #544]
     100:	ldr	x20, [x2]
     104:	mov	x19, x2
     108:	str	x21, [sp, #32]
     10c:	cmp	x8, x1
     110:	add	x29, sp, #0x10
     114:	b.cc	128 <ctf_type_mapping+0x38>  // b.lo, b.ul, b.last
     118:	ldr	x8, [x0, #512]
     11c:	cmp	x8, #0x0
     120:	csel	x0, x0, x8, eq  // eq = none
     124:	ldr	w8, [x0, #544]
     128:	and	x8, x8, x1
     12c:	stp	x0, x8, [sp]
     130:	ldr	x0, [x20, #664]
     134:	cbz	x0, 160 <ctf_type_mapping+0x70>
     138:	mov	x1, sp
     13c:	bl	0 <ctf_dynhash_lookup>
     140:	ldr	x21, [x20, #512]
     144:	cbz	x0, 198 <ctf_type_mapping+0xa8>
     148:	cbz	x21, 158 <ctf_type_mapping+0x68>
     14c:	ldr	w8, [x20, #544]
     150:	add	w8, w8, #0x1
     154:	orr	x0, x8, x0
     158:	str	x20, [x19]
     15c:	b	1a0 <ctf_type_mapping+0xb0>
     160:	ldr	x21, [x20, #512]
     164:	cbz	x21, 19c <ctf_type_mapping+0xac>
     168:	ldr	x0, [x21, #664]
     16c:	cbz	x0, 190 <ctf_type_mapping+0xa0>
     170:	mov	x1, sp
     174:	bl	0 <ctf_dynhash_lookup>
     178:	cbz	x0, 190 <ctf_type_mapping+0xa0>
     17c:	ldr	x8, [x21, #512]
     180:	cbz	x8, 190 <ctf_type_mapping+0xa0>
     184:	ldr	w8, [x21, #544]
     188:	add	w8, w8, #0x1
     18c:	orr	x0, x8, x0
     190:	str	x21, [x19]
     194:	b	1a0 <ctf_type_mapping+0xb0>
     198:	cbnz	x21, 168 <ctf_type_mapping+0x78>
     19c:	mov	x0, xzr
     1a0:	ldp	x20, x19, [sp, #48]
     1a4:	ldr	x21, [sp, #32]
     1a8:	ldp	x29, x30, [sp, #16]
     1ac:	add	sp, sp, #0x40
     1b0:	ret

00000000000001b4 <ctf_link_add_ctf>:
     1b4:	stp	x29, x30, [sp, #-48]!
     1b8:	stp	x20, x19, [sp, #32]
     1bc:	ldr	x8, [x0, #656]
     1c0:	mov	x19, x0
     1c4:	str	x21, [sp, #16]
     1c8:	mov	x29, sp
     1cc:	cbz	x8, 1d8 <ctf_link_add_ctf+0x24>
     1d0:	mov	w1, #0x3f5                 	// #1013
     1d4:	b	268 <ctf_link_add_ctf+0xb4>
     1d8:	ldr	x8, [x19, #648]
     1dc:	mov	x21, x2
     1e0:	mov	x20, x1
     1e4:	cbnz	x8, 214 <ctf_link_add_ctf+0x60>
     1e8:	adrp	x0, 0 <ctf_hash_string>
     1ec:	adrp	x1, 0 <ctf_hash_eq_string>
     1f0:	adrp	x2, 0 <free>
     1f4:	adrp	x3, 0 <ctf_add_type_mapping>
     1f8:	add	x0, x0, #0x0
     1fc:	add	x1, x1, #0x0
     200:	add	x2, x2, #0x0
     204:	add	x3, x3, #0x0
     208:	bl	0 <ctf_dynhash_create>
     20c:	str	x0, [x19, #648]
     210:	cbz	x0, 24c <ctf_link_add_ctf+0x98>
     214:	mov	x0, x21
     218:	bl	0 <strdup>
     21c:	mov	x21, x0
     220:	cbz	x0, 250 <ctf_link_add_ctf+0x9c>
     224:	ldr	x0, [x19, #648]
     228:	mov	x1, x21
     22c:	mov	x2, x20
     230:	bl	0 <ctf_dynhash_insert>
     234:	tbnz	w0, #31, 250 <ctf_link_add_ctf+0x9c>
     238:	mov	w0, wzr
     23c:	ldp	x20, x19, [sp, #32]
     240:	ldr	x21, [sp, #16]
     244:	ldp	x29, x30, [sp], #48
     248:	ret
     24c:	mov	x21, xzr
     250:	ldr	x0, [x19, #648]
     254:	bl	0 <free>
     258:	mov	x0, x21
     25c:	str	xzr, [x19, #648]
     260:	bl	0 <free>
     264:	mov	w1, #0xc                   	// #12
     268:	mov	x0, x19
     26c:	bl	0 <ctf_set_errno>
     270:	ldp	x20, x19, [sp, #32]
     274:	ldr	x21, [sp, #16]
     278:	ldp	x29, x30, [sp], #48
     27c:	ret

0000000000000280 <ctf_arc_close_thunk>:
     280:	b	0 <ctf_arc_close>

0000000000000284 <ctf_link_add_cu_mapping>:
     284:	stp	x29, x30, [sp, #-48]!
     288:	stp	x20, x19, [sp, #32]
     28c:	ldr	x8, [x0, #672]
     290:	str	x21, [sp, #16]
     294:	mov	x21, x2
     298:	mov	x19, x0
     29c:	mov	x20, x1
     2a0:	mov	x29, sp
     2a4:	cbnz	x8, 2d0 <ctf_link_add_cu_mapping+0x4c>
     2a8:	adrp	x2, 0 <free>
     2ac:	adrp	x0, 0 <ctf_hash_string>
     2b0:	adrp	x1, 0 <ctf_hash_eq_string>
     2b4:	add	x2, x2, #0x0
     2b8:	add	x0, x0, #0x0
     2bc:	add	x1, x1, #0x0
     2c0:	mov	x3, x2
     2c4:	bl	0 <ctf_dynhash_create>
     2c8:	str	x0, [x19, #672]
     2cc:	cbz	x0, 394 <ctf_link_add_cu_mapping+0x110>
     2d0:	ldr	x8, [x19, #656]
     2d4:	cbnz	x8, 304 <ctf_link_add_cu_mapping+0x80>
     2d8:	adrp	x0, 0 <ctf_hash_string>
     2dc:	adrp	x1, 0 <ctf_hash_eq_string>
     2e0:	adrp	x2, 0 <free>
     2e4:	adrp	x3, 0 <ctf_add_type_mapping>
     2e8:	add	x0, x0, #0x0
     2ec:	add	x1, x1, #0x0
     2f0:	add	x2, x2, #0x0
     2f4:	add	x3, x3, #0x0
     2f8:	bl	0 <ctf_dynhash_create>
     2fc:	str	x0, [x19, #656]
     300:	cbz	x0, 394 <ctf_link_add_cu_mapping+0x110>
     304:	mov	x0, x20
     308:	bl	0 <strdup>
     30c:	mov	x20, x0
     310:	mov	x0, x21
     314:	bl	0 <strdup>
     318:	mov	x21, x0
     31c:	cbz	x20, 360 <ctf_link_add_cu_mapping+0xdc>
     320:	cbz	x21, 360 <ctf_link_add_cu_mapping+0xdc>
     324:	mov	x0, x19
     328:	mov	x1, x21
     32c:	mov	x2, x21
     330:	bl	3b4 <ctf_create_per_cu>
     334:	cbz	x0, 370 <ctf_link_add_cu_mapping+0xec>
     338:	ldr	x0, [x19, #672]
     33c:	mov	x1, x20
     340:	mov	x2, x21
     344:	bl	0 <ctf_dynhash_insert>
     348:	mov	w1, w0
     34c:	cbnz	w0, 368 <ctf_link_add_cu_mapping+0xe4>
     350:	ldp	x20, x19, [sp, #32]
     354:	ldr	x21, [sp, #16]
     358:	ldp	x29, x30, [sp], #48
     35c:	ret
     360:	bl	0 <__errno_location>
     364:	ldr	w1, [x0]
     368:	mov	x0, x19
     36c:	bl	0 <ctf_set_errno>
     370:	mov	x0, x20
     374:	bl	0 <free>
     378:	mov	x0, x21
     37c:	bl	0 <free>
     380:	mov	w0, #0xffffffff            	// #-1
     384:	ldp	x20, x19, [sp, #32]
     388:	ldr	x21, [sp, #16]
     38c:	ldp	x29, x30, [sp], #48
     390:	ret
     394:	mov	w1, #0xc                   	// #12
     398:	mov	x0, x19
     39c:	bl	0 <ctf_set_errno>
     3a0:	ldp	x20, x19, [sp, #32]
     3a4:	ldr	x21, [sp, #16]
     3a8:	ldp	x29, x30, [sp], #48
     3ac:	ret

00000000000003b0 <ctf_file_close_thunk>:
     3b0:	b	0 <ctf_file_close>

00000000000003b4 <ctf_create_per_cu>:
     3b4:	stp	x29, x30, [sp, #-64]!
     3b8:	stp	x22, x21, [sp, #32]
     3bc:	stp	x20, x19, [sp, #48]
     3c0:	mov	x19, x0
     3c4:	ldr	x0, [x0, #672]
     3c8:	mov	x20, x2
     3cc:	mov	x21, x1
     3d0:	str	x23, [sp, #16]
     3d4:	mov	x29, sp
     3d8:	cbz	x0, 3fc <ctf_create_per_cu+0x48>
     3dc:	mov	x1, x21
     3e0:	bl	0 <ctf_dynhash_lookup>
     3e4:	cbnz	x0, 3fc <ctf_create_per_cu+0x48>
     3e8:	ldr	x0, [x19, #672]
     3ec:	mov	x1, x20
     3f0:	bl	0 <ctf_dynhash_lookup>
     3f4:	cmp	x0, #0x0
     3f8:	csel	x0, x21, x0, eq  // eq = none
     3fc:	ldr	x8, [x19, #656]
     400:	cmp	x0, #0x0
     404:	csel	x23, x21, x0, eq  // eq = none
     408:	mov	x1, x23
     40c:	mov	x0, x8
     410:	bl	0 <ctf_dynhash_lookup>
     414:	mov	x22, x0
     418:	cbz	x0, 434 <ctf_create_per_cu+0x80>
     41c:	mov	x0, x22
     420:	ldp	x20, x19, [sp, #48]
     424:	ldp	x22, x21, [sp, #32]
     428:	ldr	x23, [sp, #16]
     42c:	ldp	x29, x30, [sp], #64
     430:	ret
     434:	add	x0, x29, #0x1c
     438:	bl	0 <ctf_create>
     43c:	mov	x22, x0
     440:	cbz	x0, 494 <ctf_create_per_cu+0xe0>
     444:	mov	x0, x23
     448:	bl	0 <strdup>
     44c:	mov	x21, x0
     450:	cbz	x0, 4c4 <ctf_create_per_cu+0x110>
     454:	ldr	x0, [x19, #656]
     458:	mov	x1, x21
     45c:	mov	x2, x22
     460:	bl	0 <ctf_dynhash_insert>
     464:	tbnz	w0, #31, 4c4 <ctf_create_per_cu+0x110>
     468:	mov	x0, x22
     46c:	mov	x1, x19
     470:	bl	0 <ctf_import>
     474:	mov	x0, x22
     478:	mov	x1, x20
     47c:	bl	0 <ctf_cuname_set>
     480:	adrp	x1, 0 <_CTF_SECTION>
     484:	add	x1, x1, #0x0
     488:	mov	x0, x22
     48c:	bl	0 <ctf_parent_name_set>
     490:	b	41c <ctf_create_per_cu+0x68>
     494:	ldr	w0, [x29, #28]
     498:	bl	0 <ctf_errmsg>
     49c:	mov	x3, x0
     4a0:	adrp	x0, 0 <ctf_add_type_mapping>
     4a4:	add	x0, x0, #0x0
     4a8:	mov	x1, x20
     4ac:	mov	x2, x21
     4b0:	bl	0 <ctf_dprintf>
     4b4:	ldr	w1, [x29, #28]
     4b8:	mov	x0, x19
     4bc:	bl	0 <ctf_set_errno>
     4c0:	b	41c <ctf_create_per_cu+0x68>
     4c4:	mov	x0, x21
     4c8:	bl	0 <free>
     4cc:	mov	x0, x22
     4d0:	bl	0 <ctf_file_close>
     4d4:	mov	w1, #0xc                   	// #12
     4d8:	mov	x0, x19
     4dc:	bl	0 <ctf_set_errno>
     4e0:	mov	x22, xzr
     4e4:	b	41c <ctf_create_per_cu+0x68>

00000000000004e8 <ctf_link_set_memb_name_changer>:
     4e8:	str	x1, [x0, #680]
     4ec:	str	x2, [x0, #688]
     4f0:	ret

00000000000004f4 <ctf_link>:
     4f4:	sub	sp, sp, #0x60
     4f8:	movi	v0.2d, #0x0
     4fc:	stp	x29, x30, [sp, #64]
     500:	str	xzr, [sp, #56]
     504:	str	x0, [sp]
     508:	stur	q0, [sp, #40]
     50c:	stur	q0, [sp, #24]
     510:	stur	q0, [sp, #8]
     514:	str	w1, [sp, #52]
     518:	str	x19, [sp, #80]
     51c:	mov	x19, x0
     520:	ldr	x0, [x0, #648]
     524:	add	x29, sp, #0x40
     528:	cbz	x0, 584 <ctf_link+0x90>
     52c:	ldr	x8, [x19, #656]
     530:	cbnz	x8, 564 <ctf_link+0x70>
     534:	adrp	x0, 0 <ctf_hash_string>
     538:	adrp	x1, 0 <ctf_hash_eq_string>
     53c:	adrp	x2, 0 <free>
     540:	adrp	x3, 0 <ctf_add_type_mapping>
     544:	add	x0, x0, #0x0
     548:	add	x1, x1, #0x0
     54c:	add	x2, x2, #0x0
     550:	add	x3, x3, #0x0
     554:	bl	0 <ctf_dynhash_create>
     558:	str	x0, [x19, #656]
     55c:	cbz	x0, 594 <ctf_link+0xa0>
     560:	ldr	x0, [x19, #648]
     564:	adrp	x1, 0 <ctf_add_type_mapping>
     568:	add	x1, x1, #0x0
     56c:	mov	x2, sp
     570:	bl	0 <ctf_dynhash_iter>
     574:	mov	x0, x19
     578:	bl	0 <ctf_errno>
     57c:	cmp	w0, #0x0
     580:	csetm	w0, ne  // ne = any
     584:	ldr	x19, [sp, #80]
     588:	ldp	x29, x30, [sp, #64]
     58c:	add	sp, sp, #0x60
     590:	ret
     594:	mov	w1, #0xc                   	// #12
     598:	mov	x0, x19
     59c:	bl	0 <ctf_set_errno>
     5a0:	ldr	x19, [sp, #80]
     5a4:	ldp	x29, x30, [sp, #64]
     5a8:	add	sp, sp, #0x60
     5ac:	ret

00000000000005b0 <ctf_link_one_input_archive>:
     5b0:	sub	sp, sp, #0x30
     5b4:	stp	x29, x30, [sp, #16]
     5b8:	add	x29, sp, #0x10
     5bc:	stp	x20, x19, [sp, #32]
     5c0:	mov	x19, x2
     5c4:	mov	x20, x1
     5c8:	str	x0, [x2, #8]
     5cc:	str	wzr, [x2, #48]
     5d0:	sub	x2, x29, #0x4
     5d4:	mov	x0, x1
     5d8:	mov	x1, xzr
     5dc:	bl	0 <ctf_arc_open_by_name>
     5e0:	str	x0, [x19, #24]
     5e4:	cbnz	x0, 624 <ctf_link_one_input_archive+0x74>
     5e8:	ldur	w8, [x29, #-4]
     5ec:	cmp	w8, #0x415
     5f0:	b.eq	624 <ctf_link_one_input_archive+0x74>  // b.none
     5f4:	ldr	x19, [x19, #8]
     5f8:	mov	w0, w8
     5fc:	bl	0 <ctf_errmsg>
     600:	mov	x2, x0
     604:	adrp	x0, 0 <ctf_add_type_mapping>
     608:	add	x0, x0, #0x0
     60c:	mov	x1, x19
     610:	bl	0 <ctf_dprintf>
     614:	ldp	x20, x19, [sp, #32]
     618:	ldp	x29, x30, [sp, #16]
     61c:	add	sp, sp, #0x30
     620:	ret
     624:	adrp	x1, 0 <_CTF_SECTION>
     628:	add	x1, x1, #0x0
     62c:	mov	x2, x19
     630:	bl	c78 <ctf_link_one_input_archive_member>
     634:	tbnz	w0, #31, 668 <ctf_link_one_input_archive+0xb8>
     638:	adrp	x1, 0 <ctf_add_type_mapping>
     63c:	mov	w8, #0x1                   	// #1
     640:	add	x1, x1, #0x0
     644:	mov	x0, x20
     648:	mov	x2, x19
     64c:	str	w8, [x19, #48]
     650:	bl	0 <ctf_archive_iter>
     654:	tbnz	w0, #31, 680 <ctf_link_one_input_archive+0xd0>
     658:	ldr	x0, [x19]
     65c:	mov	w1, wzr
     660:	bl	0 <ctf_set_errno>
     664:	b	6a0 <ctf_link_one_input_archive+0xf0>
     668:	ldr	x0, [x19, #24]
     66c:	bl	0 <ctf_file_close>
     670:	ldp	x20, x19, [sp, #32]
     674:	ldp	x29, x30, [sp, #16]
     678:	add	sp, sp, #0x30
     67c:	ret
     680:	ldp	x0, x20, [x19]
     684:	bl	0 <ctf_errno>
     688:	bl	0 <ctf_errmsg>
     68c:	mov	x2, x0
     690:	adrp	x0, 0 <ctf_add_type_mapping>
     694:	add	x0, x0, #0x0
     698:	mov	x1, x20
     69c:	bl	0 <ctf_dprintf>
     6a0:	ldr	x0, [x19, #24]
     6a4:	bl	0 <ctf_file_close>
     6a8:	ldr	x8, [x19]
     6ac:	ldr	x0, [x8, #664]
     6b0:	cbz	x0, 6bc <ctf_link_one_input_archive+0x10c>
     6b4:	bl	0 <ctf_dynhash_empty>
     6b8:	ldr	x8, [x19]
     6bc:	ldr	x0, [x8, #656]
     6c0:	adrp	x1, 0 <ctf_add_type_mapping>
     6c4:	add	x1, x1, #0x0
     6c8:	mov	x2, xzr
     6cc:	bl	0 <ctf_dynhash_iter>
     6d0:	ldp	x20, x19, [sp, #32]
     6d4:	ldp	x29, x30, [sp, #16]
     6d8:	add	sp, sp, #0x30
     6dc:	ret

00000000000006e0 <ctf_link_add_strtab>:
     6e0:	sub	sp, sp, #0x60
     6e4:	stp	x29, x30, [sp, #32]
     6e8:	add	x29, sp, #0x20
     6ec:	stp	x22, x21, [sp, #64]
     6f0:	stp	x20, x19, [sp, #80]
     6f4:	mov	x20, x1
     6f8:	mov	x21, x0
     6fc:	sub	x0, x29, #0x4
     700:	mov	x1, x2
     704:	stp	x24, x23, [sp, #48]
     708:	mov	x19, x2
     70c:	blr	x20
     710:	cbz	x0, 788 <ctf_link_add_strtab+0xa8>
     714:	adrp	x22, 0 <ctf_add_type_mapping>
     718:	mov	x1, x0
     71c:	mov	w24, wzr
     720:	mov	w23, #0xc                   	// #12
     724:	add	x22, x22, #0x0
     728:	ldur	w2, [x29, #-4]
     72c:	str	x1, [sp, #8]
     730:	mov	x0, x21
     734:	stp	w2, wzr, [sp, #16]
     738:	ldr	w8, [x21, #552]
     73c:	orr	w8, w8, #0x4
     740:	str	w8, [x21, #552]
     744:	bl	0 <ctf_str_add_external>
     748:	ldr	x8, [x21, #656]
     74c:	cmp	w0, #0x0
     750:	add	x2, sp, #0x8
     754:	mov	x1, x22
     758:	mov	x0, x8
     75c:	csel	w24, w23, w24, eq  // eq = none
     760:	bl	0 <ctf_dynhash_iter>
     764:	ldr	w8, [sp, #20]
     768:	sub	x0, x29, #0x4
     76c:	mov	x1, x19
     770:	cmp	w8, #0x0
     774:	csel	w24, w24, w8, eq  // eq = none
     778:	blr	x20
     77c:	mov	x1, x0
     780:	cbnz	x0, 728 <ctf_link_add_strtab+0x48>
     784:	neg	w0, w24
     788:	ldp	x20, x19, [sp, #80]
     78c:	ldp	x22, x21, [sp, #64]
     790:	ldp	x24, x23, [sp, #48]
     794:	ldp	x29, x30, [sp, #32]
     798:	add	sp, sp, #0x60
     79c:	ret

00000000000007a0 <ctf_link_intern_extern_string>:
     7a0:	stp	x29, x30, [sp, #-32]!
     7a4:	ldr	w8, [x1, #552]
     7a8:	str	x19, [sp, #16]
     7ac:	mov	x19, x2
     7b0:	mov	x0, x1
     7b4:	orr	w8, w8, #0x4
     7b8:	str	w8, [x1, #552]
     7bc:	ldr	x1, [x2]
     7c0:	ldr	w2, [x2, #8]
     7c4:	mov	x29, sp
     7c8:	bl	0 <ctf_str_add_external>
     7cc:	cbz	w0, 7dc <ctf_link_intern_extern_string+0x3c>
     7d0:	ldr	x19, [sp, #16]
     7d4:	ldp	x29, x30, [sp], #32
     7d8:	ret
     7dc:	mov	w8, #0xc                   	// #12
     7e0:	str	w8, [x19, #12]
     7e4:	ldr	x19, [sp, #16]
     7e8:	ldp	x29, x30, [sp], #32
     7ec:	ret

00000000000007f0 <ctf_link_shuffle_syms>:
     7f0:	mov	w0, wzr
     7f4:	ret

00000000000007f8 <ctf_link_write>:
     7f8:	sub	sp, sp, #0x80
     7fc:	movi	v0.2d, #0x0
     800:	stp	x29, x30, [sp, #48]
     804:	stp	x24, x23, [sp, #80]
     808:	stp	x22, x21, [sp, #96]
     80c:	stp	x20, x19, [sp, #112]
     810:	stp	q0, q0, [sp, #16]
     814:	str	q0, [sp]
     818:	str	x0, [sp, #8]
     81c:	mov	x19, x0
     820:	ldr	x0, [x0, #656]
     824:	mov	x23, x2
     828:	mov	x21, x1
     82c:	str	x25, [sp, #64]
     830:	add	x29, sp, #0x30
     834:	cbz	x0, 8dc <ctf_link_write+0xe4>
     838:	adrp	x1, 0 <ctf_add_type_mapping>
     83c:	add	x1, x1, #0x0
     840:	mov	x2, sp
     844:	bl	0 <ctf_dynhash_iter>
     848:	mov	x0, x19
     84c:	bl	0 <ctf_errno>
     850:	tbnz	w0, #31, 8f4 <ctf_link_write+0xfc>
     854:	ldr	x8, [sp, #24]
     858:	cbz	x8, 8dc <ctf_link_write+0xe4>
     85c:	ldr	x0, [sp]
     860:	lsl	x8, x8, #3
     864:	add	x1, x8, #0x8
     868:	bl	0 <realloc>
     86c:	mov	x20, x0
     870:	cbz	x0, 904 <ctf_link_write+0x10c>
     874:	ldr	x8, [sp, #24]
     878:	add	x0, x20, #0x8
     87c:	mov	x1, x20
     880:	str	x20, [sp]
     884:	lsl	x2, x8, #3
     888:	bl	0 <memmove>
     88c:	adrp	x8, 0 <_CTF_SECTION>
     890:	add	x8, x8, #0x0
     894:	str	x8, [x20]
     898:	ldr	x8, [x19, #680]
     89c:	cbz	x8, 918 <ctf_link_write+0x120>
     8a0:	ldr	x2, [x19, #688]
     8a4:	adrp	x1, 0 <_CTF_SECTION>
     8a8:	add	x1, x1, #0x0
     8ac:	mov	x0, x19
     8b0:	blr	x8
     8b4:	mov	x20, x0
     8b8:	cbz	x0, 91c <ctf_link_write+0x124>
     8bc:	ldr	x8, [sp]
     8c0:	adrp	x1, 0 <ctf_add_type_mapping>
     8c4:	add	x1, x1, #0x0
     8c8:	mov	x2, x20
     8cc:	str	x20, [x8]
     8d0:	ldr	x0, [x19, #656]
     8d4:	bl	0 <ctf_dynhash_iter>
     8d8:	b	91c <ctf_link_write+0x124>
     8dc:	mov	x0, x19
     8e0:	mov	x1, x21
     8e4:	mov	x2, x23
     8e8:	bl	0 <ctf_write_mem>
     8ec:	mov	x24, x0
     8f0:	b	b48 <ctf_link_write+0x350>
     8f4:	adrp	x23, 0 <ctf_add_type_mapping>
     8f8:	mov	x20, xzr
     8fc:	add	x23, x23, #0x0
     900:	b	ae0 <ctf_link_write+0x2e8>
     904:	adrp	x23, 0 <ctf_add_type_mapping>
     908:	mov	x22, xzr
     90c:	mov	x24, xzr
     910:	add	x23, x23, #0x0
     914:	b	abc <ctf_link_write+0x2c4>
     918:	mov	x20, xzr
     91c:	ldp	x0, x8, [sp, #16]
     920:	lsl	x8, x8, #3
     924:	add	x1, x8, #0x8
     928:	bl	0 <realloc>
     92c:	mov	x22, x0
     930:	cbz	x0, a00 <ctf_link_write+0x208>
     934:	ldr	x8, [sp, #24]
     938:	add	x0, x22, #0x8
     93c:	mov	x1, x22
     940:	str	x22, [sp, #16]
     944:	lsl	x2, x8, #3
     948:	bl	0 <memmove>
     94c:	str	x19, [x22]
     950:	bl	0 <tmpfile>
     954:	mov	x22, x0
     958:	cbz	x0, a10 <ctf_link_write+0x218>
     95c:	mov	x0, x22
     960:	bl	0 <fileno>
     964:	ldp	x1, x8, [sp, #16]
     968:	ldr	x3, [sp]
     96c:	mov	x4, x23
     970:	add	x2, x8, #0x1
     974:	bl	0 <ctf_arc_write_fd>
     978:	tbnz	w0, #31, a20 <ctf_link_write+0x228>
     97c:	mov	w2, #0x2                   	// #2
     980:	mov	x0, x22
     984:	mov	x1, xzr
     988:	bl	0 <fseek>
     98c:	tbnz	w0, #31, a38 <ctf_link_write+0x240>
     990:	mov	x0, x22
     994:	bl	0 <ftell>
     998:	tbnz	x0, #63, a48 <ctf_link_write+0x250>
     99c:	mov	x25, x0
     9a0:	mov	x0, x22
     9a4:	mov	x1, xzr
     9a8:	mov	w2, wzr
     9ac:	bl	0 <fseek>
     9b0:	tbnz	w0, #31, a58 <ctf_link_write+0x260>
     9b4:	mov	x0, x25
     9b8:	bl	0 <malloc>
     9bc:	mov	x24, x0
     9c0:	cbz	x0, ab4 <ctf_link_write+0x2bc>
     9c4:	adrp	x23, 0 <ctf_add_type_mapping>
     9c8:	add	x23, x23, #0x0
     9cc:	mov	x0, x22
     9d0:	bl	0 <feof>
     9d4:	cbnz	w0, a68 <ctf_link_write+0x270>
     9d8:	mov	w2, #0x1                   	// #1
     9dc:	mov	x0, x24
     9e0:	mov	x1, x25
     9e4:	mov	x3, x22
     9e8:	bl	0 <fread>
     9ec:	cbnz	x0, a68 <ctf_link_write+0x270>
     9f0:	mov	x0, x22
     9f4:	bl	0 <ferror>
     9f8:	cbz	w0, 9cc <ctf_link_write+0x1d4>
     9fc:	b	abc <ctf_link_write+0x2c4>
     a00:	adrp	x23, 0 <ctf_add_type_mapping>
     a04:	mov	x24, xzr
     a08:	add	x23, x23, #0x0
     a0c:	b	abc <ctf_link_write+0x2c4>
     a10:	adrp	x23, 0 <ctf_add_type_mapping>
     a14:	mov	x24, xzr
     a18:	add	x23, x23, #0x0
     a1c:	b	abc <ctf_link_write+0x2c4>
     a20:	mov	w1, w0
     a24:	mov	x0, x19
     a28:	bl	0 <ctf_set_errno>
     a2c:	adrp	x23, 0 <ctf_add_type_mapping>
     a30:	add	x23, x23, #0x0
     a34:	b	ad8 <ctf_link_write+0x2e0>
     a38:	adrp	x23, 0 <ctf_add_type_mapping>
     a3c:	mov	x24, xzr
     a40:	add	x23, x23, #0x0
     a44:	b	abc <ctf_link_write+0x2c4>
     a48:	adrp	x23, 0 <ctf_add_type_mapping>
     a4c:	mov	x24, xzr
     a50:	add	x23, x23, #0x0
     a54:	b	abc <ctf_link_write+0x2c4>
     a58:	adrp	x23, 0 <ctf_add_type_mapping>
     a5c:	mov	x24, xzr
     a60:	add	x23, x23, #0x0
     a64:	b	abc <ctf_link_write+0x2c4>
     a68:	str	x25, [x21]
     a6c:	ldr	x0, [sp]
     a70:	bl	0 <free>
     a74:	ldr	x0, [sp, #16]
     a78:	bl	0 <free>
     a7c:	mov	x0, x20
     a80:	bl	0 <free>
     a84:	ldr	x8, [sp, #40]
     a88:	cbz	x8, b48 <ctf_link_write+0x350>
     a8c:	ldr	x0, [sp, #32]
     a90:	mov	x19, xzr
     a94:	ldr	x0, [x0, x19, lsl #3]
     a98:	bl	0 <free>
     a9c:	ldp	x0, x8, [sp, #32]
     aa0:	add	x19, x19, #0x1
     aa4:	cmp	x19, x8
     aa8:	b.cc	a94 <ctf_link_write+0x29c>  // b.lo, b.ul, b.last
     aac:	bl	0 <free>
     ab0:	b	b48 <ctf_link_write+0x350>
     ab4:	adrp	x23, 0 <ctf_add_type_mapping>
     ab8:	add	x23, x23, #0x0
     abc:	bl	0 <__errno_location>
     ac0:	ldr	w1, [x0]
     ac4:	mov	x0, x19
     ac8:	bl	0 <ctf_set_errno>
     acc:	mov	x0, x24
     ad0:	bl	0 <free>
     ad4:	cbz	x22, ae0 <ctf_link_write+0x2e8>
     ad8:	mov	x0, x22
     adc:	bl	0 <fclose>
     ae0:	ldr	x0, [sp]
     ae4:	bl	0 <free>
     ae8:	ldr	x0, [sp, #16]
     aec:	bl	0 <free>
     af0:	mov	x0, x20
     af4:	bl	0 <free>
     af8:	ldr	x8, [sp, #40]
     afc:	cbz	x8, b24 <ctf_link_write+0x32c>
     b00:	ldr	x0, [sp, #32]
     b04:	mov	x20, xzr
     b08:	ldr	x0, [x0, x20, lsl #3]
     b0c:	bl	0 <free>
     b10:	ldp	x0, x8, [sp, #32]
     b14:	add	x20, x20, #0x1
     b18:	cmp	x20, x8
     b1c:	b.cc	b08 <ctf_link_write+0x310>  // b.lo, b.ul, b.last
     b20:	bl	0 <free>
     b24:	mov	x0, x19
     b28:	bl	0 <ctf_errno>
     b2c:	bl	0 <ctf_errmsg>
     b30:	mov	x2, x0
     b34:	adrp	x0, 0 <ctf_add_type_mapping>
     b38:	add	x0, x0, #0x0
     b3c:	mov	x1, x23
     b40:	bl	0 <ctf_dprintf>
     b44:	mov	x24, xzr
     b48:	mov	x0, x24
     b4c:	ldp	x20, x19, [sp, #112]
     b50:	ldp	x22, x21, [sp, #96]
     b54:	ldp	x24, x23, [sp, #80]
     b58:	ldr	x25, [sp, #64]
     b5c:	ldp	x29, x30, [sp, #48]
     b60:	add	sp, sp, #0x80
     b64:	ret

0000000000000b68 <ctf_accumulate_archive_names>:
     b68:	stp	x29, x30, [sp, #-64]!
     b6c:	stp	x24, x23, [sp, #16]
     b70:	stp	x22, x21, [sp, #32]
     b74:	stp	x20, x19, [sp, #48]
     b78:	ldr	x8, [x2, #24]
     b7c:	mov	x22, x0
     b80:	ldr	x0, [x2]
     b84:	mov	x20, x1
     b88:	add	x8, x8, #0x1
     b8c:	lsl	x1, x8, #3
     b90:	mov	x29, sp
     b94:	mov	x19, x2
     b98:	str	x8, [x2, #24]
     b9c:	bl	0 <realloc>
     ba0:	cbz	x0, c2c <ctf_accumulate_archive_names+0xc4>
     ba4:	mov	x21, x0
     ba8:	ldp	x0, x8, [x19, #16]
     bac:	lsl	x1, x8, #3
     bb0:	bl	0 <realloc>
     bb4:	cbz	x0, c2c <ctf_accumulate_archive_names+0xc4>
     bb8:	ldr	x8, [x20, #680]
     bbc:	mov	x23, x0
     bc0:	cbz	x8, bfc <ctf_accumulate_archive_names+0x94>
     bc4:	ldr	x2, [x20, #688]
     bc8:	mov	x0, x20
     bcc:	mov	x1, x22
     bd0:	blr	x8
     bd4:	cbz	x0, bfc <ctf_accumulate_archive_names+0x94>
     bd8:	mov	x24, x0
     bdc:	ldp	x0, x8, [x19, #32]
     be0:	add	x8, x8, #0x1
     be4:	lsl	x1, x8, #3
     be8:	str	x8, [x19, #40]
     bec:	bl	0 <realloc>
     bf0:	cbz	x0, c54 <ctf_accumulate_archive_names+0xec>
     bf4:	mov	x22, x24
     bf8:	str	x0, [x19, #32]
     bfc:	ldr	x8, [x19, #24]
     c00:	str	x21, [x19]
     c04:	lsl	x8, x8, #3
     c08:	sub	x8, x8, #0x8
     c0c:	str	x22, [x21, x8]
     c10:	str	x23, [x19, #16]
     c14:	str	x20, [x23, x8]
     c18:	ldp	x20, x19, [sp, #48]
     c1c:	ldp	x22, x21, [sp, #32]
     c20:	ldp	x24, x23, [sp, #16]
     c24:	ldp	x29, x30, [sp], #64
     c28:	ret
     c2c:	ldr	x8, [x19, #24]
     c30:	ldr	x0, [x19, #8]
     c34:	mov	w1, #0xc                   	// #12
     c38:	sub	x8, x8, #0x1
     c3c:	str	x8, [x19, #24]
     c40:	ldp	x20, x19, [sp, #48]
     c44:	ldp	x22, x21, [sp, #32]
     c48:	ldp	x24, x23, [sp, #16]
     c4c:	ldp	x29, x30, [sp], #64
     c50:	b	0 <ctf_set_errno>
     c54:	ldr	x8, [x19, #40]
     c58:	ldr	x0, [x19, #8]
     c5c:	mov	w1, #0xc                   	// #12
     c60:	sub	x8, x8, #0x1
     c64:	str	x8, [x19, #40]
     c68:	b	c40 <ctf_accumulate_archive_names+0xd8>

0000000000000c6c <ctf_change_parent_name>:
     c6c:	mov	x0, x1
     c70:	mov	x1, x2
     c74:	b	0 <ctf_parent_name_set>

0000000000000c78 <ctf_link_one_input_archive_member>:
     c78:	stp	x29, x30, [sp, #-48]!
     c7c:	stp	x22, x21, [sp, #16]
     c80:	mov	x21, x1
     c84:	adrp	x1, 0 <_CTF_SECTION>
     c88:	stp	x20, x19, [sp, #32]
     c8c:	mov	x20, x0
     c90:	add	x1, x1, #0x0
     c94:	mov	x0, x21
     c98:	mov	x29, sp
     c9c:	mov	x19, x2
     ca0:	bl	0 <strcmp>
     ca4:	cbz	w0, d4c <ctf_link_one_input_archive_member+0xd4>
     ca8:	mov	x0, x21
     cac:	bl	0 <strdup>
     cb0:	mov	x22, x19
     cb4:	str	x0, [x22, #40]!
     cb8:	ldur	x1, [x22, #-16]
     cbc:	mov	x0, x20
     cc0:	bl	0 <ctf_import>
     cc4:	mov	w8, #0x1                   	// #1
     cc8:	str	w8, [x22, #16]
     ccc:	ldr	x8, [x22]
     cd0:	cbz	x8, da4 <ctf_link_one_input_archive_member+0x12c>
     cd4:	adrp	x1, 0 <ctf_add_type_mapping>
     cd8:	add	x1, x1, #0x0
     cdc:	mov	w2, #0x5                   	// #5
     ce0:	mov	x0, x21
     ce4:	str	x21, [x19, #32]
     ce8:	bl	0 <strncmp>
     cec:	cbnz	w0, cf8 <ctf_link_one_input_archive_member+0x80>
     cf0:	add	x8, x21, #0x5
     cf4:	str	x8, [x19, #32]
     cf8:	adrp	x1, 0 <ctf_add_type_mapping>
     cfc:	add	x1, x1, #0x0
     d00:	mov	x0, x20
     d04:	mov	x2, x19
     d08:	str	x20, [x19, #16]
     d0c:	bl	0 <ctf_type_iter_all>
     d10:	tbnz	w0, #31, d28 <ctf_link_one_input_archive_member+0xb0>
     d14:	adrp	x1, 0 <ctf_add_type_mapping>
     d18:	add	x1, x1, #0x0
     d1c:	mov	x0, x20
     d20:	mov	x2, x19
     d24:	bl	0 <ctf_variable_iter>
     d28:	mov	w21, w0
     d2c:	ldr	x0, [x19, #40]
     d30:	str	wzr, [x19, #56]
     d34:	bl	0 <free>
     d38:	asr	w0, w21, #31
     d3c:	ldp	x20, x19, [sp, #32]
     d40:	ldp	x22, x21, [sp, #16]
     d44:	ldp	x29, x30, [sp], #48
     d48:	ret
     d4c:	ldr	w8, [x19, #48]
     d50:	cbz	w8, d68 <ctf_link_one_input_archive_member+0xf0>
     d54:	mov	w0, wzr
     d58:	ldp	x20, x19, [sp, #32]
     d5c:	ldp	x22, x21, [sp, #16]
     d60:	ldp	x29, x30, [sp], #48
     d64:	ret
     d68:	adrp	x0, 0 <ctf_add_type_mapping>
     d6c:	add	x0, x0, #0x0
     d70:	bl	0 <strdup>
     d74:	mov	x22, x19
     d78:	str	x0, [x22, #40]!
     d7c:	cbz	x0, da4 <ctf_link_one_input_archive_member+0x12c>
     d80:	ldr	x1, [x19, #8]
     d84:	bl	0 <ctf_str_append>
     d88:	cbz	x0, d94 <ctf_link_one_input_archive_member+0x11c>
     d8c:	str	x0, [x22]
     d90:	b	cd4 <ctf_link_one_input_archive_member+0x5c>
     d94:	ldr	x0, [x22]
     d98:	bl	0 <free>
     d9c:	ldr	x8, [x22]
     da0:	cbnz	x8, cd4 <ctf_link_one_input_archive_member+0x5c>
     da4:	mov	w1, #0xc                   	// #12
     da8:	mov	x0, x20
     dac:	bl	0 <ctf_set_errno>
     db0:	ldp	x20, x19, [sp, #32]
     db4:	ldp	x22, x21, [sp, #16]
     db8:	ldp	x29, x30, [sp], #48
     dbc:	ret

0000000000000dc0 <empty_link_type_mapping>:
     dc0:	ldr	x0, [x1, #664]
     dc4:	cbz	x0, dcc <empty_link_type_mapping+0xc>
     dc8:	b	0 <ctf_dynhash_empty>
     dcc:	ret

0000000000000dd0 <ctf_link_one_type>:
     dd0:	stp	x29, x30, [sp, #-64]!
     dd4:	stp	x22, x21, [sp, #32]
     dd8:	stp	x20, x19, [sp, #48]
     ddc:	ldr	w8, [x2, #52]
     de0:	mov	x19, x2
     de4:	str	x23, [sp, #16]
     de8:	mov	x29, sp
     dec:	cbz	w8, e0c <ctf_link_one_type+0x3c>
     df0:	adrp	x0, 0 <ctf_add_type_mapping>
     df4:	add	x0, x0, #0x0
     df8:	bl	0 <ctf_dprintf>
     dfc:	ldr	x0, [x19]
     e00:	mov	w1, #0x419                 	// #1049
     e04:	bl	0 <ctf_set_errno>
     e08:	b	f1c <ctf_link_one_type+0x14c>
     e0c:	ldr	w8, [x19, #56]
     e10:	mov	x20, x0
     e14:	cbz	w8, e98 <ctf_link_one_type+0xc8>
     e18:	ldp	x0, x1, [x19]
     e1c:	ldr	x2, [x19, #32]
     e20:	bl	3b4 <ctf_create_per_cu>
     e24:	cbz	x0, f18 <ctf_link_one_type+0x148>
     e28:	ldr	x1, [x19, #16]
     e2c:	mov	x2, x20
     e30:	mov	x21, x0
     e34:	bl	0 <ctf_add_type>
     e38:	cmn	x0, #0x1
     e3c:	b.ne	eb0 <ctf_link_one_type+0xe0>  // b.any
     e40:	mov	x0, x21
     e44:	bl	0 <ctf_errno>
     e48:	cmp	w0, #0x41b
     e4c:	b.eq	eb0 <ctf_link_one_type+0xe0>  // b.none
     e50:	ldr	x22, [x19, #40]
     e54:	ldr	x23, [x19, #8]
     e58:	mov	w21, w0
     e5c:	bl	0 <ctf_errmsg>
     e60:	mov	x5, x0
     e64:	adrp	x0, 0 <ctf_add_type_mapping>
     e68:	add	x0, x0, #0x0
     e6c:	mov	x1, x20
     e70:	mov	x2, x22
     e74:	mov	x3, x23
     e78:	mov	x4, x22
     e7c:	bl	0 <ctf_dprintf>
     e80:	cmp	w21, #0x411
     e84:	b.ne	eb0 <ctf_link_one_type+0xe0>  // b.any
     e88:	ldr	x0, [x19]
     e8c:	mov	w1, wzr
     e90:	bl	0 <ctf_set_errno>
     e94:	b	eb0 <ctf_link_one_type+0xe0>
     e98:	ldr	x0, [x19]
     e9c:	ldr	x1, [x19, #16]
     ea0:	mov	x2, x20
     ea4:	bl	0 <ctf_add_type>
     ea8:	cmn	x0, #0x1
     eac:	b.eq	eb8 <ctf_link_one_type+0xe8>  // b.none
     eb0:	mov	w0, wzr
     eb4:	b	f1c <ctf_link_one_type+0x14c>
     eb8:	ldr	x0, [x19]
     ebc:	bl	0 <ctf_errno>
     ec0:	cmp	w0, #0x411
     ec4:	b.eq	efc <ctf_link_one_type+0x12c>  // b.none
     ec8:	cmp	w0, #0x41b
     ecc:	b.eq	eb0 <ctf_link_one_type+0xe0>  // b.none
     ed0:	ldr	x21, [x19, #40]
     ed4:	ldr	x19, [x19, #8]
     ed8:	bl	0 <ctf_errmsg>
     edc:	mov	x4, x0
     ee0:	adrp	x0, 0 <ctf_add_type_mapping>
     ee4:	add	x0, x0, #0x0
     ee8:	mov	x1, x20
     eec:	mov	x2, x21
     ef0:	mov	x3, x19
     ef4:	bl	0 <ctf_dprintf>
     ef8:	b	eb0 <ctf_link_one_type+0xe0>
     efc:	ldr	x0, [x19]
     f00:	mov	w1, wzr
     f04:	bl	0 <ctf_set_errno>
     f08:	ldp	x0, x1, [x19]
     f0c:	ldr	x2, [x19, #32]
     f10:	bl	3b4 <ctf_create_per_cu>
     f14:	cbnz	x0, e28 <ctf_link_one_type+0x58>
     f18:	mov	w0, #0xffffffff            	// #-1
     f1c:	ldp	x20, x19, [sp, #48]
     f20:	ldp	x22, x21, [sp, #32]
     f24:	ldr	x23, [sp, #16]
     f28:	ldp	x29, x30, [sp], #64
     f2c:	ret

0000000000000f30 <ctf_link_one_variable>:
     f30:	sub	sp, sp, #0x50
     f34:	stp	x29, x30, [sp, #16]
     f38:	stp	x24, x23, [sp, #32]
     f3c:	stp	x22, x21, [sp, #48]
     f40:	stp	x20, x19, [sp, #64]
     f44:	ldr	x8, [x2, #16]
     f48:	ldr	x23, [x2]
     f4c:	mov	x19, x2
     f50:	mov	x21, x1
     f54:	ldr	w9, [x8, #544]
     f58:	mov	x20, x0
     f5c:	add	x29, sp, #0x10
     f60:	cmp	x9, x1
     f64:	b.cc	f78 <ctf_link_one_variable+0x48>  // b.lo, b.ul, b.last
     f68:	ldr	x9, [x8, #512]
     f6c:	cmp	x9, #0x0
     f70:	csel	x8, x8, x9, eq  // eq = none
     f74:	ldr	w9, [x8, #544]
     f78:	and	x9, x9, x21
     f7c:	stp	x8, x9, [sp]
     f80:	ldr	x0, [x23, #664]
     f84:	cbz	x0, fc0 <ctf_link_one_variable+0x90>
     f88:	mov	x1, sp
     f8c:	bl	0 <ctf_dynhash_lookup>
     f90:	ldr	x24, [x23, #512]
     f94:	cbz	x0, fc4 <ctf_link_one_variable+0x94>
     f98:	mov	x22, x0
     f9c:	cbz	x24, fac <ctf_link_one_variable+0x7c>
     fa0:	ldr	w8, [x23, #544]
     fa4:	add	w8, w8, #0x1
     fa8:	orr	x22, x8, x22
     fac:	ldr	x8, [x19]
     fb0:	cmp	x23, x8
     fb4:	b.eq	1004 <ctf_link_one_variable+0xd4>  // b.none
     fb8:	mov	w24, wzr
     fbc:	b	1058 <ctf_link_one_variable+0x128>
     fc0:	ldr	x24, [x23, #512]
     fc4:	cbz	x24, 1050 <ctf_link_one_variable+0x120>
     fc8:	ldr	x0, [x24, #664]
     fcc:	cbz	x0, 1050 <ctf_link_one_variable+0x120>
     fd0:	mov	x1, sp
     fd4:	bl	0 <ctf_dynhash_lookup>
     fd8:	cbz	x0, 1050 <ctf_link_one_variable+0x120>
     fdc:	ldr	x8, [x24, #512]
     fe0:	mov	x22, x0
     fe4:	cbz	x8, ff4 <ctf_link_one_variable+0xc4>
     fe8:	ldr	w8, [x24, #544]
     fec:	add	w8, w8, #0x1
     ff0:	orr	x22, x8, x22
     ff4:	mov	x23, x24
     ff8:	ldr	x8, [x19]
     ffc:	cmp	x23, x8
    1000:	b.ne	fb8 <ctf_link_one_variable+0x88>  // b.any
    1004:	ldr	x0, [x23, #592]
    1008:	mov	x1, x20
    100c:	bl	0 <ctf_dynhash_lookup>
    1010:	cbz	x0, 1134 <ctf_link_one_variable+0x204>
    1014:	ldr	x8, [x0, #24]
    1018:	mov	x24, x0
    101c:	cmp	x8, x22
    1020:	mov	x8, x22
    1024:	b.eq	103c <ctf_link_one_variable+0x10c>  // b.none
    1028:	adrp	x0, 0 <ctf_add_type_mapping>
    102c:	add	x0, x0, #0x0
    1030:	mov	x1, x20
    1034:	bl	0 <ctf_dprintf>
    1038:	ldr	x8, [x24, #24]
    103c:	mov	w24, wzr
    1040:	cmp	x8, x21
    1044:	mov	w0, wzr
    1048:	b.ne	1058 <ctf_link_one_variable+0x128>  // b.any
    104c:	b	1180 <ctf_link_one_variable+0x250>
    1050:	mov	x22, xzr
    1054:	mov	w24, #0x1                   	// #1
    1058:	ldp	x0, x1, [x19]
    105c:	ldr	x2, [x19, #32]
    1060:	bl	3b4 <ctf_create_per_cu>
    1064:	cbz	x0, 10c0 <ctf_link_one_variable+0x190>
    1068:	mov	x23, x0
    106c:	cbz	w24, 1104 <ctf_link_one_variable+0x1d4>
    1070:	ldr	x8, [x19, #16]
    1074:	ldr	w9, [x8, #544]
    1078:	cmp	x9, x21
    107c:	b.cc	1090 <ctf_link_one_variable+0x160>  // b.lo, b.ul, b.last
    1080:	ldr	x9, [x8, #512]
    1084:	cmp	x9, #0x0
    1088:	csel	x8, x8, x9, eq  // eq = none
    108c:	ldr	w9, [x8, #544]
    1090:	and	x9, x9, x21
    1094:	stp	x8, x9, [sp]
    1098:	ldr	x0, [x23, #664]
    109c:	cbz	x0, 10c8 <ctf_link_one_variable+0x198>
    10a0:	mov	x1, sp
    10a4:	bl	0 <ctf_dynhash_lookup>
    10a8:	ldr	x24, [x23, #512]
    10ac:	cbz	x0, 10d4 <ctf_link_one_variable+0x1a4>
    10b0:	mov	x22, x0
    10b4:	cbz	x24, 1104 <ctf_link_one_variable+0x1d4>
    10b8:	ldr	w8, [x23, #544]
    10bc:	b	10fc <ctf_link_one_variable+0x1cc>
    10c0:	mov	w0, #0xffffffff            	// #-1
    10c4:	b	1180 <ctf_link_one_variable+0x250>
    10c8:	ldr	x24, [x23, #512]
    10cc:	cbnz	x24, 10d8 <ctf_link_one_variable+0x1a8>
    10d0:	b	1164 <ctf_link_one_variable+0x234>
    10d4:	cbz	x24, 1164 <ctf_link_one_variable+0x234>
    10d8:	ldr	x0, [x24, #664]
    10dc:	cbz	x0, 1164 <ctf_link_one_variable+0x234>
    10e0:	mov	x1, sp
    10e4:	bl	0 <ctf_dynhash_lookup>
    10e8:	cbz	x0, 1164 <ctf_link_one_variable+0x234>
    10ec:	ldr	x8, [x24, #512]
    10f0:	mov	x22, x0
    10f4:	cbz	x8, 1104 <ctf_link_one_variable+0x1d4>
    10f8:	ldr	w8, [x24, #544]
    10fc:	add	w8, w8, #0x1
    1100:	orr	x22, x8, x22
    1104:	ldr	x0, [x23, #592]
    1108:	mov	x1, x20
    110c:	bl	0 <ctf_dynhash_lookup>
    1110:	cbz	x0, 1134 <ctf_link_one_variable+0x204>
    1114:	ldr	x8, [x0, #24]
    1118:	cmp	x8, x22
    111c:	b.eq	117c <ctf_link_one_variable+0x24c>  // b.none
    1120:	adrp	x0, 0 <ctf_add_type_mapping>
    1124:	add	x0, x0, #0x0
    1128:	mov	x1, x20
    112c:	bl	0 <ctf_dprintf>
    1130:	b	117c <ctf_link_one_variable+0x24c>
    1134:	mov	x0, x23
    1138:	mov	x1, x20
    113c:	mov	x2, x22
    1140:	bl	0 <ctf_add_variable>
    1144:	tbz	w0, #31, 117c <ctf_link_one_variable+0x24c>
    1148:	ldr	x19, [x19]
    114c:	mov	x0, x23
    1150:	bl	0 <ctf_errno>
    1154:	mov	w1, w0
    1158:	mov	x0, x19
    115c:	bl	0 <ctf_set_errno>
    1160:	b	1180 <ctf_link_one_variable+0x250>
    1164:	ldr	x3, [x19, #8]
    1168:	adrp	x0, 0 <ctf_add_type_mapping>
    116c:	add	x0, x0, #0x0
    1170:	mov	x1, x21
    1174:	mov	x2, x20
    1178:	bl	0 <ctf_dprintf>
    117c:	mov	w0, wzr
    1180:	ldp	x20, x19, [sp, #64]
    1184:	ldp	x22, x21, [sp, #48]
    1188:	ldp	x24, x23, [sp, #32]
    118c:	ldp	x29, x30, [sp, #16]
    1190:	add	sp, sp, #0x50
    1194:	ret

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_lookup_by_name>:
   0:	sub	sp, sp, #0x70
   4:	stp	x20, x19, [sp, #96]
   8:	mov	x19, x0
   c:	stp	x29, x30, [sp, #16]
  10:	stp	x28, x27, [sp, #32]
  14:	stp	x26, x25, [sp, #48]
  18:	stp	x24, x23, [sp, #64]
  1c:	stp	x22, x21, [sp, #80]
  20:	add	x29, sp, #0x10
  24:	cbz	x1, 250 <ctf_lookup_by_name+0x250>
  28:	mov	x0, x1
  2c:	mov	x20, x1
  30:	bl	0 <strlen>
  34:	ldrb	w27, [x20]
  38:	cbz	w27, 2bc <ctf_lookup_by_name+0x2bc>
  3c:	add	x26, x20, x0
  40:	bl	0 <__ctype_b_loc>
  44:	mov	x21, x0
  48:	mov	x23, xzr
  4c:	add	x8, x19, #0xf0
  50:	mov	x24, x20
  54:	str	x8, [sp, #8]
  58:	ldr	x28, [x21]
  5c:	and	x8, x27, #0xff
  60:	ldrh	w8, [x28, x8, lsl #1]
  64:	tbz	w8, #13, 74 <ctf_lookup_by_name+0x74>
  68:	ldrb	w27, [x24, #1]!
  6c:	ldrh	w8, [x28, x27, lsl #1]
  70:	tbnz	w8, #13, 68 <ctf_lookup_by_name+0x68>
  74:	cmp	x24, x26
  78:	b.eq	2a8 <ctf_lookup_by_name+0x2a8>  // b.none
  7c:	add	x22, x24, #0x1
  80:	adrp	x1, 0 <ctf_lookup_by_name>
  84:	mov	x0, x22
  88:	add	x1, x1, #0x0
  8c:	bl	0 <strpbrk>
  90:	cmp	x0, #0x0
  94:	and	w8, w27, #0xff
  98:	csel	x25, x26, x0, eq  // eq = none
  9c:	cmp	w8, #0x2a
  a0:	b.ne	fc <ctf_lookup_by_name+0xfc>  // b.any
  a4:	ldr	w8, [x19, #544]
  a8:	ldr	x9, [x19, #448]
  ac:	and	x10, x23, x8
  b0:	ldr	w9, [x9, x10, lsl #2]
  b4:	cbnz	w9, e0 <ctf_lookup_by_name+0xe0>
  b8:	mov	x0, x19
  bc:	mov	x1, x23
  c0:	bl	0 <ctf_type_resolve_unsliced>
  c4:	cmn	x0, #0x1
  c8:	b.eq	258 <ctf_lookup_by_name+0x258>  // b.none
  cc:	ldr	w8, [x19, #544]
  d0:	ldr	x9, [x19, #448]
  d4:	and	x10, x0, x8
  d8:	ldr	w9, [x9, x10, lsl #2]
  dc:	cbz	w9, 258 <ctf_lookup_by_name+0x258>
  e0:	ldrb	w10, [x19, #552]
  e4:	add	w8, w8, #0x1
  e8:	mov	x25, x22
  ec:	sbfx	w10, w10, #0, #1
  f0:	and	w8, w10, w8
  f4:	orr	w23, w9, w8
  f8:	b	23c <ctf_lookup_by_name+0x23c>
  fc:	ldurb	w8, [x25, #-1]
 100:	sub	x22, x25, x24
 104:	add	x8, x8, w22, sxtw
 108:	cmp	w8, #0x69
 10c:	b.lt	154 <ctf_lookup_by_name+0x154>  // b.tstop
 110:	sub	x8, x8, #0x69
 114:	cmp	w8, #0x14
 118:	b.hi	154 <ctf_lookup_by_name+0x154>  // b.pmore
 11c:	adrp	x9, 0 <ctf_lookup_by_name>
 120:	add	x9, x9, #0x0
 124:	add	x9, x9, x8, lsl #4
 128:	ldr	x9, [x9, #8]
 12c:	cmp	x9, x22
 130:	b.ne	154 <ctf_lookup_by_name+0x154>  // b.any
 134:	adrp	x9, 0 <ctf_lookup_by_name>
 138:	lsl	x8, x8, #4
 13c:	add	x9, x9, #0x0
 140:	ldr	x0, [x9, x8]
 144:	mov	x1, x24
 148:	mov	x2, x22
 14c:	bl	0 <strncmp>
 150:	cbz	w0, 23c <ctf_lookup_by_name+0x23c>
 154:	ldr	x1, [x19, #216]
 158:	cbz	x1, 258 <ctf_lookup_by_name+0x258>
 15c:	ldr	x27, [sp, #8]
 160:	b	178 <ctf_lookup_by_name+0x178>
 164:	ldur	x8, [x27, #-16]
 168:	cmp	x22, x8
 16c:	b.cs	194 <ctf_lookup_by_name+0x194>  // b.hs, b.nlast
 170:	ldr	x1, [x27], #24
 174:	cbz	x1, 258 <ctf_lookup_by_name+0x258>
 178:	ldrb	w8, [x1]
 17c:	cbz	w8, 164 <ctf_lookup_by_name+0x164>
 180:	mov	x0, x24
 184:	mov	x2, x22
 188:	bl	0 <strncmp>
 18c:	cbnz	w0, 170 <ctf_lookup_by_name+0x170>
 190:	b	164 <ctf_lookup_by_name+0x164>
 194:	add	x8, x24, x8
 198:	sub	x23, x8, #0x1
 19c:	ldrb	w8, [x23, #1]!
 1a0:	ldrh	w8, [x28, x8, lsl #1]
 1a4:	tbnz	w8, #13, 19c <ctf_lookup_by_name+0x19c>
 1a8:	mov	w1, #0x2a                  	// #42
 1ac:	mov	x0, x23
 1b0:	bl	0 <strchr>
 1b4:	cmp	x0, #0x0
 1b8:	csel	x8, x26, x0, eq  // eq = none
 1bc:	add	x25, x8, #0x1
 1c0:	ldurb	w8, [x25, #-2]
 1c4:	sub	x25, x25, #0x1
 1c8:	ldrh	w8, [x28, x8, lsl #1]
 1cc:	tbnz	w8, #13, 1c0 <ctf_lookup_by_name+0x1c0>
 1d0:	ldr	x8, [x19, #712]
 1d4:	ldr	x0, [x19, #704]
 1d8:	sub	x24, x25, x23
 1dc:	add	x9, x24, #0x1
 1e0:	cmp	x8, x9
 1e4:	b.cs	208 <ctf_lookup_by_name+0x208>  // b.hs, b.nlast
 1e8:	bl	0 <free>
 1ec:	mov	x0, x23
 1f0:	mov	x1, x24
 1f4:	bl	0 <xstrndup>
 1f8:	mov	x2, x0
 1fc:	str	x0, [x19, #704]
 200:	cbnz	x0, 220 <ctf_lookup_by_name+0x220>
 204:	b	2e4 <ctf_lookup_by_name+0x2e4>
 208:	mov	x1, x23
 20c:	mov	x2, x24
 210:	bl	0 <memcpy>
 214:	ldr	x8, [x19, #704]
 218:	strb	wzr, [x8, x24]
 21c:	ldr	x2, [x19, #704]
 220:	ldur	x1, [x27, #-8]
 224:	mov	x0, x19
 228:	bl	0 <ctf_lookup_by_rawhash>
 22c:	cbz	x0, 258 <ctf_lookup_by_name+0x258>
 230:	ldur	x8, [x27, #-24]
 234:	mov	x23, x0
 238:	cbz	x8, 258 <ctf_lookup_by_name+0x258>
 23c:	ldrb	w27, [x25]
 240:	mov	x24, x25
 244:	cbnz	w27, 58 <ctf_lookup_by_name+0x58>
 248:	mov	w8, wzr
 24c:	b	2b4 <ctf_lookup_by_name+0x2b4>
 250:	mov	w1, #0x16                  	// #22
 254:	b	2c0 <ctf_lookup_by_name+0x2c0>
 258:	mov	w1, #0x402                 	// #1026
 25c:	mov	x0, x19
 260:	bl	0 <ctf_set_errno>
 264:	ldr	x0, [x19, #512]
 268:	cbz	x0, 280 <ctf_lookup_by_name+0x280>
 26c:	mov	x1, x20
 270:	bl	0 <ctf_lookup_by_name>
 274:	mov	x23, x0
 278:	cmn	x0, #0x1
 27c:	b.ne	284 <ctf_lookup_by_name+0x284>  // b.any
 280:	mov	x23, #0xffffffffffffffff    	// #-1
 284:	mov	x0, x23
 288:	ldp	x20, x19, [sp, #96]
 28c:	ldp	x22, x21, [sp, #80]
 290:	ldp	x24, x23, [sp, #64]
 294:	ldp	x26, x25, [sp, #48]
 298:	ldp	x28, x27, [sp, #32]
 29c:	ldp	x29, x30, [sp, #16]
 2a0:	add	sp, sp, #0x70
 2a4:	ret
 2a8:	ldrb	w8, [x26]
 2ac:	cmp	w8, #0x0
 2b0:	cset	w8, ne  // ne = any
 2b4:	cbz	x23, 2bc <ctf_lookup_by_name+0x2bc>
 2b8:	cbz	w8, 284 <ctf_lookup_by_name+0x284>
 2bc:	mov	w1, #0x403                 	// #1027
 2c0:	mov	x0, x19
 2c4:	ldp	x20, x19, [sp, #96]
 2c8:	ldp	x22, x21, [sp, #80]
 2cc:	ldp	x24, x23, [sp, #64]
 2d0:	ldp	x26, x25, [sp, #48]
 2d4:	ldp	x28, x27, [sp, #32]
 2d8:	ldp	x29, x30, [sp, #16]
 2dc:	add	sp, sp, #0x70
 2e0:	b	0 <ctf_set_errno>
 2e4:	mov	w1, #0xc                   	// #12
 2e8:	mov	x0, x19
 2ec:	bl	0 <ctf_set_errno>
 2f0:	b	280 <ctf_lookup_by_name+0x280>

00000000000002f4 <ctf_lookup_variable>:
 2f4:	stp	x29, x30, [sp, #-80]!
 2f8:	stp	x20, x19, [sp, #64]
 2fc:	mov	x19, x1
 300:	str	x25, [sp, #16]
 304:	stp	x24, x23, [sp, #32]
 308:	stp	x22, x21, [sp, #48]
 30c:	mov	x29, sp
 310:	b	31c <ctf_lookup_variable+0x28>
 314:	ldr	x0, [x20, #512]
 318:	cbz	x0, 390 <ctf_lookup_variable+0x9c>
 31c:	ldr	x22, [x0, #472]
 320:	mov	x20, x0
 324:	cbz	x22, 314 <ctf_lookup_variable+0x20>
 328:	ldr	x21, [x20, #464]
 32c:	mov	x23, xzr
 330:	b	348 <ctf_lookup_variable+0x54>
 334:	add	x23, x24, #0x1
 338:	mov	x24, x22
 33c:	cmp	x23, x24
 340:	mov	x22, x24
 344:	b.cs	314 <ctf_lookup_variable+0x20>  // b.hs, b.nlast
 348:	add	x8, x22, x23
 34c:	lsr	x24, x8, #1
 350:	add	x25, x21, x24, lsl #3
 354:	ldr	w1, [x25]
 358:	mov	x0, x20
 35c:	bl	0 <ctf_strptr>
 360:	mov	x1, x0
 364:	mov	x0, x19
 368:	bl	0 <strcmp>
 36c:	tbnz	w0, #31, 33c <ctf_lookup_variable+0x48>
 370:	cbnz	w0, 334 <ctf_lookup_variable+0x40>
 374:	ldr	w0, [x25, #4]
 378:	ldp	x20, x19, [sp, #64]
 37c:	ldp	x22, x21, [sp, #48]
 380:	ldp	x24, x23, [sp, #32]
 384:	ldr	x25, [sp, #16]
 388:	ldp	x29, x30, [sp], #80
 38c:	ret
 390:	mov	x0, x20
 394:	ldp	x20, x19, [sp, #64]
 398:	ldp	x22, x21, [sp, #48]
 39c:	ldp	x24, x23, [sp, #32]
 3a0:	ldr	x25, [sp, #16]
 3a4:	mov	w1, #0x407                 	// #1031
 3a8:	ldp	x29, x30, [sp], #80
 3ac:	b	0 <ctf_set_errno>

00000000000003b0 <ctf_lookup_symbol_name>:
 3b0:	sub	sp, sp, #0x40
 3b4:	stp	x29, x30, [sp, #32]
 3b8:	ldr	x8, [x0, #64]
 3bc:	str	x19, [sp, #48]
 3c0:	mov	x19, x0
 3c4:	add	x29, sp, #0x20
 3c8:	cbz	x8, 404 <ctf_lookup_symbol_name+0x54>
 3cc:	ldr	x9, [x19, #432]
 3d0:	cmp	x9, x1
 3d4:	b.ls	40c <ctf_lookup_symbol_name+0x5c>  // b.plast
 3d8:	ldr	x9, [x19, #80]
 3dc:	cmp	x9, #0x10
 3e0:	b.ne	430 <ctf_lookup_symbol_name+0x80>  // b.any
 3e4:	add	x0, x8, x1, lsl #4
 3e8:	add	x1, sp, #0x8
 3ec:	bl	0 <ctf_sym_to_elf64>
 3f0:	ldr	w8, [x0]
 3f4:	ldr	x9, [x19, #360]
 3f8:	cmp	x9, x8
 3fc:	b.hi	448 <ctf_lookup_symbol_name+0x98>  // b.pmore
 400:	b	418 <ctf_lookup_symbol_name+0x68>
 404:	mov	w1, #0x3f2                 	// #1010
 408:	b	410 <ctf_lookup_symbol_name+0x60>
 40c:	mov	w1, #0x16                  	// #22
 410:	mov	x0, x19
 414:	bl	0 <ctf_set_errno>
 418:	adrp	x0, 0 <_CTF_NULLSTR>
 41c:	add	x0, x0, #0x0
 420:	ldr	x19, [sp, #48]
 424:	ldp	x29, x30, [sp, #32]
 428:	add	sp, sp, #0x40
 42c:	ret
 430:	mov	w9, #0x18                  	// #24
 434:	madd	x0, x1, x9, x8
 438:	ldr	w8, [x0]
 43c:	ldr	x9, [x19, #360]
 440:	cmp	x9, x8
 444:	b.ls	418 <ctf_lookup_symbol_name+0x68>  // b.plast
 448:	ldr	x9, [x19, #352]
 44c:	add	x0, x9, x8
 450:	ldr	x19, [sp, #48]
 454:	ldp	x29, x30, [sp, #32]
 458:	add	sp, sp, #0x40
 45c:	ret

0000000000000460 <ctf_lookup_by_symbol>:
 460:	ldr	x8, [x0, #64]
 464:	cbz	x8, 49c <ctf_lookup_by_symbol+0x3c>
 468:	ldr	x9, [x0, #432]
 46c:	cmp	x9, x1
 470:	b.ls	4a4 <ctf_lookup_by_symbol+0x44>  // b.plast
 474:	ldr	x9, [x0, #80]
 478:	cmp	x9, #0x10
 47c:	b.ne	4ac <ctf_lookup_by_symbol+0x4c>  // b.any
 480:	add	x8, x8, x1, lsl #4
 484:	ldrb	w8, [x8, #12]
 488:	and	w8, w8, #0xf
 48c:	cmp	w8, #0x1
 490:	b.eq	4c4 <ctf_lookup_by_symbol+0x64>  // b.none
 494:	mov	w1, #0x406                 	// #1030
 498:	b	0 <ctf_set_errno>
 49c:	mov	w1, #0x3f2                 	// #1010
 4a0:	b	0 <ctf_set_errno>
 4a4:	mov	w1, #0x16                  	// #22
 4a8:	b	0 <ctf_set_errno>
 4ac:	mov	w9, #0x18                  	// #24
 4b0:	madd	x8, x1, x9, x8
 4b4:	ldrb	w8, [x8, #4]
 4b8:	and	w8, w8, #0xf
 4bc:	cmp	w8, #0x1
 4c0:	b.ne	494 <ctf_lookup_by_symbol+0x34>  // b.any
 4c4:	ldr	x8, [x0, #424]
 4c8:	ldr	w8, [x8, x1, lsl #2]
 4cc:	cmn	w8, #0x1
 4d0:	b.eq	4e8 <ctf_lookup_by_symbol+0x88>  // b.none
 4d4:	ldr	x9, [x0, #408]
 4d8:	ldr	w8, [x9, x8]
 4dc:	cbz	w8, 4e8 <ctf_lookup_by_symbol+0x88>
 4e0:	mov	x0, x8
 4e4:	ret
 4e8:	mov	w1, #0x407                 	// #1031
 4ec:	b	0 <ctf_set_errno>

00000000000004f0 <ctf_lookup_by_id>:
 4f0:	stp	x29, x30, [sp, #-32]!
 4f4:	stp	x20, x19, [sp, #16]
 4f8:	mov	x19, x0
 4fc:	ldr	x0, [x0]
 500:	mov	x29, sp
 504:	ldr	w8, [x0, #552]
 508:	tbnz	w8, #0, 514 <ctf_lookup_by_id+0x24>
 50c:	mov	x20, x0
 510:	b	530 <ctf_lookup_by_id+0x40>
 514:	ldr	w9, [x0, #544]
 518:	mov	x20, x0
 51c:	cmp	x9, x1
 520:	b.cc	530 <ctf_lookup_by_id+0x40>  // b.lo, b.ul, b.last
 524:	ldr	x20, [x0, #512]
 528:	cbz	x20, 5a8 <ctf_lookup_by_id+0xb8>
 52c:	ldr	w8, [x20, #552]
 530:	tbnz	w8, #1, 56c <ctf_lookup_by_id+0x7c>
 534:	ldr	w8, [x20, #544]
 538:	ands	x8, x8, x1
 53c:	b.eq	590 <ctf_lookup_by_id+0xa0>  // b.none
 540:	ldr	x9, [x20, #480]
 544:	cmp	x8, x9
 548:	b.hi	590 <ctf_lookup_by_id+0xa0>  // b.pmore
 54c:	str	x20, [x19]
 550:	ldr	x9, [x20, #440]
 554:	ldr	x10, [x20, #408]
 558:	ldr	w8, [x9, x8, lsl #2]
 55c:	add	x0, x10, x8
 560:	ldp	x20, x19, [sp, #16]
 564:	ldp	x29, x30, [sp], #32
 568:	ret
 56c:	mov	x0, x20
 570:	bl	0 <ctf_dynamic_type>
 574:	cbz	x0, 58c <ctf_lookup_by_id+0x9c>
 578:	str	x20, [x19]
 57c:	add	x0, x0, #0x18
 580:	ldp	x20, x19, [sp, #16]
 584:	ldp	x29, x30, [sp], #32
 588:	ret
 58c:	ldr	x0, [x19]
 590:	mov	w1, #0x3fa                 	// #1018
 594:	bl	0 <ctf_set_errno>
 598:	mov	x0, xzr
 59c:	ldp	x20, x19, [sp, #16]
 5a0:	ldp	x29, x30, [sp], #32
 5a4:	ret
 5a8:	mov	w1, #0x3f3                 	// #1011
 5ac:	b	594 <ctf_lookup_by_id+0xa4>

00000000000005b0 <ctf_func_info>:
 5b0:	stp	x29, x30, [sp, #-64]!
 5b4:	stp	x22, x21, [sp, #32]
 5b8:	stp	x20, x19, [sp, #48]
 5bc:	ldr	x8, [x0, #64]
 5c0:	mov	x19, x0
 5c4:	str	x23, [sp, #16]
 5c8:	mov	x29, sp
 5cc:	cbz	x8, 608 <ctf_func_info+0x58>
 5d0:	ldr	x9, [x19, #432]
 5d4:	cmp	x9, x1
 5d8:	b.ls	610 <ctf_func_info+0x60>  // b.plast
 5dc:	ldr	x9, [x19, #80]
 5e0:	mov	x20, x2
 5e4:	cmp	x9, #0x10
 5e8:	b.ne	618 <ctf_func_info+0x68>  // b.any
 5ec:	add	x8, x8, x1, lsl #4
 5f0:	ldrb	w8, [x8, #12]
 5f4:	and	w8, w8, #0xf
 5f8:	cmp	w8, #0x2
 5fc:	b.eq	630 <ctf_func_info+0x80>  // b.none
 600:	mov	w1, #0x404                 	// #1028
 604:	b	6b4 <ctf_func_info+0x104>
 608:	mov	w1, #0x3f2                 	// #1010
 60c:	b	6b4 <ctf_func_info+0x104>
 610:	mov	w1, #0x16                  	// #22
 614:	b	6b4 <ctf_func_info+0x104>
 618:	mov	w9, #0x18                  	// #24
 61c:	madd	x8, x1, x9, x8
 620:	ldrb	w8, [x8, #4]
 624:	and	w8, w8, #0xf
 628:	cmp	w8, #0x2
 62c:	b.ne	600 <ctf_func_info+0x50>  // b.any
 630:	ldr	x8, [x19, #424]
 634:	ldr	w8, [x8, x1, lsl #2]
 638:	cmn	w8, #0x1
 63c:	b.eq	6a8 <ctf_func_info+0xf8>  // b.none
 640:	ldr	x9, [x19, #408]
 644:	ldr	x10, [x19]
 648:	add	x23, x9, x8
 64c:	ldr	w22, [x23]
 650:	ldr	x8, [x10]
 654:	mov	w0, w22
 658:	blr	x8
 65c:	ldr	x8, [x19]
 660:	mov	w21, w0
 664:	mov	w0, w22
 668:	ldr	x8, [x8, #16]
 66c:	blr	x8
 670:	orr	w8, w0, w21
 674:	cbz	w8, 6a8 <ctf_func_info+0xf8>
 678:	cmp	w21, #0x5
 67c:	b.ne	6b0 <ctf_func_info+0x100>  // b.any
 680:	ldr	w8, [x23, #4]
 684:	stp	w0, wzr, [x20, #8]
 688:	str	x8, [x20]
 68c:	cbz	w0, 6bc <ctf_func_info+0x10c>
 690:	sub	w8, w0, #0x1
 694:	add	x9, x23, w8, uxtw #2
 698:	ldr	w9, [x9, #8]
 69c:	cbz	w9, 6d0 <ctf_func_info+0x120>
 6a0:	mov	w0, wzr
 6a4:	b	6bc <ctf_func_info+0x10c>
 6a8:	mov	w1, #0x405                 	// #1029
 6ac:	b	6b4 <ctf_func_info+0x104>
 6b0:	mov	w1, #0x3ef                 	// #1007
 6b4:	mov	x0, x19
 6b8:	bl	0 <ctf_set_errno>
 6bc:	ldp	x20, x19, [sp, #48]
 6c0:	ldp	x22, x21, [sp, #32]
 6c4:	ldr	x23, [sp, #16]
 6c8:	ldp	x29, x30, [sp], #64
 6cc:	ret
 6d0:	mov	w0, wzr
 6d4:	mov	w9, #0x1                   	// #1
 6d8:	stp	w8, w9, [x20, #8]
 6dc:	b	6bc <ctf_func_info+0x10c>

00000000000006e0 <ctf_func_args>:
 6e0:	sub	sp, sp, #0x40
 6e4:	stp	x22, x21, [sp, #32]
 6e8:	mov	w22, w2
 6ec:	mov	x2, sp
 6f0:	stp	x29, x30, [sp, #16]
 6f4:	stp	x20, x19, [sp, #48]
 6f8:	add	x29, sp, #0x10
 6fc:	mov	x19, x3
 700:	mov	x20, x1
 704:	mov	x21, x0
 708:	bl	5b0 <ctf_func_info>
 70c:	tbnz	w0, #31, 7a0 <ctf_func_args+0xc0>
 710:	ldr	w8, [sp, #8]
 714:	cmp	w8, w22
 718:	csel	w8, w22, w8, hi  // hi = pmore
 71c:	cbz	w8, 798 <ctf_func_args+0xb8>
 720:	ldr	x9, [x21, #424]
 724:	ldr	x11, [x21, #408]
 728:	sub	w10, w8, #0x1
 72c:	cmp	w10, #0x3
 730:	ldr	w9, [x9, x20, lsl #2]
 734:	add	x13, x11, x9
 738:	add	x9, x13, #0x8
 73c:	b.cc	788 <ctf_func_args+0xa8>  // b.lo, b.ul, b.last
 740:	add	x10, x10, #0x1
 744:	and	x11, x10, #0x1fffffffc
 748:	add	x12, x19, #0x10
 74c:	add	x9, x9, x11, lsl #2
 750:	add	x19, x19, x11, lsl #3
 754:	sub	w8, w8, w11
 758:	add	x13, x13, #0x10
 75c:	mov	x14, x11
 760:	ldp	d0, d1, [x13, #-8]
 764:	subs	x14, x14, #0x4
 768:	add	x13, x13, #0x10
 76c:	uxtl	v0.2d, v0.2s
 770:	uxtl	v1.2d, v1.2s
 774:	stp	q0, q1, [x12, #-16]
 778:	add	x12, x12, #0x20
 77c:	b.ne	760 <ctf_func_args+0x80>  // b.any
 780:	cmp	x10, x11
 784:	b.eq	798 <ctf_func_args+0xb8>  // b.none
 788:	ldr	w10, [x9], #4
 78c:	subs	w8, w8, #0x1
 790:	str	x10, [x19], #8
 794:	b.ne	788 <ctf_func_args+0xa8>  // b.any
 798:	mov	w0, wzr
 79c:	b	7a4 <ctf_func_args+0xc4>
 7a0:	mov	w0, #0xffffffff            	// #-1
 7a4:	ldp	x20, x19, [sp, #48]
 7a8:	ldp	x22, x21, [sp, #32]
 7ac:	ldp	x29, x30, [sp, #16]
 7b0:	add	sp, sp, #0x40
 7b4:	ret

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_set_ctl_hashes>:
       0:	adrp	x8, 0 <ctf_set_ctl_hashes>
       4:	add	x8, x8, #0x0
       8:	mov	w9, #0x6                   	// #6
       c:	stp	x8, x9, [x0, #216]
      10:	adrp	x8, 0 <ctf_set_ctl_hashes>
      14:	adrp	x11, 0 <ctf_set_ctl_hashes>
      18:	add	x8, x8, #0x0
      1c:	mov	w9, #0x4                   	// #4
      20:	add	x10, x0, #0x98
      24:	add	x11, x11, #0x0
      28:	stp	x8, x9, [x0, #264]
      2c:	adrp	x8, 8b <ctf_simple_open+0x2b>
      30:	stp	x10, x11, [x0, #232]
      34:	add	x10, x0, #0xb8
      38:	add	x8, x8, #0x0
      3c:	mov	w12, #0x5                   	// #5
      40:	add	x13, x0, #0xa8
      44:	stp	x10, x8, [x0, #280]
      48:	add	x8, x0, #0xc8
      4c:	stp	x12, x13, [x0, #248]
      50:	stp	xzr, xzr, [x0, #320]
      54:	stp	xzr, x8, [x0, #296]
      58:	str	xzr, [x0, #312]
      5c:	ret

0000000000000060 <ctf_simple_open>:
      60:	sub	sp, sp, #0x70
      64:	adrp	x8, 86 <ctf_simple_open+0x26>
      68:	add	x8, x8, #0x0
      6c:	stp	x29, x30, [sp, #96]
      70:	add	x29, sp, #0x60
      74:	cbz	x0, 88 <ctf_simple_open+0x28>
      78:	mov	w9, #0x1                   	// #1
      7c:	stp	x8, x0, [x29, #-32]
      80:	sub	x0, x29, #0x20
      84:	stp	x1, x9, [x29, #-16]
      88:	cbz	x2, b0 <ctf_simple_open+0x50>
      8c:	add	x1, sp, #0x20
      90:	stp	x8, x2, [sp, #32]
      94:	stp	x3, x4, [sp, #48]
      98:	cbz	x5, b8 <ctf_simple_open+0x58>
      9c:	mov	w9, #0x1                   	// #1
      a0:	mov	x2, sp
      a4:	stp	x8, x5, [sp]
      a8:	stp	x6, x9, [sp, #16]
      ac:	b	bc <ctf_simple_open+0x5c>
      b0:	mov	x1, xzr
      b4:	cbnz	x5, 9c <ctf_simple_open+0x3c>
      b8:	mov	x2, xzr
      bc:	mov	x3, xzr
      c0:	mov	w4, wzr
      c4:	mov	x5, x7
      c8:	bl	158 <ctf_bufopen_internal>
      cc:	ldp	x29, x30, [sp, #96]
      d0:	add	sp, sp, #0x70
      d4:	ret

00000000000000d8 <ctf_simple_open_internal>:
      d8:	sub	sp, sp, #0x70
      dc:	adrp	x10, 86 <ctf_simple_open+0x26>
      e0:	mov	x9, x4
      e4:	add	x10, x10, #0x0
      e8:	stp	x29, x30, [sp, #96]
      ec:	add	x29, sp, #0x60
      f0:	cbz	x0, 104 <ctf_simple_open_internal+0x2c>
      f4:	mov	w8, #0x1                   	// #1
      f8:	stp	x10, x0, [x29, #-32]
      fc:	sub	x0, x29, #0x20
     100:	stp	x1, x8, [x29, #-16]
     104:	ldr	x8, [x29, #24]
     108:	ldr	w4, [x29, #16]
     10c:	cbz	x2, 134 <ctf_simple_open_internal+0x5c>
     110:	add	x1, sp, #0x20
     114:	stp	x10, x2, [sp, #32]
     118:	stp	x3, x9, [sp, #48]
     11c:	cbz	x5, 13c <ctf_simple_open_internal+0x64>
     120:	mov	w9, #0x1                   	// #1
     124:	mov	x2, sp
     128:	stp	x10, x5, [sp]
     12c:	stp	x6, x9, [sp, #16]
     130:	b	140 <ctf_simple_open_internal+0x68>
     134:	mov	x1, xzr
     138:	cbnz	x5, 120 <ctf_simple_open_internal+0x48>
     13c:	mov	x2, xzr
     140:	mov	x3, x7
     144:	mov	x5, x8
     148:	bl	158 <ctf_bufopen_internal>
     14c:	ldp	x29, x30, [sp, #96]
     150:	add	sp, sp, #0x70
     154:	ret

0000000000000158 <ctf_bufopen_internal>:
     158:	str	d8, [sp, #-112]!
     15c:	stp	x29, x30, [sp, #16]
     160:	stp	x28, x27, [sp, #32]
     164:	stp	x26, x25, [sp, #48]
     168:	stp	x24, x23, [sp, #64]
     16c:	stp	x22, x21, [sp, #80]
     170:	stp	x20, x19, [sp, #96]
     174:	mov	x29, sp
     178:	sub	sp, sp, #0x280
     17c:	mov	x21, x5
     180:	mov	w23, w4
     184:	mov	x24, x3
     188:	mov	x22, x2
     18c:	mov	x20, x1
     190:	mov	x25, x0
     194:	bl	0 <libctf_init_debug>
     198:	cbz	x25, 1a8 <ctf_bufopen_internal+0x50>
     19c:	cbz	x20, 1d4 <ctf_bufopen_internal+0x7c>
     1a0:	cbnz	x22, 1d4 <ctf_bufopen_internal+0x7c>
     1a4:	cbnz	x24, 1d4 <ctf_bufopen_internal+0x7c>
     1a8:	mov	w1, #0x16                  	// #22
     1ac:	mov	x0, x21
     1b0:	add	sp, sp, #0x280
     1b4:	ldp	x20, x19, [sp, #96]
     1b8:	ldp	x22, x21, [sp, #80]
     1bc:	ldp	x24, x23, [sp, #64]
     1c0:	ldp	x26, x25, [sp, #48]
     1c4:	ldp	x28, x27, [sp, #32]
     1c8:	ldp	x29, x30, [sp, #16]
     1cc:	ldr	d8, [sp], #112
     1d0:	b	0 <ctf_set_open_errno>
     1d4:	cbz	x20, 1f0 <ctf_bufopen_internal+0x98>
     1d8:	ldr	x8, [x20, #24]
     1dc:	orr	x8, x8, #0x8
     1e0:	cmp	x8, #0x18
     1e4:	b.ne	268 <ctf_bufopen_internal+0x110>  // b.any
     1e8:	ldr	x8, [x20, #8]
     1ec:	cbz	x8, 270 <ctf_bufopen_internal+0x118>
     1f0:	cbz	x22, 1fc <ctf_bufopen_internal+0xa4>
     1f4:	ldr	x8, [x22, #8]
     1f8:	cbz	x8, 278 <ctf_bufopen_internal+0x120>
     1fc:	ldr	x8, [x25, #16]
     200:	cmp	x8, #0x3
     204:	b.hi	210 <ctf_bufopen_internal+0xb8>  // b.pmore
     208:	mov	w1, #0x3f1                 	// #1009
     20c:	b	1ac <ctf_bufopen_internal+0x54>
     210:	ldr	x27, [x25, #8]
     214:	adrp	x0, 0 <ctf_set_ctl_hashes>
     218:	add	x0, x0, #0x0
     21c:	ldrh	w1, [x27]
     220:	ldrb	w2, [x27, #2]
     224:	bl	0 <ctf_dprintf>
     228:	ldrh	w8, [x27]
     22c:	mov	w9, #0xdff2                	// #57330
     230:	cmp	w8, w9
     234:	b.ne	504 <ctf_bufopen_internal+0x3ac>  // b.any
     238:	ldrb	w1, [x27, #2]
     23c:	sub	w8, w1, #0x1
     240:	cmp	w8, #0x4
     244:	b.cs	534 <ctf_bufopen_internal+0x3dc>  // b.hs, b.nlast
     248:	cbz	x20, 280 <ctf_bufopen_internal+0x128>
     24c:	cmp	w1, #0x2
     250:	b.hi	280 <ctf_bufopen_internal+0x128>  // b.pmore
     254:	adrp	x0, 0 <ctf_set_ctl_hashes>
     258:	add	x0, x0, #0x0
     25c:	bl	0 <ctf_dprintf>
     260:	mov	w1, #0x40a                 	// #1034
     264:	b	1ac <ctf_bufopen_internal+0x54>
     268:	mov	w1, #0x3ec                 	// #1004
     26c:	b	1ac <ctf_bufopen_internal+0x54>
     270:	mov	w1, #0x3ed                 	// #1005
     274:	b	1ac <ctf_bufopen_internal+0x54>
     278:	mov	w1, #0x3ee                 	// #1006
     27c:	b	1ac <ctf_bufopen_internal+0x54>
     280:	cmp	w1, #0x4
     284:	mov	w8, #0x34                  	// #52
     288:	mov	w9, #0x28                  	// #40
     28c:	mov	w28, wzr
     290:	csel	x26, x9, x8, cc  // cc = lo, ul, last
     294:	ldr	x8, [x25, #16]
     298:	cmp	x8, x26
     29c:	b.cc	208 <ctf_bufopen_internal+0xb0>  // b.lo, b.ul, b.last
     2a0:	mov	w0, #0x2d8                 	// #728
     2a4:	bl	0 <malloc>
     2a8:	cbz	x0, 39c <ctf_bufopen_internal+0x244>
     2ac:	mov	w2, #0x2d8                 	// #728
     2b0:	mov	w1, wzr
     2b4:	mov	x19, x0
     2b8:	bl	0 <memset>
     2bc:	cbz	w23, 2c8 <ctf_bufopen_internal+0x170>
     2c0:	mov	w8, #0x2                   	// #2
     2c4:	str	w8, [x19, #552]
     2c8:	mov	w0, #0x34                  	// #52
     2cc:	bl	0 <malloc>
     2d0:	str	x0, [x19, #8]
     2d4:	cbz	x0, 3a4 <ctf_bufopen_internal+0x24c>
     2d8:	ldr	x1, [x25, #8]
     2dc:	mov	x2, x26
     2e0:	mov	x23, x0
     2e4:	bl	0 <memcpy>
     2e8:	ldrb	w8, [x27, #2]
     2ec:	cmp	w8, #0x3
     2f0:	b.hi	318 <ctf_bufopen_internal+0x1c0>  // b.pmore
     2f4:	ldur	q0, [x23, #12]
     2f8:	ldr	w8, [x23, #36]
     2fc:	ldur	x9, [x23, #28]
     300:	str	wzr, [x23, #12]
     304:	dup	v1.2s, v0.s[3]
     308:	str	w8, [x23, #48]
     30c:	str	x9, [x23, #40]
     310:	str	q0, [x23, #16]
     314:	str	d1, [x23, #32]
     318:	cbz	w28, 3b4 <ctf_bufopen_internal+0x25c>
     31c:	ldp	w8, w9, [x23, #4]
     320:	ldr	w11, [x23, #12]
     324:	ldrh	w10, [x23]
     328:	rev	w8, w8
     32c:	rev	w9, w9
     330:	stp	w8, w9, [x23, #4]
     334:	ldp	w8, w9, [x23, #20]
     338:	rev	w11, w11
     33c:	str	w11, [x23, #12]
     340:	rev	w8, w8
     344:	str	w8, [x23, #20]
     348:	ldp	w11, w8, [x23, #28]
     34c:	rev	w9, w9
     350:	rev	w11, w11
     354:	stp	w9, w11, [x23, #24]
     358:	ldp	w9, w11, [x23, #36]
     35c:	rev	w8, w8
     360:	str	w8, [x23, #32]
     364:	rev	w8, w10
     368:	rev	w9, w9
     36c:	rev	w10, w11
     370:	lsr	w8, w8, #16
     374:	stp	w9, w10, [x23, #36]
     378:	strh	w8, [x23]
     37c:	mov	x10, x23
     380:	ldr	w8, [x10, #44]!
     384:	ldr	w9, [x10, #4]
     388:	rev	w8, w8
     38c:	str	x10, [sp, #96]
     390:	rev	w9, w9
     394:	stp	w8, w9, [x10]
     398:	b	3c4 <ctf_bufopen_internal+0x26c>
     39c:	mov	w1, #0xc                   	// #12
     3a0:	b	1ac <ctf_bufopen_internal+0x54>
     3a4:	mov	x0, x19
     3a8:	bl	0 <free>
     3ac:	mov	w1, #0xc                   	// #12
     3b0:	b	1ac <ctf_bufopen_internal+0x54>
     3b4:	mov	x9, x23
     3b8:	ldr	w8, [x9, #44]!
     3bc:	str	x9, [sp, #96]
     3c0:	ldr	w9, [x9, #4]
     3c4:	ldrb	w10, [x23, #3]
     3c8:	adrp	x0, 0 <ctf_set_ctl_hashes>
     3cc:	add	w1, w9, w8
     3d0:	add	x0, x0, #0x0
     3d4:	strb	w10, [x19, #16]
     3d8:	str	x1, [x19, #416]
     3dc:	bl	0 <ctf_dprintf>
     3e0:	ldr	w8, [x23, #16]
     3e4:	ldr	x27, [x19, #416]
     3e8:	cmp	x27, x8
     3ec:	b.cc	43c <ctf_bufopen_internal+0x2e4>  // b.lo, b.ul, b.last
     3f0:	ldr	w9, [x23, #20]
     3f4:	cmp	x27, x9
     3f8:	b.cc	43c <ctf_bufopen_internal+0x2e4>  // b.lo, b.ul, b.last
     3fc:	ldr	w10, [x23, #24]
     400:	cmp	x27, x10
     404:	b.cc	43c <ctf_bufopen_internal+0x2e4>  // b.lo, b.ul, b.last
     408:	ldr	w11, [x23, #28]
     40c:	cmp	x27, x11
     410:	b.cc	43c <ctf_bufopen_internal+0x2e4>  // b.lo, b.ul, b.last
     414:	ldr	w12, [x23, #32]
     418:	cmp	x27, x12
     41c:	b.cc	43c <ctf_bufopen_internal+0x2e4>  // b.lo, b.ul, b.last
     420:	ldr	w13, [x23, #40]
     424:	cmp	x27, x13
     428:	b.cc	43c <ctf_bufopen_internal+0x2e4>  // b.lo, b.ul, b.last
     42c:	ldr	x14, [sp, #96]
     430:	ldr	w14, [x14]
     434:	cmp	x27, x14
     438:	b.cs	444 <ctf_bufopen_internal+0x2ec>  // b.hs, b.nlast
     43c:	mov	w1, #0x3ef                 	// #1007
     440:	b	1ac <ctf_bufopen_internal+0x54>
     444:	cmp	w11, w12
     448:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     44c:	cmp	w10, w11
     450:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     454:	cmp	w8, w9
     458:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     45c:	cmp	w9, w10
     460:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     464:	cmp	w10, w13
     468:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     46c:	cmp	w13, w14
     470:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     474:	ldr	w14, [x23, #36]
     478:	cmp	w12, w14
     47c:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     480:	cmp	w14, w13
     484:	b.hi	43c <ctf_bufopen_internal+0x2e4>  // b.pmore
     488:	and	w8, w8, #0x3
     48c:	and	w9, w9, #0x2
     490:	and	w10, w10, #0x2
     494:	orr	w8, w9, w8
     498:	and	w11, w11, #0x2
     49c:	orr	w8, w8, w10
     4a0:	and	w12, w12, #0x2
     4a4:	orr	w8, w8, w11
     4a8:	orr	w8, w8, w12
     4ac:	and	w9, w13, #0x3
     4b0:	and	w14, w14, #0x3
     4b4:	orr	w8, w8, w9
     4b8:	orr	w8, w8, w14
     4bc:	cbnz	w8, 43c <ctf_bufopen_internal+0x2e4>
     4c0:	ldrb	w8, [x23, #3]
     4c4:	str	w8, [sp, #88]
     4c8:	tbnz	w8, #0, 53c <ctf_bufopen_internal+0x3e4>
     4cc:	cbz	w28, 59c <ctf_bufopen_internal+0x444>
     4d0:	mov	x0, x27
     4d4:	bl	0 <malloc>
     4d8:	str	x0, [x19, #392]
     4dc:	cbz	x0, 594 <ctf_bufopen_internal+0x43c>
     4e0:	mov	x8, x0
     4e4:	str	x8, [x19, #400]
     4e8:	ldr	x8, [x25, #8]
     4ec:	mov	x2, x27
     4f0:	add	x1, x8, x26
     4f4:	mov	x26, x0
     4f8:	bl	0 <memcpy>
     4fc:	str	x26, [x19, #408]
     500:	b	5c0 <ctf_bufopen_internal+0x468>
     504:	mov	w9, #0xf2df                	// #62175
     508:	cmp	w8, w9
     50c:	b.ne	208 <ctf_bufopen_internal+0xb0>  // b.any
     510:	ldrb	w8, [x27, #2]
     514:	cmp	w8, #0x4
     518:	b.ne	534 <ctf_bufopen_internal+0x3dc>  // b.any
     51c:	mov	w28, #0x1                   	// #1
     520:	mov	w26, #0x34                  	// #52
     524:	ldr	x8, [x25, #16]
     528:	cmp	x8, x26
     52c:	b.cc	208 <ctf_bufopen_internal+0xb0>  // b.lo, b.ul, b.last
     530:	b	2a0 <ctf_bufopen_internal+0x148>
     534:	mov	w1, #0x3ea                 	// #1002
     538:	b	1ac <ctf_bufopen_internal+0x54>
     53c:	mov	x0, x27
     540:	bl	0 <malloc>
     544:	str	x0, [x19, #392]
     548:	cbz	x0, 594 <ctf_bufopen_internal+0x43c>
     54c:	stp	x0, x0, [x19, #400]
     550:	ldr	w8, [sp, #88]
     554:	add	x1, sp, #0x70
     558:	and	w8, w8, #0xfe
     55c:	strb	w8, [x23, #3]
     560:	ldp	x8, x9, [x25, #8]
     564:	str	x27, [sp, #112]
     568:	add	x2, x8, x26
     56c:	sub	x3, x9, x26
     570:	bl	0 <uncompress>
     574:	cbz	w0, 5b0 <ctf_bufopen_internal+0x458>
     578:	bl	0 <zError>
     57c:	mov	x1, x0
     580:	adrp	x0, 0 <ctf_set_ctl_hashes>
     584:	add	x0, x0, #0x0
     588:	bl	0 <ctf_dprintf>
     58c:	mov	w1, #0x3f7                 	// #1015
     590:	b	165c <ctf_bufopen_internal+0x1504>
     594:	mov	w1, #0x3f6                 	// #1014
     598:	b	165c <ctf_bufopen_internal+0x1504>
     59c:	ldr	x8, [x25, #8]
     5a0:	stp	x8, xzr, [x19, #392]
     5a4:	add	x8, x8, x26
     5a8:	str	x8, [x19, #408]
     5ac:	b	5c0 <ctf_bufopen_internal+0x468>
     5b0:	ldr	x1, [sp, #112]
     5b4:	ldr	x2, [x19, #416]
     5b8:	cmp	x1, x2
     5bc:	b.ne	6dc <ctf_bufopen_internal+0x584>  // b.any
     5c0:	ldrb	w8, [x23, #2]
     5c4:	adrp	x10, 0 <ctf_set_ctl_hashes>
     5c8:	mov	w9, #0x28                  	// #40
     5cc:	add	x10, x10, #0x0
     5d0:	str	w8, [x19, #560]
     5d4:	madd	x8, x8, x9, x10
     5d8:	mov	x0, x19
     5dc:	str	x8, [x19]
     5e0:	bl	0 <ctf_str_create_atoms>
     5e4:	mov	w8, #0x7fffffff            	// #2147483647
     5e8:	str	w8, [x19, #544]
     5ec:	ldp	q0, q1, [x25]
     5f0:	add	x25, x19, #0x18
     5f4:	stur	q0, [x19, #24]
     5f8:	stur	q1, [x19, #40]
     5fc:	cbz	x20, 618 <ctf_bufopen_internal+0x4c0>
     600:	ldp	q1, q0, [x20]
     604:	stur	q0, [x19, #72]
     608:	stur	q1, [x19, #56]
     60c:	ldp	q1, q0, [x22]
     610:	stur	q0, [x19, #104]
     614:	stur	q1, [x19, #88]
     618:	ldr	x0, [x25]
     61c:	cbz	x0, 62c <ctf_bufopen_internal+0x4d4>
     620:	bl	0 <strdup>
     624:	str	x0, [x25]
     628:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     62c:	ldr	x0, [x19, #56]
     630:	cbz	x0, 640 <ctf_bufopen_internal+0x4e8>
     634:	bl	0 <strdup>
     638:	str	x0, [x19, #56]
     63c:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     640:	ldr	x0, [x19, #88]
     644:	cbz	x0, 654 <ctf_bufopen_internal+0x4fc>
     648:	bl	0 <strdup>
     64c:	str	x0, [x19, #88]
     650:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     654:	ldr	x8, [x25]
     658:	cbz	x8, 6a4 <ctf_bufopen_internal+0x54c>
     65c:	ldr	x8, [x19, #56]
     660:	cbz	x8, 6b8 <ctf_bufopen_internal+0x560>
     664:	cbz	x0, 6c8 <ctf_bufopen_internal+0x570>
     668:	cbz	x22, 674 <ctf_bufopen_internal+0x51c>
     66c:	ldur	q0, [x22, #8]
     670:	str	q0, [x19, #352]
     674:	str	x24, [x19, #128]
     678:	cbz	w28, d5c <ctf_bufopen_internal+0xc04>
     67c:	ldp	w10, w9, [x23, #16]
     680:	ldr	x8, [x19, #408]
     684:	sub	w11, w9, w10
     688:	lsr	w11, w11, #3
     68c:	cbz	w11, 740 <ctf_bufopen_internal+0x5e8>
     690:	cmp	w11, #0x1
     694:	add	x10, x8, x10
     698:	b.ne	6ec <ctf_bufopen_internal+0x594>  // b.any
     69c:	mov	x12, x11
     6a0:	b	720 <ctf_bufopen_internal+0x5c8>
     6a4:	adrp	x8, 8b <ctf_simple_open+0x2b>
     6a8:	add	x8, x8, #0x0
     6ac:	str	x8, [x25]
     6b0:	ldr	x8, [x19, #56]
     6b4:	cbnz	x8, 664 <ctf_bufopen_internal+0x50c>
     6b8:	adrp	x8, 8b <ctf_simple_open+0x2b>
     6bc:	add	x8, x8, #0x0
     6c0:	str	x8, [x19, #56]
     6c4:	cbnz	x0, 668 <ctf_bufopen_internal+0x510>
     6c8:	adrp	x8, 8b <ctf_simple_open+0x2b>
     6cc:	add	x8, x8, #0x0
     6d0:	str	x8, [x19, #88]
     6d4:	cbnz	x22, 66c <ctf_bufopen_internal+0x514>
     6d8:	b	674 <ctf_bufopen_internal+0x51c>
     6dc:	adrp	x0, 0 <ctf_set_ctl_hashes>
     6e0:	add	x0, x0, #0x0
     6e4:	bl	0 <ctf_dprintf>
     6e8:	b	f0c <ctf_bufopen_internal+0xdb4>
     6ec:	and	x13, x11, #0x1ffffffe
     6f0:	mov	x14, x10
     6f4:	and	x12, x11, #0x1
     6f8:	add	x10, x10, x13, lsl #3
     6fc:	mov	x15, x13
     700:	ld2	{v0.2s, v1.2s}, [x14]
     704:	subs	x15, x15, #0x2
     708:	rev32	v2.8b, v0.8b
     70c:	rev32	v3.8b, v1.8b
     710:	st2	{v2.2s, v3.2s}, [x14], #16
     714:	b.ne	700 <ctf_bufopen_internal+0x5a8>  // b.any
     718:	cmp	x13, x11
     71c:	b.eq	740 <ctf_bufopen_internal+0x5e8>  // b.none
     720:	add	x11, x12, #0x1
     724:	ldp	w12, w13, [x10]
     728:	sub	x11, x11, #0x1
     72c:	cmp	x11, #0x1
     730:	rev	w12, w12
     734:	rev	w13, w13
     738:	stp	w12, w13, [x10], #8
     73c:	b.gt	724 <ctf_bufopen_internal+0x5cc>
     740:	ldr	w12, [x23, #24]
     744:	sub	w10, w12, w9
     748:	lsr	w11, w10, #2
     74c:	cbz	w11, 7c0 <ctf_bufopen_internal+0x668>
     750:	cmp	w10, #0x10
     754:	add	x10, x8, x9
     758:	b.cs	764 <ctf_bufopen_internal+0x60c>  // b.hs, b.nlast
     75c:	mov	x12, x11
     760:	b	7a0 <ctf_bufopen_internal+0x648>
     764:	and	x13, x11, #0x3ffffffc
     768:	add	x9, x9, x8
     76c:	and	x12, x11, #0x3
     770:	add	x10, x10, x13, lsl #2
     774:	add	x9, x9, #0x8
     778:	mov	x14, x13
     77c:	ldp	d0, d1, [x9, #-8]
     780:	subs	x14, x14, #0x4
     784:	rev32	v0.8b, v0.8b
     788:	rev32	v1.8b, v1.8b
     78c:	stp	d0, d1, [x9, #-8]
     790:	add	x9, x9, #0x10
     794:	b.ne	77c <ctf_bufopen_internal+0x624>  // b.any
     798:	cmp	x13, x11
     79c:	b.eq	7bc <ctf_bufopen_internal+0x664>  // b.none
     7a0:	add	x9, x12, #0x1
     7a4:	ldr	w11, [x10]
     7a8:	sub	x9, x9, #0x1
     7ac:	cmp	x9, #0x1
     7b0:	rev	w11, w11
     7b4:	str	w11, [x10], #4
     7b8:	b.gt	7a4 <ctf_bufopen_internal+0x64c>
     7bc:	ldr	w12, [x23, #24]
     7c0:	ldr	w9, [x23, #28]
     7c4:	sub	w11, w9, w12
     7c8:	lsr	w10, w11, #2
     7cc:	cbz	w10, 844 <ctf_bufopen_internal+0x6ec>
     7d0:	mov	w13, w12
     7d4:	cmp	w11, #0x10
     7d8:	add	x9, x8, x13
     7dc:	b.cs	7e8 <ctf_bufopen_internal+0x690>  // b.hs, b.nlast
     7e0:	mov	x11, x10
     7e4:	b	824 <ctf_bufopen_internal+0x6cc>
     7e8:	and	x12, x10, #0x3ffffffc
     7ec:	add	x13, x13, x8
     7f0:	and	x11, x10, #0x3
     7f4:	add	x9, x9, x12, lsl #2
     7f8:	add	x13, x13, #0x8
     7fc:	mov	x14, x12
     800:	ldp	d0, d1, [x13, #-8]
     804:	subs	x14, x14, #0x4
     808:	rev32	v0.8b, v0.8b
     80c:	rev32	v1.8b, v1.8b
     810:	stp	d0, d1, [x13, #-8]
     814:	add	x13, x13, #0x10
     818:	b.ne	800 <ctf_bufopen_internal+0x6a8>  // b.any
     81c:	cmp	x12, x10
     820:	b.eq	840 <ctf_bufopen_internal+0x6e8>  // b.none
     824:	add	x10, x11, #0x1
     828:	ldr	w11, [x9]
     82c:	sub	x10, x10, #0x1
     830:	cmp	x10, #0x1
     834:	rev	w11, w11
     838:	str	w11, [x9], #4
     83c:	b.gt	828 <ctf_bufopen_internal+0x6d0>
     840:	ldr	w9, [x23, #28]
     844:	ldr	w11, [x23, #32]
     848:	sub	w12, w11, w9
     84c:	lsr	w10, w12, #2
     850:	cbz	w10, 8c8 <ctf_bufopen_internal+0x770>
     854:	mov	w13, w9
     858:	cmp	w12, #0x10
     85c:	add	x9, x8, x13
     860:	b.cs	86c <ctf_bufopen_internal+0x714>  // b.hs, b.nlast
     864:	mov	x11, x10
     868:	b	8a8 <ctf_bufopen_internal+0x750>
     86c:	and	x12, x10, #0x3ffffffc
     870:	add	x13, x13, x8
     874:	and	x11, x10, #0x3
     878:	add	x9, x9, x12, lsl #2
     87c:	add	x13, x13, #0x8
     880:	mov	x14, x12
     884:	ldp	d0, d1, [x13, #-8]
     888:	subs	x14, x14, #0x4
     88c:	rev32	v0.8b, v0.8b
     890:	rev32	v1.8b, v1.8b
     894:	stp	d0, d1, [x13, #-8]
     898:	add	x13, x13, #0x10
     89c:	b.ne	884 <ctf_bufopen_internal+0x72c>  // b.any
     8a0:	cmp	x12, x10
     8a4:	b.eq	8c4 <ctf_bufopen_internal+0x76c>  // b.none
     8a8:	add	x10, x11, #0x1
     8ac:	ldr	w11, [x9]
     8b0:	sub	x10, x10, #0x1
     8b4:	cmp	x10, #0x1
     8b8:	rev	w11, w11
     8bc:	str	w11, [x9], #4
     8c0:	b.gt	8ac <ctf_bufopen_internal+0x754>
     8c4:	ldr	w11, [x23, #32]
     8c8:	ldr	w12, [x23, #36]
     8cc:	sub	w9, w12, w11
     8d0:	lsr	w10, w9, #2
     8d4:	cbz	w10, 94c <ctf_bufopen_internal+0x7f4>
     8d8:	mov	w13, w11
     8dc:	cmp	w9, #0x10
     8e0:	add	x9, x8, x13
     8e4:	b.cs	8f0 <ctf_bufopen_internal+0x798>  // b.hs, b.nlast
     8e8:	mov	x11, x10
     8ec:	b	92c <ctf_bufopen_internal+0x7d4>
     8f0:	and	x12, x10, #0x3ffffffc
     8f4:	add	x13, x13, x8
     8f8:	and	x11, x10, #0x3
     8fc:	add	x9, x9, x12, lsl #2
     900:	add	x13, x13, #0x8
     904:	mov	x14, x12
     908:	ldp	d0, d1, [x13, #-8]
     90c:	subs	x14, x14, #0x4
     910:	rev32	v0.8b, v0.8b
     914:	rev32	v1.8b, v1.8b
     918:	stp	d0, d1, [x13, #-8]
     91c:	add	x13, x13, #0x10
     920:	b.ne	908 <ctf_bufopen_internal+0x7b0>  // b.any
     924:	cmp	x12, x10
     928:	b.eq	948 <ctf_bufopen_internal+0x7f0>  // b.none
     92c:	add	x10, x11, #0x1
     930:	ldr	w11, [x9]
     934:	sub	x10, x10, #0x1
     938:	cmp	x10, #0x1
     93c:	rev	w11, w11
     940:	str	w11, [x9], #4
     944:	b.gt	930 <ctf_bufopen_internal+0x7d8>
     948:	ldr	w12, [x23, #36]
     94c:	ldr	w9, [x23, #40]
     950:	sub	w10, w9, w12
     954:	lsr	w11, w10, #3
     958:	cbz	w11, 9c4 <ctf_bufopen_internal+0x86c>
     95c:	cmp	w11, #0x1
     960:	add	x10, x8, w12, uxtw
     964:	b.ne	970 <ctf_bufopen_internal+0x818>  // b.any
     968:	mov	x12, x11
     96c:	b	9a4 <ctf_bufopen_internal+0x84c>
     970:	and	x13, x11, #0x1ffffffe
     974:	mov	x14, x10
     978:	and	x12, x11, #0x1
     97c:	add	x10, x10, x13, lsl #3
     980:	mov	x15, x13
     984:	ld2	{v0.2s, v1.2s}, [x14]
     988:	subs	x15, x15, #0x2
     98c:	rev32	v2.8b, v0.8b
     990:	rev32	v3.8b, v1.8b
     994:	st2	{v2.2s, v3.2s}, [x14], #16
     998:	b.ne	984 <ctf_bufopen_internal+0x82c>  // b.any
     99c:	cmp	x13, x11
     9a0:	b.eq	9c4 <ctf_bufopen_internal+0x86c>  // b.none
     9a4:	add	x11, x12, #0x1
     9a8:	ldp	w12, w13, [x10]
     9ac:	sub	x11, x11, #0x1
     9b0:	cmp	x11, #0x1
     9b4:	rev	w12, w12
     9b8:	rev	w13, w13
     9bc:	stp	w12, w13, [x10], #8
     9c0:	b.gt	9a8 <ctf_bufopen_internal+0x850>
     9c4:	ldr	x10, [sp, #96]
     9c8:	add	x24, x8, x9
     9cc:	ldr	w10, [x10]
     9d0:	sub	w8, w10, w9
     9d4:	add	x8, x8, x24
     9d8:	str	x8, [sp, #88]
     9dc:	b	9f4 <ctf_bufopen_internal+0x89c>
     9e0:	ldr	w10, [x9]
     9e4:	rev	w10, w10
     9e8:	str	w10, [x9]
     9ec:	add	x24, x9, x8
     9f0:	ldr	x8, [sp, #88]
     9f4:	cmp	x8, x24
     9f8:	b.ls	d5c <ctf_bufopen_internal+0xc04>  // b.plast
     9fc:	ldp	w8, w9, [x24]
     a00:	ldr	w26, [x24, #8]
     a04:	rev	w9, w9
     a08:	lsr	w25, w9, #26
     a0c:	rev	w8, w8
     a10:	rev	w27, w26
     a14:	cmp	w25, #0xe
     a18:	and	w28, w9, #0xffffff
     a1c:	stp	w8, w9, [x24]
     a20:	str	w27, [x24, #8]
     a24:	b.hi	a88 <ctf_bufopen_internal+0x930>  // b.pmore
     a28:	adrp	x10, 0 <ctf_set_ctl_hashes>
     a2c:	add	x10, x10, #0x0
     a30:	adr	x9, a44 <ctf_bufopen_internal+0x8ec>
     a34:	ldrb	w8, [x10, x25]
     a38:	add	x9, x9, x8, lsl #2
     a3c:	mov	w8, #0xc                   	// #12
     a40:	br	x9
     a44:	mov	x8, xzr
     a48:	b	aa4 <ctf_bufopen_internal+0x94c>
     a4c:	mov	w8, #0x4                   	// #4
     a50:	b	aa4 <ctf_bufopen_internal+0x94c>
     a54:	ubfx	x8, x27, #29, #3
     a58:	cbnz	w8, aa0 <ctf_bufopen_internal+0x948>
     a5c:	add	x8, x28, x28, lsl #1
     a60:	lsl	x8, x8, #2
     a64:	b	aa4 <ctf_bufopen_internal+0x94c>
     a68:	lsl	x8, x28, #3
     a6c:	b	aa4 <ctf_bufopen_internal+0x94c>
     a70:	and	x8, x28, #0x1
     a74:	add	x8, x8, x28
     a78:	lsl	x8, x8, #2
     a7c:	b	aa4 <ctf_bufopen_internal+0x94c>
     a80:	mov	w8, #0x8                   	// #8
     a84:	b	aa4 <ctf_bufopen_internal+0x94c>
     a88:	adrp	x0, 0 <ctf_set_ctl_hashes>
     a8c:	add	x0, x0, #0x0
     a90:	mov	w1, w25
     a94:	bl	0 <ctf_dprintf>
     a98:	mov	w8, #0x3ef                 	// #1007
     a9c:	b	aa4 <ctf_bufopen_internal+0x94c>
     aa0:	lsl	x8, x28, #4
     aa4:	cmn	w26, #0x1
     aa8:	b.eq	cac <ctf_bufopen_internal+0xb54>  // b.none
     aac:	mov	w9, #0xc                   	// #12
     ab0:	cmp	w25, #0xe
     ab4:	b.hi	eec <ctf_bufopen_internal+0xd94>  // b.pmore
     ab8:	adrp	x12, 0 <ctf_set_ctl_hashes>
     abc:	add	x12, x12, #0x0
     ac0:	adr	x10, 9e0 <ctf_bufopen_internal+0x888>
     ac4:	ldrb	w11, [x12, x25]
     ac8:	add	x10, x10, x11, lsl #2
     acc:	add	x9, x24, x9
     ad0:	br	x10
     ad4:	cbz	x8, 9ec <ctf_bufopen_internal+0x894>
     ad8:	b	1fa0 <ctf_bufopen_internal+0x1e48>
     adc:	lsr	x10, x27, #29
     ae0:	cbnz	x10, cd0 <ctf_bufopen_internal+0xb78>
     ae4:	cbz	w28, 9ec <ctf_bufopen_internal+0x894>
     ae8:	cmp	w28, #0x1
     aec:	b.ne	b8c <ctf_bufopen_internal+0xa34>  // b.any
     af0:	mov	x11, x28
     af4:	mov	x10, x9
     af8:	b	bc8 <ctf_bufopen_internal+0xa70>
     afc:	cbz	w28, 9ec <ctf_bufopen_internal+0x894>
     b00:	cmp	w28, #0x1
     b04:	b.ne	bfc <ctf_bufopen_internal+0xaa4>  // b.any
     b08:	mov	x11, x28
     b0c:	mov	x10, x9
     b10:	b	c30 <ctf_bufopen_internal+0xad8>
     b14:	cbz	w28, 9ec <ctf_bufopen_internal+0x894>
     b18:	cmp	w28, #0x4
     b1c:	b.cs	c54 <ctf_bufopen_internal+0xafc>  // b.hs, b.nlast
     b20:	mov	x11, x28
     b24:	mov	x10, x9
     b28:	b	c8c <ctf_bufopen_internal+0xb34>
     b2c:	cmp	x8, #0x8
     b30:	b.ne	1fc0 <ctf_bufopen_internal+0x1e68>  // b.any
     b34:	ldr	w10, [x9]
     b38:	ldrh	w11, [x9, #4]
     b3c:	ldrh	w12, [x9, #6]
     b40:	rev	w10, w10
     b44:	rev	w11, w11
     b48:	rev	w12, w12
     b4c:	str	w10, [x9]
     b50:	lsr	w10, w11, #16
     b54:	lsr	w11, w12, #16
     b58:	strh	w10, [x9, #4]
     b5c:	strh	w11, [x9, #6]
     b60:	b	9ec <ctf_bufopen_internal+0x894>
     b64:	cmp	x8, #0xc
     b68:	b.ne	1fe0 <ctf_bufopen_internal+0x1e88>  // b.any
     b6c:	ldp	w10, w11, [x9]
     b70:	ldr	w12, [x9, #8]
     b74:	rev	w10, w10
     b78:	rev	w11, w11
     b7c:	rev	w12, w12
     b80:	stp	w10, w11, [x9]
     b84:	str	w12, [x9, #8]
     b88:	b	9ec <ctf_bufopen_internal+0x894>
     b8c:	and	x12, x28, #0xfffffe
     b90:	mov	w10, #0xc                   	// #12
     b94:	and	x11, x28, #0x1
     b98:	madd	x10, x12, x10, x9
     b9c:	mov	x13, x12
     ba0:	mov	x14, x9
     ba4:	ld3	{v0.2s-v2.2s}, [x14]
     ba8:	subs	x13, x13, #0x2
     bac:	rev32	v3.8b, v0.8b
     bb0:	rev32	v4.8b, v1.8b
     bb4:	rev32	v5.8b, v2.8b
     bb8:	st3	{v3.2s-v5.2s}, [x14], #24
     bbc:	b.ne	ba4 <ctf_bufopen_internal+0xa4c>  // b.any
     bc0:	cmp	x12, x28
     bc4:	b.eq	9ec <ctf_bufopen_internal+0x894>  // b.none
     bc8:	add	x11, x11, #0x1
     bcc:	ldp	w12, w13, [x10]
     bd0:	ldr	w14, [x10, #8]
     bd4:	sub	x11, x11, #0x1
     bd8:	cmp	x11, #0x1
     bdc:	rev	w12, w12
     be0:	rev	w13, w13
     be4:	rev	w14, w14
     be8:	stp	w12, w13, [x10]
     bec:	str	w14, [x10, #8]
     bf0:	add	x10, x10, #0xc
     bf4:	b.gt	bcc <ctf_bufopen_internal+0xa74>
     bf8:	b	9ec <ctf_bufopen_internal+0x894>
     bfc:	and	x12, x28, #0xfffffe
     c00:	and	x11, x28, #0x1
     c04:	add	x10, x9, x12, lsl #3
     c08:	mov	x13, x12
     c0c:	mov	x14, x9
     c10:	ld2	{v0.2s, v1.2s}, [x14]
     c14:	subs	x13, x13, #0x2
     c18:	rev32	v2.8b, v0.8b
     c1c:	rev32	v3.8b, v1.8b
     c20:	st2	{v2.2s, v3.2s}, [x14], #16
     c24:	b.ne	c10 <ctf_bufopen_internal+0xab8>  // b.any
     c28:	cmp	x12, x28
     c2c:	b.eq	9ec <ctf_bufopen_internal+0x894>  // b.none
     c30:	add	x11, x11, #0x1
     c34:	ldp	w12, w13, [x10]
     c38:	sub	x11, x11, #0x1
     c3c:	cmp	x11, #0x1
     c40:	rev	w12, w12
     c44:	rev	w13, w13
     c48:	stp	w12, w13, [x10], #8
     c4c:	b.gt	c34 <ctf_bufopen_internal+0xadc>
     c50:	b	9ec <ctf_bufopen_internal+0x894>
     c54:	and	x12, x28, #0xfffffc
     c58:	and	x11, x28, #0x3
     c5c:	add	x10, x9, x12, lsl #2
     c60:	add	x13, x9, #0x8
     c64:	mov	x14, x12
     c68:	ldp	d0, d1, [x13, #-8]
     c6c:	subs	x14, x14, #0x4
     c70:	rev32	v0.8b, v0.8b
     c74:	rev32	v1.8b, v1.8b
     c78:	stp	d0, d1, [x13, #-8]
     c7c:	add	x13, x13, #0x10
     c80:	b.ne	c68 <ctf_bufopen_internal+0xb10>  // b.any
     c84:	cmp	x12, x28
     c88:	b.eq	9ec <ctf_bufopen_internal+0x894>  // b.none
     c8c:	add	x11, x11, #0x1
     c90:	ldr	w12, [x10]
     c94:	sub	x11, x11, #0x1
     c98:	cmp	x11, #0x1
     c9c:	rev	w12, w12
     ca0:	str	w12, [x10], #4
     ca4:	b.gt	c90 <ctf_bufopen_internal+0xb38>
     ca8:	b	9ec <ctf_bufopen_internal+0x894>
     cac:	ldp	w9, w10, [x24, #12]
     cb0:	rev	w9, w9
     cb4:	rev	w27, w10
     cb8:	stp	w9, w27, [x24, #12]
     cbc:	bfi	x27, x9, #32, #32
     cc0:	mov	w9, #0x14                  	// #20
     cc4:	cmp	w25, #0xe
     cc8:	b.ls	ab8 <ctf_bufopen_internal+0x960>  // b.plast
     ccc:	b	eec <ctf_bufopen_internal+0xd94>
     cd0:	cbz	w28, 9ec <ctf_bufopen_internal+0x894>
     cd4:	cmp	w28, #0x1
     cd8:	b.ne	ce8 <ctf_bufopen_internal+0xb90>  // b.any
     cdc:	mov	x11, x28
     ce0:	mov	x10, x9
     ce4:	b	d24 <ctf_bufopen_internal+0xbcc>
     ce8:	and	x12, x28, #0xfffffe
     cec:	and	x11, x28, #0x1
     cf0:	add	x10, x9, x12, lsl #4
     cf4:	mov	x13, x12
     cf8:	mov	x14, x9
     cfc:	ld4	{v0.2s-v3.2s}, [x14]
     d00:	subs	x13, x13, #0x2
     d04:	rev32	v4.8b, v0.8b
     d08:	rev32	v5.8b, v1.8b
     d0c:	rev32	v6.8b, v2.8b
     d10:	rev32	v7.8b, v3.8b
     d14:	st4	{v4.2s-v7.2s}, [x14], #32
     d18:	b.ne	cfc <ctf_bufopen_internal+0xba4>  // b.any
     d1c:	cmp	x12, x28
     d20:	b.eq	9ec <ctf_bufopen_internal+0x894>  // b.none
     d24:	add	x11, x11, #0x1
     d28:	ldp	w12, w13, [x10]
     d2c:	ldp	w14, w15, [x10, #8]
     d30:	sub	x11, x11, #0x1
     d34:	cmp	x11, #0x1
     d38:	rev	w12, w12
     d3c:	rev	w13, w13
     d40:	rev	w14, w14
     d44:	rev	w15, w15
     d48:	stp	w12, w13, [x10]
     d4c:	stp	w14, w15, [x10, #8]
     d50:	add	x10, x10, #0x10
     d54:	b.gt	d28 <ctf_bufopen_internal+0xbd0>
     d58:	b	9ec <ctf_bufopen_internal+0x894>
     d5c:	ldr	x2, [x19, #392]
     d60:	mov	x0, x19
     d64:	mov	x1, x23
     d68:	bl	2090 <ctf_set_base>
     d6c:	ldrb	w8, [x19, #552]
     d70:	tbnz	w8, #1, 17a0 <ctf_bufopen_internal+0x1648>
     d74:	ldr	w8, [x23, #8]
     d78:	movi	v0.2d, #0x0
     d7c:	stp	q0, q0, [sp, #592]
     d80:	stp	q0, q0, [sp, #560]
     d84:	str	w8, [sp, #84]
     d88:	ldr	w8, [x19, #560]
     d8c:	stp	q0, q0, [sp, #528]
     d90:	stp	q0, q0, [sp, #496]
     d94:	stp	q0, q0, [sp, #464]
     d98:	cmp	w8, #0x1
     d9c:	stp	q0, q0, [sp, #432]
     da0:	stp	q0, q0, [sp, #400]
     da4:	stp	q0, q0, [sp, #368]
     da8:	stp	q0, q0, [sp, #336]
     dac:	stp	q0, q0, [sp, #304]
     db0:	stp	q0, q0, [sp, #272]
     db4:	stp	q0, q0, [sp, #240]
     db8:	stp	q0, q0, [sp, #208]
     dbc:	stp	q0, q0, [sp, #176]
     dc0:	stp	q0, q0, [sp, #144]
     dc4:	stp	q0, q0, [sp, #112]
     dc8:	b.eq	17ac <ctf_bufopen_internal+0x1654>  // b.none
     dcc:	ldr	x8, [x19, #408]
     dd0:	ldp	w10, w11, [x23, #40]
     dd4:	add	x9, x8, x10
     dd8:	cmp	w10, w11
     ddc:	add	x8, x8, x11
     de0:	stp	x11, x10, [sp, #64]
     de4:	stp	x9, x8, [sp, #88]
     de8:	b.cs	ec4 <ctf_bufopen_internal+0xd6c>  // b.hs, b.nlast
     dec:	ldr	x25, [sp, #88]
     df0:	add	x28, sp, #0x70
     df4:	add	x24, x28, #0x30
     df8:	b	e30 <ctf_bufopen_internal+0xcd8>
     dfc:	lsl	x8, x8, #3
     e00:	ldr	x9, [sp, #104]
     e04:	ldr	x10, [x19, #480]
     e08:	ldr	x11, [x28, x8]
     e0c:	add	x12, x0, x25
     e10:	add	x25, x12, x9
     e14:	add	x9, x10, #0x1
     e18:	add	x10, x11, #0x1
     e1c:	ldr	x11, [sp, #96]
     e20:	str	x10, [x28, x8]
     e24:	str	x9, [x19, #480]
     e28:	cmp	x25, x11
     e2c:	b.cs	ec4 <ctf_bufopen_internal+0xd6c>  // b.hs, b.nlast
     e30:	ldr	x8, [x19]
     e34:	ldr	w0, [x25, #4]
     e38:	ldr	x8, [x8]
     e3c:	blr	x8
     e40:	ldr	x8, [x19]
     e44:	mov	w26, w0
     e48:	ldr	x9, [x8, #16]
     e4c:	ldr	w8, [x25, #4]
     e50:	mov	w0, w8
     e54:	blr	x9
     e58:	ldr	x8, [x19]
     e5c:	mov	w27, w0
     e60:	add	x2, x29, #0x8
     e64:	add	x3, sp, #0x68
     e68:	ldr	x8, [x8, #24]
     e6c:	mov	x0, x19
     e70:	mov	x1, x25
     e74:	blr	x8
     e78:	ldr	x8, [x19]
     e7c:	ldr	x1, [x29, #8]
     e80:	mov	w0, w26
     e84:	mov	x2, x27
     e88:	ldr	x8, [x8, #32]
     e8c:	blr	x8
     e90:	tbnz	x0, #63, f0c <ctf_bufopen_internal+0xdb4>
     e94:	and	w8, w26, #0xffff
     e98:	cmp	w8, #0x9
     e9c:	b.ne	dfc <ctf_bufopen_internal+0xca4>  // b.any
     ea0:	ldr	w9, [x25, #8]
     ea4:	sub	w10, w9, #0x1
     ea8:	add	x9, x28, x9, lsl #3
     eac:	cmp	w10, #0x3d
     eb0:	csel	x9, x24, x9, hi  // hi = pmore
     eb4:	ldr	x10, [x9]
     eb8:	add	x10, x10, #0x1
     ebc:	str	x10, [x9]
     ec0:	b	dfc <ctf_bufopen_internal+0xca4>
     ec4:	ldr	w8, [sp, #84]
     ec8:	cbz	w8, f14 <ctf_bufopen_internal+0xdbc>
     ecc:	adrp	x0, 0 <ctf_set_ctl_hashes>
     ed0:	add	x0, x0, #0x0
     ed4:	mov	x1, x19
     ed8:	bl	0 <ctf_dprintf>
     edc:	ldr	w8, [x19, #552]
     ee0:	orr	w8, w8, #0x1
     ee4:	str	w8, [x19, #552]
     ee8:	b	f24 <ctf_bufopen_internal+0xdcc>
     eec:	adrp	x0, 0 <ctf_set_ctl_hashes>
     ef0:	add	x0, x0, #0x0
     ef4:	mov	w1, w25
     ef8:	bl	0 <ctf_dprintf>
     efc:	ldr	x2, [x19, #392]
     f00:	mov	x0, x19
     f04:	mov	x1, x23
     f08:	bl	2090 <ctf_set_base>
     f0c:	mov	w1, #0x3ef                 	// #1007
     f10:	b	165c <ctf_bufopen_internal+0x1504>
     f14:	adrp	x0, 0 <ctf_set_ctl_hashes>
     f18:	add	x0, x0, #0x0
     f1c:	mov	x1, x19
     f20:	bl	0 <ctf_dprintf>
     f24:	ldr	x0, [sp, #160]
     f28:	adrp	x1, 0 <ctf_hash_string>
     f2c:	adrp	x2, 0 <ctf_hash_eq_string>
     f30:	add	x1, x1, #0x0
     f34:	add	x2, x2, #0x0
     f38:	bl	0 <ctf_hash_create>
     f3c:	mov	x8, x19
     f40:	str	x0, [x8, #152]!
     f44:	str	x8, [sp, #56]
     f48:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     f4c:	ldr	x0, [sp, #168]
     f50:	adrp	x1, 0 <ctf_hash_string>
     f54:	adrp	x2, 0 <ctf_hash_eq_string>
     f58:	add	x1, x1, #0x0
     f5c:	add	x2, x2, #0x0
     f60:	bl	0 <ctf_hash_create>
     f64:	mov	x8, x19
     f68:	str	x0, [x8, #168]!
     f6c:	str	x8, [sp, #48]
     f70:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     f74:	ldr	x0, [sp, #176]
     f78:	adrp	x1, 0 <ctf_hash_string>
     f7c:	adrp	x2, 0 <ctf_hash_eq_string>
     f80:	add	x1, x1, #0x0
     f84:	add	x2, x2, #0x0
     f88:	bl	0 <ctf_hash_create>
     f8c:	mov	x8, x19
     f90:	str	x0, [x8, #184]!
     f94:	str	x8, [sp, #8]
     f98:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     f9c:	ldp	x8, x9, [sp, #120]
     fa0:	ldr	x10, [sp, #152]
     fa4:	ldp	x12, x13, [sp, #192]
     fa8:	ldr	x11, [sp, #136]
     fac:	add	x8, x9, x8
     fb0:	add	x8, x8, x10
     fb4:	ldp	x9, x10, [sp, #208]
     fb8:	add	x8, x8, x12
     fbc:	add	x8, x8, x11
     fc0:	add	x8, x8, x13
     fc4:	add	x8, x8, x9
     fc8:	adrp	x1, 0 <ctf_hash_string>
     fcc:	adrp	x2, 0 <ctf_hash_eq_string>
     fd0:	add	x0, x8, x10
     fd4:	add	x1, x1, #0x0
     fd8:	add	x2, x2, #0x0
     fdc:	bl	0 <ctf_hash_create>
     fe0:	mov	x8, x19
     fe4:	str	x0, [x8, #200]!
     fe8:	str	x8, [sp, #16]
     fec:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
     ff0:	ldr	x26, [x19, #480]
     ff4:	lsl	x8, x26, #2
     ff8:	add	x25, x8, #0x4
     ffc:	mov	x0, x25
    1000:	bl	0 <malloc>
    1004:	add	x8, x26, #0x1
    1008:	mov	x24, x0
    100c:	str	x0, [x19, #440]
    1010:	lsl	x0, x8, #2
    1014:	str	x8, [x19, #456]
    1018:	bl	0 <malloc>
    101c:	mov	w1, #0xc                   	// #12
    1020:	str	x0, [x19, #448]
    1024:	str	x24, [sp, #40]
    1028:	cbz	x24, 165c <ctf_bufopen_internal+0x1504>
    102c:	mov	x27, x0
    1030:	cbz	x0, 165c <ctf_bufopen_internal+0x1504>
    1034:	ldr	x0, [sp, #40]
    1038:	mov	w1, wzr
    103c:	mov	x2, x25
    1040:	str	wzr, [x0]
    1044:	bl	0 <memset>
    1048:	mov	x0, x27
    104c:	mov	w1, wzr
    1050:	mov	x2, x25
    1054:	bl	0 <memset>
    1058:	ldp	x9, x8, [sp, #64]
    105c:	cmp	w8, w9
    1060:	b.cs	1350 <ctf_bufopen_internal+0x11f8>  // b.hs, b.nlast
    1064:	mov	w8, #0x1                   	// #1
    1068:	str	wzr, [sp, #4]
    106c:	str	wzr, [sp, #64]
    1070:	str	x8, [sp, #72]
    1074:	b	10d8 <ctf_bufopen_internal+0xf80>
    1078:	ldr	w8, [x19, #544]
    107c:	ldr	x9, [sp, #72]
    1080:	add	w8, w8, #0x1
    1084:	orr	w2, w8, w9
    1088:	ldr	x8, [sp, #88]
    108c:	mov	x1, x19
    1090:	ldr	w3, [x8]
    1094:	bl	0 <ctf_hash_insert_type>
    1098:	cbnz	w0, 178c <ctf_bufopen_internal+0x1634>
    109c:	ldr	x11, [sp, #88]
    10a0:	ldr	w8, [x19, #408]
    10a4:	ldr	x9, [sp, #104]
    10a8:	add	x10, x28, x11
    10ac:	sub	w8, w11, w8
    10b0:	add	x9, x10, x9
    10b4:	ldr	x10, [sp, #40]
    10b8:	ldr	x11, [sp, #72]
    10bc:	str	x9, [sp, #88]
    10c0:	str	w8, [x10, x11, lsl #2]
    10c4:	ldr	x8, [sp, #96]
    10c8:	add	x11, x11, #0x1
    10cc:	str	x11, [sp, #72]
    10d0:	cmp	x9, x8
    10d4:	b.cs	136c <ctf_bufopen_internal+0x1214>  // b.hs, b.nlast
    10d8:	ldr	x8, [x19]
    10dc:	ldr	x24, [sp, #88]
    10e0:	ldr	x8, [x8]
    10e4:	ldr	w0, [x24, #4]
    10e8:	blr	x8
    10ec:	ldr	x8, [x19]
    10f0:	mov	w28, w0
    10f4:	ldr	x9, [x8, #8]
    10f8:	ldr	w8, [x24, #4]
    10fc:	mov	w0, w8
    1100:	blr	x9
    1104:	ldr	x8, [x19]
    1108:	mov	w25, w0
    110c:	ldr	x9, [x8, #16]
    1110:	ldr	w8, [x24, #4]
    1114:	mov	w0, w8
    1118:	blr	x9
    111c:	ldr	x8, [x19]
    1120:	mov	w26, w0
    1124:	add	x2, x29, #0x8
    1128:	add	x3, sp, #0x68
    112c:	ldr	x8, [x8, #24]
    1130:	mov	x0, x19
    1134:	mov	x1, x24
    1138:	blr	x8
    113c:	ldr	w1, [x24]
    1140:	mov	x0, x19
    1144:	bl	0 <ctf_strptr>
    1148:	ldr	x8, [x19]
    114c:	ldr	x1, [x29, #8]
    1150:	mov	x27, x0
    1154:	mov	w0, w28
    1158:	ldr	x8, [x8, #32]
    115c:	mov	x2, x26
    1160:	blr	x8
    1164:	and	w1, w28, #0xffff
    1168:	sub	w8, w1, #0x1
    116c:	cmp	w8, #0xd
    1170:	b.hi	135c <ctf_bufopen_internal+0x1204>  // b.pmore
    1174:	adrp	x11, 0 <ctf_set_ctl_hashes>
    1178:	add	x11, x11, #0x0
    117c:	adr	x9, 109c <ctf_bufopen_internal+0xf44>
    1180:	ldrb	w10, [x11, x8]
    1184:	add	x9, x9, x10, lsl #2
    1188:	mov	x28, x0
    118c:	br	x9
    1190:	ldr	x8, [sp, #16]
    1194:	ldr	x0, [x8]
    1198:	ldr	w8, [sp, #84]
    119c:	cbnz	w8, 1078 <ctf_bufopen_internal+0xf20>
    11a0:	ldr	x8, [sp, #72]
    11a4:	mov	w2, w8
    11a8:	b	1088 <ctf_bufopen_internal+0xf30>
    11ac:	ldr	x0, [x19, #200]
    11b0:	mov	x1, x19
    11b4:	mov	x2, x27
    11b8:	bl	0 <ctf_hash_lookup_type>
    11bc:	tbnz	w25, #0, 11c4 <ctf_bufopen_internal+0x106c>
    11c0:	cbnz	x0, 109c <ctf_bufopen_internal+0xf44>
    11c4:	ldr	x8, [sp, #16]
    11c8:	ldr	x0, [x8]
    11cc:	ldr	w8, [sp, #84]
    11d0:	cbnz	w8, 11f0 <ctf_bufopen_internal+0x1098>
    11d4:	ldr	x8, [sp, #72]
    11d8:	mov	w2, w8
    11dc:	b	1200 <ctf_bufopen_internal+0x10a8>
    11e0:	ldr	x8, [sp, #8]
    11e4:	ldr	x0, [x8]
    11e8:	ldr	w8, [sp, #84]
    11ec:	cbz	w8, 11d4 <ctf_bufopen_internal+0x107c>
    11f0:	ldr	w8, [x19, #544]
    11f4:	ldr	x9, [sp, #72]
    11f8:	add	w8, w8, #0x1
    11fc:	orr	w2, w8, w9
    1200:	ldr	x8, [sp, #88]
    1204:	mov	x1, x19
    1208:	ldr	w3, [x8]
    120c:	bl	0 <ctf_hash_define_type>
    1210:	cbz	w0, 109c <ctf_bufopen_internal+0xf44>
    1214:	b	178c <ctf_bufopen_internal+0x1634>
    1218:	ldr	x8, [sp, #88]
    121c:	mov	x0, x19
    1220:	ldr	w1, [x8, #8]
    1224:	bl	0 <ctf_name_table>
    1228:	mov	x25, x0
    122c:	ldr	x0, [x0]
    1230:	mov	x1, x19
    1234:	mov	x2, x27
    1238:	bl	0 <ctf_hash_lookup_type>
    123c:	cbnz	x0, 109c <ctf_bufopen_internal+0xf44>
    1240:	ldr	x0, [x25]
    1244:	ldr	w8, [sp, #84]
    1248:	cbnz	w8, 1078 <ctf_bufopen_internal+0xf20>
    124c:	b	11a0 <ctf_bufopen_internal+0x1048>
    1250:	ldr	x8, [sp, #56]
    1254:	ldr	x0, [x8]
    1258:	ldr	w8, [sp, #84]
    125c:	cbz	w8, 12e0 <ctf_bufopen_internal+0x1188>
    1260:	ldr	w8, [x19, #544]
    1264:	ldr	x9, [sp, #72]
    1268:	add	w8, w8, #0x1
    126c:	orr	w2, w8, w9
    1270:	b	12e8 <ctf_bufopen_internal+0x1190>
    1274:	ldr	x8, [sp, #88]
    1278:	ldr	w10, [sp, #84]
    127c:	ldr	w9, [x19, #544]
    1280:	ldr	w8, [x8, #8]
    1284:	cmp	w10, #0x0
    1288:	cset	w10, ne  // ne = any
    128c:	cmp	w8, w9
    1290:	cset	w11, ls  // ls = plast
    1294:	cmp	w10, w11
    1298:	b.eq	1190 <ctf_bufopen_internal+0x1038>  // b.none
    129c:	ldr	x10, [x19, #480]
    12a0:	and	x8, x9, x8
    12a4:	cmp	x10, x8
    12a8:	b.cc	1190 <ctf_bufopen_internal+0x1038>  // b.lo, b.ul, b.last
    12ac:	ldr	x9, [x19, #448]
    12b0:	ldr	x10, [sp, #72]
    12b4:	str	w10, [x9, x8, lsl #2]
    12b8:	b	1190 <ctf_bufopen_internal+0x1038>
    12bc:	ldr	x8, [sp, #48]
    12c0:	ldr	x0, [x8]
    12c4:	ldr	w8, [sp, #84]
    12c8:	cbz	w8, 1318 <ctf_bufopen_internal+0x11c0>
    12cc:	ldr	w8, [x19, #544]
    12d0:	ldr	x9, [sp, #72]
    12d4:	add	w8, w8, #0x1
    12d8:	orr	w2, w8, w9
    12dc:	b	1320 <ctf_bufopen_internal+0x11c8>
    12e0:	ldr	x8, [sp, #72]
    12e4:	mov	w2, w8
    12e8:	ldr	x8, [sp, #88]
    12ec:	mov	x1, x19
    12f0:	ldr	w3, [x8]
    12f4:	bl	0 <ctf_hash_define_type>
    12f8:	cbnz	w0, 178c <ctf_bufopen_internal+0x1634>
    12fc:	ldr	x8, [x29, #8]
    1300:	mov	w9, #0x1fffffff            	// #536870911
    1304:	cmp	x8, x9
    1308:	ldr	w8, [sp, #4]
    130c:	cinc	w8, w8, gt
    1310:	str	w8, [sp, #4]
    1314:	b	109c <ctf_bufopen_internal+0xf44>
    1318:	ldr	x8, [sp, #72]
    131c:	mov	w2, w8
    1320:	ldr	x8, [sp, #88]
    1324:	mov	x1, x19
    1328:	ldr	w3, [x8]
    132c:	bl	0 <ctf_hash_define_type>
    1330:	cbnz	w0, 178c <ctf_bufopen_internal+0x1634>
    1334:	ldr	x8, [x29, #8]
    1338:	mov	w9, #0x1fffffff            	// #536870911
    133c:	cmp	x8, x9
    1340:	ldr	w8, [sp, #64]
    1344:	cinc	w8, w8, gt
    1348:	str	w8, [sp, #64]
    134c:	b	109c <ctf_bufopen_internal+0xf44>
    1350:	str	wzr, [sp, #64]
    1354:	str	wzr, [sp, #4]
    1358:	b	1370 <ctf_bufopen_internal+0x1218>
    135c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1360:	add	x0, x0, #0x0
    1364:	bl	0 <ctf_dprintf>
    1368:	b	f0c <ctf_bufopen_internal+0xdb4>
    136c:	ldr	x26, [x19, #480]
    1370:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1374:	add	x0, x0, #0x0
    1378:	mov	x1, x26
    137c:	bl	0 <ctf_dprintf>
    1380:	ldr	x0, [x19, #184]
    1384:	bl	0 <ctf_hash_size>
    1388:	mov	w1, w0
    138c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1390:	add	x0, x0, #0x0
    1394:	bl	0 <ctf_dprintf>
    1398:	ldr	x0, [x19, #152]
    139c:	bl	0 <ctf_hash_size>
    13a0:	ldr	w2, [sp, #4]
    13a4:	mov	w1, w0
    13a8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    13ac:	add	x0, x0, #0x0
    13b0:	bl	0 <ctf_dprintf>
    13b4:	ldr	x0, [x19, #168]
    13b8:	bl	0 <ctf_hash_size>
    13bc:	ldr	w2, [sp, #64]
    13c0:	mov	w1, w0
    13c4:	adrp	x0, 0 <ctf_set_ctl_hashes>
    13c8:	add	x0, x0, #0x0
    13cc:	bl	0 <ctf_dprintf>
    13d0:	ldr	x0, [x19, #200]
    13d4:	bl	0 <ctf_hash_size>
    13d8:	mov	w1, w0
    13dc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    13e0:	add	x0, x0, #0x0
    13e4:	bl	0 <ctf_dprintf>
    13e8:	ldr	x8, [x19, #480]
    13ec:	cbz	x8, 14c0 <ctf_bufopen_internal+0x1368>
    13f0:	mov	w24, #0x1                   	// #1
    13f4:	b	1408 <ctf_bufopen_internal+0x12b0>
    13f8:	ldr	x8, [x19, #480]
    13fc:	add	w24, w24, #0x1
    1400:	cmp	x8, x24
    1404:	b.cc	14c0 <ctf_bufopen_internal+0x1368>  // b.lo, b.ul, b.last
    1408:	ldr	x8, [x19, #448]
    140c:	ldr	w25, [x8, x24, lsl #2]
    1410:	cbz	w25, 13f8 <ctf_bufopen_internal+0x12a0>
    1414:	ldr	w9, [x19, #552]
    1418:	tbnz	w9, #1, 1430 <ctf_bufopen_internal+0x12d8>
    141c:	ldr	x8, [x19, #440]
    1420:	ldr	x9, [x19, #408]
    1424:	ldr	w8, [x8, x24, lsl #2]
    1428:	add	x26, x9, x8
    142c:	b	1454 <ctf_bufopen_internal+0x12fc>
    1430:	mov	w8, w24
    1434:	tbz	w9, #0, 1444 <ctf_bufopen_internal+0x12ec>
    1438:	ldr	w8, [x19, #544]
    143c:	add	w8, w8, #0x1
    1440:	orr	w8, w8, w24
    1444:	mov	w1, w8
    1448:	mov	x0, x19
    144c:	bl	0 <ctf_dtd_lookup>
    1450:	add	x26, x0, #0x18
    1454:	ldr	x8, [x19]
    1458:	ldr	w0, [x26, #4]
    145c:	ldr	x8, [x8]
    1460:	blr	x8
    1464:	cmp	w0, #0xa
    1468:	b.ne	13f8 <ctf_bufopen_internal+0x12a0>  // b.any
    146c:	ldr	w1, [x26]
    1470:	mov	x0, x19
    1474:	bl	0 <ctf_strptr>
    1478:	ldrb	w8, [x0]
    147c:	cbnz	w8, 13f8 <ctf_bufopen_internal+0x12a0>
    1480:	ldr	w10, [sp, #84]
    1484:	ldr	w8, [x26, #8]
    1488:	ldr	w9, [x19, #544]
    148c:	cmp	w10, #0x0
    1490:	cset	w10, ne  // ne = any
    1494:	cmp	w8, w9
    1498:	cset	w11, ls  // ls = plast
    149c:	cmp	w10, w11
    14a0:	b.eq	13f8 <ctf_bufopen_internal+0x12a0>  // b.none
    14a4:	ldr	x10, [x19, #480]
    14a8:	and	x8, x9, x8
    14ac:	cmp	x10, x8
    14b0:	b.cc	13f8 <ctf_bufopen_internal+0x12a0>  // b.lo, b.ul, b.last
    14b4:	ldr	x9, [x19, #448]
    14b8:	str	w25, [x9, x8, lsl #2]
    14bc:	b	13f8 <ctf_bufopen_internal+0x12a0>
    14c0:	cbz	x20, 1698 <ctf_bufopen_internal+0x1540>
    14c4:	ldp	x8, x27, [x20, #16]
    14c8:	udiv	x25, x8, x27
    14cc:	lsl	x0, x25, #2
    14d0:	str	x25, [x19, #432]
    14d4:	bl	0 <malloc>
    14d8:	str	x0, [x19, #424]
    14dc:	cbz	x0, 1658 <ctf_bufopen_internal+0x1500>
    14e0:	cmp	x25, #0x1
    14e4:	b.lt	1708 <ctf_bufopen_internal+0x15b0>  // b.tstop
    14e8:	ldr	w8, [x23, #20]
    14ec:	ldr	x21, [x20, #8]
    14f0:	mov	x24, x0
    14f4:	add	x26, x0, x25, lsl #2
    14f8:	str	w8, [sp, #88]
    14fc:	ldr	w8, [x23, #24]
    1500:	str	w8, [sp, #96]
    1504:	cmp	x27, #0x10
    1508:	b.ne	1520 <ctf_bufopen_internal+0x13c8>  // b.any
    150c:	add	x1, sp, #0x70
    1510:	mov	x0, x21
    1514:	bl	0 <ctf_sym_to_elf64>
    1518:	mov	x27, x0
    151c:	b	1524 <ctf_bufopen_internal+0x13cc>
    1520:	mov	x27, x21
    1524:	ldr	w8, [x27]
    1528:	ldr	x9, [x22, #16]
    152c:	adrp	x28, 8b <ctf_simple_open+0x2b>
    1530:	add	x28, x28, #0x0
    1534:	cmp	x9, x8
    1538:	b.ls	1544 <ctf_bufopen_internal+0x13ec>  // b.plast
    153c:	ldr	x9, [x22, #8]
    1540:	add	x28, x9, x8
    1544:	cbz	w8, 1628 <ctf_bufopen_internal+0x14d0>
    1548:	ldrh	w25, [x27, #6]
    154c:	cbz	w25, 1628 <ctf_bufopen_internal+0x14d0>
    1550:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1554:	mov	x0, x28
    1558:	add	x1, x1, #0x0
    155c:	bl	0 <strcmp>
    1560:	cbz	w0, 1628 <ctf_bufopen_internal+0x14d0>
    1564:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1568:	mov	x0, x28
    156c:	add	x1, x1, #0x0
    1570:	bl	0 <strcmp>
    1574:	cbz	w0, 1628 <ctf_bufopen_internal+0x14d0>
    1578:	ldrb	w8, [x27, #4]
    157c:	and	w8, w8, #0xf
    1580:	cmp	w8, #0x2
    1584:	b.eq	15c8 <ctf_bufopen_internal+0x1470>  // b.none
    1588:	cmp	w8, #0x1
    158c:	b.ne	1628 <ctf_bufopen_internal+0x14d0>  // b.any
    1590:	ldr	w8, [x23, #24]
    1594:	ldr	w9, [sp, #88]
    1598:	cmp	w9, w8
    159c:	b.cs	1628 <ctf_bufopen_internal+0x14d0>  // b.hs, b.nlast
    15a0:	mov	w8, #0xfff1                	// #65521
    15a4:	cmp	w25, w8
    15a8:	b.ne	15b4 <ctf_bufopen_internal+0x145c>  // b.any
    15ac:	ldr	x8, [x27, #8]
    15b0:	cbz	x8, 1628 <ctf_bufopen_internal+0x14d0>
    15b4:	ldr	w8, [sp, #88]
    15b8:	str	w8, [x24]
    15bc:	add	w8, w8, #0x4
    15c0:	str	w8, [sp, #88]
    15c4:	b	1630 <ctf_bufopen_internal+0x14d8>
    15c8:	ldr	w8, [x23, #28]
    15cc:	ldr	w9, [sp, #96]
    15d0:	cmp	w9, w8
    15d4:	b.cs	1628 <ctf_bufopen_internal+0x14d0>  // b.hs, b.nlast
    15d8:	ldr	w10, [sp, #96]
    15dc:	ldr	x8, [x19, #408]
    15e0:	ldr	x9, [x19]
    15e4:	str	w10, [x24]
    15e8:	ldr	w28, [x8, w10, uxtw]
    15ec:	ldr	x8, [x9, #16]
    15f0:	mov	w0, w28
    15f4:	blr	x8
    15f8:	ldr	x8, [x19]
    15fc:	mov	w27, w0
    1600:	mov	w0, w28
    1604:	ldr	x8, [x8]
    1608:	blr	x8
    160c:	orr	w8, w0, w27
    1610:	cbz	w8, 1648 <ctf_bufopen_internal+0x14f0>
    1614:	ldr	w8, [sp, #96]
    1618:	add	w8, w8, w27, lsl #2
    161c:	add	w8, w8, #0x8
    1620:	str	w8, [sp, #96]
    1624:	b	1630 <ctf_bufopen_internal+0x14d8>
    1628:	mov	w8, #0xffffffff            	// #-1
    162c:	str	w8, [x24]
    1630:	ldr	x27, [x20, #24]
    1634:	add	x24, x24, #0x4
    1638:	cmp	x24, x26
    163c:	add	x21, x21, x27
    1640:	b.cc	1504 <ctf_bufopen_internal+0x13ac>  // b.lo, b.ul, b.last
    1644:	b	1704 <ctf_bufopen_internal+0x15ac>
    1648:	ldr	w8, [sp, #96]
    164c:	add	w8, w8, #0x4
    1650:	str	w8, [sp, #96]
    1654:	b	1630 <ctf_bufopen_internal+0x14d8>
    1658:	mov	w1, #0xc                   	// #12
    165c:	mov	x0, x21
    1660:	bl	0 <ctf_set_open_errno>
    1664:	mov	x0, x19
    1668:	bl	21dc <ctf_file_close>
    166c:	mov	x19, xzr
    1670:	mov	x0, x19
    1674:	add	sp, sp, #0x280
    1678:	ldp	x20, x19, [sp, #96]
    167c:	ldp	x22, x21, [sp, #80]
    1680:	ldp	x24, x23, [sp, #64]
    1684:	ldp	x26, x25, [sp, #48]
    1688:	ldp	x28, x27, [sp, #32]
    168c:	ldp	x29, x30, [sp, #16]
    1690:	ldr	d8, [sp], #112
    1694:	ret
    1698:	ldr	x12, [sp, #16]
    169c:	adrp	x8, 0 <ctf_set_ctl_hashes>
    16a0:	add	x8, x8, #0x0
    16a4:	mov	w9, #0x6                   	// #6
    16a8:	stp	xzr, x12, [x19, #296]
    16ac:	stp	x8, x9, [x19, #216]
    16b0:	ldr	x9, [sp, #56]
    16b4:	adrp	x10, 0 <ctf_set_ctl_hashes>
    16b8:	add	x10, x10, #0x0
    16bc:	stp	xzr, xzr, [x19, #320]
    16c0:	stp	x9, x10, [x19, #232]
    16c4:	ldr	x10, [sp, #48]
    16c8:	adrp	x12, 0 <ctf_set_ctl_hashes>
    16cc:	mov	w11, #0x5                   	// #5
    16d0:	add	x12, x12, #0x0
    16d4:	mov	w8, #0x4                   	// #4
    16d8:	stp	x11, x10, [x19, #248]
    16dc:	stp	x12, x8, [x19, #264]
    16e0:	ldr	x8, [sp, #8]
    16e4:	adrp	x9, 8b <ctf_simple_open+0x2b>
    16e8:	adrp	x10, 0 <ctf_set_ctl_hashes>
    16ec:	add	x9, x9, #0x0
    16f0:	add	x10, x10, #0x0
    16f4:	str	xzr, [x19, #312]
    16f8:	stp	x8, x9, [x19, #280]
    16fc:	str	x10, [x19, #488]
    1700:	b	17a0 <ctf_bufopen_internal+0x1648>
    1704:	ldr	x25, [x19, #432]
    1708:	adrp	x0, 0 <ctf_set_ctl_hashes>
    170c:	add	x0, x0, #0x0
    1710:	mov	x1, x25
    1714:	bl	0 <ctf_dprintf>
    1718:	ldr	x12, [sp, #16]
    171c:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1720:	add	x8, x8, #0x0
    1724:	mov	w9, #0x6                   	// #6
    1728:	stp	xzr, x12, [x19, #296]
    172c:	stp	x8, x9, [x19, #216]
    1730:	ldr	x9, [sp, #56]
    1734:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1738:	add	x10, x10, #0x0
    173c:	stp	xzr, xzr, [x19, #320]
    1740:	stp	x9, x10, [x19, #232]
    1744:	ldr	x10, [sp, #48]
    1748:	adrp	x12, 0 <ctf_set_ctl_hashes>
    174c:	mov	w11, #0x5                   	// #5
    1750:	add	x12, x12, #0x0
    1754:	mov	w8, #0x4                   	// #4
    1758:	stp	x11, x10, [x19, #248]
    175c:	stp	x12, x8, [x19, #264]
    1760:	ldr	x8, [sp, #8]
    1764:	adrp	x9, 8b <ctf_simple_open+0x2b>
    1768:	add	x9, x9, #0x0
    176c:	str	xzr, [x19, #312]
    1770:	stp	x8, x9, [x19, #280]
    1774:	ldr	x8, [x20, #24]
    1778:	cmp	x8, #0x18
    177c:	b.ne	1794 <ctf_bufopen_internal+0x163c>  // b.any
    1780:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1784:	add	x8, x8, #0x0
    1788:	b	179c <ctf_bufopen_internal+0x1644>
    178c:	mov	w1, w0
    1790:	b	165c <ctf_bufopen_internal+0x1504>
    1794:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1798:	add	x8, x8, #0x0
    179c:	str	x8, [x19, #488]
    17a0:	mov	w8, #0x1                   	// #1
    17a4:	str	w8, [x19, #548]
    17a8:	b	1670 <ctf_bufopen_internal+0x1518>
    17ac:	ldrb	w8, [x23, #2]
    17b0:	cmp	w8, #0x2
    17b4:	b.eq	1f94 <ctf_bufopen_internal+0x1e3c>  // b.none
    17b8:	cmp	w8, #0x1
    17bc:	b.ne	dcc <ctf_bufopen_internal+0xc74>  // b.any
    17c0:	ldp	x9, x8, [x19, #400]
    17c4:	ldp	w10, w11, [x23, #40]
    17c8:	mov	x26, xzr
    17cc:	str	x9, [sp, #8]
    17d0:	add	x9, x8, x10
    17d4:	cmp	w10, w11
    17d8:	add	x8, x8, x11
    17dc:	str	x9, [sp, #88]
    17e0:	str	x11, [sp, #40]
    17e4:	stp	x8, x10, [sp, #48]
    17e8:	b.cs	1964 <ctf_bufopen_internal+0x180c>  // b.hs, b.nlast
    17ec:	ldr	x27, [sp, #88]
    17f0:	ldp	w8, w9, [x27, #8]
    17f4:	ldrh	w10, [x27, #6]
    17f8:	ldrh	w24, [x27, #4]
    17fc:	mov	w25, #0x8                   	// #8
    1800:	bfi	x9, x8, #32, #32
    1804:	mov	w8, #0xffff                	// #65535
    1808:	cmp	w10, w8
    180c:	csel	x8, x9, x10, eq  // eq = none
    1810:	ubfx	x1, x24, #11, #21
    1814:	str	x8, [sp, #72]
    1818:	mov	w8, #0x10                  	// #16
    181c:	csel	x8, x8, x25, eq  // eq = none
    1820:	cmp	w1, #0xe
    1824:	and	x28, x24, #0x3ff
    1828:	str	x8, [sp, #64]
    182c:	b.hi	188c <ctf_bufopen_internal+0x1734>  // b.pmore
    1830:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1834:	add	x10, x10, #0x0
    1838:	adr	x8, 1848 <ctf_bufopen_internal+0x16f0>
    183c:	ldrb	w9, [x10, x1]
    1840:	add	x8, x8, x9, lsl #2
    1844:	br	x8
    1848:	mov	x25, xzr
    184c:	b	18a4 <ctf_bufopen_internal+0x174c>
    1850:	mov	w25, #0x4                   	// #4
    1854:	b	18a4 <ctf_bufopen_internal+0x174c>
    1858:	ldr	x8, [sp, #72]
    185c:	cmp	x8, #0x2, lsl #12
    1860:	b.ge	18a0 <ctf_bufopen_internal+0x1748>  // b.tcont
    1864:	lsl	x25, x28, #3
    1868:	b	18a4 <ctf_bufopen_internal+0x174c>
    186c:	lsl	x25, x28, #3
    1870:	mov	x8, x25
    1874:	b	1930 <ctf_bufopen_internal+0x17d8>
    1878:	and	x8, x28, #0x1
    187c:	add	x8, x8, x28
    1880:	lsl	x25, x8, #1
    1884:	lsl	x8, x8, #2
    1888:	b	1930 <ctf_bufopen_internal+0x17d8>
    188c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1890:	add	x0, x0, #0x0
    1894:	bl	0 <ctf_dprintf>
    1898:	mov	w25, #0x3ef                 	// #1007
    189c:	b	18a4 <ctf_bufopen_internal+0x174c>
    18a0:	lsl	x25, x28, #4
    18a4:	lsr	w1, w24, #11
    18a8:	cmp	w1, #0xe
    18ac:	b.hi	1918 <ctf_bufopen_internal+0x17c0>  // b.pmore
    18b0:	adrp	x10, 0 <ctf_set_ctl_hashes>
    18b4:	add	x10, x10, #0x0
    18b8:	adr	x9, 18cc <ctf_bufopen_internal+0x1774>
    18bc:	ldrb	w8, [x10, x1]
    18c0:	add	x9, x9, x8, lsl #2
    18c4:	mov	w8, #0xc                   	// #12
    18c8:	br	x9
    18cc:	mov	x8, xzr
    18d0:	b	1930 <ctf_bufopen_internal+0x17d8>
    18d4:	mov	w8, #0x4                   	// #4
    18d8:	b	1930 <ctf_bufopen_internal+0x17d8>
    18dc:	ldr	x9, [sp, #72]
    18e0:	mov	w8, #0x1fffffff            	// #536870911
    18e4:	cmp	x9, x8
    18e8:	b.gt	192c <ctf_bufopen_internal+0x17d4>
    18ec:	add	x8, x28, x28, lsl #1
    18f0:	lsl	x8, x8, #2
    18f4:	b	1930 <ctf_bufopen_internal+0x17d8>
    18f8:	lsl	x8, x28, #3
    18fc:	b	1930 <ctf_bufopen_internal+0x17d8>
    1900:	and	x8, x28, #0x1
    1904:	add	x8, x8, x28
    1908:	lsl	x8, x8, #2
    190c:	b	1930 <ctf_bufopen_internal+0x17d8>
    1910:	mov	w8, #0x8                   	// #8
    1914:	b	1930 <ctf_bufopen_internal+0x17d8>
    1918:	adrp	x0, 0 <ctf_set_ctl_hashes>
    191c:	add	x0, x0, #0x0
    1920:	bl	0 <ctf_dprintf>
    1924:	mov	w8, #0x3ef                 	// #1007
    1928:	b	1930 <ctf_bufopen_internal+0x17d8>
    192c:	lsl	x8, x28, #4
    1930:	ldr	x9, [sp, #72]
    1934:	orr	x9, x25, x9
    1938:	tbnz	x9, #63, 1f94 <ctf_bufopen_internal+0x1e3c>
    193c:	ldr	x10, [sp, #64]
    1940:	sub	x9, x26, x10
    1944:	sub	x9, x9, x25
    1948:	add	x8, x9, x8
    194c:	ldr	x9, [sp, #48]
    1950:	add	x10, x10, x27
    1954:	add	x27, x10, x25
    1958:	add	x26, x8, #0xc
    195c:	cmp	x27, x9
    1960:	b.cc	17f0 <ctf_bufopen_internal+0x1698>  // b.lo, b.ul, b.last
    1964:	ldr	x8, [x19, #416]
    1968:	add	x0, x8, x26
    196c:	str	x0, [sp, #72]
    1970:	bl	0 <malloc>
    1974:	cbz	x0, 1f94 <ctf_bufopen_internal+0x1e3c>
    1978:	ldr	x27, [x19, #408]
    197c:	ldr	w24, [x23, #40]
    1980:	mov	x25, x0
    1984:	mov	x1, x27
    1988:	mov	x2, x24
    198c:	bl	0 <memcpy>
    1990:	ldp	w28, w2, [x23, #44]
    1994:	add	x8, x25, x28
    1998:	add	x0, x8, x26
    199c:	add	x1, x27, x28
    19a0:	bl	0 <memcpy>
    19a4:	sub	w8, w28, w24
    19a8:	add	x0, x25, x24
    19ac:	add	x2, x26, x8
    19b0:	mov	w1, wzr
    19b4:	bl	0 <memset>
    19b8:	add	w8, w28, w26
    19bc:	str	w8, [x23, #44]
    19c0:	cmp	w8, w24
    19c4:	ldr	x8, [sp, #72]
    19c8:	str	x8, [x19, #416]
    19cc:	b.cc	2020 <ctf_bufopen_internal+0x1ec8>  // b.lo, b.ul, b.last
    19d0:	mov	x0, x19
    19d4:	mov	x1, x23
    19d8:	mov	x2, x25
    19dc:	stp	x25, x25, [x19, #400]
    19e0:	str	x25, [x19, #392]
    19e4:	bl	2090 <ctf_set_base>
    19e8:	ldr	x8, [x19, #408]
    19ec:	ldr	w9, [x23, #40]
    19f0:	ldr	x10, [sp, #56]
    19f4:	ldr	x11, [sp, #40]
    19f8:	add	x28, x8, x9
    19fc:	cmp	w10, w11
    1a00:	b.cs	1f60 <ctf_bufopen_internal+0x1e08>  // b.hs, b.nlast
    1a04:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1a08:	ldr	q0, [x8]
    1a0c:	movi	d8, #0xffff0000ffff
    1a10:	str	q0, [sp, #16]
    1a14:	b	1a54 <ctf_bufopen_internal+0x18fc>
    1a18:	ldrh	w8, [x26]
    1a1c:	ldrh	w9, [x26, #2]
    1a20:	fmov	s0, w8
    1a24:	mov	v0.s[1], w9
    1a28:	str	d0, [x27]
    1a2c:	ldr	w8, [x26, #4]
    1a30:	str	w8, [x27, #8]
    1a34:	ldr	x8, [sp, #72]
    1a38:	add	x9, x8, x26
    1a3c:	ldr	x8, [sp, #48]
    1a40:	str	x9, [sp, #88]
    1a44:	cmp	x9, x8
    1a48:	ldr	x8, [sp, #56]
    1a4c:	add	x28, x8, x27
    1a50:	b.cs	1f5c <ctf_bufopen_internal+0x1e04>  // b.hs, b.nlast
    1a54:	ldr	x10, [sp, #88]
    1a58:	mov	w11, #0x8                   	// #8
    1a5c:	ldp	w8, w9, [x10, #8]
    1a60:	ldrh	w27, [x10, #4]
    1a64:	ldrh	w10, [x10, #6]
    1a68:	bfi	x9, x8, #32, #32
    1a6c:	mov	w8, #0xffff                	// #65535
    1a70:	cmp	w10, w8
    1a74:	csel	x8, x9, x10, eq  // eq = none
    1a78:	ubfx	x1, x27, #11, #21
    1a7c:	str	x8, [sp, #64]
    1a80:	mov	w8, #0x10                  	// #16
    1a84:	mov	w9, #0x8                   	// #8
    1a88:	csel	x8, x8, x11, eq  // eq = none
    1a8c:	cmp	w1, #0xe
    1a90:	and	x24, x27, #0x3ff
    1a94:	str	x9, [sp, #72]
    1a98:	str	x8, [sp, #40]
    1a9c:	b.hi	1aec <ctf_bufopen_internal+0x1994>  // b.pmore
    1aa0:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1aa4:	add	x10, x10, #0x0
    1aa8:	adr	x8, 1ab8 <ctf_bufopen_internal+0x1960>
    1aac:	ldrb	w9, [x10, x1]
    1ab0:	add	x8, x8, x9, lsl #2
    1ab4:	br	x8
    1ab8:	str	xzr, [sp, #72]
    1abc:	b	1b08 <ctf_bufopen_internal+0x19b0>
    1ac0:	ldr	x8, [sp, #64]
    1ac4:	cmp	x8, #0x2, lsl #12
    1ac8:	b.ge	1b00 <ctf_bufopen_internal+0x19a8>  // b.tcont
    1acc:	lsl	x8, x24, #3
    1ad0:	b	1b04 <ctf_bufopen_internal+0x19ac>
    1ad4:	mov	w8, #0x4                   	// #4
    1ad8:	b	1b04 <ctf_bufopen_internal+0x19ac>
    1adc:	and	x8, x24, #0x1
    1ae0:	add	x8, x8, x24
    1ae4:	lsl	x8, x8, #1
    1ae8:	b	1b04 <ctf_bufopen_internal+0x19ac>
    1aec:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1af0:	add	x0, x0, #0x0
    1af4:	bl	0 <ctf_dprintf>
    1af8:	mov	w8, #0x3ef                 	// #1007
    1afc:	b	1b04 <ctf_bufopen_internal+0x19ac>
    1b00:	lsl	x8, x24, #4
    1b04:	str	x8, [sp, #72]
    1b08:	ldr	x8, [sp, #88]
    1b0c:	lsr	w9, w27, #10
    1b10:	mov	w10, w24
    1b14:	lsr	w25, w27, #11
    1b18:	ldr	w8, [x8]
    1b1c:	bfi	w10, w9, #25, #1
    1b20:	cmp	w25, #0xd
    1b24:	bfi	w10, w25, #26, #5
    1b28:	stp	w8, w10, [x28]
    1b2c:	b.hi	1b7c <ctf_bufopen_internal+0x1a24>  // b.pmore
    1b30:	mov	w8, #0x1                   	// #1
    1b34:	lsl	w8, w8, w25
    1b38:	mov	w9, #0x1d7                 	// #471
    1b3c:	tst	w8, w9
    1b40:	b.eq	1b60 <ctf_bufopen_internal+0x1a08>  // b.none
    1b44:	ldr	x9, [sp, #64]
    1b48:	mov	w8, #0xfffffffe            	// #-2
    1b4c:	cmp	x9, x8
    1b50:	b.hi	1b70 <ctf_bufopen_internal+0x1a18>  // b.pmore
    1b54:	ldr	x8, [sp, #64]
    1b58:	str	w8, [x28, #8]
    1b5c:	b	1b7c <ctf_bufopen_internal+0x1a24>
    1b60:	ldr	x8, [sp, #88]
    1b64:	ldrh	w8, [x8, #6]
    1b68:	str	w8, [x28, #8]
    1b6c:	b	1b7c <ctf_bufopen_internal+0x1a24>
    1b70:	ldr	x9, [sp, #64]
    1b74:	lsr	x8, x9, #32
    1b78:	stp	w8, w9, [x28, #12]
    1b7c:	ldp	w9, w8, [x28, #12]
    1b80:	ldr	w10, [x28, #8]
    1b84:	mov	w11, #0xc                   	// #12
    1b88:	bfi	x8, x9, #32, #32
    1b8c:	cmn	w10, #0x1
    1b90:	csel	x26, x8, x10, eq  // eq = none
    1b94:	mov	w8, #0x14                  	// #20
    1b98:	mov	w9, #0xc                   	// #12
    1b9c:	csel	x27, x8, x11, eq  // eq = none
    1ba0:	cmp	w25, #0xe
    1ba4:	str	x9, [sp, #56]
    1ba8:	b.hi	1c0c <ctf_bufopen_internal+0x1ab4>  // b.pmore
    1bac:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1bb0:	add	x10, x10, #0x0
    1bb4:	adr	x8, 1bc4 <ctf_bufopen_internal+0x1a6c>
    1bb8:	ldrb	w9, [x10, x25]
    1bbc:	add	x8, x8, x9, lsl #2
    1bc0:	br	x8
    1bc4:	str	xzr, [sp, #56]
    1bc8:	b	1c2c <ctf_bufopen_internal+0x1ad4>
    1bcc:	mov	w8, #0x4                   	// #4
    1bd0:	b	1c28 <ctf_bufopen_internal+0x1ad0>
    1bd4:	mov	w8, #0x1fffffff            	// #536870911
    1bd8:	cmp	x26, x8
    1bdc:	b.gt	1c24 <ctf_bufopen_internal+0x1acc>
    1be0:	add	x8, x24, x24, lsl #1
    1be4:	lsl	x8, x8, #2
    1be8:	b	1c28 <ctf_bufopen_internal+0x1ad0>
    1bec:	lsl	x8, x24, #3
    1bf0:	b	1c28 <ctf_bufopen_internal+0x1ad0>
    1bf4:	and	x8, x24, #0x1
    1bf8:	add	x8, x8, x24
    1bfc:	lsl	x8, x8, #2
    1c00:	b	1c28 <ctf_bufopen_internal+0x1ad0>
    1c04:	mov	w8, #0x8                   	// #8
    1c08:	b	1c28 <ctf_bufopen_internal+0x1ad0>
    1c0c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1c10:	add	x0, x0, #0x0
    1c14:	mov	w1, w25
    1c18:	bl	0 <ctf_dprintf>
    1c1c:	mov	w8, #0x3ef                 	// #1007
    1c20:	b	1c28 <ctf_bufopen_internal+0x1ad0>
    1c24:	lsl	x8, x24, #4
    1c28:	str	x8, [sp, #56]
    1c2c:	ldr	x8, [sp, #64]
    1c30:	cmp	x8, x26
    1c34:	b.ne	2000 <ctf_bufopen_internal+0x1ea8>  // b.any
    1c38:	ldr	x8, [sp, #88]
    1c3c:	ldr	x9, [sp, #40]
    1c40:	add	x27, x27, x28
    1c44:	add	x26, x9, x8
    1c48:	sub	w8, w25, #0x6
    1c4c:	cmp	w8, #0x2
    1c50:	b.cc	1c68 <ctf_bufopen_internal+0x1b10>  // b.lo, b.ul, b.last
    1c54:	cmp	w25, #0x5
    1c58:	b.eq	1cac <ctf_bufopen_internal+0x1b54>  // b.none
    1c5c:	cmp	w25, #0x4
    1c60:	b.eq	1a18 <ctf_bufopen_internal+0x18c0>  // b.none
    1c64:	b	1d5c <ctf_bufopen_internal+0x1c04>
    1c68:	cbz	w24, 1a34 <ctf_bufopen_internal+0x18dc>
    1c6c:	ldr	x8, [sp, #64]
    1c70:	cmp	x8, #0x2, lsl #12
    1c74:	b.ge	1cc8 <ctf_bufopen_internal+0x1b70>  // b.tcont
    1c78:	cmp	w24, #0x5
    1c7c:	b.cc	1ca0 <ctf_bufopen_internal+0x1b48>  // b.lo, b.ul, b.last
    1c80:	add	x8, x26, x24, lsl #3
    1c84:	sub	x8, x8, #0x4
    1c88:	cmp	x8, x27
    1c8c:	b.ls	1db0 <ctf_bufopen_internal+0x1c58>  // b.plast
    1c90:	mov	w8, #0xc                   	// #12
    1c94:	madd	x8, x24, x8, x27
    1c98:	cmp	x26, x8
    1c9c:	b.cs	1db0 <ctf_bufopen_internal+0x1c58>  // b.hs, b.nlast
    1ca0:	mov	x8, x27
    1ca4:	mov	x9, x26
    1ca8:	b	1e00 <ctf_bufopen_internal+0x1ca8>
    1cac:	cbz	w24, 1d5c <ctf_bufopen_internal+0x1c04>
    1cb0:	cmp	w24, #0x8
    1cb4:	b.cs	1d08 <ctf_bufopen_internal+0x1bb0>  // b.hs, b.nlast
    1cb8:	mov	x9, x27
    1cbc:	mov	x10, x26
    1cc0:	mov	x8, x24
    1cc4:	b	1d4c <ctf_bufopen_internal+0x1bf4>
    1cc8:	ldr	x9, [sp, #64]
    1ccc:	mov	w8, #0x20000000            	// #536870912
    1cd0:	cmp	x9, x8
    1cd4:	b.ge	1d80 <ctf_bufopen_internal+0x1c28>  // b.tcont
    1cd8:	cmp	w24, #0x5
    1cdc:	b.cc	1cfc <ctf_bufopen_internal+0x1ba4>  // b.lo, b.ul, b.last
    1ce0:	add	x8, x26, x24, lsl #4
    1ce4:	cmp	x27, x8
    1ce8:	b.cs	1e34 <ctf_bufopen_internal+0x1cdc>  // b.hs, b.nlast
    1cec:	mov	w8, #0xc                   	// #12
    1cf0:	madd	x8, x24, x8, x27
    1cf4:	cmp	x26, x8
    1cf8:	b.cs	1e34 <ctf_bufopen_internal+0x1cdc>  // b.hs, b.nlast
    1cfc:	mov	x8, x27
    1d00:	mov	x9, x26
    1d04:	b	1ea0 <ctf_bufopen_internal+0x1d48>
    1d08:	and	x11, x24, #0x3f8
    1d0c:	and	x8, x24, #0x7
    1d10:	add	x12, x26, #0x8
    1d14:	add	x9, x27, x11, lsl #2
    1d18:	add	x10, x26, x11, lsl #1
    1d1c:	add	x13, x27, #0x10
    1d20:	mov	x14, x11
    1d24:	ldp	d0, d1, [x12, #-8]
    1d28:	add	x12, x12, #0x10
    1d2c:	subs	x14, x14, #0x8
    1d30:	uxtl	v0.4s, v0.4h
    1d34:	uxtl	v1.4s, v1.4h
    1d38:	stp	q0, q1, [x13, #-16]
    1d3c:	add	x13, x13, #0x20
    1d40:	b.ne	1d24 <ctf_bufopen_internal+0x1bcc>  // b.any
    1d44:	cmp	x11, x24
    1d48:	b.eq	1d5c <ctf_bufopen_internal+0x1c04>  // b.none
    1d4c:	ldrh	w11, [x10], #2
    1d50:	subs	x8, x8, #0x1
    1d54:	str	w11, [x9], #4
    1d58:	b.ne	1d4c <ctf_bufopen_internal+0x1bf4>  // b.any
    1d5c:	ldr	x8, [sp, #72]
    1d60:	ldr	x9, [sp, #56]
    1d64:	cmp	x8, x9
    1d68:	b.ne	2040 <ctf_bufopen_internal+0x1ee8>  // b.any
    1d6c:	ldr	x2, [sp, #72]
    1d70:	mov	x0, x27
    1d74:	mov	x1, x26
    1d78:	bl	0 <memcpy>
    1d7c:	b	1a34 <ctf_bufopen_internal+0x18dc>
    1d80:	cmp	w24, #0x4
    1d84:	b.ls	1da4 <ctf_bufopen_internal+0x1c4c>  // b.plast
    1d88:	lsl	x8, x24, #4
    1d8c:	add	x9, x26, x8
    1d90:	cmp	x27, x9
    1d94:	b.cs	1ec0 <ctf_bufopen_internal+0x1d68>  // b.hs, b.nlast
    1d98:	add	x8, x27, x8
    1d9c:	cmp	x26, x8
    1da0:	b.cs	1ec0 <ctf_bufopen_internal+0x1d68>  // b.hs, b.nlast
    1da4:	mov	x8, x27
    1da8:	mov	x9, x26
    1dac:	b	1f30 <ctf_bufopen_internal+0x1dd8>
    1db0:	and	x8, x24, #0x3
    1db4:	tst	x24, #0x3
    1db8:	mov	w9, #0x4                   	// #4
    1dbc:	csel	x10, x9, x8, eq  // eq = none
    1dc0:	sub	x9, x24, x10
    1dc4:	mov	w8, #0xc                   	// #12
    1dc8:	madd	x8, x9, x8, x27
    1dcc:	add	x9, x26, x9, lsl #3
    1dd0:	add	x11, x26, #0x4
    1dd4:	mov	x12, x27
    1dd8:	sub	x13, x11, #0x4
    1ddc:	ld4	{v0.4h-v3.4h}, [x11], #32
    1de0:	ld2	{v4.4s, v5.4s}, [x13]
    1de4:	sub	x24, x24, #0x4
    1de8:	cmp	x10, x24
    1dec:	uxtl	v6.4s, v0.4h
    1df0:	uxtl	v5.4s, v1.4h
    1df4:	st3	{v4.4s-v6.4s}, [x12], #48
    1df8:	b.ne	1dd8 <ctf_bufopen_internal+0x1c80>  // b.any
    1dfc:	mov	x24, x10
    1e00:	add	x9, x9, #0x4
    1e04:	ldrh	w10, [x9, #2]
    1e08:	ldur	w11, [x9, #-4]
    1e0c:	ldrh	w12, [x9], #8
    1e10:	subs	x24, x24, #0x1
    1e14:	fmov	s0, w10
    1e18:	str	w11, [x8]
    1e1c:	mov	v0.s[1], w12
    1e20:	and	v0.8b, v0.8b, v8.8b
    1e24:	stur	d0, [x8, #4]
    1e28:	add	x8, x8, #0xc
    1e2c:	b.ne	1e04 <ctf_bufopen_internal+0x1cac>  // b.any
    1e30:	b	1a34 <ctf_bufopen_internal+0x18dc>
    1e34:	and	x8, x24, #0x3
    1e38:	tst	x24, #0x3
    1e3c:	mov	w9, #0x4                   	// #4
    1e40:	csel	x10, x9, x8, eq  // eq = none
    1e44:	sub	x9, x24, x10
    1e48:	mov	w8, #0xc                   	// #12
    1e4c:	madd	x8, x9, x8, x27
    1e50:	add	x9, x26, x9, lsl #4
    1e54:	add	x11, x26, #0x4
    1e58:	mov	x12, x27
    1e5c:	ldp	q1, q0, [x11]
    1e60:	ldp	q2, q3, [x11, #32]
    1e64:	sub	x13, x11, #0x4
    1e68:	ld4	{v4.4s-v7.4s}, [x13]
    1e6c:	zip1	v0.8h, v1.8h, v0.8h
    1e70:	ldr	q1, [sp, #16]
    1e74:	sub	x24, x24, #0x4
    1e78:	cmp	x10, x24
    1e7c:	add	x11, x11, #0x40
    1e80:	tbl	v1.16b, {v2.16b, v3.16b}, v1.16b
    1e84:	ext	v0.8b, v1.8b, v0.8b, #4
    1e88:	ext	v0.8b, v0.8b, v0.8b, #4
    1e8c:	uxtl	v6.4s, v0.4h
    1e90:	mov	v5.16b, v7.16b
    1e94:	st3	{v4.4s-v6.4s}, [x12], #48
    1e98:	b.ne	1e5c <ctf_bufopen_internal+0x1d04>  // b.any
    1e9c:	mov	x24, x10
    1ea0:	ldr	w10, [x9, #12]
    1ea4:	ldrh	w11, [x9, #4]
    1ea8:	ldr	w12, [x9], #16
    1eac:	subs	x24, x24, #0x1
    1eb0:	stp	w10, w11, [x8, #4]
    1eb4:	str	w12, [x8], #12
    1eb8:	b.ne	1ea0 <ctf_bufopen_internal+0x1d48>  // b.any
    1ebc:	b	1a34 <ctf_bufopen_internal+0x18dc>
    1ec0:	and	x8, x24, #0x3
    1ec4:	tst	x24, #0x3
    1ec8:	mov	w9, #0x4                   	// #4
    1ecc:	csel	x10, x9, x8, eq  // eq = none
    1ed0:	sub	x8, x24, x10
    1ed4:	lsl	x9, x8, #4
    1ed8:	add	x8, x27, x9
    1edc:	add	x9, x26, x9
    1ee0:	add	x11, x26, #0x4
    1ee4:	mov	x12, x27
    1ee8:	ldp	q1, q0, [x11]
    1eec:	ldp	q2, q3, [x11, #32]
    1ef0:	sub	x13, x11, #0x4
    1ef4:	ld4	{v4.4s-v7.4s}, [x13]
    1ef8:	zip1	v0.8h, v1.8h, v0.8h
    1efc:	ldr	q1, [sp, #16]
    1f00:	sub	x24, x24, #0x4
    1f04:	mov	v5.16b, v6.16b
    1f08:	cmp	x10, x24
    1f0c:	tbl	v1.16b, {v2.16b, v3.16b}, v1.16b
    1f10:	ext	v0.8b, v1.8b, v0.8b, #4
    1f14:	ext	v0.8b, v0.8b, v0.8b, #4
    1f18:	uxtl	v0.4s, v0.4h
    1f1c:	mov	v6.16b, v0.16b
    1f20:	st4	{v4.4s-v7.4s}, [x12], #64
    1f24:	add	x11, x11, #0x40
    1f28:	b.ne	1ee8 <ctf_bufopen_internal+0x1d90>  // b.any
    1f2c:	mov	x24, x10
    1f30:	add	x9, x9, #0x8
    1f34:	ldp	w10, w11, [x9]
    1f38:	ldur	w12, [x9, #-8]
    1f3c:	ldurh	w13, [x9, #-4]
    1f40:	subs	x24, x24, #0x1
    1f44:	add	x9, x9, #0x10
    1f48:	stp	w12, w10, [x8]
    1f4c:	stp	w13, w11, [x8, #8]
    1f50:	add	x8, x8, #0x10
    1f54:	b.ne	1f34 <ctf_bufopen_internal+0x1ddc>  // b.any
    1f58:	b	1a34 <ctf_bufopen_internal+0x18dc>
    1f5c:	ldr	x8, [x19, #408]
    1f60:	ldr	x9, [sp, #96]
    1f64:	sub	x8, x28, x8
    1f68:	ldr	w9, [x9]
    1f6c:	cmp	x8, x9
    1f70:	b.ne	2060 <ctf_bufopen_internal+0x1f08>  // b.any
    1f74:	ldr	x0, [sp, #8]
    1f78:	adrp	x9, 0 <ctf_set_ctl_hashes>
    1f7c:	mov	w8, #0x2                   	// #2
    1f80:	add	x9, x9, #0x0
    1f84:	str	w8, [x19, #560]
    1f88:	strb	w8, [x23, #2]
    1f8c:	str	x9, [x19]
    1f90:	bl	0 <free>
    1f94:	mov	w8, #0x7fff                	// #32767
    1f98:	str	w8, [x19, #544]
    1f9c:	b	dcc <ctf_bufopen_internal+0xc74>
    1fa0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1fa4:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1fa8:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1fac:	add	x0, x0, #0x0
    1fb0:	add	x1, x1, #0x0
    1fb4:	add	x3, x3, #0x0
    1fb8:	mov	w2, #0x428                 	// #1064
    1fbc:	bl	0 <__assert_fail>
    1fc0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1fc4:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1fc8:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1fcc:	add	x0, x0, #0x0
    1fd0:	add	x1, x1, #0x0
    1fd4:	add	x3, x3, #0x0
    1fd8:	mov	w2, #0x456                 	// #1110
    1fdc:	bl	0 <__assert_fail>
    1fe0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1fe4:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1fe8:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1fec:	add	x0, x0, #0x0
    1ff0:	add	x1, x1, #0x0
    1ff4:	add	x3, x3, #0x0
    1ff8:	mov	w2, #0x448                 	// #1096
    1ffc:	bl	0 <__assert_fail>
    2000:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2004:	adrp	x1, 0 <ctf_set_ctl_hashes>
    2008:	adrp	x3, 0 <ctf_set_ctl_hashes>
    200c:	add	x0, x0, #0x0
    2010:	add	x1, x1, #0x0
    2014:	add	x3, x3, #0x0
    2018:	mov	w2, #0x210                 	// #528
    201c:	bl	0 <__assert_fail>
    2020:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2024:	adrp	x1, 0 <ctf_set_ctl_hashes>
    2028:	adrp	x3, 0 <ctf_set_ctl_hashes>
    202c:	add	x0, x0, #0x0
    2030:	add	x1, x1, #0x0
    2034:	add	x3, x3, #0x0
    2038:	mov	w2, #0x1d0                 	// #464
    203c:	bl	0 <__assert_fail>
    2040:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2044:	adrp	x1, 0 <ctf_set_ctl_hashes>
    2048:	adrp	x3, 0 <ctf_set_ctl_hashes>
    204c:	add	x0, x0, #0x0
    2050:	add	x1, x1, #0x0
    2054:	add	x3, x3, #0x0
    2058:	mov	w2, #0x25c                 	// #604
    205c:	bl	0 <__assert_fail>
    2060:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2064:	adrp	x1, 0 <ctf_set_ctl_hashes>
    2068:	adrp	x3, 0 <ctf_set_ctl_hashes>
    206c:	add	x0, x0, #0x0
    2070:	add	x1, x1, #0x0
    2074:	add	x3, x3, #0x0
    2078:	mov	w2, #0x265                 	// #613
    207c:	bl	0 <__assert_fail>

0000000000002080 <ctf_bufopen>:
    2080:	mov	x5, x3
    2084:	mov	x3, xzr
    2088:	mov	w4, wzr
    208c:	b	158 <ctf_bufopen_internal>

0000000000002090 <ctf_set_base>:
    2090:	stp	x29, x30, [sp, #-32]!
    2094:	stp	x20, x19, [sp, #16]
    2098:	ldr	x8, [x0, #408]
    209c:	ldr	x9, [x0, #392]
    20a0:	str	x2, [x0, #392]
    20a4:	mov	x20, x1
    20a8:	mov	x19, x0
    20ac:	sub	x8, x8, x9
    20b0:	add	x8, x2, x8
    20b4:	str	x8, [x0, #408]
    20b8:	ldr	w9, [x1, #36]
    20bc:	mov	x29, sp
    20c0:	add	x10, x8, x9
    20c4:	str	x10, [x0, #464]
    20c8:	ldr	w10, [x1, #40]
    20cc:	sub	w9, w10, w9
    20d0:	lsr	w9, w9, #3
    20d4:	str	x9, [x0, #472]
    20d8:	ldr	w9, [x1, #44]
    20dc:	add	x8, x8, x9
    20e0:	str	x8, [x0, #336]
    20e4:	ldr	w8, [x1, #48]
    20e8:	str	x8, [x0, #344]
    20ec:	ldr	w1, [x1, #4]
    20f0:	cbz	w1, 2100 <ctf_set_base+0x70>
    20f4:	mov	x0, x19
    20f8:	bl	0 <ctf_strptr>
    20fc:	str	x0, [x19, #520]
    2100:	ldr	w1, [x20, #8]
    2104:	cbz	w1, 2114 <ctf_set_base+0x84>
    2108:	mov	x0, x19
    210c:	bl	0 <ctf_strptr>
    2110:	str	x0, [x19, #528]
    2114:	ldr	w1, [x20, #12]
    2118:	cbz	w1, 216c <ctf_set_base+0xdc>
    211c:	mov	x0, x19
    2120:	bl	0 <ctf_strptr>
    2124:	mov	x1, x0
    2128:	str	x0, [x19, #496]
    212c:	cbz	x1, 213c <ctf_set_base+0xac>
    2130:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2134:	add	x0, x0, #0x0
    2138:	bl	0 <ctf_dprintf>
    213c:	ldr	x1, [x19, #528]
    2140:	cbz	x1, 2178 <ctf_set_base+0xe8>
    2144:	ldr	x8, [x19, #520]
    2148:	ldp	x20, x19, [sp, #16]
    214c:	adrp	x9, 0 <ctf_set_ctl_hashes>
    2150:	add	x9, x9, #0x0
    2154:	cmp	x8, #0x0
    2158:	adrp	x0, 0 <ctf_set_ctl_hashes>
    215c:	csel	x2, x9, x8, eq  // eq = none
    2160:	add	x0, x0, #0x0
    2164:	ldp	x29, x30, [sp], #32
    2168:	b	0 <ctf_dprintf>
    216c:	ldr	x1, [x19, #496]
    2170:	cbnz	x1, 2130 <ctf_set_base+0xa0>
    2174:	b	213c <ctf_set_base+0xac>
    2178:	ldp	x20, x19, [sp, #16]
    217c:	ldp	x29, x30, [sp], #32
    2180:	ret

0000000000002184 <ctf_setmodel>:
    2184:	stp	x29, x30, [sp, #-16]!
    2188:	cmp	w1, #0x1
    218c:	mov	x29, sp
    2190:	b.eq	21a8 <ctf_setmodel+0x24>  // b.none
    2194:	cmp	w1, #0x2
    2198:	b.ne	21c4 <ctf_setmodel+0x40>  // b.any
    219c:	adrp	x8, 0 <ctf_set_ctl_hashes>
    21a0:	add	x8, x8, #0x0
    21a4:	b	21b0 <ctf_setmodel+0x2c>
    21a8:	adrp	x8, 0 <ctf_set_ctl_hashes>
    21ac:	add	x8, x8, #0x0
    21b0:	mov	w1, wzr
    21b4:	str	x8, [x0, #488]
    21b8:	mov	w0, w1
    21bc:	ldp	x29, x30, [sp], #16
    21c0:	ret
    21c4:	mov	w1, #0x16                  	// #22
    21c8:	bl	0 <ctf_set_errno>
    21cc:	mov	x1, x0
    21d0:	mov	w0, w1
    21d4:	ldp	x29, x30, [sp], #16
    21d8:	ret

00000000000021dc <ctf_file_close>:
    21dc:	stp	x29, x30, [sp, #-32]!
    21e0:	stp	x20, x19, [sp, #16]
    21e4:	mov	x29, sp
    21e8:	cbz	x0, 2218 <ctf_file_close+0x3c>
    21ec:	ldr	w2, [x0, #548]
    21f0:	mov	x19, x0
    21f4:	adrp	x0, 0 <ctf_set_ctl_hashes>
    21f8:	add	x0, x0, #0x0
    21fc:	mov	x1, x19
    2200:	bl	0 <ctf_dprintf>
    2204:	ldr	w8, [x19, #548]
    2208:	cmp	w8, #0x2
    220c:	b.cc	2224 <ctf_file_close+0x48>  // b.lo, b.ul, b.last
    2210:	sub	w8, w8, #0x1
    2214:	str	w8, [x19, #548]
    2218:	ldp	x20, x19, [sp, #16]
    221c:	ldp	x29, x30, [sp], #32
    2220:	ret
    2224:	ldr	x0, [x19, #504]
    2228:	bl	0 <free>
    222c:	ldr	x0, [x19, #536]
    2230:	bl	0 <free>
    2234:	ldr	x0, [x19, #512]
    2238:	bl	21dc <ctf_file_close>
    223c:	ldr	x1, [x19, #584]
    2240:	cbz	x1, 2258 <ctf_file_close+0x7c>
    2244:	ldr	x20, [x1, #8]
    2248:	mov	x0, x19
    224c:	bl	0 <ctf_dtd_delete>
    2250:	mov	x1, x20
    2254:	cbnz	x20, 2244 <ctf_file_close+0x68>
    2258:	ldr	x0, [x19, #568]
    225c:	bl	0 <ctf_dynhash_destroy>
    2260:	ldrb	w8, [x19, #552]
    2264:	tbnz	w8, #1, 2294 <ctf_file_close+0xb8>
    2268:	ldr	x0, [x19, #152]
    226c:	bl	0 <ctf_hash_destroy>
    2270:	ldr	x0, [x19, #168]
    2274:	bl	0 <ctf_hash_destroy>
    2278:	ldr	x0, [x19, #184]
    227c:	bl	0 <ctf_hash_destroy>
    2280:	ldr	x0, [x19, #200]
    2284:	bl	0 <ctf_hash_destroy>
    2288:	ldr	x1, [x19, #608]
    228c:	cbnz	x1, 22bc <ctf_file_close+0xe0>
    2290:	b	22d0 <ctf_file_close+0xf4>
    2294:	ldr	x0, [x19, #160]
    2298:	bl	0 <ctf_dynhash_destroy>
    229c:	ldr	x0, [x19, #176]
    22a0:	bl	0 <ctf_dynhash_destroy>
    22a4:	ldr	x0, [x19, #192]
    22a8:	bl	0 <ctf_dynhash_destroy>
    22ac:	ldr	x0, [x19, #208]
    22b0:	bl	0 <ctf_dynhash_destroy>
    22b4:	ldr	x1, [x19, #608]
    22b8:	cbz	x1, 22d0 <ctf_file_close+0xf4>
    22bc:	ldr	x20, [x1, #8]
    22c0:	mov	x0, x19
    22c4:	bl	0 <ctf_dvd_delete>
    22c8:	mov	x1, x20
    22cc:	cbnz	x20, 22bc <ctf_file_close+0xe0>
    22d0:	ldr	x0, [x19, #592]
    22d4:	bl	0 <ctf_dynhash_destroy>
    22d8:	mov	x0, x19
    22dc:	bl	0 <ctf_str_free_atoms>
    22e0:	ldr	x0, [x19, #704]
    22e4:	bl	0 <free>
    22e8:	ldr	x0, [x19, #24]
    22ec:	adrp	x20, 8b <ctf_simple_open+0x2b>
    22f0:	add	x20, x20, #0x0
    22f4:	cmp	x0, x20
    22f8:	b.eq	2300 <ctf_file_close+0x124>  // b.none
    22fc:	bl	0 <free>
    2300:	ldr	x0, [x19, #56]
    2304:	cmp	x0, x20
    2308:	b.eq	2310 <ctf_file_close+0x134>  // b.none
    230c:	bl	0 <free>
    2310:	ldr	x0, [x19, #88]
    2314:	cmp	x0, x20
    2318:	b.eq	2324 <ctf_file_close+0x148>  // b.none
    231c:	bl	0 <free>
    2320:	b	2334 <ctf_file_close+0x158>
    2324:	ldr	x0, [x19, #136]
    2328:	cbz	x0, 2334 <ctf_file_close+0x158>
    232c:	ldr	x1, [x19, #144]
    2330:	bl	0 <ctf_munmap>
    2334:	ldr	x0, [x19, #400]
    2338:	bl	0 <free>
    233c:	ldr	x0, [x19, #128]
    2340:	bl	0 <ctf_dynhash_destroy>
    2344:	ldr	x0, [x19, #648]
    2348:	bl	0 <ctf_dynhash_destroy>
    234c:	ldr	x0, [x19, #656]
    2350:	bl	0 <ctf_dynhash_destroy>
    2354:	ldr	x0, [x19, #664]
    2358:	bl	0 <ctf_dynhash_destroy>
    235c:	ldr	x0, [x19, #672]
    2360:	bl	0 <ctf_dynhash_destroy>
    2364:	ldr	x0, [x19, #696]
    2368:	bl	0 <ctf_dynhash_destroy>
    236c:	ldr	x0, [x19, #424]
    2370:	bl	0 <free>
    2374:	ldr	x0, [x19, #440]
    2378:	bl	0 <free>
    237c:	ldr	x0, [x19, #448]
    2380:	bl	0 <free>
    2384:	ldr	x0, [x19, #8]
    2388:	bl	0 <free>
    238c:	mov	x0, x19
    2390:	ldp	x20, x19, [sp, #16]
    2394:	ldp	x29, x30, [sp], #32
    2398:	b	0 <free>

000000000000239c <ctf_close>:
    239c:	b	0 <ctf_arc_close>

00000000000023a0 <ctf_get_arc>:
    23a0:	ldr	x0, [x0, #640]
    23a4:	ret

00000000000023a8 <ctf_getdatasect>:
    23a8:	ldur	q0, [x0, #40]
    23ac:	ldur	q1, [x0, #24]
    23b0:	stp	q1, q0, [x8]
    23b4:	ret

00000000000023b8 <ctf_parent_file>:
    23b8:	ldr	x0, [x0, #512]
    23bc:	ret

00000000000023c0 <ctf_parent_name>:
    23c0:	ldr	x0, [x0, #528]
    23c4:	ret

00000000000023c8 <ctf_parent_name_set>:
    23c8:	stp	x29, x30, [sp, #-32]!
    23cc:	stp	x20, x19, [sp, #16]
    23d0:	mov	x19, x0
    23d4:	ldr	x0, [x0, #536]
    23d8:	mov	x20, x1
    23dc:	mov	x29, sp
    23e0:	cbz	x0, 23e8 <ctf_parent_name_set+0x20>
    23e4:	bl	0 <free>
    23e8:	mov	x0, x20
    23ec:	bl	0 <strdup>
    23f0:	str	x0, [x19, #536]
    23f4:	cbz	x0, 2410 <ctf_parent_name_set+0x48>
    23f8:	mov	x8, x0
    23fc:	mov	w0, wzr
    2400:	str	x8, [x19, #528]
    2404:	ldp	x20, x19, [sp, #16]
    2408:	ldp	x29, x30, [sp], #32
    240c:	ret
    2410:	mov	w1, #0xc                   	// #12
    2414:	mov	x0, x19
    2418:	bl	0 <ctf_set_errno>
    241c:	ldp	x20, x19, [sp, #16]
    2420:	ldp	x29, x30, [sp], #32
    2424:	ret

0000000000002428 <ctf_cuname>:
    2428:	ldr	x0, [x0, #496]
    242c:	ret

0000000000002430 <ctf_cuname_set>:
    2430:	stp	x29, x30, [sp, #-32]!
    2434:	stp	x20, x19, [sp, #16]
    2438:	mov	x19, x0
    243c:	ldr	x0, [x0, #504]
    2440:	mov	x20, x1
    2444:	mov	x29, sp
    2448:	cbz	x0, 2450 <ctf_cuname_set+0x20>
    244c:	bl	0 <free>
    2450:	mov	x0, x20
    2454:	bl	0 <strdup>
    2458:	str	x0, [x19, #504]
    245c:	cbz	x0, 2478 <ctf_cuname_set+0x48>
    2460:	mov	x8, x0
    2464:	mov	w0, wzr
    2468:	str	x8, [x19, #496]
    246c:	ldp	x20, x19, [sp, #16]
    2470:	ldp	x29, x30, [sp], #32
    2474:	ret
    2478:	mov	w1, #0xc                   	// #12
    247c:	mov	x0, x19
    2480:	bl	0 <ctf_set_errno>
    2484:	ldp	x20, x19, [sp, #16]
    2488:	ldp	x29, x30, [sp], #32
    248c:	ret

0000000000002490 <ctf_import>:
    2490:	stp	x29, x30, [sp, #-32]!
    2494:	stp	x20, x19, [sp, #16]
    2498:	mov	x19, x0
    249c:	mov	x29, sp
    24a0:	cbz	x0, 24d4 <ctf_import+0x44>
    24a4:	mov	x20, x1
    24a8:	cmp	x19, x1
    24ac:	b.eq	24d4 <ctf_import+0x44>  // b.none
    24b0:	cbz	x20, 24ec <ctf_import+0x5c>
    24b4:	ldr	w8, [x20, #548]
    24b8:	cbz	w8, 24d4 <ctf_import+0x44>
    24bc:	ldr	x8, [x20, #488]
    24c0:	ldr	x9, [x19, #488]
    24c4:	cmp	x8, x9
    24c8:	b.eq	24ec <ctf_import+0x5c>  // b.none
    24cc:	mov	w1, #0x3f4                 	// #1012
    24d0:	b	24d8 <ctf_import+0x48>
    24d4:	mov	w1, #0x16                  	// #22
    24d8:	mov	x0, x19
    24dc:	bl	0 <ctf_set_errno>
    24e0:	ldp	x20, x19, [sp, #16]
    24e4:	ldp	x29, x30, [sp], #32
    24e8:	ret
    24ec:	ldr	x0, [x19, #512]
    24f0:	cbz	x0, 2508 <ctf_import+0x78>
    24f4:	ldr	w8, [x0, #548]
    24f8:	sub	w8, w8, #0x1
    24fc:	str	w8, [x0, #548]
    2500:	bl	21dc <ctf_file_close>
    2504:	str	xzr, [x19, #512]
    2508:	cbz	x20, 2564 <ctf_import+0xd4>
    250c:	ldr	x8, [x19, #528]
    2510:	cbnz	x8, 254c <ctf_import+0xbc>
    2514:	ldr	x0, [x19, #536]
    2518:	cbz	x0, 2520 <ctf_import+0x90>
    251c:	bl	0 <free>
    2520:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2524:	add	x0, x0, #0x0
    2528:	bl	0 <strdup>
    252c:	str	x0, [x19, #536]
    2530:	cbz	x0, 253c <ctf_import+0xac>
    2534:	str	x0, [x19, #528]
    2538:	b	254c <ctf_import+0xbc>
    253c:	mov	w1, #0xc                   	// #12
    2540:	mov	x0, x19
    2544:	bl	0 <ctf_set_errno>
    2548:	tbnz	w0, #31, 24e0 <ctf_import+0x50>
    254c:	ldr	w8, [x19, #552]
    2550:	orr	w8, w8, #0x1
    2554:	str	w8, [x19, #552]
    2558:	ldr	w8, [x20, #548]
    255c:	add	w8, w8, #0x1
    2560:	str	w8, [x20, #548]
    2564:	mov	w0, wzr
    2568:	str	x20, [x19, #512]
    256c:	ldp	x20, x19, [sp, #16]
    2570:	ldp	x29, x30, [sp], #32
    2574:	ret

0000000000002578 <ctf_getmodel>:
    2578:	ldr	x8, [x0, #488]
    257c:	ldr	w0, [x8, #8]
    2580:	ret

0000000000002584 <ctf_setspecific>:
    2584:	str	x1, [x0, #720]
    2588:	ret

000000000000258c <ctf_getspecific>:
    258c:	ldr	x0, [x0, #720]
    2590:	ret

0000000000002594 <get_kind_v1>:
    2594:	ubfx	w0, w0, #11, #5
    2598:	ret

000000000000259c <get_root_v1>:
    259c:	ubfx	w0, w0, #10, #1
    25a0:	ret

00000000000025a4 <get_vlen_v1>:
    25a4:	and	w0, w0, #0x3ff
    25a8:	ret

00000000000025ac <get_ctt_size_v1>:
    25ac:	ldp	w8, w9, [x1, #8]
    25b0:	ldrh	w10, [x1, #6]
    25b4:	mov	w11, #0xffff                	// #65535
    25b8:	mov	w12, #0x8                   	// #8
    25bc:	mov	w13, #0x10                  	// #16
    25c0:	bfi	x9, x8, #32, #32
    25c4:	cmp	w10, w11
    25c8:	csel	x0, x9, x10, eq  // eq = none
    25cc:	csel	x8, x13, x12, eq  // eq = none
    25d0:	cbz	x2, 25d8 <get_ctt_size_v1+0x2c>
    25d4:	str	x0, [x2]
    25d8:	cbz	x3, 25e0 <get_ctt_size_v1+0x34>
    25dc:	str	x8, [x3]
    25e0:	ret

00000000000025e4 <get_vbytes_v1>:
    25e4:	and	w8, w0, #0xffff
    25e8:	cmp	w8, #0xe
    25ec:	b.hi	2630 <get_vbytes_v1+0x4c>  // b.pmore
    25f0:	adrp	x9, 0 <ctf_set_ctl_hashes>
    25f4:	and	x8, x0, #0xffff
    25f8:	add	x9, x9, #0x0
    25fc:	adr	x10, 2610 <get_vbytes_v1+0x2c>
    2600:	ldrb	w11, [x9, x8]
    2604:	add	x10, x10, x11, lsl #2
    2608:	mov	w0, #0x8                   	// #8
    260c:	br	x10
    2610:	mov	x0, xzr
    2614:	ret
    2618:	mov	w0, #0x4                   	// #4
    261c:	ret
    2620:	cmp	x1, #0x2, lsl #12
    2624:	b.ge	2664 <get_vbytes_v1+0x80>  // b.tcont
    2628:	lsl	x0, x2, #3
    262c:	ret
    2630:	stp	x29, x30, [sp, #-16]!
    2634:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2638:	add	x0, x0, #0x0
    263c:	mov	w1, w8
    2640:	mov	x29, sp
    2644:	bl	0 <ctf_dprintf>
    2648:	mov	w0, #0x3ef                 	// #1007
    264c:	ldp	x29, x30, [sp], #16
    2650:	ret
    2654:	and	x8, x2, #0x1
    2658:	add	x8, x8, x2
    265c:	lsl	x0, x8, #1
    2660:	ret
    2664:	lsl	x0, x2, #4
    2668:	ret

000000000000266c <get_kind_v2>:
    266c:	lsr	w0, w0, #26
    2670:	ret

0000000000002674 <get_root_v2>:
    2674:	ubfx	w0, w0, #25, #1
    2678:	ret

000000000000267c <get_vlen_v2>:
    267c:	and	w0, w0, #0xffffff
    2680:	ret

0000000000002684 <get_ctt_size_v2>:
    2684:	ldp	w9, w8, [x1, #12]
    2688:	ldr	w10, [x1, #8]
    268c:	mov	w11, #0xc                   	// #12
    2690:	mov	w12, #0x14                  	// #20
    2694:	bfi	x8, x9, #32, #32
    2698:	cmn	w10, #0x1
    269c:	csel	x0, x8, x10, eq  // eq = none
    26a0:	csel	x8, x12, x11, eq  // eq = none
    26a4:	cbz	x2, 26ac <get_ctt_size_v2+0x28>
    26a8:	str	x0, [x2]
    26ac:	cbz	x3, 26b4 <get_ctt_size_v2+0x30>
    26b0:	str	x8, [x3]
    26b4:	ret

00000000000026b8 <get_vbytes_v2>:
    26b8:	and	w8, w0, #0xffff
    26bc:	cmp	w8, #0xe
    26c0:	b.hi	270c <get_vbytes_v2+0x54>  // b.pmore
    26c4:	adrp	x9, 0 <ctf_set_ctl_hashes>
    26c8:	and	x8, x0, #0xffff
    26cc:	add	x9, x9, #0x0
    26d0:	adr	x10, 26e4 <get_vbytes_v2+0x2c>
    26d4:	ldrb	w11, [x9, x8]
    26d8:	add	x10, x10, x11, lsl #2
    26dc:	mov	w0, #0xc                   	// #12
    26e0:	br	x10
    26e4:	mov	x0, xzr
    26e8:	ret
    26ec:	mov	w0, #0x4                   	// #4
    26f0:	ret
    26f4:	mov	w8, #0x1fffffff            	// #536870911
    26f8:	cmp	x1, x8
    26fc:	b.gt	2750 <get_vbytes_v2+0x98>
    2700:	add	x8, x2, x2, lsl #1
    2704:	lsl	x0, x8, #2
    2708:	ret
    270c:	stp	x29, x30, [sp, #-16]!
    2710:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2714:	add	x0, x0, #0x0
    2718:	mov	w1, w8
    271c:	mov	x29, sp
    2720:	bl	0 <ctf_dprintf>
    2724:	mov	w0, #0x3ef                 	// #1007
    2728:	ldp	x29, x30, [sp], #16
    272c:	ret
    2730:	and	x8, x2, #0x1
    2734:	add	x8, x8, x2
    2738:	lsl	x0, x8, #2
    273c:	ret
    2740:	lsl	x0, x2, #3
    2744:	ret
    2748:	mov	w0, #0x8                   	// #8
    274c:	ret
    2750:	lsl	x0, x2, #4
    2754:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_strraw_explicit>:
   0:	lsr	w8, w1, #31
   4:	cmp	x2, #0x0
   8:	mov	w9, #0xffffffff            	// #-1
   c:	add	x10, x0, w8, uxtw #4
  10:	ccmp	w1, w9, #0x4, ne  // ne = any
  14:	add	x9, x10, #0x150
  18:	csel	x9, x2, x9, gt
  1c:	cmp	w8, #0x1
  20:	b.ne	38 <ctf_strraw_explicit+0x38>  // b.any
  24:	ldr	x8, [x0, #128]
  28:	cbz	x8, 38 <ctf_strraw_explicit+0x38>
  2c:	mov	w1, w1
  30:	mov	x0, x8
  34:	b	0 <ctf_dynhash_lookup>
  38:	tbnz	w1, #31, 64 <ctf_strraw_explicit+0x64>
  3c:	ldr	x10, [x9, #8]
  40:	mov	w8, w1
  44:	cmp	x10, x8
  48:	b.hi	64 <ctf_strraw_explicit+0x64>  // b.pmore
  4c:	ldr	w10, [x0, #384]
  50:	cmp	w10, w1
  54:	b.ls	64 <ctf_strraw_explicit+0x64>  // b.plast
  58:	ldr	x0, [x0, #120]
  5c:	mov	x1, x8
  60:	b	0 <ctf_dynhash_lookup>
  64:	ldr	x8, [x9]
  68:	cbz	x8, 84 <ctf_strraw_explicit+0x84>
  6c:	ldr	x9, [x9, #8]
  70:	and	w10, w1, #0x7fffffff
  74:	add	x8, x8, x10
  78:	cmp	x9, x10
  7c:	csel	x0, x8, xzr, hi  // hi = pmore
  80:	ret
  84:	mov	x0, xzr
  88:	ret

000000000000008c <ctf_strraw>:
  8c:	lsr	w9, w1, #31
  90:	cmp	w9, #0x1
  94:	b.ne	ac <ctf_strraw+0x20>  // b.any
  98:	ldr	x8, [x0, #128]
  9c:	cbz	x8, ac <ctf_strraw+0x20>
  a0:	mov	w1, w1
  a4:	mov	x0, x8
  a8:	b	0 <ctf_dynhash_lookup>
  ac:	tbnz	w1, #31, dc <ctf_strraw+0x50>
  b0:	add	x8, x0, x9, lsl #4
  b4:	ldr	x10, [x8, #344]
  b8:	mov	w8, w1
  bc:	cmp	x10, x8
  c0:	b.hi	dc <ctf_strraw+0x50>  // b.pmore
  c4:	ldr	w10, [x0, #384]
  c8:	cmp	w10, w1
  cc:	b.ls	dc <ctf_strraw+0x50>  // b.plast
  d0:	ldr	x0, [x0, #120]
  d4:	mov	x1, x8
  d8:	b	0 <ctf_dynhash_lookup>
  dc:	add	x8, x0, x9, lsl #4
  e0:	ldr	x9, [x8, #336]
  e4:	cbz	x9, 100 <ctf_strraw+0x74>
  e8:	ldr	x8, [x8, #344]
  ec:	and	w10, w1, #0x7fffffff
  f0:	add	x9, x9, x10
  f4:	cmp	x8, x10
  f8:	csel	x0, x9, xzr, hi  // hi = pmore
  fc:	ret
 100:	mov	x0, xzr
 104:	ret

0000000000000108 <ctf_strptr>:
 108:	stp	x29, x30, [sp, #-16]!
 10c:	lsr	w9, w1, #31
 110:	cmp	w9, #0x1
 114:	mov	x29, sp
 118:	b.ne	134 <ctf_strptr+0x2c>  // b.any
 11c:	ldr	x8, [x0, #128]
 120:	cbz	x8, 134 <ctf_strptr+0x2c>
 124:	mov	w1, w1
 128:	mov	x0, x8
 12c:	bl	0 <ctf_dynhash_lookup>
 130:	b	190 <ctf_strptr+0x88>
 134:	tbnz	w1, #31, 168 <ctf_strptr+0x60>
 138:	add	x8, x0, x9, lsl #4
 13c:	ldr	x10, [x8, #344]
 140:	mov	w8, w1
 144:	cmp	x10, x8
 148:	b.hi	168 <ctf_strptr+0x60>  // b.pmore
 14c:	ldr	w10, [x0, #384]
 150:	cmp	w10, w1
 154:	b.ls	168 <ctf_strptr+0x60>  // b.plast
 158:	ldr	x0, [x0, #120]
 15c:	mov	x1, x8
 160:	bl	0 <ctf_dynhash_lookup>
 164:	b	190 <ctf_strptr+0x88>
 168:	add	x8, x0, x9, lsl #4
 16c:	ldr	x9, [x8, #336]
 170:	cbz	x9, 18c <ctf_strptr+0x84>
 174:	ldr	x8, [x8, #344]
 178:	and	w10, w1, #0x7fffffff
 17c:	add	x9, x9, x10
 180:	cmp	x8, x10
 184:	csel	x0, x9, xzr, hi  // hi = pmore
 188:	b	190 <ctf_strptr+0x88>
 18c:	mov	x0, xzr
 190:	adrp	x8, 0 <ctf_strraw_explicit>
 194:	add	x8, x8, #0x0
 198:	cmp	x0, #0x0
 19c:	csel	x0, x8, x0, eq  // eq = none
 1a0:	ldp	x29, x30, [sp], #16
 1a4:	ret

00000000000001a8 <ctf_str_create_atoms>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	stp	x20, x19, [sp, #16]
 1b0:	mov	x19, x0
 1b4:	adrp	x0, 0 <ctf_hash_string>
 1b8:	adrp	x1, 0 <ctf_hash_eq_string>
 1bc:	adrp	x2, 0 <free>
 1c0:	adrp	x3, 0 <ctf_strraw_explicit>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x2, x2, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	x29, sp
 1d8:	bl	0 <ctf_dynhash_create>
 1dc:	str	x0, [x19, #368]
 1e0:	cbz	x0, 260 <ctf_str_create_atoms+0xb8>
 1e4:	ldr	x8, [x19, #120]
 1e8:	cbnz	x8, 210 <ctf_str_create_atoms+0x68>
 1ec:	adrp	x0, 0 <ctf_hash_integer>
 1f0:	adrp	x1, 0 <ctf_hash_eq_integer>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	mov	x2, xzr
 200:	mov	x3, xzr
 204:	bl	0 <ctf_dynhash_create>
 208:	str	x0, [x19, #120]
 20c:	cbz	x0, 254 <ctf_str_create_atoms+0xac>
 210:	bl	0 <__errno_location>
 214:	adrp	x1, 0 <ctf_strraw_explicit>
 218:	mov	x20, x0
 21c:	str	wzr, [x0]
 220:	add	x1, x1, #0x0
 224:	mov	w3, #0x1                   	// #1
 228:	mov	x0, x19
 22c:	mov	w2, wzr
 230:	mov	x4, xzr
 234:	bl	324 <ctf_str_add_ref_internal>
 238:	ldr	w8, [x20]
 23c:	mov	w0, wzr
 240:	cmp	w8, #0xc
 244:	b.ne	264 <ctf_str_create_atoms+0xbc>  // b.any
 248:	ldr	x0, [x19, #120]
 24c:	bl	0 <ctf_dynhash_destroy>
 250:	str	xzr, [x19, #120]
 254:	ldr	x0, [x19, #368]
 258:	bl	0 <ctf_dynhash_destroy>
 25c:	str	xzr, [x19, #368]
 260:	mov	w0, #0xfffffff4            	// #-12
 264:	ldp	x20, x19, [sp, #16]
 268:	ldp	x29, x30, [sp], #32
 26c:	ret

0000000000000270 <ctf_str_free_atom>:
 270:	stp	x29, x30, [sp, #-48]!
 274:	stp	x22, x21, [sp, #16]
 278:	stp	x20, x19, [sp, #32]
 27c:	ldr	x20, [x0, #16]
 280:	mov	x19, x0
 284:	mov	x29, sp
 288:	cbz	x20, 2b0 <ctf_str_free_atom+0x40>
 28c:	add	x21, x19, #0x8
 290:	ldr	x22, [x20, #8]
 294:	mov	x0, x21
 298:	mov	x1, x20
 29c:	bl	0 <ctf_list_delete>
 2a0:	mov	x0, x20
 2a4:	bl	0 <free>
 2a8:	mov	x20, x22
 2ac:	cbnz	x22, 290 <ctf_str_free_atom+0x20>
 2b0:	mov	x0, x19
 2b4:	ldp	x20, x19, [sp, #32]
 2b8:	ldp	x22, x21, [sp, #16]
 2bc:	ldp	x29, x30, [sp], #48
 2c0:	b	0 <free>

00000000000002c4 <ctf_str_add>:
 2c4:	stp	x29, x30, [sp, #-16]!
 2c8:	mov	x29, sp
 2cc:	cbz	x1, 2f0 <ctf_str_add+0x2c>
 2d0:	mov	w3, #0x1                   	// #1
 2d4:	mov	w2, wzr
 2d8:	mov	x4, xzr
 2dc:	bl	324 <ctf_str_add_ref_internal>
 2e0:	cbz	x0, 2e8 <ctf_str_add+0x24>
 2e4:	ldr	w0, [x0, #24]
 2e8:	ldp	x29, x30, [sp], #16
 2ec:	ret
 2f0:	mov	w0, wzr
 2f4:	ldp	x29, x30, [sp], #16
 2f8:	ret

00000000000002fc <ctf_str_free_atoms>:
 2fc:	stp	x29, x30, [sp, #-32]!
 300:	str	x19, [sp, #16]
 304:	mov	x19, x0
 308:	ldr	x0, [x0, #120]
 30c:	mov	x29, sp
 310:	bl	0 <ctf_dynhash_destroy>
 314:	ldr	x0, [x19, #368]
 318:	ldr	x19, [sp, #16]
 31c:	ldp	x29, x30, [sp], #32
 320:	b	0 <ctf_dynhash_destroy>

0000000000000324 <ctf_str_add_ref_internal>:
 324:	stp	x29, x30, [sp, #-80]!
 328:	stp	x24, x23, [sp, #32]
 32c:	stp	x22, x21, [sp, #48]
 330:	stp	x20, x19, [sp, #64]
 334:	mov	x20, x0
 338:	ldr	x0, [x0, #368]
 33c:	str	x25, [sp, #16]
 340:	mov	x29, sp
 344:	mov	x25, x4
 348:	mov	w23, w3
 34c:	mov	w22, w2
 350:	mov	x24, x1
 354:	bl	0 <ctf_dynhash_lookup>
 358:	mov	x19, x0
 35c:	cbz	w22, 37c <ctf_str_add_ref_internal+0x58>
 360:	mov	w0, #0x18                  	// #24
 364:	bl	0 <malloc>
 368:	cbz	x0, 454 <ctf_str_add_ref_internal+0x130>
 36c:	mov	x21, x0
 370:	str	x25, [x0, #16]
 374:	cbnz	x19, 384 <ctf_str_add_ref_internal+0x60>
 378:	b	3a4 <ctf_str_add_ref_internal+0x80>
 37c:	mov	x21, xzr
 380:	cbz	x19, 3a4 <ctf_str_add_ref_internal+0x80>
 384:	cbz	w22, 458 <ctf_str_add_ref_internal+0x134>
 388:	add	x0, x19, #0x8
 38c:	mov	x1, x21
 390:	bl	0 <ctf_list_append>
 394:	ldr	x8, [x20, #376]
 398:	add	x8, x8, #0x1
 39c:	str	x8, [x20, #376]
 3a0:	b	458 <ctf_str_add_ref_internal+0x134>
 3a4:	mov	w0, #0x28                  	// #40
 3a8:	bl	0 <malloc>
 3ac:	mov	x19, x0
 3b0:	cbz	x0, 428 <ctf_str_add_ref_internal+0x104>
 3b4:	movi	v0.2d, #0x0
 3b8:	mov	x0, x24
 3bc:	str	xzr, [x19, #32]
 3c0:	stp	q0, q0, [x19]
 3c4:	bl	0 <strdup>
 3c8:	mov	x24, x0
 3cc:	cbz	x0, 43c <ctf_str_add_ref_internal+0x118>
 3d0:	ldr	x0, [x20, #368]
 3d4:	mov	x1, x24
 3d8:	mov	x2, x19
 3dc:	bl	0 <ctf_dynhash_insert>
 3e0:	tbnz	w0, #31, 430 <ctf_str_add_ref_internal+0x10c>
 3e4:	str	x24, [x19]
 3e8:	ldr	x8, [x20, #624]
 3ec:	str	x8, [x19, #32]
 3f0:	cbz	w23, 384 <ctf_str_add_ref_internal+0x60>
 3f4:	ldr	w1, [x20, #384]
 3f8:	mov	x2, x24
 3fc:	str	w1, [x19, #24]
 400:	ldr	x0, [x20, #120]
 404:	bl	0 <ctf_dynhash_insert>
 408:	tbnz	w0, #31, 430 <ctf_str_add_ref_internal+0x10c>
 40c:	ldr	x0, [x19]
 410:	bl	0 <strlen>
 414:	ldr	w8, [x20, #384]
 418:	add	w8, w0, w8
 41c:	add	w8, w8, #0x1
 420:	str	w8, [x20, #384]
 424:	b	384 <ctf_str_add_ref_internal+0x60>
 428:	mov	x24, xzr
 42c:	b	43c <ctf_str_add_ref_internal+0x118>
 430:	ldr	x0, [x20, #368]
 434:	mov	x1, x24
 438:	bl	0 <ctf_dynhash_remove>
 43c:	mov	x0, x19
 440:	bl	0 <free>
 444:	mov	x0, x21
 448:	bl	0 <free>
 44c:	mov	x0, x24
 450:	bl	0 <free>
 454:	mov	x19, xzr
 458:	mov	x0, x19
 45c:	ldp	x20, x19, [sp, #64]
 460:	ldp	x22, x21, [sp, #48]
 464:	ldp	x24, x23, [sp, #32]
 468:	ldr	x25, [sp, #16]
 46c:	ldp	x29, x30, [sp], #80
 470:	ret

0000000000000474 <ctf_str_add_ref>:
 474:	stp	x29, x30, [sp, #-16]!
 478:	mov	x29, sp
 47c:	cbz	x1, 4a0 <ctf_str_add_ref+0x2c>
 480:	mov	x4, x2
 484:	mov	w2, #0x1                   	// #1
 488:	mov	w3, #0x1                   	// #1
 48c:	bl	324 <ctf_str_add_ref_internal>
 490:	cbz	x0, 498 <ctf_str_add_ref+0x24>
 494:	ldr	w0, [x0, #24]
 498:	ldp	x29, x30, [sp], #16
 49c:	ret
 4a0:	mov	w0, wzr
 4a4:	ldp	x29, x30, [sp], #16
 4a8:	ret

00000000000004ac <ctf_str_add_external>:
 4ac:	stp	x29, x30, [sp, #-32]!
 4b0:	str	x19, [sp, #16]
 4b4:	mov	x29, sp
 4b8:	cbz	x1, 4ec <ctf_str_add_external+0x40>
 4bc:	mov	w19, w2
 4c0:	mov	w2, wzr
 4c4:	mov	w3, wzr
 4c8:	mov	x4, xzr
 4cc:	bl	324 <ctf_str_add_ref_internal>
 4d0:	cbz	x0, 4e0 <ctf_str_add_external+0x34>
 4d4:	orr	w8, w19, #0x80000000
 4d8:	str	w8, [x0, #28]
 4dc:	mov	w0, #0x1                   	// #1
 4e0:	ldr	x19, [sp, #16]
 4e4:	ldp	x29, x30, [sp], #32
 4e8:	ret
 4ec:	mov	w0, wzr
 4f0:	ldr	x19, [sp, #16]
 4f4:	ldp	x29, x30, [sp], #32
 4f8:	ret

00000000000004fc <ctf_str_remove_ref>:
 4fc:	stp	x29, x30, [sp, #-48]!
 500:	stp	x22, x21, [sp, #16]
 504:	stp	x20, x19, [sp, #32]
 508:	ldr	x0, [x0, #368]
 50c:	mov	x29, sp
 510:	mov	x19, x2
 514:	bl	0 <ctf_dynhash_lookup>
 518:	cbz	x0, 558 <ctf_str_remove_ref+0x5c>
 51c:	ldr	x21, [x0, #16]
 520:	cbz	x21, 558 <ctf_str_remove_ref+0x5c>
 524:	add	x20, x0, #0x8
 528:	b	534 <ctf_str_remove_ref+0x38>
 52c:	mov	x21, x22
 530:	cbz	x22, 558 <ctf_str_remove_ref+0x5c>
 534:	ldp	x22, x8, [x21, #8]
 538:	cmp	x8, x19
 53c:	b.ne	52c <ctf_str_remove_ref+0x30>  // b.any
 540:	mov	x0, x20
 544:	mov	x1, x21
 548:	bl	0 <ctf_list_delete>
 54c:	mov	x0, x21
 550:	bl	0 <free>
 554:	b	52c <ctf_str_remove_ref+0x30>
 558:	ldp	x20, x19, [sp, #32]
 55c:	ldp	x22, x21, [sp, #16]
 560:	ldp	x29, x30, [sp], #48
 564:	ret

0000000000000568 <ctf_str_rollback>:
 568:	sub	sp, sp, #0x20
 56c:	stp	x29, x30, [sp, #16]
 570:	stp	x1, x2, [sp]
 574:	ldr	x0, [x0, #368]
 578:	adrp	x1, 0 <ctf_strraw_explicit>
 57c:	add	x1, x1, #0x0
 580:	mov	x2, sp
 584:	add	x29, sp, #0x10
 588:	bl	0 <ctf_dynhash_iter_remove>
 58c:	ldp	x29, x30, [sp, #16]
 590:	add	sp, sp, #0x20
 594:	ret

0000000000000598 <ctf_str_rollback_atom>:
 598:	ldr	x8, [x1, #32]
 59c:	ldr	x9, [x2, #8]
 5a0:	cmp	x8, x9
 5a4:	cset	w0, hi  // hi = pmore
 5a8:	ret

00000000000005ac <ctf_str_purge_refs>:
 5ac:	stp	x29, x30, [sp, #-32]!
 5b0:	ldr	x8, [x0, #376]
 5b4:	str	x19, [sp, #16]
 5b8:	mov	x19, x0
 5bc:	mov	x29, sp
 5c0:	cbz	x8, 5d8 <ctf_str_purge_refs+0x2c>
 5c4:	ldr	x0, [x19, #368]
 5c8:	adrp	x1, 0 <ctf_strraw_explicit>
 5cc:	add	x1, x1, #0x0
 5d0:	mov	x2, xzr
 5d4:	bl	0 <ctf_dynhash_iter>
 5d8:	str	xzr, [x19, #376]
 5dc:	ldr	x19, [sp, #16]
 5e0:	ldp	x29, x30, [sp], #32
 5e4:	ret

00000000000005e8 <ctf_str_purge_one_atom_refs>:
 5e8:	stp	x29, x30, [sp, #-48]!
 5ec:	stp	x20, x19, [sp, #32]
 5f0:	ldr	x19, [x1, #16]
 5f4:	str	x21, [sp, #16]
 5f8:	mov	x29, sp
 5fc:	cbz	x19, 624 <ctf_str_purge_one_atom_refs+0x3c>
 600:	add	x20, x1, #0x8
 604:	ldr	x21, [x19, #8]
 608:	mov	x0, x20
 60c:	mov	x1, x19
 610:	bl	0 <ctf_list_delete>
 614:	mov	x0, x19
 618:	bl	0 <free>
 61c:	mov	x19, x21
 620:	cbnz	x21, 604 <ctf_str_purge_one_atom_refs+0x1c>
 624:	ldp	x20, x19, [sp, #32]
 628:	ldr	x21, [sp, #16]
 62c:	ldp	x29, x30, [sp], #48
 630:	ret

0000000000000634 <ctf_str_write_strtab>:
 634:	sub	sp, sp, #0x80
 638:	stp	x29, x30, [sp, #64]
 63c:	add	x29, sp, #0x40
 640:	movi	v0.2d, #0x0
 644:	sub	x8, x29, #0x10
 648:	stp	x22, x21, [sp, #96]
 64c:	stp	x20, x19, [sp, #112]
 650:	stp	xzr, xzr, [x29, #-16]
 654:	stp	q0, q0, [sp, #16]
 658:	str	x8, [sp, #8]
 65c:	mov	x19, x0
 660:	ldr	x0, [x0, #368]
 664:	adrp	x1, 0 <ctf_strraw_explicit>
 668:	add	x1, x1, #0x0
 66c:	str	x23, [sp, #80]
 670:	bl	0 <ctf_dynhash_lookup>
 674:	cbz	x0, 804 <ctf_str_write_strtab+0x1d0>
 678:	str	x0, [sp, #40]
 67c:	mov	x21, x0
 680:	ldr	x0, [x19, #368]
 684:	adrp	x1, 0 <ctf_strraw_explicit>
 688:	add	x1, x1, #0x0
 68c:	add	x2, sp, #0x8
 690:	bl	0 <ctf_dynhash_iter>
 694:	ldur	x8, [x29, #-8]
 698:	adrp	x0, 0 <ctf_strraw_explicit>
 69c:	add	x0, x0, #0x0
 6a0:	add	x1, x8, #0x1
 6a4:	stur	x1, [x29, #-8]
 6a8:	bl	0 <ctf_dprintf>
 6ac:	ldr	x0, [sp, #16]
 6b0:	mov	w1, #0x8                   	// #8
 6b4:	bl	0 <calloc>
 6b8:	cbz	x0, 868 <ctf_str_write_strtab+0x234>
 6bc:	mov	x22, x0
 6c0:	mov	w8, #0x1                   	// #1
 6c4:	str	x21, [x22], #8
 6c8:	stp	x0, x8, [sp, #24]
 6cc:	mov	x20, x0
 6d0:	ldr	x0, [x19, #368]
 6d4:	adrp	x1, 0 <ctf_strraw_explicit>
 6d8:	add	x1, x1, #0x0
 6dc:	add	x2, sp, #0x8
 6e0:	bl	0 <ctf_dynhash_iter>
 6e4:	ldr	x8, [sp, #16]
 6e8:	adrp	x3, 0 <ctf_strraw_explicit>
 6ec:	add	x3, x3, #0x0
 6f0:	mov	w2, #0x8                   	// #8
 6f4:	sub	x1, x8, #0x1
 6f8:	mov	x0, x22
 6fc:	bl	0 <qsort>
 700:	ldur	x0, [x29, #-8]
 704:	bl	0 <malloc>
 708:	stur	x0, [x29, #-16]
 70c:	cbz	x0, 824 <ctf_str_write_strtab+0x1f0>
 710:	ldr	x8, [x19, #128]
 714:	cbnz	x8, 73c <ctf_str_write_strtab+0x108>
 718:	adrp	x0, 0 <ctf_hash_integer>
 71c:	adrp	x1, 0 <ctf_hash_eq_integer>
 720:	add	x0, x0, #0x0
 724:	add	x1, x1, #0x0
 728:	mov	x2, xzr
 72c:	mov	x3, xzr
 730:	bl	0 <ctf_dynhash_create>
 734:	str	x0, [x19, #128]
 738:	cbz	x0, 818 <ctf_str_write_strtab+0x1e4>
 73c:	ldr	x8, [sp, #16]
 740:	cbz	x8, 840 <ctf_str_write_strtab+0x20c>
 744:	mov	w23, wzr
 748:	mov	x21, xzr
 74c:	mov	w22, wzr
 750:	b	78c <ctf_str_write_strtab+0x158>
 754:	str	w22, [x8, #24]
 758:	ldur	x9, [x29, #-16]
 75c:	ldr	x1, [x8]
 760:	add	x0, x9, w22, uxtw
 764:	bl	0 <strcpy>
 768:	ldr	x8, [x20, x21, lsl #3]
 76c:	ldr	x0, [x8]
 770:	bl	0 <strlen>
 774:	add	w8, w22, w0
 778:	add	w22, w8, #0x1
 77c:	ldr	x8, [sp, #16]
 780:	add	x21, x21, #0x1
 784:	cmp	x21, x8
 788:	b.cs	830 <ctf_str_write_strtab+0x1fc>  // b.hs, b.nlast
 78c:	ldr	x8, [x20, x21, lsl #3]
 790:	ldr	w10, [x8, #28]
 794:	ldr	x9, [x8, #16]
 798:	cbz	w10, 7ec <ctf_str_write_strtab+0x1b8>
 79c:	cbz	x9, 7b4 <ctf_str_write_strtab+0x180>
 7a0:	ldr	x11, [x9, #16]
 7a4:	str	w10, [x11]
 7a8:	ldr	x9, [x9, #8]
 7ac:	cbnz	x9, 7a0 <ctf_str_write_strtab+0x16c>
 7b0:	ldr	w10, [x8, #28]
 7b4:	ldr	x0, [x19, #128]
 7b8:	ldr	x2, [x8]
 7bc:	mov	w1, w10
 7c0:	bl	0 <ctf_dynhash_insert>
 7c4:	tbnz	w0, #31, 818 <ctf_str_write_strtab+0x1e4>
 7c8:	ldr	x8, [x20, x21, lsl #3]
 7cc:	mov	w23, #0x1                   	// #1
 7d0:	ldr	w9, [x8, #28]
 7d4:	str	w9, [x8, #24]
 7d8:	ldr	x8, [sp, #16]
 7dc:	add	x21, x21, #0x1
 7e0:	cmp	x21, x8
 7e4:	b.cc	78c <ctf_str_write_strtab+0x158>  // b.lo, b.ul, b.last
 7e8:	b	830 <ctf_str_write_strtab+0x1fc>
 7ec:	cbz	x9, 754 <ctf_str_write_strtab+0x120>
 7f0:	ldr	x10, [x9, #16]
 7f4:	str	w22, [x10]
 7f8:	ldr	x9, [x9, #8]
 7fc:	cbnz	x9, 7f0 <ctf_str_write_strtab+0x1bc>
 800:	b	754 <ctf_str_write_strtab+0x120>
 804:	adrp	x0, 0 <ctf_strraw_explicit>
 808:	add	x0, x0, #0x0
 80c:	bl	0 <ctf_dprintf>
 810:	stur	xzr, [x29, #-16]
 814:	b	868 <ctf_str_write_strtab+0x234>
 818:	ldur	x0, [x29, #-16]
 81c:	bl	0 <free>
 820:	stur	xzr, [x29, #-16]
 824:	mov	x0, x20
 828:	bl	0 <free>
 82c:	b	868 <ctf_str_write_strtab+0x234>
 830:	mov	x0, x20
 834:	bl	0 <free>
 838:	cbnz	w23, 854 <ctf_str_write_strtab+0x220>
 83c:	b	848 <ctf_str_write_strtab+0x214>
 840:	mov	x0, x20
 844:	bl	0 <free>
 848:	ldr	x0, [x19, #128]
 84c:	bl	0 <ctf_dynhash_destroy>
 850:	str	xzr, [x19, #128]
 854:	ldr	x0, [x19, #120]
 858:	bl	0 <ctf_dynhash_empty>
 85c:	ldur	w8, [x29, #-8]
 860:	add	w8, w8, #0x1
 864:	str	w8, [x19, #384]
 868:	ldp	x0, x1, [x29, #-16]
 86c:	ldp	x20, x19, [sp, #112]
 870:	ldp	x22, x21, [sp, #96]
 874:	ldr	x23, [sp, #80]
 878:	ldp	x29, x30, [sp, #64]
 87c:	add	sp, sp, #0x80
 880:	ret

0000000000000884 <ctf_str_count_strtab>:
 884:	stp	x29, x30, [sp, #-32]!
 888:	stp	x20, x19, [sp, #16]
 88c:	ldr	x8, [x2, #32]
 890:	mov	x19, x2
 894:	mov	x29, sp
 898:	cmp	x8, x1
 89c:	b.eq	8e0 <ctf_str_count_strtab+0x5c>  // b.none
 8a0:	add	x0, x1, #0x8
 8a4:	mov	x20, x1
 8a8:	bl	0 <ctf_list_empty_p>
 8ac:	cbz	w0, 8bc <ctf_str_count_strtab+0x38>
 8b0:	ldp	x20, x19, [sp, #16]
 8b4:	ldp	x29, x30, [sp], #32
 8b8:	ret
 8bc:	ldr	w8, [x20, #28]
 8c0:	cbnz	w8, 8e0 <ctf_str_count_strtab+0x5c>
 8c4:	ldr	x0, [x20]
 8c8:	bl	0 <strlen>
 8cc:	ldr	x8, [x19]
 8d0:	ldr	x9, [x8, #8]
 8d4:	add	x9, x0, x9
 8d8:	add	x9, x9, #0x1
 8dc:	str	x9, [x8, #8]
 8e0:	ldr	x8, [x19, #8]
 8e4:	add	x8, x8, #0x1
 8e8:	str	x8, [x19, #8]
 8ec:	ldp	x20, x19, [sp, #16]
 8f0:	ldp	x29, x30, [sp], #32
 8f4:	ret

00000000000008f8 <ctf_str_populate_sorttab>:
 8f8:	stp	x29, x30, [sp, #-32]!
 8fc:	stp	x20, x19, [sp, #16]
 900:	ldr	x8, [x2, #32]
 904:	mov	x29, sp
 908:	cmp	x8, x1
 90c:	b.eq	924 <ctf_str_populate_sorttab+0x2c>  // b.none
 910:	add	x0, x1, #0x8
 914:	mov	x19, x2
 918:	mov	x20, x1
 91c:	bl	0 <ctf_list_empty_p>
 920:	cbz	w0, 930 <ctf_str_populate_sorttab+0x38>
 924:	ldp	x20, x19, [sp, #16]
 928:	ldp	x29, x30, [sp], #32
 92c:	ret
 930:	ldp	x9, x8, [x19, #16]
 934:	add	x10, x8, #0x1
 938:	str	x10, [x19, #24]
 93c:	str	x20, [x9, x8, lsl #3]
 940:	ldp	x20, x19, [sp, #16]
 944:	ldp	x29, x30, [sp], #32
 948:	ret

000000000000094c <ctf_str_sort_strtab>:
 94c:	ldr	x8, [x0]
 950:	ldr	x9, [x1]
 954:	ldr	x0, [x8]
 958:	ldr	x1, [x9]
 95c:	b	0 <strcmp>

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_mmap>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	w4, w2
   8:	mov	x5, x1
   c:	mov	x1, x0
  10:	mov	w2, #0x1                   	// #1
  14:	mov	w3, #0x2                   	// #2
  18:	mov	x0, xzr
  1c:	mov	x29, sp
  20:	bl	0 <mmap>
  24:	cmn	x0, #0x1
  28:	csel	x0, xzr, x0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret

0000000000000034 <ctf_munmap>:
  34:	b	0 <munmap>

0000000000000038 <ctf_pread>:
  38:	stp	x29, x30, [sp, #-64]!
  3c:	cmp	x2, #0x1
  40:	stp	x24, x23, [sp, #16]
  44:	stp	x22, x21, [sp, #32]
  48:	stp	x20, x19, [sp, #48]
  4c:	mov	x29, sp
  50:	b.lt	d0 <ctf_pread+0x98>  // b.tstop
  54:	mov	x19, x3
  58:	mov	x20, x2
  5c:	mov	x21, x1
  60:	mov	w22, w0
  64:	bl	0 <__errno_location>
  68:	mov	x24, x0
  6c:	mov	x23, xzr
  70:	b	7c <ctf_pread+0x44>
  74:	cmp	w8, #0x4
  78:	b.ne	a8 <ctf_pread+0x70>  // b.any
  7c:	mov	w0, w22
  80:	mov	x1, x21
  84:	mov	x2, x20
  88:	mov	x3, x19
  8c:	str	wzr, [x24]
  90:	bl	0 <pread>
  94:	ldr	w8, [x24]
  98:	tbz	x0, #63, 74 <ctf_pread+0x3c>
  9c:	cmp	w8, #0x4
  a0:	b.eq	74 <ctf_pread+0x3c>  // b.none
  a4:	b	c8 <ctf_pread+0x90>
  a8:	add	x23, x0, x23
  ac:	cbz	x0, d4 <ctf_pread+0x9c>
  b0:	sub	x20, x20, x0
  b4:	add	x19, x0, x19
  b8:	cmp	x20, #0x0
  bc:	add	x21, x21, x0
  c0:	b.gt	7c <ctf_pread+0x44>
  c4:	b	d4 <ctf_pread+0x9c>
  c8:	mov	x23, x0
  cc:	b	d4 <ctf_pread+0x9c>
  d0:	mov	x23, xzr
  d4:	mov	x0, x23
  d8:	ldp	x20, x19, [sp, #48]
  dc:	ldp	x22, x21, [sp, #32]
  e0:	ldp	x24, x23, [sp, #16]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret

00000000000000ec <ctf_strerror>:
  ec:	b	0 <strerror>

00000000000000f0 <ctf_version>:
  f0:	stp	x29, x30, [sp, #-32]!
  f4:	str	x19, [sp, #16]
  f8:	mov	x29, sp
  fc:	tbnz	w0, #31, 124 <ctf_version+0x34>
 100:	cmp	w0, #0x4
 104:	b.eq	130 <ctf_version+0x40>  // b.none
 108:	cbnz	w0, 15c <ctf_version+0x6c>
 10c:	adrp	x8, 0 <ctf_mmap>
 110:	ldr	w19, [x8]
 114:	mov	w0, w19
 118:	ldr	x19, [sp, #16]
 11c:	ldp	x29, x30, [sp], #32
 120:	ret
 124:	bl	0 <__errno_location>
 128:	mov	w8, #0x16                  	// #22
 12c:	b	164 <ctf_version+0x74>
 130:	adrp	x0, 0 <ctf_mmap>
 134:	add	x0, x0, #0x0
 138:	mov	w1, #0x4                   	// #4
 13c:	mov	w19, #0x4                   	// #4
 140:	bl	17c <ctf_dprintf>
 144:	adrp	x8, 0 <ctf_mmap>
 148:	str	w19, [x8]
 14c:	mov	w0, w19
 150:	ldr	x19, [sp, #16]
 154:	ldp	x29, x30, [sp], #32
 158:	ret
 15c:	bl	0 <__errno_location>
 160:	mov	w8, #0x5f                  	// #95
 164:	str	w8, [x0]
 168:	mov	w19, #0xffffffff            	// #-1
 16c:	mov	w0, w19
 170:	ldr	x19, [sp, #16]
 174:	ldp	x29, x30, [sp], #32
 178:	ret

000000000000017c <ctf_dprintf>:
 17c:	sub	sp, sp, #0x130
 180:	adrp	x8, 0 <ctf_mmap>
 184:	ldr	w8, [x8]
 188:	stp	x29, x30, [sp, #256]
 18c:	add	x29, sp, #0x100
 190:	str	x28, [sp, #272]
 194:	stp	x20, x19, [sp, #288]
 198:	stp	x1, x2, [x29, #-120]
 19c:	stp	x3, x4, [x29, #-104]
 1a0:	stp	x5, x6, [x29, #-88]
 1a4:	stur	x7, [x29, #-72]
 1a8:	stp	q0, q1, [sp]
 1ac:	stp	q2, q3, [sp, #32]
 1b0:	stp	q4, q5, [sp, #64]
 1b4:	stp	q6, q7, [sp, #96]
 1b8:	cbnz	w8, 1d0 <ctf_dprintf+0x54>
 1bc:	ldp	x20, x19, [sp, #288]
 1c0:	ldr	x28, [sp, #272]
 1c4:	ldp	x29, x30, [sp, #256]
 1c8:	add	sp, sp, #0x130
 1cc:	ret
 1d0:	adrp	x12, 0 <stdout>
 1d4:	mov	x19, x0
 1d8:	ldr	x0, [x12]
 1dc:	mov	x8, #0xffffffffffffffc8    	// #-56
 1e0:	mov	x10, sp
 1e4:	movk	x8, #0xff80, lsl #32
 1e8:	sub	x11, x29, #0x78
 1ec:	add	x10, x10, #0x80
 1f0:	add	x9, x29, #0x30
 1f4:	stp	x10, x8, [x29, #-16]
 1f8:	add	x8, x11, #0x38
 1fc:	stp	x9, x8, [x29, #-32]
 200:	bl	0 <fflush>
 204:	adrp	x20, 0 <stderr>
 208:	ldr	x3, [x20]
 20c:	adrp	x0, 0 <ctf_mmap>
 210:	add	x0, x0, #0x0
 214:	mov	w1, #0xe                   	// #14
 218:	mov	w2, #0x1                   	// #1
 21c:	bl	0 <fwrite>
 220:	ldp	q0, q1, [x29, #-32]
 224:	ldr	x0, [x20]
 228:	sub	x2, x29, #0x40
 22c:	mov	x1, x19
 230:	stp	q0, q1, [x29, #-64]
 234:	bl	0 <vfprintf>
 238:	b	1bc <ctf_dprintf+0x40>

000000000000023c <libctf_init_debug>:
 23c:	stp	x29, x30, [sp, #-32]!
 240:	str	x19, [sp, #16]
 244:	adrp	x19, 0 <ctf_mmap>
 248:	ldrb	w8, [x19]
 24c:	mov	x29, sp
 250:	tbnz	w8, #0, 278 <libctf_init_debug+0x3c>
 254:	adrp	x0, 0 <ctf_mmap>
 258:	add	x0, x0, #0x0
 25c:	bl	0 <getenv>
 260:	cmp	x0, #0x0
 264:	adrp	x8, 0 <ctf_mmap>
 268:	mov	w9, #0x1                   	// #1
 26c:	cset	w10, ne  // ne = any
 270:	str	w10, [x8]
 274:	strb	w9, [x19]
 278:	ldr	x19, [sp, #16]
 27c:	ldp	x29, x30, [sp], #32
 280:	ret

0000000000000284 <ctf_setdebug>:
 284:	stp	x29, x30, [sp, #-48]!
 288:	str	x21, [sp, #16]
 28c:	stp	x20, x19, [sp, #32]
 290:	adrp	x21, 0 <ctf_mmap>
 294:	ldrb	w8, [x21]
 298:	mov	w19, w0
 29c:	adrp	x20, 0 <ctf_mmap>
 2a0:	mov	x29, sp
 2a4:	tbnz	w8, #0, 2c8 <ctf_setdebug+0x44>
 2a8:	adrp	x0, 0 <ctf_mmap>
 2ac:	add	x0, x0, #0x0
 2b0:	bl	0 <getenv>
 2b4:	cmp	x0, #0x0
 2b8:	mov	w8, #0x1                   	// #1
 2bc:	cset	w9, ne  // ne = any
 2c0:	str	w9, [x20]
 2c4:	strb	w8, [x21]
 2c8:	str	w19, [x20]
 2cc:	mov	w1, w19
 2d0:	ldp	x20, x19, [sp, #32]
 2d4:	ldr	x21, [sp, #16]
 2d8:	adrp	x0, 0 <ctf_mmap>
 2dc:	add	x0, x0, #0x0
 2e0:	ldp	x29, x30, [sp], #48
 2e4:	b	17c <ctf_dprintf>

00000000000002e8 <ctf_getdebug>:
 2e8:	adrp	x8, 0 <ctf_mmap>
 2ec:	ldr	w0, [x8]
 2f0:	ret

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_type_isparent>:
       0:	ldr	w8, [x0, #544]
       4:	cmp	x8, x1
       8:	cset	w0, cs  // cs = hs, nlast
       c:	ret

0000000000000010 <ctf_type_ischild>:
      10:	ldr	w8, [x0, #544]
      14:	cmp	x8, x1
      18:	cset	w0, cc  // cc = lo, ul, last
      1c:	ret

0000000000000020 <ctf_member_iter>:
      20:	sub	sp, sp, #0x50
      24:	stp	x29, x30, [sp, #16]
      28:	add	x29, sp, #0x10
      2c:	str	x23, [sp, #32]
      30:	stp	x22, x21, [sp, #48]
      34:	stp	x20, x19, [sp, #64]
      38:	mov	x19, x3
      3c:	mov	x20, x2
      40:	mov	x21, x0
      44:	str	x0, [x29, #24]
      48:	bl	1a8 <ctf_type_resolve>
      4c:	cmn	x0, #0x1
      50:	b.eq	190 <ctf_member_iter+0x170>  // b.none
      54:	mov	x23, x0
      58:	add	x0, x29, #0x18
      5c:	mov	x1, x23
      60:	bl	0 <ctf_lookup_by_id>
      64:	cbz	x0, e0 <ctf_member_iter+0xc0>
      68:	mov	x22, x0
      6c:	ldr	x0, [x29, #24]
      70:	add	x2, sp, #0x8
      74:	mov	x3, sp
      78:	mov	x1, x22
      7c:	ldr	x8, [x0]
      80:	ldr	x8, [x8, #24]
      84:	blr	x8
      88:	ldr	x8, [x29, #24]
      8c:	ldr	w0, [x22, #4]
      90:	ldr	x8, [x8]
      94:	ldr	x8, [x8]
      98:	blr	x8
      9c:	orr	w8, w0, #0x1
      a0:	cmp	w8, #0x7
      a4:	b.ne	e8 <ctf_member_iter+0xc8>  // b.any
      a8:	ldr	x0, [x29, #24]
      ac:	mov	x1, x23
      b0:	bl	0 <ctf_dynamic_type>
      b4:	cbz	x0, f8 <ctf_member_iter+0xd8>
      b8:	ldr	x21, [x0, #56]
      bc:	cbz	x21, 18c <ctf_member_iter+0x16c>
      c0:	ldp	x0, x1, [x21, #16]
      c4:	ldr	x2, [x21, #32]
      c8:	mov	x3, x19
      cc:	blr	x20
      d0:	cbnz	w0, 190 <ctf_member_iter+0x170>
      d4:	ldr	x21, [x21, #8]
      d8:	cbnz	x21, c0 <ctf_member_iter+0xa0>
      dc:	b	18c <ctf_member_iter+0x16c>
      e0:	mov	w0, #0xffffffff            	// #-1
      e4:	b	190 <ctf_member_iter+0x170>
      e8:	mov	w1, #0x3fb                 	// #1019
      ec:	mov	x0, x21
      f0:	bl	0 <ctf_set_errno>
      f4:	b	190 <ctf_member_iter+0x170>
      f8:	ldr	x8, [x29, #24]
      fc:	ldp	x9, x21, [sp]
     100:	ldr	w0, [x22, #4]
     104:	ldr	x8, [x8]
     108:	add	x22, x9, x22
     10c:	ldr	x8, [x8, #16]
     110:	blr	x8
     114:	mov	w8, #0x1fffffff            	// #536870911
     118:	cmp	x21, x8
     11c:	mov	w21, w0
     120:	b.gt	154 <ctf_member_iter+0x134>
     124:	cbz	w21, 18c <ctf_member_iter+0x16c>
     128:	ldr	x0, [x29, #24]
     12c:	ldr	w1, [x22]
     130:	bl	0 <ctf_strptr>
     134:	ldp	w2, w1, [x22, #4]
     138:	mov	x3, x19
     13c:	blr	x20
     140:	cbnz	w0, 190 <ctf_member_iter+0x170>
     144:	subs	w21, w21, #0x1
     148:	add	x22, x22, #0xc
     14c:	b.ne	128 <ctf_member_iter+0x108>  // b.any
     150:	b	190 <ctf_member_iter+0x170>
     154:	cbz	w21, 18c <ctf_member_iter+0x16c>
     158:	ldr	x0, [x29, #24]
     15c:	ldr	w1, [x22]
     160:	bl	0 <ctf_strptr>
     164:	ldp	w8, w1, [x22, #4]
     168:	ldr	w2, [x22, #12]
     16c:	mov	x3, x19
     170:	bfi	x2, x8, #32, #32
     174:	blr	x20
     178:	cbnz	w0, 190 <ctf_member_iter+0x170>
     17c:	subs	w21, w21, #0x1
     180:	add	x22, x22, #0x10
     184:	b.ne	158 <ctf_member_iter+0x138>  // b.any
     188:	b	190 <ctf_member_iter+0x170>
     18c:	mov	w0, wzr
     190:	ldp	x20, x19, [sp, #64]
     194:	ldp	x22, x21, [sp, #48]
     198:	ldr	x23, [sp, #32]
     19c:	ldp	x29, x30, [sp, #16]
     1a0:	add	sp, sp, #0x50
     1a4:	ret

00000000000001a8 <ctf_type_resolve>:
     1a8:	stp	x29, x30, [sp, #-64]!
     1ac:	stp	x20, x19, [sp, #48]
     1b0:	mov	x29, sp
     1b4:	mov	x19, x0
     1b8:	str	x23, [sp, #16]
     1bc:	stp	x22, x21, [sp, #32]
     1c0:	str	x0, [x29, #24]
     1c4:	cbz	x1, 238 <ctf_type_resolve+0x90>
     1c8:	mov	x21, x1
     1cc:	mov	x23, x1
     1d0:	mov	x20, x1
     1d4:	add	x0, x29, #0x18
     1d8:	mov	x1, x20
     1dc:	bl	0 <ctf_lookup_by_id>
     1e0:	cbz	x0, 254 <ctf_type_resolve+0xac>
     1e4:	ldr	x8, [x29, #24]
     1e8:	mov	x22, x0
     1ec:	ldr	w0, [x0, #4]
     1f0:	ldr	x8, [x8]
     1f4:	ldr	x8, [x8]
     1f8:	blr	x8
     1fc:	sub	w8, w0, #0xa
     200:	cmp	w8, #0x3
     204:	b.hi	27c <ctf_type_resolve+0xd4>  // b.pmore
     208:	ldr	w8, [x22, #8]
     20c:	cmp	x23, x8
     210:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     214:	cmp	x20, x8
     218:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     21c:	cmp	x8, x21
     220:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     224:	mov	x23, x20
     228:	mov	x20, x8
     22c:	cbnz	w8, 1d4 <ctf_type_resolve+0x2c>
     230:	mov	w1, #0x41b                 	// #1051
     234:	b	270 <ctf_type_resolve+0xc8>
     238:	mov	x0, x19
     23c:	ldp	x20, x19, [sp, #48]
     240:	ldp	x22, x21, [sp, #32]
     244:	ldr	x23, [sp, #16]
     248:	mov	w1, #0x41b                 	// #1051
     24c:	ldp	x29, x30, [sp], #64
     250:	b	0 <ctf_set_errno>
     254:	mov	x20, #0xffffffffffffffff    	// #-1
     258:	b	27c <ctf_type_resolve+0xd4>
     25c:	adrp	x0, 0 <ctf_type_isparent>
     260:	add	x0, x0, #0x0
     264:	mov	x1, x21
     268:	bl	0 <ctf_dprintf>
     26c:	mov	w1, #0x3ef                 	// #1007
     270:	mov	x0, x19
     274:	bl	0 <ctf_set_errno>
     278:	mov	x20, x0
     27c:	mov	x0, x20
     280:	ldp	x20, x19, [sp, #48]
     284:	ldp	x22, x21, [sp, #32]
     288:	ldr	x23, [sp, #16]
     28c:	ldp	x29, x30, [sp], #64
     290:	ret

0000000000000294 <ctf_enum_iter>:
     294:	sub	sp, sp, #0x50
     298:	stp	x29, x30, [sp, #16]
     29c:	add	x29, sp, #0x10
     2a0:	str	x23, [sp, #32]
     2a4:	stp	x22, x21, [sp, #48]
     2a8:	stp	x20, x19, [sp, #64]
     2ac:	mov	x19, x3
     2b0:	mov	x20, x2
     2b4:	mov	x21, x0
     2b8:	str	x0, [x29, #24]
     2bc:	bl	3d0 <ctf_type_resolve_unsliced>
     2c0:	cmn	x0, #0x1
     2c4:	b.eq	368 <ctf_enum_iter+0xd4>  // b.none
     2c8:	mov	x23, x0
     2cc:	add	x0, x29, #0x18
     2d0:	mov	x1, x23
     2d4:	bl	0 <ctf_lookup_by_id>
     2d8:	cbz	x0, 354 <ctf_enum_iter+0xc0>
     2dc:	ldr	x8, [x29, #24]
     2e0:	mov	x22, x0
     2e4:	ldr	w0, [x0, #4]
     2e8:	ldr	x8, [x8]
     2ec:	ldr	x8, [x8]
     2f0:	blr	x8
     2f4:	cmp	w0, #0x8
     2f8:	b.ne	35c <ctf_enum_iter+0xc8>  // b.any
     2fc:	ldr	x0, [x29, #24]
     300:	add	x3, sp, #0x8
     304:	mov	x1, x22
     308:	mov	x2, xzr
     30c:	ldr	x8, [x0]
     310:	ldr	x8, [x8, #24]
     314:	blr	x8
     318:	mov	x0, x21
     31c:	mov	x1, x23
     320:	bl	0 <ctf_dynamic_type>
     324:	cbz	x0, 380 <ctf_enum_iter+0xec>
     328:	ldr	x21, [x0, #56]
     32c:	cbz	x21, 34c <ctf_enum_iter+0xb8>
     330:	ldr	x0, [x21, #16]
     334:	ldr	w1, [x21, #40]
     338:	mov	x2, x19
     33c:	blr	x20
     340:	cbnz	w0, 368 <ctf_enum_iter+0xd4>
     344:	ldr	x21, [x21, #8]
     348:	cbnz	x21, 330 <ctf_enum_iter+0x9c>
     34c:	mov	w0, wzr
     350:	b	368 <ctf_enum_iter+0xd4>
     354:	mov	w0, #0xffffffff            	// #-1
     358:	b	368 <ctf_enum_iter+0xd4>
     35c:	mov	w1, #0x3fc                 	// #1020
     360:	mov	x0, x21
     364:	bl	0 <ctf_set_errno>
     368:	ldp	x20, x19, [sp, #64]
     36c:	ldp	x22, x21, [sp, #48]
     370:	ldr	x23, [sp, #32]
     374:	ldp	x29, x30, [sp, #16]
     378:	add	sp, sp, #0x50
     37c:	ret
     380:	ldr	x8, [x29, #24]
     384:	ldr	w0, [x22, #4]
     388:	ldr	x23, [sp, #8]
     38c:	ldr	x8, [x8]
     390:	ldr	x8, [x8, #16]
     394:	blr	x8
     398:	cbz	w0, 368 <ctf_enum_iter+0xd4>
     39c:	mov	w21, w0
     3a0:	add	x22, x23, x22
     3a4:	ldr	x0, [x29, #24]
     3a8:	ldr	w1, [x22]
     3ac:	bl	0 <ctf_strptr>
     3b0:	ldr	w1, [x22, #4]
     3b4:	mov	x2, x19
     3b8:	blr	x20
     3bc:	cbnz	w0, 368 <ctf_enum_iter+0xd4>
     3c0:	subs	w21, w21, #0x1
     3c4:	add	x22, x22, #0x8
     3c8:	b.ne	3a4 <ctf_enum_iter+0x110>  // b.any
     3cc:	b	368 <ctf_enum_iter+0xd4>

00000000000003d0 <ctf_type_resolve_unsliced>:
     3d0:	sub	sp, sp, #0x40
     3d4:	stp	x29, x30, [sp, #32]
     3d8:	stp	x20, x19, [sp, #48]
     3dc:	add	x29, sp, #0x20
     3e0:	str	x0, [sp, #8]
     3e4:	bl	1a8 <ctf_type_resolve>
     3e8:	mov	x19, x0
     3ec:	cmn	x0, #0x1
     3f0:	b.eq	468 <ctf_type_resolve_unsliced+0x98>  // b.none
     3f4:	add	x0, sp, #0x8
     3f8:	mov	x1, x19
     3fc:	bl	0 <ctf_lookup_by_id>
     400:	cbz	x0, 464 <ctf_type_resolve_unsliced+0x94>
     404:	ldr	x8, [sp, #8]
     408:	ldr	w0, [x0, #4]
     40c:	ldr	x8, [x8]
     410:	ldr	x8, [x8]
     414:	blr	x8
     418:	cmp	w0, #0xe
     41c:	b.ne	468 <ctf_type_resolve_unsliced+0x98>  // b.any
     420:	ldr	x20, [sp, #8]
     424:	sub	x0, x29, #0x8
     428:	mov	x1, x19
     42c:	stur	x20, [x29, #-8]
     430:	bl	0 <ctf_lookup_by_id>
     434:	cbz	x0, 464 <ctf_type_resolve_unsliced+0x94>
     438:	ldur	x8, [x29, #-8]
     43c:	mov	x19, x0
     440:	ldr	w0, [x0, #4]
     444:	ldr	x8, [x8]
     448:	ldr	x8, [x8]
     44c:	blr	x8
     450:	sub	w8, w0, #0xa
     454:	cmp	w8, #0x4
     458:	b.cs	47c <ctf_type_resolve_unsliced+0xac>  // b.hs, b.nlast
     45c:	ldr	w19, [x19, #8]
     460:	b	468 <ctf_type_resolve_unsliced+0x98>
     464:	mov	x19, #0xffffffffffffffff    	// #-1
     468:	mov	x0, x19
     46c:	ldp	x20, x19, [sp, #48]
     470:	ldp	x29, x30, [sp, #32]
     474:	add	sp, sp, #0x40
     478:	ret
     47c:	cmp	w0, #0xe
     480:	b.eq	4a0 <ctf_type_resolve_unsliced+0xd0>  // b.none
     484:	cmp	w0, #0x3
     488:	b.eq	45c <ctf_type_resolve_unsliced+0x8c>  // b.none
     48c:	mov	w1, #0x400                 	// #1024
     490:	mov	x0, x20
     494:	bl	0 <ctf_set_errno>
     498:	mov	x19, x0
     49c:	b	468 <ctf_type_resolve_unsliced+0x98>
     4a0:	ldur	x0, [x29, #-8]
     4a4:	add	x3, sp, #0x10
     4a8:	mov	x1, x19
     4ac:	mov	x2, xzr
     4b0:	ldr	x8, [x0]
     4b4:	ldr	x8, [x8, #24]
     4b8:	blr	x8
     4bc:	ldr	x8, [sp, #16]
     4c0:	ldr	w19, [x8, x19]
     4c4:	b	468 <ctf_type_resolve_unsliced+0x98>

00000000000004c8 <ctf_type_iter>:
     4c8:	stp	x29, x30, [sp, #-64]!
     4cc:	stp	x22, x21, [sp, #32]
     4d0:	stp	x20, x19, [sp, #48]
     4d4:	str	x23, [sp, #16]
     4d8:	ldr	x23, [x0, #480]
     4dc:	mov	x29, sp
     4e0:	cbz	x23, 5f0 <ctf_type_iter+0x128>
     4e4:	ldr	w8, [x0, #552]
     4e8:	mov	x19, x2
     4ec:	mov	x20, x0
     4f0:	mov	x21, x1
     4f4:	tbnz	w8, #0, 570 <ctf_type_iter+0xa8>
     4f8:	mov	w22, #0x1                   	// #1
     4fc:	tbnz	w8, #1, 514 <ctf_type_iter+0x4c>
     500:	ldr	x8, [x20, #440]
     504:	ldr	x9, [x20, #408]
     508:	ldr	w8, [x8, x22, lsl #2]
     50c:	add	x8, x9, x8
     510:	b	534 <ctf_type_iter+0x6c>
     514:	mov	x1, x22
     518:	tbz	w8, #0, 528 <ctf_type_iter+0x60>
     51c:	ldr	w8, [x20, #544]
     520:	add	w8, w8, #0x1
     524:	orr	x1, x22, x8
     528:	mov	x0, x20
     52c:	bl	0 <ctf_dtd_lookup>
     530:	add	x8, x0, #0x18
     534:	ldr	x9, [x20]
     538:	ldr	w0, [x8, #4]
     53c:	ldr	x9, [x9, #8]
     540:	blr	x9
     544:	cbz	w0, 558 <ctf_type_iter+0x90>
     548:	mov	x0, x22
     54c:	mov	x1, x19
     550:	blr	x21
     554:	cbnz	w0, 5f4 <ctf_type_iter+0x12c>
     558:	add	x22, x22, #0x1
     55c:	cmp	x22, x23
     560:	b.hi	5f0 <ctf_type_iter+0x128>  // b.pmore
     564:	ldr	w8, [x20, #552]
     568:	tbnz	w8, #1, 514 <ctf_type_iter+0x4c>
     56c:	b	500 <ctf_type_iter+0x38>
     570:	mov	w22, #0x1                   	// #1
     574:	tbnz	w8, #1, 58c <ctf_type_iter+0xc4>
     578:	ldr	x8, [x20, #440]
     57c:	ldr	x9, [x20, #408]
     580:	ldr	w8, [x8, x22, lsl #2]
     584:	add	x8, x9, x8
     588:	b	5ac <ctf_type_iter+0xe4>
     58c:	mov	x1, x22
     590:	tbz	w8, #0, 5a0 <ctf_type_iter+0xd8>
     594:	ldr	w8, [x20, #544]
     598:	add	w8, w8, #0x1
     59c:	orr	x1, x22, x8
     5a0:	mov	x0, x20
     5a4:	bl	0 <ctf_dtd_lookup>
     5a8:	add	x8, x0, #0x18
     5ac:	ldr	x9, [x20]
     5b0:	ldr	w0, [x8, #4]
     5b4:	ldr	x9, [x9, #8]
     5b8:	blr	x9
     5bc:	cbz	w0, 5d8 <ctf_type_iter+0x110>
     5c0:	ldr	w8, [x20, #544]
     5c4:	mov	x1, x19
     5c8:	add	w8, w8, #0x1
     5cc:	orr	x0, x22, x8
     5d0:	blr	x21
     5d4:	cbnz	w0, 5f4 <ctf_type_iter+0x12c>
     5d8:	add	x22, x22, #0x1
     5dc:	cmp	x22, x23
     5e0:	b.hi	5f0 <ctf_type_iter+0x128>  // b.pmore
     5e4:	ldr	w8, [x20, #552]
     5e8:	tbnz	w8, #1, 58c <ctf_type_iter+0xc4>
     5ec:	b	578 <ctf_type_iter+0xb0>
     5f0:	mov	w0, wzr
     5f4:	ldp	x20, x19, [sp, #48]
     5f8:	ldp	x22, x21, [sp, #32]
     5fc:	ldr	x23, [sp, #16]
     600:	ldp	x29, x30, [sp], #64
     604:	ret

0000000000000608 <ctf_type_iter_all>:
     608:	stp	x29, x30, [sp, #-64]!
     60c:	stp	x24, x23, [sp, #16]
     610:	stp	x22, x21, [sp, #32]
     614:	stp	x20, x19, [sp, #48]
     618:	ldr	x23, [x0, #480]
     61c:	mov	x29, sp
     620:	cbz	x23, 758 <ctf_type_iter_all+0x150>
     624:	ldr	w8, [x0, #552]
     628:	mov	x19, x2
     62c:	mov	x20, x0
     630:	mov	x21, x1
     634:	tbnz	w8, #0, 668 <ctf_type_iter_all+0x60>
     638:	mov	w22, #0x1                   	// #1
     63c:	tbz	w8, #1, 710 <ctf_type_iter_all+0x108>
     640:	tbnz	w8, #0, 64c <ctf_type_iter_all+0x44>
     644:	mov	x1, x22
     648:	b	658 <ctf_type_iter_all+0x50>
     64c:	ldr	w8, [x20, #544]
     650:	add	w8, w8, #0x1
     654:	orr	x1, x22, x8
     658:	mov	x0, x20
     65c:	bl	0 <ctf_dtd_lookup>
     660:	add	x8, x0, #0x18
     664:	b	720 <ctf_type_iter_all+0x118>
     668:	mov	w24, #0x1                   	// #1
     66c:	tbz	w8, #1, 694 <ctf_type_iter_all+0x8c>
     670:	mov	x1, x24
     674:	tbz	w8, #0, 684 <ctf_type_iter_all+0x7c>
     678:	ldr	w8, [x20, #544]
     67c:	add	w8, w8, #0x1
     680:	orr	x1, x24, x8
     684:	mov	x0, x20
     688:	bl	0 <ctf_dtd_lookup>
     68c:	add	x8, x0, #0x18
     690:	b	6a4 <ctf_type_iter_all+0x9c>
     694:	ldr	x8, [x20, #440]
     698:	ldr	x9, [x20, #408]
     69c:	ldr	w8, [x8, x24, lsl #2]
     6a0:	add	x8, x9, x8
     6a4:	ldr	x9, [x20]
     6a8:	ldr	w10, [x20, #544]
     6ac:	ldr	w0, [x8, #4]
     6b0:	ldr	x9, [x9, #8]
     6b4:	add	w8, w10, #0x1
     6b8:	orr	x22, x24, x8
     6bc:	blr	x9
     6c0:	cmp	w0, #0x0
     6c4:	cset	w1, ne  // ne = any
     6c8:	mov	x0, x22
     6cc:	mov	x2, x19
     6d0:	blr	x21
     6d4:	cmp	w0, #0x0
     6d8:	mov	w8, w0
     6dc:	cset	w0, ne  // ne = any
     6e0:	cbnz	w8, 75c <ctf_type_iter_all+0x154>
     6e4:	add	x24, x24, #0x1
     6e8:	cmp	x24, x23
     6ec:	b.hi	758 <ctf_type_iter_all+0x150>  // b.pmore
     6f0:	ldr	w8, [x20, #552]
     6f4:	tbnz	w8, #1, 670 <ctf_type_iter_all+0x68>
     6f8:	b	694 <ctf_type_iter_all+0x8c>
     6fc:	add	x22, x22, #0x1
     700:	cmp	x22, x23
     704:	b.hi	758 <ctf_type_iter_all+0x150>  // b.pmore
     708:	ldr	w8, [x20, #552]
     70c:	tbnz	w8, #1, 640 <ctf_type_iter_all+0x38>
     710:	ldr	x8, [x20, #440]
     714:	ldr	x9, [x20, #408]
     718:	ldr	w8, [x8, x22, lsl #2]
     71c:	add	x8, x9, x8
     720:	ldr	x9, [x20]
     724:	ldr	w0, [x8, #4]
     728:	ldr	x9, [x9, #8]
     72c:	blr	x9
     730:	cmp	w0, #0x0
     734:	cset	w1, ne  // ne = any
     738:	mov	x0, x22
     73c:	mov	x2, x19
     740:	blr	x21
     744:	cmp	w0, #0x0
     748:	mov	w8, w0
     74c:	cset	w0, ne  // ne = any
     750:	cbz	w8, 6fc <ctf_type_iter_all+0xf4>
     754:	b	75c <ctf_type_iter_all+0x154>
     758:	mov	w0, wzr
     75c:	ldp	x20, x19, [sp, #48]
     760:	ldp	x22, x21, [sp, #32]
     764:	ldp	x24, x23, [sp, #16]
     768:	ldp	x29, x30, [sp], #64
     76c:	ret

0000000000000770 <ctf_variable_iter>:
     770:	stp	x29, x30, [sp, #-64]!
     774:	stp	x22, x21, [sp, #32]
     778:	stp	x20, x19, [sp, #48]
     77c:	ldr	w8, [x0, #552]
     780:	mov	x19, x2
     784:	mov	x21, x0
     788:	mov	x20, x1
     78c:	str	x23, [sp, #16]
     790:	mov	x29, sp
     794:	tbz	w8, #0, 7a0 <ctf_variable_iter+0x30>
     798:	ldr	x9, [x21, #512]
     79c:	cbz	x9, 81c <ctf_variable_iter+0xac>
     7a0:	tbnz	w8, #1, 7f4 <ctf_variable_iter+0x84>
     7a4:	ldr	x8, [x21, #472]
     7a8:	cbz	x8, 814 <ctf_variable_iter+0xa4>
     7ac:	mov	x22, xzr
     7b0:	mov	x23, xzr
     7b4:	ldr	x8, [x21, #464]
     7b8:	mov	x0, x21
     7bc:	ldr	w1, [x8, x22]
     7c0:	bl	0 <ctf_strptr>
     7c4:	ldr	x8, [x21, #464]
     7c8:	mov	x2, x19
     7cc:	add	x8, x8, x22
     7d0:	ldr	w1, [x8, #4]
     7d4:	blr	x20
     7d8:	cbnz	w0, 820 <ctf_variable_iter+0xb0>
     7dc:	ldr	x8, [x21, #472]
     7e0:	add	x23, x23, #0x1
     7e4:	add	x22, x22, #0x8
     7e8:	cmp	x23, x8
     7ec:	b.cc	7b4 <ctf_variable_iter+0x44>  // b.lo, b.ul, b.last
     7f0:	b	814 <ctf_variable_iter+0xa4>
     7f4:	ldr	x21, [x21, #608]
     7f8:	cbz	x21, 814 <ctf_variable_iter+0xa4>
     7fc:	ldp	x0, x1, [x21, #16]
     800:	mov	x2, x19
     804:	blr	x20
     808:	cbnz	w0, 820 <ctf_variable_iter+0xb0>
     80c:	ldr	x21, [x21, #8]
     810:	cbnz	x21, 7fc <ctf_variable_iter+0x8c>
     814:	mov	w0, wzr
     818:	b	820 <ctf_variable_iter+0xb0>
     81c:	mov	w0, #0x3f3                 	// #1011
     820:	ldp	x20, x19, [sp, #48]
     824:	ldp	x22, x21, [sp, #32]
     828:	ldr	x23, [sp, #16]
     82c:	ldp	x29, x30, [sp], #64
     830:	ret

0000000000000834 <ctf_type_reference>:
     834:	sub	sp, sp, #0x30
     838:	stp	x20, x19, [sp, #32]
     83c:	mov	x20, x0
     840:	str	x0, [sp, #8]
     844:	add	x0, sp, #0x8
     848:	stp	x29, x30, [sp, #16]
     84c:	add	x29, sp, #0x10
     850:	bl	0 <ctf_lookup_by_id>
     854:	cbz	x0, 890 <ctf_type_reference+0x5c>
     858:	ldr	x8, [sp, #8]
     85c:	mov	x19, x0
     860:	ldr	w0, [x0, #4]
     864:	ldr	x8, [x8]
     868:	ldr	x8, [x8]
     86c:	blr	x8
     870:	sub	w8, w0, #0xa
     874:	cmp	w8, #0x4
     878:	b.cs	8a4 <ctf_type_reference+0x70>  // b.hs, b.nlast
     87c:	ldr	w0, [x19, #8]
     880:	ldp	x20, x19, [sp, #32]
     884:	ldp	x29, x30, [sp, #16]
     888:	add	sp, sp, #0x30
     88c:	ret
     890:	mov	x0, #0xffffffffffffffff    	// #-1
     894:	ldp	x20, x19, [sp, #32]
     898:	ldp	x29, x30, [sp, #16]
     89c:	add	sp, sp, #0x30
     8a0:	ret
     8a4:	cmp	w0, #0xe
     8a8:	b.eq	8d0 <ctf_type_reference+0x9c>  // b.none
     8ac:	cmp	w0, #0x3
     8b0:	b.eq	87c <ctf_type_reference+0x48>  // b.none
     8b4:	mov	w1, #0x400                 	// #1024
     8b8:	mov	x0, x20
     8bc:	bl	0 <ctf_set_errno>
     8c0:	ldp	x20, x19, [sp, #32]
     8c4:	ldp	x29, x30, [sp, #16]
     8c8:	add	sp, sp, #0x30
     8cc:	ret
     8d0:	ldr	x0, [sp, #8]
     8d4:	mov	x3, sp
     8d8:	mov	x1, x19
     8dc:	mov	x2, xzr
     8e0:	ldr	x8, [x0]
     8e4:	ldr	x8, [x8, #24]
     8e8:	blr	x8
     8ec:	ldr	x8, [sp]
     8f0:	ldr	w0, [x8, x19]
     8f4:	ldp	x20, x19, [sp, #32]
     8f8:	ldp	x29, x30, [sp, #16]
     8fc:	add	sp, sp, #0x30
     900:	ret

0000000000000904 <ctf_lookup_by_rawname>:
     904:	stp	x29, x30, [sp, #-32]!
     908:	stp	x20, x19, [sp, #16]
     90c:	mov	x29, sp
     910:	mov	x19, x2
     914:	mov	x20, x0
     918:	bl	0 <ctf_name_table>
     91c:	ldrb	w8, [x20, #552]
     920:	tbnz	w8, #1, 93c <ctf_lookup_by_rawname+0x38>
     924:	ldr	x0, [x0]
     928:	mov	x1, x20
     92c:	mov	x2, x19
     930:	ldp	x20, x19, [sp, #16]
     934:	ldp	x29, x30, [sp], #32
     938:	b	0 <ctf_hash_lookup_type>
     93c:	ldr	x0, [x0, #8]
     940:	mov	x1, x19
     944:	ldp	x20, x19, [sp, #16]
     948:	ldp	x29, x30, [sp], #32
     94c:	b	0 <ctf_dynhash_lookup>

0000000000000950 <ctf_lookup_by_rawhash>:
     950:	ldrb	w9, [x0, #552]
     954:	tbnz	w9, #1, 968 <ctf_lookup_by_rawhash+0x18>
     958:	mov	x8, x0
     95c:	ldr	x0, [x1]
     960:	mov	x1, x8
     964:	b	0 <ctf_hash_lookup_type>
     968:	ldr	x0, [x1, #8]
     96c:	mov	x1, x2
     970:	b	0 <ctf_dynhash_lookup>

0000000000000974 <ctf_type_aname>:
     974:	sub	sp, sp, #0xe0
     978:	stp	x20, x19, [sp, #208]
     97c:	mov	x20, x1
     980:	mov	x19, x0
     984:	stp	x29, x30, [sp, #128]
     988:	stp	x28, x27, [sp, #144]
     98c:	stp	x26, x25, [sp, #160]
     990:	stp	x24, x23, [sp, #176]
     994:	stp	x22, x21, [sp, #192]
     998:	add	x29, sp, #0x80
     99c:	cbnz	x0, 9b0 <ctf_type_aname+0x3c>
     9a0:	cmn	x20, #0x1
     9a4:	b.ne	9b0 <ctf_type_aname+0x3c>  // b.any
     9a8:	mov	x19, xzr
     9ac:	b	bf8 <ctf_type_aname+0x284>
     9b0:	add	x0, sp, #0x18
     9b4:	add	x25, sp, #0x18
     9b8:	bl	0 <ctf_decl_init>
     9bc:	add	x0, sp, #0x18
     9c0:	mov	x1, x19
     9c4:	mov	x2, x20
     9c8:	bl	0 <ctf_decl_push>
     9cc:	ldr	w8, [sp, #120]
     9d0:	cbz	w8, 9f0 <ctf_type_aname+0x7c>
     9d4:	add	x0, sp, #0x18
     9d8:	bl	0 <ctf_decl_fini>
     9dc:	ldr	w1, [sp, #120]
     9e0:	mov	x0, x19
     9e4:	bl	0 <ctf_set_errno>
     9e8:	mov	x19, xzr
     9ec:	b	bf8 <ctf_type_aname+0x284>
     9f0:	ldp	w8, w9, [sp, #92]
     9f4:	mov	w10, #0xffffffff            	// #-1
     9f8:	mov	w11, #0x2                   	// #2
     9fc:	adrp	x21, 0 <ctf_type_isparent>
     a00:	cmp	w8, #0x1
     a04:	csinc	x10, x10, xzr, le
     a08:	cmp	w9, #0x2
     a0c:	csel	x9, x11, x10, gt
     a10:	adrp	x22, 0 <ctf_type_isparent>
     a14:	adrp	x24, 0 <ctf_type_isparent>
     a18:	adrp	x23, 0 <ctf_type_isparent>
     a1c:	adrp	x27, 0 <ctf_type_isparent>
     a20:	str	x9, [sp, #8]
     a24:	csinv	w9, w11, wzr, gt
     a28:	cmp	w8, #0x1
     a2c:	mov	x20, xzr
     a30:	mov	w28, #0x3                   	// #3
     a34:	add	x21, x21, #0x0
     a38:	add	x22, x22, #0x0
     a3c:	add	x24, x24, #0x0
     a40:	add	x23, x23, #0x0
     a44:	add	x27, x27, #0x0
     a48:	csinc	w26, w9, wzr, le
     a4c:	b	a60 <ctf_type_aname+0xec>
     a50:	add	x20, x20, #0x1
     a54:	cmp	x20, #0x4
     a58:	add	x25, sp, #0x18
     a5c:	b.eq	bd0 <ctf_type_aname+0x25c>  // b.none
     a60:	add	x8, x25, x20, lsl #4
     a64:	ldr	x25, [x8, #8]
     a68:	cbnz	x25, aa8 <ctf_type_aname+0x134>
     a6c:	ldr	x8, [sp, #8]
     a70:	cmp	x8, x20
     a74:	b.ne	a50 <ctf_type_aname+0xdc>  // b.any
     a78:	adrp	x1, 0 <ctf_type_isparent>
     a7c:	add	x0, sp, #0x18
     a80:	add	x1, x1, #0x0
     a84:	bl	0 <ctf_decl_sprintf>
     a88:	b	a50 <ctf_type_aname+0xdc>
     a8c:	adrp	x1, 0 <ctf_type_isparent>
     a90:	add	x0, sp, #0x18
     a94:	add	x1, x1, #0x0
     a98:	bl	0 <ctf_decl_sprintf>
     a9c:	ldr	w28, [x25, #24]
     aa0:	ldr	x25, [x25, #8]
     aa4:	cbz	x25, a6c <ctf_type_aname+0xf8>
     aa8:	str	x19, [sp, #16]
     aac:	ldr	x1, [x25, #16]
     ab0:	add	x0, sp, #0x10
     ab4:	bl	0 <ctf_lookup_by_id>
     ab8:	ldr	x8, [sp, #16]
     abc:	ldr	w1, [x0]
     ac0:	mov	x0, x8
     ac4:	bl	0 <ctf_strptr>
     ac8:	sub	w8, w28, #0x3
     acc:	cmp	w8, #0x2
     ad0:	mov	x28, x0
     ad4:	b.cs	af4 <ctf_type_aname+0x180>  // b.hs, b.nlast
     ad8:	cmp	x20, w26, uxtw
     adc:	b.eq	b08 <ctf_type_aname+0x194>  // b.none
     ae0:	ldr	w8, [x25, #24]
     ae4:	sub	w8, w8, #0x1
     ae8:	cmp	w8, #0xc
     aec:	b.ls	b28 <ctf_type_aname+0x1b4>  // b.plast
     af0:	b	a9c <ctf_type_aname+0x128>
     af4:	add	x0, sp, #0x18
     af8:	mov	x1, x21
     afc:	bl	0 <ctf_decl_sprintf>
     b00:	cmp	x20, w26, uxtw
     b04:	b.ne	ae0 <ctf_type_aname+0x16c>  // b.any
     b08:	add	x0, sp, #0x18
     b0c:	mov	x1, x22
     b10:	bl	0 <ctf_decl_sprintf>
     b14:	mov	w26, #0xffffffff            	// #-1
     b18:	ldr	w8, [x25, #24]
     b1c:	sub	w8, w8, #0x1
     b20:	cmp	w8, #0xc
     b24:	b.hi	a9c <ctf_type_aname+0x128>  // b.pmore
     b28:	adr	x9, a8c <ctf_type_aname+0x118>
     b2c:	ldrb	w10, [x24, x8]
     b30:	add	x9, x9, x10, lsl #2
     b34:	br	x9
     b38:	add	x0, sp, #0x18
     b3c:	mov	x1, x23
     b40:	b	ba4 <ctf_type_aname+0x230>
     b44:	add	x0, sp, #0x18
     b48:	mov	x1, x27
     b4c:	b	ba4 <ctf_type_aname+0x230>
     b50:	adrp	x1, 0 <ctf_type_isparent>
     b54:	add	x0, sp, #0x18
     b58:	add	x1, x1, #0x0
     b5c:	b	a98 <ctf_type_aname+0x124>
     b60:	ldr	w2, [x25, #28]
     b64:	adrp	x1, 0 <ctf_type_isparent>
     b68:	add	x0, sp, #0x18
     b6c:	add	x1, x1, #0x0
     b70:	bl	0 <ctf_decl_sprintf>
     b74:	b	a9c <ctf_type_aname+0x128>
     b78:	adrp	x1, 0 <ctf_type_isparent>
     b7c:	add	x0, sp, #0x18
     b80:	add	x1, x1, #0x0
     b84:	b	a98 <ctf_type_aname+0x124>
     b88:	adrp	x1, 0 <ctf_type_isparent>
     b8c:	add	x0, sp, #0x18
     b90:	add	x1, x1, #0x0
     b94:	b	ba4 <ctf_type_aname+0x230>
     b98:	adrp	x1, 0 <ctf_type_isparent>
     b9c:	add	x0, sp, #0x18
     ba0:	add	x1, x1, #0x0
     ba4:	mov	x2, x28
     ba8:	bl	0 <ctf_decl_sprintf>
     bac:	b	a9c <ctf_type_aname+0x128>
     bb0:	adrp	x1, 0 <ctf_type_isparent>
     bb4:	add	x0, sp, #0x18
     bb8:	add	x1, x1, #0x0
     bbc:	b	a98 <ctf_type_aname+0x124>
     bc0:	adrp	x1, 0 <ctf_type_isparent>
     bc4:	add	x0, sp, #0x18
     bc8:	add	x1, x1, #0x0
     bcc:	b	a98 <ctf_type_aname+0x124>
     bd0:	ldr	w8, [sp, #124]
     bd4:	cbz	w8, be4 <ctf_type_aname+0x270>
     bd8:	mov	w1, #0xc                   	// #12
     bdc:	mov	x0, x19
     be0:	bl	0 <ctf_set_errno>
     be4:	add	x0, sp, #0x18
     be8:	bl	0 <ctf_decl_buf>
     bec:	mov	x19, x0
     bf0:	add	x0, sp, #0x18
     bf4:	bl	0 <ctf_decl_fini>
     bf8:	mov	x0, x19
     bfc:	ldp	x20, x19, [sp, #208]
     c00:	ldp	x22, x21, [sp, #192]
     c04:	ldp	x24, x23, [sp, #176]
     c08:	ldp	x26, x25, [sp, #160]
     c0c:	ldp	x28, x27, [sp, #144]
     c10:	ldp	x29, x30, [sp, #128]
     c14:	add	sp, sp, #0xe0
     c18:	ret

0000000000000c1c <ctf_type_lname>:
     c1c:	stp	x29, x30, [sp, #-64]!
     c20:	str	x23, [sp, #16]
     c24:	stp	x22, x21, [sp, #32]
     c28:	stp	x20, x19, [sp, #48]
     c2c:	mov	x29, sp
     c30:	mov	x21, x3
     c34:	mov	x22, x2
     c38:	mov	x19, x0
     c3c:	bl	974 <ctf_type_aname>
     c40:	cbz	x0, c88 <ctf_type_lname+0x6c>
     c44:	mov	x23, x0
     c48:	bl	0 <strlen>
     c4c:	adrp	x2, 0 <ctf_type_isparent>
     c50:	mov	x20, x0
     c54:	add	x2, x2, #0x0
     c58:	mov	x0, x22
     c5c:	mov	x1, x21
     c60:	mov	x3, x23
     c64:	bl	0 <snprintf>
     c68:	mov	x0, x23
     c6c:	bl	0 <free>
     c70:	cmp	x20, x21
     c74:	b.cc	c8c <ctf_type_lname+0x70>  // b.lo, b.ul, b.last
     c78:	mov	w1, #0x401                 	// #1025
     c7c:	mov	x0, x19
     c80:	bl	0 <ctf_set_errno>
     c84:	b	c8c <ctf_type_lname+0x70>
     c88:	mov	x20, #0xffffffffffffffff    	// #-1
     c8c:	mov	x0, x20
     c90:	ldp	x20, x19, [sp, #48]
     c94:	ldp	x22, x21, [sp, #32]
     c98:	ldr	x23, [sp, #16]
     c9c:	ldp	x29, x30, [sp], #64
     ca0:	ret

0000000000000ca4 <ctf_type_name>:
     ca4:	stp	x29, x30, [sp, #-64]!
     ca8:	str	x23, [sp, #16]
     cac:	stp	x22, x21, [sp, #32]
     cb0:	stp	x20, x19, [sp, #48]
     cb4:	mov	x29, sp
     cb8:	mov	x20, x3
     cbc:	mov	x19, x2
     cc0:	mov	x21, x0
     cc4:	bl	974 <ctf_type_aname>
     cc8:	cbz	x0, d1c <ctf_type_name+0x78>
     ccc:	mov	x23, x0
     cd0:	bl	0 <strlen>
     cd4:	adrp	x2, 0 <ctf_type_isparent>
     cd8:	mov	x22, x0
     cdc:	add	x2, x2, #0x0
     ce0:	mov	x0, x19
     ce4:	mov	x1, x20
     ce8:	mov	x3, x23
     cec:	bl	0 <snprintf>
     cf0:	mov	x0, x23
     cf4:	bl	0 <free>
     cf8:	cmp	x22, x20
     cfc:	b.cc	d0c <ctf_type_name+0x68>  // b.lo, b.ul, b.last
     d00:	mov	w1, #0x401                 	// #1025
     d04:	mov	x0, x21
     d08:	bl	0 <ctf_set_errno>
     d0c:	cmp	x22, x20
     d10:	mov	x8, #0xffffffffffffffff    	// #-1
     d14:	ccmp	x22, x8, #0x4, cc  // cc = lo, ul, last
     d18:	csel	x0, x19, xzr, gt
     d1c:	ldp	x20, x19, [sp, #48]
     d20:	ldp	x22, x21, [sp, #32]
     d24:	ldr	x23, [sp, #16]
     d28:	ldp	x29, x30, [sp], #64
     d2c:	ret

0000000000000d30 <ctf_type_aname_raw>:
     d30:	stp	x29, x30, [sp, #-32]!
     d34:	mov	x29, sp
     d38:	str	x0, [x29, #24]
     d3c:	add	x0, x29, #0x18
     d40:	str	x19, [sp, #16]
     d44:	bl	0 <ctf_lookup_by_id>
     d48:	cbz	x0, d70 <ctf_type_aname_raw+0x40>
     d4c:	mov	x19, x0
     d50:	ldr	x0, [x29, #24]
     d54:	ldr	w1, [x19]
     d58:	bl	0 <ctf_strraw>
     d5c:	cbz	x0, d70 <ctf_type_aname_raw+0x40>
     d60:	ldr	x0, [x29, #24]
     d64:	ldr	w1, [x19]
     d68:	bl	0 <ctf_strraw>
     d6c:	bl	0 <strdup>
     d70:	ldr	x19, [sp, #16]
     d74:	ldp	x29, x30, [sp], #32
     d78:	ret

0000000000000d7c <ctf_type_size>:
     d7c:	sub	sp, sp, #0x40
     d80:	stp	x29, x30, [sp, #16]
     d84:	str	x21, [sp, #32]
     d88:	stp	x20, x19, [sp, #48]
     d8c:	add	x29, sp, #0x10
     d90:	str	x0, [sp]
     d94:	bl	1a8 <ctf_type_resolve>
     d98:	cmn	x0, #0x1
     d9c:	b.eq	f08 <ctf_type_size+0x18c>  // b.none
     da0:	mov	x19, x0
     da4:	mov	x0, sp
     da8:	mov	x1, x19
     dac:	bl	0 <ctf_lookup_by_id>
     db0:	cbz	x0, f04 <ctf_type_size+0x188>
     db4:	ldr	x8, [sp]
     db8:	mov	x20, x0
     dbc:	ldr	w0, [x0, #4]
     dc0:	ldr	x8, [x8]
     dc4:	ldr	x8, [x8]
     dc8:	blr	x8
     dcc:	sub	w8, w0, #0x3
     dd0:	cmp	w8, #0x5
     dd4:	b.hi	e7c <ctf_type_size+0x100>  // b.pmore
     dd8:	adrp	x9, 0 <ctf_type_isparent>
     ddc:	add	x9, x9, #0x0
     de0:	adr	x10, df4 <ctf_type_size+0x78>
     de4:	ldrb	w11, [x9, x8]
     de8:	add	x10, x10, x11, lsl #2
     dec:	mov	x0, xzr
     df0:	br	x10
     df4:	ldr	x8, [sp]
     df8:	ldr	x8, [x8, #488]
     dfc:	ldr	x0, [x8, #16]
     e00:	b	f08 <ctf_type_size+0x18c>
     e04:	ldr	x0, [sp]
     e08:	mov	x1, x20
     e0c:	mov	x2, xzr
     e10:	mov	x3, xzr
     e14:	ldr	x8, [x0]
     e18:	ldr	x8, [x8, #24]
     e1c:	blr	x8
     e20:	cmp	x0, #0x0
     e24:	b.gt	f08 <ctf_type_size+0x18c>
     e28:	ldr	x21, [sp]
     e2c:	add	x0, x29, #0x18
     e30:	mov	x1, x19
     e34:	str	x21, [x29, #24]
     e38:	bl	0 <ctf_lookup_by_id>
     e3c:	cbz	x0, f04 <ctf_type_size+0x188>
     e40:	ldr	x8, [x29, #24]
     e44:	mov	x20, x0
     e48:	ldr	w0, [x0, #4]
     e4c:	ldr	x8, [x8]
     e50:	ldr	x8, [x8]
     e54:	blr	x8
     e58:	cmp	w0, #0x4
     e5c:	b.ne	eac <ctf_type_size+0x130>  // b.any
     e60:	mov	x0, x21
     e64:	mov	x1, x19
     e68:	bl	0 <ctf_dynamic_type>
     e6c:	cbz	x0, ec4 <ctf_type_size+0x148>
     e70:	add	x8, x0, #0x40
     e74:	ldr	x1, [x0, #48]
     e78:	b	eec <ctf_type_size+0x170>
     e7c:	ldr	x0, [sp]
     e80:	mov	x1, x20
     e84:	mov	x2, xzr
     e88:	mov	x3, xzr
     e8c:	ldr	x8, [x0]
     e90:	ldr	x8, [x8, #24]
     e94:	blr	x8
     e98:	b	f08 <ctf_type_size+0x18c>
     e9c:	ldr	x8, [sp]
     ea0:	ldr	x8, [x8, #488]
     ea4:	ldr	x0, [x8, #40]
     ea8:	b	f08 <ctf_type_size+0x18c>
     eac:	mov	w1, #0x3ff                 	// #1023
     eb0:	mov	x0, x21
     eb4:	bl	0 <ctf_set_errno>
     eb8:	tbnz	w0, #31, f04 <ctf_type_size+0x188>
     ebc:	mov	x19, xzr
     ec0:	b	ef0 <ctf_type_size+0x174>
     ec4:	ldr	x0, [x29, #24]
     ec8:	add	x3, sp, #0x8
     ecc:	mov	x1, x20
     ed0:	mov	x2, xzr
     ed4:	ldr	x8, [x0]
     ed8:	ldr	x8, [x8, #24]
     edc:	blr	x8
     ee0:	ldr	x8, [sp, #8]
     ee4:	add	x8, x8, x20
     ee8:	ldr	w1, [x8], #8
     eec:	ldr	w19, [x8]
     ef0:	ldr	x0, [sp]
     ef4:	bl	d7c <ctf_type_size>
     ef8:	tbnz	x0, #63, f04 <ctf_type_size+0x188>
     efc:	mul	x0, x0, x19
     f00:	b	f08 <ctf_type_size+0x18c>
     f04:	mov	x0, #0xffffffffffffffff    	// #-1
     f08:	ldp	x20, x19, [sp, #48]
     f0c:	ldr	x21, [sp, #32]
     f10:	ldp	x29, x30, [sp, #16]
     f14:	add	sp, sp, #0x40
     f18:	ret

0000000000000f1c <ctf_array_info>:
     f1c:	sub	sp, sp, #0x40
     f20:	stp	x22, x21, [sp, #32]
     f24:	mov	x21, x0
     f28:	str	x0, [sp, #8]
     f2c:	add	x0, sp, #0x8
     f30:	stp	x29, x30, [sp, #16]
     f34:	stp	x20, x19, [sp, #48]
     f38:	add	x29, sp, #0x10
     f3c:	mov	x19, x2
     f40:	mov	x22, x1
     f44:	bl	0 <ctf_lookup_by_id>
     f48:	cbz	x0, f98 <ctf_array_info+0x7c>
     f4c:	ldr	x8, [sp, #8]
     f50:	mov	x20, x0
     f54:	ldr	w0, [x0, #4]
     f58:	ldr	x8, [x8]
     f5c:	ldr	x8, [x8]
     f60:	blr	x8
     f64:	cmp	w0, #0x4
     f68:	b.ne	fa0 <ctf_array_info+0x84>  // b.any
     f6c:	mov	x0, x21
     f70:	mov	x1, x22
     f74:	bl	0 <ctf_dynamic_type>
     f78:	cbz	x0, fb0 <ctf_array_info+0x94>
     f7c:	mov	x8, x0
     f80:	ldr	x9, [x8, #64]
     f84:	ldr	q0, [x8, #48]
     f88:	mov	w0, wzr
     f8c:	str	x9, [x19, #16]
     f90:	str	q0, [x19]
     f94:	b	fec <ctf_array_info+0xd0>
     f98:	mov	w0, #0xffffffff            	// #-1
     f9c:	b	fec <ctf_array_info+0xd0>
     fa0:	mov	w1, #0x3ff                 	// #1023
     fa4:	mov	x0, x21
     fa8:	bl	0 <ctf_set_errno>
     fac:	b	fec <ctf_array_info+0xd0>
     fb0:	ldr	x0, [sp, #8]
     fb4:	mov	x3, sp
     fb8:	mov	x1, x20
     fbc:	mov	x2, xzr
     fc0:	ldr	x8, [x0]
     fc4:	ldr	x8, [x8, #24]
     fc8:	blr	x8
     fcc:	ldr	x8, [sp]
     fd0:	mov	w0, wzr
     fd4:	add	x8, x8, x20
     fd8:	ldr	d0, [x8]
     fdc:	uxtl	v0.2d, v0.2s
     fe0:	str	q0, [x19]
     fe4:	ldr	w8, [x8, #8]
     fe8:	str	w8, [x19, #16]
     fec:	ldp	x20, x19, [sp, #48]
     ff0:	ldp	x22, x21, [sp, #32]
     ff4:	ldp	x29, x30, [sp, #16]
     ff8:	add	sp, sp, #0x40
     ffc:	ret

0000000000001000 <ctf_type_align>:
    1000:	sub	sp, sp, #0x50
    1004:	stp	x29, x30, [sp, #32]
    1008:	stp	x22, x21, [sp, #48]
    100c:	stp	x20, x19, [sp, #64]
    1010:	add	x29, sp, #0x20
    1014:	mov	x22, x0
    1018:	str	x0, [sp, #8]
    101c:	bl	1a8 <ctf_type_resolve>
    1020:	mov	x19, x0
    1024:	cmn	x0, #0x1
    1028:	b.eq	1268 <ctf_type_align+0x268>  // b.none
    102c:	add	x0, sp, #0x8
    1030:	mov	x1, x19
    1034:	bl	0 <ctf_lookup_by_id>
    1038:	cbz	x0, 1230 <ctf_type_align+0x230>
    103c:	ldr	x8, [sp, #8]
    1040:	mov	x20, x0
    1044:	ldr	w0, [x0, #4]
    1048:	ldr	x8, [x8]
    104c:	ldr	x8, [x8]
    1050:	blr	x8
    1054:	sub	w8, w0, #0x3
    1058:	cmp	w8, #0x5
    105c:	b.hi	10b8 <ctf_type_align+0xb8>  // b.pmore
    1060:	adrp	x9, 0 <ctf_type_isparent>
    1064:	add	x9, x9, #0x0
    1068:	adr	x10, 1078 <ctf_type_align+0x78>
    106c:	ldrb	w11, [x9, x8]
    1070:	add	x10, x10, x11, lsl #2
    1074:	br	x10
    1078:	ldr	x8, [sp, #8]
    107c:	ldr	x8, [x8, #488]
    1080:	ldr	x19, [x8, #16]
    1084:	b	1268 <ctf_type_align+0x268>
    1088:	mov	w21, w0
    108c:	mov	x0, x22
    1090:	mov	x1, x19
    1094:	bl	0 <ctf_dynamic_type>
    1098:	cbz	x0, 1138 <ctf_type_align+0x138>
    109c:	ldr	x20, [x0, #56]
    10a0:	cbz	x20, 11c4 <ctf_type_align+0x1c4>
    10a4:	cmp	w21, #0x6
    10a8:	b.ne	11cc <ctf_type_align+0x1cc>  // b.any
    10ac:	ldr	x0, [sp, #8]
    10b0:	ldr	x1, [x20, #24]
    10b4:	b	1260 <ctf_type_align+0x260>
    10b8:	ldr	x0, [sp, #8]
    10bc:	mov	x1, x20
    10c0:	mov	x2, xzr
    10c4:	mov	x3, xzr
    10c8:	ldr	x8, [x0]
    10cc:	ldr	x8, [x8, #24]
    10d0:	blr	x8
    10d4:	b	1264 <ctf_type_align+0x264>
    10d8:	ldr	x21, [sp, #8]
    10dc:	sub	x0, x29, #0x8
    10e0:	mov	x1, x19
    10e4:	stur	x21, [x29, #-8]
    10e8:	bl	0 <ctf_lookup_by_id>
    10ec:	cbz	x0, 1230 <ctf_type_align+0x230>
    10f0:	ldur	x8, [x29, #-8]
    10f4:	mov	x20, x0
    10f8:	ldr	w0, [x0, #4]
    10fc:	ldr	x8, [x8]
    1100:	ldr	x8, [x8]
    1104:	blr	x8
    1108:	cmp	w0, #0x4
    110c:	b.ne	1220 <ctf_type_align+0x220>  // b.any
    1110:	mov	x0, x21
    1114:	mov	x1, x19
    1118:	bl	0 <ctf_dynamic_type>
    111c:	cbz	x0, 1238 <ctf_type_align+0x238>
    1120:	ldr	x1, [x0, #48]
    1124:	b	125c <ctf_type_align+0x25c>
    1128:	ldr	x8, [sp, #8]
    112c:	ldr	x8, [x8, #488]
    1130:	ldr	x19, [x8, #40]
    1134:	b	1268 <ctf_type_align+0x268>
    1138:	ldr	x8, [sp, #8]
    113c:	ldr	w0, [x20, #4]
    1140:	ldr	x8, [x8]
    1144:	ldr	x8, [x8, #16]
    1148:	blr	x8
    114c:	ldr	x8, [sp, #8]
    1150:	mov	w19, w0
    1154:	sub	x2, x29, #0x8
    1158:	add	x3, sp, #0x10
    115c:	ldr	x9, [x8]
    1160:	mov	x0, x8
    1164:	mov	x1, x20
    1168:	ldr	x9, [x9, #24]
    116c:	blr	x9
    1170:	ldur	x9, [x29, #-8]
    1174:	ldr	x8, [sp, #16]
    1178:	cmp	w19, #0x0
    117c:	cset	w10, ne  // ne = any
    1180:	cmp	w21, #0x6
    1184:	csel	w21, w10, w19, eq  // eq = none
    1188:	mov	w10, #0x1fffffff            	// #536870911
    118c:	cmp	x9, x10
    1190:	b.gt	11f0 <ctf_type_align+0x1f0>
    1194:	mov	x19, xzr
    1198:	cbz	w21, 1268 <ctf_type_align+0x268>
    119c:	add	x8, x8, x20
    11a0:	add	x20, x8, #0x8
    11a4:	ldr	x0, [sp, #8]
    11a8:	ldr	w1, [x20], #12
    11ac:	bl	1000 <ctf_type_align>
    11b0:	cmp	x19, x0
    11b4:	csel	x19, x19, x0, hi  // hi = pmore
    11b8:	subs	w21, w21, #0x1
    11bc:	b.ne	11a4 <ctf_type_align+0x1a4>  // b.any
    11c0:	b	1268 <ctf_type_align+0x268>
    11c4:	mov	x19, xzr
    11c8:	b	1268 <ctf_type_align+0x268>
    11cc:	mov	x19, xzr
    11d0:	ldr	x0, [sp, #8]
    11d4:	ldr	x1, [x20, #24]
    11d8:	bl	1000 <ctf_type_align>
    11dc:	ldr	x20, [x20, #8]
    11e0:	cmp	x19, x0
    11e4:	csel	x19, x19, x0, hi  // hi = pmore
    11e8:	cbnz	x20, 11d0 <ctf_type_align+0x1d0>
    11ec:	b	1268 <ctf_type_align+0x268>
    11f0:	mov	x19, xzr
    11f4:	cbz	w21, 1268 <ctf_type_align+0x268>
    11f8:	add	x8, x8, x20
    11fc:	add	x20, x8, #0x8
    1200:	ldr	x0, [sp, #8]
    1204:	ldr	w1, [x20], #16
    1208:	bl	1000 <ctf_type_align>
    120c:	cmp	x19, x0
    1210:	csel	x19, x19, x0, hi  // hi = pmore
    1214:	subs	w21, w21, #0x1
    1218:	b.ne	1200 <ctf_type_align+0x200>  // b.any
    121c:	b	1268 <ctf_type_align+0x268>
    1220:	mov	w1, #0x3ff                 	// #1023
    1224:	mov	x0, x21
    1228:	bl	0 <ctf_set_errno>
    122c:	tbz	w0, #31, 125c <ctf_type_align+0x25c>
    1230:	mov	x19, #0xffffffffffffffff    	// #-1
    1234:	b	1268 <ctf_type_align+0x268>
    1238:	ldur	x0, [x29, #-8]
    123c:	add	x3, sp, #0x10
    1240:	mov	x1, x20
    1244:	mov	x2, xzr
    1248:	ldr	x8, [x0]
    124c:	ldr	x8, [x8, #24]
    1250:	blr	x8
    1254:	ldr	x8, [sp, #16]
    1258:	ldr	w1, [x8, x20]
    125c:	ldr	x0, [sp, #8]
    1260:	bl	1000 <ctf_type_align>
    1264:	mov	x19, x0
    1268:	mov	x0, x19
    126c:	ldp	x20, x19, [sp, #64]
    1270:	ldp	x22, x21, [sp, #48]
    1274:	ldp	x29, x30, [sp, #32]
    1278:	add	sp, sp, #0x50
    127c:	ret

0000000000001280 <ctf_type_kind_unsliced>:
    1280:	sub	sp, sp, #0x20
    1284:	str	x0, [sp, #8]
    1288:	add	x0, sp, #0x8
    128c:	stp	x29, x30, [sp, #16]
    1290:	add	x29, sp, #0x10
    1294:	bl	0 <ctf_lookup_by_id>
    1298:	cbz	x0, 12bc <ctf_type_kind_unsliced+0x3c>
    129c:	ldr	x8, [sp, #8]
    12a0:	ldr	w0, [x0, #4]
    12a4:	ldr	x8, [x8]
    12a8:	ldr	x8, [x8]
    12ac:	blr	x8
    12b0:	ldp	x29, x30, [sp, #16]
    12b4:	add	sp, sp, #0x20
    12b8:	ret
    12bc:	mov	w0, #0xffffffff            	// #-1
    12c0:	ldp	x29, x30, [sp, #16]
    12c4:	add	sp, sp, #0x20
    12c8:	ret

00000000000012cc <ctf_type_kind>:
    12cc:	sub	sp, sp, #0x30
    12d0:	stp	x20, x19, [sp, #32]
    12d4:	mov	x19, x0
    12d8:	str	x0, [sp, #8]
    12dc:	add	x0, sp, #0x8
    12e0:	stp	x29, x30, [sp, #16]
    12e4:	add	x29, sp, #0x10
    12e8:	mov	x20, x1
    12ec:	bl	0 <ctf_lookup_by_id>
    12f0:	cbz	x0, 1388 <ctf_type_kind+0xbc>
    12f4:	ldr	x8, [sp, #8]
    12f8:	ldr	w0, [x0, #4]
    12fc:	ldr	x8, [x8]
    1300:	ldr	x8, [x8]
    1304:	blr	x8
    1308:	tbnz	w0, #31, 1388 <ctf_type_kind+0xbc>
    130c:	cmp	w0, #0xe
    1310:	b.ne	1378 <ctf_type_kind+0xac>  // b.any
    1314:	add	x0, sp, #0x8
    1318:	mov	x1, x20
    131c:	str	x19, [sp, #8]
    1320:	bl	0 <ctf_lookup_by_id>
    1324:	cbz	x0, 1388 <ctf_type_kind+0xbc>
    1328:	ldr	x8, [sp, #8]
    132c:	mov	x20, x0
    1330:	ldr	w0, [x0, #4]
    1334:	ldr	x8, [x8]
    1338:	ldr	x8, [x8]
    133c:	blr	x8
    1340:	sub	w8, w0, #0xa
    1344:	cmp	w8, #0x4
    1348:	b.cs	139c <ctf_type_kind+0xd0>  // b.hs, b.nlast
    134c:	ldr	w8, [x20, #8]
    1350:	mov	w1, w8
    1354:	add	x0, sp, #0x8
    1358:	str	x19, [sp, #8]
    135c:	bl	0 <ctf_lookup_by_id>
    1360:	cbz	x0, 1388 <ctf_type_kind+0xbc>
    1364:	ldr	x8, [sp, #8]
    1368:	ldr	w0, [x0, #4]
    136c:	ldr	x8, [x8]
    1370:	ldr	x8, [x8]
    1374:	blr	x8
    1378:	ldp	x20, x19, [sp, #32]
    137c:	ldp	x29, x30, [sp, #16]
    1380:	add	sp, sp, #0x30
    1384:	ret
    1388:	mov	w0, #0xffffffff            	// #-1
    138c:	ldp	x20, x19, [sp, #32]
    1390:	ldp	x29, x30, [sp, #16]
    1394:	add	sp, sp, #0x30
    1398:	ret
    139c:	cmp	w0, #0xe
    13a0:	b.eq	13c8 <ctf_type_kind+0xfc>  // b.none
    13a4:	cmp	w0, #0x3
    13a8:	b.eq	134c <ctf_type_kind+0x80>  // b.none
    13ac:	mov	w1, #0x400                 	// #1024
    13b0:	mov	x0, x19
    13b4:	bl	0 <ctf_set_errno>
    13b8:	mov	x1, x0
    13bc:	cmn	x0, #0x1
    13c0:	b.ne	1354 <ctf_type_kind+0x88>  // b.any
    13c4:	b	1378 <ctf_type_kind+0xac>
    13c8:	ldr	x0, [sp, #8]
    13cc:	mov	x3, sp
    13d0:	mov	x1, x20
    13d4:	mov	x2, xzr
    13d8:	ldr	x8, [x0]
    13dc:	ldr	x8, [x8, #24]
    13e0:	blr	x8
    13e4:	ldr	x8, [sp]
    13e8:	ldr	w8, [x8, x20]
    13ec:	b	1350 <ctf_type_kind+0x84>

00000000000013f0 <ctf_type_pointer>:
    13f0:	sub	sp, sp, #0x30
    13f4:	stp	x20, x19, [sp, #32]
    13f8:	mov	x19, x0
    13fc:	str	x0, [sp, #8]
    1400:	add	x0, sp, #0x8
    1404:	stp	x29, x30, [sp, #16]
    1408:	add	x29, sp, #0x10
    140c:	mov	x20, x1
    1410:	bl	0 <ctf_lookup_by_id>
    1414:	cbz	x0, 1454 <ctf_type_pointer+0x64>
    1418:	ldr	x0, [sp, #8]
    141c:	ldr	w9, [x0, #544]
    1420:	ldr	x8, [x0, #448]
    1424:	and	x10, x9, x20
    1428:	ldr	w8, [x8, x10, lsl #2]
    142c:	cbz	w8, 1468 <ctf_type_pointer+0x78>
    1430:	ldrb	w10, [x0, #552]
    1434:	add	w9, w9, #0x1
    1438:	sbfx	w10, w10, #0, #1
    143c:	and	w9, w10, w9
    1440:	orr	x0, x9, x8
    1444:	ldp	x20, x19, [sp, #32]
    1448:	ldp	x29, x30, [sp, #16]
    144c:	add	sp, sp, #0x30
    1450:	ret
    1454:	mov	x0, #0xffffffffffffffff    	// #-1
    1458:	ldp	x20, x19, [sp, #32]
    145c:	ldp	x29, x30, [sp, #16]
    1460:	add	sp, sp, #0x30
    1464:	ret
    1468:	mov	x1, x20
    146c:	bl	1a8 <ctf_type_resolve>
    1470:	cmn	x0, #0x1
    1474:	b.eq	14c8 <ctf_type_pointer+0xd8>  // b.none
    1478:	mov	x20, x0
    147c:	add	x0, sp, #0x8
    1480:	mov	x1, x20
    1484:	bl	0 <ctf_lookup_by_id>
    1488:	cbz	x0, 14c8 <ctf_type_pointer+0xd8>
    148c:	ldr	x8, [sp, #8]
    1490:	ldr	w10, [x8, #544]
    1494:	ldr	x9, [x8, #448]
    1498:	and	x11, x20, x10
    149c:	ldr	w9, [x9, x11, lsl #2]
    14a0:	cbz	w9, 14c8 <ctf_type_pointer+0xd8>
    14a4:	ldrb	w8, [x8, #552]
    14a8:	add	w10, w10, #0x1
    14ac:	sbfx	w8, w8, #0, #1
    14b0:	and	w8, w8, w10
    14b4:	orr	x0, x8, x9
    14b8:	ldp	x20, x19, [sp, #32]
    14bc:	ldp	x29, x30, [sp, #16]
    14c0:	add	sp, sp, #0x30
    14c4:	ret
    14c8:	mov	w1, #0x402                 	// #1026
    14cc:	mov	x0, x19
    14d0:	bl	0 <ctf_set_errno>
    14d4:	ldp	x20, x19, [sp, #32]
    14d8:	ldp	x29, x30, [sp, #16]
    14dc:	add	sp, sp, #0x30
    14e0:	ret

00000000000014e4 <ctf_type_encoding>:
    14e4:	sub	sp, sp, #0x50
    14e8:	stp	x29, x30, [sp, #32]
    14ec:	add	x29, sp, #0x20
    14f0:	stp	x20, x19, [sp, #64]
    14f4:	mov	x20, x0
    14f8:	stur	x0, [x29, #-8]
    14fc:	sub	x0, x29, #0x8
    1500:	stp	x22, x21, [sp, #48]
    1504:	mov	x19, x2
    1508:	mov	x22, x1
    150c:	bl	0 <ctf_lookup_by_id>
    1510:	cbz	x0, 1564 <ctf_type_encoding+0x80>
    1514:	mov	x21, x0
    1518:	mov	x0, x20
    151c:	mov	x1, x22
    1520:	bl	0 <ctf_dynamic_type>
    1524:	ldur	x8, [x29, #-8]
    1528:	ldr	x9, [x8]
    152c:	cbz	x0, 156c <ctf_type_encoding+0x88>
    1530:	mov	x22, x0
    1534:	ldr	x8, [x9]
    1538:	ldr	w0, [x21, #4]
    153c:	blr	x8
    1540:	sub	w8, w0, #0x1
    1544:	cmp	w8, #0x2
    1548:	b.cs	15d4 <ctf_type_encoding+0xf0>  // b.hs, b.nlast
    154c:	ldr	w8, [x22, #56]
    1550:	ldr	x9, [x22, #48]
    1554:	mov	w0, wzr
    1558:	str	w8, [x19, #8]
    155c:	str	x9, [x19]
    1560:	b	164c <ctf_type_encoding+0x168>
    1564:	mov	w0, #0xffffffff            	// #-1
    1568:	b	164c <ctf_type_encoding+0x168>
    156c:	ldr	x9, [x9, #24]
    1570:	add	x3, sp, #0x10
    1574:	mov	x0, x8
    1578:	mov	x1, x21
    157c:	mov	x2, xzr
    1580:	blr	x9
    1584:	ldur	x8, [x29, #-8]
    1588:	ldr	w0, [x21, #4]
    158c:	ldr	x8, [x8]
    1590:	ldr	x8, [x8]
    1594:	blr	x8
    1598:	cmp	w0, #0xe
    159c:	b.eq	1614 <ctf_type_encoding+0x130>  // b.none
    15a0:	cmp	w0, #0x2
    15a4:	b.eq	15b0 <ctf_type_encoding+0xcc>  // b.none
    15a8:	cmp	w0, #0x1
    15ac:	b.ne	1604 <ctf_type_encoding+0x120>  // b.any
    15b0:	ldr	x8, [sp, #16]
    15b4:	mov	w0, wzr
    15b8:	ldr	w8, [x8, x21]
    15bc:	lsr	w9, w8, #24
    15c0:	ubfx	w10, w8, #16, #8
    15c4:	and	w8, w8, #0xffff
    15c8:	stp	w9, w10, [x19]
    15cc:	str	w8, [x19, #8]
    15d0:	b	164c <ctf_type_encoding+0x168>
    15d4:	cmp	w0, #0xe
    15d8:	b.ne	1604 <ctf_type_encoding+0x120>  // b.any
    15dc:	ldur	x0, [x29, #-8]
    15e0:	ldr	w1, [x22, #48]
    15e4:	mov	x2, sp
    15e8:	bl	14e4 <ctf_type_encoding>
    15ec:	ldr	w8, [sp]
    15f0:	mov	w0, wzr
    15f4:	str	w8, [x19]
    15f8:	ldrh	w8, [x22, #52]
    15fc:	ldrh	w9, [x22, #54]
    1600:	b	1640 <ctf_type_encoding+0x15c>
    1604:	mov	w1, #0x3fe                 	// #1022
    1608:	mov	x0, x20
    160c:	bl	0 <ctf_set_errno>
    1610:	b	164c <ctf_type_encoding+0x168>
    1614:	ldr	x8, [sp, #16]
    1618:	ldur	x0, [x29, #-8]
    161c:	mov	x2, sp
    1620:	add	x20, x8, x21
    1624:	ldr	w1, [x20]
    1628:	bl	14e4 <ctf_type_encoding>
    162c:	ldr	w8, [sp]
    1630:	mov	w0, wzr
    1634:	str	w8, [x19]
    1638:	ldrh	w8, [x20, #4]
    163c:	ldrh	w9, [x20, #6]
    1640:	fmov	s0, w8
    1644:	mov	v0.s[1], w9
    1648:	stur	d0, [x19, #4]
    164c:	ldp	x20, x19, [sp, #64]
    1650:	ldp	x22, x21, [sp, #48]
    1654:	ldp	x29, x30, [sp, #32]
    1658:	add	sp, sp, #0x50
    165c:	ret

0000000000001660 <ctf_type_cmp>:
    1660:	cmp	x1, x3
    1664:	mov	x8, x0
    1668:	cset	w9, hi  // hi = pmore
    166c:	csinv	w0, w9, wzr, cs  // cs = hs, nlast
    1670:	cmp	x8, x2
    1674:	b.eq	16d0 <ctf_type_cmp+0x70>  // b.none
    1678:	ldr	w9, [x8, #544]
    167c:	cmp	x9, x1
    1680:	b.cs	16a0 <ctf_type_cmp+0x40>  // b.hs, b.nlast
    1684:	ldr	w9, [x2, #544]
    1688:	cmp	x9, x3
    168c:	b.cs	16b8 <ctf_type_cmp+0x58>  // b.hs, b.nlast
    1690:	cmp	x8, x2
    1694:	b.cs	16cc <ctf_type_cmp+0x6c>  // b.hs, b.nlast
    1698:	mov	w0, #0xffffffff            	// #-1
    169c:	ret
    16a0:	ldr	x9, [x8, #512]
    16a4:	cmp	x9, #0x0
    16a8:	csel	x8, x8, x9, eq  // eq = none
    16ac:	ldr	w9, [x2, #544]
    16b0:	cmp	x9, x3
    16b4:	b.cc	1690 <ctf_type_cmp+0x30>  // b.lo, b.ul, b.last
    16b8:	ldr	x9, [x2, #512]
    16bc:	cmp	x9, #0x0
    16c0:	csel	x2, x2, x9, eq  // eq = none
    16c4:	cmp	x8, x2
    16c8:	b.cc	1698 <ctf_type_cmp+0x38>  // b.lo, b.ul, b.last
    16cc:	csinc	w0, w0, wzr, ls  // ls = plast
    16d0:	ret

00000000000016d4 <ctf_type_compat>:
    16d4:	sub	sp, sp, #0x80
    16d8:	cmp	x1, x3
    16dc:	cset	w8, hi  // hi = pmore
    16e0:	stp	x29, x30, [sp, #48]
    16e4:	stp	x22, x21, [sp, #96]
    16e8:	stp	x20, x19, [sp, #112]
    16ec:	add	x29, sp, #0x30
    16f0:	mov	x19, x3
    16f4:	mov	x21, x2
    16f8:	mov	x22, x0
    16fc:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
    1700:	cmp	x0, x2
    1704:	str	x25, [sp, #64]
    1708:	stp	x24, x23, [sp, #80]
    170c:	str	x0, [x29, #24]
    1710:	stur	x2, [x29, #-8]
    1714:	b.eq	1740 <ctf_type_compat+0x6c>  // b.none
    1718:	ldr	w9, [x22, #544]
    171c:	cmp	x9, x1
    1720:	mov	x9, x22
    1724:	b.cs	1748 <ctf_type_compat+0x74>  // b.hs, b.nlast
    1728:	ldr	w10, [x21, #544]
    172c:	cmp	x10, x19
    1730:	mov	x10, x21
    1734:	b.cs	1764 <ctf_type_compat+0x90>  // b.hs, b.nlast
    1738:	cbz	w8, 1774 <ctf_type_compat+0xa0>
    173c:	b	177c <ctf_type_compat+0xa8>
    1740:	cbnz	w8, 177c <ctf_type_compat+0xa8>
    1744:	b	1838 <ctf_type_compat+0x164>
    1748:	ldr	x9, [x22, #512]
    174c:	cmp	x9, #0x0
    1750:	csel	x9, x22, x9, eq  // eq = none
    1754:	ldr	w10, [x21, #544]
    1758:	cmp	x10, x19
    175c:	mov	x10, x21
    1760:	b.cc	1738 <ctf_type_compat+0x64>  // b.lo, b.ul, b.last
    1764:	ldr	x10, [x21, #512]
    1768:	cmp	x10, #0x0
    176c:	csel	x10, x21, x10, eq  // eq = none
    1770:	cbnz	w8, 177c <ctf_type_compat+0xa8>
    1774:	cmp	x9, x10
    1778:	b.eq	1838 <ctf_type_compat+0x164>  // b.none
    177c:	mov	x0, x22
    1780:	bl	1a8 <ctf_type_resolve>
    1784:	mov	x20, x0
    1788:	mov	x0, x22
    178c:	mov	x1, x20
    1790:	bl	12cc <ctf_type_kind>
    1794:	mov	w22, w0
    1798:	mov	x0, x21
    179c:	mov	x1, x19
    17a0:	bl	1a8 <ctf_type_resolve>
    17a4:	mov	x19, x0
    17a8:	mov	x0, x21
    17ac:	mov	x1, x19
    17b0:	bl	12cc <ctf_type_kind>
    17b4:	mov	w23, w0
    17b8:	add	x0, x29, #0x18
    17bc:	mov	x1, x20
    17c0:	bl	0 <ctf_lookup_by_id>
    17c4:	mov	x25, x0
    17c8:	sub	x0, x29, #0x8
    17cc:	mov	x1, x19
    17d0:	bl	0 <ctf_lookup_by_id>
    17d4:	mov	w21, wzr
    17d8:	cbz	x25, 1818 <ctf_type_compat+0x144>
    17dc:	mov	x24, x0
    17e0:	cbz	x0, 1818 <ctf_type_compat+0x144>
    17e4:	ldr	x0, [x29, #24]
    17e8:	ldr	w1, [x25]
    17ec:	bl	0 <ctf_strptr>
    17f0:	ldur	x8, [x29, #-8]
    17f4:	ldr	w1, [x24]
    17f8:	mov	x21, x0
    17fc:	mov	x0, x8
    1800:	bl	0 <ctf_strptr>
    1804:	mov	x1, x0
    1808:	mov	x0, x21
    180c:	bl	0 <strcmp>
    1810:	cmp	w0, #0x0
    1814:	cset	w21, eq  // eq = none
    1818:	cmp	w22, #0x8
    181c:	b.ne	1828 <ctf_type_compat+0x154>  // b.any
    1820:	cmp	w23, #0x1
    1824:	b.eq	1838 <ctf_type_compat+0x164>  // b.none
    1828:	subs	w8, w22, #0x1
    182c:	b.ne	185c <ctf_type_compat+0x188>  // b.any
    1830:	cmp	w23, #0x8
    1834:	b.ne	185c <ctf_type_compat+0x188>  // b.any
    1838:	mov	w21, #0x1                   	// #1
    183c:	mov	w0, w21
    1840:	ldp	x20, x19, [sp, #112]
    1844:	ldp	x22, x21, [sp, #96]
    1848:	ldp	x24, x23, [sp, #80]
    184c:	ldr	x25, [sp, #64]
    1850:	ldp	x29, x30, [sp, #48]
    1854:	add	sp, sp, #0x80
    1858:	ret
    185c:	cmp	w22, w23
    1860:	b.ne	1c14 <ctf_type_compat+0x540>  // b.any
    1864:	cmp	w8, #0x8
    1868:	b.hi	1c14 <ctf_type_compat+0x540>  // b.pmore
    186c:	adrp	x9, 0 <ctf_type_isparent>
    1870:	add	x9, x9, #0x0
    1874:	adr	x10, 183c <ctf_type_compat+0x168>
    1878:	ldrb	w11, [x9, x8]
    187c:	add	x10, x10, x11, lsl #2
    1880:	br	x10
    1884:	ldr	x0, [x29, #24]
    1888:	add	x2, sp, #0x18
    188c:	mov	x1, x20
    1890:	str	wzr, [sp, #32]
    1894:	str	xzr, [sp, #24]
    1898:	str	xzr, [sp, #8]
    189c:	str	wzr, [sp, #16]
    18a0:	bl	14e4 <ctf_type_encoding>
    18a4:	mov	w21, wzr
    18a8:	cbnz	w0, 183c <ctf_type_compat+0x168>
    18ac:	ldur	x0, [x29, #-8]
    18b0:	add	x2, sp, #0x8
    18b4:	mov	x1, x19
    18b8:	bl	14e4 <ctf_type_encoding>
    18bc:	cbnz	w0, 1c14 <ctf_type_compat+0x540>
    18c0:	ldr	x8, [sp, #24]
    18c4:	ldr	x9, [sp, #8]
    18c8:	ldr	w10, [sp, #32]
    18cc:	ldr	w11, [sp, #16]
    18d0:	eor	x8, x8, x9
    18d4:	eor	w9, w10, w11
    18d8:	orr	x8, x8, x9
    18dc:	cmp	x8, #0x0
    18e0:	cset	w21, eq  // eq = none
    18e4:	b	183c <ctf_type_compat+0x168>
    18e8:	cbz	w21, 183c <ctf_type_compat+0x168>
    18ec:	ldr	x0, [x29, #24]
    18f0:	mov	x1, x20
    18f4:	bl	d7c <ctf_type_size>
    18f8:	ldur	x8, [x29, #-8]
    18fc:	mov	x20, x0
    1900:	mov	x1, x19
    1904:	mov	x0, x8
    1908:	bl	d7c <ctf_type_size>
    190c:	cmp	x20, x0
    1910:	cset	w21, eq  // eq = none
    1914:	b	183c <ctf_type_compat+0x168>
    1918:	ldr	x21, [x29, #24]
    191c:	add	x0, sp, #0x18
    1920:	mov	x1, x20
    1924:	str	x21, [sp, #24]
    1928:	bl	0 <ctf_lookup_by_id>
    192c:	cbz	x0, 1a18 <ctf_type_compat+0x344>
    1930:	ldr	x8, [sp, #24]
    1934:	mov	x20, x0
    1938:	ldr	w0, [x0, #4]
    193c:	ldr	x8, [x8]
    1940:	ldr	x8, [x8]
    1944:	blr	x8
    1948:	sub	w8, w0, #0xa
    194c:	cmp	w8, #0x4
    1950:	b.cc	1964 <ctf_type_compat+0x290>  // b.lo, b.ul, b.last
    1954:	cmp	w0, #0xe
    1958:	b.eq	1ac8 <ctf_type_compat+0x3f4>  // b.none
    195c:	cmp	w0, #0x3
    1960:	b.ne	1af0 <ctf_type_compat+0x41c>  // b.any
    1964:	ldr	w20, [x20, #8]
    1968:	b	1b00 <ctf_type_compat+0x42c>
    196c:	ldr	x22, [x29, #24]
    1970:	add	x0, sp, #0x18
    1974:	mov	x1, x20
    1978:	str	x22, [sp, #24]
    197c:	bl	0 <ctf_lookup_by_id>
    1980:	mov	x21, x0
    1984:	cbz	x0, 183c <ctf_type_compat+0x168>
    1988:	ldr	x8, [sp, #24]
    198c:	ldr	w0, [x21, #4]
    1990:	ldr	x8, [x8]
    1994:	ldr	x8, [x8]
    1998:	blr	x8
    199c:	cmp	w0, #0x4
    19a0:	b.ne	1a20 <ctf_type_compat+0x34c>  // b.any
    19a4:	mov	x0, x22
    19a8:	mov	x1, x20
    19ac:	bl	0 <ctf_dynamic_type>
    19b0:	cbz	x0, 1a34 <ctf_type_compat+0x360>
    19b4:	add	x8, x0, #0x40
    19b8:	ldp	x21, x20, [x0, #48]
    19bc:	b	1a5c <ctf_type_compat+0x388>
    19c0:	ldr	x0, [x29, #24]
    19c4:	add	x2, sp, #0x18
    19c8:	mov	x1, x20
    19cc:	bl	14e4 <ctf_type_encoding>
    19d0:	ldur	x8, [x29, #-8]
    19d4:	mov	w20, w0
    19d8:	add	x2, sp, #0x8
    19dc:	mov	x1, x19
    19e0:	mov	x0, x8
    19e4:	bl	14e4 <ctf_type_encoding>
    19e8:	cmp	w20, w0
    19ec:	b.ne	1c14 <ctf_type_compat+0x540>  // b.any
    19f0:	cbnz	w20, 183c <ctf_type_compat+0x168>
    19f4:	ldr	x8, [sp, #24]
    19f8:	ldr	x9, [sp, #8]
    19fc:	ldr	w10, [sp, #32]
    1a00:	ldr	w11, [sp, #16]
    1a04:	eor	x8, x8, x9
    1a08:	eor	w9, w10, w11
    1a0c:	orr	x8, x8, x9
    1a10:	cbnz	x8, 1c14 <ctf_type_compat+0x540>
    1a14:	b	183c <ctf_type_compat+0x168>
    1a18:	mov	x20, #0xffffffffffffffff    	// #-1
    1a1c:	b	1b00 <ctf_type_compat+0x42c>
    1a20:	mov	w1, #0x3ff                 	// #1023
    1a24:	mov	x0, x22
    1a28:	bl	0 <ctf_set_errno>
    1a2c:	cbnz	w0, 1c14 <ctf_type_compat+0x540>
    1a30:	b	1a60 <ctf_type_compat+0x38c>
    1a34:	ldr	x0, [sp, #24]
    1a38:	add	x3, sp, #0x8
    1a3c:	mov	x1, x21
    1a40:	mov	x2, xzr
    1a44:	ldr	x8, [x0]
    1a48:	ldr	x8, [x8, #24]
    1a4c:	blr	x8
    1a50:	ldr	x8, [sp, #8]
    1a54:	add	x8, x8, x21
    1a58:	ldp	w21, w20, [x8], #8
    1a5c:	ldr	w24, [x8]
    1a60:	ldur	x23, [x29, #-8]
    1a64:	add	x0, sp, #0x18
    1a68:	mov	x1, x19
    1a6c:	str	x23, [sp, #24]
    1a70:	bl	0 <ctf_lookup_by_id>
    1a74:	cbz	x0, 1c14 <ctf_type_compat+0x540>
    1a78:	ldr	x8, [sp, #24]
    1a7c:	mov	x22, x0
    1a80:	ldr	w0, [x0, #4]
    1a84:	ldr	x8, [x8]
    1a88:	ldr	x8, [x8]
    1a8c:	blr	x8
    1a90:	cmp	w0, #0x4
    1a94:	b.ne	1ab4 <ctf_type_compat+0x3e0>  // b.any
    1a98:	mov	x0, x23
    1a9c:	mov	x1, x19
    1aa0:	bl	0 <ctf_dynamic_type>
    1aa4:	cbz	x0, 1bac <ctf_type_compat+0x4d8>
    1aa8:	add	x8, x0, #0x40
    1aac:	ldp	x3, x19, [x0, #48]
    1ab0:	b	1bd4 <ctf_type_compat+0x500>
    1ab4:	mov	w1, #0x3ff                 	// #1023
    1ab8:	mov	x0, x23
    1abc:	bl	0 <ctf_set_errno>
    1ac0:	cbnz	w0, 1c14 <ctf_type_compat+0x540>
    1ac4:	b	1bd8 <ctf_type_compat+0x504>
    1ac8:	ldr	x0, [sp, #24]
    1acc:	add	x3, sp, #0x8
    1ad0:	mov	x1, x20
    1ad4:	mov	x2, xzr
    1ad8:	ldr	x8, [x0]
    1adc:	ldr	x8, [x8, #24]
    1ae0:	blr	x8
    1ae4:	ldr	x8, [sp, #8]
    1ae8:	ldr	w20, [x8, x20]
    1aec:	b	1b00 <ctf_type_compat+0x42c>
    1af0:	mov	w1, #0x400                 	// #1024
    1af4:	mov	x0, x21
    1af8:	bl	0 <ctf_set_errno>
    1afc:	mov	x20, x0
    1b00:	ldur	x22, [x29, #-8]
    1b04:	add	x0, sp, #0x18
    1b08:	mov	x1, x19
    1b0c:	str	x22, [sp, #24]
    1b10:	bl	0 <ctf_lookup_by_id>
    1b14:	cbz	x0, 1b54 <ctf_type_compat+0x480>
    1b18:	ldr	x8, [sp, #24]
    1b1c:	mov	x19, x0
    1b20:	ldr	w0, [x0, #4]
    1b24:	ldr	x8, [x8]
    1b28:	ldr	x8, [x8]
    1b2c:	blr	x8
    1b30:	sub	w8, w0, #0xa
    1b34:	cmp	w8, #0x4
    1b38:	b.cc	1b4c <ctf_type_compat+0x478>  // b.lo, b.ul, b.last
    1b3c:	cmp	w0, #0xe
    1b40:	b.eq	1b5c <ctf_type_compat+0x488>  // b.none
    1b44:	cmp	w0, #0x3
    1b48:	b.ne	1b84 <ctf_type_compat+0x4b0>  // b.any
    1b4c:	ldr	w3, [x19, #8]
    1b50:	b	1b94 <ctf_type_compat+0x4c0>
    1b54:	mov	x3, #0xffffffffffffffff    	// #-1
    1b58:	b	1b94 <ctf_type_compat+0x4c0>
    1b5c:	ldr	x0, [sp, #24]
    1b60:	add	x3, sp, #0x8
    1b64:	mov	x1, x19
    1b68:	mov	x2, xzr
    1b6c:	ldr	x8, [x0]
    1b70:	ldr	x8, [x8, #24]
    1b74:	blr	x8
    1b78:	ldr	x8, [sp, #8]
    1b7c:	ldr	w3, [x8, x19]
    1b80:	b	1b94 <ctf_type_compat+0x4c0>
    1b84:	mov	w1, #0x400                 	// #1024
    1b88:	mov	x0, x22
    1b8c:	bl	0 <ctf_set_errno>
    1b90:	mov	x3, x0
    1b94:	mov	x0, x21
    1b98:	mov	x1, x20
    1b9c:	mov	x2, x22
    1ba0:	bl	16d4 <ctf_type_compat>
    1ba4:	mov	w21, w0
    1ba8:	b	183c <ctf_type_compat+0x168>
    1bac:	ldr	x0, [sp, #24]
    1bb0:	add	x3, sp, #0x8
    1bb4:	mov	x1, x22
    1bb8:	mov	x2, xzr
    1bbc:	ldr	x8, [x0]
    1bc0:	ldr	x8, [x8, #24]
    1bc4:	blr	x8
    1bc8:	ldr	x8, [sp, #8]
    1bcc:	add	x8, x8, x22
    1bd0:	ldp	w3, w19, [x8], #8
    1bd4:	ldr	w8, [x8]
    1bd8:	cmp	w24, w8
    1bdc:	b.ne	1c14 <ctf_type_compat+0x540>  // b.any
    1be0:	ldr	x0, [x29, #24]
    1be4:	ldur	x2, [x29, #-8]
    1be8:	mov	x1, x21
    1bec:	bl	16d4 <ctf_type_compat>
    1bf0:	cbz	w0, 1c14 <ctf_type_compat+0x540>
    1bf4:	ldr	x0, [x29, #24]
    1bf8:	ldur	x2, [x29, #-8]
    1bfc:	mov	x1, x20
    1c00:	mov	x3, x19
    1c04:	bl	16d4 <ctf_type_compat>
    1c08:	cmp	w0, #0x0
    1c0c:	cset	w21, ne  // ne = any
    1c10:	b	183c <ctf_type_compat+0x168>
    1c14:	mov	w21, wzr
    1c18:	b	183c <ctf_type_compat+0x168>

0000000000001c1c <ctf_member_info>:
    1c1c:	sub	sp, sp, #0x60
    1c20:	stp	x29, x30, [sp, #32]
    1c24:	add	x29, sp, #0x20
    1c28:	stp	x24, x23, [sp, #48]
    1c2c:	stp	x22, x21, [sp, #64]
    1c30:	stp	x20, x19, [sp, #80]
    1c34:	mov	x19, x3
    1c38:	mov	x21, x2
    1c3c:	mov	x20, x0
    1c40:	stur	x0, [x29, #-8]
    1c44:	bl	1a8 <ctf_type_resolve>
    1c48:	cmn	x0, #0x1
    1c4c:	b.eq	1d88 <ctf_member_info+0x16c>  // b.none
    1c50:	mov	x23, x0
    1c54:	sub	x0, x29, #0x8
    1c58:	mov	x1, x23
    1c5c:	bl	0 <ctf_lookup_by_id>
    1c60:	cbz	x0, 1cd8 <ctf_member_info+0xbc>
    1c64:	mov	x22, x0
    1c68:	ldur	x0, [x29, #-8]
    1c6c:	add	x2, sp, #0x10
    1c70:	add	x3, sp, #0x8
    1c74:	mov	x1, x22
    1c78:	ldr	x8, [x0]
    1c7c:	ldr	x8, [x8, #24]
    1c80:	blr	x8
    1c84:	ldur	x8, [x29, #-8]
    1c88:	ldr	w0, [x22, #4]
    1c8c:	ldr	x8, [x8]
    1c90:	ldr	x8, [x8]
    1c94:	blr	x8
    1c98:	orr	w8, w0, #0x1
    1c9c:	cmp	w8, #0x7
    1ca0:	b.ne	1ce0 <ctf_member_info+0xc4>  // b.any
    1ca4:	ldur	x0, [x29, #-8]
    1ca8:	mov	x1, x23
    1cac:	bl	0 <ctf_dynamic_type>
    1cb0:	cbz	x0, 1ce8 <ctf_member_info+0xcc>
    1cb4:	ldr	x22, [x0, #56]
    1cb8:	cbz	x22, 1d7c <ctf_member_info+0x160>
    1cbc:	ldr	x0, [x22, #16]
    1cc0:	mov	x1, x21
    1cc4:	bl	0 <strcmp>
    1cc8:	cbz	w0, 1d44 <ctf_member_info+0x128>
    1ccc:	ldr	x22, [x22, #8]
    1cd0:	cbnz	x22, 1cbc <ctf_member_info+0xa0>
    1cd4:	b	1d7c <ctf_member_info+0x160>
    1cd8:	mov	w0, #0xffffffff            	// #-1
    1cdc:	b	1d88 <ctf_member_info+0x16c>
    1ce0:	mov	w1, #0x3fb                 	// #1019
    1ce4:	b	1d80 <ctf_member_info+0x164>
    1ce8:	ldur	x8, [x29, #-8]
    1cec:	ldp	x9, x24, [sp, #8]
    1cf0:	ldr	w0, [x22, #4]
    1cf4:	ldr	x8, [x8]
    1cf8:	add	x23, x9, x22
    1cfc:	ldr	x8, [x8, #16]
    1d00:	blr	x8
    1d04:	mov	w8, #0x1fffffff            	// #536870911
    1d08:	cmp	x24, x8
    1d0c:	mov	w22, w0
    1d10:	b.gt	1d50 <ctf_member_info+0x134>
    1d14:	cbz	w22, 1d7c <ctf_member_info+0x160>
    1d18:	add	x23, x23, #0x4
    1d1c:	ldur	x0, [x29, #-8]
    1d20:	ldur	w1, [x23, #-4]
    1d24:	bl	0 <ctf_strptr>
    1d28:	mov	x1, x21
    1d2c:	bl	0 <strcmp>
    1d30:	cbz	w0, 1da0 <ctf_member_info+0x184>
    1d34:	subs	w22, w22, #0x1
    1d38:	add	x23, x23, #0xc
    1d3c:	b.ne	1d1c <ctf_member_info+0x100>  // b.any
    1d40:	b	1d7c <ctf_member_info+0x160>
    1d44:	ldur	q0, [x22, #24]
    1d48:	str	q0, [x19]
    1d4c:	b	1d88 <ctf_member_info+0x16c>
    1d50:	cbz	w22, 1d7c <ctf_member_info+0x160>
    1d54:	add	x23, x23, #0x8
    1d58:	ldur	x0, [x29, #-8]
    1d5c:	ldur	w1, [x23, #-8]
    1d60:	bl	0 <ctf_strptr>
    1d64:	mov	x1, x21
    1d68:	bl	0 <strcmp>
    1d6c:	cbz	w0, 1db4 <ctf_member_info+0x198>
    1d70:	subs	w22, w22, #0x1
    1d74:	add	x23, x23, #0x10
    1d78:	b.ne	1d58 <ctf_member_info+0x13c>  // b.any
    1d7c:	mov	w1, #0x40c                 	// #1036
    1d80:	mov	x0, x20
    1d84:	bl	0 <ctf_set_errno>
    1d88:	ldp	x20, x19, [sp, #80]
    1d8c:	ldp	x22, x21, [sp, #64]
    1d90:	ldp	x24, x23, [sp, #48]
    1d94:	ldp	x29, x30, [sp, #32]
    1d98:	add	sp, sp, #0x60
    1d9c:	ret
    1da0:	ldr	w8, [x23, #4]
    1da4:	str	x8, [x19]
    1da8:	ldr	w8, [x23]
    1dac:	str	x8, [x19, #8]
    1db0:	b	1d88 <ctf_member_info+0x16c>
    1db4:	ldr	w8, [x23]
    1db8:	str	x8, [x19]
    1dbc:	ldur	w8, [x23, #-4]
    1dc0:	ldr	w9, [x23, #4]
    1dc4:	bfi	x9, x8, #32, #32
    1dc8:	str	x9, [x19, #8]
    1dcc:	b	1d88 <ctf_member_info+0x16c>

0000000000001dd0 <ctf_enum_name>:
    1dd0:	sub	sp, sp, #0x40
    1dd4:	stp	x29, x30, [sp, #16]
    1dd8:	stp	x22, x21, [sp, #32]
    1ddc:	stp	x20, x19, [sp, #48]
    1de0:	add	x29, sp, #0x10
    1de4:	mov	w20, w2
    1de8:	mov	x19, x0
    1dec:	str	x0, [sp, #8]
    1df0:	bl	3d0 <ctf_type_resolve_unsliced>
    1df4:	cmn	x0, #0x1
    1df8:	b.eq	1ec8 <ctf_enum_name+0xf8>  // b.none
    1dfc:	mov	x22, x0
    1e00:	add	x0, sp, #0x8
    1e04:	mov	x1, x22
    1e08:	bl	0 <ctf_lookup_by_id>
    1e0c:	cbz	x0, 1ecc <ctf_enum_name+0xfc>
    1e10:	ldr	x8, [sp, #8]
    1e14:	mov	x21, x0
    1e18:	ldr	w0, [x0, #4]
    1e1c:	ldr	x8, [x8]
    1e20:	ldr	x8, [x8]
    1e24:	blr	x8
    1e28:	cmp	w0, #0x8
    1e2c:	b.ne	1e7c <ctf_enum_name+0xac>  // b.any
    1e30:	ldr	x0, [sp, #8]
    1e34:	mov	x3, sp
    1e38:	mov	x1, x21
    1e3c:	mov	x2, xzr
    1e40:	ldr	x8, [x0]
    1e44:	ldr	x8, [x8, #24]
    1e48:	blr	x8
    1e4c:	mov	x0, x19
    1e50:	mov	x1, x22
    1e54:	bl	0 <ctf_dynamic_type>
    1e58:	cbz	x0, 1e84 <ctf_enum_name+0xb4>
    1e5c:	ldr	x8, [x0, #56]
    1e60:	cbz	x8, 1ebc <ctf_enum_name+0xec>
    1e64:	ldr	w9, [x8, #40]
    1e68:	cmp	w9, w20
    1e6c:	b.eq	1ee0 <ctf_enum_name+0x110>  // b.none
    1e70:	ldr	x8, [x8, #8]
    1e74:	cbnz	x8, 1e64 <ctf_enum_name+0x94>
    1e78:	b	1ebc <ctf_enum_name+0xec>
    1e7c:	mov	w1, #0x3fc                 	// #1020
    1e80:	b	1ec0 <ctf_enum_name+0xf0>
    1e84:	ldp	x22, x8, [sp]
    1e88:	ldr	w0, [x21, #4]
    1e8c:	ldr	x8, [x8]
    1e90:	ldr	x8, [x8, #16]
    1e94:	blr	x8
    1e98:	cbz	w0, 1ebc <ctf_enum_name+0xec>
    1e9c:	add	x8, x22, x21
    1ea0:	add	x8, x8, #0x4
    1ea4:	ldr	w9, [x8]
    1ea8:	cmp	w9, w20
    1eac:	b.eq	1ee8 <ctf_enum_name+0x118>  // b.none
    1eb0:	subs	w0, w0, #0x1
    1eb4:	add	x8, x8, #0x8
    1eb8:	b.ne	1ea4 <ctf_enum_name+0xd4>  // b.any
    1ebc:	mov	w1, #0x40b                 	// #1035
    1ec0:	mov	x0, x19
    1ec4:	bl	0 <ctf_set_errno>
    1ec8:	mov	x0, xzr
    1ecc:	ldp	x20, x19, [sp, #48]
    1ed0:	ldp	x22, x21, [sp, #32]
    1ed4:	ldp	x29, x30, [sp, #16]
    1ed8:	add	sp, sp, #0x40
    1edc:	ret
    1ee0:	ldr	x0, [x8, #16]
    1ee4:	b	1ecc <ctf_enum_name+0xfc>
    1ee8:	ldr	x0, [sp, #8]
    1eec:	ldur	w1, [x8, #-4]
    1ef0:	bl	0 <ctf_strptr>
    1ef4:	b	1ecc <ctf_enum_name+0xfc>

0000000000001ef8 <ctf_enum_value>:
    1ef8:	sub	sp, sp, #0x50
    1efc:	stp	x29, x30, [sp, #16]
    1f00:	stp	x24, x23, [sp, #32]
    1f04:	stp	x22, x21, [sp, #48]
    1f08:	stp	x20, x19, [sp, #64]
    1f0c:	add	x29, sp, #0x10
    1f10:	mov	x19, x3
    1f14:	mov	x21, x2
    1f18:	mov	x20, x0
    1f1c:	str	x0, [sp, #8]
    1f20:	bl	3d0 <ctf_type_resolve_unsliced>
    1f24:	cmn	x0, #0x1
    1f28:	b.eq	2014 <ctf_enum_value+0x11c>  // b.none
    1f2c:	mov	x23, x0
    1f30:	add	x0, sp, #0x8
    1f34:	mov	x1, x23
    1f38:	bl	0 <ctf_lookup_by_id>
    1f3c:	cbz	x0, 2010 <ctf_enum_value+0x118>
    1f40:	ldr	x8, [sp, #8]
    1f44:	mov	x22, x0
    1f48:	ldr	w0, [x0, #4]
    1f4c:	ldr	x8, [x8]
    1f50:	ldr	x8, [x8]
    1f54:	blr	x8
    1f58:	cmp	w0, #0x8
    1f5c:	b.ne	1fb4 <ctf_enum_value+0xbc>  // b.any
    1f60:	ldr	x0, [sp, #8]
    1f64:	mov	x3, sp
    1f68:	mov	x1, x22
    1f6c:	mov	x2, xzr
    1f70:	ldr	x8, [x0]
    1f74:	ldr	x8, [x8, #24]
    1f78:	blr	x8
    1f7c:	ldr	x24, [sp]
    1f80:	mov	x0, x20
    1f84:	mov	x1, x23
    1f88:	bl	0 <ctf_dynamic_type>
    1f8c:	cbz	x0, 1fbc <ctf_enum_value+0xc4>
    1f90:	ldr	x22, [x0, #56]
    1f94:	cbz	x22, 2004 <ctf_enum_value+0x10c>
    1f98:	ldr	x0, [x22, #16]
    1f9c:	mov	x1, x21
    1fa0:	bl	0 <strcmp>
    1fa4:	cbz	w0, 202c <ctf_enum_value+0x134>
    1fa8:	ldr	x22, [x22, #8]
    1fac:	cbnz	x22, 1f98 <ctf_enum_value+0xa0>
    1fb0:	b	2004 <ctf_enum_value+0x10c>
    1fb4:	mov	w1, #0x3fc                 	// #1020
    1fb8:	b	2008 <ctf_enum_value+0x110>
    1fbc:	ldr	x8, [sp, #8]
    1fc0:	ldr	w0, [x22, #4]
    1fc4:	ldr	x8, [x8]
    1fc8:	ldr	x8, [x8, #16]
    1fcc:	blr	x8
    1fd0:	cbz	w0, 2004 <ctf_enum_value+0x10c>
    1fd4:	add	x8, x24, x22
    1fd8:	mov	w23, w0
    1fdc:	add	x22, x8, #0x4
    1fe0:	ldr	x0, [sp, #8]
    1fe4:	ldur	w1, [x22, #-4]
    1fe8:	bl	0 <ctf_strptr>
    1fec:	mov	x1, x21
    1ff0:	bl	0 <strcmp>
    1ff4:	cbz	w0, 2040 <ctf_enum_value+0x148>
    1ff8:	subs	w23, w23, #0x1
    1ffc:	add	x22, x22, #0x8
    2000:	b.ne	1fe0 <ctf_enum_value+0xe8>  // b.any
    2004:	mov	w1, #0x40b                 	// #1035
    2008:	mov	x0, x20
    200c:	bl	0 <ctf_set_errno>
    2010:	mov	w0, #0xffffffff            	// #-1
    2014:	ldp	x20, x19, [sp, #64]
    2018:	ldp	x22, x21, [sp, #48]
    201c:	ldp	x24, x23, [sp, #32]
    2020:	ldp	x29, x30, [sp, #16]
    2024:	add	sp, sp, #0x50
    2028:	ret
    202c:	mov	w0, wzr
    2030:	cbz	x19, 2014 <ctf_enum_value+0x11c>
    2034:	ldr	w8, [x22, #40]
    2038:	str	w8, [x19]
    203c:	b	2014 <ctf_enum_value+0x11c>
    2040:	mov	w0, wzr
    2044:	cbz	x19, 2014 <ctf_enum_value+0x11c>
    2048:	ldr	w8, [x22]
    204c:	str	w8, [x19]
    2050:	b	2014 <ctf_enum_value+0x11c>

0000000000002054 <ctf_func_type_info>:
    2054:	sub	sp, sp, #0x40
    2058:	stp	x29, x30, [sp, #16]
    205c:	add	x29, sp, #0x10
    2060:	str	x21, [sp, #32]
    2064:	stp	x20, x19, [sp, #48]
    2068:	mov	x19, x2
    206c:	str	x0, [x29, #24]
    2070:	bl	1a8 <ctf_type_resolve>
    2074:	cmn	x0, #0x1
    2078:	b.eq	215c <ctf_func_type_info+0x108>  // b.none
    207c:	mov	x20, x0
    2080:	add	x0, x29, #0x18
    2084:	mov	x1, x20
    2088:	bl	0 <ctf_lookup_by_id>
    208c:	cbz	x0, 2110 <ctf_func_type_info+0xbc>
    2090:	mov	x21, x0
    2094:	ldr	x0, [x29, #24]
    2098:	add	x2, sp, #0x8
    209c:	mov	x3, sp
    20a0:	mov	x1, x21
    20a4:	ldr	x8, [x0]
    20a8:	ldr	x8, [x8, #24]
    20ac:	blr	x8
    20b0:	ldr	x8, [x29, #24]
    20b4:	ldr	w0, [x21, #4]
    20b8:	ldr	x8, [x8]
    20bc:	ldr	x8, [x8]
    20c0:	blr	x8
    20c4:	cmp	w0, #0x5
    20c8:	b.ne	2118 <ctf_func_type_info+0xc4>  // b.any
    20cc:	ldr	w8, [x21, #8]
    20d0:	str	wzr, [x19, #12]
    20d4:	str	x8, [x19]
    20d8:	ldr	x8, [x29, #24]
    20dc:	ldr	w0, [x21, #4]
    20e0:	ldr	x8, [x8]
    20e4:	ldr	x8, [x8, #16]
    20e8:	blr	x8
    20ec:	str	w0, [x19, #8]
    20f0:	ldr	x0, [x29, #24]
    20f4:	mov	x1, x20
    20f8:	bl	0 <ctf_dynamic_type>
    20fc:	cbz	x0, 2128 <ctf_func_type_info+0xd4>
    2100:	ldr	x8, [x0, #48]
    2104:	ldr	w9, [x19, #8]
    2108:	cbnz	w9, 2138 <ctf_func_type_info+0xe4>
    210c:	b	2144 <ctf_func_type_info+0xf0>
    2110:	mov	w0, #0xffffffff            	// #-1
    2114:	b	215c <ctf_func_type_info+0x108>
    2118:	ldr	x0, [x29, #24]
    211c:	mov	w1, #0x404                 	// #1028
    2120:	bl	0 <ctf_set_errno>
    2124:	b	215c <ctf_func_type_info+0x108>
    2128:	ldr	x8, [sp]
    212c:	add	x8, x8, x21
    2130:	ldr	w9, [x19, #8]
    2134:	cbz	w9, 2144 <ctf_func_type_info+0xf0>
    2138:	sub	w9, w9, #0x1
    213c:	ldr	w8, [x8, w9, uxtw #2]
    2140:	cbz	w8, 214c <ctf_func_type_info+0xf8>
    2144:	mov	w0, wzr
    2148:	b	215c <ctf_func_type_info+0x108>
    214c:	ldr	w8, [x19, #12]
    2150:	mov	w0, wzr
    2154:	orr	w8, w8, #0x1
    2158:	stp	w9, w8, [x19, #8]
    215c:	ldp	x20, x19, [sp, #48]
    2160:	ldr	x21, [sp, #32]
    2164:	ldp	x29, x30, [sp, #16]
    2168:	add	sp, sp, #0x40
    216c:	ret

0000000000002170 <ctf_func_type_args>:
    2170:	sub	sp, sp, #0x60
    2174:	stp	x29, x30, [sp, #48]
    2178:	stp	x20, x19, [sp, #80]
    217c:	add	x29, sp, #0x30
    2180:	mov	w20, w2
    2184:	add	x2, sp, #0x8
    2188:	stp	x22, x21, [sp, #64]
    218c:	mov	x19, x3
    2190:	mov	x21, x1
    2194:	mov	x22, x0
    2198:	stur	x0, [x29, #-8]
    219c:	bl	2054 <ctf_func_type_info>
    21a0:	tbnz	w0, #31, 2214 <ctf_func_type_args+0xa4>
    21a4:	mov	x0, x22
    21a8:	mov	x1, x21
    21ac:	bl	1a8 <ctf_type_resolve>
    21b0:	cmn	x0, #0x1
    21b4:	b.eq	22a4 <ctf_func_type_args+0x134>  // b.none
    21b8:	mov	x21, x0
    21bc:	sub	x0, x29, #0x8
    21c0:	mov	x1, x21
    21c4:	bl	0 <ctf_lookup_by_id>
    21c8:	cbz	x0, 2214 <ctf_func_type_args+0xa4>
    21cc:	mov	x22, x0
    21d0:	ldur	x0, [x29, #-8]
    21d4:	sub	x2, x29, #0x10
    21d8:	add	x3, sp, #0x18
    21dc:	mov	x1, x22
    21e0:	ldr	x8, [x0]
    21e4:	ldr	x8, [x8, #24]
    21e8:	blr	x8
    21ec:	ldur	x0, [x29, #-8]
    21f0:	mov	x1, x21
    21f4:	bl	0 <ctf_dynamic_type>
    21f8:	cbz	x0, 221c <ctf_func_type_args+0xac>
    21fc:	ldr	x11, [x0, #48]
    2200:	ldr	w8, [sp, #16]
    2204:	cmp	w8, w20
    2208:	csel	w8, w20, w8, hi  // hi = pmore
    220c:	cbnz	w8, 2234 <ctf_func_type_args+0xc4>
    2210:	b	22a0 <ctf_func_type_args+0x130>
    2214:	mov	w0, #0xffffffff            	// #-1
    2218:	b	22a4 <ctf_func_type_args+0x134>
    221c:	ldr	x8, [sp, #24]
    2220:	add	x11, x8, x22
    2224:	ldr	w8, [sp, #16]
    2228:	cmp	w8, w20
    222c:	csel	w8, w20, w8, hi  // hi = pmore
    2230:	cbz	w8, 22a0 <ctf_func_type_args+0x130>
    2234:	sub	w9, w8, #0x1
    2238:	cmp	w9, #0x3
    223c:	b.cs	2248 <ctf_func_type_args+0xd8>  // b.hs, b.nlast
    2240:	mov	x9, x11
    2244:	b	2290 <ctf_func_type_args+0x120>
    2248:	add	x10, x9, #0x1
    224c:	and	x12, x10, #0x1fffffffc
    2250:	add	x13, x19, #0x10
    2254:	add	x9, x11, x12, lsl #2
    2258:	add	x19, x19, x12, lsl #3
    225c:	sub	w8, w8, w12
    2260:	add	x11, x11, #0x8
    2264:	mov	x14, x12
    2268:	ldp	d0, d1, [x11, #-8]
    226c:	subs	x14, x14, #0x4
    2270:	add	x11, x11, #0x10
    2274:	uxtl	v0.2d, v0.2s
    2278:	uxtl	v1.2d, v1.2s
    227c:	stp	q0, q1, [x13, #-16]
    2280:	add	x13, x13, #0x20
    2284:	b.ne	2268 <ctf_func_type_args+0xf8>  // b.any
    2288:	cmp	x10, x12
    228c:	b.eq	22a0 <ctf_func_type_args+0x130>  // b.none
    2290:	ldr	w10, [x9], #4
    2294:	subs	w8, w8, #0x1
    2298:	str	x10, [x19], #8
    229c:	b.ne	2290 <ctf_func_type_args+0x120>  // b.any
    22a0:	mov	w0, wzr
    22a4:	ldp	x20, x19, [sp, #80]
    22a8:	ldp	x22, x21, [sp, #64]
    22ac:	ldp	x29, x30, [sp, #48]
    22b0:	add	sp, sp, #0x60
    22b4:	ret

00000000000022b8 <ctf_type_visit>:
    22b8:	adrp	x4, 0 <ctf_type_isparent>
    22bc:	add	x4, x4, #0x0
    22c0:	mov	x5, xzr
    22c4:	mov	w6, wzr
    22c8:	b	22cc <ctf_type_rvisit>

00000000000022cc <ctf_type_rvisit>:
    22cc:	sub	sp, sp, #0x70
    22d0:	stp	x29, x30, [sp, #32]
    22d4:	add	x29, sp, #0x20
    22d8:	stp	x26, x25, [sp, #48]
    22dc:	stp	x24, x23, [sp, #64]
    22e0:	stp	x22, x21, [sp, #80]
    22e4:	stp	x20, x19, [sp, #96]
    22e8:	mov	w22, w6
    22ec:	mov	x21, x5
    22f0:	mov	x25, x4
    22f4:	mov	x19, x3
    22f8:	mov	x20, x2
    22fc:	mov	x26, x1
    2300:	stur	x0, [x29, #-8]
    2304:	bl	1a8 <ctf_type_resolve>
    2308:	cmn	x0, #0x1
    230c:	b.eq	24b8 <ctf_type_rvisit+0x1ec>  // b.none
    2310:	mov	x24, x0
    2314:	sub	x0, x29, #0x8
    2318:	mov	x1, x24
    231c:	bl	0 <ctf_lookup_by_id>
    2320:	cbz	x0, 23c8 <ctf_type_rvisit+0xfc>
    2324:	mov	x23, x0
    2328:	mov	x0, x25
    232c:	mov	x1, x26
    2330:	mov	x2, x21
    2334:	mov	w3, w22
    2338:	mov	x4, x19
    233c:	blr	x20
    2340:	cbnz	w0, 24b8 <ctf_type_rvisit+0x1ec>
    2344:	ldur	x8, [x29, #-8]
    2348:	ldr	w0, [x23, #4]
    234c:	ldr	x8, [x8]
    2350:	ldr	x8, [x8]
    2354:	blr	x8
    2358:	orr	w8, w0, #0x1
    235c:	cmp	w8, #0x7
    2360:	b.ne	24b4 <ctf_type_rvisit+0x1e8>  // b.any
    2364:	ldur	x0, [x29, #-8]
    2368:	add	x2, sp, #0x10
    236c:	add	x3, sp, #0x8
    2370:	mov	x1, x23
    2374:	ldr	x8, [x0]
    2378:	ldr	x8, [x8, #24]
    237c:	blr	x8
    2380:	ldur	x0, [x29, #-8]
    2384:	mov	x1, x24
    2388:	bl	0 <ctf_dynamic_type>
    238c:	cbz	x0, 23d0 <ctf_type_rvisit+0x104>
    2390:	ldr	x23, [x0, #56]
    2394:	cbz	x23, 24b4 <ctf_type_rvisit+0x1e8>
    2398:	add	w21, w22, #0x1
    239c:	ldur	x0, [x29, #-8]
    23a0:	ldp	x4, x1, [x23, #16]
    23a4:	ldr	x5, [x23, #32]
    23a8:	mov	x2, x20
    23ac:	mov	x3, x19
    23b0:	mov	w6, w21
    23b4:	bl	22cc <ctf_type_rvisit>
    23b8:	cbnz	w0, 24b8 <ctf_type_rvisit+0x1ec>
    23bc:	ldr	x23, [x23, #8]
    23c0:	cbnz	x23, 239c <ctf_type_rvisit+0xd0>
    23c4:	b	24b8 <ctf_type_rvisit+0x1ec>
    23c8:	mov	w0, #0xffffffff            	// #-1
    23cc:	b	24b8 <ctf_type_rvisit+0x1ec>
    23d0:	ldur	x8, [x29, #-8]
    23d4:	ldp	x9, x25, [sp, #8]
    23d8:	ldr	w0, [x23, #4]
    23dc:	ldr	x8, [x8]
    23e0:	add	x24, x9, x23
    23e4:	ldr	x8, [x8, #16]
    23e8:	blr	x8
    23ec:	mov	w8, #0x1fffffff            	// #536870911
    23f0:	cmp	x25, x8
    23f4:	mov	w23, w0
    23f8:	b.gt	2454 <ctf_type_rvisit+0x188>
    23fc:	cbz	w23, 24b4 <ctf_type_rvisit+0x1e8>
    2400:	add	w22, w22, #0x1
    2404:	add	x26, x24, #0x8
    2408:	ldur	x24, [x29, #-8]
    240c:	ldur	w1, [x26, #-8]
    2410:	ldr	w25, [x26]
    2414:	mov	x0, x24
    2418:	bl	0 <ctf_strptr>
    241c:	ldur	w8, [x26, #-4]
    2420:	mov	x4, x0
    2424:	mov	x0, x24
    2428:	mov	x1, x25
    242c:	add	x5, x8, x21
    2430:	mov	x2, x20
    2434:	mov	x3, x19
    2438:	mov	w6, w22
    243c:	bl	22cc <ctf_type_rvisit>
    2440:	cbnz	w0, 24b8 <ctf_type_rvisit+0x1ec>
    2444:	subs	w23, w23, #0x1
    2448:	add	x26, x26, #0xc
    244c:	b.ne	2408 <ctf_type_rvisit+0x13c>  // b.any
    2450:	b	24b8 <ctf_type_rvisit+0x1ec>
    2454:	cbz	w23, 24b4 <ctf_type_rvisit+0x1e8>
    2458:	add	w22, w22, #0x1
    245c:	add	x26, x24, #0x8
    2460:	ldur	x24, [x29, #-8]
    2464:	ldur	w1, [x26, #-8]
    2468:	ldr	w25, [x26]
    246c:	mov	x0, x24
    2470:	bl	0 <ctf_strptr>
    2474:	ldur	w8, [x26, #-4]
    2478:	ldr	w9, [x26, #4]
    247c:	mov	x4, x0
    2480:	mov	x0, x24
    2484:	mov	x1, x25
    2488:	bfi	x9, x8, #32, #32
    248c:	add	x5, x9, x21
    2490:	mov	x2, x20
    2494:	mov	x3, x19
    2498:	mov	w6, w22
    249c:	bl	22cc <ctf_type_rvisit>
    24a0:	cbnz	w0, 24b8 <ctf_type_rvisit+0x1ec>
    24a4:	subs	w23, w23, #0x1
    24a8:	add	x26, x26, #0x10
    24ac:	b.ne	2460 <ctf_type_rvisit+0x194>  // b.any
    24b0:	b	24b8 <ctf_type_rvisit+0x1ec>
    24b4:	mov	w0, wzr
    24b8:	ldp	x20, x19, [sp, #96]
    24bc:	ldp	x22, x21, [sp, #80]
    24c0:	ldp	x24, x23, [sp, #64]
    24c4:	ldp	x26, x25, [sp, #48]
    24c8:	ldp	x29, x30, [sp, #32]
    24cc:	add	sp, sp, #0x70
    24d0:	ret

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	ldr	x8, [x0]
   4:	str	x1, [x0]
   8:	cmp	x8, #0x0
   c:	stp	x8, xzr, [x1]
  10:	csel	x8, x0, x8, eq  // eq = none
  14:	str	x1, [x8, #8]
  18:	ret

000000000000001c <ctf_list_prepend>:
  1c:	ldr	x8, [x0, #8]
  20:	str	x1, [x0, #8]
  24:	cmp	x8, #0x0
  28:	stp	xzr, x8, [x1]
  2c:	csel	x8, x0, x8, eq  // eq = none
  30:	str	x1, [x8]
  34:	ret

0000000000000038 <ctf_list_delete>:
  38:	ldp	x8, x9, [x1]
  3c:	cmp	x8, #0x0
  40:	csel	x10, x0, x8, eq  // eq = none
  44:	str	x9, [x10, #8]
  48:	ldr	x9, [x1, #8]
  4c:	cmp	x9, #0x0
  50:	csel	x9, x0, x9, eq  // eq = none
  54:	str	x8, [x9]
  58:	ret

000000000000005c <ctf_list_empty_p>:
  5c:	ldr	x8, [x0, #8]
  60:	cbz	x8, 6c <ctf_list_empty_p+0x10>
  64:	mov	w0, wzr
  68:	ret
  6c:	ldr	x8, [x0]
  70:	cmp	x8, #0x0
  74:	cset	w0, eq  // eq = none
  78:	ret

000000000000007c <ctf_sym_to_elf64>:
  7c:	ldr	w8, [x0]
  80:	str	w8, [x1]
  84:	ldur	d0, [x0, #4]
  88:	uxtl	v0.2d, v0.2s
  8c:	stur	q0, [x1, #8]
  90:	ldrb	w8, [x0, #12]
  94:	strb	w8, [x1, #4]
  98:	ldrb	w8, [x0, #13]
  9c:	strb	w8, [x1, #5]
  a0:	ldrh	w8, [x0, #14]
  a4:	mov	x0, x1
  a8:	strh	w8, [x1, #6]
  ac:	ret

00000000000000b0 <ctf_str_append>:
  b0:	stp	x29, x30, [sp, #-64]!
  b4:	stp	x20, x19, [sp, #48]
  b8:	mov	x19, x0
  bc:	str	x23, [sp, #16]
  c0:	stp	x22, x21, [sp, #32]
  c4:	mov	x29, sp
  c8:	cbz	x1, 120 <ctf_str_append+0x70>
  cc:	mov	x20, x1
  d0:	cbz	x19, e4 <ctf_str_append+0x34>
  d4:	mov	x0, x19
  d8:	bl	0 <strlen>
  dc:	mov	x21, x0
  e0:	b	e8 <ctf_str_append+0x38>
  e4:	mov	x21, xzr
  e8:	mov	x0, x20
  ec:	bl	0 <strlen>
  f0:	add	x23, x0, x21
  f4:	mov	x22, x0
  f8:	add	x1, x23, #0x1
  fc:	mov	x0, x19
 100:	bl	0 <realloc>
 104:	mov	x19, x0
 108:	cbz	x0, 120 <ctf_str_append+0x70>
 10c:	add	x0, x19, x21
 110:	mov	x1, x20
 114:	mov	x2, x22
 118:	bl	0 <memcpy>
 11c:	strb	wzr, [x19, x23]
 120:	mov	x0, x19
 124:	ldp	x20, x19, [sp, #48]
 128:	ldp	x22, x21, [sp, #32]
 12c:	ldr	x23, [sp, #16]
 130:	ldp	x29, x30, [sp], #64
 134:	ret

0000000000000138 <ctf_str_append_noerr>:
 138:	stp	x29, x30, [sp, #-64]!
 13c:	stp	x22, x21, [sp, #32]
 140:	stp	x20, x19, [sp, #48]
 144:	mov	x19, x0
 148:	mov	x22, x0
 14c:	stp	x24, x23, [sp, #16]
 150:	mov	x29, sp
 154:	cbz	x1, 1ac <ctf_str_append_noerr+0x74>
 158:	mov	x20, x1
 15c:	cbz	x19, 170 <ctf_str_append_noerr+0x38>
 160:	mov	x0, x19
 164:	bl	0 <strlen>
 168:	mov	x21, x0
 16c:	b	174 <ctf_str_append_noerr+0x3c>
 170:	mov	x21, xzr
 174:	mov	x0, x20
 178:	bl	0 <strlen>
 17c:	add	x24, x0, x21
 180:	mov	x23, x0
 184:	add	x1, x24, #0x1
 188:	mov	x0, x19
 18c:	bl	0 <realloc>
 190:	mov	x22, x0
 194:	cbz	x0, 1ac <ctf_str_append_noerr+0x74>
 198:	add	x0, x22, x21
 19c:	mov	x1, x20
 1a0:	mov	x2, x23
 1a4:	bl	0 <memcpy>
 1a8:	strb	wzr, [x22, x24]
 1ac:	cmp	x22, #0x0
 1b0:	csel	x0, x19, x22, eq  // eq = none
 1b4:	ldp	x20, x19, [sp, #48]
 1b8:	ldp	x22, x21, [sp, #32]
 1bc:	ldp	x24, x23, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret

00000000000001c8 <ctf_realloc>:
 1c8:	stp	x29, x30, [sp, #-16]!
 1cc:	mov	x9, x2
 1d0:	ldr	x2, [x0, #376]
 1d4:	mov	x29, sp
 1d8:	cbz	x2, 1fc <ctf_realloc+0x34>
 1dc:	mov	x8, x0
 1e0:	adrp	x0, 0 <ctf_list_append>
 1e4:	add	x0, x0, #0x0
 1e8:	mov	x1, x8
 1ec:	bl	0 <ctf_dprintf>
 1f0:	mov	x0, xzr
 1f4:	ldp	x29, x30, [sp], #16
 1f8:	ret
 1fc:	mov	x0, x1
 200:	mov	x1, x9
 204:	ldp	x29, x30, [sp], #16
 208:	b	0 <realloc>

000000000000020c <ctf_set_open_errno>:
 20c:	cbz	x0, 214 <ctf_set_open_errno+0x8>
 210:	str	w1, [x0]
 214:	mov	x0, xzr
 218:	ret

000000000000021c <ctf_set_errno>:
 21c:	mov	x8, x0
 220:	mov	x0, #0xffffffffffffffff    	// #-1
 224:	str	w1, [x8, #556]
 228:	ret
