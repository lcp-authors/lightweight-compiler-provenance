
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cmp.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_cmd_cmp>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	cmp	w1, #0x2
   c:	b.eq	28 <grub_cmd_cmp+0x28>  // b.none
  10:	adrp	x0, 0 <grub_cmd_cmp>
  14:	ldr	x1, [x0]
  18:	mov	w0, #0x12                  	// #18
  1c:	bl	0 <grub_error>
  20:	ldp	x29, x30, [sp], #80
  24:	ret
  28:	stp	x19, x20, [sp, #16]
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	x19, x2
  34:	ldr	x2, [x2, #8]
  38:	ldr	x1, [x19]
  3c:	adrp	x0, 0 <grub_cmd_cmp>
  40:	ldr	x0, [x0]
  44:	bl	0 <grub_printf_>
  48:	mov	w1, #0x2d                  	// #45
  4c:	ldr	x0, [x19]
  50:	bl	0 <grub_file_open>
  54:	mov	x21, x0
  58:	mov	w1, #0x2d                  	// #45
  5c:	ldr	x0, [x19, #8]
  60:	bl	0 <grub_file_open>
  64:	mov	x20, x0
  68:	cmp	x21, #0x0
  6c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  70:	b.eq	1a8 <grub_cmd_cmp+0x1a8>  // b.none
  74:	stp	x23, x24, [sp, #48]
  78:	ldr	x1, [x21, #64]
  7c:	ldr	x3, [x0, #64]
  80:	cmp	x1, x3
  84:	b.eq	e4 <grub_cmd_cmp+0xe4>  // b.none
  88:	ldr	x4, [x19, #8]
  8c:	ldr	x2, [x19]
  90:	adrp	x0, 0 <grub_cmd_cmp>
  94:	ldr	x0, [x0]
  98:	bl	0 <grub_printf_>
  9c:	mov	x22, #0x0                   	// #0
  a0:	mov	x23, #0x0                   	// #0
  a4:	mov	x0, x23
  a8:	bl	0 <grub_free>
  ac:	mov	x0, x22
  b0:	bl	0 <grub_free>
  b4:	ldp	x23, x24, [sp, #48]
  b8:	mov	x0, x21
  bc:	bl	0 <grub_file_close>
  c0:	cbz	x20, cc <grub_cmd_cmp+0xcc>
  c4:	mov	x0, x20
  c8:	bl	0 <grub_file_close>
  cc:	adrp	x0, 0 <grub_cmd_cmp>
  d0:	ldr	x0, [x0]
  d4:	ldr	w0, [x0]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	b	20 <grub_cmd_cmp+0x20>
  e4:	mov	x0, #0x200                 	// #512
  e8:	bl	0 <grub_malloc>
  ec:	mov	x23, x0
  f0:	mov	x0, #0x200                 	// #512
  f4:	bl	0 <grub_malloc>
  f8:	mov	x22, x0
  fc:	cmp	x23, #0x0
 100:	ccmp	x0, #0x0, #0x4, ne  // ne = any
 104:	b.eq	a4 <grub_cmd_cmp+0xa4>  // b.none
 108:	stp	x25, x26, [sp, #64]
 10c:	mov	x25, #0x0                   	// #0
 110:	mov	x24, #0x200                 	// #512
 114:	mov	x2, x24
 118:	mov	x1, x23
 11c:	mov	x0, x21
 120:	bl	0 <grub_file_read>
 124:	mov	x26, x0
 128:	mov	x2, x24
 12c:	mov	x1, x22
 130:	mov	x0, x20
 134:	bl	0 <grub_file_read>
 138:	cmp	x26, x0
 13c:	b.ne	1c0 <grub_cmd_cmp+0x1c0>  // b.any
 140:	cmp	x0, #0x0
 144:	b.le	190 <grub_cmd_cmp+0x190>
 148:	mov	x1, #0x0                   	// #0
 14c:	ldrb	w2, [x23, x1]
 150:	ldrb	w4, [x22, x1]
 154:	cmp	w2, w4
 158:	b.ne	170 <grub_cmd_cmp+0x170>  // b.any
 15c:	add	x1, x1, #0x1
 160:	cmp	x1, x0
 164:	b.ne	14c <grub_cmd_cmp+0x14c>  // b.any
 168:	add	x25, x25, #0x200
 16c:	b	114 <grub_cmd_cmp+0x114>
 170:	ldr	x5, [x19, #8]
 174:	ldr	x3, [x19]
 178:	add	x1, x1, x25
 17c:	adrp	x0, 0 <grub_cmd_cmp>
 180:	ldr	x0, [x0]
 184:	bl	0 <grub_printf_>
 188:	ldp	x25, x26, [sp, #64]
 18c:	b	a4 <grub_cmd_cmp+0xa4>
 190:	cbnz	x0, 168 <grub_cmd_cmp+0x168>
 194:	adrp	x0, 0 <grub_cmd_cmp>
 198:	ldr	x0, [x0]
 19c:	bl	0 <grub_printf_>
 1a0:	ldp	x25, x26, [sp, #64]
 1a4:	b	a4 <grub_cmd_cmp+0xa4>
 1a8:	mov	x0, #0x0                   	// #0
 1ac:	bl	0 <grub_free>
 1b0:	mov	x0, #0x0                   	// #0
 1b4:	bl	0 <grub_free>
 1b8:	cbz	x21, c0 <grub_cmd_cmp+0xc0>
 1bc:	b	b8 <grub_cmd_cmp+0xb8>
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	b	a4 <grub_cmd_cmp+0xa4>
	...

00000000000001f8 <grub_mod_init>:
 1f8:	stp	x29, x30, [sp, #-16]!
 1fc:	mov	x29, sp
 200:	mov	w4, #0x0                   	// #0
 204:	adrp	x0, 0 <grub_cmd_cmp>
 208:	ldr	x3, [x0]
 20c:	adrp	x0, 0 <grub_cmd_cmp>
 210:	ldr	x2, [x0]
 214:	adrp	x0, 0 <grub_cmd_cmp>
 218:	ldr	x1, [x0]
 21c:	adrp	x0, 0 <grub_cmd_cmp>
 220:	ldr	x0, [x0]
 224:	bl	0 <grub_register_command_prio>
 228:	adrp	x1, 0 <grub_cmd_cmp>
 22c:	ldr	x1, [x1]
 230:	str	x0, [x1]
 234:	ldp	x29, x30, [sp], #16
 238:	ret
 23c:	nop
	...

0000000000000268 <grub_mod_fini>:
 268:	stp	x29, x30, [sp, #-16]!
 26c:	mov	x29, sp
 270:	adrp	x0, 0 <grub_cmd_cmp>
 274:	ldr	x0, [x0]
 278:	ldr	x0, [x0]
 27c:	bl	0 <grub_unregister_command>
 280:	ldp	x29, x30, [sp], #16
 284:	ret
	...
