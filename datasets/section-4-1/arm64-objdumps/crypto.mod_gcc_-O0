
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//crypto.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_burn_stack-0x2c8>:
       0:	sub	sp, sp, #0x40
       4:	str	x0, [sp, #24]
       8:	str	x1, [sp, #16]
       c:	str	x2, [sp, #8]
      10:	str	x3, [sp]
      14:	ldr	x0, [sp, #16]
      18:	str	x0, [sp, #56]
      1c:	ldr	x0, [sp, #8]
      20:	str	x0, [sp, #48]
      24:	ldr	x0, [sp, #24]
      28:	str	x0, [sp, #40]
      2c:	b	80 <grub_burn_stack-0x248>
      30:	ldr	x0, [sp, #56]
      34:	ldrb	w1, [x0]
      38:	ldr	x0, [sp, #48]
      3c:	ldrb	w0, [x0]
      40:	eor	w0, w1, w0
      44:	and	w1, w0, #0xff
      48:	ldr	x0, [sp, #40]
      4c:	strb	w1, [x0]
      50:	ldr	x0, [sp, #56]
      54:	add	x0, x0, #0x1
      58:	str	x0, [sp, #56]
      5c:	ldr	x0, [sp, #48]
      60:	add	x0, x0, #0x1
      64:	str	x0, [sp, #48]
      68:	ldr	x0, [sp, #40]
      6c:	add	x0, x0, #0x1
      70:	str	x0, [sp, #40]
      74:	ldr	x0, [sp]
      78:	sub	x0, x0, #0x1
      7c:	str	x0, [sp]
      80:	ldr	x0, [sp]
      84:	cmp	x0, #0x0
      88:	b.eq	10c <grub_burn_stack-0x1bc>  // b.none
      8c:	ldr	x0, [sp, #56]
      90:	and	x0, x0, #0x7
      94:	cmp	x0, #0x0
      98:	b.ne	30 <grub_burn_stack-0x298>  // b.any
      9c:	ldr	x0, [sp, #48]
      a0:	and	x0, x0, #0x7
      a4:	cmp	x0, #0x0
      a8:	b.ne	30 <grub_burn_stack-0x298>  // b.any
      ac:	ldr	x0, [sp, #40]
      b0:	and	x0, x0, #0x7
      b4:	cmp	x0, #0x0
      b8:	b.ne	30 <grub_burn_stack-0x298>  // b.any
      bc:	b	10c <grub_burn_stack-0x1bc>
      c0:	ldr	x0, [sp, #56]
      c4:	ldr	x1, [x0]
      c8:	ldr	x0, [sp, #48]
      cc:	ldr	x0, [x0]
      d0:	eor	x1, x1, x0
      d4:	ldr	x0, [sp, #40]
      d8:	str	x1, [x0]
      dc:	ldr	x0, [sp, #56]
      e0:	add	x0, x0, #0x8
      e4:	str	x0, [sp, #56]
      e8:	ldr	x0, [sp, #48]
      ec:	add	x0, x0, #0x8
      f0:	str	x0, [sp, #48]
      f4:	ldr	x0, [sp, #40]
      f8:	add	x0, x0, #0x8
      fc:	str	x0, [sp, #40]
     100:	ldr	x0, [sp]
     104:	sub	x0, x0, #0x8
     108:	str	x0, [sp]
     10c:	ldr	x0, [sp]
     110:	cmp	x0, #0x7
     114:	b.hi	c0 <grub_burn_stack-0x208>  // b.pmore
     118:	b	16c <grub_burn_stack-0x15c>
     11c:	ldr	x0, [sp, #56]
     120:	ldrb	w1, [x0]
     124:	ldr	x0, [sp, #48]
     128:	ldrb	w0, [x0]
     12c:	eor	w0, w1, w0
     130:	and	w1, w0, #0xff
     134:	ldr	x0, [sp, #40]
     138:	strb	w1, [x0]
     13c:	ldr	x0, [sp, #56]
     140:	add	x0, x0, #0x1
     144:	str	x0, [sp, #56]
     148:	ldr	x0, [sp, #48]
     14c:	add	x0, x0, #0x1
     150:	str	x0, [sp, #48]
     154:	ldr	x0, [sp, #40]
     158:	add	x0, x0, #0x1
     15c:	str	x0, [sp, #40]
     160:	ldr	x0, [sp]
     164:	sub	x0, x0, #0x1
     168:	str	x0, [sp]
     16c:	ldr	x0, [sp]
     170:	cmp	x0, #0x0
     174:	b.ne	11c <grub_burn_stack-0x1ac>  // b.any
     178:	nop
     17c:	nop
     180:	add	sp, sp, #0x40
     184:	ret
     188:	stp	x29, x30, [sp, #-48]!
     18c:	mov	x29, sp
     190:	str	x0, [sp, #40]
     194:	str	x1, [sp, #32]
     198:	str	x2, [sp, #24]
     19c:	ldr	x2, [sp, #24]
     1a0:	ldr	x1, [sp, #32]
     1a4:	ldr	x0, [sp, #40]
     1a8:	bl	0 <grub_memmove>
     1ac:	ldp	x29, x30, [sp], #48
     1b0:	ret
     1b4:	sub	sp, sp, #0x10
     1b8:	str	w0, [sp, #12]
     1bc:	ldr	w0, [sp, #12]
     1c0:	cmp	w0, #0x1f
     1c4:	b.le	1dc <grub_burn_stack-0xec>
     1c8:	ldr	w0, [sp, #12]
     1cc:	cmp	w0, #0x7e
     1d0:	b.gt	1dc <grub_burn_stack-0xec>
     1d4:	mov	w0, #0x1                   	// #1
     1d8:	b	1e0 <grub_burn_stack-0xe8>
     1dc:	mov	w0, #0x0                   	// #0
     1e0:	add	sp, sp, #0x10
     1e4:	ret
     1e8:	sub	sp, sp, #0x10
     1ec:	str	w0, [sp, #12]
     1f0:	ldr	w0, [sp, #12]
     1f4:	cmp	w0, #0x40
     1f8:	b.le	214 <grub_burn_stack-0xb4>
     1fc:	ldr	w0, [sp, #12]
     200:	cmp	w0, #0x5a
     204:	b.gt	214 <grub_burn_stack-0xb4>
     208:	ldr	w0, [sp, #12]
     20c:	add	w0, w0, #0x20
     210:	b	218 <grub_burn_stack-0xb0>
     214:	ldr	w0, [sp, #12]
     218:	add	sp, sp, #0x10
     21c:	ret
     220:	stp	x29, x30, [sp, #-48]!
     224:	mov	x29, sp
     228:	str	x19, [sp, #16]
     22c:	str	x0, [sp, #40]
     230:	str	x1, [sp, #32]
     234:	b	274 <grub_burn_stack-0x54>
     238:	ldr	x0, [sp, #40]
     23c:	ldrb	w0, [x0]
     240:	bl	1e8 <grub_burn_stack-0xe0>
     244:	mov	w19, w0
     248:	ldr	x0, [sp, #32]
     24c:	ldrb	w0, [x0]
     250:	bl	1e8 <grub_burn_stack-0xe0>
     254:	cmp	w19, w0
     258:	b.ne	298 <grub_burn_stack-0x30>  // b.any
     25c:	ldr	x0, [sp, #40]
     260:	add	x0, x0, #0x1
     264:	str	x0, [sp, #40]
     268:	ldr	x0, [sp, #32]
     26c:	add	x0, x0, #0x1
     270:	str	x0, [sp, #32]
     274:	ldr	x0, [sp, #40]
     278:	ldrb	w0, [x0]
     27c:	cmp	w0, #0x0
     280:	b.eq	29c <grub_burn_stack-0x2c>  // b.none
     284:	ldr	x0, [sp, #32]
     288:	ldrb	w0, [x0]
     28c:	cmp	w0, #0x0
     290:	b.ne	238 <grub_burn_stack-0x90>  // b.any
     294:	b	29c <grub_burn_stack-0x2c>
     298:	nop
     29c:	ldr	x0, [sp, #40]
     2a0:	ldrb	w0, [x0]
     2a4:	bl	1e8 <grub_burn_stack-0xe0>
     2a8:	mov	w19, w0
     2ac:	ldr	x0, [sp, #32]
     2b0:	ldrb	w0, [x0]
     2b4:	bl	1e8 <grub_burn_stack-0xe0>
     2b8:	sub	w0, w19, w0
     2bc:	ldr	x19, [sp, #16]
     2c0:	ldp	x29, x30, [sp], #48
     2c4:	ret

00000000000002c8 <grub_burn_stack>:
     2c8:	stp	x29, x30, [sp, #-96]!
     2cc:	mov	x29, sp
     2d0:	str	x0, [sp, #24]
     2d4:	add	x0, sp, #0x20
     2d8:	mov	x2, #0x40                  	// #64
     2dc:	mov	w1, #0x0                   	// #0
     2e0:	bl	0 <grub_memset>
     2e4:	ldr	x0, [sp, #24]
     2e8:	cmp	x0, #0x40
     2ec:	b.ls	2fc <grub_burn_stack+0x34>  // b.plast
     2f0:	ldr	x0, [sp, #24]
     2f4:	sub	x0, x0, #0x40
     2f8:	bl	2c8 <grub_burn_stack>
     2fc:	nop
     300:	ldp	x29, x30, [sp], #96
     304:	ret

0000000000000308 <_gcry_burn_stack>:
     308:	stp	x29, x30, [sp, #-32]!
     30c:	mov	x29, sp
     310:	str	w0, [sp, #28]
     314:	ldrsw	x0, [sp, #28]
     318:	bl	2c8 <grub_burn_stack>
     31c:	nop
     320:	ldp	x29, x30, [sp], #32
     324:	ret

0000000000000328 <_gcry_assert_failed>:
     328:	stp	x29, x30, [sp, #-48]!
     32c:	mov	x29, sp
     330:	str	x0, [sp, #40]
     334:	str	x1, [sp, #32]
     338:	str	w2, [sp, #28]
     33c:	str	x3, [sp, #16]
     340:	ldr	x4, [sp, #16]
     344:	ldr	w3, [sp, #28]
     348:	ldr	x2, [sp, #32]
     34c:	ldr	x1, [sp, #40]
     350:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     354:	add	x0, x0, #0x0
     358:	ldr	x0, [x0]
     35c:	bl	0 <grub_fatal>
	...

0000000000000368 <_gcry_log_error>:
     368:	stp	x29, x30, [sp, #-176]!
     36c:	mov	x29, sp
     370:	str	x0, [sp, #56]
     374:	str	x1, [sp, #120]
     378:	str	x2, [sp, #128]
     37c:	str	x3, [sp, #136]
     380:	str	x4, [sp, #144]
     384:	str	x5, [sp, #152]
     388:	str	x6, [sp, #160]
     38c:	str	x7, [sp, #168]
     390:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     394:	add	x0, x0, #0x0
     398:	ldr	x0, [x0]
     39c:	bl	0 <grub_env_get>
     3a0:	str	x0, [sp, #104]
     3a4:	ldr	x0, [sp, #104]
     3a8:	cmp	x0, #0x0
     3ac:	b.eq	44c <_gcry_log_error+0xe4>  // b.none
     3b0:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     3b4:	add	x0, x0, #0x0
     3b8:	ldr	x1, [x0]
     3bc:	ldr	x0, [sp, #104]
     3c0:	bl	0 <grub_strword>
     3c4:	cmp	w0, #0x0
     3c8:	b.ne	3e8 <_gcry_log_error+0x80>  // b.any
     3cc:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     3d0:	add	x0, x0, #0x0
     3d4:	ldr	x1, [x0]
     3d8:	ldr	x0, [sp, #104]
     3dc:	bl	0 <grub_strword>
     3e0:	cmp	w0, #0x0
     3e4:	b.eq	450 <_gcry_log_error+0xe8>  // b.none
     3e8:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     3ec:	add	x0, x0, #0x0
     3f0:	ldr	x0, [x0]
     3f4:	bl	0 <grub_printf>
     3f8:	add	x0, sp, #0xb0
     3fc:	str	x0, [sp, #72]
     400:	add	x0, sp, #0xb0
     404:	str	x0, [sp, #80]
     408:	add	x0, sp, #0x70
     40c:	str	x0, [sp, #88]
     410:	mov	w0, #0xffffffc8            	// #-56
     414:	str	w0, [sp, #96]
     418:	str	wzr, [sp, #100]
     41c:	add	x2, sp, #0x10
     420:	add	x3, sp, #0x48
     424:	ldp	x0, x1, [x3]
     428:	stp	x0, x1, [x2]
     42c:	ldp	x0, x1, [x3, #16]
     430:	stp	x0, x1, [x2, #16]
     434:	add	x0, sp, #0x10
     438:	mov	x1, x0
     43c:	ldr	x0, [sp, #56]
     440:	bl	0 <grub_vprintf>
     444:	bl	0 <grub_refresh>
     448:	b	450 <_gcry_log_error+0xe8>
     44c:	nop
     450:	ldp	x29, x30, [sp], #176
     454:	ret
	...

0000000000000478 <grub_cipher_register>:
     478:	sub	sp, sp, #0x10
     47c:	str	x0, [sp, #8]
     480:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     484:	add	x0, x0, #0x0
     488:	ldr	x0, [x0]
     48c:	ldr	x1, [x0]
     490:	ldr	x0, [sp, #8]
     494:	str	x1, [x0, #88]
     498:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     49c:	add	x0, x0, #0x0
     4a0:	ldr	x0, [x0]
     4a4:	ldr	x1, [sp, #8]
     4a8:	str	x1, [x0]
     4ac:	nop
     4b0:	add	sp, sp, #0x10
     4b4:	ret
	...

00000000000004c0 <grub_cipher_unregister>:
     4c0:	sub	sp, sp, #0x20
     4c4:	str	x0, [sp, #8]
     4c8:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     4cc:	add	x0, x0, #0x0
     4d0:	ldr	x0, [x0]
     4d4:	str	x0, [sp, #24]
     4d8:	b	518 <grub_cipher_unregister+0x58>
     4dc:	ldr	x0, [sp, #24]
     4e0:	ldr	x0, [x0]
     4e4:	ldr	x1, [sp, #8]
     4e8:	cmp	x1, x0
     4ec:	b.ne	508 <grub_cipher_unregister+0x48>  // b.any
     4f0:	ldr	x0, [sp, #24]
     4f4:	ldr	x0, [x0]
     4f8:	ldr	x1, [x0, #88]
     4fc:	ldr	x0, [sp, #24]
     500:	str	x1, [x0]
     504:	b	52c <grub_cipher_unregister+0x6c>
     508:	ldr	x0, [sp, #24]
     50c:	ldr	x0, [x0]
     510:	add	x0, x0, #0x58
     514:	str	x0, [sp, #24]
     518:	ldr	x0, [sp, #24]
     51c:	ldr	x0, [x0]
     520:	cmp	x0, #0x0
     524:	b.ne	4dc <grub_cipher_unregister+0x1c>  // b.any
     528:	nop
     52c:	nop
     530:	add	sp, sp, #0x20
     534:	ret
	...

0000000000000540 <grub_md_register>:
     540:	sub	sp, sp, #0x10
     544:	str	x0, [sp, #8]
     548:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     54c:	add	x0, x0, #0x0
     550:	ldr	x0, [x0]
     554:	ldr	x1, [x0]
     558:	ldr	x0, [sp, #8]
     55c:	str	x1, [x0, #88]
     560:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     564:	add	x0, x0, #0x0
     568:	ldr	x0, [x0]
     56c:	ldr	x1, [sp, #8]
     570:	str	x1, [x0]
     574:	nop
     578:	add	sp, sp, #0x10
     57c:	ret
	...

0000000000000588 <grub_md_unregister>:
     588:	sub	sp, sp, #0x20
     58c:	str	x0, [sp, #8]
     590:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     594:	add	x0, x0, #0x0
     598:	ldr	x0, [x0]
     59c:	str	x0, [sp, #24]
     5a0:	b	5e0 <grub_md_unregister+0x58>
     5a4:	ldr	x0, [sp, #24]
     5a8:	ldr	x0, [x0]
     5ac:	ldr	x1, [sp, #8]
     5b0:	cmp	x1, x0
     5b4:	b.ne	5d0 <grub_md_unregister+0x48>  // b.any
     5b8:	ldr	x0, [sp, #24]
     5bc:	ldr	x0, [x0]
     5c0:	ldr	x1, [x0, #88]
     5c4:	ldr	x0, [sp, #24]
     5c8:	str	x1, [x0]
     5cc:	b	5f4 <grub_md_unregister+0x6c>
     5d0:	ldr	x0, [sp, #24]
     5d4:	ldr	x0, [x0]
     5d8:	add	x0, x0, #0x58
     5dc:	str	x0, [sp, #24]
     5e0:	ldr	x0, [sp, #24]
     5e4:	ldr	x0, [x0]
     5e8:	cmp	x0, #0x0
     5ec:	b.ne	5a4 <grub_md_unregister+0x1c>  // b.any
     5f0:	nop
     5f4:	nop
     5f8:	add	sp, sp, #0x20
     5fc:	ret
	...

0000000000000608 <grub_crypto_hash>:
     608:	stp	x29, x30, [sp, #-304]!
     60c:	mov	x29, sp
     610:	str	x0, [sp, #40]
     614:	str	x1, [sp, #32]
     618:	str	x2, [sp, #24]
     61c:	str	x3, [sp, #16]
     620:	ldr	x0, [sp, #40]
     624:	ldr	x0, [x0, #72]
     628:	cmp	x0, #0x100
     62c:	b.ls	640 <grub_crypto_hash+0x38>  // b.plast
     630:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     634:	add	x0, x0, #0x0
     638:	ldr	x0, [x0]
     63c:	bl	0 <grub_fatal>
     640:	ldr	x0, [sp, #40]
     644:	ldr	x1, [x0, #40]
     648:	add	x0, sp, #0x30
     64c:	blr	x1
     650:	ldr	x0, [sp, #40]
     654:	ldr	x3, [x0, #48]
     658:	add	x0, sp, #0x30
     65c:	ldr	x2, [sp, #16]
     660:	ldr	x1, [sp, #24]
     664:	blr	x3
     668:	ldr	x0, [sp, #40]
     66c:	ldr	x1, [x0, #56]
     670:	add	x0, sp, #0x30
     674:	blr	x1
     678:	ldr	x0, [sp, #40]
     67c:	ldr	x1, [x0, #64]
     680:	add	x0, sp, #0x30
     684:	blr	x1
     688:	mov	x1, x0
     68c:	ldr	x0, [sp, #40]
     690:	ldr	x0, [x0, #32]
     694:	mov	x2, x0
     698:	ldr	x0, [sp, #32]
     69c:	bl	188 <grub_burn_stack-0x140>
     6a0:	nop
     6a4:	ldp	x29, x30, [sp], #304
     6a8:	ret
     6ac:	nop
	...

00000000000006b8 <grub_crypto_lookup_md_by_name>:
     6b8:	stp	x29, x30, [sp, #-48]!
     6bc:	mov	x29, sp
     6c0:	str	x0, [sp, #24]
     6c4:	mov	w0, #0x1                   	// #1
     6c8:	str	w0, [sp, #36]
     6cc:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     6d0:	add	x0, x0, #0x0
     6d4:	ldr	x0, [x0]
     6d8:	ldr	x0, [x0]
     6dc:	str	x0, [sp, #40]
     6e0:	b	714 <grub_crypto_lookup_md_by_name+0x5c>
     6e4:	ldr	x0, [sp, #40]
     6e8:	ldr	x0, [x0]
     6ec:	mov	x1, x0
     6f0:	ldr	x0, [sp, #24]
     6f4:	bl	220 <grub_burn_stack-0xa8>
     6f8:	cmp	w0, #0x0
     6fc:	b.ne	708 <grub_crypto_lookup_md_by_name+0x50>  // b.any
     700:	ldr	x0, [sp, #40]
     704:	b	768 <grub_crypto_lookup_md_by_name+0xb0>
     708:	ldr	x0, [sp, #40]
     70c:	ldr	x0, [x0, #88]
     710:	str	x0, [sp, #40]
     714:	ldr	x0, [sp, #40]
     718:	cmp	x0, #0x0
     71c:	b.ne	6e4 <grub_crypto_lookup_md_by_name+0x2c>  // b.any
     720:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     724:	add	x0, x0, #0x0
     728:	ldr	x0, [x0]
     72c:	ldr	x0, [x0]
     730:	cmp	x0, #0x0
     734:	b.eq	764 <grub_crypto_lookup_md_by_name+0xac>  // b.none
     738:	ldr	w0, [sp, #36]
     73c:	cmp	w0, #0x0
     740:	b.eq	764 <grub_crypto_lookup_md_by_name+0xac>  // b.none
     744:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     748:	add	x0, x0, #0x0
     74c:	ldr	x0, [x0]
     750:	ldr	x1, [x0]
     754:	ldr	x0, [sp, #24]
     758:	blr	x1
     75c:	str	wzr, [sp, #36]
     760:	b	6cc <grub_crypto_lookup_md_by_name+0x14>
     764:	mov	x0, #0x0                   	// #0
     768:	ldp	x29, x30, [sp], #48
     76c:	ret
	...

0000000000000780 <grub_crypto_lookup_cipher_by_name>:
     780:	stp	x29, x30, [sp, #-64]!
     784:	mov	x29, sp
     788:	str	x0, [sp, #24]
     78c:	mov	w0, #0x1                   	// #1
     790:	str	w0, [sp, #52]
     794:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     798:	add	x0, x0, #0x0
     79c:	ldr	x0, [x0]
     7a0:	ldr	x0, [x0]
     7a4:	str	x0, [sp, #56]
     7a8:	b	844 <grub_crypto_lookup_cipher_by_name+0xc4>
     7ac:	ldr	x0, [sp, #56]
     7b0:	ldr	x0, [x0]
     7b4:	mov	x1, x0
     7b8:	ldr	x0, [sp, #24]
     7bc:	bl	220 <grub_burn_stack-0xa8>
     7c0:	cmp	w0, #0x0
     7c4:	b.ne	7d0 <grub_crypto_lookup_cipher_by_name+0x50>  // b.any
     7c8:	ldr	x0, [sp, #56]
     7cc:	b	898 <grub_crypto_lookup_cipher_by_name+0x118>
     7d0:	ldr	x0, [sp, #56]
     7d4:	ldr	x0, [x0, #8]
     7d8:	cmp	x0, #0x0
     7dc:	b.eq	834 <grub_crypto_lookup_cipher_by_name+0xb4>  // b.none
     7e0:	ldr	x0, [sp, #56]
     7e4:	ldr	x0, [x0, #8]
     7e8:	str	x0, [sp, #40]
     7ec:	b	820 <grub_crypto_lookup_cipher_by_name+0xa0>
     7f0:	ldr	x0, [sp, #40]
     7f4:	ldr	x0, [x0]
     7f8:	mov	x1, x0
     7fc:	ldr	x0, [sp, #24]
     800:	bl	220 <grub_burn_stack-0xa8>
     804:	cmp	w0, #0x0
     808:	b.ne	814 <grub_crypto_lookup_cipher_by_name+0x94>  // b.any
     80c:	ldr	x0, [sp, #56]
     810:	b	898 <grub_crypto_lookup_cipher_by_name+0x118>
     814:	ldr	x0, [sp, #40]
     818:	add	x0, x0, #0x8
     81c:	str	x0, [sp, #40]
     820:	ldr	x0, [sp, #40]
     824:	ldr	x0, [x0]
     828:	cmp	x0, #0x0
     82c:	b.ne	7f0 <grub_crypto_lookup_cipher_by_name+0x70>  // b.any
     830:	b	838 <grub_crypto_lookup_cipher_by_name+0xb8>
     834:	nop
     838:	ldr	x0, [sp, #56]
     83c:	ldr	x0, [x0, #88]
     840:	str	x0, [sp, #56]
     844:	ldr	x0, [sp, #56]
     848:	cmp	x0, #0x0
     84c:	b.ne	7ac <grub_crypto_lookup_cipher_by_name+0x2c>  // b.any
     850:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     854:	add	x0, x0, #0x0
     858:	ldr	x0, [x0]
     85c:	ldr	x0, [x0]
     860:	cmp	x0, #0x0
     864:	b.eq	894 <grub_crypto_lookup_cipher_by_name+0x114>  // b.none
     868:	ldr	w0, [sp, #52]
     86c:	cmp	w0, #0x0
     870:	b.eq	894 <grub_crypto_lookup_cipher_by_name+0x114>  // b.none
     874:	adrp	x0, 0 <grub_burn_stack-0x2c8>
     878:	add	x0, x0, #0x0
     87c:	ldr	x0, [x0]
     880:	ldr	x1, [x0]
     884:	ldr	x0, [sp, #24]
     888:	blr	x1
     88c:	str	wzr, [sp, #52]
     890:	b	794 <grub_crypto_lookup_cipher_by_name+0x14>
     894:	mov	x0, #0x0                   	// #0
     898:	ldp	x29, x30, [sp], #64
     89c:	ret
	...

00000000000008b0 <grub_crypto_cipher_open>:
     8b0:	stp	x29, x30, [sp, #-48]!
     8b4:	mov	x29, sp
     8b8:	str	x0, [sp, #24]
     8bc:	ldr	x0, [sp, #24]
     8c0:	ldr	x0, [x0, #40]
     8c4:	add	x0, x0, #0x8
     8c8:	bl	0 <grub_malloc>
     8cc:	str	x0, [sp, #40]
     8d0:	ldr	x0, [sp, #40]
     8d4:	cmp	x0, #0x0
     8d8:	b.ne	8e4 <grub_crypto_cipher_open+0x34>  // b.any
     8dc:	mov	x0, #0x0                   	// #0
     8e0:	b	8f4 <grub_crypto_cipher_open+0x44>
     8e4:	ldr	x0, [sp, #40]
     8e8:	ldr	x1, [sp, #24]
     8ec:	str	x1, [x0]
     8f0:	ldr	x0, [sp, #40]
     8f4:	ldp	x29, x30, [sp], #48
     8f8:	ret

00000000000008fc <grub_crypto_cipher_set_key>:
     8fc:	stp	x29, x30, [sp, #-48]!
     900:	mov	x29, sp
     904:	str	x0, [sp, #40]
     908:	str	x1, [sp, #32]
     90c:	str	w2, [sp, #28]
     910:	ldr	x0, [sp, #40]
     914:	ldr	x0, [x0]
     918:	ldr	x3, [x0, #48]
     91c:	ldr	x0, [sp, #40]
     920:	add	x0, x0, #0x8
     924:	ldr	w2, [sp, #28]
     928:	ldr	x1, [sp, #32]
     92c:	blr	x3
     930:	ldp	x29, x30, [sp], #48
     934:	ret

0000000000000938 <grub_crypto_ecb_decrypt>:
     938:	stp	x29, x30, [sp, #-80]!
     93c:	mov	x29, sp
     940:	str	x0, [sp, #40]
     944:	str	x1, [sp, #32]
     948:	str	x2, [sp, #24]
     94c:	str	x3, [sp, #16]
     950:	ldr	x0, [sp, #40]
     954:	ldr	x0, [x0]
     958:	ldr	x0, [x0, #64]
     95c:	cmp	x0, #0x0
     960:	b.ne	96c <grub_crypto_ecb_decrypt+0x34>  // b.any
     964:	mov	w0, #0x19                  	// #25
     968:	b	a38 <grub_crypto_ecb_decrypt+0x100>
     96c:	ldr	x0, [sp, #40]
     970:	ldr	x0, [x0]
     974:	ldr	x0, [x0, #24]
     978:	str	x0, [sp, #56]
     97c:	ldr	x0, [sp, #56]
     980:	cmp	x0, #0x0
     984:	b.eq	9b8 <grub_crypto_ecb_decrypt+0x80>  // b.none
     988:	ldr	x0, [sp, #56]
     98c:	sub	x1, x0, #0x1
     990:	ldr	x0, [sp, #56]
     994:	and	x0, x1, x0
     998:	cmp	x0, #0x0
     99c:	b.ne	9b8 <grub_crypto_ecb_decrypt+0x80>  // b.any
     9a0:	ldr	x0, [sp, #56]
     9a4:	sub	x1, x0, #0x1
     9a8:	ldr	x0, [sp, #16]
     9ac:	and	x0, x1, x0
     9b0:	cmp	x0, #0x0
     9b4:	b.eq	9c0 <grub_crypto_ecb_decrypt+0x88>  // b.none
     9b8:	mov	w0, #0xa                   	// #10
     9bc:	b	a38 <grub_crypto_ecb_decrypt+0x100>
     9c0:	ldr	x1, [sp, #24]
     9c4:	ldr	x0, [sp, #16]
     9c8:	add	x0, x1, x0
     9cc:	str	x0, [sp, #48]
     9d0:	ldr	x0, [sp, #24]
     9d4:	str	x0, [sp, #72]
     9d8:	ldr	x0, [sp, #32]
     9dc:	str	x0, [sp, #64]
     9e0:	b	a24 <grub_crypto_ecb_decrypt+0xec>
     9e4:	ldr	x0, [sp, #40]
     9e8:	ldr	x0, [x0]
     9ec:	ldr	x3, [x0, #64]
     9f0:	ldr	x0, [sp, #40]
     9f4:	add	x0, x0, #0x8
     9f8:	ldr	x2, [sp, #72]
     9fc:	ldr	x1, [sp, #64]
     a00:	blr	x3
     a04:	ldr	x1, [sp, #72]
     a08:	ldr	x0, [sp, #56]
     a0c:	add	x0, x1, x0
     a10:	str	x0, [sp, #72]
     a14:	ldr	x1, [sp, #64]
     a18:	ldr	x0, [sp, #56]
     a1c:	add	x0, x1, x0
     a20:	str	x0, [sp, #64]
     a24:	ldr	x1, [sp, #72]
     a28:	ldr	x0, [sp, #48]
     a2c:	cmp	x1, x0
     a30:	b.cc	9e4 <grub_crypto_ecb_decrypt+0xac>  // b.lo, b.ul, b.last
     a34:	mov	w0, #0x0                   	// #0
     a38:	ldp	x29, x30, [sp], #80
     a3c:	ret

0000000000000a40 <grub_crypto_ecb_encrypt>:
     a40:	stp	x29, x30, [sp, #-80]!
     a44:	mov	x29, sp
     a48:	str	x0, [sp, #40]
     a4c:	str	x1, [sp, #32]
     a50:	str	x2, [sp, #24]
     a54:	str	x3, [sp, #16]
     a58:	ldr	x0, [sp, #40]
     a5c:	ldr	x0, [x0]
     a60:	ldr	x0, [x0, #56]
     a64:	cmp	x0, #0x0
     a68:	b.ne	a74 <grub_crypto_ecb_encrypt+0x34>  // b.any
     a6c:	mov	w0, #0x19                  	// #25
     a70:	b	b40 <grub_crypto_ecb_encrypt+0x100>
     a74:	ldr	x0, [sp, #40]
     a78:	ldr	x0, [x0]
     a7c:	ldr	x0, [x0, #24]
     a80:	str	x0, [sp, #56]
     a84:	ldr	x0, [sp, #56]
     a88:	cmp	x0, #0x0
     a8c:	b.eq	ac0 <grub_crypto_ecb_encrypt+0x80>  // b.none
     a90:	ldr	x0, [sp, #56]
     a94:	sub	x1, x0, #0x1
     a98:	ldr	x0, [sp, #56]
     a9c:	and	x0, x1, x0
     aa0:	cmp	x0, #0x0
     aa4:	b.ne	ac0 <grub_crypto_ecb_encrypt+0x80>  // b.any
     aa8:	ldr	x0, [sp, #56]
     aac:	sub	x1, x0, #0x1
     ab0:	ldr	x0, [sp, #16]
     ab4:	and	x0, x1, x0
     ab8:	cmp	x0, #0x0
     abc:	b.eq	ac8 <grub_crypto_ecb_encrypt+0x88>  // b.none
     ac0:	mov	w0, #0xa                   	// #10
     ac4:	b	b40 <grub_crypto_ecb_encrypt+0x100>
     ac8:	ldr	x1, [sp, #24]
     acc:	ldr	x0, [sp, #16]
     ad0:	add	x0, x1, x0
     ad4:	str	x0, [sp, #48]
     ad8:	ldr	x0, [sp, #24]
     adc:	str	x0, [sp, #72]
     ae0:	ldr	x0, [sp, #32]
     ae4:	str	x0, [sp, #64]
     ae8:	b	b2c <grub_crypto_ecb_encrypt+0xec>
     aec:	ldr	x0, [sp, #40]
     af0:	ldr	x0, [x0]
     af4:	ldr	x3, [x0, #56]
     af8:	ldr	x0, [sp, #40]
     afc:	add	x0, x0, #0x8
     b00:	ldr	x2, [sp, #72]
     b04:	ldr	x1, [sp, #64]
     b08:	blr	x3
     b0c:	ldr	x1, [sp, #72]
     b10:	ldr	x0, [sp, #56]
     b14:	add	x0, x1, x0
     b18:	str	x0, [sp, #72]
     b1c:	ldr	x1, [sp, #64]
     b20:	ldr	x0, [sp, #56]
     b24:	add	x0, x1, x0
     b28:	str	x0, [sp, #64]
     b2c:	ldr	x1, [sp, #72]
     b30:	ldr	x0, [sp, #48]
     b34:	cmp	x1, x0
     b38:	b.cc	aec <grub_crypto_ecb_encrypt+0xac>  // b.lo, b.ul, b.last
     b3c:	mov	w0, #0x0                   	// #0
     b40:	ldp	x29, x30, [sp], #80
     b44:	ret

0000000000000b48 <grub_crypto_cbc_encrypt>:
     b48:	stp	x29, x30, [sp, #-112]!
     b4c:	mov	x29, sp
     b50:	str	x0, [sp, #56]
     b54:	str	x1, [sp, #48]
     b58:	str	x2, [sp, #40]
     b5c:	str	x3, [sp, #32]
     b60:	str	x4, [sp, #24]
     b64:	ldr	x0, [sp, #56]
     b68:	ldr	x0, [x0]
     b6c:	ldr	x0, [x0, #56]
     b70:	cmp	x0, #0x0
     b74:	b.ne	b80 <grub_crypto_cbc_encrypt+0x38>  // b.any
     b78:	mov	w0, #0x19                  	// #25
     b7c:	b	c80 <grub_crypto_cbc_encrypt+0x138>
     b80:	ldr	x0, [sp, #56]
     b84:	ldr	x0, [x0]
     b88:	ldr	x0, [x0, #24]
     b8c:	str	x0, [sp, #80]
     b90:	ldr	x0, [sp, #80]
     b94:	cmp	x0, #0x0
     b98:	b.eq	bcc <grub_crypto_cbc_encrypt+0x84>  // b.none
     b9c:	ldr	x0, [sp, #80]
     ba0:	sub	x1, x0, #0x1
     ba4:	ldr	x0, [sp, #80]
     ba8:	and	x0, x1, x0
     bac:	cmp	x0, #0x0
     bb0:	b.ne	bcc <grub_crypto_cbc_encrypt+0x84>  // b.any
     bb4:	ldr	x0, [sp, #80]
     bb8:	sub	x1, x0, #0x1
     bbc:	ldr	x0, [sp, #32]
     bc0:	and	x0, x1, x0
     bc4:	cmp	x0, #0x0
     bc8:	b.eq	bd4 <grub_crypto_cbc_encrypt+0x8c>  // b.none
     bcc:	mov	w0, #0xa                   	// #10
     bd0:	b	c80 <grub_crypto_cbc_encrypt+0x138>
     bd4:	ldr	x1, [sp, #40]
     bd8:	ldr	x0, [sp, #32]
     bdc:	add	x0, x1, x0
     be0:	str	x0, [sp, #72]
     be4:	ldr	x0, [sp, #24]
     be8:	str	x0, [sp, #88]
     bec:	ldr	x0, [sp, #40]
     bf0:	str	x0, [sp, #96]
     bf4:	ldr	x0, [sp, #48]
     bf8:	str	x0, [sp, #104]
     bfc:	b	c5c <grub_crypto_cbc_encrypt+0x114>
     c00:	ldr	x3, [sp, #80]
     c04:	ldr	x2, [sp, #88]
     c08:	ldr	x1, [sp, #96]
     c0c:	ldr	x0, [sp, #104]
     c10:	bl	0 <grub_burn_stack-0x2c8>
     c14:	ldr	x0, [sp, #56]
     c18:	ldr	x0, [x0]
     c1c:	ldr	x3, [x0, #56]
     c20:	ldr	x0, [sp, #56]
     c24:	add	x0, x0, #0x8
     c28:	ldr	x2, [sp, #104]
     c2c:	ldr	x1, [sp, #104]
     c30:	blr	x3
     c34:	ldr	x0, [sp, #104]
     c38:	str	x0, [sp, #88]
     c3c:	ldr	x1, [sp, #96]
     c40:	ldr	x0, [sp, #80]
     c44:	add	x0, x1, x0
     c48:	str	x0, [sp, #96]
     c4c:	ldr	x1, [sp, #104]
     c50:	ldr	x0, [sp, #80]
     c54:	add	x0, x1, x0
     c58:	str	x0, [sp, #104]
     c5c:	ldr	x1, [sp, #96]
     c60:	ldr	x0, [sp, #72]
     c64:	cmp	x1, x0
     c68:	b.cc	c00 <grub_crypto_cbc_encrypt+0xb8>  // b.lo, b.ul, b.last
     c6c:	ldr	x2, [sp, #80]
     c70:	ldr	x1, [sp, #88]
     c74:	ldr	x0, [sp, #24]
     c78:	bl	188 <grub_burn_stack-0x140>
     c7c:	mov	w0, #0x0                   	// #0
     c80:	ldp	x29, x30, [sp], #112
     c84:	ret

0000000000000c88 <grub_crypto_cbc_decrypt>:
     c88:	stp	x29, x30, [sp, #-112]!
     c8c:	mov	x29, sp
     c90:	str	x0, [sp, #56]
     c94:	str	x1, [sp, #48]
     c98:	str	x2, [sp, #40]
     c9c:	str	x3, [sp, #32]
     ca0:	str	x4, [sp, #24]
     ca4:	ldr	x0, [sp, #56]
     ca8:	ldr	x0, [x0]
     cac:	ldr	x0, [x0, #64]
     cb0:	cmp	x0, #0x0
     cb4:	b.ne	cc0 <grub_crypto_cbc_decrypt+0x38>  // b.any
     cb8:	mov	w0, #0x19                  	// #25
     cbc:	b	dd8 <grub_crypto_cbc_decrypt+0x150>
     cc0:	ldr	x0, [sp, #56]
     cc4:	ldr	x0, [x0]
     cc8:	ldr	x0, [x0, #24]
     ccc:	str	x0, [sp, #88]
     cd0:	ldr	x0, [sp, #88]
     cd4:	cmp	x0, #0x0
     cd8:	b.eq	d0c <grub_crypto_cbc_decrypt+0x84>  // b.none
     cdc:	ldr	x0, [sp, #88]
     ce0:	sub	x1, x0, #0x1
     ce4:	ldr	x0, [sp, #88]
     ce8:	and	x0, x1, x0
     cec:	cmp	x0, #0x0
     cf0:	b.ne	d0c <grub_crypto_cbc_decrypt+0x84>  // b.any
     cf4:	ldr	x0, [sp, #88]
     cf8:	sub	x1, x0, #0x1
     cfc:	ldr	x0, [sp, #32]
     d00:	and	x0, x1, x0
     d04:	cmp	x0, #0x0
     d08:	b.eq	d14 <grub_crypto_cbc_decrypt+0x8c>  // b.none
     d0c:	mov	w0, #0xa                   	// #10
     d10:	b	dd8 <grub_crypto_cbc_decrypt+0x150>
     d14:	ldr	x0, [sp, #88]
     d18:	cmp	x0, #0x10
     d1c:	b.ls	d28 <grub_crypto_cbc_decrypt+0xa0>  // b.plast
     d20:	mov	w0, #0xa                   	// #10
     d24:	b	dd8 <grub_crypto_cbc_decrypt+0x150>
     d28:	ldr	x1, [sp, #40]
     d2c:	ldr	x0, [sp, #32]
     d30:	add	x0, x1, x0
     d34:	str	x0, [sp, #80]
     d38:	ldr	x0, [sp, #40]
     d3c:	str	x0, [sp, #104]
     d40:	ldr	x0, [sp, #48]
     d44:	str	x0, [sp, #96]
     d48:	b	dc4 <grub_crypto_cbc_decrypt+0x13c>
     d4c:	add	x0, sp, #0x40
     d50:	ldr	x2, [sp, #88]
     d54:	ldr	x1, [sp, #104]
     d58:	bl	188 <grub_burn_stack-0x140>
     d5c:	ldr	x0, [sp, #56]
     d60:	ldr	x0, [x0]
     d64:	ldr	x3, [x0, #64]
     d68:	ldr	x0, [sp, #56]
     d6c:	add	x0, x0, #0x8
     d70:	ldr	x2, [sp, #104]
     d74:	ldr	x1, [sp, #96]
     d78:	blr	x3
     d7c:	ldr	x3, [sp, #88]
     d80:	ldr	x2, [sp, #24]
     d84:	ldr	x1, [sp, #96]
     d88:	ldr	x0, [sp, #96]
     d8c:	bl	0 <grub_burn_stack-0x2c8>
     d90:	add	x0, sp, #0x40
     d94:	ldr	x2, [sp, #88]
     d98:	mov	x1, x0
     d9c:	ldr	x0, [sp, #24]
     da0:	bl	188 <grub_burn_stack-0x140>
     da4:	ldr	x1, [sp, #104]
     da8:	ldr	x0, [sp, #88]
     dac:	add	x0, x1, x0
     db0:	str	x0, [sp, #104]
     db4:	ldr	x1, [sp, #96]
     db8:	ldr	x0, [sp, #88]
     dbc:	add	x0, x1, x0
     dc0:	str	x0, [sp, #96]
     dc4:	ldr	x1, [sp, #104]
     dc8:	ldr	x0, [sp, #80]
     dcc:	cmp	x1, x0
     dd0:	b.cc	d4c <grub_crypto_cbc_decrypt+0xc4>  // b.lo, b.ul, b.last
     dd4:	mov	w0, #0x0                   	// #0
     dd8:	ldp	x29, x30, [sp], #112
     ddc:	ret

0000000000000de0 <grub_crypto_hmac_init>:
     de0:	stp	x29, x30, [sp, #-96]!
     de4:	mov	x29, sp
     de8:	str	x0, [sp, #40]
     dec:	str	x1, [sp, #32]
     df0:	str	x2, [sp, #24]
     df4:	str	xzr, [sp, #88]
     df8:	str	xzr, [sp, #80]
     dfc:	str	xzr, [sp, #72]
     e00:	str	xzr, [sp, #56]
     e04:	str	xzr, [sp, #48]
     e08:	ldr	x0, [sp, #40]
     e0c:	ldr	x1, [x0, #32]
     e10:	ldr	x0, [sp, #40]
     e14:	ldr	x0, [x0, #80]
     e18:	cmp	x1, x0
     e1c:	b.ls	e28 <grub_crypto_hmac_init+0x48>  // b.plast
     e20:	mov	x0, #0x0                   	// #0
     e24:	b	1060 <grub_crypto_hmac_init+0x280>
     e28:	ldr	x0, [sp, #40]
     e2c:	ldr	x0, [x0, #72]
     e30:	bl	0 <grub_malloc>
     e34:	str	x0, [sp, #56]
     e38:	ldr	x0, [sp, #56]
     e3c:	cmp	x0, #0x0
     e40:	b.eq	1018 <grub_crypto_hmac_init+0x238>  // b.none
     e44:	ldr	x0, [sp, #40]
     e48:	ldr	x0, [x0, #80]
     e4c:	ldr	x1, [sp, #24]
     e50:	cmp	x1, x0
     e54:	b.ls	e9c <grub_crypto_hmac_init+0xbc>  // b.plast
     e58:	ldr	x0, [sp, #40]
     e5c:	ldr	x0, [x0, #32]
     e60:	bl	0 <grub_malloc>
     e64:	str	x0, [sp, #88]
     e68:	ldr	x0, [sp, #88]
     e6c:	cmp	x0, #0x0
     e70:	b.eq	1020 <grub_crypto_hmac_init+0x240>  // b.none
     e74:	ldr	x3, [sp, #24]
     e78:	ldr	x2, [sp, #32]
     e7c:	ldr	x1, [sp, #88]
     e80:	ldr	x0, [sp, #40]
     e84:	bl	608 <grub_crypto_hash>
     e88:	ldr	x0, [sp, #88]
     e8c:	str	x0, [sp, #32]
     e90:	ldr	x0, [sp, #40]
     e94:	ldr	x0, [x0, #32]
     e98:	str	x0, [sp, #24]
     e9c:	ldr	x0, [sp, #40]
     ea0:	ldr	x0, [x0, #80]
     ea4:	bl	0 <grub_zalloc>
     ea8:	str	x0, [sp, #80]
     eac:	ldr	x0, [sp, #80]
     eb0:	cmp	x0, #0x0
     eb4:	b.eq	1028 <grub_crypto_hmac_init+0x248>  // b.none
     eb8:	ldr	x0, [sp, #40]
     ebc:	ldr	x0, [x0, #80]
     ec0:	bl	0 <grub_zalloc>
     ec4:	str	x0, [sp, #72]
     ec8:	ldr	x0, [sp, #72]
     ecc:	cmp	x0, #0x0
     ed0:	b.eq	1030 <grub_crypto_hmac_init+0x250>  // b.none
     ed4:	ldr	x2, [sp, #24]
     ed8:	ldr	x1, [sp, #32]
     edc:	ldr	x0, [sp, #80]
     ee0:	bl	188 <grub_burn_stack-0x140>
     ee4:	ldr	x2, [sp, #24]
     ee8:	ldr	x1, [sp, #32]
     eec:	ldr	x0, [sp, #72]
     ef0:	bl	188 <grub_burn_stack-0x140>
     ef4:	str	wzr, [sp, #68]
     ef8:	b	f60 <grub_crypto_hmac_init+0x180>
     efc:	ldr	w0, [sp, #68]
     f00:	ldr	x1, [sp, #80]
     f04:	add	x0, x1, x0
     f08:	ldrb	w2, [x0]
     f0c:	ldr	w0, [sp, #68]
     f10:	ldr	x1, [sp, #80]
     f14:	add	x0, x1, x0
     f18:	mov	w1, #0x36                  	// #54
     f1c:	eor	w1, w2, w1
     f20:	and	w1, w1, #0xff
     f24:	strb	w1, [x0]
     f28:	ldr	w0, [sp, #68]
     f2c:	ldr	x1, [sp, #72]
     f30:	add	x0, x1, x0
     f34:	ldrb	w2, [x0]
     f38:	ldr	w0, [sp, #68]
     f3c:	ldr	x1, [sp, #72]
     f40:	add	x0, x1, x0
     f44:	mov	w1, #0x5c                  	// #92
     f48:	eor	w1, w2, w1
     f4c:	and	w1, w1, #0xff
     f50:	strb	w1, [x0]
     f54:	ldr	w0, [sp, #68]
     f58:	add	w0, w0, #0x1
     f5c:	str	w0, [sp, #68]
     f60:	ldr	w1, [sp, #68]
     f64:	ldr	x0, [sp, #40]
     f68:	ldr	x0, [x0, #80]
     f6c:	cmp	x1, x0
     f70:	b.cc	efc <grub_crypto_hmac_init+0x11c>  // b.lo, b.ul, b.last
     f74:	ldr	x0, [sp, #88]
     f78:	bl	0 <grub_free>
     f7c:	str	xzr, [sp, #88]
     f80:	ldr	x0, [sp, #40]
     f84:	ldr	x1, [x0, #40]
     f88:	ldr	x0, [sp, #56]
     f8c:	blr	x1
     f90:	ldr	x0, [sp, #40]
     f94:	ldr	x3, [x0, #48]
     f98:	ldr	x0, [sp, #40]
     f9c:	ldr	x0, [x0, #80]
     fa0:	mov	x2, x0
     fa4:	ldr	x1, [sp, #80]
     fa8:	ldr	x0, [sp, #56]
     fac:	blr	x3
     fb0:	ldr	x0, [sp, #40]
     fb4:	ldr	x0, [x0, #80]
     fb8:	mov	x2, x0
     fbc:	mov	w1, #0x0                   	// #0
     fc0:	ldr	x0, [sp, #80]
     fc4:	bl	0 <grub_memset>
     fc8:	ldr	x0, [sp, #80]
     fcc:	bl	0 <grub_free>
     fd0:	str	xzr, [sp, #80]
     fd4:	mov	x0, #0x18                  	// #24
     fd8:	bl	0 <grub_malloc>
     fdc:	str	x0, [sp, #48]
     fe0:	ldr	x0, [sp, #48]
     fe4:	cmp	x0, #0x0
     fe8:	b.eq	1038 <grub_crypto_hmac_init+0x258>  // b.none
     fec:	ldr	x0, [sp, #48]
     ff0:	ldr	x1, [sp, #40]
     ff4:	str	x1, [x0]
     ff8:	ldr	x0, [sp, #48]
     ffc:	ldr	x1, [sp, #56]
    1000:	str	x1, [x0, #8]
    1004:	ldr	x0, [sp, #48]
    1008:	ldr	x1, [sp, #72]
    100c:	str	x1, [x0, #16]
    1010:	ldr	x0, [sp, #48]
    1014:	b	1060 <grub_crypto_hmac_init+0x280>
    1018:	nop
    101c:	b	103c <grub_crypto_hmac_init+0x25c>
    1020:	nop
    1024:	b	103c <grub_crypto_hmac_init+0x25c>
    1028:	nop
    102c:	b	103c <grub_crypto_hmac_init+0x25c>
    1030:	nop
    1034:	b	103c <grub_crypto_hmac_init+0x25c>
    1038:	nop
    103c:	ldr	x0, [sp, #88]
    1040:	bl	0 <grub_free>
    1044:	ldr	x0, [sp, #56]
    1048:	bl	0 <grub_free>
    104c:	ldr	x0, [sp, #80]
    1050:	bl	0 <grub_free>
    1054:	ldr	x0, [sp, #72]
    1058:	bl	0 <grub_free>
    105c:	mov	x0, #0x0                   	// #0
    1060:	ldp	x29, x30, [sp], #96
    1064:	ret

0000000000001068 <grub_crypto_hmac_write>:
    1068:	stp	x29, x30, [sp, #-48]!
    106c:	mov	x29, sp
    1070:	str	x0, [sp, #40]
    1074:	str	x1, [sp, #32]
    1078:	str	x2, [sp, #24]
    107c:	ldr	x0, [sp, #40]
    1080:	ldr	x0, [x0]
    1084:	ldr	x3, [x0, #48]
    1088:	ldr	x0, [sp, #40]
    108c:	ldr	x0, [x0, #8]
    1090:	ldr	x2, [sp, #24]
    1094:	ldr	x1, [sp, #32]
    1098:	blr	x3
    109c:	nop
    10a0:	ldp	x29, x30, [sp], #48
    10a4:	ret

00000000000010a8 <grub_crypto_hmac_fini>:
    10a8:	stp	x29, x30, [sp, #-48]!
    10ac:	mov	x29, sp
    10b0:	str	x0, [sp, #24]
    10b4:	str	x1, [sp, #16]
    10b8:	ldr	x0, [sp, #24]
    10bc:	ldr	x0, [x0]
    10c0:	ldr	x0, [x0, #72]
    10c4:	bl	0 <grub_malloc>
    10c8:	str	x0, [sp, #40]
    10cc:	ldr	x0, [sp, #40]
    10d0:	cmp	x0, #0x0
    10d4:	b.ne	10e0 <grub_crypto_hmac_fini+0x38>  // b.any
    10d8:	mov	w0, #0x22                  	// #34
    10dc:	b	1278 <grub_crypto_hmac_fini+0x1d0>
    10e0:	ldr	x0, [sp, #24]
    10e4:	ldr	x0, [x0]
    10e8:	ldr	x1, [x0, #56]
    10ec:	ldr	x0, [sp, #24]
    10f0:	ldr	x0, [x0, #8]
    10f4:	blr	x1
    10f8:	ldr	x0, [sp, #24]
    10fc:	ldr	x0, [x0]
    1100:	ldr	x1, [x0, #64]
    1104:	ldr	x0, [sp, #24]
    1108:	ldr	x0, [x0, #8]
    110c:	blr	x1
    1110:	ldr	x0, [sp, #24]
    1114:	ldr	x0, [x0]
    1118:	ldr	x1, [x0, #64]
    111c:	ldr	x0, [sp, #24]
    1120:	ldr	x0, [x0, #8]
    1124:	blr	x1
    1128:	str	x0, [sp, #32]
    112c:	ldr	x0, [sp, #24]
    1130:	ldr	x0, [x0]
    1134:	ldr	x1, [x0, #40]
    1138:	ldr	x0, [sp, #40]
    113c:	blr	x1
    1140:	ldr	x0, [sp, #24]
    1144:	ldr	x0, [x0]
    1148:	ldr	x3, [x0, #48]
    114c:	ldr	x0, [sp, #24]
    1150:	ldr	x1, [x0, #16]
    1154:	ldr	x0, [sp, #24]
    1158:	ldr	x0, [x0]
    115c:	ldr	x0, [x0, #80]
    1160:	mov	x2, x0
    1164:	ldr	x0, [sp, #40]
    1168:	blr	x3
    116c:	ldr	x0, [sp, #24]
    1170:	ldr	x0, [x0]
    1174:	ldr	x3, [x0, #48]
    1178:	ldr	x0, [sp, #24]
    117c:	ldr	x0, [x0]
    1180:	ldr	x0, [x0, #32]
    1184:	mov	x2, x0
    1188:	ldr	x1, [sp, #32]
    118c:	ldr	x0, [sp, #40]
    1190:	blr	x3
    1194:	ldr	x0, [sp, #24]
    1198:	ldr	x0, [x0]
    119c:	ldr	x1, [x0, #56]
    11a0:	ldr	x0, [sp, #40]
    11a4:	blr	x1
    11a8:	ldr	x0, [sp, #24]
    11ac:	ldr	x3, [x0, #16]
    11b0:	ldr	x0, [sp, #24]
    11b4:	ldr	x0, [x0]
    11b8:	ldr	x0, [x0, #80]
    11bc:	mov	x2, x0
    11c0:	mov	w1, #0x0                   	// #0
    11c4:	mov	x0, x3
    11c8:	bl	0 <grub_memset>
    11cc:	ldr	x0, [sp, #24]
    11d0:	ldr	x0, [x0, #16]
    11d4:	bl	0 <grub_free>
    11d8:	ldr	x0, [sp, #24]
    11dc:	ldr	x3, [x0, #8]
    11e0:	ldr	x0, [sp, #24]
    11e4:	ldr	x0, [x0]
    11e8:	ldr	x0, [x0, #72]
    11ec:	mov	x2, x0
    11f0:	mov	w1, #0x0                   	// #0
    11f4:	mov	x0, x3
    11f8:	bl	0 <grub_memset>
    11fc:	ldr	x0, [sp, #24]
    1200:	ldr	x0, [x0, #8]
    1204:	bl	0 <grub_free>
    1208:	ldr	x0, [sp, #24]
    120c:	ldr	x0, [x0]
    1210:	ldr	x1, [x0, #64]
    1214:	ldr	x0, [sp, #40]
    1218:	blr	x1
    121c:	mov	x1, x0
    1220:	ldr	x0, [sp, #24]
    1224:	ldr	x0, [x0]
    1228:	ldr	x0, [x0, #32]
    122c:	mov	x2, x0
    1230:	ldr	x0, [sp, #16]
    1234:	bl	188 <grub_burn_stack-0x140>
    1238:	ldr	x0, [sp, #24]
    123c:	ldr	x0, [x0]
    1240:	ldr	x0, [x0, #72]
    1244:	mov	x2, x0
    1248:	mov	w1, #0x0                   	// #0
    124c:	ldr	x0, [sp, #40]
    1250:	bl	0 <grub_memset>
    1254:	ldr	x0, [sp, #40]
    1258:	bl	0 <grub_free>
    125c:	mov	x2, #0x18                  	// #24
    1260:	mov	w1, #0x0                   	// #0
    1264:	ldr	x0, [sp, #24]
    1268:	bl	0 <grub_memset>
    126c:	ldr	x0, [sp, #24]
    1270:	bl	0 <grub_free>
    1274:	mov	w0, #0x0                   	// #0
    1278:	ldp	x29, x30, [sp], #48
    127c:	ret

0000000000001280 <grub_crypto_hmac_buffer>:
    1280:	stp	x29, x30, [sp, #-80]!
    1284:	mov	x29, sp
    1288:	str	x0, [sp, #56]
    128c:	str	x1, [sp, #48]
    1290:	str	x2, [sp, #40]
    1294:	str	x3, [sp, #32]
    1298:	str	x4, [sp, #24]
    129c:	str	x5, [sp, #16]
    12a0:	ldr	x2, [sp, #40]
    12a4:	ldr	x1, [sp, #48]
    12a8:	ldr	x0, [sp, #56]
    12ac:	bl	de0 <grub_crypto_hmac_init>
    12b0:	str	x0, [sp, #72]
    12b4:	ldr	x0, [sp, #72]
    12b8:	cmp	x0, #0x0
    12bc:	b.ne	12c8 <grub_crypto_hmac_buffer+0x48>  // b.any
    12c0:	mov	w0, #0x22                  	// #34
    12c4:	b	12e4 <grub_crypto_hmac_buffer+0x64>
    12c8:	ldr	x2, [sp, #24]
    12cc:	ldr	x1, [sp, #32]
    12d0:	ldr	x0, [sp, #72]
    12d4:	bl	1068 <grub_crypto_hmac_write>
    12d8:	ldr	x1, [sp, #16]
    12dc:	ldr	x0, [sp, #72]
    12e0:	bl	10a8 <grub_crypto_hmac_fini>
    12e4:	ldp	x29, x30, [sp], #80
    12e8:	ret

00000000000012ec <grub_crypto_gcry_error>:
    12ec:	stp	x29, x30, [sp, #-32]!
    12f0:	mov	x29, sp
    12f4:	str	w0, [sp, #28]
    12f8:	ldr	w0, [sp, #28]
    12fc:	cmp	w0, #0x0
    1300:	b.ne	130c <grub_crypto_gcry_error+0x20>  // b.any
    1304:	mov	w0, #0x0                   	// #0
    1308:	b	1320 <grub_crypto_gcry_error+0x34>
    130c:	adrp	x0, 0 <grub_burn_stack-0x2c8>
    1310:	add	x0, x0, #0x0
    1314:	ldr	x1, [x0]
    1318:	mov	w0, #0x1e                  	// #30
    131c:	bl	0 <grub_error>
    1320:	ldp	x29, x30, [sp], #32
    1324:	ret
	...

0000000000001330 <grub_crypto_memcmp>:
    1330:	str	x19, [sp, #-64]!
    1334:	str	x0, [sp, #40]
    1338:	str	x1, [sp, #32]
    133c:	str	x2, [sp, #24]
    1340:	mov	x19, #0x0                   	// #0
    1344:	ldr	x0, [sp, #40]
    1348:	str	x0, [sp, #56]
    134c:	ldr	x0, [sp, #32]
    1350:	str	x0, [sp, #48]
    1354:	b	1398 <grub_crypto_memcmp+0x68>
    1358:	ldr	x0, [sp, #56]
    135c:	ldrb	w1, [x0]
    1360:	ldr	x0, [sp, #48]
    1364:	ldrb	w0, [x0]
    1368:	cmp	w1, w0
    136c:	b.eq	1374 <grub_crypto_memcmp+0x44>  // b.none
    1370:	add	x19, x19, #0x1
    1374:	ldr	x0, [sp, #56]
    1378:	add	x0, x0, #0x1
    137c:	str	x0, [sp, #56]
    1380:	ldr	x0, [sp, #48]
    1384:	add	x0, x0, #0x1
    1388:	str	x0, [sp, #48]
    138c:	ldr	x0, [sp, #24]
    1390:	sub	x0, x0, #0x1
    1394:	str	x0, [sp, #24]
    1398:	ldr	x0, [sp, #24]
    139c:	cmp	x0, #0x0
    13a0:	b.ne	1358 <grub_crypto_memcmp+0x28>  // b.any
    13a4:	cmp	x19, #0x0
    13a8:	cset	w0, ne  // ne = any
    13ac:	and	w0, w0, #0xff
    13b0:	ldr	x19, [sp], #64
    13b4:	ret

00000000000013b8 <grub_password_get>:
    13b8:	stp	x29, x30, [sp, #-48]!
    13bc:	mov	x29, sp
    13c0:	str	x0, [sp, #24]
    13c4:	str	w1, [sp, #20]
    13c8:	str	wzr, [sp, #44]
    13cc:	bl	0 <grub_getkey>
    13d0:	str	w0, [sp, #40]
    13d4:	ldr	w0, [sp, #40]
    13d8:	cmp	w0, #0xa
    13dc:	b.eq	1484 <grub_password_get+0xcc>  // b.none
    13e0:	ldr	w0, [sp, #40]
    13e4:	cmp	w0, #0xd
    13e8:	b.eq	1484 <grub_password_get+0xcc>  // b.none
    13ec:	ldr	w0, [sp, #40]
    13f0:	cmp	w0, #0x1b
    13f4:	b.ne	1400 <grub_password_get+0x48>  // b.any
    13f8:	str	wzr, [sp, #44]
    13fc:	b	1484 <grub_password_get+0xcc>
    1400:	ldr	w0, [sp, #40]
    1404:	cmp	w0, #0x8
    1408:	b.ne	1428 <grub_password_get+0x70>  // b.any
    140c:	ldr	w0, [sp, #44]
    1410:	cmp	w0, #0x0
    1414:	b.eq	1474 <grub_password_get+0xbc>  // b.none
    1418:	ldr	w0, [sp, #44]
    141c:	sub	w0, w0, #0x1
    1420:	str	w0, [sp, #44]
    1424:	b	1474 <grub_password_get+0xbc>
    1428:	ldr	w0, [sp, #40]
    142c:	bl	1b4 <grub_burn_stack-0x114>
    1430:	cmp	w0, #0x0
    1434:	b.eq	147c <grub_password_get+0xc4>  // b.none
    1438:	ldr	w0, [sp, #44]
    143c:	add	w0, w0, #0x2
    1440:	ldr	w1, [sp, #20]
    1444:	cmp	w1, w0
    1448:	b.ls	13cc <grub_password_get+0x14>  // b.plast
    144c:	ldr	w0, [sp, #44]
    1450:	add	w1, w0, #0x1
    1454:	str	w1, [sp, #44]
    1458:	mov	w0, w0
    145c:	ldr	x1, [sp, #24]
    1460:	add	x0, x1, x0
    1464:	ldr	w1, [sp, #40]
    1468:	and	w1, w1, #0xff
    146c:	strb	w1, [x0]
    1470:	b	13cc <grub_password_get+0x14>
    1474:	nop
    1478:	b	13cc <grub_password_get+0x14>
    147c:	nop
    1480:	b	13cc <grub_password_get+0x14>
    1484:	ldr	w0, [sp, #44]
    1488:	ldr	x1, [sp, #24]
    148c:	add	x3, x1, x0
    1490:	ldr	w1, [sp, #20]
    1494:	ldr	w0, [sp, #44]
    1498:	sub	w0, w1, w0
    149c:	mov	w0, w0
    14a0:	mov	x2, x0
    14a4:	mov	w1, #0x0                   	// #0
    14a8:	mov	x0, x3
    14ac:	bl	0 <grub_memset>
    14b0:	adrp	x0, 0 <grub_burn_stack-0x2c8>
    14b4:	add	x0, x0, #0x0
    14b8:	ldr	x0, [x0]
    14bc:	ldr	x1, [x0]
    14c0:	adrp	x0, 0 <grub_burn_stack-0x2c8>
    14c4:	add	x0, x0, #0x0
    14c8:	ldr	x0, [x0]
    14cc:	blr	x1
    14d0:	bl	0 <grub_refresh>
    14d4:	ldr	w0, [sp, #40]
    14d8:	cmp	w0, #0x1b
    14dc:	cset	w0, ne  // ne = any
    14e0:	and	w0, w0, #0xff
    14e4:	ldp	x29, x30, [sp], #48
    14e8:	ret
    14ec:	nop
	...
