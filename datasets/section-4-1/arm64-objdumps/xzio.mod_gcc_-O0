
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//xzio.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x970>:
       0:	sub	sp, sp, #0x10
       4:	str	w0, [sp, #12]
       8:	str	x1, [sp]
       c:	adrp	x0, 0 <grub_mod_init-0x970>
      10:	add	x0, x0, #0x0
      14:	ldr	x0, [x0]
      18:	ldr	w1, [sp, #12]
      1c:	ldr	x2, [sp]
      20:	str	x2, [x0, x1, lsl #3]
      24:	nop
      28:	add	sp, sp, #0x10
      2c:	ret
	...
      38:	sub	sp, sp, #0x10
      3c:	str	w0, [sp, #12]
      40:	adrp	x0, 0 <grub_mod_init-0x970>
      44:	add	x0, x0, #0x0
      48:	ldr	x0, [x0]
      4c:	ldr	w1, [sp, #12]
      50:	str	xzr, [x0, x1, lsl #3]
      54:	nop
      58:	add	sp, sp, #0x10
      5c:	ret
	...
      68:	sub	sp, sp, #0x10
      6c:	str	x0, [sp, #8]
      70:	ldr	x0, [sp, #8]
      74:	ldr	x0, [x0, #24]
      78:	add	sp, sp, #0x10
      7c:	ret
      80:	sub	sp, sp, #0x30
      84:	str	x0, [sp, #24]
      88:	str	x1, [sp, #16]
      8c:	str	x2, [sp, #8]
      90:	ldr	x0, [sp, #16]
      94:	cmp	x0, #0x0
      98:	b.ne	a4 <grub_mod_init-0x8cc>  // b.any
      9c:	mov	x0, #0x0                   	// #0
      a0:	b	174 <grub_mod_init-0x7fc>
      a4:	ldr	x0, [sp, #16]
      a8:	cmp	x0, #0x9
      ac:	b.ls	b8 <grub_mod_init-0x8b8>  // b.plast
      b0:	mov	x0, #0x9                   	// #9
      b4:	str	x0, [sp, #16]
      b8:	ldr	x0, [sp, #24]
      bc:	ldrb	w0, [x0]
      c0:	and	x0, x0, #0xff
      c4:	and	x1, x0, #0x7f
      c8:	ldr	x0, [sp, #8]
      cc:	str	x1, [x0]
      d0:	str	xzr, [sp, #40]
      d4:	b	14c <grub_mod_init-0x824>
      d8:	ldr	x1, [sp, #40]
      dc:	ldr	x0, [sp, #16]
      e0:	cmp	x1, x0
      e4:	b.cs	100 <grub_mod_init-0x870>  // b.hs, b.nlast
      e8:	ldr	x1, [sp, #24]
      ec:	ldr	x0, [sp, #40]
      f0:	add	x0, x1, x0
      f4:	ldrb	w0, [x0]
      f8:	cmp	w0, #0x0
      fc:	b.ne	108 <grub_mod_init-0x868>  // b.any
     100:	mov	x0, #0x0                   	// #0
     104:	b	174 <grub_mod_init-0x7fc>
     108:	ldr	x0, [sp, #8]
     10c:	ldr	x1, [x0]
     110:	ldr	x2, [sp, #24]
     114:	ldr	x0, [sp, #40]
     118:	add	x0, x2, x0
     11c:	ldrb	w0, [x0]
     120:	and	x0, x0, #0xff
     124:	and	x2, x0, #0x7f
     128:	ldr	x0, [sp, #40]
     12c:	mov	w3, w0
     130:	mov	w0, w3
     134:	lsl	w0, w0, #3
     138:	sub	w0, w0, w3
     13c:	lsl	x0, x2, x0
     140:	orr	x1, x1, x0
     144:	ldr	x0, [sp, #8]
     148:	str	x1, [x0]
     14c:	ldr	x0, [sp, #40]
     150:	add	x1, x0, #0x1
     154:	str	x1, [sp, #40]
     158:	ldr	x1, [sp, #24]
     15c:	add	x0, x1, x0
     160:	ldrb	w0, [x0]
     164:	sxtb	w0, w0
     168:	cmp	w0, #0x0
     16c:	b.lt	d8 <grub_mod_init-0x898>  // b.tstop
     170:	ldr	x0, [sp, #40]
     174:	add	sp, sp, #0x30
     178:	ret
     17c:	stp	x29, x30, [sp, #-64]!
     180:	mov	x29, sp
     184:	str	x0, [sp, #24]
     188:	str	x1, [sp, #16]
     18c:	add	x0, sp, #0x20
     190:	mov	x2, #0x9                   	// #9
     194:	mov	x1, x0
     198:	ldr	x0, [sp, #24]
     19c:	bl	0 <grub_file_read>
     1a0:	str	x0, [sp, #56]
     1a4:	ldr	x0, [sp, #56]
     1a8:	cmp	x0, #0x0
     1ac:	b.ge	1b8 <grub_mod_init-0x7b8>  // b.tcont
     1b0:	mov	x0, #0xffffffffffffffff    	// #-1
     1b4:	b	1f4 <grub_mod_init-0x77c>
     1b8:	ldr	x1, [sp, #56]
     1bc:	add	x0, sp, #0x20
     1c0:	ldr	x2, [sp, #16]
     1c4:	bl	80 <grub_mod_init-0x8f0>
     1c8:	str	x0, [sp, #48]
     1cc:	ldr	x0, [sp, #24]
     1d0:	ldr	x1, [x0, #24]
     1d4:	ldr	x0, [sp, #56]
     1d8:	ldr	x2, [sp, #48]
     1dc:	sub	x0, x2, x0
     1e0:	add	x0, x1, x0
     1e4:	mov	x1, x0
     1e8:	ldr	x0, [sp, #24]
     1ec:	bl	0 <grub_file_seek>
     1f0:	ldr	x0, [sp, #48]
     1f4:	ldp	x29, x30, [sp], #64
     1f8:	ret
     1fc:	stp	x29, x30, [sp, #-48]!
     200:	mov	x29, sp
     204:	str	x0, [sp, #24]
     208:	ldr	x0, [sp, #24]
     20c:	ldr	x0, [x0, #80]
     210:	str	x0, [sp, #40]
     214:	ldr	x0, [sp, #40]
     218:	ldr	x3, [x0]
     21c:	ldr	x0, [sp, #40]
     220:	add	x0, x0, #0x40
     224:	mov	x2, #0xc                   	// #12
     228:	mov	x1, x0
     22c:	mov	x0, x3
     230:	bl	0 <grub_file_read>
     234:	mov	x1, x0
     238:	ldr	x0, [sp, #40]
     23c:	str	x1, [x0, #24]
     240:	ldr	x0, [sp, #40]
     244:	ldr	x0, [x0, #24]
     248:	cmp	x0, #0xc
     24c:	b.eq	258 <grub_mod_init-0x718>  // b.none
     250:	mov	w0, #0x0                   	// #0
     254:	b	2a4 <grub_mod_init-0x6cc>
     258:	ldr	x0, [sp, #40]
     25c:	ldr	x2, [x0, #56]
     260:	ldr	x0, [sp, #40]
     264:	add	x0, x0, #0x8
     268:	mov	x1, x0
     26c:	mov	x0, x2
     270:	bl	6b1c <xz_dec_run>
     274:	str	w0, [sp, #36]
     278:	ldr	w0, [sp, #36]
     27c:	cmp	w0, #0x3
     280:	b.ne	28c <grub_mod_init-0x6e4>  // b.any
     284:	mov	w0, #0x0                   	// #0
     288:	b	2a4 <grub_mod_init-0x6cc>
     28c:	ldr	w0, [sp, #36]
     290:	cmp	w0, #0x0
     294:	b.eq	2a0 <grub_mod_init-0x6d0>  // b.none
     298:	mov	w0, #0x0                   	// #0
     29c:	b	2a4 <grub_mod_init-0x6cc>
     2a0:	mov	w0, #0x1                   	// #1
     2a4:	ldp	x29, x30, [sp], #48
     2a8:	ret
     2ac:	stp	x29, x30, [sp, #-80]!
     2b0:	mov	x29, sp
     2b4:	str	x0, [sp, #24]
     2b8:	ldr	x0, [sp, #24]
     2bc:	ldr	x0, [x0, #80]
     2c0:	str	x0, [sp, #64]
     2c4:	str	xzr, [sp, #72]
     2c8:	ldr	x0, [sp, #64]
     2cc:	ldr	x2, [x0]
     2d0:	ldr	x0, [sp, #64]
     2d4:	ldr	x0, [x0]
     2d8:	ldr	x0, [x0, #64]
     2dc:	sub	x0, x0, #0x2
     2e0:	mov	x1, x0
     2e4:	mov	x0, x2
     2e8:	bl	0 <grub_file_seek>
     2ec:	ldr	x0, [sp, #64]
     2f0:	ldr	x0, [x0]
     2f4:	add	x1, sp, #0x38
     2f8:	mov	x2, #0x2                   	// #2
     2fc:	bl	0 <grub_file_read>
     300:	cmp	x0, #0x2
     304:	b.ne	46c <grub_mod_init-0x504>  // b.any
     308:	add	x3, sp, #0x38
     30c:	mov	x2, #0x2                   	// #2
     310:	adrp	x0, 0 <grub_mod_init-0x970>
     314:	add	x0, x0, #0x0
     318:	ldr	x1, [x0]
     31c:	mov	x0, x3
     320:	bl	0 <grub_memcmp>
     324:	cmp	w0, #0x0
     328:	b.ne	46c <grub_mod_init-0x504>  // b.any
     32c:	ldr	x0, [sp, #64]
     330:	ldr	x2, [x0]
     334:	ldr	x0, [sp, #64]
     338:	ldr	x0, [x0]
     33c:	ldr	x0, [x0, #64]
     340:	sub	x0, x0, #0x8
     344:	mov	x1, x0
     348:	mov	x0, x2
     34c:	bl	0 <grub_file_seek>
     350:	ldr	x0, [sp, #64]
     354:	ldr	x0, [x0]
     358:	add	x1, sp, #0x34
     35c:	mov	x2, #0x4                   	// #4
     360:	bl	0 <grub_file_read>
     364:	cmp	x0, #0x4
     368:	b.ne	474 <grub_mod_init-0x4fc>  // b.any
     36c:	ldr	w0, [sp, #52]
     370:	add	w0, w0, #0x1
     374:	lsl	w0, w0, #2
     378:	str	w0, [sp, #52]
     37c:	ldr	x0, [sp, #64]
     380:	ldr	x2, [x0]
     384:	ldr	x0, [sp, #64]
     388:	ldr	x0, [x0]
     38c:	ldr	x1, [x0, #64]
     390:	ldr	w0, [sp, #52]
     394:	mov	w0, w0
     398:	sub	x0, x1, x0
     39c:	sub	x0, x0, #0xc
     3a0:	mov	x1, x0
     3a4:	mov	x0, x2
     3a8:	bl	0 <grub_file_seek>
     3ac:	ldr	x0, [sp, #64]
     3b0:	ldr	x0, [x0]
     3b4:	add	x1, sp, #0x33
     3b8:	mov	x2, #0x1                   	// #1
     3bc:	bl	0 <grub_file_read>
     3c0:	cmp	x0, #0x1
     3c4:	b.eq	3d4 <grub_mod_init-0x59c>  // b.none
     3c8:	ldrb	w0, [sp, #51]
     3cc:	cmp	w0, #0x0
     3d0:	b.ne	47c <grub_mod_init-0x4f4>  // b.any
     3d4:	ldr	x0, [sp, #64]
     3d8:	ldr	x0, [x0]
     3dc:	add	x1, sp, #0x20
     3e0:	bl	17c <grub_mod_init-0x7f4>
     3e4:	cmp	x0, #0x0
     3e8:	b.le	484 <grub_mod_init-0x4ec>
     3ec:	b	43c <grub_mod_init-0x534>
     3f0:	ldr	x0, [sp, #64]
     3f4:	ldr	x0, [x0]
     3f8:	add	x1, sp, #0x28
     3fc:	bl	17c <grub_mod_init-0x7f4>
     400:	cmp	x0, #0x0
     404:	b.le	48c <grub_mod_init-0x4e4>
     408:	ldr	x0, [sp, #64]
     40c:	ldr	x0, [x0]
     410:	add	x1, sp, #0x28
     414:	bl	17c <grub_mod_init-0x7f4>
     418:	cmp	x0, #0x0
     41c:	b.le	494 <grub_mod_init-0x4dc>
     420:	ldr	x0, [sp, #40]
     424:	ldr	x1, [sp, #72]
     428:	add	x0, x1, x0
     42c:	str	x0, [sp, #72]
     430:	ldr	x0, [sp, #32]
     434:	sub	x0, x0, #0x1
     438:	str	x0, [sp, #32]
     43c:	ldr	x0, [sp, #32]
     440:	cmp	x0, #0x0
     444:	b.ne	3f0 <grub_mod_init-0x580>  // b.any
     448:	ldr	x0, [sp, #24]
     44c:	ldr	x1, [sp, #72]
     450:	str	x1, [x0, #64]
     454:	ldr	x0, [sp, #64]
     458:	ldr	x0, [x0]
     45c:	mov	x1, #0xc                   	// #12
     460:	bl	0 <grub_file_seek>
     464:	mov	w0, #0x1                   	// #1
     468:	b	49c <grub_mod_init-0x4d4>
     46c:	nop
     470:	b	498 <grub_mod_init-0x4d8>
     474:	nop
     478:	b	498 <grub_mod_init-0x4d8>
     47c:	nop
     480:	b	498 <grub_mod_init-0x4d8>
     484:	nop
     488:	b	498 <grub_mod_init-0x4d8>
     48c:	nop
     490:	b	498 <grub_mod_init-0x4d8>
     494:	nop
     498:	mov	w0, #0x0                   	// #0
     49c:	ldp	x29, x30, [sp], #80
     4a0:	ret
     4a4:	nop
	...
     4b0:	stp	x29, x30, [sp, #-48]!
     4b4:	mov	x29, sp
     4b8:	str	x0, [sp, #24]
     4bc:	str	w1, [sp, #20]
     4c0:	ldr	w0, [sp, #20]
     4c4:	and	w0, w0, #0x20000
     4c8:	cmp	w0, #0x0
     4cc:	b.eq	4d8 <grub_mod_init-0x498>  // b.none
     4d0:	ldr	x0, [sp, #24]
     4d4:	b	668 <grub_mod_init-0x308>
     4d8:	mov	x0, #0x68                  	// #104
     4dc:	bl	0 <grub_zalloc>
     4e0:	str	x0, [sp, #40]
     4e4:	ldr	x0, [sp, #40]
     4e8:	cmp	x0, #0x0
     4ec:	b.ne	4f8 <grub_mod_init-0x478>  // b.any
     4f0:	mov	x0, #0x0                   	// #0
     4f4:	b	668 <grub_mod_init-0x308>
     4f8:	mov	x0, #0x4048                	// #16456
     4fc:	bl	0 <grub_zalloc>
     500:	str	x0, [sp, #32]
     504:	ldr	x0, [sp, #32]
     508:	cmp	x0, #0x0
     50c:	b.ne	520 <grub_mod_init-0x450>  // b.any
     510:	ldr	x0, [sp, #40]
     514:	bl	0 <grub_free>
     518:	mov	x0, #0x0                   	// #0
     51c:	b	668 <grub_mod_init-0x308>
     520:	ldr	x0, [sp, #32]
     524:	ldr	x1, [sp, #24]
     528:	str	x1, [x0]
     52c:	ldr	x0, [sp, #24]
     530:	ldr	x1, [x0, #8]
     534:	ldr	x0, [sp, #40]
     538:	str	x1, [x0, #8]
     53c:	ldr	x0, [sp, #40]
     540:	ldr	x1, [sp, #32]
     544:	str	x1, [x0, #80]
     548:	ldr	x0, [sp, #40]
     54c:	adrp	x1, 0 <grub_mod_init-0x970>
     550:	add	x1, x1, #0x0
     554:	ldr	x1, [x1]
     558:	str	x1, [x0, #16]
     55c:	ldr	x0, [sp, #40]
     560:	mov	x1, #0xffffffffffffffff    	// #-1
     564:	str	x1, [x0, #64]
     568:	ldr	x0, [sp, #40]
     56c:	mov	w1, #0x1                   	// #1
     570:	str	w1, [x0, #72]
     574:	ldr	x0, [sp, #32]
     578:	ldr	x0, [x0]
     57c:	bl	68 <grub_mod_init-0x908>
     580:	cmp	x0, #0x0
     584:	b.eq	598 <grub_mod_init-0x3d8>  // b.none
     588:	ldr	x0, [sp, #32]
     58c:	ldr	x0, [x0]
     590:	mov	x1, #0x0                   	// #0
     594:	bl	0 <grub_file_seek>
     598:	mov	w0, #0x10000               	// #65536
     59c:	bl	6c48 <xz_dec_init>
     5a0:	mov	x1, x0
     5a4:	ldr	x0, [sp, #32]
     5a8:	str	x1, [x0, #56]
     5ac:	ldr	x0, [sp, #32]
     5b0:	ldr	x0, [x0, #56]
     5b4:	cmp	x0, #0x0
     5b8:	b.ne	5d4 <grub_mod_init-0x39c>  // b.any
     5bc:	ldr	x0, [sp, #40]
     5c0:	bl	0 <grub_free>
     5c4:	ldr	x0, [sp, #32]
     5c8:	bl	0 <grub_free>
     5cc:	mov	x0, #0x0                   	// #0
     5d0:	b	668 <grub_mod_init-0x308>
     5d4:	ldr	x0, [sp, #32]
     5d8:	add	x1, x0, #0x40
     5dc:	ldr	x0, [sp, #32]
     5e0:	str	x1, [x0, #8]
     5e4:	ldr	x1, [sp, #32]
     5e8:	mov	x0, #0x2040                	// #8256
     5ec:	add	x1, x1, x0
     5f0:	ldr	x0, [sp, #32]
     5f4:	str	x1, [x0, #32]
     5f8:	ldr	x0, [sp, #32]
     5fc:	mov	x1, #0x2000                	// #8192
     600:	str	x1, [x0, #48]
     604:	ldr	x0, [sp, #40]
     608:	bl	1fc <grub_mod_init-0x774>
     60c:	cmp	w0, #0x0
     610:	b.eq	624 <grub_mod_init-0x34c>  // b.none
     614:	ldr	x0, [sp, #40]
     618:	bl	2ac <grub_mod_init-0x6c4>
     61c:	cmp	w0, #0x0
     620:	b.ne	664 <grub_mod_init-0x30c>  // b.any
     624:	adrp	x0, 0 <grub_mod_init-0x970>
     628:	add	x0, x0, #0x0
     62c:	ldr	x0, [x0]
     630:	str	wzr, [x0]
     634:	mov	x1, #0x0                   	// #0
     638:	ldr	x0, [sp, #24]
     63c:	bl	0 <grub_file_seek>
     640:	ldr	x0, [sp, #32]
     644:	ldr	x0, [x0, #56]
     648:	bl	6e24 <xz_dec_end>
     64c:	ldr	x0, [sp, #32]
     650:	bl	0 <grub_free>
     654:	ldr	x0, [sp, #40]
     658:	bl	0 <grub_free>
     65c:	ldr	x0, [sp, #24]
     660:	b	668 <grub_mod_init-0x308>
     664:	ldr	x0, [sp, #40]
     668:	ldp	x29, x30, [sp], #48
     66c:	ret
	...
     680:	stp	x29, x30, [sp, #-112]!
     684:	mov	x29, sp
     688:	str	x0, [sp, #40]
     68c:	str	x1, [sp, #32]
     690:	str	x2, [sp, #24]
     694:	str	xzr, [sp, #104]
     698:	ldr	x0, [sp, #40]
     69c:	ldr	x0, [x0, #80]
     6a0:	str	x0, [sp, #88]
     6a4:	ldr	x0, [sp, #40]
     6a8:	ldr	x1, [x0, #24]
     6ac:	ldr	x0, [sp, #88]
     6b0:	ldr	x0, [x0, #16448]
     6b4:	cmp	x1, x0
     6b8:	b.cs	6f8 <grub_mod_init-0x278>  // b.hs, b.nlast
     6bc:	ldr	x0, [sp, #88]
     6c0:	ldr	x0, [x0, #56]
     6c4:	bl	6d28 <xz_dec_reset>
     6c8:	ldr	x0, [sp, #88]
     6cc:	str	xzr, [x0, #16448]
     6d0:	ldr	x0, [sp, #88]
     6d4:	str	xzr, [x0, #40]
     6d8:	ldr	x0, [sp, #88]
     6dc:	str	xzr, [x0, #16]
     6e0:	ldr	x0, [sp, #88]
     6e4:	str	xzr, [x0, #24]
     6e8:	ldr	x0, [sp, #88]
     6ec:	ldr	x0, [x0]
     6f0:	mov	x1, #0x0                   	// #0
     6f4:	bl	0 <grub_file_seek>
     6f8:	ldr	x0, [sp, #88]
     6fc:	ldr	x0, [x0, #16448]
     700:	str	x0, [sp, #96]
     704:	b	8bc <grub_mod_init-0xb4>
     708:	ldr	x0, [sp, #40]
     70c:	ldr	x1, [x0, #24]
     710:	ldr	x0, [sp, #104]
     714:	add	x1, x1, x0
     718:	ldr	x0, [sp, #24]
     71c:	add	x1, x1, x0
     720:	ldr	x0, [sp, #96]
     724:	sub	x1, x1, x0
     728:	ldr	x0, [sp, #88]
     72c:	str	x1, [x0, #48]
     730:	ldr	x0, [sp, #88]
     734:	ldr	x0, [x0, #48]
     738:	cmp	x0, #0x2, lsl #12
     73c:	b.ls	74c <grub_mod_init-0x224>  // b.plast
     740:	ldr	x0, [sp, #88]
     744:	mov	x1, #0x2000                	// #8192
     748:	str	x1, [x0, #48]
     74c:	ldr	x0, [sp, #88]
     750:	ldr	x1, [x0, #16]
     754:	ldr	x0, [sp, #88]
     758:	ldr	x0, [x0, #24]
     75c:	cmp	x1, x0
     760:	b.ne	7b0 <grub_mod_init-0x1c0>  // b.any
     764:	ldr	x0, [sp, #88]
     768:	ldr	x3, [x0]
     76c:	ldr	x0, [sp, #88]
     770:	add	x0, x0, #0x40
     774:	mov	x2, #0x2000                	// #8192
     778:	mov	x1, x0
     77c:	mov	x0, x3
     780:	bl	0 <grub_file_read>
     784:	str	x0, [sp, #80]
     788:	ldr	x0, [sp, #80]
     78c:	cmp	x0, #0x0
     790:	b.ge	79c <grub_mod_init-0x1d4>  // b.tcont
     794:	mov	x0, #0xffffffffffffffff    	// #-1
     798:	b	8f8 <grub_mod_init-0x78>
     79c:	ldr	x1, [sp, #80]
     7a0:	ldr	x0, [sp, #88]
     7a4:	str	x1, [x0, #24]
     7a8:	ldr	x0, [sp, #88]
     7ac:	str	xzr, [x0, #16]
     7b0:	ldr	x0, [sp, #88]
     7b4:	ldr	x2, [x0, #56]
     7b8:	ldr	x0, [sp, #88]
     7bc:	add	x0, x0, #0x8
     7c0:	mov	x1, x0
     7c4:	mov	x0, x2
     7c8:	bl	6b1c <xz_dec_run>
     7cc:	str	w0, [sp, #76]
     7d0:	ldr	w0, [sp, #76]
     7d4:	sub	w0, w0, #0x2
     7d8:	cmp	w0, #0x4
     7dc:	b.hi	7fc <grub_mod_init-0x174>  // b.pmore
     7e0:	adrp	x0, 0 <grub_mod_init-0x970>
     7e4:	add	x0, x0, #0x0
     7e8:	ldr	x1, [x0]
     7ec:	mov	w0, #0x1a                  	// #26
     7f0:	bl	0 <grub_error>
     7f4:	mov	x0, #0xffffffffffffffff    	// #-1
     7f8:	b	8f8 <grub_mod_init-0x78>
     7fc:	nop
     800:	ldr	x0, [sp, #88]
     804:	ldr	x0, [x0, #40]
     808:	ldr	x1, [sp, #96]
     80c:	add	x0, x1, x0
     810:	str	x0, [sp, #64]
     814:	ldr	x0, [sp, #40]
     818:	ldr	x0, [x0, #24]
     81c:	ldr	x1, [sp, #64]
     820:	cmp	x1, x0
     824:	b.cc	8a0 <grub_mod_init-0xd0>  // b.lo, b.ul, b.last
     828:	ldr	x0, [sp, #40]
     82c:	ldr	x1, [x0, #24]
     830:	ldr	x0, [sp, #104]
     834:	add	x0, x1, x0
     838:	ldr	x1, [sp, #64]
     83c:	sub	x0, x1, x0
     840:	str	x0, [sp, #56]
     844:	ldr	x0, [sp, #88]
     848:	ldr	x1, [x0, #32]
     84c:	ldr	x0, [sp, #88]
     850:	ldr	x2, [x0, #40]
     854:	ldr	x0, [sp, #56]
     858:	sub	x0, x2, x0
     85c:	add	x0, x1, x0
     860:	ldr	x2, [sp, #56]
     864:	mov	x1, x0
     868:	ldr	x0, [sp, #32]
     86c:	bl	0 <grub_memmove>
     870:	ldr	x1, [sp, #24]
     874:	ldr	x0, [sp, #56]
     878:	sub	x0, x1, x0
     87c:	str	x0, [sp, #24]
     880:	ldr	x1, [sp, #32]
     884:	ldr	x0, [sp, #56]
     888:	add	x0, x1, x0
     88c:	str	x0, [sp, #32]
     890:	ldr	x1, [sp, #104]
     894:	ldr	x0, [sp, #56]
     898:	add	x0, x1, x0
     89c:	str	x0, [sp, #104]
     8a0:	ldr	x0, [sp, #64]
     8a4:	str	x0, [sp, #96]
     8a8:	ldr	x0, [sp, #88]
     8ac:	str	xzr, [x0, #40]
     8b0:	ldr	w0, [sp, #76]
     8b4:	cmp	w0, #0x1
     8b8:	b.eq	8cc <grub_mod_init-0xa4>  // b.none
     8bc:	ldr	x0, [sp, #24]
     8c0:	cmp	x0, #0x0
     8c4:	b.ne	708 <grub_mod_init-0x268>  // b.any
     8c8:	b	8d0 <grub_mod_init-0xa0>
     8cc:	nop
     8d0:	ldr	x0, [sp, #104]
     8d4:	cmp	x0, #0x0
     8d8:	b.lt	8f4 <grub_mod_init-0x7c>  // b.tstop
     8dc:	ldr	x0, [sp, #40]
     8e0:	ldr	x1, [x0, #24]
     8e4:	ldr	x0, [sp, #104]
     8e8:	add	x1, x1, x0
     8ec:	ldr	x0, [sp, #88]
     8f0:	str	x1, [x0, #16448]
     8f4:	ldr	x0, [sp, #104]
     8f8:	ldp	x29, x30, [sp], #112
     8fc:	ret
	...
     908:	stp	x29, x30, [sp, #-48]!
     90c:	mov	x29, sp
     910:	str	x0, [sp, #24]
     914:	ldr	x0, [sp, #24]
     918:	ldr	x0, [x0, #80]
     91c:	str	x0, [sp, #40]
     920:	ldr	x0, [sp, #40]
     924:	ldr	x0, [x0, #56]
     928:	bl	6e24 <xz_dec_end>
     92c:	ldr	x0, [sp, #40]
     930:	ldr	x0, [x0]
     934:	bl	0 <grub_file_close>
     938:	ldr	x0, [sp, #40]
     93c:	bl	0 <grub_free>
     940:	ldr	x0, [sp, #24]
     944:	str	xzr, [x0, #8]
     948:	ldr	x0, [sp, #24]
     94c:	str	xzr, [x0]
     950:	adrp	x0, 0 <grub_mod_init-0x970>
     954:	add	x0, x0, #0x0
     958:	ldr	x0, [x0]
     95c:	ldr	w0, [x0]
     960:	ldp	x29, x30, [sp], #48
     964:	ret
	...

0000000000000970 <grub_mod_init>:
     970:	stp	x29, x30, [sp, #-32]!
     974:	mov	x29, sp
     978:	str	x0, [sp, #24]
     97c:	adrp	x0, 0 <grub_mod_init-0x970>
     980:	add	x0, x0, #0x0
     984:	ldr	x1, [x0]
     988:	mov	w0, #0x2                   	// #2
     98c:	bl	0 <grub_mod_init-0x970>
     990:	nop
     994:	ldp	x29, x30, [sp], #32
     998:	ret
     99c:	nop
	...

00000000000009a8 <grub_mod_fini>:
     9a8:	stp	x29, x30, [sp, #-16]!
     9ac:	mov	x29, sp
     9b0:	mov	w0, #0x2                   	// #2
     9b4:	bl	38 <grub_mod_init-0x938>
     9b8:	nop
     9bc:	ldp	x29, x30, [sp], #16
     9c0:	ret
     9c4:	nop
     9c8:	stp	x29, x30, [sp, #-48]!
     9cc:	mov	x29, sp
     9d0:	str	x0, [sp, #40]
     9d4:	str	x1, [sp, #32]
     9d8:	str	x2, [sp, #24]
     9dc:	ldr	x2, [sp, #24]
     9e0:	ldr	x1, [sp, #32]
     9e4:	ldr	x0, [sp, #40]
     9e8:	bl	0 <grub_memmove>
     9ec:	ldp	x29, x30, [sp], #48
     9f0:	ret
     9f4:	stp	x29, x30, [sp, #-32]!
     9f8:	mov	x29, sp
     9fc:	str	x0, [sp, #24]
     a00:	ldr	x0, [sp, #24]
     a04:	bl	0 <grub_malloc>
     a08:	ldp	x29, x30, [sp], #32
     a0c:	ret
     a10:	sub	sp, sp, #0x10
     a14:	str	x0, [sp, #8]
     a18:	ldr	x0, [sp, #8]
     a1c:	ldrb	w0, [x0]
     a20:	mov	w1, w0
     a24:	ldr	x0, [sp, #8]
     a28:	add	x0, x0, #0x1
     a2c:	ldrb	w0, [x0]
     a30:	lsl	w0, w0, #8
     a34:	orr	w1, w1, w0
     a38:	ldr	x0, [sp, #8]
     a3c:	add	x0, x0, #0x2
     a40:	ldrb	w0, [x0]
     a44:	lsl	w0, w0, #16
     a48:	orr	w1, w1, w0
     a4c:	ldr	x0, [sp, #8]
     a50:	add	x0, x0, #0x3
     a54:	ldrb	w0, [x0]
     a58:	lsl	w0, w0, #24
     a5c:	orr	w0, w1, w0
     a60:	add	sp, sp, #0x10
     a64:	ret
     a68:	sub	sp, sp, #0x10
     a6c:	str	x0, [sp, #8]
     a70:	ldr	x0, [sp, #8]
     a74:	ldrb	w0, [x0]
     a78:	lsl	w0, w0, #24
     a7c:	mov	w1, w0
     a80:	ldr	x0, [sp, #8]
     a84:	add	x0, x0, #0x1
     a88:	ldrb	w0, [x0]
     a8c:	lsl	w0, w0, #16
     a90:	orr	w1, w1, w0
     a94:	ldr	x0, [sp, #8]
     a98:	add	x0, x0, #0x2
     a9c:	ldrb	w0, [x0]
     aa0:	lsl	w0, w0, #8
     aa4:	orr	w0, w1, w0
     aa8:	ldr	x1, [sp, #8]
     aac:	add	x1, x1, #0x3
     ab0:	ldrb	w1, [x1]
     ab4:	orr	w0, w0, w1
     ab8:	add	sp, sp, #0x10
     abc:	ret
     ac0:	sub	sp, sp, #0x10
     ac4:	str	w0, [sp, #12]
     ac8:	str	x1, [sp]
     acc:	ldr	w0, [sp, #12]
     ad0:	and	w1, w0, #0xff
     ad4:	ldr	x0, [sp]
     ad8:	strb	w1, [x0]
     adc:	ldr	w0, [sp, #12]
     ae0:	lsr	w1, w0, #8
     ae4:	ldr	x0, [sp]
     ae8:	add	x0, x0, #0x1
     aec:	and	w1, w1, #0xff
     af0:	strb	w1, [x0]
     af4:	ldr	w0, [sp, #12]
     af8:	lsr	w1, w0, #16
     afc:	ldr	x0, [sp]
     b00:	add	x0, x0, #0x2
     b04:	and	w1, w1, #0xff
     b08:	strb	w1, [x0]
     b0c:	ldr	w0, [sp, #12]
     b10:	lsr	w1, w0, #24
     b14:	ldr	x0, [sp]
     b18:	add	x0, x0, #0x3
     b1c:	and	w1, w1, #0xff
     b20:	strb	w1, [x0]
     b24:	nop
     b28:	add	sp, sp, #0x10
     b2c:	ret
     b30:	sub	sp, sp, #0x10
     b34:	str	w0, [sp, #12]
     b38:	str	x1, [sp]
     b3c:	ldr	w0, [sp, #12]
     b40:	lsr	w0, w0, #24
     b44:	and	w1, w0, #0xff
     b48:	ldr	x0, [sp]
     b4c:	strb	w1, [x0]
     b50:	ldr	w0, [sp, #12]
     b54:	lsr	w1, w0, #16
     b58:	ldr	x0, [sp]
     b5c:	add	x0, x0, #0x1
     b60:	and	w1, w1, #0xff
     b64:	strb	w1, [x0]
     b68:	ldr	w0, [sp, #12]
     b6c:	lsr	w1, w0, #8
     b70:	ldr	x0, [sp]
     b74:	add	x0, x0, #0x2
     b78:	and	w1, w1, #0xff
     b7c:	strb	w1, [x0]
     b80:	ldr	x0, [sp]
     b84:	add	x0, x0, #0x3
     b88:	ldr	w1, [sp, #12]
     b8c:	and	w1, w1, #0xff
     b90:	strb	w1, [x0]
     b94:	nop
     b98:	add	sp, sp, #0x10
     b9c:	ret
     ba0:	stp	x29, x30, [sp, #-96]!
     ba4:	mov	x29, sp
     ba8:	str	x0, [sp, #40]
     bac:	str	x1, [sp, #32]
     bb0:	str	x2, [sp, #24]
     bb4:	mov	x0, #0xffffffffffffffff    	// #-1
     bb8:	str	x0, [sp, #80]
     bbc:	ldr	x0, [sp, #40]
     bc0:	ldr	w0, [x0, #16]
     bc4:	str	w0, [sp, #76]
     bc8:	ldr	x0, [sp, #24]
     bcc:	cmp	x0, #0x4
     bd0:	b.hi	bdc <grub_mod_fini+0x234>  // b.pmore
     bd4:	mov	x0, #0x0                   	// #0
     bd8:	b	ea0 <grub_mod_fini+0x4f8>
     bdc:	ldr	x0, [sp, #24]
     be0:	sub	x0, x0, #0x4
     be4:	str	x0, [sp, #24]
     be8:	str	xzr, [sp, #88]
     bec:	b	e50 <grub_mod_fini+0x4a8>
     bf0:	ldr	x1, [sp, #32]
     bf4:	ldr	x0, [sp, #88]
     bf8:	add	x0, x1, x0
     bfc:	ldrb	w0, [x0]
     c00:	and	w0, w0, #0xfe
     c04:	cmp	w0, #0xe8
     c08:	b.ne	e40 <grub_mod_fini+0x498>  // b.any
     c0c:	ldr	x1, [sp, #88]
     c10:	ldr	x0, [sp, #80]
     c14:	sub	x0, x1, x0
     c18:	str	x0, [sp, #80]
     c1c:	ldr	x0, [sp, #80]
     c20:	cmp	x0, #0x3
     c24:	b.ls	c30 <grub_mod_fini+0x288>  // b.plast
     c28:	str	wzr, [sp, #76]
     c2c:	b	cd8 <grub_mod_fini+0x330>
     c30:	ldr	x0, [sp, #80]
     c34:	sub	w0, w0, #0x1
     c38:	ldr	w1, [sp, #76]
     c3c:	lsl	w0, w1, w0
     c40:	and	w0, w0, #0x7
     c44:	str	w0, [sp, #76]
     c48:	ldr	w0, [sp, #76]
     c4c:	cmp	w0, #0x0
     c50:	b.eq	cd8 <grub_mod_fini+0x330>  // b.none
     c54:	adrp	x0, 0 <grub_mod_init-0x970>
     c58:	add	x0, x0, #0x0
     c5c:	ldr	x1, [x0]
     c60:	ldr	w0, [sp, #76]
     c64:	ldrb	w0, [x1, x0]
     c68:	and	x0, x0, #0xff
     c6c:	ldr	x1, [sp, #88]
     c70:	sub	x0, x1, x0
     c74:	add	x0, x0, #0x4
     c78:	ldr	x1, [sp, #32]
     c7c:	add	x0, x1, x0
     c80:	ldrb	w0, [x0]
     c84:	strb	w0, [sp, #71]
     c88:	adrp	x0, 0 <grub_mod_init-0x970>
     c8c:	add	x0, x0, #0x0
     c90:	ldr	x0, [x0]
     c94:	ldr	w1, [sp, #76]
     c98:	ldr	w0, [x0, x1, lsl #2]
     c9c:	cmp	w0, #0x0
     ca0:	b.eq	cbc <grub_mod_fini+0x314>  // b.none
     ca4:	ldrb	w0, [sp, #71]
     ca8:	cmp	w0, #0x0
     cac:	b.eq	cbc <grub_mod_fini+0x314>  // b.none
     cb0:	ldrb	w0, [sp, #71]
     cb4:	cmp	w0, #0xff
     cb8:	b.ne	cd8 <grub_mod_fini+0x330>  // b.any
     cbc:	ldr	x0, [sp, #88]
     cc0:	str	x0, [sp, #80]
     cc4:	ldr	w0, [sp, #76]
     cc8:	lsl	w0, w0, #1
     ccc:	orr	w0, w0, #0x1
     cd0:	str	w0, [sp, #76]
     cd4:	b	e44 <grub_mod_fini+0x49c>
     cd8:	ldr	x0, [sp, #88]
     cdc:	str	x0, [sp, #80]
     ce0:	ldr	x0, [sp, #88]
     ce4:	add	x0, x0, #0x4
     ce8:	ldr	x1, [sp, #32]
     cec:	add	x0, x1, x0
     cf0:	ldrb	w0, [x0]
     cf4:	cmp	w0, #0x0
     cf8:	b.eq	d18 <grub_mod_fini+0x370>  // b.none
     cfc:	ldr	x0, [sp, #88]
     d00:	add	x0, x0, #0x4
     d04:	ldr	x1, [sp, #32]
     d08:	add	x0, x1, x0
     d0c:	ldrb	w0, [x0]
     d10:	cmp	w0, #0xff
     d14:	b.ne	e2c <grub_mod_fini+0x484>  // b.any
     d18:	ldr	x0, [sp, #88]
     d1c:	add	x0, x0, #0x1
     d20:	ldr	x1, [sp, #32]
     d24:	add	x0, x1, x0
     d28:	bl	a10 <grub_mod_fini+0x68>
     d2c:	str	w0, [sp, #72]
     d30:	ldr	x0, [sp, #40]
     d34:	ldr	w0, [x0, #12]
     d38:	ldr	x1, [sp, #88]
     d3c:	add	w0, w0, w1
     d40:	ldr	w1, [sp, #72]
     d44:	sub	w0, w1, w0
     d48:	sub	w0, w0, #0x5
     d4c:	str	w0, [sp, #64]
     d50:	ldr	w0, [sp, #76]
     d54:	cmp	w0, #0x0
     d58:	b.eq	dd0 <grub_mod_fini+0x428>  // b.none
     d5c:	adrp	x0, 0 <grub_mod_init-0x970>
     d60:	add	x0, x0, #0x0
     d64:	ldr	x1, [x0]
     d68:	ldr	w0, [sp, #76]
     d6c:	ldrb	w0, [x1, x0]
     d70:	lsl	w0, w0, #3
     d74:	str	w0, [sp, #60]
     d78:	mov	w1, #0x18                  	// #24
     d7c:	ldr	w0, [sp, #60]
     d80:	sub	w0, w1, w0
     d84:	ldr	w1, [sp, #64]
     d88:	lsr	w0, w1, w0
     d8c:	strb	w0, [sp, #71]
     d90:	ldrb	w0, [sp, #71]
     d94:	cmp	w0, #0x0
     d98:	b.eq	da8 <grub_mod_fini+0x400>  // b.none
     d9c:	ldrb	w0, [sp, #71]
     da0:	cmp	w0, #0xff
     da4:	b.ne	dd8 <grub_mod_fini+0x430>  // b.any
     da8:	mov	w1, #0x20                  	// #32
     dac:	ldr	w0, [sp, #60]
     db0:	sub	w0, w1, w0
     db4:	mov	w1, #0x1                   	// #1
     db8:	lsl	w0, w1, w0
     dbc:	sub	w0, w0, #0x1
     dc0:	ldr	w1, [sp, #64]
     dc4:	eor	w0, w1, w0
     dc8:	str	w0, [sp, #72]
     dcc:	b	d30 <grub_mod_fini+0x388>
     dd0:	nop
     dd4:	b	ddc <grub_mod_fini+0x434>
     dd8:	nop
     ddc:	ldr	w0, [sp, #64]
     de0:	and	w0, w0, #0x1ffffff
     de4:	str	w0, [sp, #64]
     de8:	ldr	w0, [sp, #64]
     dec:	and	w0, w0, #0x1000000
     df0:	neg	w0, w0
     df4:	ldr	w1, [sp, #64]
     df8:	orr	w0, w1, w0
     dfc:	str	w0, [sp, #64]
     e00:	ldr	x0, [sp, #88]
     e04:	add	x0, x0, #0x1
     e08:	ldr	x1, [sp, #32]
     e0c:	add	x0, x1, x0
     e10:	mov	x1, x0
     e14:	ldr	w0, [sp, #64]
     e18:	bl	ac0 <grub_mod_fini+0x118>
     e1c:	ldr	x0, [sp, #88]
     e20:	add	x0, x0, #0x4
     e24:	str	x0, [sp, #88]
     e28:	b	e44 <grub_mod_fini+0x49c>
     e2c:	ldr	w0, [sp, #76]
     e30:	lsl	w0, w0, #1
     e34:	orr	w0, w0, #0x1
     e38:	str	w0, [sp, #76]
     e3c:	b	e44 <grub_mod_fini+0x49c>
     e40:	nop
     e44:	ldr	x0, [sp, #88]
     e48:	add	x0, x0, #0x1
     e4c:	str	x0, [sp, #88]
     e50:	ldr	x1, [sp, #88]
     e54:	ldr	x0, [sp, #24]
     e58:	cmp	x1, x0
     e5c:	b.cc	bf0 <grub_mod_fini+0x248>  // b.lo, b.ul, b.last
     e60:	ldr	x1, [sp, #88]
     e64:	ldr	x0, [sp, #80]
     e68:	sub	x0, x1, x0
     e6c:	str	x0, [sp, #80]
     e70:	ldr	x0, [sp, #80]
     e74:	cmp	x0, #0x3
     e78:	b.hi	e90 <grub_mod_fini+0x4e8>  // b.pmore
     e7c:	ldr	x0, [sp, #80]
     e80:	sub	w0, w0, #0x1
     e84:	ldr	w1, [sp, #76]
     e88:	lsl	w0, w1, w0
     e8c:	b	e94 <grub_mod_fini+0x4ec>
     e90:	mov	w0, #0x0                   	// #0
     e94:	ldr	x1, [sp, #40]
     e98:	str	w0, [x1, #16]
     e9c:	ldr	x0, [sp, #88]
     ea0:	ldp	x29, x30, [sp], #96
     ea4:	ret
	...
     eb8:	stp	x29, x30, [sp, #-64]!
     ebc:	mov	x29, sp
     ec0:	str	x0, [sp, #40]
     ec4:	str	x1, [sp, #32]
     ec8:	str	x2, [sp, #24]
     ecc:	str	xzr, [sp, #56]
     ed0:	b	f6c <grub_mod_fini+0x5c4>
     ed4:	ldr	x1, [sp, #32]
     ed8:	ldr	x0, [sp, #56]
     edc:	add	x0, x1, x0
     ee0:	bl	a68 <grub_mod_fini+0xc0>
     ee4:	str	w0, [sp, #52]
     ee8:	ldr	w0, [sp, #52]
     eec:	and	w1, w0, #0xfc000003
     ef0:	mov	w0, #0x1                   	// #1
     ef4:	movk	w0, #0x4800, lsl #16
     ef8:	cmp	w1, w0
     efc:	b.ne	f60 <grub_mod_fini+0x5b8>  // b.any
     f00:	ldr	w0, [sp, #52]
     f04:	and	w0, w0, #0x3fffffc
     f08:	str	w0, [sp, #52]
     f0c:	ldr	x0, [sp, #40]
     f10:	ldr	w0, [x0, #12]
     f14:	ldr	x1, [sp, #56]
     f18:	add	w0, w0, w1
     f1c:	ldr	w1, [sp, #52]
     f20:	sub	w0, w1, w0
     f24:	str	w0, [sp, #52]
     f28:	ldr	w0, [sp, #52]
     f2c:	and	w0, w0, #0x3fffffc
     f30:	str	w0, [sp, #52]
     f34:	ldr	w1, [sp, #52]
     f38:	mov	w0, #0x1                   	// #1
     f3c:	movk	w0, #0x4800, lsl #16
     f40:	orr	w0, w1, w0
     f44:	str	w0, [sp, #52]
     f48:	ldr	x1, [sp, #32]
     f4c:	ldr	x0, [sp, #56]
     f50:	add	x0, x1, x0
     f54:	mov	x1, x0
     f58:	ldr	w0, [sp, #52]
     f5c:	bl	b30 <grub_mod_fini+0x188>
     f60:	ldr	x0, [sp, #56]
     f64:	add	x0, x0, #0x4
     f68:	str	x0, [sp, #56]
     f6c:	ldr	x0, [sp, #56]
     f70:	add	x0, x0, #0x3
     f74:	ldr	x1, [sp, #24]
     f78:	cmp	x1, x0
     f7c:	b.hi	ed4 <grub_mod_fini+0x52c>  // b.pmore
     f80:	ldr	x0, [sp, #56]
     f84:	ldp	x29, x30, [sp], #64
     f88:	ret
     f8c:	sub	sp, sp, #0x60
     f90:	str	x0, [sp, #24]
     f94:	str	x1, [sp, #16]
     f98:	str	x2, [sp, #8]
     f9c:	str	xzr, [sp, #88]
     fa0:	b	1210 <grub_mod_fini+0x868>
     fa4:	ldr	x1, [sp, #16]
     fa8:	ldr	x0, [sp, #88]
     fac:	add	x0, x1, x0
     fb0:	ldrb	w0, [x0]
     fb4:	and	w2, w0, #0x1f
     fb8:	adrp	x0, 0 <grub_mod_init-0x970>
     fbc:	add	x0, x0, #0x0
     fc0:	ldr	x1, [x0]
     fc4:	sxtw	x0, w2
     fc8:	ldrb	w0, [x1, x0]
     fcc:	str	w0, [sp, #60]
     fd0:	str	wzr, [sp, #76]
     fd4:	mov	w0, #0x5                   	// #5
     fd8:	str	w0, [sp, #72]
     fdc:	b	11f8 <grub_mod_fini+0x850>
     fe0:	ldr	w0, [sp, #76]
     fe4:	ldr	w1, [sp, #60]
     fe8:	lsr	w0, w1, w0
     fec:	and	w0, w0, #0x1
     ff0:	cmp	w0, #0x0
     ff4:	b.eq	11dc <grub_mod_fini+0x834>  // b.none
     ff8:	ldr	w0, [sp, #72]
     ffc:	lsr	w0, w0, #3
    1000:	str	w0, [sp, #56]
    1004:	ldr	w0, [sp, #72]
    1008:	and	w0, w0, #0x7
    100c:	str	w0, [sp, #52]
    1010:	str	xzr, [sp, #64]
    1014:	str	xzr, [sp, #80]
    1018:	b	1064 <grub_mod_fini+0x6bc>
    101c:	ldr	x1, [sp, #88]
    1020:	ldr	x0, [sp, #80]
    1024:	add	x1, x1, x0
    1028:	ldr	w0, [sp, #56]
    102c:	add	x0, x1, x0
    1030:	ldr	x1, [sp, #16]
    1034:	add	x0, x1, x0
    1038:	ldrb	w0, [x0]
    103c:	and	x1, x0, #0xff
    1040:	ldr	x0, [sp, #80]
    1044:	lsl	w0, w0, #3
    1048:	lsl	x0, x1, x0
    104c:	ldr	x1, [sp, #64]
    1050:	orr	x0, x1, x0
    1054:	str	x0, [sp, #64]
    1058:	ldr	x0, [sp, #80]
    105c:	add	x0, x0, #0x1
    1060:	str	x0, [sp, #80]
    1064:	ldr	x0, [sp, #80]
    1068:	cmp	x0, #0x5
    106c:	b.ls	101c <grub_mod_fini+0x674>  // b.plast
    1070:	ldr	w0, [sp, #52]
    1074:	ldr	x1, [sp, #64]
    1078:	lsr	x0, x1, x0
    107c:	str	x0, [sp, #40]
    1080:	ldr	x0, [sp, #40]
    1084:	lsr	x0, x0, #37
    1088:	and	x0, x0, #0xf
    108c:	cmp	x0, #0x5
    1090:	b.ne	11e0 <grub_mod_fini+0x838>  // b.any
    1094:	ldr	x0, [sp, #40]
    1098:	lsr	x0, x0, #9
    109c:	and	x0, x0, #0x7
    10a0:	cmp	x0, #0x0
    10a4:	b.ne	11e0 <grub_mod_fini+0x838>  // b.any
    10a8:	ldr	x0, [sp, #40]
    10ac:	lsr	x0, x0, #13
    10b0:	and	w0, w0, #0xfffff
    10b4:	str	w0, [sp, #36]
    10b8:	ldr	x0, [sp, #40]
    10bc:	lsr	x0, x0, #36
    10c0:	lsl	w0, w0, #20
    10c4:	and	w0, w0, #0x100000
    10c8:	ldr	w1, [sp, #36]
    10cc:	orr	w0, w1, w0
    10d0:	str	w0, [sp, #36]
    10d4:	ldr	w0, [sp, #36]
    10d8:	lsl	w0, w0, #4
    10dc:	str	w0, [sp, #36]
    10e0:	ldr	x0, [sp, #24]
    10e4:	ldr	w0, [x0, #12]
    10e8:	ldr	x1, [sp, #88]
    10ec:	add	w0, w0, w1
    10f0:	ldr	w1, [sp, #36]
    10f4:	sub	w0, w1, w0
    10f8:	str	w0, [sp, #36]
    10fc:	ldr	w0, [sp, #36]
    1100:	lsr	w0, w0, #4
    1104:	str	w0, [sp, #36]
    1108:	ldr	x1, [sp, #40]
    110c:	mov	x0, #0xffff000000001fff    	// #-281474976702465
    1110:	movk	x0, #0xffee, lsl #32
    1114:	and	x0, x1, x0
    1118:	str	x0, [sp, #40]
    111c:	ldr	w0, [sp, #36]
    1120:	lsl	x0, x0, #13
    1124:	and	x0, x0, #0x1ffffe000
    1128:	ldr	x1, [sp, #40]
    112c:	orr	x0, x1, x0
    1130:	str	x0, [sp, #40]
    1134:	ldr	w0, [sp, #36]
    1138:	lsl	x0, x0, #16
    113c:	and	x0, x0, #0x1000000000
    1140:	ldr	x1, [sp, #40]
    1144:	orr	x0, x1, x0
    1148:	str	x0, [sp, #40]
    114c:	ldr	w0, [sp, #52]
    1150:	mov	w1, #0x1                   	// #1
    1154:	lsl	w0, w1, w0
    1158:	sub	w0, w0, #0x1
    115c:	sxtw	x0, w0
    1160:	ldr	x1, [sp, #64]
    1164:	and	x0, x1, x0
    1168:	str	x0, [sp, #64]
    116c:	ldr	w0, [sp, #52]
    1170:	ldr	x1, [sp, #40]
    1174:	lsl	x0, x1, x0
    1178:	ldr	x1, [sp, #64]
    117c:	orr	x0, x1, x0
    1180:	str	x0, [sp, #64]
    1184:	str	xzr, [sp, #80]
    1188:	b	11cc <grub_mod_fini+0x824>
    118c:	ldr	x0, [sp, #80]
    1190:	lsl	w0, w0, #3
    1194:	ldr	x1, [sp, #64]
    1198:	lsr	x2, x1, x0
    119c:	ldr	x1, [sp, #88]
    11a0:	ldr	x0, [sp, #80]
    11a4:	add	x1, x1, x0
    11a8:	ldr	w0, [sp, #56]
    11ac:	add	x0, x1, x0
    11b0:	ldr	x1, [sp, #16]
    11b4:	add	x0, x1, x0
    11b8:	and	w1, w2, #0xff
    11bc:	strb	w1, [x0]
    11c0:	ldr	x0, [sp, #80]
    11c4:	add	x0, x0, #0x1
    11c8:	str	x0, [sp, #80]
    11cc:	ldr	x0, [sp, #80]
    11d0:	cmp	x0, #0x5
    11d4:	b.ls	118c <grub_mod_fini+0x7e4>  // b.plast
    11d8:	b	11e0 <grub_mod_fini+0x838>
    11dc:	nop
    11e0:	ldr	w0, [sp, #76]
    11e4:	add	w0, w0, #0x1
    11e8:	str	w0, [sp, #76]
    11ec:	ldr	w0, [sp, #72]
    11f0:	add	w0, w0, #0x29
    11f4:	str	w0, [sp, #72]
    11f8:	ldr	w0, [sp, #76]
    11fc:	cmp	w0, #0x2
    1200:	b.ls	fe0 <grub_mod_fini+0x638>  // b.plast
    1204:	ldr	x0, [sp, #88]
    1208:	add	x0, x0, #0x10
    120c:	str	x0, [sp, #88]
    1210:	ldr	x0, [sp, #88]
    1214:	add	x0, x0, #0x10
    1218:	ldr	x1, [sp, #8]
    121c:	cmp	x1, x0
    1220:	b.cs	fa4 <grub_mod_fini+0x5fc>  // b.hs, b.nlast
    1224:	ldr	x0, [sp, #88]
    1228:	add	sp, sp, #0x60
    122c:	ret
	...
    1238:	sub	sp, sp, #0x30
    123c:	str	x0, [sp, #24]
    1240:	str	x1, [sp, #16]
    1244:	str	x2, [sp, #8]
    1248:	str	xzr, [sp, #40]
    124c:	b	1358 <grub_mod_fini+0x9b0>
    1250:	ldr	x0, [sp, #40]
    1254:	add	x0, x0, #0x3
    1258:	ldr	x1, [sp, #16]
    125c:	add	x0, x1, x0
    1260:	ldrb	w0, [x0]
    1264:	cmp	w0, #0xeb
    1268:	b.ne	134c <grub_mod_fini+0x9a4>  // b.any
    126c:	ldr	x1, [sp, #16]
    1270:	ldr	x0, [sp, #40]
    1274:	add	x0, x1, x0
    1278:	ldrb	w0, [x0]
    127c:	mov	w2, w0
    1280:	ldr	x0, [sp, #40]
    1284:	add	x0, x0, #0x1
    1288:	ldr	x1, [sp, #16]
    128c:	add	x0, x1, x0
    1290:	ldrb	w0, [x0]
    1294:	lsl	w0, w0, #8
    1298:	orr	w1, w2, w0
    129c:	ldr	x0, [sp, #40]
    12a0:	add	x0, x0, #0x2
    12a4:	ldr	x2, [sp, #16]
    12a8:	add	x0, x2, x0
    12ac:	ldrb	w0, [x0]
    12b0:	lsl	w0, w0, #16
    12b4:	orr	w0, w1, w0
    12b8:	str	w0, [sp, #36]
    12bc:	ldr	w0, [sp, #36]
    12c0:	lsl	w0, w0, #2
    12c4:	str	w0, [sp, #36]
    12c8:	ldr	x0, [sp, #24]
    12cc:	ldr	w0, [x0, #12]
    12d0:	ldr	x1, [sp, #40]
    12d4:	add	w0, w0, w1
    12d8:	ldr	w1, [sp, #36]
    12dc:	sub	w0, w1, w0
    12e0:	sub	w0, w0, #0x8
    12e4:	str	w0, [sp, #36]
    12e8:	ldr	w0, [sp, #36]
    12ec:	lsr	w0, w0, #2
    12f0:	str	w0, [sp, #36]
    12f4:	ldr	x1, [sp, #16]
    12f8:	ldr	x0, [sp, #40]
    12fc:	add	x0, x1, x0
    1300:	ldr	w1, [sp, #36]
    1304:	and	w1, w1, #0xff
    1308:	strb	w1, [x0]
    130c:	ldr	w0, [sp, #36]
    1310:	lsr	w2, w0, #8
    1314:	ldr	x0, [sp, #40]
    1318:	add	x0, x0, #0x1
    131c:	ldr	x1, [sp, #16]
    1320:	add	x0, x1, x0
    1324:	and	w1, w2, #0xff
    1328:	strb	w1, [x0]
    132c:	ldr	w0, [sp, #36]
    1330:	lsr	w2, w0, #16
    1334:	ldr	x0, [sp, #40]
    1338:	add	x0, x0, #0x2
    133c:	ldr	x1, [sp, #16]
    1340:	add	x0, x1, x0
    1344:	and	w1, w2, #0xff
    1348:	strb	w1, [x0]
    134c:	ldr	x0, [sp, #40]
    1350:	add	x0, x0, #0x4
    1354:	str	x0, [sp, #40]
    1358:	ldr	x0, [sp, #40]
    135c:	add	x0, x0, #0x4
    1360:	ldr	x1, [sp, #8]
    1364:	cmp	x1, x0
    1368:	b.cs	1250 <grub_mod_fini+0x8a8>  // b.hs, b.nlast
    136c:	ldr	x0, [sp, #40]
    1370:	add	sp, sp, #0x30
    1374:	ret
    1378:	sub	sp, sp, #0x30
    137c:	str	x0, [sp, #24]
    1380:	str	x1, [sp, #16]
    1384:	str	x2, [sp, #8]
    1388:	str	xzr, [sp, #40]
    138c:	b	1520 <grub_mod_fini+0xb78>
    1390:	ldr	x0, [sp, #40]
    1394:	add	x0, x0, #0x1
    1398:	ldr	x1, [sp, #16]
    139c:	add	x0, x1, x0
    13a0:	ldrb	w0, [x0]
    13a4:	and	w0, w0, #0xf8
    13a8:	cmp	w0, #0xf0
    13ac:	b.ne	1514 <grub_mod_fini+0xb6c>  // b.any
    13b0:	ldr	x0, [sp, #40]
    13b4:	add	x0, x0, #0x3
    13b8:	ldr	x1, [sp, #16]
    13bc:	add	x0, x1, x0
    13c0:	ldrb	w0, [x0]
    13c4:	and	w0, w0, #0xf8
    13c8:	cmp	w0, #0xf8
    13cc:	b.ne	1514 <grub_mod_fini+0xb6c>  // b.any
    13d0:	ldr	x0, [sp, #40]
    13d4:	add	x0, x0, #0x1
    13d8:	ldr	x1, [sp, #16]
    13dc:	add	x0, x1, x0
    13e0:	ldrb	w0, [x0]
    13e4:	lsl	w0, w0, #19
    13e8:	and	w1, w0, #0x380000
    13ec:	ldr	x2, [sp, #16]
    13f0:	ldr	x0, [sp, #40]
    13f4:	add	x0, x2, x0
    13f8:	ldrb	w0, [x0]
    13fc:	lsl	w0, w0, #11
    1400:	orr	w1, w1, w0
    1404:	ldr	x0, [sp, #40]
    1408:	add	x0, x0, #0x3
    140c:	ldr	x2, [sp, #16]
    1410:	add	x0, x2, x0
    1414:	ldrb	w0, [x0]
    1418:	lsl	w0, w0, #8
    141c:	and	w0, w0, #0x700
    1420:	orr	w0, w1, w0
    1424:	ldr	x1, [sp, #40]
    1428:	add	x1, x1, #0x2
    142c:	ldr	x2, [sp, #16]
    1430:	add	x1, x2, x1
    1434:	ldrb	w1, [x1]
    1438:	orr	w0, w0, w1
    143c:	str	w0, [sp, #36]
    1440:	ldr	w0, [sp, #36]
    1444:	lsl	w0, w0, #1
    1448:	str	w0, [sp, #36]
    144c:	ldr	x0, [sp, #24]
    1450:	ldr	w0, [x0, #12]
    1454:	ldr	x1, [sp, #40]
    1458:	add	w0, w0, w1
    145c:	ldr	w1, [sp, #36]
    1460:	sub	w0, w1, w0
    1464:	sub	w0, w0, #0x4
    1468:	str	w0, [sp, #36]
    146c:	ldr	w0, [sp, #36]
    1470:	lsr	w0, w0, #1
    1474:	str	w0, [sp, #36]
    1478:	ldr	w0, [sp, #36]
    147c:	lsr	w0, w0, #19
    1480:	and	w0, w0, #0xff
    1484:	and	w0, w0, #0x7
    1488:	and	w1, w0, #0xff
    148c:	ldr	x0, [sp, #40]
    1490:	add	x0, x0, #0x1
    1494:	ldr	x2, [sp, #16]
    1498:	add	x0, x2, x0
    149c:	orr	w1, w1, #0xfffffff0
    14a0:	and	w1, w1, #0xff
    14a4:	strb	w1, [x0]
    14a8:	ldr	w0, [sp, #36]
    14ac:	lsr	w2, w0, #11
    14b0:	ldr	x1, [sp, #16]
    14b4:	ldr	x0, [sp, #40]
    14b8:	add	x0, x1, x0
    14bc:	and	w1, w2, #0xff
    14c0:	strb	w1, [x0]
    14c4:	ldr	w0, [sp, #36]
    14c8:	lsr	w0, w0, #8
    14cc:	and	w1, w0, #0xff
    14d0:	ldr	x0, [sp, #40]
    14d4:	add	x0, x0, #0x3
    14d8:	ldr	x2, [sp, #16]
    14dc:	add	x0, x2, x0
    14e0:	orr	w1, w1, #0xfffffff8
    14e4:	and	w1, w1, #0xff
    14e8:	strb	w1, [x0]
    14ec:	ldr	x0, [sp, #40]
    14f0:	add	x0, x0, #0x2
    14f4:	ldr	x1, [sp, #16]
    14f8:	add	x0, x1, x0
    14fc:	ldr	w1, [sp, #36]
    1500:	and	w1, w1, #0xff
    1504:	strb	w1, [x0]
    1508:	ldr	x0, [sp, #40]
    150c:	add	x0, x0, #0x2
    1510:	str	x0, [sp, #40]
    1514:	ldr	x0, [sp, #40]
    1518:	add	x0, x0, #0x2
    151c:	str	x0, [sp, #40]
    1520:	ldr	x0, [sp, #40]
    1524:	add	x0, x0, #0x4
    1528:	ldr	x1, [sp, #8]
    152c:	cmp	x1, x0
    1530:	b.cs	1390 <grub_mod_fini+0x9e8>  // b.hs, b.nlast
    1534:	ldr	x0, [sp, #40]
    1538:	add	sp, sp, #0x30
    153c:	ret
    1540:	stp	x29, x30, [sp, #-64]!
    1544:	mov	x29, sp
    1548:	str	x0, [sp, #40]
    154c:	str	x1, [sp, #32]
    1550:	str	x2, [sp, #24]
    1554:	str	xzr, [sp, #56]
    1558:	b	160c <grub_mod_fini+0xc64>
    155c:	ldr	x1, [sp, #32]
    1560:	ldr	x0, [sp, #56]
    1564:	add	x0, x1, x0
    1568:	bl	a68 <grub_mod_fini+0xc0>
    156c:	str	w0, [sp, #52]
    1570:	ldr	w0, [sp, #52]
    1574:	lsr	w0, w0, #22
    1578:	cmp	w0, #0x100
    157c:	b.eq	1590 <grub_mod_fini+0xbe8>  // b.none
    1580:	ldr	w0, [sp, #52]
    1584:	lsr	w0, w0, #22
    1588:	cmp	w0, #0x1ff
    158c:	b.ne	1600 <grub_mod_fini+0xc58>  // b.any
    1590:	ldr	w0, [sp, #52]
    1594:	lsl	w0, w0, #2
    1598:	str	w0, [sp, #52]
    159c:	ldr	x0, [sp, #40]
    15a0:	ldr	w0, [x0, #12]
    15a4:	ldr	x1, [sp, #56]
    15a8:	add	w0, w0, w1
    15ac:	ldr	w1, [sp, #52]
    15b0:	sub	w0, w1, w0
    15b4:	str	w0, [sp, #52]
    15b8:	ldr	w0, [sp, #52]
    15bc:	lsr	w0, w0, #2
    15c0:	str	w0, [sp, #52]
    15c4:	ldr	w0, [sp, #52]
    15c8:	and	w0, w0, #0x400000
    15cc:	mov	w1, #0x40000000            	// #1073741824
    15d0:	sub	w1, w1, w0
    15d4:	ldr	w0, [sp, #52]
    15d8:	and	w0, w0, #0x3fffff
    15dc:	orr	w0, w1, w0
    15e0:	orr	w0, w0, #0x40000000
    15e4:	str	w0, [sp, #52]
    15e8:	ldr	x1, [sp, #32]
    15ec:	ldr	x0, [sp, #56]
    15f0:	add	x0, x1, x0
    15f4:	mov	x1, x0
    15f8:	ldr	w0, [sp, #52]
    15fc:	bl	b30 <grub_mod_fini+0x188>
    1600:	ldr	x0, [sp, #56]
    1604:	add	x0, x0, #0x4
    1608:	str	x0, [sp, #56]
    160c:	ldr	x0, [sp, #56]
    1610:	add	x0, x0, #0x4
    1614:	ldr	x1, [sp, #24]
    1618:	cmp	x1, x0
    161c:	b.cs	155c <grub_mod_fini+0xbb4>  // b.hs, b.nlast
    1620:	ldr	x0, [sp, #56]
    1624:	ldp	x29, x30, [sp], #64
    1628:	ret
    162c:	stp	x29, x30, [sp, #-64]!
    1630:	mov	x29, sp
    1634:	str	x0, [sp, #40]
    1638:	str	x1, [sp, #32]
    163c:	str	x2, [sp, #24]
    1640:	str	x3, [sp, #16]
    1644:	ldr	x0, [sp, #24]
    1648:	ldr	x0, [x0]
    164c:	ldr	x1, [sp, #32]
    1650:	add	x0, x1, x0
    1654:	str	x0, [sp, #32]
    1658:	ldr	x0, [sp, #24]
    165c:	ldr	x0, [x0]
    1660:	ldr	x1, [sp, #16]
    1664:	sub	x0, x1, x0
    1668:	str	x0, [sp, #16]
    166c:	ldr	x0, [sp, #40]
    1670:	ldr	w0, [x0]
    1674:	cmp	w0, #0x9
    1678:	b.eq	1740 <grub_mod_fini+0xd98>  // b.none
    167c:	cmp	w0, #0x9
    1680:	b.hi	1758 <grub_mod_fini+0xdb0>  // b.pmore
    1684:	cmp	w0, #0x8
    1688:	b.eq	1728 <grub_mod_fini+0xd80>  // b.none
    168c:	cmp	w0, #0x8
    1690:	b.hi	1758 <grub_mod_fini+0xdb0>  // b.pmore
    1694:	cmp	w0, #0x7
    1698:	b.eq	1710 <grub_mod_fini+0xd68>  // b.none
    169c:	cmp	w0, #0x7
    16a0:	b.hi	1758 <grub_mod_fini+0xdb0>  // b.pmore
    16a4:	cmp	w0, #0x6
    16a8:	b.eq	16f8 <grub_mod_fini+0xd50>  // b.none
    16ac:	cmp	w0, #0x6
    16b0:	b.hi	1758 <grub_mod_fini+0xdb0>  // b.pmore
    16b4:	cmp	w0, #0x4
    16b8:	b.eq	16c8 <grub_mod_fini+0xd20>  // b.none
    16bc:	cmp	w0, #0x5
    16c0:	b.eq	16e0 <grub_mod_fini+0xd38>  // b.none
    16c4:	b	1758 <grub_mod_fini+0xdb0>
    16c8:	ldr	x2, [sp, #16]
    16cc:	ldr	x1, [sp, #32]
    16d0:	ldr	x0, [sp, #40]
    16d4:	bl	ba0 <grub_mod_fini+0x1f8>
    16d8:	str	x0, [sp, #56]
    16dc:	b	1760 <grub_mod_fini+0xdb8>
    16e0:	ldr	x2, [sp, #16]
    16e4:	ldr	x1, [sp, #32]
    16e8:	ldr	x0, [sp, #40]
    16ec:	bl	eb8 <grub_mod_fini+0x510>
    16f0:	str	x0, [sp, #56]
    16f4:	b	1760 <grub_mod_fini+0xdb8>
    16f8:	ldr	x2, [sp, #16]
    16fc:	ldr	x1, [sp, #32]
    1700:	ldr	x0, [sp, #40]
    1704:	bl	f8c <grub_mod_fini+0x5e4>
    1708:	str	x0, [sp, #56]
    170c:	b	1760 <grub_mod_fini+0xdb8>
    1710:	ldr	x2, [sp, #16]
    1714:	ldr	x1, [sp, #32]
    1718:	ldr	x0, [sp, #40]
    171c:	bl	1238 <grub_mod_fini+0x890>
    1720:	str	x0, [sp, #56]
    1724:	b	1760 <grub_mod_fini+0xdb8>
    1728:	ldr	x2, [sp, #16]
    172c:	ldr	x1, [sp, #32]
    1730:	ldr	x0, [sp, #40]
    1734:	bl	1378 <grub_mod_fini+0x9d0>
    1738:	str	x0, [sp, #56]
    173c:	b	1760 <grub_mod_fini+0xdb8>
    1740:	ldr	x2, [sp, #16]
    1744:	ldr	x1, [sp, #32]
    1748:	ldr	x0, [sp, #40]
    174c:	bl	1540 <grub_mod_fini+0xb98>
    1750:	str	x0, [sp, #56]
    1754:	b	1760 <grub_mod_fini+0xdb8>
    1758:	str	xzr, [sp, #56]
    175c:	nop
    1760:	ldr	x0, [sp, #24]
    1764:	ldr	x1, [x0]
    1768:	ldr	x0, [sp, #56]
    176c:	add	x1, x1, x0
    1770:	ldr	x0, [sp, #24]
    1774:	str	x1, [x0]
    1778:	ldr	x0, [sp, #40]
    177c:	ldr	w0, [x0, #12]
    1780:	ldr	x1, [sp, #56]
    1784:	add	w1, w0, w1
    1788:	ldr	x0, [sp, #40]
    178c:	str	w1, [x0, #12]
    1790:	nop
    1794:	ldp	x29, x30, [sp], #64
    1798:	ret
    179c:	stp	x29, x30, [sp, #-48]!
    17a0:	mov	x29, sp
    17a4:	str	x0, [sp, #24]
    17a8:	str	x1, [sp, #16]
    17ac:	ldr	x0, [sp, #16]
    17b0:	ldr	x1, [x0, #40]
    17b4:	ldr	x0, [sp, #16]
    17b8:	ldr	x0, [x0, #32]
    17bc:	sub	x1, x1, x0
    17c0:	ldr	x0, [sp, #24]
    17c4:	ldr	x0, [x0, #48]
    17c8:	cmp	x1, x0
    17cc:	csel	x0, x1, x0, ls  // ls = plast
    17d0:	str	x0, [sp, #40]
    17d4:	ldr	x0, [sp, #16]
    17d8:	ldr	x1, [x0, #24]
    17dc:	ldr	x0, [sp, #16]
    17e0:	ldr	x0, [x0, #32]
    17e4:	add	x3, x1, x0
    17e8:	ldr	x0, [sp, #24]
    17ec:	add	x0, x0, #0x40
    17f0:	ldr	x2, [sp, #40]
    17f4:	mov	x1, x0
    17f8:	mov	x0, x3
    17fc:	bl	9c8 <grub_mod_fini+0x20>
    1800:	ldr	x0, [sp, #16]
    1804:	ldr	x1, [x0, #32]
    1808:	ldr	x0, [sp, #40]
    180c:	add	x1, x1, x0
    1810:	ldr	x0, [sp, #16]
    1814:	str	x1, [x0, #32]
    1818:	ldr	x0, [sp, #24]
    181c:	ldr	x1, [x0, #48]
    1820:	ldr	x0, [sp, #40]
    1824:	sub	x1, x1, x0
    1828:	ldr	x0, [sp, #24]
    182c:	str	x1, [x0, #48]
    1830:	ldr	x0, [sp, #24]
    1834:	ldr	x1, [x0, #56]
    1838:	ldr	x0, [sp, #40]
    183c:	sub	x1, x1, x0
    1840:	ldr	x0, [sp, #24]
    1844:	str	x1, [x0, #56]
    1848:	ldr	x0, [sp, #24]
    184c:	add	x3, x0, #0x40
    1850:	ldr	x0, [sp, #24]
    1854:	add	x1, x0, #0x40
    1858:	ldr	x0, [sp, #40]
    185c:	add	x1, x1, x0
    1860:	ldr	x0, [sp, #24]
    1864:	ldr	x0, [x0, #56]
    1868:	mov	x2, x0
    186c:	mov	x0, x3
    1870:	bl	0 <grub_memmove>
    1874:	nop
    1878:	ldp	x29, x30, [sp], #48
    187c:	ret

0000000000001880 <xz_dec_bcj_run>:
    1880:	stp	x29, x30, [sp, #-64]!
    1884:	mov	x29, sp
    1888:	str	x0, [sp, #40]
    188c:	str	x1, [sp, #32]
    1890:	str	x2, [sp, #24]
    1894:	ldr	x0, [sp, #40]
    1898:	ldr	x0, [x0, #48]
    189c:	cmp	x0, #0x0
    18a0:	b.eq	18e0 <xz_dec_bcj_run+0x60>  // b.none
    18a4:	ldr	x1, [sp, #24]
    18a8:	ldr	x0, [sp, #40]
    18ac:	bl	179c <grub_mod_fini+0xdf4>
    18b0:	ldr	x0, [sp, #40]
    18b4:	ldr	x0, [x0, #48]
    18b8:	cmp	x0, #0x0
    18bc:	b.eq	18c8 <xz_dec_bcj_run+0x48>  // b.none
    18c0:	mov	w0, #0x0                   	// #0
    18c4:	b	1bb0 <xz_dec_bcj_run+0x330>
    18c8:	ldr	x0, [sp, #40]
    18cc:	ldr	w0, [x0, #4]
    18d0:	cmp	w0, #0x1
    18d4:	b.ne	18e0 <xz_dec_bcj_run+0x60>  // b.any
    18d8:	mov	w0, #0x1                   	// #1
    18dc:	b	1bb0 <xz_dec_bcj_run+0x330>
    18e0:	ldr	x0, [sp, #40]
    18e4:	ldr	x1, [x0, #56]
    18e8:	ldr	x0, [sp, #24]
    18ec:	ldr	x2, [x0, #40]
    18f0:	ldr	x0, [sp, #24]
    18f4:	ldr	x0, [x0, #32]
    18f8:	sub	x0, x2, x0
    18fc:	cmp	x1, x0
    1900:	b.cs	1a50 <xz_dec_bcj_run+0x1d0>  // b.hs, b.nlast
    1904:	ldr	x0, [sp, #24]
    1908:	ldr	x0, [x0, #32]
    190c:	str	x0, [sp, #56]
    1910:	ldr	x0, [sp, #24]
    1914:	ldr	x1, [x0, #24]
    1918:	ldr	x0, [sp, #24]
    191c:	ldr	x0, [x0, #32]
    1920:	add	x3, x1, x0
    1924:	ldr	x0, [sp, #40]
    1928:	add	x1, x0, #0x40
    192c:	ldr	x0, [sp, #40]
    1930:	ldr	x0, [x0, #56]
    1934:	mov	x2, x0
    1938:	mov	x0, x3
    193c:	bl	9c8 <grub_mod_fini+0x20>
    1940:	ldr	x0, [sp, #24]
    1944:	ldr	x1, [x0, #32]
    1948:	ldr	x0, [sp, #40]
    194c:	ldr	x0, [x0, #56]
    1950:	add	x1, x1, x0
    1954:	ldr	x0, [sp, #24]
    1958:	str	x1, [x0, #32]
    195c:	ldr	x1, [sp, #24]
    1960:	ldr	x0, [sp, #32]
    1964:	bl	4a38 <xz_dec_lzma2_run>
    1968:	mov	w1, w0
    196c:	ldr	x0, [sp, #40]
    1970:	str	w1, [x0, #4]
    1974:	ldr	x0, [sp, #40]
    1978:	ldr	w0, [x0, #4]
    197c:	cmp	w0, #0x1
    1980:	b.eq	19b0 <xz_dec_bcj_run+0x130>  // b.none
    1984:	ldr	x0, [sp, #40]
    1988:	ldr	w0, [x0, #4]
    198c:	cmp	w0, #0x0
    1990:	b.ne	19a4 <xz_dec_bcj_run+0x124>  // b.any
    1994:	ldr	x0, [sp, #40]
    1998:	ldr	w0, [x0, #8]
    199c:	cmp	w0, #0x0
    19a0:	b.eq	19b0 <xz_dec_bcj_run+0x130>  // b.none
    19a4:	ldr	x0, [sp, #40]
    19a8:	ldr	w0, [x0, #4]
    19ac:	b	1bb0 <xz_dec_bcj_run+0x330>
    19b0:	ldr	x0, [sp, #24]
    19b4:	ldr	x1, [x0, #24]
    19b8:	ldr	x0, [sp, #24]
    19bc:	ldr	x2, [x0, #32]
    19c0:	add	x0, sp, #0x38
    19c4:	mov	x3, x2
    19c8:	mov	x2, x0
    19cc:	ldr	x0, [sp, #40]
    19d0:	bl	162c <grub_mod_fini+0xc84>
    19d4:	ldr	x0, [sp, #40]
    19d8:	ldr	w0, [x0, #4]
    19dc:	cmp	w0, #0x1
    19e0:	b.ne	19ec <xz_dec_bcj_run+0x16c>  // b.any
    19e4:	mov	w0, #0x1                   	// #1
    19e8:	b	1bb0 <xz_dec_bcj_run+0x330>
    19ec:	ldr	x0, [sp, #24]
    19f0:	ldr	x1, [x0, #32]
    19f4:	ldr	x0, [sp, #56]
    19f8:	sub	x1, x1, x0
    19fc:	ldr	x0, [sp, #40]
    1a00:	str	x1, [x0, #56]
    1a04:	ldr	x0, [sp, #24]
    1a08:	ldr	x1, [x0, #32]
    1a0c:	ldr	x0, [sp, #40]
    1a10:	ldr	x0, [x0, #56]
    1a14:	sub	x1, x1, x0
    1a18:	ldr	x0, [sp, #24]
    1a1c:	str	x1, [x0, #32]
    1a20:	ldr	x0, [sp, #40]
    1a24:	add	x3, x0, #0x40
    1a28:	ldr	x0, [sp, #24]
    1a2c:	ldr	x1, [x0, #24]
    1a30:	ldr	x0, [sp, #24]
    1a34:	ldr	x0, [x0, #32]
    1a38:	add	x1, x1, x0
    1a3c:	ldr	x0, [sp, #40]
    1a40:	ldr	x0, [x0, #56]
    1a44:	mov	x2, x0
    1a48:	mov	x0, x3
    1a4c:	bl	9c8 <grub_mod_fini+0x20>
    1a50:	ldr	x0, [sp, #40]
    1a54:	ldr	x0, [x0, #56]
    1a58:	cmp	x0, #0x0
    1a5c:	b.eq	1ba8 <xz_dec_bcj_run+0x328>  // b.none
    1a60:	ldr	x0, [sp, #24]
    1a64:	ldr	x1, [x0, #24]
    1a68:	ldr	x0, [sp, #40]
    1a6c:	str	x1, [x0, #24]
    1a70:	ldr	x0, [sp, #24]
    1a74:	ldr	x1, [x0, #32]
    1a78:	ldr	x0, [sp, #40]
    1a7c:	str	x1, [x0, #32]
    1a80:	ldr	x0, [sp, #24]
    1a84:	ldr	x1, [x0, #40]
    1a88:	ldr	x0, [sp, #40]
    1a8c:	str	x1, [x0, #40]
    1a90:	ldr	x0, [sp, #40]
    1a94:	add	x1, x0, #0x40
    1a98:	ldr	x0, [sp, #24]
    1a9c:	str	x1, [x0, #24]
    1aa0:	ldr	x0, [sp, #40]
    1aa4:	ldr	x1, [x0, #56]
    1aa8:	ldr	x0, [sp, #24]
    1aac:	str	x1, [x0, #32]
    1ab0:	ldr	x0, [sp, #24]
    1ab4:	mov	x1, #0x10                  	// #16
    1ab8:	str	x1, [x0, #40]
    1abc:	ldr	x1, [sp, #24]
    1ac0:	ldr	x0, [sp, #32]
    1ac4:	bl	4a38 <xz_dec_lzma2_run>
    1ac8:	mov	w1, w0
    1acc:	ldr	x0, [sp, #40]
    1ad0:	str	w1, [x0, #4]
    1ad4:	ldr	x0, [sp, #24]
    1ad8:	ldr	x1, [x0, #32]
    1adc:	ldr	x0, [sp, #40]
    1ae0:	str	x1, [x0, #56]
    1ae4:	ldr	x0, [sp, #40]
    1ae8:	ldr	x1, [x0, #24]
    1aec:	ldr	x0, [sp, #24]
    1af0:	str	x1, [x0, #24]
    1af4:	ldr	x0, [sp, #40]
    1af8:	ldr	x1, [x0, #32]
    1afc:	ldr	x0, [sp, #24]
    1b00:	str	x1, [x0, #32]
    1b04:	ldr	x0, [sp, #40]
    1b08:	ldr	x1, [x0, #40]
    1b0c:	ldr	x0, [sp, #24]
    1b10:	str	x1, [x0, #40]
    1b14:	ldr	x0, [sp, #40]
    1b18:	ldr	w0, [x0, #4]
    1b1c:	cmp	w0, #0x0
    1b20:	b.eq	1b40 <xz_dec_bcj_run+0x2c0>  // b.none
    1b24:	ldr	x0, [sp, #40]
    1b28:	ldr	w0, [x0, #4]
    1b2c:	cmp	w0, #0x1
    1b30:	b.eq	1b40 <xz_dec_bcj_run+0x2c0>  // b.none
    1b34:	ldr	x0, [sp, #40]
    1b38:	ldr	w0, [x0, #4]
    1b3c:	b	1bb0 <xz_dec_bcj_run+0x330>
    1b40:	ldr	x0, [sp, #40]
    1b44:	add	x1, x0, #0x40
    1b48:	ldr	x0, [sp, #40]
    1b4c:	add	x2, x0, #0x30
    1b50:	ldr	x0, [sp, #40]
    1b54:	ldr	x0, [x0, #56]
    1b58:	mov	x3, x0
    1b5c:	ldr	x0, [sp, #40]
    1b60:	bl	162c <grub_mod_fini+0xc84>
    1b64:	ldr	x0, [sp, #40]
    1b68:	ldr	w0, [x0, #4]
    1b6c:	cmp	w0, #0x1
    1b70:	b.ne	1b84 <xz_dec_bcj_run+0x304>  // b.any
    1b74:	ldr	x0, [sp, #40]
    1b78:	ldr	x1, [x0, #56]
    1b7c:	ldr	x0, [sp, #40]
    1b80:	str	x1, [x0, #48]
    1b84:	ldr	x1, [sp, #24]
    1b88:	ldr	x0, [sp, #40]
    1b8c:	bl	179c <grub_mod_fini+0xdf4>
    1b90:	ldr	x0, [sp, #40]
    1b94:	ldr	x0, [x0, #48]
    1b98:	cmp	x0, #0x0
    1b9c:	b.eq	1ba8 <xz_dec_bcj_run+0x328>  // b.none
    1ba0:	mov	w0, #0x0                   	// #0
    1ba4:	b	1bb0 <xz_dec_bcj_run+0x330>
    1ba8:	ldr	x0, [sp, #40]
    1bac:	ldr	w0, [x0, #4]
    1bb0:	ldp	x29, x30, [sp], #64
    1bb4:	ret

0000000000001bb8 <xz_dec_bcj_create>:
    1bb8:	stp	x29, x30, [sp, #-48]!
    1bbc:	mov	x29, sp
    1bc0:	str	w0, [sp, #28]
    1bc4:	mov	x0, #0x50                  	// #80
    1bc8:	bl	9f4 <grub_mod_fini+0x4c>
    1bcc:	str	x0, [sp, #40]
    1bd0:	ldr	x0, [sp, #40]
    1bd4:	cmp	x0, #0x0
    1bd8:	b.eq	1be8 <xz_dec_bcj_create+0x30>  // b.none
    1bdc:	ldr	x0, [sp, #40]
    1be0:	ldr	w1, [sp, #28]
    1be4:	str	w1, [x0, #8]
    1be8:	ldr	x0, [sp, #40]
    1bec:	ldp	x29, x30, [sp], #48
    1bf0:	ret

0000000000001bf4 <xz_dec_bcj_reset>:
    1bf4:	sub	sp, sp, #0x10
    1bf8:	str	x0, [sp, #8]
    1bfc:	strb	w1, [sp, #7]
    1c00:	ldrb	w0, [sp, #7]
    1c04:	sub	w0, w0, #0x4
    1c08:	cmp	w0, #0x5
    1c0c:	b.ls	1c18 <xz_dec_bcj_reset+0x24>  // b.plast
    1c10:	mov	w0, #0x4                   	// #4
    1c14:	b	1c54 <xz_dec_bcj_reset+0x60>
    1c18:	nop
    1c1c:	ldrb	w1, [sp, #7]
    1c20:	ldr	x0, [sp, #8]
    1c24:	str	w1, [x0]
    1c28:	ldr	x0, [sp, #8]
    1c2c:	str	wzr, [x0, #4]
    1c30:	ldr	x0, [sp, #8]
    1c34:	str	wzr, [x0, #12]
    1c38:	ldr	x0, [sp, #8]
    1c3c:	str	wzr, [x0, #16]
    1c40:	ldr	x0, [sp, #8]
    1c44:	str	xzr, [x0, #48]
    1c48:	ldr	x0, [sp, #8]
    1c4c:	str	xzr, [x0, #56]
    1c50:	mov	w0, #0x0                   	// #0
    1c54:	add	sp, sp, #0x10
    1c58:	ret
    1c5c:	stp	x29, x30, [sp, #-48]!
    1c60:	mov	x29, sp
    1c64:	str	x0, [sp, #40]
    1c68:	str	x1, [sp, #32]
    1c6c:	str	x2, [sp, #24]
    1c70:	ldr	x2, [sp, #24]
    1c74:	ldr	x1, [sp, #32]
    1c78:	ldr	x0, [sp, #40]
    1c7c:	bl	0 <grub_memmove>
    1c80:	ldp	x29, x30, [sp], #48
    1c84:	ret
    1c88:	stp	x29, x30, [sp, #-32]!
    1c8c:	mov	x29, sp
    1c90:	str	x0, [sp, #24]
    1c94:	ldr	x0, [sp, #24]
    1c98:	bl	0 <grub_free>
    1c9c:	nop
    1ca0:	ldp	x29, x30, [sp], #32
    1ca4:	ret
    1ca8:	stp	x29, x30, [sp, #-32]!
    1cac:	mov	x29, sp
    1cb0:	str	x0, [sp, #24]
    1cb4:	ldr	x0, [sp, #24]
    1cb8:	bl	0 <grub_malloc>
    1cbc:	ldp	x29, x30, [sp], #32
    1cc0:	ret
    1cc4:	stp	x29, x30, [sp, #-32]!
    1cc8:	mov	x29, sp
    1ccc:	str	x0, [sp, #24]
    1cd0:	str	x1, [sp, #16]
    1cd4:	ldr	x1, [sp, #16]
    1cd8:	ldr	x0, [sp, #24]
    1cdc:	bl	0 <grub_realloc>
    1ce0:	ldp	x29, x30, [sp], #32
    1ce4:	ret
    1ce8:	sub	sp, sp, #0x10
    1cec:	str	x0, [sp, #8]
    1cf0:	ldr	x0, [sp, #8]
    1cf4:	ldr	w0, [x0]
    1cf8:	cmp	w0, #0x3
    1cfc:	b.hi	1d0c <xz_dec_bcj_reset+0x118>  // b.pmore
    1d00:	ldr	x0, [sp, #8]
    1d04:	str	wzr, [x0]
    1d08:	b	1d48 <xz_dec_bcj_reset+0x154>
    1d0c:	ldr	x0, [sp, #8]
    1d10:	ldr	w0, [x0]
    1d14:	cmp	w0, #0x9
    1d18:	b.hi	1d34 <xz_dec_bcj_reset+0x140>  // b.pmore
    1d1c:	ldr	x0, [sp, #8]
    1d20:	ldr	w0, [x0]
    1d24:	sub	w1, w0, #0x3
    1d28:	ldr	x0, [sp, #8]
    1d2c:	str	w1, [x0]
    1d30:	b	1d48 <xz_dec_bcj_reset+0x154>
    1d34:	ldr	x0, [sp, #8]
    1d38:	ldr	w0, [x0]
    1d3c:	sub	w1, w0, #0x6
    1d40:	ldr	x0, [sp, #8]
    1d44:	str	w1, [x0]
    1d48:	nop
    1d4c:	add	sp, sp, #0x10
    1d50:	ret
    1d54:	sub	sp, sp, #0x10
    1d58:	str	x0, [sp, #8]
    1d5c:	ldr	x0, [sp, #8]
    1d60:	ldr	w0, [x0]
    1d64:	cmp	w0, #0x6
    1d68:	b.hi	1d74 <xz_dec_bcj_reset+0x180>  // b.pmore
    1d6c:	mov	w0, #0x7                   	// #7
    1d70:	b	1d78 <xz_dec_bcj_reset+0x184>
    1d74:	mov	w0, #0xa                   	// #10
    1d78:	ldr	x1, [sp, #8]
    1d7c:	str	w0, [x1]
    1d80:	nop
    1d84:	add	sp, sp, #0x10
    1d88:	ret
    1d8c:	sub	sp, sp, #0x10
    1d90:	str	x0, [sp, #8]
    1d94:	ldr	x0, [sp, #8]
    1d98:	ldr	w0, [x0]
    1d9c:	cmp	w0, #0x6
    1da0:	b.hi	1dac <xz_dec_bcj_reset+0x1b8>  // b.pmore
    1da4:	mov	w0, #0x8                   	// #8
    1da8:	b	1db0 <xz_dec_bcj_reset+0x1bc>
    1dac:	mov	w0, #0xb                   	// #11
    1db0:	ldr	x1, [sp, #8]
    1db4:	str	w0, [x1]
    1db8:	nop
    1dbc:	add	sp, sp, #0x10
    1dc0:	ret
    1dc4:	sub	sp, sp, #0x10
    1dc8:	str	x0, [sp, #8]
    1dcc:	ldr	x0, [sp, #8]
    1dd0:	ldr	w0, [x0]
    1dd4:	cmp	w0, #0x6
    1dd8:	b.hi	1de4 <xz_dec_bcj_reset+0x1f0>  // b.pmore
    1ddc:	mov	w0, #0x9                   	// #9
    1de0:	b	1de8 <xz_dec_bcj_reset+0x1f4>
    1de4:	mov	w0, #0xb                   	// #11
    1de8:	ldr	x1, [sp, #8]
    1dec:	str	w0, [x1]
    1df0:	nop
    1df4:	add	sp, sp, #0x10
    1df8:	ret
    1dfc:	sub	sp, sp, #0x10
    1e00:	str	w0, [sp, #12]
    1e04:	ldr	w0, [sp, #12]
    1e08:	cmp	w0, #0x6
    1e0c:	cset	w0, ls  // ls = plast
    1e10:	and	w0, w0, #0xff
    1e14:	add	sp, sp, #0x10
    1e18:	ret
    1e1c:	sub	sp, sp, #0x10
    1e20:	str	w0, [sp, #12]
    1e24:	ldr	w2, [sp, #12]
    1e28:	ldr	w1, [sp, #12]
    1e2c:	mov	w0, #0x5                   	// #5
    1e30:	cmp	w2, #0x5
    1e34:	csel	w0, w1, w0, ls  // ls = plast
    1e38:	sub	w0, w0, #0x2
    1e3c:	add	sp, sp, #0x10
    1e40:	ret
    1e44:	sub	sp, sp, #0x10
    1e48:	str	x0, [sp, #8]
    1e4c:	str	x1, [sp]
    1e50:	ldr	x0, [sp, #8]
    1e54:	ldr	w0, [x0, #52]
    1e58:	cmp	w0, #0x0
    1e5c:	b.ne	1e98 <xz_dec_bcj_reset+0x2a4>  // b.any
    1e60:	ldr	x0, [sp]
    1e64:	ldr	x1, [x0, #24]
    1e68:	ldr	x0, [sp]
    1e6c:	ldr	x0, [x0, #32]
    1e70:	add	x1, x1, x0
    1e74:	ldr	x0, [sp, #8]
    1e78:	str	x1, [x0]
    1e7c:	ldr	x0, [sp]
    1e80:	ldr	x1, [x0, #40]
    1e84:	ldr	x0, [sp]
    1e88:	ldr	x0, [x0, #32]
    1e8c:	sub	x1, x1, x0
    1e90:	ldr	x0, [sp, #8]
    1e94:	str	x1, [x0, #40]
    1e98:	ldr	x0, [sp, #8]
    1e9c:	str	xzr, [x0, #8]
    1ea0:	ldr	x0, [sp, #8]
    1ea4:	str	xzr, [x0, #16]
    1ea8:	ldr	x0, [sp, #8]
    1eac:	str	xzr, [x0, #32]
    1eb0:	ldr	x0, [sp, #8]
    1eb4:	str	xzr, [x0, #24]
    1eb8:	nop
    1ebc:	add	sp, sp, #0x10
    1ec0:	ret
    1ec4:	sub	sp, sp, #0x10
    1ec8:	str	x0, [sp, #8]
    1ecc:	str	x1, [sp]
    1ed0:	ldr	x0, [sp, #8]
    1ed4:	ldr	x1, [x0, #40]
    1ed8:	ldr	x0, [sp, #8]
    1edc:	ldr	x0, [x0, #16]
    1ee0:	sub	x0, x1, x0
    1ee4:	ldr	x1, [sp]
    1ee8:	cmp	x1, x0
    1eec:	b.cc	1f04 <xz_dec_bcj_reset+0x310>  // b.lo, b.ul, b.last
    1ef0:	ldr	x0, [sp, #8]
    1ef4:	ldr	x1, [x0, #40]
    1ef8:	ldr	x0, [sp, #8]
    1efc:	str	x1, [x0, #32]
    1f00:	b	1f1c <xz_dec_bcj_reset+0x328>
    1f04:	ldr	x0, [sp, #8]
    1f08:	ldr	x1, [x0, #16]
    1f0c:	ldr	x0, [sp]
    1f10:	add	x1, x1, x0
    1f14:	ldr	x0, [sp, #8]
    1f18:	str	x1, [x0, #32]
    1f1c:	nop
    1f20:	add	sp, sp, #0x10
    1f24:	ret
    1f28:	sub	sp, sp, #0x10
    1f2c:	str	x0, [sp, #8]
    1f30:	ldr	x0, [sp, #8]
    1f34:	ldr	x1, [x0, #16]
    1f38:	ldr	x0, [sp, #8]
    1f3c:	ldr	x0, [x0, #32]
    1f40:	cmp	x1, x0
    1f44:	cset	w0, cc  // cc = lo, ul, last
    1f48:	and	w0, w0, #0xff
    1f4c:	add	sp, sp, #0x10
    1f50:	ret
    1f54:	sub	sp, sp, #0x20
    1f58:	str	x0, [sp, #8]
    1f5c:	str	w1, [sp, #4]
    1f60:	ldr	x0, [sp, #8]
    1f64:	ldr	x1, [x0, #16]
    1f68:	ldr	w0, [sp, #4]
    1f6c:	sub	x0, x1, x0
    1f70:	sub	x0, x0, #0x1
    1f74:	str	x0, [sp, #24]
    1f78:	ldr	w1, [sp, #4]
    1f7c:	ldr	x0, [sp, #8]
    1f80:	ldr	x0, [x0, #16]
    1f84:	cmp	x1, x0
    1f88:	b.cc	1fa0 <xz_dec_bcj_reset+0x3ac>  // b.lo, b.ul, b.last
    1f8c:	ldr	x0, [sp, #8]
    1f90:	ldr	x0, [x0, #40]
    1f94:	ldr	x1, [sp, #24]
    1f98:	add	x0, x1, x0
    1f9c:	str	x0, [sp, #24]
    1fa0:	ldr	x0, [sp, #8]
    1fa4:	ldr	x0, [x0, #24]
    1fa8:	cmp	x0, #0x0
    1fac:	b.eq	1fc8 <xz_dec_bcj_reset+0x3d4>  // b.none
    1fb0:	ldr	x0, [sp, #8]
    1fb4:	ldr	x1, [x0]
    1fb8:	ldr	x0, [sp, #24]
    1fbc:	add	x0, x1, x0
    1fc0:	ldrb	w0, [x0]
    1fc4:	b	1fcc <xz_dec_bcj_reset+0x3d8>
    1fc8:	mov	w0, #0x0                   	// #0
    1fcc:	add	sp, sp, #0x20
    1fd0:	ret
    1fd4:	sub	sp, sp, #0x10
    1fd8:	str	x0, [sp, #8]
    1fdc:	strb	w1, [sp, #7]
    1fe0:	ldr	x0, [sp, #8]
    1fe4:	ldr	x1, [x0]
    1fe8:	ldr	x0, [sp, #8]
    1fec:	ldr	x0, [x0, #16]
    1ff0:	add	x3, x0, #0x1
    1ff4:	ldr	x2, [sp, #8]
    1ff8:	str	x3, [x2, #16]
    1ffc:	add	x0, x1, x0
    2000:	ldrb	w1, [sp, #7]
    2004:	strb	w1, [x0]
    2008:	ldr	x0, [sp, #8]
    200c:	ldr	x1, [x0, #24]
    2010:	ldr	x0, [sp, #8]
    2014:	ldr	x0, [x0, #16]
    2018:	cmp	x1, x0
    201c:	b.cs	2030 <xz_dec_bcj_reset+0x43c>  // b.hs, b.nlast
    2020:	ldr	x0, [sp, #8]
    2024:	ldr	x1, [x0, #16]
    2028:	ldr	x0, [sp, #8]
    202c:	str	x1, [x0, #24]
    2030:	nop
    2034:	add	sp, sp, #0x10
    2038:	ret
    203c:	sub	sp, sp, #0x30
    2040:	str	x0, [sp, #24]
    2044:	str	x1, [sp, #16]
    2048:	str	w2, [sp, #12]
    204c:	ldr	w1, [sp, #12]
    2050:	ldr	x0, [sp, #24]
    2054:	ldr	x0, [x0, #24]
    2058:	cmp	x1, x0
    205c:	b.cs	2074 <xz_dec_bcj_reset+0x480>  // b.hs, b.nlast
    2060:	ldr	x0, [sp, #24]
    2064:	ldr	w0, [x0, #48]
    2068:	ldr	w1, [sp, #12]
    206c:	cmp	w1, w0
    2070:	b.cc	207c <xz_dec_bcj_reset+0x488>  // b.lo, b.ul, b.last
    2074:	mov	w0, #0x0                   	// #0
    2078:	b	219c <xz_dec_bcj_reset+0x5a8>
    207c:	ldr	x0, [sp, #16]
    2080:	ldr	w0, [x0]
    2084:	mov	w1, w0
    2088:	ldr	x0, [sp, #24]
    208c:	ldr	x2, [x0, #32]
    2090:	ldr	x0, [sp, #24]
    2094:	ldr	x0, [x0, #16]
    2098:	sub	x0, x2, x0
    209c:	cmp	x1, x0
    20a0:	csel	x0, x1, x0, ls  // ls = plast
    20a4:	str	w0, [sp, #36]
    20a8:	ldr	x0, [sp, #16]
    20ac:	ldr	w1, [x0]
    20b0:	ldr	w0, [sp, #36]
    20b4:	sub	w1, w1, w0
    20b8:	ldr	x0, [sp, #16]
    20bc:	str	w1, [x0]
    20c0:	ldr	x0, [sp, #24]
    20c4:	ldr	x1, [x0, #16]
    20c8:	ldr	w0, [sp, #12]
    20cc:	sub	x0, x1, x0
    20d0:	sub	x0, x0, #0x1
    20d4:	str	x0, [sp, #40]
    20d8:	ldr	w1, [sp, #12]
    20dc:	ldr	x0, [sp, #24]
    20e0:	ldr	x0, [x0, #16]
    20e4:	cmp	x1, x0
    20e8:	b.cc	2100 <xz_dec_bcj_reset+0x50c>  // b.lo, b.ul, b.last
    20ec:	ldr	x0, [sp, #24]
    20f0:	ldr	x0, [x0, #40]
    20f4:	ldr	x1, [sp, #40]
    20f8:	add	x0, x1, x0
    20fc:	str	x0, [sp, #40]
    2100:	ldr	x0, [sp, #24]
    2104:	ldr	x1, [x0]
    2108:	ldr	x0, [sp, #40]
    210c:	add	x2, x0, #0x1
    2110:	str	x2, [sp, #40]
    2114:	add	x1, x1, x0
    2118:	ldr	x0, [sp, #24]
    211c:	ldr	x2, [x0]
    2120:	ldr	x0, [sp, #24]
    2124:	ldr	x0, [x0, #16]
    2128:	add	x4, x0, #0x1
    212c:	ldr	x3, [sp, #24]
    2130:	str	x4, [x3, #16]
    2134:	add	x0, x2, x0
    2138:	ldrb	w1, [x1]
    213c:	strb	w1, [x0]
    2140:	ldr	x0, [sp, #24]
    2144:	ldr	x0, [x0, #40]
    2148:	ldr	x1, [sp, #40]
    214c:	cmp	x1, x0
    2150:	b.ne	2158 <xz_dec_bcj_reset+0x564>  // b.any
    2154:	str	xzr, [sp, #40]
    2158:	ldr	w0, [sp, #36]
    215c:	sub	w0, w0, #0x1
    2160:	str	w0, [sp, #36]
    2164:	ldr	w0, [sp, #36]
    2168:	cmp	w0, #0x0
    216c:	b.ne	2100 <xz_dec_bcj_reset+0x50c>  // b.any
    2170:	ldr	x0, [sp, #24]
    2174:	ldr	x1, [x0, #24]
    2178:	ldr	x0, [sp, #24]
    217c:	ldr	x0, [x0, #16]
    2180:	cmp	x1, x0
    2184:	b.cs	2198 <xz_dec_bcj_reset+0x5a4>  // b.hs, b.nlast
    2188:	ldr	x0, [sp, #24]
    218c:	ldr	x1, [x0, #16]
    2190:	ldr	x0, [sp, #24]
    2194:	str	x1, [x0, #24]
    2198:	mov	w0, #0x1                   	// #1
    219c:	add	sp, sp, #0x30
    21a0:	ret
    21a4:	stp	x29, x30, [sp, #-64]!
    21a8:	mov	x29, sp
    21ac:	str	x0, [sp, #40]
    21b0:	str	x1, [sp, #32]
    21b4:	str	x2, [sp, #24]
    21b8:	b	2388 <xz_dec_bcj_reset+0x794>
    21bc:	ldr	x0, [sp, #32]
    21c0:	ldr	x1, [x0, #40]
    21c4:	ldr	x0, [sp, #32]
    21c8:	ldr	x0, [x0, #32]
    21cc:	sub	x1, x1, x0
    21d0:	ldr	x0, [sp, #32]
    21d4:	ldr	x2, [x0, #16]
    21d8:	ldr	x0, [sp, #32]
    21dc:	ldr	x0, [x0, #8]
    21e0:	sub	x0, x2, x0
    21e4:	cmp	x1, x0
    21e8:	csel	x0, x1, x0, ls  // ls = plast
    21ec:	str	x0, [sp, #56]
    21f0:	ldr	x0, [sp, #40]
    21f4:	ldr	x1, [x0, #40]
    21f8:	ldr	x0, [sp, #40]
    21fc:	ldr	x0, [x0, #16]
    2200:	sub	x0, x1, x0
    2204:	ldr	x1, [sp, #56]
    2208:	cmp	x1, x0
    220c:	b.ls	2228 <xz_dec_bcj_reset+0x634>  // b.plast
    2210:	ldr	x0, [sp, #40]
    2214:	ldr	x1, [x0, #40]
    2218:	ldr	x0, [sp, #40]
    221c:	ldr	x0, [x0, #16]
    2220:	sub	x0, x1, x0
    2224:	str	x0, [sp, #56]
    2228:	ldr	x0, [sp, #24]
    222c:	ldr	w0, [x0]
    2230:	mov	w0, w0
    2234:	ldr	x1, [sp, #56]
    2238:	cmp	x1, x0
    223c:	b.ls	2250 <xz_dec_bcj_reset+0x65c>  // b.plast
    2240:	ldr	x0, [sp, #24]
    2244:	ldr	w0, [x0]
    2248:	mov	w0, w0
    224c:	str	x0, [sp, #56]
    2250:	ldr	x0, [sp, #24]
    2254:	ldr	w0, [x0]
    2258:	ldr	x1, [sp, #56]
    225c:	sub	w1, w0, w1
    2260:	ldr	x0, [sp, #24]
    2264:	str	w1, [x0]
    2268:	ldr	x0, [sp, #40]
    226c:	ldr	x1, [x0]
    2270:	ldr	x0, [sp, #40]
    2274:	ldr	x0, [x0, #16]
    2278:	add	x3, x1, x0
    227c:	ldr	x0, [sp, #32]
    2280:	ldr	x1, [x0]
    2284:	ldr	x0, [sp, #32]
    2288:	ldr	x0, [x0, #8]
    228c:	add	x0, x1, x0
    2290:	ldr	x2, [sp, #56]
    2294:	mov	x1, x0
    2298:	mov	x0, x3
    229c:	bl	1c5c <xz_dec_bcj_reset+0x68>
    22a0:	ldr	x0, [sp, #40]
    22a4:	ldr	x1, [x0, #16]
    22a8:	ldr	x0, [sp, #56]
    22ac:	add	x1, x1, x0
    22b0:	ldr	x0, [sp, #40]
    22b4:	str	x1, [x0, #16]
    22b8:	ldr	x0, [sp, #40]
    22bc:	ldr	x1, [x0, #24]
    22c0:	ldr	x0, [sp, #40]
    22c4:	ldr	x0, [x0, #16]
    22c8:	cmp	x1, x0
    22cc:	b.cs	22e0 <xz_dec_bcj_reset+0x6ec>  // b.hs, b.nlast
    22d0:	ldr	x0, [sp, #40]
    22d4:	ldr	x1, [x0, #16]
    22d8:	ldr	x0, [sp, #40]
    22dc:	str	x1, [x0, #24]
    22e0:	ldr	x0, [sp, #40]
    22e4:	ldr	w0, [x0, #52]
    22e8:	cmp	w0, #0x0
    22ec:	b.eq	2348 <xz_dec_bcj_reset+0x754>  // b.none
    22f0:	ldr	x0, [sp, #40]
    22f4:	ldr	x1, [x0, #16]
    22f8:	ldr	x0, [sp, #40]
    22fc:	ldr	x0, [x0, #40]
    2300:	cmp	x1, x0
    2304:	b.ne	2310 <xz_dec_bcj_reset+0x71c>  // b.any
    2308:	ldr	x0, [sp, #40]
    230c:	str	xzr, [x0, #16]
    2310:	ldr	x0, [sp, #32]
    2314:	ldr	x1, [x0, #24]
    2318:	ldr	x0, [sp, #32]
    231c:	ldr	x0, [x0, #32]
    2320:	add	x3, x1, x0
    2324:	ldr	x0, [sp, #32]
    2328:	ldr	x1, [x0]
    232c:	ldr	x0, [sp, #32]
    2330:	ldr	x0, [x0, #8]
    2334:	add	x0, x1, x0
    2338:	ldr	x2, [sp, #56]
    233c:	mov	x1, x0
    2340:	mov	x0, x3
    2344:	bl	1c5c <xz_dec_bcj_reset+0x68>
    2348:	ldr	x0, [sp, #40]
    234c:	ldr	x1, [x0, #16]
    2350:	ldr	x0, [sp, #40]
    2354:	str	x1, [x0, #8]
    2358:	ldr	x0, [sp, #32]
    235c:	ldr	x1, [x0, #32]
    2360:	ldr	x0, [sp, #56]
    2364:	add	x1, x1, x0
    2368:	ldr	x0, [sp, #32]
    236c:	str	x1, [x0, #32]
    2370:	ldr	x0, [sp, #32]
    2374:	ldr	x1, [x0, #8]
    2378:	ldr	x0, [sp, #56]
    237c:	add	x1, x1, x0
    2380:	ldr	x0, [sp, #32]
    2384:	str	x1, [x0, #8]
    2388:	ldr	x0, [sp, #24]
    238c:	ldr	w0, [x0]
    2390:	cmp	w0, #0x0
    2394:	b.eq	23c8 <xz_dec_bcj_reset+0x7d4>  // b.none
    2398:	ldr	x0, [sp, #32]
    239c:	ldr	x1, [x0, #8]
    23a0:	ldr	x0, [sp, #32]
    23a4:	ldr	x0, [x0, #16]
    23a8:	cmp	x1, x0
    23ac:	b.cs	23c8 <xz_dec_bcj_reset+0x7d4>  // b.hs, b.nlast
    23b0:	ldr	x0, [sp, #32]
    23b4:	ldr	x1, [x0, #32]
    23b8:	ldr	x0, [sp, #32]
    23bc:	ldr	x0, [x0, #40]
    23c0:	cmp	x1, x0
    23c4:	b.cc	21bc <xz_dec_bcj_reset+0x5c8>  // b.lo, b.ul, b.last
    23c8:	nop
    23cc:	ldp	x29, x30, [sp], #64
    23d0:	ret
    23d4:	stp	x29, x30, [sp, #-48]!
    23d8:	mov	x29, sp
    23dc:	str	x0, [sp, #24]
    23e0:	str	x1, [sp, #16]
    23e4:	ldr	x0, [sp, #24]
    23e8:	ldr	x1, [x0, #16]
    23ec:	ldr	x0, [sp, #24]
    23f0:	ldr	x0, [x0, #8]
    23f4:	sub	x0, x1, x0
    23f8:	str	x0, [sp, #40]
    23fc:	ldr	x0, [sp, #24]
    2400:	ldr	w0, [x0, #52]
    2404:	cmp	w0, #0x0
    2408:	b.eq	2464 <xz_dec_bcj_reset+0x870>  // b.none
    240c:	ldr	x0, [sp, #24]
    2410:	ldr	x1, [x0, #16]
    2414:	ldr	x0, [sp, #24]
    2418:	ldr	x0, [x0, #40]
    241c:	cmp	x1, x0
    2420:	b.ne	242c <xz_dec_bcj_reset+0x838>  // b.any
    2424:	ldr	x0, [sp, #24]
    2428:	str	xzr, [x0, #16]
    242c:	ldr	x0, [sp, #16]
    2430:	ldr	x1, [x0, #24]
    2434:	ldr	x0, [sp, #16]
    2438:	ldr	x0, [x0, #32]
    243c:	add	x3, x1, x0
    2440:	ldr	x0, [sp, #24]
    2444:	ldr	x1, [x0]
    2448:	ldr	x0, [sp, #24]
    244c:	ldr	x0, [x0, #8]
    2450:	add	x0, x1, x0
    2454:	ldr	x2, [sp, #40]
    2458:	mov	x1, x0
    245c:	mov	x0, x3
    2460:	bl	1c5c <xz_dec_bcj_reset+0x68>
    2464:	ldr	x0, [sp, #24]
    2468:	ldr	x1, [x0, #16]
    246c:	ldr	x0, [sp, #24]
    2470:	str	x1, [x0, #8]
    2474:	ldr	x0, [sp, #16]
    2478:	ldr	x1, [x0, #32]
    247c:	ldr	x0, [sp, #40]
    2480:	add	x1, x1, x0
    2484:	ldr	x0, [sp, #16]
    2488:	str	x1, [x0, #32]
    248c:	ldr	x0, [sp, #40]
    2490:	ldp	x29, x30, [sp], #48
    2494:	ret
    2498:	sub	sp, sp, #0x10
    249c:	str	x0, [sp, #8]
    24a0:	ldr	x0, [sp, #8]
    24a4:	mov	w1, #0xffffffff            	// #-1
    24a8:	str	w1, [x0]
    24ac:	ldr	x0, [sp, #8]
    24b0:	str	wzr, [x0, #4]
    24b4:	ldr	x0, [sp, #8]
    24b8:	mov	w1, #0x5                   	// #5
    24bc:	str	w1, [x0, #8]
    24c0:	nop
    24c4:	add	sp, sp, #0x10
    24c8:	ret
    24cc:	sub	sp, sp, #0x10
    24d0:	str	x0, [sp, #8]
    24d4:	str	x1, [sp]
    24d8:	b	254c <xz_dec_bcj_reset+0x958>
    24dc:	ldr	x0, [sp]
    24e0:	ldr	x1, [x0, #8]
    24e4:	ldr	x0, [sp]
    24e8:	ldr	x0, [x0, #16]
    24ec:	cmp	x1, x0
    24f0:	b.ne	24fc <xz_dec_bcj_reset+0x908>  // b.any
    24f4:	mov	w0, #0x0                   	// #0
    24f8:	b	2560 <xz_dec_bcj_reset+0x96c>
    24fc:	ldr	x0, [sp, #8]
    2500:	ldr	w0, [x0, #4]
    2504:	lsl	w1, w0, #8
    2508:	ldr	x0, [sp]
    250c:	ldr	x2, [x0]
    2510:	ldr	x0, [sp]
    2514:	ldr	x0, [x0, #8]
    2518:	add	x4, x0, #0x1
    251c:	ldr	x3, [sp]
    2520:	str	x4, [x3, #8]
    2524:	add	x0, x2, x0
    2528:	ldrb	w0, [x0]
    252c:	add	w1, w1, w0
    2530:	ldr	x0, [sp, #8]
    2534:	str	w1, [x0, #4]
    2538:	ldr	x0, [sp, #8]
    253c:	ldr	w0, [x0, #8]
    2540:	sub	w1, w0, #0x1
    2544:	ldr	x0, [sp, #8]
    2548:	str	w1, [x0, #8]
    254c:	ldr	x0, [sp, #8]
    2550:	ldr	w0, [x0, #8]
    2554:	cmp	w0, #0x0
    2558:	b.ne	24dc <xz_dec_bcj_reset+0x8e8>  // b.any
    255c:	mov	w0, #0x1                   	// #1
    2560:	add	sp, sp, #0x10
    2564:	ret
    2568:	sub	sp, sp, #0x10
    256c:	str	x0, [sp, #8]
    2570:	ldr	x0, [sp, #8]
    2574:	ldr	x1, [x0, #24]
    2578:	ldr	x0, [sp, #8]
    257c:	ldr	x0, [x0, #32]
    2580:	cmp	x1, x0
    2584:	cset	w0, hi  // hi = pmore
    2588:	and	w0, w0, #0xff
    258c:	add	sp, sp, #0x10
    2590:	ret
    2594:	sub	sp, sp, #0x10
    2598:	str	x0, [sp, #8]
    259c:	ldr	x0, [sp, #8]
    25a0:	ldr	w0, [x0, #4]
    25a4:	cmp	w0, #0x0
    25a8:	cset	w0, eq  // eq = none
    25ac:	and	w0, w0, #0xff
    25b0:	add	sp, sp, #0x10
    25b4:	ret
    25b8:	sub	sp, sp, #0x30
    25bc:	str	x0, [sp, #24]
    25c0:	str	x1, [sp, #16]
    25c4:	str	w2, [sp, #12]
    25c8:	ldr	x0, [sp, #24]
    25cc:	str	x0, [sp, #32]
    25d0:	ldr	x0, [sp, #32]
    25d4:	ldr	w1, [x0]
    25d8:	mov	w0, #0xffffff              	// #16777215
    25dc:	cmp	w1, w0
    25e0:	b.hi	2634 <xz_dec_bcj_reset+0xa40>  // b.pmore
    25e4:	ldr	x0, [sp, #32]
    25e8:	ldr	w0, [x0]
    25ec:	lsl	w1, w0, #8
    25f0:	ldr	x0, [sp, #32]
    25f4:	str	w1, [x0]
    25f8:	ldr	x0, [sp, #32]
    25fc:	ldr	w0, [x0, #4]
    2600:	lsl	w1, w0, #8
    2604:	ldr	x0, [sp, #32]
    2608:	ldr	x2, [x0, #16]
    260c:	ldr	x0, [sp, #32]
    2610:	ldr	x0, [x0, #24]
    2614:	add	x4, x0, #0x1
    2618:	ldr	x3, [sp, #32]
    261c:	str	x4, [x3, #24]
    2620:	add	x0, x2, x0
    2624:	ldrb	w0, [x0]
    2628:	add	w1, w1, w0
    262c:	ldr	x0, [sp, #32]
    2630:	str	w1, [x0, #4]
    2634:	nop
    2638:	ldr	x0, [sp, #24]
    263c:	ldr	w0, [x0]
    2640:	lsr	w1, w0, #1
    2644:	ldr	x0, [sp, #24]
    2648:	str	w1, [x0]
    264c:	ldr	x0, [sp, #24]
    2650:	ldr	w1, [x0, #4]
    2654:	ldr	x0, [sp, #24]
    2658:	ldr	w0, [x0]
    265c:	sub	w1, w1, w0
    2660:	ldr	x0, [sp, #24]
    2664:	str	w1, [x0, #4]
    2668:	ldr	x0, [sp, #24]
    266c:	ldr	w0, [x0, #4]
    2670:	asr	w0, w0, #31
    2674:	str	w0, [sp, #44]
    2678:	ldr	x0, [sp, #24]
    267c:	ldr	w1, [x0, #4]
    2680:	ldr	x0, [sp, #24]
    2684:	ldr	w2, [x0]
    2688:	ldr	w0, [sp, #44]
    268c:	and	w0, w2, w0
    2690:	add	w1, w1, w0
    2694:	ldr	x0, [sp, #24]
    2698:	str	w1, [x0, #4]
    269c:	ldr	x0, [sp, #16]
    26a0:	ldr	w0, [x0]
    26a4:	lsl	w1, w0, #1
    26a8:	ldr	w0, [sp, #44]
    26ac:	add	w0, w1, w0
    26b0:	add	w1, w0, #0x1
    26b4:	ldr	x0, [sp, #16]
    26b8:	str	w1, [x0]
    26bc:	ldr	w0, [sp, #12]
    26c0:	sub	w0, w0, #0x1
    26c4:	str	w0, [sp, #12]
    26c8:	ldr	w0, [sp, #12]
    26cc:	cmp	w0, #0x0
    26d0:	b.ne	25c8 <xz_dec_bcj_reset+0x9d4>  // b.any
    26d4:	nop
    26d8:	nop
    26dc:	add	sp, sp, #0x30
    26e0:	ret
    26e4:	stp	x29, x30, [sp, #-48]!
    26e8:	mov	x29, sp
    26ec:	str	x0, [sp, #24]
    26f0:	ldr	x0, [sp, #24]
    26f4:	add	x0, x0, #0x60
    26f8:	mov	w1, #0x0                   	// #0
    26fc:	bl	1f54 <xz_dec_bcj_reset+0x360>
    2700:	str	w0, [sp, #44]
    2704:	ldr	x0, [sp, #24]
    2708:	ldr	w0, [x0, #192]
    270c:	mov	w1, #0x8                   	// #8
    2710:	sub	w0, w1, w0
    2714:	ldr	w1, [sp, #44]
    2718:	lsr	w0, w1, w0
    271c:	str	w0, [sp, #40]
    2720:	ldr	x0, [sp, #24]
    2724:	ldr	x1, [x0, #112]
    2728:	ldr	x0, [sp, #24]
    272c:	ldr	w0, [x0, #196]
    2730:	mov	w0, w0
    2734:	and	x1, x1, x0
    2738:	ldr	x0, [sp, #24]
    273c:	ldr	w0, [x0, #192]
    2740:	lsl	x0, x1, x0
    2744:	str	w0, [sp, #36]
    2748:	ldr	w1, [sp, #40]
    274c:	ldr	w0, [sp, #36]
    2750:	add	w0, w1, w0
    2754:	mov	w1, w0
    2758:	mov	x0, x1
    275c:	lsl	x0, x0, #1
    2760:	add	x0, x0, x1
    2764:	lsl	x0, x0, #9
    2768:	add	x0, x0, #0xf50
    276c:	ldr	x1, [sp, #24]
    2770:	add	x0, x1, x0
    2774:	ldp	x29, x30, [sp], #48
    2778:	ret
    277c:	stp	x29, x30, [sp, #-160]!
    2780:	mov	x29, sp
    2784:	str	x0, [sp, #24]
    2788:	ldr	x0, [sp, #24]
    278c:	bl	26e4 <xz_dec_bcj_reset+0xaf0>
    2790:	str	x0, [sp, #136]
    2794:	ldr	x0, [sp, #24]
    2798:	ldr	w0, [x0, #204]
    279c:	bl	1dfc <xz_dec_bcj_reset+0x208>
    27a0:	cmp	w0, #0x0
    27a4:	b.eq	2978 <xz_dec_bcj_reset+0xd84>  // b.none
    27a8:	ldr	x0, [sp, #24]
    27ac:	add	x0, x0, #0x98
    27b0:	str	x0, [sp, #120]
    27b4:	ldr	x0, [sp, #136]
    27b8:	str	x0, [sp, #112]
    27bc:	mov	w0, #0x100                 	// #256
    27c0:	str	w0, [sp, #108]
    27c4:	mov	w0, #0x1                   	// #1
    27c8:	str	w0, [sp, #104]
    27cc:	ldr	w0, [sp, #104]
    27d0:	lsl	x0, x0, #1
    27d4:	ldr	x1, [sp, #112]
    27d8:	add	x0, x1, x0
    27dc:	ldr	x1, [sp, #120]
    27e0:	str	x1, [sp, #96]
    27e4:	str	x0, [sp, #88]
    27e8:	ldr	x0, [sp, #96]
    27ec:	str	x0, [sp, #80]
    27f0:	ldr	x0, [sp, #80]
    27f4:	ldr	w1, [x0]
    27f8:	mov	w0, #0xffffff              	// #16777215
    27fc:	cmp	w1, w0
    2800:	b.hi	2854 <xz_dec_bcj_reset+0xc60>  // b.pmore
    2804:	ldr	x0, [sp, #80]
    2808:	ldr	w0, [x0]
    280c:	lsl	w1, w0, #8
    2810:	ldr	x0, [sp, #80]
    2814:	str	w1, [x0]
    2818:	ldr	x0, [sp, #80]
    281c:	ldr	w0, [x0, #4]
    2820:	lsl	w1, w0, #8
    2824:	ldr	x0, [sp, #80]
    2828:	ldr	x2, [x0, #16]
    282c:	ldr	x0, [sp, #80]
    2830:	ldr	x0, [x0, #24]
    2834:	add	x4, x0, #0x1
    2838:	ldr	x3, [sp, #80]
    283c:	str	x4, [x3, #24]
    2840:	add	x0, x2, x0
    2844:	ldrb	w0, [x0]
    2848:	add	w1, w1, w0
    284c:	ldr	x0, [sp, #80]
    2850:	str	w1, [x0, #4]
    2854:	nop
    2858:	ldr	x0, [sp, #96]
    285c:	ldr	w0, [x0]
    2860:	lsr	w0, w0, #11
    2864:	ldr	x1, [sp, #88]
    2868:	ldrh	w1, [x1]
    286c:	mul	w0, w0, w1
    2870:	str	w0, [sp, #76]
    2874:	ldr	x0, [sp, #96]
    2878:	ldr	w0, [x0, #4]
    287c:	ldr	w1, [sp, #76]
    2880:	cmp	w1, w0
    2884:	b.ls	28d0 <xz_dec_bcj_reset+0xcdc>  // b.plast
    2888:	ldr	x0, [sp, #96]
    288c:	ldr	w1, [sp, #76]
    2890:	str	w1, [x0]
    2894:	ldr	x0, [sp, #88]
    2898:	ldrh	w1, [x0]
    289c:	ldr	x0, [sp, #88]
    28a0:	ldrh	w0, [x0]
    28a4:	mov	w2, w0
    28a8:	mov	w0, #0x800                 	// #2048
    28ac:	sub	w0, w0, w2
    28b0:	asr	w0, w0, #5
    28b4:	and	w0, w0, #0xffff
    28b8:	add	w0, w1, w0
    28bc:	and	w1, w0, #0xffff
    28c0:	ldr	x0, [sp, #88]
    28c4:	strh	w1, [x0]
    28c8:	str	wzr, [sp, #72]
    28cc:	b	2930 <xz_dec_bcj_reset+0xd3c>
    28d0:	ldr	x0, [sp, #96]
    28d4:	ldr	w1, [x0]
    28d8:	ldr	w0, [sp, #76]
    28dc:	sub	w1, w1, w0
    28e0:	ldr	x0, [sp, #96]
    28e4:	str	w1, [x0]
    28e8:	ldr	x0, [sp, #96]
    28ec:	ldr	w1, [x0, #4]
    28f0:	ldr	w0, [sp, #76]
    28f4:	sub	w1, w1, w0
    28f8:	ldr	x0, [sp, #96]
    28fc:	str	w1, [x0, #4]
    2900:	ldr	x0, [sp, #88]
    2904:	ldrh	w1, [x0]
    2908:	ldr	x0, [sp, #88]
    290c:	ldrh	w0, [x0]
    2910:	lsr	w0, w0, #5
    2914:	and	w0, w0, #0xffff
    2918:	sub	w0, w1, w0
    291c:	and	w1, w0, #0xffff
    2920:	ldr	x0, [sp, #88]
    2924:	strh	w1, [x0]
    2928:	mov	w0, #0x1                   	// #1
    292c:	str	w0, [sp, #72]
    2930:	ldr	w0, [sp, #72]
    2934:	cmp	w0, #0x0
    2938:	b.eq	2950 <xz_dec_bcj_reset+0xd5c>  // b.none
    293c:	ldr	w0, [sp, #104]
    2940:	lsl	w0, w0, #1
    2944:	add	w0, w0, #0x1
    2948:	str	w0, [sp, #104]
    294c:	b	295c <xz_dec_bcj_reset+0xd68>
    2950:	ldr	w0, [sp, #104]
    2954:	lsl	w0, w0, #1
    2958:	str	w0, [sp, #104]
    295c:	ldr	w1, [sp, #108]
    2960:	ldr	w0, [sp, #104]
    2964:	cmp	w1, w0
    2968:	b.hi	27cc <xz_dec_bcj_reset+0xbd8>  // b.pmore
    296c:	ldr	w0, [sp, #104]
    2970:	str	w0, [sp, #156]
    2974:	b	2ba4 <xz_dec_bcj_reset+0xfb0>
    2978:	mov	w0, #0x1                   	// #1
    297c:	str	w0, [sp, #156]
    2980:	ldr	x0, [sp, #24]
    2984:	add	x2, x0, #0x60
    2988:	ldr	x0, [sp, #24]
    298c:	ldr	w0, [x0, #208]
    2990:	mov	w1, w0
    2994:	mov	x0, x2
    2998:	bl	1f54 <xz_dec_bcj_reset+0x360>
    299c:	lsl	w0, w0, #1
    29a0:	str	w0, [sp, #152]
    29a4:	mov	w0, #0x100                 	// #256
    29a8:	str	w0, [sp, #148]
    29ac:	ldr	w1, [sp, #152]
    29b0:	ldr	w0, [sp, #148]
    29b4:	and	w0, w1, w0
    29b8:	str	w0, [sp, #132]
    29bc:	ldr	w0, [sp, #152]
    29c0:	lsl	w0, w0, #1
    29c4:	str	w0, [sp, #152]
    29c8:	ldr	w1, [sp, #148]
    29cc:	ldr	w0, [sp, #132]
    29d0:	add	w0, w1, w0
    29d4:	ldr	w1, [sp, #156]
    29d8:	add	w0, w1, w0
    29dc:	str	w0, [sp, #128]
    29e0:	ldr	x0, [sp, #24]
    29e4:	add	x1, x0, #0x98
    29e8:	ldr	w0, [sp, #128]
    29ec:	lsl	x0, x0, #1
    29f0:	ldr	x2, [sp, #136]
    29f4:	add	x0, x2, x0
    29f8:	str	x1, [sp, #64]
    29fc:	str	x0, [sp, #56]
    2a00:	ldr	x0, [sp, #64]
    2a04:	str	x0, [sp, #48]
    2a08:	ldr	x0, [sp, #48]
    2a0c:	ldr	w1, [x0]
    2a10:	mov	w0, #0xffffff              	// #16777215
    2a14:	cmp	w1, w0
    2a18:	b.hi	2a6c <xz_dec_bcj_reset+0xe78>  // b.pmore
    2a1c:	ldr	x0, [sp, #48]
    2a20:	ldr	w0, [x0]
    2a24:	lsl	w1, w0, #8
    2a28:	ldr	x0, [sp, #48]
    2a2c:	str	w1, [x0]
    2a30:	ldr	x0, [sp, #48]
    2a34:	ldr	w0, [x0, #4]
    2a38:	lsl	w1, w0, #8
    2a3c:	ldr	x0, [sp, #48]
    2a40:	ldr	x2, [x0, #16]
    2a44:	ldr	x0, [sp, #48]
    2a48:	ldr	x0, [x0, #24]
    2a4c:	add	x4, x0, #0x1
    2a50:	ldr	x3, [sp, #48]
    2a54:	str	x4, [x3, #24]
    2a58:	add	x0, x2, x0
    2a5c:	ldrb	w0, [x0]
    2a60:	add	w1, w1, w0
    2a64:	ldr	x0, [sp, #48]
    2a68:	str	w1, [x0, #4]
    2a6c:	nop
    2a70:	ldr	x0, [sp, #64]
    2a74:	ldr	w0, [x0]
    2a78:	lsr	w0, w0, #11
    2a7c:	ldr	x1, [sp, #56]
    2a80:	ldrh	w1, [x1]
    2a84:	mul	w0, w0, w1
    2a88:	str	w0, [sp, #44]
    2a8c:	ldr	x0, [sp, #64]
    2a90:	ldr	w0, [x0, #4]
    2a94:	ldr	w1, [sp, #44]
    2a98:	cmp	w1, w0
    2a9c:	b.ls	2ae8 <xz_dec_bcj_reset+0xef4>  // b.plast
    2aa0:	ldr	x0, [sp, #64]
    2aa4:	ldr	w1, [sp, #44]
    2aa8:	str	w1, [x0]
    2aac:	ldr	x0, [sp, #56]
    2ab0:	ldrh	w1, [x0]
    2ab4:	ldr	x0, [sp, #56]
    2ab8:	ldrh	w0, [x0]
    2abc:	mov	w2, w0
    2ac0:	mov	w0, #0x800                 	// #2048
    2ac4:	sub	w0, w0, w2
    2ac8:	asr	w0, w0, #5
    2acc:	and	w0, w0, #0xffff
    2ad0:	add	w0, w1, w0
    2ad4:	and	w1, w0, #0xffff
    2ad8:	ldr	x0, [sp, #56]
    2adc:	strh	w1, [x0]
    2ae0:	str	wzr, [sp, #40]
    2ae4:	b	2b48 <xz_dec_bcj_reset+0xf54>
    2ae8:	ldr	x0, [sp, #64]
    2aec:	ldr	w1, [x0]
    2af0:	ldr	w0, [sp, #44]
    2af4:	sub	w1, w1, w0
    2af8:	ldr	x0, [sp, #64]
    2afc:	str	w1, [x0]
    2b00:	ldr	x0, [sp, #64]
    2b04:	ldr	w1, [x0, #4]
    2b08:	ldr	w0, [sp, #44]
    2b0c:	sub	w1, w1, w0
    2b10:	ldr	x0, [sp, #64]
    2b14:	str	w1, [x0, #4]
    2b18:	ldr	x0, [sp, #56]
    2b1c:	ldrh	w1, [x0]
    2b20:	ldr	x0, [sp, #56]
    2b24:	ldrh	w0, [x0]
    2b28:	lsr	w0, w0, #5
    2b2c:	and	w0, w0, #0xffff
    2b30:	sub	w0, w1, w0
    2b34:	and	w1, w0, #0xffff
    2b38:	ldr	x0, [sp, #56]
    2b3c:	strh	w1, [x0]
    2b40:	mov	w0, #0x1                   	// #1
    2b44:	str	w0, [sp, #40]
    2b48:	ldr	w0, [sp, #40]
    2b4c:	cmp	w0, #0x0
    2b50:	b.eq	2b78 <xz_dec_bcj_reset+0xf84>  // b.none
    2b54:	ldr	w0, [sp, #156]
    2b58:	lsl	w0, w0, #1
    2b5c:	add	w0, w0, #0x1
    2b60:	str	w0, [sp, #156]
    2b64:	ldr	w1, [sp, #148]
    2b68:	ldr	w0, [sp, #132]
    2b6c:	and	w0, w1, w0
    2b70:	str	w0, [sp, #148]
    2b74:	b	2b98 <xz_dec_bcj_reset+0xfa4>
    2b78:	ldr	w0, [sp, #156]
    2b7c:	lsl	w0, w0, #1
    2b80:	str	w0, [sp, #156]
    2b84:	ldr	w0, [sp, #132]
    2b88:	mvn	w0, w0
    2b8c:	ldr	w1, [sp, #148]
    2b90:	and	w0, w1, w0
    2b94:	str	w0, [sp, #148]
    2b98:	ldr	w0, [sp, #156]
    2b9c:	cmp	w0, #0xff
    2ba0:	b.ls	29ac <xz_dec_bcj_reset+0xdb8>  // b.plast
    2ba4:	ldr	x0, [sp, #24]
    2ba8:	add	x0, x0, #0x60
    2bac:	ldr	w1, [sp, #156]
    2bb0:	and	w1, w1, #0xff
    2bb4:	bl	1fd4 <xz_dec_bcj_reset+0x3e0>
    2bb8:	ldr	x0, [sp, #24]
    2bbc:	add	x0, x0, #0xcc
    2bc0:	bl	1ce8 <xz_dec_bcj_reset+0xf4>
    2bc4:	nop
    2bc8:	ldp	x29, x30, [sp], #160
    2bcc:	ret
    2bd0:	sub	sp, sp, #0xb0
    2bd4:	str	x0, [sp, #24]
    2bd8:	str	x1, [sp, #16]
    2bdc:	str	w2, [sp, #12]
    2be0:	ldr	x0, [sp, #24]
    2be4:	add	x1, x0, #0x98
    2be8:	ldr	x0, [sp, #16]
    2bec:	str	x1, [sp, #152]
    2bf0:	str	x0, [sp, #144]
    2bf4:	ldr	x0, [sp, #152]
    2bf8:	str	x0, [sp, #136]
    2bfc:	ldr	x0, [sp, #136]
    2c00:	ldr	w1, [x0]
    2c04:	mov	w0, #0xffffff              	// #16777215
    2c08:	cmp	w1, w0
    2c0c:	b.hi	2c60 <xz_dec_bcj_reset+0x106c>  // b.pmore
    2c10:	ldr	x0, [sp, #136]
    2c14:	ldr	w0, [x0]
    2c18:	lsl	w1, w0, #8
    2c1c:	ldr	x0, [sp, #136]
    2c20:	str	w1, [x0]
    2c24:	ldr	x0, [sp, #136]
    2c28:	ldr	w0, [x0, #4]
    2c2c:	lsl	w1, w0, #8
    2c30:	ldr	x0, [sp, #136]
    2c34:	ldr	x2, [x0, #16]
    2c38:	ldr	x0, [sp, #136]
    2c3c:	ldr	x0, [x0, #24]
    2c40:	add	x4, x0, #0x1
    2c44:	ldr	x3, [sp, #136]
    2c48:	str	x4, [x3, #24]
    2c4c:	add	x0, x2, x0
    2c50:	ldrb	w0, [x0]
    2c54:	add	w1, w1, w0
    2c58:	ldr	x0, [sp, #136]
    2c5c:	str	w1, [x0, #4]
    2c60:	nop
    2c64:	ldr	x0, [sp, #152]
    2c68:	ldr	w0, [x0]
    2c6c:	lsr	w0, w0, #11
    2c70:	ldr	x1, [sp, #144]
    2c74:	ldrh	w1, [x1]
    2c78:	mul	w0, w0, w1
    2c7c:	str	w0, [sp, #132]
    2c80:	ldr	x0, [sp, #152]
    2c84:	ldr	w0, [x0, #4]
    2c88:	ldr	w1, [sp, #132]
    2c8c:	cmp	w1, w0
    2c90:	b.ls	2cdc <xz_dec_bcj_reset+0x10e8>  // b.plast
    2c94:	ldr	x0, [sp, #152]
    2c98:	ldr	w1, [sp, #132]
    2c9c:	str	w1, [x0]
    2ca0:	ldr	x0, [sp, #144]
    2ca4:	ldrh	w1, [x0]
    2ca8:	ldr	x0, [sp, #144]
    2cac:	ldrh	w0, [x0]
    2cb0:	mov	w2, w0
    2cb4:	mov	w0, #0x800                 	// #2048
    2cb8:	sub	w0, w0, w2
    2cbc:	asr	w0, w0, #5
    2cc0:	and	w0, w0, #0xffff
    2cc4:	add	w0, w1, w0
    2cc8:	and	w1, w0, #0xffff
    2ccc:	ldr	x0, [sp, #144]
    2cd0:	strh	w1, [x0]
    2cd4:	str	wzr, [sp, #128]
    2cd8:	b	2d3c <xz_dec_bcj_reset+0x1148>
    2cdc:	ldr	x0, [sp, #152]
    2ce0:	ldr	w1, [x0]
    2ce4:	ldr	w0, [sp, #132]
    2ce8:	sub	w1, w1, w0
    2cec:	ldr	x0, [sp, #152]
    2cf0:	str	w1, [x0]
    2cf4:	ldr	x0, [sp, #152]
    2cf8:	ldr	w1, [x0, #4]
    2cfc:	ldr	w0, [sp, #132]
    2d00:	sub	w1, w1, w0
    2d04:	ldr	x0, [sp, #152]
    2d08:	str	w1, [x0, #4]
    2d0c:	ldr	x0, [sp, #144]
    2d10:	ldrh	w1, [x0]
    2d14:	ldr	x0, [sp, #144]
    2d18:	ldrh	w0, [x0]
    2d1c:	lsr	w0, w0, #5
    2d20:	and	w0, w0, #0xffff
    2d24:	sub	w0, w1, w0
    2d28:	and	w1, w0, #0xffff
    2d2c:	ldr	x0, [sp, #144]
    2d30:	strh	w1, [x0]
    2d34:	mov	w0, #0x1                   	// #1
    2d38:	str	w0, [sp, #128]
    2d3c:	ldr	w0, [sp, #128]
    2d40:	cmp	w0, #0x0
    2d44:	b.ne	2d78 <xz_dec_bcj_reset+0x1184>  // b.any
    2d48:	ldr	w0, [sp, #12]
    2d4c:	lsl	x0, x0, #4
    2d50:	ldr	x1, [sp, #16]
    2d54:	add	x0, x1, x0
    2d58:	add	x0, x0, #0x4
    2d5c:	str	x0, [sp, #168]
    2d60:	mov	w0, #0x8                   	// #8
    2d64:	str	w0, [sp, #164]
    2d68:	ldr	x0, [sp, #24]
    2d6c:	mov	w1, #0x2                   	// #2
    2d70:	str	w1, [x0, #224]
    2d74:	b	2f38 <xz_dec_bcj_reset+0x1344>
    2d78:	ldr	x0, [sp, #24]
    2d7c:	add	x1, x0, #0x98
    2d80:	ldr	x0, [sp, #16]
    2d84:	add	x0, x0, #0x2
    2d88:	str	x1, [sp, #120]
    2d8c:	str	x0, [sp, #112]
    2d90:	ldr	x0, [sp, #120]
    2d94:	str	x0, [sp, #104]
    2d98:	ldr	x0, [sp, #104]
    2d9c:	ldr	w1, [x0]
    2da0:	mov	w0, #0xffffff              	// #16777215
    2da4:	cmp	w1, w0
    2da8:	b.hi	2dfc <xz_dec_bcj_reset+0x1208>  // b.pmore
    2dac:	ldr	x0, [sp, #104]
    2db0:	ldr	w0, [x0]
    2db4:	lsl	w1, w0, #8
    2db8:	ldr	x0, [sp, #104]
    2dbc:	str	w1, [x0]
    2dc0:	ldr	x0, [sp, #104]
    2dc4:	ldr	w0, [x0, #4]
    2dc8:	lsl	w1, w0, #8
    2dcc:	ldr	x0, [sp, #104]
    2dd0:	ldr	x2, [x0, #16]
    2dd4:	ldr	x0, [sp, #104]
    2dd8:	ldr	x0, [x0, #24]
    2ddc:	add	x4, x0, #0x1
    2de0:	ldr	x3, [sp, #104]
    2de4:	str	x4, [x3, #24]
    2de8:	add	x0, x2, x0
    2dec:	ldrb	w0, [x0]
    2df0:	add	w1, w1, w0
    2df4:	ldr	x0, [sp, #104]
    2df8:	str	w1, [x0, #4]
    2dfc:	nop
    2e00:	ldr	x0, [sp, #120]
    2e04:	ldr	w0, [x0]
    2e08:	lsr	w0, w0, #11
    2e0c:	ldr	x1, [sp, #112]
    2e10:	ldrh	w1, [x1]
    2e14:	mul	w0, w0, w1
    2e18:	str	w0, [sp, #100]
    2e1c:	ldr	x0, [sp, #120]
    2e20:	ldr	w0, [x0, #4]
    2e24:	ldr	w1, [sp, #100]
    2e28:	cmp	w1, w0
    2e2c:	b.ls	2e78 <xz_dec_bcj_reset+0x1284>  // b.plast
    2e30:	ldr	x0, [sp, #120]
    2e34:	ldr	w1, [sp, #100]
    2e38:	str	w1, [x0]
    2e3c:	ldr	x0, [sp, #112]
    2e40:	ldrh	w1, [x0]
    2e44:	ldr	x0, [sp, #112]
    2e48:	ldrh	w0, [x0]
    2e4c:	mov	w2, w0
    2e50:	mov	w0, #0x800                 	// #2048
    2e54:	sub	w0, w0, w2
    2e58:	asr	w0, w0, #5
    2e5c:	and	w0, w0, #0xffff
    2e60:	add	w0, w1, w0
    2e64:	and	w1, w0, #0xffff
    2e68:	ldr	x0, [sp, #112]
    2e6c:	strh	w1, [x0]
    2e70:	str	wzr, [sp, #96]
    2e74:	b	2ed8 <xz_dec_bcj_reset+0x12e4>
    2e78:	ldr	x0, [sp, #120]
    2e7c:	ldr	w1, [x0]
    2e80:	ldr	w0, [sp, #100]
    2e84:	sub	w1, w1, w0
    2e88:	ldr	x0, [sp, #120]
    2e8c:	str	w1, [x0]
    2e90:	ldr	x0, [sp, #120]
    2e94:	ldr	w1, [x0, #4]
    2e98:	ldr	w0, [sp, #100]
    2e9c:	sub	w1, w1, w0
    2ea0:	ldr	x0, [sp, #120]
    2ea4:	str	w1, [x0, #4]
    2ea8:	ldr	x0, [sp, #112]
    2eac:	ldrh	w1, [x0]
    2eb0:	ldr	x0, [sp, #112]
    2eb4:	ldrh	w0, [x0]
    2eb8:	lsr	w0, w0, #5
    2ebc:	and	w0, w0, #0xffff
    2ec0:	sub	w0, w1, w0
    2ec4:	and	w1, w0, #0xffff
    2ec8:	ldr	x0, [sp, #112]
    2ecc:	strh	w1, [x0]
    2ed0:	mov	w0, #0x1                   	// #1
    2ed4:	str	w0, [sp, #96]
    2ed8:	ldr	w0, [sp, #96]
    2edc:	cmp	w0, #0x0
    2ee0:	b.ne	2f18 <xz_dec_bcj_reset+0x1324>  // b.any
    2ee4:	ldr	w0, [sp, #12]
    2ee8:	add	x0, x0, #0x10
    2eec:	lsl	x0, x0, #4
    2ef0:	ldr	x1, [sp, #16]
    2ef4:	add	x0, x1, x0
    2ef8:	add	x0, x0, #0x4
    2efc:	str	x0, [sp, #168]
    2f00:	mov	w0, #0x8                   	// #8
    2f04:	str	w0, [sp, #164]
    2f08:	ldr	x0, [sp, #24]
    2f0c:	mov	w1, #0xa                   	// #10
    2f10:	str	w1, [x0, #224]
    2f14:	b	2f38 <xz_dec_bcj_reset+0x1344>
    2f18:	ldr	x0, [sp, #16]
    2f1c:	add	x0, x0, #0x204
    2f20:	str	x0, [sp, #168]
    2f24:	mov	w0, #0x100                 	// #256
    2f28:	str	w0, [sp, #164]
    2f2c:	ldr	x0, [sp, #24]
    2f30:	mov	w1, #0x12                  	// #18
    2f34:	str	w1, [x0, #224]
    2f38:	ldr	x0, [sp, #24]
    2f3c:	add	x0, x0, #0x98
    2f40:	str	x0, [sp, #88]
    2f44:	ldr	x0, [sp, #168]
    2f48:	str	x0, [sp, #80]
    2f4c:	ldr	w0, [sp, #164]
    2f50:	str	w0, [sp, #76]
    2f54:	mov	w0, #0x1                   	// #1
    2f58:	str	w0, [sp, #72]
    2f5c:	ldr	w0, [sp, #72]
    2f60:	lsl	x0, x0, #1
    2f64:	ldr	x1, [sp, #80]
    2f68:	add	x0, x1, x0
    2f6c:	ldr	x1, [sp, #88]
    2f70:	str	x1, [sp, #64]
    2f74:	str	x0, [sp, #56]
    2f78:	ldr	x0, [sp, #64]
    2f7c:	str	x0, [sp, #48]
    2f80:	ldr	x0, [sp, #48]
    2f84:	ldr	w1, [x0]
    2f88:	mov	w0, #0xffffff              	// #16777215
    2f8c:	cmp	w1, w0
    2f90:	b.hi	2fe4 <xz_dec_bcj_reset+0x13f0>  // b.pmore
    2f94:	ldr	x0, [sp, #48]
    2f98:	ldr	w0, [x0]
    2f9c:	lsl	w1, w0, #8
    2fa0:	ldr	x0, [sp, #48]
    2fa4:	str	w1, [x0]
    2fa8:	ldr	x0, [sp, #48]
    2fac:	ldr	w0, [x0, #4]
    2fb0:	lsl	w1, w0, #8
    2fb4:	ldr	x0, [sp, #48]
    2fb8:	ldr	x2, [x0, #16]
    2fbc:	ldr	x0, [sp, #48]
    2fc0:	ldr	x0, [x0, #24]
    2fc4:	add	x4, x0, #0x1
    2fc8:	ldr	x3, [sp, #48]
    2fcc:	str	x4, [x3, #24]
    2fd0:	add	x0, x2, x0
    2fd4:	ldrb	w0, [x0]
    2fd8:	add	w1, w1, w0
    2fdc:	ldr	x0, [sp, #48]
    2fe0:	str	w1, [x0, #4]
    2fe4:	nop
    2fe8:	ldr	x0, [sp, #64]
    2fec:	ldr	w0, [x0]
    2ff0:	lsr	w0, w0, #11
    2ff4:	ldr	x1, [sp, #56]
    2ff8:	ldrh	w1, [x1]
    2ffc:	mul	w0, w0, w1
    3000:	str	w0, [sp, #44]
    3004:	ldr	x0, [sp, #64]
    3008:	ldr	w0, [x0, #4]
    300c:	ldr	w1, [sp, #44]
    3010:	cmp	w1, w0
    3014:	b.ls	3060 <xz_dec_bcj_reset+0x146c>  // b.plast
    3018:	ldr	x0, [sp, #64]
    301c:	ldr	w1, [sp, #44]
    3020:	str	w1, [x0]
    3024:	ldr	x0, [sp, #56]
    3028:	ldrh	w1, [x0]
    302c:	ldr	x0, [sp, #56]
    3030:	ldrh	w0, [x0]
    3034:	mov	w2, w0
    3038:	mov	w0, #0x800                 	// #2048
    303c:	sub	w0, w0, w2
    3040:	asr	w0, w0, #5
    3044:	and	w0, w0, #0xffff
    3048:	add	w0, w1, w0
    304c:	and	w1, w0, #0xffff
    3050:	ldr	x0, [sp, #56]
    3054:	strh	w1, [x0]
    3058:	str	wzr, [sp, #40]
    305c:	b	30c0 <xz_dec_bcj_reset+0x14cc>
    3060:	ldr	x0, [sp, #64]
    3064:	ldr	w1, [x0]
    3068:	ldr	w0, [sp, #44]
    306c:	sub	w1, w1, w0
    3070:	ldr	x0, [sp, #64]
    3074:	str	w1, [x0]
    3078:	ldr	x0, [sp, #64]
    307c:	ldr	w1, [x0, #4]
    3080:	ldr	w0, [sp, #44]
    3084:	sub	w1, w1, w0
    3088:	ldr	x0, [sp, #64]
    308c:	str	w1, [x0, #4]
    3090:	ldr	x0, [sp, #56]
    3094:	ldrh	w1, [x0]
    3098:	ldr	x0, [sp, #56]
    309c:	ldrh	w0, [x0]
    30a0:	lsr	w0, w0, #5
    30a4:	and	w0, w0, #0xffff
    30a8:	sub	w0, w1, w0
    30ac:	and	w1, w0, #0xffff
    30b0:	ldr	x0, [sp, #56]
    30b4:	strh	w1, [x0]
    30b8:	mov	w0, #0x1                   	// #1
    30bc:	str	w0, [sp, #40]
    30c0:	ldr	w0, [sp, #40]
    30c4:	cmp	w0, #0x0
    30c8:	b.eq	30e0 <xz_dec_bcj_reset+0x14ec>  // b.none
    30cc:	ldr	w0, [sp, #72]
    30d0:	lsl	w0, w0, #1
    30d4:	add	w0, w0, #0x1
    30d8:	str	w0, [sp, #72]
    30dc:	b	30ec <xz_dec_bcj_reset+0x14f8>
    30e0:	ldr	w0, [sp, #72]
    30e4:	lsl	w0, w0, #1
    30e8:	str	w0, [sp, #72]
    30ec:	ldr	w1, [sp, #76]
    30f0:	ldr	w0, [sp, #72]
    30f4:	cmp	w1, w0
    30f8:	b.hi	2f5c <xz_dec_bcj_reset+0x1368>  // b.pmore
    30fc:	ldr	w1, [sp, #72]
    3100:	ldr	w0, [sp, #164]
    3104:	sub	w1, w1, w0
    3108:	ldr	x0, [sp, #24]
    310c:	ldr	w0, [x0, #224]
    3110:	add	w1, w1, w0
    3114:	ldr	x0, [sp, #24]
    3118:	str	w1, [x0, #224]
    311c:	nop
    3120:	add	sp, sp, #0xb0
    3124:	ret
    3128:	stp	x29, x30, [sp, #-256]!
    312c:	mov	x29, sp
    3130:	str	x0, [sp, #24]
    3134:	str	w1, [sp, #20]
    3138:	ldr	x0, [sp, #24]
    313c:	add	x0, x0, #0xcc
    3140:	bl	1d54 <xz_dec_bcj_reset+0x160>
    3144:	ldr	x0, [sp, #24]
    3148:	ldr	w1, [x0, #216]
    314c:	ldr	x0, [sp, #24]
    3150:	str	w1, [x0, #220]
    3154:	ldr	x0, [sp, #24]
    3158:	ldr	w1, [x0, #212]
    315c:	ldr	x0, [sp, #24]
    3160:	str	w1, [x0, #216]
    3164:	ldr	x0, [sp, #24]
    3168:	ldr	w1, [x0, #208]
    316c:	ldr	x0, [sp, #24]
    3170:	str	w1, [x0, #212]
    3174:	ldr	x0, [sp, #24]
    3178:	add	x0, x0, #0x748
    317c:	ldr	w2, [sp, #20]
    3180:	mov	x1, x0
    3184:	ldr	x0, [sp, #24]
    3188:	bl	2bd0 <xz_dec_bcj_reset+0xfdc>
    318c:	ldr	x0, [sp, #24]
    3190:	ldr	w0, [x0, #224]
    3194:	bl	1e1c <xz_dec_bcj_reset+0x228>
    3198:	mov	w0, w0
    319c:	add	x0, x0, #0x7
    31a0:	lsl	x0, x0, #7
    31a4:	add	x0, x0, #0xc0
    31a8:	ldr	x1, [sp, #24]
    31ac:	add	x0, x1, x0
    31b0:	add	x0, x0, #0x4
    31b4:	str	x0, [sp, #248]
    31b8:	ldr	x0, [sp, #24]
    31bc:	add	x0, x0, #0x98
    31c0:	str	x0, [sp, #232]
    31c4:	ldr	x0, [sp, #248]
    31c8:	str	x0, [sp, #224]
    31cc:	mov	w0, #0x40                  	// #64
    31d0:	str	w0, [sp, #220]
    31d4:	mov	w0, #0x1                   	// #1
    31d8:	str	w0, [sp, #216]
    31dc:	ldr	w0, [sp, #216]
    31e0:	lsl	x0, x0, #1
    31e4:	ldr	x1, [sp, #224]
    31e8:	add	x0, x1, x0
    31ec:	ldr	x1, [sp, #232]
    31f0:	str	x1, [sp, #208]
    31f4:	str	x0, [sp, #200]
    31f8:	ldr	x0, [sp, #208]
    31fc:	str	x0, [sp, #192]
    3200:	ldr	x0, [sp, #192]
    3204:	ldr	w1, [x0]
    3208:	mov	w0, #0xffffff              	// #16777215
    320c:	cmp	w1, w0
    3210:	b.hi	3264 <xz_dec_bcj_reset+0x1670>  // b.pmore
    3214:	ldr	x0, [sp, #192]
    3218:	ldr	w0, [x0]
    321c:	lsl	w1, w0, #8
    3220:	ldr	x0, [sp, #192]
    3224:	str	w1, [x0]
    3228:	ldr	x0, [sp, #192]
    322c:	ldr	w0, [x0, #4]
    3230:	lsl	w1, w0, #8
    3234:	ldr	x0, [sp, #192]
    3238:	ldr	x2, [x0, #16]
    323c:	ldr	x0, [sp, #192]
    3240:	ldr	x0, [x0, #24]
    3244:	add	x4, x0, #0x1
    3248:	ldr	x3, [sp, #192]
    324c:	str	x4, [x3, #24]
    3250:	add	x0, x2, x0
    3254:	ldrb	w0, [x0]
    3258:	add	w1, w1, w0
    325c:	ldr	x0, [sp, #192]
    3260:	str	w1, [x0, #4]
    3264:	nop
    3268:	ldr	x0, [sp, #208]
    326c:	ldr	w0, [x0]
    3270:	lsr	w0, w0, #11
    3274:	ldr	x1, [sp, #200]
    3278:	ldrh	w1, [x1]
    327c:	mul	w0, w0, w1
    3280:	str	w0, [sp, #188]
    3284:	ldr	x0, [sp, #208]
    3288:	ldr	w0, [x0, #4]
    328c:	ldr	w1, [sp, #188]
    3290:	cmp	w1, w0
    3294:	b.ls	32e0 <xz_dec_bcj_reset+0x16ec>  // b.plast
    3298:	ldr	x0, [sp, #208]
    329c:	ldr	w1, [sp, #188]
    32a0:	str	w1, [x0]
    32a4:	ldr	x0, [sp, #200]
    32a8:	ldrh	w1, [x0]
    32ac:	ldr	x0, [sp, #200]
    32b0:	ldrh	w0, [x0]
    32b4:	mov	w2, w0
    32b8:	mov	w0, #0x800                 	// #2048
    32bc:	sub	w0, w0, w2
    32c0:	asr	w0, w0, #5
    32c4:	and	w0, w0, #0xffff
    32c8:	add	w0, w1, w0
    32cc:	and	w1, w0, #0xffff
    32d0:	ldr	x0, [sp, #200]
    32d4:	strh	w1, [x0]
    32d8:	str	wzr, [sp, #184]
    32dc:	b	3340 <xz_dec_bcj_reset+0x174c>
    32e0:	ldr	x0, [sp, #208]
    32e4:	ldr	w1, [x0]
    32e8:	ldr	w0, [sp, #188]
    32ec:	sub	w1, w1, w0
    32f0:	ldr	x0, [sp, #208]
    32f4:	str	w1, [x0]
    32f8:	ldr	x0, [sp, #208]
    32fc:	ldr	w1, [x0, #4]
    3300:	ldr	w0, [sp, #188]
    3304:	sub	w1, w1, w0
    3308:	ldr	x0, [sp, #208]
    330c:	str	w1, [x0, #4]
    3310:	ldr	x0, [sp, #200]
    3314:	ldrh	w1, [x0]
    3318:	ldr	x0, [sp, #200]
    331c:	ldrh	w0, [x0]
    3320:	lsr	w0, w0, #5
    3324:	and	w0, w0, #0xffff
    3328:	sub	w0, w1, w0
    332c:	and	w1, w0, #0xffff
    3330:	ldr	x0, [sp, #200]
    3334:	strh	w1, [x0]
    3338:	mov	w0, #0x1                   	// #1
    333c:	str	w0, [sp, #184]
    3340:	ldr	w0, [sp, #184]
    3344:	cmp	w0, #0x0
    3348:	b.eq	3360 <xz_dec_bcj_reset+0x176c>  // b.none
    334c:	ldr	w0, [sp, #216]
    3350:	lsl	w0, w0, #1
    3354:	add	w0, w0, #0x1
    3358:	str	w0, [sp, #216]
    335c:	b	336c <xz_dec_bcj_reset+0x1778>
    3360:	ldr	w0, [sp, #216]
    3364:	lsl	w0, w0, #1
    3368:	str	w0, [sp, #216]
    336c:	ldr	w1, [sp, #220]
    3370:	ldr	w0, [sp, #216]
    3374:	cmp	w1, w0
    3378:	b.hi	31dc <xz_dec_bcj_reset+0x15e8>  // b.pmore
    337c:	ldr	w0, [sp, #216]
    3380:	sub	w0, w0, #0x40
    3384:	str	w0, [sp, #244]
    3388:	ldr	w0, [sp, #244]
    338c:	cmp	w0, #0x3
    3390:	b.hi	33a4 <xz_dec_bcj_reset+0x17b0>  // b.pmore
    3394:	ldr	x0, [sp, #24]
    3398:	ldr	w1, [sp, #244]
    339c:	str	w1, [x0, #208]
    33a0:	b	385c <xz_dec_bcj_reset+0x1c68>
    33a4:	ldr	w0, [sp, #244]
    33a8:	lsr	w0, w0, #1
    33ac:	sub	w0, w0, #0x1
    33b0:	str	w0, [sp, #240]
    33b4:	ldr	w0, [sp, #244]
    33b8:	and	w0, w0, #0x1
    33bc:	add	w1, w0, #0x2
    33c0:	ldr	x0, [sp, #24]
    33c4:	str	w1, [x0, #208]
    33c8:	ldr	w0, [sp, #244]
    33cc:	cmp	w0, #0xd
    33d0:	b.hi	361c <xz_dec_bcj_reset+0x1a28>  // b.pmore
    33d4:	ldr	x0, [sp, #24]
    33d8:	ldr	w1, [x0, #208]
    33dc:	ldr	w0, [sp, #240]
    33e0:	lsl	w1, w1, w0
    33e4:	ldr	x0, [sp, #24]
    33e8:	str	w1, [x0, #208]
    33ec:	ldr	x0, [sp, #24]
    33f0:	add	x1, x0, #0x644
    33f4:	ldr	x0, [sp, #24]
    33f8:	ldr	w0, [x0, #208]
    33fc:	mov	w2, w0
    3400:	ldr	w0, [sp, #244]
    3404:	sub	x0, x2, x0
    3408:	lsl	x0, x0, #1
    340c:	sub	x0, x0, #0x2
    3410:	add	x0, x1, x0
    3414:	str	x0, [sp, #248]
    3418:	ldr	x0, [sp, #24]
    341c:	add	x1, x0, #0x98
    3420:	ldr	x0, [sp, #24]
    3424:	add	x0, x0, #0xd0
    3428:	str	x1, [sp, #176]
    342c:	ldr	x1, [sp, #248]
    3430:	str	x1, [sp, #168]
    3434:	str	x0, [sp, #160]
    3438:	ldr	w0, [sp, #240]
    343c:	str	w0, [sp, #156]
    3440:	mov	w0, #0x1                   	// #1
    3444:	str	w0, [sp, #152]
    3448:	str	wzr, [sp, #148]
    344c:	ldr	w0, [sp, #152]
    3450:	lsl	x0, x0, #1
    3454:	ldr	x1, [sp, #168]
    3458:	add	x0, x1, x0
    345c:	ldr	x1, [sp, #176]
    3460:	str	x1, [sp, #136]
    3464:	str	x0, [sp, #128]
    3468:	ldr	x0, [sp, #136]
    346c:	str	x0, [sp, #120]
    3470:	ldr	x0, [sp, #120]
    3474:	ldr	w1, [x0]
    3478:	mov	w0, #0xffffff              	// #16777215
    347c:	cmp	w1, w0
    3480:	b.hi	34d4 <xz_dec_bcj_reset+0x18e0>  // b.pmore
    3484:	ldr	x0, [sp, #120]
    3488:	ldr	w0, [x0]
    348c:	lsl	w1, w0, #8
    3490:	ldr	x0, [sp, #120]
    3494:	str	w1, [x0]
    3498:	ldr	x0, [sp, #120]
    349c:	ldr	w0, [x0, #4]
    34a0:	lsl	w1, w0, #8
    34a4:	ldr	x0, [sp, #120]
    34a8:	ldr	x2, [x0, #16]
    34ac:	ldr	x0, [sp, #120]
    34b0:	ldr	x0, [x0, #24]
    34b4:	add	x4, x0, #0x1
    34b8:	ldr	x3, [sp, #120]
    34bc:	str	x4, [x3, #24]
    34c0:	add	x0, x2, x0
    34c4:	ldrb	w0, [x0]
    34c8:	add	w1, w1, w0
    34cc:	ldr	x0, [sp, #120]
    34d0:	str	w1, [x0, #4]
    34d4:	nop
    34d8:	ldr	x0, [sp, #136]
    34dc:	ldr	w0, [x0]
    34e0:	lsr	w0, w0, #11
    34e4:	ldr	x1, [sp, #128]
    34e8:	ldrh	w1, [x1]
    34ec:	mul	w0, w0, w1
    34f0:	str	w0, [sp, #116]
    34f4:	ldr	x0, [sp, #136]
    34f8:	ldr	w0, [x0, #4]
    34fc:	ldr	w1, [sp, #116]
    3500:	cmp	w1, w0
    3504:	b.ls	3550 <xz_dec_bcj_reset+0x195c>  // b.plast
    3508:	ldr	x0, [sp, #136]
    350c:	ldr	w1, [sp, #116]
    3510:	str	w1, [x0]
    3514:	ldr	x0, [sp, #128]
    3518:	ldrh	w1, [x0]
    351c:	ldr	x0, [sp, #128]
    3520:	ldrh	w0, [x0]
    3524:	mov	w2, w0
    3528:	mov	w0, #0x800                 	// #2048
    352c:	sub	w0, w0, w2
    3530:	asr	w0, w0, #5
    3534:	and	w0, w0, #0xffff
    3538:	add	w0, w1, w0
    353c:	and	w1, w0, #0xffff
    3540:	ldr	x0, [sp, #128]
    3544:	strh	w1, [x0]
    3548:	str	wzr, [sp, #112]
    354c:	b	35b0 <xz_dec_bcj_reset+0x19bc>
    3550:	ldr	x0, [sp, #136]
    3554:	ldr	w1, [x0]
    3558:	ldr	w0, [sp, #116]
    355c:	sub	w1, w1, w0
    3560:	ldr	x0, [sp, #136]
    3564:	str	w1, [x0]
    3568:	ldr	x0, [sp, #136]
    356c:	ldr	w1, [x0, #4]
    3570:	ldr	w0, [sp, #116]
    3574:	sub	w1, w1, w0
    3578:	ldr	x0, [sp, #136]
    357c:	str	w1, [x0, #4]
    3580:	ldr	x0, [sp, #128]
    3584:	ldrh	w1, [x0]
    3588:	ldr	x0, [sp, #128]
    358c:	ldrh	w0, [x0]
    3590:	lsr	w0, w0, #5
    3594:	and	w0, w0, #0xffff
    3598:	sub	w0, w1, w0
    359c:	and	w1, w0, #0xffff
    35a0:	ldr	x0, [sp, #128]
    35a4:	strh	w1, [x0]
    35a8:	mov	w0, #0x1                   	// #1
    35ac:	str	w0, [sp, #112]
    35b0:	ldr	w0, [sp, #112]
    35b4:	cmp	w0, #0x0
    35b8:	b.eq	35f0 <xz_dec_bcj_reset+0x19fc>  // b.none
    35bc:	ldr	w0, [sp, #152]
    35c0:	lsl	w0, w0, #1
    35c4:	add	w0, w0, #0x1
    35c8:	str	w0, [sp, #152]
    35cc:	ldr	x0, [sp, #160]
    35d0:	ldr	w0, [x0]
    35d4:	ldr	w1, [sp, #148]
    35d8:	mov	w2, #0x1                   	// #1
    35dc:	lsl	w1, w2, w1
    35e0:	add	w1, w0, w1
    35e4:	ldr	x0, [sp, #160]
    35e8:	str	w1, [x0]
    35ec:	b	35fc <xz_dec_bcj_reset+0x1a08>
    35f0:	ldr	w0, [sp, #152]
    35f4:	lsl	w0, w0, #1
    35f8:	str	w0, [sp, #152]
    35fc:	ldr	w0, [sp, #148]
    3600:	add	w0, w0, #0x1
    3604:	str	w0, [sp, #148]
    3608:	ldr	w1, [sp, #156]
    360c:	ldr	w0, [sp, #148]
    3610:	cmp	w1, w0
    3614:	b.hi	344c <xz_dec_bcj_reset+0x1858>  // b.pmore
    3618:	b	385c <xz_dec_bcj_reset+0x1c68>
    361c:	ldr	x0, [sp, #24]
    3620:	add	x3, x0, #0x98
    3624:	ldr	x0, [sp, #24]
    3628:	add	x1, x0, #0xd0
    362c:	ldr	w0, [sp, #240]
    3630:	sub	w0, w0, #0x4
    3634:	mov	w2, w0
    3638:	mov	x0, x3
    363c:	bl	25b8 <xz_dec_bcj_reset+0x9c4>
    3640:	ldr	x0, [sp, #24]
    3644:	ldr	w0, [x0, #208]
    3648:	lsl	w1, w0, #4
    364c:	ldr	x0, [sp, #24]
    3650:	str	w1, [x0, #208]
    3654:	ldr	x0, [sp, #24]
    3658:	add	x2, x0, #0x98
    365c:	ldr	x0, [sp, #24]
    3660:	add	x1, x0, #0x728
    3664:	ldr	x0, [sp, #24]
    3668:	add	x0, x0, #0xd0
    366c:	str	x2, [sp, #104]
    3670:	str	x1, [sp, #96]
    3674:	str	x0, [sp, #88]
    3678:	mov	w0, #0x4                   	// #4
    367c:	str	w0, [sp, #84]
    3680:	mov	w0, #0x1                   	// #1
    3684:	str	w0, [sp, #80]
    3688:	str	wzr, [sp, #76]
    368c:	ldr	w0, [sp, #80]
    3690:	lsl	x0, x0, #1
    3694:	ldr	x1, [sp, #96]
    3698:	add	x0, x1, x0
    369c:	ldr	x1, [sp, #104]
    36a0:	str	x1, [sp, #64]
    36a4:	str	x0, [sp, #56]
    36a8:	ldr	x0, [sp, #64]
    36ac:	str	x0, [sp, #48]
    36b0:	ldr	x0, [sp, #48]
    36b4:	ldr	w1, [x0]
    36b8:	mov	w0, #0xffffff              	// #16777215
    36bc:	cmp	w1, w0
    36c0:	b.hi	3714 <xz_dec_bcj_reset+0x1b20>  // b.pmore
    36c4:	ldr	x0, [sp, #48]
    36c8:	ldr	w0, [x0]
    36cc:	lsl	w1, w0, #8
    36d0:	ldr	x0, [sp, #48]
    36d4:	str	w1, [x0]
    36d8:	ldr	x0, [sp, #48]
    36dc:	ldr	w0, [x0, #4]
    36e0:	lsl	w1, w0, #8
    36e4:	ldr	x0, [sp, #48]
    36e8:	ldr	x2, [x0, #16]
    36ec:	ldr	x0, [sp, #48]
    36f0:	ldr	x0, [x0, #24]
    36f4:	add	x4, x0, #0x1
    36f8:	ldr	x3, [sp, #48]
    36fc:	str	x4, [x3, #24]
    3700:	add	x0, x2, x0
    3704:	ldrb	w0, [x0]
    3708:	add	w1, w1, w0
    370c:	ldr	x0, [sp, #48]
    3710:	str	w1, [x0, #4]
    3714:	nop
    3718:	ldr	x0, [sp, #64]
    371c:	ldr	w0, [x0]
    3720:	lsr	w0, w0, #11
    3724:	ldr	x1, [sp, #56]
    3728:	ldrh	w1, [x1]
    372c:	mul	w0, w0, w1
    3730:	str	w0, [sp, #44]
    3734:	ldr	x0, [sp, #64]
    3738:	ldr	w0, [x0, #4]
    373c:	ldr	w1, [sp, #44]
    3740:	cmp	w1, w0
    3744:	b.ls	3790 <xz_dec_bcj_reset+0x1b9c>  // b.plast
    3748:	ldr	x0, [sp, #64]
    374c:	ldr	w1, [sp, #44]
    3750:	str	w1, [x0]
    3754:	ldr	x0, [sp, #56]
    3758:	ldrh	w1, [x0]
    375c:	ldr	x0, [sp, #56]
    3760:	ldrh	w0, [x0]
    3764:	mov	w2, w0
    3768:	mov	w0, #0x800                 	// #2048
    376c:	sub	w0, w0, w2
    3770:	asr	w0, w0, #5
    3774:	and	w0, w0, #0xffff
    3778:	add	w0, w1, w0
    377c:	and	w1, w0, #0xffff
    3780:	ldr	x0, [sp, #56]
    3784:	strh	w1, [x0]
    3788:	str	wzr, [sp, #40]
    378c:	b	37f0 <xz_dec_bcj_reset+0x1bfc>
    3790:	ldr	x0, [sp, #64]
    3794:	ldr	w1, [x0]
    3798:	ldr	w0, [sp, #44]
    379c:	sub	w1, w1, w0
    37a0:	ldr	x0, [sp, #64]
    37a4:	str	w1, [x0]
    37a8:	ldr	x0, [sp, #64]
    37ac:	ldr	w1, [x0, #4]
    37b0:	ldr	w0, [sp, #44]
    37b4:	sub	w1, w1, w0
    37b8:	ldr	x0, [sp, #64]
    37bc:	str	w1, [x0, #4]
    37c0:	ldr	x0, [sp, #56]
    37c4:	ldrh	w1, [x0]
    37c8:	ldr	x0, [sp, #56]
    37cc:	ldrh	w0, [x0]
    37d0:	lsr	w0, w0, #5
    37d4:	and	w0, w0, #0xffff
    37d8:	sub	w0, w1, w0
    37dc:	and	w1, w0, #0xffff
    37e0:	ldr	x0, [sp, #56]
    37e4:	strh	w1, [x0]
    37e8:	mov	w0, #0x1                   	// #1
    37ec:	str	w0, [sp, #40]
    37f0:	ldr	w0, [sp, #40]
    37f4:	cmp	w0, #0x0
    37f8:	b.eq	3830 <xz_dec_bcj_reset+0x1c3c>  // b.none
    37fc:	ldr	w0, [sp, #80]
    3800:	lsl	w0, w0, #1
    3804:	add	w0, w0, #0x1
    3808:	str	w0, [sp, #80]
    380c:	ldr	x0, [sp, #88]
    3810:	ldr	w0, [x0]
    3814:	ldr	w1, [sp, #76]
    3818:	mov	w2, #0x1                   	// #1
    381c:	lsl	w1, w2, w1
    3820:	add	w1, w0, w1
    3824:	ldr	x0, [sp, #88]
    3828:	str	w1, [x0]
    382c:	b	383c <xz_dec_bcj_reset+0x1c48>
    3830:	ldr	w0, [sp, #80]
    3834:	lsl	w0, w0, #1
    3838:	str	w0, [sp, #80]
    383c:	ldr	w0, [sp, #76]
    3840:	add	w0, w0, #0x1
    3844:	str	w0, [sp, #76]
    3848:	ldr	w1, [sp, #84]
    384c:	ldr	w0, [sp, #76]
    3850:	cmp	w1, w0
    3854:	b.hi	368c <xz_dec_bcj_reset+0x1a98>  // b.pmore
    3858:	nop
    385c:	nop
    3860:	ldp	x29, x30, [sp], #256
    3864:	ret
    3868:	stp	x29, x30, [sp, #-176]!
    386c:	mov	x29, sp
    3870:	str	x0, [sp, #24]
    3874:	str	w1, [sp, #20]
    3878:	ldr	x0, [sp, #24]
    387c:	add	x1, x0, #0x98
    3880:	ldr	x0, [sp, #24]
    3884:	ldr	w0, [x0, #204]
    3888:	mov	w0, w0
    388c:	add	x0, x0, #0x138
    3890:	lsl	x0, x0, #1
    3894:	ldr	x2, [sp, #24]
    3898:	add	x0, x2, x0
    389c:	add	x0, x0, #0xc
    38a0:	str	x1, [sp, #160]
    38a4:	str	x0, [sp, #152]
    38a8:	ldr	x0, [sp, #160]
    38ac:	str	x0, [sp, #144]
    38b0:	ldr	x0, [sp, #144]
    38b4:	ldr	w1, [x0]
    38b8:	mov	w0, #0xffffff              	// #16777215
    38bc:	cmp	w1, w0
    38c0:	b.hi	3914 <xz_dec_bcj_reset+0x1d20>  // b.pmore
    38c4:	ldr	x0, [sp, #144]
    38c8:	ldr	w0, [x0]
    38cc:	lsl	w1, w0, #8
    38d0:	ldr	x0, [sp, #144]
    38d4:	str	w1, [x0]
    38d8:	ldr	x0, [sp, #144]
    38dc:	ldr	w0, [x0, #4]
    38e0:	lsl	w1, w0, #8
    38e4:	ldr	x0, [sp, #144]
    38e8:	ldr	x2, [x0, #16]
    38ec:	ldr	x0, [sp, #144]
    38f0:	ldr	x0, [x0, #24]
    38f4:	add	x4, x0, #0x1
    38f8:	ldr	x3, [sp, #144]
    38fc:	str	x4, [x3, #24]
    3900:	add	x0, x2, x0
    3904:	ldrb	w0, [x0]
    3908:	add	w1, w1, w0
    390c:	ldr	x0, [sp, #144]
    3910:	str	w1, [x0, #4]
    3914:	nop
    3918:	ldr	x0, [sp, #160]
    391c:	ldr	w0, [x0]
    3920:	lsr	w0, w0, #11
    3924:	ldr	x1, [sp, #152]
    3928:	ldrh	w1, [x1]
    392c:	mul	w0, w0, w1
    3930:	str	w0, [sp, #140]
    3934:	ldr	x0, [sp, #160]
    3938:	ldr	w0, [x0, #4]
    393c:	ldr	w1, [sp, #140]
    3940:	cmp	w1, w0
    3944:	b.ls	3990 <xz_dec_bcj_reset+0x1d9c>  // b.plast
    3948:	ldr	x0, [sp, #160]
    394c:	ldr	w1, [sp, #140]
    3950:	str	w1, [x0]
    3954:	ldr	x0, [sp, #152]
    3958:	ldrh	w1, [x0]
    395c:	ldr	x0, [sp, #152]
    3960:	ldrh	w0, [x0]
    3964:	mov	w2, w0
    3968:	mov	w0, #0x800                 	// #2048
    396c:	sub	w0, w0, w2
    3970:	asr	w0, w0, #5
    3974:	and	w0, w0, #0xffff
    3978:	add	w0, w1, w0
    397c:	and	w1, w0, #0xffff
    3980:	ldr	x0, [sp, #152]
    3984:	strh	w1, [x0]
    3988:	str	wzr, [sp, #136]
    398c:	b	39f0 <xz_dec_bcj_reset+0x1dfc>
    3990:	ldr	x0, [sp, #160]
    3994:	ldr	w1, [x0]
    3998:	ldr	w0, [sp, #140]
    399c:	sub	w1, w1, w0
    39a0:	ldr	x0, [sp, #160]
    39a4:	str	w1, [x0]
    39a8:	ldr	x0, [sp, #160]
    39ac:	ldr	w1, [x0, #4]
    39b0:	ldr	w0, [sp, #140]
    39b4:	sub	w1, w1, w0
    39b8:	ldr	x0, [sp, #160]
    39bc:	str	w1, [x0, #4]
    39c0:	ldr	x0, [sp, #152]
    39c4:	ldrh	w1, [x0]
    39c8:	ldr	x0, [sp, #152]
    39cc:	ldrh	w0, [x0]
    39d0:	lsr	w0, w0, #5
    39d4:	and	w0, w0, #0xffff
    39d8:	sub	w0, w1, w0
    39dc:	and	w1, w0, #0xffff
    39e0:	ldr	x0, [sp, #152]
    39e4:	strh	w1, [x0]
    39e8:	mov	w0, #0x1                   	// #1
    39ec:	str	w0, [sp, #136]
    39f0:	ldr	w0, [sp, #136]
    39f4:	cmp	w0, #0x0
    39f8:	b.ne	3ba8 <xz_dec_bcj_reset+0x1fb4>  // b.any
    39fc:	ldr	x0, [sp, #24]
    3a00:	add	x1, x0, #0x98
    3a04:	ldr	x0, [sp, #24]
    3a08:	ldr	w0, [x0, #204]
    3a0c:	ldr	w2, [sp, #20]
    3a10:	mov	w0, w0
    3a14:	lsl	x0, x0, #4
    3a18:	add	x0, x2, x0
    3a1c:	add	x0, x0, #0x160
    3a20:	lsl	x0, x0, #1
    3a24:	ldr	x2, [sp, #24]
    3a28:	add	x0, x2, x0
    3a2c:	add	x0, x0, #0x4
    3a30:	str	x1, [sp, #128]
    3a34:	str	x0, [sp, #120]
    3a38:	ldr	x0, [sp, #128]
    3a3c:	str	x0, [sp, #112]
    3a40:	ldr	x0, [sp, #112]
    3a44:	ldr	w1, [x0]
    3a48:	mov	w0, #0xffffff              	// #16777215
    3a4c:	cmp	w1, w0
    3a50:	b.hi	3aa4 <xz_dec_bcj_reset+0x1eb0>  // b.pmore
    3a54:	ldr	x0, [sp, #112]
    3a58:	ldr	w0, [x0]
    3a5c:	lsl	w1, w0, #8
    3a60:	ldr	x0, [sp, #112]
    3a64:	str	w1, [x0]
    3a68:	ldr	x0, [sp, #112]
    3a6c:	ldr	w0, [x0, #4]
    3a70:	lsl	w1, w0, #8
    3a74:	ldr	x0, [sp, #112]
    3a78:	ldr	x2, [x0, #16]
    3a7c:	ldr	x0, [sp, #112]
    3a80:	ldr	x0, [x0, #24]
    3a84:	add	x4, x0, #0x1
    3a88:	ldr	x3, [sp, #112]
    3a8c:	str	x4, [x3, #24]
    3a90:	add	x0, x2, x0
    3a94:	ldrb	w0, [x0]
    3a98:	add	w1, w1, w0
    3a9c:	ldr	x0, [sp, #112]
    3aa0:	str	w1, [x0, #4]
    3aa4:	nop
    3aa8:	ldr	x0, [sp, #128]
    3aac:	ldr	w0, [x0]
    3ab0:	lsr	w0, w0, #11
    3ab4:	ldr	x1, [sp, #120]
    3ab8:	ldrh	w1, [x1]
    3abc:	mul	w0, w0, w1
    3ac0:	str	w0, [sp, #108]
    3ac4:	ldr	x0, [sp, #128]
    3ac8:	ldr	w0, [x0, #4]
    3acc:	ldr	w1, [sp, #108]
    3ad0:	cmp	w1, w0
    3ad4:	b.ls	3b20 <xz_dec_bcj_reset+0x1f2c>  // b.plast
    3ad8:	ldr	x0, [sp, #128]
    3adc:	ldr	w1, [sp, #108]
    3ae0:	str	w1, [x0]
    3ae4:	ldr	x0, [sp, #120]
    3ae8:	ldrh	w1, [x0]
    3aec:	ldr	x0, [sp, #120]
    3af0:	ldrh	w0, [x0]
    3af4:	mov	w2, w0
    3af8:	mov	w0, #0x800                 	// #2048
    3afc:	sub	w0, w0, w2
    3b00:	asr	w0, w0, #5
    3b04:	and	w0, w0, #0xffff
    3b08:	add	w0, w1, w0
    3b0c:	and	w1, w0, #0xffff
    3b10:	ldr	x0, [sp, #120]
    3b14:	strh	w1, [x0]
    3b18:	str	wzr, [sp, #104]
    3b1c:	b	3b80 <xz_dec_bcj_reset+0x1f8c>
    3b20:	ldr	x0, [sp, #128]
    3b24:	ldr	w1, [x0]
    3b28:	ldr	w0, [sp, #108]
    3b2c:	sub	w1, w1, w0
    3b30:	ldr	x0, [sp, #128]
    3b34:	str	w1, [x0]
    3b38:	ldr	x0, [sp, #128]
    3b3c:	ldr	w1, [x0, #4]
    3b40:	ldr	w0, [sp, #108]
    3b44:	sub	w1, w1, w0
    3b48:	ldr	x0, [sp, #128]
    3b4c:	str	w1, [x0, #4]
    3b50:	ldr	x0, [sp, #120]
    3b54:	ldrh	w1, [x0]
    3b58:	ldr	x0, [sp, #120]
    3b5c:	ldrh	w0, [x0]
    3b60:	lsr	w0, w0, #5
    3b64:	and	w0, w0, #0xffff
    3b68:	sub	w0, w1, w0
    3b6c:	and	w1, w0, #0xffff
    3b70:	ldr	x0, [sp, #120]
    3b74:	strh	w1, [x0]
    3b78:	mov	w0, #0x1                   	// #1
    3b7c:	str	w0, [sp, #104]
    3b80:	ldr	w0, [sp, #104]
    3b84:	cmp	w0, #0x0
    3b88:	b.ne	3f18 <xz_dec_bcj_reset+0x2324>  // b.any
    3b8c:	ldr	x0, [sp, #24]
    3b90:	add	x0, x0, #0xcc
    3b94:	bl	1dc4 <xz_dec_bcj_reset+0x1d0>
    3b98:	ldr	x0, [sp, #24]
    3b9c:	mov	w1, #0x1                   	// #1
    3ba0:	str	w1, [x0, #224]
    3ba4:	b	3f3c <xz_dec_bcj_reset+0x2348>
    3ba8:	ldr	x0, [sp, #24]
    3bac:	add	x1, x0, #0x98
    3bb0:	ldr	x0, [sp, #24]
    3bb4:	ldr	w0, [x0, #204]
    3bb8:	mov	w0, w0
    3bbc:	add	x0, x0, #0x148
    3bc0:	lsl	x0, x0, #1
    3bc4:	ldr	x2, [sp, #24]
    3bc8:	add	x0, x2, x0
    3bcc:	add	x0, x0, #0x4
    3bd0:	str	x1, [sp, #96]
    3bd4:	str	x0, [sp, #88]
    3bd8:	ldr	x0, [sp, #96]
    3bdc:	str	x0, [sp, #80]
    3be0:	ldr	x0, [sp, #80]
    3be4:	ldr	w1, [x0]
    3be8:	mov	w0, #0xffffff              	// #16777215
    3bec:	cmp	w1, w0
    3bf0:	b.hi	3c44 <xz_dec_bcj_reset+0x2050>  // b.pmore
    3bf4:	ldr	x0, [sp, #80]
    3bf8:	ldr	w0, [x0]
    3bfc:	lsl	w1, w0, #8
    3c00:	ldr	x0, [sp, #80]
    3c04:	str	w1, [x0]
    3c08:	ldr	x0, [sp, #80]
    3c0c:	ldr	w0, [x0, #4]
    3c10:	lsl	w1, w0, #8
    3c14:	ldr	x0, [sp, #80]
    3c18:	ldr	x2, [x0, #16]
    3c1c:	ldr	x0, [sp, #80]
    3c20:	ldr	x0, [x0, #24]
    3c24:	add	x4, x0, #0x1
    3c28:	ldr	x3, [sp, #80]
    3c2c:	str	x4, [x3, #24]
    3c30:	add	x0, x2, x0
    3c34:	ldrb	w0, [x0]
    3c38:	add	w1, w1, w0
    3c3c:	ldr	x0, [sp, #80]
    3c40:	str	w1, [x0, #4]
    3c44:	nop
    3c48:	ldr	x0, [sp, #96]
    3c4c:	ldr	w0, [x0]
    3c50:	lsr	w0, w0, #11
    3c54:	ldr	x1, [sp, #88]
    3c58:	ldrh	w1, [x1]
    3c5c:	mul	w0, w0, w1
    3c60:	str	w0, [sp, #76]
    3c64:	ldr	x0, [sp, #96]
    3c68:	ldr	w0, [x0, #4]
    3c6c:	ldr	w1, [sp, #76]
    3c70:	cmp	w1, w0
    3c74:	b.ls	3cc0 <xz_dec_bcj_reset+0x20cc>  // b.plast
    3c78:	ldr	x0, [sp, #96]
    3c7c:	ldr	w1, [sp, #76]
    3c80:	str	w1, [x0]
    3c84:	ldr	x0, [sp, #88]
    3c88:	ldrh	w1, [x0]
    3c8c:	ldr	x0, [sp, #88]
    3c90:	ldrh	w0, [x0]
    3c94:	mov	w2, w0
    3c98:	mov	w0, #0x800                 	// #2048
    3c9c:	sub	w0, w0, w2
    3ca0:	asr	w0, w0, #5
    3ca4:	and	w0, w0, #0xffff
    3ca8:	add	w0, w1, w0
    3cac:	and	w1, w0, #0xffff
    3cb0:	ldr	x0, [sp, #88]
    3cb4:	strh	w1, [x0]
    3cb8:	str	wzr, [sp, #72]
    3cbc:	b	3d20 <xz_dec_bcj_reset+0x212c>
    3cc0:	ldr	x0, [sp, #96]
    3cc4:	ldr	w1, [x0]
    3cc8:	ldr	w0, [sp, #76]
    3ccc:	sub	w1, w1, w0
    3cd0:	ldr	x0, [sp, #96]
    3cd4:	str	w1, [x0]
    3cd8:	ldr	x0, [sp, #96]
    3cdc:	ldr	w1, [x0, #4]
    3ce0:	ldr	w0, [sp, #76]
    3ce4:	sub	w1, w1, w0
    3ce8:	ldr	x0, [sp, #96]
    3cec:	str	w1, [x0, #4]
    3cf0:	ldr	x0, [sp, #88]
    3cf4:	ldrh	w1, [x0]
    3cf8:	ldr	x0, [sp, #88]
    3cfc:	ldrh	w0, [x0]
    3d00:	lsr	w0, w0, #5
    3d04:	and	w0, w0, #0xffff
    3d08:	sub	w0, w1, w0
    3d0c:	and	w1, w0, #0xffff
    3d10:	ldr	x0, [sp, #88]
    3d14:	strh	w1, [x0]
    3d18:	mov	w0, #0x1                   	// #1
    3d1c:	str	w0, [sp, #72]
    3d20:	ldr	w0, [sp, #72]
    3d24:	cmp	w0, #0x0
    3d28:	b.ne	3d3c <xz_dec_bcj_reset+0x2148>  // b.any
    3d2c:	ldr	x0, [sp, #24]
    3d30:	ldr	w0, [x0, #212]
    3d34:	str	w0, [sp, #172]
    3d38:	b	3efc <xz_dec_bcj_reset+0x2308>
    3d3c:	ldr	x0, [sp, #24]
    3d40:	add	x1, x0, #0x98
    3d44:	ldr	x0, [sp, #24]
    3d48:	ldr	w0, [x0, #204]
    3d4c:	mov	w0, w0
    3d50:	add	x0, x0, #0x150
    3d54:	lsl	x0, x0, #1
    3d58:	ldr	x2, [sp, #24]
    3d5c:	add	x0, x2, x0
    3d60:	add	x0, x0, #0xc
    3d64:	str	x1, [sp, #64]
    3d68:	str	x0, [sp, #56]
    3d6c:	ldr	x0, [sp, #64]
    3d70:	str	x0, [sp, #48]
    3d74:	ldr	x0, [sp, #48]
    3d78:	ldr	w1, [x0]
    3d7c:	mov	w0, #0xffffff              	// #16777215
    3d80:	cmp	w1, w0
    3d84:	b.hi	3dd8 <xz_dec_bcj_reset+0x21e4>  // b.pmore
    3d88:	ldr	x0, [sp, #48]
    3d8c:	ldr	w0, [x0]
    3d90:	lsl	w1, w0, #8
    3d94:	ldr	x0, [sp, #48]
    3d98:	str	w1, [x0]
    3d9c:	ldr	x0, [sp, #48]
    3da0:	ldr	w0, [x0, #4]
    3da4:	lsl	w1, w0, #8
    3da8:	ldr	x0, [sp, #48]
    3dac:	ldr	x2, [x0, #16]
    3db0:	ldr	x0, [sp, #48]
    3db4:	ldr	x0, [x0, #24]
    3db8:	add	x4, x0, #0x1
    3dbc:	ldr	x3, [sp, #48]
    3dc0:	str	x4, [x3, #24]
    3dc4:	add	x0, x2, x0
    3dc8:	ldrb	w0, [x0]
    3dcc:	add	w1, w1, w0
    3dd0:	ldr	x0, [sp, #48]
    3dd4:	str	w1, [x0, #4]
    3dd8:	nop
    3ddc:	ldr	x0, [sp, #64]
    3de0:	ldr	w0, [x0]
    3de4:	lsr	w0, w0, #11
    3de8:	ldr	x1, [sp, #56]
    3dec:	ldrh	w1, [x1]
    3df0:	mul	w0, w0, w1
    3df4:	str	w0, [sp, #44]
    3df8:	ldr	x0, [sp, #64]
    3dfc:	ldr	w0, [x0, #4]
    3e00:	ldr	w1, [sp, #44]
    3e04:	cmp	w1, w0
    3e08:	b.ls	3e54 <xz_dec_bcj_reset+0x2260>  // b.plast
    3e0c:	ldr	x0, [sp, #64]
    3e10:	ldr	w1, [sp, #44]
    3e14:	str	w1, [x0]
    3e18:	ldr	x0, [sp, #56]
    3e1c:	ldrh	w1, [x0]
    3e20:	ldr	x0, [sp, #56]
    3e24:	ldrh	w0, [x0]
    3e28:	mov	w2, w0
    3e2c:	mov	w0, #0x800                 	// #2048
    3e30:	sub	w0, w0, w2
    3e34:	asr	w0, w0, #5
    3e38:	and	w0, w0, #0xffff
    3e3c:	add	w0, w1, w0
    3e40:	and	w1, w0, #0xffff
    3e44:	ldr	x0, [sp, #56]
    3e48:	strh	w1, [x0]
    3e4c:	str	wzr, [sp, #40]
    3e50:	b	3eb4 <xz_dec_bcj_reset+0x22c0>
    3e54:	ldr	x0, [sp, #64]
    3e58:	ldr	w1, [x0]
    3e5c:	ldr	w0, [sp, #44]
    3e60:	sub	w1, w1, w0
    3e64:	ldr	x0, [sp, #64]
    3e68:	str	w1, [x0]
    3e6c:	ldr	x0, [sp, #64]
    3e70:	ldr	w1, [x0, #4]
    3e74:	ldr	w0, [sp, #44]
    3e78:	sub	w1, w1, w0
    3e7c:	ldr	x0, [sp, #64]
    3e80:	str	w1, [x0, #4]
    3e84:	ldr	x0, [sp, #56]
    3e88:	ldrh	w1, [x0]
    3e8c:	ldr	x0, [sp, #56]
    3e90:	ldrh	w0, [x0]
    3e94:	lsr	w0, w0, #5
    3e98:	and	w0, w0, #0xffff
    3e9c:	sub	w0, w1, w0
    3ea0:	and	w1, w0, #0xffff
    3ea4:	ldr	x0, [sp, #56]
    3ea8:	strh	w1, [x0]
    3eac:	mov	w0, #0x1                   	// #1
    3eb0:	str	w0, [sp, #40]
    3eb4:	ldr	w0, [sp, #40]
    3eb8:	cmp	w0, #0x0
    3ebc:	b.ne	3ed0 <xz_dec_bcj_reset+0x22dc>  // b.any
    3ec0:	ldr	x0, [sp, #24]
    3ec4:	ldr	w0, [x0, #216]
    3ec8:	str	w0, [sp, #172]
    3ecc:	b	3eec <xz_dec_bcj_reset+0x22f8>
    3ed0:	ldr	x0, [sp, #24]
    3ed4:	ldr	w0, [x0, #220]
    3ed8:	str	w0, [sp, #172]
    3edc:	ldr	x0, [sp, #24]
    3ee0:	ldr	w1, [x0, #216]
    3ee4:	ldr	x0, [sp, #24]
    3ee8:	str	w1, [x0, #220]
    3eec:	ldr	x0, [sp, #24]
    3ef0:	ldr	w1, [x0, #212]
    3ef4:	ldr	x0, [sp, #24]
    3ef8:	str	w1, [x0, #216]
    3efc:	ldr	x0, [sp, #24]
    3f00:	ldr	w1, [x0, #208]
    3f04:	ldr	x0, [sp, #24]
    3f08:	str	w1, [x0, #212]
    3f0c:	ldr	x0, [sp, #24]
    3f10:	ldr	w1, [sp, #172]
    3f14:	str	w1, [x0, #208]
    3f18:	ldr	x0, [sp, #24]
    3f1c:	add	x0, x0, #0xcc
    3f20:	bl	1d8c <xz_dec_bcj_reset+0x198>
    3f24:	ldr	x0, [sp, #24]
    3f28:	add	x0, x0, #0xb4c
    3f2c:	ldr	w2, [sp, #20]
    3f30:	mov	x1, x0
    3f34:	ldr	x0, [sp, #24]
    3f38:	bl	2bd0 <xz_dec_bcj_reset+0xfdc>
    3f3c:	ldp	x29, x30, [sp], #176
    3f40:	ret
    3f44:	stp	x29, x30, [sp, #-112]!
    3f48:	mov	x29, sp
    3f4c:	str	x0, [sp, #24]
    3f50:	ldr	x0, [sp, #24]
    3f54:	add	x0, x0, #0x60
    3f58:	bl	1f28 <xz_dec_bcj_reset+0x334>
    3f5c:	cmp	w0, #0x0
    3f60:	b.eq	4328 <xz_dec_bcj_reset+0x2734>  // b.none
    3f64:	ldr	x0, [sp, #24]
    3f68:	ldr	w0, [x0, #224]
    3f6c:	cmp	w0, #0x0
    3f70:	b.eq	4328 <xz_dec_bcj_reset+0x2734>  // b.none
    3f74:	ldr	x0, [sp, #24]
    3f78:	add	x3, x0, #0x60
    3f7c:	ldr	x0, [sp, #24]
    3f80:	add	x1, x0, #0xe0
    3f84:	ldr	x0, [sp, #24]
    3f88:	ldr	w0, [x0, #208]
    3f8c:	mov	w2, w0
    3f90:	mov	x0, x3
    3f94:	bl	203c <xz_dec_bcj_reset+0x448>
    3f98:	b	4328 <xz_dec_bcj_reset+0x2734>
    3f9c:	ldr	x0, [sp, #24]
    3fa0:	ldr	x0, [x0, #112]
    3fa4:	mov	w1, w0
    3fa8:	ldr	x0, [sp, #24]
    3fac:	ldr	w0, [x0, #200]
    3fb0:	and	w0, w1, w0
    3fb4:	str	w0, [sp, #108]
    3fb8:	ldr	x0, [sp, #24]
    3fbc:	add	x1, x0, #0x98
    3fc0:	ldr	x0, [sp, #24]
    3fc4:	ldr	w0, [x0, #204]
    3fc8:	ldr	w2, [sp, #108]
    3fcc:	mov	w0, w0
    3fd0:	lsl	x0, x0, #4
    3fd4:	add	x0, x2, x0
    3fd8:	add	x0, x0, #0x70
    3fdc:	lsl	x0, x0, #1
    3fe0:	ldr	x2, [sp, #24]
    3fe4:	add	x0, x2, x0
    3fe8:	add	x0, x0, #0x4
    3fec:	str	x1, [sp, #96]
    3ff0:	str	x0, [sp, #88]
    3ff4:	ldr	x0, [sp, #96]
    3ff8:	str	x0, [sp, #80]
    3ffc:	ldr	x0, [sp, #80]
    4000:	ldr	w1, [x0]
    4004:	mov	w0, #0xffffff              	// #16777215
    4008:	cmp	w1, w0
    400c:	b.hi	4060 <xz_dec_bcj_reset+0x246c>  // b.pmore
    4010:	ldr	x0, [sp, #80]
    4014:	ldr	w0, [x0]
    4018:	lsl	w1, w0, #8
    401c:	ldr	x0, [sp, #80]
    4020:	str	w1, [x0]
    4024:	ldr	x0, [sp, #80]
    4028:	ldr	w0, [x0, #4]
    402c:	lsl	w1, w0, #8
    4030:	ldr	x0, [sp, #80]
    4034:	ldr	x2, [x0, #16]
    4038:	ldr	x0, [sp, #80]
    403c:	ldr	x0, [x0, #24]
    4040:	add	x4, x0, #0x1
    4044:	ldr	x3, [sp, #80]
    4048:	str	x4, [x3, #24]
    404c:	add	x0, x2, x0
    4050:	ldrb	w0, [x0]
    4054:	add	w1, w1, w0
    4058:	ldr	x0, [sp, #80]
    405c:	str	w1, [x0, #4]
    4060:	nop
    4064:	ldr	x0, [sp, #96]
    4068:	ldr	w0, [x0]
    406c:	lsr	w0, w0, #11
    4070:	ldr	x1, [sp, #88]
    4074:	ldrh	w1, [x1]
    4078:	mul	w0, w0, w1
    407c:	str	w0, [sp, #76]
    4080:	ldr	x0, [sp, #96]
    4084:	ldr	w0, [x0, #4]
    4088:	ldr	w1, [sp, #76]
    408c:	cmp	w1, w0
    4090:	b.ls	40dc <xz_dec_bcj_reset+0x24e8>  // b.plast
    4094:	ldr	x0, [sp, #96]
    4098:	ldr	w1, [sp, #76]
    409c:	str	w1, [x0]
    40a0:	ldr	x0, [sp, #88]
    40a4:	ldrh	w1, [x0]
    40a8:	ldr	x0, [sp, #88]
    40ac:	ldrh	w0, [x0]
    40b0:	mov	w2, w0
    40b4:	mov	w0, #0x800                 	// #2048
    40b8:	sub	w0, w0, w2
    40bc:	asr	w0, w0, #5
    40c0:	and	w0, w0, #0xffff
    40c4:	add	w0, w1, w0
    40c8:	and	w1, w0, #0xffff
    40cc:	ldr	x0, [sp, #88]
    40d0:	strh	w1, [x0]
    40d4:	str	wzr, [sp, #72]
    40d8:	b	413c <xz_dec_bcj_reset+0x2548>
    40dc:	ldr	x0, [sp, #96]
    40e0:	ldr	w1, [x0]
    40e4:	ldr	w0, [sp, #76]
    40e8:	sub	w1, w1, w0
    40ec:	ldr	x0, [sp, #96]
    40f0:	str	w1, [x0]
    40f4:	ldr	x0, [sp, #96]
    40f8:	ldr	w1, [x0, #4]
    40fc:	ldr	w0, [sp, #76]
    4100:	sub	w1, w1, w0
    4104:	ldr	x0, [sp, #96]
    4108:	str	w1, [x0, #4]
    410c:	ldr	x0, [sp, #88]
    4110:	ldrh	w1, [x0]
    4114:	ldr	x0, [sp, #88]
    4118:	ldrh	w0, [x0]
    411c:	lsr	w0, w0, #5
    4120:	and	w0, w0, #0xffff
    4124:	sub	w0, w1, w0
    4128:	and	w1, w0, #0xffff
    412c:	ldr	x0, [sp, #88]
    4130:	strh	w1, [x0]
    4134:	mov	w0, #0x1                   	// #1
    4138:	str	w0, [sp, #72]
    413c:	ldr	w0, [sp, #72]
    4140:	cmp	w0, #0x0
    4144:	b.ne	4154 <xz_dec_bcj_reset+0x2560>  // b.any
    4148:	ldr	x0, [sp, #24]
    414c:	bl	277c <xz_dec_bcj_reset+0xb88>
    4150:	b	4328 <xz_dec_bcj_reset+0x2734>
    4154:	ldr	x0, [sp, #24]
    4158:	add	x1, x0, #0x98
    415c:	ldr	x0, [sp, #24]
    4160:	ldr	w0, [x0, #204]
    4164:	mov	w0, w0
    4168:	add	x0, x0, #0x130
    416c:	lsl	x0, x0, #1
    4170:	ldr	x2, [sp, #24]
    4174:	add	x0, x2, x0
    4178:	add	x0, x0, #0x4
    417c:	str	x1, [sp, #64]
    4180:	str	x0, [sp, #56]
    4184:	ldr	x0, [sp, #64]
    4188:	str	x0, [sp, #48]
    418c:	ldr	x0, [sp, #48]
    4190:	ldr	w1, [x0]
    4194:	mov	w0, #0xffffff              	// #16777215
    4198:	cmp	w1, w0
    419c:	b.hi	41f0 <xz_dec_bcj_reset+0x25fc>  // b.pmore
    41a0:	ldr	x0, [sp, #48]
    41a4:	ldr	w0, [x0]
    41a8:	lsl	w1, w0, #8
    41ac:	ldr	x0, [sp, #48]
    41b0:	str	w1, [x0]
    41b4:	ldr	x0, [sp, #48]
    41b8:	ldr	w0, [x0, #4]
    41bc:	lsl	w1, w0, #8
    41c0:	ldr	x0, [sp, #48]
    41c4:	ldr	x2, [x0, #16]
    41c8:	ldr	x0, [sp, #48]
    41cc:	ldr	x0, [x0, #24]
    41d0:	add	x4, x0, #0x1
    41d4:	ldr	x3, [sp, #48]
    41d8:	str	x4, [x3, #24]
    41dc:	add	x0, x2, x0
    41e0:	ldrb	w0, [x0]
    41e4:	add	w1, w1, w0
    41e8:	ldr	x0, [sp, #48]
    41ec:	str	w1, [x0, #4]
    41f0:	nop
    41f4:	ldr	x0, [sp, #64]
    41f8:	ldr	w0, [x0]
    41fc:	lsr	w0, w0, #11
    4200:	ldr	x1, [sp, #56]
    4204:	ldrh	w1, [x1]
    4208:	mul	w0, w0, w1
    420c:	str	w0, [sp, #44]
    4210:	ldr	x0, [sp, #64]
    4214:	ldr	w0, [x0, #4]
    4218:	ldr	w1, [sp, #44]
    421c:	cmp	w1, w0
    4220:	b.ls	426c <xz_dec_bcj_reset+0x2678>  // b.plast
    4224:	ldr	x0, [sp, #64]
    4228:	ldr	w1, [sp, #44]
    422c:	str	w1, [x0]
    4230:	ldr	x0, [sp, #56]
    4234:	ldrh	w1, [x0]
    4238:	ldr	x0, [sp, #56]
    423c:	ldrh	w0, [x0]
    4240:	mov	w2, w0
    4244:	mov	w0, #0x800                 	// #2048
    4248:	sub	w0, w0, w2
    424c:	asr	w0, w0, #5
    4250:	and	w0, w0, #0xffff
    4254:	add	w0, w1, w0
    4258:	and	w1, w0, #0xffff
    425c:	ldr	x0, [sp, #56]
    4260:	strh	w1, [x0]
    4264:	str	wzr, [sp, #40]
    4268:	b	42cc <xz_dec_bcj_reset+0x26d8>
    426c:	ldr	x0, [sp, #64]
    4270:	ldr	w1, [x0]
    4274:	ldr	w0, [sp, #44]
    4278:	sub	w1, w1, w0
    427c:	ldr	x0, [sp, #64]
    4280:	str	w1, [x0]
    4284:	ldr	x0, [sp, #64]
    4288:	ldr	w1, [x0, #4]
    428c:	ldr	w0, [sp, #44]
    4290:	sub	w1, w1, w0
    4294:	ldr	x0, [sp, #64]
    4298:	str	w1, [x0, #4]
    429c:	ldr	x0, [sp, #56]
    42a0:	ldrh	w1, [x0]
    42a4:	ldr	x0, [sp, #56]
    42a8:	ldrh	w0, [x0]
    42ac:	lsr	w0, w0, #5
    42b0:	and	w0, w0, #0xffff
    42b4:	sub	w0, w1, w0
    42b8:	and	w1, w0, #0xffff
    42bc:	ldr	x0, [sp, #56]
    42c0:	strh	w1, [x0]
    42c4:	mov	w0, #0x1                   	// #1
    42c8:	str	w0, [sp, #40]
    42cc:	ldr	w0, [sp, #40]
    42d0:	cmp	w0, #0x0
    42d4:	b.eq	42e8 <xz_dec_bcj_reset+0x26f4>  // b.none
    42d8:	ldr	w1, [sp, #108]
    42dc:	ldr	x0, [sp, #24]
    42e0:	bl	3868 <xz_dec_bcj_reset+0x1c74>
    42e4:	b	42f4 <xz_dec_bcj_reset+0x2700>
    42e8:	ldr	w1, [sp, #108]
    42ec:	ldr	x0, [sp, #24]
    42f0:	bl	3128 <xz_dec_bcj_reset+0x1534>
    42f4:	ldr	x0, [sp, #24]
    42f8:	add	x3, x0, #0x60
    42fc:	ldr	x0, [sp, #24]
    4300:	add	x1, x0, #0xe0
    4304:	ldr	x0, [sp, #24]
    4308:	ldr	w0, [x0, #208]
    430c:	mov	w2, w0
    4310:	mov	x0, x3
    4314:	bl	203c <xz_dec_bcj_reset+0x448>
    4318:	cmp	w0, #0x0
    431c:	b.ne	4328 <xz_dec_bcj_reset+0x2734>  // b.any
    4320:	mov	w0, #0x0                   	// #0
    4324:	b	43c8 <xz_dec_bcj_reset+0x27d4>
    4328:	ldr	x0, [sp, #24]
    432c:	add	x0, x0, #0x60
    4330:	bl	1f28 <xz_dec_bcj_reset+0x334>
    4334:	cmp	w0, #0x0
    4338:	b.eq	4350 <xz_dec_bcj_reset+0x275c>  // b.none
    433c:	ldr	x0, [sp, #24]
    4340:	add	x0, x0, #0x98
    4344:	bl	2568 <xz_dec_bcj_reset+0x974>
    4348:	cmp	w0, #0x0
    434c:	b.eq	3f9c <xz_dec_bcj_reset+0x23a8>  // b.none
    4350:	ldr	x0, [sp, #24]
    4354:	add	x0, x0, #0x98
    4358:	str	x0, [sp, #32]
    435c:	ldr	x0, [sp, #32]
    4360:	ldr	w1, [x0]
    4364:	mov	w0, #0xffffff              	// #16777215
    4368:	cmp	w1, w0
    436c:	b.hi	43c0 <xz_dec_bcj_reset+0x27cc>  // b.pmore
    4370:	ldr	x0, [sp, #32]
    4374:	ldr	w0, [x0]
    4378:	lsl	w1, w0, #8
    437c:	ldr	x0, [sp, #32]
    4380:	str	w1, [x0]
    4384:	ldr	x0, [sp, #32]
    4388:	ldr	w0, [x0, #4]
    438c:	lsl	w1, w0, #8
    4390:	ldr	x0, [sp, #32]
    4394:	ldr	x2, [x0, #16]
    4398:	ldr	x0, [sp, #32]
    439c:	ldr	x0, [x0, #24]
    43a0:	add	x4, x0, #0x1
    43a4:	ldr	x3, [sp, #32]
    43a8:	str	x4, [x3, #24]
    43ac:	add	x0, x2, x0
    43b0:	ldrb	w0, [x0]
    43b4:	add	w1, w1, w0
    43b8:	ldr	x0, [sp, #32]
    43bc:	str	w1, [x0, #4]
    43c0:	nop
    43c4:	mov	w0, #0x1                   	// #1
    43c8:	ldp	x29, x30, [sp], #112
    43cc:	ret
    43d0:	stp	x29, x30, [sp, #-48]!
    43d4:	mov	x29, sp
    43d8:	str	x0, [sp, #24]
    43dc:	ldr	x0, [sp, #24]
    43e0:	str	wzr, [x0, #204]
    43e4:	ldr	x0, [sp, #24]
    43e8:	str	wzr, [x0, #208]
    43ec:	ldr	x0, [sp, #24]
    43f0:	str	wzr, [x0, #212]
    43f4:	ldr	x0, [sp, #24]
    43f8:	str	wzr, [x0, #216]
    43fc:	ldr	x0, [sp, #24]
    4400:	str	wzr, [x0, #220]
    4404:	ldr	x0, [sp, #24]
    4408:	add	x0, x0, #0xe4
    440c:	str	x0, [sp, #32]
    4410:	str	xzr, [sp, #40]
    4414:	b	443c <xz_dec_bcj_reset+0x2848>
    4418:	ldr	x0, [sp, #40]
    441c:	lsl	x0, x0, #1
    4420:	ldr	x1, [sp, #32]
    4424:	add	x0, x1, x0
    4428:	mov	w1, #0x400                 	// #1024
    442c:	strh	w1, [x0]
    4430:	ldr	x0, [sp, #40]
    4434:	add	x0, x0, #0x1
    4438:	str	x0, [sp, #40]
    443c:	ldr	x1, [sp, #40]
    4440:	mov	x0, #0x3735                	// #14133
    4444:	cmp	x1, x0
    4448:	b.ls	4418 <xz_dec_bcj_reset+0x2824>  // b.plast
    444c:	ldr	x0, [sp, #24]
    4450:	add	x0, x0, #0x98
    4454:	bl	2498 <xz_dec_bcj_reset+0x8a4>
    4458:	nop
    445c:	ldp	x29, x30, [sp], #48
    4460:	ret
    4464:	stp	x29, x30, [sp, #-32]!
    4468:	mov	x29, sp
    446c:	str	x0, [sp, #24]
    4470:	strb	w1, [sp, #23]
    4474:	ldrb	w0, [sp, #23]
    4478:	cmp	w0, #0xe0
    447c:	b.ls	4488 <xz_dec_bcj_reset+0x2894>  // b.plast
    4480:	mov	w0, #0x0                   	// #0
    4484:	b	4574 <xz_dec_bcj_reset+0x2980>
    4488:	ldr	x0, [sp, #24]
    448c:	str	wzr, [x0, #200]
    4490:	b	44b4 <xz_dec_bcj_reset+0x28c0>
    4494:	ldrb	w0, [sp, #23]
    4498:	sub	w0, w0, #0x2d
    449c:	strb	w0, [sp, #23]
    44a0:	ldr	x0, [sp, #24]
    44a4:	ldr	w0, [x0, #200]
    44a8:	add	w1, w0, #0x1
    44ac:	ldr	x0, [sp, #24]
    44b0:	str	w1, [x0, #200]
    44b4:	ldrb	w0, [sp, #23]
    44b8:	cmp	w0, #0x2c
    44bc:	b.hi	4494 <xz_dec_bcj_reset+0x28a0>  // b.pmore
    44c0:	ldr	x0, [sp, #24]
    44c4:	ldr	w0, [x0, #200]
    44c8:	mov	w1, #0x1                   	// #1
    44cc:	lsl	w0, w1, w0
    44d0:	sub	w0, w0, #0x1
    44d4:	mov	w1, w0
    44d8:	ldr	x0, [sp, #24]
    44dc:	str	w1, [x0, #200]
    44e0:	ldr	x0, [sp, #24]
    44e4:	str	wzr, [x0, #196]
    44e8:	b	450c <xz_dec_bcj_reset+0x2918>
    44ec:	ldrb	w0, [sp, #23]
    44f0:	sub	w0, w0, #0x9
    44f4:	strb	w0, [sp, #23]
    44f8:	ldr	x0, [sp, #24]
    44fc:	ldr	w0, [x0, #196]
    4500:	add	w1, w0, #0x1
    4504:	ldr	x0, [sp, #24]
    4508:	str	w1, [x0, #196]
    450c:	ldrb	w0, [sp, #23]
    4510:	cmp	w0, #0x8
    4514:	b.hi	44ec <xz_dec_bcj_reset+0x28f8>  // b.pmore
    4518:	ldrb	w1, [sp, #23]
    451c:	ldr	x0, [sp, #24]
    4520:	str	w1, [x0, #192]
    4524:	ldr	x0, [sp, #24]
    4528:	ldr	w1, [x0, #192]
    452c:	ldr	x0, [sp, #24]
    4530:	ldr	w0, [x0, #196]
    4534:	add	w0, w1, w0
    4538:	cmp	w0, #0x4
    453c:	b.ls	4548 <xz_dec_bcj_reset+0x2954>  // b.plast
    4540:	mov	w0, #0x0                   	// #0
    4544:	b	4574 <xz_dec_bcj_reset+0x2980>
    4548:	ldr	x0, [sp, #24]
    454c:	ldr	w0, [x0, #196]
    4550:	mov	w1, #0x1                   	// #1
    4554:	lsl	w0, w1, w0
    4558:	sub	w0, w0, #0x1
    455c:	mov	w1, w0
    4560:	ldr	x0, [sp, #24]
    4564:	str	w1, [x0, #196]
    4568:	ldr	x0, [sp, #24]
    456c:	bl	43d0 <xz_dec_bcj_reset+0x27dc>
    4570:	mov	w0, #0x1                   	// #1
    4574:	ldp	x29, x30, [sp], #32
    4578:	ret
    457c:	stp	x29, x30, [sp, #-48]!
    4580:	mov	x29, sp
    4584:	str	x0, [sp, #24]
    4588:	str	x1, [sp, #16]
    458c:	ldr	x0, [sp, #16]
    4590:	ldr	x1, [x0, #16]
    4594:	ldr	x0, [sp, #16]
    4598:	ldr	x0, [x0, #8]
    459c:	sub	x0, x1, x0
    45a0:	str	x0, [sp, #40]
    45a4:	ldr	x0, [sp, #24]
    45a8:	ldr	w0, [x0, #24]
    45ac:	cmp	w0, #0x0
    45b0:	b.ne	45c4 <xz_dec_bcj_reset+0x29d0>  // b.any
    45b4:	ldr	x0, [sp, #24]
    45b8:	ldr	w0, [x0, #12]
    45bc:	cmp	w0, #0x0
    45c0:	b.ne	487c <xz_dec_bcj_reset+0x2c88>  // b.any
    45c4:	ldr	x0, [sp, #24]
    45c8:	ldr	w0, [x0, #24]
    45cc:	mov	w1, #0x2a                  	// #42
    45d0:	sub	w0, w1, w0
    45d4:	str	w0, [sp, #36]
    45d8:	ldr	x0, [sp, #24]
    45dc:	ldr	w1, [x0, #12]
    45e0:	ldr	x0, [sp, #24]
    45e4:	ldr	w0, [x0, #24]
    45e8:	sub	w0, w1, w0
    45ec:	ldr	w1, [sp, #36]
    45f0:	cmp	w1, w0
    45f4:	b.ls	4610 <xz_dec_bcj_reset+0x2a1c>  // b.plast
    45f8:	ldr	x0, [sp, #24]
    45fc:	ldr	w1, [x0, #12]
    4600:	ldr	x0, [sp, #24]
    4604:	ldr	w0, [x0, #24]
    4608:	sub	w0, w1, w0
    460c:	str	w0, [sp, #36]
    4610:	ldr	w0, [sp, #36]
    4614:	ldr	x1, [sp, #40]
    4618:	cmp	x1, x0
    461c:	b.cs	4628 <xz_dec_bcj_reset+0x2a34>  // b.hs, b.nlast
    4620:	ldr	x0, [sp, #40]
    4624:	str	w0, [sp, #36]
    4628:	ldr	x0, [sp, #24]
    462c:	add	x1, x0, #0x1c
    4630:	ldr	x0, [sp, #24]
    4634:	ldr	w0, [x0, #24]
    4638:	mov	w0, w0
    463c:	add	x3, x1, x0
    4640:	ldr	x0, [sp, #16]
    4644:	ldr	x1, [x0]
    4648:	ldr	x0, [sp, #16]
    464c:	ldr	x0, [x0, #8]
    4650:	add	x0, x1, x0
    4654:	ldr	w1, [sp, #36]
    4658:	mov	x2, x1
    465c:	mov	x1, x0
    4660:	mov	x0, x3
    4664:	bl	1c5c <xz_dec_bcj_reset+0x68>
    4668:	ldr	x0, [sp, #24]
    466c:	ldr	w1, [x0, #24]
    4670:	ldr	w0, [sp, #36]
    4674:	add	w1, w1, w0
    4678:	ldr	x0, [sp, #24]
    467c:	ldr	w0, [x0, #12]
    4680:	cmp	w1, w0
    4684:	b.ne	46f4 <xz_dec_bcj_reset+0x2b00>  // b.any
    4688:	ldr	x0, [sp, #24]
    468c:	add	x1, x0, #0x1c
    4690:	ldr	x0, [sp, #24]
    4694:	ldr	w0, [x0, #24]
    4698:	mov	w2, w0
    469c:	ldr	w0, [sp, #36]
    46a0:	add	x0, x2, x0
    46a4:	add	x3, x1, x0
    46a8:	ldr	x0, [sp, #24]
    46ac:	ldr	w0, [x0, #24]
    46b0:	mov	w1, w0
    46b4:	ldr	w0, [sp, #36]
    46b8:	add	x0, x1, x0
    46bc:	mov	x1, #0x3f                  	// #63
    46c0:	sub	x0, x1, x0
    46c4:	mov	x2, x0
    46c8:	mov	w1, #0x0                   	// #0
    46cc:	mov	x0, x3
    46d0:	bl	0 <grub_memset>
    46d4:	ldr	x0, [sp, #24]
    46d8:	ldr	w1, [x0, #24]
    46dc:	ldr	w0, [sp, #36]
    46e0:	add	w0, w1, w0
    46e4:	mov	w1, w0
    46e8:	ldr	x0, [sp, #24]
    46ec:	str	x1, [x0, #184]
    46f0:	b	4764 <xz_dec_bcj_reset+0x2b70>
    46f4:	ldr	x0, [sp, #24]
    46f8:	ldr	w1, [x0, #24]
    46fc:	ldr	w0, [sp, #36]
    4700:	add	w0, w1, w0
    4704:	cmp	w0, #0x14
    4708:	b.hi	4744 <xz_dec_bcj_reset+0x2b50>  // b.pmore
    470c:	ldr	x0, [sp, #24]
    4710:	ldr	w1, [x0, #24]
    4714:	ldr	w0, [sp, #36]
    4718:	add	w1, w1, w0
    471c:	ldr	x0, [sp, #24]
    4720:	str	w1, [x0, #24]
    4724:	ldr	x0, [sp, #16]
    4728:	ldr	x1, [x0, #8]
    472c:	ldr	w0, [sp, #36]
    4730:	add	x1, x1, x0
    4734:	ldr	x0, [sp, #16]
    4738:	str	x1, [x0, #8]
    473c:	mov	w0, #0x1                   	// #1
    4740:	b	4a30 <xz_dec_bcj_reset+0x2e3c>
    4744:	ldr	x0, [sp, #24]
    4748:	ldr	w1, [x0, #24]
    474c:	ldr	w0, [sp, #36]
    4750:	add	w0, w1, w0
    4754:	sub	w0, w0, #0x15
    4758:	mov	w1, w0
    475c:	ldr	x0, [sp, #24]
    4760:	str	x1, [x0, #184]
    4764:	ldr	x0, [sp, #24]
    4768:	add	x1, x0, #0x1c
    476c:	ldr	x0, [sp, #24]
    4770:	str	x1, [x0, #168]
    4774:	ldr	x0, [sp, #24]
    4778:	str	xzr, [x0, #176]
    477c:	ldr	x0, [sp, #24]
    4780:	bl	3f44 <xz_dec_bcj_reset+0x2350>
    4784:	cmp	w0, #0x0
    4788:	b.eq	47b0 <xz_dec_bcj_reset+0x2bbc>  // b.none
    478c:	ldr	x0, [sp, #24]
    4790:	ldr	x1, [x0, #176]
    4794:	ldr	x0, [sp, #24]
    4798:	ldr	w2, [x0, #24]
    479c:	ldr	w0, [sp, #36]
    47a0:	add	w0, w2, w0
    47a4:	mov	w0, w0
    47a8:	cmp	x1, x0
    47ac:	b.ls	47b8 <xz_dec_bcj_reset+0x2bc4>  // b.plast
    47b0:	mov	w0, #0x0                   	// #0
    47b4:	b	4a30 <xz_dec_bcj_reset+0x2e3c>
    47b8:	ldr	x0, [sp, #24]
    47bc:	ldr	w0, [x0, #12]
    47c0:	ldr	x1, [sp, #24]
    47c4:	ldr	x1, [x1, #176]
    47c8:	sub	w1, w0, w1
    47cc:	ldr	x0, [sp, #24]
    47d0:	str	w1, [x0, #12]
    47d4:	ldr	x0, [sp, #24]
    47d8:	ldr	x1, [x0, #176]
    47dc:	ldr	x0, [sp, #24]
    47e0:	ldr	w0, [x0, #24]
    47e4:	mov	w0, w0
    47e8:	cmp	x1, x0
    47ec:	b.cs	4848 <xz_dec_bcj_reset+0x2c54>  // b.hs, b.nlast
    47f0:	ldr	x0, [sp, #24]
    47f4:	ldr	w0, [x0, #24]
    47f8:	ldr	x1, [sp, #24]
    47fc:	ldr	x1, [x1, #176]
    4800:	sub	w1, w0, w1
    4804:	ldr	x0, [sp, #24]
    4808:	str	w1, [x0, #24]
    480c:	ldr	x0, [sp, #24]
    4810:	add	x3, x0, #0x1c
    4814:	ldr	x0, [sp, #24]
    4818:	add	x1, x0, #0x1c
    481c:	ldr	x0, [sp, #24]
    4820:	ldr	x0, [x0, #176]
    4824:	add	x1, x1, x0
    4828:	ldr	x0, [sp, #24]
    482c:	ldr	w0, [x0, #24]
    4830:	mov	w0, w0
    4834:	mov	x2, x0
    4838:	mov	x0, x3
    483c:	bl	0 <grub_memmove>
    4840:	mov	w0, #0x1                   	// #1
    4844:	b	4a30 <xz_dec_bcj_reset+0x2e3c>
    4848:	ldr	x0, [sp, #16]
    484c:	ldr	x1, [x0, #8]
    4850:	ldr	x0, [sp, #24]
    4854:	ldr	x2, [x0, #176]
    4858:	ldr	x0, [sp, #24]
    485c:	ldr	w0, [x0, #24]
    4860:	mov	w0, w0
    4864:	sub	x0, x2, x0
    4868:	add	x1, x1, x0
    486c:	ldr	x0, [sp, #16]
    4870:	str	x1, [x0, #8]
    4874:	ldr	x0, [sp, #24]
    4878:	str	wzr, [x0, #24]
    487c:	ldr	x0, [sp, #16]
    4880:	ldr	x1, [x0, #16]
    4884:	ldr	x0, [sp, #16]
    4888:	ldr	x0, [x0, #8]
    488c:	sub	x0, x1, x0
    4890:	str	x0, [sp, #40]
    4894:	ldr	x0, [sp, #40]
    4898:	cmp	x0, #0x14
    489c:	b.ls	498c <xz_dec_bcj_reset+0x2d98>  // b.plast
    48a0:	ldr	x0, [sp, #16]
    48a4:	ldr	x1, [x0]
    48a8:	ldr	x0, [sp, #24]
    48ac:	str	x1, [x0, #168]
    48b0:	ldr	x0, [sp, #16]
    48b4:	ldr	x1, [x0, #8]
    48b8:	ldr	x0, [sp, #24]
    48bc:	str	x1, [x0, #176]
    48c0:	ldr	x0, [sp, #24]
    48c4:	ldr	w0, [x0, #12]
    48c8:	add	w0, w0, #0x15
    48cc:	mov	w0, w0
    48d0:	ldr	x1, [sp, #40]
    48d4:	cmp	x1, x0
    48d8:	b.cc	4900 <xz_dec_bcj_reset+0x2d0c>  // b.lo, b.ul, b.last
    48dc:	ldr	x0, [sp, #16]
    48e0:	ldr	x1, [x0, #8]
    48e4:	ldr	x0, [sp, #24]
    48e8:	ldr	w0, [x0, #12]
    48ec:	mov	w0, w0
    48f0:	add	x1, x1, x0
    48f4:	ldr	x0, [sp, #24]
    48f8:	str	x1, [x0, #184]
    48fc:	b	4914 <xz_dec_bcj_reset+0x2d20>
    4900:	ldr	x0, [sp, #16]
    4904:	ldr	x0, [x0, #16]
    4908:	sub	x1, x0, #0x15
    490c:	ldr	x0, [sp, #24]
    4910:	str	x1, [x0, #184]
    4914:	ldr	x0, [sp, #24]
    4918:	bl	3f44 <xz_dec_bcj_reset+0x2350>
    491c:	cmp	w0, #0x0
    4920:	b.ne	492c <xz_dec_bcj_reset+0x2d38>  // b.any
    4924:	mov	w0, #0x0                   	// #0
    4928:	b	4a30 <xz_dec_bcj_reset+0x2e3c>
    492c:	ldr	x0, [sp, #24]
    4930:	ldr	x1, [x0, #176]
    4934:	ldr	x0, [sp, #16]
    4938:	ldr	x0, [x0, #8]
    493c:	sub	x0, x1, x0
    4940:	str	x0, [sp, #40]
    4944:	ldr	x0, [sp, #24]
    4948:	ldr	w0, [x0, #12]
    494c:	mov	w0, w0
    4950:	ldr	x1, [sp, #40]
    4954:	cmp	x1, x0
    4958:	b.ls	4964 <xz_dec_bcj_reset+0x2d70>  // b.plast
    495c:	mov	w0, #0x0                   	// #0
    4960:	b	4a30 <xz_dec_bcj_reset+0x2e3c>
    4964:	ldr	x0, [sp, #24]
    4968:	ldr	w0, [x0, #12]
    496c:	ldr	x1, [sp, #40]
    4970:	sub	w1, w0, w1
    4974:	ldr	x0, [sp, #24]
    4978:	str	w1, [x0, #12]
    497c:	ldr	x0, [sp, #24]
    4980:	ldr	x1, [x0, #176]
    4984:	ldr	x0, [sp, #16]
    4988:	str	x1, [x0, #8]
    498c:	ldr	x0, [sp, #16]
    4990:	ldr	x1, [x0, #16]
    4994:	ldr	x0, [sp, #16]
    4998:	ldr	x0, [x0, #8]
    499c:	sub	x0, x1, x0
    49a0:	str	x0, [sp, #40]
    49a4:	ldr	x0, [sp, #40]
    49a8:	cmp	x0, #0x14
    49ac:	b.hi	4a2c <xz_dec_bcj_reset+0x2e38>  // b.pmore
    49b0:	ldr	x0, [sp, #24]
    49b4:	ldr	w0, [x0, #12]
    49b8:	mov	w0, w0
    49bc:	ldr	x1, [sp, #40]
    49c0:	cmp	x1, x0
    49c4:	b.ls	49d8 <xz_dec_bcj_reset+0x2de4>  // b.plast
    49c8:	ldr	x0, [sp, #24]
    49cc:	ldr	w0, [x0, #12]
    49d0:	mov	w0, w0
    49d4:	str	x0, [sp, #40]
    49d8:	ldr	x0, [sp, #24]
    49dc:	add	x3, x0, #0x1c
    49e0:	ldr	x0, [sp, #16]
    49e4:	ldr	x1, [x0]
    49e8:	ldr	x0, [sp, #16]
    49ec:	ldr	x0, [x0, #8]
    49f0:	add	x0, x1, x0
    49f4:	ldr	x2, [sp, #40]
    49f8:	mov	x1, x0
    49fc:	mov	x0, x3
    4a00:	bl	1c5c <xz_dec_bcj_reset+0x68>
    4a04:	ldr	x0, [sp, #40]
    4a08:	mov	w1, w0
    4a0c:	ldr	x0, [sp, #24]
    4a10:	str	w1, [x0, #24]
    4a14:	ldr	x0, [sp, #16]
    4a18:	ldr	x1, [x0, #8]
    4a1c:	ldr	x0, [sp, #40]
    4a20:	add	x1, x1, x0
    4a24:	ldr	x0, [sp, #16]
    4a28:	str	x1, [x0, #8]
    4a2c:	mov	w0, #0x1                   	// #1
    4a30:	ldp	x29, x30, [sp], #48
    4a34:	ret

0000000000004a38 <xz_dec_lzma2_run>:
    4a38:	stp	x29, x30, [sp, #-48]!
    4a3c:	mov	x29, sp
    4a40:	str	x0, [sp, #24]
    4a44:	str	x1, [sp, #16]
    4a48:	b	4f6c <xz_dec_lzma2_run+0x534>
    4a4c:	ldr	x0, [sp, #24]
    4a50:	ldr	w0, [x0]
    4a54:	cmp	w0, #0x8
    4a58:	b.eq	4f28 <xz_dec_lzma2_run+0x4f0>  // b.none
    4a5c:	cmp	w0, #0x8
    4a60:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4a64:	cmp	w0, #0x7
    4a68:	b.eq	4df4 <xz_dec_lzma2_run+0x3bc>  // b.none
    4a6c:	cmp	w0, #0x7
    4a70:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4a74:	cmp	w0, #0x6
    4a78:	b.eq	4d9c <xz_dec_lzma2_run+0x364>  // b.none
    4a7c:	cmp	w0, #0x6
    4a80:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4a84:	cmp	w0, #0x5
    4a88:	b.eq	4d50 <xz_dec_lzma2_run+0x318>  // b.none
    4a8c:	cmp	w0, #0x5
    4a90:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4a94:	cmp	w0, #0x4
    4a98:	b.eq	4d00 <xz_dec_lzma2_run+0x2c8>  // b.none
    4a9c:	cmp	w0, #0x4
    4aa0:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4aa4:	cmp	w0, #0x3
    4aa8:	b.eq	4cc0 <xz_dec_lzma2_run+0x288>  // b.none
    4aac:	cmp	w0, #0x3
    4ab0:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4ab4:	cmp	w0, #0x2
    4ab8:	b.eq	4c74 <xz_dec_lzma2_run+0x23c>  // b.none
    4abc:	cmp	w0, #0x2
    4ac0:	b.hi	4f6c <xz_dec_lzma2_run+0x534>  // b.pmore
    4ac4:	cmp	w0, #0x0
    4ac8:	b.eq	4ad8 <xz_dec_lzma2_run+0xa0>  // b.none
    4acc:	cmp	w0, #0x1
    4ad0:	b.eq	4c28 <xz_dec_lzma2_run+0x1f0>  // b.none
    4ad4:	b	4f6c <xz_dec_lzma2_run+0x534>
    4ad8:	ldr	x0, [sp, #16]
    4adc:	ldr	x1, [x0]
    4ae0:	ldr	x0, [sp, #16]
    4ae4:	ldr	x0, [x0, #8]
    4ae8:	add	x3, x0, #0x1
    4aec:	ldr	x2, [sp, #16]
    4af0:	str	x3, [x2, #8]
    4af4:	add	x0, x1, x0
    4af8:	ldrb	w0, [x0]
    4afc:	str	w0, [sp, #44]
    4b00:	ldr	w0, [sp, #44]
    4b04:	cmp	w0, #0xdf
    4b08:	b.hi	4b18 <xz_dec_lzma2_run+0xe0>  // b.pmore
    4b0c:	ldr	w0, [sp, #44]
    4b10:	cmp	w0, #0x1
    4b14:	b.ne	4b40 <xz_dec_lzma2_run+0x108>  // b.any
    4b18:	ldr	x0, [sp, #24]
    4b1c:	mov	w1, #0x1                   	// #1
    4b20:	str	w1, [x0, #20]
    4b24:	ldr	x0, [sp, #24]
    4b28:	str	wzr, [x0, #16]
    4b2c:	ldr	x0, [sp, #24]
    4b30:	add	x0, x0, #0x60
    4b34:	ldr	x1, [sp, #16]
    4b38:	bl	1e44 <xz_dec_bcj_reset+0x250>
    4b3c:	b	4b58 <xz_dec_lzma2_run+0x120>
    4b40:	ldr	x0, [sp, #24]
    4b44:	ldr	w0, [x0, #16]
    4b48:	cmp	w0, #0x0
    4b4c:	b.eq	4b58 <xz_dec_lzma2_run+0x120>  // b.none
    4b50:	mov	w0, #0x5                   	// #5
    4b54:	b	4f98 <xz_dec_lzma2_run+0x560>
    4b58:	ldr	w0, [sp, #44]
    4b5c:	cmp	w0, #0x7f
    4b60:	b.ls	4be4 <xz_dec_lzma2_run+0x1ac>  // b.plast
    4b64:	ldr	w0, [sp, #44]
    4b68:	lsl	w0, w0, #16
    4b6c:	and	w1, w0, #0x1f0000
    4b70:	ldr	x0, [sp, #24]
    4b74:	str	w1, [x0, #8]
    4b78:	ldr	x0, [sp, #24]
    4b7c:	mov	w1, #0x1                   	// #1
    4b80:	str	w1, [x0]
    4b84:	ldr	w0, [sp, #44]
    4b88:	cmp	w0, #0xbf
    4b8c:	b.ls	4ba8 <xz_dec_lzma2_run+0x170>  // b.plast
    4b90:	ldr	x0, [sp, #24]
    4b94:	str	wzr, [x0, #20]
    4b98:	ldr	x0, [sp, #24]
    4b9c:	mov	w1, #0x5                   	// #5
    4ba0:	str	w1, [x0, #4]
    4ba4:	b	4f6c <xz_dec_lzma2_run+0x534>
    4ba8:	ldr	x0, [sp, #24]
    4bac:	ldr	w0, [x0, #20]
    4bb0:	cmp	w0, #0x0
    4bb4:	b.eq	4bc0 <xz_dec_lzma2_run+0x188>  // b.none
    4bb8:	mov	w0, #0x5                   	// #5
    4bbc:	b	4f98 <xz_dec_lzma2_run+0x560>
    4bc0:	ldr	x0, [sp, #24]
    4bc4:	mov	w1, #0x6                   	// #6
    4bc8:	str	w1, [x0, #4]
    4bcc:	ldr	w0, [sp, #44]
    4bd0:	cmp	w0, #0x9f
    4bd4:	b.ls	4f6c <xz_dec_lzma2_run+0x534>  // b.plast
    4bd8:	ldr	x0, [sp, #24]
    4bdc:	bl	43d0 <xz_dec_bcj_reset+0x27dc>
    4be0:	b	4f6c <xz_dec_lzma2_run+0x534>
    4be4:	ldr	w0, [sp, #44]
    4be8:	cmp	w0, #0x0
    4bec:	b.ne	4bf8 <xz_dec_lzma2_run+0x1c0>  // b.any
    4bf0:	mov	w0, #0x1                   	// #1
    4bf4:	b	4f98 <xz_dec_lzma2_run+0x560>
    4bf8:	ldr	w0, [sp, #44]
    4bfc:	cmp	w0, #0x2
    4c00:	b.ls	4c0c <xz_dec_lzma2_run+0x1d4>  // b.plast
    4c04:	mov	w0, #0x5                   	// #5
    4c08:	b	4f98 <xz_dec_lzma2_run+0x560>
    4c0c:	ldr	x0, [sp, #24]
    4c10:	mov	w1, #0x3                   	// #3
    4c14:	str	w1, [x0]
    4c18:	ldr	x0, [sp, #24]
    4c1c:	mov	w1, #0x8                   	// #8
    4c20:	str	w1, [x0, #4]
    4c24:	b	4f6c <xz_dec_lzma2_run+0x534>
    4c28:	ldr	x0, [sp, #16]
    4c2c:	ldr	x1, [x0]
    4c30:	ldr	x0, [sp, #16]
    4c34:	ldr	x0, [x0, #8]
    4c38:	add	x3, x0, #0x1
    4c3c:	ldr	x2, [sp, #16]
    4c40:	str	x3, [x2, #8]
    4c44:	add	x0, x1, x0
    4c48:	ldrb	w0, [x0]
    4c4c:	lsl	w1, w0, #8
    4c50:	ldr	x0, [sp, #24]
    4c54:	ldr	w0, [x0, #8]
    4c58:	add	w1, w1, w0
    4c5c:	ldr	x0, [sp, #24]
    4c60:	str	w1, [x0, #8]
    4c64:	ldr	x0, [sp, #24]
    4c68:	mov	w1, #0x2                   	// #2
    4c6c:	str	w1, [x0]
    4c70:	b	4f6c <xz_dec_lzma2_run+0x534>
    4c74:	ldr	x0, [sp, #16]
    4c78:	ldr	x1, [x0]
    4c7c:	ldr	x0, [sp, #16]
    4c80:	ldr	x0, [x0, #8]
    4c84:	add	x3, x0, #0x1
    4c88:	ldr	x2, [sp, #16]
    4c8c:	str	x3, [x2, #8]
    4c90:	add	x0, x1, x0
    4c94:	ldrb	w0, [x0]
    4c98:	add	w1, w0, #0x1
    4c9c:	ldr	x0, [sp, #24]
    4ca0:	ldr	w0, [x0, #8]
    4ca4:	add	w1, w1, w0
    4ca8:	ldr	x0, [sp, #24]
    4cac:	str	w1, [x0, #8]
    4cb0:	ldr	x0, [sp, #24]
    4cb4:	mov	w1, #0x3                   	// #3
    4cb8:	str	w1, [x0]
    4cbc:	b	4f6c <xz_dec_lzma2_run+0x534>
    4cc0:	ldr	x0, [sp, #16]
    4cc4:	ldr	x1, [x0]
    4cc8:	ldr	x0, [sp, #16]
    4ccc:	ldr	x0, [x0, #8]
    4cd0:	add	x3, x0, #0x1
    4cd4:	ldr	x2, [sp, #16]
    4cd8:	str	x3, [x2, #8]
    4cdc:	add	x0, x1, x0
    4ce0:	ldrb	w0, [x0]
    4ce4:	lsl	w1, w0, #8
    4ce8:	ldr	x0, [sp, #24]
    4cec:	str	w1, [x0, #12]
    4cf0:	ldr	x0, [sp, #24]
    4cf4:	mov	w1, #0x4                   	// #4
    4cf8:	str	w1, [x0]
    4cfc:	b	4f6c <xz_dec_lzma2_run+0x534>
    4d00:	ldr	x0, [sp, #16]
    4d04:	ldr	x1, [x0]
    4d08:	ldr	x0, [sp, #16]
    4d0c:	ldr	x0, [x0, #8]
    4d10:	add	x3, x0, #0x1
    4d14:	ldr	x2, [sp, #16]
    4d18:	str	x3, [x2, #8]
    4d1c:	add	x0, x1, x0
    4d20:	ldrb	w0, [x0]
    4d24:	add	w1, w0, #0x1
    4d28:	ldr	x0, [sp, #24]
    4d2c:	ldr	w0, [x0, #12]
    4d30:	add	w1, w1, w0
    4d34:	ldr	x0, [sp, #24]
    4d38:	str	w1, [x0, #12]
    4d3c:	ldr	x0, [sp, #24]
    4d40:	ldr	w1, [x0, #4]
    4d44:	ldr	x0, [sp, #24]
    4d48:	str	w1, [x0]
    4d4c:	b	4f6c <xz_dec_lzma2_run+0x534>
    4d50:	ldr	x0, [sp, #16]
    4d54:	ldr	x1, [x0]
    4d58:	ldr	x0, [sp, #16]
    4d5c:	ldr	x0, [x0, #8]
    4d60:	add	x3, x0, #0x1
    4d64:	ldr	x2, [sp, #16]
    4d68:	str	x3, [x2, #8]
    4d6c:	add	x0, x1, x0
    4d70:	ldrb	w0, [x0]
    4d74:	mov	w1, w0
    4d78:	ldr	x0, [sp, #24]
    4d7c:	bl	4464 <xz_dec_bcj_reset+0x2870>
    4d80:	cmp	w0, #0x0
    4d84:	b.ne	4d90 <xz_dec_lzma2_run+0x358>  // b.any
    4d88:	mov	w0, #0x5                   	// #5
    4d8c:	b	4f98 <xz_dec_lzma2_run+0x560>
    4d90:	ldr	x0, [sp, #24]
    4d94:	mov	w1, #0x6                   	// #6
    4d98:	str	w1, [x0]
    4d9c:	ldr	x0, [sp, #24]
    4da0:	ldr	w0, [x0, #12]
    4da4:	cmp	w0, #0x4
    4da8:	b.hi	4db4 <xz_dec_lzma2_run+0x37c>  // b.pmore
    4dac:	mov	w0, #0x5                   	// #5
    4db0:	b	4f98 <xz_dec_lzma2_run+0x560>
    4db4:	ldr	x0, [sp, #24]
    4db8:	add	x0, x0, #0x98
    4dbc:	ldr	x1, [sp, #16]
    4dc0:	bl	24cc <xz_dec_bcj_reset+0x8d8>
    4dc4:	cmp	w0, #0x0
    4dc8:	b.ne	4dd4 <xz_dec_lzma2_run+0x39c>  // b.any
    4dcc:	mov	w0, #0x0                   	// #0
    4dd0:	b	4f98 <xz_dec_lzma2_run+0x560>
    4dd4:	ldr	x0, [sp, #24]
    4dd8:	ldr	w0, [x0, #12]
    4ddc:	sub	w1, w0, #0x5
    4de0:	ldr	x0, [sp, #24]
    4de4:	str	w1, [x0, #12]
    4de8:	ldr	x0, [sp, #24]
    4dec:	mov	w1, #0x7                   	// #7
    4df0:	str	w1, [x0]
    4df4:	ldr	x0, [sp, #24]
    4df8:	add	x3, x0, #0x60
    4dfc:	ldr	x0, [sp, #24]
    4e00:	ldr	w0, [x0, #8]
    4e04:	mov	w1, w0
    4e08:	ldr	x0, [sp, #16]
    4e0c:	ldr	x2, [x0, #40]
    4e10:	ldr	x0, [sp, #16]
    4e14:	ldr	x0, [x0, #32]
    4e18:	sub	x0, x2, x0
    4e1c:	cmp	x1, x0
    4e20:	csel	x0, x1, x0, ls  // ls = plast
    4e24:	mov	x1, x0
    4e28:	mov	x0, x3
    4e2c:	bl	1ec4 <xz_dec_bcj_reset+0x2d0>
    4e30:	ldr	x1, [sp, #16]
    4e34:	ldr	x0, [sp, #24]
    4e38:	bl	457c <xz_dec_bcj_reset+0x2988>
    4e3c:	cmp	w0, #0x0
    4e40:	b.ne	4e4c <xz_dec_lzma2_run+0x414>  // b.any
    4e44:	mov	w0, #0x5                   	// #5
    4e48:	b	4f98 <xz_dec_lzma2_run+0x560>
    4e4c:	ldr	x0, [sp, #24]
    4e50:	add	x0, x0, #0x60
    4e54:	ldr	x1, [sp, #16]
    4e58:	bl	23d4 <xz_dec_bcj_reset+0x7e0>
    4e5c:	mov	w1, w0
    4e60:	ldr	x0, [sp, #24]
    4e64:	ldr	w0, [x0, #8]
    4e68:	sub	w1, w0, w1
    4e6c:	ldr	x0, [sp, #24]
    4e70:	str	w1, [x0, #8]
    4e74:	ldr	x0, [sp, #24]
    4e78:	ldr	w0, [x0, #8]
    4e7c:	cmp	w0, #0x0
    4e80:	b.ne	4ed8 <xz_dec_lzma2_run+0x4a0>  // b.any
    4e84:	ldr	x0, [sp, #24]
    4e88:	ldr	w0, [x0, #12]
    4e8c:	cmp	w0, #0x0
    4e90:	b.ne	4eb8 <xz_dec_lzma2_run+0x480>  // b.any
    4e94:	ldr	x0, [sp, #24]
    4e98:	ldr	w0, [x0, #224]
    4e9c:	cmp	w0, #0x0
    4ea0:	b.ne	4eb8 <xz_dec_lzma2_run+0x480>  // b.any
    4ea4:	ldr	x0, [sp, #24]
    4ea8:	add	x0, x0, #0x98
    4eac:	bl	2594 <xz_dec_bcj_reset+0x9a0>
    4eb0:	cmp	w0, #0x0
    4eb4:	b.ne	4ec0 <xz_dec_lzma2_run+0x488>  // b.any
    4eb8:	mov	w0, #0x5                   	// #5
    4ebc:	b	4f98 <xz_dec_lzma2_run+0x560>
    4ec0:	ldr	x0, [sp, #24]
    4ec4:	add	x0, x0, #0x98
    4ec8:	bl	2498 <xz_dec_bcj_reset+0x8a4>
    4ecc:	ldr	x0, [sp, #24]
    4ed0:	str	wzr, [x0]
    4ed4:	b	4f6c <xz_dec_lzma2_run+0x534>
    4ed8:	ldr	x0, [sp, #16]
    4edc:	ldr	x1, [x0, #32]
    4ee0:	ldr	x0, [sp, #16]
    4ee4:	ldr	x0, [x0, #40]
    4ee8:	cmp	x1, x0
    4eec:	b.eq	4f20 <xz_dec_lzma2_run+0x4e8>  // b.none
    4ef0:	ldr	x0, [sp, #16]
    4ef4:	ldr	x1, [x0, #8]
    4ef8:	ldr	x0, [sp, #16]
    4efc:	ldr	x0, [x0, #16]
    4f00:	cmp	x1, x0
    4f04:	b.ne	4f6c <xz_dec_lzma2_run+0x534>  // b.any
    4f08:	ldr	x0, [sp, #24]
    4f0c:	ldr	w1, [x0, #24]
    4f10:	ldr	x0, [sp, #24]
    4f14:	ldr	w0, [x0, #12]
    4f18:	cmp	w1, w0
    4f1c:	b.cs	4f6c <xz_dec_lzma2_run+0x534>  // b.hs, b.nlast
    4f20:	mov	w0, #0x0                   	// #0
    4f24:	b	4f98 <xz_dec_lzma2_run+0x560>
    4f28:	ldr	x0, [sp, #24]
    4f2c:	add	x3, x0, #0x60
    4f30:	ldr	x0, [sp, #24]
    4f34:	add	x0, x0, #0xc
    4f38:	mov	x2, x0
    4f3c:	ldr	x1, [sp, #16]
    4f40:	mov	x0, x3
    4f44:	bl	21a4 <xz_dec_bcj_reset+0x5b0>
    4f48:	ldr	x0, [sp, #24]
    4f4c:	ldr	w0, [x0, #12]
    4f50:	cmp	w0, #0x0
    4f54:	b.eq	4f60 <xz_dec_lzma2_run+0x528>  // b.none
    4f58:	mov	w0, #0x0                   	// #0
    4f5c:	b	4f98 <xz_dec_lzma2_run+0x560>
    4f60:	ldr	x0, [sp, #24]
    4f64:	str	wzr, [x0]
    4f68:	nop
    4f6c:	ldr	x0, [sp, #16]
    4f70:	ldr	x1, [x0, #8]
    4f74:	ldr	x0, [sp, #16]
    4f78:	ldr	x0, [x0, #16]
    4f7c:	cmp	x1, x0
    4f80:	b.cc	4a4c <xz_dec_lzma2_run+0x14>  // b.lo, b.ul, b.last
    4f84:	ldr	x0, [sp, #24]
    4f88:	ldr	w0, [x0]
    4f8c:	cmp	w0, #0x7
    4f90:	b.eq	4a4c <xz_dec_lzma2_run+0x14>  // b.none
    4f94:	mov	w0, #0x0                   	// #0
    4f98:	ldp	x29, x30, [sp], #48
    4f9c:	ret

0000000000004fa0 <xz_dec_lzma2_create>:
    4fa0:	stp	x29, x30, [sp, #-48]!
    4fa4:	mov	x29, sp
    4fa8:	str	w0, [sp, #28]
    4fac:	ldr	w1, [sp, #28]
    4fb0:	mov	w0, #0xc0000000            	// #-1073741824
    4fb4:	cmp	w1, w0
    4fb8:	b.ls	4fc4 <xz_dec_lzma2_create+0x24>  // b.plast
    4fbc:	mov	x0, #0x0                   	// #0
    4fc0:	b	5034 <xz_dec_lzma2_create+0x94>
    4fc4:	mov	x0, #0x6f50                	// #28496
    4fc8:	bl	1ca8 <xz_dec_bcj_reset+0xb4>
    4fcc:	str	x0, [sp, #40]
    4fd0:	ldr	x0, [sp, #40]
    4fd4:	cmp	x0, #0x0
    4fd8:	b.ne	4fe4 <xz_dec_lzma2_create+0x44>  // b.any
    4fdc:	mov	x0, #0x0                   	// #0
    4fe0:	b	5034 <xz_dec_lzma2_create+0x94>
    4fe4:	ldr	w0, [sp, #28]
    4fe8:	cmp	w0, #0x0
    4fec:	b.eq	5024 <xz_dec_lzma2_create+0x84>  // b.none
    4ff0:	ldr	w0, [sp, #28]
    4ff4:	bl	1ca8 <xz_dec_bcj_reset+0xb4>
    4ff8:	mov	x1, x0
    4ffc:	ldr	x0, [sp, #40]
    5000:	str	x1, [x0, #96]
    5004:	ldr	x0, [sp, #40]
    5008:	ldr	x0, [x0, #96]
    500c:	cmp	x0, #0x0
    5010:	b.ne	5024 <xz_dec_lzma2_create+0x84>  // b.any
    5014:	ldr	x0, [sp, #40]
    5018:	bl	1c88 <xz_dec_bcj_reset+0x94>
    501c:	mov	x0, #0x0                   	// #0
    5020:	b	5034 <xz_dec_lzma2_create+0x94>
    5024:	ldr	x0, [sp, #40]
    5028:	ldr	w1, [sp, #28]
    502c:	str	w1, [x0, #148]
    5030:	ldr	x0, [sp, #40]
    5034:	ldp	x29, x30, [sp], #48
    5038:	ret

000000000000503c <xz_dec_lzma2_reset>:
    503c:	stp	x29, x30, [sp, #-48]!
    5040:	mov	x29, sp
    5044:	str	x0, [sp, #24]
    5048:	strb	w1, [sp, #23]
    504c:	ldrb	w0, [sp, #23]
    5050:	cmp	w0, #0x1e
    5054:	b.ls	5060 <xz_dec_lzma2_reset+0x24>  // b.plast
    5058:	mov	w0, #0x4                   	// #4
    505c:	b	5154 <xz_dec_lzma2_reset+0x118>
    5060:	ldrb	w0, [sp, #23]
    5064:	and	w0, w0, #0x1
    5068:	add	w0, w0, #0x2
    506c:	mov	w1, w0
    5070:	ldr	x0, [sp, #24]
    5074:	str	w1, [x0, #144]
    5078:	ldr	x0, [sp, #24]
    507c:	ldr	w1, [x0, #144]
    5080:	ldrb	w0, [sp, #23]
    5084:	lsr	w0, w0, #1
    5088:	and	w0, w0, #0xff
    508c:	add	w0, w0, #0xb
    5090:	lsl	w1, w1, w0
    5094:	ldr	x0, [sp, #24]
    5098:	str	w1, [x0, #144]
    509c:	ldr	x0, [sp, #24]
    50a0:	ldr	w0, [x0, #148]
    50a4:	cmp	w0, #0x0
    50a8:	b.eq	5118 <xz_dec_lzma2_reset+0xdc>  // b.none
    50ac:	ldr	x0, [sp, #24]
    50b0:	ldr	w1, [x0, #148]
    50b4:	ldr	x0, [sp, #24]
    50b8:	ldr	w0, [x0, #144]
    50bc:	cmp	w1, w0
    50c0:	b.cs	5118 <xz_dec_lzma2_reset+0xdc>  // b.hs, b.nlast
    50c4:	ldr	x0, [sp, #24]
    50c8:	ldr	x2, [x0, #96]
    50cc:	ldr	x0, [sp, #24]
    50d0:	ldr	w0, [x0, #144]
    50d4:	mov	w0, w0
    50d8:	mov	x1, x0
    50dc:	mov	x0, x2
    50e0:	bl	1cc4 <xz_dec_bcj_reset+0xd0>
    50e4:	str	x0, [sp, #40]
    50e8:	ldr	x0, [sp, #40]
    50ec:	cmp	x0, #0x0
    50f0:	b.ne	50fc <xz_dec_lzma2_reset+0xc0>  // b.any
    50f4:	mov	w0, #0x2                   	// #2
    50f8:	b	5154 <xz_dec_lzma2_reset+0x118>
    50fc:	ldr	x0, [sp, #24]
    5100:	ldr	x1, [sp, #40]
    5104:	str	x1, [x0, #96]
    5108:	ldr	x0, [sp, #24]
    510c:	ldr	w1, [x0, #144]
    5110:	ldr	x0, [sp, #24]
    5114:	str	w1, [x0, #148]
    5118:	ldr	x0, [sp, #24]
    511c:	ldr	w0, [x0, #144]
    5120:	mov	w1, w0
    5124:	ldr	x0, [sp, #24]
    5128:	str	x1, [x0, #136]
    512c:	ldr	x0, [sp, #24]
    5130:	str	wzr, [x0, #224]
    5134:	ldr	x0, [sp, #24]
    5138:	str	wzr, [x0]
    513c:	ldr	x0, [sp, #24]
    5140:	mov	w1, #0x1                   	// #1
    5144:	str	w1, [x0, #16]
    5148:	ldr	x0, [sp, #24]
    514c:	str	wzr, [x0, #24]
    5150:	mov	w0, #0x0                   	// #0
    5154:	ldp	x29, x30, [sp], #48
    5158:	ret

000000000000515c <xz_dec_lzma2_end>:
    515c:	stp	x29, x30, [sp, #-32]!
    5160:	mov	x29, sp
    5164:	str	x0, [sp, #24]
    5168:	ldr	x0, [sp, #24]
    516c:	ldr	w0, [x0, #148]
    5170:	cmp	w0, #0x0
    5174:	b.eq	5184 <xz_dec_lzma2_end+0x28>  // b.none
    5178:	ldr	x0, [sp, #24]
    517c:	ldr	x0, [x0, #96]
    5180:	bl	1c88 <xz_dec_bcj_reset+0x94>
    5184:	ldr	x0, [sp, #24]
    5188:	bl	1c88 <xz_dec_bcj_reset+0x94>
    518c:	nop
    5190:	ldp	x29, x30, [sp], #32
    5194:	ret
    5198:	stp	x29, x30, [sp, #-48]!
    519c:	mov	x29, sp
    51a0:	str	x0, [sp, #40]
    51a4:	str	x1, [sp, #32]
    51a8:	str	x2, [sp, #24]
    51ac:	ldr	x2, [sp, #24]
    51b0:	ldr	x1, [sp, #32]
    51b4:	ldr	x0, [sp, #40]
    51b8:	bl	0 <grub_memmove>
    51bc:	ldp	x29, x30, [sp], #48
    51c0:	ret
    51c4:	stp	x29, x30, [sp, #-32]!
    51c8:	mov	x29, sp
    51cc:	str	x0, [sp, #24]
    51d0:	ldr	x0, [sp, #24]
    51d4:	bl	0 <grub_free>
    51d8:	nop
    51dc:	ldp	x29, x30, [sp], #32
    51e0:	ret
    51e4:	stp	x29, x30, [sp, #-32]!
    51e8:	mov	x29, sp
    51ec:	str	x0, [sp, #24]
    51f0:	ldr	x0, [sp, #24]
    51f4:	bl	0 <grub_malloc>
    51f8:	ldp	x29, x30, [sp], #32
    51fc:	ret
    5200:	sub	sp, sp, #0x10
    5204:	str	x0, [sp, #8]
    5208:	ldr	x0, [sp, #8]
    520c:	ldrb	w0, [x0]
    5210:	mov	w1, w0
    5214:	ldr	x0, [sp, #8]
    5218:	add	x0, x0, #0x1
    521c:	ldrb	w0, [x0]
    5220:	lsl	w0, w0, #8
    5224:	orr	w1, w1, w0
    5228:	ldr	x0, [sp, #8]
    522c:	add	x0, x0, #0x2
    5230:	ldrb	w0, [x0]
    5234:	lsl	w0, w0, #16
    5238:	orr	w1, w1, w0
    523c:	ldr	x0, [sp, #8]
    5240:	add	x0, x0, #0x3
    5244:	ldrb	w0, [x0]
    5248:	lsl	w0, w0, #24
    524c:	orr	w0, w1, w0
    5250:	add	sp, sp, #0x10
    5254:	ret
    5258:	stp	x29, x30, [sp, #-48]!
    525c:	mov	x29, sp
    5260:	str	x0, [sp, #24]
    5264:	str	x1, [sp, #16]
    5268:	ldr	x0, [sp, #24]
    526c:	ldr	x1, [x0, #288]
    5270:	ldr	x0, [sp, #24]
    5274:	ldr	x0, [x0, #280]
    5278:	sub	x1, x1, x0
    527c:	ldr	x0, [sp, #16]
    5280:	ldr	x2, [x0, #16]
    5284:	ldr	x0, [sp, #16]
    5288:	ldr	x0, [x0, #8]
    528c:	sub	x0, x2, x0
    5290:	cmp	x1, x0
    5294:	csel	x0, x1, x0, ls  // ls = plast
    5298:	str	x0, [sp, #40]
    529c:	ldr	x0, [sp, #24]
    52a0:	add	x1, x0, #0x128
    52a4:	ldr	x0, [sp, #24]
    52a8:	ldr	x0, [x0, #280]
    52ac:	add	x3, x1, x0
    52b0:	ldr	x0, [sp, #16]
    52b4:	ldr	x1, [x0]
    52b8:	ldr	x0, [sp, #16]
    52bc:	ldr	x0, [x0, #8]
    52c0:	add	x0, x1, x0
    52c4:	ldr	x2, [sp, #40]
    52c8:	mov	x1, x0
    52cc:	mov	x0, x3
    52d0:	bl	5198 <xz_dec_lzma2_end+0x3c>
    52d4:	ldr	x0, [sp, #16]
    52d8:	ldr	x1, [x0, #8]
    52dc:	ldr	x0, [sp, #40]
    52e0:	add	x1, x1, x0
    52e4:	ldr	x0, [sp, #16]
    52e8:	str	x1, [x0, #8]
    52ec:	ldr	x0, [sp, #24]
    52f0:	ldr	x1, [x0, #280]
    52f4:	ldr	x0, [sp, #40]
    52f8:	add	x1, x1, x0
    52fc:	ldr	x0, [sp, #24]
    5300:	str	x1, [x0, #280]
    5304:	ldr	x0, [sp, #24]
    5308:	ldr	x1, [x0, #280]
    530c:	ldr	x0, [sp, #24]
    5310:	ldr	x0, [x0, #288]
    5314:	cmp	x1, x0
    5318:	b.ne	532c <xz_dec_lzma2_end+0x1d0>  // b.any
    531c:	ldr	x0, [sp, #24]
    5320:	str	xzr, [x0, #280]
    5324:	mov	w0, #0x1                   	// #1
    5328:	b	5330 <xz_dec_lzma2_end+0x1d4>
    532c:	mov	w0, #0x0                   	// #0
    5330:	ldp	x29, x30, [sp], #48
    5334:	ret
    5338:	sub	sp, sp, #0x30
    533c:	str	x0, [sp, #24]
    5340:	str	x1, [sp, #16]
    5344:	str	x2, [sp, #8]
    5348:	str	x3, [sp]
    534c:	ldr	x0, [sp, #24]
    5350:	ldr	w0, [x0, #4]
    5354:	cmp	w0, #0x0
    5358:	b.ne	5428 <xz_dec_lzma2_end+0x2cc>  // b.any
    535c:	ldr	x0, [sp, #24]
    5360:	str	xzr, [x0, #8]
    5364:	b	5428 <xz_dec_lzma2_end+0x2cc>
    5368:	ldr	x0, [sp, #8]
    536c:	ldr	x0, [x0]
    5370:	ldr	x1, [sp, #16]
    5374:	add	x0, x1, x0
    5378:	ldrb	w0, [x0]
    537c:	strb	w0, [sp, #47]
    5380:	ldr	x0, [sp, #8]
    5384:	ldr	x0, [x0]
    5388:	add	x1, x0, #0x1
    538c:	ldr	x0, [sp, #8]
    5390:	str	x1, [x0]
    5394:	ldr	x0, [sp, #24]
    5398:	ldr	x1, [x0, #8]
    539c:	ldrb	w0, [sp, #47]
    53a0:	and	x2, x0, #0x7f
    53a4:	ldr	x0, [sp, #24]
    53a8:	ldr	w0, [x0, #4]
    53ac:	lsl	x0, x2, x0
    53b0:	orr	x1, x1, x0
    53b4:	ldr	x0, [sp, #24]
    53b8:	str	x1, [x0, #8]
    53bc:	ldrsb	w0, [sp, #47]
    53c0:	cmp	w0, #0x0
    53c4:	b.lt	53fc <xz_dec_lzma2_end+0x2a0>  // b.tstop
    53c8:	ldrb	w0, [sp, #47]
    53cc:	cmp	w0, #0x0
    53d0:	b.ne	53ec <xz_dec_lzma2_end+0x290>  // b.any
    53d4:	ldr	x0, [sp, #24]
    53d8:	ldr	w0, [x0, #4]
    53dc:	cmp	w0, #0x0
    53e0:	b.eq	53ec <xz_dec_lzma2_end+0x290>  // b.none
    53e4:	mov	w0, #0x5                   	// #5
    53e8:	b	5440 <xz_dec_lzma2_end+0x2e4>
    53ec:	ldr	x0, [sp, #24]
    53f0:	str	wzr, [x0, #4]
    53f4:	mov	w0, #0x1                   	// #1
    53f8:	b	5440 <xz_dec_lzma2_end+0x2e4>
    53fc:	ldr	x0, [sp, #24]
    5400:	ldr	w0, [x0, #4]
    5404:	add	w1, w0, #0x7
    5408:	ldr	x0, [sp, #24]
    540c:	str	w1, [x0, #4]
    5410:	ldr	x0, [sp, #24]
    5414:	ldr	w0, [x0, #4]
    5418:	cmp	w0, #0x3f
    541c:	b.ne	5428 <xz_dec_lzma2_end+0x2cc>  // b.any
    5420:	mov	w0, #0x5                   	// #5
    5424:	b	5440 <xz_dec_lzma2_end+0x2e4>
    5428:	ldr	x0, [sp, #8]
    542c:	ldr	x0, [x0]
    5430:	ldr	x1, [sp]
    5434:	cmp	x1, x0
    5438:	b.hi	5368 <xz_dec_lzma2_end+0x20c>  // b.pmore
    543c:	mov	w0, #0x0                   	// #0
    5440:	add	sp, sp, #0x30
    5444:	ret
    5448:	stp	x29, x30, [sp, #-48]!
    544c:	mov	x29, sp
    5450:	str	x0, [sp, #24]
    5454:	str	x1, [sp, #16]
    5458:	ldr	x0, [sp, #16]
    545c:	ldr	x1, [x0, #8]
    5460:	ldr	x0, [sp, #24]
    5464:	str	x1, [x0, #16]
    5468:	ldr	x0, [sp, #16]
    546c:	ldr	x1, [x0, #32]
    5470:	ldr	x0, [sp, #24]
    5474:	str	x1, [x0, #24]
    5478:	ldr	x0, [sp, #24]
    547c:	ldr	w0, [x0, #1336]
    5480:	cmp	w0, #0x0
    5484:	b.eq	54b0 <xz_dec_lzma2_end+0x354>  // b.none
    5488:	ldr	x0, [sp, #24]
    548c:	ldr	x3, [x0, #1328]
    5490:	ldr	x0, [sp, #24]
    5494:	ldr	x0, [x0, #1320]
    5498:	ldr	x2, [sp, #16]
    549c:	mov	x1, x0
    54a0:	mov	x0, x3
    54a4:	bl	1880 <xz_dec_bcj_run>
    54a8:	str	w0, [sp, #44]
    54ac:	b	54c4 <xz_dec_lzma2_end+0x368>
    54b0:	ldr	x0, [sp, #24]
    54b4:	ldr	x0, [x0, #1320]
    54b8:	ldr	x1, [sp, #16]
    54bc:	bl	4a38 <xz_dec_lzma2_run>
    54c0:	str	w0, [sp, #44]
    54c4:	ldr	x0, [sp, #24]
    54c8:	ldr	x1, [x0, #184]
    54cc:	ldr	x0, [sp, #16]
    54d0:	ldr	x2, [x0, #8]
    54d4:	ldr	x0, [sp, #24]
    54d8:	ldr	x0, [x0, #16]
    54dc:	sub	x0, x2, x0
    54e0:	add	x1, x1, x0
    54e4:	ldr	x0, [sp, #24]
    54e8:	str	x1, [x0, #184]
    54ec:	ldr	x0, [sp, #24]
    54f0:	ldr	x1, [x0, #192]
    54f4:	ldr	x0, [sp, #16]
    54f8:	ldr	x2, [x0, #32]
    54fc:	ldr	x0, [sp, #24]
    5500:	ldr	x0, [x0, #24]
    5504:	sub	x0, x2, x0
    5508:	add	x1, x1, x0
    550c:	ldr	x0, [sp, #24]
    5510:	str	x1, [x0, #192]
    5514:	ldr	x0, [sp, #24]
    5518:	ldr	x1, [x0, #184]
    551c:	ldr	x0, [sp, #24]
    5520:	ldr	x0, [x0, #160]
    5524:	cmp	x1, x0
    5528:	b.hi	5544 <xz_dec_lzma2_end+0x3e8>  // b.pmore
    552c:	ldr	x0, [sp, #24]
    5530:	ldr	x1, [x0, #192]
    5534:	ldr	x0, [sp, #24]
    5538:	ldr	x0, [x0, #168]
    553c:	cmp	x1, x0
    5540:	b.ls	554c <xz_dec_lzma2_end+0x3f0>  // b.plast
    5544:	mov	w0, #0x5                   	// #5
    5548:	b	5728 <xz_dec_lzma2_end+0x5cc>
    554c:	ldr	x0, [sp, #24]
    5550:	ldr	x0, [x0, #120]
    5554:	cmp	x0, #0x0
    5558:	b.eq	55a8 <xz_dec_lzma2_end+0x44c>  // b.none
    555c:	ldr	x0, [sp, #24]
    5560:	ldr	x0, [x0, #120]
    5564:	ldr	x3, [x0, #48]
    5568:	ldr	x0, [sp, #24]
    556c:	ldr	x4, [x0, #104]
    5570:	ldr	x0, [sp, #16]
    5574:	ldr	x1, [x0, #24]
    5578:	ldr	x0, [sp, #24]
    557c:	ldr	x0, [x0, #24]
    5580:	add	x5, x1, x0
    5584:	ldr	x0, [sp, #16]
    5588:	ldr	x1, [x0, #32]
    558c:	ldr	x0, [sp, #24]
    5590:	ldr	x0, [x0, #24]
    5594:	sub	x0, x1, x0
    5598:	mov	x2, x0
    559c:	mov	x1, x5
    55a0:	mov	x0, x4
    55a4:	blr	x3
    55a8:	ldr	x0, [sp, #24]
    55ac:	ldr	x0, [x0, #128]
    55b0:	cmp	x0, #0x0
    55b4:	b.eq	5604 <xz_dec_lzma2_end+0x4a8>  // b.none
    55b8:	ldr	x0, [sp, #24]
    55bc:	ldr	x0, [x0, #128]
    55c0:	ldr	x3, [x0, #48]
    55c4:	ldr	x0, [sp, #24]
    55c8:	ldr	x4, [x0, #112]
    55cc:	ldr	x0, [sp, #16]
    55d0:	ldr	x1, [x0, #24]
    55d4:	ldr	x0, [sp, #24]
    55d8:	ldr	x0, [x0, #24]
    55dc:	add	x5, x1, x0
    55e0:	ldr	x0, [sp, #16]
    55e4:	ldr	x1, [x0, #32]
    55e8:	ldr	x0, [sp, #24]
    55ec:	ldr	x0, [x0, #24]
    55f0:	sub	x0, x1, x0
    55f4:	mov	x2, x0
    55f8:	mov	x1, x5
    55fc:	mov	x0, x4
    5600:	blr	x3
    5604:	ldr	w0, [sp, #44]
    5608:	cmp	w0, #0x1
    560c:	b.ne	5724 <xz_dec_lzma2_end+0x5c8>  // b.any
    5610:	ldr	x0, [sp, #24]
    5614:	ldr	x0, [x0, #160]
    5618:	cmn	x0, #0x1
    561c:	b.eq	5640 <xz_dec_lzma2_end+0x4e4>  // b.none
    5620:	ldr	x0, [sp, #24]
    5624:	ldr	x1, [x0, #160]
    5628:	ldr	x0, [sp, #24]
    562c:	ldr	x0, [x0, #184]
    5630:	cmp	x1, x0
    5634:	b.eq	5640 <xz_dec_lzma2_end+0x4e4>  // b.none
    5638:	mov	w0, #0x5                   	// #5
    563c:	b	5728 <xz_dec_lzma2_end+0x5cc>
    5640:	ldr	x0, [sp, #24]
    5644:	ldr	x0, [x0, #168]
    5648:	cmn	x0, #0x1
    564c:	b.eq	5670 <xz_dec_lzma2_end+0x514>  // b.none
    5650:	ldr	x0, [sp, #24]
    5654:	ldr	x1, [x0, #168]
    5658:	ldr	x0, [sp, #24]
    565c:	ldr	x0, [x0, #192]
    5660:	cmp	x1, x0
    5664:	b.eq	5670 <xz_dec_lzma2_end+0x514>  // b.none
    5668:	mov	w0, #0x5                   	// #5
    566c:	b	5728 <xz_dec_lzma2_end+0x5cc>
    5670:	ldr	x0, [sp, #24]
    5674:	ldr	x1, [x0, #208]
    5678:	ldr	x0, [sp, #24]
    567c:	ldr	w0, [x0, #176]
    5680:	mov	w2, w0
    5684:	ldr	x0, [sp, #24]
    5688:	ldr	x0, [x0, #184]
    568c:	add	x0, x2, x0
    5690:	add	x1, x1, x0
    5694:	ldr	x0, [sp, #24]
    5698:	str	x1, [x0, #208]
    569c:	ldr	x0, [sp, #24]
    56a0:	ldr	x1, [x0, #208]
    56a4:	ldr	x0, [sp, #24]
    56a8:	ldr	x0, [x0, #144]
    56ac:	add	x1, x1, x0
    56b0:	ldr	x0, [sp, #24]
    56b4:	str	x1, [x0, #208]
    56b8:	ldr	x0, [sp, #24]
    56bc:	ldr	x1, [x0, #216]
    56c0:	ldr	x0, [sp, #24]
    56c4:	ldr	x0, [x0, #192]
    56c8:	add	x1, x1, x0
    56cc:	ldr	x0, [sp, #24]
    56d0:	str	x1, [x0, #216]
    56d4:	ldr	x0, [sp, #24]
    56d8:	ldr	x0, [x0, #120]
    56dc:	cmp	x0, #0x0
    56e0:	b.eq	5710 <xz_dec_lzma2_end+0x5b4>  // b.none
    56e4:	ldr	x0, [sp, #24]
    56e8:	ldr	x0, [x0, #120]
    56ec:	ldr	x3, [x0, #48]
    56f0:	ldr	x0, [sp, #24]
    56f4:	ldr	x4, [x0, #224]
    56f8:	ldr	x0, [sp, #24]
    56fc:	add	x0, x0, #0xd0
    5700:	mov	x2, #0x10                  	// #16
    5704:	mov	x1, x0
    5708:	mov	x0, x4
    570c:	blr	x3
    5710:	ldr	x0, [sp, #24]
    5714:	ldr	x0, [x0, #200]
    5718:	add	x1, x0, #0x1
    571c:	ldr	x0, [sp, #24]
    5720:	str	x1, [x0, #200]
    5724:	ldr	w0, [sp, #44]
    5728:	ldp	x29, x30, [sp], #48
    572c:	ret
    5730:	stp	x29, x30, [sp, #-48]!
    5734:	mov	x29, sp
    5738:	str	x0, [sp, #24]
    573c:	str	x1, [sp, #16]
    5740:	ldr	x0, [sp, #16]
    5744:	ldr	x1, [x0, #8]
    5748:	ldr	x0, [sp, #24]
    574c:	ldr	x0, [x0, #16]
    5750:	sub	x0, x1, x0
    5754:	str	x0, [sp, #40]
    5758:	ldr	x0, [sp, #24]
    575c:	ldr	x1, [x0, #240]
    5760:	ldr	x0, [sp, #40]
    5764:	add	x1, x1, x0
    5768:	ldr	x0, [sp, #24]
    576c:	str	x1, [x0, #240]
    5770:	ldr	x0, [sp, #24]
    5774:	ldr	x0, [x0, #120]
    5778:	cmp	x0, #0x0
    577c:	b.eq	57b8 <xz_dec_lzma2_end+0x65c>  // b.none
    5780:	ldr	x0, [sp, #24]
    5784:	ldr	x0, [x0, #120]
    5788:	ldr	x3, [x0, #48]
    578c:	ldr	x0, [sp, #24]
    5790:	ldr	x4, [x0, #104]
    5794:	ldr	x0, [sp, #16]
    5798:	ldr	x1, [x0]
    579c:	ldr	x0, [sp, #24]
    57a0:	ldr	x0, [x0, #16]
    57a4:	add	x0, x1, x0
    57a8:	ldr	x2, [sp, #40]
    57ac:	mov	x1, x0
    57b0:	mov	x0, x4
    57b4:	blr	x3
    57b8:	ldr	x0, [sp, #24]
    57bc:	ldr	x0, [x0, #128]
    57c0:	cmp	x0, #0x0
    57c4:	b.eq	5800 <xz_dec_lzma2_end+0x6a4>  // b.none
    57c8:	ldr	x0, [sp, #24]
    57cc:	ldr	x0, [x0, #128]
    57d0:	ldr	x3, [x0, #48]
    57d4:	ldr	x0, [sp, #24]
    57d8:	ldr	x4, [x0, #112]
    57dc:	ldr	x0, [sp, #16]
    57e0:	ldr	x1, [x0]
    57e4:	ldr	x0, [sp, #24]
    57e8:	ldr	x0, [x0, #16]
    57ec:	add	x0, x1, x0
    57f0:	ldr	x2, [sp, #40]
    57f4:	mov	x1, x0
    57f8:	mov	x0, x4
    57fc:	blr	x3
    5800:	nop
    5804:	ldp	x29, x30, [sp], #48
    5808:	ret
    580c:	stp	x29, x30, [sp, #-48]!
    5810:	mov	x29, sp
    5814:	str	x0, [sp, #24]
    5818:	str	x1, [sp, #16]
    581c:	ldr	x0, [sp, #16]
    5820:	ldr	x1, [x0]
    5824:	ldr	x0, [sp, #16]
    5828:	add	x2, x0, #0x8
    582c:	ldr	x0, [sp, #16]
    5830:	ldr	x0, [x0, #16]
    5834:	mov	x3, x0
    5838:	ldr	x0, [sp, #24]
    583c:	bl	5338 <xz_dec_lzma2_end+0x1dc>
    5840:	str	w0, [sp, #44]
    5844:	ldr	w0, [sp, #44]
    5848:	cmp	w0, #0x1
    584c:	b.eq	5864 <xz_dec_lzma2_end+0x708>  // b.none
    5850:	ldr	x1, [sp, #16]
    5854:	ldr	x0, [sp, #24]
    5858:	bl	5730 <xz_dec_lzma2_end+0x5d4>
    585c:	ldr	w0, [sp, #44]
    5860:	b	598c <xz_dec_lzma2_end+0x830>
    5864:	ldr	x0, [sp, #24]
    5868:	ldr	w0, [x0, #232]
    586c:	cmp	w0, #0x2
    5870:	b.eq	58fc <xz_dec_lzma2_end+0x7a0>  // b.none
    5874:	cmp	w0, #0x2
    5878:	b.hi	5978 <xz_dec_lzma2_end+0x81c>  // b.pmore
    587c:	cmp	w0, #0x0
    5880:	b.eq	5890 <xz_dec_lzma2_end+0x734>  // b.none
    5884:	cmp	w0, #0x1
    5888:	b.eq	58d0 <xz_dec_lzma2_end+0x774>  // b.none
    588c:	b	5978 <xz_dec_lzma2_end+0x81c>
    5890:	ldr	x0, [sp, #24]
    5894:	ldr	x1, [x0, #8]
    5898:	ldr	x0, [sp, #24]
    589c:	str	x1, [x0, #248]
    58a0:	ldr	x0, [sp, #24]
    58a4:	ldr	x1, [x0, #248]
    58a8:	ldr	x0, [sp, #24]
    58ac:	ldr	x0, [x0, #200]
    58b0:	cmp	x1, x0
    58b4:	b.eq	58c0 <xz_dec_lzma2_end+0x764>  // b.none
    58b8:	mov	w0, #0x5                   	// #5
    58bc:	b	598c <xz_dec_lzma2_end+0x830>
    58c0:	ldr	x0, [sp, #24]
    58c4:	mov	w1, #0x1                   	// #1
    58c8:	str	w1, [x0, #232]
    58cc:	b	5978 <xz_dec_lzma2_end+0x81c>
    58d0:	ldr	x0, [sp, #24]
    58d4:	ldr	x1, [x0, #256]
    58d8:	ldr	x0, [sp, #24]
    58dc:	ldr	x0, [x0, #8]
    58e0:	add	x1, x1, x0
    58e4:	ldr	x0, [sp, #24]
    58e8:	str	x1, [x0, #256]
    58ec:	ldr	x0, [sp, #24]
    58f0:	mov	w1, #0x2                   	// #2
    58f4:	str	w1, [x0, #232]
    58f8:	b	5978 <xz_dec_lzma2_end+0x81c>
    58fc:	ldr	x0, [sp, #24]
    5900:	ldr	x1, [x0, #264]
    5904:	ldr	x0, [sp, #24]
    5908:	ldr	x0, [x0, #8]
    590c:	add	x1, x1, x0
    5910:	ldr	x0, [sp, #24]
    5914:	str	x1, [x0, #264]
    5918:	ldr	x0, [sp, #24]
    591c:	ldr	x0, [x0, #120]
    5920:	cmp	x0, #0x0
    5924:	b.eq	5954 <xz_dec_lzma2_end+0x7f8>  // b.none
    5928:	ldr	x0, [sp, #24]
    592c:	ldr	x0, [x0, #120]
    5930:	ldr	x3, [x0, #48]
    5934:	ldr	x0, [sp, #24]
    5938:	ldr	x4, [x0, #272]
    593c:	ldr	x0, [sp, #24]
    5940:	add	x0, x0, #0x100
    5944:	mov	x2, #0x10                  	// #16
    5948:	mov	x1, x0
    594c:	mov	x0, x4
    5950:	blr	x3
    5954:	ldr	x0, [sp, #24]
    5958:	ldr	x0, [x0, #248]
    595c:	sub	x1, x0, #0x1
    5960:	ldr	x0, [sp, #24]
    5964:	str	x1, [x0, #248]
    5968:	ldr	x0, [sp, #24]
    596c:	mov	w1, #0x1                   	// #1
    5970:	str	w1, [x0, #232]
    5974:	nop
    5978:	ldr	x0, [sp, #24]
    597c:	ldr	x0, [x0, #248]
    5980:	cmp	x0, #0x0
    5984:	b.ne	581c <xz_dec_lzma2_end+0x6c0>  // b.any
    5988:	mov	w0, #0x1                   	// #1
    598c:	ldp	x29, x30, [sp], #48
    5990:	ret
    5994:	stp	x29, x30, [sp, #-96]!
    5998:	mov	x29, sp
    599c:	str	x19, [sp, #16]
    59a0:	str	x0, [sp, #56]
    59a4:	str	x1, [sp, #48]
    59a8:	str	w2, [sp, #44]
    59ac:	ldr	w0, [sp, #44]
    59b0:	cmp	w0, #0x0
    59b4:	b.eq	59c4 <xz_dec_lzma2_end+0x868>  // b.none
    59b8:	ldr	x0, [sp, #56]
    59bc:	ldr	x0, [x0, #128]
    59c0:	b	59cc <xz_dec_lzma2_end+0x870>
    59c4:	ldr	x0, [sp, #56]
    59c8:	ldr	x0, [x0, #120]
    59cc:	str	x0, [sp, #88]
    59d0:	ldr	w0, [sp, #44]
    59d4:	cmp	w0, #0x0
    59d8:	b.eq	59e8 <xz_dec_lzma2_end+0x88c>  // b.none
    59dc:	ldr	x0, [sp, #56]
    59e0:	ldr	x0, [x0, #112]
    59e4:	b	59f0 <xz_dec_lzma2_end+0x894>
    59e8:	ldr	x0, [sp, #56]
    59ec:	ldr	x0, [x0, #104]
    59f0:	str	x0, [sp, #80]
    59f4:	ldr	x0, [sp, #56]
    59f8:	ldr	w0, [x0, #96]
    59fc:	cmp	w0, #0x0
    5a00:	b.ne	5ad8 <xz_dec_lzma2_end+0x97c>  // b.any
    5a04:	ldr	x0, [sp, #88]
    5a08:	cmp	x0, #0x0
    5a0c:	b.eq	5ad8 <xz_dec_lzma2_end+0x97c>  // b.none
    5a10:	ldr	x0, [sp, #88]
    5a14:	ldr	x0, [x0, #32]
    5a18:	cmp	x0, #0x40
    5a1c:	b.hi	5ad8 <xz_dec_lzma2_end+0x97c>  // b.pmore
    5a20:	ldr	x0, [sp, #88]
    5a24:	ldr	x1, [x0, #56]
    5a28:	ldr	x0, [sp, #80]
    5a2c:	blr	x1
    5a30:	ldr	x0, [sp, #56]
    5a34:	add	x19, x0, #0x20
    5a38:	ldr	x0, [sp, #88]
    5a3c:	ldr	x1, [x0, #64]
    5a40:	ldr	x0, [sp, #80]
    5a44:	blr	x1
    5a48:	mov	x1, x0
    5a4c:	ldr	x0, [sp, #88]
    5a50:	ldr	x0, [x0, #32]
    5a54:	mov	x2, x0
    5a58:	mov	x0, x19
    5a5c:	bl	5198 <xz_dec_lzma2_end+0x3c>
    5a60:	ldr	x0, [sp, #56]
    5a64:	mov	w1, #0x1                   	// #1
    5a68:	str	w1, [x0, #96]
    5a6c:	ldr	x0, [sp, #56]
    5a70:	ldrb	w0, [x0, #136]
    5a74:	cmp	w0, #0x1
    5a78:	b.eq	5a88 <xz_dec_lzma2_end+0x92c>  // b.none
    5a7c:	ldr	w0, [sp, #44]
    5a80:	cmp	w0, #0x0
    5a84:	b.eq	5ad8 <xz_dec_lzma2_end+0x97c>  // b.none
    5a88:	ldr	x0, [sp, #56]
    5a8c:	ldrb	w0, [x0, #32]
    5a90:	strb	w0, [sp, #79]
    5a94:	ldr	x0, [sp, #56]
    5a98:	ldrb	w1, [x0, #35]
    5a9c:	ldr	x0, [sp, #56]
    5aa0:	strb	w1, [x0, #32]
    5aa4:	ldr	x0, [sp, #56]
    5aa8:	ldrb	w1, [sp, #79]
    5aac:	strb	w1, [x0, #35]
    5ab0:	ldr	x0, [sp, #56]
    5ab4:	ldrb	w0, [x0, #33]
    5ab8:	strb	w0, [sp, #79]
    5abc:	ldr	x0, [sp, #56]
    5ac0:	ldrb	w1, [x0, #34]
    5ac4:	ldr	x0, [sp, #56]
    5ac8:	strb	w1, [x0, #33]
    5acc:	ldr	x0, [sp, #56]
    5ad0:	ldrb	w1, [sp, #79]
    5ad4:	strb	w1, [x0, #34]
    5ad8:	ldr	x0, [sp, #48]
    5adc:	ldr	x1, [x0, #8]
    5ae0:	ldr	x0, [sp, #48]
    5ae4:	ldr	x0, [x0, #16]
    5ae8:	cmp	x1, x0
    5aec:	b.ne	5af8 <xz_dec_lzma2_end+0x99c>  // b.any
    5af0:	mov	w0, #0x0                   	// #0
    5af4:	b	5c5c <xz_dec_lzma2_end+0xb00>
    5af8:	ldr	w0, [sp, #44]
    5afc:	cmp	w0, #0x0
    5b00:	b.ne	5bc4 <xz_dec_lzma2_end+0xa68>  // b.any
    5b04:	ldr	x0, [sp, #56]
    5b08:	ldr	x0, [x0, #144]
    5b0c:	cmp	x0, #0x0
    5b10:	b.ne	5bc4 <xz_dec_lzma2_end+0xa68>  // b.any
    5b14:	ldr	x0, [sp, #56]
    5b18:	ldr	w0, [x0, #4]
    5b1c:	add	w1, w0, #0x8
    5b20:	ldr	x0, [sp, #56]
    5b24:	str	w1, [x0, #4]
    5b28:	b	5bc4 <xz_dec_lzma2_end+0xa68>
    5b2c:	ldr	x0, [sp, #48]
    5b30:	ldr	x1, [x0, #8]
    5b34:	ldr	x0, [sp, #48]
    5b38:	ldr	x0, [x0, #16]
    5b3c:	cmp	x1, x0
    5b40:	b.ne	5b4c <xz_dec_lzma2_end+0x9f0>  // b.any
    5b44:	mov	w0, #0x0                   	// #0
    5b48:	b	5c5c <xz_dec_lzma2_end+0xb00>
    5b4c:	ldr	x0, [sp, #88]
    5b50:	cmp	x0, #0x0
    5b54:	b.eq	5b9c <xz_dec_lzma2_end+0xa40>  // b.none
    5b58:	ldr	x0, [sp, #56]
    5b5c:	ldr	w0, [x0, #4]
    5b60:	lsr	w0, w0, #3
    5b64:	ldr	x1, [sp, #56]
    5b68:	mov	w0, w0
    5b6c:	add	x0, x1, x0
    5b70:	ldrb	w1, [x0, #32]
    5b74:	ldr	x0, [sp, #48]
    5b78:	ldr	x2, [x0]
    5b7c:	ldr	x0, [sp, #48]
    5b80:	ldr	x0, [x0, #8]
    5b84:	add	x0, x2, x0
    5b88:	ldrb	w0, [x0]
    5b8c:	cmp	w1, w0
    5b90:	b.eq	5b9c <xz_dec_lzma2_end+0xa40>  // b.none
    5b94:	mov	w0, #0x5                   	// #5
    5b98:	b	5c5c <xz_dec_lzma2_end+0xb00>
    5b9c:	ldr	x0, [sp, #48]
    5ba0:	ldr	x0, [x0, #8]
    5ba4:	add	x1, x0, #0x1
    5ba8:	ldr	x0, [sp, #48]
    5bac:	str	x1, [x0, #8]
    5bb0:	ldr	x0, [sp, #56]
    5bb4:	ldr	w0, [x0, #4]
    5bb8:	add	w1, w0, #0x8
    5bbc:	ldr	x0, [sp, #56]
    5bc0:	str	w1, [x0, #4]
    5bc4:	ldr	x0, [sp, #56]
    5bc8:	ldr	w0, [x0, #4]
    5bcc:	mov	w1, w0
    5bd0:	ldr	w0, [sp, #44]
    5bd4:	cmp	w0, #0x0
    5bd8:	b.ne	5bec <xz_dec_lzma2_end+0xa90>  // b.any
    5bdc:	ldr	x0, [sp, #56]
    5be0:	ldr	x0, [x0, #144]
    5be4:	lsl	x0, x0, #3
    5be8:	b	5bf0 <xz_dec_lzma2_end+0xa94>
    5bec:	mov	x0, #0x20                  	// #32
    5bf0:	cmp	x0, x1
    5bf4:	b.hi	5b2c <xz_dec_lzma2_end+0x9d0>  // b.pmore
    5bf8:	ldr	x0, [sp, #56]
    5bfc:	ldr	x0, [x0, #120]
    5c00:	cmp	x0, #0x0
    5c04:	b.eq	5c20 <xz_dec_lzma2_end+0xac4>  // b.none
    5c08:	ldr	x0, [sp, #56]
    5c0c:	ldr	x0, [x0, #120]
    5c10:	ldr	x1, [x0, #40]
    5c14:	ldr	x0, [sp, #56]
    5c18:	ldr	x0, [x0, #104]
    5c1c:	blr	x1
    5c20:	ldr	x0, [sp, #56]
    5c24:	ldr	x0, [x0, #128]
    5c28:	cmp	x0, #0x0
    5c2c:	b.eq	5c48 <xz_dec_lzma2_end+0xaec>  // b.none
    5c30:	ldr	x0, [sp, #56]
    5c34:	ldr	x0, [x0, #128]
    5c38:	ldr	x1, [x0, #40]
    5c3c:	ldr	x0, [sp, #56]
    5c40:	ldr	x0, [x0, #112]
    5c44:	blr	x1
    5c48:	ldr	x0, [sp, #56]
    5c4c:	str	wzr, [x0, #96]
    5c50:	ldr	x0, [sp, #56]
    5c54:	str	wzr, [x0, #4]
    5c58:	mov	w0, #0x1                   	// #1
    5c5c:	ldr	x19, [sp, #16]
    5c60:	ldp	x29, x30, [sp], #96
    5c64:	ret
    5c68:	stp	x29, x30, [sp, #-48]!
    5c6c:	mov	x29, sp
    5c70:	str	x0, [sp, #24]
    5c74:	ldr	x0, [sp, #24]
    5c78:	add	x3, x0, #0x128
    5c7c:	mov	x2, #0x6                   	// #6
    5c80:	adrp	x0, 0 <grub_mod_init-0x970>
    5c84:	add	x0, x0, #0x0
    5c88:	ldr	x1, [x0]
    5c8c:	mov	x0, x3
    5c90:	bl	0 <grub_memcmp>
    5c94:	cmp	w0, #0x0
    5c98:	b.eq	5ca4 <xz_dec_lzma2_end+0xb48>  // b.none
    5c9c:	mov	w0, #0x3                   	// #3
    5ca0:	b	603c <xz_dec_lzma2_end+0xee0>
    5ca4:	adrp	x0, 0 <grub_mod_init-0x970>
    5ca8:	add	x0, x0, #0x0
    5cac:	ldr	x0, [x0]
    5cb0:	bl	0 <grub_crypto_lookup_md_by_name>
    5cb4:	mov	x1, x0
    5cb8:	ldr	x0, [sp, #24]
    5cbc:	str	x1, [x0, #128]
    5cc0:	ldr	x0, [sp, #24]
    5cc4:	ldr	x0, [x0, #128]
    5cc8:	cmp	x0, #0x0
    5ccc:	b.eq	5d70 <xz_dec_lzma2_end+0xc14>  // b.none
    5cd0:	ldr	x0, [sp, #24]
    5cd4:	ldr	x0, [x0, #128]
    5cd8:	ldr	x0, [x0, #32]
    5cdc:	cmp	x0, #0x4
    5ce0:	b.eq	5cec <xz_dec_lzma2_end+0xb90>  // b.none
    5ce4:	mov	w0, #0x5                   	// #5
    5ce8:	b	603c <xz_dec_lzma2_end+0xee0>
    5cec:	ldr	x0, [sp, #24]
    5cf0:	ldr	x4, [x0, #128]
    5cf4:	ldr	x0, [sp, #24]
    5cf8:	add	x0, x0, #0x128
    5cfc:	add	x1, x0, #0x6
    5d00:	add	x0, sp, #0x20
    5d04:	mov	x3, #0x2                   	// #2
    5d08:	mov	x2, x1
    5d0c:	mov	x1, x0
    5d10:	mov	x0, x4
    5d14:	bl	0 <grub_crypto_hash>
    5d18:	ldr	x0, [sp, #24]
    5d1c:	ldrb	w0, [x0, #307]
    5d20:	strb	w0, [sp, #40]
    5d24:	ldr	x0, [sp, #24]
    5d28:	ldrb	w0, [x0, #306]
    5d2c:	strb	w0, [sp, #41]
    5d30:	ldr	x0, [sp, #24]
    5d34:	ldrb	w0, [x0, #305]
    5d38:	strb	w0, [sp, #42]
    5d3c:	ldr	x0, [sp, #24]
    5d40:	ldrb	w0, [x0, #304]
    5d44:	strb	w0, [sp, #43]
    5d48:	ldr	x0, [sp, #24]
    5d4c:	ldr	x0, [x0, #128]
    5d50:	ldr	x2, [x0, #32]
    5d54:	add	x1, sp, #0x20
    5d58:	add	x0, sp, #0x28
    5d5c:	bl	0 <grub_memcmp>
    5d60:	cmp	w0, #0x0
    5d64:	b.eq	5d70 <xz_dec_lzma2_end+0xc14>  // b.none
    5d68:	mov	w0, #0x5                   	// #5
    5d6c:	b	603c <xz_dec_lzma2_end+0xee0>
    5d70:	ldr	x0, [sp, #24]
    5d74:	ldrb	w0, [x0, #302]
    5d78:	cmp	w0, #0x0
    5d7c:	b.ne	5dd0 <xz_dec_lzma2_end+0xc74>  // b.any
    5d80:	ldr	x0, [sp, #24]
    5d84:	ldrb	w0, [x0, #303]
    5d88:	cmp	w0, #0xa
    5d8c:	b.hi	5dd0 <xz_dec_lzma2_end+0xc74>  // b.pmore
    5d90:	ldr	x0, [sp, #24]
    5d94:	ldrb	w0, [x0, #303]
    5d98:	mov	w2, w0
    5d9c:	adrp	x0, 0 <grub_mod_init-0x970>
    5da0:	add	x0, x0, #0x0
    5da4:	ldr	x1, [x0]
    5da8:	sxtw	x0, w2
    5dac:	lsl	x0, x0, #4
    5db0:	add	x0, x1, x0
    5db4:	ldr	x0, [x0]
    5db8:	cmp	x0, #0x0
    5dbc:	b.ne	5dd8 <xz_dec_lzma2_end+0xc7c>  // b.any
    5dc0:	ldr	x0, [sp, #24]
    5dc4:	ldrb	w0, [x0, #303]
    5dc8:	cmp	w0, #0x0
    5dcc:	b.eq	5dd8 <xz_dec_lzma2_end+0xc7c>  // b.none
    5dd0:	mov	w0, #0x4                   	// #4
    5dd4:	b	603c <xz_dec_lzma2_end+0xee0>
    5dd8:	ldr	x0, [sp, #24]
    5ddc:	ldrb	w1, [x0, #303]
    5de0:	ldr	x0, [sp, #24]
    5de4:	strb	w1, [x0, #136]
    5de8:	ldr	x0, [sp, #24]
    5dec:	ldr	x0, [x0, #128]
    5df0:	cmp	x0, #0x0
    5df4:	b.eq	5e44 <xz_dec_lzma2_end+0xce8>  // b.none
    5df8:	ldr	x0, [sp, #24]
    5dfc:	ldr	x0, [x0, #128]
    5e00:	ldr	x0, [x0, #72]
    5e04:	bl	51e4 <xz_dec_lzma2_end+0x88>
    5e08:	mov	x1, x0
    5e0c:	ldr	x0, [sp, #24]
    5e10:	str	x1, [x0, #112]
    5e14:	ldr	x0, [sp, #24]
    5e18:	ldr	x0, [x0, #112]
    5e1c:	cmp	x0, #0x0
    5e20:	b.ne	5e2c <xz_dec_lzma2_end+0xcd0>  // b.any
    5e24:	mov	w0, #0x2                   	// #2
    5e28:	b	603c <xz_dec_lzma2_end+0xee0>
    5e2c:	ldr	x0, [sp, #24]
    5e30:	ldr	x0, [x0, #128]
    5e34:	ldr	x1, [x0, #40]
    5e38:	ldr	x0, [sp, #24]
    5e3c:	ldr	x0, [x0, #112]
    5e40:	blr	x1
    5e44:	ldr	x0, [sp, #24]
    5e48:	ldrb	w0, [x0, #303]
    5e4c:	cmp	w0, #0x0
    5e50:	b.eq	6020 <xz_dec_lzma2_end+0xec4>  // b.none
    5e54:	ldr	x0, [sp, #24]
    5e58:	ldrb	w0, [x0, #303]
    5e5c:	mov	w2, w0
    5e60:	adrp	x0, 0 <grub_mod_init-0x970>
    5e64:	add	x0, x0, #0x0
    5e68:	ldr	x1, [x0]
    5e6c:	sxtw	x0, w2
    5e70:	lsl	x0, x0, #4
    5e74:	add	x0, x1, x0
    5e78:	ldr	x1, [x0, #8]
    5e7c:	ldr	x0, [sp, #24]
    5e80:	str	x1, [x0, #144]
    5e84:	ldr	x0, [sp, #24]
    5e88:	ldrb	w0, [x0, #303]
    5e8c:	mov	w2, w0
    5e90:	adrp	x0, 0 <grub_mod_init-0x970>
    5e94:	add	x0, x0, #0x0
    5e98:	ldr	x1, [x0]
    5e9c:	sxtw	x0, w2
    5ea0:	lsl	x0, x0, #4
    5ea4:	add	x0, x1, x0
    5ea8:	ldr	x0, [x0]
    5eac:	bl	0 <grub_crypto_lookup_md_by_name>
    5eb0:	mov	x1, x0
    5eb4:	ldr	x0, [sp, #24]
    5eb8:	str	x1, [x0, #120]
    5ebc:	ldr	x0, [sp, #24]
    5ec0:	ldr	x0, [x0, #120]
    5ec4:	cmp	x0, #0x0
    5ec8:	b.eq	6030 <xz_dec_lzma2_end+0xed4>  // b.none
    5ecc:	ldr	x0, [sp, #24]
    5ed0:	ldr	x0, [x0, #120]
    5ed4:	ldr	x1, [x0, #32]
    5ed8:	ldr	x0, [sp, #24]
    5edc:	ldr	x0, [x0, #144]
    5ee0:	cmp	x1, x0
    5ee4:	b.eq	5ef0 <xz_dec_lzma2_end+0xd94>  // b.none
    5ee8:	mov	w0, #0x4                   	// #4
    5eec:	b	603c <xz_dec_lzma2_end+0xee0>
    5ef0:	ldr	x0, [sp, #24]
    5ef4:	ldr	x0, [x0, #120]
    5ef8:	ldr	x0, [x0, #72]
    5efc:	bl	51e4 <xz_dec_lzma2_end+0x88>
    5f00:	mov	x1, x0
    5f04:	ldr	x0, [sp, #24]
    5f08:	str	x1, [x0, #104]
    5f0c:	ldr	x0, [sp, #24]
    5f10:	ldr	x0, [x0, #104]
    5f14:	cmp	x0, #0x0
    5f18:	b.ne	5f30 <xz_dec_lzma2_end+0xdd4>  // b.any
    5f1c:	ldr	x0, [sp, #24]
    5f20:	ldr	x0, [x0, #112]
    5f24:	bl	51c4 <xz_dec_lzma2_end+0x68>
    5f28:	mov	w0, #0x2                   	// #2
    5f2c:	b	603c <xz_dec_lzma2_end+0xee0>
    5f30:	ldr	x0, [sp, #24]
    5f34:	ldr	x0, [x0, #120]
    5f38:	ldr	x0, [x0, #72]
    5f3c:	bl	51e4 <xz_dec_lzma2_end+0x88>
    5f40:	mov	x1, x0
    5f44:	ldr	x0, [sp, #24]
    5f48:	str	x1, [x0, #272]
    5f4c:	ldr	x0, [sp, #24]
    5f50:	ldr	x0, [x0, #272]
    5f54:	cmp	x0, #0x0
    5f58:	b.ne	5f7c <xz_dec_lzma2_end+0xe20>  // b.any
    5f5c:	ldr	x0, [sp, #24]
    5f60:	ldr	x0, [x0, #104]
    5f64:	bl	51c4 <xz_dec_lzma2_end+0x68>
    5f68:	ldr	x0, [sp, #24]
    5f6c:	ldr	x0, [x0, #112]
    5f70:	bl	51c4 <xz_dec_lzma2_end+0x68>
    5f74:	mov	w0, #0x2                   	// #2
    5f78:	b	603c <xz_dec_lzma2_end+0xee0>
    5f7c:	ldr	x0, [sp, #24]
    5f80:	ldr	x0, [x0, #120]
    5f84:	ldr	x0, [x0, #72]
    5f88:	bl	51e4 <xz_dec_lzma2_end+0x88>
    5f8c:	mov	x1, x0
    5f90:	ldr	x0, [sp, #24]
    5f94:	str	x1, [x0, #224]
    5f98:	ldr	x0, [sp, #24]
    5f9c:	ldr	x0, [x0, #224]
    5fa0:	cmp	x0, #0x0
    5fa4:	b.ne	5fd4 <xz_dec_lzma2_end+0xe78>  // b.any
    5fa8:	ldr	x0, [sp, #24]
    5fac:	ldr	x0, [x0, #272]
    5fb0:	bl	51c4 <xz_dec_lzma2_end+0x68>
    5fb4:	ldr	x0, [sp, #24]
    5fb8:	ldr	x0, [x0, #104]
    5fbc:	bl	51c4 <xz_dec_lzma2_end+0x68>
    5fc0:	ldr	x0, [sp, #24]
    5fc4:	ldr	x0, [x0, #112]
    5fc8:	bl	51c4 <xz_dec_lzma2_end+0x68>
    5fcc:	mov	w0, #0x2                   	// #2
    5fd0:	b	603c <xz_dec_lzma2_end+0xee0>
    5fd4:	ldr	x0, [sp, #24]
    5fd8:	ldr	x0, [x0, #120]
    5fdc:	ldr	x1, [x0, #40]
    5fe0:	ldr	x0, [sp, #24]
    5fe4:	ldr	x0, [x0, #104]
    5fe8:	blr	x1
    5fec:	ldr	x0, [sp, #24]
    5ff0:	ldr	x0, [x0, #120]
    5ff4:	ldr	x1, [x0, #40]
    5ff8:	ldr	x0, [sp, #24]
    5ffc:	ldr	x0, [x0, #272]
    6000:	blr	x1
    6004:	ldr	x0, [sp, #24]
    6008:	ldr	x0, [x0, #120]
    600c:	ldr	x1, [x0, #40]
    6010:	ldr	x0, [sp, #24]
    6014:	ldr	x0, [x0, #224]
    6018:	blr	x1
    601c:	b	6030 <xz_dec_lzma2_end+0xed4>
    6020:	ldr	x0, [sp, #24]
    6024:	str	xzr, [x0, #120]
    6028:	ldr	x0, [sp, #24]
    602c:	str	xzr, [x0, #144]
    6030:	ldr	x0, [sp, #24]
    6034:	str	wzr, [x0, #96]
    6038:	mov	w0, #0x0                   	// #0
    603c:	ldp	x29, x30, [sp], #48
    6040:	ret
    6044:	nop
	...
    6060:	stp	x29, x30, [sp, #-64]!
    6064:	mov	x29, sp
    6068:	str	x19, [sp, #16]
    606c:	str	x0, [sp, #40]
    6070:	ldr	x0, [sp, #40]
    6074:	add	x0, x0, #0x128
    6078:	add	x3, x0, #0xa
    607c:	mov	x2, #0x2                   	// #2
    6080:	adrp	x0, 0 <grub_mod_init-0x970>
    6084:	add	x0, x0, #0x0
    6088:	ldr	x1, [x0]
    608c:	mov	x0, x3
    6090:	bl	0 <grub_memcmp>
    6094:	cmp	w0, #0x0
    6098:	b.eq	60a4 <xz_dec_lzma2_end+0xf48>  // b.none
    609c:	mov	w0, #0x5                   	// #5
    60a0:	b	61b8 <xz_dec_lzma2_end+0x105c>
    60a4:	ldr	x0, [sp, #40]
    60a8:	ldr	x0, [x0, #128]
    60ac:	cmp	x0, #0x0
    60b0:	b.eq	6154 <xz_dec_lzma2_end+0xff8>  // b.none
    60b4:	ldr	x0, [sp, #40]
    60b8:	ldr	x0, [x0, #128]
    60bc:	ldr	x0, [x0, #32]
    60c0:	cmp	x0, #0x4
    60c4:	b.eq	60d0 <xz_dec_lzma2_end+0xf74>  // b.none
    60c8:	mov	w0, #0x5                   	// #5
    60cc:	b	61b8 <xz_dec_lzma2_end+0x105c>
    60d0:	ldr	x0, [sp, #40]
    60d4:	ldr	x4, [x0, #128]
    60d8:	ldr	x0, [sp, #40]
    60dc:	add	x0, x0, #0x128
    60e0:	add	x1, x0, #0x4
    60e4:	add	x0, sp, #0x30
    60e8:	mov	x3, #0x6                   	// #6
    60ec:	mov	x2, x1
    60f0:	mov	x1, x0
    60f4:	mov	x0, x4
    60f8:	bl	0 <grub_crypto_hash>
    60fc:	ldr	x0, [sp, #40]
    6100:	ldrb	w0, [x0, #299]
    6104:	strb	w0, [sp, #56]
    6108:	ldr	x0, [sp, #40]
    610c:	ldrb	w0, [x0, #298]
    6110:	strb	w0, [sp, #57]
    6114:	ldr	x0, [sp, #40]
    6118:	ldrb	w0, [x0, #297]
    611c:	strb	w0, [sp, #58]
    6120:	ldr	x0, [sp, #40]
    6124:	ldrb	w0, [x0, #296]
    6128:	strb	w0, [sp, #59]
    612c:	ldr	x0, [sp, #40]
    6130:	ldr	x0, [x0, #128]
    6134:	ldr	x2, [x0, #32]
    6138:	add	x1, sp, #0x30
    613c:	add	x0, sp, #0x38
    6140:	bl	0 <grub_memcmp>
    6144:	cmp	w0, #0x0
    6148:	b.eq	6154 <xz_dec_lzma2_end+0xff8>  // b.none
    614c:	mov	w0, #0x5                   	// #5
    6150:	b	61b8 <xz_dec_lzma2_end+0x105c>
    6154:	ldr	x0, [sp, #40]
    6158:	ldr	x0, [x0, #240]
    615c:	lsr	x19, x0, #2
    6160:	ldr	x0, [sp, #40]
    6164:	add	x0, x0, #0x128
    6168:	add	x0, x0, #0x4
    616c:	bl	5200 <xz_dec_lzma2_end+0xa4>
    6170:	mov	w0, w0
    6174:	cmp	x19, x0
    6178:	b.eq	6184 <xz_dec_lzma2_end+0x1028>  // b.none
    617c:	mov	w0, #0x5                   	// #5
    6180:	b	61b8 <xz_dec_lzma2_end+0x105c>
    6184:	ldr	x0, [sp, #40]
    6188:	ldrb	w0, [x0, #304]
    618c:	cmp	w0, #0x0
    6190:	b.ne	61ac <xz_dec_lzma2_end+0x1050>  // b.any
    6194:	ldr	x0, [sp, #40]
    6198:	ldrb	w1, [x0, #305]
    619c:	ldr	x0, [sp, #40]
    61a0:	ldrb	w0, [x0, #136]
    61a4:	cmp	w1, w0
    61a8:	b.eq	61b4 <xz_dec_lzma2_end+0x1058>  // b.none
    61ac:	mov	w0, #0x5                   	// #5
    61b0:	b	61b8 <xz_dec_lzma2_end+0x105c>
    61b4:	mov	w0, #0x1                   	// #1
    61b8:	ldr	x19, [sp, #16]
    61bc:	ldp	x29, x30, [sp], #64
    61c0:	ret
    61c4:	nop
	...
    61d0:	stp	x29, x30, [sp, #-48]!
    61d4:	mov	x29, sp
    61d8:	str	x0, [sp, #24]
    61dc:	ldr	x0, [sp, #24]
    61e0:	ldr	x0, [x0, #288]
    61e4:	sub	x1, x0, #0x4
    61e8:	ldr	x0, [sp, #24]
    61ec:	str	x1, [x0, #288]
    61f0:	ldr	x0, [sp, #24]
    61f4:	ldr	x0, [x0, #128]
    61f8:	cmp	x0, #0x0
    61fc:	b.eq	62e0 <xz_dec_lzma2_end+0x1184>  // b.none
    6200:	ldr	x0, [sp, #24]
    6204:	ldr	x0, [x0, #128]
    6208:	ldr	x0, [x0, #32]
    620c:	cmp	x0, #0x4
    6210:	b.eq	621c <xz_dec_lzma2_end+0x10c0>  // b.none
    6214:	mov	w0, #0x5                   	// #5
    6218:	b	65f4 <xz_dec_lzma2_end+0x1498>
    621c:	ldr	x0, [sp, #24]
    6220:	ldr	x4, [x0, #128]
    6224:	ldr	x0, [sp, #24]
    6228:	add	x1, x0, #0x128
    622c:	ldr	x0, [sp, #24]
    6230:	ldr	x2, [x0, #288]
    6234:	add	x0, sp, #0x20
    6238:	mov	x3, x2
    623c:	mov	x2, x1
    6240:	mov	x1, x0
    6244:	mov	x0, x4
    6248:	bl	0 <grub_crypto_hash>
    624c:	ldr	x0, [sp, #24]
    6250:	ldr	x0, [x0, #288]
    6254:	ldr	x1, [sp, #24]
    6258:	add	x0, x1, x0
    625c:	ldrb	w0, [x0, #296]
    6260:	strb	w0, [sp, #43]
    6264:	ldr	x0, [sp, #24]
    6268:	ldr	x0, [x0, #288]
    626c:	add	x0, x0, #0x1
    6270:	ldr	x1, [sp, #24]
    6274:	add	x0, x1, x0
    6278:	ldrb	w0, [x0, #296]
    627c:	strb	w0, [sp, #42]
    6280:	ldr	x0, [sp, #24]
    6284:	ldr	x0, [x0, #288]
    6288:	add	x0, x0, #0x2
    628c:	ldr	x1, [sp, #24]
    6290:	add	x0, x1, x0
    6294:	ldrb	w0, [x0, #296]
    6298:	strb	w0, [sp, #41]
    629c:	ldr	x0, [sp, #24]
    62a0:	ldr	x0, [x0, #288]
    62a4:	add	x0, x0, #0x3
    62a8:	ldr	x1, [sp, #24]
    62ac:	add	x0, x1, x0
    62b0:	ldrb	w0, [x0, #296]
    62b4:	strb	w0, [sp, #40]
    62b8:	ldr	x0, [sp, #24]
    62bc:	ldr	x0, [x0, #128]
    62c0:	ldr	x2, [x0, #32]
    62c4:	add	x1, sp, #0x20
    62c8:	add	x0, sp, #0x28
    62cc:	bl	0 <grub_memcmp>
    62d0:	cmp	w0, #0x0
    62d4:	b.eq	62e0 <xz_dec_lzma2_end+0x1184>  // b.none
    62d8:	mov	w0, #0x5                   	// #5
    62dc:	b	65f4 <xz_dec_lzma2_end+0x1498>
    62e0:	ldr	x0, [sp, #24]
    62e4:	mov	x1, #0x2                   	// #2
    62e8:	str	x1, [x0, #280]
    62ec:	ldr	x0, [sp, #24]
    62f0:	ldrb	w0, [x0, #297]
    62f4:	and	w0, w0, #0x3e
    62f8:	cmp	w0, #0x0
    62fc:	b.eq	6308 <xz_dec_lzma2_end+0x11ac>  // b.none
    6300:	mov	w0, #0x4                   	// #4
    6304:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6308:	ldr	x0, [sp, #24]
    630c:	ldrb	w0, [x0, #297]
    6310:	and	w0, w0, #0x40
    6314:	cmp	w0, #0x0
    6318:	b.eq	6364 <xz_dec_lzma2_end+0x1208>  // b.none
    631c:	ldr	x0, [sp, #24]
    6320:	add	x1, x0, #0x128
    6324:	ldr	x0, [sp, #24]
    6328:	add	x2, x0, #0x118
    632c:	ldr	x0, [sp, #24]
    6330:	ldr	x0, [x0, #288]
    6334:	mov	x3, x0
    6338:	ldr	x0, [sp, #24]
    633c:	bl	5338 <xz_dec_lzma2_end+0x1dc>
    6340:	cmp	w0, #0x1
    6344:	b.eq	6350 <xz_dec_lzma2_end+0x11f4>  // b.none
    6348:	mov	w0, #0x5                   	// #5
    634c:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6350:	ldr	x0, [sp, #24]
    6354:	ldr	x1, [x0, #8]
    6358:	ldr	x0, [sp, #24]
    635c:	str	x1, [x0, #160]
    6360:	b	6370 <xz_dec_lzma2_end+0x1214>
    6364:	ldr	x0, [sp, #24]
    6368:	mov	x1, #0xffffffffffffffff    	// #-1
    636c:	str	x1, [x0, #160]
    6370:	ldr	x0, [sp, #24]
    6374:	ldrb	w0, [x0, #297]
    6378:	sxtb	w0, w0
    637c:	cmp	w0, #0x0
    6380:	b.ge	63cc <xz_dec_lzma2_end+0x1270>  // b.tcont
    6384:	ldr	x0, [sp, #24]
    6388:	add	x1, x0, #0x128
    638c:	ldr	x0, [sp, #24]
    6390:	add	x2, x0, #0x118
    6394:	ldr	x0, [sp, #24]
    6398:	ldr	x0, [x0, #288]
    639c:	mov	x3, x0
    63a0:	ldr	x0, [sp, #24]
    63a4:	bl	5338 <xz_dec_lzma2_end+0x1dc>
    63a8:	cmp	w0, #0x1
    63ac:	b.eq	63b8 <xz_dec_lzma2_end+0x125c>  // b.none
    63b0:	mov	w0, #0x5                   	// #5
    63b4:	b	65f4 <xz_dec_lzma2_end+0x1498>
    63b8:	ldr	x0, [sp, #24]
    63bc:	ldr	x1, [x0, #8]
    63c0:	ldr	x0, [sp, #24]
    63c4:	str	x1, [x0, #168]
    63c8:	b	63d8 <xz_dec_lzma2_end+0x127c>
    63cc:	ldr	x0, [sp, #24]
    63d0:	mov	x1, #0xffffffffffffffff    	// #-1
    63d4:	str	x1, [x0, #168]
    63d8:	ldr	x0, [sp, #24]
    63dc:	ldrb	w0, [x0, #297]
    63e0:	and	w0, w0, #0x1
    63e4:	mov	w1, w0
    63e8:	ldr	x0, [sp, #24]
    63ec:	str	w1, [x0, #1336]
    63f0:	ldr	x0, [sp, #24]
    63f4:	ldr	w0, [x0, #1336]
    63f8:	cmp	w0, #0x0
    63fc:	b.eq	64a0 <xz_dec_lzma2_end+0x1344>  // b.none
    6400:	ldr	x0, [sp, #24]
    6404:	ldr	x1, [x0, #288]
    6408:	ldr	x0, [sp, #24]
    640c:	ldr	x0, [x0, #280]
    6410:	sub	x0, x1, x0
    6414:	cmp	x0, #0x1
    6418:	b.hi	6424 <xz_dec_lzma2_end+0x12c8>  // b.pmore
    641c:	mov	w0, #0x4                   	// #4
    6420:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6424:	ldr	x0, [sp, #24]
    6428:	ldr	x3, [x0, #1328]
    642c:	ldr	x0, [sp, #24]
    6430:	ldr	x0, [x0, #280]
    6434:	add	x2, x0, #0x1
    6438:	ldr	x1, [sp, #24]
    643c:	str	x2, [x1, #280]
    6440:	ldr	x1, [sp, #24]
    6444:	add	x0, x1, x0
    6448:	ldrb	w0, [x0, #296]
    644c:	mov	w1, w0
    6450:	mov	x0, x3
    6454:	bl	1bf4 <xz_dec_bcj_reset>
    6458:	str	w0, [sp, #44]
    645c:	ldr	w0, [sp, #44]
    6460:	cmp	w0, #0x0
    6464:	b.eq	6470 <xz_dec_lzma2_end+0x1314>  // b.none
    6468:	ldr	w0, [sp, #44]
    646c:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6470:	ldr	x0, [sp, #24]
    6474:	ldr	x0, [x0, #280]
    6478:	add	x2, x0, #0x1
    647c:	ldr	x1, [sp, #24]
    6480:	str	x2, [x1, #280]
    6484:	ldr	x1, [sp, #24]
    6488:	add	x0, x1, x0
    648c:	ldrb	w0, [x0, #296]
    6490:	cmp	w0, #0x0
    6494:	b.eq	64a0 <xz_dec_lzma2_end+0x1344>  // b.none
    6498:	mov	w0, #0x4                   	// #4
    649c:	b	65f4 <xz_dec_lzma2_end+0x1498>
    64a0:	ldr	x0, [sp, #24]
    64a4:	ldr	x1, [x0, #288]
    64a8:	ldr	x0, [sp, #24]
    64ac:	ldr	x0, [x0, #280]
    64b0:	sub	x0, x1, x0
    64b4:	cmp	x0, #0x1
    64b8:	b.hi	64c4 <xz_dec_lzma2_end+0x1368>  // b.pmore
    64bc:	mov	w0, #0x5                   	// #5
    64c0:	b	65f4 <xz_dec_lzma2_end+0x1498>
    64c4:	ldr	x0, [sp, #24]
    64c8:	ldr	x0, [x0, #280]
    64cc:	add	x2, x0, #0x1
    64d0:	ldr	x1, [sp, #24]
    64d4:	str	x2, [x1, #280]
    64d8:	ldr	x1, [sp, #24]
    64dc:	add	x0, x1, x0
    64e0:	ldrb	w0, [x0, #296]
    64e4:	cmp	w0, #0x21
    64e8:	b.eq	64f4 <xz_dec_lzma2_end+0x1398>  // b.none
    64ec:	mov	w0, #0x4                   	// #4
    64f0:	b	65f4 <xz_dec_lzma2_end+0x1498>
    64f4:	ldr	x0, [sp, #24]
    64f8:	ldr	x0, [x0, #280]
    64fc:	add	x2, x0, #0x1
    6500:	ldr	x1, [sp, #24]
    6504:	str	x2, [x1, #280]
    6508:	ldr	x1, [sp, #24]
    650c:	add	x0, x1, x0
    6510:	ldrb	w0, [x0, #296]
    6514:	cmp	w0, #0x1
    6518:	b.eq	6524 <xz_dec_lzma2_end+0x13c8>  // b.none
    651c:	mov	w0, #0x4                   	// #4
    6520:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6524:	ldr	x0, [sp, #24]
    6528:	ldr	x1, [x0, #288]
    652c:	ldr	x0, [sp, #24]
    6530:	ldr	x0, [x0, #280]
    6534:	cmp	x1, x0
    6538:	b.ne	6544 <xz_dec_lzma2_end+0x13e8>  // b.any
    653c:	mov	w0, #0x5                   	// #5
    6540:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6544:	ldr	x0, [sp, #24]
    6548:	ldr	x3, [x0, #1320]
    654c:	ldr	x0, [sp, #24]
    6550:	ldr	x0, [x0, #280]
    6554:	add	x2, x0, #0x1
    6558:	ldr	x1, [sp, #24]
    655c:	str	x2, [x1, #280]
    6560:	ldr	x1, [sp, #24]
    6564:	add	x0, x1, x0
    6568:	ldrb	w0, [x0, #296]
    656c:	mov	w1, w0
    6570:	mov	x0, x3
    6574:	bl	503c <xz_dec_lzma2_reset>
    6578:	str	w0, [sp, #44]
    657c:	ldr	w0, [sp, #44]
    6580:	cmp	w0, #0x0
    6584:	b.eq	65c0 <xz_dec_lzma2_end+0x1464>  // b.none
    6588:	ldr	w0, [sp, #44]
    658c:	b	65f4 <xz_dec_lzma2_end+0x1498>
    6590:	ldr	x0, [sp, #24]
    6594:	ldr	x0, [x0, #280]
    6598:	add	x2, x0, #0x1
    659c:	ldr	x1, [sp, #24]
    65a0:	str	x2, [x1, #280]
    65a4:	ldr	x1, [sp, #24]
    65a8:	add	x0, x1, x0
    65ac:	ldrb	w0, [x0, #296]
    65b0:	cmp	w0, #0x0
    65b4:	b.eq	65c0 <xz_dec_lzma2_end+0x1464>  // b.none
    65b8:	mov	w0, #0x4                   	// #4
    65bc:	b	65f4 <xz_dec_lzma2_end+0x1498>
    65c0:	ldr	x0, [sp, #24]
    65c4:	ldr	x1, [x0, #280]
    65c8:	ldr	x0, [sp, #24]
    65cc:	ldr	x0, [x0, #288]
    65d0:	cmp	x1, x0
    65d4:	b.cc	6590 <xz_dec_lzma2_end+0x1434>  // b.lo, b.ul, b.last
    65d8:	ldr	x0, [sp, #24]
    65dc:	str	xzr, [x0, #280]
    65e0:	ldr	x0, [sp, #24]
    65e4:	str	xzr, [x0, #184]
    65e8:	ldr	x0, [sp, #24]
    65ec:	str	xzr, [x0, #192]
    65f0:	mov	w0, #0x0                   	// #0
    65f4:	ldp	x29, x30, [sp], #48
    65f8:	ret
    65fc:	stp	x29, x30, [sp, #-64]!
    6600:	mov	x29, sp
    6604:	str	x19, [sp, #16]
    6608:	str	x0, [sp, #40]
    660c:	str	x1, [sp, #32]
    6610:	ldr	x0, [sp, #32]
    6614:	ldr	x1, [x0, #8]
    6618:	ldr	x0, [sp, #40]
    661c:	str	x1, [x0, #16]
    6620:	ldr	x0, [sp, #40]
    6624:	ldr	w0, [x0]
    6628:	cmp	w0, #0x9
    662c:	b.eq	6ae4 <xz_dec_lzma2_end+0x1988>  // b.none
    6630:	cmp	w0, #0x9
    6634:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6638:	cmp	w0, #0x8
    663c:	b.eq	6aa4 <xz_dec_lzma2_end+0x1948>  // b.none
    6640:	cmp	w0, #0x8
    6644:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6648:	cmp	w0, #0x7
    664c:	b.eq	6990 <xz_dec_lzma2_end+0x1834>  // b.none
    6650:	cmp	w0, #0x7
    6654:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6658:	cmp	w0, #0x6
    665c:	b.eq	68fc <xz_dec_lzma2_end+0x17a0>  // b.none
    6660:	cmp	w0, #0x6
    6664:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6668:	cmp	w0, #0x5
    666c:	b.eq	68c4 <xz_dec_lzma2_end+0x1768>  // b.none
    6670:	cmp	w0, #0x5
    6674:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6678:	cmp	w0, #0x4
    667c:	b.eq	68a4 <xz_dec_lzma2_end+0x1748>  // b.none
    6680:	cmp	w0, #0x4
    6684:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6688:	cmp	w0, #0x3
    668c:	b.eq	6808 <xz_dec_lzma2_end+0x16ac>  // b.none
    6690:	cmp	w0, #0x3
    6694:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    6698:	cmp	w0, #0x2
    669c:	b.eq	67c0 <xz_dec_lzma2_end+0x1664>  // b.none
    66a0:	cmp	w0, #0x2
    66a4:	b.hi	6620 <xz_dec_lzma2_end+0x14c4>  // b.pmore
    66a8:	cmp	w0, #0x0
    66ac:	b.eq	66bc <xz_dec_lzma2_end+0x1560>  // b.none
    66b0:	cmp	w0, #0x1
    66b4:	b.eq	6704 <xz_dec_lzma2_end+0x15a8>  // b.none
    66b8:	b	6620 <xz_dec_lzma2_end+0x14c4>
    66bc:	ldr	x1, [sp, #32]
    66c0:	ldr	x0, [sp, #40]
    66c4:	bl	5258 <xz_dec_lzma2_end+0xfc>
    66c8:	cmp	w0, #0x0
    66cc:	b.ne	66d8 <xz_dec_lzma2_end+0x157c>  // b.any
    66d0:	mov	w0, #0x0                   	// #0
    66d4:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    66d8:	ldr	x0, [sp, #40]
    66dc:	bl	5c68 <xz_dec_lzma2_end+0xb0c>
    66e0:	str	w0, [sp, #60]
    66e4:	ldr	w0, [sp, #60]
    66e8:	cmp	w0, #0x0
    66ec:	b.eq	66f8 <xz_dec_lzma2_end+0x159c>  // b.none
    66f0:	ldr	w0, [sp, #60]
    66f4:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    66f8:	ldr	x0, [sp, #40]
    66fc:	mov	w1, #0x1                   	// #1
    6700:	str	w1, [x0]
    6704:	ldr	x0, [sp, #32]
    6708:	ldr	x1, [x0, #8]
    670c:	ldr	x0, [sp, #32]
    6710:	ldr	x0, [x0, #16]
    6714:	cmp	x1, x0
    6718:	b.ne	6724 <xz_dec_lzma2_end+0x15c8>  // b.any
    671c:	mov	w0, #0x0                   	// #0
    6720:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6724:	ldr	x0, [sp, #32]
    6728:	ldr	x1, [x0]
    672c:	ldr	x0, [sp, #32]
    6730:	ldr	x0, [x0, #8]
    6734:	add	x0, x1, x0
    6738:	ldrb	w0, [x0]
    673c:	cmp	w0, #0x0
    6740:	b.ne	6770 <xz_dec_lzma2_end+0x1614>  // b.any
    6744:	ldr	x0, [sp, #32]
    6748:	ldr	x0, [x0, #8]
    674c:	add	x2, x0, #0x1
    6750:	ldr	x1, [sp, #32]
    6754:	str	x2, [x1, #8]
    6758:	ldr	x1, [sp, #40]
    675c:	str	x0, [x1, #16]
    6760:	ldr	x0, [sp, #40]
    6764:	mov	w1, #0x6                   	// #6
    6768:	str	w1, [x0]
    676c:	b	6b0c <xz_dec_lzma2_end+0x19b0>
    6770:	ldr	x0, [sp, #32]
    6774:	ldr	x1, [x0]
    6778:	ldr	x0, [sp, #32]
    677c:	ldr	x0, [x0, #8]
    6780:	add	x0, x1, x0
    6784:	ldrb	w0, [x0]
    6788:	add	w0, w0, #0x1
    678c:	lsl	w1, w0, #2
    6790:	ldr	x0, [sp, #40]
    6794:	str	w1, [x0, #176]
    6798:	ldr	x0, [sp, #40]
    679c:	ldr	w0, [x0, #176]
    67a0:	mov	w1, w0
    67a4:	ldr	x0, [sp, #40]
    67a8:	str	x1, [x0, #288]
    67ac:	ldr	x0, [sp, #40]
    67b0:	str	xzr, [x0, #280]
    67b4:	ldr	x0, [sp, #40]
    67b8:	mov	w1, #0x2                   	// #2
    67bc:	str	w1, [x0]
    67c0:	ldr	x1, [sp, #32]
    67c4:	ldr	x0, [sp, #40]
    67c8:	bl	5258 <xz_dec_lzma2_end+0xfc>
    67cc:	cmp	w0, #0x0
    67d0:	b.ne	67dc <xz_dec_lzma2_end+0x1680>  // b.any
    67d4:	mov	w0, #0x0                   	// #0
    67d8:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    67dc:	ldr	x0, [sp, #40]
    67e0:	bl	61d0 <xz_dec_lzma2_end+0x1074>
    67e4:	str	w0, [sp, #60]
    67e8:	ldr	w0, [sp, #60]
    67ec:	cmp	w0, #0x0
    67f0:	b.eq	67fc <xz_dec_lzma2_end+0x16a0>  // b.none
    67f4:	ldr	w0, [sp, #60]
    67f8:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    67fc:	ldr	x0, [sp, #40]
    6800:	mov	w1, #0x3                   	// #3
    6804:	str	w1, [x0]
    6808:	ldr	x1, [sp, #32]
    680c:	ldr	x0, [sp, #40]
    6810:	bl	5448 <xz_dec_lzma2_end+0x2ec>
    6814:	str	w0, [sp, #60]
    6818:	ldr	w0, [sp, #60]
    681c:	cmp	w0, #0x1
    6820:	b.eq	682c <xz_dec_lzma2_end+0x16d0>  // b.none
    6824:	ldr	w0, [sp, #60]
    6828:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    682c:	ldr	x0, [sp, #40]
    6830:	mov	w1, #0x4                   	// #4
    6834:	str	w1, [x0]
    6838:	b	68a4 <xz_dec_lzma2_end+0x1748>
    683c:	ldr	x0, [sp, #32]
    6840:	ldr	x1, [x0, #8]
    6844:	ldr	x0, [sp, #32]
    6848:	ldr	x0, [x0, #16]
    684c:	cmp	x1, x0
    6850:	b.ne	685c <xz_dec_lzma2_end+0x1700>  // b.any
    6854:	mov	w0, #0x0                   	// #0
    6858:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    685c:	ldr	x0, [sp, #32]
    6860:	ldr	x1, [x0]
    6864:	ldr	x0, [sp, #32]
    6868:	ldr	x0, [x0, #8]
    686c:	add	x3, x0, #0x1
    6870:	ldr	x2, [sp, #32]
    6874:	str	x3, [x2, #8]
    6878:	add	x0, x1, x0
    687c:	ldrb	w0, [x0]
    6880:	cmp	w0, #0x0
    6884:	b.eq	6890 <xz_dec_lzma2_end+0x1734>  // b.none
    6888:	mov	w0, #0x5                   	// #5
    688c:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6890:	ldr	x0, [sp, #40]
    6894:	ldr	x0, [x0, #184]
    6898:	add	x1, x0, #0x1
    689c:	ldr	x0, [sp, #40]
    68a0:	str	x1, [x0, #184]
    68a4:	ldr	x0, [sp, #40]
    68a8:	ldr	x0, [x0, #184]
    68ac:	and	x0, x0, #0x3
    68b0:	cmp	x0, #0x0
    68b4:	b.ne	683c <xz_dec_lzma2_end+0x16e0>  // b.any
    68b8:	ldr	x0, [sp, #40]
    68bc:	mov	w1, #0x5                   	// #5
    68c0:	str	w1, [x0]
    68c4:	mov	w2, #0x0                   	// #0
    68c8:	ldr	x1, [sp, #32]
    68cc:	ldr	x0, [sp, #40]
    68d0:	bl	5994 <xz_dec_lzma2_end+0x838>
    68d4:	str	w0, [sp, #60]
    68d8:	ldr	w0, [sp, #60]
    68dc:	cmp	w0, #0x1
    68e0:	b.eq	68ec <xz_dec_lzma2_end+0x1790>  // b.none
    68e4:	ldr	w0, [sp, #60]
    68e8:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    68ec:	ldr	x0, [sp, #40]
    68f0:	mov	w1, #0x1                   	// #1
    68f4:	str	w1, [x0]
    68f8:	b	6b0c <xz_dec_lzma2_end+0x19b0>
    68fc:	ldr	x1, [sp, #32]
    6900:	ldr	x0, [sp, #40]
    6904:	bl	580c <xz_dec_lzma2_end+0x6b0>
    6908:	str	w0, [sp, #60]
    690c:	ldr	w0, [sp, #60]
    6910:	cmp	w0, #0x1
    6914:	b.eq	6920 <xz_dec_lzma2_end+0x17c4>  // b.none
    6918:	ldr	w0, [sp, #60]
    691c:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6920:	ldr	x0, [sp, #40]
    6924:	mov	w1, #0x7                   	// #7
    6928:	str	w1, [x0]
    692c:	b	6990 <xz_dec_lzma2_end+0x1834>
    6930:	ldr	x0, [sp, #32]
    6934:	ldr	x1, [x0, #8]
    6938:	ldr	x0, [sp, #32]
    693c:	ldr	x0, [x0, #16]
    6940:	cmp	x1, x0
    6944:	b.ne	695c <xz_dec_lzma2_end+0x1800>  // b.any
    6948:	ldr	x1, [sp, #32]
    694c:	ldr	x0, [sp, #40]
    6950:	bl	5730 <xz_dec_lzma2_end+0x5d4>
    6954:	mov	w0, #0x0                   	// #0
    6958:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    695c:	ldr	x0, [sp, #32]
    6960:	ldr	x1, [x0]
    6964:	ldr	x0, [sp, #32]
    6968:	ldr	x0, [x0, #8]
    696c:	add	x3, x0, #0x1
    6970:	ldr	x2, [sp, #32]
    6974:	str	x3, [x2, #8]
    6978:	add	x0, x1, x0
    697c:	ldrb	w0, [x0]
    6980:	cmp	w0, #0x0
    6984:	b.eq	6990 <xz_dec_lzma2_end+0x1834>  // b.none
    6988:	mov	w0, #0x5                   	// #5
    698c:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6990:	ldr	x0, [sp, #40]
    6994:	ldr	x1, [x0, #240]
    6998:	ldr	x0, [sp, #32]
    699c:	ldr	x2, [x0, #8]
    69a0:	ldr	x0, [sp, #40]
    69a4:	ldr	x0, [x0, #16]
    69a8:	sub	x0, x2, x0
    69ac:	add	x0, x1, x0
    69b0:	and	x0, x0, #0x3
    69b4:	cmp	x0, #0x0
    69b8:	b.ne	6930 <xz_dec_lzma2_end+0x17d4>  // b.any
    69bc:	ldr	x1, [sp, #32]
    69c0:	ldr	x0, [sp, #40]
    69c4:	bl	5730 <xz_dec_lzma2_end+0x5d4>
    69c8:	ldr	x0, [sp, #40]
    69cc:	ldr	x0, [x0, #120]
    69d0:	cmp	x0, #0x0
    69d4:	b.eq	6a98 <xz_dec_lzma2_end+0x193c>  // b.none
    69d8:	ldr	x0, [sp, #40]
    69dc:	ldr	x0, [x0, #120]
    69e0:	ldr	x1, [x0, #56]
    69e4:	ldr	x0, [sp, #40]
    69e8:	ldr	x0, [x0, #224]
    69ec:	blr	x1
    69f0:	ldr	x0, [sp, #40]
    69f4:	ldr	x0, [x0, #120]
    69f8:	ldr	x1, [x0, #56]
    69fc:	ldr	x0, [sp, #40]
    6a00:	ldr	x0, [x0, #272]
    6a04:	blr	x1
    6a08:	ldr	x0, [sp, #40]
    6a0c:	ldr	x1, [x0, #208]
    6a10:	ldr	x0, [sp, #40]
    6a14:	ldr	x0, [x0, #256]
    6a18:	cmp	x1, x0
    6a1c:	b.ne	6a90 <xz_dec_lzma2_end+0x1934>  // b.any
    6a20:	ldr	x0, [sp, #40]
    6a24:	ldr	x1, [x0, #216]
    6a28:	ldr	x0, [sp, #40]
    6a2c:	ldr	x0, [x0, #264]
    6a30:	cmp	x1, x0
    6a34:	b.ne	6a90 <xz_dec_lzma2_end+0x1934>  // b.any
    6a38:	ldr	x0, [sp, #40]
    6a3c:	ldr	x0, [x0, #120]
    6a40:	ldr	x1, [x0, #64]
    6a44:	ldr	x0, [sp, #40]
    6a48:	ldr	x0, [x0, #224]
    6a4c:	blr	x1
    6a50:	mov	x19, x0
    6a54:	ldr	x0, [sp, #40]
    6a58:	ldr	x0, [x0, #120]
    6a5c:	ldr	x1, [x0, #64]
    6a60:	ldr	x0, [sp, #40]
    6a64:	ldr	x0, [x0, #272]
    6a68:	blr	x1
    6a6c:	mov	x1, x0
    6a70:	ldr	x0, [sp, #40]
    6a74:	ldr	x0, [x0, #120]
    6a78:	ldr	x0, [x0, #32]
    6a7c:	mov	x2, x0
    6a80:	mov	x0, x19
    6a84:	bl	0 <grub_memcmp>
    6a88:	cmp	w0, #0x0
    6a8c:	b.eq	6a98 <xz_dec_lzma2_end+0x193c>  // b.none
    6a90:	mov	w0, #0x5                   	// #5
    6a94:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6a98:	ldr	x0, [sp, #40]
    6a9c:	mov	w1, #0x8                   	// #8
    6aa0:	str	w1, [x0]
    6aa4:	mov	w2, #0x1                   	// #1
    6aa8:	ldr	x1, [sp, #32]
    6aac:	ldr	x0, [sp, #40]
    6ab0:	bl	5994 <xz_dec_lzma2_end+0x838>
    6ab4:	str	w0, [sp, #60]
    6ab8:	ldr	w0, [sp, #60]
    6abc:	cmp	w0, #0x1
    6ac0:	b.eq	6acc <xz_dec_lzma2_end+0x1970>  // b.none
    6ac4:	ldr	w0, [sp, #60]
    6ac8:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6acc:	ldr	x0, [sp, #40]
    6ad0:	mov	x1, #0xc                   	// #12
    6ad4:	str	x1, [x0, #288]
    6ad8:	ldr	x0, [sp, #40]
    6adc:	mov	w1, #0x9                   	// #9
    6ae0:	str	w1, [x0]
    6ae4:	ldr	x1, [sp, #32]
    6ae8:	ldr	x0, [sp, #40]
    6aec:	bl	5258 <xz_dec_lzma2_end+0xfc>
    6af0:	cmp	w0, #0x0
    6af4:	b.ne	6b00 <xz_dec_lzma2_end+0x19a4>  // b.any
    6af8:	mov	w0, #0x0                   	// #0
    6afc:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6b00:	ldr	x0, [sp, #40]
    6b04:	bl	6060 <xz_dec_lzma2_end+0xf04>
    6b08:	b	6b10 <xz_dec_lzma2_end+0x19b4>
    6b0c:	b	6620 <xz_dec_lzma2_end+0x14c4>
    6b10:	ldr	x19, [sp, #16]
    6b14:	ldp	x29, x30, [sp], #64
    6b18:	ret

0000000000006b1c <xz_dec_run>:
    6b1c:	stp	x29, x30, [sp, #-64]!
    6b20:	mov	x29, sp
    6b24:	str	x0, [sp, #24]
    6b28:	str	x1, [sp, #16]
    6b2c:	ldr	x0, [sp, #24]
    6b30:	ldr	w0, [x0, #152]
    6b34:	cmp	w0, #0x0
    6b38:	b.eq	6b44 <xz_dec_run+0x28>  // b.none
    6b3c:	ldr	x0, [sp, #24]
    6b40:	bl	6d28 <xz_dec_reset>
    6b44:	ldr	x0, [sp, #16]
    6b48:	ldr	x0, [x0, #8]
    6b4c:	str	x0, [sp, #48]
    6b50:	ldr	x0, [sp, #16]
    6b54:	ldr	x0, [x0, #32]
    6b58:	str	x0, [sp, #40]
    6b5c:	ldr	x1, [sp, #16]
    6b60:	ldr	x0, [sp, #24]
    6b64:	bl	65fc <xz_dec_lzma2_end+0x14a0>
    6b68:	str	w0, [sp, #60]
    6b6c:	ldr	x0, [sp, #24]
    6b70:	ldr	w0, [x0, #152]
    6b74:	cmp	w0, #0x0
    6b78:	b.eq	6bd8 <xz_dec_run+0xbc>  // b.none
    6b7c:	ldr	w0, [sp, #60]
    6b80:	cmp	w0, #0x0
    6b84:	b.ne	6bb0 <xz_dec_run+0x94>  // b.any
    6b88:	ldr	x0, [sp, #16]
    6b8c:	ldr	x1, [x0, #8]
    6b90:	ldr	x0, [sp, #16]
    6b94:	ldr	x0, [x0, #16]
    6b98:	cmp	x1, x0
    6b9c:	b.ne	6ba8 <xz_dec_run+0x8c>  // b.any
    6ba0:	mov	w0, #0x5                   	// #5
    6ba4:	b	6bac <xz_dec_run+0x90>
    6ba8:	mov	w0, #0x6                   	// #6
    6bac:	str	w0, [sp, #60]
    6bb0:	ldr	w0, [sp, #60]
    6bb4:	cmp	w0, #0x1
    6bb8:	b.eq	6c3c <xz_dec_run+0x120>  // b.none
    6bbc:	ldr	x0, [sp, #16]
    6bc0:	ldr	x1, [sp, #48]
    6bc4:	str	x1, [x0, #8]
    6bc8:	ldr	x0, [sp, #16]
    6bcc:	ldr	x1, [sp, #40]
    6bd0:	str	x1, [x0, #32]
    6bd4:	b	6c3c <xz_dec_run+0x120>
    6bd8:	ldr	w0, [sp, #60]
    6bdc:	cmp	w0, #0x0
    6be0:	b.ne	6c34 <xz_dec_run+0x118>  // b.any
    6be4:	ldr	x0, [sp, #16]
    6be8:	ldr	x0, [x0, #8]
    6bec:	ldr	x1, [sp, #48]
    6bf0:	cmp	x1, x0
    6bf4:	b.ne	6c34 <xz_dec_run+0x118>  // b.any
    6bf8:	ldr	x0, [sp, #16]
    6bfc:	ldr	x0, [x0, #32]
    6c00:	ldr	x1, [sp, #40]
    6c04:	cmp	x1, x0
    6c08:	b.ne	6c34 <xz_dec_run+0x118>  // b.any
    6c0c:	ldr	x0, [sp, #24]
    6c10:	ldr	w0, [x0, #156]
    6c14:	cmp	w0, #0x0
    6c18:	b.eq	6c24 <xz_dec_run+0x108>  // b.none
    6c1c:	mov	w0, #0x6                   	// #6
    6c20:	str	w0, [sp, #60]
    6c24:	ldr	x0, [sp, #24]
    6c28:	mov	w1, #0x1                   	// #1
    6c2c:	str	w1, [x0, #156]
    6c30:	b	6c3c <xz_dec_run+0x120>
    6c34:	ldr	x0, [sp, #24]
    6c38:	str	wzr, [x0, #156]
    6c3c:	ldr	w0, [sp, #60]
    6c40:	ldp	x29, x30, [sp], #64
    6c44:	ret

0000000000006c48 <xz_dec_init>:
    6c48:	stp	x29, x30, [sp, #-48]!
    6c4c:	mov	x29, sp
    6c50:	str	w0, [sp, #28]
    6c54:	mov	x0, #0x540                 	// #1344
    6c58:	bl	51e4 <xz_dec_lzma2_end+0x88>
    6c5c:	str	x0, [sp, #40]
    6c60:	ldr	x0, [sp, #40]
    6c64:	cmp	x0, #0x0
    6c68:	b.ne	6c74 <xz_dec_init+0x2c>  // b.any
    6c6c:	mov	x0, #0x0                   	// #0
    6c70:	b	6d20 <xz_dec_init+0xd8>
    6c74:	mov	x2, #0x540                 	// #1344
    6c78:	mov	w1, #0x0                   	// #0
    6c7c:	ldr	x0, [sp, #40]
    6c80:	bl	0 <grub_memset>
    6c84:	ldr	w0, [sp, #28]
    6c88:	cmp	w0, #0x0
    6c8c:	cset	w0, eq  // eq = none
    6c90:	and	w0, w0, #0xff
    6c94:	mov	w1, w0
    6c98:	ldr	x0, [sp, #40]
    6c9c:	str	w1, [x0, #152]
    6ca0:	ldr	x0, [sp, #40]
    6ca4:	ldr	w0, [x0, #152]
    6ca8:	bl	1bb8 <xz_dec_bcj_create>
    6cac:	mov	x1, x0
    6cb0:	ldr	x0, [sp, #40]
    6cb4:	str	x1, [x0, #1328]
    6cb8:	ldr	x0, [sp, #40]
    6cbc:	ldr	x0, [x0, #1328]
    6cc0:	cmp	x0, #0x0
    6cc4:	b.eq	6d10 <xz_dec_init+0xc8>  // b.none
    6cc8:	ldr	w0, [sp, #28]
    6ccc:	bl	4fa0 <xz_dec_lzma2_create>
    6cd0:	mov	x1, x0
    6cd4:	ldr	x0, [sp, #40]
    6cd8:	str	x1, [x0, #1320]
    6cdc:	ldr	x0, [sp, #40]
    6ce0:	ldr	x0, [x0, #1320]
    6ce4:	cmp	x0, #0x0
    6ce8:	b.eq	6cfc <xz_dec_init+0xb4>  // b.none
    6cec:	ldr	x0, [sp, #40]
    6cf0:	bl	6d28 <xz_dec_reset>
    6cf4:	ldr	x0, [sp, #40]
    6cf8:	b	6d20 <xz_dec_init+0xd8>
    6cfc:	nop
    6d00:	ldr	x0, [sp, #40]
    6d04:	ldr	x0, [x0, #1328]
    6d08:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6d0c:	b	6d14 <xz_dec_init+0xcc>
    6d10:	nop
    6d14:	ldr	x0, [sp, #40]
    6d18:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6d1c:	mov	x0, #0x0                   	// #0
    6d20:	ldp	x29, x30, [sp], #48
    6d24:	ret

0000000000006d28 <xz_dec_reset>:
    6d28:	stp	x29, x30, [sp, #-48]!
    6d2c:	mov	x29, sp
    6d30:	str	x0, [sp, #24]
    6d34:	ldr	x0, [sp, #24]
    6d38:	str	wzr, [x0]
    6d3c:	ldr	x0, [sp, #24]
    6d40:	str	wzr, [x0, #156]
    6d44:	ldr	x0, [sp, #24]
    6d48:	str	wzr, [x0, #4]
    6d4c:	ldr	x0, [sp, #24]
    6d50:	ldr	x0, [x0, #224]
    6d54:	str	x0, [sp, #40]
    6d58:	ldr	x0, [sp, #24]
    6d5c:	add	x0, x0, #0xb8
    6d60:	mov	x2, #0x30                  	// #48
    6d64:	mov	w1, #0x0                   	// #0
    6d68:	bl	0 <grub_memset>
    6d6c:	ldr	x0, [sp, #24]
    6d70:	ldr	x1, [sp, #40]
    6d74:	str	x1, [x0, #224]
    6d78:	ldr	x0, [sp, #24]
    6d7c:	ldr	x0, [x0, #272]
    6d80:	str	x0, [sp, #40]
    6d84:	ldr	x0, [sp, #24]
    6d88:	add	x0, x0, #0xe8
    6d8c:	mov	x2, #0x30                  	// #48
    6d90:	mov	w1, #0x0                   	// #0
    6d94:	bl	0 <grub_memset>
    6d98:	ldr	x0, [sp, #24]
    6d9c:	ldr	x1, [sp, #40]
    6da0:	str	x1, [x0, #272]
    6da4:	ldr	x0, [sp, #24]
    6da8:	str	xzr, [x0, #280]
    6dac:	ldr	x0, [sp, #24]
    6db0:	mov	x1, #0xc                   	// #12
    6db4:	str	x1, [x0, #288]
    6db8:	ldr	x0, [sp, #24]
    6dbc:	ldr	x0, [x0, #120]
    6dc0:	cmp	x0, #0x0
    6dc4:	b.eq	6e10 <xz_dec_reset+0xe8>  // b.none
    6dc8:	ldr	x0, [sp, #24]
    6dcc:	ldr	x0, [x0, #120]
    6dd0:	ldr	x1, [x0, #40]
    6dd4:	ldr	x0, [sp, #24]
    6dd8:	ldr	x0, [x0, #104]
    6ddc:	blr	x1
    6de0:	ldr	x0, [sp, #24]
    6de4:	ldr	x0, [x0, #120]
    6de8:	ldr	x1, [x0, #40]
    6dec:	ldr	x0, [sp, #24]
    6df0:	ldr	x0, [x0, #272]
    6df4:	blr	x1
    6df8:	ldr	x0, [sp, #24]
    6dfc:	ldr	x0, [x0, #120]
    6e00:	ldr	x1, [x0, #40]
    6e04:	ldr	x0, [sp, #24]
    6e08:	ldr	x0, [x0, #224]
    6e0c:	blr	x1
    6e10:	ldr	x0, [sp, #24]
    6e14:	str	wzr, [x0, #96]
    6e18:	nop
    6e1c:	ldp	x29, x30, [sp], #48
    6e20:	ret

0000000000006e24 <xz_dec_end>:
    6e24:	stp	x29, x30, [sp, #-32]!
    6e28:	mov	x29, sp
    6e2c:	str	x0, [sp, #24]
    6e30:	ldr	x0, [sp, #24]
    6e34:	cmp	x0, #0x0
    6e38:	b.eq	6e8c <xz_dec_end+0x68>  // b.none
    6e3c:	ldr	x0, [sp, #24]
    6e40:	ldr	x0, [x0, #1320]
    6e44:	bl	515c <xz_dec_lzma2_end>
    6e48:	ldr	x0, [sp, #24]
    6e4c:	ldr	x0, [x0, #272]
    6e50:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6e54:	ldr	x0, [sp, #24]
    6e58:	ldr	x0, [x0, #224]
    6e5c:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6e60:	ldr	x0, [sp, #24]
    6e64:	ldr	x0, [x0, #104]
    6e68:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6e6c:	ldr	x0, [sp, #24]
    6e70:	ldr	x0, [x0, #112]
    6e74:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6e78:	ldr	x0, [sp, #24]
    6e7c:	ldr	x0, [x0, #1328]
    6e80:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6e84:	ldr	x0, [sp, #24]
    6e88:	bl	51c4 <xz_dec_lzma2_end+0x68>
    6e8c:	nop
    6e90:	ldp	x29, x30, [sp], #32
    6e94:	ret
