
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-volatile-root_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211708 <_start>:
  211708:	mov	x29, #0x0                   	// #0
  21170c:	mov	x30, #0x0                   	// #0
  211710:	mov	x5, x0
  211714:	ldr	x1, [sp]
  211718:	add	x2, sp, #0x8
  21171c:	mov	x6, sp
  211720:	movz	x0, #0x0, lsl #48
  211724:	movk	x0, #0x0, lsl #32
  211728:	movk	x0, #0x21, lsl #16
  21172c:	movk	x0, #0x1858
  211730:	movz	x3, #0x0, lsl #48
  211734:	movk	x3, #0x0, lsl #32
  211738:	movk	x3, #0x21, lsl #16
  21173c:	movk	x3, #0x24a0
  211740:	movz	x4, #0x0, lsl #48
  211744:	movk	x4, #0x0, lsl #32
  211748:	movk	x4, #0x21, lsl #16
  21174c:	movk	x4, #0x2520
  211750:	bl	212570 <__libc_start_main@plt>
  211754:	bl	212580 <abort@plt>

0000000000211758 <call_weak_fn>:
  211758:	adrp	x0, 222000 <umount_verbose@plt+0xf870>
  21175c:	ldr	x0, [x0, #2432]
  211760:	cbz	x0, 211768 <call_weak_fn+0x10>
  211764:	b	212590 <__gmon_start__@plt>
  211768:	ret

000000000021176c <deregister_tm_clones>:
  21176c:	adrp	x0, 232000 <_DYNAMIC+0xf850>
  211770:	add	x0, x0, #0xac8
  211774:	adrp	x1, 232000 <_DYNAMIC+0xf850>
  211778:	add	x1, x1, #0xac8
  21177c:	cmp	x0, x1
  211780:	b.eq	2117b4 <deregister_tm_clones+0x48>  // b.none
  211784:	stp	x29, x30, [sp, #-32]!
  211788:	mov	x29, sp
  21178c:	adrp	x0, 200000 <__FRAME_END__-0x1610>
  211790:	ldr	x0, [x0, #4016]
  211794:	str	x0, [sp, #24]
  211798:	mov	x1, x0
  21179c:	cbz	x1, 2117ac <deregister_tm_clones+0x40>
  2117a0:	adrp	x0, 232000 <_DYNAMIC+0xf850>
  2117a4:	add	x0, x0, #0xac8
  2117a8:	blr	x1
  2117ac:	ldp	x29, x30, [sp], #32
  2117b0:	ret
  2117b4:	ret

00000000002117b8 <register_tm_clones>:
  2117b8:	adrp	x0, 232000 <_DYNAMIC+0xf850>
  2117bc:	add	x0, x0, #0xac8
  2117c0:	adrp	x1, 232000 <_DYNAMIC+0xf850>
  2117c4:	add	x1, x1, #0xac8
  2117c8:	sub	x0, x0, x1
  2117cc:	lsr	x1, x0, #63
  2117d0:	add	x0, x1, x0, asr #3
  2117d4:	cmp	xzr, x0, asr #1
  2117d8:	b.eq	211810 <register_tm_clones+0x58>  // b.none
  2117dc:	stp	x29, x30, [sp, #-32]!
  2117e0:	mov	x29, sp
  2117e4:	asr	x1, x0, #1
  2117e8:	adrp	x0, 200000 <__FRAME_END__-0x1610>
  2117ec:	ldr	x0, [x0, #4024]
  2117f0:	str	x0, [sp, #24]
  2117f4:	mov	x2, x0
  2117f8:	cbz	x2, 211808 <register_tm_clones+0x50>
  2117fc:	adrp	x0, 232000 <_DYNAMIC+0xf850>
  211800:	add	x0, x0, #0xac8
  211804:	blr	x2
  211808:	ldp	x29, x30, [sp], #32
  21180c:	ret
  211810:	ret

0000000000211814 <__do_global_dtors_aux>:
  211814:	adrp	x0, 232000 <_DYNAMIC+0xf850>
  211818:	ldrb	w0, [x0, #2760]
  21181c:	cbnz	w0, 211840 <__do_global_dtors_aux+0x2c>
  211820:	stp	x29, x30, [sp, #-16]!
  211824:	mov	x29, sp
  211828:	bl	21176c <deregister_tm_clones>
  21182c:	adrp	x0, 232000 <_DYNAMIC+0xf850>
  211830:	mov	w1, #0x1                   	// #1
  211834:	strb	w1, [x0, #2760]
  211838:	ldp	x29, x30, [sp], #16
  21183c:	ret
  211840:	ret

0000000000211844 <frame_dummy>:
  211844:	stp	x29, x30, [sp, #-16]!
  211848:	mov	x29, sp
  21184c:	bl	2117b8 <register_tm_clones>
  211850:	ldp	x29, x30, [sp], #16
  211854:	ret

0000000000211858 <main>:
  211858:	stp	x29, x30, [sp, #-32]!
  21185c:	stp	x20, x19, [sp, #16]
  211860:	mov	x29, sp
  211864:	mov	x19, x1
  211868:	mov	w20, w0
  21186c:	bl	2118a4 <save_argc_argv>
  211870:	mov	w0, w20
  211874:	mov	x1, x19
  211878:	bl	2118b8 <run>
  21187c:	mov	w19, w0
  211880:	bl	2125a0 <ask_password_agent_close@plt>
  211884:	bl	2125b0 <polkit_agent_close@plt>
  211888:	bl	2125c0 <pager_close@plt>
  21188c:	bl	2125d0 <mac_selinux_finish@plt>
  211890:	bl	211dbc <static_destruct>
  211894:	lsr	w0, w19, #31
  211898:	ldp	x20, x19, [sp, #16]
  21189c:	ldp	x29, x30, [sp], #32
  2118a0:	ret

00000000002118a4 <save_argc_argv>:
  2118a4:	adrp	x8, 232000 <_DYNAMIC+0xf850>
  2118a8:	adrp	x9, 232000 <_DYNAMIC+0xf850>
  2118ac:	str	w0, [x8, #2768]
  2118b0:	str	x1, [x9, #2776]
  2118b4:	ret

00000000002118b8 <run>:
  2118b8:	sub	sp, sp, #0x40
  2118bc:	stp	x29, x30, [sp, #16]
  2118c0:	add	x29, sp, #0x10
  2118c4:	mov	w8, #0xffffffff            	// #-1
  2118c8:	str	x21, [sp, #32]
  2118cc:	stp	x20, x19, [sp, #48]
  2118d0:	mov	x19, x1
  2118d4:	mov	w20, w0
  2118d8:	str	w8, [x29, #28]
  2118dc:	bl	2125e0 <log_setup_service@plt>
  2118e0:	cmp	w20, #0x4
  2118e4:	b.lt	211928 <run+0x70>  // b.tstop
  2118e8:	mov	w0, wzr
  2118ec:	bl	2125f0 <log_get_max_level_realm@plt>
  2118f0:	cmp	w0, #0x3
  2118f4:	b.lt	211be0 <run+0x328>  // b.tstop
  2118f8:	adrp	x2, 201000 <__FRAME_END__-0x610>
  2118fc:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211900:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211904:	mov	w1, #0x16                  	// #22
  211908:	add	x2, x2, #0xf1
  21190c:	add	x4, x4, #0x4aa
  211910:	add	x5, x5, #0x19d
  211914:	mov	w0, #0x3                   	// #3
  211918:	movk	w1, #0x4000, lsl #16
  21191c:	mov	w3, #0x7e                  	// #126
  211920:	bl	212600 <log_internal_realm@plt>
  211924:	b	211c24 <run+0x36c>
  211928:	add	x0, x29, #0x1c
  21192c:	bl	212610 <query_volatile_mode@plt>
  211930:	mov	w21, w0
  211934:	tbnz	w0, #31, 2119ec <run+0x134>
  211938:	cmp	w20, #0x2
  21193c:	b.lt	211954 <run+0x9c>  // b.tstop
  211940:	cbnz	w21, 211954 <run+0x9c>
  211944:	ldr	x0, [x19, #8]
  211948:	bl	212620 <volatile_mode_from_string@plt>
  21194c:	str	w0, [x29, #28]
  211950:	tbnz	w0, #31, 211ae8 <run+0x230>
  211954:	cmp	w20, #0x2
  211958:	b.gt	211a28 <run+0x170>
  21195c:	adrp	x19, 201000 <__FRAME_END__-0x610>
  211960:	add	x19, x19, #0x3e8
  211964:	ldr	w8, [x29, #28]
  211968:	orr	w8, w8, #0x2
  21196c:	cmp	w8, #0x3
  211970:	b.ne	211b28 <run+0x270>  // b.any
  211974:	mov	w2, #0x400                 	// #1024
  211978:	mov	x0, x19
  21197c:	mov	x1, xzr
  211980:	bl	212630 <path_is_mount_point@plt>
  211984:	mov	w20, w0
  211988:	tbnz	w0, #31, 211b30 <run+0x278>
  21198c:	cbz	w20, 211ba4 <run+0x2ec>
  211990:	mov	x0, x19
  211994:	bl	212640 <path_is_temporary_fs@plt>
  211998:	mov	w20, w0
  21199c:	tbnz	w0, #31, 211be8 <run+0x330>
  2119a0:	cbz	w20, 211c40 <run+0x388>
  2119a4:	mov	w0, wzr
  2119a8:	bl	2125f0 <log_get_max_level_realm@plt>
  2119ac:	cmp	w0, #0x6
  2119b0:	mov	w20, wzr
  2119b4:	b.lt	211c28 <run+0x370>  // b.tstop
  2119b8:	adrp	x2, 201000 <__FRAME_END__-0x610>
  2119bc:	adrp	x4, 201000 <__FRAME_END__-0x610>
  2119c0:	adrp	x5, 201000 <__FRAME_END__-0x610>
  2119c4:	add	x2, x2, #0xf1
  2119c8:	add	x4, x4, #0x4aa
  2119cc:	add	x5, x5, #0x4ae
  2119d0:	mov	w0, #0x6                   	// #6
  2119d4:	mov	w3, #0xa7                  	// #167
  2119d8:	mov	w1, wzr
  2119dc:	mov	x6, x19
  2119e0:	bl	212600 <log_internal_realm@plt>
  2119e4:	mov	w20, wzr
  2119e8:	b	211c28 <run+0x370>
  2119ec:	mov	w0, wzr
  2119f0:	bl	2125f0 <log_get_max_level_realm@plt>
  2119f4:	cmp	w0, #0x3
  2119f8:	b.lt	211a78 <run+0x1c0>  // b.tstop
  2119fc:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211a00:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211a04:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211a08:	add	x2, x2, #0xf1
  211a0c:	add	x4, x4, #0x4aa
  211a10:	add	x5, x5, #0x113
  211a14:	mov	w0, #0x3                   	// #3
  211a18:	mov	w3, #0x82                  	// #130
  211a1c:	mov	w1, w21
  211a20:	bl	212600 <log_internal_realm@plt>
  211a24:	b	211c24 <run+0x36c>
  211a28:	ldr	x19, [x19, #16]
  211a2c:	mov	x0, x19
  211a30:	bl	211e1c <isempty>
  211a34:	tbz	w0, #0, 211a88 <run+0x1d0>
  211a38:	mov	w0, wzr
  211a3c:	bl	2125f0 <log_get_max_level_realm@plt>
  211a40:	cmp	w0, #0x3
  211a44:	b.lt	211be0 <run+0x328>  // b.tstop
  211a48:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211a4c:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211a50:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211a54:	mov	w1, #0x16                  	// #22
  211a58:	add	x2, x2, #0xf1
  211a5c:	add	x4, x4, #0x4aa
  211a60:	add	x5, x5, #0x2f5
  211a64:	mov	w0, #0x3                   	// #3
  211a68:	movk	w1, #0x4000, lsl #16
  211a6c:	mov	w3, #0x91                  	// #145
  211a70:	bl	212600 <log_internal_realm@plt>
  211a74:	b	211c24 <run+0x36c>
  211a78:	mov	w8, wzr
  211a7c:	neg	w9, w21
  211a80:	sub	w20, w8, w9, uxtb
  211a84:	b	211c28 <run+0x370>
  211a88:	mov	x0, x19
  211a8c:	bl	212650 <path_is_absolute@plt>
  211a90:	tbz	w0, #0, 211b64 <run+0x2ac>
  211a94:	adrp	x1, 201000 <__FRAME_END__-0x610>
  211a98:	add	x1, x1, #0x85
  211a9c:	mov	x0, x19
  211aa0:	bl	212660 <path_equal@plt>
  211aa4:	tbz	w0, #0, 211964 <run+0xac>
  211aa8:	mov	w0, wzr
  211aac:	bl	2125f0 <log_get_max_level_realm@plt>
  211ab0:	cmp	w0, #0x3
  211ab4:	b.lt	211be0 <run+0x328>  // b.tstop
  211ab8:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211abc:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211ac0:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211ac4:	mov	w1, #0x16                  	// #22
  211ac8:	add	x2, x2, #0xf1
  211acc:	add	x4, x4, #0x4aa
  211ad0:	add	x5, x5, #0x571
  211ad4:	mov	w0, #0x3                   	// #3
  211ad8:	movk	w1, #0x4000, lsl #16
  211adc:	mov	w3, #0x97                  	// #151
  211ae0:	bl	212600 <log_internal_realm@plt>
  211ae4:	b	211c24 <run+0x36c>
  211ae8:	mov	w0, wzr
  211aec:	bl	2125f0 <log_get_max_level_realm@plt>
  211af0:	cmp	w0, #0x3
  211af4:	b.lt	211be0 <run+0x328>  // b.tstop
  211af8:	ldr	x6, [x19, #8]
  211afc:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211b00:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211b04:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211b08:	mov	w1, #0x16                  	// #22
  211b0c:	add	x2, x2, #0xf1
  211b10:	add	x4, x4, #0x4aa
  211b14:	add	x5, x5, #0x550
  211b18:	mov	w0, #0x3                   	// #3
  211b1c:	movk	w1, #0x4000, lsl #16
  211b20:	mov	w3, #0x87                  	// #135
  211b24:	b	211c20 <run+0x368>
  211b28:	mov	w20, wzr
  211b2c:	b	211c28 <run+0x370>
  211b30:	mov	w0, wzr
  211b34:	bl	2125f0 <log_get_max_level_realm@plt>
  211b38:	cmp	w0, #0x3
  211b3c:	b.lt	211cfc <run+0x444>  // b.tstop
  211b40:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211b44:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211b48:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211b4c:	add	x2, x2, #0xf1
  211b50:	add	x4, x4, #0x4aa
  211b54:	add	x5, x5, #0x2a7
  211b58:	mov	w0, #0x3                   	// #3
  211b5c:	mov	w3, #0x9f                  	// #159
  211b60:	b	211c18 <run+0x360>
  211b64:	mov	w0, wzr
  211b68:	bl	2125f0 <log_get_max_level_realm@plt>
  211b6c:	cmp	w0, #0x3
  211b70:	b.lt	211be0 <run+0x328>  // b.tstop
  211b74:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211b78:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211b7c:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211b80:	mov	w1, #0x16                  	// #22
  211b84:	add	x2, x2, #0xf1
  211b88:	add	x4, x4, #0x4aa
  211b8c:	add	x5, x5, #0x353
  211b90:	mov	w0, #0x3                   	// #3
  211b94:	movk	w1, #0x4000, lsl #16
  211b98:	mov	w3, #0x94                  	// #148
  211b9c:	bl	212600 <log_internal_realm@plt>
  211ba0:	b	211c24 <run+0x36c>
  211ba4:	mov	w0, wzr
  211ba8:	bl	2125f0 <log_get_max_level_realm@plt>
  211bac:	cmp	w0, #0x3
  211bb0:	b.lt	211be0 <run+0x328>  // b.tstop
  211bb4:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211bb8:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211bbc:	adrp	x5, 200000 <__FRAME_END__-0x1610>
  211bc0:	mov	w1, #0x16                  	// #22
  211bc4:	add	x2, x2, #0xf1
  211bc8:	add	x4, x4, #0x4aa
  211bcc:	add	x5, x5, #0xfc0
  211bd0:	mov	w0, #0x3                   	// #3
  211bd4:	movk	w1, #0x4000, lsl #16
  211bd8:	mov	w3, #0xa1                  	// #161
  211bdc:	b	211c1c <run+0x364>
  211be0:	mov	w20, #0xffffffea            	// #-22
  211be4:	b	211c28 <run+0x370>
  211be8:	mov	w0, wzr
  211bec:	bl	2125f0 <log_get_max_level_realm@plt>
  211bf0:	cmp	w0, #0x3
  211bf4:	b.lt	211cfc <run+0x444>  // b.tstop
  211bf8:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211bfc:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211c00:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211c04:	add	x2, x2, #0xf1
  211c08:	add	x4, x4, #0x4aa
  211c0c:	add	x5, x5, #0x465
  211c10:	mov	w0, #0x3                   	// #3
  211c14:	mov	w3, #0xa5                  	// #165
  211c18:	mov	w1, w20
  211c1c:	mov	x6, x19
  211c20:	bl	212600 <log_internal_realm@plt>
  211c24:	mov	w20, w0
  211c28:	mov	w0, w20
  211c2c:	ldp	x20, x19, [sp, #48]
  211c30:	ldr	x21, [sp, #32]
  211c34:	ldp	x29, x30, [sp, #16]
  211c38:	add	sp, sp, #0x40
  211c3c:	ret
  211c40:	add	x1, sp, #0x8
  211c44:	mov	x0, x19
  211c48:	bl	212670 <get_block_device_harder@plt>
  211c4c:	mov	w20, w0
  211c50:	tbnz	w0, #31, 211cc8 <run+0x410>
  211c54:	cbz	w20, 211d6c <run+0x4b4>
  211c58:	ldr	x1, [sp, #8]
  211c5c:	mov	x2, sp
  211c60:	mov	w0, #0x6000                	// #24576
  211c64:	str	xzr, [sp]
  211c68:	bl	212680 <device_path_make_major_minor@plt>
  211c6c:	tbnz	w0, #31, 211d0c <run+0x454>
  211c70:	ldr	x0, [sp]
  211c74:	adrp	x1, 201000 <__FRAME_END__-0x610>
  211c78:	add	x1, x1, #0x2da
  211c7c:	bl	212690 <symlink@plt>
  211c80:	tbz	w0, #31, 211cc0 <run+0x408>
  211c84:	mov	w0, wzr
  211c88:	bl	2125f0 <log_get_max_level_realm@plt>
  211c8c:	cmp	w0, #0x4
  211c90:	b.lt	211cc0 <run+0x408>  // b.tstop
  211c94:	bl	2126a0 <__errno_location@plt>
  211c98:	ldr	w1, [x0]
  211c9c:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211ca0:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211ca4:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211ca8:	add	x2, x2, #0xf1
  211cac:	add	x4, x4, #0x4aa
  211cb0:	add	x5, x5, #0x31b
  211cb4:	mov	w0, #0x4                   	// #4
  211cb8:	mov	w3, #0xba                  	// #186
  211cbc:	bl	212600 <log_internal_realm@plt>
  211cc0:	mov	w21, #0x1                   	// #1
  211cc4:	b	211d60 <run+0x4a8>
  211cc8:	mov	w0, wzr
  211ccc:	bl	2125f0 <log_get_max_level_realm@plt>
  211cd0:	cmp	w0, #0x3
  211cd4:	b.lt	211cfc <run+0x444>  // b.tstop
  211cd8:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211cdc:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211ce0:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211ce4:	add	x2, x2, #0xf1
  211ce8:	add	x4, x4, #0x4aa
  211cec:	add	x5, x5, #0x599
  211cf0:	mov	w0, #0x3                   	// #3
  211cf4:	mov	w3, #0xb1                  	// #177
  211cf8:	b	211c18 <run+0x360>
  211cfc:	mov	w8, wzr
  211d00:	neg	w9, w20
  211d04:	sub	w20, w8, w9, uxtb
  211d08:	b	211c28 <run+0x370>
  211d0c:	mov	w20, w0
  211d10:	mov	w0, wzr
  211d14:	bl	2125f0 <log_get_max_level_realm@plt>
  211d18:	cmp	w0, #0x3
  211d1c:	b.lt	211d54 <run+0x49c>  // b.tstop
  211d20:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211d24:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211d28:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211d2c:	add	x2, x2, #0xf1
  211d30:	add	x4, x4, #0x4aa
  211d34:	add	x5, x5, #0xa6
  211d38:	mov	w0, #0x3                   	// #3
  211d3c:	mov	w3, #0xb7                  	// #183
  211d40:	mov	w1, w20
  211d44:	bl	212600 <log_internal_realm@plt>
  211d48:	mov	w20, w0
  211d4c:	mov	w21, wzr
  211d50:	b	211d60 <run+0x4a8>
  211d54:	mov	w21, wzr
  211d58:	neg	w8, w20
  211d5c:	sub	w20, w21, w8, uxtb
  211d60:	mov	x0, sp
  211d64:	bl	211e38 <freep>
  211d68:	cbz	w21, 211c28 <run+0x370>
  211d6c:	ldr	w8, [x29, #28]
  211d70:	cmp	w8, #0x1
  211d74:	b.ne	211d84 <run+0x4cc>  // b.any
  211d78:	mov	x0, x19
  211d7c:	bl	211e50 <make_volatile>
  211d80:	b	211c24 <run+0x36c>
  211d84:	cmp	w8, #0x3
  211d88:	b.ne	211d98 <run+0x4e0>  // b.any
  211d8c:	mov	x0, x19
  211d90:	bl	212180 <make_overlay>
  211d94:	b	211c24 <run+0x36c>
  211d98:	adrp	x1, 200000 <__FRAME_END__-0x1610>
  211d9c:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211da0:	adrp	x4, 201000 <__FRAME_END__-0x610>
  211da4:	add	x1, x1, #0xfd9
  211da8:	add	x2, x2, #0xf1
  211dac:	add	x4, x4, #0x381
  211db0:	mov	w3, #0xc0                  	// #192
  211db4:	mov	w0, wzr
  211db8:	bl	2126b0 <log_assert_failed_realm@plt>

0000000000211dbc <static_destruct>:
  211dbc:	stp	x29, x30, [sp, #-32]!
  211dc0:	stp	x20, x19, [sp, #16]
  211dc4:	adrp	x8, 222000 <umount_verbose@plt+0xf870>
  211dc8:	ldr	x8, [x8, #2440]
  211dcc:	mov	x29, sp
  211dd0:	cbz	x8, 211e10 <static_destruct+0x54>
  211dd4:	adrp	x0, 222000 <umount_verbose@plt+0xf870>
  211dd8:	ldr	x0, [x0, #2440]
  211ddc:	bl	212490 <ALIGN_TO>
  211de0:	adrp	x20, 222000 <umount_verbose@plt+0xf870>
  211de4:	ldr	x20, [x20, #2448]
  211de8:	cmp	x0, x20
  211dec:	b.cs	211e10 <static_destruct+0x54>  // b.hs, b.nlast
  211df0:	mov	x19, x0
  211df4:	ldp	x0, x8, [x19]
  211df8:	blr	x8
  211dfc:	add	x0, x19, #0x10
  211e00:	bl	212490 <ALIGN_TO>
  211e04:	mov	x19, x0
  211e08:	cmp	x0, x20
  211e0c:	b.cc	211df4 <static_destruct+0x38>  // b.lo, b.ul, b.last
  211e10:	ldp	x20, x19, [sp, #16]
  211e14:	ldp	x29, x30, [sp], #32
  211e18:	ret

0000000000211e1c <isempty>:
  211e1c:	cbz	x0, 211e30 <isempty+0x14>
  211e20:	ldrb	w8, [x0]
  211e24:	cmp	w8, #0x0
  211e28:	cset	w0, eq  // eq = none
  211e2c:	ret
  211e30:	mov	w0, #0x1                   	// #1
  211e34:	ret

0000000000211e38 <freep>:
  211e38:	stp	x29, x30, [sp, #-16]!
  211e3c:	ldr	x0, [x0]
  211e40:	mov	x29, sp
  211e44:	bl	2126c0 <free@plt>
  211e48:	ldp	x29, x30, [sp], #16
  211e4c:	ret

0000000000211e50 <make_volatile>:
  211e50:	sub	sp, sp, #0x30
  211e54:	stp	x29, x30, [sp, #16]
  211e58:	stp	x20, x19, [sp, #32]
  211e5c:	add	x29, sp, #0x10
  211e60:	str	xzr, [sp, #8]
  211e64:	cbz	x0, 212160 <make_volatile+0x310>
  211e68:	mov	x19, x0
  211e6c:	adrp	x0, 201000 <__FRAME_END__-0x610>
  211e70:	add	x0, x0, #0x5ca
  211e74:	add	x3, sp, #0x8
  211e78:	mov	w2, #0x1                   	// #1
  211e7c:	mov	x1, x19
  211e80:	mov	x4, xzr
  211e84:	bl	2126d0 <chase_symlinks@plt>
  211e88:	tbnz	w0, #31, 211fb8 <make_volatile+0x168>
  211e8c:	adrp	x0, 201000 <__FRAME_END__-0x610>
  211e90:	add	x0, x0, #0x21a
  211e94:	mov	w1, #0x1c0                 	// #448
  211e98:	bl	2126e0 <mkdir_p@plt>
  211e9c:	tbnz	w0, #31, 211ff0 <make_volatile+0x1a0>
  211ea0:	adrp	x1, 201000 <__FRAME_END__-0x610>
  211ea4:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211ea8:	add	x1, x1, #0x315
  211eac:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211eb0:	add	x2, x2, #0x21a
  211eb4:	add	x5, x5, #0x16f
  211eb8:	mov	w0, #0x3                   	// #3
  211ebc:	mov	w4, #0x1000000             	// #16777216
  211ec0:	mov	x3, x1
  211ec4:	bl	2126f0 <mount_verbose@plt>
  211ec8:	tbnz	w0, #31, 212044 <make_volatile+0x1f4>
  211ecc:	adrp	x0, 201000 <__FRAME_END__-0x610>
  211ed0:	add	x0, x0, #0x4ee
  211ed4:	mov	w1, #0x1ed                 	// #493
  211ed8:	bl	212700 <mkdir@plt>
  211edc:	tbnz	w0, #31, 21204c <make_volatile+0x1fc>
  211ee0:	ldr	x1, [sp, #8]
  211ee4:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211ee8:	add	x2, x2, #0x4ee
  211eec:	mov	w0, #0x3                   	// #3
  211ef0:	mov	w4, #0x5000                	// #20480
  211ef4:	mov	x3, xzr
  211ef8:	mov	x5, xzr
  211efc:	bl	2126f0 <mount_verbose@plt>
  211f00:	tbnz	w0, #31, 21208c <make_volatile+0x23c>
  211f04:	adrp	x0, 201000 <__FRAME_END__-0x610>
  211f08:	add	x0, x0, #0x4ee
  211f0c:	mov	w1, #0x1                   	// #1
  211f10:	mov	w2, #0x1                   	// #1
  211f14:	mov	x3, xzr
  211f18:	bl	212710 <bind_remount_recursive@plt>
  211f1c:	tbnz	w0, #31, 2120a8 <make_volatile+0x258>
  211f20:	mov	x0, x19
  211f24:	mov	w1, wzr
  211f28:	bl	212720 <umount_recursive@plt>
  211f2c:	tbnz	w0, #31, 2120e8 <make_volatile+0x298>
  211f30:	adrp	x1, 201000 <__FRAME_END__-0x610>
  211f34:	mov	w3, #0x4000                	// #16384
  211f38:	add	x1, x1, #0x85
  211f3c:	movk	w3, #0x8, lsl #16
  211f40:	mov	x0, xzr
  211f44:	mov	x2, xzr
  211f48:	mov	x4, xzr
  211f4c:	bl	212730 <mount@plt>
  211f50:	tbz	w0, #31, 211f94 <make_volatile+0x144>
  211f54:	mov	w0, wzr
  211f58:	bl	2125f0 <log_get_max_level_realm@plt>
  211f5c:	cmp	w0, #0x4
  211f60:	b.lt	211f94 <make_volatile+0x144>  // b.tstop
  211f64:	bl	2126a0 <__errno_location@plt>
  211f68:	ldr	w1, [x0]
  211f6c:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211f70:	adrp	x4, 200000 <__FRAME_END__-0x1610>
  211f74:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211f78:	add	x2, x2, #0xf1
  211f7c:	add	x4, x4, #0xfef
  211f80:	add	x5, x5, #0x415
  211f84:	mov	w0, #0x4                   	// #4
  211f88:	mov	w3, #0x3a                  	// #58
  211f8c:	mov	x6, x19
  211f90:	bl	212600 <log_internal_realm@plt>
  211f94:	adrp	x1, 201000 <__FRAME_END__-0x610>
  211f98:	add	x1, x1, #0x21a
  211f9c:	mov	w0, #0x3                   	// #3
  211fa0:	mov	w4, #0x2000                	// #8192
  211fa4:	mov	x2, x19
  211fa8:	mov	x3, xzr
  211fac:	mov	x5, xzr
  211fb0:	bl	2126f0 <mount_verbose@plt>
  211fb4:	b	21208c <make_volatile+0x23c>
  211fb8:	mov	w20, w0
  211fbc:	mov	w0, wzr
  211fc0:	bl	2125f0 <log_get_max_level_realm@plt>
  211fc4:	cmp	w0, #0x3
  211fc8:	b.lt	212034 <make_volatile+0x1e4>  // b.tstop
  211fcc:	adrp	x2, 201000 <__FRAME_END__-0x610>
  211fd0:	adrp	x4, 200000 <__FRAME_END__-0x1610>
  211fd4:	adrp	x5, 201000 <__FRAME_END__-0x610>
  211fd8:	add	x2, x2, #0xf1
  211fdc:	add	x4, x4, #0xfef
  211fe0:	add	x5, x5, #0x1f7
  211fe4:	mov	w0, #0x3                   	// #3
  211fe8:	mov	w3, #0x1a                  	// #26
  211fec:	b	212024 <make_volatile+0x1d4>
  211ff0:	mov	w20, w0
  211ff4:	mov	w0, wzr
  211ff8:	bl	2125f0 <log_get_max_level_realm@plt>
  211ffc:	cmp	w0, #0x3
  212000:	b.lt	212034 <make_volatile+0x1e4>  // b.tstop
  212004:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212008:	adrp	x4, 200000 <__FRAME_END__-0x1610>
  21200c:	adrp	x5, 200000 <__FRAME_END__-0x1610>
  212010:	add	x2, x2, #0xf1
  212014:	add	x4, x4, #0xfef
  212018:	add	x5, x5, #0xffd
  21201c:	mov	w0, #0x3                   	// #3
  212020:	mov	w3, #0x1e                  	// #30
  212024:	mov	w1, w20
  212028:	bl	212600 <log_internal_realm@plt>
  21202c:	mov	w20, w0
  212030:	b	212144 <make_volatile+0x2f4>
  212034:	mov	w8, wzr
  212038:	neg	w9, w20
  21203c:	sub	w20, w8, w9, uxtb
  212040:	b	212144 <make_volatile+0x2f4>
  212044:	mov	w20, w0
  212048:	b	212138 <make_volatile+0x2e8>
  21204c:	bl	2126a0 <__errno_location@plt>
  212050:	ldr	w19, [x0]
  212054:	mov	w0, wzr
  212058:	bl	2125f0 <log_get_max_level_realm@plt>
  21205c:	cmp	w0, #0x3
  212060:	b.lt	212094 <make_volatile+0x244>  // b.tstop
  212064:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212068:	adrp	x4, 200000 <__FRAME_END__-0x1610>
  21206c:	adrp	x5, 201000 <__FRAME_END__-0x610>
  212070:	add	x2, x2, #0xf1
  212074:	add	x4, x4, #0xfef
  212078:	add	x5, x5, #0x3f1
  21207c:	mov	w0, #0x3                   	// #3
  212080:	mov	w3, #0x25                  	// #37
  212084:	mov	w1, w19
  212088:	bl	212600 <log_internal_realm@plt>
  21208c:	mov	w20, w0
  212090:	b	212128 <make_volatile+0x2d8>
  212094:	cmp	w19, #0x0
  212098:	mov	w8, wzr
  21209c:	cneg	w9, w19, mi  // mi = first
  2120a0:	sub	w20, w8, w9, uxtb
  2120a4:	b	212128 <make_volatile+0x2d8>
  2120a8:	mov	w20, w0
  2120ac:	mov	w0, wzr
  2120b0:	bl	2125f0 <log_get_max_level_realm@plt>
  2120b4:	cmp	w0, #0x3
  2120b8:	b.lt	212128 <make_volatile+0x2d8>  // b.tstop
  2120bc:	adrp	x2, 201000 <__FRAME_END__-0x610>
  2120c0:	adrp	x4, 200000 <__FRAME_END__-0x1610>
  2120c4:	adrp	x5, 201000 <__FRAME_END__-0x610>
  2120c8:	add	x2, x2, #0xf1
  2120cc:	add	x4, x4, #0xfef
  2120d0:	add	x5, x5, #0x178
  2120d4:	mov	w0, #0x3                   	// #3
  2120d8:	mov	w3, #0x2f                  	// #47
  2120dc:	mov	w1, w20
  2120e0:	bl	212600 <log_internal_realm@plt>
  2120e4:	b	212128 <make_volatile+0x2d8>
  2120e8:	mov	w20, w0
  2120ec:	mov	w0, wzr
  2120f0:	bl	2125f0 <log_get_max_level_realm@plt>
  2120f4:	cmp	w0, #0x3
  2120f8:	b.lt	212128 <make_volatile+0x2d8>  // b.tstop
  2120fc:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212100:	adrp	x4, 200000 <__FRAME_END__-0x1610>
  212104:	adrp	x5, 201000 <__FRAME_END__-0x610>
  212108:	add	x2, x2, #0xf1
  21210c:	add	x4, x4, #0xfef
  212110:	add	x5, x5, #0x4d5
  212114:	mov	w0, #0x3                   	// #3
  212118:	mov	w3, #0x35                  	// #53
  21211c:	mov	w1, w20
  212120:	mov	x6, x19
  212124:	bl	212600 <log_internal_realm@plt>
  212128:	adrp	x0, 201000 <__FRAME_END__-0x610>
  21212c:	add	x0, x0, #0x21a
  212130:	mov	w1, wzr
  212134:	bl	212720 <umount_recursive@plt>
  212138:	adrp	x0, 201000 <__FRAME_END__-0x610>
  21213c:	add	x0, x0, #0x21a
  212140:	bl	212740 <rmdir@plt>
  212144:	add	x0, sp, #0x8
  212148:	bl	211e38 <freep>
  21214c:	mov	w0, w20
  212150:	ldp	x20, x19, [sp, #32]
  212154:	ldp	x29, x30, [sp, #16]
  212158:	add	sp, sp, #0x30
  21215c:	ret
  212160:	adrp	x1, 201000 <__FRAME_END__-0x610>
  212164:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212168:	adrp	x4, 201000 <__FRAME_END__-0x610>
  21216c:	add	x1, x1, #0x54b
  212170:	add	x2, x2, #0xf1
  212174:	add	x4, x4, #0x14f
  212178:	mov	w3, #0x16                  	// #22
  21217c:	bl	2126b0 <log_assert_failed_realm@plt>

0000000000212180 <make_overlay>:
  212180:	stp	x29, x30, [sp, #-48]!
  212184:	stp	x22, x21, [sp, #16]
  212188:	stp	x20, x19, [sp, #32]
  21218c:	mov	x29, sp
  212190:	sub	sp, sp, #0x20
  212194:	stur	xzr, [x29, #-8]
  212198:	cbz	x0, 212438 <make_overlay+0x2b8>
  21219c:	mov	x19, x0
  2121a0:	adrp	x0, 201000 <__FRAME_END__-0x610>
  2121a4:	add	x0, x0, #0x448
  2121a8:	mov	w1, #0x1c0                 	// #448
  2121ac:	bl	2126e0 <mkdir_p@plt>
  2121b0:	tbnz	w0, #31, 2122dc <make_overlay+0x15c>
  2121b4:	adrp	x1, 201000 <__FRAME_END__-0x610>
  2121b8:	adrp	x2, 201000 <__FRAME_END__-0x610>
  2121bc:	add	x1, x1, #0x315
  2121c0:	adrp	x5, 201000 <__FRAME_END__-0x610>
  2121c4:	add	x2, x2, #0x448
  2121c8:	add	x5, x5, #0x16f
  2121cc:	mov	w0, #0x3                   	// #3
  2121d0:	mov	w4, #0x1000000             	// #16777216
  2121d4:	mov	x3, x1
  2121d8:	bl	2126f0 <mount_verbose@plt>
  2121dc:	tbnz	w0, #31, 212320 <make_overlay+0x1a0>
  2121e0:	adrp	x0, 201000 <__FRAME_END__-0x610>
  2121e4:	add	x0, x0, #0x3c5
  2121e8:	mov	w1, #0x1ed                 	// #493
  2121ec:	bl	212700 <mkdir@plt>
  2121f0:	tbnz	w0, #31, 212340 <make_overlay+0x1c0>
  2121f4:	adrp	x0, 201000 <__FRAME_END__-0x610>
  2121f8:	add	x0, x0, #0xcc
  2121fc:	mov	w1, #0x1ed                 	// #493
  212200:	bl	212700 <mkdir@plt>
  212204:	tbnz	w0, #31, 21237c <make_overlay+0x1fc>
  212208:	adrp	x1, 201000 <__FRAME_END__-0x610>
  21220c:	add	x1, x1, #0x510
  212210:	mov	x0, x19
  212214:	bl	212750 <shell_escape@plt>
  212218:	stur	x0, [x29, #-8]
  21221c:	cbz	x0, 2123dc <make_overlay+0x25c>
  212220:	ldur	x9, [x29, #-8]
  212224:	adrp	x8, 201000 <__FRAME_END__-0x610>
  212228:	adrp	x10, 201000 <__FRAME_END__-0x610>
  21222c:	mov	x21, xzr
  212230:	mov	x20, xzr
  212234:	add	x8, x8, #0x1ed
  212238:	add	x10, x10, #0x2e
  21223c:	sub	x22, x29, #0x20
  212240:	stp	x9, x10, [x29, #-24]
  212244:	stur	x8, [x29, #-32]
  212248:	ldr	x0, [x22, x21]
  21224c:	cbz	x0, 212264 <make_overlay+0xe4>
  212250:	bl	212760 <strlen@plt>
  212254:	add	x21, x21, #0x8
  212258:	cmp	x21, #0x18
  21225c:	add	x20, x0, x20
  212260:	b.ne	212248 <make_overlay+0xc8>  // b.any
  212264:	add	x20, x20, #0x1
  212268:	mov	x0, x20
  21226c:	bl	212488 <size_multiply_overflow>
  212270:	tbnz	w0, #0, 212458 <make_overlay+0x2d8>
  212274:	cmp	x20, #0x400, lsl #12
  212278:	b.hi	212464 <make_overlay+0x2e4>  // b.pmore
  21227c:	add	x9, x20, #0xf
  212280:	mov	x8, sp
  212284:	and	x9, x9, #0xfffffffffffffff0
  212288:	sub	x20, x8, x9
  21228c:	mov	sp, x20
  212290:	mov	x21, xzr
  212294:	sub	x22, x29, #0x20
  212298:	mov	x0, x20
  21229c:	ldr	x1, [x22, x21]
  2122a0:	cbz	x1, 2122b4 <make_overlay+0x134>
  2122a4:	bl	212770 <stpcpy@plt>
  2122a8:	add	x21, x21, #0x8
  2122ac:	cmp	x21, #0x18
  2122b0:	b.ne	21229c <make_overlay+0x11c>  // b.any
  2122b4:	adrp	x1, 201000 <__FRAME_END__-0x610>
  2122b8:	add	x1, x1, #0x4a2
  2122bc:	strb	wzr, [x0]
  2122c0:	mov	w0, #0x3                   	// #3
  2122c4:	mov	x2, x19
  2122c8:	mov	x3, x1
  2122cc:	mov	x4, xzr
  2122d0:	mov	x5, x20
  2122d4:	bl	2126f0 <mount_verbose@plt>
  2122d8:	b	2123f4 <make_overlay+0x274>
  2122dc:	mov	w20, w0
  2122e0:	mov	w0, wzr
  2122e4:	bl	2125f0 <log_get_max_level_realm@plt>
  2122e8:	cmp	w0, #0x3
  2122ec:	b.lt	212330 <make_overlay+0x1b0>  // b.tstop
  2122f0:	adrp	x2, 201000 <__FRAME_END__-0x610>
  2122f4:	adrp	x4, 201000 <__FRAME_END__-0x610>
  2122f8:	adrp	x5, 201000 <__FRAME_END__-0x610>
  2122fc:	add	x2, x2, #0xf1
  212300:	add	x4, x4, #0x238
  212304:	add	x5, x5, #0x397
  212308:	mov	w0, #0x3                   	// #3
  21230c:	mov	w3, #0x51                  	// #81
  212310:	mov	w1, w20
  212314:	bl	212600 <log_internal_realm@plt>
  212318:	mov	w20, w0
  21231c:	b	212418 <make_overlay+0x298>
  212320:	mov	w20, w0
  212324:	mov	w8, wzr
  212328:	cbnz	w8, 212400 <make_overlay+0x280>
  21232c:	b	21240c <make_overlay+0x28c>
  212330:	mov	w8, wzr
  212334:	neg	w9, w20
  212338:	sub	w20, w8, w9, uxtb
  21233c:	b	212418 <make_overlay+0x298>
  212340:	bl	2126a0 <__errno_location@plt>
  212344:	ldr	w19, [x0]
  212348:	mov	w0, wzr
  21234c:	bl	2125f0 <log_get_max_level_realm@plt>
  212350:	cmp	w0, #0x3
  212354:	b.lt	2123c0 <make_overlay+0x240>  // b.tstop
  212358:	adrp	x2, 201000 <__FRAME_END__-0x610>
  21235c:	adrp	x4, 201000 <__FRAME_END__-0x610>
  212360:	adrp	x5, 201000 <__FRAME_END__-0x610>
  212364:	add	x2, x2, #0xf1
  212368:	add	x4, x4, #0x238
  21236c:	add	x5, x5, #0x513
  212370:	mov	w0, #0x3                   	// #3
  212374:	mov	w3, #0x5a                  	// #90
  212378:	b	2123b4 <make_overlay+0x234>
  21237c:	bl	2126a0 <__errno_location@plt>
  212380:	ldr	w19, [x0]
  212384:	mov	w0, wzr
  212388:	bl	2125f0 <log_get_max_level_realm@plt>
  21238c:	cmp	w0, #0x3
  212390:	b.lt	2123c0 <make_overlay+0x240>  // b.tstop
  212394:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212398:	adrp	x4, 201000 <__FRAME_END__-0x610>
  21239c:	adrp	x5, 201000 <__FRAME_END__-0x610>
  2123a0:	add	x2, x2, #0xf1
  2123a4:	add	x4, x4, #0x238
  2123a8:	add	x5, x5, #0x245
  2123ac:	mov	w0, #0x3                   	// #3
  2123b0:	mov	w3, #0x5f                  	// #95
  2123b4:	mov	w1, w19
  2123b8:	bl	212600 <log_internal_realm@plt>
  2123bc:	b	2123f4 <make_overlay+0x274>
  2123c0:	cmp	w19, #0x0
  2123c4:	mov	w8, wzr
  2123c8:	cneg	w9, w19, mi  // mi = first
  2123cc:	sub	w20, w8, w9, uxtb
  2123d0:	mov	w8, #0x1                   	// #1
  2123d4:	cbnz	w8, 212400 <make_overlay+0x280>
  2123d8:	b	21240c <make_overlay+0x28c>
  2123dc:	adrp	x1, 201000 <__FRAME_END__-0x610>
  2123e0:	adrp	x3, 201000 <__FRAME_END__-0x610>
  2123e4:	add	x1, x1, #0xf1
  2123e8:	add	x3, x3, #0x238
  2123ec:	mov	w2, #0x65                  	// #101
  2123f0:	bl	212780 <log_oom_internal@plt>
  2123f4:	mov	w20, w0
  2123f8:	mov	w8, #0x1                   	// #1
  2123fc:	cbz	w8, 21240c <make_overlay+0x28c>
  212400:	adrp	x0, 201000 <__FRAME_END__-0x610>
  212404:	add	x0, x0, #0x448
  212408:	bl	212790 <umount_verbose@plt>
  21240c:	adrp	x0, 201000 <__FRAME_END__-0x610>
  212410:	add	x0, x0, #0x448
  212414:	bl	212740 <rmdir@plt>
  212418:	sub	x0, x29, #0x8
  21241c:	bl	211e38 <freep>
  212420:	mov	w0, w20
  212424:	mov	sp, x29
  212428:	ldp	x20, x19, [sp, #32]
  21242c:	ldp	x22, x21, [sp, #16]
  212430:	ldp	x29, x30, [sp], #48
  212434:	ret
  212438:	adrp	x1, 201000 <__FRAME_END__-0x610>
  21243c:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212440:	adrp	x4, 201000 <__FRAME_END__-0x610>
  212444:	add	x1, x1, #0x54b
  212448:	add	x2, x2, #0xf1
  21244c:	add	x4, x4, #0x1ce
  212450:	mov	w3, #0x4d                  	// #77
  212454:	bl	2126b0 <log_assert_failed_realm@plt>
  212458:	adrp	x1, 201000 <__FRAME_END__-0x610>
  21245c:	add	x1, x1, #0x27c
  212460:	b	21246c <make_overlay+0x2ec>
  212464:	adrp	x1, 201000 <__FRAME_END__-0x610>
  212468:	add	x1, x1, #0x87
  21246c:	adrp	x2, 201000 <__FRAME_END__-0x610>
  212470:	adrp	x4, 201000 <__FRAME_END__-0x610>
  212474:	add	x2, x2, #0xf1
  212478:	add	x4, x4, #0x1ce
  21247c:	mov	w3, #0x69                  	// #105
  212480:	mov	w0, wzr
  212484:	bl	2126b0 <log_assert_failed_realm@plt>

0000000000212488 <size_multiply_overflow>:
  212488:	mov	w0, wzr
  21248c:	ret

0000000000212490 <ALIGN_TO>:
  212490:	add	x8, x0, #0x7
  212494:	and	x0, x8, #0xfffffffffffffff8
  212498:	ret
  21249c:	udf	#0

00000000002124a0 <__libc_csu_init>:
  2124a0:	stp	x29, x30, [sp, #-64]!
  2124a4:	mov	x29, sp
  2124a8:	stp	x19, x20, [sp, #16]
  2124ac:	adrp	x20, 222000 <umount_verbose@plt+0xf870>
  2124b0:	add	x20, x20, #0x7b0
  2124b4:	stp	x21, x22, [sp, #32]
  2124b8:	adrp	x21, 222000 <umount_verbose@plt+0xf870>
  2124bc:	add	x21, x21, #0x7a8
  2124c0:	sub	x20, x20, x21
  2124c4:	mov	w22, w0
  2124c8:	stp	x23, x24, [sp, #48]
  2124cc:	mov	x23, x1
  2124d0:	mov	x24, x2
  2124d4:	bl	212524 <_init>
  2124d8:	cmp	xzr, x20, asr #3
  2124dc:	b.eq	212508 <__libc_csu_init+0x68>  // b.none
  2124e0:	asr	x20, x20, #3
  2124e4:	mov	x19, #0x0                   	// #0
  2124e8:	ldr	x3, [x21, x19, lsl #3]
  2124ec:	mov	x2, x24
  2124f0:	add	x19, x19, #0x1
  2124f4:	mov	x1, x23
  2124f8:	mov	w0, w22
  2124fc:	blr	x3
  212500:	cmp	x20, x19
  212504:	b.ne	2124e8 <__libc_csu_init+0x48>  // b.any
  212508:	ldp	x19, x20, [sp, #16]
  21250c:	ldp	x21, x22, [sp, #32]
  212510:	ldp	x23, x24, [sp, #48]
  212514:	ldp	x29, x30, [sp], #64
  212518:	ret
  21251c:	nop

0000000000212520 <__libc_csu_fini>:
  212520:	ret

Disassembly of section .init:

0000000000212524 <_init>:
  212524:	stp	x29, x30, [sp, #-16]!
  212528:	mov	x29, sp
  21252c:	bl	211758 <call_weak_fn>
  212530:	ldp	x29, x30, [sp], #16
  212534:	ret

Disassembly of section .fini:

0000000000212538 <_fini>:
  212538:	stp	x29, x30, [sp, #-16]!
  21253c:	mov	x29, sp
  212540:	ldp	x29, x30, [sp], #16
  212544:	ret

Disassembly of section .plt:

0000000000212550 <__libc_start_main@plt-0x20>:
  212550:	stp	x16, x30, [sp, #-16]!
  212554:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212558:	ldr	x17, [x16, #2472]
  21255c:	add	x16, x16, #0x9a8
  212560:	br	x17
  212564:	nop
  212568:	nop
  21256c:	nop

0000000000212570 <__libc_start_main@plt>:
  212570:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212574:	ldr	x17, [x16, #2480]
  212578:	add	x16, x16, #0x9b0
  21257c:	br	x17

0000000000212580 <abort@plt>:
  212580:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212584:	ldr	x17, [x16, #2488]
  212588:	add	x16, x16, #0x9b8
  21258c:	br	x17

0000000000212590 <__gmon_start__@plt>:
  212590:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212594:	ldr	x17, [x16, #2496]
  212598:	add	x16, x16, #0x9c0
  21259c:	br	x17

00000000002125a0 <ask_password_agent_close@plt>:
  2125a0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2125a4:	ldr	x17, [x16, #2504]
  2125a8:	add	x16, x16, #0x9c8
  2125ac:	br	x17

00000000002125b0 <polkit_agent_close@plt>:
  2125b0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2125b4:	ldr	x17, [x16, #2512]
  2125b8:	add	x16, x16, #0x9d0
  2125bc:	br	x17

00000000002125c0 <pager_close@plt>:
  2125c0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2125c4:	ldr	x17, [x16, #2520]
  2125c8:	add	x16, x16, #0x9d8
  2125cc:	br	x17

00000000002125d0 <mac_selinux_finish@plt>:
  2125d0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2125d4:	ldr	x17, [x16, #2528]
  2125d8:	add	x16, x16, #0x9e0
  2125dc:	br	x17

00000000002125e0 <log_setup_service@plt>:
  2125e0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2125e4:	ldr	x17, [x16, #2536]
  2125e8:	add	x16, x16, #0x9e8
  2125ec:	br	x17

00000000002125f0 <log_get_max_level_realm@plt>:
  2125f0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2125f4:	ldr	x17, [x16, #2544]
  2125f8:	add	x16, x16, #0x9f0
  2125fc:	br	x17

0000000000212600 <log_internal_realm@plt>:
  212600:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212604:	ldr	x17, [x16, #2552]
  212608:	add	x16, x16, #0x9f8
  21260c:	br	x17

0000000000212610 <query_volatile_mode@plt>:
  212610:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212614:	ldr	x17, [x16, #2560]
  212618:	add	x16, x16, #0xa00
  21261c:	br	x17

0000000000212620 <volatile_mode_from_string@plt>:
  212620:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212624:	ldr	x17, [x16, #2568]
  212628:	add	x16, x16, #0xa08
  21262c:	br	x17

0000000000212630 <path_is_mount_point@plt>:
  212630:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212634:	ldr	x17, [x16, #2576]
  212638:	add	x16, x16, #0xa10
  21263c:	br	x17

0000000000212640 <path_is_temporary_fs@plt>:
  212640:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212644:	ldr	x17, [x16, #2584]
  212648:	add	x16, x16, #0xa18
  21264c:	br	x17

0000000000212650 <path_is_absolute@plt>:
  212650:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212654:	ldr	x17, [x16, #2592]
  212658:	add	x16, x16, #0xa20
  21265c:	br	x17

0000000000212660 <path_equal@plt>:
  212660:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212664:	ldr	x17, [x16, #2600]
  212668:	add	x16, x16, #0xa28
  21266c:	br	x17

0000000000212670 <get_block_device_harder@plt>:
  212670:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212674:	ldr	x17, [x16, #2608]
  212678:	add	x16, x16, #0xa30
  21267c:	br	x17

0000000000212680 <device_path_make_major_minor@plt>:
  212680:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212684:	ldr	x17, [x16, #2616]
  212688:	add	x16, x16, #0xa38
  21268c:	br	x17

0000000000212690 <symlink@plt>:
  212690:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212694:	ldr	x17, [x16, #2624]
  212698:	add	x16, x16, #0xa40
  21269c:	br	x17

00000000002126a0 <__errno_location@plt>:
  2126a0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2126a4:	ldr	x17, [x16, #2632]
  2126a8:	add	x16, x16, #0xa48
  2126ac:	br	x17

00000000002126b0 <log_assert_failed_realm@plt>:
  2126b0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2126b4:	ldr	x17, [x16, #2640]
  2126b8:	add	x16, x16, #0xa50
  2126bc:	br	x17

00000000002126c0 <free@plt>:
  2126c0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2126c4:	ldr	x17, [x16, #2648]
  2126c8:	add	x16, x16, #0xa58
  2126cc:	br	x17

00000000002126d0 <chase_symlinks@plt>:
  2126d0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2126d4:	ldr	x17, [x16, #2656]
  2126d8:	add	x16, x16, #0xa60
  2126dc:	br	x17

00000000002126e0 <mkdir_p@plt>:
  2126e0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2126e4:	ldr	x17, [x16, #2664]
  2126e8:	add	x16, x16, #0xa68
  2126ec:	br	x17

00000000002126f0 <mount_verbose@plt>:
  2126f0:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  2126f4:	ldr	x17, [x16, #2672]
  2126f8:	add	x16, x16, #0xa70
  2126fc:	br	x17

0000000000212700 <mkdir@plt>:
  212700:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212704:	ldr	x17, [x16, #2680]
  212708:	add	x16, x16, #0xa78
  21270c:	br	x17

0000000000212710 <bind_remount_recursive@plt>:
  212710:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212714:	ldr	x17, [x16, #2688]
  212718:	add	x16, x16, #0xa80
  21271c:	br	x17

0000000000212720 <umount_recursive@plt>:
  212720:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212724:	ldr	x17, [x16, #2696]
  212728:	add	x16, x16, #0xa88
  21272c:	br	x17

0000000000212730 <mount@plt>:
  212730:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212734:	ldr	x17, [x16, #2704]
  212738:	add	x16, x16, #0xa90
  21273c:	br	x17

0000000000212740 <rmdir@plt>:
  212740:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212744:	ldr	x17, [x16, #2712]
  212748:	add	x16, x16, #0xa98
  21274c:	br	x17

0000000000212750 <shell_escape@plt>:
  212750:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212754:	ldr	x17, [x16, #2720]
  212758:	add	x16, x16, #0xaa0
  21275c:	br	x17

0000000000212760 <strlen@plt>:
  212760:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212764:	ldr	x17, [x16, #2728]
  212768:	add	x16, x16, #0xaa8
  21276c:	br	x17

0000000000212770 <stpcpy@plt>:
  212770:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212774:	ldr	x17, [x16, #2736]
  212778:	add	x16, x16, #0xab0
  21277c:	br	x17

0000000000212780 <log_oom_internal@plt>:
  212780:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212784:	ldr	x17, [x16, #2744]
  212788:	add	x16, x16, #0xab8
  21278c:	br	x17

0000000000212790 <umount_verbose@plt>:
  212790:	adrp	x16, 222000 <umount_verbose@plt+0xf870>
  212794:	ldr	x17, [x16, #2752]
  212798:	add	x16, x16, #0xac0
  21279c:	br	x17
