
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ordchr.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000608 <.init>:
 608:	stp	x29, x30, [sp, #-16]!
 60c:	mov	x29, sp
 610:	bl	6a0 <fprintf@plt+0x10>
 614:	ldp	x29, x30, [sp], #16
 618:	ret

Disassembly of section .plt:

0000000000000620 <exit@plt-0x20>:
 620:	stp	x16, x30, [sp, #-16]!
 624:	adrp	x16, 10000 <dl_load@@Base+0xf88c>
 628:	ldr	x17, [x16, #4088]
 62c:	add	x16, x16, #0xff8
 630:	br	x17
 634:	nop
 638:	nop
 63c:	nop

0000000000000640 <exit@plt>:
 640:	adrp	x16, 11000 <exit@GLIBC_2.17>
 644:	ldr	x17, [x16]
 648:	add	x16, x16, #0x0
 64c:	br	x17

0000000000000650 <__cxa_finalize@plt>:
 650:	adrp	x16, 11000 <exit@GLIBC_2.17>
 654:	ldr	x17, [x16, #8]
 658:	add	x16, x16, #0x8
 65c:	br	x17

0000000000000660 <__gmon_start__@plt>:
 660:	adrp	x16, 11000 <exit@GLIBC_2.17>
 664:	ldr	x17, [x16, #16]
 668:	add	x16, x16, #0x10
 66c:	br	x17

0000000000000670 <fwrite@plt>:
 670:	adrp	x16, 11000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16, #24]
 678:	add	x16, x16, #0x18
 67c:	br	x17

0000000000000680 <dcgettext@plt>:
 680:	adrp	x16, 11000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #32]
 688:	add	x16, x16, #0x20
 68c:	br	x17

0000000000000690 <fprintf@plt>:
 690:	adrp	x16, 11000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #40]
 698:	add	x16, x16, #0x28
 69c:	br	x17

Disassembly of section .text:

00000000000006a0 <dl_load@@Base-0xd4>:
 6a0:	adrp	x0, 10000 <dl_load@@Base+0xf88c>
 6a4:	ldr	x0, [x0, #4056]
 6a8:	cbz	x0, 6b0 <fprintf@plt+0x20>
 6ac:	b	660 <__gmon_start__@plt>
 6b0:	ret
 6b4:	nop
 6b8:	adrp	x0, 11000 <dl_load@@Base+0x1088c>
 6bc:	add	x0, x0, #0x98
 6c0:	adrp	x1, 11000 <dl_load@@Base+0x1088c>
 6c4:	add	x1, x1, #0x98
 6c8:	cmp	x1, x0
 6cc:	b.eq	6e4 <fprintf@plt+0x54>  // b.none
 6d0:	adrp	x1, 10000 <dl_load@@Base+0xf88c>
 6d4:	ldr	x1, [x1, #4032]
 6d8:	cbz	x1, 6e4 <fprintf@plt+0x54>
 6dc:	mov	x16, x1
 6e0:	br	x16
 6e4:	ret
 6e8:	adrp	x0, 11000 <dl_load@@Base+0x1088c>
 6ec:	add	x0, x0, #0x98
 6f0:	adrp	x1, 11000 <dl_load@@Base+0x1088c>
 6f4:	add	x1, x1, #0x98
 6f8:	sub	x1, x1, x0
 6fc:	lsr	x2, x1, #63
 700:	add	x1, x2, x1, asr #3
 704:	cmp	xzr, x1, asr #1
 708:	asr	x1, x1, #1
 70c:	b.eq	724 <fprintf@plt+0x94>  // b.none
 710:	adrp	x2, 10000 <dl_load@@Base+0xf88c>
 714:	ldr	x2, [x2, #4064]
 718:	cbz	x2, 724 <fprintf@plt+0x94>
 71c:	mov	x16, x2
 720:	br	x16
 724:	ret
 728:	stp	x29, x30, [sp, #-32]!
 72c:	mov	x29, sp
 730:	str	x19, [sp, #16]
 734:	adrp	x19, 11000 <dl_load@@Base+0x1088c>
 738:	ldrb	w0, [x19, #152]
 73c:	cbnz	w0, 764 <fprintf@plt+0xd4>
 740:	adrp	x0, 10000 <dl_load@@Base+0xf88c>
 744:	ldr	x0, [x0, #4040]
 748:	cbz	x0, 758 <fprintf@plt+0xc8>
 74c:	adrp	x0, 11000 <dl_load@@Base+0x1088c>
 750:	ldr	x0, [x0, #48]
 754:	bl	650 <__cxa_finalize@plt>
 758:	bl	6b8 <fprintf@plt+0x28>
 75c:	mov	w0, #0x1                   	// #1
 760:	strb	w0, [x19, #152]
 764:	ldr	x19, [sp, #16]
 768:	ldp	x29, x30, [sp], #32
 76c:	ret
 770:	b	6e8 <fprintf@plt+0x58>

0000000000000774 <dl_load@@Base>:
 774:	stp	x29, x30, [sp, #-80]!
 778:	stp	x24, x23, [sp, #32]
 77c:	stp	x22, x21, [sp, #48]
 780:	adrp	x22, 11000 <dl_load@@Base+0x1088c>
 784:	adrp	x23, 11000 <dl_load@@Base+0x1088c>
 788:	stp	x26, x25, [sp, #16]
 78c:	stp	x20, x19, [sp, #64]
 790:	str	x0, [x22, #160]
 794:	str	x1, [x23, #168]
 798:	ldr	w8, [x0]
 79c:	mov	x29, sp
 7a0:	cmp	w8, #0x2
 7a4:	b.ne	860 <dl_load@@Base+0xec>  // b.any
 7a8:	ldr	w8, [x0, #4]
 7ac:	tbnz	w8, #31, 860 <dl_load@@Base+0xec>
 7b0:	adrp	x26, 11000 <dl_load@@Base+0x1088c>
 7b4:	adrp	x19, 0 <exit@plt-0x640>
 7b8:	adrp	x20, 0 <exit@plt-0x640>
 7bc:	mov	x25, xzr
 7c0:	mov	w24, wzr
 7c4:	add	x26, x26, #0x38
 7c8:	add	x19, x19, #0xb09
 7cc:	add	x20, x20, #0xb3d
 7d0:	b	7e0 <dl_load@@Base+0x6c>
 7d4:	add	x25, x25, #0x30
 7d8:	cmp	x25, #0x60
 7dc:	b.eq	828 <dl_load@@Base+0xb4>  // b.none
 7e0:	add	x21, x26, x25
 7e4:	ldr	x8, [x21]
 7e8:	cbz	x8, 828 <dl_load@@Base+0xb4>
 7ec:	ldr	x8, [x22, #160]
 7f0:	ldr	x0, [x23, #168]
 7f4:	mov	x1, x19
 7f8:	mov	x2, x21
 7fc:	ldr	x8, [x8, #48]
 800:	blr	x8
 804:	cbnz	w0, 7d4 <dl_load@@Base+0x60>
 808:	ldr	x8, [x22, #160]
 80c:	ldr	x0, [x23, #168]
 810:	ldr	x2, [x21]
 814:	mov	x1, x20
 818:	ldr	x8, [x8, #104]
 81c:	blr	x8
 820:	add	w24, w24, #0x1
 824:	b	7d4 <dl_load@@Base+0x60>
 828:	ldr	x8, [x22, #160]
 82c:	ldr	x0, [x23, #168]
 830:	adrp	x1, 0 <exit@plt-0x640>
 834:	add	x1, x1, #0xbe1
 838:	ldr	x8, [x8, #88]
 83c:	blr	x8
 840:	cmp	w24, #0x0
 844:	ldp	x20, x19, [sp, #64]
 848:	ldp	x22, x21, [sp, #48]
 84c:	ldp	x24, x23, [sp, #32]
 850:	ldp	x26, x25, [sp, #16]
 854:	cset	w0, eq  // eq = none
 858:	ldp	x29, x30, [sp], #80
 85c:	ret
 860:	adrp	x19, 10000 <dl_load@@Base+0xf88c>
 864:	ldr	x19, [x19, #4048]
 868:	adrp	x0, 0 <exit@plt-0x640>
 86c:	add	x0, x0, #0xae4
 870:	mov	w1, #0x25                  	// #37
 874:	ldr	x3, [x19]
 878:	mov	w2, #0x1                   	// #1
 87c:	bl	670 <fwrite@plt>
 880:	ldr	x8, [x22, #160]
 884:	ldr	x0, [x19]
 888:	adrp	x1, 0 <exit@plt-0x640>
 88c:	add	x1, x1, #0xb0a
 890:	ldp	w4, w5, [x8]
 894:	mov	w2, #0x2                   	// #2
 898:	mov	w3, wzr
 89c:	bl	690 <fprintf@plt>
 8a0:	mov	w0, #0x1                   	// #1
 8a4:	bl	640 <exit@plt>
 8a8:	sub	sp, sp, #0x50
 8ac:	str	x21, [sp, #56]
 8b0:	adrp	x21, 11000 <dl_load@@Base+0x1088c>
 8b4:	ldr	x8, [x21, #160]
 8b8:	stp	x29, x30, [sp, #40]
 8bc:	stp	x20, x19, [sp, #64]
 8c0:	adrp	x20, 11000 <dl_load@@Base+0x1088c>
 8c4:	ldr	x8, [x8, #152]
 8c8:	ldr	x0, [x20, #168]
 8cc:	mov	x19, x1
 8d0:	mov	x3, sp
 8d4:	mov	w2, #0x2                   	// #2
 8d8:	mov	x1, xzr
 8dc:	str	d8, [sp, #32]
 8e0:	add	x29, sp, #0x20
 8e4:	blr	x8
 8e8:	cbz	w0, 8fc <dl_load@@Base+0x188>
 8ec:	ldr	x8, [sp, #8]
 8f0:	ldr	b0, [x8]
 8f4:	ucvtf	d8, d0
 8f8:	b	934 <dl_load@@Base+0x1c0>
 8fc:	ldr	x8, [x21, #160]
 900:	fmov	d8, #-1.000000000000000000e+00
 904:	ldr	w9, [x8, #24]
 908:	cbz	w9, 934 <dl_load@@Base+0x1c0>
 90c:	ldr	x21, [x8, #112]
 910:	ldr	x20, [x20, #168]
 914:	adrp	x1, 0 <exit@plt-0x640>
 918:	add	x1, x1, #0xb5f
 91c:	mov	w2, #0x5                   	// #5
 920:	mov	x0, xzr
 924:	bl	680 <dcgettext@plt>
 928:	mov	x1, x0
 92c:	mov	x0, x20
 930:	blr	x21
 934:	mov	v0.16b, v8.16b
 938:	mov	x0, x19
 93c:	bl	a14 <dl_load@@Base+0x2a0>
 940:	ldp	x20, x19, [sp, #64]
 944:	ldr	x21, [sp, #56]
 948:	ldp	x29, x30, [sp, #40]
 94c:	ldr	d8, [sp, #32]
 950:	add	sp, sp, #0x50
 954:	ret
 958:	sub	sp, sp, #0x60
 95c:	stp	x22, x21, [sp, #64]
 960:	adrp	x21, 11000 <dl_load@@Base+0x1088c>
 964:	ldr	x8, [x21, #160]
 968:	stp	x29, x30, [sp, #32]
 96c:	add	x29, sp, #0x20
 970:	stp	x20, x19, [sp, #80]
 974:	strh	wzr, [x29, #28]
 978:	adrp	x22, 11000 <dl_load@@Base+0x1088c>
 97c:	ldr	x8, [x8, #152]
 980:	ldr	x0, [x22, #168]
 984:	mov	x19, x1
 988:	mov	x3, sp
 98c:	mov	w2, #0x1                   	// #1
 990:	mov	x1, xzr
 994:	str	x23, [sp, #48]
 998:	blr	x8
 99c:	cbz	w0, 9b4 <dl_load@@Base+0x240>
 9a0:	ldr	d0, [sp, #8]
 9a4:	strb	wzr, [x29, #29]
 9a8:	fcvtzu	w8, d0
 9ac:	strb	w8, [x29, #28]
 9b0:	b	9e8 <dl_load@@Base+0x274>
 9b4:	ldr	x8, [x21, #160]
 9b8:	ldr	w9, [x8, #24]
 9bc:	cbz	w9, 9e8 <dl_load@@Base+0x274>
 9c0:	ldr	x23, [x8, #112]
 9c4:	ldr	x20, [x22, #168]
 9c8:	adrp	x1, 0 <exit@plt-0x640>
 9cc:	add	x1, x1, #0xb8a
 9d0:	mov	w2, #0x5                   	// #5
 9d4:	mov	x0, xzr
 9d8:	bl	680 <dcgettext@plt>
 9dc:	mov	x1, x0
 9e0:	mov	x0, x20
 9e4:	blr	x23
 9e8:	ldr	x0, [x21, #160]
 9ec:	ldr	x1, [x22, #168]
 9f0:	add	x2, x29, #0x1c
 9f4:	mov	x3, x19
 9f8:	bl	a28 <dl_load@@Base+0x2b4>
 9fc:	ldp	x20, x19, [sp, #80]
 a00:	ldp	x22, x21, [sp, #64]
 a04:	ldr	x23, [sp, #48]
 a08:	ldp	x29, x30, [sp, #32]
 a0c:	add	sp, sp, #0x60
 a10:	ret
 a14:	mov	w8, #0x1                   	// #1
 a18:	str	d0, [x0, #8]
 a1c:	str	w8, [x0]
 a20:	str	wzr, [x0, #16]
 a24:	ret
 a28:	stp	x29, x30, [sp, #-16]!
 a2c:	mov	x29, sp
 a30:	bl	a3c <dl_load@@Base+0x2c8>
 a34:	ldp	x29, x30, [sp], #16
 a38:	ret
 a3c:	stp	x29, x30, [sp, #-64]!
 a40:	movi	v0.2d, #0x0
 a44:	mov	w8, #0x2                   	// #2
 a48:	mov	w9, #0x1                   	// #1
 a4c:	str	x23, [sp, #16]
 a50:	stp	x22, x21, [sp, #32]
 a54:	stp	x20, x19, [sp, #48]
 a58:	stp	q0, q0, [x3]
 a5c:	str	w8, [x3]
 a60:	str	x9, [x3, #16]
 a64:	ldr	x8, [x0, #280]
 a68:	mov	x22, x0
 a6c:	mov	w0, #0x2                   	// #2
 a70:	mov	x29, sp
 a74:	mov	x19, x3
 a78:	mov	x20, x2
 a7c:	mov	x23, x1
 a80:	blr	x8
 a84:	mov	x21, x0
 a88:	cbnz	x0, aac <dl_load@@Base+0x338>
 a8c:	ldr	x8, [x22, #96]
 a90:	adrp	x1, 0 <exit@plt-0x640>
 a94:	adrp	x2, 0 <exit@plt-0x640>
 a98:	add	x1, x1, #0xbb5
 a9c:	add	x2, x2, #0xbd3
 aa0:	mov	w3, #0x2                   	// #2
 aa4:	mov	x0, x23
 aa8:	blr	x8
 aac:	ldrb	w8, [x20]
 ab0:	strb	wzr, [x21, #1]
 ab4:	mov	x0, x19
 ab8:	ldr	x23, [sp, #16]
 abc:	strb	w8, [x21]
 ac0:	str	x21, [x19, #8]
 ac4:	ldp	x20, x19, [sp, #48]
 ac8:	ldp	x22, x21, [sp, #32]
 acc:	ldp	x29, x30, [sp], #64
 ad0:	ret

Disassembly of section .fini:

0000000000000ad4 <.fini>:
 ad4:	stp	x29, x30, [sp, #-16]!
 ad8:	mov	x29, sp
 adc:	ldp	x29, x30, [sp], #16
 ae0:	ret
