
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mpi.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_gcry_mpi_m_check>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	bl	6c18 <_gcry_check_heap>
      14:	ldr	x0, [x19, #16]
      18:	bl	6c18 <_gcry_check_heap>
      1c:	ldr	x19, [sp, #16]
      20:	ldp	x29, x30, [sp], #32
      24:	ret

0000000000000028 <_gcry_mpi_alloc_limb_space>:
      28:	stp	x29, x30, [sp, #-32]!
      2c:	mov	x29, sp
      30:	str	x19, [sp, #16]
      34:	mov	w19, w0
      38:	ubfiz	x0, x19, #3, #32
      3c:	cmp	w19, #0x0
      40:	mov	x2, #0x8                   	// #8
      44:	csel	x0, x0, x2, ne  // ne = any
      48:	cbz	w1, 64 <_gcry_mpi_alloc_limb_space+0x3c>
      4c:	bl	6b58 <gcry_xmalloc_secure>
      50:	cbnz	w19, 58 <_gcry_mpi_alloc_limb_space+0x30>
      54:	str	xzr, [x0]
      58:	ldr	x19, [sp, #16]
      5c:	ldp	x29, x30, [sp], #32
      60:	ret
      64:	bl	6bb8 <gcry_xmalloc>
      68:	b	50 <_gcry_mpi_alloc_limb_space+0x28>

000000000000006c <_gcry_mpi_alloc>:
      6c:	stp	x29, x30, [sp, #-32]!
      70:	mov	x29, sp
      74:	stp	x19, x20, [sp, #16]
      78:	mov	w20, w0
      7c:	mov	x0, #0x18                  	// #24
      80:	bl	6bb8 <gcry_xmalloc>
      84:	mov	x19, x0
      88:	mov	x0, #0x0                   	// #0
      8c:	cbnz	w20, b4 <_gcry_mpi_alloc+0x48>
      90:	str	x0, [x19, #16]
      94:	str	w20, [x19]
      98:	str	wzr, [x19, #4]
      9c:	str	wzr, [x19, #8]
      a0:	str	wzr, [x19, #12]
      a4:	mov	x0, x19
      a8:	ldp	x19, x20, [sp, #16]
      ac:	ldp	x29, x30, [sp], #32
      b0:	ret
      b4:	mov	w1, #0x0                   	// #0
      b8:	mov	w0, w20
      bc:	bl	28 <_gcry_mpi_alloc_limb_space>
      c0:	b	90 <_gcry_mpi_alloc+0x24>

00000000000000c4 <_gcry_mpi_alloc_secure>:
      c4:	stp	x29, x30, [sp, #-32]!
      c8:	mov	x29, sp
      cc:	stp	x19, x20, [sp, #16]
      d0:	mov	w20, w0
      d4:	mov	x0, #0x18                  	// #24
      d8:	bl	6bb8 <gcry_xmalloc>
      dc:	mov	x19, x0
      e0:	mov	x0, #0x0                   	// #0
      e4:	cbnz	w20, 110 <_gcry_mpi_alloc_secure+0x4c>
      e8:	str	x0, [x19, #16]
      ec:	str	w20, [x19]
      f0:	mov	w0, #0x1                   	// #1
      f4:	str	w0, [x19, #12]
      f8:	str	wzr, [x19, #4]
      fc:	str	wzr, [x19, #8]
     100:	mov	x0, x19
     104:	ldp	x19, x20, [sp, #16]
     108:	ldp	x29, x30, [sp], #32
     10c:	ret
     110:	mov	w1, #0x1                   	// #1
     114:	mov	w0, w20
     118:	bl	28 <_gcry_mpi_alloc_limb_space>
     11c:	b	e8 <_gcry_mpi_alloc_secure+0x24>

0000000000000120 <_gcry_mpi_free_limb_space>:
     120:	cbz	x0, 154 <_gcry_mpi_free_limb_space+0x34>
     124:	stp	x29, x30, [sp, #-16]!
     128:	mov	x29, sp
     12c:	ubfiz	x2, x1, #3, #32
     130:	cbz	x2, 148 <_gcry_mpi_free_limb_space+0x28>
     134:	add	x2, x0, x2
     138:	mov	x1, x0
     13c:	strb	wzr, [x1], #1
     140:	cmp	x1, x2
     144:	b.ne	13c <_gcry_mpi_free_limb_space+0x1c>  // b.any
     148:	bl	6b08 <gcry_free>
     14c:	ldp	x29, x30, [sp], #16
     150:	ret
     154:	ret

0000000000000158 <_gcry_mpi_assign_limb_space>:
     158:	stp	x29, x30, [sp, #-48]!
     15c:	mov	x29, sp
     160:	stp	x19, x20, [sp, #16]
     164:	str	x21, [sp, #32]
     168:	mov	x19, x0
     16c:	mov	x21, x1
     170:	mov	w20, w2
     174:	ldr	w1, [x0]
     178:	ldr	x0, [x0, #16]
     17c:	bl	120 <_gcry_mpi_free_limb_space>
     180:	str	x21, [x19, #16]
     184:	str	w20, [x19]
     188:	ldp	x19, x20, [sp, #16]
     18c:	ldr	x21, [sp, #32]
     190:	ldp	x29, x30, [sp], #48
     194:	ret

0000000000000198 <_gcry_mpi_resize>:
     198:	stp	x29, x30, [sp, #-48]!
     19c:	mov	x29, sp
     1a0:	stp	x19, x20, [sp, #16]
     1a4:	mov	x19, x0
     1a8:	mov	w20, w1
     1ac:	ldr	w1, [x0]
     1b0:	cmp	w1, w20
     1b4:	b.cs	208 <_gcry_mpi_resize+0x70>  // b.hs, b.nlast
     1b8:	ldr	x0, [x0, #16]
     1bc:	cbz	x0, 230 <_gcry_mpi_resize+0x98>
     1c0:	str	x21, [sp, #32]
     1c4:	mov	w21, w20
     1c8:	ubfiz	x1, x20, #3, #32
     1cc:	bl	6be8 <gcry_xrealloc>
     1d0:	str	x0, [x19, #16]
     1d4:	ldrsw	x0, [x19]
     1d8:	cmp	x21, x0
     1dc:	b.ls	260 <_gcry_mpi_resize+0xc8>  // b.plast
     1e0:	ldr	x2, [x19, #16]
     1e4:	str	xzr, [x2, x0, lsl #3]
     1e8:	add	x0, x0, #0x1
     1ec:	cmp	x21, x0
     1f0:	b.ne	1e0 <_gcry_mpi_resize+0x48>  // b.any
     1f4:	ldr	x21, [sp, #32]
     1f8:	str	w20, [x19]
     1fc:	ldp	x19, x20, [sp, #16]
     200:	ldp	x29, x30, [sp], #48
     204:	ret
     208:	ldrsw	x0, [x0, #4]
     20c:	cmp	x0, w1, sxtw
     210:	b.cs	1fc <_gcry_mpi_resize+0x64>  // b.hs, b.nlast
     214:	ldr	x1, [x19, #16]
     218:	str	xzr, [x1, x0, lsl #3]
     21c:	add	x0, x0, #0x1
     220:	ldrsw	x1, [x19]
     224:	cmp	x1, x0
     228:	b.hi	214 <_gcry_mpi_resize+0x7c>  // b.pmore
     22c:	b	1fc <_gcry_mpi_resize+0x64>
     230:	ldr	w0, [x19, #12]
     234:	tbz	w0, #0, 24c <_gcry_mpi_resize+0xb4>
     238:	mov	x1, #0x8                   	// #8
     23c:	mov	w0, w20
     240:	bl	6b88 <gcry_xcalloc_secure>
     244:	str	x0, [x19, #16]
     248:	b	1f8 <_gcry_mpi_resize+0x60>
     24c:	mov	x1, #0x8                   	// #8
     250:	mov	w0, w20
     254:	bl	6b24 <gcry_xcalloc>
     258:	str	x0, [x19, #16]
     25c:	b	1f8 <_gcry_mpi_resize+0x60>
     260:	ldr	x21, [sp, #32]
     264:	b	1f8 <_gcry_mpi_resize+0x60>

0000000000000268 <_gcry_mpi_clear>:
     268:	str	wzr, [x0, #4]
     26c:	str	wzr, [x0, #12]
     270:	ret

0000000000000274 <_gcry_mpi_free>:
     274:	cbz	x0, 2d4 <_gcry_mpi_free+0x60>
     278:	stp	x29, x30, [sp, #-32]!
     27c:	mov	x29, sp
     280:	str	x19, [sp, #16]
     284:	mov	x19, x0
     288:	ldr	w0, [x0, #12]
     28c:	tbz	w0, #2, 2b8 <_gcry_mpi_free+0x44>
     290:	ldr	x0, [x19, #16]
     294:	bl	6b08 <gcry_free>
     298:	ldr	w0, [x19, #12]
     29c:	tst	w0, #0xfffffff8
     2a0:	b.ne	2c8 <_gcry_mpi_free+0x54>  // b.any
     2a4:	mov	x0, x19
     2a8:	bl	6b08 <gcry_free>
     2ac:	ldr	x19, [sp, #16]
     2b0:	ldp	x29, x30, [sp], #32
     2b4:	ret
     2b8:	ldr	w1, [x19]
     2bc:	ldr	x0, [x19, #16]
     2c0:	bl	120 <_gcry_mpi_free_limb_space>
     2c4:	b	298 <_gcry_mpi_free+0x24>
     2c8:	adrp	x0, 0 <_gcry_mpi_m_check>
     2cc:	ldr	x0, [x0]
     2d0:	bl	6d00 <_gcry_log_bug>
     2d4:	ret
	...

00000000000002e0 <gcry_mpi_set_opaque>:
     2e0:	stp	x29, x30, [sp, #-48]!
     2e4:	mov	x29, sp
     2e8:	stp	x19, x20, [sp, #16]
     2ec:	str	x21, [sp, #32]
     2f0:	mov	x19, x0
     2f4:	mov	x21, x1
     2f8:	mov	w20, w2
     2fc:	cbz	x0, 33c <gcry_mpi_set_opaque+0x5c>
     300:	ldr	w0, [x19, #12]
     304:	tbz	w0, #2, 34c <gcry_mpi_set_opaque+0x6c>
     308:	ldr	x0, [x19, #16]
     30c:	bl	6b08 <gcry_free>
     310:	str	x21, [x19, #16]
     314:	str	wzr, [x19]
     318:	str	wzr, [x19, #4]
     31c:	str	w20, [x19, #8]
     320:	mov	w0, #0x4                   	// #4
     324:	str	w0, [x19, #12]
     328:	mov	x0, x19
     32c:	ldp	x19, x20, [sp, #16]
     330:	ldr	x21, [sp, #32]
     334:	ldp	x29, x30, [sp], #48
     338:	ret
     33c:	mov	w0, #0x0                   	// #0
     340:	bl	6c <_gcry_mpi_alloc>
     344:	mov	x19, x0
     348:	b	300 <gcry_mpi_set_opaque+0x20>
     34c:	ldr	w1, [x19]
     350:	ldr	x0, [x19, #16]
     354:	bl	120 <_gcry_mpi_free_limb_space>
     358:	b	310 <gcry_mpi_set_opaque+0x30>

000000000000035c <gcry_mpi_get_opaque>:
     35c:	ldr	w2, [x0, #12]
     360:	tbz	w2, #2, 378 <gcry_mpi_get_opaque+0x1c>
     364:	cbz	x1, 370 <gcry_mpi_get_opaque+0x14>
     368:	ldr	w2, [x0, #8]
     36c:	str	w2, [x1]
     370:	ldr	x0, [x0, #16]
     374:	ret
     378:	stp	x29, x30, [sp, #-16]!
     37c:	mov	x29, sp
     380:	adrp	x0, 0 <_gcry_mpi_m_check>
     384:	ldr	x0, [x0]
     388:	bl	6d00 <_gcry_log_bug>
     38c:	nop
	...

0000000000000398 <_gcry_mpi_copy>:
     398:	stp	x29, x30, [sp, #-32]!
     39c:	mov	x29, sp
     3a0:	stp	x19, x20, [sp, #16]
     3a4:	mov	x19, x0
     3a8:	cbz	x0, 48c <_gcry_mpi_copy+0xf4>
     3ac:	ldr	w0, [x0, #12]
     3b0:	tbz	w0, #2, 43c <_gcry_mpi_copy+0xa4>
     3b4:	ldr	x0, [x19, #16]
     3b8:	bl	6b1c <gcry_is_secure>
     3bc:	cbz	w0, 418 <_gcry_mpi_copy+0x80>
     3c0:	ldr	w1, [x19, #8]
     3c4:	add	w0, w1, #0xe
     3c8:	adds	w1, w1, #0x7
     3cc:	csel	w0, w0, w1, mi  // mi = first
     3d0:	asr	w0, w0, #3
     3d4:	sxtw	x0, w0
     3d8:	bl	6b58 <gcry_xmalloc_secure>
     3dc:	mov	x20, x0
     3e0:	ldr	w1, [x19, #8]
     3e4:	add	w2, w1, #0xe
     3e8:	adds	w1, w1, #0x7
     3ec:	csel	w2, w2, w1, mi  // mi = first
     3f0:	asr	w2, w2, #3
     3f4:	sxtw	x2, w2
     3f8:	ldr	x1, [x19, #16]
     3fc:	mov	x0, x20
     400:	bl	0 <grub_memmove>
     404:	ldr	w2, [x19, #8]
     408:	mov	x1, x20
     40c:	mov	x0, #0x0                   	// #0
     410:	bl	2e0 <gcry_mpi_set_opaque>
     414:	b	48c <_gcry_mpi_copy+0xf4>
     418:	ldr	w1, [x19, #8]
     41c:	add	w0, w1, #0xe
     420:	adds	w1, w1, #0x7
     424:	csel	w0, w0, w1, mi  // mi = first
     428:	asr	w0, w0, #3
     42c:	sxtw	x0, w0
     430:	bl	6bb8 <gcry_xmalloc>
     434:	mov	x20, x0
     438:	b	3e0 <_gcry_mpi_copy+0x48>
     43c:	tbz	w0, #0, 498 <_gcry_mpi_copy+0x100>
     440:	ldr	w0, [x19, #4]
     444:	bl	c4 <_gcry_mpi_alloc_secure>
     448:	ldr	w1, [x19, #4]
     44c:	str	w1, [x0, #4]
     450:	ldr	w2, [x19, #8]
     454:	str	w2, [x0, #8]
     458:	ldr	w2, [x19, #12]
     45c:	str	w2, [x0, #12]
     460:	cmp	w1, #0x0
     464:	b.le	48c <_gcry_mpi_copy+0xf4>
     468:	mov	x1, #0x0                   	// #0
     46c:	ldr	x2, [x19, #16]
     470:	ldr	x3, [x2, x1, lsl #3]
     474:	ldr	x2, [x0, #16]
     478:	str	x3, [x2, x1, lsl #3]
     47c:	add	x1, x1, #0x1
     480:	ldr	w2, [x0, #4]
     484:	cmp	w2, w1
     488:	b.gt	46c <_gcry_mpi_copy+0xd4>
     48c:	ldp	x19, x20, [sp, #16]
     490:	ldp	x29, x30, [sp], #32
     494:	ret
     498:	ldr	w0, [x19, #4]
     49c:	bl	6c <_gcry_mpi_alloc>
     4a0:	b	448 <_gcry_mpi_copy+0xb0>

00000000000004a4 <_gcry_mpi_alloc_like>:
     4a4:	stp	x29, x30, [sp, #-48]!
     4a8:	mov	x29, sp
     4ac:	stp	x19, x20, [sp, #16]
     4b0:	mov	x19, x0
     4b4:	cbz	x0, 544 <_gcry_mpi_alloc_like+0xa0>
     4b8:	ldr	w0, [x0, #12]
     4bc:	tbz	w0, #2, 528 <_gcry_mpi_alloc_like+0x84>
     4c0:	str	x21, [sp, #32]
     4c4:	ldr	w0, [x19, #8]
     4c8:	add	w20, w0, #0xe
     4cc:	adds	w0, w0, #0x7
     4d0:	csel	w20, w20, w0, mi  // mi = first
     4d4:	asr	w20, w20, #3
     4d8:	ldr	x0, [x19, #16]
     4dc:	bl	6b1c <gcry_is_secure>
     4e0:	cbz	w0, 518 <_gcry_mpi_alloc_like+0x74>
     4e4:	sxtw	x0, w20
     4e8:	bl	6af4 <gcry_malloc_secure>
     4ec:	mov	x21, x0
     4f0:	sxtw	x2, w20
     4f4:	ldr	x1, [x19, #16]
     4f8:	mov	x0, x21
     4fc:	bl	0 <grub_memmove>
     500:	ldr	w2, [x19, #8]
     504:	mov	x1, x21
     508:	mov	x0, #0x0                   	// #0
     50c:	bl	2e0 <gcry_mpi_set_opaque>
     510:	ldr	x21, [sp, #32]
     514:	b	544 <_gcry_mpi_alloc_like+0xa0>
     518:	sxtw	x0, w20
     51c:	bl	6ae0 <gcry_malloc>
     520:	mov	x21, x0
     524:	b	4f0 <_gcry_mpi_alloc_like+0x4c>
     528:	tbz	w0, #0, 550 <_gcry_mpi_alloc_like+0xac>
     52c:	ldr	w0, [x19, #4]
     530:	bl	c4 <_gcry_mpi_alloc_secure>
     534:	str	wzr, [x0, #4]
     538:	str	wzr, [x0, #8]
     53c:	ldr	w1, [x19, #12]
     540:	str	w1, [x0, #12]
     544:	ldp	x19, x20, [sp, #16]
     548:	ldp	x29, x30, [sp], #48
     54c:	ret
     550:	ldr	w0, [x19, #4]
     554:	bl	6c <_gcry_mpi_alloc>
     558:	b	534 <_gcry_mpi_alloc_like+0x90>

000000000000055c <gcry_mpi_set>:
     55c:	stp	x29, x30, [sp, #-48]!
     560:	mov	x29, sp
     564:	stp	x19, x20, [sp, #16]
     568:	stp	x21, x22, [sp, #32]
     56c:	mov	x20, x0
     570:	mov	x21, x1
     574:	ldr	w19, [x1, #4]
     578:	ldr	w22, [x1, #8]
     57c:	cbz	x0, 5d8 <gcry_mpi_set+0x7c>
     580:	ldr	w0, [x20]
     584:	cmp	w0, w19
     588:	b.lt	5e8 <gcry_mpi_set+0x8c>  // b.tstop
     58c:	ldr	x0, [x20, #16]
     590:	ldr	x4, [x21, #16]
     594:	cmp	w19, #0x0
     598:	b.le	5b4 <gcry_mpi_set+0x58>
     59c:	mov	x2, #0x0                   	// #0
     5a0:	ldr	x3, [x4, x2, lsl #3]
     5a4:	str	x3, [x0, x2, lsl #3]
     5a8:	add	x2, x2, #0x1
     5ac:	cmp	w19, w2
     5b0:	b.gt	5a0 <gcry_mpi_set+0x44>
     5b4:	str	w19, [x20, #4]
     5b8:	ldr	w0, [x21, #12]
     5bc:	str	w0, [x20, #12]
     5c0:	str	w22, [x20, #8]
     5c4:	mov	x0, x20
     5c8:	ldp	x19, x20, [sp, #16]
     5cc:	ldp	x21, x22, [sp, #32]
     5d0:	ldp	x29, x30, [sp], #48
     5d4:	ret
     5d8:	mov	w0, w19
     5dc:	bl	6c <_gcry_mpi_alloc>
     5e0:	mov	x20, x0
     5e4:	b	580 <gcry_mpi_set+0x24>
     5e8:	mov	w1, w19
     5ec:	mov	x0, x20
     5f0:	bl	198 <_gcry_mpi_resize>
     5f4:	b	58c <gcry_mpi_set+0x30>

00000000000005f8 <gcry_mpi_set_ui>:
     5f8:	stp	x29, x30, [sp, #-32]!
     5fc:	mov	x29, sp
     600:	stp	x19, x20, [sp, #16]
     604:	mov	x19, x0
     608:	mov	x20, x1
     60c:	cbz	x0, 648 <gcry_mpi_set_ui+0x50>
     610:	ldr	w0, [x19]
     614:	cmp	w0, #0x0
     618:	b.le	658 <gcry_mpi_set_ui+0x60>
     61c:	ldr	x0, [x19, #16]
     620:	str	x20, [x0]
     624:	cmp	x20, #0x0
     628:	cset	w0, ne  // ne = any
     62c:	str	w0, [x19, #4]
     630:	str	wzr, [x19, #8]
     634:	str	wzr, [x19, #12]
     638:	mov	x0, x19
     63c:	ldp	x19, x20, [sp, #16]
     640:	ldp	x29, x30, [sp], #32
     644:	ret
     648:	mov	w0, #0x1                   	// #1
     64c:	bl	6c <_gcry_mpi_alloc>
     650:	mov	x19, x0
     654:	b	610 <gcry_mpi_set_ui+0x18>
     658:	mov	w1, #0x1                   	// #1
     65c:	mov	x0, x19
     660:	bl	198 <_gcry_mpi_resize>
     664:	b	61c <gcry_mpi_set_ui+0x24>

0000000000000668 <_gcry_mpi_get_ui>:
     668:	ldr	w2, [x0, #4]
     66c:	cmp	w2, #0x1
     670:	b.gt	694 <_gcry_mpi_get_ui+0x2c>
     674:	mov	x3, #0x0                   	// #0
     678:	b.eq	688 <_gcry_mpi_get_ui+0x20>  // b.none
     67c:	str	x3, [x1]
     680:	mov	w0, #0x0                   	// #0
     684:	ret
     688:	ldr	x0, [x0, #16]
     68c:	ldr	x3, [x0]
     690:	b	67c <_gcry_mpi_get_ui+0x14>
     694:	mov	w0, #0x23                  	// #35
     698:	b	684 <_gcry_mpi_get_ui+0x1c>

000000000000069c <gcry_mpi_get_ui>:
     69c:	stp	x29, x30, [sp, #-16]!
     6a0:	mov	x29, sp
     6a4:	bl	668 <_gcry_mpi_get_ui>
     6a8:	ldp	x29, x30, [sp], #16
     6ac:	ret

00000000000006b0 <_gcry_mpi_alloc_set_ui>:
     6b0:	stp	x29, x30, [sp, #-32]!
     6b4:	mov	x29, sp
     6b8:	str	x19, [sp, #16]
     6bc:	mov	x19, x0
     6c0:	mov	w0, #0x1                   	// #1
     6c4:	bl	6c <_gcry_mpi_alloc>
     6c8:	ldr	x2, [x0, #16]
     6cc:	str	x19, [x2]
     6d0:	cmp	x19, #0x0
     6d4:	cset	w2, ne  // ne = any
     6d8:	str	w2, [x0, #4]
     6dc:	str	wzr, [x0, #8]
     6e0:	ldr	x19, [sp, #16]
     6e4:	ldp	x29, x30, [sp], #32
     6e8:	ret

00000000000006ec <gcry_mpi_swap>:
     6ec:	sub	sp, sp, #0x20
     6f0:	ldp	x4, x5, [x0]
     6f4:	ldr	x2, [x0, #16]
     6f8:	ldp	x6, x7, [x1]
     6fc:	stp	x6, x7, [x0]
     700:	ldr	x3, [x1, #16]
     704:	str	x3, [x0, #16]
     708:	stp	x4, x5, [x1]
     70c:	str	x2, [x1, #16]
     710:	add	sp, sp, #0x20
     714:	ret

0000000000000718 <gcry_mpi_new>:
     718:	stp	x29, x30, [sp, #-16]!
     71c:	mov	x29, sp
     720:	add	w0, w0, #0x3f
     724:	lsr	w0, w0, #6
     728:	bl	6c <_gcry_mpi_alloc>
     72c:	ldp	x29, x30, [sp], #16
     730:	ret

0000000000000734 <gcry_mpi_snew>:
     734:	stp	x29, x30, [sp, #-16]!
     738:	mov	x29, sp
     73c:	add	w0, w0, #0x3f
     740:	lsr	w0, w0, #6
     744:	bl	c4 <_gcry_mpi_alloc_secure>
     748:	ldp	x29, x30, [sp], #16
     74c:	ret

0000000000000750 <gcry_mpi_release>:
     750:	stp	x29, x30, [sp, #-16]!
     754:	mov	x29, sp
     758:	bl	274 <_gcry_mpi_free>
     75c:	ldp	x29, x30, [sp], #16
     760:	ret

0000000000000764 <gcry_mpi_set_flag>:
     764:	stp	x29, x30, [sp, #-32]!
     768:	mov	x29, sp
     76c:	stp	x19, x20, [sp, #16]
     770:	cmp	w1, #0x1
     774:	b.ne	80c <gcry_mpi_set_flag+0xa8>  // b.any
     778:	mov	x19, x0
     77c:	ldr	w0, [x0, #12]
     780:	tbnz	w0, #0, 79c <gcry_mpi_set_flag+0x38>
     784:	orr	w0, w0, #0x1
     788:	str	w0, [x19, #12]
     78c:	ldr	x20, [x19, #16]
     790:	ldr	w0, [x19, #4]
     794:	cbnz	w0, 7c8 <gcry_mpi_set_flag+0x64>
     798:	cbnz	x20, 7a8 <gcry_mpi_set_flag+0x44>
     79c:	ldp	x19, x20, [sp, #16]
     7a0:	ldp	x29, x30, [sp], #32
     7a4:	ret
     7a8:	adrp	x0, 0 <_gcry_mpi_m_check>
     7ac:	ldr	x3, [x0]
     7b0:	mov	w2, #0xc1                  	// #193
     7b4:	adrp	x0, 0 <_gcry_mpi_m_check>
     7b8:	ldr	x1, [x0]
     7bc:	adrp	x0, 0 <_gcry_mpi_m_check>
     7c0:	ldr	x0, [x0]
     7c4:	bl	0 <_gcry_assert_failed>
     7c8:	mov	w1, #0x1                   	// #1
     7cc:	bl	28 <_gcry_mpi_alloc_limb_space>
     7d0:	ldr	w1, [x19, #4]
     7d4:	cmp	w1, #0x0
     7d8:	b.le	7f8 <gcry_mpi_set_flag+0x94>
     7dc:	mov	x1, #0x0                   	// #0
     7e0:	ldr	x2, [x20, x1, lsl #3]
     7e4:	str	x2, [x0, x1, lsl #3]
     7e8:	add	x1, x1, #0x1
     7ec:	ldr	w2, [x19, #4]
     7f0:	cmp	w2, w1
     7f4:	b.gt	7e0 <gcry_mpi_set_flag+0x7c>
     7f8:	str	x0, [x19, #16]
     7fc:	ldr	w1, [x19]
     800:	mov	x0, x20
     804:	bl	120 <_gcry_mpi_free_limb_space>
     808:	b	79c <gcry_mpi_set_flag+0x38>
     80c:	adrp	x0, 0 <_gcry_mpi_m_check>
     810:	ldr	x0, [x0]
     814:	bl	6d00 <_gcry_log_bug>
	...

0000000000000838 <gcry_mpi_clear_flag>:
     838:	stp	x29, x30, [sp, #-16]!
     83c:	mov	x29, sp
     840:	adrp	x0, 0 <_gcry_mpi_m_check>
     844:	ldr	x0, [x0]
     848:	bl	6d00 <_gcry_log_bug>
     84c:	nop
	...

0000000000000858 <gcry_mpi_get_flag>:
     858:	cmp	w1, #0x1
     85c:	b.eq	888 <gcry_mpi_get_flag+0x30>  // b.none
     860:	cmp	w1, #0x2
     864:	b.ne	874 <gcry_mpi_get_flag+0x1c>  // b.any
     868:	ldr	w0, [x0, #12]
     86c:	and	w0, w0, #0x4
     870:	ret
     874:	stp	x29, x30, [sp, #-16]!
     878:	mov	x29, sp
     87c:	adrp	x0, 0 <_gcry_mpi_m_check>
     880:	ldr	x0, [x0]
     884:	bl	6d00 <_gcry_log_bug>
     888:	ldr	w0, [x0, #12]
     88c:	and	w0, w0, #0x1
     890:	ret
     894:	nop
	...

00000000000008a0 <_gcry_mpi_normalize>:
     8a0:	cbz	x0, 8ac <_gcry_mpi_normalize+0xc>
     8a4:	ldr	w1, [x0, #12]
     8a8:	tbnz	w1, #2, 8e4 <_gcry_mpi_normalize+0x44>
     8ac:	ldr	w2, [x0, #4]
     8b0:	cbz	w2, 8e4 <_gcry_mpi_normalize+0x44>
     8b4:	ldr	x4, [x0, #16]
     8b8:	sub	w5, w2, #0x1
     8bc:	sxtw	x1, w5
     8c0:	sxtw	x3, w2
     8c4:	sub	x3, x3, #0x2
     8c8:	sub	x3, x3, w5, uxtw
     8cc:	ldr	x2, [x4, x1, lsl #3]
     8d0:	cbnz	x2, 8e4 <_gcry_mpi_normalize+0x44>
     8d4:	str	w1, [x0, #4]
     8d8:	sub	x1, x1, #0x1
     8dc:	cmp	x1, x3
     8e0:	b.ne	8cc <_gcry_mpi_normalize+0x2c>  // b.any
     8e4:	ret

00000000000008e8 <gcry_mpi_get_nbits>:
     8e8:	stp	x29, x30, [sp, #-32]!
     8ec:	mov	x29, sp
     8f0:	str	x19, [sp, #16]
     8f4:	mov	x19, x0
     8f8:	cbz	x0, 904 <gcry_mpi_get_nbits+0x1c>
     8fc:	ldr	w0, [x0, #12]
     900:	tbnz	w0, #2, 97c <gcry_mpi_get_nbits+0x94>
     904:	mov	x0, x19
     908:	bl	8a0 <_gcry_mpi_normalize>
     90c:	ldr	w2, [x19, #4]
     910:	mov	w0, #0x0                   	// #0
     914:	cbz	w2, 970 <gcry_mpi_get_nbits+0x88>
     918:	ldr	x0, [x19, #16]
     91c:	add	x0, x0, w2, sxtw #3
     920:	ldur	x3, [x0, #-8]
     924:	mov	w0, #0x40                  	// #64
     928:	cbz	x3, 968 <gcry_mpi_get_nbits+0x80>
     92c:	cmp	xzr, x3, lsr #56
     930:	b.ne	984 <gcry_mpi_get_nbits+0x9c>  // b.any
     934:	mov	x1, #0x30                  	// #48
     938:	lsr	x0, x3, x1
     93c:	tst	w0, #0xff
     940:	b.ne	94c <gcry_mpi_get_nbits+0x64>  // b.any
     944:	subs	x1, x1, #0x8
     948:	b.ne	938 <gcry_mpi_get_nbits+0x50>  // b.any
     94c:	mov	w0, #0x40                  	// #64
     950:	sub	w0, w0, w1
     954:	adrp	x4, 0 <_gcry_mpi_m_check>
     958:	ldr	x4, [x4]
     95c:	lsr	x1, x3, x1
     960:	ldrb	w1, [x4, x1]
     964:	sub	w0, w0, w1
     968:	lsl	w2, w2, #6
     96c:	sub	w0, w2, w0
     970:	ldr	x19, [sp, #16]
     974:	ldp	x29, x30, [sp], #32
     978:	ret
     97c:	ldr	w0, [x19, #8]
     980:	b	970 <gcry_mpi_get_nbits+0x88>
     984:	mov	x1, #0x38                  	// #56
     988:	b	94c <gcry_mpi_get_nbits+0x64>
     98c:	nop
	...

0000000000000998 <gcry_mpi_test_bit>:
     998:	lsr	w2, w1, #6
     99c:	ldr	w3, [x0, #4]
     9a0:	cmp	w3, w1, lsr #6
     9a4:	b.ls	9c0 <gcry_mpi_test_bit+0x28>  // b.plast
     9a8:	mov	w2, w2
     9ac:	ldr	x0, [x0, #16]
     9b0:	ldr	x0, [x0, x2, lsl #3]
     9b4:	lsr	x1, x0, x1
     9b8:	and	w0, w1, #0x1
     9bc:	ret
     9c0:	mov	w0, #0x0                   	// #0
     9c4:	b	9bc <gcry_mpi_test_bit+0x24>

00000000000009c8 <gcry_mpi_set_bit>:
     9c8:	stp	x29, x30, [sp, #-48]!
     9cc:	mov	x29, sp
     9d0:	stp	x19, x20, [sp, #16]
     9d4:	stp	x21, x22, [sp, #32]
     9d8:	mov	x19, x0
     9dc:	lsr	w20, w1, #6
     9e0:	and	w21, w1, #0x3f
     9e4:	ldr	w0, [x0, #4]
     9e8:	cmp	w0, w1, lsr #6
     9ec:	b.ls	a1c <gcry_mpi_set_bit+0x54>  // b.plast
     9f0:	mov	w0, w20
     9f4:	ldr	x3, [x19, #16]
     9f8:	mov	x1, #0x1                   	// #1
     9fc:	lsl	x2, x1, x21
     a00:	ldr	x1, [x3, x0, lsl #3]
     a04:	orr	x1, x1, x2
     a08:	str	x1, [x3, x0, lsl #3]
     a0c:	ldp	x19, x20, [sp, #16]
     a10:	ldp	x21, x22, [sp, #32]
     a14:	ldp	x29, x30, [sp], #48
     a18:	ret
     a1c:	add	w22, w20, #0x1
     a20:	mov	w1, w22
     a24:	mov	x0, x19
     a28:	bl	198 <_gcry_mpi_resize>
     a2c:	str	w22, [x19, #4]
     a30:	b	9f0 <gcry_mpi_set_bit+0x28>

0000000000000a34 <gcry_mpi_set_highbit>:
     a34:	stp	x29, x30, [sp, #-48]!
     a38:	mov	x29, sp
     a3c:	stp	x19, x20, [sp, #16]
     a40:	stp	x21, x22, [sp, #32]
     a44:	mov	x20, x0
     a48:	lsr	w21, w1, #6
     a4c:	and	w19, w1, #0x3f
     a50:	ldr	w0, [x0, #4]
     a54:	cmp	w0, w1, lsr #6
     a58:	b.ls	ac4 <gcry_mpi_set_highbit+0x90>  // b.plast
     a5c:	mov	w3, w21
     a60:	ubfiz	x4, x21, #3, #26
     a64:	ldr	x2, [x20, #16]
     a68:	mov	x0, #0x1                   	// #1
     a6c:	lsl	x1, x0, x19
     a70:	ldr	x0, [x2, x3, lsl #3]
     a74:	orr	x0, x0, x1
     a78:	str	x0, [x2, x3, lsl #3]
     a7c:	add	w1, w19, #0x1
     a80:	cmp	w1, #0x3f
     a84:	b.hi	aac <gcry_mpi_set_highbit+0x78>  // b.pmore
     a88:	mov	x0, #0x1                   	// #1
     a8c:	ldr	x3, [x20, #16]
     a90:	lsl	x2, x0, x1
     a94:	ldr	x5, [x3, x4]
     a98:	bic	x2, x5, x2
     a9c:	str	x2, [x3, x4]
     aa0:	add	w1, w1, #0x1
     aa4:	cmp	w1, #0x40
     aa8:	b.ne	a8c <gcry_mpi_set_highbit+0x58>  // b.any
     aac:	add	w21, w21, #0x1
     ab0:	str	w21, [x20, #4]
     ab4:	ldp	x19, x20, [sp, #16]
     ab8:	ldp	x21, x22, [sp, #32]
     abc:	ldp	x29, x30, [sp], #48
     ac0:	ret
     ac4:	add	w22, w21, #0x1
     ac8:	mov	w1, w22
     acc:	mov	x0, x20
     ad0:	bl	198 <_gcry_mpi_resize>
     ad4:	str	w22, [x20, #4]
     ad8:	b	a5c <gcry_mpi_set_highbit+0x28>

0000000000000adc <gcry_mpi_clear_highbit>:
     adc:	lsr	w7, w1, #6
     ae0:	ldr	w2, [x0, #4]
     ae4:	cmp	w2, w1, lsr #6
     ae8:	b.ls	b20 <gcry_mpi_clear_highbit+0x44>  // b.plast
     aec:	and	w1, w1, #0x3f
     af0:	ubfiz	x4, x7, #3, #26
     af4:	mov	x6, #0x1                   	// #1
     af8:	ldr	x3, [x0, #16]
     afc:	lsl	x2, x6, x1
     b00:	ldr	x5, [x3, x4]
     b04:	bic	x2, x5, x2
     b08:	str	x2, [x3, x4]
     b0c:	add	w1, w1, #0x1
     b10:	cmp	w1, #0x40
     b14:	b.ne	af8 <gcry_mpi_clear_highbit+0x1c>  // b.any
     b18:	add	w7, w7, #0x1
     b1c:	str	w7, [x0, #4]
     b20:	ret

0000000000000b24 <gcry_mpi_clear_bit>:
     b24:	lsr	w2, w1, #6
     b28:	ldr	w3, [x0, #4]
     b2c:	cmp	w3, w1, lsr #6
     b30:	b.ls	b50 <gcry_mpi_clear_bit+0x2c>  // b.plast
     b34:	mov	w2, w2
     b38:	ldr	x3, [x0, #16]
     b3c:	mov	x0, #0x1                   	// #1
     b40:	lsl	x1, x0, x1
     b44:	ldr	x0, [x3, x2, lsl #3]
     b48:	bic	x1, x0, x1
     b4c:	str	x1, [x3, x2, lsl #3]
     b50:	ret

0000000000000b54 <_gcry_mpi_rshift_limbs>:
     b54:	ldr	w5, [x0, #4]
     b58:	cmp	w5, w1
     b5c:	b.ls	b9c <_gcry_mpi_rshift_limbs+0x48>  // b.plast
     b60:	ldr	x3, [x0, #16]
     b64:	mov	x2, #0x0                   	// #0
     b68:	subs	w5, w5, w1
     b6c:	b.eq	b88 <_gcry_mpi_rshift_limbs+0x34>  // b.none
     b70:	add	w4, w1, w2
     b74:	ldr	x4, [x3, x4, lsl #3]
     b78:	str	x4, [x3, x2, lsl #3]
     b7c:	add	x2, x2, #0x1
     b80:	cmp	w5, w2
     b84:	b.hi	b70 <_gcry_mpi_rshift_limbs+0x1c>  // b.pmore
     b88:	str	xzr, [x3, w5, uxtw #3]
     b8c:	ldr	w2, [x0, #4]
     b90:	sub	w1, w2, w1
     b94:	str	w1, [x0, #4]
     b98:	ret
     b9c:	str	wzr, [x0, #4]
     ba0:	b	b98 <_gcry_mpi_rshift_limbs+0x44>

0000000000000ba4 <gcry_mpi_rshift>:
     ba4:	stp	x29, x30, [sp, #-64]!
     ba8:	mov	x29, sp
     bac:	stp	x19, x20, [sp, #16]
     bb0:	stp	x21, x22, [sp, #32]
     bb4:	mov	x19, x0
     bb8:	lsr	w21, w2, #6
     bbc:	and	w22, w2, #0x3f
     bc0:	cmp	x0, x1
     bc4:	b.eq	cc8 <gcry_mpi_rshift+0x124>  // b.none
     bc8:	mov	x20, x1
     bcc:	cmp	w2, #0x3f
     bd0:	b.ls	d78 <gcry_mpi_rshift+0x1d4>  // b.plast
     bd4:	str	x23, [sp, #48]
     bd8:	ldr	w23, [x1, #4]
     bdc:	ldr	w0, [x1, #8]
     be0:	str	w0, [x19, #8]
     be4:	ldr	w0, [x19]
     be8:	cmp	w0, w23
     bec:	b.lt	d44 <gcry_mpi_rshift+0x1a0>  // b.tstop
     bf0:	str	w23, [x19, #4]
     bf4:	ldr	w0, [x20, #4]
     bf8:	cbz	w0, d54 <gcry_mpi_rshift+0x1b0>
     bfc:	mov	w0, #0x0                   	// #0
     c00:	mov	w1, w0
     c04:	ldr	x2, [x20, #16]
     c08:	ldr	x3, [x2, x1, lsl #3]
     c0c:	ldr	x2, [x19, #16]
     c10:	str	x3, [x2, x1, lsl #3]
     c14:	add	w0, w0, #0x1
     c18:	ldr	w1, [x20, #4]
     c1c:	cmp	w1, w0
     c20:	b.hi	c00 <gcry_mpi_rshift+0x5c>  // b.pmore
     c24:	str	w0, [x19, #4]
     c28:	mov	w1, #0x0                   	// #0
     c2c:	cmp	w21, w0
     c30:	b.cs	d54 <gcry_mpi_rshift+0x1b0>  // b.hs, b.nlast
     c34:	ldr	x0, [x19, #16]
     c38:	add	w2, w21, w1
     c3c:	ldr	x2, [x0, x2, lsl #3]
     c40:	str	x2, [x0, w1, uxtw #3]
     c44:	add	w1, w1, #0x1
     c48:	ldr	w0, [x19, #4]
     c4c:	sub	w0, w0, w21
     c50:	cmp	w0, w1
     c54:	b.hi	c34 <gcry_mpi_rshift+0x90>  // b.pmore
     c58:	ldr	x0, [x19, #16]
     c5c:	str	xzr, [x0, w1, uxtw #3]
     c60:	ldr	w2, [x19, #4]
     c64:	sub	w2, w2, w21
     c68:	str	w2, [x19, #4]
     c6c:	cmp	w22, #0x0
     c70:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     c74:	b.ne	d60 <gcry_mpi_rshift+0x1bc>  // b.any
     c78:	ldr	x23, [sp, #48]
     c7c:	ldr	w0, [x19, #4]
     c80:	cmp	w0, #0x0
     c84:	b.le	cb8 <gcry_mpi_rshift+0x114>
     c88:	ldr	x3, [x19, #16]
     c8c:	sub	w4, w0, #0x1
     c90:	sxtw	x1, w4
     c94:	sxtw	x2, w0
     c98:	sub	x2, x2, #0x2
     c9c:	sub	x2, x2, w4, uxtw
     ca0:	ldr	x0, [x3, x1, lsl #3]
     ca4:	cbnz	x0, cb8 <gcry_mpi_rshift+0x114>
     ca8:	str	w1, [x19, #4]
     cac:	sub	x1, x1, #0x1
     cb0:	cmp	x1, x2
     cb4:	b.ne	ca0 <gcry_mpi_rshift+0xfc>  // b.any
     cb8:	ldp	x19, x20, [sp, #16]
     cbc:	ldp	x21, x22, [sp, #32]
     cc0:	ldp	x29, x30, [sp], #64
     cc4:	ret
     cc8:	ldr	w0, [x0, #4]
     ccc:	cmp	w0, w21
     cd0:	b.ls	d3c <gcry_mpi_rshift+0x198>  // b.plast
     cd4:	cmp	w2, #0x3f
     cd8:	b.ls	d18 <gcry_mpi_rshift+0x174>  // b.plast
     cdc:	mov	w0, #0x0                   	// #0
     ce0:	ldr	x1, [x19, #16]
     ce4:	add	w2, w21, w0
     ce8:	ldr	x2, [x1, x2, lsl #3]
     cec:	str	x2, [x1, w0, uxtw #3]
     cf0:	add	w0, w0, #0x1
     cf4:	ldr	w1, [x19, #4]
     cf8:	sub	w1, w1, w21
     cfc:	cmp	w1, w0
     d00:	b.hi	ce0 <gcry_mpi_rshift+0x13c>  // b.pmore
     d04:	ldr	x1, [x19, #16]
     d08:	str	xzr, [x1, w0, uxtw #3]
     d0c:	ldr	w0, [x19, #4]
     d10:	sub	w21, w0, w21
     d14:	str	w21, [x19, #4]
     d18:	ldr	w2, [x19, #4]
     d1c:	cmp	w22, #0x0
     d20:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     d24:	b.eq	c7c <gcry_mpi_rshift+0xd8>  // b.none
     d28:	ldr	x0, [x19, #16]
     d2c:	mov	w3, w22
     d30:	mov	x1, x0
     d34:	bl	686c <_gcry_mpih_rshift>
     d38:	b	c7c <gcry_mpi_rshift+0xd8>
     d3c:	str	wzr, [x19, #4]
     d40:	b	cb8 <gcry_mpi_rshift+0x114>
     d44:	mov	w1, w23
     d48:	mov	x0, x19
     d4c:	bl	198 <_gcry_mpi_resize>
     d50:	b	bf0 <gcry_mpi_rshift+0x4c>
     d54:	str	wzr, [x19, #4]
     d58:	ldr	x23, [sp, #48]
     d5c:	b	cb8 <gcry_mpi_rshift+0x114>
     d60:	ldr	x0, [x19, #16]
     d64:	mov	w3, w22
     d68:	mov	x1, x0
     d6c:	bl	686c <_gcry_mpih_rshift>
     d70:	ldr	x23, [sp, #48]
     d74:	b	c7c <gcry_mpi_rshift+0xd8>
     d78:	ldr	w21, [x1, #4]
     d7c:	ldr	w0, [x1, #8]
     d80:	str	w0, [x19, #8]
     d84:	ldr	w0, [x19]
     d88:	cmp	w0, w21
     d8c:	b.lt	dc4 <gcry_mpi_rshift+0x220>  // b.tstop
     d90:	str	w21, [x19, #4]
     d94:	cbz	w21, cb8 <gcry_mpi_rshift+0x114>
     d98:	cbnz	w22, dd4 <gcry_mpi_rshift+0x230>
     d9c:	mov	w0, w22
     da0:	ldr	x1, [x20, #16]
     da4:	ldr	x2, [x1, x0, lsl #3]
     da8:	ldr	x1, [x19, #16]
     dac:	str	x2, [x1, x0, lsl #3]
     db0:	add	w22, w22, #0x1
     db4:	ldr	w0, [x19, #4]
     db8:	cmp	w0, w22
     dbc:	b.hi	d9c <gcry_mpi_rshift+0x1f8>  // b.pmore
     dc0:	b	c7c <gcry_mpi_rshift+0xd8>
     dc4:	mov	w1, w21
     dc8:	mov	x0, x19
     dcc:	bl	198 <_gcry_mpi_resize>
     dd0:	b	d90 <gcry_mpi_rshift+0x1ec>
     dd4:	mov	w3, w22
     dd8:	mov	w2, w21
     ddc:	ldr	x1, [x20, #16]
     de0:	ldr	x0, [x19, #16]
     de4:	bl	686c <_gcry_mpih_rshift>
     de8:	b	c7c <gcry_mpi_rshift+0xd8>

0000000000000dec <_gcry_mpi_lshift_limbs>:
     dec:	stp	x29, x30, [sp, #-48]!
     df0:	mov	x29, sp
     df4:	stp	x19, x20, [sp, #16]
     df8:	ldr	w19, [x0, #4]
     dfc:	cmp	w1, #0x0
     e00:	ccmp	w19, #0x0, #0x4, ne  // ne = any
     e04:	b.eq	e6c <_gcry_mpi_lshift_limbs+0x80>  // b.none
     e08:	str	x21, [sp, #32]
     e0c:	mov	x21, x0
     e10:	mov	w20, w1
     e14:	add	w1, w19, w1
     e18:	ldr	w0, [x0]
     e1c:	cmp	w0, w1
     e20:	b.cc	e78 <_gcry_mpi_lshift_limbs+0x8c>  // b.lo, b.ul, b.last
     e24:	ldr	x3, [x21, #16]
     e28:	subs	w2, w19, #0x1
     e2c:	b.mi	e48 <_gcry_mpi_lshift_limbs+0x5c>  // b.first
     e30:	sxtw	x2, w2
     e34:	ldr	x4, [x3, x2, lsl #3]
     e38:	add	w1, w20, w2
     e3c:	str	x4, [x3, x1, lsl #3]
     e40:	sub	x2, x2, #0x1
     e44:	tbz	w2, #31, e34 <_gcry_mpi_lshift_limbs+0x48>
     e48:	mov	x2, #0x0                   	// #0
     e4c:	str	xzr, [x3, x2, lsl #3]
     e50:	add	x2, x2, #0x1
     e54:	cmp	w20, w2
     e58:	b.hi	e4c <_gcry_mpi_lshift_limbs+0x60>  // b.pmore
     e5c:	ldr	w0, [x21, #4]
     e60:	add	w20, w0, w20
     e64:	str	w20, [x21, #4]
     e68:	ldr	x21, [sp, #32]
     e6c:	ldp	x19, x20, [sp, #16]
     e70:	ldp	x29, x30, [sp], #48
     e74:	ret
     e78:	mov	x0, x21
     e7c:	bl	198 <_gcry_mpi_resize>
     e80:	b	e24 <_gcry_mpi_lshift_limbs+0x38>

0000000000000e84 <gcry_mpi_lshift>:
     e84:	cmp	w2, #0x0
     e88:	ccmp	x0, x1, #0x0, eq  // eq = none
     e8c:	b.eq	fbc <gcry_mpi_lshift+0x138>  // b.none
     e90:	stp	x29, x30, [sp, #-80]!
     e94:	mov	x29, sp
     e98:	stp	x19, x20, [sp, #16]
     e9c:	stp	x21, x22, [sp, #32]
     ea0:	stp	x23, x24, [sp, #48]
     ea4:	mov	x19, x0
     ea8:	mov	x20, x1
     eac:	mov	w21, w2
     eb0:	lsr	w24, w2, #6
     eb4:	cmp	x0, x1
     eb8:	b.eq	f18 <gcry_mpi_lshift+0x94>  // b.none
     ebc:	str	x25, [sp, #64]
     ec0:	ldr	w23, [x1, #4]
     ec4:	mov	w22, w23
     ec8:	ldr	w25, [x1, #8]
     ecc:	add	w1, w23, #0x1
     ed0:	add	w1, w1, w24
     ed4:	ldr	w0, [x0]
     ed8:	cmp	w0, w1
     edc:	b.cc	f7c <gcry_mpi_lshift+0xf8>  // b.lo, b.ul, b.last
     ee0:	ldr	x1, [x19, #16]
     ee4:	ldr	x2, [x20, #16]
     ee8:	cbz	w23, f04 <gcry_mpi_lshift+0x80>
     eec:	mov	x3, #0x0                   	// #0
     ef0:	ldr	x0, [x2, x3, lsl #3]
     ef4:	str	x0, [x1, x3, lsl #3]
     ef8:	add	x3, x3, #0x1
     efc:	cmp	w22, w3
     f00:	b.hi	ef0 <gcry_mpi_lshift+0x6c>  // b.pmore
     f04:	str	w23, [x19, #4]
     f08:	ldr	w0, [x20, #12]
     f0c:	str	w0, [x19, #12]
     f10:	str	w25, [x19, #8]
     f14:	ldr	x25, [sp, #64]
     f18:	and	w20, w21, #0x3f
     f1c:	cmp	w21, #0x3f
     f20:	ccmp	w20, #0x0, #0x0, hi  // hi = pmore
     f24:	b.eq	f88 <gcry_mpi_lshift+0x104>  // b.none
     f28:	cbnz	w21, f98 <gcry_mpi_lshift+0x114>
     f2c:	ldr	w0, [x19, #4]
     f30:	cmp	w0, #0x0
     f34:	b.le	f68 <gcry_mpi_lshift+0xe4>
     f38:	ldr	x3, [x19, #16]
     f3c:	sub	w4, w0, #0x1
     f40:	sxtw	x1, w4
     f44:	sxtw	x2, w0
     f48:	sub	x2, x2, #0x2
     f4c:	sub	x2, x2, w4, uxtw
     f50:	ldr	x0, [x3, x1, lsl #3]
     f54:	cbnz	x0, f68 <gcry_mpi_lshift+0xe4>
     f58:	str	w1, [x19, #4]
     f5c:	sub	x1, x1, #0x1
     f60:	cmp	x1, x2
     f64:	b.ne	f50 <gcry_mpi_lshift+0xcc>  // b.any
     f68:	ldp	x19, x20, [sp, #16]
     f6c:	ldp	x21, x22, [sp, #32]
     f70:	ldp	x23, x24, [sp, #48]
     f74:	ldp	x29, x30, [sp], #80
     f78:	ret
     f7c:	mov	x0, x19
     f80:	bl	198 <_gcry_mpi_resize>
     f84:	b	ee0 <gcry_mpi_lshift+0x5c>
     f88:	mov	w1, w24
     f8c:	mov	x0, x19
     f90:	bl	dec <_gcry_mpi_lshift_limbs>
     f94:	b	f2c <gcry_mpi_lshift+0xa8>
     f98:	add	w1, w24, #0x1
     f9c:	mov	x0, x19
     fa0:	bl	dec <_gcry_mpi_lshift_limbs>
     fa4:	mov	w2, #0x40                  	// #64
     fa8:	sub	w2, w2, w20
     fac:	mov	x1, x19
     fb0:	mov	x0, x19
     fb4:	bl	ba4 <gcry_mpi_rshift>
     fb8:	b	f2c <gcry_mpi_lshift+0xa8>
     fbc:	ret

0000000000000fc0 <gcry_mpi_add_ui>:
     fc0:	stp	x29, x30, [sp, #-64]!
     fc4:	mov	x29, sp
     fc8:	stp	x19, x20, [sp, #16]
     fcc:	stp	x21, x22, [sp, #32]
     fd0:	str	x23, [sp, #48]
     fd4:	mov	x19, x0
     fd8:	mov	x22, x1
     fdc:	mov	x21, x2
     fe0:	ldr	w20, [x1, #4]
     fe4:	ldr	w23, [x1, #8]
     fe8:	add	w1, w20, #0x1
     fec:	ldr	w0, [x0]
     ff0:	cmp	w0, w1
     ff4:	b.lt	1028 <gcry_mpi_add_ui+0x68>  // b.tstop
     ff8:	ldr	x4, [x19, #16]
     ffc:	cbnz	w20, 1034 <gcry_mpi_add_ui+0x74>
    1000:	str	x21, [x4]
    1004:	cmp	x21, #0x0
    1008:	cset	w0, ne  // ne = any
    100c:	str	w0, [x19, #4]
    1010:	str	w20, [x19, #8]
    1014:	ldp	x19, x20, [sp, #16]
    1018:	ldp	x21, x22, [sp, #32]
    101c:	ldr	x23, [sp, #48]
    1020:	ldp	x29, x30, [sp], #64
    1024:	ret
    1028:	mov	x0, x19
    102c:	bl	198 <_gcry_mpi_resize>
    1030:	b	ff8 <gcry_mpi_add_ui+0x38>
    1034:	ldr	x1, [x22, #16]
    1038:	cbnz	w23, 10c0 <gcry_mpi_add_ui+0x100>
    103c:	ldr	x0, [x1], #8
    1040:	add	x21, x21, x0
    1044:	mov	x3, x4
    1048:	str	x21, [x3], #8
    104c:	mov	w2, w20
    1050:	cmp	x0, x21
    1054:	b.ls	1070 <gcry_mpi_add_ui+0xb0>  // b.plast
    1058:	subs	w2, w2, #0x1
    105c:	b.eq	10b0 <gcry_mpi_add_ui+0xf0>  // b.none
    1060:	ldr	x0, [x1], #8
    1064:	add	x0, x0, #0x1
    1068:	str	x0, [x3], #8
    106c:	cbz	x0, 1058 <gcry_mpi_add_ui+0x98>
    1070:	mov	x0, #0x0                   	// #0
    1074:	cmp	x3, x1
    1078:	b.eq	10a0 <gcry_mpi_add_ui+0xe0>  // b.none
    107c:	sub	w2, w2, #0x1
    1080:	cmp	w2, #0x0
    1084:	b.le	10b8 <gcry_mpi_add_ui+0xf8>
    1088:	ldr	x5, [x1, x0, lsl #3]
    108c:	str	x5, [x3, x0, lsl #3]
    1090:	add	x0, x0, #0x1
    1094:	cmp	w2, w0
    1098:	b.gt	1088 <gcry_mpi_add_ui+0xc8>
    109c:	mov	x0, #0x0                   	// #0
    10a0:	str	x0, [x4, w20, sxtw #3]
    10a4:	add	w0, w20, w0
    10a8:	mov	w20, w23
    10ac:	b	100c <gcry_mpi_add_ui+0x4c>
    10b0:	mov	x0, #0x1                   	// #1
    10b4:	b	10a0 <gcry_mpi_add_ui+0xe0>
    10b8:	mov	x0, #0x0                   	// #0
    10bc:	b	10a0 <gcry_mpi_add_ui+0xe0>
    10c0:	cmp	w20, #0x1
    10c4:	b.eq	1144 <gcry_mpi_add_ui+0x184>  // b.none
    10c8:	ldr	x2, [x1], #8
    10cc:	sub	x21, x2, x21
    10d0:	mov	x3, x4
    10d4:	str	x21, [x3], #8
    10d8:	mov	w0, w20
    10dc:	cmp	x2, x21
    10e0:	b.cs	10fc <gcry_mpi_add_ui+0x13c>  // b.hs, b.nlast
    10e4:	subs	w0, w0, #0x1
    10e8:	b.eq	1128 <gcry_mpi_add_ui+0x168>  // b.none
    10ec:	ldr	x2, [x1], #8
    10f0:	sub	x5, x2, #0x1
    10f4:	str	x5, [x3], #8
    10f8:	cbz	x2, 10e4 <gcry_mpi_add_ui+0x124>
    10fc:	cmp	x3, x1
    1100:	b.eq	1128 <gcry_mpi_add_ui+0x168>  // b.none
    1104:	sub	w2, w0, #0x1
    1108:	cmp	w2, #0x0
    110c:	b.le	1128 <gcry_mpi_add_ui+0x168>
    1110:	mov	x0, #0x0                   	// #0
    1114:	ldr	x5, [x1, x0, lsl #3]
    1118:	str	x5, [x3, x0, lsl #3]
    111c:	add	x0, x0, #0x1
    1120:	cmp	w2, w0
    1124:	b.gt	1114 <gcry_mpi_add_ui+0x154>
    1128:	add	x4, x4, w20, sxtw #3
    112c:	ldur	x0, [x4, #-8]
    1130:	cmp	x0, #0x0
    1134:	cset	w0, eq  // eq = none
    1138:	sub	w0, w20, w0
    113c:	mov	w20, #0x1                   	// #1
    1140:	b	100c <gcry_mpi_add_ui+0x4c>
    1144:	ldr	x0, [x1]
    1148:	cmp	x0, x21
    114c:	b.cs	1164 <gcry_mpi_add_ui+0x1a4>  // b.hs, b.nlast
    1150:	sub	x21, x21, x0
    1154:	str	x21, [x4]
    1158:	mov	w0, w20
    115c:	mov	w20, #0x0                   	// #0
    1160:	b	100c <gcry_mpi_add_ui+0x4c>
    1164:	sub	x21, x0, x21
    1168:	str	x21, [x4]
    116c:	b	1128 <gcry_mpi_add_ui+0x168>

0000000000001170 <gcry_mpi_add>:
    1170:	stp	x29, x30, [sp, #-80]!
    1174:	mov	x29, sp
    1178:	stp	x19, x20, [sp, #16]
    117c:	stp	x21, x22, [sp, #32]
    1180:	stp	x23, x24, [sp, #48]
    1184:	stp	x25, x26, [sp, #64]
    1188:	mov	x22, x0
    118c:	mov	x25, x1
    1190:	mov	x21, x2
    1194:	ldr	w20, [x1, #4]
    1198:	ldr	w19, [x2, #4]
    119c:	cmp	w20, w19
    11a0:	b.ge	1218 <gcry_mpi_add+0xa8>  // b.tcont
    11a4:	ldr	w23, [x2, #8]
    11a8:	ldr	w26, [x1, #8]
    11ac:	add	w1, w19, #0x1
    11b0:	ldr	w0, [x0]
    11b4:	cmp	w0, w1
    11b8:	b.lt	120c <gcry_mpi_add+0x9c>  // b.tstop
    11bc:	ldr	x24, [x21, #16]
    11c0:	ldr	x1, [x25, #16]
    11c4:	ldr	x21, [x22, #16]
    11c8:	cbnz	w20, 1254 <gcry_mpi_add+0xe4>
    11cc:	cmp	w19, #0x0
    11d0:	b.le	11ec <gcry_mpi_add+0x7c>
    11d4:	mov	x1, #0x0                   	// #0
    11d8:	ldr	x2, [x24, x1, lsl #3]
    11dc:	str	x2, [x21, x1, lsl #3]
    11e0:	add	x1, x1, #0x1
    11e4:	cmp	w19, w1
    11e8:	b.gt	11d8 <gcry_mpi_add+0x68>
    11ec:	str	w19, [x22, #4]
    11f0:	str	w23, [x22, #8]
    11f4:	ldp	x19, x20, [sp, #16]
    11f8:	ldp	x21, x22, [sp, #32]
    11fc:	ldp	x23, x24, [sp, #48]
    1200:	ldp	x25, x26, [sp, #64]
    1204:	ldp	x29, x30, [sp], #80
    1208:	ret
    120c:	mov	x0, x22
    1210:	bl	198 <_gcry_mpi_resize>
    1214:	b	11bc <gcry_mpi_add+0x4c>
    1218:	ldr	w23, [x1, #8]
    121c:	ldr	w26, [x2, #8]
    1220:	add	w1, w20, #0x1
    1224:	ldr	w0, [x0]
    1228:	cmp	w0, w1
    122c:	b.lt	1248 <gcry_mpi_add+0xd8>  // b.tstop
    1230:	ldr	x24, [x25, #16]
    1234:	ldr	x1, [x21, #16]
    1238:	mov	w0, w19
    123c:	mov	w19, w20
    1240:	mov	w20, w0
    1244:	b	11c4 <gcry_mpi_add+0x54>
    1248:	mov	x0, x22
    124c:	bl	198 <_gcry_mpi_resize>
    1250:	b	1230 <gcry_mpi_add+0xc0>
    1254:	cmp	w23, w26
    1258:	b.eq	13dc <gcry_mpi_add+0x26c>  // b.none
    125c:	cmp	w19, w20
    1260:	b.ne	12d4 <gcry_mpi_add+0x164>  // b.any
    1264:	subs	w2, w19, #0x1
    1268:	b.mi	1288 <gcry_mpi_add+0x118>  // b.first
    126c:	sxtw	x2, w2
    1270:	ldr	x3, [x24, x2, lsl #3]
    1274:	ldr	x0, [x1, x2, lsl #3]
    1278:	cmp	x3, x0
    127c:	b.ne	1390 <gcry_mpi_add+0x220>  // b.any
    1280:	sub	x2, x2, #0x1
    1284:	tbz	w2, #31, 1270 <gcry_mpi_add+0x100>
    1288:	mov	w3, w19
    128c:	mov	x2, x1
    1290:	mov	x1, x24
    1294:	mov	x0, x21
    1298:	bl	4d70 <_gcry_mpih_sub_n>
    129c:	cmp	w19, #0x0
    12a0:	b.le	12c8 <gcry_mpi_add+0x158>
    12a4:	sxtw	x0, w19
    12a8:	sub	x21, x21, #0x8
    12ac:	mov	w19, w0
    12b0:	ldr	x1, [x21, x0, lsl #3]
    12b4:	cbnz	x1, 12c8 <gcry_mpi_add+0x158>
    12b8:	sub	w19, w0, #0x1
    12bc:	sub	x0, x0, #0x1
    12c0:	cmp	w0, #0x0
    12c4:	b.gt	12ac <gcry_mpi_add+0x13c>
    12c8:	cmp	w23, #0x0
    12cc:	cset	w23, ne  // ne = any
    12d0:	b	11ec <gcry_mpi_add+0x7c>
    12d4:	mov	w3, w20
    12d8:	mov	x2, x1
    12dc:	mov	x1, x24
    12e0:	mov	x0, x21
    12e4:	bl	4d70 <_gcry_mpih_sub_n>
    12e8:	sxtw	x4, w20
    12ec:	sbfiz	x1, x20, #3, #32
    12f0:	add	x2, x21, x1
    12f4:	add	x1, x24, x1
    12f8:	sub	w20, w19, w20
    12fc:	add	x1, x1, #0x8
    1300:	ldr	x3, [x24, x4, lsl #3]
    1304:	sub	x0, x3, x0
    1308:	add	x2, x2, #0x8
    130c:	str	x0, [x21, x4, lsl #3]
    1310:	cmp	x3, x0
    1314:	b.cc	1374 <gcry_mpi_add+0x204>  // b.lo, b.ul, b.last
    1318:	cmp	x2, x1
    131c:	b.eq	1344 <gcry_mpi_add+0x1d4>  // b.none
    1320:	sub	w20, w20, #0x1
    1324:	cmp	w20, #0x0
    1328:	b.le	1344 <gcry_mpi_add+0x1d4>
    132c:	mov	x0, #0x0                   	// #0
    1330:	ldr	x3, [x1, x0, lsl #3]
    1334:	str	x3, [x2, x0, lsl #3]
    1338:	add	x0, x0, #0x1
    133c:	cmp	w20, w0
    1340:	b.gt	1330 <gcry_mpi_add+0x1c0>
    1344:	cmp	w19, #0x0
    1348:	b.le	11ec <gcry_mpi_add+0x7c>
    134c:	sxtw	x1, w19
    1350:	sub	x21, x21, #0x8
    1354:	mov	w19, w1
    1358:	ldr	x0, [x21, x1, lsl #3]
    135c:	cbnz	x0, 11ec <gcry_mpi_add+0x7c>
    1360:	sub	w19, w1, #0x1
    1364:	sub	x1, x1, #0x1
    1368:	cmp	w1, #0x0
    136c:	b.gt	1354 <gcry_mpi_add+0x1e4>
    1370:	b	11ec <gcry_mpi_add+0x7c>
    1374:	subs	w20, w20, #0x1
    1378:	b.eq	1344 <gcry_mpi_add+0x1d4>  // b.none
    137c:	ldr	x0, [x1], #8
    1380:	sub	x3, x0, #0x1
    1384:	str	x3, [x2], #8
    1388:	cbz	x0, 1374 <gcry_mpi_add+0x204>
    138c:	b	1318 <gcry_mpi_add+0x1a8>
    1390:	b.hi	1288 <gcry_mpi_add+0x118>  // b.pmore
    1394:	mov	w3, w19
    1398:	mov	x2, x24
    139c:	mov	x0, x21
    13a0:	bl	4d70 <_gcry_mpih_sub_n>
    13a4:	cmp	w19, #0x0
    13a8:	b.le	13d0 <gcry_mpi_add+0x260>
    13ac:	sxtw	x0, w19
    13b0:	sub	x21, x21, #0x8
    13b4:	mov	w19, w0
    13b8:	ldr	x1, [x21, x0, lsl #3]
    13bc:	cbnz	x1, 13d0 <gcry_mpi_add+0x260>
    13c0:	sub	w19, w0, #0x1
    13c4:	sub	x0, x0, #0x1
    13c8:	cmp	w0, #0x0
    13cc:	b.gt	13b4 <gcry_mpi_add+0x244>
    13d0:	cmp	w23, #0x0
    13d4:	cset	w23, eq  // eq = none
    13d8:	b	11ec <gcry_mpi_add+0x7c>
    13dc:	mov	w3, w20
    13e0:	mov	x2, x1
    13e4:	mov	x1, x24
    13e8:	mov	x0, x21
    13ec:	bl	4d2c <_gcry_mpih_add_n>
    13f0:	cmp	w19, w20
    13f4:	b.eq	1458 <gcry_mpi_add+0x2e8>  // b.none
    13f8:	sxtw	x4, w20
    13fc:	sbfiz	x1, x20, #3, #32
    1400:	add	x2, x21, x1
    1404:	add	x1, x24, x1
    1408:	sub	w20, w19, w20
    140c:	add	x1, x1, #0x8
    1410:	ldr	x3, [x24, x4, lsl #3]
    1414:	add	x0, x0, x3
    1418:	add	x2, x2, #0x8
    141c:	str	x0, [x21, x4, lsl #3]
    1420:	cmp	x3, x0
    1424:	b.hi	146c <gcry_mpi_add+0x2fc>  // b.pmore
    1428:	mov	x0, #0x0                   	// #0
    142c:	cmp	x2, x1
    1430:	b.eq	1458 <gcry_mpi_add+0x2e8>  // b.none
    1434:	sub	w20, w20, #0x1
    1438:	cmp	w20, #0x0
    143c:	b.le	1490 <gcry_mpi_add+0x320>
    1440:	ldr	x3, [x1, x0, lsl #3]
    1444:	str	x3, [x2, x0, lsl #3]
    1448:	add	x0, x0, #0x1
    144c:	cmp	w20, w0
    1450:	b.gt	1440 <gcry_mpi_add+0x2d0>
    1454:	mov	x0, #0x0                   	// #0
    1458:	str	x0, [x21, w19, sxtw #3]
    145c:	add	w19, w19, w0
    1460:	cmp	w23, #0x0
    1464:	cset	w23, ne  // ne = any
    1468:	b	11ec <gcry_mpi_add+0x7c>
    146c:	subs	w20, w20, #0x1
    1470:	b.eq	1488 <gcry_mpi_add+0x318>  // b.none
    1474:	ldr	x0, [x1], #8
    1478:	add	x0, x0, #0x1
    147c:	str	x0, [x2], #8
    1480:	cbz	x0, 146c <gcry_mpi_add+0x2fc>
    1484:	b	1428 <gcry_mpi_add+0x2b8>
    1488:	mov	x0, #0x1                   	// #1
    148c:	b	1458 <gcry_mpi_add+0x2e8>
    1490:	mov	x0, #0x0                   	// #0
    1494:	b	1458 <gcry_mpi_add+0x2e8>

0000000000001498 <gcry_mpi_sub_ui>:
    1498:	stp	x29, x30, [sp, #-64]!
    149c:	mov	x29, sp
    14a0:	stp	x19, x20, [sp, #16]
    14a4:	stp	x21, x22, [sp, #32]
    14a8:	str	x23, [sp, #48]
    14ac:	mov	x19, x0
    14b0:	mov	x22, x1
    14b4:	mov	x21, x2
    14b8:	ldr	w20, [x1, #4]
    14bc:	ldr	w23, [x1, #8]
    14c0:	add	w1, w20, #0x1
    14c4:	ldr	w0, [x0]
    14c8:	cmp	w0, w1
    14cc:	b.lt	1504 <gcry_mpi_sub_ui+0x6c>  // b.tstop
    14d0:	ldr	x4, [x19, #16]
    14d4:	cbnz	w20, 1510 <gcry_mpi_sub_ui+0x78>
    14d8:	str	x21, [x4]
    14dc:	cmp	x21, #0x0
    14e0:	cset	w20, ne  // ne = any
    14e4:	mov	w23, #0x1                   	// #1
    14e8:	str	w20, [x19, #4]
    14ec:	str	w23, [x19, #8]
    14f0:	ldp	x19, x20, [sp, #16]
    14f4:	ldp	x21, x22, [sp, #32]
    14f8:	ldr	x23, [sp, #48]
    14fc:	ldp	x29, x30, [sp], #64
    1500:	ret
    1504:	mov	x0, x19
    1508:	bl	198 <_gcry_mpi_resize>
    150c:	b	14d0 <gcry_mpi_sub_ui+0x38>
    1510:	ldr	x1, [x22, #16]
    1514:	cbz	w23, 159c <gcry_mpi_sub_ui+0x104>
    1518:	ldr	x0, [x1], #8
    151c:	add	x21, x21, x0
    1520:	mov	x3, x4
    1524:	str	x21, [x3], #8
    1528:	mov	w2, w20
    152c:	cmp	x0, x21
    1530:	b.ls	154c <gcry_mpi_sub_ui+0xb4>  // b.plast
    1534:	subs	w2, w2, #0x1
    1538:	b.eq	158c <gcry_mpi_sub_ui+0xf4>  // b.none
    153c:	ldr	x0, [x1], #8
    1540:	add	x0, x0, #0x1
    1544:	str	x0, [x3], #8
    1548:	cbz	x0, 1534 <gcry_mpi_sub_ui+0x9c>
    154c:	mov	x0, #0x0                   	// #0
    1550:	cmp	x3, x1
    1554:	b.eq	157c <gcry_mpi_sub_ui+0xe4>  // b.none
    1558:	sub	w2, w2, #0x1
    155c:	cmp	w2, #0x0
    1560:	b.le	1594 <gcry_mpi_sub_ui+0xfc>
    1564:	ldr	x5, [x1, x0, lsl #3]
    1568:	str	x5, [x3, x0, lsl #3]
    156c:	add	x0, x0, #0x1
    1570:	cmp	w2, w0
    1574:	b.gt	1564 <gcry_mpi_sub_ui+0xcc>
    1578:	mov	x0, #0x0                   	// #0
    157c:	str	x0, [x4, w20, sxtw #3]
    1580:	add	w20, w20, w0
    1584:	mov	w23, #0x0                   	// #0
    1588:	b	14e8 <gcry_mpi_sub_ui+0x50>
    158c:	mov	x0, #0x1                   	// #1
    1590:	b	157c <gcry_mpi_sub_ui+0xe4>
    1594:	mov	x0, #0x0                   	// #0
    1598:	b	157c <gcry_mpi_sub_ui+0xe4>
    159c:	cmp	w20, #0x1
    15a0:	b.eq	161c <gcry_mpi_sub_ui+0x184>  // b.none
    15a4:	ldr	x2, [x1], #8
    15a8:	sub	x21, x2, x21
    15ac:	mov	x3, x4
    15b0:	str	x21, [x3], #8
    15b4:	mov	w0, w20
    15b8:	cmp	x2, x21
    15bc:	b.cs	15d8 <gcry_mpi_sub_ui+0x140>  // b.hs, b.nlast
    15c0:	subs	w0, w0, #0x1
    15c4:	b.eq	1604 <gcry_mpi_sub_ui+0x16c>  // b.none
    15c8:	ldr	x2, [x1], #8
    15cc:	sub	x5, x2, #0x1
    15d0:	str	x5, [x3], #8
    15d4:	cbz	x2, 15c0 <gcry_mpi_sub_ui+0x128>
    15d8:	cmp	x3, x1
    15dc:	b.eq	1604 <gcry_mpi_sub_ui+0x16c>  // b.none
    15e0:	sub	w2, w0, #0x1
    15e4:	cmp	w2, #0x0
    15e8:	b.le	1604 <gcry_mpi_sub_ui+0x16c>
    15ec:	mov	x0, #0x0                   	// #0
    15f0:	ldr	x5, [x1, x0, lsl #3]
    15f4:	str	x5, [x3, x0, lsl #3]
    15f8:	add	x0, x0, #0x1
    15fc:	cmp	w2, w0
    1600:	b.gt	15f0 <gcry_mpi_sub_ui+0x158>
    1604:	add	x4, x4, w20, sxtw #3
    1608:	ldur	x0, [x4, #-8]
    160c:	cmp	x0, #0x0
    1610:	cset	w0, eq  // eq = none
    1614:	sub	w20, w20, w0
    1618:	b	14e8 <gcry_mpi_sub_ui+0x50>
    161c:	ldr	x0, [x1]
    1620:	cmp	x0, x21
    1624:	b.cs	1638 <gcry_mpi_sub_ui+0x1a0>  // b.hs, b.nlast
    1628:	sub	x21, x21, x0
    162c:	str	x21, [x4]
    1630:	mov	w23, w20
    1634:	b	14e8 <gcry_mpi_sub_ui+0x50>
    1638:	sub	x21, x0, x21
    163c:	str	x21, [x4]
    1640:	b	1604 <gcry_mpi_sub_ui+0x16c>

0000000000001644 <gcry_mpi_sub>:
    1644:	stp	x29, x30, [sp, #-48]!
    1648:	mov	x29, sp
    164c:	stp	x19, x20, [sp, #16]
    1650:	str	x21, [sp, #32]
    1654:	mov	x20, x0
    1658:	mov	x21, x1
    165c:	mov	x0, x2
    1660:	bl	398 <_gcry_mpi_copy>
    1664:	mov	x19, x0
    1668:	ldr	w0, [x0, #8]
    166c:	cmp	w0, #0x0
    1670:	cset	w0, eq  // eq = none
    1674:	str	w0, [x19, #8]
    1678:	mov	x2, x19
    167c:	mov	x1, x21
    1680:	mov	x0, x20
    1684:	bl	1170 <gcry_mpi_add>
    1688:	mov	x0, x19
    168c:	bl	274 <_gcry_mpi_free>
    1690:	ldp	x19, x20, [sp, #16]
    1694:	ldr	x21, [sp, #32]
    1698:	ldp	x29, x30, [sp], #48
    169c:	ret

00000000000016a0 <gcry_mpi_addm>:
    16a0:	stp	x29, x30, [sp, #-32]!
    16a4:	mov	x29, sp
    16a8:	stp	x19, x20, [sp, #16]
    16ac:	mov	x19, x0
    16b0:	mov	x20, x3
    16b4:	bl	1170 <gcry_mpi_add>
    16b8:	mov	x2, x20
    16bc:	mov	x1, x19
    16c0:	mov	x0, x19
    16c4:	bl	2554 <_gcry_mpi_fdiv_r>
    16c8:	ldp	x19, x20, [sp, #16]
    16cc:	ldp	x29, x30, [sp], #32
    16d0:	ret

00000000000016d4 <gcry_mpi_subm>:
    16d4:	stp	x29, x30, [sp, #-32]!
    16d8:	mov	x29, sp
    16dc:	stp	x19, x20, [sp, #16]
    16e0:	mov	x19, x0
    16e4:	mov	x20, x3
    16e8:	bl	1644 <gcry_mpi_sub>
    16ec:	mov	x2, x20
    16f0:	mov	x1, x19
    16f4:	mov	x0, x19
    16f8:	bl	2554 <_gcry_mpi_fdiv_r>
    16fc:	ldp	x19, x20, [sp, #16]
    1700:	ldp	x29, x30, [sp], #32
    1704:	ret

0000000000001708 <gcry_mpi_mul_ui>:
    1708:	stp	x29, x30, [sp, #-80]!
    170c:	mov	x29, sp
    1710:	stp	x19, x20, [sp, #16]
    1714:	stp	x21, x22, [sp, #32]
    1718:	mov	x19, x0
    171c:	ldr	w22, [x1, #4]
    1720:	cmp	w22, #0x0
    1724:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    1728:	b.eq	1794 <gcry_mpi_mul_ui+0x8c>  // b.none
    172c:	stp	x23, x24, [sp, #48]
    1730:	str	x25, [sp, #64]
    1734:	mov	x20, x1
    1738:	mov	x21, x2
    173c:	ldr	w25, [x1, #8]
    1740:	add	w23, w22, #0x1
    1744:	ldr	w0, [x0]
    1748:	cmp	w0, w23
    174c:	b.lt	17a0 <gcry_mpi_mul_ui+0x98>  // b.tstop
    1750:	ldr	x24, [x19, #16]
    1754:	mov	x3, x21
    1758:	mov	w2, w22
    175c:	ldr	x1, [x20, #16]
    1760:	mov	x0, x24
    1764:	bl	4ba0 <_gcry_mpih_mul_1>
    1768:	cbz	x0, 1774 <gcry_mpi_mul_ui+0x6c>
    176c:	str	x0, [x24, w22, sxtw #3]
    1770:	mov	w22, w23
    1774:	str	w22, [x19, #4]
    1778:	str	w25, [x19, #8]
    177c:	ldp	x23, x24, [sp, #48]
    1780:	ldr	x25, [sp, #64]
    1784:	ldp	x19, x20, [sp, #16]
    1788:	ldp	x21, x22, [sp, #32]
    178c:	ldp	x29, x30, [sp], #80
    1790:	ret
    1794:	str	wzr, [x0, #4]
    1798:	str	wzr, [x0, #8]
    179c:	b	1784 <gcry_mpi_mul_ui+0x7c>
    17a0:	mov	w1, w23
    17a4:	mov	x0, x19
    17a8:	bl	198 <_gcry_mpi_resize>
    17ac:	b	1750 <gcry_mpi_mul_ui+0x48>

00000000000017b0 <gcry_mpi_mul_2exp>:
    17b0:	stp	x29, x30, [sp, #-96]!
    17b4:	mov	x29, sp
    17b8:	stp	x21, x22, [sp, #32]
    17bc:	stp	x25, x26, [sp, #64]
    17c0:	mov	x21, x0
    17c4:	ldr	w26, [x1, #4]
    17c8:	cbz	w26, 1888 <gcry_mpi_mul_2exp+0xd8>
    17cc:	stp	x19, x20, [sp, #16]
    17d0:	stp	x23, x24, [sp, #48]
    17d4:	stp	x27, x28, [sp, #80]
    17d8:	mov	x19, x1
    17dc:	mov	x27, x2
    17e0:	ldr	w24, [x1, #8]
    17e4:	lsr	x25, x2, #6
    17e8:	mov	w22, w25
    17ec:	add	w23, w26, w25
    17f0:	add	w28, w23, #0x1
    17f4:	ldr	w0, [x0]
    17f8:	cmp	w0, w28
    17fc:	b.lt	1894 <gcry_mpi_mul_2exp+0xe4>  // b.tstop
    1800:	ldr	x20, [x21, #16]
    1804:	ands	x3, x27, #0x3f
    1808:	b.ne	18a4 <gcry_mpi_mul_2exp+0xf4>  // b.any
    180c:	subs	w2, w26, #0x1
    1810:	b.mi	1848 <gcry_mpi_mul_2exp+0x98>  // b.first
    1814:	sbfiz	x2, x2, #3, #32
    1818:	sxtw	x3, w26
    181c:	sub	w26, w26, #0x1
    1820:	sub	x3, x3, x26
    1824:	lsl	x3, x3, #3
    1828:	sub	x3, x3, #0x10
    182c:	add	x4, x20, w25, sxtw #3
    1830:	ldr	x0, [x19, #16]
    1834:	ldr	x1, [x0, x2]
    1838:	str	x1, [x4, x2]
    183c:	sub	x2, x2, #0x8
    1840:	cmp	x2, x3
    1844:	b.ne	1830 <gcry_mpi_mul_2exp+0x80>  // b.any
    1848:	cmp	w25, #0x0
    184c:	b.le	1864 <gcry_mpi_mul_2exp+0xb4>
    1850:	mov	x1, #0x0                   	// #0
    1854:	str	xzr, [x20, x1, lsl #3]
    1858:	add	x1, x1, #0x1
    185c:	cmp	w22, w1
    1860:	b.gt	1854 <gcry_mpi_mul_2exp+0xa4>
    1864:	str	w23, [x21, #4]
    1868:	str	w24, [x21, #8]
    186c:	ldp	x19, x20, [sp, #16]
    1870:	ldp	x23, x24, [sp, #48]
    1874:	ldp	x27, x28, [sp, #80]
    1878:	ldp	x21, x22, [sp, #32]
    187c:	ldp	x25, x26, [sp, #64]
    1880:	ldp	x29, x30, [sp], #96
    1884:	ret
    1888:	str	wzr, [x0, #4]
    188c:	str	wzr, [x0, #8]
    1890:	b	1878 <gcry_mpi_mul_2exp+0xc8>
    1894:	mov	w1, w28
    1898:	mov	x0, x21
    189c:	bl	198 <_gcry_mpi_resize>
    18a0:	b	1800 <gcry_mpi_mul_2exp+0x50>
    18a4:	mov	w2, w26
    18a8:	ldr	x1, [x19, #16]
    18ac:	add	x0, x20, w25, sxtw #3
    18b0:	bl	3b60 <_gcry_mpih_lshift>
    18b4:	cbz	x0, 1848 <gcry_mpi_mul_2exp+0x98>
    18b8:	str	x0, [x20, w23, sxtw #3]
    18bc:	mov	w23, w28
    18c0:	b	1848 <gcry_mpi_mul_2exp+0x98>

00000000000018c4 <gcry_mpi_mul>:
    18c4:	stp	x29, x30, [sp, #-96]!
    18c8:	mov	x29, sp
    18cc:	stp	x19, x20, [sp, #16]
    18d0:	stp	x21, x22, [sp, #32]
    18d4:	stp	x23, x24, [sp, #48]
    18d8:	stp	x25, x26, [sp, #64]
    18dc:	stp	x27, x28, [sp, #80]
    18e0:	mov	x20, x0
    18e4:	mov	x3, x1
    18e8:	ldr	w19, [x1, #4]
    18ec:	ldr	w21, [x2, #4]
    18f0:	cmp	w19, w21
    18f4:	b.ge	19b0 <gcry_mpi_mul+0xec>  // b.tcont
    18f8:	ldr	w22, [x2, #8]
    18fc:	ldr	w4, [x2, #12]
    1900:	and	w4, w4, #0x1
    1904:	ldr	x25, [x2, #16]
    1908:	ldr	w1, [x1, #8]
    190c:	ldr	w0, [x3, #12]
    1910:	and	w0, w0, #0x1
    1914:	ldr	x24, [x3, #16]
    1918:	eor	w22, w22, w1
    191c:	add	w23, w21, w19
    1920:	ldr	w5, [x20, #12]
    1924:	and	w1, w5, #0x1
    1928:	tbnz	w5, #0, 19e0 <gcry_mpi_mul+0x11c>
    192c:	ldr	w3, [x3, #12]
    1930:	tbnz	w3, #0, 193c <gcry_mpi_mul+0x78>
    1934:	ldr	w2, [x2, #12]
    1938:	tbz	w2, #0, 19e0 <gcry_mpi_mul+0x11c>
    193c:	mov	w1, #0x1                   	// #1
    1940:	mov	w0, w23
    1944:	bl	28 <_gcry_mpi_alloc_limb_space>
    1948:	mov	x27, x0
    194c:	cbz	w19, 1b58 <gcry_mpi_mul+0x294>
    1950:	mov	w4, w19
    1954:	mov	x3, x24
    1958:	mov	w2, w21
    195c:	mov	x1, x25
    1960:	bl	4710 <_gcry_mpih_mul>
    1964:	cmp	x0, #0x0
    1968:	cset	w19, eq  // eq = none
    196c:	sub	w19, w23, w19
    1970:	mov	w1, #0x0                   	// #0
    1974:	mov	w0, w19
    1978:	bl	28 <_gcry_mpi_alloc_limb_space>
    197c:	mov	x26, x0
    1980:	mov	x1, #0x0                   	// #0
    1984:	cmp	w19, #0x0
    1988:	b.le	19a0 <gcry_mpi_mul+0xdc>
    198c:	ldr	x0, [x27, x1, lsl #3]
    1990:	str	x0, [x26, x1, lsl #3]
    1994:	add	x1, x1, #0x1
    1998:	cmp	w19, w1
    199c:	b.gt	198c <gcry_mpi_mul+0xc8>
    19a0:	mov	w1, #0x0                   	// #0
    19a4:	mov	x0, x27
    19a8:	bl	120 <_gcry_mpi_free_limb_space>
    19ac:	b	1a0c <gcry_mpi_mul+0x148>
    19b0:	ldr	w22, [x1, #8]
    19b4:	ldr	w4, [x1, #12]
    19b8:	and	w4, w4, #0x1
    19bc:	ldr	x25, [x1, #16]
    19c0:	ldr	w1, [x2, #8]
    19c4:	ldr	w0, [x2, #12]
    19c8:	and	w0, w0, #0x1
    19cc:	ldr	x24, [x2, #16]
    19d0:	mov	w5, w21
    19d4:	mov	w21, w19
    19d8:	mov	w19, w5
    19dc:	b	1918 <gcry_mpi_mul+0x54>
    19e0:	ldr	x26, [x20, #16]
    19e4:	ldr	w2, [x20]
    19e8:	cmp	w2, w23
    19ec:	b.ge	1a6c <gcry_mpi_mul+0x1a8>  // b.tcont
    19f0:	cmp	x25, x26
    19f4:	ccmp	x24, x26, #0x4, ne  // ne = any
    19f8:	b.ne	1a58 <gcry_mpi_mul+0x194>  // b.any
    19fc:	mov	w0, w23
    1a00:	bl	28 <_gcry_mpi_alloc_limb_space>
    1a04:	mov	x26, x0
    1a08:	cbnz	w19, 1b6c <gcry_mpi_mul+0x2a8>
    1a0c:	mov	w2, w19
    1a10:	mov	x1, x26
    1a14:	mov	x0, x20
    1a18:	bl	158 <_gcry_mpi_assign_limb_space>
    1a1c:	mov	w27, #0x0                   	// #0
    1a20:	mov	x28, #0x0                   	// #0
    1a24:	str	w19, [x20, #4]
    1a28:	str	w22, [x20, #8]
    1a2c:	cbz	x28, 1a3c <gcry_mpi_mul+0x178>
    1a30:	mov	w1, w27
    1a34:	mov	x0, x28
    1a38:	bl	120 <_gcry_mpi_free_limb_space>
    1a3c:	ldp	x19, x20, [sp, #16]
    1a40:	ldp	x21, x22, [sp, #32]
    1a44:	ldp	x23, x24, [sp, #48]
    1a48:	ldp	x25, x26, [sp, #64]
    1a4c:	ldp	x27, x28, [sp, #80]
    1a50:	ldp	x29, x30, [sp], #96
    1a54:	ret
    1a58:	mov	w1, w23
    1a5c:	mov	x0, x20
    1a60:	bl	198 <_gcry_mpi_resize>
    1a64:	ldr	x26, [x20, #16]
    1a68:	b	1a7c <gcry_mpi_mul+0x1b8>
    1a6c:	cmp	x25, x26
    1a70:	b.eq	1a94 <gcry_mpi_mul+0x1d0>  // b.none
    1a74:	cmp	x24, x26
    1a78:	b.eq	1ae4 <gcry_mpi_mul+0x220>  // b.none
    1a7c:	mov	w27, #0x0                   	// #0
    1a80:	mov	x28, #0x0                   	// #0
    1a84:	cbnz	w19, 1b1c <gcry_mpi_mul+0x258>
    1a88:	str	wzr, [x20, #4]
    1a8c:	str	w22, [x20, #8]
    1a90:	b	1a3c <gcry_mpi_mul+0x178>
    1a94:	mov	w27, w21
    1a98:	mov	w1, w4
    1a9c:	mov	w0, w21
    1aa0:	bl	28 <_gcry_mpi_alloc_limb_space>
    1aa4:	mov	x28, x0
    1aa8:	cmp	x24, x26
    1aac:	csel	x24, x24, x0, ne  // ne = any
    1ab0:	cmp	w21, #0x0
    1ab4:	b.le	1b44 <gcry_mpi_mul+0x280>
    1ab8:	mov	x0, #0x0                   	// #0
    1abc:	ldr	x1, [x26, x0, lsl #3]
    1ac0:	str	x1, [x28, x0, lsl #3]
    1ac4:	add	x0, x0, #0x1
    1ac8:	cmp	w21, w0
    1acc:	b.gt	1abc <gcry_mpi_mul+0x1f8>
    1ad0:	mov	x25, x28
    1ad4:	cbnz	w19, 1b1c <gcry_mpi_mul+0x258>
    1ad8:	str	wzr, [x20, #4]
    1adc:	str	w22, [x20, #8]
    1ae0:	b	1a30 <gcry_mpi_mul+0x16c>
    1ae4:	mov	w27, w19
    1ae8:	mov	w1, w0
    1aec:	mov	w0, w19
    1af0:	bl	28 <_gcry_mpi_alloc_limb_space>
    1af4:	mov	x24, x0
    1af8:	cmp	w19, #0x0
    1afc:	b.le	1b50 <gcry_mpi_mul+0x28c>
    1b00:	mov	x0, #0x0                   	// #0
    1b04:	ldr	x1, [x26, x0, lsl #3]
    1b08:	str	x1, [x24, x0, lsl #3]
    1b0c:	add	x0, x0, #0x1
    1b10:	cmp	w19, w0
    1b14:	b.gt	1b04 <gcry_mpi_mul+0x240>
    1b18:	mov	x28, x24
    1b1c:	mov	w4, w19
    1b20:	mov	x3, x24
    1b24:	mov	w2, w21
    1b28:	mov	x1, x25
    1b2c:	mov	x0, x26
    1b30:	bl	4710 <_gcry_mpih_mul>
    1b34:	cmp	x0, #0x0
    1b38:	cset	w19, eq  // eq = none
    1b3c:	sub	w19, w23, w19
    1b40:	b	1a24 <gcry_mpi_mul+0x160>
    1b44:	mov	x25, x0
    1b48:	cbz	w19, 1a24 <gcry_mpi_mul+0x160>
    1b4c:	b	1b1c <gcry_mpi_mul+0x258>
    1b50:	mov	x28, x0
    1b54:	b	1b48 <gcry_mpi_mul+0x284>
    1b58:	mov	w1, #0x0                   	// #0
    1b5c:	mov	w0, #0x0                   	// #0
    1b60:	bl	28 <_gcry_mpi_alloc_limb_space>
    1b64:	mov	x26, x0
    1b68:	b	19a0 <gcry_mpi_mul+0xdc>
    1b6c:	mov	w4, w19
    1b70:	mov	x3, x24
    1b74:	mov	w2, w21
    1b78:	mov	x1, x25
    1b7c:	bl	4710 <_gcry_mpih_mul>
    1b80:	cmp	x0, #0x0
    1b84:	cset	w19, eq  // eq = none
    1b88:	sub	w19, w23, w19
    1b8c:	b	1a0c <gcry_mpi_mul+0x148>

0000000000001b90 <gcry_mpi_mulm>:
    1b90:	stp	x29, x30, [sp, #-32]!
    1b94:	mov	x29, sp
    1b98:	stp	x19, x20, [sp, #16]
    1b9c:	mov	x19, x0
    1ba0:	mov	x20, x3
    1ba4:	bl	18c4 <gcry_mpi_mul>
    1ba8:	mov	x2, x20
    1bac:	mov	x1, x19
    1bb0:	mov	x0, x19
    1bb4:	bl	2554 <_gcry_mpi_fdiv_r>
    1bb8:	ldp	x19, x20, [sp, #16]
    1bbc:	ldp	x29, x30, [sp], #32
    1bc0:	ret

0000000000001bc4 <_gcry_mpi_mod>:
    1bc4:	stp	x29, x30, [sp, #-32]!
    1bc8:	mov	x29, sp
    1bcc:	str	x19, [sp, #16]
    1bd0:	mov	x19, x0
    1bd4:	bl	2554 <_gcry_mpi_fdiv_r>
    1bd8:	str	wzr, [x19, #8]
    1bdc:	ldr	x19, [sp, #16]
    1be0:	ldp	x29, x30, [sp], #32
    1be4:	ret

0000000000001be8 <_gcry_mpi_barrett_init>:
    1be8:	stp	x29, x30, [sp, #-48]!
    1bec:	mov	x29, sp
    1bf0:	stp	x19, x20, [sp, #16]
    1bf4:	str	x21, [sp, #32]
    1bf8:	mov	x21, x0
    1bfc:	mov	w20, w1
    1c00:	bl	8a0 <_gcry_mpi_normalize>
    1c04:	mov	x1, #0x30                  	// #48
    1c08:	mov	x0, #0x1                   	// #1
    1c0c:	bl	6b24 <gcry_xcalloc>
    1c10:	mov	x19, x0
    1c14:	cbnz	w20, 1c98 <_gcry_mpi_barrett_init+0xb0>
    1c18:	str	x21, [x0]
    1c1c:	ldr	w0, [x21, #4]
    1c20:	str	w0, [x19, #12]
    1c24:	add	w0, w0, #0x1
    1c28:	bl	6c <_gcry_mpi_alloc>
    1c2c:	mov	x20, x0
    1c30:	mov	x1, #0x1                   	// #1
    1c34:	bl	5f8 <gcry_mpi_set_ui>
    1c38:	ldr	w1, [x19, #12]
    1c3c:	lsl	w1, w1, #1
    1c40:	mov	x0, x20
    1c44:	bl	dec <_gcry_mpi_lshift_limbs>
    1c48:	mov	x2, x21
    1c4c:	mov	x1, x20
    1c50:	mov	x0, x20
    1c54:	bl	24dc <_gcry_mpi_fdiv_q>
    1c58:	str	x20, [x19, #16]
    1c5c:	ldr	w0, [x19, #12]
    1c60:	lsl	w0, w0, #1
    1c64:	add	w0, w0, #0x1
    1c68:	bl	6c <_gcry_mpi_alloc>
    1c6c:	str	x0, [x19, #24]
    1c70:	ldr	w0, [x19, #12]
    1c74:	lsl	w0, w0, #1
    1c78:	add	w0, w0, #0x1
    1c7c:	bl	6c <_gcry_mpi_alloc>
    1c80:	str	x0, [x19, #32]
    1c84:	mov	x0, x19
    1c88:	ldp	x19, x20, [sp, #16]
    1c8c:	ldr	x21, [sp, #32]
    1c90:	ldp	x29, x30, [sp], #48
    1c94:	ret
    1c98:	mov	x0, x21
    1c9c:	bl	398 <_gcry_mpi_copy>
    1ca0:	str	x0, [x19]
    1ca4:	mov	w0, #0x1                   	// #1
    1ca8:	str	w0, [x19, #8]
    1cac:	b	1c1c <_gcry_mpi_barrett_init+0x34>

0000000000001cb0 <_gcry_mpi_barrett_free>:
    1cb0:	cbz	x0, 1d10 <_gcry_mpi_barrett_free+0x60>
    1cb4:	stp	x29, x30, [sp, #-32]!
    1cb8:	mov	x29, sp
    1cbc:	str	x19, [sp, #16]
    1cc0:	mov	x19, x0
    1cc4:	ldr	x0, [x0, #16]
    1cc8:	bl	274 <_gcry_mpi_free>
    1ccc:	ldr	x0, [x19, #24]
    1cd0:	bl	274 <_gcry_mpi_free>
    1cd4:	ldr	x0, [x19, #32]
    1cd8:	bl	274 <_gcry_mpi_free>
    1cdc:	ldr	x0, [x19, #40]
    1ce0:	cbz	x0, 1ce8 <_gcry_mpi_barrett_free+0x38>
    1ce4:	bl	274 <_gcry_mpi_free>
    1ce8:	ldr	w0, [x19, #8]
    1cec:	cbnz	w0, 1d04 <_gcry_mpi_barrett_free+0x54>
    1cf0:	mov	x0, x19
    1cf4:	bl	6b08 <gcry_free>
    1cf8:	ldr	x19, [sp, #16]
    1cfc:	ldp	x29, x30, [sp], #32
    1d00:	ret
    1d04:	ldr	x0, [x19]
    1d08:	bl	274 <_gcry_mpi_free>
    1d0c:	b	1cf0 <_gcry_mpi_barrett_free+0x40>
    1d10:	ret

0000000000001d14 <_gcry_mpi_mod_barrett>:
    1d14:	stp	x29, x30, [sp, #-80]!
    1d18:	mov	x29, sp
    1d1c:	stp	x19, x20, [sp, #16]
    1d20:	stp	x21, x22, [sp, #32]
    1d24:	stp	x23, x24, [sp, #48]
    1d28:	stp	x25, x26, [sp, #64]
    1d2c:	mov	x19, x0
    1d30:	mov	x25, x1
    1d34:	mov	x21, x2
    1d38:	ldr	x20, [x2]
    1d3c:	ldr	w26, [x2, #12]
    1d40:	ldr	x23, [x2, #16]
    1d44:	ldr	x24, [x2, #24]
    1d48:	ldr	x22, [x2, #32]
    1d4c:	mov	x0, x1
    1d50:	bl	8a0 <_gcry_mpi_normalize>
    1d54:	ldr	w0, [x25, #4]
    1d58:	cmp	w0, w26, lsl #1
    1d5c:	b.gt	1e28 <_gcry_mpi_mod_barrett+0x114>
    1d60:	mov	x1, x25
    1d64:	mov	x0, x22
    1d68:	bl	55c <gcry_mpi_set>
    1d6c:	sub	w1, w26, #0x1
    1d70:	mov	x0, x22
    1d74:	bl	b54 <_gcry_mpi_rshift_limbs>
    1d78:	mov	x2, x23
    1d7c:	mov	x1, x22
    1d80:	mov	x0, x22
    1d84:	bl	18c4 <gcry_mpi_mul>
    1d88:	add	w23, w26, #0x1
    1d8c:	mov	w1, w23
    1d90:	mov	x0, x22
    1d94:	bl	b54 <_gcry_mpi_rshift_limbs>
    1d98:	mov	x1, x25
    1d9c:	mov	x0, x24
    1da0:	bl	55c <gcry_mpi_set>
    1da4:	ldr	w0, [x24, #4]
    1da8:	cmp	w23, w0
    1dac:	b.ge	1db4 <_gcry_mpi_mod_barrett+0xa0>  // b.tcont
    1db0:	str	w23, [x24, #4]
    1db4:	mov	x2, x20
    1db8:	mov	x1, x22
    1dbc:	mov	x0, x22
    1dc0:	bl	18c4 <gcry_mpi_mul>
    1dc4:	ldr	w0, [x22, #4]
    1dc8:	cmp	w23, w0
    1dcc:	b.ge	1dd4 <_gcry_mpi_mod_barrett+0xc0>  // b.tcont
    1dd0:	str	w23, [x22, #4]
    1dd4:	mov	x2, x22
    1dd8:	mov	x1, x24
    1ddc:	mov	x0, x19
    1de0:	bl	1644 <gcry_mpi_sub>
    1de4:	ldr	w0, [x19, #8]
    1de8:	cbz	w0, 1e04 <_gcry_mpi_mod_barrett+0xf0>
    1dec:	ldr	x0, [x21, #40]
    1df0:	cbz	x0, 1e50 <_gcry_mpi_mod_barrett+0x13c>
    1df4:	ldr	x2, [x21, #40]
    1df8:	mov	x1, x19
    1dfc:	mov	x0, x19
    1e00:	bl	1170 <gcry_mpi_add>
    1e04:	mov	x1, x20
    1e08:	mov	x0, x19
    1e0c:	bl	2834 <gcry_mpi_cmp>
    1e10:	tbnz	w0, #31, 1e38 <_gcry_mpi_mod_barrett+0x124>
    1e14:	mov	x2, x20
    1e18:	mov	x1, x19
    1e1c:	mov	x0, x19
    1e20:	bl	1644 <gcry_mpi_sub>
    1e24:	b	1e04 <_gcry_mpi_mod_barrett+0xf0>
    1e28:	mov	x2, x20
    1e2c:	mov	x1, x25
    1e30:	mov	x0, x19
    1e34:	bl	1bc4 <_gcry_mpi_mod>
    1e38:	ldp	x19, x20, [sp, #16]
    1e3c:	ldp	x21, x22, [sp, #32]
    1e40:	ldp	x23, x24, [sp, #48]
    1e44:	ldp	x25, x26, [sp, #64]
    1e48:	ldp	x29, x30, [sp], #80
    1e4c:	ret
    1e50:	add	w0, w26, #0x2
    1e54:	bl	6c <_gcry_mpi_alloc>
    1e58:	str	x0, [x21, #40]
    1e5c:	mov	x1, #0x1                   	// #1
    1e60:	bl	5f8 <gcry_mpi_set_ui>
    1e64:	mov	w1, w23
    1e68:	ldr	x0, [x21, #40]
    1e6c:	bl	dec <_gcry_mpi_lshift_limbs>
    1e70:	b	1df4 <_gcry_mpi_mod_barrett+0xe0>

0000000000001e74 <_gcry_mpi_mul_barrett>:
    1e74:	stp	x29, x30, [sp, #-32]!
    1e78:	mov	x29, sp
    1e7c:	stp	x19, x20, [sp, #16]
    1e80:	mov	x19, x0
    1e84:	mov	x20, x3
    1e88:	bl	18c4 <gcry_mpi_mul>
    1e8c:	mov	x2, x20
    1e90:	mov	x1, x19
    1e94:	mov	x0, x19
    1e98:	bl	1d14 <_gcry_mpi_mod_barrett>
    1e9c:	ldp	x19, x20, [sp, #16]
    1ea0:	ldp	x29, x30, [sp], #32
    1ea4:	ret

0000000000001ea8 <gcry_mpi_gcd>:
    1ea8:	stp	x29, x30, [sp, #-48]!
    1eac:	mov	x29, sp
    1eb0:	stp	x19, x20, [sp, #16]
    1eb4:	str	x21, [sp, #32]
    1eb8:	mov	x21, x0
    1ebc:	mov	x0, x1
    1ec0:	mov	x19, x2
    1ec4:	bl	398 <_gcry_mpi_copy>
    1ec8:	mov	x20, x0
    1ecc:	mov	x0, x19
    1ed0:	bl	398 <_gcry_mpi_copy>
    1ed4:	mov	x19, x0
    1ed8:	str	wzr, [x20, #8]
    1edc:	str	wzr, [x0, #8]
    1ee0:	mov	x1, #0x0                   	// #0
    1ee4:	mov	x0, x19
    1ee8:	bl	27c8 <gcry_mpi_cmp_ui>
    1eec:	cbz	w0, 1f1c <gcry_mpi_gcd+0x74>
    1ef0:	mov	x2, x19
    1ef4:	mov	x1, x20
    1ef8:	mov	x0, x21
    1efc:	bl	2554 <_gcry_mpi_fdiv_r>
    1f00:	mov	x1, x19
    1f04:	mov	x0, x20
    1f08:	bl	55c <gcry_mpi_set>
    1f0c:	mov	x1, x21
    1f10:	mov	x0, x19
    1f14:	bl	55c <gcry_mpi_set>
    1f18:	b	1ee0 <gcry_mpi_gcd+0x38>
    1f1c:	mov	x1, x20
    1f20:	mov	x0, x21
    1f24:	bl	55c <gcry_mpi_set>
    1f28:	mov	x0, x20
    1f2c:	bl	274 <_gcry_mpi_free>
    1f30:	mov	x0, x19
    1f34:	bl	274 <_gcry_mpi_free>
    1f38:	mov	x1, #0x1                   	// #1
    1f3c:	mov	x0, x21
    1f40:	bl	27c8 <gcry_mpi_cmp_ui>
    1f44:	cmp	w0, #0x0
    1f48:	cset	w0, eq  // eq = none
    1f4c:	ldp	x19, x20, [sp, #16]
    1f50:	ldr	x21, [sp, #32]
    1f54:	ldp	x29, x30, [sp], #48
    1f58:	ret
    1f5c:	nop

0000000000001f60 <_gcry_mpi_fdiv_r_ui>:
    1f60:	stp	x29, x30, [sp, #-48]!
    1f64:	mov	x29, sp
    1f68:	stp	x19, x20, [sp, #16]
    1f6c:	str	x21, [sp, #32]
    1f70:	mov	x20, x0
    1f74:	mov	x19, x1
    1f78:	mov	x21, x2
    1f7c:	ldr	w1, [x1, #4]
    1f80:	ldr	x0, [x19, #16]
    1f84:	bl	4db8 <_gcry_mpih_mod_1>
    1f88:	cbz	x0, 1f9c <_gcry_mpi_fdiv_r_ui+0x3c>
    1f8c:	ldr	w1, [x19, #8]
    1f90:	sub	x2, x21, x0
    1f94:	cmp	w1, #0x0
    1f98:	csel	x0, x2, x0, ne  // ne = any
    1f9c:	cbz	x20, 1fb4 <_gcry_mpi_fdiv_r_ui+0x54>
    1fa0:	ldr	x1, [x20, #16]
    1fa4:	str	x0, [x1]
    1fa8:	cmp	x0, #0x0
    1fac:	cset	w1, ne  // ne = any
    1fb0:	str	w1, [x20, #4]
    1fb4:	ldp	x19, x20, [sp, #16]
    1fb8:	ldr	x21, [sp, #32]
    1fbc:	ldp	x29, x30, [sp], #48
    1fc0:	ret

0000000000001fc4 <_gcry_mpi_tdiv_qr>:
    1fc4:	stp	x29, x30, [sp, #-192]!
    1fc8:	mov	x29, sp
    1fcc:	stp	x19, x20, [sp, #16]
    1fd0:	stp	x21, x22, [sp, #32]
    1fd4:	stp	x23, x24, [sp, #48]
    1fd8:	stp	x25, x26, [sp, #64]
    1fdc:	mov	x23, x0
    1fe0:	mov	x22, x1
    1fe4:	mov	x25, x2
    1fe8:	mov	x24, x3
    1fec:	ldr	w21, [x2, #4]
    1ff0:	ldr	w20, [x3, #4]
    1ff4:	ldr	w0, [x2, #8]
    1ff8:	str	w0, [sp, #96]
    1ffc:	ldr	w26, [x3, #8]
    2000:	add	w0, w21, #0x1
    2004:	mov	w19, w0
    2008:	str	w0, [sp, #112]
    200c:	mov	w1, w0
    2010:	mov	x0, x22
    2014:	bl	198 <_gcry_mpi_resize>
    2018:	sub	w19, w19, w20
    201c:	cmp	w19, #0x0
    2020:	b.le	2124 <_gcry_mpi_tdiv_qr+0x160>
    2024:	stp	x27, x28, [sp, #80]
    2028:	ldr	w0, [sp, #96]
    202c:	eor	w0, w26, w0
    2030:	str	w0, [sp, #104]
    2034:	cbz	x23, 23dc <_gcry_mpi_tdiv_qr+0x418>
    2038:	mov	w1, w19
    203c:	mov	x0, x23
    2040:	bl	198 <_gcry_mpi_resize>
    2044:	ldr	x26, [x25, #16]
    2048:	ldr	x27, [x24, #16]
    204c:	ldr	x25, [x22, #16]
    2050:	cmp	w20, #0x1
    2054:	b.eq	2180 <_gcry_mpi_tdiv_qr+0x1bc>  // b.none
    2058:	ldr	x28, [x23, #16]
    205c:	mov	w3, #0x0                   	// #0
    2060:	cmp	x26, x28
    2064:	b.eq	21ec <_gcry_mpi_tdiv_qr+0x228>  // b.none
    2068:	sxtw	x19, w20
    206c:	add	x0, x27, w20, sxtw #3
    2070:	ldur	x1, [x0, #-8]
    2074:	cmp	xzr, x1, lsr #56
    2078:	b.ne	2238 <_gcry_mpi_tdiv_qr+0x274>  // b.any
    207c:	mov	x0, #0x30                  	// #48
    2080:	lsr	x2, x1, x0
    2084:	tst	w2, #0xff
    2088:	b.ne	2094 <_gcry_mpi_tdiv_qr+0xd0>  // b.any
    208c:	subs	x0, x0, #0x8
    2090:	b.ne	2080 <_gcry_mpi_tdiv_qr+0xbc>  // b.any
    2094:	mov	w2, #0x40                  	// #64
    2098:	sub	w2, w2, w0
    209c:	adrp	x4, 0 <_gcry_mpi_m_check>
    20a0:	ldr	x4, [x4]
    20a4:	lsr	x0, x1, x0
    20a8:	ldrb	w0, [x4, x0]
    20ac:	subs	w0, w2, w0
    20b0:	str	w0, [sp, #100]
    20b4:	b.eq	2240 <_gcry_mpi_tdiv_qr+0x27c>  // b.none
    20b8:	sxtw	x1, w3
    20bc:	add	x0, sp, #0x80
    20c0:	str	x1, [sp, #120]
    20c4:	str	w20, [x0, x1, lsl #2]
    20c8:	add	w3, w3, #0x1
    20cc:	str	w3, [sp, #108]
    20d0:	ldr	w1, [x24, #12]
    20d4:	and	w1, w1, #0x1
    20d8:	mov	w0, w20
    20dc:	bl	28 <_gcry_mpi_alloc_limb_space>
    20e0:	mov	x24, x0
    20e4:	add	x1, sp, #0x98
    20e8:	ldr	x2, [sp, #120]
    20ec:	str	x0, [x1, x2, lsl #3]
    20f0:	ldr	w3, [sp, #100]
    20f4:	mov	w2, w20
    20f8:	mov	x1, x27
    20fc:	bl	3b60 <_gcry_mpih_lshift>
    2100:	ldr	w3, [sp, #100]
    2104:	mov	w2, w21
    2108:	mov	x1, x26
    210c:	mov	x0, x25
    2110:	bl	3b60 <_gcry_mpih_lshift>
    2114:	cbz	x0, 22d8 <_gcry_mpi_tdiv_qr+0x314>
    2118:	str	x0, [x25, w21, sxtw #3]
    211c:	ldr	w21, [sp, #112]
    2120:	b	22d8 <_gcry_mpi_tdiv_qr+0x314>
    2124:	cmp	x25, x22
    2128:	b.eq	2170 <_gcry_mpi_tdiv_qr+0x1ac>  // b.none
    212c:	ldr	w0, [x25, #4]
    2130:	str	w0, [x22, #4]
    2134:	ldr	w0, [x25, #8]
    2138:	str	w0, [x22, #8]
    213c:	cmp	w21, #0x0
    2140:	b.le	2170 <_gcry_mpi_tdiv_qr+0x1ac>
    2144:	sub	w3, w21, #0x1
    2148:	add	x3, x3, #0x1
    214c:	lsl	x3, x3, #3
    2150:	mov	x0, #0x0                   	// #0
    2154:	ldr	x1, [x25, #16]
    2158:	ldr	x2, [x1, x0]
    215c:	ldr	x1, [x22, #16]
    2160:	str	x2, [x1, x0]
    2164:	add	x0, x0, #0x8
    2168:	cmp	x0, x3
    216c:	b.ne	2154 <_gcry_mpi_tdiv_qr+0x190>  // b.any
    2170:	cbz	x23, 238c <_gcry_mpi_tdiv_qr+0x3c8>
    2174:	str	wzr, [x23, #4]
    2178:	str	wzr, [x23, #8]
    217c:	b	238c <_gcry_mpi_tdiv_qr+0x3c8>
    2180:	ldr	x20, [x23, #16]
    2184:	ldr	x3, [x27]
    2188:	mov	w2, w21
    218c:	mov	x1, x26
    2190:	mov	x0, x20
    2194:	bl	5650 <_gcry_mpih_divmod_1>
    2198:	add	x20, x20, w19, sxtw #3
    219c:	ldur	x1, [x20, #-8]
    21a0:	cmp	x1, #0x0
    21a4:	cset	w1, eq  // eq = none
    21a8:	sub	w19, w19, w1
    21ac:	str	w19, [x23, #4]
    21b0:	ldr	w1, [sp, #104]
    21b4:	str	w1, [x23, #8]
    21b8:	str	x0, [x25]
    21bc:	cmp	x0, #0x0
    21c0:	cset	w0, ne  // ne = any
    21c4:	str	w0, [x22, #4]
    21c8:	ldr	w0, [sp, #96]
    21cc:	str	w0, [x22, #8]
    21d0:	ldp	x27, x28, [sp, #80]
    21d4:	b	238c <_gcry_mpi_tdiv_qr+0x3c8>
    21d8:	ldr	x2, [x27]
    21dc:	mov	w1, w21
    21e0:	mov	x0, x26
    21e4:	bl	4db8 <_gcry_mpih_mod_1>
    21e8:	b	21b8 <_gcry_mpi_tdiv_qr+0x1f4>
    21ec:	str	w21, [sp, #128]
    21f0:	ldr	w1, [x23, #12]
    21f4:	and	w1, w1, #0x1
    21f8:	mov	w0, w21
    21fc:	bl	28 <_gcry_mpi_alloc_limb_space>
    2200:	mov	x26, x0
    2204:	str	x0, [sp, #152]
    2208:	cmp	w21, #0x0
    220c:	b.le	2230 <_gcry_mpi_tdiv_qr+0x26c>
    2210:	mov	x0, #0x0                   	// #0
    2214:	ldr	x1, [x28, x0, lsl #3]
    2218:	str	x1, [x26, x0, lsl #3]
    221c:	add	x0, x0, #0x1
    2220:	cmp	w21, w0
    2224:	b.gt	2214 <_gcry_mpi_tdiv_qr+0x250>
    2228:	mov	w3, #0x1                   	// #1
    222c:	b	2068 <_gcry_mpi_tdiv_qr+0xa4>
    2230:	mov	w3, #0x1                   	// #1
    2234:	b	2068 <_gcry_mpi_tdiv_qr+0xa4>
    2238:	mov	x0, #0x38                  	// #56
    223c:	b	2094 <_gcry_mpi_tdiv_qr+0xd0>
    2240:	cmp	x27, x25
    2244:	b.eq	2254 <_gcry_mpi_tdiv_qr+0x290>  // b.none
    2248:	cmp	x23, #0x0
    224c:	ccmp	x28, x27, #0x0, ne  // ne = any
    2250:	b.ne	23a4 <_gcry_mpi_tdiv_qr+0x3e0>  // b.any
    2254:	sxtw	x0, w3
    2258:	mov	x1, x0
    225c:	add	x0, sp, #0x80
    2260:	str	x1, [sp, #112]
    2264:	str	w20, [x0, x1, lsl #2]
    2268:	add	w2, w3, #0x1
    226c:	str	w2, [sp, #108]
    2270:	ldr	w1, [x24, #12]
    2274:	and	w1, w1, #0x1
    2278:	mov	w0, w20
    227c:	bl	28 <_gcry_mpi_alloc_limb_space>
    2280:	mov	x24, x0
    2284:	add	x0, sp, #0x98
    2288:	ldr	x1, [sp, #112]
    228c:	str	x24, [x0, x1, lsl #3]
    2290:	cmp	w20, #0x0
    2294:	b.le	22b0 <_gcry_mpi_tdiv_qr+0x2ec>
    2298:	mov	x0, #0x0                   	// #0
    229c:	ldr	x1, [x27, x0, lsl #3]
    22a0:	str	x1, [x24, x0, lsl #3]
    22a4:	add	x0, x0, #0x1
    22a8:	cmp	w20, w0
    22ac:	b.gt	229c <_gcry_mpi_tdiv_qr+0x2d8>
    22b0:	cmp	x26, x25
    22b4:	b.eq	22d8 <_gcry_mpi_tdiv_qr+0x314>  // b.none
    22b8:	cmp	w21, #0x0
    22bc:	b.le	22d8 <_gcry_mpi_tdiv_qr+0x314>
    22c0:	mov	x0, #0x0                   	// #0
    22c4:	ldr	x1, [x26, x0, lsl #3]
    22c8:	str	x1, [x25, x0, lsl #3]
    22cc:	add	x0, x0, #0x1
    22d0:	cmp	w21, w0
    22d4:	b.gt	22c4 <_gcry_mpi_tdiv_qr+0x300>
    22d8:	mov	w5, w20
    22dc:	mov	x4, x24
    22e0:	mov	w3, w21
    22e4:	mov	x2, x25
    22e8:	mov	w1, #0x0                   	// #0
    22ec:	mov	x0, x28
    22f0:	bl	4fe0 <_gcry_mpih_divrem>
    22f4:	cbz	x23, 2314 <_gcry_mpi_tdiv_qr+0x350>
    22f8:	sub	w21, w21, w20
    22fc:	cbz	x0, 2308 <_gcry_mpi_tdiv_qr+0x344>
    2300:	str	x0, [x28, w21, sxtw #3]
    2304:	add	w21, w21, #0x1
    2308:	str	w21, [x23, #4]
    230c:	ldr	w0, [sp, #104]
    2310:	str	w0, [x23, #8]
    2314:	cmp	w20, #0x0
    2318:	b.le	233c <_gcry_mpi_tdiv_qr+0x378>
    231c:	sub	x1, x25, #0x8
    2320:	mov	w20, w19
    2324:	ldr	x0, [x1, x19, lsl #3]
    2328:	cbnz	x0, 233c <_gcry_mpi_tdiv_qr+0x378>
    232c:	sub	w20, w19, #0x1
    2330:	sub	x19, x19, #0x1
    2334:	cmp	w19, #0x0
    2338:	b.gt	2320 <_gcry_mpi_tdiv_qr+0x35c>
    233c:	ldr	w0, [sp, #100]
    2340:	cmp	w0, #0x0
    2344:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    2348:	b.ne	23b0 <_gcry_mpi_tdiv_qr+0x3ec>  // b.any
    234c:	str	w20, [x22, #4]
    2350:	ldr	w0, [sp, #96]
    2354:	str	w0, [x22, #8]
    2358:	ldr	w0, [sp, #108]
    235c:	cbz	w0, 23fc <_gcry_mpi_tdiv_qr+0x438>
    2360:	sxtw	x19, w0
    2364:	add	x0, sp, #0x80
    2368:	add	x1, x0, x19, lsl #2
    236c:	add	x0, sp, #0x98
    2370:	add	x0, x0, x19, lsl #3
    2374:	ldur	w1, [x1, #-4]
    2378:	ldur	x0, [x0, #-8]
    237c:	bl	120 <_gcry_mpi_free_limb_space>
    2380:	sub	x19, x19, #0x1
    2384:	cbnz	w19, 2364 <_gcry_mpi_tdiv_qr+0x3a0>
    2388:	ldp	x27, x28, [sp, #80]
    238c:	ldp	x19, x20, [sp, #16]
    2390:	ldp	x21, x22, [sp, #32]
    2394:	ldp	x23, x24, [sp, #48]
    2398:	ldp	x25, x26, [sp, #64]
    239c:	ldp	x29, x30, [sp], #192
    23a0:	ret
    23a4:	str	w3, [sp, #108]
    23a8:	mov	x24, x27
    23ac:	b	22b0 <_gcry_mpi_tdiv_qr+0x2ec>
    23b0:	ldr	w3, [sp, #100]
    23b4:	mov	w2, w20
    23b8:	mov	x1, x25
    23bc:	mov	x0, x25
    23c0:	bl	686c <_gcry_mpih_rshift>
    23c4:	add	x25, x25, w20, sxtw #3
    23c8:	ldur	x0, [x25, #-8]
    23cc:	cmp	x0, #0x0
    23d0:	cset	w0, eq  // eq = none
    23d4:	sub	w20, w20, w0
    23d8:	b	234c <_gcry_mpi_tdiv_qr+0x388>
    23dc:	ldr	x26, [x25, #16]
    23e0:	ldr	x27, [x24, #16]
    23e4:	ldr	x25, [x22, #16]
    23e8:	cmp	w20, #0x1
    23ec:	b.eq	21d8 <_gcry_mpi_tdiv_qr+0x214>  // b.none
    23f0:	add	x28, x25, w20, sxtw #3
    23f4:	mov	w3, #0x0                   	// #0
    23f8:	b	2068 <_gcry_mpi_tdiv_qr+0xa4>
    23fc:	ldp	x27, x28, [sp, #80]
    2400:	b	238c <_gcry_mpi_tdiv_qr+0x3c8>
    2404:	nop
	...

0000000000002410 <_gcry_mpi_fdiv_qr>:
    2410:	stp	x29, x30, [sp, #-64]!
    2414:	mov	x29, sp
    2418:	stp	x19, x20, [sp, #16]
    241c:	stp	x21, x22, [sp, #32]
    2420:	stp	x23, x24, [sp, #48]
    2424:	mov	x24, x0
    2428:	mov	x20, x1
    242c:	mov	x21, x2
    2430:	mov	x19, x3
    2434:	ldr	w23, [x3, #8]
    2438:	cmp	x3, x0
    243c:	ccmp	x3, x1, #0x4, ne  // ne = any
    2440:	b.eq	24a0 <_gcry_mpi_fdiv_qr+0x90>  // b.none
    2444:	bl	1fc4 <_gcry_mpi_tdiv_qr>
    2448:	ldr	w0, [x21, #8]
    244c:	cmp	w23, w0
    2450:	b.eq	248c <_gcry_mpi_fdiv_qr+0x7c>  // b.none
    2454:	ldr	w0, [x20, #4]
    2458:	cbz	w0, 248c <_gcry_mpi_fdiv_qr+0x7c>
    245c:	mov	x22, #0x0                   	// #0
    2460:	mov	x2, #0x1                   	// #1
    2464:	mov	x1, x24
    2468:	mov	x0, x24
    246c:	bl	1498 <gcry_mpi_sub_ui>
    2470:	mov	x2, x19
    2474:	mov	x1, x20
    2478:	mov	x0, x20
    247c:	bl	1170 <gcry_mpi_add>
    2480:	cbz	x22, 248c <_gcry_mpi_fdiv_qr+0x7c>
    2484:	mov	x0, x22
    2488:	bl	274 <_gcry_mpi_free>
    248c:	ldp	x19, x20, [sp, #16]
    2490:	ldp	x21, x22, [sp, #32]
    2494:	ldp	x23, x24, [sp, #48]
    2498:	ldp	x29, x30, [sp], #64
    249c:	ret
    24a0:	mov	x0, x3
    24a4:	bl	398 <_gcry_mpi_copy>
    24a8:	mov	x22, x0
    24ac:	mov	x3, x0
    24b0:	mov	x2, x21
    24b4:	mov	x1, x20
    24b8:	mov	x0, x24
    24bc:	bl	1fc4 <_gcry_mpi_tdiv_qr>
    24c0:	ldr	w0, [x21, #8]
    24c4:	cmp	w0, w23
    24c8:	b.eq	2480 <_gcry_mpi_fdiv_qr+0x70>  // b.none
    24cc:	ldr	w0, [x20, #4]
    24d0:	mov	x19, x22
    24d4:	cbz	w0, 2480 <_gcry_mpi_fdiv_qr+0x70>
    24d8:	b	2460 <_gcry_mpi_fdiv_qr+0x50>

00000000000024dc <_gcry_mpi_fdiv_q>:
    24dc:	stp	x29, x30, [sp, #-48]!
    24e0:	mov	x29, sp
    24e4:	stp	x19, x20, [sp, #16]
    24e8:	stp	x21, x22, [sp, #32]
    24ec:	mov	x20, x0
    24f0:	mov	x21, x1
    24f4:	mov	x22, x2
    24f8:	ldr	w0, [x0, #4]
    24fc:	bl	6c <_gcry_mpi_alloc>
    2500:	mov	x19, x0
    2504:	mov	x3, x22
    2508:	mov	x2, x21
    250c:	mov	x1, x0
    2510:	mov	x0, x20
    2514:	bl	2410 <_gcry_mpi_fdiv_qr>
    2518:	mov	x0, x19
    251c:	bl	274 <_gcry_mpi_free>
    2520:	ldp	x19, x20, [sp, #16]
    2524:	ldp	x21, x22, [sp, #32]
    2528:	ldp	x29, x30, [sp], #48
    252c:	ret

0000000000002530 <_gcry_mpi_tdiv_r>:
    2530:	stp	x29, x30, [sp, #-16]!
    2534:	mov	x29, sp
    2538:	mov	x3, x2
    253c:	mov	x2, x1
    2540:	mov	x1, x0
    2544:	mov	x0, #0x0                   	// #0
    2548:	bl	1fc4 <_gcry_mpi_tdiv_qr>
    254c:	ldp	x29, x30, [sp], #16
    2550:	ret

0000000000002554 <_gcry_mpi_fdiv_r>:
    2554:	stp	x29, x30, [sp, #-64]!
    2558:	mov	x29, sp
    255c:	stp	x19, x20, [sp, #16]
    2560:	stp	x21, x22, [sp, #32]
    2564:	str	x23, [sp, #48]
    2568:	mov	x20, x0
    256c:	mov	x21, x1
    2570:	mov	x19, x2
    2574:	ldr	w23, [x2, #8]
    2578:	cmp	x2, x0
    257c:	b.eq	25dc <_gcry_mpi_fdiv_r+0x88>  // b.none
    2580:	bl	2530 <_gcry_mpi_tdiv_r>
    2584:	cmp	w23, #0x0
    2588:	cset	w1, ne  // ne = any
    258c:	ldr	w0, [x21, #8]
    2590:	cmp	w0, #0x0
    2594:	cset	w0, ne  // ne = any
    2598:	cmp	w0, w1, uxtb
    259c:	b.eq	25c8 <_gcry_mpi_fdiv_r+0x74>  // b.none
    25a0:	ldr	w0, [x20, #4]
    25a4:	mov	x22, #0x0                   	// #0
    25a8:	cbz	w0, 25c8 <_gcry_mpi_fdiv_r+0x74>
    25ac:	mov	x2, x19
    25b0:	mov	x1, x20
    25b4:	mov	x0, x20
    25b8:	bl	1170 <gcry_mpi_add>
    25bc:	cbz	x22, 25c8 <_gcry_mpi_fdiv_r+0x74>
    25c0:	mov	x0, x22
    25c4:	bl	274 <_gcry_mpi_free>
    25c8:	ldp	x19, x20, [sp, #16]
    25cc:	ldp	x21, x22, [sp, #32]
    25d0:	ldr	x23, [sp, #48]
    25d4:	ldp	x29, x30, [sp], #64
    25d8:	ret
    25dc:	mov	x0, x2
    25e0:	bl	398 <_gcry_mpi_copy>
    25e4:	mov	x22, x0
    25e8:	mov	x2, x0
    25ec:	mov	x1, x21
    25f0:	mov	x0, x20
    25f4:	bl	2530 <_gcry_mpi_tdiv_r>
    25f8:	cmp	w23, #0x0
    25fc:	cset	w1, ne  // ne = any
    2600:	ldr	w0, [x21, #8]
    2604:	cmp	w0, #0x0
    2608:	cset	w0, ne  // ne = any
    260c:	cmp	w0, w1, uxtb
    2610:	b.eq	25bc <_gcry_mpi_fdiv_r+0x68>  // b.none
    2614:	ldr	w0, [x20, #4]
    2618:	cbz	w0, 25bc <_gcry_mpi_fdiv_r+0x68>
    261c:	mov	x19, x22
    2620:	b	25ac <_gcry_mpi_fdiv_r+0x58>

0000000000002624 <_gcry_mpi_tdiv_q_2exp>:
    2624:	stp	x29, x30, [sp, #-64]!
    2628:	mov	x29, sp
    262c:	stp	x19, x20, [sp, #16]
    2630:	stp	x21, x22, [sp, #32]
    2634:	mov	x22, x0
    2638:	ldr	w19, [x1, #4]
    263c:	cmp	w19, w2, lsr #6
    2640:	b.gt	264c <_gcry_mpi_tdiv_q_2exp+0x28>
    2644:	str	wzr, [x0, #4]
    2648:	b	2694 <_gcry_mpi_tdiv_q_2exp+0x70>
    264c:	str	x23, [sp, #48]
    2650:	mov	x21, x1
    2654:	mov	w20, w2
    2658:	lsr	w23, w2, #6
    265c:	sub	w19, w19, w23
    2660:	ldr	w0, [x0]
    2664:	cmp	w0, w19
    2668:	b.lt	26a4 <_gcry_mpi_tdiv_q_2exp+0x80>  // b.tstop
    266c:	ands	w3, w20, #0x3f
    2670:	b.ne	26b4 <_gcry_mpi_tdiv_q_2exp+0x90>  // b.any
    2674:	mov	w1, #0x0                   	// #0
    2678:	cmp	w19, #0x0
    267c:	b.le	268c <_gcry_mpi_tdiv_q_2exp+0x68>
    2680:	add	w1, w1, #0x1
    2684:	cmp	w19, w1
    2688:	b.ne	2680 <_gcry_mpi_tdiv_q_2exp+0x5c>  // b.any
    268c:	str	w19, [x22, #4]
    2690:	ldr	x23, [sp, #48]
    2694:	ldp	x19, x20, [sp, #16]
    2698:	ldp	x21, x22, [sp, #32]
    269c:	ldp	x29, x30, [sp], #64
    26a0:	ret
    26a4:	mov	w1, w19
    26a8:	mov	x0, x22
    26ac:	bl	198 <_gcry_mpi_resize>
    26b0:	b	266c <_gcry_mpi_tdiv_q_2exp+0x48>
    26b4:	ldr	x20, [x22, #16]
    26b8:	ldr	x1, [x21, #16]
    26bc:	mov	w2, w19
    26c0:	add	x1, x1, w23, sxtw #3
    26c4:	mov	x0, x20
    26c8:	bl	686c <_gcry_mpih_rshift>
    26cc:	add	x20, x20, w19, sxtw #3
    26d0:	ldur	x0, [x20, #-8]
    26d4:	cmp	x0, #0x0
    26d8:	cset	w0, eq  // eq = none
    26dc:	sub	w19, w19, w0
    26e0:	b	268c <_gcry_mpi_tdiv_q_2exp+0x68>

00000000000026e4 <_gcry_mpi_divisible_ui>:
    26e4:	stp	x29, x30, [sp, #-16]!
    26e8:	mov	x29, sp
    26ec:	mov	x2, x1
    26f0:	ldr	w1, [x0, #4]
    26f4:	ldr	x0, [x0, #16]
    26f8:	bl	4db8 <_gcry_mpih_mod_1>
    26fc:	cmp	x0, #0x0
    2700:	cset	w0, eq  // eq = none
    2704:	ldp	x29, x30, [sp], #16
    2708:	ret

000000000000270c <gcry_mpi_div>:
    270c:	stp	x29, x30, [sp, #-48]!
    2710:	mov	x29, sp
    2714:	stp	x19, x20, [sp, #16]
    2718:	stp	x21, x22, [sp, #32]
    271c:	mov	x19, x0
    2720:	mov	x0, x1
    2724:	mov	x20, x2
    2728:	mov	x21, x3
    272c:	cbnz	w4, 2778 <gcry_mpi_div+0x6c>
    2730:	cbz	x1, 274c <gcry_mpi_div+0x40>
    2734:	mov	x0, x19
    2738:	bl	1fc4 <_gcry_mpi_tdiv_qr>
    273c:	ldp	x19, x20, [sp, #16]
    2740:	ldp	x21, x22, [sp, #32]
    2744:	ldp	x29, x30, [sp], #48
    2748:	ret
    274c:	ldr	w0, [x19, #4]
    2750:	bl	6c <_gcry_mpi_alloc>
    2754:	mov	x22, x0
    2758:	mov	x3, x21
    275c:	mov	x2, x20
    2760:	mov	x1, x0
    2764:	mov	x0, x19
    2768:	bl	1fc4 <_gcry_mpi_tdiv_qr>
    276c:	mov	x0, x22
    2770:	bl	274 <_gcry_mpi_free>
    2774:	b	273c <gcry_mpi_div+0x30>
    2778:	tbz	w4, #31, 27b4 <gcry_mpi_div+0xa8>
    277c:	cbz	x1, 2790 <gcry_mpi_div+0x84>
    2780:	cbz	x19, 27a4 <gcry_mpi_div+0x98>
    2784:	mov	x0, x19
    2788:	bl	2410 <_gcry_mpi_fdiv_qr>
    278c:	b	273c <gcry_mpi_div+0x30>
    2790:	mov	x2, x3
    2794:	mov	x1, x20
    2798:	mov	x0, x19
    279c:	bl	24dc <_gcry_mpi_fdiv_q>
    27a0:	b	273c <gcry_mpi_div+0x30>
    27a4:	mov	x2, x3
    27a8:	mov	x1, x20
    27ac:	bl	2554 <_gcry_mpi_fdiv_r>
    27b0:	b	273c <gcry_mpi_div+0x30>
    27b4:	adrp	x0, 0 <_gcry_mpi_m_check>
    27b8:	ldr	x0, [x0]
    27bc:	bl	6d00 <_gcry_log_bug>
	...

00000000000027c8 <gcry_mpi_cmp_ui>:
    27c8:	stp	x29, x30, [sp, #-32]!
    27cc:	mov	x29, sp
    27d0:	stp	x19, x20, [sp, #16]
    27d4:	mov	x19, x0
    27d8:	mov	x20, x1
    27dc:	bl	8a0 <_gcry_mpi_normalize>
    27e0:	ldr	w0, [x19, #4]
    27e4:	cbz	w0, 2810 <gcry_mpi_cmp_ui+0x48>
    27e8:	ldr	w1, [x19, #8]
    27ec:	cbnz	w1, 2824 <gcry_mpi_cmp_ui+0x5c>
    27f0:	cmp	w0, #0x1
    27f4:	b.ne	282c <gcry_mpi_cmp_ui+0x64>  // b.any
    27f8:	ldr	x1, [x19, #16]
    27fc:	ldr	x1, [x1]
    2800:	cmp	x1, x20
    2804:	b.hi	2818 <gcry_mpi_cmp_ui+0x50>  // b.pmore
    2808:	csetm	w0, cc  // cc = lo, ul, last
    280c:	b	2818 <gcry_mpi_cmp_ui+0x50>
    2810:	cmp	x20, #0x0
    2814:	csetm	w0, ne  // ne = any
    2818:	ldp	x19, x20, [sp, #16]
    281c:	ldp	x29, x30, [sp], #32
    2820:	ret
    2824:	mov	w0, #0xffffffff            	// #-1
    2828:	b	2818 <gcry_mpi_cmp_ui+0x50>
    282c:	mov	w0, #0x1                   	// #1
    2830:	b	2818 <gcry_mpi_cmp_ui+0x50>

0000000000002834 <gcry_mpi_cmp>:
    2834:	stp	x29, x30, [sp, #-32]!
    2838:	mov	x29, sp
    283c:	stp	x19, x20, [sp, #16]
    2840:	mov	x20, x0
    2844:	mov	x19, x1
    2848:	cbz	x0, 2854 <gcry_mpi_cmp+0x20>
    284c:	ldr	w0, [x0, #12]
    2850:	tbnz	w0, #2, 2970 <gcry_mpi_cmp+0x13c>
    2854:	cbz	x19, 2898 <gcry_mpi_cmp+0x64>
    2858:	ldr	w0, [x19, #12]
    285c:	tbz	w0, #2, 2898 <gcry_mpi_cmp+0x64>
    2860:	cbnz	x20, 29ac <gcry_mpi_cmp+0x178>
    2864:	ldr	w1, [x19, #12]
    2868:	mov	w0, #0x1                   	// #1
    286c:	tbz	w1, #2, 297c <gcry_mpi_cmp+0x148>
    2870:	b	29a0 <gcry_mpi_cmp+0x16c>
    2874:	add	w2, w1, #0xe
    2878:	adds	w1, w1, #0x7
    287c:	csel	w1, w2, w1, mi  // mi = first
    2880:	asr	w2, w1, #3
    2884:	sxtw	x2, w2
    2888:	ldr	x1, [x19, #16]
    288c:	ldr	x0, [x20, #16]
    2890:	bl	0 <grub_memcmp>
    2894:	b	29a0 <gcry_mpi_cmp+0x16c>
    2898:	mov	x0, x20
    289c:	bl	8a0 <_gcry_mpi_normalize>
    28a0:	mov	x0, x19
    28a4:	bl	8a0 <_gcry_mpi_normalize>
    28a8:	ldr	w0, [x20, #4]
    28ac:	ldr	w1, [x19, #4]
    28b0:	ldr	w2, [x20, #8]
    28b4:	cbnz	w2, 28d4 <gcry_mpi_cmp+0xa0>
    28b8:	ldr	w2, [x19, #8]
    28bc:	cbnz	w2, 2950 <gcry_mpi_cmp+0x11c>
    28c0:	mov	w5, #0x0                   	// #0
    28c4:	cmp	w0, w1
    28c8:	b.eq	28f0 <gcry_mpi_cmp+0xbc>  // b.none
    28cc:	sub	w0, w0, w1
    28d0:	b	29a0 <gcry_mpi_cmp+0x16c>
    28d4:	ldr	w2, [x19, #8]
    28d8:	cbz	w2, 2958 <gcry_mpi_cmp+0x124>
    28dc:	mov	w5, #0x1                   	// #1
    28e0:	cmp	w0, w1
    28e4:	b.eq	28f0 <gcry_mpi_cmp+0xbc>  // b.none
    28e8:	add	w0, w0, w1
    28ec:	b	29a0 <gcry_mpi_cmp+0x16c>
    28f0:	cbz	w0, 29a0 <gcry_mpi_cmp+0x16c>
    28f4:	ldr	x3, [x20, #16]
    28f8:	ldr	x4, [x19, #16]
    28fc:	subs	w0, w0, #0x1
    2900:	b.mi	2960 <gcry_mpi_cmp+0x12c>  // b.first
    2904:	sxtw	x0, w0
    2908:	ldr	x2, [x3, x0, lsl #3]
    290c:	ldr	x1, [x4, x0, lsl #3]
    2910:	cmp	x2, x1
    2914:	b.ne	2928 <gcry_mpi_cmp+0xf4>  // b.any
    2918:	sub	x0, x0, #0x1
    291c:	tbz	w0, #31, 2908 <gcry_mpi_cmp+0xd4>
    2920:	mov	w0, #0x0                   	// #0
    2924:	b	29a0 <gcry_mpi_cmp+0x16c>
    2928:	mov	w0, #0xffffffff            	// #-1
    292c:	cneg	w1, w0, hi  // hi = pmore
    2930:	mov	w0, #0x1                   	// #1
    2934:	cmp	w5, w1, lsr #31
    2938:	cneg	w0, w0, ne  // ne = any
    293c:	b	29a0 <gcry_mpi_cmp+0x16c>
    2940:	mov	w0, #0xffffffff            	// #-1
    2944:	b	29a0 <gcry_mpi_cmp+0x16c>
    2948:	mov	w0, #0xffffffff            	// #-1
    294c:	b	29a0 <gcry_mpi_cmp+0x16c>
    2950:	mov	w0, #0x1                   	// #1
    2954:	b	29a0 <gcry_mpi_cmp+0x16c>
    2958:	mov	w0, #0xffffffff            	// #-1
    295c:	b	29a0 <gcry_mpi_cmp+0x16c>
    2960:	mov	w0, #0x0                   	// #0
    2964:	b	29a0 <gcry_mpi_cmp+0x16c>
    2968:	mov	w0, #0xffffffff            	// #-1
    296c:	b	29a0 <gcry_mpi_cmp+0x16c>
    2970:	cbz	x1, 2968 <gcry_mpi_cmp+0x134>
    2974:	ldr	w0, [x19, #12]
    2978:	tbz	w0, #2, 2940 <gcry_mpi_cmp+0x10c>
    297c:	ldr	w1, [x20, #8]
    2980:	cbnz	w1, 298c <gcry_mpi_cmp+0x158>
    2984:	ldr	w0, [x19, #8]
    2988:	cbz	w0, 29a0 <gcry_mpi_cmp+0x16c>
    298c:	ldr	w2, [x19, #8]
    2990:	cmp	w1, w2
    2994:	b.lt	2948 <gcry_mpi_cmp+0x114>  // b.tstop
    2998:	mov	w0, #0x1                   	// #1
    299c:	b.le	2874 <gcry_mpi_cmp+0x40>
    29a0:	ldp	x19, x20, [sp, #16]
    29a4:	ldp	x29, x30, [sp], #32
    29a8:	ret
    29ac:	ldr	w0, [x20, #12]
    29b0:	tbnz	w0, #2, 2974 <gcry_mpi_cmp+0x140>
    29b4:	cbz	x19, 297c <gcry_mpi_cmp+0x148>
    29b8:	b	2864 <gcry_mpi_cmp+0x30>

00000000000029bc <gcry_mpi_invm>:
    29bc:	stp	x29, x30, [sp, #-128]!
    29c0:	mov	x29, sp
    29c4:	stp	x19, x20, [sp, #16]
    29c8:	stp	x21, x22, [sp, #32]
    29cc:	stp	x23, x24, [sp, #48]
    29d0:	stp	x25, x26, [sp, #64]
    29d4:	stp	x27, x28, [sp, #80]
    29d8:	str	x0, [sp, #120]
    29dc:	mov	x0, x1
    29e0:	mov	x20, x2
    29e4:	bl	398 <_gcry_mpi_copy>
    29e8:	mov	x19, x0
    29ec:	mov	x0, x20
    29f0:	bl	398 <_gcry_mpi_copy>
    29f4:	mov	x20, x0
    29f8:	mov	w21, #0x1                   	// #1
    29fc:	mov	w1, #0x0                   	// #0
    2a00:	mov	x0, x19
    2a04:	bl	998 <gcry_mpi_test_bit>
    2a08:	cbnz	w0, 2a40 <gcry_mpi_invm+0x84>
    2a0c:	mov	w1, #0x0                   	// #0
    2a10:	mov	x0, x20
    2a14:	bl	998 <gcry_mpi_test_bit>
    2a18:	cbnz	w0, 2a40 <gcry_mpi_invm+0x84>
    2a1c:	mov	w2, w21
    2a20:	mov	x1, x19
    2a24:	mov	x0, x19
    2a28:	bl	ba4 <gcry_mpi_rshift>
    2a2c:	mov	w2, w21
    2a30:	mov	x1, x20
    2a34:	mov	x0, x20
    2a38:	bl	ba4 <gcry_mpi_rshift>
    2a3c:	b	29fc <gcry_mpi_invm+0x40>
    2a40:	mov	w1, #0x0                   	// #0
    2a44:	mov	x0, x20
    2a48:	bl	998 <gcry_mpi_test_bit>
    2a4c:	mov	w23, w0
    2a50:	mov	x0, #0x1                   	// #1
    2a54:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2a58:	mov	x24, x0
    2a5c:	cbz	w23, 2bd0 <gcry_mpi_invm+0x214>
    2a60:	mov	x0, x19
    2a64:	bl	398 <_gcry_mpi_copy>
    2a68:	str	x0, [sp, #96]
    2a6c:	mov	x0, x20
    2a70:	bl	398 <_gcry_mpi_copy>
    2a74:	mov	x26, x0
    2a78:	mov	x0, x20
    2a7c:	bl	398 <_gcry_mpi_copy>
    2a80:	mov	x27, x0
    2a84:	mov	w1, #0x0                   	// #0
    2a88:	mov	x0, x19
    2a8c:	bl	998 <gcry_mpi_test_bit>
    2a90:	cbnz	w0, 2c44 <gcry_mpi_invm+0x288>
    2a94:	mov	x0, #0x1                   	// #1
    2a98:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2a9c:	mov	x21, x0
    2aa0:	str	xzr, [sp, #112]
    2aa4:	str	xzr, [sp, #104]
    2aa8:	mov	x25, #0x0                   	// #0
    2aac:	mov	x0, x19
    2ab0:	bl	398 <_gcry_mpi_copy>
    2ab4:	mov	x22, x0
    2ab8:	cbnz	w23, 2b9c <gcry_mpi_invm+0x1e0>
    2abc:	mov	w1, #0x0                   	// #0
    2ac0:	mov	x0, x21
    2ac4:	bl	998 <gcry_mpi_test_bit>
    2ac8:	cbnz	w0, 2adc <gcry_mpi_invm+0x120>
    2acc:	mov	w1, #0x0                   	// #0
    2ad0:	mov	x0, x25
    2ad4:	bl	998 <gcry_mpi_test_bit>
    2ad8:	cbz	w0, 2afc <gcry_mpi_invm+0x140>
    2adc:	mov	x2, x20
    2ae0:	mov	x1, x21
    2ae4:	mov	x0, x21
    2ae8:	bl	1170 <gcry_mpi_add>
    2aec:	mov	x2, x19
    2af0:	mov	x1, x25
    2af4:	mov	x0, x25
    2af8:	bl	1644 <gcry_mpi_sub>
    2afc:	mov	w2, #0x1                   	// #1
    2b00:	mov	x1, x21
    2b04:	mov	x0, x21
    2b08:	bl	ba4 <gcry_mpi_rshift>
    2b0c:	mov	w2, #0x1                   	// #1
    2b10:	mov	x1, x25
    2b14:	mov	x0, x25
    2b18:	bl	ba4 <gcry_mpi_rshift>
    2b1c:	mov	w2, #0x1                   	// #1
    2b20:	mov	x1, x22
    2b24:	mov	x0, x22
    2b28:	bl	ba4 <gcry_mpi_rshift>
    2b2c:	mov	w1, #0x0                   	// #0
    2b30:	mov	x0, x22
    2b34:	bl	998 <gcry_mpi_test_bit>
    2b38:	cbz	w0, 2ab8 <gcry_mpi_invm+0xfc>
    2b3c:	ldr	w0, [x22, #8]
    2b40:	cbnz	w0, 2ca0 <gcry_mpi_invm+0x2e4>
    2b44:	mov	x1, x21
    2b48:	mov	x0, x24
    2b4c:	bl	55c <gcry_mpi_set>
    2b50:	cbz	w23, 2c90 <gcry_mpi_invm+0x2d4>
    2b54:	mov	x1, x22
    2b58:	ldr	x0, [sp, #96]
    2b5c:	bl	55c <gcry_mpi_set>
    2b60:	mov	x2, x26
    2b64:	mov	x1, x24
    2b68:	mov	x0, x21
    2b6c:	bl	1644 <gcry_mpi_sub>
    2b70:	cbz	w23, 2d00 <gcry_mpi_invm+0x344>
    2b74:	mov	x2, x27
    2b78:	ldr	x1, [sp, #96]
    2b7c:	mov	x0, x22
    2b80:	bl	1644 <gcry_mpi_sub>
    2b84:	ldr	w0, [x21, #8]
    2b88:	cbnz	w0, 2d78 <gcry_mpi_invm+0x3bc>
    2b8c:	mov	x1, #0x0                   	// #0
    2b90:	mov	x0, x22
    2b94:	bl	27c8 <gcry_mpi_cmp_ui>
    2b98:	cbz	w0, 2df0 <gcry_mpi_invm+0x434>
    2b9c:	mov	w1, #0x0                   	// #0
    2ba0:	mov	x0, x21
    2ba4:	bl	998 <gcry_mpi_test_bit>
    2ba8:	cbnz	w0, 2c7c <gcry_mpi_invm+0x2c0>
    2bac:	mov	w2, #0x1                   	// #1
    2bb0:	mov	x1, x21
    2bb4:	mov	x0, x21
    2bb8:	bl	ba4 <gcry_mpi_rshift>
    2bbc:	mov	w2, #0x1                   	// #1
    2bc0:	mov	x1, x22
    2bc4:	mov	x0, x22
    2bc8:	bl	ba4 <gcry_mpi_rshift>
    2bcc:	b	2b2c <gcry_mpi_invm+0x170>
    2bd0:	mov	x0, #0x0                   	// #0
    2bd4:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2bd8:	str	x0, [sp, #104]
    2bdc:	mov	x0, x19
    2be0:	bl	398 <_gcry_mpi_copy>
    2be4:	str	x0, [sp, #96]
    2be8:	mov	x0, x20
    2bec:	bl	398 <_gcry_mpi_copy>
    2bf0:	mov	x26, x0
    2bf4:	ldr	w0, [x19, #4]
    2bf8:	bl	6c <_gcry_mpi_alloc>
    2bfc:	str	x0, [sp, #112]
    2c00:	mov	x2, x19
    2c04:	mov	x1, x24
    2c08:	bl	1644 <gcry_mpi_sub>
    2c0c:	mov	x0, x20
    2c10:	bl	398 <_gcry_mpi_copy>
    2c14:	mov	x27, x0
    2c18:	mov	w1, #0x0                   	// #0
    2c1c:	mov	x0, x19
    2c20:	bl	998 <gcry_mpi_test_bit>
    2c24:	cbnz	w0, 2e60 <gcry_mpi_invm+0x4a4>
    2c28:	mov	x0, #0x1                   	// #1
    2c2c:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2c30:	mov	x21, x0
    2c34:	mov	x0, #0x0                   	// #0
    2c38:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2c3c:	mov	x25, x0
    2c40:	b	2aac <gcry_mpi_invm+0xf0>
    2c44:	mov	x0, #0x0                   	// #0
    2c48:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2c4c:	mov	x21, x0
    2c50:	str	xzr, [sp, #112]
    2c54:	str	xzr, [sp, #104]
    2c58:	mov	x25, #0x0                   	// #0
    2c5c:	mov	x0, x20
    2c60:	bl	398 <_gcry_mpi_copy>
    2c64:	mov	x22, x0
    2c68:	ldr	w0, [x0, #8]
    2c6c:	cmp	w0, #0x0
    2c70:	cset	w0, eq  // eq = none
    2c74:	str	w0, [x22, #8]
    2c78:	b	2b2c <gcry_mpi_invm+0x170>
    2c7c:	mov	x2, x20
    2c80:	mov	x1, x21
    2c84:	mov	x0, x21
    2c88:	bl	1170 <gcry_mpi_add>
    2c8c:	b	2bac <gcry_mpi_invm+0x1f0>
    2c90:	mov	x1, x25
    2c94:	ldr	x0, [sp, #104]
    2c98:	bl	55c <gcry_mpi_set>
    2c9c:	b	2b54 <gcry_mpi_invm+0x198>
    2ca0:	mov	x2, x21
    2ca4:	mov	x1, x20
    2ca8:	mov	x0, x26
    2cac:	bl	1644 <gcry_mpi_sub>
    2cb0:	ldr	w28, [x19, #8]
    2cb4:	cmp	w28, #0x0
    2cb8:	cset	w0, eq  // eq = none
    2cbc:	str	w0, [x19, #8]
    2cc0:	cbz	w23, 2cec <gcry_mpi_invm+0x330>
    2cc4:	str	w28, [x19, #8]
    2cc8:	ldr	w28, [x22, #8]
    2ccc:	cmp	w28, #0x0
    2cd0:	cset	w0, eq  // eq = none
    2cd4:	str	w0, [x22, #8]
    2cd8:	mov	x1, x22
    2cdc:	mov	x0, x27
    2ce0:	bl	55c <gcry_mpi_set>
    2ce4:	str	w28, [x22, #8]
    2ce8:	b	2b60 <gcry_mpi_invm+0x1a4>
    2cec:	mov	x2, x25
    2cf0:	mov	x1, x19
    2cf4:	ldr	x0, [sp, #112]
    2cf8:	bl	1644 <gcry_mpi_sub>
    2cfc:	b	2cc4 <gcry_mpi_invm+0x308>
    2d00:	ldr	x2, [sp, #112]
    2d04:	ldr	x1, [sp, #104]
    2d08:	mov	x0, x25
    2d0c:	bl	1644 <gcry_mpi_sub>
    2d10:	mov	x2, x27
    2d14:	ldr	x1, [sp, #96]
    2d18:	mov	x0, x22
    2d1c:	bl	1644 <gcry_mpi_sub>
    2d20:	ldr	w0, [x21, #8]
    2d24:	cbnz	w0, 2dc0 <gcry_mpi_invm+0x404>
    2d28:	mov	x1, #0x0                   	// #0
    2d2c:	mov	x0, x22
    2d30:	bl	27c8 <gcry_mpi_cmp_ui>
    2d34:	cbnz	w0, 2ab8 <gcry_mpi_invm+0xfc>
    2d38:	mov	x1, x24
    2d3c:	ldr	x0, [sp, #120]
    2d40:	bl	55c <gcry_mpi_set>
    2d44:	mov	x0, x24
    2d48:	bl	274 <_gcry_mpi_free>
    2d4c:	mov	x0, x26
    2d50:	bl	274 <_gcry_mpi_free>
    2d54:	mov	x0, x21
    2d58:	bl	274 <_gcry_mpi_free>
    2d5c:	ldr	x0, [sp, #104]
    2d60:	bl	274 <_gcry_mpi_free>
    2d64:	ldr	x0, [sp, #112]
    2d68:	bl	274 <_gcry_mpi_free>
    2d6c:	mov	x0, x25
    2d70:	bl	274 <_gcry_mpi_free>
    2d74:	b	2e18 <gcry_mpi_invm+0x45c>
    2d78:	mov	x2, x20
    2d7c:	mov	x1, x21
    2d80:	mov	x0, x21
    2d84:	bl	1170 <gcry_mpi_add>
    2d88:	mov	x1, #0x0                   	// #0
    2d8c:	mov	x0, x22
    2d90:	bl	27c8 <gcry_mpi_cmp_ui>
    2d94:	cbnz	w0, 2b9c <gcry_mpi_invm+0x1e0>
    2d98:	mov	x1, x24
    2d9c:	ldr	x0, [sp, #120]
    2da0:	bl	55c <gcry_mpi_set>
    2da4:	mov	x0, x24
    2da8:	bl	274 <_gcry_mpi_free>
    2dac:	mov	x0, x26
    2db0:	bl	274 <_gcry_mpi_free>
    2db4:	mov	x0, x21
    2db8:	bl	274 <_gcry_mpi_free>
    2dbc:	b	2e18 <gcry_mpi_invm+0x45c>
    2dc0:	mov	x2, x20
    2dc4:	mov	x1, x21
    2dc8:	mov	x0, x21
    2dcc:	bl	1170 <gcry_mpi_add>
    2dd0:	mov	x2, x19
    2dd4:	mov	x1, x25
    2dd8:	mov	x0, x25
    2ddc:	bl	1644 <gcry_mpi_sub>
    2de0:	mov	x1, #0x0                   	// #0
    2de4:	mov	x0, x22
    2de8:	bl	27c8 <gcry_mpi_cmp_ui>
    2dec:	cbnz	w0, 2abc <gcry_mpi_invm+0x100>
    2df0:	mov	x1, x24
    2df4:	ldr	x0, [sp, #120]
    2df8:	bl	55c <gcry_mpi_set>
    2dfc:	mov	x0, x24
    2e00:	bl	274 <_gcry_mpi_free>
    2e04:	mov	x0, x26
    2e08:	bl	274 <_gcry_mpi_free>
    2e0c:	mov	x0, x21
    2e10:	bl	274 <_gcry_mpi_free>
    2e14:	cbz	w23, 2d5c <gcry_mpi_invm+0x3a0>
    2e18:	ldr	x0, [sp, #96]
    2e1c:	bl	274 <_gcry_mpi_free>
    2e20:	mov	x0, x27
    2e24:	bl	274 <_gcry_mpi_free>
    2e28:	mov	x0, x22
    2e2c:	bl	274 <_gcry_mpi_free>
    2e30:	mov	x0, x19
    2e34:	bl	274 <_gcry_mpi_free>
    2e38:	mov	x0, x20
    2e3c:	bl	274 <_gcry_mpi_free>
    2e40:	mov	w0, #0x1                   	// #1
    2e44:	ldp	x19, x20, [sp, #16]
    2e48:	ldp	x21, x22, [sp, #32]
    2e4c:	ldp	x23, x24, [sp, #48]
    2e50:	ldp	x25, x26, [sp, #64]
    2e54:	ldp	x27, x28, [sp, #80]
    2e58:	ldp	x29, x30, [sp], #128
    2e5c:	ret
    2e60:	mov	x0, #0x0                   	// #0
    2e64:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2e68:	mov	x21, x0
    2e6c:	mov	x0, #0x1                   	// #1
    2e70:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    2e74:	mov	x25, x0
    2e78:	mov	w0, #0x1                   	// #1
    2e7c:	str	w0, [x25, #8]
    2e80:	b	2c5c <gcry_mpi_invm+0x2a0>
    2e84:	nop

0000000000002e88 <gcry_mpi_powm>:
    2e88:	stp	x29, x30, [sp, #-256]!
    2e8c:	mov	x29, sp
    2e90:	stp	x19, x20, [sp, #16]
    2e94:	stp	x21, x22, [sp, #32]
    2e98:	stp	x23, x24, [sp, #48]
    2e9c:	stp	x25, x26, [sp, #64]
    2ea0:	stp	x27, x28, [sp, #80]
    2ea4:	mov	x28, x0
    2ea8:	mov	x19, x1
    2eac:	mov	x22, x3
    2eb0:	ldr	w25, [x2, #4]
    2eb4:	ldr	w23, [x3, #4]
    2eb8:	mov	w24, #0x0                   	// #0
    2ebc:	cbz	x1, 2ec8 <gcry_mpi_powm+0x40>
    2ec0:	ldr	w24, [x1, #12]
    2ec4:	and	w24, w24, #0x1
    2ec8:	cbz	w23, 3050 <gcry_mpi_powm+0x1c8>
    2ecc:	cbz	w25, 305c <gcry_mpi_powm+0x1d4>
    2ed0:	ldr	w21, [x22, #12]
    2ed4:	ands	w21, w21, #0x1
    2ed8:	ldr	w0, [x22, #8]
    2edc:	str	w0, [sp, #188]
    2ee0:	ldr	w0, [x2, #12]
    2ee4:	str	w0, [sp, #96]
    2ee8:	ldr	x20, [x28, #16]
    2eec:	ldr	x0, [x2, #16]
    2ef0:	str	x0, [sp, #120]
    2ef4:	csel	w0, w21, w23, eq  // eq = none
    2ef8:	str	w0, [sp, #196]
    2efc:	mov	w1, w21
    2f00:	mov	w0, w23
    2f04:	bl	28 <_gcry_mpi_alloc_limb_space>
    2f08:	str	x0, [sp, #128]
    2f0c:	ldr	x1, [x22, #16]
    2f10:	sxtw	x27, w23
    2f14:	sbfiz	x0, x23, #3, #32
    2f18:	str	x0, [sp, #144]
    2f1c:	add	x0, x1, x0
    2f20:	ldur	x2, [x0, #-8]
    2f24:	cmp	xzr, x2, lsr #56
    2f28:	b.ne	30cc <gcry_mpi_powm+0x244>  // b.any
    2f2c:	mov	x0, #0x30                  	// #48
    2f30:	lsr	x3, x2, x0
    2f34:	tst	w3, #0xff
    2f38:	b.ne	2f44 <gcry_mpi_powm+0xbc>  // b.any
    2f3c:	subs	x0, x0, #0x8
    2f40:	b.ne	2f30 <gcry_mpi_powm+0xa8>  // b.any
    2f44:	mov	w3, #0x40                  	// #64
    2f48:	sub	w3, w3, w0
    2f4c:	adrp	x4, 0 <_gcry_mpi_m_check>
    2f50:	ldr	x4, [x4]
    2f54:	lsr	x0, x2, x0
    2f58:	ldrb	w0, [x4, x0]
    2f5c:	subs	w0, w3, w0
    2f60:	str	w0, [sp, #176]
    2f64:	b.ne	30d4 <gcry_mpi_powm+0x24c>  // b.any
    2f68:	cmp	w23, #0x0
    2f6c:	b.le	2f9c <gcry_mpi_powm+0x114>
    2f70:	sub	w2, w23, #0x1
    2f74:	add	x2, x2, #0x1
    2f78:	lsl	x2, x2, #3
    2f7c:	mov	x0, #0x0                   	// #0
    2f80:	ldr	x3, [sp, #128]
    2f84:	ldr	x1, [x22, #16]
    2f88:	ldr	x1, [x1, x0]
    2f8c:	str	x1, [x3, x0]
    2f90:	add	x0, x0, #0x8
    2f94:	cmp	x0, x2
    2f98:	b.ne	2f84 <gcry_mpi_powm+0xfc>  // b.any
    2f9c:	ldr	w22, [x19, #4]
    2fa0:	ldr	w0, [x19, #8]
    2fa4:	str	w0, [sp, #204]
    2fa8:	cmp	w23, w22
    2fac:	b.ge	30e8 <gcry_mpi_powm+0x260>  // b.tcont
    2fb0:	cmp	w24, #0x0
    2fb4:	csinc	w0, wzr, w22, eq  // eq = none
    2fb8:	str	w0, [sp, #192]
    2fbc:	mov	w1, w24
    2fc0:	add	w0, w22, #0x1
    2fc4:	bl	28 <_gcry_mpi_alloc_limb_space>
    2fc8:	mov	x26, x0
    2fcc:	cmp	w22, #0x0
    2fd0:	b.le	2ffc <gcry_mpi_powm+0x174>
    2fd4:	sub	w2, w22, #0x1
    2fd8:	add	x2, x2, #0x1
    2fdc:	lsl	x2, x2, #3
    2fe0:	mov	x0, #0x0                   	// #0
    2fe4:	ldr	x1, [x19, #16]
    2fe8:	ldr	x1, [x1, x0]
    2fec:	str	x1, [x26, x0]
    2ff0:	add	x0, x0, #0x8
    2ff4:	cmp	x0, x2
    2ff8:	b.ne	2fe4 <gcry_mpi_powm+0x15c>  // b.any
    2ffc:	mov	w5, w23
    3000:	ldr	x4, [sp, #128]
    3004:	mov	w3, w22
    3008:	mov	x2, x26
    300c:	mov	w1, #0x0                   	// #0
    3010:	ldr	x0, [sp, #144]
    3014:	add	x0, x26, x0
    3018:	bl	4fe0 <_gcry_mpih_divrem>
    301c:	cmp	w23, #0x0
    3020:	b.le	3244 <gcry_mpi_powm+0x3bc>
    3024:	mov	x0, x27
    3028:	sub	x2, x26, #0x8
    302c:	mov	w22, w0
    3030:	ldr	x1, [x2, x0, lsl #3]
    3034:	cbnz	x1, 321c <gcry_mpi_powm+0x394>
    3038:	sub	w22, w0, #0x1
    303c:	sub	x0, x0, #0x1
    3040:	cmp	w0, #0x0
    3044:	b.gt	302c <gcry_mpi_powm+0x1a4>
    3048:	str	x26, [sp, #168]
    304c:	b	30f4 <gcry_mpi_powm+0x26c>
    3050:	adrp	x0, 0 <_gcry_mpi_m_check>
    3054:	ldr	x0, [x0]
    3058:	bl	0 <grub_fatal>
    305c:	cmp	w23, #0x1
    3060:	b.eq	30a0 <gcry_mpi_powm+0x218>  // b.none
    3064:	mov	w0, #0x1                   	// #1
    3068:	str	w0, [x28, #4]
    306c:	ldr	w0, [x28]
    3070:	cmp	w0, #0x0
    3074:	b.le	30bc <gcry_mpi_powm+0x234>
    3078:	ldr	x0, [x28, #16]
    307c:	mov	x1, #0x1                   	// #1
    3080:	str	x1, [x0]
    3084:	str	wzr, [x28, #8]
    3088:	str	xzr, [sp, #104]
    308c:	str	wzr, [sp, #184]
    3090:	str	wzr, [sp, #180]
    3094:	str	xzr, [sp, #160]
    3098:	str	xzr, [sp, #152]
    309c:	b	3728 <gcry_mpi_powm+0x8a0>
    30a0:	ldr	x0, [x22, #16]
    30a4:	ldr	x0, [x0]
    30a8:	cmp	x0, #0x1
    30ac:	cset	w1, ne  // ne = any
    30b0:	str	w1, [x28, #4]
    30b4:	b.eq	3084 <gcry_mpi_powm+0x1fc>  // b.none
    30b8:	b	306c <gcry_mpi_powm+0x1e4>
    30bc:	mov	w1, #0x1                   	// #1
    30c0:	mov	x0, x28
    30c4:	bl	198 <_gcry_mpi_resize>
    30c8:	b	3078 <gcry_mpi_powm+0x1f0>
    30cc:	mov	x0, #0x38                  	// #56
    30d0:	b	2f44 <gcry_mpi_powm+0xbc>
    30d4:	ldr	w3, [sp, #176]
    30d8:	mov	w2, w23
    30dc:	ldr	x0, [sp, #128]
    30e0:	bl	3b60 <_gcry_mpih_lshift>
    30e4:	b	2f9c <gcry_mpi_powm+0x114>
    30e8:	ldr	x26, [x19, #16]
    30ec:	str	wzr, [sp, #192]
    30f0:	str	xzr, [sp, #168]
    30f4:	cbz	w22, 3224 <gcry_mpi_powm+0x39c>
    30f8:	cmp	x20, x26
    30fc:	b.eq	3250 <gcry_mpi_powm+0x3c8>  // b.none
    3100:	ldr	w0, [sp, #96]
    3104:	and	w0, w0, #0x1
    3108:	str	w0, [sp, #136]
    310c:	str	wzr, [sp, #180]
    3110:	str	xzr, [sp, #160]
    3114:	ldr	x0, [sp, #120]
    3118:	cmp	x20, x0
    311c:	b.eq	32c8 <gcry_mpi_powm+0x440>  // b.none
    3120:	ldr	x0, [sp, #128]
    3124:	cmp	x20, x0
    3128:	b.eq	3320 <gcry_mpi_powm+0x498>  // b.none
    312c:	lsl	w24, w23, #1
    3130:	ldr	w0, [x28]
    3134:	cmp	w0, w23, lsl #1
    3138:	b.lt	3380 <gcry_mpi_powm+0x4f8>  // b.tstop
    313c:	cmp	w22, #0x0
    3140:	b.le	315c <gcry_mpi_powm+0x2d4>
    3144:	mov	x0, #0x0                   	// #0
    3148:	ldr	x1, [x26, x0, lsl #3]
    314c:	str	x1, [x20, x0, lsl #3]
    3150:	add	x0, x0, #0x1
    3154:	cmp	w22, w0
    3158:	b.gt	3148 <gcry_mpi_powm+0x2c0>
    315c:	add	w0, w24, #0x2
    3160:	cmp	w21, #0x0
    3164:	csel	w0, w0, wzr, ne  // ne = any
    3168:	str	w0, [sp, #184]
    316c:	mov	w1, w21
    3170:	add	w0, w24, #0x2
    3174:	bl	28 <_gcry_mpi_alloc_limb_space>
    3178:	str	x0, [sp, #152]
    317c:	mov	x2, #0x28                  	// #40
    3180:	mov	w1, #0x0                   	// #0
    3184:	add	x0, sp, #0xd8
    3188:	bl	0 <grub_memset>
    318c:	ldr	x0, [sp, #120]
    3190:	ldr	x0, [x0]
    3194:	str	wzr, [sp, #200]
    3198:	tbz	w0, #0, 31ac <gcry_mpi_powm+0x324>
    319c:	ldr	w0, [x19, #8]
    31a0:	cmp	w0, #0x0
    31a4:	cset	w0, ne  // ne = any
    31a8:	str	w0, [sp, #200]
    31ac:	sub	w25, w25, #0x1
    31b0:	ldr	x0, [sp, #120]
    31b4:	ldr	x21, [x0, w25, sxtw #3]
    31b8:	cmp	xzr, x21, lsr #56
    31bc:	b.ne	3394 <gcry_mpi_powm+0x50c>  // b.any
    31c0:	mov	x0, #0x30                  	// #48
    31c4:	lsr	x1, x21, x0
    31c8:	tst	w1, #0xff
    31cc:	b.ne	31d8 <gcry_mpi_powm+0x350>  // b.any
    31d0:	subs	x0, x0, #0x8
    31d4:	b.ne	31c4 <gcry_mpi_powm+0x33c>  // b.any
    31d8:	mov	w24, #0x40                  	// #64
    31dc:	sub	w24, w24, w0
    31e0:	adrp	x1, 0 <_gcry_mpi_m_check>
    31e4:	ldr	x1, [x1]
    31e8:	lsr	x0, x21, x0
    31ec:	ldrb	w0, [x1, x0]
    31f0:	sub	w0, w24, w0
    31f4:	lsl	x21, x21, x0
    31f8:	lsl	x21, x21, #1
    31fc:	mov	w24, #0x3f                  	// #63
    3200:	sub	w24, w24, w0
    3204:	ldr	x0, [sp, #152]
    3208:	str	x0, [sp, #96]
    320c:	mov	w19, w22
    3210:	str	wzr, [sp, #140]
    3214:	str	xzr, [sp, #104]
    3218:	b	344c <gcry_mpi_powm+0x5c4>
    321c:	str	x26, [sp, #168]
    3220:	b	30f4 <gcry_mpi_powm+0x26c>
    3224:	str	wzr, [x28, #4]
    3228:	str	wzr, [x28, #8]
    322c:	str	xzr, [sp, #104]
    3230:	str	wzr, [sp, #184]
    3234:	str	wzr, [sp, #180]
    3238:	str	xzr, [sp, #152]
    323c:	str	xzr, [sp, #160]
    3240:	b	3708 <gcry_mpi_powm+0x880>
    3244:	str	x26, [sp, #168]
    3248:	mov	w22, w23
    324c:	b	30f8 <gcry_mpi_powm+0x270>
    3250:	ldr	x0, [sp, #168]
    3254:	cbnz	x0, 32a0 <gcry_mpi_powm+0x418>
    3258:	cmp	w24, #0x0
    325c:	csel	w0, w24, w22, eq  // eq = none
    3260:	str	w0, [sp, #192]
    3264:	mov	w1, w24
    3268:	mov	w0, w22
    326c:	bl	28 <_gcry_mpi_alloc_limb_space>
    3270:	mov	x2, x0
    3274:	str	x0, [sp, #168]
    3278:	cmp	w22, #0x0
    327c:	b.le	32c0 <gcry_mpi_powm+0x438>
    3280:	mov	x0, #0x0                   	// #0
    3284:	ldr	x1, [x26, x0, lsl #3]
    3288:	str	x1, [x2, x0, lsl #3]
    328c:	add	x0, x0, #0x1
    3290:	cmp	w22, w0
    3294:	b.gt	3284 <gcry_mpi_powm+0x3fc>
    3298:	ldr	x26, [sp, #168]
    329c:	b	3100 <gcry_mpi_powm+0x278>
    32a0:	adrp	x0, 0 <_gcry_mpi_m_check>
    32a4:	ldr	x3, [x0]
    32a8:	mov	w2, #0x91                  	// #145
    32ac:	adrp	x0, 0 <_gcry_mpi_m_check>
    32b0:	ldr	x1, [x0]
    32b4:	adrp	x0, 0 <_gcry_mpi_m_check>
    32b8:	ldr	x0, [x0]
    32bc:	bl	0 <_gcry_assert_failed>
    32c0:	ldr	x26, [sp, #168]
    32c4:	b	3100 <gcry_mpi_powm+0x278>
    32c8:	ldr	w1, [sp, #136]
    32cc:	cmp	w1, #0x0
    32d0:	csel	w0, w1, w25, eq  // eq = none
    32d4:	str	w0, [sp, #180]
    32d8:	mov	w0, w25
    32dc:	bl	28 <_gcry_mpi_alloc_limb_space>
    32e0:	mov	x2, x0
    32e4:	str	x0, [sp, #120]
    32e8:	cmp	w25, #0x0
    32ec:	b.le	3314 <gcry_mpi_powm+0x48c>
    32f0:	mov	x0, #0x0                   	// #0
    32f4:	ldr	x1, [x20, x0, lsl #3]
    32f8:	str	x1, [x2, x0, lsl #3]
    32fc:	add	x0, x0, #0x1
    3300:	cmp	w25, w0
    3304:	b.gt	32f4 <gcry_mpi_powm+0x46c>
    3308:	ldr	x0, [sp, #120]
    330c:	str	x0, [sp, #160]
    3310:	b	3120 <gcry_mpi_powm+0x298>
    3314:	ldr	x0, [sp, #120]
    3318:	str	x0, [sp, #160]
    331c:	b	3120 <gcry_mpi_powm+0x298>
    3320:	cbnz	x0, 3360 <gcry_mpi_powm+0x4d8>
    3324:	mov	w1, w21
    3328:	mov	w0, w23
    332c:	bl	28 <_gcry_mpi_alloc_limb_space>
    3330:	mov	x2, x0
    3334:	str	x0, [sp, #128]
    3338:	cmp	w23, #0x0
    333c:	b.le	312c <gcry_mpi_powm+0x2a4>
    3340:	mov	x0, #0x0                   	// #0
    3344:	lsl	x1, x0, #3
    3348:	ldr	x1, [x1]
    334c:	str	x1, [x2, x0, lsl #3]
    3350:	add	x0, x0, #0x1
    3354:	cmp	w23, w0
    3358:	b.gt	3344 <gcry_mpi_powm+0x4bc>
    335c:	b	312c <gcry_mpi_powm+0x2a4>
    3360:	adrp	x0, 0 <_gcry_mpi_m_check>
    3364:	ldr	x3, [x0]
    3368:	mov	w2, #0xa0                  	// #160
    336c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3370:	ldr	x1, [x0]
    3374:	adrp	x0, 0 <_gcry_mpi_m_check>
    3378:	ldr	x0, [x0]
    337c:	bl	0 <_gcry_assert_failed>
    3380:	mov	w1, w24
    3384:	mov	x0, x28
    3388:	bl	198 <_gcry_mpi_resize>
    338c:	ldr	x20, [x28, #16]
    3390:	b	313c <gcry_mpi_powm+0x2b4>
    3394:	mov	x0, #0x38                  	// #56
    3398:	b	31d8 <gcry_mpi_powm+0x350>
    339c:	cmp	w19, #0xf
    33a0:	b.le	3468 <gcry_mpi_powm+0x5e0>
    33a4:	ldr	x0, [sp, #104]
    33a8:	cbz	x0, 347c <gcry_mpi_powm+0x5f4>
    33ac:	lsl	w0, w19, #1
    33b0:	str	w0, [sp, #112]
    33b4:	ldr	w0, [sp, #140]
    33b8:	cmp	w0, w19, lsl #1
    33bc:	b.lt	3494 <gcry_mpi_powm+0x60c>  // b.tstop
    33c0:	ldr	x3, [sp, #104]
    33c4:	mov	w2, w19
    33c8:	mov	x1, x20
    33cc:	ldr	x0, [sp, #96]
    33d0:	bl	4214 <_gcry_mpih_sqr_n>
    33d4:	lsl	w19, w19, #1
    33d8:	cmp	w23, w19
    33dc:	b.lt	34bc <gcry_mpi_powm+0x634>  // b.tstop
    33e0:	str	x21, [sp, #112]
    33e4:	ldr	w0, [sp, #136]
    33e8:	cmp	w0, #0x0
    33ec:	ccmp	x21, #0x0, #0x1, eq  // eq = none
    33f0:	b.ge	3438 <gcry_mpi_powm+0x5b0>  // b.tcont
    33f4:	cmp	w22, #0xf
    33f8:	b.gt	34e8 <gcry_mpi_powm+0x660>
    33fc:	mov	w4, w22
    3400:	mov	x3, x26
    3404:	mov	w2, w19
    3408:	ldr	x1, [sp, #96]
    340c:	mov	x0, x20
    3410:	bl	4710 <_gcry_mpih_mul>
    3414:	add	w3, w19, w22
    3418:	cmp	w23, w3
    341c:	b.lt	3508 <gcry_mpi_powm+0x680>  // b.tstop
    3420:	ldr	x0, [sp, #112]
    3424:	tbz	x0, #63, 3438 <gcry_mpi_powm+0x5b0>
    3428:	mov	w19, w3
    342c:	ldr	x0, [sp, #96]
    3430:	str	x20, [sp, #96]
    3434:	mov	x20, x0
    3438:	lsl	x21, x21, #1
    343c:	sub	w24, w24, #0x1
    3440:	mov	x0, x20
    3444:	ldr	x20, [sp, #96]
    3448:	str	x0, [sp, #96]
    344c:	cbnz	w24, 339c <gcry_mpi_powm+0x514>
    3450:	subs	w25, w25, #0x1
    3454:	b.mi	352c <gcry_mpi_powm+0x6a4>  // b.first
    3458:	ldr	x0, [sp, #120]
    345c:	ldr	x21, [x0, w25, sxtw #3]
    3460:	mov	w24, #0x40                  	// #64
    3464:	b	344c <gcry_mpi_powm+0x5c4>
    3468:	mov	w2, w19
    346c:	mov	x1, x20
    3470:	ldr	x0, [sp, #96]
    3474:	bl	40f0 <_gcry_mpih_sqr_n_basecase>
    3478:	b	33d4 <gcry_mpi_powm+0x54c>
    347c:	lsl	w0, w19, #1
    3480:	str	w0, [sp, #140]
    3484:	mov	w1, #0x0                   	// #0
    3488:	bl	28 <_gcry_mpi_alloc_limb_space>
    348c:	str	x0, [sp, #104]
    3490:	b	33c0 <gcry_mpi_powm+0x538>
    3494:	mov	w1, #0x0                   	// #0
    3498:	ldr	x0, [sp, #104]
    349c:	bl	120 <_gcry_mpi_free_limb_space>
    34a0:	mov	w1, #0x0                   	// #0
    34a4:	ldr	w0, [sp, #112]
    34a8:	bl	28 <_gcry_mpi_alloc_limb_space>
    34ac:	str	x0, [sp, #104]
    34b0:	ldr	w0, [sp, #112]
    34b4:	str	w0, [sp, #140]
    34b8:	b	33c0 <gcry_mpi_powm+0x538>
    34bc:	mov	w5, w23
    34c0:	ldr	x4, [sp, #128]
    34c4:	mov	w3, w19
    34c8:	ldr	x0, [sp, #96]
    34cc:	mov	x2, x0
    34d0:	mov	w1, #0x0                   	// #0
    34d4:	ldr	x6, [sp, #144]
    34d8:	add	x0, x0, x6
    34dc:	bl	4fe0 <_gcry_mpih_divrem>
    34e0:	mov	w19, w23
    34e4:	b	33e0 <gcry_mpi_powm+0x558>
    34e8:	add	x5, sp, #0xd8
    34ec:	mov	w4, w22
    34f0:	mov	x3, x26
    34f4:	mov	w2, w19
    34f8:	ldr	x1, [sp, #96]
    34fc:	mov	x0, x20
    3500:	bl	488c <_gcry_mpih_mul_karatsuba_case>
    3504:	b	3414 <gcry_mpi_powm+0x58c>
    3508:	mov	w5, w23
    350c:	ldr	x4, [sp, #128]
    3510:	mov	x2, x20
    3514:	mov	w1, #0x0                   	// #0
    3518:	ldr	x0, [sp, #144]
    351c:	add	x0, x20, x0
    3520:	bl	4fe0 <_gcry_mpih_divrem>
    3524:	mov	w3, w23
    3528:	b	3420 <gcry_mpi_powm+0x598>
    352c:	ldr	w0, [sp, #176]
    3530:	cbnz	w0, 3670 <gcry_mpi_powm+0x7e8>
    3534:	ldr	x0, [x28, #16]
    3538:	cmp	x0, x20
    353c:	b.eq	3574 <gcry_mpi_powm+0x6ec>  // b.none
    3540:	cmp	w19, #0x0
    3544:	b.le	3570 <gcry_mpi_powm+0x6e8>
    3548:	sub	w3, w19, #0x1
    354c:	add	x3, x3, #0x1
    3550:	lsl	x3, x3, #3
    3554:	mov	x0, #0x0                   	// #0
    3558:	ldr	x2, [x20, x0]
    355c:	ldr	x1, [x28, #16]
    3560:	str	x2, [x1, x0]
    3564:	add	x0, x0, #0x8
    3568:	cmp	x0, x3
    356c:	b.ne	3558 <gcry_mpi_powm+0x6d0>  // b.any
    3570:	ldr	x20, [x28, #16]
    3574:	cmp	w19, w23
    3578:	b.ge	379c <gcry_mpi_powm+0x914>  // b.tcont
    357c:	sxtw	x0, w19
    3580:	sub	x2, x20, #0x8
    3584:	cmp	w19, #0x0
    3588:	b.le	35a8 <gcry_mpi_powm+0x720>
    358c:	mov	w19, w0
    3590:	ldr	x1, [x2, x0, lsl #3]
    3594:	cbnz	x1, 35a8 <gcry_mpi_powm+0x720>
    3598:	sub	w19, w0, #0x1
    359c:	sub	x0, x0, #0x1
    35a0:	cmp	w0, #0x0
    35a4:	b.gt	358c <gcry_mpi_powm+0x704>
    35a8:	add	x0, sp, #0xd8
    35ac:	bl	4694 <_gcry_mpih_release_karatsuba_ctx>
    35b0:	ldr	w0, [sp, #200]
    35b4:	cmp	w0, #0x0
    35b8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    35bc:	b.eq	36e8 <gcry_mpi_powm+0x860>  // b.none
    35c0:	ldr	w0, [sp, #176]
    35c4:	cbnz	w0, 36b4 <gcry_mpi_powm+0x82c>
    35c8:	mov	w3, w19
    35cc:	mov	x2, x20
    35d0:	ldr	x21, [sp, #128]
    35d4:	mov	x1, x21
    35d8:	mov	x0, x20
    35dc:	bl	4d70 <_gcry_mpih_sub_n>
    35e0:	cmp	w23, w19
    35e4:	b.eq	3644 <gcry_mpi_powm+0x7bc>  // b.none
    35e8:	sxtw	x4, w19
    35ec:	sbfiz	x1, x19, #3, #32
    35f0:	add	x2, x20, x1
    35f4:	add	x1, x21, x1
    35f8:	sub	w19, w23, w19
    35fc:	add	x1, x1, #0x8
    3600:	ldr	x3, [x21, x4, lsl #3]
    3604:	sub	x0, x3, x0
    3608:	add	x2, x2, #0x8
    360c:	str	x0, [x20, x4, lsl #3]
    3610:	cmp	x3, x0
    3614:	b.cc	36cc <gcry_mpi_powm+0x844>  // b.lo, b.ul, b.last
    3618:	cmp	x2, x1
    361c:	b.eq	3644 <gcry_mpi_powm+0x7bc>  // b.none
    3620:	sub	w19, w19, #0x1
    3624:	cmp	w19, #0x0
    3628:	b.le	3644 <gcry_mpi_powm+0x7bc>
    362c:	mov	x0, #0x0                   	// #0
    3630:	ldr	x3, [x1, x0, lsl #3]
    3634:	str	x3, [x2, x0, lsl #3]
    3638:	add	x0, x0, #0x1
    363c:	cmp	w19, w0
    3640:	b.gt	3630 <gcry_mpi_powm+0x7a8>
    3644:	cmp	w23, #0x0
    3648:	b.le	3774 <gcry_mpi_powm+0x8ec>
    364c:	sub	x1, x20, #0x8
    3650:	mov	w19, w27
    3654:	ldr	x0, [x1, x27, lsl #3]
    3658:	cbnz	x0, 36f0 <gcry_mpi_powm+0x868>
    365c:	sub	w19, w27, #0x1
    3660:	sub	x27, x27, #0x1
    3664:	cmp	w27, #0x0
    3668:	b.gt	3650 <gcry_mpi_powm+0x7c8>
    366c:	b	36f0 <gcry_mpi_powm+0x868>
    3670:	ldr	w3, [sp, #176]
    3674:	mov	w2, w19
    3678:	mov	x1, x20
    367c:	ldr	x0, [x28, #16]
    3680:	bl	3b60 <_gcry_mpih_lshift>
    3684:	ldr	x20, [x28, #16]
    3688:	cbz	x0, 3694 <gcry_mpi_powm+0x80c>
    368c:	str	x0, [x20, w19, sxtw #3]
    3690:	add	w19, w19, #0x1
    3694:	cmp	w23, w19
    3698:	b.le	37c4 <gcry_mpi_powm+0x93c>
    369c:	ldr	w3, [sp, #176]
    36a0:	mov	w2, w19
    36a4:	mov	x1, x20
    36a8:	mov	x0, x20
    36ac:	bl	686c <_gcry_mpih_rshift>
    36b0:	b	357c <gcry_mpi_powm+0x6f4>
    36b4:	ldr	w3, [sp, #176]
    36b8:	mov	w2, w23
    36bc:	ldr	x0, [sp, #128]
    36c0:	mov	x1, x0
    36c4:	bl	686c <_gcry_mpih_rshift>
    36c8:	b	35c8 <gcry_mpi_powm+0x740>
    36cc:	subs	w19, w19, #0x1
    36d0:	b.eq	3644 <gcry_mpi_powm+0x7bc>  // b.none
    36d4:	ldr	x0, [x1], #8
    36d8:	sub	x3, x0, #0x1
    36dc:	str	x3, [x2], #8
    36e0:	cbz	x0, 36cc <gcry_mpi_powm+0x844>
    36e4:	b	3618 <gcry_mpi_powm+0x790>
    36e8:	ldr	w0, [sp, #204]
    36ec:	str	w0, [sp, #188]
    36f0:	ldr	x0, [x28, #16]
    36f4:	cmp	x0, x20
    36f8:	b.ne	377c <gcry_mpi_powm+0x8f4>  // b.any
    36fc:	str	w19, [x28, #4]
    3700:	ldr	w0, [sp, #188]
    3704:	str	w0, [x28, #8]
    3708:	ldr	x0, [sp, #128]
    370c:	cbz	x0, 3718 <gcry_mpi_powm+0x890>
    3710:	ldr	w1, [sp, #196]
    3714:	bl	120 <_gcry_mpi_free_limb_space>
    3718:	ldr	x0, [sp, #168]
    371c:	cbz	x0, 3728 <gcry_mpi_powm+0x8a0>
    3720:	ldr	w1, [sp, #192]
    3724:	bl	120 <_gcry_mpi_free_limb_space>
    3728:	ldr	x0, [sp, #160]
    372c:	cbz	x0, 3738 <gcry_mpi_powm+0x8b0>
    3730:	ldr	w1, [sp, #180]
    3734:	bl	120 <_gcry_mpi_free_limb_space>
    3738:	ldr	x0, [sp, #152]
    373c:	cbz	x0, 3748 <gcry_mpi_powm+0x8c0>
    3740:	ldr	w1, [sp, #184]
    3744:	bl	120 <_gcry_mpi_free_limb_space>
    3748:	ldr	x0, [sp, #104]
    374c:	cbz	x0, 3758 <gcry_mpi_powm+0x8d0>
    3750:	mov	w1, #0x0                   	// #0
    3754:	bl	120 <_gcry_mpi_free_limb_space>
    3758:	ldp	x19, x20, [sp, #16]
    375c:	ldp	x21, x22, [sp, #32]
    3760:	ldp	x23, x24, [sp, #48]
    3764:	ldp	x25, x26, [sp, #64]
    3768:	ldp	x27, x28, [sp, #80]
    376c:	ldp	x29, x30, [sp], #256
    3770:	ret
    3774:	mov	w19, w23
    3778:	b	36f0 <gcry_mpi_powm+0x868>
    377c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3780:	ldr	x3, [x0]
    3784:	mov	w2, #0x145                 	// #325
    3788:	adrp	x0, 0 <_gcry_mpi_m_check>
    378c:	ldr	x1, [x0]
    3790:	adrp	x0, 0 <_gcry_mpi_m_check>
    3794:	ldr	x0, [x0]
    3798:	bl	0 <_gcry_assert_failed>
    379c:	mov	w5, w23
    37a0:	ldr	x4, [sp, #128]
    37a4:	mov	w3, w19
    37a8:	mov	x2, x20
    37ac:	mov	w1, #0x0                   	// #0
    37b0:	ldr	x0, [sp, #144]
    37b4:	add	x0, x20, x0
    37b8:	bl	4fe0 <_gcry_mpih_divrem>
    37bc:	mov	w19, w23
    37c0:	b	357c <gcry_mpi_powm+0x6f4>
    37c4:	mov	w5, w23
    37c8:	ldr	x4, [sp, #128]
    37cc:	mov	w3, w19
    37d0:	mov	x2, x20
    37d4:	mov	w1, #0x0                   	// #0
    37d8:	ldr	x0, [sp, #144]
    37dc:	add	x0, x20, x0
    37e0:	bl	4fe0 <_gcry_mpih_divrem>
    37e4:	mov	w19, w23
    37e8:	b	369c <gcry_mpi_powm+0x814>
    37ec:	nop
	...

0000000000003828 <_gcry_mpi_mulpowm>:
    3828:	stp	x29, x30, [sp, #-128]!
    382c:	mov	x29, sp
    3830:	stp	x19, x20, [sp, #16]
    3834:	stp	x21, x22, [sp, #32]
    3838:	stp	x23, x24, [sp, #48]
    383c:	stp	x25, x26, [sp, #64]
    3840:	stp	x27, x28, [sp, #80]
    3844:	mov	x24, x0
    3848:	str	x1, [sp, #120]
    384c:	str	x2, [sp, #104]
    3850:	ldr	x0, [x1]
    3854:	cbz	x0, 3918 <_gcry_mpi_mulpowm+0xf0>
    3858:	mov	x27, x3
    385c:	mov	x0, #0x1                   	// #1
    3860:	sub	x2, x1, #0x8
    3864:	sub	w23, w0, #0x1
    3868:	str	w0, [sp, #116]
    386c:	add	x0, x0, #0x1
    3870:	ldr	x1, [x2, x0, lsl #3]
    3874:	cbnz	x1, 3864 <_gcry_mpi_mulpowm+0x3c>
    3878:	ldr	w0, [sp, #116]
    387c:	cbz	w0, 3918 <_gcry_mpi_mulpowm+0xf0>
    3880:	ldr	x0, [sp, #104]
    3884:	ldr	x0, [x0]
    3888:	mov	x19, #0x0                   	// #0
    388c:	mov	w26, #0x0                   	// #0
    3890:	cbz	x0, 3938 <_gcry_mpi_mulpowm+0x110>
    3894:	mov	w20, w19
    3898:	bl	8e8 <gcry_mpi_get_nbits>
    389c:	cmp	w26, w0
    38a0:	csel	w26, w26, w0, ge  // ge = tcont
    38a4:	add	x19, x19, #0x1
    38a8:	ldr	x0, [sp, #104]
    38ac:	ldr	x0, [x0, x19, lsl #3]
    38b0:	cbnz	x0, 3894 <_gcry_mpi_mulpowm+0x6c>
    38b4:	cmp	w23, w20
    38b8:	b.ne	3938 <_gcry_mpi_mulpowm+0x110>  // b.any
    38bc:	cbz	w26, 3958 <_gcry_mpi_mulpowm+0x130>
    38c0:	ldr	w0, [sp, #116]
    38c4:	cmp	w0, #0x9
    38c8:	b.gt	3978 <_gcry_mpi_mulpowm+0x150>
    38cc:	mov	w0, #0x1                   	// #1
    38d0:	ldrb	w1, [sp, #116]
    38d4:	lsl	w0, w0, w1
    38d8:	str	w0, [sp, #112]
    38dc:	mov	x1, #0x8                   	// #8
    38e0:	sxtw	x0, w0
    38e4:	bl	6b24 <gcry_xcalloc>
    38e8:	mov	x22, x0
    38ec:	ldr	w0, [x27, #4]
    38f0:	add	w0, w0, #0x1
    38f4:	bl	6c <_gcry_mpi_alloc>
    38f8:	str	x0, [sp, #96]
    38fc:	mov	x1, #0x1                   	// #1
    3900:	mov	x0, x24
    3904:	bl	5f8 <gcry_mpi_set_ui>
    3908:	cmp	w26, #0x0
    390c:	b.le	3ad0 <_gcry_mpi_mulpowm+0x2a8>
    3910:	mov	w21, #0x1                   	// #1
    3914:	b	39ec <_gcry_mpi_mulpowm+0x1c4>
    3918:	adrp	x0, 0 <_gcry_mpi_m_check>
    391c:	ldr	x3, [x0]
    3920:	mov	w2, #0x52                  	// #82
    3924:	adrp	x0, 0 <_gcry_mpi_m_check>
    3928:	ldr	x1, [x0]
    392c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3930:	ldr	x0, [x0]
    3934:	bl	0 <_gcry_assert_failed>
    3938:	adrp	x0, 0 <_gcry_mpi_m_check>
    393c:	ldr	x3, [x0]
    3940:	mov	w2, #0x5a                  	// #90
    3944:	adrp	x0, 0 <_gcry_mpi_m_check>
    3948:	ldr	x1, [x0]
    394c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3950:	ldr	x0, [x0]
    3954:	bl	0 <_gcry_assert_failed>
    3958:	adrp	x0, 0 <_gcry_mpi_m_check>
    395c:	ldr	x3, [x0]
    3960:	mov	w2, #0x5b                  	// #91
    3964:	adrp	x0, 0 <_gcry_mpi_m_check>
    3968:	ldr	x1, [x0]
    396c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3970:	ldr	x0, [x0]
    3974:	bl	0 <_gcry_assert_failed>
    3978:	adrp	x0, 0 <_gcry_mpi_m_check>
    397c:	ldr	x3, [x0]
    3980:	mov	w2, #0x5c                  	// #92
    3984:	adrp	x0, 0 <_gcry_mpi_m_check>
    3988:	ldr	x1, [x0]
    398c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3990:	ldr	x0, [x0]
    3994:	bl	0 <_gcry_assert_failed>
    3998:	mov	w19, #0x0                   	// #0
    399c:	b	3a38 <_gcry_mpi_mulpowm+0x210>
    39a0:	adrp	x0, 0 <_gcry_mpi_m_check>
    39a4:	ldr	x3, [x0]
    39a8:	mov	w2, #0x69                  	// #105
    39ac:	adrp	x0, 0 <_gcry_mpi_m_check>
    39b0:	ldr	x1, [x0]
    39b4:	adrp	x0, 0 <_gcry_mpi_m_check>
    39b8:	ldr	x0, [x0]
    39bc:	bl	0 <_gcry_assert_failed>
    39c0:	mov	x0, #0x1                   	// #1
    39c4:	bl	6b0 <_gcry_mpi_alloc_set_ui>
    39c8:	str	x0, [x22]
    39cc:	mov	x3, x27
    39d0:	ldr	x2, [x22, x25, lsl #3]
    39d4:	ldr	x1, [sp, #96]
    39d8:	mov	x0, x24
    39dc:	bl	1b90 <gcry_mpi_mulm>
    39e0:	add	w21, w21, #0x1
    39e4:	cmp	w26, w21
    39e8:	b.lt	3ad0 <_gcry_mpi_mulpowm+0x2a8>  // b.tstop
    39ec:	mov	x3, x27
    39f0:	mov	x2, x24
    39f4:	mov	x1, x24
    39f8:	ldr	x0, [sp, #96]
    39fc:	bl	1b90 <gcry_mpi_mulm>
    3a00:	tbnz	w23, #31, 3998 <_gcry_mpi_mulpowm+0x170>
    3a04:	sxtw	x20, w23
    3a08:	mov	w19, #0x0                   	// #0
    3a0c:	sub	w25, w26, w21
    3a10:	lsl	w19, w19, #1
    3a14:	mov	w1, w25
    3a18:	ldr	x0, [sp, #104]
    3a1c:	ldr	x0, [x0, x20, lsl #3]
    3a20:	bl	998 <gcry_mpi_test_bit>
    3a24:	orr	w1, w19, #0x1
    3a28:	cmp	w0, #0x0
    3a2c:	csel	w19, w1, w19, ne  // ne = any
    3a30:	sub	x20, x20, #0x1
    3a34:	tbz	w20, #31, 3a10 <_gcry_mpi_mulpowm+0x1e8>
    3a38:	cmp	w19, #0x0
    3a3c:	ldr	w0, [sp, #112]
    3a40:	ccmp	w0, w19, #0x4, ge  // ge = tcont
    3a44:	b.le	39a0 <_gcry_mpi_mulpowm+0x178>
    3a48:	sxtw	x25, w19
    3a4c:	add	x28, x22, w19, sxtw #3
    3a50:	ldr	x0, [x22, x25, lsl #3]
    3a54:	cbnz	x0, 39cc <_gcry_mpi_mulpowm+0x1a4>
    3a58:	cbz	w19, 39c0 <_gcry_mpi_mulpowm+0x198>
    3a5c:	mov	x20, #0x0                   	// #0
    3a60:	ldr	w0, [sp, #116]
    3a64:	cmp	w0, #0x0
    3a68:	b.gt	3a9c <_gcry_mpi_mulpowm+0x274>
    3a6c:	mov	w0, #0x0                   	// #0
    3a70:	bl	6c <_gcry_mpi_alloc>
    3a74:	str	x0, [x22, x25, lsl #3]
    3a78:	b	39cc <_gcry_mpi_mulpowm+0x1a4>
    3a7c:	ldr	x0, [sp, #120]
    3a80:	ldr	x0, [x0, x20, lsl #3]
    3a84:	bl	398 <_gcry_mpi_copy>
    3a88:	str	x0, [x28]
    3a8c:	add	x20, x20, #0x1
    3a90:	sub	w0, w20, #0x1
    3a94:	cmp	w23, w0
    3a98:	b.le	3ac4 <_gcry_mpi_mulpowm+0x29c>
    3a9c:	asr	w0, w19, w20
    3aa0:	tbz	w0, #0, 3a8c <_gcry_mpi_mulpowm+0x264>
    3aa4:	ldr	x0, [x28]
    3aa8:	cbz	x0, 3a7c <_gcry_mpi_mulpowm+0x254>
    3aac:	mov	x3, x27
    3ab0:	ldr	x1, [sp, #120]
    3ab4:	ldr	x2, [x1, x20, lsl #3]
    3ab8:	mov	x1, x0
    3abc:	bl	1b90 <gcry_mpi_mulm>
    3ac0:	b	3a8c <_gcry_mpi_mulpowm+0x264>
    3ac4:	ldr	x0, [x22, x25, lsl #3]
    3ac8:	cbnz	x0, 39cc <_gcry_mpi_mulpowm+0x1a4>
    3acc:	b	3a6c <_gcry_mpi_mulpowm+0x244>
    3ad0:	ldr	x0, [sp, #96]
    3ad4:	bl	274 <_gcry_mpi_free>
    3ad8:	ldr	w0, [sp, #112]
    3adc:	cmp	w0, #0x0
    3ae0:	b.le	3b00 <_gcry_mpi_mulpowm+0x2d8>
    3ae4:	mov	x19, #0x0                   	// #0
    3ae8:	ldr	x0, [x22, x19, lsl #3]
    3aec:	bl	274 <_gcry_mpi_free>
    3af0:	add	x19, x19, #0x1
    3af4:	ldr	w0, [sp, #112]
    3af8:	cmp	w0, w19
    3afc:	b.gt	3ae8 <_gcry_mpi_mulpowm+0x2c0>
    3b00:	mov	x0, x22
    3b04:	bl	6b08 <gcry_free>
    3b08:	ldp	x19, x20, [sp, #16]
    3b0c:	ldp	x21, x22, [sp, #32]
    3b10:	ldp	x23, x24, [sp, #48]
    3b14:	ldp	x25, x26, [sp, #64]
    3b18:	ldp	x27, x28, [sp, #80]
    3b1c:	ldp	x29, x30, [sp], #128
    3b20:	ret
    3b24:	nop
	...

0000000000003b60 <_gcry_mpih_lshift>:
    3b60:	add	x7, x0, #0x8
    3b64:	mov	w8, #0x40                  	// #64
    3b68:	sub	w8, w8, w3
    3b6c:	sub	w0, w2, #0x1
    3b70:	ldr	x5, [x1, w0, sxtw #3]
    3b74:	lsr	x0, x5, x8
    3b78:	subs	w2, w2, #0x2
    3b7c:	b.mi	3ba8 <_gcry_mpih_lshift+0x48>  // b.first
    3b80:	sxtw	x2, w2
    3b84:	mov	x4, x5
    3b88:	ldr	x5, [x1, x2, lsl #3]
    3b8c:	lsl	x4, x4, x3
    3b90:	lsr	x6, x5, x8
    3b94:	orr	x4, x4, x6
    3b98:	str	x4, [x7, x2, lsl #3]
    3b9c:	sub	x2, x2, #0x1
    3ba0:	tbz	w2, #31, 3b84 <_gcry_mpih_lshift+0x24>
    3ba4:	mov	w2, #0xffffffff            	// #-1
    3ba8:	lsl	x5, x5, x3
    3bac:	str	x5, [x7, w2, sxtw #3]
    3bb0:	ret

0000000000003bb4 <mul_n_basecase>:
    3bb4:	stp	x29, x30, [sp, #-80]!
    3bb8:	mov	x29, sp
    3bbc:	stp	x19, x20, [sp, #16]
    3bc0:	stp	x21, x22, [sp, #32]
    3bc4:	stp	x23, x24, [sp, #48]
    3bc8:	stp	x25, x26, [sp, #64]
    3bcc:	mov	x20, x0
    3bd0:	mov	x24, x1
    3bd4:	mov	x23, x2
    3bd8:	mov	w21, w3
    3bdc:	ldr	x3, [x2]
    3be0:	cmp	x3, #0x1
    3be4:	b.hi	3c3c <mul_n_basecase+0x88>  // b.pmore
    3be8:	b.eq	3c14 <mul_n_basecase+0x60>  // b.none
    3bec:	mov	x0, #0x0                   	// #0
    3bf0:	mov	x4, #0x0                   	// #0
    3bf4:	cmp	w21, #0x0
    3bf8:	b.le	3c48 <mul_n_basecase+0x94>
    3bfc:	str	xzr, [x20, x0, lsl #3]
    3c00:	add	x0, x0, #0x1
    3c04:	cmp	w21, w0
    3c08:	b.gt	3bfc <mul_n_basecase+0x48>
    3c0c:	mov	x4, #0x0                   	// #0
    3c10:	b	3c48 <mul_n_basecase+0x94>
    3c14:	cmp	w21, #0x0
    3c18:	b.le	3c70 <mul_n_basecase+0xbc>
    3c1c:	mov	x0, #0x0                   	// #0
    3c20:	ldr	x1, [x24, x0, lsl #3]
    3c24:	str	x1, [x20, x0, lsl #3]
    3c28:	add	x0, x0, #0x1
    3c2c:	cmp	w21, w0
    3c30:	b.gt	3c20 <mul_n_basecase+0x6c>
    3c34:	mov	x4, #0x0                   	// #0
    3c38:	b	3c48 <mul_n_basecase+0x94>
    3c3c:	mov	w2, w21
    3c40:	bl	4ba0 <_gcry_mpih_mul_1>
    3c44:	mov	x4, x0
    3c48:	add	x25, x20, w21, sxtw #3
    3c4c:	str	x4, [x20, w21, sxtw #3]
    3c50:	cmp	w21, #0x1
    3c54:	b.le	3cc8 <mul_n_basecase+0x114>
    3c58:	sub	w22, w21, #0x2
    3c5c:	add	x22, x22, #0x2
    3c60:	lsl	x22, x22, #3
    3c64:	mov	x19, #0x8                   	// #8
    3c68:	mov	x26, #0x0                   	// #0
    3c6c:	b	3c98 <mul_n_basecase+0xe4>
    3c70:	mov	x4, #0x0                   	// #0
    3c74:	b	3c48 <mul_n_basecase+0x94>
    3c78:	mov	w2, w21
    3c7c:	mov	x1, x24
    3c80:	bl	4c1c <_gcry_mpih_addmul_1>
    3c84:	mov	x4, x0
    3c88:	str	x4, [x25, x19]
    3c8c:	add	x19, x19, #0x8
    3c90:	cmp	x19, x22
    3c94:	b.eq	3cc8 <mul_n_basecase+0x114>  // b.none
    3c98:	add	x0, x20, x19
    3c9c:	ldr	x3, [x23, x19]
    3ca0:	cmp	x3, #0x1
    3ca4:	b.hi	3c78 <mul_n_basecase+0xc4>  // b.pmore
    3ca8:	mov	x4, x26
    3cac:	b.ne	3c88 <mul_n_basecase+0xd4>  // b.any
    3cb0:	mov	w3, w21
    3cb4:	mov	x2, x24
    3cb8:	mov	x1, x0
    3cbc:	bl	4d2c <_gcry_mpih_add_n>
    3cc0:	mov	x4, x0
    3cc4:	b	3c88 <mul_n_basecase+0xd4>
    3cc8:	mov	x0, x4
    3ccc:	ldp	x19, x20, [sp, #16]
    3cd0:	ldp	x21, x22, [sp, #32]
    3cd4:	ldp	x23, x24, [sp, #48]
    3cd8:	ldp	x25, x26, [sp, #64]
    3cdc:	ldp	x29, x30, [sp], #80
    3ce0:	ret

0000000000003ce4 <mul_n>:
    3ce4:	stp	x29, x30, [sp, #-128]!
    3ce8:	mov	x29, sp
    3cec:	stp	x19, x20, [sp, #16]
    3cf0:	stp	x21, x22, [sp, #32]
    3cf4:	stp	x23, x24, [sp, #48]
    3cf8:	stp	x25, x26, [sp, #64]
    3cfc:	mov	x20, x0
    3d00:	mov	x23, x1
    3d04:	mov	x22, x2
    3d08:	mov	w21, w3
    3d0c:	mov	x24, x4
    3d10:	tbz	w21, #0, 3d8c <mul_n+0xa8>
    3d14:	sub	w19, w3, #0x1
    3d18:	cmp	w19, #0xf
    3d1c:	b.gt	3d80 <mul_n+0x9c>
    3d20:	mov	w3, w19
    3d24:	bl	3bb4 <mul_n_basecase>
    3d28:	sxtw	x25, w19
    3d2c:	add	x24, x20, w19, sxtw #3
    3d30:	ldr	x3, [x22, x25, lsl #3]
    3d34:	mov	w2, w19
    3d38:	mov	x1, x23
    3d3c:	mov	x0, x24
    3d40:	bl	4c1c <_gcry_mpih_addmul_1>
    3d44:	lsl	w1, w19, #1
    3d48:	str	x0, [x20, w1, sxtw #3]
    3d4c:	ldr	x3, [x23, x25, lsl #3]
    3d50:	mov	w2, w21
    3d54:	mov	x1, x22
    3d58:	mov	x0, x24
    3d5c:	bl	4c1c <_gcry_mpih_addmul_1>
    3d60:	add	w21, w21, w19
    3d64:	str	x0, [x20, w21, sxtw #3]
    3d68:	ldp	x19, x20, [sp, #16]
    3d6c:	ldp	x21, x22, [sp, #32]
    3d70:	ldp	x23, x24, [sp, #48]
    3d74:	ldp	x25, x26, [sp, #64]
    3d78:	ldp	x29, x30, [sp], #128
    3d7c:	ret
    3d80:	mov	w3, w19
    3d84:	bl	3ce4 <mul_n>
    3d88:	b	3d28 <mul_n+0x44>
    3d8c:	stp	x27, x28, [sp, #80]
    3d90:	and	w27, w3, #0x1
    3d94:	asr	w19, w3, #1
    3d98:	cmp	w3, #0x1f
    3d9c:	b.gt	3de8 <mul_n+0x104>
    3da0:	sxtw	x26, w19
    3da4:	sbfiz	x25, x19, #3, #32
    3da8:	add	x28, x1, x25
    3dac:	mov	w3, w19
    3db0:	add	x2, x2, x25
    3db4:	mov	x1, x28
    3db8:	add	x0, x0, w21, sxtw #3
    3dbc:	bl	3bb4 <mul_n_basecase>
    3dc0:	subs	w0, w19, #0x1
    3dc4:	str	w0, [sp, #96]
    3dc8:	b.pl	3e10 <mul_n+0x12c>  // b.nfrst
    3dcc:	mov	w3, w19
    3dd0:	mov	x2, x23
    3dd4:	mov	x1, x28
    3dd8:	mov	x0, x20
    3ddc:	bl	4d70 <_gcry_mpih_sub_n>
    3de0:	add	x1, x22, x25
    3de4:	b	3e70 <mul_n+0x18c>
    3de8:	sxtw	x26, w19
    3dec:	sbfiz	x25, x19, #3, #32
    3df0:	add	x28, x1, x25
    3df4:	mov	w3, w19
    3df8:	add	x2, x2, x25
    3dfc:	mov	x1, x28
    3e00:	add	x0, x0, w21, sxtw #3
    3e04:	bl	3ce4 <mul_n>
    3e08:	sub	w0, w19, #0x1
    3e0c:	str	w0, [sp, #96]
    3e10:	ldrsw	x0, [sp, #96]
    3e14:	add	x3, x23, x25
    3e18:	ldr	x2, [x3, x0, lsl #3]
    3e1c:	ldr	x1, [x23, x0, lsl #3]
    3e20:	cmp	x2, x1
    3e24:	b.ne	3eac <mul_n+0x1c8>  // b.any
    3e28:	sub	x0, x0, #0x1
    3e2c:	tbz	w0, #31, 3e18 <mul_n+0x134>
    3e30:	mov	w3, w19
    3e34:	mov	x2, x23
    3e38:	mov	x1, x28
    3e3c:	mov	x0, x20
    3e40:	bl	4d70 <_gcry_mpih_sub_n>
    3e44:	add	x1, x22, x25
    3e48:	ldr	w0, [sp, #96]
    3e4c:	tbnz	w0, #31, 3e70 <mul_n+0x18c>
    3e50:	ldrsw	x0, [sp, #96]
    3e54:	add	x4, x22, x25
    3e58:	ldr	x3, [x4, x0, lsl #3]
    3e5c:	ldr	x2, [x22, x0, lsl #3]
    3e60:	cmp	x3, x2
    3e64:	b.ne	3ed0 <mul_n+0x1ec>  // b.any
    3e68:	sub	x0, x0, #0x1
    3e6c:	tbz	w0, #31, 3e58 <mul_n+0x174>
    3e70:	mov	w3, w19
    3e74:	mov	x2, x22
    3e78:	add	x0, x20, x25
    3e7c:	bl	4d70 <_gcry_mpih_sub_n>
    3e80:	eor	w27, w27, #0x1
    3e84:	cmp	w19, #0xf
    3e88:	b.gt	3eec <mul_n+0x208>
    3e8c:	mov	w3, w19
    3e90:	add	x2, x20, x25
    3e94:	mov	x1, x20
    3e98:	mov	x0, x24
    3e9c:	bl	3bb4 <mul_n_basecase>
    3ea0:	cmp	w19, #0x0
    3ea4:	b.gt	3f04 <mul_n+0x220>
    3ea8:	b	3f24 <mul_n+0x240>
    3eac:	b.hi	3e30 <mul_n+0x14c>  // b.pmore
    3eb0:	mov	w3, w19
    3eb4:	mov	x2, x28
    3eb8:	mov	x1, x23
    3ebc:	mov	x0, x20
    3ec0:	bl	4d70 <_gcry_mpih_sub_n>
    3ec4:	add	x1, x22, x25
    3ec8:	mov	w27, #0x1                   	// #1
    3ecc:	b	3e50 <mul_n+0x16c>
    3ed0:	b.hi	3e70 <mul_n+0x18c>  // b.pmore
    3ed4:	mov	w3, w19
    3ed8:	mov	x2, x1
    3edc:	mov	x1, x22
    3ee0:	add	x0, x20, x25
    3ee4:	bl	4d70 <_gcry_mpih_sub_n>
    3ee8:	b	3e84 <mul_n+0x1a0>
    3eec:	add	x4, x24, w21, sxtw #3
    3ef0:	mov	w3, w19
    3ef4:	add	x2, x20, x25
    3ef8:	mov	x1, x20
    3efc:	mov	x0, x24
    3f00:	bl	3ce4 <mul_n>
    3f04:	add	x3, x20, w21, sxtw #3
    3f08:	add	x2, x20, x26, lsl #3
    3f0c:	mov	x0, #0x0                   	// #0
    3f10:	ldr	x1, [x3, x0, lsl #3]
    3f14:	str	x1, [x2, x0, lsl #3]
    3f18:	add	x0, x0, #0x1
    3f1c:	cmp	w19, w0
    3f20:	b.gt	3f10 <mul_n+0x22c>
    3f24:	sxtw	x28, w21
    3f28:	sbfiz	x0, x21, #3, #32
    3f2c:	str	x0, [sp, #104]
    3f30:	add	x0, x20, x0
    3f34:	str	x0, [sp, #112]
    3f38:	add	x26, x28, x26
    3f3c:	add	x1, x20, x26, lsl #3
    3f40:	str	x1, [sp, #120]
    3f44:	mov	w3, w19
    3f48:	mov	x2, x1
    3f4c:	mov	x1, x0
    3f50:	bl	4d2c <_gcry_mpih_add_n>
    3f54:	str	x0, [sp, #96]
    3f58:	cbz	w27, 4028 <mul_n+0x344>
    3f5c:	add	x0, x20, x25
    3f60:	mov	w3, w21
    3f64:	mov	x2, x24
    3f68:	mov	x1, x0
    3f6c:	bl	4d70 <_gcry_mpih_sub_n>
    3f70:	ldr	x1, [sp, #96]
    3f74:	sub	x27, x1, x0
    3f78:	cmp	w19, #0xf
    3f7c:	b.gt	4048 <mul_n+0x364>
    3f80:	mov	w3, w19
    3f84:	mov	x2, x22
    3f88:	mov	x1, x23
    3f8c:	mov	x0, x24
    3f90:	bl	3bb4 <mul_n_basecase>
    3f94:	add	x22, x20, x25
    3f98:	mov	w3, w21
    3f9c:	mov	x2, x24
    3fa0:	mov	x1, x22
    3fa4:	mov	x0, x22
    3fa8:	bl	4d2c <_gcry_mpih_add_n>
    3fac:	adds	x27, x27, x0
    3fb0:	b.ne	409c <mul_n+0x3b8>  // b.any
    3fb4:	cmp	w19, #0x0
    3fb8:	b.le	3fd4 <mul_n+0x2f0>
    3fbc:	mov	x0, #0x0                   	// #0
    3fc0:	ldr	x1, [x24, x0, lsl #3]
    3fc4:	str	x1, [x20, x0, lsl #3]
    3fc8:	add	x0, x0, #0x1
    3fcc:	cmp	w19, w0
    3fd0:	b.gt	3fc0 <mul_n+0x2dc>
    3fd4:	mov	w3, w19
    3fd8:	add	x2, x24, x25
    3fdc:	mov	x1, x22
    3fe0:	mov	x0, x22
    3fe4:	bl	4d2c <_gcry_mpih_add_n>
    3fe8:	cbz	x0, 40e0 <mul_n+0x3fc>
    3fec:	ldr	x1, [x20, x28, lsl #3]
    3ff0:	add	x0, x1, #0x1
    3ff4:	str	x0, [x20, x28, lsl #3]
    3ff8:	cmp	x1, x0
    3ffc:	b.ls	40e8 <mul_n+0x404>  // b.plast
    4000:	ldr	x0, [sp, #112]
    4004:	add	x1, x0, #0x8
    4008:	subs	w21, w21, #0x1
    400c:	b.eq	40d8 <mul_n+0x3f4>  // b.none
    4010:	ldr	x0, [x1], #8
    4014:	add	x0, x0, #0x1
    4018:	stur	x0, [x1, #-8]
    401c:	cbz	x0, 4008 <mul_n+0x324>
    4020:	ldp	x27, x28, [sp, #80]
    4024:	b	3d68 <mul_n+0x84>
    4028:	add	x0, x20, x25
    402c:	mov	w3, w21
    4030:	mov	x2, x24
    4034:	mov	x1, x0
    4038:	bl	4d2c <_gcry_mpih_add_n>
    403c:	ldr	x1, [sp, #96]
    4040:	add	x27, x1, x0
    4044:	b	3f78 <mul_n+0x294>
    4048:	ldr	x0, [sp, #104]
    404c:	add	x4, x24, x0
    4050:	mov	w3, w19
    4054:	mov	x2, x22
    4058:	mov	x1, x23
    405c:	mov	x0, x24
    4060:	bl	3ce4 <mul_n>
    4064:	add	x22, x20, x25
    4068:	mov	w3, w21
    406c:	mov	x2, x24
    4070:	mov	x1, x22
    4074:	mov	x0, x22
    4078:	bl	4d2c <_gcry_mpih_add_n>
    407c:	adds	x27, x27, x0
    4080:	b.eq	3fbc <mul_n+0x2d8>  // b.none
    4084:	ldr	x0, [x20, x26, lsl #3]
    4088:	add	x27, x27, x0
    408c:	str	x27, [x20, x26, lsl #3]
    4090:	cmp	x0, x27
    4094:	b.ls	3fbc <mul_n+0x2d8>  // b.plast
    4098:	b	40b0 <mul_n+0x3cc>
    409c:	ldr	x0, [x20, x26, lsl #3]
    40a0:	add	x27, x27, x0
    40a4:	str	x27, [x20, x26, lsl #3]
    40a8:	cmp	x0, x27
    40ac:	b.ls	3fb4 <mul_n+0x2d0>  // b.plast
    40b0:	ldr	x0, [sp, #120]
    40b4:	add	x2, x0, #0x8
    40b8:	mov	w1, w19
    40bc:	subs	w1, w1, #0x1
    40c0:	b.eq	3fb4 <mul_n+0x2d0>  // b.none
    40c4:	ldr	x0, [x2], #8
    40c8:	add	x0, x0, #0x1
    40cc:	stur	x0, [x2, #-8]
    40d0:	cbz	x0, 40bc <mul_n+0x3d8>
    40d4:	b	3fb4 <mul_n+0x2d0>
    40d8:	ldp	x27, x28, [sp, #80]
    40dc:	b	3d68 <mul_n+0x84>
    40e0:	ldp	x27, x28, [sp, #80]
    40e4:	b	3d68 <mul_n+0x84>
    40e8:	ldp	x27, x28, [sp, #80]
    40ec:	b	3d68 <mul_n+0x84>

00000000000040f0 <_gcry_mpih_sqr_n_basecase>:
    40f0:	stp	x29, x30, [sp, #-80]!
    40f4:	mov	x29, sp
    40f8:	stp	x19, x20, [sp, #16]
    40fc:	stp	x21, x22, [sp, #32]
    4100:	stp	x23, x24, [sp, #48]
    4104:	mov	x19, x0
    4108:	mov	x21, x1
    410c:	mov	w22, w2
    4110:	ldr	x3, [x1]
    4114:	cmp	x3, #0x1
    4118:	b.hi	4170 <_gcry_mpih_sqr_n_basecase+0x80>  // b.pmore
    411c:	b.eq	4148 <_gcry_mpih_sqr_n_basecase+0x58>  // b.none
    4120:	mov	x1, #0x0                   	// #0
    4124:	mov	x0, #0x0                   	// #0
    4128:	cmp	w2, #0x0
    412c:	b.le	4174 <_gcry_mpih_sqr_n_basecase+0x84>
    4130:	str	xzr, [x19, x1, lsl #3]
    4134:	add	x1, x1, #0x1
    4138:	cmp	w22, w1
    413c:	b.gt	4130 <_gcry_mpih_sqr_n_basecase+0x40>
    4140:	mov	x0, #0x0                   	// #0
    4144:	b	4174 <_gcry_mpih_sqr_n_basecase+0x84>
    4148:	cmp	w2, #0x0
    414c:	b.le	41a4 <_gcry_mpih_sqr_n_basecase+0xb4>
    4150:	mov	x0, #0x0                   	// #0
    4154:	ldr	x1, [x21, x0, lsl #3]
    4158:	str	x1, [x19, x0, lsl #3]
    415c:	add	x0, x0, #0x1
    4160:	cmp	w22, w0
    4164:	b.gt	4154 <_gcry_mpih_sqr_n_basecase+0x64>
    4168:	mov	x0, #0x0                   	// #0
    416c:	b	4174 <_gcry_mpih_sqr_n_basecase+0x84>
    4170:	bl	4ba0 <_gcry_mpih_mul_1>
    4174:	sbfiz	x24, x22, #3, #32
    4178:	str	x0, [x19, w22, sxtw #3]
    417c:	add	x19, x19, #0x8
    4180:	cmp	w22, #0x1
    4184:	b.le	4200 <_gcry_mpih_sqr_n_basecase+0x110>
    4188:	str	x25, [sp, #64]
    418c:	sub	w23, w22, #0x2
    4190:	add	x23, x23, #0x2
    4194:	lsl	x23, x23, #3
    4198:	mov	x20, #0x8                   	// #8
    419c:	mov	x25, #0x0                   	// #0
    41a0:	b	41d0 <_gcry_mpih_sqr_n_basecase+0xe0>
    41a4:	mov	x0, #0x0                   	// #0
    41a8:	b	4174 <_gcry_mpih_sqr_n_basecase+0x84>
    41ac:	mov	w2, w22
    41b0:	mov	x1, x21
    41b4:	mov	x0, x19
    41b8:	bl	4c1c <_gcry_mpih_addmul_1>
    41bc:	str	x0, [x19, x24]
    41c0:	add	x19, x19, #0x8
    41c4:	add	x20, x20, #0x8
    41c8:	cmp	x23, x20
    41cc:	b.eq	41fc <_gcry_mpih_sqr_n_basecase+0x10c>  // b.none
    41d0:	ldr	x3, [x21, x20]
    41d4:	cmp	x3, #0x1
    41d8:	b.hi	41ac <_gcry_mpih_sqr_n_basecase+0xbc>  // b.pmore
    41dc:	mov	x0, x25
    41e0:	b.ne	41bc <_gcry_mpih_sqr_n_basecase+0xcc>  // b.any
    41e4:	mov	w3, w22
    41e8:	mov	x2, x21
    41ec:	mov	x1, x19
    41f0:	mov	x0, x19
    41f4:	bl	4d2c <_gcry_mpih_add_n>
    41f8:	b	41bc <_gcry_mpih_sqr_n_basecase+0xcc>
    41fc:	ldr	x25, [sp, #64]
    4200:	ldp	x19, x20, [sp, #16]
    4204:	ldp	x21, x22, [sp, #32]
    4208:	ldp	x23, x24, [sp, #48]
    420c:	ldp	x29, x30, [sp], #80
    4210:	ret

0000000000004214 <_gcry_mpih_sqr_n>:
    4214:	stp	x29, x30, [sp, #-112]!
    4218:	mov	x29, sp
    421c:	stp	x19, x20, [sp, #16]
    4220:	stp	x21, x22, [sp, #32]
    4224:	stp	x23, x24, [sp, #48]
    4228:	mov	x21, x0
    422c:	mov	x22, x1
    4230:	mov	w20, w2
    4234:	mov	x23, x3
    4238:	tbz	w20, #0, 42b0 <_gcry_mpih_sqr_n+0x9c>
    423c:	sub	w19, w2, #0x1
    4240:	cmp	w19, #0xf
    4244:	b.gt	42a4 <_gcry_mpih_sqr_n+0x90>
    4248:	mov	w2, w19
    424c:	bl	40f0 <_gcry_mpih_sqr_n_basecase>
    4250:	sxtw	x24, w19
    4254:	add	x23, x21, w19, sxtw #3
    4258:	ldr	x3, [x22, x24, lsl #3]
    425c:	mov	w2, w19
    4260:	mov	x1, x22
    4264:	mov	x0, x23
    4268:	bl	4c1c <_gcry_mpih_addmul_1>
    426c:	lsl	w1, w19, #1
    4270:	str	x0, [x21, w1, sxtw #3]
    4274:	ldr	x3, [x22, x24, lsl #3]
    4278:	mov	w2, w20
    427c:	mov	x1, x22
    4280:	mov	x0, x23
    4284:	bl	4c1c <_gcry_mpih_addmul_1>
    4288:	add	w20, w20, w19
    428c:	str	x0, [x21, w20, sxtw #3]
    4290:	ldp	x19, x20, [sp, #16]
    4294:	ldp	x21, x22, [sp, #32]
    4298:	ldp	x23, x24, [sp, #48]
    429c:	ldp	x29, x30, [sp], #112
    42a0:	ret
    42a4:	mov	w2, w19
    42a8:	bl	4214 <_gcry_mpih_sqr_n>
    42ac:	b	4250 <_gcry_mpih_sqr_n+0x3c>
    42b0:	stp	x25, x26, [sp, #64]
    42b4:	stp	x27, x28, [sp, #80]
    42b8:	asr	w19, w2, #1
    42bc:	cmp	w2, #0x1f
    42c0:	b.gt	42ec <_gcry_mpih_sqr_n+0xd8>
    42c4:	sxtw	x24, w19
    42c8:	sbfiz	x27, x19, #3, #32
    42cc:	add	x25, x1, x27
    42d0:	mov	w2, w19
    42d4:	mov	x1, x25
    42d8:	add	x0, x0, w20, sxtw #3
    42dc:	bl	40f0 <_gcry_mpih_sqr_n_basecase>
    42e0:	subs	w0, w19, #0x1
    42e4:	b.pl	430c <_gcry_mpih_sqr_n+0xf8>  // b.nfrst
    42e8:	b	432c <_gcry_mpih_sqr_n+0x118>
    42ec:	sxtw	x24, w19
    42f0:	sbfiz	x27, x19, #3, #32
    42f4:	add	x25, x1, x27
    42f8:	mov	w2, w19
    42fc:	mov	x1, x25
    4300:	add	x0, x0, w20, sxtw #3
    4304:	bl	4214 <_gcry_mpih_sqr_n>
    4308:	sub	w0, w19, #0x1
    430c:	sxtw	x0, w0
    4310:	add	x3, x22, x27
    4314:	ldr	x2, [x3, x0, lsl #3]
    4318:	ldr	x1, [x22, x0, lsl #3]
    431c:	cmp	x2, x1
    4320:	b.ne	4428 <_gcry_mpih_sqr_n+0x214>  // b.any
    4324:	sub	x0, x0, #0x1
    4328:	tbz	w0, #31, 4314 <_gcry_mpih_sqr_n+0x100>
    432c:	mov	w3, w19
    4330:	mov	x2, x22
    4334:	mov	x1, x25
    4338:	mov	x0, x21
    433c:	bl	4d70 <_gcry_mpih_sub_n>
    4340:	cmp	w19, #0xf
    4344:	b.gt	4444 <_gcry_mpih_sqr_n+0x230>
    4348:	mov	w2, w19
    434c:	mov	x1, x21
    4350:	mov	x0, x23
    4354:	bl	40f0 <_gcry_mpih_sqr_n_basecase>
    4358:	cmp	w19, #0x0
    435c:	b.gt	4458 <_gcry_mpih_sqr_n+0x244>
    4360:	add	x25, x21, w20, sxtw #3
    4364:	add	x24, x24, w20, sxtw
    4368:	add	x24, x21, x24, lsl #3
    436c:	mov	w3, w19
    4370:	mov	x2, x24
    4374:	mov	x1, x25
    4378:	mov	x0, x25
    437c:	bl	4d2c <_gcry_mpih_add_n>
    4380:	mov	x28, x0
    4384:	add	x26, x21, x27
    4388:	mov	w3, w20
    438c:	mov	x2, x23
    4390:	mov	x1, x26
    4394:	mov	x0, x26
    4398:	bl	4d70 <_gcry_mpih_sub_n>
    439c:	sub	x28, x28, x0
    43a0:	mov	w2, w19
    43a4:	mov	x1, x22
    43a8:	mov	x0, x23
    43ac:	bl	40f0 <_gcry_mpih_sqr_n_basecase>
    43b0:	mov	w3, w20
    43b4:	mov	x2, x23
    43b8:	mov	x1, x26
    43bc:	mov	x0, x26
    43c0:	bl	4d2c <_gcry_mpih_add_n>
    43c4:	adds	x28, x0, x28
    43c8:	b.ne	451c <_gcry_mpih_sqr_n+0x308>  // b.any
    43cc:	cmp	w19, #0x0
    43d0:	b.le	43ec <_gcry_mpih_sqr_n+0x1d8>
    43d4:	mov	x0, #0x0                   	// #0
    43d8:	ldr	x1, [x23, x0, lsl #3]
    43dc:	str	x1, [x21, x0, lsl #3]
    43e0:	add	x0, x0, #0x1
    43e4:	cmp	w19, w0
    43e8:	b.gt	43d8 <_gcry_mpih_sqr_n+0x1c4>
    43ec:	mov	w3, w19
    43f0:	add	x2, x23, x27
    43f4:	mov	x1, x26
    43f8:	mov	x0, x26
    43fc:	bl	4d2c <_gcry_mpih_add_n>
    4400:	cbz	x0, 4584 <_gcry_mpih_sqr_n+0x370>
    4404:	ldr	x1, [x25]
    4408:	add	x0, x1, #0x1
    440c:	str	x0, [x25]
    4410:	add	x25, x25, #0x8
    4414:	cmp	x1, x0
    4418:	b.hi	4554 <_gcry_mpih_sqr_n+0x340>  // b.pmore
    441c:	ldp	x25, x26, [sp, #64]
    4420:	ldp	x27, x28, [sp, #80]
    4424:	b	4290 <_gcry_mpih_sqr_n+0x7c>
    4428:	b.hi	432c <_gcry_mpih_sqr_n+0x118>  // b.pmore
    442c:	mov	w3, w19
    4430:	mov	x2, x25
    4434:	mov	x1, x22
    4438:	mov	x0, x21
    443c:	bl	4d70 <_gcry_mpih_sub_n>
    4440:	b	4340 <_gcry_mpih_sqr_n+0x12c>
    4444:	add	x3, x23, w20, sxtw #3
    4448:	mov	w2, w19
    444c:	mov	x1, x21
    4450:	mov	x0, x23
    4454:	bl	4214 <_gcry_mpih_sqr_n>
    4458:	add	x3, x21, w20, sxtw #3
    445c:	add	x2, x21, x24, lsl #3
    4460:	mov	x0, #0x0                   	// #0
    4464:	ldr	x1, [x3, x0, lsl #3]
    4468:	str	x1, [x2, x0, lsl #3]
    446c:	add	x0, x0, #0x1
    4470:	cmp	w19, w0
    4474:	b.gt	4464 <_gcry_mpih_sqr_n+0x250>
    4478:	sbfiz	x0, x20, #3, #32
    447c:	str	x0, [sp, #96]
    4480:	add	x25, x21, x0
    4484:	add	x0, x24, w20, sxtw
    4488:	str	x0, [sp, #104]
    448c:	add	x24, x21, x0, lsl #3
    4490:	mov	w3, w19
    4494:	mov	x2, x24
    4498:	mov	x1, x25
    449c:	mov	x0, x25
    44a0:	bl	4d2c <_gcry_mpih_add_n>
    44a4:	mov	x28, x0
    44a8:	add	x26, x21, x27
    44ac:	mov	w3, w20
    44b0:	mov	x2, x23
    44b4:	mov	x1, x26
    44b8:	mov	x0, x26
    44bc:	bl	4d70 <_gcry_mpih_sub_n>
    44c0:	sub	x28, x28, x0
    44c4:	cmp	w19, #0xf
    44c8:	b.le	43a0 <_gcry_mpih_sqr_n+0x18c>
    44cc:	ldr	x0, [sp, #96]
    44d0:	add	x3, x23, x0
    44d4:	mov	w2, w19
    44d8:	mov	x1, x22
    44dc:	mov	x0, x23
    44e0:	bl	4214 <_gcry_mpih_sqr_n>
    44e4:	mov	w3, w20
    44e8:	mov	x2, x23
    44ec:	mov	x1, x26
    44f0:	mov	x0, x26
    44f4:	bl	4d2c <_gcry_mpih_add_n>
    44f8:	adds	x28, x28, x0
    44fc:	b.eq	43d4 <_gcry_mpih_sqr_n+0x1c0>  // b.none
    4500:	ldr	x1, [sp, #104]
    4504:	ldr	x0, [x21, x1, lsl #3]
    4508:	add	x28, x0, x28
    450c:	str	x28, [x21, x1, lsl #3]
    4510:	cmp	x0, x28
    4514:	b.ls	43d4 <_gcry_mpih_sqr_n+0x1c0>  // b.plast
    4518:	b	4530 <_gcry_mpih_sqr_n+0x31c>
    451c:	ldr	x0, [x24]
    4520:	add	x28, x28, x0
    4524:	str	x28, [x24]
    4528:	cmp	x0, x28
    452c:	b.ls	43cc <_gcry_mpih_sqr_n+0x1b8>  // b.plast
    4530:	add	x24, x24, #0x8
    4534:	mov	w1, w19
    4538:	subs	w1, w1, #0x1
    453c:	b.eq	43cc <_gcry_mpih_sqr_n+0x1b8>  // b.none
    4540:	ldr	x0, [x24], #8
    4544:	add	x0, x0, #0x1
    4548:	stur	x0, [x24, #-8]
    454c:	cbz	x0, 4538 <_gcry_mpih_sqr_n+0x324>
    4550:	b	43cc <_gcry_mpih_sqr_n+0x1b8>
    4554:	subs	w20, w20, #0x1
    4558:	b.eq	4578 <_gcry_mpih_sqr_n+0x364>  // b.none
    455c:	ldr	x0, [x25], #8
    4560:	add	x0, x0, #0x1
    4564:	stur	x0, [x25, #-8]
    4568:	cbz	x0, 4554 <_gcry_mpih_sqr_n+0x340>
    456c:	ldp	x25, x26, [sp, #64]
    4570:	ldp	x27, x28, [sp, #80]
    4574:	b	4290 <_gcry_mpih_sqr_n+0x7c>
    4578:	ldp	x25, x26, [sp, #64]
    457c:	ldp	x27, x28, [sp, #80]
    4580:	b	4290 <_gcry_mpih_sqr_n+0x7c>
    4584:	ldp	x25, x26, [sp, #64]
    4588:	ldp	x27, x28, [sp, #80]
    458c:	b	4290 <_gcry_mpih_sqr_n+0x7c>

0000000000004590 <_gcry_mpih_mul_n>:
    4590:	stp	x29, x30, [sp, #-64]!
    4594:	mov	x29, sp
    4598:	stp	x19, x20, [sp, #16]
    459c:	stp	x23, x24, [sp, #48]
    45a0:	mov	x23, x0
    45a4:	mov	x19, x1
    45a8:	mov	w20, w3
    45ac:	cmp	x1, x2
    45b0:	b.eq	462c <_gcry_mpih_mul_n+0x9c>  // b.none
    45b4:	stp	x21, x22, [sp, #32]
    45b8:	mov	x21, x2
    45bc:	cmp	w3, #0xf
    45c0:	b.le	4688 <_gcry_mpih_mul_n+0xf8>
    45c4:	mov	x0, x1
    45c8:	bl	6b1c <gcry_is_secure>
    45cc:	mov	w1, #0x1                   	// #1
    45d0:	cbnz	w0, 45e4 <_gcry_mpih_mul_n+0x54>
    45d4:	mov	x0, x21
    45d8:	bl	6b1c <gcry_is_secure>
    45dc:	cmp	w0, #0x0
    45e0:	cset	w1, ne  // ne = any
    45e4:	lsl	w24, w20, #1
    45e8:	mov	w0, w24
    45ec:	bl	28 <_gcry_mpi_alloc_limb_space>
    45f0:	mov	x22, x0
    45f4:	mov	x4, x0
    45f8:	mov	w3, w20
    45fc:	mov	x2, x21
    4600:	mov	x1, x19
    4604:	mov	x0, x23
    4608:	bl	3ce4 <mul_n>
    460c:	mov	w1, w24
    4610:	mov	x0, x22
    4614:	bl	120 <_gcry_mpi_free_limb_space>
    4618:	ldp	x21, x22, [sp, #32]
    461c:	ldp	x19, x20, [sp, #16]
    4620:	ldp	x23, x24, [sp, #48]
    4624:	ldp	x29, x30, [sp], #64
    4628:	ret
    462c:	cmp	w3, #0xf
    4630:	b.gt	4640 <_gcry_mpih_mul_n+0xb0>
    4634:	mov	w2, w3
    4638:	bl	40f0 <_gcry_mpih_sqr_n_basecase>
    463c:	b	461c <_gcry_mpih_mul_n+0x8c>
    4640:	stp	x21, x22, [sp, #32]
    4644:	mov	x0, x1
    4648:	bl	6b1c <gcry_is_secure>
    464c:	lsl	w22, w20, #1
    4650:	mov	w1, w0
    4654:	mov	w0, w22
    4658:	bl	28 <_gcry_mpi_alloc_limb_space>
    465c:	mov	x21, x0
    4660:	mov	x3, x0
    4664:	mov	w2, w20
    4668:	mov	x1, x19
    466c:	mov	x0, x23
    4670:	bl	4214 <_gcry_mpih_sqr_n>
    4674:	mov	w1, w22
    4678:	mov	x0, x21
    467c:	bl	120 <_gcry_mpi_free_limb_space>
    4680:	ldp	x21, x22, [sp, #32]
    4684:	b	461c <_gcry_mpih_mul_n+0x8c>
    4688:	bl	3bb4 <mul_n_basecase>
    468c:	ldp	x21, x22, [sp, #32]
    4690:	b	461c <_gcry_mpih_mul_n+0x8c>

0000000000004694 <_gcry_mpih_release_karatsuba_ctx>:
    4694:	stp	x29, x30, [sp, #-32]!
    4698:	mov	x29, sp
    469c:	stp	x19, x20, [sp, #16]
    46a0:	mov	x19, x0
    46a4:	ldr	x0, [x0, #24]
    46a8:	cbz	x0, 46b4 <_gcry_mpih_release_karatsuba_ctx+0x20>
    46ac:	ldr	w1, [x19, #32]
    46b0:	bl	120 <_gcry_mpi_free_limb_space>
    46b4:	ldr	x0, [x19, #8]
    46b8:	cbz	x0, 46c4 <_gcry_mpih_release_karatsuba_ctx+0x30>
    46bc:	ldr	w1, [x19, #16]
    46c0:	bl	120 <_gcry_mpi_free_limb_space>
    46c4:	ldr	x20, [x19]
    46c8:	cbnz	x20, 46ec <_gcry_mpih_release_karatsuba_ctx+0x58>
    46cc:	ldp	x19, x20, [sp, #16]
    46d0:	ldp	x29, x30, [sp], #32
    46d4:	ret
    46d8:	ldr	w1, [x19, #16]
    46dc:	bl	120 <_gcry_mpi_free_limb_space>
    46e0:	mov	x0, x19
    46e4:	bl	6b08 <gcry_free>
    46e8:	cbz	x20, 46cc <_gcry_mpih_release_karatsuba_ctx+0x38>
    46ec:	mov	x19, x20
    46f0:	ldr	x20, [x20]
    46f4:	ldr	x0, [x19, #24]
    46f8:	cbz	x0, 4704 <_gcry_mpih_release_karatsuba_ctx+0x70>
    46fc:	ldr	w1, [x19, #32]
    4700:	bl	120 <_gcry_mpi_free_limb_space>
    4704:	ldr	x0, [x19, #8]
    4708:	cbnz	x0, 46d8 <_gcry_mpih_release_karatsuba_ctx+0x44>
    470c:	b	46e0 <_gcry_mpih_release_karatsuba_ctx+0x4c>

0000000000004710 <_gcry_mpih_mul>:
    4710:	stp	x29, x30, [sp, #-128]!
    4714:	mov	x29, sp
    4718:	stp	x19, x20, [sp, #16]
    471c:	stp	x21, x22, [sp, #32]
    4720:	stp	x23, x24, [sp, #48]
    4724:	str	x25, [sp, #64]
    4728:	mov	x25, x0
    472c:	mov	x23, x1
    4730:	mov	w22, w2
    4734:	mov	x20, x3
    4738:	mov	w21, w4
    473c:	sxtw	x19, w2
    4740:	cmp	w4, #0xf
    4744:	b.gt	4834 <_gcry_mpih_mul+0x124>
    4748:	mov	x0, #0x0                   	// #0
    474c:	cbz	w4, 4874 <_gcry_mpih_mul+0x164>
    4750:	ldr	x3, [x3]
    4754:	cmp	x3, #0x1
    4758:	b.hi	47a8 <_gcry_mpih_mul+0x98>  // b.pmore
    475c:	b.eq	4780 <_gcry_mpih_mul+0x70>  // b.none
    4760:	cmp	w2, #0x0
    4764:	b.le	47b0 <_gcry_mpih_mul+0xa0>
    4768:	str	xzr, [x25, x0, lsl #3]
    476c:	add	x0, x0, #0x1
    4770:	cmp	w22, w0
    4774:	b.gt	4768 <_gcry_mpih_mul+0x58>
    4778:	mov	x0, #0x0                   	// #0
    477c:	b	47b0 <_gcry_mpih_mul+0xa0>
    4780:	cmp	w2, #0x0
    4784:	b.le	47dc <_gcry_mpih_mul+0xcc>
    4788:	mov	x0, #0x0                   	// #0
    478c:	ldr	x1, [x23, x0, lsl #3]
    4790:	str	x1, [x25, x0, lsl #3]
    4794:	add	x0, x0, #0x1
    4798:	cmp	w22, w0
    479c:	b.gt	478c <_gcry_mpih_mul+0x7c>
    47a0:	mov	x0, #0x0                   	// #0
    47a4:	b	47b0 <_gcry_mpih_mul+0xa0>
    47a8:	mov	x0, x25
    47ac:	bl	4ba0 <_gcry_mpih_mul_1>
    47b0:	lsl	x24, x19, #3
    47b4:	str	x0, [x25, x19, lsl #3]
    47b8:	add	x19, x25, #0x8
    47bc:	cmp	w21, #0x1
    47c0:	b.le	4874 <_gcry_mpih_mul+0x164>
    47c4:	add	x20, x20, #0x8
    47c8:	sub	w21, w21, #0x2
    47cc:	add	x21, x21, #0x2
    47d0:	add	x21, x25, x21, lsl #3
    47d4:	mov	x25, #0x0                   	// #0
    47d8:	b	4808 <_gcry_mpih_mul+0xf8>
    47dc:	mov	x0, #0x0                   	// #0
    47e0:	b	47b0 <_gcry_mpih_mul+0xa0>
    47e4:	mov	w2, w22
    47e8:	mov	x1, x23
    47ec:	mov	x0, x19
    47f0:	bl	4c1c <_gcry_mpih_addmul_1>
    47f4:	str	x0, [x19, x24]
    47f8:	add	x19, x19, #0x8
    47fc:	add	x20, x20, #0x8
    4800:	cmp	x21, x19
    4804:	b.eq	4874 <_gcry_mpih_mul+0x164>  // b.none
    4808:	ldr	x3, [x20]
    480c:	cmp	x3, #0x1
    4810:	b.hi	47e4 <_gcry_mpih_mul+0xd4>  // b.pmore
    4814:	mov	x0, x25
    4818:	b.ne	47f4 <_gcry_mpih_mul+0xe4>  // b.any
    481c:	mov	w3, w22
    4820:	mov	x2, x23
    4824:	mov	x1, x19
    4828:	mov	x0, x19
    482c:	bl	4d2c <_gcry_mpih_add_n>
    4830:	b	47f4 <_gcry_mpih_mul+0xe4>
    4834:	mov	x2, #0x28                  	// #40
    4838:	mov	w1, #0x0                   	// #0
    483c:	add	x0, sp, #0x58
    4840:	bl	0 <grub_memset>
    4844:	add	x5, sp, #0x58
    4848:	mov	w4, w21
    484c:	mov	x3, x20
    4850:	mov	w2, w22
    4854:	mov	x1, x23
    4858:	mov	x0, x25
    485c:	bl	488c <_gcry_mpih_mul_karatsuba_case>
    4860:	add	x0, sp, #0x58
    4864:	bl	4694 <_gcry_mpih_release_karatsuba_ctx>
    4868:	add	x4, x19, w21, sxtw
    486c:	add	x21, x25, x4, lsl #3
    4870:	ldur	x0, [x21, #-8]
    4874:	ldp	x19, x20, [sp, #16]
    4878:	ldp	x21, x22, [sp, #32]
    487c:	ldp	x23, x24, [sp, #48]
    4880:	ldr	x25, [sp, #64]
    4884:	ldp	x29, x30, [sp], #128
    4888:	ret

000000000000488c <_gcry_mpih_mul_karatsuba_case>:
    488c:	stp	x29, x30, [sp, #-96]!
    4890:	mov	x29, sp
    4894:	stp	x19, x20, [sp, #16]
    4898:	stp	x21, x22, [sp, #32]
    489c:	stp	x23, x24, [sp, #48]
    48a0:	stp	x25, x26, [sp, #64]
    48a4:	mov	x21, x0
    48a8:	mov	x24, x1
    48ac:	mov	w20, w2
    48b0:	mov	x25, x3
    48b4:	mov	w19, w4
    48b8:	mov	x23, x5
    48bc:	ldr	x0, [x5, #8]
    48c0:	cbz	x0, 48d8 <_gcry_mpih_mul_karatsuba_case+0x4c>
    48c4:	ldr	w1, [x5, #20]
    48c8:	cmp	w1, w4
    48cc:	b.ge	4910 <_gcry_mpih_mul_karatsuba_case+0x84>  // b.tcont
    48d0:	ldr	w1, [x5, #16]
    48d4:	bl	120 <_gcry_mpi_free_limb_space>
    48d8:	lsl	w22, w19, #1
    48dc:	str	w22, [x23, #16]
    48e0:	mov	x0, x24
    48e4:	bl	6b1c <gcry_is_secure>
    48e8:	mov	w1, #0x1                   	// #1
    48ec:	cbnz	w0, 4900 <_gcry_mpih_mul_karatsuba_case+0x74>
    48f0:	mov	x0, x25
    48f4:	bl	6b1c <gcry_is_secure>
    48f8:	cmp	w0, #0x0
    48fc:	cset	w1, ne  // ne = any
    4900:	mov	w0, w22
    4904:	bl	28 <_gcry_mpi_alloc_limb_space>
    4908:	str	x0, [x23, #8]
    490c:	str	w19, [x23, #20]
    4910:	cmp	w19, #0xf
    4914:	b.gt	49a8 <_gcry_mpih_mul_karatsuba_case+0x11c>
    4918:	mov	w3, w19
    491c:	mov	x2, x25
    4920:	mov	x1, x24
    4924:	mov	x0, x21
    4928:	bl	3bb4 <mul_n_basecase>
    492c:	sxtw	x26, w19
    4930:	sbfiz	x22, x19, #3, #32
    4934:	add	x21, x21, x22
    4938:	add	x24, x24, x22
    493c:	sub	w20, w20, w19
    4940:	cmp	w19, w20
    4944:	b.gt	4aa4 <_gcry_mpih_mul_karatsuba_case+0x218>
    4948:	ldr	x0, [x23, #24]
    494c:	cbz	x0, 49c4 <_gcry_mpih_mul_karatsuba_case+0x138>
    4950:	ldr	w1, [x23, #36]
    4954:	cmp	w1, w19
    4958:	b.ge	4a18 <_gcry_mpih_mul_karatsuba_case+0x18c>  // b.tcont
    495c:	str	x27, [sp, #80]
    4960:	ldr	w1, [x23, #32]
    4964:	bl	120 <_gcry_mpi_free_limb_space>
    4968:	lsl	w27, w19, #1
    496c:	str	w27, [x23, #32]
    4970:	mov	x0, x24
    4974:	bl	6b1c <gcry_is_secure>
    4978:	mov	w1, #0x1                   	// #1
    497c:	cbnz	w0, 4990 <_gcry_mpih_mul_karatsuba_case+0x104>
    4980:	mov	x0, x25
    4984:	bl	6b1c <gcry_is_secure>
    4988:	cmp	w0, #0x0
    498c:	cset	w1, ne  // ne = any
    4990:	mov	w0, w27
    4994:	bl	28 <_gcry_mpi_alloc_limb_space>
    4998:	str	x0, [x23, #24]
    499c:	str	w19, [x23, #36]
    49a0:	ldr	x27, [sp, #80]
    49a4:	b	4a18 <_gcry_mpih_mul_karatsuba_case+0x18c>
    49a8:	ldr	x4, [x23, #8]
    49ac:	mov	w3, w19
    49b0:	mov	x2, x25
    49b4:	mov	x1, x24
    49b8:	mov	x0, x21
    49bc:	bl	3ce4 <mul_n>
    49c0:	b	492c <_gcry_mpih_mul_karatsuba_case+0xa0>
    49c4:	str	x27, [sp, #80]
    49c8:	b	4968 <_gcry_mpih_mul_karatsuba_case+0xdc>
    49cc:	ldr	x4, [x23, #8]
    49d0:	mov	w3, w19
    49d4:	mov	x2, x25
    49d8:	mov	x1, x24
    49dc:	ldr	x0, [x23, #24]
    49e0:	bl	3ce4 <mul_n>
    49e4:	b	4a34 <_gcry_mpih_mul_karatsuba_case+0x1a8>
    49e8:	mov	w1, w19
    49ec:	subs	w1, w1, #0x1
    49f0:	b.eq	4a08 <_gcry_mpih_mul_karatsuba_case+0x17c>  // b.none
    49f4:	ldr	x0, [x2], #8
    49f8:	add	x0, x0, #0x1
    49fc:	str	x0, [x3], #8
    4a00:	cbz	x0, 49ec <_gcry_mpih_mul_karatsuba_case+0x160>
    4a04:	b	4a74 <_gcry_mpih_mul_karatsuba_case+0x1e8>
    4a08:	add	x24, x24, x22
    4a0c:	sub	w20, w20, w19
    4a10:	cmp	w19, w20
    4a14:	b.gt	4aa4 <_gcry_mpih_mul_karatsuba_case+0x218>
    4a18:	cmp	w19, #0xf
    4a1c:	b.gt	49cc <_gcry_mpih_mul_karatsuba_case+0x140>
    4a20:	mov	w3, w19
    4a24:	mov	x2, x25
    4a28:	mov	x1, x24
    4a2c:	ldr	x0, [x23, #24]
    4a30:	bl	3bb4 <mul_n_basecase>
    4a34:	mov	w3, w19
    4a38:	ldr	x2, [x23, #24]
    4a3c:	mov	x1, x21
    4a40:	mov	x0, x21
    4a44:	bl	4d2c <_gcry_mpih_add_n>
    4a48:	add	x21, x21, x22
    4a4c:	ldr	x1, [x23, #24]
    4a50:	add	x2, x1, x22
    4a54:	add	x2, x2, #0x8
    4a58:	ldr	x1, [x1, x22]
    4a5c:	add	x0, x0, x1
    4a60:	mov	x3, x21
    4a64:	str	x0, [x3], #8
    4a68:	cmp	x1, x0
    4a6c:	b.hi	49e8 <_gcry_mpih_mul_karatsuba_case+0x15c>  // b.pmore
    4a70:	mov	w1, w19
    4a74:	cmp	x3, x2
    4a78:	b.eq	4a08 <_gcry_mpih_mul_karatsuba_case+0x17c>  // b.none
    4a7c:	sub	w1, w1, #0x1
    4a80:	cmp	w1, #0x0
    4a84:	b.le	4a08 <_gcry_mpih_mul_karatsuba_case+0x17c>
    4a88:	mov	x0, #0x0                   	// #0
    4a8c:	ldr	x4, [x2, x0, lsl #3]
    4a90:	str	x4, [x3, x0, lsl #3]
    4a94:	add	x0, x0, #0x1
    4a98:	cmp	w1, w0
    4a9c:	b.gt	4a8c <_gcry_mpih_mul_karatsuba_case+0x200>
    4aa0:	b	4a08 <_gcry_mpih_mul_karatsuba_case+0x17c>
    4aa4:	cbz	w20, 4b3c <_gcry_mpih_mul_karatsuba_case+0x2b0>
    4aa8:	cmp	w20, #0xf
    4aac:	b.le	4b54 <_gcry_mpih_mul_karatsuba_case+0x2c8>
    4ab0:	ldr	x0, [x23]
    4ab4:	cbz	x0, 4b70 <_gcry_mpih_mul_karatsuba_case+0x2e4>
    4ab8:	ldr	x5, [x23]
    4abc:	mov	w4, w20
    4ac0:	mov	x3, x24
    4ac4:	mov	w2, w19
    4ac8:	mov	x1, x25
    4acc:	ldr	x0, [x23, #8]
    4ad0:	bl	488c <_gcry_mpih_mul_karatsuba_case>
    4ad4:	mov	w3, w19
    4ad8:	ldr	x2, [x23, #8]
    4adc:	mov	x1, x21
    4ae0:	mov	x0, x21
    4ae4:	bl	4d2c <_gcry_mpih_add_n>
    4ae8:	add	x2, x21, x22
    4aec:	ldr	x3, [x23, #8]
    4af0:	add	x1, x3, x22
    4af4:	add	x1, x1, #0x8
    4af8:	ldr	x3, [x3, x26, lsl #3]
    4afc:	add	x0, x0, x3
    4b00:	add	x2, x2, #0x8
    4b04:	str	x0, [x21, x26, lsl #3]
    4b08:	cmp	x3, x0
    4b0c:	b.hi	4b84 <_gcry_mpih_mul_karatsuba_case+0x2f8>  // b.pmore
    4b10:	cmp	x2, x1
    4b14:	b.eq	4b3c <_gcry_mpih_mul_karatsuba_case+0x2b0>  // b.none
    4b18:	sub	w20, w20, #0x1
    4b1c:	cmp	w20, #0x0
    4b20:	b.le	4b3c <_gcry_mpih_mul_karatsuba_case+0x2b0>
    4b24:	mov	x0, #0x0                   	// #0
    4b28:	ldr	x3, [x1, x0, lsl #3]
    4b2c:	str	x3, [x2, x0, lsl #3]
    4b30:	add	x0, x0, #0x1
    4b34:	cmp	w20, w0
    4b38:	b.gt	4b28 <_gcry_mpih_mul_karatsuba_case+0x29c>
    4b3c:	ldp	x19, x20, [sp, #16]
    4b40:	ldp	x21, x22, [sp, #32]
    4b44:	ldp	x23, x24, [sp, #48]
    4b48:	ldp	x25, x26, [sp, #64]
    4b4c:	ldp	x29, x30, [sp], #96
    4b50:	ret
    4b54:	mov	w4, w20
    4b58:	mov	x3, x24
    4b5c:	mov	w2, w19
    4b60:	mov	x1, x25
    4b64:	ldr	x0, [x23, #8]
    4b68:	bl	4710 <_gcry_mpih_mul>
    4b6c:	b	4ad4 <_gcry_mpih_mul_karatsuba_case+0x248>
    4b70:	mov	x1, #0x28                  	// #40
    4b74:	mov	x0, #0x1                   	// #1
    4b78:	bl	6b24 <gcry_xcalloc>
    4b7c:	str	x0, [x23]
    4b80:	b	4ab8 <_gcry_mpih_mul_karatsuba_case+0x22c>
    4b84:	subs	w20, w20, #0x1
    4b88:	b.eq	4b3c <_gcry_mpih_mul_karatsuba_case+0x2b0>  // b.none
    4b8c:	ldr	x0, [x1], #8
    4b90:	add	x0, x0, #0x1
    4b94:	str	x0, [x2], #8
    4b98:	cbz	x0, 4b84 <_gcry_mpih_mul_karatsuba_case+0x2f8>
    4b9c:	b	4b10 <_gcry_mpih_mul_karatsuba_case+0x284>

0000000000004ba0 <_gcry_mpih_mul_1>:
    4ba0:	mov	x11, x0
    4ba4:	lsr	x8, x3, #32
    4ba8:	sub	w10, w2, #0x1
    4bac:	add	x10, x10, #0x1
    4bb0:	lsl	x10, x10, #3
    4bb4:	mov	x5, #0x0                   	// #0
    4bb8:	mov	x0, #0x0                   	// #0
    4bbc:	and	x7, x3, #0xffffffff
    4bc0:	mov	x12, #0x100000000           	// #4294967296
    4bc4:	ldr	x2, [x1, x5]
    4bc8:	lsr	x4, x2, #32
    4bcc:	and	x2, x2, #0xffffffff
    4bd0:	mul	x3, x2, x7
    4bd4:	mul	x6, x4, x7
    4bd8:	mul	x4, x4, x8
    4bdc:	madd	x2, x8, x2, x6
    4be0:	add	x2, x2, x3, lsr #32
    4be4:	add	x9, x4, x12
    4be8:	cmp	x6, x2
    4bec:	csel	x4, x9, x4, hi  // hi = pmore
    4bf0:	add	x3, x0, w3, uxtw
    4bf4:	add	x3, x3, x2, lsl #32
    4bf8:	cmp	x0, x3
    4bfc:	cset	x0, hi  // hi = pmore
    4c00:	add	x2, x0, x2, lsr #32
    4c04:	add	x0, x4, x2
    4c08:	str	x3, [x11, x5]
    4c0c:	add	x5, x5, #0x8
    4c10:	cmp	x5, x10
    4c14:	b.ne	4bc4 <_gcry_mpih_mul_1+0x24>  // b.any
    4c18:	ret

0000000000004c1c <_gcry_mpih_addmul_1>:
    4c1c:	mov	x8, x0
    4c20:	lsr	x9, x3, #32
    4c24:	sub	w11, w2, #0x1
    4c28:	add	x11, x11, #0x1
    4c2c:	lsl	x11, x11, #3
    4c30:	mov	x5, #0x0                   	// #0
    4c34:	mov	x0, #0x0                   	// #0
    4c38:	and	x7, x3, #0xffffffff
    4c3c:	mov	x12, #0x100000000           	// #4294967296
    4c40:	ldr	x2, [x1, x5]
    4c44:	lsr	x4, x2, #32
    4c48:	and	x2, x2, #0xffffffff
    4c4c:	mul	x3, x2, x7
    4c50:	mul	x6, x4, x7
    4c54:	mul	x4, x4, x9
    4c58:	madd	x2, x9, x2, x6
    4c5c:	add	x2, x2, x3, lsr #32
    4c60:	add	x10, x4, x12
    4c64:	cmp	x6, x2
    4c68:	csel	x4, x10, x4, hi  // hi = pmore
    4c6c:	add	x3, x0, w3, uxtw
    4c70:	add	x3, x3, x2, lsl #32
    4c74:	cmp	x0, x3
    4c78:	lsr	x2, x2, #32
    4c7c:	cinc	x2, x2, hi  // hi = pmore
    4c80:	ldr	x6, [x8, x5]
    4c84:	adds	x3, x3, x6
    4c88:	adc	x0, x2, x4
    4c8c:	str	x3, [x8, x5]
    4c90:	add	x5, x5, #0x8
    4c94:	cmp	x5, x11
    4c98:	b.ne	4c40 <_gcry_mpih_addmul_1+0x24>  // b.any
    4c9c:	ret

0000000000004ca0 <_gcry_mpih_submul_1>:
    4ca0:	mov	x8, x0
    4ca4:	lsr	x9, x3, #32
    4ca8:	sub	w11, w2, #0x1
    4cac:	add	x11, x11, #0x1
    4cb0:	lsl	x11, x11, #3
    4cb4:	mov	x5, #0x0                   	// #0
    4cb8:	mov	x0, #0x0                   	// #0
    4cbc:	and	x7, x3, #0xffffffff
    4cc0:	mov	x12, #0x100000000           	// #4294967296
    4cc4:	ldr	x2, [x1, x5]
    4cc8:	lsr	x4, x2, #32
    4ccc:	and	x2, x2, #0xffffffff
    4cd0:	mul	x3, x2, x7
    4cd4:	mul	x6, x4, x7
    4cd8:	mul	x4, x4, x9
    4cdc:	madd	x2, x9, x2, x6
    4ce0:	add	x2, x2, x3, lsr #32
    4ce4:	add	x10, x4, x12
    4ce8:	cmp	x6, x2
    4cec:	csel	x4, x10, x4, hi  // hi = pmore
    4cf0:	add	x3, x0, w3, uxtw
    4cf4:	add	x3, x3, x2, lsl #32
    4cf8:	cmp	x0, x3
    4cfc:	lsr	x2, x2, #32
    4d00:	cinc	x2, x2, hi  // hi = pmore
    4d04:	ldr	x6, [x8, x5]
    4d08:	sub	x3, x6, x3
    4d0c:	cmp	x6, x3
    4d10:	cinc	x4, x4, cc  // cc = lo, ul, last
    4d14:	add	x0, x4, x2
    4d18:	str	x3, [x8, x5]
    4d1c:	add	x5, x5, #0x8
    4d20:	cmp	x5, x11
    4d24:	b.ne	4cc4 <_gcry_mpih_submul_1+0x24>  // b.any
    4d28:	ret

0000000000004d2c <_gcry_mpih_add_n>:
    4d2c:	mov	x7, x0
    4d30:	sub	w6, w3, #0x1
    4d34:	add	x6, x6, #0x1
    4d38:	lsl	x6, x6, #3
    4d3c:	mov	x3, #0x0                   	// #0
    4d40:	mov	x0, #0x0                   	// #0
    4d44:	ldr	x5, [x2, x3]
    4d48:	ldr	x4, [x1, x3]
    4d4c:	adds	x0, x0, x5
    4d50:	cset	x5, cs  // cs = hs, nlast
    4d54:	adds	x4, x4, x0
    4d58:	cinc	x0, x5, cs  // cs = hs, nlast
    4d5c:	str	x4, [x7, x3]
    4d60:	add	x3, x3, #0x8
    4d64:	cmp	x3, x6
    4d68:	b.ne	4d44 <_gcry_mpih_add_n+0x18>  // b.any
    4d6c:	ret

0000000000004d70 <_gcry_mpih_sub_n>:
    4d70:	mov	x8, x0
    4d74:	sub	w7, w3, #0x1
    4d78:	add	x7, x7, #0x1
    4d7c:	lsl	x7, x7, #3
    4d80:	mov	x3, #0x0                   	// #0
    4d84:	mov	x0, #0x0                   	// #0
    4d88:	ldr	x4, [x2, x3]
    4d8c:	ldr	x5, [x1, x3]
    4d90:	adds	x0, x0, x4
    4d94:	cset	x6, cs  // cs = hs, nlast
    4d98:	sub	x4, x5, x0
    4d9c:	cmp	x5, x4
    4da0:	cinc	x0, x6, cc  // cc = lo, ul, last
    4da4:	str	x4, [x8, x3]
    4da8:	add	x3, x3, #0x8
    4dac:	cmp	x3, x7
    4db0:	b.ne	4d88 <_gcry_mpih_sub_n+0x18>  // b.any
    4db4:	ret

0000000000004db8 <_gcry_mpih_mod_1>:
    4db8:	mov	x7, x0
    4dbc:	mov	x0, #0x0                   	// #0
    4dc0:	cbz	w1, 4f2c <_gcry_mpih_mod_1+0x174>
    4dc4:	cmp	xzr, x2, lsr #56
    4dc8:	b.ne	4e34 <_gcry_mpih_mod_1+0x7c>  // b.any
    4dcc:	mov	x3, #0x30                  	// #48
    4dd0:	lsr	x0, x2, x3
    4dd4:	tst	w0, #0xff
    4dd8:	b.ne	4de4 <_gcry_mpih_mod_1+0x2c>  // b.any
    4ddc:	subs	x3, x3, #0x8
    4de0:	b.ne	4dd0 <_gcry_mpih_mod_1+0x18>  // b.any
    4de4:	mov	w0, #0x40                  	// #64
    4de8:	sub	w0, w0, w3
    4dec:	adrp	x4, 0 <_gcry_mpi_m_check>
    4df0:	ldr	x4, [x4]
    4df4:	lsr	x3, x2, x3
    4df8:	ldrb	w3, [x4, x3]
    4dfc:	subs	w0, w0, w3
    4e00:	b.eq	4f30 <_gcry_mpih_mod_1+0x178>  // b.none
    4e04:	lsl	x5, x2, x0
    4e08:	add	x2, x7, w1, sxtw #3
    4e0c:	ldur	x4, [x2, #-8]
    4e10:	mov	w11, #0x40                  	// #64
    4e14:	sub	w11, w11, w0
    4e18:	lsr	x2, x4, x11
    4e1c:	subs	w6, w1, #0x2
    4e20:	b.mi	4ebc <_gcry_mpih_mod_1+0x104>  // b.first
    4e24:	lsr	x8, x5, #32
    4e28:	sxtw	x6, w6
    4e2c:	and	x10, x5, #0xffffffff
    4e30:	b	4e78 <_gcry_mpih_mod_1+0xc0>
    4e34:	mov	x3, #0x38                  	// #56
    4e38:	b	4de4 <_gcry_mpih_mod_1+0x2c>
    4e3c:	sub	x2, x2, x9
    4e40:	udiv	x3, x2, x8
    4e44:	mul	x9, x3, x10
    4e48:	msub	x2, x3, x8, x2
    4e4c:	bfi	x1, x2, #32, #32
    4e50:	cmp	x9, x1
    4e54:	b.ls	4e6c <_gcry_mpih_mod_1+0xb4>  // b.plast
    4e58:	add	x1, x1, x5
    4e5c:	cmp	x9, x1
    4e60:	add	x2, x1, x5
    4e64:	ccmp	x1, x5, #0x0, hi  // hi = pmore
    4e68:	csel	x1, x2, x1, cs  // cs = hs, nlast
    4e6c:	sub	x2, x1, x9
    4e70:	sub	x6, x6, #0x1
    4e74:	tbnz	w6, #31, 4ebc <_gcry_mpih_mod_1+0x104>
    4e78:	mov	x1, x4
    4e7c:	ldr	x4, [x7, x6, lsl #3]
    4e80:	udiv	x3, x2, x8
    4e84:	mul	x9, x3, x10
    4e88:	msub	x2, x3, x8, x2
    4e8c:	lsl	x3, x1, x0
    4e90:	lsr	x1, x4, x11
    4e94:	orr	x1, x3, x1
    4e98:	extr	x2, x2, x1, #32
    4e9c:	cmp	x2, x9
    4ea0:	b.cs	4e3c <_gcry_mpih_mod_1+0x84>  // b.hs, b.nlast
    4ea4:	add	x2, x2, x5
    4ea8:	cmp	x2, x9
    4eac:	add	x3, x2, x5
    4eb0:	ccmp	x2, x5, #0x0, cc  // cc = lo, ul, last
    4eb4:	csel	x2, x3, x2, cs  // cs = hs, nlast
    4eb8:	b	4e3c <_gcry_mpih_mod_1+0x84>
    4ebc:	lsr	x7, x5, #32
    4ec0:	and	x3, x5, #0xffffffff
    4ec4:	udiv	x1, x2, x7
    4ec8:	mul	x6, x1, x3
    4ecc:	msub	x2, x1, x7, x2
    4ed0:	lsl	x4, x4, x0
    4ed4:	extr	x2, x2, x4, #32
    4ed8:	cmp	x6, x2
    4edc:	b.ls	4ef4 <_gcry_mpih_mod_1+0x13c>  // b.plast
    4ee0:	add	x2, x2, x5
    4ee4:	cmp	x6, x2
    4ee8:	add	x1, x2, x5
    4eec:	ccmp	x2, x5, #0x0, hi  // hi = pmore
    4ef0:	csel	x2, x1, x2, cs  // cs = hs, nlast
    4ef4:	sub	x2, x2, x6
    4ef8:	udiv	x6, x2, x7
    4efc:	mul	x1, x6, x3
    4f00:	msub	x2, x6, x7, x2
    4f04:	bfi	x4, x2, #32, #32
    4f08:	cmp	x4, x1
    4f0c:	b.cs	4f24 <_gcry_mpih_mod_1+0x16c>  // b.hs, b.nlast
    4f10:	add	x4, x4, x5
    4f14:	cmp	x4, x1
    4f18:	add	x2, x4, x5
    4f1c:	ccmp	x4, x5, #0x0, cc  // cc = lo, ul, last
    4f20:	csel	x4, x2, x4, cs  // cs = hs, nlast
    4f24:	sub	x1, x4, x1
    4f28:	lsr	x0, x1, x0
    4f2c:	ret
    4f30:	sub	w6, w1, #0x1
    4f34:	ldr	x0, [x7, w6, sxtw #3]
    4f38:	cmp	x0, x2
    4f3c:	b.cs	4f48 <_gcry_mpih_mod_1+0x190>  // b.hs, b.nlast
    4f40:	sub	w6, w1, #0x2
    4f44:	b	4f4c <_gcry_mpih_mod_1+0x194>
    4f48:	mov	x0, #0x0                   	// #0
    4f4c:	tbnz	w6, #31, 4f2c <_gcry_mpih_mod_1+0x174>
    4f50:	lsr	x8, x2, #32
    4f54:	sxtw	x6, w6
    4f58:	and	x9, x2, #0xffffffff
    4f5c:	b	4fa0 <_gcry_mpih_mod_1+0x1e8>
    4f60:	sub	x1, x1, x3
    4f64:	udiv	x5, x1, x8
    4f68:	mul	x3, x5, x9
    4f6c:	msub	x1, x5, x8, x1
    4f70:	bfi	x4, x1, #32, #32
    4f74:	mov	x1, x4
    4f78:	cmp	x4, x3
    4f7c:	b.cs	4f94 <_gcry_mpih_mod_1+0x1dc>  // b.hs, b.nlast
    4f80:	add	x1, x4, x2
    4f84:	cmp	x1, x3
    4f88:	add	x0, x1, x2
    4f8c:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
    4f90:	csel	x1, x0, x1, cs  // cs = hs, nlast
    4f94:	sub	x0, x1, x3
    4f98:	sub	x6, x6, #0x1
    4f9c:	tbnz	w6, #31, 4f2c <_gcry_mpih_mod_1+0x174>
    4fa0:	ldr	x4, [x7, x6, lsl #3]
    4fa4:	udiv	x1, x0, x8
    4fa8:	mul	x3, x1, x9
    4fac:	msub	x1, x1, x8, x0
    4fb0:	extr	x1, x1, x4, #32
    4fb4:	cmp	x3, x1
    4fb8:	b.ls	4f60 <_gcry_mpih_mod_1+0x1a8>  // b.plast
    4fbc:	add	x1, x1, x2
    4fc0:	cmp	x3, x1
    4fc4:	add	x0, x1, x2
    4fc8:	ccmp	x1, x2, #0x0, hi  // hi = pmore
    4fcc:	csel	x1, x0, x1, cs  // cs = hs, nlast
    4fd0:	b	4f60 <_gcry_mpih_mod_1+0x1a8>
    4fd4:	nop
	...

0000000000004fe0 <_gcry_mpih_divrem>:
    4fe0:	stp	x29, x30, [sp, #-176]!
    4fe4:	mov	x29, sp
    4fe8:	stp	x19, x20, [sp, #16]
    4fec:	stp	x23, x24, [sp, #48]
    4ff0:	stp	x25, x26, [sp, #64]
    4ff4:	stp	x27, x28, [sp, #80]
    4ff8:	mov	x25, x0
    4ffc:	mov	w24, w1
    5000:	mov	w19, w3
    5004:	mov	x27, x4
    5008:	cmp	w5, #0x1
    500c:	b.eq	50f0 <_gcry_mpih_divrem+0x110>  // b.none
    5010:	mov	w26, w5
    5014:	cmp	w5, #0x2
    5018:	b.eq	5298 <_gcry_mpih_divrem+0x2b8>  // b.none
    501c:	stp	x21, x22, [sp, #32]
    5020:	cbz	w5, 50e4 <_gcry_mpih_divrem+0x104>
    5024:	sub	w21, w3, w5
    5028:	add	x21, x2, w21, sxtw #3
    502c:	sbfiz	x1, x5, #3, #32
    5030:	str	x1, [sp, #144]
    5034:	sub	x0, x1, #0x8
    5038:	str	x0, [sp, #112]
    503c:	ldr	x20, [x4, x0]
    5040:	sub	x28, x1, #0x10
    5044:	ldr	x22, [x4, x28]
    5048:	add	x23, x21, x0
    504c:	ldr	x1, [x21, x0]
    5050:	str	xzr, [sp, #120]
    5054:	cmp	x20, x1
    5058:	b.hi	50a4 <_gcry_mpih_divrem+0xc4>  // b.pmore
    505c:	b.cc	5084 <_gcry_mpih_divrem+0xa4>  // b.lo, b.ul, b.last
    5060:	subs	w0, w5, #0x2
    5064:	b.mi	5084 <_gcry_mpih_divrem+0xa4>  // b.first
    5068:	sxtw	x0, w0
    506c:	ldr	x3, [x21, x0, lsl #3]
    5070:	ldr	x2, [x27, x0, lsl #3]
    5074:	cmp	x3, x2
    5078:	b.ne	5478 <_gcry_mpih_divrem+0x498>  // b.any
    507c:	sub	x0, x0, #0x1
    5080:	tbz	w0, #31, 506c <_gcry_mpih_divrem+0x8c>
    5084:	mov	w3, w26
    5088:	mov	x2, x27
    508c:	mov	x1, x21
    5090:	mov	x0, x21
    5094:	bl	4d70 <_gcry_mpih_sub_n>
    5098:	ldr	x1, [x23]
    509c:	mov	x0, #0x1                   	// #1
    50a0:	str	x0, [sp, #120]
    50a4:	add	w0, w19, w24
    50a8:	sub	w0, w0, w26
    50ac:	subs	w0, w0, #0x1
    50b0:	b.mi	5640 <_gcry_mpih_divrem+0x660>  // b.first
    50b4:	lsr	x2, x20, #32
    50b8:	str	x2, [sp, #128]
    50bc:	lsr	x2, x22, #32
    50c0:	str	x2, [sp, #152]
    50c4:	sxtw	x23, w0
    50c8:	sub	w0, w26, #0x2
    50cc:	str	w0, [sp, #172]
    50d0:	and	x0, x20, #0xffffffff
    50d4:	str	x0, [sp, #136]
    50d8:	and	x0, x22, #0xffffffff
    50dc:	str	x0, [sp, #160]
    50e0:	b	55d8 <_gcry_mpih_divrem+0x5f8>
    50e4:	adrp	x0, 0 <_gcry_mpi_m_check>
    50e8:	ldr	x0, [x0]
    50ec:	bl	0 <grub_fatal>
    50f0:	ldr	x5, [x4]
    50f4:	add	x0, x2, w3, sxtw #3
    50f8:	ldur	x0, [x0, #-8]
    50fc:	str	xzr, [sp, #120]
    5100:	cmp	x5, x0
    5104:	b.hi	5114 <_gcry_mpih_divrem+0x134>  // b.pmore
    5108:	sub	x0, x0, x5
    510c:	mov	x1, #0x1                   	// #1
    5110:	str	x1, [sp, #120]
    5114:	add	x25, x25, w24, sxtw #3
    5118:	subs	w4, w19, #0x2
    511c:	b.mi	51c4 <_gcry_mpih_divrem+0x1e4>  // b.first
    5120:	lsr	x7, x5, #32
    5124:	sxtw	x4, w4
    5128:	and	x9, x5, #0xffffffff
    512c:	b	5180 <_gcry_mpih_divrem+0x1a0>
    5130:	sub	x3, x3, #0x2
    5134:	add	x1, x1, x5
    5138:	sub	x1, x1, x6
    513c:	udiv	x6, x1, x7
    5140:	mul	x8, x9, x6
    5144:	msub	x1, x6, x7, x1
    5148:	bfi	x0, x1, #32, #32
    514c:	cmp	x8, x0
    5150:	b.ls	516c <_gcry_mpih_divrem+0x18c>  // b.plast
    5154:	sub	x1, x6, #0x1
    5158:	add	x0, x0, x5
    515c:	cmp	x8, x0
    5160:	ccmp	x5, x0, #0x2, hi  // hi = pmore
    5164:	b.ls	51b8 <_gcry_mpih_divrem+0x1d8>  // b.plast
    5168:	mov	x6, x1
    516c:	sub	x0, x0, x8
    5170:	orr	x3, x6, x3, lsl #32
    5174:	str	x3, [x25, x4, lsl #3]
    5178:	sub	x4, x4, #0x1
    517c:	tbnz	w4, #31, 51c4 <_gcry_mpih_divrem+0x1e4>
    5180:	udiv	x3, x0, x7
    5184:	mul	x6, x9, x3
    5188:	msub	x1, x3, x7, x0
    518c:	ldr	x0, [x2, x4, lsl #3]
    5190:	extr	x1, x1, x0, #32
    5194:	cmp	x6, x1
    5198:	b.ls	5138 <_gcry_mpih_divrem+0x158>  // b.plast
    519c:	sub	x8, x3, #0x1
    51a0:	add	x1, x1, x5
    51a4:	cmp	x6, x1
    51a8:	ccmp	x5, x1, #0x2, hi  // hi = pmore
    51ac:	b.ls	5130 <_gcry_mpih_divrem+0x150>  // b.plast
    51b0:	mov	x3, x8
    51b4:	b	5138 <_gcry_mpih_divrem+0x158>
    51b8:	sub	x6, x6, #0x2
    51bc:	add	x0, x0, x5
    51c0:	b	516c <_gcry_mpih_divrem+0x18c>
    51c4:	cmp	w24, #0x0
    51c8:	b.le	5278 <_gcry_mpih_divrem+0x298>
    51cc:	lsr	x6, x5, #32
    51d0:	sub	x8, x25, #0x8
    51d4:	sub	x25, x25, #0x10
    51d8:	sub	w24, w24, #0x1
    51dc:	sub	x25, x25, x24, lsl #3
    51e0:	and	x10, x5, #0xffffffff
    51e4:	b	5208 <_gcry_mpih_divrem+0x228>
    51e8:	sub	x3, x4, #0x2
    51ec:	add	x1, x1, x5
    51f0:	b	5238 <_gcry_mpih_divrem+0x258>
    51f4:	sub	x0, x0, x7
    51f8:	orr	x3, x9, x3, lsl #32
    51fc:	str	x3, [x8], #-8
    5200:	cmp	x8, x25
    5204:	b.eq	5278 <_gcry_mpih_divrem+0x298>  // b.none
    5208:	udiv	x4, x0, x6
    520c:	msub	x0, x4, x6, x0
    5210:	mov	x3, x4
    5214:	mul	x7, x10, x4
    5218:	lsl	x1, x0, #32
    521c:	cmp	x7, x0, lsl #32
    5220:	b.ls	5238 <_gcry_mpih_divrem+0x258>  // b.plast
    5224:	add	x1, x1, x5
    5228:	cmp	x7, x1
    522c:	sub	x3, x4, #0x1
    5230:	ccmp	x5, x1, #0x2, hi  // hi = pmore
    5234:	b.ls	51e8 <_gcry_mpih_divrem+0x208>  // b.plast
    5238:	sub	x1, x1, x7
    523c:	udiv	x4, x1, x6
    5240:	msub	x1, x4, x6, x1
    5244:	mov	x9, x4
    5248:	mul	x7, x10, x4
    524c:	lsl	x0, x1, #32
    5250:	cmp	x7, x1, lsl #32
    5254:	b.ls	51f4 <_gcry_mpih_divrem+0x214>  // b.plast
    5258:	add	x0, x0, x5
    525c:	cmp	x7, x0
    5260:	sub	x9, x4, #0x1
    5264:	ccmp	x5, x0, #0x2, hi  // hi = pmore
    5268:	b.hi	51f4 <_gcry_mpih_divrem+0x214>  // b.pmore
    526c:	sub	x9, x4, #0x2
    5270:	add	x0, x0, x5
    5274:	b	51f4 <_gcry_mpih_divrem+0x214>
    5278:	str	x0, [x2]
    527c:	ldr	x0, [sp, #120]
    5280:	ldp	x19, x20, [sp, #16]
    5284:	ldp	x23, x24, [sp, #48]
    5288:	ldp	x25, x26, [sp, #64]
    528c:	ldp	x27, x28, [sp, #80]
    5290:	ldp	x29, x30, [sp], #176
    5294:	ret
    5298:	sbfiz	x1, x3, #3, #32
    529c:	sub	x1, x1, #0x10
    52a0:	add	x7, x2, x1
    52a4:	ldr	x4, [x4, #8]
    52a8:	ldr	x5, [x27]
    52ac:	ldr	x0, [x7, #8]
    52b0:	ldr	x3, [x2, x1]
    52b4:	str	xzr, [sp, #120]
    52b8:	cmp	x4, x0
    52bc:	b.hi	52e0 <_gcry_mpih_divrem+0x300>  // b.pmore
    52c0:	ccmp	x5, x3, #0x0, cs  // cs = hs, nlast
    52c4:	b.hi	52e0 <_gcry_mpih_divrem+0x300>  // b.pmore
    52c8:	sub	x1, x3, x5
    52cc:	cmp	x3, x1
    52d0:	sbc	x0, x0, x4
    52d4:	mov	x3, x1
    52d8:	mov	x1, #0x1                   	// #1
    52dc:	str	x1, [sp, #120]
    52e0:	add	w19, w19, w24
    52e4:	subs	w19, w19, #0x3
    52e8:	b.mi	546c <_gcry_mpih_divrem+0x48c>  // b.first
    52ec:	lsr	x8, x4, #32
    52f0:	lsr	x11, x5, #32
    52f4:	sxtw	x6, w19
    52f8:	and	x10, x4, #0xffffffff
    52fc:	and	x9, x5, #0xffffffff
    5300:	mov	x12, #0x100000000           	// #4294967296
    5304:	neg	x14, x5
    5308:	mov	x13, #0xffffffffffffffff    	// #-1
    530c:	b	5438 <_gcry_mpih_divrem+0x458>
    5310:	str	xzr, [x7]
    5314:	b	5444 <_gcry_mpih_divrem+0x464>
    5318:	cmp	x5, #0x0
    531c:	cset	x2, ne  // ne = any
    5320:	sub	x2, x5, x2
    5324:	mov	x1, x14
    5328:	mov	x15, #0xffffffffffffffff    	// #-1
    532c:	b	53d0 <_gcry_mpih_divrem+0x3f0>
    5330:	udiv	x15, x0, x8
    5334:	mul	x2, x10, x15
    5338:	msub	x1, x15, x8, x0
    533c:	extr	x1, x1, x3, #32
    5340:	cmp	x2, x1
    5344:	b.ls	5360 <_gcry_mpih_divrem+0x380>  // b.plast
    5348:	sub	x0, x15, #0x1
    534c:	add	x1, x1, x4
    5350:	cmp	x2, x1
    5354:	ccmp	x4, x1, #0x2, hi  // hi = pmore
    5358:	b.ls	53d8 <_gcry_mpih_divrem+0x3f8>  // b.plast
    535c:	mov	x15, x0
    5360:	sub	x1, x1, x2
    5364:	udiv	x2, x1, x8
    5368:	mul	x0, x10, x2
    536c:	msub	x1, x2, x8, x1
    5370:	bfi	x3, x1, #32, #32
    5374:	cmp	x0, x3
    5378:	b.ls	5394 <_gcry_mpih_divrem+0x3b4>  // b.plast
    537c:	sub	x1, x2, #0x1
    5380:	add	x3, x3, x4
    5384:	cmp	x0, x3
    5388:	ccmp	x4, x3, #0x2, hi  // hi = pmore
    538c:	b.ls	53e4 <_gcry_mpih_divrem+0x404>  // b.plast
    5390:	mov	x2, x1
    5394:	sub	x0, x3, x0
    5398:	orr	x15, x2, x15, lsl #32
    539c:	lsr	x1, x15, #32
    53a0:	and	x3, x15, #0xffffffff
    53a4:	mul	x16, x9, x3
    53a8:	mul	x3, x11, x3
    53ac:	mul	x2, x11, x1
    53b0:	madd	x1, x1, x9, x3
    53b4:	add	x1, x1, x16, lsr #32
    53b8:	add	x17, x2, x12
    53bc:	cmp	x3, x1
    53c0:	csel	x2, x17, x2, hi  // hi = pmore
    53c4:	add	x2, x2, x1, lsr #32
    53c8:	and	x16, x16, #0xffffffff
    53cc:	add	x1, x16, x1, lsl #32
    53d0:	ldr	x16, [x7]
    53d4:	b	540c <_gcry_mpih_divrem+0x42c>
    53d8:	sub	x15, x15, #0x2
    53dc:	add	x1, x1, x4
    53e0:	b	5360 <_gcry_mpih_divrem+0x380>
    53e4:	sub	x2, x2, #0x2
    53e8:	add	x3, x3, x4
    53ec:	b	5394 <_gcry_mpih_divrem+0x3b4>
    53f0:	sub	x15, x15, #0x1
    53f4:	sub	x3, x1, x5
    53f8:	cmp	x1, x3
    53fc:	sbc	x2, x2, xzr
    5400:	adds	x0, x0, x4
    5404:	b.cs	5420 <_gcry_mpih_divrem+0x440>  // b.hs, b.nlast
    5408:	mov	x1, x3
    540c:	cmp	x2, x0
    5410:	b.hi	53f0 <_gcry_mpih_divrem+0x410>  // b.pmore
    5414:	ccmp	x1, x16, #0x0, eq  // eq = none
    5418:	b.hi	53f0 <_gcry_mpih_divrem+0x410>  // b.pmore
    541c:	mov	x3, x1
    5420:	str	x15, [x25, x6, lsl #3]
    5424:	sub	x3, x16, x3
    5428:	cmp	x16, x3
    542c:	sbc	x0, x0, x2
    5430:	sub	x6, x6, #0x1
    5434:	tbnz	w6, #31, 546c <_gcry_mpih_divrem+0x48c>
    5438:	cmp	w24, w6
    543c:	b.gt	5310 <_gcry_mpih_divrem+0x330>
    5440:	sub	x7, x7, #0x8
    5444:	cmp	x4, x0
    5448:	b.ne	5330 <_gcry_mpih_divrem+0x350>  // b.any
    544c:	adds	x0, x0, x3
    5450:	b.cc	5318 <_gcry_mpih_divrem+0x338>  // b.lo, b.ul, b.last
    5454:	ldr	x3, [x7]
    5458:	sub	x0, x0, x5
    545c:	adds	x3, x3, x5
    5460:	cinc	x0, x0, cs  // cs = hs, nlast
    5464:	str	x13, [x25, x6, lsl #3]
    5468:	b	5430 <_gcry_mpih_divrem+0x450>
    546c:	str	x0, [x7, #8]
    5470:	str	x3, [x7]
    5474:	b	527c <_gcry_mpih_divrem+0x29c>
    5478:	b.hi	5084 <_gcry_mpih_divrem+0xa4>  // b.pmore
    547c:	str	xzr, [sp, #120]
    5480:	b	50a4 <_gcry_mpih_divrem+0xc4>
    5484:	ldr	x0, [sp, #112]
    5488:	ldr	x0, [x21, x0]
    548c:	str	x0, [sp, #104]
    5490:	ldr	w0, [sp, #172]
    5494:	tbnz	w0, #31, 54b0 <_gcry_mpih_divrem+0x4d0>
    5498:	sxtw	x0, w0
    549c:	add	x3, x21, #0x8
    54a0:	ldr	x2, [x21, x0, lsl #3]
    54a4:	str	x2, [x3, x0, lsl #3]
    54a8:	sub	x0, x0, #0x1
    54ac:	tbz	w0, #31, 54a0 <_gcry_mpih_divrem+0x4c0>
    54b0:	str	xzr, [x21]
    54b4:	b	55f0 <_gcry_mpih_divrem+0x610>
    54b8:	ldr	x0, [sp, #128]
    54bc:	udiv	x19, x1, x0
    54c0:	ldr	x2, [sp, #136]
    54c4:	mul	x2, x2, x19
    54c8:	msub	x1, x19, x0, x1
    54cc:	ldr	x0, [sp, #112]
    54d0:	ldr	x0, [x21, x0]
    54d4:	extr	x1, x1, x0, #32
    54d8:	cmp	x2, x1
    54dc:	b.ls	54f4 <_gcry_mpih_divrem+0x514>  // b.plast
    54e0:	add	x1, x1, x20
    54e4:	cmp	x2, x1
    54e8:	ccmp	x20, x1, #0x2, hi  // hi = pmore
    54ec:	b.ls	5578 <_gcry_mpih_divrem+0x598>  // b.plast
    54f0:	sub	x19, x19, #0x1
    54f4:	sub	x1, x1, x2
    54f8:	ldr	x4, [sp, #128]
    54fc:	udiv	x2, x1, x4
    5500:	ldr	x3, [sp, #136]
    5504:	mul	x3, x3, x2
    5508:	msub	x1, x2, x4, x1
    550c:	bfi	x0, x1, #32, #32
    5510:	cmp	x3, x0
    5514:	b.ls	552c <_gcry_mpih_divrem+0x54c>  // b.plast
    5518:	add	x0, x0, x20
    551c:	cmp	x3, x0
    5520:	ccmp	x20, x0, #0x2, hi  // hi = pmore
    5524:	b.ls	5584 <_gcry_mpih_divrem+0x5a4>  // b.plast
    5528:	sub	x2, x2, #0x1
    552c:	sub	x0, x0, x3
    5530:	orr	x19, x2, x19, lsl #32
    5534:	lsr	x1, x19, #32
    5538:	and	x3, x19, #0xffffffff
    553c:	ldr	x5, [sp, #160]
    5540:	mul	x4, x5, x3
    5544:	ldr	x2, [sp, #152]
    5548:	mul	x3, x2, x3
    554c:	mul	x2, x2, x1
    5550:	madd	x1, x1, x5, x3
    5554:	add	x1, x1, x4, lsr #32
    5558:	mov	x5, #0x100000000           	// #4294967296
    555c:	add	x5, x2, x5
    5560:	cmp	x3, x1
    5564:	csel	x2, x5, x2, hi  // hi = pmore
    5568:	add	x2, x2, x1, lsr #32
    556c:	and	x4, x4, #0xffffffff
    5570:	add	x1, x4, x1, lsl #32
    5574:	b	55a8 <_gcry_mpih_divrem+0x5c8>
    5578:	sub	x19, x19, #0x2
    557c:	add	x1, x1, x20
    5580:	b	54f4 <_gcry_mpih_divrem+0x514>
    5584:	sub	x2, x2, #0x2
    5588:	add	x0, x0, x20
    558c:	b	552c <_gcry_mpih_divrem+0x54c>
    5590:	sub	x19, x19, #0x1
    5594:	adds	x0, x0, x20
    5598:	b.cs	55fc <_gcry_mpih_divrem+0x61c>  // b.hs, b.nlast
    559c:	cmp	x1, x22
    55a0:	sbc	x2, x2, xzr
    55a4:	sub	x1, x1, x22
    55a8:	cmp	x2, x0
    55ac:	b.hi	5590 <_gcry_mpih_divrem+0x5b0>  // b.pmore
    55b0:	b.ne	55fc <_gcry_mpih_divrem+0x61c>  // b.any
    55b4:	ldr	x3, [x21, x28]
    55b8:	cmp	x3, x1
    55bc:	b.cc	5590 <_gcry_mpih_divrem+0x5b0>  // b.lo, b.ul, b.last
    55c0:	b	55fc <_gcry_mpih_divrem+0x61c>
    55c4:	str	x19, [x25, x23, lsl #3]
    55c8:	ldr	x0, [sp, #112]
    55cc:	ldr	x1, [x21, x0]
    55d0:	sub	x23, x23, #0x1
    55d4:	tbnz	w23, #31, 5638 <_gcry_mpih_divrem+0x658>
    55d8:	cmp	w24, w23
    55dc:	b.gt	5484 <_gcry_mpih_divrem+0x4a4>
    55e0:	sub	x21, x21, #0x8
    55e4:	ldr	x0, [sp, #144]
    55e8:	ldr	x0, [x21, x0]
    55ec:	str	x0, [sp, #104]
    55f0:	mov	x19, #0xffffffffffffffff    	// #-1
    55f4:	cmp	x20, x1
    55f8:	b.ne	54b8 <_gcry_mpih_divrem+0x4d8>  // b.any
    55fc:	mov	x3, x19
    5600:	mov	w2, w26
    5604:	mov	x1, x27
    5608:	mov	x0, x21
    560c:	bl	4ca0 <_gcry_mpih_submul_1>
    5610:	ldr	x1, [sp, #104]
    5614:	cmp	x1, x0
    5618:	b.eq	55c4 <_gcry_mpih_divrem+0x5e4>  // b.none
    561c:	mov	w3, w26
    5620:	mov	x2, x27
    5624:	mov	x1, x21
    5628:	mov	x0, x21
    562c:	bl	4d2c <_gcry_mpih_add_n>
    5630:	sub	x19, x19, #0x1
    5634:	b	55c4 <_gcry_mpih_divrem+0x5e4>
    5638:	ldp	x21, x22, [sp, #32]
    563c:	b	527c <_gcry_mpih_divrem+0x29c>
    5640:	ldp	x21, x22, [sp, #32]
    5644:	b	527c <_gcry_mpih_divrem+0x29c>
	...

0000000000005650 <_gcry_mpih_divmod_1>:
    5650:	mov	x6, x0
    5654:	mov	w5, w2
    5658:	mov	x0, #0x0                   	// #0
    565c:	cbz	w2, 57fc <_gcry_mpih_divmod_1+0x1ac>
    5660:	cmp	xzr, x3, lsr #56
    5664:	b.ne	56d4 <_gcry_mpih_divmod_1+0x84>  // b.any
    5668:	mov	x2, #0x30                  	// #48
    566c:	lsr	x0, x3, x2
    5670:	tst	w0, #0xff
    5674:	b.ne	5680 <_gcry_mpih_divmod_1+0x30>  // b.any
    5678:	subs	x2, x2, #0x8
    567c:	b.ne	566c <_gcry_mpih_divmod_1+0x1c>  // b.any
    5680:	mov	w0, #0x40                  	// #64
    5684:	sub	w0, w0, w2
    5688:	adrp	x4, 0 <_gcry_mpi_m_check>
    568c:	ldr	x4, [x4]
    5690:	lsr	x2, x3, x2
    5694:	ldrb	w12, [x4, x2]
    5698:	subs	w12, w0, w12
    569c:	b.eq	5818 <_gcry_mpih_divmod_1+0x1c8>  // b.none
    56a0:	lsl	x8, x3, x12
    56a4:	add	x0, x1, w5, sxtw #3
    56a8:	ldur	x3, [x0, #-8]
    56ac:	mov	w14, #0x40                  	// #64
    56b0:	sub	w14, w14, w12
    56b4:	lsr	x2, x3, x14
    56b8:	subs	w5, w5, #0x2
    56bc:	b.mi	577c <_gcry_mpih_divmod_1+0x12c>  // b.first
    56c0:	lsr	x10, x8, #32
    56c4:	sxtw	x5, w5
    56c8:	and	x13, x8, #0xffffffff
    56cc:	add	x15, x6, #0x8
    56d0:	b	572c <_gcry_mpih_divmod_1+0xdc>
    56d4:	mov	x2, #0x38                  	// #56
    56d8:	b	5680 <_gcry_mpih_divmod_1+0x30>
    56dc:	sub	x7, x7, #0x2
    56e0:	add	x4, x4, x8
    56e4:	sub	x4, x4, x0
    56e8:	udiv	x9, x4, x10
    56ec:	mul	x11, x9, x13
    56f0:	msub	x4, x9, x10, x4
    56f4:	bfi	x2, x4, #32, #32
    56f8:	cmp	x11, x2
    56fc:	b.ls	5718 <_gcry_mpih_divmod_1+0xc8>  // b.plast
    5700:	sub	x0, x9, #0x1
    5704:	add	x2, x2, x8
    5708:	cmp	x11, x2
    570c:	ccmp	x2, x8, #0x0, hi  // hi = pmore
    5710:	b.cs	5770 <_gcry_mpih_divmod_1+0x120>  // b.hs, b.nlast
    5714:	mov	x9, x0
    5718:	sub	x2, x2, x11
    571c:	orr	x7, x9, x7, lsl #32
    5720:	str	x7, [x15, x5, lsl #3]
    5724:	sub	x5, x5, #0x1
    5728:	tbnz	w5, #31, 577c <_gcry_mpih_divmod_1+0x12c>
    572c:	mov	x9, x3
    5730:	ldr	x3, [x1, x5, lsl #3]
    5734:	udiv	x7, x2, x10
    5738:	mul	x0, x13, x7
    573c:	msub	x4, x7, x10, x2
    5740:	lsl	x9, x9, x12
    5744:	lsr	x2, x3, x14
    5748:	orr	x2, x9, x2
    574c:	extr	x4, x4, x2, #32
    5750:	cmp	x0, x4
    5754:	b.ls	56e4 <_gcry_mpih_divmod_1+0x94>  // b.plast
    5758:	add	x4, x4, x8
    575c:	cmp	x4, x0
    5760:	ccmp	x4, x8, #0x0, cc  // cc = lo, ul, last
    5764:	b.cs	56dc <_gcry_mpih_divmod_1+0x8c>  // b.hs, b.nlast
    5768:	sub	x7, x7, #0x1
    576c:	b	56e4 <_gcry_mpih_divmod_1+0x94>
    5770:	sub	x9, x9, #0x2
    5774:	add	x2, x2, x8
    5778:	b	5718 <_gcry_mpih_divmod_1+0xc8>
    577c:	lsr	x4, x8, #32
    5780:	and	x0, x8, #0xffffffff
    5784:	udiv	x1, x2, x4
    5788:	mul	x5, x0, x1
    578c:	msub	x2, x1, x4, x2
    5790:	lsl	x3, x3, x12
    5794:	extr	x2, x2, x3, #32
    5798:	cmp	x5, x2
    579c:	b.ls	57b8 <_gcry_mpih_divmod_1+0x168>  // b.plast
    57a0:	sub	x7, x1, #0x1
    57a4:	add	x2, x2, x8
    57a8:	cmp	x5, x2
    57ac:	ccmp	x2, x8, #0x0, hi  // hi = pmore
    57b0:	b.cs	5800 <_gcry_mpih_divmod_1+0x1b0>  // b.hs, b.nlast
    57b4:	mov	x1, x7
    57b8:	sub	x2, x2, x5
    57bc:	udiv	x5, x2, x4
    57c0:	mul	x0, x0, x5
    57c4:	msub	x2, x5, x4, x2
    57c8:	bfi	x3, x2, #32, #32
    57cc:	cmp	x0, x3
    57d0:	b.ls	57ec <_gcry_mpih_divmod_1+0x19c>  // b.plast
    57d4:	sub	x2, x5, #0x1
    57d8:	add	x3, x3, x8
    57dc:	cmp	x0, x3
    57e0:	ccmp	x3, x8, #0x0, hi  // hi = pmore
    57e4:	b.cs	580c <_gcry_mpih_divmod_1+0x1bc>  // b.hs, b.nlast
    57e8:	mov	x5, x2
    57ec:	orr	x1, x5, x1, lsl #32
    57f0:	str	x1, [x6]
    57f4:	sub	x0, x3, x0
    57f8:	lsr	x0, x0, x12
    57fc:	ret
    5800:	sub	x1, x1, #0x2
    5804:	add	x2, x2, x8
    5808:	b	57b8 <_gcry_mpih_divmod_1+0x168>
    580c:	sub	x5, x5, #0x2
    5810:	add	x3, x3, x8
    5814:	b	57ec <_gcry_mpih_divmod_1+0x19c>
    5818:	sub	w8, w5, #0x1
    581c:	sxtw	x2, w8
    5820:	ldr	x0, [x1, x2, lsl #3]
    5824:	cmp	x0, x3
    5828:	b.cs	5838 <_gcry_mpih_divmod_1+0x1e8>  // b.hs, b.nlast
    582c:	sub	w8, w5, #0x2
    5830:	str	xzr, [x6, x2, lsl #3]
    5834:	b	583c <_gcry_mpih_divmod_1+0x1ec>
    5838:	mov	x0, #0x0                   	// #0
    583c:	tbnz	w8, #31, 57fc <_gcry_mpih_divmod_1+0x1ac>
    5840:	lsr	x10, x3, #32
    5844:	sxtw	x8, w8
    5848:	and	x11, x3, #0xffffffff
    584c:	b	58a4 <_gcry_mpih_divmod_1+0x254>
    5850:	sub	x7, x7, #0x2
    5854:	add	x2, x2, x3
    5858:	sub	x4, x2, x4
    585c:	udiv	x9, x4, x10
    5860:	mul	x2, x9, x11
    5864:	msub	x4, x9, x10, x4
    5868:	mov	x0, x5
    586c:	bfi	x0, x4, #32, #32
    5870:	cmp	x0, x2
    5874:	b.cs	5890 <_gcry_mpih_divmod_1+0x240>  // b.hs, b.nlast
    5878:	sub	x4, x9, #0x1
    587c:	add	x0, x0, x3
    5880:	cmp	x0, x2
    5884:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
    5888:	b.cs	58d8 <_gcry_mpih_divmod_1+0x288>  // b.hs, b.nlast
    588c:	mov	x9, x4
    5890:	sub	x0, x0, x2
    5894:	orr	x7, x9, x7, lsl #32
    5898:	str	x7, [x6, x8, lsl #3]
    589c:	sub	x8, x8, #0x1
    58a0:	tbnz	w8, #31, 57fc <_gcry_mpih_divmod_1+0x1ac>
    58a4:	ldr	x5, [x1, x8, lsl #3]
    58a8:	udiv	x7, x0, x10
    58ac:	mul	x4, x7, x11
    58b0:	msub	x2, x7, x10, x0
    58b4:	extr	x2, x2, x5, #32
    58b8:	cmp	x4, x2
    58bc:	b.ls	5858 <_gcry_mpih_divmod_1+0x208>  // b.plast
    58c0:	add	x2, x2, x3
    58c4:	cmp	x2, x4
    58c8:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
    58cc:	b.cs	5850 <_gcry_mpih_divmod_1+0x200>  // b.hs, b.nlast
    58d0:	sub	x7, x7, #0x1
    58d4:	b	5858 <_gcry_mpih_divmod_1+0x208>
    58d8:	sub	x9, x9, #0x2
    58dc:	add	x0, x0, x3
    58e0:	b	5890 <_gcry_mpih_divmod_1+0x240>
    58e4:	nop
	...

00000000000058f0 <do_get_buffer>:
    58f0:	stp	x29, x30, [sp, #-48]!
    58f4:	mov	x29, sp
    58f8:	stp	x19, x20, [sp, #16]
    58fc:	str	x21, [sp, #32]
    5900:	mov	x21, x0
    5904:	mov	x19, x1
    5908:	cbz	x2, 5914 <do_get_buffer+0x24>
    590c:	ldr	w0, [x0, #8]
    5910:	str	w0, [x2]
    5914:	ldr	w1, [x21, #4]
    5918:	lsl	w1, w1, #3
    591c:	str	w1, [x19]
    5920:	cmp	w1, #0x0
    5924:	csinc	w1, w1, wzr, ne  // ne = any
    5928:	mov	w0, w1
    592c:	cbnz	w3, 5938 <do_get_buffer+0x48>
    5930:	ldr	w1, [x21, #12]
    5934:	tbz	w1, #0, 59f4 <do_get_buffer+0x104>
    5938:	bl	6af4 <gcry_malloc_secure>
    593c:	mov	x20, x0
    5940:	cbz	x20, 59e0 <do_get_buffer+0xf0>
    5944:	ldr	w4, [x21, #4]
    5948:	subs	w4, w4, #0x1
    594c:	b.mi	59a8 <do_get_buffer+0xb8>  // b.first
    5950:	ldr	x1, [x21, #16]
    5954:	sxtw	x4, w4
    5958:	mov	x2, x20
    595c:	ldr	x3, [x1, x4, lsl #3]
    5960:	lsr	x0, x3, #56
    5964:	strb	w0, [x2]
    5968:	lsr	x0, x3, #48
    596c:	strb	w0, [x2, #1]
    5970:	lsr	x0, x3, #40
    5974:	strb	w0, [x2, #2]
    5978:	lsr	x0, x3, #32
    597c:	strb	w0, [x2, #3]
    5980:	lsr	x0, x3, #24
    5984:	strb	w0, [x2, #4]
    5988:	lsr	x0, x3, #16
    598c:	strb	w0, [x2, #5]
    5990:	lsr	x0, x3, #8
    5994:	strb	w0, [x2, #6]
    5998:	add	x2, x2, #0x8
    599c:	sturb	w3, [x2, #-1]
    59a0:	sub	x4, x4, #0x1
    59a4:	tbz	w4, #31, 595c <do_get_buffer+0x6c>
    59a8:	ldr	w2, [x19]
    59ac:	mov	x1, x20
    59b0:	cbz	w2, 59e0 <do_get_buffer+0xf0>
    59b4:	ldrb	w3, [x1]
    59b8:	cbnz	w3, 59cc <do_get_buffer+0xdc>
    59bc:	add	x1, x1, #0x1
    59c0:	sub	w2, w2, #0x1
    59c4:	str	w2, [x19]
    59c8:	cbnz	w2, 59b4 <do_get_buffer+0xc4>
    59cc:	cmp	x20, x1
    59d0:	b.eq	59e0 <do_get_buffer+0xf0>  // b.none
    59d4:	mov	w2, w2
    59d8:	mov	x0, x20
    59dc:	bl	0 <grub_memmove>
    59e0:	mov	x0, x20
    59e4:	ldp	x19, x20, [sp, #16]
    59e8:	ldr	x21, [sp, #32]
    59ec:	ldp	x29, x30, [sp], #48
    59f0:	ret
    59f4:	bl	6ae0 <gcry_malloc>
    59f8:	mov	x20, x0
    59fc:	b	5940 <do_get_buffer+0x50>

0000000000005a00 <gcry_mpi_dump>:
    5a00:	stp	x29, x30, [sp, #-64]!
    5a04:	mov	x29, sp
    5a08:	stp	x21, x22, [sp, #32]
    5a0c:	mov	x21, x0
    5a10:	adrp	x0, 0 <_gcry_mpi_m_check>
    5a14:	ldr	x0, [x0]
    5a18:	bl	6c1c <_gcry_log_printf>
    5a1c:	cbz	x21, 5a50 <gcry_mpi_dump+0x50>
    5a20:	stp	x19, x20, [sp, #16]
    5a24:	ldr	w0, [x21, #8]
    5a28:	cbnz	w0, 5a60 <gcry_mpi_dump+0x60>
    5a2c:	ldr	w19, [x21, #4]
    5a30:	cmp	w19, #0x0
    5a34:	b.le	5aa4 <gcry_mpi_dump+0xa4>
    5a38:	str	x23, [sp, #48]
    5a3c:	sbfiz	x20, x19, #3, #32
    5a40:	sub	x20, x20, #0x8
    5a44:	adrp	x22, 0 <_gcry_mpi_m_check>
    5a48:	adrp	x23, 0 <_gcry_mpi_m_check>
    5a4c:	b	5a8c <gcry_mpi_dump+0x8c>
    5a50:	adrp	x0, 0 <_gcry_mpi_m_check>
    5a54:	ldr	x0, [x0]
    5a58:	bl	6c1c <_gcry_log_printf>
    5a5c:	b	5ab0 <gcry_mpi_dump+0xb0>
    5a60:	adrp	x0, 0 <_gcry_mpi_m_check>
    5a64:	ldr	x0, [x0]
    5a68:	bl	6c1c <_gcry_log_printf>
    5a6c:	b	5a2c <gcry_mpi_dump+0x2c>
    5a70:	ldr	x0, [x23]
    5a74:	ldr	x1, [x21, #16]
    5a78:	ldr	x1, [x1, x20]
    5a7c:	bl	6c1c <_gcry_log_printf>
    5a80:	sub	x20, x20, #0x8
    5a84:	subs	w19, w19, #0x1
    5a88:	b.eq	5aa0 <gcry_mpi_dump+0xa0>  // b.none
    5a8c:	ldr	w0, [x21, #4]
    5a90:	cmp	w0, w19
    5a94:	b.eq	5a70 <gcry_mpi_dump+0x70>  // b.none
    5a98:	ldr	x0, [x22]
    5a9c:	b	5a74 <gcry_mpi_dump+0x74>
    5aa0:	ldr	x23, [sp, #48]
    5aa4:	ldr	w0, [x21, #4]
    5aa8:	cbz	w0, 5abc <gcry_mpi_dump+0xbc>
    5aac:	ldp	x19, x20, [sp, #16]
    5ab0:	ldp	x21, x22, [sp, #32]
    5ab4:	ldp	x29, x30, [sp], #64
    5ab8:	ret
    5abc:	adrp	x0, 0 <_gcry_mpi_m_check>
    5ac0:	ldr	x0, [x0]
    5ac4:	bl	6c1c <_gcry_log_printf>
    5ac8:	ldp	x19, x20, [sp, #16]
    5acc:	b	5ab0 <gcry_mpi_dump+0xb0>
	...

0000000000005b00 <_gcry_log_mpidump>:
    5b00:	stp	x29, x30, [sp, #-32]!
    5b04:	mov	x29, sp
    5b08:	str	x19, [sp, #16]
    5b0c:	mov	x19, x1
    5b10:	mov	x1, x0
    5b14:	adrp	x0, 0 <_gcry_mpi_m_check>
    5b18:	ldr	x0, [x0]
    5b1c:	bl	6c1c <_gcry_log_printf>
    5b20:	mov	x0, x19
    5b24:	bl	5a00 <gcry_mpi_dump>
    5b28:	adrp	x0, 0 <_gcry_mpi_m_check>
    5b2c:	ldr	x0, [x0]
    5b30:	bl	6c1c <_gcry_log_printf>
    5b34:	ldr	x19, [sp, #16]
    5b38:	ldp	x29, x30, [sp], #32
    5b3c:	ret
	...

0000000000005b50 <_gcry_mpi_get_buffer>:
    5b50:	stp	x29, x30, [sp, #-16]!
    5b54:	mov	x29, sp
    5b58:	mov	w3, #0x0                   	// #0
    5b5c:	bl	58f0 <do_get_buffer>
    5b60:	ldp	x29, x30, [sp], #16
    5b64:	ret

0000000000005b68 <_gcry_mpi_get_secure_buffer>:
    5b68:	stp	x29, x30, [sp, #-16]!
    5b6c:	mov	x29, sp
    5b70:	mov	w3, #0x1                   	// #1
    5b74:	bl	58f0 <do_get_buffer>
    5b78:	ldp	x29, x30, [sp], #16
    5b7c:	ret

0000000000005b80 <_gcry_mpi_set_buffer>:
    5b80:	stp	x29, x30, [sp, #-64]!
    5b84:	mov	x29, sp
    5b88:	stp	x19, x20, [sp, #16]
    5b8c:	stp	x21, x22, [sp, #32]
    5b90:	str	x23, [sp, #48]
    5b94:	mov	x19, x0
    5b98:	mov	x20, x1
    5b9c:	mov	w22, w2
    5ba0:	mov	w23, w3
    5ba4:	add	w0, w2, #0x7
    5ba8:	lsr	w21, w0, #3
    5bac:	ldr	w1, [x19]
    5bb0:	cmp	w1, w0, lsr #3
    5bb4:	b.lt	5d1c <_gcry_mpi_set_buffer+0x19c>  // b.tstop
    5bb8:	str	w23, [x19, #8]
    5bbc:	mov	w5, w22
    5bc0:	sub	x5, x5, #0x1
    5bc4:	add	x5, x20, x5
    5bc8:	add	x8, x20, #0x8
    5bcc:	cmp	x5, x8
    5bd0:	b.cc	5d2c <_gcry_mpi_set_buffer+0x1ac>  // b.lo, b.ul, b.last
    5bd4:	mov	x2, x5
    5bd8:	mov	x7, x5
    5bdc:	ldrb	w6, [x2]
    5be0:	ldurb	w3, [x2, #-1]
    5be4:	ldurb	w1, [x2, #-2]
    5be8:	lsl	x1, x1, #16
    5bec:	orr	x3, x1, x3, lsl #8
    5bf0:	ldurb	w1, [x2, #-3]
    5bf4:	ldurb	w4, [x2, #-4]
    5bf8:	lsl	x4, x4, #32
    5bfc:	orr	x1, x4, x1, lsl #24
    5c00:	orr	x3, x3, x1
    5c04:	ldurb	w1, [x2, #-5]
    5c08:	ldurb	w4, [x2, #-6]
    5c0c:	lsl	x4, x4, #48
    5c10:	orr	x1, x4, x1, lsl #40
    5c14:	orr	x3, x3, x1
    5c18:	mov	x4, x2
    5c1c:	sub	x2, x2, #0x8
    5c20:	ldrb	w0, [x2, #1]
    5c24:	orr	x0, x6, x0, lsl #56
    5c28:	sub	x4, x5, x4
    5c2c:	ldr	x1, [x19, #16]
    5c30:	orr	x3, x3, x0
    5c34:	str	x3, [x1, x4]
    5c38:	cmp	x8, x2
    5c3c:	b.ls	5bdc <_gcry_mpi_set_buffer+0x5c>  // b.plast
    5c40:	sub	x0, x7, x20
    5c44:	sub	x0, x0, #0x8
    5c48:	lsr	x0, x0, #3
    5c4c:	mvn	x1, x0
    5c50:	add	x5, x5, x1, lsl #3
    5c54:	add	w0, w0, #0x1
    5c58:	cmp	x20, x5
    5c5c:	b.hi	5cfc <_gcry_mpi_set_buffer+0x17c>  // b.pmore
    5c60:	mov	x2, x5
    5c64:	ldrb	w1, [x2], #-1
    5c68:	cmp	x20, x2
    5c6c:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5c70:	ldurb	w2, [x5, #-1]
    5c74:	orr	x1, x1, x2, lsl #8
    5c78:	sub	x2, x5, #0x2
    5c7c:	cmp	x20, x2
    5c80:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5c84:	ldurb	w2, [x5, #-2]
    5c88:	orr	x1, x1, x2, lsl #16
    5c8c:	sub	x2, x5, #0x3
    5c90:	cmp	x20, x2
    5c94:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5c98:	ldurb	w2, [x5, #-3]
    5c9c:	orr	x1, x1, x2, lsl #24
    5ca0:	sub	x2, x5, #0x4
    5ca4:	cmp	x20, x2
    5ca8:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5cac:	ldurb	w2, [x5, #-4]
    5cb0:	orr	x1, x1, x2, lsl #32
    5cb4:	sub	x2, x5, #0x5
    5cb8:	cmp	x20, x2
    5cbc:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5cc0:	ldurb	w2, [x5, #-5]
    5cc4:	orr	x1, x1, x2, lsl #40
    5cc8:	sub	x2, x5, #0x6
    5ccc:	cmp	x20, x2
    5cd0:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5cd4:	ldurb	w2, [x5, #-6]
    5cd8:	orr	x1, x1, x2, lsl #48
    5cdc:	sub	x2, x5, #0x7
    5ce0:	cmp	x20, x2
    5ce4:	b.hi	5cf0 <_gcry_mpi_set_buffer+0x170>  // b.pmore
    5ce8:	ldurb	w2, [x5, #-7]
    5cec:	orr	x1, x1, x2, lsl #56
    5cf0:	ldr	x2, [x19, #16]
    5cf4:	str	x1, [x2, w0, sxtw #3]
    5cf8:	add	w0, w0, #0x1
    5cfc:	str	w0, [x19, #4]
    5d00:	cmp	w0, w21
    5d04:	b.ne	5d34 <_gcry_mpi_set_buffer+0x1b4>  // b.any
    5d08:	ldp	x19, x20, [sp, #16]
    5d0c:	ldp	x21, x22, [sp, #32]
    5d10:	ldr	x23, [sp, #48]
    5d14:	ldp	x29, x30, [sp], #64
    5d18:	ret
    5d1c:	mov	w1, w21
    5d20:	mov	x0, x19
    5d24:	bl	198 <_gcry_mpi_resize>
    5d28:	b	5bb8 <_gcry_mpi_set_buffer+0x38>
    5d2c:	mov	w0, #0x0                   	// #0
    5d30:	b	5c58 <_gcry_mpi_set_buffer+0xd8>
    5d34:	adrp	x0, 0 <_gcry_mpi_m_check>
    5d38:	ldr	x3, [x0]
    5d3c:	mov	w2, #0x16f                 	// #367
    5d40:	adrp	x0, 0 <_gcry_mpi_m_check>
    5d44:	ldr	x1, [x0]
    5d48:	adrp	x0, 0 <_gcry_mpi_m_check>
    5d4c:	ldr	x0, [x0]
    5d50:	bl	0 <_gcry_assert_failed>
    5d54:	nop
	...

0000000000005d70 <gcry_mpi_scan>:
    5d70:	stp	x29, x30, [sp, #-80]!
    5d74:	mov	x29, sp
    5d78:	stp	x19, x20, [sp, #16]
    5d7c:	stp	x21, x22, [sp, #32]
    5d80:	stp	x23, x24, [sp, #48]
    5d84:	mov	x20, x0
    5d88:	mov	w21, w1
    5d8c:	mov	x19, x2
    5d90:	mov	x22, x3
    5d94:	mov	x23, x4
    5d98:	mov	w1, #0x0                   	// #0
    5d9c:	cbz	x2, 5db0 <gcry_mpi_scan+0x40>
    5da0:	mov	x0, x2
    5da4:	bl	6b1c <gcry_is_secure>
    5da8:	cmp	w0, #0x0
    5dac:	cset	w1, ne  // ne = any
    5db0:	cmp	w21, #0x3
    5db4:	b.eq	60ec <gcry_mpi_scan+0x37c>  // b.none
    5db8:	mov	w24, w22
    5dbc:	cmp	w21, #0x1
    5dc0:	b.eq	5e94 <gcry_mpi_scan+0x124>  // b.none
    5dc4:	cmp	w21, #0x5
    5dc8:	b.eq	5f2c <gcry_mpi_scan+0x1bc>  // b.none
    5dcc:	cmp	w21, #0x2
    5dd0:	b.eq	5f98 <gcry_mpi_scan+0x228>  // b.none
    5dd4:	cmp	x22, #0x0
    5dd8:	mov	w0, #0xa                   	// #10
    5ddc:	ccmp	w21, #0x4, #0x0, eq  // eq = none
    5de0:	b.ne	5ee4 <gcry_mpi_scan+0x174>  // b.any
    5de4:	stp	x25, x26, [sp, #64]
    5de8:	cbz	w1, 61a4 <gcry_mpi_scan+0x434>
    5dec:	mov	w0, #0x0                   	// #0
    5df0:	bl	c4 <_gcry_mpi_alloc_secure>
    5df4:	mov	x21, x0
    5df8:	ldrb	w0, [x19]
    5dfc:	mov	w24, #0x0                   	// #0
    5e00:	cmp	w0, #0x2d
    5e04:	b.eq	61b4 <gcry_mpi_scan+0x444>  // b.none
    5e08:	ldrb	w0, [x19]
    5e0c:	cmp	w0, #0x30
    5e10:	b.eq	61c0 <gcry_mpi_scan+0x450>  // b.none
    5e14:	mov	x0, x19
    5e18:	bl	0 <grub_strlen>
    5e1c:	lsl	w23, w0, #2
    5e20:	and	w22, w0, #0x1
    5e24:	add	w23, w23, #0x7
    5e28:	lsr	w23, w23, #3
    5e2c:	add	w0, w23, #0x7
    5e30:	lsr	w25, w0, #3
    5e34:	ldr	w1, [x21]
    5e38:	cmp	w1, w0, lsr #3
    5e3c:	b.cc	61d4 <gcry_mpi_scan+0x464>  // b.lo, b.ul, b.last
    5e40:	and	w23, w23, #0x7
    5e44:	mov	w5, #0x8                   	// #8
    5e48:	sub	w23, w5, w23
    5e4c:	negs	w5, w23
    5e50:	and	w23, w23, #0x7
    5e54:	and	w5, w5, #0x7
    5e58:	csneg	w5, w23, w5, mi  // mi = first
    5e5c:	mov	w11, w25
    5e60:	str	w25, [x21, #4]
    5e64:	str	w24, [x21, #8]
    5e68:	cbz	w25, 62bc <gcry_mpi_scan+0x54c>
    5e6c:	sbfiz	x13, x11, #3, #32
    5e70:	mov	x9, #0x0                   	// #0
    5e74:	mov	x10, #0x0                   	// #0
    5e78:	mov	w12, #0x0                   	// #0
    5e7c:	mov	w8, #0x30                  	// #48
    5e80:	mov	w7, w12
    5e84:	mov	x6, x10
    5e88:	cmp	w5, #0x7
    5e8c:	b.le	6364 <gcry_mpi_scan+0x5f4>
    5e90:	b	6298 <gcry_mpi_scan+0x528>
    5e94:	cbz	w1, 5ef8 <gcry_mpi_scan+0x188>
    5e98:	add	w0, w22, #0x7
    5e9c:	lsr	w0, w0, #3
    5ea0:	bl	c4 <_gcry_mpi_alloc_secure>
    5ea4:	mov	x21, x0
    5ea8:	cbz	w22, 5ed0 <gcry_mpi_scan+0x160>
    5eac:	ldrsb	w0, [x19]
    5eb0:	lsr	w1, w0, #31
    5eb4:	str	w1, [x21, #8]
    5eb8:	tbnz	w0, #31, 5f0c <gcry_mpi_scan+0x19c>
    5ebc:	mov	w3, #0x0                   	// #0
    5ec0:	mov	w2, w22
    5ec4:	mov	x1, x19
    5ec8:	mov	x0, x21
    5ecc:	bl	5b80 <_gcry_mpi_set_buffer>
    5ed0:	cbz	x20, 5f1c <gcry_mpi_scan+0x1ac>
    5ed4:	mov	x0, x21
    5ed8:	bl	8a0 <_gcry_mpi_normalize>
    5edc:	str	x21, [x20]
    5ee0:	mov	w0, #0x0                   	// #0
    5ee4:	ldp	x19, x20, [sp, #16]
    5ee8:	ldp	x21, x22, [sp, #32]
    5eec:	ldp	x23, x24, [sp, #48]
    5ef0:	ldp	x29, x30, [sp], #80
    5ef4:	ret
    5ef8:	add	w0, w22, #0x7
    5efc:	lsr	w0, w0, #3
    5f00:	bl	6c <_gcry_mpi_alloc>
    5f04:	mov	x21, x0
    5f08:	b	5ea8 <gcry_mpi_scan+0x138>
    5f0c:	mov	x0, x21
    5f10:	bl	274 <_gcry_mpi_free>
    5f14:	mov	w0, #0x9                   	// #9
    5f18:	b	5ee4 <gcry_mpi_scan+0x174>
    5f1c:	mov	x0, x21
    5f20:	bl	274 <_gcry_mpi_free>
    5f24:	mov	w0, #0x0                   	// #0
    5f28:	b	5ee4 <gcry_mpi_scan+0x174>
    5f2c:	cbz	w1, 5f5c <gcry_mpi_scan+0x1ec>
    5f30:	add	w0, w22, #0x7
    5f34:	lsr	w0, w0, #3
    5f38:	bl	c4 <_gcry_mpi_alloc_secure>
    5f3c:	mov	x21, x0
    5f40:	cbnz	w22, 5f70 <gcry_mpi_scan+0x200>
    5f44:	cbz	x20, 5f88 <gcry_mpi_scan+0x218>
    5f48:	mov	x0, x21
    5f4c:	bl	8a0 <_gcry_mpi_normalize>
    5f50:	str	x21, [x20]
    5f54:	mov	w0, #0x0                   	// #0
    5f58:	b	5ee4 <gcry_mpi_scan+0x174>
    5f5c:	add	w0, w22, #0x7
    5f60:	lsr	w0, w0, #3
    5f64:	bl	6c <_gcry_mpi_alloc>
    5f68:	mov	x21, x0
    5f6c:	b	5f40 <gcry_mpi_scan+0x1d0>
    5f70:	mov	w3, #0x0                   	// #0
    5f74:	mov	w2, w22
    5f78:	mov	x1, x19
    5f7c:	mov	x0, x21
    5f80:	bl	5b80 <_gcry_mpi_set_buffer>
    5f84:	b	5f44 <gcry_mpi_scan+0x1d4>
    5f88:	mov	x0, x21
    5f8c:	bl	274 <_gcry_mpi_free>
    5f90:	mov	w0, #0x0                   	// #0
    5f94:	b	5ee4 <gcry_mpi_scan+0x174>
    5f98:	stp	x25, x26, [sp, #64]
    5f9c:	cmp	w22, #0x1
    5fa0:	b.ls	62f8 <gcry_mpi_scan+0x588>  // b.plast
    5fa4:	ldrb	w0, [x19]
    5fa8:	ldrb	w2, [x19, #1]
    5fac:	orr	w0, w2, w0, lsl #8
    5fb0:	cmp	w0, #0x4, lsl #12
    5fb4:	b.hi	6300 <gcry_mpi_scan+0x590>  // b.pmore
    5fb8:	add	x19, x19, #0x2
    5fbc:	add	w0, w0, #0x7
    5fc0:	lsr	w26, w0, #3
    5fc4:	add	w22, w26, #0x7
    5fc8:	lsr	w22, w22, #3
    5fcc:	cbz	w1, 6098 <gcry_mpi_scan+0x328>
    5fd0:	mov	w0, w22
    5fd4:	bl	c4 <_gcry_mpi_alloc_secure>
    5fd8:	mov	x25, x0
    5fdc:	and	w26, w26, #0x7
    5fe0:	mov	w0, #0x8                   	// #8
    5fe4:	sub	w0, w0, w26
    5fe8:	negs	w1, w0
    5fec:	and	w0, w0, #0x7
    5ff0:	and	w1, w1, #0x7
    5ff4:	csneg	w0, w0, w1, mi  // mi = first
    5ff8:	str	w22, [x25, #4]
    5ffc:	str	wzr, [x25, #8]
    6000:	cbz	w22, 60c8 <gcry_mpi_scan+0x358>
    6004:	sxtw	x3, w22
    6008:	sbfiz	x4, x22, #3, #32
    600c:	sub	x4, x4, #0x8
    6010:	sub	w22, w22, #0x1
    6014:	sub	x22, x3, x22
    6018:	lsl	x3, x22, #3
    601c:	sub	x3, x3, #0x10
    6020:	mov	x5, #0x0                   	// #0
    6024:	mov	w6, #0x0                   	// #0
    6028:	add	w22, w21, #0x1
    602c:	cmp	w24, w22
    6030:	b.cc	605c <gcry_mpi_scan+0x2ec>  // b.lo, b.ul, b.last
    6034:	add	w21, w21, #0x8
    6038:	sub	w21, w21, w0
    603c:	mov	x1, x5
    6040:	ldrb	w2, [x19], #1
    6044:	orr	x1, x2, x1, lsl #8
    6048:	cmp	w22, w21
    604c:	b.eq	60a8 <gcry_mpi_scan+0x338>  // b.none
    6050:	add	w22, w22, #0x1
    6054:	cmp	w22, w24
    6058:	b.ls	6040 <gcry_mpi_scan+0x2d0>  // b.plast
    605c:	mov	x0, x25
    6060:	bl	274 <_gcry_mpi_free>
    6064:	mov	x25, #0x0                   	// #0
    6068:	cbz	x23, 6308 <gcry_mpi_scan+0x598>
    606c:	mov	w22, w22
    6070:	str	x22, [x23]
    6074:	cmp	x20, #0x0
    6078:	ccmp	x25, #0x0, #0x4, ne  // ne = any
    607c:	b.ne	60d4 <gcry_mpi_scan+0x364>  // b.any
    6080:	cbz	x25, 62ec <gcry_mpi_scan+0x57c>
    6084:	mov	x0, x25
    6088:	bl	274 <_gcry_mpi_free>
    608c:	mov	w0, #0xe                   	// #14
    6090:	ldp	x25, x26, [sp, #64]
    6094:	b	5ee4 <gcry_mpi_scan+0x174>
    6098:	mov	w0, w22
    609c:	bl	6c <_gcry_mpi_alloc>
    60a0:	mov	x25, x0
    60a4:	b	5fdc <gcry_mpi_scan+0x26c>
    60a8:	ldr	x0, [x25, #16]
    60ac:	str	x1, [x0, x4]
    60b0:	sub	x4, x4, #0x8
    60b4:	mov	w0, w6
    60b8:	cmp	x3, x4
    60bc:	b.ne	6028 <gcry_mpi_scan+0x2b8>  // b.any
    60c0:	mov	w22, w21
    60c4:	b	60cc <gcry_mpi_scan+0x35c>
    60c8:	mov	w22, w21
    60cc:	cbnz	x23, 606c <gcry_mpi_scan+0x2fc>
    60d0:	b	6074 <gcry_mpi_scan+0x304>
    60d4:	mov	x0, x25
    60d8:	bl	8a0 <_gcry_mpi_normalize>
    60dc:	str	x25, [x20]
    60e0:	mov	w0, #0x0                   	// #0
    60e4:	ldp	x25, x26, [sp, #64]
    60e8:	b	5ee4 <gcry_mpi_scan+0x174>
    60ec:	ldrb	w21, [x19]
    60f0:	ldrb	w0, [x19, #1]
    60f4:	lsl	w0, w0, #16
    60f8:	orr	w21, w0, w21, lsl #24
    60fc:	ldrb	w0, [x19, #2]
    6100:	ldrb	w2, [x19, #3]
    6104:	orr	w0, w2, w0, lsl #8
    6108:	orr	w21, w21, w0
    610c:	sxtw	x24, w21
    6110:	cbz	w1, 6170 <gcry_mpi_scan+0x400>
    6114:	add	x0, x24, #0x7
    6118:	ubfx	x0, x0, #3, #32
    611c:	bl	c4 <_gcry_mpi_alloc_secure>
    6120:	mov	x22, x0
    6124:	cbz	x24, 614c <gcry_mpi_scan+0x3dc>
    6128:	ldrsb	w0, [x19, #4]
    612c:	lsr	w1, w0, #31
    6130:	str	w1, [x22, #8]
    6134:	tbnz	w0, #31, 6184 <gcry_mpi_scan+0x414>
    6138:	mov	w3, #0x0                   	// #0
    613c:	mov	w2, w21
    6140:	add	x1, x19, #0x4
    6144:	mov	x0, x22
    6148:	bl	5b80 <_gcry_mpi_set_buffer>
    614c:	cbz	x23, 6158 <gcry_mpi_scan+0x3e8>
    6150:	add	x0, x24, #0x4
    6154:	str	x0, [x23]
    6158:	cbz	x20, 6194 <gcry_mpi_scan+0x424>
    615c:	mov	x0, x22
    6160:	bl	8a0 <_gcry_mpi_normalize>
    6164:	str	x22, [x20]
    6168:	mov	w0, #0x0                   	// #0
    616c:	b	5ee4 <gcry_mpi_scan+0x174>
    6170:	add	x0, x24, #0x7
    6174:	ubfx	x0, x0, #3, #32
    6178:	bl	6c <_gcry_mpi_alloc>
    617c:	mov	x22, x0
    6180:	b	6124 <gcry_mpi_scan+0x3b4>
    6184:	mov	x0, x22
    6188:	bl	274 <_gcry_mpi_free>
    618c:	mov	w0, #0x9                   	// #9
    6190:	b	5ee4 <gcry_mpi_scan+0x174>
    6194:	mov	x0, x22
    6198:	bl	274 <_gcry_mpi_free>
    619c:	mov	w0, #0x0                   	// #0
    61a0:	b	5ee4 <gcry_mpi_scan+0x174>
    61a4:	mov	w0, #0x0                   	// #0
    61a8:	bl	6c <_gcry_mpi_alloc>
    61ac:	mov	x21, x0
    61b0:	b	5df8 <gcry_mpi_scan+0x88>
    61b4:	add	x19, x19, #0x1
    61b8:	mov	w24, #0x1                   	// #1
    61bc:	b	5e08 <gcry_mpi_scan+0x98>
    61c0:	ldrb	w1, [x19, #1]
    61c4:	add	x0, x19, #0x2
    61c8:	cmp	w1, #0x78
    61cc:	csel	x19, x0, x19, eq  // eq = none
    61d0:	b	5e14 <gcry_mpi_scan+0xa4>
    61d4:	mov	w1, w25
    61d8:	mov	x0, x21
    61dc:	bl	198 <_gcry_mpi_resize>
    61e0:	and	w23, w23, #0x7
    61e4:	mov	w5, #0x8                   	// #8
    61e8:	sub	w23, w5, w23
    61ec:	negs	w5, w23
    61f0:	and	w23, w23, #0x7
    61f4:	and	w5, w5, #0x7
    61f8:	csneg	w5, w23, w5, mi  // mi = first
    61fc:	mov	w11, w25
    6200:	str	w25, [x21, #4]
    6204:	str	w24, [x21, #8]
    6208:	b	5e6c <gcry_mpi_scan+0xfc>
    620c:	mov	x0, x21
    6210:	bl	268 <_gcry_mpi_clear>
    6214:	mov	x0, x21
    6218:	bl	274 <_gcry_mpi_free>
    621c:	mov	w0, #0xe                   	// #14
    6220:	ldp	x25, x26, [sp, #64]
    6224:	b	5ee4 <gcry_mpi_scan+0x174>
    6228:	mov	x0, x21
    622c:	bl	268 <_gcry_mpi_clear>
    6230:	b	6214 <gcry_mpi_scan+0x4a4>
    6234:	sub	w4, w1, #0x41
    6238:	cmp	w4, #0x5
    623c:	b.hi	624c <gcry_mpi_scan+0x4dc>  // b.pmore
    6240:	sub	w1, w1, #0x37
    6244:	mov	x19, x3
    6248:	b	6330 <gcry_mpi_scan+0x5c0>
    624c:	mov	x0, x21
    6250:	bl	268 <_gcry_mpi_clear>
    6254:	b	6214 <gcry_mpi_scan+0x4a4>
    6258:	sub	w2, w2, #0x61
    625c:	cmp	w2, #0x5
    6260:	b.hi	6270 <gcry_mpi_scan+0x500>  // b.pmore
    6264:	sub	w0, w0, #0x57
    6268:	orr	w1, w0, w1
    626c:	b	634c <gcry_mpi_scan+0x5dc>
    6270:	sub	w3, w3, #0x41
    6274:	cmp	w3, #0x5
    6278:	b.hi	6288 <gcry_mpi_scan+0x518>  // b.pmore
    627c:	sub	w0, w0, #0x37
    6280:	orr	w1, w0, w1
    6284:	b	634c <gcry_mpi_scan+0x5dc>
    6288:	mov	x0, x21
    628c:	bl	268 <_gcry_mpi_clear>
    6290:	b	6214 <gcry_mpi_scan+0x4a4>
    6294:	mov	w22, w12
    6298:	ldr	x0, [x21, #16]
    629c:	add	x0, x0, x13
    62a0:	sub	x0, x0, x9, lsl #3
    62a4:	stur	x6, [x0, #-8]
    62a8:	add	x9, x9, #0x1
    62ac:	sub	w0, w11, w9
    62b0:	mov	w5, #0x0                   	// #0
    62b4:	cmp	w0, #0x0
    62b8:	b.gt	5e84 <gcry_mpi_scan+0x114>
    62bc:	cbz	x20, 62d8 <gcry_mpi_scan+0x568>
    62c0:	mov	x0, x21
    62c4:	bl	8a0 <_gcry_mpi_normalize>
    62c8:	str	x21, [x20]
    62cc:	mov	w0, #0x0                   	// #0
    62d0:	ldp	x25, x26, [sp, #64]
    62d4:	b	5ee4 <gcry_mpi_scan+0x174>
    62d8:	mov	x0, x21
    62dc:	bl	274 <_gcry_mpi_free>
    62e0:	mov	w0, #0x0                   	// #0
    62e4:	ldp	x25, x26, [sp, #64]
    62e8:	b	5ee4 <gcry_mpi_scan+0x174>
    62ec:	mov	w0, #0xe                   	// #14
    62f0:	ldp	x25, x26, [sp, #64]
    62f4:	b	5ee4 <gcry_mpi_scan+0x174>
    62f8:	mov	w22, #0x0                   	// #0
    62fc:	b	6064 <gcry_mpi_scan+0x2f4>
    6300:	mov	w22, #0x0                   	// #0
    6304:	b	6064 <gcry_mpi_scan+0x2f4>
    6308:	mov	w0, #0xe                   	// #14
    630c:	ldp	x25, x26, [sp, #64]
    6310:	b	5ee4 <gcry_mpi_scan+0x174>
    6314:	mov	x3, x19
    6318:	ldrb	w2, [x3], #1
    631c:	mov	w0, w2
    6320:	cbz	w2, 6228 <gcry_mpi_scan+0x4b8>
    6324:	mov	w4, w8
    6328:	sub	w1, w4, #0x30
    632c:	mov	x19, x3
    6330:	lsl	w1, w1, #4
    6334:	mov	w3, w2
    6338:	sub	w4, w2, #0x30
    633c:	cmp	w4, #0x9
    6340:	b.hi	6258 <gcry_mpi_scan+0x4e8>  // b.pmore
    6344:	sub	w0, w0, #0x30
    6348:	orr	w1, w0, w1
    634c:	sxtw	x1, w1
    6350:	orr	x6, x1, x6, lsl #8
    6354:	add	w5, w5, #0x1
    6358:	mov	w22, w7
    635c:	cmp	w5, #0x8
    6360:	b.eq	6294 <gcry_mpi_scan+0x524>  // b.none
    6364:	cbnz	w22, 6314 <gcry_mpi_scan+0x5a4>
    6368:	ldrb	w1, [x19]
    636c:	mov	w4, w1
    6370:	cbz	w1, 620c <gcry_mpi_scan+0x49c>
    6374:	add	x3, x19, #0x2
    6378:	ldrb	w2, [x19, #1]
    637c:	mov	w0, w2
    6380:	cbz	w2, 6228 <gcry_mpi_scan+0x4b8>
    6384:	sub	w14, w1, #0x30
    6388:	cmp	w14, #0x9
    638c:	b.ls	6328 <gcry_mpi_scan+0x5b8>  // b.plast
    6390:	sub	w4, w1, #0x61
    6394:	cmp	w4, #0x5
    6398:	b.hi	6234 <gcry_mpi_scan+0x4c4>  // b.pmore
    639c:	sub	w1, w1, #0x57
    63a0:	mov	x19, x3
    63a4:	b	6330 <gcry_mpi_scan+0x5c0>

00000000000063a8 <gcry_mpi_print>:
    63a8:	stp	x29, x30, [sp, #-80]!
    63ac:	mov	x29, sp
    63b0:	stp	x19, x20, [sp, #16]
    63b4:	stp	x21, x22, [sp, #32]
    63b8:	stp	x23, x24, [sp, #48]
    63bc:	mov	w20, w0
    63c0:	mov	x22, x1
    63c4:	mov	x23, x2
    63c8:	mov	x19, x3
    63cc:	mov	x21, x4
    63d0:	mov	x0, x4
    63d4:	bl	8e8 <gcry_mpi_get_nbits>
    63d8:	mov	w3, w0
    63dc:	cmp	x19, #0x0
    63e0:	add	x0, sp, #0x48
    63e4:	csel	x19, x0, x19, eq  // eq = none
    63e8:	str	xzr, [x19]
    63ec:	cmp	w20, #0x1
    63f0:	b.eq	6504 <gcry_mpi_print+0x15c>  // b.none
    63f4:	cmp	w20, #0x5
    63f8:	b.eq	6590 <gcry_mpi_print+0x1e8>  // b.none
    63fc:	cmp	w20, #0x2
    6400:	b.eq	65f4 <gcry_mpi_print+0x24c>  // b.none
    6404:	cmp	w20, #0x3
    6408:	b.eq	6678 <gcry_mpi_print+0x2d0>  // b.none
    640c:	mov	w0, #0xa                   	// #10
    6410:	cmp	w20, #0x4
    6414:	b.ne	6510 <gcry_mpi_print+0x168>  // b.any
    6418:	str	wzr, [sp, #68]
    641c:	mov	x2, #0x0                   	// #0
    6420:	add	x1, sp, #0x44
    6424:	mov	x0, x21
    6428:	bl	5b50 <_gcry_mpi_get_buffer>
    642c:	cbz	x0, 673c <gcry_mpi_print+0x394>
    6430:	ldr	w1, [sp, #68]
    6434:	mov	w2, #0x2                   	// #2
    6438:	cbz	w1, 6448 <gcry_mpi_print+0xa0>
    643c:	ldrsb	w2, [x0]
    6440:	lsr	w2, w2, #31
    6444:	lsl	w2, w2, #1
    6448:	cbz	x22, 6750 <gcry_mpi_print+0x3a8>
    644c:	ldr	w4, [x21, #8]
    6450:	lsl	w3, w1, #1
    6454:	add	w3, w3, #0x1
    6458:	cmp	w4, #0x0
    645c:	cinc	w5, w2, ne  // ne = any
    6460:	add	w3, w3, w5
    6464:	cmp	x3, x23
    6468:	b.hi	6744 <gcry_mpi_print+0x39c>  // b.pmore
    646c:	mov	x8, x22
    6470:	cbz	w4, 647c <gcry_mpi_print+0xd4>
    6474:	mov	w3, #0x2d                  	// #45
    6478:	strb	w3, [x8], #1
    647c:	cbz	w2, 6494 <gcry_mpi_print+0xec>
    6480:	mov	w3, #0x30                  	// #48
    6484:	mov	x2, x8
    6488:	strb	w3, [x2], #2
    648c:	strb	w3, [x8, #1]
    6490:	mov	x8, x2
    6494:	cbz	w1, 64ec <gcry_mpi_print+0x144>
    6498:	mov	x5, x0
    649c:	sub	w1, w1, #0x1
    64a0:	add	x7, x1, #0x1
    64a4:	add	x9, x7, x0
    64a8:	mov	x4, x8
    64ac:	ldrb	w1, [x5], #1
    64b0:	lsr	w3, w1, #4
    64b4:	add	w6, w3, #0x30
    64b8:	add	w2, w3, #0x37
    64bc:	cmp	w3, #0x9
    64c0:	csel	w2, w2, w6, hi  // hi = pmore
    64c4:	strb	w2, [x4], #2
    64c8:	and	w1, w1, #0xf
    64cc:	add	w3, w1, #0x30
    64d0:	add	w2, w1, #0x37
    64d4:	cmp	w1, #0x9
    64d8:	csel	w1, w2, w3, hi  // hi = pmore
    64dc:	sturb	w1, [x4, #-1]
    64e0:	cmp	x5, x9
    64e4:	b.ne	64ac <gcry_mpi_print+0x104>  // b.any
    64e8:	add	x8, x8, x7, lsl #1
    64ec:	strb	wzr, [x8], #1
    64f0:	sub	x8, x8, x22
    64f4:	str	x8, [x19]
    64f8:	bl	6b08 <gcry_free>
    64fc:	mov	w0, #0x0                   	// #0
    6500:	b	6510 <gcry_mpi_print+0x168>
    6504:	ldr	w24, [x21, #8]
    6508:	mov	w0, #0x9                   	// #9
    650c:	cbz	w24, 6524 <gcry_mpi_print+0x17c>
    6510:	ldp	x19, x20, [sp, #16]
    6514:	ldp	x21, x22, [sp, #32]
    6518:	ldp	x23, x24, [sp, #48]
    651c:	ldp	x29, x30, [sp], #80
    6520:	ret
    6524:	mov	x2, #0x0                   	// #0
    6528:	add	x1, sp, #0x44
    652c:	mov	x0, x21
    6530:	bl	5b50 <_gcry_mpi_get_buffer>
    6534:	mov	x20, x0
    6538:	cbz	x0, 6568 <gcry_mpi_print+0x1c0>
    653c:	ldr	w0, [sp, #68]
    6540:	cbz	w0, 676c <gcry_mpi_print+0x3c4>
    6544:	ldrsb	w1, [x20]
    6548:	tbnz	w1, #31, 6570 <gcry_mpi_print+0x1c8>
    654c:	cbz	x22, 6784 <gcry_mpi_print+0x3dc>
    6550:	ldr	w2, [sp, #68]
    6554:	cmp	x23, w2, uxtw
    6558:	b.cc	6580 <gcry_mpi_print+0x1d8>  // b.lo, b.ul, b.last
    655c:	cbz	w24, 6774 <gcry_mpi_print+0x3cc>
    6560:	strb	wzr, [x22], #1
    6564:	b	6774 <gcry_mpi_print+0x3cc>
    6568:	bl	6d98 <gpg_error_from_syserror>
    656c:	b	6510 <gcry_mpi_print+0x168>
    6570:	add	w0, w0, #0x1
    6574:	str	w0, [sp, #68]
    6578:	mov	w24, #0x1                   	// #1
    657c:	b	654c <gcry_mpi_print+0x1a4>
    6580:	mov	x0, x20
    6584:	bl	6b08 <gcry_free>
    6588:	mov	w0, #0x1d                  	// #29
    658c:	b	6510 <gcry_mpi_print+0x168>
    6590:	add	w3, w3, #0x7
    6594:	lsr	w3, w3, #3
    6598:	str	w3, [sp, #68]
    659c:	cbz	x22, 65dc <gcry_mpi_print+0x234>
    65a0:	mov	w0, #0x1d                  	// #29
    65a4:	cmp	x23, w3, uxtw
    65a8:	b.cc	6510 <gcry_mpi_print+0x168>  // b.lo, b.ul, b.last
    65ac:	mov	x2, #0x0                   	// #0
    65b0:	add	x1, sp, #0x44
    65b4:	mov	x0, x21
    65b8:	bl	5b50 <_gcry_mpi_get_buffer>
    65bc:	mov	x20, x0
    65c0:	cbz	x0, 65ec <gcry_mpi_print+0x244>
    65c4:	ldr	w2, [sp, #68]
    65c8:	mov	x1, x0
    65cc:	mov	x0, x22
    65d0:	bl	0 <grub_memmove>
    65d4:	mov	x0, x20
    65d8:	bl	6b08 <gcry_free>
    65dc:	ldr	w0, [sp, #68]
    65e0:	str	x0, [x19]
    65e4:	mov	w0, #0x0                   	// #0
    65e8:	b	6510 <gcry_mpi_print+0x168>
    65ec:	bl	6d98 <gpg_error_from_syserror>
    65f0:	b	6510 <gcry_mpi_print+0x168>
    65f4:	add	w1, w3, #0x7
    65f8:	lsr	w1, w1, #3
    65fc:	str	w1, [sp, #68]
    6600:	ldr	w2, [x21, #8]
    6604:	mov	w0, #0xa                   	// #10
    6608:	cbnz	w2, 6510 <gcry_mpi_print+0x168>
    660c:	cbz	x22, 665c <gcry_mpi_print+0x2b4>
    6610:	add	w1, w1, #0x2
    6614:	mov	w0, #0x1d                  	// #29
    6618:	cmp	x23, w1, uxtw
    661c:	b.cc	6510 <gcry_mpi_print+0x168>  // b.lo, b.ul, b.last
    6620:	lsr	w0, w3, #8
    6624:	strb	w0, [x22]
    6628:	strb	w3, [x22, #1]
    662c:	mov	x2, #0x0                   	// #0
    6630:	add	x1, sp, #0x44
    6634:	mov	x0, x21
    6638:	bl	5b50 <_gcry_mpi_get_buffer>
    663c:	mov	x20, x0
    6640:	cbz	x0, 6670 <gcry_mpi_print+0x2c8>
    6644:	ldr	w2, [sp, #68]
    6648:	mov	x1, x0
    664c:	add	x0, x22, #0x2
    6650:	bl	0 <grub_memmove>
    6654:	mov	x0, x20
    6658:	bl	6b08 <gcry_free>
    665c:	ldr	w0, [sp, #68]
    6660:	add	w0, w0, #0x2
    6664:	str	x0, [x19]
    6668:	mov	w0, #0x0                   	// #0
    666c:	b	6510 <gcry_mpi_print+0x168>
    6670:	bl	6d98 <gpg_error_from_syserror>
    6674:	b	6510 <gcry_mpi_print+0x168>
    6678:	ldr	w24, [x21, #8]
    667c:	mov	w0, #0x9                   	// #9
    6680:	cbnz	w24, 6510 <gcry_mpi_print+0x168>
    6684:	mov	x2, #0x0                   	// #0
    6688:	add	x1, sp, #0x44
    668c:	mov	x0, x21
    6690:	bl	5b50 <_gcry_mpi_get_buffer>
    6694:	mov	x20, x0
    6698:	cbz	x0, 6714 <gcry_mpi_print+0x36c>
    669c:	ldr	w0, [sp, #68]
    66a0:	cbz	w0, 66ac <gcry_mpi_print+0x304>
    66a4:	ldrsb	w1, [x20]
    66a8:	tbnz	w1, #31, 671c <gcry_mpi_print+0x374>
    66ac:	cbz	x22, 66f8 <gcry_mpi_print+0x350>
    66b0:	ldr	w2, [sp, #68]
    66b4:	add	w0, w2, #0x4
    66b8:	cmp	x0, x23
    66bc:	b.hi	672c <gcry_mpi_print+0x384>  // b.pmore
    66c0:	lsr	w0, w2, #24
    66c4:	strb	w0, [x22]
    66c8:	lsr	w0, w2, #16
    66cc:	strb	w0, [x22, #1]
    66d0:	lsr	w0, w2, #8
    66d4:	strb	w0, [x22, #2]
    66d8:	strb	w2, [x22, #3]
    66dc:	add	x0, x22, #0x4
    66e0:	cbz	w24, 66ec <gcry_mpi_print+0x344>
    66e4:	add	x0, x22, #0x5
    66e8:	strb	wzr, [x22, #4]
    66ec:	sub	w2, w2, w24
    66f0:	mov	x1, x20
    66f4:	bl	0 <grub_memmove>
    66f8:	mov	x0, x20
    66fc:	bl	6b08 <gcry_free>
    6700:	ldr	w0, [sp, #68]
    6704:	add	w0, w0, #0x4
    6708:	str	x0, [x19]
    670c:	mov	w0, #0x0                   	// #0
    6710:	b	6510 <gcry_mpi_print+0x168>
    6714:	bl	6d98 <gpg_error_from_syserror>
    6718:	b	6510 <gcry_mpi_print+0x168>
    671c:	add	w0, w0, #0x1
    6720:	str	w0, [sp, #68]
    6724:	mov	w24, #0x1                   	// #1
    6728:	b	66ac <gcry_mpi_print+0x304>
    672c:	mov	x0, x20
    6730:	bl	6b08 <gcry_free>
    6734:	mov	w0, #0x1d                  	// #29
    6738:	b	6510 <gcry_mpi_print+0x168>
    673c:	bl	6d98 <gpg_error_from_syserror>
    6740:	b	6510 <gcry_mpi_print+0x168>
    6744:	bl	6b08 <gcry_free>
    6748:	mov	w0, #0x1d                  	// #29
    674c:	b	6510 <gcry_mpi_print+0x168>
    6750:	ldr	w3, [x21, #8]
    6754:	cmp	w3, #0x0
    6758:	cinc	w2, w2, ne  // ne = any
    675c:	add	w1, w2, w1, lsl #1
    6760:	add	w1, w1, #0x1
    6764:	str	x1, [x19]
    6768:	b	64f8 <gcry_mpi_print+0x150>
    676c:	cbz	x22, 6784 <gcry_mpi_print+0x3dc>
    6770:	ldr	w2, [sp, #68]
    6774:	sub	w2, w2, w24
    6778:	mov	x1, x20
    677c:	mov	x0, x22
    6780:	bl	0 <grub_memmove>
    6784:	mov	x0, x20
    6788:	bl	6b08 <gcry_free>
    678c:	ldr	w0, [sp, #68]
    6790:	str	x0, [x19]
    6794:	mov	w0, #0x0                   	// #0
    6798:	b	6510 <gcry_mpi_print+0x168>

000000000000679c <gcry_mpi_aprint>:
    679c:	stp	x29, x30, [sp, #-80]!
    67a0:	mov	x29, sp
    67a4:	stp	x19, x20, [sp, #16]
    67a8:	stp	x21, x22, [sp, #32]
    67ac:	str	x23, [sp, #48]
    67b0:	mov	w23, w0
    67b4:	mov	x21, x1
    67b8:	mov	x22, x2
    67bc:	mov	x20, x3
    67c0:	str	xzr, [x1]
    67c4:	mov	x4, x3
    67c8:	add	x3, sp, #0x48
    67cc:	mov	x2, #0x0                   	// #0
    67d0:	mov	x1, #0x0                   	// #0
    67d4:	bl	63a8 <gcry_mpi_print>
    67d8:	mov	w19, w0
    67dc:	cbnz	w0, 6828 <gcry_mpi_aprint+0x8c>
    67e0:	cbz	x20, 67ec <gcry_mpi_aprint+0x50>
    67e4:	ldr	w0, [x20, #12]
    67e8:	tbnz	w0, #0, 6840 <gcry_mpi_aprint+0xa4>
    67ec:	ldr	x0, [sp, #72]
    67f0:	bl	6ae0 <gcry_malloc>
    67f4:	mov	x1, x0
    67f8:	str	x1, [x21]
    67fc:	cbz	x1, 6850 <gcry_mpi_aprint+0xb4>
    6800:	mov	x4, x20
    6804:	add	x3, sp, #0x48
    6808:	ldr	x2, [sp, #72]
    680c:	mov	w0, w23
    6810:	bl	63a8 <gcry_mpi_print>
    6814:	mov	w19, w0
    6818:	cbnz	w0, 685c <gcry_mpi_aprint+0xc0>
    681c:	cbz	x22, 6828 <gcry_mpi_aprint+0x8c>
    6820:	ldr	x0, [sp, #72]
    6824:	str	x0, [x22]
    6828:	mov	w0, w19
    682c:	ldp	x19, x20, [sp, #16]
    6830:	ldp	x21, x22, [sp, #32]
    6834:	ldr	x23, [sp, #48]
    6838:	ldp	x29, x30, [sp], #80
    683c:	ret
    6840:	ldr	x0, [sp, #72]
    6844:	bl	6af4 <gcry_malloc_secure>
    6848:	mov	x1, x0
    684c:	b	67f8 <gcry_mpi_aprint+0x5c>
    6850:	bl	6d98 <gpg_error_from_syserror>
    6854:	mov	w19, w0
    6858:	b	6828 <gcry_mpi_aprint+0x8c>
    685c:	ldr	x0, [x21]
    6860:	bl	6b08 <gcry_free>
    6864:	str	xzr, [x21]
    6868:	b	6828 <gcry_mpi_aprint+0x8c>

000000000000686c <_gcry_mpih_rshift>:
    686c:	sub	x8, x0, #0x8
    6870:	mov	w9, #0x40                  	// #64
    6874:	sub	w9, w9, w3
    6878:	ldr	x6, [x1]
    687c:	lsl	x0, x6, x9
    6880:	cmp	w2, #0x1
    6884:	b.le	68bc <_gcry_mpih_rshift+0x50>
    6888:	mov	x5, #0x1                   	// #1
    688c:	mov	x4, x6
    6890:	ldr	x6, [x1, x5, lsl #3]
    6894:	lsr	x4, x4, x3
    6898:	lsl	x7, x6, x9
    689c:	orr	x4, x4, x7
    68a0:	str	x4, [x8, x5, lsl #3]
    68a4:	add	x5, x5, #0x1
    68a8:	cmp	w2, w5
    68ac:	b.gt	688c <_gcry_mpih_rshift+0x20>
    68b0:	lsr	x6, x6, x3
    68b4:	str	x6, [x8, w2, sxtw #3]
    68b8:	ret
    68bc:	mov	w2, #0x1                   	// #1
    68c0:	b	68b0 <_gcry_mpih_rshift+0x44>

00000000000068c4 <_gcry_mpih_add_1>:
    68c4:	ldr	x5, [x1], #8
    68c8:	add	x3, x5, x3
    68cc:	mov	x4, x0
    68d0:	str	x3, [x4], #8
    68d4:	cmp	x5, x3
    68d8:	b.hi	6914 <_gcry_mpih_add_1+0x50>  // b.pmore
    68dc:	mov	x0, #0x0                   	// #0
    68e0:	cmp	x4, x1
    68e4:	b.eq	6910 <_gcry_mpih_add_1+0x4c>  // b.none
    68e8:	sub	w2, w2, #0x1
    68ec:	cmp	w2, #0x0
    68f0:	b.le	6938 <_gcry_mpih_add_1+0x74>
    68f4:	mov	x3, #0x0                   	// #0
    68f8:	ldr	x0, [x1, x3, lsl #3]
    68fc:	str	x0, [x4, x3, lsl #3]
    6900:	add	x3, x3, #0x1
    6904:	cmp	w2, w3
    6908:	b.gt	68f8 <_gcry_mpih_add_1+0x34>
    690c:	mov	x0, #0x0                   	// #0
    6910:	ret
    6914:	subs	w2, w2, #0x1
    6918:	b.eq	6930 <_gcry_mpih_add_1+0x6c>  // b.none
    691c:	ldr	x3, [x1], #8
    6920:	add	x3, x3, #0x1
    6924:	str	x3, [x4], #8
    6928:	cbz	x3, 6914 <_gcry_mpih_add_1+0x50>
    692c:	b	68dc <_gcry_mpih_add_1+0x18>
    6930:	mov	x0, #0x1                   	// #1
    6934:	b	6910 <_gcry_mpih_add_1+0x4c>
    6938:	mov	x0, #0x0                   	// #0
    693c:	b	6910 <_gcry_mpih_add_1+0x4c>

0000000000006940 <_gcry_mpih_add>:
    6940:	stp	x29, x30, [sp, #-48]!
    6944:	mov	x29, sp
    6948:	stp	x19, x20, [sp, #16]
    694c:	stp	x21, x22, [sp, #32]
    6950:	mov	x21, x0
    6954:	mov	x22, x1
    6958:	mov	w20, w2
    695c:	mov	w19, w4
    6960:	mov	x0, #0x0                   	// #0
    6964:	cbnz	w4, 6980 <_gcry_mpih_add+0x40>
    6968:	cmp	w19, w20
    696c:	b.ne	6994 <_gcry_mpih_add+0x54>  // b.any
    6970:	ldp	x19, x20, [sp, #16]
    6974:	ldp	x21, x22, [sp, #32]
    6978:	ldp	x29, x30, [sp], #48
    697c:	ret
    6980:	mov	x2, x3
    6984:	mov	w3, w4
    6988:	mov	x0, x21
    698c:	bl	4d2c <_gcry_mpih_add_n>
    6990:	b	6968 <_gcry_mpih_add+0x28>
    6994:	sbfiz	x4, x19, #3, #32
    6998:	mov	x3, x0
    699c:	sub	w2, w20, w19
    69a0:	add	x1, x22, x4
    69a4:	add	x0, x21, x4
    69a8:	bl	68c4 <_gcry_mpih_add_1>
    69ac:	b	6970 <_gcry_mpih_add+0x30>

00000000000069b0 <_gcry_mpih_sub_1>:
    69b0:	ldr	x5, [x1], #8
    69b4:	sub	x3, x5, x3
    69b8:	mov	x4, x0
    69bc:	str	x3, [x4], #8
    69c0:	cmp	x5, x3
    69c4:	b.cc	6a00 <_gcry_mpih_sub_1+0x50>  // b.lo, b.ul, b.last
    69c8:	mov	x0, #0x0                   	// #0
    69cc:	cmp	x4, x1
    69d0:	b.eq	69fc <_gcry_mpih_sub_1+0x4c>  // b.none
    69d4:	sub	w2, w2, #0x1
    69d8:	cmp	w2, #0x0
    69dc:	b.le	6a24 <_gcry_mpih_sub_1+0x74>
    69e0:	mov	x3, #0x0                   	// #0
    69e4:	ldr	x0, [x1, x3, lsl #3]
    69e8:	str	x0, [x4, x3, lsl #3]
    69ec:	add	x3, x3, #0x1
    69f0:	cmp	w2, w3
    69f4:	b.gt	69e4 <_gcry_mpih_sub_1+0x34>
    69f8:	mov	x0, #0x0                   	// #0
    69fc:	ret
    6a00:	subs	w2, w2, #0x1
    6a04:	b.eq	6a1c <_gcry_mpih_sub_1+0x6c>  // b.none
    6a08:	ldr	x0, [x1], #8
    6a0c:	sub	x3, x0, #0x1
    6a10:	str	x3, [x4], #8
    6a14:	cbz	x0, 6a00 <_gcry_mpih_sub_1+0x50>
    6a18:	b	69c8 <_gcry_mpih_sub_1+0x18>
    6a1c:	mov	x0, #0x1                   	// #1
    6a20:	b	69fc <_gcry_mpih_sub_1+0x4c>
    6a24:	mov	x0, #0x0                   	// #0
    6a28:	b	69fc <_gcry_mpih_sub_1+0x4c>

0000000000006a2c <_gcry_mpih_sub>:
    6a2c:	stp	x29, x30, [sp, #-48]!
    6a30:	mov	x29, sp
    6a34:	stp	x19, x20, [sp, #16]
    6a38:	stp	x21, x22, [sp, #32]
    6a3c:	mov	x21, x0
    6a40:	mov	x22, x1
    6a44:	mov	w20, w2
    6a48:	mov	w19, w4
    6a4c:	mov	x0, #0x0                   	// #0
    6a50:	cbnz	w4, 6a6c <_gcry_mpih_sub+0x40>
    6a54:	cmp	w19, w20
    6a58:	b.ne	6a80 <_gcry_mpih_sub+0x54>  // b.any
    6a5c:	ldp	x19, x20, [sp, #16]
    6a60:	ldp	x21, x22, [sp, #32]
    6a64:	ldp	x29, x30, [sp], #48
    6a68:	ret
    6a6c:	mov	x2, x3
    6a70:	mov	w3, w4
    6a74:	mov	x0, x21
    6a78:	bl	4d70 <_gcry_mpih_sub_n>
    6a7c:	b	6a54 <_gcry_mpih_sub+0x28>
    6a80:	sbfiz	x4, x19, #3, #32
    6a84:	mov	x3, x0
    6a88:	sub	w2, w20, w19
    6a8c:	add	x1, x22, x4
    6a90:	add	x0, x21, x4
    6a94:	bl	69b0 <_gcry_mpih_sub_1>
    6a98:	b	6a5c <_gcry_mpih_sub+0x30>

0000000000006a9c <_gcry_mpih_cmp>:
    6a9c:	subs	w2, w2, #0x1
    6aa0:	b.mi	6ad4 <_gcry_mpih_cmp+0x38>  // b.first
    6aa4:	sxtw	x2, w2
    6aa8:	ldr	x4, [x0, x2, lsl #3]
    6aac:	ldr	x3, [x1, x2, lsl #3]
    6ab0:	cmp	x4, x3
    6ab4:	b.ne	6ac8 <_gcry_mpih_cmp+0x2c>  // b.any
    6ab8:	sub	x2, x2, #0x1
    6abc:	tbz	w2, #31, 6aa8 <_gcry_mpih_cmp+0xc>
    6ac0:	mov	w0, #0x0                   	// #0
    6ac4:	b	6ad0 <_gcry_mpih_cmp+0x34>
    6ac8:	mov	w0, #0xffffffff            	// #-1
    6acc:	cneg	w0, w0, hi  // hi = pmore
    6ad0:	ret
    6ad4:	mov	w0, #0x0                   	// #0
    6ad8:	b	6ad0 <_gcry_mpih_cmp+0x34>
    6adc:	nop

0000000000006ae0 <gcry_malloc>:
    6ae0:	stp	x29, x30, [sp, #-16]!
    6ae4:	mov	x29, sp
    6ae8:	bl	0 <grub_malloc>
    6aec:	ldp	x29, x30, [sp], #16
    6af0:	ret

0000000000006af4 <gcry_malloc_secure>:
    6af4:	stp	x29, x30, [sp, #-16]!
    6af8:	mov	x29, sp
    6afc:	bl	0 <grub_malloc>
    6b00:	ldp	x29, x30, [sp], #16
    6b04:	ret

0000000000006b08 <gcry_free>:
    6b08:	stp	x29, x30, [sp, #-16]!
    6b0c:	mov	x29, sp
    6b10:	bl	0 <grub_free>
    6b14:	ldp	x29, x30, [sp], #16
    6b18:	ret

0000000000006b1c <gcry_is_secure>:
    6b1c:	mov	w0, #0x0                   	// #0
    6b20:	ret

0000000000006b24 <gcry_xcalloc>:
    6b24:	stp	x29, x30, [sp, #-16]!
    6b28:	mov	x29, sp
    6b2c:	mul	x0, x0, x1
    6b30:	bl	0 <grub_zalloc>
    6b34:	cbz	x0, 6b40 <gcry_xcalloc+0x1c>
    6b38:	ldp	x29, x30, [sp], #16
    6b3c:	ret
    6b40:	adrp	x0, 0 <_gcry_mpi_m_check>
    6b44:	ldr	x0, [x0]
    6b48:	bl	0 <grub_fatal>
    6b4c:	nop
	...

0000000000006b58 <gcry_xmalloc_secure>:
    6b58:	stp	x29, x30, [sp, #-16]!
    6b5c:	mov	x29, sp
    6b60:	bl	0 <grub_malloc>
    6b64:	cbz	x0, 6b70 <gcry_xmalloc_secure+0x18>
    6b68:	ldp	x29, x30, [sp], #16
    6b6c:	ret
    6b70:	adrp	x0, 0 <_gcry_mpi_m_check>
    6b74:	ldr	x0, [x0]
    6b78:	bl	0 <grub_fatal>
    6b7c:	nop
	...

0000000000006b88 <gcry_xcalloc_secure>:
    6b88:	stp	x29, x30, [sp, #-16]!
    6b8c:	mov	x29, sp
    6b90:	mul	x0, x0, x1
    6b94:	bl	0 <grub_zalloc>
    6b98:	cbz	x0, 6ba4 <gcry_xcalloc_secure+0x1c>
    6b9c:	ldp	x29, x30, [sp], #16
    6ba0:	ret
    6ba4:	adrp	x0, 0 <_gcry_mpi_m_check>
    6ba8:	ldr	x0, [x0]
    6bac:	bl	0 <grub_fatal>
	...

0000000000006bb8 <gcry_xmalloc>:
    6bb8:	stp	x29, x30, [sp, #-16]!
    6bbc:	mov	x29, sp
    6bc0:	bl	0 <grub_malloc>
    6bc4:	cbz	x0, 6bd0 <gcry_xmalloc+0x18>
    6bc8:	ldp	x29, x30, [sp], #16
    6bcc:	ret
    6bd0:	adrp	x0, 0 <_gcry_mpi_m_check>
    6bd4:	ldr	x0, [x0]
    6bd8:	bl	0 <grub_fatal>
    6bdc:	nop
	...

0000000000006be8 <gcry_xrealloc>:
    6be8:	stp	x29, x30, [sp, #-16]!
    6bec:	mov	x29, sp
    6bf0:	bl	0 <grub_realloc>
    6bf4:	cbz	x0, 6c00 <gcry_xrealloc+0x18>
    6bf8:	ldp	x29, x30, [sp], #16
    6bfc:	ret
    6c00:	adrp	x0, 0 <_gcry_mpi_m_check>
    6c04:	ldr	x0, [x0]
    6c08:	bl	0 <grub_fatal>
    6c0c:	nop
	...

0000000000006c18 <_gcry_check_heap>:
    6c18:	ret

0000000000006c1c <_gcry_log_printf>:
    6c1c:	stp	x29, x30, [sp, #-160]!
    6c20:	mov	x29, sp
    6c24:	stp	x19, x20, [sp, #16]
    6c28:	mov	x20, x0
    6c2c:	str	x1, [sp, #104]
    6c30:	str	x2, [sp, #112]
    6c34:	str	x3, [sp, #120]
    6c38:	str	x4, [sp, #128]
    6c3c:	str	x5, [sp, #136]
    6c40:	str	x6, [sp, #144]
    6c44:	str	x7, [sp, #152]
    6c48:	adrp	x1, 0 <_gcry_mpi_m_check>
    6c4c:	ldr	x0, [x1]
    6c50:	bl	0 <grub_env_get>
    6c54:	cbz	x0, 6cd0 <_gcry_log_printf+0xb4>
    6c58:	mov	x19, x0
    6c5c:	adrp	x0, 0 <_gcry_mpi_m_check>
    6c60:	ldr	x1, [x0]
    6c64:	mov	x0, x19
    6c68:	bl	0 <grub_strword>
    6c6c:	cbnz	w0, 6c84 <_gcry_log_printf+0x68>
    6c70:	adrp	x0, 0 <_gcry_mpi_m_check>
    6c74:	ldr	x1, [x0]
    6c78:	mov	x0, x19
    6c7c:	bl	0 <grub_strword>
    6c80:	cbz	w0, 6cd0 <_gcry_log_printf+0xb4>
    6c84:	adrp	x0, 0 <_gcry_mpi_m_check>
    6c88:	ldr	x0, [x0]
    6c8c:	bl	0 <grub_printf>
    6c90:	add	x0, sp, #0xa0
    6c94:	str	x0, [sp, #64]
    6c98:	str	x0, [sp, #72]
    6c9c:	add	x0, sp, #0x60
    6ca0:	str	x0, [sp, #80]
    6ca4:	mov	w0, #0xffffffc8            	// #-56
    6ca8:	str	w0, [sp, #88]
    6cac:	str	wzr, [sp, #92]
    6cb0:	ldp	x0, x1, [sp, #64]
    6cb4:	stp	x0, x1, [sp, #32]
    6cb8:	ldp	x0, x1, [sp, #80]
    6cbc:	stp	x0, x1, [sp, #48]
    6cc0:	add	x1, sp, #0x20
    6cc4:	mov	x0, x20
    6cc8:	bl	0 <grub_vprintf>
    6ccc:	bl	0 <grub_refresh>
    6cd0:	ldp	x19, x20, [sp, #16]
    6cd4:	ldp	x29, x30, [sp], #160
    6cd8:	ret
    6cdc:	nop
	...

0000000000006d00 <_gcry_log_bug>:
    6d00:	stp	x29, x30, [sp, #-160]!
    6d04:	mov	x29, sp
    6d08:	str	x19, [sp, #16]
    6d0c:	mov	x19, x0
    6d10:	str	x1, [sp, #104]
    6d14:	str	x2, [sp, #112]
    6d18:	str	x3, [sp, #120]
    6d1c:	str	x4, [sp, #128]
    6d20:	str	x5, [sp, #136]
    6d24:	str	x6, [sp, #144]
    6d28:	str	x7, [sp, #152]
    6d2c:	adrp	x0, 0 <_gcry_mpi_m_check>
    6d30:	ldr	x0, [x0]
    6d34:	bl	0 <grub_printf>
    6d38:	add	x0, sp, #0xa0
    6d3c:	str	x0, [sp, #64]
    6d40:	str	x0, [sp, #72]
    6d44:	add	x0, sp, #0x60
    6d48:	str	x0, [sp, #80]
    6d4c:	mov	w0, #0xffffffc8            	// #-56
    6d50:	str	w0, [sp, #88]
    6d54:	str	wzr, [sp, #92]
    6d58:	ldp	x0, x1, [sp, #64]
    6d5c:	stp	x0, x1, [sp, #32]
    6d60:	ldp	x0, x1, [sp, #80]
    6d64:	stp	x0, x1, [sp, #48]
    6d68:	add	x1, sp, #0x20
    6d6c:	mov	x0, x19
    6d70:	bl	0 <grub_vprintf>
    6d74:	bl	0 <grub_refresh>
    6d78:	adrp	x0, 0 <_gcry_mpi_m_check>
    6d7c:	ldr	x0, [x0]
    6d80:	bl	0 <grub_fatal>
    6d84:	nop
	...

0000000000006d98 <gpg_error_from_syserror>:
    6d98:	adrp	x0, 0 <_gcry_mpi_m_check>
    6d9c:	ldr	x0, [x0]
    6da0:	ldr	w0, [x0]
    6da4:	cbz	w0, 6db8 <gpg_error_from_syserror+0x20>
    6da8:	cmp	w0, #0x3
    6dac:	mov	w0, #0x8                   	// #8
    6db0:	mov	w1, #0x22                  	// #34
    6db4:	csel	w0, w0, w1, ne  // ne = any
    6db8:	ret
    6dbc:	nop
	...
