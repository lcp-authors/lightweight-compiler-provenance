
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403e30 <.init>:
  403e30:	stp	x29, x30, [sp, #-16]!
  403e34:	mov	x29, sp
  403e38:	bl	404b50 <wcrtomb@plt+0x60>
  403e3c:	ldp	x29, x30, [sp], #16
  403e40:	ret

Disassembly of section .plt:

0000000000403e50 <mbrtowc@plt-0x20>:
  403e50:	stp	x16, x30, [sp, #-16]!
  403e54:	adrp	x16, 47c000 <_obstack_memory_used@@Base+0x30e3c>
  403e58:	ldr	x17, [x16, #4088]
  403e5c:	add	x16, x16, #0xff8
  403e60:	br	x17
  403e64:	nop
  403e68:	nop
  403e6c:	nop

0000000000403e70 <mbrtowc@plt>:
  403e70:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403e74:	ldr	x17, [x16]
  403e78:	add	x16, x16, #0x0
  403e7c:	br	x17

0000000000403e80 <memcpy@plt>:
  403e80:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403e84:	ldr	x17, [x16, #8]
  403e88:	add	x16, x16, #0x8
  403e8c:	br	x17

0000000000403e90 <memmove@plt>:
  403e90:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403e94:	ldr	x17, [x16, #16]
  403e98:	add	x16, x16, #0x10
  403e9c:	br	x17

0000000000403ea0 <_exit@plt>:
  403ea0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ea4:	ldr	x17, [x16, #24]
  403ea8:	add	x16, x16, #0x18
  403eac:	br	x17

0000000000403eb0 <getcwd@plt>:
  403eb0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403eb4:	ldr	x17, [x16, #32]
  403eb8:	add	x16, x16, #0x20
  403ebc:	br	x17

0000000000403ec0 <setuid@plt>:
  403ec0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ec4:	ldr	x17, [x16, #40]
  403ec8:	add	x16, x16, #0x28
  403ecc:	br	x17

0000000000403ed0 <strtok@plt>:
  403ed0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ed4:	ldr	x17, [x16, #48]
  403ed8:	add	x16, x16, #0x30
  403edc:	br	x17

0000000000403ee0 <fwrite_unlocked@plt>:
  403ee0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ee4:	ldr	x17, [x16, #56]
  403ee8:	add	x16, x16, #0x38
  403eec:	br	x17

0000000000403ef0 <strtoul@plt>:
  403ef0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ef4:	ldr	x17, [x16, #64]
  403ef8:	add	x16, x16, #0x40
  403efc:	br	x17

0000000000403f00 <strlen@plt>:
  403f00:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f04:	ldr	x17, [x16, #72]
  403f08:	add	x16, x16, #0x48
  403f0c:	br	x17

0000000000403f10 <fputs@plt>:
  403f10:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f14:	ldr	x17, [x16, #80]
  403f18:	add	x16, x16, #0x50
  403f1c:	br	x17

0000000000403f20 <__sprintf_chk@plt>:
  403f20:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f24:	ldr	x17, [x16, #88]
  403f28:	add	x16, x16, #0x58
  403f2c:	br	x17

0000000000403f30 <exit@plt>:
  403f30:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f34:	ldr	x17, [x16, #96]
  403f38:	add	x16, x16, #0x60
  403f3c:	br	x17

0000000000403f40 <raise@plt>:
  403f40:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f44:	ldr	x17, [x16, #104]
  403f48:	add	x16, x16, #0x68
  403f4c:	br	x17

0000000000403f50 <dup@plt>:
  403f50:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f54:	ldr	x17, [x16, #112]
  403f58:	add	x16, x16, #0x70
  403f5c:	br	x17

0000000000403f60 <error@plt>:
  403f60:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f64:	ldr	x17, [x16, #120]
  403f68:	add	x16, x16, #0x78
  403f6c:	br	x17

0000000000403f70 <fchdir@plt>:
  403f70:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f74:	ldr	x17, [x16, #128]
  403f78:	add	x16, x16, #0x80
  403f7c:	br	x17

0000000000403f80 <rpmatch@plt>:
  403f80:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f84:	ldr	x17, [x16, #136]
  403f88:	add	x16, x16, #0x88
  403f8c:	br	x17

0000000000403f90 <execl@plt>:
  403f90:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f94:	ldr	x17, [x16, #144]
  403f98:	add	x16, x16, #0x90
  403f9c:	br	x17

0000000000403fa0 <flockfile@plt>:
  403fa0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fa4:	ldr	x17, [x16, #152]
  403fa8:	add	x16, x16, #0x98
  403fac:	br	x17

0000000000403fb0 <wctype@plt>:
  403fb0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fb4:	ldr	x17, [x16, #160]
  403fb8:	add	x16, x16, #0xa0
  403fbc:	br	x17

0000000000403fc0 <sigprocmask@plt>:
  403fc0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fc4:	ldr	x17, [x16, #168]
  403fc8:	add	x16, x16, #0xa8
  403fcc:	br	x17

0000000000403fd0 <strnlen@plt>:
  403fd0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fd4:	ldr	x17, [x16, #176]
  403fd8:	add	x16, x16, #0xb0
  403fdc:	br	x17

0000000000403fe0 <geteuid@plt>:
  403fe0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fe4:	ldr	x17, [x16, #184]
  403fe8:	add	x16, x16, #0xb8
  403fec:	br	x17

0000000000403ff0 <linkat@plt>:
  403ff0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ff4:	ldr	x17, [x16, #192]
  403ff8:	add	x16, x16, #0xc0
  403ffc:	br	x17

0000000000404000 <localtime_r@plt>:
  404000:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404004:	ldr	x17, [x16, #200]
  404008:	add	x16, x16, #0xc8
  40400c:	br	x17

0000000000404010 <setenv@plt>:
  404010:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404014:	ldr	x17, [x16, #208]
  404018:	add	x16, x16, #0xd0
  40401c:	br	x17

0000000000404020 <getgrnam@plt>:
  404020:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404024:	ldr	x17, [x16, #216]
  404028:	add	x16, x16, #0xd8
  40402c:	br	x17

0000000000404030 <getuid@plt>:
  404030:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404034:	ldr	x17, [x16, #224]
  404038:	add	x16, x16, #0xe0
  40403c:	br	x17

0000000000404040 <pipe@plt>:
  404040:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404044:	ldr	x17, [x16, #232]
  404048:	add	x16, x16, #0xe8
  40404c:	br	x17

0000000000404050 <opendir@plt>:
  404050:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404054:	ldr	x17, [x16, #240]
  404058:	add	x16, x16, #0xf0
  40405c:	br	x17

0000000000404060 <strftime@plt>:
  404060:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404064:	ldr	x17, [x16, #248]
  404068:	add	x16, x16, #0xf8
  40406c:	br	x17

0000000000404070 <unlinkat@plt>:
  404070:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404074:	ldr	x17, [x16, #256]
  404078:	add	x16, x16, #0x100
  40407c:	br	x17

0000000000404080 <fputc@plt>:
  404080:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404084:	ldr	x17, [x16, #264]
  404088:	add	x16, x16, #0x108
  40408c:	br	x17

0000000000404090 <iswcntrl@plt>:
  404090:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404094:	ldr	x17, [x16, #272]
  404098:	add	x16, x16, #0x110
  40409c:	br	x17

00000000004040a0 <clock_gettime@plt>:
  4040a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040a4:	ldr	x17, [x16, #280]
  4040a8:	add	x16, x16, #0x118
  4040ac:	br	x17

00000000004040b0 <qsort@plt>:
  4040b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040b4:	ldr	x17, [x16, #288]
  4040b8:	add	x16, x16, #0x120
  4040bc:	br	x17

00000000004040c0 <pathconf@plt>:
  4040c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040c4:	ldr	x17, [x16, #296]
  4040c8:	add	x16, x16, #0x128
  4040cc:	br	x17

00000000004040d0 <fork@plt>:
  4040d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040d4:	ldr	x17, [x16, #304]
  4040d8:	add	x16, x16, #0x130
  4040dc:	br	x17

00000000004040e0 <lseek@plt>:
  4040e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16, #312]
  4040e8:	add	x16, x16, #0x138
  4040ec:	br	x17

00000000004040f0 <__fpending@plt>:
  4040f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #320]
  4040f8:	add	x16, x16, #0x140
  4040fc:	br	x17

0000000000404100 <__ctype_tolower_loc@plt>:
  404100:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #328]
  404108:	add	x16, x16, #0x148
  40410c:	br	x17

0000000000404110 <localeconv@plt>:
  404110:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #336]
  404118:	add	x16, x16, #0x150
  40411c:	br	x17

0000000000404120 <stpcpy@plt>:
  404120:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #344]
  404128:	add	x16, x16, #0x158
  40412c:	br	x17

0000000000404130 <fileno@plt>:
  404130:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #352]
  404138:	add	x16, x16, #0x160
  40413c:	br	x17

0000000000404140 <localtime@plt>:
  404140:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #360]
  404148:	add	x16, x16, #0x168
  40414c:	br	x17

0000000000404150 <__memcpy_chk@plt>:
  404150:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #368]
  404158:	add	x16, x16, #0x170
  40415c:	br	x17

0000000000404160 <mkdirat@plt>:
  404160:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #376]
  404168:	add	x16, x16, #0x178
  40416c:	br	x17

0000000000404170 <signal@plt>:
  404170:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #384]
  404178:	add	x16, x16, #0x180
  40417c:	br	x17

0000000000404180 <acl_delete_def_file@plt>:
  404180:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #392]
  404188:	add	x16, x16, #0x188
  40418c:	br	x17

0000000000404190 <__snprintf_chk@plt>:
  404190:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #400]
  404198:	add	x16, x16, #0x190
  40419c:	br	x17

00000000004041a0 <fclose@plt>:
  4041a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #408]
  4041a8:	add	x16, x16, #0x198
  4041ac:	br	x17

00000000004041b0 <fsync@plt>:
  4041b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #416]
  4041b8:	add	x16, x16, #0x1a0
  4041bc:	br	x17

00000000004041c0 <getpid@plt>:
  4041c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #424]
  4041c8:	add	x16, x16, #0x1a8
  4041cc:	br	x17

00000000004041d0 <nl_langinfo@plt>:
  4041d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #432]
  4041d8:	add	x16, x16, #0x1b0
  4041dc:	br	x17

00000000004041e0 <fopen@plt>:
  4041e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #440]
  4041e8:	add	x16, x16, #0x1b8
  4041ec:	br	x17

00000000004041f0 <__vsnprintf_chk@plt>:
  4041f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #448]
  4041f8:	add	x16, x16, #0x1c0
  4041fc:	br	x17

0000000000404200 <iswctype@plt>:
  404200:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #456]
  404208:	add	x16, x16, #0x1c8
  40420c:	br	x17

0000000000404210 <malloc@plt>:
  404210:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #464]
  404218:	add	x16, x16, #0x1d0
  40421c:	br	x17

0000000000404220 <wcwidth@plt>:
  404220:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #472]
  404228:	add	x16, x16, #0x1d8
  40422c:	br	x17

0000000000404230 <funlockfile@plt>:
  404230:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #480]
  404238:	add	x16, x16, #0x1e0
  40423c:	br	x17

0000000000404240 <open@plt>:
  404240:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #488]
  404248:	add	x16, x16, #0x1e8
  40424c:	br	x17

0000000000404250 <__vasprintf_chk@plt>:
  404250:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #496]
  404258:	add	x16, x16, #0x1f0
  40425c:	br	x17

0000000000404260 <tzset@plt>:
  404260:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #504]
  404268:	add	x16, x16, #0x1f8
  40426c:	br	x17

0000000000404270 <__strcpy_chk@plt>:
  404270:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #512]
  404278:	add	x16, x16, #0x200
  40427c:	br	x17

0000000000404280 <__isoc99_fscanf@plt>:
  404280:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #520]
  404288:	add	x16, x16, #0x208
  40428c:	br	x17

0000000000404290 <__strtol_internal@plt>:
  404290:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #528]
  404298:	add	x16, x16, #0x210
  40429c:	br	x17

00000000004042a0 <sigemptyset@plt>:
  4042a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #536]
  4042a8:	add	x16, x16, #0x218
  4042ac:	br	x17

00000000004042b0 <futimens@plt>:
  4042b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #544]
  4042b8:	add	x16, x16, #0x220
  4042bc:	br	x17

00000000004042c0 <strncmp@plt>:
  4042c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #552]
  4042c8:	add	x16, x16, #0x228
  4042cc:	br	x17

00000000004042d0 <bindtextdomain@plt>:
  4042d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #560]
  4042d8:	add	x16, x16, #0x230
  4042dc:	br	x17

00000000004042e0 <__libc_start_main@plt>:
  4042e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #568]
  4042e8:	add	x16, x16, #0x238
  4042ec:	br	x17

00000000004042f0 <setxattr@plt>:
  4042f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #576]
  4042f8:	add	x16, x16, #0x240
  4042fc:	br	x17

0000000000404300 <strcat@plt>:
  404300:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #584]
  404308:	add	x16, x16, #0x248
  40430c:	br	x17

0000000000404310 <__printf_chk@plt>:
  404310:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #592]
  404318:	add	x16, x16, #0x250
  40431c:	br	x17

0000000000404320 <memset@plt>:
  404320:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #600]
  404328:	add	x16, x16, #0x258
  40432c:	br	x17

0000000000404330 <fdopen@plt>:
  404330:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #608]
  404338:	add	x16, x16, #0x260
  40433c:	br	x17

0000000000404340 <gettimeofday@plt>:
  404340:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #616]
  404348:	add	x16, x16, #0x268
  40434c:	br	x17

0000000000404350 <getpwnam@plt>:
  404350:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #624]
  404358:	add	x16, x16, #0x270
  40435c:	br	x17

0000000000404360 <gmtime_r@plt>:
  404360:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #632]
  404368:	add	x16, x16, #0x278
  40436c:	br	x17

0000000000404370 <sleep@plt>:
  404370:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #640]
  404378:	add	x16, x16, #0x280
  40437c:	br	x17

0000000000404380 <fchmod@plt>:
  404380:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #648]
  404388:	add	x16, x16, #0x288
  40438c:	br	x17

0000000000404390 <__xmknodat@plt>:
  404390:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #656]
  404398:	add	x16, x16, #0x290
  40439c:	br	x17

00000000004043a0 <strerror_r@plt>:
  4043a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #664]
  4043a8:	add	x16, x16, #0x298
  4043ac:	br	x17

00000000004043b0 <__vfprintf_chk@plt>:
  4043b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #672]
  4043b8:	add	x16, x16, #0x2a0
  4043bc:	br	x17

00000000004043c0 <__strtoul_internal@plt>:
  4043c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #680]
  4043c8:	add	x16, x16, #0x2a8
  4043cc:	br	x17

00000000004043d0 <calloc@plt>:
  4043d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #688]
  4043d8:	add	x16, x16, #0x2b0
  4043dc:	br	x17

00000000004043e0 <lsetxattr@plt>:
  4043e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #696]
  4043e8:	add	x16, x16, #0x2b8
  4043ec:	br	x17

00000000004043f0 <listxattr@plt>:
  4043f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #704]
  4043f8:	add	x16, x16, #0x2c0
  4043fc:	br	x17

0000000000404400 <bcmp@plt>:
  404400:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #712]
  404408:	add	x16, x16, #0x2c8
  40440c:	br	x17

0000000000404410 <execv@plt>:
  404410:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #720]
  404418:	add	x16, x16, #0x2d0
  40441c:	br	x17

0000000000404420 <strcasecmp@plt>:
  404420:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #728]
  404428:	add	x16, x16, #0x2d8
  40442c:	br	x17

0000000000404430 <gmtime@plt>:
  404430:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #736]
  404438:	add	x16, x16, #0x2e0
  40443c:	br	x17

0000000000404440 <readdir@plt>:
  404440:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #744]
  404448:	add	x16, x16, #0x2e8
  40444c:	br	x17

0000000000404450 <realloc@plt>:
  404450:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #752]
  404458:	add	x16, x16, #0x2f0
  40445c:	br	x17

0000000000404460 <__ctype_toupper_loc@plt>:
  404460:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #760]
  404468:	add	x16, x16, #0x2f8
  40446c:	br	x17

0000000000404470 <acl_set_file@plt>:
  404470:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #768]
  404478:	add	x16, x16, #0x300
  40447c:	br	x17

0000000000404480 <getpagesize@plt>:
  404480:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #776]
  404488:	add	x16, x16, #0x308
  40448c:	br	x17

0000000000404490 <lgetxattr@plt>:
  404490:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #784]
  404498:	add	x16, x16, #0x310
  40449c:	br	x17

00000000004044a0 <strdup@plt>:
  4044a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #792]
  4044a8:	add	x16, x16, #0x318
  4044ac:	br	x17

00000000004044b0 <closedir@plt>:
  4044b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #800]
  4044b8:	add	x16, x16, #0x320
  4044bc:	br	x17

00000000004044c0 <strerror@plt>:
  4044c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #808]
  4044c8:	add	x16, x16, #0x328
  4044cc:	br	x17

00000000004044d0 <close@plt>:
  4044d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #816]
  4044d8:	add	x16, x16, #0x330
  4044dc:	br	x17

00000000004044e0 <strrchr@plt>:
  4044e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #824]
  4044e8:	add	x16, x16, #0x338
  4044ec:	br	x17

00000000004044f0 <acl_to_text@plt>:
  4044f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #832]
  4044f8:	add	x16, x16, #0x340
  4044fc:	br	x17

0000000000404500 <__gmon_start__@plt>:
  404500:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #840]
  404508:	add	x16, x16, #0x348
  40450c:	br	x17

0000000000404510 <mktime@plt>:
  404510:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #848]
  404518:	add	x16, x16, #0x350
  40451c:	br	x17

0000000000404520 <fdopendir@plt>:
  404520:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #856]
  404528:	add	x16, x16, #0x358
  40452c:	br	x17

0000000000404530 <write@plt>:
  404530:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #864]
  404538:	add	x16, x16, #0x360
  40453c:	br	x17

0000000000404540 <btowc@plt>:
  404540:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #872]
  404548:	add	x16, x16, #0x368
  40454c:	br	x17

0000000000404550 <mkdtemp@plt>:
  404550:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #880]
  404558:	add	x16, x16, #0x370
  40455c:	br	x17

0000000000404560 <abort@plt>:
  404560:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #888]
  404568:	add	x16, x16, #0x378
  40456c:	br	x17

0000000000404570 <setgid@plt>:
  404570:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #896]
  404578:	add	x16, x16, #0x380
  40457c:	br	x17

0000000000404580 <mbsinit@plt>:
  404580:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #904]
  404588:	add	x16, x16, #0x388
  40458c:	br	x17

0000000000404590 <__overflow@plt>:
  404590:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #912]
  404598:	add	x16, x16, #0x390
  40459c:	br	x17

00000000004045a0 <access@plt>:
  4045a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #920]
  4045a8:	add	x16, x16, #0x398
  4045ac:	br	x17

00000000004045b0 <fpathconf@plt>:
  4045b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #928]
  4045b8:	add	x16, x16, #0x3a0
  4045bc:	br	x17

00000000004045c0 <getxattr@plt>:
  4045c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #936]
  4045c8:	add	x16, x16, #0x3a8
  4045cc:	br	x17

00000000004045d0 <memcmp@plt>:
  4045d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #944]
  4045d8:	add	x16, x16, #0x3b0
  4045dc:	br	x17

00000000004045e0 <textdomain@plt>:
  4045e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #952]
  4045e8:	add	x16, x16, #0x3b8
  4045ec:	br	x17

00000000004045f0 <execvp@plt>:
  4045f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #960]
  4045f8:	add	x16, x16, #0x3c0
  4045fc:	br	x17

0000000000404600 <__fprintf_chk@plt>:
  404600:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #968]
  404608:	add	x16, x16, #0x3c8
  40460c:	br	x17

0000000000404610 <strcmp@plt>:
  404610:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #976]
  404618:	add	x16, x16, #0x3d0
  40461c:	br	x17

0000000000404620 <getpwuid@plt>:
  404620:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #984]
  404628:	add	x16, x16, #0x3d8
  40462c:	br	x17

0000000000404630 <iconv@plt>:
  404630:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #992]
  404638:	add	x16, x16, #0x3e0
  40463c:	br	x17

0000000000404640 <__ctype_b_loc@plt>:
  404640:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #1000]
  404648:	add	x16, x16, #0x3e8
  40464c:	br	x17

0000000000404650 <rewinddir@plt>:
  404650:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #1008]
  404658:	add	x16, x16, #0x3f0
  40465c:	br	x17

0000000000404660 <acl_get_file@plt>:
  404660:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #1016]
  404668:	add	x16, x16, #0x3f8
  40466c:	br	x17

0000000000404670 <strtol@plt>:
  404670:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #1024]
  404678:	add	x16, x16, #0x400
  40467c:	br	x17

0000000000404680 <fseeko@plt>:
  404680:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #1032]
  404688:	add	x16, x16, #0x408
  40468c:	br	x17

0000000000404690 <sigwait@plt>:
  404690:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #1040]
  404698:	add	x16, x16, #0x410
  40469c:	br	x17

00000000004046a0 <chdir@plt>:
  4046a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #1048]
  4046a8:	add	x16, x16, #0x418
  4046ac:	br	x17

00000000004046b0 <free@plt>:
  4046b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #1056]
  4046b8:	add	x16, x16, #0x420
  4046bc:	br	x17

00000000004046c0 <__strcat_chk@plt>:
  4046c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #1064]
  4046c8:	add	x16, x16, #0x428
  4046cc:	br	x17

00000000004046d0 <renameat2@plt>:
  4046d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #1072]
  4046d8:	add	x16, x16, #0x430
  4046dc:	br	x17

00000000004046e0 <__ctype_get_mb_cur_max@plt>:
  4046e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #1080]
  4046e8:	add	x16, x16, #0x438
  4046ec:	br	x17

00000000004046f0 <getgid@plt>:
  4046f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #1088]
  4046f8:	add	x16, x16, #0x440
  4046fc:	br	x17

0000000000404700 <renameat@plt>:
  404700:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #1096]
  404708:	add	x16, x16, #0x448
  40470c:	br	x17

0000000000404710 <fgetxattr@plt>:
  404710:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #1104]
  404718:	add	x16, x16, #0x450
  40471c:	br	x17

0000000000404720 <fchownat@plt>:
  404720:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #1112]
  404728:	add	x16, x16, #0x458
  40472c:	br	x17

0000000000404730 <strndup@plt>:
  404730:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #1120]
  404738:	add	x16, x16, #0x460
  40473c:	br	x17

0000000000404740 <strspn@plt>:
  404740:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #1128]
  404748:	add	x16, x16, #0x468
  40474c:	br	x17

0000000000404750 <strchr@plt>:
  404750:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #1136]
  404758:	add	x16, x16, #0x470
  40475c:	br	x17

0000000000404760 <globfree@plt>:
  404760:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #1144]
  404768:	add	x16, x16, #0x478
  40476c:	br	x17

0000000000404770 <memrchr@plt>:
  404770:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #1152]
  404778:	add	x16, x16, #0x480
  40477c:	br	x17

0000000000404780 <utimensat@plt>:
  404780:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #1160]
  404788:	add	x16, x16, #0x488
  40478c:	br	x17

0000000000404790 <fwrite@plt>:
  404790:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #1168]
  404798:	add	x16, x16, #0x490
  40479c:	br	x17

00000000004047a0 <fnmatch@plt>:
  4047a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #1176]
  4047a8:	add	x16, x16, #0x498
  4047ac:	br	x17

00000000004047b0 <fflush_unlocked@plt>:
  4047b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #1184]
  4047b8:	add	x16, x16, #0x4a0
  4047bc:	br	x17

00000000004047c0 <fcntl@plt>:
  4047c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #1192]
  4047c8:	add	x16, x16, #0x4a8
  4047cc:	br	x17

00000000004047d0 <dcngettext@plt>:
  4047d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #1200]
  4047d8:	add	x16, x16, #0x4b0
  4047dc:	br	x17

00000000004047e0 <ftello@plt>:
  4047e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #1208]
  4047e8:	add	x16, x16, #0x4b8
  4047ec:	br	x17

00000000004047f0 <strcpy@plt>:
  4047f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #1216]
  4047f8:	add	x16, x16, #0x4c0
  4047fc:	br	x17

0000000000404800 <dirfd@plt>:
  404800:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #1224]
  404808:	add	x16, x16, #0x4c8
  40480c:	br	x17

0000000000404810 <unsetenv@plt>:
  404810:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #1232]
  404818:	add	x16, x16, #0x4d0
  40481c:	br	x17

0000000000404820 <iconv_open@plt>:
  404820:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #1240]
  404828:	add	x16, x16, #0x4d8
  40482c:	br	x17

0000000000404830 <read@plt>:
  404830:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #1248]
  404838:	add	x16, x16, #0x4e0
  40483c:	br	x17

0000000000404840 <memchr@plt>:
  404840:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #1256]
  404848:	add	x16, x16, #0x4e8
  40484c:	br	x17

0000000000404850 <isatty@plt>:
  404850:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #1264]
  404858:	add	x16, x16, #0x4f0
  40485c:	br	x17

0000000000404860 <__mempcpy_chk@plt>:
  404860:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #1272]
  404868:	add	x16, x16, #0x4f8
  40486c:	br	x17

0000000000404870 <flistxattr@plt>:
  404870:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #1280]
  404878:	add	x16, x16, #0x500
  40487c:	br	x17

0000000000404880 <iswalnum@plt>:
  404880:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #1288]
  404888:	add	x16, x16, #0x508
  40488c:	br	x17

0000000000404890 <__fxstat@plt>:
  404890:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #1296]
  404898:	add	x16, x16, #0x510
  40489c:	br	x17

00000000004048a0 <strchrnul@plt>:
  4048a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #1304]
  4048a8:	add	x16, x16, #0x518
  4048ac:	br	x17

00000000004048b0 <dcgettext@plt>:
  4048b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1312]
  4048b8:	add	x16, x16, #0x520
  4048bc:	br	x17

00000000004048c0 <mkfifoat@plt>:
  4048c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1320]
  4048c8:	add	x16, x16, #0x528
  4048cc:	br	x17

00000000004048d0 <fputs_unlocked@plt>:
  4048d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1328]
  4048d8:	add	x16, x16, #0x530
  4048dc:	br	x17

00000000004048e0 <acl_from_text@plt>:
  4048e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1336]
  4048e8:	add	x16, x16, #0x538
  4048ec:	br	x17

00000000004048f0 <glob@plt>:
  4048f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1344]
  4048f8:	add	x16, x16, #0x540
  4048fc:	br	x17

0000000000404900 <ftruncate@plt>:
  404900:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1352]
  404908:	add	x16, x16, #0x548
  40490c:	br	x17

0000000000404910 <llistxattr@plt>:
  404910:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1360]
  404918:	add	x16, x16, #0x550
  40491c:	br	x17

0000000000404920 <dup2@plt>:
  404920:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1368]
  404928:	add	x16, x16, #0x558
  40492c:	br	x17

0000000000404930 <symlinkat@plt>:
  404930:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1376]
  404938:	add	x16, x16, #0x560
  40493c:	br	x17

0000000000404940 <sigaddset@plt>:
  404940:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1384]
  404948:	add	x16, x16, #0x568
  40494c:	br	x17

0000000000404950 <towupper@plt>:
  404950:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1392]
  404958:	add	x16, x16, #0x570
  40495c:	br	x17

0000000000404960 <iswprint@plt>:
  404960:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1400]
  404968:	add	x16, x16, #0x578
  40496c:	br	x17

0000000000404970 <umask@plt>:
  404970:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1408]
  404978:	add	x16, x16, #0x580
  40497c:	br	x17

0000000000404980 <strcspn@plt>:
  404980:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1416]
  404988:	add	x16, x16, #0x588
  40498c:	br	x17

0000000000404990 <faccessat@plt>:
  404990:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1424]
  404998:	add	x16, x16, #0x590
  40499c:	br	x17

00000000004049a0 <openat@plt>:
  4049a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1432]
  4049a8:	add	x16, x16, #0x598
  4049ac:	br	x17

00000000004049b0 <__assert_fail@plt>:
  4049b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1440]
  4049b8:	add	x16, x16, #0x5a0
  4049bc:	br	x17

00000000004049c0 <__errno_location@plt>:
  4049c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1448]
  4049c8:	add	x16, x16, #0x5a8
  4049cc:	br	x17

00000000004049d0 <execlp@plt>:
  4049d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1456]
  4049d8:	add	x16, x16, #0x5b0
  4049dc:	br	x17

00000000004049e0 <getenv@plt>:
  4049e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1464]
  4049e8:	add	x16, x16, #0x5b8
  4049ec:	br	x17

00000000004049f0 <__xstat@plt>:
  4049f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1472]
  4049f8:	add	x16, x16, #0x5c0
  4049fc:	br	x17

0000000000404a00 <getgrgid@plt>:
  404a00:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1480]
  404a08:	add	x16, x16, #0x5c8
  404a0c:	br	x17

0000000000404a10 <fchmodat@plt>:
  404a10:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1488]
  404a18:	add	x16, x16, #0x5d0
  404a1c:	br	x17

0000000000404a20 <__getdelim@plt>:
  404a20:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1496]
  404a28:	add	x16, x16, #0x5d8
  404a2c:	br	x17

0000000000404a30 <timegm@plt>:
  404a30:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1504]
  404a38:	add	x16, x16, #0x5e0
  404a3c:	br	x17

0000000000404a40 <waitpid@plt>:
  404a40:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1512]
  404a48:	add	x16, x16, #0x5e8
  404a4c:	br	x17

0000000000404a50 <fchown@plt>:
  404a50:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1520]
  404a58:	add	x16, x16, #0x5f0
  404a5c:	br	x17

0000000000404a60 <towlower@plt>:
  404a60:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1528]
  404a68:	add	x16, x16, #0x5f8
  404a6c:	br	x17

0000000000404a70 <__uflow@plt>:
  404a70:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1536]
  404a78:	add	x16, x16, #0x600
  404a7c:	br	x17

0000000000404a80 <creat@plt>:
  404a80:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1544]
  404a88:	add	x16, x16, #0x608
  404a8c:	br	x17

0000000000404a90 <gethostbyname@plt>:
  404a90:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1552]
  404a98:	add	x16, x16, #0x610
  404a9c:	br	x17

0000000000404aa0 <ioctl@plt>:
  404aa0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1560]
  404aa8:	add	x16, x16, #0x618
  404aac:	br	x17

0000000000404ab0 <setlocale@plt>:
  404ab0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1568]
  404ab8:	add	x16, x16, #0x620
  404abc:	br	x17

0000000000404ac0 <acl_free@plt>:
  404ac0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1576]
  404ac8:	add	x16, x16, #0x628
  404acc:	br	x17

0000000000404ad0 <__fxstatat@plt>:
  404ad0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1584]
  404ad8:	add	x16, x16, #0x630
  404adc:	br	x17

0000000000404ae0 <readlinkat@plt>:
  404ae0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1592]
  404ae8:	add	x16, x16, #0x638
  404aec:	br	x17

0000000000404af0 <wcrtomb@plt>:
  404af0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1600]
  404af8:	add	x16, x16, #0x640
  404afc:	br	x17

Disassembly of section .text:

0000000000404b00 <argp_help@@Base-0x325fc>:
  404b00:	mov	x29, #0x0                   	// #0
  404b04:	mov	x30, #0x0                   	// #0
  404b08:	mov	x5, x0
  404b0c:	ldr	x1, [sp]
  404b10:	add	x2, sp, #0x8
  404b14:	mov	x6, sp
  404b18:	movz	x0, #0x0, lsl #48
  404b1c:	movk	x0, #0x0, lsl #32
  404b20:	movk	x0, #0x42, lsl #16
  404b24:	movk	x0, #0x4c30
  404b28:	movz	x3, #0x0, lsl #48
  404b2c:	movk	x3, #0x0, lsl #32
  404b30:	movk	x3, #0x46, lsl #16
  404b34:	movk	x3, #0xab0
  404b38:	movz	x4, #0x0, lsl #48
  404b3c:	movk	x4, #0x0, lsl #32
  404b40:	movk	x4, #0x46, lsl #16
  404b44:	movk	x4, #0xb30
  404b48:	bl	4042e0 <__libc_start_main@plt>
  404b4c:	bl	404560 <abort@plt>
  404b50:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x30e3c>
  404b54:	ldr	x0, [x0, #4064]
  404b58:	cbz	x0, 404b60 <wcrtomb@plt+0x70>
  404b5c:	b	404500 <__gmon_start__@plt>
  404b60:	ret
  404b64:	nop
  404b68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404b6c:	add	x0, x0, #0x50
  404b70:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404b74:	add	x1, x1, #0x50
  404b78:	cmp	x1, x0
  404b7c:	b.eq	404b94 <wcrtomb@plt+0xa4>  // b.none
  404b80:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  404b84:	ldr	x1, [x1, #2904]
  404b88:	cbz	x1, 404b94 <wcrtomb@plt+0xa4>
  404b8c:	mov	x16, x1
  404b90:	br	x16
  404b94:	ret
  404b98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404b9c:	add	x0, x0, #0x50
  404ba0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404ba4:	add	x1, x1, #0x50
  404ba8:	sub	x1, x1, x0
  404bac:	lsr	x2, x1, #63
  404bb0:	add	x1, x2, x1, asr #3
  404bb4:	cmp	xzr, x1, asr #1
  404bb8:	asr	x1, x1, #1
  404bbc:	b.eq	404bd4 <wcrtomb@plt+0xe4>  // b.none
  404bc0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x14e3c>
  404bc4:	ldr	x2, [x2, #2912]
  404bc8:	cbz	x2, 404bd4 <wcrtomb@plt+0xe4>
  404bcc:	mov	x16, x2
  404bd0:	br	x16
  404bd4:	ret
  404bd8:	stp	x29, x30, [sp, #-32]!
  404bdc:	mov	x29, sp
  404be0:	str	x19, [sp, #16]
  404be4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404be8:	ldrb	w0, [x19, #128]
  404bec:	cbnz	w0, 404bfc <wcrtomb@plt+0x10c>
  404bf0:	bl	404b68 <wcrtomb@plt+0x78>
  404bf4:	mov	w0, #0x1                   	// #1
  404bf8:	strb	w0, [x19, #128]
  404bfc:	ldr	x19, [sp, #16]
  404c00:	ldp	x29, x30, [sp], #32
  404c04:	ret
  404c08:	b	404b98 <wcrtomb@plt+0xa8>
  404c0c:	stp	x29, x30, [sp, #-48]!
  404c10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404c14:	ldrb	w8, [x8, #3068]
  404c18:	stp	x22, x21, [sp, #16]
  404c1c:	stp	x20, x19, [sp, #32]
  404c20:	mov	x29, sp
  404c24:	cbz	w8, 404c8c <wcrtomb@plt+0x19c>
  404c28:	mov	x21, x0
  404c2c:	mov	w0, #0x30                  	// #48
  404c30:	mov	x19, x2
  404c34:	mov	x20, x1
  404c38:	bl	44a010 <argp_parse@@Base+0xf964>
  404c3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404c40:	add	x8, x8, #0xa8
  404c44:	ldr	x9, [x8], #8
  404c48:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404c4c:	mov	x22, x0
  404c50:	cmp	x9, #0x0
  404c54:	csel	x8, x8, x9, eq  // eq = none
  404c58:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404c5c:	str	x0, [x8]
  404c60:	ldr	x8, [x10, #2904]
  404c64:	ldr	x9, [x9, #2880]
  404c68:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404c6c:	str	x0, [x10, #168]
  404c70:	sub	x8, x8, x9
  404c74:	asr	x8, x8, #9
  404c78:	stp	xzr, x8, [x0]
  404c7c:	mov	x0, x21
  404c80:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  404c84:	stp	x0, x20, [x22, #16]
  404c88:	stp	x19, xzr, [x22, #32]
  404c8c:	ldp	x20, x19, [sp, #32]
  404c90:	ldp	x22, x21, [sp, #16]
  404c94:	ldp	x29, x30, [sp], #48
  404c98:	ret
  404c9c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404ca0:	add	x0, x0, #0x268
  404ca4:	b	412660 <wcrtomb@plt+0xdb70>
  404ca8:	stp	x29, x30, [sp, #-48]!
  404cac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404cb0:	ldrb	w8, [x8, #3068]
  404cb4:	str	x21, [sp, #16]
  404cb8:	stp	x20, x19, [sp, #32]
  404cbc:	mov	x29, sp
  404cc0:	cbz	w8, 404d24 <wcrtomb@plt+0x234>
  404cc4:	ldr	x21, [x0, #136]
  404cc8:	ldr	x19, [x0]
  404ccc:	mov	w0, #0x30                  	// #48
  404cd0:	bl	44a010 <argp_parse@@Base+0xf964>
  404cd4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404cd8:	add	x8, x8, #0xa8
  404cdc:	ldr	x9, [x8], #8
  404ce0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404ce4:	mov	x20, x0
  404ce8:	cmp	x9, #0x0
  404cec:	csel	x8, x8, x9, eq  // eq = none
  404cf0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404cf4:	str	x0, [x8]
  404cf8:	ldr	x8, [x10, #2904]
  404cfc:	ldr	x9, [x9, #2880]
  404d00:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404d04:	str	x0, [x10, #168]
  404d08:	sub	x8, x8, x9
  404d0c:	asr	x8, x8, #9
  404d10:	stp	xzr, x8, [x0]
  404d14:	mov	x0, x19
  404d18:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  404d1c:	stp	x0, x21, [x20, #16]
  404d20:	stp	x21, xzr, [x20, #32]
  404d24:	ldp	x20, x19, [sp, #32]
  404d28:	ldr	x21, [sp, #16]
  404d2c:	ldp	x29, x30, [sp], #48
  404d30:	ret
  404d34:	stp	x29, x30, [sp, #-32]!
  404d38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404d3c:	ldrb	w8, [x8, #3068]
  404d40:	stp	x20, x19, [sp, #16]
  404d44:	mov	x29, sp
  404d48:	cbz	w8, 404d80 <wcrtomb@plt+0x290>
  404d4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404d50:	ldr	x19, [x8, #176]
  404d54:	cbz	x19, 404d74 <wcrtomb@plt+0x284>
  404d58:	ldr	x0, [x19, #16]
  404d5c:	ldr	x20, [x19]
  404d60:	bl	4046b0 <free@plt>
  404d64:	mov	x0, x19
  404d68:	bl	4046b0 <free@plt>
  404d6c:	mov	x19, x20
  404d70:	cbnz	x20, 404d58 <wcrtomb@plt+0x268>
  404d74:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404d78:	add	x8, x8, #0xa8
  404d7c:	stp	xzr, xzr, [x8]
  404d80:	ldp	x20, x19, [sp, #16]
  404d84:	ldp	x29, x30, [sp], #32
  404d88:	ret
  404d8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404d90:	ldr	x8, [x8, #176]
  404d94:	cbz	x8, 404d9c <wcrtomb@plt+0x2ac>
  404d98:	str	x0, [x8, #32]
  404d9c:	ret
  404da0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404da4:	str	wzr, [x8, #152]
  404da8:	ret
  404dac:	stp	x29, x30, [sp, #-32]!
  404db0:	str	x19, [sp, #16]
  404db4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404db8:	add	x19, x19, #0xe78
  404dbc:	mov	x0, x19
  404dc0:	mov	x29, sp
  404dc4:	bl	43e664 <argp_parse@@Base+0x3fb8>
  404dc8:	ldr	q0, [x19]
  404dcc:	ldr	x19, [sp, #16]
  404dd0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404dd4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404dd8:	add	x8, x8, #0xf58
  404ddc:	add	x9, x9, #0xf10
  404de0:	str	q0, [x8]
  404de4:	str	q0, [x9]
  404de8:	ldp	x29, x30, [sp], #32
  404dec:	ret
  404df0:	sub	sp, sp, #0x30
  404df4:	mov	x0, sp
  404df8:	stp	x29, x30, [sp, #16]
  404dfc:	str	x19, [sp, #32]
  404e00:	add	x29, sp, #0x10
  404e04:	bl	43e664 <argp_parse@@Base+0x3fb8>
  404e08:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404e0c:	add	x0, x0, #0xf10
  404e10:	ldp	x8, x9, [sp]
  404e14:	ldp	x10, x11, [x0]
  404e18:	mov	x12, #0xcd6500000000        	// #225833675390976
  404e1c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404e20:	movk	x12, #0x41cd, lsl #48
  404e24:	sub	x9, x9, x11
  404e28:	ldr	d2, [x19, #184]
  404e2c:	fmov	d0, x12
  404e30:	sub	x8, x8, x10
  404e34:	scvtf	d1, x9
  404e38:	fdiv	d0, d1, d0
  404e3c:	scvtf	d1, x8
  404e40:	fadd	d0, d0, d1
  404e44:	fadd	d0, d2, d0
  404e48:	str	d0, [x19, #184]
  404e4c:	bl	43e664 <argp_parse@@Base+0x3fb8>
  404e50:	ldr	d0, [x19, #184]
  404e54:	ldr	x19, [sp, #32]
  404e58:	ldp	x29, x30, [sp, #16]
  404e5c:	add	sp, sp, #0x30
  404e60:	ret
  404e64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404e68:	ldr	x8, [x8, #3896]
  404e6c:	cbz	x8, 404e78 <wcrtomb@plt+0x388>
  404e70:	mov	x0, x8
  404e74:	ret
  404e78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404e7c:	ldr	w8, [x8, #156]
  404e80:	cbz	w8, 404ebc <wcrtomb@plt+0x3cc>
  404e84:	adrp	x10, 460000 <_obstack_memory_used@@Base+0x14e3c>
  404e88:	mov	x9, xzr
  404e8c:	add	x10, x10, #0xbc8
  404e90:	str	wzr, [x0]
  404e94:	cmp	x9, #0xb
  404e98:	b.eq	404ec4 <wcrtomb@plt+0x3d4>  // b.none
  404e9c:	ldr	w11, [x10], #24
  404ea0:	add	x9, x9, #0x1
  404ea4:	cmp	w11, w8
  404ea8:	b.ne	404e94 <wcrtomb@plt+0x3a4>  // b.any
  404eac:	str	w9, [x0]
  404eb0:	ldur	x8, [x10, #-16]
  404eb4:	mov	x0, x8
  404eb8:	ret
  404ebc:	mov	x0, xzr
  404ec0:	ret
  404ec4:	str	w9, [x0]
  404ec8:	mov	x0, xzr
  404ecc:	ret
  404ed0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404ed4:	ldr	x8, [x8, #3896]
  404ed8:	cbz	x8, 404ee4 <wcrtomb@plt+0x3f4>
  404edc:	mov	x0, xzr
  404ee0:	ret
  404ee4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404ee8:	ldrsw	x9, [x0]
  404eec:	ldr	w10, [x8, #156]
  404ef0:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  404ef4:	mov	w11, #0x18                  	// #24
  404ef8:	add	x8, x8, #0xbc8
  404efc:	madd	x8, x9, x11, x8
  404f00:	sub	x11, x9, #0xb
  404f04:	cbz	x11, 404f28 <wcrtomb@plt+0x438>
  404f08:	ldr	w12, [x8], #24
  404f0c:	add	w9, w9, #0x1
  404f10:	add	x11, x11, #0x1
  404f14:	cmp	w12, w10
  404f18:	b.ne	404f04 <wcrtomb@plt+0x414>  // b.any
  404f1c:	str	w9, [x0]
  404f20:	ldur	x0, [x8, #-16]
  404f24:	ret
  404f28:	str	w9, [x0]
  404f2c:	mov	x0, xzr
  404f30:	ret
  404f34:	sub	sp, sp, #0x70
  404f38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404f3c:	ldr	w8, [x8, #3852]
  404f40:	stp	x29, x30, [sp, #32]
  404f44:	stp	x26, x25, [sp, #48]
  404f48:	stp	x24, x23, [sp, #64]
  404f4c:	cmp	w8, #0x8
  404f50:	stp	x22, x21, [sp, #80]
  404f54:	stp	x20, x19, [sp, #96]
  404f58:	add	x29, sp, #0x20
  404f5c:	b.hi	405188 <wcrtomb@plt+0x698>  // b.pmore
  404f60:	mov	w9, #0x1                   	// #1
  404f64:	lsl	w9, w9, w8
  404f68:	mov	w10, #0x10e                 	// #270
  404f6c:	mov	w19, w3
  404f70:	mov	x21, x1
  404f74:	mov	x20, x0
  404f78:	tst	w9, w10
  404f7c:	b.eq	404fa8 <wcrtomb@plt+0x4b8>  // b.none
  404f80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404f84:	add	x8, x8, #0xc0
  404f88:	ldp	d0, d1, [x8]
  404f8c:	ldr	x1, [x21, #8]
  404f90:	fadd	d0, d0, d1
  404f94:	mov	x0, x20
  404f98:	bl	40518c <wcrtomb@plt+0x69c>
  404f9c:	mov	w21, w0
  404fa0:	cbnz	w19, 405104 <wcrtomb@plt+0x614>
  404fa4:	b	405120 <wcrtomb@plt+0x630>
  404fa8:	tst	w9, #0xe0
  404fac:	b.eq	404ff0 <wcrtomb@plt+0x500>  // b.none
  404fb0:	ldr	x1, [x21]
  404fb4:	mov	w2, #0x5                   	// #5
  404fb8:	mov	x0, xzr
  404fbc:	bl	4048b0 <dcgettext@plt>
  404fc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404fc4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404fc8:	ldr	x8, [x8, #2832]
  404fcc:	ldr	x9, [x9, #3912]
  404fd0:	mov	x1, x0
  404fd4:	mul	x8, x9, x8
  404fd8:	ucvtf	d0, x8
  404fdc:	mov	x0, x20
  404fe0:	bl	40518c <wcrtomb@plt+0x69c>
  404fe4:	mov	w21, w0
  404fe8:	cbnz	w19, 405104 <wcrtomb@plt+0x614>
  404fec:	b	405120 <wcrtomb@plt+0x630>
  404ff0:	cmp	w8, #0x4
  404ff4:	b.ne	405188 <wcrtomb@plt+0x698>  // b.any
  404ff8:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  404ffc:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405000:	ldr	x8, [x25, #2832]
  405004:	ldr	x9, [x24, #3912]
  405008:	ldr	x1, [x21]
  40500c:	mov	x0, x20
  405010:	mov	w22, w2
  405014:	mul	x8, x9, x8
  405018:	ucvtf	d0, x8
  40501c:	bl	40518c <wcrtomb@plt+0x69c>
  405020:	ldp	x8, x9, [x20, #40]
  405024:	mov	w23, w0
  405028:	cmp	x8, x9
  40502c:	b.cs	405150 <wcrtomb@plt+0x660>  // b.hs, b.nlast
  405030:	add	x9, x8, #0x1
  405034:	str	x9, [x20, #40]
  405038:	strb	w22, [x8]
  40503c:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405040:	add	x26, x26, #0xc0
  405044:	ldp	d0, d1, [x26]
  405048:	ldr	x1, [x21, #8]
  40504c:	mov	x0, x20
  405050:	fadd	d0, d0, d1
  405054:	bl	40518c <wcrtomb@plt+0x69c>
  405058:	ldp	x8, x9, [x20, #40]
  40505c:	cmp	x8, x9
  405060:	b.cs	405160 <wcrtomb@plt+0x670>  // b.hs, b.nlast
  405064:	add	x9, x8, #0x1
  405068:	str	x9, [x20, #40]
  40506c:	strb	w22, [x8]
  405070:	ldr	x1, [x21, #16]
  405074:	add	w8, w23, w0
  405078:	add	w21, w8, #0x2
  40507c:	cbz	x1, 4050b0 <wcrtomb@plt+0x5c0>
  405080:	ldrb	w8, [x1]
  405084:	cbz	w8, 4050b0 <wcrtomb@plt+0x5c0>
  405088:	mov	w2, #0x5                   	// #5
  40508c:	mov	x0, xzr
  405090:	bl	4048b0 <dcgettext@plt>
  405094:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  405098:	mov	x3, x0
  40509c:	add	x2, x2, #0xe7d
  4050a0:	mov	w1, #0x1                   	// #1
  4050a4:	mov	x0, x20
  4050a8:	bl	404600 <__fprintf_chk@plt>
  4050ac:	add	w21, w0, w21
  4050b0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4050b4:	ldr	x8, [x25, #2832]
  4050b8:	ldr	x9, [x9, #2928]
  4050bc:	ldr	x10, [x24, #3912]
  4050c0:	ldp	d0, d1, [x26]
  4050c4:	add	x1, sp, #0x8
  4050c8:	sub	x8, x8, x9
  4050cc:	mul	x8, x8, x10
  4050d0:	ucvtf	d2, x8
  4050d4:	fadd	d0, d0, d1
  4050d8:	fsub	d0, d2, d0
  4050dc:	fcvtzu	x0, d0
  4050e0:	bl	440290 <argp_parse@@Base+0x5be4>
  4050e4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4050e8:	mov	x3, x0
  4050ec:	add	x2, x2, #0x274
  4050f0:	mov	w1, #0x1                   	// #1
  4050f4:	mov	x0, x20
  4050f8:	bl	404600 <__fprintf_chk@plt>
  4050fc:	add	w21, w0, w21
  405100:	cbz	w19, 405120 <wcrtomb@plt+0x630>
  405104:	ldp	x8, x9, [x20, #40]
  405108:	cmp	x8, x9
  40510c:	b.cs	405140 <wcrtomb@plt+0x650>  // b.hs, b.nlast
  405110:	add	x9, x8, #0x1
  405114:	str	x9, [x20, #40]
  405118:	strb	w19, [x8]
  40511c:	add	w21, w21, #0x1
  405120:	mov	w0, w21
  405124:	ldp	x20, x19, [sp, #96]
  405128:	ldp	x22, x21, [sp, #80]
  40512c:	ldp	x24, x23, [sp, #64]
  405130:	ldp	x26, x25, [sp, #48]
  405134:	ldp	x29, x30, [sp, #32]
  405138:	add	sp, sp, #0x70
  40513c:	ret
  405140:	and	w1, w19, #0xff
  405144:	mov	x0, x20
  405148:	bl	404590 <__overflow@plt>
  40514c:	b	40511c <wcrtomb@plt+0x62c>
  405150:	and	w1, w22, #0xff
  405154:	mov	x0, x20
  405158:	bl	404590 <__overflow@plt>
  40515c:	b	40503c <wcrtomb@plt+0x54c>
  405160:	and	w1, w22, #0xff
  405164:	mov	w22, w0
  405168:	mov	x0, x20
  40516c:	bl	404590 <__overflow@plt>
  405170:	mov	w0, w22
  405174:	ldr	x1, [x21, #16]
  405178:	add	w8, w23, w0
  40517c:	add	w21, w8, #0x2
  405180:	cbnz	x1, 405080 <wcrtomb@plt+0x590>
  405184:	b	4050b0 <wcrtomb@plt+0x5c0>
  405188:	bl	404560 <abort@plt>
  40518c:	str	d8, [sp, #-64]!
  405190:	stp	x29, x30, [sp, #16]
  405194:	stp	x28, x21, [sp, #32]
  405198:	stp	x20, x19, [sp, #48]
  40519c:	mov	x29, sp
  4051a0:	sub	sp, sp, #0x520
  4051a4:	mov	v8.16b, v0.16b
  4051a8:	mov	x19, x0
  4051ac:	cbz	x1, 4051e4 <wcrtomb@plt+0x6f4>
  4051b0:	ldrb	w8, [x1]
  4051b4:	cbz	w8, 4051e4 <wcrtomb@plt+0x6f4>
  4051b8:	mov	w2, #0x5                   	// #5
  4051bc:	mov	x0, xzr
  4051c0:	bl	4048b0 <dcgettext@plt>
  4051c4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4051c8:	mov	x3, x0
  4051cc:	add	x2, x2, #0xe7d
  4051d0:	mov	w1, #0x1                   	// #1
  4051d4:	mov	x0, x19
  4051d8:	bl	404600 <__fprintf_chk@plt>
  4051dc:	mov	w20, w0
  4051e0:	b	4051e8 <wcrtomb@plt+0x6f8>
  4051e4:	mov	w20, wzr
  4051e8:	fcvtzu	x0, d8
  4051ec:	add	x1, sp, #0x294
  4051f0:	mov	w2, #0x1b0                 	// #432
  4051f4:	mov	w3, #0x1                   	// #1
  4051f8:	mov	w4, #0x1                   	// #1
  4051fc:	bl	43f868 <argp_parse@@Base+0x51bc>
  405200:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405204:	ldr	d0, [x8, #184]
  405208:	mov	x21, x0
  40520c:	fcmp	d0, #0.0
  405210:	b.le	405248 <wcrtomb@plt+0x758>
  405214:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  405218:	fdiv	d0, d8, d0
  40521c:	fmov	d1, x8
  405220:	fcmp	d0, d1
  405224:	b.pl	405248 <wcrtomb@plt+0x758>  // b.nfrst
  405228:	fcvtzu	x0, d0
  40522c:	add	x1, sp, #0x8
  405230:	mov	w2, #0x1b0                 	// #432
  405234:	mov	w3, #0x1                   	// #1
  405238:	mov	w4, #0x1                   	// #1
  40523c:	bl	43f868 <argp_parse@@Base+0x51bc>
  405240:	mov	x4, x0
  405244:	b	405250 <wcrtomb@plt+0x760>
  405248:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  40524c:	add	x4, x4, #0xa4e
  405250:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405254:	add	x2, x2, #0xea1
  405258:	mov	w1, #0x1                   	// #1
  40525c:	mov	x0, x19
  405260:	mov	v0.16b, v8.16b
  405264:	mov	x3, x21
  405268:	bl	404600 <__fprintf_chk@plt>
  40526c:	add	w0, w0, w20
  405270:	add	sp, sp, #0x520
  405274:	ldp	x20, x19, [sp, #48]
  405278:	ldp	x28, x21, [sp, #32]
  40527c:	ldp	x29, x30, [sp, #16]
  405280:	ldr	d8, [sp], #64
  405284:	ret
  405288:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40528c:	ldr	x0, [x8, #88]
  405290:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405294:	add	x1, x1, #0xbb0
  405298:	mov	w2, #0xa                   	// #10
  40529c:	mov	w3, #0xa                   	// #10
  4052a0:	b	404f34 <wcrtomb@plt+0x444>
  4052a4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052a8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052b0:	ldr	x9, [x9, #2904]
  4052b4:	ldr	x10, [x10, #2880]
  4052b8:	ldr	x8, [x8, #208]
  4052bc:	sub	x9, x9, x10
  4052c0:	add	x0, x8, x9, asr #9
  4052c4:	ret
  4052c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052cc:	ldrb	w9, [x8, #136]
  4052d0:	cmp	w9, #0x1
  4052d4:	b.ne	40530c <wcrtomb@plt+0x81c>  // b.any
  4052d8:	strb	wzr, [x8, #136]
  4052dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052e0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052e4:	ldr	x8, [x8, #2880]
  4052e8:	ldrsw	x10, [x10, #3740]
  4052ec:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052f0:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052f4:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4052f8:	mov	w13, #0x1                   	// #1
  4052fc:	str	x8, [x9, #2904]
  405300:	add	x8, x8, x10, lsl #9
  405304:	str	x8, [x11, #2840]
  405308:	str	w13, [x12, #2856]
  40530c:	ret
  405310:	stp	x29, x30, [sp, #-48]!
  405314:	stp	x20, x19, [sp, #32]
  405318:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40531c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405320:	ldr	x0, [x19, #2904]
  405324:	ldr	x8, [x20, #2840]
  405328:	str	x21, [sp, #16]
  40532c:	mov	x29, sp
  405330:	cmp	x0, x8
  405334:	b.eq	405348 <wcrtomb@plt+0x858>  // b.none
  405338:	ldp	x20, x19, [sp, #32]
  40533c:	ldr	x21, [sp, #16]
  405340:	ldp	x29, x30, [sp], #48
  405344:	ret
  405348:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40534c:	ldrb	w8, [x21, #136]
  405350:	tbz	w8, #0, 405368 <wcrtomb@plt+0x878>
  405354:	mov	x0, xzr
  405358:	ldp	x20, x19, [sp, #32]
  40535c:	ldr	x21, [sp, #16]
  405360:	ldp	x29, x30, [sp], #48
  405364:	ret
  405368:	bl	405398 <wcrtomb@plt+0x8a8>
  40536c:	ldr	x0, [x19, #2904]
  405370:	ldr	x8, [x20, #2840]
  405374:	cmp	x0, x8
  405378:	b.ne	405338 <wcrtomb@plt+0x848>  // b.any
  40537c:	mov	x0, xzr
  405380:	mov	w8, #0x1                   	// #1
  405384:	strb	w8, [x21, #136]
  405388:	ldp	x20, x19, [sp, #32]
  40538c:	ldr	x21, [sp, #16]
  405390:	ldp	x29, x30, [sp], #48
  405394:	ret
  405398:	sub	sp, sp, #0x40
  40539c:	stp	x22, x21, [sp, #32]
  4053a0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4053a4:	ldr	w9, [x21, #2856]
  4053a8:	stp	x20, x19, [sp, #48]
  4053ac:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4053b0:	stp	x29, x30, [sp, #16]
  4053b4:	add	x29, sp, #0x10
  4053b8:	cbnz	w9, 405418 <wcrtomb@plt+0x928>
  4053bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4053c0:	ldrb	w10, [x8, #3984]
  4053c4:	cbz	w10, 405418 <wcrtomb@plt+0x928>
  4053c8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4053cc:	ldr	w0, [x19, #3968]
  4053d0:	strb	wzr, [x8, #3984]
  4053d4:	mov	w8, #0x4                   	// #4
  4053d8:	strh	w8, [sp, #8]
  4053dc:	mov	w8, #0x40000000            	// #1073741824
  4053e0:	mov	w9, #0x1                   	// #1
  4053e4:	cmp	w0, w8
  4053e8:	str	w9, [x21, #2856]
  4053ec:	str	w9, [sp, #12]
  4053f0:	b.lt	405438 <wcrtomb@plt+0x948>  // b.tstop
  4053f4:	mov	w8, #0xc0000000            	// #-1073741824
  4053f8:	mov	w1, #0x6d01                	// #27905
  4053fc:	add	w0, w0, w8
  405400:	add	x2, sp, #0x8
  405404:	movk	w1, #0x4008, lsl #16
  405408:	bl	42e91c <wcrtomb@plt+0x29e2c>
  40540c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405410:	tbz	w0, #31, 405588 <wcrtomb@plt+0xa98>
  405414:	b	405450 <wcrtomb@plt+0x960>
  405418:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40541c:	ldr	x8, [x8, #2880]
  405420:	ldr	x11, [x20, #2840]
  405424:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405428:	ldrsw	x10, [x10, #3740]
  40542c:	sub	x11, x11, x8
  405430:	asr	x11, x11, #9
  405434:	b	4055d0 <wcrtomb@plt+0xae0>
  405438:	mov	w1, #0x6d01                	// #27905
  40543c:	add	x2, sp, #0x8
  405440:	movk	w1, #0x4008, lsl #16
  405444:	bl	404aa0 <ioctl@plt>
  405448:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40544c:	tbz	w0, #31, 405588 <wcrtomb@plt+0xa98>
  405450:	bl	4049c0 <__errno_location@plt>
  405454:	ldr	w8, [x0]
  405458:	cmp	w8, #0x5
  40545c:	b.ne	4054a4 <wcrtomb@plt+0x9b4>  // b.any
  405460:	ldr	w0, [x19, #3968]
  405464:	mov	w8, #0x40000000            	// #1073741824
  405468:	cmp	w0, w8
  40546c:	b.lt	405490 <wcrtomb@plt+0x9a0>  // b.tstop
  405470:	mov	w8, #0xc0000000            	// #-1073741824
  405474:	mov	w1, #0x6d01                	// #27905
  405478:	add	w0, w0, w8
  40547c:	add	x2, sp, #0x8
  405480:	movk	w1, #0x4008, lsl #16
  405484:	bl	42e91c <wcrtomb@plt+0x29e2c>
  405488:	tbz	w0, #31, 405588 <wcrtomb@plt+0xa98>
  40548c:	b	4054a4 <wcrtomb@plt+0x9b4>
  405490:	mov	w1, #0x6d01                	// #27905
  405494:	add	x2, sp, #0x8
  405498:	movk	w1, #0x4008, lsl #16
  40549c:	bl	404aa0 <ioctl@plt>
  4054a0:	tbz	w0, #31, 405588 <wcrtomb@plt+0xa98>
  4054a4:	ldr	w0, [x19, #3968]
  4054a8:	mov	w8, #0x40000000            	// #1073741824
  4054ac:	cmp	w0, w8
  4054b0:	b.lt	4054cc <wcrtomb@plt+0x9dc>  // b.tstop
  4054b4:	mov	w8, #0xc0000000            	// #-1073741824
  4054b8:	add	w0, w0, w8
  4054bc:	mov	w2, #0x1                   	// #1
  4054c0:	mov	x1, xzr
  4054c4:	bl	42e714 <wcrtomb@plt+0x29c24>
  4054c8:	b	4054d8 <wcrtomb@plt+0x9e8>
  4054cc:	mov	w2, #0x1                   	// #1
  4054d0:	mov	x1, xzr
  4054d4:	bl	4040e0 <lseek@plt>
  4054d8:	ldr	x9, [x20, #2840]
  4054dc:	ldr	x10, [x22, #2880]
  4054e0:	ldr	w8, [x19, #3968]
  4054e4:	mov	w11, #0x40000000            	// #1073741824
  4054e8:	sub	x9, x10, x9
  4054ec:	add	x9, x9, x0
  4054f0:	cmp	w8, w11
  4054f4:	bic	x19, x9, x9, asr #63
  4054f8:	b.lt	40551c <wcrtomb@plt+0xa2c>  // b.tstop
  4054fc:	mov	w9, #0xc0000000            	// #-1073741824
  405500:	add	w0, w8, w9
  405504:	mov	x1, x19
  405508:	mov	w2, wzr
  40550c:	bl	42e714 <wcrtomb@plt+0x29c24>
  405510:	cmp	x0, x19
  405514:	b.ne	405534 <wcrtomb@plt+0xa44>  // b.any
  405518:	b	405588 <wcrtomb@plt+0xa98>
  40551c:	mov	w0, w8
  405520:	mov	x1, x19
  405524:	mov	w2, wzr
  405528:	bl	4040e0 <lseek@plt>
  40552c:	cmp	x0, x19
  405530:	b.eq	405588 <wcrtomb@plt+0xa98>  // b.none
  405534:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405538:	ldr	x8, [x8, #4000]
  40553c:	cbz	x8, 405544 <wcrtomb@plt+0xa54>
  405540:	blr	x8
  405544:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405548:	add	x1, x1, #0xeea
  40554c:	mov	w2, #0x5                   	// #5
  405550:	mov	x0, xzr
  405554:	bl	4048b0 <dcgettext@plt>
  405558:	mov	x2, x0
  40555c:	mov	w0, wzr
  405560:	mov	w1, wzr
  405564:	bl	403f60 <error@plt>
  405568:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40556c:	ldr	x0, [x22, #2880]
  405570:	ldr	x8, [x8, #3992]
  405574:	cmp	x0, x8
  405578:	b.eq	405588 <wcrtomb@plt+0xa98>  // b.none
  40557c:	sub	x2, x8, x0
  405580:	mov	w1, wzr
  405584:	bl	404320 <memset@plt>
  405588:	ldr	x0, [x20, #2840]
  40558c:	ldr	x8, [x22, #2880]
  405590:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405594:	ldrsw	x10, [x19, #3740]
  405598:	sub	x9, x0, x8
  40559c:	asr	x11, x9, #9
  4055a0:	cmp	x11, x10
  4055a4:	b.ge	4055cc <wcrtomb@plt+0xadc>  // b.tcont
  4055a8:	sub	x8, x10, x11
  4055ac:	lsl	x2, x8, #9
  4055b0:	mov	w1, wzr
  4055b4:	bl	404320 <memset@plt>
  4055b8:	ldr	x8, [x22, #2880]
  4055bc:	ldrsw	x9, [x19, #3740]
  4055c0:	add	x8, x8, x9, lsl #9
  4055c4:	str	x8, [x20, #2840]
  4055c8:	b	40562c <wcrtomb@plt+0xb3c>
  4055cc:	ldr	w9, [x21, #2856]
  4055d0:	adrp	x13, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4055d4:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4055d8:	ldr	x14, [x13, #208]
  4055dc:	add	x15, x8, x10, lsl #9
  4055e0:	ldr	x10, [x12, #2904]
  4055e4:	str	x8, [x12, #2904]
  4055e8:	add	x11, x11, x14
  4055ec:	str	x11, [x13, #208]
  4055f0:	str	x15, [x20, #2840]
  4055f4:	cbz	w9, 405620 <wcrtomb@plt+0xb30>
  4055f8:	cmp	w9, #0x1
  4055fc:	b.eq	40560c <wcrtomb@plt+0xb1c>  // b.none
  405600:	cmp	w9, #0x2
  405604:	b.ne	40562c <wcrtomb@plt+0xb3c>  // b.any
  405608:	bl	404560 <abort@plt>
  40560c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405610:	ldr	x9, [x9, #216]
  405614:	sub	x0, x10, x8
  405618:	blr	x9
  40561c:	b	40562c <wcrtomb@plt+0xb3c>
  405620:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405624:	ldr	x8, [x8, #224]
  405628:	blr	x8
  40562c:	ldp	x20, x19, [sp, #48]
  405630:	ldp	x22, x21, [sp, #32]
  405634:	ldp	x29, x30, [sp, #16]
  405638:	add	sp, sp, #0x40
  40563c:	ret
  405640:	stp	x29, x30, [sp, #-16]!
  405644:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405648:	ldr	x8, [x9, #2904]
  40564c:	mov	x29, sp
  405650:	cmp	x8, x0
  405654:	b.hi	405668 <wcrtomb@plt+0xb78>  // b.pmore
  405658:	add	x8, x8, #0x200
  40565c:	cmp	x8, x0
  405660:	b.ls	405658 <wcrtomb@plt+0xb68>  // b.plast
  405664:	str	x8, [x9, #2904]
  405668:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40566c:	ldr	x9, [x9, #2840]
  405670:	cmp	x8, x9
  405674:	b.hi	405680 <wcrtomb@plt+0xb90>  // b.pmore
  405678:	ldp	x29, x30, [sp], #16
  40567c:	ret
  405680:	bl	404560 <abort@plt>
  405684:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405688:	ldr	x8, [x8, #2840]
  40568c:	sub	x0, x8, x0
  405690:	ret
  405694:	stp	x29, x30, [sp, #-16]!
  405698:	mov	x29, sp
  40569c:	bl	4044d0 <close@plt>
  4056a0:	cbz	w0, 4056c0 <wcrtomb@plt+0xbd0>
  4056a4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4056a8:	add	x1, x1, #0xdd8
  4056ac:	mov	w2, #0x5                   	// #5
  4056b0:	mov	x0, xzr
  4056b4:	bl	4048b0 <dcgettext@plt>
  4056b8:	ldp	x29, x30, [sp], #16
  4056bc:	b	42c8c8 <wcrtomb@plt+0x27dd8>
  4056c0:	ldp	x29, x30, [sp], #16
  4056c4:	ret
  4056c8:	stp	x29, x30, [sp, #-48]!
  4056cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4056d0:	ldrb	w8, [x8, #3689]
  4056d4:	stp	x20, x19, [sp, #32]
  4056d8:	mov	x19, x0
  4056dc:	str	x21, [sp, #16]
  4056e0:	mov	x29, sp
  4056e4:	cbz	w8, 405714 <wcrtomb@plt+0xc24>
  4056e8:	bl	4049c0 <__errno_location@plt>
  4056ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4056f0:	mov	x20, x0
  4056f4:	ldr	w21, [x0]
  4056f8:	ldr	x0, [x8, #88]
  4056fc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405700:	add	x1, x1, #0xbb0
  405704:	mov	w2, #0xa                   	// #10
  405708:	mov	w3, #0xa                   	// #10
  40570c:	bl	404f34 <wcrtomb@plt+0x444>
  405710:	str	w21, [x20]
  405714:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405718:	ldr	x8, [x8, #3728]
  40571c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405720:	ldr	x2, [x9, #3912]
  405724:	mov	x1, x19
  405728:	ldr	x0, [x8]
  40572c:	bl	405730 <wcrtomb@plt+0xc40>
  405730:	stp	x29, x30, [sp, #-16]!
  405734:	mov	x29, sp
  405738:	bl	42d8e4 <wcrtomb@plt+0x28df4>
  40573c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405740:	ldr	w0, [x8, #3968]
  405744:	mov	w8, #0x40000000            	// #1073741824
  405748:	cmp	w0, w8
  40574c:	b.lt	405764 <wcrtomb@plt+0xc74>  // b.tstop
  405750:	mov	w8, #0xc0000000            	// #-1073741824
  405754:	add	w0, w0, w8
  405758:	bl	42e314 <wcrtomb@plt+0x29824>
  40575c:	cbnz	w0, 40576c <wcrtomb@plt+0xc7c>
  405760:	b	40577c <wcrtomb@plt+0xc8c>
  405764:	bl	4044d0 <close@plt>
  405768:	cbz	w0, 40577c <wcrtomb@plt+0xc8c>
  40576c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405770:	ldr	x8, [x8, #3728]
  405774:	ldr	x0, [x8]
  405778:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  40577c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405780:	ldr	w0, [x8, #160]
  405784:	mov	w1, wzr
  405788:	bl	423190 <wcrtomb@plt+0x1e6a0>
  40578c:	bl	40eb40 <wcrtomb@plt+0xa050>
  405790:	stp	x29, x30, [sp, #-16]!
  405794:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405798:	ldr	x8, [x8, #3728]
  40579c:	mov	x29, sp
  4057a0:	ldr	x0, [x8]
  4057a4:	bl	42cd08 <wcrtomb@plt+0x28218>
  4057a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4057ac:	ldr	x8, [x8, #208]
  4057b0:	cbz	x8, 4057d4 <wcrtomb@plt+0xce4>
  4057b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4057b8:	ldr	w9, [x8, #152]
  4057bc:	add	w10, w9, #0x1
  4057c0:	cmp	w9, #0xb
  4057c4:	str	w10, [x8, #152]
  4057c8:	b.ge	4057f0 <wcrtomb@plt+0xd00>  // b.tcont
  4057cc:	ldp	x29, x30, [sp], #16
  4057d0:	ret
  4057d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4057d8:	ldr	x8, [x8, #4000]
  4057dc:	cbz	x8, 4057e4 <wcrtomb@plt+0xcf4>
  4057e0:	blr	x8
  4057e4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4057e8:	add	x1, x1, #0xddf
  4057ec:	b	405808 <wcrtomb@plt+0xd18>
  4057f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4057f4:	ldr	x8, [x8, #4000]
  4057f8:	cbz	x8, 405800 <wcrtomb@plt+0xd10>
  4057fc:	blr	x8
  405800:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405804:	add	x1, x1, #0xe02
  405808:	mov	w2, #0x5                   	// #5
  40580c:	mov	x0, xzr
  405810:	bl	4048b0 <dcgettext@plt>
  405814:	mov	x2, x0
  405818:	mov	w0, wzr
  40581c:	mov	w1, wzr
  405820:	bl	403f60 <error@plt>
  405824:	bl	40eb40 <wcrtomb@plt+0xa050>
  405828:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40582c:	ldr	x0, [x8, #224]
  405830:	br	x0
  405834:	stp	x29, x30, [sp, #-64]!
  405838:	stp	x20, x19, [sp, #48]
  40583c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405840:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405844:	ldr	x9, [x19, #2904]
  405848:	ldr	x8, [x8, #2880]
  40584c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405850:	ldrsw	x10, [x20, #3740]
  405854:	stp	x22, x21, [sp, #32]
  405858:	sub	x8, x9, x8
  40585c:	asr	x21, x8, #9
  405860:	sub	x8, x10, x21
  405864:	lsl	x9, x8, #9
  405868:	cmp	x9, x0
  40586c:	stp	x24, x23, [sp, #16]
  405870:	mov	x29, sp
  405874:	b.ge	40588c <wcrtomb@plt+0xd9c>  // b.tcont
  405878:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40587c:	ldr	x8, [x23, #3912]
  405880:	sub	x9, x0, x9
  405884:	cmp	x8, x9
  405888:	b.ls	4058a4 <wcrtomb@plt+0xdb4>  // b.plast
  40588c:	mov	x0, xzr
  405890:	ldp	x20, x19, [sp, #48]
  405894:	ldp	x22, x21, [sp, #32]
  405898:	ldp	x24, x23, [sp, #16]
  40589c:	ldp	x29, x30, [sp], #64
  4058a0:	ret
  4058a4:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4058a8:	ldr	w0, [x10, #3968]
  4058ac:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4058b0:	ldr	x24, [x22, #208]
  4058b4:	mov	w10, #0x40000000            	// #1073741824
  4058b8:	cmp	w0, w10
  4058bc:	udiv	x9, x9, x8
  4058c0:	b.lt	4058e0 <wcrtomb@plt+0xdf0>  // b.tstop
  4058c4:	mov	w10, #0xc0000000            	// #-1073741824
  4058c8:	add	w0, w0, w10
  4058cc:	mul	x1, x9, x8
  4058d0:	mov	w2, #0x1                   	// #1
  4058d4:	bl	42e714 <wcrtomb@plt+0x29c24>
  4058d8:	tbz	x0, #63, 4058f0 <wcrtomb@plt+0xe00>
  4058dc:	b	405890 <wcrtomb@plt+0xda0>
  4058e0:	mul	x1, x9, x8
  4058e4:	mov	w2, #0x1                   	// #1
  4058e8:	bl	4040e0 <lseek@plt>
  4058ec:	tbnz	x0, #63, 405890 <wcrtomb@plt+0xda0>
  4058f0:	ldr	x8, [x23, #3912]
  4058f4:	udiv	x9, x0, x8
  4058f8:	msub	x8, x9, x8, x0
  4058fc:	cbnz	x8, 40593c <wcrtomb@plt+0xe4c>
  405900:	lsr	x8, x0, #9
  405904:	add	x9, x21, x24
  405908:	ldrsw	x10, [x20, #3740]
  40590c:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405910:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405914:	sub	x0, x8, x9
  405918:	ldr	x9, [x11, #2832]
  40591c:	ldr	x12, [x12, #2840]
  405920:	sdiv	x13, x0, x10
  405924:	sub	x8, x8, x10
  405928:	add	x9, x9, x13
  40592c:	str	x8, [x22, #208]
  405930:	str	x9, [x11, #2832]
  405934:	str	x12, [x19, #2904]
  405938:	b	405890 <wcrtomb@plt+0xda0>
  40593c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405940:	ldr	x8, [x8, #4000]
  405944:	cbz	x8, 40594c <wcrtomb@plt+0xe5c>
  405948:	blr	x8
  40594c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405950:	add	x1, x1, #0xe1c
  405954:	mov	w2, #0x5                   	// #5
  405958:	mov	x0, xzr
  40595c:	bl	4048b0 <dcgettext@plt>
  405960:	mov	x2, x0
  405964:	mov	w0, wzr
  405968:	mov	w1, wzr
  40596c:	bl	403f60 <error@plt>
  405970:	bl	40eb40 <wcrtomb@plt+0xa050>
  405974:	sub	sp, sp, #0x30
  405978:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40597c:	ldrb	w8, [x8, #3984]
  405980:	stp	x29, x30, [sp, #16]
  405984:	stp	x20, x19, [sp, #32]
  405988:	add	x29, sp, #0x10
  40598c:	cbnz	w8, 4059a0 <wcrtomb@plt+0xeb0>
  405990:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405994:	ldr	w8, [x8, #2856]
  405998:	cmp	w8, #0x1
  40599c:	b.ne	4059bc <wcrtomb@plt+0xecc>  // b.any
  4059a0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4059a4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4059a8:	bl	405398 <wcrtomb@plt+0x8a8>
  4059ac:	ldr	x8, [x19, #2904]
  4059b0:	ldr	x9, [x20, #2880]
  4059b4:	cmp	x8, x9
  4059b8:	b.hi	4059a8 <wcrtomb@plt+0xeb8>  // b.pmore
  4059bc:	mov	x0, sp
  4059c0:	bl	43e664 <argp_parse@@Base+0x3fb8>
  4059c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4059c8:	add	x0, x0, #0xf10
  4059cc:	ldp	x8, x9, [sp]
  4059d0:	ldp	x10, x11, [x0]
  4059d4:	mov	x12, #0xcd6500000000        	// #225833675390976
  4059d8:	movk	x12, #0x41cd, lsl #48
  4059dc:	fmov	d0, x12
  4059e0:	sub	x9, x9, x11
  4059e4:	scvtf	d1, x9
  4059e8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4059ec:	ldr	d2, [x9, #184]
  4059f0:	sub	x8, x8, x10
  4059f4:	fdiv	d0, d1, d0
  4059f8:	scvtf	d1, x8
  4059fc:	fadd	d0, d0, d1
  405a00:	fadd	d0, d2, d0
  405a04:	str	d0, [x9, #184]
  405a08:	bl	43e664 <argp_parse@@Base+0x3fb8>
  405a0c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405a10:	ldrb	w8, [x8, #3834]
  405a14:	cbz	w8, 405a1c <wcrtomb@plt+0xf2c>
  405a18:	bl	40a02c <wcrtomb@plt+0x553c>
  405a1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405a20:	ldr	w0, [x8, #3968]
  405a24:	mov	w8, #0x40000000            	// #1073741824
  405a28:	cmp	w0, w8
  405a2c:	b.lt	405a44 <wcrtomb@plt+0xf54>  // b.tstop
  405a30:	mov	w8, #0xc0000000            	// #-1073741824
  405a34:	add	w0, w0, w8
  405a38:	bl	42e314 <wcrtomb@plt+0x29824>
  405a3c:	cbnz	w0, 405a4c <wcrtomb@plt+0xf5c>
  405a40:	b	405a5c <wcrtomb@plt+0xf6c>
  405a44:	bl	4044d0 <close@plt>
  405a48:	cbz	w0, 405a5c <wcrtomb@plt+0xf6c>
  405a4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405a50:	ldr	x8, [x8, #3728]
  405a54:	ldr	x0, [x8]
  405a58:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  405a5c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405a60:	add	x19, x19, #0x88
  405a64:	ldr	w0, [x19, #24]
  405a68:	ldrb	w1, [x19]
  405a6c:	bl	423190 <wcrtomb@plt+0x1e6a0>
  405a70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405a74:	add	x0, x0, #0xc10
  405a78:	bl	425f4c <wcrtomb@plt+0x2145c>
  405a7c:	ldr	x0, [x19, #104]
  405a80:	bl	4046b0 <free@plt>
  405a84:	ldr	x0, [x19, #112]
  405a88:	bl	4046b0 <free@plt>
  405a8c:	ldr	x19, [x19, #40]
  405a90:	cbz	x19, 405ab0 <wcrtomb@plt+0xfc0>
  405a94:	ldr	x0, [x19, #16]
  405a98:	ldr	x20, [x19]
  405a9c:	bl	4046b0 <free@plt>
  405aa0:	mov	x0, x19
  405aa4:	bl	4046b0 <free@plt>
  405aa8:	mov	x19, x20
  405aac:	cbnz	x20, 405a94 <wcrtomb@plt+0xfa4>
  405ab0:	ldp	x20, x19, [sp, #32]
  405ab4:	ldp	x29, x30, [sp, #16]
  405ab8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405abc:	add	x8, x8, #0xa8
  405ac0:	stp	xzr, xzr, [x8]
  405ac4:	add	sp, sp, #0x30
  405ac8:	ret
  405acc:	stp	x29, x30, [sp, #-48]!
  405ad0:	str	x21, [sp, #16]
  405ad4:	stp	x20, x19, [sp, #32]
  405ad8:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405adc:	ldr	x0, [x21, #3656]
  405ae0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  405ae4:	add	x1, x1, #0xedb
  405ae8:	mov	x29, sp
  405aec:	bl	4041e0 <fopen@plt>
  405af0:	cbz	x0, 405b50 <wcrtomb@plt+0x1060>
  405af4:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  405af8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  405afc:	add	x20, x20, #0x658
  405b00:	add	x1, x1, #0x520
  405b04:	mov	x2, x20
  405b08:	mov	x19, x0
  405b0c:	bl	404280 <__isoc99_fscanf@plt>
  405b10:	cmp	w0, #0x1
  405b14:	b.ne	405b84 <wcrtomb@plt+0x1094>  // b.any
  405b18:	ldr	w8, [x20]
  405b1c:	tbnz	w8, #31, 405b84 <wcrtomb@plt+0x1094>
  405b20:	ldrb	w8, [x19]
  405b24:	tbz	w8, #5, 405b30 <wcrtomb@plt+0x1040>
  405b28:	ldr	x0, [x21, #3656]
  405b2c:	bl	42cd08 <wcrtomb@plt+0x28218>
  405b30:	mov	x0, x19
  405b34:	bl	4041a0 <fclose@plt>
  405b38:	cbz	w0, 405b60 <wcrtomb@plt+0x1070>
  405b3c:	ldr	x0, [x21, #3656]
  405b40:	ldp	x20, x19, [sp, #32]
  405b44:	ldr	x21, [sp, #16]
  405b48:	ldp	x29, x30, [sp], #48
  405b4c:	b	42c8c8 <wcrtomb@plt+0x27dd8>
  405b50:	bl	4049c0 <__errno_location@plt>
  405b54:	ldr	w8, [x0]
  405b58:	cmp	w8, #0x2
  405b5c:	b.ne	405b70 <wcrtomb@plt+0x1080>  // b.any
  405b60:	ldp	x20, x19, [sp, #32]
  405b64:	ldr	x21, [sp, #16]
  405b68:	ldp	x29, x30, [sp], #48
  405b6c:	ret
  405b70:	ldr	x0, [x21, #3656]
  405b74:	ldp	x20, x19, [sp, #32]
  405b78:	ldr	x21, [sp, #16]
  405b7c:	ldp	x29, x30, [sp], #48
  405b80:	b	42cbf8 <wcrtomb@plt+0x28108>
  405b84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405b88:	ldr	x8, [x8, #4000]
  405b8c:	cbz	x8, 405b94 <wcrtomb@plt+0x10a4>
  405b90:	blr	x8
  405b94:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405b98:	add	x1, x1, #0xe46
  405b9c:	mov	w2, #0x5                   	// #5
  405ba0:	mov	x0, xzr
  405ba4:	bl	4048b0 <dcgettext@plt>
  405ba8:	ldr	x8, [x21, #3656]
  405bac:	mov	x19, x0
  405bb0:	mov	x0, x8
  405bb4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  405bb8:	mov	x3, x0
  405bbc:	mov	w0, wzr
  405bc0:	mov	w1, wzr
  405bc4:	mov	x2, x19
  405bc8:	bl	403f60 <error@plt>
  405bcc:	bl	40eb40 <wcrtomb@plt+0xa050>
  405bd0:	stp	x29, x30, [sp, #-32]!
  405bd4:	stp	x20, x19, [sp, #16]
  405bd8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405bdc:	ldr	x0, [x20, #3656]
  405be0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  405be4:	add	x1, x1, #0xec8
  405be8:	mov	x29, sp
  405bec:	bl	4041e0 <fopen@plt>
  405bf0:	cbz	x0, 405c3c <wcrtomb@plt+0x114c>
  405bf4:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  405bf8:	ldr	w3, [x8, #1624]
  405bfc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  405c00:	add	x2, x2, #0xfd3
  405c04:	mov	w1, #0x1                   	// #1
  405c08:	mov	x19, x0
  405c0c:	bl	404600 <__fprintf_chk@plt>
  405c10:	ldrb	w8, [x19]
  405c14:	tbz	w8, #5, 405c20 <wcrtomb@plt+0x1130>
  405c18:	ldr	x0, [x20, #3656]
  405c1c:	bl	42d860 <wcrtomb@plt+0x28d70>
  405c20:	mov	x0, x19
  405c24:	bl	4041a0 <fclose@plt>
  405c28:	cbz	w0, 405c4c <wcrtomb@plt+0x115c>
  405c2c:	ldr	x0, [x20, #3656]
  405c30:	ldp	x20, x19, [sp, #16]
  405c34:	ldp	x29, x30, [sp], #32
  405c38:	b	42c8c8 <wcrtomb@plt+0x27dd8>
  405c3c:	ldr	x0, [x20, #3656]
  405c40:	ldp	x20, x19, [sp, #16]
  405c44:	ldp	x29, x30, [sp], #32
  405c48:	b	42cbf8 <wcrtomb@plt+0x28108>
  405c4c:	ldp	x20, x19, [sp, #16]
  405c50:	ldp	x29, x30, [sp], #32
  405c54:	ret
  405c58:	stp	x29, x30, [sp, #-48]!
  405c5c:	str	x21, [sp, #16]
  405c60:	stp	x20, x19, [sp, #32]
  405c64:	mov	x29, sp
  405c68:	mov	x19, x0
  405c6c:	bl	403f00 <strlen@plt>
  405c70:	cbz	x0, 405cc0 <wcrtomb@plt+0x11d0>
  405c74:	add	x8, x0, x19
  405c78:	sub	x21, x8, #0x1
  405c7c:	cmp	x21, x19
  405c80:	b.ls	405cc0 <wcrtomb@plt+0x11d0>  // b.plast
  405c84:	bl	404640 <__ctype_b_loc@plt>
  405c88:	ldr	x8, [x0]
  405c8c:	ldrb	w9, [x21], #-1
  405c90:	ldrh	w8, [x8, x9, lsl #1]
  405c94:	tbnz	w8, #11, 405c7c <wcrtomb@plt+0x118c>
  405c98:	sub	x8, x21, #0x6
  405c9c:	subs	x20, x8, x19
  405ca0:	b.ls	405cc0 <wcrtomb@plt+0x11d0>  // b.plast
  405ca4:	ldur	x8, [x21, #-6]
  405ca8:	mov	x9, #0x5620                	// #22048
  405cac:	movk	x9, #0x6c6f, lsl #16
  405cb0:	movk	x9, #0x6d75, lsl #32
  405cb4:	movk	x9, #0x2065, lsl #48
  405cb8:	cmp	x8, x9
  405cbc:	b.eq	405cd8 <wcrtomb@plt+0x11e8>  // b.none
  405cc0:	mov	x21, xzr
  405cc4:	mov	x0, x21
  405cc8:	ldp	x20, x19, [sp, #32]
  405ccc:	ldr	x21, [sp, #16]
  405cd0:	ldp	x29, x30, [sp], #48
  405cd4:	ret
  405cd8:	add	x0, x20, #0x1
  405cdc:	bl	44a010 <argp_parse@@Base+0xf964>
  405ce0:	mov	x1, x19
  405ce4:	mov	x2, x20
  405ce8:	mov	x21, x0
  405cec:	bl	403e80 <memcpy@plt>
  405cf0:	strb	wzr, [x21, x20]
  405cf4:	b	405cc4 <wcrtomb@plt+0x11d4>
  405cf8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405cfc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d00:	ldr	x1, [x8, #216]
  405d04:	ldr	x0, [x9, #3912]
  405d08:	br	x1
  405d0c:	stp	x29, x30, [sp, #-96]!
  405d10:	stp	x28, x27, [sp, #16]
  405d14:	stp	x26, x25, [sp, #32]
  405d18:	stp	x24, x23, [sp, #48]
  405d1c:	stp	x22, x21, [sp, #64]
  405d20:	stp	x20, x19, [sp, #80]
  405d24:	mov	x29, sp
  405d28:	sub	sp, sp, #0x1b0
  405d2c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d30:	ldr	x9, [x20, #3912]
  405d34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d38:	adrp	x10, 406000 <wcrtomb@plt+0x1510>
  405d3c:	adrp	x11, 407000 <wcrtomb@plt+0x2510>
  405d40:	add	x8, x8, #0xd8
  405d44:	add	x10, x10, #0x844
  405d48:	add	x11, x11, #0x7c
  405d4c:	stp	x11, x10, [x8]
  405d50:	cbz	x9, 4066f8 <wcrtomb@plt+0x1c08>
  405d54:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d58:	ldr	x8, [x8, #3840]
  405d5c:	cbz	x8, 406714 <wcrtomb@plt+0x1c24>
  405d60:	mov	w19, w0
  405d64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d68:	add	x0, x0, #0xc10
  405d6c:	bl	425f4c <wcrtomb@plt+0x2145c>
  405d70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d74:	add	x8, x8, #0xa4
  405d78:	ldur	x0, [x8, #92]
  405d7c:	str	wzr, [x8]
  405d80:	cbnz	x0, 405da4 <wcrtomb@plt+0x12b4>
  405d84:	ldr	x1, [x20, #3912]
  405d88:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405d8c:	add	x20, x20, #0x88
  405d90:	add	x0, x20, #0x68
  405d94:	bl	41d150 <wcrtomb@plt+0x18660>
  405d98:	ldrsw	x8, [x20, #28]
  405d9c:	add	x8, x20, x8, lsl #3
  405da0:	str	x0, [x8, #120]
  405da4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405da8:	ldrsw	x8, [x8, #3740]
  405dac:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405db0:	ldr	x10, [x23, #3680]
  405db4:	cmp	w19, #0x2
  405db8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405dbc:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405dc0:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405dc4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405dc8:	add	x8, x0, x8, lsl #9
  405dcc:	csel	w20, wzr, w19, eq  // eq = none
  405dd0:	str	x0, [x24, #2880]
  405dd4:	str	x0, [x21, #2904]
  405dd8:	str	x8, [x22, #2840]
  405ddc:	str	w20, [x9, #2856]
  405de0:	ldr	x0, [x10]
  405de4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  405de8:	add	x1, x1, #0xb35
  405dec:	bl	404610 <strcmp@plt>
  405df0:	cbnz	w0, 405e04 <wcrtomb@plt+0x1314>
  405df4:	cmp	w20, #0x0
  405df8:	cset	w0, ne  // ne = any
  405dfc:	bl	404850 <isatty@plt>
  405e00:	cbnz	w0, 406730 <wcrtomb@plt+0x1c40>
  405e04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405e08:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405e0c:	ldrb	w8, [x8, #3833]
  405e10:	ldr	x9, [x25, #3896]
  405e14:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405e18:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405e1c:	strb	w8, [x28, #140]
  405e20:	str	xzr, [x26, #2832]
  405e24:	cbz	x9, 405e40 <wcrtomb@plt+0x1350>
  405e28:	cbz	w19, 405f34 <wcrtomb@plt+0x1444>
  405e2c:	cmp	w19, #0x1
  405e30:	b.eq	405f00 <wcrtomb@plt+0x1410>  // b.none
  405e34:	cmp	w19, #0x2
  405e38:	b.ne	4061e4 <wcrtomb@plt+0x16f4>  // b.any
  405e3c:	bl	404560 <abort@plt>
  405e40:	ldr	x27, [x23, #3680]
  405e44:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  405e48:	add	x1, x1, #0xb35
  405e4c:	ldr	x20, [x27]
  405e50:	mov	x0, x20
  405e54:	bl	404610 <strcmp@plt>
  405e58:	cbz	w0, 405f58 <wcrtomb@plt+0x1468>
  405e5c:	cmp	w19, #0x2
  405e60:	b.eq	406008 <wcrtomb@plt+0x1518>  // b.none
  405e64:	cmp	w19, #0x1
  405e68:	b.eq	405fe4 <wcrtomb@plt+0x14f4>  // b.none
  405e6c:	cbnz	w19, 4061e4 <wcrtomb@plt+0x16f4>
  405e70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405e74:	ldrb	w8, [x8, #4008]
  405e78:	cbnz	w8, 405eac <wcrtomb@plt+0x13bc>
  405e7c:	mov	w1, #0x3a                  	// #58
  405e80:	mov	x0, x20
  405e84:	bl	404750 <strchr@plt>
  405e88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405e8c:	str	x0, [x8, #4016]
  405e90:	ldr	x20, [x27]
  405e94:	subs	x2, x0, x20
  405e98:	b.ls	405eac <wcrtomb@plt+0x13bc>  // b.plast
  405e9c:	mov	w1, #0x2f                  	// #47
  405ea0:	mov	x0, x20
  405ea4:	bl	404840 <memchr@plt>
  405ea8:	cbz	x0, 4065e0 <wcrtomb@plt+0x1af0>
  405eac:	mov	w2, #0x1b6                 	// #438
  405eb0:	mov	x0, x20
  405eb4:	mov	w1, wzr
  405eb8:	bl	404240 <open@plt>
  405ebc:	mov	w1, w0
  405ec0:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405ec4:	cmn	w0, #0x1
  405ec8:	str	w0, [x27, #3968]
  405ecc:	b.eq	406794 <wcrtomb@plt+0x1ca4>  // b.none
  405ed0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405ed4:	ldrb	w8, [x20, #3068]
  405ed8:	cbnz	w8, 40619c <wcrtomb@plt+0x16ac>
  405edc:	ldr	x8, [x25, #3896]
  405ee0:	cbz	x8, 406560 <wcrtomb@plt+0x1a70>
  405ee4:	mov	w8, #0x40000000            	// #1073741824
  405ee8:	cmp	w1, w8
  405eec:	b.lt	406174 <wcrtomb@plt+0x1684>  // b.tstop
  405ef0:	mov	w8, #0xc0000000            	// #-1073741824
  405ef4:	add	w0, w1, w8
  405ef8:	bl	42e314 <wcrtomb@plt+0x29824>
  405efc:	b	40617c <wcrtomb@plt+0x168c>
  405f00:	bl	423414 <wcrtomb@plt+0x1e924>
  405f04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405f08:	ldr	x8, [x8, #3952]
  405f0c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405f10:	str	w0, [x9, #160]
  405f14:	cbnz	x8, 4061e4 <wcrtomb@plt+0x16f4>
  405f18:	ldr	x8, [x23, #3680]
  405f1c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  405f20:	add	x1, x1, #0xb35
  405f24:	ldr	x0, [x8]
  405f28:	bl	404610 <strcmp@plt>
  405f2c:	cbnz	w0, 4061e4 <wcrtomb@plt+0x16f4>
  405f30:	b	4060d0 <wcrtomb@plt+0x15e0>
  405f34:	bl	423954 <wcrtomb@plt+0x1ee64>
  405f38:	ldr	x9, [x24, #2880]
  405f3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405f40:	add	x8, x8, #0x8c
  405f44:	mov	w10, #0x1                   	// #1
  405f48:	str	w0, [x8, #20]
  405f4c:	strb	w10, [x8]
  405f50:	str	x9, [x22, #2840]
  405f54:	b	4061e4 <wcrtomb@plt+0x16f4>
  405f58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405f5c:	ldrb	w8, [x8, #3834]
  405f60:	mov	w9, #0x1                   	// #1
  405f64:	strb	w9, [x28, #140]
  405f68:	cbnz	w8, 40675c <wcrtomb@plt+0x1c6c>
  405f6c:	cmp	w19, #0x2
  405f70:	b.eq	4060a8 <wcrtomb@plt+0x15b8>  // b.none
  405f74:	cmp	w19, #0x1
  405f78:	b.eq	406088 <wcrtomb@plt+0x1598>  // b.none
  405f7c:	cbnz	w19, 4061e4 <wcrtomb@plt+0x16f4>
  405f80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405f84:	mov	x0, sp
  405f88:	str	wzr, [x8, #3968]
  405f8c:	bl	408640 <wcrtomb@plt+0x3b50>
  405f90:	cmp	w0, #0x2
  405f94:	b.cs	40680c <wcrtomb@plt+0x1d1c>  // b.hs, b.nlast
  405f98:	ldrb	w8, [sp]
  405f9c:	cbz	w8, 4061e4 <wcrtomb@plt+0x16f4>
  405fa0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405fa4:	ldr	x8, [x8, #4000]
  405fa8:	cbz	x8, 405fb0 <wcrtomb@plt+0x14c0>
  405fac:	blr	x8
  405fb0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  405fb4:	add	x1, x1, #0xfa7
  405fb8:	mov	w2, #0x5                   	// #5
  405fbc:	mov	x0, xzr
  405fc0:	bl	4048b0 <dcgettext@plt>
  405fc4:	mov	x2, x0
  405fc8:	mov	w0, wzr
  405fcc:	mov	w1, wzr
  405fd0:	bl	403f60 <error@plt>
  405fd4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405fd8:	mov	w9, #0x2                   	// #2
  405fdc:	str	w9, [x8, #2352]
  405fe0:	b	4061e4 <wcrtomb@plt+0x16f4>
  405fe4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  405fe8:	ldrb	w8, [x8, #3749]
  405fec:	cbz	w8, 4060e4 <wcrtomb@plt+0x15f4>
  405ff0:	mov	w1, #0x1                   	// #1
  405ff4:	mov	x0, x20
  405ff8:	mov	w24, #0x1                   	// #1
  405ffc:	bl	41c568 <wcrtomb@plt+0x17a78>
  406000:	ldr	x27, [x23, #3680]
  406004:	b	4060e8 <wcrtomb@plt+0x15f8>
  406008:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40600c:	ldrb	w8, [x8, #4008]
  406010:	cbnz	w8, 406044 <wcrtomb@plt+0x1554>
  406014:	mov	w1, #0x3a                  	// #58
  406018:	mov	x0, x20
  40601c:	bl	404750 <strchr@plt>
  406020:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406024:	str	x0, [x8, #4016]
  406028:	ldr	x20, [x27]
  40602c:	subs	x2, x0, x20
  406030:	b.ls	406044 <wcrtomb@plt+0x1554>  // b.plast
  406034:	mov	w1, #0x2f                  	// #47
  406038:	mov	x0, x20
  40603c:	bl	404840 <memchr@plt>
  406040:	cbz	x0, 4065c4 <wcrtomb@plt+0x1ad4>
  406044:	mov	w1, #0x42                  	// #66
  406048:	mov	w2, #0x1b6                 	// #438
  40604c:	mov	x0, x20
  406050:	bl	404240 <open@plt>
  406054:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406058:	str	w0, [x8, #3968]
  40605c:	mov	x0, xzr
  406060:	bl	408640 <wcrtomb@plt+0x3b50>
  406064:	cmp	w0, #0x2
  406068:	b.cc	4061e4 <wcrtomb@plt+0x16f4>  // b.lo, b.ul, b.last
  40606c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406070:	ldr	x8, [x8, #4000]
  406074:	cbz	x8, 40607c <wcrtomb@plt+0x158c>
  406078:	blr	x8
  40607c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406080:	add	x1, x1, #0x3af
  406084:	b	406774 <wcrtomb@plt+0x1c84>
  406088:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40608c:	ldr	x8, [x8, #3952]
  406090:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406094:	mov	w10, #0x1                   	// #1
  406098:	str	w10, [x9, #3968]
  40609c:	cbz	x8, 4060d0 <wcrtomb@plt+0x15e0>
  4060a0:	mov	w24, wzr
  4060a4:	b	406200 <wcrtomb@plt+0x1710>
  4060a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060ac:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060b0:	ldr	x9, [x24, #2880]
  4060b4:	str	wzr, [x8, #3968]
  4060b8:	ldr	x8, [x10, #3952]
  4060bc:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060c0:	mov	w11, #0x1                   	// #1
  4060c4:	strb	w11, [x10, #2888]
  4060c8:	str	x9, [x22, #2840]
  4060cc:	cbnz	x8, 4061e4 <wcrtomb@plt+0x16f4>
  4060d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060d4:	ldr	x8, [x8, #88]
  4060d8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060dc:	str	x8, [x9, #2824]
  4060e0:	b	4061e4 <wcrtomb@plt+0x16f4>
  4060e4:	mov	w24, wzr
  4060e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060ec:	ldrb	w9, [x8, #3834]
  4060f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4060f4:	ldrb	w8, [x8, #4008]
  4060f8:	cbz	w9, 406114 <wcrtomb@plt+0x1624>
  4060fc:	cbz	w8, 406130 <wcrtomb@plt+0x1640>
  406100:	ldr	x0, [x27]
  406104:	mov	w1, #0x42                  	// #66
  406108:	mov	w2, #0x1b6                 	// #438
  40610c:	bl	404240 <open@plt>
  406110:	b	406124 <wcrtomb@plt+0x1634>
  406114:	cbz	w8, 406510 <wcrtomb@plt+0x1a20>
  406118:	ldr	x0, [x27]
  40611c:	mov	w1, #0x1b6                 	// #438
  406120:	bl	404a80 <creat@plt>
  406124:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406128:	str	w0, [x8, #3968]
  40612c:	b	4061f0 <wcrtomb@plt+0x1700>
  406130:	ldr	x0, [x27]
  406134:	mov	w1, #0x3a                  	// #58
  406138:	bl	404750 <strchr@plt>
  40613c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406140:	str	x0, [x8, #4016]
  406144:	cbz	x0, 406100 <wcrtomb@plt+0x1610>
  406148:	ldr	x20, [x27]
  40614c:	subs	x2, x0, x20
  406150:	b.ls	406100 <wcrtomb@plt+0x1610>  // b.plast
  406154:	mov	w1, #0x2f                  	// #47
  406158:	mov	x0, x20
  40615c:	bl	404840 <memchr@plt>
  406160:	cbnz	x0, 406100 <wcrtomb@plt+0x1610>
  406164:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406168:	ldr	x3, [x8, #3800]
  40616c:	mov	w1, #0x42                  	// #66
  406170:	b	406550 <wcrtomb@plt+0x1a60>
  406174:	mov	w0, w1
  406178:	bl	4044d0 <close@plt>
  40617c:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406180:	add	x28, x28, #0x88
  406184:	strb	wzr, [x28]
  406188:	bl	423954 <wcrtomb@plt+0x1ee64>
  40618c:	ldr	w1, [x27, #3968]
  406190:	mov	w8, #0x1                   	// #1
  406194:	str	w0, [x28, #24]
  406198:	strb	w8, [x28, #4]
  40619c:	ldr	x8, [x24, #2880]
  4061a0:	str	xzr, [x26, #2832]
  4061a4:	str	x8, [x22, #2840]
  4061a8:	str	w1, [x27, #3968]
  4061ac:	tbnz	w1, #31, 40679c <wcrtomb@plt+0x1cac>
  4061b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4061b4:	ldr	w8, [x8, #3852]
  4061b8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4061bc:	cmp	w8, #0x4
  4061c0:	b.ne	4061c8 <wcrtomb@plt+0x16d8>  // b.any
  4061c4:	strb	wzr, [x24, #3920]
  4061c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4061cc:	ldr	w8, [x8, #3064]
  4061d0:	cmn	w8, #0x1
  4061d4:	b.eq	4064d4 <wcrtomb@plt+0x19e4>  // b.none
  4061d8:	cmp	w8, #0x0
  4061dc:	cset	w8, ne  // ne = any
  4061e0:	strb	w8, [x24, #3920]
  4061e4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4061e8:	ldr	w0, [x8, #3968]
  4061ec:	mov	w24, wzr
  4061f0:	tbnz	w0, #31, 4066d4 <wcrtomb@plt+0x1be4>
  4061f4:	mov	w8, #0x3fffffff            	// #1073741823
  4061f8:	cmp	w0, w8
  4061fc:	b.gt	406208 <wcrtomb@plt+0x1718>
  406200:	bl	42301c <wcrtomb@plt+0x1e52c>
  406204:	tbz	w0, #0, 4066d4 <wcrtomb@plt+0x1be4>
  406208:	bl	4230d8 <wcrtomb@plt+0x1e5e8>
  40620c:	bl	423084 <wcrtomb@plt+0x1e594>
  406210:	sub	w8, w19, #0x1
  406214:	cmp	w8, #0x2
  406218:	b.cs	406238 <wcrtomb@plt+0x1748>  // b.hs, b.nlast
  40621c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406220:	cmp	w19, #0x1
  406224:	str	xzr, [x8, #2848]
  406228:	b.eq	4062a0 <wcrtomb@plt+0x17b0>  // b.none
  40622c:	cmp	w19, #0x2
  406230:	b.eq	406274 <wcrtomb@plt+0x1784>  // b.none
  406234:	b	406494 <wcrtomb@plt+0x19a4>
  406238:	cbnz	w19, 406494 <wcrtomb@plt+0x19a4>
  40623c:	ldr	x8, [x21, #2904]
  406240:	ldr	x9, [x22, #2840]
  406244:	cmp	x8, x9
  406248:	b.ne	406274 <wcrtomb@plt+0x1784>  // b.any
  40624c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406250:	ldrb	w8, [x19, #136]
  406254:	tbnz	w8, #0, 406274 <wcrtomb@plt+0x1784>
  406258:	bl	405398 <wcrtomb@plt+0x8a8>
  40625c:	ldr	x8, [x21, #2904]
  406260:	ldr	x9, [x22, #2840]
  406264:	cmp	x8, x9
  406268:	b.ne	406274 <wcrtomb@plt+0x1784>  // b.any
  40626c:	mov	w8, #0x1                   	// #1
  406270:	strb	w8, [x19, #136]
  406274:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406278:	ldr	x0, [x23, #3640]
  40627c:	cbz	x0, 406494 <wcrtomb@plt+0x19a4>
  406280:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406284:	ldr	x19, [x24, #2864]
  406288:	cbz	x19, 406330 <wcrtomb@plt+0x1840>
  40628c:	mov	x1, x19
  406290:	mov	w2, wzr
  406294:	bl	4047a0 <fnmatch@plt>
  406298:	cbnz	w0, 4063f0 <wcrtomb@plt+0x1900>
  40629c:	b	406494 <wcrtomb@plt+0x19a4>
  4062a0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4062a4:	ldr	x0, [x21, #3640]
  4062a8:	str	xzr, [x8, #2848]
  4062ac:	cbz	x0, 406494 <wcrtomb@plt+0x19a4>
  4062b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4062b4:	ldrb	w8, [x8, #3068]
  4062b8:	cbz	w8, 406390 <wcrtomb@plt+0x18a0>
  4062bc:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4062c0:	ldrsw	x0, [x8, #1628]
  4062c4:	mov	x1, sp
  4062c8:	bl	440290 <argp_parse@@Base+0x5be4>
  4062cc:	ldr	x8, [x21, #3640]
  4062d0:	mov	x19, x0
  4062d4:	mov	x0, x8
  4062d8:	bl	403f00 <strlen@plt>
  4062dc:	mov	x20, x0
  4062e0:	mov	x0, x19
  4062e4:	bl	403f00 <strlen@plt>
  4062e8:	add	x8, x20, x0
  4062ec:	add	x0, x8, #0x9
  4062f0:	bl	44a010 <argp_parse@@Base+0xf964>
  4062f4:	ldr	x4, [x21, #3640]
  4062f8:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4062fc:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406300:	add	x3, x3, #0x278
  406304:	add	x5, x5, #0x281
  406308:	mov	w1, #0x1                   	// #1
  40630c:	mov	x2, #0xffffffffffffffff    	// #-1
  406310:	mov	x6, x19
  406314:	mov	x20, x0
  406318:	bl	403f20 <__sprintf_chk@plt>
  40631c:	mov	x0, x20
  406320:	bl	4084c4 <wcrtomb@plt+0x39d4>
  406324:	mov	x0, x20
  406328:	bl	4046b0 <free@plt>
  40632c:	b	406494 <wcrtomb@plt+0x19a4>
  406330:	ldr	x19, [x21, #2904]
  406334:	ldr	x8, [x22, #2840]
  406338:	cmp	x19, x8
  40633c:	b.ne	406360 <wcrtomb@plt+0x1870>  // b.any
  406340:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406344:	ldrb	w8, [x20, #136]
  406348:	tbnz	w8, #0, 4067c0 <wcrtomb@plt+0x1cd0>
  40634c:	bl	405398 <wcrtomb@plt+0x8a8>
  406350:	ldr	x19, [x21, #2904]
  406354:	ldr	x8, [x22, #2840]
  406358:	cmp	x19, x8
  40635c:	b.eq	4067b8 <wcrtomb@plt+0x1cc8>  // b.none
  406360:	cbz	x19, 4067c0 <wcrtomb@plt+0x1cd0>
  406364:	ldrb	w8, [x19, #156]
  406368:	cmp	w8, #0x67
  40636c:	b.eq	406398 <wcrtomb@plt+0x18a8>  // b.none
  406370:	cmp	w8, #0x56
  406374:	b.ne	4063d4 <wcrtomb@plt+0x18e4>  // b.any
  406378:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40637c:	add	x0, x0, #0xb30
  406380:	mov	w2, #0x64                  	// #100
  406384:	mov	x1, x19
  406388:	bl	41b658 <wcrtomb@plt+0x16b68>
  40638c:	b	4063d4 <wcrtomb@plt+0x18e4>
  406390:	bl	4084c4 <wcrtomb@plt+0x39d4>
  406394:	b	406494 <wcrtomb@plt+0x19a4>
  406398:	mov	x0, sp
  40639c:	mov	x20, sp
  4063a0:	bl	425e88 <wcrtomb@plt+0x21398>
  4063a4:	add	x0, x19, #0x7c
  4063a8:	mov	w1, #0xc                   	// #12
  4063ac:	add	x20, x20, #0x158
  4063b0:	bl	41a32c <wcrtomb@plt+0x1583c>
  4063b4:	mov	x2, x0
  4063b8:	mov	x0, x20
  4063bc:	mov	x1, x19
  4063c0:	bl	413358 <wcrtomb@plt+0xe868>
  4063c4:	mov	x0, sp
  4063c8:	bl	412aac <wcrtomb@plt+0xdfbc>
  4063cc:	mov	x0, sp
  4063d0:	bl	425f4c <wcrtomb@plt+0x2145c>
  4063d4:	ldr	x19, [x24, #2864]
  4063d8:	cbz	x19, 4067c0 <wcrtomb@plt+0x1cd0>
  4063dc:	ldr	x0, [x23, #3640]
  4063e0:	mov	x1, x19
  4063e4:	mov	w2, wzr
  4063e8:	bl	4047a0 <fnmatch@plt>
  4063ec:	cbz	w0, 406494 <wcrtomb@plt+0x19a4>
  4063f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4063f4:	ldrb	w8, [x8, #3068]
  4063f8:	cbz	w8, 406674 <wcrtomb@plt+0x1b84>
  4063fc:	mov	x0, x19
  406400:	bl	403f00 <strlen@plt>
  406404:	cbz	x0, 406674 <wcrtomb@plt+0x1b84>
  406408:	add	x8, x0, x19
  40640c:	sub	x20, x8, #0x1
  406410:	cmp	x20, x19
  406414:	b.ls	406674 <wcrtomb@plt+0x1b84>  // b.plast
  406418:	bl	404640 <__ctype_b_loc@plt>
  40641c:	ldr	x8, [x0]
  406420:	ldrb	w9, [x20], #-1
  406424:	ldrh	w8, [x8, x9, lsl #1]
  406428:	tbnz	w8, #11, 406410 <wcrtomb@plt+0x1920>
  40642c:	sub	x8, x20, #0x6
  406430:	subs	x21, x8, x19
  406434:	b.ls	406674 <wcrtomb@plt+0x1b84>  // b.plast
  406438:	ldur	x8, [x20, #-6]
  40643c:	mov	x9, #0x5620                	// #22048
  406440:	movk	x9, #0x6c6f, lsl #16
  406444:	movk	x9, #0x6d75, lsl #32
  406448:	movk	x9, #0x2065, lsl #48
  40644c:	cmp	x8, x9
  406450:	b.ne	406674 <wcrtomb@plt+0x1b84>  // b.any
  406454:	add	x0, x21, #0x1
  406458:	bl	44a010 <argp_parse@@Base+0xf964>
  40645c:	mov	x1, x19
  406460:	mov	x2, x21
  406464:	mov	x20, x0
  406468:	bl	403e80 <memcpy@plt>
  40646c:	strb	wzr, [x20, x21]
  406470:	cbz	x20, 406674 <wcrtomb@plt+0x1b84>
  406474:	ldr	x1, [x23, #3640]
  406478:	mov	x0, x20
  40647c:	mov	w2, wzr
  406480:	bl	4047a0 <fnmatch@plt>
  406484:	mov	w19, w0
  406488:	mov	x0, x20
  40648c:	bl	4046b0 <free@plt>
  406490:	cbnz	w19, 406674 <wcrtomb@plt+0x1b84>
  406494:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406498:	add	x19, x19, #0xf58
  40649c:	mov	x0, x19
  4064a0:	bl	43e664 <argp_parse@@Base+0x3fb8>
  4064a4:	ldr	q0, [x19]
  4064a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4064ac:	add	x8, x8, #0xf10
  4064b0:	str	q0, [x8]
  4064b4:	add	sp, sp, #0x1b0
  4064b8:	ldp	x20, x19, [sp, #80]
  4064bc:	ldp	x22, x21, [sp, #64]
  4064c0:	ldp	x24, x23, [sp, #48]
  4064c4:	ldp	x26, x25, [sp, #32]
  4064c8:	ldp	x28, x27, [sp, #16]
  4064cc:	ldp	x29, x30, [sp], #96
  4064d0:	ret
  4064d4:	ldrb	w9, [x20, #3068]
  4064d8:	mov	w8, wzr
  4064dc:	cbnz	w9, 4061e0 <wcrtomb@plt+0x16f0>
  4064e0:	ldr	x9, [x25, #3896]
  4064e4:	cbnz	x9, 4061e0 <wcrtomb@plt+0x16f0>
  4064e8:	mov	x2, sp
  4064ec:	mov	w0, wzr
  4064f0:	bl	404890 <__fxstat@plt>
  4064f4:	mov	w8, wzr
  4064f8:	cbnz	w0, 4061e0 <wcrtomb@plt+0x16f0>
  4064fc:	ldr	w8, [sp, #16]
  406500:	and	w8, w8, #0xf000
  406504:	cmp	w8, #0x8, lsl #12
  406508:	cset	w8, eq  // eq = none
  40650c:	b	4061e0 <wcrtomb@plt+0x16f0>
  406510:	ldr	x0, [x27]
  406514:	mov	w1, #0x3a                  	// #58
  406518:	bl	404750 <strchr@plt>
  40651c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406520:	str	x0, [x8, #4016]
  406524:	cbz	x0, 406118 <wcrtomb@plt+0x1628>
  406528:	ldr	x20, [x27]
  40652c:	subs	x2, x0, x20
  406530:	b.ls	406118 <wcrtomb@plt+0x1628>  // b.plast
  406534:	mov	w1, #0x2f                  	// #47
  406538:	mov	x0, x20
  40653c:	bl	404840 <memchr@plt>
  406540:	cbnz	x0, 406118 <wcrtomb@plt+0x1628>
  406544:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406548:	ldr	x3, [x8, #3800]
  40654c:	mov	w1, #0x41                  	// #65
  406550:	mov	w2, #0x40000000            	// #1073741824
  406554:	mov	x0, x20
  406558:	bl	42dc2c <wcrtomb@plt+0x2913c>
  40655c:	b	406124 <wcrtomb@plt+0x1634>
  406560:	mov	x0, sp
  406564:	bl	408640 <wcrtomb@plt+0x3b50>
  406568:	cbz	w0, 4065fc <wcrtomb@plt+0x1b0c>
  40656c:	cmp	w0, #0x1
  406570:	b.ne	406664 <wcrtomb@plt+0x1b74>  // b.any
  406574:	ldrb	w8, [sp]
  406578:	cbz	w8, 4065bc <wcrtomb@plt+0x1acc>
  40657c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406580:	ldr	x8, [x8, #4000]
  406584:	cbz	x8, 40658c <wcrtomb@plt+0x1a9c>
  406588:	blr	x8
  40658c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  406590:	add	x1, x1, #0xfa7
  406594:	mov	w2, #0x5                   	// #5
  406598:	mov	x0, xzr
  40659c:	bl	4048b0 <dcgettext@plt>
  4065a0:	mov	x2, x0
  4065a4:	mov	w0, wzr
  4065a8:	mov	w1, wzr
  4065ac:	bl	403f60 <error@plt>
  4065b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4065b4:	mov	w9, #0x2                   	// #2
  4065b8:	str	w9, [x8, #2352]
  4065bc:	ldr	w1, [x27, #3968]
  4065c0:	b	4061a8 <wcrtomb@plt+0x16b8>
  4065c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4065c8:	ldr	x3, [x8, #3800]
  4065cc:	mov	w1, #0x42                  	// #66
  4065d0:	mov	w2, #0x40000000            	// #1073741824
  4065d4:	mov	x0, x20
  4065d8:	bl	42dc2c <wcrtomb@plt+0x2913c>
  4065dc:	b	406054 <wcrtomb@plt+0x1564>
  4065e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4065e4:	ldr	x3, [x8, #3800]
  4065e8:	mov	w2, #0x40000000            	// #1073741824
  4065ec:	mov	x0, x20
  4065f0:	mov	w1, wzr
  4065f4:	bl	42dc2c <wcrtomb@plt+0x2913c>
  4065f8:	b	405ebc <wcrtomb@plt+0x13cc>
  4065fc:	ldrb	w8, [sp]
  406600:	cbz	w8, 406644 <wcrtomb@plt+0x1b54>
  406604:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406608:	ldr	x8, [x8, #4000]
  40660c:	cbz	x8, 406614 <wcrtomb@plt+0x1b24>
  406610:	blr	x8
  406614:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  406618:	add	x1, x1, #0xfa7
  40661c:	mov	w2, #0x5                   	// #5
  406620:	mov	x0, xzr
  406624:	bl	4048b0 <dcgettext@plt>
  406628:	mov	x2, x0
  40662c:	mov	w0, wzr
  406630:	mov	w1, wzr
  406634:	bl	403f60 <error@plt>
  406638:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40663c:	mov	w9, #0x2                   	// #2
  406640:	str	w9, [x8, #2352]
  406644:	ldr	x8, [x23, #3680]
  406648:	mov	x1, xzr
  40664c:	ldr	x0, [x8]
  406650:	bl	422714 <wcrtomb@plt+0x1dc24>
  406654:	ldr	x8, [x25, #3896]
  406658:	ldr	w1, [x27, #3968]
  40665c:	cbnz	x8, 405ee4 <wcrtomb@plt+0x13f4>
  406660:	b	4061a8 <wcrtomb@plt+0x16b8>
  406664:	ldr	w1, [x27, #3968]
  406668:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40666c:	str	w0, [x8, #156]
  406670:	b	405ee4 <wcrtomb@plt+0x13f4>
  406674:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406678:	ldr	x8, [x8, #4000]
  40667c:	cbz	x8, 406684 <wcrtomb@plt+0x1b94>
  406680:	blr	x8
  406684:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406688:	add	x1, x1, #0x4a7
  40668c:	mov	w2, #0x5                   	// #5
  406690:	mov	x0, xzr
  406694:	bl	4048b0 <dcgettext@plt>
  406698:	ldr	x1, [x24, #2864]
  40669c:	mov	x19, x0
  4066a0:	mov	w0, wzr
  4066a4:	bl	449134 <argp_parse@@Base+0xea88>
  4066a8:	ldr	x1, [x23, #3640]
  4066ac:	mov	x20, x0
  4066b0:	mov	w0, #0x1                   	// #1
  4066b4:	bl	449134 <argp_parse@@Base+0xea88>
  4066b8:	mov	x4, x0
  4066bc:	mov	w0, wzr
  4066c0:	mov	w1, wzr
  4066c4:	mov	x2, x19
  4066c8:	mov	x3, x20
  4066cc:	bl	403f60 <error@plt>
  4066d0:	bl	40eb40 <wcrtomb@plt+0xa050>
  4066d4:	bl	4049c0 <__errno_location@plt>
  4066d8:	ldr	w20, [x0]
  4066dc:	mov	x19, x0
  4066e0:	cbz	w24, 4066e8 <wcrtomb@plt+0x1bf8>
  4066e4:	bl	41c7d0 <wcrtomb@plt+0x17ce0>
  4066e8:	str	w20, [x19]
  4066ec:	ldr	x8, [x23, #3680]
  4066f0:	ldr	x0, [x8]
  4066f4:	bl	42cc7c <wcrtomb@plt+0x2818c>
  4066f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4066fc:	ldr	x8, [x8, #4000]
  406700:	cbz	x8, 406708 <wcrtomb@plt+0x1c18>
  406704:	blr	x8
  406708:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40670c:	add	x1, x1, #0x333
  406710:	b	406774 <wcrtomb@plt+0x1c84>
  406714:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406718:	ldr	x8, [x8, #4000]
  40671c:	cbz	x8, 406724 <wcrtomb@plt+0x1c34>
  406720:	blr	x8
  406724:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406728:	add	x1, x1, #0x351
  40672c:	b	406774 <wcrtomb@plt+0x1c84>
  406730:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406734:	ldr	x8, [x8, #4000]
  406738:	cbz	x8, 406740 <wcrtomb@plt+0x1c50>
  40673c:	blr	x8
  406740:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406744:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406748:	add	x8, x8, #0x416
  40674c:	add	x9, x9, #0x3d1
  406750:	cmp	w20, #0x0
  406754:	csel	x1, x9, x8, eq  // eq = none
  406758:	b	406774 <wcrtomb@plt+0x1c84>
  40675c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406760:	ldr	x8, [x8, #4000]
  406764:	cbz	x8, 40676c <wcrtomb@plt+0x1c7c>
  406768:	blr	x8
  40676c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406770:	add	x1, x1, #0x367
  406774:	mov	w2, #0x5                   	// #5
  406778:	mov	x0, xzr
  40677c:	bl	4048b0 <dcgettext@plt>
  406780:	mov	x2, x0
  406784:	mov	w0, wzr
  406788:	mov	w1, wzr
  40678c:	bl	403f60 <error@plt>
  406790:	bl	40eb40 <wcrtomb@plt+0xa050>
  406794:	mov	w8, #0xffffffff            	// #-1
  406798:	str	w8, [x27, #3968]
  40679c:	bl	4049c0 <__errno_location@plt>
  4067a0:	ldr	w20, [x0]
  4067a4:	mov	x19, x0
  4067a8:	str	w20, [x19]
  4067ac:	ldr	x8, [x23, #3680]
  4067b0:	ldr	x0, [x8]
  4067b4:	bl	42cc7c <wcrtomb@plt+0x2818c>
  4067b8:	mov	w8, #0x1                   	// #1
  4067bc:	strb	w8, [x20, #136]
  4067c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4067c4:	ldr	x8, [x8, #4000]
  4067c8:	cbz	x8, 4067d0 <wcrtomb@plt+0x1ce0>
  4067cc:	blr	x8
  4067d0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4067d4:	add	x1, x1, #0x487
  4067d8:	mov	w2, #0x5                   	// #5
  4067dc:	mov	x0, xzr
  4067e0:	bl	4048b0 <dcgettext@plt>
  4067e4:	ldr	x8, [x23, #3640]
  4067e8:	mov	x19, x0
  4067ec:	mov	x0, x8
  4067f0:	bl	449144 <argp_parse@@Base+0xea98>
  4067f4:	mov	x3, x0
  4067f8:	mov	w0, wzr
  4067fc:	mov	w1, wzr
  406800:	mov	x2, x19
  406804:	bl	403f60 <error@plt>
  406808:	bl	40eb40 <wcrtomb@plt+0xa050>
  40680c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406810:	ldr	x8, [x8, #4000]
  406814:	mov	w20, w0
  406818:	cbz	x8, 406820 <wcrtomb@plt+0x1d30>
  40681c:	blr	x8
  406820:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406824:	add	x1, x1, #0x38a
  406828:	mov	w2, #0x5                   	// #5
  40682c:	mov	x0, xzr
  406830:	bl	4048b0 <dcgettext@plt>
  406834:	mov	x19, x0
  406838:	mov	w0, w20
  40683c:	bl	408884 <wcrtomb@plt+0x3d94>
  406840:	b	4067f4 <wcrtomb@plt+0x1d04>
  406844:	sub	sp, sp, #0xb0
  406848:	stp	x20, x19, [sp, #160]
  40684c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406850:	adrp	x8, 407000 <wcrtomb@plt+0x2510>
  406854:	add	x19, x19, #0x98
  406858:	add	x8, x8, #0x8b8
  40685c:	mov	w0, wzr
  406860:	stp	x29, x30, [sp, #80]
  406864:	stp	x28, x27, [sp, #96]
  406868:	stp	x26, x25, [sp, #112]
  40686c:	stp	x24, x23, [sp, #128]
  406870:	stp	x22, x21, [sp, #144]
  406874:	add	x29, sp, #0x50
  406878:	str	x8, [x19, #72]
  40687c:	bl	408e40 <wcrtomb@plt+0x4350>
  406880:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406884:	ldrb	w8, [x8, #2888]
  406888:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40688c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406890:	str	wzr, [x19]
  406894:	cbz	w8, 4068c4 <wcrtomb@plt+0x1dd4>
  406898:	ldr	x8, [x19, #56]
  40689c:	cbz	x8, 4068c4 <wcrtomb@plt+0x1dd4>
  4068a0:	mov	w8, #0x1                   	// #1
  4068a4:	str	w8, [x27, #3968]
  4068a8:	bl	4233d0 <wcrtomb@plt+0x1e8e0>
  4068ac:	ldr	x8, [x22, #3912]
  4068b0:	str	wzr, [x27, #3968]
  4068b4:	cmp	x0, x8
  4068b8:	b.eq	4068c4 <wcrtomb@plt+0x1dd4>  // b.none
  4068bc:	bl	4056c8 <wcrtomb@plt+0xbd8>
  4068c0:	bl	405790 <wcrtomb@plt+0xca0>
  4068c4:	ldr	w0, [x27, #3968]
  4068c8:	mov	w8, #0x40000000            	// #1073741824
  4068cc:	cmp	w0, w8
  4068d0:	b.lt	406900 <wcrtomb@plt+0x1e10>  // b.tstop
  4068d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4068d8:	ldr	x1, [x8, #2880]
  4068dc:	ldr	x2, [x22, #3912]
  4068e0:	mov	w8, #0xc0000000            	// #-1073741824
  4068e4:	add	w0, w0, w8
  4068e8:	bl	42e42c <wcrtomb@plt+0x2993c>
  4068ec:	ldr	x8, [x22, #3912]
  4068f0:	mov	x19, x0
  4068f4:	cmp	x0, x8
  4068f8:	b.ne	406920 <wcrtomb@plt+0x1e30>  // b.any
  4068fc:	b	40695c <wcrtomb@plt+0x1e6c>
  406900:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406904:	ldr	x1, [x8, #2880]
  406908:	ldr	x2, [x22, #3912]
  40690c:	bl	44932c <argp_parse@@Base+0xec80>
  406910:	ldr	x8, [x22, #3912]
  406914:	mov	x19, x0
  406918:	cmp	x0, x8
  40691c:	b.eq	40695c <wcrtomb@plt+0x1e6c>  // b.none
  406920:	cbz	x19, 40693c <wcrtomb@plt+0x1e4c>
  406924:	cmn	x19, #0x1
  406928:	b.ne	406950 <wcrtomb@plt+0x1e60>  // b.any
  40692c:	bl	4049c0 <__errno_location@plt>
  406930:	ldr	w8, [x0]
  406934:	cmp	w8, #0x1c
  406938:	b.ne	4068c0 <wcrtomb@plt+0x1dd0>  // b.any
  40693c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406940:	ldrb	w8, [x8, #3068]
  406944:	cbnz	w8, 406970 <wcrtomb@plt+0x1e80>
  406948:	cmn	x19, #0x1
  40694c:	b.eq	4068c0 <wcrtomb@plt+0x1dd0>  // b.none
  406950:	mov	x0, x19
  406954:	bl	40799c <wcrtomb@plt+0x2eac>
  406958:	b	407014 <wcrtomb@plt+0x2524>
  40695c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406960:	ldr	x9, [x8, #2832]
  406964:	add	x9, x9, #0x1
  406968:	str	x9, [x8, #2832]
  40696c:	b	407014 <wcrtomb@plt+0x2524>
  406970:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406974:	mov	w19, #0x40000000            	// #1073741824
  406978:	mov	w20, #0xc0000000            	// #-1073741824
  40697c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406980:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406984:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406988:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40698c:	b	4069b4 <wcrtomb@plt+0x1ec4>
  406990:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  406994:	mov	w2, #0x5                   	// #5
  406998:	mov	x0, xzr
  40699c:	add	x1, x1, #0xfa7
  4069a0:	bl	4048b0 <dcgettext@plt>
  4069a4:	mov	x2, x0
  4069a8:	mov	w0, wzr
  4069ac:	mov	w1, wzr
  4069b0:	bl	403f60 <error@plt>
  4069b4:	ldr	w8, [x26, #3852]
  4069b8:	cmp	w8, #0x8
  4069bc:	b.hi	406b48 <wcrtomb@plt+0x2058>  // b.pmore
  4069c0:	mov	w9, #0x1                   	// #1
  4069c4:	lsl	w8, w9, w8
  4069c8:	mov	w9, #0x106                 	// #262
  4069cc:	tst	w8, w9
  4069d0:	b.eq	406b48 <wcrtomb@plt+0x2058>  // b.none
  4069d4:	mov	w0, #0x2                   	// #2
  4069d8:	bl	407bc0 <wcrtomb@plt+0x30d0>
  4069dc:	tbz	w0, #0, 406ffc <wcrtomb@plt+0x250c>
  4069e0:	ldr	w0, [x27, #3968]
  4069e4:	cmp	w0, w19
  4069e8:	b.lt	406a08 <wcrtomb@plt+0x1f18>  // b.tstop
  4069ec:	ldr	x1, [x21, #2880]
  4069f0:	ldr	x2, [x22, #3912]
  4069f4:	add	w0, w0, w20
  4069f8:	bl	42e42c <wcrtomb@plt+0x2993c>
  4069fc:	cmn	x0, #0x1
  406a00:	b.eq	406a1c <wcrtomb@plt+0x1f2c>  // b.none
  406a04:	b	406a30 <wcrtomb@plt+0x1f40>
  406a08:	ldr	x1, [x21, #2880]
  406a0c:	ldr	x2, [x22, #3912]
  406a10:	bl	44932c <argp_parse@@Base+0xec80>
  406a14:	cmn	x0, #0x1
  406a18:	b.ne	406a30 <wcrtomb@plt+0x1f40>  // b.any
  406a1c:	bl	405790 <wcrtomb@plt+0xca0>
  406a20:	ldr	w0, [x27, #3968]
  406a24:	cmp	w0, w19
  406a28:	b.ge	4069ec <wcrtomb@plt+0x1efc>  // b.tcont
  406a2c:	b	406a08 <wcrtomb@plt+0x1f18>
  406a30:	ldr	x8, [x22, #3912]
  406a34:	cmp	x0, x8
  406a38:	b.eq	406a40 <wcrtomb@plt+0x1f50>  // b.none
  406a3c:	bl	40799c <wcrtomb@plt+0x2eac>
  406a40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406a44:	ldr	x24, [x23, #2904]
  406a48:	ldr	x8, [x8, #2840]
  406a4c:	cmp	x24, x8
  406a50:	b.eq	406b04 <wcrtomb@plt+0x2014>  // b.none
  406a54:	stur	x24, [x29, #-8]
  406a58:	cbz	x24, 406b38 <wcrtomb@plt+0x2048>
  406a5c:	ldrb	w8, [x24, #156]
  406a60:	cmp	w8, #0x4d
  406a64:	b.eq	406c6c <wcrtomb@plt+0x217c>  // b.none
  406a68:	cmp	w8, #0x56
  406a6c:	b.eq	406b58 <wcrtomb@plt+0x2068>  // b.none
  406a70:	cmp	w8, #0x67
  406a74:	b.ne	406d20 <wcrtomb@plt+0x2230>  // b.any
  406a78:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406a7c:	add	x24, x24, #0x110
  406a80:	mov	x0, x24
  406a84:	bl	425e88 <wcrtomb@plt+0x21398>
  406a88:	sub	x0, x29, #0x8
  406a8c:	mov	w2, #0x2                   	// #2
  406a90:	mov	x1, x24
  406a94:	bl	41901c <wcrtomb@plt+0x1452c>
  406a98:	cmp	w0, #0x2
  406a9c:	b.ne	406b38 <wcrtomb@plt+0x2048>  // b.any
  406aa0:	mov	x0, x24
  406aa4:	bl	412aac <wcrtomb@plt+0xdfbc>
  406aa8:	mov	x0, x24
  406aac:	bl	425f4c <wcrtomb@plt+0x2145c>
  406ab0:	sub	x0, x29, #0x8
  406ab4:	mov	x1, x24
  406ab8:	mov	w2, wzr
  406abc:	bl	41901c <wcrtomb@plt+0x1452c>
  406ac0:	cmp	w0, #0x5
  406ac4:	b.eq	406d20 <wcrtomb@plt+0x2230>  // b.none
  406ac8:	cmp	w0, #0x1
  406acc:	b.ne	406b38 <wcrtomb@plt+0x2048>  // b.any
  406ad0:	ldur	x9, [x29, #-8]
  406ad4:	ldr	x8, [x23, #2904]
  406ad8:	cmp	x8, x9
  406adc:	b.hi	406af0 <wcrtomb@plt+0x2000>  // b.pmore
  406ae0:	add	x8, x8, #0x200
  406ae4:	cmp	x8, x9
  406ae8:	b.ls	406ae0 <wcrtomb@plt+0x1ff0>  // b.plast
  406aec:	str	x8, [x23, #2904]
  406af0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406af4:	ldr	x9, [x9, #2840]
  406af8:	cmp	x8, x9
  406afc:	b.ls	406d20 <wcrtomb@plt+0x2230>  // b.plast
  406b00:	b	407044 <wcrtomb@plt+0x2554>
  406b04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b08:	ldrb	w8, [x8, #136]
  406b0c:	tbnz	w8, #0, 406b34 <wcrtomb@plt+0x2044>
  406b10:	bl	405398 <wcrtomb@plt+0x8a8>
  406b14:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b18:	ldr	x24, [x23, #2904]
  406b1c:	ldr	x8, [x8, #2840]
  406b20:	cmp	x24, x8
  406b24:	b.ne	406a54 <wcrtomb@plt+0x1f64>  // b.any
  406b28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b2c:	mov	w9, #0x1                   	// #1
  406b30:	strb	w9, [x8, #136]
  406b34:	stur	xzr, [x29, #-8]
  406b38:	ldr	x8, [x28, #4000]
  406b3c:	cbz	x8, 406990 <wcrtomb@plt+0x1ea0>
  406b40:	blr	x8
  406b44:	b	406990 <wcrtomb@plt+0x1ea0>
  406b48:	mov	w0, wzr
  406b4c:	bl	407bc0 <wcrtomb@plt+0x30d0>
  406b50:	tbnz	w0, #0, 4069e0 <wcrtomb@plt+0x1ef0>
  406b54:	b	406ffc <wcrtomb@plt+0x250c>
  406b58:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b5c:	add	x25, x25, #0x110
  406b60:	mov	x0, x25
  406b64:	bl	425e88 <wcrtomb@plt+0x21398>
  406b68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b6c:	add	x0, x0, #0xb98
  406b70:	mov	x1, x25
  406b74:	mov	w2, wzr
  406b78:	bl	41901c <wcrtomb@plt+0x1452c>
  406b7c:	cmp	w0, #0x1
  406b80:	b.ne	406c24 <wcrtomb@plt+0x2134>  // b.any
  406b84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b88:	ldr	x9, [x8, #2968]
  406b8c:	ldr	x8, [x23, #2904]
  406b90:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406b94:	cmp	x8, x9
  406b98:	b.hi	406bac <wcrtomb@plt+0x20bc>  // b.pmore
  406b9c:	add	x8, x8, #0x200
  406ba0:	cmp	x8, x9
  406ba4:	b.ls	406b9c <wcrtomb@plt+0x20ac>  // b.plast
  406ba8:	str	x8, [x23, #2904]
  406bac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406bb0:	ldr	x9, [x9, #2840]
  406bb4:	cmp	x8, x9
  406bb8:	b.hi	407044 <wcrtomb@plt+0x2554>  // b.pmore
  406bbc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406bc0:	add	x0, x0, #0x110
  406bc4:	bl	425f4c <wcrtomb@plt+0x2145c>
  406bc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406bcc:	ldr	x1, [x8, #2968]
  406bd0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406bd4:	mov	w2, #0x64                  	// #100
  406bd8:	add	x0, x0, #0xb30
  406bdc:	bl	41b658 <wcrtomb@plt+0x16b68>
  406be0:	ldr	x8, [x23, #2904]
  406be4:	cmp	x8, x24
  406be8:	b.hi	406bfc <wcrtomb@plt+0x210c>  // b.pmore
  406bec:	add	x8, x8, #0x200
  406bf0:	cmp	x8, x24
  406bf4:	b.ls	406bec <wcrtomb@plt+0x20fc>  // b.plast
  406bf8:	str	x8, [x23, #2904]
  406bfc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c00:	ldr	x9, [x9, #2840]
  406c04:	cmp	x8, x9
  406c08:	b.hi	407044 <wcrtomb@plt+0x2554>  // b.pmore
  406c0c:	b.ne	406c5c <wcrtomb@plt+0x216c>  // b.any
  406c10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c14:	ldrb	w8, [x8, #136]
  406c18:	tbz	w8, #0, 406c34 <wcrtomb@plt+0x2144>
  406c1c:	mov	x8, xzr
  406c20:	b	406c5c <wcrtomb@plt+0x216c>
  406c24:	ldr	x8, [x28, #4000]
  406c28:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c2c:	cbnz	x8, 406ddc <wcrtomb@plt+0x22ec>
  406c30:	b	406de0 <wcrtomb@plt+0x22f0>
  406c34:	bl	405398 <wcrtomb@plt+0x8a8>
  406c38:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c3c:	ldr	x8, [x23, #2904]
  406c40:	ldr	x9, [x9, #2840]
  406c44:	cmp	x8, x9
  406c48:	b.ne	406c5c <wcrtomb@plt+0x216c>  // b.any
  406c4c:	mov	x8, xzr
  406c50:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c54:	mov	w10, #0x1                   	// #1
  406c58:	strb	w10, [x9, #136]
  406c5c:	stur	x8, [x29, #-8]
  406c60:	ldrb	w8, [x8, #156]
  406c64:	cmp	w8, #0x4d
  406c68:	b.ne	406d20 <wcrtomb@plt+0x2230>  // b.any
  406c6c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c70:	add	x24, x24, #0x110
  406c74:	mov	x0, x24
  406c78:	bl	425e88 <wcrtomb@plt+0x21398>
  406c7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c80:	add	x0, x0, #0xb98
  406c84:	mov	x1, x24
  406c88:	mov	w2, wzr
  406c8c:	bl	41901c <wcrtomb@plt+0x1452c>
  406c90:	cmp	w0, #0x1
  406c94:	b.ne	406dd4 <wcrtomb@plt+0x22e4>  // b.any
  406c98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406c9c:	ldr	x9, [x8, #2968]
  406ca0:	ldr	x8, [x23, #2904]
  406ca4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406ca8:	add	x0, x0, #0x110
  406cac:	cmp	x8, x9
  406cb0:	b.hi	406cc4 <wcrtomb@plt+0x21d4>  // b.pmore
  406cb4:	add	x8, x8, #0x200
  406cb8:	cmp	x8, x9
  406cbc:	b.ls	406cb4 <wcrtomb@plt+0x21c4>  // b.plast
  406cc0:	str	x8, [x23, #2904]
  406cc4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406cc8:	ldr	x9, [x9, #2840]
  406ccc:	cmp	x8, x9
  406cd0:	b.hi	407044 <wcrtomb@plt+0x2554>  // b.pmore
  406cd4:	bl	425f4c <wcrtomb@plt+0x2145c>
  406cd8:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406cdc:	ldr	x1, [x23, #2968]
  406ce0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406ce4:	mov	w2, #0x64                  	// #100
  406ce8:	add	x0, x0, #0xb38
  406cec:	bl	41b658 <wcrtomb@plt+0x16b68>
  406cf0:	ldr	x8, [x23, #2968]
  406cf4:	mov	w1, #0xc                   	// #12
  406cf8:	add	x0, x8, #0x7c
  406cfc:	bl	41a348 <wcrtomb@plt+0x15858>
  406d00:	ldr	x8, [x23, #2968]
  406d04:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406d08:	str	x0, [x9, #2896]
  406d0c:	mov	w1, #0xc                   	// #12
  406d10:	add	x0, x8, #0x171
  406d14:	bl	41a348 <wcrtomb@plt+0x15858>
  406d18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406d1c:	str	x0, [x8, #2912]
  406d20:	ldr	x24, [x25, #176]
  406d24:	mov	x23, x28
  406d28:	cbz	x24, 406fd0 <wcrtomb@plt+0x24e0>
  406d2c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406d30:	ldr	x28, [x8, #2872]
  406d34:	cbz	x28, 406d84 <wcrtomb@plt+0x2294>
  406d38:	ldr	x26, [x24, #16]
  406d3c:	mov	x0, x28
  406d40:	mov	x1, x26
  406d44:	bl	404610 <strcmp@plt>
  406d48:	cbz	w0, 406e60 <wcrtomb@plt+0x2370>
  406d4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406d50:	ldr	w8, [x8, #3808]
  406d54:	orr	w8, w8, #0x4
  406d58:	cmp	w8, #0x6
  406d5c:	b.ne	406d84 <wcrtomb@plt+0x2294>  // b.any
  406d60:	mov	x0, x26
  406d64:	bl	403f00 <strlen@plt>
  406d68:	cmp	x0, #0x64
  406d6c:	b.cc	406d84 <wcrtomb@plt+0x2294>  // b.lo, b.ul, b.last
  406d70:	mov	w2, #0x64                  	// #100
  406d74:	mov	x0, x28
  406d78:	mov	x1, x26
  406d7c:	bl	4042c0 <strncmp@plt>
  406d80:	cbz	w0, 406e14 <wcrtomb@plt+0x2324>
  406d84:	ldr	x8, [x23, #4000]
  406d88:	mov	x28, x23
  406d8c:	cbz	x8, 406d94 <wcrtomb@plt+0x22a4>
  406d90:	blr	x8
  406d94:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  406d98:	mov	w2, #0x5                   	// #5
  406d9c:	mov	x0, xzr
  406da0:	add	x1, x1, #0xfcd
  406da4:	bl	4048b0 <dcgettext@plt>
  406da8:	ldr	x8, [x25, #176]
  406dac:	mov	x26, x0
  406db0:	ldr	x8, [x8, #16]
  406db4:	mov	x0, x8
  406db8:	bl	449144 <argp_parse@@Base+0xea98>
  406dbc:	mov	x3, x0
  406dc0:	mov	w0, wzr
  406dc4:	mov	w1, wzr
  406dc8:	mov	x2, x26
  406dcc:	bl	403f60 <error@plt>
  406dd0:	b	406fc4 <wcrtomb@plt+0x24d4>
  406dd4:	ldr	x8, [x28, #4000]
  406dd8:	cbz	x8, 406de0 <wcrtomb@plt+0x22f0>
  406ddc:	blr	x8
  406de0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  406de4:	mov	w2, #0x5                   	// #5
  406de8:	mov	x0, xzr
  406dec:	add	x1, x1, #0xfa7
  406df0:	bl	4048b0 <dcgettext@plt>
  406df4:	mov	x2, x0
  406df8:	mov	w0, wzr
  406dfc:	mov	w1, wzr
  406e00:	bl	403f60 <error@plt>
  406e04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406e08:	mov	w9, #0x2                   	// #2
  406e0c:	str	w9, [x8, #2352]
  406e10:	b	4069b4 <wcrtomb@plt+0x1ec4>
  406e14:	ldr	x8, [x23, #4000]
  406e18:	cbz	x8, 406e20 <wcrtomb@plt+0x2330>
  406e1c:	blr	x8
  406e20:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  406e24:	mov	w2, #0x5                   	// #5
  406e28:	mov	x0, xzr
  406e2c:	add	x1, x1, #0xff0
  406e30:	bl	4048b0 <dcgettext@plt>
  406e34:	ldr	x8, [x25, #176]
  406e38:	mov	x26, x0
  406e3c:	ldr	x8, [x8, #16]
  406e40:	mov	x0, x8
  406e44:	bl	449144 <argp_parse@@Base+0xea98>
  406e48:	mov	x3, x0
  406e4c:	mov	w0, wzr
  406e50:	mov	w1, wzr
  406e54:	mov	x2, x26
  406e58:	bl	403f60 <error@plt>
  406e5c:	ldr	x24, [x25, #176]
  406e60:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406e64:	ldr	x9, [x8, #2896]
  406e68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406e6c:	ldr	x8, [x8, #2912]
  406e70:	adds	x9, x8, x9
  406e74:	b.cs	406f20 <wcrtomb@plt+0x2430>  // b.hs, b.nlast
  406e78:	ldr	x10, [x24, #24]
  406e7c:	cmp	x10, x9
  406e80:	b.ne	406f20 <wcrtomb@plt+0x2430>  // b.any
  406e84:	ldr	x10, [x24, #32]
  406e88:	sub	x9, x9, x10
  406e8c:	cmp	x9, x8
  406e90:	b.eq	406fd0 <wcrtomb@plt+0x24e0>  // b.none
  406e94:	ldr	x8, [x23, #4000]
  406e98:	cbz	x8, 406ea0 <wcrtomb@plt+0x23b0>
  406e9c:	blr	x8
  406ea0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406ea4:	mov	w2, #0x5                   	// #5
  406ea8:	mov	x0, xzr
  406eac:	add	x1, x1, #0x5d
  406eb0:	bl	4048b0 <dcgettext@plt>
  406eb4:	ldr	x8, [x25, #176]
  406eb8:	mov	x24, x0
  406ebc:	sub	x1, x29, #0x20
  406ec0:	ldr	x8, [x8, #24]
  406ec4:	mov	x0, x8
  406ec8:	bl	440290 <argp_parse@@Base+0x5be4>
  406ecc:	ldr	x8, [x25, #176]
  406ed0:	mov	x25, x0
  406ed4:	add	x1, sp, #0x18
  406ed8:	ldr	x8, [x8, #32]
  406edc:	mov	x0, x8
  406ee0:	bl	440290 <argp_parse@@Base+0x5be4>
  406ee4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406ee8:	ldr	x8, [x8, #2912]
  406eec:	mov	x26, x0
  406ef0:	mov	x1, sp
  406ef4:	mov	x0, x8
  406ef8:	bl	440290 <argp_parse@@Base+0x5be4>
  406efc:	mov	x5, x0
  406f00:	mov	w0, wzr
  406f04:	mov	w1, wzr
  406f08:	mov	x2, x24
  406f0c:	mov	x3, x25
  406f10:	mov	x4, x26
  406f14:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406f18:	bl	403f60 <error@plt>
  406f1c:	b	406fc0 <wcrtomb@plt+0x24d0>
  406f20:	ldr	x8, [x23, #4000]
  406f24:	cbz	x8, 406f2c <wcrtomb@plt+0x243c>
  406f28:	blr	x8
  406f2c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  406f30:	mov	w2, #0x5                   	// #5
  406f34:	mov	x0, xzr
  406f38:	add	x1, x1, #0x38
  406f3c:	bl	4048b0 <dcgettext@plt>
  406f40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406f44:	ldr	x8, [x8, #2872]
  406f48:	mov	x26, x0
  406f4c:	mov	x0, x8
  406f50:	bl	449144 <argp_parse@@Base+0xea98>
  406f54:	ldr	x8, [x25, #176]
  406f58:	mov	x28, x0
  406f5c:	sub	x1, x29, #0x20
  406f60:	ldr	x8, [x8, #24]
  406f64:	mov	x0, x8
  406f68:	bl	440290 <argp_parse@@Base+0x5be4>
  406f6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406f70:	ldr	x8, [x8, #2896]
  406f74:	mov	x25, x0
  406f78:	add	x1, sp, #0x18
  406f7c:	mov	x0, x8
  406f80:	bl	440290 <argp_parse@@Base+0x5be4>
  406f84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406f88:	ldr	x8, [x8, #2912]
  406f8c:	mov	x24, x0
  406f90:	mov	x1, sp
  406f94:	mov	x0, x8
  406f98:	bl	440290 <argp_parse@@Base+0x5be4>
  406f9c:	mov	x6, x0
  406fa0:	mov	w0, wzr
  406fa4:	mov	w1, wzr
  406fa8:	mov	x2, x26
  406fac:	mov	x3, x28
  406fb0:	mov	x4, x25
  406fb4:	mov	x5, x24
  406fb8:	bl	403f60 <error@plt>
  406fbc:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406fc0:	mov	x28, x23
  406fc4:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406fc8:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406fcc:	b	4069b4 <wcrtomb@plt+0x1ec4>
  406fd0:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  406fd4:	ldr	w9, [x8, #1624]
  406fd8:	add	w10, w9, #0x1
  406fdc:	cmn	w9, #0x2
  406fe0:	str	w10, [x8, #1624]
  406fe4:	b.le	407048 <wcrtomb@plt+0x2558>
  406fe8:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  406fec:	ldr	w9, [x8, #1628]
  406ff0:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  406ff4:	add	w9, w9, #0x1
  406ff8:	str	w9, [x8, #1628]
  406ffc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407000:	ldr	x8, [x23, #2904]
  407004:	ldr	x9, [x9, #2840]
  407008:	cmp	x8, x9
  40700c:	b.ne	407014 <wcrtomb@plt+0x2524>  // b.any
  407010:	bl	405398 <wcrtomb@plt+0x8a8>
  407014:	ldp	x20, x19, [sp, #160]
  407018:	ldp	x22, x21, [sp, #144]
  40701c:	ldp	x24, x23, [sp, #128]
  407020:	ldp	x26, x25, [sp, #112]
  407024:	ldp	x28, x27, [sp, #96]
  407028:	ldp	x29, x30, [sp, #80]
  40702c:	adrp	x9, 406000 <wcrtomb@plt+0x1510>
  407030:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407034:	add	x9, x9, #0x844
  407038:	str	x9, [x8, #224]
  40703c:	add	sp, sp, #0xb0
  407040:	ret
  407044:	bl	404560 <abort@plt>
  407048:	ldr	x8, [x23, #4000]
  40704c:	cbz	x8, 407054 <wcrtomb@plt+0x2564>
  407050:	blr	x8
  407054:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407058:	add	x1, x1, #0x23b
  40705c:	mov	w2, #0x5                   	// #5
  407060:	mov	x0, xzr
  407064:	bl	4048b0 <dcgettext@plt>
  407068:	mov	x2, x0
  40706c:	mov	w0, wzr
  407070:	mov	w1, wzr
  407074:	bl	403f60 <error@plt>
  407078:	bl	40eb40 <wcrtomb@plt+0xa050>
  40707c:	stp	x29, x30, [sp, #-96]!
  407080:	stp	x28, x27, [sp, #16]
  407084:	stp	x26, x25, [sp, #32]
  407088:	stp	x24, x23, [sp, #48]
  40708c:	stp	x22, x21, [sp, #64]
  407090:	stp	x20, x19, [sp, #80]
  407094:	mov	x29, sp
  407098:	sub	sp, sp, #0x1c0
  40709c:	adrp	x8, 408000 <wcrtomb@plt+0x3510>
  4070a0:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4070a4:	add	x8, x8, #0x314
  4070a8:	mov	x20, x0
  4070ac:	str	x8, [x22, #216]
  4070b0:	bl	408360 <wcrtomb@plt+0x3870>
  4070b4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4070b8:	ldr	x8, [x21, #3912]
  4070bc:	mov	x19, x0
  4070c0:	cmp	x0, x8
  4070c4:	b.eq	4070d4 <wcrtomb@plt+0x25e4>  // b.none
  4070c8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4070cc:	ldrb	w9, [x9, #3068]
  4070d0:	cbz	w9, 407878 <wcrtomb@plt+0x2d88>
  4070d4:	cbz	x19, 4070e8 <wcrtomb@plt+0x25f8>
  4070d8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4070dc:	ldr	x10, [x9, #2848]
  4070e0:	add	x10, x10, #0x1
  4070e4:	str	x10, [x9, #2848]
  4070e8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4070ec:	ldr	d0, [x9, #200]
  4070f0:	scvtf	d1, x19
  4070f4:	cmp	x19, x8
  4070f8:	fadd	d0, d0, d1
  4070fc:	str	d0, [x9, #200]
  407100:	b.eq	407848 <wcrtomb@plt+0x2d58>  // b.none
  407104:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407108:	ldr	x8, [x28, #176]
  40710c:	mov	x26, x8
  407110:	cbz	x8, 4072c8 <wcrtomb@plt+0x27d8>
  407114:	ldr	x8, [x26]
  407118:	cbz	x8, 407128 <wcrtomb@plt+0x2638>
  40711c:	ldr	x9, [x8, #8]
  407120:	cmp	x19, x9, lsl #9
  407124:	b.cs	40710c <wcrtomb@plt+0x261c>  // b.hs, b.nlast
  407128:	mov	w23, wzr
  40712c:	tst	x19, #0x1ff
  407130:	b.ne	4072d4 <wcrtomb@plt+0x27e4>  // b.any
  407134:	tbz	x19, #63, 407154 <wcrtomb@plt+0x2664>
  407138:	bl	4049c0 <__errno_location@plt>
  40713c:	ldr	w8, [x0]
  407140:	sub	w9, w8, #0x5
  407144:	cmp	w9, #0x2
  407148:	b.cc	407154 <wcrtomb@plt+0x2664>  // b.lo, b.ul, b.last
  40714c:	cmp	w8, #0x1c
  407150:	b.ne	407878 <wcrtomb@plt+0x2d88>  // b.any
  407154:	mov	w0, #0x1                   	// #1
  407158:	bl	407bc0 <wcrtomb@plt+0x30d0>
  40715c:	tbz	w0, #0, 407848 <wcrtomb@plt+0x2d58>
  407160:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407164:	add	x0, x0, #0x110
  407168:	bl	425f4c <wcrtomb@plt+0x2145c>
  40716c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  407170:	ldr	w9, [x8, #1624]
  407174:	add	w10, w9, #0x1
  407178:	cmn	w9, #0x2
  40717c:	str	w10, [x8, #1624]
  407180:	b.le	407880 <wcrtomb@plt+0x2d90>
  407184:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407188:	add	x22, x22, #0x88
  40718c:	ldr	w8, [x22, #28]
  407190:	ldp	d1, d0, [x22, #56]
  407194:	adrp	x12, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  407198:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40719c:	cmp	w8, #0x0
  4071a0:	fadd	d0, d0, d1
  4071a4:	cset	w8, eq  // eq = none
  4071a8:	ldr	w9, [x12, #1628]
  4071ac:	str	xzr, [x22, #64]
  4071b0:	str	d0, [x22, #56]
  4071b4:	str	w8, [x22, #28]
  4071b8:	add	x10, x22, w8, uxtw #3
  4071bc:	ldr	x10, [x10, #120]
  4071c0:	ldr	x11, [x11, #2880]
  4071c4:	add	w9, w9, #0x1
  4071c8:	str	w9, [x12, #1628]
  4071cc:	str	x11, [sp, #8]
  4071d0:	cbnz	x10, 4071f0 <wcrtomb@plt+0x2700>
  4071d4:	ldr	x1, [x21, #3912]
  4071d8:	add	x8, x22, x8, lsl #3
  4071dc:	add	x0, x8, #0x68
  4071e0:	bl	41d150 <wcrtomb@plt+0x18660>
  4071e4:	ldrsw	x8, [x22, #28]
  4071e8:	add	x9, x22, x8, lsl #3
  4071ec:	str	x0, [x9, #120]
  4071f0:	add	x8, x22, x8, lsl #3
  4071f4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4071f8:	ldr	x8, [x8, #120]
  4071fc:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407200:	ldrsw	x9, [x9, #3740]
  407204:	ldr	x11, [x27, #3640]
  407208:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40720c:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407210:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407214:	mov	w10, #0x1                   	// #1
  407218:	str	x8, [x12, #2880]
  40721c:	str	x8, [x24, #2904]
  407220:	add	x8, x8, x9, lsl #9
  407224:	str	x8, [x25, #2840]
  407228:	strb	w10, [x22, #12]
  40722c:	cbz	x11, 4072a0 <wcrtomb@plt+0x27b0>
  407230:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  407234:	ldrsw	x0, [x8, #1628]
  407238:	add	x1, sp, #0x10
  40723c:	bl	440290 <argp_parse@@Base+0x5be4>
  407240:	ldr	x8, [x27, #3640]
  407244:	mov	x21, x0
  407248:	mov	x0, x8
  40724c:	bl	403f00 <strlen@plt>
  407250:	mov	x22, x0
  407254:	mov	x0, x21
  407258:	bl	403f00 <strlen@plt>
  40725c:	add	x8, x22, x0
  407260:	add	x0, x8, #0x9
  407264:	bl	44a010 <argp_parse@@Base+0xf964>
  407268:	ldr	x4, [x27, #3640]
  40726c:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407270:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407274:	add	x3, x3, #0x278
  407278:	add	x5, x5, #0x281
  40727c:	mov	w1, #0x1                   	// #1
  407280:	mov	x2, #0xffffffffffffffff    	// #-1
  407284:	mov	x6, x21
  407288:	mov	x22, x0
  40728c:	bl	403f20 <__sprintf_chk@plt>
  407290:	mov	x0, x22
  407294:	bl	4084c4 <wcrtomb@plt+0x39d4>
  407298:	mov	x0, x22
  40729c:	bl	4046b0 <free@plt>
  4072a0:	tbz	w23, #0, 40731c <wcrtomb@plt+0x282c>
  4072a4:	ldr	x2, [x24, #2904]
  4072a8:	ldr	x8, [x25, #2840]
  4072ac:	cmp	x2, x8
  4072b0:	b.ne	4073d0 <wcrtomb@plt+0x28e0>  // b.any
  4072b4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4072b8:	ldrb	w8, [x21, #136]
  4072bc:	tbz	w8, #0, 4073b0 <wcrtomb@plt+0x28c0>
  4072c0:	mov	x2, xzr
  4072c4:	b	4073d0 <wcrtomb@plt+0x28e0>
  4072c8:	mov	w23, #0x1                   	// #1
  4072cc:	tst	x19, #0x1ff
  4072d0:	b.eq	407134 <wcrtomb@plt+0x2644>  // b.none
  4072d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4072d8:	ldr	x8, [x8, #4000]
  4072dc:	cbz	x8, 4072e4 <wcrtomb@plt+0x27f4>
  4072e0:	blr	x8
  4072e4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4072e8:	add	x1, x1, #0x252
  4072ec:	mov	w2, #0x5                   	// #5
  4072f0:	mov	x0, xzr
  4072f4:	bl	4048b0 <dcgettext@plt>
  4072f8:	mov	x2, x0
  4072fc:	mov	w0, wzr
  407300:	mov	w1, wzr
  407304:	bl	403f60 <error@plt>
  407308:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40730c:	mov	w9, #0x2                   	// #2
  407310:	mov	x0, x19
  407314:	str	w9, [x8, #2352]
  407318:	bl	4056c8 <wcrtomb@plt+0xbd8>
  40731c:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407320:	ldr	w8, [x27, #3808]
  407324:	cmp	w8, #0x4
  407328:	b.ne	40738c <wcrtomb@plt+0x289c>  // b.any
  40732c:	mov	x21, x26
  407330:	ldr	x8, [x21, #32]!
  407334:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407338:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40733c:	add	x22, x22, #0x110
  407340:	ldp	x2, x9, [x21, #-16]
  407344:	add	x0, x0, #0x299
  407348:	mov	x1, x22
  40734c:	sub	x8, x9, x8
  407350:	str	x8, [sp, #16]
  407354:	bl	41321c <wcrtomb@plt+0xe72c>
  407358:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40735c:	add	x0, x0, #0x2ad
  407360:	mov	x1, x22
  407364:	mov	x2, x21
  407368:	bl	41321c <wcrtomb@plt+0xe72c>
  40736c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407370:	add	x0, x0, #0x2bd
  407374:	add	x2, sp, #0x10
  407378:	mov	x1, x22
  40737c:	bl	41321c <wcrtomb@plt+0xe72c>
  407380:	ldr	x2, [x24, #2904]
  407384:	ldr	x8, [x25, #2840]
  407388:	b	40753c <wcrtomb@plt+0x2a4c>
  40738c:	ldr	x21, [x24, #2904]
  407390:	ldr	x8, [x25, #2840]
  407394:	cmp	x21, x8
  407398:	b.ne	407410 <wcrtomb@plt+0x2920>  // b.any
  40739c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4073a0:	ldrb	w8, [x22, #136]
  4073a4:	tbz	w8, #0, 4073f0 <wcrtomb@plt+0x2900>
  4073a8:	mov	x21, xzr
  4073ac:	b	407410 <wcrtomb@plt+0x2920>
  4073b0:	bl	405398 <wcrtomb@plt+0x8a8>
  4073b4:	ldr	x2, [x24, #2904]
  4073b8:	ldr	x8, [x25, #2840]
  4073bc:	cmp	x2, x8
  4073c0:	b.ne	4073d0 <wcrtomb@plt+0x28e0>  // b.any
  4073c4:	mov	x2, xzr
  4073c8:	mov	w8, #0x1                   	// #1
  4073cc:	strb	w8, [x21, #136]
  4073d0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4073d4:	add	x21, x21, #0x110
  4073d8:	mov	w0, #0x1                   	// #1
  4073dc:	mov	x1, x21
  4073e0:	bl	40afa4 <wcrtomb@plt+0x64b4>
  4073e4:	mov	x0, x21
  4073e8:	bl	425f4c <wcrtomb@plt+0x2145c>
  4073ec:	b	40764c <wcrtomb@plt+0x2b5c>
  4073f0:	bl	405398 <wcrtomb@plt+0x8a8>
  4073f4:	ldr	x21, [x24, #2904]
  4073f8:	ldr	x8, [x25, #2840]
  4073fc:	cmp	x21, x8
  407400:	b.ne	407410 <wcrtomb@plt+0x2920>  // b.any
  407404:	mov	x21, xzr
  407408:	mov	w8, #0x1                   	// #1
  40740c:	strb	w8, [x22, #136]
  407410:	ldr	x0, [x26, #16]
  407414:	bl	403f00 <strlen@plt>
  407418:	mov	x2, x0
  40741c:	cmp	x0, #0x65
  407420:	b.cc	407470 <wcrtomb@plt+0x2980>  // b.lo, b.ul, b.last
  407424:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407428:	ldr	x8, [x8, #4000]
  40742c:	cbz	x8, 407434 <wcrtomb@plt+0x2944>
  407430:	blr	x8
  407434:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407438:	add	x1, x1, #0x2cf
  40743c:	mov	w2, #0x5                   	// #5
  407440:	mov	x0, xzr
  407444:	bl	4048b0 <dcgettext@plt>
  407448:	ldr	x8, [x26, #16]
  40744c:	mov	x22, x0
  407450:	mov	x0, x8
  407454:	bl	448e5c <argp_parse@@Base+0xe7b0>
  407458:	mov	x3, x0
  40745c:	mov	w0, wzr
  407460:	mov	w1, wzr
  407464:	mov	x2, x22
  407468:	bl	403f60 <error@plt>
  40746c:	mov	w2, #0x64                  	// #100
  407470:	movi	v0.2d, #0x0
  407474:	stp	q0, q0, [x21, #480]
  407478:	stp	q0, q0, [x21, #448]
  40747c:	stp	q0, q0, [x21, #416]
  407480:	stp	q0, q0, [x21, #384]
  407484:	stp	q0, q0, [x21, #352]
  407488:	stp	q0, q0, [x21, #320]
  40748c:	stp	q0, q0, [x21, #288]
  407490:	stp	q0, q0, [x21, #256]
  407494:	stp	q0, q0, [x21, #224]
  407498:	stp	q0, q0, [x21, #192]
  40749c:	stp	q0, q0, [x21, #160]
  4074a0:	stp	q0, q0, [x21, #128]
  4074a4:	stp	q0, q0, [x21, #96]
  4074a8:	stp	q0, q0, [x21, #64]
  4074ac:	stp	q0, q0, [x21, #32]
  4074b0:	stp	q0, q0, [x21]
  4074b4:	ldr	x1, [x26, #16]
  4074b8:	mov	x0, x21
  4074bc:	bl	403e80 <memcpy@plt>
  4074c0:	mov	w8, #0x4d                  	// #77
  4074c4:	strb	w8, [x21, #156]
  4074c8:	ldr	x0, [x26, #32]
  4074cc:	add	x1, x21, #0x7c
  4074d0:	mov	w2, #0xc                   	// #12
  4074d4:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  4074d8:	ldp	x8, x9, [x26, #24]
  4074dc:	add	x1, x21, #0x171
  4074e0:	mov	w2, #0xc                   	// #12
  4074e4:	sub	x0, x8, x9
  4074e8:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  4074ec:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4074f0:	ldr	w27, [x22, #3636]
  4074f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4074f8:	add	x0, x0, #0xc10
  4074fc:	mov	x2, #0xffffffffffffffff    	// #-1
  407500:	mov	x1, x21
  407504:	str	wzr, [x22, #3636]
  407508:	bl	40bc00 <wcrtomb@plt+0x7110>
  40750c:	ldr	x2, [x24, #2904]
  407510:	str	w27, [x22, #3636]
  407514:	cmp	x2, x21
  407518:	b.hi	40752c <wcrtomb@plt+0x2a3c>  // b.pmore
  40751c:	add	x2, x2, #0x200
  407520:	cmp	x2, x21
  407524:	b.ls	40751c <wcrtomb@plt+0x2a2c>  // b.plast
  407528:	str	x2, [x24, #2904]
  40752c:	ldr	x8, [x25, #2840]
  407530:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407534:	cmp	x2, x8
  407538:	b.hi	407874 <wcrtomb@plt+0x2d84>  // b.pmore
  40753c:	cmp	x2, x8
  407540:	b.ne	407578 <wcrtomb@plt+0x2a88>  // b.any
  407544:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407548:	ldrb	w8, [x21, #136]
  40754c:	tbz	w8, #0, 407558 <wcrtomb@plt+0x2a68>
  407550:	mov	x2, xzr
  407554:	b	407578 <wcrtomb@plt+0x2a88>
  407558:	bl	405398 <wcrtomb@plt+0x8a8>
  40755c:	ldr	x2, [x24, #2904]
  407560:	ldr	x8, [x25, #2840]
  407564:	cmp	x2, x8
  407568:	b.ne	407578 <wcrtomb@plt+0x2a88>  // b.any
  40756c:	mov	x2, xzr
  407570:	mov	w8, #0x1                   	// #1
  407574:	strb	w8, [x21, #136]
  407578:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40757c:	add	x21, x21, #0x110
  407580:	mov	w0, #0x1                   	// #1
  407584:	mov	x1, x21
  407588:	bl	40afa4 <wcrtomb@plt+0x64b4>
  40758c:	mov	x0, x21
  407590:	bl	425f4c <wcrtomb@plt+0x2145c>
  407594:	ldr	w8, [x27, #3808]
  407598:	cmp	w8, #0x4
  40759c:	b.ne	40764c <wcrtomb@plt+0x2b5c>  // b.any
  4075a0:	movi	v0.2d, #0x0
  4075a4:	str	xzr, [sp, #432]
  4075a8:	stp	q0, q0, [sp, #400]
  4075ac:	stp	q0, q0, [sp, #368]
  4075b0:	stp	q0, q0, [sp, #336]
  4075b4:	stp	q0, q0, [sp, #304]
  4075b8:	stp	q0, q0, [sp, #272]
  4075bc:	stp	q0, q0, [sp, #240]
  4075c0:	stp	q0, q0, [sp, #208]
  4075c4:	stp	q0, q0, [sp, #176]
  4075c8:	stp	q0, q0, [sp, #144]
  4075cc:	stp	q0, q0, [sp, #112]
  4075d0:	stp	q0, q0, [sp, #80]
  4075d4:	stp	q0, q0, [sp, #48]
  4075d8:	str	q0, [sp, #32]
  4075dc:	ldr	x8, [x26, #16]
  4075e0:	stp	x8, x8, [sp, #16]
  4075e4:	mov	w8, #0x81a4                	// #33188
  4075e8:	str	w8, [sp, #120]
  4075ec:	bl	404030 <getuid@plt>
  4075f0:	str	w0, [sp, #128]
  4075f4:	bl	4046f0 <getgid@plt>
  4075f8:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4075fc:	ldrsw	x2, [x8, #1628]
  407600:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407604:	str	w0, [sp, #132]
  407608:	add	x1, x1, #0x31a
  40760c:	add	x0, sp, #0x10
  407610:	bl	411f10 <wcrtomb@plt+0xd420>
  407614:	stp	x0, x0, [sp, #16]
  407618:	ldr	x8, [x26, #32]
  40761c:	add	x0, sp, #0x10
  407620:	str	x8, [sp, #152]
  407624:	str	x8, [sp, #280]
  407628:	bl	40b088 <wcrtomb@plt+0x6598>
  40762c:	cbz	x0, 407874 <wcrtomb@plt+0x2d84>
  407630:	mov	x2, x0
  407634:	add	x1, sp, #0x10
  407638:	mov	w0, wzr
  40763c:	bl	40afa4 <wcrtomb@plt+0x64b4>
  407640:	bl	40bb88 <wcrtomb@plt+0x7098>
  407644:	ldr	x0, [sp, #16]
  407648:	bl	4046b0 <free@plt>
  40764c:	ldr	x21, [x24, #2904]
  407650:	ldr	x8, [x25, #2840]
  407654:	cmp	x21, x8
  407658:	b.ne	407690 <wcrtomb@plt+0x2ba0>  // b.any
  40765c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407660:	ldrb	w8, [x22, #136]
  407664:	tbz	w8, #0, 407670 <wcrtomb@plt+0x2b80>
  407668:	mov	x21, xzr
  40766c:	b	407690 <wcrtomb@plt+0x2ba0>
  407670:	bl	405398 <wcrtomb@plt+0x8a8>
  407674:	ldr	x21, [x24, #2904]
  407678:	ldr	x8, [x25, #2840]
  40767c:	cmp	x21, x8
  407680:	b.ne	407690 <wcrtomb@plt+0x2ba0>  // b.any
  407684:	mov	x21, xzr
  407688:	mov	w8, #0x1                   	// #1
  40768c:	strb	w8, [x22, #136]
  407690:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407694:	ldr	x28, [x28, #176]
  407698:	ldr	x27, [x8, #2880]
  40769c:	cmp	x28, #0x0
  4076a0:	cset	w8, ne  // ne = any
  4076a4:	cbz	x28, 4076d4 <wcrtomb@plt+0x2be4>
  4076a8:	cmp	x28, x26
  4076ac:	b.eq	4076d4 <wcrtomb@plt+0x2be4>  // b.none
  4076b0:	mov	x22, x28
  4076b4:	ldr	x0, [x22, #16]
  4076b8:	ldr	x28, [x28]
  4076bc:	bl	4046b0 <free@plt>
  4076c0:	mov	x0, x22
  4076c4:	bl	4046b0 <free@plt>
  4076c8:	cmp	x28, #0x0
  4076cc:	cset	w8, ne  // ne = any
  4076d0:	cbnz	x28, 4076a8 <wcrtomb@plt+0x2bb8>
  4076d4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4076d8:	str	x28, [x9, #176]
  4076dc:	tbnz	w8, #0, 4076e8 <wcrtomb@plt+0x2bf8>
  4076e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4076e4:	str	xzr, [x8, #168]
  4076e8:	ldr	x8, [sp, #8]
  4076ec:	add	x22, x8, x19
  4076f0:	sub	x19, x20, x19
  4076f4:	tbnz	w23, #0, 407718 <wcrtomb@plt+0x2c28>
  4076f8:	sub	x8, x21, x27
  4076fc:	asr	x8, x8, #9
  407700:	ldr	x9, [x26, #8]
  407704:	str	xzr, [x26, #40]
  407708:	add	x9, x9, x8
  40770c:	str	x9, [x26, #8]
  407710:	ldr	x26, [x26]
  407714:	cbnz	x26, 407700 <wcrtomb@plt+0x2c10>
  407718:	ldr	x8, [x25, #2840]
  40771c:	sub	x20, x8, x21
  407720:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407724:	cmp	x20, x19
  407728:	strb	wzr, [x8, #148]
  40772c:	b.cs	4077c4 <wcrtomb@plt+0x2cd4>  // b.hs, b.nlast
  407730:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407734:	mov	w27, #0x1                   	// #1
  407738:	b	40774c <wcrtomb@plt+0x2c5c>
  40773c:	mov	x21, xzr
  407740:	sub	x20, x8, x21
  407744:	cmp	x20, x19
  407748:	b.cs	4077c4 <wcrtomb@plt+0x2cd4>  // b.hs, b.nlast
  40774c:	mov	x0, x21
  407750:	mov	x1, x22
  407754:	mov	x2, x20
  407758:	bl	403e80 <memcpy@plt>
  40775c:	sub	x8, x20, #0x1
  407760:	and	x8, x8, #0xfffffffffffffe00
  407764:	add	x8, x21, x8
  407768:	ldr	x21, [x24, #2904]
  40776c:	cmp	x21, x8
  407770:	b.hi	407784 <wcrtomb@plt+0x2c94>  // b.pmore
  407774:	add	x21, x21, #0x200
  407778:	cmp	x21, x8
  40777c:	b.ls	407774 <wcrtomb@plt+0x2c84>  // b.plast
  407780:	str	x21, [x24, #2904]
  407784:	ldr	x8, [x25, #2840]
  407788:	sub	x19, x19, x20
  40778c:	cmp	x21, x8
  407790:	b.hi	407874 <wcrtomb@plt+0x2d84>  // b.pmore
  407794:	add	x22, x22, x20
  407798:	b.ne	407740 <wcrtomb@plt+0x2c50>  // b.any
  40779c:	ldrb	w9, [x26, #136]
  4077a0:	tbnz	w9, #0, 40773c <wcrtomb@plt+0x2c4c>
  4077a4:	bl	405398 <wcrtomb@plt+0x8a8>
  4077a8:	ldr	x21, [x24, #2904]
  4077ac:	ldr	x8, [x25, #2840]
  4077b0:	cmp	x21, x8
  4077b4:	b.ne	407740 <wcrtomb@plt+0x2c50>  // b.any
  4077b8:	mov	x21, xzr
  4077bc:	strb	w27, [x26, #136]
  4077c0:	b	407740 <wcrtomb@plt+0x2c50>
  4077c4:	mov	x0, x21
  4077c8:	mov	x1, x22
  4077cc:	mov	x2, x19
  4077d0:	bl	403e80 <memcpy@plt>
  4077d4:	add	x0, x21, x19
  4077d8:	sub	x2, x20, x19
  4077dc:	mov	w1, wzr
  4077e0:	bl	404320 <memset@plt>
  4077e4:	ldr	x8, [x24, #2904]
  4077e8:	sub	x9, x19, #0x1
  4077ec:	and	x9, x9, #0xfffffffffffffe00
  4077f0:	add	x9, x21, x9
  4077f4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4077f8:	cmp	x8, x9
  4077fc:	b.hi	407810 <wcrtomb@plt+0x2d20>  // b.pmore
  407800:	add	x8, x8, #0x200
  407804:	cmp	x8, x9
  407808:	b.ls	407800 <wcrtomb@plt+0x2d10>  // b.plast
  40780c:	str	x8, [x24, #2904]
  407810:	ldr	x9, [x25, #2840]
  407814:	cmp	x8, x9
  407818:	b.hi	407874 <wcrtomb@plt+0x2d84>  // b.pmore
  40781c:	b.ne	407848 <wcrtomb@plt+0x2d58>  // b.any
  407820:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407824:	ldrb	w8, [x19, #136]
  407828:	tbnz	w8, #0, 407848 <wcrtomb@plt+0x2d58>
  40782c:	bl	405398 <wcrtomb@plt+0x8a8>
  407830:	ldr	x8, [x24, #2904]
  407834:	ldr	x9, [x25, #2840]
  407838:	cmp	x8, x9
  40783c:	b.ne	407848 <wcrtomb@plt+0x2d58>  // b.any
  407840:	mov	w8, #0x1                   	// #1
  407844:	strb	w8, [x19, #136]
  407848:	adrp	x8, 407000 <wcrtomb@plt+0x2510>
  40784c:	add	x8, x8, #0x7c
  407850:	str	x8, [x22, #216]
  407854:	add	sp, sp, #0x1c0
  407858:	ldp	x20, x19, [sp, #80]
  40785c:	ldp	x22, x21, [sp, #64]
  407860:	ldp	x24, x23, [sp, #48]
  407864:	ldp	x26, x25, [sp, #32]
  407868:	ldp	x28, x27, [sp, #16]
  40786c:	ldp	x29, x30, [sp], #96
  407870:	ret
  407874:	bl	404560 <abort@plt>
  407878:	mov	x0, x19
  40787c:	bl	4056c8 <wcrtomb@plt+0xbd8>
  407880:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407884:	ldr	x8, [x8, #4000]
  407888:	cbz	x8, 407890 <wcrtomb@plt+0x2da0>
  40788c:	blr	x8
  407890:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407894:	add	x1, x1, #0x23b
  407898:	mov	w2, #0x5                   	// #5
  40789c:	mov	x0, xzr
  4078a0:	bl	4048b0 <dcgettext@plt>
  4078a4:	mov	x2, x0
  4078a8:	mov	w0, wzr
  4078ac:	mov	w1, wzr
  4078b0:	bl	403f60 <error@plt>
  4078b4:	bl	40eb40 <wcrtomb@plt+0xa050>
  4078b8:	stp	x29, x30, [sp, #-32]!
  4078bc:	mov	w0, wzr
  4078c0:	stp	x20, x19, [sp, #16]
  4078c4:	mov	x29, sp
  4078c8:	bl	408e40 <wcrtomb@plt+0x4350>
  4078cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4078d0:	ldrb	w9, [x8, #2888]
  4078d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4078d8:	add	x8, x8, #0x98
  4078dc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4078e0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4078e4:	str	wzr, [x8]
  4078e8:	cbz	w9, 407910 <wcrtomb@plt+0x2e20>
  4078ec:	ldr	x8, [x8, #56]
  4078f0:	cbz	x8, 407910 <wcrtomb@plt+0x2e20>
  4078f4:	mov	w8, #0x1                   	// #1
  4078f8:	str	w8, [x19, #3968]
  4078fc:	bl	4233d0 <wcrtomb@plt+0x1e8e0>
  407900:	ldr	x8, [x20, #3912]
  407904:	str	wzr, [x19, #3968]
  407908:	cmp	x0, x8
  40790c:	b.ne	407998 <wcrtomb@plt+0x2ea8>  // b.any
  407910:	ldr	w0, [x19, #3968]
  407914:	mov	w8, #0x40000000            	// #1073741824
  407918:	cmp	w0, w8
  40791c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407920:	b.lt	407948 <wcrtomb@plt+0x2e58>  // b.tstop
  407924:	ldr	x1, [x8, #2880]
  407928:	ldr	x2, [x20, #3912]
  40792c:	mov	w8, #0xc0000000            	// #-1073741824
  407930:	add	w0, w0, w8
  407934:	bl	42e42c <wcrtomb@plt+0x2993c>
  407938:	ldr	x8, [x20, #3912]
  40793c:	cmp	x0, x8
  407940:	b.ne	407960 <wcrtomb@plt+0x2e70>  // b.any
  407944:	b	407970 <wcrtomb@plt+0x2e80>
  407948:	ldr	x1, [x8, #2880]
  40794c:	ldr	x2, [x20, #3912]
  407950:	bl	44932c <argp_parse@@Base+0xec80>
  407954:	ldr	x8, [x20, #3912]
  407958:	cmp	x0, x8
  40795c:	b.eq	407970 <wcrtomb@plt+0x2e80>  // b.none
  407960:	cmn	x0, #0x1
  407964:	b.ne	40798c <wcrtomb@plt+0x2e9c>  // b.any
  407968:	bl	405790 <wcrtomb@plt+0xca0>
  40796c:	b	407910 <wcrtomb@plt+0x2e20>
  407970:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407974:	ldr	x9, [x8, #2832]
  407978:	add	x9, x9, #0x1
  40797c:	str	x9, [x8, #2832]
  407980:	ldp	x20, x19, [sp, #16]
  407984:	ldp	x29, x30, [sp], #32
  407988:	ret
  40798c:	ldp	x20, x19, [sp, #16]
  407990:	ldp	x29, x30, [sp], #32
  407994:	b	40799c <wcrtomb@plt+0x2eac>
  407998:	bl	4056c8 <wcrtomb@plt+0xbd8>
  40799c:	sub	sp, sp, #0xe0
  4079a0:	stp	x24, x23, [sp, #176]
  4079a4:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4079a8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4079ac:	ldr	x8, [x23, #2880]
  4079b0:	ldr	x9, [x24, #3912]
  4079b4:	stp	x26, x25, [sp, #160]
  4079b8:	stp	x22, x21, [sp, #192]
  4079bc:	stp	x20, x19, [sp, #208]
  4079c0:	mov	x21, x0
  4079c4:	add	x20, x8, x0
  4079c8:	subs	x19, x9, x0
  4079cc:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4079d0:	stp	x29, x30, [sp, #128]
  4079d4:	str	x27, [sp, #144]
  4079d8:	add	x29, sp, #0x80
  4079dc:	b.eq	407a88 <wcrtomb@plt+0x2f98>  // b.none
  4079e0:	and	x8, x19, #0x1ff
  4079e4:	cbnz	x8, 407a88 <wcrtomb@plt+0x2f98>
  4079e8:	cbz	x21, 407a88 <wcrtomb@plt+0x2f98>
  4079ec:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4079f0:	ldr	w8, [x8, #3712]
  4079f4:	tbz	w8, #22, 407a88 <wcrtomb@plt+0x2f98>
  4079f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4079fc:	ldr	x8, [x8, #208]
  407a00:	cbnz	x8, 407a88 <wcrtomb@plt+0x2f98>
  407a04:	ldr	w1, [x25, #3968]
  407a08:	mov	x2, sp
  407a0c:	mov	w0, wzr
  407a10:	bl	404890 <__fxstat@plt>
  407a14:	cbz	w0, 407a2c <wcrtomb@plt+0x2f3c>
  407a18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407a1c:	ldr	x8, [x8, #3728]
  407a20:	ldr	x0, [x8]
  407a24:	bl	41d008 <wcrtomb@plt+0x18518>
  407a28:	b	407a88 <wcrtomb@plt+0x2f98>
  407a2c:	ldr	w8, [sp, #16]
  407a30:	and	w8, w8, #0xf000
  407a34:	orr	w8, w8, #0x4000
  407a38:	cmp	w8, #0x6, lsl #12
  407a3c:	b.ne	407a88 <wcrtomb@plt+0x2f98>  // b.any
  407a40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407a44:	ldr	x8, [x8, #4000]
  407a48:	lsr	x22, x21, #9
  407a4c:	cbz	x8, 407a54 <wcrtomb@plt+0x2f64>
  407a50:	blr	x8
  407a54:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  407a58:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x14e3c>
  407a5c:	add	x1, x1, #0xf29
  407a60:	add	x2, x2, #0xf41
  407a64:	mov	w4, #0x5                   	// #5
  407a68:	mov	x0, xzr
  407a6c:	mov	x3, x22
  407a70:	bl	4047d0 <dcngettext@plt>
  407a74:	mov	x2, x0
  407a78:	mov	w0, wzr
  407a7c:	mov	w1, wzr
  407a80:	mov	x3, x22
  407a84:	bl	403f60 <error@plt>
  407a88:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407a8c:	mov	w26, #0x40000000            	// #1073741824
  407a90:	mov	w27, #0xc0000000            	// #-1073741824
  407a94:	tst	x19, #0x1ff
  407a98:	b.eq	407b14 <wcrtomb@plt+0x3024>  // b.none
  407a9c:	cbz	x21, 407b24 <wcrtomb@plt+0x3034>
  407aa0:	ldr	w0, [x25, #3968]
  407aa4:	cmp	w0, w26
  407aa8:	b.lt	407acc <wcrtomb@plt+0x2fdc>  // b.tstop
  407aac:	add	w0, w0, w27
  407ab0:	mov	x1, x20
  407ab4:	mov	x2, x19
  407ab8:	bl	42e42c <wcrtomb@plt+0x2993c>
  407abc:	mov	x21, x0
  407ac0:	cmn	x0, #0x1
  407ac4:	b.eq	407ae4 <wcrtomb@plt+0x2ff4>  // b.none
  407ac8:	b	407af8 <wcrtomb@plt+0x3008>
  407acc:	mov	x1, x20
  407ad0:	mov	x2, x19
  407ad4:	bl	44932c <argp_parse@@Base+0xec80>
  407ad8:	mov	x21, x0
  407adc:	cmn	x0, #0x1
  407ae0:	b.ne	407af8 <wcrtomb@plt+0x3008>  // b.any
  407ae4:	bl	405790 <wcrtomb@plt+0xca0>
  407ae8:	ldr	w0, [x25, #3968]
  407aec:	cmp	w0, w26
  407af0:	b.ge	407aac <wcrtomb@plt+0x2fbc>  // b.tcont
  407af4:	b	407acc <wcrtomb@plt+0x2fdc>
  407af8:	cbz	x21, 407b24 <wcrtomb@plt+0x3034>
  407afc:	ldrb	w8, [x22, #140]
  407b00:	cbz	w8, 407b70 <wcrtomb@plt+0x3080>
  407b04:	sub	x19, x19, x21
  407b08:	add	x20, x20, x21
  407b0c:	tst	x19, #0x1ff
  407b10:	b.ne	407a9c <wcrtomb@plt+0x2fac>  // b.any
  407b14:	cbz	x19, 407b24 <wcrtomb@plt+0x3034>
  407b18:	cbz	x21, 407b24 <wcrtomb@plt+0x3034>
  407b1c:	ldrb	w8, [x22, #140]
  407b20:	cbnz	w8, 407aa0 <wcrtomb@plt+0x2fb0>
  407b24:	ldr	x9, [x24, #3912]
  407b28:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407b2c:	ldr	x8, [x23, #2880]
  407b30:	ldr	x11, [x10, #2832]
  407b34:	sub	x9, x9, x19
  407b38:	ldp	x20, x19, [sp, #208]
  407b3c:	ldp	x22, x21, [sp, #192]
  407b40:	ldp	x24, x23, [sp, #176]
  407b44:	ldp	x26, x25, [sp, #160]
  407b48:	ldr	x27, [sp, #144]
  407b4c:	ldp	x29, x30, [sp, #128]
  407b50:	and	x9, x9, #0xfffffffffffffe00
  407b54:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407b58:	add	x11, x11, #0x1
  407b5c:	add	x8, x8, x9
  407b60:	str	x8, [x12, #2840]
  407b64:	str	x11, [x10, #2832]
  407b68:	add	sp, sp, #0xe0
  407b6c:	ret
  407b70:	ldr	x9, [x24, #3912]
  407b74:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407b78:	ldr	x8, [x8, #4000]
  407b7c:	sub	x19, x9, x19
  407b80:	cbz	x8, 407b88 <wcrtomb@plt+0x3098>
  407b84:	blr	x8
  407b88:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  407b8c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x14e3c>
  407b90:	add	x1, x1, #0xf5a
  407b94:	add	x2, x2, #0xf80
  407b98:	mov	w4, #0x5                   	// #5
  407b9c:	mov	x0, xzr
  407ba0:	mov	x3, x19
  407ba4:	bl	4047d0 <dcngettext@plt>
  407ba8:	mov	x2, x0
  407bac:	mov	w0, wzr
  407bb0:	mov	w1, wzr
  407bb4:	mov	x3, x19
  407bb8:	bl	403f60 <error@plt>
  407bbc:	bl	40eb40 <wcrtomb@plt+0xa050>
  407bc0:	sub	sp, sp, #0xf0
  407bc4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407bc8:	ldr	x8, [x8, #232]
  407bcc:	stp	x24, x23, [sp, #192]
  407bd0:	stp	x20, x19, [sp, #224]
  407bd4:	mov	w19, w0
  407bd8:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407bdc:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407be0:	stp	x29, x30, [sp, #144]
  407be4:	stp	x28, x27, [sp, #160]
  407be8:	stp	x26, x25, [sp, #176]
  407bec:	stp	x22, x21, [sp, #208]
  407bf0:	add	x29, sp, #0x90
  407bf4:	cbnz	x8, 407c30 <wcrtomb@plt+0x3140>
  407bf8:	ldr	x8, [x23, #3760]
  407bfc:	cbnz	x8, 407c30 <wcrtomb@plt+0x3140>
  407c00:	ldr	w8, [x24, #3968]
  407c04:	cbz	w8, 407c14 <wcrtomb@plt+0x3124>
  407c08:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c0c:	ldr	x0, [x8, #104]
  407c10:	b	407c28 <wcrtomb@plt+0x3138>
  407c14:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407c18:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  407c1c:	add	x0, x0, #0x8c
  407c20:	add	x1, x1, #0xedb
  407c24:	bl	4041e0 <fopen@plt>
  407c28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c2c:	str	x0, [x8, #232]
  407c30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c34:	ldrb	w8, [x8, #2920]
  407c38:	cbz	w8, 407c44 <wcrtomb@plt+0x3154>
  407c3c:	mov	w0, wzr
  407c40:	b	408240 <wcrtomb@plt+0x3750>
  407c44:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c48:	ldrb	w8, [x25, #3834]
  407c4c:	cbz	w8, 407c54 <wcrtomb@plt+0x3164>
  407c50:	bl	40a02c <wcrtomb@plt+0x553c>
  407c54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c58:	add	x0, x0, #0xb30
  407c5c:	mov	x1, xzr
  407c60:	bl	41b60c <wcrtomb@plt+0x16b1c>
  407c64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c68:	add	x0, x0, #0xb38
  407c6c:	mov	x1, xzr
  407c70:	bl	41b60c <wcrtomb@plt+0x16b1c>
  407c74:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c78:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c7c:	ldr	w0, [x24, #3968]
  407c80:	str	xzr, [x8, #2912]
  407c84:	ldr	x8, [x10, #2880]
  407c88:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c8c:	mov	w10, #0x40000000            	// #1073741824
  407c90:	str	xzr, [x9, #2896]
  407c94:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407c98:	cmp	w0, w10
  407c9c:	str	x8, [x9, #2904]
  407ca0:	b.lt	407cbc <wcrtomb@plt+0x31cc>  // b.tstop
  407ca4:	mov	w8, #0xc0000000            	// #-1073741824
  407ca8:	add	w0, w0, w8
  407cac:	bl	42e314 <wcrtomb@plt+0x29824>
  407cb0:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407cb4:	cbnz	w0, 407cc8 <wcrtomb@plt+0x31d8>
  407cb8:	b	407cd4 <wcrtomb@plt+0x31e4>
  407cbc:	bl	4044d0 <close@plt>
  407cc0:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407cc4:	cbz	w0, 407cd4 <wcrtomb@plt+0x31e4>
  407cc8:	ldr	x8, [x26, #3728]
  407ccc:	ldr	x0, [x8]
  407cd0:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  407cd4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407cd8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407cdc:	ldr	x9, [x26, #3728]
  407ce0:	ldr	x8, [x8, #3680]
  407ce4:	ldr	x10, [x10, #3840]
  407ce8:	str	w19, [sp, #4]
  407cec:	add	x9, x9, #0x8
  407cf0:	str	x9, [x26, #3728]
  407cf4:	add	x10, x8, x10, lsl #3
  407cf8:	cmp	x9, x10
  407cfc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407d00:	b.eq	407d10 <wcrtomb@plt+0x3220>  // b.none
  407d04:	ldrb	w8, [x9, #144]
  407d08:	tbnz	w8, #0, 407d1c <wcrtomb@plt+0x322c>
  407d0c:	b	407ff4 <wcrtomb@plt+0x3504>
  407d10:	str	x8, [x26, #3728]
  407d14:	mov	w8, #0x1                   	// #1
  407d18:	strb	w8, [x9, #144]
  407d1c:	ldr	x8, [x23, #3760]
  407d20:	adrp	x27, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  407d24:	cbz	x8, 407d98 <wcrtomb@plt+0x32a8>
  407d28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407d2c:	ldr	x8, [x8, #3656]
  407d30:	cbz	x8, 407d38 <wcrtomb@plt+0x3248>
  407d34:	bl	405bd0 <wcrtomb@plt+0x10e0>
  407d38:	ldr	w8, [x27, #1624]
  407d3c:	ldr	x0, [x26, #3728]
  407d40:	add	w1, w8, #0x1
  407d44:	bl	424448 <wcrtomb@plt+0x1f958>
  407d48:	cbz	w0, 407ff4 <wcrtomb@plt+0x3504>
  407d4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407d50:	ldr	x8, [x8, #4000]
  407d54:	cbz	x8, 407d5c <wcrtomb@plt+0x326c>
  407d58:	blr	x8
  407d5c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407d60:	add	x1, x1, #0x95
  407d64:	mov	w2, #0x5                   	// #5
  407d68:	mov	x0, xzr
  407d6c:	bl	4048b0 <dcgettext@plt>
  407d70:	ldr	x8, [x23, #3760]
  407d74:	mov	x19, x0
  407d78:	mov	x0, x8
  407d7c:	bl	449144 <argp_parse@@Base+0xea98>
  407d80:	mov	x3, x0
  407d84:	mov	w0, wzr
  407d88:	mov	w1, wzr
  407d8c:	mov	x2, x19
  407d90:	bl	403f60 <error@plt>
  407d94:	bl	40eb40 <wcrtomb@plt+0xa050>
  407d98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407d9c:	ldr	x20, [x8, #232]
  407da0:	mov	x19, x25
  407da4:	mov	x21, x24
  407da8:	mov	x24, x23
  407dac:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407db0:	stp	xzr, xzr, [sp, #8]
  407db4:	ldr	x0, [x25, #88]
  407db8:	ldp	x8, x9, [x0, #40]
  407dbc:	cmp	x8, x9
  407dc0:	b.cs	407fc0 <wcrtomb@plt+0x34d0>  // b.hs, b.nlast
  407dc4:	add	x9, x8, #0x1
  407dc8:	str	x9, [x0, #40]
  407dcc:	mov	w9, #0x7                   	// #7
  407dd0:	strb	w9, [x8]
  407dd4:	ldr	x28, [x25, #88]
  407dd8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407ddc:	mov	w2, #0x5                   	// #5
  407de0:	mov	x0, xzr
  407de4:	add	x1, x1, #0xa7
  407de8:	bl	4048b0 <dcgettext@plt>
  407dec:	ldr	x8, [x26, #3728]
  407df0:	mov	x23, x0
  407df4:	ldr	w9, [x27, #1624]
  407df8:	ldr	x0, [x8]
  407dfc:	add	w22, w9, #0x1
  407e00:	bl	449144 <argp_parse@@Base+0xea98>
  407e04:	mov	x4, x0
  407e08:	mov	w1, #0x1                   	// #1
  407e0c:	mov	x0, x28
  407e10:	mov	x2, x23
  407e14:	mov	w3, w22
  407e18:	bl	404600 <__fprintf_chk@plt>
  407e1c:	ldr	x0, [x25, #88]
  407e20:	bl	4047b0 <fflush_unlocked@plt>
  407e24:	add	x0, sp, #0x10
  407e28:	add	x1, sp, #0x8
  407e2c:	mov	w2, #0xa                   	// #10
  407e30:	mov	x3, x20
  407e34:	bl	404a20 <__getdelim@plt>
  407e38:	cmp	x0, #0x0
  407e3c:	b.le	408298 <wcrtomb@plt+0x37a8>
  407e40:	ldr	x8, [sp, #16]
  407e44:	ldrb	w9, [x8]
  407e48:	cmp	w9, #0x58
  407e4c:	b.le	407ef4 <wcrtomb@plt+0x3404>
  407e50:	sub	w9, w9, #0x59
  407e54:	cmp	w9, #0x20
  407e58:	b.hi	407f8c <wcrtomb@plt+0x349c>  // b.pmore
  407e5c:	adrp	x12, 460000 <_obstack_memory_used@@Base+0x14e3c>
  407e60:	add	x12, x12, #0xb68
  407e64:	adr	x10, 407e74 <wcrtomb@plt+0x3384>
  407e68:	ldrh	w11, [x12, x9, lsl #1]
  407e6c:	add	x10, x10, x11, lsl #2
  407e70:	br	x10
  407e74:	add	x0, x8, #0x1
  407e78:	add	x8, x8, #0x2
  407e7c:	b	407e88 <wcrtomb@plt+0x3398>
  407e80:	add	x0, x0, #0x1
  407e84:	add	x8, x8, #0x1
  407e88:	ldrb	w9, [x0]
  407e8c:	cmp	w9, #0x20
  407e90:	b.eq	407e80 <wcrtomb@plt+0x3390>  // b.none
  407e94:	cmp	w9, #0x9
  407e98:	b.eq	407e80 <wcrtomb@plt+0x3390>  // b.none
  407e9c:	b	407ea4 <wcrtomb@plt+0x33b4>
  407ea0:	ldrb	w9, [x8], #1
  407ea4:	ands	w9, w9, #0xff
  407ea8:	b.eq	407eb4 <wcrtomb@plt+0x33c4>  // b.none
  407eac:	cmp	w9, #0xa
  407eb0:	b.ne	407ea0 <wcrtomb@plt+0x33b0>  // b.any
  407eb4:	sturb	wzr, [x8, #-1]
  407eb8:	ldrb	w8, [x0]
  407ebc:	cbnz	w8, 407fcc <wcrtomb@plt+0x34dc>
  407ec0:	ldr	x22, [x25, #88]
  407ec4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407ec8:	mov	w2, #0x5                   	// #5
  407ecc:	mov	x0, xzr
  407ed0:	add	x1, x1, #0x1f5
  407ed4:	bl	4048b0 <dcgettext@plt>
  407ed8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  407edc:	mov	x3, x0
  407ee0:	mov	w1, #0x1                   	// #1
  407ee4:	mov	x0, x22
  407ee8:	add	x2, x2, #0x274
  407eec:	bl	404600 <__fprintf_chk@plt>
  407ef0:	b	407db4 <wcrtomb@plt+0x32c4>
  407ef4:	cmp	w9, #0xa
  407ef8:	b.eq	407fdc <wcrtomb@plt+0x34ec>  // b.none
  407efc:	cmp	w9, #0x21
  407f00:	b.eq	407f80 <wcrtomb@plt+0x3490>  // b.none
  407f04:	cmp	w9, #0x3f
  407f08:	b.ne	407f8c <wcrtomb@plt+0x349c>  // b.any
  407f0c:	ldr	x22, [x25, #88]
  407f10:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407f14:	mov	w2, #0x5                   	// #5
  407f18:	mov	x0, xzr
  407f1c:	add	x1, x1, #0x113
  407f20:	bl	4048b0 <dcgettext@plt>
  407f24:	mov	x2, x0
  407f28:	mov	w1, #0x1                   	// #1
  407f2c:	mov	x0, x22
  407f30:	bl	404600 <__fprintf_chk@plt>
  407f34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407f38:	ldrb	w8, [x8, #3768]
  407f3c:	cbnz	w8, 407f68 <wcrtomb@plt+0x3478>
  407f40:	ldr	x22, [x25, #88]
  407f44:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407f48:	mov	w2, #0x5                   	// #5
  407f4c:	mov	x0, xzr
  407f50:	add	x1, x1, #0x19b
  407f54:	bl	4048b0 <dcgettext@plt>
  407f58:	mov	x2, x0
  407f5c:	mov	w1, #0x1                   	// #1
  407f60:	mov	x0, x22
  407f64:	bl	404600 <__fprintf_chk@plt>
  407f68:	ldr	x22, [x25, #88]
  407f6c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407f70:	mov	w2, #0x5                   	// #5
  407f74:	mov	x0, xzr
  407f78:	add	x1, x1, #0x1bc
  407f7c:	b	407fa0 <wcrtomb@plt+0x34b0>
  407f80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  407f84:	ldrb	w8, [x8, #3768]
  407f88:	cbz	w8, 407fb8 <wcrtomb@plt+0x34c8>
  407f8c:	ldr	x22, [x25, #88]
  407f90:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  407f94:	mov	w2, #0x5                   	// #5
  407f98:	mov	x0, xzr
  407f9c:	add	x1, x1, #0x21a
  407fa0:	bl	4048b0 <dcgettext@plt>
  407fa4:	mov	x2, x0
  407fa8:	mov	w1, #0x1                   	// #1
  407fac:	mov	x0, x22
  407fb0:	bl	404600 <__fprintf_chk@plt>
  407fb4:	b	407db4 <wcrtomb@plt+0x32c4>
  407fb8:	bl	42329c <wcrtomb@plt+0x1e7ac>
  407fbc:	b	407db4 <wcrtomb@plt+0x32c4>
  407fc0:	mov	w1, #0x7                   	// #7
  407fc4:	bl	404590 <__overflow@plt>
  407fc8:	b	407dd4 <wcrtomb@plt+0x32e4>
  407fcc:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  407fd0:	ldr	x8, [x26, #3728]
  407fd4:	str	x0, [x8]
  407fd8:	ldr	x8, [sp, #16]
  407fdc:	mov	x0, x8
  407fe0:	bl	4046b0 <free@plt>
  407fe4:	mov	x25, x19
  407fe8:	ldr	w19, [sp, #4]
  407fec:	mov	x23, x24
  407ff0:	mov	x24, x21
  407ff4:	ldr	x22, [x26, #3728]
  407ff8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  407ffc:	add	x1, x1, #0xb35
  408000:	ldr	x20, [x22]
  408004:	mov	x0, x20
  408008:	bl	404610 <strcmp@plt>
  40800c:	cbz	w0, 408230 <wcrtomb@plt+0x3740>
  408010:	ldrb	w8, [x25, #3834]
  408014:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408018:	cbz	w8, 40809c <wcrtomb@plt+0x35ac>
  40801c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408020:	ldrb	w8, [x8, #4008]
  408024:	cbnz	w8, 408058 <wcrtomb@plt+0x3568>
  408028:	mov	w1, #0x3a                  	// #58
  40802c:	mov	x0, x20
  408030:	bl	404750 <strchr@plt>
  408034:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408038:	str	x0, [x8, #4016]
  40803c:	ldr	x20, [x22]
  408040:	subs	x2, x0, x20
  408044:	b.ls	408058 <wcrtomb@plt+0x3568>  // b.plast
  408048:	mov	w1, #0x2f                  	// #47
  40804c:	mov	x0, x20
  408050:	bl	404840 <memchr@plt>
  408054:	cbz	x0, 408184 <wcrtomb@plt+0x3694>
  408058:	mov	w1, #0x42                  	// #66
  40805c:	mov	w2, #0x1b6                 	// #438
  408060:	mov	x0, x20
  408064:	bl	404240 <open@plt>
  408068:	str	w0, [x24, #3968]
  40806c:	tbz	w0, #31, 408140 <wcrtomb@plt+0x3650>
  408070:	ldr	x8, [x26, #3728]
  408074:	ldr	x0, [x8]
  408078:	bl	42cc94 <wcrtomb@plt+0x281a4>
  40807c:	cmp	w19, #0x1
  408080:	b.ne	407d1c <wcrtomb@plt+0x322c>  // b.any
  408084:	ldrb	w8, [x25, #3834]
  408088:	cbnz	w8, 407d1c <wcrtomb@plt+0x322c>
  40808c:	ldrb	w8, [x21, #3749]
  408090:	cbz	w8, 407d1c <wcrtomb@plt+0x322c>
  408094:	bl	41c7d0 <wcrtomb@plt+0x17ce0>
  408098:	b	407d1c <wcrtomb@plt+0x322c>
  40809c:	cmp	w19, #0x2
  4080a0:	b.eq	40801c <wcrtomb@plt+0x352c>  // b.none
  4080a4:	cmp	w19, #0x1
  4080a8:	b.eq	408148 <wcrtomb@plt+0x3658>  // b.none
  4080ac:	cbnz	w19, 408138 <wcrtomb@plt+0x3648>
  4080b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4080b4:	ldrb	w8, [x8, #4008]
  4080b8:	cbnz	w8, 4080ec <wcrtomb@plt+0x35fc>
  4080bc:	mov	w1, #0x3a                  	// #58
  4080c0:	mov	x0, x20
  4080c4:	bl	404750 <strchr@plt>
  4080c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4080cc:	str	x0, [x8, #4016]
  4080d0:	ldr	x20, [x22]
  4080d4:	subs	x2, x0, x20
  4080d8:	b.ls	4080ec <wcrtomb@plt+0x35fc>  // b.plast
  4080dc:	mov	w1, #0x2f                  	// #47
  4080e0:	mov	x0, x20
  4080e4:	bl	404840 <memchr@plt>
  4080e8:	cbz	x0, 408260 <wcrtomb@plt+0x3770>
  4080ec:	mov	w2, #0x1b6                 	// #438
  4080f0:	mov	x0, x20
  4080f4:	mov	w1, wzr
  4080f8:	bl	404240 <open@plt>
  4080fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408100:	ldr	w8, [x8, #3852]
  408104:	mov	w1, w0
  408108:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40810c:	str	w0, [x24, #3968]
  408110:	cmp	w8, #0x4
  408114:	b.ne	40811c <wcrtomb@plt+0x362c>  // b.any
  408118:	strb	wzr, [x20, #3920]
  40811c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408120:	ldr	w8, [x8, #3064]
  408124:	cmn	w8, #0x1
  408128:	b.eq	4081ec <wcrtomb@plt+0x36fc>  // b.none
  40812c:	cmp	w8, #0x0
  408130:	cset	w8, ne  // ne = any
  408134:	strb	w8, [x20, #3920]
  408138:	ldr	w0, [x24, #3968]
  40813c:	tbnz	w0, #31, 408070 <wcrtomb@plt+0x3580>
  408140:	mov	w0, #0x1                   	// #1
  408144:	b	408240 <wcrtomb@plt+0x3750>
  408148:	ldrb	w8, [x21, #3749]
  40814c:	cbz	w8, 40815c <wcrtomb@plt+0x366c>
  408150:	mov	w1, #0x1                   	// #1
  408154:	mov	x0, x20
  408158:	bl	41c568 <wcrtomb@plt+0x17a78>
  40815c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408160:	ldrb	w8, [x8, #4008]
  408164:	ldr	x22, [x26, #3728]
  408168:	cbz	w8, 4081a8 <wcrtomb@plt+0x36b8>
  40816c:	ldr	x0, [x22]
  408170:	mov	w1, #0x1b6                 	// #438
  408174:	bl	404a80 <creat@plt>
  408178:	str	w0, [x24, #3968]
  40817c:	tbnz	w0, #31, 408070 <wcrtomb@plt+0x3580>
  408180:	b	408140 <wcrtomb@plt+0x3650>
  408184:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408188:	ldr	x3, [x8, #3800]
  40818c:	mov	w1, #0x42                  	// #66
  408190:	mov	w2, #0x40000000            	// #1073741824
  408194:	mov	x0, x20
  408198:	bl	42dc2c <wcrtomb@plt+0x2913c>
  40819c:	str	w0, [x24, #3968]
  4081a0:	tbnz	w0, #31, 408070 <wcrtomb@plt+0x3580>
  4081a4:	b	408140 <wcrtomb@plt+0x3650>
  4081a8:	ldr	x0, [x22]
  4081ac:	mov	w1, #0x3a                  	// #58
  4081b0:	bl	404750 <strchr@plt>
  4081b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4081b8:	str	x0, [x8, #4016]
  4081bc:	cbz	x0, 40816c <wcrtomb@plt+0x367c>
  4081c0:	ldr	x20, [x22]
  4081c4:	subs	x2, x0, x20
  4081c8:	b.ls	40816c <wcrtomb@plt+0x367c>  // b.plast
  4081cc:	mov	w1, #0x2f                  	// #47
  4081d0:	mov	x0, x20
  4081d4:	bl	404840 <memchr@plt>
  4081d8:	cbnz	x0, 40816c <wcrtomb@plt+0x367c>
  4081dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4081e0:	ldr	x3, [x8, #3800]
  4081e4:	mov	w1, #0x41                  	// #65
  4081e8:	b	408190 <wcrtomb@plt+0x36a0>
  4081ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4081f0:	ldrb	w9, [x8, #3068]
  4081f4:	mov	w8, wzr
  4081f8:	cbnz	w9, 408134 <wcrtomb@plt+0x3644>
  4081fc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408200:	ldr	x9, [x9, #3896]
  408204:	cbnz	x9, 408134 <wcrtomb@plt+0x3644>
  408208:	add	x2, sp, #0x10
  40820c:	mov	w0, wzr
  408210:	bl	404890 <__fxstat@plt>
  408214:	mov	w8, wzr
  408218:	cbnz	w0, 408134 <wcrtomb@plt+0x3644>
  40821c:	ldr	w8, [sp, #32]
  408220:	and	w8, w8, #0xf000
  408224:	cmp	w8, #0x8, lsl #12
  408228:	cset	w8, eq  // eq = none
  40822c:	b	408134 <wcrtomb@plt+0x3644>
  408230:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408234:	mov	w0, #0x1                   	// #1
  408238:	strb	w0, [x8, #140]
  40823c:	str	wzr, [x24, #3968]
  408240:	ldp	x20, x19, [sp, #224]
  408244:	ldp	x22, x21, [sp, #208]
  408248:	ldp	x24, x23, [sp, #192]
  40824c:	ldp	x26, x25, [sp, #176]
  408250:	ldp	x28, x27, [sp, #160]
  408254:	ldp	x29, x30, [sp, #144]
  408258:	add	sp, sp, #0xf0
  40825c:	ret
  408260:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408264:	ldr	x3, [x8, #3800]
  408268:	mov	w2, #0x40000000            	// #1073741824
  40826c:	mov	x0, x20
  408270:	mov	w1, wzr
  408274:	bl	42dc2c <wcrtomb@plt+0x2913c>
  408278:	b	4080fc <wcrtomb@plt+0x360c>
  40827c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408280:	ldr	x8, [x19, #4000]
  408284:	cbz	x8, 40828c <wcrtomb@plt+0x379c>
  408288:	blr	x8
  40828c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408290:	add	x1, x1, #0x1dc
  408294:	b	4082b0 <wcrtomb@plt+0x37c0>
  408298:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40829c:	ldr	x8, [x19, #4000]
  4082a0:	cbz	x8, 4082a8 <wcrtomb@plt+0x37b8>
  4082a4:	blr	x8
  4082a8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4082ac:	add	x1, x1, #0xd2
  4082b0:	mov	w2, #0x5                   	// #5
  4082b4:	mov	x0, xzr
  4082b8:	bl	4048b0 <dcgettext@plt>
  4082bc:	mov	x2, x0
  4082c0:	mov	w0, wzr
  4082c4:	mov	w1, wzr
  4082c8:	bl	403f60 <error@plt>
  4082cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4082d0:	ldr	w8, [x8, #3852]
  4082d4:	sub	w8, w8, #0x5
  4082d8:	cmp	w8, #0x3
  4082dc:	b.cc	408310 <wcrtomb@plt+0x3820>  // b.lo, b.ul, b.last
  4082e0:	ldr	x8, [x19, #4000]
  4082e4:	cbz	x8, 4082ec <wcrtomb@plt+0x37fc>
  4082e8:	blr	x8
  4082ec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4082f0:	add	x1, x1, #0xf4
  4082f4:	mov	w2, #0x5                   	// #5
  4082f8:	mov	x0, xzr
  4082fc:	bl	4048b0 <dcgettext@plt>
  408300:	mov	x2, x0
  408304:	mov	w0, wzr
  408308:	mov	w1, wzr
  40830c:	bl	403f60 <error@plt>
  408310:	bl	40eb40 <wcrtomb@plt+0xa050>
  408314:	stp	x29, x30, [sp, #-16]!
  408318:	mov	x29, sp
  40831c:	bl	408360 <wcrtomb@plt+0x3870>
  408320:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408324:	ldr	x8, [x8, #3912]
  408328:	cmp	x0, x8
  40832c:	b.ne	40835c <wcrtomb@plt+0x386c>  // b.any
  408330:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408334:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408338:	ldr	x10, [x8, #2848]
  40833c:	ldr	d0, [x9, #200]
  408340:	scvtf	d1, x0
  408344:	add	x10, x10, #0x1
  408348:	fadd	d0, d0, d1
  40834c:	str	x10, [x8, #2848]
  408350:	str	d0, [x9, #200]
  408354:	ldp	x29, x30, [sp], #16
  408358:	ret
  40835c:	bl	4056c8 <wcrtomb@plt+0xbd8>
  408360:	stp	x29, x30, [sp, #-80]!
  408364:	mov	w0, #0x1                   	// #1
  408368:	str	x25, [sp, #16]
  40836c:	stp	x24, x23, [sp, #32]
  408370:	stp	x22, x21, [sp, #48]
  408374:	stp	x20, x19, [sp, #64]
  408378:	mov	x29, sp
  40837c:	bl	408e40 <wcrtomb@plt+0x4350>
  408380:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408384:	ldr	d0, [x8, #3624]
  408388:	fcmp	d0, #0.0
  40838c:	b.eq	4083b4 <wcrtomb@plt+0x38c4>  // b.none
  408390:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408394:	ldr	d1, [x8, #200]
  408398:	fcmp	d0, d1
  40839c:	b.hi	4083b4 <wcrtomb@plt+0x38c4>  // b.pmore
  4083a0:	bl	4049c0 <__errno_location@plt>
  4083a4:	mov	w8, #0x1c                  	// #28
  4083a8:	mov	x19, xzr
  4083ac:	str	w8, [x0]
  4083b0:	b	4084a8 <wcrtomb@plt+0x39b8>
  4083b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4083b8:	ldrb	w8, [x8, #3528]
  4083bc:	cbz	w8, 4083d0 <wcrtomb@plt+0x38e0>
  4083c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4083c4:	ldr	x19, [x8, #3912]
  4083c8:	cbnz	x19, 4083dc <wcrtomb@plt+0x38ec>
  4083cc:	b	4084a8 <wcrtomb@plt+0x39b8>
  4083d0:	bl	4233d0 <wcrtomb@plt+0x1e8e0>
  4083d4:	mov	x19, x0
  4083d8:	cbz	x19, 4084a8 <wcrtomb@plt+0x39b8>
  4083dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4083e0:	ldrb	w8, [x8, #3068]
  4083e4:	cbz	w8, 4084a8 <wcrtomb@plt+0x39b8>
  4083e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4083ec:	ldrb	w8, [x8, #148]
  4083f0:	tbnz	w8, #0, 4084a8 <wcrtomb@plt+0x39b8>
  4083f4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4083f8:	ldr	x22, [x21, #176]
  4083fc:	mov	x9, x22
  408400:	cbz	x9, 4084a8 <wcrtomb@plt+0x39b8>
  408404:	mov	x8, x9
  408408:	ldr	x9, [x9]
  40840c:	cbz	x9, 40841c <wcrtomb@plt+0x392c>
  408410:	ldr	x10, [x9, #8]
  408414:	cmp	x19, x10, lsl #9
  408418:	b.cs	408400 <wcrtomb@plt+0x3910>  // b.hs, b.nlast
  40841c:	ldr	x24, [x8, #8]
  408420:	ldp	x11, x10, [x8, #32]
  408424:	sub	x12, x19, x24, lsl #9
  408428:	add	x10, x10, x12, lsr #9
  40842c:	subs	x11, x11, x12
  408430:	csel	x11, xzr, x11, cc  // cc = lo, ul, last
  408434:	csel	x23, x8, x9, hi  // hi = pmore
  408438:	csel	x25, xzr, x10, hi  // hi = pmore
  40843c:	cmp	x22, #0x0
  408440:	stp	x11, x10, [x8, #32]
  408444:	cset	w8, ne  // ne = any
  408448:	cbz	x22, 408478 <wcrtomb@plt+0x3988>
  40844c:	cmp	x22, x23
  408450:	b.eq	408478 <wcrtomb@plt+0x3988>  // b.none
  408454:	mov	x20, x22
  408458:	ldr	x0, [x20, #16]
  40845c:	ldr	x22, [x22]
  408460:	bl	4046b0 <free@plt>
  408464:	mov	x0, x20
  408468:	bl	4046b0 <free@plt>
  40846c:	cmp	x22, #0x0
  408470:	cset	w8, ne  // ne = any
  408474:	cbnz	x22, 40844c <wcrtomb@plt+0x395c>
  408478:	str	x22, [x21, #176]
  40847c:	tbnz	w8, #0, 408488 <wcrtomb@plt+0x3998>
  408480:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408484:	str	xzr, [x8, #168]
  408488:	cbz	x23, 4084a8 <wcrtomb@plt+0x39b8>
  40848c:	add	x8, x24, x25
  408490:	ldr	x9, [x23, #8]
  408494:	str	xzr, [x23, #40]
  408498:	sub	x9, x9, x8
  40849c:	str	x9, [x23, #8]
  4084a0:	ldr	x23, [x23]
  4084a4:	cbnz	x23, 408490 <wcrtomb@plt+0x39a0>
  4084a8:	mov	x0, x19
  4084ac:	ldp	x20, x19, [sp, #64]
  4084b0:	ldp	x22, x21, [sp, #48]
  4084b4:	ldp	x24, x23, [sp, #32]
  4084b8:	ldr	x25, [sp, #16]
  4084bc:	ldp	x29, x30, [sp], #80
  4084c0:	ret
  4084c4:	stp	x29, x30, [sp, #-64]!
  4084c8:	stp	x22, x21, [sp, #32]
  4084cc:	stp	x20, x19, [sp, #48]
  4084d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4084d4:	ldr	w8, [x8, #3808]
  4084d8:	mov	x20, x0
  4084dc:	str	x23, [sp, #16]
  4084e0:	mov	x29, sp
  4084e4:	cmp	w8, #0x4
  4084e8:	b.ne	408514 <wcrtomb@plt+0x3a24>  // b.any
  4084ec:	mov	x2, x20
  4084f0:	ldp	x20, x19, [sp, #48]
  4084f4:	ldp	x22, x21, [sp, #32]
  4084f8:	ldr	x23, [sp, #16]
  4084fc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408500:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408504:	add	x0, x0, #0x288
  408508:	add	x1, x1, #0x110
  40850c:	ldp	x29, x30, [sp], #64
  408510:	b	41321c <wcrtomb@plt+0xe72c>
  408514:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408518:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40851c:	ldr	x19, [x22, #2904]
  408520:	ldr	x8, [x21, #2840]
  408524:	cmp	x19, x8
  408528:	b.ne	408560 <wcrtomb@plt+0x3a70>  // b.any
  40852c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408530:	ldrb	w8, [x23, #136]
  408534:	tbz	w8, #0, 408540 <wcrtomb@plt+0x3a50>
  408538:	mov	x19, xzr
  40853c:	b	408560 <wcrtomb@plt+0x3a70>
  408540:	bl	405398 <wcrtomb@plt+0x8a8>
  408544:	ldr	x19, [x22, #2904]
  408548:	ldr	x8, [x21, #2840]
  40854c:	cmp	x19, x8
  408550:	b.ne	408560 <wcrtomb@plt+0x3a70>  // b.any
  408554:	mov	x19, xzr
  408558:	mov	w8, #0x1                   	// #1
  40855c:	strb	w8, [x23, #136]
  408560:	movi	v0.2d, #0x0
  408564:	mov	x0, x19
  408568:	mov	x1, x20
  40856c:	stp	q0, q0, [x19, #480]
  408570:	stp	q0, q0, [x19, #448]
  408574:	stp	q0, q0, [x19, #416]
  408578:	stp	q0, q0, [x19, #384]
  40857c:	stp	q0, q0, [x19, #352]
  408580:	stp	q0, q0, [x19, #320]
  408584:	stp	q0, q0, [x19, #288]
  408588:	stp	q0, q0, [x19, #256]
  40858c:	stp	q0, q0, [x19, #224]
  408590:	stp	q0, q0, [x19, #192]
  408594:	stp	q0, q0, [x19, #160]
  408598:	stp	q0, q0, [x19, #128]
  40859c:	stp	q0, q0, [x19, #96]
  4085a0:	stp	q0, q0, [x19, #64]
  4085a4:	stp	q0, q0, [x19, #32]
  4085a8:	stp	q0, q0, [x19]
  4085ac:	bl	4047f0 <strcpy@plt>
  4085b0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4085b4:	add	x20, x20, #0xc10
  4085b8:	add	x0, x20, #0x8
  4085bc:	mov	x1, x19
  4085c0:	bl	41b60c <wcrtomb@plt+0x16b1c>
  4085c4:	ldr	x0, [x20, #8]
  4085c8:	bl	43c1a0 <argp_parse@@Base+0x1af4>
  4085cc:	and	w8, w0, #0x1
  4085d0:	mov	w9, #0x56                  	// #86
  4085d4:	strb	w8, [x20, #16]
  4085d8:	strb	w9, [x19, #156]
  4085dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4085e0:	ldr	x0, [x8, #3704]
  4085e4:	add	x1, x19, #0x88
  4085e8:	mov	w2, #0xc                   	// #12
  4085ec:	bl	40ad48 <wcrtomb@plt+0x6258>
  4085f0:	mov	x2, #0xffffffffffffffff    	// #-1
  4085f4:	mov	x0, x20
  4085f8:	mov	x1, x19
  4085fc:	bl	40bc00 <wcrtomb@plt+0x7110>
  408600:	ldr	x8, [x22, #2904]
  408604:	cmp	x8, x19
  408608:	b.hi	40861c <wcrtomb@plt+0x3b2c>  // b.pmore
  40860c:	add	x8, x8, #0x200
  408610:	cmp	x8, x19
  408614:	b.ls	40860c <wcrtomb@plt+0x3b1c>  // b.plast
  408618:	str	x8, [x22, #2904]
  40861c:	ldr	x9, [x21, #2840]
  408620:	cmp	x8, x9
  408624:	b.hi	40863c <wcrtomb@plt+0x3b4c>  // b.pmore
  408628:	ldp	x20, x19, [sp, #48]
  40862c:	ldp	x22, x21, [sp, #32]
  408630:	ldr	x23, [sp, #16]
  408634:	ldp	x29, x30, [sp], #64
  408638:	ret
  40863c:	bl	404560 <abort@plt>
  408640:	stp	x29, x30, [sp, #-80]!
  408644:	str	x25, [sp, #16]
  408648:	stp	x22, x21, [sp, #48]
  40864c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408650:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408654:	stp	x20, x19, [sp, #64]
  408658:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40865c:	ldr	x9, [x21, #2880]
  408660:	ldr	x8, [x25, #2904]
  408664:	ldrb	w22, [x20, #140]
  408668:	mov	x29, sp
  40866c:	cmp	x0, #0x0
  408670:	add	x10, x29, #0x1c
  408674:	stp	x24, x23, [sp, #32]
  408678:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40867c:	mov	w11, #0x1                   	// #1
  408680:	csel	x19, x10, x0, eq  // eq = none
  408684:	cmp	x8, x9
  408688:	str	x9, [x23, #2840]
  40868c:	strb	w11, [x20, #140]
  408690:	b.ne	4086c4 <wcrtomb@plt+0x3bd4>  // b.any
  408694:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408698:	ldrb	w9, [x24, #136]
  40869c:	tbnz	w9, #0, 4086bc <wcrtomb@plt+0x3bcc>
  4086a0:	bl	405398 <wcrtomb@plt+0x8a8>
  4086a4:	ldr	x8, [x25, #2904]
  4086a8:	ldr	x9, [x23, #2840]
  4086ac:	cmp	x8, x9
  4086b0:	b.ne	4086c4 <wcrtomb@plt+0x3bd4>  // b.any
  4086b4:	mov	w9, #0x1                   	// #1
  4086b8:	strb	w9, [x24, #136]
  4086bc:	mov	x9, x8
  4086c0:	mov	x8, xzr
  4086c4:	cmp	x8, #0x0
  4086c8:	cset	w8, eq  // eq = none
  4086cc:	strb	w8, [x19]
  4086d0:	ldr	x19, [x21, #2880]
  4086d4:	strb	w22, [x20, #140]
  4086d8:	cmp	x19, x9
  4086dc:	b.eq	40870c <wcrtomb@plt+0x3c1c>  // b.none
  4086e0:	add	x20, x19, #0x101
  4086e4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4086e8:	add	x1, x1, #0x2a6
  4086ec:	mov	x0, x20
  4086f0:	bl	404610 <strcmp@plt>
  4086f4:	cbz	w0, 4087dc <wcrtomb@plt+0x3cec>
  4086f8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4086fc:	add	x1, x1, #0x45a
  408700:	mov	x0, x20
  408704:	bl	404610 <strcmp@plt>
  408708:	cbz	w0, 4087dc <wcrtomb@plt+0x3cec>
  40870c:	ldrh	w8, [x19]
  408710:	mov	w9, #0x9d1f                	// #40223
  408714:	cmp	w8, w9
  408718:	b.eq	408808 <wcrtomb@plt+0x3d18>  // b.none
  40871c:	ldrh	w8, [x19]
  408720:	mov	w9, #0x8b1f                	// #35615
  408724:	cmp	w8, w9
  408728:	b.eq	408814 <wcrtomb@plt+0x3d24>  // b.none
  40872c:	ldrh	w8, [x19]
  408730:	ldrb	w9, [x19, #2]
  408734:	mov	w10, #0x5a42                	// #23106
  408738:	mov	w11, #0x68                  	// #104
  40873c:	eor	w8, w8, w10
  408740:	eor	w9, w9, w11
  408744:	orr	w8, w8, w9
  408748:	tst	w8, #0xffff
  40874c:	b.eq	408820 <wcrtomb@plt+0x3d30>  // b.none
  408750:	ldr	w8, [x19]
  408754:	mov	w9, #0x5a4c                	// #23116
  408758:	movk	w9, #0x5049, lsl #16
  40875c:	cmp	w8, w9
  408760:	b.eq	40882c <wcrtomb@plt+0x3d3c>  // b.none
  408764:	ldr	w8, [x19]
  408768:	ldrh	w9, [x19, #4]
  40876c:	mov	w10, #0x4cff                	// #19711
  408770:	movk	w10, #0x4d5a, lsl #16
  408774:	mov	w11, #0x41                  	// #65
  408778:	eor	w8, w8, w10
  40877c:	eor	w9, w9, w11
  408780:	orr	w8, w8, w9
  408784:	cbz	w8, 408838 <wcrtomb@plt+0x3d48>
  408788:	ldr	w8, [x19]
  40878c:	mov	w9, #0x4c89                	// #19593
  408790:	movk	w9, #0x4f5a, lsl #16
  408794:	cmp	w8, w9
  408798:	b.eq	408844 <wcrtomb@plt+0x3d54>  // b.none
  40879c:	ldr	w8, [x19]
  4087a0:	ldrh	w9, [x19, #4]
  4087a4:	mov	w10, #0x37fd                	// #14333
  4087a8:	movk	w10, #0x587a, lsl #16
  4087ac:	mov	w11, #0x5a                  	// #90
  4087b0:	eor	w8, w8, w10
  4087b4:	eor	w9, w9, w11
  4087b8:	orr	w8, w8, w9
  4087bc:	cbz	w8, 408850 <wcrtomb@plt+0x3d60>
  4087c0:	ldr	w8, [x19]
  4087c4:	mov	w9, #0xb528                	// #46376
  4087c8:	movk	w9, #0xfd2f, lsl #16
  4087cc:	cmp	w8, w9
  4087d0:	b.eq	40885c <wcrtomb@plt+0x3d6c>  // b.none
  4087d4:	mov	w20, wzr
  4087d8:	b	408868 <wcrtomb@plt+0x3d78>
  4087dc:	mov	w1, #0x1                   	// #1
  4087e0:	mov	x0, x19
  4087e4:	mov	w20, #0x1                   	// #1
  4087e8:	bl	419ae0 <wcrtomb@plt+0x14ff0>
  4087ec:	cmp	w0, #0x1
  4087f0:	b.eq	408868 <wcrtomb@plt+0x3d78>  // b.none
  4087f4:	ldr	x19, [x21, #2880]
  4087f8:	ldrh	w8, [x19]
  4087fc:	mov	w9, #0x9d1f                	// #40223
  408800:	cmp	w8, w9
  408804:	b.ne	40871c <wcrtomb@plt+0x3c2c>  // b.any
  408808:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  40880c:	add	x8, x8, #0xd18
  408810:	b	408864 <wcrtomb@plt+0x3d74>
  408814:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408818:	add	x8, x8, #0xd30
  40881c:	b	408864 <wcrtomb@plt+0x3d74>
  408820:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408824:	add	x8, x8, #0xd48
  408828:	b	408864 <wcrtomb@plt+0x3d74>
  40882c:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408830:	add	x8, x8, #0xd60
  408834:	b	408864 <wcrtomb@plt+0x3d74>
  408838:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  40883c:	add	x8, x8, #0xd78
  408840:	b	408864 <wcrtomb@plt+0x3d74>
  408844:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408848:	add	x8, x8, #0xd90
  40884c:	b	408864 <wcrtomb@plt+0x3d74>
  408850:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408854:	add	x8, x8, #0xda8
  408858:	b	408864 <wcrtomb@plt+0x3d74>
  40885c:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408860:	add	x8, x8, #0xdc0
  408864:	ldr	w20, [x8]
  408868:	mov	w0, w20
  40886c:	ldp	x20, x19, [sp, #64]
  408870:	ldp	x22, x21, [sp, #48]
  408874:	ldp	x24, x23, [sp, #32]
  408878:	ldr	x25, [sp, #16]
  40887c:	ldp	x29, x30, [sp], #80
  408880:	ret
  408884:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  408888:	mov	x9, xzr
  40888c:	add	x8, x8, #0xbc8
  408890:	add	x10, x9, #0x18
  408894:	cmp	x10, #0x120
  408898:	b.eq	4088b8 <wcrtomb@plt+0x3dc8>  // b.none
  40889c:	ldr	w9, [x8, x9]
  4088a0:	cmp	w9, w0
  4088a4:	mov	x9, x10
  4088a8:	b.ne	408890 <wcrtomb@plt+0x3da0>  // b.any
  4088ac:	add	x8, x8, x10
  4088b0:	ldur	x0, [x8, #-8]
  4088b4:	ret
  4088b8:	mov	x0, xzr
  4088bc:	ret
  4088c0:	stp	x29, x30, [sp, #-48]!
  4088c4:	stp	x20, x19, [sp, #32]
  4088c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4088cc:	ldr	w8, [x8, #700]
  4088d0:	mov	x19, x0
  4088d4:	str	x21, [sp, #16]
  4088d8:	mov	x29, sp
  4088dc:	cbnz	w8, 4088f8 <wcrtomb@plt+0x3e08>
  4088e0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4088e4:	add	x20, x20, #0x2bc
  4088e8:	add	x0, x20, #0x34
  4088ec:	bl	4042a0 <sigemptyset@plt>
  4088f0:	mov	w8, #0x1                   	// #1
  4088f4:	str	w8, [x20]
  4088f8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4088fc:	add	x1, x1, #0xfda
  408900:	mov	x0, x19
  408904:	bl	404610 <strcmp@plt>
  408908:	cbz	w0, 408a2c <wcrtomb@plt+0x3f3c>
  40890c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408910:	add	x1, x1, #0x4ed
  408914:	mov	x0, x19
  408918:	bl	404610 <strcmp@plt>
  40891c:	cbz	w0, 408a2c <wcrtomb@plt+0x3f3c>
  408920:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408924:	add	x1, x1, #0x4f1
  408928:	mov	x0, x19
  40892c:	bl	404610 <strcmp@plt>
  408930:	cbz	w0, 408a64 <wcrtomb@plt+0x3f74>
  408934:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408938:	add	x1, x1, #0x4f6
  40893c:	mov	x0, x19
  408940:	bl	404610 <strcmp@plt>
  408944:	cbz	w0, 408a80 <wcrtomb@plt+0x3f90>
  408948:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40894c:	add	x1, x1, #0x4fb
  408950:	mov	w2, #0x5                   	// #5
  408954:	mov	x0, x19
  408958:	bl	4042c0 <strncmp@plt>
  40895c:	cbz	w0, 408abc <wcrtomb@plt+0x3fcc>
  408960:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408964:	add	x1, x1, #0x501
  408968:	mov	w2, #0x5                   	// #5
  40896c:	mov	x0, x19
  408970:	mov	w21, #0x5                   	// #5
  408974:	bl	4042c0 <strncmp@plt>
  408978:	cbz	w0, 408af0 <wcrtomb@plt+0x4000>
  40897c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408980:	add	x1, x1, #0x507
  408984:	mov	w2, #0x7                   	// #7
  408988:	mov	x0, x19
  40898c:	bl	4042c0 <strncmp@plt>
  408990:	cbz	w0, 408b84 <wcrtomb@plt+0x4094>
  408994:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408998:	add	x1, x1, #0x50f
  40899c:	mov	w2, #0x6                   	// #6
  4089a0:	mov	x0, x19
  4089a4:	bl	4042c0 <strncmp@plt>
  4089a8:	cbz	w0, 408bbc <wcrtomb@plt+0x40cc>
  4089ac:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4089b0:	add	x1, x1, #0x52e
  4089b4:	mov	x0, x19
  4089b8:	bl	404610 <strcmp@plt>
  4089bc:	cbz	w0, 408c1c <wcrtomb@plt+0x412c>
  4089c0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4089c4:	add	x1, x1, #0x535
  4089c8:	mov	w2, #0x5                   	// #5
  4089cc:	mov	x0, x19
  4089d0:	bl	4042c0 <strncmp@plt>
  4089d4:	cbnz	w0, 408c38 <wcrtomb@plt+0x4148>
  4089d8:	mov	w0, #0x18                  	// #24
  4089dc:	bl	44a230 <argp_parse@@Base+0xfb84>
  4089e0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4089e4:	add	x21, x21, #0x2c8
  4089e8:	ldr	x8, [x21, #16]
  4089ec:	mov	w9, #0x7                   	// #7
  4089f0:	mov	x20, x0
  4089f4:	cmp	x8, #0x0
  4089f8:	csel	x8, x21, x8, eq  // eq = none
  4089fc:	str	x0, [x8]
  408a00:	str	x0, [x21, #16]
  408a04:	str	w9, [x0, #8]
  408a08:	add	x0, x19, #0x5
  408a0c:	bl	424a50 <wcrtomb@plt+0x1ff60>
  408a10:	mov	w1, w0
  408a14:	str	w1, [x20, #16]
  408a18:	add	x0, x21, #0x28
  408a1c:	ldp	x20, x19, [sp, #32]
  408a20:	ldr	x21, [sp, #16]
  408a24:	ldp	x29, x30, [sp], #48
  408a28:	b	404940 <sigaddset@plt>
  408a2c:	mov	w0, #0x18                  	// #24
  408a30:	bl	44a230 <argp_parse@@Base+0xfb84>
  408a34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408a38:	add	x8, x8, #0x2c8
  408a3c:	ldr	x9, [x8, #16]
  408a40:	cmp	x9, #0x0
  408a44:	csel	x9, x8, x9, eq  // eq = none
  408a48:	str	x0, [x9]
  408a4c:	str	x0, [x8, #16]
  408a50:	str	wzr, [x0, #8]
  408a54:	ldp	x20, x19, [sp, #32]
  408a58:	ldr	x21, [sp, #16]
  408a5c:	ldp	x29, x30, [sp], #48
  408a60:	ret
  408a64:	mov	w0, #0x18                  	// #24
  408a68:	bl	44a230 <argp_parse@@Base+0xfb84>
  408a6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408a70:	add	x8, x8, #0x2c8
  408a74:	ldr	x9, [x8, #16]
  408a78:	mov	w10, #0x1                   	// #1
  408a7c:	b	408a98 <wcrtomb@plt+0x3fa8>
  408a80:	mov	w0, #0x18                  	// #24
  408a84:	bl	44a230 <argp_parse@@Base+0xfb84>
  408a88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408a8c:	add	x8, x8, #0x2c8
  408a90:	ldr	x9, [x8, #16]
  408a94:	mov	w10, #0x2                   	// #2
  408a98:	cmp	x9, #0x0
  408a9c:	csel	x9, x8, x9, eq  // eq = none
  408aa0:	str	x0, [x9]
  408aa4:	str	x0, [x8, #16]
  408aa8:	str	w10, [x0, #8]
  408aac:	ldp	x20, x19, [sp, #32]
  408ab0:	ldr	x21, [sp, #16]
  408ab4:	ldp	x29, x30, [sp], #48
  408ab8:	ret
  408abc:	mov	w0, #0x18                  	// #24
  408ac0:	bl	44a230 <argp_parse@@Base+0xfb84>
  408ac4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ac8:	add	x8, x8, #0x2c8
  408acc:	ldr	x9, [x8, #16]
  408ad0:	mov	x20, x0
  408ad4:	mov	w10, #0x2                   	// #2
  408ad8:	cmp	x9, #0x0
  408adc:	csel	x9, x8, x9, eq  // eq = none
  408ae0:	str	x0, [x9]
  408ae4:	str	x0, [x8, #16]
  408ae8:	str	w10, [x0, #8]
  408aec:	b	408b1c <wcrtomb@plt+0x402c>
  408af0:	mov	w0, #0x18                  	// #24
  408af4:	bl	44a230 <argp_parse@@Base+0xfb84>
  408af8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408afc:	add	x8, x8, #0x2c8
  408b00:	ldr	x9, [x8, #16]
  408b04:	mov	x20, x0
  408b08:	cmp	x9, #0x0
  408b0c:	csel	x9, x8, x9, eq  // eq = none
  408b10:	str	x0, [x9]
  408b14:	str	x0, [x8, #16]
  408b18:	str	w21, [x0, #8]
  408b1c:	add	x0, x19, #0x5
  408b20:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  408b24:	mov	x19, x0
  408b28:	bl	403f00 <strlen@plt>
  408b2c:	ldrb	w8, [x19]
  408b30:	cmp	w8, #0x27
  408b34:	b.eq	408b40 <wcrtomb@plt+0x4050>  // b.none
  408b38:	cmp	w8, #0x22
  408b3c:	b.ne	408b68 <wcrtomb@plt+0x4078>  // b.any
  408b40:	add	x9, x0, x19
  408b44:	ldurb	w9, [x9, #-1]
  408b48:	cmp	w9, w8
  408b4c:	b.ne	408b68 <wcrtomb@plt+0x4078>  // b.any
  408b50:	sub	x21, x0, #0x2
  408b54:	add	x1, x19, #0x1
  408b58:	mov	x0, x19
  408b5c:	mov	x2, x21
  408b60:	bl	403e90 <memmove@plt>
  408b64:	strb	wzr, [x19, x21]
  408b68:	mov	x0, x19
  408b6c:	bl	41b6c0 <wcrtomb@plt+0x16bd0>
  408b70:	str	x19, [x20, #16]
  408b74:	ldp	x20, x19, [sp, #32]
  408b78:	ldr	x21, [sp, #16]
  408b7c:	ldp	x29, x30, [sp], #48
  408b80:	ret
  408b84:	mov	w0, #0x18                  	// #24
  408b88:	bl	44a230 <argp_parse@@Base+0xfb84>
  408b8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408b90:	add	x8, x8, #0x2c8
  408b94:	ldr	x9, [x8, #16]
  408b98:	mov	w10, #0x3                   	// #3
  408b9c:	mov	x20, x0
  408ba0:	cmp	x9, #0x0
  408ba4:	csel	x9, x8, x9, eq  // eq = none
  408ba8:	str	x0, [x9]
  408bac:	str	x0, [x8, #16]
  408bb0:	str	w10, [x0, #8]
  408bb4:	add	x0, x19, #0x7
  408bb8:	b	408b20 <wcrtomb@plt+0x4030>
  408bbc:	add	x0, x19, #0x6
  408bc0:	add	x1, x29, #0x18
  408bc4:	mov	w2, #0xa                   	// #10
  408bc8:	bl	403ef0 <strtoul@plt>
  408bcc:	ldr	x8, [x29, #24]
  408bd0:	ldrb	w8, [x8]
  408bd4:	cbnz	w8, 408c54 <wcrtomb@plt+0x4164>
  408bd8:	mov	x20, x0
  408bdc:	mov	w0, #0x18                  	// #24
  408be0:	bl	44a230 <argp_parse@@Base+0xfb84>
  408be4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408be8:	add	x8, x8, #0x2c8
  408bec:	ldr	x9, [x8, #16]
  408bf0:	mov	w10, #0x4                   	// #4
  408bf4:	cmp	x9, #0x0
  408bf8:	csel	x9, x8, x9, eq  // eq = none
  408bfc:	str	x0, [x9]
  408c00:	str	x0, [x8, #16]
  408c04:	str	w10, [x0, #8]
  408c08:	str	x20, [x0, #16]
  408c0c:	ldp	x20, x19, [sp, #32]
  408c10:	ldr	x21, [sp, #16]
  408c14:	ldp	x29, x30, [sp], #48
  408c18:	ret
  408c1c:	mov	w0, #0x18                  	// #24
  408c20:	bl	44a230 <argp_parse@@Base+0xfb84>
  408c24:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408c28:	add	x8, x8, #0x2c8
  408c2c:	ldr	x9, [x8, #16]
  408c30:	mov	w10, #0x6                   	// #6
  408c34:	b	408a98 <wcrtomb@plt+0x3fa8>
  408c38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408c3c:	ldr	x8, [x8, #4000]
  408c40:	cbz	x8, 408c48 <wcrtomb@plt+0x4158>
  408c44:	blr	x8
  408c48:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408c4c:	add	x1, x1, #0x53b
  408c50:	b	408c6c <wcrtomb@plt+0x417c>
  408c54:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408c58:	ldr	x8, [x8, #4000]
  408c5c:	cbz	x8, 408c64 <wcrtomb@plt+0x4174>
  408c60:	blr	x8
  408c64:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408c68:	add	x1, x1, #0x516
  408c6c:	mov	w2, #0x5                   	// #5
  408c70:	mov	x0, xzr
  408c74:	bl	4048b0 <dcgettext@plt>
  408c78:	mov	x2, x0
  408c7c:	mov	w0, wzr
  408c80:	mov	w1, wzr
  408c84:	mov	x3, x19
  408c88:	bl	403f60 <error@plt>
  408c8c:	bl	40eb40 <wcrtomb@plt+0xa050>
  408c90:	stp	x29, x30, [sp, #-32]!
  408c94:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408c98:	add	x9, x9, #0x2bc
  408c9c:	ldr	w8, [x9]
  408ca0:	stp	x20, x19, [sp, #16]
  408ca4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ca8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408cac:	mov	x29, sp
  408cb0:	cbnz	w8, 408cd4 <wcrtomb@plt+0x41e4>
  408cb4:	ldr	w10, [x20, #3848]
  408cb8:	cbz	w10, 408cd4 <wcrtomb@plt+0x41e4>
  408cbc:	ldur	x9, [x9, #12]
  408cc0:	cbnz	x9, 408cd4 <wcrtomb@plt+0x41e4>
  408cc4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408cc8:	add	x0, x0, #0x4f6
  408ccc:	bl	4088c0 <wcrtomb@plt+0x3dd0>
  408cd0:	ldr	w8, [x19, #700]
  408cd4:	cmp	w8, #0x1
  408cd8:	b.ne	408d08 <wcrtomb@plt+0x4218>  // b.any
  408cdc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ce0:	add	x1, x1, #0x2f0
  408ce4:	mov	w0, wzr
  408ce8:	mov	x2, xzr
  408cec:	bl	403fc0 <sigprocmask@plt>
  408cf0:	ldr	w8, [x20, #3848]
  408cf4:	cbnz	w8, 408d00 <wcrtomb@plt+0x4210>
  408cf8:	mov	w8, #0xa                   	// #10
  408cfc:	str	w8, [x20, #3848]
  408d00:	mov	w8, #0x2                   	// #2
  408d04:	str	w8, [x19, #700]
  408d08:	ldp	x20, x19, [sp, #16]
  408d0c:	ldp	x29, x30, [sp], #32
  408d10:	ret
  408d14:	stp	x29, x30, [sp, #-80]!
  408d18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408d1c:	stp	x22, x21, [sp, #48]
  408d20:	ldr	x21, [x8, #712]
  408d24:	str	x25, [sp, #16]
  408d28:	stp	x24, x23, [sp, #32]
  408d2c:	stp	x20, x19, [sp, #64]
  408d30:	mov	x29, sp
  408d34:	cbz	x21, 408e28 <wcrtomb@plt+0x4338>
  408d38:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408d3c:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408d40:	add	x22, x22, #0x2b8
  408d44:	add	x19, x19, #0x559
  408d48:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408d4c:	mov	w24, #0x20                  	// #32
  408d50:	mov	w25, #0xd                   	// #13
  408d54:	b	408d70 <wcrtomb@plt+0x4280>
  408d58:	mov	w1, #0xd                   	// #13
  408d5c:	bl	404590 <__overflow@plt>
  408d60:	ldr	x0, [x23, #720]
  408d64:	bl	4047b0 <fflush_unlocked@plt>
  408d68:	ldr	x21, [x21]
  408d6c:	cbz	x21, 408e28 <wcrtomb@plt+0x4338>
  408d70:	ldr	w8, [x21, #8]
  408d74:	cmp	w8, #0x3
  408d78:	b.ne	408d68 <wcrtomb@plt+0x4278>  // b.any
  408d7c:	ldr	x0, [x22, #24]
  408d80:	cbz	x0, 408d68 <wcrtomb@plt+0x4278>
  408d84:	ldrb	w8, [x22]
  408d88:	cbz	w8, 408d68 <wcrtomb@plt+0x4278>
  408d8c:	bl	404130 <fileno@plt>
  408d90:	add	x2, x29, #0x18
  408d94:	mov	w1, #0x5413                	// #21523
  408d98:	bl	404aa0 <ioctl@plt>
  408d9c:	cbz	w0, 408dcc <wcrtomb@plt+0x42dc>
  408da0:	mov	x0, x19
  408da4:	bl	4049e0 <getenv@plt>
  408da8:	cbz	x0, 408dc4 <wcrtomb@plt+0x42d4>
  408dac:	mov	w2, #0xa                   	// #10
  408db0:	mov	x1, xzr
  408db4:	bl	404670 <strtol@plt>
  408db8:	mov	x20, x0
  408dbc:	cmp	x0, #0x0
  408dc0:	b.gt	408dd4 <wcrtomb@plt+0x42e4>
  408dc4:	mov	w20, #0x50                  	// #80
  408dc8:	b	408dd4 <wcrtomb@plt+0x42e4>
  408dcc:	ldrh	w20, [x29, #26]
  408dd0:	cbz	x20, 408da0 <wcrtomb@plt+0x42b0>
  408dd4:	ldr	x0, [x23, #720]
  408dd8:	ldp	x8, x9, [x0, #40]
  408ddc:	sub	x20, x20, #0x1
  408de0:	cmp	x8, x9
  408de4:	b.cs	408dfc <wcrtomb@plt+0x430c>  // b.hs, b.nlast
  408de8:	add	x9, x8, #0x1
  408dec:	str	x9, [x0, #40]
  408df0:	strb	w24, [x8]
  408df4:	cbnz	x20, 408dd8 <wcrtomb@plt+0x42e8>
  408df8:	b	408e0c <wcrtomb@plt+0x431c>
  408dfc:	mov	w1, #0x20                  	// #32
  408e00:	bl	404590 <__overflow@plt>
  408e04:	ldr	x0, [x23, #720]
  408e08:	cbnz	x20, 408dd8 <wcrtomb@plt+0x42e8>
  408e0c:	ldp	x8, x9, [x0, #40]
  408e10:	cmp	x8, x9
  408e14:	b.cs	408d58 <wcrtomb@plt+0x4268>  // b.hs, b.nlast
  408e18:	add	x9, x8, #0x1
  408e1c:	str	x9, [x0, #40]
  408e20:	strb	w25, [x8]
  408e24:	b	408d60 <wcrtomb@plt+0x4270>
  408e28:	ldp	x20, x19, [sp, #64]
  408e2c:	ldp	x22, x21, [sp, #48]
  408e30:	ldp	x24, x23, [sp, #32]
  408e34:	ldr	x25, [sp, #16]
  408e38:	ldp	x29, x30, [sp], #80
  408e3c:	ret
  408e40:	sub	sp, sp, #0x70
  408e44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408e48:	ldr	w8, [x8, #3848]
  408e4c:	stp	x29, x30, [sp, #16]
  408e50:	stp	x28, x27, [sp, #32]
  408e54:	stp	x26, x25, [sp, #48]
  408e58:	stp	x24, x23, [sp, #64]
  408e5c:	stp	x22, x21, [sp, #80]
  408e60:	stp	x20, x19, [sp, #96]
  408e64:	add	x29, sp, #0x10
  408e68:	cbz	w8, 408e88 <wcrtomb@plt+0x4398>
  408e6c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408e70:	ldr	w9, [x24, #704]
  408e74:	add	w9, w9, #0x1
  408e78:	udiv	w10, w9, w8
  408e7c:	msub	w8, w10, w8, w9
  408e80:	str	w9, [x24, #704]
  408e84:	cbz	w8, 408ea8 <wcrtomb@plt+0x43b8>
  408e88:	ldp	x20, x19, [sp, #96]
  408e8c:	ldp	x22, x21, [sp, #80]
  408e90:	ldp	x24, x23, [sp, #64]
  408e94:	ldp	x26, x25, [sp, #48]
  408e98:	ldp	x28, x27, [sp, #32]
  408e9c:	ldp	x29, x30, [sp, #16]
  408ea0:	add	sp, sp, #0x70
  408ea4:	ret
  408ea8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408eac:	ldr	x25, [x8, #712]
  408eb0:	cbz	x25, 408e88 <wcrtomb@plt+0x4398>
  408eb4:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408eb8:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x16e3c>
  408ebc:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ec0:	mov	w19, w0
  408ec4:	add	x26, x26, #0x4c3
  408ec8:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ecc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ed0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408ed4:	add	x22, x22, #0xe7d
  408ed8:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408edc:	add	x23, x23, #0x2f0
  408ee0:	b	408ef8 <wcrtomb@plt+0x4408>
  408ee4:	sub	x1, x29, #0x4
  408ee8:	mov	x0, x23
  408eec:	bl	404690 <sigwait@plt>
  408ef0:	ldr	x25, [x25]
  408ef4:	cbz	x25, 408e88 <wcrtomb@plt+0x4398>
  408ef8:	ldr	w8, [x25, #8]
  408efc:	cmp	w8, #0x7
  408f00:	b.hi	408ef0 <wcrtomb@plt+0x4400>  // b.pmore
  408f04:	adr	x9, 408ee4 <wcrtomb@plt+0x43f4>
  408f08:	ldrb	w10, [x26, x8]
  408f0c:	add	x9, x9, x10, lsl #2
  408f10:	br	x9
  408f14:	ldr	x0, [x27, #2824]
  408f18:	ldp	x8, x9, [x0, #40]
  408f1c:	cmp	x8, x9
  408f20:	b.cs	40904c <wcrtomb@plt+0x455c>  // b.hs, b.nlast
  408f24:	add	x9, x8, #0x1
  408f28:	str	x9, [x0, #40]
  408f2c:	mov	w9, #0x2e                  	// #46
  408f30:	strb	w9, [x8]
  408f34:	ldr	x0, [x27, #2824]
  408f38:	bl	4047b0 <fflush_unlocked@plt>
  408f3c:	b	408ef0 <wcrtomb@plt+0x4400>
  408f40:	ldr	x0, [x20, #720]
  408f44:	cbnz	x0, 408f64 <wcrtomb@plt+0x4474>
  408f48:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408f4c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  408f50:	add	x0, x0, #0x8c
  408f54:	add	x1, x1, #0xec8
  408f58:	bl	4041e0 <fopen@plt>
  408f5c:	str	x0, [x20, #720]
  408f60:	cbz	x0, 408ef0 <wcrtomb@plt+0x4400>
  408f64:	ldp	x8, x9, [x0, #40]
  408f68:	cmp	x8, x9
  408f6c:	b.cs	409064 <wcrtomb@plt+0x4574>  // b.hs, b.nlast
  408f70:	add	x9, x8, #0x1
  408f74:	str	x9, [x0, #40]
  408f78:	mov	w9, #0x7                   	// #7
  408f7c:	strb	w9, [x8]
  408f80:	bl	4047b0 <fflush_unlocked@plt>
  408f84:	b	408ef0 <wcrtomb@plt+0x4400>
  408f88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  408f8c:	ldr	x0, [x21, #88]
  408f90:	ldr	x3, [x8, #2440]
  408f94:	mov	w1, #0x1                   	// #1
  408f98:	mov	x2, x22
  408f9c:	bl	404600 <__fprintf_chk@plt>
  408fa0:	ldr	x8, [x21, #88]
  408fa4:	ldr	x2, [x25, #16]
  408fa8:	ldr	w4, [x24, #704]
  408fac:	sxtw	x1, w0
  408fb0:	and	w3, w19, #0x1
  408fb4:	mov	x0, x8
  408fb8:	bl	4090ac <wcrtomb@plt+0x45bc>
  408fbc:	ldr	x0, [x21, #88]
  408fc0:	ldp	x8, x9, [x0, #40]
  408fc4:	cmp	x8, x9
  408fc8:	b.cs	409058 <wcrtomb@plt+0x4568>  // b.hs, b.nlast
  408fcc:	add	x9, x8, #0x1
  408fd0:	str	x9, [x0, #40]
  408fd4:	mov	w9, #0xa                   	// #10
  408fd8:	strb	w9, [x8]
  408fdc:	b	408ef0 <wcrtomb@plt+0x4400>
  408fe0:	ldr	x0, [x20, #720]
  408fe4:	cbnz	x0, 409004 <wcrtomb@plt+0x4514>
  408fe8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  408fec:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  408ff0:	add	x0, x0, #0x8c
  408ff4:	add	x1, x1, #0xec8
  408ff8:	bl	4041e0 <fopen@plt>
  408ffc:	str	x0, [x20, #720]
  409000:	cbz	x0, 408ef0 <wcrtomb@plt+0x4400>
  409004:	ldr	x2, [x25, #16]
  409008:	ldr	w4, [x24, #704]
  40900c:	and	w3, w19, #0x1
  409010:	mov	x1, xzr
  409014:	bl	4090ac <wcrtomb@plt+0x45bc>
  409018:	b	408ef0 <wcrtomb@plt+0x4400>
  40901c:	ldr	w0, [x25, #16]
  409020:	bl	404370 <sleep@plt>
  409024:	b	408ef0 <wcrtomb@plt+0x4400>
  409028:	ldr	x8, [x28, #3728]
  40902c:	ldr	x0, [x25, #16]
  409030:	ldr	w2, [x24, #704]
  409034:	ldr	x1, [x8]
  409038:	bl	4246a0 <wcrtomb@plt+0x1fbb0>
  40903c:	b	408ef0 <wcrtomb@plt+0x4400>
  409040:	bl	404df0 <wcrtomb@plt+0x300>
  409044:	bl	405288 <wcrtomb@plt+0x798>
  409048:	b	408ef0 <wcrtomb@plt+0x4400>
  40904c:	mov	w1, #0x2e                  	// #46
  409050:	bl	404590 <__overflow@plt>
  409054:	b	408f34 <wcrtomb@plt+0x4444>
  409058:	mov	w1, #0xa                   	// #10
  40905c:	bl	404590 <__overflow@plt>
  409060:	b	408ef0 <wcrtomb@plt+0x4400>
  409064:	mov	w1, #0x7                   	// #7
  409068:	bl	404590 <__overflow@plt>
  40906c:	ldr	x0, [x20, #720]
  409070:	bl	4047b0 <fflush_unlocked@plt>
  409074:	b	408ef0 <wcrtomb@plt+0x4400>
  409078:	stp	x29, x30, [sp, #-16]!
  40907c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409080:	ldr	w8, [x8, #3848]
  409084:	mov	x29, sp
  409088:	cbz	w8, 4090a4 <wcrtomb@plt+0x45b4>
  40908c:	bl	408d14 <wcrtomb@plt+0x4224>
  409090:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409094:	ldr	x0, [x8, #720]
  409098:	cbz	x0, 4090a4 <wcrtomb@plt+0x45b4>
  40909c:	ldp	x29, x30, [sp], #16
  4090a0:	b	4041a0 <fclose@plt>
  4090a4:	ldp	x29, x30, [sp], #16
  4090a8:	ret
  4090ac:	sub	sp, sp, #0x1a0
  4090b0:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4090b4:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4090b8:	add	x8, x8, #0xebd
  4090bc:	add	x9, x9, #0x9aa
  4090c0:	tst	w3, #0x1
  4090c4:	stp	x28, x27, [sp, #336]
  4090c8:	stp	x22, x21, [sp, #384]
  4090cc:	stp	x20, x19, [sp, #400]
  4090d0:	mov	x27, x2
  4090d4:	mov	x19, x1
  4090d8:	mov	x22, x0
  4090dc:	csel	x1, x9, x8, ne  // ne = any
  4090e0:	mov	w2, #0x5                   	// #5
  4090e4:	mov	x0, xzr
  4090e8:	stp	x29, x30, [sp, #320]
  4090ec:	stp	x26, x25, [sp, #352]
  4090f0:	stp	x24, x23, [sp, #368]
  4090f4:	add	x29, sp, #0x140
  4090f8:	mov	w20, w4
  4090fc:	str	w3, [sp, #28]
  409100:	bl	4048b0 <dcgettext@plt>
  409104:	str	x0, [sp, #16]
  409108:	mov	w0, w20
  40910c:	sub	x1, x29, #0x20
  409110:	str	w20, [sp, #24]
  409114:	bl	440290 <argp_parse@@Base+0x5be4>
  409118:	str	x0, [sp, #8]
  40911c:	cbnz	x27, 40914c <wcrtomb@plt+0x465c>
  409120:	ldr	w10, [sp, #28]
  409124:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409128:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40912c:	add	x8, x8, #0x575
  409130:	add	x9, x9, #0x561
  409134:	tst	w10, #0x1
  409138:	csel	x1, x9, x8, ne  // ne = any
  40913c:	mov	w2, #0x5                   	// #5
  409140:	mov	x0, xzr
  409144:	bl	4048b0 <dcgettext@plt>
  409148:	mov	x27, x0
  40914c:	sub	x8, x29, #0x38
  409150:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409154:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409158:	mov	w24, #0x20                  	// #32
  40915c:	add	x20, x20, #0x4cb
  409160:	mov	w25, #0x1                   	// #1
  409164:	add	x8, x8, #0x10
  409168:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40916c:	add	x23, x23, #0x2e0
  409170:	str	x8, [sp]
  409174:	b	409198 <wcrtomb@plt+0x46a8>
  409178:	ldr	x26, [sp, #8]
  40917c:	mov	x0, x26
  409180:	mov	x1, x22
  409184:	bl	4048d0 <fputs_unlocked@plt>
  409188:	mov	x0, x26
  40918c:	bl	403f00 <strlen@plt>
  409190:	add	x19, x0, x19
  409194:	add	x27, x28, #0x1
  409198:	ldrb	w1, [x27]
  40919c:	cmp	w1, #0x25
  4091a0:	b.eq	4091d8 <wcrtomb@plt+0x46e8>  // b.none
  4091a4:	cbz	w1, 409698 <wcrtomb@plt+0x4ba8>
  4091a8:	ldp	x8, x9, [x22, #40]
  4091ac:	cmp	x8, x9
  4091b0:	b.cs	409614 <wcrtomb@plt+0x4b24>  // b.hs, b.nlast
  4091b4:	add	x9, x8, #0x1
  4091b8:	str	x9, [x22, #40]
  4091bc:	strb	w1, [x8]
  4091c0:	ldrb	w8, [x27]
  4091c4:	cmp	w8, #0xd
  4091c8:	b.ne	409628 <wcrtomb@plt+0x4b38>  // b.any
  4091cc:	mov	x19, xzr
  4091d0:	strb	w25, [x21, #696]
  4091d4:	b	40962c <wcrtomb@plt+0x4b3c>
  4091d8:	mov	x28, x27
  4091dc:	ldrb	w8, [x28, #1]!
  4091e0:	cmp	w8, #0x7b
  4091e4:	b.ne	40922c <wcrtomb@plt+0x473c>  // b.any
  4091e8:	add	x27, x27, #0x2
  4091ec:	mov	w1, #0x7d                  	// #125
  4091f0:	mov	x0, x27
  4091f4:	bl	404750 <strchr@plt>
  4091f8:	cbz	x0, 40933c <wcrtomb@plt+0x484c>
  4091fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409200:	ldr	x8, [x8, #744]
  409204:	sub	x28, x0, x28
  409208:	mov	x26, x0
  40920c:	cmp	x28, x8
  409210:	b.ls	4092dc <wcrtomb@plt+0x47ec>  // b.plast
  409214:	ldr	x0, [x23]
  409218:	mov	x1, x28
  40921c:	str	x28, [x23, #8]
  409220:	bl	44a090 <argp_parse@@Base+0xf9e4>
  409224:	str	x0, [x23]
  409228:	b	4092e4 <wcrtomb@plt+0x47f4>
  40922c:	mov	x27, xzr
  409230:	sub	w9, w8, #0x54
  409234:	cmp	w9, #0x21
  409238:	b.hi	409318 <wcrtomb@plt+0x4828>  // b.pmore
  40923c:	adr	x8, 409178 <wcrtomb@plt+0x4688>
  409240:	ldrb	w10, [x20, x9]
  409244:	add	x8, x8, x10, lsl #2
  409248:	br	x8
  40924c:	bl	404df0 <wcrtomb@plt+0x300>
  409250:	cbz	x27, 409468 <wcrtomb@plt+0x4978>
  409254:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  409258:	add	x8, x8, #0xbc0
  40925c:	add	x1, sp, #0x20
  409260:	mov	w2, #0x4644                	// #17988
  409264:	mov	x0, x27
  409268:	str	x8, [sp, #88]
  40926c:	bl	42f7d0 <wcrtomb@plt+0x2ace0>
  409270:	cbz	w0, 4094d8 <wcrtomb@plt+0x49e8>
  409274:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409278:	ldr	x8, [x8, #4000]
  40927c:	cbz	x8, 409284 <wcrtomb@plt+0x4794>
  409280:	blr	x8
  409284:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409288:	mov	w2, #0x5                   	// #5
  40928c:	mov	x0, xzr
  409290:	add	x1, x1, #0x58d
  409294:	bl	4048b0 <dcgettext@plt>
  409298:	mov	x26, x0
  40929c:	add	x0, sp, #0x20
  4092a0:	bl	42fac0 <wcrtomb@plt+0x2afd0>
  4092a4:	mov	x4, x0
  4092a8:	mov	w0, wzr
  4092ac:	mov	w1, wzr
  4092b0:	mov	x2, x26
  4092b4:	mov	x3, x27
  4092b8:	bl	403f60 <error@plt>
  4092bc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4092c0:	mov	w8, #0x2                   	// #2
  4092c4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4092c8:	mov	w2, #0x2c                  	// #44
  4092cc:	mov	x0, x22
  4092d0:	add	x1, x1, #0x660
  4092d4:	str	w8, [x9, #2352]
  4092d8:	b	4095c0 <wcrtomb@plt+0x4ad0>
  4092dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4092e0:	ldr	x0, [x8, #736]
  4092e4:	sub	x28, x28, #0x1
  4092e8:	mov	x1, x27
  4092ec:	mov	x2, x28
  4092f0:	bl	403e80 <memcpy@plt>
  4092f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4092f8:	ldr	x27, [x8, #736]
  4092fc:	strb	wzr, [x27, x28]
  409300:	add	x28, x26, #0x1
  409304:	cbz	x27, 40933c <wcrtomb@plt+0x484c>
  409308:	ldrb	w8, [x28]
  40930c:	sub	w9, w8, #0x54
  409310:	cmp	w9, #0x21
  409314:	b.ls	40923c <wcrtomb@plt+0x474c>  // b.plast
  409318:	cmp	w8, #0x2a
  40931c:	b.ne	409380 <wcrtomb@plt+0x4890>  // b.any
  409320:	cbz	x27, 409490 <wcrtomb@plt+0x49a0>
  409324:	mov	w2, #0xa                   	// #10
  409328:	mov	x0, x27
  40932c:	mov	x1, xzr
  409330:	bl	404670 <strtol@plt>
  409334:	mov	x27, x0
  409338:	b	40953c <wcrtomb@plt+0x4a4c>
  40933c:	ldp	x8, x9, [x22, #40]
  409340:	cmp	x8, x9
  409344:	b.cs	409638 <wcrtomb@plt+0x4b48>  // b.hs, b.nlast
  409348:	add	x9, x8, #0x1
  40934c:	str	x9, [x22, #40]
  409350:	mov	w9, #0x25                  	// #37
  409354:	strb	w9, [x8]
  409358:	ldp	x8, x9, [x22, #40]
  40935c:	ldrb	w1, [x28]
  409360:	cmp	x8, x9
  409364:	b.cs	409654 <wcrtomb@plt+0x4b64>  // b.hs, b.nlast
  409368:	add	x9, x8, #0x1
  40936c:	str	x9, [x22, #40]
  409370:	strb	w1, [x8]
  409374:	add	x19, x19, #0x2
  409378:	add	x27, x28, #0x1
  40937c:	b	409198 <wcrtomb@plt+0x46a8>
  409380:	ldp	x8, x9, [x22, #40]
  409384:	cmp	x8, x9
  409388:	b.cs	409668 <wcrtomb@plt+0x4b78>  // b.hs, b.nlast
  40938c:	add	x9, x8, #0x1
  409390:	str	x9, [x22, #40]
  409394:	mov	w9, #0x25                  	// #37
  409398:	strb	w9, [x8]
  40939c:	ldp	x8, x9, [x22, #40]
  4093a0:	ldrb	w1, [x28]
  4093a4:	cmp	x8, x9
  4093a8:	b.cs	409684 <wcrtomb@plt+0x4b94>  // b.hs, b.nlast
  4093ac:	add	x9, x8, #0x1
  4093b0:	str	x9, [x22, #40]
  4093b4:	strb	w1, [x8]
  4093b8:	add	x19, x19, #0x2
  4093bc:	add	x27, x28, #0x1
  4093c0:	b	409198 <wcrtomb@plt+0x46a8>
  4093c4:	ldp	w4, w8, [sp, #24]
  4093c8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4093cc:	mov	x0, x22
  4093d0:	mov	x1, x19
  4093d4:	and	w3, w8, #0x1
  4093d8:	add	x2, x2, #0x5aa
  4093dc:	bl	4090ac <wcrtomb@plt+0x45bc>
  4093e0:	add	x19, x19, w0, sxtw
  4093e4:	add	x27, x28, #0x1
  4093e8:	b	409198 <wcrtomb@plt+0x46a8>
  4093ec:	bl	404df0 <wcrtomb@plt+0x300>
  4093f0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4093f4:	mov	w1, #0x1                   	// #1
  4093f8:	mov	x0, x22
  4093fc:	add	x2, x2, #0x588
  409400:	bl	404600 <__fprintf_chk@plt>
  409404:	add	x19, x19, w0, sxtw
  409408:	add	x27, x28, #0x1
  40940c:	b	409198 <wcrtomb@plt+0x46a8>
  409410:	ldr	x26, [sp, #16]
  409414:	b	40917c <wcrtomb@plt+0x468c>
  409418:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  40941c:	cmp	x27, #0x0
  409420:	add	x8, x8, #0x789
  409424:	add	x0, sp, #0x20
  409428:	mov	x1, xzr
  40942c:	csel	x26, x8, x27, eq  // eq = none
  409430:	bl	404340 <gettimeofday@plt>
  409434:	add	x0, sp, #0x20
  409438:	bl	404140 <localtime@plt>
  40943c:	ldr	w8, [sp, #40]
  409440:	mov	w9, #0x3e8                 	// #1000
  409444:	mov	x2, x0
  409448:	mov	x0, x22
  40944c:	mul	w4, w8, w9
  409450:	mov	x1, x26
  409454:	mov	x3, xzr
  409458:	bl	43d160 <argp_parse@@Base+0x2ab4>
  40945c:	add	x19, x0, x19
  409460:	add	x27, x28, #0x1
  409464:	b	409198 <wcrtomb@plt+0x46a8>
  409468:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40946c:	mov	w2, #0x2c                  	// #44
  409470:	mov	x0, x22
  409474:	add	x1, x1, #0x660
  409478:	mov	w3, wzr
  40947c:	bl	404f34 <wcrtomb@plt+0x444>
  409480:	mov	w26, w0
  409484:	add	x19, x19, w0, sxtw
  409488:	add	x27, x28, #0x1
  40948c:	b	409198 <wcrtomb@plt+0x46a8>
  409490:	mov	x0, x22
  409494:	bl	404130 <fileno@plt>
  409498:	add	x2, sp, #0x20
  40949c:	mov	w1, #0x5413                	// #21523
  4094a0:	bl	404aa0 <ioctl@plt>
  4094a4:	cbz	w0, 409534 <wcrtomb@plt+0x4a44>
  4094a8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4094ac:	add	x0, x0, #0x559
  4094b0:	bl	4049e0 <getenv@plt>
  4094b4:	cbz	x0, 4094d0 <wcrtomb@plt+0x49e0>
  4094b8:	mov	w2, #0xa                   	// #10
  4094bc:	mov	x1, xzr
  4094c0:	bl	404670 <strtol@plt>
  4094c4:	mov	x27, x0
  4094c8:	cmp	x0, #0x0
  4094cc:	b.gt	40953c <wcrtomb@plt+0x4a4c>
  4094d0:	mov	w27, #0x50                  	// #80
  4094d4:	b	40953c <wcrtomb@plt+0x4a4c>
  4094d8:	ldr	x8, [sp, #32]
  4094dc:	cbz	x8, 409590 <wcrtomb@plt+0x4aa0>
  4094e0:	ldr	x9, [sp, #40]
  4094e4:	cmp	x8, #0x3
  4094e8:	sub	x14, x29, #0x38
  4094ec:	b.ls	40950c <wcrtomb@plt+0x4a1c>  // b.plast
  4094f0:	lsl	x10, x8, #3
  4094f4:	add	x11, x9, x10
  4094f8:	cmp	x14, x11
  4094fc:	b.cs	4095e0 <wcrtomb@plt+0x4af0>  // b.hs, b.nlast
  409500:	add	x10, x14, x10
  409504:	cmp	x9, x10
  409508:	b.cs	4095e0 <wcrtomb@plt+0x4af0>  // b.hs, b.nlast
  40950c:	mov	x10, xzr
  409510:	lsl	x11, x10, #3
  409514:	ldr	x12, [x9, x11]
  409518:	add	x10, x10, #0x1
  40951c:	cmp	x8, x10
  409520:	str	x12, [x14, x11]
  409524:	b.hi	409510 <wcrtomb@plt+0x4a20>  // b.pmore
  409528:	cmp	w10, #0x2
  40952c:	b.ls	409598 <wcrtomb@plt+0x4aa8>  // b.plast
  409530:	b	4095b4 <wcrtomb@plt+0x4ac4>
  409534:	ldrh	w27, [sp, #34]
  409538:	cbz	x27, 4094a8 <wcrtomb@plt+0x49b8>
  40953c:	cmp	x27, x19
  409540:	b.ls	409630 <wcrtomb@plt+0x4b40>  // b.plast
  409544:	ldp	x8, x9, [x22, #40]
  409548:	cmp	x8, x9
  40954c:	b.cs	40956c <wcrtomb@plt+0x4a7c>  // b.hs, b.nlast
  409550:	add	x9, x8, #0x1
  409554:	str	x9, [x22, #40]
  409558:	strb	w24, [x8]
  40955c:	add	x19, x19, #0x1
  409560:	cmp	x27, x19
  409564:	b.ne	409544 <wcrtomb@plt+0x4a54>  // b.any
  409568:	b	409584 <wcrtomb@plt+0x4a94>
  40956c:	mov	w1, #0x20                  	// #32
  409570:	mov	x0, x22
  409574:	bl	404590 <__overflow@plt>
  409578:	add	x19, x19, #0x1
  40957c:	cmp	x27, x19
  409580:	b.ne	409544 <wcrtomb@plt+0x4a54>  // b.any
  409584:	mov	x19, x27
  409588:	add	x27, x28, #0x1
  40958c:	b	409198 <wcrtomb@plt+0x46a8>
  409590:	mov	w10, wzr
  409594:	sub	x14, x29, #0x38
  409598:	mov	w8, #0x2                   	// #2
  40959c:	sub	w8, w8, w10
  4095a0:	lsl	x8, x8, #3
  4095a4:	add	x0, x14, w10, uxtw #3
  4095a8:	add	x2, x8, #0x8
  4095ac:	mov	w1, wzr
  4095b0:	bl	404320 <memset@plt>
  4095b4:	sub	x1, x29, #0x38
  4095b8:	mov	w2, #0x2c                  	// #44
  4095bc:	mov	x0, x22
  4095c0:	mov	w3, wzr
  4095c4:	bl	404f34 <wcrtomb@plt+0x444>
  4095c8:	mov	w26, w0
  4095cc:	add	x0, sp, #0x20
  4095d0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4095d4:	add	x19, x19, w26, sxtw
  4095d8:	add	x27, x28, #0x1
  4095dc:	b	409198 <wcrtomb@plt+0x46a8>
  4095e0:	ldr	x13, [sp]
  4095e4:	and	x10, x8, #0xfffffffffffffffc
  4095e8:	add	x11, x9, #0x10
  4095ec:	mov	x12, x10
  4095f0:	ldp	q0, q1, [x11, #-16]
  4095f4:	add	x11, x11, #0x20
  4095f8:	subs	x12, x12, #0x4
  4095fc:	stp	q0, q1, [x13, #-16]
  409600:	add	x13, x13, #0x20
  409604:	b.ne	4095f0 <wcrtomb@plt+0x4b00>  // b.any
  409608:	cmp	x8, x10
  40960c:	b.ne	409510 <wcrtomb@plt+0x4a20>  // b.any
  409610:	b	409528 <wcrtomb@plt+0x4a38>
  409614:	mov	x0, x22
  409618:	bl	404590 <__overflow@plt>
  40961c:	ldrb	w8, [x27]
  409620:	cmp	w8, #0xd
  409624:	b.eq	4091cc <wcrtomb@plt+0x46dc>  // b.none
  409628:	add	x19, x19, #0x1
  40962c:	mov	x28, x27
  409630:	add	x27, x28, #0x1
  409634:	b	409198 <wcrtomb@plt+0x46a8>
  409638:	mov	w1, #0x25                  	// #37
  40963c:	mov	x0, x22
  409640:	bl	404590 <__overflow@plt>
  409644:	ldp	x8, x9, [x22, #40]
  409648:	ldrb	w1, [x28]
  40964c:	cmp	x8, x9
  409650:	b.cc	409368 <wcrtomb@plt+0x4878>  // b.lo, b.ul, b.last
  409654:	mov	x0, x22
  409658:	bl	404590 <__overflow@plt>
  40965c:	add	x19, x19, #0x2
  409660:	add	x27, x28, #0x1
  409664:	b	409198 <wcrtomb@plt+0x46a8>
  409668:	mov	w1, #0x25                  	// #37
  40966c:	mov	x0, x22
  409670:	bl	404590 <__overflow@plt>
  409674:	ldp	x8, x9, [x22, #40]
  409678:	ldrb	w1, [x28]
  40967c:	cmp	x8, x9
  409680:	b.cc	4093ac <wcrtomb@plt+0x48bc>  // b.lo, b.ul, b.last
  409684:	mov	x0, x22
  409688:	bl	404590 <__overflow@plt>
  40968c:	add	x19, x19, #0x2
  409690:	add	x27, x28, #0x1
  409694:	b	409198 <wcrtomb@plt+0x46a8>
  409698:	mov	x0, x22
  40969c:	bl	4047b0 <fflush_unlocked@plt>
  4096a0:	mov	w0, w19
  4096a4:	ldp	x20, x19, [sp, #400]
  4096a8:	ldp	x22, x21, [sp, #384]
  4096ac:	ldp	x24, x23, [sp, #368]
  4096b0:	ldp	x26, x25, [sp, #352]
  4096b4:	ldp	x28, x27, [sp, #336]
  4096b8:	ldp	x29, x30, [sp, #320]
  4096bc:	add	sp, sp, #0x1a0
  4096c0:	ret
  4096c4:	sub	sp, sp, #0x20
  4096c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4096cc:	ldr	x1, [x8, #3912]
  4096d0:	add	x0, sp, #0x8
  4096d4:	stp	x29, x30, [sp, #16]
  4096d8:	add	x29, sp, #0x10
  4096dc:	bl	41d150 <wcrtomb@plt+0x18660>
  4096e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4096e4:	ldr	x8, [x8, #3824]
  4096e8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4096ec:	str	x0, [x9, #888]
  4096f0:	cbz	x8, 4096f8 <wcrtomb@plt+0x4c08>
  4096f4:	bl	4166d8 <wcrtomb@plt+0x11be8>
  4096f8:	ldp	x29, x30, [sp, #16]
  4096fc:	add	sp, sp, #0x20
  409700:	ret
  409704:	sub	sp, sp, #0x120
  409708:	stp	x29, x30, [sp, #240]
  40970c:	add	x29, sp, #0xf0
  409710:	stp	x28, x21, [sp, #256]
  409714:	stp	x20, x19, [sp, #272]
  409718:	stp	x2, x3, [x29, #-112]
  40971c:	stp	x4, x5, [x29, #-96]
  409720:	stp	x6, x7, [x29, #-80]
  409724:	stp	q1, q2, [sp, #16]
  409728:	stp	q3, q4, [sp, #48]
  40972c:	str	q0, [sp]
  409730:	stp	q5, q6, [sp, #80]
  409734:	str	q7, [sp, #112]
  409738:	cbz	x1, 4097c0 <wcrtomb@plt+0x4cd0>
  40973c:	mov	x19, x1
  409740:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409744:	ldr	x1, [x0, #8]
  409748:	ldr	x20, [x21, #2824]
  40974c:	mov	w0, #0x1                   	// #1
  409750:	bl	41b5d8 <wcrtomb@plt+0x16ae8>
  409754:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  409758:	mov	x3, x0
  40975c:	add	x2, x2, #0xe7d
  409760:	mov	w1, #0x1                   	// #1
  409764:	mov	x0, x20
  409768:	bl	404600 <__fprintf_chk@plt>
  40976c:	sub	x9, x29, #0x70
  409770:	mov	x10, sp
  409774:	mov	x11, #0xffffffffffffffd0    	// #-48
  409778:	add	x8, x29, #0x30
  40977c:	movk	x11, #0xff80, lsl #32
  409780:	add	x9, x9, #0x30
  409784:	add	x10, x10, #0x80
  409788:	stp	x8, x9, [x29, #-64]
  40978c:	stp	x10, x11, [x29, #-48]
  409790:	ldp	q0, q1, [x29, #-64]
  409794:	ldr	x0, [x21, #2824]
  409798:	sub	x3, x29, #0x20
  40979c:	mov	w1, #0x1                   	// #1
  4097a0:	mov	x2, x19
  4097a4:	stp	q0, q1, [x29, #-32]
  4097a8:	bl	4043b0 <__vfprintf_chk@plt>
  4097ac:	ldr	x0, [x21, #2824]
  4097b0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4097b4:	add	x2, x2, #0x253
  4097b8:	mov	w1, #0x1                   	// #1
  4097bc:	bl	404600 <__fprintf_chk@plt>
  4097c0:	mov	w0, #0x1                   	// #1
  4097c4:	bl	425e70 <wcrtomb@plt+0x21380>
  4097c8:	ldp	x20, x19, [sp, #272]
  4097cc:	ldp	x28, x21, [sp, #256]
  4097d0:	ldp	x29, x30, [sp, #240]
  4097d4:	add	sp, sp, #0x120
  4097d8:	ret
  4097dc:	stp	x29, x30, [sp, #-80]!
  4097e0:	str	x28, [sp, #16]
  4097e4:	stp	x24, x23, [sp, #32]
  4097e8:	stp	x22, x21, [sp, #48]
  4097ec:	stp	x20, x19, [sp, #64]
  4097f0:	mov	x29, sp
  4097f4:	sub	sp, sp, #0x480
  4097f8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4097fc:	ldr	x0, [x20, #2968]
  409800:	bl	405640 <wcrtomb@plt+0xb50>
  409804:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409808:	ldr	w8, [x8, #3636]
  40980c:	cbz	w8, 40985c <wcrtomb@plt+0x4d6c>
  409810:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409814:	ldrb	w8, [x8, #2920]
  409818:	cbz	w8, 409848 <wcrtomb@plt+0x4d58>
  40981c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409820:	ldr	x19, [x8, #2824]
  409824:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409828:	add	x1, x1, #0x686
  40982c:	mov	w2, #0x5                   	// #5
  409830:	mov	x0, xzr
  409834:	bl	4048b0 <dcgettext@plt>
  409838:	mov	x2, x0
  40983c:	mov	w1, #0x1                   	// #1
  409840:	mov	x0, x19
  409844:	bl	404600 <__fprintf_chk@plt>
  409848:	ldr	x1, [x20, #2968]
  40984c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409850:	add	x0, x0, #0xc10
  409854:	mov	x2, #0xffffffffffffffff    	// #-1
  409858:	bl	419a74 <wcrtomb@plt+0x14f84>
  40985c:	ldr	x8, [x20, #2968]
  409860:	ldrb	w8, [x8, #156]
  409864:	cmp	w8, #0x56
  409868:	b.hi	4099d4 <wcrtomb@plt+0x4ee4>  // b.pmore
  40986c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409870:	add	x9, x9, #0x5d8
  409874:	adr	x10, 409884 <wcrtomb@plt+0x4d94>
  409878:	ldrh	w11, [x9, x8, lsl #1]
  40987c:	add	x10, x10, x11, lsl #2
  409880:	br	x10
  409884:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409888:	ldrb	w8, [x8, #3104]
  40988c:	cbnz	w8, 409edc <wcrtomb@plt+0x53ec>
  409890:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409894:	ldr	x19, [x8, #3096]
  409898:	add	x1, sp, #0x80
  40989c:	mov	x0, x19
  4098a0:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  4098a4:	cbz	w0, 409b9c <wcrtomb@plt+0x50ac>
  4098a8:	bl	4049c0 <__errno_location@plt>
  4098ac:	ldr	w8, [x0]
  4098b0:	mov	x0, x19
  4098b4:	cmp	w8, #0x2
  4098b8:	b.ne	409cf4 <wcrtomb@plt+0x5204>  // b.any
  4098bc:	bl	42d568 <wcrtomb@plt+0x28a78>
  4098c0:	b	409cf8 <wcrtomb@plt+0x5208>
  4098c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4098c8:	ldr	x19, [x8, #3096]
  4098cc:	add	x1, sp, #0x80
  4098d0:	mov	x0, x19
  4098d4:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  4098d8:	cbnz	w0, 409ef4 <wcrtomb@plt+0x5404>
  4098dc:	ldr	x8, [x20, #2968]
  4098e0:	ldrb	w9, [x8, #156]
  4098e4:	cmp	w9, #0x33
  4098e8:	b.ne	409d08 <wcrtomb@plt+0x5218>  // b.any
  4098ec:	ldr	w8, [sp, #144]
  4098f0:	and	w9, w8, #0xf000
  4098f4:	cmp	w9, #0x2, lsl #12
  4098f8:	b.ne	409e58 <wcrtomb@plt+0x5368>  // b.any
  4098fc:	b	409d20 <wcrtomb@plt+0x5230>
  409900:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409904:	add	x19, x19, #0xc10
  409908:	mov	x0, x19
  40990c:	bl	4174ec <wcrtomb@plt+0x129fc>
  409910:	tbz	w0, #0, 409edc <wcrtomb@plt+0x53ec>
  409914:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409918:	ldr	w8, [x20, #3496]
  40991c:	cbz	w8, 409dec <wcrtomb@plt+0x52fc>
  409920:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409924:	add	x0, x0, #0xc10
  409928:	bl	415498 <wcrtomb@plt+0x109a8>
  40992c:	bl	4161a4 <wcrtomb@plt+0x116b4>
  409930:	cbz	x0, 409e64 <wcrtomb@plt+0x5374>
  409934:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409938:	ldr	x20, [x8, #3472]
  40993c:	mov	w23, #0x4000                	// #16384
  409940:	mov	w24, #0x400                 	// #1024
  409944:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409948:	mov	x19, x0
  40994c:	mov	w22, #0x1                   	// #1
  409950:	movk	w23, #0x11, lsl #16
  409954:	movk	w24, #0x20, lsl #16
  409958:	add	x21, x21, #0x8ba
  40995c:	ldrb	w8, [x20]
  409960:	b	409968 <wcrtomb@plt+0x4e78>
  409964:	cbz	w8, 409db0 <wcrtomb@plt+0x52c0>
  409968:	sub	w9, w8, #0x44
  40996c:	cmp	w9, #0x15
  409970:	b.hi	409964 <wcrtomb@plt+0x4e74>  // b.pmore
  409974:	lsl	w10, w22, w9
  409978:	tst	w10, w23
  40997c:	b.ne	409db0 <wcrtomb@plt+0x52c0>  // b.any
  409980:	tst	w10, w24
  409984:	b.ne	409998 <wcrtomb@plt+0x4ea8>  // b.any
  409988:	cbnz	w9, 409964 <wcrtomb@plt+0x4e74>
  40998c:	mov	x0, x20
  409990:	mov	x1, x19
  409994:	b	4099b4 <wcrtomb@plt+0x4ec4>
  409998:	ldrb	w1, [x19]
  40999c:	mov	w2, #0x3                   	// #3
  4099a0:	mov	x0, x21
  4099a4:	bl	404840 <memchr@plt>
  4099a8:	cbz	x0, 409db8 <wcrtomb@plt+0x52c8>
  4099ac:	add	x0, x20, #0x1
  4099b0:	add	x1, x19, #0x1
  4099b4:	bl	404610 <strcmp@plt>
  4099b8:	cbnz	w0, 409db8 <wcrtomb@plt+0x52c8>
  4099bc:	mov	x0, x20
  4099c0:	bl	403f00 <strlen@plt>
  4099c4:	add	x8, x0, #0x1
  4099c8:	add	x19, x19, x8
  4099cc:	add	x20, x20, x8
  4099d0:	b	40995c <wcrtomb@plt+0x4e6c>
  4099d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4099d8:	ldr	x8, [x8, #4000]
  4099dc:	cbz	x8, 4099e4 <wcrtomb@plt+0x4ef4>
  4099e0:	blr	x8
  4099e4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4099e8:	add	x1, x1, #0x68e
  4099ec:	mov	w2, #0x5                   	// #5
  4099f0:	mov	x0, xzr
  4099f4:	bl	4048b0 <dcgettext@plt>
  4099f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4099fc:	ldr	x8, [x8, #3096]
  409a00:	mov	x19, x0
  409a04:	mov	x0, x8
  409a08:	bl	448e5c <argp_parse@@Base+0xe7b0>
  409a0c:	ldr	x8, [x20, #2968]
  409a10:	mov	x3, x0
  409a14:	mov	w0, wzr
  409a18:	mov	w1, wzr
  409a1c:	ldrb	w4, [x8, #156]
  409a20:	mov	x2, x19
  409a24:	bl	403f60 <error@plt>
  409a28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409a2c:	mov	w9, #0x2                   	// #2
  409a30:	str	w9, [x8, #2352]
  409a34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409a38:	ldrb	w8, [x8, #3104]
  409a3c:	cbnz	w8, 409edc <wcrtomb@plt+0x53ec>
  409a40:	b	409890 <wcrtomb@plt+0x4da0>
  409a44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409a48:	ldr	x19, [x8, #3096]
  409a4c:	add	x1, sp, #0x80
  409a50:	mov	x0, x19
  409a54:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  409a58:	cbnz	w0, 409ef4 <wcrtomb@plt+0x5404>
  409a5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409a60:	ldr	x19, [x8, #3112]
  409a64:	mov	x1, sp
  409a68:	mov	x0, x19
  409a6c:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  409a70:	cbnz	w0, 409ef4 <wcrtomb@plt+0x5404>
  409a74:	add	x0, sp, #0x80
  409a78:	mov	x1, sp
  409a7c:	bl	423360 <wcrtomb@plt+0x1e870>
  409a80:	tbnz	w0, #0, 409f68 <wcrtomb@plt+0x5478>
  409a84:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409a88:	add	x1, x1, #0x883
  409a8c:	mov	w2, #0x5                   	// #5
  409a90:	mov	x0, xzr
  409a94:	bl	4048b0 <dcgettext@plt>
  409a98:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409a9c:	add	x19, x19, #0xc10
  409aa0:	ldr	x1, [x19, #24]
  409aa4:	mov	x20, x0
  409aa8:	mov	w0, wzr
  409aac:	bl	41b5d8 <wcrtomb@plt+0x16ae8>
  409ab0:	mov	x2, x0
  409ab4:	mov	x0, x19
  409ab8:	mov	x1, x20
  409abc:	bl	409704 <wcrtomb@plt+0x4c14>
  409ac0:	b	409f68 <wcrtomb@plt+0x5478>
  409ac4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409ac8:	ldr	x0, [x22, #3112]
  409acc:	bl	403f00 <strlen@plt>
  409ad0:	mov	x20, x0
  409ad4:	cmp	x0, #0x400
  409ad8:	add	x21, x0, #0x1
  409adc:	b.cs	409d40 <wcrtomb@plt+0x5250>  // b.hs, b.nlast
  409ae0:	add	x19, sp, #0x80
  409ae4:	b	409d4c <wcrtomb@plt+0x525c>
  409ae8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409aec:	ldrb	w8, [x8, #3104]
  409af0:	cbnz	w8, 409edc <wcrtomb@plt+0x53ec>
  409af4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409af8:	ldr	x19, [x21, #3096]
  409afc:	add	x1, sp, #0x80
  409b00:	mov	x0, x19
  409b04:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  409b08:	cbnz	w0, 409ef4 <wcrtomb@plt+0x5404>
  409b0c:	ldr	w8, [sp, #144]
  409b10:	and	w8, w8, #0xf000
  409b14:	cmp	w8, #0x8, lsl #12
  409b18:	b.ne	409de0 <wcrtomb@plt+0x52f0>  // b.any
  409b1c:	ldr	x8, [x20, #2968]
  409b20:	mov	w1, #0xc                   	// #12
  409b24:	add	x0, x8, #0x171
  409b28:	bl	41a32c <wcrtomb@plt+0x1583c>
  409b2c:	tbnz	x0, #63, 409e98 <wcrtomb@plt+0x53a8>
  409b30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409b34:	ldr	x8, [x8, #3224]
  409b38:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409b3c:	sub	x9, x9, x0
  409b40:	mov	x19, x0
  409b44:	cmp	x9, x8
  409b48:	b.lt	409e98 <wcrtomb@plt+0x53a8>  // b.tstop
  409b4c:	ldr	x9, [sp, #176]
  409b50:	add	x8, x8, x19
  409b54:	cmp	x9, x8
  409b58:	b.ne	409e98 <wcrtomb@plt+0x53a8>  // b.any
  409b5c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  409b60:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409b64:	ldr	x1, [x21, #3096]
  409b68:	ldr	w0, [x8, #1864]
  409b6c:	ldr	w2, [x9, #3700]
  409b70:	bl	4049a0 <openat@plt>
  409b74:	tbnz	w0, #31, 409ff8 <wcrtomb@plt+0x5508>
  409b78:	mov	x1, x19
  409b7c:	mov	w2, wzr
  409b80:	mov	w20, w0
  409b84:	bl	4040e0 <lseek@plt>
  409b88:	tbnz	x0, #63, 40a004 <wcrtomb@plt+0x5514>
  409b8c:	adrp	x0, 40a000 <wcrtomb@plt+0x5510>
  409b90:	add	x0, x0, #0x4e8
  409b94:	bl	40a400 <wcrtomb@plt+0x5910>
  409b98:	b	40a018 <wcrtomb@plt+0x5528>
  409b9c:	ldr	w8, [sp, #144]
  409ba0:	and	w9, w8, #0xf000
  409ba4:	cmp	w9, #0x8, lsl #12
  409ba8:	b.ne	409de0 <wcrtomb@plt+0x52f0>  // b.any
  409bac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409bb0:	ldr	w9, [x9, #3192]
  409bb4:	eor	w8, w9, w8
  409bb8:	tst	w8, #0xfff
  409bbc:	b.eq	409be4 <wcrtomb@plt+0x50f4>  // b.none
  409bc0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409bc4:	add	x1, x1, #0x7d5
  409bc8:	mov	w2, #0x5                   	// #5
  409bcc:	mov	x0, xzr
  409bd0:	bl	4048b0 <dcgettext@plt>
  409bd4:	mov	x1, x0
  409bd8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409bdc:	add	x0, x0, #0xc10
  409be0:	bl	409704 <wcrtomb@plt+0x4c14>
  409be4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409be8:	add	x1, x1, #0xc68
  409bec:	add	x0, sp, #0x80
  409bf0:	bl	423338 <wcrtomb@plt+0x1e848>
  409bf4:	tbnz	w0, #0, 409c1c <wcrtomb@plt+0x512c>
  409bf8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409bfc:	add	x1, x1, #0x7e2
  409c00:	mov	w2, #0x5                   	// #5
  409c04:	mov	x0, xzr
  409c08:	bl	4048b0 <dcgettext@plt>
  409c0c:	mov	x1, x0
  409c10:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409c14:	add	x0, x0, #0xc10
  409c18:	bl	409704 <wcrtomb@plt+0x4c14>
  409c1c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409c20:	add	x1, x1, #0xc68
  409c24:	add	x0, sp, #0x80
  409c28:	bl	42334c <wcrtomb@plt+0x1e85c>
  409c2c:	tbnz	w0, #0, 409c54 <wcrtomb@plt+0x5164>
  409c30:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409c34:	add	x1, x1, #0x7ee
  409c38:	mov	w2, #0x5                   	// #5
  409c3c:	mov	x0, xzr
  409c40:	bl	4048b0 <dcgettext@plt>
  409c44:	mov	x1, x0
  409c48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409c4c:	add	x0, x0, #0xc10
  409c50:	bl	409704 <wcrtomb@plt+0x4c14>
  409c54:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409c58:	add	x8, x8, #0xcf8
  409c5c:	ldp	x0, x1, [sp, #216]
  409c60:	ldp	x2, x3, [x8]
  409c64:	bl	426058 <wcrtomb@plt+0x21568>
  409c68:	cbz	w0, 409c90 <wcrtomb@plt+0x51a0>
  409c6c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409c70:	add	x1, x1, #0x7fa
  409c74:	mov	w2, #0x5                   	// #5
  409c78:	mov	x0, xzr
  409c7c:	bl	4048b0 <dcgettext@plt>
  409c80:	mov	x1, x0
  409c84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409c88:	add	x0, x0, #0xc10
  409c8c:	bl	409704 <wcrtomb@plt+0x4c14>
  409c90:	ldr	x8, [x20, #2968]
  409c94:	ldrb	w8, [x8, #156]
  409c98:	cmp	w8, #0x53
  409c9c:	b.eq	409cb4 <wcrtomb@plt+0x51c4>  // b.none
  409ca0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409ca4:	ldr	x8, [sp, #176]
  409ca8:	ldr	x9, [x9, #3224]
  409cac:	cmp	x8, x9
  409cb0:	b.ne	409e98 <wcrtomb@plt+0x53a8>  // b.any
  409cb4:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  409cb8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409cbc:	ldr	w0, [x21, #1864]
  409cc0:	ldr	w2, [x8, #3700]
  409cc4:	mov	x1, x19
  409cc8:	bl	4049a0 <openat@plt>
  409ccc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409cd0:	str	w0, [x20, #880]
  409cd4:	tbnz	w0, #31, 409f84 <wcrtomb@plt+0x5494>
  409cd8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409cdc:	ldrb	w8, [x8, #3360]
  409ce0:	cbz	w8, 409f9c <wcrtomb@plt+0x54ac>
  409ce4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409ce8:	add	x1, x1, #0xc10
  409cec:	bl	4207f0 <wcrtomb@plt+0x1bd00>
  409cf0:	b	409fa8 <wcrtomb@plt+0x54b8>
  409cf4:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  409cf8:	mov	w0, #0x1                   	// #1
  409cfc:	bl	425e70 <wcrtomb@plt+0x21380>
  409d00:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  409d04:	b	409f68 <wcrtomb@plt+0x5478>
  409d08:	ldr	w8, [sp, #144]
  409d0c:	cmp	w9, #0x34
  409d10:	and	w9, w8, #0xf000
  409d14:	b.ne	409e50 <wcrtomb@plt+0x5360>  // b.any
  409d18:	cmp	w9, #0x6, lsl #12
  409d1c:	b.ne	409e58 <wcrtomb@plt+0x5368>  // b.any
  409d20:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409d24:	ldr	x9, [x9, #3208]
  409d28:	ldr	x10, [sp, #160]
  409d2c:	cmp	x9, x10
  409d30:	b.eq	409f30 <wcrtomb@plt+0x5440>  // b.none
  409d34:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409d38:	add	x1, x1, #0x8a4
  409d3c:	b	409f4c <wcrtomb@plt+0x545c>
  409d40:	mov	x0, x21
  409d44:	bl	44a010 <argp_parse@@Base+0xf964>
  409d48:	mov	x19, x0
  409d4c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  409d50:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409d54:	ldr	w0, [x8, #1864]
  409d58:	ldr	x1, [x23, #3096]
  409d5c:	mov	x2, x19
  409d60:	mov	x3, x21
  409d64:	bl	404ae0 <readlinkat@plt>
  409d68:	tbnz	x0, #63, 409e34 <wcrtomb@plt+0x5344>
  409d6c:	cmp	x0, x20
  409d70:	b.ne	409d88 <wcrtomb@plt+0x5298>  // b.any
  409d74:	ldr	x0, [x22, #3112]
  409d78:	mov	x1, x19
  409d7c:	mov	x2, x20
  409d80:	bl	404400 <bcmp@plt>
  409d84:	cbz	w0, 409e80 <wcrtomb@plt+0x5390>
  409d88:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409d8c:	add	x1, x1, #0x894
  409d90:	mov	w2, #0x5                   	// #5
  409d94:	mov	x0, xzr
  409d98:	bl	4048b0 <dcgettext@plt>
  409d9c:	mov	x1, x0
  409da0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409da4:	add	x0, x0, #0xc10
  409da8:	bl	409704 <wcrtomb@plt+0x4c14>
  409dac:	b	409e80 <wcrtomb@plt+0x5390>
  409db0:	ldrb	w8, [x19]
  409db4:	cbz	w8, 409edc <wcrtomb@plt+0x53ec>
  409db8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409dbc:	add	x1, x1, #0x873
  409dc0:	mov	w2, #0x5                   	// #5
  409dc4:	mov	x0, xzr
  409dc8:	bl	4048b0 <dcgettext@plt>
  409dcc:	mov	x1, x0
  409dd0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409dd4:	add	x0, x0, #0xc10
  409dd8:	bl	409704 <wcrtomb@plt+0x4c14>
  409ddc:	b	409edc <wcrtomb@plt+0x53ec>
  409de0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409de4:	add	x1, x1, #0x7c3
  409de8:	b	409ea0 <wcrtomb@plt+0x53b0>
  409dec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409df0:	ldr	x0, [x19, #392]
  409df4:	ldr	x1, [x19]
  409df8:	ldr	w2, [x8, #3700]
  409dfc:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  409e00:	tbnz	w0, #31, 409ec4 <wcrtomb@plt+0x53d4>
  409e04:	mov	w19, w0
  409e08:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409e0c:	add	x2, x2, #0xc68
  409e10:	mov	w0, wzr
  409e14:	mov	w1, w19
  409e18:	bl	404890 <__fxstat@plt>
  409e1c:	cbz	w0, 409f94 <wcrtomb@plt+0x54a4>
  409e20:	mov	w0, w19
  409e24:	bl	4044d0 <close@plt>
  409e28:	adrp	x2, 41d000 <wcrtomb@plt+0x18510>
  409e2c:	add	x2, x2, #0x8
  409e30:	b	409ecc <wcrtomb@plt+0x53dc>
  409e34:	bl	4049c0 <__errno_location@plt>
  409e38:	ldr	w8, [x0]
  409e3c:	ldr	x0, [x23, #3096]
  409e40:	cmp	w8, #0x2
  409e44:	b.ne	409e74 <wcrtomb@plt+0x5384>  // b.any
  409e48:	bl	42d024 <wcrtomb@plt+0x28534>
  409e4c:	b	409e78 <wcrtomb@plt+0x5388>
  409e50:	cmp	w9, #0x1, lsl #12
  409e54:	b.eq	409f30 <wcrtomb@plt+0x5440>  // b.none
  409e58:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409e5c:	add	x1, x1, #0x7c3
  409e60:	b	409f4c <wcrtomb@plt+0x545c>
  409e64:	adrp	x0, 40a000 <wcrtomb@plt+0x5510>
  409e68:	add	x0, x0, #0x5e8
  409e6c:	bl	40a400 <wcrtomb@plt+0x5910>
  409e70:	b	409edc <wcrtomb@plt+0x53ec>
  409e74:	bl	42cfa0 <wcrtomb@plt+0x284b0>
  409e78:	mov	w0, #0x1                   	// #1
  409e7c:	bl	425e70 <wcrtomb@plt+0x21380>
  409e80:	add	x8, sp, #0x80
  409e84:	cmp	x19, x8
  409e88:	b.eq	409f68 <wcrtomb@plt+0x5478>  // b.none
  409e8c:	mov	x0, x19
  409e90:	bl	4046b0 <free@plt>
  409e94:	b	409f68 <wcrtomb@plt+0x5478>
  409e98:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409e9c:	add	x1, x1, #0x80b
  409ea0:	mov	w2, #0x5                   	// #5
  409ea4:	mov	x0, xzr
  409ea8:	bl	4048b0 <dcgettext@plt>
  409eac:	mov	x1, x0
  409eb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409eb4:	add	x0, x0, #0xc10
  409eb8:	bl	409704 <wcrtomb@plt+0x4c14>
  409ebc:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  409ec0:	b	409f68 <wcrtomb@plt+0x5478>
  409ec4:	adrp	x2, 41c000 <wcrtomb@plt+0x17510>
  409ec8:	add	x2, x2, #0xf54
  409ecc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409ed0:	ldr	x0, [x8, #3088]
  409ed4:	mov	w1, wzr
  409ed8:	bl	41d02c <wcrtomb@plt+0x1853c>
  409edc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409ee0:	ldr	x19, [x8, #3096]
  409ee4:	add	x1, sp, #0x80
  409ee8:	mov	x0, x19
  409eec:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  409ef0:	cbz	w0, 409f20 <wcrtomb@plt+0x5430>
  409ef4:	bl	4049c0 <__errno_location@plt>
  409ef8:	ldr	w8, [x0]
  409efc:	mov	x0, x19
  409f00:	cmp	w8, #0x2
  409f04:	b.ne	409f10 <wcrtomb@plt+0x5420>  // b.any
  409f08:	bl	42d568 <wcrtomb@plt+0x28a78>
  409f0c:	b	409f14 <wcrtomb@plt+0x5424>
  409f10:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  409f14:	mov	w0, #0x1                   	// #1
  409f18:	bl	425e70 <wcrtomb@plt+0x21380>
  409f1c:	b	409f68 <wcrtomb@plt+0x5478>
  409f20:	ldr	w8, [sp, #144]
  409f24:	and	w9, w8, #0xf000
  409f28:	cmp	w9, #0x4, lsl #12
  409f2c:	b.ne	409e58 <wcrtomb@plt+0x5368>  // b.any
  409f30:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409f34:	ldr	w9, [x9, #3192]
  409f38:	eor	w8, w9, w8
  409f3c:	tst	w8, #0xfff
  409f40:	b.eq	409f68 <wcrtomb@plt+0x5478>  // b.none
  409f44:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  409f48:	add	x1, x1, #0x7d5
  409f4c:	mov	w2, #0x5                   	// #5
  409f50:	mov	x0, xzr
  409f54:	bl	4048b0 <dcgettext@plt>
  409f58:	mov	x1, x0
  409f5c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409f60:	add	x0, x0, #0xc10
  409f64:	bl	409704 <wcrtomb@plt+0x4c14>
  409f68:	add	sp, sp, #0x480
  409f6c:	ldp	x20, x19, [sp, #64]
  409f70:	ldp	x22, x21, [sp, #48]
  409f74:	ldp	x24, x23, [sp, #32]
  409f78:	ldr	x28, [sp, #16]
  409f7c:	ldp	x29, x30, [sp], #80
  409f80:	ret
  409f84:	mov	x0, x19
  409f88:	bl	42cbf8 <wcrtomb@plt+0x28108>
  409f8c:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  409f90:	b	409f14 <wcrtomb@plt+0x5424>
  409f94:	str	w19, [x20, #3496]
  409f98:	b	409920 <wcrtomb@plt+0x4e30>
  409f9c:	adrp	x0, 40a000 <wcrtomb@plt+0x5510>
  409fa0:	add	x0, x0, #0x4e8
  409fa4:	bl	40a400 <wcrtomb@plt+0x5910>
  409fa8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  409fac:	ldr	w8, [x8, #3548]
  409fb0:	cmp	w8, #0x1
  409fb4:	b.ne	409fe0 <wcrtomb@plt+0x54f0>  // b.any
  409fb8:	ldr	x8, [sp, #176]
  409fbc:	cbz	x8, 409fe0 <wcrtomb@plt+0x54f0>
  409fc0:	ldp	x3, x4, [sp, #200]
  409fc4:	ldr	w0, [x20, #880]
  409fc8:	ldr	w1, [x21, #1864]
  409fcc:	mov	x2, x19
  409fd0:	bl	41ca50 <wcrtomb@plt+0x17f60>
  409fd4:	cbz	w0, 409fe0 <wcrtomb@plt+0x54f0>
  409fd8:	mov	x0, x19
  409fdc:	bl	42d758 <wcrtomb@plt+0x28c68>
  409fe0:	ldr	w0, [x20, #880]
  409fe4:	bl	4044d0 <close@plt>
  409fe8:	cbz	w0, 409f68 <wcrtomb@plt+0x5478>
  409fec:	mov	x0, x19
  409ff0:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  409ff4:	b	409f68 <wcrtomb@plt+0x5478>
  409ff8:	ldr	x0, [x21, #3096]
  409ffc:	bl	42cbf8 <wcrtomb@plt+0x28108>
  40a000:	b	409cf8 <wcrtomb@plt+0x5208>
  40a004:	ldr	x0, [x21, #3096]
  40a008:	mov	x1, x19
  40a00c:	bl	42d298 <wcrtomb@plt+0x287a8>
  40a010:	mov	w0, #0x1                   	// #1
  40a014:	bl	425e70 <wcrtomb@plt+0x21380>
  40a018:	mov	w0, w20
  40a01c:	bl	4044d0 <close@plt>
  40a020:	cbz	w0, 409f68 <wcrtomb@plt+0x5478>
  40a024:	ldr	x0, [x21, #3096]
  40a028:	b	409ff0 <wcrtomb@plt+0x5500>
  40a02c:	sub	sp, sp, #0x80
  40a030:	stp	x29, x30, [sp, #32]
  40a034:	stp	x28, x27, [sp, #48]
  40a038:	stp	x26, x25, [sp, #64]
  40a03c:	stp	x24, x23, [sp, #80]
  40a040:	stp	x22, x21, [sp, #96]
  40a044:	stp	x20, x19, [sp, #112]
  40a048:	add	x29, sp, #0x20
  40a04c:	bl	42d9dc <wcrtomb@plt+0x28eec>
  40a050:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a054:	tbz	w0, #0, 40a154 <wcrtomb@plt+0x5664>
  40a058:	ldr	x8, [x21, #4000]
  40a05c:	cbz	x8, 40a064 <wcrtomb@plt+0x5574>
  40a060:	blr	x8
  40a064:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a068:	add	x1, x1, #0x6c0
  40a06c:	mov	w2, #0x5                   	// #5
  40a070:	mov	x0, xzr
  40a074:	bl	4048b0 <dcgettext@plt>
  40a078:	mov	x2, x0
  40a07c:	mov	w0, wzr
  40a080:	mov	w1, wzr
  40a084:	bl	403f60 <error@plt>
  40a088:	mov	w19, #0x1                   	// #1
  40a08c:	bl	429c3c <wcrtomb@plt+0x2514c>
  40a090:	tbnz	w0, #0, 40a160 <wcrtomb@plt+0x5670>
  40a094:	cbz	w19, 40a0c8 <wcrtomb@plt+0x55d8>
  40a098:	ldr	x8, [x21, #4000]
  40a09c:	cbz	x8, 40a0a4 <wcrtomb@plt+0x55b4>
  40a0a0:	blr	x8
  40a0a4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a0a8:	add	x1, x1, #0x724
  40a0ac:	mov	w2, #0x5                   	// #5
  40a0b0:	mov	x0, xzr
  40a0b4:	bl	4048b0 <dcgettext@plt>
  40a0b8:	mov	x2, x0
  40a0bc:	mov	w0, wzr
  40a0c0:	mov	w1, wzr
  40a0c4:	bl	403f60 <error@plt>
  40a0c8:	bl	415300 <wcrtomb@plt+0x10810>
  40a0cc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a0d0:	ldr	x8, [x19, #888]
  40a0d4:	cbnz	x8, 40a0fc <wcrtomb@plt+0x560c>
  40a0d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a0dc:	ldr	x1, [x8, #3912]
  40a0e0:	add	x0, sp, #0x8
  40a0e4:	bl	41d150 <wcrtomb@plt+0x18660>
  40a0e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a0ec:	ldr	x8, [x8, #3824]
  40a0f0:	str	x0, [x19, #888]
  40a0f4:	cbz	x8, 40a0fc <wcrtomb@plt+0x560c>
  40a0f8:	bl	4166d8 <wcrtomb@plt+0x11be8>
  40a0fc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a100:	ldr	w0, [x19, #3968]
  40a104:	bl	4041b0 <fsync@plt>
  40a108:	ldr	w0, [x19, #3968]
  40a10c:	mov	w1, #0x24b                 	// #587
  40a110:	bl	404aa0 <ioctl@plt>
  40a114:	ldr	w0, [x19, #3968]
  40a118:	mov	w8, #0x2                   	// #2
  40a11c:	mov	w9, #0x40000000            	// #1073741824
  40a120:	strh	w8, [sp, #8]
  40a124:	mov	w8, #0x1                   	// #1
  40a128:	cmp	w0, w9
  40a12c:	str	w8, [sp, #12]
  40a130:	b.lt	40a19c <wcrtomb@plt+0x56ac>  // b.tstop
  40a134:	mov	w8, #0xc0000000            	// #-1073741824
  40a138:	mov	w1, #0x6d01                	// #27905
  40a13c:	add	w0, w0, w8
  40a140:	add	x2, sp, #0x8
  40a144:	movk	w1, #0x4008, lsl #16
  40a148:	bl	42e91c <wcrtomb@plt+0x29e2c>
  40a14c:	tbz	w0, #31, 40a250 <wcrtomb@plt+0x5760>
  40a150:	b	40a1b0 <wcrtomb@plt+0x56c0>
  40a154:	mov	w19, wzr
  40a158:	bl	429c3c <wcrtomb@plt+0x2514c>
  40a15c:	tbz	w0, #0, 40a094 <wcrtomb@plt+0x55a4>
  40a160:	ldr	x8, [x21, #4000]
  40a164:	cbz	x8, 40a16c <wcrtomb@plt+0x567c>
  40a168:	blr	x8
  40a16c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a170:	add	x1, x1, #0x6fb
  40a174:	mov	w2, #0x5                   	// #5
  40a178:	mov	x0, xzr
  40a17c:	bl	4048b0 <dcgettext@plt>
  40a180:	mov	x2, x0
  40a184:	mov	w0, wzr
  40a188:	mov	w1, wzr
  40a18c:	bl	403f60 <error@plt>
  40a190:	ldr	x8, [x21, #4000]
  40a194:	cbnz	x8, 40a0a0 <wcrtomb@plt+0x55b0>
  40a198:	b	40a0a4 <wcrtomb@plt+0x55b4>
  40a19c:	mov	w1, #0x6d01                	// #27905
  40a1a0:	add	x2, sp, #0x8
  40a1a4:	movk	w1, #0x4008, lsl #16
  40a1a8:	bl	404aa0 <ioctl@plt>
  40a1ac:	tbz	w0, #31, 40a250 <wcrtomb@plt+0x5760>
  40a1b0:	bl	4049c0 <__errno_location@plt>
  40a1b4:	ldr	w8, [x0]
  40a1b8:	cmp	w8, #0x5
  40a1bc:	b.ne	40a204 <wcrtomb@plt+0x5714>  // b.any
  40a1c0:	ldr	w0, [x19, #3968]
  40a1c4:	mov	w8, #0x40000000            	// #1073741824
  40a1c8:	cmp	w0, w8
  40a1cc:	b.lt	40a1f0 <wcrtomb@plt+0x5700>  // b.tstop
  40a1d0:	mov	w8, #0xc0000000            	// #-1073741824
  40a1d4:	mov	w1, #0x6d01                	// #27905
  40a1d8:	add	w0, w0, w8
  40a1dc:	add	x2, sp, #0x8
  40a1e0:	movk	w1, #0x4008, lsl #16
  40a1e4:	bl	42e91c <wcrtomb@plt+0x29e2c>
  40a1e8:	tbz	w0, #31, 40a250 <wcrtomb@plt+0x5760>
  40a1ec:	b	40a204 <wcrtomb@plt+0x5714>
  40a1f0:	mov	w1, #0x6d01                	// #27905
  40a1f4:	add	x2, sp, #0x8
  40a1f8:	movk	w1, #0x4008, lsl #16
  40a1fc:	bl	404aa0 <ioctl@plt>
  40a200:	tbz	w0, #31, 40a250 <wcrtomb@plt+0x5760>
  40a204:	ldr	w0, [x19, #3968]
  40a208:	mov	w8, #0x40000000            	// #1073741824
  40a20c:	cmp	w0, w8
  40a210:	b.lt	40a240 <wcrtomb@plt+0x5750>  // b.tstop
  40a214:	mov	w8, #0xc0000000            	// #-1073741824
  40a218:	add	w0, w0, w8
  40a21c:	mov	x1, xzr
  40a220:	mov	w2, wzr
  40a224:	bl	42e714 <wcrtomb@plt+0x29c24>
  40a228:	cbz	x0, 40a250 <wcrtomb@plt+0x5760>
  40a22c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a230:	ldr	x8, [x8, #3680]
  40a234:	ldr	x0, [x8]
  40a238:	bl	42d334 <wcrtomb@plt+0x28844>
  40a23c:	b	40a3e0 <wcrtomb@plt+0x58f0>
  40a240:	mov	x1, xzr
  40a244:	mov	w2, wzr
  40a248:	bl	4040e0 <lseek@plt>
  40a24c:	cbnz	x0, 40a22c <wcrtomb@plt+0x573c>
  40a250:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a254:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a258:	mov	w8, #0x1                   	// #1
  40a25c:	str	wzr, [x9, #2856]
  40a260:	strb	w8, [x10, #2920]
  40a264:	bl	405828 <wcrtomb@plt+0xd38>
  40a268:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a26c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a270:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a274:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a278:	add	x19, x19, #0xb98
  40a27c:	add	x20, x20, #0xc10
  40a280:	add	x22, x22, #0x77f
  40a284:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a288:	mov	w23, #0x2                   	// #2
  40a28c:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a290:	add	x24, x24, #0xb80
  40a294:	b	40a2b4 <wcrtomb@plt+0x57c4>
  40a298:	mov	w3, #0x1                   	// #1
  40a29c:	mov	x1, x20
  40a2a0:	mov	x2, x24
  40a2a4:	bl	4194a0 <wcrtomb@plt+0x149b0>
  40a2a8:	bl	4097dc <wcrtomb@plt+0x4cec>
  40a2ac:	mov	x0, x20
  40a2b0:	bl	425f4c <wcrtomb@plt+0x2145c>
  40a2b4:	mov	x0, x19
  40a2b8:	mov	x1, x20
  40a2bc:	mov	w2, wzr
  40a2c0:	bl	41901c <wcrtomb@plt+0x1452c>
  40a2c4:	mov	w25, w0
  40a2c8:	cmp	w0, #0x5
  40a2cc:	b.ne	40a33c <wcrtomb@plt+0x584c>  // b.any
  40a2d0:	mov	x26, xzr
  40a2d4:	ldr	x0, [x19]
  40a2d8:	bl	405640 <wcrtomb@plt+0xb50>
  40a2dc:	mov	x0, x19
  40a2e0:	mov	x1, x20
  40a2e4:	mov	w2, wzr
  40a2e8:	bl	41901c <wcrtomb@plt+0x1452c>
  40a2ec:	cmp	w0, #0x5
  40a2f0:	add	x26, x26, #0x1
  40a2f4:	b.eq	40a2d4 <wcrtomb@plt+0x57e4>  // b.none
  40a2f8:	ldr	x8, [x21, #4000]
  40a2fc:	mov	w25, w0
  40a300:	cbz	x8, 40a308 <wcrtomb@plt+0x5818>
  40a304:	blr	x8
  40a308:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a30c:	mov	w4, #0x5                   	// #5
  40a310:	mov	x0, xzr
  40a314:	add	x1, x1, #0x754
  40a318:	mov	x2, x22
  40a31c:	mov	x3, x26
  40a320:	bl	4047d0 <dcngettext@plt>
  40a324:	mov	x2, x0
  40a328:	mov	w0, wzr
  40a32c:	mov	w1, wzr
  40a330:	mov	w3, w26
  40a334:	bl	403f60 <error@plt>
  40a338:	str	w23, [x28, #2352]
  40a33c:	cmp	w25, #0x4
  40a340:	b.eq	40a3cc <wcrtomb@plt+0x58dc>  // b.none
  40a344:	ldr	x0, [x27, #2968]
  40a348:	cmp	w25, #0x3
  40a34c:	b.ne	40a298 <wcrtomb@plt+0x57a8>  // b.any
  40a350:	bl	405640 <wcrtomb@plt+0xb50>
  40a354:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a358:	ldrb	w8, [x8, #3069]
  40a35c:	cbnz	w8, 40a2b4 <wcrtomb@plt+0x57c4>
  40a360:	mov	x0, x19
  40a364:	mov	x1, x20
  40a368:	mov	w2, wzr
  40a36c:	bl	41901c <wcrtomb@plt+0x1452c>
  40a370:	cmp	w0, #0x3
  40a374:	b.eq	40a3cc <wcrtomb@plt+0x58dc>  // b.none
  40a378:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40a37c:	ldrb	w8, [x8, #3712]
  40a380:	tbz	w8, #0, 40a2b4 <wcrtomb@plt+0x57c4>
  40a384:	ldr	x8, [x21, #4000]
  40a388:	cbz	x8, 40a390 <wcrtomb@plt+0x58a0>
  40a38c:	blr	x8
  40a390:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a394:	mov	w2, #0x5                   	// #5
  40a398:	mov	x0, xzr
  40a39c:	add	x1, x1, #0x7ab
  40a3a0:	bl	4048b0 <dcgettext@plt>
  40a3a4:	mov	x25, x0
  40a3a8:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40a3ac:	add	x1, sp, #0x8
  40a3b0:	bl	440290 <argp_parse@@Base+0x5be4>
  40a3b4:	mov	x3, x0
  40a3b8:	mov	w0, wzr
  40a3bc:	mov	w1, wzr
  40a3c0:	mov	x2, x25
  40a3c4:	bl	403f60 <error@plt>
  40a3c8:	b	40a2b4 <wcrtomb@plt+0x57c4>
  40a3cc:	mov	w8, #0x1                   	// #1
  40a3d0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a3d4:	str	w8, [x9, #2856]
  40a3d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a3dc:	strb	wzr, [x8, #2920]
  40a3e0:	ldp	x20, x19, [sp, #112]
  40a3e4:	ldp	x22, x21, [sp, #96]
  40a3e8:	ldp	x24, x23, [sp, #80]
  40a3ec:	ldp	x26, x25, [sp, #64]
  40a3f0:	ldp	x28, x27, [sp, #48]
  40a3f4:	ldp	x29, x30, [sp, #32]
  40a3f8:	add	sp, sp, #0x80
  40a3fc:	ret
  40a400:	stp	x29, x30, [sp, #-64]!
  40a404:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a408:	stp	x22, x21, [sp, #32]
  40a40c:	stp	x20, x19, [sp, #48]
  40a410:	add	x8, x8, #0xc10
  40a414:	ldr	x19, [x8, #136]
  40a418:	mov	x20, x0
  40a41c:	mov	x0, x8
  40a420:	str	x23, [sp, #16]
  40a424:	mov	x29, sp
  40a428:	bl	404ca8 <wcrtomb@plt+0x1b8>
  40a42c:	cbz	x19, 40a480 <wcrtomb@plt+0x5990>
  40a430:	adrp	x23, 40a000 <wcrtomb@plt+0x5510>
  40a434:	add	x23, x23, #0x5e8
  40a438:	bl	405310 <wcrtomb@plt+0x820>
  40a43c:	cbz	x0, 40a494 <wcrtomb@plt+0x59a4>
  40a440:	mov	x21, x0
  40a444:	bl	405684 <wcrtomb@plt+0xb94>
  40a448:	cmp	x0, x19
  40a44c:	csel	x22, x19, x0, hi  // hi = pmore
  40a450:	mov	x0, x22
  40a454:	mov	x1, x21
  40a458:	blr	x20
  40a45c:	add	x8, x21, x22
  40a460:	cmp	w0, #0x0
  40a464:	sub	x0, x8, #0x1
  40a468:	csel	x20, x23, x20, eq  // eq = none
  40a46c:	bl	405640 <wcrtomb@plt+0xb50>
  40a470:	sub	x19, x19, x22
  40a474:	mov	x0, x19
  40a478:	bl	404d8c <wcrtomb@plt+0x29c>
  40a47c:	cbnz	x19, 40a438 <wcrtomb@plt+0x5948>
  40a480:	ldp	x20, x19, [sp, #48]
  40a484:	ldp	x22, x21, [sp, #32]
  40a488:	ldr	x23, [sp, #16]
  40a48c:	ldp	x29, x30, [sp], #64
  40a490:	b	404d34 <wcrtomb@plt+0x244>
  40a494:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a498:	ldr	x8, [x8, #4000]
  40a49c:	cbz	x8, 40a4a4 <wcrtomb@plt+0x59b4>
  40a4a0:	blr	x8
  40a4a4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a4a8:	add	x1, x1, #0x818
  40a4ac:	mov	w2, #0x5                   	// #5
  40a4b0:	mov	x0, xzr
  40a4b4:	bl	4048b0 <dcgettext@plt>
  40a4b8:	mov	x2, x0
  40a4bc:	mov	w0, wzr
  40a4c0:	mov	w1, wzr
  40a4c4:	bl	403f60 <error@plt>
  40a4c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a4cc:	mov	w9, #0x2                   	// #2
  40a4d0:	str	w9, [x8, #2352]
  40a4d4:	ldp	x20, x19, [sp, #48]
  40a4d8:	ldp	x22, x21, [sp, #32]
  40a4dc:	ldr	x23, [sp, #16]
  40a4e0:	ldp	x29, x30, [sp], #64
  40a4e4:	ret
  40a4e8:	stp	x29, x30, [sp, #-48]!
  40a4ec:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a4f0:	add	x9, x9, #0x370
  40a4f4:	ldr	w8, [x9]
  40a4f8:	str	x21, [sp, #16]
  40a4fc:	mov	x21, x1
  40a500:	ldr	x1, [x9, #8]
  40a504:	stp	x20, x19, [sp, #32]
  40a508:	mov	x19, x0
  40a50c:	mov	w0, w8
  40a510:	mov	x2, x19
  40a514:	mov	x29, sp
  40a518:	bl	41c904 <wcrtomb@plt+0x17e14>
  40a51c:	cmp	x0, x19
  40a520:	b.ne	40a564 <wcrtomb@plt+0x5a74>  // b.any
  40a524:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a528:	ldr	x1, [x8, #888]
  40a52c:	mov	x0, x21
  40a530:	mov	x2, x19
  40a534:	bl	404400 <bcmp@plt>
  40a538:	cbz	w0, 40a5ac <wcrtomb@plt+0x5abc>
  40a53c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a540:	add	x1, x1, #0x873
  40a544:	mov	w2, #0x5                   	// #5
  40a548:	mov	x0, xzr
  40a54c:	bl	4048b0 <dcgettext@plt>
  40a550:	mov	x1, x0
  40a554:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a558:	add	x0, x0, #0xc10
  40a55c:	bl	409704 <wcrtomb@plt+0x4c14>
  40a560:	b	40a5d4 <wcrtomb@plt+0x5ae4>
  40a564:	mov	x20, x0
  40a568:	cmn	x0, #0x1
  40a56c:	b.eq	40a5c0 <wcrtomb@plt+0x5ad0>  // b.none
  40a570:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a574:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a578:	add	x1, x1, #0x832
  40a57c:	add	x2, x2, #0x852
  40a580:	mov	w4, #0x5                   	// #5
  40a584:	mov	x0, xzr
  40a588:	mov	x3, x19
  40a58c:	bl	4047d0 <dcngettext@plt>
  40a590:	mov	x1, x0
  40a594:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a598:	add	x0, x0, #0xc10
  40a59c:	mov	x2, x20
  40a5a0:	mov	x3, x19
  40a5a4:	bl	409704 <wcrtomb@plt+0x4c14>
  40a5a8:	b	40a5d4 <wcrtomb@plt+0x5ae4>
  40a5ac:	mov	w0, #0x1                   	// #1
  40a5b0:	ldp	x20, x19, [sp, #32]
  40a5b4:	ldr	x21, [sp, #16]
  40a5b8:	ldp	x29, x30, [sp], #48
  40a5bc:	ret
  40a5c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a5c4:	ldr	x0, [x8, #3096]
  40a5c8:	bl	42cd08 <wcrtomb@plt+0x28218>
  40a5cc:	mov	w0, #0x1                   	// #1
  40a5d0:	bl	425e70 <wcrtomb@plt+0x21380>
  40a5d4:	mov	w0, wzr
  40a5d8:	ldp	x20, x19, [sp, #32]
  40a5dc:	ldr	x21, [sp, #16]
  40a5e0:	ldp	x29, x30, [sp], #48
  40a5e4:	ret
  40a5e8:	mov	w0, #0x1                   	// #1
  40a5ec:	ret
  40a5f0:	stp	x29, x30, [sp, #-64]!
  40a5f4:	stp	x22, x21, [sp, #32]
  40a5f8:	mov	x21, x0
  40a5fc:	mov	w0, #0x28                  	// #40
  40a600:	str	x23, [sp, #16]
  40a604:	stp	x20, x19, [sp, #48]
  40a608:	mov	x29, sp
  40a60c:	mov	x19, x2
  40a610:	mov	w20, w1
  40a614:	bl	44a010 <argp_parse@@Base+0xf964>
  40a618:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a61c:	ldr	x8, [x23, #920]
  40a620:	mov	x22, x0
  40a624:	str	x21, [x0]
  40a628:	str	w20, [x0, #16]
  40a62c:	stp	x19, x8, [x0, #24]
  40a630:	mov	x0, x21
  40a634:	bl	403f00 <strlen@plt>
  40a638:	str	x0, [x22, #8]
  40a63c:	str	x22, [x23, #920]
  40a640:	ldp	x20, x19, [sp, #48]
  40a644:	ldp	x22, x21, [sp, #32]
  40a648:	ldr	x23, [sp, #16]
  40a64c:	ldp	x29, x30, [sp], #64
  40a650:	ret
  40a654:	stp	x29, x30, [sp, #-48]!
  40a658:	stp	x22, x21, [sp, #16]
  40a65c:	stp	x20, x19, [sp, #32]
  40a660:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a664:	ldr	w8, [x8, #3636]
  40a668:	mov	x29, sp
  40a66c:	cbz	w8, 40a67c <wcrtomb@plt+0x5b8c>
  40a670:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40a674:	ldrb	w8, [x8, #3712]
  40a678:	tbnz	w8, #2, 40a68c <wcrtomb@plt+0x5b9c>
  40a67c:	ldp	x20, x19, [sp, #32]
  40a680:	ldp	x22, x21, [sp, #16]
  40a684:	ldp	x29, x30, [sp], #48
  40a688:	ret
  40a68c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a690:	ldr	x8, [x8, #4000]
  40a694:	mov	x19, x2
  40a698:	mov	x20, x1
  40a69c:	mov	x21, x0
  40a6a0:	cbz	x8, 40a6a8 <wcrtomb@plt+0x5bb8>
  40a6a4:	blr	x8
  40a6a8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a6ac:	add	x1, x1, #0x8e2
  40a6b0:	mov	w2, #0x5                   	// #5
  40a6b4:	mov	x0, xzr
  40a6b8:	bl	4048b0 <dcgettext@plt>
  40a6bc:	mov	x22, x0
  40a6c0:	mov	x0, x21
  40a6c4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40a6c8:	mov	x21, x0
  40a6cc:	mov	w0, #0x1                   	// #1
  40a6d0:	mov	x1, x20
  40a6d4:	bl	448a64 <argp_parse@@Base+0xe3b8>
  40a6d8:	mov	x2, x22
  40a6dc:	mov	x3, x21
  40a6e0:	mov	x5, x19
  40a6e4:	ldp	x20, x19, [sp, #32]
  40a6e8:	ldp	x22, x21, [sp, #16]
  40a6ec:	mov	x4, x0
  40a6f0:	mov	w0, wzr
  40a6f4:	mov	w1, wzr
  40a6f8:	ldp	x29, x30, [sp], #48
  40a6fc:	b	403f60 <error@plt>
  40a700:	stp	x29, x30, [sp, #-64]!
  40a704:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a708:	stp	x24, x23, [sp, #16]
  40a70c:	ldr	x23, [x8, #920]
  40a710:	stp	x22, x21, [sp, #32]
  40a714:	stp	x20, x19, [sp, #48]
  40a718:	mov	x29, sp
  40a71c:	cbz	x23, 40a784 <wcrtomb@plt+0x5c94>
  40a720:	mov	x19, x1
  40a724:	mov	x20, x0
  40a728:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a72c:	b	40a738 <wcrtomb@plt+0x5c48>
  40a730:	ldr	x23, [x23, #32]
  40a734:	cbz	x23, 40a784 <wcrtomb@plt+0x5c94>
  40a738:	ldr	x1, [x23]
  40a73c:	ldr	w2, [x24, #3700]
  40a740:	mov	x0, x20
  40a744:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  40a748:	tbnz	w0, #31, 40a730 <wcrtomb@plt+0x5c40>
  40a74c:	ldr	x8, [x23, #24]
  40a750:	mov	w21, w0
  40a754:	cbz	x8, 40a79c <wcrtomb@plt+0x5cac>
  40a758:	mov	w0, w21
  40a75c:	blr	x8
  40a760:	mov	w22, w0
  40a764:	mov	w0, w21
  40a768:	bl	4044d0 <close@plt>
  40a76c:	tbz	w22, #0, 40a730 <wcrtomb@plt+0x5c40>
  40a770:	cbz	x19, 40a77c <wcrtomb@plt+0x5c8c>
  40a774:	ldr	x8, [x23]
  40a778:	str	x8, [x19]
  40a77c:	ldr	w0, [x23, #16]
  40a780:	b	40a788 <wcrtomb@plt+0x5c98>
  40a784:	mov	w0, wzr
  40a788:	ldp	x20, x19, [sp, #48]
  40a78c:	ldp	x22, x21, [sp, #32]
  40a790:	ldp	x24, x23, [sp, #16]
  40a794:	ldp	x29, x30, [sp], #64
  40a798:	ret
  40a79c:	mov	w0, w21
  40a7a0:	bl	4044d0 <close@plt>
  40a7a4:	cbnz	x19, 40a774 <wcrtomb@plt+0x5c84>
  40a7a8:	b	40a77c <wcrtomb@plt+0x5c8c>
  40a7ac:	stp	x29, x30, [sp, #-64]!
  40a7b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a7b4:	ldrb	w9, [x8, #896]
  40a7b8:	stp	x22, x21, [sp, #32]
  40a7bc:	stp	x20, x19, [sp, #48]
  40a7c0:	mov	w19, w2
  40a7c4:	mov	x20, x1
  40a7c8:	mov	x21, x0
  40a7cc:	stp	x24, x23, [sp, #16]
  40a7d0:	mov	x29, sp
  40a7d4:	tbnz	w9, #0, 40a7fc <wcrtomb@plt+0x5d0c>
  40a7d8:	mov	w9, #0x1                   	// #1
  40a7dc:	mov	w0, #0x2                   	// #2
  40a7e0:	strb	w9, [x8, #896]
  40a7e4:	bl	4044c0 <strerror@plt>
  40a7e8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  40a7ec:	add	x1, x1, #0xb36
  40a7f0:	mov	w2, #0x5                   	// #5
  40a7f4:	mov	x0, xzr
  40a7f8:	bl	4048b0 <dcgettext@plt>
  40a7fc:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40a800:	add	x8, x21, #0x198
  40a804:	add	x9, x9, #0x748
  40a808:	cmp	x21, #0x0
  40a80c:	csel	x24, x9, x8, eq  // eq = none
  40a810:	ldr	w0, [x24]
  40a814:	mov	x1, x20
  40a818:	mov	w2, w19
  40a81c:	bl	4049a0 <openat@plt>
  40a820:	mov	w22, w0
  40a824:	tbz	w0, #31, 40a8a4 <wcrtomb@plt+0x5db4>
  40a828:	bl	4049c0 <__errno_location@plt>
  40a82c:	cbz	x21, 40a8a4 <wcrtomb@plt+0x5db4>
  40a830:	mov	x23, x0
  40a834:	ldr	w8, [x23]
  40a838:	cmp	w8, #0x18
  40a83c:	b.ne	40a8a4 <wcrtomb@plt+0x5db4>  // b.any
  40a840:	ldr	x8, [x21, #392]
  40a844:	cbz	x8, 40a8a4 <wcrtomb@plt+0x5db4>
  40a848:	ldr	x0, [x8, #392]
  40a84c:	cbnz	x0, 40a85c <wcrtomb@plt+0x5d6c>
  40a850:	b	40a89c <wcrtomb@plt+0x5dac>
  40a854:	mov	x0, x8
  40a858:	cbz	x8, 40a89c <wcrtomb@plt+0x5dac>
  40a85c:	ldr	w9, [x0, #408]
  40a860:	ldr	x8, [x0, #392]
  40a864:	cmp	w9, #0x1
  40a868:	b.lt	40a854 <wcrtomb@plt+0x5d64>  // b.tstop
  40a86c:	cbz	x8, 40a87c <wcrtomb@plt+0x5d8c>
  40a870:	ldr	w9, [x8, #408]
  40a874:	cmp	w9, #0x1
  40a878:	b.ge	40a854 <wcrtomb@plt+0x5d64>  // b.tcont
  40a87c:	bl	425ec8 <wcrtomb@plt+0x213d8>
  40a880:	ldr	w0, [x24]
  40a884:	mov	x1, x20
  40a888:	mov	w2, w19
  40a88c:	bl	4049a0 <openat@plt>
  40a890:	mov	w22, w0
  40a894:	tbnz	w0, #31, 40a834 <wcrtomb@plt+0x5d44>
  40a898:	b	40a8a4 <wcrtomb@plt+0x5db4>
  40a89c:	mov	w8, #0x18                  	// #24
  40a8a0:	str	w8, [x23]
  40a8a4:	mov	w0, w22
  40a8a8:	ldp	x20, x19, [sp, #48]
  40a8ac:	ldp	x22, x21, [sp, #32]
  40a8b0:	ldp	x24, x23, [sp, #16]
  40a8b4:	ldp	x29, x30, [sp], #64
  40a8b8:	ret
  40a8bc:	sub	sp, sp, #0x40
  40a8c0:	add	x1, sp, #0x4
  40a8c4:	mov	w2, #0x2b                  	// #43
  40a8c8:	stp	x29, x30, [sp, #48]
  40a8cc:	add	x29, sp, #0x30
  40a8d0:	bl	404830 <read@plt>
  40a8d4:	cmp	x0, #0x2b
  40a8d8:	b.ne	40a994 <wcrtomb@plt+0x5ea4>  // b.any
  40a8dc:	mov	x8, #0x6953                	// #26963
  40a8e0:	ldur	x9, [sp, #4]
  40a8e4:	movk	x8, #0x6e67, lsl #16
  40a8e8:	movk	x8, #0x7461, lsl #32
  40a8ec:	movk	x8, #0x7275, lsl #48
  40a8f0:	ldur	x10, [sp, #12]
  40a8f4:	mov	x11, #0x3a65                	// #14949
  40a8f8:	ldur	x14, [sp, #28]
  40a8fc:	eor	x8, x9, x8
  40a900:	mov	x9, #0x3731                	// #14129
  40a904:	movk	x11, #0x3820, lsl #16
  40a908:	movk	x9, #0x3732, lsl #16
  40a90c:	movk	x11, #0x3461, lsl #32
  40a910:	movk	x9, #0x3938, lsl #32
  40a914:	movk	x11, #0x3737, lsl #48
  40a918:	movk	x9, #0x3066, lsl #48
  40a91c:	mov	x12, #0x3566                	// #13670
  40a920:	ldur	x13, [sp, #20]
  40a924:	eor	x10, x10, x11
  40a928:	ldur	x11, [sp, #36]
  40a92c:	eor	x9, x14, x9
  40a930:	mov	x14, #0x3836                	// #14390
  40a934:	movk	x12, #0x3739, lsl #16
  40a938:	movk	x14, #0x3638, lsl #16
  40a93c:	movk	x12, #0x3264, lsl #32
  40a940:	movk	x14, #0x3038, lsl #32
  40a944:	movk	x12, #0x6438, lsl #48
  40a948:	movk	x14, #0x6236, lsl #48
  40a94c:	eor	x12, x13, x12
  40a950:	ldur	x13, [sp, #39]
  40a954:	eor	x11, x11, x14
  40a958:	mov	x14, #0x3836                	// #14390
  40a95c:	movk	x14, #0x3630, lsl #16
  40a960:	movk	x14, #0x6362, lsl #32
  40a964:	movk	x14, #0x3535, lsl #48
  40a968:	eor	x13, x13, x14
  40a96c:	orr	x8, x8, x10
  40a970:	orr	x9, x12, x9
  40a974:	orr	x10, x11, x13
  40a978:	orr	x8, x8, x9
  40a97c:	orr	x8, x8, x10
  40a980:	cmp	x8, #0x0
  40a984:	cset	w0, eq  // eq = none
  40a988:	ldp	x29, x30, [sp, #48]
  40a98c:	add	sp, sp, #0x40
  40a990:	ret
  40a994:	mov	w0, wzr
  40a998:	ldp	x29, x30, [sp, #48]
  40a99c:	add	sp, sp, #0x40
  40a9a0:	ret
  40a9a4:	mov	x8, x0
  40a9a8:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40a9ac:	mov	x5, x2
  40a9b0:	lsr	x0, x0, #63
  40a9b4:	add	x6, x6, #0x938
  40a9b8:	mov	w2, #0x8                   	// #8
  40a9bc:	mov	x4, x1
  40a9c0:	mov	x1, x8
  40a9c4:	mov	x3, xzr
  40a9c8:	b	40a9cc <wcrtomb@plt+0x5edc>
  40a9cc:	sub	sp, sp, #0xd0
  40a9d0:	stp	x22, x21, [sp, #176]
  40a9d4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40a9d8:	ldr	w8, [x22, #3808]
  40a9dc:	stp	x28, x27, [sp, #128]
  40a9e0:	stp	x26, x25, [sp, #144]
  40a9e4:	stp	x24, x23, [sp, #160]
  40a9e8:	stp	x20, x19, [sp, #192]
  40a9ec:	mov	x21, x6
  40a9f0:	mov	x19, x5
  40a9f4:	mov	x20, x4
  40a9f8:	mov	x25, x3
  40a9fc:	mov	x23, x1
  40aa00:	mov	w27, w0
  40aa04:	stp	x29, x30, [sp, #112]
  40aa08:	add	x29, sp, #0x70
  40aa0c:	cbnz	w0, 40aa30 <wcrtomb@plt+0x5f40>
  40aa10:	sub	x9, x19, #0x1
  40aa14:	mov	x10, #0xffffffffffffffff    	// #-1
  40aa18:	add	x11, x9, x9, lsl #1
  40aa1c:	lsl	x12, x10, x11
  40aa20:	cmp	x11, #0x40
  40aa24:	csinv	x10, x10, x12, cs  // cs = hs, nlast
  40aa28:	cmp	x10, x23
  40aa2c:	b.cs	40ac78 <wcrtomb@plt+0x6188>  // b.hs, b.nlast
  40aa30:	orr	w26, w8, #0x4
  40aa34:	cmp	w26, #0x6
  40aa38:	b.ne	40aa94 <wcrtomb@plt+0x5fa4>  // b.any
  40aa3c:	sub	x24, x19, #0x1
  40aa40:	cmp	w27, #0x0
  40aa44:	mov	x8, #0xffffffffffffffff    	// #-1
  40aa48:	lsl	x10, x24, #3
  40aa4c:	cinv	x9, x23, ne  // ne = any
  40aa50:	lsl	x11, x8, x10
  40aa54:	cmp	x10, #0x40
  40aa58:	csinv	x8, x8, x11, cs  // cs = hs, nlast
  40aa5c:	cmp	x9, x8
  40aa60:	b.ls	40ac4c <wcrtomb@plt+0x615c>  // b.plast
  40aa64:	cbz	w27, 40aa78 <wcrtomb@plt+0x5f88>
  40aa68:	lsl	x28, x2, #3
  40aa6c:	add	x8, x24, x24, lsl #1
  40aa70:	cmp	x28, x8
  40aa74:	b.ls	40aca0 <wcrtomb@plt+0x61b0>  // b.plast
  40aa78:	lsl	x8, x19, #3
  40aa7c:	sub	x8, x8, #0x8
  40aa80:	cmp	x8, #0x3f
  40aa84:	mov	x28, #0xffffffffffffffff    	// #-1
  40aa88:	str	x2, [sp]
  40aa8c:	b.ls	40aab0 <wcrtomb@plt+0x5fc0>  // b.plast
  40aa90:	b	40aab8 <wcrtomb@plt+0x5fc8>
  40aa94:	add	x8, x19, x19, lsl #1
  40aa98:	sub	x8, x8, #0x3
  40aa9c:	cmp	x8, #0x3f
  40aaa0:	mov	x28, #0xffffffffffffffff    	// #-1
  40aaa4:	mov	x25, xzr
  40aaa8:	str	x2, [sp]
  40aaac:	b.hi	40aab8 <wcrtomb@plt+0x5fc8>  // b.pmore
  40aab0:	lsl	x8, x28, x8
  40aab4:	mvn	x28, x8
  40aab8:	sub	x1, x29, #0x30
  40aabc:	mov	x0, x28
  40aac0:	bl	440290 <argp_parse@@Base+0x5be4>
  40aac4:	cmp	w26, #0x6
  40aac8:	mov	x24, x0
  40aacc:	b.ne	40abd4 <wcrtomb@plt+0x60e4>  // b.any
  40aad0:	adds	x8, x28, #0x1
  40aad4:	lsr	x9, x28, #1
  40aad8:	add	x10, sp, #0x28
  40aadc:	csinc	x0, x8, x9, cc  // cc = lo, ul, last
  40aae0:	orr	x1, x10, #0x1
  40aae4:	bl	440290 <argp_parse@@Base+0x5be4>
  40aae8:	mov	x26, x0
  40aaec:	mov	w8, #0x2d                  	// #45
  40aaf0:	strb	w8, [x26, #-1]!
  40aaf4:	cbz	w27, 40abe0 <wcrtomb@plt+0x60f0>
  40aaf8:	sub	x8, x29, #0x18
  40aafc:	neg	x0, x23
  40ab00:	orr	x1, x8, #0x1
  40ab04:	bl	440290 <argp_parse@@Base+0x5be4>
  40ab08:	mov	x23, x0
  40ab0c:	mov	w8, #0x2d                  	// #45
  40ab10:	strb	w8, [x23, #-1]!
  40ab14:	cbz	x25, 40abf4 <wcrtomb@plt+0x6104>
  40ab18:	add	x0, sp, #0x24
  40ab1c:	blr	x25
  40ab20:	ldr	w8, [x22, #3808]
  40ab24:	ldr	w10, [sp, #36]
  40ab28:	and	x9, x0, x28
  40ab2c:	add	x11, sp, #0xc
  40ab30:	cmp	w8, #0x6
  40ab34:	cset	w8, eq  // eq = none
  40ab38:	tst	w10, w8
  40ab3c:	cneg	x25, x9, ne  // ne = any
  40ab40:	and	w12, w10, w8
  40ab44:	orr	x1, x11, #0x1
  40ab48:	mov	x0, x25
  40ab4c:	str	w12, [sp, #36]
  40ab50:	bl	440290 <argp_parse@@Base+0x5be4>
  40ab54:	ldr	w8, [sp, #36]
  40ab58:	mov	x27, x0
  40ab5c:	cbz	w8, 40ab68 <wcrtomb@plt+0x6078>
  40ab60:	mov	w8, #0x2d                  	// #45
  40ab64:	strb	w8, [x27, #-1]!
  40ab68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ab6c:	ldr	x8, [x8, #4000]
  40ab70:	cbz	x8, 40ab78 <wcrtomb@plt+0x6088>
  40ab74:	blr	x8
  40ab78:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ab7c:	add	x1, x1, #0x9e8
  40ab80:	mov	w2, #0x5                   	// #5
  40ab84:	mov	x0, xzr
  40ab88:	bl	4048b0 <dcgettext@plt>
  40ab8c:	mov	x2, x0
  40ab90:	mov	w0, wzr
  40ab94:	mov	w1, wzr
  40ab98:	mov	x3, x23
  40ab9c:	mov	x4, x21
  40aba0:	mov	x5, x26
  40aba4:	mov	x6, x24
  40aba8:	mov	x7, x27
  40abac:	bl	403f60 <error@plt>
  40abb0:	ldr	w0, [sp, #36]
  40abb4:	ldr	x2, [sp]
  40abb8:	mov	x1, x25
  40abbc:	mov	x3, xzr
  40abc0:	mov	x4, x20
  40abc4:	mov	x5, x19
  40abc8:	mov	x6, x21
  40abcc:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40abd0:	b	40ad24 <wcrtomb@plt+0x6234>
  40abd4:	adrp	x26, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  40abd8:	add	x26, x26, #0xe98
  40abdc:	cbnz	w27, 40aaf8 <wcrtomb@plt+0x6008>
  40abe0:	sub	x1, x29, #0x18
  40abe4:	mov	x0, x23
  40abe8:	bl	440290 <argp_parse@@Base+0x5be4>
  40abec:	mov	x23, x0
  40abf0:	cbnz	x25, 40ab18 <wcrtomb@plt+0x6028>
  40abf4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40abf8:	ldr	x8, [x8, #4000]
  40abfc:	cbz	x8, 40ac04 <wcrtomb@plt+0x6114>
  40ac00:	blr	x8
  40ac04:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ac08:	add	x1, x1, #0xa19
  40ac0c:	mov	w2, #0x5                   	// #5
  40ac10:	mov	x0, xzr
  40ac14:	bl	4048b0 <dcgettext@plt>
  40ac18:	mov	x2, x0
  40ac1c:	mov	w0, wzr
  40ac20:	mov	w1, wzr
  40ac24:	mov	x3, x23
  40ac28:	mov	x4, x21
  40ac2c:	mov	x5, x26
  40ac30:	mov	x6, x24
  40ac34:	bl	403f60 <error@plt>
  40ac38:	mov	w0, wzr
  40ac3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ac40:	mov	w9, #0x2                   	// #2
  40ac44:	str	w9, [x8, #2352]
  40ac48:	b	40ad24 <wcrtomb@plt+0x6234>
  40ac4c:	cmp	w27, #0x0
  40ac50:	mov	w8, #0xffffff80            	// #-128
  40ac54:	neg	w9, w27
  40ac58:	csinv	w8, w8, wzr, eq  // eq = none
  40ac5c:	strb	w8, [x20]
  40ac60:	lsl	x8, x9, #56
  40ac64:	strb	w23, [x20, x24]
  40ac68:	subs	x24, x24, #0x1
  40ac6c:	orr	x23, x8, x23, lsr #8
  40ac70:	b.ne	40ac64 <wcrtomb@plt+0x6174>  // b.any
  40ac74:	b	40ad20 <wcrtomb@plt+0x6230>
  40ac78:	sub	x8, x20, #0x2
  40ac7c:	strb	wzr, [x20, x9]
  40ac80:	mov	w9, #0x30                  	// #48
  40ac84:	bfxil	w9, w23, #0, #3
  40ac88:	strb	w9, [x8, x19]
  40ac8c:	sub	x19, x19, #0x1
  40ac90:	cmp	x19, #0x1
  40ac94:	lsr	x23, x23, #3
  40ac98:	b.ne	40ac80 <wcrtomb@plt+0x6190>  // b.any
  40ac9c:	b	40ad20 <wcrtomb@plt+0x6230>
  40aca0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40aca4:	ldrb	w9, [x8, #900]
  40aca8:	tbnz	w9, #0, 40ace8 <wcrtomb@plt+0x61f8>
  40acac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40acb0:	ldr	x9, [x9, #4000]
  40acb4:	mov	w10, #0x1                   	// #1
  40acb8:	strb	w10, [x8, #900]
  40acbc:	cbz	x9, 40acc4 <wcrtomb@plt+0x61d4>
  40acc0:	blr	x9
  40acc4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40acc8:	add	x1, x1, #0x9c6
  40accc:	mov	w2, #0x5                   	// #5
  40acd0:	mov	x0, xzr
  40acd4:	bl	4048b0 <dcgettext@plt>
  40acd8:	mov	x2, x0
  40acdc:	mov	w0, wzr
  40ace0:	mov	w1, wzr
  40ace4:	bl	403f60 <error@plt>
  40ace8:	mov	x8, #0xffffffffffffffff    	// #-1
  40acec:	cmp	x28, #0x40
  40acf0:	lsl	x9, x8, x28
  40acf4:	csinv	x8, x8, x9, cs  // cs = hs, nlast
  40acf8:	and	x8, x8, x23
  40acfc:	sub	x9, x20, #0x2
  40ad00:	strb	wzr, [x20, x24]
  40ad04:	mov	w10, #0x30                  	// #48
  40ad08:	bfxil	w10, w8, #0, #3
  40ad0c:	strb	w10, [x9, x19]
  40ad10:	sub	x19, x19, #0x1
  40ad14:	cmp	x19, #0x1
  40ad18:	lsr	x8, x8, #3
  40ad1c:	b.ne	40ad04 <wcrtomb@plt+0x6214>  // b.any
  40ad20:	mov	w0, #0x1                   	// #1
  40ad24:	ldp	x20, x19, [sp, #192]
  40ad28:	ldp	x22, x21, [sp, #176]
  40ad2c:	ldp	x24, x23, [sp, #160]
  40ad30:	ldp	x26, x25, [sp, #144]
  40ad34:	ldp	x28, x27, [sp, #128]
  40ad38:	ldp	x29, x30, [sp, #112]
  40ad3c:	and	w0, w0, #0x1
  40ad40:	add	sp, sp, #0xd0
  40ad44:	ret
  40ad48:	mov	x8, x0
  40ad4c:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ad50:	mov	x5, x2
  40ad54:	lsr	x0, x0, #63
  40ad58:	add	x6, x6, #0x93e
  40ad5c:	mov	w2, #0x8                   	// #8
  40ad60:	mov	x4, x1
  40ad64:	mov	x1, x8
  40ad68:	mov	x3, xzr
  40ad6c:	b	40a9cc <wcrtomb@plt+0x5edc>
  40ad70:	stp	x29, x30, [sp, #-32]!
  40ad74:	str	x19, [sp, #16]
  40ad78:	mov	x29, sp
  40ad7c:	bl	405310 <wcrtomb@plt+0x820>
  40ad80:	movi	v0.2d, #0x0
  40ad84:	stp	q0, q0, [x0]
  40ad88:	stp	q0, q0, [x0, #32]
  40ad8c:	stp	q0, q0, [x0, #64]
  40ad90:	stp	q0, q0, [x0, #96]
  40ad94:	stp	q0, q0, [x0, #128]
  40ad98:	stp	q0, q0, [x0, #160]
  40ad9c:	stp	q0, q0, [x0, #192]
  40ada0:	stp	q0, q0, [x0, #224]
  40ada4:	stp	q0, q0, [x0, #256]
  40ada8:	stp	q0, q0, [x0, #288]
  40adac:	stp	q0, q0, [x0, #320]
  40adb0:	stp	q0, q0, [x0, #352]
  40adb4:	stp	q0, q0, [x0, #384]
  40adb8:	stp	q0, q0, [x0, #416]
  40adbc:	stp	q0, q0, [x0, #448]
  40adc0:	stp	q0, q0, [x0, #480]
  40adc4:	bl	405640 <wcrtomb@plt+0xb50>
  40adc8:	bl	405310 <wcrtomb@plt+0x820>
  40adcc:	mov	x19, x0
  40add0:	bl	405684 <wcrtomb@plt+0xb94>
  40add4:	mov	x2, x0
  40add8:	mov	x0, x19
  40addc:	mov	w1, wzr
  40ade0:	bl	404320 <memset@plt>
  40ade4:	mov	x0, x19
  40ade8:	ldr	x19, [sp, #16]
  40adec:	ldp	x29, x30, [sp], #32
  40adf0:	b	405640 <wcrtomb@plt+0xb50>
  40adf4:	stp	x29, x30, [sp, #-48]!
  40adf8:	stp	x22, x21, [sp, #16]
  40adfc:	stp	x20, x19, [sp, #32]
  40ae00:	mov	x29, sp
  40ae04:	mov	x20, x2
  40ae08:	mov	x21, x1
  40ae0c:	mov	x22, x0
  40ae10:	bl	405310 <wcrtomb@plt+0x820>
  40ae14:	mov	x19, x0
  40ae18:	mov	x8, xzr
  40ae1c:	movi	v0.2d, #0x0
  40ae20:	stp	q0, q0, [x0]
  40ae24:	stp	q0, q0, [x0, #32]
  40ae28:	stp	q0, q0, [x0, #64]
  40ae2c:	stp	q0, q0, [x0, #96]
  40ae30:	stp	q0, q0, [x0, #128]
  40ae34:	stp	q0, q0, [x0, #160]
  40ae38:	stp	q0, q0, [x0, #192]
  40ae3c:	stp	q0, q0, [x0, #224]
  40ae40:	stp	q0, q0, [x0, #256]
  40ae44:	stp	q0, q0, [x0, #288]
  40ae48:	stp	q0, q0, [x0, #320]
  40ae4c:	stp	q0, q0, [x0, #352]
  40ae50:	stp	q0, q0, [x0, #384]
  40ae54:	stp	q0, q0, [x0, #416]
  40ae58:	stp	q0, q0, [x0, #448]
  40ae5c:	stp	q0, q0, [x0, #480]
  40ae60:	ldrb	w9, [x22, x8]
  40ae64:	cmp	x8, #0x62
  40ae68:	strb	w9, [x19, x8]
  40ae6c:	b.hi	40ae78 <wcrtomb@plt+0x6388>  // b.pmore
  40ae70:	add	x8, x8, #0x1
  40ae74:	cbnz	w9, 40ae60 <wcrtomb@plt+0x6370>
  40ae78:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ae7c:	ldr	w8, [x22, #3808]
  40ae80:	cmp	w8, #0x2
  40ae84:	b.ne	40ae8c <wcrtomb@plt+0x639c>  // b.any
  40ae88:	strb	wzr, [x19, #99]
  40ae8c:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ae90:	add	x4, x19, #0x7c
  40ae94:	lsr	x0, x21, #63
  40ae98:	add	x6, x6, #0x938
  40ae9c:	mov	w2, #0x8                   	// #8
  40aea0:	mov	w5, #0xc                   	// #12
  40aea4:	mov	x1, x21
  40aea8:	mov	x3, xzr
  40aeac:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40aeb0:	mov	x8, #0x1ffffffff           	// #8589934591
  40aeb4:	cmp	x20, x8
  40aeb8:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  40aebc:	cmp	x20, #0x0
  40aec0:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40aec4:	csel	x1, xzr, x8, lt  // lt = tstop
  40aec8:	add	x4, x19, #0x88
  40aecc:	add	x6, x6, #0x93e
  40aed0:	mov	w2, #0x8                   	// #8
  40aed4:	mov	w5, #0xc                   	// #12
  40aed8:	mov	w0, wzr
  40aedc:	mov	x3, xzr
  40aee0:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40aee4:	ldr	w8, [x22, #3808]
  40aee8:	add	x4, x19, #0x64
  40aeec:	sub	w8, w8, #0x3
  40aef0:	cmp	w8, #0x3
  40aef4:	b.hi	40af08 <wcrtomb@plt+0x6418>  // b.pmore
  40aef8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40aefc:	add	x9, x9, #0xc78
  40af00:	ldr	x1, [x9, w8, sxtw #3]
  40af04:	b	40af0c <wcrtomb@plt+0x641c>
  40af08:	mov	w1, #0x81a4                	// #33188
  40af0c:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40af10:	add	x6, x6, #0xa39
  40af14:	mov	w2, #0x4                   	// #4
  40af18:	mov	w5, #0x8                   	// #8
  40af1c:	mov	w0, wzr
  40af20:	mov	x3, xzr
  40af24:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40af28:	adrp	x3, 40d000 <wcrtomb@plt+0x8510>
  40af2c:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40af30:	add	x4, x19, #0x6c
  40af34:	add	x3, x3, #0x40
  40af38:	add	x6, x6, #0xa40
  40af3c:	mov	w2, #0x4                   	// #4
  40af40:	mov	w5, #0x8                   	// #8
  40af44:	mov	w0, wzr
  40af48:	mov	x1, xzr
  40af4c:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40af50:	adrp	x3, 40d000 <wcrtomb@plt+0x8510>
  40af54:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40af58:	add	x4, x19, #0x74
  40af5c:	add	x3, x3, #0x98
  40af60:	add	x6, x6, #0xa4d
  40af64:	mov	w2, #0x4                   	// #4
  40af68:	mov	w5, #0x8                   	// #8
  40af6c:	mov	w0, wzr
  40af70:	mov	x1, xzr
  40af74:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40af78:	mov	x9, #0x7375                	// #29557
  40af7c:	movk	x9, #0x6174, lsl #16
  40af80:	movk	x9, #0x72, lsl #32
  40af84:	add	x8, x19, #0x101
  40af88:	movk	x9, #0x3030, lsl #48
  40af8c:	str	x9, [x8]
  40af90:	mov	x0, x19
  40af94:	ldp	x20, x19, [sp, #32]
  40af98:	ldp	x22, x21, [sp, #16]
  40af9c:	ldp	x29, x30, [sp], #48
  40afa0:	ret
  40afa4:	stp	x29, x30, [sp, #-64]!
  40afa8:	str	x28, [sp, #16]
  40afac:	stp	x22, x21, [sp, #32]
  40afb0:	stp	x20, x19, [sp, #48]
  40afb4:	mov	x29, sp
  40afb8:	sub	sp, sp, #0x200
  40afbc:	ldr	x8, [x1, #360]
  40afc0:	mov	x20, x2
  40afc4:	cbnz	x8, 40b06c <wcrtomb@plt+0x657c>
  40afc8:	add	x19, x1, #0x158
  40afcc:	ldr	x8, [x19]
  40afd0:	mov	x21, x1
  40afd4:	cbz	x8, 40b06c <wcrtomb@plt+0x657c>
  40afd8:	mov	w22, w0
  40afdc:	mov	x0, x19
  40afe0:	bl	412764 <wcrtomb@plt+0xdc74>
  40afe4:	mov	x0, sp
  40afe8:	mov	w2, #0x200                 	// #512
  40afec:	mov	x1, x20
  40aff0:	bl	403e80 <memcpy@plt>
  40aff4:	tbz	w22, #0, 40b010 <wcrtomb@plt+0x6520>
  40aff8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40affc:	add	x22, x22, #0xe78
  40b000:	mov	w21, #0x67                  	// #103
  40b004:	bl	41243c <wcrtomb@plt+0xd94c>
  40b008:	mov	x20, x0
  40b00c:	b	40b03c <wcrtomb@plt+0x654c>
  40b010:	mov	x0, x21
  40b014:	bl	4123f0 <wcrtomb@plt+0xd900>
  40b018:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b01c:	ldr	w8, [x8, #3048]
  40b020:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b024:	add	x9, x21, #0xb0
  40b028:	add	x10, x10, #0xec8
  40b02c:	cmp	w8, #0x0
  40b030:	mov	x20, x0
  40b034:	csel	x22, x9, x10, eq  // eq = none
  40b038:	mov	w21, #0x78                  	// #120
  40b03c:	ldr	x2, [x22]
  40b040:	mov	w0, w21
  40b044:	mov	x1, x20
  40b048:	mov	x3, x19
  40b04c:	bl	4124d4 <wcrtomb@plt+0xd9e4>
  40b050:	mov	x0, x20
  40b054:	bl	4046b0 <free@plt>
  40b058:	bl	405310 <wcrtomb@plt+0x820>
  40b05c:	mov	x1, sp
  40b060:	mov	w2, #0x200                 	// #512
  40b064:	mov	x20, x0
  40b068:	bl	403e80 <memcpy@plt>
  40b06c:	mov	x0, x20
  40b070:	add	sp, sp, #0x200
  40b074:	ldp	x20, x19, [sp, #48]
  40b078:	ldp	x22, x21, [sp, #32]
  40b07c:	ldr	x28, [sp, #16]
  40b080:	ldp	x29, x30, [sp], #64
  40b084:	ret
  40b088:	sub	sp, sp, #0x60
  40b08c:	stp	x24, x23, [sp, #48]
  40b090:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b094:	stp	x20, x19, [sp, #80]
  40b098:	ldr	w20, [x24, #3808]
  40b09c:	stp	x29, x30, [sp, #32]
  40b0a0:	add	x29, sp, #0x20
  40b0a4:	mov	x19, x0
  40b0a8:	cmp	w20, #0x4
  40b0ac:	stp	x22, x21, [sp, #64]
  40b0b0:	stur	xzr, [x29, #-8]
  40b0b4:	str	xzr, [sp, #16]
  40b0b8:	b.ne	40b0cc <wcrtomb@plt+0x65dc>  // b.any
  40b0bc:	ldr	x0, [x19, #8]
  40b0c0:	bl	42a95c <wcrtomb@plt+0x25e6c>
  40b0c4:	tbz	w0, #0, 40b194 <wcrtomb@plt+0x66a4>
  40b0c8:	ldr	w20, [x24, #3808]
  40b0cc:	ldr	x21, [x19, #8]
  40b0d0:	cmp	w20, #0x2
  40b0d4:	mov	w8, #0x63                  	// #99
  40b0d8:	cinc	x22, x8, ne  // ne = any
  40b0dc:	mov	x0, x21
  40b0e0:	bl	403f00 <strlen@plt>
  40b0e4:	cmp	x22, x0
  40b0e8:	b.cs	40b124 <wcrtomb@plt+0x6634>  // b.hs, b.nlast
  40b0ec:	sub	w8, w20, #0x1
  40b0f0:	cmp	w8, #0x5
  40b0f4:	b.hi	40bb84 <wcrtomb@plt+0x7094>  // b.pmore
  40b0f8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b0fc:	add	x9, x9, #0x8be
  40b100:	adr	x10, 40b110 <wcrtomb@plt+0x6620>
  40b104:	ldrb	w11, [x9, x8]
  40b108:	add	x10, x10, x11, lsl #2
  40b10c:	br	x10
  40b110:	mov	w2, #0x4c                  	// #76
  40b114:	mov	x0, x19
  40b118:	mov	x1, x21
  40b11c:	bl	40d0f0 <wcrtomb@plt+0x8600>
  40b120:	b	40b2d8 <wcrtomb@plt+0x67e8>
  40b124:	bl	405310 <wcrtomb@plt+0x820>
  40b128:	movi	v0.2d, #0x0
  40b12c:	stp	q0, q0, [x0]
  40b130:	stp	q0, q0, [x0, #32]
  40b134:	stp	q0, q0, [x0, #64]
  40b138:	stp	q0, q0, [x0, #96]
  40b13c:	stp	q0, q0, [x0, #128]
  40b140:	stp	q0, q0, [x0, #160]
  40b144:	stp	q0, q0, [x0, #192]
  40b148:	stp	q0, q0, [x0, #224]
  40b14c:	stp	q0, q0, [x0, #256]
  40b150:	stp	q0, q0, [x0, #288]
  40b154:	stp	q0, q0, [x0, #320]
  40b158:	stp	q0, q0, [x0, #352]
  40b15c:	stp	q0, q0, [x0, #384]
  40b160:	stp	q0, q0, [x0, #416]
  40b164:	stp	q0, q0, [x0, #448]
  40b168:	stp	q0, q0, [x0, #480]
  40b16c:	ldr	x8, [x19, #8]
  40b170:	mov	x20, x0
  40b174:	mov	x9, xzr
  40b178:	ldrb	w10, [x8, x9]
  40b17c:	cmp	x9, #0x62
  40b180:	strb	w10, [x20, x9]
  40b184:	b.hi	40b344 <wcrtomb@plt+0x6854>  // b.pmore
  40b188:	add	x9, x9, #0x1
  40b18c:	cbnz	w10, 40b178 <wcrtomb@plt+0x6688>
  40b190:	b	40b344 <wcrtomb@plt+0x6854>
  40b194:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b198:	add	x0, x0, #0xc28
  40b19c:	mov	x1, x19
  40b1a0:	mov	x2, xzr
  40b1a4:	bl	41321c <wcrtomb@plt+0xe72c>
  40b1a8:	bl	405310 <wcrtomb@plt+0x820>
  40b1ac:	movi	v0.2d, #0x0
  40b1b0:	stp	q0, q0, [x0]
  40b1b4:	stp	q0, q0, [x0, #32]
  40b1b8:	stp	q0, q0, [x0, #64]
  40b1bc:	stp	q0, q0, [x0, #96]
  40b1c0:	stp	q0, q0, [x0, #128]
  40b1c4:	stp	q0, q0, [x0, #160]
  40b1c8:	stp	q0, q0, [x0, #192]
  40b1cc:	stp	q0, q0, [x0, #224]
  40b1d0:	stp	q0, q0, [x0, #256]
  40b1d4:	stp	q0, q0, [x0, #288]
  40b1d8:	stp	q0, q0, [x0, #320]
  40b1dc:	stp	q0, q0, [x0, #352]
  40b1e0:	stp	q0, q0, [x0, #384]
  40b1e4:	stp	q0, q0, [x0, #416]
  40b1e8:	stp	q0, q0, [x0, #448]
  40b1ec:	stp	q0, q0, [x0, #480]
  40b1f0:	ldr	x8, [x19, #8]
  40b1f4:	mov	x20, x0
  40b1f8:	mov	x9, xzr
  40b1fc:	ldrb	w10, [x8, x9]
  40b200:	cmp	x9, #0x62
  40b204:	strb	w10, [x20, x9]
  40b208:	b.hi	40b344 <wcrtomb@plt+0x6854>  // b.pmore
  40b20c:	add	x9, x9, #0x1
  40b210:	cbnz	w10, 40b1fc <wcrtomb@plt+0x670c>
  40b214:	b	40b344 <wcrtomb@plt+0x6854>
  40b218:	cmp	x0, #0x101
  40b21c:	b.cc	40b25c <wcrtomb@plt+0x676c>  // b.lo, b.ul, b.last
  40b220:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b224:	ldr	x8, [x8, #4000]
  40b228:	cbz	x8, 40b230 <wcrtomb@plt+0x6740>
  40b22c:	blr	x8
  40b230:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b234:	add	x1, x1, #0xa53
  40b238:	mov	w2, #0x5                   	// #5
  40b23c:	mov	x0, xzr
  40b240:	bl	4048b0 <dcgettext@plt>
  40b244:	mov	x19, x0
  40b248:	mov	x0, x21
  40b24c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40b250:	mov	x3, x0
  40b254:	mov	w4, #0x100                 	// #256
  40b258:	b	40b2b0 <wcrtomb@plt+0x67c0>
  40b25c:	cmp	x0, #0x9c
  40b260:	b.ls	40b54c <wcrtomb@plt+0x6a5c>  // b.plast
  40b264:	mov	w8, #0x9c                  	// #156
  40b268:	b	40b55c <wcrtomb@plt+0x6a6c>
  40b26c:	cmp	x0, #0x64
  40b270:	b.cc	40b2d8 <wcrtomb@plt+0x67e8>  // b.lo, b.ul, b.last
  40b274:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b278:	ldr	x8, [x8, #4000]
  40b27c:	cbz	x8, 40b284 <wcrtomb@plt+0x6794>
  40b280:	blr	x8
  40b284:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b288:	add	x1, x1, #0xa53
  40b28c:	mov	w2, #0x5                   	// #5
  40b290:	mov	x0, xzr
  40b294:	bl	4048b0 <dcgettext@plt>
  40b298:	ldr	x8, [x19, #8]
  40b29c:	mov	x19, x0
  40b2a0:	mov	x0, x8
  40b2a4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40b2a8:	mov	x3, x0
  40b2ac:	mov	w4, #0x63                  	// #99
  40b2b0:	mov	w0, wzr
  40b2b4:	mov	w1, wzr
  40b2b8:	mov	x2, x19
  40b2bc:	bl	403f60 <error@plt>
  40b2c0:	b	40b5cc <wcrtomb@plt+0x6adc>
  40b2c4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b2c8:	add	x0, x0, #0xc28
  40b2cc:	mov	x1, x19
  40b2d0:	mov	x2, xzr
  40b2d4:	bl	41321c <wcrtomb@plt+0xe72c>
  40b2d8:	bl	405310 <wcrtomb@plt+0x820>
  40b2dc:	movi	v0.2d, #0x0
  40b2e0:	stp	q0, q0, [x0]
  40b2e4:	stp	q0, q0, [x0, #32]
  40b2e8:	stp	q0, q0, [x0, #64]
  40b2ec:	stp	q0, q0, [x0, #96]
  40b2f0:	stp	q0, q0, [x0, #128]
  40b2f4:	stp	q0, q0, [x0, #160]
  40b2f8:	stp	q0, q0, [x0, #192]
  40b2fc:	stp	q0, q0, [x0, #224]
  40b300:	stp	q0, q0, [x0, #256]
  40b304:	stp	q0, q0, [x0, #288]
  40b308:	stp	q0, q0, [x0, #320]
  40b30c:	stp	q0, q0, [x0, #352]
  40b310:	stp	q0, q0, [x0, #384]
  40b314:	stp	q0, q0, [x0, #416]
  40b318:	stp	q0, q0, [x0, #448]
  40b31c:	stp	q0, q0, [x0, #480]
  40b320:	ldr	x8, [x19, #8]
  40b324:	mov	x20, x0
  40b328:	mov	x9, xzr
  40b32c:	ldrb	w10, [x8, x9]
  40b330:	cmp	x9, #0x62
  40b334:	strb	w10, [x20, x9]
  40b338:	b.hi	40b344 <wcrtomb@plt+0x6854>  // b.pmore
  40b33c:	add	x9, x9, #0x1
  40b340:	cbnz	w10, 40b32c <wcrtomb@plt+0x683c>
  40b344:	ldr	w8, [x24, #3808]
  40b348:	cmp	w8, #0x2
  40b34c:	b.ne	40b354 <wcrtomb@plt+0x6864>  // b.any
  40b350:	strb	wzr, [x20, #99]
  40b354:	mov	x22, x19
  40b358:	ldr	w0, [x22, #112]!
  40b35c:	sub	x2, x29, #0x8
  40b360:	mov	x1, x22
  40b364:	bl	41b324 <wcrtomb@plt+0x16834>
  40b368:	mov	x21, x19
  40b36c:	ldr	w0, [x21, #116]!
  40b370:	add	x2, sp, #0x10
  40b374:	mov	x1, x21
  40b378:	bl	41b420 <wcrtomb@plt+0x16930>
  40b37c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b380:	ldr	x3, [x8, #3592]
  40b384:	ldur	w0, [x21, #-12]
  40b388:	cbz	x3, 40b3b4 <wcrtomb@plt+0x68c4>
  40b38c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b390:	ldr	w2, [x8, #3072]
  40b394:	and	w8, w0, #0xf000
  40b398:	cmp	w8, #0x4, lsl #12
  40b39c:	cset	w1, eq  // eq = none
  40b3a0:	mov	x4, xzr
  40b3a4:	and	w23, w0, #0xfffff000
  40b3a8:	bl	440b14 <argp_parse@@Base+0x6468>
  40b3ac:	orr	w0, w0, w23
  40b3b0:	str	w0, [x19, #104]
  40b3b4:	ldr	w8, [x24, #3808]
  40b3b8:	orr	w9, w8, #0x2
  40b3bc:	cmp	w9, #0x3
  40b3c0:	b.ne	40b3d0 <wcrtomb@plt+0x68e0>  // b.any
  40b3c4:	and	w0, w0, #0xfff
  40b3c8:	add	x4, x20, #0x64
  40b3cc:	b	40b3f4 <wcrtomb@plt+0x6904>
  40b3d0:	cmp	w8, #0x6
  40b3d4:	add	x4, x20, #0x64
  40b3d8:	b.hi	40b3f4 <wcrtomb@plt+0x6904>  // b.pmore
  40b3dc:	mov	w9, #0x1                   	// #1
  40b3e0:	lsl	w8, w9, w8
  40b3e4:	mov	w9, #0x58                  	// #88
  40b3e8:	tst	w8, w9
  40b3ec:	b.eq	40b3f4 <wcrtomb@plt+0x6904>  // b.none
  40b3f0:	and	w0, w0, #0xfff
  40b3f4:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b3f8:	mov	w1, w0
  40b3fc:	add	x6, x6, #0xa39
  40b400:	mov	w2, #0x4                   	// #4
  40b404:	mov	w5, #0x8                   	// #8
  40b408:	mov	w0, wzr
  40b40c:	mov	x3, xzr
  40b410:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b414:	ldr	w8, [x22]
  40b418:	cmp	w8, #0x200, lsl #12
  40b41c:	b.cc	40b444 <wcrtomb@plt+0x6954>  // b.lo, b.ul, b.last
  40b420:	ldr	w9, [x24, #3808]
  40b424:	cmp	w9, #0x4
  40b428:	b.ne	40b444 <wcrtomb@plt+0x6954>  // b.any
  40b42c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b430:	add	x0, x0, #0x945
  40b434:	mov	x1, x19
  40b438:	mov	x2, xzr
  40b43c:	bl	41321c <wcrtomb@plt+0xe72c>
  40b440:	mov	w8, wzr
  40b444:	adrp	x3, 40d000 <wcrtomb@plt+0x8510>
  40b448:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b44c:	add	x4, x20, #0x6c
  40b450:	mov	w1, w8
  40b454:	add	x3, x3, #0x40
  40b458:	add	x6, x6, #0xa40
  40b45c:	mov	w2, #0x4                   	// #4
  40b460:	mov	w5, #0x8                   	// #8
  40b464:	mov	w0, wzr
  40b468:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b46c:	tbz	w0, #0, 40b688 <wcrtomb@plt+0x6b98>
  40b470:	ldr	w8, [x21]
  40b474:	cmp	w8, #0x200, lsl #12
  40b478:	b.cc	40b4a0 <wcrtomb@plt+0x69b0>  // b.lo, b.ul, b.last
  40b47c:	ldr	w9, [x24, #3808]
  40b480:	cmp	w9, #0x4
  40b484:	b.ne	40b4a0 <wcrtomb@plt+0x69b0>  // b.any
  40b488:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b48c:	add	x0, x0, #0x949
  40b490:	mov	x1, x19
  40b494:	mov	x2, xzr
  40b498:	bl	41321c <wcrtomb@plt+0xe72c>
  40b49c:	mov	w8, wzr
  40b4a0:	adrp	x3, 40d000 <wcrtomb@plt+0x8510>
  40b4a4:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b4a8:	add	x4, x20, #0x74
  40b4ac:	mov	w1, w8
  40b4b0:	add	x3, x3, #0x98
  40b4b4:	add	x6, x6, #0xa4d
  40b4b8:	mov	w2, #0x4                   	// #4
  40b4bc:	mov	w5, #0x8                   	// #8
  40b4c0:	mov	w0, wzr
  40b4c4:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b4c8:	tbz	w0, #0, 40b688 <wcrtomb@plt+0x6b98>
  40b4cc:	ldr	x1, [x19, #136]
  40b4d0:	lsr	x8, x1, #33
  40b4d4:	cbz	x8, 40b4fc <wcrtomb@plt+0x6a0c>
  40b4d8:	ldr	w8, [x24, #3808]
  40b4dc:	cmp	w8, #0x4
  40b4e0:	b.ne	40b4fc <wcrtomb@plt+0x6a0c>  // b.any
  40b4e4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  40b4e8:	add	x0, x0, #0xe5c
  40b4ec:	mov	x1, x19
  40b4f0:	mov	x2, xzr
  40b4f4:	bl	41321c <wcrtomb@plt+0xe72c>
  40b4f8:	mov	x1, xzr
  40b4fc:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b500:	add	x4, x20, #0x7c
  40b504:	lsr	x0, x1, #63
  40b508:	add	x6, x6, #0x938
  40b50c:	mov	w2, #0x8                   	// #8
  40b510:	mov	w5, #0xc                   	// #12
  40b514:	mov	x3, xzr
  40b518:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b51c:	mov	w8, w0
  40b520:	mov	x0, xzr
  40b524:	tbz	w8, #0, 40b68c <wcrtomb@plt+0x6b9c>
  40b528:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b52c:	ldr	w8, [x8, #3048]
  40b530:	cmp	w8, #0x2
  40b534:	b.eq	40b5ec <wcrtomb@plt+0x6afc>  // b.none
  40b538:	cmp	w8, #0x1
  40b53c:	b.eq	40b5e0 <wcrtomb@plt+0x6af0>  // b.none
  40b540:	cbnz	w8, 40b6c4 <wcrtomb@plt+0x6bd4>
  40b544:	ldur	q0, [x19, #232]
  40b548:	b	40b6c0 <wcrtomb@plt+0x6bd0>
  40b54c:	sub	x8, x0, #0x1
  40b550:	ldrb	w9, [x21, x8]
  40b554:	cmp	w9, #0x2f
  40b558:	csel	x8, x8, x0, eq  // eq = none
  40b55c:	subs	x22, x8, #0x1
  40b560:	b.eq	40b588 <wcrtomb@plt+0x6a98>  // b.none
  40b564:	add	x8, x21, x8
  40b568:	ldurb	w8, [x8, #-1]
  40b56c:	cmp	w8, #0x2f
  40b570:	mov	x8, x22
  40b574:	b.ne	40b55c <wcrtomb@plt+0x6a6c>  // b.any
  40b578:	sub	x8, x0, x22
  40b57c:	sub	x9, x8, #0x2
  40b580:	cmp	x9, #0x64
  40b584:	b.cc	40b610 <wcrtomb@plt+0x6b20>  // b.lo, b.ul, b.last
  40b588:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b58c:	ldr	x8, [x8, #4000]
  40b590:	cbz	x8, 40b598 <wcrtomb@plt+0x6aa8>
  40b594:	blr	x8
  40b598:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b59c:	add	x1, x1, #0xa82
  40b5a0:	mov	w2, #0x5                   	// #5
  40b5a4:	mov	x0, xzr
  40b5a8:	bl	4048b0 <dcgettext@plt>
  40b5ac:	mov	x19, x0
  40b5b0:	mov	x0, x21
  40b5b4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40b5b8:	mov	x3, x0
  40b5bc:	mov	w0, wzr
  40b5c0:	mov	w1, wzr
  40b5c4:	mov	x2, x19
  40b5c8:	bl	403f60 <error@plt>
  40b5cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b5d0:	mov	w9, #0x2                   	// #2
  40b5d4:	mov	x0, xzr
  40b5d8:	str	w9, [x8, #2352]
  40b5dc:	b	40b68c <wcrtomb@plt+0x6b9c>
  40b5e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b5e4:	add	x8, x8, #0xec8
  40b5e8:	b	40b608 <wcrtomb@plt+0x6b18>
  40b5ec:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b5f0:	mov	x8, x19
  40b5f4:	add	x9, x9, #0xec8
  40b5f8:	ldr	x10, [x8, #232]!
  40b5fc:	ldr	x11, [x9]
  40b600:	cmp	x10, x11
  40b604:	b.ge	40b6a4 <wcrtomb@plt+0x6bb4>  // b.tcont
  40b608:	ldr	q0, [x8]
  40b60c:	b	40b6c0 <wcrtomb@plt+0x6bd0>
  40b610:	sub	x23, x8, #0x1
  40b614:	bl	405310 <wcrtomb@plt+0x820>
  40b618:	movi	v0.2d, #0x0
  40b61c:	mov	x20, x0
  40b620:	stp	q0, q0, [x0]
  40b624:	stp	q0, q0, [x0, #32]
  40b628:	stp	q0, q0, [x0, #64]
  40b62c:	stp	q0, q0, [x0, #96]
  40b630:	stp	q0, q0, [x0, #128]
  40b634:	stp	q0, q0, [x0, #160]
  40b638:	stp	q0, q0, [x0, #192]
  40b63c:	stp	q0, q0, [x0, #224]
  40b640:	stp	q0, q0, [x0, #256]
  40b644:	stp	q0, q0, [x0, #288]
  40b648:	stp	q0, q0, [x0, #320]
  40b64c:	stp	q0, q0, [x0, #352]
  40b650:	stp	q0, q0, [x0, #384]
  40b654:	stp	q0, q0, [x0, #416]
  40b658:	stp	q0, q0, [x0, #448]
  40b65c:	stp	q0, q0, [x0, #480]
  40b660:	add	x0, x0, #0x159
  40b664:	mov	x1, x21
  40b668:	mov	x2, x22
  40b66c:	bl	403e80 <memcpy@plt>
  40b670:	add	x8, x21, x22
  40b674:	add	x1, x8, #0x1
  40b678:	mov	x0, x20
  40b67c:	mov	x2, x23
  40b680:	bl	403e80 <memcpy@plt>
  40b684:	cbnz	x20, 40b354 <wcrtomb@plt+0x6864>
  40b688:	mov	x0, xzr
  40b68c:	ldp	x20, x19, [sp, #80]
  40b690:	ldp	x22, x21, [sp, #64]
  40b694:	ldp	x24, x23, [sp, #48]
  40b698:	ldp	x29, x30, [sp, #32]
  40b69c:	add	sp, sp, #0x60
  40b6a0:	ret
  40b6a4:	b.gt	40b6bc <wcrtomb@plt+0x6bcc>
  40b6a8:	ldr	x10, [x8, #8]
  40b6ac:	ldr	x11, [x9, #8]
  40b6b0:	sub	w10, w10, w11
  40b6b4:	cmp	w10, #0x1
  40b6b8:	b.lt	40b608 <wcrtomb@plt+0x6b18>  // b.tstop
  40b6bc:	ldr	q0, [x9]
  40b6c0:	str	q0, [sp]
  40b6c4:	ldr	w8, [x24, #3808]
  40b6c8:	ldr	x1, [sp]
  40b6cc:	cmp	w8, #0x4
  40b6d0:	b.ne	40b70c <wcrtomb@plt+0x6c1c>  // b.any
  40b6d4:	lsr	x8, x1, #33
  40b6d8:	cbnz	x8, 40b6e4 <wcrtomb@plt+0x6bf4>
  40b6dc:	ldr	x8, [sp, #8]
  40b6e0:	cbz	x8, 40b70c <wcrtomb@plt+0x6c1c>
  40b6e4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  40b6e8:	add	x0, x0, #0x3e2
  40b6ec:	mov	x2, sp
  40b6f0:	mov	x1, x19
  40b6f4:	bl	41321c <wcrtomb@plt+0xe72c>
  40b6f8:	ldr	x1, [sp]
  40b6fc:	lsr	x8, x1, #33
  40b700:	cbz	x8, 40b70c <wcrtomb@plt+0x6c1c>
  40b704:	mov	x1, xzr
  40b708:	str	xzr, [sp]
  40b70c:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b710:	add	x4, x20, #0x88
  40b714:	lsr	x0, x1, #63
  40b718:	add	x6, x6, #0x93e
  40b71c:	mov	w2, #0x8                   	// #8
  40b720:	mov	w5, #0xc                   	// #12
  40b724:	mov	x3, xzr
  40b728:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b72c:	mov	w8, w0
  40b730:	mov	x0, xzr
  40b734:	tbz	w8, #0, 40b68c <wcrtomb@plt+0x6b9c>
  40b738:	ldr	w8, [x19, #104]
  40b73c:	and	w8, w8, #0xf000
  40b740:	orr	w8, w8, #0x4000
  40b744:	cmp	w8, #0x6, lsl #12
  40b748:	b.ne	40b808 <wcrtomb@plt+0x6d18>  // b.any
  40b74c:	ldr	x21, [x19, #120]
  40b750:	ldr	w9, [x24, #3808]
  40b754:	lsr	x8, x21, #32
  40b758:	cmp	w9, #0x4
  40b75c:	bfxil	w8, w21, #8, #12
  40b760:	b.ne	40b784 <wcrtomb@plt+0x6c94>  // b.any
  40b764:	cmp	w8, #0x200, lsl #12
  40b768:	b.cc	40b784 <wcrtomb@plt+0x6c94>  // b.lo, b.ul, b.last
  40b76c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b770:	add	x0, x0, #0x94d
  40b774:	mov	x1, x19
  40b778:	mov	x2, xzr
  40b77c:	bl	41321c <wcrtomb@plt+0xe72c>
  40b780:	mov	w8, wzr
  40b784:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b788:	add	x4, x20, #0x149
  40b78c:	lsr	w0, w8, #31
  40b790:	sxtw	x1, w8
  40b794:	add	x6, x6, #0xac8
  40b798:	mov	w2, #0x4                   	// #4
  40b79c:	mov	w5, #0x8                   	// #8
  40b7a0:	mov	x3, xzr
  40b7a4:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b7a8:	mov	w8, w0
  40b7ac:	mov	x0, xzr
  40b7b0:	tbz	w8, #0, 40b68c <wcrtomb@plt+0x6b9c>
  40b7b4:	lsr	x8, x21, #12
  40b7b8:	bfxil	w8, w21, #0, #8
  40b7bc:	cmp	w8, #0x200, lsl #12
  40b7c0:	b.cc	40b7e8 <wcrtomb@plt+0x6cf8>  // b.lo, b.ul, b.last
  40b7c4:	ldr	w9, [x24, #3808]
  40b7c8:	cmp	w9, #0x4
  40b7cc:	b.ne	40b7e8 <wcrtomb@plt+0x6cf8>  // b.any
  40b7d0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b7d4:	add	x0, x0, #0x956
  40b7d8:	mov	x1, x19
  40b7dc:	mov	x2, xzr
  40b7e0:	bl	41321c <wcrtomb@plt+0xe72c>
  40b7e4:	mov	w8, wzr
  40b7e8:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b7ec:	add	x4, x20, #0x151
  40b7f0:	lsr	w0, w8, #31
  40b7f4:	sxtw	x1, w8
  40b7f8:	add	x6, x6, #0xad0
  40b7fc:	mov	w2, #0x4                   	// #4
  40b800:	mov	w5, #0x8                   	// #8
  40b804:	b	40b864 <wcrtomb@plt+0x6d74>
  40b808:	ldr	w8, [x24, #3808]
  40b80c:	orr	w9, w8, #0x4
  40b810:	cmp	w9, #0x6
  40b814:	b.eq	40b87c <wcrtomb@plt+0x6d8c>  // b.none
  40b818:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b81c:	add	x4, x20, #0x149
  40b820:	add	x6, x6, #0xac8
  40b824:	mov	w2, #0x4                   	// #4
  40b828:	mov	w5, #0x8                   	// #8
  40b82c:	mov	w0, wzr
  40b830:	mov	x1, xzr
  40b834:	mov	x3, xzr
  40b838:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b83c:	mov	w8, w0
  40b840:	mov	x0, xzr
  40b844:	tbz	w8, #0, 40b68c <wcrtomb@plt+0x6b9c>
  40b848:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b84c:	add	x4, x20, #0x151
  40b850:	add	x6, x6, #0xad0
  40b854:	mov	w2, #0x4                   	// #4
  40b858:	mov	w5, #0x8                   	// #8
  40b85c:	mov	w0, wzr
  40b860:	mov	x1, xzr
  40b864:	mov	x3, xzr
  40b868:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b86c:	mov	w8, w0
  40b870:	mov	x0, xzr
  40b874:	tbz	w8, #0, 40b68c <wcrtomb@plt+0x6b9c>
  40b878:	ldr	w8, [x24, #3808]
  40b87c:	cmp	w8, #0x4
  40b880:	b.ne	40b8b0 <wcrtomb@plt+0x6dc0>  // b.any
  40b884:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b888:	add	x0, x0, #0x95f
  40b88c:	mov	x1, x19
  40b890:	mov	x2, xzr
  40b894:	bl	41321c <wcrtomb@plt+0xe72c>
  40b898:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b89c:	add	x0, x0, #0x965
  40b8a0:	mov	x1, x19
  40b8a4:	mov	x2, xzr
  40b8a8:	bl	41321c <wcrtomb@plt+0xe72c>
  40b8ac:	b	40b910 <wcrtomb@plt+0x6e20>
  40b8b0:	orr	w8, w8, #0x4
  40b8b4:	cmp	w8, #0x6
  40b8b8:	b.ne	40b910 <wcrtomb@plt+0x6e20>  // b.any
  40b8bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b8c0:	ldrb	w8, [x8, #3025]
  40b8c4:	cbz	w8, 40b910 <wcrtomb@plt+0x6e20>
  40b8c8:	ldr	x1, [x19, #216]
  40b8cc:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b8d0:	add	x21, x21, #0x93e
  40b8d4:	add	x4, x20, #0x159
  40b8d8:	lsr	x0, x1, #63
  40b8dc:	mov	w2, #0x8                   	// #8
  40b8e0:	mov	w5, #0xc                   	// #12
  40b8e4:	mov	x3, xzr
  40b8e8:	mov	x6, x21
  40b8ec:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b8f0:	ldr	x1, [x19, #248]
  40b8f4:	add	x4, x20, #0x165
  40b8f8:	mov	w2, #0x8                   	// #8
  40b8fc:	mov	w5, #0xc                   	// #12
  40b900:	lsr	x0, x1, #63
  40b904:	mov	x3, xzr
  40b908:	mov	x6, x21
  40b90c:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40b910:	ldr	w8, [x24, #3808]
  40b914:	mov	w9, #0x30                  	// #48
  40b918:	subs	w8, w8, #0x1
  40b91c:	csel	w9, wzr, w9, eq  // eq = none
  40b920:	cmp	w8, #0x5
  40b924:	strb	w9, [x20, #156]
  40b928:	b.hi	40bb84 <wcrtomb@plt+0x7094>  // b.pmore
  40b92c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40b930:	add	x9, x9, #0x8c4
  40b934:	adr	x10, 40b948 <wcrtomb@plt+0x6e58>
  40b938:	ldrb	w11, [x9, x8]
  40b93c:	add	x10, x10, x11, lsl #2
  40b940:	add	x8, x20, #0x101
  40b944:	br	x10
  40b948:	mov	x9, #0x7375                	// #29557
  40b94c:	movk	x9, #0x6174, lsl #16
  40b950:	movk	x9, #0x2072, lsl #32
  40b954:	movk	x9, #0x20, lsl #48
  40b958:	str	x9, [x8]
  40b95c:	b	40b980 <wcrtomb@plt+0x6e90>
  40b960:	mov	w11, #0x7375                	// #29557
  40b964:	add	x9, x20, #0x101
  40b968:	mov	w10, #0x72                  	// #114
  40b96c:	movk	w11, #0x6174, lsl #16
  40b970:	mov	w12, #0x3030                	// #12336
  40b974:	strh	w10, [x9, #4]
  40b978:	str	w11, [x9]
  40b97c:	strh	w12, [x8, #6]
  40b980:	ldr	w8, [x24, #3808]
  40b984:	cmp	w8, #0x1
  40b988:	b.eq	40baac <wcrtomb@plt+0x6fbc>  // b.none
  40b98c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40b990:	ldrb	w9, [x9, #3664]
  40b994:	cbnz	w9, 40baac <wcrtomb@plt+0x6fbc>
  40b998:	ldur	x0, [x29, #-8]
  40b99c:	cbz	x0, 40b9ac <wcrtomb@plt+0x6ebc>
  40b9a0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  40b9a4:	str	x0, [x19, #32]
  40b9a8:	b	40b9b8 <wcrtomb@plt+0x6ec8>
  40b9ac:	ldr	w0, [x19, #112]
  40b9b0:	add	x1, x19, #0x20
  40b9b4:	bl	41d24c <wcrtomb@plt+0x1875c>
  40b9b8:	ldr	x0, [sp, #16]
  40b9bc:	cbz	x0, 40b9cc <wcrtomb@plt+0x6edc>
  40b9c0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  40b9c4:	str	x0, [x19, #40]
  40b9c8:	b	40b9d8 <wcrtomb@plt+0x6ee8>
  40b9cc:	ldr	w0, [x19, #116]
  40b9d0:	add	x1, x19, #0x28
  40b9d4:	bl	41d2e0 <wcrtomb@plt+0x187f0>
  40b9d8:	ldr	w8, [x24, #3808]
  40b9dc:	cmp	w8, #0x4
  40b9e0:	b.ne	40ba18 <wcrtomb@plt+0x6f28>  // b.any
  40b9e4:	ldr	x21, [x19, #32]
  40b9e8:	mov	x0, x21
  40b9ec:	bl	403f00 <strlen@plt>
  40b9f0:	cmp	x0, #0x20
  40b9f4:	b.hi	40ba04 <wcrtomb@plt+0x6f14>  // b.pmore
  40b9f8:	mov	x0, x21
  40b9fc:	bl	42a95c <wcrtomb@plt+0x25e6c>
  40ba00:	tbnz	w0, #0, 40ba18 <wcrtomb@plt+0x6f28>
  40ba04:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ba08:	add	x0, x0, #0x96b
  40ba0c:	mov	x1, x19
  40ba10:	mov	x2, xzr
  40ba14:	bl	41321c <wcrtomb@plt+0xe72c>
  40ba18:	ldr	x9, [x19, #32]
  40ba1c:	mov	x8, xzr
  40ba20:	add	x10, x20, #0x109
  40ba24:	ldrb	w11, [x9, x8]
  40ba28:	cmp	x8, #0x1e
  40ba2c:	strb	w11, [x10, x8]
  40ba30:	b.hi	40ba3c <wcrtomb@plt+0x6f4c>  // b.pmore
  40ba34:	add	x8, x8, #0x1
  40ba38:	cbnz	w11, 40ba24 <wcrtomb@plt+0x6f34>
  40ba3c:	strb	wzr, [x20, #296]
  40ba40:	ldr	w8, [x24, #3808]
  40ba44:	cmp	w8, #0x4
  40ba48:	b.ne	40ba80 <wcrtomb@plt+0x6f90>  // b.any
  40ba4c:	ldr	x21, [x19, #40]
  40ba50:	mov	x0, x21
  40ba54:	bl	403f00 <strlen@plt>
  40ba58:	cmp	x0, #0x20
  40ba5c:	b.hi	40ba6c <wcrtomb@plt+0x6f7c>  // b.pmore
  40ba60:	mov	x0, x21
  40ba64:	bl	42a95c <wcrtomb@plt+0x25e6c>
  40ba68:	tbnz	w0, #0, 40ba80 <wcrtomb@plt+0x6f90>
  40ba6c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ba70:	add	x0, x0, #0x971
  40ba74:	mov	x1, x19
  40ba78:	mov	x2, xzr
  40ba7c:	bl	41321c <wcrtomb@plt+0xe72c>
  40ba80:	ldr	x9, [x19, #40]
  40ba84:	mov	x8, xzr
  40ba88:	add	x10, x20, #0x129
  40ba8c:	ldrb	w11, [x9, x8]
  40ba90:	cmp	x8, #0x1e
  40ba94:	strb	w11, [x10, x8]
  40ba98:	b.hi	40baa4 <wcrtomb@plt+0x6fb4>  // b.pmore
  40ba9c:	add	x8, x8, #0x1
  40baa0:	cbnz	w11, 40ba8c <wcrtomb@plt+0x6f9c>
  40baa4:	strb	wzr, [x20, #328]
  40baa8:	ldr	w8, [x24, #3808]
  40baac:	cmp	w8, #0x4
  40bab0:	b.ne	40bb7c <wcrtomb@plt+0x708c>  // b.any
  40bab4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bab8:	ldr	w8, [x8, #3888]
  40babc:	cmp	w8, #0x1
  40bac0:	b.lt	40bafc <wcrtomb@plt+0x700c>  // b.tstop
  40bac4:	ldr	x8, [x19, #56]
  40bac8:	cbz	x8, 40bae0 <wcrtomb@plt+0x6ff0>
  40bacc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40bad0:	add	x0, x0, #0x977
  40bad4:	mov	x1, x19
  40bad8:	mov	x2, xzr
  40badc:	bl	41321c <wcrtomb@plt+0xe72c>
  40bae0:	ldr	x8, [x19, #72]
  40bae4:	cbz	x8, 40bafc <wcrtomb@plt+0x700c>
  40bae8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40baec:	add	x0, x0, #0x989
  40baf0:	mov	x1, x19
  40baf4:	mov	x2, xzr
  40baf8:	bl	41321c <wcrtomb@plt+0xe72c>
  40bafc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bb00:	ldr	w8, [x8, #3976]
  40bb04:	cmp	w8, #0x1
  40bb08:	b.lt	40bb28 <wcrtomb@plt+0x7038>  // b.tstop
  40bb0c:	ldr	x8, [x19, #48]
  40bb10:	cbz	x8, 40bb28 <wcrtomb@plt+0x7038>
  40bb14:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40bb18:	add	x0, x0, #0x99c
  40bb1c:	mov	x1, x19
  40bb20:	mov	x2, xzr
  40bb24:	bl	41321c <wcrtomb@plt+0xe72c>
  40bb28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bb2c:	ldr	w8, [x8, #3648]
  40bb30:	cmp	w8, #0x1
  40bb34:	b.lt	40bb7c <wcrtomb@plt+0x708c>  // b.tstop
  40bb38:	str	xzr, [sp]
  40bb3c:	ldr	x8, [x19, #328]
  40bb40:	cbz	x8, 40bb7c <wcrtomb@plt+0x708c>
  40bb44:	ldr	x21, [x19, #336]
  40bb48:	mov	x8, xzr
  40bb4c:	mov	w22, #0x18                  	// #24
  40bb50:	mul	x8, x8, x22
  40bb54:	ldr	x0, [x21, x8]
  40bb58:	mov	x2, sp
  40bb5c:	mov	x1, x19
  40bb60:	bl	41321c <wcrtomb@plt+0xe72c>
  40bb64:	ldr	x8, [sp]
  40bb68:	add	x8, x8, #0x1
  40bb6c:	str	x8, [sp]
  40bb70:	ldr	x9, [x19, #328]
  40bb74:	cmp	x8, x9
  40bb78:	b.cc	40bb50 <wcrtomb@plt+0x7060>  // b.lo, b.ul, b.last
  40bb7c:	mov	x0, x20
  40bb80:	b	40b68c <wcrtomb@plt+0x6b9c>
  40bb84:	bl	404560 <abort@plt>
  40bb88:	stp	x29, x30, [sp, #-32]!
  40bb8c:	mov	x11, #0x2020202020202020    	// #2314885530818453536
  40bb90:	mov	x4, x0
  40bb94:	str	x19, [sp, #16]
  40bb98:	mov	x19, x0
  40bb9c:	mov	x10, xzr
  40bba0:	mov	w8, wzr
  40bba4:	mov	w9, wzr
  40bba8:	str	x11, [x4, #148]!
  40bbac:	mov	x29, sp
  40bbb0:	add	x11, x19, x10
  40bbb4:	ldrb	w12, [x11]
  40bbb8:	ldrb	w11, [x11, #1]
  40bbbc:	add	x10, x10, #0x2
  40bbc0:	cmp	x10, #0x200
  40bbc4:	add	w8, w8, w12
  40bbc8:	add	w9, w9, w11
  40bbcc:	b.ne	40bbb0 <wcrtomb@plt+0x70c0>  // b.any
  40bbd0:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40bbd4:	add	w1, w9, w8
  40bbd8:	add	x6, x6, #0xad8
  40bbdc:	mov	w2, #0x8                   	// #8
  40bbe0:	mov	w5, #0x7                   	// #7
  40bbe4:	mov	w0, wzr
  40bbe8:	mov	x3, xzr
  40bbec:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40bbf0:	mov	x0, x19
  40bbf4:	ldr	x19, [sp, #16]
  40bbf8:	ldp	x29, x30, [sp], #32
  40bbfc:	b	405640 <wcrtomb@plt+0xb50>
  40bc00:	stp	x29, x30, [sp, #-32]!
  40bc04:	stp	x20, x19, [sp, #16]
  40bc08:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bc0c:	ldr	w8, [x8, #3636]
  40bc10:	mov	x19, x1
  40bc14:	mov	x20, x0
  40bc18:	mov	x29, sp
  40bc1c:	cbz	w8, 40bc68 <wcrtomb@plt+0x7178>
  40bc20:	ldrb	w8, [x19, #156]
  40bc24:	sub	w8, w8, #0x4b
  40bc28:	cmp	w8, #0x2d
  40bc2c:	b.hi	40bc4c <wcrtomb@plt+0x715c>  // b.pmore
  40bc30:	mov	w9, #0x1                   	// #1
  40bc34:	lsl	x8, x9, x8
  40bc38:	mov	x9, #0x3                   	// #3
  40bc3c:	movk	x9, #0x1000, lsl #16
  40bc40:	movk	x9, #0x2000, lsl #32
  40bc44:	tst	x8, x9
  40bc48:	b.ne	40bc68 <wcrtomb@plt+0x7178>  // b.any
  40bc4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bc50:	ldr	w8, [x8, #3808]
  40bc54:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bc58:	mov	x0, x20
  40bc5c:	mov	x1, x19
  40bc60:	str	w8, [x9, #2944]
  40bc64:	bl	419a74 <wcrtomb@plt+0x14f84>
  40bc68:	mov	w0, wzr
  40bc6c:	mov	x1, x20
  40bc70:	mov	x2, x19
  40bc74:	bl	40afa4 <wcrtomb@plt+0x64b4>
  40bc78:	mov	x11, #0x2020202020202020    	// #2314885530818453536
  40bc7c:	mov	x4, x0
  40bc80:	mov	x19, x0
  40bc84:	mov	x10, xzr
  40bc88:	mov	w8, wzr
  40bc8c:	mov	w9, wzr
  40bc90:	str	x11, [x4, #148]!
  40bc94:	add	x11, x19, x10
  40bc98:	ldrb	w12, [x11]
  40bc9c:	ldrb	w11, [x11, #1]
  40bca0:	add	x10, x10, #0x2
  40bca4:	cmp	x10, #0x200
  40bca8:	add	w8, w8, w12
  40bcac:	add	w9, w9, w11
  40bcb0:	b.ne	40bc94 <wcrtomb@plt+0x71a4>  // b.any
  40bcb4:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40bcb8:	add	w1, w9, w8
  40bcbc:	add	x6, x6, #0xad8
  40bcc0:	mov	w2, #0x8                   	// #8
  40bcc4:	mov	w5, #0x7                   	// #7
  40bcc8:	mov	w0, wzr
  40bccc:	mov	x3, xzr
  40bcd0:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40bcd4:	mov	x0, x19
  40bcd8:	ldp	x20, x19, [sp, #16]
  40bcdc:	ldp	x29, x30, [sp], #32
  40bce0:	b	405640 <wcrtomb@plt+0xb50>
  40bce4:	stp	x29, x30, [sp, #-32]!
  40bce8:	cmp	x0, #0x1
  40bcec:	str	x19, [sp, #16]
  40bcf0:	mov	x29, sp
  40bcf4:	b.lt	40bd54 <wcrtomb@plt+0x7264>  // b.tstop
  40bcf8:	add	x19, x0, #0x200
  40bcfc:	bl	405310 <wcrtomb@plt+0x820>
  40bd00:	movi	v0.2d, #0x0
  40bd04:	stp	q0, q0, [x0]
  40bd08:	stp	q0, q0, [x0, #32]
  40bd0c:	stp	q0, q0, [x0, #64]
  40bd10:	stp	q0, q0, [x0, #96]
  40bd14:	stp	q0, q0, [x0, #128]
  40bd18:	stp	q0, q0, [x0, #160]
  40bd1c:	stp	q0, q0, [x0, #192]
  40bd20:	stp	q0, q0, [x0, #224]
  40bd24:	stp	q0, q0, [x0, #256]
  40bd28:	stp	q0, q0, [x0, #288]
  40bd2c:	stp	q0, q0, [x0, #320]
  40bd30:	stp	q0, q0, [x0, #352]
  40bd34:	stp	q0, q0, [x0, #384]
  40bd38:	stp	q0, q0, [x0, #416]
  40bd3c:	stp	q0, q0, [x0, #448]
  40bd40:	stp	q0, q0, [x0, #480]
  40bd44:	bl	405640 <wcrtomb@plt+0xb50>
  40bd48:	sub	x19, x19, #0x200
  40bd4c:	cmp	x19, #0x200
  40bd50:	b.gt	40bcfc <wcrtomb@plt+0x720c>
  40bd54:	ldr	x19, [sp, #16]
  40bd58:	ldp	x29, x30, [sp], #32
  40bd5c:	ret
  40bd60:	stp	x29, x30, [sp, #-32]!
  40bd64:	stp	x20, x19, [sp, #16]
  40bd68:	mov	x19, x0
  40bd6c:	ldr	w0, [x0, #408]
  40bd70:	mov	x29, sp
  40bd74:	bl	404520 <fdopendir@plt>
  40bd78:	str	x0, [x19, #400]
  40bd7c:	cbz	x0, 40bd94 <wcrtomb@plt+0x72a4>
  40bd80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40bd84:	ldr	w1, [x8, #3512]
  40bd88:	ldp	x20, x19, [sp, #16]
  40bd8c:	ldp	x29, x30, [sp], #32
  40bd90:	b	4494c8 <argp_parse@@Base+0xee1c>
  40bd94:	bl	4049c0 <__errno_location@plt>
  40bd98:	mov	x20, x0
  40bd9c:	ldr	w8, [x20]
  40bda0:	cmp	w8, #0x18
  40bda4:	b.ne	40be04 <wcrtomb@plt+0x7314>  // b.any
  40bda8:	ldr	x8, [x19, #392]
  40bdac:	cbz	x8, 40be04 <wcrtomb@plt+0x7314>
  40bdb0:	ldr	x0, [x8, #392]
  40bdb4:	cbnz	x0, 40bdc4 <wcrtomb@plt+0x72d4>
  40bdb8:	b	40bdfc <wcrtomb@plt+0x730c>
  40bdbc:	mov	x0, x8
  40bdc0:	cbz	x8, 40bdfc <wcrtomb@plt+0x730c>
  40bdc4:	ldr	w9, [x0, #408]
  40bdc8:	ldr	x8, [x0, #392]
  40bdcc:	cmp	w9, #0x1
  40bdd0:	b.lt	40bdbc <wcrtomb@plt+0x72cc>  // b.tstop
  40bdd4:	cbz	x8, 40bde4 <wcrtomb@plt+0x72f4>
  40bdd8:	ldr	w9, [x8, #408]
  40bddc:	cmp	w9, #0x1
  40bde0:	b.ge	40bdbc <wcrtomb@plt+0x72cc>  // b.tcont
  40bde4:	bl	425ec8 <wcrtomb@plt+0x213d8>
  40bde8:	ldr	w0, [x19, #408]
  40bdec:	bl	404520 <fdopendir@plt>
  40bdf0:	str	x0, [x19, #400]
  40bdf4:	cbz	x0, 40bd9c <wcrtomb@plt+0x72ac>
  40bdf8:	b	40bd80 <wcrtomb@plt+0x7290>
  40bdfc:	mov	w8, #0x18                  	// #24
  40be00:	str	w8, [x20]
  40be04:	ldp	x20, x19, [sp, #16]
  40be08:	mov	x0, xzr
  40be0c:	ldp	x29, x30, [sp], #32
  40be10:	ret
  40be14:	stp	x29, x30, [sp, #-96]!
  40be18:	stp	x28, x27, [sp, #16]
  40be1c:	stp	x26, x25, [sp, #32]
  40be20:	stp	x24, x23, [sp, #48]
  40be24:	stp	x22, x21, [sp, #64]
  40be28:	stp	x20, x19, [sp, #80]
  40be2c:	mov	x29, sp
  40be30:	sub	sp, sp, #0x360
  40be34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40be38:	ldr	x8, [x8, #3000]
  40be3c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40be40:	ldrb	w9, [x9, #3568]
  40be44:	mov	w0, #0x1                   	// #1
  40be48:	cmp	x8, #0x2
  40be4c:	cset	w8, cc  // cc = lo, ul, last
  40be50:	tst	w9, #0x1
  40be54:	cset	w9, eq  // eq = none
  40be58:	and	w8, w8, w9
  40be5c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40be60:	str	w8, [x9, #912]
  40be64:	bl	405d0c <wcrtomb@plt+0x121c>
  40be68:	bl	404c9c <wcrtomb@plt+0x1ac>
  40be6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40be70:	ldrb	w8, [x8, #3025]
  40be74:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40be78:	cbz	w8, 40bf04 <wcrtomb@plt+0x7414>
  40be7c:	mov	w0, #0x3e8                 	// #1000
  40be80:	bl	44a010 <argp_parse@@Base+0xf964>
  40be84:	mov	x19, x0
  40be88:	bl	41f084 <wcrtomb@plt+0x1a594>
  40be8c:	bl	41f960 <wcrtomb@plt+0x1ae70>
  40be90:	cbz	x0, 40bee4 <wcrtomb@plt+0x73f4>
  40be94:	mov	x20, x0
  40be98:	b	40bea8 <wcrtomb@plt+0x73b8>
  40be9c:	bl	41f960 <wcrtomb@plt+0x1ae70>
  40bea0:	mov	x20, x0
  40bea4:	cbz	x0, 40bee4 <wcrtomb@plt+0x73f4>
  40bea8:	ldr	x0, [x20, #16]
  40beac:	mov	x1, xzr
  40beb0:	bl	40ee74 <wcrtomb@plt+0xa384>
  40beb4:	tbnz	w0, #0, 40be9c <wcrtomb@plt+0x73ac>
  40beb8:	ldr	x20, [x20, #16]
  40bebc:	add	x0, sp, #0x1b0
  40bec0:	bl	425e88 <wcrtomb@plt+0x21398>
  40bec4:	add	x0, sp, #0x1b0
  40bec8:	mov	x1, x20
  40becc:	mov	x2, x20
  40bed0:	str	xzr, [sp, #824]
  40bed4:	bl	40c410 <wcrtomb@plt+0x7920>
  40bed8:	add	x0, sp, #0x1b0
  40bedc:	bl	425f4c <wcrtomb@plt+0x2145c>
  40bee0:	b	40be9c <wcrtomb@plt+0x73ac>
  40bee4:	bl	41f9d8 <wcrtomb@plt+0x1aee8>
  40bee8:	bl	41f960 <wcrtomb@plt+0x1ae70>
  40beec:	cbz	x0, 40c134 <wcrtomb@plt+0x7644>
  40bef0:	add	x22, sp, #0x8
  40bef4:	mov	x24, x0
  40bef8:	mov	w20, #0x3e8                 	// #1000
  40befc:	add	x23, x22, #0x58
  40bf00:	b	40bf90 <wcrtomb@plt+0x74a0>
  40bf04:	mov	w0, #0x1                   	// #1
  40bf08:	bl	41d5e4 <wcrtomb@plt+0x18af4>
  40bf0c:	cbz	x0, 40c13c <wcrtomb@plt+0x764c>
  40bf10:	mov	x19, x0
  40bf14:	b	40bf28 <wcrtomb@plt+0x7438>
  40bf18:	mov	w0, #0x1                   	// #1
  40bf1c:	bl	41d5e4 <wcrtomb@plt+0x18af4>
  40bf20:	mov	x19, x0
  40bf24:	cbz	x0, 40c13c <wcrtomb@plt+0x764c>
  40bf28:	mov	x0, x19
  40bf2c:	mov	x1, xzr
  40bf30:	bl	40ee74 <wcrtomb@plt+0xa384>
  40bf34:	tbnz	w0, #0, 40bf18 <wcrtomb@plt+0x7428>
  40bf38:	add	x0, sp, #0x1b0
  40bf3c:	bl	425e88 <wcrtomb@plt+0x21398>
  40bf40:	add	x0, sp, #0x1b0
  40bf44:	mov	x1, x19
  40bf48:	mov	x2, x19
  40bf4c:	str	xzr, [sp, #824]
  40bf50:	bl	40c410 <wcrtomb@plt+0x7920>
  40bf54:	add	x0, sp, #0x1b0
  40bf58:	bl	425f4c <wcrtomb@plt+0x2145c>
  40bf5c:	b	40bf18 <wcrtomb@plt+0x7428>
  40bf60:	ldr	x9, [x24, #64]
  40bf64:	adrp	x2, 41d000 <wcrtomb@plt+0x18510>
  40bf68:	mov	x0, x8
  40bf6c:	add	x2, x2, #0x8
  40bf70:	cmp	x9, #0x0
  40bf74:	cset	w1, eq  // eq = none
  40bf78:	bl	41d02c <wcrtomb@plt+0x1853c>
  40bf7c:	add	x0, sp, #0x8
  40bf80:	bl	425f4c <wcrtomb@plt+0x2145c>
  40bf84:	bl	41f960 <wcrtomb@plt+0x1ae70>
  40bf88:	mov	x24, x0
  40bf8c:	cbz	x0, 40c134 <wcrtomb@plt+0x7644>
  40bf90:	ldr	x0, [x24, #16]
  40bf94:	mov	x1, xzr
  40bf98:	bl	40ee74 <wcrtomb@plt+0xa384>
  40bf9c:	tbnz	w0, #0, 40bf84 <wcrtomb@plt+0x7494>
  40bfa0:	ldr	x26, [x24, #16]
  40bfa4:	mov	x0, x26
  40bfa8:	bl	403f00 <strlen@plt>
  40bfac:	mov	x25, x0
  40bfb0:	cmp	x20, x0
  40bfb4:	b.hi	40bfd8 <wcrtomb@plt+0x74e8>  // b.pmore
  40bfb8:	lsl	x20, x20, #1
  40bfbc:	cmp	x20, x25
  40bfc0:	b.ls	40bfb8 <wcrtomb@plt+0x74c8>  // b.plast
  40bfc4:	mov	x0, x19
  40bfc8:	mov	x1, x20
  40bfcc:	bl	44a090 <argp_parse@@Base+0xf9e4>
  40bfd0:	ldr	x26, [x24, #16]
  40bfd4:	mov	x19, x0
  40bfd8:	mov	x0, x19
  40bfdc:	mov	x1, x26
  40bfe0:	mov	x2, x25
  40bfe4:	bl	403e80 <memcpy@plt>
  40bfe8:	add	x8, x25, x19
  40bfec:	ldurb	w8, [x8, #-1]
  40bff0:	cmp	w8, #0x2f
  40bff4:	b.eq	40c008 <wcrtomb@plt+0x7518>  // b.none
  40bff8:	add	x8, x25, #0x1
  40bffc:	mov	w9, #0x2f                  	// #47
  40c000:	strb	w9, [x19, x25]
  40c004:	mov	x25, x8
  40c008:	add	x0, sp, #0x8
  40c00c:	bl	425e88 <wcrtomb@plt+0x21398>
  40c010:	ldr	x0, [x24, #56]
  40c014:	bl	4161a4 <wcrtomb@plt+0x116b4>
  40c018:	cbz	x0, 40bf7c <wcrtomb@plt+0x748c>
  40c01c:	ldrb	w27, [x0]
  40c020:	mov	x26, x0
  40c024:	cbnz	w27, 40c040 <wcrtomb@plt+0x7550>
  40c028:	b	40bf7c <wcrtomb@plt+0x748c>
  40c02c:	add	x0, sp, #0x1b0
  40c030:	bl	425f4c <wcrtomb@plt+0x2145c>
  40c034:	add	x26, x27, x26
  40c038:	ldrb	w27, [x26, #1]!
  40c03c:	cbz	w27, 40bf7c <wcrtomb@plt+0x748c>
  40c040:	mov	x0, x26
  40c044:	bl	403f00 <strlen@plt>
  40c048:	and	w8, w27, #0xff
  40c04c:	cmp	w8, #0x59
  40c050:	mov	x27, x0
  40c054:	b.ne	40c034 <wcrtomb@plt+0x7544>  // b.any
  40c058:	ldr	x8, [sp, #8]
  40c05c:	cbz	x8, 40c070 <wcrtomb@plt+0x7580>
  40c060:	add	x8, x27, x25
  40c064:	cmp	x20, x8
  40c068:	b.cc	40c0c0 <wcrtomb@plt+0x75d0>  // b.lo, b.ul, b.last
  40c06c:	b	40c0dc <wcrtomb@plt+0x75ec>
  40c070:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40c074:	ldr	w0, [x8, #1864]
  40c078:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c07c:	ldr	x1, [x24, #16]
  40c080:	ldr	w2, [x8, #3692]
  40c084:	bl	4049a0 <openat@plt>
  40c088:	tbnz	w0, #31, 40c11c <wcrtomb@plt+0x762c>
  40c08c:	mov	w1, w0
  40c090:	str	w0, [sp, #416]
  40c094:	mov	w0, wzr
  40c098:	mov	x2, x23
  40c09c:	bl	404890 <__fxstat@plt>
  40c0a0:	ldr	x8, [x24, #16]
  40c0a4:	cbnz	w0, 40bf60 <wcrtomb@plt+0x7470>
  40c0a8:	mov	x0, x8
  40c0ac:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  40c0b0:	str	x0, [sp, #8]
  40c0b4:	add	x8, x27, x25
  40c0b8:	cmp	x20, x8
  40c0bc:	b.cs	40c0dc <wcrtomb@plt+0x75ec>  // b.hs, b.nlast
  40c0c0:	lsl	x20, x20, #1
  40c0c4:	cmp	x20, x8
  40c0c8:	b.cc	40c0c0 <wcrtomb@plt+0x75d0>  // b.lo, b.ul, b.last
  40c0cc:	mov	x0, x19
  40c0d0:	mov	x1, x20
  40c0d4:	bl	44a090 <argp_parse@@Base+0xf9e4>
  40c0d8:	mov	x19, x0
  40c0dc:	add	x28, x26, #0x1
  40c0e0:	add	x0, x19, x25
  40c0e4:	mov	x1, x28
  40c0e8:	bl	4047f0 <strcpy@plt>
  40c0ec:	add	x0, sp, #0x1b0
  40c0f0:	bl	425e88 <wcrtomb@plt+0x21398>
  40c0f4:	add	x0, sp, #0x1b0
  40c0f8:	mov	x1, x28
  40c0fc:	mov	x2, x19
  40c100:	str	x22, [sp, #824]
  40c104:	bl	40c410 <wcrtomb@plt+0x7920>
  40c108:	ldr	x8, [x21, #3824]
  40c10c:	cbz	x8, 40c02c <wcrtomb@plt+0x753c>
  40c110:	add	x0, sp, #0x8
  40c114:	bl	41537c <wcrtomb@plt+0x1088c>
  40c118:	b	40c02c <wcrtomb@plt+0x753c>
  40c11c:	ldr	x8, [x24, #64]
  40c120:	ldr	x0, [x24, #16]
  40c124:	adrp	x2, 41c000 <wcrtomb@plt+0x17510>
  40c128:	add	x2, x2, #0xf54
  40c12c:	cmp	x8, #0x0
  40c130:	b	40bf74 <wcrtomb@plt+0x7484>
  40c134:	mov	x0, x19
  40c138:	bl	4046b0 <free@plt>
  40c13c:	bl	405310 <wcrtomb@plt+0x820>
  40c140:	movi	v0.2d, #0x0
  40c144:	stp	q0, q0, [x0]
  40c148:	stp	q0, q0, [x0, #32]
  40c14c:	stp	q0, q0, [x0, #64]
  40c150:	stp	q0, q0, [x0, #96]
  40c154:	stp	q0, q0, [x0, #128]
  40c158:	stp	q0, q0, [x0, #160]
  40c15c:	stp	q0, q0, [x0, #192]
  40c160:	stp	q0, q0, [x0, #224]
  40c164:	stp	q0, q0, [x0, #256]
  40c168:	stp	q0, q0, [x0, #288]
  40c16c:	stp	q0, q0, [x0, #320]
  40c170:	stp	q0, q0, [x0, #352]
  40c174:	stp	q0, q0, [x0, #384]
  40c178:	stp	q0, q0, [x0, #416]
  40c17c:	stp	q0, q0, [x0, #448]
  40c180:	stp	q0, q0, [x0, #480]
  40c184:	bl	405640 <wcrtomb@plt+0xb50>
  40c188:	bl	405310 <wcrtomb@plt+0x820>
  40c18c:	mov	x19, x0
  40c190:	bl	405684 <wcrtomb@plt+0xb94>
  40c194:	mov	x2, x0
  40c198:	mov	x0, x19
  40c19c:	mov	w1, wzr
  40c1a0:	bl	404320 <memset@plt>
  40c1a4:	mov	x0, x19
  40c1a8:	bl	405640 <wcrtomb@plt+0xb50>
  40c1ac:	bl	405974 <wcrtomb@plt+0xe84>
  40c1b0:	bl	429e04 <wcrtomb@plt+0x25314>
  40c1b4:	ldr	x8, [x21, #3824]
  40c1b8:	cbz	x8, 40c1c0 <wcrtomb@plt+0x76d0>
  40c1bc:	bl	417148 <wcrtomb@plt+0x12658>
  40c1c0:	add	sp, sp, #0x360
  40c1c4:	ldp	x20, x19, [sp, #80]
  40c1c8:	ldp	x22, x21, [sp, #64]
  40c1cc:	ldp	x24, x23, [sp, #48]
  40c1d0:	ldp	x26, x25, [sp, #32]
  40c1d4:	ldp	x28, x27, [sp, #16]
  40c1d8:	ldp	x29, x30, [sp], #96
  40c1dc:	ret
  40c1e0:	sub	sp, sp, #0x1e0
  40c1e4:	stp	x20, x19, [sp, #464]
  40c1e8:	mov	x19, x0
  40c1ec:	add	x0, sp, #0x8
  40c1f0:	stp	x29, x30, [sp, #432]
  40c1f4:	stp	x28, x21, [sp, #448]
  40c1f8:	add	x29, sp, #0x1b0
  40c1fc:	mov	x20, x2
  40c200:	mov	x21, x1
  40c204:	bl	425e88 <wcrtomb@plt+0x21398>
  40c208:	add	x0, sp, #0x8
  40c20c:	mov	x1, x21
  40c210:	mov	x2, x20
  40c214:	str	x19, [sp, #400]
  40c218:	bl	40c410 <wcrtomb@plt+0x7920>
  40c21c:	cbz	x19, 40c234 <wcrtomb@plt+0x7744>
  40c220:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c224:	ldr	x8, [x8, #3824]
  40c228:	cbz	x8, 40c234 <wcrtomb@plt+0x7744>
  40c22c:	mov	x0, x19
  40c230:	bl	41537c <wcrtomb@plt+0x1088c>
  40c234:	add	x0, sp, #0x8
  40c238:	bl	425f4c <wcrtomb@plt+0x2145c>
  40c23c:	ldp	x20, x19, [sp, #464]
  40c240:	ldp	x28, x21, [sp, #448]
  40c244:	ldp	x29, x30, [sp, #432]
  40c248:	add	sp, sp, #0x1e0
  40c24c:	ret
  40c250:	stp	x29, x30, [sp, #-64]!
  40c254:	stp	x22, x21, [sp, #32]
  40c258:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c25c:	ldr	x0, [x22, #928]
  40c260:	str	x23, [sp, #16]
  40c264:	stp	x20, x19, [sp, #48]
  40c268:	mov	x29, sp
  40c26c:	cbz	x0, 40c2e8 <wcrtomb@plt+0x77f8>
  40c270:	bl	43e910 <argp_parse@@Base+0x4264>
  40c274:	cbz	x0, 40c2e8 <wcrtomb@plt+0x77f8>
  40c278:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40c27c:	mov	x19, x0
  40c280:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c284:	add	x20, x20, #0x9b1
  40c288:	b	40c2d0 <wcrtomb@plt+0x77e0>
  40c28c:	mov	w2, #0x5                   	// #5
  40c290:	mov	x0, xzr
  40c294:	mov	x1, x20
  40c298:	bl	4048b0 <dcgettext@plt>
  40c29c:	mov	x21, x0
  40c2a0:	add	x0, x19, #0x14
  40c2a4:	bl	449144 <argp_parse@@Base+0xea98>
  40c2a8:	mov	x3, x0
  40c2ac:	mov	w0, wzr
  40c2b0:	mov	w1, wzr
  40c2b4:	mov	x2, x21
  40c2b8:	bl	403f60 <error@plt>
  40c2bc:	ldr	x0, [x22, #928]
  40c2c0:	mov	x1, x19
  40c2c4:	bl	43e94c <argp_parse@@Base+0x42a0>
  40c2c8:	mov	x19, x0
  40c2cc:	cbz	x0, 40c2e8 <wcrtomb@plt+0x77f8>
  40c2d0:	ldr	w8, [x19, #16]
  40c2d4:	cbz	w8, 40c2bc <wcrtomb@plt+0x77cc>
  40c2d8:	ldr	x8, [x23, #4000]
  40c2dc:	cbz	x8, 40c28c <wcrtomb@plt+0x779c>
  40c2e0:	blr	x8
  40c2e4:	b	40c28c <wcrtomb@plt+0x779c>
  40c2e8:	ldp	x20, x19, [sp, #48]
  40c2ec:	ldp	x22, x21, [sp, #32]
  40c2f0:	ldr	x23, [sp, #16]
  40c2f4:	ldp	x29, x30, [sp], #64
  40c2f8:	ret
  40c2fc:	sub	sp, sp, #0xb0
  40c300:	stp	x29, x30, [sp, #128]
  40c304:	stp	x20, x19, [sp, #160]
  40c308:	str	x21, [sp, #144]
  40c30c:	ldr	x21, [x0, #392]
  40c310:	add	x29, sp, #0x80
  40c314:	cbz	x21, 40c384 <wcrtomb@plt+0x7894>
  40c318:	ldr	w8, [x21, #408]
  40c31c:	cbnz	w8, 40c384 <wcrtomb@plt+0x7894>
  40c320:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c324:	ldr	w0, [x0, #408]
  40c328:	ldr	w2, [x20, #3692]
  40c32c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  40c330:	add	x1, x1, #0xfd9
  40c334:	bl	4049a0 <openat@plt>
  40c338:	tbnz	w0, #31, 40c398 <wcrtomb@plt+0x78a8>
  40c33c:	mov	w19, w0
  40c340:	mov	x2, sp
  40c344:	mov	w0, wzr
  40c348:	mov	w1, w19
  40c34c:	bl	404890 <__fxstat@plt>
  40c350:	cbnz	w0, 40c374 <wcrtomb@plt+0x7884>
  40c354:	ldr	x8, [x21, #96]
  40c358:	ldr	x9, [sp, #8]
  40c35c:	cmp	x8, x9
  40c360:	b.ne	40c374 <wcrtomb@plt+0x7884>  // b.any
  40c364:	ldr	x8, [x21, #88]
  40c368:	ldr	x9, [sp]
  40c36c:	cmp	x8, x9
  40c370:	b.eq	40c380 <wcrtomb@plt+0x7890>  // b.none
  40c374:	mov	w0, w19
  40c378:	bl	4044d0 <close@plt>
  40c37c:	mov	w19, #0x2                   	// #2
  40c380:	str	w19, [x21, #408]
  40c384:	ldp	x20, x19, [sp, #160]
  40c388:	ldr	x21, [sp, #144]
  40c38c:	ldp	x29, x30, [sp, #128]
  40c390:	add	sp, sp, #0xb0
  40c394:	ret
  40c398:	bl	4049c0 <__errno_location@plt>
  40c39c:	ldr	w8, [x0]
  40c3a0:	cmp	w8, #0x1
  40c3a4:	neg	w19, w8
  40c3a8:	b.lt	40c380 <wcrtomb@plt+0x7890>  // b.tstop
  40c3ac:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40c3b0:	ldr	x1, [x21]
  40c3b4:	ldr	w0, [x8, #1864]
  40c3b8:	ldr	w2, [x20, #3692]
  40c3bc:	bl	4049a0 <openat@plt>
  40c3c0:	tbnz	w0, #31, 40c380 <wcrtomb@plt+0x7890>
  40c3c4:	mov	w20, w0
  40c3c8:	mov	x2, sp
  40c3cc:	mov	w0, wzr
  40c3d0:	mov	w1, w19
  40c3d4:	bl	404890 <__fxstat@plt>
  40c3d8:	cbnz	w0, 40c404 <wcrtomb@plt+0x7914>
  40c3dc:	ldr	x8, [x21, #96]
  40c3e0:	ldr	x9, [sp, #8]
  40c3e4:	cmp	x8, x9
  40c3e8:	b.ne	40c404 <wcrtomb@plt+0x7914>  // b.any
  40c3ec:	ldr	x8, [x21, #88]
  40c3f0:	ldr	x9, [sp]
  40c3f4:	cmp	x8, x9
  40c3f8:	b.ne	40c404 <wcrtomb@plt+0x7914>  // b.any
  40c3fc:	mov	w19, w20
  40c400:	b	40c380 <wcrtomb@plt+0x7890>
  40c404:	mov	w0, w20
  40c408:	bl	4044d0 <close@plt>
  40c40c:	b	40c380 <wcrtomb@plt+0x7890>
  40c410:	sub	sp, sp, #0x120
  40c414:	stp	x29, x30, [sp, #192]
  40c418:	stp	x28, x27, [sp, #208]
  40c41c:	stp	x26, x25, [sp, #224]
  40c420:	stp	x24, x23, [sp, #240]
  40c424:	stp	x22, x21, [sp, #256]
  40c428:	stp	x20, x19, [sp, #272]
  40c42c:	ldr	x22, [x0, #392]
  40c430:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40c434:	add	x8, x8, #0x748
  40c438:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c43c:	add	x10, x22, #0x198
  40c440:	cmp	x22, #0x0
  40c444:	csel	x27, x8, x10, eq  // eq = none
  40c448:	ldrb	w8, [x9, #3584]
  40c44c:	ldr	w23, [x27]
  40c450:	mov	x19, x2
  40c454:	mov	x20, x0
  40c458:	mov	x21, x1
  40c45c:	add	x29, sp, #0xc0
  40c460:	cbz	w8, 40c478 <wcrtomb@plt+0x7988>
  40c464:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40c468:	add	x0, x0, #0xae2
  40c46c:	mov	x1, x19
  40c470:	bl	424888 <wcrtomb@plt+0x1fd98>
  40c474:	cbz	w0, 40cec4 <wcrtomb@plt+0x83d4>
  40c478:	mov	x0, x20
  40c47c:	mov	x1, x19
  40c480:	bl	41b60c <wcrtomb@plt+0x16b1c>
  40c484:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c488:	ldrb	w2, [x28, #3944]
  40c48c:	mov	x0, x19
  40c490:	mov	w1, wzr
  40c494:	add	x24, x20, #0x8
  40c498:	bl	42da24 <wcrtomb@plt+0x28f34>
  40c49c:	mov	x1, x0
  40c4a0:	mov	x0, x24
  40c4a4:	bl	41b60c <wcrtomb@plt+0x16b1c>
  40c4a8:	mov	w1, #0x1                   	// #1
  40c4ac:	mov	x0, x24
  40c4b0:	bl	429c30 <wcrtomb@plt+0x25140>
  40c4b4:	cbz	x22, 40c4d4 <wcrtomb@plt+0x79e4>
  40c4b8:	tbz	w23, #31, 40c4d4 <wcrtomb@plt+0x79e4>
  40c4bc:	neg	w20, w23
  40c4c0:	bl	4049c0 <__errno_location@plt>
  40c4c4:	adrp	x2, 41c000 <wcrtomb@plt+0x17510>
  40c4c8:	str	w20, [x0]
  40c4cc:	add	x2, x2, #0xf54
  40c4d0:	b	40c500 <wcrtomb@plt+0x7a10>
  40c4d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c4d8:	ldr	w4, [x8, #3552]
  40c4dc:	add	x26, x20, #0x58
  40c4e0:	mov	w0, wzr
  40c4e4:	mov	w1, w23
  40c4e8:	mov	x2, x21
  40c4ec:	mov	x3, x26
  40c4f0:	bl	404ad0 <__fxstatat@plt>
  40c4f4:	cbz	w0, 40c52c <wcrtomb@plt+0x7a3c>
  40c4f8:	adrp	x2, 41d000 <wcrtomb@plt+0x18510>
  40c4fc:	add	x2, x2, #0x8
  40c500:	cmp	x22, #0x0
  40c504:	mov	x0, x19
  40c508:	ldp	x20, x19, [sp, #272]
  40c50c:	ldp	x22, x21, [sp, #256]
  40c510:	ldp	x24, x23, [sp, #240]
  40c514:	ldp	x26, x25, [sp, #224]
  40c518:	ldp	x28, x27, [sp, #208]
  40c51c:	ldp	x29, x30, [sp, #192]
  40c520:	cset	w1, eq  // eq = none
  40c524:	add	sp, sp, #0x120
  40c528:	b	41d02c <wcrtomb@plt+0x1853c>
  40c52c:	ldr	w8, [x20, #104]
  40c530:	and	w9, w8, #0xf000
  40c534:	cmp	w9, #0x4, lsl #12
  40c538:	b.eq	40c674 <wcrtomb@plt+0x7b84>  // b.none
  40c53c:	cmp	w9, #0x8, lsl #12
  40c540:	b.ne	40c5b8 <wcrtomb@plt+0x7ac8>  // b.any
  40c544:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c548:	ldrb	w9, [x9, #3528]
  40c54c:	cbz	w9, 40c5a4 <wcrtomb@plt+0x7ab4>
  40c550:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c554:	ldrb	w8, [x8, #3689]
  40c558:	mov	w25, wzr
  40c55c:	cbz	w8, 40c5bc <wcrtomb@plt+0x7acc>
  40c560:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c564:	ldrb	w8, [x8, #3904]
  40c568:	cbz	w8, 40c5bc <wcrtomb@plt+0x7acc>
  40c56c:	ldr	x8, [x20, #136]
  40c570:	ldr	x9, [x20, #152]
  40c574:	cmp	x8, #0x0
  40c578:	add	x10, x8, #0x1ff
  40c57c:	csel	x11, x10, x8, lt  // lt = tstop
  40c580:	tst	x8, #0x1ff
  40c584:	cset	w8, ne  // ne = any
  40c588:	cmp	x10, #0x3fe
  40c58c:	cset	w10, hi  // hi = pmore
  40c590:	and	w8, w10, w8
  40c594:	add	x8, x8, x11, asr #9
  40c598:	cmp	x9, x8
  40c59c:	b.ge	40c5b8 <wcrtomb@plt+0x7ac8>  // b.tcont
  40c5a0:	b	40c674 <wcrtomb@plt+0x7b84>
  40c5a4:	mov	w9, #0x124                 	// #292
  40c5a8:	bics	wzr, w9, w8
  40c5ac:	b.ne	40c674 <wcrtomb@plt+0x7b84>  // b.any
  40c5b0:	ldr	x8, [x20, #136]
  40c5b4:	cbnz	x8, 40c674 <wcrtomb@plt+0x7b84>
  40c5b8:	mov	w25, wzr
  40c5bc:	ldr	x26, [x20, #136]
  40c5c0:	ldp	q1, q0, [x20, #160]
  40c5c4:	ldr	q2, [x20, #192]
  40c5c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c5cc:	str	x26, [x20, #264]
  40c5d0:	stur	q1, [x20, #216]
  40c5d4:	stur	q0, [x20, #232]
  40c5d8:	stur	q2, [x20, #248]
  40c5dc:	ldrb	w8, [x8, #3025]
  40c5e0:	cbz	x22, 40c5e8 <wcrtomb@plt+0x7af8>
  40c5e4:	cbnz	w8, 40c5f8 <wcrtomb@plt+0x7b08>
  40c5e8:	ldr	w9, [x20, #104]
  40c5ec:	and	w9, w9, #0xf000
  40c5f0:	cmp	w9, #0x4, lsl #12
  40c5f4:	b.ne	40c834 <wcrtomb@plt+0x7d44>  // b.any
  40c5f8:	mov	x0, x20
  40c5fc:	str	q2, [sp, #32]
  40c600:	bl	42304c <wcrtomb@plt+0x1e55c>
  40c604:	tbz	w0, #0, 40c6ac <wcrtomb@plt+0x7bbc>
  40c608:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40c60c:	ldrb	w8, [x8, #3713]
  40c610:	tbz	w8, #2, 40cec4 <wcrtomb@plt+0x83d4>
  40c614:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c618:	ldr	x8, [x8, #4000]
  40c61c:	cbz	x8, 40c624 <wcrtomb@plt+0x7b34>
  40c620:	blr	x8
  40c624:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40c628:	add	x1, x1, #0xb08
  40c62c:	mov	w2, #0x5                   	// #5
  40c630:	mov	x0, xzr
  40c634:	bl	4048b0 <dcgettext@plt>
  40c638:	mov	x20, x0
  40c63c:	mov	x0, x19
  40c640:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40c644:	mov	x2, x20
  40c648:	ldp	x20, x19, [sp, #272]
  40c64c:	ldp	x22, x21, [sp, #256]
  40c650:	ldp	x24, x23, [sp, #240]
  40c654:	ldp	x26, x25, [sp, #224]
  40c658:	ldp	x28, x27, [sp, #208]
  40c65c:	ldp	x29, x30, [sp, #192]
  40c660:	mov	x3, x0
  40c664:	mov	w0, wzr
  40c668:	mov	w1, wzr
  40c66c:	add	sp, sp, #0x120
  40c670:	b	403f60 <error@plt>
  40c674:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c678:	ldr	w2, [x8, #3700]
  40c67c:	mov	x0, x22
  40c680:	mov	x1, x21
  40c684:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  40c688:	tbnz	w0, #31, 40c828 <wcrtomb@plt+0x7d38>
  40c68c:	mov	w25, w0
  40c690:	str	w0, [x20, #408]
  40c694:	mov	w0, wzr
  40c698:	mov	w1, w25
  40c69c:	mov	x2, x26
  40c6a0:	bl	404890 <__fxstat@plt>
  40c6a4:	cbnz	w0, 40c4f8 <wcrtomb@plt+0x7a08>
  40c6a8:	b	40c5bc <wcrtomb@plt+0x7acc>
  40c6ac:	ldr	w8, [x20, #104]
  40c6b0:	str	x26, [sp, #16]
  40c6b4:	and	w8, w8, #0xf000
  40c6b8:	cmp	w8, #0x4, lsl #12
  40c6bc:	str	w8, [sp, #28]
  40c6c0:	b.ne	40c8b0 <wcrtomb@plt+0x7dc0>  // b.any
  40c6c4:	ldr	w28, [sp, #28]
  40c6c8:	mov	w0, w23
  40c6cc:	mov	x1, x21
  40c6d0:	mov	x2, x20
  40c6d4:	cmp	w28, #0x4, lsl #12
  40c6d8:	cset	w26, ne  // ne = any
  40c6dc:	mov	w3, wzr
  40c6e0:	mov	w4, w26
  40c6e4:	bl	42aa5c <wcrtomb@plt+0x25f6c>
  40c6e8:	mov	w0, w23
  40c6ec:	mov	x1, x21
  40c6f0:	mov	x2, x20
  40c6f4:	mov	w3, w25
  40c6f8:	bl	42b9d8 <wcrtomb@plt+0x26ee8>
  40c6fc:	mov	w0, w23
  40c700:	mov	x1, x21
  40c704:	mov	x2, x20
  40c708:	mov	w3, w25
  40c70c:	bl	42b50c <wcrtomb@plt+0x26a1c>
  40c710:	cmp	w28, #0x4, lsl #12
  40c714:	b.ne	40c9f4 <wcrtomb@plt+0x7f04>  // b.any
  40c718:	ldr	x23, [x20]
  40c71c:	mov	x0, x23
  40c720:	bl	403f00 <strlen@plt>
  40c724:	mov	x25, x0
  40c728:	cbz	x0, 40c740 <wcrtomb@plt+0x7c50>
  40c72c:	add	x8, x23, x25
  40c730:	ldurb	w8, [x8, #-1]
  40c734:	sub	x0, x25, #0x1
  40c738:	cmp	w8, #0x2f
  40c73c:	b.eq	40c724 <wcrtomb@plt+0x7c34>  // b.none
  40c740:	ldrb	w8, [x23, x25]
  40c744:	cmp	w8, #0x2f
  40c748:	b.eq	40c760 <wcrtomb@plt+0x7c70>  // b.none
  40c74c:	add	x1, x25, #0x2
  40c750:	mov	x0, x23
  40c754:	bl	44a090 <argp_parse@@Base+0xf9e4>
  40c758:	mov	x23, x0
  40c75c:	str	x0, [x20]
  40c760:	mov	w8, #0x2f                  	// #47
  40c764:	strb	w8, [x23, x25]
  40c768:	ldr	x8, [x20]
  40c76c:	add	x8, x8, x25
  40c770:	strb	wzr, [x8, #1]
  40c774:	ldr	x23, [x20, #8]
  40c778:	mov	x0, x23
  40c77c:	bl	403f00 <strlen@plt>
  40c780:	mov	x25, x0
  40c784:	cbz	x0, 40c79c <wcrtomb@plt+0x7cac>
  40c788:	add	x8, x23, x25
  40c78c:	ldurb	w8, [x8, #-1]
  40c790:	sub	x0, x25, #0x1
  40c794:	cmp	w8, #0x2f
  40c798:	b.eq	40c780 <wcrtomb@plt+0x7c90>  // b.none
  40c79c:	ldrb	w8, [x23, x25]
  40c7a0:	cmp	w8, #0x2f
  40c7a4:	b.eq	40c7bc <wcrtomb@plt+0x7ccc>  // b.none
  40c7a8:	add	x1, x25, #0x2
  40c7ac:	mov	x0, x23
  40c7b0:	bl	44a090 <argp_parse@@Base+0xf9e4>
  40c7b4:	mov	x23, x0
  40c7b8:	str	x0, [x24]
  40c7bc:	mov	w8, #0x2f                  	// #47
  40c7c0:	strb	w8, [x23, x25]
  40c7c4:	ldr	x8, [x24]
  40c7c8:	add	x8, x8, x25
  40c7cc:	strb	wzr, [x8, #1]
  40c7d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c7d4:	ldr	x25, [x8, #920]
  40c7d8:	cbz	x25, 40cdfc <wcrtomb@plt+0x830c>
  40c7dc:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c7e0:	b	40c7ec <wcrtomb@plt+0x7cfc>
  40c7e4:	ldr	x25, [x25, #32]
  40c7e8:	cbz	x25, 40cdfc <wcrtomb@plt+0x830c>
  40c7ec:	ldr	x1, [x25]
  40c7f0:	ldr	w2, [x28, #3700]
  40c7f4:	mov	x0, x20
  40c7f8:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  40c7fc:	tbnz	w0, #31, 40c7e4 <wcrtomb@plt+0x7cf4>
  40c800:	ldr	x8, [x25, #24]
  40c804:	mov	w23, w0
  40c808:	cbz	x8, 40cd50 <wcrtomb@plt+0x8260>
  40c80c:	mov	w0, w23
  40c810:	blr	x8
  40c814:	mov	w24, w0
  40c818:	mov	w0, w23
  40c81c:	bl	4044d0 <close@plt>
  40c820:	tbz	w24, #0, 40c7e4 <wcrtomb@plt+0x7cf4>
  40c824:	b	40cd58 <wcrtomb@plt+0x8268>
  40c828:	adrp	x2, 41c000 <wcrtomb@plt+0x17510>
  40c82c:	add	x2, x2, #0xf54
  40c830:	b	40c500 <wcrtomb@plt+0x7a10>
  40c834:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c838:	add	x9, x9, #0xbd8
  40c83c:	ldp	x10, x9, [x9]
  40c840:	fmov	x11, d0
  40c844:	cmp	x11, x10
  40c848:	b.ge	40ca78 <wcrtomb@plt+0x7f88>  // b.tcont
  40c84c:	fmov	x11, d2
  40c850:	cmp	x11, x10
  40c854:	b.lt	40c878 <wcrtomb@plt+0x7d88>  // b.tstop
  40c858:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c85c:	ldr	w12, [x12, #3964]
  40c860:	cbz	w12, 40c878 <wcrtomb@plt+0x7d88>
  40c864:	cmp	x11, x10
  40c868:	b.gt	40c5f8 <wcrtomb@plt+0x7b08>
  40c86c:	mov	x10, v2.d[1]
  40c870:	cmp	w10, w9
  40c874:	b.pl	40c5f8 <wcrtomb@plt+0x7b08>  // b.nfrst
  40c878:	cbnz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40c87c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c880:	ldr	w8, [x8, #3636]
  40c884:	cbz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40c888:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40c88c:	ldrb	w8, [x8, #3713]
  40c890:	tbz	w8, #0, 40cec4 <wcrtomb@plt+0x83d4>
  40c894:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c898:	ldr	x8, [x8, #4000]
  40c89c:	cbz	x8, 40c8a4 <wcrtomb@plt+0x7db4>
  40c8a0:	blr	x8
  40c8a4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40c8a8:	add	x1, x1, #0xae6
  40c8ac:	b	40c62c <wcrtomb@plt+0x7b3c>
  40c8b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c8b4:	ldr	x0, [x8, #928]
  40c8b8:	cbz	x0, 40c9b8 <wcrtomb@plt+0x7ec8>
  40c8bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c8c0:	ldr	w8, [x8, #912]
  40c8c4:	ldr	w9, [x20, #108]
  40c8c8:	cmp	w8, w9
  40c8cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c8d0:	b.cc	40c8dc <wcrtomb@plt+0x7dec>  // b.lo, b.ul, b.last
  40c8d4:	ldrb	w8, [x8, #3736]
  40c8d8:	cbz	w8, 40c9b8 <wcrtomb@plt+0x7ec8>
  40c8dc:	ldur	q0, [x20, #88]
  40c8e0:	add	x1, sp, #0x30
  40c8e4:	str	q0, [sp, #48]
  40c8e8:	bl	43e854 <argp_parse@@Base+0x41a8>
  40c8ec:	cbz	x0, 40c9b8 <wcrtomb@plt+0x7ec8>
  40c8f0:	ldrb	w2, [x28, #3944]
  40c8f4:	mov	x26, x0
  40c8f8:	add	x0, x0, #0x14
  40c8fc:	mov	w1, #0x1                   	// #1
  40c900:	bl	42da24 <wcrtomb@plt+0x28f34>
  40c904:	ldr	w8, [x26, #16]
  40c908:	mov	x9, x26
  40c90c:	mov	x26, x0
  40c910:	cbz	w8, 40c91c <wcrtomb@plt+0x7e2c>
  40c914:	sub	w8, w8, #0x1
  40c918:	str	w8, [x9, #16]
  40c91c:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40c920:	str	x0, [sp, #8]
  40c924:	add	x0, x20, #0x18
  40c928:	mov	x1, x26
  40c92c:	bl	41b60c <wcrtomb@plt+0x16b1c>
  40c930:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c934:	ldr	w8, [x8, #3808]
  40c938:	mov	x0, x26
  40c93c:	cmp	w8, #0x2
  40c940:	mov	w8, #0x63                  	// #99
  40c944:	cinc	x28, x8, ne  // ne = any
  40c948:	bl	403f00 <strlen@plt>
  40c94c:	cmp	x28, x0
  40c950:	b.cs	40c95c <wcrtomb@plt+0x7e6c>  // b.hs, b.nlast
  40c954:	mov	x0, x20
  40c958:	bl	40d6ac <wcrtomb@plt+0x8bbc>
  40c95c:	mov	x0, x20
  40c960:	str	xzr, [x20, #136]
  40c964:	bl	40b088 <wcrtomb@plt+0x6598>
  40c968:	cbz	x0, 40c9b8 <wcrtomb@plt+0x7ec8>
  40c96c:	mov	x1, x0
  40c970:	mov	x8, xzr
  40c974:	ldrb	w9, [x26, x8]
  40c978:	add	x10, x1, x8
  40c97c:	cmp	x8, #0x62
  40c980:	strb	w9, [x10, #157]
  40c984:	b.hi	40c990 <wcrtomb@plt+0x7ea0>  // b.pmore
  40c988:	add	x8, x8, #0x1
  40c98c:	cbnz	w9, 40c974 <wcrtomb@plt+0x7e84>
  40c990:	ldr	x2, [sp, #8]
  40c994:	mov	w8, #0x31                  	// #49
  40c998:	mov	x0, x20
  40c99c:	strb	w8, [x1, #156]
  40c9a0:	bl	40bc00 <wcrtomb@plt+0x7110>
  40c9a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c9a8:	ldrb	w8, [x8, #3736]
  40c9ac:	cbz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40c9b0:	ldr	x0, [x20]
  40c9b4:	b	40cc54 <wcrtomb@plt+0x8164>
  40c9b8:	ldr	w8, [x20, #104]
  40c9bc:	and	w8, w8, #0xf000
  40c9c0:	sub	w8, w8, #0x1, lsl #12
  40c9c4:	lsr	w8, w8, #12
  40c9c8:	cmp	w8, #0xb
  40c9cc:	b.hi	40cb40 <wcrtomb@plt+0x8050>  // b.pmore
  40c9d0:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40c9d4:	add	x9, x9, #0x8ca
  40c9d8:	adr	x10, 40c6c4 <wcrtomb@plt+0x7bd4>
  40c9dc:	ldrh	w11, [x9, x8, lsl #1]
  40c9e0:	add	x10, x10, x11, lsl #2
  40c9e4:	mov	w26, #0x33                  	// #51
  40c9e8:	br	x10
  40c9ec:	mov	w26, #0x36                  	// #54
  40c9f0:	b	40caf0 <wcrtomb@plt+0x8000>
  40c9f4:	cbz	w25, 40ca50 <wcrtomb@plt+0x7f60>
  40c9f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40c9fc:	ldrb	w8, [x8, #3904]
  40ca00:	cbz	w8, 40ca50 <wcrtomb@plt+0x7f60>
  40ca04:	ldr	x8, [x20, #136]
  40ca08:	ldr	x9, [x20, #152]
  40ca0c:	cmp	x8, #0x0
  40ca10:	add	x10, x8, #0x1ff
  40ca14:	csel	x11, x10, x8, lt  // lt = tstop
  40ca18:	tst	x8, #0x1ff
  40ca1c:	cset	w8, ne  // ne = any
  40ca20:	cmp	x10, #0x3fe
  40ca24:	cset	w10, hi  // hi = pmore
  40ca28:	and	w8, w10, w8
  40ca2c:	add	x8, x8, x11, asr #9
  40ca30:	cmp	x9, x8
  40ca34:	b.ge	40ca50 <wcrtomb@plt+0x7f60>  // b.tcont
  40ca38:	mov	w0, w25
  40ca3c:	mov	x1, x20
  40ca40:	bl	41ff18 <wcrtomb@plt+0x1b428>
  40ca44:	mov	w24, w0
  40ca48:	cmp	w0, #0x3
  40ca4c:	b.ne	40ca60 <wcrtomb@plt+0x7f70>  // b.any
  40ca50:	mov	w0, w25
  40ca54:	mov	x1, x20
  40ca58:	bl	40d270 <wcrtomb@plt+0x8780>
  40ca5c:	mov	w24, w0
  40ca60:	cmp	w24, #0x2
  40ca64:	b.cs	40ca8c <wcrtomb@plt+0x7f9c>  // b.hs, b.nlast
  40ca68:	mov	x0, x20
  40ca6c:	bl	40d598 <wcrtomb@plt+0x8aa8>
  40ca70:	cbnz	w24, 40ce90 <wcrtomb@plt+0x83a0>
  40ca74:	b	40ce34 <wcrtomb@plt+0x8344>
  40ca78:	b.gt	40c5f8 <wcrtomb@plt+0x7b08>
  40ca7c:	mov	x11, v0.d[1]
  40ca80:	cmp	w11, w9
  40ca84:	b.pl	40c5f8 <wcrtomb@plt+0x7b08>  // b.nfrst
  40ca88:	b	40c84c <wcrtomb@plt+0x7d5c>
  40ca8c:	cmp	w24, #0x3
  40ca90:	b.ne	40ce90 <wcrtomb@plt+0x83a0>  // b.any
  40ca94:	bl	404560 <abort@plt>
  40ca98:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40ca9c:	ldrb	w8, [x8, #3712]
  40caa0:	tbz	w8, #5, 40cec4 <wcrtomb@plt+0x83d4>
  40caa4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40caa8:	ldr	x8, [x8, #4000]
  40caac:	cbz	x8, 40cab4 <wcrtomb@plt+0x7fc4>
  40cab0:	blr	x8
  40cab4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cab8:	add	x1, x1, #0xb60
  40cabc:	mov	w2, #0x5                   	// #5
  40cac0:	mov	x0, xzr
  40cac4:	bl	4048b0 <dcgettext@plt>
  40cac8:	mov	x20, x0
  40cacc:	mov	x0, x19
  40cad0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40cad4:	mov	x3, x0
  40cad8:	mov	w0, wzr
  40cadc:	mov	w1, wzr
  40cae0:	mov	x2, x20
  40cae4:	bl	403f60 <error@plt>
  40cae8:	b	40cec4 <wcrtomb@plt+0x83d4>
  40caec:	mov	w26, #0x34                  	// #52
  40caf0:	mov	w4, #0x1                   	// #1
  40caf4:	mov	w0, w23
  40caf8:	mov	x1, x21
  40cafc:	mov	x2, x20
  40cb00:	mov	w3, wzr
  40cb04:	bl	42aa5c <wcrtomb@plt+0x25f6c>
  40cb08:	mov	w0, w23
  40cb0c:	mov	x1, x21
  40cb10:	mov	x2, x20
  40cb14:	mov	w3, wzr
  40cb18:	bl	42b9d8 <wcrtomb@plt+0x26ee8>
  40cb1c:	mov	w0, w23
  40cb20:	mov	x1, x21
  40cb24:	mov	x2, x20
  40cb28:	mov	w3, wzr
  40cb2c:	bl	42b50c <wcrtomb@plt+0x26a1c>
  40cb30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cb34:	ldr	w8, [x8, #3808]
  40cb38:	cmp	w8, #0x1
  40cb3c:	b.ne	40cba8 <wcrtomb@plt+0x80b8>  // b.any
  40cb40:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40cb44:	ldrb	w8, [x8, #3712]
  40cb48:	tbz	w8, #5, 40cb90 <wcrtomb@plt+0x80a0>
  40cb4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cb50:	ldr	x8, [x8, #4000]
  40cb54:	cbz	x8, 40cb5c <wcrtomb@plt+0x806c>
  40cb58:	blr	x8
  40cb5c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cb60:	add	x1, x1, #0xc53
  40cb64:	mov	w2, #0x5                   	// #5
  40cb68:	mov	x0, xzr
  40cb6c:	bl	4048b0 <dcgettext@plt>
  40cb70:	mov	x20, x0
  40cb74:	mov	x0, x19
  40cb78:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40cb7c:	mov	x3, x0
  40cb80:	mov	w0, wzr
  40cb84:	mov	w1, wzr
  40cb88:	mov	x2, x20
  40cb8c:	bl	403f60 <error@plt>
  40cb90:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cb94:	ldrb	w8, [x8, #3945]
  40cb98:	cbnz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40cb9c:	mov	w0, #0x2                   	// #2
  40cba0:	bl	425e70 <wcrtomb@plt+0x21380>
  40cba4:	b	40cec4 <wcrtomb@plt+0x83d4>
  40cba8:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40cbac:	mov	x21, x0
  40cbb0:	mov	x0, x20
  40cbb4:	str	xzr, [x20, #136]
  40cbb8:	bl	40b088 <wcrtomb@plt+0x6598>
  40cbbc:	cbz	x0, 40cec4 <wcrtomb@plt+0x83d4>
  40cbc0:	mov	x22, x0
  40cbc4:	cmp	w26, #0x36
  40cbc8:	strb	w26, [x0, #156]
  40cbcc:	b.eq	40cc34 <wcrtomb@plt+0x8144>  // b.none
  40cbd0:	ldr	x8, [x20, #120]
  40cbd4:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cbd8:	add	x4, x22, #0x149
  40cbdc:	add	x6, x6, #0xac8
  40cbe0:	lsr	x9, x8, #8
  40cbe4:	lsr	x0, x8, #63
  40cbe8:	and	x8, x8, #0xfffff00000000000
  40cbec:	bfi	x8, x9, #32, #12
  40cbf0:	asr	x1, x8, #32
  40cbf4:	mov	w2, #0x4                   	// #4
  40cbf8:	mov	w5, #0x8                   	// #8
  40cbfc:	mov	x3, xzr
  40cc00:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40cc04:	ldr	x8, [x20, #120]
  40cc08:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cc0c:	add	x4, x22, #0x151
  40cc10:	add	x6, x6, #0xad0
  40cc14:	lsr	x9, x8, #12
  40cc18:	bfxil	w9, w8, #0, #8
  40cc1c:	ubfx	x0, x8, #43, #1
  40cc20:	sxtw	x1, w9
  40cc24:	mov	w2, #0x4                   	// #4
  40cc28:	mov	w5, #0x8                   	// #8
  40cc2c:	mov	x3, xzr
  40cc30:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40cc34:	mov	x0, x20
  40cc38:	mov	x1, x22
  40cc3c:	mov	x2, x21
  40cc40:	bl	40bc00 <wcrtomb@plt+0x7110>
  40cc44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cc48:	ldrb	w8, [x8, #3736]
  40cc4c:	cbz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40cc50:	mov	x0, x19
  40cc54:	mov	w1, wzr
  40cc58:	b	40cec0 <wcrtomb@plt+0x83d0>
  40cc5c:	ldr	x2, [x20, #136]
  40cc60:	mov	w0, w23
  40cc64:	mov	x1, x21
  40cc68:	bl	436b9c <wcrtomb@plt+0x320ac>
  40cc6c:	mov	x24, x20
  40cc70:	str	x0, [x24, #24]!
  40cc74:	cbz	x0, 40cfb0 <wcrtomb@plt+0x84c0>
  40cc78:	mov	w1, #0x4                   	// #4
  40cc7c:	mov	x0, x24
  40cc80:	bl	429c30 <wcrtomb@plt+0x25140>
  40cc84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cc88:	ldr	w8, [x8, #3808]
  40cc8c:	ldr	x0, [x24]
  40cc90:	cmp	w8, #0x2
  40cc94:	mov	w8, #0x63                  	// #99
  40cc98:	cinc	x22, x8, ne  // ne = any
  40cc9c:	bl	403f00 <strlen@plt>
  40cca0:	cmp	x22, x0
  40cca4:	b.cs	40ccb0 <wcrtomb@plt+0x81c0>  // b.hs, b.nlast
  40cca8:	mov	x0, x20
  40ccac:	bl	40d6ac <wcrtomb@plt+0x8bbc>
  40ccb0:	mov	w0, w23
  40ccb4:	mov	x1, x21
  40ccb8:	mov	x2, x20
  40ccbc:	mov	w3, wzr
  40ccc0:	bl	42b9d8 <wcrtomb@plt+0x26ee8>
  40ccc4:	mov	w0, w23
  40ccc8:	mov	x1, x21
  40cccc:	mov	x2, x20
  40ccd0:	mov	w3, wzr
  40ccd4:	bl	42b50c <wcrtomb@plt+0x26a1c>
  40ccd8:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40ccdc:	mov	x21, x0
  40cce0:	mov	x0, x20
  40cce4:	str	xzr, [x20, #136]
  40cce8:	bl	40b088 <wcrtomb@plt+0x6598>
  40ccec:	cbz	x0, 40cec4 <wcrtomb@plt+0x83d4>
  40ccf0:	ldr	x8, [x24]
  40ccf4:	mov	x1, x0
  40ccf8:	mov	x9, xzr
  40ccfc:	ldrb	w10, [x8, x9]
  40cd00:	add	x11, x1, x9
  40cd04:	cmp	x9, #0x62
  40cd08:	strb	w10, [x11, #157]
  40cd0c:	b.hi	40cd18 <wcrtomb@plt+0x8228>  // b.pmore
  40cd10:	add	x9, x9, #0x1
  40cd14:	cbnz	w10, 40ccfc <wcrtomb@plt+0x820c>
  40cd18:	mov	w8, #0x32                  	// #50
  40cd1c:	mov	x0, x20
  40cd20:	mov	x2, x21
  40cd24:	strb	w8, [x1, #156]
  40cd28:	bl	40bc00 <wcrtomb@plt+0x7110>
  40cd2c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cd30:	ldrb	w8, [x8, #3736]
  40cd34:	cbz	w8, 40cd44 <wcrtomb@plt+0x8254>
  40cd38:	mov	x0, x19
  40cd3c:	mov	w1, wzr
  40cd40:	bl	42a1cc <wcrtomb@plt+0x256dc>
  40cd44:	mov	x0, x20
  40cd48:	bl	40d598 <wcrtomb@plt+0x8aa8>
  40cd4c:	b	40cec4 <wcrtomb@plt+0x83d4>
  40cd50:	mov	w0, w23
  40cd54:	bl	4044d0 <close@plt>
  40cd58:	ldr	w8, [x25, #16]
  40cd5c:	cmp	w8, #0x3
  40cd60:	b.ne	40cdfc <wcrtomb@plt+0x830c>  // b.any
  40cd64:	ldr	x19, [x25]
  40cd68:	ldr	x21, [x20]
  40cd6c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cd70:	add	x1, x1, #0xb2c
  40cd74:	mov	w2, #0x5                   	// #5
  40cd78:	mov	x0, xzr
  40cd7c:	bl	4048b0 <dcgettext@plt>
  40cd80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cd84:	ldr	w8, [x8, #3636]
  40cd88:	cbz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40cd8c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40cd90:	ldrb	w8, [x8, #3712]
  40cd94:	tbz	w8, #2, 40cec4 <wcrtomb@plt+0x83d4>
  40cd98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cd9c:	ldr	x8, [x8, #4000]
  40cda0:	mov	x20, x0
  40cda4:	cbz	x8, 40cdac <wcrtomb@plt+0x82bc>
  40cda8:	blr	x8
  40cdac:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cdb0:	add	x1, x1, #0x8e2
  40cdb4:	mov	w2, #0x5                   	// #5
  40cdb8:	mov	x0, xzr
  40cdbc:	bl	4048b0 <dcgettext@plt>
  40cdc0:	mov	x22, x0
  40cdc4:	mov	x0, x21
  40cdc8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40cdcc:	mov	x21, x0
  40cdd0:	mov	w0, #0x1                   	// #1
  40cdd4:	mov	x1, x19
  40cdd8:	bl	448a64 <argp_parse@@Base+0xe3b8>
  40cddc:	mov	x4, x0
  40cde0:	mov	w0, wzr
  40cde4:	mov	w1, wzr
  40cde8:	mov	x2, x22
  40cdec:	mov	x3, x21
  40cdf0:	mov	x5, x20
  40cdf4:	bl	403f60 <error@plt>
  40cdf8:	b	40cec4 <wcrtomb@plt+0x83d4>
  40cdfc:	mov	x0, x20
  40ce00:	bl	40bd60 <wcrtomb@plt+0x7270>
  40ce04:	cbz	x0, 40ce50 <wcrtomb@plt+0x8360>
  40ce08:	mov	x23, x0
  40ce0c:	mov	x0, x20
  40ce10:	mov	x1, x23
  40ce14:	bl	40d78c <wcrtomb@plt+0x8c9c>
  40ce18:	mov	x0, x20
  40ce1c:	bl	40c2fc <wcrtomb@plt+0x780c>
  40ce20:	mov	x0, x23
  40ce24:	bl	4046b0 <free@plt>
  40ce28:	ldr	w25, [x20, #408]
  40ce2c:	tbnz	w25, #31, 40ce6c <wcrtomb@plt+0x837c>
  40ce30:	ldr	w23, [x27]
  40ce34:	cbz	w25, 40ce5c <wcrtomb@plt+0x836c>
  40ce38:	add	x2, sp, #0x30
  40ce3c:	mov	w0, wzr
  40ce40:	mov	w1, w25
  40ce44:	bl	404890 <__fxstat@plt>
  40ce48:	cbnz	w0, 40ce78 <wcrtomb@plt+0x8388>
  40ce4c:	b	40cf04 <wcrtomb@plt+0x8414>
  40ce50:	ldr	x0, [x20]
  40ce54:	bl	41cfc0 <wcrtomb@plt+0x184d0>
  40ce58:	b	40ce90 <wcrtomb@plt+0x83a0>
  40ce5c:	cbz	x22, 40cee4 <wcrtomb@plt+0x83f4>
  40ce60:	tbz	w23, #31, 40cee4 <wcrtomb@plt+0x83f4>
  40ce64:	neg	w21, w23
  40ce68:	b	40ce70 <wcrtomb@plt+0x8380>
  40ce6c:	neg	w21, w25
  40ce70:	bl	4049c0 <__errno_location@plt>
  40ce74:	str	w21, [x0]
  40ce78:	cmp	x22, #0x0
  40ce7c:	adrp	x2, 41d000 <wcrtomb@plt+0x18510>
  40ce80:	cset	w1, eq  // eq = none
  40ce84:	add	x2, x2, #0x8
  40ce88:	mov	x0, x19
  40ce8c:	bl	41d02c <wcrtomb@plt+0x1853c>
  40ce90:	mov	w22, wzr
  40ce94:	mov	x0, x20
  40ce98:	bl	425ec8 <wcrtomb@plt+0x213d8>
  40ce9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cea0:	ldrb	w8, [x8, #3736]
  40cea4:	cbz	w8, 40cec4 <wcrtomb@plt+0x83d4>
  40cea8:	cbz	w22, 40cec4 <wcrtomb@plt+0x83d4>
  40ceac:	tbz	w0, #0, 40cec4 <wcrtomb@plt+0x83d4>
  40ceb0:	ldr	w8, [sp, #28]
  40ceb4:	mov	x0, x19
  40ceb8:	cmp	w8, #0x4, lsl #12
  40cebc:	cset	w1, eq  // eq = none
  40cec0:	bl	42a1cc <wcrtomb@plt+0x256dc>
  40cec4:	ldp	x20, x19, [sp, #272]
  40cec8:	ldp	x22, x21, [sp, #256]
  40cecc:	ldp	x24, x23, [sp, #240]
  40ced0:	ldp	x26, x25, [sp, #224]
  40ced4:	ldp	x28, x27, [sp, #208]
  40ced8:	ldp	x29, x30, [sp, #192]
  40cedc:	add	sp, sp, #0x120
  40cee0:	ret
  40cee4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cee8:	ldr	w4, [x8, #3552]
  40ceec:	add	x3, sp, #0x30
  40cef0:	mov	w0, wzr
  40cef4:	mov	w1, w23
  40cef8:	mov	x2, x21
  40cefc:	bl	404ad0 <__fxstatat@plt>
  40cf00:	cbnz	w0, 40ce78 <wcrtomb@plt+0x8388>
  40cf04:	ldr	q0, [sp, #32]
  40cf08:	ldr	x8, [sp, #152]
  40cf0c:	fmov	x9, d0
  40cf10:	cmp	x8, x9
  40cf14:	b.ne	40cf28 <wcrtomb@plt+0x8438>  // b.any
  40cf18:	ldr	x8, [sp, #160]
  40cf1c:	mov	x9, v0.d[1]
  40cf20:	cmp	w8, w9
  40cf24:	b.eq	40cf40 <wcrtomb@plt+0x8450>  // b.none
  40cf28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cf2c:	ldrb	w8, [x8, #3736]
  40cf30:	cmp	w8, #0x0
  40cf34:	cset	w8, eq  // eq = none
  40cf38:	orr	w8, w8, w26
  40cf3c:	tbnz	w8, #0, 40cf50 <wcrtomb@plt+0x8460>
  40cf40:	ldr	x8, [sp, #96]
  40cf44:	ldr	x9, [sp, #16]
  40cf48:	cmp	x9, x8
  40cf4c:	b.ge	40cfdc <wcrtomb@plt+0x84ec>  // b.tcont
  40cf50:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40cf54:	ldrb	w8, [x8, #3712]
  40cf58:	tbz	w8, #4, 40cfa0 <wcrtomb@plt+0x84b0>
  40cf5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40cf60:	ldr	x8, [x8, #4000]
  40cf64:	cbz	x8, 40cf6c <wcrtomb@plt+0x847c>
  40cf68:	blr	x8
  40cf6c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40cf70:	add	x1, x1, #0xb41
  40cf74:	mov	w2, #0x5                   	// #5
  40cf78:	mov	x0, xzr
  40cf7c:	bl	4048b0 <dcgettext@plt>
  40cf80:	mov	x21, x0
  40cf84:	mov	x0, x19
  40cf88:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40cf8c:	mov	x3, x0
  40cf90:	mov	w0, wzr
  40cf94:	mov	w1, wzr
  40cf98:	mov	x2, x21
  40cf9c:	bl	403f60 <error@plt>
  40cfa0:	mov	w0, #0x1                   	// #1
  40cfa4:	mov	w22, #0x1                   	// #1
  40cfa8:	bl	425e70 <wcrtomb@plt+0x21380>
  40cfac:	b	40ce94 <wcrtomb@plt+0x83a4>
  40cfb0:	bl	4049c0 <__errno_location@plt>
  40cfb4:	ldr	w8, [x0]
  40cfb8:	cmp	w8, #0xc
  40cfbc:	b.eq	40d03c <wcrtomb@plt+0x854c>  // b.none
  40cfc0:	cmp	x22, #0x0
  40cfc4:	adrp	x2, 41c000 <wcrtomb@plt+0x17510>
  40cfc8:	cset	w1, eq  // eq = none
  40cfcc:	add	x2, x2, #0xf9c
  40cfd0:	mov	x0, x19
  40cfd4:	bl	41d02c <wcrtomb@plt+0x1853c>
  40cfd8:	b	40cec4 <wcrtomb@plt+0x83d4>
  40cfdc:	ldr	w8, [sp, #28]
  40cfe0:	ldr	x9, [sp, #16]
  40cfe4:	mov	w22, #0x1                   	// #1
  40cfe8:	cmp	w8, #0x4, lsl #12
  40cfec:	cset	w8, ne  // ne = any
  40cff0:	cmp	x9, #0x0
  40cff4:	cset	w9, eq  // eq = none
  40cff8:	and	w8, w9, w8
  40cffc:	tbnz	w8, #0, 40ce94 <wcrtomb@plt+0x83a4>
  40d000:	cbz	w25, 40ce94 <wcrtomb@plt+0x83a4>
  40d004:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d008:	ldr	w8, [x8, #3548]
  40d00c:	cmp	w8, #0x1
  40d010:	b.ne	40ce94 <wcrtomb@plt+0x83a4>  // b.any
  40d014:	ldp	x3, x4, [x20, #216]
  40d018:	mov	w0, w25
  40d01c:	mov	w1, w23
  40d020:	mov	x2, x21
  40d024:	bl	41ca50 <wcrtomb@plt+0x17f60>
  40d028:	cbz	w0, 40d034 <wcrtomb@plt+0x8544>
  40d02c:	mov	x0, x19
  40d030:	bl	42d758 <wcrtomb@plt+0x28c68>
  40d034:	mov	w22, #0x1                   	// #1
  40d038:	b	40ce94 <wcrtomb@plt+0x83a4>
  40d03c:	bl	40eb80 <wcrtomb@plt+0xa090>
  40d040:	stp	x29, x30, [sp, #-32]!
  40d044:	stp	x20, x19, [sp, #16]
  40d048:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d04c:	ldr	w8, [x20, #904]
  40d050:	mov	x19, x0
  40d054:	mov	x29, sp
  40d058:	cbnz	w8, 40d084 <wcrtomb@plt+0x8594>
  40d05c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d060:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d064:	add	x0, x0, #0xa46
  40d068:	add	x1, x1, #0x388
  40d06c:	bl	41d374 <wcrtomb@plt+0x18884>
  40d070:	cbz	w0, 40d07c <wcrtomb@plt+0x858c>
  40d074:	ldr	w8, [x20, #904]
  40d078:	b	40d084 <wcrtomb@plt+0x8594>
  40d07c:	mov	w8, #0xfffffffe            	// #-2
  40d080:	str	w8, [x20, #904]
  40d084:	str	wzr, [x19]
  40d088:	ldp	x20, x19, [sp, #16]
  40d08c:	mov	w0, w8
  40d090:	ldp	x29, x30, [sp], #32
  40d094:	ret
  40d098:	stp	x29, x30, [sp, #-32]!
  40d09c:	stp	x20, x19, [sp, #16]
  40d0a0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d0a4:	ldr	w8, [x20, #908]
  40d0a8:	mov	x19, x0
  40d0ac:	mov	x29, sp
  40d0b0:	cbnz	w8, 40d0dc <wcrtomb@plt+0x85ec>
  40d0b4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d0b8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d0bc:	add	x0, x0, #0xa46
  40d0c0:	add	x1, x1, #0x38c
  40d0c4:	bl	41d42c <wcrtomb@plt+0x1893c>
  40d0c8:	cbz	w0, 40d0d4 <wcrtomb@plt+0x85e4>
  40d0cc:	ldr	w8, [x20, #908]
  40d0d0:	b	40d0dc <wcrtomb@plt+0x85ec>
  40d0d4:	mov	w8, #0xfffffffe            	// #-2
  40d0d8:	str	w8, [x20, #908]
  40d0dc:	str	wzr, [x19]
  40d0e0:	ldp	x20, x19, [sp, #16]
  40d0e4:	mov	w0, w8
  40d0e8:	ldp	x29, x30, [sp], #32
  40d0ec:	ret
  40d0f0:	stp	x29, x30, [sp, #-64]!
  40d0f4:	stp	x22, x21, [sp, #32]
  40d0f8:	mov	x21, x0
  40d0fc:	mov	x0, x1
  40d100:	stp	x24, x23, [sp, #16]
  40d104:	stp	x20, x19, [sp, #48]
  40d108:	mov	x29, sp
  40d10c:	mov	w22, w2
  40d110:	mov	x20, x1
  40d114:	bl	403f00 <strlen@plt>
  40d118:	add	x19, x0, #0x1
  40d11c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d120:	add	x0, x0, #0xaba
  40d124:	mov	x1, x19
  40d128:	mov	x2, xzr
  40d12c:	bl	40adf4 <wcrtomb@plt+0x6304>
  40d130:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d134:	ldrb	w8, [x8, #3664]
  40d138:	mov	x23, x0
  40d13c:	cbnz	w8, 40d1c0 <wcrtomb@plt+0x86d0>
  40d140:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d144:	ldr	x8, [x8, #936]
  40d148:	cbnz	x8, 40d170 <wcrtomb@plt+0x8680>
  40d14c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d150:	add	x24, x24, #0x3a8
  40d154:	mov	w0, wzr
  40d158:	mov	x1, x24
  40d15c:	bl	41d24c <wcrtomb@plt+0x1875c>
  40d160:	add	x1, x24, #0x8
  40d164:	mov	w0, wzr
  40d168:	bl	41d2e0 <wcrtomb@plt+0x187f0>
  40d16c:	ldr	x8, [x24]
  40d170:	mov	x9, xzr
  40d174:	add	x10, x23, #0x109
  40d178:	ldrb	w11, [x8, x9]
  40d17c:	cmp	x9, #0x1e
  40d180:	strb	w11, [x10, x9]
  40d184:	b.hi	40d190 <wcrtomb@plt+0x86a0>  // b.pmore
  40d188:	add	x9, x9, #0x1
  40d18c:	cbnz	w11, 40d178 <wcrtomb@plt+0x8688>
  40d190:	strb	wzr, [x23, #296]
  40d194:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d198:	ldr	x9, [x9, #944]
  40d19c:	mov	x8, xzr
  40d1a0:	add	x10, x23, #0x129
  40d1a4:	ldrb	w11, [x9, x8]
  40d1a8:	cmp	x8, #0x1e
  40d1ac:	strb	w11, [x10, x8]
  40d1b0:	b.hi	40d1bc <wcrtomb@plt+0x86cc>  // b.pmore
  40d1b4:	add	x8, x8, #0x1
  40d1b8:	cbnz	w11, 40d1a4 <wcrtomb@plt+0x86b4>
  40d1bc:	strb	wzr, [x23, #328]
  40d1c0:	mov	x9, #0x7375                	// #29557
  40d1c4:	movk	x9, #0x6174, lsl #16
  40d1c8:	movk	x9, #0x2072, lsl #32
  40d1cc:	add	x8, x23, #0x101
  40d1d0:	movk	x9, #0x20, lsl #48
  40d1d4:	mov	x2, #0xffffffffffffffff    	// #-1
  40d1d8:	mov	x0, x21
  40d1dc:	mov	x1, x23
  40d1e0:	str	x9, [x8]
  40d1e4:	strb	w22, [x23, #156]
  40d1e8:	bl	40bc00 <wcrtomb@plt+0x7110>
  40d1ec:	bl	405310 <wcrtomb@plt+0x820>
  40d1f0:	mov	x21, x0
  40d1f4:	bl	405684 <wcrtomb@plt+0xb94>
  40d1f8:	mov	x22, x0
  40d1fc:	cmp	x0, x19
  40d200:	b.cs	40d230 <wcrtomb@plt+0x8740>  // b.hs, b.nlast
  40d204:	mov	x0, x21
  40d208:	mov	x1, x20
  40d20c:	mov	x2, x22
  40d210:	bl	403e80 <memcpy@plt>
  40d214:	sub	x8, x22, #0x1
  40d218:	and	x8, x8, #0xfffffffffffffe00
  40d21c:	add	x0, x21, x8
  40d220:	add	x20, x20, x22
  40d224:	sub	x19, x19, x22
  40d228:	bl	405640 <wcrtomb@plt+0xb50>
  40d22c:	b	40d1ec <wcrtomb@plt+0x86fc>
  40d230:	mov	x0, x21
  40d234:	mov	x1, x20
  40d238:	mov	x2, x19
  40d23c:	bl	403e80 <memcpy@plt>
  40d240:	add	x0, x21, x19
  40d244:	sub	x2, x22, x19
  40d248:	mov	w1, wzr
  40d24c:	bl	404320 <memset@plt>
  40d250:	sub	x8, x19, #0x1
  40d254:	and	x8, x8, #0xfffffffffffffe00
  40d258:	add	x0, x21, x8
  40d25c:	ldp	x20, x19, [sp, #48]
  40d260:	ldp	x22, x21, [sp, #32]
  40d264:	ldp	x24, x23, [sp, #16]
  40d268:	ldp	x29, x30, [sp], #64
  40d26c:	b	405640 <wcrtomb@plt+0xb50>
  40d270:	sub	sp, sp, #0x80
  40d274:	stp	x29, x30, [sp, #32]
  40d278:	stp	x26, x25, [sp, #64]
  40d27c:	stp	x24, x23, [sp, #80]
  40d280:	stp	x22, x21, [sp, #96]
  40d284:	stp	x20, x19, [sp, #112]
  40d288:	ldr	x20, [x1, #136]
  40d28c:	str	x27, [sp, #48]
  40d290:	add	x29, sp, #0x20
  40d294:	mov	x19, x1
  40d298:	mov	w22, w0
  40d29c:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40d2a0:	mov	x21, x0
  40d2a4:	mov	x0, x19
  40d2a8:	bl	40b088 <wcrtomb@plt+0x6598>
  40d2ac:	cbz	x0, 40d390 <wcrtomb@plt+0x88a0>
  40d2b0:	mov	x1, x0
  40d2b4:	mov	x0, x19
  40d2b8:	mov	x2, x21
  40d2bc:	bl	40bc00 <wcrtomb@plt+0x7110>
  40d2c0:	ldr	x1, [x19, #136]
  40d2c4:	ldr	x0, [x19, #8]
  40d2c8:	mov	x2, x1
  40d2cc:	bl	404c0c <wcrtomb@plt+0x11c>
  40d2d0:	cmp	w22, #0x1
  40d2d4:	b.lt	40d398 <wcrtomb@plt+0x88a8>  // b.tstop
  40d2d8:	mov	w27, #0x200                 	// #512
  40d2dc:	cmp	x20, #0x1
  40d2e0:	b.lt	40d404 <wcrtomb@plt+0x8914>  // b.tstop
  40d2e4:	mov	x26, x20
  40d2e8:	bl	405310 <wcrtomb@plt+0x820>
  40d2ec:	mov	x24, x0
  40d2f0:	bl	405684 <wcrtomb@plt+0xb94>
  40d2f4:	mov	x21, x0
  40d2f8:	cmp	x20, x0
  40d2fc:	b.cs	40d320 <wcrtomb@plt+0x8830>  // b.hs, b.nlast
  40d300:	ands	x8, x26, #0x1ff
  40d304:	mov	x21, x26
  40d308:	b.eq	40d320 <wcrtomb@plt+0x8830>  // b.none
  40d30c:	add	x0, x24, x26
  40d310:	sub	x2, x27, x8
  40d314:	mov	w1, wzr
  40d318:	bl	404320 <memset@plt>
  40d31c:	mov	x21, x26
  40d320:	mov	w0, w22
  40d324:	mov	x1, x24
  40d328:	mov	x2, x21
  40d32c:	bl	41c904 <wcrtomb@plt+0x17e14>
  40d330:	cmn	x0, #0x1
  40d334:	b.eq	40d40c <wcrtomb@plt+0x891c>  // b.none
  40d338:	sub	x8, x21, #0x1
  40d33c:	and	x8, x8, #0xfffffffffffffe00
  40d340:	mov	x25, x0
  40d344:	sub	x20, x26, x0
  40d348:	add	x0, x24, x8
  40d34c:	bl	405640 <wcrtomb@plt+0xb50>
  40d350:	subs	x23, x21, x25
  40d354:	b.eq	40d2dc <wcrtomb@plt+0x87ec>  // b.none
  40d358:	add	x0, x24, x25
  40d35c:	mov	w1, wzr
  40d360:	mov	x2, x23
  40d364:	bl	404320 <memset@plt>
  40d368:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40d36c:	ldrb	w8, [x8, #3712]
  40d370:	tbnz	w8, #7, 40d414 <wcrtomb@plt+0x8924>
  40d374:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d378:	ldrb	w8, [x8, #3945]
  40d37c:	cbz	w8, 40d488 <wcrtomb@plt+0x8998>
  40d380:	sub	x8, x20, x23
  40d384:	cmp	x8, #0x1
  40d388:	b.ge	40d49c <wcrtomb@plt+0x89ac>  // b.tcont
  40d38c:	b	40d574 <wcrtomb@plt+0x8a84>
  40d390:	mov	w0, #0x2                   	// #2
  40d394:	b	40d578 <wcrtomb@plt+0x8a88>
  40d398:	cmp	x20, #0x1
  40d39c:	b.lt	40d404 <wcrtomb@plt+0x8914>  // b.tstop
  40d3a0:	mov	w22, #0x200                 	// #512
  40d3a4:	b	40d3cc <wcrtomb@plt+0x88dc>
  40d3a8:	cmn	x0, #0x1
  40d3ac:	b.eq	40d500 <wcrtomb@plt+0x8a10>  // b.none
  40d3b0:	sub	x8, x0, #0x1
  40d3b4:	and	x8, x8, #0xfffffffffffffe00
  40d3b8:	sub	x20, x20, x0
  40d3bc:	add	x0, x21, x8
  40d3c0:	bl	405640 <wcrtomb@plt+0xb50>
  40d3c4:	cmp	x20, #0x0
  40d3c8:	b.le	40d404 <wcrtomb@plt+0x8914>
  40d3cc:	bl	405310 <wcrtomb@plt+0x820>
  40d3d0:	mov	x21, x0
  40d3d4:	bl	405684 <wcrtomb@plt+0xb94>
  40d3d8:	cmp	x20, x0
  40d3dc:	b.cs	40d3a8 <wcrtomb@plt+0x88b8>  // b.hs, b.nlast
  40d3e0:	ands	x8, x20, #0x1ff
  40d3e4:	mov	x0, x20
  40d3e8:	b.eq	40d3b0 <wcrtomb@plt+0x88c0>  // b.none
  40d3ec:	add	x0, x21, x20
  40d3f0:	sub	x2, x22, x8
  40d3f4:	mov	w1, wzr
  40d3f8:	bl	404320 <memset@plt>
  40d3fc:	mov	x0, x20
  40d400:	b	40d3b0 <wcrtomb@plt+0x88c0>
  40d404:	mov	w0, wzr
  40d408:	b	40d578 <wcrtomb@plt+0x8a88>
  40d40c:	mov	x20, x26
  40d410:	b	40d504 <wcrtomb@plt+0x8a14>
  40d414:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d418:	ldr	x8, [x8, #4000]
  40d41c:	cbz	x8, 40d424 <wcrtomb@plt+0x8934>
  40d420:	blr	x8
  40d424:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d428:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d42c:	add	x1, x1, #0xbc5
  40d430:	add	x2, x2, #0xbf4
  40d434:	mov	w4, #0x5                   	// #5
  40d438:	mov	x0, xzr
  40d43c:	mov	x3, x20
  40d440:	bl	4047d0 <dcngettext@plt>
  40d444:	ldr	x8, [x19]
  40d448:	mov	x19, x0
  40d44c:	mov	x0, x8
  40d450:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40d454:	mov	x22, x0
  40d458:	add	x1, sp, #0x8
  40d45c:	mov	x0, x20
  40d460:	bl	440290 <argp_parse@@Base+0x5be4>
  40d464:	mov	x4, x0
  40d468:	mov	w0, wzr
  40d46c:	mov	w1, wzr
  40d470:	mov	x2, x19
  40d474:	mov	x3, x22
  40d478:	bl	403f60 <error@plt>
  40d47c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d480:	ldrb	w8, [x8, #3945]
  40d484:	cbnz	w8, 40d380 <wcrtomb@plt+0x8890>
  40d488:	mov	w0, #0x1                   	// #1
  40d48c:	bl	425e70 <wcrtomb@plt+0x21380>
  40d490:	sub	x8, x20, x23
  40d494:	cmp	x8, #0x1
  40d498:	b.lt	40d574 <wcrtomb@plt+0x8a84>  // b.tstop
  40d49c:	sub	x8, x26, x21
  40d4a0:	add	x19, x8, #0x200
  40d4a4:	bl	405310 <wcrtomb@plt+0x820>
  40d4a8:	movi	v0.2d, #0x0
  40d4ac:	stp	q0, q0, [x0]
  40d4b0:	stp	q0, q0, [x0, #32]
  40d4b4:	stp	q0, q0, [x0, #64]
  40d4b8:	stp	q0, q0, [x0, #96]
  40d4bc:	stp	q0, q0, [x0, #128]
  40d4c0:	stp	q0, q0, [x0, #160]
  40d4c4:	stp	q0, q0, [x0, #192]
  40d4c8:	stp	q0, q0, [x0, #224]
  40d4cc:	stp	q0, q0, [x0, #256]
  40d4d0:	stp	q0, q0, [x0, #288]
  40d4d4:	stp	q0, q0, [x0, #320]
  40d4d8:	stp	q0, q0, [x0, #352]
  40d4dc:	stp	q0, q0, [x0, #384]
  40d4e0:	stp	q0, q0, [x0, #416]
  40d4e4:	stp	q0, q0, [x0, #448]
  40d4e8:	stp	q0, q0, [x0, #480]
  40d4ec:	bl	405640 <wcrtomb@plt+0xb50>
  40d4f0:	sub	x19, x19, #0x200
  40d4f4:	cmp	x19, #0x200
  40d4f8:	b.gt	40d4a4 <wcrtomb@plt+0x89b4>
  40d4fc:	b	40d574 <wcrtomb@plt+0x8a84>
  40d500:	mov	x21, #0xffffffffffffffff    	// #-1
  40d504:	ldr	x8, [x19, #136]
  40d508:	ldr	x0, [x19]
  40d50c:	mov	x2, x21
  40d510:	sub	x1, x8, x20
  40d514:	bl	41cf78 <wcrtomb@plt+0x18488>
  40d518:	add	x19, x20, #0x200
  40d51c:	bl	405310 <wcrtomb@plt+0x820>
  40d520:	movi	v0.2d, #0x0
  40d524:	stp	q0, q0, [x0]
  40d528:	stp	q0, q0, [x0, #32]
  40d52c:	stp	q0, q0, [x0, #64]
  40d530:	stp	q0, q0, [x0, #96]
  40d534:	stp	q0, q0, [x0, #128]
  40d538:	stp	q0, q0, [x0, #160]
  40d53c:	stp	q0, q0, [x0, #192]
  40d540:	stp	q0, q0, [x0, #224]
  40d544:	stp	q0, q0, [x0, #256]
  40d548:	stp	q0, q0, [x0, #288]
  40d54c:	stp	q0, q0, [x0, #320]
  40d550:	stp	q0, q0, [x0, #352]
  40d554:	stp	q0, q0, [x0, #384]
  40d558:	stp	q0, q0, [x0, #416]
  40d55c:	stp	q0, q0, [x0, #448]
  40d560:	stp	q0, q0, [x0, #480]
  40d564:	bl	405640 <wcrtomb@plt+0xb50>
  40d568:	sub	x19, x19, #0x200
  40d56c:	cmp	x19, #0x200
  40d570:	b.gt	40d51c <wcrtomb@plt+0x8a2c>
  40d574:	mov	w0, #0x1                   	// #1
  40d578:	ldp	x20, x19, [sp, #112]
  40d57c:	ldp	x22, x21, [sp, #96]
  40d580:	ldp	x24, x23, [sp, #80]
  40d584:	ldp	x26, x25, [sp, #64]
  40d588:	ldr	x27, [sp, #48]
  40d58c:	ldp	x29, x30, [sp, #32]
  40d590:	add	sp, sp, #0x80
  40d594:	ret
  40d598:	sub	sp, sp, #0x30
  40d59c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d5a0:	ldrb	w8, [x8, #3076]
  40d5a4:	stp	x29, x30, [sp, #16]
  40d5a8:	stp	x20, x19, [sp, #32]
  40d5ac:	add	x29, sp, #0x10
  40d5b0:	cbz	w8, 40d5c4 <wcrtomb@plt+0x8ad4>
  40d5b4:	ldp	x20, x19, [sp, #32]
  40d5b8:	ldp	x29, x30, [sp, #16]
  40d5bc:	add	sp, sp, #0x30
  40d5c0:	ret
  40d5c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d5c8:	ldr	w8, [x8, #912]
  40d5cc:	ldr	w9, [x0, #108]
  40d5d0:	mov	x20, x0
  40d5d4:	cmp	w8, w9
  40d5d8:	b.cs	40d5b4 <wcrtomb@plt+0x8ac4>  // b.hs, b.nlast
  40d5dc:	str	xzr, [sp, #8]
  40d5e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d5e4:	ldr	x0, [x20]
  40d5e8:	ldrb	w2, [x8, #3944]
  40d5ec:	mov	w1, #0x1                   	// #1
  40d5f0:	bl	42da24 <wcrtomb@plt+0x28f34>
  40d5f4:	mov	x1, x0
  40d5f8:	add	x0, sp, #0x8
  40d5fc:	bl	41b60c <wcrtomb@plt+0x16b1c>
  40d600:	add	x0, sp, #0x8
  40d604:	mov	w1, #0x2                   	// #2
  40d608:	bl	429c30 <wcrtomb@plt+0x25140>
  40d60c:	ldr	x0, [sp, #8]
  40d610:	bl	403f00 <strlen@plt>
  40d614:	add	x0, x0, #0x15
  40d618:	bl	44a010 <argp_parse@@Base+0xf964>
  40d61c:	ldur	q0, [x20, #88]
  40d620:	ldr	x1, [sp, #8]
  40d624:	mov	x19, x0
  40d628:	str	q0, [x0]
  40d62c:	ldr	w8, [x20, #108]
  40d630:	str	w8, [x0, #16]
  40d634:	add	x0, x0, #0x14
  40d638:	bl	4047f0 <strcpy@plt>
  40d63c:	ldr	x0, [sp, #8]
  40d640:	bl	4046b0 <free@plt>
  40d644:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d648:	ldr	x0, [x20, #928]
  40d64c:	cbnz	x0, 40d674 <wcrtomb@plt+0x8b84>
  40d650:	adrp	x2, 40d000 <wcrtomb@plt+0x8510>
  40d654:	adrp	x3, 40d000 <wcrtomb@plt+0x8510>
  40d658:	add	x2, x2, #0xd14
  40d65c:	add	x3, x3, #0xd28
  40d660:	mov	x1, xzr
  40d664:	mov	x4, xzr
  40d668:	bl	43eb5c <argp_parse@@Base+0x44b0>
  40d66c:	str	x0, [x20, #928]
  40d670:	cbz	x0, 40d6a4 <wcrtomb@plt+0x8bb4>
  40d674:	mov	x1, x19
  40d678:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  40d67c:	cbz	x0, 40d6a4 <wcrtomb@plt+0x8bb4>
  40d680:	cmp	x0, x19
  40d684:	b.ne	40d6a8 <wcrtomb@plt+0x8bb8>  // b.any
  40d688:	ldr	w8, [x19, #16]
  40d68c:	sub	w8, w8, #0x1
  40d690:	str	w8, [x19, #16]
  40d694:	ldp	x20, x19, [sp, #32]
  40d698:	ldp	x29, x30, [sp, #16]
  40d69c:	add	sp, sp, #0x30
  40d6a0:	ret
  40d6a4:	bl	40eb80 <wcrtomb@plt+0xa090>
  40d6a8:	bl	404560 <abort@plt>
  40d6ac:	stp	x29, x30, [sp, #-32]!
  40d6b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d6b4:	ldr	w8, [x8, #3808]
  40d6b8:	str	x19, [sp, #16]
  40d6bc:	mov	x29, sp
  40d6c0:	cmp	w8, #0x6
  40d6c4:	b.hi	40d788 <wcrtomb@plt+0x8c98>  // b.pmore
  40d6c8:	mov	w9, #0x1                   	// #1
  40d6cc:	lsl	w9, w9, w8
  40d6d0:	mov	w10, #0x2a                  	// #42
  40d6d4:	mov	x19, x0
  40d6d8:	tst	w9, w10
  40d6dc:	b.eq	40d740 <wcrtomb@plt+0x8c50>  // b.none
  40d6e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d6e4:	ldr	x8, [x8, #4000]
  40d6e8:	cbz	x8, 40d6f0 <wcrtomb@plt+0x8c00>
  40d6ec:	blr	x8
  40d6f0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d6f4:	add	x1, x1, #0xc2d
  40d6f8:	mov	w2, #0x5                   	// #5
  40d6fc:	mov	x0, xzr
  40d700:	bl	4048b0 <dcgettext@plt>
  40d704:	ldr	x8, [x19, #24]
  40d708:	mov	x19, x0
  40d70c:	mov	x0, x8
  40d710:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40d714:	mov	x3, x0
  40d718:	mov	w0, wzr
  40d71c:	mov	w1, wzr
  40d720:	mov	x2, x19
  40d724:	bl	403f60 <error@plt>
  40d728:	ldr	x19, [sp, #16]
  40d72c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d730:	mov	w9, #0x2                   	// #2
  40d734:	str	w9, [x8, #2352]
  40d738:	ldp	x29, x30, [sp], #32
  40d73c:	ret
  40d740:	mov	w10, #0x44                  	// #68
  40d744:	tst	w9, w10
  40d748:	b.eq	40d764 <wcrtomb@plt+0x8c74>  // b.none
  40d74c:	ldr	x1, [x19, #24]
  40d750:	mov	x0, x19
  40d754:	ldr	x19, [sp, #16]
  40d758:	mov	w2, #0x4b                  	// #75
  40d75c:	ldp	x29, x30, [sp], #32
  40d760:	b	40d0f0 <wcrtomb@plt+0x8600>
  40d764:	cmp	w8, #0x4
  40d768:	b.ne	40d788 <wcrtomb@plt+0x8c98>  // b.any
  40d76c:	mov	x1, x19
  40d770:	ldr	x19, [sp, #16]
  40d774:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d778:	add	x0, x0, #0xc24
  40d77c:	mov	x2, xzr
  40d780:	ldp	x29, x30, [sp], #32
  40d784:	b	41321c <wcrtomb@plt+0xe72c>
  40d788:	bl	404560 <abort@plt>
  40d78c:	stp	x29, x30, [sp, #-96]!
  40d790:	str	x28, [sp, #16]
  40d794:	stp	x26, x25, [sp, #32]
  40d798:	stp	x24, x23, [sp, #48]
  40d79c:	stp	x22, x21, [sp, #64]
  40d7a0:	stp	x20, x19, [sp, #80]
  40d7a4:	mov	x29, sp
  40d7a8:	sub	sp, sp, #0x1b0
  40d7ac:	ldr	x23, [x0, #392]
  40d7b0:	mov	x19, x0
  40d7b4:	mov	x20, x1
  40d7b8:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40d7bc:	mov	x21, x0
  40d7c0:	mov	x0, x19
  40d7c4:	str	xzr, [x19, #136]
  40d7c8:	bl	40b088 <wcrtomb@plt+0x6598>
  40d7cc:	cbz	x0, 40db44 <wcrtomb@plt+0x9054>
  40d7d0:	mov	x22, x0
  40d7d4:	mov	x0, x19
  40d7d8:	bl	40ec24 <wcrtomb@plt+0xa134>
  40d7dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d7e0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d7e4:	ldr	w8, [x8, #3808]
  40d7e8:	ldrb	w9, [x9, #3025]
  40d7ec:	mov	w10, #0x35                  	// #53
  40d7f0:	mov	w11, #0x44                  	// #68
  40d7f4:	cmp	w8, #0x4
  40d7f8:	ccmp	w9, #0x0, #0x4, ne  // ne = any
  40d7fc:	csel	w10, w11, w10, ne  // ne = any
  40d800:	strb	w10, [x22, #156]
  40d804:	cbz	w9, 40d864 <wcrtomb@plt+0x8d74>
  40d808:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d80c:	ldr	x9, [x24, #3008]
  40d810:	ldr	x0, [x9, #56]
  40d814:	cbz	x0, 40d874 <wcrtomb@plt+0x8d84>
  40d818:	cmp	w8, #0x4
  40d81c:	b.ne	40d8fc <wcrtomb@plt+0x8e0c>  // b.any
  40d820:	bl	4161c0 <wcrtomb@plt+0x116d0>
  40d824:	mov	x2, x0
  40d828:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d82c:	add	x0, x0, #0xb73
  40d830:	mov	x1, x19
  40d834:	bl	41321c <wcrtomb@plt+0xe72c>
  40d838:	mov	x0, x19
  40d83c:	mov	x1, x22
  40d840:	mov	x2, x21
  40d844:	add	sp, sp, #0x1b0
  40d848:	ldp	x20, x19, [sp, #80]
  40d84c:	ldp	x22, x21, [sp, #64]
  40d850:	ldp	x24, x23, [sp, #48]
  40d854:	ldp	x26, x25, [sp, #32]
  40d858:	ldr	x28, [sp, #16]
  40d85c:	ldp	x29, x30, [sp], #96
  40d860:	b	40bc00 <wcrtomb@plt+0x7110>
  40d864:	mov	x0, x19
  40d868:	mov	x1, x22
  40d86c:	mov	x2, x21
  40d870:	bl	40bc00 <wcrtomb@plt+0x7110>
  40d874:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d878:	ldr	w8, [x8, #3668]
  40d87c:	cbz	w8, 40db44 <wcrtomb@plt+0x9054>
  40d880:	cbz	x23, 40d8a4 <wcrtomb@plt+0x8db4>
  40d884:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d888:	ldrb	w8, [x8, #3077]
  40d88c:	cbz	w8, 40d8a4 <wcrtomb@plt+0x8db4>
  40d890:	ldr	x8, [x19, #392]
  40d894:	ldr	x9, [x19, #88]
  40d898:	ldr	x8, [x8, #88]
  40d89c:	cmp	x8, x9
  40d8a0:	b.ne	40d9e0 <wcrtomb@plt+0x8ef0>  // b.any
  40d8a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d8a8:	ldr	x23, [x8, #920]
  40d8ac:	cbz	x23, 40da80 <wcrtomb@plt+0x8f90>
  40d8b0:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d8b4:	b	40d8c0 <wcrtomb@plt+0x8dd0>
  40d8b8:	ldr	x23, [x23, #32]
  40d8bc:	cbz	x23, 40da80 <wcrtomb@plt+0x8f90>
  40d8c0:	ldr	x1, [x23]
  40d8c4:	ldr	w2, [x24, #3700]
  40d8c8:	mov	x0, x19
  40d8cc:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  40d8d0:	tbnz	w0, #31, 40d8b8 <wcrtomb@plt+0x8dc8>
  40d8d4:	ldr	x8, [x23, #24]
  40d8d8:	mov	w21, w0
  40d8dc:	cbz	x8, 40da5c <wcrtomb@plt+0x8f6c>
  40d8e0:	mov	w0, w21
  40d8e4:	blr	x8
  40d8e8:	mov	w22, w0
  40d8ec:	mov	w0, w21
  40d8f0:	bl	4044d0 <close@plt>
  40d8f4:	tbz	w22, #0, 40d8b8 <wcrtomb@plt+0x8dc8>
  40d8f8:	b	40da64 <wcrtomb@plt+0x8f74>
  40d8fc:	bl	4052a4 <wcrtomb@plt+0x7b4>
  40d900:	ldr	x8, [x24, #3008]
  40d904:	mov	x23, x0
  40d908:	ldr	x8, [x8, #56]
  40d90c:	mov	x0, x8
  40d910:	bl	4161c0 <wcrtomb@plt+0x116d0>
  40d914:	mov	x20, x0
  40d918:	bl	4152a8 <wcrtomb@plt+0x107b8>
  40d91c:	mov	x21, x0
  40d920:	adrp	x6, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40d924:	add	x4, x22, #0x7c
  40d928:	lsr	x0, x0, #63
  40d92c:	add	x6, x6, #0x938
  40d930:	mov	w2, #0x8                   	// #8
  40d934:	mov	w5, #0xc                   	// #12
  40d938:	mov	x1, x21
  40d93c:	mov	x3, xzr
  40d940:	bl	40a9cc <wcrtomb@plt+0x5edc>
  40d944:	mov	x0, x19
  40d948:	mov	x1, x22
  40d94c:	mov	x2, x23
  40d950:	bl	40bc00 <wcrtomb@plt+0x7110>
  40d954:	ldr	x0, [x19, #8]
  40d958:	mov	x1, x21
  40d95c:	mov	x2, x21
  40d960:	bl	404c0c <wcrtomb@plt+0x11c>
  40d964:	cmp	x21, #0x1
  40d968:	b.lt	40db44 <wcrtomb@plt+0x9054>  // b.tstop
  40d96c:	mov	w23, #0x200                 	// #512
  40d970:	b	40d9a4 <wcrtomb@plt+0x8eb4>
  40d974:	mov	x0, x19
  40d978:	mov	x1, x20
  40d97c:	mov	x2, x22
  40d980:	bl	403e80 <memcpy@plt>
  40d984:	sub	x8, x22, #0x1
  40d988:	and	x8, x8, #0xfffffffffffffe00
  40d98c:	add	x0, x19, x8
  40d990:	sub	x21, x21, x22
  40d994:	add	x20, x20, x22
  40d998:	bl	405640 <wcrtomb@plt+0xb50>
  40d99c:	cmp	x21, #0x0
  40d9a0:	b.le	40db44 <wcrtomb@plt+0x9054>
  40d9a4:	bl	405310 <wcrtomb@plt+0x820>
  40d9a8:	mov	x19, x0
  40d9ac:	bl	405684 <wcrtomb@plt+0xb94>
  40d9b0:	mov	x22, x0
  40d9b4:	cmp	x21, x0
  40d9b8:	b.cs	40d974 <wcrtomb@plt+0x8e84>  // b.hs, b.nlast
  40d9bc:	ands	x8, x21, #0x1ff
  40d9c0:	mov	x22, x21
  40d9c4:	b.eq	40d974 <wcrtomb@plt+0x8e84>  // b.none
  40d9c8:	add	x0, x19, x21
  40d9cc:	sub	x2, x23, x8
  40d9d0:	mov	w1, wzr
  40d9d4:	bl	404320 <memset@plt>
  40d9d8:	mov	x22, x21
  40d9dc:	b	40d974 <wcrtomb@plt+0x8e84>
  40d9e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d9e4:	ldr	w8, [x8, #3636]
  40d9e8:	cbz	w8, 40db44 <wcrtomb@plt+0x9054>
  40d9ec:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40d9f0:	ldrb	w8, [x8, #3714]
  40d9f4:	tbz	w8, #2, 40db44 <wcrtomb@plt+0x9054>
  40d9f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40d9fc:	ldr	x8, [x8, #4000]
  40da00:	cbz	x8, 40da08 <wcrtomb@plt+0x8f18>
  40da04:	blr	x8
  40da08:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40da0c:	add	x1, x1, #0xb7f
  40da10:	mov	w2, #0x5                   	// #5
  40da14:	mov	x0, xzr
  40da18:	bl	4048b0 <dcgettext@plt>
  40da1c:	ldr	x8, [x19]
  40da20:	mov	x19, x0
  40da24:	mov	x0, x8
  40da28:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40da2c:	mov	x3, x0
  40da30:	mov	w0, wzr
  40da34:	mov	w1, wzr
  40da38:	mov	x2, x19
  40da3c:	add	sp, sp, #0x1b0
  40da40:	ldp	x20, x19, [sp, #80]
  40da44:	ldp	x22, x21, [sp, #64]
  40da48:	ldp	x24, x23, [sp, #48]
  40da4c:	ldp	x26, x25, [sp, #32]
  40da50:	ldr	x28, [sp, #16]
  40da54:	ldp	x29, x30, [sp], #96
  40da58:	b	403f60 <error@plt>
  40da5c:	mov	w0, w21
  40da60:	bl	4044d0 <close@plt>
  40da64:	ldr	w8, [x23, #16]
  40da68:	ldr	x21, [x23]
  40da6c:	cmp	w8, #0x2
  40da70:	b.eq	40db64 <wcrtomb@plt+0x9074>  // b.none
  40da74:	cmp	w8, #0x1
  40da78:	b.eq	40dc10 <wcrtomb@plt+0x9120>  // b.none
  40da7c:	cbnz	w8, 40db44 <wcrtomb@plt+0x9054>
  40da80:	ldr	x0, [x19]
  40da84:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  40da88:	mov	x21, x0
  40da8c:	bl	403f00 <strlen@plt>
  40da90:	mov	x22, x0
  40da94:	mov	x0, x20
  40da98:	bl	403f00 <strlen@plt>
  40da9c:	cbz	x0, 40db3c <wcrtomb@plt+0x904c>
  40daa0:	mov	x23, x0
  40daa4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40daa8:	mov	x25, x22
  40daac:	b	40dad0 <wcrtomb@plt+0x8fe0>
  40dab0:	add	x0, sp, #0x8
  40dab4:	bl	425f4c <wcrtomb@plt+0x2145c>
  40dab8:	add	x8, x23, x20
  40dabc:	add	x20, x8, #0x1
  40dac0:	mov	x0, x20
  40dac4:	bl	403f00 <strlen@plt>
  40dac8:	mov	x23, x0
  40dacc:	cbz	x0, 40db3c <wcrtomb@plt+0x904c>
  40dad0:	add	x26, x23, x22
  40dad4:	cmp	x25, x26
  40dad8:	b.cs	40daf0 <wcrtomb@plt+0x9000>  // b.hs, b.nlast
  40dadc:	add	x1, x26, #0x1
  40dae0:	mov	x0, x21
  40dae4:	bl	44a090 <argp_parse@@Base+0xf9e4>
  40dae8:	mov	x21, x0
  40daec:	mov	x25, x26
  40daf0:	add	x0, x21, x22
  40daf4:	mov	x1, x20
  40daf8:	bl	4047f0 <strcpy@plt>
  40dafc:	mov	x0, x21
  40db00:	mov	x1, x19
  40db04:	bl	40ee74 <wcrtomb@plt+0xa384>
  40db08:	tbnz	w0, #0, 40dab8 <wcrtomb@plt+0x8fc8>
  40db0c:	add	x0, sp, #0x8
  40db10:	bl	425e88 <wcrtomb@plt+0x21398>
  40db14:	add	x0, sp, #0x8
  40db18:	mov	x1, x20
  40db1c:	mov	x2, x21
  40db20:	str	x19, [sp, #400]
  40db24:	bl	40c410 <wcrtomb@plt+0x7920>
  40db28:	ldr	x8, [x24, #3824]
  40db2c:	cbz	x8, 40dab0 <wcrtomb@plt+0x8fc0>
  40db30:	mov	x0, x19
  40db34:	bl	41537c <wcrtomb@plt+0x1088c>
  40db38:	b	40dab0 <wcrtomb@plt+0x8fc0>
  40db3c:	mov	x0, x21
  40db40:	bl	4046b0 <free@plt>
  40db44:	add	sp, sp, #0x1b0
  40db48:	ldp	x20, x19, [sp, #80]
  40db4c:	ldp	x22, x21, [sp, #64]
  40db50:	ldp	x24, x23, [sp, #48]
  40db54:	ldp	x26, x25, [sp, #32]
  40db58:	ldr	x28, [sp, #16]
  40db5c:	ldp	x29, x30, [sp], #96
  40db60:	ret
  40db64:	ldr	x20, [x19]
  40db68:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40db6c:	add	x1, x1, #0xbb1
  40db70:	mov	w2, #0x5                   	// #5
  40db74:	mov	x0, xzr
  40db78:	bl	4048b0 <dcgettext@plt>
  40db7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40db80:	ldr	w8, [x8, #3636]
  40db84:	cbz	w8, 40db44 <wcrtomb@plt+0x9054>
  40db88:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40db8c:	ldrb	w8, [x8, #3712]
  40db90:	tbz	w8, #2, 40db44 <wcrtomb@plt+0x9054>
  40db94:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40db98:	ldr	x8, [x8, #4000]
  40db9c:	mov	x19, x0
  40dba0:	cbz	x8, 40dba8 <wcrtomb@plt+0x90b8>
  40dba4:	blr	x8
  40dba8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40dbac:	add	x1, x1, #0x8e2
  40dbb0:	mov	w2, #0x5                   	// #5
  40dbb4:	mov	x0, xzr
  40dbb8:	bl	4048b0 <dcgettext@plt>
  40dbbc:	mov	x22, x0
  40dbc0:	mov	x0, x20
  40dbc4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40dbc8:	mov	x20, x0
  40dbcc:	mov	w0, #0x1                   	// #1
  40dbd0:	mov	x1, x21
  40dbd4:	bl	448a64 <argp_parse@@Base+0xe3b8>
  40dbd8:	mov	x4, x0
  40dbdc:	mov	w0, wzr
  40dbe0:	mov	w1, wzr
  40dbe4:	mov	x2, x22
  40dbe8:	mov	x3, x20
  40dbec:	mov	x5, x19
  40dbf0:	add	sp, sp, #0x1b0
  40dbf4:	ldp	x20, x19, [sp, #80]
  40dbf8:	ldp	x22, x21, [sp, #64]
  40dbfc:	ldp	x24, x23, [sp, #48]
  40dc00:	ldp	x26, x25, [sp, #32]
  40dc04:	ldr	x28, [sp, #16]
  40dc08:	ldp	x29, x30, [sp], #96
  40dc0c:	b	403f60 <error@plt>
  40dc10:	ldr	x22, [x19]
  40dc14:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40dc18:	add	x1, x1, #0xbb1
  40dc1c:	mov	w2, #0x5                   	// #5
  40dc20:	mov	x0, xzr
  40dc24:	bl	4048b0 <dcgettext@plt>
  40dc28:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dc2c:	ldr	w8, [x8, #3636]
  40dc30:	cbz	w8, 40dca0 <wcrtomb@plt+0x91b0>
  40dc34:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40dc38:	ldrb	w8, [x8, #3712]
  40dc3c:	tbz	w8, #2, 40dca0 <wcrtomb@plt+0x91b0>
  40dc40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dc44:	ldr	x8, [x8, #4000]
  40dc48:	mov	x20, x0
  40dc4c:	cbz	x8, 40dc54 <wcrtomb@plt+0x9164>
  40dc50:	blr	x8
  40dc54:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40dc58:	add	x1, x1, #0x8e2
  40dc5c:	mov	w2, #0x5                   	// #5
  40dc60:	mov	x0, xzr
  40dc64:	bl	4048b0 <dcgettext@plt>
  40dc68:	mov	x23, x0
  40dc6c:	mov	x0, x22
  40dc70:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40dc74:	mov	x22, x0
  40dc78:	mov	w0, #0x1                   	// #1
  40dc7c:	mov	x1, x21
  40dc80:	bl	448a64 <argp_parse@@Base+0xe3b8>
  40dc84:	mov	x4, x0
  40dc88:	mov	w0, wzr
  40dc8c:	mov	w1, wzr
  40dc90:	mov	x2, x23
  40dc94:	mov	x3, x22
  40dc98:	mov	x5, x20
  40dc9c:	bl	403f60 <error@plt>
  40dca0:	ldr	x0, [x19]
  40dca4:	bl	403f00 <strlen@plt>
  40dca8:	mov	x20, x0
  40dcac:	mov	x0, x21
  40dcb0:	bl	403f00 <strlen@plt>
  40dcb4:	add	x8, x20, x0
  40dcb8:	add	x0, x8, #0x1
  40dcbc:	bl	44a010 <argp_parse@@Base+0xf964>
  40dcc0:	ldr	x1, [x19]
  40dcc4:	mov	x20, x0
  40dcc8:	bl	4047f0 <strcpy@plt>
  40dccc:	mov	x1, x21
  40dcd0:	bl	404300 <strcat@plt>
  40dcd4:	add	x0, sp, #0x8
  40dcd8:	bl	425e88 <wcrtomb@plt+0x21398>
  40dcdc:	add	x0, sp, #0x8
  40dce0:	mov	x1, x21
  40dce4:	mov	x2, x20
  40dce8:	str	x19, [sp, #400]
  40dcec:	bl	40c410 <wcrtomb@plt+0x7920>
  40dcf0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dcf4:	ldr	x8, [x8, #3824]
  40dcf8:	cbz	x8, 40dd04 <wcrtomb@plt+0x9214>
  40dcfc:	mov	x0, x19
  40dd00:	bl	41537c <wcrtomb@plt+0x1088c>
  40dd04:	add	x0, sp, #0x8
  40dd08:	bl	425f4c <wcrtomb@plt+0x2145c>
  40dd0c:	mov	x0, x20
  40dd10:	b	40db40 <wcrtomb@plt+0x9050>
  40dd14:	ldp	x8, x9, [x0]
  40dd18:	eor	x8, x9, x8
  40dd1c:	udiv	x9, x8, x1
  40dd20:	msub	x0, x9, x1, x8
  40dd24:	ret
  40dd28:	ldp	x8, x11, [x1]
  40dd2c:	ldp	x9, x10, [x0]
  40dd30:	cmp	x9, x8
  40dd34:	cset	w8, eq  // eq = none
  40dd38:	cmp	x10, x11
  40dd3c:	cset	w9, eq  // eq = none
  40dd40:	and	w0, w8, w9
  40dd44:	ret
  40dd48:	sub	sp, sp, #0x70
  40dd4c:	stp	x29, x30, [sp, #16]
  40dd50:	stp	x28, x27, [sp, #32]
  40dd54:	stp	x26, x25, [sp, #48]
  40dd58:	stp	x24, x23, [sp, #64]
  40dd5c:	stp	x22, x21, [sp, #80]
  40dd60:	stp	x20, x19, [sp, #96]
  40dd64:	add	x29, sp, #0x10
  40dd68:	bl	41e610 <wcrtomb@plt+0x19b20>
  40dd6c:	mov	w0, #0x2                   	// #2
  40dd70:	mov	w24, #0x2                   	// #2
  40dd74:	bl	405d0c <wcrtomb@plt+0x121c>
  40dd78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dd7c:	ldr	x8, [x8, #3680]
  40dd80:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  40dd84:	add	x1, x1, #0xb35
  40dd88:	ldr	x0, [x8]
  40dd8c:	bl	404610 <strcmp@plt>
  40dd90:	cmp	w0, #0x0
  40dd94:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dd98:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dd9c:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40dda0:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40dda4:	adrp	x23, 460000 <_obstack_memory_used@@Base+0x14e3c>
  40dda8:	mov	w19, wzr
  40ddac:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ddb0:	add	x20, x20, #0xb98
  40ddb4:	add	x21, x21, #0xc10
  40ddb8:	add	x26, x26, #0xc98
  40ddbc:	add	x22, x22, #0xca4
  40ddc0:	cset	w8, eq  // eq = none
  40ddc4:	add	x23, x23, #0xfa7
  40ddc8:	strb	w8, [x28, #952]
  40ddcc:	mov	w2, #0x1                   	// #1
  40ddd0:	mov	x0, x20
  40ddd4:	mov	x1, x21
  40ddd8:	mov	w25, w19
  40dddc:	bl	41901c <wcrtomb@plt+0x1452c>
  40dde0:	mov	w19, w0
  40dde4:	cmp	w0, #0x5
  40dde8:	mov	w8, w0
  40ddec:	b.hi	40ddcc <wcrtomb@plt+0x92dc>  // b.pmore
  40ddf0:	adr	x9, 40de00 <wcrtomb@plt+0x9310>
  40ddf4:	ldrh	w10, [x26, x8, lsl #1]
  40ddf8:	add	x9, x9, x10, lsl #2
  40ddfc:	br	x9
  40de00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de04:	ldr	x0, [x8, #3096]
  40de08:	bl	41f8d0 <wcrtomb@plt+0x1ade0>
  40de0c:	cbz	x0, 40deb4 <wcrtomb@plt+0x93c4>
  40de10:	ldr	x8, [x0, #48]
  40de14:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de18:	add	x8, x8, #0x1
  40de1c:	str	x8, [x0, #48]
  40de20:	ldr	x9, [x9, #3752]
  40de24:	cbz	x9, 40debc <wcrtomb@plt+0x93cc>
  40de28:	cmp	x8, x9
  40de2c:	b.ne	40dec0 <wcrtomb@plt+0x93d0>  // b.any
  40de30:	b	40df10 <wcrtomb@plt+0x9420>
  40de34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de38:	ldrb	w8, [x8, #3069]
  40de3c:	cbz	w8, 40df08 <wcrtomb@plt+0x9418>
  40de40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de44:	ldr	x0, [x8, #2968]
  40de48:	bl	405640 <wcrtomb@plt+0xb50>
  40de4c:	b	40ddcc <wcrtomb@plt+0x92dc>
  40de50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de54:	ldr	x0, [x8, #2968]
  40de58:	bl	405640 <wcrtomb@plt+0xb50>
  40de5c:	sub	w8, w25, #0x1
  40de60:	cmp	w8, #0x3
  40de64:	b.cs	40dea4 <wcrtomb@plt+0x93b4>  // b.hs, b.nlast
  40de68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de6c:	ldr	x8, [x8, #4000]
  40de70:	cbz	x8, 40de78 <wcrtomb@plt+0x9388>
  40de74:	blr	x8
  40de78:	mov	w2, #0x5                   	// #5
  40de7c:	mov	x0, xzr
  40de80:	mov	x1, x22
  40de84:	bl	4048b0 <dcgettext@plt>
  40de88:	mov	x2, x0
  40de8c:	mov	w0, wzr
  40de90:	mov	w1, wzr
  40de94:	bl	403f60 <error@plt>
  40de98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40de9c:	str	w24, [x8, #2352]
  40dea0:	b	40ddcc <wcrtomb@plt+0x92dc>
  40dea4:	cbz	w25, 40dec8 <wcrtomb@plt+0x93d8>
  40dea8:	cmp	w25, #0x4
  40deac:	b.ne	40ddcc <wcrtomb@plt+0x92dc>  // b.any
  40deb0:	b	40e988 <wcrtomb@plt+0x9e98>
  40deb4:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  40deb8:	b	40ddcc <wcrtomb@plt+0x92dc>
  40debc:	cbnz	x8, 40df10 <wcrtomb@plt+0x9420>
  40dec0:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  40dec4:	b	40ddcc <wcrtomb@plt+0x92dc>
  40dec8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40decc:	ldr	x8, [x8, #4000]
  40ded0:	cbz	x8, 40ded8 <wcrtomb@plt+0x93e8>
  40ded4:	blr	x8
  40ded8:	mov	w2, #0x5                   	// #5
  40dedc:	mov	x0, xzr
  40dee0:	mov	x1, x23
  40dee4:	bl	4048b0 <dcgettext@plt>
  40dee8:	mov	x2, x0
  40deec:	mov	w0, wzr
  40def0:	mov	w1, wzr
  40def4:	bl	403f60 <error@plt>
  40def8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40defc:	ldr	x8, [x8, #4000]
  40df00:	cbnz	x8, 40de74 <wcrtomb@plt+0x9384>
  40df04:	b	40de78 <wcrtomb@plt+0x9388>
  40df08:	mov	w19, #0x4                   	// #4
  40df0c:	b	40df14 <wcrtomb@plt+0x9424>
  40df10:	mov	w19, #0x1                   	// #1
  40df14:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df18:	ldr	x8, [x8, #2832]
  40df1c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df20:	ldr	x0, [x9, #3912]
  40df24:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df28:	sub	x8, x8, #0x1
  40df2c:	str	x8, [x9, #2928]
  40df30:	bl	44a010 <argp_parse@@Base+0xf964>
  40df34:	sub	w8, w19, #0x1
  40df38:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df3c:	cmp	w8, #0x1
  40df40:	str	x0, [x9, #960]
  40df44:	b.hi	40e958 <wcrtomb@plt+0x9e68>  // b.pmore
  40df48:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df4c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df50:	ldr	x8, [x27, #2904]
  40df54:	ldr	x1, [x21, #2880]
  40df58:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df5c:	strb	wzr, [x9, #2888]
  40df60:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df64:	sub	x8, x8, x1
  40df68:	lsr	x9, x8, #9
  40df6c:	str	w9, [x10, #956]
  40df70:	cbz	w9, 40df80 <wcrtomb@plt+0x9490>
  40df74:	sxtw	x8, w8
  40df78:	and	x2, x8, #0xfffffffffffffe00
  40df7c:	bl	403e80 <memcpy@plt>
  40df80:	cmp	w19, #0x1
  40df84:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df88:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df8c:	b.ne	40dff0 <wcrtomb@plt+0x9500>  // b.any
  40df90:	ldr	x0, [x25, #2968]
  40df94:	bl	405640 <wcrtomb@plt+0xb50>
  40df98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40df9c:	ldr	x9, [x8, #3224]
  40dfa0:	ldr	x10, [x24, #2840]
  40dfa4:	ldr	x8, [x27, #2904]
  40dfa8:	add	x11, x9, #0x1ff
  40dfac:	add	x9, x9, #0x3fe
  40dfb0:	cmp	x11, #0x0
  40dfb4:	sub	x10, x10, x8
  40dfb8:	csel	x9, x9, x11, lt  // lt = tstop
  40dfbc:	asr	x19, x9, #9
  40dfc0:	asr	x9, x10, #9
  40dfc4:	b	40dfe0 <wcrtomb@plt+0x94f0>
  40dfc8:	sub	x19, x19, x9
  40dfcc:	bl	405398 <wcrtomb@plt+0x8a8>
  40dfd0:	ldr	x9, [x24, #2840]
  40dfd4:	ldr	x8, [x27, #2904]
  40dfd8:	sub	x9, x9, x8
  40dfdc:	asr	x9, x9, #9
  40dfe0:	cmp	x19, x9
  40dfe4:	b.ge	40dfc8 <wcrtomb@plt+0x94d8>  // b.tcont
  40dfe8:	add	x8, x8, x19, lsl #9
  40dfec:	str	x8, [x27, #2904]
  40dff0:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dff4:	add	x26, x26, #0x3bc
  40dff8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40dffc:	b	40e008 <wcrtomb@plt+0x9518>
  40e000:	ldr	x0, [x25, #2968]
  40e004:	bl	405640 <wcrtomb@plt+0xb50>
  40e008:	ldr	x8, [x27, #2904]
  40e00c:	ldr	x9, [x24, #2840]
  40e010:	cmp	x8, x9
  40e014:	b.ne	40e01c <wcrtomb@plt+0x952c>  // b.any
  40e018:	bl	405398 <wcrtomb@plt+0x8a8>
  40e01c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e020:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e024:	add	x20, x20, #0xc10
  40e028:	add	x0, x0, #0xb98
  40e02c:	mov	x1, x20
  40e030:	mov	w2, wzr
  40e034:	bl	41901c <wcrtomb@plt+0x1452c>
  40e038:	mov	w22, w0
  40e03c:	mov	x0, x20
  40e040:	bl	412aac <wcrtomb@plt+0xdfbc>
  40e044:	subs	w8, w22, #0x3
  40e048:	b.ne	40e058 <wcrtomb@plt+0x9568>  // b.any
  40e04c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e050:	ldrb	w9, [x9, #3069]
  40e054:	cbnz	w9, 40e000 <wcrtomb@plt+0x9510>
  40e058:	cmp	w8, #0x1
  40e05c:	b.ls	40e77c <wcrtomb@plt+0x9c8c>  // b.plast
  40e060:	cmp	w22, #0x5
  40e064:	b.ne	40e0b4 <wcrtomb@plt+0x95c4>  // b.any
  40e068:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e06c:	ldr	x8, [x8, #4000]
  40e070:	cbz	x8, 40e078 <wcrtomb@plt+0x9588>
  40e074:	blr	x8
  40e078:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40e07c:	mov	w2, #0x5                   	// #5
  40e080:	mov	x0, xzr
  40e084:	add	x1, x1, #0xcbc
  40e088:	bl	4048b0 <dcgettext@plt>
  40e08c:	mov	x2, x0
  40e090:	mov	w0, wzr
  40e094:	mov	w1, wzr
  40e098:	bl	403f60 <error@plt>
  40e09c:	ldr	x0, [x25, #2968]
  40e0a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e0a4:	mov	w9, #0x2                   	// #2
  40e0a8:	str	w9, [x8, #2352]
  40e0ac:	bl	405640 <wcrtomb@plt+0xb50>
  40e0b0:	b	40e008 <wcrtomb@plt+0x9518>
  40e0b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e0b8:	ldr	x0, [x8, #3096]
  40e0bc:	bl	41f8d0 <wcrtomb@plt+0x1ade0>
  40e0c0:	cbz	x0, 40e0ec <wcrtomb@plt+0x95fc>
  40e0c4:	ldr	x8, [x0, #48]
  40e0c8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e0cc:	add	x8, x8, #0x1
  40e0d0:	str	x8, [x0, #48]
  40e0d4:	ldr	x9, [x9, #3752]
  40e0d8:	cbz	x9, 40e0e8 <wcrtomb@plt+0x95f8>
  40e0dc:	cmp	x8, x9
  40e0e0:	b.ne	40e0ec <wcrtomb@plt+0x95fc>  // b.any
  40e0e4:	b	40df90 <wcrtomb@plt+0x94a0>
  40e0e8:	cbnz	x8, 40df90 <wcrtomb@plt+0x94a0>
  40e0ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e0f0:	ldr	x9, [x8, #3440]
  40e0f4:	cbz	x9, 40e2d8 <wcrtomb@plt+0x97e8>
  40e0f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e0fc:	ldr	x23, [x8, #3448]
  40e100:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e104:	ldr	w8, [x8, #956]
  40e108:	mov	x24, x28
  40e10c:	lsr	x20, x9, #9
  40e110:	and	x10, x9, #0xfffffffffffffe00
  40e114:	and	x22, x9, #0x1ff
  40e118:	stp	x10, x23, [sp]
  40e11c:	cbnz	x20, 40e21c <wcrtomb@plt+0x972c>
  40e120:	mov	w25, w8
  40e124:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e128:	ldr	x8, [x8, #960]
  40e12c:	sxtw	x9, w25
  40e130:	mov	x2, x22
  40e134:	add	x0, x8, x9, lsl #9
  40e138:	ldp	x9, x8, [sp]
  40e13c:	add	x1, x8, x9
  40e140:	bl	403e80 <memcpy@plt>
  40e144:	cmp	x22, #0x1ff
  40e148:	b.hi	40e16c <wcrtomb@plt+0x967c>  // b.pmore
  40e14c:	ldur	x8, [x26, #4]
  40e150:	ldrsw	x9, [x26]
  40e154:	mov	w1, wzr
  40e158:	add	x8, x8, x9, lsl #9
  40e15c:	add	x0, x8, x22
  40e160:	mov	w8, #0x200                 	// #512
  40e164:	sub	x2, x8, x22
  40e168:	bl	404320 <memset@plt>
  40e16c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e170:	ldr	w8, [x10, #956]
  40e174:	ldr	w9, [x19, #3740]
  40e178:	mov	x28, x24
  40e17c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e180:	add	w20, w8, #0x1
  40e184:	cmp	w20, w9
  40e188:	str	w20, [x10, #956]
  40e18c:	b.ne	40e4cc <wcrtomb@plt+0x99dc>  // b.any
  40e190:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e194:	add	x9, x9, #0x3b8
  40e198:	ldr	x8, [x9, #8]
  40e19c:	ldrb	w9, [x9]
  40e1a0:	ldr	x20, [x21, #2880]
  40e1a4:	str	x8, [x21, #2880]
  40e1a8:	cbz	w9, 40e744 <wcrtomb@plt+0x9c54>
  40e1ac:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e1b0:	mov	w8, #0x1                   	// #1
  40e1b4:	str	w8, [x22, #3968]
  40e1b8:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e1bc:	str	wzr, [x22, #3968]
  40e1c0:	ldrb	w8, [x28, #952]
  40e1c4:	str	x20, [x21, #2880]
  40e1c8:	cbnz	w8, 40e1f0 <wcrtomb@plt+0x9700>
  40e1cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e1d0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e1d4:	ldr	x8, [x8, #2832]
  40e1d8:	ldr	x9, [x9, #2848]
  40e1dc:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e1e0:	ldr	x10, [x10, #2928]
  40e1e4:	sub	x8, x8, x9
  40e1e8:	sub	x0, x8, x10
  40e1ec:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e1f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e1f4:	mov	w20, wzr
  40e1f8:	str	wzr, [x8, #956]
  40e1fc:	b	40e4cc <wcrtomb@plt+0x99dc>
  40e200:	mov	w25, wzr
  40e204:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e208:	str	wzr, [x8, #956]
  40e20c:	subs	x20, x20, #0x1
  40e210:	add	x23, x23, #0x200
  40e214:	mov	w8, w25
  40e218:	b.eq	40e124 <wcrtomb@plt+0x9634>  // b.none
  40e21c:	ldur	x28, [x26, #4]
  40e220:	add	w25, w8, #0x1
  40e224:	sxtw	x8, w8
  40e228:	mov	w2, #0x200                 	// #512
  40e22c:	add	x0, x28, x8, lsl #9
  40e230:	mov	x1, x23
  40e234:	str	w25, [x26]
  40e238:	bl	403e80 <memcpy@plt>
  40e23c:	ldr	w8, [x19, #3740]
  40e240:	cmp	w25, w8
  40e244:	b.ne	40e20c <wcrtomb@plt+0x971c>  // b.any
  40e248:	ldrb	w8, [x24, #952]
  40e24c:	ldr	x25, [x21, #2880]
  40e250:	str	x28, [x21, #2880]
  40e254:	cbz	w8, 40e27c <wcrtomb@plt+0x978c>
  40e258:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e25c:	mov	w8, #0x1                   	// #1
  40e260:	str	w8, [x28, #3968]
  40e264:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e268:	str	wzr, [x28, #3968]
  40e26c:	ldrb	w8, [x24, #952]
  40e270:	str	x25, [x21, #2880]
  40e274:	cbnz	w8, 40e200 <wcrtomb@plt+0x9710>
  40e278:	b	40e2b0 <wcrtomb@plt+0x97c0>
  40e27c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e280:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e284:	ldr	x8, [x8, #2848]
  40e288:	ldr	x9, [x9, #2928]
  40e28c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e290:	ldr	x10, [x10, #2832]
  40e294:	add	x8, x9, x8
  40e298:	sub	x0, x8, x10
  40e29c:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e2a0:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e2a4:	ldrb	w8, [x24, #952]
  40e2a8:	str	x25, [x21, #2880]
  40e2ac:	cbnz	w8, 40e200 <wcrtomb@plt+0x9710>
  40e2b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e2b4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e2b8:	ldr	x8, [x8, #2832]
  40e2bc:	ldr	x9, [x9, #2848]
  40e2c0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e2c4:	ldr	x10, [x10, #2928]
  40e2c8:	sub	x8, x8, x9
  40e2cc:	sub	x0, x8, x10
  40e2d0:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e2d4:	b	40e200 <wcrtomb@plt+0x9710>
  40e2d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e2dc:	ldr	x23, [x8, #2960]
  40e2e0:	cbz	x23, 40e3d0 <wcrtomb@plt+0x98e0>
  40e2e4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e2e8:	ldr	x22, [x8, #2952]
  40e2ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e2f0:	ldr	w8, [x8, #956]
  40e2f4:	b	40e314 <wcrtomb@plt+0x9824>
  40e2f8:	mov	w20, wzr
  40e2fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e300:	str	wzr, [x8, #956]
  40e304:	subs	x23, x23, #0x1
  40e308:	add	x22, x22, #0x200
  40e30c:	mov	w8, w20
  40e310:	b.eq	40e3d0 <wcrtomb@plt+0x98e0>  // b.none
  40e314:	ldur	x25, [x26, #4]
  40e318:	add	w20, w8, #0x1
  40e31c:	sxtw	x8, w8
  40e320:	mov	w2, #0x200                 	// #512
  40e324:	add	x0, x25, x8, lsl #9
  40e328:	mov	x1, x22
  40e32c:	str	w20, [x26]
  40e330:	bl	403e80 <memcpy@plt>
  40e334:	ldr	w8, [x19, #3740]
  40e338:	cmp	w20, w8
  40e33c:	b.ne	40e304 <wcrtomb@plt+0x9814>  // b.any
  40e340:	ldrb	w8, [x28, #952]
  40e344:	ldr	x20, [x21, #2880]
  40e348:	str	x25, [x21, #2880]
  40e34c:	cbz	w8, 40e374 <wcrtomb@plt+0x9884>
  40e350:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e354:	mov	w8, #0x1                   	// #1
  40e358:	str	w8, [x25, #3968]
  40e35c:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e360:	str	wzr, [x25, #3968]
  40e364:	ldrb	w8, [x28, #952]
  40e368:	str	x20, [x21, #2880]
  40e36c:	cbnz	w8, 40e2f8 <wcrtomb@plt+0x9808>
  40e370:	b	40e3a8 <wcrtomb@plt+0x98b8>
  40e374:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e378:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e37c:	ldr	x8, [x8, #2848]
  40e380:	ldr	x9, [x9, #2928]
  40e384:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e388:	ldr	x10, [x10, #2832]
  40e38c:	add	x8, x9, x8
  40e390:	sub	x0, x8, x10
  40e394:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e398:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e39c:	ldrb	w8, [x28, #952]
  40e3a0:	str	x20, [x21, #2880]
  40e3a4:	cbnz	w8, 40e2f8 <wcrtomb@plt+0x9808>
  40e3a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3ac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3b0:	ldr	x8, [x8, #2832]
  40e3b4:	ldr	x9, [x9, #2848]
  40e3b8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3bc:	ldr	x10, [x10, #2928]
  40e3c0:	sub	x8, x8, x9
  40e3c4:	sub	x0, x8, x10
  40e3c8:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e3cc:	b	40e2f8 <wcrtomb@plt+0x9808>
  40e3d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3d4:	ldr	x23, [x8, #2976]
  40e3d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3dc:	ldr	w8, [x8, #956]
  40e3e0:	cbz	x23, 40e4c8 <wcrtomb@plt+0x99d8>
  40e3e4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3e8:	ldr	x22, [x9, #2984]
  40e3ec:	b	40e40c <wcrtomb@plt+0x991c>
  40e3f0:	mov	w20, wzr
  40e3f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e3f8:	str	wzr, [x8, #956]
  40e3fc:	subs	x23, x23, #0x1
  40e400:	add	x22, x22, #0x200
  40e404:	mov	w8, w20
  40e408:	b.eq	40e4cc <wcrtomb@plt+0x99dc>  // b.none
  40e40c:	ldur	x25, [x26, #4]
  40e410:	add	w20, w8, #0x1
  40e414:	sxtw	x8, w8
  40e418:	mov	w2, #0x200                 	// #512
  40e41c:	add	x0, x25, x8, lsl #9
  40e420:	mov	x1, x22
  40e424:	str	w20, [x26]
  40e428:	bl	403e80 <memcpy@plt>
  40e42c:	ldr	w8, [x19, #3740]
  40e430:	cmp	w20, w8
  40e434:	b.ne	40e3fc <wcrtomb@plt+0x990c>  // b.any
  40e438:	ldrb	w8, [x28, #952]
  40e43c:	ldr	x20, [x21, #2880]
  40e440:	str	x25, [x21, #2880]
  40e444:	cbz	w8, 40e46c <wcrtomb@plt+0x997c>
  40e448:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e44c:	mov	w8, #0x1                   	// #1
  40e450:	str	w8, [x25, #3968]
  40e454:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e458:	str	wzr, [x25, #3968]
  40e45c:	ldrb	w8, [x28, #952]
  40e460:	str	x20, [x21, #2880]
  40e464:	cbnz	w8, 40e3f0 <wcrtomb@plt+0x9900>
  40e468:	b	40e4a0 <wcrtomb@plt+0x99b0>
  40e46c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e470:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e474:	ldr	x8, [x8, #2848]
  40e478:	ldr	x9, [x9, #2928]
  40e47c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e480:	ldr	x10, [x10, #2832]
  40e484:	add	x8, x9, x8
  40e488:	sub	x0, x8, x10
  40e48c:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e490:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e494:	ldrb	w8, [x28, #952]
  40e498:	str	x20, [x21, #2880]
  40e49c:	cbnz	w8, 40e3f0 <wcrtomb@plt+0x9900>
  40e4a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e4a4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e4a8:	ldr	x8, [x8, #2832]
  40e4ac:	ldr	x9, [x9, #2848]
  40e4b0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e4b4:	ldr	x10, [x10, #2928]
  40e4b8:	sub	x8, x8, x9
  40e4bc:	sub	x0, x8, x10
  40e4c0:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e4c4:	b	40e3f0 <wcrtomb@plt+0x9900>
  40e4c8:	mov	w20, w8
  40e4cc:	ldur	x8, [x26, #4]
  40e4d0:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e4d4:	ldr	x1, [x25, #2968]
  40e4d8:	sxtw	x9, w20
  40e4dc:	add	x0, x8, x9, lsl #9
  40e4e0:	mov	w2, #0x200                 	// #512
  40e4e4:	bl	403e80 <memcpy@plt>
  40e4e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e4ec:	ldr	x8, [x8, #3224]
  40e4f0:	ldr	x0, [x25, #2968]
  40e4f4:	add	w9, w20, #0x1
  40e4f8:	str	w9, [x26]
  40e4fc:	add	x9, x8, #0x1ff
  40e500:	add	x22, x8, #0x3fe
  40e504:	cmp	x9, #0x0
  40e508:	csel	x20, x22, x9, lt  // lt = tstop
  40e50c:	bl	405640 <wcrtomb@plt+0xb50>
  40e510:	ldr	w8, [x26]
  40e514:	ldr	w9, [x19, #3740]
  40e518:	cmp	w8, w9
  40e51c:	b.ne	40e590 <wcrtomb@plt+0x9aa0>  // b.any
  40e520:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e524:	add	x9, x9, #0x3b8
  40e528:	ldr	x8, [x9, #8]
  40e52c:	ldrb	w9, [x9]
  40e530:	ldr	x23, [x21, #2880]
  40e534:	str	x8, [x21, #2880]
  40e538:	cbz	w9, 40e70c <wcrtomb@plt+0x9c1c>
  40e53c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e540:	mov	w8, #0x1                   	// #1
  40e544:	str	w8, [x24, #3968]
  40e548:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e54c:	str	wzr, [x24, #3968]
  40e550:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e554:	ldrb	w8, [x28, #952]
  40e558:	str	x23, [x21, #2880]
  40e55c:	cbnz	w8, 40e584 <wcrtomb@plt+0x9a94>
  40e560:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e564:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e568:	ldr	x8, [x8, #2832]
  40e56c:	ldr	x9, [x9, #2848]
  40e570:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e574:	ldr	x10, [x10, #2928]
  40e578:	sub	x8, x8, x9
  40e57c:	sub	x0, x8, x10
  40e580:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e584:	mov	w8, wzr
  40e588:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e58c:	str	wzr, [x9, #956]
  40e590:	cmp	x22, #0x3ff
  40e594:	b.cc	40e008 <wcrtomb@plt+0x9518>  // b.lo, b.ul, b.last
  40e598:	ldr	x9, [x24, #2840]
  40e59c:	ldr	x1, [x27, #2904]
  40e5a0:	asr	x22, x20, #9
  40e5a4:	sub	x10, x9, x1
  40e5a8:	lsr	x10, x10, #9
  40e5ac:	cmp	x22, w10, sxtw
  40e5b0:	csel	w23, w22, w10, lt  // lt = tstop
  40e5b4:	cmp	x1, x9
  40e5b8:	b.eq	40e5d4 <wcrtomb@plt+0x9ae4>  // b.none
  40e5bc:	ldr	w9, [x19, #3740]
  40e5c0:	sub	w9, w9, w8
  40e5c4:	cmp	w9, w23
  40e5c8:	csel	w20, w9, w23, lt  // lt = tstop
  40e5cc:	cbnz	w20, 40e604 <wcrtomb@plt+0x9b14>
  40e5d0:	b	40e988 <wcrtomb@plt+0x9e98>
  40e5d4:	bl	405828 <wcrtomb@plt+0xd38>
  40e5d8:	ldrsw	x9, [x19, #3740]
  40e5dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e5e0:	ldr	x1, [x21, #2880]
  40e5e4:	ldr	w8, [x8, #956]
  40e5e8:	cmp	x22, x9
  40e5ec:	csel	w23, w22, w9, lt  // lt = tstop
  40e5f0:	str	x1, [x27, #2904]
  40e5f4:	sub	w9, w9, w8
  40e5f8:	cmp	w9, w23
  40e5fc:	csel	w20, w9, w23, lt  // lt = tstop
  40e600:	cbz	w20, 40e988 <wcrtomb@plt+0x9e98>
  40e604:	ldur	x9, [x26, #4]
  40e608:	sxtw	x8, w8
  40e60c:	lsl	w10, w20, #9
  40e610:	sxtw	x2, w10
  40e614:	add	x0, x9, x8, lsl #9
  40e618:	bl	403e80 <memcpy@plt>
  40e61c:	ldr	w8, [x26]
  40e620:	ldr	x9, [x27, #2904]
  40e624:	ldr	w11, [x19, #3740]
  40e628:	sxtw	x10, w20
  40e62c:	add	w8, w8, w20
  40e630:	sub	x22, x22, x10
  40e634:	add	x9, x9, x10, lsl #9
  40e638:	cmp	w8, w11
  40e63c:	sub	w23, w23, w20
  40e640:	str	w8, [x26]
  40e644:	str	x9, [x27, #2904]
  40e648:	b.ne	40e6bc <wcrtomb@plt+0x9bcc>  // b.any
  40e64c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e650:	add	x9, x9, #0x3b8
  40e654:	ldr	x8, [x9, #8]
  40e658:	ldrb	w9, [x9]
  40e65c:	ldr	x20, [x21, #2880]
  40e660:	str	x8, [x21, #2880]
  40e664:	cbz	w9, 40e6d4 <wcrtomb@plt+0x9be4>
  40e668:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e66c:	mov	w8, #0x1                   	// #1
  40e670:	str	w8, [x24, #3968]
  40e674:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e678:	str	wzr, [x24, #3968]
  40e67c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e680:	ldrb	w8, [x28, #952]
  40e684:	str	x20, [x21, #2880]
  40e688:	cbnz	w8, 40e6b0 <wcrtomb@plt+0x9bc0>
  40e68c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e690:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e694:	ldr	x8, [x8, #2832]
  40e698:	ldr	x9, [x9, #2848]
  40e69c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e6a0:	ldr	x10, [x10, #2928]
  40e6a4:	sub	x8, x8, x9
  40e6a8:	sub	x0, x8, x10
  40e6ac:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e6b0:	mov	w8, wzr
  40e6b4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e6b8:	str	wzr, [x9, #956]
  40e6bc:	cbz	x22, 40e008 <wcrtomb@plt+0x9518>
  40e6c0:	ldr	x1, [x27, #2904]
  40e6c4:	ldr	x9, [x24, #2840]
  40e6c8:	cmp	x1, x9
  40e6cc:	b.ne	40e5bc <wcrtomb@plt+0x9acc>  // b.any
  40e6d0:	b	40e5d4 <wcrtomb@plt+0x9ae4>
  40e6d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e6d8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e6dc:	ldr	x8, [x8, #2848]
  40e6e0:	ldr	x9, [x9, #2928]
  40e6e4:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e6e8:	ldr	x10, [x10, #2832]
  40e6ec:	add	x8, x9, x8
  40e6f0:	sub	x0, x8, x10
  40e6f4:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e6f8:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e6fc:	ldrb	w8, [x28, #952]
  40e700:	str	x20, [x21, #2880]
  40e704:	cbnz	w8, 40e6b0 <wcrtomb@plt+0x9bc0>
  40e708:	b	40e68c <wcrtomb@plt+0x9b9c>
  40e70c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e710:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e714:	ldr	x8, [x8, #2848]
  40e718:	ldr	x9, [x9, #2928]
  40e71c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e720:	ldr	x10, [x10, #2832]
  40e724:	add	x8, x9, x8
  40e728:	sub	x0, x8, x10
  40e72c:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e730:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e734:	ldrb	w8, [x28, #952]
  40e738:	str	x23, [x21, #2880]
  40e73c:	cbnz	w8, 40e584 <wcrtomb@plt+0x9a94>
  40e740:	b	40e560 <wcrtomb@plt+0x9a70>
  40e744:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e748:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e74c:	ldr	x8, [x8, #2848]
  40e750:	ldr	x9, [x9, #2928]
  40e754:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e758:	ldr	x10, [x10, #2832]
  40e75c:	add	x8, x9, x8
  40e760:	sub	x0, x8, x10
  40e764:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e768:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e76c:	ldrb	w8, [x28, #952]
  40e770:	str	x20, [x21, #2880]
  40e774:	cbnz	w8, 40e1f0 <wcrtomb@plt+0x9700>
  40e778:	b	40e1cc <wcrtomb@plt+0x96dc>
  40e77c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e780:	add	x22, x22, #0x3b8
  40e784:	ldrsw	x8, [x22, #4]
  40e788:	ldr	w9, [x19, #3740]
  40e78c:	ldr	x10, [x22, #8]
  40e790:	mov	w1, wzr
  40e794:	sub	w20, w9, w8
  40e798:	add	x0, x10, x8, lsl #9
  40e79c:	lsl	w8, w20, #9
  40e7a0:	sxtw	x2, w8
  40e7a4:	bl	404320 <memset@plt>
  40e7a8:	ldr	x8, [x22, #8]
  40e7ac:	ldrb	w9, [x22]
  40e7b0:	ldr	x22, [x21, #2880]
  40e7b4:	str	x8, [x21, #2880]
  40e7b8:	cbz	w9, 40e7e4 <wcrtomb@plt+0x9cf4>
  40e7bc:	mov	w8, #0x1                   	// #1
  40e7c0:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e7c4:	str	w8, [x23, #3968]
  40e7c8:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e7cc:	str	wzr, [x23, #3968]
  40e7d0:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e7d4:	cmp	w20, #0x1
  40e7d8:	str	x22, [x21, #2880]
  40e7dc:	b.le	40e81c <wcrtomb@plt+0x9d2c>
  40e7e0:	b	40e848 <wcrtomb@plt+0x9d58>
  40e7e4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e7e8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e7ec:	ldr	x8, [x8, #2848]
  40e7f0:	ldr	x9, [x9, #2928]
  40e7f4:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e7f8:	ldr	x10, [x10, #2832]
  40e7fc:	add	x8, x9, x8
  40e800:	sub	x0, x8, x10
  40e804:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e808:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e80c:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e810:	cmp	w20, #0x1
  40e814:	str	x22, [x21, #2880]
  40e818:	b.gt	40e848 <wcrtomb@plt+0x9d58>
  40e81c:	ldrb	w8, [x28, #952]
  40e820:	cbnz	w8, 40e848 <wcrtomb@plt+0x9d58>
  40e824:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e828:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e82c:	ldr	x8, [x8, #2832]
  40e830:	ldr	x9, [x9, #2848]
  40e834:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e838:	ldr	x10, [x10, #2928]
  40e83c:	sub	x8, x8, x9
  40e840:	sub	x0, x8, x10
  40e844:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e848:	cmp	w20, #0x1
  40e84c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e850:	str	wzr, [x8, #956]
  40e854:	b.gt	40e928 <wcrtomb@plt+0x9e38>
  40e858:	mov	w22, #0x1                   	// #1
  40e85c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e860:	b	40e874 <wcrtomb@plt+0x9d84>
  40e864:	cmp	w20, #0x2
  40e868:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e86c:	str	wzr, [x8, #956]
  40e870:	b.ge	40e928 <wcrtomb@plt+0x9e38>  // b.tcont
  40e874:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e878:	ldrsw	x25, [x19, #3740]
  40e87c:	add	x23, x23, #0x3b8
  40e880:	ldr	x0, [x23, #8]
  40e884:	mov	w1, wzr
  40e888:	lsl	x2, x25, #9
  40e88c:	bl	404320 <memset@plt>
  40e890:	ldr	x8, [x23, #8]
  40e894:	ldrb	w9, [x23]
  40e898:	ldr	x23, [x21, #2880]
  40e89c:	add	w20, w25, w20
  40e8a0:	str	x8, [x21, #2880]
  40e8a4:	cbz	w9, 40e8c4 <wcrtomb@plt+0x9dd4>
  40e8a8:	str	w22, [x24, #3968]
  40e8ac:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e8b0:	str	wzr, [x24, #3968]
  40e8b4:	cmp	w20, #0x1
  40e8b8:	str	x23, [x21, #2880]
  40e8bc:	b.le	40e8f8 <wcrtomb@plt+0x9e08>
  40e8c0:	b	40e864 <wcrtomb@plt+0x9d74>
  40e8c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e8c8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e8cc:	ldr	x8, [x8, #2848]
  40e8d0:	ldr	x9, [x9, #2928]
  40e8d4:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e8d8:	ldr	x10, [x10, #2832]
  40e8dc:	add	x8, x9, x8
  40e8e0:	sub	x0, x8, x10
  40e8e4:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e8e8:	bl	405cf8 <wcrtomb@plt+0x1208>
  40e8ec:	cmp	w20, #0x1
  40e8f0:	str	x23, [x21, #2880]
  40e8f4:	b.gt	40e864 <wcrtomb@plt+0x9d74>
  40e8f8:	ldrb	w8, [x28, #952]
  40e8fc:	cbnz	w8, 40e864 <wcrtomb@plt+0x9d74>
  40e900:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e904:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e908:	ldr	x8, [x8, #2832]
  40e90c:	ldr	x9, [x9, #2848]
  40e910:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e914:	ldr	x10, [x10, #2928]
  40e918:	sub	x8, x8, x9
  40e91c:	sub	x0, x8, x10
  40e920:	bl	40e98c <wcrtomb@plt+0x9e9c>
  40e924:	b	40e864 <wcrtomb@plt+0x9d74>
  40e928:	ldrb	w8, [x28, #952]
  40e92c:	cbnz	w8, 40e958 <wcrtomb@plt+0x9e68>
  40e930:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e934:	ldr	w0, [x8, #3968]
  40e938:	mov	w8, #0x3fffffff            	// #1073741823
  40e93c:	cmp	w0, w8
  40e940:	b.gt	40e958 <wcrtomb@plt+0x9e68>
  40e944:	bl	42338c <wcrtomb@plt+0x1e89c>
  40e948:	cbz	w0, 40e958 <wcrtomb@plt+0x9e68>
  40e94c:	ldr	x8, [x26, #3680]
  40e950:	ldr	x0, [x8]
  40e954:	bl	42d660 <wcrtomb@plt+0x28b70>
  40e958:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e95c:	ldr	x0, [x8, #960]
  40e960:	bl	4046b0 <free@plt>
  40e964:	bl	405974 <wcrtomb@plt+0xe84>
  40e968:	ldp	x20, x19, [sp, #96]
  40e96c:	ldp	x22, x21, [sp, #80]
  40e970:	ldp	x24, x23, [sp, #64]
  40e974:	ldp	x26, x25, [sp, #48]
  40e978:	ldp	x28, x27, [sp, #32]
  40e97c:	ldp	x29, x30, [sp, #16]
  40e980:	add	sp, sp, #0x70
  40e984:	b	41ed78 <wcrtomb@plt+0x1a288>
  40e988:	bl	404560 <abort@plt>
  40e98c:	sub	sp, sp, #0x30
  40e990:	stp	x29, x30, [sp, #16]
  40e994:	stp	x20, x19, [sp, #32]
  40e998:	add	x29, sp, #0x10
  40e99c:	cbz	x0, 40ea10 <wcrtomb@plt+0x9f20>
  40e9a0:	mov	x19, x0
  40e9a4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40e9a8:	tbnz	x0, #63, 40e9c4 <wcrtomb@plt+0x9ed4>
  40e9ac:	mov	w8, #0x3                   	// #3
  40e9b0:	lsr	x9, x19, #31
  40e9b4:	strh	w8, [sp, #8]
  40e9b8:	str	w19, [sp, #12]
  40e9bc:	cbz	x9, 40e9e4 <wcrtomb@plt+0x9ef4>
  40e9c0:	b	40ea84 <wcrtomb@plt+0x9f94>
  40e9c4:	mov	w8, #0x4                   	// #4
  40e9c8:	mov	w10, #0x80000000            	// #-2147483648
  40e9cc:	strh	w8, [sp, #8]
  40e9d0:	sub	x8, x10, x19
  40e9d4:	neg	w9, w19
  40e9d8:	lsr	x8, x8, #32
  40e9dc:	str	w9, [sp, #12]
  40e9e0:	cbnz	x8, 40ea84 <wcrtomb@plt+0x9f94>
  40e9e4:	ldr	w0, [x20, #3968]
  40e9e8:	mov	w8, #0x40000000            	// #1073741824
  40e9ec:	cmp	w0, w8
  40e9f0:	b.lt	40ea20 <wcrtomb@plt+0x9f30>  // b.tstop
  40e9f4:	mov	w8, #0xc0000000            	// #-1073741824
  40e9f8:	mov	w1, #0x6d01                	// #27905
  40e9fc:	add	w0, w0, w8
  40ea00:	add	x2, sp, #0x8
  40ea04:	movk	w1, #0x4008, lsl #16
  40ea08:	bl	42e91c <wcrtomb@plt+0x29e2c>
  40ea0c:	tbnz	w0, #31, 40ea34 <wcrtomb@plt+0x9f44>
  40ea10:	ldp	x20, x19, [sp, #32]
  40ea14:	ldp	x29, x30, [sp, #16]
  40ea18:	add	sp, sp, #0x30
  40ea1c:	ret
  40ea20:	mov	w1, #0x6d01                	// #27905
  40ea24:	add	x2, sp, #0x8
  40ea28:	movk	w1, #0x4008, lsl #16
  40ea2c:	bl	404aa0 <ioctl@plt>
  40ea30:	tbz	w0, #31, 40ea10 <wcrtomb@plt+0x9f20>
  40ea34:	bl	4049c0 <__errno_location@plt>
  40ea38:	ldr	w8, [x0]
  40ea3c:	cmp	w8, #0x5
  40ea40:	b.ne	40ea84 <wcrtomb@plt+0x9f94>  // b.any
  40ea44:	ldr	w0, [x20, #3968]
  40ea48:	mov	w8, #0x40000000            	// #1073741824
  40ea4c:	cmp	w0, w8
  40ea50:	b.lt	40ea70 <wcrtomb@plt+0x9f80>  // b.tstop
  40ea54:	mov	w8, #0xc0000000            	// #-1073741824
  40ea58:	mov	w1, #0x6d01                	// #27905
  40ea5c:	add	w0, w0, w8
  40ea60:	add	x2, sp, #0x8
  40ea64:	movk	w1, #0x4008, lsl #16
  40ea68:	bl	42e91c <wcrtomb@plt+0x29e2c>
  40ea6c:	b	40ea80 <wcrtomb@plt+0x9f90>
  40ea70:	mov	w1, #0x6d01                	// #27905
  40ea74:	add	x2, sp, #0x8
  40ea78:	movk	w1, #0x4008, lsl #16
  40ea7c:	bl	404aa0 <ioctl@plt>
  40ea80:	tbz	w0, #31, 40ea10 <wcrtomb@plt+0x9f20>
  40ea84:	ldr	w0, [x20, #3968]
  40ea88:	mov	w8, #0x40000000            	// #1073741824
  40ea8c:	cmp	w0, w8
  40ea90:	b.lt	40eaac <wcrtomb@plt+0x9fbc>  // b.tstop
  40ea94:	mov	w8, #0xc0000000            	// #-1073741824
  40ea98:	add	w0, w0, w8
  40ea9c:	mov	w2, #0x1                   	// #1
  40eaa0:	mov	x1, xzr
  40eaa4:	bl	42e714 <wcrtomb@plt+0x29c24>
  40eaa8:	b	40eab8 <wcrtomb@plt+0x9fc8>
  40eaac:	mov	w2, #0x1                   	// #1
  40eab0:	mov	x1, xzr
  40eab4:	bl	4040e0 <lseek@plt>
  40eab8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40eabc:	ldr	x8, [x8, #3912]
  40eac0:	mul	x9, x8, x19
  40eac4:	sdiv	x10, x9, x19
  40eac8:	cmp	x10, x8
  40eacc:	add	x19, x9, x0
  40ead0:	b.ne	40eb1c <wcrtomb@plt+0xa02c>  // b.any
  40ead4:	ldr	w0, [x20, #3968]
  40ead8:	mov	w8, #0x40000000            	// #1073741824
  40eadc:	bic	x19, x19, x19, asr #63
  40eae0:	cmp	w0, w8
  40eae4:	b.lt	40eb08 <wcrtomb@plt+0xa018>  // b.tstop
  40eae8:	mov	w8, #0xc0000000            	// #-1073741824
  40eaec:	add	w0, w0, w8
  40eaf0:	mov	x1, x19
  40eaf4:	mov	w2, wzr
  40eaf8:	bl	42e714 <wcrtomb@plt+0x29c24>
  40eafc:	cmp	x0, x19
  40eb00:	b.eq	40ea10 <wcrtomb@plt+0x9f20>  // b.none
  40eb04:	b	40eb1c <wcrtomb@plt+0xa02c>
  40eb08:	mov	x1, x19
  40eb0c:	mov	w2, wzr
  40eb10:	bl	4040e0 <lseek@plt>
  40eb14:	cmp	x0, x19
  40eb18:	b.eq	40ea10 <wcrtomb@plt+0x9f20>  // b.none
  40eb1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40eb20:	ldr	x8, [x8, #3680]
  40eb24:	mov	x1, x19
  40eb28:	ldr	x0, [x8]
  40eb2c:	bl	42d298 <wcrtomb@plt+0x287a8>
  40eb30:	ldp	x20, x19, [sp, #32]
  40eb34:	ldp	x29, x30, [sp, #16]
  40eb38:	add	sp, sp, #0x30
  40eb3c:	ret
  40eb40:	stp	x29, x30, [sp, #-16]!
  40eb44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40eb48:	ldr	x8, [x8, #2936]
  40eb4c:	mov	x29, sp
  40eb50:	cbz	x8, 40eb58 <wcrtomb@plt+0xa068>
  40eb54:	blr	x8
  40eb58:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40eb5c:	add	x1, x1, #0xcdd
  40eb60:	mov	w2, #0x5                   	// #5
  40eb64:	mov	x0, xzr
  40eb68:	bl	4048b0 <dcgettext@plt>
  40eb6c:	mov	x2, x0
  40eb70:	mov	w0, #0x2                   	// #2
  40eb74:	mov	w1, wzr
  40eb78:	bl	403f60 <error@plt>
  40eb7c:	bl	404560 <abort@plt>
  40eb80:	stp	x29, x30, [sp, #-16]!
  40eb84:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40eb88:	add	x1, x1, #0xd03
  40eb8c:	mov	w2, #0x5                   	// #5
  40eb90:	mov	x0, xzr
  40eb94:	mov	x29, sp
  40eb98:	bl	4048b0 <dcgettext@plt>
  40eb9c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  40eba0:	mov	x3, x0
  40eba4:	add	x2, x2, #0x274
  40eba8:	mov	w0, wzr
  40ebac:	mov	w1, wzr
  40ebb0:	bl	403f60 <error@plt>
  40ebb4:	bl	40eb40 <wcrtomb@plt+0xa050>
  40ebb8:	stp	x29, x30, [sp, #-48]!
  40ebbc:	str	x21, [sp, #16]
  40ebc0:	stp	x20, x19, [sp, #32]
  40ebc4:	mov	x29, sp
  40ebc8:	mov	w19, w1
  40ebcc:	mov	x20, x0
  40ebd0:	bl	403f00 <strlen@plt>
  40ebd4:	add	x0, x0, #0x10
  40ebd8:	bl	44a010 <argp_parse@@Base+0xf964>
  40ebdc:	mov	x21, x0
  40ebe0:	str	xzr, [x0]
  40ebe4:	str	w19, [x0, #8]
  40ebe8:	add	x0, x0, #0xc
  40ebec:	mov	x1, x20
  40ebf0:	bl	4047f0 <strcpy@plt>
  40ebf4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ebf8:	add	x8, x8, #0x3d0
  40ebfc:	ldr	x9, [x8], #8
  40ec00:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ec04:	cmp	x9, #0x0
  40ec08:	csel	x8, x8, x9, eq  // eq = none
  40ec0c:	str	x21, [x8]
  40ec10:	str	x21, [x10, #976]
  40ec14:	ldp	x20, x19, [sp, #32]
  40ec18:	ldr	x21, [sp, #16]
  40ec1c:	ldp	x29, x30, [sp], #48
  40ec20:	ret
  40ec24:	stp	x29, x30, [sp, #-96]!
  40ec28:	stp	x28, x27, [sp, #16]
  40ec2c:	stp	x26, x25, [sp, #32]
  40ec30:	stp	x24, x23, [sp, #48]
  40ec34:	stp	x22, x21, [sp, #64]
  40ec38:	stp	x20, x19, [sp, #80]
  40ec3c:	ldr	x8, [x0, #416]
  40ec40:	mov	x29, sp
  40ec44:	cbnz	x8, 40edd0 <wcrtomb@plt+0xa2e0>
  40ec48:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ec4c:	ldr	x26, [x8, #984]
  40ec50:	mov	x19, x0
  40ec54:	cbz	x26, 40edc8 <wcrtomb@plt+0xa2d8>
  40ec58:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x18e3c>
  40ec5c:	adrp	x25, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40ec60:	mov	x27, xzr
  40ec64:	mov	x28, xzr
  40ec68:	add	x20, x20, #0xedb
  40ec6c:	add	x25, x25, #0x678
  40ec70:	b	40ec84 <wcrtomb@plt+0xa194>
  40ec74:	mov	x0, x22
  40ec78:	bl	42cbf8 <wcrtomb@plt+0x28108>
  40ec7c:	ldr	x26, [x26]
  40ec80:	cbz	x26, 40edcc <wcrtomb@plt+0xa2dc>
  40ec84:	ldr	w0, [x19, #408]
  40ec88:	add	x22, x26, #0xc
  40ec8c:	mov	x1, x22
  40ec90:	mov	w2, wzr
  40ec94:	mov	w3, wzr
  40ec98:	bl	404990 <faccessat@plt>
  40ec9c:	cbnz	w0, 40ec7c <wcrtomb@plt+0xa18c>
  40eca0:	mov	x0, x19
  40eca4:	mov	x1, x22
  40eca8:	mov	w2, wzr
  40ecac:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  40ecb0:	cmn	w0, #0x1
  40ecb4:	b.eq	40ec74 <wcrtomb@plt+0xa184>  // b.none
  40ecb8:	mov	x1, x20
  40ecbc:	mov	w23, w0
  40ecc0:	bl	404330 <fdopen@plt>
  40ecc4:	cbz	x0, 40ed64 <wcrtomb@plt+0xa274>
  40ecc8:	mov	x24, x0
  40eccc:	bl	43c3f8 <argp_parse@@Base+0x1d4c>
  40ecd0:	ldr	x8, [x25]
  40ecd4:	mov	x23, x0
  40ecd8:	mov	x21, x25
  40ecdc:	cbz	x8, 40ecf8 <wcrtomb@plt+0xa208>
  40ece0:	mov	x0, x8
  40ece4:	mov	x1, x22
  40ece8:	bl	404610 <strcmp@plt>
  40ecec:	cbz	w0, 40ecf8 <wcrtomb@plt+0xa208>
  40ecf0:	ldr	x8, [x21, #40]!
  40ecf4:	cbnz	x8, 40ece0 <wcrtomb@plt+0xa1f0>
  40ecf8:	ldp	x8, x5, [x21, #24]
  40ecfc:	cbz	x8, 40ed10 <wcrtomb@plt+0xa220>
  40ed00:	mov	x0, x5
  40ed04:	blr	x8
  40ed08:	mov	x5, x0
  40ed0c:	str	x0, [x21, #32]
  40ed10:	ldr	x0, [x21, #16]
  40ed14:	mov	w3, #0x50000000            	// #1342177280
  40ed18:	mov	w4, #0xa                   	// #10
  40ed1c:	mov	x1, x23
  40ed20:	mov	x2, x24
  40ed24:	bl	43cc7c <argp_parse@@Base+0x25d0>
  40ed28:	cbnz	w0, 40edec <wcrtomb@plt+0xa2fc>
  40ed2c:	mov	x0, x24
  40ed30:	bl	4041a0 <fclose@plt>
  40ed34:	mov	w0, #0x20                  	// #32
  40ed38:	bl	44a010 <argp_parse@@Base+0xf964>
  40ed3c:	str	x23, [x0, #24]
  40ed40:	ldr	w8, [x26, #8]
  40ed44:	cbz	w8, 40ed4c <wcrtomb@plt+0xa25c>
  40ed48:	ldr	w8, [x21, #8]
  40ed4c:	str	w8, [x0, #16]
  40ed50:	stp	xzr, x28, [x0]
  40ed54:	cbz	x28, 40edbc <wcrtomb@plt+0xa2cc>
  40ed58:	str	x0, [x28]
  40ed5c:	mov	x28, x0
  40ed60:	b	40ec7c <wcrtomb@plt+0xa18c>
  40ed64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ed68:	ldr	x8, [x8, #4000]
  40ed6c:	cbz	x8, 40ed74 <wcrtomb@plt+0xa284>
  40ed70:	blr	x8
  40ed74:	bl	4049c0 <__errno_location@plt>
  40ed78:	ldr	w24, [x0]
  40ed7c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40ed80:	mov	w2, #0x5                   	// #5
  40ed84:	mov	x0, xzr
  40ed88:	add	x1, x1, #0xd14
  40ed8c:	bl	4048b0 <dcgettext@plt>
  40ed90:	mov	x2, x0
  40ed94:	mov	w0, wzr
  40ed98:	mov	w1, w24
  40ed9c:	mov	x3, x22
  40eda0:	bl	403f60 <error@plt>
  40eda4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40eda8:	mov	w9, #0x2                   	// #2
  40edac:	mov	w0, w23
  40edb0:	str	w9, [x8, #2352]
  40edb4:	bl	4044d0 <close@plt>
  40edb8:	b	40ec7c <wcrtomb@plt+0xa18c>
  40edbc:	mov	x28, x0
  40edc0:	mov	x27, x0
  40edc4:	b	40ec7c <wcrtomb@plt+0xa18c>
  40edc8:	mov	x27, xzr
  40edcc:	str	x27, [x19, #416]
  40edd0:	ldp	x20, x19, [sp, #80]
  40edd4:	ldp	x22, x21, [sp, #64]
  40edd8:	ldp	x24, x23, [sp, #48]
  40eddc:	ldp	x26, x25, [sp, #32]
  40ede0:	ldp	x28, x27, [sp, #16]
  40ede4:	ldp	x29, x30, [sp], #96
  40ede8:	ret
  40edec:	bl	4049c0 <__errno_location@plt>
  40edf0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40edf4:	ldr	x8, [x8, #4000]
  40edf8:	ldr	w19, [x0]
  40edfc:	cbz	x8, 40ee04 <wcrtomb@plt+0xa314>
  40ee00:	blr	x8
  40ee04:	mov	x0, x22
  40ee08:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40ee0c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  40ee10:	mov	x3, x0
  40ee14:	add	x2, x2, #0x274
  40ee18:	mov	w0, wzr
  40ee1c:	mov	w1, w19
  40ee20:	bl	403f60 <error@plt>
  40ee24:	bl	40eb40 <wcrtomb@plt+0xa050>
  40ee28:	stp	x29, x30, [sp, #-48]!
  40ee2c:	stp	x20, x19, [sp, #32]
  40ee30:	ldr	x20, [x0, #416]
  40ee34:	mov	x19, x0
  40ee38:	str	x21, [sp, #16]
  40ee3c:	mov	x29, sp
  40ee40:	cbz	x20, 40ee60 <wcrtomb@plt+0xa370>
  40ee44:	ldr	x0, [x20, #24]
  40ee48:	ldr	x21, [x20]
  40ee4c:	bl	43c400 <argp_parse@@Base+0x1d54>
  40ee50:	mov	x0, x20
  40ee54:	bl	4046b0 <free@plt>
  40ee58:	mov	x20, x21
  40ee5c:	cbnz	x21, 40ee44 <wcrtomb@plt+0xa354>
  40ee60:	str	xzr, [x19, #416]
  40ee64:	ldp	x20, x19, [sp, #32]
  40ee68:	ldr	x21, [sp, #16]
  40ee6c:	ldp	x29, x30, [sp], #48
  40ee70:	ret
  40ee74:	stp	x29, x30, [sp, #-64]!
  40ee78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ee7c:	ldr	x8, [x8, #3056]
  40ee80:	stp	x22, x21, [sp, #32]
  40ee84:	mov	x21, x0
  40ee88:	stp	x20, x19, [sp, #48]
  40ee8c:	mov	x20, x1
  40ee90:	mov	x0, x8
  40ee94:	mov	x1, x21
  40ee98:	stp	x24, x23, [sp, #16]
  40ee9c:	mov	x29, sp
  40eea0:	bl	43c684 <argp_parse@@Base+0x1fd8>
  40eea4:	tbz	w0, #0, 40eeb0 <wcrtomb@plt+0xa3c0>
  40eea8:	mov	w20, #0x1                   	// #1
  40eeac:	b	40ef6c <wcrtomb@plt+0xa47c>
  40eeb0:	cbz	x20, 40ef6c <wcrtomb@plt+0xa47c>
  40eeb4:	mov	w23, wzr
  40eeb8:	mov	x19, xzr
  40eebc:	mov	x22, xzr
  40eec0:	ldr	x24, [x20, #416]
  40eec4:	cbnz	x24, 40eef0 <wcrtomb@plt+0xa400>
  40eec8:	ldr	x20, [x20, #392]
  40eecc:	mov	w23, #0x2                   	// #2
  40eed0:	cbnz	x20, 40eec0 <wcrtomb@plt+0xa3d0>
  40eed4:	b	40ef64 <wcrtomb@plt+0xa474>
  40eed8:	ldr	x0, [x24, #24]
  40eedc:	mov	x1, x19
  40eee0:	bl	43c684 <argp_parse@@Base+0x1fd8>
  40eee4:	tbnz	w0, #0, 40ef60 <wcrtomb@plt+0xa470>
  40eee8:	ldr	x24, [x24]
  40eeec:	cbz	x24, 40eec8 <wcrtomb@plt+0xa3d8>
  40eef0:	ldr	w8, [x24, #16]
  40eef4:	tst	w8, w23
  40eef8:	b.ne	40eee8 <wcrtomb@plt+0xa3f8>  // b.any
  40eefc:	ldr	x0, [x24, #24]
  40ef00:	mov	x1, x21
  40ef04:	bl	43c684 <argp_parse@@Base+0x1fd8>
  40ef08:	tbnz	w0, #0, 40ef60 <wcrtomb@plt+0xa470>
  40ef0c:	cbnz	x22, 40ef3c <wcrtomb@plt+0xa44c>
  40ef10:	ldrb	w8, [x21]
  40ef14:	mov	x22, x21
  40ef18:	cmp	w8, #0x2e
  40ef1c:	b.ne	40ef3c <wcrtomb@plt+0xa44c>  // b.any
  40ef20:	mov	x22, x21
  40ef24:	ldrb	w8, [x22, #1]
  40ef28:	cmp	w8, #0x2f
  40ef2c:	b.ne	40ef3c <wcrtomb@plt+0xa44c>  // b.any
  40ef30:	ldrb	w8, [x22, #2]!
  40ef34:	cmp	w8, #0x2e
  40ef38:	b.eq	40ef24 <wcrtomb@plt+0xa434>  // b.none
  40ef3c:	ldr	x0, [x24, #24]
  40ef40:	mov	x1, x22
  40ef44:	bl	43c684 <argp_parse@@Base+0x1fd8>
  40ef48:	tbnz	w0, #0, 40ef60 <wcrtomb@plt+0xa470>
  40ef4c:	cbnz	x19, 40eed8 <wcrtomb@plt+0xa3e8>
  40ef50:	mov	x0, x21
  40ef54:	bl	43bfb0 <argp_parse@@Base+0x1904>
  40ef58:	mov	x19, x0
  40ef5c:	b	40eed8 <wcrtomb@plt+0xa3e8>
  40ef60:	mov	w20, #0x1                   	// #1
  40ef64:	mov	x0, x19
  40ef68:	bl	4046b0 <free@plt>
  40ef6c:	mov	w0, w20
  40ef70:	ldp	x20, x19, [sp, #48]
  40ef74:	ldp	x22, x21, [sp, #32]
  40ef78:	ldp	x24, x23, [sp, #16]
  40ef7c:	ldp	x29, x30, [sp], #64
  40ef80:	ret
  40ef84:	stp	x29, x30, [sp, #-64]!
  40ef88:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40ef8c:	stp	x20, x19, [sp, #48]
  40ef90:	ldr	x19, [x8, #1656]
  40ef94:	str	x23, [sp, #16]
  40ef98:	stp	x22, x21, [sp, #32]
  40ef9c:	mov	x29, sp
  40efa0:	cbz	x19, 40f000 <wcrtomb@plt+0xa510>
  40efa4:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40efa8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40efac:	add	x21, x21, #0x6a0
  40efb0:	add	x22, x22, #0x3d0
  40efb4:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40efb8:	mov	x0, x19
  40efbc:	bl	403f00 <strlen@plt>
  40efc0:	add	x0, x0, #0x10
  40efc4:	bl	44a010 <argp_parse@@Base+0xf964>
  40efc8:	mov	x20, x0
  40efcc:	str	xzr, [x0]
  40efd0:	str	wzr, [x0, #8]
  40efd4:	add	x0, x0, #0xc
  40efd8:	mov	x1, x19
  40efdc:	bl	4047f0 <strcpy@plt>
  40efe0:	mov	x8, x22
  40efe4:	ldr	x9, [x8], #8
  40efe8:	cmp	x9, #0x0
  40efec:	csel	x8, x8, x9, eq  // eq = none
  40eff0:	str	x20, [x8]
  40eff4:	str	x20, [x23, #976]
  40eff8:	ldr	x19, [x21], #40
  40effc:	cbnz	x19, 40efb8 <wcrtomb@plt+0xa4c8>
  40f000:	ldp	x20, x19, [sp, #48]
  40f004:	ldp	x22, x21, [sp, #32]
  40f008:	ldr	x23, [sp, #16]
  40f00c:	ldp	x29, x30, [sp], #64
  40f010:	ret
  40f014:	sub	sp, sp, #0x120
  40f018:	mov	x8, x1
  40f01c:	stp	x20, x19, [sp, #272]
  40f020:	mov	w19, w2
  40f024:	mov	x20, x0
  40f028:	add	x1, sp, #0x8
  40f02c:	mov	w2, #0x844                 	// #2116
  40f030:	mov	x0, x8
  40f034:	stp	x29, x30, [sp, #240]
  40f038:	stp	x28, x21, [sp, #256]
  40f03c:	add	x29, sp, #0xf0
  40f040:	bl	42f7d0 <wcrtomb@plt+0x2ace0>
  40f044:	cbnz	w0, 40f080 <wcrtomb@plt+0xa590>
  40f048:	ldr	x8, [sp, #8]
  40f04c:	cbz	x8, 40f078 <wcrtomb@plt+0xa588>
  40f050:	mov	x21, xzr
  40f054:	ldr	x8, [sp, #16]
  40f058:	mov	x0, x20
  40f05c:	mov	w2, w19
  40f060:	ldr	x1, [x8, x21, lsl #3]
  40f064:	bl	43c928 <argp_parse@@Base+0x227c>
  40f068:	ldr	x8, [sp, #8]
  40f06c:	add	x21, x21, #0x1
  40f070:	cmp	x21, x8
  40f074:	b.cc	40f054 <wcrtomb@plt+0xa564>  // b.lo, b.ul, b.last
  40f078:	add	x0, sp, #0x8
  40f07c:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  40f080:	ldp	x20, x19, [sp, #272]
  40f084:	ldp	x28, x21, [sp, #256]
  40f088:	ldp	x29, x30, [sp, #240]
  40f08c:	add	sp, sp, #0x120
  40f090:	ret
  40f094:	stp	x29, x30, [sp, #-48]!
  40f098:	str	x21, [sp, #16]
  40f09c:	stp	x20, x19, [sp, #32]
  40f0a0:	mov	x29, sp
  40f0a4:	mov	w19, w2
  40f0a8:	mov	x21, x1
  40f0ac:	mov	x20, x0
  40f0b0:	bl	404640 <__ctype_b_loc@plt>
  40f0b4:	ldr	x9, [x0]
  40f0b8:	ldrb	w8, [x21], #1
  40f0bc:	ldrh	w10, [x9, x8, lsl #1]
  40f0c0:	tbnz	w10, #13, 40f0b8 <wcrtomb@plt+0xa5c8>
  40f0c4:	cbz	w8, 40f100 <wcrtomb@plt+0xa610>
  40f0c8:	cmp	w8, #0x23
  40f0cc:	b.eq	40f100 <wcrtomb@plt+0xa610>  // b.none
  40f0d0:	cmp	w8, #0x5c
  40f0d4:	sub	x1, x21, #0x1
  40f0d8:	b.ne	40f0e8 <wcrtomb@plt+0xa5f8>  // b.any
  40f0dc:	ldrb	w8, [x21]
  40f0e0:	cmp	w8, #0x23
  40f0e4:	csel	x1, x21, x1, eq  // eq = none
  40f0e8:	mov	x0, x20
  40f0ec:	mov	w2, w19
  40f0f0:	ldp	x20, x19, [sp, #32]
  40f0f4:	ldr	x21, [sp, #16]
  40f0f8:	ldp	x29, x30, [sp], #48
  40f0fc:	b	43c928 <argp_parse@@Base+0x227c>
  40f100:	ldp	x20, x19, [sp, #32]
  40f104:	ldr	x21, [sp, #16]
  40f108:	ldp	x29, x30, [sp], #48
  40f10c:	ret
  40f110:	stp	x29, x30, [sp, #-48]!
  40f114:	str	x21, [sp, #16]
  40f118:	stp	x20, x19, [sp, #32]
  40f11c:	mov	x29, sp
  40f120:	mov	w21, w2
  40f124:	mov	x19, x1
  40f128:	mov	x20, x0
  40f12c:	bl	404640 <__ctype_b_loc@plt>
  40f130:	ldr	x9, [x0]
  40f134:	ldrb	w8, [x19], #1
  40f138:	ldrh	w10, [x9, x8, lsl #1]
  40f13c:	tbnz	w10, #13, 40f134 <wcrtomb@plt+0xa644>
  40f140:	cbz	w8, 40f154 <wcrtomb@plt+0xa664>
  40f144:	cmp	w8, #0x21
  40f148:	b.eq	40f164 <wcrtomb@plt+0xa674>  // b.none
  40f14c:	cmp	w8, #0x23
  40f150:	b.ne	40f178 <wcrtomb@plt+0xa688>  // b.any
  40f154:	ldp	x20, x19, [sp, #32]
  40f158:	ldr	x21, [sp, #16]
  40f15c:	ldp	x29, x30, [sp], #48
  40f160:	ret
  40f164:	ldrb	w8, [x19]
  40f168:	cmp	w8, #0x21
  40f16c:	b.ne	40f180 <wcrtomb@plt+0xa690>  // b.any
  40f170:	add	x19, x19, #0x1
  40f174:	b	40f184 <wcrtomb@plt+0xa694>
  40f178:	sub	x19, x19, #0x1
  40f17c:	b	40f184 <wcrtomb@plt+0xa694>
  40f180:	orr	w21, w21, #0x20000000
  40f184:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f188:	add	x1, x1, #0xd51
  40f18c:	mov	w2, #0x3                   	// #3
  40f190:	mov	x0, x19
  40f194:	bl	4042c0 <strncmp@plt>
  40f198:	and	w9, w21, #0xe7ffffff
  40f19c:	add	x8, x19, #0x3
  40f1a0:	cmp	w0, #0x0
  40f1a4:	orr	w9, w9, #0x8000000
  40f1a8:	csel	w2, w9, w21, eq  // eq = none
  40f1ac:	csel	x1, x8, x19, eq  // eq = none
  40f1b0:	mov	x0, x20
  40f1b4:	ldp	x20, x19, [sp, #32]
  40f1b8:	ldr	x21, [sp, #16]
  40f1bc:	ldp	x29, x30, [sp], #48
  40f1c0:	b	43c928 <argp_parse@@Base+0x227c>
  40f1c4:	stp	x29, x30, [sp, #-64]!
  40f1c8:	stp	x24, x23, [sp, #16]
  40f1cc:	stp	x22, x21, [sp, #32]
  40f1d0:	stp	x20, x19, [sp, #48]
  40f1d4:	mov	x29, sp
  40f1d8:	mov	x19, x3
  40f1dc:	mov	w21, w2
  40f1e0:	mov	x22, x1
  40f1e4:	mov	x20, x0
  40f1e8:	bl	404640 <__ctype_b_loc@plt>
  40f1ec:	ldr	x23, [x0]
  40f1f0:	sub	x24, x22, #0x2
  40f1f4:	ldrb	w8, [x24, #2]
  40f1f8:	add	x24, x24, #0x1
  40f1fc:	ldrh	w9, [x23, x8, lsl #1]
  40f200:	tbnz	w9, #13, 40f1f4 <wcrtomb@plt+0xa704>
  40f204:	cbz	w8, 40f210 <wcrtomb@plt+0xa720>
  40f208:	cmp	w8, #0x23
  40f20c:	b.ne	40f224 <wcrtomb@plt+0xa734>  // b.any
  40f210:	ldp	x20, x19, [sp, #48]
  40f214:	ldp	x22, x21, [sp, #32]
  40f218:	ldp	x24, x23, [sp, #16]
  40f21c:	ldp	x29, x30, [sp], #64
  40f220:	ret
  40f224:	add	x22, x24, #0x1
  40f228:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f22c:	add	x1, x1, #0xd55
  40f230:	mov	w2, #0x7                   	// #7
  40f234:	mov	x0, x22
  40f238:	bl	4042c0 <strncmp@plt>
  40f23c:	cbz	w0, 40f2c8 <wcrtomb@plt+0xa7d8>
  40f240:	mov	x0, x22
  40f244:	bl	403f00 <strlen@plt>
  40f248:	ldrb	w8, [x24, x0]
  40f24c:	cmp	w8, #0x2f
  40f250:	b.ne	40f28c <wcrtomb@plt+0xa79c>  // b.any
  40f254:	sub	x23, x0, #0x1
  40f258:	bl	44a010 <argp_parse@@Base+0xf964>
  40f25c:	mov	x1, x22
  40f260:	mov	x2, x23
  40f264:	mov	x24, x0
  40f268:	bl	403e80 <memcpy@plt>
  40f26c:	mov	x0, x20
  40f270:	mov	x1, x24
  40f274:	strb	wzr, [x24, x23]
  40f278:	bl	43c1e4 <argp_parse@@Base+0x1b38>
  40f27c:	mov	w8, #0x8                   	// #8
  40f280:	movk	w8, #0x400, lsl #16
  40f284:	orr	w21, w21, w8
  40f288:	mov	x22, x24
  40f28c:	ldr	w8, [x19]
  40f290:	mov	w9, #0x8000000             	// #134217728
  40f294:	mov	w10, #0xf7ffffff            	// #-134217729
  40f298:	mov	x0, x20
  40f29c:	cmp	w8, w9
  40f2a0:	mov	w9, #0xefffffff            	// #-268435457
  40f2a4:	csel	w9, w9, w10, eq  // eq = none
  40f2a8:	and	w9, w9, w21
  40f2ac:	mov	x1, x22
  40f2b0:	ldp	x20, x19, [sp, #48]
  40f2b4:	ldp	x22, x21, [sp, #32]
  40f2b8:	ldp	x24, x23, [sp, #16]
  40f2bc:	orr	w2, w9, w8
  40f2c0:	ldp	x29, x30, [sp], #64
  40f2c4:	b	43c928 <argp_parse@@Base+0x227c>
  40f2c8:	add	x20, x24, #0x7
  40f2cc:	ldrb	w8, [x20, #1]!
  40f2d0:	ldrh	w8, [x23, x8, lsl #1]
  40f2d4:	tbnz	w8, #13, 40f2cc <wcrtomb@plt+0xa7dc>
  40f2d8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f2dc:	add	x1, x1, #0xd5d
  40f2e0:	mov	x0, x20
  40f2e4:	bl	404610 <strcmp@plt>
  40f2e8:	cbz	w0, 40f308 <wcrtomb@plt+0xa818>
  40f2ec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f2f0:	add	x1, x1, #0xd64
  40f2f4:	mov	x0, x20
  40f2f8:	bl	404610 <strcmp@plt>
  40f2fc:	cbnz	w0, 40f210 <wcrtomb@plt+0xa720>
  40f300:	mov	w8, #0x10000000            	// #268435456
  40f304:	b	40f30c <wcrtomb@plt+0xa81c>
  40f308:	mov	w8, #0x8000000             	// #134217728
  40f30c:	str	w8, [x19]
  40f310:	b	40f210 <wcrtomb@plt+0xa720>
  40f314:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f318:	add	x8, x8, #0x3c8
  40f31c:	cmp	x0, #0x0
  40f320:	csel	x0, x8, x0, eq  // eq = none
  40f324:	mov	w8, #0x8000000             	// #134217728
  40f328:	str	w8, [x0]
  40f32c:	ret
  40f330:	stp	x29, x30, [sp, #-32]!
  40f334:	stp	x20, x19, [sp, #16]
  40f338:	mov	x29, sp
  40f33c:	bl	403fe0 <geteuid@plt>
  40f340:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f344:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f348:	ldr	w9, [x20, #3604]
  40f34c:	ldr	w10, [x8, #3972]
  40f350:	cmp	w0, #0x0
  40f354:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f358:	add	x19, x19, #0x3e0
  40f35c:	cset	w11, eq  // eq = none
  40f360:	cinc	w9, w9, eq  // eq = none
  40f364:	cinc	w10, w10, eq  // eq = none
  40f368:	mov	w0, wzr
  40f36c:	strb	w11, [x19]
  40f370:	str	w9, [x20, #3604]
  40f374:	str	w10, [x8, #3972]
  40f378:	bl	404970 <umask@plt>
  40f37c:	ldr	w9, [x20, #3604]
  40f380:	mov	w8, wzr
  40f384:	str	w0, [x19, #8]
  40f388:	cmp	w9, #0x0
  40f38c:	b.gt	40f39c <wcrtomb@plt+0xa8ac>
  40f390:	bl	404970 <umask@plt>
  40f394:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f398:	ldr	w8, [x8, #1000]
  40f39c:	ldp	x20, x19, [sp, #16]
  40f3a0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f3a4:	str	w8, [x9, #1004]
  40f3a8:	ldp	x29, x30, [sp], #32
  40f3ac:	ret
  40f3b0:	stp	x29, x30, [sp, #-80]!
  40f3b4:	stp	x22, x21, [sp, #48]
  40f3b8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f3bc:	stp	x20, x19, [sp, #64]
  40f3c0:	ldr	x19, [x22, #1008]
  40f3c4:	str	x25, [sp, #16]
  40f3c8:	stp	x24, x23, [sp, #32]
  40f3cc:	mov	x29, sp
  40f3d0:	cbz	x19, 40f458 <wcrtomb@plt+0xa968>
  40f3d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f3d8:	ldr	w25, [x8, #2992]
  40f3dc:	mov	x20, x0
  40f3e0:	mov	x23, xzr
  40f3e4:	b	40f3f4 <wcrtomb@plt+0xa904>
  40f3e8:	mov	x23, x19
  40f3ec:	mov	x19, x24
  40f3f0:	cbz	x24, 40f458 <wcrtomb@plt+0xa968>
  40f3f4:	ldr	w8, [x19, #92]
  40f3f8:	ldr	x24, [x19]
  40f3fc:	cmp	w25, w8
  40f400:	b.ne	40f3e8 <wcrtomb@plt+0xa8f8>  // b.any
  40f404:	ldr	x21, [x19, #160]
  40f408:	mov	x1, x20
  40f40c:	mov	x0, x21
  40f410:	bl	404610 <strcmp@plt>
  40f414:	cbnz	w0, 40f3e8 <wcrtomb@plt+0xa8f8>
  40f418:	mov	x0, x21
  40f41c:	bl	4046b0 <free@plt>
  40f420:	ldp	x1, x0, [x19, #136]
  40f424:	bl	4128b8 <wcrtomb@plt+0xddc8>
  40f428:	ldr	x0, [x19, #96]
  40f42c:	bl	4046b0 <free@plt>
  40f430:	ldr	x0, [x19, #104]
  40f434:	bl	4046b0 <free@plt>
  40f438:	ldr	x0, [x19, #120]
  40f43c:	bl	4046b0 <free@plt>
  40f440:	mov	x0, x19
  40f444:	bl	4046b0 <free@plt>
  40f448:	cbz	x23, 40f454 <wcrtomb@plt+0xa964>
  40f44c:	str	x24, [x23]
  40f450:	b	40f458 <wcrtomb@plt+0xa968>
  40f454:	str	x24, [x22, #1008]
  40f458:	ldp	x20, x19, [sp, #64]
  40f45c:	ldp	x22, x21, [sp, #48]
  40f460:	ldp	x24, x23, [sp, #32]
  40f464:	ldr	x25, [sp, #16]
  40f468:	ldp	x29, x30, [sp], #80
  40f46c:	ret
  40f470:	sub	sp, sp, #0xe0
  40f474:	stp	x29, x30, [sp, #128]
  40f478:	stp	x26, x25, [sp, #160]
  40f47c:	stp	x24, x23, [sp, #176]
  40f480:	stp	x22, x21, [sp, #192]
  40f484:	stp	x20, x19, [sp, #208]
  40f488:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f48c:	ldr	x0, [x20, #2968]
  40f490:	adrp	x9, 40f000 <wcrtomb@plt+0xa510>
  40f494:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f498:	add	x9, x9, #0x97c
  40f49c:	str	x27, [sp, #144]
  40f4a0:	add	x29, sp, #0x80
  40f4a4:	str	x9, [x8, #2936]
  40f4a8:	bl	405640 <wcrtomb@plt+0xb50>
  40f4ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f4b0:	ldrb	w8, [x8, #3944]
  40f4b4:	cbnz	w8, 40f510 <wcrtomb@plt+0xaa20>
  40f4b8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f4bc:	ldr	x0, [x19, #3088]
  40f4c0:	bl	41faf0 <wcrtomb@plt+0x1b000>
  40f4c4:	tbz	w0, #0, 40f510 <wcrtomb@plt+0xaa20>
  40f4c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f4cc:	ldr	x8, [x8, #4000]
  40f4d0:	cbz	x8, 40f4d8 <wcrtomb@plt+0xa9e8>
  40f4d4:	blr	x8
  40f4d8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f4dc:	add	x1, x1, #0xdee
  40f4e0:	mov	w2, #0x5                   	// #5
  40f4e4:	mov	x0, xzr
  40f4e8:	bl	4048b0 <dcgettext@plt>
  40f4ec:	ldr	x8, [x19, #3088]
  40f4f0:	mov	x19, x0
  40f4f4:	mov	x0, x8
  40f4f8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40f4fc:	mov	x3, x0
  40f500:	mov	w0, wzr
  40f504:	mov	w1, wzr
  40f508:	mov	x2, x19
  40f50c:	b	40f68c <wcrtomb@plt+0xab9c>
  40f510:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f514:	ldr	x1, [x22, #3096]
  40f518:	ldrb	w8, [x1]
  40f51c:	cbz	w8, 40f69c <wcrtomb@plt+0xabac>
  40f520:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f524:	ldrb	w8, [x8, #3584]
  40f528:	cbz	w8, 40f53c <wcrtomb@plt+0xaa4c>
  40f52c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f530:	add	x0, x0, #0xe0c
  40f534:	bl	424888 <wcrtomb@plt+0x1fd98>
  40f538:	cbz	w0, 40f69c <wcrtomb@plt+0xabac>
  40f53c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f540:	ldr	w8, [x8, #3636]
  40f544:	cbz	w8, 40f55c <wcrtomb@plt+0xaa6c>
  40f548:	ldr	x1, [x20, #2968]
  40f54c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f550:	add	x0, x0, #0xc10
  40f554:	mov	x2, #0xffffffffffffffff    	// #-1
  40f558:	bl	419a74 <wcrtomb@plt+0x14f84>
  40f55c:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f560:	ldrb	w8, [x27, #3960]
  40f564:	cbz	w8, 40f578 <wcrtomb@plt+0xaa88>
  40f568:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f56c:	ldrb	w8, [x23, #3749]
  40f570:	cbnz	w8, 40f5a0 <wcrtomb@plt+0xaab0>
  40f574:	b	40f5b0 <wcrtomb@plt+0xaac0>
  40f578:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f57c:	ldr	x0, [x22, #3096]
  40f580:	ldr	w19, [x8, #2992]
  40f584:	mov	w1, wzr
  40f588:	bl	40fbd4 <wcrtomb@plt+0xb0e4>
  40f58c:	mov	w0, w19
  40f590:	bl	41cd90 <wcrtomb@plt+0x182a0>
  40f594:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f598:	ldrb	w8, [x23, #3749]
  40f59c:	cbz	w8, 40f5b0 <wcrtomb@plt+0xaac0>
  40f5a0:	ldr	x0, [x22, #3096]
  40f5a4:	mov	w1, wzr
  40f5a8:	bl	41c568 <wcrtomb@plt+0x17a78>
  40f5ac:	tbz	w0, #0, 40f640 <wcrtomb@plt+0xab50>
  40f5b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f5b4:	add	x0, x0, #0xc10
  40f5b8:	bl	420448 <wcrtomb@plt+0x1b958>
  40f5bc:	tbz	w0, #0, 40f5d4 <wcrtomb@plt+0xaae4>
  40f5c0:	ldr	x19, [x22, #3096]
  40f5c4:	adrp	x26, 410000 <wcrtomb@plt+0xb510>
  40f5c8:	add	x26, x26, #0x690
  40f5cc:	mov	w21, #0x53                  	// #83
  40f5d0:	b	40f844 <wcrtomb@plt+0xad54>
  40f5d4:	ldr	x8, [x20, #2968]
  40f5d8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f5dc:	ldr	x19, [x22, #3096]
  40f5e0:	ldrb	w25, [x9, #3617]
  40f5e4:	ldrb	w20, [x8, #156]
  40f5e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f5ec:	ldr	x24, [x8, #3608]
  40f5f0:	cmp	w20, #0x56
  40f5f4:	b.hi	40f728 <wcrtomb@plt+0xac38>  // b.pmore
  40f5f8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f5fc:	add	x9, x9, #0xd69
  40f600:	adrp	x8, 410000 <wcrtomb@plt+0xb510>
  40f604:	adrp	x26, 410000 <wcrtomb@plt+0xb510>
  40f608:	adr	x10, 40f624 <wcrtomb@plt+0xab34>
  40f60c:	ldrb	w11, [x9, x20]
  40f610:	add	x10, x10, x11, lsl #2
  40f614:	add	x8, x8, #0xfa0
  40f618:	add	x26, x26, #0x690
  40f61c:	mov	w21, #0x53                  	// #83
  40f620:	br	x10
  40f624:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f628:	ldrb	w8, [x8, #3104]
  40f62c:	cbnz	w8, 40f6d0 <wcrtomb@plt+0xabe0>
  40f630:	adrp	x26, 410000 <wcrtomb@plt+0xb510>
  40f634:	add	x26, x26, #0x690
  40f638:	mov	w21, w20
  40f63c:	b	40f844 <wcrtomb@plt+0xad54>
  40f640:	bl	4049c0 <__errno_location@plt>
  40f644:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f648:	ldr	x8, [x8, #4000]
  40f64c:	ldr	w19, [x0]
  40f650:	cbz	x8, 40f658 <wcrtomb@plt+0xab68>
  40f654:	blr	x8
  40f658:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f65c:	add	x1, x1, #0xe14
  40f660:	mov	w2, #0x5                   	// #5
  40f664:	mov	x0, xzr
  40f668:	bl	4048b0 <dcgettext@plt>
  40f66c:	ldr	x8, [x22, #3096]
  40f670:	mov	x20, x0
  40f674:	mov	x0, x8
  40f678:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40f67c:	mov	x3, x0
  40f680:	mov	w0, wzr
  40f684:	mov	w1, w19
  40f688:	mov	x2, x20
  40f68c:	bl	403f60 <error@plt>
  40f690:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f694:	mov	w9, #0x2                   	// #2
  40f698:	str	w9, [x8, #2352]
  40f69c:	ldp	x20, x19, [sp, #208]
  40f6a0:	ldp	x22, x21, [sp, #192]
  40f6a4:	ldp	x24, x23, [sp, #176]
  40f6a8:	ldp	x26, x25, [sp, #160]
  40f6ac:	ldr	x27, [sp, #144]
  40f6b0:	ldp	x29, x30, [sp, #128]
  40f6b4:	add	sp, sp, #0xe0
  40f6b8:	b	4198b8 <wcrtomb@plt+0x14dc8>
  40f6bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f6c0:	ldrb	w8, [x8, #3464]
  40f6c4:	cbz	w8, 40f6d0 <wcrtomb@plt+0xabe0>
  40f6c8:	mov	w8, #0x1                   	// #1
  40f6cc:	strb	w8, [x27, #3960]
  40f6d0:	adrp	x8, 410000 <wcrtomb@plt+0xb510>
  40f6d4:	add	x8, x8, #0xbf4
  40f6d8:	b	40f834 <wcrtomb@plt+0xad44>
  40f6dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f6e0:	ldr	x8, [x8, #4000]
  40f6e4:	cbz	x8, 40f6ec <wcrtomb@plt+0xabfc>
  40f6e8:	blr	x8
  40f6ec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f6f0:	add	x1, x1, #0xf0f
  40f6f4:	mov	w2, #0x5                   	// #5
  40f6f8:	mov	x0, xzr
  40f6fc:	bl	4048b0 <dcgettext@plt>
  40f700:	mov	x2, x0
  40f704:	mov	w0, wzr
  40f708:	mov	w1, wzr
  40f70c:	bl	403f60 <error@plt>
  40f710:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f714:	mov	w9, #0x2                   	// #2
  40f718:	str	w9, [x8, #2352]
  40f71c:	adrp	x8, 411000 <wcrtomb@plt+0xc510>
  40f720:	add	x8, x8, #0x494
  40f724:	b	40f834 <wcrtomb@plt+0xad44>
  40f728:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40f72c:	ldrb	w8, [x8, #3714]
  40f730:	tbz	w8, #0, 40f77c <wcrtomb@plt+0xac8c>
  40f734:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f738:	ldr	x8, [x8, #4000]
  40f73c:	cbz	x8, 40f744 <wcrtomb@plt+0xac54>
  40f740:	blr	x8
  40f744:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f748:	add	x1, x1, #0xf2b
  40f74c:	mov	w2, #0x5                   	// #5
  40f750:	mov	x0, xzr
  40f754:	bl	4048b0 <dcgettext@plt>
  40f758:	mov	x21, x0
  40f75c:	mov	x0, x19
  40f760:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40f764:	mov	x3, x0
  40f768:	mov	w0, wzr
  40f76c:	mov	w1, wzr
  40f770:	mov	x2, x21
  40f774:	mov	w4, w20
  40f778:	bl	403f60 <error@plt>
  40f77c:	adrp	x8, 410000 <wcrtomb@plt+0xb510>
  40f780:	add	x8, x8, #0x690
  40f784:	b	40f834 <wcrtomb@plt+0xad44>
  40f788:	adrp	x8, 411000 <wcrtomb@plt+0xc510>
  40f78c:	add	x8, x8, #0x90
  40f790:	b	40f834 <wcrtomb@plt+0xad44>
  40f794:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f798:	ldr	w9, [x8, #3192]
  40f79c:	orr	w9, w9, #0x2000
  40f7a0:	b	40f7b0 <wcrtomb@plt+0xacc0>
  40f7a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f7a8:	ldr	w9, [x8, #3192]
  40f7ac:	orr	w9, w9, #0x6000
  40f7b0:	str	w9, [x8, #3192]
  40f7b4:	adrp	x8, 411000 <wcrtomb@plt+0xc510>
  40f7b8:	add	x8, x8, #0x2a4
  40f7bc:	b	40f834 <wcrtomb@plt+0xad44>
  40f7c0:	adrp	x8, 411000 <wcrtomb@plt+0xc510>
  40f7c4:	add	x8, x8, #0x394
  40f7c8:	b	40f834 <wcrtomb@plt+0xad44>
  40f7cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f7d0:	ldr	x8, [x8, #4000]
  40f7d4:	cbz	x8, 40f7dc <wcrtomb@plt+0xacec>
  40f7d8:	blr	x8
  40f7dc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f7e0:	add	x1, x1, #0xed3
  40f7e4:	mov	w2, #0x5                   	// #5
  40f7e8:	mov	x0, xzr
  40f7ec:	bl	4048b0 <dcgettext@plt>
  40f7f0:	ldr	x8, [x22, #3096]
  40f7f4:	mov	x21, x0
  40f7f8:	mov	x0, x8
  40f7fc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40f800:	mov	x3, x0
  40f804:	mov	w0, wzr
  40f808:	mov	w1, wzr
  40f80c:	mov	x2, x21
  40f810:	bl	403f60 <error@plt>
  40f814:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f818:	mov	w9, #0x2                   	// #2
  40f81c:	str	w9, [x8, #2352]
  40f820:	adrp	x8, 411000 <wcrtomb@plt+0xc510>
  40f824:	add	x8, x8, #0x47c
  40f828:	b	40f834 <wcrtomb@plt+0xad44>
  40f82c:	adrp	x8, 411000 <wcrtomb@plt+0xc510>
  40f830:	add	x8, x8, #0x464
  40f834:	cbnz	w25, 40f90c <wcrtomb@plt+0xae1c>
  40f838:	mov	w21, w20
  40f83c:	mov	x26, x8
  40f840:	cbnz	x24, 40f90c <wcrtomb@plt+0xae1c>
  40f844:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f848:	ldr	w8, [x8, #3744]
  40f84c:	cmp	w8, #0x6
  40f850:	b.eq	40f894 <wcrtomb@plt+0xada4>  // b.none
  40f854:	cmp	w8, #0x3
  40f858:	b.ne	40f940 <wcrtomb@plt+0xae50>  // b.any
  40f85c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f860:	ldrb	w1, [x8, #3026]
  40f864:	mov	x0, x19
  40f868:	bl	41c240 <wcrtomb@plt+0x17750>
  40f86c:	cbnz	w0, 40f940 <wcrtomb@plt+0xae50>
  40f870:	bl	4049c0 <__errno_location@plt>
  40f874:	ldr	w8, [x0]
  40f878:	orr	w8, w8, #0x2
  40f87c:	cmp	w8, #0x2
  40f880:	b.eq	40f940 <wcrtomb@plt+0xae50>  // b.none
  40f884:	mov	x0, x19
  40f888:	bl	42d6d4 <wcrtomb@plt+0x28be4>
  40f88c:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  40f890:	b	40f95c <wcrtomb@plt+0xae6c>
  40f894:	mov	x1, sp
  40f898:	mov	x0, x19
  40f89c:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  40f8a0:	cbz	w0, 40f914 <wcrtomb@plt+0xae24>
  40f8a4:	bl	4049c0 <__errno_location@plt>
  40f8a8:	ldr	w8, [x0]
  40f8ac:	cmp	w8, #0x2
  40f8b0:	b.eq	40f940 <wcrtomb@plt+0xae50>  // b.none
  40f8b4:	mov	x0, x19
  40f8b8:	bl	42d568 <wcrtomb@plt+0x28a78>
  40f8bc:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  40f8c0:	ldrb	w8, [x8, #3713]
  40f8c4:	tbz	w8, #3, 40f90c <wcrtomb@plt+0xae1c>
  40f8c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f8cc:	ldr	x8, [x8, #4000]
  40f8d0:	cbz	x8, 40f8d8 <wcrtomb@plt+0xade8>
  40f8d4:	blr	x8
  40f8d8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40f8dc:	add	x1, x1, #0xf60
  40f8e0:	mov	w2, #0x5                   	// #5
  40f8e4:	mov	x0, xzr
  40f8e8:	bl	4048b0 <dcgettext@plt>
  40f8ec:	mov	x20, x0
  40f8f0:	mov	x0, x19
  40f8f4:	bl	449144 <argp_parse@@Base+0xea98>
  40f8f8:	mov	x3, x0
  40f8fc:	mov	w0, wzr
  40f900:	mov	w1, wzr
  40f904:	mov	x2, x20
  40f908:	bl	403f60 <error@plt>
  40f90c:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  40f910:	b	40f95c <wcrtomb@plt+0xae6c>
  40f914:	ldr	w8, [sp, #16]
  40f918:	and	w8, w8, #0xf000
  40f91c:	cmp	w8, #0x4, lsl #12
  40f920:	b.eq	40f940 <wcrtomb@plt+0xae50>  // b.none
  40f924:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f928:	add	x8, x8, #0xcf8
  40f92c:	ldp	x2, x3, [sp, #88]
  40f930:	ldp	x0, x1, [x8]
  40f934:	bl	426058 <wcrtomb@plt+0x21568>
  40f938:	cmp	w0, #0x0
  40f93c:	b.le	40f8bc <wcrtomb@plt+0xadcc>
  40f940:	ldr	x0, [x22, #3096]
  40f944:	mov	w1, w21
  40f948:	blr	x26
  40f94c:	cbz	w0, 40f95c <wcrtomb@plt+0xae6c>
  40f950:	ldrb	w8, [x23, #3749]
  40f954:	cbz	w8, 40f95c <wcrtomb@plt+0xae6c>
  40f958:	bl	41c7d0 <wcrtomb@plt+0x17ce0>
  40f95c:	ldp	x20, x19, [sp, #208]
  40f960:	ldp	x22, x21, [sp, #192]
  40f964:	ldp	x24, x23, [sp, #176]
  40f968:	ldp	x26, x25, [sp, #160]
  40f96c:	ldr	x27, [sp, #144]
  40f970:	ldp	x29, x30, [sp, #128]
  40f974:	add	sp, sp, #0xe0
  40f978:	ret
  40f97c:	stp	x29, x30, [sp, #-96]!
  40f980:	stp	x28, x27, [sp, #16]
  40f984:	stp	x26, x25, [sp, #32]
  40f988:	stp	x24, x23, [sp, #48]
  40f98c:	stp	x22, x21, [sp, #64]
  40f990:	stp	x20, x19, [sp, #80]
  40f994:	mov	x29, sp
  40f998:	sub	sp, sp, #0x240
  40f99c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  40f9a0:	add	x0, x0, #0xb36
  40f9a4:	mov	w1, wzr
  40f9a8:	bl	40fbd4 <wcrtomb@plt+0xb0e4>
  40f9ac:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40f9b0:	ldr	x19, [x23, #1016]
  40f9b4:	cbz	x19, 40fba0 <wcrtomb@plt+0xb0b0>
  40f9b8:	add	x8, sp, #0x10
  40f9bc:	add	x9, x8, #0xd8
  40f9c0:	str	x9, [sp, #8]
  40f9c4:	add	x9, x8, #0xe8
  40f9c8:	add	x26, x8, #0x148
  40f9cc:	adrp	x27, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40f9d0:	str	x9, [sp]
  40f9d4:	b	40f9fc <wcrtomb@plt+0xaf0c>
  40f9d8:	ldp	x1, x0, [x19, #144]
  40f9dc:	bl	4128b8 <wcrtomb@plt+0xddc8>
  40f9e0:	ldr	x0, [x19, #104]
  40f9e4:	bl	4046b0 <free@plt>
  40f9e8:	ldr	x20, [x19]
  40f9ec:	mov	x0, x19
  40f9f0:	bl	4046b0 <free@plt>
  40f9f4:	mov	x19, x20
  40f9f8:	cbz	x20, 40fba0 <wcrtomb@plt+0xb0b0>
  40f9fc:	ldr	w0, [x19, #88]
  40fa00:	bl	41cd90 <wcrtomb@plt+0x182a0>
  40fa04:	ldr	x28, [x19, #96]
  40fa08:	cbz	x28, 40f9d8 <wcrtomb@plt+0xaee8>
  40fa0c:	mov	x21, xzr
  40fa10:	add	x20, x19, #0xa0
  40fa14:	add	x24, x19, #0x38
  40fa18:	add	x25, x19, #0x48
  40fa1c:	b	40fa30 <wcrtomb@plt+0xaf40>
  40fa20:	mov	x0, x22
  40fa24:	bl	42d6d4 <wcrtomb@plt+0x28be4>
  40fa28:	ldr	x28, [x28]
  40fa2c:	cbz	x28, 40fb84 <wcrtomb@plt+0xb094>
  40fa30:	ldr	w1, [x27, #1864]
  40fa34:	add	x22, x28, #0x8
  40fa38:	sub	x3, x29, #0x88
  40fa3c:	mov	w4, #0x100                 	// #256
  40fa40:	mov	w0, wzr
  40fa44:	mov	x2, x22
  40fa48:	bl	404ad0 <__fxstatat@plt>
  40fa4c:	cbnz	w0, 40fa28 <wcrtomb@plt+0xaf38>
  40fa50:	ldur	x8, [x29, #-136]
  40fa54:	ldr	x9, [x19, #8]
  40fa58:	cmp	x8, x9
  40fa5c:	b.ne	40fa28 <wcrtomb@plt+0xaf38>  // b.any
  40fa60:	ldur	x8, [x29, #-128]
  40fa64:	ldr	x9, [x19, #16]
  40fa68:	cmp	x8, x9
  40fa6c:	b.ne	40fa28 <wcrtomb@plt+0xaf38>  // b.any
  40fa70:	ldr	x8, [x19, #24]
  40fa74:	cmn	x8, #0x1
  40fa78:	b.ne	40fa28 <wcrtomb@plt+0xaf38>  // b.any
  40fa7c:	ldr	x8, [x19, #32]
  40fa80:	cmn	w8, #0x1
  40fa84:	b.ne	40fa28 <wcrtomb@plt+0xaf38>  // b.any
  40fa88:	ldr	w0, [x27, #1864]
  40fa8c:	mov	x1, x22
  40fa90:	mov	w2, wzr
  40fa94:	bl	404070 <unlinkat@plt>
  40fa98:	cbnz	w0, 40fa20 <wcrtomb@plt+0xaf30>
  40fa9c:	cbz	x21, 40fabc <wcrtomb@plt+0xafcc>
  40faa0:	ldr	w0, [x27, #1864]
  40faa4:	mov	x1, x21
  40faa8:	mov	x3, x22
  40faac:	mov	w4, wzr
  40fab0:	mov	w2, w0
  40fab4:	bl	403ff0 <linkat@plt>
  40fab8:	cbz	w0, 40fa28 <wcrtomb@plt+0xaf38>
  40fabc:	ldrb	w8, [x19, #40]
  40fac0:	ldr	w2, [x27, #1864]
  40fac4:	cbz	w8, 40faec <wcrtomb@plt+0xaffc>
  40fac8:	mov	x0, x20
  40facc:	mov	w1, w2
  40fad0:	mov	x2, x22
  40fad4:	bl	404930 <symlinkat@plt>
  40fad8:	cbz	w0, 40fb14 <wcrtomb@plt+0xb024>
  40fadc:	mov	x0, x20
  40fae0:	mov	x1, x22
  40fae4:	bl	42d438 <wcrtomb@plt+0x28948>
  40fae8:	b	40fa28 <wcrtomb@plt+0xaf38>
  40faec:	mov	w0, w2
  40faf0:	mov	x1, x20
  40faf4:	mov	x3, x22
  40faf8:	mov	w4, wzr
  40fafc:	bl	403ff0 <linkat@plt>
  40fb00:	cbz	w0, 40fa28 <wcrtomb@plt+0xaf38>
  40fb04:	mov	x0, x20
  40fb08:	mov	x1, x22
  40fb0c:	bl	42c9d8 <wcrtomb@plt+0x27ee8>
  40fb10:	b	40fa28 <wcrtomb@plt+0xaf38>
  40fb14:	ldr	w8, [x19, #44]
  40fb18:	add	x1, sp, #0x10
  40fb1c:	mov	w2, #0xffffffff            	// #-1
  40fb20:	mov	w5, #0x32                  	// #50
  40fb24:	str	w8, [sp, #120]
  40fb28:	ldr	x8, [x19, #48]
  40fb2c:	mov	w7, #0x100                 	// #256
  40fb30:	mov	x0, x22
  40fb34:	mov	w3, wzr
  40fb38:	str	x8, [sp, #128]
  40fb3c:	ldr	q0, [x24]
  40fb40:	ldr	x8, [sp, #8]
  40fb44:	mov	w4, wzr
  40fb48:	mov	w6, wzr
  40fb4c:	str	q0, [x8]
  40fb50:	ldr	q0, [x25]
  40fb54:	ldr	x8, [sp]
  40fb58:	str	q0, [x8]
  40fb5c:	ldur	q0, [x19, #120]
  40fb60:	ldur	q1, [x19, #104]
  40fb64:	stp	q1, q0, [sp, #64]
  40fb68:	ldr	x8, [x19, #136]
  40fb6c:	str	x8, [sp, #96]
  40fb70:	ldr	q0, [x19, #144]
  40fb74:	str	q0, [x26]
  40fb78:	bl	410128 <wcrtomb@plt+0xb638>
  40fb7c:	mov	x21, x22
  40fb80:	b	40fa28 <wcrtomb@plt+0xaf38>
  40fb84:	ldr	x0, [x19, #96]
  40fb88:	cbz	x0, 40f9d8 <wcrtomb@plt+0xaee8>
  40fb8c:	ldr	x20, [x0]
  40fb90:	bl	4046b0 <free@plt>
  40fb94:	mov	x0, x20
  40fb98:	cbnz	x20, 40fb8c <wcrtomb@plt+0xb09c>
  40fb9c:	b	40f9d8 <wcrtomb@plt+0xaee8>
  40fba0:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  40fba4:	add	x0, x0, #0xb36
  40fba8:	mov	w1, #0x1                   	// #1
  40fbac:	str	xzr, [x23, #1016]
  40fbb0:	bl	40fbd4 <wcrtomb@plt+0xb0e4>
  40fbb4:	add	sp, sp, #0x240
  40fbb8:	ldp	x20, x19, [sp, #80]
  40fbbc:	ldp	x22, x21, [sp, #64]
  40fbc0:	ldp	x24, x23, [sp, #48]
  40fbc4:	ldp	x26, x25, [sp, #32]
  40fbc8:	ldp	x28, x27, [sp, #16]
  40fbcc:	ldp	x29, x30, [sp], #96
  40fbd0:	ret
  40fbd4:	stp	x29, x30, [sp, #-96]!
  40fbd8:	stp	x28, x27, [sp, #16]
  40fbdc:	stp	x26, x25, [sp, #32]
  40fbe0:	stp	x24, x23, [sp, #48]
  40fbe4:	stp	x22, x21, [sp, #64]
  40fbe8:	stp	x20, x19, [sp, #80]
  40fbec:	mov	x29, sp
  40fbf0:	sub	sp, sp, #0x240
  40fbf4:	mov	w22, w1
  40fbf8:	mov	x19, x0
  40fbfc:	bl	403f00 <strlen@plt>
  40fc00:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40fc04:	ldr	x21, [x25, #1008]
  40fc08:	cbz	x21, 40fdec <wcrtomb@plt+0xb2fc>
  40fc0c:	add	x8, sp, #0x10
  40fc10:	add	x9, x8, #0xd8
  40fc14:	mov	x20, x0
  40fc18:	mov	w27, wzr
  40fc1c:	and	w26, w22, #0x1
  40fc20:	str	x9, [sp, #8]
  40fc24:	add	x9, x8, #0xe8
  40fc28:	add	x22, x8, #0x148
  40fc2c:	str	x9, [sp]
  40fc30:	b	40fce0 <wcrtomb@plt+0xb1f0>
  40fc34:	ldur	w23, [x29, #-120]
  40fc38:	mov	w24, #0xffffffff            	// #-1
  40fc3c:	ldr	w8, [x21, #24]
  40fc40:	add	x1, sp, #0x10
  40fc44:	mov	w2, #0xffffffff            	// #-1
  40fc48:	mov	w5, #0x35                  	// #53
  40fc4c:	str	w8, [sp, #120]
  40fc50:	ldur	x8, [x21, #28]
  40fc54:	mov	w3, w23
  40fc58:	mov	w4, w24
  40fc5c:	str	x8, [sp, #128]
  40fc60:	ldur	q0, [x21, #40]
  40fc64:	ldr	x8, [sp, #8]
  40fc68:	str	q0, [x8]
  40fc6c:	ldur	q0, [x21, #56]
  40fc70:	ldr	x8, [sp]
  40fc74:	str	q0, [x8]
  40fc78:	ldp	q1, q0, [x21, #96]
  40fc7c:	stp	q1, q0, [sp, #64]
  40fc80:	ldr	x8, [x21, #128]
  40fc84:	str	x8, [sp, #96]
  40fc88:	ldur	q0, [x21, #136]
  40fc8c:	str	q0, [x22]
  40fc90:	ldr	x0, [x21, #160]
  40fc94:	ldrb	w6, [x21, #80]
  40fc98:	ldr	w7, [x21, #84]
  40fc9c:	bl	410128 <wcrtomb@plt+0xb638>
  40fca0:	ldr	x8, [x21]
  40fca4:	str	x8, [x25, #1008]
  40fca8:	ldr	x0, [x21, #160]
  40fcac:	bl	4046b0 <free@plt>
  40fcb0:	ldp	x1, x0, [x21, #136]
  40fcb4:	bl	4128b8 <wcrtomb@plt+0xddc8>
  40fcb8:	ldr	x0, [x21, #96]
  40fcbc:	bl	4046b0 <free@plt>
  40fcc0:	ldr	x0, [x21, #104]
  40fcc4:	bl	4046b0 <free@plt>
  40fcc8:	ldr	x0, [x21, #120]
  40fccc:	bl	4046b0 <free@plt>
  40fcd0:	mov	x0, x21
  40fcd4:	bl	4046b0 <free@plt>
  40fcd8:	ldr	x21, [x25, #1008]
  40fcdc:	cbz	x21, 40fdec <wcrtomb@plt+0xb2fc>
  40fce0:	ldrb	w8, [x21, #88]
  40fce4:	and	w9, w27, #0x1
  40fce8:	orr	w28, w8, w9
  40fcec:	cmp	w28, #0x0
  40fcf0:	cset	w27, ne  // ne = any
  40fcf4:	cmp	w8, w26
  40fcf8:	b.hi	40fdec <wcrtomb@plt+0xb2fc>  // b.pmore
  40fcfc:	ldr	x2, [x21, #152]
  40fd00:	ldp	w23, w24, [x21, #72]
  40fd04:	cmp	x2, x20
  40fd08:	b.cs	40fd3c <wcrtomb@plt+0xb24c>  // b.hs, b.nlast
  40fd0c:	ldrb	w8, [x19, x2]
  40fd10:	cbz	w8, 40fd3c <wcrtomb@plt+0xb24c>
  40fd14:	cmp	w8, #0x2f
  40fd18:	b.eq	40fd2c <wcrtomb@plt+0xb23c>  // b.none
  40fd1c:	add	x8, x2, x19
  40fd20:	ldurb	w8, [x8, #-1]
  40fd24:	cmp	w8, #0x2f
  40fd28:	b.ne	40fd3c <wcrtomb@plt+0xb24c>  // b.any
  40fd2c:	ldr	x1, [x21, #160]
  40fd30:	mov	x0, x19
  40fd34:	bl	404400 <bcmp@plt>
  40fd38:	cbz	w0, 40fdec <wcrtomb@plt+0xb2fc>
  40fd3c:	ldr	w0, [x21, #92]
  40fd40:	bl	41cd90 <wcrtomb@plt+0x182a0>
  40fd44:	cbz	w28, 40fc3c <wcrtomb@plt+0xb14c>
  40fd48:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40fd4c:	ldr	w1, [x8, #1864]
  40fd50:	ldr	x2, [x21, #160]
  40fd54:	ldr	w4, [x21, #84]
  40fd58:	sub	x3, x29, #0x88
  40fd5c:	mov	w0, wzr
  40fd60:	bl	404ad0 <__fxstatat@plt>
  40fd64:	cbz	w0, 40fd74 <wcrtomb@plt+0xb284>
  40fd68:	ldr	x0, [x21, #160]
  40fd6c:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  40fd70:	b	40fca0 <wcrtomb@plt+0xb1b0>
  40fd74:	ldur	x8, [x29, #-136]
  40fd78:	ldr	x9, [x21, #8]
  40fd7c:	cmp	x8, x9
  40fd80:	b.ne	40fd94 <wcrtomb@plt+0xb2a4>  // b.any
  40fd84:	ldur	x8, [x29, #-128]
  40fd88:	ldr	x9, [x21, #16]
  40fd8c:	cmp	x8, x9
  40fd90:	b.eq	40fc34 <wcrtomb@plt+0xb144>  // b.none
  40fd94:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40fd98:	ldr	x8, [x8, #4000]
  40fd9c:	cbz	x8, 40fda4 <wcrtomb@plt+0xb2b4>
  40fda0:	blr	x8
  40fda4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40fda8:	mov	w2, #0x5                   	// #5
  40fdac:	mov	x0, xzr
  40fdb0:	add	x1, x1, #0xe4e
  40fdb4:	bl	4048b0 <dcgettext@plt>
  40fdb8:	ldr	x8, [x21, #160]
  40fdbc:	mov	x23, x0
  40fdc0:	mov	x0, x8
  40fdc4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  40fdc8:	mov	x3, x0
  40fdcc:	mov	w0, wzr
  40fdd0:	mov	w1, wzr
  40fdd4:	mov	x2, x23
  40fdd8:	bl	403f60 <error@plt>
  40fddc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40fde0:	mov	w9, #0x2                   	// #2
  40fde4:	str	w9, [x8, #2352]
  40fde8:	b	40fca0 <wcrtomb@plt+0xb1b0>
  40fdec:	add	sp, sp, #0x240
  40fdf0:	ldp	x20, x19, [sp, #80]
  40fdf4:	ldp	x22, x21, [sp, #64]
  40fdf8:	ldp	x24, x23, [sp, #48]
  40fdfc:	ldp	x26, x25, [sp, #32]
  40fe00:	ldp	x28, x27, [sp, #16]
  40fe04:	ldp	x29, x30, [sp], #96
  40fe08:	ret
  40fe0c:	stp	x29, x30, [sp, #-64]!
  40fe10:	str	x23, [sp, #16]
  40fe14:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40fe18:	ldr	w2, [x23, #1864]
  40fe1c:	stp	x20, x19, [sp, #48]
  40fe20:	mov	x19, x1
  40fe24:	mov	x20, x0
  40fe28:	mov	w0, w2
  40fe2c:	mov	x1, x20
  40fe30:	mov	x3, x19
  40fe34:	stp	x22, x21, [sp, #32]
  40fe38:	mov	x29, sp
  40fe3c:	bl	404700 <renameat@plt>
  40fe40:	cbz	w0, 40fedc <wcrtomb@plt+0xb3ec>
  40fe44:	bl	4049c0 <__errno_location@plt>
  40fe48:	ldr	w21, [x0]
  40fe4c:	cmp	w21, #0x2
  40fe50:	b.ne	40fe6c <wcrtomb@plt+0xb37c>  // b.any
  40fe54:	mov	x22, x0
  40fe58:	add	x1, x29, #0x1c
  40fe5c:	mov	x0, x19
  40fe60:	bl	40ff84 <wcrtomb@plt+0xb494>
  40fe64:	cbz	w0, 40ff40 <wcrtomb@plt+0xb450>
  40fe68:	mov	w21, #0x2                   	// #2
  40fe6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40fe70:	ldr	x8, [x8, #4000]
  40fe74:	cbz	x8, 40fe7c <wcrtomb@plt+0xb38c>
  40fe78:	blr	x8
  40fe7c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  40fe80:	add	x1, x1, #0xe37
  40fe84:	mov	w2, #0x5                   	// #5
  40fe88:	mov	x0, xzr
  40fe8c:	bl	4048b0 <dcgettext@plt>
  40fe90:	mov	x22, x0
  40fe94:	mov	w0, wzr
  40fe98:	mov	x1, x20
  40fe9c:	bl	449134 <argp_parse@@Base+0xea88>
  40fea0:	mov	x20, x0
  40fea4:	mov	w0, #0x1                   	// #1
  40fea8:	mov	x1, x19
  40feac:	bl	449134 <argp_parse@@Base+0xea88>
  40feb0:	mov	x4, x0
  40feb4:	mov	w0, wzr
  40feb8:	mov	w1, w21
  40febc:	mov	x2, x22
  40fec0:	mov	x3, x20
  40fec4:	bl	403f60 <error@plt>
  40fec8:	mov	w0, wzr
  40fecc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40fed0:	mov	w9, #0x2                   	// #2
  40fed4:	str	w9, [x8, #2352]
  40fed8:	b	40ff70 <wcrtomb@plt+0xb480>
  40fedc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40fee0:	ldr	x22, [x8, #1008]
  40fee4:	cbz	x22, 40ff6c <wcrtomb@plt+0xb47c>
  40fee8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40feec:	ldr	w23, [x8, #2992]
  40fef0:	b	40fefc <wcrtomb@plt+0xb40c>
  40fef4:	ldr	x22, [x22]
  40fef8:	cbz	x22, 40ff6c <wcrtomb@plt+0xb47c>
  40fefc:	ldr	w8, [x22, #92]
  40ff00:	cmp	w23, w8
  40ff04:	b.ne	40fef4 <wcrtomb@plt+0xb404>  // b.any
  40ff08:	ldr	x21, [x22, #160]
  40ff0c:	mov	x1, x20
  40ff10:	mov	x0, x21
  40ff14:	bl	404610 <strcmp@plt>
  40ff18:	cbnz	w0, 40fef4 <wcrtomb@plt+0xb404>
  40ff1c:	mov	x0, x21
  40ff20:	bl	4046b0 <free@plt>
  40ff24:	mov	x0, x19
  40ff28:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  40ff2c:	str	x0, [x22, #160]
  40ff30:	mov	x0, x19
  40ff34:	bl	403f00 <strlen@plt>
  40ff38:	str	x0, [x22, #152]
  40ff3c:	b	40ff6c <wcrtomb@plt+0xb47c>
  40ff40:	ldr	w0, [x23, #1864]
  40ff44:	mov	x1, x20
  40ff48:	mov	x3, x19
  40ff4c:	mov	w2, w0
  40ff50:	bl	404700 <renameat@plt>
  40ff54:	cbz	w0, 40ff6c <wcrtomb@plt+0xb47c>
  40ff58:	ldr	w21, [x22]
  40ff5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ff60:	ldr	x8, [x8, #4000]
  40ff64:	cbnz	x8, 40fe78 <wcrtomb@plt+0xb388>
  40ff68:	b	40fe7c <wcrtomb@plt+0xb38c>
  40ff6c:	mov	w0, #0x1                   	// #1
  40ff70:	ldp	x20, x19, [sp, #48]
  40ff74:	ldp	x22, x21, [sp, #32]
  40ff78:	ldr	x23, [sp, #16]
  40ff7c:	ldp	x29, x30, [sp], #64
  40ff80:	ret
  40ff84:	sub	sp, sp, #0xf0
  40ff88:	stp	x24, x23, [sp, #192]
  40ff8c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  40ff90:	stp	x28, x27, [sp, #160]
  40ff94:	stp	x26, x25, [sp, #176]
  40ff98:	stp	x20, x19, [sp, #224]
  40ff9c:	mov	x19, x0
  40ffa0:	mov	x20, xzr
  40ffa4:	add	x24, x24, #0x3e0
  40ffa8:	mov	w25, #0xc0                  	// #192
  40ffac:	adrp	x26, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  40ffb0:	mov	w27, #0x2f                  	// #47
  40ffb4:	stp	x29, x30, [sp, #144]
  40ffb8:	stp	x22, x21, [sp, #208]
  40ffbc:	add	x29, sp, #0x90
  40ffc0:	str	x1, [sp, #8]
  40ffc4:	b	40ffd0 <wcrtomb@plt+0xb4e0>
  40ffc8:	cbz	w8, 4100e4 <wcrtomb@plt+0xb5f4>
  40ffcc:	add	x20, x20, #0x1
  40ffd0:	add	x28, x19, x20
  40ffd4:	ldrb	w8, [x28]
  40ffd8:	cmp	w8, #0x2f
  40ffdc:	b.ne	40ffc8 <wcrtomb@plt+0xb4d8>  // b.any
  40ffe0:	cbz	x20, 40ffcc <wcrtomb@plt+0xb4dc>
  40ffe4:	add	x8, x19, x20
  40ffe8:	ldurb	w8, [x8, #-1]
  40ffec:	cmp	w8, #0x2f
  40fff0:	b.eq	40ffcc <wcrtomb@plt+0xb4dc>  // b.none
  40fff4:	cmp	w8, #0x2e
  40fff8:	b.ne	410034 <wcrtomb@plt+0xb544>  // b.any
  40fffc:	cmp	x20, #0x1
  410000:	b.eq	40ffcc <wcrtomb@plt+0xb4dc>  // b.none
  410004:	add	x8, x19, x20
  410008:	ldurb	w8, [x8, #-2]
  41000c:	cmp	w8, #0x2f
  410010:	b.eq	40ffcc <wcrtomb@plt+0xb4dc>  // b.none
  410014:	cmp	w8, #0x2e
  410018:	b.ne	410034 <wcrtomb@plt+0xb544>  // b.any
  41001c:	cmp	x20, #0x2
  410020:	b.eq	40ffcc <wcrtomb@plt+0xb4dc>  // b.none
  410024:	add	x8, x19, x20
  410028:	ldurb	w8, [x8, #-3]
  41002c:	cmp	w8, #0x2f
  410030:	b.eq	40ffcc <wcrtomb@plt+0xb4dc>  // b.none
  410034:	strb	wzr, [x28]
  410038:	ldr	w8, [x24, #8]
  41003c:	ldrb	w9, [x24]
  410040:	ldr	w0, [x26, #1864]
  410044:	mov	x1, x19
  410048:	mvn	w8, w8
  41004c:	cmp	w9, #0x0
  410050:	and	w22, w8, #0x1ff
  410054:	csel	w8, w25, wzr, eq  // eq = none
  410058:	orr	w23, w8, w22
  41005c:	mov	w2, w23
  410060:	bl	404160 <mkdirat@plt>
  410064:	cbz	w0, 41009c <wcrtomb@plt+0xb5ac>
  410068:	bl	4049c0 <__errno_location@plt>
  41006c:	ldr	w21, [x0]
  410070:	cmp	w21, #0x11
  410074:	b.eq	4100dc <wcrtomb@plt+0xb5ec>  // b.none
  410078:	ldr	w1, [x26, #1864]
  41007c:	mov	x22, x0
  410080:	add	x3, sp, #0x10
  410084:	mov	w0, wzr
  410088:	mov	x2, x19
  41008c:	mov	w4, wzr
  410090:	bl	404ad0 <__fxstatat@plt>
  410094:	cbz	w0, 4100dc <wcrtomb@plt+0xb5ec>
  410098:	b	41010c <wcrtomb@plt+0xb61c>
  41009c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4100a0:	ldr	w8, [x8, #1004]
  4100a4:	mov	w3, #0x1ff                 	// #511
  4100a8:	mov	w5, #0x100                 	// #256
  4100ac:	mov	x0, x19
  4100b0:	bic	w2, w23, w8
  4100b4:	mov	x1, xzr
  4100b8:	mov	w4, w22
  4100bc:	bl	411694 <wcrtomb@plt+0xcba4>
  4100c0:	mov	x0, x19
  4100c4:	mov	w1, w20
  4100c8:	mov	w2, w22
  4100cc:	bl	41abf4 <wcrtomb@plt+0x16104>
  4100d0:	ldr	x8, [sp, #8]
  4100d4:	mov	w9, #0x1                   	// #1
  4100d8:	strb	w9, [x8]
  4100dc:	strb	w27, [x28]
  4100e0:	b	40ffcc <wcrtomb@plt+0xb4dc>
  4100e4:	mov	w23, wzr
  4100e8:	mov	w0, w23
  4100ec:	ldp	x20, x19, [sp, #224]
  4100f0:	ldp	x22, x21, [sp, #208]
  4100f4:	ldp	x24, x23, [sp, #192]
  4100f8:	ldp	x26, x25, [sp, #176]
  4100fc:	ldp	x28, x27, [sp, #160]
  410100:	ldp	x29, x30, [sp, #144]
  410104:	add	sp, sp, #0xf0
  410108:	ret
  41010c:	mov	w23, w0
  410110:	mov	x0, x19
  410114:	str	w21, [x22]
  410118:	bl	42ca6c <wcrtomb@plt+0x27f7c>
  41011c:	mov	w8, #0x2f                  	// #47
  410120:	strb	w8, [x19, x20]
  410124:	b	4100e8 <wcrtomb@plt+0xb5f8>
  410128:	sub	sp, sp, #0xe0
  41012c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410130:	ldrb	w8, [x8, #3544]
  410134:	stp	x26, x25, [sp, #160]
  410138:	stp	x24, x23, [sp, #176]
  41013c:	stp	x22, x21, [sp, #192]
  410140:	stp	x20, x19, [sp, #208]
  410144:	mov	w23, w7
  410148:	mov	w26, w6
  41014c:	mov	w19, w5
  410150:	mov	w25, w4
  410154:	mov	w24, w3
  410158:	mov	w22, w2
  41015c:	mov	x20, x1
  410160:	mov	x21, x0
  410164:	stp	x29, x30, [sp, #128]
  410168:	stp	x28, x27, [sp, #144]
  41016c:	add	x29, sp, #0x80
  410170:	cbnz	w8, 4101ec <wcrtomb@plt+0xb6fc>
  410174:	tbnz	w26, #0, 4101ec <wcrtomb@plt+0xb6fc>
  410178:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41017c:	ldrb	w8, [x27, #3025]
  410180:	cbz	w8, 410190 <wcrtomb@plt+0xb6a0>
  410184:	ldur	q0, [x20, #216]
  410188:	str	q0, [sp]
  41018c:	b	410198 <wcrtomb@plt+0xb6a8>
  410190:	mov	w8, #0x3ffffffe            	// #1073741822
  410194:	str	x8, [sp, #8]
  410198:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41019c:	ldur	q0, [x20, #232]
  4101a0:	ldr	w1, [x8, #1864]
  4101a4:	mov	x3, sp
  4101a8:	mov	w0, w22
  4101ac:	mov	x2, x21
  4101b0:	mov	w4, w23
  4101b4:	str	q0, [sp, #16]
  4101b8:	bl	43cff0 <argp_parse@@Base+0x2944>
  4101bc:	cbz	w0, 4102ac <wcrtomb@plt+0xb7bc>
  4101c0:	and	w8, w19, #0xff
  4101c4:	cmp	w8, #0x32
  4101c8:	b.ne	4101e4 <wcrtomb@plt+0xb6f4>  // b.any
  4101cc:	bl	4049c0 <__errno_location@plt>
  4101d0:	ldr	w8, [x0]
  4101d4:	cmp	w8, #0x26
  4101d8:	b.eq	4101ec <wcrtomb@plt+0xb6fc>  // b.none
  4101dc:	cmp	w8, #0x5f
  4101e0:	b.eq	4101ec <wcrtomb@plt+0xb6fc>  // b.none
  4101e4:	mov	x0, x21
  4101e8:	bl	42d758 <wcrtomb@plt+0x28c68>
  4101ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4101f0:	ldr	w8, [x8, #3972]
  4101f4:	cmp	w8, #0x1
  4101f8:	b.lt	4102dc <wcrtomb@plt+0xb7ec>  // b.tstop
  4101fc:	tbnz	w26, #0, 4102dc <wcrtomb@plt+0xb7ec>
  410200:	ldp	w27, w28, [x20, #112]
  410204:	tbnz	w22, #31, 410234 <wcrtomb@plt+0xb744>
  410208:	mov	w0, w22
  41020c:	mov	w1, w27
  410210:	mov	w2, w28
  410214:	bl	404a50 <fchown@plt>
  410218:	cbz	w0, 41028c <wcrtomb@plt+0xb79c>
  41021c:	bl	4049c0 <__errno_location@plt>
  410220:	ldr	w8, [x0]
  410224:	cmp	w8, #0x5f
  410228:	b.eq	410234 <wcrtomb@plt+0xb744>  // b.none
  41022c:	cmp	w8, #0x26
  410230:	b.ne	410254 <wcrtomb@plt+0xb764>  // b.any
  410234:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410238:	ldr	w0, [x8, #1864]
  41023c:	mov	x1, x21
  410240:	mov	w2, w27
  410244:	mov	w3, w28
  410248:	mov	w4, w23
  41024c:	bl	404720 <fchownat@plt>
  410250:	cbz	w0, 41028c <wcrtomb@plt+0xb79c>
  410254:	and	w8, w19, #0xff
  410258:	cmp	w8, #0x32
  41025c:	b.ne	410278 <wcrtomb@plt+0xb788>  // b.any
  410260:	bl	4049c0 <__errno_location@plt>
  410264:	ldr	w8, [x0]
  410268:	cmp	w8, #0x26
  41026c:	b.eq	4102dc <wcrtomb@plt+0xb7ec>  // b.none
  410270:	cmp	w8, #0x5f
  410274:	b.eq	4102dc <wcrtomb@plt+0xb7ec>  // b.none
  410278:	mov	x0, x21
  41027c:	mov	w1, w27
  410280:	mov	w2, w28
  410284:	bl	42c834 <wcrtomb@plt+0x27d44>
  410288:	b	4102dc <wcrtomb@plt+0xb7ec>
  41028c:	orn	w8, w24, w25
  410290:	mov	w9, #0x49                  	// #73
  410294:	tst	w8, w9
  410298:	b.eq	4102dc <wcrtomb@plt+0xb7ec>  // b.none
  41029c:	mvn	w8, w24
  4102a0:	orr	w8, w8, #0xfffff3ff
  4102a4:	and	w25, w8, w25
  4102a8:	b	4102dc <wcrtomb@plt+0xb7ec>
  4102ac:	ldrb	w8, [x27, #3025]
  4102b0:	cbz	w8, 4102c0 <wcrtomb@plt+0xb7d0>
  4102b4:	ldp	x1, x2, [sp]
  4102b8:	mov	x0, x21
  4102bc:	bl	410504 <wcrtomb@plt+0xba14>
  4102c0:	ldp	x1, x2, [sp, #16]
  4102c4:	mov	x0, x21
  4102c8:	bl	410504 <wcrtomb@plt+0xba14>
  4102cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4102d0:	ldr	w8, [x8, #3972]
  4102d4:	cmp	w8, #0x1
  4102d8:	b.ge	4101fc <wcrtomb@plt+0xb70c>  // b.tcont
  4102dc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4102e0:	ldr	w9, [x9, #3604]
  4102e4:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4102e8:	ldr	w8, [x20, #104]
  4102ec:	ldr	w10, [x10, #1004]
  4102f0:	cmp	w9, #0x0
  4102f4:	eor	w11, w26, #0x1
  4102f8:	cset	w9, gt
  4102fc:	tst	w9, w11
  410300:	mov	w9, #0x1ff                 	// #511
  410304:	bic	w26, w8, w10
  410308:	mov	w8, #0xfff                 	// #4095
  41030c:	csel	w27, w8, w9, ne  // ne = any
  410310:	eor	w8, w26, w24
  410314:	orn	w8, w8, w25
  410318:	tst	w27, w8
  41031c:	b.eq	4104b0 <wcrtomb@plt+0xb9c0>  // b.none
  410320:	mvn	w8, w25
  410324:	bic	w8, w8, w27
  410328:	tst	w8, #0xe00
  41032c:	b.eq	410378 <wcrtomb@plt+0xb888>  // b.none
  410330:	tbnz	w22, #31, 410354 <wcrtomb@plt+0xb864>
  410334:	mov	x2, sp
  410338:	mov	w0, wzr
  41033c:	mov	w1, w22
  410340:	bl	404890 <__fxstat@plt>
  410344:	cbz	w0, 410374 <wcrtomb@plt+0xb884>
  410348:	mov	x0, x21
  41034c:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  410350:	b	4104b0 <wcrtomb@plt+0xb9c0>
  410354:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410358:	ldr	w1, [x8, #1864]
  41035c:	mov	x3, sp
  410360:	mov	w0, wzr
  410364:	mov	x2, x21
  410368:	mov	w4, w23
  41036c:	bl	404ad0 <__fxstatat@plt>
  410370:	cbnz	w0, 410348 <wcrtomb@plt+0xb858>
  410374:	ldr	w24, [sp, #16]
  410378:	mvn	w8, w27
  41037c:	and	w9, w24, #0xfff
  410380:	and	w8, w9, w8
  410384:	and	w10, w27, w26
  410388:	orr	w24, w8, w10
  41038c:	cmp	w9, w24
  410390:	b.eq	4104b0 <wcrtomb@plt+0xb9c0>  // b.none
  410394:	tbnz	w22, #31, 4103c0 <wcrtomb@plt+0xb8d0>
  410398:	mov	w0, w22
  41039c:	mov	w1, w24
  4103a0:	bl	404380 <fchmod@plt>
  4103a4:	cbz	w0, 4103f4 <wcrtomb@plt+0xb904>
  4103a8:	bl	4049c0 <__errno_location@plt>
  4103ac:	ldr	w25, [x0]
  4103b0:	cmp	w25, #0x5f
  4103b4:	b.eq	4103c0 <wcrtomb@plt+0xb8d0>  // b.none
  4103b8:	cmp	w25, #0x26
  4103bc:	b.ne	4103f8 <wcrtomb@plt+0xb908>  // b.any
  4103c0:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4103c4:	ldr	w0, [x8, #1864]
  4103c8:	mov	x1, x21
  4103cc:	mov	w2, w24
  4103d0:	mov	w3, w23
  4103d4:	bl	404a10 <fchmodat@plt>
  4103d8:	cbz	w0, 41046c <wcrtomb@plt+0xb97c>
  4103dc:	bl	4049c0 <__errno_location@plt>
  4103e0:	ldr	w25, [x0]
  4103e4:	and	w8, w19, #0xff
  4103e8:	cmp	w8, #0x32
  4103ec:	b.ne	410404 <wcrtomb@plt+0xb914>  // b.any
  4103f0:	b	41047c <wcrtomb@plt+0xb98c>
  4103f4:	mov	w25, wzr
  4103f8:	and	w8, w19, #0xff
  4103fc:	cmp	w8, #0x32
  410400:	b.eq	41047c <wcrtomb@plt+0xb98c>  // b.none
  410404:	cbz	w23, 41047c <wcrtomb@plt+0xb98c>
  410408:	cmp	w25, #0x5f
  41040c:	b.eq	410418 <wcrtomb@plt+0xb928>  // b.none
  410410:	cmp	w25, #0x26
  410414:	b.ne	41047c <wcrtomb@plt+0xb98c>  // b.any
  410418:	tbnz	w22, #31, 410444 <wcrtomb@plt+0xb954>
  41041c:	mov	w0, w22
  410420:	mov	w1, w24
  410424:	bl	404380 <fchmod@plt>
  410428:	cbz	w0, 4104b0 <wcrtomb@plt+0xb9c0>
  41042c:	bl	4049c0 <__errno_location@plt>
  410430:	ldr	w25, [x0]
  410434:	cmp	w25, #0x5f
  410438:	b.eq	410444 <wcrtomb@plt+0xb954>  // b.none
  41043c:	cmp	w25, #0x26
  410440:	b.ne	41047c <wcrtomb@plt+0xb98c>  // b.any
  410444:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410448:	ldr	w0, [x8, #1864]
  41044c:	mov	x1, x21
  410450:	mov	w2, w24
  410454:	mov	w3, wzr
  410458:	bl	404a10 <fchmodat@plt>
  41045c:	cbz	w0, 4104b0 <wcrtomb@plt+0xb9c0>
  410460:	bl	4049c0 <__errno_location@plt>
  410464:	ldr	w25, [x0]
  410468:	b	41047c <wcrtomb@plt+0xb98c>
  41046c:	mov	w25, wzr
  410470:	and	w8, w19, #0xff
  410474:	cmp	w8, #0x32
  410478:	b.ne	410404 <wcrtomb@plt+0xb914>  // b.any
  41047c:	cbz	w25, 4104b0 <wcrtomb@plt+0xb9c0>
  410480:	and	w8, w19, #0xff
  410484:	cmp	w8, #0x32
  410488:	b.ne	41049c <wcrtomb@plt+0xb9ac>  // b.any
  41048c:	cmp	w25, #0x26
  410490:	b.eq	4104b0 <wcrtomb@plt+0xb9c0>  // b.none
  410494:	cmp	w25, #0x5f
  410498:	b.eq	4104b0 <wcrtomb@plt+0xb9c0>  // b.none
  41049c:	bl	4049c0 <__errno_location@plt>
  4104a0:	str	w25, [x0]
  4104a4:	mov	x0, x21
  4104a8:	mov	w1, w24
  4104ac:	bl	42c6f4 <wcrtomb@plt+0x27c04>
  4104b0:	mov	w3, #0x1                   	// #1
  4104b4:	mov	x0, x20
  4104b8:	mov	x1, x21
  4104bc:	mov	w2, w19
  4104c0:	bl	42bab8 <wcrtomb@plt+0x26fc8>
  4104c4:	mov	x0, x20
  4104c8:	mov	x1, x21
  4104cc:	mov	w2, w19
  4104d0:	bl	42adf8 <wcrtomb@plt+0x26308>
  4104d4:	mov	x0, x20
  4104d8:	mov	x1, x21
  4104dc:	mov	w2, w19
  4104e0:	bl	42ba48 <wcrtomb@plt+0x26f58>
  4104e4:	ldp	x20, x19, [sp, #208]
  4104e8:	ldp	x22, x21, [sp, #192]
  4104ec:	ldp	x24, x23, [sp, #176]
  4104f0:	ldp	x26, x25, [sp, #160]
  4104f4:	ldp	x28, x27, [sp, #144]
  4104f8:	ldp	x29, x30, [sp, #128]
  4104fc:	add	sp, sp, #0xe0
  410500:	ret
  410504:	sub	sp, sp, #0x70
  410508:	stp	x22, x21, [sp, #80]
  41050c:	stp	x20, x19, [sp, #96]
  410510:	mov	x20, x2
  410514:	mov	x21, x1
  410518:	mov	x19, x0
  41051c:	stp	x29, x30, [sp, #48]
  410520:	stp	x24, x23, [sp, #64]
  410524:	add	x29, sp, #0x30
  410528:	tbnz	x1, #63, 4105e8 <wcrtomb@plt+0xbaf8>
  41052c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410530:	add	x8, x8, #0xf58
  410534:	ldr	x9, [x8]
  410538:	cmp	x9, x21
  41053c:	b.ge	410658 <wcrtomb@plt+0xbb68>  // b.tcont
  410540:	sub	x0, x29, #0x10
  410544:	bl	43e664 <argp_parse@@Base+0x3fb8>
  410548:	ldp	x8, x9, [x29, #-16]
  41054c:	subs	x8, x21, x8
  410550:	b.le	41066c <wcrtomb@plt+0xbb7c>
  410554:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  410558:	ldrb	w10, [x10, #3713]
  41055c:	mov	w11, #0xca00                	// #51712
  410560:	sub	x9, x20, x9
  410564:	movk	w11, #0x3b9a, lsl #16
  410568:	add	x11, x9, x11
  41056c:	cmp	x9, #0x0
  410570:	csel	x22, x11, x9, lt  // lt = tstop
  410574:	tbz	w10, #7, 410678 <wcrtomb@plt+0xbb88>
  410578:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41057c:	ldr	x10, [x10, #4000]
  410580:	add	x23, x8, x9, asr #63
  410584:	cbz	x10, 41058c <wcrtomb@plt+0xba9c>
  410588:	blr	x10
  41058c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  410590:	add	x1, x1, #0xeab
  410594:	mov	w2, #0x5                   	// #5
  410598:	mov	x0, xzr
  41059c:	bl	4048b0 <dcgettext@plt>
  4105a0:	mov	x24, x0
  4105a4:	mov	w2, #0x1                   	// #1
  4105a8:	mov	x0, x21
  4105ac:	mov	x1, x20
  4105b0:	bl	41a364 <wcrtomb@plt+0x15874>
  4105b4:	mov	x20, x0
  4105b8:	mov	x2, sp
  4105bc:	mov	x0, x23
  4105c0:	mov	x1, x22
  4105c4:	bl	41be34 <wcrtomb@plt+0x17344>
  4105c8:	mov	x5, x0
  4105cc:	mov	w0, wzr
  4105d0:	mov	w1, wzr
  4105d4:	mov	x2, x24
  4105d8:	mov	x3, x19
  4105dc:	mov	x4, x20
  4105e0:	bl	403f60 <error@plt>
  4105e4:	b	410678 <wcrtomb@plt+0xbb88>
  4105e8:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4105ec:	ldrb	w8, [x8, #3713]
  4105f0:	tbz	w8, #7, 410678 <wcrtomb@plt+0xbb88>
  4105f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4105f8:	ldr	x8, [x8, #4000]
  4105fc:	cbz	x8, 410604 <wcrtomb@plt+0xbb14>
  410600:	blr	x8
  410604:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  410608:	add	x1, x1, #0xe89
  41060c:	mov	w2, #0x5                   	// #5
  410610:	mov	x0, xzr
  410614:	bl	4048b0 <dcgettext@plt>
  410618:	mov	x22, x0
  41061c:	mov	w2, #0x1                   	// #1
  410620:	mov	x0, x21
  410624:	mov	x1, x20
  410628:	bl	41a364 <wcrtomb@plt+0x15874>
  41062c:	mov	x2, x22
  410630:	mov	x3, x19
  410634:	ldp	x20, x19, [sp, #96]
  410638:	ldp	x22, x21, [sp, #80]
  41063c:	ldp	x24, x23, [sp, #64]
  410640:	ldp	x29, x30, [sp, #48]
  410644:	mov	x4, x0
  410648:	mov	w0, wzr
  41064c:	mov	w1, wzr
  410650:	add	sp, sp, #0x70
  410654:	b	403f60 <error@plt>
  410658:	b.gt	410678 <wcrtomb@plt+0xbb88>
  41065c:	ldr	x8, [x8, #8]
  410660:	cmp	w8, w20
  410664:	b.pl	410678 <wcrtomb@plt+0xbb88>  // b.nfrst
  410668:	b	410540 <wcrtomb@plt+0xba50>
  41066c:	b.lt	410678 <wcrtomb@plt+0xbb88>  // b.tstop
  410670:	cmp	w9, w20
  410674:	b.mi	410554 <wcrtomb@plt+0xba64>  // b.first
  410678:	ldp	x20, x19, [sp, #96]
  41067c:	ldp	x22, x21, [sp, #80]
  410680:	ldp	x24, x23, [sp, #64]
  410684:	ldp	x29, x30, [sp, #48]
  410688:	add	sp, sp, #0x70
  41068c:	ret
  410690:	sub	sp, sp, #0xf0
  410694:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410698:	ldr	w9, [x9, #3972]
  41069c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4106a0:	ldr	w8, [x8, #3192]
  4106a4:	stp	x20, x19, [sp, #224]
  4106a8:	mov	w10, #0x1ff                 	// #511
  4106ac:	mov	w11, #0x1c0                 	// #448
  4106b0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4106b4:	cmp	w9, #0x0
  4106b8:	ldrb	w12, [x20, #3617]
  4106bc:	csel	w9, w11, w10, gt
  4106c0:	stp	x22, x21, [sp, #208]
  4106c4:	and	w21, w8, w9
  4106c8:	and	w9, w21, #0x3f
  4106cc:	stp	x28, x27, [sp, #160]
  4106d0:	mov	w27, w1
  4106d4:	mov	x19, x0
  4106d8:	csel	w9, w9, wzr, gt
  4106dc:	stp	x29, x30, [sp, #144]
  4106e0:	stp	x26, x25, [sp, #176]
  4106e4:	stp	x24, x23, [sp, #192]
  4106e8:	add	x29, sp, #0x90
  4106ec:	strb	wzr, [sp, #8]
  4106f0:	cbz	w12, 410748 <wcrtomb@plt+0xbc58>
  4106f4:	mov	w23, wzr
  4106f8:	mov	w21, wzr
  4106fc:	mov	w22, #0x1                   	// #1
  410700:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410704:	add	x24, x24, #0xc10
  410708:	mov	x0, x24
  41070c:	bl	404ca8 <wcrtomb@plt+0x1b8>
  410710:	ldrb	w8, [x24, #272]
  410714:	cbz	w8, 41077c <wcrtomb@plt+0xbc8c>
  410718:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41071c:	add	x1, x1, #0xc10
  410720:	add	x2, sp, #0x10
  410724:	mov	w0, w22
  410728:	bl	4205a0 <wcrtomb@plt+0x1bab0>
  41072c:	ldr	x0, [sp, #16]
  410730:	bl	41acf0 <wcrtomb@plt+0x16200>
  410734:	bl	404d34 <wcrtomb@plt+0x244>
  410738:	ldrb	w8, [x20, #3617]
  41073c:	cbz	w8, 4107fc <wcrtomb@plt+0xbd0c>
  410740:	mov	w20, wzr
  410744:	b	410bac <wcrtomb@plt+0xc0bc>
  410748:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41074c:	ldr	x10, [x10, #3608]
  410750:	cbz	x10, 410824 <wcrtomb@plt+0xbd34>
  410754:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410758:	add	x2, x2, #0xc10
  41075c:	mov	w1, #0x66                  	// #102
  410760:	mov	x0, x19
  410764:	bl	423e40 <wcrtomb@plt+0x1f350>
  410768:	tbnz	w0, #31, 410904 <wcrtomb@plt+0xbe14>
  41076c:	mov	w22, w0
  410770:	mov	w23, wzr
  410774:	mov	w21, wzr
  410778:	b	410700 <wcrtomb@plt+0xbc10>
  41077c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410780:	ldr	x0, [x8, #3224]
  410784:	cmp	x0, #0x1
  410788:	str	x0, [sp, #16]
  41078c:	b.lt	41072c <wcrtomb@plt+0xbc3c>  // b.tstop
  410790:	bl	404d8c <wcrtomb@plt+0x29c>
  410794:	bl	405310 <wcrtomb@plt+0x820>
  410798:	cbz	x0, 41090c <wcrtomb@plt+0xbe1c>
  41079c:	mov	x25, x0
  4107a0:	bl	405684 <wcrtomb@plt+0xb94>
  4107a4:	ldr	x8, [sp, #16]
  4107a8:	cmp	x0, x8
  4107ac:	csel	x24, x8, x0, hi  // hi = pmore
  4107b0:	bl	4049c0 <__errno_location@plt>
  4107b4:	str	wzr, [x0]
  4107b8:	mov	w0, w22
  4107bc:	mov	x1, x25
  4107c0:	mov	x2, x24
  4107c4:	bl	41c9b4 <wcrtomb@plt+0x17ec4>
  4107c8:	ldr	x8, [sp, #16]
  4107cc:	add	x9, x25, x24
  4107d0:	mov	x26, x0
  4107d4:	sub	x0, x9, #0x1
  4107d8:	sub	x8, x8, x24
  4107dc:	str	x8, [sp, #16]
  4107e0:	bl	405640 <wcrtomb@plt+0xb50>
  4107e4:	cmp	x26, x24
  4107e8:	b.ne	410950 <wcrtomb@plt+0xbe60>  // b.any
  4107ec:	ldr	x0, [sp, #16]
  4107f0:	cmp	x0, #0x1
  4107f4:	b.ge	410790 <wcrtomb@plt+0xbca0>  // b.tcont
  4107f8:	b	41072c <wcrtomb@plt+0xbc3c>
  4107fc:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410800:	ldr	x8, [x24, #3608]
  410804:	cbz	x8, 4108a4 <wcrtomb@plt+0xbdb4>
  410808:	mov	w0, w22
  41080c:	bl	4044d0 <close@plt>
  410810:	mov	w20, w0
  410814:	tbnz	w0, #31, 4108ec <wcrtomb@plt+0xbdfc>
  410818:	ldr	x8, [x24, #3608]
  41081c:	cbnz	x8, 4108fc <wcrtomb@plt+0xbe0c>
  410820:	b	410bac <wcrtomb@plt+0xc0bc>
  410824:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410828:	ldr	w10, [x10, #3648]
  41082c:	mov	w25, #0x1                   	// #1
  410830:	strb	wzr, [sp, #12]
  410834:	cmp	w10, #0x1
  410838:	b.lt	410994 <wcrtomb@plt+0xbea4>  // b.tstop
  41083c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410840:	ldr	x10, [x10, #3416]
  410844:	cbz	x10, 410994 <wcrtomb@plt+0xbea4>
  410848:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41084c:	ldr	w10, [x10, #1004]
  410850:	and	w8, w8, #0x1ff
  410854:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410858:	bic	w8, w8, w10
  41085c:	eor	w22, w8, w9
  410860:	ldr	w1, [x20, #1864]
  410864:	add	x4, sp, #0x10
  410868:	mov	w0, wzr
  41086c:	mov	x2, x19
  410870:	mov	w3, w22
  410874:	str	xzr, [sp, #16]
  410878:	bl	404390 <__xmknodat@plt>
  41087c:	cbz	w0, 410970 <wcrtomb@plt+0xbe80>
  410880:	add	x2, sp, #0xc
  410884:	mov	x0, x19
  410888:	mov	w1, wzr
  41088c:	bl	41149c <wcrtomb@plt+0xc9ac>
  410890:	cmp	w0, #0x2
  410894:	b.eq	410990 <wcrtomb@plt+0xbea0>  // b.none
  410898:	cbnz	w0, 410860 <wcrtomb@plt+0xbd70>
  41089c:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  4108a0:	b	410ba0 <wcrtomb@plt+0xc0b0>
  4108a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4108a8:	ldr	w8, [x8, #3744]
  4108ac:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4108b0:	add	x1, x1, #0xc10
  4108b4:	mov	x0, x19
  4108b8:	cmp	w8, #0x2
  4108bc:	cset	w8, ne  // ne = any
  4108c0:	lsl	w7, w8, #8
  4108c4:	mov	w2, w22
  4108c8:	mov	w3, w23
  4108cc:	mov	w4, w21
  4108d0:	mov	w5, w27
  4108d4:	mov	w6, wzr
  4108d8:	bl	410128 <wcrtomb@plt+0xb638>
  4108dc:	mov	w0, w22
  4108e0:	bl	4044d0 <close@plt>
  4108e4:	mov	w20, w0
  4108e8:	tbz	w0, #31, 410818 <wcrtomb@plt+0xbd28>
  4108ec:	mov	x0, x19
  4108f0:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  4108f4:	ldr	x8, [x24, #3608]
  4108f8:	cbz	x8, 410bac <wcrtomb@plt+0xc0bc>
  4108fc:	bl	4242d0 <wcrtomb@plt+0x1f7e0>
  410900:	b	410bac <wcrtomb@plt+0xc0bc>
  410904:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  410908:	b	410740 <wcrtomb@plt+0xbc50>
  41090c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410910:	ldr	x8, [x8, #4000]
  410914:	cbz	x8, 41091c <wcrtomb@plt+0xbe2c>
  410918:	blr	x8
  41091c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  410920:	add	x1, x1, #0x818
  410924:	mov	w2, #0x5                   	// #5
  410928:	mov	x0, xzr
  41092c:	bl	4048b0 <dcgettext@plt>
  410930:	mov	x2, x0
  410934:	mov	w0, wzr
  410938:	mov	w1, wzr
  41093c:	bl	403f60 <error@plt>
  410940:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410944:	mov	w9, #0x2                   	// #2
  410948:	str	w9, [x8, #2352]
  41094c:	b	41072c <wcrtomb@plt+0xbc3c>
  410950:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410954:	ldr	x8, [x8, #3608]
  410958:	cbnz	x8, 41072c <wcrtomb@plt+0xbc3c>
  41095c:	mov	x0, x19
  410960:	mov	x1, x26
  410964:	mov	x2, x24
  410968:	bl	42d8e4 <wcrtomb@plt+0x28df4>
  41096c:	b	41072c <wcrtomb@plt+0xbc3c>
  410970:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410974:	add	x0, x0, #0xc10
  410978:	mov	x1, x19
  41097c:	mov	w2, w27
  410980:	mov	w3, wzr
  410984:	bl	42bab8 <wcrtomb@plt+0x26fc8>
  410988:	mov	w25, wzr
  41098c:	b	410994 <wcrtomb@plt+0xbea4>
  410990:	mov	w25, #0x1                   	// #1
  410994:	mov	w26, #0x8b41                	// #35649
  410998:	mov	w28, #0x9c1                 	// #2497
  41099c:	movk	w26, #0x8, lsl #16
  4109a0:	cmp	w27, #0x37
  4109a4:	movk	w28, #0x8, lsl #16
  4109a8:	str	w27, [sp, #4]
  4109ac:	b.ne	410acc <wcrtomb@plt+0xbfdc>  // b.any
  4109b0:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4109b4:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4109b8:	b	4109ec <wcrtomb@plt+0xbefc>
  4109bc:	bl	4049c0 <__errno_location@plt>
  4109c0:	ldr	w20, [x0]
  4109c4:	mov	x23, x0
  4109c8:	mov	w0, w22
  4109cc:	bl	4044d0 <close@plt>
  4109d0:	str	w20, [x23]
  4109d4:	add	x2, sp, #0x8
  4109d8:	mov	w1, #0x1                   	// #1
  4109dc:	mov	x0, x19
  4109e0:	bl	41149c <wcrtomb@plt+0xc9ac>
  4109e4:	cmp	w0, #0x1
  4109e8:	b.ne	410b90 <wcrtomb@plt+0xc0a0>  // b.any
  4109ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4109f0:	ldrb	w8, [x8, #3568]
  4109f4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4109f8:	ldr	w23, [x9, #3744]
  4109fc:	add	w9, w28, #0x180
  410a00:	cmp	w8, #0x0
  410a04:	ldrb	w10, [x27, #996]
  410a08:	csel	w8, w26, w9, eq  // eq = none
  410a0c:	cmp	w23, #0x2
  410a10:	csel	w8, w8, w28, eq  // eq = none
  410a14:	and	w9, w8, w26
  410a18:	cmp	w25, #0x0
  410a1c:	csel	w22, w8, w9, ne  // ne = any
  410a20:	tbnz	w10, #0, 410a6c <wcrtomb@plt+0xbf7c>
  410a24:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  410a28:	ldrb	w8, [x8, #3712]
  410a2c:	mov	w9, #0x1                   	// #1
  410a30:	strb	w9, [x27, #996]
  410a34:	tbz	w8, #3, 410a6c <wcrtomb@plt+0xbf7c>
  410a38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410a3c:	ldr	x8, [x8, #4000]
  410a40:	cbz	x8, 410a48 <wcrtomb@plt+0xbf58>
  410a44:	blr	x8
  410a48:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  410a4c:	mov	w2, #0x5                   	// #5
  410a50:	mov	x0, xzr
  410a54:	add	x1, x1, #0xf80
  410a58:	bl	4048b0 <dcgettext@plt>
  410a5c:	mov	x2, x0
  410a60:	mov	w0, wzr
  410a64:	mov	w1, wzr
  410a68:	bl	403f60 <error@plt>
  410a6c:	ldr	w0, [x24, #1864]
  410a70:	mov	x1, x19
  410a74:	mov	w2, w22
  410a78:	mov	w3, w21
  410a7c:	bl	4049a0 <openat@plt>
  410a80:	tbnz	w0, #31, 4109d4 <wcrtomb@plt+0xbee4>
  410a84:	mov	w22, w0
  410a88:	cmp	w23, #0x2
  410a8c:	b.ne	410bd0 <wcrtomb@plt+0xc0e0>  // b.any
  410a90:	add	x2, sp, #0x10
  410a94:	mov	w0, wzr
  410a98:	mov	w1, w22
  410a9c:	bl	404890 <__fxstat@plt>
  410aa0:	cbnz	w0, 4109bc <wcrtomb@plt+0xbecc>
  410aa4:	ldr	w23, [sp, #32]
  410aa8:	and	w8, w23, #0xf000
  410aac:	cmp	w8, #0x8, lsl #12
  410ab0:	b.eq	410be4 <wcrtomb@plt+0xc0f4>  // b.none
  410ab4:	mov	w0, w22
  410ab8:	bl	4044d0 <close@plt>
  410abc:	bl	4049c0 <__errno_location@plt>
  410ac0:	mov	w8, #0x11                  	// #17
  410ac4:	str	w8, [x0]
  410ac8:	b	4109d4 <wcrtomb@plt+0xbee4>
  410acc:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410ad0:	adrp	x27, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410ad4:	b	410b08 <wcrtomb@plt+0xc018>
  410ad8:	bl	4049c0 <__errno_location@plt>
  410adc:	ldr	w20, [x0]
  410ae0:	mov	x23, x0
  410ae4:	mov	w0, w22
  410ae8:	bl	4044d0 <close@plt>
  410aec:	str	w20, [x23]
  410af0:	add	x2, sp, #0x8
  410af4:	mov	w1, #0x1                   	// #1
  410af8:	mov	x0, x19
  410afc:	bl	41149c <wcrtomb@plt+0xc9ac>
  410b00:	cmp	w0, #0x1
  410b04:	b.ne	410b90 <wcrtomb@plt+0xc0a0>  // b.any
  410b08:	ldrb	w8, [x24, #3568]
  410b0c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410b10:	ldr	w23, [x9, #3744]
  410b14:	add	w9, w28, #0x180
  410b18:	cmp	w8, #0x0
  410b1c:	ldr	w0, [x27, #1864]
  410b20:	csel	w8, w26, w9, eq  // eq = none
  410b24:	cmp	w23, #0x2
  410b28:	csel	w8, w8, w28, eq  // eq = none
  410b2c:	and	w9, w8, w26
  410b30:	cmp	w25, #0x0
  410b34:	csel	w2, w8, w9, ne  // ne = any
  410b38:	mov	x1, x19
  410b3c:	mov	w3, w21
  410b40:	bl	4049a0 <openat@plt>
  410b44:	tbnz	w0, #31, 410af0 <wcrtomb@plt+0xc000>
  410b48:	mov	w22, w0
  410b4c:	cmp	w23, #0x2
  410b50:	b.ne	410bd0 <wcrtomb@plt+0xc0e0>  // b.any
  410b54:	add	x2, sp, #0x10
  410b58:	mov	w0, wzr
  410b5c:	mov	w1, w22
  410b60:	bl	404890 <__fxstat@plt>
  410b64:	cbnz	w0, 410ad8 <wcrtomb@plt+0xbfe8>
  410b68:	ldr	w23, [sp, #32]
  410b6c:	and	w8, w23, #0xf000
  410b70:	cmp	w8, #0x8, lsl #12
  410b74:	b.eq	410be4 <wcrtomb@plt+0xc0f4>  // b.none
  410b78:	mov	w0, w22
  410b7c:	bl	4044d0 <close@plt>
  410b80:	bl	4049c0 <__errno_location@plt>
  410b84:	mov	w8, #0x11                  	// #17
  410b88:	str	w8, [x0]
  410b8c:	b	410af0 <wcrtomb@plt+0xc000>
  410b90:	mov	w22, w0
  410b94:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  410b98:	cmp	w22, #0x2
  410b9c:	b.eq	410740 <wcrtomb@plt+0xbc50>  // b.none
  410ba0:	mov	x0, x19
  410ba4:	bl	42cbf8 <wcrtomb@plt+0x28108>
  410ba8:	mov	w20, #0x1                   	// #1
  410bac:	mov	w0, w20
  410bb0:	ldp	x20, x19, [sp, #224]
  410bb4:	ldp	x22, x21, [sp, #208]
  410bb8:	ldp	x24, x23, [sp, #192]
  410bbc:	ldp	x26, x25, [sp, #176]
  410bc0:	ldp	x28, x27, [sp, #160]
  410bc4:	ldp	x29, x30, [sp, #144]
  410bc8:	add	sp, sp, #0xf0
  410bcc:	ret
  410bd0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410bd4:	ldr	w8, [x8, #1004]
  410bd8:	bic	w23, w21, w8
  410bdc:	mov	w21, #0x1ff                 	// #511
  410be0:	b	410be8 <wcrtomb@plt+0xc0f8>
  410be4:	mov	w21, #0xffffffff            	// #-1
  410be8:	ldr	w27, [sp, #4]
  410bec:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410bf0:	b	410700 <wcrtomb@plt+0xbc10>
  410bf4:	sub	sp, sp, #0x170
  410bf8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410bfc:	ldrb	w8, [x8, #3077]
  410c00:	stp	x26, x25, [sp, #304]
  410c04:	stp	x20, x19, [sp, #352]
  410c08:	mov	w20, w1
  410c0c:	mov	x19, x0
  410c10:	adrp	x25, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410c14:	stp	x29, x30, [sp, #272]
  410c18:	stp	x28, x27, [sp, #288]
  410c1c:	stp	x24, x23, [sp, #320]
  410c20:	stp	x22, x21, [sp, #336]
  410c24:	add	x29, sp, #0x110
  410c28:	strb	wzr, [sp, #132]
  410c2c:	cbz	w8, 410c68 <wcrtomb@plt+0xc178>
  410c30:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410c34:	ldr	x8, [x21, #3816]
  410c38:	cbnz	x8, 410c68 <wcrtomb@plt+0xc178>
  410c3c:	ldr	w1, [x25, #1864]
  410c40:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x18e3c>
  410c44:	add	x2, x2, #0xfda
  410c48:	add	x3, sp, #0x88
  410c4c:	mov	w0, wzr
  410c50:	mov	w4, wzr
  410c54:	bl	404ad0 <__fxstatat@plt>
  410c58:	cbz	w0, 410c80 <wcrtomb@plt+0xc190>
  410c5c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  410c60:	add	x0, x0, #0xfda
  410c64:	bl	41d008 <wcrtomb@plt+0x18518>
  410c68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410c6c:	ldrb	w8, [x8, #3025]
  410c70:	cbz	w8, 410c94 <wcrtomb@plt+0xc1a4>
  410c74:	mov	x0, x19
  410c78:	bl	41762c <wcrtomb@plt+0x12b3c>
  410c7c:	b	410ca0 <wcrtomb@plt+0xc1b0>
  410c80:	ldr	x8, [sp, #136]
  410c84:	str	x8, [x21, #3816]
  410c88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410c8c:	ldrb	w8, [x8, #3025]
  410c90:	cbnz	w8, 410c74 <wcrtomb@plt+0xc184>
  410c94:	cmp	w20, #0x44
  410c98:	b.ne	410ca0 <wcrtomb@plt+0xc1b0>  // b.any
  410c9c:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  410ca0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410ca4:	ldr	w9, [x9, #3604]
  410ca8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410cac:	ldr	w10, [x10, #3972]
  410cb0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410cb4:	cmp	w9, #0x0
  410cb8:	ldr	w8, [x8, #3192]
  410cbc:	ccmp	w10, #0x0, #0x0, le
  410cc0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410cc4:	ldrb	w10, [x10, #992]
  410cc8:	mov	w11, #0x1ff                 	// #511
  410ccc:	mov	w9, #0x1c0                 	// #448
  410cd0:	csel	w9, w9, w11, gt
  410cd4:	mov	w11, #0xc0                  	// #192
  410cd8:	cmp	w10, #0x0
  410cdc:	and	w8, w9, w8
  410ce0:	csel	w9, w11, wzr, eq  // eq = none
  410ce4:	mov	w20, wzr
  410ce8:	mov	w21, wzr
  410cec:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410cf0:	orr	w23, w8, w9
  410cf4:	mov	w28, #0x11                  	// #17
  410cf8:	b	410d1c <wcrtomb@plt+0xc22c>
  410cfc:	mov	w21, #0xffffffff            	// #-1
  410d00:	str	w28, [x24]
  410d04:	add	x2, sp, #0x84
  410d08:	mov	x0, x19
  410d0c:	mov	w1, wzr
  410d10:	bl	41149c <wcrtomb@plt+0xc9ac>
  410d14:	cmp	w0, #0x1
  410d18:	b.ne	410e10 <wcrtomb@plt+0xc320>  // b.any
  410d1c:	ldr	w0, [x25, #1864]
  410d20:	mov	x1, x19
  410d24:	mov	w2, w23
  410d28:	bl	404160 <mkdirat@plt>
  410d2c:	mov	w22, w0
  410d30:	cbz	w0, 410df8 <wcrtomb@plt+0xc308>
  410d34:	bl	4049c0 <__errno_location@plt>
  410d38:	ldr	w8, [x0]
  410d3c:	mov	x24, x0
  410d40:	cmp	w8, #0x11
  410d44:	b.ne	410d04 <wcrtomb@plt+0xc214>  // b.any
  410d48:	ldrb	w26, [sp, #132]
  410d4c:	ldrb	w8, [x27, #3616]
  410d50:	cbz	w26, 410dc8 <wcrtomb@plt+0xc2d8>
  410d54:	cbz	w8, 410da4 <wcrtomb@plt+0xc2b4>
  410d58:	ldr	w1, [x25, #1864]
  410d5c:	add	x3, sp, #0x88
  410d60:	mov	w4, #0x100                 	// #256
  410d64:	mov	w0, wzr
  410d68:	mov	x2, x19
  410d6c:	bl	404ad0 <__fxstatat@plt>
  410d70:	cbnz	w0, 410da0 <wcrtomb@plt+0xc2b0>
  410d74:	ldr	w8, [sp, #152]
  410d78:	and	w8, w8, #0xf000
  410d7c:	cmp	w8, #0xa, lsl #12
  410d80:	b.ne	410da0 <wcrtomb@plt+0xc2b0>  // b.any
  410d84:	ldr	w1, [x25, #1864]
  410d88:	add	x3, sp, #0x88
  410d8c:	mov	w0, wzr
  410d90:	mov	x2, x19
  410d94:	mov	w4, wzr
  410d98:	bl	404ad0 <__fxstatat@plt>
  410d9c:	cbz	w0, 410de0 <wcrtomb@plt+0xc2f0>
  410da0:	str	w28, [x24]
  410da4:	mov	x1, sp
  410da8:	mov	x0, x19
  410dac:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  410db0:	cbnz	w0, 410d00 <wcrtomb@plt+0xc210>
  410db4:	ldr	w20, [sp, #16]
  410db8:	and	w8, w20, #0xf000
  410dbc:	cmp	w8, #0x4, lsl #12
  410dc0:	b.ne	410cfc <wcrtomb@plt+0xc20c>  // b.any
  410dc4:	b	410e84 <wcrtomb@plt+0xc394>
  410dc8:	cbnz	w8, 410d54 <wcrtomb@plt+0xc264>
  410dcc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410dd0:	ldr	w9, [x9, #3744]
  410dd4:	and	w9, w9, #0xfffffffd
  410dd8:	cbnz	w9, 410d04 <wcrtomb@plt+0xc214>
  410ddc:	b	410d54 <wcrtomb@plt+0xc264>
  410de0:	ldr	w8, [sp, #152]
  410de4:	str	w28, [x24]
  410de8:	and	w8, w8, #0xf000
  410dec:	cmp	w8, #0x4, lsl #12
  410df0:	b.ne	410da4 <wcrtomb@plt+0xc2b4>  // b.any
  410df4:	b	410ee4 <wcrtomb@plt+0xc3f4>
  410df8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410dfc:	ldr	w8, [x8, #1004]
  410e00:	mov	w21, #0x1ff                 	// #511
  410e04:	mov	w5, #0x100                 	// #256
  410e08:	bic	w20, w23, w8
  410e0c:	b	410e34 <wcrtomb@plt+0xc344>
  410e10:	cbnz	w0, 410e20 <wcrtomb@plt+0xc330>
  410e14:	ldr	w8, [x24]
  410e18:	cmp	w8, #0x11
  410e1c:	b.ne	410e74 <wcrtomb@plt+0xc384>  // b.any
  410e20:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410e24:	ldr	w8, [x8, #3744]
  410e28:	tst	w8, #0xfffffffd
  410e2c:	b.ne	410e50 <wcrtomb@plt+0xc360>  // b.any
  410e30:	mov	w5, wzr
  410e34:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410e38:	add	x1, x1, #0xc10
  410e3c:	ldr	w4, [x1, #104]
  410e40:	mov	x0, x19
  410e44:	mov	w2, w20
  410e48:	mov	w3, w21
  410e4c:	bl	411694 <wcrtomb@plt+0xcba4>
  410e50:	mov	w0, w22
  410e54:	ldp	x20, x19, [sp, #352]
  410e58:	ldp	x22, x21, [sp, #336]
  410e5c:	ldp	x24, x23, [sp, #320]
  410e60:	ldp	x26, x25, [sp, #304]
  410e64:	ldp	x28, x27, [sp, #288]
  410e68:	ldp	x29, x30, [sp, #272]
  410e6c:	add	sp, sp, #0x170
  410e70:	ret
  410e74:	mov	x0, x19
  410e78:	bl	42ca6c <wcrtomb@plt+0x27f7c>
  410e7c:	mov	w22, #0x1                   	// #1
  410e80:	b	410e50 <wcrtomb@plt+0xc360>
  410e84:	cbz	w26, 410f78 <wcrtomb@plt+0xc488>
  410e88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410e8c:	ldr	x20, [x8, #1008]
  410e90:	cbnz	x20, 410ef4 <wcrtomb@plt+0xc404>
  410e94:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410e98:	ldr	x8, [x8, #4000]
  410e9c:	cbz	x8, 410ea4 <wcrtomb@plt+0xc3b4>
  410ea0:	blr	x8
  410ea4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  410ea8:	add	x1, x1, #0xfc8
  410eac:	mov	w2, #0x5                   	// #5
  410eb0:	mov	x0, xzr
  410eb4:	bl	4048b0 <dcgettext@plt>
  410eb8:	mov	x20, x0
  410ebc:	mov	x0, x19
  410ec0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  410ec4:	mov	x3, x0
  410ec8:	mov	w0, wzr
  410ecc:	mov	w1, wzr
  410ed0:	mov	x2, x20
  410ed4:	bl	403f60 <error@plt>
  410ed8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410edc:	mov	w9, #0x2                   	// #2
  410ee0:	str	w9, [x8, #2352]
  410ee4:	mov	w22, wzr
  410ee8:	b	410e50 <wcrtomb@plt+0xc360>
  410eec:	ldr	x20, [x20]
  410ef0:	cbz	x20, 410e94 <wcrtomb@plt+0xc3a4>
  410ef4:	ldr	w1, [x25, #1864]
  410ef8:	ldr	x2, [x20, #160]
  410efc:	ldr	w4, [x20, #84]
  410f00:	add	x3, sp, #0x88
  410f04:	mov	w0, wzr
  410f08:	bl	404ad0 <__fxstatat@plt>
  410f0c:	cbnz	w0, 410f90 <wcrtomb@plt+0xc4a0>
  410f10:	ldr	x8, [sp, #136]
  410f14:	ldr	x9, [sp]
  410f18:	cmp	x8, x9
  410f1c:	b.ne	410eec <wcrtomb@plt+0xc3fc>  // b.any
  410f20:	ldr	x8, [sp, #144]
  410f24:	ldr	x9, [sp, #8]
  410f28:	cmp	x8, x9
  410f2c:	b.ne	410eec <wcrtomb@plt+0xc3fc>  // b.any
  410f30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410f34:	add	x8, x8, #0xc68
  410f38:	ldr	q0, [x8]
  410f3c:	mov	w22, wzr
  410f40:	stur	q0, [x20, #8]
  410f44:	ldr	w9, [x8, #16]
  410f48:	str	w9, [x20, #24]
  410f4c:	ldr	x9, [x8, #24]
  410f50:	stur	x9, [x20, #28]
  410f54:	ldr	q0, [x8, #128]
  410f58:	mov	w9, #0xffffffff            	// #-1
  410f5c:	stur	q0, [x20, #40]
  410f60:	ldr	q0, [x8, #144]
  410f64:	stur	q0, [x20, #56]
  410f68:	ldr	w8, [sp, #152]
  410f6c:	strb	wzr, [x20, #80]
  410f70:	stp	w8, w9, [x20, #72]
  410f74:	b	410e50 <wcrtomb@plt+0xc360>
  410f78:	mov	w21, #0xffffffff            	// #-1
  410f7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410f80:	ldr	w8, [x8, #3744]
  410f84:	tst	w8, #0xfffffffd
  410f88:	b.ne	410e50 <wcrtomb@plt+0xc360>  // b.any
  410f8c:	b	410e30 <wcrtomb@plt+0xc340>
  410f90:	ldr	x0, [x20, #160]
  410f94:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  410f98:	mov	w22, wzr
  410f9c:	b	410e50 <wcrtomb@plt+0xc360>
  410fa0:	sub	sp, sp, #0x30
  410fa4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410fa8:	ldrb	w8, [x8, #3944]
  410fac:	stp	x29, x30, [sp, #16]
  410fb0:	stp	x20, x19, [sp, #32]
  410fb4:	add	x29, sp, #0x10
  410fb8:	mov	x19, x0
  410fbc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  410fc0:	sturb	wzr, [x29, #-4]
  410fc4:	cbz	w8, 41101c <wcrtomb@plt+0xc52c>
  410fc8:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  410fcc:	ldr	x0, [x20, #3112]
  410fd0:	ldr	w1, [x8, #1864]
  410fd4:	mov	x2, x19
  410fd8:	bl	404930 <symlinkat@plt>
  410fdc:	cbz	w0, 411054 <wcrtomb@plt+0xc564>
  410fe0:	sub	x2, x29, #0x4
  410fe4:	mov	x0, x19
  410fe8:	mov	w1, wzr
  410fec:	bl	41149c <wcrtomb@plt+0xc9ac>
  410ff0:	cmp	w0, #0x2
  410ff4:	b.eq	41107c <wcrtomb@plt+0xc58c>  // b.none
  410ff8:	cbnz	w0, 410fc8 <wcrtomb@plt+0xc4d8>
  410ffc:	ldr	x0, [x20, #3112]
  411000:	mov	x1, x19
  411004:	bl	42d438 <wcrtomb@plt+0x28948>
  411008:	mov	w0, #0xffffffff            	// #-1
  41100c:	ldp	x20, x19, [sp, #32]
  411010:	ldp	x29, x30, [sp, #16]
  411014:	add	sp, sp, #0x30
  411018:	ret
  41101c:	ldr	x0, [x20, #3112]
  411020:	ldrb	w8, [x0]
  411024:	cmp	w8, #0x2f
  411028:	b.eq	411034 <wcrtomb@plt+0xc544>  // b.none
  41102c:	bl	41faf0 <wcrtomb@plt+0x1b000>
  411030:	tbz	w0, #0, 410fc8 <wcrtomb@plt+0xc4d8>
  411034:	sub	x2, x29, #0x4
  411038:	mov	w1, #0x1                   	// #1
  41103c:	mov	x0, x19
  411040:	bl	411850 <wcrtomb@plt+0xcd60>
  411044:	ldp	x20, x19, [sp, #32]
  411048:	ldp	x29, x30, [sp, #16]
  41104c:	add	sp, sp, #0x30
  411050:	ret
  411054:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411058:	add	x1, x1, #0xc10
  41105c:	mov	w2, #0xffffffff            	// #-1
  411060:	mov	w5, #0x32                  	// #50
  411064:	mov	w7, #0x100                 	// #256
  411068:	mov	x0, x19
  41106c:	mov	w3, wzr
  411070:	mov	w4, wzr
  411074:	mov	w6, wzr
  411078:	bl	410128 <wcrtomb@plt+0xb638>
  41107c:	mov	w0, wzr
  411080:	ldp	x20, x19, [sp, #32]
  411084:	ldp	x29, x30, [sp, #16]
  411088:	add	sp, sp, #0x30
  41108c:	ret
  411090:	sub	sp, sp, #0x150
  411094:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411098:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41109c:	stp	x20, x19, [sp, #320]
  4110a0:	ldrb	w9, [x9, #3944]
  4110a4:	ldr	x20, [x8, #3112]
  4110a8:	stp	x29, x30, [sp, #272]
  4110ac:	add	x29, sp, #0x110
  4110b0:	mov	x19, x0
  4110b4:	stp	x28, x23, [sp, #288]
  4110b8:	stp	x22, x21, [sp, #304]
  4110bc:	sturb	wzr, [x29, #-4]
  4110c0:	cbnz	w9, 4110e4 <wcrtomb@plt+0xc5f4>
  4110c4:	mov	x0, x20
  4110c8:	bl	41faf0 <wcrtomb@plt+0x1b000>
  4110cc:	tbz	w0, #0, 4110e4 <wcrtomb@plt+0xc5f4>
  4110d0:	sub	x2, x29, #0x4
  4110d4:	mov	x0, x19
  4110d8:	mov	w1, wzr
  4110dc:	bl	411850 <wcrtomb@plt+0xcd60>
  4110e0:	b	411278 <wcrtomb@plt+0xc788>
  4110e4:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4110e8:	b	411124 <wcrtomb@plt+0xc634>
  4110ec:	ldr	w1, [x23, #1864]
  4110f0:	add	x3, sp, #0x88
  4110f4:	mov	w4, #0x100                 	// #256
  4110f8:	mov	w0, wzr
  4110fc:	mov	x2, x20
  411100:	bl	404ad0 <__fxstatat@plt>
  411104:	cbz	w0, 41116c <wcrtomb@plt+0xc67c>
  411108:	sub	x2, x29, #0x4
  41110c:	mov	x0, x19
  411110:	mov	w1, wzr
  411114:	str	w22, [x21]
  411118:	bl	41149c <wcrtomb@plt+0xc9ac>
  41111c:	cmp	w0, #0x1
  411120:	b.ne	411254 <wcrtomb@plt+0xc764>  // b.any
  411124:	ldr	w0, [x23, #1864]
  411128:	mov	x1, x20
  41112c:	mov	x3, x19
  411130:	mov	w4, wzr
  411134:	mov	w2, w0
  411138:	bl	403ff0 <linkat@plt>
  41113c:	mov	w22, w0
  411140:	bl	4049c0 <__errno_location@plt>
  411144:	cbz	w22, 4111a8 <wcrtomb@plt+0xc6b8>
  411148:	ldr	w22, [x0]
  41114c:	mov	x21, x0
  411150:	cmp	w22, #0x11
  411154:	b.ne	4110ec <wcrtomb@plt+0xc5fc>  // b.any
  411158:	mov	x0, x20
  41115c:	mov	x1, x19
  411160:	bl	404610 <strcmp@plt>
  411164:	cbnz	w0, 4110ec <wcrtomb@plt+0xc5fc>
  411168:	b	411274 <wcrtomb@plt+0xc784>
  41116c:	ldr	w1, [x23, #1864]
  411170:	add	x3, sp, #0x8
  411174:	mov	w4, #0x100                 	// #256
  411178:	mov	x2, x19
  41117c:	bl	404ad0 <__fxstatat@plt>
  411180:	cbnz	w0, 411108 <wcrtomb@plt+0xc618>
  411184:	ldr	x8, [sp, #136]
  411188:	ldr	x9, [sp, #8]
  41118c:	cmp	x8, x9
  411190:	b.ne	411108 <wcrtomb@plt+0xc618>  // b.any
  411194:	ldr	x8, [sp, #144]
  411198:	ldr	x9, [sp, #16]
  41119c:	cmp	x8, x9
  4111a0:	b.ne	411108 <wcrtomb@plt+0xc618>  // b.any
  4111a4:	b	411274 <wcrtomb@plt+0xc784>
  4111a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4111ac:	ldr	x21, [x8, #1016]
  4111b0:	cbz	x21, 411274 <wcrtomb@plt+0xc784>
  4111b4:	ldr	w1, [x23, #1864]
  4111b8:	add	x3, sp, #0x88
  4111bc:	mov	w4, #0x100                 	// #256
  4111c0:	mov	w0, wzr
  4111c4:	mov	x2, x20
  4111c8:	bl	404ad0 <__fxstatat@plt>
  4111cc:	cbnz	w0, 411274 <wcrtomb@plt+0xc784>
  4111d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4111d4:	ldr	w8, [x8, #2992]
  4111d8:	ldp	x9, x10, [sp, #136]
  4111dc:	b	4111e8 <wcrtomb@plt+0xc6f8>
  4111e0:	ldr	x21, [x21]
  4111e4:	cbz	x21, 411274 <wcrtomb@plt+0xc784>
  4111e8:	ldr	w11, [x21, #88]
  4111ec:	cmp	w11, w8
  4111f0:	b.ne	4111e0 <wcrtomb@plt+0xc6f0>  // b.any
  4111f4:	ldr	x11, [x21, #8]
  4111f8:	cmp	x11, x9
  4111fc:	b.ne	4111e0 <wcrtomb@plt+0xc6f0>  // b.any
  411200:	ldr	x11, [x21, #16]
  411204:	cmp	x11, x10
  411208:	b.ne	4111e0 <wcrtomb@plt+0xc6f0>  // b.any
  41120c:	ldr	x11, [x21, #24]
  411210:	cmn	x11, #0x1
  411214:	b.ne	4111e0 <wcrtomb@plt+0xc6f0>  // b.any
  411218:	ldr	x11, [x21, #32]
  41121c:	cmn	w11, #0x1
  411220:	b.ne	4111e0 <wcrtomb@plt+0xc6f0>  // b.any
  411224:	mov	x0, x19
  411228:	bl	403f00 <strlen@plt>
  41122c:	add	x0, x0, #0x9
  411230:	bl	44a010 <argp_parse@@Base+0xf964>
  411234:	mov	x20, x0
  411238:	add	x0, x0, #0x8
  41123c:	mov	x1, x19
  411240:	bl	4047f0 <strcpy@plt>
  411244:	ldr	x8, [x21, #96]
  411248:	str	x8, [x20]
  41124c:	str	x20, [x21, #96]
  411250:	b	411274 <wcrtomb@plt+0xc784>
  411254:	cmp	w0, #0x2
  411258:	b.eq	411274 <wcrtomb@plt+0xc784>  // b.none
  41125c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411260:	ldrb	w8, [x8, #3025]
  411264:	cbz	w8, 411290 <wcrtomb@plt+0xc7a0>
  411268:	ldr	w8, [x21]
  41126c:	cmp	w8, #0x11
  411270:	b.ne	411290 <wcrtomb@plt+0xc7a0>  // b.any
  411274:	mov	w0, wzr
  411278:	ldp	x20, x19, [sp, #320]
  41127c:	ldp	x22, x21, [sp, #304]
  411280:	ldp	x28, x23, [sp, #288]
  411284:	ldp	x29, x30, [sp, #272]
  411288:	add	sp, sp, #0x150
  41128c:	ret
  411290:	mov	x0, x20
  411294:	mov	x1, x19
  411298:	bl	42c9d8 <wcrtomb@plt+0x27ee8>
  41129c:	mov	w0, #0x1                   	// #1
  4112a0:	b	411278 <wcrtomb@plt+0xc788>
  4112a4:	sub	sp, sp, #0x50
  4112a8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4112ac:	ldr	w9, [x9, #3972]
  4112b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4112b4:	ldr	w8, [x8, #3192]
  4112b8:	mov	w10, #0xffffffc0            	// #-64
  4112bc:	cmp	w9, #0x0
  4112c0:	csinv	w9, w10, wzr, gt
  4112c4:	mov	w11, #0x61ff                	// #25087
  4112c8:	and	w8, w8, w9
  4112cc:	stp	x29, x30, [sp, #16]
  4112d0:	str	x23, [sp, #32]
  4112d4:	stp	x22, x21, [sp, #48]
  4112d8:	stp	x20, x19, [sp, #64]
  4112dc:	add	x29, sp, #0x10
  4112e0:	mov	w19, w1
  4112e4:	mov	x20, x0
  4112e8:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4112ec:	and	w21, w8, w11
  4112f0:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4112f4:	sturb	wzr, [x29, #-4]
  4112f8:	ldr	x8, [x23, #3208]
  4112fc:	ldr	w1, [x22, #1864]
  411300:	add	x4, x29, #0x18
  411304:	mov	w0, wzr
  411308:	mov	x2, x20
  41130c:	mov	w3, w21
  411310:	str	x8, [x29, #24]
  411314:	bl	404390 <__xmknodat@plt>
  411318:	cbz	w0, 411348 <wcrtomb@plt+0xc858>
  41131c:	sub	x2, x29, #0x4
  411320:	mov	x0, x20
  411324:	mov	w1, wzr
  411328:	bl	41149c <wcrtomb@plt+0xc9ac>
  41132c:	cmp	w0, #0x2
  411330:	b.eq	411378 <wcrtomb@plt+0xc888>  // b.none
  411334:	cbnz	w0, 4112f8 <wcrtomb@plt+0xc808>
  411338:	mov	x0, x20
  41133c:	bl	42cb74 <wcrtomb@plt+0x28084>
  411340:	mov	w0, #0xffffffff            	// #-1
  411344:	b	41137c <wcrtomb@plt+0xc88c>
  411348:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41134c:	ldr	w8, [x8, #1004]
  411350:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411354:	add	x1, x1, #0xc10
  411358:	mov	w2, #0xffffffff            	// #-1
  41135c:	bic	w3, w21, w8
  411360:	mov	w4, #0x1ff                 	// #511
  411364:	mov	w7, #0x100                 	// #256
  411368:	mov	x0, x20
  41136c:	mov	w5, w19
  411370:	mov	w6, wzr
  411374:	bl	410128 <wcrtomb@plt+0xb638>
  411378:	mov	w0, wzr
  41137c:	ldp	x20, x19, [sp, #64]
  411380:	ldp	x22, x21, [sp, #48]
  411384:	ldr	x23, [sp, #32]
  411388:	ldp	x29, x30, [sp, #16]
  41138c:	add	sp, sp, #0x50
  411390:	ret
  411394:	sub	sp, sp, #0x40
  411398:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41139c:	ldr	w8, [x8, #3972]
  4113a0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4113a4:	ldr	w9, [x9, #3192]
  4113a8:	mov	w10, #0xffffffc0            	// #-64
  4113ac:	cmp	w8, #0x0
  4113b0:	csinv	w8, w10, wzr, gt
  4113b4:	and	w8, w9, w8
  4113b8:	stp	x29, x30, [sp, #16]
  4113bc:	stp	x22, x21, [sp, #32]
  4113c0:	stp	x20, x19, [sp, #48]
  4113c4:	add	x29, sp, #0x10
  4113c8:	mov	w19, w1
  4113cc:	mov	x20, x0
  4113d0:	and	w21, w8, #0x1ff
  4113d4:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  4113d8:	sturb	wzr, [x29, #-4]
  4113dc:	ldr	w0, [x22, #1864]
  4113e0:	mov	x1, x20
  4113e4:	mov	w2, w21
  4113e8:	bl	4048c0 <mkfifoat@plt>
  4113ec:	cbz	w0, 41141c <wcrtomb@plt+0xc92c>
  4113f0:	sub	x2, x29, #0x4
  4113f4:	mov	x0, x20
  4113f8:	mov	w1, wzr
  4113fc:	bl	41149c <wcrtomb@plt+0xc9ac>
  411400:	cmp	w0, #0x2
  411404:	b.eq	41144c <wcrtomb@plt+0xc95c>  // b.none
  411408:	cbnz	w0, 4113dc <wcrtomb@plt+0xc8ec>
  41140c:	mov	x0, x20
  411410:	bl	42caf0 <wcrtomb@plt+0x28000>
  411414:	mov	w0, #0xffffffff            	// #-1
  411418:	b	411450 <wcrtomb@plt+0xc960>
  41141c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411420:	ldr	w8, [x8, #1004]
  411424:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411428:	add	x1, x1, #0xc10
  41142c:	mov	w2, #0xffffffff            	// #-1
  411430:	bic	w3, w21, w8
  411434:	mov	w4, #0x1ff                 	// #511
  411438:	mov	w7, #0x100                 	// #256
  41143c:	mov	x0, x20
  411440:	mov	w5, w19
  411444:	mov	w6, wzr
  411448:	bl	410128 <wcrtomb@plt+0xb638>
  41144c:	mov	w0, wzr
  411450:	ldp	x20, x19, [sp, #48]
  411454:	ldp	x22, x21, [sp, #32]
  411458:	ldp	x29, x30, [sp, #16]
  41145c:	add	sp, sp, #0x40
  411460:	ret
  411464:	stp	x29, x30, [sp, #-16]!
  411468:	mov	x29, sp
  41146c:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  411470:	mov	w0, wzr
  411474:	ldp	x29, x30, [sp], #16
  411478:	ret
  41147c:	stp	x29, x30, [sp, #-16]!
  411480:	mov	x29, sp
  411484:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  411488:	mov	w0, wzr
  41148c:	ldp	x29, x30, [sp], #16
  411490:	ret
  411494:	mov	w0, #0x1                   	// #1
  411498:	ret
  41149c:	sub	sp, sp, #0x150
  4114a0:	stp	x29, x30, [sp, #256]
  4114a4:	str	x28, [sp, #272]
  4114a8:	stp	x24, x23, [sp, #288]
  4114ac:	stp	x22, x21, [sp, #304]
  4114b0:	stp	x20, x19, [sp, #320]
  4114b4:	add	x29, sp, #0x100
  4114b8:	mov	x20, x2
  4114bc:	mov	w22, w1
  4114c0:	mov	x19, x0
  4114c4:	bl	4049c0 <__errno_location@plt>
  4114c8:	ldrb	w8, [x20]
  4114cc:	cbz	w8, 4114d8 <wcrtomb@plt+0xc9e8>
  4114d0:	mov	w0, wzr
  4114d4:	b	4115b4 <wcrtomb@plt+0xcac4>
  4114d8:	ldr	w23, [x0]
  4114dc:	mov	x21, x0
  4114e0:	sub	w8, w23, #0x2
  4114e4:	cmp	w8, #0x26
  4114e8:	b.hi	411508 <wcrtomb@plt+0xca18>  // b.pmore
  4114ec:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4114f0:	add	x9, x9, #0xdc0
  4114f4:	adr	x10, 411510 <wcrtomb@plt+0xca20>
  4114f8:	ldrb	w11, [x9, x8]
  4114fc:	add	x10, x10, x11, lsl #2
  411500:	mov	x24, xzr
  411504:	br	x10
  411508:	cmp	w23, #0x5f
  41150c:	b.ne	4115ac <wcrtomb@plt+0xcabc>  // b.any
  411510:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411514:	ldr	w8, [x8, #3744]
  411518:	cmp	w8, #0x2
  41151c:	b.ne	4115ac <wcrtomb@plt+0xcabc>  // b.any
  411520:	tbz	w22, #0, 4115ac <wcrtomb@plt+0xcabc>
  411524:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411528:	ldrb	w8, [x8, #3568]
  41152c:	cbnz	w8, 4115ac <wcrtomb@plt+0xcabc>
  411530:	mov	w1, #0x2f                  	// #47
  411534:	mov	x0, x19
  411538:	bl	404750 <strchr@plt>
  41153c:	cbz	x0, 411558 <wcrtomb@plt+0xca68>
  411540:	mov	x1, sp
  411544:	mov	x0, x19
  411548:	mov	x24, sp
  41154c:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  411550:	cbnz	w0, 4115ac <wcrtomb@plt+0xcabc>
  411554:	b	41155c <wcrtomb@plt+0xca6c>
  411558:	mov	x24, xzr
  41155c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411560:	ldr	w8, [x8, #3744]
  411564:	cmp	w8, #0x6
  411568:	b.hi	41159c <wcrtomb@plt+0xcaac>  // b.pmore
  41156c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x15e3c>
  411570:	add	x9, x9, #0xde7
  411574:	adr	x10, 411588 <wcrtomb@plt+0xca98>
  411578:	ldrb	w11, [x9, x8]
  41157c:	add	x10, x10, x11, lsl #2
  411580:	mov	w0, wzr
  411584:	br	x10
  411588:	mov	x0, x19
  41158c:	mov	w1, wzr
  411590:	bl	41c240 <wcrtomb@plt+0x17750>
  411594:	cmp	w0, #0x0
  411598:	b.gt	4115d8 <wcrtomb@plt+0xcae8>
  41159c:	mov	x0, x19
  4115a0:	mov	x1, x20
  4115a4:	bl	40ff84 <wcrtomb@plt+0xb494>
  4115a8:	cbz	w0, 4115d0 <wcrtomb@plt+0xcae0>
  4115ac:	mov	w0, wzr
  4115b0:	str	w23, [x21]
  4115b4:	ldp	x20, x19, [sp, #320]
  4115b8:	ldp	x22, x21, [sp, #304]
  4115bc:	ldp	x24, x23, [sp, #288]
  4115c0:	ldr	x28, [sp, #272]
  4115c4:	ldp	x29, x30, [sp, #256]
  4115c8:	add	sp, sp, #0x150
  4115cc:	ret
  4115d0:	ldrb	w8, [x20]
  4115d4:	cbz	w8, 4115ac <wcrtomb@plt+0xcabc>
  4115d8:	mov	w0, #0x1                   	// #1
  4115dc:	b	4115b4 <wcrtomb@plt+0xcac4>
  4115e0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4115e4:	ldrb	w8, [x8, #3714]
  4115e8:	tbnz	w8, #4, 411628 <wcrtomb@plt+0xcb38>
  4115ec:	mov	w0, #0x2                   	// #2
  4115f0:	b	4115b4 <wcrtomb@plt+0xcac4>
  4115f4:	cbz	x24, 411668 <wcrtomb@plt+0xcb78>
  4115f8:	ldr	w8, [x24, #16]
  4115fc:	and	w8, w8, #0xf000
  411600:	cmp	w8, #0x4, lsl #12
  411604:	b.eq	411588 <wcrtomb@plt+0xca98>  // b.none
  411608:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41160c:	add	x8, x8, #0xcf8
  411610:	ldp	x2, x3, [x24, #88]
  411614:	ldp	x0, x1, [x8]
  411618:	bl	426058 <wcrtomb@plt+0x21568>
  41161c:	cmp	w0, #0x1
  411620:	b.ge	411588 <wcrtomb@plt+0xca98>  // b.tcont
  411624:	b	41159c <wcrtomb@plt+0xcaac>
  411628:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41162c:	ldr	x8, [x8, #4000]
  411630:	cbz	x8, 411638 <wcrtomb@plt+0xcb48>
  411634:	blr	x8
  411638:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41163c:	add	x1, x1, #0xfad
  411640:	mov	w2, #0x5                   	// #5
  411644:	mov	x0, xzr
  411648:	bl	4048b0 <dcgettext@plt>
  41164c:	mov	x2, x0
  411650:	mov	w0, wzr
  411654:	mov	w1, wzr
  411658:	mov	x3, x19
  41165c:	bl	403f60 <error@plt>
  411660:	mov	w0, #0x2                   	// #2
  411664:	b	4115b4 <wcrtomb@plt+0xcac4>
  411668:	add	x1, sp, #0x80
  41166c:	mov	x0, x19
  411670:	add	x24, sp, #0x80
  411674:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  411678:	cbz	w0, 4115f8 <wcrtomb@plt+0xcb08>
  41167c:	ldr	w8, [x21]
  411680:	cmp	w8, #0x2
  411684:	b.eq	411588 <wcrtomb@plt+0xca98>  // b.none
  411688:	mov	x0, x19
  41168c:	bl	42d568 <wcrtomb@plt+0x28a78>
  411690:	b	41159c <wcrtomb@plt+0xcaac>
  411694:	sub	sp, sp, #0xe0
  411698:	stp	x29, x30, [sp, #128]
  41169c:	str	x27, [sp, #144]
  4116a0:	stp	x26, x25, [sp, #160]
  4116a4:	stp	x24, x23, [sp, #176]
  4116a8:	stp	x22, x21, [sp, #192]
  4116ac:	stp	x20, x19, [sp, #208]
  4116b0:	add	x29, sp, #0x80
  4116b4:	mov	w22, w5
  4116b8:	mov	w26, w4
  4116bc:	mov	w23, w3
  4116c0:	mov	w24, w2
  4116c4:	mov	x21, x1
  4116c8:	mov	x20, x0
  4116cc:	bl	403f00 <strlen@plt>
  4116d0:	mov	x25, x0
  4116d4:	mov	w0, #0xa8                  	// #168
  4116d8:	bl	44a010 <argp_parse@@Base+0xf964>
  4116dc:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4116e0:	ldr	x8, [x27, #1008]
  4116e4:	mov	x19, x0
  4116e8:	str	w26, [x0, #24]
  4116ec:	str	x8, [x0]
  4116f0:	cbz	x21, 411714 <wcrtomb@plt+0xcc24>
  4116f4:	ldur	q0, [x21, #88]
  4116f8:	stur	q0, [x19, #8]
  4116fc:	ldr	x8, [x21, #112]
  411700:	stur	x8, [x19, #28]
  411704:	ldur	q0, [x21, #216]
  411708:	stur	q0, [x19, #40]
  41170c:	ldur	q0, [x21, #232]
  411710:	stur	q0, [x19, #56]
  411714:	cmp	x21, #0x0
  411718:	mov	x0, x20
  41171c:	cset	w26, eq  // eq = none
  411720:	str	x25, [x19, #152]
  411724:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  411728:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41172c:	ldr	w9, [x8, #2992]
  411730:	mov	x8, x19
  411734:	str	x0, [x19, #160]
  411738:	stp	w24, w23, [x19, #72]
  41173c:	strb	w26, [x19, #80]
  411740:	str	w22, [x19, #84]
  411744:	strb	wzr, [x19, #88]
  411748:	str	xzr, [x8, #96]!
  41174c:	stur	w9, [x8, #-4]
  411750:	cbz	x21, 41179c <wcrtomb@plt+0xccac>
  411754:	ldr	x1, [x21, #48]
  411758:	mov	x0, x8
  41175c:	bl	41b60c <wcrtomb@plt+0x16b1c>
  411760:	ldr	x0, [x21, #56]
  411764:	cbz	x0, 4117b0 <wcrtomb@plt+0xccc0>
  411768:	ldr	x8, [x21, #64]
  41176c:	add	x1, x8, #0x1
  411770:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  411774:	ldr	x8, [x21, #64]
  411778:	stp	x0, x8, [x19, #104]
  41177c:	ldr	x0, [x21, #72]
  411780:	cbz	x0, 4117bc <wcrtomb@plt+0xcccc>
  411784:	ldr	x8, [x21, #80]
  411788:	add	x1, x8, #0x1
  41178c:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  411790:	ldr	x8, [x21, #80]
  411794:	stp	x0, x8, [x19, #120]
  411798:	b	4117c0 <wcrtomb@plt+0xccd0>
  41179c:	movi	v0.2d, #0x0
  4117a0:	stur	q0, [x19, #136]
  4117a4:	stur	q0, [x19, #120]
  4117a8:	stur	q0, [x19, #104]
  4117ac:	b	4117d4 <wcrtomb@plt+0xcce4>
  4117b0:	stp	xzr, xzr, [x19, #104]
  4117b4:	ldr	x0, [x21, #72]
  4117b8:	cbnz	x0, 411784 <wcrtomb@plt+0xcc94>
  4117bc:	stp	xzr, xzr, [x19, #120]
  4117c0:	add	x1, x19, #0x90
  4117c4:	add	x2, x19, #0x88
  4117c8:	mov	x0, x21
  4117cc:	bl	4129cc <wcrtomb@plt+0xdedc>
  4117d0:	ldr	x0, [x19, #160]
  4117d4:	mov	x1, x20
  4117d8:	bl	4047f0 <strcpy@plt>
  4117dc:	mov	x0, x20
  4117e0:	str	x19, [x27, #1008]
  4117e4:	bl	41c1a4 <wcrtomb@plt+0x176b4>
  4117e8:	tbz	w0, #0, 411830 <wcrtomb@plt+0xcd40>
  4117ec:	mov	w20, #0x1                   	// #1
  4117f0:	ldr	x0, [x19, #160]
  4117f4:	mov	x1, sp
  4117f8:	strb	w20, [x19, #88]
  4117fc:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  411800:	cbz	w0, 411818 <wcrtomb@plt+0xcd28>
  411804:	ldr	x0, [x19, #160]
  411808:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  41180c:	ldr	x19, [x19]
  411810:	cbnz	x19, 411828 <wcrtomb@plt+0xcd38>
  411814:	b	411830 <wcrtomb@plt+0xcd40>
  411818:	ldr	q0, [sp]
  41181c:	stur	q0, [x19, #8]
  411820:	ldr	x19, [x19]
  411824:	cbz	x19, 411830 <wcrtomb@plt+0xcd40>
  411828:	ldrb	w8, [x19, #88]
  41182c:	cbz	w8, 4117f0 <wcrtomb@plt+0xcd00>
  411830:	ldp	x20, x19, [sp, #208]
  411834:	ldp	x22, x21, [sp, #192]
  411838:	ldp	x24, x23, [sp, #176]
  41183c:	ldp	x26, x25, [sp, #160]
  411840:	ldr	x27, [sp, #144]
  411844:	ldp	x29, x30, [sp, #128]
  411848:	add	sp, sp, #0xe0
  41184c:	ret
  411850:	sub	sp, sp, #0x150
  411854:	stp	x24, x23, [sp, #288]
  411858:	stp	x22, x21, [sp, #304]
  41185c:	stp	x20, x19, [sp, #320]
  411860:	mov	x21, x2
  411864:	mov	w20, w1
  411868:	mov	x19, x0
  41186c:	and	w23, w1, #0x1
  411870:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  411874:	stp	x29, x30, [sp, #256]
  411878:	str	x28, [sp, #272]
  41187c:	add	x29, sp, #0x100
  411880:	ldr	w0, [x24, #1864]
  411884:	mov	w2, #0xc1                  	// #193
  411888:	mov	x1, x19
  41188c:	mov	w3, wzr
  411890:	bl	4049a0 <openat@plt>
  411894:	tbz	w0, #31, 4118c0 <wcrtomb@plt+0xcdd0>
  411898:	mov	x0, x19
  41189c:	mov	w1, wzr
  4118a0:	mov	x2, x21
  4118a4:	bl	41149c <wcrtomb@plt+0xc9ac>
  4118a8:	cmp	w0, #0x2
  4118ac:	b.eq	4119e4 <wcrtomb@plt+0xcef4>  // b.none
  4118b0:	cbnz	w0, 411880 <wcrtomb@plt+0xcd90>
  4118b4:	mov	x0, x19
  4118b8:	bl	42cbf8 <wcrtomb@plt+0x28108>
  4118bc:	b	411900 <wcrtomb@plt+0xce10>
  4118c0:	mov	w22, w0
  4118c4:	mov	x2, sp
  4118c8:	mov	w0, wzr
  4118cc:	mov	w1, w22
  4118d0:	bl	404890 <__fxstat@plt>
  4118d4:	cbz	w0, 4118ec <wcrtomb@plt+0xcdfc>
  4118d8:	mov	x0, x19
  4118dc:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  4118e0:	mov	w0, w22
  4118e4:	bl	4044d0 <close@plt>
  4118e8:	b	411900 <wcrtomb@plt+0xce10>
  4118ec:	mov	w0, w22
  4118f0:	bl	4044d0 <close@plt>
  4118f4:	cbz	w0, 411908 <wcrtomb@plt+0xce18>
  4118f8:	mov	x0, x19
  4118fc:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  411900:	mov	w0, #0xffffffff            	// #-1
  411904:	b	4119e8 <wcrtomb@plt+0xcef8>
  411908:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41190c:	ldr	x0, [x8, #3112]
  411910:	bl	403f00 <strlen@plt>
  411914:	add	x0, x0, #0xa1
  411918:	bl	44a010 <argp_parse@@Base+0xf964>
  41191c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411920:	ldr	q0, [sp]
  411924:	ldr	x10, [x8, #1016]
  411928:	mov	x21, x0
  41192c:	mov	x9, #0xffffffffffffffff    	// #-1
  411930:	str	x0, [x8, #1016]
  411934:	stp	x9, x9, [x0, #24]
  411938:	stur	q0, [x0, #8]
  41193c:	str	x10, [x0]
  411940:	strb	w23, [x0, #40]
  411944:	tbz	w20, #0, 41196c <wcrtomb@plt+0xce7c>
  411948:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41194c:	add	x8, x8, #0xc78
  411950:	ldr	w9, [x8]
  411954:	ldr	x10, [x8, #8]
  411958:	ldp	q0, q1, [x8, #112]
  41195c:	str	w9, [x21, #44]
  411960:	str	x10, [x21, #48]
  411964:	stur	q0, [x21, #56]
  411968:	stur	q1, [x21, #72]
  41196c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411970:	ldr	w8, [x8, #2992]
  411974:	mov	x0, x19
  411978:	str	w8, [x21, #88]
  41197c:	bl	403f00 <strlen@plt>
  411980:	add	x0, x0, #0x9
  411984:	bl	44a010 <argp_parse@@Base+0xf964>
  411988:	str	x0, [x21, #96]
  41198c:	str	xzr, [x0], #8
  411990:	mov	x1, x19
  411994:	bl	4047f0 <strcpy@plt>
  411998:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41199c:	add	x20, x20, #0xc10
  4119a0:	ldr	x1, [x20, #48]
  4119a4:	str	xzr, [x21, #104]!
  4119a8:	mov	x0, x21
  4119ac:	bl	41b60c <wcrtomb@plt+0x16b1c>
  4119b0:	add	x1, x21, #0x30
  4119b4:	add	x2, x21, #0x28
  4119b8:	movi	v0.2d, #0x0
  4119bc:	mov	x0, x20
  4119c0:	stur	q0, [x21, #24]
  4119c4:	stur	q0, [x21, #8]
  4119c8:	bl	4129cc <wcrtomb@plt+0xdedc>
  4119cc:	ldr	x1, [x20, #24]
  4119d0:	add	x0, x21, #0x38
  4119d4:	bl	4047f0 <strcpy@plt>
  4119d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4119dc:	ldr	x22, [x8, #1008]
  4119e0:	cbnz	x22, 411a0c <wcrtomb@plt+0xcf1c>
  4119e4:	mov	w0, wzr
  4119e8:	ldp	x20, x19, [sp, #320]
  4119ec:	ldp	x22, x21, [sp, #304]
  4119f0:	ldp	x24, x23, [sp, #288]
  4119f4:	ldr	x28, [sp, #272]
  4119f8:	ldp	x29, x30, [sp, #256]
  4119fc:	add	sp, sp, #0x150
  411a00:	ret
  411a04:	ldr	x22, [x22]
  411a08:	cbz	x22, 4119e4 <wcrtomb@plt+0xcef4>
  411a0c:	ldrb	w8, [x22, #88]
  411a10:	cbnz	w8, 411a04 <wcrtomb@plt+0xcf14>
  411a14:	ldp	x21, x20, [x22, #152]
  411a18:	mov	x0, x19
  411a1c:	mov	x1, x20
  411a20:	mov	x2, x21
  411a24:	bl	4042c0 <strncmp@plt>
  411a28:	cbnz	w0, 411a04 <wcrtomb@plt+0xcf14>
  411a2c:	add	x21, x19, x21
  411a30:	ldrb	w8, [x21]
  411a34:	cmp	w8, #0x2f
  411a38:	b.ne	411a04 <wcrtomb@plt+0xcf14>  // b.any
  411a3c:	mov	x0, x19
  411a40:	bl	43c0fc <argp_parse@@Base+0x1a50>
  411a44:	add	x8, x21, #0x1
  411a48:	cmp	x0, x8
  411a4c:	b.ne	411a04 <wcrtomb@plt+0xcf14>  // b.any
  411a50:	mov	w19, #0x1                   	// #1
  411a54:	add	x1, sp, #0x80
  411a58:	mov	x0, x20
  411a5c:	strb	w19, [x22, #88]
  411a60:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  411a64:	cbz	w0, 411a74 <wcrtomb@plt+0xcf84>
  411a68:	ldr	x0, [x22, #160]
  411a6c:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  411a70:	b	411a7c <wcrtomb@plt+0xcf8c>
  411a74:	ldr	q0, [sp, #128]
  411a78:	stur	q0, [x22, #8]
  411a7c:	ldr	x22, [x22]
  411a80:	cbz	x22, 4119e4 <wcrtomb@plt+0xcef4>
  411a84:	ldrb	w8, [x22, #88]
  411a88:	cbnz	w8, 4119e4 <wcrtomb@plt+0xcef4>
  411a8c:	ldr	x20, [x22, #160]
  411a90:	b	411a54 <wcrtomb@plt+0xcf64>
  411a94:	stp	x29, x30, [sp, #-32]!
  411a98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411a9c:	stp	x20, x19, [sp, #16]
  411aa0:	ldr	x20, [x8, #1024]
  411aa4:	mov	x29, sp
  411aa8:	cbz	x20, 411acc <wcrtomb@plt+0xcfdc>
  411aac:	mov	x19, x0
  411ab0:	ldr	x0, [x20, #8]
  411ab4:	mov	x1, x19
  411ab8:	mov	w2, wzr
  411abc:	bl	4047a0 <fnmatch@plt>
  411ac0:	cbz	w0, 411adc <wcrtomb@plt+0xcfec>
  411ac4:	ldr	x20, [x20]
  411ac8:	cbnz	x20, 411ab0 <wcrtomb@plt+0xcfc0>
  411acc:	mov	w0, wzr
  411ad0:	ldp	x20, x19, [sp, #16]
  411ad4:	ldp	x29, x30, [sp], #32
  411ad8:	ret
  411adc:	mov	w0, #0x1                   	// #1
  411ae0:	ldp	x20, x19, [sp, #16]
  411ae4:	ldp	x29, x30, [sp], #32
  411ae8:	ret
  411aec:	sub	sp, sp, #0x70
  411af0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  411af4:	add	x1, x1, #0xbc0
  411af8:	stp	x29, x30, [sp, #16]
  411afc:	stp	x28, x27, [sp, #32]
  411b00:	stp	x26, x25, [sp, #48]
  411b04:	stp	x24, x23, [sp, #64]
  411b08:	stp	x22, x21, [sp, #80]
  411b0c:	stp	x20, x19, [sp, #96]
  411b10:	add	x29, sp, #0x10
  411b14:	bl	403ed0 <strtok@plt>
  411b18:	cbz	x0, 411ddc <wcrtomb@plt+0xd2ec>
  411b1c:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411b20:	adrp	x28, 461000 <_obstack_memory_used@@Base+0x15e3c>
  411b24:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411b28:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x1be3c>
  411b2c:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411b30:	mov	x26, x0
  411b34:	add	x19, x19, #0x596
  411b38:	add	x28, x28, #0x95f
  411b3c:	add	x22, x22, #0x68
  411b40:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411b44:	add	x20, x20, #0xbc0
  411b48:	add	x21, x21, #0x5bb
  411b4c:	b	411b74 <wcrtomb@plt+0xd084>
  411b50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411b54:	add	x0, x0, #0x408
  411b58:	mov	x1, x27
  411b5c:	bl	41b60c <wcrtomb@plt+0x16b1c>
  411b60:	mov	x0, xzr
  411b64:	mov	x1, x20
  411b68:	bl	403ed0 <strtok@plt>
  411b6c:	mov	x26, x0
  411b70:	cbz	x0, 411ddc <wcrtomb@plt+0xd2ec>
  411b74:	mov	w1, #0x3d                  	// #61
  411b78:	mov	x0, x26
  411b7c:	bl	404750 <strchr@plt>
  411b80:	cbz	x0, 411e2c <wcrtomb@plt+0xd33c>
  411b84:	mov	x27, x0
  411b88:	cmp	x0, x26
  411b8c:	b.eq	411e34 <wcrtomb@plt+0xd344>  // b.none
  411b90:	mov	x8, x27
  411b94:	ldrb	w23, [x8, #-1]!
  411b98:	cmp	w23, #0x3a
  411b9c:	csel	x24, x8, x27, eq  // eq = none
  411ba0:	cmp	x24, x26
  411ba4:	b.ls	411bc8 <wcrtomb@plt+0xd0d8>  // b.plast
  411ba8:	bl	404640 <__ctype_b_loc@plt>
  411bac:	ldr	x8, [x0]
  411bb0:	ldrb	w9, [x24]
  411bb4:	ldrh	w9, [x8, x9, lsl #1]
  411bb8:	tbz	w9, #13, 411bc8 <wcrtomb@plt+0xd0d8>
  411bbc:	sub	x24, x24, #0x1
  411bc0:	cmp	x24, x26
  411bc4:	b.hi	411bb0 <wcrtomb@plt+0xd0c0>  // b.pmore
  411bc8:	add	x8, x27, #0x1
  411bcc:	strb	wzr, [x24]
  411bd0:	ldrb	w24, [x8]
  411bd4:	mov	x27, x8
  411bd8:	cbz	x24, 411bf0 <wcrtomb@plt+0xd100>
  411bdc:	bl	404640 <__ctype_b_loc@plt>
  411be0:	ldr	x8, [x0]
  411be4:	ldrh	w9, [x8, x24, lsl #1]
  411be8:	add	x8, x27, #0x1
  411bec:	tbnz	w9, #13, 411bd0 <wcrtomb@plt+0xd0e0>
  411bf0:	mov	x0, x26
  411bf4:	mov	x1, x19
  411bf8:	bl	404610 <strcmp@plt>
  411bfc:	cbz	w0, 411c80 <wcrtomb@plt+0xd190>
  411c00:	mov	x0, x26
  411c04:	mov	x1, x21
  411c08:	bl	404610 <strcmp@plt>
  411c0c:	cbz	w0, 411b50 <wcrtomb@plt+0xd060>
  411c10:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411c14:	mov	x0, x26
  411c18:	add	x1, x1, #0x5b7
  411c1c:	bl	404610 <strcmp@plt>
  411c20:	cbz	w0, 411ce0 <wcrtomb@plt+0xd1f0>
  411c24:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411c28:	mov	x0, x26
  411c2c:	add	x1, x1, #0x5cb
  411c30:	bl	404610 <strcmp@plt>
  411c34:	cbz	w0, 411d28 <wcrtomb@plt+0xd238>
  411c38:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411c3c:	mov	x0, x26
  411c40:	add	x1, x1, #0x5c7
  411c44:	bl	404610 <strcmp@plt>
  411c48:	cbz	w0, 411d54 <wcrtomb@plt+0xd264>
  411c4c:	mov	x24, x22
  411c50:	mov	x0, x28
  411c54:	b	411c60 <wcrtomb@plt+0xd170>
  411c58:	ldr	x0, [x24], #32
  411c5c:	cbz	x0, 411cec <wcrtomb@plt+0xd1fc>
  411c60:	ldurb	w8, [x24, #-4]
  411c64:	cbnz	w8, 411c58 <wcrtomb@plt+0xd168>
  411c68:	ldurb	w8, [x24, #-8]
  411c6c:	tbz	w8, #0, 411c58 <wcrtomb@plt+0xd168>
  411c70:	mov	x1, x26
  411c74:	bl	404610 <strcmp@plt>
  411c78:	cbnz	w0, 411c58 <wcrtomb@plt+0xd168>
  411c7c:	b	411e80 <wcrtomb@plt+0xd390>
  411c80:	mov	x23, x22
  411c84:	mov	x1, x28
  411c88:	b	411c94 <wcrtomb@plt+0xd1a4>
  411c8c:	ldr	x1, [x23], #32
  411c90:	cbz	x1, 411cb8 <wcrtomb@plt+0xd1c8>
  411c94:	ldurb	w8, [x23, #-4]
  411c98:	cbnz	w8, 411c8c <wcrtomb@plt+0xd19c>
  411c9c:	ldurb	w8, [x23, #-8]
  411ca0:	tbz	w8, #0, 411c8c <wcrtomb@plt+0xd19c>
  411ca4:	mov	x0, x27
  411ca8:	mov	w2, wzr
  411cac:	bl	4047a0 <fnmatch@plt>
  411cb0:	cbnz	w0, 411c8c <wcrtomb@plt+0xd19c>
  411cb4:	b	411dfc <wcrtomb@plt+0xd30c>
  411cb8:	mov	w0, #0x18                  	// #24
  411cbc:	bl	44a010 <argp_parse@@Base+0xf964>
  411cc0:	mov	x24, x0
  411cc4:	mov	x0, x27
  411cc8:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  411ccc:	ldr	x8, [x25, #1024]
  411cd0:	stp	x0, xzr, [x24, #8]
  411cd4:	str	x24, [x25, #1024]
  411cd8:	str	x8, [x24]
  411cdc:	b	411b60 <wcrtomb@plt+0xd070>
  411ce0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411ce4:	add	x0, x0, #0x410
  411ce8:	b	411b58 <wcrtomb@plt+0xd068>
  411cec:	mov	w0, #0x18                  	// #24
  411cf0:	bl	44a010 <argp_parse@@Base+0xf964>
  411cf4:	mov	x24, x0
  411cf8:	mov	x0, x26
  411cfc:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  411d00:	str	x0, [x24, #8]
  411d04:	mov	x0, x27
  411d08:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  411d0c:	cmp	w23, #0x3a
  411d10:	str	x0, [x24, #16]
  411d14:	b.ne	411db8 <wcrtomb@plt+0xd2c8>  // b.any
  411d18:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411d1c:	ldr	x8, [x9, #1104]
  411d20:	str	x24, [x9, #1104]
  411d24:	b	411cd8 <wcrtomb@plt+0xd1e8>
  411d28:	add	x1, sp, #0x8
  411d2c:	mov	x0, x27
  411d30:	mov	w2, wzr
  411d34:	bl	41bf84 <wcrtomb@plt+0x17494>
  411d38:	tbnz	x1, #63, 411d74 <wcrtomb@plt+0xd284>
  411d3c:	ldr	x8, [sp, #8]
  411d40:	ldrb	w8, [x8]
  411d44:	cbnz	w8, 411d74 <wcrtomb@plt+0xd284>
  411d48:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411d4c:	add	x8, x8, #0x430
  411d50:	b	411dd0 <wcrtomb@plt+0xd2e0>
  411d54:	add	x1, sp, #0x8
  411d58:	mov	x0, x27
  411d5c:	mov	w2, wzr
  411d60:	bl	41bf84 <wcrtomb@plt+0x17494>
  411d64:	tbnz	x1, #63, 411d74 <wcrtomb@plt+0xd284>
  411d68:	ldr	x8, [sp, #8]
  411d6c:	ldrb	w8, [x8]
  411d70:	cbz	w8, 411dc8 <wcrtomb@plt+0xd2d8>
  411d74:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411d78:	ldr	x8, [x8, #4000]
  411d7c:	cbz	x8, 411d84 <wcrtomb@plt+0xd294>
  411d80:	blr	x8
  411d84:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411d88:	mov	w2, #0x5                   	// #5
  411d8c:	mov	x0, xzr
  411d90:	add	x1, x1, #0x5f8
  411d94:	bl	4048b0 <dcgettext@plt>
  411d98:	mov	x2, x0
  411d9c:	mov	w0, wzr
  411da0:	mov	w1, wzr
  411da4:	bl	403f60 <error@plt>
  411da8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411dac:	mov	w9, #0x2                   	// #2
  411db0:	str	w9, [x8, #2352]
  411db4:	b	411b60 <wcrtomb@plt+0xd070>
  411db8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411dbc:	ldr	x8, [x9, #1088]
  411dc0:	str	x24, [x9, #1088]
  411dc4:	b	411cd8 <wcrtomb@plt+0xd1e8>
  411dc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411dcc:	add	x8, x8, #0x420
  411dd0:	str	x0, [x8, #8]
  411dd4:	mov	x0, x8
  411dd8:	b	411b58 <wcrtomb@plt+0xd068>
  411ddc:	ldp	x20, x19, [sp, #96]
  411de0:	ldp	x22, x21, [sp, #80]
  411de4:	ldp	x24, x23, [sp, #64]
  411de8:	ldp	x26, x25, [sp, #48]
  411dec:	ldp	x28, x27, [sp, #32]
  411df0:	ldp	x29, x30, [sp, #16]
  411df4:	add	sp, sp, #0x70
  411df8:	ret
  411dfc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411e00:	ldr	x8, [x8, #4000]
  411e04:	cbz	x8, 411e0c <wcrtomb@plt+0xd31c>
  411e08:	blr	x8
  411e0c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411e10:	add	x1, x1, #0x59d
  411e14:	mov	w2, #0x5                   	// #5
  411e18:	mov	x0, xzr
  411e1c:	bl	4048b0 <dcgettext@plt>
  411e20:	mov	x19, x0
  411e24:	mov	x0, x27
  411e28:	b	411e60 <wcrtomb@plt+0xd370>
  411e2c:	mov	x0, x26
  411e30:	bl	411ec0 <wcrtomb@plt+0xd3d0>
  411e34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411e38:	ldr	x8, [x8, #4000]
  411e3c:	cbz	x8, 411e44 <wcrtomb@plt+0xd354>
  411e40:	blr	x8
  411e44:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411e48:	add	x1, x1, #0x57d
  411e4c:	mov	w2, #0x5                   	// #5
  411e50:	mov	x0, xzr
  411e54:	bl	4048b0 <dcgettext@plt>
  411e58:	mov	x19, x0
  411e5c:	mov	x0, x26
  411e60:	bl	449144 <argp_parse@@Base+0xea98>
  411e64:	mov	x3, x0
  411e68:	mov	w0, wzr
  411e6c:	mov	w1, wzr
  411e70:	mov	x2, x19
  411e74:	bl	403f60 <error@plt>
  411e78:	mov	w0, #0x2                   	// #2
  411e7c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  411e80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411e84:	ldr	x8, [x8, #4000]
  411e88:	cbz	x8, 411e90 <wcrtomb@plt+0xd3a0>
  411e8c:	blr	x8
  411e90:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411e94:	add	x1, x1, #0x5d8
  411e98:	mov	w2, #0x5                   	// #5
  411e9c:	mov	x0, xzr
  411ea0:	bl	4048b0 <dcgettext@plt>
  411ea4:	mov	x2, x0
  411ea8:	mov	w0, wzr
  411eac:	mov	w1, wzr
  411eb0:	mov	x3, x26
  411eb4:	bl	403f60 <error@plt>
  411eb8:	mov	w0, #0x2                   	// #2
  411ebc:	bl	42484c <wcrtomb@plt+0x1fd5c>
  411ec0:	stp	x29, x30, [sp, #-32]!
  411ec4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411ec8:	ldr	x8, [x8, #4000]
  411ecc:	str	x19, [sp, #16]
  411ed0:	mov	x19, x0
  411ed4:	mov	x29, sp
  411ed8:	cbz	x8, 411ee0 <wcrtomb@plt+0xd3f0>
  411edc:	blr	x8
  411ee0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411ee4:	add	x1, x1, #0x550
  411ee8:	mov	w2, #0x5                   	// #5
  411eec:	mov	x0, xzr
  411ef0:	bl	4048b0 <dcgettext@plt>
  411ef4:	mov	x2, x0
  411ef8:	mov	w0, wzr
  411efc:	mov	w1, wzr
  411f00:	mov	x3, x19
  411f04:	bl	403f60 <error@plt>
  411f08:	mov	w0, #0x2                   	// #2
  411f0c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  411f10:	sub	sp, sp, #0xb0
  411f14:	stp	x29, x30, [sp, #80]
  411f18:	add	x29, sp, #0x50
  411f1c:	add	x8, sp, #0x20
  411f20:	sub	x9, x29, #0x18
  411f24:	stp	x22, x21, [sp, #144]
  411f28:	mov	x22, x1
  411f2c:	add	x8, x8, #0x14
  411f30:	add	x21, x9, #0x14
  411f34:	stp	x28, x27, [sp, #96]
  411f38:	stp	x26, x25, [sp, #112]
  411f3c:	stp	x24, x23, [sp, #128]
  411f40:	stp	x20, x19, [sp, #160]
  411f44:	stp	x8, x2, [sp, #8]
  411f48:	cbz	x0, 41206c <wcrtomb@plt+0xd57c>
  411f4c:	adrp	x25, 462000 <_obstack_memory_used@@Base+0x16e3c>
  411f50:	mov	x26, x0
  411f54:	mov	x27, xzr
  411f58:	mov	x24, xzr
  411f5c:	mov	x23, xzr
  411f60:	mov	x20, xzr
  411f64:	mov	x19, xzr
  411f68:	add	x25, x25, #0x0
  411f6c:	mov	x8, x22
  411f70:	str	xzr, [sp, #24]
  411f74:	b	411f80 <wcrtomb@plt+0xd490>
  411f78:	add	x27, x27, #0x2
  411f7c:	add	x8, x28, #0x1
  411f80:	ldrb	w9, [x8]
  411f84:	cmp	w9, #0x25
  411f88:	b.eq	411fa0 <wcrtomb@plt+0xd4b0>  // b.none
  411f8c:	cbz	w9, 412140 <wcrtomb@plt+0xd650>
  411f90:	add	x27, x27, #0x1
  411f94:	mov	x28, x8
  411f98:	add	x8, x8, #0x1
  411f9c:	b	411f80 <wcrtomb@plt+0xd490>
  411fa0:	mov	x28, x8
  411fa4:	ldrb	w9, [x28, #1]!
  411fa8:	sub	w10, w9, #0x64
  411fac:	cmp	w10, #0xc
  411fb0:	b.hi	411ff0 <wcrtomb@plt+0xd500>  // b.pmore
  411fb4:	adr	x8, 411f78 <wcrtomb@plt+0xd488>
  411fb8:	ldrb	w9, [x25, x10]
  411fbc:	add	x8, x8, x9, lsl #2
  411fc0:	br	x8
  411fc4:	ldr	x0, [sp, #24]
  411fc8:	cbnz	x0, 411fd4 <wcrtomb@plt+0xd4e4>
  411fcc:	ldr	x0, [x26]
  411fd0:	bl	43bf94 <argp_parse@@Base+0x18e8>
  411fd4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  411fd8:	ldrb	w2, [x8, #3944]
  411fdc:	mov	w1, wzr
  411fe0:	str	x0, [sp, #24]
  411fe4:	bl	42da24 <wcrtomb@plt+0x28f34>
  411fe8:	mov	x24, x0
  411fec:	b	412014 <wcrtomb@plt+0xd524>
  411ff0:	cbz	w9, 411f90 <wcrtomb@plt+0xd4a0>
  411ff4:	cmp	w9, #0x25
  411ff8:	b.ne	411f78 <wcrtomb@plt+0xd488>  // b.any
  411ffc:	add	x27, x27, #0x1
  412000:	add	x8, x28, #0x1
  412004:	b	411f80 <wcrtomb@plt+0xd490>
  412008:	ldr	x0, [x26]
  41200c:	bl	43c0fc <argp_parse@@Base+0x1a50>
  412010:	mov	x23, x0
  412014:	bl	403f00 <strlen@plt>
  412018:	add	x27, x0, x27
  41201c:	add	x8, x28, #0x1
  412020:	b	411f80 <wcrtomb@plt+0xd490>
  412024:	ldr	x0, [sp, #16]
  412028:	add	x1, sp, #0x20
  41202c:	bl	440290 <argp_parse@@Base+0x5be4>
  412030:	ldr	x8, [sp, #8]
  412034:	mov	x19, x0
  412038:	add	x8, x27, x8
  41203c:	sub	x27, x8, x0
  412040:	add	x8, x28, #0x1
  412044:	b	411f80 <wcrtomb@plt+0xd490>
  412048:	bl	4041c0 <getpid@plt>
  41204c:	sub	x1, x29, #0x18
  412050:	sxtw	x0, w0
  412054:	bl	440290 <argp_parse@@Base+0x5be4>
  412058:	add	x8, x27, x21
  41205c:	mov	x20, x0
  412060:	sub	x27, x8, x0
  412064:	add	x8, x28, #0x1
  412068:	b	411f80 <wcrtomb@plt+0xd490>
  41206c:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412070:	mov	x27, xzr
  412074:	mov	x20, xzr
  412078:	mov	x19, xzr
  41207c:	add	x23, x23, #0xd
  412080:	mov	x8, x22
  412084:	b	412090 <wcrtomb@plt+0xd5a0>
  412088:	add	x27, x27, #0x2
  41208c:	add	x8, x24, #0x1
  412090:	ldrb	w9, [x8]
  412094:	cmp	w9, #0x25
  412098:	b.eq	4120b0 <wcrtomb@plt+0xd5c0>  // b.none
  41209c:	cbz	w9, 412134 <wcrtomb@plt+0xd644>
  4120a0:	add	x27, x27, #0x1
  4120a4:	mov	x24, x8
  4120a8:	add	x8, x8, #0x1
  4120ac:	b	412090 <wcrtomb@plt+0xd5a0>
  4120b0:	mov	x24, x8
  4120b4:	ldrb	w9, [x24, #1]!
  4120b8:	sub	w10, w9, #0x64
  4120bc:	cmp	w10, #0xc
  4120c0:	b.hi	4120f8 <wcrtomb@plt+0xd608>  // b.pmore
  4120c4:	adr	x8, 412088 <wcrtomb@plt+0xd598>
  4120c8:	ldrb	w9, [x23, x10]
  4120cc:	add	x8, x8, x9, lsl #2
  4120d0:	br	x8
  4120d4:	ldr	x0, [sp, #16]
  4120d8:	add	x1, sp, #0x20
  4120dc:	bl	440290 <argp_parse@@Base+0x5be4>
  4120e0:	ldr	x8, [sp, #8]
  4120e4:	mov	x19, x0
  4120e8:	add	x8, x27, x8
  4120ec:	sub	x27, x8, x0
  4120f0:	add	x8, x24, #0x1
  4120f4:	b	412090 <wcrtomb@plt+0xd5a0>
  4120f8:	cbz	w9, 4120a0 <wcrtomb@plt+0xd5b0>
  4120fc:	cmp	w9, #0x25
  412100:	b.ne	412088 <wcrtomb@plt+0xd598>  // b.any
  412104:	add	x27, x27, #0x1
  412108:	add	x8, x24, #0x1
  41210c:	b	412090 <wcrtomb@plt+0xd5a0>
  412110:	bl	4041c0 <getpid@plt>
  412114:	sub	x1, x29, #0x18
  412118:	sxtw	x0, w0
  41211c:	bl	440290 <argp_parse@@Base+0x5be4>
  412120:	add	x8, x27, x21
  412124:	mov	x20, x0
  412128:	sub	x27, x8, x0
  41212c:	add	x8, x24, #0x1
  412130:	b	412090 <wcrtomb@plt+0xd5a0>
  412134:	mov	x24, xzr
  412138:	mov	x23, xzr
  41213c:	str	xzr, [sp, #24]
  412140:	add	x0, x27, #0x1
  412144:	bl	44a010 <argp_parse@@Base+0xf964>
  412148:	mov	x25, x0
  41214c:	mov	w21, #0x25                  	// #37
  412150:	cbz	x23, 412220 <wcrtomb@plt+0xd730>
  412154:	cbz	x24, 4122e8 <wcrtomb@plt+0xd7f8>
  412158:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41215c:	add	x27, x27, #0x1a
  412160:	mov	x0, x25
  412164:	b	412178 <wcrtomb@plt+0xd688>
  412168:	mov	x0, x26
  41216c:	mov	x1, x24
  412170:	bl	404120 <stpcpy@plt>
  412174:	add	x22, x28, #0x2
  412178:	ldrb	w8, [x22]
  41217c:	mov	x28, x22
  412180:	mov	x26, x0
  412184:	cmp	w8, #0x25
  412188:	b.eq	4121a0 <wcrtomb@plt+0xd6b0>  // b.none
  41218c:	cbz	w8, 4123a4 <wcrtomb@plt+0xd8b4>
  412190:	strb	w8, [x26], #1
  412194:	add	x22, x28, #0x1
  412198:	mov	x0, x26
  41219c:	b	412178 <wcrtomb@plt+0xd688>
  4121a0:	mov	x22, x28
  4121a4:	ldrb	w9, [x22, #1]!
  4121a8:	sub	w8, w9, #0x64
  4121ac:	cmp	w8, #0xc
  4121b0:	b.hi	4121d0 <wcrtomb@plt+0xd6e0>  // b.pmore
  4121b4:	adr	x9, 412168 <wcrtomb@plt+0xd678>
  4121b8:	ldrb	w10, [x27, x8]
  4121bc:	add	x9, x9, x10, lsl #2
  4121c0:	br	x9
  4121c4:	mov	x0, x26
  4121c8:	mov	x1, x23
  4121cc:	b	412170 <wcrtomb@plt+0xd680>
  4121d0:	cmp	w9, #0x25
  4121d4:	b.ne	4121e8 <wcrtomb@plt+0xd6f8>  // b.any
  4121d8:	strb	w21, [x26], #1
  4121dc:	add	x22, x28, #0x2
  4121e0:	mov	x0, x26
  4121e4:	b	412178 <wcrtomb@plt+0xd688>
  4121e8:	mov	x0, x26
  4121ec:	strb	w21, [x0], #1
  4121f0:	ldrb	w8, [x22]
  4121f4:	cbz	w8, 412178 <wcrtomb@plt+0xd688>
  4121f8:	add	x22, x28, #0x2
  4121fc:	add	x0, x26, #0x2
  412200:	strb	w8, [x26, #1]
  412204:	b	412178 <wcrtomb@plt+0xd688>
  412208:	mov	x0, x26
  41220c:	mov	x1, x19
  412210:	b	412170 <wcrtomb@plt+0xd680>
  412214:	mov	x0, x26
  412218:	mov	x1, x20
  41221c:	b	412170 <wcrtomb@plt+0xd680>
  412220:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412224:	add	x23, x23, #0x34
  412228:	mov	x0, x25
  41222c:	b	41223c <wcrtomb@plt+0xd74c>
  412230:	strb	w21, [x26], #1
  412234:	add	x22, x27, #0x2
  412238:	mov	x0, x26
  41223c:	ldrb	w8, [x22]
  412240:	mov	x27, x22
  412244:	mov	x26, x0
  412248:	cmp	w8, #0x25
  41224c:	b.eq	412264 <wcrtomb@plt+0xd774>  // b.none
  412250:	cbz	w8, 4123a4 <wcrtomb@plt+0xd8b4>
  412254:	strb	w8, [x26], #1
  412258:	add	x22, x27, #0x1
  41225c:	mov	x0, x26
  412260:	b	41223c <wcrtomb@plt+0xd74c>
  412264:	mov	x22, x27
  412268:	ldrb	w9, [x22, #1]!
  41226c:	sub	w8, w9, #0x64
  412270:	cmp	w8, #0xc
  412274:	b.hi	4122a0 <wcrtomb@plt+0xd7b0>  // b.pmore
  412278:	adr	x9, 412234 <wcrtomb@plt+0xd744>
  41227c:	ldrb	w10, [x23, x8]
  412280:	add	x9, x9, x10, lsl #2
  412284:	br	x9
  412288:	cbz	x24, 412234 <wcrtomb@plt+0xd744>
  41228c:	mov	x0, x26
  412290:	mov	x1, x24
  412294:	bl	404120 <stpcpy@plt>
  412298:	mov	x26, x0
  41229c:	b	412234 <wcrtomb@plt+0xd744>
  4122a0:	cmp	w9, #0x25
  4122a4:	b.eq	412230 <wcrtomb@plt+0xd740>  // b.none
  4122a8:	mov	x0, x26
  4122ac:	strb	w21, [x0], #1
  4122b0:	ldrb	w8, [x22]
  4122b4:	cbz	w8, 41223c <wcrtomb@plt+0xd74c>
  4122b8:	add	x22, x27, #0x2
  4122bc:	add	x0, x26, #0x2
  4122c0:	strb	w8, [x26, #1]
  4122c4:	b	41223c <wcrtomb@plt+0xd74c>
  4122c8:	mov	x0, x26
  4122cc:	mov	x1, x19
  4122d0:	b	4122dc <wcrtomb@plt+0xd7ec>
  4122d4:	mov	x0, x26
  4122d8:	mov	x1, x20
  4122dc:	bl	404120 <stpcpy@plt>
  4122e0:	add	x22, x27, #0x2
  4122e4:	b	41223c <wcrtomb@plt+0xd74c>
  4122e8:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4122ec:	add	x24, x24, #0x27
  4122f0:	mov	x0, x25
  4122f4:	b	412308 <wcrtomb@plt+0xd818>
  4122f8:	mov	x0, x26
  4122fc:	mov	x1, x19
  412300:	bl	404120 <stpcpy@plt>
  412304:	add	x22, x27, #0x2
  412308:	ldrb	w8, [x22]
  41230c:	mov	x27, x22
  412310:	mov	x26, x0
  412314:	cmp	w8, #0x25
  412318:	b.eq	412330 <wcrtomb@plt+0xd840>  // b.none
  41231c:	cbz	w8, 4123a4 <wcrtomb@plt+0xd8b4>
  412320:	strb	w8, [x26], #1
  412324:	add	x22, x27, #0x1
  412328:	mov	x0, x26
  41232c:	b	412308 <wcrtomb@plt+0xd818>
  412330:	mov	x22, x27
  412334:	ldrb	w9, [x22, #1]!
  412338:	sub	w8, w9, #0x64
  41233c:	cmp	w8, #0xc
  412340:	b.hi	412360 <wcrtomb@plt+0xd870>  // b.pmore
  412344:	adr	x9, 4122f8 <wcrtomb@plt+0xd808>
  412348:	ldrb	w10, [x24, x8]
  41234c:	add	x9, x9, x10, lsl #2
  412350:	br	x9
  412354:	mov	x0, x26
  412358:	mov	x1, x23
  41235c:	b	412300 <wcrtomb@plt+0xd810>
  412360:	cmp	w9, #0x25
  412364:	b.ne	412378 <wcrtomb@plt+0xd888>  // b.any
  412368:	strb	w21, [x26], #1
  41236c:	add	x22, x27, #0x2
  412370:	mov	x0, x26
  412374:	b	412308 <wcrtomb@plt+0xd818>
  412378:	mov	x0, x26
  41237c:	strb	w21, [x0], #1
  412380:	ldrb	w8, [x22]
  412384:	cbz	w8, 412308 <wcrtomb@plt+0xd818>
  412388:	add	x22, x27, #0x2
  41238c:	add	x0, x26, #0x2
  412390:	strb	w8, [x26, #1]
  412394:	b	412308 <wcrtomb@plt+0xd818>
  412398:	mov	x0, x26
  41239c:	mov	x1, x20
  4123a0:	b	412300 <wcrtomb@plt+0xd810>
  4123a4:	ldr	x0, [sp, #24]
  4123a8:	bl	4046b0 <free@plt>
  4123ac:	mov	x8, x26
  4123b0:	cmp	x26, x25
  4123b4:	b.ls	4123c8 <wcrtomb@plt+0xd8d8>  // b.plast
  4123b8:	mov	x26, x8
  4123bc:	ldrb	w9, [x26, #-1]!
  4123c0:	cmp	w9, #0x2f
  4123c4:	b.eq	4123ac <wcrtomb@plt+0xd8bc>  // b.none
  4123c8:	strb	wzr, [x8]
  4123cc:	mov	x0, x25
  4123d0:	ldp	x20, x19, [sp, #160]
  4123d4:	ldp	x22, x21, [sp, #144]
  4123d8:	ldp	x24, x23, [sp, #128]
  4123dc:	ldp	x26, x25, [sp, #112]
  4123e0:	ldp	x28, x27, [sp, #96]
  4123e4:	ldp	x29, x30, [sp, #80]
  4123e8:	add	sp, sp, #0xb0
  4123ec:	ret
  4123f0:	stp	x29, x30, [sp, #-32]!
  4123f4:	stp	x20, x19, [sp, #16]
  4123f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4123fc:	ldr	x1, [x8, #1032]
  412400:	mov	x19, x0
  412404:	mov	x29, sp
  412408:	cbnz	x1, 412428 <wcrtomb@plt+0xd938>
  41240c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412410:	add	x20, x20, #0x408
  412414:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412418:	add	x1, x1, #0x428
  41241c:	mov	x0, x20
  412420:	bl	41b60c <wcrtomb@plt+0x16b1c>
  412424:	ldr	x1, [x20]
  412428:	mov	x0, x19
  41242c:	ldp	x20, x19, [sp, #16]
  412430:	mov	x2, xzr
  412434:	ldp	x29, x30, [sp], #32
  412438:	b	411f10 <wcrtomb@plt+0xd420>
  41243c:	stp	x29, x30, [sp, #-32]!
  412440:	stp	x20, x19, [sp, #16]
  412444:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412448:	ldr	x19, [x20, #1040]
  41244c:	mov	x29, sp
  412450:	cbnz	x19, 4124b4 <wcrtomb@plt+0xd9c4>
  412454:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412458:	add	x0, x0, #0x43c
  41245c:	bl	4049e0 <getenv@plt>
  412460:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412464:	add	x8, x8, #0x443
  412468:	cmp	x0, #0x0
  41246c:	csel	x19, x8, x0, eq  // eq = none
  412470:	mov	x0, x19
  412474:	bl	403f00 <strlen@plt>
  412478:	add	x0, x0, #0x12
  41247c:	bl	44a010 <argp_parse@@Base+0xf964>
  412480:	mov	x1, x19
  412484:	str	x0, [x20, #1040]
  412488:	bl	4047f0 <strcpy@plt>
  41248c:	ldr	x19, [x20, #1040]
  412490:	mov	x0, x19
  412494:	bl	403f00 <strlen@plt>
  412498:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41249c:	add	x8, x8, #0x448
  4124a0:	ldr	q0, [x8]
  4124a4:	add	x8, x19, x0
  4124a8:	mov	w9, #0x6e                  	// #110
  4124ac:	strh	w9, [x8, #16]
  4124b0:	str	q0, [x8]
  4124b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4124b8:	ldr	x8, [x8, #1048]
  4124bc:	mov	x1, x19
  4124c0:	ldp	x20, x19, [sp, #16]
  4124c4:	mov	x0, xzr
  4124c8:	add	x2, x8, #0x1
  4124cc:	ldp	x29, x30, [sp], #32
  4124d0:	b	411f10 <wcrtomb@plt+0xd420>
  4124d4:	stp	x29, x30, [sp, #-80]!
  4124d8:	stp	x26, x25, [sp, #16]
  4124dc:	stp	x24, x23, [sp, #32]
  4124e0:	stp	x22, x21, [sp, #48]
  4124e4:	stp	x20, x19, [sp, #64]
  4124e8:	mov	x25, x3
  4124ec:	ldr	x21, [x25, #8]!
  4124f0:	and	w8, w0, #0xff
  4124f4:	mov	x20, x3
  4124f8:	mov	w19, w0
  4124fc:	cmp	w8, #0x78
  412500:	mov	x0, x1
  412504:	mov	x29, sp
  412508:	b.eq	412520 <wcrtomb@plt+0xda30>  // b.none
  41250c:	cmp	w8, #0x67
  412510:	b.ne	412534 <wcrtomb@plt+0xda44>  // b.any
  412514:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412518:	add	x8, x8, #0x420
  41251c:	b	412528 <wcrtomb@plt+0xda38>
  412520:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412524:	add	x8, x8, #0x430
  412528:	ldp	x9, x8, [x8]
  41252c:	cmp	x9, #0x0
  412530:	csel	x2, x2, x8, eq  // eq = none
  412534:	mov	x1, x21
  412538:	bl	40adf4 <wcrtomb@plt+0x6304>
  41253c:	strb	w19, [x0, #156]
  412540:	bl	40bb88 <wcrtomb@plt+0x7098>
  412544:	ldr	x22, [x20, #16]
  412548:	mov	w26, #0x200                 	// #512
  41254c:	b	412564 <wcrtomb@plt+0xda74>
  412550:	mov	x0, x23
  412554:	add	x22, x22, x24
  412558:	sub	x21, x21, x24
  41255c:	bl	405640 <wcrtomb@plt+0xb50>
  412560:	cbz	x21, 41259c <wcrtomb@plt+0xdaac>
  412564:	bl	405310 <wcrtomb@plt+0x820>
  412568:	cmp	x21, #0x200
  41256c:	csel	x24, x21, x26, cc  // cc = lo, ul, last
  412570:	mov	x1, x22
  412574:	mov	x2, x24
  412578:	mov	x23, x0
  41257c:	bl	403e80 <memcpy@plt>
  412580:	cmp	x21, #0x1ff
  412584:	b.hi	412550 <wcrtomb@plt+0xda60>  // b.pmore
  412588:	add	x0, x23, x24
  41258c:	sub	x2, x26, x24
  412590:	mov	w1, wzr
  412594:	bl	404320 <memset@plt>
  412598:	b	412550 <wcrtomb@plt+0xda60>
  41259c:	ldr	x0, [x20]
  4125a0:	cbz	x0, 4125f0 <wcrtomb@plt+0xdb00>
  4125a4:	mov	x1, xzr
  4125a8:	bl	44b118 <_obstack_free@@Base>
  4125ac:	ldr	x0, [x20]
  4125b0:	bl	4046b0 <free@plt>
  4125b4:	str	xzr, [x20]
  4125b8:	and	w8, w19, #0xff
  4125bc:	cmp	w8, #0x67
  4125c0:	stp	xzr, xzr, [x25]
  4125c4:	b.ne	4125d8 <wcrtomb@plt+0xdae8>  // b.any
  4125c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4125cc:	ldr	x9, [x8, #1048]
  4125d0:	add	x9, x9, #0x1
  4125d4:	str	x9, [x8, #1048]
  4125d8:	ldp	x20, x19, [sp, #64]
  4125dc:	ldp	x22, x21, [sp, #48]
  4125e0:	ldp	x24, x23, [sp, #32]
  4125e4:	ldp	x26, x25, [sp, #16]
  4125e8:	ldp	x29, x30, [sp], #80
  4125ec:	ret
  4125f0:	ldr	x0, [x20, #16]
  4125f4:	bl	4046b0 <free@plt>
  4125f8:	and	w8, w19, #0xff
  4125fc:	cmp	w8, #0x67
  412600:	stp	xzr, xzr, [x25]
  412604:	b.eq	4125c8 <wcrtomb@plt+0xdad8>  // b.none
  412608:	b	4125d8 <wcrtomb@plt+0xdae8>
  41260c:	stp	x29, x30, [sp, #-32]!
  412610:	str	x19, [sp, #16]
  412614:	mov	x19, x0
  412618:	ldr	x0, [x0]
  41261c:	mov	x29, sp
  412620:	cbz	x0, 412648 <wcrtomb@plt+0xdb58>
  412624:	mov	x1, xzr
  412628:	bl	44b118 <_obstack_free@@Base>
  41262c:	ldr	x0, [x19]
  412630:	bl	4046b0 <free@plt>
  412634:	str	xzr, [x19]
  412638:	stp	xzr, xzr, [x19, #8]
  41263c:	ldr	x19, [sp, #16]
  412640:	ldp	x29, x30, [sp], #32
  412644:	ret
  412648:	ldr	x0, [x19, #16]
  41264c:	bl	4046b0 <free@plt>
  412650:	stp	xzr, xzr, [x19, #8]
  412654:	ldr	x19, [sp, #16]
  412658:	ldp	x29, x30, [sp], #32
  41265c:	ret
  412660:	sub	sp, sp, #0x40
  412664:	stp	x20, x19, [sp, #48]
  412668:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41266c:	stp	x22, x21, [sp, #32]
  412670:	ldr	x22, [x20, #1088]
  412674:	mov	x19, x0
  412678:	stp	x29, x30, [sp, #16]
  41267c:	add	x29, sp, #0x10
  412680:	cbz	x22, 4126bc <wcrtomb@plt+0xdbcc>
  412684:	ldr	x8, [x19]
  412688:	cbnz	x8, 412744 <wcrtomb@plt+0xdc54>
  41268c:	mov	w0, #0x58                  	// #88
  412690:	bl	44a010 <argp_parse@@Base+0xf964>
  412694:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  412698:	adrp	x4, 404000 <localtime_r@plt>
  41269c:	add	x3, x3, #0x10
  4126a0:	add	x4, x4, #0x6b0
  4126a4:	mov	x1, xzr
  4126a8:	mov	x2, xzr
  4126ac:	str	x0, [x19]
  4126b0:	bl	44ae4c <_obstack_begin@@Base>
  4126b4:	ldr	x22, [x20, #1088]
  4126b8:	cbnz	x22, 412744 <wcrtomb@plt+0xdc54>
  4126bc:	ldr	x8, [x19]
  4126c0:	cbz	x8, 4126f4 <wcrtomb@plt+0xdc04>
  4126c4:	mov	x0, x19
  4126c8:	bl	412764 <wcrtomb@plt+0xdc74>
  4126cc:	bl	41243c <wcrtomb@plt+0xd94c>
  4126d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4126d4:	ldr	x2, [x8, #3704]
  4126d8:	mov	x20, x0
  4126dc:	mov	w0, #0x67                  	// #103
  4126e0:	mov	x1, x20
  4126e4:	mov	x3, x19
  4126e8:	bl	4124d4 <wcrtomb@plt+0xd9e4>
  4126ec:	mov	x0, x20
  4126f0:	bl	4046b0 <free@plt>
  4126f4:	ldp	x20, x19, [sp, #48]
  4126f8:	ldp	x22, x21, [sp, #32]
  4126fc:	ldp	x29, x30, [sp, #16]
  412700:	add	sp, sp, #0x40
  412704:	ret
  412708:	mov	x0, x21
  41270c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  412710:	mov	x21, x0
  412714:	str	x0, [sp, #8]
  412718:	mov	x0, x21
  41271c:	bl	403f00 <strlen@plt>
  412720:	mov	x3, x0
  412724:	mov	x0, x19
  412728:	mov	x1, x20
  41272c:	mov	x2, x21
  412730:	bl	414e88 <wcrtomb@plt+0x10398>
  412734:	ldr	x0, [sp, #8]
  412738:	bl	4046b0 <free@plt>
  41273c:	ldr	x22, [x22]
  412740:	cbz	x22, 4126bc <wcrtomb@plt+0xdbcc>
  412744:	ldp	x20, x21, [x22, #8]
  412748:	add	x2, sp, #0x8
  41274c:	mov	w0, #0x1                   	// #1
  412750:	mov	x1, x21
  412754:	bl	42a844 <wcrtomb@plt+0x25d54>
  412758:	tbz	w0, #0, 412708 <wcrtomb@plt+0xdc18>
  41275c:	ldr	x21, [sp, #8]
  412760:	b	412718 <wcrtomb@plt+0xdc28>
  412764:	sub	sp, sp, #0x40
  412768:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41276c:	stp	x22, x21, [sp, #32]
  412770:	ldr	x22, [x8, #1104]
  412774:	stp	x20, x19, [sp, #48]
  412778:	mov	x19, x0
  41277c:	stp	x29, x30, [sp, #16]
  412780:	add	x29, sp, #0x10
  412784:	cbnz	x22, 41282c <wcrtomb@plt+0xdd3c>
  412788:	ldr	x8, [x19]
  41278c:	ldp	x9, x10, [x8, #16]
  412790:	cmp	x10, x9
  412794:	b.ne	4127a4 <wcrtomb@plt+0xdcb4>  // b.any
  412798:	ldrb	w11, [x8, #80]
  41279c:	orr	w11, w11, #0x2
  4127a0:	strb	w11, [x8, #80]
  4127a4:	ldr	x12, [x8, #48]
  4127a8:	ldr	x13, [x8, #8]
  4127ac:	ldr	x11, [x8, #32]
  4127b0:	add	x10, x12, x10
  4127b4:	bic	x10, x10, x12
  4127b8:	sub	x12, x10, x13
  4127bc:	sub	x13, x11, x13
  4127c0:	cmp	x12, x13
  4127c4:	str	x10, [x8, #24]
  4127c8:	b.ls	4127d4 <wcrtomb@plt+0xdce4>  // b.plast
  4127cc:	mov	x10, x11
  4127d0:	str	x11, [x8, #24]
  4127d4:	str	x10, [x8, #16]
  4127d8:	str	x9, [x19, #16]
  4127dc:	ldp	x20, x19, [sp, #48]
  4127e0:	ldp	x22, x21, [sp, #32]
  4127e4:	ldp	x29, x30, [sp, #16]
  4127e8:	add	sp, sp, #0x40
  4127ec:	ret
  4127f0:	mov	x0, x21
  4127f4:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  4127f8:	mov	x21, x0
  4127fc:	str	x0, [sp, #8]
  412800:	mov	x0, x21
  412804:	bl	403f00 <strlen@plt>
  412808:	mov	x3, x0
  41280c:	mov	x0, x19
  412810:	mov	x1, x20
  412814:	mov	x2, x21
  412818:	bl	414e88 <wcrtomb@plt+0x10398>
  41281c:	ldr	x0, [sp, #8]
  412820:	bl	4046b0 <free@plt>
  412824:	ldr	x22, [x22]
  412828:	cbz	x22, 412788 <wcrtomb@plt+0xdc98>
  41282c:	ldp	x20, x21, [x22, #8]
  412830:	add	x2, sp, #0x8
  412834:	mov	w0, #0x1                   	// #1
  412838:	mov	x1, x21
  41283c:	bl	42a844 <wcrtomb@plt+0x25d54>
  412840:	tbz	w0, #0, 4127f0 <wcrtomb@plt+0xdd00>
  412844:	ldr	x21, [sp, #8]
  412848:	b	412800 <wcrtomb@plt+0xdd10>
  41284c:	stp	x29, x30, [sp, #-16]!
  412850:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412854:	ldr	x8, [x8, #1088]
  412858:	mov	x29, sp
  41285c:	cbnz	x8, 412868 <wcrtomb@plt+0xdd78>
  412860:	ldp	x29, x30, [sp], #16
  412864:	ret
  412868:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41286c:	ldr	x8, [x8, #4000]
  412870:	cbz	x8, 412878 <wcrtomb@plt+0xdd88>
  412874:	blr	x8
  412878:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41287c:	add	x1, x1, #0x45a
  412880:	mov	w2, #0x5                   	// #5
  412884:	mov	x0, xzr
  412888:	bl	4048b0 <dcgettext@plt>
  41288c:	mov	x2, x0
  412890:	mov	w0, wzr
  412894:	mov	w1, wzr
  412898:	bl	403f60 <error@plt>
  41289c:	mov	w0, #0x2                   	// #2
  4128a0:	bl	42484c <wcrtomb@plt+0x1fd5c>
  4128a4:	movi	v0.2d, #0x0
  4128a8:	str	xzr, [x0, #80]
  4128ac:	stp	q0, q0, [x0, #48]
  4128b0:	stp	xzr, xzr, [x0, #328]
  4128b4:	ret
  4128b8:	stp	x29, x30, [sp, #-48]!
  4128bc:	stp	x20, x19, [sp, #32]
  4128c0:	mov	x19, x0
  4128c4:	str	x21, [sp, #16]
  4128c8:	mov	x29, sp
  4128cc:	cbz	x1, 4128f0 <wcrtomb@plt+0xde00>
  4128d0:	mov	x20, x1
  4128d4:	add	x21, x19, #0x8
  4128d8:	ldur	x0, [x21, #-8]
  4128dc:	bl	4046b0 <free@plt>
  4128e0:	ldr	x0, [x21], #24
  4128e4:	bl	4046b0 <free@plt>
  4128e8:	subs	x20, x20, #0x1
  4128ec:	b.ne	4128d8 <wcrtomb@plt+0xdde8>  // b.any
  4128f0:	mov	x0, x19
  4128f4:	ldp	x20, x19, [sp, #32]
  4128f8:	ldr	x21, [sp, #16]
  4128fc:	ldp	x29, x30, [sp], #48
  412900:	b	4046b0 <free@plt>
  412904:	stp	x29, x30, [sp, #-64]!
  412908:	stp	x22, x21, [sp, #32]
  41290c:	mov	x22, x0
  412910:	mov	x0, x1
  412914:	str	x23, [sp, #16]
  412918:	stp	x20, x19, [sp, #48]
  41291c:	mov	x29, sp
  412920:	mov	x19, x3
  412924:	mov	x20, x2
  412928:	mov	x21, x1
  41292c:	bl	403f00 <strlen@plt>
  412930:	add	x0, x0, #0xe
  412934:	bl	44a010 <argp_parse@@Base+0xf964>
  412938:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41293c:	add	x8, x8, #0x485
  412940:	ldr	x9, [x8]
  412944:	ldur	x8, [x8, #6]
  412948:	mov	x23, x0
  41294c:	mov	x1, x21
  412950:	str	x9, [x0]
  412954:	stur	x8, [x0, #6]
  412958:	add	x0, x0, #0xd
  41295c:	bl	404120 <stpcpy@plt>
  412960:	ldp	x8, x0, [x22, #328]
  412964:	add	x9, x8, #0x1
  412968:	add	x8, x8, x8, lsl #1
  41296c:	lsl	x21, x8, #3
  412970:	add	x1, x21, #0x18
  412974:	str	x9, [x22, #328]
  412978:	bl	44a090 <argp_parse@@Base+0xf9e4>
  41297c:	str	x0, [x22, #336]
  412980:	mov	x0, x23
  412984:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  412988:	ldr	x8, [x22, #336]
  41298c:	add	x1, x19, #0x1
  412990:	str	x0, [x8, x21]
  412994:	mov	x0, x20
  412998:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  41299c:	ldr	x8, [x22, #336]
  4129a0:	add	x8, x8, x21
  4129a4:	str	x0, [x8, #8]
  4129a8:	ldr	x8, [x22, #336]
  4129ac:	mov	x0, x23
  4129b0:	ldr	x23, [sp, #16]
  4129b4:	add	x8, x8, x21
  4129b8:	str	x19, [x8, #16]
  4129bc:	ldp	x20, x19, [sp, #48]
  4129c0:	ldp	x22, x21, [sp, #32]
  4129c4:	ldp	x29, x30, [sp], #64
  4129c8:	b	4046b0 <free@plt>
  4129cc:	stp	x29, x30, [sp, #-96]!
  4129d0:	stp	x26, x25, [sp, #32]
  4129d4:	stp	x24, x23, [sp, #48]
  4129d8:	stp	x22, x21, [sp, #64]
  4129dc:	stp	x20, x19, [sp, #80]
  4129e0:	str	xzr, [x1]
  4129e4:	str	xzr, [x2]
  4129e8:	ldr	x8, [x0, #328]
  4129ec:	str	x27, [sp, #16]
  4129f0:	mov	x29, sp
  4129f4:	cbz	x8, 412a90 <wcrtomb@plt+0xdfa0>
  4129f8:	mov	x19, x2
  4129fc:	mov	x20, x1
  412a00:	mov	x21, x0
  412a04:	mov	x24, xzr
  412a08:	mov	x0, xzr
  412a0c:	mov	x8, xzr
  412a10:	mov	w25, #0x1                   	// #1
  412a14:	ldr	x9, [x21, #336]
  412a18:	add	x10, x8, #0x1
  412a1c:	add	x8, x8, x8, lsl #1
  412a20:	lsl	x27, x8, #3
  412a24:	add	x9, x9, x24
  412a28:	ldp	x22, x23, [x9]
  412a2c:	ldr	x26, [x9, #16]
  412a30:	add	x1, x27, #0x18
  412a34:	str	x10, [x19]
  412a38:	bl	44a090 <argp_parse@@Base+0xf9e4>
  412a3c:	str	x0, [x20]
  412a40:	mov	x0, x22
  412a44:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  412a48:	ldr	x8, [x20]
  412a4c:	add	x1, x26, #0x1
  412a50:	str	x0, [x8, x27]
  412a54:	mov	x0, x23
  412a58:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  412a5c:	ldr	x8, [x20]
  412a60:	add	x8, x8, x27
  412a64:	str	x0, [x8, #8]
  412a68:	ldr	x0, [x20]
  412a6c:	add	x8, x0, x27
  412a70:	str	x26, [x8, #16]
  412a74:	ldr	x8, [x21, #328]
  412a78:	cmp	x25, x8
  412a7c:	b.cs	412a90 <wcrtomb@plt+0xdfa0>  // b.hs, b.nlast
  412a80:	ldr	x8, [x19]
  412a84:	add	x25, x25, #0x1
  412a88:	add	x24, x24, #0x18
  412a8c:	b	412a14 <wcrtomb@plt+0xdf24>
  412a90:	ldp	x20, x19, [sp, #80]
  412a94:	ldp	x22, x21, [sp, #64]
  412a98:	ldp	x24, x23, [sp, #48]
  412a9c:	ldp	x26, x25, [sp, #32]
  412aa0:	ldr	x27, [sp, #16]
  412aa4:	ldp	x29, x30, [sp], #96
  412aa8:	ret
  412aac:	sub	sp, sp, #0x60
  412ab0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412ab4:	stp	x22, x21, [sp, #64]
  412ab8:	ldr	x22, [x8, #1088]
  412abc:	stp	x20, x19, [sp, #80]
  412ac0:	mov	x19, x0
  412ac4:	stp	x29, x30, [sp, #16]
  412ac8:	stp	x26, x25, [sp, #32]
  412acc:	stp	x24, x23, [sp, #48]
  412ad0:	add	x29, sp, #0x10
  412ad4:	cbz	x22, 412b6c <wcrtomb@plt+0xe07c>
  412ad8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  412adc:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412ae0:	add	x23, x23, #0x95f
  412ae4:	add	x24, x24, #0x68
  412ae8:	b	412b1c <wcrtomb@plt+0xe02c>
  412aec:	ldr	x21, [x22, #16]
  412af0:	ldur	x26, [x25, #-16]
  412af4:	ldur	x20, [x25, #-32]
  412af8:	mov	x0, x21
  412afc:	bl	403f00 <strlen@plt>
  412b00:	mov	x3, x0
  412b04:	mov	x0, x19
  412b08:	mov	x1, x20
  412b0c:	mov	x2, x21
  412b10:	blr	x26
  412b14:	ldr	x22, [x22]
  412b18:	cbz	x22, 412b6c <wcrtomb@plt+0xe07c>
  412b1c:	ldr	x20, [x22, #8]
  412b20:	mov	x25, x24
  412b24:	mov	x21, x23
  412b28:	b	412b44 <wcrtomb@plt+0xe054>
  412b2c:	mov	x0, x21
  412b30:	mov	x1, x20
  412b34:	bl	404610 <strcmp@plt>
  412b38:	cbz	w0, 412aec <wcrtomb@plt+0xdffc>
  412b3c:	ldr	x21, [x25], #32
  412b40:	cbz	x21, 412b14 <wcrtomb@plt+0xe024>
  412b44:	ldurb	w8, [x25, #-4]
  412b48:	cbz	w8, 412b2c <wcrtomb@plt+0xe03c>
  412b4c:	mov	x0, x21
  412b50:	bl	403f00 <strlen@plt>
  412b54:	mov	x2, x0
  412b58:	mov	x0, x21
  412b5c:	mov	x1, x20
  412b60:	bl	4042c0 <strncmp@plt>
  412b64:	cbnz	w0, 412b3c <wcrtomb@plt+0xe04c>
  412b68:	b	412aec <wcrtomb@plt+0xdffc>
  412b6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412b70:	ldr	x22, [x8, #1096]
  412b74:	cbz	x22, 412c0c <wcrtomb@plt+0xe11c>
  412b78:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  412b7c:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412b80:	add	x23, x23, #0x95f
  412b84:	add	x24, x24, #0x68
  412b88:	b	412bbc <wcrtomb@plt+0xe0cc>
  412b8c:	ldr	x21, [x22, #16]
  412b90:	ldur	x26, [x25, #-16]
  412b94:	ldur	x20, [x25, #-32]
  412b98:	mov	x0, x21
  412b9c:	bl	403f00 <strlen@plt>
  412ba0:	mov	x3, x0
  412ba4:	mov	x0, x19
  412ba8:	mov	x1, x20
  412bac:	mov	x2, x21
  412bb0:	blr	x26
  412bb4:	ldr	x22, [x22]
  412bb8:	cbz	x22, 412c0c <wcrtomb@plt+0xe11c>
  412bbc:	ldr	x20, [x22, #8]
  412bc0:	mov	x25, x24
  412bc4:	mov	x21, x23
  412bc8:	b	412be4 <wcrtomb@plt+0xe0f4>
  412bcc:	mov	x0, x21
  412bd0:	mov	x1, x20
  412bd4:	bl	404610 <strcmp@plt>
  412bd8:	cbz	w0, 412b8c <wcrtomb@plt+0xe09c>
  412bdc:	ldr	x21, [x25], #32
  412be0:	cbz	x21, 412bb4 <wcrtomb@plt+0xe0c4>
  412be4:	ldurb	w8, [x25, #-4]
  412be8:	cbz	w8, 412bcc <wcrtomb@plt+0xe0dc>
  412bec:	mov	x0, x21
  412bf0:	bl	403f00 <strlen@plt>
  412bf4:	mov	x2, x0
  412bf8:	mov	x0, x21
  412bfc:	mov	x1, x20
  412c00:	bl	4042c0 <strncmp@plt>
  412c04:	cbnz	w0, 412bdc <wcrtomb@plt+0xe0ec>
  412c08:	b	412b8c <wcrtomb@plt+0xe09c>
  412c0c:	ldr	x0, [x19, #352]
  412c10:	cbz	x0, 412c58 <wcrtomb@plt+0xe168>
  412c14:	ldr	x1, [x19, #360]
  412c18:	adrp	x3, 412000 <wcrtomb@plt+0xd510>
  412c1c:	add	x3, x3, #0xf40
  412c20:	add	x2, sp, #0x8
  412c24:	add	x8, x1, #0x200
  412c28:	mov	x4, x19
  412c2c:	str	x8, [sp, #8]
  412c30:	bl	412d2c <wcrtomb@plt+0xe23c>
  412c34:	tbz	w0, #0, 412c58 <wcrtomb@plt+0xe168>
  412c38:	adrp	x20, 412000 <wcrtomb@plt+0xd510>
  412c3c:	add	x20, x20, #0xf40
  412c40:	ldp	x0, x1, [x19, #352]
  412c44:	add	x2, sp, #0x8
  412c48:	mov	x3, x20
  412c4c:	mov	x4, x19
  412c50:	bl	412d2c <wcrtomb@plt+0xe23c>
  412c54:	tbnz	w0, #0, 412c40 <wcrtomb@plt+0xe150>
  412c58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412c5c:	ldr	x22, [x8, #1104]
  412c60:	cbz	x22, 412cf8 <wcrtomb@plt+0xe208>
  412c64:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  412c68:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412c6c:	add	x23, x23, #0x95f
  412c70:	add	x24, x24, #0x68
  412c74:	b	412ca8 <wcrtomb@plt+0xe1b8>
  412c78:	ldr	x21, [x22, #16]
  412c7c:	ldur	x26, [x25, #-16]
  412c80:	ldur	x20, [x25, #-32]
  412c84:	mov	x0, x21
  412c88:	bl	403f00 <strlen@plt>
  412c8c:	mov	x3, x0
  412c90:	mov	x0, x19
  412c94:	mov	x1, x20
  412c98:	mov	x2, x21
  412c9c:	blr	x26
  412ca0:	ldr	x22, [x22]
  412ca4:	cbz	x22, 412cf8 <wcrtomb@plt+0xe208>
  412ca8:	ldr	x20, [x22, #8]
  412cac:	mov	x25, x24
  412cb0:	mov	x21, x23
  412cb4:	b	412cd0 <wcrtomb@plt+0xe1e0>
  412cb8:	mov	x0, x21
  412cbc:	mov	x1, x20
  412cc0:	bl	404610 <strcmp@plt>
  412cc4:	cbz	w0, 412c78 <wcrtomb@plt+0xe188>
  412cc8:	ldr	x21, [x25], #32
  412ccc:	cbz	x21, 412ca0 <wcrtomb@plt+0xe1b0>
  412cd0:	ldurb	w8, [x25, #-4]
  412cd4:	cbz	w8, 412cb8 <wcrtomb@plt+0xe1c8>
  412cd8:	mov	x0, x21
  412cdc:	bl	403f00 <strlen@plt>
  412ce0:	mov	x2, x0
  412ce4:	mov	x0, x21
  412ce8:	mov	x1, x20
  412cec:	bl	4042c0 <strncmp@plt>
  412cf0:	cbnz	w0, 412cc8 <wcrtomb@plt+0xe1d8>
  412cf4:	b	412c78 <wcrtomb@plt+0xe188>
  412cf8:	ldr	x8, [x19, #136]
  412cfc:	ldrb	w9, [x19, #320]
  412d00:	str	x8, [x19, #264]
  412d04:	cbz	w9, 412d10 <wcrtomb@plt+0xe220>
  412d08:	ldr	x8, [x19, #312]
  412d0c:	str	x8, [x19, #136]
  412d10:	ldp	x20, x19, [sp, #80]
  412d14:	ldp	x22, x21, [sp, #64]
  412d18:	ldp	x24, x23, [sp, #48]
  412d1c:	ldp	x26, x25, [sp, #32]
  412d20:	ldp	x29, x30, [sp, #16]
  412d24:	add	sp, sp, #0x60
  412d28:	ret
  412d2c:	stp	x29, x30, [sp, #-80]!
  412d30:	stp	x24, x23, [sp, #32]
  412d34:	stp	x22, x21, [sp, #48]
  412d38:	stp	x20, x19, [sp, #64]
  412d3c:	str	x25, [sp, #16]
  412d40:	ldr	x25, [x2]
  412d44:	mov	x21, x4
  412d48:	mov	x20, x3
  412d4c:	mov	x19, x2
  412d50:	add	x8, x1, x0
  412d54:	mov	x22, x25
  412d58:	mov	x29, sp
  412d5c:	b	412d64 <wcrtomb@plt+0xe274>
  412d60:	add	x22, x22, #0x1
  412d64:	ldrb	w9, [x22]
  412d68:	cmp	w9, #0x20
  412d6c:	b.eq	412d60 <wcrtomb@plt+0xe270>  // b.none
  412d70:	cmp	w9, #0x9
  412d74:	b.eq	412d60 <wcrtomb@plt+0xe270>  // b.none
  412d78:	sub	w10, w9, #0x30
  412d7c:	cmp	w10, #0xa
  412d80:	b.cs	412dec <wcrtomb@plt+0xe2fc>  // b.hs, b.nlast
  412d84:	add	x1, x29, #0x18
  412d88:	mov	w2, #0xa                   	// #10
  412d8c:	mov	x0, x22
  412d90:	mov	w3, wzr
  412d94:	sub	x24, x8, x25
  412d98:	bl	4043c0 <__strtoul_internal@plt>
  412d9c:	cmp	x24, x0
  412da0:	b.cs	412e0c <wcrtomb@plt+0xe31c>  // b.hs, b.nlast
  412da4:	ldr	w9, [x29, #24]
  412da8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412dac:	ldr	x8, [x8, #4000]
  412db0:	sub	w19, w9, w22
  412db4:	cbz	x8, 412dbc <wcrtomb@plt+0xe2cc>
  412db8:	blr	x8
  412dbc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412dc0:	add	x1, x1, #0x645
  412dc4:	mov	w2, #0x5                   	// #5
  412dc8:	mov	x0, xzr
  412dcc:	bl	4048b0 <dcgettext@plt>
  412dd0:	mov	x2, x0
  412dd4:	mov	w0, wzr
  412dd8:	mov	w1, wzr
  412ddc:	mov	w3, w19
  412de0:	mov	x4, x22
  412de4:	bl	403f60 <error@plt>
  412de8:	b	412f18 <wcrtomb@plt+0xe428>
  412dec:	cbz	w9, 412ea4 <wcrtomb@plt+0xe3b4>
  412df0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412df4:	ldr	x8, [x8, #4000]
  412df8:	cbz	x8, 412e00 <wcrtomb@plt+0xe310>
  412dfc:	blr	x8
  412e00:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412e04:	add	x1, x1, #0x61b
  412e08:	b	412efc <wcrtomb@plt+0xe40c>
  412e0c:	ldr	x8, [x29, #24]
  412e10:	mov	x23, x0
  412e14:	mov	x9, xzr
  412e18:	b	412e20 <wcrtomb@plt+0xe330>
  412e1c:	add	x9, x9, #0x1
  412e20:	ldrb	w10, [x8, x9]
  412e24:	cmp	w10, #0x20
  412e28:	b.eq	412e1c <wcrtomb@plt+0xe32c>  // b.none
  412e2c:	cmp	w10, #0x9
  412e30:	b.eq	412e1c <wcrtomb@plt+0xe32c>  // b.none
  412e34:	cbz	x9, 412eac <wcrtomb@plt+0xe3bc>
  412e38:	add	x22, x8, x9
  412e3c:	mov	w1, #0x3d                  	// #61
  412e40:	mov	x0, x22
  412e44:	bl	404750 <strchr@plt>
  412e48:	cbz	x0, 412ec8 <wcrtomb@plt+0xe3d8>
  412e4c:	add	x23, x25, x23
  412e50:	mov	x24, x0
  412e54:	cmp	x0, x23
  412e58:	b.cs	412ec8 <wcrtomb@plt+0xe3d8>  // b.hs, b.nlast
  412e5c:	ldurb	w8, [x23, #-1]
  412e60:	cmp	w8, #0xa
  412e64:	b.ne	412ee4 <wcrtomb@plt+0xe3f4>  // b.any
  412e68:	mov	x2, x24
  412e6c:	sub	x8, x23, x24
  412e70:	sturb	wzr, [x23, #-1]
  412e74:	strb	wzr, [x2], #1
  412e78:	sub	x3, x8, #0x2
  412e7c:	mov	x0, x21
  412e80:	mov	x1, x22
  412e84:	blr	x20
  412e88:	mov	w8, #0x3d                  	// #61
  412e8c:	mov	w9, #0xa                   	// #10
  412e90:	mov	w0, #0x1                   	// #1
  412e94:	strb	w8, [x24]
  412e98:	sturb	w9, [x23, #-1]
  412e9c:	str	x23, [x19]
  412ea0:	b	412f28 <wcrtomb@plt+0xe438>
  412ea4:	mov	w0, wzr
  412ea8:	b	412f28 <wcrtomb@plt+0xe438>
  412eac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412eb0:	ldr	x8, [x8, #4000]
  412eb4:	cbz	x8, 412ebc <wcrtomb@plt+0xe3cc>
  412eb8:	blr	x8
  412ebc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412ec0:	add	x1, x1, #0x670
  412ec4:	b	412efc <wcrtomb@plt+0xe40c>
  412ec8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412ecc:	ldr	x8, [x8, #4000]
  412ed0:	cbz	x8, 412ed8 <wcrtomb@plt+0xe3e8>
  412ed4:	blr	x8
  412ed8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412edc:	add	x1, x1, #0x6a6
  412ee0:	b	412efc <wcrtomb@plt+0xe40c>
  412ee4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412ee8:	ldr	x8, [x8, #4000]
  412eec:	cbz	x8, 412ef4 <wcrtomb@plt+0xe404>
  412ef0:	blr	x8
  412ef4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412ef8:	add	x1, x1, #0x6d4
  412efc:	mov	w2, #0x5                   	// #5
  412f00:	mov	x0, xzr
  412f04:	bl	4048b0 <dcgettext@plt>
  412f08:	mov	x2, x0
  412f0c:	mov	w0, wzr
  412f10:	mov	w1, wzr
  412f14:	bl	403f60 <error@plt>
  412f18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412f1c:	mov	w9, #0x2                   	// #2
  412f20:	mov	w0, wzr
  412f24:	str	w9, [x8, #2352]
  412f28:	ldp	x20, x19, [sp, #64]
  412f2c:	ldp	x22, x21, [sp, #48]
  412f30:	ldp	x24, x23, [sp, #32]
  412f34:	ldr	x25, [sp, #16]
  412f38:	ldp	x29, x30, [sp], #80
  412f3c:	ret
  412f40:	stp	x29, x30, [sp, #-64]!
  412f44:	stp	x24, x23, [sp, #16]
  412f48:	stp	x22, x21, [sp, #32]
  412f4c:	stp	x20, x19, [sp, #48]
  412f50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412f54:	ldr	x23, [x8, #1024]
  412f58:	mov	x20, x3
  412f5c:	mov	x21, x2
  412f60:	mov	x19, x1
  412f64:	mov	x22, x0
  412f68:	mov	x29, sp
  412f6c:	cbz	x23, 412f8c <wcrtomb@plt+0xe49c>
  412f70:	ldr	x0, [x23, #8]
  412f74:	mov	x1, x19
  412f78:	mov	w2, wzr
  412f7c:	bl	4047a0 <fnmatch@plt>
  412f80:	cbz	w0, 413034 <wcrtomb@plt+0xe544>
  412f84:	ldr	x23, [x23]
  412f88:	cbnz	x23, 412f70 <wcrtomb@plt+0xe480>
  412f8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  412f90:	ldr	x23, [x8, #1104]
  412f94:	cbz	x23, 412fb0 <wcrtomb@plt+0xe4c0>
  412f98:	ldr	x0, [x23, #8]
  412f9c:	mov	x1, x19
  412fa0:	bl	404610 <strcmp@plt>
  412fa4:	cbz	w0, 413034 <wcrtomb@plt+0xe544>
  412fa8:	ldr	x23, [x23]
  412fac:	cbnz	x23, 412f98 <wcrtomb@plt+0xe4a8>
  412fb0:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  412fb4:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  412fb8:	add	x23, x23, #0x95f
  412fbc:	add	x24, x24, #0x68
  412fc0:	b	412fdc <wcrtomb@plt+0xe4ec>
  412fc4:	mov	x0, x23
  412fc8:	mov	x1, x19
  412fcc:	bl	404610 <strcmp@plt>
  412fd0:	cbz	w0, 413000 <wcrtomb@plt+0xe510>
  412fd4:	ldr	x23, [x24], #32
  412fd8:	cbz	x23, 413028 <wcrtomb@plt+0xe538>
  412fdc:	ldurb	w8, [x24, #-4]
  412fe0:	cbz	w8, 412fc4 <wcrtomb@plt+0xe4d4>
  412fe4:	mov	x0, x23
  412fe8:	bl	403f00 <strlen@plt>
  412fec:	mov	x2, x0
  412ff0:	mov	x0, x23
  412ff4:	mov	x1, x19
  412ff8:	bl	4042c0 <strncmp@plt>
  412ffc:	cbnz	w0, 412fd4 <wcrtomb@plt+0xe4e4>
  413000:	ldur	x4, [x24, #-16]
  413004:	mov	x0, x22
  413008:	mov	x1, x19
  41300c:	mov	x2, x21
  413010:	mov	x3, x20
  413014:	ldp	x20, x19, [sp, #48]
  413018:	ldp	x22, x21, [sp, #32]
  41301c:	ldp	x24, x23, [sp, #16]
  413020:	ldp	x29, x30, [sp], #64
  413024:	br	x4
  413028:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41302c:	ldrb	w8, [x8, #3714]
  413030:	tbnz	w8, #1, 413048 <wcrtomb@plt+0xe558>
  413034:	ldp	x20, x19, [sp, #48]
  413038:	ldp	x22, x21, [sp, #32]
  41303c:	ldp	x24, x23, [sp, #16]
  413040:	ldp	x29, x30, [sp], #64
  413044:	ret
  413048:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41304c:	ldr	x8, [x8, #4000]
  413050:	cbz	x8, 413058 <wcrtomb@plt+0xe568>
  413054:	blr	x8
  413058:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41305c:	add	x1, x1, #0x6ff
  413060:	mov	w2, #0x5                   	// #5
  413064:	mov	x0, xzr
  413068:	bl	4048b0 <dcgettext@plt>
  41306c:	mov	x3, x19
  413070:	ldp	x20, x19, [sp, #48]
  413074:	ldp	x22, x21, [sp, #32]
  413078:	ldp	x24, x23, [sp, #16]
  41307c:	mov	x2, x0
  413080:	mov	w0, wzr
  413084:	mov	w1, wzr
  413088:	ldp	x29, x30, [sp], #64
  41308c:	b	403f60 <error@plt>
  413090:	sub	sp, sp, #0x40
  413094:	stp	x29, x30, [sp, #16]
  413098:	stp	x22, x21, [sp, #32]
  41309c:	stp	x20, x19, [sp, #48]
  4130a0:	ldr	x8, [x0, #8]
  4130a4:	add	x29, sp, #0x10
  4130a8:	cbz	x8, 413114 <wcrtomb@plt+0xe624>
  4130ac:	ldr	x8, [x0, #16]
  4130b0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4130b4:	ldr	x20, [x21, #1096]
  4130b8:	mov	x19, x0
  4130bc:	add	x8, x8, #0x200
  4130c0:	str	x8, [sp, #8]
  4130c4:	cbz	x20, 4130e8 <wcrtomb@plt+0xe5f8>
  4130c8:	ldp	x22, x0, [x20]
  4130cc:	bl	4046b0 <free@plt>
  4130d0:	ldr	x0, [x20, #16]
  4130d4:	bl	4046b0 <free@plt>
  4130d8:	mov	x0, x20
  4130dc:	bl	4046b0 <free@plt>
  4130e0:	mov	x20, x22
  4130e4:	cbnz	x22, 4130c8 <wcrtomb@plt+0xe5d8>
  4130e8:	str	xzr, [x21, #1096]
  4130ec:	adrp	x20, 413000 <wcrtomb@plt+0xe510>
  4130f0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4130f4:	add	x20, x20, #0x128
  4130f8:	add	x21, x21, #0x448
  4130fc:	ldp	x0, x1, [x19, #8]
  413100:	add	x2, sp, #0x8
  413104:	mov	x3, x20
  413108:	mov	x4, x21
  41310c:	bl	412d2c <wcrtomb@plt+0xe23c>
  413110:	tbnz	w0, #0, 4130fc <wcrtomb@plt+0xe60c>
  413114:	ldp	x20, x19, [sp, #48]
  413118:	ldp	x22, x21, [sp, #32]
  41311c:	ldp	x29, x30, [sp, #16]
  413120:	add	sp, sp, #0x40
  413124:	ret
  413128:	stp	x29, x30, [sp, #-64]!
  41312c:	stp	x24, x23, [sp, #16]
  413130:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  413134:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  413138:	stp	x22, x21, [sp, #32]
  41313c:	stp	x20, x19, [sp, #48]
  413140:	mov	x22, x3
  413144:	mov	x20, x2
  413148:	mov	x21, x1
  41314c:	mov	x19, x0
  413150:	add	x23, x23, #0x95f
  413154:	add	x24, x24, #0x68
  413158:	mov	x29, sp
  41315c:	b	413178 <wcrtomb@plt+0xe688>
  413160:	mov	x0, x23
  413164:	mov	x1, x21
  413168:	bl	404610 <strcmp@plt>
  41316c:	cbz	w0, 41319c <wcrtomb@plt+0xe6ac>
  413170:	ldr	x23, [x24], #32
  413174:	cbz	x23, 4131a4 <wcrtomb@plt+0xe6b4>
  413178:	ldurb	w8, [x24, #-4]
  41317c:	cbz	w8, 413160 <wcrtomb@plt+0xe670>
  413180:	mov	x0, x23
  413184:	bl	403f00 <strlen@plt>
  413188:	mov	x2, x0
  41318c:	mov	x0, x23
  413190:	mov	x1, x21
  413194:	bl	4042c0 <strncmp@plt>
  413198:	cbnz	w0, 413170 <wcrtomb@plt+0xe680>
  41319c:	ldurb	w8, [x24, #-8]
  4131a0:	tbnz	w8, #1, 4131cc <wcrtomb@plt+0xe6dc>
  4131a4:	mov	w0, #0x18                  	// #24
  4131a8:	bl	44a010 <argp_parse@@Base+0xf964>
  4131ac:	mov	x22, x0
  4131b0:	mov	x0, x21
  4131b4:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  4131b8:	str	x0, [x22, #8]
  4131bc:	cbz	x20, 4131f4 <wcrtomb@plt+0xe704>
  4131c0:	mov	x0, x20
  4131c4:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  4131c8:	b	4131f8 <wcrtomb@plt+0xe708>
  4131cc:	ldur	x4, [x24, #-16]
  4131d0:	mov	x0, x19
  4131d4:	mov	x1, x21
  4131d8:	mov	x2, x20
  4131dc:	mov	x3, x22
  4131e0:	ldp	x20, x19, [sp, #48]
  4131e4:	ldp	x22, x21, [sp, #32]
  4131e8:	ldp	x24, x23, [sp, #16]
  4131ec:	ldp	x29, x30, [sp], #64
  4131f0:	br	x4
  4131f4:	mov	x0, xzr
  4131f8:	str	x0, [x22, #16]
  4131fc:	ldr	x8, [x19]
  413200:	str	x8, [x22]
  413204:	str	x22, [x19]
  413208:	ldp	x20, x19, [sp, #48]
  41320c:	ldp	x22, x21, [sp, #32]
  413210:	ldp	x24, x23, [sp, #16]
  413214:	ldp	x29, x30, [sp], #64
  413218:	ret
  41321c:	stp	x29, x30, [sp, #-64]!
  413220:	stp	x24, x23, [sp, #16]
  413224:	stp	x22, x21, [sp, #32]
  413228:	stp	x20, x19, [sp, #48]
  41322c:	ldr	x8, [x1, #360]
  413230:	mov	x29, sp
  413234:	cbz	x8, 41324c <wcrtomb@plt+0xe75c>
  413238:	ldp	x20, x19, [sp, #48]
  41323c:	ldp	x22, x21, [sp, #32]
  413240:	ldp	x24, x23, [sp, #16]
  413244:	ldp	x29, x30, [sp], #64
  413248:	ret
  41324c:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  413250:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x16e3c>
  413254:	mov	x19, x2
  413258:	mov	x20, x1
  41325c:	mov	x21, x0
  413260:	add	x22, x1, #0x158
  413264:	add	x23, x23, #0x95f
  413268:	add	x24, x24, #0x68
  41326c:	b	413288 <wcrtomb@plt+0xe798>
  413270:	mov	x0, x23
  413274:	mov	x1, x21
  413278:	bl	404610 <strcmp@plt>
  41327c:	cbz	w0, 4132ac <wcrtomb@plt+0xe7bc>
  413280:	ldr	x23, [x24], #32
  413284:	cbz	x23, 413238 <wcrtomb@plt+0xe748>
  413288:	ldurb	w8, [x24, #-4]
  41328c:	cbz	w8, 413270 <wcrtomb@plt+0xe780>
  413290:	mov	x0, x23
  413294:	bl	403f00 <strlen@plt>
  413298:	mov	x2, x0
  41329c:	mov	x0, x23
  4132a0:	mov	x1, x21
  4132a4:	bl	4042c0 <strncmp@plt>
  4132a8:	cbnz	w0, 413280 <wcrtomb@plt+0xe790>
  4132ac:	ldur	x8, [x24, #-24]
  4132b0:	cbz	x8, 413238 <wcrtomb@plt+0xe748>
  4132b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4132b8:	ldr	x23, [x8, #1024]
  4132bc:	cbz	x23, 4132dc <wcrtomb@plt+0xe7ec>
  4132c0:	ldr	x0, [x23, #8]
  4132c4:	mov	x1, x21
  4132c8:	mov	w2, wzr
  4132cc:	bl	4047a0 <fnmatch@plt>
  4132d0:	cbz	w0, 413238 <wcrtomb@plt+0xe748>
  4132d4:	ldr	x23, [x23]
  4132d8:	cbnz	x23, 4132c0 <wcrtomb@plt+0xe7d0>
  4132dc:	ldr	x8, [x22]
  4132e0:	cbnz	x8, 41330c <wcrtomb@plt+0xe81c>
  4132e4:	mov	w0, #0x58                  	// #88
  4132e8:	bl	44a010 <argp_parse@@Base+0xf964>
  4132ec:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  4132f0:	adrp	x4, 404000 <localtime_r@plt>
  4132f4:	add	x3, x3, #0x10
  4132f8:	add	x4, x4, #0x6b0
  4132fc:	mov	x1, xzr
  413300:	mov	x2, xzr
  413304:	str	x0, [x22]
  413308:	bl	44ae4c <_obstack_begin@@Base>
  41330c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413310:	ldr	x23, [x8, #1104]
  413314:	cbz	x23, 413330 <wcrtomb@plt+0xe840>
  413318:	ldr	x0, [x23, #8]
  41331c:	mov	x1, x21
  413320:	bl	404610 <strcmp@plt>
  413324:	cbz	w0, 413238 <wcrtomb@plt+0xe748>
  413328:	ldr	x23, [x23]
  41332c:	cbnz	x23, 413318 <wcrtomb@plt+0xe828>
  413330:	ldur	x4, [x24, #-24]
  413334:	mov	x0, x20
  413338:	mov	x1, x21
  41333c:	mov	x2, x22
  413340:	mov	x3, x19
  413344:	ldp	x20, x19, [sp, #48]
  413348:	ldp	x22, x21, [sp, #32]
  41334c:	ldp	x24, x23, [sp, #16]
  413350:	ldp	x29, x30, [sp], #64
  413354:	br	x4
  413358:	stp	x29, x30, [sp, #-64]!
  41335c:	bic	x8, x2, x2, asr #63
  413360:	stp	x22, x21, [sp, #32]
  413364:	add	x22, x8, #0x200
  413368:	stp	x24, x23, [sp, #16]
  41336c:	stp	x20, x19, [sp, #48]
  413370:	mov	x19, x0
  413374:	str	x22, [x0, #8]
  413378:	add	x0, x8, #0x201
  41337c:	mov	x29, sp
  413380:	mov	x20, x1
  413384:	bl	44a010 <argp_parse@@Base+0xf964>
  413388:	mov	x23, xzr
  41338c:	mov	w24, #0x200                 	// #512
  413390:	str	x0, [x19, #16]
  413394:	strb	wzr, [x0, x22]
  413398:	cmp	x22, #0x200
  41339c:	csel	x21, x22, x24, cc  // cc = lo, ul, last
  4133a0:	cbz	x20, 4133ec <wcrtomb@plt+0xe8fc>
  4133a4:	ldr	x8, [x19, #16]
  4133a8:	mov	x1, x20
  4133ac:	mov	x2, x21
  4133b0:	add	x0, x8, x23
  4133b4:	bl	403e80 <memcpy@plt>
  4133b8:	mov	x0, x20
  4133bc:	bl	405640 <wcrtomb@plt+0xb50>
  4133c0:	bl	405310 <wcrtomb@plt+0x820>
  4133c4:	sub	x22, x22, x21
  4133c8:	mov	x20, x0
  4133cc:	cmp	x22, #0x0
  4133d0:	add	x23, x21, x23
  4133d4:	b.gt	413398 <wcrtomb@plt+0xe8a8>
  4133d8:	ldp	x20, x19, [sp, #48]
  4133dc:	ldp	x22, x21, [sp, #32]
  4133e0:	ldp	x24, x23, [sp, #16]
  4133e4:	ldp	x29, x30, [sp], #64
  4133e8:	ret
  4133ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4133f0:	ldr	x8, [x8, #4000]
  4133f4:	cbz	x8, 4133fc <wcrtomb@plt+0xe90c>
  4133f8:	blr	x8
  4133fc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  413400:	add	x1, x1, #0x818
  413404:	mov	w2, #0x5                   	// #5
  413408:	mov	x0, xzr
  41340c:	bl	4048b0 <dcgettext@plt>
  413410:	mov	x2, x0
  413414:	mov	w0, wzr
  413418:	mov	w1, wzr
  41341c:	bl	403f60 <error@plt>
  413420:	bl	40eb40 <wcrtomb@plt+0xa050>
  413424:	str	xzr, [x0, #24]
  413428:	ret
  41342c:	stp	x29, x30, [sp, #-48]!
  413430:	stp	x22, x21, [sp, #16]
  413434:	stp	x20, x19, [sp, #32]
  413438:	ldr	x8, [x0, #16]
  41343c:	mov	x29, sp
  413440:	cbz	x8, 413454 <wcrtomb@plt+0xe964>
  413444:	ldp	x20, x19, [sp, #32]
  413448:	ldp	x22, x21, [sp, #16]
  41344c:	ldp	x29, x30, [sp], #48
  413450:	ret
  413454:	ldr	x21, [x0]
  413458:	mov	x19, x0
  41345c:	mov	x20, x1
  413460:	cbnz	x21, 413490 <wcrtomb@plt+0xe9a0>
  413464:	mov	w0, #0x58                  	// #88
  413468:	bl	44a010 <argp_parse@@Base+0xf964>
  41346c:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  413470:	adrp	x4, 404000 <localtime_r@plt>
  413474:	add	x3, x3, #0x10
  413478:	add	x4, x4, #0x6b0
  41347c:	mov	x1, xzr
  413480:	mov	x2, xzr
  413484:	str	x0, [x19]
  413488:	bl	44ae4c <_obstack_begin@@Base>
  41348c:	ldr	x21, [x19]
  413490:	mov	x0, x20
  413494:	bl	403f00 <strlen@plt>
  413498:	ldr	x8, [x19, #24]
  41349c:	add	x8, x8, x0
  4134a0:	mov	x0, x20
  4134a4:	str	x8, [x19, #24]
  4134a8:	bl	403f00 <strlen@plt>
  4134ac:	mov	x22, x0
  4134b0:	ldp	x0, x8, [x21, #24]
  4134b4:	sub	x8, x8, x0
  4134b8:	cmp	x8, x22
  4134bc:	b.cs	4134d0 <wcrtomb@plt+0xe9e0>  // b.hs, b.nlast
  4134c0:	mov	x0, x21
  4134c4:	mov	x1, x22
  4134c8:	bl	44afa0 <_obstack_newchunk@@Base>
  4134cc:	ldr	x0, [x21, #24]
  4134d0:	mov	x1, x20
  4134d4:	mov	x2, x22
  4134d8:	bl	403e80 <memcpy@plt>
  4134dc:	ldr	x8, [x21, #24]
  4134e0:	add	x8, x8, x22
  4134e4:	str	x8, [x21, #24]
  4134e8:	ldr	x8, [x19, #8]
  4134ec:	add	x8, x8, x22
  4134f0:	str	x8, [x19, #8]
  4134f4:	ldp	x20, x19, [sp, #32]
  4134f8:	ldp	x22, x21, [sp, #16]
  4134fc:	ldp	x29, x30, [sp], #48
  413500:	ret
  413504:	sub	sp, sp, #0x70
  413508:	stp	x29, x30, [sp, #32]
  41350c:	stp	x24, x23, [sp, #64]
  413510:	stp	x22, x21, [sp, #80]
  413514:	stp	x20, x19, [sp, #96]
  413518:	ldr	x8, [x0, #16]
  41351c:	str	x25, [sp, #48]
  413520:	add	x29, sp, #0x20
  413524:	cbz	x8, 413530 <wcrtomb@plt+0xea40>
  413528:	mov	w0, wzr
  41352c:	b	413680 <wcrtomb@plt+0xeb90>
  413530:	ldr	x8, [x0]
  413534:	mov	x20, x0
  413538:	mov	x19, x1
  41353c:	cbnz	x8, 413568 <wcrtomb@plt+0xea78>
  413540:	mov	w0, #0x58                  	// #88
  413544:	bl	44a010 <argp_parse@@Base+0xf964>
  413548:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  41354c:	adrp	x4, 404000 <localtime_r@plt>
  413550:	add	x3, x3, #0x10
  413554:	add	x4, x4, #0x6b0
  413558:	mov	x1, xzr
  41355c:	mov	x2, xzr
  413560:	str	x0, [x20]
  413564:	bl	44ae4c <_obstack_begin@@Base>
  413568:	mov	x0, x19
  41356c:	bl	403f00 <strlen@plt>
  413570:	ldr	x9, [x20, #24]
  413574:	add	x10, sp, #0x8
  413578:	mov	x8, xzr
  41357c:	add	x24, x10, #0x14
  413580:	add	x9, x0, x9
  413584:	add	x23, x9, #0x3
  413588:	add	x0, x23, x8
  41358c:	add	x1, sp, #0x8
  413590:	mov	x22, x8
  413594:	bl	440290 <argp_parse@@Base+0x5be4>
  413598:	sub	x8, x24, x0
  41359c:	cmp	x8, x22
  4135a0:	b.ne	413588 <wcrtomb@plt+0xea98>  // b.any
  4135a4:	mov	x21, x0
  4135a8:	mov	x0, x19
  4135ac:	bl	403f00 <strlen@plt>
  4135b0:	ldr	x24, [x20]
  4135b4:	add	x25, x0, x22
  4135b8:	add	x22, x25, #0x2
  4135bc:	ldp	x9, x8, [x24, #24]
  4135c0:	sub	x10, x8, x9
  4135c4:	cmp	x10, x22
  4135c8:	b.cs	4135e8 <wcrtomb@plt+0xeaf8>  // b.hs, b.nlast
  4135cc:	mov	x0, x24
  4135d0:	mov	x1, x22
  4135d4:	bl	44afa0 <_obstack_newchunk@@Base>
  4135d8:	ldr	x23, [x20]
  4135dc:	ldr	x9, [x24, #24]
  4135e0:	ldr	x8, [x23, #32]
  4135e4:	b	4135ec <wcrtomb@plt+0xeafc>
  4135e8:	mov	x23, x24
  4135ec:	add	x9, x9, x22
  4135f0:	str	x9, [x24, #24]
  4135f4:	ldr	x9, [x20, #8]
  4135f8:	add	x9, x9, x22
  4135fc:	str	x9, [x20, #8]
  413600:	ldr	x9, [x23, #24]
  413604:	cmp	x8, x9
  413608:	b.ne	41361c <wcrtomb@plt+0xeb2c>  // b.any
  41360c:	mov	w1, #0x1                   	// #1
  413610:	mov	x0, x23
  413614:	bl	44afa0 <_obstack_newchunk@@Base>
  413618:	ldr	x9, [x23, #24]
  41361c:	add	x8, x9, #0x1
  413620:	mov	w10, #0xa                   	// #10
  413624:	str	x8, [x23, #24]
  413628:	strb	w10, [x9]
  41362c:	ldp	x9, x8, [x20]
  413630:	ldr	x2, [x20, #24]
  413634:	add	x8, x8, #0x1
  413638:	str	x8, [x20, #8]
  41363c:	ldr	x8, [x9, #24]
  413640:	sub	x8, x8, x2
  413644:	sub	x8, x8, x25
  413648:	sub	x20, x8, #0x3
  41364c:	add	x0, x20, x22
  413650:	mov	x1, x20
  413654:	bl	403e90 <memmove@plt>
  413658:	mov	x0, x20
  41365c:	mov	x1, x21
  413660:	bl	404120 <stpcpy@plt>
  413664:	mov	w8, #0x20                  	// #32
  413668:	strb	w8, [x0], #1
  41366c:	mov	x1, x19
  413670:	bl	404120 <stpcpy@plt>
  413674:	mov	w8, #0x3d                  	// #61
  413678:	strb	w8, [x0]
  41367c:	mov	w0, #0x1                   	// #1
  413680:	ldp	x20, x19, [sp, #96]
  413684:	ldp	x22, x21, [sp, #80]
  413688:	ldp	x24, x23, [sp, #64]
  41368c:	ldr	x25, [sp, #48]
  413690:	ldp	x29, x30, [sp, #32]
  413694:	add	sp, sp, #0x70
  413698:	ret
  41369c:	sub	sp, sp, #0x50
  4136a0:	stp	x29, x30, [sp, #32]
  4136a4:	str	x21, [sp, #48]
  4136a8:	stp	x20, x19, [sp, #64]
  4136ac:	ldp	x8, x9, [x0, #216]
  4136b0:	mov	x19, x2
  4136b4:	mov	x20, x1
  4136b8:	mov	x2, sp
  4136bc:	mov	x0, x8
  4136c0:	mov	x1, x9
  4136c4:	add	x29, sp, #0x20
  4136c8:	bl	41be34 <wcrtomb@plt+0x17344>
  4136cc:	mov	x21, x0
  4136d0:	bl	403f00 <strlen@plt>
  4136d4:	mov	x3, x0
  4136d8:	mov	x0, x19
  4136dc:	mov	x1, x20
  4136e0:	mov	x2, x21
  4136e4:	bl	414e88 <wcrtomb@plt+0x10398>
  4136e8:	ldp	x20, x19, [sp, #64]
  4136ec:	ldr	x21, [sp, #48]
  4136f0:	ldp	x29, x30, [sp, #32]
  4136f4:	add	sp, sp, #0x50
  4136f8:	ret
  4136fc:	sub	sp, sp, #0x70
  413700:	stp	x20, x19, [sp, #96]
  413704:	mov	x19, x2
  413708:	stp	x22, x21, [sp, #80]
  41370c:	mov	x20, x1
  413710:	mov	x21, x0
  413714:	add	x1, sp, #0x8
  413718:	mov	w2, #0x1                   	// #1
  41371c:	mov	x0, x19
  413720:	stp	x29, x30, [sp, #64]
  413724:	add	x29, sp, #0x40
  413728:	bl	41bf84 <wcrtomb@plt+0x17494>
  41372c:	tbnz	x1, #63, 413738 <wcrtomb@plt+0xec48>
  413730:	stp	x0, x1, [x21, #216]
  413734:	b	413794 <wcrtomb@plt+0xeca4>
  413738:	ldr	x8, [sp, #8]
  41373c:	cmp	x8, x19
  413740:	b.ls	41374c <wcrtomb@plt+0xec5c>  // b.plast
  413744:	ldrb	w8, [x8]
  413748:	cbz	w8, 4137a8 <wcrtomb@plt+0xecb8>
  41374c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413750:	ldr	x8, [x8, #4000]
  413754:	cbz	x8, 41375c <wcrtomb@plt+0xec6c>
  413758:	blr	x8
  41375c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  413760:	add	x1, x1, #0x72d
  413764:	mov	w2, #0x5                   	// #5
  413768:	mov	x0, xzr
  41376c:	bl	4048b0 <dcgettext@plt>
  413770:	mov	x2, x0
  413774:	mov	w0, wzr
  413778:	mov	w1, wzr
  41377c:	mov	x3, x20
  413780:	mov	x4, x19
  413784:	bl	403f60 <error@plt>
  413788:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41378c:	mov	w9, #0x2                   	// #2
  413790:	str	w9, [x8, #2352]
  413794:	ldp	x20, x19, [sp, #96]
  413798:	ldp	x22, x21, [sp, #80]
  41379c:	ldp	x29, x30, [sp, #64]
  4137a0:	add	sp, sp, #0x70
  4137a4:	ret
  4137a8:	sub	x1, x29, #0x18
  4137ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4137b0:	bl	440170 <argp_parse@@Base+0x5ac4>
  4137b4:	mov	x21, x0
  4137b8:	add	x1, sp, #0x10
  4137bc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4137c0:	bl	440290 <argp_parse@@Base+0x5be4>
  4137c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4137c8:	ldr	x8, [x8, #4000]
  4137cc:	mov	x22, x0
  4137d0:	cbz	x8, 4137d8 <wcrtomb@plt+0xece8>
  4137d4:	blr	x8
  4137d8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4137dc:	add	x1, x1, #0x756
  4137e0:	mov	w2, #0x5                   	// #5
  4137e4:	mov	x0, xzr
  4137e8:	bl	4048b0 <dcgettext@plt>
  4137ec:	mov	x2, x0
  4137f0:	mov	w0, wzr
  4137f4:	mov	w1, wzr
  4137f8:	mov	x3, x20
  4137fc:	mov	x4, x19
  413800:	mov	x5, x21
  413804:	mov	x6, x22
  413808:	bl	403f60 <error@plt>
  41380c:	b	413788 <wcrtomb@plt+0xec98>
  413810:	ret
  413814:	ret
  413818:	sub	sp, sp, #0x50
  41381c:	stp	x29, x30, [sp, #32]
  413820:	str	x21, [sp, #48]
  413824:	stp	x20, x19, [sp, #64]
  413828:	ldp	x8, x9, [x0, #248]
  41382c:	mov	x19, x2
  413830:	mov	x20, x1
  413834:	mov	x2, sp
  413838:	mov	x0, x8
  41383c:	mov	x1, x9
  413840:	add	x29, sp, #0x20
  413844:	bl	41be34 <wcrtomb@plt+0x17344>
  413848:	mov	x21, x0
  41384c:	bl	403f00 <strlen@plt>
  413850:	mov	x3, x0
  413854:	mov	x0, x19
  413858:	mov	x1, x20
  41385c:	mov	x2, x21
  413860:	bl	414e88 <wcrtomb@plt+0x10398>
  413864:	ldp	x20, x19, [sp, #64]
  413868:	ldr	x21, [sp, #48]
  41386c:	ldp	x29, x30, [sp, #32]
  413870:	add	sp, sp, #0x50
  413874:	ret
  413878:	sub	sp, sp, #0x70
  41387c:	stp	x20, x19, [sp, #96]
  413880:	mov	x19, x2
  413884:	stp	x22, x21, [sp, #80]
  413888:	mov	x20, x1
  41388c:	mov	x21, x0
  413890:	add	x1, sp, #0x8
  413894:	mov	w2, #0x1                   	// #1
  413898:	mov	x0, x19
  41389c:	stp	x29, x30, [sp, #64]
  4138a0:	add	x29, sp, #0x40
  4138a4:	bl	41bf84 <wcrtomb@plt+0x17494>
  4138a8:	tbnz	x1, #63, 4138b4 <wcrtomb@plt+0xedc4>
  4138ac:	stp	x0, x1, [x21, #248]
  4138b0:	b	413910 <wcrtomb@plt+0xee20>
  4138b4:	ldr	x8, [sp, #8]
  4138b8:	cmp	x8, x19
  4138bc:	b.ls	4138c8 <wcrtomb@plt+0xedd8>  // b.plast
  4138c0:	ldrb	w8, [x8]
  4138c4:	cbz	w8, 413924 <wcrtomb@plt+0xee34>
  4138c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4138cc:	ldr	x8, [x8, #4000]
  4138d0:	cbz	x8, 4138d8 <wcrtomb@plt+0xede8>
  4138d4:	blr	x8
  4138d8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4138dc:	add	x1, x1, #0x72d
  4138e0:	mov	w2, #0x5                   	// #5
  4138e4:	mov	x0, xzr
  4138e8:	bl	4048b0 <dcgettext@plt>
  4138ec:	mov	x2, x0
  4138f0:	mov	w0, wzr
  4138f4:	mov	w1, wzr
  4138f8:	mov	x3, x20
  4138fc:	mov	x4, x19
  413900:	bl	403f60 <error@plt>
  413904:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413908:	mov	w9, #0x2                   	// #2
  41390c:	str	w9, [x8, #2352]
  413910:	ldp	x20, x19, [sp, #96]
  413914:	ldp	x22, x21, [sp, #80]
  413918:	ldp	x29, x30, [sp, #64]
  41391c:	add	sp, sp, #0x70
  413920:	ret
  413924:	sub	x1, x29, #0x18
  413928:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41392c:	bl	440170 <argp_parse@@Base+0x5ac4>
  413930:	mov	x21, x0
  413934:	add	x1, sp, #0x10
  413938:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41393c:	bl	440290 <argp_parse@@Base+0x5be4>
  413940:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413944:	ldr	x8, [x8, #4000]
  413948:	mov	x22, x0
  41394c:	cbz	x8, 413954 <wcrtomb@plt+0xee64>
  413950:	blr	x8
  413954:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  413958:	add	x1, x1, #0x756
  41395c:	mov	w2, #0x5                   	// #5
  413960:	mov	x0, xzr
  413964:	bl	4048b0 <dcgettext@plt>
  413968:	mov	x2, x0
  41396c:	mov	w0, wzr
  413970:	mov	w1, wzr
  413974:	mov	x3, x20
  413978:	mov	x4, x19
  41397c:	mov	x5, x21
  413980:	mov	x6, x22
  413984:	bl	403f60 <error@plt>
  413988:	b	413904 <wcrtomb@plt+0xee14>
  41398c:	sub	sp, sp, #0x50
  413990:	stp	x29, x30, [sp, #32]
  413994:	stp	x20, x19, [sp, #64]
  413998:	ldr	w0, [x0, #116]
  41399c:	mov	x19, x2
  4139a0:	mov	x20, x1
  4139a4:	add	x3, sp, #0x8
  4139a8:	mov	w2, #0xffffffff            	// #-1
  4139ac:	mov	x1, xzr
  4139b0:	str	x21, [sp, #48]
  4139b4:	add	x29, sp, #0x20
  4139b8:	bl	41bc74 <wcrtomb@plt+0x17184>
  4139bc:	mov	x21, x0
  4139c0:	bl	403f00 <strlen@plt>
  4139c4:	mov	x3, x0
  4139c8:	mov	x0, x19
  4139cc:	mov	x1, x20
  4139d0:	mov	x2, x21
  4139d4:	bl	414e88 <wcrtomb@plt+0x10398>
  4139d8:	ldp	x20, x19, [sp, #64]
  4139dc:	ldr	x21, [sp, #48]
  4139e0:	ldp	x29, x30, [sp, #32]
  4139e4:	add	sp, sp, #0x50
  4139e8:	ret
  4139ec:	stp	x29, x30, [sp, #-32]!
  4139f0:	mov	x29, sp
  4139f4:	mov	x8, x2
  4139f8:	str	x19, [sp, #16]
  4139fc:	mov	x3, x1
  413a00:	mov	x19, x0
  413a04:	add	x0, x29, #0x18
  413a08:	mov	w2, #0xffffffff            	// #-1
  413a0c:	mov	x1, x8
  413a10:	bl	41516c <wcrtomb@plt+0x1067c>
  413a14:	tbz	w0, #0, 413a20 <wcrtomb@plt+0xef30>
  413a18:	ldr	x8, [x29, #24]
  413a1c:	str	w8, [x19, #116]
  413a20:	ldr	x19, [sp, #16]
  413a24:	ldp	x29, x30, [sp], #32
  413a28:	ret
  413a2c:	stp	x29, x30, [sp, #-48]!
  413a30:	stp	x20, x19, [sp, #32]
  413a34:	str	x21, [sp, #16]
  413a38:	ldr	x21, [x0, #40]
  413a3c:	mov	x29, sp
  413a40:	mov	x19, x2
  413a44:	mov	x20, x1
  413a48:	add	x2, x29, #0x18
  413a4c:	mov	w0, #0x1                   	// #1
  413a50:	mov	x1, x21
  413a54:	bl	42a844 <wcrtomb@plt+0x25d54>
  413a58:	tbz	w0, #0, 413a64 <wcrtomb@plt+0xef74>
  413a5c:	ldr	x21, [x29, #24]
  413a60:	b	413a74 <wcrtomb@plt+0xef84>
  413a64:	mov	x0, x21
  413a68:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  413a6c:	mov	x21, x0
  413a70:	str	x0, [x29, #24]
  413a74:	mov	x0, x21
  413a78:	bl	403f00 <strlen@plt>
  413a7c:	mov	x3, x0
  413a80:	mov	x0, x19
  413a84:	mov	x1, x20
  413a88:	mov	x2, x21
  413a8c:	bl	414e88 <wcrtomb@plt+0x10398>
  413a90:	ldr	x0, [x29, #24]
  413a94:	bl	4046b0 <free@plt>
  413a98:	ldp	x20, x19, [sp, #32]
  413a9c:	ldr	x21, [sp, #16]
  413aa0:	ldp	x29, x30, [sp], #48
  413aa4:	ret
  413aa8:	stp	x29, x30, [sp, #-32]!
  413aac:	stp	x20, x19, [sp, #16]
  413ab0:	mov	x19, x0
  413ab4:	ldr	x0, [x19, #40]!
  413ab8:	mov	x20, x2
  413abc:	mov	x29, sp
  413ac0:	cbz	x0, 413acc <wcrtomb@plt+0xefdc>
  413ac4:	bl	4046b0 <free@plt>
  413ac8:	str	xzr, [x19]
  413acc:	mov	w0, wzr
  413ad0:	mov	x1, x20
  413ad4:	mov	x2, x19
  413ad8:	bl	42a844 <wcrtomb@plt+0x25d54>
  413adc:	tbz	w0, #0, 413aec <wcrtomb@plt+0xeffc>
  413ae0:	ldp	x20, x19, [sp, #16]
  413ae4:	ldp	x29, x30, [sp], #32
  413ae8:	ret
  413aec:	mov	x0, x19
  413af0:	mov	x1, x20
  413af4:	ldp	x20, x19, [sp, #16]
  413af8:	ldp	x29, x30, [sp], #32
  413afc:	b	41b60c <wcrtomb@plt+0x16b1c>
  413b00:	stp	x29, x30, [sp, #-48]!
  413b04:	stp	x20, x19, [sp, #32]
  413b08:	str	x21, [sp, #16]
  413b0c:	ldr	x21, [x0, #24]
  413b10:	mov	x29, sp
  413b14:	mov	x19, x2
  413b18:	mov	x20, x1
  413b1c:	add	x2, x29, #0x18
  413b20:	mov	w0, #0x1                   	// #1
  413b24:	mov	x1, x21
  413b28:	bl	42a844 <wcrtomb@plt+0x25d54>
  413b2c:	tbz	w0, #0, 413b38 <wcrtomb@plt+0xf048>
  413b30:	ldr	x21, [x29, #24]
  413b34:	b	413b48 <wcrtomb@plt+0xf058>
  413b38:	mov	x0, x21
  413b3c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  413b40:	mov	x21, x0
  413b44:	str	x0, [x29, #24]
  413b48:	mov	x0, x21
  413b4c:	bl	403f00 <strlen@plt>
  413b50:	mov	x3, x0
  413b54:	mov	x0, x19
  413b58:	mov	x1, x20
  413b5c:	mov	x2, x21
  413b60:	bl	414e88 <wcrtomb@plt+0x10398>
  413b64:	ldr	x0, [x29, #24]
  413b68:	bl	4046b0 <free@plt>
  413b6c:	ldp	x20, x19, [sp, #32]
  413b70:	ldr	x21, [sp, #16]
  413b74:	ldp	x29, x30, [sp], #48
  413b78:	ret
  413b7c:	stp	x29, x30, [sp, #-32]!
  413b80:	stp	x20, x19, [sp, #16]
  413b84:	mov	x19, x0
  413b88:	ldr	x0, [x19, #24]!
  413b8c:	mov	x20, x2
  413b90:	mov	x29, sp
  413b94:	cbz	x0, 413ba0 <wcrtomb@plt+0xf0b0>
  413b98:	bl	4046b0 <free@plt>
  413b9c:	str	xzr, [x19]
  413ba0:	mov	w0, wzr
  413ba4:	mov	x1, x20
  413ba8:	mov	x2, x19
  413bac:	bl	42a844 <wcrtomb@plt+0x25d54>
  413bb0:	tbz	w0, #0, 413bc0 <wcrtomb@plt+0xf0d0>
  413bb4:	ldp	x20, x19, [sp, #16]
  413bb8:	ldp	x29, x30, [sp], #32
  413bbc:	ret
  413bc0:	mov	x0, x19
  413bc4:	mov	x1, x20
  413bc8:	ldp	x20, x19, [sp, #16]
  413bcc:	ldp	x29, x30, [sp], #32
  413bd0:	b	41b60c <wcrtomb@plt+0x16b1c>
  413bd4:	sub	sp, sp, #0x50
  413bd8:	add	x8, x3, #0x8
  413bdc:	add	x10, x0, #0xf0
  413be0:	cmp	x3, #0x0
  413be4:	stp	x29, x30, [sp, #32]
  413be8:	stp	x20, x19, [sp, #64]
  413bec:	add	x9, x0, #0xe8
  413bf0:	csel	x8, x10, x8, eq  // eq = none
  413bf4:	csel	x9, x9, x3, eq  // eq = none
  413bf8:	ldr	x8, [x8]
  413bfc:	ldr	x0, [x9]
  413c00:	mov	x19, x2
  413c04:	mov	x20, x1
  413c08:	mov	x2, sp
  413c0c:	mov	x1, x8
  413c10:	str	x21, [sp, #48]
  413c14:	add	x29, sp, #0x20
  413c18:	bl	41be34 <wcrtomb@plt+0x17344>
  413c1c:	mov	x21, x0
  413c20:	bl	403f00 <strlen@plt>
  413c24:	mov	x3, x0
  413c28:	mov	x0, x19
  413c2c:	mov	x1, x20
  413c30:	mov	x2, x21
  413c34:	bl	414e88 <wcrtomb@plt+0x10398>
  413c38:	ldp	x20, x19, [sp, #64]
  413c3c:	ldr	x21, [sp, #48]
  413c40:	ldp	x29, x30, [sp, #32]
  413c44:	add	sp, sp, #0x50
  413c48:	ret
  413c4c:	sub	sp, sp, #0x70
  413c50:	stp	x20, x19, [sp, #96]
  413c54:	mov	x19, x2
  413c58:	stp	x22, x21, [sp, #80]
  413c5c:	mov	x20, x1
  413c60:	mov	x21, x0
  413c64:	add	x1, sp, #0x8
  413c68:	mov	w2, #0x1                   	// #1
  413c6c:	mov	x0, x19
  413c70:	stp	x29, x30, [sp, #64]
  413c74:	add	x29, sp, #0x40
  413c78:	bl	41bf84 <wcrtomb@plt+0x17494>
  413c7c:	tbnz	x1, #63, 413c88 <wcrtomb@plt+0xf198>
  413c80:	stp	x0, x1, [x21, #232]
  413c84:	b	413ce4 <wcrtomb@plt+0xf1f4>
  413c88:	ldr	x8, [sp, #8]
  413c8c:	cmp	x8, x19
  413c90:	b.ls	413c9c <wcrtomb@plt+0xf1ac>  // b.plast
  413c94:	ldrb	w8, [x8]
  413c98:	cbz	w8, 413cf8 <wcrtomb@plt+0xf208>
  413c9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413ca0:	ldr	x8, [x8, #4000]
  413ca4:	cbz	x8, 413cac <wcrtomb@plt+0xf1bc>
  413ca8:	blr	x8
  413cac:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  413cb0:	add	x1, x1, #0x72d
  413cb4:	mov	w2, #0x5                   	// #5
  413cb8:	mov	x0, xzr
  413cbc:	bl	4048b0 <dcgettext@plt>
  413cc0:	mov	x2, x0
  413cc4:	mov	w0, wzr
  413cc8:	mov	w1, wzr
  413ccc:	mov	x3, x20
  413cd0:	mov	x4, x19
  413cd4:	bl	403f60 <error@plt>
  413cd8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413cdc:	mov	w9, #0x2                   	// #2
  413ce0:	str	w9, [x8, #2352]
  413ce4:	ldp	x20, x19, [sp, #96]
  413ce8:	ldp	x22, x21, [sp, #80]
  413cec:	ldp	x29, x30, [sp, #64]
  413cf0:	add	sp, sp, #0x70
  413cf4:	ret
  413cf8:	sub	x1, x29, #0x18
  413cfc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  413d00:	bl	440170 <argp_parse@@Base+0x5ac4>
  413d04:	mov	x21, x0
  413d08:	add	x1, sp, #0x10
  413d0c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  413d10:	bl	440290 <argp_parse@@Base+0x5be4>
  413d14:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  413d18:	ldr	x8, [x8, #4000]
  413d1c:	mov	x22, x0
  413d20:	cbz	x8, 413d28 <wcrtomb@plt+0xf238>
  413d24:	blr	x8
  413d28:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  413d2c:	add	x1, x1, #0x756
  413d30:	mov	w2, #0x5                   	// #5
  413d34:	mov	x0, xzr
  413d38:	bl	4048b0 <dcgettext@plt>
  413d3c:	mov	x2, x0
  413d40:	mov	w0, wzr
  413d44:	mov	w1, wzr
  413d48:	mov	x3, x20
  413d4c:	mov	x4, x19
  413d50:	mov	x5, x21
  413d54:	mov	x6, x22
  413d58:	bl	403f60 <error@plt>
  413d5c:	b	413cd8 <wcrtomb@plt+0xf1e8>
  413d60:	stp	x29, x30, [sp, #-48]!
  413d64:	stp	x20, x19, [sp, #32]
  413d68:	str	x21, [sp, #16]
  413d6c:	ldr	x21, [x0, #8]
  413d70:	mov	x29, sp
  413d74:	mov	x19, x2
  413d78:	mov	x20, x1
  413d7c:	add	x2, x29, #0x18
  413d80:	mov	w0, #0x1                   	// #1
  413d84:	mov	x1, x21
  413d88:	bl	42a844 <wcrtomb@plt+0x25d54>
  413d8c:	tbz	w0, #0, 413d98 <wcrtomb@plt+0xf2a8>
  413d90:	ldr	x21, [x29, #24]
  413d94:	b	413da8 <wcrtomb@plt+0xf2b8>
  413d98:	mov	x0, x21
  413d9c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  413da0:	mov	x21, x0
  413da4:	str	x0, [x29, #24]
  413da8:	mov	x0, x21
  413dac:	bl	403f00 <strlen@plt>
  413db0:	mov	x3, x0
  413db4:	mov	x0, x19
  413db8:	mov	x1, x20
  413dbc:	mov	x2, x21
  413dc0:	bl	414e88 <wcrtomb@plt+0x10398>
  413dc4:	ldr	x0, [x29, #24]
  413dc8:	bl	4046b0 <free@plt>
  413dcc:	ldp	x20, x19, [sp, #32]
  413dd0:	ldr	x21, [sp, #16]
  413dd4:	ldp	x29, x30, [sp], #48
  413dd8:	ret
  413ddc:	stp	x29, x30, [sp, #-48]!
  413de0:	stp	x20, x19, [sp, #32]
  413de4:	ldrb	w8, [x0, #321]
  413de8:	str	x21, [sp, #16]
  413dec:	mov	x29, sp
  413df0:	cbz	w8, 413e04 <wcrtomb@plt+0xf314>
  413df4:	ldp	x20, x19, [sp, #32]
  413df8:	ldr	x21, [sp, #16]
  413dfc:	ldp	x29, x30, [sp], #48
  413e00:	ret
  413e04:	mov	x19, x0
  413e08:	ldr	x0, [x0]
  413e0c:	mov	x20, x2
  413e10:	cbz	x0, 413e1c <wcrtomb@plt+0xf32c>
  413e14:	bl	4046b0 <free@plt>
  413e18:	str	xzr, [x19]
  413e1c:	mov	w0, wzr
  413e20:	mov	x1, x20
  413e24:	mov	x2, x19
  413e28:	bl	42a844 <wcrtomb@plt+0x25d54>
  413e2c:	tbnz	w0, #0, 413e3c <wcrtomb@plt+0xf34c>
  413e30:	mov	x0, x19
  413e34:	mov	x1, x20
  413e38:	bl	41b60c <wcrtomb@plt+0x16b1c>
  413e3c:	mov	x21, x19
  413e40:	ldr	x0, [x21, #8]!
  413e44:	cbz	x0, 413e50 <wcrtomb@plt+0xf360>
  413e48:	bl	4046b0 <free@plt>
  413e4c:	str	xzr, [x21]
  413e50:	mov	w0, wzr
  413e54:	mov	x1, x20
  413e58:	mov	x2, x21
  413e5c:	bl	42a844 <wcrtomb@plt+0x25d54>
  413e60:	tbnz	w0, #0, 413e70 <wcrtomb@plt+0xf380>
  413e64:	mov	x0, x21
  413e68:	mov	x1, x20
  413e6c:	bl	41b60c <wcrtomb@plt+0x16b1c>
  413e70:	ldr	x0, [x19, #8]
  413e74:	bl	43c1a0 <argp_parse@@Base+0x1af4>
  413e78:	and	w8, w0, #0x1
  413e7c:	strb	w8, [x19, #16]
  413e80:	ldp	x20, x19, [sp, #32]
  413e84:	ldr	x21, [sp, #16]
  413e88:	ldp	x29, x30, [sp], #48
  413e8c:	ret
  413e90:	sub	sp, sp, #0x50
  413e94:	stp	x29, x30, [sp, #32]
  413e98:	stp	x20, x19, [sp, #64]
  413e9c:	ldr	x0, [x0, #136]
  413ea0:	mov	x19, x2
  413ea4:	mov	x20, x1
  413ea8:	add	x3, sp, #0x8
  413eac:	mov	x2, #0xffffffffffffffff    	// #-1
  413eb0:	mov	x1, xzr
  413eb4:	str	x21, [sp, #48]
  413eb8:	add	x29, sp, #0x20
  413ebc:	bl	41bc74 <wcrtomb@plt+0x17184>
  413ec0:	mov	x21, x0
  413ec4:	bl	403f00 <strlen@plt>
  413ec8:	mov	x3, x0
  413ecc:	mov	x0, x19
  413ed0:	mov	x1, x20
  413ed4:	mov	x2, x21
  413ed8:	bl	414e88 <wcrtomb@plt+0x10398>
  413edc:	ldp	x20, x19, [sp, #64]
  413ee0:	ldr	x21, [sp, #48]
  413ee4:	ldp	x29, x30, [sp, #32]
  413ee8:	add	sp, sp, #0x50
  413eec:	ret
  413ef0:	stp	x29, x30, [sp, #-32]!
  413ef4:	mov	x29, sp
  413ef8:	mov	x8, x2
  413efc:	str	x19, [sp, #16]
  413f00:	mov	x3, x1
  413f04:	mov	x19, x0
  413f08:	add	x0, x29, #0x18
  413f0c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  413f10:	mov	x1, x8
  413f14:	bl	41516c <wcrtomb@plt+0x1067c>
  413f18:	tbz	w0, #0, 413f24 <wcrtomb@plt+0xf434>
  413f1c:	ldr	x8, [x29, #24]
  413f20:	str	x8, [x19, #136]
  413f24:	ldr	x19, [sp, #16]
  413f28:	ldp	x29, x30, [sp], #32
  413f2c:	ret
  413f30:	sub	sp, sp, #0x50
  413f34:	stp	x29, x30, [sp, #32]
  413f38:	stp	x20, x19, [sp, #64]
  413f3c:	ldr	w0, [x0, #112]
  413f40:	mov	x19, x2
  413f44:	mov	x20, x1
  413f48:	add	x3, sp, #0x8
  413f4c:	mov	w2, #0xffffffff            	// #-1
  413f50:	mov	x1, xzr
  413f54:	str	x21, [sp, #48]
  413f58:	add	x29, sp, #0x20
  413f5c:	bl	41bc74 <wcrtomb@plt+0x17184>
  413f60:	mov	x21, x0
  413f64:	bl	403f00 <strlen@plt>
  413f68:	mov	x3, x0
  413f6c:	mov	x0, x19
  413f70:	mov	x1, x20
  413f74:	mov	x2, x21
  413f78:	bl	414e88 <wcrtomb@plt+0x10398>
  413f7c:	ldp	x20, x19, [sp, #64]
  413f80:	ldr	x21, [sp, #48]
  413f84:	ldp	x29, x30, [sp, #32]
  413f88:	add	sp, sp, #0x50
  413f8c:	ret
  413f90:	stp	x29, x30, [sp, #-32]!
  413f94:	mov	x29, sp
  413f98:	mov	x8, x2
  413f9c:	str	x19, [sp, #16]
  413fa0:	mov	x3, x1
  413fa4:	mov	x19, x0
  413fa8:	add	x0, x29, #0x18
  413fac:	mov	w2, #0xffffffff            	// #-1
  413fb0:	mov	x1, x8
  413fb4:	bl	41516c <wcrtomb@plt+0x1067c>
  413fb8:	tbz	w0, #0, 413fc4 <wcrtomb@plt+0xf4d4>
  413fbc:	ldr	x8, [x29, #24]
  413fc0:	str	w8, [x19, #112]
  413fc4:	ldr	x19, [sp, #16]
  413fc8:	ldp	x29, x30, [sp], #32
  413fcc:	ret
  413fd0:	stp	x29, x30, [sp, #-48]!
  413fd4:	stp	x20, x19, [sp, #32]
  413fd8:	str	x21, [sp, #16]
  413fdc:	ldr	x21, [x0, #32]
  413fe0:	mov	x29, sp
  413fe4:	mov	x19, x2
  413fe8:	mov	x20, x1
  413fec:	add	x2, x29, #0x18
  413ff0:	mov	w0, #0x1                   	// #1
  413ff4:	mov	x1, x21
  413ff8:	bl	42a844 <wcrtomb@plt+0x25d54>
  413ffc:	tbz	w0, #0, 414008 <wcrtomb@plt+0xf518>
  414000:	ldr	x21, [x29, #24]
  414004:	b	414018 <wcrtomb@plt+0xf528>
  414008:	mov	x0, x21
  41400c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  414010:	mov	x21, x0
  414014:	str	x0, [x29, #24]
  414018:	mov	x0, x21
  41401c:	bl	403f00 <strlen@plt>
  414020:	mov	x3, x0
  414024:	mov	x0, x19
  414028:	mov	x1, x20
  41402c:	mov	x2, x21
  414030:	bl	414e88 <wcrtomb@plt+0x10398>
  414034:	ldr	x0, [x29, #24]
  414038:	bl	4046b0 <free@plt>
  41403c:	ldp	x20, x19, [sp, #32]
  414040:	ldr	x21, [sp, #16]
  414044:	ldp	x29, x30, [sp], #48
  414048:	ret
  41404c:	stp	x29, x30, [sp, #-32]!
  414050:	stp	x20, x19, [sp, #16]
  414054:	mov	x19, x0
  414058:	ldr	x0, [x19, #32]!
  41405c:	mov	x20, x2
  414060:	mov	x29, sp
  414064:	cbz	x0, 414070 <wcrtomb@plt+0xf580>
  414068:	bl	4046b0 <free@plt>
  41406c:	str	xzr, [x19]
  414070:	mov	w0, wzr
  414074:	mov	x1, x20
  414078:	mov	x2, x19
  41407c:	bl	42a844 <wcrtomb@plt+0x25d54>
  414080:	tbz	w0, #0, 414090 <wcrtomb@plt+0xf5a0>
  414084:	ldp	x20, x19, [sp, #16]
  414088:	ldp	x29, x30, [sp], #32
  41408c:	ret
  414090:	mov	x0, x19
  414094:	mov	x1, x20
  414098:	ldp	x20, x19, [sp, #16]
  41409c:	ldp	x29, x30, [sp], #32
  4140a0:	b	41b60c <wcrtomb@plt+0x16b1c>
  4140a4:	stp	x29, x30, [sp, #-48]!
  4140a8:	stp	x20, x19, [sp, #32]
  4140ac:	mov	x19, x0
  4140b0:	ldr	x0, [x0]
  4140b4:	mov	x20, x2
  4140b8:	mov	w8, #0x1                   	// #1
  4140bc:	str	x21, [sp, #16]
  4140c0:	mov	x29, sp
  4140c4:	strb	w8, [x19, #321]
  4140c8:	cbz	x0, 4140d4 <wcrtomb@plt+0xf5e4>
  4140cc:	bl	4046b0 <free@plt>
  4140d0:	str	xzr, [x19]
  4140d4:	mov	w0, wzr
  4140d8:	mov	x1, x20
  4140dc:	mov	x2, x19
  4140e0:	bl	42a844 <wcrtomb@plt+0x25d54>
  4140e4:	tbnz	w0, #0, 4140f4 <wcrtomb@plt+0xf604>
  4140e8:	mov	x0, x19
  4140ec:	mov	x1, x20
  4140f0:	bl	41b60c <wcrtomb@plt+0x16b1c>
  4140f4:	mov	x21, x19
  4140f8:	ldr	x0, [x21, #8]!
  4140fc:	cbz	x0, 414108 <wcrtomb@plt+0xf618>
  414100:	bl	4046b0 <free@plt>
  414104:	str	xzr, [x21]
  414108:	mov	w0, wzr
  41410c:	mov	x1, x20
  414110:	mov	x2, x21
  414114:	bl	42a844 <wcrtomb@plt+0x25d54>
  414118:	tbnz	w0, #0, 414128 <wcrtomb@plt+0xf638>
  41411c:	mov	x0, x21
  414120:	mov	x1, x20
  414124:	bl	41b60c <wcrtomb@plt+0x16b1c>
  414128:	ldr	x0, [x19, #8]
  41412c:	bl	43c1a0 <argp_parse@@Base+0x1af4>
  414130:	and	w8, w0, #0x1
  414134:	strb	w8, [x19, #16]
  414138:	ldp	x20, x19, [sp, #32]
  41413c:	ldr	x21, [sp, #16]
  414140:	ldp	x29, x30, [sp], #48
  414144:	ret
  414148:	sub	sp, sp, #0x50
  41414c:	stp	x29, x30, [sp, #32]
  414150:	stp	x20, x19, [sp, #64]
  414154:	ldr	w0, [x0, #276]
  414158:	mov	x19, x2
  41415c:	mov	x20, x1
  414160:	add	x3, sp, #0x8
  414164:	mov	x2, #0xffffffffffffffff    	// #-1
  414168:	mov	x1, xzr
  41416c:	str	x21, [sp, #48]
  414170:	add	x29, sp, #0x20
  414174:	bl	41bc74 <wcrtomb@plt+0x17184>
  414178:	mov	x21, x0
  41417c:	bl	403f00 <strlen@plt>
  414180:	mov	x3, x0
  414184:	mov	x0, x19
  414188:	mov	x1, x20
  41418c:	mov	x2, x21
  414190:	bl	414e88 <wcrtomb@plt+0x10398>
  414194:	ldp	x20, x19, [sp, #64]
  414198:	ldr	x21, [sp, #48]
  41419c:	ldp	x29, x30, [sp, #32]
  4141a0:	add	sp, sp, #0x50
  4141a4:	ret
  4141a8:	stp	x29, x30, [sp, #-32]!
  4141ac:	mov	x29, sp
  4141b0:	mov	x8, x2
  4141b4:	str	x19, [sp, #16]
  4141b8:	mov	x3, x1
  4141bc:	mov	x19, x0
  4141c0:	add	x0, x29, #0x18
  4141c4:	mov	w2, #0xffffffff            	// #-1
  4141c8:	mov	x1, x8
  4141cc:	bl	41516c <wcrtomb@plt+0x1067c>
  4141d0:	tbz	w0, #0, 4141dc <wcrtomb@plt+0xf6ec>
  4141d4:	ldr	x8, [x29, #24]
  4141d8:	str	w8, [x19, #276]
  4141dc:	ldr	x19, [sp, #16]
  4141e0:	ldp	x29, x30, [sp], #32
  4141e4:	ret
  4141e8:	sub	sp, sp, #0x50
  4141ec:	stp	x29, x30, [sp, #32]
  4141f0:	stp	x20, x19, [sp, #64]
  4141f4:	ldr	w0, [x0, #280]
  4141f8:	mov	x19, x2
  4141fc:	mov	x20, x1
  414200:	add	x3, sp, #0x8
  414204:	mov	x2, #0xffffffffffffffff    	// #-1
  414208:	mov	x1, xzr
  41420c:	str	x21, [sp, #48]
  414210:	add	x29, sp, #0x20
  414214:	bl	41bc74 <wcrtomb@plt+0x17184>
  414218:	mov	x21, x0
  41421c:	bl	403f00 <strlen@plt>
  414220:	mov	x3, x0
  414224:	mov	x0, x19
  414228:	mov	x1, x20
  41422c:	mov	x2, x21
  414230:	bl	414e88 <wcrtomb@plt+0x10398>
  414234:	ldp	x20, x19, [sp, #64]
  414238:	ldr	x21, [sp, #48]
  41423c:	ldp	x29, x30, [sp, #32]
  414240:	add	sp, sp, #0x50
  414244:	ret
  414248:	stp	x29, x30, [sp, #-32]!
  41424c:	mov	x29, sp
  414250:	mov	x8, x2
  414254:	str	x19, [sp, #16]
  414258:	mov	x3, x1
  41425c:	mov	x19, x0
  414260:	add	x0, x29, #0x18
  414264:	mov	w2, #0xffffffff            	// #-1
  414268:	mov	x1, x8
  41426c:	bl	41516c <wcrtomb@plt+0x1067c>
  414270:	tbz	w0, #0, 41427c <wcrtomb@plt+0xf78c>
  414274:	ldr	x8, [x29, #24]
  414278:	str	w8, [x19, #280]
  41427c:	ldr	x19, [sp, #16]
  414280:	ldp	x29, x30, [sp], #32
  414284:	ret
  414288:	sub	sp, sp, #0x50
  41428c:	stp	x29, x30, [sp, #32]
  414290:	stp	x20, x19, [sp, #64]
  414294:	ldr	x0, [x0, #136]
  414298:	mov	x19, x2
  41429c:	mov	x20, x1
  4142a0:	add	x3, sp, #0x8
  4142a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4142a8:	mov	x1, xzr
  4142ac:	str	x21, [sp, #48]
  4142b0:	add	x29, sp, #0x20
  4142b4:	bl	41bc74 <wcrtomb@plt+0x17184>
  4142b8:	mov	x21, x0
  4142bc:	bl	403f00 <strlen@plt>
  4142c0:	mov	x3, x0
  4142c4:	mov	x0, x19
  4142c8:	mov	x1, x20
  4142cc:	mov	x2, x21
  4142d0:	bl	414e88 <wcrtomb@plt+0x10398>
  4142d4:	ldp	x20, x19, [sp, #64]
  4142d8:	ldr	x21, [sp, #48]
  4142dc:	ldp	x29, x30, [sp, #32]
  4142e0:	add	sp, sp, #0x50
  4142e4:	ret
  4142e8:	stp	x29, x30, [sp, #-32]!
  4142ec:	mov	x29, sp
  4142f0:	mov	x8, x2
  4142f4:	str	x19, [sp, #16]
  4142f8:	mov	x3, x1
  4142fc:	mov	x19, x0
  414300:	add	x0, x29, #0x18
  414304:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  414308:	mov	x1, x8
  41430c:	bl	41516c <wcrtomb@plt+0x1067c>
  414310:	tbz	w0, #0, 414324 <wcrtomb@plt+0xf834>
  414314:	ldr	x8, [x29, #24]
  414318:	mov	w9, #0x1                   	// #1
  41431c:	strb	w9, [x19, #320]
  414320:	str	x8, [x19, #312]
  414324:	ldr	x19, [sp, #16]
  414328:	ldp	x29, x30, [sp], #32
  41432c:	ret
  414330:	sub	sp, sp, #0x50
  414334:	stp	x29, x30, [sp, #32]
  414338:	stp	x20, x19, [sp, #64]
  41433c:	ldr	x0, [x0, #288]
  414340:	mov	x19, x2
  414344:	mov	x20, x1
  414348:	add	x3, sp, #0x8
  41434c:	mov	x2, #0xffffffffffffffff    	// #-1
  414350:	mov	x1, xzr
  414354:	str	x21, [sp, #48]
  414358:	add	x29, sp, #0x20
  41435c:	bl	41bc74 <wcrtomb@plt+0x17184>
  414360:	mov	x21, x0
  414364:	bl	403f00 <strlen@plt>
  414368:	mov	x3, x0
  41436c:	mov	x0, x19
  414370:	mov	x1, x20
  414374:	mov	x2, x21
  414378:	bl	414e88 <wcrtomb@plt+0x10398>
  41437c:	ldp	x20, x19, [sp, #64]
  414380:	ldr	x21, [sp, #48]
  414384:	ldp	x29, x30, [sp, #32]
  414388:	add	sp, sp, #0x50
  41438c:	ret
  414390:	stp	x29, x30, [sp, #-32]!
  414394:	mov	x29, sp
  414398:	mov	x8, x2
  41439c:	str	x19, [sp, #16]
  4143a0:	mov	x3, x1
  4143a4:	mov	x19, x0
  4143a8:	add	x0, x29, #0x18
  4143ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4143b0:	mov	x1, x8
  4143b4:	bl	41516c <wcrtomb@plt+0x1067c>
  4143b8:	tbz	w0, #0, 4143d4 <wcrtomb@plt+0xf8e4>
  4143bc:	ldr	x0, [x29, #24]
  4143c0:	mov	w1, #0x10                  	// #16
  4143c4:	str	x0, [x19, #296]
  4143c8:	bl	44a274 <argp_parse@@Base+0xfbc8>
  4143cc:	str	x0, [x19, #304]
  4143d0:	str	xzr, [x19, #288]
  4143d4:	ldr	x19, [sp, #16]
  4143d8:	ldp	x29, x30, [sp], #32
  4143dc:	ret
  4143e0:	sub	sp, sp, #0x50
  4143e4:	stp	x29, x30, [sp, #32]
  4143e8:	stp	x20, x19, [sp, #64]
  4143ec:	ldr	x8, [x3]
  4143f0:	ldr	x9, [x0, #304]
  4143f4:	mov	x19, x2
  4143f8:	mov	x20, x1
  4143fc:	lsl	x8, x8, #4
  414400:	ldr	x0, [x9, x8]
  414404:	add	x3, sp, #0x8
  414408:	mov	x2, #0xffffffffffffffff    	// #-1
  41440c:	mov	x1, xzr
  414410:	str	x21, [sp, #48]
  414414:	add	x29, sp, #0x20
  414418:	bl	41bc74 <wcrtomb@plt+0x17184>
  41441c:	mov	x21, x0
  414420:	bl	403f00 <strlen@plt>
  414424:	mov	x3, x0
  414428:	mov	x0, x19
  41442c:	mov	x1, x20
  414430:	mov	x2, x21
  414434:	bl	414e88 <wcrtomb@plt+0x10398>
  414438:	ldp	x20, x19, [sp, #64]
  41443c:	ldr	x21, [sp, #48]
  414440:	ldp	x29, x30, [sp, #32]
  414444:	add	sp, sp, #0x50
  414448:	ret
  41444c:	sub	sp, sp, #0x30
  414450:	stp	x20, x19, [sp, #32]
  414454:	mov	x19, x2
  414458:	mov	x3, x1
  41445c:	mov	x20, x0
  414460:	add	x0, sp, #0x8
  414464:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  414468:	mov	x1, x19
  41446c:	stp	x29, x30, [sp, #16]
  414470:	add	x29, sp, #0x10
  414474:	bl	41516c <wcrtomb@plt+0x1067c>
  414478:	tbz	w0, #0, 414498 <wcrtomb@plt+0xf9a8>
  41447c:	ldp	x8, x9, [x20, #288]
  414480:	cmp	x8, x9
  414484:	b.cs	4144a8 <wcrtomb@plt+0xf9b8>  // b.hs, b.nlast
  414488:	ldr	x9, [sp, #8]
  41448c:	ldr	x10, [x20, #304]
  414490:	lsl	x8, x8, #4
  414494:	str	x9, [x10, x8]
  414498:	ldp	x20, x19, [sp, #32]
  41449c:	ldp	x29, x30, [sp, #16]
  4144a0:	add	sp, sp, #0x30
  4144a4:	ret
  4144a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4144ac:	ldr	x8, [x8, #4000]
  4144b0:	cbz	x8, 4144b8 <wcrtomb@plt+0xf9c8>
  4144b4:	blr	x8
  4144b8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4144bc:	add	x1, x1, #0x783
  4144c0:	mov	w2, #0x5                   	// #5
  4144c4:	mov	x0, xzr
  4144c8:	bl	4048b0 <dcgettext@plt>
  4144cc:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4144d0:	mov	x2, x0
  4144d4:	add	x3, x3, #0x50e
  4144d8:	mov	w0, wzr
  4144dc:	mov	w1, wzr
  4144e0:	mov	x4, x19
  4144e4:	bl	403f60 <error@plt>
  4144e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4144ec:	mov	w9, #0x2                   	// #2
  4144f0:	str	w9, [x8, #2352]
  4144f4:	ldp	x20, x19, [sp, #32]
  4144f8:	ldp	x29, x30, [sp, #16]
  4144fc:	add	sp, sp, #0x30
  414500:	ret
  414504:	sub	sp, sp, #0x50
  414508:	stp	x29, x30, [sp, #32]
  41450c:	stp	x20, x19, [sp, #64]
  414510:	ldr	x8, [x0, #304]
  414514:	ldr	x9, [x3]
  414518:	mov	x19, x2
  41451c:	mov	x20, x1
  414520:	add	x3, sp, #0x8
  414524:	add	x8, x8, x9, lsl #4
  414528:	ldr	x0, [x8, #8]
  41452c:	mov	x2, #0xffffffffffffffff    	// #-1
  414530:	mov	x1, xzr
  414534:	str	x21, [sp, #48]
  414538:	add	x29, sp, #0x20
  41453c:	bl	41bc74 <wcrtomb@plt+0x17184>
  414540:	mov	x21, x0
  414544:	bl	403f00 <strlen@plt>
  414548:	mov	x3, x0
  41454c:	mov	x0, x19
  414550:	mov	x1, x20
  414554:	mov	x2, x21
  414558:	bl	414e88 <wcrtomb@plt+0x10398>
  41455c:	ldp	x20, x19, [sp, #64]
  414560:	ldr	x21, [sp, #48]
  414564:	ldp	x29, x30, [sp, #32]
  414568:	add	sp, sp, #0x50
  41456c:	ret
  414570:	stp	x29, x30, [sp, #-48]!
  414574:	stp	x20, x19, [sp, #32]
  414578:	mov	x29, sp
  41457c:	mov	x19, x2
  414580:	mov	x20, x1
  414584:	str	x21, [sp, #16]
  414588:	mov	x21, x0
  41458c:	add	x0, x29, #0x18
  414590:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  414594:	mov	x1, x19
  414598:	mov	x3, x20
  41459c:	bl	41516c <wcrtomb@plt+0x1067c>
  4145a0:	tbz	w0, #0, 4145c8 <wcrtomb@plt+0xfad8>
  4145a4:	ldp	x8, x9, [x21, #288]
  4145a8:	cmp	x8, x9
  4145ac:	b.cs	4145d8 <wcrtomb@plt+0xfae8>  // b.hs, b.nlast
  4145b0:	ldr	x9, [x21, #304]
  4145b4:	ldr	x10, [x29, #24]
  4145b8:	add	x11, x8, #0x1
  4145bc:	str	x11, [x21, #288]
  4145c0:	add	x8, x9, x8, lsl #4
  4145c4:	str	x10, [x8, #8]
  4145c8:	ldp	x20, x19, [sp, #32]
  4145cc:	ldr	x21, [sp, #16]
  4145d0:	ldp	x29, x30, [sp], #48
  4145d4:	ret
  4145d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4145dc:	ldr	x8, [x8, #4000]
  4145e0:	cbz	x8, 4145e8 <wcrtomb@plt+0xfaf8>
  4145e4:	blr	x8
  4145e8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4145ec:	add	x1, x1, #0x783
  4145f0:	mov	w2, #0x5                   	// #5
  4145f4:	mov	x0, xzr
  4145f8:	bl	4048b0 <dcgettext@plt>
  4145fc:	mov	x2, x0
  414600:	mov	w0, wzr
  414604:	mov	w1, wzr
  414608:	mov	x3, x20
  41460c:	mov	x4, x19
  414610:	bl	403f60 <error@plt>
  414614:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414618:	mov	w9, #0x2                   	// #2
  41461c:	str	w9, [x8, #2352]
  414620:	ldp	x20, x19, [sp, #32]
  414624:	ldr	x21, [sp, #16]
  414628:	ldp	x29, x30, [sp], #48
  41462c:	ret
  414630:	sub	sp, sp, #0x80
  414634:	stp	x29, x30, [sp, #64]
  414638:	stp	x24, x23, [sp, #80]
  41463c:	stp	x22, x21, [sp, #96]
  414640:	stp	x20, x19, [sp, #112]
  414644:	str	xzr, [x0, #288]
  414648:	ldrb	w8, [x2]
  41464c:	mov	x20, x2
  414650:	mov	x19, x1
  414654:	add	x29, sp, #0x40
  414658:	sub	w8, w8, #0x30
  41465c:	cmp	w8, #0x9
  414660:	b.hi	414704 <wcrtomb@plt+0xfc14>  // b.pmore
  414664:	mov	x21, x0
  414668:	mov	w23, #0x1                   	// #1
  41466c:	bl	4049c0 <__errno_location@plt>
  414670:	mov	x22, x0
  414674:	add	x1, sp, #0x8
  414678:	mov	w2, #0xa                   	// #10
  41467c:	mov	x0, x20
  414680:	mov	w3, wzr
  414684:	str	wzr, [x22]
  414688:	bl	404290 <__strtol_internal@plt>
  41468c:	ldr	w8, [x22]
  414690:	cmp	w8, #0x22
  414694:	cbz	w23, 4146b0 <wcrtomb@plt+0xfbc0>
  414698:	b.eq	414764 <wcrtomb@plt+0xfc74>  // b.none
  41469c:	ldr	x20, [sp, #8]
  4146a0:	ldrb	w8, [x20]
  4146a4:	cmp	w8, #0x2c
  4146a8:	b.eq	4146e8 <wcrtomb@plt+0xfbf8>  // b.none
  4146ac:	b	4147cc <wcrtomb@plt+0xfcdc>
  4146b0:	b.eq	414764 <wcrtomb@plt+0xfc74>  // b.none
  4146b4:	ldp	x8, x9, [x21, #288]
  4146b8:	cmp	x8, x9
  4146bc:	b.cs	414854 <wcrtomb@plt+0xfd64>  // b.hs, b.nlast
  4146c0:	ldr	x9, [x21, #304]
  4146c4:	add	x10, x8, #0x1
  4146c8:	str	x10, [x21, #288]
  4146cc:	add	x8, x9, x8, lsl #4
  4146d0:	stp	x24, x0, [x8]
  4146d4:	mov	x0, x24
  4146d8:	ldr	x20, [sp, #8]
  4146dc:	ldrb	w8, [x20]
  4146e0:	cmp	w8, #0x2c
  4146e4:	b.ne	4147cc <wcrtomb@plt+0xfcdc>  // b.any
  4146e8:	ldrb	w8, [x20, #1]!
  4146ec:	cmp	w23, #0x0
  4146f0:	cset	w23, eq  // eq = none
  4146f4:	mov	x24, x0
  4146f8:	sub	w8, w8, #0x30
  4146fc:	cmp	w8, #0xa
  414700:	b.cc	414674 <wcrtomb@plt+0xfb84>  // b.lo, b.ul, b.last
  414704:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414708:	ldr	x8, [x8, #4000]
  41470c:	cbz	x8, 414714 <wcrtomb@plt+0xfc24>
  414710:	blr	x8
  414714:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  414718:	add	x1, x1, #0x72d
  41471c:	mov	w2, #0x5                   	// #5
  414720:	mov	x0, xzr
  414724:	bl	4048b0 <dcgettext@plt>
  414728:	mov	x2, x0
  41472c:	mov	w0, wzr
  414730:	mov	w1, wzr
  414734:	mov	x3, x19
  414738:	mov	x4, x20
  41473c:	bl	403f60 <error@plt>
  414740:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414744:	mov	w9, #0x2                   	// #2
  414748:	str	w9, [x8, #2352]
  41474c:	ldp	x20, x19, [sp, #112]
  414750:	ldp	x22, x21, [sp, #96]
  414754:	ldp	x24, x23, [sp, #80]
  414758:	ldp	x29, x30, [sp, #64]
  41475c:	add	sp, sp, #0x80
  414760:	ret
  414764:	sub	x1, x29, #0x18
  414768:	mov	x0, xzr
  41476c:	bl	440170 <argp_parse@@Base+0x5ac4>
  414770:	mov	x21, x0
  414774:	add	x1, sp, #0x10
  414778:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41477c:	bl	440290 <argp_parse@@Base+0x5be4>
  414780:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414784:	ldr	x8, [x8, #4000]
  414788:	mov	x22, x0
  41478c:	cbz	x8, 414794 <wcrtomb@plt+0xfca4>
  414790:	blr	x8
  414794:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  414798:	add	x1, x1, #0x756
  41479c:	mov	w2, #0x5                   	// #5
  4147a0:	mov	x0, xzr
  4147a4:	bl	4048b0 <dcgettext@plt>
  4147a8:	mov	x2, x0
  4147ac:	mov	w0, wzr
  4147b0:	mov	w1, wzr
  4147b4:	mov	x3, x19
  4147b8:	mov	x4, x20
  4147bc:	mov	x5, x21
  4147c0:	mov	x6, x22
  4147c4:	bl	403f60 <error@plt>
  4147c8:	b	414740 <wcrtomb@plt+0xfc50>
  4147cc:	cbnz	w8, 414810 <wcrtomb@plt+0xfd20>
  4147d0:	cbz	w23, 41474c <wcrtomb@plt+0xfc5c>
  4147d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4147d8:	ldr	x8, [x8, #4000]
  4147dc:	cbz	x8, 4147e4 <wcrtomb@plt+0xfcf4>
  4147e0:	blr	x8
  4147e4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4147e8:	add	x1, x1, #0x7ea
  4147ec:	mov	w2, #0x5                   	// #5
  4147f0:	mov	x0, xzr
  4147f4:	bl	4048b0 <dcgettext@plt>
  4147f8:	mov	x2, x0
  4147fc:	mov	w0, wzr
  414800:	mov	w1, wzr
  414804:	mov	x3, x19
  414808:	bl	403f60 <error@plt>
  41480c:	b	414740 <wcrtomb@plt+0xfc50>
  414810:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414814:	ldr	x8, [x8, #4000]
  414818:	cbz	x8, 414820 <wcrtomb@plt+0xfd30>
  41481c:	blr	x8
  414820:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  414824:	add	x1, x1, #0x7ab
  414828:	mov	w2, #0x5                   	// #5
  41482c:	mov	x0, xzr
  414830:	bl	4048b0 <dcgettext@plt>
  414834:	ldr	x8, [sp, #8]
  414838:	mov	x2, x0
  41483c:	mov	w0, wzr
  414840:	mov	w1, wzr
  414844:	ldrb	w4, [x8]
  414848:	mov	x3, x19
  41484c:	bl	403f60 <error@plt>
  414850:	b	414740 <wcrtomb@plt+0xfc50>
  414854:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414858:	ldr	x8, [x8, #4000]
  41485c:	cbz	x8, 414864 <wcrtomb@plt+0xfd74>
  414860:	blr	x8
  414864:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  414868:	add	x1, x1, #0x783
  41486c:	b	41471c <wcrtomb@plt+0xfc2c>
  414870:	stp	x29, x30, [sp, #-48]!
  414874:	mov	x0, x3
  414878:	str	x21, [sp, #16]
  41487c:	stp	x20, x19, [sp, #32]
  414880:	mov	x29, sp
  414884:	mov	x19, x3
  414888:	mov	x20, x2
  41488c:	mov	x21, x1
  414890:	bl	4152a8 <wcrtomb@plt+0x107b8>
  414894:	mov	x3, x0
  414898:	mov	x0, x20
  41489c:	mov	x1, x21
  4148a0:	mov	x2, x19
  4148a4:	ldp	x20, x19, [sp, #32]
  4148a8:	ldr	x21, [sp, #16]
  4148ac:	ldp	x29, x30, [sp], #48
  4148b0:	b	414e88 <wcrtomb@plt+0x10398>
  4148b4:	stp	x29, x30, [sp, #-48]!
  4148b8:	str	x21, [sp, #16]
  4148bc:	mov	x21, x0
  4148c0:	mov	x0, x3
  4148c4:	stp	x20, x19, [sp, #32]
  4148c8:	mov	x29, sp
  4148cc:	mov	x19, x3
  4148d0:	mov	x20, x2
  4148d4:	bl	44a010 <argp_parse@@Base+0xf964>
  4148d8:	mov	x1, x20
  4148dc:	mov	x2, x19
  4148e0:	str	x0, [x21, #384]
  4148e4:	bl	403e80 <memcpy@plt>
  4148e8:	ldp	x20, x19, [sp, #32]
  4148ec:	ldr	x21, [sp, #16]
  4148f0:	ldp	x29, x30, [sp], #48
  4148f4:	ret
  4148f8:	stp	x29, x30, [sp, #-48]!
  4148fc:	mov	x29, sp
  414900:	stp	x20, x19, [sp, #32]
  414904:	mov	x20, x2
  414908:	mov	x19, x1
  41490c:	add	x2, x29, #0x18
  414910:	mov	w0, #0x1                   	// #1
  414914:	mov	x1, x3
  414918:	str	x21, [sp, #16]
  41491c:	mov	x21, x3
  414920:	bl	42a844 <wcrtomb@plt+0x25d54>
  414924:	tbz	w0, #0, 414930 <wcrtomb@plt+0xfe40>
  414928:	ldr	x21, [x29, #24]
  41492c:	b	414940 <wcrtomb@plt+0xfe50>
  414930:	mov	x0, x21
  414934:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  414938:	mov	x21, x0
  41493c:	str	x0, [x29, #24]
  414940:	mov	x0, x21
  414944:	bl	403f00 <strlen@plt>
  414948:	mov	x3, x0
  41494c:	mov	x0, x20
  414950:	mov	x1, x19
  414954:	mov	x2, x21
  414958:	bl	414e88 <wcrtomb@plt+0x10398>
  41495c:	ldr	x0, [x29, #24]
  414960:	bl	4046b0 <free@plt>
  414964:	ldp	x20, x19, [sp, #32]
  414968:	ldr	x21, [sp, #16]
  41496c:	ldp	x29, x30, [sp], #48
  414970:	ret
  414974:	stp	x29, x30, [sp, #-32]!
  414978:	stp	x20, x19, [sp, #16]
  41497c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414980:	ldr	x0, [x20, #2864]
  414984:	mov	x19, x2
  414988:	mov	x29, sp
  41498c:	cbz	x0, 414998 <wcrtomb@plt+0xfea8>
  414990:	bl	4046b0 <free@plt>
  414994:	str	xzr, [x20, #2864]
  414998:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41499c:	add	x2, x2, #0xb30
  4149a0:	mov	w0, wzr
  4149a4:	mov	x1, x19
  4149a8:	bl	42a844 <wcrtomb@plt+0x25d54>
  4149ac:	tbz	w0, #0, 4149bc <wcrtomb@plt+0xfecc>
  4149b0:	ldp	x20, x19, [sp, #16]
  4149b4:	ldp	x29, x30, [sp], #32
  4149b8:	ret
  4149bc:	mov	x1, x19
  4149c0:	ldp	x20, x19, [sp, #16]
  4149c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4149c8:	add	x0, x0, #0xb30
  4149cc:	ldp	x29, x30, [sp], #32
  4149d0:	b	41b60c <wcrtomb@plt+0x16b1c>
  4149d4:	stp	x29, x30, [sp, #-32]!
  4149d8:	stp	x20, x19, [sp, #16]
  4149dc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4149e0:	ldr	x0, [x20, #2872]
  4149e4:	mov	x19, x2
  4149e8:	mov	x29, sp
  4149ec:	cbz	x0, 4149f8 <wcrtomb@plt+0xff08>
  4149f0:	bl	4046b0 <free@plt>
  4149f4:	str	xzr, [x20, #2872]
  4149f8:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4149fc:	add	x2, x2, #0xb38
  414a00:	mov	w0, wzr
  414a04:	mov	x1, x19
  414a08:	bl	42a844 <wcrtomb@plt+0x25d54>
  414a0c:	tbz	w0, #0, 414a1c <wcrtomb@plt+0xff2c>
  414a10:	ldp	x20, x19, [sp, #16]
  414a14:	ldp	x29, x30, [sp], #32
  414a18:	ret
  414a1c:	mov	x1, x19
  414a20:	ldp	x20, x19, [sp, #16]
  414a24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414a28:	add	x0, x0, #0xb38
  414a2c:	ldp	x29, x30, [sp], #32
  414a30:	b	41b60c <wcrtomb@plt+0x16b1c>
  414a34:	sub	sp, sp, #0x50
  414a38:	stp	x29, x30, [sp, #32]
  414a3c:	stp	x20, x19, [sp, #64]
  414a40:	ldr	x0, [x3]
  414a44:	mov	x19, x2
  414a48:	mov	x20, x1
  414a4c:	add	x3, sp, #0x8
  414a50:	mov	x2, #0xffffffffffffffff    	// #-1
  414a54:	mov	x1, xzr
  414a58:	str	x21, [sp, #48]
  414a5c:	add	x29, sp, #0x20
  414a60:	bl	41bc74 <wcrtomb@plt+0x17184>
  414a64:	mov	x21, x0
  414a68:	bl	403f00 <strlen@plt>
  414a6c:	mov	x3, x0
  414a70:	mov	x0, x19
  414a74:	mov	x1, x20
  414a78:	mov	x2, x21
  414a7c:	bl	414e88 <wcrtomb@plt+0x10398>
  414a80:	ldp	x20, x19, [sp, #64]
  414a84:	ldr	x21, [sp, #48]
  414a88:	ldp	x29, x30, [sp, #32]
  414a8c:	add	sp, sp, #0x50
  414a90:	ret
  414a94:	sub	sp, sp, #0x20
  414a98:	mov	x8, x2
  414a9c:	mov	x3, x1
  414aa0:	add	x0, sp, #0x8
  414aa4:	mov	x2, #0xffffffffffffffff    	// #-1
  414aa8:	mov	x1, x8
  414aac:	stp	x29, x30, [sp, #16]
  414ab0:	add	x29, sp, #0x10
  414ab4:	bl	41516c <wcrtomb@plt+0x1067c>
  414ab8:	tbz	w0, #0, 414ac8 <wcrtomb@plt+0xffd8>
  414abc:	ldr	x8, [sp, #8]
  414ac0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414ac4:	str	x8, [x9, #2896]
  414ac8:	ldp	x29, x30, [sp, #16]
  414acc:	add	sp, sp, #0x20
  414ad0:	ret
  414ad4:	sub	sp, sp, #0x50
  414ad8:	stp	x29, x30, [sp, #32]
  414adc:	stp	x20, x19, [sp, #64]
  414ae0:	ldr	x0, [x3]
  414ae4:	mov	x19, x2
  414ae8:	mov	x20, x1
  414aec:	add	x3, sp, #0x8
  414af0:	mov	x2, #0xffffffffffffffff    	// #-1
  414af4:	mov	x1, xzr
  414af8:	str	x21, [sp, #48]
  414afc:	add	x29, sp, #0x20
  414b00:	bl	41bc74 <wcrtomb@plt+0x17184>
  414b04:	mov	x21, x0
  414b08:	bl	403f00 <strlen@plt>
  414b0c:	mov	x3, x0
  414b10:	mov	x0, x19
  414b14:	mov	x1, x20
  414b18:	mov	x2, x21
  414b1c:	bl	414e88 <wcrtomb@plt+0x10398>
  414b20:	ldp	x20, x19, [sp, #64]
  414b24:	ldr	x21, [sp, #48]
  414b28:	ldp	x29, x30, [sp, #32]
  414b2c:	add	sp, sp, #0x50
  414b30:	ret
  414b34:	sub	sp, sp, #0x20
  414b38:	mov	x8, x2
  414b3c:	mov	x3, x1
  414b40:	add	x0, sp, #0x8
  414b44:	mov	x2, #0xffffffffffffffff    	// #-1
  414b48:	mov	x1, x8
  414b4c:	stp	x29, x30, [sp, #16]
  414b50:	add	x29, sp, #0x10
  414b54:	bl	41516c <wcrtomb@plt+0x1067c>
  414b58:	tbz	w0, #0, 414b68 <wcrtomb@plt+0x10078>
  414b5c:	ldr	x8, [sp, #8]
  414b60:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414b64:	str	x8, [x9, #2912]
  414b68:	ldp	x29, x30, [sp, #16]
  414b6c:	add	sp, sp, #0x20
  414b70:	ret
  414b74:	stp	x29, x30, [sp, #-48]!
  414b78:	stp	x20, x19, [sp, #32]
  414b7c:	str	x21, [sp, #16]
  414b80:	ldr	x21, [x0, #48]
  414b84:	mov	x29, sp
  414b88:	mov	x19, x2
  414b8c:	mov	x20, x1
  414b90:	add	x2, x29, #0x18
  414b94:	mov	w0, #0x1                   	// #1
  414b98:	mov	x1, x21
  414b9c:	bl	42a844 <wcrtomb@plt+0x25d54>
  414ba0:	tbz	w0, #0, 414bac <wcrtomb@plt+0x100bc>
  414ba4:	ldr	x21, [x29, #24]
  414ba8:	b	414bbc <wcrtomb@plt+0x100cc>
  414bac:	mov	x0, x21
  414bb0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  414bb4:	mov	x21, x0
  414bb8:	str	x0, [x29, #24]
  414bbc:	mov	x0, x21
  414bc0:	bl	403f00 <strlen@plt>
  414bc4:	mov	x3, x0
  414bc8:	mov	x0, x19
  414bcc:	mov	x1, x20
  414bd0:	mov	x2, x21
  414bd4:	bl	414e88 <wcrtomb@plt+0x10398>
  414bd8:	ldr	x0, [x29, #24]
  414bdc:	bl	4046b0 <free@plt>
  414be0:	ldp	x20, x19, [sp, #32]
  414be4:	ldr	x21, [sp, #16]
  414be8:	ldp	x29, x30, [sp], #48
  414bec:	ret
  414bf0:	stp	x29, x30, [sp, #-32]!
  414bf4:	stp	x20, x19, [sp, #16]
  414bf8:	mov	x19, x0
  414bfc:	ldr	x0, [x19, #48]!
  414c00:	mov	x20, x2
  414c04:	mov	x29, sp
  414c08:	cbz	x0, 414c14 <wcrtomb@plt+0x10124>
  414c0c:	bl	4046b0 <free@plt>
  414c10:	str	xzr, [x19]
  414c14:	mov	w0, wzr
  414c18:	mov	x1, x20
  414c1c:	mov	x2, x19
  414c20:	bl	42a844 <wcrtomb@plt+0x25d54>
  414c24:	tbz	w0, #0, 414c34 <wcrtomb@plt+0x10144>
  414c28:	ldp	x20, x19, [sp, #16]
  414c2c:	ldp	x29, x30, [sp], #32
  414c30:	ret
  414c34:	mov	x0, x19
  414c38:	mov	x1, x20
  414c3c:	ldp	x20, x19, [sp, #16]
  414c40:	ldp	x29, x30, [sp], #32
  414c44:	b	41b60c <wcrtomb@plt+0x16b1c>
  414c48:	mov	x8, x2
  414c4c:	ldp	x2, x3, [x0, #56]
  414c50:	mov	x0, x8
  414c54:	b	414e88 <wcrtomb@plt+0x10398>
  414c58:	stp	x29, x30, [sp, #-32]!
  414c5c:	stp	x20, x19, [sp, #16]
  414c60:	mov	x20, x0
  414c64:	add	x1, x3, #0x1
  414c68:	mov	x0, x2
  414c6c:	mov	x29, sp
  414c70:	mov	x19, x3
  414c74:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  414c78:	stp	x0, x19, [x20, #56]
  414c7c:	ldp	x20, x19, [sp, #16]
  414c80:	ldp	x29, x30, [sp], #32
  414c84:	ret
  414c88:	mov	x8, x2
  414c8c:	ldp	x2, x3, [x0, #72]
  414c90:	mov	x0, x8
  414c94:	b	414e88 <wcrtomb@plt+0x10398>
  414c98:	stp	x29, x30, [sp, #-32]!
  414c9c:	stp	x20, x19, [sp, #16]
  414ca0:	mov	x20, x0
  414ca4:	add	x1, x3, #0x1
  414ca8:	mov	x0, x2
  414cac:	mov	x29, sp
  414cb0:	mov	x19, x3
  414cb4:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  414cb8:	stp	x0, x19, [x20, #72]
  414cbc:	ldp	x20, x19, [sp, #16]
  414cc0:	ldp	x29, x30, [sp], #32
  414cc4:	ret
  414cc8:	ldr	x9, [x0, #336]
  414ccc:	ldr	x10, [x3]
  414cd0:	mov	w11, #0x18                  	// #24
  414cd4:	mov	x8, x2
  414cd8:	mov	x0, x8
  414cdc:	madd	x9, x10, x11, x9
  414ce0:	ldp	x2, x3, [x9, #8]
  414ce4:	b	414e88 <wcrtomb@plt+0x10398>
  414ce8:	stp	x29, x30, [sp, #-64]!
  414cec:	stp	x20, x19, [sp, #48]
  414cf0:	mov	x20, x0
  414cf4:	mov	x0, x1
  414cf8:	stp	x24, x23, [sp, #16]
  414cfc:	stp	x22, x21, [sp, #32]
  414d00:	mov	x29, sp
  414d04:	mov	x19, x3
  414d08:	mov	x24, x2
  414d0c:	mov	x21, x1
  414d10:	bl	403f00 <strlen@plt>
  414d14:	add	x9, x0, #0x10
  414d18:	mov	x8, sp
  414d1c:	and	x9, x9, #0xfffffffffffffff0
  414d20:	sub	x23, x8, x9
  414d24:	add	x2, x0, #0x1
  414d28:	mov	sp, x23
  414d2c:	mov	x0, x23
  414d30:	mov	x1, x21
  414d34:	bl	403e80 <memcpy@plt>
  414d38:	add	x9, x19, #0x10
  414d3c:	mov	x8, sp
  414d40:	and	x9, x9, #0xfffffffffffffff0
  414d44:	add	x21, x19, #0x1
  414d48:	sub	x22, x8, x9
  414d4c:	mov	sp, x22
  414d50:	mov	x0, x22
  414d54:	mov	x1, x24
  414d58:	mov	x2, x21
  414d5c:	bl	403e80 <memcpy@plt>
  414d60:	mov	x8, x23
  414d64:	mov	x9, x23
  414d68:	b	414d80 <wcrtomb@plt+0x10290>
  414d6c:	mov	w10, #0x3d                  	// #61
  414d70:	strb	w10, [x9]
  414d74:	mov	w10, #0x3                   	// #3
  414d78:	add	x8, x8, x10
  414d7c:	add	x9, x9, #0x1
  414d80:	ldrb	w10, [x8]
  414d84:	cmp	w10, #0x25
  414d88:	b.ne	414dc4 <wcrtomb@plt+0x102d4>  // b.any
  414d8c:	ldrb	w11, [x8, #1]
  414d90:	cmp	w11, #0x32
  414d94:	b.eq	414db0 <wcrtomb@plt+0x102c0>  // b.none
  414d98:	cmp	w11, #0x33
  414d9c:	b.ne	414dc4 <wcrtomb@plt+0x102d4>  // b.any
  414da0:	ldrb	w11, [x8, #2]
  414da4:	cmp	w11, #0x44
  414da8:	b.eq	414d6c <wcrtomb@plt+0x1027c>  // b.none
  414dac:	b	414dc4 <wcrtomb@plt+0x102d4>
  414db0:	ldrb	w11, [x8, #2]
  414db4:	cmp	w11, #0x35
  414db8:	b.ne	414dc4 <wcrtomb@plt+0x102d4>  // b.any
  414dbc:	mov	w10, #0x25                  	// #37
  414dc0:	b	414d70 <wcrtomb@plt+0x10280>
  414dc4:	strb	w10, [x9]
  414dc8:	ldrb	w10, [x8]
  414dcc:	cbz	w10, 414dd8 <wcrtomb@plt+0x102e8>
  414dd0:	mov	w10, #0x1                   	// #1
  414dd4:	b	414d78 <wcrtomb@plt+0x10288>
  414dd8:	add	x23, x23, #0xd
  414ddc:	mov	x0, x23
  414de0:	bl	403f00 <strlen@plt>
  414de4:	add	x0, x0, #0xe
  414de8:	bl	44a010 <argp_parse@@Base+0xf964>
  414dec:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x16e3c>
  414df0:	add	x8, x8, #0x485
  414df4:	ldr	x9, [x8]
  414df8:	ldur	x8, [x8, #6]
  414dfc:	mov	x24, x0
  414e00:	mov	x1, x23
  414e04:	str	x9, [x0]
  414e08:	stur	x8, [x0, #6]
  414e0c:	add	x0, x0, #0xd
  414e10:	bl	404120 <stpcpy@plt>
  414e14:	ldp	x8, x0, [x20, #328]
  414e18:	add	x9, x8, #0x1
  414e1c:	add	x8, x8, x8, lsl #1
  414e20:	lsl	x23, x8, #3
  414e24:	add	x1, x23, #0x18
  414e28:	str	x9, [x20, #328]
  414e2c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  414e30:	str	x0, [x20, #336]
  414e34:	mov	x0, x24
  414e38:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  414e3c:	ldr	x8, [x20, #336]
  414e40:	mov	x1, x21
  414e44:	str	x0, [x8, x23]
  414e48:	mov	x0, x22
  414e4c:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  414e50:	ldr	x8, [x20, #336]
  414e54:	add	x8, x8, x23
  414e58:	str	x0, [x8, #8]
  414e5c:	ldr	x8, [x20, #336]
  414e60:	mov	x0, x24
  414e64:	add	x8, x8, x23
  414e68:	str	x19, [x8, #16]
  414e6c:	bl	4046b0 <free@plt>
  414e70:	mov	sp, x29
  414e74:	ldp	x20, x19, [sp, #48]
  414e78:	ldp	x22, x21, [sp, #32]
  414e7c:	ldp	x24, x23, [sp, #16]
  414e80:	ldp	x29, x30, [sp], #64
  414e84:	ret
  414e88:	sub	sp, sp, #0x90
  414e8c:	stp	x24, x23, [sp, #96]
  414e90:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414e94:	stp	x22, x21, [sp, #112]
  414e98:	ldr	x22, [x24, #1112]
  414e9c:	stp	x26, x25, [sp, #80]
  414ea0:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414ea4:	stp	x28, x27, [sp, #64]
  414ea8:	stp	x20, x19, [sp, #128]
  414eac:	mov	x27, x3
  414eb0:	mov	x28, x2
  414eb4:	mov	x23, x1
  414eb8:	mov	x19, x0
  414ebc:	add	x25, x25, #0x458
  414ec0:	stp	x29, x30, [sp, #48]
  414ec4:	add	x29, sp, #0x30
  414ec8:	cbz	x22, 414f6c <wcrtomb@plt+0x1047c>
  414ecc:	strb	wzr, [x22]
  414ed0:	ldrb	w21, [x23]
  414ed4:	cbz	w21, 414f8c <wcrtomb@plt+0x1049c>
  414ed8:	stp	x28, x27, [sp, #8]
  414edc:	mov	w27, #0x3325                	// #13093
  414ee0:	mov	w28, #0x3225                	// #12837
  414ee4:	mov	x26, xzr
  414ee8:	add	x22, x23, #0x1
  414eec:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  414ef0:	movk	w27, #0x44, lsl #16
  414ef4:	movk	w28, #0x35, lsl #16
  414ef8:	b	414f14 <wcrtomb@plt+0x10424>
  414efc:	ldr	x8, [x24, #1112]
  414f00:	mov	x20, x26
  414f04:	strb	w21, [x8, x26]
  414f08:	ldrb	w21, [x22], #1
  414f0c:	add	x26, x20, #0x1
  414f10:	cbz	w21, 414f60 <wcrtomb@plt+0x10470>
  414f14:	ldr	x8, [x23, #1120]
  414f18:	add	x20, x26, #0x2
  414f1c:	cmp	x20, x8
  414f20:	b.cc	414f34 <wcrtomb@plt+0x10444>  // b.lo, b.ul, b.last
  414f24:	mov	x1, x25
  414f28:	ldr	x0, [x1], #8
  414f2c:	bl	44a1a8 <argp_parse@@Base+0xfafc>
  414f30:	str	x0, [x24, #1112]
  414f34:	and	w8, w21, #0xff
  414f38:	cmp	w8, #0x3d
  414f3c:	b.eq	414f54 <wcrtomb@plt+0x10464>  // b.none
  414f40:	cmp	w8, #0x25
  414f44:	b.ne	414efc <wcrtomb@plt+0x1040c>  // b.any
  414f48:	ldr	x8, [x24, #1112]
  414f4c:	str	w28, [x8, x26]
  414f50:	b	414f08 <wcrtomb@plt+0x10418>
  414f54:	ldr	x8, [x24, #1112]
  414f58:	str	w27, [x8, x26]
  414f5c:	b	414f08 <wcrtomb@plt+0x10418>
  414f60:	ldr	x22, [x24, #1112]
  414f64:	ldp	x28, x27, [sp, #8]
  414f68:	b	414f90 <wcrtomb@plt+0x104a0>
  414f6c:	mov	w8, #0x100                 	// #256
  414f70:	mov	w0, #0x100                 	// #256
  414f74:	str	x8, [x25, #8]
  414f78:	bl	44a010 <argp_parse@@Base+0xf964>
  414f7c:	mov	x22, x0
  414f80:	str	x0, [x25]
  414f84:	ldrb	w21, [x23]
  414f88:	cbnz	w21, 414ed8 <wcrtomb@plt+0x103e8>
  414f8c:	mov	x26, xzr
  414f90:	mov	x0, x22
  414f94:	strb	wzr, [x22, x26]
  414f98:	bl	403f00 <strlen@plt>
  414f9c:	add	x9, x27, x0
  414fa0:	add	x10, sp, #0x18
  414fa4:	mov	x23, x0
  414fa8:	mov	x8, xzr
  414fac:	add	x20, x9, #0x3
  414fb0:	add	x21, x10, #0x14
  414fb4:	add	x0, x20, x8
  414fb8:	add	x1, sp, #0x18
  414fbc:	mov	x24, x8
  414fc0:	bl	440290 <argp_parse@@Base+0x5be4>
  414fc4:	sub	x8, x21, x0
  414fc8:	cmp	x8, x24
  414fcc:	b.ne	414fb4 <wcrtomb@plt+0x104c4>  // b.any
  414fd0:	ldr	x26, [x19]
  414fd4:	mov	x25, x0
  414fd8:	ldp	x0, x8, [x26, #24]
  414fdc:	sub	x8, x8, x0
  414fe0:	cmp	x8, x24
  414fe4:	b.cs	414ff8 <wcrtomb@plt+0x10508>  // b.hs, b.nlast
  414fe8:	mov	x0, x26
  414fec:	mov	x1, x24
  414ff0:	bl	44afa0 <_obstack_newchunk@@Base>
  414ff4:	ldr	x0, [x26, #24]
  414ff8:	mov	x1, x25
  414ffc:	mov	x2, x24
  415000:	bl	403e80 <memcpy@plt>
  415004:	ldr	x8, [x26, #24]
  415008:	add	x8, x8, x24
  41500c:	str	x8, [x26, #24]
  415010:	ldp	x25, x8, [x19]
  415014:	add	x8, x8, x24
  415018:	str	x8, [x19, #8]
  41501c:	ldp	x8, x9, [x25, #24]
  415020:	cmp	x9, x8
  415024:	b.ne	415038 <wcrtomb@plt+0x10548>  // b.any
  415028:	mov	w1, #0x1                   	// #1
  41502c:	mov	x0, x25
  415030:	bl	44afa0 <_obstack_newchunk@@Base>
  415034:	ldr	x8, [x25, #24]
  415038:	add	x9, x8, #0x1
  41503c:	mov	w10, #0x20                  	// #32
  415040:	str	x9, [x25, #24]
  415044:	strb	w10, [x8]
  415048:	ldp	x24, x8, [x19]
  41504c:	add	x8, x8, #0x1
  415050:	str	x8, [x19, #8]
  415054:	ldp	x0, x8, [x24, #24]
  415058:	sub	x8, x8, x0
  41505c:	cmp	x8, x23
  415060:	b.cs	415074 <wcrtomb@plt+0x10584>  // b.hs, b.nlast
  415064:	mov	x0, x24
  415068:	mov	x1, x23
  41506c:	bl	44afa0 <_obstack_newchunk@@Base>
  415070:	ldr	x0, [x24, #24]
  415074:	mov	x1, x22
  415078:	mov	x2, x23
  41507c:	bl	403e80 <memcpy@plt>
  415080:	ldr	x8, [x24, #24]
  415084:	add	x8, x8, x23
  415088:	str	x8, [x24, #24]
  41508c:	ldp	x22, x8, [x19]
  415090:	add	x8, x8, x23
  415094:	str	x8, [x19, #8]
  415098:	ldp	x8, x9, [x22, #24]
  41509c:	cmp	x9, x8
  4150a0:	b.ne	4150b4 <wcrtomb@plt+0x105c4>  // b.any
  4150a4:	mov	w1, #0x1                   	// #1
  4150a8:	mov	x0, x22
  4150ac:	bl	44afa0 <_obstack_newchunk@@Base>
  4150b0:	ldr	x8, [x22, #24]
  4150b4:	add	x9, x8, #0x1
  4150b8:	mov	w10, #0x3d                  	// #61
  4150bc:	str	x9, [x22, #24]
  4150c0:	strb	w10, [x8]
  4150c4:	ldp	x22, x8, [x19]
  4150c8:	add	x8, x8, #0x1
  4150cc:	str	x8, [x19, #8]
  4150d0:	ldp	x0, x8, [x22, #24]
  4150d4:	sub	x8, x8, x0
  4150d8:	cmp	x8, x27
  4150dc:	b.cs	4150f0 <wcrtomb@plt+0x10600>  // b.hs, b.nlast
  4150e0:	mov	x0, x22
  4150e4:	mov	x1, x27
  4150e8:	bl	44afa0 <_obstack_newchunk@@Base>
  4150ec:	ldr	x0, [x22, #24]
  4150f0:	mov	x1, x28
  4150f4:	mov	x2, x27
  4150f8:	bl	403e80 <memcpy@plt>
  4150fc:	ldr	x8, [x22, #24]
  415100:	add	x8, x8, x27
  415104:	str	x8, [x22, #24]
  415108:	ldp	x21, x8, [x19]
  41510c:	add	x8, x8, x27
  415110:	str	x8, [x19, #8]
  415114:	ldp	x8, x9, [x21, #24]
  415118:	cmp	x9, x8
  41511c:	b.ne	415130 <wcrtomb@plt+0x10640>  // b.any
  415120:	mov	w1, #0x1                   	// #1
  415124:	mov	x0, x21
  415128:	bl	44afa0 <_obstack_newchunk@@Base>
  41512c:	ldr	x8, [x21, #24]
  415130:	add	x9, x8, #0x1
  415134:	mov	w10, #0xa                   	// #10
  415138:	str	x9, [x21, #24]
  41513c:	strb	w10, [x8]
  415140:	ldr	x8, [x19, #8]
  415144:	add	x8, x8, #0x1
  415148:	str	x8, [x19, #8]
  41514c:	ldp	x20, x19, [sp, #128]
  415150:	ldp	x22, x21, [sp, #112]
  415154:	ldp	x24, x23, [sp, #96]
  415158:	ldp	x26, x25, [sp, #80]
  41515c:	ldp	x28, x27, [sp, #64]
  415160:	ldp	x29, x30, [sp, #48]
  415164:	add	sp, sp, #0x90
  415168:	ret
  41516c:	sub	sp, sp, #0x70
  415170:	stp	x29, x30, [sp, #48]
  415174:	stp	x22, x21, [sp, #80]
  415178:	stp	x20, x19, [sp, #96]
  41517c:	add	x29, sp, #0x30
  415180:	mov	x21, x2
  415184:	mov	x19, x1
  415188:	mov	x20, x3
  41518c:	mov	x22, x0
  415190:	add	x1, x29, #0x18
  415194:	mov	x0, x19
  415198:	mov	x2, xzr
  41519c:	mov	x3, x21
  4151a0:	str	x23, [sp, #64]
  4151a4:	bl	41bc88 <wcrtomb@plt+0x17198>
  4151a8:	mov	x23, x0
  4151ac:	bl	4049c0 <__errno_location@plt>
  4151b0:	ldr	w8, [x0]
  4151b4:	cmp	w8, #0x16
  4151b8:	b.eq	4151c8 <wcrtomb@plt+0x106d8>  // b.none
  4151bc:	ldr	x9, [x29, #24]
  4151c0:	ldrb	w9, [x9]
  4151c4:	cbz	w9, 41522c <wcrtomb@plt+0x1073c>
  4151c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4151cc:	ldr	x8, [x8, #4000]
  4151d0:	cbz	x8, 4151d8 <wcrtomb@plt+0x106e8>
  4151d4:	blr	x8
  4151d8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4151dc:	add	x1, x1, #0x72d
  4151e0:	mov	w2, #0x5                   	// #5
  4151e4:	mov	x0, xzr
  4151e8:	bl	4048b0 <dcgettext@plt>
  4151ec:	mov	x2, x0
  4151f0:	mov	w0, wzr
  4151f4:	mov	w1, wzr
  4151f8:	mov	x3, x20
  4151fc:	mov	x4, x19
  415200:	bl	403f60 <error@plt>
  415204:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415208:	mov	w9, #0x2                   	// #2
  41520c:	mov	w0, wzr
  415210:	str	w9, [x8, #2352]
  415214:	ldp	x20, x19, [sp, #96]
  415218:	ldp	x22, x21, [sp, #80]
  41521c:	ldr	x23, [sp, #64]
  415220:	ldp	x29, x30, [sp, #48]
  415224:	add	sp, sp, #0x70
  415228:	ret
  41522c:	cmp	w8, #0x22
  415230:	b.ne	41529c <wcrtomb@plt+0x107ac>  // b.any
  415234:	add	x1, sp, #0x18
  415238:	mov	x0, xzr
  41523c:	bl	440170 <argp_parse@@Base+0x5ac4>
  415240:	mov	x22, x0
  415244:	mov	x1, sp
  415248:	mov	x0, x21
  41524c:	bl	440290 <argp_parse@@Base+0x5be4>
  415250:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415254:	ldr	x8, [x8, #4000]
  415258:	mov	x21, x0
  41525c:	cbz	x8, 415264 <wcrtomb@plt+0x10774>
  415260:	blr	x8
  415264:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  415268:	add	x1, x1, #0x756
  41526c:	mov	w2, #0x5                   	// #5
  415270:	mov	x0, xzr
  415274:	bl	4048b0 <dcgettext@plt>
  415278:	mov	x2, x0
  41527c:	mov	w0, wzr
  415280:	mov	w1, wzr
  415284:	mov	x3, x20
  415288:	mov	x4, x19
  41528c:	mov	x5, x22
  415290:	mov	x6, x21
  415294:	bl	403f60 <error@plt>
  415298:	b	415204 <wcrtomb@plt+0x10714>
  41529c:	mov	w0, #0x1                   	// #1
  4152a0:	str	x23, [x22]
  4152a4:	b	415214 <wcrtomb@plt+0x10724>
  4152a8:	stp	x29, x30, [sp, #-32]!
  4152ac:	stp	x20, x19, [sp, #16]
  4152b0:	ldrb	w8, [x0]
  4152b4:	mov	x29, sp
  4152b8:	cbz	w8, 4152f0 <wcrtomb@plt+0x10800>
  4152bc:	mov	x19, x0
  4152c0:	mov	x20, xzr
  4152c4:	mov	x0, x19
  4152c8:	bl	403f00 <strlen@plt>
  4152cc:	add	x8, x0, #0x1
  4152d0:	add	x19, x19, x8
  4152d4:	ldrb	w9, [x19]
  4152d8:	add	x20, x8, x20
  4152dc:	cbnz	w9, 4152c4 <wcrtomb@plt+0x107d4>
  4152e0:	add	x0, x20, #0x1
  4152e4:	ldp	x20, x19, [sp, #16]
  4152e8:	ldp	x29, x30, [sp], #32
  4152ec:	ret
  4152f0:	mov	w0, #0x1                   	// #1
  4152f4:	ldp	x20, x19, [sp, #16]
  4152f8:	ldp	x29, x30, [sp], #32
  4152fc:	ret
  415300:	stp	x29, x30, [sp, #-32]!
  415304:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415308:	ldr	x0, [x8, #1128]
  41530c:	stp	x20, x19, [sp, #16]
  415310:	mov	x29, sp
  415314:	cbz	x0, 41531c <wcrtomb@plt+0x1082c>
  415318:	bl	43ed60 <argp_parse@@Base+0x46b4>
  41531c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415320:	ldr	x0, [x8, #1136]
  415324:	cbz	x0, 41532c <wcrtomb@plt+0x1083c>
  415328:	bl	43ed60 <argp_parse@@Base+0x46b4>
  41532c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415330:	ldr	x19, [x8, #1144]
  415334:	cbz	x19, 41535c <wcrtomb@plt+0x1086c>
  415338:	ldr	x0, [x19, #80]
  41533c:	ldr	x20, [x19]
  415340:	bl	4046b0 <free@plt>
  415344:	ldr	x0, [x19, #88]
  415348:	bl	4046b0 <free@plt>
  41534c:	mov	x0, x19
  415350:	bl	4046b0 <free@plt>
  415354:	mov	x19, x20
  415358:	cbnz	x20, 415338 <wcrtomb@plt+0x10848>
  41535c:	ldp	x20, x19, [sp, #16]
  415360:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415364:	add	x8, x8, #0x478
  415368:	stp	xzr, xzr, [x8]
  41536c:	ldp	x29, x30, [sp], #32
  415370:	ret
  415374:	add	x0, x0, #0x58
  415378:	b	41bbb0 <wcrtomb@plt+0x170c0>
  41537c:	sub	sp, sp, #0xd0
  415380:	str	x25, [sp, #144]
  415384:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415388:	ldr	x8, [x25, #1128]
  41538c:	stp	x29, x30, [sp, #128]
  415390:	stp	x24, x23, [sp, #160]
  415394:	stp	x22, x21, [sp, #176]
  415398:	stp	x20, x19, [sp, #192]
  41539c:	add	x29, sp, #0x80
  4153a0:	cbz	x8, 41547c <wcrtomb@plt+0x1098c>
  4153a4:	ldr	x22, [x0]
  4153a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4153ac:	mov	x19, x0
  4153b0:	ldr	w0, [x8, #2992]
  4153b4:	mov	x1, x22
  4153b8:	bl	41b9e0 <wcrtomb@plt+0x16ef0>
  4153bc:	mov	x21, x0
  4153c0:	mov	x0, x22
  4153c4:	bl	403f00 <strlen@plt>
  4153c8:	mov	x23, x0
  4153cc:	mov	w0, #0x60                  	// #96
  4153d0:	bl	44a010 <argp_parse@@Base+0xf964>
  4153d4:	mov	x20, x0
  4153d8:	cmp	x23, #0x2
  4153dc:	str	xzr, [x0]
  4153e0:	str	xzr, [x0, #64]
  4153e4:	str	wzr, [x0, #60]
  4153e8:	stp	xzr, xzr, [x0, #40]
  4153ec:	b.cc	415400 <wcrtomb@plt+0x10910>  // b.lo, b.ul, b.last
  4153f0:	sub	x8, x23, #0x1
  4153f4:	ldrb	w9, [x22, x8]
  4153f8:	cmp	w9, #0x2f
  4153fc:	csel	x23, x8, x23, eq  // eq = none
  415400:	add	x0, x23, #0x1
  415404:	bl	44a010 <argp_parse@@Base+0xf964>
  415408:	mov	x1, x22
  41540c:	mov	x2, x23
  415410:	mov	x24, x0
  415414:	str	x0, [x20, #88]
  415418:	bl	403e80 <memcpy@plt>
  41541c:	ldr	x0, [x25, #1128]
  415420:	mov	x1, x20
  415424:	strb	wzr, [x24, x23]
  415428:	stp	xzr, x21, [x20, #72]
  41542c:	bl	43e854 <argp_parse@@Base+0x41a8>
  415430:	ldr	x8, [x20, #80]
  415434:	mov	x21, x0
  415438:	mov	x0, x8
  41543c:	bl	4046b0 <free@plt>
  415440:	ldr	x0, [x20, #88]
  415444:	bl	4046b0 <free@plt>
  415448:	mov	x0, x20
  41544c:	bl	4046b0 <free@plt>
  415450:	cbz	x21, 41547c <wcrtomb@plt+0x1098c>
  415454:	ldr	w1, [x19, #408]
  415458:	mov	x2, sp
  41545c:	mov	w0, wzr
  415460:	bl	404890 <__fxstat@plt>
  415464:	cbz	w0, 415474 <wcrtomb@plt+0x10984>
  415468:	ldr	x0, [x21, #88]
  41546c:	bl	41d008 <wcrtomb@plt+0x18518>
  415470:	b	41547c <wcrtomb@plt+0x1098c>
  415474:	ldur	q0, [sp, #88]
  415478:	stur	q0, [x21, #8]
  41547c:	ldp	x20, x19, [sp, #192]
  415480:	ldp	x22, x21, [sp, #176]
  415484:	ldp	x24, x23, [sp, #160]
  415488:	ldr	x25, [sp, #144]
  41548c:	ldp	x29, x30, [sp, #128]
  415490:	add	sp, sp, #0xd0
  415494:	ret
  415498:	stp	x29, x30, [sp, #-96]!
  41549c:	stp	x28, x27, [sp, #16]
  4154a0:	stp	x26, x25, [sp, #32]
  4154a4:	stp	x24, x23, [sp, #48]
  4154a8:	stp	x22, x21, [sp, #64]
  4154ac:	stp	x20, x19, [sp, #80]
  4154b0:	mov	x29, sp
  4154b4:	sub	sp, sp, #0x1f0
  4154b8:	ldr	x21, [x0]
  4154bc:	mov	x20, x0
  4154c0:	bl	40bd60 <wcrtomb@plt+0x7270>
  4154c4:	ldr	x25, [x20, #88]
  4154c8:	ldr	x19, [x20, #392]
  4154cc:	mov	x24, x0
  4154d0:	cbnz	x0, 4154dc <wcrtomb@plt+0x109ec>
  4154d4:	mov	x0, x21
  4154d8:	bl	42d11c <wcrtomb@plt+0x2862c>
  4154dc:	cmp	x19, #0x0
  4154e0:	mov	x0, x20
  4154e4:	cset	w19, eq  // eq = none
  4154e8:	bl	40ec24 <wcrtomb@plt+0xa134>
  4154ec:	mov	x0, x21
  4154f0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  4154f4:	mov	x23, x0
  4154f8:	bl	41b880 <wcrtomb@plt+0x16d90>
  4154fc:	lsl	w2, w19, #5
  415500:	sub	x3, x29, #0xc
  415504:	mov	x0, x23
  415508:	mov	x1, x20
  41550c:	bl	415a5c <wcrtomb@plt+0x10f6c>
  415510:	mov	x22, x0
  415514:	mov	x0, x23
  415518:	bl	4046b0 <free@plt>
  41551c:	mov	x0, x21
  415520:	bl	41cd10 <wcrtomb@plt+0x18220>
  415524:	mov	x28, x0
  415528:	cbz	x24, 415a28 <wcrtomb@plt+0x10f38>
  41552c:	ldr	w8, [x22, #56]
  415530:	str	x22, [sp, #40]
  415534:	cbz	w8, 415548 <wcrtomb@plt+0x10a58>
  415538:	cmp	w8, #0x2
  41553c:	b.ne	4155b8 <wcrtomb@plt+0x10ac8>  // b.any
  415540:	mov	x19, xzr
  415544:	b	4155d8 <wcrtomb@plt+0x10ae8>
  415548:	ldr	x0, [x22, #72]
  41554c:	cbz	x0, 415a28 <wcrtomb@plt+0x10f38>
  415550:	bl	403f00 <strlen@plt>
  415554:	mov	x22, x0
  415558:	add	x23, x0, #0x1
  41555c:	add	x0, x0, #0x3
  415560:	bl	44a010 <argp_parse@@Base+0xf964>
  415564:	mov	w8, #0x59                  	// #89
  415568:	mov	x19, x24
  41556c:	mov	x24, x0
  415570:	strb	w8, [x0], #1
  415574:	ldr	x8, [sp, #40]
  415578:	mov	x2, x23
  41557c:	ldr	x1, [x8, #72]
  415580:	bl	403e80 <memcpy@plt>
  415584:	add	x8, x22, x24
  415588:	ldr	x22, [sp, #40]
  41558c:	strb	wzr, [x8, #2]
  415590:	mov	x0, x24
  415594:	mov	x1, xzr
  415598:	ldr	x8, [x22, #40]
  41559c:	str	x8, [x22, #48]
  4155a0:	bl	418084 <wcrtomb@plt+0x13594>
  4155a4:	str	x0, [x22, #40]
  4155a8:	mov	x0, x24
  4155ac:	mov	x24, x19
  4155b0:	bl	4046b0 <free@plt>
  4155b4:	b	415a28 <wcrtomb@plt+0x10f38>
  4155b8:	ldrb	w8, [x22, #60]
  4155bc:	tbnz	w8, #4, 4155c8 <wcrtomb@plt+0x10ad8>
  4155c0:	ldr	x19, [x22, #40]
  4155c4:	b	4155d8 <wcrtomb@plt+0x10ae8>
  4155c8:	ldr	x8, [x22, #64]
  4155cc:	ldr	x19, [x8, #48]
  4155d0:	cbnz	x19, 4155d8 <wcrtomb@plt+0x10ae8>
  4155d4:	ldr	x19, [x8, #40]
  4155d8:	ldrb	w8, [x24]
  4155dc:	mov	x23, xzr
  4155e0:	str	x20, [sp, #48]
  4155e4:	str	x25, [sp, #8]
  4155e8:	cbz	w8, 415620 <wcrtomb@plt+0x10b30>
  4155ec:	mov	x20, xzr
  4155f0:	mov	x21, x24
  4155f4:	mov	x0, x24
  4155f8:	bl	403f00 <strlen@plt>
  4155fc:	add	x24, x0, x24
  415600:	ldrb	w8, [x24, #1]!
  415604:	add	x9, x20, x0
  415608:	add	x20, x9, #0x2
  41560c:	add	x23, x23, #0x1
  415610:	cbnz	w8, 4155f4 <wcrtomb@plt+0x10b04>
  415614:	add	x25, x20, #0x1
  415618:	mov	x24, x21
  41561c:	b	415624 <wcrtomb@plt+0x10b34>
  415620:	mov	w25, #0x1                   	// #1
  415624:	mov	w1, #0x8                   	// #8
  415628:	mov	x0, x23
  41562c:	str	x28, [sp, #32]
  415630:	bl	44a274 <argp_parse@@Base+0xfbc8>
  415634:	ldrb	w8, [x24]
  415638:	str	x24, [sp, #24]
  41563c:	mov	x24, x0
  415640:	cbz	w8, 415664 <wcrtomb@plt+0x10b74>
  415644:	ldr	x26, [sp, #24]
  415648:	mov	x20, x24
  41564c:	mov	x0, x26
  415650:	str	x26, [x20], #8
  415654:	bl	403f00 <strlen@plt>
  415658:	add	x26, x0, x26
  41565c:	ldrb	w8, [x26, #1]!
  415660:	cbnz	w8, 41564c <wcrtomb@plt+0x10b5c>
  415664:	adrp	x3, 418000 <wcrtomb@plt+0x13510>
  415668:	add	x3, x3, #0x78
  41566c:	mov	w2, #0x8                   	// #8
  415670:	mov	x0, x24
  415674:	mov	x1, x23
  415678:	bl	4040b0 <qsort@plt>
  41567c:	mov	x0, x25
  415680:	bl	44a010 <argp_parse@@Base+0xf964>
  415684:	ldr	x20, [sp, #48]
  415688:	mov	x27, x0
  41568c:	str	x0, [sp, #16]
  415690:	cbz	x23, 415794 <wcrtomb@plt+0x10ca4>
  415694:	cbz	x19, 415758 <wcrtomb@plt+0x10c68>
  415698:	ldr	x27, [sp, #16]
  41569c:	mov	x28, xzr
  4156a0:	ldr	x22, [x19, #16]
  4156a4:	cbz	x22, 4156ec <wcrtomb@plt+0x10bfc>
  4156a8:	ldr	x26, [x24, x28, lsl #3]
  4156ac:	ldr	x25, [x19, #24]
  4156b0:	mov	x20, xzr
  4156b4:	b	4156c4 <wcrtomb@plt+0x10bd4>
  4156b8:	cmp	x20, x21
  4156bc:	mov	x22, x21
  4156c0:	b.cs	4156ec <wcrtomb@plt+0x10bfc>  // b.hs, b.nlast
  4156c4:	add	x8, x22, x20
  4156c8:	lsr	x21, x8, #1
  4156cc:	ldr	x1, [x25, x21, lsl #3]
  4156d0:	mov	x0, x26
  4156d4:	bl	404610 <strcmp@plt>
  4156d8:	tbnz	w0, #31, 4156b8 <wcrtomb@plt+0x10bc8>
  4156dc:	cbz	w0, 415710 <wcrtomb@plt+0x10c20>
  4156e0:	add	x20, x21, #0x1
  4156e4:	mov	x21, x22
  4156e8:	b	4156b8 <wcrtomb@plt+0x10bc8>
  4156ec:	ldr	x22, [sp, #40]
  4156f0:	add	x8, x27, #0x1
  4156f4:	ldr	x9, [x22, #72]
  4156f8:	cbz	x9, 415704 <wcrtomb@plt+0x10c14>
  4156fc:	mov	w9, #0x49                  	// #73
  415700:	b	415708 <wcrtomb@plt+0x10c18>
  415704:	mov	w9, #0x59                  	// #89
  415708:	strb	w9, [x27]
  41570c:	b	415730 <wcrtomb@plt+0x10c40>
  415710:	ldr	x22, [sp, #40]
  415714:	mov	w9, #0x20                  	// #32
  415718:	ldr	x8, [x22, #72]
  41571c:	cmp	x8, #0x0
  415720:	mov	w8, #0x49                  	// #73
  415724:	csel	w8, w9, w8, eq  // eq = none
  415728:	strb	w8, [x27], #1
  41572c:	mov	x8, x27
  415730:	ldr	x20, [sp, #48]
  415734:	ldr	x9, [x24, x28, lsl #3]
  415738:	mov	x27, x8
  41573c:	ldrb	w8, [x9], #1
  415740:	strb	w8, [x27], #1
  415744:	cbnz	w8, 41573c <wcrtomb@plt+0x10c4c>
  415748:	add	x28, x28, #0x1
  41574c:	cmp	x28, x23
  415750:	b.ne	4156a0 <wcrtomb@plt+0x10bb0>  // b.any
  415754:	b	415794 <wcrtomb@plt+0x10ca4>
  415758:	ldr	x27, [sp, #16]
  41575c:	mov	x8, xzr
  415760:	mov	w9, #0x49                  	// #73
  415764:	mov	w10, #0x59                  	// #89
  415768:	ldr	x12, [x22, #72]
  41576c:	ldr	x11, [x24, x8, lsl #3]
  415770:	cmp	x12, #0x0
  415774:	csel	w12, w10, w9, eq  // eq = none
  415778:	strb	w12, [x27], #1
  41577c:	ldrb	w12, [x11], #1
  415780:	strb	w12, [x27], #1
  415784:	cbnz	w12, 41577c <wcrtomb@plt+0x10c8c>
  415788:	add	x8, x8, #0x1
  41578c:	cmp	x8, x23
  415790:	b.ne	415768 <wcrtomb@plt+0x10c78>  // b.any
  415794:	strb	wzr, [x27]
  415798:	ldr	x19, [sp, #16]
  41579c:	ldr	x8, [x22, #40]
  4157a0:	mov	x1, xzr
  4157a4:	mov	x0, x19
  4157a8:	str	x8, [x22, #48]
  4157ac:	bl	418084 <wcrtomb@plt+0x13594>
  4157b0:	str	x0, [x22, #40]
  4157b4:	mov	x0, x19
  4157b8:	bl	4046b0 <free@plt>
  4157bc:	mov	x0, x24
  4157c0:	bl	4046b0 <free@plt>
  4157c4:	ldr	x25, [x22, #40]
  4157c8:	mov	w0, #0x18                  	// #24
  4157cc:	bl	44a010 <argp_parse@@Base+0xf964>
  4157d0:	mov	w8, #0x1                   	// #1
  4157d4:	str	x25, [x0]
  4157d8:	str	w8, [x0, #8]
  4157dc:	str	xzr, [x0, #16]
  4157e0:	ldr	x24, [x25]
  4157e4:	ldr	x28, [sp, #32]
  4157e8:	mov	x23, x0
  4157ec:	ldrb	w8, [x24]
  4157f0:	cbz	w8, 415a1c <wcrtomb@plt+0x10f2c>
  4157f4:	mov	x0, x24
  4157f8:	bl	403f00 <strlen@plt>
  4157fc:	add	x8, sp, #0x38
  415800:	add	x19, x0, #0x1
  415804:	mov	w21, #0x4e                  	// #78
  415808:	add	x8, x8, #0x58
  41580c:	str	x19, [x23, #16]
  415810:	str	x8, [sp, #40]
  415814:	b	415840 <wcrtomb@plt+0x10d50>
  415818:	strb	w21, [x24]
  41581c:	ldr	x8, [x25]
  415820:	add	x24, x8, x19
  415824:	ldrb	w8, [x24]
  415828:	cbz	w8, 415a1c <wcrtomb@plt+0x10f2c>
  41582c:	mov	x0, x24
  415830:	bl	403f00 <strlen@plt>
  415834:	add	x8, x19, x0
  415838:	add	x19, x8, #0x1
  41583c:	str	x19, [x23, #16]
  415840:	add	x27, x24, #0x1
  415844:	mov	x0, x28
  415848:	mov	x1, x27
  41584c:	bl	41d1d0 <wcrtomb@plt+0x186e0>
  415850:	ldrb	w8, [x24]
  415854:	cmp	w8, #0x49
  415858:	b.eq	415818 <wcrtomb@plt+0x10d28>  // b.none
  41585c:	mov	x1, x20
  415860:	mov	x26, x0
  415864:	bl	40ee74 <wcrtomb@plt+0xa384>
  415868:	tbnz	w0, #0, 415818 <wcrtomb@plt+0x10d28>
  41586c:	ldr	w28, [x20, #408]
  415870:	add	x0, sp, #0x38
  415874:	bl	425e88 <wcrtomb@plt+0x21398>
  415878:	tbnz	w28, #31, 415920 <wcrtomb@plt+0x10e30>
  41587c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415880:	ldr	w4, [x8, #3552]
  415884:	ldr	x3, [sp, #40]
  415888:	mov	w0, wzr
  41588c:	mov	w1, w28
  415890:	mov	x2, x27
  415894:	bl	404ad0 <__fxstatat@plt>
  415898:	ldr	x28, [sp, #32]
  41589c:	adrp	x2, 41d000 <wcrtomb@plt+0x18510>
  4158a0:	add	x2, x2, #0x8
  4158a4:	cbnz	w0, 41593c <wcrtomb@plt+0x10e4c>
  4158a8:	ldr	w8, [sp, #160]
  4158ac:	and	w9, w8, #0xf000
  4158b0:	cmp	w9, #0x4, lsl #12
  4158b4:	b.ne	4158f4 <wcrtomb@plt+0x10e04>  // b.any
  4158b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4158bc:	ldr	w2, [x8, #3700]
  4158c0:	mov	x0, x20
  4158c4:	mov	x1, x27
  4158c8:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  4158cc:	tbnz	w0, #31, 415934 <wcrtomb@plt+0x10e44>
  4158d0:	ldr	x2, [sp, #40]
  4158d4:	mov	w1, w0
  4158d8:	str	w0, [sp, #464]
  4158dc:	mov	w0, wzr
  4158e0:	bl	404890 <__fxstat@plt>
  4158e4:	adrp	x2, 41d000 <wcrtomb@plt+0x18510>
  4158e8:	add	x2, x2, #0x8
  4158ec:	cbnz	w0, 41593c <wcrtomb@plt+0x10e4c>
  4158f0:	ldr	w8, [sp, #160]
  4158f4:	and	w8, w8, #0xf000
  4158f8:	cmp	w8, #0x4, lsl #12
  4158fc:	b.ne	415968 <wcrtomb@plt+0x10e78>  // b.any
  415900:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415904:	ldr	w8, [x8, #3668]
  415908:	cbz	w8, 4159d4 <wcrtomb@plt+0x10ee4>
  41590c:	ldr	w8, [x22, #56]
  415910:	cmp	w8, #0x2
  415914:	mov	w8, #0x12                  	// #18
  415918:	csel	w2, w8, wzr, eq  // eq = none
  41591c:	b	4159d8 <wcrtomb@plt+0x10ee8>
  415920:	neg	w20, w28
  415924:	bl	4049c0 <__errno_location@plt>
  415928:	str	w20, [x0]
  41592c:	ldr	x20, [sp, #48]
  415930:	ldr	x28, [sp, #32]
  415934:	adrp	x2, 41c000 <wcrtomb@plt+0x17510>
  415938:	add	x2, x2, #0xf54
  41593c:	mov	x0, x26
  415940:	mov	w1, wzr
  415944:	bl	41d02c <wcrtomb@plt+0x1853c>
  415948:	strb	w21, [x24]
  41594c:	add	x0, sp, #0x38
  415950:	bl	425f4c <wcrtomb@plt+0x2145c>
  415954:	ldr	x8, [x25]
  415958:	add	x24, x8, x19
  41595c:	ldrb	w8, [x24]
  415960:	cbnz	w8, 41582c <wcrtomb@plt+0x10d3c>
  415964:	b	415a1c <wcrtomb@plt+0x10f2c>
  415968:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41596c:	ldrb	w8, [x8, #3077]
  415970:	cbz	w8, 415984 <wcrtomb@plt+0x10e94>
  415974:	ldr	x8, [sp, #144]
  415978:	ldr	x9, [sp, #8]
  41597c:	cmp	x9, x8
  415980:	b.ne	415948 <wcrtomb@plt+0x10e58>  // b.any
  415984:	ldrb	w8, [x24]
  415988:	cmp	w8, #0x59
  41598c:	b.eq	41594c <wcrtomb@plt+0x10e5c>  // b.none
  415990:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415994:	add	x8, x8, #0xbd8
  415998:	ldr	x10, [sp, #232]
  41599c:	ldp	x9, x8, [x8]
  4159a0:	cmp	x10, x9
  4159a4:	b.ge	415a00 <wcrtomb@plt+0x10f10>  // b.tcont
  4159a8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4159ac:	ldr	w10, [x10, #3964]
  4159b0:	cbz	w10, 415948 <wcrtomb@plt+0x10e58>
  4159b4:	ldr	x10, [sp, #248]
  4159b8:	cmp	x10, x9
  4159bc:	b.lt	415948 <wcrtomb@plt+0x10e58>  // b.tstop
  4159c0:	b.gt	415a10 <wcrtomb@plt+0x10f20>
  4159c4:	ldr	x9, [sp, #256]
  4159c8:	cmp	w9, w8
  4159cc:	b.pl	415a10 <wcrtomb@plt+0x10f20>  // b.nfrst
  4159d0:	b	415948 <wcrtomb@plt+0x10e58>
  4159d4:	mov	w2, #0x10                  	// #16
  4159d8:	mov	w8, #0x44                  	// #68
  4159dc:	add	x1, sp, #0x38
  4159e0:	mov	x0, x26
  4159e4:	mov	x3, x24
  4159e8:	strb	w8, [x24]
  4159ec:	str	x20, [sp, #448]
  4159f0:	bl	415a5c <wcrtomb@plt+0x10f6c>
  4159f4:	add	x0, sp, #0x38
  4159f8:	bl	40c2fc <wcrtomb@plt+0x780c>
  4159fc:	b	41594c <wcrtomb@plt+0x10e5c>
  415a00:	b.gt	415a10 <wcrtomb@plt+0x10f20>
  415a04:	ldr	x10, [sp, #240]
  415a08:	cmp	w10, w8
  415a0c:	b.mi	4159a8 <wcrtomb@plt+0x10eb8>  // b.first
  415a10:	mov	w8, #0x59                  	// #89
  415a14:	strb	w8, [x24]
  415a18:	b	41594c <wcrtomb@plt+0x10e5c>
  415a1c:	mov	x0, x23
  415a20:	bl	4046b0 <free@plt>
  415a24:	ldr	x24, [sp, #24]
  415a28:	mov	x0, x28
  415a2c:	bl	41d1a8 <wcrtomb@plt+0x186b8>
  415a30:	mov	x0, x24
  415a34:	bl	4046b0 <free@plt>
  415a38:	mov	x0, x22
  415a3c:	add	sp, sp, #0x1f0
  415a40:	ldp	x20, x19, [sp, #80]
  415a44:	ldp	x22, x21, [sp, #64]
  415a48:	ldp	x24, x23, [sp, #48]
  415a4c:	ldp	x26, x25, [sp, #32]
  415a50:	ldp	x28, x27, [sp, #16]
  415a54:	ldp	x29, x30, [sp], #96
  415a58:	ret
  415a5c:	sub	sp, sp, #0x70
  415a60:	stp	x29, x30, [sp, #16]
  415a64:	stp	x28, x27, [sp, #32]
  415a68:	stp	x26, x25, [sp, #48]
  415a6c:	stp	x24, x23, [sp, #64]
  415a70:	stp	x22, x21, [sp, #80]
  415a74:	stp	x20, x19, [sp, #96]
  415a78:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415a7c:	ldr	x8, [x28, #1128]
  415a80:	ldr	x27, [x1, #88]
  415a84:	mov	x20, x3
  415a88:	mov	w23, w2
  415a8c:	mov	x21, x1
  415a90:	mov	x19, x0
  415a94:	add	x29, sp, #0x10
  415a98:	cbz	x8, 415b78 <wcrtomb@plt+0x11088>
  415a9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415aa0:	ldr	w0, [x8, #2992]
  415aa4:	mov	x1, x19
  415aa8:	bl	41b9e0 <wcrtomb@plt+0x16ef0>
  415aac:	mov	x22, x0
  415ab0:	mov	x0, x19
  415ab4:	bl	403f00 <strlen@plt>
  415ab8:	mov	x25, x0
  415abc:	mov	w0, #0x60                  	// #96
  415ac0:	bl	44a010 <argp_parse@@Base+0xf964>
  415ac4:	mov	x24, x0
  415ac8:	cmp	x25, #0x2
  415acc:	str	xzr, [x0]
  415ad0:	str	xzr, [x0, #64]
  415ad4:	str	wzr, [x0, #60]
  415ad8:	stp	xzr, xzr, [x0, #40]
  415adc:	b.cc	415af0 <wcrtomb@plt+0x11000>  // b.lo, b.ul, b.last
  415ae0:	sub	x8, x25, #0x1
  415ae4:	ldrb	w9, [x19, x8]
  415ae8:	cmp	w9, #0x2f
  415aec:	csel	x25, x8, x25, eq  // eq = none
  415af0:	add	x0, x25, #0x1
  415af4:	bl	44a010 <argp_parse@@Base+0xf964>
  415af8:	mov	x1, x19
  415afc:	mov	x2, x25
  415b00:	mov	x26, x0
  415b04:	str	x0, [x24, #88]
  415b08:	bl	403e80 <memcpy@plt>
  415b0c:	ldr	x0, [x28, #1128]
  415b10:	mov	x1, x24
  415b14:	strb	wzr, [x26, x25]
  415b18:	stp	xzr, x22, [x24, #72]
  415b1c:	bl	43e854 <argp_parse@@Base+0x41a8>
  415b20:	ldr	x8, [x24, #80]
  415b24:	mov	x22, x0
  415b28:	mov	x0, x8
  415b2c:	bl	4046b0 <free@plt>
  415b30:	ldr	x0, [x24, #88]
  415b34:	bl	4046b0 <free@plt>
  415b38:	mov	x0, x24
  415b3c:	bl	4046b0 <free@plt>
  415b40:	cbz	x22, 415b78 <wcrtomb@plt+0x11088>
  415b44:	ldrb	w8, [x22, #60]
  415b48:	tbz	w8, #0, 415b5c <wcrtomb@plt+0x1106c>
  415b4c:	tbz	w23, #5, 415b6c <wcrtomb@plt+0x1107c>
  415b50:	add	x0, x22, #0x58
  415b54:	mov	x1, x19
  415b58:	bl	41b60c <wcrtomb@plt+0x16b1c>
  415b5c:	ldr	x0, [x22, #88]
  415b60:	mov	x1, x19
  415b64:	bl	404610 <strcmp@plt>
  415b68:	cbz	w0, 415d9c <wcrtomb@plt+0x112ac>
  415b6c:	mov	w8, #0x4e                  	// #78
  415b70:	strb	w8, [x20]
  415b74:	b	416180 <wcrtomb@plt+0x11690>
  415b78:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415b7c:	ldr	x8, [x24, #1136]
  415b80:	cbz	x8, 415bec <wcrtomb@plt+0x110fc>
  415b84:	ldp	x26, x25, [x21, #88]
  415b88:	mov	w0, #0x60                  	// #96
  415b8c:	bl	44a010 <argp_parse@@Base+0xf964>
  415b90:	mov	x22, x0
  415b94:	str	xzr, [x0]
  415b98:	str	xzr, [x0, #64]
  415b9c:	str	wzr, [x0, #60]
  415ba0:	stp	xzr, xzr, [x0, #40]
  415ba4:	mov	w0, #0x1                   	// #1
  415ba8:	bl	44a010 <argp_parse@@Base+0xf964>
  415bac:	stp	xzr, x0, [x22, #80]
  415bb0:	strb	wzr, [x0]
  415bb4:	ldr	x0, [x24, #1136]
  415bb8:	mov	x1, x22
  415bbc:	str	xzr, [x22, #72]
  415bc0:	stp	x26, x25, [x22, #24]
  415bc4:	bl	43e854 <argp_parse@@Base+0x41a8>
  415bc8:	ldr	x8, [x22, #80]
  415bcc:	mov	x24, x0
  415bd0:	mov	x0, x8
  415bd4:	bl	4046b0 <free@plt>
  415bd8:	ldr	x0, [x22, #88]
  415bdc:	bl	4046b0 <free@plt>
  415be0:	mov	x0, x22
  415be4:	bl	4046b0 <free@plt>
  415be8:	b	415bf0 <wcrtomb@plt+0x11100>
  415bec:	mov	x24, xzr
  415bf0:	ldp	x1, x2, [x21, #176]
  415bf4:	ldp	x3, x4, [x21, #88]
  415bf8:	lsr	x5, x27, #63
  415bfc:	mov	w6, #0x1                   	// #1
  415c00:	mov	x0, x19
  415c04:	mov	x7, xzr
  415c08:	bl	417e10 <wcrtomb@plt+0x13320>
  415c0c:	mov	x22, x0
  415c10:	cbz	x24, 415d00 <wcrtomb@plt+0x11210>
  415c14:	ldr	x25, [x24, #88]
  415c18:	mov	x1, x19
  415c1c:	mov	x0, x25
  415c20:	bl	404610 <strcmp@plt>
  415c24:	cbz	w0, 415ce4 <wcrtomb@plt+0x111f4>
  415c28:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  415c2c:	ldrb	w8, [x8, #3713]
  415c30:	tbz	w8, #5, 415c90 <wcrtomb@plt+0x111a0>
  415c34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415c38:	ldr	x8, [x8, #4000]
  415c3c:	cbz	x8, 415c44 <wcrtomb@plt+0x11154>
  415c40:	blr	x8
  415c44:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  415c48:	add	x1, x1, #0x901
  415c4c:	mov	w2, #0x5                   	// #5
  415c50:	mov	x0, xzr
  415c54:	bl	4048b0 <dcgettext@plt>
  415c58:	mov	x25, x0
  415c5c:	mov	x0, x19
  415c60:	bl	448e5c <argp_parse@@Base+0xe7b0>
  415c64:	ldr	x1, [x24, #88]
  415c68:	mov	x26, x0
  415c6c:	mov	w0, #0x1                   	// #1
  415c70:	bl	449134 <argp_parse@@Base+0xea88>
  415c74:	mov	x4, x0
  415c78:	mov	w0, wzr
  415c7c:	mov	w1, wzr
  415c80:	mov	x2, x25
  415c84:	mov	x3, x26
  415c88:	bl	403f60 <error@plt>
  415c8c:	ldr	x25, [x24, #88]
  415c90:	ldr	w8, [x22, #60]
  415c94:	mov	x0, x25
  415c98:	str	x24, [x22, #64]
  415c9c:	orr	w8, w8, #0x10
  415ca0:	str	w8, [x22, #60]
  415ca4:	bl	403f00 <strlen@plt>
  415ca8:	mov	x24, x0
  415cac:	mov	x0, x19
  415cb0:	bl	403f00 <strlen@plt>
  415cb4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415cb8:	ldr	x27, [x8, #1144]
  415cbc:	cbz	x27, 415ce4 <wcrtomb@plt+0x111f4>
  415cc0:	mov	x26, x0
  415cc4:	add	x0, x27, #0x58
  415cc8:	mov	x1, x25
  415ccc:	mov	x2, x24
  415cd0:	mov	x3, x19
  415cd4:	mov	x4, x26
  415cd8:	bl	41bbb0 <wcrtomb@plt+0x170c0>
  415cdc:	ldr	x27, [x27]
  415ce0:	cbnz	x27, 415cc4 <wcrtomb@plt+0x111d4>
  415ce4:	mov	w8, wzr
  415ce8:	mov	w9, #0x1                   	// #1
  415cec:	str	w9, [x22, #56]
  415cf0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415cf4:	ldrb	w9, [x9, #3077]
  415cf8:	cbnz	w9, 415fb8 <wcrtomb@plt+0x114c8>
  415cfc:	b	415fd0 <wcrtomb@plt+0x114e0>
  415d00:	ldr	w8, [x22, #60]
  415d04:	orr	w8, w8, #0x8
  415d08:	str	w8, [x22, #60]
  415d0c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  415d10:	ldrb	w8, [x8, #3713]
  415d14:	tbz	w8, #4, 415d5c <wcrtomb@plt+0x1126c>
  415d18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415d1c:	ldr	x8, [x8, #4000]
  415d20:	cbz	x8, 415d28 <wcrtomb@plt+0x11238>
  415d24:	blr	x8
  415d28:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  415d2c:	add	x1, x1, #0x928
  415d30:	mov	w2, #0x5                   	// #5
  415d34:	mov	x0, xzr
  415d38:	bl	4048b0 <dcgettext@plt>
  415d3c:	mov	x24, x0
  415d40:	mov	x0, x19
  415d44:	bl	448e5c <argp_parse@@Base+0xe7b0>
  415d48:	mov	x3, x0
  415d4c:	mov	w0, wzr
  415d50:	mov	w1, wzr
  415d54:	mov	x2, x24
  415d58:	bl	403f60 <error@plt>
  415d5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415d60:	ldr	x8, [x8, #3824]
  415d64:	cbnz	x8, 415d80 <wcrtomb@plt+0x11290>
  415d68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415d6c:	add	x8, x8, #0xbd8
  415d70:	ldr	x10, [x21, #176]
  415d74:	ldr	x9, [x8]
  415d78:	cmp	x10, x9
  415d7c:	b.ge	415f38 <wcrtomb@plt+0x11448>  // b.tcont
  415d80:	mov	w9, #0x2                   	// #2
  415d84:	mov	w8, wzr
  415d88:	str	w9, [x22, #56]
  415d8c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415d90:	ldrb	w9, [x9, #3077]
  415d94:	cbnz	w9, 415fb8 <wcrtomb@plt+0x114c8>
  415d98:	b	415fd0 <wcrtomb@plt+0x114e0>
  415d9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415da0:	ldrb	w8, [x8, #3024]
  415da4:	cbz	w8, 415dc4 <wcrtomb@plt+0x112d4>
  415da8:	ldrb	w8, [x22, #60]
  415dac:	tbz	w8, #1, 415db4 <wcrtomb@plt+0x112c4>
  415db0:	tbnz	x27, #63, 415dc4 <wcrtomb@plt+0x112d4>
  415db4:	ldr	x8, [x22, #24]
  415db8:	ldr	x9, [x21, #88]
  415dbc:	cmp	x8, x9
  415dc0:	b.ne	415de4 <wcrtomb@plt+0x112f4>  // b.any
  415dc4:	ldr	x8, [x22, #32]
  415dc8:	ldr	x9, [x21, #96]
  415dcc:	cmp	x8, x9
  415dd0:	b.ne	415de4 <wcrtomb@plt+0x112f4>  // b.any
  415dd4:	mov	w8, wzr
  415dd8:	mov	w9, #0x1                   	// #1
  415ddc:	str	w9, [x22, #56]
  415de0:	b	415fa0 <wcrtomb@plt+0x114b0>
  415de4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415de8:	ldr	x8, [x24, #1136]
  415dec:	cbz	x8, 415f7c <wcrtomb@plt+0x1148c>
  415df0:	ldp	x28, x26, [x21, #88]
  415df4:	mov	w0, #0x60                  	// #96
  415df8:	bl	44a010 <argp_parse@@Base+0xf964>
  415dfc:	mov	x25, x0
  415e00:	str	xzr, [x0]
  415e04:	str	xzr, [x0, #64]
  415e08:	str	wzr, [x0, #60]
  415e0c:	stp	xzr, xzr, [x0, #40]
  415e10:	mov	w0, #0x1                   	// #1
  415e14:	bl	44a010 <argp_parse@@Base+0xf964>
  415e18:	stp	xzr, x0, [x25, #80]
  415e1c:	strb	wzr, [x0]
  415e20:	ldr	x0, [x24, #1136]
  415e24:	mov	x1, x25
  415e28:	str	xzr, [x25, #72]
  415e2c:	stp	x28, x26, [x25, #24]
  415e30:	bl	43e854 <argp_parse@@Base+0x41a8>
  415e34:	ldr	x8, [x25, #80]
  415e38:	mov	x24, x0
  415e3c:	mov	x0, x8
  415e40:	bl	4046b0 <free@plt>
  415e44:	ldr	x0, [x25, #88]
  415e48:	bl	4046b0 <free@plt>
  415e4c:	mov	x0, x25
  415e50:	bl	4046b0 <free@plt>
  415e54:	cbz	x24, 415f7c <wcrtomb@plt+0x1148c>
  415e58:	ldr	x25, [x24, #88]
  415e5c:	mov	x1, x19
  415e60:	mov	x0, x25
  415e64:	bl	404610 <strcmp@plt>
  415e68:	cbz	w0, 415f28 <wcrtomb@plt+0x11438>
  415e6c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  415e70:	ldrb	w8, [x8, #3713]
  415e74:	tbz	w8, #5, 415ed4 <wcrtomb@plt+0x113e4>
  415e78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415e7c:	ldr	x8, [x8, #4000]
  415e80:	cbz	x8, 415e88 <wcrtomb@plt+0x11398>
  415e84:	blr	x8
  415e88:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  415e8c:	add	x1, x1, #0x901
  415e90:	mov	w2, #0x5                   	// #5
  415e94:	mov	x0, xzr
  415e98:	bl	4048b0 <dcgettext@plt>
  415e9c:	mov	x25, x0
  415ea0:	mov	x0, x19
  415ea4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  415ea8:	ldr	x1, [x24, #88]
  415eac:	mov	x26, x0
  415eb0:	mov	w0, #0x1                   	// #1
  415eb4:	bl	449134 <argp_parse@@Base+0xea88>
  415eb8:	mov	x4, x0
  415ebc:	mov	w0, wzr
  415ec0:	mov	w1, wzr
  415ec4:	mov	x2, x25
  415ec8:	mov	x3, x26
  415ecc:	bl	403f60 <error@plt>
  415ed0:	ldr	x25, [x24, #88]
  415ed4:	ldr	w8, [x22, #60]
  415ed8:	mov	x0, x25
  415edc:	str	x24, [x22, #64]
  415ee0:	orr	w8, w8, #0x10
  415ee4:	str	w8, [x22, #60]
  415ee8:	bl	403f00 <strlen@plt>
  415eec:	mov	x24, x0
  415ef0:	mov	x0, x19
  415ef4:	bl	403f00 <strlen@plt>
  415ef8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415efc:	ldr	x28, [x8, #1144]
  415f00:	cbz	x28, 415f28 <wcrtomb@plt+0x11438>
  415f04:	mov	x26, x0
  415f08:	add	x0, x28, #0x58
  415f0c:	mov	x1, x25
  415f10:	mov	x2, x24
  415f14:	mov	x3, x19
  415f18:	mov	x4, x26
  415f1c:	bl	41bbb0 <wcrtomb@plt+0x170c0>
  415f20:	ldr	x28, [x28]
  415f24:	cbnz	x28, 415f08 <wcrtomb@plt+0x11418>
  415f28:	mov	w9, #0x1                   	// #1
  415f2c:	mov	w8, wzr
  415f30:	str	w9, [x22, #56]
  415f34:	b	415f90 <wcrtomb@plt+0x114a0>
  415f38:	ldr	x8, [x8, #8]
  415f3c:	b.gt	415f4c <wcrtomb@plt+0x1145c>
  415f40:	ldr	x10, [x21, #184]
  415f44:	cmp	w10, w8
  415f48:	b.mi	415d80 <wcrtomb@plt+0x11290>  // b.first
  415f4c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415f50:	ldr	w10, [x10, #3964]
  415f54:	cbz	w10, 415f74 <wcrtomb@plt+0x11484>
  415f58:	ldr	x10, [x21, #192]
  415f5c:	cmp	x10, x9
  415f60:	b.lt	415d80 <wcrtomb@plt+0x11290>  // b.tstop
  415f64:	b.gt	415f74 <wcrtomb@plt+0x11484>
  415f68:	ldr	x9, [x21, #200]
  415f6c:	cmp	w9, w8
  415f70:	b.mi	415d80 <wcrtomb@plt+0x11290>  // b.first
  415f74:	mov	w9, #0x1                   	// #1
  415f78:	b	415d84 <wcrtomb@plt+0x11294>
  415f7c:	mov	w8, #0x2                   	// #2
  415f80:	str	w8, [x22, #56]
  415f84:	ldur	q0, [x21, #88]
  415f88:	mov	w8, #0x1                   	// #1
  415f8c:	stur	q0, [x22, #24]
  415f90:	tbz	x27, #63, 415fa0 <wcrtomb@plt+0x114b0>
  415f94:	ldr	w9, [x22, #60]
  415f98:	orr	w9, w9, #0x2
  415f9c:	str	w9, [x22, #60]
  415fa0:	ldr	w9, [x22, #60]
  415fa4:	orr	w9, w9, #0x4
  415fa8:	str	w9, [x22, #60]
  415fac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415fb0:	ldrb	w9, [x9, #3077]
  415fb4:	cbz	w9, 415fd0 <wcrtomb@plt+0x114e0>
  415fb8:	ldr	x9, [x21, #392]
  415fbc:	cbz	x9, 415fd0 <wcrtomb@plt+0x114e0>
  415fc0:	ldr	x10, [x21, #88]
  415fc4:	ldr	x9, [x9, #88]
  415fc8:	cmp	x10, x9
  415fcc:	b.ne	416040 <wcrtomb@plt+0x11550>  // b.any
  415fd0:	tbz	w23, #4, 415fe8 <wcrtomb@plt+0x114f8>
  415fd4:	ands	w9, w23, #0x3
  415fd8:	str	w9, [x22, #56]
  415fdc:	b.ne	415fe8 <wcrtomb@plt+0x114f8>  // b.any
  415fe0:	mov	w9, #0x4e                  	// #78
  415fe4:	strb	w9, [x20]
  415fe8:	cbz	w8, 4160b4 <wcrtomb@plt+0x115c4>
  415fec:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  415ff0:	ldrb	w8, [x8, #3713]
  415ff4:	tbz	w8, #5, 4160b4 <wcrtomb@plt+0x115c4>
  415ff8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  415ffc:	ldr	x8, [x8, #4000]
  416000:	cbz	x8, 416008 <wcrtomb@plt+0x11518>
  416004:	blr	x8
  416008:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41600c:	add	x1, x1, #0x974
  416010:	mov	w2, #0x5                   	// #5
  416014:	mov	x0, xzr
  416018:	bl	4048b0 <dcgettext@plt>
  41601c:	mov	x23, x0
  416020:	mov	x0, x19
  416024:	bl	448e5c <argp_parse@@Base+0xe7b0>
  416028:	mov	x3, x0
  41602c:	mov	w0, wzr
  416030:	mov	w1, wzr
  416034:	mov	x2, x23
  416038:	bl	403f60 <error@plt>
  41603c:	b	4160b4 <wcrtomb@plt+0x115c4>
  416040:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  416044:	ldrb	w8, [x8, #3714]
  416048:	tbz	w8, #2, 416094 <wcrtomb@plt+0x115a4>
  41604c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416050:	ldr	x8, [x8, #4000]
  416054:	cbz	x8, 41605c <wcrtomb@plt+0x1156c>
  416058:	blr	x8
  41605c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416060:	add	x1, x1, #0x93d
  416064:	mov	w2, #0x5                   	// #5
  416068:	mov	x0, xzr
  41606c:	bl	4048b0 <dcgettext@plt>
  416070:	ldr	x8, [x22, #88]
  416074:	mov	x23, x0
  416078:	mov	x0, x8
  41607c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  416080:	mov	x3, x0
  416084:	mov	w0, wzr
  416088:	mov	w1, wzr
  41608c:	mov	x2, x23
  416090:	bl	403f60 <error@plt>
  416094:	ldr	x23, [x22, #40]
  416098:	str	wzr, [x22, #56]
  41609c:	cbz	x23, 4160b4 <wcrtomb@plt+0x115c4>
  4160a0:	ldr	x0, [x23, #24]
  4160a4:	bl	4046b0 <free@plt>
  4160a8:	mov	x0, x23
  4160ac:	bl	4046b0 <free@plt>
  4160b0:	str	xzr, [x22, #40]
  4160b4:	ldp	w9, w8, [x22, #56]
  4160b8:	orr	w8, w8, #0x1
  4160bc:	str	w8, [x22, #60]
  4160c0:	cbz	w9, 416180 <wcrtomb@plt+0x11690>
  4160c4:	add	x1, sp, #0x8
  4160c8:	mov	x0, x21
  4160cc:	bl	40a700 <wcrtomb@plt+0x5c10>
  4160d0:	cmp	w0, #0x1
  4160d4:	b.eq	416120 <wcrtomb@plt+0x11630>  // b.none
  4160d8:	cmp	w0, #0x2
  4160dc:	b.eq	416150 <wcrtomb@plt+0x11660>  // b.none
  4160e0:	cmp	w0, #0x3
  4160e4:	b.ne	416180 <wcrtomb@plt+0x11690>  // b.any
  4160e8:	ldr	x21, [sp, #8]
  4160ec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4160f0:	add	x1, x1, #0xb2c
  4160f4:	mov	w2, #0x5                   	// #5
  4160f8:	mov	x0, xzr
  4160fc:	bl	4048b0 <dcgettext@plt>
  416100:	mov	x2, x0
  416104:	mov	x0, x19
  416108:	mov	x1, x21
  41610c:	bl	40a654 <wcrtomb@plt+0x5b64>
  416110:	mov	w8, #0x4e                  	// #78
  416114:	strb	w8, [x20]
  416118:	str	wzr, [x22, #56]
  41611c:	b	416180 <wcrtomb@plt+0x11690>
  416120:	ldr	x20, [sp, #8]
  416124:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  416128:	add	x1, x1, #0xbb1
  41612c:	mov	w2, #0x5                   	// #5
  416130:	mov	x0, xzr
  416134:	bl	4048b0 <dcgettext@plt>
  416138:	mov	x2, x0
  41613c:	mov	x0, x19
  416140:	mov	x1, x20
  416144:	bl	40a654 <wcrtomb@plt+0x5b64>
  416148:	str	wzr, [x22, #56]
  41614c:	b	416178 <wcrtomb@plt+0x11688>
  416150:	ldr	x20, [sp, #8]
  416154:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  416158:	add	x1, x1, #0xbb1
  41615c:	mov	w2, #0x5                   	// #5
  416160:	mov	x0, xzr
  416164:	bl	4048b0 <dcgettext@plt>
  416168:	mov	x2, x0
  41616c:	mov	x0, x19
  416170:	mov	x1, x20
  416174:	bl	40a654 <wcrtomb@plt+0x5b64>
  416178:	ldr	x8, [sp, #8]
  41617c:	str	x8, [x22, #72]
  416180:	mov	x0, x22
  416184:	ldp	x20, x19, [sp, #96]
  416188:	ldp	x22, x21, [sp, #80]
  41618c:	ldp	x24, x23, [sp, #64]
  416190:	ldp	x26, x25, [sp, #48]
  416194:	ldp	x28, x27, [sp, #32]
  416198:	ldp	x29, x30, [sp, #16]
  41619c:	add	sp, sp, #0x70
  4161a0:	ret
  4161a4:	cbz	x0, 4161b4 <wcrtomb@plt+0x116c4>
  4161a8:	ldr	x8, [x0, #40]
  4161ac:	cbz	x8, 4161b8 <wcrtomb@plt+0x116c8>
  4161b0:	ldr	x0, [x8]
  4161b4:	ret
  4161b8:	mov	x0, xzr
  4161bc:	ret
  4161c0:	cbz	x0, 4161d4 <wcrtomb@plt+0x116e4>
  4161c4:	ldr	x8, [x0, #40]
  4161c8:	cbz	x8, 4161d8 <wcrtomb@plt+0x116e8>
  4161cc:	ldr	x8, [x8]
  4161d0:	b	4161d8 <wcrtomb@plt+0x116e8>
  4161d4:	mov	x8, xzr
  4161d8:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4161dc:	add	x9, x9, #0x826
  4161e0:	cmp	x8, #0x0
  4161e4:	csel	x0, x9, x8, eq  // eq = none
  4161e8:	ret
  4161ec:	sub	sp, sp, #0xb0
  4161f0:	stp	x24, x23, [sp, #128]
  4161f4:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4161f8:	ldr	x8, [x23, #1144]
  4161fc:	stp	x29, x30, [sp, #96]
  416200:	stp	x26, x25, [sp, #112]
  416204:	stp	x22, x21, [sp, #144]
  416208:	stp	x20, x19, [sp, #160]
  41620c:	add	x29, sp, #0x60
  416210:	cbz	x8, 4164c0 <wcrtomb@plt+0x119d0>
  416214:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  416218:	adrp	x4, 404000 <localtime_r@plt>
  41621c:	mov	x19, x0
  416220:	add	x3, x3, #0x10
  416224:	add	x4, x4, #0x6b0
  416228:	add	x0, sp, #0x8
  41622c:	mov	x1, xzr
  416230:	mov	x2, xzr
  416234:	bl	44ae4c <_obstack_begin@@Base>
  416238:	cbz	x19, 4162bc <wcrtomb@plt+0x117cc>
  41623c:	ldr	x8, [x19, #40]
  416240:	cbz	x8, 4162bc <wcrtomb@plt+0x117cc>
  416244:	ldr	x21, [x8]
  416248:	cbz	x21, 4162bc <wcrtomb@plt+0x117cc>
  41624c:	ldrb	w8, [x21]
  416250:	cbz	w8, 4164dc <wcrtomb@plt+0x119ec>
  416254:	mov	x20, xzr
  416258:	mov	x22, x21
  41625c:	mov	x0, x22
  416260:	bl	403f00 <strlen@plt>
  416264:	add	x8, x0, #0x1
  416268:	add	x22, x22, x8
  41626c:	ldrb	w9, [x22]
  416270:	add	x20, x8, x20
  416274:	cbnz	w9, 41625c <wcrtomb@plt+0x1176c>
  416278:	ldp	x0, x8, [sp, #32]
  41627c:	sub	x8, x8, x0
  416280:	cmp	x8, x20
  416284:	b.cs	416298 <wcrtomb@plt+0x117a8>  // b.hs, b.nlast
  416288:	add	x0, sp, #0x8
  41628c:	mov	x1, x20
  416290:	bl	44afa0 <_obstack_newchunk@@Base>
  416294:	ldr	x0, [sp, #32]
  416298:	mov	x1, x21
  41629c:	mov	x2, x20
  4162a0:	bl	403e80 <memcpy@plt>
  4162a4:	ldr	x8, [sp, #32]
  4162a8:	add	x8, x8, x20
  4162ac:	str	x8, [sp, #32]
  4162b0:	ldr	x24, [x23, #1144]
  4162b4:	cbnz	x24, 4162c8 <wcrtomb@plt+0x117d8>
  4162b8:	b	416408 <wcrtomb@plt+0x11918>
  4162bc:	mov	x20, xzr
  4162c0:	ldr	x24, [x23, #1144]
  4162c4:	cbz	x24, 416408 <wcrtomb@plt+0x11918>
  4162c8:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4162cc:	mov	w25, #0x58                  	// #88
  4162d0:	add	x21, x21, #0xb36
  4162d4:	b	4162f8 <wcrtomb@plt+0x11808>
  4162d8:	ldr	x2, [x26, #88]
  4162dc:	add	x0, sp, #0x8
  4162e0:	mov	x1, x21
  4162e4:	bl	41823c <wcrtomb@plt+0x1374c>
  4162e8:	mov	x0, x22
  4162ec:	bl	4046b0 <free@plt>
  4162f0:	ldr	x24, [x24]
  4162f4:	cbz	x24, 416408 <wcrtomb@plt+0x11918>
  4162f8:	ldrb	w8, [x24, #60]
  4162fc:	tbz	w8, #4, 4162f0 <wcrtomb@plt+0x11800>
  416300:	mov	x8, x24
  416304:	cbz	x8, 4163e0 <wcrtomb@plt+0x118f0>
  416308:	mov	x26, x8
  41630c:	ldr	w9, [x8, #60]
  416310:	ldr	x8, [x8, #64]
  416314:	and	w9, w9, #0xffffffef
  416318:	cmp	x8, x24
  41631c:	str	w9, [x26, #60]
  416320:	b.ne	416304 <wcrtomb@plt+0x11814>  // b.any
  416324:	ldr	x0, [x24, #88]
  416328:	bl	43bf94 <argp_parse@@Base+0x18e8>
  41632c:	ldp	x8, x9, [sp, #32]
  416330:	mov	x22, x0
  416334:	cmp	x9, x8
  416338:	b.ne	41634c <wcrtomb@plt+0x1185c>  // b.any
  41633c:	add	x0, sp, #0x8
  416340:	mov	w1, #0x1                   	// #1
  416344:	bl	44afa0 <_obstack_newchunk@@Base>
  416348:	ldr	x8, [sp, #32]
  41634c:	add	x9, x8, #0x1
  416350:	mov	x0, x22
  416354:	str	x9, [sp, #32]
  416358:	strb	w25, [x8]
  41635c:	bl	403f00 <strlen@plt>
  416360:	mov	x8, x0
  416364:	ldp	x0, x9, [sp, #32]
  416368:	add	x23, x8, #0x1
  41636c:	sub	x8, x9, x0
  416370:	cmp	x8, x23
  416374:	b.cs	416388 <wcrtomb@plt+0x11898>  // b.hs, b.nlast
  416378:	add	x0, sp, #0x8
  41637c:	mov	x1, x23
  416380:	bl	44afa0 <_obstack_newchunk@@Base>
  416384:	ldr	x0, [sp, #32]
  416388:	mov	x1, x22
  41638c:	mov	x2, x23
  416390:	bl	403e80 <memcpy@plt>
  416394:	ldr	x8, [sp, #32]
  416398:	add	x0, sp, #0x8
  41639c:	mov	x2, x21
  4163a0:	add	x8, x8, x23
  4163a4:	str	x8, [sp, #32]
  4163a8:	ldr	x1, [x24, #88]
  4163ac:	bl	41823c <wcrtomb@plt+0x1374c>
  4163b0:	cmp	x26, x24
  4163b4:	b.eq	4162d8 <wcrtomb@plt+0x117e8>  // b.none
  4163b8:	mov	x23, x24
  4163bc:	ldr	x8, [x23, #64]
  4163c0:	ldr	x2, [x23, #88]
  4163c4:	add	x0, sp, #0x8
  4163c8:	ldr	x1, [x8, #88]
  4163cc:	bl	41823c <wcrtomb@plt+0x1374c>
  4163d0:	ldr	x23, [x23, #64]
  4163d4:	cmp	x23, x26
  4163d8:	b.ne	4163bc <wcrtomb@plt+0x118cc>  // b.any
  4163dc:	b	4162d8 <wcrtomb@plt+0x117e8>
  4163e0:	mov	x22, x24
  4163e4:	ldr	x8, [x22, #64]
  4163e8:	cbz	x8, 4162f0 <wcrtomb@plt+0x11800>
  4163ec:	ldr	x1, [x8, #88]
  4163f0:	ldr	x2, [x22, #88]
  4163f4:	add	x0, sp, #0x8
  4163f8:	bl	41823c <wcrtomb@plt+0x1374c>
  4163fc:	ldr	x22, [x22, #64]
  416400:	cbnz	x22, 4163e4 <wcrtomb@plt+0x118f4>
  416404:	b	4162f0 <wcrtomb@plt+0x11800>
  416408:	cbz	x19, 4164b4 <wcrtomb@plt+0x119c4>
  41640c:	ldp	x9, x8, [sp, #24]
  416410:	sub	x9, x8, x9
  416414:	cmp	x9, x20
  416418:	b.eq	4164b4 <wcrtomb@plt+0x119c4>  // b.none
  41641c:	ldr	x9, [sp, #40]
  416420:	cmp	x9, x8
  416424:	b.ne	416438 <wcrtomb@plt+0x11948>  // b.any
  416428:	add	x0, sp, #0x8
  41642c:	mov	w1, #0x1                   	// #1
  416430:	bl	44afa0 <_obstack_newchunk@@Base>
  416434:	ldr	x8, [sp, #32]
  416438:	add	x9, x8, #0x1
  41643c:	str	x9, [sp, #32]
  416440:	strb	wzr, [x8]
  416444:	ldr	x20, [x19, #40]
  416448:	ldr	x0, [x20, #24]
  41644c:	bl	4046b0 <free@plt>
  416450:	mov	x0, x20
  416454:	bl	4046b0 <free@plt>
  416458:	ldp	x0, x8, [sp, #24]
  41645c:	cmp	x8, x0
  416460:	b.ne	416470 <wcrtomb@plt+0x11980>  // b.any
  416464:	ldrb	w9, [sp, #88]
  416468:	orr	w9, w9, #0x2
  41646c:	strb	w9, [sp, #88]
  416470:	ldr	x10, [sp, #56]
  416474:	ldr	x11, [sp, #16]
  416478:	ldr	x9, [sp, #40]
  41647c:	add	x8, x10, x8
  416480:	bic	x8, x8, x10
  416484:	sub	x10, x8, x11
  416488:	sub	x11, x9, x11
  41648c:	cmp	x10, x11
  416490:	str	x8, [sp, #32]
  416494:	b.ls	4164a0 <wcrtomb@plt+0x119b0>  // b.plast
  416498:	mov	x8, x9
  41649c:	str	x9, [sp, #32]
  4164a0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4164a4:	add	x1, x1, #0x993
  4164a8:	str	x8, [sp, #24]
  4164ac:	bl	418084 <wcrtomb@plt+0x13594>
  4164b0:	str	x0, [x19, #40]
  4164b4:	add	x0, sp, #0x8
  4164b8:	mov	x1, xzr
  4164bc:	bl	44b118 <_obstack_free@@Base>
  4164c0:	ldp	x20, x19, [sp, #160]
  4164c4:	ldp	x22, x21, [sp, #144]
  4164c8:	ldp	x24, x23, [sp, #128]
  4164cc:	ldp	x26, x25, [sp, #112]
  4164d0:	ldp	x29, x30, [sp, #96]
  4164d4:	add	sp, sp, #0xb0
  4164d8:	ret
  4164dc:	mov	x20, xzr
  4164e0:	ldp	x0, x8, [sp, #32]
  4164e4:	sub	x8, x8, x0
  4164e8:	cmp	x8, x20
  4164ec:	b.cc	416288 <wcrtomb@plt+0x11798>  // b.lo, b.ul, b.last
  4164f0:	b	416298 <wcrtomb@plt+0x117a8>
  4164f4:	sub	sp, sp, #0x50
  4164f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4164fc:	add	x1, x1, #0x82b
  416500:	mov	w0, #0x1                   	// #1
  416504:	stp	x29, x30, [sp, #48]
  416508:	stp	x20, x19, [sp, #64]
  41650c:	add	x29, sp, #0x30
  416510:	bl	404310 <__printf_chk@plt>
  416514:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416518:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41651c:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416520:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416524:	add	x1, x1, #0x856
  416528:	add	x2, x2, #0x872
  41652c:	add	x3, x3, #0x87d
  416530:	add	x4, x4, #0x881
  416534:	mov	w0, #0x1                   	// #1
  416538:	bl	404310 <__printf_chk@plt>
  41653c:	add	x3, sp, #0x18
  416540:	mov	w2, #0x1                   	// #1
  416544:	mov	x0, xzr
  416548:	mov	x1, xzr
  41654c:	bl	41bc74 <wcrtomb@plt+0x17184>
  416550:	mov	x20, x0
  416554:	mov	x3, sp
  416558:	mov	w0, #0x1                   	// #1
  41655c:	mov	w2, #0x1                   	// #1
  416560:	mov	x1, xzr
  416564:	bl	41bc74 <wcrtomb@plt+0x17184>
  416568:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41656c:	add	x19, x19, #0x885
  416570:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416574:	mov	x4, x0
  416578:	add	x2, x2, #0x997
  41657c:	mov	w0, #0x1                   	// #1
  416580:	mov	x1, x19
  416584:	mov	x3, x20
  416588:	bl	404310 <__printf_chk@plt>
  41658c:	add	x3, sp, #0x18
  416590:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  416594:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  416598:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41659c:	bl	41bc74 <wcrtomb@plt+0x17184>
  4165a0:	mov	x20, x0
  4165a4:	mov	x3, sp
  4165a8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4165ac:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  4165b0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4165b4:	bl	41bc74 <wcrtomb@plt+0x17184>
  4165b8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4165bc:	mov	x4, x0
  4165c0:	add	x2, x2, #0x99b
  4165c4:	mov	w0, #0x1                   	// #1
  4165c8:	mov	x1, x19
  4165cc:	mov	x3, x20
  4165d0:	bl	404310 <__printf_chk@plt>
  4165d4:	mov	w2, #0xc9ff                	// #51711
  4165d8:	add	x3, sp, #0x18
  4165dc:	movk	w2, #0x3b9a, lsl #16
  4165e0:	mov	x0, xzr
  4165e4:	mov	x1, xzr
  4165e8:	bl	41bc74 <wcrtomb@plt+0x17184>
  4165ec:	mov	x20, x0
  4165f0:	mov	w0, #0xc9ff                	// #51711
  4165f4:	mov	w2, #0xc9ff                	// #51711
  4165f8:	mov	x3, sp
  4165fc:	movk	w0, #0x3b9a, lsl #16
  416600:	movk	w2, #0x3b9a, lsl #16
  416604:	mov	x1, xzr
  416608:	bl	41bc74 <wcrtomb@plt+0x17184>
  41660c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416610:	mov	x4, x0
  416614:	add	x2, x2, #0x9a9
  416618:	mov	w0, #0x1                   	// #1
  41661c:	mov	x1, x19
  416620:	mov	x3, x20
  416624:	bl	404310 <__printf_chk@plt>
  416628:	add	x3, sp, #0x18
  41662c:	mov	x2, #0xffffffffffffffff    	// #-1
  416630:	mov	x0, xzr
  416634:	mov	x1, xzr
  416638:	bl	41bc74 <wcrtomb@plt+0x17184>
  41663c:	mov	x20, x0
  416640:	mov	x3, sp
  416644:	mov	x0, #0xffffffffffffffff    	// #-1
  416648:	mov	x2, #0xffffffffffffffff    	// #-1
  41664c:	mov	x1, xzr
  416650:	bl	41bc74 <wcrtomb@plt+0x17184>
  416654:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  416658:	mov	x4, x0
  41665c:	add	x2, x2, #0x97f
  416660:	mov	w0, #0x1                   	// #1
  416664:	mov	x1, x19
  416668:	mov	x3, x20
  41666c:	bl	404310 <__printf_chk@plt>
  416670:	add	x3, sp, #0x18
  416674:	mov	x2, #0xffffffffffffffff    	// #-1
  416678:	mov	x0, xzr
  41667c:	mov	x1, xzr
  416680:	bl	41bc74 <wcrtomb@plt+0x17184>
  416684:	mov	x20, x0
  416688:	mov	x3, sp
  41668c:	mov	x0, #0xffffffffffffffff    	// #-1
  416690:	mov	x2, #0xffffffffffffffff    	// #-1
  416694:	mov	x1, xzr
  416698:	bl	41bc74 <wcrtomb@plt+0x17184>
  41669c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4166a0:	mov	x4, x0
  4166a4:	add	x2, x2, #0x9b8
  4166a8:	mov	w0, #0x1                   	// #1
  4166ac:	mov	x1, x19
  4166b0:	mov	x3, x20
  4166b4:	bl	404310 <__printf_chk@plt>
  4166b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4166bc:	add	x1, x1, #0x253
  4166c0:	mov	w0, #0x1                   	// #1
  4166c4:	bl	404310 <__printf_chk@plt>
  4166c8:	ldp	x20, x19, [sp, #64]
  4166cc:	ldp	x29, x30, [sp, #48]
  4166d0:	add	sp, sp, #0x50
  4166d4:	ret
  4166d8:	sub	sp, sp, #0x100
  4166dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4166e0:	ldr	w8, [x8, #3772]
  4166e4:	stp	x24, x23, [sp, #208]
  4166e8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4166ec:	ldr	x0, [x24, #3824]
  4166f0:	mov	w9, #0x42                  	// #66
  4166f4:	cmp	w8, #0x0
  4166f8:	mov	w8, #0x242                 	// #578
  4166fc:	csel	w1, w8, w9, eq  // eq = none
  416700:	mov	w2, #0x1b6                 	// #438
  416704:	stp	x29, x30, [sp, #160]
  416708:	stp	x28, x27, [sp, #176]
  41670c:	stp	x26, x25, [sp, #192]
  416710:	stp	x22, x21, [sp, #224]
  416714:	stp	x20, x19, [sp, #240]
  416718:	add	x29, sp, #0xa0
  41671c:	stp	xzr, xzr, [sp]
  416720:	bl	404240 <open@plt>
  416724:	tbnz	w0, #31, 41678c <wcrtomb@plt+0x11c9c>
  416728:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41672c:	add	x1, x1, #0x89f
  416730:	mov	w19, w0
  416734:	bl	404330 <fdopen@plt>
  416738:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41673c:	str	x0, [x27, #1160]
  416740:	cbz	x0, 416798 <wcrtomb@plt+0x11ca8>
  416744:	bl	41f960 <wcrtomb@plt+0x1ae70>
  416748:	bl	41f9d8 <wcrtomb@plt+0x1aee8>
  41674c:	ldr	x3, [x27, #1160]
  416750:	add	x0, sp, #0x8
  416754:	mov	x1, sp
  416758:	mov	w2, #0xa                   	// #10
  41675c:	bl	404a20 <__getdelim@plt>
  416760:	cmp	x0, #0x1
  416764:	b.lt	416ef0 <wcrtomb@plt+0x12400>  // b.tstop
  416768:	ldr	x19, [sp, #8]
  41676c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416770:	add	x1, x1, #0x8a2
  416774:	mov	w2, #0x7                   	// #7
  416778:	mov	x0, x19
  41677c:	bl	4042c0 <strncmp@plt>
  416780:	cbz	w0, 4167ac <wcrtomb@plt+0x11cbc>
  416784:	mov	x19, xzr
  416788:	b	416880 <wcrtomb@plt+0x11d90>
  41678c:	ldr	x0, [x24, #3824]
  416790:	bl	42cbf8 <wcrtomb@plt+0x28108>
  416794:	b	416f0c <wcrtomb@plt+0x1241c>
  416798:	ldr	x0, [x24, #3824]
  41679c:	bl	42cbf8 <wcrtomb@plt+0x28108>
  4167a0:	mov	w0, w19
  4167a4:	bl	4044d0 <close@plt>
  4167a8:	b	416f0c <wcrtomb@plt+0x1241c>
  4167ac:	ldrb	w8, [x19, #7]
  4167b0:	cmp	w8, #0x2d
  4167b4:	b.eq	4167f8 <wcrtomb@plt+0x11d08>  // b.none
  4167b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4167bc:	ldr	x8, [x8, #4000]
  4167c0:	cbz	x8, 4167c8 <wcrtomb@plt+0x11cd8>
  4167c4:	blr	x8
  4167c8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4167cc:	add	x1, x1, #0x8aa
  4167d0:	mov	w2, #0x5                   	// #5
  4167d4:	mov	x0, xzr
  4167d8:	bl	4048b0 <dcgettext@plt>
  4167dc:	mov	x2, x0
  4167e0:	mov	w0, #0x1                   	// #1
  4167e4:	mov	w1, wzr
  4167e8:	bl	403f60 <error@plt>
  4167ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4167f0:	mov	w9, #0x2                   	// #2
  4167f4:	str	w9, [x8, #2352]
  4167f8:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4167fc:	add	x19, x19, #0x9
  416800:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416804:	add	x20, x20, #0x8aa
  416808:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41680c:	mov	w22, #0x2                   	// #2
  416810:	b	416820 <wcrtomb@plt+0x11d30>
  416814:	cmp	w8, #0x2d
  416818:	b.eq	41685c <wcrtomb@plt+0x11d6c>  // b.none
  41681c:	add	x19, x19, #0x1
  416820:	ldurb	w8, [x19, #-1]
  416824:	cbnz	w8, 416814 <wcrtomb@plt+0x11d24>
  416828:	ldr	x8, [x28, #4000]
  41682c:	cbz	x8, 416834 <wcrtomb@plt+0x11d44>
  416830:	blr	x8
  416834:	mov	w2, #0x5                   	// #5
  416838:	mov	x0, xzr
  41683c:	mov	x1, x20
  416840:	bl	4048b0 <dcgettext@plt>
  416844:	mov	x2, x0
  416848:	mov	w0, #0x1                   	// #1
  41684c:	mov	w1, wzr
  416850:	bl	403f60 <error@plt>
  416854:	str	w22, [x21, #2352]
  416858:	b	41681c <wcrtomb@plt+0x11d2c>
  41685c:	mov	w2, #0xa                   	// #10
  416860:	mov	x0, x19
  416864:	mov	x1, xzr
  416868:	mov	w3, wzr
  41686c:	bl	4043c0 <__strtoul_internal@plt>
  416870:	mov	x19, x0
  416874:	cmp	x0, #0x2
  416878:	b.cs	4169c4 <wcrtomb@plt+0x11ed4>  // b.hs, b.nlast
  41687c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416880:	ldr	x0, [sp, #8]
  416884:	cmp	w19, #0x1
  416888:	str	xzr, [sp, #72]
  41688c:	str	xzr, [sp, #48]
  416890:	b.ne	4168bc <wcrtomb@plt+0x11dcc>  // b.any
  416894:	ldr	x3, [x27, #1160]
  416898:	add	x0, sp, #0x48
  41689c:	add	x1, sp, #0x30
  4168a0:	mov	w2, #0xa                   	// #10
  4168a4:	bl	404a20 <__getdelim@plt>
  4168a8:	cmp	x0, #0x1
  4168ac:	b.lt	416c50 <wcrtomb@plt+0x12160>  // b.tstop
  4168b0:	ldr	x21, [sp, #72]
  4168b4:	mov	w20, #0x2                   	// #2
  4168b8:	b	4168d8 <wcrtomb@plt+0x11de8>
  4168bc:	bl	4044a0 <strdup@plt>
  4168c0:	mov	x21, x0
  4168c4:	str	x0, [sp, #72]
  4168c8:	bl	403f00 <strlen@plt>
  4168cc:	add	x8, x0, #0x1
  4168d0:	mov	w20, #0x1                   	// #1
  4168d4:	str	x8, [sp, #48]
  4168d8:	add	x1, sp, #0x18
  4168dc:	mov	x0, x21
  4168e0:	mov	w2, wzr
  4168e4:	bl	41bf84 <wcrtomb@plt+0x17494>
  4168e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4168ec:	add	x8, x8, #0xbd8
  4168f0:	stp	x0, x1, [x8]
  4168f4:	tbnz	x1, #63, 4170e8 <wcrtomb@plt+0x125f8>
  4168f8:	cmp	w19, #0x1
  4168fc:	b.ne	416c78 <wcrtomb@plt+0x12188>  // b.any
  416900:	ldr	x8, [sp, #24]
  416904:	ldrb	w9, [x8]
  416908:	cbz	w9, 416c78 <wcrtomb@plt+0x12188>
  41690c:	add	x23, x8, #0x1
  416910:	bl	4049c0 <__errno_location@plt>
  416914:	mov	x22, x0
  416918:	str	wzr, [x0]
  41691c:	add	x1, sp, #0x18
  416920:	mov	w2, #0xa                   	// #10
  416924:	mov	x0, x23
  416928:	mov	w3, wzr
  41692c:	bl	4043c0 <__strtoul_internal@plt>
  416930:	ldr	w21, [x22]
  416934:	mov	w8, #0xc9ff                	// #51711
  416938:	movk	w8, #0x3b9a, lsl #16
  41693c:	cmp	x0, x8
  416940:	b.ls	416c60 <wcrtomb@plt+0x12170>  // b.plast
  416944:	cbnz	w21, 416c60 <wcrtomb@plt+0x12170>
  416948:	mov	w21, #0x22                  	// #34
  41694c:	str	w21, [x22]
  416950:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416954:	ldr	x8, [x8, #4000]
  416958:	cbz	x8, 416964 <wcrtomb@plt+0x11e74>
  41695c:	blr	x8
  416960:	ldr	w21, [x22]
  416964:	ldr	x0, [x24, #3824]
  416968:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41696c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416970:	mov	x22, x0
  416974:	add	x1, x1, #0x9c7
  416978:	mov	w2, #0x5                   	// #5
  41697c:	mov	x0, xzr
  416980:	bl	4048b0 <dcgettext@plt>
  416984:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416988:	mov	x5, x0
  41698c:	add	x2, x2, #0x9bc
  416990:	mov	w0, wzr
  416994:	mov	w1, w21
  416998:	mov	x3, x22
  41699c:	mov	x4, x20
  4169a0:	bl	403f60 <error@plt>
  4169a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4169a8:	mov	w9, #0x2                   	// #2
  4169ac:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4169b0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4169b4:	mov	x0, #0xffffffffffffffff    	// #-1
  4169b8:	str	w9, [x8, #2352]
  4169bc:	str	x11, [x10, #3032]
  4169c0:	b	416c70 <wcrtomb@plt+0x12180>
  4169c4:	b.ne	416f2c <wcrtomb@plt+0x1243c>  // b.any
  4169c8:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  4169cc:	adrp	x4, 404000 <localtime_r@plt>
  4169d0:	add	x3, x3, #0x10
  4169d4:	add	x4, x4, #0x6b0
  4169d8:	add	x0, sp, #0x48
  4169dc:	mov	x1, xzr
  4169e0:	mov	x2, xzr
  4169e4:	bl	44ae4c <_obstack_begin@@Base>
  4169e8:	ldr	x0, [x27, #1160]
  4169ec:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4169f0:	add	x1, x1, #0xbd8
  4169f4:	bl	418398 <wcrtomb@plt+0x138a8>
  4169f8:	ldr	x0, [x27, #1160]
  4169fc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416a00:	add	x1, x1, #0x997
  416a04:	add	x4, sp, #0x28
  416a08:	mov	w3, #0x1                   	// #1
  416a0c:	mov	x2, xzr
  416a10:	bl	418464 <wcrtomb@plt+0x13974>
  416a14:	tbz	w0, #0, 416eec <wcrtomb@plt+0x123fc>
  416a18:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x1be3c>
  416a1c:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416a20:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416a24:	add	x26, x26, #0x97f
  416a28:	add	x20, x20, #0x9b8
  416a2c:	add	x21, x21, #0x997
  416a30:	b	416a5c <wcrtomb@plt+0x11f6c>
  416a34:	add	x0, sp, #0x48
  416a38:	mov	x1, x25
  416a3c:	bl	44b118 <_obstack_free@@Base>
  416a40:	ldr	x0, [x27, #1160]
  416a44:	add	x4, sp, #0x28
  416a48:	mov	w3, #0x1                   	// #1
  416a4c:	mov	x1, x21
  416a50:	mov	x2, xzr
  416a54:	bl	418464 <wcrtomb@plt+0x13974>
  416a58:	tbz	w0, #0, 416eec <wcrtomb@plt+0x123fc>
  416a5c:	ldr	x0, [x27, #1160]
  416a60:	ldr	x19, [sp, #40]
  416a64:	add	x1, sp, #0x18
  416a68:	bl	418398 <wcrtomb@plt+0x138a8>
  416a6c:	ldr	x0, [x27, #1160]
  416a70:	add	x4, sp, #0x28
  416a74:	mov	x3, #0xffffffffffffffff    	// #-1
  416a78:	mov	x1, x26
  416a7c:	mov	x2, xzr
  416a80:	bl	418464 <wcrtomb@plt+0x13974>
  416a84:	tbz	w0, #0, 417098 <wcrtomb@plt+0x125a8>
  416a88:	ldr	x0, [x27, #1160]
  416a8c:	ldr	x22, [sp, #40]
  416a90:	add	x4, sp, #0x28
  416a94:	mov	x3, #0xffffffffffffffff    	// #-1
  416a98:	mov	x1, x20
  416a9c:	mov	x2, xzr
  416aa0:	bl	418464 <wcrtomb@plt+0x13974>
  416aa4:	tbz	w0, #0, 417098 <wcrtomb@plt+0x125a8>
  416aa8:	ldr	x0, [x27, #1160]
  416aac:	ldr	x23, [sp, #40]
  416ab0:	add	x1, sp, #0x48
  416ab4:	add	x2, sp, #0x10
  416ab8:	bl	418808 <wcrtomb@plt+0x13d18>
  416abc:	cbnz	w0, 417098 <wcrtomb@plt+0x125a8>
  416ac0:	ldp	x24, x8, [sp, #88]
  416ac4:	cmp	x8, x24
  416ac8:	b.ne	416ad8 <wcrtomb@plt+0x11fe8>  // b.any
  416acc:	ldrb	w9, [sp, #152]
  416ad0:	orr	w9, w9, #0x2
  416ad4:	strb	w9, [sp, #152]
  416ad8:	ldr	x9, [sp, #120]
  416adc:	ldr	x10, [sp, #80]
  416ae0:	ldr	x11, [sp, #104]
  416ae4:	add	x8, x9, x8
  416ae8:	bic	x8, x8, x9
  416aec:	sub	x12, x11, x10
  416af0:	sub	x9, x8, x10
  416af4:	cmp	x9, x12
  416af8:	csel	x8, x11, x8, hi  // hi = pmore
  416afc:	stp	x8, x8, [sp, #88]
  416b00:	ldr	x0, [x27, #1160]
  416b04:	add	x1, sp, #0x48
  416b08:	add	x2, sp, #0x10
  416b0c:	bl	418808 <wcrtomb@plt+0x13d18>
  416b10:	cbnz	w0, 416b20 <wcrtomb@plt+0x12030>
  416b14:	ldr	x8, [sp, #16]
  416b18:	cmp	x8, #0x1
  416b1c:	b.hi	416b00 <wcrtomb@plt+0x12010>  // b.pmore
  416b20:	ldr	x0, [x27, #1160]
  416b24:	ldp	x8, x9, [x0, #8]
  416b28:	cmp	x8, x9
  416b2c:	b.cs	416bc4 <wcrtomb@plt+0x120d4>  // b.hs, b.nlast
  416b30:	add	x9, x8, #0x1
  416b34:	str	x9, [x0, #8]
  416b38:	ldrb	w0, [x8]
  416b3c:	cbnz	w0, 416bcc <wcrtomb@plt+0x120dc>
  416b40:	ldp	x25, x8, [sp, #88]
  416b44:	cmp	x8, x25
  416b48:	b.ne	416b58 <wcrtomb@plt+0x12068>  // b.any
  416b4c:	ldrb	w9, [sp, #152]
  416b50:	orr	w9, w9, #0x2
  416b54:	strb	w9, [sp, #152]
  416b58:	ldr	x9, [sp, #120]
  416b5c:	ldr	x10, [sp, #80]
  416b60:	ldr	x11, [sp, #104]
  416b64:	ldp	x1, x2, [sp, #24]
  416b68:	add	x8, x9, x8
  416b6c:	bic	x8, x8, x9
  416b70:	cmp	x19, #0x0
  416b74:	sub	x12, x11, x10
  416b78:	sub	x9, x8, x10
  416b7c:	cset	w5, ne  // ne = any
  416b80:	cmp	x9, x12
  416b84:	csel	x8, x11, x8, hi  // hi = pmore
  416b88:	mov	x0, x24
  416b8c:	mov	x3, x22
  416b90:	mov	x4, x23
  416b94:	mov	w6, wzr
  416b98:	mov	x7, x25
  416b9c:	stp	x8, x8, [sp, #88]
  416ba0:	bl	417e10 <wcrtomb@plt+0x13320>
  416ba4:	ldr	x8, [sp, #80]
  416ba8:	cmp	x25, x8
  416bac:	b.ls	416a34 <wcrtomb@plt+0x11f44>  // b.plast
  416bb0:	ldr	x8, [sp, #104]
  416bb4:	cmp	x25, x8
  416bb8:	b.cs	416a34 <wcrtomb@plt+0x11f44>  // b.hs, b.nlast
  416bbc:	stp	x25, x25, [sp, #88]
  416bc0:	b	416a40 <wcrtomb@plt+0x11f50>
  416bc4:	bl	404a70 <__uflow@plt>
  416bc8:	cbz	w0, 416b40 <wcrtomb@plt+0x12050>
  416bcc:	ldr	x8, [x28, #4000]
  416bd0:	cbz	x8, 416bd8 <wcrtomb@plt+0x120e8>
  416bd4:	blr	x8
  416bd8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416bdc:	add	x1, x1, #0xa47
  416be0:	mov	w2, #0x5                   	// #5
  416be4:	mov	x0, xzr
  416be8:	bl	4048b0 <dcgettext@plt>
  416bec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416bf0:	ldr	x8, [x8, #3824]
  416bf4:	mov	x19, x0
  416bf8:	mov	x0, x8
  416bfc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  416c00:	ldr	x8, [x27, #1160]
  416c04:	mov	x20, x0
  416c08:	mov	x0, x8
  416c0c:	bl	4047e0 <ftello@plt>
  416c10:	add	x1, sp, #0x30
  416c14:	bl	440200 <argp_parse@@Base+0x5b54>
  416c18:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416c1c:	mov	x21, x0
  416c20:	add	x1, x1, #0xa57
  416c24:	mov	w2, #0x5                   	// #5
  416c28:	mov	x0, xzr
  416c2c:	bl	4048b0 <dcgettext@plt>
  416c30:	mov	x5, x0
  416c34:	mov	w0, wzr
  416c38:	mov	w1, wzr
  416c3c:	mov	x2, x19
  416c40:	mov	x3, x20
  416c44:	mov	x4, x21
  416c48:	bl	403f60 <error@plt>
  416c4c:	bl	40eb40 <wcrtomb@plt+0xa050>
  416c50:	ldr	x0, [x24, #3824]
  416c54:	bl	42cd08 <wcrtomb@plt+0x28218>
  416c58:	ldr	x8, [sp, #72]
  416c5c:	b	416ee4 <wcrtomb@plt+0x123f4>
  416c60:	cbnz	w21, 416950 <wcrtomb@plt+0x11e60>
  416c64:	ldr	x8, [sp, #24]
  416c68:	cmp	x23, x8
  416c6c:	b.eq	416950 <wcrtomb@plt+0x11e60>  // b.none
  416c70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416c74:	str	x0, [x8, #3040]
  416c78:	ldr	x3, [x27, #1160]
  416c7c:	add	x0, sp, #0x48
  416c80:	add	x1, sp, #0x30
  416c84:	mov	w2, #0xa                   	// #10
  416c88:	bl	404a20 <__getdelim@plt>
  416c8c:	ldr	x8, [sp, #72]
  416c90:	cmp	w0, #0x1
  416c94:	b.lt	416ee4 <wcrtomb@plt+0x123f4>  // b.tstop
  416c98:	cmp	w19, #0x1
  416c9c:	b.ne	416dfc <wcrtomb@plt+0x1230c>  // b.any
  416ca0:	mov	w28, #0xc9ff                	// #51711
  416ca4:	movk	w28, #0x3b9a, lsl #16
  416ca8:	add	x19, x20, #0x1
  416cac:	sub	w9, w0, #0x1
  416cb0:	ldrb	w26, [x8]
  416cb4:	sxtw	x9, w9
  416cb8:	ldrb	w10, [x8, x9]
  416cbc:	cmp	w26, #0x2b
  416cc0:	cinc	x0, x8, eq  // eq = none
  416cc4:	cmp	w10, #0xa
  416cc8:	b.ne	416cd0 <wcrtomb@plt+0x121e0>  // b.any
  416ccc:	strb	wzr, [x8, x9]
  416cd0:	add	x1, sp, #0x18
  416cd4:	mov	w2, wzr
  416cd8:	bl	41bf84 <wcrtomb@plt+0x17494>
  416cdc:	tbnz	x1, #63, 416f6c <wcrtomb@plt+0x1247c>
  416ce0:	ldr	x24, [sp, #24]
  416ce4:	ldrb	w8, [x24]
  416ce8:	cmp	w8, #0x20
  416cec:	b.ne	416f6c <wcrtomb@plt+0x1247c>  // b.any
  416cf0:	mov	x21, x0
  416cf4:	bl	4049c0 <__errno_location@plt>
  416cf8:	mov	x20, x0
  416cfc:	str	wzr, [x0]
  416d00:	add	x1, sp, #0x18
  416d04:	mov	w2, #0xa                   	// #10
  416d08:	mov	x0, x24
  416d0c:	mov	w3, wzr
  416d10:	bl	4043c0 <__strtoul_internal@plt>
  416d14:	ldr	w23, [x20]
  416d18:	mov	x22, x0
  416d1c:	cmp	x0, x28
  416d20:	b.ls	416d28 <wcrtomb@plt+0x12238>  // b.plast
  416d24:	cbz	w23, 417034 <wcrtomb@plt+0x12544>
  416d28:	cbnz	w23, 41703c <wcrtomb@plt+0x1254c>
  416d2c:	ldr	x0, [sp, #24]
  416d30:	cmp	x24, x0
  416d34:	b.eq	41702c <wcrtomb@plt+0x1253c>  // b.none
  416d38:	ldrb	w8, [x0]
  416d3c:	cmp	w8, #0x20
  416d40:	b.ne	41702c <wcrtomb@plt+0x1253c>  // b.any
  416d44:	add	x1, sp, #0x18
  416d48:	mov	x3, #0xffffffffffffffff    	// #-1
  416d4c:	mov	x2, xzr
  416d50:	bl	41bc88 <wcrtomb@plt+0x17198>
  416d54:	ldr	w23, [x20]
  416d58:	cbnz	w23, 416fc8 <wcrtomb@plt+0x124d8>
  416d5c:	mov	x24, x0
  416d60:	ldr	x0, [sp, #24]
  416d64:	ldrb	w8, [x0]
  416d68:	cmp	w8, #0x20
  416d6c:	b.ne	416fc4 <wcrtomb@plt+0x124d4>  // b.any
  416d70:	add	x1, sp, #0x18
  416d74:	mov	x3, #0xffffffffffffffff    	// #-1
  416d78:	mov	x2, xzr
  416d7c:	bl	41bc88 <wcrtomb@plt+0x17198>
  416d80:	ldr	w23, [x20]
  416d84:	cbnz	w23, 416ffc <wcrtomb@plt+0x1250c>
  416d88:	ldr	x8, [sp, #24]
  416d8c:	ldrb	w9, [x8]
  416d90:	cmp	w9, #0x20
  416d94:	b.ne	416ff8 <wcrtomb@plt+0x12508>  // b.any
  416d98:	add	x23, x8, #0x1
  416d9c:	mov	x25, x0
  416da0:	cmp	w26, #0x2b
  416da4:	mov	x0, x23
  416da8:	cset	w20, eq  // eq = none
  416dac:	bl	41b6c0 <wcrtomb@plt+0x16bd0>
  416db0:	mov	x0, x23
  416db4:	mov	x1, x21
  416db8:	mov	x2, x22
  416dbc:	mov	x3, x24
  416dc0:	mov	x4, x25
  416dc4:	mov	w5, w20
  416dc8:	mov	w6, wzr
  416dcc:	mov	x7, xzr
  416dd0:	bl	417e10 <wcrtomb@plt+0x13320>
  416dd4:	ldr	x3, [x27, #1160]
  416dd8:	add	x0, sp, #0x48
  416ddc:	add	x1, sp, #0x30
  416de0:	mov	w2, #0xa                   	// #10
  416de4:	bl	404a20 <__getdelim@plt>
  416de8:	ldr	x8, [sp, #72]
  416dec:	cmp	w0, #0x0
  416df0:	add	x19, x19, #0x1
  416df4:	b.gt	416cac <wcrtomb@plt+0x121bc>
  416df8:	b	416ee4 <wcrtomb@plt+0x123f4>
  416dfc:	add	x19, x20, #0x1
  416e00:	sub	w9, w0, #0x1
  416e04:	ldrb	w24, [x8]
  416e08:	sxtw	x9, w9
  416e0c:	ldrb	w10, [x8, x9]
  416e10:	cmp	w24, #0x2b
  416e14:	cinc	x0, x8, eq  // eq = none
  416e18:	cmp	w10, #0xa
  416e1c:	b.ne	416e24 <wcrtomb@plt+0x12334>  // b.any
  416e20:	strb	wzr, [x8, x9]
  416e24:	add	x1, sp, #0x18
  416e28:	mov	x3, #0xffffffffffffffff    	// #-1
  416e2c:	mov	x2, xzr
  416e30:	bl	41bc88 <wcrtomb@plt+0x17198>
  416e34:	ldr	x22, [sp, #24]
  416e38:	mov	x21, x0
  416e3c:	bl	4049c0 <__errno_location@plt>
  416e40:	ldr	w23, [x0]
  416e44:	mov	x20, x0
  416e48:	cbnz	w23, 416fc8 <wcrtomb@plt+0x124d8>
  416e4c:	ldrb	w8, [x22]
  416e50:	cmp	w8, #0x20
  416e54:	b.ne	416fc4 <wcrtomb@plt+0x124d4>  // b.any
  416e58:	add	x1, sp, #0x18
  416e5c:	mov	x3, #0xffffffffffffffff    	// #-1
  416e60:	mov	x0, x22
  416e64:	mov	x2, xzr
  416e68:	bl	41bc88 <wcrtomb@plt+0x17198>
  416e6c:	ldr	w23, [x20]
  416e70:	cbnz	w23, 416ffc <wcrtomb@plt+0x1250c>
  416e74:	ldr	x8, [sp, #24]
  416e78:	ldrb	w9, [x8]
  416e7c:	cmp	w9, #0x20
  416e80:	b.ne	416ff8 <wcrtomb@plt+0x12508>  // b.any
  416e84:	add	x23, x8, #0x1
  416e88:	mov	x22, x0
  416e8c:	cmp	w24, #0x2b
  416e90:	mov	x0, x23
  416e94:	cset	w20, eq  // eq = none
  416e98:	bl	41b6c0 <wcrtomb@plt+0x16bd0>
  416e9c:	mov	x0, x23
  416ea0:	mov	x1, xzr
  416ea4:	mov	x2, xzr
  416ea8:	mov	x3, x21
  416eac:	mov	x4, x22
  416eb0:	mov	w5, w20
  416eb4:	mov	w6, wzr
  416eb8:	mov	x7, xzr
  416ebc:	bl	417e10 <wcrtomb@plt+0x13320>
  416ec0:	ldr	x3, [x27, #1160]
  416ec4:	add	x0, sp, #0x48
  416ec8:	add	x1, sp, #0x30
  416ecc:	mov	w2, #0xa                   	// #10
  416ed0:	bl	404a20 <__getdelim@plt>
  416ed4:	ldr	x8, [sp, #72]
  416ed8:	cmp	w0, #0x0
  416edc:	add	x19, x19, #0x1
  416ee0:	b.gt	416e00 <wcrtomb@plt+0x12310>
  416ee4:	mov	x0, x8
  416ee8:	bl	4046b0 <free@plt>
  416eec:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416ef0:	ldr	x8, [x27, #1160]
  416ef4:	ldrb	w8, [x8]
  416ef8:	tbz	w8, #5, 416f04 <wcrtomb@plt+0x12414>
  416efc:	ldr	x0, [x24, #3824]
  416f00:	bl	42cd08 <wcrtomb@plt+0x28218>
  416f04:	ldr	x0, [sp, #8]
  416f08:	bl	4046b0 <free@plt>
  416f0c:	ldp	x20, x19, [sp, #240]
  416f10:	ldp	x22, x21, [sp, #224]
  416f14:	ldp	x24, x23, [sp, #208]
  416f18:	ldp	x26, x25, [sp, #192]
  416f1c:	ldp	x28, x27, [sp, #176]
  416f20:	ldp	x29, x30, [sp, #160]
  416f24:	add	sp, sp, #0x100
  416f28:	ret
  416f2c:	ldr	x8, [x28, #4000]
  416f30:	cbz	x8, 416f38 <wcrtomb@plt+0x12448>
  416f34:	blr	x8
  416f38:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416f3c:	add	x1, x1, #0x8c6
  416f40:	mov	w2, #0x5                   	// #5
  416f44:	mov	x0, xzr
  416f48:	bl	4048b0 <dcgettext@plt>
  416f4c:	mov	x2, x0
  416f50:	mov	w0, #0x1                   	// #1
  416f54:	mov	w1, wzr
  416f58:	mov	x3, x19
  416f5c:	bl	403f60 <error@plt>
  416f60:	mov	w8, #0x2                   	// #2
  416f64:	str	w8, [x21, #2352]
  416f68:	b	416eec <wcrtomb@plt+0x123fc>
  416f6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416f70:	ldr	x8, [x8, #4000]
  416f74:	cbz	x8, 416f7c <wcrtomb@plt+0x1248c>
  416f78:	blr	x8
  416f7c:	bl	4049c0 <__errno_location@plt>
  416f80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416f84:	ldr	w20, [x0]
  416f88:	ldr	x0, [x8, #3824]
  416f8c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  416f90:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416f94:	mov	x21, x0
  416f98:	add	x1, x1, #0x9da
  416f9c:	mov	w2, #0x5                   	// #5
  416fa0:	mov	x0, xzr
  416fa4:	bl	4048b0 <dcgettext@plt>
  416fa8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416fac:	mov	x5, x0
  416fb0:	add	x2, x2, #0x9bc
  416fb4:	mov	w0, wzr
  416fb8:	mov	w1, w20
  416fbc:	mov	x3, x21
  416fc0:	b	41708c <wcrtomb@plt+0x1259c>
  416fc4:	mov	w23, wzr
  416fc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416fcc:	ldr	x8, [x8, #4000]
  416fd0:	cbz	x8, 416fdc <wcrtomb@plt+0x124ec>
  416fd4:	blr	x8
  416fd8:	ldr	w23, [x20]
  416fdc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  416fe0:	ldr	x0, [x8, #3824]
  416fe4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  416fe8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  416fec:	mov	x20, x0
  416ff0:	add	x1, x1, #0xa1c
  416ff4:	b	417068 <wcrtomb@plt+0x12578>
  416ff8:	mov	w23, wzr
  416ffc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417000:	ldr	x8, [x8, #4000]
  417004:	cbz	x8, 417010 <wcrtomb@plt+0x12520>
  417008:	blr	x8
  41700c:	ldr	w23, [x20]
  417010:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417014:	ldr	x0, [x8, #3824]
  417018:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41701c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417020:	mov	x20, x0
  417024:	add	x1, x1, #0xa32
  417028:	b	417068 <wcrtomb@plt+0x12578>
  41702c:	mov	w23, wzr
  417030:	b	41703c <wcrtomb@plt+0x1254c>
  417034:	mov	w23, #0x22                  	// #34
  417038:	str	w23, [x20]
  41703c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417040:	ldr	x8, [x8, #4000]
  417044:	cbz	x8, 417050 <wcrtomb@plt+0x12560>
  417048:	blr	x8
  41704c:	ldr	w23, [x20]
  417050:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417054:	ldr	x0, [x8, #3824]
  417058:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41705c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417060:	mov	x20, x0
  417064:	add	x1, x1, #0x9f4
  417068:	mov	w2, #0x5                   	// #5
  41706c:	mov	x0, xzr
  417070:	bl	4048b0 <dcgettext@plt>
  417074:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417078:	mov	x5, x0
  41707c:	add	x2, x2, #0x9bc
  417080:	mov	w0, wzr
  417084:	mov	w1, w23
  417088:	mov	x3, x20
  41708c:	mov	x4, x19
  417090:	bl	403f60 <error@plt>
  417094:	bl	40eb40 <wcrtomb@plt+0xa050>
  417098:	ldr	x8, [x28, #4000]
  41709c:	cbz	x8, 4170a4 <wcrtomb@plt+0x125b4>
  4170a0:	blr	x8
  4170a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4170a8:	ldr	x0, [x8, #3824]
  4170ac:	bl	448e5c <argp_parse@@Base+0xe7b0>
  4170b0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4170b4:	mov	x19, x0
  4170b8:	add	x1, x1, #0xa71
  4170bc:	mov	w2, #0x5                   	// #5
  4170c0:	mov	x0, xzr
  4170c4:	bl	4048b0 <dcgettext@plt>
  4170c8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  4170cc:	mov	x4, x0
  4170d0:	add	x2, x2, #0x140
  4170d4:	mov	w0, wzr
  4170d8:	mov	w1, wzr
  4170dc:	mov	x3, x19
  4170e0:	bl	403f60 <error@plt>
  4170e4:	bl	40eb40 <wcrtomb@plt+0xa050>
  4170e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4170ec:	ldr	x8, [x8, #4000]
  4170f0:	cbz	x8, 4170f8 <wcrtomb@plt+0x12608>
  4170f4:	blr	x8
  4170f8:	bl	4049c0 <__errno_location@plt>
  4170fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417100:	ldr	w19, [x0]
  417104:	ldr	x0, [x8, #3824]
  417108:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41710c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417110:	mov	x21, x0
  417114:	add	x1, x1, #0x9c7
  417118:	mov	w2, #0x5                   	// #5
  41711c:	mov	x0, xzr
  417120:	bl	4048b0 <dcgettext@plt>
  417124:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417128:	mov	x5, x0
  41712c:	add	x2, x2, #0x9bc
  417130:	mov	w0, wzr
  417134:	mov	w1, w19
  417138:	mov	x3, x21
  41713c:	mov	x4, x20
  417140:	bl	403f60 <error@plt>
  417144:	bl	40eb40 <wcrtomb@plt+0xa050>
  417148:	sub	sp, sp, #0x50
  41714c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417150:	stp	x20, x19, [sp, #64]
  417154:	ldr	x19, [x8, #1160]
  417158:	stp	x29, x30, [sp, #32]
  41715c:	stp	x22, x21, [sp, #48]
  417160:	add	x29, sp, #0x20
  417164:	cbz	x19, 417270 <wcrtomb@plt+0x12780>
  417168:	mov	x0, x19
  41716c:	mov	x1, xzr
  417170:	mov	w2, wzr
  417174:	bl	404680 <fseeko@plt>
  417178:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41717c:	cbz	w0, 417188 <wcrtomb@plt+0x12698>
  417180:	ldr	x0, [x21, #3824]
  417184:	bl	42d214 <wcrtomb@plt+0x28724>
  417188:	mov	x0, x19
  41718c:	bl	404130 <fileno@plt>
  417190:	bl	42338c <wcrtomb@plt+0x1e89c>
  417194:	cbz	w0, 4171a0 <wcrtomb@plt+0x126b0>
  417198:	ldr	x0, [x21, #3824]
  41719c:	bl	42d5dc <wcrtomb@plt+0x28aec>
  4171a0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4171a4:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4171a8:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4171ac:	add	x2, x2, #0x8f2
  4171b0:	add	x3, x3, #0x8a2
  4171b4:	add	x4, x4, #0x8fc
  4171b8:	mov	w1, #0x1                   	// #1
  4171bc:	mov	w5, #0x2                   	// #2
  4171c0:	mov	x0, x19
  4171c4:	bl	404600 <__fprintf_chk@plt>
  4171c8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4171cc:	add	x22, x22, #0xe78
  4171d0:	ldr	x0, [x22]
  4171d4:	add	x1, sp, #0x8
  4171d8:	bl	440170 <argp_parse@@Base+0x5ac4>
  4171dc:	mov	x20, x0
  4171e0:	bl	403f00 <strlen@plt>
  4171e4:	add	x1, x0, #0x1
  4171e8:	mov	w2, #0x1                   	// #1
  4171ec:	mov	x0, x20
  4171f0:	mov	x3, x19
  4171f4:	bl	403ee0 <fwrite_unlocked@plt>
  4171f8:	ldr	x0, [x22, #8]
  4171fc:	add	x1, sp, #0x8
  417200:	bl	440290 <argp_parse@@Base+0x5be4>
  417204:	mov	x20, x0
  417208:	bl	403f00 <strlen@plt>
  41720c:	add	x1, x0, #0x1
  417210:	mov	w2, #0x1                   	// #1
  417214:	mov	x0, x20
  417218:	mov	x3, x19
  41721c:	bl	403ee0 <fwrite_unlocked@plt>
  417220:	ldr	w9, [x19]
  417224:	and	w8, w9, #0x20
  417228:	tbnz	w9, #5, 417250 <wcrtomb@plt+0x12760>
  41722c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417230:	ldr	x0, [x9, #1128]
  417234:	cbz	x0, 417250 <wcrtomb@plt+0x12760>
  417238:	adrp	x1, 417000 <wcrtomb@plt+0x12510>
  41723c:	add	x1, x1, #0x284
  417240:	mov	x2, x19
  417244:	bl	43ea68 <argp_parse@@Base+0x43bc>
  417248:	ldr	w8, [x19]
  41724c:	and	w8, w8, #0x20
  417250:	cbz	w8, 41725c <wcrtomb@plt+0x1276c>
  417254:	ldr	x0, [x21, #3824]
  417258:	bl	42d860 <wcrtomb@plt+0x28d70>
  41725c:	mov	x0, x19
  417260:	bl	4041a0 <fclose@plt>
  417264:	cbz	w0, 417270 <wcrtomb@plt+0x12780>
  417268:	ldr	x0, [x21, #3824]
  41726c:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  417270:	ldp	x20, x19, [sp, #64]
  417274:	ldp	x22, x21, [sp, #48]
  417278:	ldp	x29, x30, [sp, #32]
  41727c:	add	sp, sp, #0x50
  417280:	ret
  417284:	sub	sp, sp, #0x60
  417288:	stp	x29, x30, [sp, #32]
  41728c:	stp	x22, x21, [sp, #64]
  417290:	stp	x20, x19, [sp, #80]
  417294:	ldr	w8, [x0, #60]
  417298:	mov	x19, x1
  41729c:	str	x23, [sp, #48]
  4172a0:	add	x29, sp, #0x20
  4172a4:	tbz	w8, #2, 417480 <wcrtomb@plt+0x12990>
  4172a8:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x19e3c>
  4172ac:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4172b0:	add	x9, x9, #0x3ed
  4172b4:	add	x10, x10, #0xe98
  4172b8:	tst	w8, #0x2
  4172bc:	ldp	x8, x11, [x19, #40]
  4172c0:	csel	x21, x10, x9, eq  // eq = none
  4172c4:	ldrb	w1, [x21]
  4172c8:	mov	x20, x0
  4172cc:	cmp	x8, x11
  4172d0:	b.cs	4174a4 <wcrtomb@plt+0x129b4>  // b.hs, b.nlast
  4172d4:	add	x9, x8, #0x1
  4172d8:	str	x9, [x19, #40]
  4172dc:	strb	w1, [x8]
  4172e0:	ldp	x8, x9, [x19, #40]
  4172e4:	ldrb	w1, [x21, #1]
  4172e8:	cmp	x8, x9
  4172ec:	b.cs	4174b8 <wcrtomb@plt+0x129c8>  // b.hs, b.nlast
  4172f0:	add	x9, x8, #0x1
  4172f4:	str	x9, [x19, #40]
  4172f8:	strb	w1, [x8]
  4172fc:	ldr	x0, [x20, #8]
  417300:	add	x3, sp, #0x8
  417304:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  417308:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41730c:	bl	41bc74 <wcrtomb@plt+0x17184>
  417310:	mov	x21, x0
  417314:	bl	403f00 <strlen@plt>
  417318:	add	x1, x0, #0x1
  41731c:	mov	w2, #0x1                   	// #1
  417320:	mov	x0, x21
  417324:	mov	x3, x19
  417328:	bl	403ee0 <fwrite_unlocked@plt>
  41732c:	ldr	x0, [x20, #16]
  417330:	add	x1, sp, #0x8
  417334:	bl	440170 <argp_parse@@Base+0x5ac4>
  417338:	mov	x21, x0
  41733c:	bl	403f00 <strlen@plt>
  417340:	add	x1, x0, #0x1
  417344:	mov	w2, #0x1                   	// #1
  417348:	mov	x0, x21
  41734c:	mov	x3, x19
  417350:	bl	403ee0 <fwrite_unlocked@plt>
  417354:	ldr	x0, [x20, #24]
  417358:	add	x3, sp, #0x8
  41735c:	mov	x2, #0xffffffffffffffff    	// #-1
  417360:	mov	x1, xzr
  417364:	bl	41bc74 <wcrtomb@plt+0x17184>
  417368:	mov	x21, x0
  41736c:	bl	403f00 <strlen@plt>
  417370:	add	x1, x0, #0x1
  417374:	mov	w2, #0x1                   	// #1
  417378:	mov	x0, x21
  41737c:	mov	x3, x19
  417380:	bl	403ee0 <fwrite_unlocked@plt>
  417384:	ldr	x0, [x20, #32]
  417388:	add	x3, sp, #0x8
  41738c:	mov	x2, #0xffffffffffffffff    	// #-1
  417390:	mov	x1, xzr
  417394:	bl	41bc74 <wcrtomb@plt+0x17184>
  417398:	mov	x21, x0
  41739c:	bl	403f00 <strlen@plt>
  4173a0:	add	x1, x0, #0x1
  4173a4:	mov	w2, #0x1                   	// #1
  4173a8:	mov	x0, x21
  4173ac:	mov	x3, x19
  4173b0:	bl	403ee0 <fwrite_unlocked@plt>
  4173b4:	ldr	x21, [x20, #88]
  4173b8:	mov	x0, x21
  4173bc:	bl	403f00 <strlen@plt>
  4173c0:	add	x1, x0, #0x1
  4173c4:	mov	w2, #0x1                   	// #1
  4173c8:	mov	x0, x21
  4173cc:	mov	x3, x19
  4173d0:	bl	403ee0 <fwrite_unlocked@plt>
  4173d4:	ldr	x22, [x20, #40]
  4173d8:	cbz	x22, 417450 <wcrtomb@plt+0x12960>
  4173dc:	mov	w0, #0x18                  	// #24
  4173e0:	bl	44a010 <argp_parse@@Base+0xf964>
  4173e4:	str	x22, [x0]
  4173e8:	str	wzr, [x0, #8]
  4173ec:	str	xzr, [x0, #16]
  4173f0:	ldr	x8, [x22, #16]
  4173f4:	mov	x20, x0
  4173f8:	cbz	x8, 417448 <wcrtomb@plt+0x12958>
  4173fc:	ldr	x8, [x22, #24]
  417400:	mov	w23, #0x1                   	// #1
  417404:	ldr	x8, [x8]
  417408:	sub	x21, x8, #0x1
  41740c:	mov	x0, x21
  417410:	str	x23, [x20, #16]
  417414:	bl	403f00 <strlen@plt>
  417418:	add	x1, x0, #0x1
  41741c:	mov	w2, #0x1                   	// #1
  417420:	mov	x0, x21
  417424:	mov	x3, x19
  417428:	bl	403ee0 <fwrite_unlocked@plt>
  41742c:	ldr	x8, [x22, #16]
  417430:	cmp	x23, x8
  417434:	b.cs	417448 <wcrtomb@plt+0x12958>  // b.hs, b.nlast
  417438:	ldr	x8, [x22, #24]
  41743c:	ldr	x8, [x8, x23, lsl #3]
  417440:	add	x23, x23, #0x1
  417444:	b	417408 <wcrtomb@plt+0x12918>
  417448:	mov	x0, x20
  41744c:	bl	4046b0 <free@plt>
  417450:	ldp	x8, x9, [x19, #40]
  417454:	cmp	x8, x9
  417458:	b.cs	4174c4 <wcrtomb@plt+0x129d4>  // b.hs, b.nlast
  41745c:	add	x9, x8, #0x1
  417460:	str	x9, [x19, #40]
  417464:	strb	wzr, [x8]
  417468:	ldp	x8, x9, [x19, #40]
  41746c:	cmp	x8, x9
  417470:	b.cs	4174dc <wcrtomb@plt+0x129ec>  // b.hs, b.nlast
  417474:	add	x9, x8, #0x1
  417478:	str	x9, [x19, #40]
  41747c:	strb	wzr, [x8]
  417480:	ldrb	w8, [x19]
  417484:	ldp	x20, x19, [sp, #80]
  417488:	ldp	x22, x21, [sp, #64]
  41748c:	ldr	x23, [sp, #48]
  417490:	ldp	x29, x30, [sp, #32]
  417494:	tst	w8, #0x20
  417498:	cset	w0, eq  // eq = none
  41749c:	add	sp, sp, #0x60
  4174a0:	ret
  4174a4:	mov	x0, x19
  4174a8:	bl	404590 <__overflow@plt>
  4174ac:	cmn	w0, #0x1
  4174b0:	b.ne	4172e0 <wcrtomb@plt+0x127f0>  // b.any
  4174b4:	b	4172fc <wcrtomb@plt+0x1280c>
  4174b8:	mov	x0, x19
  4174bc:	bl	404590 <__overflow@plt>
  4174c0:	b	4172fc <wcrtomb@plt+0x1280c>
  4174c4:	mov	x0, x19
  4174c8:	mov	w1, wzr
  4174cc:	bl	404590 <__overflow@plt>
  4174d0:	cmn	w0, #0x1
  4174d4:	b.ne	417468 <wcrtomb@plt+0x12978>  // b.any
  4174d8:	b	417480 <wcrtomb@plt+0x12990>
  4174dc:	mov	x0, x19
  4174e0:	mov	w1, wzr
  4174e4:	bl	404590 <__overflow@plt>
  4174e8:	b	417480 <wcrtomb@plt+0x12990>
  4174ec:	stp	x29, x30, [sp, #-96]!
  4174f0:	stp	x28, x27, [sp, #16]
  4174f4:	stp	x26, x25, [sp, #32]
  4174f8:	stp	x24, x23, [sp, #48]
  4174fc:	stp	x22, x21, [sp, #64]
  417500:	stp	x20, x19, [sp, #80]
  417504:	ldrb	w8, [x0, #376]
  417508:	mov	x29, sp
  41750c:	cbz	w8, 417524 <wcrtomb@plt+0x12a34>
  417510:	ldr	x8, [x0, #384]
  417514:	mov	x19, x0
  417518:	cbz	x8, 41752c <wcrtomb@plt+0x12a3c>
  41751c:	mov	w0, #0x1                   	// #1
  417520:	b	417610 <wcrtomb@plt+0x12b20>
  417524:	mov	w0, wzr
  417528:	b	417610 <wcrtomb@plt+0x12b20>
  41752c:	ldr	x20, [x19, #136]
  417530:	mov	x0, x20
  417534:	bl	44a010 <argp_parse@@Base+0xf964>
  417538:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41753c:	ldr	x8, [x8, #2968]
  417540:	mov	x21, x0
  417544:	mov	x0, x8
  417548:	bl	405640 <wcrtomb@plt+0xb50>
  41754c:	mov	x0, x19
  417550:	bl	404ca8 <wcrtomb@plt+0x1b8>
  417554:	cbz	x20, 4175f4 <wcrtomb@plt+0x12b04>
  417558:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41755c:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417560:	add	x22, x22, #0x818
  417564:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417568:	mov	w28, #0x2                   	// #2
  41756c:	mov	x23, x21
  417570:	b	4175d0 <wcrtomb@plt+0x12ae0>
  417574:	mov	w2, #0x5                   	// #5
  417578:	mov	x0, xzr
  41757c:	mov	x1, x22
  417580:	bl	4048b0 <dcgettext@plt>
  417584:	mov	x2, x0
  417588:	mov	w0, #0x1                   	// #1
  41758c:	mov	w1, wzr
  417590:	bl	403f60 <error@plt>
  417594:	str	w28, [x27, #2352]
  417598:	mov	x0, x24
  41759c:	bl	405684 <wcrtomb@plt+0xb94>
  4175a0:	cmp	x0, x20
  4175a4:	csel	x25, x20, x0, hi  // hi = pmore
  4175a8:	mov	x0, x23
  4175ac:	mov	x1, x24
  4175b0:	mov	x2, x25
  4175b4:	bl	403e80 <memcpy@plt>
  4175b8:	add	x8, x24, x25
  4175bc:	sub	x0, x8, #0x1
  4175c0:	add	x23, x23, x25
  4175c4:	bl	405640 <wcrtomb@plt+0xb50>
  4175c8:	subs	x20, x20, x25
  4175cc:	b.eq	4175f4 <wcrtomb@plt+0x12b04>  // b.none
  4175d0:	mov	x0, x20
  4175d4:	bl	404d8c <wcrtomb@plt+0x29c>
  4175d8:	bl	405310 <wcrtomb@plt+0x820>
  4175dc:	mov	x24, x0
  4175e0:	cbnz	x0, 417598 <wcrtomb@plt+0x12aa8>
  4175e4:	ldr	x8, [x26, #4000]
  4175e8:	cbz	x8, 417574 <wcrtomb@plt+0x12a84>
  4175ec:	blr	x8
  4175f0:	b	417574 <wcrtomb@plt+0x12a84>
  4175f4:	bl	404d34 <wcrtomb@plt+0x244>
  4175f8:	ldrb	w8, [x19, #376]
  4175fc:	mov	w9, #0x1                   	// #1
  417600:	str	x21, [x19, #384]
  417604:	strb	w9, [x19, #377]
  417608:	cmp	w8, #0x0
  41760c:	cset	w0, ne  // ne = any
  417610:	ldp	x20, x19, [sp, #80]
  417614:	ldp	x22, x21, [sp, #64]
  417618:	ldp	x24, x23, [sp, #48]
  41761c:	ldp	x26, x25, [sp, #32]
  417620:	ldp	x28, x27, [sp, #16]
  417624:	ldp	x29, x30, [sp], #96
  417628:	ret
  41762c:	sub	sp, sp, #0xf0
  417630:	stp	x20, x19, [sp, #224]
  417634:	mov	x20, x0
  417638:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41763c:	add	x0, x0, #0xc10
  417640:	stp	x29, x30, [sp, #144]
  417644:	stp	x28, x27, [sp, #160]
  417648:	stp	x26, x25, [sp, #176]
  41764c:	stp	x24, x23, [sp, #192]
  417650:	stp	x22, x21, [sp, #208]
  417654:	add	x29, sp, #0x90
  417658:	bl	4174ec <wcrtomb@plt+0x129fc>
  41765c:	tbz	w0, #0, 417ccc <wcrtomb@plt+0x131dc>
  417660:	mov	x0, x20
  417664:	mov	w1, wzr
  417668:	bl	41c494 <wcrtomb@plt+0x179a4>
  41766c:	cbz	x0, 417ccc <wcrtomb@plt+0x131dc>
  417670:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417674:	ldr	x21, [x26, #3472]
  417678:	mov	x19, x0
  41767c:	ldrb	w8, [x21]
  417680:	cbz	w8, 417720 <wcrtomb@plt+0x12c30>
  417684:	mov	w9, wzr
  417688:	mov	w22, wzr
  41768c:	mov	w25, wzr
  417690:	mov	x23, x21
  417694:	b	4176c0 <wcrtomb@plt+0x12bd0>
  417698:	ldrb	w8, [x23, #1]
  41769c:	cbz	w8, 417714 <wcrtomb@plt+0x12c24>
  4176a0:	mov	w22, #0x54                  	// #84
  4176a4:	mov	x0, x23
  4176a8:	bl	403f00 <strlen@plt>
  4176ac:	add	x23, x0, x23
  4176b0:	ldrb	w8, [x23, #1]!
  4176b4:	cmp	w22, #0x0
  4176b8:	cset	w9, ne  // ne = any
  4176bc:	cbz	w8, 417afc <wcrtomb@plt+0x1300c>
  4176c0:	tbz	w9, #0, 4176d0 <wcrtomb@plt+0x12be0>
  4176c4:	and	w24, w8, #0xff
  4176c8:	cmp	w22, w24
  4176cc:	b.ne	417b3c <wcrtomb@plt+0x1304c>  // b.any
  4176d0:	and	w8, w8, #0xff
  4176d4:	cmp	w8, #0x52
  4176d8:	b.eq	417698 <wcrtomb@plt+0x12ba8>  // b.none
  4176dc:	cmp	w8, #0x54
  4176e0:	b.eq	4176f8 <wcrtomb@plt+0x12c08>  // b.none
  4176e4:	cmp	w8, #0x58
  4176e8:	b.ne	4176a4 <wcrtomb@plt+0x12bb4>  // b.any
  4176ec:	cbnz	w25, 417c54 <wcrtomb@plt+0x13164>
  4176f0:	mov	w25, #0x1                   	// #1
  4176f4:	b	4176a4 <wcrtomb@plt+0x12bb4>
  4176f8:	cmp	w22, #0x54
  4176fc:	b.ne	417b7c <wcrtomb@plt+0x1308c>  // b.any
  417700:	mov	w22, wzr
  417704:	cbnz	w25, 4176a4 <wcrtomb@plt+0x12bb4>
  417708:	ldrb	w8, [x23, #1]
  41770c:	cbnz	w8, 4176a4 <wcrtomb@plt+0x12bb4>
  417710:	b	417c70 <wcrtomb@plt+0x13180>
  417714:	cbz	w25, 417c8c <wcrtomb@plt+0x1319c>
  417718:	mov	w25, wzr
  41771c:	b	4176a0 <wcrtomb@plt+0x12bb0>
  417720:	str	x19, [sp, #8]
  417724:	mov	w28, #0x5858                	// #22616
  417728:	adrp	x25, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41772c:	mov	x22, xzr
  417730:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417734:	mov	w27, #0x2f                  	// #47
  417738:	movk	w28, #0x58, lsl #16
  41773c:	add	x25, x25, #0xb21
  417740:	b	4177a0 <wcrtomb@plt+0x12cb0>
  417744:	add	x23, x21, #0x1
  417748:	mov	x0, x23
  41774c:	bl	403f00 <strlen@plt>
  417750:	mov	x24, x0
  417754:	add	x1, x0, #0xc
  417758:	mov	x0, x22
  41775c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  417760:	mov	x1, x23
  417764:	mov	x2, x24
  417768:	mov	x22, x0
  41776c:	bl	403e80 <memcpy@plt>
  417770:	ldr	x8, [x25]
  417774:	add	x9, x22, x24
  417778:	mov	x0, x22
  41777c:	strb	w27, [x9]
  417780:	str	w28, [x9, #8]
  417784:	stur	x8, [x9, #1]
  417788:	bl	404550 <mkdtemp@plt>
  41778c:	cbz	x0, 417b98 <wcrtomb@plt+0x130a8>
  417790:	mov	x0, x21
  417794:	bl	403f00 <strlen@plt>
  417798:	add	x8, x0, x21
  41779c:	add	x21, x8, #0x1
  4177a0:	ldrb	w8, [x21]
  4177a4:	cmp	w8, #0x52
  4177a8:	b.eq	4177bc <wcrtomb@plt+0x12ccc>  // b.none
  4177ac:	cmp	w8, #0x58
  4177b0:	b.eq	417744 <wcrtomb@plt+0x12c54>  // b.none
  4177b4:	cbnz	w8, 417790 <wcrtomb@plt+0x12ca0>
  4177b8:	b	41784c <wcrtomb@plt+0x12d5c>
  4177bc:	mov	x0, x21
  4177c0:	bl	403f00 <strlen@plt>
  4177c4:	add	x19, x0, x21
  4177c8:	ldrb	w8, [x21, #1]!
  4177cc:	add	x23, x19, #0x2
  4177d0:	mov	x24, x21
  4177d4:	cbz	w8, 4177ec <wcrtomb@plt+0x12cfc>
  4177d8:	ldrb	w2, [x26, #3944]
  4177dc:	mov	x0, x24
  4177e0:	mov	w1, wzr
  4177e4:	bl	42da24 <wcrtomb@plt+0x28f34>
  4177e8:	mov	x24, x0
  4177ec:	ldrb	w8, [x23]
  4177f0:	cbz	w8, 417808 <wcrtomb@plt+0x12d18>
  4177f4:	ldrb	w2, [x26, #3944]
  4177f8:	mov	x0, x23
  4177fc:	mov	w1, wzr
  417800:	bl	42da24 <wcrtomb@plt+0x28f34>
  417804:	mov	x23, x0
  417808:	ldrb	w8, [x24]
  41780c:	add	x21, x19, #0x1
  417810:	cbz	w8, 417834 <wcrtomb@plt+0x12d44>
  417814:	ldrb	w8, [x23]
  417818:	cmp	w8, #0x0
  41781c:	csel	x23, x22, x23, eq  // eq = none
  417820:	mov	x0, x24
  417824:	mov	x1, x23
  417828:	bl	40fe0c <wcrtomb@plt+0xb31c>
  41782c:	tbnz	w0, #0, 417790 <wcrtomb@plt+0x12ca0>
  417830:	b	417bf0 <wcrtomb@plt+0x13100>
  417834:	mov	x24, x22
  417838:	mov	x0, x24
  41783c:	mov	x1, x23
  417840:	bl	40fe0c <wcrtomb@plt+0xb31c>
  417844:	tbnz	w0, #0, 417790 <wcrtomb@plt+0x12ca0>
  417848:	b	417bf0 <wcrtomb@plt+0x13100>
  41784c:	mov	x0, x22
  417850:	bl	4046b0 <free@plt>
  417854:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417858:	ldr	x0, [x8, #3472]
  41785c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417860:	add	x1, x1, #0x993
  417864:	bl	418084 <wcrtomb@plt+0x13594>
  417868:	ldr	x28, [sp, #8]
  41786c:	mov	x21, x0
  417870:	mov	x22, xzr
  417874:	ldrb	w8, [x28]
  417878:	cbz	w8, 417abc <wcrtomb@plt+0x12fcc>
  41787c:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417880:	b	4178cc <wcrtomb@plt+0x12ddc>
  417884:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417888:	mov	w2, #0x5                   	// #5
  41788c:	mov	x0, xzr
  417890:	add	x1, x1, #0xb60
  417894:	bl	4048b0 <dcgettext@plt>
  417898:	mov	x23, x0
  41789c:	mov	x0, x22
  4178a0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  4178a4:	mov	x3, x0
  4178a8:	mov	w0, wzr
  4178ac:	mov	w1, wzr
  4178b0:	mov	x2, x23
  4178b4:	bl	403f60 <error@plt>
  4178b8:	mov	x0, x28
  4178bc:	bl	403f00 <strlen@plt>
  4178c0:	add	x28, x0, x28
  4178c4:	ldrb	w8, [x28, #1]!
  4178c8:	cbz	w8, 417abc <wcrtomb@plt+0x12fcc>
  4178cc:	mov	x0, x22
  4178d0:	bl	4046b0 <free@plt>
  4178d4:	mov	x0, x20
  4178d8:	mov	x1, x28
  4178dc:	bl	41f9fc <wcrtomb@plt+0x1af0c>
  4178e0:	add	x1, sp, #0x10
  4178e4:	mov	x22, x0
  4178e8:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  4178ec:	cbz	w0, 417918 <wcrtomb@plt+0x12e28>
  4178f0:	bl	4049c0 <__errno_location@plt>
  4178f4:	ldr	w8, [x0]
  4178f8:	cmp	w8, #0x2
  4178fc:	b.eq	4178b8 <wcrtomb@plt+0x12dc8>  // b.none
  417900:	mov	x0, x22
  417904:	bl	41d008 <wcrtomb@plt+0x18518>
  417908:	ldr	x8, [x27, #4000]
  41790c:	cbz	x8, 417884 <wcrtomb@plt+0x12d94>
  417910:	blr	x8
  417914:	b	417884 <wcrtomb@plt+0x12d94>
  417918:	cbz	x21, 4179a0 <wcrtomb@plt+0x12eb0>
  41791c:	ldr	x25, [x21, #16]
  417920:	cbz	x25, 4179a0 <wcrtomb@plt+0x12eb0>
  417924:	ldr	x19, [x21, #24]
  417928:	mov	x26, xzr
  41792c:	b	41793c <wcrtomb@plt+0x12e4c>
  417930:	cmp	x26, x24
  417934:	mov	x25, x24
  417938:	b.cs	4179a0 <wcrtomb@plt+0x12eb0>  // b.hs, b.nlast
  41793c:	add	x8, x25, x26
  417940:	lsr	x24, x8, #1
  417944:	ldr	x23, [x19, x24, lsl #3]
  417948:	mov	x0, x28
  41794c:	mov	x1, x23
  417950:	bl	404610 <strcmp@plt>
  417954:	tbnz	w0, #31, 417930 <wcrtomb@plt+0x12e40>
  417958:	cbz	w0, 417968 <wcrtomb@plt+0x12e78>
  41795c:	add	x26, x24, #0x1
  417960:	mov	x24, x25
  417964:	b	417930 <wcrtomb@plt+0x12e40>
  417968:	ldurb	w8, [x23, #-1]
  41796c:	cmp	w8, #0x59
  417970:	b.eq	417990 <wcrtomb@plt+0x12ea0>  // b.none
  417974:	cmp	w8, #0x44
  417978:	b.ne	4178b8 <wcrtomb@plt+0x12dc8>  // b.any
  41797c:	ldr	w8, [sp, #32]
  417980:	and	w8, w8, #0xf000
  417984:	cmp	w8, #0x4, lsl #12
  417988:	b.eq	4178b8 <wcrtomb@plt+0x12dc8>  // b.none
  41798c:	b	4179a0 <wcrtomb@plt+0x12eb0>
  417990:	ldr	w8, [sp, #32]
  417994:	and	w8, w8, #0xf000
  417998:	cmp	w8, #0x4, lsl #12
  41799c:	b.ne	4178b8 <wcrtomb@plt+0x12dc8>  // b.any
  4179a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4179a4:	ldrb	w8, [x8, #3077]
  4179a8:	cbz	w8, 4179c0 <wcrtomb@plt+0x12ed0>
  4179ac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4179b0:	ldr	x8, [sp, #16]
  4179b4:	ldr	x9, [x9, #3816]
  4179b8:	cmp	x8, x9
  4179bc:	b.ne	417a9c <wcrtomb@plt+0x12fac>  // b.any
  4179c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4179c4:	ldrb	w8, [x8, #3584]
  4179c8:	cbz	w8, 4179e0 <wcrtomb@plt+0x12ef0>
  4179cc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4179d0:	add	x0, x0, #0x596
  4179d4:	mov	x1, x22
  4179d8:	bl	424888 <wcrtomb@plt+0x1fd98>
  4179dc:	cbz	w0, 4178b8 <wcrtomb@plt+0x12dc8>
  4179e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4179e4:	ldr	w8, [x8, #3636]
  4179e8:	cbz	w8, 417a34 <wcrtomb@plt+0x12f44>
  4179ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4179f0:	ldr	x23, [x8, #2824]
  4179f4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4179f8:	mov	w2, #0x5                   	// #5
  4179fc:	mov	x0, xzr
  417a00:	add	x1, x1, #0xbbe
  417a04:	bl	4048b0 <dcgettext@plt>
  417a08:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417a0c:	ldr	x26, [x8, #2440]
  417a10:	mov	x24, x0
  417a14:	mov	x0, x22
  417a18:	bl	449144 <argp_parse@@Base+0xea98>
  417a1c:	mov	x4, x0
  417a20:	mov	w1, #0x1                   	// #1
  417a24:	mov	x0, x23
  417a28:	mov	x2, x24
  417a2c:	mov	x3, x26
  417a30:	bl	404600 <__fprintf_chk@plt>
  417a34:	mov	w1, #0x1                   	// #1
  417a38:	mov	x0, x22
  417a3c:	bl	41c240 <wcrtomb@plt+0x17750>
  417a40:	cbnz	w0, 4178b8 <wcrtomb@plt+0x12dc8>
  417a44:	bl	4049c0 <__errno_location@plt>
  417a48:	ldr	x8, [x27, #4000]
  417a4c:	ldr	w23, [x0]
  417a50:	cbz	x8, 417a58 <wcrtomb@plt+0x12f68>
  417a54:	blr	x8
  417a58:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417a5c:	mov	w2, #0x5                   	// #5
  417a60:	mov	x0, xzr
  417a64:	add	x1, x1, #0xbcf
  417a68:	bl	4048b0 <dcgettext@plt>
  417a6c:	mov	x24, x0
  417a70:	mov	x0, x22
  417a74:	bl	448e5c <argp_parse@@Base+0xe7b0>
  417a78:	mov	x3, x0
  417a7c:	mov	w0, wzr
  417a80:	mov	w1, w23
  417a84:	mov	x2, x24
  417a88:	bl	403f60 <error@plt>
  417a8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417a90:	mov	w9, #0x2                   	// #2
  417a94:	str	w9, [x8, #2352]
  417a98:	b	4178b8 <wcrtomb@plt+0x12dc8>
  417a9c:	ldr	x8, [x27, #4000]
  417aa0:	cbz	x8, 417aa8 <wcrtomb@plt+0x12fb8>
  417aa4:	blr	x8
  417aa8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417aac:	mov	w2, #0x5                   	// #5
  417ab0:	mov	x0, xzr
  417ab4:	add	x1, x1, #0xb8a
  417ab8:	b	417894 <wcrtomb@plt+0x12da4>
  417abc:	mov	x0, x22
  417ac0:	bl	4046b0 <free@plt>
  417ac4:	ldr	x0, [x21, #24]
  417ac8:	bl	4046b0 <free@plt>
  417acc:	mov	x0, x21
  417ad0:	bl	4046b0 <free@plt>
  417ad4:	ldr	x0, [sp, #8]
  417ad8:	bl	4046b0 <free@plt>
  417adc:	ldp	x20, x19, [sp, #224]
  417ae0:	ldp	x22, x21, [sp, #208]
  417ae4:	ldp	x24, x23, [sp, #192]
  417ae8:	ldp	x26, x25, [sp, #176]
  417aec:	ldp	x28, x27, [sp, #160]
  417af0:	ldp	x29, x30, [sp, #144]
  417af4:	add	sp, sp, #0xf0
  417af8:	ret
  417afc:	cbz	w22, 417c04 <wcrtomb@plt+0x13114>
  417b00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417b04:	ldr	x8, [x8, #4000]
  417b08:	cbz	x8, 417b10 <wcrtomb@plt+0x13020>
  417b0c:	blr	x8
  417b10:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417b14:	add	x1, x1, #0xca8
  417b18:	mov	w2, #0x5                   	// #5
  417b1c:	mov	x0, xzr
  417b20:	bl	4048b0 <dcgettext@plt>
  417b24:	mov	x2, x0
  417b28:	mov	w0, wzr
  417b2c:	mov	w1, wzr
  417b30:	mov	w3, w22
  417b34:	bl	403f60 <error@plt>
  417b38:	b	417cc0 <wcrtomb@plt+0x131d0>
  417b3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417b40:	ldr	x8, [x8, #4000]
  417b44:	cbz	x8, 417b4c <wcrtomb@plt+0x1305c>
  417b48:	blr	x8
  417b4c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417b50:	add	x1, x1, #0xbe1
  417b54:	mov	w2, #0x5                   	// #5
  417b58:	mov	x0, xzr
  417b5c:	bl	4048b0 <dcgettext@plt>
  417b60:	mov	x2, x0
  417b64:	mov	w0, wzr
  417b68:	mov	w1, wzr
  417b6c:	mov	w3, w22
  417b70:	mov	w4, w24
  417b74:	bl	403f60 <error@plt>
  417b78:	b	417cc0 <wcrtomb@plt+0x131d0>
  417b7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417b80:	ldr	x8, [x8, #4000]
  417b84:	cbz	x8, 417b8c <wcrtomb@plt+0x1309c>
  417b88:	blr	x8
  417b8c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417b90:	add	x1, x1, #0xc58
  417b94:	b	417ca4 <wcrtomb@plt+0x131b4>
  417b98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417b9c:	ldr	x8, [x8, #4000]
  417ba0:	cbz	x8, 417ba8 <wcrtomb@plt+0x130b8>
  417ba4:	blr	x8
  417ba8:	bl	4049c0 <__errno_location@plt>
  417bac:	ldr	w20, [x0]
  417bb0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417bb4:	add	x1, x1, #0xb2c
  417bb8:	mov	w2, #0x5                   	// #5
  417bbc:	mov	x0, xzr
  417bc0:	bl	4048b0 <dcgettext@plt>
  417bc4:	mov	x21, x0
  417bc8:	mov	x0, x22
  417bcc:	bl	449144 <argp_parse@@Base+0xea98>
  417bd0:	mov	x3, x0
  417bd4:	mov	w0, wzr
  417bd8:	mov	w1, w20
  417bdc:	mov	x2, x21
  417be0:	bl	403f60 <error@plt>
  417be4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417be8:	mov	w9, #0x2                   	// #2
  417bec:	str	w9, [x8, #2352]
  417bf0:	mov	x0, x22
  417bf4:	bl	4046b0 <free@plt>
  417bf8:	ldr	x0, [sp, #8]
  417bfc:	bl	4046b0 <free@plt>
  417c00:	b	417ccc <wcrtomb@plt+0x131dc>
  417c04:	str	x19, [sp, #8]
  417c08:	cbz	w25, 417724 <wcrtomb@plt+0x12c34>
  417c0c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  417c10:	ldrb	w8, [x8, #3712]
  417c14:	tbz	w8, #1, 417724 <wcrtomb@plt+0x12c34>
  417c18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417c1c:	ldr	x8, [x8, #4000]
  417c20:	cbz	x8, 417c28 <wcrtomb@plt+0x13138>
  417c24:	blr	x8
  417c28:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417c2c:	add	x1, x1, #0xcdf
  417c30:	mov	w2, #0x5                   	// #5
  417c34:	mov	x0, xzr
  417c38:	bl	4048b0 <dcgettext@plt>
  417c3c:	mov	x2, x0
  417c40:	mov	w0, wzr
  417c44:	mov	w1, wzr
  417c48:	bl	403f60 <error@plt>
  417c4c:	ldr	x21, [x26, #3472]
  417c50:	b	417724 <wcrtomb@plt+0x12c34>
  417c54:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417c58:	ldr	x8, [x8, #4000]
  417c5c:	cbz	x8, 417c64 <wcrtomb@plt+0x13174>
  417c60:	blr	x8
  417c64:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417c68:	add	x1, x1, #0xc11
  417c6c:	b	417ca4 <wcrtomb@plt+0x131b4>
  417c70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417c74:	ldr	x8, [x8, #4000]
  417c78:	cbz	x8, 417c80 <wcrtomb@plt+0x13190>
  417c7c:	blr	x8
  417c80:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417c84:	add	x1, x1, #0xc83
  417c88:	b	417ca4 <wcrtomb@plt+0x131b4>
  417c8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417c90:	ldr	x8, [x8, #4000]
  417c94:	cbz	x8, 417c9c <wcrtomb@plt+0x131ac>
  417c98:	blr	x8
  417c9c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417ca0:	add	x1, x1, #0xc33
  417ca4:	mov	w2, #0x5                   	// #5
  417ca8:	mov	x0, xzr
  417cac:	bl	4048b0 <dcgettext@plt>
  417cb0:	mov	x2, x0
  417cb4:	mov	w0, wzr
  417cb8:	mov	w1, wzr
  417cbc:	bl	403f60 <error@plt>
  417cc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417cc4:	mov	w9, #0x2                   	// #2
  417cc8:	str	w9, [x8, #2352]
  417ccc:	ldp	x20, x19, [sp, #224]
  417cd0:	ldp	x22, x21, [sp, #208]
  417cd4:	ldp	x24, x23, [sp, #192]
  417cd8:	ldp	x26, x25, [sp, #176]
  417cdc:	ldp	x28, x27, [sp, #160]
  417ce0:	ldp	x29, x30, [sp, #144]
  417ce4:	add	sp, sp, #0xf0
  417ce8:	b	4198b8 <wcrtomb@plt+0x14dc8>
  417cec:	stp	x29, x30, [sp, #-96]!
  417cf0:	str	x27, [sp, #16]
  417cf4:	stp	x26, x25, [sp, #32]
  417cf8:	stp	x24, x23, [sp, #48]
  417cfc:	stp	x22, x21, [sp, #64]
  417d00:	stp	x20, x19, [sp, #80]
  417d04:	mov	x29, sp
  417d08:	cbz	x1, 417df4 <wcrtomb@plt+0x13304>
  417d0c:	mov	w26, #0x4401                	// #17409
  417d10:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1be3c>
  417d14:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  417d18:	mov	x19, x1
  417d1c:	mov	x20, x0
  417d20:	mov	w27, wzr
  417d24:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417d28:	mov	w24, #0xa                   	// #10
  417d2c:	mov	w25, #0x1                   	// #1
  417d30:	movk	w26, #0x31, lsl #16
  417d34:	add	x21, x21, #0x789
  417d38:	add	x22, x22, #0x705
  417d3c:	b	417d58 <wcrtomb@plt+0x13268>
  417d40:	mov	w1, #0xa                   	// #10
  417d44:	bl	404590 <__overflow@plt>
  417d48:	mov	w27, wzr
  417d4c:	subs	x19, x19, #0x1
  417d50:	add	x20, x20, #0x1
  417d54:	b.eq	417df4 <wcrtomb@plt+0x13304>  // b.none
  417d58:	ldrb	w3, [x20]
  417d5c:	sub	w8, w3, #0x44
  417d60:	cmp	w8, #0x15
  417d64:	b.hi	417da0 <wcrtomb@plt+0x132b0>  // b.pmore
  417d68:	lsl	w8, w25, w8
  417d6c:	tst	w8, w26
  417d70:	b.eq	417da0 <wcrtomb@plt+0x132b0>  // b.none
  417d74:	ldr	x0, [x23, #2824]
  417d78:	mov	w1, #0x1                   	// #1
  417d7c:	mov	x2, x21
  417d80:	bl	404600 <__fprintf_chk@plt>
  417d84:	cbnz	w27, 417d4c <wcrtomb@plt+0x1325c>
  417d88:	ldr	x0, [x23, #2824]
  417d8c:	mov	w1, #0x1                   	// #1
  417d90:	mov	x2, x22
  417d94:	mov	w27, #0x1                   	// #1
  417d98:	bl	404600 <__fprintf_chk@plt>
  417d9c:	b	417d4c <wcrtomb@plt+0x1325c>
  417da0:	cbnz	w3, 417dc8 <wcrtomb@plt+0x132d8>
  417da4:	ldr	x0, [x23, #2824]
  417da8:	ldp	x8, x9, [x0, #40]
  417dac:	cmp	x8, x9
  417db0:	b.cs	417d40 <wcrtomb@plt+0x13250>  // b.hs, b.nlast
  417db4:	add	x9, x8, #0x1
  417db8:	mov	w27, wzr
  417dbc:	str	x9, [x0, #40]
  417dc0:	strb	w24, [x8]
  417dc4:	b	417d4c <wcrtomb@plt+0x1325c>
  417dc8:	ldr	x0, [x23, #2824]
  417dcc:	ldp	x8, x9, [x0, #40]
  417dd0:	cmp	x8, x9
  417dd4:	b.cs	417de8 <wcrtomb@plt+0x132f8>  // b.hs, b.nlast
  417dd8:	add	x9, x8, #0x1
  417ddc:	str	x9, [x0, #40]
  417de0:	strb	w3, [x8]
  417de4:	b	417d4c <wcrtomb@plt+0x1325c>
  417de8:	mov	w1, w3
  417dec:	bl	404590 <__overflow@plt>
  417df0:	b	417d4c <wcrtomb@plt+0x1325c>
  417df4:	ldp	x20, x19, [sp, #80]
  417df8:	ldp	x22, x21, [sp, #64]
  417dfc:	ldp	x24, x23, [sp, #48]
  417e00:	ldp	x26, x25, [sp, #32]
  417e04:	ldr	x27, [sp, #16]
  417e08:	ldp	x29, x30, [sp], #96
  417e0c:	ret
  417e10:	sub	sp, sp, #0x80
  417e14:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417e18:	ldr	w8, [x8, #2992]
  417e1c:	stp	x28, x27, [sp, #48]
  417e20:	mov	x28, x0
  417e24:	stp	x29, x30, [sp, #32]
  417e28:	stp	x26, x25, [sp, #64]
  417e2c:	add	x29, sp, #0x20
  417e30:	mov	x26, x1
  417e34:	mov	w0, w8
  417e38:	mov	x1, x28
  417e3c:	stp	x24, x23, [sp, #80]
  417e40:	stp	x22, x21, [sp, #96]
  417e44:	stp	x20, x19, [sp, #112]
  417e48:	mov	x20, x7
  417e4c:	stur	w6, [x29, #-4]
  417e50:	mov	w22, w5
  417e54:	stp	x3, x4, [sp, #8]
  417e58:	mov	x25, x2
  417e5c:	bl	41b9e0 <wcrtomb@plt+0x16ef0>
  417e60:	mov	x27, x0
  417e64:	mov	x0, x28
  417e68:	bl	403f00 <strlen@plt>
  417e6c:	mov	x23, x0
  417e70:	mov	w0, #0x60                  	// #96
  417e74:	bl	44a010 <argp_parse@@Base+0xf964>
  417e78:	mov	x21, x0
  417e7c:	mov	x19, x0
  417e80:	str	xzr, [x0]
  417e84:	cmp	x23, #0x2
  417e88:	str	xzr, [x21, #40]!
  417e8c:	str	xzr, [x0, #64]
  417e90:	str	wzr, [x0, #60]
  417e94:	str	xzr, [x0, #48]
  417e98:	b.cc	417eac <wcrtomb@plt+0x133bc>  // b.lo, b.ul, b.last
  417e9c:	sub	x8, x23, #0x1
  417ea0:	ldrb	w9, [x28, x8]
  417ea4:	cmp	w9, #0x2f
  417ea8:	csel	x23, x8, x23, eq  // eq = none
  417eac:	add	x0, x23, #0x1
  417eb0:	bl	44a010 <argp_parse@@Base+0xf964>
  417eb4:	mov	x1, x28
  417eb8:	mov	x2, x23
  417ebc:	mov	x24, x0
  417ec0:	str	x0, [x19, #88]
  417ec4:	bl	403e80 <memcpy@plt>
  417ec8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417ecc:	add	x8, x8, #0x478
  417ed0:	ldr	x9, [x8, #8]
  417ed4:	strb	wzr, [x24, x23]
  417ed8:	stp	xzr, x27, [x19, #72]
  417edc:	mov	w10, #0x1                   	// #1
  417ee0:	cmp	x9, #0x0
  417ee4:	csel	x9, x8, x9, eq  // eq = none
  417ee8:	str	x19, [x9]
  417eec:	str	x19, [x8, #8]
  417ef0:	ldr	x8, [sp, #8]
  417ef4:	str	w10, [x19, #56]
  417ef8:	ldur	w10, [x29, #-4]
  417efc:	stp	x26, x25, [x19, #8]
  417f00:	str	x8, [x19, #24]
  417f04:	ldr	x8, [sp, #16]
  417f08:	str	x8, [x19, #32]
  417f0c:	tbnz	w22, #0, 417f40 <wcrtomb@plt+0x13450>
  417f10:	tbnz	w10, #0, 417f40 <wcrtomb@plt+0x13450>
  417f14:	cbz	x20, 417f64 <wcrtomb@plt+0x13474>
  417f18:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  417f1c:	add	x1, x1, #0x993
  417f20:	mov	x0, x20
  417f24:	bl	418084 <wcrtomb@plt+0x13594>
  417f28:	mov	x8, x0
  417f2c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417f30:	ldr	x0, [x20, #1128]
  417f34:	str	x8, [x21]
  417f38:	cbnz	x0, 417f9c <wcrtomb@plt+0x134ac>
  417f3c:	b	417f78 <wcrtomb@plt+0x13488>
  417f40:	tst	w22, #0x1
  417f44:	mov	w8, #0x4                   	// #4
  417f48:	mov	w9, #0x6                   	// #6
  417f4c:	csel	w8, w9, w8, ne  // ne = any
  417f50:	tst	w10, #0x1
  417f54:	mov	w9, #0x2                   	// #2
  417f58:	csel	w8, w8, w9, ne  // ne = any
  417f5c:	str	w8, [x19, #60]
  417f60:	cbnz	x20, 417f18 <wcrtomb@plt+0x13428>
  417f64:	mov	x8, xzr
  417f68:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417f6c:	ldr	x0, [x20, #1128]
  417f70:	str	x8, [x21]
  417f74:	cbnz	x0, 417f9c <wcrtomb@plt+0x134ac>
  417f78:	adrp	x2, 418000 <wcrtomb@plt+0x13510>
  417f7c:	adrp	x3, 418000 <wcrtomb@plt+0x13510>
  417f80:	add	x2, x2, #0xc
  417f84:	add	x3, x3, #0x14
  417f88:	mov	x1, xzr
  417f8c:	mov	x4, xzr
  417f90:	bl	43eb5c <argp_parse@@Base+0x44b0>
  417f94:	str	x0, [x20, #1128]
  417f98:	cbz	x0, 418008 <wcrtomb@plt+0x13518>
  417f9c:	mov	x1, x19
  417fa0:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  417fa4:	cbz	x0, 418008 <wcrtomb@plt+0x13518>
  417fa8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  417fac:	ldr	x0, [x20, #1136]
  417fb0:	cbnz	x0, 417fd8 <wcrtomb@plt+0x134e8>
  417fb4:	adrp	x2, 418000 <wcrtomb@plt+0x13510>
  417fb8:	adrp	x3, 418000 <wcrtomb@plt+0x13510>
  417fbc:	add	x2, x2, #0x38
  417fc0:	add	x3, x3, #0x4c
  417fc4:	mov	x1, xzr
  417fc8:	mov	x4, xzr
  417fcc:	bl	43eb5c <argp_parse@@Base+0x44b0>
  417fd0:	str	x0, [x20, #1136]
  417fd4:	cbz	x0, 418008 <wcrtomb@plt+0x13518>
  417fd8:	mov	x1, x19
  417fdc:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  417fe0:	cbz	x0, 418008 <wcrtomb@plt+0x13518>
  417fe4:	mov	x0, x19
  417fe8:	ldp	x20, x19, [sp, #112]
  417fec:	ldp	x22, x21, [sp, #96]
  417ff0:	ldp	x24, x23, [sp, #80]
  417ff4:	ldp	x26, x25, [sp, #64]
  417ff8:	ldp	x28, x27, [sp, #48]
  417ffc:	ldp	x29, x30, [sp, #32]
  418000:	add	sp, sp, #0x80
  418004:	ret
  418008:	bl	40eb80 <wcrtomb@plt+0xa090>
  41800c:	ldr	x0, [x0, #80]
  418010:	b	43eb04 <argp_parse@@Base+0x4458>
  418014:	stp	x29, x30, [sp, #-16]!
  418018:	ldr	x0, [x0, #80]
  41801c:	ldr	x1, [x1, #80]
  418020:	mov	x29, sp
  418024:	bl	404610 <strcmp@plt>
  418028:	cmp	w0, #0x0
  41802c:	cset	w0, eq  // eq = none
  418030:	ldp	x29, x30, [sp], #16
  418034:	ret
  418038:	ldp	x8, x9, [x0, #24]
  41803c:	add	x8, x9, x8
  418040:	udiv	x9, x8, x1
  418044:	msub	x0, x9, x1, x8
  418048:	ret
  41804c:	ldr	x8, [x0, #24]
  418050:	ldr	x9, [x1, #24]
  418054:	cmp	x8, x9
  418058:	b.ne	418070 <wcrtomb@plt+0x13580>  // b.any
  41805c:	ldr	x8, [x0, #32]
  418060:	ldr	x9, [x1, #32]
  418064:	cmp	x8, x9
  418068:	cset	w0, eq  // eq = none
  41806c:	ret
  418070:	mov	w0, wzr
  418074:	ret
  418078:	ldr	x0, [x0]
  41807c:	ldr	x1, [x1]
  418080:	b	404610 <strcmp@plt>
  418084:	stp	x29, x30, [sp, #-80]!
  418088:	stp	x26, x25, [sp, #16]
  41808c:	stp	x24, x23, [sp, #32]
  418090:	stp	x22, x21, [sp, #48]
  418094:	stp	x20, x19, [sp, #64]
  418098:	ldrb	w25, [x0]
  41809c:	mov	x21, x0
  4180a0:	mov	x19, x1
  4180a4:	mov	x29, sp
  4180a8:	cbz	w25, 4180f8 <wcrtomb@plt+0x13608>
  4180ac:	cbz	x19, 418108 <wcrtomb@plt+0x13618>
  4180b0:	mov	x24, xzr
  4180b4:	mov	x23, xzr
  4180b8:	mov	w22, #0x1                   	// #1
  4180bc:	mov	x20, x21
  4180c0:	mov	x0, x20
  4180c4:	bl	403f00 <strlen@plt>
  4180c8:	add	x26, x0, #0x1
  4180cc:	and	w1, w25, #0xff
  4180d0:	mov	x0, x19
  4180d4:	add	x22, x26, x22
  4180d8:	bl	404750 <strchr@plt>
  4180dc:	add	x20, x20, x26
  4180e0:	ldrb	w25, [x20]
  4180e4:	cmp	x0, #0x0
  4180e8:	cinc	x24, x24, ne  // ne = any
  4180ec:	add	x23, x23, #0x1
  4180f0:	cbnz	w25, 4180c0 <wcrtomb@plt+0x135d0>
  4180f4:	b	418138 <wcrtomb@plt+0x13648>
  4180f8:	mov	x23, xzr
  4180fc:	mov	x24, xzr
  418100:	mov	w22, #0x1                   	// #1
  418104:	b	418138 <wcrtomb@plt+0x13648>
  418108:	mov	x23, xzr
  41810c:	mov	w22, #0x1                   	// #1
  418110:	mov	x20, x21
  418114:	mov	x0, x20
  418118:	bl	403f00 <strlen@plt>
  41811c:	add	x8, x0, #0x1
  418120:	add	x20, x20, x8
  418124:	ldrb	w9, [x20]
  418128:	add	x23, x23, #0x1
  41812c:	add	x22, x8, x22
  418130:	mov	x24, x23
  418134:	cbnz	w9, 418114 <wcrtomb@plt+0x13624>
  418138:	add	x0, x22, #0x20
  41813c:	bl	44a010 <argp_parse@@Base+0xf964>
  418140:	mov	x20, x0
  418144:	add	x0, x0, #0x20
  418148:	mov	x1, x21
  41814c:	mov	x2, x22
  418150:	str	x0, [x20]
  418154:	bl	403e80 <memcpy@plt>
  418158:	add	x0, x24, #0x1
  41815c:	mov	w1, #0x8                   	// #8
  418160:	stp	x23, x24, [x20, #8]
  418164:	bl	44a274 <argp_parse@@Base+0xfbc8>
  418168:	ldr	x21, [x20]
  41816c:	str	x0, [x20, #24]
  418170:	ldrb	w8, [x21]
  418174:	cbz	w8, 4181c0 <wcrtomb@plt+0x136d0>
  418178:	cbz	x19, 4181c8 <wcrtomb@plt+0x136d8>
  41817c:	mov	x22, xzr
  418180:	b	418198 <wcrtomb@plt+0x136a8>
  418184:	mov	x0, x21
  418188:	bl	403f00 <strlen@plt>
  41818c:	add	x21, x0, x21
  418190:	ldrb	w8, [x21, #1]!
  418194:	cbz	w8, 418218 <wcrtomb@plt+0x13728>
  418198:	and	w1, w8, #0xff
  41819c:	mov	x0, x19
  4181a0:	bl	404750 <strchr@plt>
  4181a4:	cbz	x0, 418184 <wcrtomb@plt+0x13694>
  4181a8:	ldr	x8, [x20, #24]
  4181ac:	add	x9, x21, #0x1
  4181b0:	add	x10, x22, #0x1
  4181b4:	str	x9, [x8, x22, lsl #3]
  4181b8:	mov	x22, x10
  4181bc:	b	418184 <wcrtomb@plt+0x13694>
  4181c0:	mov	x22, xzr
  4181c4:	b	418218 <wcrtomb@plt+0x13728>
  4181c8:	add	x8, x21, #0x1
  4181cc:	str	x8, [x0]
  4181d0:	mov	x0, x21
  4181d4:	bl	403f00 <strlen@plt>
  4181d8:	add	x19, x0, x21
  4181dc:	ldrb	w8, [x19, #1]!
  4181e0:	cbz	w8, 418214 <wcrtomb@plt+0x13724>
  4181e4:	mov	w8, #0x1                   	// #1
  4181e8:	ldr	x9, [x20, #24]
  4181ec:	add	x10, x19, #0x1
  4181f0:	mov	x0, x19
  4181f4:	add	x22, x8, #0x1
  4181f8:	str	x10, [x9, x8, lsl #3]
  4181fc:	bl	403f00 <strlen@plt>
  418200:	add	x19, x0, x19
  418204:	ldrb	w9, [x19, #1]!
  418208:	mov	x8, x22
  41820c:	cbnz	w9, 4181e8 <wcrtomb@plt+0x136f8>
  418210:	b	418218 <wcrtomb@plt+0x13728>
  418214:	mov	w22, #0x1                   	// #1
  418218:	ldr	x8, [x20, #24]
  41821c:	mov	x0, x20
  418220:	str	xzr, [x8, x22, lsl #3]
  418224:	ldp	x20, x19, [sp, #64]
  418228:	ldp	x22, x21, [sp, #48]
  41822c:	ldp	x24, x23, [sp, #32]
  418230:	ldp	x26, x25, [sp, #16]
  418234:	ldp	x29, x30, [sp], #80
  418238:	ret
  41823c:	stp	x29, x30, [sp, #-64]!
  418240:	stp	x22, x21, [sp, #32]
  418244:	stp	x20, x19, [sp, #48]
  418248:	ldrb	w8, [x1]
  41824c:	str	x23, [sp, #16]
  418250:	mov	x20, x2
  418254:	mov	x21, x1
  418258:	mov	x19, x0
  41825c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418260:	mov	x29, sp
  418264:	cbz	w8, 41827c <wcrtomb@plt+0x1378c>
  418268:	ldrb	w2, [x23, #3944]
  41826c:	mov	x0, x21
  418270:	mov	w1, wzr
  418274:	bl	42da24 <wcrtomb@plt+0x28f34>
  418278:	mov	x21, x0
  41827c:	ldp	x8, x9, [x19, #24]
  418280:	cmp	x9, x8
  418284:	b.ne	418298 <wcrtomb@plt+0x137a8>  // b.any
  418288:	mov	w1, #0x1                   	// #1
  41828c:	mov	x0, x19
  418290:	bl	44afa0 <_obstack_newchunk@@Base>
  418294:	ldr	x8, [x19, #24]
  418298:	add	x9, x8, #0x1
  41829c:	mov	w10, #0x52                  	// #82
  4182a0:	mov	x0, x21
  4182a4:	str	x9, [x19, #24]
  4182a8:	strb	w10, [x8]
  4182ac:	bl	403f00 <strlen@plt>
  4182b0:	mov	x8, x0
  4182b4:	ldp	x0, x9, [x19, #24]
  4182b8:	add	x22, x8, #0x1
  4182bc:	sub	x8, x9, x0
  4182c0:	cmp	x8, x22
  4182c4:	b.cs	4182d8 <wcrtomb@plt+0x137e8>  // b.hs, b.nlast
  4182c8:	mov	x0, x19
  4182cc:	mov	x1, x22
  4182d0:	bl	44afa0 <_obstack_newchunk@@Base>
  4182d4:	ldr	x0, [x19, #24]
  4182d8:	mov	x1, x21
  4182dc:	mov	x2, x22
  4182e0:	bl	403e80 <memcpy@plt>
  4182e4:	ldr	x8, [x19, #24]
  4182e8:	add	x8, x8, x22
  4182ec:	str	x8, [x19, #24]
  4182f0:	ldrb	w9, [x20]
  4182f4:	cbz	w9, 418310 <wcrtomb@plt+0x13820>
  4182f8:	ldrb	w2, [x23, #3944]
  4182fc:	mov	x0, x20
  418300:	mov	w1, wzr
  418304:	bl	42da24 <wcrtomb@plt+0x28f34>
  418308:	ldr	x8, [x19, #24]
  41830c:	mov	x20, x0
  418310:	ldr	x9, [x19, #32]
  418314:	cmp	x9, x8
  418318:	b.ne	41832c <wcrtomb@plt+0x1383c>  // b.any
  41831c:	mov	w1, #0x1                   	// #1
  418320:	mov	x0, x19
  418324:	bl	44afa0 <_obstack_newchunk@@Base>
  418328:	ldr	x8, [x19, #24]
  41832c:	add	x9, x8, #0x1
  418330:	mov	w10, #0x54                  	// #84
  418334:	mov	x0, x20
  418338:	str	x9, [x19, #24]
  41833c:	strb	w10, [x8]
  418340:	bl	403f00 <strlen@plt>
  418344:	mov	x8, x0
  418348:	ldp	x0, x9, [x19, #24]
  41834c:	add	x21, x8, #0x1
  418350:	sub	x8, x9, x0
  418354:	cmp	x8, x21
  418358:	b.cs	41836c <wcrtomb@plt+0x1387c>  // b.hs, b.nlast
  41835c:	mov	x0, x19
  418360:	mov	x1, x21
  418364:	bl	44afa0 <_obstack_newchunk@@Base>
  418368:	ldr	x0, [x19, #24]
  41836c:	mov	x1, x20
  418370:	mov	x2, x21
  418374:	bl	403e80 <memcpy@plt>
  418378:	ldr	x8, [x19, #24]
  41837c:	ldr	x23, [sp, #16]
  418380:	add	x8, x8, x21
  418384:	str	x8, [x19, #24]
  418388:	ldp	x20, x19, [sp, #48]
  41838c:	ldp	x22, x21, [sp, #32]
  418390:	ldp	x29, x30, [sp], #64
  418394:	ret
  418398:	sub	sp, sp, #0x30
  41839c:	stp	x20, x19, [sp, #32]
  4183a0:	mov	x19, x1
  4183a4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4183a8:	add	x1, x1, #0x9a5
  4183ac:	add	x4, sp, #0x8
  4183b0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  4183b4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  4183b8:	stp	x29, x30, [sp, #16]
  4183bc:	add	x29, sp, #0x10
  4183c0:	mov	x20, x0
  4183c4:	bl	418464 <wcrtomb@plt+0x13974>
  4183c8:	tbz	w0, #0, 418410 <wcrtomb@plt+0x13920>
  4183cc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4183d0:	mov	w3, #0xc9ff                	// #51711
  4183d4:	add	x1, x1, #0x9b3
  4183d8:	mov	x4, sp
  4183dc:	movk	w3, #0x3b9a, lsl #16
  4183e0:	mov	x0, x20
  4183e4:	mov	x2, xzr
  4183e8:	bl	418464 <wcrtomb@plt+0x13974>
  4183ec:	tbz	w0, #0, 418410 <wcrtomb@plt+0x13920>
  4183f0:	ldr	x8, [sp, #8]
  4183f4:	str	x8, [x19]
  4183f8:	ldr	x8, [sp]
  4183fc:	str	x8, [x19, #8]
  418400:	ldp	x20, x19, [sp, #32]
  418404:	ldp	x29, x30, [sp, #16]
  418408:	add	sp, sp, #0x30
  41840c:	ret
  418410:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418414:	ldr	x8, [x8, #4000]
  418418:	cbz	x8, 418420 <wcrtomb@plt+0x13930>
  41841c:	blr	x8
  418420:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418424:	ldr	x0, [x8, #3824]
  418428:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41842c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418430:	mov	x19, x0
  418434:	add	x1, x1, #0xa71
  418438:	mov	w2, #0x5                   	// #5
  41843c:	mov	x0, xzr
  418440:	bl	4048b0 <dcgettext@plt>
  418444:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  418448:	mov	x4, x0
  41844c:	add	x2, x2, #0x140
  418450:	mov	w0, wzr
  418454:	mov	w1, wzr
  418458:	mov	x3, x19
  41845c:	bl	403f60 <error@plt>
  418460:	bl	40eb40 <wcrtomb@plt+0xa050>
  418464:	sub	sp, sp, #0xc0
  418468:	stp	x29, x30, [sp, #112]
  41846c:	str	x25, [sp, #128]
  418470:	stp	x24, x23, [sp, #144]
  418474:	stp	x22, x21, [sp, #160]
  418478:	stp	x20, x19, [sp, #176]
  41847c:	ldp	x8, x9, [x0, #8]
  418480:	mov	x23, x4
  418484:	mov	x21, x3
  418488:	mov	x22, x2
  41848c:	mov	x20, x0
  418490:	cmp	x8, x9
  418494:	mov	x19, x1
  418498:	add	x29, sp, #0x70
  41849c:	b.cs	418504 <wcrtomb@plt+0x13a14>  // b.hs, b.nlast
  4184a0:	add	x9, x8, #0x1
  4184a4:	str	x9, [x20, #8]
  4184a8:	ldrb	w0, [x8]
  4184ac:	sub	w8, w0, #0x30
  4184b0:	cmp	w8, #0xa
  4184b4:	b.cc	418518 <wcrtomb@plt+0x13a28>  // b.lo, b.ul, b.last
  4184b8:	cmp	w0, #0x2d
  4184bc:	b.eq	418518 <wcrtomb@plt+0x13a28>  // b.none
  4184c0:	mov	x24, xzr
  4184c4:	mov	w8, #0x1                   	// #1
  4184c8:	sub	x9, x29, #0x18
  4184cc:	strb	wzr, [x9, x24]
  4184d0:	tbnz	w0, #31, 418580 <wcrtomb@plt+0x13a90>
  4184d4:	cbnz	w0, 4186c4 <wcrtomb@plt+0x13bd4>
  4184d8:	sub	x0, x29, #0x18
  4184dc:	mov	x1, xzr
  4184e0:	mov	x2, x22
  4184e4:	mov	x3, x21
  4184e8:	bl	41bc88 <wcrtomb@plt+0x17198>
  4184ec:	str	x0, [x23]
  4184f0:	bl	4049c0 <__errno_location@plt>
  4184f4:	ldr	w23, [x0]
  4184f8:	cbnz	w23, 418620 <wcrtomb@plt+0x13b30>
  4184fc:	mov	w0, #0x1                   	// #1
  418500:	b	418590 <wcrtomb@plt+0x13aa0>
  418504:	mov	x0, x20
  418508:	bl	404a70 <__uflow@plt>
  41850c:	sub	w8, w0, #0x30
  418510:	cmp	w8, #0xa
  418514:	b.cs	4184b8 <wcrtomb@plt+0x139c8>  // b.hs, b.nlast
  418518:	mov	x24, xzr
  41851c:	sub	x25, x29, #0x18
  418520:	cmp	x24, #0x14
  418524:	strb	w0, [x25, x24]
  418528:	b.eq	4185ac <wcrtomb@plt+0x13abc>  // b.none
  41852c:	ldp	x8, x9, [x20, #8]
  418530:	cmp	x8, x9
  418534:	b.cs	418558 <wcrtomb@plt+0x13a68>  // b.hs, b.nlast
  418538:	add	x9, x8, #0x1
  41853c:	str	x9, [x20, #8]
  418540:	ldrb	w0, [x8]
  418544:	sub	w8, w0, #0x30
  418548:	cmp	w8, #0xa
  41854c:	add	x24, x24, #0x1
  418550:	b.cc	418520 <wcrtomb@plt+0x13a30>  // b.lo, b.ul, b.last
  418554:	b	418570 <wcrtomb@plt+0x13a80>
  418558:	mov	x0, x20
  41855c:	bl	404a70 <__uflow@plt>
  418560:	sub	w8, w0, #0x30
  418564:	cmp	w8, #0xa
  418568:	add	x24, x24, #0x1
  41856c:	b.cc	418520 <wcrtomb@plt+0x13a30>  // b.lo, b.ul, b.last
  418570:	mov	w8, wzr
  418574:	sub	x9, x29, #0x18
  418578:	strb	wzr, [x9, x24]
  41857c:	tbz	w0, #31, 4184d4 <wcrtomb@plt+0x139e4>
  418580:	ldrb	w9, [x20]
  418584:	tbnz	w9, #5, 4187a8 <wcrtomb@plt+0x13cb8>
  418588:	tbz	w8, #0, 4187b4 <wcrtomb@plt+0x13cc4>
  41858c:	mov	w0, wzr
  418590:	ldp	x20, x19, [sp, #176]
  418594:	ldp	x22, x21, [sp, #160]
  418598:	ldp	x24, x23, [sp, #144]
  41859c:	ldr	x25, [sp, #128]
  4185a0:	ldp	x29, x30, [sp, #112]
  4185a4:	add	sp, sp, #0xc0
  4185a8:	ret
  4185ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4185b0:	ldr	x8, [x8, #4000]
  4185b4:	cbz	x8, 4185bc <wcrtomb@plt+0x13acc>
  4185b8:	blr	x8
  4185bc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4185c0:	add	x1, x1, #0xa91
  4185c4:	mov	w2, #0x5                   	// #5
  4185c8:	mov	x0, xzr
  4185cc:	bl	4048b0 <dcgettext@plt>
  4185d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4185d4:	ldr	x8, [x8, #3824]
  4185d8:	mov	x21, x0
  4185dc:	mov	x0, x8
  4185e0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  4185e4:	mov	x22, x0
  4185e8:	mov	x0, x20
  4185ec:	bl	4047e0 <ftello@plt>
  4185f0:	sub	x1, x29, #0x30
  4185f4:	bl	440200 <argp_parse@@Base+0x5b54>
  4185f8:	mov	x4, x0
  4185fc:	sub	x7, x29, #0x18
  418600:	mov	w6, #0x15                  	// #21
  418604:	mov	w0, wzr
  418608:	mov	w1, wzr
  41860c:	mov	x2, x21
  418610:	mov	x3, x22
  418614:	mov	x5, x19
  418618:	bl	403f60 <error@plt>
  41861c:	bl	40eb40 <wcrtomb@plt+0xa050>
  418620:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418624:	cmp	w23, #0x22
  418628:	b.ne	41873c <wcrtomb@plt+0x13c4c>  // b.any
  41862c:	ldr	x8, [x8, #4000]
  418630:	cbz	x8, 418638 <wcrtomb@plt+0x13b48>
  418634:	blr	x8
  418638:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41863c:	add	x1, x1, #0xae5
  418640:	mov	w2, #0x5                   	// #5
  418644:	mov	x0, xzr
  418648:	bl	4048b0 <dcgettext@plt>
  41864c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418650:	ldr	x8, [x8, #3824]
  418654:	mov	x23, x0
  418658:	mov	x0, x8
  41865c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  418660:	mov	x24, x0
  418664:	mov	x0, x20
  418668:	bl	4047e0 <ftello@plt>
  41866c:	sub	x1, x29, #0x30
  418670:	bl	440200 <argp_parse@@Base+0x5b54>
  418674:	mov	x20, x0
  418678:	add	x1, sp, #0x28
  41867c:	mov	x0, x22
  418680:	bl	440170 <argp_parse@@Base+0x5ac4>
  418684:	mov	x22, x0
  418688:	add	x1, sp, #0x10
  41868c:	mov	x0, x21
  418690:	bl	440290 <argp_parse@@Base+0x5be4>
  418694:	mov	x6, x0
  418698:	sub	x8, x29, #0x18
  41869c:	mov	w1, #0x22                  	// #34
  4186a0:	mov	w0, wzr
  4186a4:	mov	x2, x23
  4186a8:	mov	x3, x24
  4186ac:	mov	x4, x20
  4186b0:	mov	x5, x22
  4186b4:	mov	x7, x19
  4186b8:	str	x8, [sp]
  4186bc:	bl	403f60 <error@plt>
  4186c0:	bl	40eb40 <wcrtomb@plt+0xa050>
  4186c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4186c8:	ldr	x8, [x8, #4000]
  4186cc:	mov	w21, w0
  4186d0:	cbz	x8, 4186d8 <wcrtomb@plt+0x13be8>
  4186d4:	blr	x8
  4186d8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4186dc:	add	x1, x1, #0xab2
  4186e0:	mov	w2, #0x5                   	// #5
  4186e4:	mov	x0, xzr
  4186e8:	bl	4048b0 <dcgettext@plt>
  4186ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4186f0:	ldr	x8, [x8, #3824]
  4186f4:	mov	x22, x0
  4186f8:	mov	x0, x8
  4186fc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  418700:	mov	x23, x0
  418704:	mov	x0, x20
  418708:	bl	4047e0 <ftello@plt>
  41870c:	sub	x1, x29, #0x30
  418710:	bl	440200 <argp_parse@@Base+0x5b54>
  418714:	mov	x4, x0
  418718:	sub	x6, x29, #0x18
  41871c:	mov	w0, wzr
  418720:	mov	w1, wzr
  418724:	mov	x2, x22
  418728:	mov	x3, x23
  41872c:	mov	x5, x19
  418730:	mov	w7, w21
  418734:	bl	403f60 <error@plt>
  418738:	bl	40eb40 <wcrtomb@plt+0xa050>
  41873c:	ldr	x8, [x8, #4000]
  418740:	cbz	x8, 418748 <wcrtomb@plt+0x13c58>
  418744:	blr	x8
  418748:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41874c:	add	x1, x1, #0xb0e
  418750:	mov	w2, #0x5                   	// #5
  418754:	mov	x0, xzr
  418758:	bl	4048b0 <dcgettext@plt>
  41875c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418760:	ldr	x8, [x8, #3824]
  418764:	mov	x21, x0
  418768:	mov	x0, x8
  41876c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  418770:	mov	x22, x0
  418774:	mov	x0, x20
  418778:	bl	4047e0 <ftello@plt>
  41877c:	sub	x1, x29, #0x30
  418780:	bl	440200 <argp_parse@@Base+0x5b54>
  418784:	mov	x4, x0
  418788:	sub	x6, x29, #0x18
  41878c:	mov	w0, wzr
  418790:	mov	w1, w23
  418794:	mov	x2, x21
  418798:	mov	x3, x22
  41879c:	mov	x5, x19
  4187a0:	bl	403f60 <error@plt>
  4187a4:	bl	40eb40 <wcrtomb@plt+0xa050>
  4187a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4187ac:	ldr	x0, [x8, #3824]
  4187b0:	bl	42cef0 <wcrtomb@plt+0x28400>
  4187b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4187b8:	ldr	x8, [x8, #4000]
  4187bc:	cbz	x8, 4187c4 <wcrtomb@plt+0x13cd4>
  4187c0:	blr	x8
  4187c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4187c8:	ldr	x0, [x8, #3824]
  4187cc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  4187d0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4187d4:	mov	x19, x0
  4187d8:	add	x1, x1, #0xa71
  4187dc:	mov	w2, #0x5                   	// #5
  4187e0:	mov	x0, xzr
  4187e4:	bl	4048b0 <dcgettext@plt>
  4187e8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  4187ec:	mov	x4, x0
  4187f0:	add	x2, x2, #0x140
  4187f4:	mov	w0, wzr
  4187f8:	mov	w1, wzr
  4187fc:	mov	x3, x19
  418800:	bl	403f60 <error@plt>
  418804:	bl	40eb40 <wcrtomb@plt+0xa050>
  418808:	stp	x29, x30, [sp, #-64]!
  41880c:	str	x23, [sp, #16]
  418810:	stp	x22, x21, [sp, #32]
  418814:	stp	x20, x19, [sp, #48]
  418818:	ldp	x8, x9, [x0, #8]
  41881c:	mov	x19, x2
  418820:	mov	x22, x0
  418824:	mov	x20, x1
  418828:	cmp	x8, x9
  41882c:	mov	x29, sp
  418830:	b.cs	418904 <wcrtomb@plt+0x13e14>  // b.hs, b.nlast
  418834:	add	x9, x8, #0x1
  418838:	str	x9, [x22, #8]
  41883c:	ldrb	w21, [x8]
  418840:	ldp	x8, x9, [x20, #24]
  418844:	add	w10, w21, #0x1
  418848:	cmp	x9, x8
  41884c:	cset	w9, eq  // eq = none
  418850:	cmp	w10, #0x2
  418854:	b.cc	4188c4 <wcrtomb@plt+0x13dd4>  // b.lo, b.ul, b.last
  418858:	mov	x23, xzr
  41885c:	tbz	w9, #0, 418870 <wcrtomb@plt+0x13d80>
  418860:	mov	w1, #0x1                   	// #1
  418864:	mov	x0, x20
  418868:	bl	44afa0 <_obstack_newchunk@@Base>
  41886c:	ldr	x8, [x20, #24]
  418870:	add	x9, x8, #0x1
  418874:	str	x9, [x20, #24]
  418878:	strb	w21, [x8]
  41887c:	ldp	x8, x9, [x22, #8]
  418880:	cmp	x8, x9
  418884:	b.cs	4188b4 <wcrtomb@plt+0x13dc4>  // b.hs, b.nlast
  418888:	add	x9, x8, #0x1
  41888c:	str	x9, [x22, #8]
  418890:	ldrb	w21, [x8]
  418894:	ldp	x8, x9, [x20, #24]
  418898:	add	w10, w21, #0x1
  41889c:	add	x23, x23, #0x1
  4188a0:	cmp	x9, x8
  4188a4:	cset	w9, eq  // eq = none
  4188a8:	cmp	w10, #0x1
  4188ac:	b.hi	41885c <wcrtomb@plt+0x13d6c>  // b.pmore
  4188b0:	b	4188c8 <wcrtomb@plt+0x13dd8>
  4188b4:	mov	x0, x22
  4188b8:	bl	404a70 <__uflow@plt>
  4188bc:	mov	w21, w0
  4188c0:	b	418894 <wcrtomb@plt+0x13da4>
  4188c4:	mov	x23, xzr
  4188c8:	cbz	w9, 4188dc <wcrtomb@plt+0x13dec>
  4188cc:	mov	w1, #0x1                   	// #1
  4188d0:	mov	x0, x20
  4188d4:	bl	44afa0 <_obstack_newchunk@@Base>
  4188d8:	ldr	x8, [x20, #24]
  4188dc:	add	x9, x8, #0x1
  4188e0:	str	x9, [x20, #24]
  4188e4:	strb	wzr, [x8]
  4188e8:	str	x23, [x19]
  4188ec:	mov	w0, w21
  4188f0:	ldp	x20, x19, [sp, #48]
  4188f4:	ldp	x22, x21, [sp, #32]
  4188f8:	ldr	x23, [sp, #16]
  4188fc:	ldp	x29, x30, [sp], #64
  418900:	ret
  418904:	mov	x0, x22
  418908:	bl	404a70 <__uflow@plt>
  41890c:	mov	w21, w0
  418910:	b	418840 <wcrtomb@plt+0x13d50>
  418914:	sub	sp, sp, #0x50
  418918:	cmp	w0, #0x56
  41891c:	stp	x29, x30, [sp, #16]
  418920:	str	x23, [sp, #32]
  418924:	stp	x22, x21, [sp, #48]
  418928:	stp	x20, x19, [sp, #64]
  41892c:	add	x29, sp, #0x10
  418930:	b.eq	418a2c <wcrtomb@plt+0x13f3c>  // b.none
  418934:	adrp	x2, 41a000 <wcrtomb@plt+0x15510>
  418938:	mov	w20, w0
  41893c:	mov	x19, x1
  418940:	add	x0, x1, #0x8
  418944:	mov	w8, #0x1                   	// #1
  418948:	add	x2, x2, #0xed8
  41894c:	sub	x3, x29, #0x4
  418950:	mov	w1, #0x1                   	// #1
  418954:	stur	w8, [x29, #-4]
  418958:	bl	4296b4 <wcrtomb@plt+0x24bc4>
  41895c:	cmp	w20, #0x31
  418960:	b.eq	41898c <wcrtomb@plt+0x13e9c>  // b.none
  418964:	cmp	w20, #0x32
  418968:	b.ne	4189ac <wcrtomb@plt+0x13ebc>  // b.any
  41896c:	mov	w8, #0x4                   	// #4
  418970:	adrp	x2, 41a000 <wcrtomb@plt+0x15510>
  418974:	add	x0, x19, #0x18
  418978:	str	w8, [x29, #24]
  41897c:	add	x2, x2, #0xed8
  418980:	add	x3, x29, #0x18
  418984:	mov	w1, #0x4                   	// #4
  418988:	b	4189a8 <wcrtomb@plt+0x13eb8>
  41898c:	adrp	x2, 41a000 <wcrtomb@plt+0x15510>
  418990:	add	x0, x19, #0x18
  418994:	mov	w8, #0x2                   	// #2
  418998:	add	x2, x2, #0xed8
  41899c:	add	x3, x29, #0x1c
  4189a0:	mov	w1, #0x2                   	// #2
  4189a4:	str	w8, [x29, #28]
  4189a8:	bl	4296b4 <wcrtomb@plt+0x24bc4>
  4189ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4189b0:	ldrb	w8, [x8, #3835]
  4189b4:	cbz	w8, 418a2c <wcrtomb@plt+0x13f3c>
  4189b8:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4189bc:	ldr	x19, [x23, #3096]
  4189c0:	sub	x20, x19, #0x1
  4189c4:	ldrb	w8, [x20, #1]!
  4189c8:	and	w9, w8, #0xfe
  4189cc:	cmp	w9, #0x2e
  4189d0:	b.eq	4189c4 <wcrtomb@plt+0x13ed4>  // b.none
  4189d4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4189d8:	ldr	x21, [x9, #3560]
  4189dc:	cbz	w8, 418a18 <wcrtomb@plt+0x13f28>
  4189e0:	mov	x0, x21
  4189e4:	bl	403f00 <strlen@plt>
  4189e8:	mov	x22, x0
  4189ec:	sxtw	x2, w0
  4189f0:	mov	x0, x20
  4189f4:	mov	x1, x21
  4189f8:	bl	4042c0 <strncmp@plt>
  4189fc:	cbz	w0, 418a44 <wcrtomb@plt+0x13f54>
  418a00:	mov	x0, x21
  418a04:	mov	x1, x19
  418a08:	bl	41f9fc <wcrtomb@plt+0x1af0c>
  418a0c:	str	x0, [x23, #3096]
  418a10:	bl	41b8dc <wcrtomb@plt+0x16dec>
  418a14:	b	418a24 <wcrtomb@plt+0x13f34>
  418a18:	mov	x0, x21
  418a1c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  418a20:	str	x0, [x23, #3096]
  418a24:	mov	x0, x19
  418a28:	bl	4046b0 <free@plt>
  418a2c:	ldp	x20, x19, [sp, #64]
  418a30:	ldp	x22, x21, [sp, #48]
  418a34:	ldr	x23, [sp, #32]
  418a38:	ldp	x29, x30, [sp, #16]
  418a3c:	add	sp, sp, #0x50
  418a40:	ret
  418a44:	ldrb	w8, [x20, w22, sxtw]
  418a48:	cbz	w8, 418a2c <wcrtomb@plt+0x13f3c>
  418a4c:	cmp	w8, #0x2f
  418a50:	b.eq	418a2c <wcrtomb@plt+0x13f3c>  // b.none
  418a54:	b	418a00 <wcrtomb@plt+0x13f10>
  418a58:	sub	sp, sp, #0x80
  418a5c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418a60:	add	x10, x10, #0x4d0
  418a64:	movi	v0.16b, #0x40
  418a68:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418a6c:	stp	q0, q0, [x10, #224]
  418a70:	stp	q0, q0, [x10, #192]
  418a74:	stp	q0, q0, [x10, #160]
  418a78:	stp	q0, q0, [x10, #128]
  418a7c:	stp	q0, q0, [x10, #96]
  418a80:	stp	q0, q0, [x10, #64]
  418a84:	stp	q0, q0, [x10, #32]
  418a88:	stp	q0, q0, [x10]
  418a8c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418a90:	mov	x8, xzr
  418a94:	add	x9, x9, #0xdee
  418a98:	add	x10, x10, #0x4c0
  418a9c:	stp	x29, x30, [sp, #32]
  418aa0:	stp	x28, x27, [sp, #48]
  418aa4:	stp	x26, x25, [sp, #64]
  418aa8:	stp	x24, x23, [sp, #80]
  418aac:	stp	x22, x21, [sp, #96]
  418ab0:	stp	x20, x19, [sp, #112]
  418ab4:	add	x29, sp, #0x20
  418ab8:	str	x0, [sp]
  418abc:	ldrb	w11, [x9, x8]
  418ac0:	add	x11, x10, x11
  418ac4:	strb	w8, [x11, #16]
  418ac8:	add	x8, x8, #0x1
  418acc:	cmp	x8, #0x40
  418ad0:	b.ne	418abc <wcrtomb@plt+0x13fcc>  // b.any
  418ad4:	bl	41e610 <wcrtomb@plt+0x19b20>
  418ad8:	mov	w0, wzr
  418adc:	bl	405d0c <wcrtomb@plt+0x121c>
  418ae0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418ae4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418ae8:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418aec:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418af0:	adrp	x28, 461000 <_obstack_memory_used@@Base+0x15e3c>
  418af4:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418af8:	mov	w26, wzr
  418afc:	add	x20, x20, #0xc10
  418b00:	add	x21, x21, #0xb98
  418b04:	add	x22, x22, #0xd02
  418b08:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418b0c:	add	x23, x23, #0xb80
  418b10:	add	x28, x28, #0x93e
  418b14:	add	x27, x27, #0xbd8
  418b18:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418b1c:	mov	x0, x20
  418b20:	bl	425f4c <wcrtomb@plt+0x2145c>
  418b24:	mov	x0, x21
  418b28:	mov	x1, x20
  418b2c:	mov	w2, wzr
  418b30:	bl	41901c <wcrtomb@plt+0x1452c>
  418b34:	cmp	w0, #0x5
  418b38:	b.hi	418f78 <wcrtomb@plt+0x14488>  // b.pmore
  418b3c:	mov	w8, w0
  418b40:	adr	x9, 418b50 <wcrtomb@plt+0x14060>
  418b44:	ldrh	w10, [x22, x8, lsl #1]
  418b48:	add	x9, x9, x10, lsl #2
  418b4c:	br	x9
  418b50:	ldr	x0, [x25, #2968]
  418b54:	mov	w3, #0x1                   	// #1
  418b58:	mov	x1, x20
  418b5c:	mov	x2, x23
  418b60:	bl	4194a0 <wcrtomb@plt+0x149b0>
  418b64:	ldr	x0, [x20, #8]
  418b68:	bl	41eb7c <wcrtomb@plt+0x1a08c>
  418b6c:	tbz	w0, #0, 418be0 <wcrtomb@plt+0x140f0>
  418b70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418b74:	ldr	x8, [x8, #3040]
  418b78:	tbnz	x8, #63, 418bc8 <wcrtomb@plt+0x140d8>
  418b7c:	ldr	x8, [x25, #2968]
  418b80:	mov	w1, #0xc                   	// #12
  418b84:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418b88:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418b8c:	add	x0, x8, #0x88
  418b90:	mov	x2, x28
  418b94:	mov	w5, wzr
  418b98:	mov	w6, wzr
  418b9c:	bl	419cbc <wcrtomb@plt+0x151cc>
  418ba0:	ldr	x8, [x27]
  418ba4:	cmp	x0, x8
  418ba8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418bac:	add	x8, x8, #0xcf8
  418bb0:	stp	x0, xzr, [x8]
  418bb4:	b.lt	418be0 <wcrtomb@plt+0x140f0>  // b.tstop
  418bb8:	b.gt	418bc8 <wcrtomb@plt+0x140d8>
  418bbc:	ldr	x8, [x27, #8]
  418bc0:	cmp	w8, #0x0
  418bc4:	b.gt	418be0 <wcrtomb@plt+0x140f0>
  418bc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418bcc:	add	x8, x8, #0xc18
  418bd0:	ldr	x0, [x8]
  418bd4:	ldr	x1, [x8, #384]
  418bd8:	bl	40ee74 <wcrtomb@plt+0xa384>
  418bdc:	tbz	w0, #0, 418ec4 <wcrtomb@plt+0x143d4>
  418be0:	ldr	x8, [x25, #2968]
  418be4:	ldrb	w0, [x8, #156]
  418be8:	cmp	w0, #0x56
  418bec:	b.eq	418ecc <wcrtomb@plt+0x143dc>  // b.none
  418bf0:	cmp	w0, #0x4d
  418bf4:	b.eq	418ecc <wcrtomb@plt+0x143dc>  // b.none
  418bf8:	cmp	w0, #0x35
  418bfc:	b.ne	418c6c <wcrtomb@plt+0x1417c>  // b.any
  418c00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418c04:	ldrb	w8, [x8, #3690]
  418c08:	cbz	w8, 418c6c <wcrtomb@plt+0x1417c>
  418c0c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418c10:	ldr	x8, [x8, #4000]
  418c14:	mov	x26, x25
  418c18:	mov	x25, x22
  418c1c:	cbz	x8, 418c24 <wcrtomb@plt+0x14134>
  418c20:	blr	x8
  418c24:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418c28:	mov	w2, #0x5                   	// #5
  418c2c:	mov	x0, xzr
  418c30:	add	x1, x1, #0xe2e
  418c34:	bl	4048b0 <dcgettext@plt>
  418c38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418c3c:	ldr	x8, [x8, #3096]
  418c40:	mov	x24, x0
  418c44:	mov	x0, x8
  418c48:	bl	448e5c <argp_parse@@Base+0xe7b0>
  418c4c:	mov	x3, x0
  418c50:	mov	w0, wzr
  418c54:	mov	w1, wzr
  418c58:	mov	x2, x24
  418c5c:	bl	403f60 <error@plt>
  418c60:	mov	x22, x25
  418c64:	mov	x25, x26
  418c68:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418c6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418c70:	ldrb	w8, [x8, #3465]
  418c74:	cbz	w8, 418e88 <wcrtomb@plt+0x14398>
  418c78:	mov	w26, #0x1                   	// #1
  418c7c:	mov	x0, x20
  418c80:	bl	41eccc <wcrtomb@plt+0x1a1dc>
  418c84:	tbz	w0, #0, 418b1c <wcrtomb@plt+0x1402c>
  418c88:	b	418f78 <wcrtomb@plt+0x14488>
  418c8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418c90:	ldrb	w8, [x8, #3665]
  418c94:	cbz	w8, 418d04 <wcrtomb@plt+0x14214>
  418c98:	ldr	x22, [x19, #2824]
  418c9c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418ca0:	mov	w2, #0x5                   	// #5
  418ca4:	mov	x0, xzr
  418ca8:	add	x1, x1, #0xe3b
  418cac:	bl	4048b0 <dcgettext@plt>
  418cb0:	mov	x24, x27
  418cb4:	mov	x27, x20
  418cb8:	mov	x20, x21
  418cbc:	mov	x21, x25
  418cc0:	mov	x19, x23
  418cc4:	mov	x23, x0
  418cc8:	bl	4052a4 <wcrtomb@plt+0x7b4>
  418ccc:	add	x1, sp, #0x8
  418cd0:	bl	440290 <argp_parse@@Base+0x5be4>
  418cd4:	mov	x3, x0
  418cd8:	mov	w1, #0x1                   	// #1
  418cdc:	mov	x0, x22
  418ce0:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418ce4:	mov	x2, x23
  418ce8:	add	x22, x22, #0xd02
  418cec:	mov	x23, x19
  418cf0:	mov	x21, x20
  418cf4:	mov	x20, x27
  418cf8:	mov	x27, x24
  418cfc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418d00:	bl	404600 <__fprintf_chk@plt>
  418d04:	ldr	x0, [x25, #2968]
  418d08:	bl	405640 <wcrtomb@plt+0xb50>
  418d0c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418d10:	ldrb	w8, [x8, #3069]
  418d14:	cbnz	w8, 418ee0 <wcrtomb@plt+0x143f0>
  418d18:	b	418fa0 <wcrtomb@plt+0x144b0>
  418d1c:	ldr	x0, [x25, #2968]
  418d20:	bl	405640 <wcrtomb@plt+0xb50>
  418d24:	cmp	w26, #0x3
  418d28:	b.hi	418e28 <wcrtomb@plt+0x14338>  // b.pmore
  418d2c:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418d30:	mov	w8, w26
  418d34:	add	x11, x11, #0xd0e
  418d38:	adr	x9, 418d4c <wcrtomb@plt+0x1425c>
  418d3c:	ldrb	w10, [x11, x8]
  418d40:	add	x9, x9, x10, lsl #2
  418d44:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418d48:	br	x9
  418d4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418d50:	ldrb	w8, [x8, #3665]
  418d54:	cbz	w8, 418dd8 <wcrtomb@plt+0x142e8>
  418d58:	bl	4052a4 <wcrtomb@plt+0x7b4>
  418d5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418d60:	ldr	x8, [x8, #2960]
  418d64:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418d68:	ldr	x9, [x9, #2976]
  418d6c:	mov	x28, x23
  418d70:	ldr	x23, [x19, #2824]
  418d74:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418d78:	sub	x8, x0, x8
  418d7c:	mov	w2, #0x5                   	// #5
  418d80:	mov	x0, xzr
  418d84:	add	x1, x1, #0xe77
  418d88:	mov	x21, x22
  418d8c:	mov	x22, x24
  418d90:	sub	x25, x8, x9
  418d94:	bl	4048b0 <dcgettext@plt>
  418d98:	mov	x26, x0
  418d9c:	add	x1, sp, #0x8
  418da0:	mov	x0, x25
  418da4:	mov	x22, x21
  418da8:	bl	440290 <argp_parse@@Base+0x5be4>
  418dac:	mov	x3, x0
  418db0:	mov	w1, #0x1                   	// #1
  418db4:	mov	x0, x23
  418db8:	mov	x23, x28
  418dbc:	adrp	x28, 461000 <_obstack_memory_used@@Base+0x15e3c>
  418dc0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418dc4:	mov	x2, x26
  418dc8:	add	x28, x28, #0x93e
  418dcc:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418dd0:	add	x21, x21, #0xb98
  418dd4:	bl	404600 <__fprintf_chk@plt>
  418dd8:	ldr	x8, [x24, #4000]
  418ddc:	cbz	x8, 418de4 <wcrtomb@plt+0x142f4>
  418de0:	blr	x8
  418de4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  418de8:	mov	w2, #0x5                   	// #5
  418dec:	mov	x0, xzr
  418df0:	add	x1, x1, #0xca4
  418df4:	mov	w26, #0x5                   	// #5
  418df8:	bl	4048b0 <dcgettext@plt>
  418dfc:	mov	x2, x0
  418e00:	mov	w0, wzr
  418e04:	mov	w1, wzr
  418e08:	bl	403f60 <error@plt>
  418e0c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418e10:	mov	w9, #0x2                   	// #2
  418e14:	str	w9, [x8, #2352]
  418e18:	mov	x0, x20
  418e1c:	bl	41eccc <wcrtomb@plt+0x1a1dc>
  418e20:	tbz	w0, #0, 418b1c <wcrtomb@plt+0x1402c>
  418e24:	b	418f78 <wcrtomb@plt+0x14488>
  418e28:	mov	w26, #0x5                   	// #5
  418e2c:	mov	x0, x20
  418e30:	bl	41eccc <wcrtomb@plt+0x1a1dc>
  418e34:	tbz	w0, #0, 418b1c <wcrtomb@plt+0x1402c>
  418e38:	b	418f78 <wcrtomb@plt+0x14488>
  418e3c:	ldr	x8, [x24, #4000]
  418e40:	cbz	x8, 418e48 <wcrtomb@plt+0x14358>
  418e44:	blr	x8
  418e48:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  418e4c:	mov	w2, #0x5                   	// #5
  418e50:	mov	x0, xzr
  418e54:	add	x1, x1, #0xfa7
  418e58:	bl	4048b0 <dcgettext@plt>
  418e5c:	mov	x2, x0
  418e60:	mov	w0, wzr
  418e64:	mov	w1, wzr
  418e68:	bl	403f60 <error@plt>
  418e6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418e70:	mov	w9, #0x2                   	// #2
  418e74:	str	w9, [x8, #2352]
  418e78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418e7c:	ldrb	w8, [x8, #3665]
  418e80:	cbnz	w8, 418d58 <wcrtomb@plt+0x14268>
  418e84:	b	418dd8 <wcrtomb@plt+0x142e8>
  418e88:	mov	x8, x25
  418e8c:	ldr	x0, [x8, #2968]
  418e90:	mov	x25, x22
  418e94:	mov	x22, x23
  418e98:	mov	x27, x8
  418e9c:	ldrb	w23, [x0, #156]
  418ea0:	bl	405640 <wcrtomb@plt+0xb50>
  418ea4:	mov	x0, x20
  418ea8:	bl	404ca8 <wcrtomb@plt+0x1b8>
  418eac:	ldrb	w8, [x20, #272]
  418eb0:	cbz	w8, 418ef0 <wcrtomb@plt+0x14400>
  418eb4:	mov	x0, x20
  418eb8:	bl	4206f0 <wcrtomb@plt+0x1bc00>
  418ebc:	mov	x23, x22
  418ec0:	b	418f08 <wcrtomb@plt+0x14418>
  418ec4:	ldr	x8, [x25, #2968]
  418ec8:	ldrb	w0, [x8, #156]
  418ecc:	mov	x1, x20
  418ed0:	bl	418914 <wcrtomb@plt+0x13e24>
  418ed4:	ldr	x8, [sp]
  418ed8:	blr	x8
  418edc:	mov	w26, #0x1                   	// #1
  418ee0:	mov	x0, x20
  418ee4:	bl	41eccc <wcrtomb@plt+0x1a1dc>
  418ee8:	tbz	w0, #0, 418b1c <wcrtomb@plt+0x1402c>
  418eec:	b	418f78 <wcrtomb@plt+0x14488>
  418ef0:	cmp	w23, #0x35
  418ef4:	mov	x23, x22
  418ef8:	b.eq	418f08 <wcrtomb@plt+0x14418>  // b.none
  418efc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418f00:	ldr	x0, [x8, #3224]
  418f04:	bl	41acf0 <wcrtomb@plt+0x16200>
  418f08:	bl	404d34 <wcrtomb@plt+0x244>
  418f0c:	mov	x22, x25
  418f10:	mov	x25, x27
  418f14:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418f18:	mov	w26, #0x1                   	// #1
  418f1c:	add	x27, x27, #0xbd8
  418f20:	mov	x0, x20
  418f24:	bl	41eccc <wcrtomb@plt+0x1a1dc>
  418f28:	tbz	w0, #0, 418b1c <wcrtomb@plt+0x1402c>
  418f2c:	b	418f78 <wcrtomb@plt+0x14488>
  418f30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418f34:	ldrb	w8, [x8, #3665]
  418f38:	cbz	w8, 418f78 <wcrtomb@plt+0x14488>
  418f3c:	ldr	x19, [x19, #2824]
  418f40:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  418f44:	add	x1, x1, #0xe5a
  418f48:	mov	w2, #0x5                   	// #5
  418f4c:	mov	x0, xzr
  418f50:	bl	4048b0 <dcgettext@plt>
  418f54:	mov	x20, x0
  418f58:	bl	4052a4 <wcrtomb@plt+0x7b4>
  418f5c:	add	x1, sp, #0x8
  418f60:	bl	440290 <argp_parse@@Base+0x5be4>
  418f64:	mov	x3, x0
  418f68:	mov	w1, #0x1                   	// #1
  418f6c:	mov	x0, x19
  418f70:	mov	x2, x20
  418f74:	bl	404600 <__fprintf_chk@plt>
  418f78:	bl	405974 <wcrtomb@plt+0xe84>
  418f7c:	bl	41ed78 <wcrtomb@plt+0x1a288>
  418f80:	ldp	x20, x19, [sp, #112]
  418f84:	ldp	x22, x21, [sp, #96]
  418f88:	ldp	x24, x23, [sp, #80]
  418f8c:	ldp	x26, x25, [sp, #64]
  418f90:	ldp	x28, x27, [sp, #48]
  418f94:	ldp	x29, x30, [sp, #32]
  418f98:	add	sp, sp, #0x80
  418f9c:	ret
  418fa0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418fa4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418fa8:	add	x0, x0, #0xb98
  418fac:	add	x1, x1, #0xc10
  418fb0:	mov	w2, wzr
  418fb4:	bl	41901c <wcrtomb@plt+0x1452c>
  418fb8:	cmp	w0, #0x3
  418fbc:	b.eq	418f78 <wcrtomb@plt+0x14488>  // b.none
  418fc0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  418fc4:	ldrb	w8, [x8, #3712]
  418fc8:	tbz	w8, #0, 418f78 <wcrtomb@plt+0x14488>
  418fcc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  418fd0:	ldr	x8, [x8, #4000]
  418fd4:	cbz	x8, 418fdc <wcrtomb@plt+0x144ec>
  418fd8:	blr	x8
  418fdc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  418fe0:	add	x1, x1, #0x7ab
  418fe4:	mov	w2, #0x5                   	// #5
  418fe8:	mov	x0, xzr
  418fec:	bl	4048b0 <dcgettext@plt>
  418ff0:	mov	x19, x0
  418ff4:	bl	4052a4 <wcrtomb@plt+0x7b4>
  418ff8:	add	x1, sp, #0x8
  418ffc:	bl	440290 <argp_parse@@Base+0x5be4>
  419000:	mov	x3, x0
  419004:	mov	w0, wzr
  419008:	mov	w1, wzr
  41900c:	mov	x2, x19
  419010:	bl	403f60 <error@plt>
  419014:	b	418f78 <wcrtomb@plt+0x14488>
  419018:	bl	404560 <abort@plt>
  41901c:	sub	sp, sp, #0x1a0
  419020:	stp	x29, x30, [sp, #320]
  419024:	stp	x28, x27, [sp, #336]
  419028:	stp	x26, x25, [sp, #352]
  41902c:	stp	x24, x23, [sp, #368]
  419030:	stp	x22, x21, [sp, #384]
  419034:	stp	x20, x19, [sp, #400]
  419038:	add	x29, sp, #0x140
  41903c:	mov	w23, w2
  419040:	mov	x19, x1
  419044:	mov	x24, x0
  419048:	bl	405310 <wcrtomb@plt+0x820>
  41904c:	str	x0, [x24]
  419050:	cbz	x0, 4192f4 <wcrtomb@plt+0x14804>
  419054:	mov	x21, #0x2003                	// #8195
  419058:	movk	x21, #0x1000, lsl #16
  41905c:	adrp	x25, 462000 <_obstack_memory_used@@Base+0x16e3c>
  419060:	adrp	x27, 461000 <_obstack_memory_used@@Base+0x15e3c>
  419064:	mov	x22, x0
  419068:	add	x8, x19, #0x158
  41906c:	mov	w20, #0x1                   	// #1
  419070:	movk	x21, #0x2000, lsl #32
  419074:	add	x25, x25, #0xd12
  419078:	add	x27, x27, #0x938
  41907c:	stp	xzr, xzr, [sp, #8]
  419080:	stp	xzr, xzr, [sp, #32]
  419084:	str	x8, [sp, #24]
  419088:	b	4190cc <wcrtomb@plt+0x145dc>
  41908c:	add	x0, x22, #0x7c
  419090:	mov	w1, #0xc                   	// #12
  419094:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  419098:	mov	x2, x27
  41909c:	mov	x3, xzr
  4190a0:	mov	w5, wzr
  4190a4:	mov	w6, wzr
  4190a8:	bl	419cbc <wcrtomb@plt+0x151cc>
  4190ac:	mov	x2, x0
  4190b0:	ldr	x0, [sp, #24]
  4190b4:	mov	x1, x22
  4190b8:	bl	413358 <wcrtomb@plt+0xe868>
  4190bc:	bl	405310 <wcrtomb@plt+0x820>
  4190c0:	mov	x22, x0
  4190c4:	str	x0, [x24]
  4190c8:	cbz	x0, 4192f4 <wcrtomb@plt+0x14804>
  4190cc:	mov	x0, x22
  4190d0:	mov	w1, wzr
  4190d4:	bl	419ae0 <wcrtomb@plt+0x14ff0>
  4190d8:	cmp	w0, #0x1
  4190dc:	b.ne	41947c <wcrtomb@plt+0x1498c>  // b.any
  4190e0:	ldrb	w8, [x22, #156]
  4190e4:	cmp	w8, #0x31
  4190e8:	b.ne	4190f8 <wcrtomb@plt+0x14608>  // b.any
  4190ec:	mov	x0, xzr
  4190f0:	str	xzr, [x19, #136]
  4190f4:	b	419120 <wcrtomb@plt+0x14630>
  4190f8:	add	x0, x22, #0x7c
  4190fc:	mov	w1, #0xc                   	// #12
  419100:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  419104:	mov	x2, x27
  419108:	mov	x3, xzr
  41910c:	mov	w5, wzr
  419110:	mov	w6, wzr
  419114:	bl	419cbc <wcrtomb@plt+0x151cc>
  419118:	str	x0, [x19, #136]
  41911c:	tbnz	x0, #63, 419324 <wcrtomb@plt+0x14834>
  419120:	ldrb	w8, [x22, #156]
  419124:	sub	w8, w8, #0x4b
  419128:	cmp	w8, #0x2d
  41912c:	b.hi	419304 <wcrtomb@plt+0x14814>  // b.pmore
  419130:	lsl	x9, x20, x8
  419134:	tst	x9, x21
  419138:	b.eq	419304 <wcrtomb@plt+0x14814>  // b.none
  41913c:	cmp	w23, #0x1
  419140:	b.eq	4192fc <wcrtomb@plt+0x1480c>  // b.none
  419144:	cmp	w8, #0x2d
  419148:	b.hi	4190bc <wcrtomb@plt+0x145cc>  // b.pmore
  41914c:	adr	x9, 41908c <wcrtomb@plt+0x1459c>
  419150:	ldrb	w10, [x25, x8]
  419154:	add	x9, x9, x10, lsl #2
  419158:	br	x9
  41915c:	and	x8, x0, #0x1ff
  419160:	mov	w9, #0x200                 	// #512
  419164:	sub	x8, x9, x8
  419168:	tst	x0, #0x1ff
  41916c:	csel	x8, xzr, x8, eq  // eq = none
  419170:	mov	x20, x25
  419174:	add	x25, x8, x0
  419178:	add	x26, x25, #0x200
  41917c:	cmp	x26, x0
  419180:	b.cc	41949c <wcrtomb@plt+0x149ac>  // b.lo, b.ul, b.last
  419184:	add	x0, x25, #0x201
  419188:	bl	44a010 <argp_parse@@Base+0xf964>
  41918c:	ldrb	w8, [x22, #156]
  419190:	mov	x28, x0
  419194:	lsr	x26, x26, #9
  419198:	cmp	w8, #0x4c
  41919c:	b.ne	4191b4 <wcrtomb@plt+0x146c4>  // b.any
  4191a0:	ldr	x0, [sp, #32]
  4191a4:	bl	4046b0 <free@plt>
  4191a8:	str	x28, [sp, #32]
  4191ac:	str	x26, [sp, #8]
  4191b0:	b	4191c4 <wcrtomb@plt+0x146d4>
  4191b4:	ldr	x0, [sp, #40]
  4191b8:	bl	4046b0 <free@plt>
  4191bc:	str	x28, [sp, #40]
  4191c0:	str	x26, [sp, #16]
  4191c4:	mov	x0, x22
  4191c8:	bl	405640 <wcrtomb@plt+0xb50>
  4191cc:	mov	w2, #0x200                 	// #512
  4191d0:	mov	x0, x28
  4191d4:	mov	x1, x22
  4191d8:	bl	403e80 <memcpy@plt>
  4191dc:	add	x22, x28, #0x200
  4191e0:	cbz	x25, 4192e4 <wcrtomb@plt+0x147f4>
  4191e4:	bl	405310 <wcrtomb@plt+0x820>
  4191e8:	cbz	x0, 4192a4 <wcrtomb@plt+0x147b4>
  4191ec:	mov	x28, x0
  4191f0:	bl	405684 <wcrtomb@plt+0xb94>
  4191f4:	cmp	x0, x25
  4191f8:	csel	x26, x25, x0, hi  // hi = pmore
  4191fc:	mov	x0, x22
  419200:	mov	x1, x28
  419204:	mov	x2, x26
  419208:	bl	403e80 <memcpy@plt>
  41920c:	add	x8, x28, x26
  419210:	sub	x0, x8, #0x1
  419214:	add	x22, x22, x26
  419218:	bl	405640 <wcrtomb@plt+0xb50>
  41921c:	subs	x25, x25, x26
  419220:	b.ne	4191e4 <wcrtomb@plt+0x146f4>  // b.any
  419224:	b	4192e4 <wcrtomb@plt+0x147f4>
  419228:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41922c:	ldr	x0, [x8, #1168]
  419230:	cbnz	x0, 419244 <wcrtomb@plt+0x14754>
  419234:	mov	w0, #0x200                 	// #512
  419238:	bl	44a010 <argp_parse@@Base+0xf964>
  41923c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419240:	str	x0, [x8, #1168]
  419244:	mov	w2, #0x200                 	// #512
  419248:	mov	x1, x22
  41924c:	bl	403e80 <memcpy@plt>
  419250:	movi	v0.2d, #0x0
  419254:	add	x0, x22, #0x7c
  419258:	mov	w1, #0xc                   	// #12
  41925c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  419260:	mov	x2, x27
  419264:	mov	x3, xzr
  419268:	mov	w5, wzr
  41926c:	mov	w6, wzr
  419270:	stp	q0, q0, [sp, #48]
  419274:	bl	419cbc <wcrtomb@plt+0x151cc>
  419278:	mov	x2, x0
  41927c:	add	x0, sp, #0x30
  419280:	mov	x1, x22
  419284:	bl	413358 <wcrtomb@plt+0xe868>
  419288:	add	x0, sp, #0x30
  41928c:	bl	413090 <wcrtomb@plt+0xe5a0>
  419290:	add	x0, sp, #0x30
  419294:	bl	41260c <wcrtomb@plt+0xdb1c>
  419298:	cmp	w23, #0x2
  41929c:	b.ne	4190bc <wcrtomb@plt+0x145cc>  // b.any
  4192a0:	b	4192fc <wcrtomb@plt+0x1480c>
  4192a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4192a8:	ldr	x8, [x8, #4000]
  4192ac:	cbz	x8, 4192b4 <wcrtomb@plt+0x147c4>
  4192b0:	blr	x8
  4192b4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4192b8:	mov	w2, #0x5                   	// #5
  4192bc:	mov	x0, xzr
  4192c0:	add	x1, x1, #0x818
  4192c4:	bl	4048b0 <dcgettext@plt>
  4192c8:	mov	x2, x0
  4192cc:	mov	w0, wzr
  4192d0:	mov	w1, wzr
  4192d4:	bl	403f60 <error@plt>
  4192d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4192dc:	mov	w9, #0x2                   	// #2
  4192e0:	str	w9, [x8, #2352]
  4192e4:	strb	wzr, [x22]
  4192e8:	mov	x25, x20
  4192ec:	mov	w20, #0x1                   	// #1
  4192f0:	b	4190bc <wcrtomb@plt+0x145cc>
  4192f4:	mov	w0, #0x4                   	// #4
  4192f8:	b	41947c <wcrtomb@plt+0x1498c>
  4192fc:	mov	w0, #0x2                   	// #2
  419300:	b	41947c <wcrtomb@plt+0x1498c>
  419304:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419308:	ldr	x0, [x20, #2952]
  41930c:	bl	4046b0 <free@plt>
  419310:	ldr	x24, [sp, #32]
  419314:	cbz	x24, 41932c <wcrtomb@plt+0x1483c>
  419318:	ldr	x9, [sp, #8]
  41931c:	add	x23, x24, #0x200
  419320:	b	4193d4 <wcrtomb@plt+0x148e4>
  419324:	mov	w0, #0x5                   	// #5
  419328:	b	41947c <wcrtomb@plt+0x1498c>
  41932c:	ldrb	w8, [x22, #345]
  419330:	cbz	w8, 41939c <wcrtomb@plt+0x148ac>
  419334:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  419338:	add	x0, x22, #0x101
  41933c:	add	x1, x1, #0x2a6
  419340:	add	x21, sp, #0x30
  419344:	bl	404610 <strcmp@plt>
  419348:	cbnz	w0, 4193a0 <wcrtomb@plt+0x148b0>
  41934c:	add	x8, x22, #0x159
  419350:	ldp	q1, q0, [x8]
  419354:	add	x0, sp, #0x30
  419358:	stp	q1, q0, [sp, #48]
  41935c:	ldp	q1, q0, [x8, #64]
  419360:	ldp	q3, q2, [x8, #32]
  419364:	stp	q1, q0, [sp, #112]
  419368:	stp	q3, q2, [sp, #80]
  41936c:	ldur	q0, [x8, #139]
  419370:	ldp	q2, q1, [x8, #112]
  419374:	ldr	q3, [x8, #96]
  419378:	strb	wzr, [sp, #203]
  41937c:	stur	q0, [sp, #187]
  419380:	stp	q2, q1, [sp, #160]
  419384:	str	q3, [sp, #144]
  419388:	bl	403f00 <strlen@plt>
  41938c:	add	x21, x21, x0
  419390:	mov	w8, #0x2f                  	// #47
  419394:	strb	w8, [x21], #1
  419398:	b	4193a0 <wcrtomb@plt+0x148b0>
  41939c:	add	x21, sp, #0x30
  4193a0:	ldp	q1, q0, [x22, #16]
  4193a4:	ldr	q2, [x22]
  4193a8:	mov	x9, xzr
  4193ac:	add	x23, sp, #0x30
  4193b0:	stp	q1, q0, [x21, #16]
  4193b4:	str	q2, [x21]
  4193b8:	ldr	w8, [x22, #96]
  4193bc:	ldp	q2, q0, [x22, #64]
  4193c0:	ldr	q1, [x22, #48]
  4193c4:	strb	wzr, [x21, #100]
  4193c8:	str	w8, [x21, #96]
  4193cc:	stp	q2, q0, [x21, #64]
  4193d0:	str	q1, [x21, #48]
  4193d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4193d8:	mov	x0, x19
  4193dc:	mov	x1, x23
  4193e0:	str	x24, [x20, #2952]
  4193e4:	str	x9, [x8, #2960]
  4193e8:	bl	41b60c <wcrtomb@plt+0x16b1c>
  4193ec:	add	x0, x19, #0x8
  4193f0:	mov	x1, x23
  4193f4:	bl	41b60c <wcrtomb@plt+0x16b1c>
  4193f8:	ldr	x0, [x19, #8]
  4193fc:	bl	43c1a0 <argp_parse@@Base+0x1af4>
  419400:	and	w8, w0, #0x1
  419404:	strb	w8, [x19, #16]
  419408:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41940c:	ldr	x0, [x20, #2984]
  419410:	bl	4046b0 <free@plt>
  419414:	ldr	x9, [sp, #40]
  419418:	cbz	x9, 419428 <wcrtomb@plt+0x14938>
  41941c:	ldr	x10, [sp, #16]
  419420:	add	x1, x9, #0x200
  419424:	b	419464 <wcrtomb@plt+0x14974>
  419428:	ldur	q0, [x22, #189]
  41942c:	ldur	q1, [x22, #173]
  419430:	ldur	q2, [x22, #157]
  419434:	mov	x10, xzr
  419438:	add	x1, sp, #0x30
  41943c:	stp	q1, q0, [sp, #64]
  419440:	str	q2, [sp, #48]
  419444:	ldur	w8, [x22, #253]
  419448:	ldur	q0, [x22, #205]
  41944c:	ldur	q1, [x22, #237]
  419450:	ldur	q2, [x22, #221]
  419454:	str	w8, [sp, #144]
  419458:	str	q0, [sp, #96]
  41945c:	strb	wzr, [sp, #148]
  419460:	stp	q2, q1, [sp, #112]
  419464:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419468:	add	x0, x19, #0x18
  41946c:	str	x9, [x20, #2984]
  419470:	str	x10, [x8, #2976]
  419474:	bl	41b60c <wcrtomb@plt+0x16b1c>
  419478:	mov	w0, #0x1                   	// #1
  41947c:	ldp	x20, x19, [sp, #400]
  419480:	ldp	x22, x21, [sp, #384]
  419484:	ldp	x24, x23, [sp, #368]
  419488:	ldp	x26, x25, [sp, #352]
  41948c:	ldp	x28, x27, [sp, #336]
  419490:	ldp	x29, x30, [sp, #320]
  419494:	add	sp, sp, #0x1a0
  419498:	ret
  41949c:	bl	40eb80 <wcrtomb@plt+0xa090>
  4194a0:	stp	x29, x30, [sp, #-80]!
  4194a4:	stp	x22, x21, [sp, #48]
  4194a8:	mov	x22, x2
  4194ac:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4194b0:	stp	x20, x19, [sp, #64]
  4194b4:	mov	w21, w3
  4194b8:	mov	x19, x1
  4194bc:	mov	x20, x0
  4194c0:	add	x0, x0, #0x64
  4194c4:	add	x2, x2, #0xa39
  4194c8:	mov	w1, #0x8                   	// #8
  4194cc:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4194d0:	mov	x4, #0xffffffffffffffff    	// #-1
  4194d4:	mov	w5, wzr
  4194d8:	mov	w6, wzr
  4194dc:	str	x25, [sp, #16]
  4194e0:	stp	x24, x23, [sp, #32]
  4194e4:	mov	x29, sp
  4194e8:	bl	419cbc <wcrtomb@plt+0x151cc>
  4194ec:	add	x24, x20, #0x101
  4194f0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4194f4:	mov	x23, x0
  4194f8:	add	x1, x1, #0x2a6
  4194fc:	mov	x0, x24
  419500:	and	w25, w23, #0xfff
  419504:	bl	404610 <strcmp@plt>
  419508:	cbz	w0, 419538 <wcrtomb@plt+0x14a48>
  41950c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  419510:	add	x1, x1, #0x45a
  419514:	mov	x0, x24
  419518:	bl	404610 <strcmp@plt>
  41951c:	cmp	x23, #0x1, lsl #12
  419520:	mov	w8, #0x2                   	// #2
  419524:	mov	w9, #0x6                   	// #6
  419528:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  41952c:	cmp	w0, #0x0
  419530:	csinc	w24, w8, wzr, eq  // eq = none
  419534:	b	419590 <wcrtomb@plt+0x14aa0>
  419538:	ldrb	w8, [x20, #475]
  41953c:	cbnz	w8, 419580 <wcrtomb@plt+0x14a90>
  419540:	ldrb	w8, [x20, #476]
  419544:	and	w8, w8, #0xf8
  419548:	cmp	w8, #0x30
  41954c:	b.ne	419580 <wcrtomb@plt+0x14a90>  // b.any
  419550:	ldrb	w8, [x20, #487]
  419554:	cmp	w8, #0x20
  419558:	b.ne	419580 <wcrtomb@plt+0x14a90>  // b.any
  41955c:	ldrb	w8, [x20, #488]
  419560:	and	w8, w8, #0xf8
  419564:	cmp	w8, #0x30
  419568:	b.ne	419580 <wcrtomb@plt+0x14a90>  // b.any
  41956c:	ldrb	w8, [x20, #499]
  419570:	cmp	w8, #0x20
  419574:	b.ne	419580 <wcrtomb@plt+0x14a90>  // b.any
  419578:	mov	w24, #0x5                   	// #5
  41957c:	b	419590 <wcrtomb@plt+0x14aa0>
  419580:	ldr	x8, [x19, #352]
  419584:	cmp	x8, #0x0
  419588:	mov	w8, #0x3                   	// #3
  41958c:	cinc	w24, w8, ne  // ne = any
  419590:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  419594:	add	x0, x20, #0x88
  419598:	add	x2, x2, #0x93e
  41959c:	mov	w1, #0xc                   	// #12
  4195a0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4195a4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4195a8:	mov	w5, wzr
  4195ac:	mov	w6, wzr
  4195b0:	str	w24, [x22]
  4195b4:	str	w25, [x19, #104]
  4195b8:	bl	419cbc <wcrtomb@plt+0x151cc>
  4195bc:	stp	x0, xzr, [x19, #232]
  4195c0:	ldrb	w8, [x20, #265]
  4195c4:	add	x23, x20, #0x109
  4195c8:	add	x0, x19, #0x20
  4195cc:	mov	w2, #0x20                  	// #32
  4195d0:	cmp	w8, #0x0
  4195d4:	csel	x1, xzr, x23, eq  // eq = none
  4195d8:	bl	41b658 <wcrtomb@plt+0x16b68>
  4195dc:	ldrb	w8, [x20, #297]
  4195e0:	add	x22, x20, #0x129
  4195e4:	add	x0, x19, #0x28
  4195e8:	mov	w2, #0x20                  	// #32
  4195ec:	cmp	w8, #0x0
  4195f0:	csel	x1, xzr, x22, eq  // eq = none
  4195f4:	bl	41b658 <wcrtomb@plt+0x16b68>
  4195f8:	mov	x0, x19
  4195fc:	bl	4128a4 <wcrtomb@plt+0xddb4>
  419600:	cmp	w24, #0x2
  419604:	b.ne	419644 <wcrtomb@plt+0x14b54>  // b.any
  419608:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41960c:	ldrb	w8, [x8, #3025]
  419610:	cbz	w8, 419644 <wcrtomb@plt+0x14b54>
  419614:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  419618:	add	x0, x20, #0x159
  41961c:	add	x2, x2, #0x93e
  419620:	mov	w1, #0xc                   	// #12
  419624:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  419628:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41962c:	mov	w5, wzr
  419630:	mov	w6, wzr
  419634:	bl	419cbc <wcrtomb@plt+0x151cc>
  419638:	str	x0, [x19, #216]
  41963c:	add	x0, x20, #0x165
  419640:	b	419678 <wcrtomb@plt+0x14b88>
  419644:	cmp	w24, #0x5
  419648:	b.ne	41978c <wcrtomb@plt+0x14c9c>  // b.any
  41964c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  419650:	add	x0, x20, #0x1dc
  419654:	add	x2, x2, #0x93e
  419658:	mov	w1, #0xc                   	// #12
  41965c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  419660:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  419664:	mov	w5, wzr
  419668:	mov	w6, wzr
  41966c:	bl	419cbc <wcrtomb@plt+0x151cc>
  419670:	str	x0, [x19, #216]
  419674:	add	x0, x20, #0x1e8
  419678:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41967c:	add	x2, x2, #0x93e
  419680:	mov	w1, #0xc                   	// #12
  419684:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  419688:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41968c:	mov	w5, wzr
  419690:	mov	w6, wzr
  419694:	bl	419cbc <wcrtomb@plt+0x151cc>
  419698:	stp	x0, xzr, [x19, #248]
  41969c:	str	xzr, [x19, #224]
  4196a0:	cbz	w21, 419708 <wcrtomb@plt+0x14c18>
  4196a4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4196a8:	ldrb	w8, [x21, #3664]
  4196ac:	cbz	w8, 419880 <wcrtomb@plt+0x14d90>
  4196b0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4196b4:	add	x0, x20, #0x6c
  4196b8:	add	x2, x2, #0xa40
  4196bc:	mov	w1, #0x8                   	// #8
  4196c0:	mov	w4, #0xffffffff            	// #-1
  4196c4:	mov	x3, xzr
  4196c8:	mov	w5, wzr
  4196cc:	mov	w6, wzr
  4196d0:	bl	419cbc <wcrtomb@plt+0x151cc>
  4196d4:	str	w0, [x19, #112]
  4196d8:	ldrb	w8, [x21, #3664]
  4196dc:	cbz	w8, 41989c <wcrtomb@plt+0x14dac>
  4196e0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4196e4:	add	x0, x20, #0x74
  4196e8:	add	x2, x2, #0xa4d
  4196ec:	mov	w1, #0x8                   	// #8
  4196f0:	mov	w4, #0xffffffff            	// #-1
  4196f4:	mov	x3, xzr
  4196f8:	mov	w5, wzr
  4196fc:	mov	w6, wzr
  419700:	bl	419cbc <wcrtomb@plt+0x151cc>
  419704:	str	w0, [x19, #116]
  419708:	ldrb	w8, [x20, #156]
  41970c:	sub	w8, w8, #0x33
  419710:	cmp	w8, #0x1
  419714:	b.hi	419784 <wcrtomb@plt+0x14c94>  // b.pmore
  419718:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41971c:	add	x0, x20, #0x149
  419720:	add	x2, x2, #0xac8
  419724:	mov	w1, #0x8                   	// #8
  419728:	mov	x3, #0xffffffff80000000    	// #-2147483648
  41972c:	mov	w4, #0x7fffffff            	// #2147483647
  419730:	mov	w5, wzr
  419734:	mov	w6, wzr
  419738:	bl	419cbc <wcrtomb@plt+0x151cc>
  41973c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  419740:	mov	x21, x0
  419744:	lsr	x22, x0, #12
  419748:	add	x0, x20, #0x151
  41974c:	add	x2, x2, #0xad0
  419750:	mov	w1, #0x8                   	// #8
  419754:	mov	x3, #0xffffffff80000000    	// #-2147483648
  419758:	mov	w4, #0x7fffffff            	// #2147483647
  41975c:	mov	w5, wzr
  419760:	mov	w6, wzr
  419764:	bl	419cbc <wcrtomb@plt+0x151cc>
  419768:	lsl	w8, w21, #8
  41976c:	and	x8, x8, #0xfff00
  419770:	bfi	x8, x22, #44, #20
  419774:	lsr	x9, x0, #8
  419778:	bfxil	x8, x0, #0, #8
  41977c:	bfi	x8, x9, #20, #24
  419780:	b	419800 <wcrtomb@plt+0x14d10>
  419784:	mov	x8, xzr
  419788:	b	419800 <wcrtomb@plt+0x14d10>
  41978c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419790:	add	x8, x8, #0xe78
  419794:	ldr	q0, [x8]
  419798:	cmp	w24, #0x1
  41979c:	stur	q0, [x19, #248]
  4197a0:	ldr	q0, [x8]
  4197a4:	stur	q0, [x19, #216]
  4197a8:	b.ne	4196a0 <wcrtomb@plt+0x14bb0>  // b.any
  4197ac:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4197b0:	add	x0, x20, #0x6c
  4197b4:	add	x2, x2, #0xa40
  4197b8:	mov	w1, #0x8                   	// #8
  4197bc:	mov	w4, #0xffffffff            	// #-1
  4197c0:	mov	x3, xzr
  4197c4:	mov	w5, wzr
  4197c8:	mov	w6, wzr
  4197cc:	bl	419cbc <wcrtomb@plt+0x151cc>
  4197d0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4197d4:	str	w0, [x19, #112]
  4197d8:	add	x0, x20, #0x74
  4197dc:	add	x2, x2, #0xa4d
  4197e0:	mov	w1, #0x8                   	// #8
  4197e4:	mov	w4, #0xffffffff            	// #-1
  4197e8:	mov	x3, xzr
  4197ec:	mov	w5, wzr
  4197f0:	mov	w6, wzr
  4197f4:	bl	419cbc <wcrtomb@plt+0x151cc>
  4197f8:	mov	x8, xzr
  4197fc:	str	w0, [x19, #116]
  419800:	mov	x0, x19
  419804:	str	x8, [x19, #120]
  419808:	bl	412aac <wcrtomb@plt+0xdfbc>
  41980c:	mov	x0, x19
  419810:	bl	420448 <wcrtomb@plt+0x1b958>
  419814:	tbz	w0, #0, 419828 <wcrtomb@plt+0x14d38>
  419818:	mov	x0, x19
  41981c:	bl	4204f0 <wcrtomb@plt+0x1ba00>
  419820:	add	x8, x19, #0x110
  419824:	b	419860 <wcrtomb@plt+0x14d70>
  419828:	strb	wzr, [x19, #272]
  41982c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419830:	ldr	w8, [x8, #2944]
  419834:	orr	w8, w8, #0x4
  419838:	cmp	w8, #0x6
  41983c:	b.ne	419854 <wcrtomb@plt+0x14d64>  // b.any
  419840:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419844:	ldr	x8, [x8, #2968]
  419848:	ldrb	w8, [x8, #156]
  41984c:	cmp	w8, #0x44
  419850:	b.eq	41985c <wcrtomb@plt+0x14d6c>  // b.none
  419854:	ldr	x8, [x19, #384]
  419858:	cbz	x8, 419868 <wcrtomb@plt+0x14d78>
  41985c:	add	x8, x19, #0x178
  419860:	mov	w9, #0x1                   	// #1
  419864:	strb	w9, [x8]
  419868:	ldp	x20, x19, [sp, #64]
  41986c:	ldp	x22, x21, [sp, #48]
  419870:	ldp	x24, x23, [sp, #32]
  419874:	ldr	x25, [sp, #16]
  419878:	ldp	x29, x30, [sp], #80
  41987c:	ret
  419880:	ldrb	w8, [x23]
  419884:	cbz	w8, 4196b0 <wcrtomb@plt+0x14bc0>
  419888:	add	x1, x19, #0x70
  41988c:	mov	x0, x23
  419890:	bl	41d374 <wcrtomb@plt+0x18884>
  419894:	cbnz	w0, 4196d8 <wcrtomb@plt+0x14be8>
  419898:	b	4196b0 <wcrtomb@plt+0x14bc0>
  41989c:	ldrb	w8, [x22]
  4198a0:	cbz	w8, 4196e0 <wcrtomb@plt+0x14bf0>
  4198a4:	add	x1, x19, #0x74
  4198a8:	mov	x0, x22
  4198ac:	bl	41d42c <wcrtomb@plt+0x1893c>
  4198b0:	cbnz	w0, 419708 <wcrtomb@plt+0x14c18>
  4198b4:	b	4196e0 <wcrtomb@plt+0x14bf0>
  4198b8:	stp	x29, x30, [sp, #-32]!
  4198bc:	stp	x20, x19, [sp, #16]
  4198c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4198c4:	ldrb	w8, [x8, #3465]
  4198c8:	mov	x29, sp
  4198cc:	cbz	w8, 4198dc <wcrtomb@plt+0x14dec>
  4198d0:	ldp	x20, x19, [sp, #16]
  4198d4:	ldp	x29, x30, [sp], #32
  4198d8:	ret
  4198dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4198e0:	ldr	x0, [x8, #2968]
  4198e4:	ldrb	w20, [x0, #156]
  4198e8:	bl	405640 <wcrtomb@plt+0xb50>
  4198ec:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4198f0:	add	x19, x19, #0xc10
  4198f4:	mov	x0, x19
  4198f8:	bl	404ca8 <wcrtomb@plt+0x1b8>
  4198fc:	ldrb	w8, [x19, #272]
  419900:	cbz	w8, 41991c <wcrtomb@plt+0x14e2c>
  419904:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419908:	add	x0, x0, #0xc10
  41990c:	bl	4206f0 <wcrtomb@plt+0x1bc00>
  419910:	ldp	x20, x19, [sp, #16]
  419914:	ldp	x29, x30, [sp], #32
  419918:	b	404d34 <wcrtomb@plt+0x244>
  41991c:	cmp	w20, #0x35
  419920:	b.eq	419910 <wcrtomb@plt+0x14e20>  // b.none
  419924:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419928:	ldr	x0, [x8, #3224]
  41992c:	bl	41acf0 <wcrtomb@plt+0x16200>
  419930:	ldp	x20, x19, [sp, #16]
  419934:	ldp	x29, x30, [sp], #32
  419938:	b	404d34 <wcrtomb@plt+0x244>
  41993c:	stp	x29, x30, [sp, #-64]!
  419940:	str	x23, [sp, #16]
  419944:	stp	x22, x21, [sp, #32]
  419948:	stp	x20, x19, [sp, #48]
  41994c:	mov	x29, sp
  419950:	bl	4052a4 <wcrtomb@plt+0x7b4>
  419954:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419958:	ldr	w8, [x22, #3636]
  41995c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419960:	cbz	w8, 4199f8 <wcrtomb@plt+0x14f08>
  419964:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419968:	ldr	w8, [x8, #2944]
  41996c:	ldr	x20, [x21, #2968]
  419970:	mov	x19, x0
  419974:	cmp	w8, #0x4
  419978:	b.ne	4199a0 <wcrtomb@plt+0x14eb0>  // b.any
  41997c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419980:	ldr	x8, [x8, #2864]
  419984:	cbz	x8, 4199a0 <wcrtomb@plt+0x14eb0>
  419988:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41998c:	ldrb	w8, [x23, #1213]
  419990:	cbnz	w8, 4199a0 <wcrtomb@plt+0x14eb0>
  419994:	bl	41a4d8 <wcrtomb@plt+0x159e8>
  419998:	mov	w8, #0x1                   	// #1
  41999c:	strb	w8, [x23, #1213]
  4199a0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4199a4:	add	x0, x0, #0xc10
  4199a8:	mov	x1, x20
  4199ac:	mov	x2, x19
  4199b0:	bl	41a5c0 <wcrtomb@plt+0x15ad0>
  4199b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4199b8:	ldrb	w8, [x8, #3025]
  4199bc:	cbz	w8, 4199f8 <wcrtomb@plt+0x14f08>
  4199c0:	ldr	w8, [x22, #3636]
  4199c4:	cmp	w8, #0x3
  4199c8:	b.lt	4199f8 <wcrtomb@plt+0x14f08>  // b.tstop
  4199cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4199d0:	add	x0, x0, #0xc10
  4199d4:	bl	4174ec <wcrtomb@plt+0x129fc>
  4199d8:	tbz	w0, #0, 4199f8 <wcrtomb@plt+0x14f08>
  4199dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4199e0:	ldr	x19, [x8, #3472]
  4199e4:	mov	x0, x19
  4199e8:	bl	4152a8 <wcrtomb@plt+0x107b8>
  4199ec:	mov	x1, x0
  4199f0:	mov	x0, x19
  4199f4:	bl	417cec <wcrtomb@plt+0x131fc>
  4199f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4199fc:	ldrb	w8, [x8, #3465]
  419a00:	cbz	w8, 419a18 <wcrtomb@plt+0x14f28>
  419a04:	ldp	x20, x19, [sp, #48]
  419a08:	ldp	x22, x21, [sp, #32]
  419a0c:	ldr	x23, [sp, #16]
  419a10:	ldp	x29, x30, [sp], #64
  419a14:	ret
  419a18:	ldr	x0, [x21, #2968]
  419a1c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419a20:	add	x19, x19, #0xc10
  419a24:	ldrb	w20, [x0, #156]
  419a28:	bl	405640 <wcrtomb@plt+0xb50>
  419a2c:	mov	x0, x19
  419a30:	bl	404ca8 <wcrtomb@plt+0x1b8>
  419a34:	ldrb	w8, [x19, #272]
  419a38:	cbz	w8, 419a4c <wcrtomb@plt+0x14f5c>
  419a3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419a40:	add	x0, x0, #0xc10
  419a44:	bl	4206f0 <wcrtomb@plt+0x1bc00>
  419a48:	b	419a60 <wcrtomb@plt+0x14f70>
  419a4c:	cmp	w20, #0x35
  419a50:	b.eq	419a60 <wcrtomb@plt+0x14f70>  // b.none
  419a54:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419a58:	ldr	x0, [x8, #3224]
  419a5c:	bl	41acf0 <wcrtomb@plt+0x16200>
  419a60:	ldp	x20, x19, [sp, #48]
  419a64:	ldp	x22, x21, [sp, #32]
  419a68:	ldr	x23, [sp, #16]
  419a6c:	ldp	x29, x30, [sp], #64
  419a70:	b	404d34 <wcrtomb@plt+0x244>
  419a74:	stp	x29, x30, [sp, #-48]!
  419a78:	stp	x22, x21, [sp, #16]
  419a7c:	stp	x20, x19, [sp, #32]
  419a80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419a84:	ldr	w8, [x8, #2944]
  419a88:	mov	x19, x2
  419a8c:	mov	x20, x1
  419a90:	mov	x21, x0
  419a94:	cmp	w8, #0x4
  419a98:	mov	x29, sp
  419a9c:	b.ne	419ac4 <wcrtomb@plt+0x14fd4>  // b.any
  419aa0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419aa4:	ldr	x8, [x8, #2864]
  419aa8:	cbz	x8, 419ac4 <wcrtomb@plt+0x14fd4>
  419aac:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419ab0:	ldrb	w8, [x22, #1213]
  419ab4:	cbnz	w8, 419ac4 <wcrtomb@plt+0x14fd4>
  419ab8:	bl	41a4d8 <wcrtomb@plt+0x159e8>
  419abc:	mov	w8, #0x1                   	// #1
  419ac0:	strb	w8, [x22, #1213]
  419ac4:	mov	x0, x21
  419ac8:	mov	x1, x20
  419acc:	mov	x2, x19
  419ad0:	ldp	x20, x19, [sp, #32]
  419ad4:	ldp	x22, x21, [sp, #16]
  419ad8:	ldp	x29, x30, [sp], #48
  419adc:	b	41a5c0 <wcrtomb@plt+0x15ad0>
  419ae0:	stp	x29, x30, [sp, #-64]!
  419ae4:	stp	x20, x19, [sp, #48]
  419ae8:	mov	x19, x0
  419aec:	mov	x10, xzr
  419af0:	mov	w8, wzr
  419af4:	mov	w9, wzr
  419af8:	mov	w11, wzr
  419afc:	mov	w12, wzr
  419b00:	stp	x24, x23, [sp, #16]
  419b04:	stp	x22, x21, [sp, #32]
  419b08:	mov	x29, sp
  419b0c:	add	x13, x19, x10
  419b10:	ldrsb	w14, [x13]
  419b14:	ldrsb	w13, [x13, #1]
  419b18:	add	x10, x10, #0x2
  419b1c:	cmp	x10, #0x200
  419b20:	add	w11, w11, w14, uxtb
  419b24:	add	w12, w12, w13, uxtb
  419b28:	add	w8, w8, w14
  419b2c:	add	w9, w9, w13
  419b30:	b.ne	419b0c <wcrtomb@plt+0x1501c>  // b.any
  419b34:	adds	w10, w12, w11
  419b38:	b.eq	419bd8 <wcrtomb@plt+0x150e8>  // b.none
  419b3c:	mov	x24, x19
  419b40:	ldrsb	w11, [x24, #148]!
  419b44:	add	w8, w9, w8
  419b48:	ldrsb	w12, [x24, #7]
  419b4c:	ldrsb	w9, [x24, #6]
  419b50:	cmp	w11, #0x0
  419b54:	cset	w23, eq  // eq = none
  419b58:	sub	w10, w10, w12, uxtb
  419b5c:	sub	w8, w8, w12
  419b60:	ldrsb	w12, [x24, #5]
  419b64:	sub	w10, w10, w9, uxtb
  419b68:	sub	w8, w8, w9
  419b6c:	ldrsb	w9, [x24, #4]
  419b70:	sub	w10, w10, w12, uxtb
  419b74:	sub	w8, w8, w12
  419b78:	ldrsb	w12, [x24, #3]
  419b7c:	sub	w10, w10, w9, uxtb
  419b80:	sub	w8, w8, w9
  419b84:	ldrsb	w9, [x24, #2]
  419b88:	sub	w10, w10, w12, uxtb
  419b8c:	sub	w8, w8, w12
  419b90:	ldrsb	w12, [x24, #1]
  419b94:	sub	w8, w8, w9
  419b98:	sub	w10, w10, w9, uxtb
  419b9c:	add	x22, x24, #0x8
  419ba0:	sub	w8, w8, w12
  419ba4:	sub	w9, w10, w12, uxtb
  419ba8:	sub	w8, w8, w11
  419bac:	sub	w20, w9, w11, uxtb
  419bb0:	add	w21, w8, #0x100
  419bb4:	bl	404640 <__ctype_b_loc@plt>
  419bb8:	ldr	x8, [x0]
  419bbc:	ldrb	w9, [x24, x23]
  419bc0:	ldrh	w10, [x8, x9, lsl #1]
  419bc4:	tbz	w10, #13, 419be0 <wcrtomb@plt+0x150f0>
  419bc8:	add	x23, x23, #0x1
  419bcc:	cmp	x23, #0x8
  419bd0:	b.ne	419bbc <wcrtomb@plt+0x150cc>  // b.any
  419bd4:	b	419ca4 <wcrtomb@plt+0x151b4>
  419bd8:	mov	w0, #0x3                   	// #3
  419bdc:	b	419ca8 <wcrtomb@plt+0x151b8>
  419be0:	and	w10, w9, #0xf8
  419be4:	cmp	w10, #0x30
  419be8:	b.ne	419c40 <wcrtomb@plt+0x15150>  // b.any
  419bec:	cmp	x23, #0x7
  419bf0:	sub	x9, x9, #0x30
  419bf4:	b.eq	419c74 <wcrtomb@plt+0x15184>  // b.none
  419bf8:	mov	w10, wzr
  419bfc:	add	x11, x19, #0x95
  419c00:	ldrb	w12, [x11, x23]
  419c04:	and	w13, w12, #0xf8
  419c08:	cmp	w13, #0x30
  419c0c:	b.ne	419c98 <wcrtomb@plt+0x151a8>  // b.any
  419c10:	lsr	x13, x9, #61
  419c14:	cmp	x13, #0x0
  419c18:	add	x9, x12, x9, lsl #3
  419c1c:	add	x23, x23, #0x1
  419c20:	cset	w12, ne  // ne = any
  419c24:	cmp	x23, #0x7
  419c28:	orr	w10, w12, w10
  419c2c:	sub	x9, x9, #0x30
  419c30:	b.ne	419c00 <wcrtomb@plt+0x15110>  // b.any
  419c34:	mov	x11, x22
  419c38:	tbz	w10, #0, 419c4c <wcrtomb@plt+0x1515c>
  419c3c:	b	419ca4 <wcrtomb@plt+0x151b4>
  419c40:	add	x10, x19, x23
  419c44:	mov	x9, xzr
  419c48:	add	x11, x10, #0x94
  419c4c:	cmp	x11, x22
  419c50:	b.eq	419c74 <wcrtomb@plt+0x15184>  // b.none
  419c54:	ldrb	w10, [x11]
  419c58:	cbz	x10, 419c74 <wcrtomb@plt+0x15184>
  419c5c:	lsr	x11, x9, #31
  419c60:	mov	w0, #0x5                   	// #5
  419c64:	cbnz	x11, 419ca8 <wcrtomb@plt+0x151b8>
  419c68:	ldrh	w8, [x8, x10, lsl #1]
  419c6c:	tbnz	w8, #13, 419c7c <wcrtomb@plt+0x1518c>
  419c70:	b	419ca8 <wcrtomb@plt+0x151b8>
  419c74:	lsr	x8, x9, #31
  419c78:	cbnz	x8, 419ca4 <wcrtomb@plt+0x151b4>
  419c7c:	mov	w0, #0x5                   	// #5
  419c80:	tbnz	w9, #31, 419ca8 <wcrtomb@plt+0x151b8>
  419c84:	add	w8, w20, #0x100
  419c88:	cmp	w21, w9
  419c8c:	ccmp	w8, w9, #0x4, ne  // ne = any
  419c90:	csinc	w0, w0, wzr, ne  // ne = any
  419c94:	b	419ca8 <wcrtomb@plt+0x151b8>
  419c98:	add	x11, x19, x23
  419c9c:	add	x11, x11, #0x95
  419ca0:	tbz	w10, #0, 419c4c <wcrtomb@plt+0x1515c>
  419ca4:	mov	w0, #0x5                   	// #5
  419ca8:	ldp	x20, x19, [sp, #48]
  419cac:	ldp	x22, x21, [sp, #32]
  419cb0:	ldp	x24, x23, [sp, #16]
  419cb4:	ldp	x29, x30, [sp], #64
  419cb8:	ret
  419cbc:	stp	x29, x30, [sp, #-96]!
  419cc0:	stp	x28, x27, [sp, #16]
  419cc4:	stp	x26, x25, [sp, #32]
  419cc8:	stp	x24, x23, [sp, #48]
  419ccc:	stp	x22, x21, [sp, #64]
  419cd0:	stp	x20, x19, [sp, #80]
  419cd4:	mov	x29, sp
  419cd8:	sub	sp, sp, #0x440
  419cdc:	ldrb	w8, [x0]
  419ce0:	mov	x20, x2
  419ce4:	mov	x19, sp
  419ce8:	cmp	w8, #0x0
  419cec:	cset	w21, eq  // eq = none
  419cf0:	cmp	x21, x1
  419cf4:	b.eq	419d64 <wcrtomb@plt+0x15274>  // b.none
  419cf8:	neg	x8, x3
  419cfc:	mov	w24, w5
  419d00:	mov	x23, x3
  419d04:	mov	x26, x1
  419d08:	mov	x25, x0
  419d0c:	str	x8, [x19, #8]
  419d10:	add	x22, x0, x1
  419d14:	add	x28, x0, x21
  419d18:	str	w6, [x19, #20]
  419d1c:	str	x4, [x19, #24]
  419d20:	bl	404640 <__ctype_b_loc@plt>
  419d24:	ldr	x17, [x19, #24]
  419d28:	ldr	w6, [x19, #20]
  419d2c:	ldr	x11, [x0]
  419d30:	sub	x9, x26, x21
  419d34:	sub	x8, x9, #0x1
  419d38:	add	x27, x21, #0x1
  419d3c:	sub	x10, x9, #0x2
  419d40:	ldrb	w9, [x28]
  419d44:	ldrh	w12, [x11, x9, lsl #1]
  419d48:	tbz	w12, #13, 419dd8 <wcrtomb@plt+0x152e8>
  419d4c:	add	x28, x28, #0x1
  419d50:	sub	x8, x8, #0x1
  419d54:	add	x27, x27, #0x1
  419d58:	cmp	x28, x22
  419d5c:	sub	x10, x10, #0x1
  419d60:	b.ne	419d40 <wcrtomb@plt+0x15250>  // b.any
  419d64:	mov	x0, #0xffffffffffffffff    	// #-1
  419d68:	cbz	x20, 419db8 <wcrtomb@plt+0x152c8>
  419d6c:	tbnz	w6, #0, 419db8 <wcrtomb@plt+0x152c8>
  419d70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419d74:	ldr	x8, [x8, #4000]
  419d78:	cbz	x8, 419d80 <wcrtomb@plt+0x15290>
  419d7c:	blr	x8
  419d80:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  419d84:	add	x1, x1, #0xeb0
  419d88:	mov	w2, #0x5                   	// #5
  419d8c:	mov	x0, xzr
  419d90:	bl	4048b0 <dcgettext@plt>
  419d94:	mov	x2, x0
  419d98:	mov	w0, wzr
  419d9c:	mov	w1, wzr
  419da0:	mov	x3, x20
  419da4:	bl	403f60 <error@plt>
  419da8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419dac:	mov	w9, #0x2                   	// #2
  419db0:	str	w9, [x8, #2352]
  419db4:	mov	x0, #0xffffffffffffffff    	// #-1
  419db8:	mov	sp, x29
  419dbc:	ldp	x20, x19, [sp, #80]
  419dc0:	ldp	x22, x21, [sp, #64]
  419dc4:	ldp	x24, x23, [sp, #48]
  419dc8:	ldp	x26, x25, [sp, #32]
  419dcc:	ldp	x28, x27, [sp, #16]
  419dd0:	ldp	x29, x30, [sp], #96
  419dd4:	ret
  419dd8:	and	w11, w9, #0xf8
  419ddc:	cmp	w11, #0x30
  419de0:	b.ne	419e44 <wcrtomb@plt+0x15354>  // b.any
  419de4:	add	x10, x28, #0x1
  419de8:	cmp	x10, x22
  419dec:	sub	x12, x9, #0x30
  419df0:	b.eq	419f28 <wcrtomb@plt+0x15438>  // b.none
  419df4:	mov	x13, xzr
  419df8:	mov	w11, wzr
  419dfc:	mov	x24, x12
  419e00:	add	x15, x28, x13
  419e04:	ldrb	w14, [x15, #1]
  419e08:	and	w16, w14, #0xf8
  419e0c:	cmp	w16, #0x30
  419e10:	b.ne	419f3c <wcrtomb@plt+0x1544c>  // b.any
  419e14:	lsr	x15, x24, #61
  419e18:	cmp	x15, #0x0
  419e1c:	add	x14, x14, x24, lsl #3
  419e20:	add	x13, x13, #0x1
  419e24:	cset	w15, ne  // ne = any
  419e28:	cmp	x8, x13
  419e2c:	orr	w11, w11, w15
  419e30:	sub	x24, x14, #0x30
  419e34:	b.ne	419e00 <wcrtomb@plt+0x15310>  // b.any
  419e38:	mov	x27, x22
  419e3c:	tbz	w11, #0, 419f44 <wcrtomb@plt+0x15454>
  419e40:	b	419f4c <wcrtomb@plt+0x1545c>
  419e44:	tbz	w24, #0, 419e58 <wcrtomb@plt+0x15368>
  419e48:	mov	w21, wzr
  419e4c:	mov	x24, xzr
  419e50:	mov	x27, x28
  419e54:	b	41a028 <wcrtomb@plt+0x15538>
  419e58:	mov	x24, xzr
  419e5c:	cmp	w9, #0x7f
  419e60:	mov	w21, wzr
  419e64:	b.gt	41a088 <wcrtomb@plt+0x15598>
  419e68:	cmp	w9, #0x2b
  419e6c:	b.eq	419e78 <wcrtomb@plt+0x15388>  // b.none
  419e70:	cmp	w9, #0x2d
  419e74:	b.ne	41a1c8 <wcrtomb@plt+0x156d8>  // b.any
  419e78:	tbnz	w6, #0, 419ed8 <wcrtomb@plt+0x153e8>
  419e7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419e80:	ldrb	w10, [x8, #1216]
  419e84:	tbnz	w10, #0, 419ed8 <wcrtomb@plt+0x153e8>
  419e88:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419e8c:	ldr	x9, [x9, #4000]
  419e90:	mov	x21, x0
  419e94:	mov	w10, #0x1                   	// #1
  419e98:	strb	w10, [x8, #1216]
  419e9c:	cbz	x9, 419ea4 <wcrtomb@plt+0x153b4>
  419ea0:	blr	x9
  419ea4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  419ea8:	add	x1, x1, #0xf54
  419eac:	mov	w2, #0x5                   	// #5
  419eb0:	mov	x0, xzr
  419eb4:	bl	4048b0 <dcgettext@plt>
  419eb8:	mov	x2, x0
  419ebc:	mov	w0, wzr
  419ec0:	mov	w1, wzr
  419ec4:	bl	403f60 <error@plt>
  419ec8:	ldrb	w9, [x28]
  419ecc:	ldr	w6, [x19, #20]
  419ed0:	ldr	x17, [x19, #24]
  419ed4:	mov	x0, x21
  419ed8:	cmp	w9, #0x2d
  419edc:	add	x8, x28, #0x1
  419ee0:	cset	w21, eq  // eq = none
  419ee4:	cmp	x8, x22
  419ee8:	b.eq	41a238 <wcrtomb@plt+0x15748>  // b.none
  419eec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419ef0:	mov	x24, xzr
  419ef4:	add	x8, x8, #0x4c0
  419ef8:	ldrb	w9, [x25, x27]
  419efc:	add	x9, x8, x9
  419f00:	ldrb	w9, [x9, #16]
  419f04:	cmp	x9, #0x3f
  419f08:	b.hi	41a2a0 <wcrtomb@plt+0x157b0>  // b.pmore
  419f0c:	lsr	x10, x24, #58
  419f10:	cbnz	x10, 41a2a8 <wcrtomb@plt+0x157b8>
  419f14:	add	x27, x27, #0x1
  419f18:	cmp	x26, x27
  419f1c:	orr	x24, x9, x24, lsl #6
  419f20:	b.ne	419ef8 <wcrtomb@plt+0x15408>  // b.any
  419f24:	b	41a110 <wcrtomb@plt+0x15620>
  419f28:	mov	w11, wzr
  419f2c:	mov	x27, x22
  419f30:	mov	x24, x12
  419f34:	tbz	w11, #0, 419f44 <wcrtomb@plt+0x15454>
  419f38:	b	419f4c <wcrtomb@plt+0x1545c>
  419f3c:	add	x27, x15, #0x1
  419f40:	tbnz	w11, #0, 419f4c <wcrtomb@plt+0x1545c>
  419f44:	cmp	x24, x17
  419f48:	b.ls	41a024 <wcrtomb@plt+0x15534>  // b.plast
  419f4c:	cbz	x20, 419fd8 <wcrtomb@plt+0x154e8>
  419f50:	cmp	w9, #0x32
  419f54:	b.cc	419fd8 <wcrtomb@plt+0x154e8>  // b.lo, b.ul, b.last
  419f58:	orr	x9, x12, #0x4
  419f5c:	mov	w11, #0x7                   	// #7
  419f60:	cmp	x10, x22
  419f64:	sub	x11, x11, x9
  419f68:	mov	w9, wzr
  419f6c:	b.eq	419fac <wcrtomb@plt+0x154bc>  // b.none
  419f70:	mov	x27, x10
  419f74:	ldrb	w10, [x27]
  419f78:	and	w12, w10, #0xf8
  419f7c:	cmp	w12, #0x30
  419f80:	b.ne	419fb0 <wcrtomb@plt+0x154c0>  // b.any
  419f84:	lsl	x12, x11, #3
  419f88:	lsr	x11, x11, #61
  419f8c:	cmp	x11, #0x0
  419f90:	sub	x10, x12, x10
  419f94:	cset	w12, ne  // ne = any
  419f98:	add	x11, x10, #0x37
  419f9c:	subs	x8, x8, #0x1
  419fa0:	orr	w9, w9, w12
  419fa4:	add	x27, x27, #0x1
  419fa8:	b.ne	419f74 <wcrtomb@plt+0x15484>  // b.any
  419fac:	mov	x27, x22
  419fb0:	ldr	x10, [x19, #8]
  419fb4:	adds	x24, x11, #0x1
  419fb8:	cset	w8, cs  // cs = hs, nlast
  419fbc:	orr	w11, w9, w8
  419fc0:	cmp	x24, x10
  419fc4:	b.hi	419fd8 <wcrtomb@plt+0x154e8>  // b.pmore
  419fc8:	tbnz	w11, #0, 419fd8 <wcrtomb@plt+0x154e8>
  419fcc:	tbz	w6, #0, 41a248 <wcrtomb@plt+0x15758>
  419fd0:	mov	w21, #0x1                   	// #1
  419fd4:	b	41a028 <wcrtomb@plt+0x15538>
  419fd8:	tbz	w11, #0, 41a024 <wcrtomb@plt+0x15534>
  419fdc:	mov	x0, #0xffffffffffffffff    	// #-1
  419fe0:	cbz	x20, 419db8 <wcrtomb@plt+0x152c8>
  419fe4:	tbnz	w6, #0, 419db8 <wcrtomb@plt+0x152c8>
  419fe8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  419fec:	ldr	x8, [x8, #4000]
  419ff0:	cbz	x8, 419ff8 <wcrtomb@plt+0x15508>
  419ff4:	blr	x8
  419ff8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  419ffc:	add	x1, x1, #0xf28
  41a000:	mov	w2, #0x5                   	// #5
  41a004:	mov	x0, xzr
  41a008:	bl	4048b0 <dcgettext@plt>
  41a00c:	mov	x2, x0
  41a010:	sub	w3, w27, w28
  41a014:	mov	w0, wzr
  41a018:	mov	w1, wzr
  41a01c:	mov	x4, x28
  41a020:	b	41a22c <wcrtomb@plt+0x1573c>
  41a024:	mov	w21, wzr
  41a028:	cmp	x27, x22
  41a02c:	b.eq	41a110 <wcrtomb@plt+0x15620>  // b.none
  41a030:	ldrb	w8, [x27]
  41a034:	cbz	x8, 41a110 <wcrtomb@plt+0x15620>
  41a038:	ldr	x9, [x0]
  41a03c:	ldrh	w8, [x9, x8, lsl #1]
  41a040:	tbnz	w8, #13, 41a110 <wcrtomb@plt+0x15620>
  41a044:	cbz	x20, 419db4 <wcrtomb@plt+0x152c4>
  41a048:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a04c:	ldr	x8, [x21, #1224]
  41a050:	cbnz	x8, 41a068 <wcrtomb@plt+0x15578>
  41a054:	mov	x0, xzr
  41a058:	bl	4476c0 <argp_parse@@Base+0xd014>
  41a05c:	mov	w1, #0x8                   	// #8
  41a060:	str	x0, [x21, #1224]
  41a064:	bl	447724 <argp_parse@@Base+0xd078>
  41a068:	cbz	x26, 41a1d0 <wcrtomb@plt+0x156e0>
  41a06c:	add	x8, x25, x26
  41a070:	ldurb	w8, [x8, #-1]
  41a074:	sub	x26, x26, #0x1
  41a078:	cbz	w8, 41a068 <wcrtomb@plt+0x15578>
  41a07c:	add	x8, x25, x26
  41a080:	add	x8, x8, #0x1
  41a084:	b	41a1d4 <wcrtomb@plt+0x156e4>
  41a088:	cmp	w9, #0x80
  41a08c:	b.eq	41a098 <wcrtomb@plt+0x155a8>  // b.none
  41a090:	cmp	w9, #0xff
  41a094:	b.ne	41a1c8 <wcrtomb@plt+0x156d8>  // b.any
  41a098:	and	w8, w9, #0x40
  41a09c:	and	w9, w9, #0x3f
  41a0a0:	neg	w11, w8
  41a0a4:	sub	w12, w9, w8
  41a0a8:	lsl	x9, x11, #50
  41a0ac:	sxtw	x13, w12
  41a0b0:	mov	w11, #0x1                   	// #1
  41a0b4:	ldrb	w12, [x28, x11]
  41a0b8:	bfi	x12, x13, #8, #56
  41a0bc:	cbz	x10, 41a104 <wcrtomb@plt+0x15614>
  41a0c0:	and	x13, x12, #0xffffffffffffff
  41a0c4:	orr	x13, x13, x9
  41a0c8:	add	x11, x11, #0x1
  41a0cc:	cmp	x13, x12
  41a0d0:	sub	x10, x10, #0x1
  41a0d4:	mov	x13, x12
  41a0d8:	b.eq	41a0b4 <wcrtomb@plt+0x155c4>  // b.none
  41a0dc:	mov	x0, #0xffffffffffffffff    	// #-1
  41a0e0:	cbz	x20, 419db8 <wcrtomb@plt+0x152c8>
  41a0e4:	tbnz	w6, #0, 419db8 <wcrtomb@plt+0x152c8>
  41a0e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a0ec:	ldr	x8, [x8, #4000]
  41a0f0:	cbz	x8, 41a0f8 <wcrtomb@plt+0x15608>
  41a0f4:	blr	x8
  41a0f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a0fc:	add	x1, x1, #0xfb5
  41a100:	b	419d88 <wcrtomb@plt+0x15298>
  41a104:	cmp	w8, #0x0
  41a108:	cset	w21, ne  // ne = any
  41a10c:	cneg	x24, x12, ne  // ne = any
  41a110:	ldr	x9, [x19, #8]
  41a114:	cmp	w21, #0x0
  41a118:	csel	x8, x9, x17, ne  // ne = any
  41a11c:	cmp	x24, x8
  41a120:	b.ls	41a23c <wcrtomb@plt+0x1574c>  // b.plast
  41a124:	mov	x0, #0xffffffffffffffff    	// #-1
  41a128:	cbz	x20, 419db8 <wcrtomb@plt+0x152c8>
  41a12c:	tbnz	w6, #0, 419db8 <wcrtomb@plt+0x152c8>
  41a130:	add	x8, x19, #0x50
  41a134:	orr	x1, x8, #0x1
  41a138:	mov	x0, x9
  41a13c:	bl	440290 <argp_parse@@Base+0x5be4>
  41a140:	add	x8, x19, #0x20
  41a144:	mov	x22, x0
  41a148:	orr	x1, x8, #0x1
  41a14c:	mov	x0, x24
  41a150:	bl	440290 <argp_parse@@Base+0x5be4>
  41a154:	mov	x24, x0
  41a158:	cbz	w21, 41a164 <wcrtomb@plt+0x15674>
  41a15c:	mov	w8, #0x2d                  	// #45
  41a160:	strb	w8, [x24, #-1]!
  41a164:	cbz	x23, 41a170 <wcrtomb@plt+0x15680>
  41a168:	mov	w8, #0x2d                  	// #45
  41a16c:	strb	w8, [x22, #-1]!
  41a170:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a174:	ldr	x8, [x8, #4000]
  41a178:	cbz	x8, 41a180 <wcrtomb@plt+0x15690>
  41a17c:	blr	x8
  41a180:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41a184:	add	x1, x1, #0x15
  41a188:	mov	w2, #0x5                   	// #5
  41a18c:	mov	x0, xzr
  41a190:	bl	4048b0 <dcgettext@plt>
  41a194:	mov	x23, x0
  41a198:	ldr	x0, [x19, #24]
  41a19c:	add	x1, x19, #0x38
  41a1a0:	bl	440290 <argp_parse@@Base+0x5be4>
  41a1a4:	mov	x6, x0
  41a1a8:	mov	w0, wzr
  41a1ac:	mov	w1, wzr
  41a1b0:	mov	x2, x23
  41a1b4:	mov	x3, x24
  41a1b8:	mov	x4, x20
  41a1bc:	mov	x5, x22
  41a1c0:	bl	403f60 <error@plt>
  41a1c4:	b	419da8 <wcrtomb@plt+0x152b8>
  41a1c8:	mov	x27, x28
  41a1cc:	b	41a028 <wcrtomb@plt+0x15538>
  41a1d0:	mov	x8, x25
  41a1d4:	ldr	x4, [x21, #1224]
  41a1d8:	sub	x3, x8, x25
  41a1dc:	add	x0, x19, #0x50
  41a1e0:	mov	w1, #0x3e8                 	// #1000
  41a1e4:	mov	x2, x25
  41a1e8:	bl	4477cc <argp_parse@@Base+0xd120>
  41a1ec:	ldr	w8, [x19, #20]
  41a1f0:	tbnz	w8, #0, 419db4 <wcrtomb@plt+0x152c4>
  41a1f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a1f8:	ldr	x8, [x8, #4000]
  41a1fc:	cbz	x8, 41a204 <wcrtomb@plt+0x15714>
  41a200:	blr	x8
  41a204:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a208:	add	x1, x1, #0xfdf
  41a20c:	mov	w2, #0x5                   	// #5
  41a210:	mov	x0, xzr
  41a214:	bl	4048b0 <dcgettext@plt>
  41a218:	mov	x2, x0
  41a21c:	add	x4, x19, #0x50
  41a220:	mov	w3, #0x3e8                 	// #1000
  41a224:	mov	w0, wzr
  41a228:	mov	w1, wzr
  41a22c:	mov	x5, x20
  41a230:	bl	403f60 <error@plt>
  41a234:	b	419da8 <wcrtomb@plt+0x152b8>
  41a238:	mov	x24, xzr
  41a23c:	cmp	w21, #0x0
  41a240:	cneg	x0, x24, ne  // ne = any
  41a244:	b	419db8 <wcrtomb@plt+0x152c8>
  41a248:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a24c:	ldr	x8, [x8, #4000]
  41a250:	str	x0, [x19]
  41a254:	cbz	x8, 41a25c <wcrtomb@plt+0x1576c>
  41a258:	blr	x8
  41a25c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a260:	add	x1, x1, #0xee1
  41a264:	mov	w2, #0x5                   	// #5
  41a268:	mov	x0, xzr
  41a26c:	bl	4048b0 <dcgettext@plt>
  41a270:	mov	x2, x0
  41a274:	sub	w3, w27, w28
  41a278:	mov	w0, wzr
  41a27c:	mov	w1, wzr
  41a280:	mov	x4, x28
  41a284:	mov	x5, x20
  41a288:	bl	403f60 <error@plt>
  41a28c:	ldr	w6, [x19, #20]
  41a290:	ldr	x17, [x19, #24]
  41a294:	ldr	x0, [x19]
  41a298:	mov	w21, #0x1                   	// #1
  41a29c:	b	41a028 <wcrtomb@plt+0x15538>
  41a2a0:	add	x27, x25, x27
  41a2a4:	b	41a028 <wcrtomb@plt+0x15538>
  41a2a8:	add	x9, x26, #0x10
  41a2ac:	mov	x8, sp
  41a2b0:	and	x9, x9, #0xfffffffffffffff0
  41a2b4:	sub	x22, x8, x9
  41a2b8:	mov	sp, x22
  41a2bc:	mov	x0, x22
  41a2c0:	mov	x1, x25
  41a2c4:	mov	x2, x26
  41a2c8:	bl	403e80 <memcpy@plt>
  41a2cc:	mov	x0, #0xffffffffffffffff    	// #-1
  41a2d0:	strb	wzr, [x22, x26]
  41a2d4:	cbz	x20, 419db8 <wcrtomb@plt+0x152c8>
  41a2d8:	ldr	w8, [x19, #20]
  41a2dc:	tbnz	w8, #0, 419db8 <wcrtomb@plt+0x152c8>
  41a2e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a2e4:	ldr	x8, [x8, #4000]
  41a2e8:	cbz	x8, 41a2f0 <wcrtomb@plt+0x15800>
  41a2ec:	blr	x8
  41a2f0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a2f4:	add	x1, x1, #0xf81
  41a2f8:	mov	w2, #0x5                   	// #5
  41a2fc:	mov	x0, xzr
  41a300:	bl	4048b0 <dcgettext@plt>
  41a304:	mov	x21, x0
  41a308:	mov	x0, x22
  41a30c:	bl	449144 <argp_parse@@Base+0xea98>
  41a310:	mov	x3, x0
  41a314:	mov	w0, wzr
  41a318:	mov	w1, wzr
  41a31c:	mov	x2, x21
  41a320:	mov	x4, x20
  41a324:	bl	403f60 <error@plt>
  41a328:	b	419da8 <wcrtomb@plt+0x152b8>
  41a32c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41a330:	add	x2, x2, #0x938
  41a334:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41a338:	mov	x3, xzr
  41a33c:	mov	w5, wzr
  41a340:	mov	w6, wzr
  41a344:	b	419cbc <wcrtomb@plt+0x151cc>
  41a348:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41a34c:	add	x2, x2, #0xad8
  41a350:	mov	x4, #0xffffffffffffffff    	// #-1
  41a354:	mov	x3, xzr
  41a358:	mov	w5, wzr
  41a35c:	mov	w6, wzr
  41a360:	b	419cbc <wcrtomb@plt+0x151cc>
  41a364:	stp	x29, x30, [sp, #-64]!
  41a368:	stp	x22, x21, [sp, #32]
  41a36c:	stp	x20, x19, [sp, #48]
  41a370:	mov	x29, sp
  41a374:	mov	w20, w2
  41a378:	mov	x19, x1
  41a37c:	mov	x22, x0
  41a380:	str	x23, [sp, #16]
  41a384:	str	x0, [x29, #24]
  41a388:	tbz	x0, #63, 41a3a4 <wcrtomb@plt+0x158b4>
  41a38c:	cbz	w19, 41a3a4 <wcrtomb@plt+0x158b4>
  41a390:	mov	w9, #0xca00                	// #51712
  41a394:	movk	w9, #0x3b9a, lsl #16
  41a398:	add	x8, x22, #0x1
  41a39c:	sub	w19, w9, w19
  41a3a0:	str	x8, [x29, #24]
  41a3a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a3a8:	ldrb	w8, [x8, #3545]
  41a3ac:	cbz	w8, 41a3f0 <wcrtomb@plt+0x15900>
  41a3b0:	add	x0, x29, #0x18
  41a3b4:	bl	404430 <gmtime@plt>
  41a3b8:	mov	x3, x0
  41a3bc:	cbz	x0, 41a400 <wcrtomb@plt+0x15910>
  41a3c0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a3c4:	add	x21, x21, #0x498
  41a3c8:	tbz	w20, #0, 41a4ac <wcrtomb@plt+0x159bc>
  41a3cc:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  41a3d0:	add	x2, x2, #0xc00
  41a3d4:	mov	w1, #0x25                  	// #37
  41a3d8:	mov	x0, x21
  41a3dc:	bl	404060 <strftime@plt>
  41a3e0:	mov	x0, x21
  41a3e4:	bl	403f00 <strlen@plt>
  41a3e8:	add	x1, x21, x0
  41a3ec:	b	41a4a0 <wcrtomb@plt+0x159b0>
  41a3f0:	add	x0, x29, #0x18
  41a3f4:	bl	404140 <localtime@plt>
  41a3f8:	mov	x3, x0
  41a3fc:	cbnz	x0, 41a3c0 <wcrtomb@plt+0x158d0>
  41a400:	ldr	x8, [x29, #24]
  41a404:	cmp	x22, #0x0
  41a408:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a40c:	add	x1, x1, #0x49e
  41a410:	cneg	x0, x8, lt  // lt = tstop
  41a414:	bl	440290 <argp_parse@@Base+0x5be4>
  41a418:	mov	x21, x0
  41a41c:	tbz	x22, #63, 41a428 <wcrtomb@plt+0x15938>
  41a420:	mov	w8, #0x2d                  	// #45
  41a424:	strb	w8, [x21, #-1]!
  41a428:	tst	w20, #0x1
  41a42c:	mov	w8, #0xd                   	// #13
  41a430:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a434:	csel	x8, x8, xzr, ne  // ne = any
  41a438:	add	x9, x9, #0x498
  41a43c:	add	x8, x9, x8
  41a440:	add	x22, x8, #0x14
  41a444:	cmp	x22, x21
  41a448:	b.cs	41a494 <wcrtomb@plt+0x159a4>  // b.hs, b.nlast
  41a44c:	sub	x8, x21, x8
  41a450:	sub	x23, x8, #0x14
  41a454:	mov	w1, #0x20                  	// #32
  41a458:	mov	x0, x22
  41a45c:	mov	x2, x23
  41a460:	bl	404320 <memset@plt>
  41a464:	cmp	x23, #0x2
  41a468:	b.cc	41a488 <wcrtomb@plt+0x15998>  // b.lo, b.ul, b.last
  41a46c:	and	x8, x23, #0xfffffffffffffffe
  41a470:	sub	x21, x21, x8
  41a474:	mov	x9, x8
  41a478:	subs	x9, x9, #0x2
  41a47c:	b.ne	41a478 <wcrtomb@plt+0x15988>  // b.any
  41a480:	cmp	x8, x23
  41a484:	b.eq	41a494 <wcrtomb@plt+0x159a4>  // b.none
  41a488:	sub	x21, x21, #0x1
  41a48c:	cmp	x22, x21
  41a490:	b.cc	41a488 <wcrtomb@plt+0x15998>  // b.lo, b.ul, b.last
  41a494:	tbz	w20, #0, 41a4c0 <wcrtomb@plt+0x159d0>
  41a498:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a49c:	add	x1, x1, #0x4b2
  41a4a0:	mov	w0, w19
  41a4a4:	bl	41bd68 <wcrtomb@plt+0x17278>
  41a4a8:	b	41a4c0 <wcrtomb@plt+0x159d0>
  41a4ac:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a4b0:	add	x2, x2, #0xe82
  41a4b4:	mov	w1, #0x25                  	// #37
  41a4b8:	mov	x0, x21
  41a4bc:	bl	404060 <strftime@plt>
  41a4c0:	mov	x0, x21
  41a4c4:	ldp	x20, x19, [sp, #48]
  41a4c8:	ldp	x22, x21, [sp, #32]
  41a4cc:	ldr	x23, [sp, #16]
  41a4d0:	ldp	x29, x30, [sp], #64
  41a4d4:	ret
  41a4d8:	stp	x29, x30, [sp, #-32]!
  41a4dc:	stp	x28, x19, [sp, #16]
  41a4e0:	mov	x29, sp
  41a4e4:	sub	sp, sp, #0x3c0
  41a4e8:	add	x8, sp, #0x10
  41a4ec:	movi	v0.2d, #0x0
  41a4f0:	mov	w9, #0x56                  	// #86
  41a4f4:	stp	q0, q0, [x8, #128]
  41a4f8:	stp	q0, q0, [x8, #160]
  41a4fc:	stp	q0, q0, [x8, #192]
  41a500:	stp	q0, q0, [x8, #224]
  41a504:	stp	q0, q0, [x8, #256]
  41a508:	stp	q0, q0, [x8, #288]
  41a50c:	stp	q0, q0, [x8, #320]
  41a510:	stp	q0, q0, [x8, #352]
  41a514:	stp	q0, q0, [x8, #384]
  41a518:	stp	q0, q0, [x8, #416]
  41a51c:	stp	q0, q0, [x8, #448]
  41a520:	stp	q0, q0, [x8, #480]
  41a524:	strb	w9, [sp, #172]
  41a528:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a52c:	ldr	x9, [x9, #1168]
  41a530:	stp	q0, q0, [sp, #16]
  41a534:	stp	q0, q0, [sp, #48]
  41a538:	stp	q0, q0, [sp, #80]
  41a53c:	stp	q0, q0, [sp, #112]
  41a540:	cbz	x9, 41a554 <wcrtomb@plt+0x15a64>
  41a544:	ldr	w10, [x9, #144]
  41a548:	ldr	x9, [x9, #136]
  41a54c:	str	w10, [sp, #160]
  41a550:	str	x9, [x8, #136]
  41a554:	add	x0, sp, #0x218
  41a558:	add	x19, sp, #0x218
  41a55c:	bl	425e88 <wcrtomb@plt+0x21398>
  41a560:	add	x19, x19, #0x8
  41a564:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41a568:	add	x1, x1, #0xfda
  41a56c:	mov	x0, x19
  41a570:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41a574:	add	x0, sp, #0x10
  41a578:	add	x1, sp, #0x218
  41a57c:	add	x2, sp, #0xc
  41a580:	mov	w3, wzr
  41a584:	bl	4194a0 <wcrtomb@plt+0x149b0>
  41a588:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a58c:	ldr	x1, [x8, #2864]
  41a590:	mov	x0, x19
  41a594:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41a598:	add	x0, sp, #0x218
  41a59c:	add	x1, sp, #0x10
  41a5a0:	mov	x2, xzr
  41a5a4:	bl	41a5c0 <wcrtomb@plt+0x15ad0>
  41a5a8:	add	x0, sp, #0x218
  41a5ac:	bl	425f4c <wcrtomb@plt+0x2145c>
  41a5b0:	add	sp, sp, #0x3c0
  41a5b4:	ldp	x28, x19, [sp, #16]
  41a5b8:	ldp	x29, x30, [sp], #32
  41a5bc:	ret
  41a5c0:	sub	sp, sp, #0x100
  41a5c4:	stp	x26, x25, [sp, #192]
  41a5c8:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a5cc:	ldrb	w8, [x25, #3832]
  41a5d0:	stp	x20, x19, [sp, #240]
  41a5d4:	mov	x20, x1
  41a5d8:	mov	x19, x0
  41a5dc:	stp	x29, x30, [sp, #160]
  41a5e0:	stp	x28, x27, [sp, #176]
  41a5e4:	stp	x24, x23, [sp, #208]
  41a5e8:	stp	x22, x21, [sp, #224]
  41a5ec:	add	x29, sp, #0xa0
  41a5f0:	cbz	w8, 41a604 <wcrtomb@plt+0x15b14>
  41a5f4:	ldr	x21, [x19, #8]
  41a5f8:	cbnz	x21, 41a610 <wcrtomb@plt+0x15b20>
  41a5fc:	ldr	x21, [x19]
  41a600:	b	41a610 <wcrtomb@plt+0x15b20>
  41a604:	ldr	x21, [x19]
  41a608:	cbnz	x21, 41a610 <wcrtomb@plt+0x15b20>
  41a60c:	ldr	x21, [x19, #8]
  41a610:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a614:	ldrb	w8, [x8, #3665]
  41a618:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a61c:	cbz	w8, 41a680 <wcrtomb@plt+0x15b90>
  41a620:	tbz	x2, #63, 41a62c <wcrtomb@plt+0x15b3c>
  41a624:	bl	4052a4 <wcrtomb@plt+0x7b4>
  41a628:	mov	x2, x0
  41a62c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a630:	ldr	x8, [x8, #2960]
  41a634:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a638:	ldr	x9, [x9, #2976]
  41a63c:	ldr	x22, [x27, #2824]
  41a640:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a644:	sub	x8, x2, x8
  41a648:	add	x1, x1, #0xe77
  41a64c:	mov	w2, #0x5                   	// #5
  41a650:	mov	x0, xzr
  41a654:	sub	x23, x8, x9
  41a658:	bl	4048b0 <dcgettext@plt>
  41a65c:	mov	x24, x0
  41a660:	add	x1, sp, #0x38
  41a664:	mov	x0, x23
  41a668:	bl	440290 <argp_parse@@Base+0x5be4>
  41a66c:	mov	x3, x0
  41a670:	mov	w1, #0x1                   	// #1
  41a674:	mov	x0, x22
  41a678:	mov	x2, x24
  41a67c:	bl	404600 <__fprintf_chk@plt>
  41a680:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a684:	ldr	w8, [x8, #3636]
  41a688:	cmp	w8, #0x1
  41a68c:	b.gt	41a6e4 <wcrtomb@plt+0x15bf4>
  41a690:	mov	x0, x21
  41a694:	bl	448c18 <argp_parse@@Base+0xe56c>
  41a698:	ldr	x1, [x27, #2824]
  41a69c:	bl	4048d0 <fputs_unlocked@plt>
  41a6a0:	ldrb	w8, [x25, #3832]
  41a6a4:	cbz	w8, 41aa14 <wcrtomb@plt+0x15f24>
  41a6a8:	ldrb	w8, [x19, #16]
  41a6ac:	cbz	w8, 41aa14 <wcrtomb@plt+0x15f24>
  41a6b0:	ldr	x0, [x27, #2824]
  41a6b4:	ldp	x8, x9, [x0, #40]
  41a6b8:	cmp	x8, x9
  41a6bc:	b.cs	41ab78 <wcrtomb@plt+0x16088>  // b.hs, b.nlast
  41a6c0:	add	x9, x8, #0x1
  41a6c4:	mov	w10, #0x2f                  	// #47
  41a6c8:	str	x9, [x0, #40]
  41a6cc:	strb	w10, [x8]
  41a6d0:	ldr	x0, [x27, #2824]
  41a6d4:	ldp	x8, x9, [x0, #40]
  41a6d8:	cmp	x8, x9
  41a6dc:	b.cc	41aa24 <wcrtomb@plt+0x15f34>  // b.lo, b.ul, b.last
  41a6e0:	b	41ab90 <wcrtomb@plt+0x160a0>
  41a6e4:	mov	w8, #0x3f                  	// #63
  41a6e8:	sturb	w8, [x29, #-12]
  41a6ec:	ldrb	w8, [x20, #156]
  41a6f0:	cmp	w8, #0x56
  41a6f4:	b.hi	41a7b4 <wcrtomb@plt+0x15cc4>  // b.pmore
  41a6f8:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41a6fc:	add	x9, x9, #0xd40
  41a700:	adr	x10, 41a710 <wcrtomb@plt+0x15c20>
  41a704:	ldrb	w11, [x9, x8]
  41a708:	add	x10, x10, x11, lsl #2
  41a70c:	br	x10
  41a710:	ldrb	w8, [x19, #16]
  41a714:	mov	w9, #0x64                  	// #100
  41a718:	cmp	w8, #0x0
  41a71c:	mov	w8, #0x2d                  	// #45
  41a720:	csel	w8, w8, w9, eq  // eq = none
  41a724:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a728:	mov	w8, #0x64                  	// #100
  41a72c:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a730:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a734:	ldr	x8, [x8, #4000]
  41a738:	mov	w9, #0x4c                  	// #76
  41a73c:	sturb	w9, [x29, #-12]
  41a740:	cbz	x8, 41a748 <wcrtomb@plt+0x15c58>
  41a744:	blr	x8
  41a748:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41a74c:	add	x1, x1, #0xf0f
  41a750:	mov	w2, #0x5                   	// #5
  41a754:	mov	x0, xzr
  41a758:	bl	4048b0 <dcgettext@plt>
  41a75c:	mov	x2, x0
  41a760:	mov	w0, wzr
  41a764:	mov	w1, wzr
  41a768:	bl	403f60 <error@plt>
  41a76c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a770:	mov	w9, #0x2                   	// #2
  41a774:	str	w9, [x8, #2352]
  41a778:	b	41a7b4 <wcrtomb@plt+0x15cc4>
  41a77c:	mov	w8, #0x68                  	// #104
  41a780:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a784:	mov	w8, #0x6c                  	// #108
  41a788:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a78c:	mov	w8, #0x63                  	// #99
  41a790:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a794:	mov	w8, #0x62                  	// #98
  41a798:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a79c:	mov	w8, #0x70                  	// #112
  41a7a0:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a7a4:	mov	w8, #0x43                  	// #67
  41a7a8:	b	41a7b0 <wcrtomb@plt+0x15cc0>
  41a7ac:	mov	w8, #0x4d                  	// #77
  41a7b0:	sturb	w8, [x29, #-12]
  41a7b4:	ldr	w0, [x19, #104]
  41a7b8:	sub	x22, x29, #0xc
  41a7bc:	orr	x1, x22, #0x1
  41a7c0:	bl	42c4d8 <wcrtomb@plt+0x279e8>
  41a7c4:	add	x1, x22, #0xa
  41a7c8:	mov	x0, x19
  41a7cc:	bl	42bcfc <wcrtomb@plt+0x2720c>
  41a7d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a7d4:	ldrb	w2, [x8, #3688]
  41a7d8:	ldp	x0, x1, [x19, #232]
  41a7dc:	bl	41a364 <wcrtomb@plt+0x15874>
  41a7e0:	mov	x22, x0
  41a7e4:	bl	403f00 <strlen@plt>
  41a7e8:	adrp	x28, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41a7ec:	ldr	w8, [x28, #1860]
  41a7f0:	cmp	w8, w0
  41a7f4:	b.ge	41a7fc <wcrtomb@plt+0x15d0c>  // b.tcont
  41a7f8:	str	w0, [x28, #1860]
  41a7fc:	ldr	x23, [x19, #32]
  41a800:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a804:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a808:	cbz	x23, 41a834 <wcrtomb@plt+0x15d44>
  41a80c:	ldrb	w8, [x23]
  41a810:	cbz	w8, 41a834 <wcrtomb@plt+0x15d44>
  41a814:	ldr	w8, [x26, #2944]
  41a818:	cmp	w8, #0x1
  41a81c:	b.eq	41a834 <wcrtomb@plt+0x15d44>  // b.none
  41a820:	ldrb	w8, [x25, #3664]
  41a824:	cbnz	w8, 41a834 <wcrtomb@plt+0x15d44>
  41a828:	ldr	x24, [x19, #40]
  41a82c:	cbnz	x24, 41a84c <wcrtomb@plt+0x15d5c>
  41a830:	b	41a8e0 <wcrtomb@plt+0x15df0>
  41a834:	ldr	w0, [x19, #112]
  41a838:	sub	x1, x29, #0x24
  41a83c:	bl	440290 <argp_parse@@Base+0x5be4>
  41a840:	mov	x23, x0
  41a844:	ldr	x24, [x19, #40]
  41a848:	cbz	x24, 41a8e0 <wcrtomb@plt+0x15df0>
  41a84c:	ldrb	w8, [x24]
  41a850:	cbz	w8, 41a8e0 <wcrtomb@plt+0x15df0>
  41a854:	ldr	w8, [x26, #2944]
  41a858:	cmp	w8, #0x1
  41a85c:	b.eq	41a8e0 <wcrtomb@plt+0x15df0>  // b.none
  41a860:	ldrb	w8, [x25, #3664]
  41a864:	cbnz	w8, 41a8e0 <wcrtomb@plt+0x15df0>
  41a868:	ldrb	w8, [x20, #156]
  41a86c:	sub	w8, w8, #0x33
  41a870:	cmp	w8, #0x1
  41a874:	b.hi	41a900 <wcrtomb@plt+0x15e10>  // b.pmore
  41a878:	ldr	x8, [x19, #120]
  41a87c:	add	x1, sp, #0x20
  41a880:	lsr	x9, x8, #32
  41a884:	and	x0, x9, #0xfffff000
  41a888:	bfxil	x0, x8, #8, #12
  41a88c:	bl	440290 <argp_parse@@Base+0x5be4>
  41a890:	mov	x1, x0
  41a894:	add	x0, sp, #0x38
  41a898:	mov	w2, #0x2a                  	// #42
  41a89c:	bl	404270 <__strcpy_chk@plt>
  41a8a0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41a8a4:	add	x1, x1, #0xbc0
  41a8a8:	add	x0, sp, #0x38
  41a8ac:	mov	w2, #0x2a                  	// #42
  41a8b0:	bl	4046c0 <__strcat_chk@plt>
  41a8b4:	ldr	x8, [x19, #120]
  41a8b8:	add	x1, sp, #0x20
  41a8bc:	lsr	x9, x8, #12
  41a8c0:	and	x0, x9, #0xffffff00
  41a8c4:	bfxil	x0, x8, #0, #8
  41a8c8:	bl	440290 <argp_parse@@Base+0x5be4>
  41a8cc:	mov	x1, x0
  41a8d0:	add	x0, sp, #0x38
  41a8d4:	mov	w2, #0x2a                  	// #42
  41a8d8:	bl	4046c0 <__strcat_chk@plt>
  41a8dc:	b	41a91c <wcrtomb@plt+0x15e2c>
  41a8e0:	ldr	w0, [x19, #116]
  41a8e4:	sub	x1, x29, #0x3c
  41a8e8:	bl	440290 <argp_parse@@Base+0x5be4>
  41a8ec:	mov	x24, x0
  41a8f0:	ldrb	w8, [x20, #156]
  41a8f4:	sub	w8, w8, #0x33
  41a8f8:	cmp	w8, #0x1
  41a8fc:	b.ls	41a878 <wcrtomb@plt+0x15d88>  // b.plast
  41a900:	ldr	x0, [x19, #136]
  41a904:	add	x1, sp, #0x20
  41a908:	bl	440290 <argp_parse@@Base+0x5be4>
  41a90c:	mov	x1, x0
  41a910:	add	x0, sp, #0x38
  41a914:	mov	w2, #0x2a                  	// #42
  41a918:	bl	404270 <__strcpy_chk@plt>
  41a91c:	add	x0, sp, #0x38
  41a920:	bl	403f00 <strlen@plt>
  41a924:	mov	x25, x0
  41a928:	mov	x0, x23
  41a92c:	bl	403f00 <strlen@plt>
  41a930:	mov	x26, x0
  41a934:	mov	x0, x24
  41a938:	bl	403f00 <strlen@plt>
  41a93c:	adrp	x10, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41a940:	ldr	w9, [x10, #1856]
  41a944:	add	w8, w25, w26
  41a948:	add	w8, w8, w0
  41a94c:	add	w8, w8, #0x2
  41a950:	cmp	w9, w8
  41a954:	b.ge	41a960 <wcrtomb@plt+0x15e70>  // b.tcont
  41a958:	mov	w9, w8
  41a95c:	str	w8, [x10, #1856]
  41a960:	ldr	x0, [x27, #2824]
  41a964:	ldr	w10, [x28, #1860]
  41a968:	sub	w8, w25, w8
  41a96c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41a970:	add	w6, w8, w9
  41a974:	add	x2, x2, #0x40
  41a978:	sub	x3, x29, #0xc
  41a97c:	add	x7, sp, #0x38
  41a980:	mov	w1, #0x1                   	// #1
  41a984:	mov	x4, x23
  41a988:	mov	x5, x24
  41a98c:	str	x22, [sp, #8]
  41a990:	str	w10, [sp]
  41a994:	bl	404600 <__fprintf_chk@plt>
  41a998:	ldr	x22, [x27, #2824]
  41a99c:	mov	x0, x21
  41a9a0:	bl	448c18 <argp_parse@@Base+0xe56c>
  41a9a4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  41a9a8:	mov	x3, x0
  41a9ac:	add	x2, x2, #0x273
  41a9b0:	mov	w1, #0x1                   	// #1
  41a9b4:	mov	x0, x22
  41a9b8:	bl	404600 <__fprintf_chk@plt>
  41a9bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41a9c0:	ldrb	w8, [x8, #3832]
  41a9c4:	cbz	w8, 41a9f0 <wcrtomb@plt+0x15f00>
  41a9c8:	ldrb	w8, [x19, #16]
  41a9cc:	cbz	w8, 41a9f0 <wcrtomb@plt+0x15f00>
  41a9d0:	ldr	x0, [x27, #2824]
  41a9d4:	ldp	x8, x9, [x0, #40]
  41a9d8:	cmp	x8, x9
  41a9dc:	b.cs	41ab9c <wcrtomb@plt+0x160ac>  // b.hs, b.nlast
  41a9e0:	add	x9, x8, #0x1
  41a9e4:	mov	w10, #0x2f                  	// #47
  41a9e8:	str	x9, [x0, #40]
  41a9ec:	strb	w10, [x8]
  41a9f0:	ldrb	w8, [x20, #156]
  41a9f4:	cmp	w8, #0x56
  41a9f8:	b.hi	41abb0 <wcrtomb@plt+0x160c0>  // b.pmore
  41a9fc:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41aa00:	add	x9, x9, #0xd97
  41aa04:	adr	x10, 41aa14 <wcrtomb@plt+0x15f24>
  41aa08:	ldrb	w11, [x9, x8]
  41aa0c:	add	x10, x10, x11, lsl #2
  41aa10:	br	x10
  41aa14:	ldr	x0, [x27, #2824]
  41aa18:	ldp	x8, x9, [x0, #40]
  41aa1c:	cmp	x8, x9
  41aa20:	b.cs	41ab90 <wcrtomb@plt+0x160a0>  // b.hs, b.nlast
  41aa24:	add	x9, x8, #0x1
  41aa28:	mov	w10, #0xa                   	// #10
  41aa2c:	str	x9, [x0, #40]
  41aa30:	strb	w10, [x8]
  41aa34:	ldr	x0, [x27, #2824]
  41aa38:	bl	4047b0 <fflush_unlocked@plt>
  41aa3c:	mov	x0, x19
  41aa40:	bl	42bed4 <wcrtomb@plt+0x273e4>
  41aa44:	ldp	x20, x19, [sp, #240]
  41aa48:	ldp	x22, x21, [sp, #224]
  41aa4c:	ldp	x24, x23, [sp, #208]
  41aa50:	ldp	x26, x25, [sp, #192]
  41aa54:	ldp	x28, x27, [sp, #176]
  41aa58:	ldp	x29, x30, [sp, #160]
  41aa5c:	add	sp, sp, #0x100
  41aa60:	ret
  41aa64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41aa68:	mov	w9, #0x1                   	// #1
  41aa6c:	mov	w10, #0x56                  	// #86
  41aa70:	strb	w9, [x8, #1213]
  41aa74:	sturb	w10, [x29, #-12]
  41aa78:	b	41a7b4 <wcrtomb@plt+0x15cc4>
  41aa7c:	ldr	x20, [x27, #2824]
  41aa80:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41aa84:	add	x1, x1, #0x5a
  41aa88:	mov	w2, #0x5                   	// #5
  41aa8c:	mov	x0, xzr
  41aa90:	bl	4048b0 <dcgettext@plt>
  41aa94:	ldr	x8, [x19, #24]
  41aa98:	mov	x21, x0
  41aa9c:	mov	x0, x8
  41aaa0:	bl	448c18 <argp_parse@@Base+0xe56c>
  41aaa4:	b	41abdc <wcrtomb@plt+0x160ec>
  41aaa8:	ldr	x0, [x19, #24]
  41aaac:	ldr	x20, [x27, #2824]
  41aab0:	bl	448c18 <argp_parse@@Base+0xe56c>
  41aab4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41aab8:	mov	x3, x0
  41aabc:	add	x2, x2, #0x52
  41aac0:	b	41ab40 <wcrtomb@plt+0x16050>
  41aac4:	ldr	x20, [x27, #2824]
  41aac8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41aacc:	add	x1, x1, #0x7e
  41aad0:	b	41ab58 <wcrtomb@plt+0x16068>
  41aad4:	ldr	x20, [x27, #2824]
  41aad8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41aadc:	add	x1, x1, #0x8d
  41aae0:	b	41ab58 <wcrtomb@plt+0x16068>
  41aae4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41aae8:	add	x0, x20, #0x171
  41aaec:	add	x2, x2, #0xad8
  41aaf0:	mov	w1, #0xc                   	// #12
  41aaf4:	mov	x4, #0xffffffffffffffff    	// #-1
  41aaf8:	mov	x3, xzr
  41aafc:	mov	w5, wzr
  41ab00:	mov	w6, wzr
  41ab04:	bl	419cbc <wcrtomb@plt+0x151cc>
  41ab08:	add	x1, sp, #0x20
  41ab0c:	bl	440290 <argp_parse@@Base+0x5be4>
  41ab10:	mov	x1, x0
  41ab14:	add	x0, sp, #0x38
  41ab18:	mov	w2, #0x2a                  	// #42
  41ab1c:	bl	404270 <__strcpy_chk@plt>
  41ab20:	ldr	x20, [x27, #2824]
  41ab24:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41ab28:	add	x1, x1, #0xaf
  41ab2c:	mov	w2, #0x5                   	// #5
  41ab30:	mov	x0, xzr
  41ab34:	bl	4048b0 <dcgettext@plt>
  41ab38:	mov	x2, x0
  41ab3c:	add	x3, sp, #0x38
  41ab40:	mov	w1, #0x1                   	// #1
  41ab44:	mov	x0, x20
  41ab48:	b	41abec <wcrtomb@plt+0x160fc>
  41ab4c:	ldr	x20, [x27, #2824]
  41ab50:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41ab54:	add	x1, x1, #0x9c
  41ab58:	mov	w2, #0x5                   	// #5
  41ab5c:	mov	x0, xzr
  41ab60:	bl	4048b0 <dcgettext@plt>
  41ab64:	mov	x2, x0
  41ab68:	mov	w1, #0x1                   	// #1
  41ab6c:	mov	x0, x20
  41ab70:	bl	404600 <__fprintf_chk@plt>
  41ab74:	b	41aa34 <wcrtomb@plt+0x15f44>
  41ab78:	mov	w1, #0x2f                  	// #47
  41ab7c:	bl	404590 <__overflow@plt>
  41ab80:	ldr	x0, [x27, #2824]
  41ab84:	ldp	x8, x9, [x0, #40]
  41ab88:	cmp	x8, x9
  41ab8c:	b.cc	41aa24 <wcrtomb@plt+0x15f34>  // b.lo, b.ul, b.last
  41ab90:	mov	w1, #0xa                   	// #10
  41ab94:	bl	404590 <__overflow@plt>
  41ab98:	b	41aa34 <wcrtomb@plt+0x15f44>
  41ab9c:	mov	w1, #0x2f                  	// #47
  41aba0:	bl	404590 <__overflow@plt>
  41aba4:	ldrb	w8, [x20, #156]
  41aba8:	cmp	w8, #0x56
  41abac:	b.ls	41a9fc <wcrtomb@plt+0x15f0c>  // b.plast
  41abb0:	ldr	x20, [x27, #2824]
  41abb4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41abb8:	add	x1, x1, #0x67
  41abbc:	mov	w2, #0x5                   	// #5
  41abc0:	mov	x0, xzr
  41abc4:	strb	w8, [sp, #28]
  41abc8:	strb	wzr, [sp, #29]
  41abcc:	bl	4048b0 <dcgettext@plt>
  41abd0:	mov	x21, x0
  41abd4:	add	x0, sp, #0x1c
  41abd8:	bl	449144 <argp_parse@@Base+0xea98>
  41abdc:	mov	x3, x0
  41abe0:	mov	w1, #0x1                   	// #1
  41abe4:	mov	x0, x20
  41abe8:	mov	x2, x21
  41abec:	bl	404600 <__fprintf_chk@plt>
  41abf0:	b	41aa34 <wcrtomb@plt+0x15f44>
  41abf4:	sub	sp, sp, #0x60
  41abf8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41abfc:	ldr	w8, [x8, #3636]
  41ac00:	stp	x29, x30, [sp, #48]
  41ac04:	stp	x22, x21, [sp, #64]
  41ac08:	stp	x20, x19, [sp, #80]
  41ac0c:	cmp	w8, #0x2
  41ac10:	add	x29, sp, #0x30
  41ac14:	b.lt	41acdc <wcrtomb@plt+0x161ec>  // b.tstop
  41ac18:	sub	x9, x29, #0xc
  41ac1c:	mov	x19, x0
  41ac20:	mov	w8, #0x64                  	// #100
  41ac24:	orr	x1, x9, #0x1
  41ac28:	mov	w0, w2
  41ac2c:	sturb	w8, [x29, #-12]
  41ac30:	bl	42c4d8 <wcrtomb@plt+0x279e8>
  41ac34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ac38:	ldrb	w8, [x8, #3665]
  41ac3c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ac40:	cbz	w8, 41ac80 <wcrtomb@plt+0x16190>
  41ac44:	ldr	x20, [x22, #2824]
  41ac48:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41ac4c:	add	x1, x1, #0xe77
  41ac50:	mov	w2, #0x5                   	// #5
  41ac54:	mov	x0, xzr
  41ac58:	bl	4048b0 <dcgettext@plt>
  41ac5c:	mov	x21, x0
  41ac60:	bl	4052a4 <wcrtomb@plt+0x7b4>
  41ac64:	add	x1, sp, #0xc
  41ac68:	bl	440290 <argp_parse@@Base+0x5be4>
  41ac6c:	mov	x3, x0
  41ac70:	mov	w1, #0x1                   	// #1
  41ac74:	mov	x0, x20
  41ac78:	mov	x2, x21
  41ac7c:	bl	404600 <__fprintf_chk@plt>
  41ac80:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41ac84:	add	x8, x8, #0x740
  41ac88:	ldp	w9, w8, [x8]
  41ac8c:	ldr	x20, [x22, #2824]
  41ac90:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41ac94:	add	x1, x1, #0xe9c
  41ac98:	add	w8, w9, w8
  41ac9c:	mov	w2, #0x5                   	// #5
  41aca0:	mov	x0, xzr
  41aca4:	add	w21, w8, #0x1
  41aca8:	bl	4048b0 <dcgettext@plt>
  41acac:	mov	x22, x0
  41acb0:	mov	x0, x19
  41acb4:	bl	448c18 <argp_parse@@Base+0xe56c>
  41acb8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41acbc:	mov	x6, x0
  41acc0:	add	x2, x2, #0xe91
  41acc4:	sub	x3, x29, #0xc
  41acc8:	mov	w1, #0x1                   	// #1
  41accc:	mov	x0, x20
  41acd0:	mov	w4, w21
  41acd4:	mov	x5, x22
  41acd8:	bl	404600 <__fprintf_chk@plt>
  41acdc:	ldp	x20, x19, [sp, #80]
  41ace0:	ldp	x22, x21, [sp, #64]
  41ace4:	ldp	x29, x30, [sp, #48]
  41ace8:	add	sp, sp, #0x60
  41acec:	ret
  41acf0:	stp	x29, x30, [sp, #-32]!
  41acf4:	stp	x20, x19, [sp, #16]
  41acf8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41acfc:	ldrb	w8, [x20, #3920]
  41ad00:	mov	x19, x0
  41ad04:	mov	x29, sp
  41ad08:	cbz	w8, 41ad1c <wcrtomb@plt+0x1622c>
  41ad0c:	mov	x0, x19
  41ad10:	bl	405834 <wcrtomb@plt+0xd44>
  41ad14:	tbnz	x0, #63, 41ad5c <wcrtomb@plt+0x1626c>
  41ad18:	sub	x19, x19, x0, lsl #9
  41ad1c:	mov	x0, x19
  41ad20:	bl	404d8c <wcrtomb@plt+0x29c>
  41ad24:	cmp	x19, #0x1
  41ad28:	b.lt	41ad50 <wcrtomb@plt+0x16260>  // b.tstop
  41ad2c:	add	x19, x19, #0x200
  41ad30:	bl	405310 <wcrtomb@plt+0x820>
  41ad34:	cbz	x0, 41ad74 <wcrtomb@plt+0x16284>
  41ad38:	bl	405640 <wcrtomb@plt+0xb50>
  41ad3c:	sub	x0, x19, #0x400
  41ad40:	bl	404d8c <wcrtomb@plt+0x29c>
  41ad44:	sub	x19, x19, #0x200
  41ad48:	cmp	x19, #0x200
  41ad4c:	b.gt	41ad30 <wcrtomb@plt+0x16240>
  41ad50:	ldp	x20, x19, [sp, #16]
  41ad54:	ldp	x29, x30, [sp], #32
  41ad58:	ret
  41ad5c:	strb	wzr, [x20, #3920]
  41ad60:	mov	x0, x19
  41ad64:	bl	404d8c <wcrtomb@plt+0x29c>
  41ad68:	cmp	x19, #0x1
  41ad6c:	b.ge	41ad2c <wcrtomb@plt+0x1623c>  // b.tcont
  41ad70:	b	41ad50 <wcrtomb@plt+0x16260>
  41ad74:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ad78:	ldr	x8, [x8, #4000]
  41ad7c:	cbz	x8, 41ad84 <wcrtomb@plt+0x16294>
  41ad80:	blr	x8
  41ad84:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41ad88:	add	x1, x1, #0x818
  41ad8c:	mov	w2, #0x5                   	// #5
  41ad90:	mov	x0, xzr
  41ad94:	bl	4048b0 <dcgettext@plt>
  41ad98:	mov	x2, x0
  41ad9c:	mov	w0, wzr
  41ada0:	mov	w1, wzr
  41ada4:	bl	403f60 <error@plt>
  41ada8:	bl	40eb40 <wcrtomb@plt+0xa050>
  41adac:	stp	x29, x30, [sp, #-32]!
  41adb0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41adb4:	add	x10, x10, #0x4d0
  41adb8:	movi	v0.16b, #0x40
  41adbc:	str	x19, [sp, #16]
  41adc0:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x16e3c>
  41adc4:	stp	q0, q0, [x10, #224]
  41adc8:	stp	q0, q0, [x10, #192]
  41adcc:	stp	q0, q0, [x10, #160]
  41add0:	stp	q0, q0, [x10, #128]
  41add4:	stp	q0, q0, [x10, #96]
  41add8:	stp	q0, q0, [x10, #64]
  41addc:	stp	q0, q0, [x10, #32]
  41ade0:	stp	q0, q0, [x10]
  41ade4:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ade8:	mov	x8, xzr
  41adec:	add	x9, x9, #0xdee
  41adf0:	add	x10, x10, #0x4c0
  41adf4:	mov	x29, sp
  41adf8:	ldrb	w11, [x9, x8]
  41adfc:	add	x11, x10, x11
  41ae00:	strb	w8, [x11, #16]
  41ae04:	add	x8, x8, #0x1
  41ae08:	cmp	x8, #0x40
  41ae0c:	b.ne	41adf8 <wcrtomb@plt+0x16308>  // b.any
  41ae10:	bl	41e610 <wcrtomb@plt+0x19b20>
  41ae14:	mov	w0, wzr
  41ae18:	bl	405d0c <wcrtomb@plt+0x121c>
  41ae1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae20:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae24:	add	x0, x0, #0xb98
  41ae28:	add	x1, x1, #0xc10
  41ae2c:	mov	w2, wzr
  41ae30:	bl	41901c <wcrtomb@plt+0x1452c>
  41ae34:	cmp	w0, #0x1
  41ae38:	b.ne	41aec8 <wcrtomb@plt+0x163d8>  // b.any
  41ae3c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae40:	ldr	x0, [x19, #2968]
  41ae44:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae48:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae4c:	add	x1, x1, #0xc10
  41ae50:	add	x2, x2, #0xb80
  41ae54:	mov	w3, wzr
  41ae58:	bl	4194a0 <wcrtomb@plt+0x149b0>
  41ae5c:	ldr	x1, [x19, #2968]
  41ae60:	ldrb	w8, [x1, #156]
  41ae64:	cmp	w8, #0x56
  41ae68:	b.ne	41ae7c <wcrtomb@plt+0x1638c>  // b.any
  41ae6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae70:	add	x0, x0, #0xb30
  41ae74:	mov	w2, #0x64                  	// #100
  41ae78:	bl	41b658 <wcrtomb@plt+0x16b68>
  41ae7c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae80:	ldr	x0, [x19, #2864]
  41ae84:	cbz	x0, 41aec8 <wcrtomb@plt+0x163d8>
  41ae88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ae8c:	ldr	w8, [x8, #3636]
  41ae90:	cbz	w8, 41ae9c <wcrtomb@plt+0x163ac>
  41ae94:	bl	41a4d8 <wcrtomb@plt+0x159e8>
  41ae98:	ldr	x0, [x19, #2864]
  41ae9c:	bl	41eb7c <wcrtomb@plt+0x1a08c>
  41aea0:	tbnz	w0, #0, 41aec8 <wcrtomb@plt+0x163d8>
  41aea4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41aea8:	ldrb	w8, [x8, #3068]
  41aeac:	cbz	w8, 41aec8 <wcrtomb@plt+0x163d8>
  41aeb0:	ldr	x0, [x19, #2864]
  41aeb4:	bl	405c58 <wcrtomb@plt+0x1168>
  41aeb8:	mov	x19, x0
  41aebc:	bl	41eb7c <wcrtomb@plt+0x1a08c>
  41aec0:	mov	x0, x19
  41aec4:	bl	4046b0 <free@plt>
  41aec8:	bl	405974 <wcrtomb@plt+0xe84>
  41aecc:	ldr	x19, [sp, #16]
  41aed0:	ldp	x29, x30, [sp], #32
  41aed4:	b	41efa4 <wcrtomb@plt+0x1a4b4>
  41aed8:	stp	x29, x30, [sp, #-32]!
  41aedc:	ldr	w8, [x1]
  41aee0:	str	x19, [sp, #16]
  41aee4:	mov	x19, x0
  41aee8:	mov	x29, sp
  41aeec:	cmp	w8, #0x4
  41aef0:	b.eq	41af4c <wcrtomb@plt+0x1645c>  // b.none
  41aef4:	cmp	w8, #0x2
  41aef8:	b.eq	41af0c <wcrtomb@plt+0x1641c>  // b.none
  41aefc:	cmp	w8, #0x1
  41af00:	b.ne	41af24 <wcrtomb@plt+0x16434>  // b.any
  41af04:	mov	w1, wzr
  41af08:	b	41af10 <wcrtomb@plt+0x16420>
  41af0c:	mov	w1, #0x1                   	// #1
  41af10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41af14:	ldrb	w2, [x8, #3944]
  41af18:	mov	x0, x19
  41af1c:	bl	42da24 <wcrtomb@plt+0x28f34>
  41af20:	mov	x19, x0
  41af24:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41af28:	ldr	x1, [x8, #3872]
  41af2c:	cbz	x1, 41af4c <wcrtomb@plt+0x1645c>
  41af30:	mov	x0, x19
  41af34:	bl	41fa98 <wcrtomb@plt+0x1afa8>
  41af38:	cmn	x0, #0x1
  41af3c:	b.ne	41af48 <wcrtomb@plt+0x16458>  // b.any
  41af40:	mov	x0, x19
  41af44:	bl	403f00 <strlen@plt>
  41af48:	add	x19, x19, x0
  41af4c:	mov	x0, x19
  41af50:	ldr	x19, [sp, #16]
  41af54:	ldp	x29, x30, [sp], #32
  41af58:	ret
  41af5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41af60:	add	x8, x8, #0x5d0
  41af64:	adrp	x2, 41b000 <wcrtomb@plt+0x16510>
  41af68:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41af6c:	add	x2, x2, #0x2fc
  41af70:	add	x3, x3, #0x6eb
  41af74:	mov	x1, x0
  41af78:	mov	x0, x8
  41af7c:	b	41af80 <wcrtomb@plt+0x16490>
  41af80:	sub	sp, sp, #0x180
  41af84:	stp	x20, x19, [sp, #368]
  41af88:	mov	x19, x1
  41af8c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41af90:	stp	x29, x30, [sp, #288]
  41af94:	add	x29, sp, #0x120
  41af98:	str	x0, [sp, #8]
  41af9c:	add	x1, x1, #0xedb
  41afa0:	mov	x0, x19
  41afa4:	stp	x28, x27, [sp, #304]
  41afa8:	stp	x26, x25, [sp, #320]
  41afac:	stp	x24, x23, [sp, #336]
  41afb0:	stp	x22, x21, [sp, #352]
  41afb4:	mov	x20, x3
  41afb8:	mov	x21, x2
  41afbc:	stp	xzr, xzr, [x29, #-24]
  41afc0:	bl	4041e0 <fopen@plt>
  41afc4:	cbz	x0, 41b2f4 <wcrtomb@plt+0x16804>
  41afc8:	mov	x23, x0
  41afcc:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41afd0:	add	x8, x8, #0xd16
  41afd4:	sub	x0, x29, #0x10
  41afd8:	sub	x1, x29, #0x18
  41afdc:	mov	w2, #0xa                   	// #10
  41afe0:	mov	x3, x23
  41afe4:	str	x8, [sp, #96]
  41afe8:	bl	404a20 <__getdelim@plt>
  41afec:	cmp	x0, #0x0
  41aff0:	b.le	41b278 <wcrtomb@plt+0x16788>
  41aff4:	adrp	x27, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41aff8:	mov	w22, wzr
  41affc:	mov	w25, #0x8e44                	// #36420
  41b000:	mov	w24, #0x1                   	// #1
  41b004:	add	x27, x27, #0xe6
  41b008:	b	41b05c <wcrtomb@plt+0x1656c>
  41b00c:	mov	w2, #0x5                   	// #5
  41b010:	mov	x0, xzr
  41b014:	mov	x1, x27
  41b018:	bl	4048b0 <dcgettext@plt>
  41b01c:	mov	x2, x0
  41b020:	mov	w0, wzr
  41b024:	mov	w1, wzr
  41b028:	mov	x3, x19
  41b02c:	mov	w4, w24
  41b030:	bl	403f60 <error@plt>
  41b034:	mov	w22, #0x1                   	// #1
  41b038:	sub	x0, x29, #0x10
  41b03c:	sub	x1, x29, #0x18
  41b040:	mov	w2, #0xa                   	// #10
  41b044:	mov	x3, x23
  41b048:	orr	w25, w25, #0x8
  41b04c:	bl	404a20 <__getdelim@plt>
  41b050:	cmp	x0, #0x0
  41b054:	add	w24, w24, #0x1
  41b058:	b.le	41b22c <wcrtomb@plt+0x1673c>
  41b05c:	ldur	x0, [x29, #-16]
  41b060:	add	x1, sp, #0x20
  41b064:	mov	w2, w25
  41b068:	bl	42f7d0 <wcrtomb@plt+0x2ace0>
  41b06c:	cbnz	w0, 41b2a0 <wcrtomb@plt+0x167b0>
  41b070:	ldr	x8, [sp, #32]
  41b074:	cbz	x8, 41b038 <wcrtomb@plt+0x16548>
  41b078:	cmp	x8, #0x2
  41b07c:	b.ne	41b00c <wcrtomb@plt+0x1651c>  // b.any
  41b080:	ldr	x8, [sp, #40]
  41b084:	ldr	x0, [x8]
  41b088:	ldrb	w8, [x0]
  41b08c:	cmp	w8, #0x2b
  41b090:	b.ne	41b0b4 <wcrtomb@plt+0x165c4>  // b.any
  41b094:	add	x1, x0, #0x1
  41b098:	add	x0, sp, #0x18
  41b09c:	mov	x2, x20
  41b0a0:	mov	x3, x19
  41b0a4:	mov	w4, w24
  41b0a8:	bl	41b4d0 <wcrtomb@plt+0x169e0>
  41b0ac:	cbnz	w0, 41b034 <wcrtomb@plt+0x16544>
  41b0b0:	b	41b0c8 <wcrtomb@plt+0x165d8>
  41b0b4:	cbz	x21, 41b0c8 <wcrtomb@plt+0x165d8>
  41b0b8:	blr	x21
  41b0bc:	cmn	x0, #0x1
  41b0c0:	str	x0, [sp, #24]
  41b0c4:	b.eq	41b13c <wcrtomb@plt+0x1664c>  // b.none
  41b0c8:	ldr	x8, [sp, #40]
  41b0cc:	mov	w1, #0x3a                  	// #58
  41b0d0:	ldr	x28, [x8, #8]
  41b0d4:	mov	x0, x28
  41b0d8:	bl	404750 <strchr@plt>
  41b0dc:	cbz	x0, 41b10c <wcrtomb@plt+0x1661c>
  41b0e0:	mov	x1, x0
  41b0e4:	cmp	x0, x28
  41b0e8:	strb	wzr, [x1], #1
  41b0ec:	add	x0, sp, #0x10
  41b0f0:	mov	x2, x20
  41b0f4:	mov	x3, x19
  41b0f8:	mov	w4, w24
  41b0fc:	csel	x28, x28, xzr, hi  // hi = pmore
  41b100:	bl	41b4d0 <wcrtomb@plt+0x169e0>
  41b104:	cbnz	w0, 41b034 <wcrtomb@plt+0x16544>
  41b108:	b	41b170 <wcrtomb@plt+0x16680>
  41b10c:	ldrb	w8, [x28]
  41b110:	cmp	w8, #0x2b
  41b114:	b.ne	41b15c <wcrtomb@plt+0x1666c>  // b.any
  41b118:	add	x0, sp, #0x10
  41b11c:	mov	x1, x28
  41b120:	mov	x2, x20
  41b124:	mov	x3, x19
  41b128:	mov	w4, w24
  41b12c:	bl	41b4d0 <wcrtomb@plt+0x169e0>
  41b130:	cbnz	w0, 41b034 <wcrtomb@plt+0x16544>
  41b134:	mov	x28, xzr
  41b138:	b	41b170 <wcrtomb@plt+0x16680>
  41b13c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b140:	mov	w2, #0x5                   	// #5
  41b144:	mov	x0, xzr
  41b148:	add	x1, x1, #0xfc
  41b14c:	bl	4048b0 <dcgettext@plt>
  41b150:	ldr	x8, [sp, #40]
  41b154:	ldr	x6, [x8]
  41b158:	b	41b20c <wcrtomb@plt+0x1671c>
  41b15c:	mov	x0, x28
  41b160:	blr	x21
  41b164:	cmn	x0, #0x1
  41b168:	str	x0, [sp, #16]
  41b16c:	b.eq	41b1f0 <wcrtomb@plt+0x16700>  // b.none
  41b170:	mov	w0, #0x18                  	// #24
  41b174:	bl	44a010 <argp_parse@@Base+0xf964>
  41b178:	ldp	x9, x8, [sp, #16]
  41b17c:	mov	x26, x0
  41b180:	stp	x8, x9, [x0]
  41b184:	cbz	x28, 41b1a4 <wcrtomb@plt+0x166b4>
  41b188:	mov	x0, x28
  41b18c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41b190:	ldr	x8, [sp, #8]
  41b194:	str	x0, [x26, #16]
  41b198:	ldr	x0, [x8]
  41b19c:	cbnz	x0, 41b1e0 <wcrtomb@plt+0x166f0>
  41b1a0:	b	41b1b8 <wcrtomb@plt+0x166c8>
  41b1a4:	mov	x0, xzr
  41b1a8:	ldr	x8, [sp, #8]
  41b1ac:	str	x0, [x26, #16]
  41b1b0:	ldr	x0, [x8]
  41b1b4:	cbnz	x0, 41b1e0 <wcrtomb@plt+0x166f0>
  41b1b8:	adrp	x2, 41b000 <wcrtomb@plt+0x16510>
  41b1bc:	adrp	x3, 41b000 <wcrtomb@plt+0x16510>
  41b1c0:	mov	x1, xzr
  41b1c4:	add	x2, x2, #0x5a4
  41b1c8:	add	x3, x3, #0x5b4
  41b1cc:	mov	x4, xzr
  41b1d0:	bl	43eb5c <argp_parse@@Base+0x44b0>
  41b1d4:	ldr	x8, [sp, #8]
  41b1d8:	str	x0, [x8]
  41b1dc:	cbz	x0, 41b2f0 <wcrtomb@plt+0x16800>
  41b1e0:	mov	x1, x26
  41b1e4:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  41b1e8:	cbnz	x0, 41b038 <wcrtomb@plt+0x16548>
  41b1ec:	b	41b2f0 <wcrtomb@plt+0x16800>
  41b1f0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b1f4:	mov	w2, #0x5                   	// #5
  41b1f8:	mov	x0, xzr
  41b1fc:	add	x1, x1, #0xfc
  41b200:	bl	4048b0 <dcgettext@plt>
  41b204:	ldr	x8, [sp, #40]
  41b208:	ldr	x6, [x8, #8]
  41b20c:	mov	x2, x0
  41b210:	mov	w0, wzr
  41b214:	mov	w1, wzr
  41b218:	mov	x3, x19
  41b21c:	mov	w4, w24
  41b220:	mov	x5, x20
  41b224:	bl	403f60 <error@plt>
  41b228:	b	41b034 <wcrtomb@plt+0x16544>
  41b22c:	add	x0, sp, #0x20
  41b230:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  41b234:	mov	x0, x23
  41b238:	bl	4041a0 <fclose@plt>
  41b23c:	cbz	w22, 41b280 <wcrtomb@plt+0x16790>
  41b240:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b244:	ldr	x8, [x8, #4000]
  41b248:	cbz	x8, 41b250 <wcrtomb@plt+0x16760>
  41b24c:	blr	x8
  41b250:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b254:	add	x1, x1, #0x119
  41b258:	mov	w2, #0x5                   	// #5
  41b25c:	mov	x0, xzr
  41b260:	bl	4048b0 <dcgettext@plt>
  41b264:	mov	x2, x0
  41b268:	mov	w0, wzr
  41b26c:	mov	w1, wzr
  41b270:	bl	403f60 <error@plt>
  41b274:	bl	40eb40 <wcrtomb@plt+0xa050>
  41b278:	mov	x0, x23
  41b27c:	bl	4041a0 <fclose@plt>
  41b280:	ldp	x20, x19, [sp, #368]
  41b284:	ldp	x22, x21, [sp, #352]
  41b288:	ldp	x24, x23, [sp, #336]
  41b28c:	ldp	x26, x25, [sp, #320]
  41b290:	ldp	x28, x27, [sp, #304]
  41b294:	ldp	x29, x30, [sp, #288]
  41b298:	add	sp, sp, #0x180
  41b29c:	ret
  41b2a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b2a4:	ldr	x8, [x8, #4000]
  41b2a8:	cbz	x8, 41b2b0 <wcrtomb@plt+0x167c0>
  41b2ac:	blr	x8
  41b2b0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b2b4:	add	x1, x1, #0xc9
  41b2b8:	mov	w2, #0x5                   	// #5
  41b2bc:	mov	x0, xzr
  41b2c0:	bl	4048b0 <dcgettext@plt>
  41b2c4:	mov	x20, x0
  41b2c8:	add	x0, sp, #0x20
  41b2cc:	bl	42fac0 <wcrtomb@plt+0x2afd0>
  41b2d0:	mov	x5, x0
  41b2d4:	mov	w0, wzr
  41b2d8:	mov	w1, wzr
  41b2dc:	mov	x2, x20
  41b2e0:	mov	x3, x19
  41b2e4:	mov	w4, w24
  41b2e8:	bl	403f60 <error@plt>
  41b2ec:	bl	40eb40 <wcrtomb@plt+0xa050>
  41b2f0:	bl	40eb80 <wcrtomb@plt+0xa090>
  41b2f4:	mov	x0, x19
  41b2f8:	bl	42cc7c <wcrtomb@plt+0x2818c>
  41b2fc:	stp	x29, x30, [sp, #-16]!
  41b300:	mov	x29, sp
  41b304:	bl	404350 <getpwnam@plt>
  41b308:	cbz	x0, 41b318 <wcrtomb@plt+0x16828>
  41b30c:	ldr	w0, [x0, #16]
  41b310:	ldp	x29, x30, [sp], #16
  41b314:	ret
  41b318:	mov	x0, #0xffffffffffffffff    	// #-1
  41b31c:	ldp	x29, x30, [sp], #16
  41b320:	ret
  41b324:	sub	sp, sp, #0x40
  41b328:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b32c:	ldr	x8, [x8, #1488]
  41b330:	stp	x20, x19, [sp, #48]
  41b334:	mov	x19, x2
  41b338:	mov	x20, x1
  41b33c:	stp	x29, x30, [sp, #32]
  41b340:	add	x29, sp, #0x20
  41b344:	cbz	x8, 41b378 <wcrtomb@plt+0x16888>
  41b348:	mov	w9, w0
  41b34c:	add	x1, sp, #0x8
  41b350:	mov	x0, x8
  41b354:	str	x9, [sp, #8]
  41b358:	bl	43e854 <argp_parse@@Base+0x41a8>
  41b35c:	cbz	x0, 41b378 <wcrtomb@plt+0x16888>
  41b360:	mov	x8, x0
  41b364:	ldr	x9, [x8, #8]
  41b368:	mov	w0, wzr
  41b36c:	str	w9, [x20]
  41b370:	ldr	x8, [x8, #16]
  41b374:	b	41b3c0 <wcrtomb@plt+0x168d0>
  41b378:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b37c:	ldr	w8, [x8, #3776]
  41b380:	cmn	w8, #0x1
  41b384:	b.eq	41b3ac <wcrtomb@plt+0x168bc>  // b.none
  41b388:	mov	w0, wzr
  41b38c:	str	w8, [x20]
  41b390:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b394:	ldr	x8, [x8, #3576]
  41b398:	cbnz	x8, 41b3bc <wcrtomb@plt+0x168cc>
  41b39c:	ldp	x20, x19, [sp, #48]
  41b3a0:	ldp	x29, x30, [sp, #32]
  41b3a4:	add	sp, sp, #0x40
  41b3a8:	ret
  41b3ac:	mov	w0, #0x1                   	// #1
  41b3b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b3b4:	ldr	x8, [x8, #3576]
  41b3b8:	cbz	x8, 41b39c <wcrtomb@plt+0x168ac>
  41b3bc:	mov	w0, wzr
  41b3c0:	str	x8, [x19]
  41b3c4:	ldp	x20, x19, [sp, #48]
  41b3c8:	ldp	x29, x30, [sp, #32]
  41b3cc:	add	sp, sp, #0x40
  41b3d0:	ret
  41b3d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b3d8:	add	x8, x8, #0x5d8
  41b3dc:	adrp	x2, 41b000 <wcrtomb@plt+0x16510>
  41b3e0:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41b3e4:	add	x2, x2, #0x3f8
  41b3e8:	add	x3, x3, #0x6f3
  41b3ec:	mov	x1, x0
  41b3f0:	mov	x0, x8
  41b3f4:	b	41af80 <wcrtomb@plt+0x16490>
  41b3f8:	stp	x29, x30, [sp, #-16]!
  41b3fc:	mov	x29, sp
  41b400:	bl	404020 <getgrnam@plt>
  41b404:	cbz	x0, 41b414 <wcrtomb@plt+0x16924>
  41b408:	ldr	w0, [x0, #16]
  41b40c:	ldp	x29, x30, [sp], #16
  41b410:	ret
  41b414:	mov	x0, #0xffffffffffffffff    	// #-1
  41b418:	ldp	x29, x30, [sp], #16
  41b41c:	ret
  41b420:	sub	sp, sp, #0x40
  41b424:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b428:	ldr	x8, [x8, #1496]
  41b42c:	stp	x20, x19, [sp, #48]
  41b430:	mov	x19, x2
  41b434:	mov	x20, x1
  41b438:	stp	x29, x30, [sp, #32]
  41b43c:	add	x29, sp, #0x20
  41b440:	cbz	x8, 41b474 <wcrtomb@plt+0x16984>
  41b444:	mov	w9, w0
  41b448:	add	x1, sp, #0x8
  41b44c:	mov	x0, x8
  41b450:	str	x9, [sp, #8]
  41b454:	bl	43e854 <argp_parse@@Base+0x41a8>
  41b458:	cbz	x0, 41b474 <wcrtomb@plt+0x16984>
  41b45c:	mov	x8, x0
  41b460:	ldr	x9, [x8, #8]
  41b464:	mov	w0, wzr
  41b468:	str	w9, [x20]
  41b46c:	ldr	x8, [x8, #16]
  41b470:	b	41b4bc <wcrtomb@plt+0x169cc>
  41b474:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b478:	ldr	w8, [x8, #3696]
  41b47c:	cmn	w8, #0x1
  41b480:	b.eq	41b4a8 <wcrtomb@plt+0x169b8>  // b.none
  41b484:	mov	w0, wzr
  41b488:	str	w8, [x20]
  41b48c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b490:	ldr	x8, [x8, #3520]
  41b494:	cbnz	x8, 41b4b8 <wcrtomb@plt+0x169c8>
  41b498:	ldp	x20, x19, [sp, #48]
  41b49c:	ldp	x29, x30, [sp, #32]
  41b4a0:	add	sp, sp, #0x40
  41b4a4:	ret
  41b4a8:	mov	w0, #0x1                   	// #1
  41b4ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41b4b0:	ldr	x8, [x8, #3520]
  41b4b4:	cbz	x8, 41b498 <wcrtomb@plt+0x169a8>
  41b4b8:	mov	w0, wzr
  41b4bc:	str	x8, [x19]
  41b4c0:	ldp	x20, x19, [sp, #48]
  41b4c4:	ldp	x29, x30, [sp, #32]
  41b4c8:	add	sp, sp, #0x40
  41b4cc:	ret
  41b4d0:	sub	sp, sp, #0x50
  41b4d4:	stp	x29, x30, [sp, #16]
  41b4d8:	stp	x24, x23, [sp, #32]
  41b4dc:	stp	x22, x21, [sp, #48]
  41b4e0:	stp	x20, x19, [sp, #64]
  41b4e4:	add	x29, sp, #0x10
  41b4e8:	mov	w21, w4
  41b4ec:	mov	x22, x3
  41b4f0:	mov	x20, x2
  41b4f4:	mov	x19, x1
  41b4f8:	mov	x23, x0
  41b4fc:	bl	4049c0 <__errno_location@plt>
  41b500:	mov	x24, x0
  41b504:	str	wzr, [x0]
  41b508:	add	x1, sp, #0x8
  41b50c:	mov	w2, #0xa                   	// #10
  41b510:	mov	x0, x19
  41b514:	mov	w3, wzr
  41b518:	bl	4043c0 <__strtoul_internal@plt>
  41b51c:	ldr	x8, [sp, #8]
  41b520:	ldrb	w9, [x8]
  41b524:	cbnz	w9, 41b530 <wcrtomb@plt+0x16a40>
  41b528:	ldr	w9, [x24]
  41b52c:	cbz	w9, 41b580 <wcrtomb@plt+0x16a90>
  41b530:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b534:	add	x1, x1, #0x131
  41b538:	mov	w2, #0x5                   	// #5
  41b53c:	mov	x0, xzr
  41b540:	bl	4048b0 <dcgettext@plt>
  41b544:	mov	x2, x0
  41b548:	mov	w0, wzr
  41b54c:	mov	w1, wzr
  41b550:	mov	x3, x22
  41b554:	mov	w4, w21
  41b558:	mov	x5, x20
  41b55c:	mov	x6, x19
  41b560:	bl	403f60 <error@plt>
  41b564:	mov	w0, #0xffffffff            	// #-1
  41b568:	ldp	x20, x19, [sp, #64]
  41b56c:	ldp	x22, x21, [sp, #48]
  41b570:	ldp	x24, x23, [sp, #32]
  41b574:	ldp	x29, x30, [sp, #16]
  41b578:	add	sp, sp, #0x50
  41b57c:	ret
  41b580:	mov	x8, x0
  41b584:	lsr	x9, x0, #32
  41b588:	cbz	x9, 41b598 <wcrtomb@plt+0x16aa8>
  41b58c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b590:	add	x1, x1, #0x147
  41b594:	b	41b538 <wcrtomb@plt+0x16a48>
  41b598:	mov	w0, wzr
  41b59c:	str	x8, [x23]
  41b5a0:	b	41b568 <wcrtomb@plt+0x16a78>
  41b5a4:	ldr	x8, [x0]
  41b5a8:	udiv	x9, x8, x1
  41b5ac:	msub	x0, x9, x1, x8
  41b5b0:	ret
  41b5b4:	ldr	x8, [x0]
  41b5b8:	ldr	x9, [x1]
  41b5bc:	cmp	x8, x9
  41b5c0:	cset	w0, eq  // eq = none
  41b5c4:	ret
  41b5c8:	ret
  41b5cc:	lsr	x8, x1, #63
  41b5d0:	eor	w0, w8, #0x1
  41b5d4:	ret
  41b5d8:	stp	x29, x30, [sp, #-32]!
  41b5dc:	stp	x20, x19, [sp, #16]
  41b5e0:	mov	w20, w0
  41b5e4:	mov	x0, xzr
  41b5e8:	mov	x29, sp
  41b5ec:	mov	x19, x1
  41b5f0:	bl	44770c <argp_parse@@Base+0xd060>
  41b5f4:	mov	w1, w0
  41b5f8:	mov	w0, w20
  41b5fc:	mov	x2, x19
  41b600:	ldp	x20, x19, [sp, #16]
  41b604:	ldp	x29, x30, [sp], #32
  41b608:	b	448f04 <argp_parse@@Base+0xe858>
  41b60c:	stp	x29, x30, [sp, #-32]!
  41b610:	stp	x20, x19, [sp, #16]
  41b614:	mov	x19, x0
  41b618:	ldr	x0, [x0]
  41b61c:	mov	x29, sp
  41b620:	mov	x20, x1
  41b624:	bl	4046b0 <free@plt>
  41b628:	cbz	x20, 41b644 <wcrtomb@plt+0x16b54>
  41b62c:	mov	x0, x20
  41b630:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41b634:	str	x0, [x19]
  41b638:	ldp	x20, x19, [sp, #16]
  41b63c:	ldp	x29, x30, [sp], #32
  41b640:	ret
  41b644:	mov	x0, xzr
  41b648:	str	x0, [x19]
  41b64c:	ldp	x20, x19, [sp, #16]
  41b650:	ldp	x29, x30, [sp], #32
  41b654:	ret
  41b658:	stp	x29, x30, [sp, #-48]!
  41b65c:	stp	x22, x21, [sp, #16]
  41b660:	stp	x20, x19, [sp, #32]
  41b664:	mov	x19, x0
  41b668:	ldr	x0, [x0]
  41b66c:	mov	x29, sp
  41b670:	mov	x21, x2
  41b674:	mov	x20, x1
  41b678:	bl	4046b0 <free@plt>
  41b67c:	cbz	x20, 41b6b0 <wcrtomb@plt+0x16bc0>
  41b680:	mov	x0, x20
  41b684:	mov	x1, x21
  41b688:	bl	403fd0 <strnlen@plt>
  41b68c:	mov	x21, x0
  41b690:	add	x0, x0, #0x1
  41b694:	bl	44a010 <argp_parse@@Base+0xf964>
  41b698:	mov	x1, x20
  41b69c:	mov	x2, x21
  41b6a0:	mov	x22, x0
  41b6a4:	bl	403e80 <memcpy@plt>
  41b6a8:	strb	wzr, [x22, x21]
  41b6ac:	str	x22, [x19]
  41b6b0:	ldp	x20, x19, [sp, #32]
  41b6b4:	ldp	x22, x21, [sp, #16]
  41b6b8:	ldp	x29, x30, [sp], #48
  41b6bc:	ret
  41b6c0:	adrp	x17, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b6c4:	ldr	q1, [x17, #368]
  41b6c8:	mov	w16, #0x2                   	// #2
  41b6cc:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41b6d0:	dup	v3.2d, x0
  41b6d4:	mov	w8, #0x1                   	// #1
  41b6d8:	mov	w9, #0x5c                  	// #92
  41b6dc:	add	x10, x10, #0x180
  41b6e0:	mov	w11, #0x7f                  	// #127
  41b6e4:	mov	w12, #0x7                   	// #7
  41b6e8:	mov	w13, #0x8                   	// #8
  41b6ec:	mov	w14, #0xc                   	// #12
  41b6f0:	mov	w15, #0xa                   	// #10
  41b6f4:	dup	v0.2d, x16
  41b6f8:	mov	w16, #0xd                   	// #13
  41b6fc:	mov	w17, #0x9                   	// #9
  41b700:	mov	w18, #0xb                   	// #11
  41b704:	mov	w0, #0x1                   	// #1
  41b708:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b70c:	mov	x2, v2.d[1]
  41b710:	strb	w1, [x2], #1
  41b714:	fmov	d3, x3
  41b718:	mov	v3.d[1], x2
  41b71c:	mov	v2.16b, v3.16b
  41b720:	fmov	x2, d2
  41b724:	ldrb	w3, [x2]
  41b728:	cmp	w3, #0x5c
  41b72c:	b.eq	41b750 <wcrtomb@plt+0x16c60>  // b.none
  41b730:	mov	x1, v2.d[1]
  41b734:	cbz	w3, 41b870 <wcrtomb@plt+0x16d80>
  41b738:	dup	v3.2d, x8
  41b73c:	cmp	x2, x1
  41b740:	add	v3.2d, v2.2d, v3.2d
  41b744:	b.eq	41b71c <wcrtomb@plt+0x16c2c>  // b.none
  41b748:	strb	w3, [x1]
  41b74c:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b750:	mov	x3, x2
  41b754:	ldrb	w1, [x3, #1]!
  41b758:	sub	w1, w1, #0x30
  41b75c:	cmp	w1, #0x46
  41b760:	b.hi	41b814 <wcrtomb@plt+0x16d24>  // b.pmore
  41b764:	adr	x4, 41b774 <wcrtomb@plt+0x16c84>
  41b768:	ldrb	w5, [x10, x1]
  41b76c:	add	x4, x4, x5, lsl #2
  41b770:	br	x4
  41b774:	mov	x3, x2
  41b778:	ldrb	w5, [x3, #2]!
  41b77c:	and	w4, w5, #0xf8
  41b780:	cmp	w4, #0x30
  41b784:	b.ne	41b70c <wcrtomb@plt+0x16c1c>  // b.any
  41b788:	mov	x3, x2
  41b78c:	ldrb	w4, [x3, #3]!
  41b790:	add	w1, w5, w1, lsl #3
  41b794:	sub	w1, w1, #0x30
  41b798:	and	w5, w4, #0xf8
  41b79c:	cmp	w5, #0x30
  41b7a0:	b.ne	41b70c <wcrtomb@plt+0x16c1c>  // b.any
  41b7a4:	add	w1, w4, w1, lsl #3
  41b7a8:	add	x3, x2, #0x4
  41b7ac:	sub	w1, w1, #0x30
  41b7b0:	b	41b70c <wcrtomb@plt+0x16c1c>
  41b7b4:	mov	x1, v2.d[1]
  41b7b8:	strb	w11, [x1]
  41b7bc:	add	v3.2d, v2.2d, v1.2d
  41b7c0:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b7c4:	mov	x1, v2.d[1]
  41b7c8:	strb	w9, [x1]
  41b7cc:	add	v3.2d, v2.2d, v1.2d
  41b7d0:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b7d4:	mov	x1, v2.d[1]
  41b7d8:	strb	w13, [x1]
  41b7dc:	add	v3.2d, v2.2d, v1.2d
  41b7e0:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b7e4:	mov	x1, v2.d[1]
  41b7e8:	strb	w14, [x1]
  41b7ec:	add	v3.2d, v2.2d, v1.2d
  41b7f0:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b7f4:	mov	x1, v2.d[1]
  41b7f8:	strb	w16, [x1]
  41b7fc:	add	v3.2d, v2.2d, v1.2d
  41b800:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b804:	mov	x1, v2.d[1]
  41b808:	strb	w17, [x1]
  41b80c:	add	v3.2d, v2.2d, v1.2d
  41b810:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b814:	mov	x1, v2.d[1]
  41b818:	strb	w9, [x1], #1
  41b81c:	ldrb	w2, [x3]
  41b820:	fmov	d3, x3
  41b824:	mov	w0, wzr
  41b828:	mov	v3.d[1], x1
  41b82c:	cbz	w2, 41b71c <wcrtomb@plt+0x16c2c>
  41b830:	mov	w0, wzr
  41b834:	add	v3.2d, v2.2d, v0.2d
  41b838:	strb	w2, [x1]
  41b83c:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b840:	mov	x1, v2.d[1]
  41b844:	strb	w12, [x1]
  41b848:	add	v3.2d, v2.2d, v1.2d
  41b84c:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b850:	mov	x1, v2.d[1]
  41b854:	strb	w15, [x1]
  41b858:	add	v3.2d, v2.2d, v1.2d
  41b85c:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b860:	mov	x1, v2.d[1]
  41b864:	strb	w18, [x1]
  41b868:	add	v3.2d, v2.2d, v1.2d
  41b86c:	b	41b71c <wcrtomb@plt+0x16c2c>
  41b870:	cmp	x2, x1
  41b874:	b.eq	41b87c <wcrtomb@plt+0x16d8c>  // b.none
  41b878:	strb	wzr, [x1]
  41b87c:	ret
  41b880:	stp	x29, x30, [sp, #-32]!
  41b884:	str	x19, [sp, #16]
  41b888:	mov	x19, x0
  41b88c:	mov	x29, sp
  41b890:	cbz	x0, 41b8cc <wcrtomb@plt+0x16ddc>
  41b894:	ldrb	w8, [x19]
  41b898:	cbz	w8, 41b8cc <wcrtomb@plt+0x16ddc>
  41b89c:	mov	x0, x19
  41b8a0:	bl	403f00 <strlen@plt>
  41b8a4:	add	x8, x19, x0
  41b8a8:	sub	x8, x8, #0x1
  41b8ac:	cmp	x8, x19
  41b8b0:	b.ls	41b8cc <wcrtomb@plt+0x16ddc>  // b.plast
  41b8b4:	ldrb	w9, [x8]
  41b8b8:	cmp	w9, #0x2f
  41b8bc:	b.ne	41b8cc <wcrtomb@plt+0x16ddc>  // b.any
  41b8c0:	strb	wzr, [x8], #-1
  41b8c4:	cmp	x8, x19
  41b8c8:	b.hi	41b8b4 <wcrtomb@plt+0x16dc4>  // b.pmore
  41b8cc:	mov	x0, x19
  41b8d0:	ldr	x19, [sp, #16]
  41b8d4:	ldp	x29, x30, [sp], #32
  41b8d8:	ret
  41b8dc:	ldrb	w8, [x0]
  41b8e0:	mov	x9, x0
  41b8e4:	cmp	w8, #0x2e
  41b8e8:	mov	x8, x0
  41b8ec:	b.ne	41b928 <wcrtomb@plt+0x16e38>  // b.any
  41b8f0:	mov	x9, x0
  41b8f4:	mov	x8, x0
  41b8f8:	ldrb	w10, [x9, #1]
  41b8fc:	cmp	w10, #0x2f
  41b900:	b.ne	41b928 <wcrtomb@plt+0x16e38>  // b.any
  41b904:	add	x9, x9, #0x1
  41b908:	ldrb	w10, [x9, #1]!
  41b90c:	cmp	w10, #0x2f
  41b910:	b.eq	41b908 <wcrtomb@plt+0x16e18>  // b.none
  41b914:	cmp	w10, #0x0
  41b918:	cinc	x8, x8, eq  // eq = none
  41b91c:	cmp	w10, #0x2e
  41b920:	strb	w10, [x8]
  41b924:	b.eq	41b8f8 <wcrtomb@plt+0x16e08>  // b.none
  41b928:	mov	w10, #0x1                   	// #1
  41b92c:	ldrb	w12, [x9], #1
  41b930:	mov	x11, x8
  41b934:	cmp	w12, #0x2f
  41b938:	strb	w12, [x8], #1
  41b93c:	b.eq	41b954 <wcrtomb@plt+0x16e64>  // b.none
  41b940:	cbnz	w12, 41b92c <wcrtomb@plt+0x16e3c>
  41b944:	b	41b978 <wcrtomb@plt+0x16e88>
  41b948:	tst	w11, #0x1
  41b94c:	cinc	x11, x10, ne  // ne = any
  41b950:	add	x9, x9, x11
  41b954:	mov	x11, x9
  41b958:	ldrb	w12, [x11], #1
  41b95c:	cmp	w12, #0x2e
  41b960:	csel	x11, x9, x11, ne  // ne = any
  41b964:	ldrb	w12, [x11]
  41b968:	cset	w11, eq  // eq = none
  41b96c:	cmp	w12, #0x2f
  41b970:	b.eq	41b948 <wcrtomb@plt+0x16e58>  // b.none
  41b974:	b	41b92c <wcrtomb@plt+0x16e3c>
  41b978:	sub	x9, x8, x0
  41b97c:	cmp	x9, #0x3
  41b980:	b.lt	41b9dc <wcrtomb@plt+0x16eec>  // b.tstop
  41b984:	ldurb	w9, [x11, #-1]
  41b988:	cmp	w9, #0x2e
  41b98c:	b.ne	41b9b4 <wcrtomb@plt+0x16ec4>  // b.any
  41b990:	ldurb	w9, [x11, #-2]
  41b994:	cmp	w9, #0x2f
  41b998:	csetm	x9, eq  // eq = none
  41b99c:	add	x8, x8, x9
  41b9a0:	sub	x9, x8, x0
  41b9a4:	cmp	x9, #0x3
  41b9a8:	b.ge	41b9c8 <wcrtomb@plt+0x16ed8>  // b.tcont
  41b9ac:	mov	x9, xzr
  41b9b0:	b	41b9d4 <wcrtomb@plt+0x16ee4>
  41b9b4:	mov	x9, xzr
  41b9b8:	add	x8, x8, x9
  41b9bc:	sub	x9, x8, x0
  41b9c0:	cmp	x9, #0x3
  41b9c4:	b.lt	41b9ac <wcrtomb@plt+0x16ebc>  // b.tstop
  41b9c8:	ldurb	w9, [x8, #-2]
  41b9cc:	cmp	w9, #0x2f
  41b9d0:	csetm	x9, eq  // eq = none
  41b9d4:	add	x8, x8, x9
  41b9d8:	sturb	wzr, [x8, #-1]
  41b9dc:	ret
  41b9e0:	stp	x29, x30, [sp, #-48]!
  41b9e4:	stp	x22, x21, [sp, #16]
  41b9e8:	stp	x20, x19, [sp, #32]
  41b9ec:	ldrb	w8, [x1]
  41b9f0:	mov	x20, x1
  41b9f4:	mov	x29, sp
  41b9f8:	cmp	w8, #0x2f
  41b9fc:	b.eq	41ba90 <wcrtomb@plt+0x16fa0>  // b.none
  41ba00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ba04:	ldr	x8, [x8, #1536]
  41ba08:	cbz	x8, 41ba30 <wcrtomb@plt+0x16f40>
  41ba0c:	mov	w9, #0x18                  	// #24
  41ba10:	smaddl	x8, w0, w9, x8
  41ba14:	ldr	x21, [x8, #8]
  41ba18:	cbnz	x21, 41ba4c <wcrtomb@plt+0x16f5c>
  41ba1c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41ba20:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41ba24:	add	x0, x0, #0x1ef
  41ba28:	add	x1, x1, #0xfda
  41ba2c:	bl	42c614 <wcrtomb@plt+0x27b24>
  41ba30:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ba34:	ldr	x21, [x19, #1552]
  41ba38:	cbnz	x21, 41ba4c <wcrtomb@plt+0x16f5c>
  41ba3c:	bl	44a34c <argp_parse@@Base+0xfca0>
  41ba40:	mov	x21, x0
  41ba44:	str	x0, [x19, #1552]
  41ba48:	cbz	x21, 41ba1c <wcrtomb@plt+0x16f2c>
  41ba4c:	mov	x0, x21
  41ba50:	bl	403f00 <strlen@plt>
  41ba54:	mov	x22, x0
  41ba58:	mov	x0, x20
  41ba5c:	bl	403f00 <strlen@plt>
  41ba60:	add	x8, x22, x0
  41ba64:	add	x0, x8, #0x2
  41ba68:	bl	44a010 <argp_parse@@Base+0xf964>
  41ba6c:	mov	x1, x21
  41ba70:	mov	x19, x0
  41ba74:	bl	4047f0 <strcpy@plt>
  41ba78:	add	x0, x0, x22
  41ba7c:	mov	w8, #0x2f                  	// #47
  41ba80:	strb	w8, [x0], #1
  41ba84:	mov	x1, x20
  41ba88:	bl	4047f0 <strcpy@plt>
  41ba8c:	cbnz	x19, 41ba9c <wcrtomb@plt+0x16fac>
  41ba90:	mov	x0, x20
  41ba94:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41ba98:	mov	x19, x0
  41ba9c:	ldrb	w8, [x19]
  41baa0:	mov	x9, x19
  41baa4:	cmp	w8, #0x2e
  41baa8:	mov	x8, x19
  41baac:	b.ne	41bae8 <wcrtomb@plt+0x16ff8>  // b.any
  41bab0:	mov	x9, x19
  41bab4:	mov	x8, x19
  41bab8:	ldrb	w10, [x9, #1]
  41babc:	cmp	w10, #0x2f
  41bac0:	b.ne	41bae8 <wcrtomb@plt+0x16ff8>  // b.any
  41bac4:	add	x9, x9, #0x1
  41bac8:	ldrb	w10, [x9, #1]!
  41bacc:	cmp	w10, #0x2f
  41bad0:	b.eq	41bac8 <wcrtomb@plt+0x16fd8>  // b.none
  41bad4:	cmp	w10, #0x0
  41bad8:	cinc	x8, x8, eq  // eq = none
  41badc:	cmp	w10, #0x2e
  41bae0:	strb	w10, [x8]
  41bae4:	b.eq	41bab8 <wcrtomb@plt+0x16fc8>  // b.none
  41bae8:	mov	w10, #0x1                   	// #1
  41baec:	ldrb	w12, [x9], #1
  41baf0:	mov	x11, x8
  41baf4:	cmp	w12, #0x2f
  41baf8:	strb	w12, [x8], #1
  41bafc:	b.eq	41bb14 <wcrtomb@plt+0x17024>  // b.none
  41bb00:	cbnz	w12, 41baec <wcrtomb@plt+0x16ffc>
  41bb04:	b	41bb38 <wcrtomb@plt+0x17048>
  41bb08:	tst	w11, #0x1
  41bb0c:	cinc	x11, x10, ne  // ne = any
  41bb10:	add	x9, x9, x11
  41bb14:	mov	x11, x9
  41bb18:	ldrb	w12, [x11], #1
  41bb1c:	cmp	w12, #0x2e
  41bb20:	csel	x11, x9, x11, ne  // ne = any
  41bb24:	ldrb	w12, [x11]
  41bb28:	cset	w11, eq  // eq = none
  41bb2c:	cmp	w12, #0x2f
  41bb30:	b.eq	41bb08 <wcrtomb@plt+0x17018>  // b.none
  41bb34:	b	41baec <wcrtomb@plt+0x16ffc>
  41bb38:	sub	x9, x8, x19
  41bb3c:	cmp	x9, #0x3
  41bb40:	b.lt	41bb9c <wcrtomb@plt+0x170ac>  // b.tstop
  41bb44:	ldurb	w9, [x11, #-1]
  41bb48:	cmp	w9, #0x2e
  41bb4c:	b.ne	41bb74 <wcrtomb@plt+0x17084>  // b.any
  41bb50:	ldurb	w9, [x11, #-2]
  41bb54:	cmp	w9, #0x2f
  41bb58:	csetm	x9, eq  // eq = none
  41bb5c:	add	x8, x8, x9
  41bb60:	sub	x9, x8, x19
  41bb64:	cmp	x9, #0x3
  41bb68:	b.ge	41bb88 <wcrtomb@plt+0x17098>  // b.tcont
  41bb6c:	mov	x9, xzr
  41bb70:	b	41bb94 <wcrtomb@plt+0x170a4>
  41bb74:	mov	x9, xzr
  41bb78:	add	x8, x8, x9
  41bb7c:	sub	x9, x8, x19
  41bb80:	cmp	x9, #0x3
  41bb84:	b.lt	41bb6c <wcrtomb@plt+0x1707c>  // b.tstop
  41bb88:	ldurb	w9, [x8, #-2]
  41bb8c:	cmp	w9, #0x2f
  41bb90:	csetm	x9, eq  // eq = none
  41bb94:	add	x8, x8, x9
  41bb98:	sturb	wzr, [x8, #-1]
  41bb9c:	mov	x0, x19
  41bba0:	ldp	x20, x19, [sp, #32]
  41bba4:	ldp	x22, x21, [sp, #16]
  41bba8:	ldp	x29, x30, [sp], #48
  41bbac:	ret
  41bbb0:	stp	x29, x30, [sp, #-80]!
  41bbb4:	stp	x24, x23, [sp, #32]
  41bbb8:	stp	x22, x21, [sp, #48]
  41bbbc:	stp	x20, x19, [sp, #64]
  41bbc0:	ldr	x21, [x0]
  41bbc4:	mov	x24, x0
  41bbc8:	str	x25, [sp, #16]
  41bbcc:	mov	x29, sp
  41bbd0:	mov	x0, x21
  41bbd4:	mov	x19, x4
  41bbd8:	mov	x20, x3
  41bbdc:	mov	x22, x2
  41bbe0:	mov	x25, x1
  41bbe4:	bl	403f00 <strlen@plt>
  41bbe8:	cmp	x0, x22
  41bbec:	b.ls	41bc5c <wcrtomb@plt+0x1716c>  // b.plast
  41bbf0:	mov	x23, x0
  41bbf4:	mov	x0, x21
  41bbf8:	mov	x1, x25
  41bbfc:	mov	x2, x22
  41bc00:	bl	404400 <bcmp@plt>
  41bc04:	cbnz	w0, 41bc5c <wcrtomb@plt+0x1716c>
  41bc08:	ldrb	w8, [x21, x22]
  41bc0c:	cmp	w8, #0x2f
  41bc10:	b.ne	41bc5c <wcrtomb@plt+0x1716c>  // b.any
  41bc14:	mov	w8, #0x1                   	// #1
  41bc18:	cmp	x19, x22
  41bc1c:	sub	x25, x8, x22
  41bc20:	b.ls	41bc3c <wcrtomb@plt+0x1714c>  // b.plast
  41bc24:	add	x8, x25, x19
  41bc28:	add	x1, x8, x23
  41bc2c:	mov	x0, x21
  41bc30:	bl	44a090 <argp_parse@@Base+0xf9e4>
  41bc34:	mov	x21, x0
  41bc38:	str	x0, [x24]
  41bc3c:	add	x0, x21, x19
  41bc40:	add	x1, x21, x22
  41bc44:	add	x2, x25, x23
  41bc48:	bl	403e90 <memmove@plt>
  41bc4c:	mov	x0, x21
  41bc50:	mov	x1, x20
  41bc54:	mov	x2, x19
  41bc58:	bl	403e80 <memcpy@plt>
  41bc5c:	ldp	x20, x19, [sp, #64]
  41bc60:	ldp	x22, x21, [sp, #48]
  41bc64:	ldp	x24, x23, [sp, #32]
  41bc68:	ldr	x25, [sp, #16]
  41bc6c:	ldp	x29, x30, [sp], #80
  41bc70:	ret
  41bc74:	cmp	x0, x2
  41bc78:	mov	x1, x3
  41bc7c:	b.ls	41bc84 <wcrtomb@plt+0x17194>  // b.plast
  41bc80:	b	440170 <argp_parse@@Base+0x5ac4>
  41bc84:	b	440290 <argp_parse@@Base+0x5be4>
  41bc88:	stp	x29, x30, [sp, #-64]!
  41bc8c:	str	x23, [sp, #16]
  41bc90:	stp	x22, x21, [sp, #32]
  41bc94:	stp	x20, x19, [sp, #48]
  41bc98:	mov	x29, sp
  41bc9c:	mov	x19, x3
  41bca0:	mov	x21, x2
  41bca4:	mov	x22, x1
  41bca8:	mov	x23, x0
  41bcac:	bl	4049c0 <__errno_location@plt>
  41bcb0:	str	wzr, [x0]
  41bcb4:	ldrb	w8, [x23]
  41bcb8:	mov	x20, x0
  41bcbc:	tbnz	x19, #63, 41bd10 <wcrtomb@plt+0x17220>
  41bcc0:	cmp	w8, #0x2d
  41bcc4:	cinc	x8, x23, eq  // eq = none
  41bcc8:	ldrb	w8, [x8]
  41bccc:	sub	w8, w8, #0x30
  41bcd0:	cmp	w8, #0x9
  41bcd4:	b.hi	41bd48 <wcrtomb@plt+0x17258>  // b.pmore
  41bcd8:	mov	w2, #0xa                   	// #10
  41bcdc:	mov	x0, x23
  41bce0:	mov	x1, x22
  41bce4:	mov	w3, wzr
  41bce8:	bl	404290 <__strtol_internal@plt>
  41bcec:	cmp	x0, x21
  41bcf0:	b.lt	41bcfc <wcrtomb@plt+0x1720c>  // b.tstop
  41bcf4:	cmp	x0, x19
  41bcf8:	b.le	41bd54 <wcrtomb@plt+0x17264>
  41bcfc:	mov	w8, #0x22                  	// #34
  41bd00:	cmp	x0, x21
  41bd04:	str	w8, [x20]
  41bd08:	csel	x0, x21, x19, lt  // lt = tstop
  41bd0c:	b	41bd54 <wcrtomb@plt+0x17264>
  41bd10:	sub	w8, w8, #0x30
  41bd14:	cmp	w8, #0x9
  41bd18:	b.hi	41bd48 <wcrtomb@plt+0x17258>  // b.pmore
  41bd1c:	mov	w2, #0xa                   	// #10
  41bd20:	mov	x0, x23
  41bd24:	mov	x1, x22
  41bd28:	mov	w3, wzr
  41bd2c:	bl	4043c0 <__strtoul_internal@plt>
  41bd30:	cmp	x0, x19
  41bd34:	b.ls	41bd54 <wcrtomb@plt+0x17264>  // b.plast
  41bd38:	mov	w8, #0x22                  	// #34
  41bd3c:	str	w8, [x20]
  41bd40:	mov	x0, x19
  41bd44:	b	41bd54 <wcrtomb@plt+0x17264>
  41bd48:	mov	x0, xzr
  41bd4c:	mov	w8, #0x16                  	// #22
  41bd50:	str	w8, [x20]
  41bd54:	ldp	x20, x19, [sp, #48]
  41bd58:	ldp	x22, x21, [sp, #32]
  41bd5c:	ldr	x23, [sp, #16]
  41bd60:	ldp	x29, x30, [sp], #64
  41bd64:	ret
  41bd68:	cbz	w0, 41be2c <wcrtomb@plt+0x1733c>
  41bd6c:	mov	w10, #0x6667                	// #26215
  41bd70:	movk	w10, #0x6666, lsl #16
  41bd74:	smull	x11, w0, w10
  41bd78:	lsr	x12, x11, #63
  41bd7c:	asr	x11, x11, #34
  41bd80:	mov	w9, #0x2e                  	// #46
  41bd84:	mov	x8, x1
  41bd88:	add	w12, w11, w12
  41bd8c:	mov	w11, #0xa                   	// #10
  41bd90:	msub	w12, w12, w11, w0
  41bd94:	strb	w9, [x8], #1
  41bd98:	mov	w9, #0x9                   	// #9
  41bd9c:	cbnz	w12, 41bdcc <wcrtomb@plt+0x172dc>
  41bda0:	smull	x12, w0, w10
  41bda4:	lsr	x13, x12, #63
  41bda8:	asr	x12, x12, #34
  41bdac:	add	w0, w12, w13
  41bdb0:	smull	x12, w0, w10
  41bdb4:	lsr	x13, x12, #63
  41bdb8:	asr	x12, x12, #34
  41bdbc:	add	w12, w12, w13
  41bdc0:	msub	w12, w12, w11, w0
  41bdc4:	sub	w9, w9, #0x1
  41bdc8:	cbz	w12, 41bda0 <wcrtomb@plt+0x172b0>
  41bdcc:	strb	wzr, [x8, w9, sxtw]
  41bdd0:	subs	w9, w9, #0x1
  41bdd4:	add	w11, w12, #0x30
  41bdd8:	sxtw	x10, w9
  41bddc:	strb	w11, [x8, x10]
  41bde0:	b.eq	41be28 <wcrtomb@plt+0x17338>  // b.none
  41bde4:	add	x8, x1, x10
  41bde8:	mov	w10, #0x6667                	// #26215
  41bdec:	movk	w10, #0x6666, lsl #16
  41bdf0:	mov	w11, #0xa                   	// #10
  41bdf4:	smull	x12, w0, w10
  41bdf8:	lsr	x13, x12, #63
  41bdfc:	asr	x12, x12, #34
  41be00:	add	w0, w12, w13
  41be04:	smull	x12, w0, w10
  41be08:	lsr	x13, x12, #63
  41be0c:	lsr	x12, x12, #34
  41be10:	add	w12, w12, w13
  41be14:	msub	w12, w12, w11, w0
  41be18:	add	w12, w12, #0x30
  41be1c:	subs	w9, w9, #0x1
  41be20:	strb	w12, [x8], #-1
  41be24:	b.ne	41bdf4 <wcrtomb@plt+0x17304>  // b.any
  41be28:	ret
  41be2c:	strb	wzr, [x1]
  41be30:	ret
  41be34:	stp	x29, x30, [sp, #-48]!
  41be38:	mov	w8, #0xc9ff                	// #51711
  41be3c:	movk	w8, #0x3b9a, lsl #16
  41be40:	cmp	w1, w8
  41be44:	csel	w9, wzr, w1, hi  // hi = pmore
  41be48:	cmp	w9, #0x0
  41be4c:	cset	w10, ne  // ne = any
  41be50:	cmp	x0, #0x0
  41be54:	cset	w11, lt  // lt = tstop
  41be58:	and	w12, w11, w10
  41be5c:	add	x12, x0, x12
  41be60:	stp	x20, x19, [sp, #32]
  41be64:	mov	x20, x0
  41be68:	sub	w8, w8, w9
  41be6c:	cneg	x0, x12, lt  // lt = tstop
  41be70:	tst	w11, w10
  41be74:	add	x1, x2, #0x1
  41be78:	str	x21, [sp, #16]
  41be7c:	mov	x29, sp
  41be80:	mov	x19, x2
  41be84:	csinc	w21, w9, w8, eq  // eq = none
  41be88:	bl	440290 <argp_parse@@Base+0x5be4>
  41be8c:	tbnz	x20, #63, 41bf64 <wcrtomb@plt+0x17474>
  41be90:	cbz	w21, 41bf70 <wcrtomb@plt+0x17480>
  41be94:	mov	w10, #0xcccd                	// #52429
  41be98:	movk	w10, #0xcccc, lsl #16
  41be9c:	umull	x10, w21, w10
  41bea0:	mov	w9, #0x2e                  	// #46
  41bea4:	lsr	x11, x10, #35
  41bea8:	mov	w10, #0xa                   	// #10
  41beac:	add	x8, x19, #0x16
  41beb0:	msub	w12, w11, w10, w21
  41beb4:	strb	w9, [x19, #21]
  41beb8:	mov	w9, #0x9                   	// #9
  41bebc:	cbnz	w12, 41bef4 <wcrtomb@plt+0x17404>
  41bec0:	mov	w11, #0x6667                	// #26215
  41bec4:	movk	w11, #0x6666, lsl #16
  41bec8:	smull	x12, w21, w11
  41becc:	lsr	x13, x12, #63
  41bed0:	asr	x12, x12, #34
  41bed4:	add	w21, w12, w13
  41bed8:	smull	x12, w21, w11
  41bedc:	lsr	x13, x12, #63
  41bee0:	asr	x12, x12, #34
  41bee4:	add	w12, w12, w13
  41bee8:	msub	w12, w12, w10, w21
  41beec:	sub	w9, w9, #0x1
  41bef0:	cbz	w12, 41bec8 <wcrtomb@plt+0x173d8>
  41bef4:	strb	wzr, [x8, w9, sxtw]
  41bef8:	subs	w9, w9, #0x1
  41befc:	add	w11, w12, #0x30
  41bf00:	sxtw	x10, w9
  41bf04:	strb	w11, [x8, x10]
  41bf08:	b.eq	41bf54 <wcrtomb@plt+0x17464>  // b.none
  41bf0c:	add	x10, x10, x19
  41bf10:	mov	w8, #0x6667                	// #26215
  41bf14:	movk	w8, #0x6666, lsl #16
  41bf18:	add	x10, x10, #0x15
  41bf1c:	mov	w11, #0xa                   	// #10
  41bf20:	smull	x12, w21, w8
  41bf24:	lsr	x13, x12, #63
  41bf28:	asr	x12, x12, #34
  41bf2c:	add	w21, w12, w13
  41bf30:	smull	x12, w21, w8
  41bf34:	lsr	x13, x12, #63
  41bf38:	lsr	x12, x12, #34
  41bf3c:	add	w12, w12, w13
  41bf40:	msub	w12, w12, w11, w21
  41bf44:	add	w12, w12, #0x30
  41bf48:	subs	w9, w9, #0x1
  41bf4c:	strb	w12, [x10], #-1
  41bf50:	b.ne	41bf20 <wcrtomb@plt+0x17430>  // b.any
  41bf54:	ldp	x20, x19, [sp, #32]
  41bf58:	ldr	x21, [sp, #16]
  41bf5c:	ldp	x29, x30, [sp], #48
  41bf60:	ret
  41bf64:	mov	w8, #0x2d                  	// #45
  41bf68:	strb	w8, [x0, #-1]!
  41bf6c:	cbnz	w21, 41be94 <wcrtomb@plt+0x173a4>
  41bf70:	strb	wzr, [x19, #21]
  41bf74:	ldp	x20, x19, [sp, #32]
  41bf78:	ldr	x21, [sp, #16]
  41bf7c:	ldp	x29, x30, [sp], #48
  41bf80:	ret
  41bf84:	stp	x29, x30, [sp, #-64]!
  41bf88:	str	x23, [sp, #16]
  41bf8c:	stp	x22, x21, [sp, #32]
  41bf90:	stp	x20, x19, [sp, #48]
  41bf94:	mov	x8, x0
  41bf98:	ldrb	w23, [x8], #1
  41bf9c:	mov	x29, sp
  41bfa0:	mov	w22, w2
  41bfa4:	mov	x19, x1
  41bfa8:	cmp	w23, #0x2d
  41bfac:	csel	x8, x0, x8, ne  // ne = any
  41bfb0:	ldrb	w8, [x8]
  41bfb4:	mov	x20, x0
  41bfb8:	sub	w21, w8, #0x30
  41bfbc:	bl	4049c0 <__errno_location@plt>
  41bfc0:	cmp	w21, #0xa
  41bfc4:	mov	x21, x0
  41bfc8:	b.cs	41bff8 <wcrtomb@plt+0x17508>  // b.hs, b.nlast
  41bfcc:	cmp	w23, #0x2d
  41bfd0:	mov	w2, #0xa                   	// #10
  41bfd4:	mov	x0, x20
  41bfd8:	mov	x1, x19
  41bfdc:	mov	w3, wzr
  41bfe0:	str	wzr, [x21]
  41bfe4:	b.ne	41c00c <wcrtomb@plt+0x1751c>  // b.any
  41bfe8:	bl	404290 <__strtol_internal@plt>
  41bfec:	ldr	x20, [x19]
  41bff0:	tbnz	w22, #0, 41c01c <wcrtomb@plt+0x1752c>
  41bff4:	b	41c164 <wcrtomb@plt+0x17674>
  41bff8:	mov	w8, #0x16                  	// #22
  41bffc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41c000:	str	w8, [x21]
  41c004:	mov	x1, #0xffffffffffffffff    	// #-1
  41c008:	b	41c178 <wcrtomb@plt+0x17688>
  41c00c:	bl	4043c0 <__strtoul_internal@plt>
  41c010:	tbnz	x0, #63, 41c098 <wcrtomb@plt+0x175a8>
  41c014:	ldr	x20, [x19]
  41c018:	tbz	w22, #0, 41c164 <wcrtomb@plt+0x17674>
  41c01c:	ldrb	w8, [x20]
  41c020:	cmp	w8, #0x2e
  41c024:	b.ne	41c164 <wcrtomb@plt+0x17674>  // b.any
  41c028:	ldrb	w12, [x20, #1]!
  41c02c:	sub	w13, w12, #0x30
  41c030:	cmp	w13, #0x9
  41c034:	b.hi	41c0b0 <wcrtomb@plt+0x175c0>  // b.pmore
  41c038:	mov	w8, wzr
  41c03c:	mov	w10, wzr
  41c040:	mov	w9, wzr
  41c044:	mov	w11, #0xa                   	// #10
  41c048:	b	41c06c <wcrtomb@plt+0x1757c>
  41c04c:	and	w12, w12, #0xff
  41c050:	cmp	w12, #0x30
  41c054:	cset	w12, ne  // ne = any
  41c058:	orr	w8, w8, w12
  41c05c:	ldrb	w12, [x20, #1]!
  41c060:	sub	w13, w12, #0x30
  41c064:	cmp	w13, #0xa
  41c068:	b.cs	41c08c <wcrtomb@plt+0x1759c>  // b.hs, b.nlast
  41c06c:	cmp	w10, #0x8
  41c070:	b.gt	41c04c <wcrtomb@plt+0x1755c>
  41c074:	add	w10, w10, #0x1
  41c078:	madd	w9, w9, w11, w13
  41c07c:	ldrb	w12, [x20, #1]!
  41c080:	sub	w13, w12, #0x30
  41c084:	cmp	w13, #0xa
  41c088:	b.cc	41c06c <wcrtomb@plt+0x1757c>  // b.lo, b.ul, b.last
  41c08c:	cmp	w10, #0x8
  41c090:	b.gt	41c138 <wcrtomb@plt+0x17648>
  41c094:	b	41c0bc <wcrtomb@plt+0x175cc>
  41c098:	mov	w8, #0x22                  	// #34
  41c09c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41c0a0:	str	w8, [x21]
  41c0a4:	ldr	x20, [x19]
  41c0a8:	tbnz	w22, #0, 41c01c <wcrtomb@plt+0x1752c>
  41c0ac:	b	41c164 <wcrtomb@plt+0x17674>
  41c0b0:	mov	w8, wzr
  41c0b4:	mov	w10, wzr
  41c0b8:	mov	w9, wzr
  41c0bc:	cmp	w10, #0x8
  41c0c0:	mov	w11, #0x8                   	// #8
  41c0c4:	csel	w11, w10, w11, gt
  41c0c8:	sub	w11, w11, w10
  41c0cc:	add	w11, w11, #0x1
  41c0d0:	cmp	w11, #0x7
  41c0d4:	b.ls	41c120 <wcrtomb@plt+0x17630>  // b.plast
  41c0d8:	and	w12, w11, #0xfffffff8
  41c0dc:	movi	v1.4s, #0x1
  41c0e0:	movi	v0.4s, #0x1
  41c0e4:	add	w10, w10, w12
  41c0e8:	mov	v1.s[0], w9
  41c0ec:	movi	v2.4s, #0xa
  41c0f0:	mov	w9, w12
  41c0f4:	mul	v1.4s, v1.4s, v2.4s
  41c0f8:	subs	w9, w9, #0x8
  41c0fc:	mul	v0.4s, v0.4s, v2.4s
  41c100:	b.ne	41c0f4 <wcrtomb@plt+0x17604>  // b.any
  41c104:	mul	v0.4s, v0.4s, v1.4s
  41c108:	ext	v1.16b, v0.16b, v0.16b, #8
  41c10c:	mul	v0.4s, v0.4s, v1.4s
  41c110:	mul	v0.4s, v0.4s, v0.s[1]
  41c114:	cmp	w11, w12
  41c118:	fmov	w9, s0
  41c11c:	b.eq	41c138 <wcrtomb@plt+0x17648>  // b.none
  41c120:	sub	w10, w10, #0x1
  41c124:	add	w9, w9, w9, lsl #2
  41c128:	add	w10, w10, #0x1
  41c12c:	cmp	w10, #0x8
  41c130:	lsl	w9, w9, #1
  41c134:	b.lt	41c124 <wcrtomb@plt+0x17634>  // b.tstop
  41c138:	cmp	w23, #0x2d
  41c13c:	b.ne	41c168 <wcrtomb@plt+0x17678>  // b.any
  41c140:	and	w8, w8, #0x1
  41c144:	adds	w8, w9, w8
  41c148:	b.eq	41c164 <wcrtomb@plt+0x17674>  // b.none
  41c14c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41c150:	cmp	x0, x9
  41c154:	b.ne	41c190 <wcrtomb@plt+0x176a0>  // b.any
  41c158:	mov	w9, #0xffffffff            	// #-1
  41c15c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41c160:	b	41c168 <wcrtomb@plt+0x17678>
  41c164:	mov	w9, wzr
  41c168:	ldr	w8, [x21]
  41c16c:	cmp	w8, #0x22
  41c170:	csinv	w8, w9, wzr, ne  // ne = any
  41c174:	sxtw	x1, w8
  41c178:	str	x20, [x19]
  41c17c:	ldp	x20, x19, [sp, #48]
  41c180:	ldp	x22, x21, [sp, #32]
  41c184:	ldr	x23, [sp, #16]
  41c188:	ldp	x29, x30, [sp], #64
  41c18c:	ret
  41c190:	mov	w9, #0xca00                	// #51712
  41c194:	movk	w9, #0x3b9a, lsl #16
  41c198:	sub	x0, x0, #0x1
  41c19c:	sub	w9, w9, w8
  41c1a0:	b	41c168 <wcrtomb@plt+0x17678>
  41c1a4:	ldrb	w8, [x0]
  41c1a8:	cmp	w8, #0x2f
  41c1ac:	b.ne	41c1f4 <wcrtomb@plt+0x17704>  // b.any
  41c1b0:	mov	w8, #0x2                   	// #2
  41c1b4:	mov	x10, x0
  41c1b8:	ldrb	w9, [x0, #1]!
  41c1bc:	cmp	w9, #0x2f
  41c1c0:	b.eq	41c1b4 <wcrtomb@plt+0x176c4>  // b.none
  41c1c4:	cmp	w9, #0x2e
  41c1c8:	b.ne	41c1e8 <wcrtomb@plt+0x176f8>  // b.any
  41c1cc:	ldrb	w11, [x10, #2]
  41c1d0:	cmp	w11, #0x2e
  41c1d4:	cinc	x11, x8, eq  // eq = none
  41c1d8:	add	x0, x10, x11
  41c1dc:	ldrb	w10, [x0]
  41c1e0:	cmp	w10, #0x2f
  41c1e4:	b.eq	41c1b4 <wcrtomb@plt+0x176c4>  // b.none
  41c1e8:	cmp	w9, #0x0
  41c1ec:	cset	w0, eq  // eq = none
  41c1f0:	ret
  41c1f4:	and	w8, w8, #0xff
  41c1f8:	cmp	w8, #0x2e
  41c1fc:	b.ne	41c220 <wcrtomb@plt+0x17730>  // b.any
  41c200:	ldrb	w8, [x0, #1]
  41c204:	cmp	w8, #0x2f
  41c208:	b.ne	41c22c <wcrtomb@plt+0x1773c>  // b.any
  41c20c:	add	x0, x0, #0x1
  41c210:	ldrb	w8, [x0, #1]!
  41c214:	cmp	w8, #0x2f
  41c218:	b.eq	41c210 <wcrtomb@plt+0x17720>  // b.none
  41c21c:	b	41c1f4 <wcrtomb@plt+0x17704>
  41c220:	cbnz	w8, 41c238 <wcrtomb@plt+0x17748>
  41c224:	mov	w0, #0x1                   	// #1
  41c228:	ret
  41c22c:	cmp	w8, #0x0
  41c230:	cset	w0, eq  // eq = none
  41c234:	ret
  41c238:	mov	w0, wzr
  41c23c:	ret
  41c240:	stp	x29, x30, [sp, #-80]!
  41c244:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41c248:	ldr	w8, [x8, #1864]
  41c24c:	stp	x20, x19, [sp, #64]
  41c250:	mov	x19, x0
  41c254:	stp	x22, x21, [sp, #48]
  41c258:	mov	w21, w1
  41c25c:	mov	w0, w8
  41c260:	mov	x1, x19
  41c264:	mov	w2, wzr
  41c268:	stp	x26, x25, [sp, #16]
  41c26c:	stp	x24, x23, [sp, #32]
  41c270:	mov	x29, sp
  41c274:	bl	404070 <unlinkat@plt>
  41c278:	cbz	w0, 41c360 <wcrtomb@plt+0x17870>
  41c27c:	bl	4049c0 <__errno_location@plt>
  41c280:	ldr	w8, [x0]
  41c284:	mov	x20, x0
  41c288:	cmp	w8, #0x15
  41c28c:	b.eq	41c298 <wcrtomb@plt+0x177a8>  // b.none
  41c290:	cmp	w8, #0x1
  41c294:	b.ne	41c368 <wcrtomb@plt+0x17878>  // b.any
  41c298:	mov	x0, x19
  41c29c:	bl	41c3a0 <wcrtomb@plt+0x178b0>
  41c2a0:	cbz	w0, 41c360 <wcrtomb@plt+0x17870>
  41c2a4:	ldr	w8, [x20]
  41c2a8:	cmp	w8, #0x27
  41c2ac:	b.hi	41c368 <wcrtomb@plt+0x17878>  // b.pmore
  41c2b0:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41c2b4:	add	x9, x9, #0x1c7
  41c2b8:	adr	x10, 41c2cc <wcrtomb@plt+0x177dc>
  41c2bc:	ldrb	w11, [x9, x8]
  41c2c0:	add	x10, x10, x11, lsl #2
  41c2c4:	mov	w0, wzr
  41c2c8:	br	x10
  41c2cc:	cmp	w21, #0x2
  41c2d0:	b.eq	41c384 <wcrtomb@plt+0x17894>  // b.none
  41c2d4:	cmp	w21, #0x1
  41c2d8:	b.ne	41c368 <wcrtomb@plt+0x17878>  // b.any
  41c2dc:	mov	x0, x19
  41c2e0:	mov	w1, wzr
  41c2e4:	bl	41c494 <wcrtomb@plt+0x179a4>
  41c2e8:	cbz	x0, 41c36c <wcrtomb@plt+0x1787c>
  41c2ec:	mov	x21, x0
  41c2f0:	bl	403f00 <strlen@plt>
  41c2f4:	cbz	x0, 41c344 <wcrtomb@plt+0x17854>
  41c2f8:	mov	x22, x0
  41c2fc:	mov	x23, x21
  41c300:	mov	x0, x19
  41c304:	mov	x1, x23
  41c308:	bl	41f9fc <wcrtomb@plt+0x1af0c>
  41c30c:	mov	w1, #0x1                   	// #1
  41c310:	mov	x24, x0
  41c314:	bl	41c240 <wcrtomb@plt+0x17750>
  41c318:	ldr	w26, [x20]
  41c31c:	mov	w25, w0
  41c320:	mov	x0, x24
  41c324:	bl	4046b0 <free@plt>
  41c328:	cbz	w25, 41c38c <wcrtomb@plt+0x1789c>
  41c32c:	add	x8, x22, x23
  41c330:	add	x23, x8, #0x1
  41c334:	mov	x0, x23
  41c338:	bl	403f00 <strlen@plt>
  41c33c:	mov	x22, x0
  41c340:	cbnz	x0, 41c300 <wcrtomb@plt+0x17810>
  41c344:	mov	x0, x21
  41c348:	bl	4046b0 <free@plt>
  41c34c:	mov	x0, x19
  41c350:	bl	41c3a0 <wcrtomb@plt+0x178b0>
  41c354:	cmp	w0, #0x0
  41c358:	cset	w0, eq  // eq = none
  41c35c:	b	41c36c <wcrtomb@plt+0x1787c>
  41c360:	mov	w0, #0x1                   	// #1
  41c364:	b	41c36c <wcrtomb@plt+0x1787c>
  41c368:	mov	w0, wzr
  41c36c:	ldp	x20, x19, [sp, #64]
  41c370:	ldp	x22, x21, [sp, #48]
  41c374:	ldp	x24, x23, [sp, #32]
  41c378:	ldp	x26, x25, [sp, #16]
  41c37c:	ldp	x29, x30, [sp], #80
  41c380:	ret
  41c384:	mov	w0, #0xffffffff            	// #-1
  41c388:	b	41c36c <wcrtomb@plt+0x1787c>
  41c38c:	mov	x0, x21
  41c390:	bl	4046b0 <free@plt>
  41c394:	mov	w0, wzr
  41c398:	str	w26, [x20]
  41c39c:	b	41c36c <wcrtomb@plt+0x1787c>
  41c3a0:	stp	x29, x30, [sp, #-32]!
  41c3a4:	ldrb	w9, [x0]
  41c3a8:	str	x19, [sp, #16]
  41c3ac:	mov	x19, x0
  41c3b0:	mov	x29, sp
  41c3b4:	cmp	w9, #0x2f
  41c3b8:	b.ne	41c404 <wcrtomb@plt+0x17914>  // b.any
  41c3bc:	mov	w8, #0x2                   	// #2
  41c3c0:	mov	x9, x19
  41c3c4:	b	41c3d4 <wcrtomb@plt+0x178e4>
  41c3c8:	cmp	w10, #0x2f
  41c3cc:	mov	x9, x11
  41c3d0:	b.ne	41c450 <wcrtomb@plt+0x17960>  // b.any
  41c3d4:	mov	x11, x9
  41c3d8:	ldrb	w10, [x11, #1]!
  41c3dc:	cmp	w10, #0x2e
  41c3e0:	b.ne	41c3c8 <wcrtomb@plt+0x178d8>  // b.any
  41c3e4:	ldrb	w10, [x9, #2]
  41c3e8:	cmp	w10, #0x2e
  41c3ec:	cinc	x10, x8, eq  // eq = none
  41c3f0:	add	x9, x9, x10
  41c3f4:	ldrb	w10, [x9]
  41c3f8:	cmp	w10, #0x2f
  41c3fc:	b.eq	41c3d4 <wcrtomb@plt+0x178e4>  // b.none
  41c400:	b	41c454 <wcrtomb@plt+0x17964>
  41c404:	mov	x8, x19
  41c408:	and	w9, w9, #0xff
  41c40c:	cmp	w9, #0x2e
  41c410:	b.ne	41c434 <wcrtomb@plt+0x17944>  // b.any
  41c414:	ldrb	w9, [x8, #1]
  41c418:	cmp	w9, #0x2f
  41c41c:	b.ne	41c434 <wcrtomb@plt+0x17944>  // b.any
  41c420:	add	x8, x8, #0x1
  41c424:	ldrb	w9, [x8, #1]!
  41c428:	cmp	w9, #0x2f
  41c42c:	b.eq	41c424 <wcrtomb@plt+0x17934>  // b.none
  41c430:	b	41c408 <wcrtomb@plt+0x17918>
  41c434:	cbnz	w9, 41c454 <wcrtomb@plt+0x17964>
  41c438:	bl	4049c0 <__errno_location@plt>
  41c43c:	str	wzr, [x0]
  41c440:	mov	w0, #0xffffffff            	// #-1
  41c444:	ldr	x19, [sp, #16]
  41c448:	ldp	x29, x30, [sp], #32
  41c44c:	ret
  41c450:	cbz	w10, 41c438 <wcrtomb@plt+0x17948>
  41c454:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41c458:	ldr	w0, [x8, #1864]
  41c45c:	mov	w2, #0x200                 	// #512
  41c460:	mov	x1, x19
  41c464:	bl	404070 <unlinkat@plt>
  41c468:	cbz	w0, 41c47c <wcrtomb@plt+0x1798c>
  41c46c:	mov	w0, #0xffffffff            	// #-1
  41c470:	ldr	x19, [sp, #16]
  41c474:	ldp	x29, x30, [sp], #32
  41c478:	ret
  41c47c:	mov	x0, x19
  41c480:	bl	40f3b0 <wcrtomb@plt+0xa8c0>
  41c484:	mov	w0, wzr
  41c488:	ldr	x19, [sp, #16]
  41c48c:	ldp	x29, x30, [sp], #32
  41c490:	ret
  41c494:	stp	x29, x30, [sp, #-48]!
  41c498:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c49c:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41c4a0:	ldr	w9, [x9, #3700]
  41c4a4:	stp	x20, x19, [sp, #32]
  41c4a8:	mov	x19, x0
  41c4ac:	ldr	w0, [x8, #1864]
  41c4b0:	str	x21, [sp, #16]
  41c4b4:	mov	w21, w1
  41c4b8:	orr	w2, w9, #0x4000
  41c4bc:	mov	x1, x19
  41c4c0:	mov	x29, sp
  41c4c4:	bl	4049a0 <openat@plt>
  41c4c8:	tbnz	w0, #31, 41c508 <wcrtomb@plt+0x17a18>
  41c4cc:	mov	w20, w0
  41c4d0:	bl	404520 <fdopendir@plt>
  41c4d4:	cbz	x0, 41c534 <wcrtomb@plt+0x17a44>
  41c4d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c4dc:	ldr	w1, [x8, #3512]
  41c4e0:	mov	x21, x0
  41c4e4:	bl	4494c8 <argp_parse@@Base+0xee1c>
  41c4e8:	mov	x20, x0
  41c4ec:	cbnz	x0, 41c4f8 <wcrtomb@plt+0x17a08>
  41c4f0:	mov	x0, x19
  41c4f4:	bl	42d11c <wcrtomb@plt+0x2862c>
  41c4f8:	mov	x0, x21
  41c4fc:	bl	4044b0 <closedir@plt>
  41c500:	cbnz	w0, 41c54c <wcrtomb@plt+0x17a5c>
  41c504:	b	41c554 <wcrtomb@plt+0x17a64>
  41c508:	cbnz	w21, 41c524 <wcrtomb@plt+0x17a34>
  41c50c:	bl	4049c0 <__errno_location@plt>
  41c510:	ldr	w8, [x0]
  41c514:	cmp	w8, #0x2
  41c518:	b.ne	41c524 <wcrtomb@plt+0x17a34>  // b.any
  41c51c:	mov	x20, xzr
  41c520:	b	41c554 <wcrtomb@plt+0x17a64>
  41c524:	mov	x0, x19
  41c528:	bl	42cbf8 <wcrtomb@plt+0x28108>
  41c52c:	mov	x20, xzr
  41c530:	b	41c554 <wcrtomb@plt+0x17a64>
  41c534:	mov	x0, x19
  41c538:	bl	42d11c <wcrtomb@plt+0x2862c>
  41c53c:	mov	w0, w20
  41c540:	bl	4044d0 <close@plt>
  41c544:	mov	x20, xzr
  41c548:	cbz	w0, 41c554 <wcrtomb@plt+0x17a64>
  41c54c:	mov	x0, x19
  41c550:	bl	42d11c <wcrtomb@plt+0x2862c>
  41c554:	mov	x0, x20
  41c558:	ldp	x20, x19, [sp, #32]
  41c55c:	ldr	x21, [sp, #16]
  41c560:	ldp	x29, x30, [sp], #48
  41c564:	ret
  41c568:	sub	sp, sp, #0xc0
  41c56c:	stp	x22, x21, [sp, #160]
  41c570:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c574:	ldr	x8, [x21, #1504]
  41c578:	stp	x20, x19, [sp, #176]
  41c57c:	mov	x19, x0
  41c580:	stp	x29, x30, [sp, #128]
  41c584:	mov	x0, x8
  41c588:	str	x23, [sp, #144]
  41c58c:	add	x29, sp, #0x80
  41c590:	mov	w20, w1
  41c594:	bl	4046b0 <free@plt>
  41c598:	cbz	x19, 41c5a8 <wcrtomb@plt+0x17ab8>
  41c59c:	mov	x0, x19
  41c5a0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41c5a4:	b	41c5ac <wcrtomb@plt+0x17abc>
  41c5a8:	mov	x0, xzr
  41c5ac:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c5b0:	add	x22, x22, #0x5e0
  41c5b4:	ldr	x8, [x22, #8]
  41c5b8:	str	x0, [x22]
  41c5bc:	mov	x0, x8
  41c5c0:	bl	4046b0 <free@plt>
  41c5c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c5c8:	ldrb	w8, [x8, #4008]
  41c5cc:	str	xzr, [x22, #8]
  41c5d0:	cbnz	w8, 41c604 <wcrtomb@plt+0x17b14>
  41c5d4:	tbz	w20, #0, 41c604 <wcrtomb@plt+0x17b14>
  41c5d8:	mov	w1, #0x3a                  	// #58
  41c5dc:	mov	x0, x19
  41c5e0:	bl	404750 <strchr@plt>
  41c5e4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c5e8:	subs	x2, x0, x19
  41c5ec:	str	x0, [x8, #4016]
  41c5f0:	b.ls	41c604 <wcrtomb@plt+0x17b14>  // b.plast
  41c5f4:	mov	w1, #0x2f                  	// #47
  41c5f8:	mov	x0, x19
  41c5fc:	bl	404840 <memchr@plt>
  41c600:	cbz	x0, 41c78c <wcrtomb@plt+0x17c9c>
  41c604:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41c608:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c60c:	ldr	w1, [x23, #1864]
  41c610:	ldr	w4, [x8, #3552]
  41c614:	mov	x3, sp
  41c618:	mov	w0, wzr
  41c61c:	mov	x2, x19
  41c620:	bl	404ad0 <__fxstatat@plt>
  41c624:	cbz	w0, 41c648 <wcrtomb@plt+0x17b58>
  41c628:	bl	4049c0 <__errno_location@plt>
  41c62c:	ldr	w8, [x0]
  41c630:	cmp	w8, #0x2
  41c634:	b.eq	41c78c <wcrtomb@plt+0x17c9c>  // b.none
  41c638:	mov	x0, x19
  41c63c:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  41c640:	mov	w19, wzr
  41c644:	b	41c790 <wcrtomb@plt+0x17ca0>
  41c648:	ldr	w8, [sp, #16]
  41c64c:	and	w8, w8, #0xf000
  41c650:	cmp	w8, #0x4, lsl #12
  41c654:	b.eq	41c78c <wcrtomb@plt+0x17c9c>  // b.none
  41c658:	tbz	w20, #0, 41c668 <wcrtomb@plt+0x17b78>
  41c65c:	orr	w8, w8, #0x4000
  41c660:	cmp	w8, #0x6, lsl #12
  41c664:	b.eq	41c78c <wcrtomb@plt+0x17c9c>  // b.none
  41c668:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c66c:	ldr	w0, [x23, #1864]
  41c670:	ldr	w2, [x8, #3720]
  41c674:	mov	x1, x19
  41c678:	bl	43bd9c <argp_parse@@Base+0x16f0>
  41c67c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c680:	str	x0, [x8, #1512]
  41c684:	cbz	x0, 41c7ac <wcrtomb@plt+0x17cbc>
  41c688:	mov	x3, x0
  41c68c:	ldr	w0, [x23, #1864]
  41c690:	ldr	x1, [x21, #1504]
  41c694:	mov	w2, w0
  41c698:	bl	404700 <renameat@plt>
  41c69c:	cbz	w0, 41c724 <wcrtomb@plt+0x17c34>
  41c6a0:	bl	4049c0 <__errno_location@plt>
  41c6a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c6a8:	ldr	x8, [x8, #4000]
  41c6ac:	ldr	w19, [x0]
  41c6b0:	cbz	x8, 41c6b8 <wcrtomb@plt+0x17bc8>
  41c6b4:	blr	x8
  41c6b8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41c6bc:	add	x1, x1, #0x209
  41c6c0:	mov	w2, #0x5                   	// #5
  41c6c4:	mov	x0, xzr
  41c6c8:	bl	4048b0 <dcgettext@plt>
  41c6cc:	ldr	x8, [x22]
  41c6d0:	mov	x20, x0
  41c6d4:	mov	x0, x8
  41c6d8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41c6dc:	ldr	x1, [x22, #8]
  41c6e0:	mov	x21, x0
  41c6e4:	mov	w0, #0x1                   	// #1
  41c6e8:	bl	449134 <argp_parse@@Base+0xea88>
  41c6ec:	mov	x4, x0
  41c6f0:	mov	w0, wzr
  41c6f4:	mov	w1, w19
  41c6f8:	mov	x2, x20
  41c6fc:	mov	x3, x21
  41c700:	bl	403f60 <error@plt>
  41c704:	ldr	x0, [x22, #8]
  41c708:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c70c:	mov	w9, #0x2                   	// #2
  41c710:	str	w9, [x8, #2352]
  41c714:	bl	4046b0 <free@plt>
  41c718:	mov	w19, wzr
  41c71c:	str	xzr, [x22, #8]
  41c720:	b	41c790 <wcrtomb@plt+0x17ca0>
  41c724:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c728:	ldr	w8, [x8, #3636]
  41c72c:	cbz	w8, 41c78c <wcrtomb@plt+0x17c9c>
  41c730:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c734:	ldr	x20, [x8, #2824]
  41c738:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41c73c:	add	x1, x1, #0x1f6
  41c740:	mov	w2, #0x5                   	// #5
  41c744:	mov	x0, xzr
  41c748:	bl	4048b0 <dcgettext@plt>
  41c74c:	ldr	x1, [x22]
  41c750:	mov	x21, x0
  41c754:	mov	w0, wzr
  41c758:	bl	449134 <argp_parse@@Base+0xea88>
  41c75c:	ldr	x1, [x22, #8]
  41c760:	mov	x22, x0
  41c764:	mov	w0, #0x1                   	// #1
  41c768:	mov	w19, #0x1                   	// #1
  41c76c:	bl	449134 <argp_parse@@Base+0xea88>
  41c770:	mov	x4, x0
  41c774:	mov	w1, #0x1                   	// #1
  41c778:	mov	x0, x20
  41c77c:	mov	x2, x21
  41c780:	mov	x3, x22
  41c784:	bl	404600 <__fprintf_chk@plt>
  41c788:	b	41c790 <wcrtomb@plt+0x17ca0>
  41c78c:	mov	w19, #0x1                   	// #1
  41c790:	mov	w0, w19
  41c794:	ldp	x20, x19, [sp, #176]
  41c798:	ldp	x22, x21, [sp, #160]
  41c79c:	ldr	x23, [sp, #144]
  41c7a0:	ldp	x29, x30, [sp, #128]
  41c7a4:	add	sp, sp, #0xc0
  41c7a8:	ret
  41c7ac:	bl	40eb80 <wcrtomb@plt+0xa090>
  41c7b0:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41c7b4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c7b8:	mov	x3, x1
  41c7bc:	ldr	w1, [x8, #1864]
  41c7c0:	ldr	w4, [x9, #3552]
  41c7c4:	mov	x2, x0
  41c7c8:	mov	w0, wzr
  41c7cc:	b	404ad0 <__fxstatat@plt>
  41c7d0:	stp	x29, x30, [sp, #-64]!
  41c7d4:	stp	x22, x21, [sp, #32]
  41c7d8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c7dc:	ldr	x1, [x22, #1512]
  41c7e0:	str	x23, [sp, #16]
  41c7e4:	stp	x20, x19, [sp, #48]
  41c7e8:	mov	x29, sp
  41c7ec:	cbz	x1, 41c8f0 <wcrtomb@plt+0x17e00>
  41c7f0:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41c7f4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c7f8:	ldr	w0, [x8, #1864]
  41c7fc:	ldr	x3, [x9, #1504]
  41c800:	mov	w2, w0
  41c804:	bl	404700 <renameat@plt>
  41c808:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c80c:	add	x23, x23, #0x5e0
  41c810:	cbz	w0, 41c884 <wcrtomb@plt+0x17d94>
  41c814:	bl	4049c0 <__errno_location@plt>
  41c818:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c81c:	ldr	x8, [x8, #4000]
  41c820:	ldr	w19, [x0]
  41c824:	cbz	x8, 41c82c <wcrtomb@plt+0x17d3c>
  41c828:	blr	x8
  41c82c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41c830:	add	x1, x1, #0x209
  41c834:	mov	w2, #0x5                   	// #5
  41c838:	mov	x0, xzr
  41c83c:	bl	4048b0 <dcgettext@plt>
  41c840:	ldr	x8, [x23, #8]
  41c844:	mov	x20, x0
  41c848:	mov	x0, x8
  41c84c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41c850:	ldr	x1, [x23]
  41c854:	mov	x21, x0
  41c858:	mov	w0, #0x1                   	// #1
  41c85c:	bl	449134 <argp_parse@@Base+0xea88>
  41c860:	mov	x4, x0
  41c864:	mov	w0, wzr
  41c868:	mov	w1, w19
  41c86c:	mov	x2, x20
  41c870:	mov	x3, x21
  41c874:	bl	403f60 <error@plt>
  41c878:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c87c:	mov	w9, #0x2                   	// #2
  41c880:	str	w9, [x8, #2352]
  41c884:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c888:	ldr	w8, [x8, #3636]
  41c88c:	cbz	w8, 41c8e4 <wcrtomb@plt+0x17df4>
  41c890:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41c894:	ldr	x19, [x8, #2824]
  41c898:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41c89c:	add	x1, x1, #0x221
  41c8a0:	mov	w2, #0x5                   	// #5
  41c8a4:	mov	x0, xzr
  41c8a8:	bl	4048b0 <dcgettext@plt>
  41c8ac:	ldr	x1, [x23, #8]
  41c8b0:	mov	x20, x0
  41c8b4:	mov	w0, wzr
  41c8b8:	bl	449134 <argp_parse@@Base+0xea88>
  41c8bc:	ldr	x1, [x23]
  41c8c0:	mov	x21, x0
  41c8c4:	mov	w0, #0x1                   	// #1
  41c8c8:	bl	449134 <argp_parse@@Base+0xea88>
  41c8cc:	mov	x4, x0
  41c8d0:	mov	w1, #0x1                   	// #1
  41c8d4:	mov	x0, x19
  41c8d8:	mov	x2, x20
  41c8dc:	mov	x3, x21
  41c8e0:	bl	404600 <__fprintf_chk@plt>
  41c8e4:	ldr	x0, [x22, #1512]
  41c8e8:	bl	4046b0 <free@plt>
  41c8ec:	str	xzr, [x22, #1512]
  41c8f0:	ldp	x20, x19, [sp, #48]
  41c8f4:	ldp	x22, x21, [sp, #32]
  41c8f8:	ldr	x23, [sp, #16]
  41c8fc:	ldp	x29, x30, [sp], #64
  41c900:	ret
  41c904:	stp	x29, x30, [sp, #-48]!
  41c908:	str	x21, [sp, #16]
  41c90c:	stp	x20, x19, [sp, #32]
  41c910:	mov	x29, sp
  41c914:	mov	x19, x2
  41c918:	mov	x20, x1
  41c91c:	mov	w21, w0
  41c920:	bl	44932c <argp_parse@@Base+0xec80>
  41c924:	cmn	x0, #0x1
  41c928:	b.eq	41c93c <wcrtomb@plt+0x17e4c>  // b.none
  41c92c:	ldp	x20, x19, [sp, #32]
  41c930:	ldr	x21, [sp, #16]
  41c934:	ldp	x29, x30, [sp], #48
  41c938:	ret
  41c93c:	bl	4049c0 <__errno_location@plt>
  41c940:	ldr	w8, [x0]
  41c944:	cmp	w8, #0xb
  41c948:	b.ne	41c9a0 <wcrtomb@plt+0x17eb0>  // b.any
  41c94c:	mov	w1, #0x3                   	// #3
  41c950:	mov	w0, w21
  41c954:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  41c958:	mov	w8, #0x800                 	// #2048
  41c95c:	movk	w8, #0x8000, lsl #16
  41c960:	and	w8, w0, w8
  41c964:	cmp	w8, #0x800
  41c968:	b.ne	41c9a0 <wcrtomb@plt+0x17eb0>  // b.any
  41c96c:	and	w2, w0, #0xfffff7ff
  41c970:	mov	w1, #0x4                   	// #4
  41c974:	mov	w0, w21
  41c978:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  41c97c:	cmn	w0, #0x1
  41c980:	b.eq	41c9a0 <wcrtomb@plt+0x17eb0>  // b.none
  41c984:	mov	w0, w21
  41c988:	mov	x1, x20
  41c98c:	mov	x2, x19
  41c990:	ldp	x20, x19, [sp, #32]
  41c994:	ldr	x21, [sp, #16]
  41c998:	ldp	x29, x30, [sp], #48
  41c99c:	b	44932c <argp_parse@@Base+0xec80>
  41c9a0:	mov	x0, #0xffffffffffffffff    	// #-1
  41c9a4:	ldp	x20, x19, [sp, #32]
  41c9a8:	ldr	x21, [sp, #16]
  41c9ac:	ldp	x29, x30, [sp], #48
  41c9b0:	ret
  41c9b4:	stp	x29, x30, [sp, #-48]!
  41c9b8:	stp	x22, x21, [sp, #16]
  41c9bc:	stp	x20, x19, [sp, #32]
  41c9c0:	mov	x29, sp
  41c9c4:	mov	x21, x2
  41c9c8:	mov	x22, x1
  41c9cc:	mov	w20, w0
  41c9d0:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  41c9d4:	mov	x19, x0
  41c9d8:	cmp	x0, x21
  41c9dc:	b.cs	41ca3c <wcrtomb@plt+0x17f4c>  // b.hs, b.nlast
  41c9e0:	bl	4049c0 <__errno_location@plt>
  41c9e4:	ldr	w8, [x0]
  41c9e8:	cmp	w8, #0xb
  41c9ec:	b.ne	41ca3c <wcrtomb@plt+0x17f4c>  // b.any
  41c9f0:	mov	w1, #0x3                   	// #3
  41c9f4:	mov	w0, w20
  41c9f8:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  41c9fc:	mov	w8, #0x800                 	// #2048
  41ca00:	movk	w8, #0x8000, lsl #16
  41ca04:	and	w8, w0, w8
  41ca08:	cmp	w8, #0x800
  41ca0c:	b.ne	41ca3c <wcrtomb@plt+0x17f4c>  // b.any
  41ca10:	and	w2, w0, #0xfffff7ff
  41ca14:	mov	w1, #0x4                   	// #4
  41ca18:	mov	w0, w20
  41ca1c:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  41ca20:	cmn	w0, #0x1
  41ca24:	b.eq	41ca3c <wcrtomb@plt+0x17f4c>  // b.none
  41ca28:	add	x1, x22, x19
  41ca2c:	sub	x2, x21, x19
  41ca30:	mov	w0, w20
  41ca34:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  41ca38:	add	x19, x0, x19
  41ca3c:	mov	x0, x19
  41ca40:	ldp	x20, x19, [sp, #32]
  41ca44:	ldp	x22, x21, [sp, #16]
  41ca48:	ldp	x29, x30, [sp], #48
  41ca4c:	ret
  41ca50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ca54:	ldr	w8, [x8, #3552]
  41ca58:	stp	x3, x4, [sp, #-48]!
  41ca5c:	mov	w9, #0x3ffffffe            	// #1073741822
  41ca60:	mov	x3, sp
  41ca64:	mov	w4, w8
  41ca68:	stp	x29, x30, [sp, #32]
  41ca6c:	add	x29, sp, #0x20
  41ca70:	str	x9, [sp, #24]
  41ca74:	bl	43cff0 <argp_parse@@Base+0x2944>
  41ca78:	ldp	x29, x30, [sp, #32]
  41ca7c:	add	sp, sp, #0x30
  41ca80:	ret
  41ca84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ca88:	ldr	x8, [x8, #1520]
  41ca8c:	sub	w9, w8, #0x1
  41ca90:	cmp	x8, #0x0
  41ca94:	csel	w0, wzr, w9, eq  // eq = none
  41ca98:	ret
  41ca9c:	stp	x29, x30, [sp, #-80]!
  41caa0:	stp	x26, x25, [sp, #16]
  41caa4:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41caa8:	add	x25, x25, #0x5f0
  41caac:	ldp	x8, x9, [x25]
  41cab0:	stp	x20, x19, [sp, #64]
  41cab4:	mov	x19, x0
  41cab8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cabc:	cmp	x8, x9
  41cac0:	stp	x24, x23, [sp, #32]
  41cac4:	stp	x22, x21, [sp, #48]
  41cac8:	mov	x29, sp
  41cacc:	b.ne	41cb44 <wcrtomb@plt+0x18054>  // b.any
  41cad0:	cbz	x8, 41cb00 <wcrtomb@plt+0x18010>
  41cad4:	ldr	x0, [x20, #1536]
  41cad8:	cbz	x0, 41cb14 <wcrtomb@plt+0x18024>
  41cadc:	mov	x9, #0xe38e                	// #58254
  41cae0:	movk	x9, #0x8e38, lsl #16
  41cae4:	movk	x9, #0x38e3, lsl #32
  41cae8:	movk	x9, #0x38e, lsl #48
  41caec:	cmp	x8, x9
  41caf0:	b.cs	41cd0c <wcrtomb@plt+0x1821c>  // b.hs, b.nlast
  41caf4:	add	x8, x8, x8, lsr #1
  41caf8:	add	x8, x8, #0x1
  41cafc:	b	41cb28 <wcrtomb@plt+0x18038>
  41cb00:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cb04:	mov	w8, #0x2                   	// #2
  41cb08:	str	x8, [x9, #1528]
  41cb0c:	ldr	x0, [x20, #1536]
  41cb10:	cbnz	x0, 41cadc <wcrtomb@plt+0x17fec>
  41cb14:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  41cb18:	movk	x9, #0x5556
  41cb1c:	movk	x9, #0x555, lsl #48
  41cb20:	cmp	x8, x9
  41cb24:	b.cs	41cd0c <wcrtomb@plt+0x1821c>  // b.hs, b.nlast
  41cb28:	str	x8, [x25, #8]
  41cb2c:	add	x8, x8, x8, lsl #1
  41cb30:	lsl	x1, x8, #3
  41cb34:	bl	44a090 <argp_parse@@Base+0xf9e4>
  41cb38:	ldr	x8, [x25]
  41cb3c:	str	x0, [x25, #16]
  41cb40:	cbz	x8, 41cc80 <wcrtomb@plt+0x18190>
  41cb44:	ldrb	w9, [x19]
  41cb48:	cmp	w9, #0x2f
  41cb4c:	b.eq	41ccc0 <wcrtomb@plt+0x181d0>  // b.none
  41cb50:	cmp	w9, #0x2e
  41cb54:	b.ne	41cb80 <wcrtomb@plt+0x18090>  // b.any
  41cb58:	ldrb	w9, [x19, #1]
  41cb5c:	cmp	w9, #0x2f
  41cb60:	b.ne	41cb7c <wcrtomb@plt+0x1808c>  // b.any
  41cb64:	add	x19, x19, #0x1
  41cb68:	ldrb	w9, [x19, #1]!
  41cb6c:	cmp	w9, #0x2f
  41cb70:	b.eq	41cb68 <wcrtomb@plt+0x18078>  // b.none
  41cb74:	cmp	w9, #0x2e
  41cb78:	b.eq	41cb58 <wcrtomb@plt+0x18068>  // b.none
  41cb7c:	cbz	w9, 41cd04 <wcrtomb@plt+0x18214>
  41cb80:	ldr	x9, [x20, #1536]
  41cb84:	mov	w10, #0x18                  	// #24
  41cb88:	madd	x8, x8, x10, x9
  41cb8c:	ldur	x24, [x8, #-16]
  41cb90:	cbz	x24, 41cc78 <wcrtomb@plt+0x18188>
  41cb94:	mov	w0, #0x18                  	// #24
  41cb98:	bl	44a010 <argp_parse@@Base+0xf964>
  41cb9c:	mov	x20, x0
  41cba0:	mov	x0, x24
  41cba4:	bl	403f00 <strlen@plt>
  41cba8:	add	x23, x0, #0x2
  41cbac:	mov	x22, x20
  41cbb0:	mov	x0, x23
  41cbb4:	str	x23, [x22, #8]!
  41cbb8:	bl	44a010 <argp_parse@@Base+0xf964>
  41cbbc:	mov	x1, x24
  41cbc0:	mov	x21, x0
  41cbc4:	str	x0, [x20]
  41cbc8:	bl	4047f0 <strcpy@plt>
  41cbcc:	bl	403f00 <strlen@plt>
  41cbd0:	add	x8, x0, x21
  41cbd4:	ldurb	w8, [x8, #-1]
  41cbd8:	mov	x24, x0
  41cbdc:	str	x0, [x20, #16]
  41cbe0:	cmp	w8, #0x2f
  41cbe4:	b.eq	41cbf8 <wcrtomb@plt+0x18108>  // b.none
  41cbe8:	mov	w8, #0x2f                  	// #47
  41cbec:	strb	w8, [x21, x24]
  41cbf0:	add	x24, x24, #0x1
  41cbf4:	str	x24, [x20, #16]
  41cbf8:	mov	x0, x19
  41cbfc:	bl	403f00 <strlen@plt>
  41cc00:	add	x26, x0, #0x1
  41cc04:	add	x8, x26, x24
  41cc08:	cmp	x8, x23
  41cc0c:	b.cc	41cc34 <wcrtomb@plt+0x18144>  // b.lo, b.ul, b.last
  41cc10:	mov	x0, x21
  41cc14:	mov	x1, x22
  41cc18:	bl	44a1a8 <argp_parse@@Base+0xfafc>
  41cc1c:	ldp	x8, x24, [x20, #8]
  41cc20:	mov	x21, x0
  41cc24:	str	x0, [x20]
  41cc28:	add	x9, x24, x26
  41cc2c:	cmp	x9, x8
  41cc30:	b.cs	41cc10 <wcrtomb@plt+0x18120>  // b.hs, b.nlast
  41cc34:	add	x0, x21, x24
  41cc38:	mov	x1, x19
  41cc3c:	bl	4047f0 <strcpy@plt>
  41cc40:	mov	x0, x19
  41cc44:	bl	403f00 <strlen@plt>
  41cc48:	ldr	x8, [x20, #16]
  41cc4c:	ldr	x21, [x20]
  41cc50:	add	x8, x8, x0
  41cc54:	str	x8, [x20, #16]
  41cc58:	add	x9, x8, x21
  41cc5c:	ldurb	w9, [x9, #-1]
  41cc60:	cmp	w9, #0x2f
  41cc64:	b.ne	41cc6c <wcrtomb@plt+0x1817c>  // b.any
  41cc68:	strb	wzr, [x21, x8]
  41cc6c:	mov	x0, x20
  41cc70:	bl	4046b0 <free@plt>
  41cc74:	b	41cccc <wcrtomb@plt+0x181dc>
  41cc78:	mov	x21, xzr
  41cc7c:	b	41cccc <wcrtomb@plt+0x181dc>
  41cc80:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41cc84:	add	x8, x8, #0xfda
  41cc88:	str	x8, [x0]
  41cc8c:	bl	44a34c <argp_parse@@Base+0xfca0>
  41cc90:	ldr	x8, [x25, #16]
  41cc94:	ldr	x9, [x25]
  41cc98:	mov	w10, #0x18                  	// #24
  41cc9c:	mov	w11, #0xffffff9c            	// #-100
  41cca0:	madd	x10, x9, x10, x8
  41cca4:	add	x8, x9, #0x1
  41cca8:	str	x0, [x10, #8]
  41ccac:	str	w11, [x10, #16]
  41ccb0:	str	x8, [x25]
  41ccb4:	ldrb	w9, [x19]
  41ccb8:	cmp	w9, #0x2f
  41ccbc:	b.ne	41cb50 <wcrtomb@plt+0x18060>  // b.any
  41ccc0:	mov	x0, x19
  41ccc4:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41ccc8:	mov	x21, x0
  41cccc:	ldr	x8, [x25, #16]
  41ccd0:	ldr	x0, [x25]
  41ccd4:	mov	w9, #0x18                  	// #24
  41ccd8:	madd	x8, x0, x9, x8
  41ccdc:	add	x9, x0, #0x1
  41cce0:	stp	x19, x21, [x8]
  41cce4:	str	wzr, [x8, #16]
  41cce8:	str	x9, [x25]
  41ccec:	ldp	x20, x19, [sp, #64]
  41ccf0:	ldp	x22, x21, [sp, #48]
  41ccf4:	ldp	x24, x23, [sp, #32]
  41ccf8:	ldp	x26, x25, [sp, #16]
  41ccfc:	ldp	x29, x30, [sp], #80
  41cd00:	ret
  41cd04:	sub	x0, x8, #0x1
  41cd08:	b	41ccec <wcrtomb@plt+0x181fc>
  41cd0c:	bl	40eb80 <wcrtomb@plt+0xa090>
  41cd10:	stp	x29, x30, [sp, #-48]!
  41cd14:	str	x21, [sp, #16]
  41cd18:	mov	x21, x0
  41cd1c:	mov	w0, #0x18                  	// #24
  41cd20:	stp	x20, x19, [sp, #32]
  41cd24:	mov	x29, sp
  41cd28:	bl	44a010 <argp_parse@@Base+0xf964>
  41cd2c:	mov	x19, x0
  41cd30:	mov	x0, x21
  41cd34:	bl	403f00 <strlen@plt>
  41cd38:	add	x0, x0, #0x2
  41cd3c:	str	x0, [x19, #8]
  41cd40:	bl	44a010 <argp_parse@@Base+0xf964>
  41cd44:	mov	x1, x21
  41cd48:	mov	x20, x0
  41cd4c:	str	x0, [x19]
  41cd50:	bl	4047f0 <strcpy@plt>
  41cd54:	bl	403f00 <strlen@plt>
  41cd58:	add	x8, x0, x20
  41cd5c:	ldurb	w8, [x8, #-1]
  41cd60:	str	x0, [x19, #16]
  41cd64:	cmp	w8, #0x2f
  41cd68:	b.eq	41cd7c <wcrtomb@plt+0x1828c>  // b.none
  41cd6c:	add	x8, x0, #0x1
  41cd70:	mov	w9, #0x2f                  	// #47
  41cd74:	str	x8, [x19, #16]
  41cd78:	strb	w9, [x20, x0]
  41cd7c:	mov	x0, x19
  41cd80:	ldp	x20, x19, [sp, #32]
  41cd84:	ldr	x21, [sp, #16]
  41cd88:	ldp	x29, x30, [sp], #48
  41cd8c:	ret
  41cd90:	stp	x29, x30, [sp, #-80]!
  41cd94:	stp	x22, x21, [sp, #48]
  41cd98:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cd9c:	ldr	w8, [x21, #2992]
  41cda0:	str	x25, [sp, #16]
  41cda4:	stp	x24, x23, [sp, #32]
  41cda8:	stp	x20, x19, [sp, #64]
  41cdac:	cmp	w8, w0
  41cdb0:	mov	x29, sp
  41cdb4:	b.eq	41cef0 <wcrtomb@plt+0x18400>  // b.none
  41cdb8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cdbc:	ldr	x8, [x8, #1536]
  41cdc0:	mov	w9, #0x18                  	// #24
  41cdc4:	mov	w19, w0
  41cdc8:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41cdcc:	smaddl	x23, w0, w9, x8
  41cdd0:	ldr	w20, [x23, #16]!
  41cdd4:	cbnz	w20, 41ceb0 <wcrtomb@plt+0x183c0>
  41cdd8:	sxtw	x9, w19
  41cddc:	mov	w10, #0x18                  	// #24
  41cde0:	madd	x24, x9, x10, x8
  41cde4:	ldr	x1, [x24]
  41cde8:	ldrb	w8, [x1]
  41cdec:	cmp	w8, #0x2f
  41cdf0:	b.eq	41ce00 <wcrtomb@plt+0x18310>  // b.none
  41cdf4:	sub	w0, w19, #0x1
  41cdf8:	bl	41cd90 <wcrtomb@plt+0x182a0>
  41cdfc:	ldr	x1, [x24]
  41ce00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ce04:	ldr	w8, [x8, #3692]
  41ce08:	ldr	w0, [x22, #1864]
  41ce0c:	and	w2, w8, #0xffff7fff
  41ce10:	bl	4049a0 <openat@plt>
  41ce14:	tbnz	w0, #31, 41cf08 <wcrtomb@plt+0x18418>
  41ce18:	str	w0, [x23]
  41ce1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ce20:	ldr	x8, [x8, #1544]
  41ce24:	mov	w20, w0
  41ce28:	cmp	x8, #0xf
  41ce2c:	b.hi	41ce4c <wcrtomb@plt+0x1835c>  // b.pmore
  41ce30:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ce34:	add	x10, x10, #0x5e0
  41ce38:	add	x9, x8, #0x1
  41ce3c:	add	x8, x10, x8, lsl #2
  41ce40:	str	x9, [x10, #40]
  41ce44:	add	x8, x8, #0x38
  41ce48:	b	41ceac <wcrtomb@plt+0x183bc>
  41ce4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ce50:	add	x8, x8, #0x600
  41ce54:	ldr	x24, [x8]
  41ce58:	ldrsw	x25, [x8, #84]
  41ce5c:	mov	w8, #0x18                  	// #24
  41ce60:	madd	x23, x25, x8, x24
  41ce64:	ldr	w0, [x23, #16]!
  41ce68:	bl	4044d0 <close@plt>
  41ce6c:	cbz	w0, 41cea0 <wcrtomb@plt+0x183b0>
  41ce70:	mov	w8, #0x18                  	// #24
  41ce74:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ce78:	mul	x8, x25, x8
  41ce7c:	ldrb	w9, [x9, #3945]
  41ce80:	ldr	x0, [x24, x8]
  41ce84:	cbz	w9, 41ce9c <wcrtomb@plt+0x183ac>
  41ce88:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41ce8c:	ldrb	w8, [x8, #3714]
  41ce90:	tbz	w8, #7, 41cea0 <wcrtomb@plt+0x183b0>
  41ce94:	bl	42c94c <wcrtomb@plt+0x27e5c>
  41ce98:	b	41cea0 <wcrtomb@plt+0x183b0>
  41ce9c:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  41cea0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cea4:	add	x8, x8, #0x654
  41cea8:	str	wzr, [x23]
  41ceac:	str	w19, [x8]
  41ceb0:	cmp	w20, #0x1
  41ceb4:	b.lt	41cee8 <wcrtomb@plt+0x183f8>  // b.tstop
  41ceb8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cebc:	ldr	w9, [x8, #1560]
  41cec0:	cmp	w9, w19
  41cec4:	b.eq	41cee4 <wcrtomb@plt+0x183f4>  // b.none
  41cec8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cecc:	add	x10, x10, #0x61c
  41ced0:	ldr	w11, [x10]
  41ced4:	str	w9, [x10], #4
  41ced8:	cmp	w11, w19
  41cedc:	mov	w9, w11
  41cee0:	b.ne	41ced0 <wcrtomb@plt+0x183e0>  // b.any
  41cee4:	str	w19, [x8, #1560]
  41cee8:	str	w19, [x21, #2992]
  41ceec:	str	w20, [x22, #1864]
  41cef0:	ldp	x20, x19, [sp, #64]
  41cef4:	ldp	x22, x21, [sp, #48]
  41cef8:	ldp	x24, x23, [sp, #32]
  41cefc:	ldr	x25, [sp, #16]
  41cf00:	ldp	x29, x30, [sp], #80
  41cf04:	ret
  41cf08:	ldr	x0, [x24]
  41cf0c:	bl	42cc7c <wcrtomb@plt+0x2818c>
  41cf10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cf14:	ldrb	w8, [x8, #3945]
  41cf18:	cbz	w8, 41cf2c <wcrtomb@plt+0x1843c>
  41cf1c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41cf20:	ldrb	w8, [x8, #3714]
  41cf24:	tbnz	w8, #7, 41cf30 <wcrtomb@plt+0x18440>
  41cf28:	ret
  41cf2c:	b	42c8c8 <wcrtomb@plt+0x27dd8>
  41cf30:	b	42c94c <wcrtomb@plt+0x27e5c>
  41cf34:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cf38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cf3c:	ldrsw	x9, [x9, #2992]
  41cf40:	ldr	x8, [x8, #1536]
  41cf44:	mov	w10, #0x18                  	// #24
  41cf48:	mul	x9, x9, x10
  41cf4c:	ldr	x0, [x8, x9]
  41cf50:	ret
  41cf54:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cf58:	ldrb	w8, [x8, #3945]
  41cf5c:	cbz	w8, 41cf70 <wcrtomb@plt+0x18480>
  41cf60:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41cf64:	ldrb	w8, [x8, #3714]
  41cf68:	tbnz	w8, #7, 41cf74 <wcrtomb@plt+0x18484>
  41cf6c:	ret
  41cf70:	b	42cbf8 <wcrtomb@plt+0x28108>
  41cf74:	b	42cc94 <wcrtomb@plt+0x281a4>
  41cf78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cf7c:	ldrb	w8, [x8, #3945]
  41cf80:	cbz	w8, 41cf94 <wcrtomb@plt+0x184a4>
  41cf84:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41cf88:	ldrb	w8, [x8, #3714]
  41cf8c:	tbnz	w8, #7, 41cf98 <wcrtomb@plt+0x184a8>
  41cf90:	ret
  41cf94:	b	42cd8c <wcrtomb@plt+0x2829c>
  41cf98:	b	42ce44 <wcrtomb@plt+0x28354>
  41cf9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cfa0:	ldrb	w8, [x8, #3945]
  41cfa4:	cbz	w8, 41cfb8 <wcrtomb@plt+0x184c8>
  41cfa8:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41cfac:	ldrb	w8, [x8, #3714]
  41cfb0:	tbnz	w8, #7, 41cfbc <wcrtomb@plt+0x184cc>
  41cfb4:	ret
  41cfb8:	b	42cfa0 <wcrtomb@plt+0x284b0>
  41cfbc:	b	42d024 <wcrtomb@plt+0x28534>
  41cfc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cfc4:	ldrb	w8, [x8, #3945]
  41cfc8:	cbz	w8, 41cfdc <wcrtomb@plt+0x184ec>
  41cfcc:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41cfd0:	ldrb	w8, [x8, #3714]
  41cfd4:	tbnz	w8, #7, 41cfe0 <wcrtomb@plt+0x184f0>
  41cfd8:	ret
  41cfdc:	b	42d11c <wcrtomb@plt+0x2862c>
  41cfe0:	b	42d1a0 <wcrtomb@plt+0x286b0>
  41cfe4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41cfe8:	ldrb	w8, [x8, #3945]
  41cfec:	cbz	w8, 41d000 <wcrtomb@plt+0x18510>
  41cff0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41cff4:	ldrb	w8, [x8, #3714]
  41cff8:	tbnz	w8, #7, 41d004 <wcrtomb@plt+0x18514>
  41cffc:	ret
  41d000:	b	42d298 <wcrtomb@plt+0x287a8>
  41d004:	b	42d3a8 <wcrtomb@plt+0x288b8>
  41d008:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d00c:	ldrb	w8, [x8, #3945]
  41d010:	cbz	w8, 41d024 <wcrtomb@plt+0x18534>
  41d014:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41d018:	ldrb	w8, [x8, #3714]
  41d01c:	tbnz	w8, #7, 41d028 <wcrtomb@plt+0x18538>
  41d020:	ret
  41d024:	b	42d4e4 <wcrtomb@plt+0x289f4>
  41d028:	b	42d568 <wcrtomb@plt+0x28a78>
  41d02c:	sub	sp, sp, #0x30
  41d030:	stp	x20, x19, [sp, #32]
  41d034:	mov	x19, x0
  41d038:	stp	x29, x30, [sp, #16]
  41d03c:	add	x29, sp, #0x10
  41d040:	tbnz	w1, #0, 41d0c0 <wcrtomb@plt+0x185d0>
  41d044:	str	x2, [sp, #8]
  41d048:	bl	4049c0 <__errno_location@plt>
  41d04c:	ldr	w8, [x0]
  41d050:	ldr	x2, [sp, #8]
  41d054:	cmp	w8, #0x2
  41d058:	b.ne	41d0c0 <wcrtomb@plt+0x185d0>  // b.any
  41d05c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41d060:	ldrb	w8, [x8, #3712]
  41d064:	tbz	w8, #6, 41d0ac <wcrtomb@plt+0x185bc>
  41d068:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d06c:	ldr	x8, [x8, #4000]
  41d070:	cbz	x8, 41d078 <wcrtomb@plt+0x18588>
  41d074:	blr	x8
  41d078:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d07c:	add	x1, x1, #0x239
  41d080:	mov	w2, #0x5                   	// #5
  41d084:	mov	x0, xzr
  41d088:	bl	4048b0 <dcgettext@plt>
  41d08c:	mov	x20, x0
  41d090:	mov	x0, x19
  41d094:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41d098:	mov	x3, x0
  41d09c:	mov	w0, wzr
  41d0a0:	mov	w1, wzr
  41d0a4:	mov	x2, x20
  41d0a8:	bl	403f60 <error@plt>
  41d0ac:	ldp	x20, x19, [sp, #32]
  41d0b0:	ldp	x29, x30, [sp, #16]
  41d0b4:	mov	w0, #0x1                   	// #1
  41d0b8:	add	sp, sp, #0x30
  41d0bc:	b	425e70 <wcrtomb@plt+0x21380>
  41d0c0:	mov	x0, x19
  41d0c4:	ldp	x20, x19, [sp, #32]
  41d0c8:	ldp	x29, x30, [sp, #16]
  41d0cc:	add	sp, sp, #0x30
  41d0d0:	br	x2
  41d0d4:	stp	x29, x30, [sp, #-16]!
  41d0d8:	mov	x29, sp
  41d0dc:	bl	4040d0 <fork@plt>
  41d0e0:	cmn	w0, #0x1
  41d0e4:	b.eq	41d0f0 <wcrtomb@plt+0x18600>  // b.none
  41d0e8:	ldp	x29, x30, [sp], #16
  41d0ec:	ret
  41d0f0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d0f4:	add	x1, x1, #0x261
  41d0f8:	mov	w2, #0x5                   	// #5
  41d0fc:	mov	x0, xzr
  41d100:	bl	4048b0 <dcgettext@plt>
  41d104:	mov	x1, x0
  41d108:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d10c:	add	x0, x0, #0x25c
  41d110:	bl	42c614 <wcrtomb@plt+0x27b24>
  41d114:	stp	x29, x30, [sp, #-16]!
  41d118:	mov	x29, sp
  41d11c:	bl	404040 <pipe@plt>
  41d120:	tbnz	w0, #31, 41d12c <wcrtomb@plt+0x1863c>
  41d124:	ldp	x29, x30, [sp], #16
  41d128:	ret
  41d12c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d130:	add	x1, x1, #0x274
  41d134:	mov	w2, #0x5                   	// #5
  41d138:	mov	x0, xzr
  41d13c:	bl	4048b0 <dcgettext@plt>
  41d140:	mov	x1, x0
  41d144:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d148:	add	x0, x0, #0x26f
  41d14c:	bl	42c614 <wcrtomb@plt+0x27b24>
  41d150:	stp	x29, x30, [sp, #-48]!
  41d154:	str	x21, [sp, #16]
  41d158:	stp	x20, x19, [sp, #32]
  41d15c:	mov	x29, sp
  41d160:	mov	x20, x1
  41d164:	mov	x19, x0
  41d168:	bl	404480 <getpagesize@plt>
  41d16c:	sxtw	x21, w0
  41d170:	adds	x0, x21, x20
  41d174:	b.cs	41d1a4 <wcrtomb@plt+0x186b4>  // b.hs, b.nlast
  41d178:	bl	44a010 <argp_parse@@Base+0xf964>
  41d17c:	add	x8, x0, x21
  41d180:	sub	x8, x8, #0x1
  41d184:	udiv	x8, x8, x21
  41d188:	str	x0, [x19]
  41d18c:	mul	x8, x8, x21
  41d190:	ldp	x20, x19, [sp, #32]
  41d194:	ldr	x21, [sp, #16]
  41d198:	mov	x0, x8
  41d19c:	ldp	x29, x30, [sp], #48
  41d1a0:	ret
  41d1a4:	bl	40eb80 <wcrtomb@plt+0xa090>
  41d1a8:	stp	x29, x30, [sp, #-32]!
  41d1ac:	str	x19, [sp, #16]
  41d1b0:	mov	x19, x0
  41d1b4:	ldr	x0, [x0]
  41d1b8:	mov	x29, sp
  41d1bc:	bl	4046b0 <free@plt>
  41d1c0:	mov	x0, x19
  41d1c4:	ldr	x19, [sp, #16]
  41d1c8:	ldp	x29, x30, [sp], #32
  41d1cc:	b	4046b0 <free@plt>
  41d1d0:	stp	x29, x30, [sp, #-48]!
  41d1d4:	stp	x20, x19, [sp, #32]
  41d1d8:	mov	x19, x0
  41d1dc:	mov	x0, x1
  41d1e0:	stp	x22, x21, [sp, #16]
  41d1e4:	mov	x29, sp
  41d1e8:	mov	x20, x1
  41d1ec:	bl	403f00 <strlen@plt>
  41d1f0:	ldr	x8, [x19, #16]
  41d1f4:	mov	x21, x19
  41d1f8:	ldr	x9, [x21, #8]!
  41d1fc:	add	x22, x0, #0x1
  41d200:	ldr	x0, [x19]
  41d204:	add	x10, x22, x8
  41d208:	cmp	x10, x9
  41d20c:	b.cc	41d22c <wcrtomb@plt+0x1873c>  // b.lo, b.ul, b.last
  41d210:	mov	x1, x21
  41d214:	bl	44a1a8 <argp_parse@@Base+0xfafc>
  41d218:	ldp	x9, x8, [x19, #8]
  41d21c:	str	x0, [x19]
  41d220:	add	x10, x22, x8
  41d224:	cmp	x10, x9
  41d228:	b.cs	41d210 <wcrtomb@plt+0x18720>  // b.hs, b.nlast
  41d22c:	add	x0, x0, x8
  41d230:	mov	x1, x20
  41d234:	bl	4047f0 <strcpy@plt>
  41d238:	ldr	x0, [x19]
  41d23c:	ldp	x20, x19, [sp, #32]
  41d240:	ldp	x22, x21, [sp, #16]
  41d244:	ldp	x29, x30, [sp], #48
  41d248:	ret
  41d24c:	stp	x29, x30, [sp, #-48]!
  41d250:	stp	x22, x21, [sp, #16]
  41d254:	stp	x20, x19, [sp, #32]
  41d258:	mov	x19, x1
  41d25c:	mov	w20, w0
  41d260:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d264:	mov	x29, sp
  41d268:	cbz	w0, 41d284 <wcrtomb@plt+0x18794>
  41d26c:	ldr	w8, [x22, #1632]
  41d270:	cmp	w8, w20
  41d274:	b.ne	41d284 <wcrtomb@plt+0x18794>  // b.any
  41d278:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41d27c:	add	x0, x0, #0xb36
  41d280:	b	41d2c0 <wcrtomb@plt+0x187d0>
  41d284:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d288:	add	x21, x21, #0x664
  41d28c:	ldur	x0, [x21, #28]
  41d290:	cbz	x0, 41d2a0 <wcrtomb@plt+0x187b0>
  41d294:	ldr	w8, [x21]
  41d298:	cmp	w8, w20
  41d29c:	b.eq	41d2c0 <wcrtomb@plt+0x187d0>  // b.none
  41d2a0:	mov	w0, w20
  41d2a4:	bl	404620 <getpwuid@plt>
  41d2a8:	cbz	x0, 41d2d8 <wcrtomb@plt+0x187e8>
  41d2ac:	str	w20, [x21], #28
  41d2b0:	ldr	x1, [x0]
  41d2b4:	mov	x0, x21
  41d2b8:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41d2bc:	ldr	x0, [x21]
  41d2c0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41d2c4:	str	x0, [x19]
  41d2c8:	ldp	x20, x19, [sp, #32]
  41d2cc:	ldp	x22, x21, [sp, #16]
  41d2d0:	ldp	x29, x30, [sp], #48
  41d2d4:	ret
  41d2d8:	str	w20, [x22, #1632]
  41d2dc:	b	41d278 <wcrtomb@plt+0x18788>
  41d2e0:	stp	x29, x30, [sp, #-48]!
  41d2e4:	stp	x22, x21, [sp, #16]
  41d2e8:	stp	x20, x19, [sp, #32]
  41d2ec:	mov	x19, x1
  41d2f0:	mov	w20, w0
  41d2f4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d2f8:	mov	x29, sp
  41d2fc:	cbz	w0, 41d318 <wcrtomb@plt+0x18828>
  41d300:	ldr	w8, [x22, #1640]
  41d304:	cmp	w8, w20
  41d308:	b.ne	41d318 <wcrtomb@plt+0x18828>  // b.any
  41d30c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41d310:	add	x0, x0, #0xb36
  41d314:	b	41d354 <wcrtomb@plt+0x18864>
  41d318:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d31c:	add	x21, x21, #0x66c
  41d320:	ldur	x0, [x21, #28]
  41d324:	cbz	x0, 41d334 <wcrtomb@plt+0x18844>
  41d328:	ldr	w8, [x21]
  41d32c:	cmp	w8, w20
  41d330:	b.eq	41d354 <wcrtomb@plt+0x18864>  // b.none
  41d334:	mov	w0, w20
  41d338:	bl	404a00 <getgrgid@plt>
  41d33c:	cbz	x0, 41d36c <wcrtomb@plt+0x1887c>
  41d340:	str	w20, [x21], #28
  41d344:	ldr	x1, [x0]
  41d348:	mov	x0, x21
  41d34c:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41d350:	ldr	x0, [x21]
  41d354:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41d358:	str	x0, [x19]
  41d35c:	ldp	x20, x19, [sp, #32]
  41d360:	ldp	x22, x21, [sp, #16]
  41d364:	ldp	x29, x30, [sp], #48
  41d368:	ret
  41d36c:	str	w20, [x22, #1640]
  41d370:	b	41d30c <wcrtomb@plt+0x1881c>
  41d374:	stp	x29, x30, [sp, #-32]!
  41d378:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d37c:	stp	x20, x19, [sp, #16]
  41d380:	mov	x19, x1
  41d384:	ldr	x1, [x8, #1680]
  41d388:	mov	x20, x0
  41d38c:	mov	x29, sp
  41d390:	cbz	x1, 41d3a0 <wcrtomb@plt+0x188b0>
  41d394:	mov	x0, x20
  41d398:	bl	404610 <strcmp@plt>
  41d39c:	cbz	w0, 41d400 <wcrtomb@plt+0x18910>
  41d3a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d3a4:	ldr	x1, [x8, #1664]
  41d3a8:	cbz	x1, 41d3c8 <wcrtomb@plt+0x188d8>
  41d3ac:	ldrb	w8, [x20]
  41d3b0:	ldrb	w9, [x1]
  41d3b4:	cmp	w8, w9
  41d3b8:	b.ne	41d3c8 <wcrtomb@plt+0x188d8>  // b.any
  41d3bc:	mov	x0, x20
  41d3c0:	bl	404610 <strcmp@plt>
  41d3c4:	cbz	w0, 41d3f0 <wcrtomb@plt+0x18900>
  41d3c8:	mov	x0, x20
  41d3cc:	bl	404350 <getpwnam@plt>
  41d3d0:	cbz	x0, 41d40c <wcrtomb@plt+0x1891c>
  41d3d4:	ldr	w9, [x0, #16]
  41d3d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d3dc:	add	x8, x8, #0x664
  41d3e0:	str	w9, [x8], #28
  41d3e4:	ldr	x1, [x0]
  41d3e8:	mov	x0, x8
  41d3ec:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41d3f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d3f4:	ldr	w8, [x8, #1636]
  41d3f8:	mov	w0, #0x1                   	// #1
  41d3fc:	str	w8, [x19]
  41d400:	ldp	x20, x19, [sp, #16]
  41d404:	ldp	x29, x30, [sp], #32
  41d408:	ret
  41d40c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d410:	add	x0, x0, #0x690
  41d414:	mov	x1, x20
  41d418:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41d41c:	mov	w0, wzr
  41d420:	ldp	x20, x19, [sp, #16]
  41d424:	ldp	x29, x30, [sp], #32
  41d428:	ret
  41d42c:	stp	x29, x30, [sp, #-32]!
  41d430:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d434:	stp	x20, x19, [sp, #16]
  41d438:	mov	x19, x1
  41d43c:	ldr	x1, [x8, #1688]
  41d440:	mov	x20, x0
  41d444:	mov	x29, sp
  41d448:	cbz	x1, 41d458 <wcrtomb@plt+0x18968>
  41d44c:	mov	x0, x20
  41d450:	bl	404610 <strcmp@plt>
  41d454:	cbz	w0, 41d4b4 <wcrtomb@plt+0x189c4>
  41d458:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d45c:	ldr	x1, [x8, #1672]
  41d460:	cbz	x1, 41d480 <wcrtomb@plt+0x18990>
  41d464:	ldrb	w8, [x20]
  41d468:	ldrb	w9, [x1]
  41d46c:	cmp	w8, w9
  41d470:	b.ne	41d480 <wcrtomb@plt+0x18990>  // b.any
  41d474:	mov	x0, x20
  41d478:	bl	404610 <strcmp@plt>
  41d47c:	cbz	w0, 41d4a4 <wcrtomb@plt+0x189b4>
  41d480:	mov	x0, x20
  41d484:	bl	404020 <getgrnam@plt>
  41d488:	cbz	x0, 41d4c0 <wcrtomb@plt+0x189d0>
  41d48c:	ldr	w8, [x0, #16]
  41d490:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d494:	add	x0, x0, #0x66c
  41d498:	mov	x1, x20
  41d49c:	str	w8, [x0], #28
  41d4a0:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41d4a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d4a8:	ldr	w8, [x8, #1644]
  41d4ac:	mov	w0, #0x1                   	// #1
  41d4b0:	str	w8, [x19]
  41d4b4:	ldp	x20, x19, [sp, #16]
  41d4b8:	ldp	x29, x30, [sp], #32
  41d4bc:	ret
  41d4c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d4c4:	add	x0, x0, #0x698
  41d4c8:	mov	x1, x20
  41d4cc:	bl	41b60c <wcrtomb@plt+0x16b1c>
  41d4d0:	mov	w0, wzr
  41d4d4:	ldp	x20, x19, [sp, #16]
  41d4d8:	ldp	x29, x30, [sp], #32
  41d4dc:	ret
  41d4e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d4e4:	ldr	x8, [x8, #3000]
  41d4e8:	cmp	x8, #0x0
  41d4ec:	cset	w0, ne  // ne = any
  41d4f0:	ret
  41d4f4:	stp	x29, x30, [sp, #-32]!
  41d4f8:	stp	x20, x19, [sp, #16]
  41d4fc:	mov	x19, x0
  41d500:	mov	w0, #0x38                  	// #56
  41d504:	mov	x29, sp
  41d508:	bl	44a010 <argp_parse@@Base+0xf964>
  41d50c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d510:	ldr	x8, [x20, #1736]
  41d514:	cbz	x8, 41d55c <wcrtomb@plt+0x18a6c>
  41d518:	ldr	x9, [x8, #8]
  41d51c:	str	x9, [x0, #8]
  41d520:	ldr	x9, [x8, #8]
  41d524:	cbz	x9, 41d530 <wcrtomb@plt+0x18a40>
  41d528:	str	x0, [x9]
  41d52c:	ldr	x8, [x20, #1736]
  41d530:	str	x8, [x0]
  41d534:	str	x0, [x8, #8]
  41d538:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d53c:	ldr	x9, [x8, #3000]
  41d540:	str	x19, [x0, #24]
  41d544:	ldp	x20, x19, [sp, #16]
  41d548:	str	wzr, [x0, #16]
  41d54c:	add	x9, x9, #0x1
  41d550:	str	x9, [x8, #3000]
  41d554:	ldp	x29, x30, [sp], #32
  41d558:	ret
  41d55c:	mov	w8, #0x3                   	// #3
  41d560:	str	x0, [x20, #1736]
  41d564:	stp	xzr, xzr, [x0]
  41d568:	str	w8, [x0, #16]
  41d56c:	mov	w0, #0x38                  	// #56
  41d570:	bl	44a010 <argp_parse@@Base+0xf964>
  41d574:	ldr	x8, [x20, #1736]
  41d578:	ldr	x9, [x8, #8]
  41d57c:	str	x9, [x0, #8]
  41d580:	ldr	x9, [x8, #8]
  41d584:	cbnz	x9, 41d528 <wcrtomb@plt+0x18a38>
  41d588:	b	41d530 <wcrtomb@plt+0x18a40>
  41d58c:	stp	x29, x30, [sp, #-16]!
  41d590:	mov	w0, #0x66                  	// #102
  41d594:	mov	x29, sp
  41d598:	bl	44a010 <argp_parse@@Base+0xf964>
  41d59c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d5a0:	add	x9, x9, #0x6a0
  41d5a4:	ldr	x8, [x9, #40]
  41d5a8:	mov	w10, #0x64                  	// #100
  41d5ac:	stp	x0, x10, [x9]
  41d5b0:	cbz	x8, 41d5d0 <wcrtomb@plt+0x18ae0>
  41d5b4:	ldr	x8, [x8, #8]
  41d5b8:	cbz	x8, 41d5d0 <wcrtomb@plt+0x18ae0>
  41d5bc:	mov	x9, x8
  41d5c0:	ldr	x8, [x8, #8]
  41d5c4:	cbnz	x8, 41d5bc <wcrtomb@plt+0x18acc>
  41d5c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d5cc:	str	x9, [x8, #1736]
  41d5d0:	ldp	x29, x30, [sp], #16
  41d5d4:	ret
  41d5d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d5dc:	ldr	x0, [x8, #1696]
  41d5e0:	b	4046b0 <free@plt>
  41d5e4:	stp	x29, x30, [sp, #-16]!
  41d5e8:	mov	x29, sp
  41d5ec:	bl	41d600 <wcrtomb@plt+0x18b10>
  41d5f0:	cbz	x0, 41d5f8 <wcrtomb@plt+0x18b08>
  41d5f4:	ldr	x0, [x0, #24]
  41d5f8:	ldp	x29, x30, [sp], #16
  41d5fc:	ret
  41d600:	sub	sp, sp, #0x170
  41d604:	stp	x22, x21, [sp, #336]
  41d608:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d60c:	stp	x26, x25, [sp, #304]
  41d610:	ldr	x26, [x22, #1736]
  41d614:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d618:	stp	x29, x30, [sp, #272]
  41d61c:	stp	x28, x27, [sp, #288]
  41d620:	stp	x24, x23, [sp, #320]
  41d624:	stp	x20, x19, [sp, #352]
  41d628:	add	x29, sp, #0x110
  41d62c:	cbz	x26, 41e194 <wcrtomb@plt+0x196a4>
  41d630:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d634:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d638:	mov	w19, w0
  41d63c:	add	x21, x21, #0x28a
  41d640:	add	x20, x20, #0x6a0
  41d644:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d648:	ldr	w8, [x26, #16]
  41d64c:	cmp	w8, #0x4
  41d650:	b.hi	41e160 <wcrtomb@plt+0x19670>  // b.pmore
  41d654:	adr	x9, 41d664 <wcrtomb@plt+0x18b74>
  41d658:	ldrh	w10, [x21, x8, lsl #1]
  41d65c:	add	x9, x9, x10, lsl #2
  41d660:	br	x9
  41d664:	cbz	w19, 41e3c8 <wcrtomb@plt+0x198d8>
  41d668:	ldr	x0, [x26, #24]
  41d66c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41d670:	bl	41ca9c <wcrtomb@plt+0x17fac>
  41d674:	bl	41cd90 <wcrtomb@plt+0x182a0>
  41d678:	ldr	x26, [x22, #1736]
  41d67c:	ldr	x8, [x26]
  41d680:	str	x8, [x22, #1736]
  41d684:	cbz	x8, 41d68c <wcrtomb@plt+0x18b9c>
  41d688:	str	xzr, [x8, #8]
  41d68c:	ldr	w8, [x26, #16]
  41d690:	cmp	w8, #0x4
  41d694:	b.eq	41d6a8 <wcrtomb@plt+0x18bb8>  // b.none
  41d698:	cmp	w8, #0x3
  41d69c:	b.eq	41e184 <wcrtomb@plt+0x19694>  // b.none
  41d6a0:	cmp	w8, #0x1
  41d6a4:	b.ne	41d6e4 <wcrtomb@plt+0x18bf4>  // b.any
  41d6a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d6ac:	ldr	w8, [x8, #3852]
  41d6b0:	cmp	w8, #0x8
  41d6b4:	b.eq	41d6c0 <wcrtomb@plt+0x18bd0>  // b.none
  41d6b8:	cmp	w8, #0x3
  41d6bc:	b.ne	41e160 <wcrtomb@plt+0x19670>  // b.any
  41d6c0:	str	xzr, [x26]
  41d6c4:	ldr	x8, [x25, #3016]
  41d6c8:	str	x8, [x26, #8]
  41d6cc:	cbz	x8, 41d6d4 <wcrtomb@plt+0x18be4>
  41d6d0:	str	x26, [x8]
  41d6d4:	str	x26, [x25, #3016]
  41d6d8:	ldr	x26, [x22, #1736]
  41d6dc:	cbnz	x26, 41d648 <wcrtomb@plt+0x18b58>
  41d6e0:	b	41e194 <wcrtomb@plt+0x196a4>
  41d6e4:	ldr	x0, [x25, #3016]
  41d6e8:	cbz	x0, 41e184 <wcrtomb@plt+0x19694>
  41d6ec:	ldr	x8, [x0, #8]
  41d6f0:	str	x8, [x25, #3016]
  41d6f4:	bl	4046b0 <free@plt>
  41d6f8:	b	41d6e4 <wcrtomb@plt+0x18bf4>
  41d6fc:	ldr	w27, [x26, #24]
  41d700:	sub	w8, w27, #0x58
  41d704:	cmp	w8, #0xc4
  41d708:	b.hi	41e54c <wcrtomb@plt+0x19a5c>  // b.pmore
  41d70c:	ldr	x26, [x26, #32]
  41d710:	adrp	x11, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d714:	add	x11, x11, #0x294
  41d718:	adr	x9, 41d728 <wcrtomb@plt+0x18c38>
  41d71c:	ldrh	w10, [x11, x8, lsl #1]
  41d720:	add	x9, x9, x10, lsl #2
  41d724:	br	x9
  41d728:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d72c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d730:	add	x9, x9, #0x674
  41d734:	ldr	x1, [x8, #3056]
  41d738:	ldp	w8, w9, [x9]
  41d73c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d740:	ldr	w10, [x10, #3668]
  41d744:	adrp	x0, 43c000 <argp_parse@@Base+0x1954>
  41d748:	cmp	w8, #0x1
  41d74c:	cset	w8, ne  // ne = any
  41d750:	orr	w8, w9, w8, lsl #28
  41d754:	orr	w3, w8, w10
  41d758:	add	x0, x0, #0x928
  41d75c:	mov	w4, #0xa                   	// #10
  41d760:	mov	x2, x26
  41d764:	bl	43ce30 <argp_parse@@Base+0x2784>
  41d768:	cbz	w0, 41e100 <wcrtomb@plt+0x19610>
  41d76c:	b	41e578 <wcrtomb@plt+0x19a88>
  41d770:	ldr	x8, [x26]
  41d774:	str	x8, [x22, #1736]
  41d778:	cbz	x8, 41e184 <wcrtomb@plt+0x19694>
  41d77c:	str	xzr, [x8, #8]
  41d780:	b	41e184 <wcrtomb@plt+0x19694>
  41d784:	mov	w21, w19
  41d788:	mov	x19, x28
  41d78c:	ldr	x28, [x26, #48]
  41d790:	cbnz	x28, 41d9e0 <wcrtomb@plt+0x18ef0>
  41d794:	ldr	x27, [x26, #24]
  41d798:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  41d79c:	add	x1, x1, #0xb35
  41d7a0:	mov	x0, x27
  41d7a4:	bl	404610 <strcmp@plt>
  41d7a8:	cbz	w0, 41d9a4 <wcrtomb@plt+0x18eb4>
  41d7ac:	add	x2, sp, #0x20
  41d7b0:	mov	w0, wzr
  41d7b4:	mov	x1, x27
  41d7b8:	bl	4049f0 <__xstat@plt>
  41d7bc:	cbnz	w0, 41e5b4 <wcrtomb@plt+0x19ac4>
  41d7c0:	ldr	x8, [x22, #1736]
  41d7c4:	cbnz	x8, 41d7f8 <wcrtomb@plt+0x18d08>
  41d7c8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d7cc:	mov	w2, #0x5                   	// #5
  41d7d0:	mov	x0, xzr
  41d7d4:	add	x1, x1, #0xce1
  41d7d8:	bl	4048b0 <dcgettext@plt>
  41d7dc:	mov	x28, x0
  41d7e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d7e4:	ldr	x23, [x8, #1744]
  41d7e8:	cbnz	x23, 41d81c <wcrtomb@plt+0x18d2c>
  41d7ec:	b	41d95c <wcrtomb@plt+0x18e6c>
  41d7f0:	ldr	x8, [x8]
  41d7f4:	cbz	x8, 41d7c8 <wcrtomb@plt+0x18cd8>
  41d7f8:	ldr	w9, [x8, #16]
  41d7fc:	cmp	w9, #0x2
  41d800:	b.ne	41d7f0 <wcrtomb@plt+0x18d00>  // b.any
  41d804:	ldr	x9, [x8, #48]
  41d808:	cbz	x9, 41d7f0 <wcrtomb@plt+0x18d00>
  41d80c:	ldr	x28, [x8, #24]
  41d810:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d814:	ldr	x23, [x8, #1744]
  41d818:	cbz	x23, 41d95c <wcrtomb@plt+0x18e6c>
  41d81c:	ldp	x9, x8, [sp, #32]
  41d820:	b	41d82c <wcrtomb@plt+0x18d3c>
  41d824:	ldr	x23, [x23]
  41d828:	cbz	x23, 41d95c <wcrtomb@plt+0x18e6c>
  41d82c:	ldr	x10, [x23, #8]
  41d830:	cmp	x10, x8
  41d834:	b.ne	41d824 <wcrtomb@plt+0x18d34>  // b.any
  41d838:	ldr	x10, [x23, #16]
  41d83c:	cmp	x10, x9
  41d840:	b.ne	41d824 <wcrtomb@plt+0x18d34>  // b.any
  41d844:	mov	w1, #0x3a                  	// #58
  41d848:	mov	w2, #0x1                   	// #1
  41d84c:	mov	x0, xzr
  41d850:	bl	44773c <argp_parse@@Base+0xd090>
  41d854:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d858:	ldr	x8, [x8, #4000]
  41d85c:	mov	w26, w0
  41d860:	cbz	x8, 41d868 <wcrtomb@plt+0x18d78>
  41d864:	blr	x8
  41d868:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d86c:	mov	w2, #0x5                   	// #5
  41d870:	mov	x0, xzr
  41d874:	add	x1, x1, #0xcac
  41d878:	bl	4048b0 <dcgettext@plt>
  41d87c:	mov	x24, x0
  41d880:	mov	w0, wzr
  41d884:	mov	x1, x27
  41d888:	bl	448a64 <argp_parse@@Base+0xe3b8>
  41d88c:	ldr	x5, [x23, #24]
  41d890:	mov	x3, x0
  41d894:	mov	w0, wzr
  41d898:	mov	w1, wzr
  41d89c:	mov	x2, x24
  41d8a0:	mov	x4, x28
  41d8a4:	bl	403f60 <error@plt>
  41d8a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d8ac:	mov	w9, #0x2                   	// #2
  41d8b0:	mov	w1, #0x3a                  	// #58
  41d8b4:	mov	x0, xzr
  41d8b8:	mov	w2, w26
  41d8bc:	str	w9, [x8, #2352]
  41d8c0:	bl	44773c <argp_parse@@Base+0xd090>
  41d8c4:	ldr	x26, [x22, #1736]
  41d8c8:	mov	x9, x22
  41d8cc:	ldr	x8, [x26]
  41d8d0:	str	x8, [x22, #1736]
  41d8d4:	cbz	x8, 41d8dc <wcrtomb@plt+0x18dec>
  41d8d8:	str	xzr, [x8, #8]
  41d8dc:	ldr	w8, [x26, #16]
  41d8e0:	mov	x28, x19
  41d8e4:	mov	w19, w21
  41d8e8:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d8ec:	cmp	w8, #0x4
  41d8f0:	add	x21, x21, #0x28a
  41d8f4:	b.eq	41d908 <wcrtomb@plt+0x18e18>  // b.none
  41d8f8:	cmp	w8, #0x3
  41d8fc:	b.eq	41e184 <wcrtomb@plt+0x19694>  // b.none
  41d900:	cmp	w8, #0x1
  41d904:	b.ne	41d944 <wcrtomb@plt+0x18e54>  // b.any
  41d908:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d90c:	ldr	w8, [x8, #3852]
  41d910:	cmp	w8, #0x8
  41d914:	b.eq	41d920 <wcrtomb@plt+0x18e30>  // b.none
  41d918:	cmp	w8, #0x3
  41d91c:	b.ne	41e160 <wcrtomb@plt+0x19670>  // b.any
  41d920:	str	xzr, [x26]
  41d924:	ldr	x8, [x25, #3016]
  41d928:	str	x8, [x26, #8]
  41d92c:	cbz	x8, 41d934 <wcrtomb@plt+0x18e44>
  41d930:	str	x26, [x8]
  41d934:	str	x26, [x25, #3016]
  41d938:	ldr	x26, [x22, #1736]
  41d93c:	cbnz	x26, 41d648 <wcrtomb@plt+0x18b58>
  41d940:	b	41e194 <wcrtomb@plt+0x196a4>
  41d944:	ldr	x0, [x25, #3016]
  41d948:	cbz	x0, 41e184 <wcrtomb@plt+0x19694>
  41d94c:	ldr	x8, [x0, #8]
  41d950:	str	x8, [x25, #3016]
  41d954:	bl	4046b0 <free@plt>
  41d958:	b	41d944 <wcrtomb@plt+0x18e54>
  41d95c:	mov	w0, #0x20                  	// #32
  41d960:	bl	44a010 <argp_parse@@Base+0xf964>
  41d964:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d968:	ldr	q0, [sp, #32]
  41d96c:	ldr	x8, [x9, #1744]
  41d970:	str	x28, [x0, #24]
  41d974:	str	x0, [x9, #1744]
  41d978:	ext	v0.16b, v0.16b, v0.16b, #8
  41d97c:	str	x8, [x0]
  41d980:	stur	q0, [x0, #8]
  41d984:	ldr	x0, [x26, #24]
  41d988:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41d98c:	add	x1, x1, #0xedb
  41d990:	bl	4041e0 <fopen@plt>
  41d994:	mov	x28, x0
  41d998:	str	x0, [x26, #48]
  41d99c:	cbnz	x0, 41d9bc <wcrtomb@plt+0x18ecc>
  41d9a0:	b	41e5bc <wcrtomb@plt+0x19acc>
  41d9a4:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41d9a8:	add	x0, x0, #0xc7f
  41d9ac:	bl	4247d8 <wcrtomb@plt+0x1fce8>
  41d9b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d9b4:	ldr	x28, [x8, #104]
  41d9b8:	str	x28, [x26, #48]
  41d9bc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41d9c0:	add	x9, x9, #0x659
  41d9c4:	ldrb	w8, [x9]
  41d9c8:	cmp	w8, #0x0
  41d9cc:	mov	w8, #0xa                   	// #10
  41d9d0:	csel	w8, wzr, w8, ne  // ne = any
  41d9d4:	str	w8, [x26, #40]
  41d9d8:	ldrb	w8, [x9, #1]
  41d9dc:	strb	w8, [x26, #44]
  41d9e0:	ldr	x8, [x26, #32]
  41d9e4:	ldr	w23, [x26, #40]
  41d9e8:	add	x8, x8, #0x1
  41d9ec:	str	x8, [x26, #32]
  41d9f0:	ldp	x8, x9, [x28, #8]
  41d9f4:	cmp	x8, x9
  41d9f8:	b.cs	41da94 <wcrtomb@plt+0x18fa4>  // b.hs, b.nlast
  41d9fc:	add	x9, x8, #0x1
  41da00:	str	x9, [x28, #8]
  41da04:	ldrb	w27, [x8]
  41da08:	cmn	w27, #0x1
  41da0c:	mov	x24, xzr
  41da10:	cset	w8, ne  // ne = any
  41da14:	b.eq	41dab0 <wcrtomb@plt+0x18fc0>  // b.none
  41da18:	cmp	w27, w23
  41da1c:	b.eq	41dab0 <wcrtomb@plt+0x18fc0>  // b.none
  41da20:	mov	x24, xzr
  41da24:	ldp	x0, x8, [x20]
  41da28:	cmp	x24, x8
  41da2c:	b.ne	41da3c <wcrtomb@plt+0x18f4c>  // b.any
  41da30:	add	x1, x20, #0x8
  41da34:	bl	44a1a8 <argp_parse@@Base+0xfafc>
  41da38:	str	x0, [x20]
  41da3c:	strb	w27, [x0, x24]
  41da40:	cbz	w27, 41dac0 <wcrtomb@plt+0x18fd0>
  41da44:	ldp	x8, x9, [x28, #8]
  41da48:	add	x24, x24, #0x1
  41da4c:	cmp	x8, x9
  41da50:	b.cs	41da78 <wcrtomb@plt+0x18f88>  // b.hs, b.nlast
  41da54:	add	x9, x8, #0x1
  41da58:	str	x9, [x28, #8]
  41da5c:	ldrb	w27, [x8]
  41da60:	cmn	w27, #0x1
  41da64:	cset	w8, ne  // ne = any
  41da68:	b.eq	41dab0 <wcrtomb@plt+0x18fc0>  // b.none
  41da6c:	cmp	w27, w23
  41da70:	b.ne	41da24 <wcrtomb@plt+0x18f34>  // b.any
  41da74:	b	41dab0 <wcrtomb@plt+0x18fc0>
  41da78:	mov	x0, x28
  41da7c:	bl	404a70 <__uflow@plt>
  41da80:	mov	w27, w0
  41da84:	cmn	w27, #0x1
  41da88:	cset	w8, ne  // ne = any
  41da8c:	b.ne	41da6c <wcrtomb@plt+0x18f7c>  // b.any
  41da90:	b	41dab0 <wcrtomb@plt+0x18fc0>
  41da94:	mov	x0, x28
  41da98:	bl	404a70 <__uflow@plt>
  41da9c:	mov	w27, w0
  41daa0:	cmn	w27, #0x1
  41daa4:	mov	x24, xzr
  41daa8:	cset	w8, ne  // ne = any
  41daac:	b.ne	41da18 <wcrtomb@plt+0x18f28>  // b.any
  41dab0:	cbnz	x24, 41dc1c <wcrtomb@plt+0x1912c>
  41dab4:	tbz	w8, #0, 41dc1c <wcrtomb@plt+0x1912c>
  41dab8:	ldr	x28, [x26, #48]
  41dabc:	b	41d9e0 <wcrtomb@plt+0x18ef0>
  41dac0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  41dac4:	ldrb	w8, [x8, #3713]
  41dac8:	mov	x28, x19
  41dacc:	mov	w19, w21
  41dad0:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dad4:	add	x21, x21, #0x28a
  41dad8:	tbz	w8, #1, 41db0c <wcrtomb@plt+0x1901c>
  41dadc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dae0:	ldr	x8, [x8, #4000]
  41dae4:	cbz	x8, 41daec <wcrtomb@plt+0x18ffc>
  41dae8:	blr	x8
  41daec:	ldr	x0, [x26, #24]
  41daf0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41daf4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41daf8:	mov	x3, x0
  41dafc:	mov	w0, wzr
  41db00:	mov	w1, wzr
  41db04:	add	x2, x2, #0xc82
  41db08:	bl	403f60 <error@plt>
  41db0c:	str	wzr, [x26, #40]
  41db10:	ldrb	w8, [x26, #44]
  41db14:	cbnz	w8, 41e510 <wcrtomb@plt+0x19a20>
  41db18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41db1c:	ldrb	w8, [x8, #3748]
  41db20:	cbz	w8, 41db2c <wcrtomb@plt+0x1903c>
  41db24:	ldr	x0, [x28, #1696]
  41db28:	bl	41b6c0 <wcrtomb@plt+0x16bd0>
  41db2c:	ldr	x23, [x28, #1696]
  41db30:	ldrb	w24, [x23]
  41db34:	cbz	w24, 41e514 <wcrtomb@plt+0x19a24>
  41db38:	bl	404640 <__ctype_b_loc@plt>
  41db3c:	ldr	x8, [x0]
  41db40:	mov	x27, x23
  41db44:	and	x9, x24, #0xff
  41db48:	ldrh	w9, [x8, x9, lsl #1]
  41db4c:	tbz	w9, #13, 41db5c <wcrtomb@plt+0x1906c>
  41db50:	ldrb	w24, [x27, #1]!
  41db54:	cbnz	w24, 41db44 <wcrtomb@plt+0x19054>
  41db58:	b	41e514 <wcrtomb@plt+0x19a24>
  41db5c:	and	w8, w24, #0xff
  41db60:	cmp	w8, #0x2d
  41db64:	b.ne	41e514 <wcrtomb@plt+0x19a24>  // b.any
  41db68:	mov	w2, #0xe46                 	// #3654
  41db6c:	mov	w8, #0x1                   	// #1
  41db70:	add	x1, sp, #0x20
  41db74:	movk	w2, #0x200, lsl #16
  41db78:	mov	x0, x27
  41db7c:	str	x8, [sp, #48]
  41db80:	bl	42f7d0 <wcrtomb@plt+0x2ace0>
  41db84:	cbnz	w0, 41e5c4 <wcrtomb@plt+0x19ad4>
  41db88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41db8c:	ldr	x8, [x8, #2440]
  41db90:	ldr	x9, [sp, #40]
  41db94:	mov	x2, sp
  41db98:	str	x8, [x9]
  41db9c:	mov	w8, #0x2                   	// #2
  41dba0:	str	w8, [sp]
  41dba4:	ldr	w8, [sp, #32]
  41dba8:	ldr	w9, [sp, #48]
  41dbac:	ldur	q0, [x26, #24]
  41dbb0:	ldr	x1, [sp, #40]
  41dbb4:	add	w0, w9, w8
  41dbb8:	stur	q0, [sp, #8]
  41dbbc:	bl	424b94 <wcrtomb@plt+0x200a4>
  41dbc0:	ldr	x9, [sp, #32]
  41dbc4:	ldr	x10, [sp, #48]
  41dbc8:	cmn	x10, x9
  41dbcc:	b.eq	41dbec <wcrtomb@plt+0x190fc>  // b.none
  41dbd0:	mov	x8, xzr
  41dbd4:	add	x9, x10, x9
  41dbd8:	ldr	x10, [sp, #40]
  41dbdc:	str	xzr, [x10, x8, lsl #3]
  41dbe0:	add	x8, x8, #0x1
  41dbe4:	cmp	x9, x8
  41dbe8:	b.hi	41dbd8 <wcrtomb@plt+0x190e8>  // b.pmore
  41dbec:	add	x0, sp, #0x20
  41dbf0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  41dbf4:	ldr	x8, [x22, #1736]
  41dbf8:	cbz	x8, 41e194 <wcrtomb@plt+0x196a4>
  41dbfc:	ldr	x8, [x8, #8]
  41dc00:	cbz	x8, 41e160 <wcrtomb@plt+0x19670>
  41dc04:	mov	x26, x8
  41dc08:	ldr	x8, [x8, #8]
  41dc0c:	cbnz	x8, 41dc04 <wcrtomb@plt+0x19114>
  41dc10:	str	x26, [x22, #1736]
  41dc14:	cbnz	x26, 41d648 <wcrtomb@plt+0x18b58>
  41dc18:	b	41e194 <wcrtomb@plt+0x196a4>
  41dc1c:	ldp	x28, x8, [x20]
  41dc20:	cmp	x24, x8
  41dc24:	b.ne	41dc3c <wcrtomb@plt+0x1914c>  // b.any
  41dc28:	add	x1, x20, #0x8
  41dc2c:	mov	x0, x28
  41dc30:	bl	44a1a8 <argp_parse@@Base+0xfafc>
  41dc34:	mov	x28, x0
  41dc38:	str	x0, [x20]
  41dc3c:	mov	x0, x28
  41dc40:	strb	wzr, [x28, x24]
  41dc44:	bl	403f00 <strlen@plt>
  41dc48:	add	x8, x28, x0
  41dc4c:	sub	x8, x8, #0x1
  41dc50:	cmp	x8, x28
  41dc54:	b.ls	41dc70 <wcrtomb@plt+0x19180>  // b.plast
  41dc58:	ldrb	w9, [x8]
  41dc5c:	cmp	w9, #0x2f
  41dc60:	b.ne	41dc70 <wcrtomb@plt+0x19180>  // b.any
  41dc64:	strb	wzr, [x8], #-1
  41dc68:	cmp	x8, x28
  41dc6c:	b.hi	41dc58 <wcrtomb@plt+0x19168>  // b.pmore
  41dc70:	mov	x28, x19
  41dc74:	mov	w19, w21
  41dc78:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dc7c:	add	x21, x21, #0x28a
  41dc80:	cbnz	x24, 41db10 <wcrtomb@plt+0x19020>
  41dc84:	cmn	w27, #0x1
  41dc88:	b.ne	41db10 <wcrtomb@plt+0x19020>  // b.any
  41dc8c:	ldr	x0, [x26, #24]
  41dc90:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  41dc94:	add	x1, x1, #0xb35
  41dc98:	bl	404610 <strcmp@plt>
  41dc9c:	cbz	w0, 41dca8 <wcrtomb@plt+0x191b8>
  41dca0:	ldr	x0, [x26, #48]
  41dca4:	bl	4041a0 <fclose@plt>
  41dca8:	str	xzr, [x26, #48]
  41dcac:	ldr	x26, [x22, #1736]
  41dcb0:	ldr	x8, [x26]
  41dcb4:	str	x8, [x22, #1736]
  41dcb8:	cbz	x8, 41dcc0 <wcrtomb@plt+0x191d0>
  41dcbc:	str	xzr, [x8, #8]
  41dcc0:	ldr	w8, [x26, #16]
  41dcc4:	cmp	w8, #0x4
  41dcc8:	b.eq	41dcdc <wcrtomb@plt+0x191ec>  // b.none
  41dccc:	cmp	w8, #0x3
  41dcd0:	b.eq	41e184 <wcrtomb@plt+0x19694>  // b.none
  41dcd4:	cmp	w8, #0x1
  41dcd8:	b.ne	41dd18 <wcrtomb@plt+0x19228>  // b.any
  41dcdc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dce0:	ldr	w8, [x8, #3852]
  41dce4:	cmp	w8, #0x8
  41dce8:	b.eq	41dcf4 <wcrtomb@plt+0x19204>  // b.none
  41dcec:	cmp	w8, #0x3
  41dcf0:	b.ne	41e160 <wcrtomb@plt+0x19670>  // b.any
  41dcf4:	str	xzr, [x26]
  41dcf8:	ldr	x8, [x25, #3016]
  41dcfc:	str	x8, [x26, #8]
  41dd00:	cbz	x8, 41dd08 <wcrtomb@plt+0x19218>
  41dd04:	str	x26, [x8]
  41dd08:	str	x26, [x25, #3016]
  41dd0c:	ldr	x26, [x22, #1736]
  41dd10:	cbnz	x26, 41d648 <wcrtomb@plt+0x18b58>
  41dd14:	b	41e194 <wcrtomb@plt+0x196a4>
  41dd18:	ldr	x0, [x25, #3016]
  41dd1c:	cbz	x0, 41e184 <wcrtomb@plt+0x19694>
  41dd20:	ldr	x8, [x0, #8]
  41dd24:	str	x8, [x25, #3016]
  41dd28:	bl	4046b0 <free@plt>
  41dd2c:	b	41dd18 <wcrtomb@plt+0x19228>
  41dd30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dd34:	ldr	w9, [x8, #1656]
  41dd38:	and	w9, w9, #0xfffffffe
  41dd3c:	str	w9, [x8, #1656]
  41dd40:	b	41e100 <wcrtomb@plt+0x19610>
  41dd44:	mov	w1, #0x2                   	// #2
  41dd48:	b	41ddec <wcrtomb@plt+0x192fc>
  41dd4c:	mov	w1, #0x1                   	// #1
  41dd50:	b	41ddd4 <wcrtomb@plt+0x192e4>
  41dd54:	bl	40ef84 <wcrtomb@plt+0xa494>
  41dd58:	b	41e100 <wcrtomb@plt+0x19610>
  41dd5c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dd60:	ldr	x0, [x23, #3056]
  41dd64:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dd68:	add	x1, x1, #0xd0d
  41dd6c:	mov	w2, #0x10000000            	// #268435456
  41dd70:	bl	43c928 <argp_parse@@Base+0x227c>
  41dd74:	ldr	x0, [x23, #3056]
  41dd78:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dd7c:	add	x1, x1, #0xd11
  41dd80:	mov	w2, #0x10000000            	// #268435456
  41dd84:	bl	43c928 <argp_parse@@Base+0x227c>
  41dd88:	ldr	x0, [x23, #3056]
  41dd8c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dd90:	add	x1, x1, #0xd14
  41dd94:	mov	w2, #0x10000000            	// #268435456
  41dd98:	b	41e074 <wcrtomb@plt+0x19584>
  41dd9c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dda0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dda4:	add	x9, x9, #0x674
  41dda8:	ldr	x0, [x8, #3056]
  41ddac:	ldp	w8, w9, [x9]
  41ddb0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ddb4:	ldr	w10, [x10, #3668]
  41ddb8:	mov	x1, x26
  41ddbc:	cmp	w8, #0x1
  41ddc0:	cset	w8, ne  // ne = any
  41ddc4:	orr	w8, w9, w8, lsl #28
  41ddc8:	orr	w2, w8, w10
  41ddcc:	b	41e074 <wcrtomb@plt+0x19584>
  41ddd0:	mov	w1, #0x2                   	// #2
  41ddd4:	mov	x0, x26
  41ddd8:	bl	40ebb8 <wcrtomb@plt+0xa0c8>
  41dddc:	b	41e100 <wcrtomb@plt+0x19610>
  41dde0:	mov	w1, #0x1                   	// #1
  41dde4:	b	41ddec <wcrtomb@plt+0x192fc>
  41dde8:	mov	w1, #0x3                   	// #3
  41ddec:	mov	x0, x26
  41ddf0:	mov	x2, xzr
  41ddf4:	bl	40a5f0 <wcrtomb@plt+0x5b00>
  41ddf8:	b	41e100 <wcrtomb@plt+0x19610>
  41ddfc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41de00:	ldr	w9, [x8, #1656]
  41de04:	orr	w9, w9, #0x10
  41de08:	str	w9, [x8, #1656]
  41de0c:	b	41e100 <wcrtomb@plt+0x19610>
  41de10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41de14:	ldr	w9, [x8, #1656]
  41de18:	orr	w9, w9, #0x40000000
  41de1c:	str	w9, [x8, #1656]
  41de20:	b	41e100 <wcrtomb@plt+0x19610>
  41de24:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41de28:	mov	w9, #0x8                   	// #8
  41de2c:	str	w9, [x8, #3668]
  41de30:	b	41e100 <wcrtomb@plt+0x19610>
  41de34:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41de38:	mov	w8, #0x101                 	// #257
  41de3c:	add	x9, x9, #0x659
  41de40:	strh	w8, [x9]
  41de44:	b	41e100 <wcrtomb@plt+0x19610>
  41de48:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41de4c:	add	x8, x8, #0x659
  41de50:	strh	wzr, [x8]
  41de54:	b	41e100 <wcrtomb@plt+0x19610>
  41de58:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41de5c:	adrp	x2, 40a000 <wcrtomb@plt+0x5510>
  41de60:	add	x0, x0, #0x84b
  41de64:	add	x2, x2, #0x8bc
  41de68:	mov	w1, #0x1                   	// #1
  41de6c:	bl	40a5f0 <wcrtomb@plt+0x5b00>
  41de70:	b	41e100 <wcrtomb@plt+0x19610>
  41de74:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41de78:	adrp	x2, 40a000 <wcrtomb@plt+0x5510>
  41de7c:	add	x0, x0, #0x84b
  41de80:	add	x2, x2, #0x8bc
  41de84:	mov	w1, #0x2                   	// #2
  41de88:	bl	40a5f0 <wcrtomb@plt+0x5b00>
  41de8c:	b	41e100 <wcrtomb@plt+0x19610>
  41de90:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41de94:	str	wzr, [x8, #3668]
  41de98:	b	41e100 <wcrtomb@plt+0x19610>
  41de9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41dea0:	strb	wzr, [x8, #3748]
  41dea4:	b	41e100 <wcrtomb@plt+0x19610>
  41dea8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41deac:	strb	wzr, [x8, #1626]
  41deb0:	b	41e100 <wcrtomb@plt+0x19610>
  41deb4:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41deb8:	adrp	x2, 40a000 <wcrtomb@plt+0x5510>
  41debc:	add	x0, x0, #0x84b
  41dec0:	add	x2, x2, #0x8bc
  41dec4:	mov	w1, #0x3                   	// #3
  41dec8:	bl	40a5f0 <wcrtomb@plt+0x5b00>
  41decc:	b	41e100 <wcrtomb@plt+0x19610>
  41ded0:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ded4:	ldr	x0, [x24, #3056]
  41ded8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dedc:	add	x1, x1, #0xd18
  41dee0:	mov	w2, wzr
  41dee4:	bl	43c928 <argp_parse@@Base+0x227c>
  41dee8:	ldr	x0, [x24, #3056]
  41deec:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41def0:	add	x1, x1, #0xd26
  41def4:	mov	w2, wzr
  41def8:	bl	43c928 <argp_parse@@Base+0x227c>
  41defc:	ldr	x0, [x24, #3056]
  41df00:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df04:	add	x1, x1, #0xd1c
  41df08:	mov	w2, wzr
  41df0c:	bl	43c928 <argp_parse@@Base+0x227c>
  41df10:	ldr	x0, [x24, #3056]
  41df14:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df18:	add	x1, x1, #0xd20
  41df1c:	mov	w2, wzr
  41df20:	bl	43c928 <argp_parse@@Base+0x227c>
  41df24:	ldr	x0, [x24, #3056]
  41df28:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df2c:	add	x1, x1, #0xd25
  41df30:	mov	w2, wzr
  41df34:	bl	43c928 <argp_parse@@Base+0x227c>
  41df38:	ldr	x0, [x24, #3056]
  41df3c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df40:	add	x1, x1, #0xd2a
  41df44:	mov	w2, wzr
  41df48:	bl	43c928 <argp_parse@@Base+0x227c>
  41df4c:	ldr	x0, [x24, #3056]
  41df50:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41df54:	add	x1, x1, #0xd31
  41df58:	mov	w2, wzr
  41df5c:	bl	43c928 <argp_parse@@Base+0x227c>
  41df60:	ldr	x0, [x24, #3056]
  41df64:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df68:	add	x1, x1, #0xd2f
  41df6c:	mov	w2, wzr
  41df70:	bl	43c928 <argp_parse@@Base+0x227c>
  41df74:	ldr	x0, [x24, #3056]
  41df78:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df7c:	add	x1, x1, #0xd3e
  41df80:	mov	w2, wzr
  41df84:	bl	43c928 <argp_parse@@Base+0x227c>
  41df88:	ldr	x0, [x24, #3056]
  41df8c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41df90:	add	x1, x1, #0xd4a
  41df94:	mov	w2, wzr
  41df98:	bl	43c928 <argp_parse@@Base+0x227c>
  41df9c:	ldr	x0, [x24, #3056]
  41dfa0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dfa4:	add	x1, x1, #0xd54
  41dfa8:	mov	w2, wzr
  41dfac:	bl	43c928 <argp_parse@@Base+0x227c>
  41dfb0:	ldr	x0, [x24, #3056]
  41dfb4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dfb8:	add	x1, x1, #0xd5b
  41dfbc:	mov	w2, wzr
  41dfc0:	bl	43c928 <argp_parse@@Base+0x227c>
  41dfc4:	ldr	x0, [x24, #3056]
  41dfc8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dfcc:	add	x1, x1, #0xd67
  41dfd0:	mov	w2, wzr
  41dfd4:	bl	43c928 <argp_parse@@Base+0x227c>
  41dfd8:	ldr	x0, [x24, #3056]
  41dfdc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dfe0:	add	x1, x1, #0xd74
  41dfe4:	mov	w2, wzr
  41dfe8:	bl	43c928 <argp_parse@@Base+0x227c>
  41dfec:	ldr	x0, [x24, #3056]
  41dff0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41dff4:	add	x1, x1, #0xd7c
  41dff8:	mov	w2, wzr
  41dffc:	bl	43c928 <argp_parse@@Base+0x227c>
  41e000:	ldr	x0, [x24, #3056]
  41e004:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41e008:	add	x1, x1, #0xd3c
  41e00c:	mov	w2, wzr
  41e010:	bl	43c928 <argp_parse@@Base+0x227c>
  41e014:	ldr	x0, [x24, #3056]
  41e018:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e01c:	add	x1, x1, #0xd81
  41e020:	mov	w2, wzr
  41e024:	bl	43c928 <argp_parse@@Base+0x227c>
  41e028:	ldr	x0, [x24, #3056]
  41e02c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e030:	add	x1, x1, #0xd8a
  41e034:	mov	w2, wzr
  41e038:	bl	43c928 <argp_parse@@Base+0x227c>
  41e03c:	ldr	x0, [x24, #3056]
  41e040:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41e044:	add	x1, x1, #0xd47
  41e048:	mov	w2, wzr
  41e04c:	bl	43c928 <argp_parse@@Base+0x227c>
  41e050:	ldr	x0, [x24, #3056]
  41e054:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e058:	add	x1, x1, #0xd8e
  41e05c:	mov	w2, wzr
  41e060:	bl	43c928 <argp_parse@@Base+0x227c>
  41e064:	ldr	x0, [x24, #3056]
  41e068:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e06c:	add	x1, x1, #0xd96
  41e070:	mov	w2, wzr
  41e074:	bl	43c928 <argp_parse@@Base+0x227c>
  41e078:	b	41e100 <wcrtomb@plt+0x19610>
  41e07c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e080:	ldr	w9, [x8, #1656]
  41e084:	and	w9, w9, #0xffffffef
  41e088:	str	w9, [x8, #1656]
  41e08c:	b	41e100 <wcrtomb@plt+0x19610>
  41e090:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e094:	ldr	w9, [x8, #1656]
  41e098:	orr	w9, w9, #0x1
  41e09c:	str	w9, [x8, #1656]
  41e0a0:	b	41e100 <wcrtomb@plt+0x19610>
  41e0a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e0a8:	add	x8, x8, #0x658
  41e0ac:	ldr	w9, [x8, #32]
  41e0b0:	mov	w10, #0x1                   	// #1
  41e0b4:	strb	w10, [x8]
  41e0b8:	and	w9, w9, #0xbfffffff
  41e0bc:	str	w9, [x8, #32]
  41e0c0:	b	41e100 <wcrtomb@plt+0x19610>
  41e0c4:	mov	w8, #0x1                   	// #1
  41e0c8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e0cc:	strb	w8, [x9, #3748]
  41e0d0:	b	41e100 <wcrtomb@plt+0x19610>
  41e0d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e0d8:	mov	w9, #0x1                   	// #1
  41e0dc:	str	w9, [x8, #1652]
  41e0e0:	b	41e100 <wcrtomb@plt+0x19610>
  41e0e4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e0e8:	mov	w9, #0x2                   	// #2
  41e0ec:	str	w9, [x8, #1652]
  41e0f0:	b	41e100 <wcrtomb@plt+0x19610>
  41e0f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e0f8:	mov	w9, #0x1                   	// #1
  41e0fc:	strb	w9, [x8, #1626]
  41e100:	ldr	x26, [x22, #1736]
  41e104:	ldr	x8, [x26]
  41e108:	str	x8, [x22, #1736]
  41e10c:	cbz	x8, 41e114 <wcrtomb@plt+0x19624>
  41e110:	str	xzr, [x8, #8]
  41e114:	ldr	w8, [x26, #16]
  41e118:	cmp	w8, #0x4
  41e11c:	b.eq	41e130 <wcrtomb@plt+0x19640>  // b.none
  41e120:	cmp	w8, #0x3
  41e124:	b.eq	41e184 <wcrtomb@plt+0x19694>  // b.none
  41e128:	cmp	w8, #0x1
  41e12c:	b.ne	41e16c <wcrtomb@plt+0x1967c>  // b.any
  41e130:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e134:	ldr	w8, [x8, #3852]
  41e138:	cmp	w8, #0x8
  41e13c:	b.eq	41e148 <wcrtomb@plt+0x19658>  // b.none
  41e140:	cmp	w8, #0x3
  41e144:	b.ne	41e160 <wcrtomb@plt+0x19670>  // b.any
  41e148:	str	xzr, [x26]
  41e14c:	ldr	x8, [x25, #3016]
  41e150:	str	x8, [x26, #8]
  41e154:	cbz	x8, 41e15c <wcrtomb@plt+0x1966c>
  41e158:	str	x26, [x8]
  41e15c:	str	x26, [x25, #3016]
  41e160:	ldr	x26, [x22, #1736]
  41e164:	cbnz	x26, 41d648 <wcrtomb@plt+0x18b58>
  41e168:	b	41e194 <wcrtomb@plt+0x196a4>
  41e16c:	ldr	x0, [x25, #3016]
  41e170:	cbz	x0, 41e184 <wcrtomb@plt+0x19694>
  41e174:	ldr	x8, [x0, #8]
  41e178:	str	x8, [x25, #3016]
  41e17c:	bl	4046b0 <free@plt>
  41e180:	b	41e16c <wcrtomb@plt+0x1967c>
  41e184:	mov	x0, x26
  41e188:	bl	4046b0 <free@plt>
  41e18c:	ldr	x26, [x22, #1736]
  41e190:	cbnz	x26, 41d648 <wcrtomb@plt+0x18b58>
  41e194:	ldr	x8, [x25, #3016]
  41e198:	cbz	x8, 41e3c0 <wcrtomb@plt+0x198d0>
  41e19c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e1a0:	ldr	x8, [x24, #4000]
  41e1a4:	cbz	x8, 41e1ac <wcrtomb@plt+0x196bc>
  41e1a8:	blr	x8
  41e1ac:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e1b0:	add	x1, x1, #0xd9d
  41e1b4:	mov	w2, #0x5                   	// #5
  41e1b8:	mov	x0, xzr
  41e1bc:	bl	4048b0 <dcgettext@plt>
  41e1c0:	mov	x2, x0
  41e1c4:	mov	w0, wzr
  41e1c8:	mov	w1, wzr
  41e1cc:	bl	403f60 <error@plt>
  41e1d0:	ldr	x0, [x25, #3016]
  41e1d4:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e1d8:	mov	w8, #0x2                   	// #2
  41e1dc:	str	w8, [x26, #2352]
  41e1e0:	mov	x8, x0
  41e1e4:	mov	x27, x8
  41e1e8:	ldr	x8, [x8, #8]
  41e1ec:	cbnz	x8, 41e1e4 <wcrtomb@plt+0x196f4>
  41e1f0:	cbz	x27, 41e3a4 <wcrtomb@plt+0x198b4>
  41e1f4:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41e1f8:	add	x8, x8, #0x7c8
  41e1fc:	adrp	x20, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e200:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e204:	add	x20, x20, #0xe80
  41e208:	mov	w19, #0x2                   	// #2
  41e20c:	sub	x28, x8, #0x30
  41e210:	add	x21, x21, #0xe6c
  41e214:	b	41e248 <wcrtomb@plt+0x19758>
  41e218:	mov	x23, xzr
  41e21c:	ldr	x0, [x27, #32]
  41e220:	bl	449144 <argp_parse@@Base+0xea98>
  41e224:	mov	x4, x0
  41e228:	mov	w0, wzr
  41e22c:	mov	w1, wzr
  41e230:	mov	x2, x22
  41e234:	mov	x3, x23
  41e238:	bl	403f60 <error@plt>
  41e23c:	str	w19, [x26, #2352]
  41e240:	ldr	x27, [x27]
  41e244:	cbz	x27, 41e3a0 <wcrtomb@plt+0x198b0>
  41e248:	ldr	w8, [x27, #16]
  41e24c:	cmp	w8, #0x4
  41e250:	b.eq	41e2a0 <wcrtomb@plt+0x197b0>  // b.none
  41e254:	cmp	w8, #0x1
  41e258:	b.ne	41e240 <wcrtomb@plt+0x19750>  // b.any
  41e25c:	ldr	x8, [x24, #4000]
  41e260:	cbz	x8, 41e268 <wcrtomb@plt+0x19778>
  41e264:	blr	x8
  41e268:	mov	w2, #0x5                   	// #5
  41e26c:	mov	x0, xzr
  41e270:	mov	x1, x21
  41e274:	bl	4048b0 <dcgettext@plt>
  41e278:	ldr	x8, [x27, #24]
  41e27c:	mov	x22, x0
  41e280:	mov	x0, x8
  41e284:	bl	449144 <argp_parse@@Base+0xea98>
  41e288:	mov	x3, x0
  41e28c:	mov	w0, wzr
  41e290:	mov	w1, wzr
  41e294:	mov	x2, x22
  41e298:	bl	403f60 <error@plt>
  41e29c:	b	41e23c <wcrtomb@plt+0x1974c>
  41e2a0:	ldr	x9, [x27, #32]
  41e2a4:	ldr	x8, [x24, #4000]
  41e2a8:	cbz	x9, 41e304 <wcrtomb@plt+0x19814>
  41e2ac:	cbz	x8, 41e2b4 <wcrtomb@plt+0x197c4>
  41e2b0:	blr	x8
  41e2b4:	mov	w2, #0x5                   	// #5
  41e2b8:	mov	x0, xzr
  41e2bc:	mov	x1, x20
  41e2c0:	bl	4048b0 <dcgettext@plt>
  41e2c4:	ldr	w8, [x27, #24]
  41e2c8:	mov	x22, x0
  41e2cc:	cbz	w8, 41e364 <wcrtomb@plt+0x19874>
  41e2d0:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41e2d4:	add	x9, x9, #0x7e8
  41e2d8:	b	41e2e8 <wcrtomb@plt+0x197f8>
  41e2dc:	cmp	w10, w8
  41e2e0:	b.eq	41e21c <wcrtomb@plt+0x1972c>  // b.none
  41e2e4:	add	x9, x9, #0x30
  41e2e8:	ldur	x23, [x9, #-32]
  41e2ec:	ldur	w10, [x9, #-24]
  41e2f0:	cbnz	x23, 41e2dc <wcrtomb@plt+0x197ec>
  41e2f4:	cbnz	w10, 41e2dc <wcrtomb@plt+0x197ec>
  41e2f8:	ldr	x10, [x9]
  41e2fc:	cbnz	x10, 41e2e4 <wcrtomb@plt+0x197f4>
  41e300:	b	41e218 <wcrtomb@plt+0x19728>
  41e304:	cbz	x8, 41e30c <wcrtomb@plt+0x1981c>
  41e308:	blr	x8
  41e30c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e310:	mov	w2, #0x5                   	// #5
  41e314:	mov	x0, xzr
  41e318:	add	x1, x1, #0xe96
  41e31c:	bl	4048b0 <dcgettext@plt>
  41e320:	ldr	w8, [x27, #24]
  41e324:	mov	x2, x0
  41e328:	cbz	w8, 41e37c <wcrtomb@plt+0x1988c>
  41e32c:	adrp	x9, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41e330:	add	x9, x9, #0x7e8
  41e334:	b	41e344 <wcrtomb@plt+0x19854>
  41e338:	cmp	w10, w8
  41e33c:	b.eq	41e390 <wcrtomb@plt+0x198a0>  // b.none
  41e340:	add	x9, x9, #0x30
  41e344:	ldur	x3, [x9, #-32]
  41e348:	ldur	w10, [x9, #-24]
  41e34c:	cbnz	x3, 41e338 <wcrtomb@plt+0x19848>
  41e350:	cbnz	w10, 41e338 <wcrtomb@plt+0x19848>
  41e354:	ldr	x10, [x9]
  41e358:	cbnz	x10, 41e340 <wcrtomb@plt+0x19850>
  41e35c:	mov	x3, xzr
  41e360:	b	41e390 <wcrtomb@plt+0x198a0>
  41e364:	mov	x8, x28
  41e368:	ldr	w9, [x8, #56]
  41e36c:	add	x8, x8, #0x30
  41e370:	cbnz	w9, 41e368 <wcrtomb@plt+0x19878>
  41e374:	ldr	x23, [x8]
  41e378:	b	41e21c <wcrtomb@plt+0x1972c>
  41e37c:	mov	x8, x28
  41e380:	ldr	w9, [x8, #56]
  41e384:	add	x8, x8, #0x30
  41e388:	cbnz	w9, 41e380 <wcrtomb@plt+0x19890>
  41e38c:	ldr	x3, [x8]
  41e390:	mov	w0, wzr
  41e394:	mov	w1, wzr
  41e398:	bl	403f60 <error@plt>
  41e39c:	b	41e23c <wcrtomb@plt+0x1974c>
  41e3a0:	ldr	x0, [x25, #3016]
  41e3a4:	cbz	x0, 41e524 <wcrtomb@plt+0x19a34>
  41e3a8:	ldr	x8, [x0, #8]
  41e3ac:	str	x8, [x25, #3016]
  41e3b0:	bl	4046b0 <free@plt>
  41e3b4:	ldr	x0, [x25, #3016]
  41e3b8:	cbnz	x0, 41e3a8 <wcrtomb@plt+0x198b8>
  41e3bc:	b	41e524 <wcrtomb@plt+0x19a34>
  41e3c0:	mov	x0, xzr
  41e3c4:	b	41e524 <wcrtomb@plt+0x19a34>
  41e3c8:	ldr	x19, [x26, #24]
  41e3cc:	mov	x0, x19
  41e3d0:	bl	403f00 <strlen@plt>
  41e3d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e3d8:	ldr	x9, [x8, #1704]
  41e3dc:	cmp	x9, x0
  41e3e0:	b.cs	41e414 <wcrtomb@plt+0x19924>  // b.hs, b.nlast
  41e3e4:	lsl	x9, x9, #1
  41e3e8:	cbz	x9, 41e544 <wcrtomb@plt+0x19a54>
  41e3ec:	cmp	x9, x0
  41e3f0:	b.cc	41e3e4 <wcrtomb@plt+0x198f4>  // b.lo, b.ul, b.last
  41e3f4:	ldr	x0, [x20]
  41e3f8:	str	x9, [x20, #8]
  41e3fc:	bl	4046b0 <free@plt>
  41e400:	ldr	x8, [x20, #8]
  41e404:	add	x0, x8, #0x2
  41e408:	bl	44a010 <argp_parse@@Base+0xf964>
  41e40c:	str	x0, [x20]
  41e410:	b	41e418 <wcrtomb@plt+0x19928>
  41e414:	ldr	x0, [x28, #1696]
  41e418:	mov	x1, x19
  41e41c:	bl	4047f0 <strcpy@plt>
  41e420:	ldr	x20, [x28, #1696]
  41e424:	mov	x0, x20
  41e428:	bl	403f00 <strlen@plt>
  41e42c:	add	x8, x20, x0
  41e430:	sub	x8, x8, #0x1
  41e434:	cmp	x8, x20
  41e438:	b.ls	41e454 <wcrtomb@plt+0x19964>  // b.plast
  41e43c:	ldrb	w9, [x8]
  41e440:	cmp	w9, #0x2f
  41e444:	b.ne	41e454 <wcrtomb@plt+0x19964>  // b.any
  41e448:	strb	wzr, [x8], #-1
  41e44c:	cmp	x8, x20
  41e450:	b.hi	41e43c <wcrtomb@plt+0x1994c>  // b.pmore
  41e454:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e458:	ldrb	w8, [x8, #3748]
  41e45c:	cbz	w8, 41e46c <wcrtomb@plt+0x1997c>
  41e460:	mov	x0, x20
  41e464:	bl	41b6c0 <wcrtomb@plt+0x16bd0>
  41e468:	ldr	x20, [x28, #1696]
  41e46c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e470:	ldr	w8, [x26, #16]
  41e474:	add	x9, x9, #0x6c8
  41e478:	ldr	x19, [x9]
  41e47c:	str	x20, [x9, #40]
  41e480:	str	w8, [x9, #32]
  41e484:	ldr	x8, [x19]
  41e488:	str	x8, [x9]
  41e48c:	cbz	x8, 41e494 <wcrtomb@plt+0x199a4>
  41e490:	str	xzr, [x8, #8]
  41e494:	ldr	w8, [x19, #16]
  41e498:	cmp	w8, #0x4
  41e49c:	b.eq	41e4b0 <wcrtomb@plt+0x199c0>  // b.none
  41e4a0:	cmp	w8, #0x3
  41e4a4:	b.eq	41e4fc <wcrtomb@plt+0x19a0c>  // b.none
  41e4a8:	cmp	w8, #0x1
  41e4ac:	b.ne	41e4e4 <wcrtomb@plt+0x199f4>  // b.any
  41e4b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e4b4:	ldr	w8, [x8, #3852]
  41e4b8:	cmp	w8, #0x8
  41e4bc:	b.eq	41e4c8 <wcrtomb@plt+0x199d8>  // b.none
  41e4c0:	cmp	w8, #0x3
  41e4c4:	b.ne	41e504 <wcrtomb@plt+0x19a14>  // b.any
  41e4c8:	str	xzr, [x19]
  41e4cc:	ldr	x8, [x25, #3016]
  41e4d0:	str	x8, [x19, #8]
  41e4d4:	cbz	x8, 41e4dc <wcrtomb@plt+0x199ec>
  41e4d8:	str	x19, [x8]
  41e4dc:	str	x19, [x25, #3016]
  41e4e0:	b	41e504 <wcrtomb@plt+0x19a14>
  41e4e4:	ldr	x0, [x25, #3016]
  41e4e8:	cbz	x0, 41e4fc <wcrtomb@plt+0x19a0c>
  41e4ec:	ldr	x8, [x0, #8]
  41e4f0:	str	x8, [x25, #3016]
  41e4f4:	bl	4046b0 <free@plt>
  41e4f8:	b	41e4e4 <wcrtomb@plt+0x199f4>
  41e4fc:	mov	x0, x19
  41e500:	bl	4046b0 <free@plt>
  41e504:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e508:	add	x0, x0, #0x6d8
  41e50c:	b	41e524 <wcrtomb@plt+0x19a34>
  41e510:	ldr	x23, [x28, #1696]
  41e514:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e518:	add	x0, x0, #0x6d8
  41e51c:	str	wzr, [x0, #16]
  41e520:	str	x23, [x0, #24]
  41e524:	ldp	x20, x19, [sp, #352]
  41e528:	ldp	x22, x21, [sp, #336]
  41e52c:	ldp	x24, x23, [sp, #320]
  41e530:	ldp	x26, x25, [sp, #304]
  41e534:	ldp	x28, x27, [sp, #288]
  41e538:	ldp	x29, x30, [sp, #272]
  41e53c:	add	sp, sp, #0x170
  41e540:	ret
  41e544:	str	xzr, [x8, #1704]
  41e548:	bl	40eb80 <wcrtomb@plt+0xa090>
  41e54c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e550:	ldr	x8, [x8, #4000]
  41e554:	cbz	x8, 41e55c <wcrtomb@plt+0x19a6c>
  41e558:	blr	x8
  41e55c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41e560:	add	x2, x2, #0xcee
  41e564:	mov	w0, wzr
  41e568:	mov	w1, wzr
  41e56c:	mov	w3, w27
  41e570:	bl	403f60 <error@plt>
  41e574:	bl	40eb40 <wcrtomb@plt+0xa050>
  41e578:	bl	4049c0 <__errno_location@plt>
  41e57c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e580:	ldr	x8, [x8, #4000]
  41e584:	ldr	w19, [x0]
  41e588:	cbz	x8, 41e590 <wcrtomb@plt+0x19aa0>
  41e58c:	blr	x8
  41e590:	mov	x0, x26
  41e594:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41e598:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  41e59c:	mov	x3, x0
  41e5a0:	add	x2, x2, #0x274
  41e5a4:	mov	w0, wzr
  41e5a8:	mov	w1, w19
  41e5ac:	bl	403f60 <error@plt>
  41e5b0:	bl	40eb40 <wcrtomb@plt+0xa050>
  41e5b4:	mov	x0, x27
  41e5b8:	bl	42d4cc <wcrtomb@plt+0x289dc>
  41e5bc:	ldr	x0, [x26, #24]
  41e5c0:	bl	42cc7c <wcrtomb@plt+0x2818c>
  41e5c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e5c8:	ldr	x8, [x8, #4000]
  41e5cc:	cbz	x8, 41e5d4 <wcrtomb@plt+0x19ae4>
  41e5d0:	blr	x8
  41e5d4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  41e5d8:	add	x1, x1, #0x58d
  41e5dc:	mov	w2, #0x5                   	// #5
  41e5e0:	mov	x0, xzr
  41e5e4:	bl	4048b0 <dcgettext@plt>
  41e5e8:	mov	x19, x0
  41e5ec:	add	x0, sp, #0x20
  41e5f0:	bl	42fac0 <wcrtomb@plt+0x2afd0>
  41e5f4:	mov	x4, x0
  41e5f8:	mov	w0, wzr
  41e5fc:	mov	w1, wzr
  41e600:	mov	x2, x19
  41e604:	mov	x3, x27
  41e608:	bl	403f60 <error@plt>
  41e60c:	bl	40eb40 <wcrtomb@plt+0xa050>
  41e610:	stp	x29, x30, [sp, #-80]!
  41e614:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e618:	stp	x20, x19, [sp, #64]
  41e61c:	ldrb	w19, [x8, #3632]
  41e620:	mov	w0, wzr
  41e624:	stp	x26, x25, [sp, #16]
  41e628:	stp	x24, x23, [sp, #32]
  41e62c:	stp	x22, x21, [sp, #48]
  41e630:	mov	x29, sp
  41e634:	bl	41d600 <wcrtomb@plt+0x18b10>
  41e638:	mov	x20, x0
  41e63c:	cbz	w19, 41e710 <wcrtomb@plt+0x19c20>
  41e640:	cbz	x20, 41e674 <wcrtomb@plt+0x19b84>
  41e644:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e648:	ldr	w8, [x20, #16]
  41e64c:	cmp	w8, #0x1
  41e650:	b.ne	41e898 <wcrtomb@plt+0x19da8>  // b.any
  41e654:	ldr	x0, [x20, #24]
  41e658:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e65c:	bl	41ca9c <wcrtomb@plt+0x17fac>
  41e660:	str	w0, [x19, #1648]
  41e664:	mov	w0, wzr
  41e668:	bl	41d600 <wcrtomb@plt+0x18b10>
  41e66c:	mov	x20, x0
  41e670:	cbnz	x0, 41e648 <wcrtomb@plt+0x19b58>
  41e674:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e678:	ldr	w20, [x8, #1648]
  41e67c:	cbz	w20, 41e94c <wcrtomb@plt+0x19e5c>
  41e680:	mov	w0, #0x60                  	// #96
  41e684:	bl	44a230 <argp_parse@@Base+0xfb84>
  41e688:	mov	x19, x0
  41e68c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41e690:	add	x0, x0, #0xb36
  41e694:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e698:	str	x0, [x19, #16]
  41e69c:	bl	403f00 <strlen@plt>
  41e6a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e6a4:	add	x8, x8, #0x658
  41e6a8:	ldp	w11, w13, [x8, #28]
  41e6ac:	ldrb	w12, [x8]
  41e6b0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e6b4:	mov	w9, #0x40000000            	// #1073741824
  41e6b8:	cmp	w11, #0x2
  41e6bc:	cset	w11, eq  // eq = none
  41e6c0:	cmp	w12, #0x0
  41e6c4:	ldr	x12, [x8, #96]
  41e6c8:	ldr	w10, [x10, #3668]
  41e6cc:	csel	w9, wzr, w9, ne  // ne = any
  41e6d0:	bfi	w9, w11, #28, #1
  41e6d4:	add	x11, x8, #0x68
  41e6d8:	cmp	x12, #0x0
  41e6dc:	orr	w9, w9, w13
  41e6e0:	csel	x11, x11, x12, eq  // eq = none
  41e6e4:	orr	w9, w9, w10
  41e6e8:	str	x0, [x19, #24]
  41e6ec:	str	w20, [x19, #40]
  41e6f0:	strb	wzr, [x19, #36]
  41e6f4:	stp	xzr, xzr, [x19, #56]
  41e6f8:	str	xzr, [x19, #48]
  41e6fc:	stp	xzr, x12, [x19]
  41e700:	str	w9, [x19, #32]
  41e704:	str	x19, [x11]
  41e708:	str	x19, [x8, #96]
  41e70c:	b	41e94c <wcrtomb@plt+0x19e5c>
  41e710:	cbz	x20, 41e94c <wcrtomb@plt+0x19e5c>
  41e714:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41e718:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e71c:	mov	w21, wzr
  41e720:	add	x24, x24, #0xb36
  41e724:	add	x22, x22, #0x658
  41e728:	mov	w25, #0x40000000            	// #1073741824
  41e72c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e730:	mov	w26, #0x1                   	// #1
  41e734:	ldr	w8, [x20, #16]
  41e738:	ldr	x20, [x20, #24]
  41e73c:	cmp	w8, #0x1
  41e740:	b.ne	41e774 <wcrtomb@plt+0x19c84>  // b.any
  41e744:	mov	x0, x20
  41e748:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e74c:	bl	41ca9c <wcrtomb@plt+0x17fac>
  41e750:	mov	w19, w0
  41e754:	mov	w0, wzr
  41e758:	bl	41d600 <wcrtomb@plt+0x18b10>
  41e75c:	cbz	x0, 41e80c <wcrtomb@plt+0x19d1c>
  41e760:	ldr	w8, [x0, #16]
  41e764:	ldr	x20, [x0, #24]
  41e768:	cmp	w8, #0x1
  41e76c:	b.eq	41e744 <wcrtomb@plt+0x19c54>  // b.none
  41e770:	b	41e778 <wcrtomb@plt+0x19c88>
  41e774:	mov	w19, w21
  41e778:	mov	w0, #0x60                  	// #96
  41e77c:	bl	44a230 <argp_parse@@Base+0xfb84>
  41e780:	cmp	x20, #0x0
  41e784:	mov	x21, x0
  41e788:	csel	x0, x24, x20, eq  // eq = none
  41e78c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e790:	str	x0, [x21, #16]
  41e794:	bl	403f00 <strlen@plt>
  41e798:	ldp	w8, w11, [x22, #28]
  41e79c:	ldrb	w10, [x22]
  41e7a0:	ldr	x9, [x22, #96]
  41e7a4:	str	x0, [x21, #24]
  41e7a8:	cmp	w8, #0x2
  41e7ac:	cset	w8, eq  // eq = none
  41e7b0:	cmp	w10, #0x0
  41e7b4:	csel	w10, wzr, w25, ne  // ne = any
  41e7b8:	bfi	w10, w8, #28, #1
  41e7bc:	ldr	w8, [x23, #3668]
  41e7c0:	orr	w10, w10, w11
  41e7c4:	add	x11, x22, #0x68
  41e7c8:	cmp	x9, #0x0
  41e7cc:	csel	x11, x11, x9, eq  // eq = none
  41e7d0:	orr	w8, w10, w8
  41e7d4:	mov	w0, wzr
  41e7d8:	str	w19, [x21, #40]
  41e7dc:	stp	xzr, xzr, [x21, #56]
  41e7e0:	str	xzr, [x21, #48]
  41e7e4:	strb	w26, [x21, #36]
  41e7e8:	stp	xzr, x9, [x21]
  41e7ec:	str	w8, [x21, #32]
  41e7f0:	str	x21, [x11]
  41e7f4:	str	x21, [x22, #96]
  41e7f8:	bl	41d600 <wcrtomb@plt+0x18b10>
  41e7fc:	mov	x20, x0
  41e800:	mov	w21, w19
  41e804:	cbnz	x0, 41e734 <wcrtomb@plt+0x19c44>
  41e808:	b	41e94c <wcrtomb@plt+0x19e5c>
  41e80c:	cmp	w19, w21
  41e810:	b.eq	41e94c <wcrtomb@plt+0x19e5c>  // b.none
  41e814:	mov	w0, #0x60                  	// #96
  41e818:	bl	44a230 <argp_parse@@Base+0xfb84>
  41e81c:	mov	x20, x0
  41e820:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41e824:	add	x0, x0, #0xb36
  41e828:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e82c:	str	x0, [x20, #16]
  41e830:	bl	403f00 <strlen@plt>
  41e834:	ldp	w9, w11, [x22, #28]
  41e838:	ldrb	w10, [x22]
  41e83c:	ldr	x8, [x22, #96]
  41e840:	ldr	w12, [x23, #3668]
  41e844:	cmp	w9, #0x2
  41e848:	cset	w9, eq  // eq = none
  41e84c:	cmp	w10, #0x0
  41e850:	mov	w10, #0x40000000            	// #1073741824
  41e854:	csel	w10, wzr, w10, ne  // ne = any
  41e858:	bfi	w10, w9, #28, #1
  41e85c:	add	x9, x22, #0x68
  41e860:	cmp	x8, #0x0
  41e864:	stp	xzr, x8, [x20]
  41e868:	csel	x8, x9, x8, eq  // eq = none
  41e86c:	orr	w9, w10, w11
  41e870:	orr	w9, w9, w12
  41e874:	str	x0, [x20, #24]
  41e878:	str	w19, [x20, #40]
  41e87c:	strb	wzr, [x20, #36]
  41e880:	stp	xzr, xzr, [x20, #56]
  41e884:	str	xzr, [x20, #48]
  41e888:	str	w9, [x20, #32]
  41e88c:	str	x20, [x8]
  41e890:	str	x20, [x22, #96]
  41e894:	b	41e94c <wcrtomb@plt+0x19e5c>
  41e898:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e89c:	ldr	x19, [x8, #1712]
  41e8a0:	cbz	x19, 41e8bc <wcrtomb@plt+0x19dcc>
  41e8a4:	ldr	x0, [x19, #16]
  41e8a8:	bl	4046b0 <free@plt>
  41e8ac:	ldr	x0, [x19, #88]
  41e8b0:	bl	4046b0 <free@plt>
  41e8b4:	mov	x0, x19
  41e8b8:	bl	4046b0 <free@plt>
  41e8bc:	ldr	x20, [x20, #24]
  41e8c0:	mov	w0, #0x60                  	// #96
  41e8c4:	bl	44a230 <argp_parse@@Base+0xfb84>
  41e8c8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41e8cc:	add	x8, x8, #0xb36
  41e8d0:	cmp	x20, #0x0
  41e8d4:	mov	x19, x0
  41e8d8:	csel	x0, x8, x20, eq  // eq = none
  41e8dc:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e8e0:	str	x0, [x19, #16]
  41e8e4:	bl	403f00 <strlen@plt>
  41e8e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e8ec:	add	x8, x8, #0x658
  41e8f0:	mov	w9, #0x1                   	// #1
  41e8f4:	ldp	w10, w11, [x8, #24]
  41e8f8:	strb	w9, [x19, #36]
  41e8fc:	ldrb	w9, [x8]
  41e900:	str	x0, [x19, #24]
  41e904:	cmp	w11, #0x2
  41e908:	cset	w11, eq  // eq = none
  41e90c:	cmp	w9, #0x0
  41e910:	ldr	w9, [x8, #32]
  41e914:	str	w10, [x19, #40]
  41e918:	mov	w10, #0x40000000            	// #1073741824
  41e91c:	csel	w10, wzr, w10, ne  // ne = any
  41e920:	bfi	w10, w11, #28, #1
  41e924:	orr	w9, w10, w9
  41e928:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e92c:	ldr	w10, [x10, #3668]
  41e930:	str	xzr, [x19]
  41e934:	stp	xzr, xzr, [x19, #56]
  41e938:	str	xzr, [x19, #48]
  41e93c:	orr	w9, w9, w10
  41e940:	stp	x19, x19, [x8, #88]
  41e944:	str	w9, [x19, #32]
  41e948:	str	x19, [x8, #104]
  41e94c:	ldp	x20, x19, [sp, #64]
  41e950:	ldp	x22, x21, [sp, #48]
  41e954:	ldp	x24, x23, [sp, #32]
  41e958:	ldp	x26, x25, [sp, #16]
  41e95c:	ldp	x29, x30, [sp], #80
  41e960:	ret
  41e964:	stp	x29, x30, [sp, #-64]!
  41e968:	stp	x22, x21, [sp, #32]
  41e96c:	mov	x21, x0
  41e970:	mov	w0, #0x60                  	// #96
  41e974:	str	x23, [sp, #16]
  41e978:	stp	x20, x19, [sp, #48]
  41e97c:	mov	x29, sp
  41e980:	mov	x19, x3
  41e984:	mov	w20, w1
  41e988:	and	w23, w2, #0x1
  41e98c:	bl	44a230 <argp_parse@@Base+0xfb84>
  41e990:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41e994:	add	x8, x8, #0xb36
  41e998:	cmp	x21, #0x0
  41e99c:	mov	x22, x0
  41e9a0:	csel	x0, x8, x21, eq  // eq = none
  41e9a4:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41e9a8:	str	x0, [x22, #16]
  41e9ac:	bl	403f00 <strlen@plt>
  41e9b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e9b4:	add	x8, x8, #0x658
  41e9b8:	ldp	w12, w14, [x8, #28]
  41e9bc:	ldrb	w13, [x8]
  41e9c0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41e9c4:	ldr	x11, [x8, #96]
  41e9c8:	cmp	w12, #0x2
  41e9cc:	mov	w9, #0x40000000            	// #1073741824
  41e9d0:	ldr	w10, [x10, #3668]
  41e9d4:	cset	w12, eq  // eq = none
  41e9d8:	cmp	w13, #0x0
  41e9dc:	csel	w9, wzr, w9, ne  // ne = any
  41e9e0:	bfi	w9, w12, #28, #1
  41e9e4:	add	x13, x8, #0x68
  41e9e8:	cmp	x11, #0x0
  41e9ec:	orr	w9, w9, w14
  41e9f0:	stp	xzr, x11, [x22]
  41e9f4:	csel	x11, x13, x11, eq  // eq = none
  41e9f8:	orr	w9, w9, w10
  41e9fc:	str	x0, [x22, #24]
  41ea00:	str	w20, [x22, #40]
  41ea04:	stp	xzr, xzr, [x22, #48]
  41ea08:	str	x19, [x22, #64]
  41ea0c:	strb	w23, [x22, #36]
  41ea10:	str	w9, [x22, #32]
  41ea14:	str	x22, [x11]
  41ea18:	str	x22, [x8, #96]
  41ea1c:	mov	x0, x22
  41ea20:	ldp	x20, x19, [sp, #48]
  41ea24:	ldp	x22, x21, [sp, #32]
  41ea28:	ldr	x23, [sp, #16]
  41ea2c:	ldp	x29, x30, [sp], #64
  41ea30:	ret
  41ea34:	stp	x29, x30, [sp, #-48]!
  41ea38:	stp	x20, x19, [sp, #32]
  41ea3c:	mov	x20, x0
  41ea40:	mov	w0, #0x60                  	// #96
  41ea44:	stp	x22, x21, [sp, #16]
  41ea48:	mov	x29, sp
  41ea4c:	bl	44a230 <argp_parse@@Base+0xfb84>
  41ea50:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41ea54:	add	x8, x8, #0xb36
  41ea58:	cmp	x20, #0x0
  41ea5c:	mov	x19, x0
  41ea60:	csel	x0, x8, x20, eq  // eq = none
  41ea64:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41ea68:	str	x0, [x19, #16]
  41ea6c:	bl	403f00 <strlen@plt>
  41ea70:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ea74:	ldrb	w8, [x21, #3672]
  41ea78:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ea7c:	add	x22, x22, #0x6b8
  41ea80:	str	x0, [x19, #24]
  41ea84:	cbz	w8, 41eacc <wcrtomb@plt+0x19fdc>
  41ea88:	mov	x8, x22
  41ea8c:	ldr	x20, [x8, #8]!
  41ea90:	ldp	x10, x9, [x20]
  41ea94:	cmp	x9, #0x0
  41ea98:	csel	x8, x8, x9, eq  // eq = none
  41ea9c:	str	x10, [x8]
  41eaa0:	ldr	x8, [x20]
  41eaa4:	add	x10, x8, #0x8
  41eaa8:	cmp	x8, #0x0
  41eaac:	csel	x8, x22, x10, eq  // eq = none
  41eab0:	str	x9, [x8]
  41eab4:	ldr	x0, [x20, #16]
  41eab8:	bl	4046b0 <free@plt>
  41eabc:	ldr	x0, [x20, #88]
  41eac0:	bl	4046b0 <free@plt>
  41eac4:	mov	x0, x20
  41eac8:	bl	4046b0 <free@plt>
  41eacc:	ldp	x9, x8, [x22]
  41ead0:	str	x19, [x22, #8]
  41ead4:	stp	x8, xzr, [x19]
  41ead8:	cbnz	x9, 41eae4 <wcrtomb@plt+0x19ff4>
  41eadc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eae0:	str	x19, [x8, #1720]
  41eae4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eae8:	add	x8, x8, #0x658
  41eaec:	ldrb	w10, [x8]
  41eaf0:	ldp	w9, w8, [x8, #28]
  41eaf4:	str	wzr, [x19, #40]
  41eaf8:	stp	xzr, xzr, [x19, #56]
  41eafc:	str	xzr, [x19, #48]
  41eb00:	cmp	w9, #0x2
  41eb04:	cset	w9, eq  // eq = none
  41eb08:	cmp	w10, #0x0
  41eb0c:	mov	w10, #0x40000000            	// #1073741824
  41eb10:	csel	w10, wzr, w10, ne  // ne = any
  41eb14:	bfi	w10, w9, #28, #1
  41eb18:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eb1c:	ldr	w9, [x9, #3668]
  41eb20:	orr	w8, w10, w8
  41eb24:	mov	w10, #0x1                   	// #1
  41eb28:	strb	w10, [x19, #36]
  41eb2c:	orr	w8, w8, w9
  41eb30:	str	w8, [x19, #32]
  41eb34:	strb	w10, [x21, #3672]
  41eb38:	ldp	x20, x19, [sp, #32]
  41eb3c:	ldp	x22, x21, [sp, #16]
  41eb40:	ldp	x29, x30, [sp], #48
  41eb44:	ret
  41eb48:	ldp	x9, x8, [x0]
  41eb4c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eb50:	add	x10, x10, #0x6b8
  41eb54:	add	x11, x10, #0x8
  41eb58:	cmp	x8, #0x0
  41eb5c:	csel	x11, x11, x8, eq  // eq = none
  41eb60:	str	x9, [x11]
  41eb64:	ldr	x9, [x0]
  41eb68:	add	x11, x9, #0x8
  41eb6c:	cmp	x9, #0x0
  41eb70:	csel	x9, x10, x11, eq  // eq = none
  41eb74:	str	x8, [x9]
  41eb78:	ret
  41eb7c:	stp	x29, x30, [sp, #-64]!
  41eb80:	stp	x22, x21, [sp, #32]
  41eb84:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eb88:	stp	x20, x19, [sp, #48]
  41eb8c:	ldr	x20, [x21, #1728]
  41eb90:	str	x23, [sp, #16]
  41eb94:	mov	x19, x0
  41eb98:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eb9c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eba0:	mov	x29, sp
  41eba4:	cbz	x20, 41ec34 <wcrtomb@plt+0x1a144>
  41eba8:	ldr	x0, [x20, #16]
  41ebac:	ldrb	w8, [x0]
  41ebb0:	cbz	w8, 41ec3c <wcrtomb@plt+0x1a14c>
  41ebb4:	mov	w8, #0x1                   	// #1
  41ebb8:	tst	w8, #0xff
  41ebbc:	b.eq	41ebd0 <wcrtomb@plt+0x1a0e0>  // b.none
  41ebc0:	ldr	w2, [x20, #32]
  41ebc4:	mov	x1, x19
  41ebc8:	bl	43c4d4 <argp_parse@@Base+0x1e28>
  41ebcc:	tbnz	w0, #0, 41ebec <wcrtomb@plt+0x1a0fc>
  41ebd0:	ldr	x20, [x20]
  41ebd4:	cbz	x20, 41ebec <wcrtomb@plt+0x1a0fc>
  41ebd8:	ldr	x0, [x20, #16]
  41ebdc:	ldrb	w8, [x0]
  41ebe0:	tst	w8, #0xff
  41ebe4:	b.ne	41ebc0 <wcrtomb@plt+0x1a0d0>  // b.any
  41ebe8:	b	41ebd0 <wcrtomb@plt+0x1a0e0>
  41ebec:	ldrb	w8, [x22, #3672]
  41ebf0:	cbz	w8, 41ec04 <wcrtomb@plt+0x1a114>
  41ebf4:	ldr	x8, [x21, #1728]
  41ebf8:	cmp	x20, x8
  41ebfc:	b.ne	41ec08 <wcrtomb@plt+0x1a118>  // b.any
  41ec00:	strb	wzr, [x22, #3672]
  41ec04:	cbnz	x20, 41ec58 <wcrtomb@plt+0x1a168>
  41ec08:	ldrb	w8, [x23, #3632]
  41ec0c:	cbz	w8, 41ec2c <wcrtomb@plt+0x1a13c>
  41ec10:	ldr	x8, [x21, #1728]
  41ec14:	ldr	x8, [x8, #48]
  41ec18:	cbz	x8, 41ec2c <wcrtomb@plt+0x1a13c>
  41ec1c:	bl	41e610 <wcrtomb@plt+0x19b20>
  41ec20:	ldr	x20, [x21, #1728]
  41ec24:	ldr	x8, [x20, #48]
  41ec28:	cbz	x8, 41eba4 <wcrtomb@plt+0x1a0b4>
  41ec2c:	mov	w0, wzr
  41ec30:	b	41ecb8 <wcrtomb@plt+0x1a1c8>
  41ec34:	mov	w0, #0x1                   	// #1
  41ec38:	b	41ecb8 <wcrtomb@plt+0x1a1c8>
  41ec3c:	ldr	w0, [x20, #40]
  41ec40:	bl	41cd90 <wcrtomb@plt+0x182a0>
  41ec44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ec48:	add	x8, x8, #0x6b8
  41ec4c:	stp	xzr, xzr, [x8]
  41ec50:	mov	w0, #0x1                   	// #1
  41ec54:	b	41ecb8 <wcrtomb@plt+0x1a1c8>
  41ec58:	ldr	x8, [x20, #24]
  41ec5c:	ldrb	w9, [x19, x8]
  41ec60:	ldr	x8, [x20, #48]
  41ec64:	cmp	w9, #0x2f
  41ec68:	b.ne	41ec84 <wcrtomb@plt+0x1a194>  // b.any
  41ec6c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ec70:	ldr	w9, [x9, #3668]
  41ec74:	cbz	w9, 41ec84 <wcrtomb@plt+0x1a194>
  41ec78:	cbnz	x8, 41ec8c <wcrtomb@plt+0x1a19c>
  41ec7c:	mov	w8, #0x1                   	// #1
  41ec80:	b	41ec88 <wcrtomb@plt+0x1a198>
  41ec84:	add	x8, x8, #0x1
  41ec88:	str	x8, [x20, #48]
  41ec8c:	ldr	w0, [x20, #40]
  41ec90:	bl	41cd90 <wcrtomb@plt+0x182a0>
  41ec94:	ldr	x8, [x20, #48]
  41ec98:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ec9c:	ldr	x9, [x9, #3752]
  41eca0:	cmp	x8, #0x0
  41eca4:	cset	w10, ne  // ne = any
  41eca8:	cmp	x8, x9
  41ecac:	cset	w8, eq  // eq = none
  41ecb0:	cmp	x9, #0x0
  41ecb4:	csel	w0, w10, w8, eq  // eq = none
  41ecb8:	ldp	x20, x19, [sp, #48]
  41ecbc:	ldp	x22, x21, [sp, #32]
  41ecc0:	ldr	x23, [sp, #16]
  41ecc4:	ldp	x29, x30, [sp], #64
  41ecc8:	ret
  41eccc:	stp	x29, x30, [sp, #-32]!
  41ecd0:	stp	x20, x19, [sp, #16]
  41ecd4:	ldr	x19, [x0, #8]
  41ecd8:	mov	x8, x0
  41ecdc:	mov	w0, wzr
  41ece0:	mov	x29, sp
  41ece4:	cbz	x19, 41ed00 <wcrtomb@plt+0x1a210>
  41ece8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ecec:	ldr	x20, [x9, #3752]
  41ecf0:	cbz	x20, 41ed00 <wcrtomb@plt+0x1a210>
  41ecf4:	ldrb	w8, [x8, #16]
  41ecf8:	cbz	w8, 41ed0c <wcrtomb@plt+0x1a21c>
  41ecfc:	mov	w0, wzr
  41ed00:	ldp	x20, x19, [sp, #16]
  41ed04:	ldp	x29, x30, [sp], #32
  41ed08:	ret
  41ed0c:	mov	x0, x19
  41ed10:	bl	403f00 <strlen@plt>
  41ed14:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ed18:	ldr	x8, [x8, #1728]
  41ed1c:	cbnz	x8, 41ed38 <wcrtomb@plt+0x1a248>
  41ed20:	mov	w0, #0x1                   	// #1
  41ed24:	ldp	x20, x19, [sp, #16]
  41ed28:	ldp	x29, x30, [sp], #32
  41ed2c:	ret
  41ed30:	ldr	x8, [x8]
  41ed34:	cbz	x8, 41ed20 <wcrtomb@plt+0x1a230>
  41ed38:	ldr	x9, [x8, #16]
  41ed3c:	ldrb	w9, [x9]
  41ed40:	cbz	w9, 41ed50 <wcrtomb@plt+0x1a260>
  41ed44:	ldr	x9, [x8, #48]
  41ed48:	cmp	x9, x20
  41ed4c:	b.cc	41ed68 <wcrtomb@plt+0x1a278>  // b.lo, b.ul, b.last
  41ed50:	ldr	x9, [x8, #24]
  41ed54:	cmp	x0, x9
  41ed58:	b.cc	41ed30 <wcrtomb@plt+0x1a240>  // b.lo, b.ul, b.last
  41ed5c:	ldrb	w9, [x19, x9]
  41ed60:	cmp	w9, #0x2f
  41ed64:	b.ne	41ed30 <wcrtomb@plt+0x1a240>  // b.any
  41ed68:	mov	w0, wzr
  41ed6c:	ldp	x20, x19, [sp, #16]
  41ed70:	ldp	x29, x30, [sp], #32
  41ed74:	ret
  41ed78:	stp	x29, x30, [sp, #-80]!
  41ed7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ed80:	stp	x20, x19, [sp, #64]
  41ed84:	ldr	x20, [x8, #1728]
  41ed88:	stp	x24, x23, [sp, #32]
  41ed8c:	stp	x22, x21, [sp, #48]
  41ed90:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ed94:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ed98:	stp	x26, x25, [sp, #16]
  41ed9c:	mov	x29, sp
  41eda0:	cbz	x20, 41ee44 <wcrtomb@plt+0x1a354>
  41eda4:	adrp	x24, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41eda8:	adrp	x25, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41edac:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41edb0:	add	x24, x24, #0x437
  41edb4:	add	x25, x25, #0x41e
  41edb8:	mov	w26, #0x2                   	// #2
  41edbc:	b	41ee08 <wcrtomb@plt+0x1a318>
  41edc0:	ldr	x8, [x20, #48]
  41edc4:	mov	w2, #0x5                   	// #5
  41edc8:	mov	x0, xzr
  41edcc:	cmp	x8, #0x0
  41edd0:	csel	x1, x25, x24, eq  // eq = none
  41edd4:	bl	4048b0 <dcgettext@plt>
  41edd8:	ldr	x8, [x20, #16]
  41eddc:	mov	x19, x0
  41ede0:	mov	x0, x8
  41ede4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41ede8:	mov	x3, x0
  41edec:	mov	w0, wzr
  41edf0:	mov	w1, wzr
  41edf4:	mov	x2, x19
  41edf8:	bl	403f60 <error@plt>
  41edfc:	str	w26, [x23, #2352]
  41ee00:	ldr	x20, [x20]
  41ee04:	cbz	x20, 41ee44 <wcrtomb@plt+0x1a354>
  41ee08:	ldr	x9, [x21, #3752]
  41ee0c:	ldr	x8, [x20, #48]
  41ee10:	cbz	x9, 41ee20 <wcrtomb@plt+0x1a330>
  41ee14:	cmp	x8, x9
  41ee18:	b.cs	41ee00 <wcrtomb@plt+0x1a310>  // b.hs, b.nlast
  41ee1c:	b	41ee24 <wcrtomb@plt+0x1a334>
  41ee20:	cbnz	x8, 41ee00 <wcrtomb@plt+0x1a310>
  41ee24:	ldr	x0, [x20, #16]
  41ee28:	ldrb	w8, [x0]
  41ee2c:	cbz	w8, 41ee00 <wcrtomb@plt+0x1a310>
  41ee30:	bl	41eef0 <wcrtomb@plt+0x1a400>
  41ee34:	ldr	x8, [x22, #4000]
  41ee38:	cbz	x8, 41edc0 <wcrtomb@plt+0x1a2d0>
  41ee3c:	blr	x8
  41ee40:	b	41edc0 <wcrtomb@plt+0x1a2d0>
  41ee44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ee48:	ldrb	w8, [x8, #3632]
  41ee4c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ee50:	add	x9, x9, #0x6b8
  41ee54:	stp	xzr, xzr, [x9]
  41ee58:	cbz	w8, 41eed8 <wcrtomb@plt+0x1a3e8>
  41ee5c:	mov	w0, #0x1                   	// #1
  41ee60:	bl	41d600 <wcrtomb@plt+0x18b10>
  41ee64:	cbz	x0, 41eed8 <wcrtomb@plt+0x1a3e8>
  41ee68:	adrp	x19, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41ee6c:	add	x19, x19, #0x41e
  41ee70:	mov	w24, #0x2                   	// #2
  41ee74:	b	41eeb8 <wcrtomb@plt+0x1a3c8>
  41ee78:	mov	w2, #0x5                   	// #5
  41ee7c:	mov	x0, xzr
  41ee80:	mov	x1, x19
  41ee84:	bl	4048b0 <dcgettext@plt>
  41ee88:	mov	x21, x0
  41ee8c:	mov	x0, x20
  41ee90:	bl	448e5c <argp_parse@@Base+0xe7b0>
  41ee94:	mov	x3, x0
  41ee98:	mov	w0, wzr
  41ee9c:	mov	w1, wzr
  41eea0:	mov	x2, x21
  41eea4:	bl	403f60 <error@plt>
  41eea8:	mov	w0, #0x1                   	// #1
  41eeac:	str	w24, [x23, #2352]
  41eeb0:	bl	41d600 <wcrtomb@plt+0x18b10>
  41eeb4:	cbz	x0, 41eed8 <wcrtomb@plt+0x1a3e8>
  41eeb8:	ldr	x20, [x0, #24]
  41eebc:	cbz	x20, 41eed8 <wcrtomb@plt+0x1a3e8>
  41eec0:	mov	x0, x20
  41eec4:	bl	41eef0 <wcrtomb@plt+0x1a400>
  41eec8:	ldr	x8, [x22, #4000]
  41eecc:	cbz	x8, 41ee78 <wcrtomb@plt+0x1a388>
  41eed0:	blr	x8
  41eed4:	b	41ee78 <wcrtomb@plt+0x1a388>
  41eed8:	ldp	x20, x19, [sp, #64]
  41eedc:	ldp	x22, x21, [sp, #48]
  41eee0:	ldp	x24, x23, [sp, #32]
  41eee4:	ldp	x26, x25, [sp, #16]
  41eee8:	ldp	x29, x30, [sp], #80
  41eeec:	ret
  41eef0:	stp	x29, x30, [sp, #-32]!
  41eef4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41eef8:	ldr	w8, [x8, #1652]
  41eefc:	stp	x20, x19, [sp, #16]
  41ef00:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ef04:	mov	x29, sp
  41ef08:	cbz	w8, 41ef1c <wcrtomb@plt+0x1a42c>
  41ef0c:	ldrb	w0, [x19, #1628]
  41ef10:	ldp	x20, x19, [sp, #16]
  41ef14:	ldp	x29, x30, [sp], #32
  41ef18:	ret
  41ef1c:	mov	w1, wzr
  41ef20:	bl	43c218 <argp_parse@@Base+0x1b6c>
  41ef24:	tbz	w0, #0, 41ef0c <wcrtomb@plt+0x1a41c>
  41ef28:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ef2c:	ldr	x8, [x20, #4000]
  41ef30:	mov	w9, #0x1                   	// #1
  41ef34:	strb	w9, [x19, #1628]
  41ef38:	cbz	x8, 41ef40 <wcrtomb@plt+0x1a450>
  41ef3c:	blr	x8
  41ef40:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41ef44:	add	x1, x1, #0xea9
  41ef48:	mov	w2, #0x5                   	// #5
  41ef4c:	mov	x0, xzr
  41ef50:	bl	4048b0 <dcgettext@plt>
  41ef54:	mov	x2, x0
  41ef58:	mov	w0, wzr
  41ef5c:	mov	w1, wzr
  41ef60:	bl	403f60 <error@plt>
  41ef64:	ldr	x8, [x20, #4000]
  41ef68:	cbz	x8, 41ef70 <wcrtomb@plt+0x1a480>
  41ef6c:	blr	x8
  41ef70:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41ef74:	add	x1, x1, #0xed8
  41ef78:	mov	w2, #0x5                   	// #5
  41ef7c:	mov	x0, xzr
  41ef80:	bl	4048b0 <dcgettext@plt>
  41ef84:	mov	x2, x0
  41ef88:	mov	w0, wzr
  41ef8c:	mov	w1, wzr
  41ef90:	bl	403f60 <error@plt>
  41ef94:	ldrb	w0, [x19, #1628]
  41ef98:	ldp	x20, x19, [sp, #16]
  41ef9c:	ldp	x29, x30, [sp], #32
  41efa0:	ret
  41efa4:	stp	x29, x30, [sp, #-32]!
  41efa8:	str	x19, [sp, #16]
  41efac:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41efb0:	ldr	x8, [x19, #1728]
  41efb4:	mov	x29, sp
  41efb8:	cbz	x8, 41f078 <wcrtomb@plt+0x1a588>
  41efbc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41efc0:	ldr	x9, [x9, #3752]
  41efc4:	cbz	x9, 41f070 <wcrtomb@plt+0x1a580>
  41efc8:	ldr	x10, [x8, #48]
  41efcc:	cmp	x10, x9
  41efd0:	b.cs	41f078 <wcrtomb@plt+0x1a588>  // b.hs, b.nlast
  41efd4:	ldr	x8, [x8]
  41efd8:	cbnz	x8, 41efc8 <wcrtomb@plt+0x1a4d8>
  41efdc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41efe0:	ldr	w8, [x8, #3636]
  41efe4:	cbz	w8, 41f00c <wcrtomb@plt+0x1a51c>
  41efe8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41efec:	add	x1, x1, #0x464
  41eff0:	mov	w2, #0x5                   	// #5
  41eff4:	mov	x0, xzr
  41eff8:	bl	4048b0 <dcgettext@plt>
  41effc:	mov	x2, x0
  41f000:	mov	w0, wzr
  41f004:	mov	w1, wzr
  41f008:	bl	403f60 <error@plt>
  41f00c:	mov	w0, #0x1                   	// #1
  41f010:	bl	425e70 <wcrtomb@plt+0x21380>
  41f014:	ldr	x19, [x19, #1728]
  41f018:	cbz	x19, 41f030 <wcrtomb@plt+0x1a540>
  41f01c:	ldr	x0, [x19, #16]
  41f020:	bl	41eef0 <wcrtomb@plt+0x1a400>
  41f024:	cbnz	w0, 41f030 <wcrtomb@plt+0x1a540>
  41f028:	ldr	x19, [x19]
  41f02c:	cbnz	x19, 41f01c <wcrtomb@plt+0x1a52c>
  41f030:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f034:	ldrb	w8, [x8, #3632]
  41f038:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f03c:	add	x9, x9, #0x6b8
  41f040:	stp	xzr, xzr, [x9]
  41f044:	cbz	w8, 41f078 <wcrtomb@plt+0x1a588>
  41f048:	mov	w0, #0x1                   	// #1
  41f04c:	bl	41d600 <wcrtomb@plt+0x18b10>
  41f050:	cbz	x0, 41f078 <wcrtomb@plt+0x1a588>
  41f054:	ldr	x0, [x0, #24]
  41f058:	cbz	x0, 41f078 <wcrtomb@plt+0x1a588>
  41f05c:	bl	41eef0 <wcrtomb@plt+0x1a400>
  41f060:	cbz	w0, 41f048 <wcrtomb@plt+0x1a558>
  41f064:	b	41f078 <wcrtomb@plt+0x1a588>
  41f068:	ldr	x8, [x8]
  41f06c:	cbz	x8, 41efdc <wcrtomb@plt+0x1a4ec>
  41f070:	ldr	x9, [x8, #48]
  41f074:	cbz	x9, 41f068 <wcrtomb@plt+0x1a578>
  41f078:	ldr	x19, [sp, #16]
  41f07c:	ldp	x29, x30, [sp], #32
  41f080:	ret
  41f084:	stp	x29, x30, [sp, #-96]!
  41f088:	stp	x28, x27, [sp, #16]
  41f08c:	stp	x26, x25, [sp, #32]
  41f090:	stp	x24, x23, [sp, #48]
  41f094:	stp	x22, x21, [sp, #64]
  41f098:	stp	x20, x19, [sp, #80]
  41f09c:	mov	x29, sp
  41f0a0:	sub	sp, sp, #0x1b0
  41f0a4:	bl	41e610 <wcrtomb@plt+0x19b20>
  41f0a8:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f0ac:	ldr	x8, [x23, #1728]
  41f0b0:	cbz	x8, 41f0e0 <wcrtomb@plt+0x1a5f0>
  41f0b4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f0b8:	ldr	x8, [x24, #3824]
  41f0bc:	cbnz	x8, 41f178 <wcrtomb@plt+0x1a688>
  41f0c0:	ldr	x20, [x23, #1728]
  41f0c4:	cbz	x20, 41f1a0 <wcrtomb@plt+0x1a6b0>
  41f0c8:	add	x8, sp, #0x8
  41f0cc:	mov	w19, wzr
  41f0d0:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41f0d4:	add	x21, x8, #0x58
  41f0d8:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f0dc:	b	41f1c8 <wcrtomb@plt+0x1a6d8>
  41f0e0:	mov	w0, #0x60                  	// #96
  41f0e4:	bl	44a230 <argp_parse@@Base+0xfb84>
  41f0e8:	mov	x19, x0
  41f0ec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41f0f0:	add	x0, x0, #0xfda
  41f0f4:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41f0f8:	str	x0, [x19, #16]
  41f0fc:	bl	403f00 <strlen@plt>
  41f100:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f104:	add	x8, x8, #0x658
  41f108:	ldp	w9, w12, [x8, #28]
  41f10c:	ldrb	w11, [x8]
  41f110:	mov	w10, #0x40000000            	// #1073741824
  41f114:	str	x0, [x19, #24]
  41f118:	cmp	w9, #0x2
  41f11c:	cset	w9, eq  // eq = none
  41f120:	cmp	w11, #0x0
  41f124:	csel	w10, wzr, w10, ne  // ne = any
  41f128:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f12c:	bfi	w10, w9, #28, #1
  41f130:	ldr	x9, [x8, #96]
  41f134:	ldr	w11, [x11, #3668]
  41f138:	orr	w10, w10, w12
  41f13c:	add	x12, x8, #0x68
  41f140:	cmp	x9, #0x0
  41f144:	csel	x12, x12, x9, eq  // eq = none
  41f148:	stp	xzr, x9, [x19]
  41f14c:	orr	w9, w10, w11
  41f150:	str	wzr, [x19, #40]
  41f154:	strb	wzr, [x19, #36]
  41f158:	stp	xzr, xzr, [x19, #56]
  41f15c:	str	xzr, [x19, #48]
  41f160:	str	w9, [x19, #32]
  41f164:	str	x19, [x12]
  41f168:	str	x19, [x8, #96]
  41f16c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f170:	ldr	x8, [x24, #3824]
  41f174:	cbz	x8, 41f0c0 <wcrtomb@plt+0x1a5d0>
  41f178:	bl	41ca84 <wcrtomb@plt+0x17f94>
  41f17c:	cbz	w0, 41f194 <wcrtomb@plt+0x1a6a4>
  41f180:	cmp	w0, #0x1
  41f184:	b.ne	41f4c4 <wcrtomb@plt+0x1a9d4>  // b.any
  41f188:	ldr	x8, [x23, #1728]
  41f18c:	ldr	w8, [x8, #40]
  41f190:	cbz	w8, 41f4e0 <wcrtomb@plt+0x1a9f0>
  41f194:	bl	4166d8 <wcrtomb@plt+0x11be8>
  41f198:	ldr	x20, [x23, #1728]
  41f19c:	cbnz	x20, 41f0c8 <wcrtomb@plt+0x1a5d8>
  41f1a0:	mov	x0, xzr
  41f1a4:	mov	w19, wzr
  41f1a8:	b	41f294 <wcrtomb@plt+0x1a7a4>
  41f1ac:	ldr	x0, [x20, #16]
  41f1b0:	bl	41cf54 <wcrtomb@plt+0x18464>
  41f1b4:	add	x0, sp, #0x8
  41f1b8:	bl	425f4c <wcrtomb@plt+0x2145c>
  41f1bc:	ldr	x20, [x20]
  41f1c0:	add	w19, w19, #0x1
  41f1c4:	cbz	x20, 41f290 <wcrtomb@plt+0x1a7a0>
  41f1c8:	ldr	x8, [x20, #48]
  41f1cc:	cbnz	x8, 41f1bc <wcrtomb@plt+0x1a6cc>
  41f1d0:	ldr	x8, [x20, #56]
  41f1d4:	cbnz	x8, 41f1bc <wcrtomb@plt+0x1a6cc>
  41f1d8:	ldrb	w8, [x20, #35]
  41f1dc:	tbnz	w8, #4, 41f1bc <wcrtomb@plt+0x1a6cc>
  41f1e0:	ldr	w0, [x20, #40]
  41f1e4:	bl	41cd90 <wcrtomb@plt+0x182a0>
  41f1e8:	ldr	x8, [x20, #16]
  41f1ec:	ldrb	w8, [x8]
  41f1f0:	cbz	w8, 41f1bc <wcrtomb@plt+0x1a6cc>
  41f1f4:	add	x0, sp, #0x8
  41f1f8:	bl	425e88 <wcrtomb@plt+0x21398>
  41f1fc:	ldr	x0, [x20, #16]
  41f200:	mov	x1, x21
  41f204:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  41f208:	cbz	w0, 41f218 <wcrtomb@plt+0x1a728>
  41f20c:	ldr	x0, [x20, #16]
  41f210:	bl	41d008 <wcrtomb@plt+0x18518>
  41f214:	b	41f1bc <wcrtomb@plt+0x1a6cc>
  41f218:	ldr	w8, [sp, #112]
  41f21c:	and	w8, w8, #0xf000
  41f220:	cmp	w8, #0x4, lsl #12
  41f224:	b.ne	41f1b4 <wcrtomb@plt+0x1a6c4>  // b.any
  41f228:	ldr	w8, [x25, #3700]
  41f22c:	ldr	w0, [x22, #1864]
  41f230:	ldr	x1, [x20, #16]
  41f234:	orr	w2, w8, #0x4000
  41f238:	bl	4049a0 <openat@plt>
  41f23c:	tbnz	w0, #31, 41f1ac <wcrtomb@plt+0x1a6bc>
  41f240:	mov	w1, w0
  41f244:	str	w0, [sp, #416]
  41f248:	mov	w0, wzr
  41f24c:	mov	x2, x21
  41f250:	bl	404890 <__fxstat@plt>
  41f254:	ldr	x8, [x20, #16]
  41f258:	cbz	w0, 41f268 <wcrtomb@plt+0x1a778>
  41f25c:	mov	x0, x8
  41f260:	bl	41d008 <wcrtomb@plt+0x18518>
  41f264:	b	41f1b4 <wcrtomb@plt+0x1a6c4>
  41f268:	mov	x0, x8
  41f26c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41f270:	str	x0, [sp, #8]
  41f274:	ldr	x8, [x20, #48]
  41f278:	add	x0, sp, #0x8
  41f27c:	mov	x1, x20
  41f280:	add	x8, x8, #0x1
  41f284:	str	x8, [x20, #48]
  41f288:	bl	41f51c <wcrtomb@plt+0x1aa2c>
  41f28c:	b	41f1b4 <wcrtomb@plt+0x1a6c4>
  41f290:	ldr	x0, [x23, #1728]
  41f294:	adrp	x2, 41f000 <wcrtomb@plt+0x1a510>
  41f298:	add	x2, x2, #0x7a8
  41f29c:	mov	w1, w19
  41f2a0:	bl	41fdc0 <wcrtomb@plt+0x1b2d0>
  41f2a4:	cbz	x0, 41f2c4 <wcrtomb@plt+0x1a7d4>
  41f2a8:	mov	x8, xzr
  41f2ac:	mov	x9, x0
  41f2b0:	ldr	x10, [x9]
  41f2b4:	str	x8, [x9, #8]
  41f2b8:	mov	x8, x9
  41f2bc:	mov	x9, x10
  41f2c0:	cbnz	x10, 41f2b0 <wcrtomb@plt+0x1a7c0>
  41f2c4:	adrp	x2, 41f000 <wcrtomb@plt+0x1a510>
  41f2c8:	adrp	x3, 41f000 <wcrtomb@plt+0x1a510>
  41f2cc:	str	x0, [x23, #1728]
  41f2d0:	add	x2, x2, #0x7b4
  41f2d4:	add	x3, x3, #0x7bc
  41f2d8:	mov	x0, xzr
  41f2dc:	mov	x1, xzr
  41f2e0:	mov	x4, xzr
  41f2e4:	bl	43eb5c <argp_parse@@Base+0x44b0>
  41f2e8:	ldr	x21, [x23, #1728]
  41f2ec:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f2f0:	mov	x19, x0
  41f2f4:	add	x25, x25, #0x6b8
  41f2f8:	cbz	x21, 41f420 <wcrtomb@plt+0x1a930>
  41f2fc:	mov	x27, xzr
  41f300:	mov	w20, wzr
  41f304:	b	41f350 <wcrtomb@plt+0x1a860>
  41f308:	ldp	x9, x8, [x21]
  41f30c:	add	x10, x25, #0x8
  41f310:	cmp	x8, #0x0
  41f314:	csel	x10, x10, x8, eq  // eq = none
  41f318:	str	x9, [x10]
  41f31c:	ldr	x9, [x21]
  41f320:	add	x10, x9, #0x8
  41f324:	cmp	x9, #0x0
  41f328:	csel	x9, x25, x10, eq  // eq = none
  41f32c:	str	x8, [x9]
  41f330:	ldr	x0, [x21, #16]
  41f334:	bl	4046b0 <free@plt>
  41f338:	ldr	x0, [x21, #88]
  41f33c:	bl	4046b0 <free@plt>
  41f340:	mov	x0, x21
  41f344:	bl	4046b0 <free@plt>
  41f348:	mov	x21, x26
  41f34c:	cbz	x26, 41f428 <wcrtomb@plt+0x1a938>
  41f350:	ldr	w0, [x21, #40]
  41f354:	ldr	x1, [x21, #16]
  41f358:	ldr	x26, [x21]
  41f35c:	bl	41b9e0 <wcrtomb@plt+0x16ef0>
  41f360:	str	x0, [x21, #88]
  41f364:	cbz	x27, 41f3f8 <wcrtomb@plt+0x1a908>
  41f368:	mov	x0, x19
  41f36c:	mov	x1, x21
  41f370:	bl	43e854 <argp_parse@@Base+0x41a8>
  41f374:	cbz	x0, 41f3f8 <wcrtomb@plt+0x1a908>
  41f378:	ldr	x8, [x21, #64]
  41f37c:	mov	x22, x0
  41f380:	cbz	x8, 41f398 <wcrtomb@plt+0x1a8a8>
  41f384:	ldr	x0, [x21, #72]
  41f388:	cbz	x0, 41f308 <wcrtomb@plt+0x1a818>
  41f38c:	ldp	x1, x2, [x22, #16]
  41f390:	bl	41f7e0 <wcrtomb@plt+0x1acf0>
  41f394:	b	41f308 <wcrtomb@plt+0x1a818>
  41f398:	ldr	x0, [x22, #72]
  41f39c:	cbz	x0, 41f3a8 <wcrtomb@plt+0x1a8b8>
  41f3a0:	ldp	x1, x2, [x21, #16]
  41f3a4:	bl	41f7e0 <wcrtomb@plt+0x1acf0>
  41f3a8:	mov	x0, x19
  41f3ac:	mov	x1, x21
  41f3b0:	bl	43f630 <argp_parse@@Base+0x4f84>
  41f3b4:	ldp	x9, x8, [x22]
  41f3b8:	add	x10, x25, #0x8
  41f3bc:	cmp	x8, #0x0
  41f3c0:	csel	x10, x10, x8, eq  // eq = none
  41f3c4:	str	x9, [x10]
  41f3c8:	ldr	x9, [x22]
  41f3cc:	add	x10, x9, #0x8
  41f3d0:	cmp	x9, #0x0
  41f3d4:	csel	x9, x25, x10, eq  // eq = none
  41f3d8:	str	x8, [x9]
  41f3dc:	ldr	x0, [x22, #16]
  41f3e0:	bl	4046b0 <free@plt>
  41f3e4:	ldr	x0, [x22, #88]
  41f3e8:	bl	4046b0 <free@plt>
  41f3ec:	mov	x0, x22
  41f3f0:	bl	4046b0 <free@plt>
  41f3f4:	sub	w20, w20, #0x1
  41f3f8:	mov	x0, x19
  41f3fc:	mov	x1, x21
  41f400:	str	xzr, [x21, #48]
  41f404:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  41f408:	cbz	x0, 41f4c0 <wcrtomb@plt+0x1a9d0>
  41f40c:	add	w20, w20, #0x1
  41f410:	mov	x27, x21
  41f414:	mov	x21, x26
  41f418:	cbnz	x26, 41f350 <wcrtomb@plt+0x1a860>
  41f41c:	b	41f428 <wcrtomb@plt+0x1a938>
  41f420:	mov	w20, wzr
  41f424:	mov	x27, xzr
  41f428:	mov	x0, x19
  41f42c:	str	x27, [x25]
  41f430:	bl	43ee08 <argp_parse@@Base+0x475c>
  41f434:	ldr	x0, [x25, #8]
  41f438:	adrp	x2, 41f000 <wcrtomb@plt+0x1a510>
  41f43c:	add	x2, x2, #0x878
  41f440:	mov	w1, w20
  41f444:	bl	41fdc0 <wcrtomb@plt+0x1b2d0>
  41f448:	cbz	x0, 41f490 <wcrtomb@plt+0x1a9a0>
  41f44c:	mov	x8, xzr
  41f450:	mov	x9, x0
  41f454:	ldr	x10, [x9]
  41f458:	str	x8, [x9, #8]
  41f45c:	mov	x8, x9
  41f460:	mov	x9, x10
  41f464:	cbnz	x10, 41f454 <wcrtomb@plt+0x1a964>
  41f468:	ldr	x8, [x24, #3824]
  41f46c:	str	x0, [x23, #1728]
  41f470:	cbz	x8, 41f4a0 <wcrtomb@plt+0x1a9b0>
  41f474:	cbz	x0, 41f4a0 <wcrtomb@plt+0x1a9b0>
  41f478:	ldr	x8, [x0, #16]
  41f47c:	ldrb	w8, [x8]
  41f480:	cbnz	w8, 41f498 <wcrtomb@plt+0x1a9a8>
  41f484:	ldr	x0, [x0]
  41f488:	cbnz	x0, 41f478 <wcrtomb@plt+0x1a988>
  41f48c:	b	41f4a0 <wcrtomb@plt+0x1a9b0>
  41f490:	str	x0, [x23, #1728]
  41f494:	b	41f4a0 <wcrtomb@plt+0x1a9b0>
  41f498:	ldr	x0, [x0, #56]
  41f49c:	bl	4161ec <wcrtomb@plt+0x116fc>
  41f4a0:	add	sp, sp, #0x1b0
  41f4a4:	ldp	x20, x19, [sp, #80]
  41f4a8:	ldp	x22, x21, [sp, #64]
  41f4ac:	ldp	x24, x23, [sp, #48]
  41f4b0:	ldp	x26, x25, [sp, #32]
  41f4b4:	ldp	x28, x27, [sp, #16]
  41f4b8:	ldp	x29, x30, [sp], #96
  41f4bc:	ret
  41f4c0:	bl	40eb80 <wcrtomb@plt+0xa090>
  41f4c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f4c8:	ldr	x8, [x8, #4000]
  41f4cc:	cbz	x8, 41f4d4 <wcrtomb@plt+0x1a9e4>
  41f4d0:	blr	x8
  41f4d4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41f4d8:	add	x1, x1, #0x4c5
  41f4dc:	b	41f4f8 <wcrtomb@plt+0x1aa08>
  41f4e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f4e4:	ldr	x8, [x8, #4000]
  41f4e8:	cbz	x8, 41f4f0 <wcrtomb@plt+0x1aa00>
  41f4ec:	blr	x8
  41f4f0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  41f4f4:	add	x1, x1, #0x47b
  41f4f8:	mov	w2, #0x5                   	// #5
  41f4fc:	mov	x0, xzr
  41f500:	bl	4048b0 <dcgettext@plt>
  41f504:	mov	x2, x0
  41f508:	mov	w0, wzr
  41f50c:	mov	w1, wzr
  41f510:	bl	403f60 <error@plt>
  41f514:	mov	w0, #0x2                   	// #2
  41f518:	bl	42484c <wcrtomb@plt+0x1fd5c>
  41f51c:	stp	x29, x30, [sp, #-96]!
  41f520:	stp	x28, x27, [sp, #16]
  41f524:	stp	x26, x25, [sp, #32]
  41f528:	stp	x24, x23, [sp, #48]
  41f52c:	stp	x22, x21, [sp, #64]
  41f530:	stp	x20, x19, [sp, #80]
  41f534:	mov	x29, sp
  41f538:	sub	sp, sp, #0x1d0
  41f53c:	mov	x19, x1
  41f540:	mov	x20, x0
  41f544:	bl	415498 <wcrtomb@plt+0x109a8>
  41f548:	str	x0, [x19, #56]
  41f54c:	bl	4161a4 <wcrtomb@plt+0x116b4>
  41f550:	cbz	x0, 41f784 <wcrtomb@plt+0x1ac94>
  41f554:	ldr	x27, [x19, #24]
  41f558:	mov	w9, #0x64                  	// #100
  41f55c:	mov	x21, x0
  41f560:	add	x8, x27, #0x64
  41f564:	cmp	x27, #0x64
  41f568:	csel	x28, x9, x8, cc  // cc = lo, ul, last
  41f56c:	add	x0, x28, #0x1
  41f570:	bl	44a010 <argp_parse@@Base+0xf964>
  41f574:	ldr	w8, [x19, #40]
  41f578:	ldr	x1, [x19, #16]
  41f57c:	mov	x22, x0
  41f580:	str	w8, [sp, #12]
  41f584:	bl	4047f0 <strcpy@plt>
  41f588:	add	x8, x27, x0
  41f58c:	ldurb	w8, [x8, #-1]
  41f590:	cmp	w8, #0x2f
  41f594:	b.eq	41f5a8 <wcrtomb@plt+0x1aab8>  // b.none
  41f598:	add	x8, x27, #0x1
  41f59c:	mov	w9, #0x2f                  	// #47
  41f5a0:	strh	w9, [x22, x27]
  41f5a4:	mov	x27, x8
  41f5a8:	ldrb	w24, [x21]
  41f5ac:	str	x19, [sp, #16]
  41f5b0:	cbz	w24, 41f770 <wcrtomb@plt+0x1ac80>
  41f5b4:	add	x8, sp, #0x20
  41f5b8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f5bc:	mov	x23, xzr
  41f5c0:	add	x19, x19, #0x658
  41f5c4:	add	x8, x8, #0x58
  41f5c8:	str	xzr, [sp, #24]
  41f5cc:	str	x8, [sp]
  41f5d0:	b	41f600 <wcrtomb@plt+0x1ab10>
  41f5d4:	neg	w23, w8
  41f5d8:	bl	4049c0 <__errno_location@plt>
  41f5dc:	str	w23, [x0]
  41f5e0:	mov	x0, x22
  41f5e4:	bl	41cf54 <wcrtomb@plt+0x18464>
  41f5e8:	add	x0, sp, #0x20
  41f5ec:	bl	425f4c <wcrtomb@plt+0x2145c>
  41f5f0:	mov	x23, x25
  41f5f4:	add	x21, x24, x21
  41f5f8:	ldrb	w24, [x21, #1]!
  41f5fc:	cbz	w24, 41f774 <wcrtomb@plt+0x1ac84>
  41f600:	mov	x0, x21
  41f604:	bl	403f00 <strlen@plt>
  41f608:	and	w8, w24, #0xff
  41f60c:	cmp	w8, #0x44
  41f610:	mov	x24, x0
  41f614:	b.ne	41f5f4 <wcrtomb@plt+0x1ab04>  // b.any
  41f618:	add	x8, x24, x27
  41f61c:	cmp	x28, x8
  41f620:	b.hi	41f644 <wcrtomb@plt+0x1ab54>  // b.pmore
  41f624:	lsl	x28, x28, #1
  41f628:	cbz	x28, 41f7a4 <wcrtomb@plt+0x1acb4>
  41f62c:	cmp	x28, x8
  41f630:	b.ls	41f624 <wcrtomb@plt+0x1ab34>  // b.plast
  41f634:	orr	x1, x28, #0x1
  41f638:	mov	x0, x22
  41f63c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  41f640:	mov	x22, x0
  41f644:	add	x26, x21, #0x1
  41f648:	add	x0, x22, x27
  41f64c:	mov	x1, x26
  41f650:	bl	4047f0 <strcpy@plt>
  41f654:	mov	w0, #0x60                  	// #96
  41f658:	bl	44a230 <argp_parse@@Base+0xfb84>
  41f65c:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  41f660:	cmp	x22, #0x0
  41f664:	add	x8, x8, #0xb36
  41f668:	mov	x25, x0
  41f66c:	csel	x0, x8, x22, eq  // eq = none
  41f670:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41f674:	str	x0, [x25, #16]
  41f678:	bl	403f00 <strlen@plt>
  41f67c:	ldp	w8, w11, [x19, #28]
  41f680:	ldrb	w10, [x19]
  41f684:	ldr	w12, [sp, #12]
  41f688:	ldr	x9, [x19, #96]
  41f68c:	cmp	w8, #0x2
  41f690:	cset	w8, eq  // eq = none
  41f694:	cmp	w10, #0x0
  41f698:	mov	w10, #0x40000000            	// #1073741824
  41f69c:	csel	w10, wzr, w10, ne  // ne = any
  41f6a0:	bfi	w10, w8, #28, #1
  41f6a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f6a8:	ldr	w8, [x8, #3668]
  41f6ac:	orr	w10, w10, w11
  41f6b0:	str	w12, [x25, #40]
  41f6b4:	orr	w8, w10, w8
  41f6b8:	str	w8, [x25, #32]
  41f6bc:	ldp	x12, x8, [sp, #16]
  41f6c0:	add	x11, x19, #0x68
  41f6c4:	cmp	x9, #0x0
  41f6c8:	csel	x11, x11, x9, eq  // eq = none
  41f6cc:	str	x0, [x25, #24]
  41f6d0:	stp	xzr, xzr, [x25, #48]
  41f6d4:	str	x12, [x25, #64]
  41f6d8:	strb	wzr, [x25, #36]
  41f6dc:	stp	xzr, x9, [x25]
  41f6e0:	str	x25, [x11]
  41f6e4:	str	x25, [x19, #96]
  41f6e8:	cbz	x8, 41f6f4 <wcrtomb@plt+0x1ac04>
  41f6ec:	str	x25, [x23, #80]
  41f6f0:	b	41f6f8 <wcrtomb@plt+0x1ac08>
  41f6f4:	str	x25, [sp, #24]
  41f6f8:	add	x0, sp, #0x20
  41f6fc:	bl	425e88 <wcrtomb@plt+0x21398>
  41f700:	str	x20, [sp, #424]
  41f704:	ldr	w8, [x20, #408]
  41f708:	tbnz	w8, #31, 41f5d4 <wcrtomb@plt+0x1aae4>
  41f70c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f710:	ldr	w8, [x8, #3700]
  41f714:	mov	x0, x20
  41f718:	mov	x1, x26
  41f71c:	orr	w2, w8, #0x4000
  41f720:	bl	40a7ac <wcrtomb@plt+0x5cbc>
  41f724:	tbnz	w0, #31, 41f5e0 <wcrtomb@plt+0x1aaf0>
  41f728:	ldr	x2, [sp]
  41f72c:	mov	w1, w0
  41f730:	str	w0, [sp, #440]
  41f734:	mov	w0, wzr
  41f738:	bl	404890 <__fxstat@plt>
  41f73c:	cbz	w0, 41f74c <wcrtomb@plt+0x1ac5c>
  41f740:	mov	x0, x22
  41f744:	bl	41d008 <wcrtomb@plt+0x18518>
  41f748:	b	41f5e8 <wcrtomb@plt+0x1aaf8>
  41f74c:	mov	x0, x22
  41f750:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  41f754:	str	x0, [sp, #32]
  41f758:	add	x0, sp, #0x20
  41f75c:	mov	x1, x25
  41f760:	bl	41f51c <wcrtomb@plt+0x1aa2c>
  41f764:	add	x0, sp, #0x20
  41f768:	bl	40c2fc <wcrtomb@plt+0x780c>
  41f76c:	b	41f5e8 <wcrtomb@plt+0x1aaf8>
  41f770:	str	xzr, [sp, #24]
  41f774:	mov	x0, x22
  41f778:	bl	4046b0 <free@plt>
  41f77c:	ldp	x8, x9, [sp, #16]
  41f780:	str	x9, [x8, #72]
  41f784:	add	sp, sp, #0x1d0
  41f788:	ldp	x20, x19, [sp, #80]
  41f78c:	ldp	x22, x21, [sp, #64]
  41f790:	ldp	x24, x23, [sp, #48]
  41f794:	ldp	x26, x25, [sp, #32]
  41f798:	ldp	x28, x27, [sp, #16]
  41f79c:	ldp	x29, x30, [sp], #96
  41f7a0:	ret
  41f7a4:	bl	40eb80 <wcrtomb@plt+0xa090>
  41f7a8:	ldr	x0, [x0, #16]
  41f7ac:	ldr	x1, [x1, #16]
  41f7b0:	b	404610 <strcmp@plt>
  41f7b4:	ldr	x0, [x0, #88]
  41f7b8:	b	43eb04 <argp_parse@@Base+0x4458>
  41f7bc:	stp	x29, x30, [sp, #-16]!
  41f7c0:	ldr	x0, [x0, #88]
  41f7c4:	ldr	x1, [x1, #88]
  41f7c8:	mov	x29, sp
  41f7cc:	bl	404610 <strcmp@plt>
  41f7d0:	cmp	w0, #0x0
  41f7d4:	cset	w0, eq  // eq = none
  41f7d8:	ldp	x29, x30, [sp], #16
  41f7dc:	ret
  41f7e0:	stp	x29, x30, [sp, #-64]!
  41f7e4:	stp	x24, x23, [sp, #16]
  41f7e8:	stp	x22, x21, [sp, #32]
  41f7ec:	stp	x20, x19, [sp, #48]
  41f7f0:	mov	x29, sp
  41f7f4:	cbz	x0, 41f864 <wcrtomb@plt+0x1ad74>
  41f7f8:	ldr	x8, [x0, #64]
  41f7fc:	mov	x19, x2
  41f800:	mov	x20, x1
  41f804:	mov	x21, x0
  41f808:	ldr	x22, [x8, #24]
  41f80c:	ldr	x8, [x21, #24]
  41f810:	sub	x8, x8, x22
  41f814:	add	x24, x8, x19
  41f818:	add	x0, x24, #0x1
  41f81c:	bl	44a010 <argp_parse@@Base+0xf964>
  41f820:	mov	x1, x20
  41f824:	mov	x23, x0
  41f828:	bl	4047f0 <strcpy@plt>
  41f82c:	ldr	x8, [x21, #16]
  41f830:	add	x1, x8, x22
  41f834:	bl	404300 <strcat@plt>
  41f838:	ldr	x0, [x21, #16]
  41f83c:	bl	4046b0 <free@plt>
  41f840:	ldp	x0, x8, [x21, #56]
  41f844:	stp	x23, x24, [x21, #16]
  41f848:	mov	x2, x22
  41f84c:	mov	x3, x20
  41f850:	ldr	x1, [x8, #16]
  41f854:	mov	x4, x19
  41f858:	bl	415374 <wcrtomb@plt+0x10884>
  41f85c:	ldr	x21, [x21, #80]
  41f860:	cbnz	x21, 41f80c <wcrtomb@plt+0x1ad1c>
  41f864:	ldp	x20, x19, [sp, #48]
  41f868:	ldp	x22, x21, [sp, #32]
  41f86c:	ldp	x24, x23, [sp, #16]
  41f870:	ldp	x29, x30, [sp], #64
  41f874:	ret
  41f878:	ldr	x8, [x1, #48]
  41f87c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f880:	ldr	x9, [x9, #3752]
  41f884:	ldr	x10, [x0, #48]
  41f888:	cmp	x8, #0x0
  41f88c:	cset	w11, ne  // ne = any
  41f890:	cmp	x8, x9
  41f894:	cset	w8, cs  // cs = hs, nlast
  41f898:	cmp	x10, #0x0
  41f89c:	cset	w12, ne  // ne = any
  41f8a0:	cmp	x10, x9
  41f8a4:	cset	w10, cs  // cs = hs, nlast
  41f8a8:	cmp	x9, #0x0
  41f8ac:	csel	w8, w11, w8, eq  // eq = none
  41f8b0:	csel	w9, w12, w10, eq  // eq = none
  41f8b4:	subs	w8, w8, w9
  41f8b8:	b.eq	41f8c4 <wcrtomb@plt+0x1add4>  // b.none
  41f8bc:	mov	w0, w8
  41f8c0:	ret
  41f8c4:	ldr	x0, [x0, #16]
  41f8c8:	ldr	x1, [x1, #16]
  41f8cc:	b	404610 <strcmp@plt>
  41f8d0:	stp	x29, x30, [sp, #-48]!
  41f8d4:	stp	x22, x21, [sp, #16]
  41f8d8:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f8dc:	stp	x20, x19, [sp, #32]
  41f8e0:	ldr	x19, [x21, #1728]
  41f8e4:	mov	x20, x0
  41f8e8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f8ec:	mov	x29, sp
  41f8f0:	cbnz	x19, 41f900 <wcrtomb@plt+0x1ae10>
  41f8f4:	b	41f94c <wcrtomb@plt+0x1ae5c>
  41f8f8:	ldr	x19, [x19]
  41f8fc:	cbz	x19, 41f920 <wcrtomb@plt+0x1ae30>
  41f900:	ldr	x0, [x19, #16]
  41f904:	ldrb	w8, [x0]
  41f908:	cbz	w8, 41f8f8 <wcrtomb@plt+0x1ae08>
  41f90c:	ldr	w2, [x19, #32]
  41f910:	mov	x1, x20
  41f914:	bl	43c4d4 <argp_parse@@Base+0x1e28>
  41f918:	tbz	w0, #0, 41f8f8 <wcrtomb@plt+0x1ae08>
  41f91c:	b	41f94c <wcrtomb@plt+0x1ae5c>
  41f920:	ldrb	w8, [x22, #3632]
  41f924:	cbz	w8, 41f94c <wcrtomb@plt+0x1ae5c>
  41f928:	ldr	x8, [x21, #1728]
  41f92c:	cbz	x8, 41f94c <wcrtomb@plt+0x1ae5c>
  41f930:	ldr	x8, [x8, #48]
  41f934:	cbz	x8, 41f948 <wcrtomb@plt+0x1ae58>
  41f938:	bl	41e610 <wcrtomb@plt+0x19b20>
  41f93c:	ldr	x19, [x21, #1728]
  41f940:	ldr	x8, [x19, #48]
  41f944:	cbz	x8, 41f8f0 <wcrtomb@plt+0x1ae00>
  41f948:	mov	x19, xzr
  41f94c:	mov	x0, x19
  41f950:	ldp	x20, x19, [sp, #32]
  41f954:	ldp	x22, x21, [sp, #16]
  41f958:	ldp	x29, x30, [sp], #48
  41f95c:	ret
  41f960:	stp	x29, x30, [sp, #-32]!
  41f964:	str	x19, [sp, #16]
  41f968:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f96c:	ldr	x8, [x19, #3008]
  41f970:	mov	x29, sp
  41f974:	cbnz	x8, 41f9a4 <wcrtomb@plt+0x1aeb4>
  41f978:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f97c:	ldr	x8, [x8, #1728]
  41f980:	str	x8, [x19, #3008]
  41f984:	cbnz	x8, 41f9a4 <wcrtomb@plt+0x1aeb4>
  41f988:	mov	x0, xzr
  41f98c:	ldr	x19, [sp, #16]
  41f990:	ldp	x29, x30, [sp], #32
  41f994:	ret
  41f998:	ldr	x8, [x8]
  41f99c:	str	x8, [x19, #3008]
  41f9a0:	cbz	x8, 41f988 <wcrtomb@plt+0x1ae98>
  41f9a4:	ldr	x9, [x8, #48]
  41f9a8:	cbnz	x9, 41f998 <wcrtomb@plt+0x1aea8>
  41f9ac:	ldr	x9, [x8, #16]
  41f9b0:	ldrb	w9, [x9]
  41f9b4:	cbz	w9, 41f998 <wcrtomb@plt+0x1aea8>
  41f9b8:	ldr	w0, [x8, #40]
  41f9bc:	mov	w9, #0x1                   	// #1
  41f9c0:	str	x9, [x8, #48]
  41f9c4:	bl	41cd90 <wcrtomb@plt+0x182a0>
  41f9c8:	ldr	x0, [x19, #3008]
  41f9cc:	ldr	x19, [sp, #16]
  41f9d0:	ldp	x29, x30, [sp], #32
  41f9d4:	ret
  41f9d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f9dc:	ldr	x8, [x8, #1728]
  41f9e0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41f9e4:	str	xzr, [x9, #3008]
  41f9e8:	cbz	x8, 41f9f8 <wcrtomb@plt+0x1af08>
  41f9ec:	str	xzr, [x8, #48]
  41f9f0:	ldr	x8, [x8]
  41f9f4:	cbnz	x8, 41f9ec <wcrtomb@plt+0x1aefc>
  41f9f8:	ret
  41f9fc:	stp	x29, x30, [sp, #-64]!
  41fa00:	stp	x24, x23, [sp, #16]
  41fa04:	stp	x22, x21, [sp, #32]
  41fa08:	stp	x20, x19, [sp, #48]
  41fa0c:	mov	x29, sp
  41fa10:	mov	x19, x1
  41fa14:	mov	x20, x0
  41fa18:	bl	403f00 <strlen@plt>
  41fa1c:	mov	x21, x0
  41fa20:	mov	x0, x19
  41fa24:	bl	403f00 <strlen@plt>
  41fa28:	add	x22, x0, #0x1
  41fa2c:	cbz	x21, 41fa44 <wcrtomb@plt+0x1af54>
  41fa30:	add	x8, x21, x20
  41fa34:	ldurb	w8, [x8, #-1]
  41fa38:	cmp	w8, #0x2f
  41fa3c:	cset	w24, ne  // ne = any
  41fa40:	b	41fa48 <wcrtomb@plt+0x1af58>
  41fa44:	mov	x24, xzr
  41fa48:	add	x8, x22, x21
  41fa4c:	add	x0, x8, x24
  41fa50:	bl	44a010 <argp_parse@@Base+0xf964>
  41fa54:	mov	x1, x20
  41fa58:	mov	x2, x21
  41fa5c:	mov	x23, x0
  41fa60:	bl	403e80 <memcpy@plt>
  41fa64:	add	x8, x23, x21
  41fa68:	mov	w9, #0x2f                  	// #47
  41fa6c:	add	x0, x8, x24
  41fa70:	mov	x1, x19
  41fa74:	mov	x2, x22
  41fa78:	strb	w9, [x8]
  41fa7c:	bl	403e80 <memcpy@plt>
  41fa80:	mov	x0, x23
  41fa84:	ldp	x20, x19, [sp, #48]
  41fa88:	ldp	x22, x21, [sp, #32]
  41fa8c:	ldp	x24, x23, [sp, #16]
  41fa90:	ldp	x29, x30, [sp], #64
  41fa94:	ret
  41fa98:	sub	x8, x0, #0x1
  41fa9c:	ldrb	w9, [x8, #1]!
  41faa0:	cmp	w9, #0x2f
  41faa4:	b.eq	41fa9c <wcrtomb@plt+0x1afac>  // b.none
  41faa8:	cbnz	w9, 41fac0 <wcrtomb@plt+0x1afd0>
  41faac:	mov	x0, #0xffffffffffffffff    	// #-1
  41fab0:	ret
  41fab4:	ldrb	w9, [x10]
  41fab8:	mov	x8, x10
  41fabc:	cbz	w9, 41faac <wcrtomb@plt+0x1afbc>
  41fac0:	and	w9, w9, #0xff
  41fac4:	cmp	w9, #0x2f
  41fac8:	add	x10, x8, #0x1
  41facc:	b.ne	41fab4 <wcrtomb@plt+0x1afc4>  // b.any
  41fad0:	subs	x1, x1, #0x1
  41fad4:	b.eq	41fae8 <wcrtomb@plt+0x1aff8>  // b.none
  41fad8:	ldrb	w9, [x8, #1]!
  41fadc:	cmp	w9, #0x2f
  41fae0:	b.eq	41fad8 <wcrtomb@plt+0x1afe8>  // b.none
  41fae4:	b	41fabc <wcrtomb@plt+0x1afcc>
  41fae8:	sub	x0, x10, x0
  41faec:	ret
  41faf0:	ldrb	w8, [x0]
  41faf4:	cmp	w8, #0x2e
  41faf8:	b.ne	41fb18 <wcrtomb@plt+0x1b028>  // b.any
  41fafc:	ldrb	w9, [x0, #1]
  41fb00:	cmp	w9, #0x2e
  41fb04:	b.ne	41fb18 <wcrtomb@plt+0x1b028>  // b.any
  41fb08:	ldrb	w9, [x0, #2]
  41fb0c:	cbz	w9, 41fb40 <wcrtomb@plt+0x1b050>
  41fb10:	cmp	w9, #0x2f
  41fb14:	b.eq	41fb40 <wcrtomb@plt+0x1b050>  // b.none
  41fb18:	add	x0, x0, #0x1
  41fb1c:	ands	w8, w8, #0xff
  41fb20:	b.eq	41fb38 <wcrtomb@plt+0x1b048>  // b.none
  41fb24:	cmp	w8, #0x2f
  41fb28:	b.eq	41faf0 <wcrtomb@plt+0x1b000>  // b.none
  41fb2c:	ldrb	w8, [x0], #1
  41fb30:	ands	w8, w8, #0xff
  41fb34:	b.ne	41fb24 <wcrtomb@plt+0x1b034>  // b.any
  41fb38:	mov	w0, wzr
  41fb3c:	ret
  41fb40:	mov	w0, #0x1                   	// #1
  41fb44:	ret
  41fb48:	stp	x29, x30, [sp, #-48]!
  41fb4c:	stp	x20, x19, [sp, #32]
  41fb50:	cmp	w0, #0x43
  41fb54:	mov	x19, x1
  41fb58:	str	x21, [sp, #16]
  41fb5c:	mov	x29, sp
  41fb60:	b.eq	41fbfc <wcrtomb@plt+0x1b10c>  // b.none
  41fb64:	mov	w20, w0
  41fb68:	cmp	w0, #0x54
  41fb6c:	b.eq	41fc74 <wcrtomb@plt+0x1b184>  // b.none
  41fb70:	cmp	w20, #0x100
  41fb74:	b.ne	41fd00 <wcrtomb@plt+0x1b210>  // b.any
  41fb78:	mov	w0, #0x38                  	// #56
  41fb7c:	bl	44a010 <argp_parse@@Base+0xf964>
  41fb80:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41fb84:	ldr	x9, [x20, #1736]
  41fb88:	mov	x8, x0
  41fb8c:	cbnz	x9, 41fbb0 <wcrtomb@plt+0x1b0c0>
  41fb90:	mov	w9, #0x3                   	// #3
  41fb94:	mov	w0, #0x38                  	// #56
  41fb98:	str	x8, [x20, #1736]
  41fb9c:	stp	xzr, xzr, [x8]
  41fba0:	str	w9, [x8, #16]
  41fba4:	bl	44a010 <argp_parse@@Base+0xf964>
  41fba8:	ldr	x9, [x20, #1736]
  41fbac:	mov	x8, x0
  41fbb0:	ldr	x10, [x9, #8]
  41fbb4:	str	x10, [x8, #8]
  41fbb8:	ldr	x10, [x9, #8]
  41fbbc:	cbz	x10, 41fbc8 <wcrtomb@plt+0x1b0d8>
  41fbc0:	str	x8, [x10]
  41fbc4:	ldr	x9, [x20, #1736]
  41fbc8:	str	x9, [x8]
  41fbcc:	str	x8, [x9, #8]
  41fbd0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41fbd4:	ldr	x10, [x9, #3000]
  41fbd8:	str	wzr, [x8, #16]
  41fbdc:	str	x19, [x8, #24]
  41fbe0:	mov	w0, wzr
  41fbe4:	add	x8, x10, #0x1
  41fbe8:	str	x8, [x9, #3000]
  41fbec:	ldp	x20, x19, [sp, #32]
  41fbf0:	ldr	x21, [sp, #16]
  41fbf4:	ldp	x29, x30, [sp], #48
  41fbf8:	ret
  41fbfc:	mov	w0, #0x38                  	// #56
  41fc00:	bl	44a010 <argp_parse@@Base+0xf964>
  41fc04:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41fc08:	ldr	x9, [x20, #1736]
  41fc0c:	mov	x8, x0
  41fc10:	cbnz	x9, 41fc34 <wcrtomb@plt+0x1b144>
  41fc14:	mov	w9, #0x3                   	// #3
  41fc18:	mov	w0, #0x38                  	// #56
  41fc1c:	str	x8, [x20, #1736]
  41fc20:	stp	xzr, xzr, [x8]
  41fc24:	str	w9, [x8, #16]
  41fc28:	bl	44a010 <argp_parse@@Base+0xf964>
  41fc2c:	ldr	x9, [x20, #1736]
  41fc30:	mov	x8, x0
  41fc34:	ldr	x10, [x9, #8]
  41fc38:	str	x10, [x8, #8]
  41fc3c:	ldr	x10, [x9, #8]
  41fc40:	cbz	x10, 41fc4c <wcrtomb@plt+0x1b15c>
  41fc44:	str	x8, [x10]
  41fc48:	ldr	x9, [x20, #1736]
  41fc4c:	str	x9, [x8]
  41fc50:	str	x8, [x9, #8]
  41fc54:	mov	w9, #0x1                   	// #1
  41fc58:	mov	w0, wzr
  41fc5c:	str	w9, [x8, #16]
  41fc60:	str	x19, [x8, #24]
  41fc64:	ldp	x20, x19, [sp, #32]
  41fc68:	ldr	x21, [sp, #16]
  41fc6c:	ldp	x29, x30, [sp], #48
  41fc70:	ret
  41fc74:	mov	w0, #0x38                  	// #56
  41fc78:	bl	44a010 <argp_parse@@Base+0xf964>
  41fc7c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41fc80:	ldr	x9, [x20, #1736]
  41fc84:	mov	x8, x0
  41fc88:	cbnz	x9, 41fcac <wcrtomb@plt+0x1b1bc>
  41fc8c:	mov	w9, #0x3                   	// #3
  41fc90:	mov	w0, #0x38                  	// #56
  41fc94:	str	x8, [x20, #1736]
  41fc98:	stp	xzr, xzr, [x8]
  41fc9c:	str	w9, [x8, #16]
  41fca0:	bl	44a010 <argp_parse@@Base+0xf964>
  41fca4:	ldr	x9, [x20, #1736]
  41fca8:	mov	x8, x0
  41fcac:	ldr	x10, [x9, #8]
  41fcb0:	str	x10, [x8, #8]
  41fcb4:	ldr	x10, [x9, #8]
  41fcb8:	cbz	x10, 41fcc4 <wcrtomb@plt+0x1b1d4>
  41fcbc:	str	x8, [x10]
  41fcc0:	ldr	x9, [x20, #1736]
  41fcc4:	str	x9, [x8]
  41fcc8:	str	x8, [x9, #8]
  41fccc:	mov	w9, #0x2                   	// #2
  41fcd0:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41fcd4:	str	w9, [x8, #16]
  41fcd8:	ldr	x9, [x10, #3000]
  41fcdc:	stp	x19, xzr, [x8, #24]
  41fce0:	str	xzr, [x8, #48]
  41fce4:	mov	w0, wzr
  41fce8:	add	x8, x9, #0x1
  41fcec:	str	x8, [x10, #3000]
  41fcf0:	ldp	x20, x19, [sp, #32]
  41fcf4:	ldr	x21, [sp, #16]
  41fcf8:	ldp	x29, x30, [sp], #48
  41fcfc:	ret
  41fd00:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  41fd04:	add	x8, x8, #0x7e8
  41fd08:	b	41fd18 <wcrtomb@plt+0x1b228>
  41fd0c:	cmp	w9, w20
  41fd10:	add	x8, x8, #0x30
  41fd14:	b.eq	41fd44 <wcrtomb@plt+0x1b254>  // b.none
  41fd18:	ldur	x10, [x8, #-32]
  41fd1c:	ldur	w9, [x8, #-24]
  41fd20:	cbnz	x10, 41fd0c <wcrtomb@plt+0x1b21c>
  41fd24:	cbnz	w9, 41fd0c <wcrtomb@plt+0x1b21c>
  41fd28:	ldr	x10, [x8]
  41fd2c:	cbnz	x10, 41fd0c <wcrtomb@plt+0x1b21c>
  41fd30:	mov	w0, #0x7                   	// #7
  41fd34:	ldp	x20, x19, [sp, #32]
  41fd38:	ldr	x21, [sp, #16]
  41fd3c:	ldp	x29, x30, [sp], #48
  41fd40:	ret
  41fd44:	mov	w0, #0x38                  	// #56
  41fd48:	bl	44a010 <argp_parse@@Base+0xf964>
  41fd4c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41fd50:	ldr	x9, [x21, #1736]
  41fd54:	mov	x8, x0
  41fd58:	cbnz	x9, 41fd7c <wcrtomb@plt+0x1b28c>
  41fd5c:	mov	w9, #0x3                   	// #3
  41fd60:	mov	w0, #0x38                  	// #56
  41fd64:	str	x8, [x21, #1736]
  41fd68:	stp	xzr, xzr, [x8]
  41fd6c:	str	w9, [x8, #16]
  41fd70:	bl	44a010 <argp_parse@@Base+0xf964>
  41fd74:	ldr	x9, [x21, #1736]
  41fd78:	mov	x8, x0
  41fd7c:	ldr	x10, [x9, #8]
  41fd80:	str	x10, [x8, #8]
  41fd84:	ldr	x10, [x9, #8]
  41fd88:	cbz	x10, 41fd94 <wcrtomb@plt+0x1b2a4>
  41fd8c:	str	x8, [x10]
  41fd90:	ldr	x9, [x21, #1736]
  41fd94:	mov	w0, wzr
  41fd98:	str	x9, [x8]
  41fd9c:	str	x8, [x9, #8]
  41fda0:	mov	w9, #0x4                   	// #4
  41fda4:	str	w20, [x8, #24]
  41fda8:	str	w9, [x8, #16]
  41fdac:	str	x19, [x8, #32]
  41fdb0:	ldp	x20, x19, [sp, #32]
  41fdb4:	ldr	x21, [sp, #16]
  41fdb8:	ldp	x29, x30, [sp], #48
  41fdbc:	ret
  41fdc0:	sub	sp, sp, #0x40
  41fdc4:	stp	x20, x19, [sp, #48]
  41fdc8:	cmp	w1, #0x1
  41fdcc:	mov	x20, x0
  41fdd0:	stp	x29, x30, [sp, #16]
  41fdd4:	stp	x22, x21, [sp, #32]
  41fdd8:	add	x29, sp, #0x10
  41fddc:	b.eq	41ff00 <wcrtomb@plt+0x1b410>  // b.none
  41fde0:	mov	x19, x2
  41fde4:	cmp	w1, #0x2
  41fde8:	b.ne	41fe18 <wcrtomb@plt+0x1b328>  // b.any
  41fdec:	ldr	x1, [x20]
  41fdf0:	mov	x0, x20
  41fdf4:	blr	x19
  41fdf8:	cmp	w0, #0x1
  41fdfc:	b.lt	41ff00 <wcrtomb@plt+0x1b410>  // b.tstop
  41fe00:	ldr	x8, [x20]
  41fe04:	str	x8, [sp, #8]
  41fe08:	str	x20, [x8]
  41fe0c:	str	xzr, [x20]
  41fe10:	mov	x20, x8
  41fe14:	b	41ff00 <wcrtomb@plt+0x1b410>
  41fe18:	add	w8, w1, #0x1
  41fe1c:	add	w9, w1, #0x2
  41fe20:	cmp	w8, #0x0
  41fe24:	csinc	w8, w9, w1, lt  // lt = tstop
  41fe28:	asr	w8, w8, #1
  41fe2c:	mov	x21, x20
  41fe30:	mov	w10, w8
  41fe34:	mov	x9, x21
  41fe38:	ldr	x21, [x21]
  41fe3c:	subs	w10, w10, #0x1
  41fe40:	b.ne	41fe34 <wcrtomb@plt+0x1b344>  // b.any
  41fe44:	cmp	w1, #0x0
  41fe48:	cinc	w10, w1, lt  // lt = tstop
  41fe4c:	mov	x0, x20
  41fe50:	mov	w1, w8
  41fe54:	mov	x2, x19
  41fe58:	asr	w22, w10, #1
  41fe5c:	str	xzr, [x9]
  41fe60:	bl	41fdc0 <wcrtomb@plt+0x1b2d0>
  41fe64:	mov	x20, x0
  41fe68:	mov	x0, x21
  41fe6c:	mov	w1, w22
  41fe70:	mov	x2, x19
  41fe74:	bl	41fdc0 <wcrtomb@plt+0x1b2d0>
  41fe78:	cmp	x20, #0x0
  41fe7c:	mov	x21, x0
  41fe80:	cset	w9, ne  // ne = any
  41fe84:	add	x8, sp, #0x8
  41fe88:	cbz	x0, 41fef0 <wcrtomb@plt+0x1b400>
  41fe8c:	cbz	x20, 41fef0 <wcrtomb@plt+0x1b400>
  41fe90:	add	x22, sp, #0x8
  41fe94:	mov	x0, x20
  41fe98:	mov	x1, x21
  41fe9c:	blr	x19
  41fea0:	tbnz	w0, #31, 41fec8 <wcrtomb@plt+0x1b3d8>
  41fea4:	ldr	x10, [x21]
  41fea8:	mov	x8, x21
  41feac:	mov	x9, x21
  41feb0:	mov	x21, x10
  41feb4:	cmp	x20, #0x0
  41feb8:	str	x9, [x22]
  41febc:	cset	w9, ne  // ne = any
  41fec0:	cbnz	x21, 41fee8 <wcrtomb@plt+0x1b3f8>
  41fec4:	b	41fef0 <wcrtomb@plt+0x1b400>
  41fec8:	ldr	x10, [x20]
  41fecc:	mov	x8, x20
  41fed0:	mov	x9, x20
  41fed4:	mov	x20, x10
  41fed8:	cmp	x20, #0x0
  41fedc:	str	x9, [x22]
  41fee0:	cset	w9, ne  // ne = any
  41fee4:	cbz	x21, 41fef0 <wcrtomb@plt+0x1b400>
  41fee8:	mov	x22, x8
  41feec:	cbnz	x20, 41fe94 <wcrtomb@plt+0x1b3a4>
  41fef0:	cmp	w9, #0x0
  41fef4:	csel	x9, x20, x21, ne  // ne = any
  41fef8:	str	x9, [x8]
  41fefc:	ldr	x20, [sp, #8]
  41ff00:	mov	x0, x20
  41ff04:	ldp	x20, x19, [sp, #48]
  41ff08:	ldp	x22, x21, [sp, #32]
  41ff0c:	ldp	x29, x30, [sp, #16]
  41ff10:	add	sp, sp, #0x40
  41ff14:	ret
  41ff18:	stp	x29, x30, [sp, #-96]!
  41ff1c:	stp	x28, x27, [sp, #16]
  41ff20:	stp	x26, x25, [sp, #32]
  41ff24:	stp	x24, x23, [sp, #48]
  41ff28:	stp	x22, x21, [sp, #64]
  41ff2c:	stp	x20, x19, [sp, #80]
  41ff30:	mov	x29, sp
  41ff34:	sub	sp, sp, #0x230
  41ff38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ff3c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ff40:	ldr	w8, [x8, #2944]
  41ff44:	ldr	w9, [x9, #3808]
  41ff48:	movi	v0.2d, #0x0
  41ff4c:	stp	q0, q0, [sp, #16]
  41ff50:	cmp	w8, #0x0
  41ff54:	csel	w8, w9, w8, eq  // eq = none
  41ff58:	sub	w8, w8, #0x2
  41ff5c:	cmp	w8, #0x4
  41ff60:	str	q0, [sp]
  41ff64:	b.hi	420004 <wcrtomb@plt+0x1b514>  // b.pmore
  41ff68:	mov	w9, #0x1d                  	// #29
  41ff6c:	lsr	w9, w9, w8
  41ff70:	tbz	w9, #0, 420004 <wcrtomb@plt+0x1b514>
  41ff74:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  41ff78:	add	x9, x9, #0x208
  41ff7c:	ldr	x8, [x9, w8, sxtw #3]
  41ff80:	mov	x20, x1
  41ff84:	mov	w19, w0
  41ff88:	str	x8, [sp, #32]
  41ff8c:	ldr	x8, [x8]
  41ff90:	cbz	x8, 41ffa0 <wcrtomb@plt+0x1b4b0>
  41ff94:	mov	x0, sp
  41ff98:	blr	x8
  41ff9c:	tbz	w0, #0, 420004 <wcrtomb@plt+0x1b514>
  41ffa0:	mov	w8, #0x1                   	// #1
  41ffa4:	str	x20, [sp, #24]
  41ffa8:	str	w19, [sp]
  41ffac:	strb	w8, [sp, #4]
  41ffb0:	ldr	x8, [x20, #152]
  41ffb4:	cbz	x8, 420028 <wcrtomb@plt+0x1b538>
  41ffb8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  41ffbc:	ldr	w8, [x8, #3908]
  41ffc0:	cmp	w8, #0x2
  41ffc4:	b.eq	41ffd4 <wcrtomb@plt+0x1b4e4>  // b.none
  41ffc8:	cmp	w8, #0x1
  41ffcc:	b.eq	420160 <wcrtomb@plt+0x1b670>  // b.none
  41ffd0:	cbnz	w8, 42040c <wcrtomb@plt+0x1b91c>
  41ffd4:	mov	w2, #0x3                   	// #3
  41ffd8:	mov	w0, w19
  41ffdc:	mov	x1, xzr
  41ffe0:	str	xzr, [x20, #264]
  41ffe4:	bl	4040e0 <lseek@plt>
  41ffe8:	cmn	x0, #0x1
  41ffec:	b.eq	420114 <wcrtomb@plt+0x1b624>  // b.none
  41fff0:	mov	x23, #0x5555555555555555    	// #6148914691236517205
  41fff4:	mov	x21, x0
  41fff8:	mov	x22, xzr
  41fffc:	movk	x23, #0x555, lsl #48
  420000:	b	4200b0 <wcrtomb@plt+0x1b5c0>
  420004:	mov	w0, #0x3                   	// #3
  420008:	add	sp, sp, #0x230
  42000c:	ldp	x20, x19, [sp, #80]
  420010:	ldp	x22, x21, [sp, #64]
  420014:	ldp	x24, x23, [sp, #48]
  420018:	ldp	x26, x25, [sp, #32]
  42001c:	ldp	x28, x27, [sp, #16]
  420020:	ldp	x29, x30, [sp], #96
  420024:	ret
  420028:	ldp	x21, x8, [x20, #288]
  42002c:	ldr	x22, [x20, #136]
  420030:	ldr	x0, [x20, #304]
  420034:	str	xzr, [x20, #264]
  420038:	cmp	x21, x8
  42003c:	b.ne	420334 <wcrtomb@plt+0x1b844>  // b.any
  420040:	cbz	x0, 42013c <wcrtomb@plt+0x1b64c>
  420044:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  420048:	movk	x8, #0x555, lsl #48
  42004c:	cmp	x21, x8
  420050:	b.cs	42031c <wcrtomb@plt+0x1b82c>  // b.hs, b.nlast
  420054:	add	x8, x21, x21, lsr #1
  420058:	add	x8, x8, #0x1
  42005c:	b	420324 <wcrtomb@plt+0x1b834>
  420060:	mov	w8, #0x8                   	// #8
  420064:	lsl	x1, x8, #4
  420068:	str	x8, [x20, #296]
  42006c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  420070:	str	x0, [x20, #304]
  420074:	sub	x8, x22, x21
  420078:	add	x9, x0, x24, lsl #4
  42007c:	stp	x21, x8, [x9]
  420080:	ldr	x9, [x20, #264]
  420084:	add	x10, x24, #0x1
  420088:	mov	w2, #0x3                   	// #3
  42008c:	mov	w0, w19
  420090:	add	x8, x9, x8
  420094:	mov	x1, x22
  420098:	str	x10, [x20, #288]
  42009c:	str	x8, [x20, #264]
  4200a0:	bl	4040e0 <lseek@plt>
  4200a4:	mov	x21, x0
  4200a8:	cmn	x0, #0x1
  4200ac:	b.eq	420114 <wcrtomb@plt+0x1b624>  // b.none
  4200b0:	mov	w2, #0x4                   	// #4
  4200b4:	mov	w0, w19
  4200b8:	mov	x1, x21
  4200bc:	bl	4040e0 <lseek@plt>
  4200c0:	orr	x8, x22, x21
  4200c4:	mov	x22, x0
  4200c8:	cbnz	x8, 4200d8 <wcrtomb@plt+0x1b5e8>
  4200cc:	ldr	x8, [x20, #136]
  4200d0:	cmp	x22, x8
  4200d4:	b.eq	420150 <wcrtomb@plt+0x1b660>  // b.none
  4200d8:	ldp	x24, x8, [x20, #288]
  4200dc:	ldr	x0, [x20, #304]
  4200e0:	cmp	x24, x8
  4200e4:	b.ne	420074 <wcrtomb@plt+0x1b584>  // b.any
  4200e8:	cbz	x0, 420100 <wcrtomb@plt+0x1b610>
  4200ec:	cmp	x24, x23
  4200f0:	b.cs	42031c <wcrtomb@plt+0x1b82c>  // b.hs, b.nlast
  4200f4:	add	x8, x24, x24, lsr #1
  4200f8:	add	x8, x8, #0x1
  4200fc:	b	420064 <wcrtomb@plt+0x1b574>
  420100:	cbz	x24, 420060 <wcrtomb@plt+0x1b570>
  420104:	lsr	x9, x24, #59
  420108:	mov	x8, x24
  42010c:	cbz	x9, 420064 <wcrtomb@plt+0x1b574>
  420110:	b	42031c <wcrtomb@plt+0x1b82c>
  420114:	bl	4049c0 <__errno_location@plt>
  420118:	ldr	w8, [x0]
  42011c:	cmp	w8, #0x6
  420120:	b.ne	420160 <wcrtomb@plt+0x1b670>  // b.any
  420124:	ldp	x21, x8, [x20, #288]
  420128:	ldr	x22, [x20, #136]
  42012c:	ldr	x0, [x20, #304]
  420130:	cmp	x21, x8
  420134:	b.ne	420334 <wcrtomb@plt+0x1b844>  // b.any
  420138:	cbnz	x0, 420044 <wcrtomb@plt+0x1b554>
  42013c:	cbz	x21, 420320 <wcrtomb@plt+0x1b830>
  420140:	lsr	x9, x21, #59
  420144:	mov	x8, x21
  420148:	cbz	x9, 420324 <wcrtomb@plt+0x1b834>
  42014c:	b	42031c <wcrtomb@plt+0x1b82c>
  420150:	mov	w0, w19
  420154:	mov	x1, xzr
  420158:	mov	w2, wzr
  42015c:	bl	4040e0 <lseek@plt>
  420160:	ldp	x22, x8, [sp, #24]
  420164:	ldr	w21, [sp]
  420168:	str	xzr, [x22, #264]
  42016c:	ldr	x8, [x8, #48]
  420170:	cbz	x8, 420188 <wcrtomb@plt+0x1b698>
  420174:	mov	x0, sp
  420178:	mov	w1, wzr
  42017c:	mov	x2, xzr
  420180:	blr	x8
  420184:	tbz	w0, #0, 42040c <wcrtomb@plt+0x1b91c>
  420188:	add	x1, sp, #0x30
  42018c:	mov	w2, #0x200                 	// #512
  420190:	mov	w0, w21
  420194:	bl	41c904 <wcrtomb@plt+0x17e14>
  420198:	add	x8, x0, #0x1
  42019c:	mov	x20, x0
  4201a0:	cmp	x8, #0x2
  4201a4:	b.cc	4202c8 <wcrtomb@plt+0x1b7d8>  // b.lo, b.ul, b.last
  4201a8:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  4201ac:	mov	x25, xzr
  4201b0:	mov	x24, xzr
  4201b4:	mov	x23, xzr
  4201b8:	movk	x26, #0x555, lsl #48
  4201bc:	b	4201e8 <wcrtomb@plt+0x1b6f8>
  4201c0:	mov	x24, xzr
  4201c4:	add	x1, sp, #0x30
  4201c8:	mov	w2, #0x200                 	// #512
  4201cc:	mov	w0, w21
  4201d0:	add	x25, x25, x20
  4201d4:	bl	41c904 <wcrtomb@plt+0x17e14>
  4201d8:	add	x8, x0, #0x1
  4201dc:	mov	x20, x0
  4201e0:	cmp	x8, #0x1
  4201e4:	b.ls	4202d8 <wcrtomb@plt+0x1b7e8>  // b.plast
  4201e8:	add	x8, sp, #0x30
  4201ec:	mov	x9, x20
  4201f0:	cbz	x9, 42023c <wcrtomb@plt+0x1b74c>
  4201f4:	ldrb	w10, [x8], #1
  4201f8:	sub	x9, x9, #0x1
  4201fc:	cbz	w10, 4201f0 <wcrtomb@plt+0x1b700>
  420200:	ldr	x8, [x22, #264]
  420204:	cmp	x24, #0x0
  420208:	csel	x23, x25, x23, eq  // eq = none
  42020c:	add	x24, x24, x20
  420210:	add	x8, x8, x20
  420214:	str	x8, [x22, #264]
  420218:	ldr	x8, [sp, #32]
  42021c:	ldr	x8, [x8, #48]
  420220:	cbz	x8, 4201c4 <wcrtomb@plt+0x1b6d4>
  420224:	mov	x0, sp
  420228:	add	x2, sp, #0x30
  42022c:	mov	w1, #0x1                   	// #1
  420230:	blr	x8
  420234:	tbnz	w0, #0, 4201c4 <wcrtomb@plt+0x1b6d4>
  420238:	b	42040c <wcrtomb@plt+0x1b91c>
  42023c:	cbz	x24, 4201c4 <wcrtomb@plt+0x1b6d4>
  420240:	ldp	x27, x8, [x22, #288]
  420244:	ldr	x0, [x22, #304]
  420248:	cmp	x27, x8
  42024c:	b.ne	420290 <wcrtomb@plt+0x1b7a0>  // b.any
  420250:	cbz	x0, 420268 <wcrtomb@plt+0x1b778>
  420254:	cmp	x27, x26
  420258:	b.cs	42031c <wcrtomb@plt+0x1b82c>  // b.hs, b.nlast
  42025c:	add	x8, x27, x27, lsr #1
  420260:	add	x8, x8, #0x1
  420264:	b	420280 <wcrtomb@plt+0x1b790>
  420268:	cbz	x27, 42027c <wcrtomb@plt+0x1b78c>
  42026c:	lsr	x9, x27, #59
  420270:	mov	x8, x27
  420274:	cbz	x9, 420280 <wcrtomb@plt+0x1b790>
  420278:	b	42031c <wcrtomb@plt+0x1b82c>
  42027c:	mov	w8, #0x8                   	// #8
  420280:	lsl	x1, x8, #4
  420284:	str	x8, [x22, #296]
  420288:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42028c:	str	x0, [x22, #304]
  420290:	add	x8, x0, x27, lsl #4
  420294:	add	x9, x27, #0x1
  420298:	stp	x23, x24, [x8]
  42029c:	str	x9, [x22, #288]
  4202a0:	ldr	x8, [sp, #32]
  4202a4:	ldr	x8, [x8, #48]
  4202a8:	cbz	x8, 4201c0 <wcrtomb@plt+0x1b6d0>
  4202ac:	mov	x0, sp
  4202b0:	mov	w1, #0x1                   	// #1
  4202b4:	mov	x2, xzr
  4202b8:	blr	x8
  4202bc:	mov	x24, xzr
  4202c0:	tbnz	w0, #0, 4201c4 <wcrtomb@plt+0x1b6d4>
  4202c4:	b	42040c <wcrtomb@plt+0x1b91c>
  4202c8:	mov	x25, xzr
  4202cc:	mov	x24, xzr
  4202d0:	mov	x23, x25
  4202d4:	b	4202dc <wcrtomb@plt+0x1b7ec>
  4202d8:	cbz	x24, 4202cc <wcrtomb@plt+0x1b7dc>
  4202dc:	ldp	x21, x8, [x22, #288]
  4202e0:	ldr	x0, [x22, #304]
  4202e4:	cmp	x21, x8
  4202e8:	b.ne	4203d0 <wcrtomb@plt+0x1b8e0>  // b.any
  4202ec:	cbz	x0, 42030c <wcrtomb@plt+0x1b81c>
  4202f0:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  4202f4:	movk	x8, #0x555, lsl #48
  4202f8:	cmp	x21, x8
  4202fc:	b.cs	42031c <wcrtomb@plt+0x1b82c>  // b.hs, b.nlast
  420300:	add	x8, x21, x21, lsr #1
  420304:	add	x8, x8, #0x1
  420308:	b	4203c0 <wcrtomb@plt+0x1b8d0>
  42030c:	cbz	x21, 4203bc <wcrtomb@plt+0x1b8cc>
  420310:	lsr	x9, x21, #59
  420314:	mov	x8, x21
  420318:	cbz	x9, 4203c0 <wcrtomb@plt+0x1b8d0>
  42031c:	bl	40eb80 <wcrtomb@plt+0xa090>
  420320:	mov	w8, #0x8                   	// #8
  420324:	lsl	x1, x8, #4
  420328:	str	x8, [x20, #296]
  42032c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  420330:	str	x0, [x20, #304]
  420334:	add	x8, x0, x21, lsl #4
  420338:	add	x9, x21, #0x1
  42033c:	stp	x22, xzr, [x8]
  420340:	str	x9, [x20, #288]
  420344:	ldr	x8, [sp, #32]
  420348:	ldr	x9, [x8, #56]
  42034c:	cbz	x9, 4203b4 <wcrtomb@plt+0x1b8c4>
  420350:	ldr	x8, [x8, #24]
  420354:	cbz	x8, 420360 <wcrtomb@plt+0x1b870>
  420358:	mov	x0, sp
  42035c:	blr	x8
  420360:	tbnz	w19, #31, 4203b4 <wcrtomb@plt+0x1b8c4>
  420364:	ldp	x9, x8, [sp, #16]
  420368:	ldr	x10, [x8, #264]
  42036c:	ldr	x0, [x8, #8]
  420370:	ldr	x1, [x8, #136]
  420374:	sub	x2, x10, x9
  420378:	bl	404c0c <wcrtomb@plt+0x11c>
  42037c:	mov	x19, xzr
  420380:	ldr	x8, [sp, #24]
  420384:	ldr	x8, [x8, #288]
  420388:	cmp	x19, x8
  42038c:	b.cs	4203b4 <wcrtomb@plt+0x1b8c4>  // b.hs, b.nlast
  420390:	ldr	x8, [sp, #32]
  420394:	ldr	x8, [x8, #56]
  420398:	cbz	x8, 42040c <wcrtomb@plt+0x1b91c>
  42039c:	mov	x0, sp
  4203a0:	mov	x1, x19
  4203a4:	blr	x8
  4203a8:	add	x19, x19, #0x1
  4203ac:	tbnz	w0, #0, 420380 <wcrtomb@plt+0x1b890>
  4203b0:	b	42040c <wcrtomb@plt+0x1b91c>
  4203b4:	mov	w19, #0x1                   	// #1
  4203b8:	b	420410 <wcrtomb@plt+0x1b920>
  4203bc:	mov	w8, #0x8                   	// #8
  4203c0:	lsl	x1, x8, #4
  4203c4:	str	x8, [x22, #296]
  4203c8:	bl	44a090 <argp_parse@@Base+0xf9e4>
  4203cc:	str	x0, [x22, #304]
  4203d0:	add	x8, x0, x21, lsl #4
  4203d4:	stp	x23, x24, [x8]
  4203d8:	ldr	x8, [x22, #264]
  4203dc:	add	x9, x21, #0x1
  4203e0:	str	x9, [x22, #288]
  4203e4:	add	x8, x8, x20
  4203e8:	str	x8, [x22, #264]
  4203ec:	ldr	x8, [sp, #32]
  4203f0:	ldr	x8, [x8, #48]
  4203f4:	cbz	x8, 420344 <wcrtomb@plt+0x1b854>
  4203f8:	mov	x0, sp
  4203fc:	mov	w1, #0x2                   	// #2
  420400:	mov	x2, xzr
  420404:	blr	x8
  420408:	tbnz	w0, #0, 420344 <wcrtomb@plt+0x1b854>
  42040c:	mov	w19, wzr
  420410:	ldp	x9, x8, [sp, #16]
  420414:	ldr	x8, [x8, #264]
  420418:	sub	x0, x8, x9
  42041c:	bl	40bce4 <wcrtomb@plt+0x71f4>
  420420:	ldr	x8, [sp, #32]
  420424:	ldr	x8, [x8, #8]
  420428:	cbz	x8, 420438 <wcrtomb@plt+0x1b948>
  42042c:	mov	x0, sp
  420430:	blr	x8
  420434:	b	42043c <wcrtomb@plt+0x1b94c>
  420438:	mov	w0, #0x1                   	// #1
  42043c:	and	w8, w19, w0
  420440:	eor	w0, w8, #0x1
  420444:	b	420008 <wcrtomb@plt+0x1b518>
  420448:	sub	sp, sp, #0x50
  42044c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420450:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420454:	ldr	w8, [x8, #2944]
  420458:	ldr	w9, [x9, #3808]
  42045c:	movi	v0.2d, #0x0
  420460:	stp	x29, x30, [sp, #48]
  420464:	cmp	w8, #0x0
  420468:	csel	w8, w9, w8, eq  // eq = none
  42046c:	sub	w8, w8, #0x2
  420470:	cmp	w8, #0x4
  420474:	str	x19, [sp, #64]
  420478:	add	x29, sp, #0x30
  42047c:	stp	q0, q0, [sp, #16]
  420480:	str	q0, [sp]
  420484:	b.hi	4204d8 <wcrtomb@plt+0x1b9e8>  // b.pmore
  420488:	mov	w9, #0x1d                  	// #29
  42048c:	lsr	w9, w9, w8
  420490:	tbz	w9, #0, 4204d8 <wcrtomb@plt+0x1b9e8>
  420494:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  420498:	add	x9, x9, #0x208
  42049c:	ldr	x8, [x9, w8, sxtw #3]
  4204a0:	mov	x19, x0
  4204a4:	str	x8, [sp, #32]
  4204a8:	ldr	x9, [x8]
  4204ac:	cbz	x9, 4204c0 <wcrtomb@plt+0x1b9d0>
  4204b0:	mov	x0, sp
  4204b4:	blr	x9
  4204b8:	tbz	w0, #0, 4204d8 <wcrtomb@plt+0x1b9e8>
  4204bc:	ldr	x8, [sp, #32]
  4204c0:	str	x19, [sp, #24]
  4204c4:	ldr	x8, [x8, #16]
  4204c8:	cbz	x8, 4204d8 <wcrtomb@plt+0x1b9e8>
  4204cc:	mov	x0, sp
  4204d0:	blr	x8
  4204d4:	b	4204dc <wcrtomb@plt+0x1b9ec>
  4204d8:	mov	w0, wzr
  4204dc:	ldr	x19, [sp, #64]
  4204e0:	ldp	x29, x30, [sp, #48]
  4204e4:	and	w0, w0, #0x1
  4204e8:	add	sp, sp, #0x50
  4204ec:	ret
  4204f0:	sub	sp, sp, #0x50
  4204f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4204f8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4204fc:	ldr	w8, [x8, #2944]
  420500:	ldr	w9, [x9, #3808]
  420504:	movi	v0.2d, #0x0
  420508:	stp	x29, x30, [sp, #48]
  42050c:	cmp	w8, #0x0
  420510:	csel	w8, w9, w8, eq  // eq = none
  420514:	sub	w8, w8, #0x2
  420518:	cmp	w8, #0x4
  42051c:	str	x19, [sp, #64]
  420520:	add	x29, sp, #0x30
  420524:	stp	q0, q0, [sp, #16]
  420528:	str	q0, [sp]
  42052c:	b.hi	420580 <wcrtomb@plt+0x1ba90>  // b.pmore
  420530:	mov	w9, #0x1d                  	// #29
  420534:	lsr	w9, w9, w8
  420538:	tbz	w9, #0, 420580 <wcrtomb@plt+0x1ba90>
  42053c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  420540:	add	x9, x9, #0x208
  420544:	ldr	x8, [x9, w8, sxtw #3]
  420548:	mov	x19, x0
  42054c:	str	x8, [sp, #32]
  420550:	ldr	x9, [x8]
  420554:	cbz	x9, 420568 <wcrtomb@plt+0x1ba78>
  420558:	mov	x0, sp
  42055c:	blr	x9
  420560:	tbz	w0, #0, 420580 <wcrtomb@plt+0x1ba90>
  420564:	ldr	x8, [sp, #32]
  420568:	str	x19, [sp, #24]
  42056c:	ldr	x8, [x8, #32]
  420570:	cbz	x8, 420598 <wcrtomb@plt+0x1baa8>
  420574:	mov	x0, sp
  420578:	blr	x8
  42057c:	b	420584 <wcrtomb@plt+0x1ba94>
  420580:	mov	w0, wzr
  420584:	ldr	x19, [sp, #64]
  420588:	ldp	x29, x30, [sp, #48]
  42058c:	and	w0, w0, #0x1
  420590:	add	sp, sp, #0x50
  420594:	ret
  420598:	mov	w0, #0x1                   	// #1
  42059c:	b	420584 <wcrtomb@plt+0x1ba94>
  4205a0:	sub	sp, sp, #0x60
  4205a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4205a8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4205ac:	ldr	w8, [x8, #2944]
  4205b0:	ldr	w9, [x9, #3808]
  4205b4:	movi	v0.2d, #0x0
  4205b8:	stp	x29, x30, [sp, #48]
  4205bc:	cmp	w8, #0x0
  4205c0:	csel	w8, w9, w8, eq  // eq = none
  4205c4:	sub	w8, w8, #0x2
  4205c8:	cmp	w8, #0x4
  4205cc:	str	x21, [sp, #64]
  4205d0:	stp	x20, x19, [sp, #80]
  4205d4:	add	x29, sp, #0x30
  4205d8:	stp	q0, q0, [sp, #16]
  4205dc:	str	q0, [sp]
  4205e0:	b.hi	42069c <wcrtomb@plt+0x1bbac>  // b.pmore
  4205e4:	mov	w9, #0x1d                  	// #29
  4205e8:	lsr	w9, w9, w8
  4205ec:	tbz	w9, #0, 42069c <wcrtomb@plt+0x1bbac>
  4205f0:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4205f4:	add	x9, x9, #0x208
  4205f8:	ldr	x8, [x9, w8, sxtw #3]
  4205fc:	mov	x19, x2
  420600:	mov	x21, x1
  420604:	mov	w20, w0
  420608:	str	x8, [sp, #32]
  42060c:	ldr	x8, [x8]
  420610:	cbz	x8, 420620 <wcrtomb@plt+0x1bb30>
  420614:	mov	x0, sp
  420618:	blr	x8
  42061c:	tbz	w0, #0, 42069c <wcrtomb@plt+0x1bbac>
  420620:	mov	w0, w20
  420624:	mov	x1, xzr
  420628:	mov	w2, wzr
  42062c:	str	x21, [sp, #24]
  420630:	str	w20, [sp]
  420634:	bl	4040e0 <lseek@plt>
  420638:	ldr	x8, [sp, #32]
  42063c:	cmp	x0, #0x0
  420640:	cset	w9, eq  // eq = none
  420644:	strb	w9, [sp, #4]
  420648:	str	xzr, [sp, #8]
  42064c:	ldr	x8, [x8, #40]
  420650:	cbz	x8, 420660 <wcrtomb@plt+0x1bb70>
  420654:	mov	x0, sp
  420658:	blr	x8
  42065c:	tbz	w0, #0, 420694 <wcrtomb@plt+0x1bba4>
  420660:	mov	x20, xzr
  420664:	ldr	x8, [sp, #24]
  420668:	ldr	x8, [x8, #288]
  42066c:	cmp	x20, x8
  420670:	b.cs	4206b4 <wcrtomb@plt+0x1bbc4>  // b.hs, b.nlast
  420674:	ldr	x8, [sp, #32]
  420678:	ldr	x8, [x8, #64]
  42067c:	cbz	x8, 420694 <wcrtomb@plt+0x1bba4>
  420680:	mov	x0, sp
  420684:	mov	x1, x20
  420688:	blr	x8
  42068c:	add	x20, x20, #0x1
  420690:	tbnz	w0, #0, 420664 <wcrtomb@plt+0x1bb74>
  420694:	mov	w20, wzr
  420698:	b	4206b8 <wcrtomb@plt+0x1bbc8>
  42069c:	mov	w0, #0x3                   	// #3
  4206a0:	ldp	x20, x19, [sp, #80]
  4206a4:	ldr	x21, [sp, #64]
  4206a8:	ldp	x29, x30, [sp, #48]
  4206ac:	add	sp, sp, #0x60
  4206b0:	ret
  4206b4:	mov	w20, #0x1                   	// #1
  4206b8:	ldp	x9, x8, [sp, #16]
  4206bc:	ldr	x8, [x8, #264]
  4206c0:	sub	x8, x8, x9
  4206c4:	str	x8, [x19]
  4206c8:	ldr	x8, [sp, #32]
  4206cc:	ldr	x8, [x8, #8]
  4206d0:	cbz	x8, 4206e0 <wcrtomb@plt+0x1bbf0>
  4206d4:	mov	x0, sp
  4206d8:	blr	x8
  4206dc:	b	4206e4 <wcrtomb@plt+0x1bbf4>
  4206e0:	mov	w0, #0x1                   	// #1
  4206e4:	and	w8, w20, w0
  4206e8:	eor	w0, w8, #0x1
  4206ec:	b	4206a0 <wcrtomb@plt+0x1bbb0>
  4206f0:	sub	sp, sp, #0x50
  4206f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4206f8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4206fc:	ldr	w8, [x8, #2944]
  420700:	ldr	w9, [x9, #3808]
  420704:	movi	v0.2d, #0x0
  420708:	stp	x29, x30, [sp, #48]
  42070c:	cmp	w8, #0x0
  420710:	csel	w8, w9, w8, eq  // eq = none
  420714:	sub	w8, w8, #0x2
  420718:	cmp	w8, #0x4
  42071c:	stp	x20, x19, [sp, #64]
  420720:	add	x29, sp, #0x30
  420724:	stp	q0, q0, [sp, #16]
  420728:	str	q0, [sp]
  42072c:	b.hi	420790 <wcrtomb@plt+0x1bca0>  // b.pmore
  420730:	mov	w9, #0x1d                  	// #29
  420734:	lsr	w9, w9, w8
  420738:	tbz	w9, #0, 420790 <wcrtomb@plt+0x1bca0>
  42073c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  420740:	add	x9, x9, #0x208
  420744:	ldr	x8, [x9, w8, sxtw #3]
  420748:	mov	x19, x0
  42074c:	str	x8, [sp, #32]
  420750:	ldr	x9, [x8]
  420754:	cbz	x9, 420768 <wcrtomb@plt+0x1bc78>
  420758:	mov	x0, sp
  42075c:	blr	x9
  420760:	tbz	w0, #0, 420790 <wcrtomb@plt+0x1bca0>
  420764:	ldr	x8, [sp, #32]
  420768:	mov	w9, #0xffffffff            	// #-1
  42076c:	str	x19, [sp, #24]
  420770:	str	w9, [sp]
  420774:	ldr	x8, [x8, #40]
  420778:	cbz	x8, 4207a4 <wcrtomb@plt+0x1bcb4>
  42077c:	mov	x0, sp
  420780:	blr	x8
  420784:	ldr	x19, [sp, #24]
  420788:	mov	w20, w0
  42078c:	b	4207a8 <wcrtomb@plt+0x1bcb8>
  420790:	mov	w0, #0x3                   	// #3
  420794:	ldp	x20, x19, [sp, #64]
  420798:	ldp	x29, x30, [sp, #48]
  42079c:	add	sp, sp, #0x50
  4207a0:	ret
  4207a4:	mov	w20, #0x1                   	// #1
  4207a8:	ldr	x8, [x19, #264]
  4207ac:	ldr	x9, [sp, #16]
  4207b0:	sub	x0, x8, x9
  4207b4:	bl	41acf0 <wcrtomb@plt+0x16200>
  4207b8:	ldr	x8, [sp, #32]
  4207bc:	ldr	x8, [x8, #8]
  4207c0:	cbz	x8, 4207d0 <wcrtomb@plt+0x1bce0>
  4207c4:	mov	x0, sp
  4207c8:	blr	x8
  4207cc:	b	4207d4 <wcrtomb@plt+0x1bce4>
  4207d0:	mov	w0, #0x1                   	// #1
  4207d4:	and	w8, w20, w0
  4207d8:	mvn	w8, w8
  4207dc:	and	w0, w8, #0x1
  4207e0:	ldp	x20, x19, [sp, #64]
  4207e4:	ldp	x29, x30, [sp, #48]
  4207e8:	add	sp, sp, #0x50
  4207ec:	ret
  4207f0:	stp	x29, x30, [sp, #-96]!
  4207f4:	stp	x28, x27, [sp, #16]
  4207f8:	stp	x26, x25, [sp, #32]
  4207fc:	stp	x24, x23, [sp, #48]
  420800:	stp	x22, x21, [sp, #64]
  420804:	stp	x20, x19, [sp, #80]
  420808:	mov	x29, sp
  42080c:	sub	sp, sp, #0x250
  420810:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420814:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420818:	ldr	w8, [x8, #2944]
  42081c:	ldr	w9, [x9, #3808]
  420820:	movi	v0.2d, #0x0
  420824:	stp	q0, q0, [sp, #16]
  420828:	cmp	w8, #0x0
  42082c:	csel	w8, w9, w8, eq  // eq = none
  420830:	sub	w8, w8, #0x2
  420834:	cmp	w8, #0x4
  420838:	str	q0, [sp]
  42083c:	b.hi	4208d8 <wcrtomb@plt+0x1bde8>  // b.pmore
  420840:	mov	w9, #0x1d                  	// #29
  420844:	lsr	w9, w9, w8
  420848:	tbz	w9, #0, 4208d8 <wcrtomb@plt+0x1bde8>
  42084c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  420850:	add	x9, x9, #0x208
  420854:	ldr	x8, [x9, w8, sxtw #3]
  420858:	mov	x19, x1
  42085c:	mov	w20, w0
  420860:	str	x8, [sp, #32]
  420864:	ldr	x9, [x8]
  420868:	cbz	x9, 42087c <wcrtomb@plt+0x1bd8c>
  42086c:	mov	x0, sp
  420870:	blr	x9
  420874:	tbz	w0, #0, 4208d8 <wcrtomb@plt+0x1bde8>
  420878:	ldr	x8, [sp, #32]
  42087c:	mov	w9, #0x1                   	// #1
  420880:	str	x19, [sp, #24]
  420884:	str	w20, [sp]
  420888:	strb	w9, [sp, #4]
  42088c:	ldr	x8, [x8, #40]
  420890:	cbz	x8, 420900 <wcrtomb@plt+0x1be10>
  420894:	mov	x0, sp
  420898:	blr	x8
  42089c:	mov	w20, w0
  4208a0:	mov	x0, x19
  4208a4:	bl	404ca8 <wcrtomb@plt+0x1b8>
  4208a8:	ldr	x8, [sp, #24]
  4208ac:	tbnz	w20, #0, 42090c <wcrtomb@plt+0x1be1c>
  4208b0:	ldr	x8, [x8, #264]
  4208b4:	ldr	x9, [sp, #16]
  4208b8:	sub	x0, x8, x9
  4208bc:	bl	41acf0 <wcrtomb@plt+0x16200>
  4208c0:	mov	w19, wzr
  4208c4:	bl	404d34 <wcrtomb@plt+0x244>
  4208c8:	ldr	x8, [sp, #32]
  4208cc:	ldr	x8, [x8, #8]
  4208d0:	cbnz	x8, 420bc0 <wcrtomb@plt+0x1c0d0>
  4208d4:	b	4208dc <wcrtomb@plt+0x1bdec>
  4208d8:	mov	w19, #0x1                   	// #1
  4208dc:	mov	w0, w19
  4208e0:	add	sp, sp, #0x250
  4208e4:	ldp	x20, x19, [sp, #80]
  4208e8:	ldp	x22, x21, [sp, #64]
  4208ec:	ldp	x24, x23, [sp, #48]
  4208f0:	ldp	x26, x25, [sp, #32]
  4208f4:	ldp	x28, x27, [sp, #16]
  4208f8:	ldp	x29, x30, [sp], #96
  4208fc:	ret
  420900:	mov	x0, x19
  420904:	bl	404ca8 <wcrtomb@plt+0x1b8>
  420908:	ldr	x8, [sp, #24]
  42090c:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x18e3c>
  420910:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x15e3c>
  420914:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x15e3c>
  420918:	mov	x24, xzr
  42091c:	mov	x27, xzr
  420920:	mov	w28, #0x200                 	// #512
  420924:	add	x20, x20, #0x2bb
  420928:	add	x21, x21, #0x818
  42092c:	mov	w22, #0x2                   	// #2
  420930:	add	x23, x23, #0x873
  420934:	ldr	x9, [x8, #288]
  420938:	cmp	x27, x9
  42093c:	b.cs	420bac <wcrtomb@plt+0x1c0bc>  // b.hs, b.nlast
  420940:	ldr	x8, [x8, #304]
  420944:	lsl	x19, x27, #4
  420948:	mov	x0, sp
  42094c:	mov	x1, x24
  420950:	ldr	x26, [x8, x19]
  420954:	bl	421678 <wcrtomb@plt+0x1cb88>
  420958:	tbz	w0, #0, 420aa0 <wcrtomb@plt+0x1bfb0>
  42095c:	cmp	x24, x26
  420960:	b.ge	4209b4 <wcrtomb@plt+0x1bec4>  // b.tcont
  420964:	ldr	w0, [sp]
  420968:	sub	x8, x26, x24
  42096c:	cmp	x8, #0x200
  420970:	csel	x25, x8, x28, lt  // lt = tstop
  420974:	add	x1, sp, #0x48
  420978:	mov	x2, x25
  42097c:	bl	44932c <argp_parse@@Base+0xec80>
  420980:	cmn	x0, #0x1
  420984:	b.eq	420b70 <wcrtomb@plt+0x1c080>  // b.none
  420988:	cbz	x0, 420b88 <wcrtomb@plt+0x1c098>
  42098c:	add	x8, sp, #0x48
  420990:	mov	x9, x0
  420994:	cbz	x9, 4209a8 <wcrtomb@plt+0x1beb8>
  420998:	ldrb	w10, [x8], #1
  42099c:	sub	x9, x9, #0x1
  4209a0:	cbz	w10, 420994 <wcrtomb@plt+0x1bea4>
  4209a4:	b	420a6c <wcrtomb@plt+0x1bf7c>
  4209a8:	add	x24, x0, x24
  4209ac:	cmp	x24, x26
  4209b0:	b.lt	420964 <wcrtomb@plt+0x1be74>  // b.tstop
  4209b4:	ldr	x8, [sp, #24]
  4209b8:	mov	x0, sp
  4209bc:	ldr	x8, [x8, #304]
  4209c0:	ldr	x1, [x8, x19]
  4209c4:	bl	421678 <wcrtomb@plt+0x1cb88>
  4209c8:	tbz	w0, #0, 420aa0 <wcrtomb@plt+0x1bfb0>
  4209cc:	ldp	x9, x8, [sp, #16]
  4209d0:	ldr	x10, [x8, #304]
  4209d4:	ldr	x8, [x8, #264]
  4209d8:	add	x10, x10, x27, lsl #4
  4209dc:	ldr	x19, [x10, #8]
  4209e0:	sub	x0, x8, x9
  4209e4:	bl	404d8c <wcrtomb@plt+0x29c>
  4209e8:	cmp	x19, #0x1
  4209ec:	b.lt	420ac4 <wcrtomb@plt+0x1bfd4>  // b.tstop
  4209f0:	cmp	x19, #0x200
  4209f4:	csel	x24, x19, x28, lt  // lt = tstop
  4209f8:	bl	405310 <wcrtomb@plt+0x820>
  4209fc:	cbz	x0, 420acc <wcrtomb@plt+0x1bfdc>
  420a00:	mov	x25, x0
  420a04:	bl	405640 <wcrtomb@plt+0xb50>
  420a08:	ldr	x8, [sp, #16]
  420a0c:	ldr	w0, [sp]
  420a10:	add	x1, sp, #0x48
  420a14:	mov	x2, x24
  420a18:	add	x8, x8, #0x200
  420a1c:	str	x8, [sp, #16]
  420a20:	bl	44932c <argp_parse@@Base+0xec80>
  420a24:	cbz	x0, 420b28 <wcrtomb@plt+0x1c038>
  420a28:	mov	x26, x0
  420a2c:	cmn	x0, #0x1
  420a30:	b.eq	420b4c <wcrtomb@plt+0x1c05c>  // b.none
  420a34:	ldp	x9, x8, [sp, #16]
  420a38:	ldr	x8, [x8, #264]
  420a3c:	sub	x0, x8, x9
  420a40:	bl	404d8c <wcrtomb@plt+0x29c>
  420a44:	add	x1, sp, #0x48
  420a48:	mov	x0, x25
  420a4c:	mov	x2, x24
  420a50:	bl	404400 <bcmp@plt>
  420a54:	cbnz	w0, 420b08 <wcrtomb@plt+0x1c018>
  420a58:	sub	x19, x19, x26
  420a5c:	cmp	x19, #0x0
  420a60:	mov	w9, #0x1                   	// #1
  420a64:	b.gt	4209f0 <wcrtomb@plt+0x1bf00>
  420a68:	b	420aa4 <wcrtomb@plt+0x1bfb4>
  420a6c:	ldr	x25, [sp, #24]
  420a70:	mov	w2, #0x5                   	// #5
  420a74:	mov	x0, xzr
  420a78:	mov	x1, x20
  420a7c:	bl	4048b0 <dcgettext@plt>
  420a80:	mov	x26, x0
  420a84:	add	x1, sp, #0x30
  420a88:	mov	x0, x24
  420a8c:	bl	440200 <argp_parse@@Base+0x5b54>
  420a90:	mov	x2, x0
  420a94:	mov	x0, x25
  420a98:	mov	x1, x26
  420a9c:	bl	409704 <wcrtomb@plt+0x4c14>
  420aa0:	mov	w9, wzr
  420aa4:	ldr	x8, [sp, #24]
  420aa8:	ldr	x10, [x8, #304]
  420aac:	add	x10, x10, x27, lsl #4
  420ab0:	ldp	x11, x10, [x10]
  420ab4:	add	x27, x27, #0x1
  420ab8:	add	x24, x10, x11
  420abc:	tbnz	w9, #0, 420934 <wcrtomb@plt+0x1be44>
  420ac0:	b	4208b0 <wcrtomb@plt+0x1bdc0>
  420ac4:	mov	w9, #0x1                   	// #1
  420ac8:	b	420aa4 <wcrtomb@plt+0x1bfb4>
  420acc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420ad0:	ldr	x8, [x8, #4000]
  420ad4:	cbz	x8, 420adc <wcrtomb@plt+0x1bfec>
  420ad8:	blr	x8
  420adc:	mov	w2, #0x5                   	// #5
  420ae0:	mov	x0, xzr
  420ae4:	mov	x1, x21
  420ae8:	bl	4048b0 <dcgettext@plt>
  420aec:	mov	x2, x0
  420af0:	mov	w0, wzr
  420af4:	mov	w1, wzr
  420af8:	bl	403f60 <error@plt>
  420afc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420b00:	str	w22, [x8, #2352]
  420b04:	b	420aa0 <wcrtomb@plt+0x1bfb0>
  420b08:	ldr	x24, [sp, #24]
  420b0c:	mov	w2, #0x5                   	// #5
  420b10:	mov	x0, xzr
  420b14:	mov	x1, x23
  420b18:	bl	4048b0 <dcgettext@plt>
  420b1c:	mov	x1, x0
  420b20:	mov	x0, x24
  420b24:	b	420b44 <wcrtomb@plt+0x1c054>
  420b28:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  420b2c:	mov	w2, #0x5                   	// #5
  420b30:	add	x1, x1, #0x80b
  420b34:	bl	4048b0 <dcgettext@plt>
  420b38:	mov	x1, x0
  420b3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420b40:	add	x0, x0, #0xc10
  420b44:	bl	409704 <wcrtomb@plt+0x4c14>
  420b48:	b	420aa0 <wcrtomb@plt+0x1bfb0>
  420b4c:	ldr	x8, [sp, #24]
  420b50:	mov	x2, x24
  420b54:	ldr	x9, [x8, #304]
  420b58:	ldr	x0, [x8]
  420b5c:	add	x9, x9, x27, lsl #4
  420b60:	ldp	x10, x9, [x9]
  420b64:	sub	x8, x10, x19
  420b68:	add	x1, x8, x9
  420b6c:	b	420b80 <wcrtomb@plt+0x1c090>
  420b70:	ldr	x8, [sp, #24]
  420b74:	mov	x1, x24
  420b78:	mov	x2, x25
  420b7c:	ldr	x0, [x8]
  420b80:	bl	41cf78 <wcrtomb@plt+0x18488>
  420b84:	b	420aa0 <wcrtomb@plt+0x1bfb0>
  420b88:	ldr	x24, [sp, #24]
  420b8c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  420b90:	mov	w2, #0x5                   	// #5
  420b94:	add	x1, x1, #0x80b
  420b98:	bl	4048b0 <dcgettext@plt>
  420b9c:	mov	x1, x0
  420ba0:	mov	x0, x24
  420ba4:	bl	409704 <wcrtomb@plt+0x4c14>
  420ba8:	b	420aa0 <wcrtomb@plt+0x1bfb0>
  420bac:	mov	w19, #0x1                   	// #1
  420bb0:	bl	404d34 <wcrtomb@plt+0x244>
  420bb4:	ldr	x8, [sp, #32]
  420bb8:	ldr	x8, [x8, #8]
  420bbc:	cbz	x8, 4208dc <wcrtomb@plt+0x1bdec>
  420bc0:	mov	x0, sp
  420bc4:	blr	x8
  420bc8:	b	4208dc <wcrtomb@plt+0x1bdec>
  420bcc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420bd0:	ldr	x8, [x8, #2968]
  420bd4:	ldrb	w8, [x8, #156]
  420bd8:	cmp	w8, #0x53
  420bdc:	cset	w0, eq  // eq = none
  420be0:	ret
  420be4:	stp	x29, x30, [sp, #-80]!
  420be8:	str	x25, [sp, #16]
  420bec:	stp	x24, x23, [sp, #32]
  420bf0:	stp	x22, x21, [sp, #48]
  420bf4:	stp	x20, x19, [sp, #64]
  420bf8:	mov	x29, sp
  420bfc:	mov	x19, x0
  420c00:	bl	4052a4 <wcrtomb@plt+0x7b4>
  420c04:	ldr	x8, [x19, #24]
  420c08:	mov	x20, x0
  420c0c:	mov	x0, x8
  420c10:	bl	40b088 <wcrtomb@plt+0x6598>
  420c14:	mov	w8, #0x53                  	// #83
  420c18:	strb	w8, [x0, #156]
  420c1c:	ldr	x8, [x19, #24]
  420c20:	mov	x21, x0
  420c24:	ldr	x9, [x8, #288]
  420c28:	cmp	x9, #0x5
  420c2c:	b.cc	420c3c <wcrtomb@plt+0x1c14c>  // b.lo, b.ul, b.last
  420c30:	mov	w8, #0x1                   	// #1
  420c34:	strb	w8, [x21, #482]
  420c38:	ldr	x8, [x19, #24]
  420c3c:	ldr	x0, [x8, #136]
  420c40:	add	x1, x21, #0x1e3
  420c44:	mov	w2, #0xc                   	// #12
  420c48:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  420c4c:	ldr	x8, [x19, #24]
  420c50:	add	x1, x21, #0x7c
  420c54:	mov	w2, #0xc                   	// #12
  420c58:	ldr	x0, [x8, #264]
  420c5c:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  420c60:	ldr	x8, [x19, #24]
  420c64:	ldr	x9, [x8, #288]
  420c68:	cbz	x9, 420cd0 <wcrtomb@plt+0x1c1e0>
  420c6c:	mov	x24, xzr
  420c70:	mov	x23, xzr
  420c74:	add	x22, x21, #0x182
  420c78:	ldr	x8, [x8, #304]
  420c7c:	mov	w2, #0xc                   	// #12
  420c80:	mov	x1, x22
  420c84:	ldr	x0, [x8, x24]
  420c88:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  420c8c:	ldr	x8, [x19, #24]
  420c90:	add	x1, x22, #0xc
  420c94:	mov	w2, #0xc                   	// #12
  420c98:	ldr	x8, [x8, #304]
  420c9c:	add	x8, x8, x24
  420ca0:	ldr	x0, [x8, #8]
  420ca4:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  420ca8:	ldr	x8, [x19, #24]
  420cac:	cmp	x23, #0x3
  420cb0:	add	x23, x23, #0x1
  420cb4:	ldr	x9, [x8, #288]
  420cb8:	b.eq	420cd4 <wcrtomb@plt+0x1c1e4>  // b.none
  420cbc:	add	x24, x24, #0x10
  420cc0:	cmp	x23, x9
  420cc4:	add	x22, x22, #0x18
  420cc8:	b.cc	420c78 <wcrtomb@plt+0x1c188>  // b.lo, b.ul, b.last
  420ccc:	b	420cd4 <wcrtomb@plt+0x1c1e4>
  420cd0:	mov	x23, xzr
  420cd4:	cmp	x23, x9
  420cd8:	cset	w8, cc  // cc = lo, ul, last
  420cdc:	strb	w8, [x21, #482]
  420ce0:	ldr	x0, [x19, #24]
  420ce4:	mov	x1, x21
  420ce8:	mov	x2, x20
  420cec:	bl	40bc00 <wcrtomb@plt+0x7110>
  420cf0:	ldr	x8, [x19, #24]
  420cf4:	ldr	x8, [x8, #288]
  420cf8:	cmp	x23, x8
  420cfc:	b.cs	420dec <wcrtomb@plt+0x1c2fc>  // b.hs, b.nlast
  420d00:	mov	w22, #0x1                   	// #1
  420d04:	b	420d20 <wcrtomb@plt+0x1c230>
  420d08:	mov	x0, x20
  420d0c:	bl	405640 <wcrtomb@plt+0xb50>
  420d10:	ldr	x8, [x19, #24]
  420d14:	ldr	x8, [x8, #288]
  420d18:	cmp	x23, x8
  420d1c:	b.cs	420dec <wcrtomb@plt+0x1c2fc>  // b.hs, b.nlast
  420d20:	bl	405310 <wcrtomb@plt+0x820>
  420d24:	movi	v0.2d, #0x0
  420d28:	stp	q0, q0, [x0]
  420d2c:	stp	q0, q0, [x0, #32]
  420d30:	stp	q0, q0, [x0, #64]
  420d34:	stp	q0, q0, [x0, #96]
  420d38:	stp	q0, q0, [x0, #128]
  420d3c:	stp	q0, q0, [x0, #160]
  420d40:	stp	q0, q0, [x0, #192]
  420d44:	stp	q0, q0, [x0, #224]
  420d48:	stp	q0, q0, [x0, #256]
  420d4c:	stp	q0, q0, [x0, #288]
  420d50:	stp	q0, q0, [x0, #320]
  420d54:	stp	q0, q0, [x0, #352]
  420d58:	stp	q0, q0, [x0, #384]
  420d5c:	stp	q0, q0, [x0, #416]
  420d60:	stp	q0, q0, [x0, #448]
  420d64:	stp	q0, q0, [x0, #480]
  420d68:	ldr	x8, [x19, #24]
  420d6c:	mov	x20, x0
  420d70:	ldr	x9, [x8, #288]
  420d74:	cmp	x23, x9
  420d78:	b.cs	420ddc <wcrtomb@plt+0x1c2ec>  // b.hs, b.nlast
  420d7c:	mov	x24, xzr
  420d80:	lsl	x25, x23, #4
  420d84:	ldr	x8, [x8, #304]
  420d88:	add	x21, x20, x24
  420d8c:	mov	w2, #0xc                   	// #12
  420d90:	mov	x1, x21
  420d94:	ldr	x0, [x8, x25]
  420d98:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  420d9c:	ldr	x8, [x19, #24]
  420da0:	add	x1, x21, #0xc
  420da4:	mov	w2, #0xc                   	// #12
  420da8:	ldr	x8, [x8, #304]
  420dac:	add	x8, x8, x25
  420db0:	ldr	x0, [x8, #8]
  420db4:	bl	40a9a4 <wcrtomb@plt+0x5eb4>
  420db8:	ldr	x8, [x19, #24]
  420dbc:	cmp	x24, #0x1e0
  420dc0:	add	x23, x23, #0x1
  420dc4:	ldr	x9, [x8, #288]
  420dc8:	b.eq	420ddc <wcrtomb@plt+0x1c2ec>  // b.none
  420dcc:	add	x25, x25, #0x10
  420dd0:	cmp	x23, x9
  420dd4:	add	x24, x24, #0x18
  420dd8:	b.cc	420d84 <wcrtomb@plt+0x1c294>  // b.lo, b.ul, b.last
  420ddc:	cmp	x23, x9
  420de0:	b.cs	420d08 <wcrtomb@plt+0x1c218>  // b.hs, b.nlast
  420de4:	strb	w22, [x20, #504]
  420de8:	b	420d08 <wcrtomb@plt+0x1c218>
  420dec:	ldp	x20, x19, [sp, #64]
  420df0:	ldp	x22, x21, [sp, #48]
  420df4:	ldp	x24, x23, [sp, #32]
  420df8:	ldr	x25, [sp, #16]
  420dfc:	mov	w0, #0x1                   	// #1
  420e00:	ldp	x29, x30, [sp], #80
  420e04:	ret
  420e08:	stp	x29, x30, [sp, #-32]!
  420e0c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420e10:	ldr	x8, [x8, #2968]
  420e14:	str	x19, [sp, #16]
  420e18:	mov	x19, x0
  420e1c:	mov	w1, #0xc                   	// #12
  420e20:	add	x0, x8, #0x1e3
  420e24:	mov	x29, sp
  420e28:	bl	41a32c <wcrtomb@plt+0x1583c>
  420e2c:	ldr	x8, [x19, #24]
  420e30:	ldr	x19, [sp, #16]
  420e34:	bic	x10, x0, x0, asr #63
  420e38:	lsr	x11, x0, #63
  420e3c:	ldr	x9, [x8, #136]
  420e40:	eor	w0, w11, #0x1
  420e44:	str	x10, [x8, #136]
  420e48:	str	x9, [x8, #264]
  420e4c:	ldp	x29, x30, [sp], #32
  420e50:	ret
  420e54:	stp	x29, x30, [sp, #-96]!
  420e58:	stp	x28, x27, [sp, #16]
  420e5c:	stp	x26, x25, [sp, #32]
  420e60:	stp	x24, x23, [sp, #48]
  420e64:	stp	x22, x21, [sp, #64]
  420e68:	stp	x20, x19, [sp, #80]
  420e6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  420e70:	ldr	x9, [x0, #24]
  420e74:	ldr	x22, [x8, #2968]
  420e78:	mov	x29, sp
  420e7c:	str	xzr, [x9, #288]
  420e80:	ldrb	w8, [x22, #398]
  420e84:	cbz	w8, 421300 <wcrtomb@plt+0x1c810>
  420e88:	mov	x19, x0
  420e8c:	add	x0, x22, #0x182
  420e90:	mov	w1, #0xc                   	// #12
  420e94:	add	x21, x22, #0x18e
  420e98:	bl	41a32c <wcrtomb@plt+0x1583c>
  420e9c:	mov	x20, x0
  420ea0:	mov	w1, #0xc                   	// #12
  420ea4:	mov	x0, x21
  420ea8:	bl	41a32c <wcrtomb@plt+0x1583c>
  420eac:	orr	x8, x0, x20
  420eb0:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  420eb4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  420eb8:	sub	x8, x8, x0
  420ebc:	mov	x21, x0
  420ec0:	cmp	x8, x20
  420ec4:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  420ec8:	ldr	x23, [x19, #24]
  420ecc:	add	x9, x21, x20
  420ed0:	ldr	x8, [x23, #136]
  420ed4:	cmp	x8, x9
  420ed8:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  420edc:	ldr	x8, [x23, #264]
  420ee0:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  420ee4:	ldp	x24, x8, [x23, #288]
  420ee8:	ldr	x0, [x23, #304]
  420eec:	cmp	x24, x8
  420ef0:	b.ne	420f3c <wcrtomb@plt+0x1c44c>  // b.any
  420ef4:	cbz	x0, 420f14 <wcrtomb@plt+0x1c424>
  420ef8:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  420efc:	movk	x8, #0x555, lsl #48
  420f00:	cmp	x24, x8
  420f04:	b.cs	42117c <wcrtomb@plt+0x1c68c>  // b.hs, b.nlast
  420f08:	add	x8, x24, x24, lsr #1
  420f0c:	add	x8, x8, #0x1
  420f10:	b	420f2c <wcrtomb@plt+0x1c43c>
  420f14:	cbz	x24, 420f28 <wcrtomb@plt+0x1c438>
  420f18:	lsr	x9, x24, #59
  420f1c:	mov	x8, x24
  420f20:	cbz	x9, 420f2c <wcrtomb@plt+0x1c43c>
  420f24:	b	42117c <wcrtomb@plt+0x1c68c>
  420f28:	mov	w8, #0x8                   	// #8
  420f2c:	lsl	x1, x8, #4
  420f30:	str	x8, [x23, #296]
  420f34:	bl	44a090 <argp_parse@@Base+0xf9e4>
  420f38:	str	x0, [x23, #304]
  420f3c:	add	x8, x0, x24, lsl #4
  420f40:	add	x9, x24, #0x1
  420f44:	stp	x20, x21, [x8]
  420f48:	str	x9, [x23, #288]
  420f4c:	ldrb	w8, [x22, #422]
  420f50:	cbz	w8, 421300 <wcrtomb@plt+0x1c810>
  420f54:	add	x0, x22, #0x19a
  420f58:	mov	w1, #0xc                   	// #12
  420f5c:	add	x21, x22, #0x1a6
  420f60:	bl	41a32c <wcrtomb@plt+0x1583c>
  420f64:	mov	x20, x0
  420f68:	mov	w1, #0xc                   	// #12
  420f6c:	mov	x0, x21
  420f70:	bl	41a32c <wcrtomb@plt+0x1583c>
  420f74:	orr	x8, x0, x20
  420f78:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  420f7c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  420f80:	sub	x8, x8, x0
  420f84:	mov	x21, x0
  420f88:	cmp	x8, x20
  420f8c:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  420f90:	ldr	x23, [x19, #24]
  420f94:	add	x9, x21, x20
  420f98:	ldr	x8, [x23, #136]
  420f9c:	cmp	x8, x9
  420fa0:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  420fa4:	ldr	x8, [x23, #264]
  420fa8:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  420fac:	ldp	x24, x8, [x23, #288]
  420fb0:	ldr	x0, [x23, #304]
  420fb4:	cmp	x24, x8
  420fb8:	b.ne	421004 <wcrtomb@plt+0x1c514>  // b.any
  420fbc:	cbz	x0, 420fdc <wcrtomb@plt+0x1c4ec>
  420fc0:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  420fc4:	movk	x8, #0x555, lsl #48
  420fc8:	cmp	x24, x8
  420fcc:	b.cs	42117c <wcrtomb@plt+0x1c68c>  // b.hs, b.nlast
  420fd0:	add	x8, x24, x24, lsr #1
  420fd4:	add	x8, x8, #0x1
  420fd8:	b	420ff4 <wcrtomb@plt+0x1c504>
  420fdc:	cbz	x24, 420ff0 <wcrtomb@plt+0x1c500>
  420fe0:	lsr	x9, x24, #59
  420fe4:	mov	x8, x24
  420fe8:	cbz	x9, 420ff4 <wcrtomb@plt+0x1c504>
  420fec:	b	42117c <wcrtomb@plt+0x1c68c>
  420ff0:	mov	w8, #0x8                   	// #8
  420ff4:	lsl	x1, x8, #4
  420ff8:	str	x8, [x23, #296]
  420ffc:	bl	44a090 <argp_parse@@Base+0xf9e4>
  421000:	str	x0, [x23, #304]
  421004:	add	x8, x0, x24, lsl #4
  421008:	add	x9, x24, #0x1
  42100c:	stp	x20, x21, [x8]
  421010:	str	x9, [x23, #288]
  421014:	ldrb	w8, [x22, #446]
  421018:	cbz	w8, 421300 <wcrtomb@plt+0x1c810>
  42101c:	add	x0, x22, #0x1b2
  421020:	mov	w1, #0xc                   	// #12
  421024:	add	x21, x22, #0x1be
  421028:	bl	41a32c <wcrtomb@plt+0x1583c>
  42102c:	mov	x20, x0
  421030:	mov	w1, #0xc                   	// #12
  421034:	mov	x0, x21
  421038:	bl	41a32c <wcrtomb@plt+0x1583c>
  42103c:	orr	x8, x0, x20
  421040:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  421044:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  421048:	sub	x8, x8, x0
  42104c:	mov	x21, x0
  421050:	cmp	x8, x20
  421054:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  421058:	ldr	x23, [x19, #24]
  42105c:	add	x9, x21, x20
  421060:	ldr	x8, [x23, #136]
  421064:	cmp	x8, x9
  421068:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  42106c:	ldr	x8, [x23, #264]
  421070:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  421074:	ldp	x24, x8, [x23, #288]
  421078:	ldr	x0, [x23, #304]
  42107c:	cmp	x24, x8
  421080:	b.ne	4210cc <wcrtomb@plt+0x1c5dc>  // b.any
  421084:	cbz	x0, 4210a4 <wcrtomb@plt+0x1c5b4>
  421088:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  42108c:	movk	x8, #0x555, lsl #48
  421090:	cmp	x24, x8
  421094:	b.cs	42117c <wcrtomb@plt+0x1c68c>  // b.hs, b.nlast
  421098:	add	x8, x24, x24, lsr #1
  42109c:	add	x8, x8, #0x1
  4210a0:	b	4210bc <wcrtomb@plt+0x1c5cc>
  4210a4:	cbz	x24, 4210b8 <wcrtomb@plt+0x1c5c8>
  4210a8:	lsr	x9, x24, #59
  4210ac:	mov	x8, x24
  4210b0:	cbz	x9, 4210bc <wcrtomb@plt+0x1c5cc>
  4210b4:	b	42117c <wcrtomb@plt+0x1c68c>
  4210b8:	mov	w8, #0x8                   	// #8
  4210bc:	lsl	x1, x8, #4
  4210c0:	str	x8, [x23, #296]
  4210c4:	bl	44a090 <argp_parse@@Base+0xf9e4>
  4210c8:	str	x0, [x23, #304]
  4210cc:	add	x8, x0, x24, lsl #4
  4210d0:	add	x9, x24, #0x1
  4210d4:	stp	x20, x21, [x8]
  4210d8:	str	x9, [x23, #288]
  4210dc:	ldrb	w8, [x22, #470]
  4210e0:	cbz	w8, 421300 <wcrtomb@plt+0x1c810>
  4210e4:	add	x0, x22, #0x1ca
  4210e8:	mov	w1, #0xc                   	// #12
  4210ec:	add	x21, x22, #0x1d6
  4210f0:	bl	41a32c <wcrtomb@plt+0x1583c>
  4210f4:	mov	x20, x0
  4210f8:	mov	w1, #0xc                   	// #12
  4210fc:	mov	x0, x21
  421100:	bl	41a32c <wcrtomb@plt+0x1583c>
  421104:	orr	x8, x0, x20
  421108:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  42110c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  421110:	sub	x8, x8, x0
  421114:	mov	x21, x0
  421118:	cmp	x8, x20
  42111c:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  421120:	ldr	x23, [x19, #24]
  421124:	add	x9, x21, x20
  421128:	ldr	x8, [x23, #136]
  42112c:	cmp	x8, x9
  421130:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  421134:	ldr	x8, [x23, #264]
  421138:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  42113c:	ldp	x24, x8, [x23, #288]
  421140:	ldr	x0, [x23, #304]
  421144:	cmp	x24, x8
  421148:	b.ne	421194 <wcrtomb@plt+0x1c6a4>  // b.any
  42114c:	cbz	x0, 42116c <wcrtomb@plt+0x1c67c>
  421150:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  421154:	movk	x8, #0x555, lsl #48
  421158:	cmp	x24, x8
  42115c:	b.cs	42117c <wcrtomb@plt+0x1c68c>  // b.hs, b.nlast
  421160:	add	x8, x24, x24, lsr #1
  421164:	add	x8, x8, #0x1
  421168:	b	421184 <wcrtomb@plt+0x1c694>
  42116c:	cbz	x24, 421180 <wcrtomb@plt+0x1c690>
  421170:	lsr	x9, x24, #59
  421174:	mov	x8, x24
  421178:	cbz	x9, 421184 <wcrtomb@plt+0x1c694>
  42117c:	bl	40eb80 <wcrtomb@plt+0xa090>
  421180:	mov	w8, #0x8                   	// #8
  421184:	lsl	x1, x8, #4
  421188:	str	x8, [x23, #296]
  42118c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  421190:	str	x0, [x23, #304]
  421194:	add	x8, x0, x24, lsl #4
  421198:	add	x9, x24, #0x1
  42119c:	stp	x20, x21, [x8]
  4211a0:	str	x9, [x23, #288]
  4211a4:	ldrb	w8, [x22, #482]
  4211a8:	cbz	w8, 421300 <wcrtomb@plt+0x1c810>
  4211ac:	mov	x25, #0x5555555555555555    	// #6148914691236517205
  4211b0:	movk	x25, #0x555, lsl #48
  4211b4:	mov	x24, #0x7fffffffffffffff    	// #9223372036854775807
  4211b8:	bl	405310 <wcrtomb@plt+0x820>
  4211bc:	cbz	x0, 421320 <wcrtomb@plt+0x1c830>
  4211c0:	mov	x20, x0
  4211c4:	bl	405640 <wcrtomb@plt+0xb50>
  4211c8:	mov	x23, x20
  4211cc:	add	x20, x20, #0xc
  4211d0:	mov	x26, #0xffffffffffffffff    	// #-1
  4211d4:	b	42120c <wcrtomb@plt+0x1c71c>
  4211d8:	mov	w8, #0x8                   	// #8
  4211dc:	lsl	x1, x8, #4
  4211e0:	str	x8, [x27, #296]
  4211e4:	bl	44a090 <argp_parse@@Base+0xf9e4>
  4211e8:	str	x0, [x27, #304]
  4211ec:	add	x26, x26, #0x1
  4211f0:	add	x8, x0, x28, lsl #4
  4211f4:	add	x9, x28, #0x1
  4211f8:	cmp	x26, #0x14
  4211fc:	add	x20, x20, #0x18
  421200:	stp	x21, x22, [x8]
  421204:	str	x9, [x27, #288]
  421208:	b.cs	4212a0 <wcrtomb@plt+0x1c7b0>  // b.hs, b.nlast
  42120c:	ldrb	w8, [x20]
  421210:	cbz	w8, 421300 <wcrtomb@plt+0x1c810>
  421214:	sub	x0, x20, #0xc
  421218:	mov	w1, #0xc                   	// #12
  42121c:	bl	41a32c <wcrtomb@plt+0x1583c>
  421220:	mov	x21, x0
  421224:	mov	w1, #0xc                   	// #12
  421228:	mov	x0, x20
  42122c:	bl	41a32c <wcrtomb@plt+0x1583c>
  421230:	orr	x8, x0, x21
  421234:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  421238:	sub	x8, x24, x0
  42123c:	mov	x22, x0
  421240:	cmp	x8, x21
  421244:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  421248:	ldr	x27, [x19, #24]
  42124c:	add	x9, x22, x21
  421250:	ldr	x8, [x27, #136]
  421254:	cmp	x8, x9
  421258:	b.lt	4212b0 <wcrtomb@plt+0x1c7c0>  // b.tstop
  42125c:	ldr	x8, [x27, #264]
  421260:	tbnz	x8, #63, 4212b0 <wcrtomb@plt+0x1c7c0>
  421264:	ldp	x28, x8, [x27, #288]
  421268:	ldr	x0, [x27, #304]
  42126c:	cmp	x28, x8
  421270:	b.ne	4211ec <wcrtomb@plt+0x1c6fc>  // b.any
  421274:	cbz	x0, 42128c <wcrtomb@plt+0x1c79c>
  421278:	cmp	x28, x25
  42127c:	b.cs	42117c <wcrtomb@plt+0x1c68c>  // b.hs, b.nlast
  421280:	add	x8, x28, x28, lsr #1
  421284:	add	x8, x8, #0x1
  421288:	b	4211dc <wcrtomb@plt+0x1c6ec>
  42128c:	cbz	x28, 4211d8 <wcrtomb@plt+0x1c6e8>
  421290:	lsr	x9, x28, #59
  421294:	mov	x8, x28
  421298:	cbz	x9, 4211dc <wcrtomb@plt+0x1c6ec>
  42129c:	b	42117c <wcrtomb@plt+0x1c68c>
  4212a0:	ldrb	w8, [x23, #504]
  4212a4:	mov	w0, #0x1                   	// #1
  4212a8:	cbnz	w8, 4211b8 <wcrtomb@plt+0x1c6c8>
  4212ac:	b	421304 <wcrtomb@plt+0x1c814>
  4212b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4212b4:	ldr	x8, [x8, #4000]
  4212b8:	cbz	x8, 4212c0 <wcrtomb@plt+0x1c7d0>
  4212bc:	blr	x8
  4212c0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4212c4:	add	x1, x1, #0x230
  4212c8:	mov	w2, #0x5                   	// #5
  4212cc:	mov	x0, xzr
  4212d0:	bl	4048b0 <dcgettext@plt>
  4212d4:	ldr	x8, [x19, #24]
  4212d8:	mov	x2, x0
  4212dc:	mov	w0, wzr
  4212e0:	mov	w1, wzr
  4212e4:	ldr	x3, [x8]
  4212e8:	bl	403f60 <error@plt>
  4212ec:	mov	w0, wzr
  4212f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4212f4:	mov	w9, #0x2                   	// #2
  4212f8:	str	w9, [x8, #2352]
  4212fc:	b	421304 <wcrtomb@plt+0x1c814>
  421300:	mov	w0, #0x1                   	// #1
  421304:	ldp	x20, x19, [sp, #80]
  421308:	ldp	x22, x21, [sp, #64]
  42130c:	ldp	x24, x23, [sp, #48]
  421310:	ldp	x26, x25, [sp, #32]
  421314:	ldp	x28, x27, [sp, #16]
  421318:	ldp	x29, x30, [sp], #96
  42131c:	ret
  421320:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421324:	ldr	x8, [x8, #4000]
  421328:	cbz	x8, 421330 <wcrtomb@plt+0x1c840>
  42132c:	blr	x8
  421330:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  421334:	add	x1, x1, #0x818
  421338:	mov	w2, #0x5                   	// #5
  42133c:	mov	x0, xzr
  421340:	bl	4048b0 <dcgettext@plt>
  421344:	mov	x2, x0
  421348:	mov	w0, wzr
  42134c:	mov	w1, wzr
  421350:	bl	403f60 <error@plt>
  421354:	b	4212ec <wcrtomb@plt+0x1c7fc>
  421358:	sub	sp, sp, #0xf0
  42135c:	stp	x29, x30, [sp, #160]
  421360:	stp	x24, x23, [sp, #192]
  421364:	stp	x22, x21, [sp, #208]
  421368:	stp	x20, x19, [sp, #224]
  42136c:	ldr	x8, [x0, #24]
  421370:	str	x25, [sp, #176]
  421374:	mov	x20, x1
  421378:	add	x29, sp, #0xa0
  42137c:	ldr	x8, [x8, #304]
  421380:	mov	x19, x0
  421384:	add	x8, x8, x1, lsl #4
  421388:	ldp	x1, x24, [x8]
  42138c:	bl	421678 <wcrtomb@plt+0x1cb88>
  421390:	tbz	w0, #0, 421508 <wcrtomb@plt+0x1ca18>
  421394:	cmp	x24, #0x1
  421398:	b.lt	421404 <wcrtomb@plt+0x1c914>  // b.tstop
  42139c:	mov	w25, #0x200                 	// #512
  4213a0:	cmp	x24, #0x200
  4213a4:	csel	x21, x24, x25, lt  // lt = tstop
  4213a8:	bl	405310 <wcrtomb@plt+0x820>
  4213ac:	ldr	w8, [x19]
  4213b0:	mov	x22, x0
  4213b4:	mov	x1, x22
  4213b8:	mov	x2, x21
  4213bc:	mov	w0, w8
  4213c0:	bl	44932c <argp_parse@@Base+0xec80>
  4213c4:	cbz	x0, 42140c <wcrtomb@plt+0x1c91c>
  4213c8:	mov	x23, x0
  4213cc:	cmn	x0, #0x1
  4213d0:	b.eq	42144c <wcrtomb@plt+0x1c95c>  // b.none
  4213d4:	add	x0, x22, x23
  4213d8:	sub	x2, x25, x23
  4213dc:	mov	w1, wzr
  4213e0:	bl	404320 <memset@plt>
  4213e4:	ldr	x8, [x19, #16]
  4213e8:	mov	x0, x22
  4213ec:	sub	x24, x24, x23
  4213f0:	add	x8, x8, x23
  4213f4:	str	x8, [x19, #16]
  4213f8:	bl	405640 <wcrtomb@plt+0xb50>
  4213fc:	cmp	x24, #0x0
  421400:	b.gt	4213a0 <wcrtomb@plt+0x1c8b0>
  421404:	mov	w0, #0x1                   	// #1
  421408:	b	42150c <wcrtomb@plt+0x1ca1c>
  42140c:	ldr	w1, [x19]
  421410:	add	x2, sp, #0x8
  421414:	bl	404890 <__fxstat@plt>
  421418:	ldr	x9, [x19, #24]
  42141c:	ldr	x8, [x9, #136]
  421420:	cbz	w0, 421474 <wcrtomb@plt+0x1c984>
  421424:	ldr	x9, [x9, #304]
  421428:	add	x8, x8, x24
  42142c:	add	x9, x9, x20, lsl #4
  421430:	ldp	x10, x9, [x9]
  421434:	sub	x8, x8, x10
  421438:	sub	x20, x8, x9
  42143c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  421440:	ldrb	w8, [x8, #3712]
  421444:	tbnz	w8, #7, 421488 <wcrtomb@plt+0x1c998>
  421448:	b	4214f4 <wcrtomb@plt+0x1ca04>
  42144c:	ldr	x8, [x19, #24]
  421450:	mov	x2, x21
  421454:	ldr	x9, [x8, #304]
  421458:	ldr	x0, [x8]
  42145c:	add	x9, x9, x20, lsl #4
  421460:	ldp	x10, x9, [x9]
  421464:	sub	x8, x10, x24
  421468:	add	x1, x8, x9
  42146c:	bl	41cf78 <wcrtomb@plt+0x18488>
  421470:	b	421508 <wcrtomb@plt+0x1ca18>
  421474:	ldr	x9, [sp, #56]
  421478:	sub	x20, x8, x9
  42147c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  421480:	ldrb	w8, [x8, #3712]
  421484:	tbz	w8, #7, 4214f4 <wcrtomb@plt+0x1ca04>
  421488:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42148c:	ldr	x8, [x8, #4000]
  421490:	cbz	x8, 421498 <wcrtomb@plt+0x1c9a8>
  421494:	blr	x8
  421498:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  42149c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4214a0:	add	x1, x1, #0xbc5
  4214a4:	add	x2, x2, #0xbf4
  4214a8:	mov	w4, #0x5                   	// #5
  4214ac:	mov	x0, xzr
  4214b0:	mov	x3, x20
  4214b4:	bl	4047d0 <dcngettext@plt>
  4214b8:	ldr	x8, [x19, #24]
  4214bc:	mov	x19, x0
  4214c0:	ldr	x8, [x8]
  4214c4:	mov	x0, x8
  4214c8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  4214cc:	mov	x21, x0
  4214d0:	sub	x1, x29, #0x18
  4214d4:	mov	x0, x20
  4214d8:	bl	440290 <argp_parse@@Base+0x5be4>
  4214dc:	mov	x4, x0
  4214e0:	mov	w0, wzr
  4214e4:	mov	w1, wzr
  4214e8:	mov	x2, x19
  4214ec:	mov	x3, x21
  4214f0:	bl	403f60 <error@plt>
  4214f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4214f8:	ldrb	w8, [x8, #3945]
  4214fc:	cbnz	w8, 421508 <wcrtomb@plt+0x1ca18>
  421500:	mov	w0, #0x1                   	// #1
  421504:	bl	425e70 <wcrtomb@plt+0x21380>
  421508:	mov	w0, wzr
  42150c:	ldp	x20, x19, [sp, #224]
  421510:	ldp	x22, x21, [sp, #208]
  421514:	ldp	x24, x23, [sp, #192]
  421518:	ldr	x25, [sp, #176]
  42151c:	ldp	x29, x30, [sp, #160]
  421520:	add	sp, sp, #0xf0
  421524:	ret
  421528:	stp	x29, x30, [sp, #-64]!
  42152c:	stp	x22, x21, [sp, #32]
  421530:	stp	x20, x19, [sp, #48]
  421534:	ldr	x8, [x0, #24]
  421538:	lsl	x9, x1, #4
  42153c:	mov	x20, x1
  421540:	str	x23, [sp, #16]
  421544:	ldr	x8, [x8, #304]
  421548:	mov	x29, sp
  42154c:	mov	x19, x0
  421550:	ldr	x1, [x8, x9]
  421554:	bl	421678 <wcrtomb@plt+0x1cb88>
  421558:	tbz	w0, #0, 4215f0 <wcrtomb@plt+0x1cb00>
  42155c:	ldr	x8, [x19, #24]
  421560:	ldr	x8, [x8, #304]
  421564:	add	x8, x8, x20, lsl #4
  421568:	ldr	x22, [x8, #8]
  42156c:	cbz	x22, 4215f8 <wcrtomb@plt+0x1cb08>
  421570:	mov	w23, #0x200                 	// #512
  421574:	cmp	x22, #0x1
  421578:	b.lt	421618 <wcrtomb@plt+0x1cb28>  // b.tstop
  42157c:	cmp	x22, #0x200
  421580:	csel	x20, x22, x23, lt  // lt = tstop
  421584:	bl	405310 <wcrtomb@plt+0x820>
  421588:	cbz	x0, 421620 <wcrtomb@plt+0x1cb30>
  42158c:	mov	x21, x0
  421590:	bl	405640 <wcrtomb@plt+0xb50>
  421594:	ldr	x8, [x19, #16]
  421598:	ldr	w0, [x19]
  42159c:	mov	x1, x21
  4215a0:	mov	x2, x20
  4215a4:	add	x8, x8, #0x200
  4215a8:	str	x8, [x19, #16]
  4215ac:	bl	41c9b4 <wcrtomb@plt+0x17ec4>
  4215b0:	ldp	x9, x8, [x19, #16]
  4215b4:	mov	x21, x0
  4215b8:	sub	x22, x22, x0
  4215bc:	ldr	x8, [x8, #264]
  4215c0:	sub	x0, x8, x9
  4215c4:	bl	404d8c <wcrtomb@plt+0x29c>
  4215c8:	ldr	x8, [x19, #8]
  4215cc:	cmp	x21, x20
  4215d0:	add	x8, x8, x21
  4215d4:	str	x8, [x19, #8]
  4215d8:	b.eq	421574 <wcrtomb@plt+0x1ca84>  // b.none
  4215dc:	ldr	x8, [x19, #24]
  4215e0:	mov	x1, x21
  4215e4:	mov	x2, x20
  4215e8:	ldr	x0, [x8]
  4215ec:	bl	42d8e4 <wcrtomb@plt+0x28df4>
  4215f0:	mov	w0, wzr
  4215f4:	b	421664 <wcrtomb@plt+0x1cb74>
  4215f8:	ldrb	w8, [x19, #4]
  4215fc:	cbz	w8, 421618 <wcrtomb@plt+0x1cb28>
  421600:	ldr	w0, [x19]
  421604:	bl	42338c <wcrtomb@plt+0x1e89c>
  421608:	cbz	w0, 421618 <wcrtomb@plt+0x1cb28>
  42160c:	ldr	x8, [x19, #24]
  421610:	ldr	x0, [x8]
  421614:	bl	42d660 <wcrtomb@plt+0x28b70>
  421618:	mov	w0, #0x1                   	// #1
  42161c:	b	421664 <wcrtomb@plt+0x1cb74>
  421620:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421624:	ldr	x8, [x8, #4000]
  421628:	cbz	x8, 421630 <wcrtomb@plt+0x1cb40>
  42162c:	blr	x8
  421630:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  421634:	add	x1, x1, #0x818
  421638:	mov	w2, #0x5                   	// #5
  42163c:	mov	x0, xzr
  421640:	bl	4048b0 <dcgettext@plt>
  421644:	mov	x2, x0
  421648:	mov	w0, wzr
  42164c:	mov	w1, wzr
  421650:	bl	403f60 <error@plt>
  421654:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421658:	mov	w9, #0x2                   	// #2
  42165c:	mov	w0, wzr
  421660:	str	w9, [x8, #2352]
  421664:	ldp	x20, x19, [sp, #48]
  421668:	ldp	x22, x21, [sp, #32]
  42166c:	ldr	x23, [sp, #16]
  421670:	ldp	x29, x30, [sp], #64
  421674:	ret
  421678:	stp	x29, x30, [sp, #-48]!
  42167c:	stp	x22, x21, [sp, #16]
  421680:	stp	x20, x19, [sp, #32]
  421684:	ldrb	w8, [x0, #4]
  421688:	mov	x20, x0
  42168c:	mov	x19, x1
  421690:	mov	x29, sp
  421694:	cbz	w8, 4216c0 <wcrtomb@plt+0x1cbd0>
  421698:	ldr	w0, [x20]
  42169c:	mov	x1, x19
  4216a0:	mov	w2, wzr
  4216a4:	bl	4040e0 <lseek@plt>
  4216a8:	tbnz	x0, #63, 4216d8 <wcrtomb@plt+0x1cbe8>
  4216ac:	mov	w0, #0x1                   	// #1
  4216b0:	ldp	x20, x19, [sp, #32]
  4216b4:	ldp	x22, x21, [sp, #16]
  4216b8:	ldp	x29, x30, [sp], #48
  4216bc:	ret
  4216c0:	ldr	x8, [x20, #8]
  4216c4:	cmp	x8, x19
  4216c8:	b.le	4216fc <wcrtomb@plt+0x1cc0c>
  4216cc:	bl	4049c0 <__errno_location@plt>
  4216d0:	mov	w8, #0x16                  	// #22
  4216d4:	str	w8, [x0]
  4216d8:	ldr	x8, [x20, #24]
  4216dc:	mov	x1, x19
  4216e0:	ldr	x0, [x8]
  4216e4:	bl	41cfe4 <wcrtomb@plt+0x184f4>
  4216e8:	mov	w0, wzr
  4216ec:	ldp	x20, x19, [sp, #32]
  4216f0:	ldp	x22, x21, [sp, #16]
  4216f4:	ldp	x29, x30, [sp], #48
  4216f8:	ret
  4216fc:	b.ge	4216ac <wcrtomb@plt+0x1cbbc>  // b.tcont
  421700:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x18e3c>
  421704:	mov	w22, #0x200                 	// #512
  421708:	add	x21, x21, #0x8
  42170c:	ldr	w0, [x20]
  421710:	sub	x8, x19, x8
  421714:	cmp	x8, #0x200
  421718:	csel	x2, x8, x22, lt  // lt = tstop
  42171c:	mov	x1, x21
  421720:	bl	404530 <write@plt>
  421724:	cmp	x0, #0x0
  421728:	b.le	421744 <wcrtomb@plt+0x1cc54>
  42172c:	ldr	x8, [x20, #8]
  421730:	add	x8, x8, x0
  421734:	cmp	x8, x19
  421738:	str	x8, [x20, #8]
  42173c:	b.lt	42170c <wcrtomb@plt+0x1cc1c>  // b.tstop
  421740:	b	4216ac <wcrtomb@plt+0x1cbbc>
  421744:	cbnz	x0, 4216d8 <wcrtomb@plt+0x1cbe8>
  421748:	b	4216cc <wcrtomb@plt+0x1cbdc>
  42174c:	ldr	x8, [x0, #24]
  421750:	ldr	x9, [x8, #288]
  421754:	cbz	x9, 421760 <wcrtomb@plt+0x1cc70>
  421758:	mov	w0, #0x1                   	// #1
  42175c:	ret
  421760:	ldr	w8, [x8, #276]
  421764:	cmp	w8, #0x0
  421768:	cset	w0, ne  // ne = any
  42176c:	ret
  421770:	sub	sp, sp, #0x80
  421774:	stp	x29, x30, [sp, #32]
  421778:	str	x27, [sp, #48]
  42177c:	stp	x26, x25, [sp, #64]
  421780:	stp	x24, x23, [sp, #80]
  421784:	stp	x22, x21, [sp, #96]
  421788:	stp	x20, x19, [sp, #112]
  42178c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421790:	mov	x23, x0
  421794:	ldr	w22, [x8, #3600]
  421798:	ldr	x8, [x23, #24]!
  42179c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4217a0:	add	x29, sp, #0x20
  4217a4:	mov	x20, x0
  4217a8:	str	w22, [x8, #276]
  4217ac:	ldr	w9, [x21, #3080]
  4217b0:	str	w9, [x8, #280]
  4217b4:	bl	4052a4 <wcrtomb@plt+0x7b4>
  4217b8:	mov	x19, x0
  4217bc:	cbz	w22, 421990 <wcrtomb@plt+0x1cea0>
  4217c0:	ldr	x8, [x23]
  4217c4:	add	x1, sp, #0x8
  4217c8:	ldr	x0, [x8, #288]
  4217cc:	ldr	x22, [x8, #304]
  4217d0:	ldr	x24, [x8, #8]
  4217d4:	bl	440290 <argp_parse@@Base+0x5be4>
  4217d8:	bl	403f00 <strlen@plt>
  4217dc:	ldr	x1, [x23]
  4217e0:	add	x25, x0, #0x1
  4217e4:	ldr	x8, [x1, #288]
  4217e8:	cbz	x8, 42183c <wcrtomb@plt+0x1cd4c>
  4217ec:	mov	x26, xzr
  4217f0:	add	x27, x22, #0x8
  4217f4:	ldur	x0, [x27, #-8]
  4217f8:	add	x1, sp, #0x8
  4217fc:	bl	440290 <argp_parse@@Base+0x5be4>
  421800:	bl	403f00 <strlen@plt>
  421804:	ldr	x8, [x27], #16
  421808:	mov	x21, x0
  42180c:	add	x1, sp, #0x8
  421810:	mov	x0, x8
  421814:	bl	440290 <argp_parse@@Base+0x5be4>
  421818:	bl	403f00 <strlen@plt>
  42181c:	ldr	x1, [x23]
  421820:	add	x8, x25, x21
  421824:	add	x8, x8, x0
  421828:	add	x26, x26, #0x1
  42182c:	ldr	x9, [x1, #288]
  421830:	add	x25, x8, #0x2
  421834:	cmp	x26, x9
  421838:	b.cc	4217f4 <wcrtomb@plt+0x1cd04>  // b.lo, b.ul, b.last
  42183c:	add	x8, x25, #0x1ff
  421840:	ldr	x10, [x1, #264]
  421844:	add	x9, x25, #0x3fe
  421848:	cmp	x8, #0x0
  42184c:	csel	x8, x9, x8, lt  // lt = tstop
  421850:	and	x8, x8, #0xfffffffffffffe00
  421854:	add	x9, x8, x10
  421858:	str	x9, [x1, #264]
  42185c:	ldr	x9, [x20, #16]
  421860:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421864:	add	x0, x0, #0x4b3
  421868:	mov	x2, xzr
  42186c:	add	x8, x9, x8
  421870:	str	x8, [x20, #16]
  421874:	bl	41321c <wcrtomb@plt+0xe72c>
  421878:	ldr	x1, [x20, #24]
  42187c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421880:	add	x0, x0, #0x4c4
  421884:	mov	x2, xzr
  421888:	bl	41321c <wcrtomb@plt+0xe72c>
  42188c:	ldr	x1, [x20, #24]
  421890:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421894:	add	x0, x0, #0x4a3
  421898:	mov	x2, xzr
  42189c:	bl	41321c <wcrtomb@plt+0xe72c>
  4218a0:	ldr	x1, [x20, #24]
  4218a4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4218a8:	add	x0, x0, #0x4d5
  4218ac:	mov	x2, xzr
  4218b0:	bl	41321c <wcrtomb@plt+0xe72c>
  4218b4:	ldr	x0, [x20, #24]
  4218b8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4218bc:	add	x1, x1, #0x252
  4218c0:	mov	x2, xzr
  4218c4:	bl	411f10 <wcrtomb@plt+0xd420>
  4218c8:	ldr	x20, [x20, #24]
  4218cc:	mov	x21, x0
  4218d0:	str	x0, [x20, #8]
  4218d4:	bl	403f00 <strlen@plt>
  4218d8:	cmp	x0, #0x65
  4218dc:	b.cc	4218e8 <wcrtomb@plt+0x1cdf8>  // b.lo, b.ul, b.last
  4218e0:	strb	wzr, [x21, #100]
  4218e4:	ldr	x20, [x23]
  4218e8:	ldr	x8, [x20, #264]
  4218ec:	ldr	x21, [x20, #136]
  4218f0:	mov	x0, x20
  4218f4:	str	x8, [x20, #136]
  4218f8:	bl	40b088 <wcrtomb@plt+0x6598>
  4218fc:	str	x21, [x20, #136]
  421900:	ldr	x8, [x23]
  421904:	mov	x1, x0
  421908:	mov	x2, x19
  42190c:	mov	x0, x8
  421910:	bl	40bc00 <wcrtomb@plt+0x7110>
  421914:	ldr	x8, [x23]
  421918:	ldr	x0, [x8, #8]
  42191c:	bl	4046b0 <free@plt>
  421920:	ldr	x8, [x23]
  421924:	str	x24, [x8, #8]
  421928:	bl	405310 <wcrtomb@plt+0x820>
  42192c:	ldr	x8, [x23]
  421930:	mov	x19, x0
  421934:	add	x1, sp, #0x8
  421938:	ldr	x8, [x8, #288]
  42193c:	mov	x0, x8
  421940:	bl	440290 <argp_parse@@Base+0x5be4>
  421944:	ldrb	w8, [x0]
  421948:	cbz	w8, 421ac0 <wcrtomb@plt+0x1cfd0>
  42194c:	add	x9, x19, #0x200
  421950:	add	x21, x0, #0x1
  421954:	mov	x20, x19
  421958:	b	421968 <wcrtomb@plt+0x1ce78>
  42195c:	strb	w8, [x20], #1
  421960:	ldrb	w8, [x21], #1
  421964:	cbz	w8, 421ac4 <wcrtomb@plt+0x1cfd4>
  421968:	cmp	x20, x9
  42196c:	b.ne	42195c <wcrtomb@plt+0x1ce6c>  // b.any
  421970:	mov	x0, x19
  421974:	bl	405640 <wcrtomb@plt+0xb50>
  421978:	bl	405310 <wcrtomb@plt+0x820>
  42197c:	ldurb	w8, [x21, #-1]
  421980:	mov	x20, x0
  421984:	add	x9, x0, #0x200
  421988:	mov	x19, x0
  42198c:	b	42195c <wcrtomb@plt+0x1ce6c>
  421990:	ldr	x1, [x23]
  421994:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421998:	add	x0, x0, #0x4fe
  42199c:	mov	x2, xzr
  4219a0:	ldr	x24, [x1, #304]
  4219a4:	bl	41321c <wcrtomb@plt+0xe72c>
  4219a8:	ldr	x1, [x23]
  4219ac:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4219b0:	add	x0, x0, #0x4e9
  4219b4:	mov	x2, xzr
  4219b8:	bl	41321c <wcrtomb@plt+0xe72c>
  4219bc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4219c0:	add	x0, x0, #0x534
  4219c4:	bl	411a94 <wcrtomb@plt+0xcfa4>
  4219c8:	tbnz	w0, #0, 421c34 <wcrtomb@plt+0x1d144>
  4219cc:	ldr	w8, [x21, #3080]
  4219d0:	cbz	w8, 421c34 <wcrtomb@plt+0x1d144>
  4219d4:	ldr	x1, [x23]
  4219d8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4219dc:	add	x0, x0, #0x4a3
  4219e0:	mov	x2, xzr
  4219e4:	bl	41321c <wcrtomb@plt+0xe72c>
  4219e8:	ldr	x0, [x23]
  4219ec:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4219f0:	add	x1, x1, #0x252
  4219f4:	mov	x2, xzr
  4219f8:	ldr	x22, [x0, #8]
  4219fc:	bl	411f10 <wcrtomb@plt+0xd420>
  421a00:	ldr	x8, [x23]
  421a04:	str	x0, [x8, #8]
  421a08:	add	x0, x8, #0x158
  421a0c:	bl	413424 <wcrtomb@plt+0xe934>
  421a10:	str	xzr, [x29, #24]
  421a14:	ldr	x8, [x23]
  421a18:	ldr	x9, [x8, #288]
  421a1c:	cbz	x9, 421c98 <wcrtomb@plt+0x1d1a8>
  421a20:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x1be3c>
  421a24:	mov	x9, xzr
  421a28:	add	x20, x20, #0xbc0
  421a2c:	b	421aa4 <wcrtomb@plt+0x1cfb4>
  421a30:	lsl	x9, x9, #4
  421a34:	ldr	x0, [x24, x9]
  421a38:	add	x1, sp, #0x8
  421a3c:	add	x21, x8, #0x158
  421a40:	bl	440290 <argp_parse@@Base+0x5be4>
  421a44:	mov	x1, x0
  421a48:	mov	x0, x21
  421a4c:	bl	41342c <wcrtomb@plt+0xe93c>
  421a50:	ldr	x8, [x23]
  421a54:	mov	x1, x20
  421a58:	add	x0, x8, #0x158
  421a5c:	bl	41342c <wcrtomb@plt+0xe93c>
  421a60:	ldr	x8, [x29, #24]
  421a64:	ldr	x9, [x23]
  421a68:	add	x1, sp, #0x8
  421a6c:	add	x8, x24, x8, lsl #4
  421a70:	ldr	x0, [x8, #8]
  421a74:	add	x21, x9, #0x158
  421a78:	bl	440290 <argp_parse@@Base+0x5be4>
  421a7c:	mov	x1, x0
  421a80:	mov	x0, x21
  421a84:	bl	41342c <wcrtomb@plt+0xe93c>
  421a88:	ldr	x8, [x29, #24]
  421a8c:	add	x9, x8, #0x1
  421a90:	str	x9, [x29, #24]
  421a94:	ldr	x8, [x23]
  421a98:	ldr	x10, [x8, #288]
  421a9c:	cmp	x9, x10
  421aa0:	b.cs	421c98 <wcrtomb@plt+0x1d1a8>  // b.hs, b.nlast
  421aa4:	cbz	x9, 421a30 <wcrtomb@plt+0x1cf40>
  421aa8:	add	x0, x8, #0x158
  421aac:	mov	x1, x20
  421ab0:	bl	41342c <wcrtomb@plt+0xe93c>
  421ab4:	ldr	x8, [x23]
  421ab8:	ldr	x9, [x29, #24]
  421abc:	b	421a30 <wcrtomb@plt+0x1cf40>
  421ac0:	mov	x20, x19
  421ac4:	add	x8, x19, #0x200
  421ac8:	cmp	x20, x8
  421acc:	b.ne	421ae4 <wcrtomb@plt+0x1cff4>  // b.any
  421ad0:	mov	x0, x19
  421ad4:	bl	405640 <wcrtomb@plt+0xb50>
  421ad8:	bl	405310 <wcrtomb@plt+0x820>
  421adc:	mov	x20, x0
  421ae0:	mov	x19, x0
  421ae4:	mov	w21, #0xa                   	// #10
  421ae8:	strb	w21, [x20], #1
  421aec:	ldr	x8, [x23]
  421af0:	ldr	x8, [x8, #288]
  421af4:	cbz	x8, 421c10 <wcrtomb@plt+0x1d120>
  421af8:	mov	x24, xzr
  421afc:	b	421b24 <wcrtomb@plt+0x1d034>
  421b00:	add	x8, x19, #0x200
  421b04:	cmp	x20, x8
  421b08:	b.eq	421bf8 <wcrtomb@plt+0x1d108>  // b.none
  421b0c:	strb	w21, [x20], #1
  421b10:	ldr	x8, [x23]
  421b14:	add	x24, x24, #0x1
  421b18:	ldr	x8, [x8, #288]
  421b1c:	cmp	x24, x8
  421b20:	b.cs	421c10 <wcrtomb@plt+0x1d120>  // b.hs, b.nlast
  421b24:	lsl	x8, x24, #4
  421b28:	ldr	x0, [x22, x8]
  421b2c:	add	x1, sp, #0x8
  421b30:	bl	440290 <argp_parse@@Base+0x5be4>
  421b34:	ldrb	w8, [x0]
  421b38:	cbz	w8, 421b7c <wcrtomb@plt+0x1d08c>
  421b3c:	add	x9, x19, #0x200
  421b40:	add	x25, x0, #0x1
  421b44:	b	421b54 <wcrtomb@plt+0x1d064>
  421b48:	strb	w8, [x20], #1
  421b4c:	ldrb	w8, [x25], #1
  421b50:	cbz	w8, 421b7c <wcrtomb@plt+0x1d08c>
  421b54:	cmp	x20, x9
  421b58:	b.ne	421b48 <wcrtomb@plt+0x1d058>  // b.any
  421b5c:	mov	x0, x19
  421b60:	bl	405640 <wcrtomb@plt+0xb50>
  421b64:	bl	405310 <wcrtomb@plt+0x820>
  421b68:	ldurb	w8, [x25, #-1]
  421b6c:	mov	x20, x0
  421b70:	add	x9, x0, #0x200
  421b74:	mov	x19, x0
  421b78:	b	421b48 <wcrtomb@plt+0x1d058>
  421b7c:	add	x8, x19, #0x200
  421b80:	cmp	x20, x8
  421b84:	b.ne	421b9c <wcrtomb@plt+0x1d0ac>  // b.any
  421b88:	mov	x0, x19
  421b8c:	bl	405640 <wcrtomb@plt+0xb50>
  421b90:	bl	405310 <wcrtomb@plt+0x820>
  421b94:	mov	x20, x0
  421b98:	mov	x19, x0
  421b9c:	strb	w21, [x20], #1
  421ba0:	add	x8, x22, x24, lsl #4
  421ba4:	ldr	x0, [x8, #8]
  421ba8:	add	x1, sp, #0x8
  421bac:	bl	440290 <argp_parse@@Base+0x5be4>
  421bb0:	ldrb	w8, [x0]
  421bb4:	cbz	w8, 421b00 <wcrtomb@plt+0x1d010>
  421bb8:	add	x9, x19, #0x200
  421bbc:	add	x25, x0, #0x1
  421bc0:	b	421bd0 <wcrtomb@plt+0x1d0e0>
  421bc4:	strb	w8, [x20], #1
  421bc8:	ldrb	w8, [x25], #1
  421bcc:	cbz	w8, 421b00 <wcrtomb@plt+0x1d010>
  421bd0:	cmp	x20, x9
  421bd4:	b.ne	421bc4 <wcrtomb@plt+0x1d0d4>  // b.any
  421bd8:	mov	x0, x19
  421bdc:	bl	405640 <wcrtomb@plt+0xb50>
  421be0:	bl	405310 <wcrtomb@plt+0x820>
  421be4:	ldurb	w8, [x25, #-1]
  421be8:	mov	x20, x0
  421bec:	add	x9, x0, #0x200
  421bf0:	mov	x19, x0
  421bf4:	b	421bc4 <wcrtomb@plt+0x1d0d4>
  421bf8:	mov	x0, x19
  421bfc:	bl	405640 <wcrtomb@plt+0xb50>
  421c00:	bl	405310 <wcrtomb@plt+0x820>
  421c04:	mov	x20, x0
  421c08:	mov	x19, x0
  421c0c:	b	421b0c <wcrtomb@plt+0x1d01c>
  421c10:	sub	x8, x19, x20
  421c14:	add	x2, x8, #0x200
  421c18:	mov	x0, x20
  421c1c:	mov	w1, wzr
  421c20:	bl	404320 <memset@plt>
  421c24:	mov	x0, x19
  421c28:	bl	405640 <wcrtomb@plt+0xb50>
  421c2c:	mov	w19, #0x1                   	// #1
  421c30:	b	421d00 <wcrtomb@plt+0x1d210>
  421c34:	str	xzr, [x29, #24]
  421c38:	ldr	x20, [x23]
  421c3c:	ldr	x8, [x20, #288]
  421c40:	cbz	x8, 421c90 <wcrtomb@plt+0x1d1a0>
  421c44:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421c48:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421c4c:	add	x21, x21, #0x50e
  421c50:	add	x22, x22, #0x520
  421c54:	add	x2, x29, #0x18
  421c58:	mov	x0, x21
  421c5c:	mov	x1, x20
  421c60:	bl	41321c <wcrtomb@plt+0xe72c>
  421c64:	ldr	x1, [x23]
  421c68:	add	x2, x29, #0x18
  421c6c:	mov	x0, x22
  421c70:	bl	41321c <wcrtomb@plt+0xe72c>
  421c74:	ldr	x8, [x29, #24]
  421c78:	add	x8, x8, #0x1
  421c7c:	str	x8, [x29, #24]
  421c80:	ldr	x20, [x23]
  421c84:	ldr	x9, [x20, #288]
  421c88:	cmp	x8, x9
  421c8c:	b.cc	421c54 <wcrtomb@plt+0x1d164>  // b.lo, b.ul, b.last
  421c90:	mov	x22, xzr
  421c94:	b	421cb0 <wcrtomb@plt+0x1d1c0>
  421c98:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  421c9c:	add	x0, x8, #0x158
  421ca0:	add	x1, x1, #0x534
  421ca4:	bl	413504 <wcrtomb@plt+0xea14>
  421ca8:	ldr	x20, [x23]
  421cac:	tbz	w0, #0, 421cec <wcrtomb@plt+0x1d1fc>
  421cb0:	ldr	x8, [x20, #264]
  421cb4:	ldr	x21, [x20, #136]
  421cb8:	mov	x0, x20
  421cbc:	str	x8, [x20, #136]
  421cc0:	bl	40b088 <wcrtomb@plt+0x6598>
  421cc4:	str	x21, [x20, #136]
  421cc8:	ldr	x8, [x23]
  421ccc:	mov	x1, x0
  421cd0:	mov	x2, x19
  421cd4:	mov	x0, x8
  421cd8:	bl	40bc00 <wcrtomb@plt+0x7110>
  421cdc:	cbz	x22, 421c2c <wcrtomb@plt+0x1d13c>
  421ce0:	ldr	x20, [x23]
  421ce4:	mov	w19, #0x1                   	// #1
  421ce8:	b	421cf0 <wcrtomb@plt+0x1d200>
  421cec:	mov	w19, wzr
  421cf0:	ldr	x0, [x20, #8]
  421cf4:	bl	4046b0 <free@plt>
  421cf8:	ldr	x8, [x23]
  421cfc:	str	x22, [x8, #8]
  421d00:	mov	w0, w19
  421d04:	ldp	x20, x19, [sp, #112]
  421d08:	ldp	x22, x21, [sp, #96]
  421d0c:	ldp	x24, x23, [sp, #80]
  421d10:	ldp	x26, x25, [sp, #64]
  421d14:	ldr	x27, [sp, #48]
  421d18:	ldp	x29, x30, [sp, #32]
  421d1c:	add	sp, sp, #0x80
  421d20:	ret
  421d24:	sub	sp, sp, #0x90
  421d28:	stp	x29, x30, [sp, #48]
  421d2c:	stp	x28, x27, [sp, #64]
  421d30:	stp	x26, x25, [sp, #80]
  421d34:	stp	x24, x23, [sp, #96]
  421d38:	stp	x22, x21, [sp, #112]
  421d3c:	stp	x20, x19, [sp, #128]
  421d40:	ldr	x8, [x0, #24]
  421d44:	add	x29, sp, #0x30
  421d48:	ldr	w8, [x8, #276]
  421d4c:	cbz	w8, 422084 <wcrtomb@plt+0x1d594>
  421d50:	mov	x19, x0
  421d54:	bl	4052a4 <wcrtomb@plt+0x7b4>
  421d58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421d5c:	ldr	x8, [x8, #2968]
  421d60:	mov	x20, x0
  421d64:	mov	x0, x8
  421d68:	bl	405640 <wcrtomb@plt+0xb50>
  421d6c:	bl	405310 <wcrtomb@plt+0x820>
  421d70:	cbz	x0, 421dcc <wcrtomb@plt+0x1d2dc>
  421d74:	mov	x21, x0
  421d78:	mov	x22, xzr
  421d7c:	add	x8, x0, #0x200
  421d80:	add	x23, sp, #0x10
  421d84:	mov	x25, x0
  421d88:	b	421dac <wcrtomb@plt+0x1d2bc>
  421d8c:	mov	x21, x0
  421d90:	add	x8, x0, #0x200
  421d94:	mov	x25, x0
  421d98:	ldrb	w9, [x25], #1
  421d9c:	strb	w9, [x23, x22]
  421da0:	cmp	w9, #0xa
  421da4:	add	x22, x22, #0x1
  421da8:	b.eq	421e04 <wcrtomb@plt+0x1d314>  // b.none
  421dac:	cmp	x22, #0x14
  421db0:	b.eq	42208c <wcrtomb@plt+0x1d59c>  // b.none
  421db4:	cmp	x25, x8
  421db8:	b.ne	421d98 <wcrtomb@plt+0x1d2a8>  // b.any
  421dbc:	mov	x0, x21
  421dc0:	bl	405640 <wcrtomb@plt+0xb50>
  421dc4:	bl	405310 <wcrtomb@plt+0x820>
  421dc8:	cbnz	x0, 421d8c <wcrtomb@plt+0x1d29c>
  421dcc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421dd0:	ldr	x8, [x8, #4000]
  421dd4:	cbz	x8, 421ddc <wcrtomb@plt+0x1d2ec>
  421dd8:	blr	x8
  421ddc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  421de0:	add	x1, x1, #0x818
  421de4:	mov	w2, #0x5                   	// #5
  421de8:	mov	x0, xzr
  421dec:	bl	4048b0 <dcgettext@plt>
  421df0:	mov	x2, x0
  421df4:	mov	w0, wzr
  421df8:	mov	w1, wzr
  421dfc:	bl	403f60 <error@plt>
  421e00:	bl	40eb40 <wcrtomb@plt+0xa050>
  421e04:	add	x8, sp, #0x10
  421e08:	add	x8, x8, x22
  421e0c:	sturb	wzr, [x8, #-1]
  421e10:	ldrb	w8, [sp, #16]
  421e14:	sub	w8, w8, #0x30
  421e18:	cmp	w8, #0x9
  421e1c:	b.hi	421e58 <wcrtomb@plt+0x1d368>  // b.pmore
  421e20:	bl	4049c0 <__errno_location@plt>
  421e24:	mov	x22, x0
  421e28:	str	wzr, [x0]
  421e2c:	add	x0, sp, #0x10
  421e30:	sub	x1, x29, #0x8
  421e34:	mov	w2, #0xa                   	// #10
  421e38:	mov	w3, wzr
  421e3c:	bl	4043c0 <__strtoul_internal@plt>
  421e40:	ldr	w8, [x22]
  421e44:	cmp	w8, #0x22
  421e48:	b.eq	421e58 <wcrtomb@plt+0x1d368>  // b.none
  421e4c:	ldur	x8, [x29, #-8]
  421e50:	ldrb	w8, [x8]
  421e54:	cbz	w8, 421e74 <wcrtomb@plt+0x1d384>
  421e58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  421e5c:	ldr	x8, [x8, #4000]
  421e60:	cbz	x8, 421e68 <wcrtomb@plt+0x1d378>
  421e64:	blr	x8
  421e68:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  421e6c:	add	x1, x1, #0x297
  421e70:	b	4220a4 <wcrtomb@plt+0x1d5b4>
  421e74:	ldr	x8, [x19, #24]
  421e78:	mov	w1, #0x10                  	// #16
  421e7c:	str	x0, [x8, #296]
  421e80:	bl	44a274 <argp_parse@@Base+0xfbc8>
  421e84:	ldr	x8, [x19, #24]
  421e88:	ldr	x9, [x8, #296]
  421e8c:	str	x0, [x8, #304]
  421e90:	str	xzr, [x8, #288]
  421e94:	cbz	x9, 422068 <wcrtomb@plt+0x1d578>
  421e98:	mov	x26, xzr
  421e9c:	add	x27, sp, #0x10
  421ea0:	mov	x23, xzr
  421ea4:	add	x8, x21, #0x200
  421ea8:	b	421ec0 <wcrtomb@plt+0x1d3d0>
  421eac:	ldrb	w9, [x25], #1
  421eb0:	strb	w9, [x27, x23]
  421eb4:	cmp	w9, #0xa
  421eb8:	add	x23, x23, #0x1
  421ebc:	b.eq	421ef0 <wcrtomb@plt+0x1d400>  // b.none
  421ec0:	cmp	x23, #0x14
  421ec4:	b.eq	42208c <wcrtomb@plt+0x1d59c>  // b.none
  421ec8:	cmp	x25, x8
  421ecc:	b.ne	421eac <wcrtomb@plt+0x1d3bc>  // b.any
  421ed0:	mov	x0, x21
  421ed4:	bl	405640 <wcrtomb@plt+0xb50>
  421ed8:	bl	405310 <wcrtomb@plt+0x820>
  421edc:	cbz	x0, 421dcc <wcrtomb@plt+0x1d2dc>
  421ee0:	mov	x21, x0
  421ee4:	add	x8, x0, #0x200
  421ee8:	mov	x25, x0
  421eec:	b	421eac <wcrtomb@plt+0x1d3bc>
  421ef0:	add	x8, x27, x23
  421ef4:	sturb	wzr, [x8, #-1]
  421ef8:	ldrb	w8, [sp, #16]
  421efc:	sub	w8, w8, #0x30
  421f00:	cmp	w8, #0x9
  421f04:	b.hi	421e58 <wcrtomb@plt+0x1d368>  // b.pmore
  421f08:	add	x0, sp, #0x10
  421f0c:	sub	x1, x29, #0x8
  421f10:	mov	w2, #0xa                   	// #10
  421f14:	mov	w3, wzr
  421f18:	str	wzr, [x22]
  421f1c:	bl	4043c0 <__strtoul_internal@plt>
  421f20:	tbnz	x0, #63, 421e58 <wcrtomb@plt+0x1d368>
  421f24:	ldr	w8, [x22]
  421f28:	cmp	w8, #0x22
  421f2c:	b.eq	421e58 <wcrtomb@plt+0x1d368>  // b.none
  421f30:	ldur	x8, [x29, #-8]
  421f34:	ldrb	w8, [x8]
  421f38:	cbnz	w8, 421e58 <wcrtomb@plt+0x1d368>
  421f3c:	mov	x23, x0
  421f40:	mov	x24, xzr
  421f44:	add	x8, x21, #0x200
  421f48:	b	421f6c <wcrtomb@plt+0x1d47c>
  421f4c:	mov	x21, x0
  421f50:	add	x8, x0, #0x200
  421f54:	mov	x25, x0
  421f58:	ldrb	w9, [x25], #1
  421f5c:	strb	w9, [x27, x24]
  421f60:	cmp	w9, #0xa
  421f64:	add	x24, x24, #0x1
  421f68:	b.eq	421f90 <wcrtomb@plt+0x1d4a0>  // b.none
  421f6c:	cmp	x24, #0x14
  421f70:	b.eq	42208c <wcrtomb@plt+0x1d59c>  // b.none
  421f74:	cmp	x25, x8
  421f78:	b.ne	421f58 <wcrtomb@plt+0x1d468>  // b.any
  421f7c:	mov	x0, x21
  421f80:	bl	405640 <wcrtomb@plt+0xb50>
  421f84:	bl	405310 <wcrtomb@plt+0x820>
  421f88:	cbnz	x0, 421f4c <wcrtomb@plt+0x1d45c>
  421f8c:	b	421dcc <wcrtomb@plt+0x1d2dc>
  421f90:	add	x8, x27, x24
  421f94:	sturb	wzr, [x8, #-1]
  421f98:	ldrb	w8, [sp, #16]
  421f9c:	sub	w8, w8, #0x30
  421fa0:	cmp	w8, #0x9
  421fa4:	b.hi	421e58 <wcrtomb@plt+0x1d368>  // b.pmore
  421fa8:	add	x0, sp, #0x10
  421fac:	sub	x1, x29, #0x8
  421fb0:	mov	w2, #0xa                   	// #10
  421fb4:	mov	w3, wzr
  421fb8:	str	wzr, [x22]
  421fbc:	bl	4043c0 <__strtoul_internal@plt>
  421fc0:	tbnz	x0, #63, 421e58 <wcrtomb@plt+0x1d368>
  421fc4:	ldr	w8, [x22]
  421fc8:	cmp	w8, #0x22
  421fcc:	b.eq	421e58 <wcrtomb@plt+0x1d368>  // b.none
  421fd0:	ldur	x8, [x29, #-8]
  421fd4:	ldrb	w8, [x8]
  421fd8:	cbnz	w8, 421e58 <wcrtomb@plt+0x1d368>
  421fdc:	ldr	x28, [x19, #24]
  421fe0:	str	x26, [sp, #8]
  421fe4:	mov	x24, x0
  421fe8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  421fec:	ldp	x26, x8, [x28, #288]
  421ff0:	ldr	x0, [x28, #304]
  421ff4:	movk	x9, #0x555, lsl #48
  421ff8:	cmp	x26, x8
  421ffc:	b.ne	422040 <wcrtomb@plt+0x1d550>  // b.any
  422000:	cbz	x0, 422018 <wcrtomb@plt+0x1d528>
  422004:	cmp	x26, x9
  422008:	b.cs	4220f8 <wcrtomb@plt+0x1d608>  // b.hs, b.nlast
  42200c:	add	x8, x26, x26, lsr #1
  422010:	add	x8, x8, #0x1
  422014:	b	422030 <wcrtomb@plt+0x1d540>
  422018:	cbz	x26, 42202c <wcrtomb@plt+0x1d53c>
  42201c:	lsr	x9, x26, #59
  422020:	mov	x8, x26
  422024:	cbz	x9, 422030 <wcrtomb@plt+0x1d540>
  422028:	b	4220f8 <wcrtomb@plt+0x1d608>
  42202c:	mov	w8, #0x8                   	// #8
  422030:	lsl	x1, x8, #4
  422034:	str	x8, [x28, #296]
  422038:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42203c:	str	x0, [x28, #304]
  422040:	add	x8, x0, x26, lsl #4
  422044:	add	x9, x26, #0x1
  422048:	stp	x23, x24, [x8]
  42204c:	str	x9, [x28, #288]
  422050:	ldr	x8, [x19, #24]
  422054:	ldr	x26, [sp, #8]
  422058:	ldr	x8, [x8, #296]
  42205c:	add	x26, x26, #0x1
  422060:	cmp	x26, x8
  422064:	b.cc	421ea0 <wcrtomb@plt+0x1d3b0>  // b.lo, b.ul, b.last
  422068:	mov	x0, x21
  42206c:	bl	405640 <wcrtomb@plt+0xb50>
  422070:	bl	4052a4 <wcrtomb@plt+0x7b4>
  422074:	ldr	x8, [x19, #16]
  422078:	sub	x9, x0, x20
  42207c:	add	x8, x8, x9, lsl #9
  422080:	str	x8, [x19, #16]
  422084:	mov	w0, #0x1                   	// #1
  422088:	b	4220d8 <wcrtomb@plt+0x1d5e8>
  42208c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  422090:	ldr	x8, [x8, #4000]
  422094:	cbz	x8, 42209c <wcrtomb@plt+0x1d5ac>
  422098:	blr	x8
  42209c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4220a0:	add	x1, x1, #0x269
  4220a4:	mov	w2, #0x5                   	// #5
  4220a8:	mov	x0, xzr
  4220ac:	bl	4048b0 <dcgettext@plt>
  4220b0:	ldr	x8, [x19, #24]
  4220b4:	mov	x2, x0
  4220b8:	mov	w0, wzr
  4220bc:	mov	w1, wzr
  4220c0:	ldr	x3, [x8]
  4220c4:	bl	403f60 <error@plt>
  4220c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4220cc:	mov	w9, #0x2                   	// #2
  4220d0:	mov	w0, wzr
  4220d4:	str	w9, [x8, #2352]
  4220d8:	ldp	x20, x19, [sp, #128]
  4220dc:	ldp	x22, x21, [sp, #112]
  4220e0:	ldp	x24, x23, [sp, #96]
  4220e4:	ldp	x26, x25, [sp, #80]
  4220e8:	ldp	x28, x27, [sp, #64]
  4220ec:	ldp	x29, x30, [sp, #48]
  4220f0:	add	sp, sp, #0x90
  4220f4:	ret
  4220f8:	bl	40eb80 <wcrtomb@plt+0xa090>
  4220fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  422100:	ldr	x8, [x8, #2968]
  422104:	ldrb	w8, [x8, #156]
  422108:	cmp	w8, #0x53
  42210c:	cset	w0, eq  // eq = none
  422110:	ret
  422114:	stp	x29, x30, [sp, #-32]!
  422118:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42211c:	ldr	x8, [x8, #2968]
  422120:	str	x19, [sp, #16]
  422124:	mov	x19, x0
  422128:	mov	w1, #0xc                   	// #12
  42212c:	add	x0, x8, #0x1c4
  422130:	mov	x29, sp
  422134:	bl	41a32c <wcrtomb@plt+0x1583c>
  422138:	ldr	x8, [x19, #24]
  42213c:	ldr	x19, [sp, #16]
  422140:	bic	x10, x0, x0, asr #63
  422144:	lsr	x11, x0, #63
  422148:	ldr	x9, [x8, #136]
  42214c:	eor	w0, w11, #0x1
  422150:	str	x10, [x8, #136]
  422154:	str	x9, [x8, #264]
  422158:	ldp	x29, x30, [sp], #32
  42215c:	ret
  422160:	stp	x29, x30, [sp, #-96]!
  422164:	stp	x28, x27, [sp, #16]
  422168:	stp	x26, x25, [sp, #32]
  42216c:	stp	x24, x23, [sp, #48]
  422170:	stp	x22, x21, [sp, #64]
  422174:	stp	x20, x19, [sp, #80]
  422178:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42217c:	ldr	x9, [x0, #24]
  422180:	ldr	x22, [x8, #2968]
  422184:	mov	x19, x0
  422188:	mov	x29, sp
  42218c:	str	xzr, [x9, #288]
  422190:	ldrb	w8, [x22, #345]
  422194:	cbz	w8, 4221a8 <wcrtomb@plt+0x1d6b8>
  422198:	mov	w8, wzr
  42219c:	mov	w9, #0x1                   	// #1
  4221a0:	cbnz	w9, 4224e0 <wcrtomb@plt+0x1d9f0>
  4221a4:	b	422614 <wcrtomb@plt+0x1db24>
  4221a8:	ldrb	w8, [x22, #366]
  4221ac:	cbz	w8, 422244 <wcrtomb@plt+0x1d754>
  4221b0:	ldrb	w8, [x22, #368]
  4221b4:	cbz	w8, 4224b4 <wcrtomb@plt+0x1d9c4>
  4221b8:	add	x0, x22, #0x164
  4221bc:	mov	w1, #0xc                   	// #12
  4221c0:	add	x21, x22, #0x170
  4221c4:	bl	41a32c <wcrtomb@plt+0x1583c>
  4221c8:	mov	x20, x0
  4221cc:	mov	w1, #0xc                   	// #12
  4221d0:	mov	x0, x21
  4221d4:	bl	41a32c <wcrtomb@plt+0x1583c>
  4221d8:	orr	x9, x0, x20
  4221dc:	mov	w8, #0x2                   	// #2
  4221e0:	tbnz	x9, #63, 4224d0 <wcrtomb@plt+0x1d9e0>
  4221e4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4221e8:	sub	x9, x9, x0
  4221ec:	mov	x21, x0
  4221f0:	cmp	x9, x20
  4221f4:	b.lt	4224d0 <wcrtomb@plt+0x1d9e0>  // b.tstop
  4221f8:	ldr	x23, [x19, #24]
  4221fc:	add	x9, x21, x20
  422200:	ldr	x8, [x23, #136]
  422204:	cmp	x8, x9
  422208:	b.lt	4224cc <wcrtomb@plt+0x1d9dc>  // b.tstop
  42220c:	ldr	x8, [x23, #264]
  422210:	tbnz	x8, #63, 4224cc <wcrtomb@plt+0x1d9dc>
  422214:	ldp	x24, x8, [x23, #288]
  422218:	ldr	x0, [x23, #304]
  42221c:	cmp	x24, x8
  422220:	b.ne	422278 <wcrtomb@plt+0x1d788>  // b.any
  422224:	cbz	x0, 422250 <wcrtomb@plt+0x1d760>
  422228:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  42222c:	movk	x8, #0x555, lsl #48
  422230:	cmp	x24, x8
  422234:	b.cs	4226d4 <wcrtomb@plt+0x1dbe4>  // b.hs, b.nlast
  422238:	add	x8, x24, x24, lsr #1
  42223c:	add	x8, x8, #0x1
  422240:	b	422268 <wcrtomb@plt+0x1d778>
  422244:	mov	w9, #0x1                   	// #1
  422248:	cbnz	w9, 4224e0 <wcrtomb@plt+0x1d9f0>
  42224c:	b	422614 <wcrtomb@plt+0x1db24>
  422250:	cbz	x24, 422264 <wcrtomb@plt+0x1d774>
  422254:	lsr	x9, x24, #59
  422258:	mov	x8, x24
  42225c:	cbz	x9, 422268 <wcrtomb@plt+0x1d778>
  422260:	b	4226d4 <wcrtomb@plt+0x1dbe4>
  422264:	mov	w8, #0x8                   	// #8
  422268:	lsl	x1, x8, #4
  42226c:	str	x8, [x23, #296]
  422270:	bl	44a090 <argp_parse@@Base+0xf9e4>
  422274:	str	x0, [x23, #304]
  422278:	add	x8, x0, x24, lsl #4
  42227c:	add	x9, x24, #0x1
  422280:	stp	x20, x21, [x8]
  422284:	str	x9, [x23, #288]
  422288:	ldrb	w8, [x22, #392]
  42228c:	cbz	w8, 4224b4 <wcrtomb@plt+0x1d9c4>
  422290:	add	x0, x22, #0x17c
  422294:	mov	w1, #0xc                   	// #12
  422298:	add	x21, x22, #0x188
  42229c:	bl	41a32c <wcrtomb@plt+0x1583c>
  4222a0:	mov	x20, x0
  4222a4:	mov	w1, #0xc                   	// #12
  4222a8:	mov	x0, x21
  4222ac:	bl	41a32c <wcrtomb@plt+0x1583c>
  4222b0:	orr	x9, x0, x20
  4222b4:	mov	w8, #0x2                   	// #2
  4222b8:	tbnz	x9, #63, 4224d0 <wcrtomb@plt+0x1d9e0>
  4222bc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4222c0:	sub	x9, x9, x0
  4222c4:	mov	x21, x0
  4222c8:	cmp	x9, x20
  4222cc:	b.lt	4224d0 <wcrtomb@plt+0x1d9e0>  // b.tstop
  4222d0:	ldr	x23, [x19, #24]
  4222d4:	add	x9, x21, x20
  4222d8:	ldr	x8, [x23, #136]
  4222dc:	cmp	x8, x9
  4222e0:	b.lt	4224cc <wcrtomb@plt+0x1d9dc>  // b.tstop
  4222e4:	ldr	x8, [x23, #264]
  4222e8:	tbnz	x8, #63, 4224cc <wcrtomb@plt+0x1d9dc>
  4222ec:	ldp	x24, x8, [x23, #288]
  4222f0:	ldr	x0, [x23, #304]
  4222f4:	cmp	x24, x8
  4222f8:	b.ne	422344 <wcrtomb@plt+0x1d854>  // b.any
  4222fc:	cbz	x0, 42231c <wcrtomb@plt+0x1d82c>
  422300:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  422304:	movk	x8, #0x555, lsl #48
  422308:	cmp	x24, x8
  42230c:	b.cs	4226d4 <wcrtomb@plt+0x1dbe4>  // b.hs, b.nlast
  422310:	add	x8, x24, x24, lsr #1
  422314:	add	x8, x8, #0x1
  422318:	b	422334 <wcrtomb@plt+0x1d844>
  42231c:	cbz	x24, 422330 <wcrtomb@plt+0x1d840>
  422320:	lsr	x9, x24, #59
  422324:	mov	x8, x24
  422328:	cbz	x9, 422334 <wcrtomb@plt+0x1d844>
  42232c:	b	4226d4 <wcrtomb@plt+0x1dbe4>
  422330:	mov	w8, #0x8                   	// #8
  422334:	lsl	x1, x8, #4
  422338:	str	x8, [x23, #296]
  42233c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  422340:	str	x0, [x23, #304]
  422344:	add	x8, x0, x24, lsl #4
  422348:	add	x9, x24, #0x1
  42234c:	stp	x20, x21, [x8]
  422350:	str	x9, [x23, #288]
  422354:	ldrb	w8, [x22, #416]
  422358:	cbz	w8, 4224b4 <wcrtomb@plt+0x1d9c4>
  42235c:	add	x0, x22, #0x194
  422360:	mov	w1, #0xc                   	// #12
  422364:	add	x21, x22, #0x1a0
  422368:	bl	41a32c <wcrtomb@plt+0x1583c>
  42236c:	mov	x20, x0
  422370:	mov	w1, #0xc                   	// #12
  422374:	mov	x0, x21
  422378:	bl	41a32c <wcrtomb@plt+0x1583c>
  42237c:	orr	x9, x0, x20
  422380:	mov	w8, #0x2                   	// #2
  422384:	tbnz	x9, #63, 4224d0 <wcrtomb@plt+0x1d9e0>
  422388:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  42238c:	sub	x9, x9, x0
  422390:	mov	x21, x0
  422394:	cmp	x9, x20
  422398:	b.lt	4224d0 <wcrtomb@plt+0x1d9e0>  // b.tstop
  42239c:	ldr	x23, [x19, #24]
  4223a0:	add	x9, x21, x20
  4223a4:	ldr	x8, [x23, #136]
  4223a8:	cmp	x8, x9
  4223ac:	b.lt	4224cc <wcrtomb@plt+0x1d9dc>  // b.tstop
  4223b0:	ldr	x8, [x23, #264]
  4223b4:	tbnz	x8, #63, 4224cc <wcrtomb@plt+0x1d9dc>
  4223b8:	ldp	x24, x8, [x23, #288]
  4223bc:	ldr	x0, [x23, #304]
  4223c0:	cmp	x24, x8
  4223c4:	b.ne	422410 <wcrtomb@plt+0x1d920>  // b.any
  4223c8:	cbz	x0, 4223e8 <wcrtomb@plt+0x1d8f8>
  4223cc:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  4223d0:	movk	x8, #0x555, lsl #48
  4223d4:	cmp	x24, x8
  4223d8:	b.cs	4226d4 <wcrtomb@plt+0x1dbe4>  // b.hs, b.nlast
  4223dc:	add	x8, x24, x24, lsr #1
  4223e0:	add	x8, x8, #0x1
  4223e4:	b	422400 <wcrtomb@plt+0x1d910>
  4223e8:	cbz	x24, 4223fc <wcrtomb@plt+0x1d90c>
  4223ec:	lsr	x9, x24, #59
  4223f0:	mov	x8, x24
  4223f4:	cbz	x9, 422400 <wcrtomb@plt+0x1d910>
  4223f8:	b	4226d4 <wcrtomb@plt+0x1dbe4>
  4223fc:	mov	w8, #0x8                   	// #8
  422400:	lsl	x1, x8, #4
  422404:	str	x8, [x23, #296]
  422408:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42240c:	str	x0, [x23, #304]
  422410:	add	x8, x0, x24, lsl #4
  422414:	add	x9, x24, #0x1
  422418:	stp	x20, x21, [x8]
  42241c:	str	x9, [x23, #288]
  422420:	ldrb	w8, [x22, #440]
  422424:	cbz	w8, 4224b4 <wcrtomb@plt+0x1d9c4>
  422428:	add	x0, x22, #0x1ac
  42242c:	mov	w1, #0xc                   	// #12
  422430:	add	x21, x22, #0x1b8
  422434:	bl	41a32c <wcrtomb@plt+0x1583c>
  422438:	mov	x20, x0
  42243c:	mov	w1, #0xc                   	// #12
  422440:	mov	x0, x21
  422444:	bl	41a32c <wcrtomb@plt+0x1583c>
  422448:	orr	x9, x0, x20
  42244c:	mov	w8, #0x2                   	// #2
  422450:	tbnz	x9, #63, 4224d0 <wcrtomb@plt+0x1d9e0>
  422454:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  422458:	sub	x9, x9, x0
  42245c:	mov	x21, x0
  422460:	cmp	x9, x20
  422464:	b.lt	4224d0 <wcrtomb@plt+0x1d9e0>  // b.tstop
  422468:	ldr	x23, [x19, #24]
  42246c:	add	x9, x21, x20
  422470:	ldr	x8, [x23, #136]
  422474:	cmp	x8, x9
  422478:	b.lt	4224cc <wcrtomb@plt+0x1d9dc>  // b.tstop
  42247c:	ldr	x8, [x23, #264]
  422480:	tbnz	x8, #63, 4224cc <wcrtomb@plt+0x1d9dc>
  422484:	ldp	x24, x8, [x23, #288]
  422488:	ldr	x0, [x23, #304]
  42248c:	cmp	x24, x8
  422490:	b.ne	4226ec <wcrtomb@plt+0x1dbfc>  // b.any
  422494:	cbz	x0, 4226c4 <wcrtomb@plt+0x1dbd4>
  422498:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  42249c:	movk	x8, #0x555, lsl #48
  4224a0:	cmp	x24, x8
  4224a4:	b.cs	4226d4 <wcrtomb@plt+0x1dbe4>  // b.hs, b.nlast
  4224a8:	add	x8, x24, x24, lsr #1
  4224ac:	add	x8, x8, #0x1
  4224b0:	b	4226dc <wcrtomb@plt+0x1dbec>
  4224b4:	mov	w8, #0x1                   	// #1
  4224b8:	ldrb	w9, [x22, #355]
  4224bc:	cmp	w9, #0x0
  4224c0:	cset	w9, ne  // ne = any
  4224c4:	cbnz	w9, 4224e0 <wcrtomb@plt+0x1d9f0>
  4224c8:	b	422614 <wcrtomb@plt+0x1db24>
  4224cc:	mov	w8, #0x2                   	// #2
  4224d0:	ldrb	w9, [x22, #355]
  4224d4:	cmp	w9, #0x0
  4224d8:	cset	w9, ne  // ne = any
  4224dc:	cbz	w9, 422614 <wcrtomb@plt+0x1db24>
  4224e0:	cbnz	w8, 422614 <wcrtomb@plt+0x1db24>
  4224e4:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  4224e8:	movk	x24, #0x555, lsl #48
  4224ec:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
  4224f0:	bl	405310 <wcrtomb@plt+0x820>
  4224f4:	cbz	x0, 422664 <wcrtomb@plt+0x1db74>
  4224f8:	mov	x20, x0
  4224fc:	bl	405640 <wcrtomb@plt+0xb50>
  422500:	add	x21, x20, #0xc
  422504:	mov	x26, #0xffffffffffffffff    	// #-1
  422508:	b	422540 <wcrtomb@plt+0x1da50>
  42250c:	mov	w8, #0x8                   	// #8
  422510:	lsl	x1, x8, #4
  422514:	str	x8, [x27, #296]
  422518:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42251c:	str	x0, [x27, #304]
  422520:	add	x26, x26, #0x1
  422524:	add	x8, x0, x28, lsl #4
  422528:	add	x9, x28, #0x1
  42252c:	cmp	x26, #0x14
  422530:	add	x21, x21, #0x18
  422534:	stp	x22, x23, [x8]
  422538:	str	x9, [x27, #288]
  42253c:	b.cs	4225f4 <wcrtomb@plt+0x1db04>  // b.hs, b.nlast
  422540:	ldrb	w8, [x21]
  422544:	cbz	w8, 4225e8 <wcrtomb@plt+0x1daf8>
  422548:	sub	x0, x21, #0xc
  42254c:	mov	w1, #0xc                   	// #12
  422550:	bl	41a32c <wcrtomb@plt+0x1583c>
  422554:	mov	x22, x0
  422558:	mov	w1, #0xc                   	// #12
  42255c:	mov	x0, x21
  422560:	bl	41a32c <wcrtomb@plt+0x1583c>
  422564:	mov	w9, wzr
  422568:	orr	x10, x0, x22
  42256c:	mov	w8, #0x2                   	// #2
  422570:	tbnz	x10, #63, 4225fc <wcrtomb@plt+0x1db0c>
  422574:	sub	x10, x25, x0
  422578:	mov	x23, x0
  42257c:	cmp	x10, x22
  422580:	b.lt	4225fc <wcrtomb@plt+0x1db0c>  // b.tstop
  422584:	ldr	x27, [x19, #24]
  422588:	add	x9, x23, x22
  42258c:	ldr	x8, [x27, #136]
  422590:	cmp	x8, x9
  422594:	b.lt	4225dc <wcrtomb@plt+0x1daec>  // b.tstop
  422598:	ldr	x8, [x27, #264]
  42259c:	tbnz	x8, #63, 4225dc <wcrtomb@plt+0x1daec>
  4225a0:	ldp	x28, x8, [x27, #288]
  4225a4:	ldr	x0, [x27, #304]
  4225a8:	cmp	x28, x8
  4225ac:	b.ne	422520 <wcrtomb@plt+0x1da30>  // b.any
  4225b0:	cbz	x0, 4225c8 <wcrtomb@plt+0x1dad8>
  4225b4:	cmp	x28, x24
  4225b8:	b.cs	4226d4 <wcrtomb@plt+0x1dbe4>  // b.hs, b.nlast
  4225bc:	add	x8, x28, x28, lsr #1
  4225c0:	add	x8, x8, #0x1
  4225c4:	b	422510 <wcrtomb@plt+0x1da20>
  4225c8:	cbz	x28, 42250c <wcrtomb@plt+0x1da1c>
  4225cc:	lsr	x9, x28, #59
  4225d0:	mov	x8, x28
  4225d4:	cbz	x9, 422510 <wcrtomb@plt+0x1da20>
  4225d8:	b	4226d4 <wcrtomb@plt+0x1dbe4>
  4225dc:	mov	w9, wzr
  4225e0:	mov	w8, #0x2                   	// #2
  4225e4:	b	4225fc <wcrtomb@plt+0x1db0c>
  4225e8:	mov	w9, wzr
  4225ec:	mov	w8, #0x1                   	// #1
  4225f0:	b	4225fc <wcrtomb@plt+0x1db0c>
  4225f4:	mov	w8, wzr
  4225f8:	mov	w9, #0x1                   	// #1
  4225fc:	ldr	x10, [x19, #16]
  422600:	add	x10, x10, #0x200
  422604:	str	x10, [x19, #16]
  422608:	ldrb	w10, [x20, #504]
  42260c:	cbz	w10, 422614 <wcrtomb@plt+0x1db24>
  422610:	tbnz	w9, #0, 4224f0 <wcrtomb@plt+0x1da00>
  422614:	cmp	w8, #0x2
  422618:	b.ne	42265c <wcrtomb@plt+0x1db6c>  // b.any
  42261c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  422620:	ldr	x8, [x8, #4000]
  422624:	cbz	x8, 42262c <wcrtomb@plt+0x1db3c>
  422628:	blr	x8
  42262c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422630:	add	x1, x1, #0x230
  422634:	mov	w2, #0x5                   	// #5
  422638:	mov	x0, xzr
  42263c:	bl	4048b0 <dcgettext@plt>
  422640:	ldr	x8, [x19, #24]
  422644:	mov	x2, x0
  422648:	mov	w0, wzr
  42264c:	mov	w1, wzr
  422650:	ldr	x3, [x8]
  422654:	bl	403f60 <error@plt>
  422658:	b	422698 <wcrtomb@plt+0x1dba8>
  42265c:	mov	w0, #0x1                   	// #1
  422660:	b	4226a8 <wcrtomb@plt+0x1dbb8>
  422664:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  422668:	ldr	x8, [x8, #4000]
  42266c:	cbz	x8, 422674 <wcrtomb@plt+0x1db84>
  422670:	blr	x8
  422674:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  422678:	add	x1, x1, #0x818
  42267c:	mov	w2, #0x5                   	// #5
  422680:	mov	x0, xzr
  422684:	bl	4048b0 <dcgettext@plt>
  422688:	mov	x2, x0
  42268c:	mov	w0, wzr
  422690:	mov	w1, wzr
  422694:	bl	403f60 <error@plt>
  422698:	mov	w0, wzr
  42269c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4226a0:	mov	w9, #0x2                   	// #2
  4226a4:	str	w9, [x8, #2352]
  4226a8:	ldp	x20, x19, [sp, #80]
  4226ac:	ldp	x22, x21, [sp, #64]
  4226b0:	ldp	x24, x23, [sp, #48]
  4226b4:	ldp	x26, x25, [sp, #32]
  4226b8:	ldp	x28, x27, [sp, #16]
  4226bc:	ldp	x29, x30, [sp], #96
  4226c0:	ret
  4226c4:	cbz	x24, 4226d8 <wcrtomb@plt+0x1dbe8>
  4226c8:	lsr	x9, x24, #59
  4226cc:	mov	x8, x24
  4226d0:	cbz	x9, 4226dc <wcrtomb@plt+0x1dbec>
  4226d4:	bl	40eb80 <wcrtomb@plt+0xa090>
  4226d8:	mov	w8, #0x8                   	// #8
  4226dc:	lsl	x1, x8, #4
  4226e0:	str	x8, [x23, #296]
  4226e4:	bl	44a090 <argp_parse@@Base+0xf9e4>
  4226e8:	str	x0, [x23, #304]
  4226ec:	add	x9, x0, x24, lsl #4
  4226f0:	add	x10, x24, #0x1
  4226f4:	mov	w8, wzr
  4226f8:	stp	x20, x21, [x9]
  4226fc:	str	x10, [x23, #288]
  422700:	ldrb	w9, [x22, #355]
  422704:	cmp	w9, #0x0
  422708:	cset	w9, ne  // ne = any
  42270c:	cbnz	w9, 4224e0 <wcrtomb@plt+0x1d9f0>
  422710:	b	422614 <wcrtomb@plt+0x1db24>
  422714:	stp	x29, x30, [sp, #-48]!
  422718:	stp	x20, x19, [sp, #32]
  42271c:	mov	x19, x1
  422720:	mov	w1, #0x2e                  	// #46
  422724:	stp	x22, x21, [sp, #16]
  422728:	mov	x29, sp
  42272c:	bl	4044e0 <strrchr@plt>
  422730:	cbz	x0, 422b44 <wcrtomb@plt+0x1e054>
  422734:	add	x20, x0, #0x1
  422738:	mov	x0, x20
  42273c:	bl	403f00 <strlen@plt>
  422740:	sub	x22, x0, #0x1
  422744:	cmp	x22, #0x3
  422748:	b.hi	422b44 <wcrtomb@plt+0x1e054>  // b.pmore
  42274c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422750:	add	x8, x8, #0x2e0
  422754:	adr	x9, 422768 <wcrtomb@plt+0x1dc78>
  422758:	ldrb	w10, [x8, x22]
  42275c:	add	x9, x9, x10, lsl #2
  422760:	mov	x21, x0
  422764:	br	x9
  422768:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x14e3c>
  42276c:	add	x0, x0, #0xe73
  422770:	mov	x1, x20
  422774:	mov	x2, x21
  422778:	bl	404400 <bcmp@plt>
  42277c:	cbz	w0, 422acc <wcrtomb@plt+0x1dfdc>
  422780:	cmp	x21, #0x2
  422784:	b.eq	42296c <wcrtomb@plt+0x1de7c>  // b.none
  422788:	cmp	x21, #0x4
  42278c:	b.eq	42290c <wcrtomb@plt+0x1de1c>  // b.none
  422790:	cmp	x21, #0x3
  422794:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  422798:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42279c:	add	x0, x0, #0x4dd
  4227a0:	mov	x1, x20
  4227a4:	mov	x2, x21
  4227a8:	bl	404400 <bcmp@plt>
  4227ac:	cbz	w0, 422b20 <wcrtomb@plt+0x1e030>
  4227b0:	cmp	x21, #0x2
  4227b4:	b.eq	42296c <wcrtomb@plt+0x1de7c>  // b.none
  4227b8:	cmp	x21, #0x4
  4227bc:	b.eq	42290c <wcrtomb@plt+0x1de1c>  // b.none
  4227c0:	cmp	x21, #0x3
  4227c4:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  4227c8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4227cc:	add	x0, x0, #0x4e6
  4227d0:	mov	x1, x20
  4227d4:	mov	x2, x21
  4227d8:	bl	404400 <bcmp@plt>
  4227dc:	cbz	w0, 422b78 <wcrtomb@plt+0x1e088>
  4227e0:	cmp	x21, #0x2
  4227e4:	b.eq	42296c <wcrtomb@plt+0x1de7c>  // b.none
  4227e8:	cmp	x21, #0x4
  4227ec:	b.eq	42290c <wcrtomb@plt+0x1de1c>  // b.none
  4227f0:	cmp	x21, #0x3
  4227f4:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  4227f8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4227fc:	add	x0, x0, #0x4e1
  422800:	mov	x1, x20
  422804:	mov	x2, x21
  422808:	bl	404400 <bcmp@plt>
  42280c:	cbz	w0, 422b9c <wcrtomb@plt+0x1e0ac>
  422810:	cmp	x21, #0x2
  422814:	b.eq	42296c <wcrtomb@plt+0x1de7c>  // b.none
  422818:	cmp	x21, #0x3
  42281c:	b.eq	42293c <wcrtomb@plt+0x1de4c>  // b.none
  422820:	cmp	x21, #0x4
  422824:	b.eq	42290c <wcrtomb@plt+0x1de1c>  // b.none
  422828:	b	422b44 <wcrtomb@plt+0x1e054>
  42282c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  422830:	add	x0, x0, #0xefc
  422834:	mov	x1, x20
  422838:	mov	x2, x21
  42283c:	bl	404400 <bcmp@plt>
  422840:	cbz	w0, 422ae4 <wcrtomb@plt+0x1dff4>
  422844:	cmp	x22, #0x3
  422848:	b.hi	422b44 <wcrtomb@plt+0x1e054>  // b.pmore
  42284c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422850:	add	x8, x8, #0x2e4
  422854:	adr	x9, 422768 <wcrtomb@plt+0x1dc78>
  422858:	ldrb	w10, [x8, x22]
  42285c:	add	x9, x9, x10, lsl #2
  422860:	br	x9
  422864:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422868:	add	x0, x0, #0x4d6
  42286c:	mov	x1, x20
  422870:	mov	x2, x21
  422874:	bl	404400 <bcmp@plt>
  422878:	cbz	w0, 422ad8 <wcrtomb@plt+0x1dfe8>
  42287c:	cmp	x22, #0x3
  422880:	b.hi	422b44 <wcrtomb@plt+0x1e054>  // b.pmore
  422884:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422888:	add	x8, x8, #0x2e8
  42288c:	adr	x9, 422768 <wcrtomb@plt+0x1dc78>
  422890:	ldrb	w10, [x8, x22]
  422894:	add	x9, x9, x10, lsl #2
  422898:	br	x9
  42289c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4228a0:	add	x0, x0, #0x4d5
  4228a4:	mov	x1, x20
  4228a8:	mov	x2, x21
  4228ac:	bl	404400 <bcmp@plt>
  4228b0:	cbz	w0, 422b08 <wcrtomb@plt+0x1e018>
  4228b4:	cmp	x22, #0x3
  4228b8:	b.hi	422b44 <wcrtomb@plt+0x1e054>  // b.pmore
  4228bc:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4228c0:	add	x8, x8, #0x2ec
  4228c4:	adr	x9, 422768 <wcrtomb@plt+0x1dc78>
  4228c8:	ldrb	w10, [x8, x22]
  4228cc:	add	x9, x9, x10, lsl #2
  4228d0:	br	x9
  4228d4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4228d8:	add	x0, x0, #0x4d9
  4228dc:	mov	x1, x20
  4228e0:	mov	x2, x21
  4228e4:	bl	404400 <bcmp@plt>
  4228e8:	cbz	w0, 422b6c <wcrtomb@plt+0x1e07c>
  4228ec:	cmp	x22, #0x3
  4228f0:	b.hi	422b44 <wcrtomb@plt+0x1e054>  // b.pmore
  4228f4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4228f8:	add	x8, x8, #0x2f0
  4228fc:	adr	x9, 422768 <wcrtomb@plt+0x1dc78>
  422900:	ldrb	w10, [x8, x22]
  422904:	add	x9, x9, x10, lsl #2
  422908:	br	x9
  42290c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422910:	add	x0, x0, #0x4e5
  422914:	mov	x1, x20
  422918:	mov	x2, x21
  42291c:	bl	404400 <bcmp@plt>
  422920:	cbz	w0, 422ac0 <wcrtomb@plt+0x1dfd0>
  422924:	cmp	x21, #0x2
  422928:	b.eq	42296c <wcrtomb@plt+0x1de7c>  // b.none
  42292c:	cmp	x21, #0x4
  422930:	b.eq	42299c <wcrtomb@plt+0x1deac>  // b.none
  422934:	cmp	x21, #0x3
  422938:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  42293c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422940:	add	x0, x0, #0x4ea
  422944:	mov	x1, x20
  422948:	mov	x2, x21
  42294c:	bl	404400 <bcmp@plt>
  422950:	cbz	w0, 422b14 <wcrtomb@plt+0x1e024>
  422954:	cmp	x21, #0x4
  422958:	b.eq	42299c <wcrtomb@plt+0x1deac>  // b.none
  42295c:	cmp	x21, #0x3
  422960:	b.eq	4229cc <wcrtomb@plt+0x1dedc>  // b.none
  422964:	cmp	x21, #0x2
  422968:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  42296c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422970:	add	x0, x0, #0x4ef
  422974:	mov	x1, x20
  422978:	mov	x2, x21
  42297c:	bl	404400 <bcmp@plt>
  422980:	cbz	w0, 422af0 <wcrtomb@plt+0x1e000>
  422984:	cmp	x21, #0x2
  422988:	b.eq	422a2c <wcrtomb@plt+0x1df3c>  // b.none
  42298c:	cmp	x21, #0x3
  422990:	b.eq	4229cc <wcrtomb@plt+0x1dedc>  // b.none
  422994:	cmp	x21, #0x4
  422998:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  42299c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4229a0:	add	x0, x0, #0xe8b
  4229a4:	mov	x1, x20
  4229a8:	mov	x2, x21
  4229ac:	bl	404400 <bcmp@plt>
  4229b0:	cbz	w0, 422afc <wcrtomb@plt+0x1e00c>
  4229b4:	cmp	x21, #0x2
  4229b8:	b.eq	422a2c <wcrtomb@plt+0x1df3c>  // b.none
  4229bc:	cmp	x21, #0x4
  4229c0:	b.eq	422a9c <wcrtomb@plt+0x1dfac>  // b.none
  4229c4:	cmp	x21, #0x3
  4229c8:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  4229cc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4229d0:	add	x0, x0, #0x4ee
  4229d4:	mov	x1, x20
  4229d8:	mov	x2, x21
  4229dc:	bl	404400 <bcmp@plt>
  4229e0:	cbz	w0, 422b2c <wcrtomb@plt+0x1e03c>
  4229e4:	cmp	x21, #0x2
  4229e8:	b.eq	422a2c <wcrtomb@plt+0x1df3c>  // b.none
  4229ec:	cmp	x21, #0x4
  4229f0:	b.eq	422a9c <wcrtomb@plt+0x1dfac>  // b.none
  4229f4:	cmp	x21, #0x3
  4229f8:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  4229fc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422a00:	add	x0, x0, #0x4f2
  422a04:	mov	x1, x20
  422a08:	mov	x2, x21
  422a0c:	bl	404400 <bcmp@plt>
  422a10:	cbz	w0, 422b84 <wcrtomb@plt+0x1e094>
  422a14:	cmp	x21, #0x4
  422a18:	b.eq	422a9c <wcrtomb@plt+0x1dfac>  // b.none
  422a1c:	cmp	x21, #0x3
  422a20:	b.eq	422a54 <wcrtomb@plt+0x1df64>  // b.none
  422a24:	cmp	x21, #0x2
  422a28:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  422a2c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422a30:	add	x0, x0, #0x4f7
  422a34:	mov	x1, x20
  422a38:	mov	x2, x21
  422a3c:	bl	404400 <bcmp@plt>
  422a40:	cbz	w0, 422b38 <wcrtomb@plt+0x1e048>
  422a44:	cmp	x21, #0x4
  422a48:	b.eq	422a9c <wcrtomb@plt+0x1dfac>  // b.none
  422a4c:	cmp	x21, #0x3
  422a50:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  422a54:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422a58:	add	x0, x0, #0x4f6
  422a5c:	mov	x1, x20
  422a60:	mov	x2, x21
  422a64:	bl	404400 <bcmp@plt>
  422a68:	cbz	w0, 422b60 <wcrtomb@plt+0x1e070>
  422a6c:	cmp	x21, #0x4
  422a70:	b.eq	422a9c <wcrtomb@plt+0x1dfac>  // b.none
  422a74:	cmp	x21, #0x3
  422a78:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  422a7c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422a80:	add	x0, x0, #0x4fb
  422a84:	mov	x1, x20
  422a88:	mov	x2, x21
  422a8c:	bl	404400 <bcmp@plt>
  422a90:	cbz	w0, 422b90 <wcrtomb@plt+0x1e0a0>
  422a94:	cmp	x21, #0x4
  422a98:	b.ne	422b44 <wcrtomb@plt+0x1e054>  // b.any
  422a9c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422aa0:	add	x0, x0, #0x4fa
  422aa4:	mov	x1, x20
  422aa8:	mov	x2, x21
  422aac:	bl	404400 <bcmp@plt>
  422ab0:	cbnz	w0, 422b44 <wcrtomb@plt+0x1e054>
  422ab4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ab8:	add	x8, x8, #0x4a0
  422abc:	b	422b40 <wcrtomb@plt+0x1e050>
  422ac0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ac4:	add	x8, x8, #0x3c8
  422ac8:	b	422b40 <wcrtomb@plt+0x1e050>
  422acc:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ad0:	add	x8, x8, #0x368
  422ad4:	b	422b40 <wcrtomb@plt+0x1e050>
  422ad8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422adc:	add	x8, x8, #0x320
  422ae0:	b	422b40 <wcrtomb@plt+0x1e050>
  422ae4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ae8:	add	x8, x8, #0x308
  422aec:	b	422b40 <wcrtomb@plt+0x1e050>
  422af0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422af4:	add	x8, x8, #0x3f8
  422af8:	b	422b40 <wcrtomb@plt+0x1e050>
  422afc:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b00:	add	x8, x8, #0x410
  422b04:	b	422b40 <wcrtomb@plt+0x1e050>
  422b08:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b0c:	add	x8, x8, #0x338
  422b10:	b	422b40 <wcrtomb@plt+0x1e050>
  422b14:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b18:	add	x8, x8, #0x3e0
  422b1c:	b	422b40 <wcrtomb@plt+0x1e050>
  422b20:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b24:	add	x8, x8, #0x380
  422b28:	b	422b40 <wcrtomb@plt+0x1e050>
  422b2c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b30:	add	x8, x8, #0x428
  422b34:	b	422b40 <wcrtomb@plt+0x1e050>
  422b38:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b3c:	add	x8, x8, #0x458
  422b40:	ldr	x19, [x8, #16]
  422b44:	cbz	x19, 422b50 <wcrtomb@plt+0x1e060>
  422b48:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  422b4c:	str	x19, [x8, #3896]
  422b50:	ldp	x20, x19, [sp, #32]
  422b54:	ldp	x22, x21, [sp, #16]
  422b58:	ldp	x29, x30, [sp], #48
  422b5c:	ret
  422b60:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b64:	add	x8, x8, #0x470
  422b68:	b	422b40 <wcrtomb@plt+0x1e050>
  422b6c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b70:	add	x8, x8, #0x350
  422b74:	b	422b40 <wcrtomb@plt+0x1e050>
  422b78:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b7c:	add	x8, x8, #0x398
  422b80:	b	422b40 <wcrtomb@plt+0x1e050>
  422b84:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b88:	add	x8, x8, #0x440
  422b8c:	b	422b40 <wcrtomb@plt+0x1e050>
  422b90:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422b94:	add	x8, x8, #0x488
  422b98:	b	422b40 <wcrtomb@plt+0x1e050>
  422b9c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ba0:	add	x8, x8, #0x3b0
  422ba4:	b	422b40 <wcrtomb@plt+0x1e050>
  422ba8:	stp	x29, x30, [sp, #-64]!
  422bac:	mov	w1, #0x2e                  	// #46
  422bb0:	str	x23, [sp, #16]
  422bb4:	stp	x22, x21, [sp, #32]
  422bb8:	stp	x20, x19, [sp, #48]
  422bbc:	mov	x29, sp
  422bc0:	mov	x19, x0
  422bc4:	bl	4044e0 <strrchr@plt>
  422bc8:	cbz	x0, 423000 <wcrtomb@plt+0x1e510>
  422bcc:	add	x21, x0, #0x1
  422bd0:	mov	x0, x21
  422bd4:	bl	403f00 <strlen@plt>
  422bd8:	sub	x23, x0, #0x1
  422bdc:	cmp	x23, #0x3
  422be0:	b.hi	423000 <wcrtomb@plt+0x1e510>  // b.pmore
  422be4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422be8:	add	x8, x8, #0x2f4
  422bec:	adr	x9, 422c00 <wcrtomb@plt+0x1e110>
  422bf0:	ldrb	w10, [x8, x23]
  422bf4:	add	x9, x9, x10, lsl #2
  422bf8:	mov	x20, x0
  422bfc:	br	x9
  422c00:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x14e3c>
  422c04:	add	x22, x22, #0xe73
  422c08:	mov	x0, x22
  422c0c:	mov	x1, x21
  422c10:	mov	x2, x20
  422c14:	bl	404400 <bcmp@plt>
  422c18:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422c1c:	cmp	x20, #0x2
  422c20:	b.eq	422e2c <wcrtomb@plt+0x1e33c>  // b.none
  422c24:	cmp	x20, #0x4
  422c28:	b.eq	422dc4 <wcrtomb@plt+0x1e2d4>  // b.none
  422c2c:	cmp	x20, #0x3
  422c30:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422c34:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422c38:	add	x22, x22, #0x4dd
  422c3c:	mov	x0, x22
  422c40:	mov	x1, x21
  422c44:	mov	x2, x20
  422c48:	bl	404400 <bcmp@plt>
  422c4c:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422c50:	cmp	x20, #0x2
  422c54:	b.eq	422e2c <wcrtomb@plt+0x1e33c>  // b.none
  422c58:	cmp	x20, #0x4
  422c5c:	b.eq	422dc4 <wcrtomb@plt+0x1e2d4>  // b.none
  422c60:	cmp	x20, #0x3
  422c64:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422c68:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422c6c:	add	x22, x22, #0x4e6
  422c70:	mov	x0, x22
  422c74:	mov	x1, x21
  422c78:	mov	x2, x20
  422c7c:	bl	404400 <bcmp@plt>
  422c80:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422c84:	cmp	x20, #0x2
  422c88:	b.eq	422e2c <wcrtomb@plt+0x1e33c>  // b.none
  422c8c:	cmp	x20, #0x4
  422c90:	b.eq	422dc4 <wcrtomb@plt+0x1e2d4>  // b.none
  422c94:	cmp	x20, #0x3
  422c98:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422c9c:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ca0:	add	x22, x22, #0x4e1
  422ca4:	mov	x0, x22
  422ca8:	mov	x1, x21
  422cac:	mov	x2, x20
  422cb0:	bl	404400 <bcmp@plt>
  422cb4:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422cb8:	cmp	x20, #0x2
  422cbc:	b.eq	422e2c <wcrtomb@plt+0x1e33c>  // b.none
  422cc0:	cmp	x20, #0x3
  422cc4:	b.eq	422df8 <wcrtomb@plt+0x1e308>  // b.none
  422cc8:	cmp	x20, #0x4
  422ccc:	b.eq	422dc4 <wcrtomb@plt+0x1e2d4>  // b.none
  422cd0:	b	423000 <wcrtomb@plt+0x1e510>
  422cd4:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  422cd8:	add	x22, x22, #0xefc
  422cdc:	mov	x0, x22
  422ce0:	mov	x1, x21
  422ce4:	mov	x2, x20
  422ce8:	bl	404400 <bcmp@plt>
  422cec:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422cf0:	cmp	x23, #0x3
  422cf4:	b.hi	423000 <wcrtomb@plt+0x1e510>  // b.pmore
  422cf8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422cfc:	add	x8, x8, #0x2f8
  422d00:	adr	x9, 422c00 <wcrtomb@plt+0x1e110>
  422d04:	ldrb	w10, [x8, x23]
  422d08:	add	x9, x9, x10, lsl #2
  422d0c:	br	x9
  422d10:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422d14:	add	x22, x22, #0x4d6
  422d18:	mov	x0, x22
  422d1c:	mov	x1, x21
  422d20:	mov	x2, x20
  422d24:	bl	404400 <bcmp@plt>
  422d28:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422d2c:	cmp	x23, #0x3
  422d30:	b.hi	423000 <wcrtomb@plt+0x1e510>  // b.pmore
  422d34:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422d38:	add	x8, x8, #0x2fc
  422d3c:	adr	x9, 422c00 <wcrtomb@plt+0x1e110>
  422d40:	ldrb	w10, [x8, x23]
  422d44:	add	x9, x9, x10, lsl #2
  422d48:	br	x9
  422d4c:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422d50:	add	x22, x22, #0x4d5
  422d54:	mov	x0, x22
  422d58:	mov	x1, x21
  422d5c:	mov	x2, x20
  422d60:	bl	404400 <bcmp@plt>
  422d64:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422d68:	cmp	x23, #0x3
  422d6c:	b.hi	423000 <wcrtomb@plt+0x1e510>  // b.pmore
  422d70:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422d74:	add	x8, x8, #0x300
  422d78:	adr	x9, 422c00 <wcrtomb@plt+0x1e110>
  422d7c:	ldrb	w10, [x8, x23]
  422d80:	add	x9, x9, x10, lsl #2
  422d84:	br	x9
  422d88:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422d8c:	add	x22, x22, #0x4d9
  422d90:	mov	x0, x22
  422d94:	mov	x1, x21
  422d98:	mov	x2, x20
  422d9c:	bl	404400 <bcmp@plt>
  422da0:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422da4:	cmp	x23, #0x3
  422da8:	b.hi	423000 <wcrtomb@plt+0x1e510>  // b.pmore
  422dac:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422db0:	add	x8, x8, #0x304
  422db4:	adr	x9, 422c00 <wcrtomb@plt+0x1e110>
  422db8:	ldrb	w10, [x8, x23]
  422dbc:	add	x9, x9, x10, lsl #2
  422dc0:	br	x9
  422dc4:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422dc8:	add	x22, x22, #0x4e5
  422dcc:	mov	x0, x22
  422dd0:	mov	x1, x21
  422dd4:	mov	x2, x20
  422dd8:	bl	404400 <bcmp@plt>
  422ddc:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422de0:	cmp	x20, #0x2
  422de4:	b.eq	422e2c <wcrtomb@plt+0x1e33c>  // b.none
  422de8:	cmp	x20, #0x4
  422dec:	b.eq	422e60 <wcrtomb@plt+0x1e370>  // b.none
  422df0:	cmp	x20, #0x3
  422df4:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422df8:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422dfc:	add	x22, x22, #0x4ea
  422e00:	mov	x0, x22
  422e04:	mov	x1, x21
  422e08:	mov	x2, x20
  422e0c:	bl	404400 <bcmp@plt>
  422e10:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422e14:	cmp	x20, #0x4
  422e18:	b.eq	422e60 <wcrtomb@plt+0x1e370>  // b.none
  422e1c:	cmp	x20, #0x3
  422e20:	b.eq	422e94 <wcrtomb@plt+0x1e3a4>  // b.none
  422e24:	cmp	x20, #0x2
  422e28:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422e2c:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422e30:	add	x22, x22, #0x4ef
  422e34:	mov	x0, x22
  422e38:	mov	x1, x21
  422e3c:	mov	x2, x20
  422e40:	bl	404400 <bcmp@plt>
  422e44:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422e48:	cmp	x20, #0x2
  422e4c:	b.eq	422efc <wcrtomb@plt+0x1e40c>  // b.none
  422e50:	cmp	x20, #0x3
  422e54:	b.eq	422e94 <wcrtomb@plt+0x1e3a4>  // b.none
  422e58:	cmp	x20, #0x4
  422e5c:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422e60:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x14e3c>
  422e64:	add	x22, x22, #0xe8b
  422e68:	mov	x0, x22
  422e6c:	mov	x1, x21
  422e70:	mov	x2, x20
  422e74:	bl	404400 <bcmp@plt>
  422e78:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422e7c:	cmp	x20, #0x2
  422e80:	b.eq	422efc <wcrtomb@plt+0x1e40c>  // b.none
  422e84:	cmp	x20, #0x4
  422e88:	b.eq	422f78 <wcrtomb@plt+0x1e488>  // b.none
  422e8c:	cmp	x20, #0x3
  422e90:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422e94:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422e98:	add	x22, x22, #0x4ee
  422e9c:	mov	x0, x22
  422ea0:	mov	x1, x21
  422ea4:	mov	x2, x20
  422ea8:	bl	404400 <bcmp@plt>
  422eac:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422eb0:	cmp	x20, #0x2
  422eb4:	b.eq	422efc <wcrtomb@plt+0x1e40c>  // b.none
  422eb8:	cmp	x20, #0x4
  422ebc:	b.eq	422f78 <wcrtomb@plt+0x1e488>  // b.none
  422ec0:	cmp	x20, #0x3
  422ec4:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422ec8:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422ecc:	add	x22, x22, #0x4f2
  422ed0:	mov	x0, x22
  422ed4:	mov	x1, x21
  422ed8:	mov	x2, x20
  422edc:	bl	404400 <bcmp@plt>
  422ee0:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422ee4:	cmp	x20, #0x4
  422ee8:	b.eq	422f78 <wcrtomb@plt+0x1e488>  // b.none
  422eec:	cmp	x20, #0x3
  422ef0:	b.eq	422f28 <wcrtomb@plt+0x1e438>  // b.none
  422ef4:	cmp	x20, #0x2
  422ef8:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422efc:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422f00:	add	x22, x22, #0x4f7
  422f04:	mov	x0, x22
  422f08:	mov	x1, x21
  422f0c:	mov	x2, x20
  422f10:	bl	404400 <bcmp@plt>
  422f14:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422f18:	cmp	x20, #0x4
  422f1c:	b.eq	422f78 <wcrtomb@plt+0x1e488>  // b.none
  422f20:	cmp	x20, #0x3
  422f24:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422f28:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422f2c:	add	x22, x22, #0x4f6
  422f30:	mov	x0, x22
  422f34:	mov	x1, x21
  422f38:	mov	x2, x20
  422f3c:	bl	404400 <bcmp@plt>
  422f40:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422f44:	cmp	x20, #0x4
  422f48:	b.eq	422f78 <wcrtomb@plt+0x1e488>  // b.none
  422f4c:	cmp	x20, #0x3
  422f50:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422f54:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422f58:	add	x22, x22, #0x4fb
  422f5c:	mov	x0, x22
  422f60:	mov	x1, x21
  422f64:	mov	x2, x20
  422f68:	bl	404400 <bcmp@plt>
  422f6c:	cbz	w0, 422f94 <wcrtomb@plt+0x1e4a4>
  422f70:	cmp	x20, #0x4
  422f74:	b.ne	423000 <wcrtomb@plt+0x1e510>  // b.any
  422f78:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422f7c:	add	x22, x22, #0x4fa
  422f80:	mov	x0, x22
  422f84:	mov	x1, x21
  422f88:	mov	x2, x20
  422f8c:	bl	404400 <bcmp@plt>
  422f90:	cbnz	w0, 423000 <wcrtomb@plt+0x1e510>
  422f94:	mov	x0, x19
  422f98:	bl	403f00 <strlen@plt>
  422f9c:	mvn	x8, x20
  422fa0:	add	x21, x0, x8
  422fa4:	cmp	x21, #0x5
  422fa8:	b.cc	422fdc <wcrtomb@plt+0x1e4ec>  // b.lo, b.ul, b.last
  422fac:	add	x8, x19, x21
  422fb0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  422fb4:	sub	x0, x8, #0x4
  422fb8:	add	x1, x1, #0x4d0
  422fbc:	mov	w2, #0x4                   	// #4
  422fc0:	bl	4042c0 <strncmp@plt>
  422fc4:	cbnz	w0, 422fe0 <wcrtomb@plt+0x1e4f0>
  422fc8:	ldrb	w8, [x22]
  422fcc:	sub	x9, x21, #0x4
  422fd0:	cmp	w8, #0x74
  422fd4:	csel	x21, x21, x9, eq  // eq = none
  422fd8:	b	422fe0 <wcrtomb@plt+0x1e4f0>
  422fdc:	cbz	x21, 423000 <wcrtomb@plt+0x1e510>
  422fe0:	add	x0, x21, #0x1
  422fe4:	bl	44a010 <argp_parse@@Base+0xf964>
  422fe8:	mov	x1, x19
  422fec:	mov	x2, x21
  422ff0:	mov	x20, x0
  422ff4:	bl	403e80 <memcpy@plt>
  422ff8:	strb	wzr, [x20, x21]
  422ffc:	b	423004 <wcrtomb@plt+0x1e514>
  423000:	mov	x20, xzr
  423004:	mov	x0, x20
  423008:	ldp	x20, x19, [sp, #48]
  42300c:	ldp	x22, x21, [sp, #32]
  423010:	ldr	x23, [sp, #16]
  423014:	ldp	x29, x30, [sp], #64
  423018:	ret
  42301c:	stp	x29, x30, [sp, #-16]!
  423020:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423024:	ldr	w1, [x8, #3968]
  423028:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42302c:	add	x2, x2, #0x710
  423030:	mov	w0, wzr
  423034:	mov	x29, sp
  423038:	bl	404890 <__fxstat@plt>
  42303c:	cmp	w0, #0x0
  423040:	cset	w0, eq  // eq = none
  423044:	ldp	x29, x30, [sp], #16
  423048:	ret
  42304c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423050:	ldr	x8, [x8, #3536]
  423054:	cbz	x8, 42307c <wcrtomb@plt+0x1e58c>
  423058:	ldr	x9, [x0, #88]
  42305c:	cmp	x9, x8
  423060:	b.ne	42307c <wcrtomb@plt+0x1e58c>  // b.any
  423064:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423068:	ldr	x8, [x0, #96]
  42306c:	ldr	x9, [x9, #3880]
  423070:	cmp	x8, x9
  423074:	cset	w0, eq  // eq = none
  423078:	ret
  42307c:	mov	w0, wzr
  423080:	ret
  423084:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423088:	ldr	w8, [x8, #3968]
  42308c:	mov	w9, #0x3fffffff            	// #1073741823
  423090:	cmp	w8, w9
  423094:	b.gt	4230cc <wcrtomb@plt+0x1e5dc>
  423098:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42309c:	ldr	w8, [x8, #1824]
  4230a0:	and	w8, w8, #0xf000
  4230a4:	cmp	w8, #0x8, lsl #12
  4230a8:	b.ne	4230cc <wcrtomb@plt+0x1e5dc>  // b.any
  4230ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4230b0:	add	x8, x8, #0x710
  4230b4:	ldp	x9, x8, [x8]
  4230b8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4230bc:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4230c0:	str	x9, [x10, #3536]
  4230c4:	str	x8, [x11, #3880]
  4230c8:	ret
  4230cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4230d0:	str	xzr, [x8, #3536]
  4230d4:	ret
  4230d8:	sub	sp, sp, #0x90
  4230dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4230e0:	ldr	x8, [x8, #3680]
  4230e4:	stp	x29, x30, [sp, #128]
  4230e8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4230ec:	add	x1, x1, #0x4ff
  4230f0:	ldr	x0, [x8]
  4230f4:	add	x29, sp, #0x80
  4230f8:	bl	404610 <strcmp@plt>
  4230fc:	cbz	w0, 423178 <wcrtomb@plt+0x1e688>
  423100:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423104:	ldr	w8, [x8, #3968]
  423108:	mov	w9, #0x3fffffff            	// #1073741823
  42310c:	cmp	w8, w9
  423110:	b.gt	423170 <wcrtomb@plt+0x1e680>
  423114:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423118:	ldr	w8, [x8, #1824]
  42311c:	and	w8, w8, #0xf000
  423120:	cmp	w8, #0x2, lsl #12
  423124:	b.ne	423170 <wcrtomb@plt+0x1e680>  // b.any
  423128:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42312c:	add	x1, x1, #0x4ff
  423130:	mov	x2, sp
  423134:	mov	w0, wzr
  423138:	bl	4049f0 <__xstat@plt>
  42313c:	mov	w8, wzr
  423140:	cbnz	w0, 42317c <wcrtomb@plt+0x1e68c>
  423144:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423148:	ldr	x8, [x8, #1808]
  42314c:	ldr	x9, [sp]
  423150:	cmp	x8, x9
  423154:	b.ne	423170 <wcrtomb@plt+0x1e680>  // b.any
  423158:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42315c:	ldr	x8, [x8, #1816]
  423160:	ldr	x9, [sp, #8]
  423164:	cmp	x8, x9
  423168:	cset	w8, eq  // eq = none
  42316c:	b	42317c <wcrtomb@plt+0x1e68c>
  423170:	mov	w8, wzr
  423174:	b	42317c <wcrtomb@plt+0x1e68c>
  423178:	mov	w8, #0x1                   	// #1
  42317c:	ldp	x29, x30, [sp, #128]
  423180:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423184:	strb	w8, [x9, #3528]
  423188:	add	sp, sp, #0x90
  42318c:	ret
  423190:	sub	sp, sp, #0x30
  423194:	stp	x29, x30, [sp, #16]
  423198:	stp	x20, x19, [sp, #32]
  42319c:	add	x29, sp, #0x10
  4231a0:	cbz	w0, 423250 <wcrtomb@plt+0x1e760>
  4231a4:	mov	w19, w1
  4231a8:	mov	w20, w0
  4231ac:	sub	x1, x29, #0x4
  4231b0:	mov	w0, w20
  4231b4:	mov	w2, wzr
  4231b8:	bl	404a40 <waitpid@plt>
  4231bc:	cmn	w0, #0x1
  4231c0:	b.ne	4231e0 <wcrtomb@plt+0x1e6f0>  // b.any
  4231c4:	bl	4049c0 <__errno_location@plt>
  4231c8:	ldr	w8, [x0]
  4231cc:	cmp	w8, #0x4
  4231d0:	b.eq	4231ac <wcrtomb@plt+0x1e6bc>  // b.none
  4231d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4231d8:	ldr	x0, [x8, #3896]
  4231dc:	bl	42d7dc <wcrtomb@plt+0x28cec>
  4231e0:	ldur	w9, [x29, #-4]
  4231e4:	mov	w10, #0x1000000             	// #16777216
  4231e8:	mov	w11, #0x2000000             	// #33554432
  4231ec:	and	w8, w9, #0x7f
  4231f0:	add	w10, w10, w8, lsl #24
  4231f4:	cmp	w10, w11
  4231f8:	b.lt	423248 <wcrtomb@plt+0x1e758>  // b.tstop
  4231fc:	cmp	w8, #0xd
  423200:	b.ne	423208 <wcrtomb@plt+0x1e718>  // b.any
  423204:	tbz	w19, #0, 423250 <wcrtomb@plt+0x1e760>
  423208:	mov	w19, w8
  42320c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423210:	ldr	x8, [x8, #4000]
  423214:	cbz	x8, 42321c <wcrtomb@plt+0x1e72c>
  423218:	blr	x8
  42321c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423220:	add	x1, x1, #0x509
  423224:	mov	w2, #0x5                   	// #5
  423228:	mov	x0, xzr
  42322c:	bl	4048b0 <dcgettext@plt>
  423230:	mov	x2, x0
  423234:	mov	w0, wzr
  423238:	mov	w1, wzr
  42323c:	mov	w3, w19
  423240:	bl	403f60 <error@plt>
  423244:	bl	40eb40 <wcrtomb@plt+0xa050>
  423248:	tst	w9, #0xff00
  42324c:	b.ne	423260 <wcrtomb@plt+0x1e770>  // b.any
  423250:	ldp	x20, x19, [sp, #32]
  423254:	ldp	x29, x30, [sp, #16]
  423258:	add	sp, sp, #0x30
  42325c:	ret
  423260:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423264:	ldr	x8, [x8, #4000]
  423268:	cbz	x8, 423270 <wcrtomb@plt+0x1e780>
  42326c:	blr	x8
  423270:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423274:	add	x1, x1, #0x557
  423278:	mov	w2, #0x5                   	// #5
  42327c:	mov	x0, xzr
  423280:	bl	4048b0 <dcgettext@plt>
  423284:	ldurb	w3, [x29, #-3]
  423288:	mov	x2, x0
  42328c:	mov	w0, wzr
  423290:	mov	w1, wzr
  423294:	bl	403f60 <error@plt>
  423298:	bl	40eb40 <wcrtomb@plt+0xa050>
  42329c:	sub	sp, sp, #0x30
  4232a0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4232a4:	add	x0, x0, #0x523
  4232a8:	stp	x29, x30, [sp, #16]
  4232ac:	stp	x20, x19, [sp, #32]
  4232b0:	add	x29, sp, #0x10
  4232b4:	bl	4049e0 <getenv@plt>
  4232b8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4232bc:	add	x8, x8, #0x529
  4232c0:	cmp	x0, #0x0
  4232c4:	csel	x19, x8, x0, eq  // eq = none
  4232c8:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  4232cc:	cbz	w0, 423314 <wcrtomb@plt+0x1e824>
  4232d0:	mov	w20, w0
  4232d4:	sub	x1, x29, #0x4
  4232d8:	mov	w0, w20
  4232dc:	mov	w2, wzr
  4232e0:	bl	404a40 <waitpid@plt>
  4232e4:	cmn	w0, #0x1
  4232e8:	b.ne	423304 <wcrtomb@plt+0x1e814>  // b.any
  4232ec:	bl	4049c0 <__errno_location@plt>
  4232f0:	ldr	w8, [x0]
  4232f4:	cmp	w8, #0x4
  4232f8:	b.eq	4232d4 <wcrtomb@plt+0x1e7e4>  // b.none
  4232fc:	mov	x0, x19
  423300:	bl	42d7dc <wcrtomb@plt+0x28cec>
  423304:	ldp	x20, x19, [sp, #32]
  423308:	ldp	x29, x30, [sp, #16]
  42330c:	add	sp, sp, #0x30
  423310:	ret
  423314:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423318:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x14e3c>
  42331c:	add	x1, x1, #0x531
  423320:	add	x2, x2, #0xf26
  423324:	mov	x0, x19
  423328:	mov	x3, xzr
  42332c:	bl	4049d0 <execlp@plt>
  423330:	mov	x0, x19
  423334:	bl	42c9c0 <wcrtomb@plt+0x27ed0>
  423338:	ldr	w8, [x0, #24]
  42333c:	ldr	w9, [x1, #24]
  423340:	cmp	w8, w9
  423344:	cset	w0, eq  // eq = none
  423348:	ret
  42334c:	ldr	w8, [x0, #28]
  423350:	ldr	w9, [x1, #28]
  423354:	cmp	w8, w9
  423358:	cset	w0, eq  // eq = none
  42335c:	ret
  423360:	ldr	x8, [x1]
  423364:	ldr	x9, [x0]
  423368:	cmp	x8, x9
  42336c:	b.ne	423384 <wcrtomb@plt+0x1e894>  // b.any
  423370:	ldr	x8, [x1, #8]
  423374:	ldr	x9, [x0, #8]
  423378:	cmp	x8, x9
  42337c:	cset	w0, eq  // eq = none
  423380:	ret
  423384:	mov	w0, wzr
  423388:	ret
  42338c:	stp	x29, x30, [sp, #-32]!
  423390:	mov	w2, #0x1                   	// #1
  423394:	mov	x1, xzr
  423398:	str	x19, [sp, #16]
  42339c:	mov	x29, sp
  4233a0:	mov	w19, w0
  4233a4:	bl	4040e0 <lseek@plt>
  4233a8:	tbnz	x0, #63, 4233c0 <wcrtomb@plt+0x1e8d0>
  4233ac:	mov	x1, x0
  4233b0:	mov	w0, w19
  4233b4:	ldr	x19, [sp, #16]
  4233b8:	ldp	x29, x30, [sp], #32
  4233bc:	b	404900 <ftruncate@plt>
  4233c0:	ldr	x19, [sp, #16]
  4233c4:	mov	w0, #0xffffffff            	// #-1
  4233c8:	ldp	x29, x30, [sp], #32
  4233cc:	ret
  4233d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4233d4:	ldr	w0, [x8, #3968]
  4233d8:	mov	w8, #0x40000000            	// #1073741824
  4233dc:	cmp	w0, w8
  4233e0:	b.lt	423400 <wcrtomb@plt+0x1e910>  // b.tstop
  4233e4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4233e8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4233ec:	ldr	x1, [x8, #2880]
  4233f0:	ldr	x2, [x9, #3912]
  4233f4:	mov	w8, #0xc0000000            	// #-1073741824
  4233f8:	add	w0, w0, w8
  4233fc:	b	42e5a0 <wcrtomb@plt+0x29ab0>
  423400:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423404:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423408:	ldr	x1, [x8, #2880]
  42340c:	ldr	x2, [x9, #3912]
  423410:	b	43e5e8 <argp_parse@@Base+0x3f3c>
  423414:	sub	sp, sp, #0xe0
  423418:	mov	w0, #0xd                   	// #13
  42341c:	mov	w1, #0x1                   	// #1
  423420:	stp	x29, x30, [sp, #144]
  423424:	stp	x26, x25, [sp, #160]
  423428:	stp	x24, x23, [sp, #176]
  42342c:	stp	x22, x21, [sp, #192]
  423430:	stp	x20, x19, [sp, #208]
  423434:	add	x29, sp, #0x90
  423438:	bl	404170 <signal@plt>
  42343c:	add	x0, sp, #0x8
  423440:	bl	41d114 <wcrtomb@plt+0x18624>
  423444:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  423448:	cmp	w0, #0x1
  42344c:	b.lt	423484 <wcrtomb@plt+0x1e994>  // b.tstop
  423450:	mov	w19, w0
  423454:	ldp	w0, w8, [sp, #8]
  423458:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42345c:	str	w8, [x9, #3968]
  423460:	bl	405694 <wcrtomb@plt+0xba4>
  423464:	mov	w0, w19
  423468:	ldp	x20, x19, [sp, #208]
  42346c:	ldp	x22, x21, [sp, #192]
  423470:	ldp	x24, x23, [sp, #176]
  423474:	ldp	x26, x25, [sp, #160]
  423478:	ldp	x29, x30, [sp, #144]
  42347c:	add	sp, sp, #0xe0
  423480:	ret
  423484:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423488:	add	x1, x1, #0x535
  42348c:	mov	w2, #0x5                   	// #5
  423490:	mov	x0, xzr
  423494:	bl	4048b0 <dcgettext@plt>
  423498:	bl	447614 <argp_parse@@Base+0xcf68>
  42349c:	mov	w0, #0xd                   	// #13
  4234a0:	mov	x1, xzr
  4234a4:	bl	404170 <signal@plt>
  4234a8:	ldr	w0, [sp, #8]
  4234ac:	mov	w1, wzr
  4234b0:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  4234b4:	ldr	w0, [sp, #12]
  4234b8:	bl	405694 <wcrtomb@plt+0xba4>
  4234bc:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4234c0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4234c4:	ldrb	w8, [x23, #4008]
  4234c8:	ldr	x19, [x21, #3680]
  4234cc:	cbz	w8, 4234f8 <wcrtomb@plt+0x1ea08>
  4234d0:	ldr	x1, [x19]
  4234d4:	add	x2, sp, #0x10
  4234d8:	mov	w0, wzr
  4234dc:	bl	4049f0 <__xstat@plt>
  4234e0:	cbz	w0, 423530 <wcrtomb@plt+0x1ea40>
  4234e4:	bl	4049c0 <__errno_location@plt>
  4234e8:	ldr	w8, [x0]
  4234ec:	cmp	w8, #0x2
  4234f0:	b.ne	423540 <wcrtomb@plt+0x1ea50>  // b.any
  4234f4:	b	42374c <wcrtomb@plt+0x1ec5c>
  4234f8:	ldr	x0, [x19]
  4234fc:	mov	w1, #0x3a                  	// #58
  423500:	bl	404750 <strchr@plt>
  423504:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423508:	str	x0, [x9, #4016]
  42350c:	cbz	x0, 4234d0 <wcrtomb@plt+0x1e9e0>
  423510:	mov	x8, x0
  423514:	ldr	x0, [x19]
  423518:	subs	x2, x8, x0
  42351c:	b.ls	4234d0 <wcrtomb@plt+0x1e9e0>  // b.plast
  423520:	mov	w1, #0x2f                  	// #47
  423524:	bl	404840 <memchr@plt>
  423528:	cbnz	x0, 4234d0 <wcrtomb@plt+0x1e9e0>
  42352c:	b	423540 <wcrtomb@plt+0x1ea50>
  423530:	ldr	w8, [sp, #32]
  423534:	and	w8, w8, #0xf000
  423538:	cmp	w8, #0x8, lsl #12
  42353c:	b.eq	42374c <wcrtomb@plt+0x1ec5c>  // b.none
  423540:	add	x0, sp, #0x10
  423544:	bl	41d114 <wcrtomb@plt+0x18624>
  423548:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  42354c:	cbz	w0, 42371c <wcrtomb@plt+0x1ec2c>
  423550:	mov	w19, w0
  423554:	ldr	w0, [sp, #16]
  423558:	mov	w1, wzr
  42355c:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  423560:	ldr	w0, [sp, #20]
  423564:	bl	405694 <wcrtomb@plt+0xba4>
  423568:	ldr	x24, [x21, #3680]
  42356c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  423570:	add	x1, x1, #0xb35
  423574:	ldr	x20, [x24]
  423578:	mov	x0, x20
  42357c:	bl	404610 <strcmp@plt>
  423580:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423584:	cbz	w0, 4235d8 <wcrtomb@plt+0x1eae8>
  423588:	ldrb	w8, [x23, #4008]
  42358c:	cbnz	w8, 4235c0 <wcrtomb@plt+0x1ead0>
  423590:	mov	w1, #0x3a                  	// #58
  423594:	mov	x0, x20
  423598:	bl	404750 <strchr@plt>
  42359c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4235a0:	str	x0, [x8, #4016]
  4235a4:	ldr	x20, [x24]
  4235a8:	subs	x2, x0, x20
  4235ac:	b.ls	4235c0 <wcrtomb@plt+0x1ead0>  // b.plast
  4235b0:	mov	w1, #0x2f                  	// #47
  4235b4:	mov	x0, x20
  4235b8:	bl	404840 <memchr@plt>
  4235bc:	cbz	x0, 4236f8 <wcrtomb@plt+0x1ec08>
  4235c0:	mov	w1, #0x1b6                 	// #438
  4235c4:	mov	x0, x20
  4235c8:	bl	404a80 <creat@plt>
  4235cc:	str	w0, [x22, #3968]
  4235d0:	tbz	w0, #31, 4235e0 <wcrtomb@plt+0x1eaf0>
  4235d4:	b	4237b8 <wcrtomb@plt+0x1ecc8>
  4235d8:	mov	w8, #0x1                   	// #1
  4235dc:	str	w8, [x22, #3968]
  4235e0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4235e4:	ldr	x2, [x21, #3912]
  4235e8:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4235ec:	mov	w24, #0x40000000            	// #1073741824
  4235f0:	mov	w25, #0xc0000000            	// #-1073741824
  4235f4:	b	423610 <wcrtomb@plt+0x1eb20>
  4235f8:	ldr	x1, [x23, #2880]
  4235fc:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  423600:	ldr	x8, [x21, #3912]
  423604:	mov	x2, x0
  423608:	cmp	x0, x8
  42360c:	b.ne	423674 <wcrtomb@plt+0x1eb84>  // b.any
  423610:	cbz	x2, 4236f0 <wcrtomb@plt+0x1ec00>
  423614:	ldr	x20, [x23, #2880]
  423618:	mov	x26, xzr
  42361c:	sub	x2, x2, x26
  423620:	mov	w0, wzr
  423624:	mov	x1, x20
  423628:	bl	44932c <argp_parse@@Base+0xec80>
  42362c:	cbz	x0, 42367c <wcrtomb@plt+0x1eb8c>
  423630:	cmn	x0, #0x1
  423634:	b.eq	4236cc <wcrtomb@plt+0x1ebdc>  // b.none
  423638:	ldr	x2, [x21, #3912]
  42363c:	add	x26, x0, x26
  423640:	add	x20, x20, x0
  423644:	cmp	x2, x26
  423648:	b.hi	42361c <wcrtomb@plt+0x1eb2c>  // b.pmore
  42364c:	ldr	w0, [x22, #3968]
  423650:	cmp	w0, w24
  423654:	b.lt	4235f8 <wcrtomb@plt+0x1eb08>  // b.tstop
  423658:	ldr	x1, [x23, #2880]
  42365c:	add	w0, w0, w25
  423660:	bl	42e5a0 <wcrtomb@plt+0x29ab0>
  423664:	ldr	x8, [x21, #3912]
  423668:	mov	x2, x0
  42366c:	cmp	x0, x8
  423670:	b.eq	423610 <wcrtomb@plt+0x1eb20>  // b.none
  423674:	mov	x0, x2
  423678:	bl	4056c8 <wcrtomb@plt+0xbd8>
  42367c:	cbz	x26, 4236f0 <wcrtomb@plt+0x1ec00>
  423680:	ldr	x8, [x23, #2880]
  423684:	ldr	x9, [x21, #3912]
  423688:	mov	w1, wzr
  42368c:	add	x0, x8, x26
  423690:	sub	x2, x9, x26
  423694:	bl	404320 <memset@plt>
  423698:	ldr	w0, [x22, #3968]
  42369c:	mov	w8, #0x40000000            	// #1073741824
  4236a0:	cmp	w0, w8
  4236a4:	b.lt	4236d8 <wcrtomb@plt+0x1ebe8>  // b.tstop
  4236a8:	ldr	x1, [x23, #2880]
  4236ac:	ldr	x2, [x21, #3912]
  4236b0:	mov	w8, #0xc0000000            	// #-1073741824
  4236b4:	add	w0, w0, w8
  4236b8:	bl	42e5a0 <wcrtomb@plt+0x29ab0>
  4236bc:	ldr	x8, [x21, #3912]
  4236c0:	cmp	x0, x8
  4236c4:	b.eq	4236f0 <wcrtomb@plt+0x1ec00>  // b.none
  4236c8:	bl	4056c8 <wcrtomb@plt+0xbd8>
  4236cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4236d0:	ldr	x0, [x8, #3896]
  4236d4:	bl	42cef0 <wcrtomb@plt+0x28400>
  4236d8:	ldr	x1, [x23, #2880]
  4236dc:	ldr	x2, [x21, #3912]
  4236e0:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  4236e4:	ldr	x8, [x21, #3912]
  4236e8:	cmp	x0, x8
  4236ec:	b.ne	4236c8 <wcrtomb@plt+0x1ebd8>  // b.any
  4236f0:	mov	w0, w19
  4236f4:	bl	4238e0 <wcrtomb@plt+0x1edf0>
  4236f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4236fc:	ldr	x3, [x8, #3800]
  423700:	mov	w1, #0x41                  	// #65
  423704:	mov	w2, #0x40000000            	// #1073741824
  423708:	mov	x0, x20
  42370c:	bl	42dc2c <wcrtomb@plt+0x2913c>
  423710:	str	w0, [x22, #3968]
  423714:	tbz	w0, #31, 4235e0 <wcrtomb@plt+0x1eaf0>
  423718:	b	4237b8 <wcrtomb@plt+0x1ecc8>
  42371c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423720:	add	x1, x1, #0x541
  423724:	mov	w2, #0x5                   	// #5
  423728:	mov	x0, xzr
  42372c:	bl	4048b0 <dcgettext@plt>
  423730:	bl	447614 <argp_parse@@Base+0xcf68>
  423734:	ldr	w0, [sp, #20]
  423738:	mov	w1, #0x1                   	// #1
  42373c:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  423740:	ldr	w0, [sp, #16]
  423744:	bl	405694 <wcrtomb@plt+0xba4>
  423748:	b	4237cc <wcrtomb@plt+0x1ecdc>
  42374c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423750:	ldrb	w8, [x20, #3749]
  423754:	cbz	w8, 423768 <wcrtomb@plt+0x1ec78>
  423758:	ldr	x8, [x21, #3680]
  42375c:	mov	w1, #0x1                   	// #1
  423760:	ldr	x0, [x8]
  423764:	bl	41c568 <wcrtomb@plt+0x17a78>
  423768:	ldr	x8, [x21, #3680]
  42376c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  423770:	add	x1, x1, #0xb35
  423774:	ldr	x19, [x8]
  423778:	mov	x0, x19
  42377c:	bl	404610 <strcmp@plt>
  423780:	cbz	w0, 4237cc <wcrtomb@plt+0x1ecdc>
  423784:	mov	w1, #0x1b6                 	// #438
  423788:	mov	x0, x19
  42378c:	bl	404a80 <creat@plt>
  423790:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423794:	str	w0, [x8, #3968]
  423798:	tbz	w0, #31, 4237c4 <wcrtomb@plt+0x1ecd4>
  42379c:	bl	4049c0 <__errno_location@plt>
  4237a0:	ldrb	w8, [x20, #3749]
  4237a4:	ldr	w20, [x0]
  4237a8:	mov	x19, x0
  4237ac:	cbz	w8, 4237b4 <wcrtomb@plt+0x1ecc4>
  4237b0:	bl	41c7d0 <wcrtomb@plt+0x17ce0>
  4237b4:	str	w20, [x19]
  4237b8:	ldr	x8, [x21, #3680]
  4237bc:	ldr	x0, [x8]
  4237c0:	bl	42cc7c <wcrtomb@plt+0x2818c>
  4237c4:	mov	w1, #0x1                   	// #1
  4237c8:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  4237cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4237d0:	ldr	x0, [x8, #3896]
  4237d4:	bl	4238a4 <wcrtomb@plt+0x1edb4>
  4237d8:	stp	x29, x30, [sp, #-32]!
  4237dc:	cmp	w0, w1
  4237e0:	stp	x20, x19, [sp, #16]
  4237e4:	mov	x29, sp
  4237e8:	b.ne	4237f8 <wcrtomb@plt+0x1ed08>  // b.any
  4237ec:	ldp	x20, x19, [sp, #16]
  4237f0:	ldp	x29, x30, [sp], #32
  4237f4:	ret
  4237f8:	mov	w19, w0
  4237fc:	mov	w0, w1
  423800:	mov	w20, w1
  423804:	bl	4044d0 <close@plt>
  423808:	cbz	w0, 42381c <wcrtomb@plt+0x1ed2c>
  42380c:	bl	4049c0 <__errno_location@plt>
  423810:	ldr	w8, [x0]
  423814:	cmp	w8, #0x9
  423818:	b.ne	423864 <wcrtomb@plt+0x1ed74>  // b.any
  42381c:	mov	w0, w19
  423820:	bl	403f50 <dup@plt>
  423824:	cmp	w0, w20
  423828:	b.ne	42383c <wcrtomb@plt+0x1ed4c>  // b.any
  42382c:	mov	w0, w19
  423830:	ldp	x20, x19, [sp, #16]
  423834:	ldp	x29, x30, [sp], #32
  423838:	b	405694 <wcrtomb@plt+0xba4>
  42383c:	tbz	w0, #31, 4238a0 <wcrtomb@plt+0x1edb0>
  423840:	bl	4049c0 <__errno_location@plt>
  423844:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423848:	ldr	x8, [x8, #4000]
  42384c:	ldr	w19, [x0]
  423850:	cbz	x8, 423858 <wcrtomb@plt+0x1ed68>
  423854:	blr	x8
  423858:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42385c:	add	x1, x1, #0x62f
  423860:	b	423880 <wcrtomb@plt+0x1ed90>
  423864:	mov	w19, w8
  423868:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42386c:	ldr	x8, [x8, #4000]
  423870:	cbz	x8, 423878 <wcrtomb@plt+0x1ed88>
  423874:	blr	x8
  423878:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42387c:	add	x1, x1, #0x622
  423880:	mov	w2, #0x5                   	// #5
  423884:	mov	x0, xzr
  423888:	bl	4048b0 <dcgettext@plt>
  42388c:	mov	x2, x0
  423890:	mov	w0, wzr
  423894:	mov	w1, w19
  423898:	bl	403f60 <error@plt>
  42389c:	bl	40eb40 <wcrtomb@plt+0xa050>
  4238a0:	bl	404560 <abort@plt>
  4238a4:	sub	sp, sp, #0x40
  4238a8:	str	x19, [sp, #48]
  4238ac:	mov	x19, x0
  4238b0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4238b4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4238b8:	add	x0, x0, #0x529
  4238bc:	add	x8, x8, #0x63a
  4238c0:	mov	x1, sp
  4238c4:	stp	x29, x30, [sp, #32]
  4238c8:	add	x29, sp, #0x20
  4238cc:	stp	x0, x8, [sp]
  4238d0:	stp	x19, xzr, [sp, #16]
  4238d4:	bl	404410 <execv@plt>
  4238d8:	mov	x0, x19
  4238dc:	bl	42c9c0 <wcrtomb@plt+0x27ed0>
  4238e0:	stp	x29, x30, [sp, #-32]!
  4238e4:	str	x19, [sp, #16]
  4238e8:	mov	w19, w0
  4238ec:	mov	x29, sp
  4238f0:	add	x1, x29, #0x1c
  4238f4:	mov	w0, w19
  4238f8:	mov	w2, wzr
  4238fc:	bl	404a40 <waitpid@plt>
  423900:	cmn	w0, #0x1
  423904:	b.ne	423924 <wcrtomb@plt+0x1ee34>  // b.any
  423908:	bl	4049c0 <__errno_location@plt>
  42390c:	ldr	w8, [x0]
  423910:	cmp	w8, #0x4
  423914:	b.eq	4238f0 <wcrtomb@plt+0x1ee00>  // b.none
  423918:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42391c:	ldr	x0, [x8, #3896]
  423920:	bl	42d7dc <wcrtomb@plt+0x28cec>
  423924:	ldr	w8, [x29, #28]
  423928:	mov	w9, #0x1000000             	// #16777216
  42392c:	mov	w10, #0x2000000             	// #33554432
  423930:	and	w0, w8, #0x7f
  423934:	add	w9, w9, w0, lsl #24
  423938:	cmp	w9, w10
  42393c:	b.lt	42394c <wcrtomb@plt+0x1ee5c>  // b.tstop
  423940:	bl	403f40 <raise@plt>
  423944:	mov	w0, wzr
  423948:	bl	403f30 <exit@plt>
  42394c:	ubfx	w0, w8, #8, #8
  423950:	bl	403f30 <exit@plt>
  423954:	sub	sp, sp, #0xd0
  423958:	stp	x29, x30, [sp, #128]
  42395c:	add	x29, sp, #0x80
  423960:	add	x0, x29, #0x18
  423964:	str	x25, [sp, #144]
  423968:	stp	x24, x23, [sp, #160]
  42396c:	stp	x22, x21, [sp, #176]
  423970:	stp	x20, x19, [sp, #192]
  423974:	bl	41d114 <wcrtomb@plt+0x18624>
  423978:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  42397c:	cmp	w0, #0x1
  423980:	b.lt	4239b8 <wcrtomb@plt+0x1eec8>  // b.tstop
  423984:	mov	w19, w0
  423988:	ldp	w8, w0, [x29, #24]
  42398c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423990:	str	w8, [x9, #3968]
  423994:	bl	405694 <wcrtomb@plt+0xba4>
  423998:	mov	w0, w19
  42399c:	ldp	x20, x19, [sp, #192]
  4239a0:	ldp	x22, x21, [sp, #176]
  4239a4:	ldp	x24, x23, [sp, #160]
  4239a8:	ldr	x25, [sp, #144]
  4239ac:	ldp	x29, x30, [sp, #128]
  4239b0:	add	sp, sp, #0xd0
  4239b4:	ret
  4239b8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4239bc:	add	x1, x1, #0x535
  4239c0:	mov	w2, #0x5                   	// #5
  4239c4:	mov	x0, xzr
  4239c8:	bl	4048b0 <dcgettext@plt>
  4239cc:	bl	447614 <argp_parse@@Base+0xcf68>
  4239d0:	mov	w0, #0xd                   	// #13
  4239d4:	mov	x1, xzr
  4239d8:	bl	404170 <signal@plt>
  4239dc:	ldr	w0, [x29, #28]
  4239e0:	mov	w1, #0x1                   	// #1
  4239e4:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  4239e8:	ldr	w0, [x29, #24]
  4239ec:	bl	405694 <wcrtomb@plt+0xba4>
  4239f0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4239f4:	ldr	x20, [x21, #3680]
  4239f8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4239fc:	add	x1, x1, #0xb35
  423a00:	ldr	x19, [x20]
  423a04:	mov	x0, x19
  423a08:	bl	404610 <strcmp@plt>
  423a0c:	cbnz	w0, 423a50 <wcrtomb@plt+0x1ef60>
  423a10:	mov	x0, sp
  423a14:	bl	41d114 <wcrtomb@plt+0x18624>
  423a18:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  423a1c:	cbnz	w0, 423ab4 <wcrtomb@plt+0x1efc4>
  423a20:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423a24:	add	x1, x1, #0x541
  423a28:	mov	w2, #0x5                   	// #5
  423a2c:	mov	x0, xzr
  423a30:	bl	4048b0 <dcgettext@plt>
  423a34:	bl	447614 <argp_parse@@Base+0xcf68>
  423a38:	ldr	w0, [sp]
  423a3c:	mov	w1, wzr
  423a40:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  423a44:	ldr	w0, [sp, #4]
  423a48:	bl	405694 <wcrtomb@plt+0xba4>
  423a4c:	bl	423c6c <wcrtomb@plt+0x1f17c>
  423a50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423a54:	ldrb	w8, [x8, #4008]
  423a58:	cbnz	w8, 423a8c <wcrtomb@plt+0x1ef9c>
  423a5c:	mov	w1, #0x3a                  	// #58
  423a60:	mov	x0, x19
  423a64:	bl	404750 <strchr@plt>
  423a68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423a6c:	str	x0, [x8, #4016]
  423a70:	ldr	x19, [x20]
  423a74:	subs	x2, x0, x19
  423a78:	b.ls	423a8c <wcrtomb@plt+0x1ef9c>  // b.plast
  423a7c:	mov	w1, #0x2f                  	// #47
  423a80:	mov	x0, x19
  423a84:	bl	404840 <memchr@plt>
  423a88:	cbz	x0, 423a10 <wcrtomb@plt+0x1ef20>
  423a8c:	mov	x2, sp
  423a90:	mov	w0, wzr
  423a94:	mov	x1, x19
  423a98:	bl	4049f0 <__xstat@plt>
  423a9c:	cbnz	w0, 423af4 <wcrtomb@plt+0x1f004>
  423aa0:	ldr	w8, [sp, #16]
  423aa4:	and	w8, w8, #0xf000
  423aa8:	cmp	w8, #0x8, lsl #12
  423aac:	b.ne	423a10 <wcrtomb@plt+0x1ef20>  // b.any
  423ab0:	b	423b04 <wcrtomb@plt+0x1f014>
  423ab4:	mov	w19, w0
  423ab8:	ldr	w0, [sp, #4]
  423abc:	mov	w1, #0x1                   	// #1
  423ac0:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  423ac4:	ldr	w0, [sp]
  423ac8:	bl	405694 <wcrtomb@plt+0xba4>
  423acc:	ldr	x22, [x21, #3680]
  423ad0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  423ad4:	add	x1, x1, #0xb35
  423ad8:	ldr	x20, [x22]
  423adc:	mov	x0, x20
  423ae0:	bl	404610 <strcmp@plt>
  423ae4:	cbnz	w0, 423b30 <wcrtomb@plt+0x1f040>
  423ae8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423aec:	str	wzr, [x8, #3968]
  423af0:	b	423bb0 <wcrtomb@plt+0x1f0c0>
  423af4:	bl	4049c0 <__errno_location@plt>
  423af8:	ldr	w8, [x0]
  423afc:	cmp	w8, #0x2
  423b00:	b.ne	423a10 <wcrtomb@plt+0x1ef20>  // b.any
  423b04:	ldr	x8, [x21, #3680]
  423b08:	mov	w2, #0x1b6                 	// #438
  423b0c:	mov	w1, wzr
  423b10:	ldr	x0, [x8]
  423b14:	bl	404240 <open@plt>
  423b18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423b1c:	str	w0, [x8, #3968]
  423b20:	tbnz	w0, #31, 423ba4 <wcrtomb@plt+0x1f0b4>
  423b24:	mov	w1, wzr
  423b28:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  423b2c:	bl	423c6c <wcrtomb@plt+0x1f17c>
  423b30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423b34:	ldrb	w8, [x8, #4008]
  423b38:	cbnz	w8, 423b88 <wcrtomb@plt+0x1f098>
  423b3c:	mov	w1, #0x3a                  	// #58
  423b40:	mov	x0, x20
  423b44:	bl	404750 <strchr@plt>
  423b48:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423b4c:	str	x0, [x8, #4016]
  423b50:	ldr	x20, [x22]
  423b54:	subs	x2, x0, x20
  423b58:	b.ls	423b88 <wcrtomb@plt+0x1f098>  // b.plast
  423b5c:	mov	w1, #0x2f                  	// #47
  423b60:	mov	x0, x20
  423b64:	bl	404840 <memchr@plt>
  423b68:	cbnz	x0, 423b88 <wcrtomb@plt+0x1f098>
  423b6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423b70:	ldr	x3, [x8, #3800]
  423b74:	mov	w2, #0x40000000            	// #1073741824
  423b78:	mov	x0, x20
  423b7c:	mov	w1, wzr
  423b80:	bl	42dc2c <wcrtomb@plt+0x2913c>
  423b84:	b	423b98 <wcrtomb@plt+0x1f0a8>
  423b88:	mov	w2, #0x1b6                 	// #438
  423b8c:	mov	x0, x20
  423b90:	mov	w1, wzr
  423b94:	bl	404240 <open@plt>
  423b98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423b9c:	str	w0, [x8, #3968]
  423ba0:	tbz	w0, #31, 423bb0 <wcrtomb@plt+0x1f0c0>
  423ba4:	ldr	x8, [x21, #3680]
  423ba8:	ldr	x0, [x8]
  423bac:	bl	42cc7c <wcrtomb@plt+0x2818c>
  423bb0:	bl	404da0 <wcrtomb@plt+0x2b0>
  423bb4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423bb8:	mov	w22, #0x40000000            	// #1073741824
  423bbc:	mov	w24, #0xc0000000            	// #-1073741824
  423bc0:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423bc4:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423bc8:	ldr	w0, [x21, #3968]
  423bcc:	cmp	w0, w22
  423bd0:	b.lt	423be8 <wcrtomb@plt+0x1f0f8>  // b.tstop
  423bd4:	ldr	x1, [x23, #2880]
  423bd8:	ldr	x2, [x25, #3912]
  423bdc:	add	w0, w0, w24
  423be0:	bl	42e42c <wcrtomb@plt+0x2993c>
  423be4:	b	423bf4 <wcrtomb@plt+0x1f104>
  423be8:	ldr	x1, [x23, #2880]
  423bec:	ldr	x2, [x25, #3912]
  423bf0:	bl	44932c <argp_parse@@Base+0xec80>
  423bf4:	mov	x20, x0
  423bf8:	cbz	x0, 423c5c <wcrtomb@plt+0x1f16c>
  423bfc:	cmn	x20, #0x1
  423c00:	b.ne	423c18 <wcrtomb@plt+0x1f128>  // b.any
  423c04:	bl	405790 <wcrtomb@plt+0xca0>
  423c08:	ldr	w0, [x21, #3968]
  423c0c:	cmp	w0, w22
  423c10:	b.lt	423be8 <wcrtomb@plt+0x1f0f8>  // b.tstop
  423c14:	b	423bd4 <wcrtomb@plt+0x1f0e4>
  423c18:	ldr	x21, [x23, #2880]
  423c1c:	mov	w23, #0x200                 	// #512
  423c20:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423c24:	cmp	x20, #0x200
  423c28:	csel	x22, x20, x23, cc  // cc = lo, ul, last
  423c2c:	mov	w0, #0x1                   	// #1
  423c30:	mov	x1, x21
  423c34:	mov	x2, x22
  423c38:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  423c3c:	cmp	x0, x22
  423c40:	b.eq	423c4c <wcrtomb@plt+0x1f15c>  // b.none
  423c44:	ldr	x0, [x24, #3896]
  423c48:	bl	42d860 <wcrtomb@plt+0x28d70>
  423c4c:	subs	x20, x20, x22
  423c50:	add	x21, x21, x22
  423c54:	b.eq	423bb0 <wcrtomb@plt+0x1f0c0>  // b.none
  423c58:	b	423c24 <wcrtomb@plt+0x1f134>
  423c5c:	mov	w0, #0x1                   	// #1
  423c60:	bl	405694 <wcrtomb@plt+0xba4>
  423c64:	mov	w0, w19
  423c68:	bl	4238e0 <wcrtomb@plt+0x1edf0>
  423c6c:	sub	sp, sp, #0x150
  423c70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423c74:	ldr	x8, [x8, #112]
  423c78:	stp	x29, x30, [sp, #240]
  423c7c:	add	x29, sp, #0xf0
  423c80:	mov	w9, #0x1                   	// #1
  423c84:	sub	x0, x29, #0x4
  423c88:	stp	x28, x27, [sp, #256]
  423c8c:	stp	x26, x25, [sp, #272]
  423c90:	stp	x24, x23, [sp, #288]
  423c94:	stp	x22, x21, [sp, #304]
  423c98:	stp	x20, x19, [sp, #320]
  423c9c:	str	x8, [sp, #112]
  423ca0:	str	x9, [sp, #16]
  423ca4:	bl	404e64 <wcrtomb@plt+0x374>
  423ca8:	cbz	x0, 423e08 <wcrtomb@plt+0x1f318>
  423cac:	mov	w20, #0xe06                 	// #3590
  423cb0:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423cb4:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423cb8:	adrp	x27, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423cbc:	mov	w8, wzr
  423cc0:	mov	x23, xzr
  423cc4:	movk	w20, #0x208, lsl #16
  423cc8:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  423ccc:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423cd0:	add	x21, x21, #0x63d
  423cd4:	add	x22, x22, #0x64b
  423cd8:	add	x27, x27, #0x655
  423cdc:	mov	x19, x0
  423ce0:	tbz	w8, #0, 423d5c <wcrtomb@plt+0x1f26c>
  423ce4:	ldrb	w8, [x26, #3714]
  423ce8:	tbz	w8, #3, 423d5c <wcrtomb@plt+0x1f26c>
  423cec:	ldr	x8, [x25, #4000]
  423cf0:	cbz	x8, 423cf8 <wcrtomb@plt+0x1f208>
  423cf4:	blr	x8
  423cf8:	bl	4049c0 <__errno_location@plt>
  423cfc:	ldr	w24, [x0]
  423d00:	mov	w2, #0x5                   	// #5
  423d04:	mov	x0, xzr
  423d08:	mov	x1, x21
  423d0c:	bl	4048b0 <dcgettext@plt>
  423d10:	mov	x2, x0
  423d14:	mov	w0, wzr
  423d18:	mov	w1, w24
  423d1c:	mov	x3, x23
  423d20:	bl	403f60 <error@plt>
  423d24:	ldrb	w8, [x26, #3714]
  423d28:	tbz	w8, #3, 423d5c <wcrtomb@plt+0x1f26c>
  423d2c:	ldr	x8, [x25, #4000]
  423d30:	cbz	x8, 423d38 <wcrtomb@plt+0x1f248>
  423d34:	blr	x8
  423d38:	mov	w2, #0x5                   	// #5
  423d3c:	mov	x0, xzr
  423d40:	mov	x1, x22
  423d44:	bl	4048b0 <dcgettext@plt>
  423d48:	mov	x2, x0
  423d4c:	mov	w0, wzr
  423d50:	mov	w1, wzr
  423d54:	mov	x3, x19
  423d58:	bl	403f60 <error@plt>
  423d5c:	mov	x1, sp
  423d60:	mov	x0, x19
  423d64:	mov	w2, w20
  423d68:	bl	42f7d0 <wcrtomb@plt+0x2ace0>
  423d6c:	cbnz	w0, 423dc0 <wcrtomb@plt+0x1f2d0>
  423d70:	ldp	x0, x8, [sp, #8]
  423d74:	ldr	x9, [sp]
  423d78:	orr	w20, w20, #0x8
  423d7c:	add	x1, x0, x8, lsl #3
  423d80:	lsl	x2, x9, #3
  423d84:	bl	403e90 <memmove@plt>
  423d88:	ldp	x9, x8, [sp]
  423d8c:	str	x27, [x8, x9, lsl #3]
  423d90:	ldr	x1, [sp, #8]
  423d94:	ldr	x0, [x1]
  423d98:	bl	4045f0 <execvp@plt>
  423d9c:	ldp	x9, x8, [sp]
  423da0:	sub	x0, x29, #0x4
  423da4:	str	xzr, [x8, x9, lsl #3]
  423da8:	bl	404ed0 <wcrtomb@plt+0x3e0>
  423dac:	mov	w8, #0x1                   	// #1
  423db0:	mov	x23, x19
  423db4:	cbnz	x0, 423cdc <wcrtomb@plt+0x1f1ec>
  423db8:	mov	x0, x19
  423dbc:	bl	42c9c0 <wcrtomb@plt+0x27ed0>
  423dc0:	ldr	x8, [x25, #4000]
  423dc4:	cbz	x8, 423dcc <wcrtomb@plt+0x1f2dc>
  423dc8:	blr	x8
  423dcc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  423dd0:	add	x1, x1, #0x58d
  423dd4:	mov	w2, #0x5                   	// #5
  423dd8:	mov	x0, xzr
  423ddc:	bl	4048b0 <dcgettext@plt>
  423de0:	mov	x20, x0
  423de4:	mov	x0, sp
  423de8:	bl	42fac0 <wcrtomb@plt+0x2afd0>
  423dec:	mov	x4, x0
  423df0:	mov	w0, wzr
  423df4:	mov	w1, wzr
  423df8:	mov	x2, x20
  423dfc:	mov	x3, x19
  423e00:	bl	403f60 <error@plt>
  423e04:	bl	40eb40 <wcrtomb@plt+0xa050>
  423e08:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423e0c:	ldr	x8, [x8, #4000]
  423e10:	cbz	x8, 423e18 <wcrtomb@plt+0x1f328>
  423e14:	blr	x8
  423e18:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423e1c:	add	x1, x1, #0x658
  423e20:	mov	w2, #0x5                   	// #5
  423e24:	mov	x0, xzr
  423e28:	bl	4048b0 <dcgettext@plt>
  423e2c:	mov	x2, x0
  423e30:	mov	w0, wzr
  423e34:	mov	w1, wzr
  423e38:	bl	403f60 <error@plt>
  423e3c:	bl	40eb40 <wcrtomb@plt+0xa050>
  423e40:	sub	sp, sp, #0x40
  423e44:	stp	x22, x21, [sp, #32]
  423e48:	mov	x21, x0
  423e4c:	add	x0, sp, #0x8
  423e50:	stp	x29, x30, [sp, #16]
  423e54:	stp	x20, x19, [sp, #48]
  423e58:	add	x29, sp, #0x10
  423e5c:	mov	x19, x2
  423e60:	mov	w20, w1
  423e64:	bl	41d114 <wcrtomb@plt+0x18624>
  423e68:	mov	w0, #0xd                   	// #13
  423e6c:	mov	w1, #0x1                   	// #1
  423e70:	bl	404170 <signal@plt>
  423e74:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423e78:	add	x22, x22, #0x798
  423e7c:	str	x0, [x22, #8]
  423e80:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  423e84:	ldr	w8, [sp, #8]
  423e88:	str	w0, [x22]
  423e8c:	cbz	w0, 423eb0 <wcrtomb@plt+0x1f3c0>
  423e90:	mov	w0, w8
  423e94:	bl	405694 <wcrtomb@plt+0xba4>
  423e98:	ldr	w0, [sp, #12]
  423e9c:	ldp	x20, x19, [sp, #48]
  423ea0:	ldp	x22, x21, [sp, #32]
  423ea4:	ldp	x29, x30, [sp, #16]
  423ea8:	add	sp, sp, #0x40
  423eac:	ret
  423eb0:	mov	w0, w8
  423eb4:	mov	w1, wzr
  423eb8:	bl	4237d8 <wcrtomb@plt+0x1ece8>
  423ebc:	ldr	w0, [sp, #12]
  423ec0:	bl	405694 <wcrtomb@plt+0xba4>
  423ec4:	mov	x0, x21
  423ec8:	mov	w1, w20
  423ecc:	mov	x2, x19
  423ed0:	bl	423ee0 <wcrtomb@plt+0x1f3f0>
  423ed4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423ed8:	ldr	x0, [x8, #3608]
  423edc:	bl	4238a4 <wcrtomb@plt+0x1edb4>
  423ee0:	sub	sp, sp, #0x50
  423ee4:	stp	x22, x21, [sp, #48]
  423ee8:	stp	x20, x19, [sp, #64]
  423eec:	mov	w20, w1
  423ef0:	mov	x21, x0
  423ef4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423ef8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  423efc:	mov	x19, x2
  423f00:	add	x0, x0, #0x5bb
  423f04:	add	x1, x1, #0x8fc
  423f08:	mov	w2, #0x1                   	// #1
  423f0c:	stp	x29, x30, [sp, #32]
  423f10:	add	x29, sp, #0x20
  423f14:	bl	404010 <setenv@plt>
  423f18:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  423f1c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423f20:	ldr	x8, [x22, #3728]
  423f24:	ldr	x1, [x8]
  423f28:	cbz	x1, 423f44 <wcrtomb@plt+0x1f454>
  423f2c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423f30:	add	x0, x0, #0x5c7
  423f34:	mov	w2, #0x1                   	// #1
  423f38:	bl	404010 <setenv@plt>
  423f3c:	cbz	w0, 423f50 <wcrtomb@plt+0x1f460>
  423f40:	b	424294 <wcrtomb@plt+0x1f7a4>
  423f44:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423f48:	add	x0, x0, #0x5c7
  423f4c:	bl	404810 <unsetenv@plt>
  423f50:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423f54:	ldr	x8, [x22, #3728]
  423f58:	ldr	x9, [x9, #3680]
  423f5c:	mov	x1, sp
  423f60:	sub	x8, x8, x9
  423f64:	asr	x8, x8, #3
  423f68:	add	x0, x8, #0x1
  423f6c:	bl	440290 <argp_parse@@Base+0x5be4>
  423f70:	mov	x1, x0
  423f74:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423f78:	add	x0, x0, #0x5d3
  423f7c:	mov	w2, #0x1                   	// #1
  423f80:	bl	404010 <setenv@plt>
  423f84:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  423f88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423f8c:	ldrsw	x0, [x8, #3740]
  423f90:	mov	x1, sp
  423f94:	bl	440290 <argp_parse@@Base+0x5be4>
  423f98:	mov	x1, x0
  423f9c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423fa0:	add	x0, x0, #0x5de
  423fa4:	mov	w2, #0x1                   	// #1
  423fa8:	bl	404010 <setenv@plt>
  423fac:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  423fb0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423fb4:	ldr	w8, [x8, #2944]
  423fb8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  423fbc:	ldr	w9, [x9, #3808]
  423fc0:	cmp	w8, #0x0
  423fc4:	csel	w0, w9, w8, eq  // eq = none
  423fc8:	bl	424a00 <wcrtomb@plt+0x1ff10>
  423fcc:	cbz	x0, 423fec <wcrtomb@plt+0x1f4fc>
  423fd0:	mov	x1, x0
  423fd4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423fd8:	add	x0, x0, #0x601
  423fdc:	mov	w2, #0x1                   	// #1
  423fe0:	bl	404010 <setenv@plt>
  423fe4:	cbz	w0, 423ff8 <wcrtomb@plt+0x1f508>
  423fe8:	b	424294 <wcrtomb@plt+0x1f7a4>
  423fec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423ff0:	add	x0, x0, #0x601
  423ff4:	bl	404810 <unsetenv@plt>
  423ff8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  423ffc:	add	x0, x0, #0x67c
  424000:	mov	x1, sp
  424004:	mov	w2, #0x1                   	// #1
  424008:	strb	w20, [sp]
  42400c:	strb	wzr, [sp, #1]
  424010:	bl	404010 <setenv@plt>
  424014:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424018:	ldr	w5, [x19, #104]
  42401c:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424020:	add	x4, x4, #0x718
  424024:	mov	x0, sp
  424028:	mov	w1, #0x18                  	// #24
  42402c:	mov	w2, #0x1                   	// #1
  424030:	mov	w3, #0x18                  	// #24
  424034:	bl	404190 <__snprintf_chk@plt>
  424038:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42403c:	add	x0, x0, #0x689
  424040:	mov	x1, sp
  424044:	mov	w2, #0x1                   	// #1
  424048:	bl	404010 <setenv@plt>
  42404c:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424050:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424054:	add	x0, x0, #0x692
  424058:	cbz	x21, 4240c4 <wcrtomb@plt+0x1f5d4>
  42405c:	mov	w2, #0x1                   	// #1
  424060:	mov	x1, x21
  424064:	bl	404010 <setenv@plt>
  424068:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  42406c:	ldr	x1, [x19, #8]
  424070:	cbz	x1, 4240d0 <wcrtomb@plt+0x1f5e0>
  424074:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424078:	add	x0, x0, #0x69f
  42407c:	mov	w2, #0x1                   	// #1
  424080:	bl	404010 <setenv@plt>
  424084:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424088:	ldr	x1, [x19, #32]
  42408c:	cbz	x1, 4240e4 <wcrtomb@plt+0x1f5f4>
  424090:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424094:	add	x0, x0, #0x6ac
  424098:	mov	w2, #0x1                   	// #1
  42409c:	bl	404010 <setenv@plt>
  4240a0:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  4240a4:	ldr	x1, [x19, #40]
  4240a8:	cbz	x1, 4240f8 <wcrtomb@plt+0x1f608>
  4240ac:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4240b0:	add	x0, x0, #0x6b6
  4240b4:	mov	w2, #0x1                   	// #1
  4240b8:	bl	404010 <setenv@plt>
  4240bc:	cbz	w0, 424104 <wcrtomb@plt+0x1f614>
  4240c0:	b	424294 <wcrtomb@plt+0x1f7a4>
  4240c4:	bl	404810 <unsetenv@plt>
  4240c8:	ldr	x1, [x19, #8]
  4240cc:	cbnz	x1, 424074 <wcrtomb@plt+0x1f584>
  4240d0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4240d4:	add	x0, x0, #0x69f
  4240d8:	bl	404810 <unsetenv@plt>
  4240dc:	ldr	x1, [x19, #32]
  4240e0:	cbnz	x1, 424090 <wcrtomb@plt+0x1f5a0>
  4240e4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4240e8:	add	x0, x0, #0x6ac
  4240ec:	bl	404810 <unsetenv@plt>
  4240f0:	ldr	x1, [x19, #40]
  4240f4:	cbnz	x1, 4240ac <wcrtomb@plt+0x1f5bc>
  4240f8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4240fc:	add	x0, x0, #0x6b6
  424100:	bl	404810 <unsetenv@plt>
  424104:	ldp	x0, x1, [x19, #216]
  424108:	mov	x2, sp
  42410c:	bl	41be34 <wcrtomb@plt+0x17344>
  424110:	mov	x1, x0
  424114:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424118:	add	x0, x0, #0x6c0
  42411c:	mov	w2, #0x1                   	// #1
  424120:	bl	404010 <setenv@plt>
  424124:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424128:	ldp	x0, x1, [x19, #232]
  42412c:	mov	x2, sp
  424130:	bl	41be34 <wcrtomb@plt+0x17344>
  424134:	mov	x1, x0
  424138:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42413c:	add	x0, x0, #0x6ca
  424140:	mov	w2, #0x1                   	// #1
  424144:	bl	404010 <setenv@plt>
  424148:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  42414c:	ldp	x0, x1, [x19, #248]
  424150:	mov	x2, sp
  424154:	bl	41be34 <wcrtomb@plt+0x17344>
  424158:	mov	x1, x0
  42415c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424160:	add	x0, x0, #0x6d4
  424164:	mov	w2, #0x1                   	// #1
  424168:	bl	404010 <setenv@plt>
  42416c:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424170:	ldr	x0, [x19, #136]
  424174:	mov	x1, sp
  424178:	bl	440290 <argp_parse@@Base+0x5be4>
  42417c:	mov	x1, x0
  424180:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424184:	add	x0, x0, #0x6de
  424188:	mov	w2, #0x1                   	// #1
  42418c:	bl	404010 <setenv@plt>
  424190:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424194:	ldr	w0, [x19, #112]
  424198:	mov	x1, sp
  42419c:	bl	440290 <argp_parse@@Base+0x5be4>
  4241a0:	mov	x1, x0
  4241a4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4241a8:	add	x0, x0, #0x6e7
  4241ac:	mov	w2, #0x1                   	// #1
  4241b0:	bl	404010 <setenv@plt>
  4241b4:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  4241b8:	ldr	w0, [x19, #116]
  4241bc:	mov	x1, sp
  4241c0:	bl	440290 <argp_parse@@Base+0x5be4>
  4241c4:	mov	x1, x0
  4241c8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4241cc:	add	x0, x0, #0x6ef
  4241d0:	mov	w2, #0x1                   	// #1
  4241d4:	bl	404010 <setenv@plt>
  4241d8:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  4241dc:	and	w8, w20, #0xff
  4241e0:	sub	w9, w8, #0x62
  4241e4:	cmp	w9, #0x2
  4241e8:	b.cc	424234 <wcrtomb@plt+0x1f744>  // b.lo, b.ul, b.last
  4241ec:	cmp	w8, #0x68
  4241f0:	b.eq	4241fc <wcrtomb@plt+0x1f70c>  // b.none
  4241f4:	cmp	w8, #0x6c
  4241f8:	b.ne	424298 <wcrtomb@plt+0x1f7a8>  // b.any
  4241fc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424200:	add	x0, x0, #0x6f7
  424204:	bl	404810 <unsetenv@plt>
  424208:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42420c:	add	x0, x0, #0x701
  424210:	bl	404810 <unsetenv@plt>
  424214:	ldr	x1, [x19, #24]
  424218:	cbz	x1, 4242b0 <wcrtomb@plt+0x1f7c0>
  42421c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424220:	add	x0, x0, #0x70b
  424224:	mov	w2, #0x1                   	// #1
  424228:	bl	404010 <setenv@plt>
  42422c:	cbz	w0, 4242bc <wcrtomb@plt+0x1f7cc>
  424230:	b	424294 <wcrtomb@plt+0x1f7a4>
  424234:	ldr	x8, [x19, #120]
  424238:	mov	x1, sp
  42423c:	lsr	x9, x8, #12
  424240:	and	x0, x9, #0xffffff00
  424244:	bfxil	x0, x8, #0, #8
  424248:	bl	440290 <argp_parse@@Base+0x5be4>
  42424c:	mov	x1, x0
  424250:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424254:	add	x0, x0, #0x6f7
  424258:	mov	w2, #0x1                   	// #1
  42425c:	bl	404010 <setenv@plt>
  424260:	cbnz	w0, 424294 <wcrtomb@plt+0x1f7a4>
  424264:	ldr	x8, [x19, #120]
  424268:	mov	x1, sp
  42426c:	lsr	x9, x8, #32
  424270:	and	x0, x9, #0xfffff000
  424274:	bfxil	x0, x8, #8, #12
  424278:	bl	440290 <argp_parse@@Base+0x5be4>
  42427c:	mov	x1, x0
  424280:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424284:	add	x0, x0, #0x701
  424288:	mov	w2, #0x1                   	// #1
  42428c:	bl	404010 <setenv@plt>
  424290:	cbz	w0, 4242b0 <wcrtomb@plt+0x1f7c0>
  424294:	bl	40eb80 <wcrtomb@plt+0xa090>
  424298:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42429c:	add	x0, x0, #0x6f7
  4242a0:	bl	404810 <unsetenv@plt>
  4242a4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4242a8:	add	x0, x0, #0x701
  4242ac:	bl	404810 <unsetenv@plt>
  4242b0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4242b4:	add	x0, x0, #0x70b
  4242b8:	bl	404810 <unsetenv@plt>
  4242bc:	ldp	x20, x19, [sp, #64]
  4242c0:	ldp	x22, x21, [sp, #48]
  4242c4:	ldp	x29, x30, [sp, #32]
  4242c8:	add	sp, sp, #0x50
  4242cc:	ret
  4242d0:	stp	x29, x30, [sp, #-32]!
  4242d4:	str	x19, [sp, #16]
  4242d8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4242dc:	ldr	w8, [x19, #1944]
  4242e0:	mov	x29, sp
  4242e4:	tbnz	w8, #31, 424334 <wcrtomb@plt+0x1f844>
  4242e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4242ec:	ldr	x1, [x8, #1952]
  4242f0:	mov	w0, #0xd                   	// #13
  4242f4:	bl	404170 <signal@plt>
  4242f8:	ldr	w0, [x19, #1944]
  4242fc:	add	x1, x29, #0x1c
  424300:	mov	w2, wzr
  424304:	bl	404a40 <waitpid@plt>
  424308:	cmn	w0, #0x1
  42430c:	b.ne	424340 <wcrtomb@plt+0x1f850>  // b.any
  424310:	bl	4049c0 <__errno_location@plt>
  424314:	ldr	w8, [x0]
  424318:	cmp	w8, #0x4
  42431c:	b.eq	4242f8 <wcrtomb@plt+0x1f808>  // b.none
  424320:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424324:	ldr	x0, [x8, #3608]
  424328:	mov	w8, #0xffffffff            	// #-1
  42432c:	str	w8, [x19, #1944]
  424330:	bl	42d7dc <wcrtomb@plt+0x28cec>
  424334:	ldr	x19, [sp, #16]
  424338:	ldp	x29, x30, [sp], #32
  42433c:	ret
  424340:	ldr	w9, [x29, #28]
  424344:	ands	w8, w9, #0x7f
  424348:	b.eq	4243a4 <wcrtomb@plt+0x1f8b4>  // b.none
  42434c:	mov	w9, #0x1000000             	// #16777216
  424350:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424354:	add	w9, w9, w8, lsl #24
  424358:	ldr	x8, [x10, #4000]
  42435c:	mov	w10, #0x2000000             	// #33554432
  424360:	cmp	w9, w10
  424364:	b.lt	4243f8 <wcrtomb@plt+0x1f908>  // b.tstop
  424368:	cbz	x8, 424370 <wcrtomb@plt+0x1f880>
  42436c:	blr	x8
  424370:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424374:	add	x1, x1, #0x570
  424378:	mov	w2, #0x5                   	// #5
  42437c:	mov	x0, xzr
  424380:	bl	4048b0 <dcgettext@plt>
  424384:	ldr	w8, [x29, #28]
  424388:	ldrsw	x3, [x19, #1944]
  42438c:	mov	x2, x0
  424390:	mov	w0, wzr
  424394:	and	w4, w8, #0x7f
  424398:	mov	w1, wzr
  42439c:	bl	403f60 <error@plt>
  4243a0:	b	424434 <wcrtomb@plt+0x1f944>
  4243a4:	tst	w9, #0xff00
  4243a8:	b.eq	424434 <wcrtomb@plt+0x1f944>  // b.none
  4243ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4243b0:	ldrb	w8, [x8, #3569]
  4243b4:	cbnz	w8, 424434 <wcrtomb@plt+0x1f944>
  4243b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4243bc:	ldr	x8, [x8, #4000]
  4243c0:	cbz	x8, 4243c8 <wcrtomb@plt+0x1f8d8>
  4243c4:	blr	x8
  4243c8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4243cc:	add	x1, x1, #0x552
  4243d0:	mov	w2, #0x5                   	// #5
  4243d4:	mov	x0, xzr
  4243d8:	bl	4048b0 <dcgettext@plt>
  4243dc:	ldrsw	x3, [x19, #1944]
  4243e0:	ldrb	w4, [x29, #29]
  4243e4:	mov	x2, x0
  4243e8:	mov	w0, wzr
  4243ec:	mov	w1, wzr
  4243f0:	bl	403f60 <error@plt>
  4243f4:	b	424428 <wcrtomb@plt+0x1f938>
  4243f8:	cbz	x8, 424400 <wcrtomb@plt+0x1f910>
  4243fc:	blr	x8
  424400:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424404:	add	x1, x1, #0x593
  424408:	mov	w2, #0x5                   	// #5
  42440c:	mov	x0, xzr
  424410:	bl	4048b0 <dcgettext@plt>
  424414:	ldrsw	x3, [x19, #1944]
  424418:	mov	x2, x0
  42441c:	mov	w0, wzr
  424420:	mov	w1, wzr
  424424:	bl	403f60 <error@plt>
  424428:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42442c:	mov	w9, #0x2                   	// #2
  424430:	str	w9, [x8, #2352]
  424434:	mov	w8, #0xffffffff            	// #-1
  424438:	str	w8, [x19, #1944]
  42443c:	ldr	x19, [sp, #16]
  424440:	ldp	x29, x30, [sp], #32
  424444:	ret
  424448:	sub	sp, sp, #0x70
  42444c:	stp	x29, x30, [sp, #48]
  424450:	add	x29, sp, #0x30
  424454:	stp	x20, x19, [sp, #96]
  424458:	mov	x19, x0
  42445c:	add	x0, x29, #0x18
  424460:	str	x23, [sp, #64]
  424464:	stp	x22, x21, [sp, #80]
  424468:	mov	w21, w1
  42446c:	bl	41d114 <wcrtomb@plt+0x18624>
  424470:	mov	w0, #0xd                   	// #13
  424474:	mov	w1, #0x1                   	// #1
  424478:	bl	404170 <signal@plt>
  42447c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424480:	str	x0, [x23, #1936]
  424484:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  424488:	cbz	w0, 4245ac <wcrtomb@plt+0x1fabc>
  42448c:	mov	w20, w0
  424490:	ldr	w0, [x29, #28]
  424494:	str	xzr, [sp, #24]
  424498:	str	xzr, [sp, #8]
  42449c:	bl	405694 <wcrtomb@plt+0xba4>
  4244a0:	ldr	w0, [x29, #24]
  4244a4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4244a8:	add	x1, x1, #0xedb
  4244ac:	bl	404330 <fdopen@plt>
  4244b0:	mov	x22, x0
  4244b4:	add	x0, sp, #0x18
  4244b8:	add	x1, sp, #0x8
  4244bc:	mov	w2, #0xa                   	// #10
  4244c0:	mov	x3, x22
  4244c4:	bl	404a20 <__getdelim@plt>
  4244c8:	mov	x21, x0
  4244cc:	mov	x0, x22
  4244d0:	bl	4041a0 <fclose@plt>
  4244d4:	cmp	w21, #0x1
  4244d8:	b.lt	4244fc <wcrtomb@plt+0x1fa0c>  // b.tstop
  4244dc:	ldr	x8, [sp, #24]
  4244e0:	sub	w9, w21, #0x1
  4244e4:	ldrb	w9, [x8, w9, sxtw]
  4244e8:	cmp	w9, #0xa
  4244ec:	b.ne	4244fc <wcrtomb@plt+0x1fa0c>  // b.any
  4244f0:	sxtw	x9, w21
  4244f4:	sub	x21, x9, #0x1
  4244f8:	strb	wzr, [x8, x21]
  4244fc:	add	x1, sp, #0x14
  424500:	mov	w0, w20
  424504:	mov	w2, wzr
  424508:	bl	404a40 <waitpid@plt>
  42450c:	cmn	w0, #0x1
  424510:	b.ne	424540 <wcrtomb@plt+0x1fa50>  // b.any
  424514:	bl	4049c0 <__errno_location@plt>
  424518:	ldr	w8, [x0]
  42451c:	cmp	w8, #0x4
  424520:	b.eq	4244fc <wcrtomb@plt+0x1fa0c>  // b.none
  424524:	ldr	x1, [x23, #1936]
  424528:	mov	w0, #0xd                   	// #13
  42452c:	bl	404170 <signal@plt>
  424530:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424534:	ldr	x0, [x8, #3760]
  424538:	bl	42d7dc <wcrtomb@plt+0x28cec>
  42453c:	b	424560 <wcrtomb@plt+0x1fa70>
  424540:	ldr	x1, [x23, #1936]
  424544:	mov	w0, #0xd                   	// #13
  424548:	bl	404170 <signal@plt>
  42454c:	ldr	w8, [sp, #20]
  424550:	tst	w8, #0x7f
  424554:	b.eq	42457c <wcrtomb@plt+0x1fa8c>  // b.none
  424558:	ldr	x0, [sp, #24]
  42455c:	bl	4046b0 <free@plt>
  424560:	mov	w0, #0xffffffff            	// #-1
  424564:	ldp	x20, x19, [sp, #96]
  424568:	ldp	x22, x21, [sp, #80]
  42456c:	ldr	x23, [sp, #64]
  424570:	ldp	x29, x30, [sp, #48]
  424574:	add	sp, sp, #0x70
  424578:	ret
  42457c:	ldr	x0, [sp, #24]
  424580:	cmp	w21, #0x1
  424584:	b.lt	42459c <wcrtomb@plt+0x1faac>  // b.tstop
  424588:	and	w9, w8, #0xff00
  42458c:	cbnz	w9, 42459c <wcrtomb@plt+0x1faac>
  424590:	str	x0, [x19]
  424594:	ubfx	w0, w8, #8, #8
  424598:	b	424564 <wcrtomb@plt+0x1fa74>
  42459c:	bl	4046b0 <free@plt>
  4245a0:	ldr	w8, [sp, #20]
  4245a4:	ubfx	w0, w8, #8, #8
  4245a8:	b	424564 <wcrtomb@plt+0x1fa74>
  4245ac:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4245b0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4245b4:	add	x0, x0, #0x5bb
  4245b8:	add	x1, x1, #0x8fc
  4245bc:	mov	w2, #0x1                   	// #1
  4245c0:	bl	404010 <setenv@plt>
  4245c4:	ldr	x1, [x19]
  4245c8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4245cc:	add	x0, x0, #0x5c7
  4245d0:	mov	w2, #0x1                   	// #1
  4245d4:	bl	404010 <setenv@plt>
  4245d8:	sxtw	x0, w21
  4245dc:	add	x1, sp, #0x18
  4245e0:	bl	440290 <argp_parse@@Base+0x5be4>
  4245e4:	mov	x1, x0
  4245e8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4245ec:	add	x0, x0, #0x5d3
  4245f0:	mov	w2, #0x1                   	// #1
  4245f4:	bl	404010 <setenv@plt>
  4245f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4245fc:	ldrsw	x0, [x8, #3740]
  424600:	add	x1, sp, #0x18
  424604:	bl	440290 <argp_parse@@Base+0x5be4>
  424608:	mov	x1, x0
  42460c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424610:	add	x0, x0, #0x5de
  424614:	mov	w2, #0x1                   	// #1
  424618:	bl	404010 <setenv@plt>
  42461c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424620:	ldr	w0, [x8, #3852]
  424624:	bl	424a28 <wcrtomb@plt+0x1ff38>
  424628:	mov	x1, x0
  42462c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424630:	add	x0, x0, #0x5f2
  424634:	mov	w2, #0x1                   	// #1
  424638:	bl	404010 <setenv@plt>
  42463c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424640:	ldr	w8, [x8, #2944]
  424644:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424648:	ldr	w9, [x9, #3808]
  42464c:	cmp	w8, #0x0
  424650:	csel	w0, w9, w8, eq  // eq = none
  424654:	bl	424a00 <wcrtomb@plt+0x1ff10>
  424658:	mov	x1, x0
  42465c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424660:	add	x0, x0, #0x601
  424664:	mov	w2, #0x1                   	// #1
  424668:	bl	404010 <setenv@plt>
  42466c:	ldrsw	x0, [x29, #28]
  424670:	add	x1, sp, #0x18
  424674:	bl	440290 <argp_parse@@Base+0x5be4>
  424678:	mov	x1, x0
  42467c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424680:	add	x0, x0, #0x60c
  424684:	mov	w2, #0x1                   	// #1
  424688:	bl	404010 <setenv@plt>
  42468c:	ldr	w0, [x29, #24]
  424690:	bl	405694 <wcrtomb@plt+0xba4>
  424694:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424698:	ldr	x0, [x8, #3760]
  42469c:	bl	4238a4 <wcrtomb@plt+0x1edb4>
  4246a0:	sub	sp, sp, #0x50
  4246a4:	stp	x29, x30, [sp, #32]
  4246a8:	stp	x22, x21, [sp, #48]
  4246ac:	stp	x20, x19, [sp, #64]
  4246b0:	add	x29, sp, #0x20
  4246b4:	mov	w20, w2
  4246b8:	mov	x22, x1
  4246bc:	mov	x19, x0
  4246c0:	bl	41d0d4 <wcrtomb@plt+0x185e4>
  4246c4:	cbz	w0, 424710 <wcrtomb@plt+0x1fc20>
  4246c8:	mov	w21, w0
  4246cc:	add	x1, sp, #0x8
  4246d0:	mov	w0, w21
  4246d4:	mov	w2, wzr
  4246d8:	bl	404a40 <waitpid@plt>
  4246dc:	cmn	w0, #0x1
  4246e0:	b.ne	4246fc <wcrtomb@plt+0x1fc0c>  // b.any
  4246e4:	bl	4049c0 <__errno_location@plt>
  4246e8:	ldr	w8, [x0]
  4246ec:	cmp	w8, #0x4
  4246f0:	b.eq	4246cc <wcrtomb@plt+0x1fbdc>  // b.none
  4246f4:	mov	x0, x19
  4246f8:	bl	42d7dc <wcrtomb@plt+0x28cec>
  4246fc:	ldp	x20, x19, [sp, #64]
  424700:	ldp	x22, x21, [sp, #48]
  424704:	ldp	x29, x30, [sp, #32]
  424708:	add	sp, sp, #0x50
  42470c:	ret
  424710:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424714:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  424718:	add	x0, x0, #0x5bb
  42471c:	add	x1, x1, #0x8fc
  424720:	mov	w2, #0x1                   	// #1
  424724:	bl	404010 <setenv@plt>
  424728:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42472c:	add	x0, x0, #0x5c7
  424730:	mov	w2, #0x1                   	// #1
  424734:	mov	x1, x22
  424738:	bl	404010 <setenv@plt>
  42473c:	sxtw	x0, w20
  424740:	add	x1, sp, #0x8
  424744:	bl	440290 <argp_parse@@Base+0x5be4>
  424748:	mov	x1, x0
  42474c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424750:	add	x0, x0, #0x613
  424754:	mov	w2, #0x1                   	// #1
  424758:	bl	404010 <setenv@plt>
  42475c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424760:	ldrsw	x0, [x8, #3740]
  424764:	add	x1, sp, #0x8
  424768:	bl	440290 <argp_parse@@Base+0x5be4>
  42476c:	mov	x1, x0
  424770:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424774:	add	x0, x0, #0x5de
  424778:	mov	w2, #0x1                   	// #1
  42477c:	bl	404010 <setenv@plt>
  424780:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424784:	ldr	w0, [x8, #3852]
  424788:	bl	424a28 <wcrtomb@plt+0x1ff38>
  42478c:	mov	x1, x0
  424790:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424794:	add	x0, x0, #0x5f2
  424798:	mov	w2, #0x1                   	// #1
  42479c:	bl	404010 <setenv@plt>
  4247a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4247a4:	ldr	w8, [x8, #2944]
  4247a8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4247ac:	ldr	w9, [x9, #3808]
  4247b0:	cmp	w8, #0x0
  4247b4:	csel	w0, w9, w8, eq  // eq = none
  4247b8:	bl	424a00 <wcrtomb@plt+0x1ff10>
  4247bc:	mov	x1, x0
  4247c0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4247c4:	add	x0, x0, #0x601
  4247c8:	mov	w2, #0x1                   	// #1
  4247cc:	bl	404010 <setenv@plt>
  4247d0:	mov	x0, x19
  4247d4:	bl	4238a4 <wcrtomb@plt+0x1edb4>
  4247d8:	sub	sp, sp, #0x20
  4247dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4247e0:	ldr	x9, [x8, #1968]
  4247e4:	stp	x29, x30, [sp, #16]
  4247e8:	add	x29, sp, #0x10
  4247ec:	cbnz	x9, 424800 <wcrtomb@plt+0x1fd10>
  4247f0:	ldp	x29, x30, [sp, #16]
  4247f4:	str	x0, [x8, #1968]
  4247f8:	add	sp, sp, #0x20
  4247fc:	ret
  424800:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424804:	ldr	x8, [x8, #4000]
  424808:	str	x0, [sp, #8]
  42480c:	cbz	x8, 424814 <wcrtomb@plt+0x1fd24>
  424810:	blr	x8
  424814:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424818:	add	x1, x1, #0xe98
  42481c:	mov	w2, #0x5                   	// #5
  424820:	mov	x0, xzr
  424824:	bl	4048b0 <dcgettext@plt>
  424828:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42482c:	ldr	x3, [x8, #1968]
  424830:	ldr	x4, [sp, #8]
  424834:	mov	x2, x0
  424838:	mov	w0, wzr
  42483c:	mov	w1, wzr
  424840:	bl	403f60 <error@plt>
  424844:	mov	w0, #0x2                   	// #2
  424848:	bl	42484c <wcrtomb@plt+0x1fd5c>
  42484c:	stp	x29, x30, [sp, #-32]!
  424850:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424854:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424858:	ldr	x1, [x8, #88]
  42485c:	ldr	x3, [x9, #2440]
  424860:	str	x19, [sp, #16]
  424864:	mov	w19, w0
  424868:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42486c:	add	x0, x0, #0xe30
  424870:	mov	w2, #0x4                   	// #4
  424874:	mov	x29, sp
  424878:	bl	4370fc <argp_help@@Base>
  42487c:	bl	43bec0 <argp_parse@@Base+0x1814>
  424880:	mov	w0, w19
  424884:	bl	403f30 <exit@plt>
  424888:	sub	sp, sp, #0x50
  42488c:	str	x23, [sp, #32]
  424890:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424894:	ldr	x8, [x23, #1976]
  424898:	stp	x20, x19, [sp, #64]
  42489c:	mov	x20, x1
  4248a0:	mov	x19, x0
  4248a4:	stp	x29, x30, [sp, #16]
  4248a8:	stp	x22, x21, [sp, #48]
  4248ac:	add	x29, sp, #0x10
  4248b0:	cbnz	x8, 424908 <wcrtomb@plt+0x1fe18>
  4248b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4248b8:	ldr	w8, [x8, #3968]
  4248bc:	cbz	w8, 4248ec <wcrtomb@plt+0x1fdfc>
  4248c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4248c4:	ldr	x8, [x8, #1968]
  4248c8:	cbnz	x8, 4248ec <wcrtomb@plt+0x1fdfc>
  4248cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4248d0:	ldr	x8, [x8, #104]
  4248d4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4248d8:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4248dc:	add	x9, x9, #0x7b0
  4248e0:	add	x10, x10, #0xec7
  4248e4:	stp	x10, x8, [x9]
  4248e8:	b	424908 <wcrtomb@plt+0x1fe18>
  4248ec:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4248f0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4248f4:	add	x0, x0, #0x8c
  4248f8:	add	x1, x1, #0xedb
  4248fc:	bl	4041e0 <fopen@plt>
  424900:	str	x0, [x23, #1976]
  424904:	cbz	x0, 4249f4 <wcrtomb@plt+0x1ff04>
  424908:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42490c:	ldr	x21, [x22, #2824]
  424910:	mov	x0, x20
  424914:	bl	449144 <argp_parse@@Base+0xea98>
  424918:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42491c:	mov	x4, x0
  424920:	add	x2, x2, #0xeca
  424924:	mov	w1, #0x1                   	// #1
  424928:	mov	x0, x21
  42492c:	mov	x3, x19
  424930:	bl	404600 <__fprintf_chk@plt>
  424934:	ldr	x0, [x22, #2824]
  424938:	bl	4047b0 <fflush_unlocked@plt>
  42493c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424940:	ldrb	w8, [x20, #1960]
  424944:	tbz	w8, #0, 424950 <wcrtomb@plt+0x1fe60>
  424948:	mov	w19, wzr
  42494c:	b	4249a4 <wcrtomb@plt+0x1feb4>
  424950:	ldr	x3, [x23, #1976]
  424954:	add	x0, x29, #0x18
  424958:	add	x1, sp, #0x8
  42495c:	mov	w2, #0xa                   	// #10
  424960:	str	xzr, [x29, #24]
  424964:	str	xzr, [sp, #8]
  424968:	bl	404a20 <__getdelim@plt>
  42496c:	tbnz	x0, #63, 424984 <wcrtomb@plt+0x1fe94>
  424970:	ldr	x0, [x29, #24]
  424974:	bl	403f80 <rpmatch@plt>
  424978:	cmp	w0, #0x0
  42497c:	cset	w19, gt
  424980:	b	424990 <wcrtomb@plt+0x1fea0>
  424984:	mov	w8, #0x1                   	// #1
  424988:	mov	w19, wzr
  42498c:	strb	w8, [x20, #1960]
  424990:	ldr	x0, [x29, #24]
  424994:	bl	4046b0 <free@plt>
  424998:	ldrb	w8, [x20, #1960]
  42499c:	cmp	w8, #0x1
  4249a0:	b.ne	4249cc <wcrtomb@plt+0x1fedc>  // b.any
  4249a4:	ldr	x0, [x22, #2824]
  4249a8:	ldp	x8, x9, [x0, #40]
  4249ac:	cmp	x8, x9
  4249b0:	b.cs	4249e8 <wcrtomb@plt+0x1fef8>  // b.hs, b.nlast
  4249b4:	add	x9, x8, #0x1
  4249b8:	mov	w10, #0xa                   	// #10
  4249bc:	str	x9, [x0, #40]
  4249c0:	strb	w10, [x8]
  4249c4:	ldr	x0, [x22, #2824]
  4249c8:	bl	4047b0 <fflush_unlocked@plt>
  4249cc:	mov	w0, w19
  4249d0:	ldp	x20, x19, [sp, #64]
  4249d4:	ldp	x22, x21, [sp, #48]
  4249d8:	ldr	x23, [sp, #32]
  4249dc:	ldp	x29, x30, [sp, #16]
  4249e0:	add	sp, sp, #0x50
  4249e4:	ret
  4249e8:	mov	w1, #0xa                   	// #10
  4249ec:	bl	404590 <__overflow@plt>
  4249f0:	b	4249c4 <wcrtomb@plt+0x1fed4>
  4249f4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4249f8:	add	x0, x0, #0x8c
  4249fc:	bl	42cc7c <wcrtomb@plt+0x2818c>
  424a00:	sub	w8, w0, #0x1
  424a04:	cmp	w8, #0x5
  424a08:	b.hi	424a1c <wcrtomb@plt+0x1ff2c>  // b.pmore
  424a0c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424a10:	add	x9, x9, #0xe18
  424a14:	ldr	x0, [x9, w8, sxtw #3]
  424a18:	ret
  424a1c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424a20:	add	x0, x0, #0xed1
  424a24:	ret
  424a28:	stp	x29, x30, [sp, #-16]!
  424a2c:	cmp	w0, #0xa
  424a30:	mov	x29, sp
  424a34:	b.cs	424a4c <wcrtomb@plt+0x1ff5c>  // b.hs, b.nlast
  424a38:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424a3c:	add	x8, x8, #0xe48
  424a40:	ldr	x0, [x8, w0, sxtw #3]
  424a44:	ldp	x29, x30, [sp], #16
  424a48:	ret
  424a4c:	bl	404560 <abort@plt>
  424a50:	stp	x29, x30, [sp, #-32]!
  424a54:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424a58:	add	x1, x1, #0xf09
  424a5c:	mov	w2, #0x3                   	// #3
  424a60:	stp	x20, x19, [sp, #16]
  424a64:	mov	x29, sp
  424a68:	mov	x19, x0
  424a6c:	bl	4042c0 <strncmp@plt>
  424a70:	add	x8, x19, #0x3
  424a74:	cmp	w0, #0x0
  424a78:	csel	x20, x8, x19, eq  // eq = none
  424a7c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424a80:	add	x0, x0, #0xef6
  424a84:	mov	x1, x20
  424a88:	bl	404610 <strcmp@plt>
  424a8c:	cbz	w0, 424af8 <wcrtomb@plt+0x20008>
  424a90:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424a94:	add	x0, x0, #0xefb
  424a98:	mov	x1, x20
  424a9c:	bl	404610 <strcmp@plt>
  424aa0:	cbz	w0, 424b10 <wcrtomb@plt+0x20020>
  424aa4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424aa8:	add	x0, x0, #0xf00
  424aac:	mov	x1, x20
  424ab0:	bl	404610 <strcmp@plt>
  424ab4:	cbz	w0, 424b28 <wcrtomb@plt+0x20038>
  424ab8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424abc:	add	x0, x0, #0x61e
  424ac0:	mov	x1, x20
  424ac4:	bl	404610 <strcmp@plt>
  424ac8:	cbz	w0, 424b40 <wcrtomb@plt+0x20050>
  424acc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424ad0:	add	x0, x0, #0xf04
  424ad4:	mov	x1, x20
  424ad8:	bl	404610 <strcmp@plt>
  424adc:	cbnz	w0, 424b58 <wcrtomb@plt+0x20068>
  424ae0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424ae4:	add	x8, x8, #0xa90
  424ae8:	ldr	w0, [x8, #8]
  424aec:	ldp	x20, x19, [sp, #16]
  424af0:	ldp	x29, x30, [sp], #32
  424af4:	ret
  424af8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424afc:	add	x8, x8, #0xa50
  424b00:	ldr	w0, [x8, #8]
  424b04:	ldp	x20, x19, [sp, #16]
  424b08:	ldp	x29, x30, [sp], #32
  424b0c:	ret
  424b10:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424b14:	add	x8, x8, #0xa60
  424b18:	ldr	w0, [x8, #8]
  424b1c:	ldp	x20, x19, [sp, #16]
  424b20:	ldp	x29, x30, [sp], #32
  424b24:	ret
  424b28:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424b2c:	add	x8, x8, #0xa70
  424b30:	ldr	w0, [x8, #8]
  424b34:	ldp	x20, x19, [sp, #16]
  424b38:	ldp	x29, x30, [sp], #32
  424b3c:	ret
  424b40:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424b44:	add	x8, x8, #0xa80
  424b48:	ldr	w0, [x8, #8]
  424b4c:	ldp	x20, x19, [sp, #16]
  424b50:	ldp	x29, x30, [sp], #32
  424b54:	ret
  424b58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424b5c:	ldr	x8, [x8, #4000]
  424b60:	cbz	x8, 424b68 <wcrtomb@plt+0x20078>
  424b64:	blr	x8
  424b68:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424b6c:	add	x1, x1, #0xf0d
  424b70:	mov	w2, #0x5                   	// #5
  424b74:	mov	x0, xzr
  424b78:	bl	4048b0 <dcgettext@plt>
  424b7c:	mov	x2, x0
  424b80:	mov	w0, wzr
  424b84:	mov	w1, wzr
  424b88:	mov	x3, x19
  424b8c:	bl	403f60 <error@plt>
  424b90:	bl	40eb40 <wcrtomb@plt+0xa050>
  424b94:	stp	x29, x30, [sp, #-32]!
  424b98:	str	x19, [sp, #16]
  424b9c:	mov	x29, sp
  424ba0:	mov	x19, x2
  424ba4:	mov	x2, x1
  424ba8:	mov	w1, w0
  424bac:	adrp	x5, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424bb0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  424bb4:	add	x5, x5, #0x7c8
  424bb8:	add	x0, x0, #0xe30
  424bbc:	add	x4, x29, #0x1c
  424bc0:	mov	w3, #0x28                  	// #40
  424bc4:	str	x19, [x5]
  424bc8:	bl	43a6ac <argp_parse@@Base>
  424bcc:	cbnz	w0, 424bec <wcrtomb@plt+0x200fc>
  424bd0:	ldr	w8, [x19]
  424bd4:	cbnz	w8, 424be0 <wcrtomb@plt+0x200f0>
  424bd8:	bl	41d4e0 <wcrtomb@plt+0x189f0>
  424bdc:	tbnz	w0, #0, 424bf0 <wcrtomb@plt+0x20100>
  424be0:	ldr	x19, [sp, #16]
  424be4:	ldp	x29, x30, [sp], #32
  424be8:	ret
  424bec:	bl	404560 <abort@plt>
  424bf0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424bf4:	ldr	x8, [x8, #4000]
  424bf8:	cbz	x8, 424c00 <wcrtomb@plt+0x20110>
  424bfc:	blr	x8
  424c00:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424c04:	add	x1, x1, #0xf25
  424c08:	mov	w2, #0x5                   	// #5
  424c0c:	mov	x0, xzr
  424c10:	bl	4048b0 <dcgettext@plt>
  424c14:	ldr	x3, [x19, #8]
  424c18:	mov	x2, x0
  424c1c:	mov	w0, wzr
  424c20:	mov	w1, wzr
  424c24:	bl	403f60 <error@plt>
  424c28:	mov	w0, #0x2                   	// #2
  424c2c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  424c30:	sub	sp, sp, #0x1a0
  424c34:	stp	x29, x30, [sp, #320]
  424c38:	stp	x28, x27, [sp, #336]
  424c3c:	stp	x26, x25, [sp, #352]
  424c40:	stp	x24, x23, [sp, #368]
  424c44:	stp	x22, x21, [sp, #384]
  424c48:	stp	x20, x19, [sp, #400]
  424c4c:	add	x29, sp, #0x140
  424c50:	mov	x19, x1
  424c54:	mov	w20, w0
  424c58:	bl	404dac <wcrtomb@plt+0x2bc>
  424c5c:	ldr	x0, [x19]
  424c60:	bl	447614 <argp_parse@@Base+0xcf68>
  424c64:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  424c68:	add	x1, x1, #0xb36
  424c6c:	mov	w0, #0x6                   	// #6
  424c70:	bl	404ab0 <setlocale@plt>
  424c74:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  424c78:	add	x21, x21, #0xefc
  424c7c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424c80:	add	x1, x1, #0xf40
  424c84:	mov	x0, x21
  424c88:	bl	4042d0 <bindtextdomain@plt>
  424c8c:	mov	x0, x21
  424c90:	bl	4045e0 <textdomain@plt>
  424c94:	adrp	x10, 408000 <wcrtomb@plt+0x3510>
  424c98:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  424c9c:	mov	w9, #0x2                   	// #2
  424ca0:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424ca4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424ca8:	add	x10, x10, #0xd14
  424cac:	mov	w1, #0x7                   	// #7
  424cb0:	mov	x0, xzr
  424cb4:	str	w9, [x8, #4056]
  424cb8:	str	wzr, [x28, #2352]
  424cbc:	str	x10, [x24, #4000]
  424cc0:	bl	447724 <argp_parse@@Base+0xd078>
  424cc4:	bl	42ed9c <wcrtomb@plt+0x2a2ac>
  424cc8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424ccc:	add	x22, x22, #0x7c0
  424cd0:	mov	w8, #0xa                   	// #10
  424cd4:	mov	w0, #0x50                  	// #80
  424cd8:	str	x8, [x22]
  424cdc:	bl	44a010 <argp_parse@@Base+0xf964>
  424ce0:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424ce4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424ce8:	str	x0, [x27, #3680]
  424cec:	mov	w0, #0x11                  	// #17
  424cf0:	mov	x1, xzr
  424cf4:	str	xzr, [x8, #3840]
  424cf8:	bl	404170 <signal@plt>
  424cfc:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  424d00:	add	x8, x8, #0x678
  424d04:	ldp	q0, q1, [x8]
  424d08:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  424d0c:	add	x1, x1, #0xe18
  424d10:	mov	x0, x21
  424d14:	stp	q0, q1, [sp, #16]
  424d18:	bl	43b744 <argp_parse@@Base+0x1098>
  424d1c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  424d20:	add	x0, x0, #0x1cc
  424d24:	str	xzr, [x22, #16]
  424d28:	strh	wzr, [x22, #24]
  424d2c:	bl	4049e0 <getenv@plt>
  424d30:	stp	x0, xzr, [x22, #32]
  424d34:	str	wzr, [x22, #48]
  424d38:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d3c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d44:	mov	w9, #0x14                  	// #20
  424d48:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d4c:	mov	w10, #0x2800                	// #10240
  424d50:	str	wzr, [x25, #3852]
  424d54:	str	wzr, [x22, #3808]
  424d58:	str	w9, [x8, #3740]
  424d5c:	str	x10, [x11, #3912]
  424d60:	bl	43c3f8 <argp_parse@@Base+0x1d4c>
  424d64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d68:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d6c:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424d70:	str	x0, [x8, #3056]
  424d74:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d78:	mov	w11, #0x8                   	// #8
  424d7c:	str	w11, [x8, #3668]
  424d80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d84:	mov	w11, #0x1                   	// #1
  424d88:	str	wzr, [x9, #3908]
  424d8c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d90:	ldr	q0, [x10, #1824]
  424d94:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424d98:	strb	w11, [x8, #3748]
  424d9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424da0:	str	wzr, [x9, #3080]
  424da4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424da8:	str	wzr, [x10, #3512]
  424dac:	mov	w10, #0xffffffff            	// #-1
  424db0:	str	w11, [x8, #3600]
  424db4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424db8:	str	w10, [x9, #3776]
  424dbc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424dc0:	strb	w11, [x8, #3024]
  424dc4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424dc8:	str	xzr, [x9, #3576]
  424dcc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424dd0:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424dd4:	add	x8, x8, #0xec8
  424dd8:	str	w10, [x9, #3696]
  424ddc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424de0:	add	x11, x11, #0xbd8
  424de4:	str	xzr, [x9, #3520]
  424de8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424dec:	str	q0, [x8]
  424df0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424df4:	cmp	w20, #0x2
  424df8:	str	w10, [x9, #3772]
  424dfc:	str	q0, [x11]
  424e00:	str	w10, [x8, #3064]
  424e04:	b.lt	424fe4 <wcrtomb@plt+0x204f4>  // b.tstop
  424e08:	ldr	x0, [x19, #8]
  424e0c:	ldrb	w8, [x0]
  424e10:	cmp	w8, #0x2d
  424e14:	b.eq	424fe4 <wcrtomb@plt+0x204f4>  // b.none
  424e18:	mov	w8, #0x2d                  	// #45
  424e1c:	strb	w8, [sp, #80]
  424e20:	strb	wzr, [sp, #82]
  424e24:	bl	403f00 <strlen@plt>
  424e28:	add	w27, w0, w20
  424e2c:	sbfiz	x0, x27, #3, #32
  424e30:	bl	44a010 <argp_parse@@Base+0xf964>
  424e34:	ldp	x8, x22, [x19]
  424e38:	mov	x26, x0
  424e3c:	add	x23, x19, #0x10
  424e40:	str	x8, [x26], #8
  424e44:	ldrb	w8, [x22]
  424e48:	cbz	w8, 424f6c <wcrtomb@plt+0x2047c>
  424e4c:	mov	w9, w20
  424e50:	add	x20, x19, w20, uxtw #3
  424e54:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  424e58:	adrp	x28, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  424e5c:	stp	x9, x0, [sp]
  424e60:	b	424e70 <wcrtomb@plt+0x20380>
  424e64:	mov	x26, x8
  424e68:	ldrb	w8, [x22, #1]!
  424e6c:	cbz	w8, 424f60 <wcrtomb@plt+0x20470>
  424e70:	add	x0, sp, #0x50
  424e74:	strb	w8, [sp, #81]
  424e78:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  424e7c:	mov	x8, x26
  424e80:	str	x0, [x8], #8
  424e84:	ldrb	w9, [x22]
  424e88:	ldr	x10, [x21, #3632]
  424e8c:	ldr	x12, [x10]
  424e90:	ldr	w11, [x10, #8]
  424e94:	cbz	x12, 424ea8 <wcrtomb@plt+0x203b8>
  424e98:	b	424ec4 <wcrtomb@plt+0x203d4>
  424e9c:	ldr	x12, [x10, #48]!
  424ea0:	ldr	w11, [x10, #8]
  424ea4:	cbnz	x12, 424ec4 <wcrtomb@plt+0x203d4>
  424ea8:	cbnz	w11, 424ec4 <wcrtomb@plt+0x203d4>
  424eac:	ldr	x12, [x10, #16]
  424eb0:	cbnz	x12, 424ec4 <wcrtomb@plt+0x203d4>
  424eb4:	ldr	w12, [x10, #24]
  424eb8:	cbnz	w12, 424ec4 <wcrtomb@plt+0x203d4>
  424ebc:	ldr	x12, [x10, #32]
  424ec0:	cbz	x12, 424efc <wcrtomb@plt+0x2040c>
  424ec4:	cmp	w11, w9
  424ec8:	b.ne	424e9c <wcrtomb@plt+0x203ac>  // b.any
  424ecc:	cbz	x10, 424efc <wcrtomb@plt+0x2040c>
  424ed0:	ldr	x9, [x10, #16]
  424ed4:	cbz	x9, 424e64 <wcrtomb@plt+0x20374>
  424ed8:	cmp	x23, x20
  424edc:	b.cs	425bd4 <wcrtomb@plt+0x210e4>  // b.hs, b.nlast
  424ee0:	ldr	x8, [x23], #8
  424ee4:	add	x9, x26, #0x10
  424ee8:	str	x8, [x26, #8]
  424eec:	mov	x26, x9
  424ef0:	ldrb	w8, [x22, #1]!
  424ef4:	cbnz	w8, 424e70 <wcrtomb@plt+0x20380>
  424ef8:	b	424f60 <wcrtomb@plt+0x20470>
  424efc:	ldr	x11, [x28, #3664]
  424f00:	cbz	x11, 424e64 <wcrtomb@plt+0x20374>
  424f04:	ldr	x10, [x11]
  424f08:	cbz	x10, 424e64 <wcrtomb@plt+0x20374>
  424f0c:	ldr	x10, [x10]
  424f10:	ldr	x13, [x10]
  424f14:	ldr	w12, [x10, #8]
  424f18:	cbz	x13, 424f2c <wcrtomb@plt+0x2043c>
  424f1c:	b	424f48 <wcrtomb@plt+0x20458>
  424f20:	ldr	x13, [x10, #48]!
  424f24:	ldr	w12, [x10, #8]
  424f28:	cbnz	x13, 424f48 <wcrtomb@plt+0x20458>
  424f2c:	cbnz	w12, 424f48 <wcrtomb@plt+0x20458>
  424f30:	ldr	x13, [x10, #16]
  424f34:	cbnz	x13, 424f48 <wcrtomb@plt+0x20458>
  424f38:	ldr	w13, [x10, #24]
  424f3c:	cbnz	w13, 424f48 <wcrtomb@plt+0x20458>
  424f40:	ldr	x13, [x10, #32]
  424f44:	cbz	x13, 424f54 <wcrtomb@plt+0x20464>
  424f48:	cmp	w12, w9
  424f4c:	b.ne	424f20 <wcrtomb@plt+0x20430>  // b.any
  424f50:	cbnz	x10, 424ed0 <wcrtomb@plt+0x203e0>
  424f54:	ldr	x10, [x11, #32]!
  424f58:	cbnz	x10, 424f0c <wcrtomb@plt+0x2041c>
  424f5c:	b	424e64 <wcrtomb@plt+0x20374>
  424f60:	ldp	x11, x0, [sp]
  424f64:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424f68:	b	424f70 <wcrtomb@plt+0x20480>
  424f6c:	mov	w11, w20
  424f70:	add	x8, x19, x11, lsl #3
  424f74:	cmp	x23, x8
  424f78:	sub	w20, w27, #0x1
  424f7c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424f80:	b.cs	424fd8 <wcrtomb@plt+0x204e8>  // b.hs, b.nlast
  424f84:	mvn	x10, x23
  424f88:	add	x9, x8, x10
  424f8c:	cmp	x9, #0x17
  424f90:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424f94:	b.ls	424fc0 <wcrtomb@plt+0x204d0>  // b.plast
  424f98:	add	x11, x19, x11, lsl #3
  424f9c:	add	x10, x11, x10
  424fa0:	and	x10, x10, #0xfffffffffffffff8
  424fa4:	add	x10, x10, #0x8
  424fa8:	add	x11, x23, x10
  424fac:	cmp	x26, x11
  424fb0:	b.cs	425b10 <wcrtomb@plt+0x21020>  // b.hs, b.nlast
  424fb4:	add	x10, x26, x10
  424fb8:	cmp	x23, x10
  424fbc:	b.cs	425b10 <wcrtomb@plt+0x21020>  // b.hs, b.nlast
  424fc0:	mov	x9, x23
  424fc4:	ldr	x10, [x9], #8
  424fc8:	cmp	x9, x8
  424fcc:	str	x10, [x26], #8
  424fd0:	b.cc	424fc4 <wcrtomb@plt+0x204d4>  // b.lo, b.ul, b.last
  424fd4:	b	424fdc <wcrtomb@plt+0x204ec>
  424fd8:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  424fdc:	mov	x19, x0
  424fe0:	str	xzr, [x26]
  424fe4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  424fe8:	add	x0, x0, #0x5f1
  424fec:	bl	4049e0 <getenv@plt>
  424ff0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  424ff4:	add	x8, x8, #0xdf8
  424ff8:	ldp	q0, q1, [x8]
  424ffc:	stp	q0, q1, [sp, #48]
  425000:	cbz	x0, 425058 <wcrtomb@plt+0x20568>
  425004:	mov	w2, #0xe46                 	// #3654
  425008:	mov	w8, #0x1                   	// #1
  42500c:	add	x1, sp, #0x50
  425010:	movk	w2, #0x200, lsl #16
  425014:	str	x8, [sp, #96]
  425018:	bl	42f7d0 <wcrtomb@plt+0x2ace0>
  42501c:	cbnz	w0, 425c48 <wcrtomb@plt+0x21158>
  425020:	ldr	x8, [sp, #80]
  425024:	cbz	x8, 425050 <wcrtomb@plt+0x20560>
  425028:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42502c:	ldr	x9, [x9, #2440]
  425030:	ldr	x10, [sp, #88]
  425034:	add	x2, sp, #0x30
  425038:	str	x9, [x10]
  42503c:	ldr	w9, [sp, #96]
  425040:	ldr	x1, [sp, #88]
  425044:	add	w0, w9, w8
  425048:	bl	424b94 <wcrtomb@plt+0x200a4>
  42504c:	str	xzr, [sp, #80]
  425050:	add	x0, sp, #0x50
  425054:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  425058:	adrp	x5, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42505c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  425060:	add	x5, x5, #0x7c8
  425064:	add	x8, sp, #0x10
  425068:	add	x0, x0, #0xe30
  42506c:	add	x4, sp, #0x50
  425070:	mov	w3, #0x8                   	// #8
  425074:	mov	w1, w20
  425078:	mov	x2, x19
  42507c:	str	x8, [x5]
  425080:	bl	43a6ac <argp_parse@@Base>
  425084:	cbnz	w0, 425c10 <wcrtomb@plt+0x21120>
  425088:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42508c:	ldrb	w8, [x8, #2008]
  425090:	cbz	w8, 4250ac <wcrtomb@plt+0x205bc>
  425094:	ldr	w8, [x25, #3852]
  425098:	cmp	w8, #0x3
  42509c:	b.ne	425254 <wcrtomb@plt+0x20764>  // b.any
  4250a0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4250a4:	add	x0, x0, #0x24c
  4250a8:	bl	428878 <wcrtomb@plt+0x23d88>
  4250ac:	ldr	w8, [sp, #80]
  4250b0:	cmp	w8, w20
  4250b4:	b.ge	4250d4 <wcrtomb@plt+0x205e4>  // b.tcont
  4250b8:	ldr	x0, [x19, w8, sxtw #3]
  4250bc:	bl	41d4f4 <wcrtomb@plt+0x18a04>
  4250c0:	ldr	w8, [sp, #80]
  4250c4:	add	w8, w8, #0x1
  4250c8:	cmp	w8, w20
  4250cc:	str	w8, [sp, #80]
  4250d0:	b.lt	4250b8 <wcrtomb@plt+0x205c8>  // b.tstop
  4250d4:	ldr	w8, [x22, #3808]
  4250d8:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4250dc:	cbnz	w8, 4250f8 <wcrtomb@plt+0x20608>
  4250e0:	ldrb	w8, [x21, #2009]
  4250e4:	mov	w9, #0x4                   	// #4
  4250e8:	cmp	w8, #0x0
  4250ec:	mov	w8, #0x6                   	// #6
  4250f0:	csel	w8, w8, w9, eq  // eq = none
  4250f4:	str	w8, [x22, #3808]
  4250f8:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4250fc:	ldr	x9, [x26, #3640]
  425100:	ldr	w10, [x25, #3852]
  425104:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425108:	cmp	x9, #0x0
  42510c:	cset	w9, ne  // ne = any
  425110:	cmp	w10, #0x3
  425114:	cset	w10, eq  // eq = none
  425118:	and	w9, w9, w10
  42511c:	tbnz	w9, #0, 425144 <wcrtomb@plt+0x20654>
  425120:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425124:	ldrb	w10, [x23, #3068]
  425128:	ldrb	w9, [x9, #3025]
  42512c:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425130:	ldrb	w11, [x11, #3904]
  425134:	orr	w9, w10, w9
  425138:	orr	w9, w9, w11
  42513c:	tst	w9, #0xff
  425140:	b.eq	425158 <wcrtomb@plt+0x20668>  // b.none
  425144:	mov	w9, #0x1                   	// #1
  425148:	lsl	w8, w9, w8
  42514c:	mov	w9, #0x54                  	// #84
  425150:	tst	w8, w9
  425154:	b.eq	425cec <wcrtomb@plt+0x211fc>  // b.none
  425158:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42515c:	ldr	x8, [x19, #3752]
  425160:	cbz	x8, 425198 <wcrtomb@plt+0x206a8>
  425164:	bl	41d4e0 <wcrtomb@plt+0x189f0>
  425168:	tbz	w0, #0, 425c8c <wcrtomb@plt+0x2119c>
  42516c:	ldr	w0, [x25, #3852]
  425170:	and	w8, w0, #0xfffffffc
  425174:	cmp	w8, #0x4
  425178:	b.eq	425198 <wcrtomb@plt+0x206a8>  // b.none
  42517c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425180:	ldr	x8, [x8, #2048]
  425184:	cbz	x8, 425194 <wcrtomb@plt+0x206a4>
  425188:	ldr	w8, [x8]
  42518c:	cmp	w8, #0x1
  425190:	b.eq	425e08 <wcrtomb@plt+0x21318>  // b.none
  425194:	str	xzr, [x19, #3752]
  425198:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42519c:	ldr	x8, [x9, #3840]
  4251a0:	cbz	x8, 4251cc <wcrtomb@plt+0x206dc>
  4251a4:	cmp	x8, #0x1
  4251a8:	b.eq	4251f4 <wcrtomb@plt+0x20704>  // b.none
  4251ac:	ldrb	w8, [x23, #3068]
  4251b0:	cbnz	w8, 4251f4 <wcrtomb@plt+0x20704>
  4251b4:	ldr	x8, [x24, #4000]
  4251b8:	cbz	x8, 4251c0 <wcrtomb@plt+0x206d0>
  4251bc:	blr	x8
  4251c0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4251c4:	add	x1, x1, #0x249
  4251c8:	b	425b6c <wcrtomb@plt+0x2107c>
  4251cc:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4251d0:	mov	w8, #0x1                   	// #1
  4251d4:	add	x0, x0, #0x244
  4251d8:	str	x8, [x9, #3840]
  4251dc:	bl	4049e0 <getenv@plt>
  4251e0:	ldr	x8, [x27, #3680]
  4251e4:	str	x0, [x8]
  4251e8:	ldr	x8, [x27, #3680]
  4251ec:	ldr	x9, [x8]
  4251f0:	cbz	x9, 425988 <wcrtomb@plt+0x20e98>
  4251f4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4251f8:	ldr	x8, [x20, #3824]
  4251fc:	cbz	x8, 425294 <wcrtomb@plt+0x207a4>
  425200:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425204:	ldr	x9, [x9, #3040]
  425208:	tbnz	x9, #63, 425294 <wcrtomb@plt+0x207a4>
  42520c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425210:	add	x9, x9, #0x808
  425214:	ldp	x8, x9, [x9]
  425218:	ldr	w10, [x8]
  42521c:	ldr	w11, [x9]
  425220:	cmp	w10, w11
  425224:	b.ne	425270 <wcrtomb@plt+0x20780>  // b.any
  425228:	cmp	w10, #0x1
  42522c:	b.eq	425240 <wcrtomb@plt+0x20750>  // b.none
  425230:	ldr	x0, [x8, #8]
  425234:	ldr	x1, [x9, #8]
  425238:	bl	404610 <strcmp@plt>
  42523c:	cbnz	w0, 425284 <wcrtomb@plt+0x20794>
  425240:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x17e3c>
  425244:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425248:	add	x0, x0, #0x4e8
  42524c:	add	x1, x1, #0x274
  425250:	bl	428b18 <wcrtomb@plt+0x24028>
  425254:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425258:	mov	w9, #0xffffffff            	// #-1
  42525c:	str	w9, [x8, #3972]
  425260:	ldr	w8, [sp, #80]
  425264:	cmp	w8, w20
  425268:	b.lt	4250b8 <wcrtomb@plt+0x205c8>  // b.tstop
  42526c:	b	4250d4 <wcrtomb@plt+0x205e4>
  425270:	cmp	w10, #0x1
  425274:	b.ne	425284 <wcrtomb@plt+0x20794>  // b.any
  425278:	mov	x8, xzr
  42527c:	str	xzr, [x20, #3824]
  425280:	b	425294 <wcrtomb@plt+0x207a4>
  425284:	ldr	x8, [x20, #3824]
  425288:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42528c:	add	x9, x9, #0xbd8
  425290:	stp	xzr, xzr, [x9]
  425294:	cbnz	x8, 4252d8 <wcrtomb@plt+0x207e8>
  425298:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42529c:	ldr	w8, [x8, #3772]
  4252a0:	cmn	w8, #0x1
  4252a4:	b.eq	4252d8 <wcrtomb@plt+0x207e8>  // b.none
  4252a8:	ldr	x8, [x24, #4000]
  4252ac:	cbz	x8, 4252b4 <wcrtomb@plt+0x207c4>
  4252b0:	blr	x8
  4252b4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4252b8:	add	x1, x1, #0x27c
  4252bc:	mov	w2, #0x5                   	// #5
  4252c0:	mov	x0, xzr
  4252c4:	bl	4048b0 <dcgettext@plt>
  4252c8:	mov	x2, x0
  4252cc:	mov	w0, wzr
  4252d0:	mov	w1, wzr
  4252d4:	bl	403f60 <error@plt>
  4252d8:	ldr	x0, [x26, #3640]
  4252dc:	cbz	x0, 425310 <wcrtomb@plt+0x20820>
  4252e0:	ldr	w8, [x22, #3808]
  4252e4:	orr	w8, w8, #0x4
  4252e8:	cmp	w8, #0x6
  4252ec:	b.ne	425310 <wcrtomb@plt+0x20820>  // b.any
  4252f0:	ldrb	w8, [x23, #3068]
  4252f4:	mov	w9, #0x51                  	// #81
  4252f8:	cmp	w8, #0x0
  4252fc:	mov	w8, #0x63                  	// #99
  425300:	csel	x19, x8, x9, eq  // eq = none
  425304:	bl	403f00 <strlen@plt>
  425308:	cmp	x19, x0
  42530c:	b.cc	425d64 <wcrtomb@plt+0x21274>  // b.lo, b.ul, b.last
  425310:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425314:	ldrb	w9, [x8, #3834]
  425318:	cbz	w9, 425360 <wcrtomb@plt+0x20870>
  42531c:	ldrb	w9, [x23, #3068]
  425320:	cbnz	w9, 425ca4 <wcrtomb@plt+0x211b4>
  425324:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425328:	ldr	x9, [x9, #3896]
  42532c:	cbnz	x9, 425cbc <wcrtomb@plt+0x211cc>
  425330:	ldr	w0, [x25, #3852]
  425334:	mov	w9, #0x11e                 	// #286
  425338:	lsr	x9, x9, x0
  42533c:	tbnz	w9, #0, 42538c <wcrtomb@plt+0x2089c>
  425340:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425344:	ldr	x9, [x9, #2072]
  425348:	cbz	x9, 425358 <wcrtomb@plt+0x20868>
  42534c:	ldr	w9, [x9]
  425350:	cmp	w9, #0x1
  425354:	b.eq	425e1c <wcrtomb@plt+0x2132c>  // b.none
  425358:	strb	wzr, [x8, #3834]
  42535c:	b	42538c <wcrtomb@plt+0x2089c>
  425360:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425364:	ldr	x8, [x8, #3896]
  425368:	cbz	x8, 42538c <wcrtomb@plt+0x2089c>
  42536c:	ldrb	w8, [x23, #3068]
  425370:	cbnz	w8, 425dc0 <wcrtomb@plt+0x212d0>
  425374:	ldr	w8, [x25, #3852]
  425378:	mov	w9, #0x112                 	// #274
  42537c:	lsr	x9, x9, x8
  425380:	tbnz	w9, #0, 425dd8 <wcrtomb@plt+0x212e8>
  425384:	cmp	w8, #0x2
  425388:	b.eq	425df0 <wcrtomb@plt+0x21300>  // b.none
  42538c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425390:	ldr	w8, [x8, #3048]
  425394:	cmp	w8, #0x2
  425398:	b.ne	4253a8 <wcrtomb@plt+0x208b8>  // b.any
  42539c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4253a0:	ldr	x8, [x8, #3792]
  4253a4:	tbnz	x8, #63, 425c18 <wcrtomb@plt+0x21128>
  4253a8:	ldrb	w9, [x21, #2009]
  4253ac:	ldr	w8, [x22, #3808]
  4253b0:	cbz	w9, 4253cc <wcrtomb@plt+0x208dc>
  4253b4:	cmp	w8, #0x4
  4253b8:	b.eq	4253cc <wcrtomb@plt+0x208dc>  // b.none
  4253bc:	ldr	w9, [x25, #3852]
  4253c0:	sub	x9, x9, #0x5
  4253c4:	cmp	x9, #0x3
  4253c8:	b.cs	425d04 <wcrtomb@plt+0x21214>  // b.hs, b.nlast
  4253cc:	cmp	w8, #0x4
  4253d0:	b.eq	4253f4 <wcrtomb@plt+0x20904>  // b.none
  4253d4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4253d8:	ldr	w9, [x9, #3888]
  4253dc:	cmp	w9, #0x1
  4253e0:	b.lt	4253f4 <wcrtomb@plt+0x20904>  // b.tstop
  4253e4:	ldr	w9, [x25, #3852]
  4253e8:	sub	x9, x9, #0x5
  4253ec:	cmp	x9, #0x3
  4253f0:	b.cs	425d1c <wcrtomb@plt+0x2122c>  // b.hs, b.nlast
  4253f4:	cmp	w8, #0x4
  4253f8:	b.eq	42541c <wcrtomb@plt+0x2092c>  // b.none
  4253fc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425400:	ldr	w9, [x9, #3976]
  425404:	cmp	w9, #0x1
  425408:	b.lt	42541c <wcrtomb@plt+0x2092c>  // b.tstop
  42540c:	ldr	w9, [x25, #3852]
  425410:	sub	x9, x9, #0x5
  425414:	cmp	x9, #0x3
  425418:	b.cs	425d34 <wcrtomb@plt+0x21244>  // b.hs, b.nlast
  42541c:	cmp	w8, #0x4
  425420:	b.eq	425444 <wcrtomb@plt+0x20954>  // b.none
  425424:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425428:	ldr	w8, [x8, #3648]
  42542c:	cmp	w8, #0x1
  425430:	b.lt	425444 <wcrtomb@plt+0x20954>  // b.tstop
  425434:	ldr	w8, [x25, #3852]
  425438:	sub	x8, x8, #0x5
  42543c:	cmp	x8, #0x3
  425440:	b.cs	425d4c <wcrtomb@plt+0x2125c>  // b.hs, b.nlast
  425444:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425448:	ldrb	w9, [x8, #3672]
  42544c:	cbz	w9, 42547c <wcrtomb@plt+0x2098c>
  425450:	ldr	w0, [x25, #3852]
  425454:	sub	x9, x0, #0x5
  425458:	cmp	x9, #0x3
  42545c:	b.cc	42547c <wcrtomb@plt+0x2098c>  // b.lo, b.ul, b.last
  425460:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425464:	ldr	x9, [x9, #2080]
  425468:	cbz	x9, 425478 <wcrtomb@plt+0x20988>
  42546c:	ldr	w9, [x9]
  425470:	cmp	w9, #0x1
  425474:	b.eq	425e30 <wcrtomb@plt+0x21340>  // b.none
  425478:	strb	wzr, [x8, #3672]
  42547c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425480:	ldrb	w8, [x21, #3632]
  425484:	cbz	w8, 4254b4 <wcrtomb@plt+0x209c4>
  425488:	ldr	w0, [x25, #3852]
  42548c:	sub	x8, x0, #0x5
  425490:	cmp	x8, #0x3
  425494:	b.cc	4254b4 <wcrtomb@plt+0x209c4>  // b.lo, b.ul, b.last
  425498:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42549c:	ldr	x8, [x8, #2088]
  4254a0:	cbz	x8, 4254b0 <wcrtomb@plt+0x209c0>
  4254a4:	ldr	w8, [x8]
  4254a8:	cmp	w8, #0x1
  4254ac:	b.eq	425e44 <wcrtomb@plt+0x21354>  // b.none
  4254b0:	strb	wzr, [x21, #3632]
  4254b4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4254b8:	ldrb	w8, [x19, #3835]
  4254bc:	cbz	w8, 425570 <wcrtomb@plt+0x20a80>
  4254c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4254c4:	ldrb	w9, [x8, #3944]
  4254c8:	cbz	w9, 425520 <wcrtomb@plt+0x20a30>
  4254cc:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4254d0:	add	x10, x10, #0x830
  4254d4:	ldp	x9, x10, [x10]
  4254d8:	ldr	w11, [x9]
  4254dc:	ldr	w12, [x10]
  4254e0:	cmp	w11, w12
  4254e4:	b.ne	425514 <wcrtomb@plt+0x20a24>  // b.any
  4254e8:	cmp	w11, #0x1
  4254ec:	b.eq	425500 <wcrtomb@plt+0x20a10>  // b.none
  4254f0:	ldr	x0, [x9, #8]
  4254f4:	ldr	x1, [x10, #8]
  4254f8:	bl	404610 <strcmp@plt>
  4254fc:	cbnz	w0, 42556c <wcrtomb@plt+0x20a7c>
  425500:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425504:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425508:	add	x0, x0, #0x4b8
  42550c:	add	x1, x1, #0x4c8
  425510:	bl	428b18 <wcrtomb@plt+0x24028>
  425514:	cmp	w11, #0x1
  425518:	b.ne	42556c <wcrtomb@plt+0x20a7c>  // b.any
  42551c:	strb	wzr, [x8, #3944]
  425520:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425524:	ldr	x8, [x22, #3560]
  425528:	cbnz	x8, 425570 <wcrtomb@plt+0x20a80>
  42552c:	ldr	x8, [x27, #3680]
  425530:	ldr	x0, [x8]
  425534:	bl	43bfb0 <argp_parse@@Base+0x1904>
  425538:	mov	x19, x0
  42553c:	bl	422ba8 <wcrtomb@plt+0x1e0b8>
  425540:	str	x0, [x22, #3560]
  425544:	mov	x0, x19
  425548:	bl	4046b0 <free@plt>
  42554c:	ldr	x8, [x22, #3560]
  425550:	cbnz	x8, 425570 <wcrtomb@plt+0x20a80>
  425554:	ldr	x8, [x24, #4000]
  425558:	cbz	x8, 425560 <wcrtomb@plt+0x20a70>
  42555c:	blr	x8
  425560:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425564:	add	x1, x1, #0x4d9
  425568:	b	425b6c <wcrtomb@plt+0x2107c>
  42556c:	strb	wzr, [x19, #3835]
  425570:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425574:	ldrb	w8, [x8, #3026]
  425578:	cbz	w8, 425588 <wcrtomb@plt+0x20a98>
  42557c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425580:	mov	w9, #0x3                   	// #3
  425584:	str	w9, [x8, #3744]
  425588:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42558c:	ldrb	w8, [x8, #3568]
  425590:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425594:	ldr	w10, [x10, #3548]
  425598:	mov	w9, #0x900                 	// #2304
  42559c:	movk	w9, #0x8, lsl #16
  4255a0:	cmp	w8, #0x0
  4255a4:	orr	w8, w9, #0x8000
  4255a8:	csel	w8, w8, w9, eq  // eq = none
  4255ac:	cset	w9, eq  // eq = none
  4255b0:	cmp	w10, #0x2
  4255b4:	cset	w10, eq  // eq = none
  4255b8:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4255bc:	bfi	w8, w10, #18, #1
  4255c0:	str	w8, [x11, #3700]
  4255c4:	ldr	w11, [x25, #3852]
  4255c8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4255cc:	orr	w8, w8, #0x4000
  4255d0:	str	w8, [x10, #3692]
  4255d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4255d8:	lsl	w9, w9, #8
  4255dc:	cmp	w11, #0x9
  4255e0:	str	w9, [x8, #3552]
  4255e4:	b.ne	425600 <wcrtomb@plt+0x20b10>  // b.any
  4255e8:	bl	41d4e0 <wcrtomb@plt+0x189f0>
  4255ec:	tbnz	w0, #0, 425618 <wcrtomb@plt+0x20b28>
  4255f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4255f4:	ldr	w9, [x8, #3636]
  4255f8:	add	w9, w9, #0x1
  4255fc:	b	425614 <wcrtomb@plt+0x20b24>
  425600:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425604:	ldrb	w8, [x8, #3545]
  425608:	cbz	w8, 425618 <wcrtomb@plt+0x20b28>
  42560c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425610:	mov	w9, #0x2                   	// #2
  425614:	str	w9, [x8, #3636]
  425618:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42561c:	ldr	d0, [x8, #3624]
  425620:	fcmp	d0, #0.0
  425624:	b.eq	42563c <wcrtomb@plt+0x20b4c>  // b.none
  425628:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42562c:	ldr	d1, [x8, #3912]
  425630:	ucvtf	d1, d1
  425634:	fcmp	d0, d1
  425638:	b.mi	425cd4 <wcrtomb@plt+0x211e4>  // b.first
  42563c:	ldrb	w8, [x21, #3632]
  425640:	cbz	w8, 4256ac <wcrtomb@plt+0x20bbc>
  425644:	ldr	x8, [x20, #3824]
  425648:	cbz	x8, 4256ac <wcrtomb@plt+0x20bbc>
  42564c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425650:	add	x9, x9, #0x808
  425654:	ldr	x8, [x9, #32]
  425658:	ldr	x9, [x9]
  42565c:	ldr	w10, [x8]
  425660:	ldr	w11, [x9]
  425664:	cmp	w10, w11
  425668:	b.ne	425698 <wcrtomb@plt+0x20ba8>  // b.any
  42566c:	cmp	w10, #0x1
  425670:	b.eq	425684 <wcrtomb@plt+0x20b94>  // b.none
  425674:	ldr	x0, [x8, #8]
  425678:	ldr	x1, [x9, #8]
  42567c:	bl	404610 <strcmp@plt>
  425680:	cbnz	w0, 4256a8 <wcrtomb@plt+0x20bb8>
  425684:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425688:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x17e3c>
  42568c:	add	x0, x0, #0x561
  425690:	add	x1, x1, #0x4e8
  425694:	bl	428b18 <wcrtomb@plt+0x24028>
  425698:	cmp	w10, #0x1
  42569c:	b.ne	4256a8 <wcrtomb@plt+0x20bb8>  // b.any
  4256a0:	str	xzr, [x20, #3824]
  4256a4:	b	4256ac <wcrtomb@plt+0x20bbc>
  4256a8:	strb	wzr, [x21, #3632]
  4256ac:	ldr	w8, [x25, #3852]
  4256b0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4256b4:	cmp	w8, #0x9
  4256b8:	b.hi	4257dc <wcrtomb@plt+0x20cec>  // b.pmore
  4256bc:	mov	w9, #0x1                   	// #1
  4256c0:	lsl	w9, w9, w8
  4256c4:	mov	w10, #0x2e0                 	// #736
  4256c8:	tst	w9, w10
  4256cc:	b.ne	425724 <wcrtomb@plt+0x20c34>  // b.any
  4256d0:	mov	w10, #0x106                 	// #262
  4256d4:	tst	w9, w10
  4256d8:	b.eq	425788 <wcrtomb@plt+0x20c98>  // b.none
  4256dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4256e0:	ldr	x8, [x8, #3840]
  4256e4:	ldr	x21, [x27, #3680]
  4256e8:	cmp	x8, #0x1
  4256ec:	str	x21, [x20, #3728]
  4256f0:	b.lt	4257dc <wcrtomb@plt+0x20cec>  // b.tstop
  4256f4:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4256f8:	add	x22, x21, x8, lsl #3
  4256fc:	add	x19, x19, #0xb35
  425700:	ldr	x0, [x21]
  425704:	mov	x1, x19
  425708:	bl	404610 <strcmp@plt>
  42570c:	cbz	w0, 425b58 <wcrtomb@plt+0x21068>
  425710:	add	x21, x21, #0x8
  425714:	cmp	x21, x22
  425718:	str	x21, [x20, #3728]
  42571c:	b.cc	425700 <wcrtomb@plt+0x20c10>  // b.lo, b.ul, b.last
  425720:	b	4257dc <wcrtomb@plt+0x20cec>
  425724:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425728:	ldr	x8, [x8, #3840]
  42572c:	ldr	x22, [x27, #3680]
  425730:	cmp	x8, #0x1
  425734:	str	x22, [x20, #3728]
  425738:	b.lt	4257dc <wcrtomb@plt+0x20cec>  // b.tstop
  42573c:	adrp	x19, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  425740:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425744:	add	x23, x22, x8, lsl #3
  425748:	add	x19, x19, #0xb35
  42574c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425750:	add	x26, x26, #0x59f
  425754:	b	425768 <wcrtomb@plt+0x20c78>
  425758:	add	x22, x22, #0x8
  42575c:	cmp	x22, x23
  425760:	str	x22, [x20, #3728]
  425764:	b.cs	4257dc <wcrtomb@plt+0x20cec>  // b.hs, b.nlast
  425768:	ldr	x0, [x22]
  42576c:	mov	x1, x19
  425770:	bl	404610 <strcmp@plt>
  425774:	cbnz	w0, 425758 <wcrtomb@plt+0x20c68>
  425778:	ldr	x8, [x21, #1968]
  42577c:	cbnz	x8, 425b90 <wcrtomb@plt+0x210a0>
  425780:	str	x26, [x21, #1968]
  425784:	b	425758 <wcrtomb@plt+0x20c68>
  425788:	cmp	w8, #0x3
  42578c:	b.ne	4257dc <wcrtomb@plt+0x20cec>  // b.any
  425790:	bl	41d4e0 <wcrtomb@plt+0x189f0>
  425794:	tbz	w0, #0, 425e58 <wcrtomb@plt+0x21368>
  425798:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42579c:	ldr	w8, [x8, #2032]
  4257a0:	cbz	w8, 4257dc <wcrtomb@plt+0x20cec>
  4257a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4257a8:	ldr	x8, [x8, #3840]
  4257ac:	cbz	x8, 4257dc <wcrtomb@plt+0x20cec>
  4257b0:	ldr	x8, [x27, #3680]
  4257b4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4257b8:	add	x1, x1, #0xb35
  4257bc:	ldr	x19, [x8]
  4257c0:	mov	x0, x19
  4257c4:	bl	404610 <strcmp@plt>
  4257c8:	cbz	w0, 4257dc <wcrtomb@plt+0x20cec>
  4257cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4257d0:	ldr	x1, [x8, #3896]
  4257d4:	mov	x0, x19
  4257d8:	bl	422714 <wcrtomb@plt+0x1dc24>
  4257dc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4257e0:	ldr	x0, [x19, #3952]
  4257e4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4257e8:	cbz	x0, 425808 <wcrtomb@plt+0x20d18>
  4257ec:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4257f0:	add	x1, x1, #0xec8
  4257f4:	bl	4041e0 <fopen@plt>
  4257f8:	str	x0, [x22, #2824]
  4257fc:	cbnz	x0, 425830 <wcrtomb@plt+0x20d40>
  425800:	ldr	x0, [x19, #3952]
  425804:	bl	42cc7c <wcrtomb@plt+0x2818c>
  425808:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42580c:	ldrb	w8, [x8, #3617]
  425810:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425814:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425818:	add	x9, x9, #0x58
  42581c:	add	x10, x10, #0x60
  425820:	cmp	w8, #0x0
  425824:	csel	x8, x10, x9, eq  // eq = none
  425828:	ldr	x8, [x8]
  42582c:	str	x8, [x22, #2824]
  425830:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425834:	ldr	x8, [x27, #3680]
  425838:	ldr	x0, [x9, #2016]
  42583c:	str	x8, [x20, #3728]
  425840:	cbz	x0, 425850 <wcrtomb@plt+0x20d60>
  425844:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  425848:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42584c:	str	x0, [x8, #2416]
  425850:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425854:	ldrb	w8, [x19, #3749]
  425858:	cbz	w8, 425898 <wcrtomb@plt+0x20da8>
  42585c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425860:	ldr	x1, [x8, #2024]
  425864:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425868:	add	x0, x0, #0x5ce
  42586c:	bl	43be18 <argp_parse@@Base+0x176c>
  425870:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425874:	str	w0, [x8, #3720]
  425878:	cbz	w0, 425894 <wcrtomb@plt+0x20da4>
  42587c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425880:	ldrb	w8, [x8, #3617]
  425884:	cbnz	w8, 425894 <wcrtomb@plt+0x20da4>
  425888:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42588c:	ldr	x8, [x8, #3608]
  425890:	cbz	x8, 425898 <wcrtomb@plt+0x20da8>
  425894:	strb	wzr, [x19, #3749]
  425898:	bl	408c90 <wcrtomb@plt+0x41a0>
  42589c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4258a0:	ldr	x23, [x8, #2000]
  4258a4:	cbz	x23, 425938 <wcrtomb@plt+0x20e48>
  4258a8:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4258ac:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4258b0:	add	x19, x19, #0x64d
  4258b4:	b	4258f4 <wcrtomb@plt+0x20e04>
  4258b8:	mov	w2, #0x5                   	// #5
  4258bc:	mov	x0, xzr
  4258c0:	mov	x1, x19
  4258c4:	bl	4048b0 <dcgettext@plt>
  4258c8:	ldp	x3, x4, [x20, #24]
  4258cc:	mov	x2, x0
  4258d0:	mov	w0, wzr
  4258d4:	mov	w1, wzr
  4258d8:	mov	x5, x21
  4258dc:	bl	403f60 <error@plt>
  4258e0:	ldr	x0, [x20, #32]
  4258e4:	bl	4046b0 <free@plt>
  4258e8:	mov	x0, x20
  4258ec:	bl	4046b0 <free@plt>
  4258f0:	cbz	x23, 425938 <wcrtomb@plt+0x20e48>
  4258f4:	mov	x20, x23
  4258f8:	ldr	w8, [x26, #3636]
  4258fc:	ldr	x23, [x23]
  425900:	cbz	w8, 4258e0 <wcrtomb@plt+0x20df0>
  425904:	ldp	x0, x1, [x20, #8]
  425908:	mov	w2, #0x1                   	// #1
  42590c:	bl	41a364 <wcrtomb@plt+0x15874>
  425910:	ldr	x8, [x20, #32]
  425914:	mov	x21, x0
  425918:	mov	x1, x21
  42591c:	mov	x0, x8
  425920:	bl	404610 <strcmp@plt>
  425924:	cbz	w0, 4258e0 <wcrtomb@plt+0x20df0>
  425928:	ldr	x8, [x24, #4000]
  42592c:	cbz	x8, 4258b8 <wcrtomb@plt+0x20dc8>
  425930:	blr	x8
  425934:	b	4258b8 <wcrtomb@plt+0x20dc8>
  425938:	bl	41d58c <wcrtomb@plt+0x18a9c>
  42593c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425940:	ldr	x8, [x19, #3656]
  425944:	cbz	x8, 42594c <wcrtomb@plt+0x20e5c>
  425948:	bl	405acc <wcrtomb@plt+0xfdc>
  42594c:	ldr	w8, [x25, #3852]
  425950:	cmp	w8, #0x9
  425954:	b.hi	425a18 <wcrtomb@plt+0x20f28>  // b.pmore
  425958:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42595c:	add	x9, x9, #0x730
  425960:	adr	x10, 425970 <wcrtomb@plt+0x20e80>
  425964:	ldrb	w11, [x9, x8]
  425968:	add	x10, x10, x11, lsl #2
  42596c:	br	x10
  425970:	bl	42a3a0 <wcrtomb@plt+0x258b0>
  425974:	bl	409078 <wcrtomb@plt+0x4588>
  425978:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42597c:	ldrb	w8, [x8, #3689]
  425980:	cbnz	w8, 425a28 <wcrtomb@plt+0x20f38>
  425984:	b	425a2c <wcrtomb@plt+0x20f3c>
  425988:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  42598c:	add	x9, x9, #0xb35
  425990:	str	x9, [x8]
  425994:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425998:	ldr	x8, [x20, #3824]
  42599c:	cbnz	x8, 425200 <wcrtomb@plt+0x20710>
  4259a0:	b	425294 <wcrtomb@plt+0x207a4>
  4259a4:	adrp	x0, 419000 <wcrtomb@plt+0x14510>
  4259a8:	add	x0, x0, #0x93c
  4259ac:	b	4259bc <wcrtomb@plt+0x20ecc>
  4259b0:	bl	4096c4 <wcrtomb@plt+0x4bd4>
  4259b4:	adrp	x0, 409000 <wcrtomb@plt+0x4510>
  4259b8:	add	x0, x0, #0x7dc
  4259bc:	bl	418a58 <wcrtomb@plt+0x13f68>
  4259c0:	bl	409078 <wcrtomb@plt+0x4588>
  4259c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4259c8:	ldrb	w8, [x8, #3689]
  4259cc:	cbnz	w8, 425a28 <wcrtomb@plt+0x20f38>
  4259d0:	b	425a2c <wcrtomb@plt+0x20f3c>
  4259d4:	bl	40f330 <wcrtomb@plt+0xa840>
  4259d8:	adrp	x0, 40f000 <wcrtomb@plt+0xa510>
  4259dc:	add	x0, x0, #0x470
  4259e0:	bl	418a58 <wcrtomb@plt+0x13f68>
  4259e4:	bl	40f97c <wcrtomb@plt+0xae8c>
  4259e8:	bl	409078 <wcrtomb@plt+0x4588>
  4259ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4259f0:	ldrb	w8, [x8, #3689]
  4259f4:	cbnz	w8, 425a28 <wcrtomb@plt+0x20f38>
  4259f8:	b	425a2c <wcrtomb@plt+0x20f3c>
  4259fc:	bl	41adac <wcrtomb@plt+0x162bc>
  425a00:	bl	409078 <wcrtomb@plt+0x4588>
  425a04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425a08:	ldrb	w8, [x8, #3689]
  425a0c:	cbnz	w8, 425a28 <wcrtomb@plt+0x20f38>
  425a10:	b	425a2c <wcrtomb@plt+0x20f3c>
  425a14:	bl	40dd48 <wcrtomb@plt+0x9258>
  425a18:	bl	409078 <wcrtomb@plt+0x4588>
  425a1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425a20:	ldrb	w8, [x8, #3689]
  425a24:	cbz	w8, 425a2c <wcrtomb@plt+0x20f3c>
  425a28:	bl	405288 <wcrtomb@plt+0x798>
  425a2c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425a30:	ldrb	w8, [x8, #1964]
  425a34:	cmp	w8, #0x1
  425a38:	b.ne	425a40 <wcrtomb@plt+0x20f50>  // b.any
  425a3c:	bl	40c250 <wcrtomb@plt+0x7760>
  425a40:	ldr	x8, [x19, #3656]
  425a44:	cbz	x8, 425a4c <wcrtomb@plt+0x20f5c>
  425a48:	bl	405bd0 <wcrtomb@plt+0x10e0>
  425a4c:	ldr	x0, [x27, #3680]
  425a50:	bl	4046b0 <free@plt>
  425a54:	bl	42b4c8 <wcrtomb@plt+0x269d8>
  425a58:	bl	41d5d8 <wcrtomb@plt+0x18ae8>
  425a5c:	ldr	w8, [x28, #2352]
  425a60:	cmp	w8, #0x2
  425a64:	b.ne	425a8c <wcrtomb@plt+0x20f9c>  // b.any
  425a68:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  425a6c:	add	x1, x1, #0xf9f
  425a70:	mov	w2, #0x5                   	// #5
  425a74:	mov	x0, xzr
  425a78:	bl	4048b0 <dcgettext@plt>
  425a7c:	mov	x2, x0
  425a80:	mov	w0, wzr
  425a84:	mov	w1, wzr
  425a88:	bl	403f60 <error@plt>
  425a8c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425a90:	ldr	x8, [x22, #2824]
  425a94:	ldr	x9, [x9, #96]
  425a98:	cmp	x8, x9
  425a9c:	b.eq	425ad0 <wcrtomb@plt+0x20fe0>  // b.none
  425aa0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425aa4:	ldr	x0, [x8, #88]
  425aa8:	ldrb	w8, [x0]
  425aac:	tbnz	w8, #5, 425ab8 <wcrtomb@plt+0x20fc8>
  425ab0:	bl	4041a0 <fclose@plt>
  425ab4:	cbz	w0, 425ad4 <wcrtomb@plt+0x20fe4>
  425ab8:	ldr	w8, [x28, #2352]
  425abc:	cmp	w8, #0x1
  425ac0:	b.gt	425ad4 <wcrtomb@plt+0x20fe4>
  425ac4:	mov	w8, #0x2                   	// #2
  425ac8:	str	w8, [x28, #2352]
  425acc:	b	425ad4 <wcrtomb@plt+0x20fe4>
  425ad0:	bl	43bec0 <argp_parse@@Base+0x1814>
  425ad4:	ldr	w0, [x28, #2352]
  425ad8:	ldp	x20, x19, [sp, #400]
  425adc:	ldp	x22, x21, [sp, #384]
  425ae0:	ldp	x24, x23, [sp, #368]
  425ae4:	ldp	x26, x25, [sp, #352]
  425ae8:	ldp	x28, x27, [sp, #336]
  425aec:	ldp	x29, x30, [sp, #320]
  425af0:	add	sp, sp, #0x1a0
  425af4:	ret
  425af8:	bl	40be14 <wcrtomb@plt+0x7324>
  425afc:	bl	409078 <wcrtomb@plt+0x4588>
  425b00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425b04:	ldrb	w8, [x8, #3689]
  425b08:	cbnz	w8, 425a28 <wcrtomb@plt+0x20f38>
  425b0c:	b	425a2c <wcrtomb@plt+0x20f3c>
  425b10:	lsr	x9, x9, #3
  425b14:	add	x10, x9, #0x1
  425b18:	and	x11, x10, #0x3ffffffffffffffc
  425b1c:	lsl	x13, x11, #3
  425b20:	add	x12, x26, #0x10
  425b24:	add	x9, x23, x13
  425b28:	add	x26, x26, x13
  425b2c:	add	x13, x23, #0x10
  425b30:	mov	x14, x11
  425b34:	ldp	q0, q1, [x13, #-16]
  425b38:	subs	x14, x14, #0x4
  425b3c:	add	x13, x13, #0x20
  425b40:	stp	q0, q1, [x12, #-16]
  425b44:	add	x12, x12, #0x20
  425b48:	b.ne	425b34 <wcrtomb@plt+0x21044>  // b.any
  425b4c:	cmp	x10, x11
  425b50:	b.ne	424fc4 <wcrtomb@plt+0x204d4>  // b.any
  425b54:	b	424fdc <wcrtomb@plt+0x204ec>
  425b58:	ldr	x8, [x24, #4000]
  425b5c:	cbz	x8, 425b64 <wcrtomb@plt+0x21074>
  425b60:	blr	x8
  425b64:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425b68:	add	x1, x1, #0x5a2
  425b6c:	mov	w2, #0x5                   	// #5
  425b70:	mov	x0, xzr
  425b74:	bl	4048b0 <dcgettext@plt>
  425b78:	mov	x2, x0
  425b7c:	mov	w0, wzr
  425b80:	mov	w1, wzr
  425b84:	bl	403f60 <error@plt>
  425b88:	mov	w0, #0x2                   	// #2
  425b8c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  425b90:	ldr	x8, [x24, #4000]
  425b94:	cbz	x8, 425b9c <wcrtomb@plt+0x210ac>
  425b98:	blr	x8
  425b9c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  425ba0:	add	x1, x1, #0xe98
  425ba4:	mov	w2, #0x5                   	// #5
  425ba8:	mov	x0, xzr
  425bac:	bl	4048b0 <dcgettext@plt>
  425bb0:	ldr	x3, [x21, #1968]
  425bb4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425bb8:	mov	x2, x0
  425bbc:	add	x4, x4, #0x59f
  425bc0:	mov	w0, wzr
  425bc4:	mov	w1, wzr
  425bc8:	bl	403f60 <error@plt>
  425bcc:	mov	w0, #0x2                   	// #2
  425bd0:	bl	42484c <wcrtomb@plt+0x1fd5c>
  425bd4:	ldr	x8, [x24, #4000]
  425bd8:	cbz	x8, 425be0 <wcrtomb@plt+0x210f0>
  425bdc:	blr	x8
  425be0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425be4:	add	x1, x1, #0x1e1
  425be8:	mov	w2, #0x5                   	// #5
  425bec:	mov	x0, xzr
  425bf0:	bl	4048b0 <dcgettext@plt>
  425bf4:	ldrb	w3, [x22]
  425bf8:	mov	x2, x0
  425bfc:	mov	w0, wzr
  425c00:	mov	w1, wzr
  425c04:	bl	403f60 <error@plt>
  425c08:	mov	w0, #0x2                   	// #2
  425c0c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  425c10:	mov	w0, #0x2                   	// #2
  425c14:	bl	403f30 <exit@plt>
  425c18:	ldr	x8, [x24, #4000]
  425c1c:	cbz	x8, 425c24 <wcrtomb@plt+0x21134>
  425c20:	blr	x8
  425c24:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425c28:	add	x1, x1, #0x3b5
  425c2c:	b	425b6c <wcrtomb@plt+0x2107c>
  425c30:	ldr	x8, [x24, #4000]
  425c34:	cbz	x8, 425c3c <wcrtomb@plt+0x2114c>
  425c38:	blr	x8
  425c3c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  425c40:	add	x1, x1, #0xf52
  425c44:	b	425b6c <wcrtomb@plt+0x2107c>
  425c48:	ldr	x8, [x24, #4000]
  425c4c:	cbz	x8, 425c54 <wcrtomb@plt+0x21164>
  425c50:	blr	x8
  425c54:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425c58:	add	x1, x1, #0x5fd
  425c5c:	mov	w2, #0x5                   	// #5
  425c60:	mov	x0, xzr
  425c64:	bl	4048b0 <dcgettext@plt>
  425c68:	mov	x19, x0
  425c6c:	add	x0, sp, #0x50
  425c70:	bl	42fac0 <wcrtomb@plt+0x2afd0>
  425c74:	mov	x3, x0
  425c78:	mov	w0, wzr
  425c7c:	mov	w1, wzr
  425c80:	mov	x2, x19
  425c84:	bl	403f60 <error@plt>
  425c88:	bl	40eb40 <wcrtomb@plt+0xa050>
  425c8c:	ldr	x8, [x24, #4000]
  425c90:	cbz	x8, 425c98 <wcrtomb@plt+0x211a8>
  425c94:	blr	x8
  425c98:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425c9c:	add	x1, x1, #0x207
  425ca0:	b	425b6c <wcrtomb@plt+0x2107c>
  425ca4:	ldr	x8, [x24, #4000]
  425ca8:	cbz	x8, 425cb0 <wcrtomb@plt+0x211c0>
  425cac:	blr	x8
  425cb0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425cb4:	add	x1, x1, #0x313
  425cb8:	b	425b6c <wcrtomb@plt+0x2107c>
  425cbc:	ldr	x8, [x24, #4000]
  425cc0:	cbz	x8, 425cc8 <wcrtomb@plt+0x211d8>
  425cc4:	blr	x8
  425cc8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425ccc:	add	x1, x1, #0x337
  425cd0:	b	425b6c <wcrtomb@plt+0x2107c>
  425cd4:	ldr	x8, [x24, #4000]
  425cd8:	cbz	x8, 425ce0 <wcrtomb@plt+0x211f0>
  425cdc:	blr	x8
  425ce0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425ce4:	add	x1, x1, #0x533
  425ce8:	b	425b6c <wcrtomb@plt+0x2107c>
  425cec:	ldr	x8, [x24, #4000]
  425cf0:	cbz	x8, 425cf8 <wcrtomb@plt+0x21208>
  425cf4:	blr	x8
  425cf8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425cfc:	add	x1, x1, #0x61a
  425d00:	b	425b6c <wcrtomb@plt+0x2107c>
  425d04:	ldr	x8, [x24, #4000]
  425d08:	cbz	x8, 425d10 <wcrtomb@plt+0x21220>
  425d0c:	blr	x8
  425d10:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425d14:	add	x1, x1, #0x3e8
  425d18:	b	425b6c <wcrtomb@plt+0x2107c>
  425d1c:	ldr	x8, [x24, #4000]
  425d20:	cbz	x8, 425d28 <wcrtomb@plt+0x21238>
  425d24:	blr	x8
  425d28:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425d2c:	add	x1, x1, #0x418
  425d30:	b	425b6c <wcrtomb@plt+0x2107c>
  425d34:	ldr	x8, [x24, #4000]
  425d38:	cbz	x8, 425d40 <wcrtomb@plt+0x21250>
  425d3c:	blr	x8
  425d40:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425d44:	add	x1, x1, #0x442
  425d48:	b	425b6c <wcrtomb@plt+0x2107c>
  425d4c:	ldr	x8, [x24, #4000]
  425d50:	cbz	x8, 425d58 <wcrtomb@plt+0x21268>
  425d54:	blr	x8
  425d58:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425d5c:	add	x1, x1, #0x46f
  425d60:	b	425b6c <wcrtomb@plt+0x2107c>
  425d64:	ldr	x8, [x24, #4000]
  425d68:	cbz	x8, 425d70 <wcrtomb@plt+0x21280>
  425d6c:	blr	x8
  425d70:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425d74:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425d78:	add	x1, x1, #0x2b0
  425d7c:	add	x2, x2, #0x2e1
  425d80:	mov	w4, #0x5                   	// #5
  425d84:	mov	x0, xzr
  425d88:	mov	x3, x19
  425d8c:	bl	4047d0 <dcngettext@plt>
  425d90:	ldr	x8, [x26, #3640]
  425d94:	mov	x20, x0
  425d98:	mov	x0, x8
  425d9c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  425da0:	mov	x3, x0
  425da4:	mov	w0, wzr
  425da8:	mov	w1, wzr
  425dac:	mov	x2, x20
  425db0:	mov	x4, x19
  425db4:	bl	403f60 <error@plt>
  425db8:	mov	w0, #0x2                   	// #2
  425dbc:	bl	42484c <wcrtomb@plt+0x1fd5c>
  425dc0:	ldr	x8, [x24, #4000]
  425dc4:	cbz	x8, 425dcc <wcrtomb@plt+0x212dc>
  425dc8:	blr	x8
  425dcc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425dd0:	add	x1, x1, #0x362
  425dd4:	b	425b6c <wcrtomb@plt+0x2107c>
  425dd8:	ldr	x8, [x24, #4000]
  425ddc:	cbz	x8, 425de4 <wcrtomb@plt+0x212f4>
  425de0:	blr	x8
  425de4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  425de8:	add	x1, x1, #0x3af
  425dec:	b	425b6c <wcrtomb@plt+0x2107c>
  425df0:	ldr	x8, [x24, #4000]
  425df4:	cbz	x8, 425dfc <wcrtomb@plt+0x2130c>
  425df8:	blr	x8
  425dfc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425e00:	add	x1, x1, #0x38e
  425e04:	b	425b6c <wcrtomb@plt+0x2107c>
  425e08:	bl	424a28 <wcrtomb@plt+0x1ff38>
  425e0c:	mov	x1, x0
  425e10:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425e14:	add	x0, x0, #0x237
  425e18:	bl	428b18 <wcrtomb@plt+0x24028>
  425e1c:	bl	424a28 <wcrtomb@plt+0x1ff38>
  425e20:	mov	x1, x0
  425e24:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425e28:	add	x0, x0, #0x359
  425e2c:	bl	428b18 <wcrtomb@plt+0x24028>
  425e30:	bl	424a28 <wcrtomb@plt+0x1ff38>
  425e34:	mov	x1, x0
  425e38:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425e3c:	add	x0, x0, #0x49b
  425e40:	bl	428b18 <wcrtomb@plt+0x24028>
  425e44:	bl	424a28 <wcrtomb@plt+0x1ff38>
  425e48:	mov	x1, x0
  425e4c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425e50:	add	x0, x0, #0x4ab
  425e54:	bl	428b18 <wcrtomb@plt+0x24028>
  425e58:	ldr	x8, [x24, #4000]
  425e5c:	cbz	x8, 425e64 <wcrtomb@plt+0x21374>
  425e60:	blr	x8
  425e64:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  425e68:	add	x1, x1, #0x572
  425e6c:	b	425b6c <wcrtomb@plt+0x2107c>
  425e70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  425e74:	ldr	w9, [x8, #2352]
  425e78:	cmp	w9, w0
  425e7c:	b.ge	425e84 <wcrtomb@plt+0x21394>  // b.tcont
  425e80:	str	w0, [x8, #2352]
  425e84:	ret
  425e88:	movi	v0.2d, #0x0
  425e8c:	str	xzr, [x0, #416]
  425e90:	stp	q0, q0, [x0, #384]
  425e94:	stp	q0, q0, [x0, #352]
  425e98:	stp	q0, q0, [x0, #320]
  425e9c:	stp	q0, q0, [x0, #288]
  425ea0:	stp	q0, q0, [x0, #256]
  425ea4:	stp	q0, q0, [x0, #224]
  425ea8:	stp	q0, q0, [x0, #192]
  425eac:	stp	q0, q0, [x0, #160]
  425eb0:	stp	q0, q0, [x0, #128]
  425eb4:	stp	q0, q0, [x0, #96]
  425eb8:	stp	q0, q0, [x0, #64]
  425ebc:	stp	q0, q0, [x0, #32]
  425ec0:	stp	q0, q0, [x0]
  425ec4:	ret
  425ec8:	stp	x29, x30, [sp, #-32]!
  425ecc:	str	x19, [sp, #16]
  425ed0:	mov	x19, x0
  425ed4:	ldr	x0, [x0, #400]
  425ed8:	mov	x29, sp
  425edc:	cbz	x0, 425f08 <wcrtomb@plt+0x21418>
  425ee0:	bl	4044b0 <closedir@plt>
  425ee4:	str	xzr, [x19, #400]
  425ee8:	str	wzr, [x19, #408]
  425eec:	cbz	w0, 425f24 <wcrtomb@plt+0x21434>
  425ef0:	ldr	x0, [x19]
  425ef4:	bl	41cf10 <wcrtomb@plt+0x18420>
  425ef8:	mov	w0, wzr
  425efc:	ldr	x19, [sp, #16]
  425f00:	ldp	x29, x30, [sp], #32
  425f04:	ret
  425f08:	ldr	w0, [x19, #408]
  425f0c:	cmp	w0, #0x0
  425f10:	b.le	425f34 <wcrtomb@plt+0x21444>
  425f14:	bl	4044d0 <close@plt>
  425f18:	str	xzr, [x19, #400]
  425f1c:	str	wzr, [x19, #408]
  425f20:	cbnz	w0, 425ef0 <wcrtomb@plt+0x21400>
  425f24:	mov	w0, #0x1                   	// #1
  425f28:	ldr	x19, [sp, #16]
  425f2c:	ldp	x29, x30, [sp], #32
  425f30:	ret
  425f34:	str	xzr, [x19, #400]
  425f38:	str	wzr, [x19, #408]
  425f3c:	mov	w0, #0x1                   	// #1
  425f40:	ldr	x19, [sp, #16]
  425f44:	ldp	x29, x30, [sp], #32
  425f48:	ret
  425f4c:	stp	x29, x30, [sp, #-32]!
  425f50:	str	x19, [sp, #16]
  425f54:	mov	x19, x0
  425f58:	ldr	x0, [x0, #400]
  425f5c:	mov	x29, sp
  425f60:	cbz	x0, 425f78 <wcrtomb@plt+0x21488>
  425f64:	bl	4044b0 <closedir@plt>
  425f68:	str	xzr, [x19, #400]
  425f6c:	str	wzr, [x19, #408]
  425f70:	cbnz	w0, 425f94 <wcrtomb@plt+0x214a4>
  425f74:	b	425fa8 <wcrtomb@plt+0x214b8>
  425f78:	ldr	w0, [x19, #408]
  425f7c:	cmp	w0, #0x0
  425f80:	b.le	425fa0 <wcrtomb@plt+0x214b0>
  425f84:	bl	4044d0 <close@plt>
  425f88:	str	xzr, [x19, #400]
  425f8c:	str	wzr, [x19, #408]
  425f90:	cbz	w0, 425fa8 <wcrtomb@plt+0x214b8>
  425f94:	ldr	x0, [x19]
  425f98:	bl	41cf10 <wcrtomb@plt+0x18420>
  425f9c:	b	425fa8 <wcrtomb@plt+0x214b8>
  425fa0:	str	xzr, [x19, #400]
  425fa4:	str	wzr, [x19, #408]
  425fa8:	ldp	x1, x0, [x19, #328]
  425fac:	bl	4128b8 <wcrtomb@plt+0xddc8>
  425fb0:	ldr	x0, [x19]
  425fb4:	bl	4046b0 <free@plt>
  425fb8:	ldr	x0, [x19, #8]
  425fbc:	bl	4046b0 <free@plt>
  425fc0:	ldr	x0, [x19, #24]
  425fc4:	bl	4046b0 <free@plt>
  425fc8:	ldr	x0, [x19, #32]
  425fcc:	bl	4046b0 <free@plt>
  425fd0:	ldr	x0, [x19, #40]
  425fd4:	bl	4046b0 <free@plt>
  425fd8:	ldr	x0, [x19, #48]
  425fdc:	bl	4046b0 <free@plt>
  425fe0:	ldr	x0, [x19, #56]
  425fe4:	bl	4046b0 <free@plt>
  425fe8:	ldr	x0, [x19, #72]
  425fec:	bl	4046b0 <free@plt>
  425ff0:	ldr	x0, [x19, #304]
  425ff4:	bl	4046b0 <free@plt>
  425ff8:	ldr	x0, [x19, #384]
  425ffc:	bl	4046b0 <free@plt>
  426000:	add	x0, x19, #0x158
  426004:	bl	41260c <wcrtomb@plt+0xdb1c>
  426008:	mov	x0, x19
  42600c:	bl	40ee28 <wcrtomb@plt+0xa338>
  426010:	movi	v0.2d, #0x0
  426014:	stp	q0, q0, [x19, #384]
  426018:	stp	q0, q0, [x19, #352]
  42601c:	stp	q0, q0, [x19, #320]
  426020:	stp	q0, q0, [x19, #288]
  426024:	stp	q0, q0, [x19, #256]
  426028:	stp	q0, q0, [x19, #224]
  42602c:	stp	q0, q0, [x19, #192]
  426030:	stp	q0, q0, [x19, #160]
  426034:	stp	q0, q0, [x19, #128]
  426038:	stp	q0, q0, [x19, #96]
  42603c:	stp	q0, q0, [x19, #64]
  426040:	stp	q0, q0, [x19, #32]
  426044:	stp	q0, q0, [x19]
  426048:	str	xzr, [x19, #416]
  42604c:	ldr	x19, [sp, #16]
  426050:	ldp	x29, x30, [sp], #32
  426054:	ret
  426058:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42605c:	ldr	w8, [x8, #2944]
  426060:	cmp	w8, #0x4
  426064:	csel	x8, x3, xzr, eq  // eq = none
  426068:	csel	x9, x1, xzr, eq  // eq = none
  42606c:	cmp	x0, x2
  426070:	b.ge	42607c <wcrtomb@plt+0x2158c>  // b.tcont
  426074:	mov	w0, #0xffffffff            	// #-1
  426078:	ret
  42607c:	b.le	426088 <wcrtomb@plt+0x21598>
  426080:	mov	w0, #0x1                   	// #1
  426084:	ret
  426088:	sub	w0, w9, w8
  42608c:	ret
  426090:	sub	sp, sp, #0xf0
  426094:	stp	x29, x30, [sp, #144]
  426098:	stp	x28, x27, [sp, #160]
  42609c:	stp	x26, x25, [sp, #176]
  4260a0:	stp	x24, x23, [sp, #192]
  4260a4:	stp	x22, x21, [sp, #208]
  4260a8:	stp	x20, x19, [sp, #224]
  4260ac:	ldr	x20, [x2, #40]
  4260b0:	mov	w21, w0
  4260b4:	cmp	w0, #0x14f
  4260b8:	mov	w0, #0x7                   	// #7
  4260bc:	add	x29, sp, #0x90
  4260c0:	b.hi	427294 <wcrtomb@plt+0x227a4>  // b.pmore
  4260c4:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4260c8:	mov	w8, w21
  4260cc:	add	x9, x9, #0x73a
  4260d0:	adr	x10, 4260e4 <wcrtomb@plt+0x215f4>
  4260d4:	ldrh	w11, [x9, x8, lsl #1]
  4260d8:	add	x10, x10, x11, lsl #2
  4260dc:	mov	x19, x1
  4260e0:	br	x10
  4260e4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4260e8:	add	x0, x0, #0x2f4
  4260ec:	bl	428878 <wcrtomb@plt+0x23d88>
  4260f0:	cmp	w21, #0x14e
  4260f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4260f8:	mov	w9, #0x1                   	// #1
  4260fc:	cset	w1, eq  // eq = none
  426100:	mov	x0, x19
  426104:	str	w9, [x8, #3648]
  426108:	bl	42b420 <wcrtomb@plt+0x26930>
  42610c:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426110:	mov	x0, x19
  426114:	bl	428ba0 <wcrtomb@plt+0x240b0>
  426118:	b	4276b8 <wcrtomb@plt+0x22bc8>
  42611c:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  426120:	adrp	x4, 404000 <localtime_r@plt>
  426124:	add	x3, x3, #0x10
  426128:	add	x4, x4, #0x6b0
  42612c:	add	x0, sp, #0x38
  426130:	mov	x1, xzr
  426134:	mov	x2, xzr
  426138:	bl	44ae4c <_obstack_begin@@Base>
  42613c:	ldrb	w8, [x19]
  426140:	cbz	w8, 4263d8 <wcrtomb@plt+0x218e8>
  426144:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1be3c>
  426148:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42614c:	add	x21, x21, #0xbc0
  426150:	add	x22, x22, #0x103
  426154:	b	42616c <wcrtomb@plt+0x2167c>
  426158:	add	x10, x9, #0x1
  42615c:	str	x10, [sp, #80]
  426160:	strb	w8, [x9]
  426164:	ldrb	w8, [x19, #1]!
  426168:	cbz	w8, 4263d8 <wcrtomb@plt+0x218e8>
  42616c:	mov	x0, x19
  426170:	mov	x1, x21
  426174:	bl	404980 <strcspn@plt>
  426178:	mov	x23, x0
  42617c:	mov	w1, #0x3d                  	// #61
  426180:	mov	x0, x19
  426184:	mov	x2, x23
  426188:	bl	404840 <memchr@plt>
  42618c:	cbz	x0, 4262ac <wcrtomb@plt+0x217bc>
  426190:	mov	x26, x0
  426194:	ldp	x0, x8, [sp, #80]
  426198:	sub	x9, x26, x19
  42619c:	add	x24, x9, #0x1
  4261a0:	sub	x8, x8, x0
  4261a4:	cmp	x8, x24
  4261a8:	b.cs	4261bc <wcrtomb@plt+0x216cc>  // b.hs, b.nlast
  4261ac:	add	x0, sp, #0x38
  4261b0:	mov	x1, x24
  4261b4:	bl	44afa0 <_obstack_newchunk@@Base>
  4261b8:	ldr	x0, [sp, #80]
  4261bc:	mov	x1, x19
  4261c0:	mov	x2, x24
  4261c4:	bl	403e80 <memcpy@plt>
  4261c8:	ldr	x8, [sp, #80]
  4261cc:	mov	x25, x26
  4261d0:	add	x27, x8, x24
  4261d4:	str	x27, [sp, #80]
  4261d8:	ldrb	w28, [x25, #1]!
  4261dc:	sub	x24, x23, x24
  4261e0:	cbz	x28, 426308 <wcrtomb@plt+0x21818>
  4261e4:	bl	404640 <__ctype_b_loc@plt>
  4261e8:	ldr	x8, [x0]
  4261ec:	ldrh	w9, [x8, x28, lsl #1]
  4261f0:	tbz	w9, #13, 426228 <wcrtomb@plt+0x21738>
  4261f4:	mov	x9, xzr
  4261f8:	add	x10, x26, x9
  4261fc:	ldrb	w28, [x10, #2]
  426200:	cbz	x28, 4262f4 <wcrtomb@plt+0x21804>
  426204:	ldrh	w10, [x8, x28, lsl #1]
  426208:	add	x9, x9, #0x1
  42620c:	tbnz	w10, #13, 4261f8 <wcrtomb@plt+0x21708>
  426210:	add	x8, x23, x19
  426214:	mvn	x10, x9
  426218:	sub	x8, x8, x26
  42621c:	add	x26, x26, x9
  426220:	add	x24, x10, x8
  426224:	add	x25, x26, #0x1
  426228:	cmp	w28, #0x7b
  42622c:	b.ne	426308 <wcrtomb@plt+0x21818>  // b.any
  426230:	ldrb	w8, [x26, x24]
  426234:	cmp	w8, #0x7d
  426238:	b.ne	426308 <wcrtomb@plt+0x21818>  // b.any
  42623c:	mov	x0, x24
  426240:	bl	44a010 <argp_parse@@Base+0xf964>
  426244:	add	x1, x26, #0x2
  426248:	sub	x26, x24, #0x2
  42624c:	mov	x2, x26
  426250:	mov	x27, x0
  426254:	bl	403e80 <memcpy@plt>
  426258:	add	x3, sp, #0x28
  42625c:	mov	x0, x20
  426260:	mov	x1, x22
  426264:	mov	x2, x27
  426268:	strb	wzr, [x27, x26]
  42626c:	bl	428710 <wcrtomb@plt+0x23c20>
  426270:	cbz	w0, 426374 <wcrtomb@plt+0x21884>
  426274:	ldp	x0, x8, [sp, #80]
  426278:	sub	x8, x8, x0
  42627c:	cmp	x8, x24
  426280:	b.cs	426294 <wcrtomb@plt+0x217a4>  // b.hs, b.nlast
  426284:	add	x0, sp, #0x38
  426288:	mov	x1, x24
  42628c:	bl	44afa0 <_obstack_newchunk@@Base>
  426290:	ldr	x0, [sp, #80]
  426294:	mov	x1, x25
  426298:	mov	x2, x24
  42629c:	bl	403e80 <memcpy@plt>
  4262a0:	ldr	x8, [sp, #80]
  4262a4:	add	x8, x8, x24
  4262a8:	b	4263c0 <wcrtomb@plt+0x218d0>
  4262ac:	ldp	x0, x8, [sp, #80]
  4262b0:	sub	x8, x8, x0
  4262b4:	cmp	x8, x23
  4262b8:	b.cs	4262cc <wcrtomb@plt+0x217dc>  // b.hs, b.nlast
  4262bc:	add	x0, sp, #0x38
  4262c0:	mov	x1, x23
  4262c4:	bl	44afa0 <_obstack_newchunk@@Base>
  4262c8:	ldr	x0, [sp, #80]
  4262cc:	mov	x1, x19
  4262d0:	mov	x2, x23
  4262d4:	bl	403e80 <memcpy@plt>
  4262d8:	ldr	x8, [sp, #80]
  4262dc:	add	x8, x8, x23
  4262e0:	str	x8, [sp, #80]
  4262e4:	add	x19, x19, x23
  4262e8:	ldrb	w8, [x19]
  4262ec:	cbnz	w8, 426350 <wcrtomb@plt+0x21860>
  4262f0:	b	4263d8 <wcrtomb@plt+0x218e8>
  4262f4:	add	x8, x23, x19
  4262f8:	sub	x8, x8, x26
  4262fc:	sub	x8, x8, x9
  426300:	sub	x24, x8, #0x2
  426304:	add	x25, x10, #0x2
  426308:	ldr	x8, [sp, #88]
  42630c:	sub	x8, x8, x27
  426310:	cmp	x8, x24
  426314:	b.cs	426328 <wcrtomb@plt+0x21838>  // b.hs, b.nlast
  426318:	add	x0, sp, #0x38
  42631c:	mov	x1, x24
  426320:	bl	44afa0 <_obstack_newchunk@@Base>
  426324:	ldr	x27, [sp, #80]
  426328:	mov	x0, x27
  42632c:	mov	x1, x25
  426330:	mov	x2, x24
  426334:	bl	403e80 <memcpy@plt>
  426338:	ldr	x8, [sp, #80]
  42633c:	add	x8, x8, x24
  426340:	str	x8, [sp, #80]
  426344:	add	x19, x19, x23
  426348:	ldrb	w8, [x19]
  42634c:	cbz	w8, 4263d8 <wcrtomb@plt+0x218e8>
  426350:	ldp	x9, x10, [sp, #80]
  426354:	cmp	x10, x9
  426358:	b.ne	426158 <wcrtomb@plt+0x21668>  // b.any
  42635c:	add	x0, sp, #0x38
  426360:	mov	w1, #0x1                   	// #1
  426364:	bl	44afa0 <_obstack_newchunk@@Base>
  426368:	ldrb	w8, [x19]
  42636c:	ldr	x9, [sp, #80]
  426370:	b	426158 <wcrtomb@plt+0x21668>
  426374:	ldp	x0, x1, [sp, #40]
  426378:	add	x2, sp, #0x8
  42637c:	bl	41be34 <wcrtomb@plt+0x17344>
  426380:	mov	x24, x0
  426384:	bl	403f00 <strlen@plt>
  426388:	mov	x25, x0
  42638c:	ldp	x0, x8, [sp, #80]
  426390:	sub	x8, x8, x0
  426394:	cmp	x8, x25
  426398:	b.cs	4263ac <wcrtomb@plt+0x218bc>  // b.hs, b.nlast
  42639c:	add	x0, sp, #0x38
  4263a0:	mov	x1, x25
  4263a4:	bl	44afa0 <_obstack_newchunk@@Base>
  4263a8:	ldr	x0, [sp, #80]
  4263ac:	mov	x1, x24
  4263b0:	mov	x2, x25
  4263b4:	bl	403e80 <memcpy@plt>
  4263b8:	ldr	x8, [sp, #80]
  4263bc:	add	x8, x8, x25
  4263c0:	mov	x0, x27
  4263c4:	str	x8, [sp, #80]
  4263c8:	bl	4046b0 <free@plt>
  4263cc:	add	x19, x19, x23
  4263d0:	ldrb	w8, [x19]
  4263d4:	cbnz	w8, 426350 <wcrtomb@plt+0x21860>
  4263d8:	ldp	x8, x9, [sp, #80]
  4263dc:	cmp	x9, x8
  4263e0:	b.ne	4263f4 <wcrtomb@plt+0x21904>  // b.any
  4263e4:	add	x0, sp, #0x38
  4263e8:	mov	w1, #0x1                   	// #1
  4263ec:	bl	44afa0 <_obstack_newchunk@@Base>
  4263f0:	ldr	x8, [sp, #80]
  4263f4:	add	x9, x8, #0x1
  4263f8:	str	x9, [sp, #80]
  4263fc:	strb	wzr, [x8]
  426400:	ldp	x0, x8, [sp, #72]
  426404:	cmp	x8, x0
  426408:	b.ne	426418 <wcrtomb@plt+0x21928>  // b.any
  42640c:	ldrb	w9, [sp, #136]
  426410:	orr	w9, w9, #0x2
  426414:	strb	w9, [sp, #136]
  426418:	ldr	x10, [sp, #104]
  42641c:	ldr	x11, [sp, #64]
  426420:	ldr	x9, [sp, #88]
  426424:	add	x8, x10, x8
  426428:	bic	x8, x8, x10
  42642c:	sub	x10, x8, x11
  426430:	sub	x11, x9, x11
  426434:	cmp	x10, x11
  426438:	str	x8, [sp, #80]
  42643c:	b.ls	426448 <wcrtomb@plt+0x21958>  // b.plast
  426440:	mov	x8, x9
  426444:	str	x9, [sp, #80]
  426448:	str	x8, [sp, #72]
  42644c:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  426450:	mov	x19, x0
  426454:	add	x0, sp, #0x38
  426458:	mov	x1, xzr
  42645c:	bl	44b118 <_obstack_free@@Base>
  426460:	mov	w8, #0x1                   	// #1
  426464:	mov	x0, x19
  426468:	strb	w8, [x20, #17]
  42646c:	bl	411aec <wcrtomb@plt+0xcffc>
  426470:	mov	x0, x19
  426474:	bl	4046b0 <free@plt>
  426478:	b	4276b8 <wcrtomb@plt+0x22bc8>
  42647c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  426480:	ldr	x5, [x8, #4008]
  426484:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  426488:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42648c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x18e3c>
  426490:	add	x20, x20, #0xe08
  426494:	add	x0, x0, #0xea2
  426498:	add	x2, x2, #0xda0
  42649c:	mov	w4, #0x4                   	// #4
  4264a0:	mov	x1, x19
  4264a4:	mov	x3, x20
  4264a8:	bl	436fa4 <wcrtomb@plt+0x324b4>
  4264ac:	mov	x8, x0
  4264b0:	ldr	w8, [x20, x8, lsl #2]
  4264b4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4264b8:	mov	w0, wzr
  4264bc:	str	w8, [x9, #3512]
  4264c0:	b	4276bc <wcrtomb@plt+0x22bcc>
  4264c4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4264c8:	ldr	x1, [x8, #3344]
  4264cc:	cbz	x1, 4264f8 <wcrtomb@plt+0x21a08>
  4264d0:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4264d4:	mov	x20, xzr
  4264d8:	add	x21, x21, #0xd10
  4264dc:	mov	x0, x19
  4264e0:	bl	404610 <strcmp@plt>
  4264e4:	cbz	w0, 426970 <wcrtomb@plt+0x21e80>
  4264e8:	add	x8, x21, x20, lsl #3
  4264ec:	ldr	x1, [x8, #8]
  4264f0:	add	x20, x20, #0x1
  4264f4:	cbnz	x1, 4264dc <wcrtomb@plt+0x219ec>
  4264f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4264fc:	ldr	x8, [x8, #4000]
  426500:	cbz	x8, 426508 <wcrtomb@plt+0x21a18>
  426504:	blr	x8
  426508:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42650c:	add	x1, x1, #0xba
  426510:	mov	w2, #0x5                   	// #5
  426514:	mov	x0, xzr
  426518:	bl	4048b0 <dcgettext@plt>
  42651c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426520:	ldr	x4, [x8, #2440]
  426524:	mov	x2, x0
  426528:	mov	w0, wzr
  42652c:	mov	w1, wzr
  426530:	mov	x3, x19
  426534:	bl	403f60 <error@plt>
  426538:	bl	40eb40 <wcrtomb@plt+0xa050>
  42653c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426540:	add	x0, x0, #0x24c
  426544:	bl	428878 <wcrtomb@plt+0x23d88>
  426548:	b	4276b8 <wcrtomb@plt+0x22bc8>
  42654c:	ldrb	w1, [x19]
  426550:	cbz	w1, 4276b8 <wcrtomb@plt+0x22bc8>
  426554:	add	x19, x19, #0x1
  426558:	mov	x0, xzr
  42655c:	mov	w2, wzr
  426560:	bl	44773c <argp_parse@@Base+0xd090>
  426564:	ldrb	w1, [x19], #1
  426568:	mov	w0, wzr
  42656c:	cbnz	w1, 426558 <wcrtomb@plt+0x21a68>
  426570:	b	4276bc <wcrtomb@plt+0x22bcc>
  426574:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426578:	add	x1, x1, #0xdf8
  42657c:	mov	x0, x19
  426580:	bl	4289a8 <wcrtomb@plt+0x23eb8>
  426584:	cmn	x0, #0x1
  426588:	b.eq	4272f8 <wcrtomb@plt+0x22808>  // b.none
  42658c:	mov	x8, x0
  426590:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426594:	mov	w0, wzr
  426598:	str	w8, [x9, #3776]
  42659c:	b	4276bc <wcrtomb@plt+0x22bcc>
  4265a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4265a4:	mov	w9, #0x1                   	// #1
  4265a8:	mov	w0, wzr
  4265ac:	strb	w9, [x8, #3832]
  4265b0:	b	4276bc <wcrtomb@plt+0x22bcc>
  4265b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4265b8:	ldr	x9, [x8, #3608]
  4265bc:	cbnz	x9, 428024 <wcrtomb@plt+0x23534>
  4265c0:	mov	w0, wzr
  4265c4:	str	x19, [x8, #3608]
  4265c8:	b	4276bc <wcrtomb@plt+0x22bcc>
  4265cc:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4265d0:	add	x4, x4, #0xd43
  4265d4:	add	x3, sp, #0x38
  4265d8:	mov	w2, #0xa                   	// #10
  4265dc:	mov	x0, x19
  4265e0:	mov	x1, xzr
  4265e4:	bl	44a3ac <argp_parse@@Base+0xfd00>
  4265e8:	cbnz	w0, 428060 <wcrtomb@plt+0x23570>
  4265ec:	ldr	x8, [sp, #56]
  4265f0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4265f4:	tst	x8, #0x1ff
  4265f8:	str	x8, [x9, #3912]
  4265fc:	b.ne	428088 <wcrtomb@plt+0x23598>  // b.any
  426600:	lsr	x8, x8, #9
  426604:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426608:	mov	w0, wzr
  42660c:	str	w8, [x9, #3740]
  426610:	b	4276bc <wcrtomb@plt+0x22bcc>
  426614:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  426618:	add	x4, x4, #0xb36
  42661c:	add	x3, sp, #0x38
  426620:	mov	w2, #0xa                   	// #10
  426624:	mov	x0, x19
  426628:	mov	x1, xzr
  42662c:	bl	44a3ac <argp_parse@@Base+0xfd00>
  426630:	cbnz	w0, 4280c8 <wcrtomb@plt+0x235d8>
  426634:	ldr	x8, [sp, #56]
  426638:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42663c:	str	x8, [x9, #3872]
  426640:	b	4276bc <wcrtomb@plt+0x22bcc>
  426644:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426648:	mov	w9, #0x1                   	// #1
  42664c:	mov	w0, wzr
  426650:	strb	w9, [x8, #3077]
  426654:	b	4276bc <wcrtomb@plt+0x22bcc>
  426658:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42665c:	mov	w9, #0x1                   	// #1
  426660:	mov	w0, wzr
  426664:	strb	w9, [x8, #3664]
  426668:	b	4276bc <wcrtomb@plt+0x22bcc>
  42666c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426670:	add	x0, x0, #0x2f4
  426674:	bl	428878 <wcrtomb@plt+0x23d88>
  426678:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42667c:	mov	w9, #0x1                   	// #1
  426680:	mov	w0, wzr
  426684:	str	w9, [x8, #3648]
  426688:	b	4276bc <wcrtomb@plt+0x22bcc>
  42668c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426690:	mov	w0, wzr
  426694:	strb	wzr, [x8, #3569]
  426698:	b	4276bc <wcrtomb@plt+0x22bcc>
  42669c:	ldr	x20, [x20]
  4266a0:	ldr	x0, [x20, #8]
  4266a4:	cbz	x0, 427320 <wcrtomb@plt+0x22830>
  4266a8:	bl	403f00 <strlen@plt>
  4266ac:	add	x0, x0, #0x21
  4266b0:	b	427324 <wcrtomb@plt+0x22834>
  4266b4:	cbz	x19, 4273a0 <wcrtomb@plt+0x228b0>
  4266b8:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4266bc:	ldr	x5, [x8, #4008]
  4266c0:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4266c4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4266c8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4266cc:	add	x20, x20, #0xd80
  4266d0:	add	x0, x0, #0xdeb
  4266d4:	add	x2, x2, #0xd88
  4266d8:	mov	w4, #0x4                   	// #4
  4266dc:	mov	x1, x19
  4266e0:	mov	x3, x20
  4266e4:	bl	436fa4 <wcrtomb@plt+0x324b4>
  4266e8:	ldr	w8, [x20, x0, lsl #2]
  4266ec:	b	4273a4 <wcrtomb@plt+0x228b4>
  4266f0:	cbz	x19, 4273b4 <wcrtomb@plt+0x228c4>
  4266f4:	ldrb	w8, [x19]
  4266f8:	cmp	w8, #0x2e
  4266fc:	b.ne	426710 <wcrtomb@plt+0x21c20>  // b.any
  426700:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  426704:	add	x0, x0, #0xfda
  426708:	bl	4088c0 <wcrtomb@plt+0x3dd0>
  42670c:	add	x19, x19, #0x1
  426710:	add	x1, sp, #0x38
  426714:	mov	x0, x19
  426718:	mov	w2, wzr
  42671c:	bl	403ef0 <strtoul@plt>
  426720:	ldr	x8, [sp, #56]
  426724:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426728:	str	w0, [x9, #3848]
  42672c:	ldrb	w8, [x8]
  426730:	cbz	w8, 4276b8 <wcrtomb@plt+0x22bc8>
  426734:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426738:	ldr	x8, [x8, #4000]
  42673c:	cbz	x8, 426744 <wcrtomb@plt+0x21c54>
  426740:	blr	x8
  426744:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426748:	add	x1, x1, #0xdfc
  42674c:	b	428108 <wcrtomb@plt+0x23618>
  426750:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426754:	mov	w9, #0x1                   	// #1
  426758:	mov	w0, wzr
  42675c:	strb	w9, [x8, #3749]
  426760:	cbz	x19, 4276bc <wcrtomb@plt+0x22bcc>
  426764:	str	x19, [x20, #32]
  426768:	b	4276bc <wcrtomb@plt+0x22bcc>
  42676c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426770:	mov	w0, wzr
  426774:	str	wzr, [x8, #3064]
  426778:	b	4276bc <wcrtomb@plt+0x22bcc>
  42677c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426780:	mov	w9, #0xffffffff            	// #-1
  426784:	mov	w0, wzr
  426788:	str	w9, [x8, #3888]
  42678c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426790:	ldr	x20, [x20]
  426794:	ldr	x0, [x20, #8]
  426798:	cbz	x0, 4273c8 <wcrtomb@plt+0x228d8>
  42679c:	bl	403f00 <strlen@plt>
  4267a0:	add	x0, x0, #0x21
  4267a4:	b	4273cc <wcrtomb@plt+0x228dc>
  4267a8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4267ac:	ldr	w9, [x8, #3852]
  4267b0:	cbz	w9, 4267bc <wcrtomb@plt+0x21ccc>
  4267b4:	cmp	w9, #0x6
  4267b8:	b.ne	427fd0 <wcrtomb@plt+0x234e0>  // b.any
  4267bc:	mov	w9, #0x6                   	// #6
  4267c0:	mov	w0, wzr
  4267c4:	str	w9, [x8, #3852]
  4267c8:	b	4276bc <wcrtomb@plt+0x22bcc>
  4267cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4267d0:	mov	w9, #0x1                   	// #1
  4267d4:	mov	w0, wzr
  4267d8:	strb	w9, [x8, #4008]
  4267dc:	b	4276bc <wcrtomb@plt+0x22bcc>
  4267e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4267e4:	mov	w9, #0x1                   	// #1
  4267e8:	mov	w0, wzr
  4267ec:	strb	w9, [x8, #3544]
  4267f0:	b	4276bc <wcrtomb@plt+0x22bcc>
  4267f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4267f8:	ldr	w9, [x8, #3852]
  4267fc:	cbz	w9, 426808 <wcrtomb@plt+0x21d18>
  426800:	cmp	w9, #0x5
  426804:	b.ne	427fd0 <wcrtomb@plt+0x234e0>  // b.any
  426808:	mov	w9, #0x5                   	// #5
  42680c:	mov	w0, wzr
  426810:	str	w9, [x8, #3852]
  426814:	b	4276bc <wcrtomb@plt+0x22bcc>
  426818:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42681c:	mov	w9, #0x1                   	// #1
  426820:	mov	w0, wzr
  426824:	str	w9, [x8, #3604]
  426828:	b	4276bc <wcrtomb@plt+0x22bcc>
  42682c:	ldr	x20, [x20]
  426830:	ldr	x0, [x20, #8]
  426834:	cbz	x0, 42745c <wcrtomb@plt+0x2296c>
  426838:	bl	403f00 <strlen@plt>
  42683c:	add	x0, x0, #0x21
  426840:	b	427460 <wcrtomb@plt+0x22970>
  426844:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426848:	add	x0, x0, #0x2f4
  42684c:	bl	428878 <wcrtomb@plt+0x23d88>
  426850:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426854:	mov	w9, #0x1                   	// #1
  426858:	mov	w0, wzr
  42685c:	str	w9, [x8, #3976]
  426860:	b	4276bc <wcrtomb@plt+0x22bcc>
  426864:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426868:	mov	w9, #0x1                   	// #1
  42686c:	mov	w0, wzr
  426870:	strb	w9, [x8, #3688]
  426874:	b	4276bc <wcrtomb@plt+0x22bcc>
  426878:	ldr	x21, [x20]
  42687c:	ldr	x0, [x21, #8]
  426880:	cbz	x0, 4274f0 <wcrtomb@plt+0x22a00>
  426884:	bl	403f00 <strlen@plt>
  426888:	add	x0, x0, #0x21
  42688c:	b	4274f4 <wcrtomb@plt+0x22a04>
  426890:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426894:	mov	w9, #0x1                   	// #1
  426898:	add	x1, sp, #0x38
  42689c:	mov	w2, #0xa                   	// #10
  4268a0:	mov	x0, x19
  4268a4:	strb	w9, [x8, #3904]
  4268a8:	bl	403ef0 <strtoul@plt>
  4268ac:	ldr	x8, [sp, #56]
  4268b0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4268b4:	str	w0, [x9, #3600]
  4268b8:	ldrb	w9, [x8]
  4268bc:	cbz	w9, 4276b8 <wcrtomb@plt+0x22bc8>
  4268c0:	cmp	w9, #0x2e
  4268c4:	b.ne	4268ec <wcrtomb@plt+0x21dfc>  // b.any
  4268c8:	add	x0, x8, #0x1
  4268cc:	add	x1, sp, #0x38
  4268d0:	mov	w2, #0xa                   	// #10
  4268d4:	bl	403ef0 <strtoul@plt>
  4268d8:	ldr	x8, [sp, #56]
  4268dc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4268e0:	str	w0, [x9, #3080]
  4268e4:	ldrb	w8, [x8]
  4268e8:	cbz	w8, 4276b8 <wcrtomb@plt+0x22bc8>
  4268ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4268f0:	ldr	x8, [x8, #4000]
  4268f4:	cbz	x8, 4268fc <wcrtomb@plt+0x21e0c>
  4268f8:	blr	x8
  4268fc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426900:	add	x1, x1, #0xdce
  426904:	b	42803c <wcrtomb@plt+0x2354c>
  426908:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42690c:	mov	w9, #0x1                   	// #1
  426910:	mov	w0, wzr
  426914:	strb	w9, [x8, #3545]
  426918:	b	4276bc <wcrtomb@plt+0x22bcc>
  42691c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426920:	mov	w9, #0x1                   	// #1
  426924:	mov	w0, wzr
  426928:	strb	w9, [x8, #3665]
  42692c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426930:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426934:	mov	w9, #0x1                   	// #1
  426938:	mov	w0, wzr
  42693c:	strb	w9, [x8, #3069]
  426940:	b	4276bc <wcrtomb@plt+0x22bcc>
  426944:	ldr	x21, [x20]
  426948:	ldr	x0, [x21, #8]
  42694c:	cbz	x0, 42754c <wcrtomb@plt+0x22a5c>
  426950:	bl	403f00 <strlen@plt>
  426954:	add	x0, x0, #0x21
  426958:	b	427550 <wcrtomb@plt+0x22a60>
  42695c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426960:	mov	w9, #0x1                   	// #1
  426964:	mov	w0, wzr
  426968:	strb	w9, [x8, #3569]
  42696c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426970:	mov	x0, xzr
  426974:	mov	w1, w20
  426978:	bl	447724 <argp_parse@@Base+0xd078>
  42697c:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426980:	ldr	x20, [x20]
  426984:	ldr	x0, [x20, #8]
  426988:	cbz	x0, 4275d8 <wcrtomb@plt+0x22ae8>
  42698c:	bl	403f00 <strlen@plt>
  426990:	add	x0, x0, #0x21
  426994:	b	4275dc <wcrtomb@plt+0x22aec>
  426998:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42699c:	ldr	w9, [x8, #3852]
  4269a0:	cbz	w9, 4269ac <wcrtomb@plt+0x21ebc>
  4269a4:	cmp	w9, #0x9
  4269a8:	b.ne	427fd0 <wcrtomb@plt+0x234e0>  // b.any
  4269ac:	mov	w9, #0x9                   	// #9
  4269b0:	mov	w0, wzr
  4269b4:	str	w9, [x8, #3852]
  4269b8:	b	4276bc <wcrtomb@plt+0x22bcc>
  4269bc:	add	x1, sp, #0x38
  4269c0:	mov	w2, #0xa                   	// #10
  4269c4:	mov	x0, x19
  4269c8:	bl	403ef0 <strtoul@plt>
  4269cc:	ldr	x8, [sp, #56]
  4269d0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4269d4:	str	w0, [x9, #3772]
  4269d8:	ldrb	w8, [x8]
  4269dc:	cbz	w8, 4276b8 <wcrtomb@plt+0x22bc8>
  4269e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4269e4:	ldr	x8, [x8, #4000]
  4269e8:	cbz	x8, 4269f0 <wcrtomb@plt+0x21f00>
  4269ec:	blr	x8
  4269f0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4269f4:	add	x1, x1, #0xd65
  4269f8:	b	42803c <wcrtomb@plt+0x2354c>
  4269fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426a00:	mov	w0, wzr
  426a04:	str	x19, [x8, #3656]
  426a08:	b	4276bc <wcrtomb@plt+0x22bcc>
  426a0c:	mov	w8, #0x1                   	// #1
  426a10:	mov	w0, wzr
  426a14:	str	w8, [x20, #40]
  426a18:	b	4276bc <wcrtomb@plt+0x22bcc>
  426a1c:	ldr	x21, [x20]
  426a20:	ldr	x0, [x21, #8]
  426a24:	cbz	x0, 42766c <wcrtomb@plt+0x22b7c>
  426a28:	bl	403f00 <strlen@plt>
  426a2c:	add	x0, x0, #0x21
  426a30:	b	427670 <wcrtomb@plt+0x22b80>
  426a34:	mov	x0, x19
  426a38:	bl	41b3d4 <wcrtomb@plt+0x168e4>
  426a3c:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426a40:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426a44:	mov	w0, wzr
  426a48:	strb	wzr, [x8, #3024]
  426a4c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426a50:	ldr	x20, [x20]
  426a54:	ldr	x0, [x20, #8]
  426a58:	cbz	x0, 4276dc <wcrtomb@plt+0x22bec>
  426a5c:	bl	403f00 <strlen@plt>
  426a60:	add	x0, x0, #0x21
  426a64:	b	4276e0 <wcrtomb@plt+0x22bf0>
  426a68:	ldr	x20, [x20]
  426a6c:	ldr	x0, [x20, #8]
  426a70:	cbz	x0, 42775c <wcrtomb@plt+0x22c6c>
  426a74:	bl	403f00 <strlen@plt>
  426a78:	add	x0, x0, #0x21
  426a7c:	b	427760 <wcrtomb@plt+0x22c70>
  426a80:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426a84:	mov	w9, #0x1                   	// #1
  426a88:	mov	w0, wzr
  426a8c:	strb	w9, [x8, #3076]
  426a90:	b	4276bc <wcrtomb@plt+0x22bcc>
  426a94:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426a98:	ldr	w9, [x8, #3852]
  426a9c:	cmp	w9, #0x2
  426aa0:	b.cs	427fd0 <wcrtomb@plt+0x234e0>  // b.hs, b.nlast
  426aa4:	mov	w9, #0x1                   	// #1
  426aa8:	mov	w0, wzr
  426aac:	str	w9, [x8, #3852]
  426ab0:	b	4276bc <wcrtomb@plt+0x22bcc>
  426ab4:	mov	x0, x19
  426ab8:	bl	41af5c <wcrtomb@plt+0x1646c>
  426abc:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426ac0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426ac4:	mov	w9, #0x1                   	// #1
  426ac8:	mov	w0, wzr
  426acc:	strb	w9, [x8, #3024]
  426ad0:	b	4276bc <wcrtomb@plt+0x22bcc>
  426ad4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  426ad8:	ldr	x5, [x8, #4008]
  426adc:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x18e3c>
  426ae0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426ae4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x18e3c>
  426ae8:	add	x20, x20, #0xd60
  426aec:	add	x0, x0, #0xdbd
  426af0:	add	x2, x2, #0xd68
  426af4:	mov	w4, #0x4                   	// #4
  426af8:	mov	x1, x19
  426afc:	mov	x3, x20
  426b00:	bl	436fa4 <wcrtomb@plt+0x324b4>
  426b04:	mov	x8, x0
  426b08:	ldr	w8, [x20, x8, lsl #2]
  426b0c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426b10:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426b14:	mov	w11, #0x1                   	// #1
  426b18:	mov	w0, wzr
  426b1c:	str	w8, [x9, #3908]
  426b20:	strb	w11, [x10, #3904]
  426b24:	b	4276bc <wcrtomb@plt+0x22bcc>
  426b28:	ldr	x20, [x20]
  426b2c:	ldr	x0, [x20, #8]
  426b30:	cbz	x0, 4277dc <wcrtomb@plt+0x22cec>
  426b34:	bl	403f00 <strlen@plt>
  426b38:	add	x0, x0, #0x21
  426b3c:	b	4277e0 <wcrtomb@plt+0x22cf0>
  426b40:	mov	x0, x19
  426b44:	bl	428878 <wcrtomb@plt+0x23d88>
  426b48:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426b4c:	ldr	x21, [x20]
  426b50:	ldr	x0, [x21, #8]
  426b54:	cbz	x0, 42785c <wcrtomb@plt+0x22d6c>
  426b58:	bl	403f00 <strlen@plt>
  426b5c:	add	x0, x0, #0x21
  426b60:	b	427860 <wcrtomb@plt+0x22d70>
  426b64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426b68:	ldr	w9, [x8, #3852]
  426b6c:	orr	w9, w9, #0x2
  426b70:	cmp	w9, #0x2
  426b74:	b.eq	427090 <wcrtomb@plt+0x225a0>  // b.none
  426b78:	b	427fd0 <wcrtomb@plt+0x234e0>
  426b7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426b80:	mov	w9, #0x1                   	// #1
  426b84:	mov	w0, wzr
  426b88:	strb	w9, [x8, #3617]
  426b8c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426b90:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426b94:	mov	w0, wzr
  426b98:	str	x19, [x8, #3640]
  426b9c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426ba0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426ba4:	ldr	w9, [x8, #3852]
  426ba8:	cbz	w9, 426bb4 <wcrtomb@plt+0x220c4>
  426bac:	cmp	w9, #0x7
  426bb0:	b.ne	427fd0 <wcrtomb@plt+0x234e0>  // b.any
  426bb4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426bb8:	ldr	w10, [x9, #3636]
  426bbc:	mov	w11, #0x7                   	// #7
  426bc0:	str	w11, [x8, #3852]
  426bc4:	mov	w0, wzr
  426bc8:	add	w8, w10, #0x1
  426bcc:	str	w8, [x9, #3636]
  426bd0:	b	4276bc <wcrtomb@plt+0x22bcc>
  426bd4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426bd8:	mov	w9, #0x1                   	// #1
  426bdc:	mov	w0, wzr
  426be0:	str	w9, [x8, #3064]
  426be4:	b	4276bc <wcrtomb@plt+0x22bcc>
  426be8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426bec:	ldr	w9, [x8, #3852]
  426bf0:	orr	w9, w9, #0x8
  426bf4:	cmp	w9, #0x8
  426bf8:	b.eq	427090 <wcrtomb@plt+0x225a0>  // b.none
  426bfc:	b	427fd0 <wcrtomb@plt+0x234e0>
  426c00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426c04:	mov	w9, #0x1                   	// #1
  426c08:	mov	w0, wzr
  426c0c:	strb	w9, [x8, #1964]
  426c10:	b	4276bc <wcrtomb@plt+0x22bcc>
  426c14:	mov	x0, x19
  426c18:	bl	41d4f4 <wcrtomb@plt+0x18a04>
  426c1c:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426c20:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426c24:	mov	w9, #0x1                   	// #1
  426c28:	mov	w0, wzr
  426c2c:	strb	w9, [x8, #3833]
  426c30:	b	4276bc <wcrtomb@plt+0x22bcc>
  426c34:	ldr	x21, [x20]
  426c38:	ldr	x0, [x21, #8]
  426c3c:	cbz	x0, 4278d0 <wcrtomb@plt+0x22de0>
  426c40:	bl	403f00 <strlen@plt>
  426c44:	add	x0, x0, #0x21
  426c48:	b	4278d4 <wcrtomb@plt+0x22de4>
  426c4c:	ldr	x20, [x20]
  426c50:	ldr	x0, [x20, #8]
  426c54:	cbz	x0, 42792c <wcrtomb@plt+0x22e3c>
  426c58:	bl	403f00 <strlen@plt>
  426c5c:	add	x0, x0, #0x21
  426c60:	b	427930 <wcrtomb@plt+0x22e40>
  426c64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426c68:	mov	w9, #0x1                   	// #1
  426c6c:	mov	w0, wzr
  426c70:	strb	w9, [x8, #3068]
  426c74:	b	4276bc <wcrtomb@plt+0x22bcc>
  426c78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426c7c:	mov	w9, #0x1                   	// #1
  426c80:	mov	w0, wzr
  426c84:	strb	w9, [x8, #3904]
  426c88:	b	4276bc <wcrtomb@plt+0x22bcc>
  426c8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426c90:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426c94:	mov	w10, #0x1                   	// #1
  426c98:	mov	w0, wzr
  426c9c:	str	x19, [x8, #3760]
  426ca0:	strb	w10, [x9, #3068]
  426ca4:	b	4276bc <wcrtomb@plt+0x22bcc>
  426ca8:	ldr	x20, [x20]
  426cac:	ldr	x0, [x20, #8]
  426cb0:	cbz	x0, 4279ac <wcrtomb@plt+0x22ebc>
  426cb4:	bl	403f00 <strlen@plt>
  426cb8:	add	x0, x0, #0x21
  426cbc:	b	4279b0 <wcrtomb@plt+0x22ec0>
  426cc0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  426cc4:	add	x4, x4, #0xb36
  426cc8:	add	x3, sp, #0x38
  426ccc:	mov	w2, #0xa                   	// #10
  426cd0:	mov	x0, x19
  426cd4:	mov	x1, xzr
  426cd8:	bl	44a3ac <argp_parse@@Base+0xfd00>
  426cdc:	cbnz	w0, 426d10 <wcrtomb@plt+0x22220>
  426ce0:	ldr	x8, [sp, #56]
  426ce4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426ce8:	cmp	x8, w8, sxtw
  426cec:	str	w8, [x9, #3740]
  426cf0:	b.ne	426d10 <wcrtomb@plt+0x22220>  // b.any
  426cf4:	cmp	w8, #0x1
  426cf8:	b.lt	426d10 <wcrtomb@plt+0x22220>  // b.tstop
  426cfc:	lsl	x9, x8, #9
  426d00:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426d04:	lsr	x8, x8, #55
  426d08:	str	x9, [x10, #3912]
  426d0c:	cbz	x8, 4276b8 <wcrtomb@plt+0x22bc8>
  426d10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426d14:	ldr	x8, [x8, #4000]
  426d18:	cbz	x8, 426d20 <wcrtomb@plt+0x22230>
  426d1c:	blr	x8
  426d20:	mov	x0, x19
  426d24:	bl	448e5c <argp_parse@@Base+0xe7b0>
  426d28:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426d2c:	mov	x19, x0
  426d30:	add	x1, x1, #0xd2b
  426d34:	b	42814c <wcrtomb@plt+0x2365c>
  426d38:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426d3c:	mov	w0, wzr
  426d40:	str	x19, [x8, #3952]
  426d44:	b	4276bc <wcrtomb@plt+0x22bcc>
  426d48:	mov	x0, x19
  426d4c:	bl	440754 <argp_parse@@Base+0x60a8>
  426d50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426d54:	str	x0, [x8, #3592]
  426d58:	cbz	x0, 4280f0 <wcrtomb@plt+0x23600>
  426d5c:	mov	w0, wzr
  426d60:	bl	404970 <umask@plt>
  426d64:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426d68:	str	w0, [x8, #3072]
  426d6c:	bl	404970 <umask@plt>
  426d70:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426d74:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426d78:	add	x4, x4, #0xd43
  426d7c:	add	x1, sp, #0x8
  426d80:	add	x3, sp, #0x38
  426d84:	mov	w2, #0xa                   	// #10
  426d88:	mov	x0, x19
  426d8c:	bl	44a3ac <argp_parse@@Base+0xfd00>
  426d90:	cbnz	w0, 428128 <wcrtomb@plt+0x23638>
  426d94:	ldr	x8, [sp, #8]
  426d98:	cmp	x8, x19
  426d9c:	b.ls	426db8 <wcrtomb@plt+0x222c8>  // b.plast
  426da0:	ldurb	w1, [x8, #-1]
  426da4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426da8:	add	x0, x0, #0xd43
  426dac:	mov	w2, #0xe                   	// #14
  426db0:	bl	404840 <memchr@plt>
  426db4:	cbz	x0, 427ed8 <wcrtomb@plt+0x233e8>
  426db8:	ldr	d0, [sp, #56]
  426dbc:	ucvtf	d0, d0
  426dc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426dc4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426dc8:	mov	w10, #0x1                   	// #1
  426dcc:	mov	w0, wzr
  426dd0:	str	d0, [x8, #3624]
  426dd4:	strb	w10, [x9, #3068]
  426dd8:	b	4276bc <wcrtomb@plt+0x22bcc>
  426ddc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426de0:	ldr	w9, [x8, #3852]
  426de4:	cbz	w9, 426df0 <wcrtomb@plt+0x22300>
  426de8:	cmp	w9, #0x3
  426dec:	b.ne	427fd0 <wcrtomb@plt+0x234e0>  // b.any
  426df0:	mov	w9, #0x3                   	// #3
  426df4:	mov	w0, wzr
  426df8:	str	w9, [x8, #3852]
  426dfc:	b	4276bc <wcrtomb@plt+0x22bcc>
  426e00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426e04:	mov	w9, #0x1                   	// #1
  426e08:	mov	w0, wzr
  426e0c:	strb	w9, [x8, #3960]
  426e10:	b	4276bc <wcrtomb@plt+0x22bcc>
  426e14:	ldr	x21, [x20]
  426e18:	ldr	x0, [x21, #8]
  426e1c:	cbz	x0, 427a40 <wcrtomb@plt+0x22f50>
  426e20:	bl	403f00 <strlen@plt>
  426e24:	add	x0, x0, #0x21
  426e28:	b	427a44 <wcrtomb@plt+0x22f54>
  426e2c:	ldr	x20, [x20]
  426e30:	ldr	x0, [x20, #8]
  426e34:	cbz	x0, 427aac <wcrtomb@plt+0x22fbc>
  426e38:	bl	403f00 <strlen@plt>
  426e3c:	add	x0, x0, #0x21
  426e40:	b	427ab0 <wcrtomb@plt+0x22fc0>
  426e44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426e48:	mov	w9, #0x1                   	// #1
  426e4c:	str	w9, [x8, #3964]
  426e50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426e54:	ldr	x8, [x8, #3040]
  426e58:	tbz	x8, #63, 428008 <wcrtomb@plt+0x23518>
  426e5c:	adrp	x8, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426e60:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  426e64:	add	x8, x8, #0xdb0
  426e68:	add	x9, x9, #0xda2
  426e6c:	cmp	w21, #0x119
  426e70:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426e74:	csel	x1, x9, x8, eq  // eq = none
  426e78:	add	x3, x3, #0xbd8
  426e7c:	mov	x0, x20
  426e80:	mov	x2, x19
  426e84:	bl	428710 <wcrtomb@plt+0x23c20>
  426e88:	ldr	x21, [x20]
  426e8c:	ldr	x0, [x21, #8]
  426e90:	cbz	x0, 427244 <wcrtomb@plt+0x22754>
  426e94:	bl	403f00 <strlen@plt>
  426e98:	add	x0, x0, #0x21
  426e9c:	b	427248 <wcrtomb@plt+0x22758>
  426ea0:	ldr	x20, [x20]
  426ea4:	ldr	x0, [x20, #8]
  426ea8:	cbz	x0, 427b2c <wcrtomb@plt+0x2303c>
  426eac:	bl	403f00 <strlen@plt>
  426eb0:	add	x0, x0, #0x21
  426eb4:	b	427b30 <wcrtomb@plt+0x23040>
  426eb8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426ebc:	mov	w9, #0x1                   	// #1
  426ec0:	mov	w0, wzr
  426ec4:	strb	w9, [x8, #3568]
  426ec8:	b	4276bc <wcrtomb@plt+0x22bcc>
  426ecc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  426ed0:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426ed4:	add	x1, x1, #0x3e0
  426ed8:	add	x3, x3, #0xec8
  426edc:	mov	x0, x20
  426ee0:	mov	x2, x19
  426ee4:	bl	428710 <wcrtomb@plt+0x23c20>
  426ee8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426eec:	ldr	w9, [x8, #3048]
  426ef0:	cbnz	w9, 4276b8 <wcrtomb@plt+0x22bc8>
  426ef4:	mov	w9, #0x1                   	// #1
  426ef8:	mov	w0, wzr
  426efc:	str	w9, [x8, #3048]
  426f00:	b	4276bc <wcrtomb@plt+0x22bcc>
  426f04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426f08:	mov	w9, #0x1                   	// #1
  426f0c:	mov	w0, wzr
  426f10:	strb	w9, [x8, #3749]
  426f14:	str	x19, [x20, #24]
  426f18:	b	4276bc <wcrtomb@plt+0x22bcc>
  426f1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426f20:	mov	w9, #0x1                   	// #1
  426f24:	mov	w0, wzr
  426f28:	strb	w9, [x8, #3616]
  426f2c:	b	4276bc <wcrtomb@plt+0x22bcc>
  426f30:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426f34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426f38:	ldr	x9, [x20, #3840]
  426f3c:	ldr	x10, [x8, #1984]
  426f40:	cmp	x9, x10
  426f44:	b.ne	4272ec <wcrtomb@plt+0x227fc>  // b.any
  426f48:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426f4c:	ldr	x0, [x21, #3680]
  426f50:	cbz	x0, 427ef0 <wcrtomb@plt+0x23400>
  426f54:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  426f58:	movk	x10, #0xaaa, lsl #48
  426f5c:	cmp	x9, x10
  426f60:	b.cs	427efc <wcrtomb@plt+0x2340c>  // b.hs, b.nlast
  426f64:	add	x9, x9, x9, lsr #1
  426f68:	add	x9, x9, #0x1
  426f6c:	b	427f04 <wcrtomb@plt+0x23414>
  426f70:	mov	w0, wzr
  426f74:	str	wzr, [x20, #40]
  426f78:	b	4276bc <wcrtomb@plt+0x22bcc>
  426f7c:	ldr	x20, [x20]
  426f80:	ldr	x0, [x20, #8]
  426f84:	cbz	x0, 427bc0 <wcrtomb@plt+0x230d0>
  426f88:	bl	403f00 <strlen@plt>
  426f8c:	add	x0, x0, #0x21
  426f90:	b	427bc4 <wcrtomb@plt+0x230d4>
  426f94:	mov	w8, #0x1                   	// #1
  426f98:	mov	w0, wzr
  426f9c:	strb	w8, [x20, #16]
  426fa0:	b	4276bc <wcrtomb@plt+0x22bcc>
  426fa4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426fa8:	mov	w9, #0x2                   	// #2
  426fac:	mov	w0, wzr
  426fb0:	str	w9, [x8, #3048]
  426fb4:	b	4276bc <wcrtomb@plt+0x22bcc>
  426fb8:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  426fbc:	mov	w0, wzr
  426fc0:	str	x19, [x8, #3832]
  426fc4:	b	4276bc <wcrtomb@plt+0x22bcc>
  426fc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  426fcc:	mov	w9, #0x1                   	// #1
  426fd0:	mov	w0, wzr
  426fd4:	strb	w9, [x8, #3945]
  426fd8:	b	4276bc <wcrtomb@plt+0x22bcc>
  426fdc:	mov	x0, x19
  426fe0:	bl	4088c0 <wcrtomb@plt+0x3dd0>
  426fe4:	b	4276b8 <wcrtomb@plt+0x22bc8>
  426fe8:	ldr	x21, [x20]
  426fec:	ldr	x0, [x21, #8]
  426ff0:	cbz	x0, 427c4c <wcrtomb@plt+0x2315c>
  426ff4:	bl	403f00 <strlen@plt>
  426ff8:	add	x0, x0, #0x21
  426ffc:	b	427c50 <wcrtomb@plt+0x23160>
  427000:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427004:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  427008:	ldr	w10, [x8, #3636]
  42700c:	ldr	w11, [x9, #3712]
  427010:	mov	w12, #0x3000                	// #12288
  427014:	movk	w12, #0x58, lsl #16
  427018:	add	w10, w10, #0x1
  42701c:	orr	w11, w11, w12
  427020:	mov	w0, wzr
  427024:	str	w10, [x8, #3636]
  427028:	str	w11, [x9, #3712]
  42702c:	b	4276bc <wcrtomb@plt+0x22bcc>
  427030:	ldr	x20, [x20]
  427034:	ldr	x0, [x20, #8]
  427038:	cbz	x0, 427ca8 <wcrtomb@plt+0x231b8>
  42703c:	bl	403f00 <strlen@plt>
  427040:	add	x0, x0, #0x21
  427044:	b	427cac <wcrtomb@plt+0x231bc>
  427048:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42704c:	add	x0, x0, #0x2f4
  427050:	bl	428878 <wcrtomb@plt+0x23d88>
  427054:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427058:	mov	w9, #0x1                   	// #1
  42705c:	mov	w0, wzr
  427060:	str	w9, [x8, #3888]
  427064:	b	4276bc <wcrtomb@plt+0x22bcc>
  427068:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42706c:	mov	w9, #0x1                   	// #1
  427070:	mov	w0, wzr
  427074:	strb	w9, [x8, #3690]
  427078:	b	4276bc <wcrtomb@plt+0x22bcc>
  42707c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427080:	ldr	w9, [x8, #3852]
  427084:	orr	w9, w9, #0x4
  427088:	cmp	w9, #0x4
  42708c:	b.ne	427fd0 <wcrtomb@plt+0x234e0>  // b.any
  427090:	mov	w0, wzr
  427094:	str	w9, [x8, #3852]
  427098:	b	4276bc <wcrtomb@plt+0x22bcc>
  42709c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4270a0:	mov	w9, #0xffffffff            	// #-1
  4270a4:	mov	w0, wzr
  4270a8:	str	w9, [x8, #3972]
  4270ac:	b	4276bc <wcrtomb@plt+0x22bcc>
  4270b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4270b4:	mov	w9, #0x1                   	// #1
  4270b8:	mov	w0, wzr
  4270bc:	strb	w9, [x8, #3736]
  4270c0:	b	4276bc <wcrtomb@plt+0x22bcc>
  4270c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4270c8:	mov	w9, #0x1                   	// #1
  4270cc:	mov	w0, wzr
  4270d0:	strb	w9, [x8, #3584]
  4270d4:	b	4276bc <wcrtomb@plt+0x22bcc>
  4270d8:	ldr	x20, [x20]
  4270dc:	ldr	x0, [x20, #8]
  4270e0:	cbz	x0, 427d38 <wcrtomb@plt+0x23248>
  4270e4:	bl	403f00 <strlen@plt>
  4270e8:	add	x0, x0, #0x21
  4270ec:	b	427d3c <wcrtomb@plt+0x2324c>
  4270f0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4270f4:	add	x1, x1, #0xdc0
  4270f8:	mov	x0, x19
  4270fc:	bl	4289a8 <wcrtomb@plt+0x23eb8>
  427100:	cmn	x0, #0x1
  427104:	b.eq	427db8 <wcrtomb@plt+0x232c8>  // b.none
  427108:	mov	x8, x0
  42710c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427110:	mov	w0, wzr
  427114:	str	w8, [x9, #3696]
  427118:	b	4276bc <wcrtomb@plt+0x22bcc>
  42711c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427120:	mov	w9, #0x1                   	// #1
  427124:	mov	w0, wzr
  427128:	str	w9, [x8, #3972]
  42712c:	b	4276bc <wcrtomb@plt+0x22bcc>
  427130:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427134:	mov	w9, #0xffffffff            	// #-1
  427138:	mov	w0, wzr
  42713c:	str	w9, [x8, #3976]
  427140:	b	4276bc <wcrtomb@plt+0x22bcc>
  427144:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427148:	add	x0, x0, #0x2f4
  42714c:	bl	428878 <wcrtomb@plt+0x23d88>
  427150:	b	4276b8 <wcrtomb@plt+0x22bc8>
  427154:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427158:	mov	w0, wzr
  42715c:	strb	wzr, [x8, #3960]
  427160:	b	4276bc <wcrtomb@plt+0x22bcc>
  427164:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427168:	mov	w9, #0x1                   	// #1
  42716c:	mov	w0, wzr
  427170:	strb	w9, [x8, #3768]
  427174:	b	4276bc <wcrtomb@plt+0x22bcc>
  427178:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42717c:	mov	w9, #0xffffffff            	// #-1
  427180:	mov	w0, wzr
  427184:	str	w9, [x8, #3604]
  427188:	b	4276bc <wcrtomb@plt+0x22bcc>
  42718c:	ldr	x22, [x20]
  427190:	ldr	x0, [x22, #8]
  427194:	cbz	x0, 427de0 <wcrtomb@plt+0x232f0>
  427198:	bl	403f00 <strlen@plt>
  42719c:	add	x0, x0, #0x21
  4271a0:	b	427de4 <wcrtomb@plt+0x232f4>
  4271a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4271a8:	mov	w9, #0xffffffff            	// #-1
  4271ac:	mov	w0, wzr
  4271b0:	str	w9, [x8, #3648]
  4271b4:	b	4276bc <wcrtomb@plt+0x22bcc>
  4271b8:	ldrb	w1, [x19]
  4271bc:	cbz	w1, 4276b8 <wcrtomb@plt+0x22bc8>
  4271c0:	add	x19, x19, #0x1
  4271c4:	mov	w2, #0x1                   	// #1
  4271c8:	mov	x0, xzr
  4271cc:	bl	44773c <argp_parse@@Base+0xd090>
  4271d0:	ldrb	w1, [x19], #1
  4271d4:	mov	w0, wzr
  4271d8:	cbnz	w1, 4271c4 <wcrtomb@plt+0x226d4>
  4271dc:	b	4276bc <wcrtomb@plt+0x22bcc>
  4271e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4271e4:	mov	w0, wzr
  4271e8:	str	x19, [x8, #3800]
  4271ec:	b	4276bc <wcrtomb@plt+0x22bcc>
  4271f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4271f4:	mov	w9, #0x1                   	// #1
  4271f8:	mov	w0, wzr
  4271fc:	strb	w9, [x8, #3026]
  427200:	b	4276bc <wcrtomb@plt+0x22bcc>
  427204:	cbz	x19, 427e44 <wcrtomb@plt+0x23354>
  427208:	mov	x0, x19
  42720c:	bl	424a50 <wcrtomb@plt+0x1ff60>
  427210:	adrp	x1, 428000 <wcrtomb@plt+0x23510>
  427214:	add	x1, x1, #0xb70
  427218:	bl	404170 <signal@plt>
  42721c:	b	4276b8 <wcrtomb@plt+0x22bc8>
  427220:	ldr	x20, [x20]
  427224:	ldr	x0, [x20, #8]
  427228:	cbz	x0, 427e58 <wcrtomb@plt+0x23368>
  42722c:	bl	403f00 <strlen@plt>
  427230:	add	x0, x0, #0x21
  427234:	b	427e5c <wcrtomb@plt+0x2336c>
  427238:	mov	x0, x19
  42723c:	bl	42a988 <wcrtomb@plt+0x25e98>
  427240:	b	4276b8 <wcrtomb@plt+0x22bc8>
  427244:	mov	w0, #0x20                  	// #32
  427248:	bl	44a010 <argp_parse@@Base+0xf964>
  42724c:	ldr	x1, [x21, #8]
  427250:	mov	x19, x0
  427254:	cbz	x1, 427268 <wcrtomb@plt+0x22778>
  427258:	add	x20, x19, #0x20
  42725c:	mov	x0, x20
  427260:	bl	4047f0 <strcpy@plt>
  427264:	b	42726c <wcrtomb@plt+0x2277c>
  427268:	mov	x20, xzr
  42726c:	str	x20, [x19, #8]
  427270:	ldr	w8, [x21]
  427274:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427278:	ldr	x10, [x9, #2064]
  42727c:	mov	w0, wzr
  427280:	str	w8, [x19]
  427284:	ldr	x8, [x21, #16]
  427288:	str	x19, [x9, #2064]
  42728c:	stp	x8, x10, [x19, #16]
  427290:	b	4276bc <wcrtomb@plt+0x22bcc>
  427294:	mov	w8, #0x5                   	// #5
  427298:	movk	w8, #0x100, lsl #16
  42729c:	cmp	w21, w8
  4272a0:	b.ne	4276bc <wcrtomb@plt+0x22bcc>  // b.any
  4272a4:	ldr	x8, [x20]
  4272a8:	ldr	w8, [x8]
  4272ac:	cbz	w8, 427f9c <wcrtomb@plt+0x234ac>
  4272b0:	cmp	w8, #0x2
  4272b4:	b.ne	427fc8 <wcrtomb@plt+0x234d8>  // b.any
  4272b8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4272bc:	add	x1, x1, #0xf00
  4272c0:	mov	w2, #0x5                   	// #5
  4272c4:	mov	x0, xzr
  4272c8:	bl	4048b0 <dcgettext@plt>
  4272cc:	ldr	x8, [x20]
  4272d0:	mov	x2, x0
  4272d4:	mov	w0, wzr
  4272d8:	mov	w1, wzr
  4272dc:	ldp	x3, x4, [x8, #8]
  4272e0:	bl	403f60 <error@plt>
  4272e4:	mov	w0, #0x40                  	// #64
  4272e8:	bl	403f30 <exit@plt>
  4272ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4272f0:	ldr	x8, [x8, #3680]
  4272f4:	b	427f1c <wcrtomb@plt+0x2342c>
  4272f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4272fc:	ldr	x0, [x8, #3576]
  427300:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427304:	mov	w9, #0xffffffff            	// #-1
  427308:	str	w9, [x8, #3776]
  42730c:	cbz	x0, 4276bc <wcrtomb@plt+0x22bcc>
  427310:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427314:	add	x1, x1, #0xec0
  427318:	bl	41d374 <wcrtomb@plt+0x18884>
  42731c:	b	4276b8 <wcrtomb@plt+0x22bc8>
  427320:	mov	w0, #0x20                  	// #32
  427324:	bl	44a010 <argp_parse@@Base+0xf964>
  427328:	ldr	x1, [x20, #8]
  42732c:	mov	x19, x0
  427330:	cbz	x1, 427340 <wcrtomb@plt+0x22850>
  427334:	add	x0, x19, #0x20
  427338:	bl	4047f0 <strcpy@plt>
  42733c:	b	427344 <wcrtomb@plt+0x22854>
  427340:	mov	x0, xzr
  427344:	str	x0, [x19, #8]
  427348:	ldr	w8, [x20]
  42734c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427350:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427354:	ldr	x0, [x21, #3896]
  427358:	str	w8, [x19]
  42735c:	ldr	x8, [x20, #16]
  427360:	ldr	x20, [x9, #2040]
  427364:	str	x19, [x9, #2040]
  427368:	stp	x8, x20, [x19, #16]
  42736c:	cbz	x0, 42738c <wcrtomb@plt+0x2289c>
  427370:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427374:	add	x1, x1, #0xe84
  427378:	bl	404610 <strcmp@plt>
  42737c:	cbz	w0, 42738c <wcrtomb@plt+0x2289c>
  427380:	ldr	w8, [x20]
  427384:	cmp	w8, #0x1
  427388:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  42738c:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427390:	add	x8, x8, #0xe84
  427394:	mov	w0, wzr
  427398:	str	x8, [x21, #3896]
  42739c:	b	4276bc <wcrtomb@plt+0x22bcc>
  4273a0:	mov	w8, #0x1                   	// #1
  4273a4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4273a8:	mov	w0, wzr
  4273ac:	str	w8, [x9, #3548]
  4273b0:	b	4276bc <wcrtomb@plt+0x22bcc>
  4273b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4273b8:	mov	w9, #0xa                   	// #10
  4273bc:	mov	w0, wzr
  4273c0:	str	w9, [x8, #3848]
  4273c4:	b	4276bc <wcrtomb@plt+0x22bcc>
  4273c8:	mov	w0, #0x20                  	// #32
  4273cc:	bl	44a010 <argp_parse@@Base+0xf964>
  4273d0:	ldr	x1, [x20, #8]
  4273d4:	mov	x19, x0
  4273d8:	cbz	x1, 4273e8 <wcrtomb@plt+0x228f8>
  4273dc:	add	x0, x19, #0x20
  4273e0:	bl	4047f0 <strcpy@plt>
  4273e4:	b	4273ec <wcrtomb@plt+0x228fc>
  4273e8:	mov	x0, xzr
  4273ec:	str	x0, [x19, #8]
  4273f0:	ldr	w8, [x20]
  4273f4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4273f8:	str	w8, [x19]
  4273fc:	ldr	x10, [x20, #16]
  427400:	ldr	x8, [x9, #2112]
  427404:	str	x19, [x9, #2112]
  427408:	stp	x10, x8, [x19, #16]
  42740c:	cbz	x8, 427448 <wcrtomb@plt+0x22958>
  427410:	ldr	w9, [x20]
  427414:	ldr	w10, [x8]
  427418:	cmp	w9, w10
  42741c:	b.ne	427448 <wcrtomb@plt+0x22958>  // b.any
  427420:	cmp	w9, #0x1
  427424:	b.eq	427438 <wcrtomb@plt+0x22948>  // b.none
  427428:	ldr	x0, [x20, #8]
  42742c:	ldr	x1, [x8, #8]
  427430:	bl	404610 <strcmp@plt>
  427434:	cbnz	w0, 427448 <wcrtomb@plt+0x22958>
  427438:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42743c:	ldr	w8, [x8, #3744]
  427440:	cmp	w8, #0x2
  427444:	b.ne	4281bc <wcrtomb@plt+0x236cc>  // b.any
  427448:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42744c:	mov	w9, #0x2                   	// #2
  427450:	mov	w0, wzr
  427454:	str	w9, [x8, #3744]
  427458:	b	4276bc <wcrtomb@plt+0x22bcc>
  42745c:	mov	w0, #0x20                  	// #32
  427460:	bl	44a010 <argp_parse@@Base+0xf964>
  427464:	ldr	x1, [x20, #8]
  427468:	mov	x19, x0
  42746c:	cbz	x1, 42747c <wcrtomb@plt+0x2298c>
  427470:	add	x0, x19, #0x20
  427474:	bl	4047f0 <strcpy@plt>
  427478:	b	427480 <wcrtomb@plt+0x22990>
  42747c:	mov	x0, xzr
  427480:	str	x0, [x19, #8]
  427484:	ldr	w8, [x20]
  427488:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42748c:	str	w8, [x19]
  427490:	ldr	x10, [x20, #16]
  427494:	ldr	x8, [x9, #2112]
  427498:	str	x19, [x9, #2112]
  42749c:	stp	x10, x8, [x19, #16]
  4274a0:	cbz	x8, 4274dc <wcrtomb@plt+0x229ec>
  4274a4:	ldr	w9, [x20]
  4274a8:	ldr	w10, [x8]
  4274ac:	cmp	w9, w10
  4274b0:	b.ne	4274dc <wcrtomb@plt+0x229ec>  // b.any
  4274b4:	cmp	w9, #0x1
  4274b8:	b.eq	4274cc <wcrtomb@plt+0x229dc>  // b.none
  4274bc:	ldr	x0, [x20, #8]
  4274c0:	ldr	x1, [x8, #8]
  4274c4:	bl	404610 <strcmp@plt>
  4274c8:	cbnz	w0, 4274dc <wcrtomb@plt+0x229ec>
  4274cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4274d0:	ldr	w8, [x8, #3744]
  4274d4:	cmp	w8, #0x1
  4274d8:	b.ne	4281d4 <wcrtomb@plt+0x236e4>  // b.any
  4274dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4274e0:	mov	w9, #0x1                   	// #1
  4274e4:	mov	w0, wzr
  4274e8:	str	w9, [x8, #3744]
  4274ec:	b	4276bc <wcrtomb@plt+0x22bcc>
  4274f0:	mov	w0, #0x20                  	// #32
  4274f4:	bl	44a010 <argp_parse@@Base+0xf964>
  4274f8:	ldr	x1, [x21, #8]
  4274fc:	mov	x19, x0
  427500:	cbz	x1, 427514 <wcrtomb@plt+0x22a24>
  427504:	add	x20, x19, #0x20
  427508:	mov	x0, x20
  42750c:	bl	4047f0 <strcpy@plt>
  427510:	b	427518 <wcrtomb@plt+0x22a28>
  427514:	mov	x20, xzr
  427518:	str	x20, [x19, #8]
  42751c:	ldr	w8, [x21]
  427520:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427524:	ldr	x11, [x9, #2072]
  427528:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42752c:	str	w8, [x19]
  427530:	ldr	x8, [x21, #16]
  427534:	mov	w12, #0x1                   	// #1
  427538:	mov	w0, wzr
  42753c:	str	x19, [x9, #2072]
  427540:	stp	x8, x11, [x19, #16]
  427544:	strb	w12, [x10, #3834]
  427548:	b	4276bc <wcrtomb@plt+0x22bcc>
  42754c:	mov	w0, #0x20                  	// #32
  427550:	bl	44a010 <argp_parse@@Base+0xf964>
  427554:	ldr	x1, [x21, #8]
  427558:	mov	x20, x0
  42755c:	cbz	x1, 42756c <wcrtomb@plt+0x22a7c>
  427560:	add	x0, x20, #0x20
  427564:	bl	4047f0 <strcpy@plt>
  427568:	b	427570 <wcrtomb@plt+0x22a80>
  42756c:	mov	x0, xzr
  427570:	str	x0, [x20, #8]
  427574:	ldr	w8, [x21]
  427578:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42757c:	ldr	x10, [x9, #2048]
  427580:	str	w8, [x20]
  427584:	ldr	x8, [x21, #16]
  427588:	str	x20, [x9, #2048]
  42758c:	stp	x8, x10, [x20, #16]
  427590:	cbz	x19, 4275c4 <wcrtomb@plt+0x22ad4>
  427594:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  427598:	add	x4, x4, #0xb36
  42759c:	add	x3, sp, #0x38
  4275a0:	mov	w2, #0xa                   	// #10
  4275a4:	mov	x0, x19
  4275a8:	mov	x1, xzr
  4275ac:	bl	44a3ac <argp_parse@@Base+0xfd00>
  4275b0:	cbnz	w0, 42817c <wcrtomb@plt+0x2368c>
  4275b4:	ldr	x8, [sp, #56]
  4275b8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4275bc:	str	x8, [x9, #3752]
  4275c0:	b	4276bc <wcrtomb@plt+0x22bcc>
  4275c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4275c8:	mov	w9, #0x1                   	// #1
  4275cc:	mov	w0, wzr
  4275d0:	str	x9, [x8, #3752]
  4275d4:	b	4276bc <wcrtomb@plt+0x22bcc>
  4275d8:	mov	w0, #0x20                  	// #32
  4275dc:	bl	44a010 <argp_parse@@Base+0xf964>
  4275e0:	ldr	x1, [x20, #8]
  4275e4:	mov	x19, x0
  4275e8:	cbz	x1, 4275f8 <wcrtomb@plt+0x22b08>
  4275ec:	add	x0, x19, #0x20
  4275f0:	bl	4047f0 <strcpy@plt>
  4275f4:	b	4275fc <wcrtomb@plt+0x22b0c>
  4275f8:	mov	x0, xzr
  4275fc:	str	x0, [x19, #8]
  427600:	ldr	w8, [x20]
  427604:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427608:	str	w8, [x19]
  42760c:	ldr	x10, [x20, #16]
  427610:	ldr	x8, [x9, #2112]
  427614:	str	x19, [x9, #2112]
  427618:	stp	x10, x8, [x19, #16]
  42761c:	cbz	x8, 427658 <wcrtomb@plt+0x22b68>
  427620:	ldr	w9, [x20]
  427624:	ldr	w10, [x8]
  427628:	cmp	w9, w10
  42762c:	b.ne	427658 <wcrtomb@plt+0x22b68>  // b.any
  427630:	cmp	w9, #0x1
  427634:	b.eq	427648 <wcrtomb@plt+0x22b58>  // b.none
  427638:	ldr	x0, [x20, #8]
  42763c:	ldr	x1, [x8, #8]
  427640:	bl	404610 <strcmp@plt>
  427644:	cbnz	w0, 427658 <wcrtomb@plt+0x22b68>
  427648:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42764c:	ldr	w8, [x8, #3744]
  427650:	cmp	w8, #0x6
  427654:	b.ne	4281ec <wcrtomb@plt+0x236fc>  // b.any
  427658:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42765c:	mov	w9, #0x6                   	// #6
  427660:	mov	w0, wzr
  427664:	str	w9, [x8, #3744]
  427668:	b	4276bc <wcrtomb@plt+0x22bcc>
  42766c:	mov	w0, #0x20                  	// #32
  427670:	bl	44a010 <argp_parse@@Base+0xf964>
  427674:	ldr	x1, [x21, #8]
  427678:	mov	x20, x0
  42767c:	cbz	x1, 42768c <wcrtomb@plt+0x22b9c>
  427680:	add	x0, x20, #0x20
  427684:	bl	4047f0 <strcpy@plt>
  427688:	b	427690 <wcrtomb@plt+0x22ba0>
  42768c:	mov	x0, xzr
  427690:	str	x0, [x20, #8]
  427694:	ldr	w8, [x21]
  427698:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42769c:	ldr	x10, [x9, #2080]
  4276a0:	mov	x0, x19
  4276a4:	str	w8, [x20]
  4276a8:	ldr	x8, [x21, #16]
  4276ac:	str	x20, [x9, #2080]
  4276b0:	stp	x8, x10, [x20, #16]
  4276b4:	bl	41ea34 <wcrtomb@plt+0x19f44>
  4276b8:	mov	w0, wzr
  4276bc:	ldp	x20, x19, [sp, #224]
  4276c0:	ldp	x22, x21, [sp, #208]
  4276c4:	ldp	x24, x23, [sp, #192]
  4276c8:	ldp	x26, x25, [sp, #176]
  4276cc:	ldp	x28, x27, [sp, #160]
  4276d0:	ldp	x29, x30, [sp, #144]
  4276d4:	add	sp, sp, #0xf0
  4276d8:	ret
  4276dc:	mov	w0, #0x20                  	// #32
  4276e0:	bl	44a010 <argp_parse@@Base+0xf964>
  4276e4:	ldr	x1, [x20, #8]
  4276e8:	mov	x19, x0
  4276ec:	cbz	x1, 4276fc <wcrtomb@plt+0x22c0c>
  4276f0:	add	x0, x19, #0x20
  4276f4:	bl	4047f0 <strcpy@plt>
  4276f8:	b	427700 <wcrtomb@plt+0x22c10>
  4276fc:	mov	x0, xzr
  427700:	str	x0, [x19, #8]
  427704:	ldr	w8, [x20]
  427708:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42770c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427710:	ldr	x0, [x21, #3896]
  427714:	str	w8, [x19]
  427718:	ldr	x8, [x20, #16]
  42771c:	ldr	x20, [x9, #2040]
  427720:	str	x19, [x9, #2040]
  427724:	stp	x8, x20, [x19, #16]
  427728:	cbz	x0, 427748 <wcrtomb@plt+0x22c58>
  42772c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  427730:	add	x1, x1, #0x4f7
  427734:	bl	404610 <strcmp@plt>
  427738:	cbz	w0, 427748 <wcrtomb@plt+0x22c58>
  42773c:	ldr	w8, [x20]
  427740:	cmp	w8, #0x1
  427744:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  427748:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42774c:	add	x8, x8, #0x4f7
  427750:	mov	w0, wzr
  427754:	str	x8, [x21, #3896]
  427758:	b	4276bc <wcrtomb@plt+0x22bcc>
  42775c:	mov	w0, #0x20                  	// #32
  427760:	bl	44a010 <argp_parse@@Base+0xf964>
  427764:	ldr	x1, [x20, #8]
  427768:	mov	x19, x0
  42776c:	cbz	x1, 42777c <wcrtomb@plt+0x22c8c>
  427770:	add	x0, x19, #0x20
  427774:	bl	4047f0 <strcpy@plt>
  427778:	b	427780 <wcrtomb@plt+0x22c90>
  42777c:	mov	x0, xzr
  427780:	str	x0, [x19, #8]
  427784:	ldr	w8, [x20]
  427788:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42778c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427790:	ldr	x0, [x21, #3896]
  427794:	str	w8, [x19]
  427798:	ldr	x8, [x20, #16]
  42779c:	ldr	x20, [x9, #2040]
  4277a0:	str	x19, [x9, #2040]
  4277a4:	stp	x8, x20, [x19, #16]
  4277a8:	cbz	x0, 4277c8 <wcrtomb@plt+0x22cd8>
  4277ac:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4277b0:	add	x1, x1, #0xe7c
  4277b4:	bl	404610 <strcmp@plt>
  4277b8:	cbz	w0, 4277c8 <wcrtomb@plt+0x22cd8>
  4277bc:	ldr	w8, [x20]
  4277c0:	cmp	w8, #0x1
  4277c4:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  4277c8:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4277cc:	add	x8, x8, #0xe7c
  4277d0:	mov	w0, wzr
  4277d4:	str	x8, [x21, #3896]
  4277d8:	b	4276bc <wcrtomb@plt+0x22bcc>
  4277dc:	mov	w0, #0x20                  	// #32
  4277e0:	bl	44a010 <argp_parse@@Base+0xf964>
  4277e4:	ldr	x1, [x20, #8]
  4277e8:	mov	x19, x0
  4277ec:	cbz	x1, 4277fc <wcrtomb@plt+0x22d0c>
  4277f0:	add	x0, x19, #0x20
  4277f4:	bl	4047f0 <strcpy@plt>
  4277f8:	b	427800 <wcrtomb@plt+0x22d10>
  4277fc:	mov	x0, xzr
  427800:	str	x0, [x19, #8]
  427804:	ldr	w8, [x20]
  427808:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42780c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427810:	ldr	x0, [x21, #3896]
  427814:	str	w8, [x19]
  427818:	ldr	x8, [x20, #16]
  42781c:	ldr	x20, [x9, #2040]
  427820:	str	x19, [x9, #2040]
  427824:	stp	x8, x20, [x19, #16]
  427828:	cbz	x0, 427848 <wcrtomb@plt+0x22d58>
  42782c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427830:	add	x1, x1, #0xe8b
  427834:	bl	404610 <strcmp@plt>
  427838:	cbz	w0, 427848 <wcrtomb@plt+0x22d58>
  42783c:	ldr	w8, [x20]
  427840:	cmp	w8, #0x1
  427844:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  427848:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  42784c:	add	x8, x8, #0xe8b
  427850:	mov	w0, wzr
  427854:	str	x8, [x21, #3896]
  427858:	b	4276bc <wcrtomb@plt+0x22bcc>
  42785c:	mov	w0, #0x20                  	// #32
  427860:	bl	44a010 <argp_parse@@Base+0xf964>
  427864:	ldr	x1, [x21, #8]
  427868:	mov	x20, x0
  42786c:	cbz	x1, 42787c <wcrtomb@plt+0x22d8c>
  427870:	add	x0, x20, #0x20
  427874:	bl	4047f0 <strcpy@plt>
  427878:	b	427880 <wcrtomb@plt+0x22d90>
  42787c:	mov	x0, xzr
  427880:	str	x0, [x20, #8]
  427884:	ldr	w8, [x21]
  427888:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42788c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427890:	ldr	x0, [x22, #3896]
  427894:	str	w8, [x20]
  427898:	ldr	x8, [x21, #16]
  42789c:	ldr	x21, [x9, #2040]
  4278a0:	str	x20, [x9, #2040]
  4278a4:	stp	x8, x21, [x20, #16]
  4278a8:	cbz	x0, 4278c4 <wcrtomb@plt+0x22dd4>
  4278ac:	mov	x1, x19
  4278b0:	bl	404610 <strcmp@plt>
  4278b4:	cbz	w0, 4278c4 <wcrtomb@plt+0x22dd4>
  4278b8:	ldr	w8, [x21]
  4278bc:	cmp	w8, #0x1
  4278c0:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  4278c4:	mov	w0, wzr
  4278c8:	str	x19, [x22, #3896]
  4278cc:	b	4276bc <wcrtomb@plt+0x22bcc>
  4278d0:	mov	w0, #0x20                  	// #32
  4278d4:	bl	44a010 <argp_parse@@Base+0xf964>
  4278d8:	ldr	x1, [x21, #8]
  4278dc:	mov	x19, x0
  4278e0:	cbz	x1, 4278f4 <wcrtomb@plt+0x22e04>
  4278e4:	add	x20, x19, #0x20
  4278e8:	mov	x0, x20
  4278ec:	bl	4047f0 <strcpy@plt>
  4278f0:	b	4278f8 <wcrtomb@plt+0x22e08>
  4278f4:	mov	x20, xzr
  4278f8:	str	x20, [x19, #8]
  4278fc:	ldr	w8, [x21]
  427900:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427904:	ldr	x11, [x9, #2104]
  427908:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42790c:	str	w8, [x19]
  427910:	ldr	x8, [x21, #16]
  427914:	mov	w12, #0x1                   	// #1
  427918:	mov	w0, wzr
  42791c:	str	x19, [x9, #2104]
  427920:	stp	x8, x11, [x19, #16]
  427924:	strb	w12, [x10, #3944]
  427928:	b	4276bc <wcrtomb@plt+0x22bcc>
  42792c:	mov	w0, #0x20                  	// #32
  427930:	bl	44a010 <argp_parse@@Base+0xf964>
  427934:	ldr	x1, [x20, #8]
  427938:	mov	x19, x0
  42793c:	cbz	x1, 42794c <wcrtomb@plt+0x22e5c>
  427940:	add	x0, x19, #0x20
  427944:	bl	4047f0 <strcpy@plt>
  427948:	b	427950 <wcrtomb@plt+0x22e60>
  42794c:	mov	x0, xzr
  427950:	str	x0, [x19, #8]
  427954:	ldr	w8, [x20]
  427958:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42795c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427960:	ldr	x0, [x21, #3896]
  427964:	str	w8, [x19]
  427968:	ldr	x8, [x20, #16]
  42796c:	ldr	x20, [x9, #2040]
  427970:	str	x19, [x9, #2040]
  427974:	stp	x8, x20, [x19, #16]
  427978:	cbz	x0, 427998 <wcrtomb@plt+0x22ea8>
  42797c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427980:	add	x1, x1, #0x4a6
  427984:	bl	404610 <strcmp@plt>
  427988:	cbz	w0, 427998 <wcrtomb@plt+0x22ea8>
  42798c:	ldr	w8, [x20]
  427990:	cmp	w8, #0x1
  427994:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  427998:	adrp	x8, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42799c:	add	x8, x8, #0x4a6
  4279a0:	mov	w0, wzr
  4279a4:	str	x8, [x21, #3896]
  4279a8:	b	4276bc <wcrtomb@plt+0x22bcc>
  4279ac:	mov	w0, #0x20                  	// #32
  4279b0:	bl	44a010 <argp_parse@@Base+0xf964>
  4279b4:	ldr	x1, [x20, #8]
  4279b8:	mov	x19, x0
  4279bc:	cbz	x1, 4279cc <wcrtomb@plt+0x22edc>
  4279c0:	add	x0, x19, #0x20
  4279c4:	bl	4047f0 <strcpy@plt>
  4279c8:	b	4279d0 <wcrtomb@plt+0x22ee0>
  4279cc:	mov	x0, xzr
  4279d0:	str	x0, [x19, #8]
  4279d4:	ldr	w8, [x20]
  4279d8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4279dc:	str	w8, [x19]
  4279e0:	ldr	x10, [x20, #16]
  4279e4:	ldr	x8, [x9, #2112]
  4279e8:	str	x19, [x9, #2112]
  4279ec:	stp	x10, x8, [x19, #16]
  4279f0:	cbz	x8, 427a2c <wcrtomb@plt+0x22f3c>
  4279f4:	ldr	w9, [x20]
  4279f8:	ldr	w10, [x8]
  4279fc:	cmp	w9, w10
  427a00:	b.ne	427a2c <wcrtomb@plt+0x22f3c>  // b.any
  427a04:	cmp	w9, #0x1
  427a08:	b.eq	427a1c <wcrtomb@plt+0x22f2c>  // b.none
  427a0c:	ldr	x0, [x20, #8]
  427a10:	ldr	x1, [x8, #8]
  427a14:	bl	404610 <strcmp@plt>
  427a18:	cbnz	w0, 427a2c <wcrtomb@plt+0x22f3c>
  427a1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427a20:	ldr	w8, [x8, #3744]
  427a24:	cmp	w8, #0x4
  427a28:	b.ne	428204 <wcrtomb@plt+0x23714>  // b.any
  427a2c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427a30:	mov	w9, #0x4                   	// #4
  427a34:	mov	w0, wzr
  427a38:	str	w9, [x8, #3744]
  427a3c:	b	4276bc <wcrtomb@plt+0x22bcc>
  427a40:	mov	w0, #0x20                  	// #32
  427a44:	bl	44a010 <argp_parse@@Base+0xf964>
  427a48:	ldr	x1, [x21, #8]
  427a4c:	mov	x20, x0
  427a50:	cbz	x1, 427a60 <wcrtomb@plt+0x22f70>
  427a54:	add	x0, x20, #0x20
  427a58:	bl	4047f0 <strcpy@plt>
  427a5c:	b	427a64 <wcrtomb@plt+0x22f74>
  427a60:	mov	x0, xzr
  427a64:	str	x0, [x20, #8]
  427a68:	ldr	w9, [x21]
  427a6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427a70:	ldr	x13, [x8, #2056]
  427a74:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427a78:	str	w9, [x20]
  427a7c:	ldr	x9, [x21, #16]
  427a80:	adrp	x11, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427a84:	mov	w12, #0x1                   	// #1
  427a88:	str	x20, [x8, #2056]
  427a8c:	str	x19, [x10, #3824]
  427a90:	stp	x9, x13, [x20, #16]
  427a94:	str	w12, [x11, #3964]
  427a98:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427a9c:	mov	w9, #0x1                   	// #1
  427aa0:	mov	w0, wzr
  427aa4:	strb	w9, [x8, #3025]
  427aa8:	b	4276bc <wcrtomb@plt+0x22bcc>
  427aac:	mov	w0, #0x20                  	// #32
  427ab0:	bl	44a010 <argp_parse@@Base+0xf964>
  427ab4:	ldr	x1, [x20, #8]
  427ab8:	mov	x19, x0
  427abc:	cbz	x1, 427acc <wcrtomb@plt+0x22fdc>
  427ac0:	add	x0, x19, #0x20
  427ac4:	bl	4047f0 <strcpy@plt>
  427ac8:	b	427ad0 <wcrtomb@plt+0x22fe0>
  427acc:	mov	x0, xzr
  427ad0:	str	x0, [x19, #8]
  427ad4:	ldr	w8, [x20]
  427ad8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427adc:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427ae0:	ldr	x0, [x21, #3896]
  427ae4:	str	w8, [x19]
  427ae8:	ldr	x8, [x20, #16]
  427aec:	ldr	x20, [x9, #2040]
  427af0:	str	x19, [x9, #2040]
  427af4:	stp	x8, x20, [x19, #16]
  427af8:	cbz	x0, 427b18 <wcrtomb@plt+0x23028>
  427afc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427b00:	add	x1, x1, #0x416
  427b04:	bl	404610 <strcmp@plt>
  427b08:	cbz	w0, 427b18 <wcrtomb@plt+0x23028>
  427b0c:	ldr	w8, [x20]
  427b10:	cmp	w8, #0x1
  427b14:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  427b18:	adrp	x8, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427b1c:	add	x8, x8, #0x416
  427b20:	mov	w0, wzr
  427b24:	str	x8, [x21, #3896]
  427b28:	b	4276bc <wcrtomb@plt+0x22bcc>
  427b2c:	mov	w0, #0x20                  	// #32
  427b30:	bl	44a010 <argp_parse@@Base+0xf964>
  427b34:	ldr	x1, [x20, #8]
  427b38:	mov	x19, x0
  427b3c:	cbz	x1, 427b4c <wcrtomb@plt+0x2305c>
  427b40:	add	x0, x19, #0x20
  427b44:	bl	4047f0 <strcpy@plt>
  427b48:	b	427b50 <wcrtomb@plt+0x23060>
  427b4c:	mov	x0, xzr
  427b50:	str	x0, [x19, #8]
  427b54:	ldr	w8, [x20]
  427b58:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427b5c:	str	w8, [x19]
  427b60:	ldr	x10, [x20, #16]
  427b64:	ldr	x8, [x9, #2112]
  427b68:	str	x19, [x9, #2112]
  427b6c:	stp	x10, x8, [x19, #16]
  427b70:	cbz	x8, 427bac <wcrtomb@plt+0x230bc>
  427b74:	ldr	w9, [x20]
  427b78:	ldr	w10, [x8]
  427b7c:	cmp	w9, w10
  427b80:	b.ne	427bac <wcrtomb@plt+0x230bc>  // b.any
  427b84:	cmp	w9, #0x1
  427b88:	b.eq	427b9c <wcrtomb@plt+0x230ac>  // b.none
  427b8c:	ldr	x0, [x20, #8]
  427b90:	ldr	x1, [x8, #8]
  427b94:	bl	404610 <strcmp@plt>
  427b98:	cbnz	w0, 427bac <wcrtomb@plt+0x230bc>
  427b9c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427ba0:	ldr	w8, [x8, #3744]
  427ba4:	cmp	w8, #0x3
  427ba8:	b.ne	42821c <wcrtomb@plt+0x2372c>  // b.any
  427bac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427bb0:	mov	w9, #0x3                   	// #3
  427bb4:	mov	w0, wzr
  427bb8:	str	w9, [x8, #3744]
  427bbc:	b	4276bc <wcrtomb@plt+0x22bcc>
  427bc0:	mov	w0, #0x20                  	// #32
  427bc4:	bl	44a010 <argp_parse@@Base+0xf964>
  427bc8:	ldr	x1, [x20, #8]
  427bcc:	mov	x19, x0
  427bd0:	cbz	x1, 427be0 <wcrtomb@plt+0x230f0>
  427bd4:	add	x0, x19, #0x20
  427bd8:	bl	4047f0 <strcpy@plt>
  427bdc:	b	427be4 <wcrtomb@plt+0x230f4>
  427be0:	mov	x0, xzr
  427be4:	str	x0, [x19, #8]
  427be8:	ldr	w8, [x20]
  427bec:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427bf0:	str	w8, [x19]
  427bf4:	ldr	x10, [x20, #16]
  427bf8:	ldr	x8, [x9, #2112]
  427bfc:	str	x19, [x9, #2112]
  427c00:	stp	x10, x8, [x19, #16]
  427c04:	cbz	x8, 427c3c <wcrtomb@plt+0x2314c>
  427c08:	ldr	w9, [x20]
  427c0c:	ldr	w10, [x8]
  427c10:	cmp	w9, w10
  427c14:	b.ne	427c3c <wcrtomb@plt+0x2314c>  // b.any
  427c18:	cmp	w9, #0x1
  427c1c:	b.eq	427c30 <wcrtomb@plt+0x23140>  // b.none
  427c20:	ldr	x0, [x20, #8]
  427c24:	ldr	x1, [x8, #8]
  427c28:	bl	404610 <strcmp@plt>
  427c2c:	cbnz	w0, 427c3c <wcrtomb@plt+0x2314c>
  427c30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427c34:	ldr	w8, [x8, #3744]
  427c38:	cbnz	w8, 428234 <wcrtomb@plt+0x23744>
  427c3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427c40:	mov	w0, wzr
  427c44:	str	wzr, [x8, #3744]
  427c48:	b	4276bc <wcrtomb@plt+0x22bcc>
  427c4c:	mov	w0, #0x20                  	// #32
  427c50:	bl	44a010 <argp_parse@@Base+0xf964>
  427c54:	ldr	x1, [x21, #8]
  427c58:	mov	x19, x0
  427c5c:	cbz	x1, 427c70 <wcrtomb@plt+0x23180>
  427c60:	add	x20, x19, #0x20
  427c64:	mov	x0, x20
  427c68:	bl	4047f0 <strcpy@plt>
  427c6c:	b	427c74 <wcrtomb@plt+0x23184>
  427c70:	mov	x20, xzr
  427c74:	str	x20, [x19, #8]
  427c78:	ldr	w8, [x21]
  427c7c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427c80:	ldr	x11, [x9, #2088]
  427c84:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427c88:	str	w8, [x19]
  427c8c:	ldr	x8, [x21, #16]
  427c90:	mov	w12, #0x1                   	// #1
  427c94:	mov	w0, wzr
  427c98:	str	x19, [x9, #2088]
  427c9c:	stp	x8, x11, [x19, #16]
  427ca0:	strb	w12, [x10, #3632]
  427ca4:	b	4276bc <wcrtomb@plt+0x22bcc>
  427ca8:	mov	w0, #0x20                  	// #32
  427cac:	bl	44a010 <argp_parse@@Base+0xf964>
  427cb0:	ldr	x1, [x20, #8]
  427cb4:	mov	x19, x0
  427cb8:	cbz	x1, 427cc8 <wcrtomb@plt+0x231d8>
  427cbc:	add	x0, x19, #0x20
  427cc0:	bl	4047f0 <strcpy@plt>
  427cc4:	b	427ccc <wcrtomb@plt+0x231dc>
  427cc8:	mov	x0, xzr
  427ccc:	str	x0, [x19, #8]
  427cd0:	ldr	w8, [x20]
  427cd4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427cd8:	str	w8, [x19]
  427cdc:	ldr	x10, [x20, #16]
  427ce0:	ldr	x8, [x9, #2112]
  427ce4:	str	x19, [x9, #2112]
  427ce8:	stp	x10, x8, [x19, #16]
  427cec:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427cf0:	cbz	x8, 427d28 <wcrtomb@plt+0x23238>
  427cf4:	ldr	w9, [x20]
  427cf8:	ldr	w10, [x8]
  427cfc:	cmp	w9, w10
  427d00:	b.ne	427d28 <wcrtomb@plt+0x23238>  // b.any
  427d04:	cmp	w9, #0x1
  427d08:	b.eq	427d1c <wcrtomb@plt+0x2322c>  // b.none
  427d0c:	ldr	x0, [x20, #8]
  427d10:	ldr	x1, [x8, #8]
  427d14:	bl	404610 <strcmp@plt>
  427d18:	cbnz	w0, 427d28 <wcrtomb@plt+0x23238>
  427d1c:	ldr	w8, [x19, #3744]
  427d20:	cmp	w8, #0x5
  427d24:	b.ne	42824c <wcrtomb@plt+0x2375c>  // b.any
  427d28:	mov	w8, #0x5                   	// #5
  427d2c:	mov	w0, wzr
  427d30:	str	w8, [x19, #3744]
  427d34:	b	4276bc <wcrtomb@plt+0x22bcc>
  427d38:	mov	w0, #0x20                  	// #32
  427d3c:	bl	44a010 <argp_parse@@Base+0xf964>
  427d40:	ldr	x1, [x20, #8]
  427d44:	mov	x19, x0
  427d48:	cbz	x1, 427d58 <wcrtomb@plt+0x23268>
  427d4c:	add	x0, x19, #0x20
  427d50:	bl	4047f0 <strcpy@plt>
  427d54:	b	427d5c <wcrtomb@plt+0x2326c>
  427d58:	mov	x0, xzr
  427d5c:	str	x0, [x19, #8]
  427d60:	ldr	w8, [x20]
  427d64:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427d68:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427d6c:	ldr	x0, [x21, #3896]
  427d70:	str	w8, [x19]
  427d74:	ldr	x8, [x20, #16]
  427d78:	ldr	x20, [x9, #2040]
  427d7c:	str	x19, [x9, #2040]
  427d80:	stp	x8, x20, [x19, #16]
  427d84:	cbz	x0, 427da4 <wcrtomb@plt+0x232b4>
  427d88:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427d8c:	add	x1, x1, #0xe95
  427d90:	bl	404610 <strcmp@plt>
  427d94:	cbz	w0, 427da4 <wcrtomb@plt+0x232b4>
  427d98:	ldr	w8, [x20]
  427d9c:	cmp	w8, #0x1
  427da0:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  427da4:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427da8:	add	x8, x8, #0xe95
  427dac:	mov	w0, wzr
  427db0:	str	x8, [x21, #3896]
  427db4:	b	4276bc <wcrtomb@plt+0x22bcc>
  427db8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427dbc:	ldr	x0, [x8, #3520]
  427dc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427dc4:	mov	w9, #0xffffffff            	// #-1
  427dc8:	str	w9, [x8, #3696]
  427dcc:	cbz	x0, 4276bc <wcrtomb@plt+0x22bcc>
  427dd0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427dd4:	add	x1, x1, #0xe70
  427dd8:	bl	41d42c <wcrtomb@plt+0x1893c>
  427ddc:	b	4276b8 <wcrtomb@plt+0x22bc8>
  427de0:	mov	w0, #0x20                  	// #32
  427de4:	bl	44a010 <argp_parse@@Base+0xf964>
  427de8:	ldr	x1, [x22, #8]
  427dec:	mov	x20, x0
  427df0:	cbz	x1, 427e04 <wcrtomb@plt+0x23314>
  427df4:	add	x21, x20, #0x20
  427df8:	mov	x0, x21
  427dfc:	bl	4047f0 <strcpy@plt>
  427e00:	b	427e08 <wcrtomb@plt+0x23318>
  427e04:	mov	x21, xzr
  427e08:	str	x21, [x20, #8]
  427e0c:	ldr	w9, [x22]
  427e10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427e14:	ldr	x13, [x8, #2096]
  427e18:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427e1c:	str	w9, [x20]
  427e20:	ldr	x9, [x22, #16]
  427e24:	mov	w11, #0x1                   	// #1
  427e28:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427e2c:	mov	w0, wzr
  427e30:	str	x20, [x8, #2096]
  427e34:	strb	w11, [x10, #3835]
  427e38:	stp	x9, x13, [x20, #16]
  427e3c:	str	x19, [x12, #3560]
  427e40:	b	4276bc <wcrtomb@plt+0x22bcc>
  427e44:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427e48:	mov	w9, #0x1                   	// #1
  427e4c:	mov	w0, wzr
  427e50:	strb	w9, [x8, #3689]
  427e54:	b	4276bc <wcrtomb@plt+0x22bcc>
  427e58:	mov	w0, #0x20                  	// #32
  427e5c:	bl	44a010 <argp_parse@@Base+0xf964>
  427e60:	ldr	x1, [x20, #8]
  427e64:	mov	x19, x0
  427e68:	cbz	x1, 427e78 <wcrtomb@plt+0x23388>
  427e6c:	add	x0, x19, #0x20
  427e70:	bl	4047f0 <strcpy@plt>
  427e74:	b	427e7c <wcrtomb@plt+0x2338c>
  427e78:	mov	x0, xzr
  427e7c:	str	x0, [x19, #8]
  427e80:	ldr	w8, [x20]
  427e84:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427e88:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427e8c:	ldr	x0, [x21, #3896]
  427e90:	str	w8, [x19]
  427e94:	ldr	x8, [x20, #16]
  427e98:	ldr	x20, [x9, #2040]
  427e9c:	str	x19, [x9, #2040]
  427ea0:	stp	x8, x20, [x19, #16]
  427ea4:	cbz	x0, 427ec4 <wcrtomb@plt+0x233d4>
  427ea8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427eac:	add	x1, x1, #0xe9c
  427eb0:	bl	404610 <strcmp@plt>
  427eb4:	cbz	w0, 427ec4 <wcrtomb@plt+0x233d4>
  427eb8:	ldr	w8, [x20]
  427ebc:	cmp	w8, #0x1
  427ec0:	b.eq	427fec <wcrtomb@plt+0x234fc>  // b.none
  427ec4:	adrp	x8, 460000 <_obstack_memory_used@@Base+0x14e3c>
  427ec8:	add	x8, x8, #0xe9c
  427ecc:	mov	w0, wzr
  427ed0:	str	x8, [x21, #3896]
  427ed4:	b	4276bc <wcrtomb@plt+0x22bcc>
  427ed8:	ldr	d0, [sp, #56]
  427edc:	mov	x8, #0x4090000000000000    	// #4652218415073722368
  427ee0:	fmov	d1, x8
  427ee4:	ucvtf	d0, d0
  427ee8:	fmul	d0, d0, d1
  427eec:	b	426dc0 <wcrtomb@plt+0x222d0>
  427ef0:	cbz	x9, 427f00 <wcrtomb@plt+0x23410>
  427ef4:	lsr	x10, x9, #60
  427ef8:	cbz	x10, 427f04 <wcrtomb@plt+0x23414>
  427efc:	bl	40eb80 <wcrtomb@plt+0xa090>
  427f00:	mov	w9, #0x10                  	// #16
  427f04:	lsl	x1, x9, #3
  427f08:	str	x9, [x8, #1984]
  427f0c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  427f10:	ldr	x9, [x20, #3840]
  427f14:	mov	x8, x0
  427f18:	str	x0, [x21, #3680]
  427f1c:	add	x10, x9, #0x1
  427f20:	mov	w0, wzr
  427f24:	str	x10, [x20, #3840]
  427f28:	str	x19, [x8, x9, lsl #3]
  427f2c:	b	4276bc <wcrtomb@plt+0x22bcc>
  427f30:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427f34:	mov	x22, x2
  427f38:	add	x1, x1, #0xece
  427f3c:	mov	w2, #0x5                   	// #5
  427f40:	mov	x0, xzr
  427f44:	bl	4048b0 <dcgettext@plt>
  427f48:	mov	x1, x0
  427f4c:	mov	x0, x22
  427f50:	bl	4389e4 <argp_error@@Base>
  427f54:	mov	w0, #0x40                  	// #64
  427f58:	bl	403f30 <exit@plt>
  427f5c:	bl	4164f4 <wcrtomb@plt+0x11a04>
  427f60:	bl	43bec0 <argp_parse@@Base+0x1814>
  427f64:	mov	w0, wzr
  427f68:	bl	403f30 <exit@plt>
  427f6c:	bl	428ae4 <wcrtomb@plt+0x23ff4>
  427f70:	mov	x19, x0
  427f74:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  427f78:	add	x1, x1, #0xfdb
  427f7c:	mov	w0, #0x1                   	// #1
  427f80:	mov	x2, x19
  427f84:	bl	404310 <__printf_chk@plt>
  427f88:	bl	43bec0 <argp_parse@@Base+0x1814>
  427f8c:	mov	x0, x19
  427f90:	bl	4046b0 <free@plt>
  427f94:	mov	w0, wzr
  427f98:	bl	403f30 <exit@plt>
  427f9c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427fa0:	add	x1, x1, #0xf1e
  427fa4:	mov	w2, #0x5                   	// #5
  427fa8:	mov	x0, xzr
  427fac:	bl	4048b0 <dcgettext@plt>
  427fb0:	ldr	x8, [x20]
  427fb4:	mov	x2, x0
  427fb8:	mov	w0, wzr
  427fbc:	mov	w1, wzr
  427fc0:	ldr	x3, [x8, #8]
  427fc4:	bl	403f60 <error@plt>
  427fc8:	mov	w0, #0x40                  	// #64
  427fcc:	bl	403f30 <exit@plt>
  427fd0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427fd4:	ldr	x8, [x8, #4000]
  427fd8:	cbz	x8, 427fe0 <wcrtomb@plt+0x234f0>
  427fdc:	blr	x8
  427fe0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  427fe4:	add	x1, x1, #0xf2f
  427fe8:	b	42803c <wcrtomb@plt+0x2354c>
  427fec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  427ff0:	ldr	x8, [x8, #4000]
  427ff4:	cbz	x8, 427ffc <wcrtomb@plt+0x2350c>
  427ff8:	blr	x8
  427ffc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428000:	add	x1, x1, #0xf82
  428004:	b	42803c <wcrtomb@plt+0x2354c>
  428008:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42800c:	ldr	x8, [x8, #4000]
  428010:	cbz	x8, 428018 <wcrtomb@plt+0x23528>
  428014:	blr	x8
  428018:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42801c:	add	x1, x1, #0xd85
  428020:	b	42803c <wcrtomb@plt+0x2354c>
  428024:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428028:	ldr	x8, [x8, #4000]
  42802c:	cbz	x8, 428034 <wcrtomb@plt+0x23544>
  428030:	blr	x8
  428034:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428038:	add	x1, x1, #0xea9
  42803c:	mov	w2, #0x5                   	// #5
  428040:	mov	x0, xzr
  428044:	bl	4048b0 <dcgettext@plt>
  428048:	mov	x2, x0
  42804c:	mov	w0, wzr
  428050:	mov	w1, wzr
  428054:	bl	403f60 <error@plt>
  428058:	mov	w0, #0x2                   	// #2
  42805c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  428060:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428064:	ldr	x8, [x8, #4000]
  428068:	cbz	x8, 428070 <wcrtomb@plt+0x23580>
  42806c:	blr	x8
  428070:	mov	x0, x19
  428074:	bl	448e5c <argp_parse@@Base+0xe7b0>
  428078:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42807c:	mov	x19, x0
  428080:	add	x1, x1, #0xe4d
  428084:	b	42814c <wcrtomb@plt+0x2365c>
  428088:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42808c:	ldr	x8, [x8, #4000]
  428090:	cbz	x8, 428098 <wcrtomb@plt+0x235a8>
  428094:	blr	x8
  428098:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42809c:	add	x1, x1, #0xe61
  4280a0:	mov	w2, #0x5                   	// #5
  4280a4:	mov	x0, xzr
  4280a8:	bl	4048b0 <dcgettext@plt>
  4280ac:	mov	x2, x0
  4280b0:	mov	w3, #0x200                 	// #512
  4280b4:	mov	w0, wzr
  4280b8:	mov	w1, wzr
  4280bc:	bl	403f60 <error@plt>
  4280c0:	mov	w0, #0x2                   	// #2
  4280c4:	bl	42484c <wcrtomb@plt+0x1fd5c>
  4280c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4280cc:	ldr	x8, [x8, #4000]
  4280d0:	cbz	x8, 4280d8 <wcrtomb@plt+0x235e8>
  4280d4:	blr	x8
  4280d8:	mov	x0, x19
  4280dc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  4280e0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4280e4:	mov	x19, x0
  4280e8:	add	x1, x1, #0xe87
  4280ec:	b	42814c <wcrtomb@plt+0x2365c>
  4280f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4280f4:	ldr	x8, [x8, #4000]
  4280f8:	cbz	x8, 428100 <wcrtomb@plt+0x23610>
  4280fc:	blr	x8
  428100:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428104:	add	x1, x1, #0xe21
  428108:	mov	w2, #0x5                   	// #5
  42810c:	mov	x0, xzr
  428110:	bl	4048b0 <dcgettext@plt>
  428114:	mov	x2, x0
  428118:	mov	w0, wzr
  42811c:	mov	w1, wzr
  428120:	bl	403f60 <error@plt>
  428124:	bl	40eb40 <wcrtomb@plt+0xa050>
  428128:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42812c:	ldr	x8, [x8, #4000]
  428130:	cbz	x8, 428138 <wcrtomb@plt+0x23648>
  428134:	blr	x8
  428138:	mov	x0, x19
  42813c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  428140:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428144:	mov	x19, x0
  428148:	add	x1, x1, #0xd51
  42814c:	mov	w2, #0x5                   	// #5
  428150:	mov	x0, xzr
  428154:	bl	4048b0 <dcgettext@plt>
  428158:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  42815c:	mov	x4, x0
  428160:	add	x2, x2, #0x140
  428164:	mov	w0, wzr
  428168:	mov	w1, wzr
  42816c:	mov	x3, x19
  428170:	bl	403f60 <error@plt>
  428174:	mov	w0, #0x2                   	// #2
  428178:	bl	42484c <wcrtomb@plt+0x1fd5c>
  42817c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428180:	ldr	x8, [x8, #4000]
  428184:	cbz	x8, 42818c <wcrtomb@plt+0x2369c>
  428188:	blr	x8
  42818c:	mov	x0, x19
  428190:	bl	448e5c <argp_parse@@Base+0xe7b0>
  428194:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428198:	mov	x19, x0
  42819c:	add	x1, x1, #0xe3e
  4281a0:	mov	w2, #0x5                   	// #5
  4281a4:	mov	x0, xzr
  4281a8:	bl	4048b0 <dcgettext@plt>
  4281ac:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  4281b0:	mov	x4, x0
  4281b4:	add	x2, x2, #0x140
  4281b8:	b	426528 <wcrtomb@plt+0x21a38>
  4281bc:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4281c0:	add	x9, x9, #0xdc0
  4281c4:	ldr	x1, [x9, x8, lsl #3]
  4281c8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4281cc:	add	x0, x0, #0xfc5
  4281d0:	bl	428b18 <wcrtomb@plt+0x24028>
  4281d4:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4281d8:	add	x9, x9, #0xdc0
  4281dc:	ldr	x1, [x9, x8, lsl #3]
  4281e0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4281e4:	add	x0, x0, #0xfb2
  4281e8:	bl	428b18 <wcrtomb@plt+0x24028>
  4281ec:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4281f0:	add	x9, x9, #0xdc0
  4281f4:	ldr	x1, [x9, x8, lsl #3]
  4281f8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4281fc:	add	x0, x0, #0x2
  428200:	bl	428b18 <wcrtomb@plt+0x24028>
  428204:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428208:	add	x9, x9, #0xdc0
  42820c:	ldr	x1, [x9, x8, lsl #3]
  428210:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428214:	add	x0, x0, #0xfe0
  428218:	bl	428b18 <wcrtomb@plt+0x24028>
  42821c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428220:	add	x9, x9, #0xdc0
  428224:	ldr	x1, [x9, x8, lsl #3]
  428228:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42822c:	add	x0, x0, #0xfd1
  428230:	bl	428b18 <wcrtomb@plt+0x24028>
  428234:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428238:	add	x9, x9, #0xdc0
  42823c:	ldr	x1, [x9, x8, lsl #3]
  428240:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428244:	add	x0, x0, #0xfa2
  428248:	bl	428b18 <wcrtomb@plt+0x24028>
  42824c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428250:	add	x9, x9, #0xdc0
  428254:	ldr	x1, [x9, x8, lsl #3]
  428258:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42825c:	add	x0, x0, #0xff1
  428260:	bl	428b18 <wcrtomb@plt+0x24028>
  428264:	sub	sp, sp, #0xb0
  428268:	stp	x20, x19, [sp, #160]
  42826c:	cmp	w0, #0x113
  428270:	mov	x19, x1
  428274:	stp	x29, x30, [sp, #96]
  428278:	str	x25, [sp, #112]
  42827c:	stp	x24, x23, [sp, #128]
  428280:	stp	x22, x21, [sp, #144]
  428284:	add	x29, sp, #0x60
  428288:	b.le	428438 <wcrtomb@plt+0x23948>
  42828c:	cmp	w0, #0x115
  428290:	b.le	4284a0 <wcrtomb@plt+0x239b0>
  428294:	cmp	w0, #0x116
  428298:	b.eq	4284d0 <wcrtomb@plt+0x239e0>  // b.none
  42829c:	cmp	w0, #0x14f
  4282a0:	b.eq	4284f0 <wcrtomb@plt+0x23a00>  // b.none
  4282a4:	mov	w8, #0x4                   	// #4
  4282a8:	movk	w8, #0x200, lsl #16
  4282ac:	cmp	w0, w8
  4282b0:	b.ne	4286f0 <wcrtomb@plt+0x23c00>  // b.any
  4282b4:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  4282b8:	adrp	x4, 404000 <localtime_r@plt>
  4282bc:	add	x3, x3, #0x10
  4282c0:	add	x4, x4, #0x6b0
  4282c4:	add	x0, sp, #0x8
  4282c8:	mov	x1, xzr
  4282cc:	mov	x2, xzr
  4282d0:	bl	44ae4c <_obstack_begin@@Base>
  4282d4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4282d8:	add	x1, x1, #0x17e
  4282dc:	mov	w2, #0x5                   	// #5
  4282e0:	mov	x0, xzr
  4282e4:	bl	4048b0 <dcgettext@plt>
  4282e8:	mov	x20, x0
  4282ec:	bl	403f00 <strlen@plt>
  4282f0:	mov	x19, x0
  4282f4:	ldp	x0, x8, [sp, #32]
  4282f8:	sub	x8, x8, x0
  4282fc:	cmp	x8, x19
  428300:	b.cs	428314 <wcrtomb@plt+0x23824>  // b.hs, b.nlast
  428304:	add	x0, sp, #0x8
  428308:	mov	x1, x19
  42830c:	bl	44afa0 <_obstack_newchunk@@Base>
  428310:	ldr	x0, [sp, #32]
  428314:	mov	x1, x20
  428318:	mov	x2, x19
  42831c:	bl	403e80 <memcpy@plt>
  428320:	ldp	x8, x9, [sp, #32]
  428324:	add	x8, x8, x19
  428328:	sub	x9, x9, x8
  42832c:	cmp	x9, #0x1
  428330:	str	x8, [sp, #32]
  428334:	b.hi	428348 <wcrtomb@plt+0x23858>  // b.pmore
  428338:	add	x0, sp, #0x8
  42833c:	mov	w1, #0x2                   	// #2
  428340:	bl	44afa0 <_obstack_newchunk@@Base>
  428344:	ldr	x8, [sp, #32]
  428348:	mov	w9, #0xa0a                 	// #2570
  42834c:	strh	w9, [x8]
  428350:	ldr	x8, [sp, #32]
  428354:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  428358:	ldr	x19, [x9, #3344]
  42835c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  428360:	add	x8, x8, #0x2
  428364:	add	x22, x22, #0xd10
  428368:	str	x8, [sp, #32]
  42836c:	cbz	x19, 428510 <wcrtomb@plt+0x23a20>
  428370:	add	x23, x22, #0x8
  428374:	mov	w24, #0x2020                	// #8224
  428378:	mov	w25, #0xa                   	// #10
  42837c:	ldr	x9, [sp, #40]
  428380:	sub	x9, x9, x8
  428384:	cmp	x9, #0x1
  428388:	b.hi	42839c <wcrtomb@plt+0x238ac>  // b.pmore
  42838c:	add	x0, sp, #0x8
  428390:	mov	w1, #0x2                   	// #2
  428394:	bl	44afa0 <_obstack_newchunk@@Base>
  428398:	ldr	x8, [sp, #32]
  42839c:	strh	w24, [x8]
  4283a0:	ldr	x8, [sp, #32]
  4283a4:	mov	x0, x19
  4283a8:	add	x21, x8, #0x2
  4283ac:	str	x21, [sp, #32]
  4283b0:	bl	403f00 <strlen@plt>
  4283b4:	ldr	x8, [sp, #40]
  4283b8:	mov	x20, x0
  4283bc:	sub	x8, x8, x21
  4283c0:	cmp	x8, x0
  4283c4:	b.cs	4283d8 <wcrtomb@plt+0x238e8>  // b.hs, b.nlast
  4283c8:	add	x0, sp, #0x8
  4283cc:	mov	x1, x20
  4283d0:	bl	44afa0 <_obstack_newchunk@@Base>
  4283d4:	ldr	x21, [sp, #32]
  4283d8:	mov	x0, x21
  4283dc:	mov	x1, x19
  4283e0:	mov	x2, x20
  4283e4:	bl	403e80 <memcpy@plt>
  4283e8:	ldp	x8, x9, [sp, #32]
  4283ec:	add	x8, x8, x20
  4283f0:	cmp	x9, x8
  4283f4:	str	x8, [sp, #32]
  4283f8:	b.ne	42840c <wcrtomb@plt+0x2391c>  // b.any
  4283fc:	add	x0, sp, #0x8
  428400:	mov	w1, #0x1                   	// #1
  428404:	bl	44afa0 <_obstack_newchunk@@Base>
  428408:	ldr	x8, [sp, #32]
  42840c:	add	x9, x8, #0x1
  428410:	str	x9, [sp, #32]
  428414:	strb	w25, [x8]
  428418:	ldr	x19, [x23]
  42841c:	cbz	x19, 428510 <wcrtomb@plt+0x23a20>
  428420:	ldp	x8, x9, [sp, #32]
  428424:	add	x23, x23, #0x8
  428428:	sub	x9, x9, x8
  42842c:	cmp	x9, #0x1
  428430:	b.ls	42838c <wcrtomb@plt+0x2389c>  // b.plast
  428434:	b	42839c <wcrtomb@plt+0x238ac>
  428438:	cmp	w0, #0x69
  42843c:	b.gt	428470 <wcrtomb@plt+0x23980>
  428440:	cmp	w0, #0x4a
  428444:	b.eq	42868c <wcrtomb@plt+0x23b9c>  // b.none
  428448:	cmp	w0, #0x5a
  42844c:	b.ne	4286f0 <wcrtomb@plt+0x23c00>  // b.any
  428450:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428454:	add	x1, x1, #0x160
  428458:	mov	w2, #0x5                   	// #5
  42845c:	mov	x0, xzr
  428460:	bl	4048b0 <dcgettext@plt>
  428464:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428468:	add	x1, x1, #0x416
  42846c:	b	4286e8 <wcrtomb@plt+0x23bf8>
  428470:	cmp	w0, #0x6a
  428474:	b.eq	4286ac <wcrtomb@plt+0x23bbc>  // b.none
  428478:	cmp	w0, #0x7a
  42847c:	b.ne	4286f0 <wcrtomb@plt+0x23c00>  // b.any
  428480:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428484:	add	x1, x1, #0x160
  428488:	mov	w2, #0x5                   	// #5
  42848c:	mov	x0, xzr
  428490:	bl	4048b0 <dcgettext@plt>
  428494:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428498:	add	x1, x1, #0x4a6
  42849c:	b	4286e8 <wcrtomb@plt+0x23bf8>
  4284a0:	cmp	w0, #0x114
  4284a4:	b.eq	4286cc <wcrtomb@plt+0x23bdc>  // b.none
  4284a8:	cmp	w0, #0x115
  4284ac:	b.ne	4286f0 <wcrtomb@plt+0x23c00>  // b.any
  4284b0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4284b4:	add	x1, x1, #0x160
  4284b8:	mov	w2, #0x5                   	// #5
  4284bc:	mov	x0, xzr
  4284c0:	bl	4048b0 <dcgettext@plt>
  4284c4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4284c8:	add	x1, x1, #0xe8b
  4284cc:	b	4286e8 <wcrtomb@plt+0x23bf8>
  4284d0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4284d4:	add	x1, x1, #0x160
  4284d8:	mov	w2, #0x5                   	// #5
  4284dc:	mov	x0, xzr
  4284e0:	bl	4048b0 <dcgettext@plt>
  4284e4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4284e8:	add	x1, x1, #0xe95
  4284ec:	b	4286e8 <wcrtomb@plt+0x23bf8>
  4284f0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4284f4:	add	x1, x1, #0x160
  4284f8:	mov	w2, #0x5                   	// #5
  4284fc:	mov	x0, xzr
  428500:	bl	4048b0 <dcgettext@plt>
  428504:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  428508:	add	x1, x1, #0xe9c
  42850c:	b	4286e8 <wcrtomb@plt+0x23bf8>
  428510:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428514:	add	x1, x1, #0x1b2
  428518:	mov	w2, #0x5                   	// #5
  42851c:	mov	x0, xzr
  428520:	bl	4048b0 <dcgettext@plt>
  428524:	mov	x20, x0
  428528:	bl	403f00 <strlen@plt>
  42852c:	mov	x19, x0
  428530:	ldp	x0, x8, [sp, #32]
  428534:	sub	x8, x8, x0
  428538:	cmp	x8, x19
  42853c:	b.cs	428550 <wcrtomb@plt+0x23a60>  // b.hs, b.nlast
  428540:	add	x0, sp, #0x8
  428544:	mov	x1, x19
  428548:	bl	44afa0 <_obstack_newchunk@@Base>
  42854c:	ldr	x0, [sp, #32]
  428550:	mov	x1, x20
  428554:	mov	x2, x19
  428558:	bl	403e80 <memcpy@plt>
  42855c:	ldr	x8, [sp, #32]
  428560:	ldr	x4, [x22, #56]
  428564:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428568:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  42856c:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  428570:	adrp	x5, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428574:	add	x8, x8, x19
  428578:	add	x0, x0, #0x110
  42857c:	add	x1, x1, #0x28a
  428580:	add	x2, x2, #0xb35
  428584:	add	x5, x5, #0x14a
  428588:	mov	w3, #0x14                  	// #20
  42858c:	str	x8, [sp, #32]
  428590:	bl	44a74c <argp_parse@@Base+0x100a0>
  428594:	mov	x20, x0
  428598:	bl	403f00 <strlen@plt>
  42859c:	mov	x19, x0
  4285a0:	ldp	x0, x8, [sp, #32]
  4285a4:	sub	x8, x8, x0
  4285a8:	cmp	x8, x19
  4285ac:	b.cs	4285c0 <wcrtomb@plt+0x23ad0>  // b.hs, b.nlast
  4285b0:	add	x0, sp, #0x8
  4285b4:	mov	x1, x19
  4285b8:	bl	44afa0 <_obstack_newchunk@@Base>
  4285bc:	ldr	x0, [sp, #32]
  4285c0:	mov	x1, x20
  4285c4:	mov	x2, x19
  4285c8:	bl	403e80 <memcpy@plt>
  4285cc:	ldp	x8, x9, [sp, #32]
  4285d0:	add	x8, x8, x19
  4285d4:	cmp	x9, x8
  4285d8:	str	x8, [sp, #32]
  4285dc:	b.ne	4285f0 <wcrtomb@plt+0x23b00>  // b.any
  4285e0:	add	x0, sp, #0x8
  4285e4:	mov	w1, #0x1                   	// #1
  4285e8:	bl	44afa0 <_obstack_newchunk@@Base>
  4285ec:	ldr	x8, [sp, #32]
  4285f0:	add	x9, x8, #0x1
  4285f4:	mov	w10, #0xa                   	// #10
  4285f8:	str	x9, [sp, #32]
  4285fc:	strb	w10, [x8]
  428600:	ldp	x8, x9, [sp, #32]
  428604:	cmp	x9, x8
  428608:	b.ne	42861c <wcrtomb@plt+0x23b2c>  // b.any
  42860c:	add	x0, sp, #0x8
  428610:	mov	w1, #0x1                   	// #1
  428614:	bl	44afa0 <_obstack_newchunk@@Base>
  428618:	ldr	x8, [sp, #32]
  42861c:	add	x9, x8, #0x1
  428620:	str	x9, [sp, #32]
  428624:	strb	wzr, [x8]
  428628:	ldp	x0, x8, [sp, #24]
  42862c:	cmp	x8, x0
  428630:	b.ne	428640 <wcrtomb@plt+0x23b50>  // b.any
  428634:	ldrb	w9, [sp, #88]
  428638:	orr	w9, w9, #0x2
  42863c:	strb	w9, [sp, #88]
  428640:	ldr	x10, [sp, #56]
  428644:	ldr	x11, [sp, #16]
  428648:	ldr	x9, [sp, #40]
  42864c:	add	x8, x10, x8
  428650:	bic	x8, x8, x10
  428654:	sub	x10, x8, x11
  428658:	sub	x11, x9, x11
  42865c:	cmp	x10, x11
  428660:	str	x8, [sp, #32]
  428664:	b.ls	428670 <wcrtomb@plt+0x23b80>  // b.plast
  428668:	mov	x8, x9
  42866c:	str	x9, [sp, #32]
  428670:	str	x8, [sp, #24]
  428674:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  428678:	mov	x19, x0
  42867c:	add	x0, sp, #0x8
  428680:	mov	x1, xzr
  428684:	bl	44b118 <_obstack_free@@Base>
  428688:	b	4286f0 <wcrtomb@plt+0x23c00>
  42868c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428690:	add	x1, x1, #0x160
  428694:	mov	w2, #0x5                   	// #5
  428698:	mov	x0, xzr
  42869c:	bl	4048b0 <dcgettext@plt>
  4286a0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  4286a4:	add	x1, x1, #0x4f7
  4286a8:	b	4286e8 <wcrtomb@plt+0x23bf8>
  4286ac:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4286b0:	add	x1, x1, #0x160
  4286b4:	mov	w2, #0x5                   	// #5
  4286b8:	mov	x0, xzr
  4286bc:	bl	4048b0 <dcgettext@plt>
  4286c0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4286c4:	add	x1, x1, #0xe7c
  4286c8:	b	4286e8 <wcrtomb@plt+0x23bf8>
  4286cc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4286d0:	add	x1, x1, #0x160
  4286d4:	mov	w2, #0x5                   	// #5
  4286d8:	mov	x0, xzr
  4286dc:	bl	4048b0 <dcgettext@plt>
  4286e0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  4286e4:	add	x1, x1, #0xe84
  4286e8:	bl	44a74c <argp_parse@@Base+0x100a0>
  4286ec:	mov	x19, x0
  4286f0:	mov	x0, x19
  4286f4:	ldp	x20, x19, [sp, #160]
  4286f8:	ldp	x22, x21, [sp, #144]
  4286fc:	ldp	x24, x23, [sp, #128]
  428700:	ldr	x25, [sp, #112]
  428704:	ldp	x29, x30, [sp, #96]
  428708:	add	sp, sp, #0xb0
  42870c:	ret
  428710:	sub	sp, sp, #0xc0
  428714:	stp	x29, x30, [sp, #128]
  428718:	stp	x22, x21, [sp, #160]
  42871c:	stp	x20, x19, [sp, #176]
  428720:	ldrb	w8, [x2]
  428724:	mov	x19, x3
  428728:	mov	x20, x2
  42872c:	str	x23, [sp, #144]
  428730:	and	w8, w8, #0xfe
  428734:	cmp	w8, #0x2e
  428738:	add	x29, sp, #0x80
  42873c:	b.ne	428760 <wcrtomb@plt+0x23c70>  // b.any
  428740:	mov	x2, sp
  428744:	mov	w0, wzr
  428748:	mov	x1, x20
  42874c:	bl	4049f0 <__xstat@plt>
  428750:	cbnz	w0, 428834 <wcrtomb@plt+0x23d44>
  428754:	ldur	q0, [sp, #88]
  428758:	str	q0, [x19]
  42875c:	b	42881c <wcrtomb@plt+0x23d2c>
  428760:	mov	x22, x1
  428764:	mov	x21, x0
  428768:	mov	x0, x19
  42876c:	mov	x1, x20
  428770:	mov	x2, xzr
  428774:	bl	44454c <argp_parse@@Base+0x9ea0>
  428778:	tbz	w0, #0, 4287b8 <wcrtomb@plt+0x23cc8>
  42877c:	mov	w0, #0x28                  	// #40
  428780:	bl	44a010 <argp_parse@@Base+0xf964>
  428784:	ldr	q0, [x19]
  428788:	mov	x23, x0
  42878c:	str	x22, [x0, #24]
  428790:	stur	q0, [x0, #8]
  428794:	mov	x0, x20
  428798:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  42879c:	mov	x8, x0
  4287a0:	str	x8, [x23, #32]
  4287a4:	ldr	x8, [x21, #8]
  4287a8:	mov	w0, wzr
  4287ac:	str	x8, [x23]
  4287b0:	str	x23, [x21, #8]
  4287b4:	b	42881c <wcrtomb@plt+0x23d2c>
  4287b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4287bc:	ldr	x8, [x8, #4000]
  4287c0:	cbz	x8, 4287c8 <wcrtomb@plt+0x23cd8>
  4287c4:	blr	x8
  4287c8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4287cc:	add	x1, x1, #0x4e
  4287d0:	mov	w2, #0x5                   	// #5
  4287d4:	mov	x0, xzr
  4287d8:	bl	4048b0 <dcgettext@plt>
  4287dc:	ldp	x8, x1, [x19]
  4287e0:	mov	x21, x0
  4287e4:	mov	w2, wzr
  4287e8:	mov	x0, x8
  4287ec:	bl	41a364 <wcrtomb@plt+0x15874>
  4287f0:	mov	x22, x0
  4287f4:	mov	x0, x20
  4287f8:	bl	449144 <argp_parse@@Base+0xea98>
  4287fc:	mov	x4, x0
  428800:	mov	w0, wzr
  428804:	mov	w1, wzr
  428808:	mov	x2, x21
  42880c:	mov	x3, x22
  428810:	bl	403f60 <error@plt>
  428814:	str	xzr, [x19, #8]
  428818:	mov	w0, #0x1                   	// #1
  42881c:	ldp	x20, x19, [sp, #176]
  428820:	ldp	x22, x21, [sp, #160]
  428824:	ldr	x23, [sp, #144]
  428828:	ldp	x29, x30, [sp, #128]
  42882c:	add	sp, sp, #0xc0
  428830:	ret
  428834:	mov	x0, x20
  428838:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  42883c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428840:	ldr	x8, [x8, #4000]
  428844:	cbz	x8, 42884c <wcrtomb@plt+0x23d5c>
  428848:	blr	x8
  42884c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428850:	add	x1, x1, #0x33
  428854:	mov	w2, #0x5                   	// #5
  428858:	mov	x0, xzr
  42885c:	bl	4048b0 <dcgettext@plt>
  428860:	mov	x2, x0
  428864:	mov	w0, wzr
  428868:	mov	w1, wzr
  42886c:	bl	403f60 <error@plt>
  428870:	mov	w0, #0x2                   	// #2
  428874:	bl	42484c <wcrtomb@plt+0x1fd5c>
  428878:	stp	x29, x30, [sp, #-32]!
  42887c:	stp	x20, x19, [sp, #16]
  428880:	mov	x19, x0
  428884:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428888:	add	x0, x0, #0x24c
  42888c:	mov	x1, x19
  428890:	mov	x29, sp
  428894:	bl	404610 <strcmp@plt>
  428898:	cbz	w0, 42890c <wcrtomb@plt+0x23e1c>
  42889c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4288a0:	add	x0, x0, #0x263
  4288a4:	mov	x1, x19
  4288a8:	bl	404610 <strcmp@plt>
  4288ac:	cbz	w0, 428918 <wcrtomb@plt+0x23e28>
  4288b0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4288b4:	add	x0, x0, #0x2a6
  4288b8:	mov	x1, x19
  4288bc:	bl	404610 <strcmp@plt>
  4288c0:	cbz	w0, 428924 <wcrtomb@plt+0x23e34>
  4288c4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4288c8:	add	x0, x0, #0x2f4
  4288cc:	mov	x1, x19
  4288d0:	bl	404610 <strcmp@plt>
  4288d4:	cbz	w0, 428930 <wcrtomb@plt+0x23e40>
  4288d8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4288dc:	add	x0, x0, #0x28a
  4288e0:	mov	x1, x19
  4288e4:	bl	404610 <strcmp@plt>
  4288e8:	cbz	w0, 42893c <wcrtomb@plt+0x23e4c>
  4288ec:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  4288f0:	add	x0, x0, #0x2cf
  4288f4:	mov	x1, x19
  4288f8:	bl	404610 <strcmp@plt>
  4288fc:	cbnz	w0, 42895c <wcrtomb@plt+0x23e6c>
  428900:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428904:	add	x8, x8, #0xa30
  428908:	b	428944 <wcrtomb@plt+0x23e54>
  42890c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428910:	add	x8, x8, #0x9e0
  428914:	b	428944 <wcrtomb@plt+0x23e54>
  428918:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42891c:	add	x8, x8, #0x9f0
  428920:	b	428944 <wcrtomb@plt+0x23e54>
  428924:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428928:	add	x8, x8, #0xa00
  42892c:	b	428944 <wcrtomb@plt+0x23e54>
  428930:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428934:	add	x8, x8, #0xa10
  428938:	b	428944 <wcrtomb@plt+0x23e54>
  42893c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  428940:	add	x8, x8, #0xa20
  428944:	ldr	w8, [x8, #8]
  428948:	ldp	x20, x19, [sp, #16]
  42894c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428950:	str	w8, [x9, #3808]
  428954:	ldp	x29, x30, [sp], #32
  428958:	ret
  42895c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428960:	ldr	x8, [x8, #4000]
  428964:	cbz	x8, 42896c <wcrtomb@plt+0x23e7c>
  428968:	blr	x8
  42896c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428970:	add	x1, x1, #0x85
  428974:	mov	w2, #0x5                   	// #5
  428978:	mov	x0, xzr
  42897c:	bl	4048b0 <dcgettext@plt>
  428980:	mov	x20, x0
  428984:	mov	x0, x19
  428988:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42898c:	mov	x3, x0
  428990:	mov	w0, wzr
  428994:	mov	w1, wzr
  428998:	mov	x2, x20
  42899c:	bl	403f60 <error@plt>
  4289a0:	mov	w0, #0x2                   	// #2
  4289a4:	bl	42484c <wcrtomb@plt+0x1fd5c>
  4289a8:	sub	sp, sp, #0x40
  4289ac:	stp	x29, x30, [sp, #16]
  4289b0:	stp	x20, x19, [sp, #48]
  4289b4:	add	x29, sp, #0x10
  4289b8:	mov	x19, x1
  4289bc:	mov	x8, #0xffffffffffffffff    	// #-1
  4289c0:	mov	w1, #0x3a                  	// #58
  4289c4:	str	x21, [sp, #32]
  4289c8:	mov	x20, x0
  4289cc:	str	x8, [x29, #24]
  4289d0:	bl	404750 <strchr@plt>
  4289d4:	cbz	x0, 428a1c <wcrtomb@plt+0x23f2c>
  4289d8:	mov	x21, x0
  4289dc:	strb	wzr, [x21], #1
  4289e0:	ldrb	w8, [x20]
  4289e4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4289e8:	add	x4, x4, #0xb36
  4289ec:	add	x1, sp, #0x8
  4289f0:	cmp	w8, #0x0
  4289f4:	add	x3, x29, #0x18
  4289f8:	mov	w2, #0xa                   	// #10
  4289fc:	mov	x0, x21
  428a00:	csel	x20, xzr, x20, eq  // eq = none
  428a04:	bl	44a3ac <argp_parse@@Base+0xfd00>
  428a08:	cbnz	w0, 428a94 <wcrtomb@plt+0x23fa4>
  428a0c:	ldr	x8, [x29, #24]
  428a10:	lsr	x8, x8, #32
  428a14:	cbz	x8, 428a54 <wcrtomb@plt+0x23f64>
  428a18:	b	428a94 <wcrtomb@plt+0x23fa4>
  428a1c:	ldrb	w8, [x20]
  428a20:	sub	w8, w8, #0x30
  428a24:	cmp	w8, #0x9
  428a28:	b.hi	428a54 <wcrtomb@plt+0x23f64>  // b.pmore
  428a2c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428a30:	add	x4, x4, #0xb36
  428a34:	add	x1, sp, #0x8
  428a38:	mov	x3, sp
  428a3c:	mov	w2, #0xa                   	// #10
  428a40:	mov	x0, x20
  428a44:	bl	44a3ac <argp_parse@@Base+0xfd00>
  428a48:	cbz	w0, 428a74 <wcrtomb@plt+0x23f84>
  428a4c:	cmp	w0, #0x1
  428a50:	b.eq	428a90 <wcrtomb@plt+0x23fa0>  // b.none
  428a54:	cbz	x20, 428a5c <wcrtomb@plt+0x23f6c>
  428a58:	str	x20, [x19]
  428a5c:	ldr	x0, [x29, #24]
  428a60:	ldp	x20, x19, [sp, #48]
  428a64:	ldr	x21, [sp, #32]
  428a68:	ldp	x29, x30, [sp, #16]
  428a6c:	add	sp, sp, #0x40
  428a70:	ret
  428a74:	ldr	x8, [sp]
  428a78:	lsr	x9, x8, #32
  428a7c:	cbnz	x9, 428a90 <wcrtomb@plt+0x23fa0>
  428a80:	mov	x20, xzr
  428a84:	str	x8, [x29, #24]
  428a88:	cbnz	x20, 428a58 <wcrtomb@plt+0x23f68>
  428a8c:	b	428a5c <wcrtomb@plt+0x23f6c>
  428a90:	mov	x21, x20
  428a94:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428a98:	ldr	x8, [x8, #4000]
  428a9c:	cbz	x8, 428aa4 <wcrtomb@plt+0x23fb4>
  428aa0:	blr	x8
  428aa4:	mov	x0, x21
  428aa8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  428aac:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428ab0:	mov	x19, x0
  428ab4:	add	x1, x1, #0xa0
  428ab8:	mov	w2, #0x5                   	// #5
  428abc:	mov	x0, xzr
  428ac0:	bl	4048b0 <dcgettext@plt>
  428ac4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  428ac8:	mov	x4, x0
  428acc:	add	x2, x2, #0x140
  428ad0:	mov	w0, wzr
  428ad4:	mov	w1, wzr
  428ad8:	mov	x3, x19
  428adc:	bl	403f60 <error@plt>
  428ae0:	bl	40eb40 <wcrtomb@plt+0xa050>
  428ae4:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  428ae8:	add	x8, x8, #0xd10
  428aec:	ldr	x4, [x8, #56]
  428af0:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428af4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  428af8:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  428afc:	adrp	x5, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428b00:	add	x0, x0, #0x110
  428b04:	add	x1, x1, #0x28a
  428b08:	add	x2, x2, #0xb35
  428b0c:	add	x5, x5, #0x14a
  428b10:	mov	w3, #0x14                  	// #20
  428b14:	b	44a74c <argp_parse@@Base+0x100a0>
  428b18:	stp	x29, x30, [sp, #-32]!
  428b1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428b20:	ldr	x8, [x8, #4000]
  428b24:	stp	x20, x19, [sp, #16]
  428b28:	mov	x19, x1
  428b2c:	mov	x20, x0
  428b30:	mov	x29, sp
  428b34:	cbz	x8, 428b3c <wcrtomb@plt+0x2404c>
  428b38:	blr	x8
  428b3c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428b40:	add	x1, x1, #0x15
  428b44:	mov	w2, #0x5                   	// #5
  428b48:	mov	x0, xzr
  428b4c:	bl	4048b0 <dcgettext@plt>
  428b50:	mov	x2, x0
  428b54:	mov	w0, wzr
  428b58:	mov	w1, wzr
  428b5c:	mov	x3, x20
  428b60:	mov	x4, x19
  428b64:	bl	403f60 <error@plt>
  428b68:	mov	w0, #0x2                   	// #2
  428b6c:	bl	42484c <wcrtomb@plt+0x1fd5c>
  428b70:	stp	x29, x30, [sp, #-32]!
  428b74:	str	x19, [sp, #16]
  428b78:	mov	x29, sp
  428b7c:	mov	w19, w0
  428b80:	bl	404df0 <wcrtomb@plt+0x300>
  428b84:	bl	405288 <wcrtomb@plt+0x798>
  428b88:	mov	w0, w19
  428b8c:	ldr	x19, [sp, #16]
  428b90:	adrp	x1, 428000 <wcrtomb@plt+0x23510>
  428b94:	add	x1, x1, #0xb70
  428b98:	ldp	x29, x30, [sp], #32
  428b9c:	b	404170 <signal@plt>
  428ba0:	stp	x29, x30, [sp, #-96]!
  428ba4:	stp	x28, x27, [sp, #16]
  428ba8:	stp	x26, x25, [sp, #32]
  428bac:	stp	x24, x23, [sp, #48]
  428bb0:	stp	x22, x21, [sp, #64]
  428bb4:	stp	x20, x19, [sp, #80]
  428bb8:	mov	x29, sp
  428bbc:	sub	sp, sp, #0x230
  428bc0:	ldrb	w8, [x0]
  428bc4:	cbz	w8, 429590 <wcrtomb@plt+0x24aa0>
  428bc8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  428bcc:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  428bd0:	mov	x19, x0
  428bd4:	sub	x28, x29, #0x10
  428bd8:	add	x20, x20, #0x850
  428bdc:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  428be0:	add	x21, x21, #0xe68
  428be4:	b	428bf4 <wcrtomb@plt+0x24104>
  428be8:	add	x19, x19, #0x1
  428bec:	ldrb	w8, [x19]
  428bf0:	cbz	w8, 429590 <wcrtomb@plt+0x24aa0>
  428bf4:	mov	w0, #0x70                  	// #112
  428bf8:	bl	44a230 <argp_parse@@Base+0xfb84>
  428bfc:	ldr	x8, [x20, #8]
  428c00:	cmp	x8, #0x0
  428c04:	csel	x8, x20, x8, eq  // eq = none
  428c08:	str	x0, [x8]
  428c0c:	str	x0, [x20, #8]
  428c10:	ldrb	w8, [x19]
  428c14:	cmp	w8, #0x73
  428c18:	b.ne	428ce4 <wcrtomb@plt+0x241f4>  // b.any
  428c1c:	mov	x23, x19
  428c20:	ldrb	w8, [x23, #2]!
  428c24:	mov	x22, x0
  428c28:	mov	w20, #0x2                   	// #2
  428c2c:	ldurb	w10, [x23, #-1]
  428c30:	cmp	w8, w10
  428c34:	b.eq	428c78 <wcrtomb@plt+0x24188>  // b.none
  428c38:	cbz	w8, 428c78 <wcrtomb@plt+0x24188>
  428c3c:	mov	w20, #0x2                   	// #2
  428c40:	and	w8, w8, #0xff
  428c44:	cmp	w8, #0x5c
  428c48:	b.ne	428c60 <wcrtomb@plt+0x24170>  // b.any
  428c4c:	sxtw	x8, w20
  428c50:	add	x8, x8, #0x1
  428c54:	ldrb	w9, [x19, x8]
  428c58:	cmp	w9, #0x0
  428c5c:	csel	w20, w20, w8, eq  // eq = none
  428c60:	sxtw	x8, w20
  428c64:	add	x20, x8, #0x1
  428c68:	ldrb	w8, [x19, x20]
  428c6c:	cmp	w8, w10
  428c70:	b.eq	428c78 <wcrtomb@plt+0x24188>  // b.none
  428c74:	cbnz	w8, 428c40 <wcrtomb@plt+0x24150>
  428c78:	cmp	w8, w10
  428c7c:	b.ne	429628 <wcrtomb@plt+0x24b38>  // b.any
  428c80:	sxtw	x8, w20
  428c84:	add	x24, x8, #0x1
  428c88:	add	x27, x19, x24
  428c8c:	str	x8, [sp, #16]
  428c90:	ldrb	w8, [x27]
  428c94:	cmp	w8, w10
  428c98:	b.eq	428d28 <wcrtomb@plt+0x24238>  // b.none
  428c9c:	cbz	w8, 428d28 <wcrtomb@plt+0x24238>
  428ca0:	mov	w21, w24
  428ca4:	and	w8, w8, #0xff
  428ca8:	cmp	w8, #0x5c
  428cac:	b.ne	428cc4 <wcrtomb@plt+0x241d4>  // b.any
  428cb0:	sxtw	x8, w21
  428cb4:	add	x8, x8, #0x1
  428cb8:	ldrb	w9, [x19, x8]
  428cbc:	cmp	w9, #0x0
  428cc0:	csel	w21, w21, w8, eq  // eq = none
  428cc4:	sxtw	x8, w21
  428cc8:	add	x21, x8, #0x1
  428ccc:	ldrb	w8, [x19, x21]
  428cd0:	cmp	w8, w10
  428cd4:	b.eq	428cdc <wcrtomb@plt+0x241ec>  // b.none
  428cd8:	cbnz	w8, 428ca4 <wcrtomb@plt+0x241b4>
  428cdc:	add	x19, x19, x21
  428ce0:	b	428d30 <wcrtomb@plt+0x24240>
  428ce4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428ce8:	mov	w2, #0x6                   	// #6
  428cec:	mov	x0, x19
  428cf0:	add	x1, x1, #0x76a
  428cf4:	bl	4042c0 <strncmp@plt>
  428cf8:	cbnz	w0, 429628 <wcrtomb@plt+0x24b38>
  428cfc:	str	wzr, [x26, #3688]
  428d00:	ldrb	w1, [x19, #6]!
  428d04:	cbz	w1, 428bec <wcrtomb@plt+0x240fc>
  428d08:	cmp	w1, #0x3b
  428d0c:	b.eq	428be8 <wcrtomb@plt+0x240f8>  // b.none
  428d10:	mov	x0, x21
  428d14:	bl	429c50 <wcrtomb@plt+0x25160>
  428d18:	cbnz	w0, 4295b0 <wcrtomb@plt+0x24ac0>
  428d1c:	ldrb	w1, [x19, #1]!
  428d20:	cbnz	w1, 428d08 <wcrtomb@plt+0x24218>
  428d24:	b	428bec <wcrtomb@plt+0x240fc>
  428d28:	mov	w21, w24
  428d2c:	mov	x19, x27
  428d30:	cmp	w8, w10
  428d34:	b.ne	429628 <wcrtomb@plt+0x24b38>  // b.any
  428d38:	ldr	w8, [x26, #3688]
  428d3c:	mov	x26, x22
  428d40:	mov	w25, wzr
  428d44:	str	wzr, [x22, #8]
  428d48:	str	w8, [x26, #12]!
  428d4c:	str	w10, [sp, #4]
  428d50:	str	x24, [sp, #8]
  428d54:	b	428ddc <wcrtomb@plt+0x242ec>
  428d58:	sub	x1, x29, #0x10
  428d5c:	mov	x0, x19
  428d60:	mov	w2, wzr
  428d64:	bl	403ef0 <strtoul@plt>
  428d68:	ldr	x8, [x28]
  428d6c:	str	w0, [x22, #16]
  428d70:	sub	x8, x8, #0x1
  428d74:	str	x8, [x28]
  428d78:	add	x19, x8, #0x1
  428d7c:	str	x19, [x28]
  428d80:	ldrb	w1, [x8, #1]
  428d84:	sub	w9, w1, #0x30
  428d88:	cmp	w9, #0xa
  428d8c:	b.cc	428d58 <wcrtomb@plt+0x24268>  // b.lo, b.ul, b.last
  428d90:	cmp	w1, #0x66
  428d94:	b.le	428db4 <wcrtomb@plt+0x242c4>
  428d98:	cmp	w1, #0x67
  428d9c:	b.eq	428dd4 <wcrtomb@plt+0x242e4>  // b.none
  428da0:	cmp	w1, #0x69
  428da4:	b.eq	428de4 <wcrtomb@plt+0x242f4>  // b.none
  428da8:	cmp	w1, #0x78
  428dac:	b.ne	428dc0 <wcrtomb@plt+0x242d0>  // b.any
  428db0:	b	428df0 <wcrtomb@plt+0x24300>
  428db4:	cbz	w1, 428dfc <wcrtomb@plt+0x2430c>
  428db8:	cmp	w1, #0x3b
  428dbc:	b.eq	428e04 <wcrtomb@plt+0x24314>  // b.none
  428dc0:	mov	x0, x26
  428dc4:	bl	429c50 <wcrtomb@plt+0x25160>
  428dc8:	mov	x8, x19
  428dcc:	cbz	w0, 428d78 <wcrtomb@plt+0x24288>
  428dd0:	b	4295f0 <wcrtomb@plt+0x24b00>
  428dd4:	mov	w8, #0x1                   	// #1
  428dd8:	str	w8, [x22, #8]
  428ddc:	mov	x8, x19
  428de0:	b	428d78 <wcrtomb@plt+0x24288>
  428de4:	mov	w8, #0x2                   	// #2
  428de8:	orr	w25, w25, w8
  428dec:	b	428ddc <wcrtomb@plt+0x242ec>
  428df0:	mov	w8, #0x1                   	// #1
  428df4:	orr	w25, w25, w8
  428df8:	b	428ddc <wcrtomb@plt+0x242ec>
  428dfc:	mov	x24, x27
  428e00:	b	428e10 <wcrtomb@plt+0x24320>
  428e04:	add	x19, x8, #0x2
  428e08:	mov	x24, x27
  428e0c:	str	x19, [x28]
  428e10:	sub	w8, w20, #0x1
  428e14:	sxtw	x0, w8
  428e18:	bl	44a010 <argp_parse@@Base+0xf964>
  428e1c:	ldr	x8, [sp, #16]
  428e20:	mov	x1, x23
  428e24:	mov	x26, x0
  428e28:	sub	x27, x8, #0x2
  428e2c:	mov	x2, x27
  428e30:	bl	403e80 <memcpy@plt>
  428e34:	add	x23, x22, #0x18
  428e38:	mov	x0, x23
  428e3c:	mov	x1, x26
  428e40:	mov	w2, w25
  428e44:	strb	wzr, [x26, x27]
  428e48:	bl	44ce8c <_obstack_memory_used@@Base+0x1cc8>
  428e4c:	cbnz	w0, 429664 <wcrtomb@plt+0x24b74>
  428e50:	ldrb	w8, [x26]
  428e54:	mov	x23, x24
  428e58:	cmp	w8, #0x5e
  428e5c:	b.ne	428e68 <wcrtomb@plt+0x24378>  // b.any
  428e60:	str	wzr, [x22, #8]
  428e64:	b	428e84 <wcrtomb@plt+0x24394>
  428e68:	cmp	w20, #0x3
  428e6c:	b.lt	428e84 <wcrtomb@plt+0x24394>  // b.tstop
  428e70:	ldr	x8, [sp, #16]
  428e74:	add	x8, x8, x26
  428e78:	ldurb	w8, [x8, #-3]
  428e7c:	cmp	w8, #0x24
  428e80:	b.eq	428e60 <wcrtomb@plt+0x24370>  // b.none
  428e84:	mov	x0, x26
  428e88:	bl	4046b0 <free@plt>
  428e8c:	ldr	x8, [sp, #8]
  428e90:	sub	w20, w21, w8
  428e94:	add	w8, w20, #0x1
  428e98:	sxtw	x0, w8
  428e9c:	bl	44a010 <argp_parse@@Base+0xf964>
  428ea0:	sxtw	x25, w20
  428ea4:	mov	x1, x23
  428ea8:	mov	x2, x25
  428eac:	mov	x24, x0
  428eb0:	bl	403e80 <memcpy@plt>
  428eb4:	add	x21, x22, #0x60
  428eb8:	add	x20, x22, #0x58
  428ebc:	add	x23, x22, #0x68
  428ec0:	mov	x8, x24
  428ec4:	strb	wzr, [x24, x25]
  428ec8:	str	x24, [sp, #32]
  428ecc:	str	x24, [sp, #16]
  428ed0:	b	428f1c <wcrtomb@plt+0x2442c>
  428ed4:	mov	w0, #0x20                  	// #32
  428ed8:	bl	44a010 <argp_parse@@Base+0xf964>
  428edc:	ldr	x8, [x21]
  428ee0:	str	xzr, [x0]
  428ee4:	mov	w10, #0x1                   	// #1
  428ee8:	cmp	x8, #0x0
  428eec:	csel	x8, x20, x8, eq  // eq = none
  428ef0:	str	x0, [x8]
  428ef4:	str	x0, [x21]
  428ef8:	ldr	x8, [x23]
  428efc:	ldr	x9, [sp, #32]
  428f00:	str	w10, [x0, #8]
  428f04:	str	xzr, [x0, #16]
  428f08:	add	x10, x8, #0x1
  428f0c:	add	x8, x9, #0x1
  428f10:	str	x10, [x23]
  428f14:	str	x8, [sp, #32]
  428f18:	mov	x24, x8
  428f1c:	ldrb	w9, [x8]
  428f20:	cmp	w9, #0x26
  428f24:	b.eq	429034 <wcrtomb@plt+0x24544>  // b.none
  428f28:	cmp	w9, #0x5c
  428f2c:	b.eq	428f40 <wcrtomb@plt+0x24450>  // b.none
  428f30:	cbz	w9, 429510 <wcrtomb@plt+0x24a20>
  428f34:	add	x8, x8, #0x1
  428f38:	str	x8, [sp, #32]
  428f3c:	b	428f1c <wcrtomb@plt+0x2442c>
  428f40:	subs	x25, x8, x24
  428f44:	b.eq	428fa4 <wcrtomb@plt+0x244b4>  // b.none
  428f48:	mov	w0, #0x20                  	// #32
  428f4c:	bl	44a010 <argp_parse@@Base+0xf964>
  428f50:	ldr	x8, [x21]
  428f54:	str	xzr, [x0]
  428f58:	mov	x26, x0
  428f5c:	cmp	x8, #0x0
  428f60:	csel	x8, x20, x8, eq  // eq = none
  428f64:	str	x0, [x8]
  428f68:	str	x0, [x21]
  428f6c:	ldr	x8, [x23]
  428f70:	str	wzr, [x0, #8]
  428f74:	add	x0, x25, #0x1
  428f78:	add	x8, x8, #0x1
  428f7c:	str	x8, [x23]
  428f80:	bl	44a010 <argp_parse@@Base+0xf964>
  428f84:	mov	x1, x24
  428f88:	mov	x2, x25
  428f8c:	mov	x27, x0
  428f90:	str	x0, [x26, #16]
  428f94:	bl	403e80 <memcpy@plt>
  428f98:	ldr	x8, [sp, #32]
  428f9c:	strb	wzr, [x27, x25]
  428fa0:	str	x25, [x26, #24]
  428fa4:	add	x0, x8, #0x1
  428fa8:	str	x0, [sp, #32]
  428fac:	ldrb	w8, [x8, #1]
  428fb0:	sub	w9, w8, #0x26
  428fb4:	cmp	w9, #0x50
  428fb8:	b.hi	42944c <wcrtomb@plt+0x2495c>  // b.pmore
  428fbc:	adrp	x12, 467000 <_obstack_memory_used@@Base+0x1be3c>
  428fc0:	add	x12, x12, #0x698
  428fc4:	adr	x10, 428fd4 <wcrtomb@plt+0x244e4>
  428fc8:	ldrh	w11, [x12, x9, lsl #1]
  428fcc:	add	x10, x10, x11, lsl #2
  428fd0:	br	x10
  428fd4:	add	x1, sp, #0x20
  428fd8:	mov	w2, #0xa                   	// #10
  428fdc:	bl	403ef0 <strtoul@plt>
  428fe0:	ldr	x8, [x22, #72]
  428fe4:	cmp	x0, x8
  428fe8:	b.hi	42960c <wcrtomb@plt+0x24b1c>  // b.pmore
  428fec:	mov	x24, x0
  428ff0:	mov	w0, #0x20                  	// #32
  428ff4:	bl	44a010 <argp_parse@@Base+0xf964>
  428ff8:	ldr	x8, [x21]
  428ffc:	str	xzr, [x0]
  429000:	mov	w10, #0x1                   	// #1
  429004:	cmp	x8, #0x0
  429008:	csel	x8, x20, x8, eq  // eq = none
  42900c:	str	x0, [x8]
  429010:	str	x0, [x21]
  429014:	ldr	x9, [x23]
  429018:	ldr	x8, [sp, #32]
  42901c:	str	w10, [x0, #8]
  429020:	str	x24, [x0, #16]
  429024:	add	x9, x9, #0x1
  429028:	str	x9, [x23]
  42902c:	mov	x24, x8
  429030:	b	428f1c <wcrtomb@plt+0x2442c>
  429034:	subs	x25, x8, x24
  429038:	b.eq	428ed4 <wcrtomb@plt+0x243e4>  // b.none
  42903c:	mov	w0, #0x20                  	// #32
  429040:	bl	44a010 <argp_parse@@Base+0xf964>
  429044:	ldr	x8, [x21]
  429048:	str	xzr, [x0]
  42904c:	mov	x26, x0
  429050:	cmp	x8, #0x0
  429054:	csel	x8, x20, x8, eq  // eq = none
  429058:	str	x0, [x8]
  42905c:	str	x0, [x21]
  429060:	ldr	x8, [x23]
  429064:	str	wzr, [x0, #8]
  429068:	add	x0, x25, #0x1
  42906c:	add	x8, x8, #0x1
  429070:	str	x8, [x23]
  429074:	bl	44a010 <argp_parse@@Base+0xf964>
  429078:	mov	x1, x24
  42907c:	mov	x2, x25
  429080:	mov	x27, x0
  429084:	str	x0, [x26, #16]
  429088:	bl	403e80 <memcpy@plt>
  42908c:	strb	wzr, [x27, x25]
  429090:	str	x25, [x26, #24]
  429094:	b	428ed4 <wcrtomb@plt+0x243e4>
  429098:	mov	w0, #0x20                  	// #32
  42909c:	bl	44a010 <argp_parse@@Base+0xf964>
  4290a0:	ldr	x8, [x21]
  4290a4:	str	xzr, [x0]
  4290a8:	mov	x24, x0
  4290ac:	cmp	x8, #0x0
  4290b0:	csel	x8, x20, x8, eq  // eq = none
  4290b4:	str	x0, [x8]
  4290b8:	str	x0, [x21]
  4290bc:	ldr	x8, [x23]
  4290c0:	str	wzr, [x0, #8]
  4290c4:	mov	w0, #0x2                   	// #2
  4290c8:	add	x8, x8, #0x1
  4290cc:	str	x8, [x23]
  4290d0:	bl	44a010 <argp_parse@@Base+0xf964>
  4290d4:	ldr	x8, [sp, #32]
  4290d8:	mov	w9, #0xd                   	// #13
  4290dc:	b	429438 <wcrtomb@plt+0x24948>
  4290e0:	mov	w0, #0x20                  	// #32
  4290e4:	bl	44a010 <argp_parse@@Base+0xf964>
  4290e8:	ldr	x8, [x21]
  4290ec:	str	xzr, [x0]
  4290f0:	mov	x24, x0
  4290f4:	cmp	x8, #0x0
  4290f8:	csel	x8, x20, x8, eq  // eq = none
  4290fc:	str	x0, [x8]
  429100:	str	x0, [x21]
  429104:	ldr	x8, [x23]
  429108:	str	wzr, [x0, #8]
  42910c:	mov	w0, #0x2                   	// #2
  429110:	add	x8, x8, #0x1
  429114:	str	x8, [x23]
  429118:	bl	44a010 <argp_parse@@Base+0xf964>
  42911c:	ldr	x8, [sp, #32]
  429120:	mov	w9, #0x8                   	// #8
  429124:	b	429438 <wcrtomb@plt+0x24948>
  429128:	mov	w0, #0x20                  	// #32
  42912c:	bl	44a010 <argp_parse@@Base+0xf964>
  429130:	ldr	x8, [x21]
  429134:	str	xzr, [x0]
  429138:	mov	w10, #0x2                   	// #2
  42913c:	cmp	x8, #0x0
  429140:	csel	x8, x20, x8, eq  // eq = none
  429144:	str	x0, [x8]
  429148:	str	x0, [x21]
  42914c:	ldr	x8, [x23]
  429150:	ldr	x9, [sp, #32]
  429154:	str	w10, [x0, #8]
  429158:	b	4292a0 <wcrtomb@plt+0x247b0>
  42915c:	mov	w0, #0x20                  	// #32
  429160:	bl	44a010 <argp_parse@@Base+0xf964>
  429164:	ldr	x8, [x21]
  429168:	str	xzr, [x0]
  42916c:	mov	x24, x0
  429170:	cmp	x8, #0x0
  429174:	csel	x8, x20, x8, eq  // eq = none
  429178:	str	x0, [x8]
  42917c:	str	x0, [x21]
  429180:	ldr	x8, [x23]
  429184:	str	wzr, [x0, #8]
  429188:	mov	w0, #0x2                   	// #2
  42918c:	add	x8, x8, #0x1
  429190:	str	x8, [x23]
  429194:	bl	44a010 <argp_parse@@Base+0xf964>
  429198:	ldr	x8, [sp, #32]
  42919c:	mov	w9, #0x9                   	// #9
  4291a0:	b	429438 <wcrtomb@plt+0x24948>
  4291a4:	mov	w0, #0x20                  	// #32
  4291a8:	bl	44a010 <argp_parse@@Base+0xf964>
  4291ac:	ldr	x8, [x21]
  4291b0:	str	xzr, [x0]
  4291b4:	mov	x24, x0
  4291b8:	cmp	x8, #0x0
  4291bc:	csel	x8, x20, x8, eq  // eq = none
  4291c0:	str	x0, [x8]
  4291c4:	str	x0, [x21]
  4291c8:	ldr	x8, [x23]
  4291cc:	str	wzr, [x0, #8]
  4291d0:	mov	w0, #0x2                   	// #2
  4291d4:	add	x8, x8, #0x1
  4291d8:	str	x8, [x23]
  4291dc:	bl	44a010 <argp_parse@@Base+0xf964>
  4291e0:	ldr	x8, [sp, #32]
  4291e4:	mov	w9, #0x26                  	// #38
  4291e8:	b	429438 <wcrtomb@plt+0x24948>
  4291ec:	mov	w0, #0x20                  	// #32
  4291f0:	bl	44a010 <argp_parse@@Base+0xf964>
  4291f4:	ldr	x8, [x21]
  4291f8:	str	xzr, [x0]
  4291fc:	mov	x24, x0
  429200:	cmp	x8, #0x0
  429204:	csel	x8, x20, x8, eq  // eq = none
  429208:	str	x0, [x8]
  42920c:	str	x0, [x21]
  429210:	ldr	x8, [x23]
  429214:	str	wzr, [x0, #8]
  429218:	mov	w0, #0x2                   	// #2
  42921c:	add	x8, x8, #0x1
  429220:	str	x8, [x23]
  429224:	bl	44a010 <argp_parse@@Base+0xf964>
  429228:	ldr	x8, [sp, #32]
  42922c:	mov	w9, #0xb                   	// #11
  429230:	b	429438 <wcrtomb@plt+0x24948>
  429234:	mov	w0, #0x20                  	// #32
  429238:	bl	44a010 <argp_parse@@Base+0xf964>
  42923c:	ldr	x8, [x21]
  429240:	str	xzr, [x0]
  429244:	mov	w10, #0x2                   	// #2
  429248:	cmp	x8, #0x0
  42924c:	csel	x8, x20, x8, eq  // eq = none
  429250:	str	x0, [x8]
  429254:	str	x0, [x21]
  429258:	ldr	x8, [x23]
  42925c:	ldr	x9, [sp, #32]
  429260:	str	w10, [x0, #8]
  429264:	mov	w10, #0x3                   	// #3
  429268:	b	4292a0 <wcrtomb@plt+0x247b0>
  42926c:	mov	w0, #0x20                  	// #32
  429270:	bl	44a010 <argp_parse@@Base+0xf964>
  429274:	ldr	x8, [x21]
  429278:	str	xzr, [x0]
  42927c:	mov	w10, #0x2                   	// #2
  429280:	cmp	x8, #0x0
  429284:	csel	x8, x20, x8, eq  // eq = none
  429288:	str	x0, [x8]
  42928c:	str	x0, [x21]
  429290:	ldr	x8, [x23]
  429294:	ldr	x9, [sp, #32]
  429298:	str	w10, [x0, #8]
  42929c:	mov	w10, #0x1                   	// #1
  4292a0:	str	w10, [x0, #16]
  4292a4:	b	428f08 <wcrtomb@plt+0x24418>
  4292a8:	mov	w0, #0x20                  	// #32
  4292ac:	bl	44a010 <argp_parse@@Base+0xf964>
  4292b0:	ldr	x8, [x21]
  4292b4:	str	xzr, [x0]
  4292b8:	mov	x24, x0
  4292bc:	cmp	x8, #0x0
  4292c0:	csel	x8, x20, x8, eq  // eq = none
  4292c4:	str	x0, [x8]
  4292c8:	str	x0, [x21]
  4292cc:	ldr	x8, [x23]
  4292d0:	str	wzr, [x0, #8]
  4292d4:	mov	w0, #0x2                   	// #2
  4292d8:	add	x8, x8, #0x1
  4292dc:	str	x8, [x23]
  4292e0:	bl	44a010 <argp_parse@@Base+0xf964>
  4292e4:	ldr	x8, [sp, #32]
  4292e8:	mov	w9, #0xa                   	// #10
  4292ec:	b	429438 <wcrtomb@plt+0x24948>
  4292f0:	mov	w0, #0x20                  	// #32
  4292f4:	bl	44a010 <argp_parse@@Base+0xf964>
  4292f8:	ldr	x8, [x21]
  4292fc:	str	xzr, [x0]
  429300:	mov	w10, #0x2                   	// #2
  429304:	cmp	x8, #0x0
  429308:	csel	x8, x20, x8, eq  // eq = none
  42930c:	str	x0, [x8]
  429310:	str	x0, [x21]
  429314:	ldr	x8, [x23]
  429318:	ldr	x9, [sp, #32]
  42931c:	str	w10, [x0, #8]
  429320:	mov	w10, #0x4                   	// #4
  429324:	str	w10, [x0, #16]
  429328:	b	428f08 <wcrtomb@plt+0x24418>
  42932c:	mov	w0, #0x20                  	// #32
  429330:	bl	44a010 <argp_parse@@Base+0xf964>
  429334:	ldr	x8, [x21]
  429338:	str	xzr, [x0]
  42933c:	mov	w10, #0x2                   	// #2
  429340:	cmp	x8, #0x0
  429344:	csel	x8, x20, x8, eq  // eq = none
  429348:	str	x0, [x8]
  42934c:	str	x0, [x21]
  429350:	ldr	x8, [x23]
  429354:	ldr	x9, [sp, #32]
  429358:	str	w10, [x0, #8]
  42935c:	str	wzr, [x0, #16]
  429360:	b	428f08 <wcrtomb@plt+0x24418>
  429364:	mov	w0, #0x20                  	// #32
  429368:	bl	44a010 <argp_parse@@Base+0xf964>
  42936c:	ldr	x8, [x21]
  429370:	str	xzr, [x0]
  429374:	mov	x24, x0
  429378:	cmp	x8, #0x0
  42937c:	csel	x8, x20, x8, eq  // eq = none
  429380:	str	x0, [x8]
  429384:	str	x0, [x21]
  429388:	ldr	x8, [x23]
  42938c:	str	wzr, [x0, #8]
  429390:	mov	w0, #0x2                   	// #2
  429394:	add	x8, x8, #0x1
  429398:	str	x8, [x23]
  42939c:	bl	44a010 <argp_parse@@Base+0xf964>
  4293a0:	ldr	x8, [sp, #32]
  4293a4:	mov	w9, #0x5c                  	// #92
  4293a8:	b	429438 <wcrtomb@plt+0x24948>
  4293ac:	mov	w0, #0x20                  	// #32
  4293b0:	bl	44a010 <argp_parse@@Base+0xf964>
  4293b4:	ldr	x8, [x21]
  4293b8:	str	xzr, [x0]
  4293bc:	mov	x24, x0
  4293c0:	cmp	x8, #0x0
  4293c4:	csel	x8, x20, x8, eq  // eq = none
  4293c8:	str	x0, [x8]
  4293cc:	str	x0, [x21]
  4293d0:	ldr	x8, [x23]
  4293d4:	str	wzr, [x0, #8]
  4293d8:	mov	w0, #0x2                   	// #2
  4293dc:	add	x8, x8, #0x1
  4293e0:	str	x8, [x23]
  4293e4:	bl	44a010 <argp_parse@@Base+0xf964>
  4293e8:	ldr	x8, [sp, #32]
  4293ec:	mov	w9, #0x7                   	// #7
  4293f0:	b	429438 <wcrtomb@plt+0x24948>
  4293f4:	mov	w0, #0x20                  	// #32
  4293f8:	bl	44a010 <argp_parse@@Base+0xf964>
  4293fc:	ldr	x8, [x21]
  429400:	str	xzr, [x0]
  429404:	mov	x24, x0
  429408:	cmp	x8, #0x0
  42940c:	csel	x8, x20, x8, eq  // eq = none
  429410:	str	x0, [x8]
  429414:	str	x0, [x21]
  429418:	ldr	x8, [x23]
  42941c:	str	wzr, [x0, #8]
  429420:	mov	w0, #0x2                   	// #2
  429424:	add	x8, x8, #0x1
  429428:	str	x8, [x23]
  42942c:	bl	44a010 <argp_parse@@Base+0xf964>
  429430:	ldr	x8, [sp, #32]
  429434:	mov	w9, #0xc                   	// #12
  429438:	strh	w9, [x0]
  42943c:	mov	w9, #0x1                   	// #1
  429440:	stp	x0, x9, [x24, #16]
  429444:	add	x8, x8, #0x1
  429448:	b	428f14 <wcrtomb@plt+0x24424>
  42944c:	ldr	w25, [sp, #4]
  429450:	cmp	w8, w25
  429454:	b.ne	4294a8 <wcrtomb@plt+0x249b8>  // b.any
  429458:	mov	w0, #0x20                  	// #32
  42945c:	bl	44a010 <argp_parse@@Base+0xf964>
  429460:	ldr	x8, [x21]
  429464:	str	xzr, [x0]
  429468:	mov	x24, x0
  42946c:	cmp	x8, #0x0
  429470:	csel	x8, x20, x8, eq  // eq = none
  429474:	str	x0, [x8]
  429478:	str	x0, [x21]
  42947c:	ldr	x8, [x23]
  429480:	str	wzr, [x0, #8]
  429484:	mov	w0, #0x2                   	// #2
  429488:	add	x8, x8, #0x1
  42948c:	str	x8, [x23]
  429490:	bl	44a010 <argp_parse@@Base+0xf964>
  429494:	strb	w25, [x0]
  429498:	strb	wzr, [x0, #1]
  42949c:	str	x0, [x24, #16]
  4294a0:	mov	w8, #0x1                   	// #1
  4294a4:	b	429504 <wcrtomb@plt+0x24a14>
  4294a8:	mov	w9, #0x5c                  	// #92
  4294ac:	mov	w0, #0x20                  	// #32
  4294b0:	strb	w9, [sp, #28]
  4294b4:	strb	w8, [sp, #29]
  4294b8:	bl	44a010 <argp_parse@@Base+0xf964>
  4294bc:	ldr	x8, [x21]
  4294c0:	str	xzr, [x0]
  4294c4:	mov	x24, x0
  4294c8:	cmp	x8, #0x0
  4294cc:	csel	x8, x20, x8, eq  // eq = none
  4294d0:	str	x0, [x8]
  4294d4:	str	x0, [x21]
  4294d8:	ldr	x8, [x23]
  4294dc:	str	wzr, [x0, #8]
  4294e0:	mov	w0, #0x3                   	// #3
  4294e4:	add	x8, x8, #0x1
  4294e8:	str	x8, [x23]
  4294ec:	bl	44a010 <argp_parse@@Base+0xf964>
  4294f0:	ldrh	w8, [sp, #28]
  4294f4:	strb	wzr, [x0, #2]
  4294f8:	str	x0, [x24, #16]
  4294fc:	strh	w8, [x0]
  429500:	mov	w8, #0x2                   	// #2
  429504:	str	x8, [x24, #24]
  429508:	ldr	x8, [sp, #32]
  42950c:	b	429444 <wcrtomb@plt+0x24954>
  429510:	subs	x22, x8, x24
  429514:	b.eq	429570 <wcrtomb@plt+0x24a80>  // b.none
  429518:	mov	w0, #0x20                  	// #32
  42951c:	bl	44a010 <argp_parse@@Base+0xf964>
  429520:	ldr	x8, [x21]
  429524:	str	xzr, [x0]
  429528:	mov	x25, x0
  42952c:	cmp	x8, #0x0
  429530:	csel	x8, x20, x8, eq  // eq = none
  429534:	str	x0, [x8]
  429538:	str	x0, [x21]
  42953c:	ldr	x8, [x23]
  429540:	str	wzr, [x0, #8]
  429544:	add	x0, x22, #0x1
  429548:	add	x8, x8, #0x1
  42954c:	str	x8, [x23]
  429550:	bl	44a010 <argp_parse@@Base+0xf964>
  429554:	mov	x1, x24
  429558:	mov	x2, x22
  42955c:	mov	x26, x0
  429560:	str	x0, [x25, #16]
  429564:	bl	403e80 <memcpy@plt>
  429568:	strb	wzr, [x26, x22]
  42956c:	str	x22, [x25, #24]
  429570:	ldr	x0, [sp, #16]
  429574:	bl	4046b0 <free@plt>
  429578:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42957c:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  429580:	add	x20, x20, #0x850
  429584:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  429588:	add	x21, x21, #0xe68
  42958c:	b	428bec <wcrtomb@plt+0x240fc>
  429590:	add	sp, sp, #0x230
  429594:	ldp	x20, x19, [sp, #80]
  429598:	ldp	x22, x21, [sp, #64]
  42959c:	ldp	x24, x23, [sp, #48]
  4295a0:	ldp	x26, x25, [sp, #32]
  4295a4:	ldp	x28, x27, [sp, #16]
  4295a8:	ldp	x29, x30, [sp], #96
  4295ac:	ret
  4295b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4295b4:	ldr	x8, [x8, #4000]
  4295b8:	cbz	x8, 4295c0 <wcrtomb@plt+0x24ad0>
  4295bc:	blr	x8
  4295c0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4295c4:	add	x1, x1, #0x771
  4295c8:	mov	w2, #0x5                   	// #5
  4295cc:	mov	x0, xzr
  4295d0:	bl	4048b0 <dcgettext@plt>
  4295d4:	ldrb	w3, [x19]
  4295d8:	mov	x2, x0
  4295dc:	mov	w0, wzr
  4295e0:	mov	w1, wzr
  4295e4:	bl	403f60 <error@plt>
  4295e8:	mov	w0, #0x2                   	// #2
  4295ec:	bl	42484c <wcrtomb@plt+0x1fd5c>
  4295f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4295f4:	ldr	x8, [x8, #4000]
  4295f8:	cbz	x8, 429600 <wcrtomb@plt+0x24b10>
  4295fc:	blr	x8
  429600:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  429604:	add	x1, x1, #0x7a9
  429608:	b	4295c8 <wcrtomb@plt+0x24ad8>
  42960c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429610:	ldr	x8, [x8, #4000]
  429614:	cbz	x8, 42961c <wcrtomb@plt+0x24b2c>
  429618:	blr	x8
  42961c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  429620:	add	x1, x1, #0x7f3
  429624:	b	429640 <wcrtomb@plt+0x24b50>
  429628:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42962c:	ldr	x8, [x8, #4000]
  429630:	cbz	x8, 429638 <wcrtomb@plt+0x24b48>
  429634:	blr	x8
  429638:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42963c:	add	x1, x1, #0x78c
  429640:	mov	w2, #0x5                   	// #5
  429644:	mov	x0, xzr
  429648:	bl	4048b0 <dcgettext@plt>
  42964c:	mov	x2, x0
  429650:	mov	w0, wzr
  429654:	mov	w1, wzr
  429658:	bl	403f60 <error@plt>
  42965c:	mov	w0, #0x2                   	// #2
  429660:	bl	42484c <wcrtomb@plt+0x1fd5c>
  429664:	add	x2, sp, #0x20
  429668:	mov	w3, #0x200                 	// #512
  42966c:	mov	x1, x23
  429670:	bl	44cf88 <_obstack_memory_used@@Base+0x1dc4>
  429674:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429678:	ldr	x8, [x8, #4000]
  42967c:	cbz	x8, 429684 <wcrtomb@plt+0x24b94>
  429680:	blr	x8
  429684:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  429688:	add	x1, x1, #0x7d2
  42968c:	mov	w2, #0x5                   	// #5
  429690:	mov	x0, xzr
  429694:	bl	4048b0 <dcgettext@plt>
  429698:	mov	x2, x0
  42969c:	add	x3, sp, #0x20
  4296a0:	mov	w0, wzr
  4296a4:	mov	w1, wzr
  4296a8:	bl	403f60 <error@plt>
  4296ac:	mov	w0, #0x2                   	// #2
  4296b0:	bl	42484c <wcrtomb@plt+0x1fd5c>
  4296b4:	sub	sp, sp, #0x90
  4296b8:	stp	x29, x30, [sp, #48]
  4296bc:	stp	x28, x27, [sp, #64]
  4296c0:	stp	x26, x25, [sp, #80]
  4296c4:	stp	x24, x23, [sp, #96]
  4296c8:	stp	x22, x21, [sp, #112]
  4296cc:	stp	x20, x19, [sp, #128]
  4296d0:	stp	x3, x0, [sp]
  4296d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4296d8:	ldrb	w8, [x8, #2120]
  4296dc:	ldr	x22, [x0]
  4296e0:	add	x29, sp, #0x30
  4296e4:	str	x2, [sp, #16]
  4296e8:	stur	w1, [x29, #-20]
  4296ec:	tbnz	w8, #0, 429720 <wcrtomb@plt+0x24c30>
  4296f0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4296f4:	add	x19, x19, #0x848
  4296f8:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  4296fc:	adrp	x4, 404000 <localtime_r@plt>
  429700:	add	x3, x3, #0x10
  429704:	add	x0, x19, #0x28
  429708:	add	x4, x4, #0x6b0
  42970c:	mov	x1, xzr
  429710:	mov	x2, xzr
  429714:	bl	44ae4c <_obstack_begin@@Base>
  429718:	mov	w8, #0x1                   	// #1
  42971c:	strb	w8, [x19]
  429720:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429724:	ldr	x23, [x8, #2128]
  429728:	cbz	x23, 429bc4 <wcrtomb@plt+0x250d4>
  42972c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429730:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429734:	mov	w8, wzr
  429738:	add	x19, x19, #0x888
  42973c:	add	x20, x20, #0x878
  429740:	b	4297a8 <wcrtomb@plt+0x24cb8>
  429744:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429748:	add	x9, x8, #0x1
  42974c:	add	x20, x20, #0x880
  429750:	mov	x0, x25
  429754:	str	x9, [x20, #8]
  429758:	strb	wzr, [x8]
  42975c:	bl	4046b0 <free@plt>
  429760:	ldp	x22, x8, [x20]
  429764:	cmp	x8, x22
  429768:	b.eq	429ad8 <wcrtomb@plt+0x24fe8>  // b.none
  42976c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429770:	add	x20, x20, #0x878
  429774:	ldr	x9, [x20, #40]
  429778:	ldr	x10, [x20]
  42977c:	ldr	x11, [x20, #24]
  429780:	add	x8, x9, x8
  429784:	bic	x8, x8, x9
  429788:	sub	x12, x11, x10
  42978c:	sub	x9, x8, x10
  429790:	cmp	x9, x12
  429794:	csel	x8, x11, x8, hi  // hi = pmore
  429798:	stp	x8, x8, [x20, #8]
  42979c:	mov	w8, #0x1                   	// #1
  4297a0:	ldr	x23, [x23]
  4297a4:	cbz	x23, 429b74 <wcrtomb@plt+0x25084>
  4297a8:	ldr	w9, [x23, #12]
  4297ac:	ldur	w10, [x29, #-20]
  4297b0:	tst	w9, w10
  4297b4:	b.eq	4297a0 <wcrtomb@plt+0x24cb0>  // b.none
  4297b8:	ldr	x8, [x23, #72]
  4297bc:	lsl	x8, x8, #4
  4297c0:	add	x0, x8, #0x10
  4297c4:	bl	44a010 <argp_parse@@Base+0xf964>
  4297c8:	ldrb	w8, [x22]
  4297cc:	mov	x25, x0
  4297d0:	cbz	w8, 429b44 <wcrtomb@plt+0x25054>
  4297d4:	mov	x24, xzr
  4297d8:	mov	w27, wzr
  4297dc:	mov	w26, wzr
  4297e0:	add	x8, x23, #0x18
  4297e4:	stur	x8, [x29, #-8]
  4297e8:	b	429814 <wcrtomb@plt+0x24d24>
  4297ec:	mov	x1, x22
  4297f0:	mov	x2, x28
  4297f4:	bl	403e80 <memcpy@plt>
  4297f8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4297fc:	ldr	x8, [x9, #2184]
  429800:	add	x22, x22, x28
  429804:	add	x8, x8, x28
  429808:	str	x8, [x9, #2184]
  42980c:	ldrb	w8, [x22]
  429810:	cbz	w8, 429b44 <wcrtomb@plt+0x25054>
  429814:	ldr	x8, [x23, #72]
  429818:	ldur	x0, [x29, #-8]
  42981c:	mov	x1, x22
  429820:	mov	x3, x25
  429824:	add	x2, x8, #0x1
  429828:	mov	w4, wzr
  42982c:	bl	44d228 <_obstack_memory_used@@Base+0x2064>
  429830:	cbz	w0, 42989c <wcrtomb@plt+0x24dac>
  429834:	mov	x0, x22
  429838:	bl	403f00 <strlen@plt>
  42983c:	mov	x28, x0
  429840:	ldp	x0, x8, [x19]
  429844:	sub	x8, x8, x0
  429848:	cmp	x8, x28
  42984c:	b.cs	429870 <wcrtomb@plt+0x24d80>  // b.hs, b.nlast
  429850:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429854:	add	x19, x19, #0x870
  429858:	mov	x0, x19
  42985c:	mov	x1, x28
  429860:	bl	44afa0 <_obstack_newchunk@@Base>
  429864:	ldr	x0, [x19, #24]
  429868:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42986c:	add	x19, x19, #0x888
  429870:	mov	x1, x22
  429874:	mov	x2, x28
  429878:	bl	403e80 <memcpy@plt>
  42987c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429880:	ldr	x8, [x9, #2184]
  429884:	add	x8, x8, x28
  429888:	str	x8, [x9, #2184]
  42988c:	ldr	w8, [x23, #8]
  429890:	add	x22, x22, x28
  429894:	cbnz	w8, 42980c <wcrtomb@plt+0x24d1c>
  429898:	b	429aec <wcrtomb@plt+0x24ffc>
  42989c:	ldp	x20, x28, [x25]
  4298a0:	cbz	x20, 4298e8 <wcrtomb@plt+0x24df8>
  4298a4:	ldp	x0, x8, [x19]
  4298a8:	sub	x8, x8, x0
  4298ac:	cmp	x8, x20
  4298b0:	b.cs	4298cc <wcrtomb@plt+0x24ddc>  // b.hs, b.nlast
  4298b4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4298b8:	add	x21, x21, #0x870
  4298bc:	mov	x0, x21
  4298c0:	mov	x1, x20
  4298c4:	bl	44afa0 <_obstack_newchunk@@Base>
  4298c8:	ldr	x0, [x21, #24]
  4298cc:	mov	x1, x22
  4298d0:	mov	x2, x20
  4298d4:	bl	403e80 <memcpy@plt>
  4298d8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4298dc:	ldr	x8, [x9, #2184]
  4298e0:	add	x8, x8, x20
  4298e4:	str	x8, [x9, #2184]
  4298e8:	ldr	w8, [x23, #16]
  4298ec:	add	x24, x24, #0x1
  4298f0:	cbz	w8, 429928 <wcrtomb@plt+0x24e38>
  4298f4:	cmp	x24, x8
  4298f8:	b.cs	429928 <wcrtomb@plt+0x24e38>  // b.hs, b.nlast
  4298fc:	ldp	x0, x8, [x19]
  429900:	sub	x8, x8, x0
  429904:	cmp	x8, x28
  429908:	b.cs	4297ec <wcrtomb@plt+0x24cfc>  // b.hs, b.nlast
  42990c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429910:	add	x20, x20, #0x870
  429914:	mov	x0, x20
  429918:	mov	x1, x28
  42991c:	bl	44afa0 <_obstack_newchunk@@Base>
  429920:	ldr	x0, [x20, #24]
  429924:	b	4297ec <wcrtomb@plt+0x24cfc>
  429928:	stur	x24, [x29, #-16]
  42992c:	ldr	x24, [x23, #88]
  429930:	cbnz	x24, 429954 <wcrtomb@plt+0x24e64>
  429934:	ldur	x24, [x29, #-16]
  429938:	ldr	w8, [x23, #8]
  42993c:	add	x22, x22, x28
  429940:	cbnz	w8, 42980c <wcrtomb@plt+0x24d1c>
  429944:	b	429aec <wcrtomb@plt+0x24ffc>
  429948:	mov	w27, w8
  42994c:	ldr	x24, [x24]
  429950:	cbz	x24, 429934 <wcrtomb@plt+0x24e44>
  429954:	ldr	w8, [x24, #8]
  429958:	cmp	w8, #0x2
  42995c:	b.eq	4299ec <wcrtomb@plt+0x24efc>  // b.none
  429960:	cmp	w8, #0x1
  429964:	b.eq	429a30 <wcrtomb@plt+0x24f40>  // b.none
  429968:	cbnz	w8, 42994c <wcrtomb@plt+0x24e5c>
  42996c:	ldr	x21, [x24, #16]
  429970:	cbz	w27, 42999c <wcrtomb@plt+0x24eac>
  429974:	ldr	x2, [x24, #24]
  429978:	mov	w0, w27
  42997c:	mov	x1, x21
  429980:	bl	429ccc <wcrtomb@plt+0x251dc>
  429984:	sub	w8, w27, #0x1
  429988:	cmp	w8, #0x2
  42998c:	csel	w8, wzr, w26, cc  // cc = lo, ul, last
  429990:	mov	x21, x0
  429994:	csel	w27, w26, w27, cc  // cc = lo, ul, last
  429998:	mov	w26, w8
  42999c:	ldp	x0, x8, [x19]
  4299a0:	ldr	x20, [x24, #24]
  4299a4:	sub	x8, x8, x0
  4299a8:	cmp	x8, x20
  4299ac:	b.cs	4299d0 <wcrtomb@plt+0x24ee0>  // b.hs, b.nlast
  4299b0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4299b4:	add	x19, x19, #0x870
  4299b8:	mov	x0, x19
  4299bc:	mov	x1, x20
  4299c0:	bl	44afa0 <_obstack_newchunk@@Base>
  4299c4:	ldr	x0, [x19, #24]
  4299c8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4299cc:	add	x19, x19, #0x888
  4299d0:	mov	x1, x21
  4299d4:	mov	x2, x20
  4299d8:	bl	403e80 <memcpy@plt>
  4299dc:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4299e0:	ldr	x8, [x9, #2184]
  4299e4:	add	x8, x8, x20
  4299e8:	b	429ad0 <wcrtomb@plt+0x24fe0>
  4299ec:	ldr	w8, [x24, #16]
  4299f0:	cmp	w8, #0x4
  4299f4:	b.hi	42994c <wcrtomb@plt+0x24e5c>  // b.pmore
  4299f8:	mov	w9, #0x1                   	// #1
  4299fc:	lsl	w9, w9, w8
  429a00:	mov	w10, #0x19                  	// #25
  429a04:	tst	w9, w10
  429a08:	b.ne	429948 <wcrtomb@plt+0x24e58>  // b.any
  429a0c:	cmp	w26, #0x4
  429a10:	b.hi	429948 <wcrtomb@plt+0x24e58>  // b.pmore
  429a14:	mov	w9, #0x1                   	// #1
  429a18:	lsl	w9, w9, w26
  429a1c:	mov	w10, #0x19                  	// #25
  429a20:	tst	w9, w10
  429a24:	b.eq	429948 <wcrtomb@plt+0x24e58>  // b.none
  429a28:	mov	w26, w27
  429a2c:	b	429948 <wcrtomb@plt+0x24e58>
  429a30:	ldr	x9, [x24, #16]
  429a34:	lsl	x8, x9, #4
  429a38:	ldr	x8, [x25, x8]
  429a3c:	cmn	x8, #0x1
  429a40:	b.eq	42994c <wcrtomb@plt+0x24e5c>  // b.none
  429a44:	add	x9, x25, x9, lsl #4
  429a48:	ldr	x9, [x9, #8]
  429a4c:	cmn	x9, #0x1
  429a50:	b.eq	42994c <wcrtomb@plt+0x24e5c>  // b.none
  429a54:	sub	x21, x9, x8
  429a58:	add	x20, x22, x8
  429a5c:	cbz	w27, 429a88 <wcrtomb@plt+0x24f98>
  429a60:	mov	w0, w27
  429a64:	mov	x1, x20
  429a68:	mov	x2, x21
  429a6c:	bl	429ccc <wcrtomb@plt+0x251dc>
  429a70:	sub	w8, w27, #0x1
  429a74:	cmp	w8, #0x2
  429a78:	csel	w8, wzr, w26, cc  // cc = lo, ul, last
  429a7c:	mov	x20, x0
  429a80:	csel	w27, w26, w27, cc  // cc = lo, ul, last
  429a84:	mov	w26, w8
  429a88:	ldp	x0, x8, [x19]
  429a8c:	sub	x8, x8, x0
  429a90:	cmp	x8, x21
  429a94:	b.cs	429ab8 <wcrtomb@plt+0x24fc8>  // b.hs, b.nlast
  429a98:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429a9c:	add	x19, x19, #0x870
  429aa0:	mov	x0, x19
  429aa4:	mov	x1, x21
  429aa8:	bl	44afa0 <_obstack_newchunk@@Base>
  429aac:	ldr	x0, [x19, #24]
  429ab0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429ab4:	add	x19, x19, #0x888
  429ab8:	mov	x1, x20
  429abc:	mov	x2, x21
  429ac0:	bl	403e80 <memcpy@plt>
  429ac4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429ac8:	ldr	x8, [x9, #2184]
  429acc:	add	x8, x8, x21
  429ad0:	str	x8, [x9, #2184]
  429ad4:	b	42994c <wcrtomb@plt+0x24e5c>
  429ad8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429adc:	ldrb	w9, [x10, #2240]
  429ae0:	orr	w9, w9, #0x2
  429ae4:	strb	w9, [x10, #2240]
  429ae8:	b	42976c <wcrtomb@plt+0x24c7c>
  429aec:	mov	x0, x22
  429af0:	bl	403f00 <strlen@plt>
  429af4:	mov	x20, x0
  429af8:	ldp	x0, x8, [x19]
  429afc:	sub	x8, x8, x0
  429b00:	cmp	x8, x20
  429b04:	b.cs	429b28 <wcrtomb@plt+0x25038>  // b.hs, b.nlast
  429b08:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429b0c:	add	x19, x19, #0x870
  429b10:	mov	x0, x19
  429b14:	mov	x1, x20
  429b18:	bl	44afa0 <_obstack_newchunk@@Base>
  429b1c:	ldr	x0, [x19, #24]
  429b20:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429b24:	add	x19, x19, #0x888
  429b28:	mov	x1, x22
  429b2c:	mov	x2, x20
  429b30:	bl	403e80 <memcpy@plt>
  429b34:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429b38:	ldr	x8, [x9, #2184]
  429b3c:	add	x8, x8, x20
  429b40:	str	x8, [x9, #2184]
  429b44:	ldp	x8, x9, [x19]
  429b48:	cmp	x9, x8
  429b4c:	b.ne	429744 <wcrtomb@plt+0x24c54>  // b.any
  429b50:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429b54:	add	x19, x19, #0x870
  429b58:	mov	w1, #0x1                   	// #1
  429b5c:	mov	x0, x19
  429b60:	bl	44afa0 <_obstack_newchunk@@Base>
  429b64:	ldr	x8, [x19, #24]
  429b68:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429b6c:	add	x19, x19, #0x888
  429b70:	b	429744 <wcrtomb@plt+0x24c54>
  429b74:	tbz	w8, #0, 429bc4 <wcrtomb@plt+0x250d4>
  429b78:	ldr	x8, [sp, #16]
  429b7c:	mov	x1, x22
  429b80:	cbz	x8, 429b94 <wcrtomb@plt+0x250a4>
  429b84:	ldr	x1, [sp]
  429b88:	mov	x0, x22
  429b8c:	blr	x8
  429b90:	mov	x1, x0
  429b94:	ldr	x0, [sp, #8]
  429b98:	bl	41b60c <wcrtomb@plt+0x16b1c>
  429b9c:	ldr	x8, [x20]
  429ba0:	cmp	x22, x8
  429ba4:	b.ls	429bfc <wcrtomb@plt+0x2510c>  // b.plast
  429ba8:	ldr	x8, [x20, #24]
  429bac:	cmp	x22, x8
  429bb0:	b.cs	429bfc <wcrtomb@plt+0x2510c>  // b.hs, b.nlast
  429bb4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429bb8:	add	x8, x8, #0x880
  429bbc:	stp	x22, x22, [x8]
  429bc0:	b	429c0c <wcrtomb@plt+0x2511c>
  429bc4:	ldr	x8, [sp, #16]
  429bc8:	cbz	x8, 429bf4 <wcrtomb@plt+0x25104>
  429bcc:	ldp	x1, x19, [sp]
  429bd0:	mov	x0, x22
  429bd4:	str	xzr, [x19]
  429bd8:	blr	x8
  429bdc:	mov	x1, x0
  429be0:	mov	x0, x19
  429be4:	bl	41b60c <wcrtomb@plt+0x16b1c>
  429be8:	mov	x0, x22
  429bec:	bl	4046b0 <free@plt>
  429bf0:	b	429c0c <wcrtomb@plt+0x2511c>
  429bf4:	mov	w0, wzr
  429bf8:	b	429c10 <wcrtomb@plt+0x25120>
  429bfc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429c00:	add	x0, x0, #0x870
  429c04:	mov	x1, x22
  429c08:	bl	44b118 <_obstack_free@@Base>
  429c0c:	mov	w0, #0x1                   	// #1
  429c10:	ldp	x20, x19, [sp, #128]
  429c14:	ldp	x22, x21, [sp, #112]
  429c18:	ldp	x24, x23, [sp, #96]
  429c1c:	ldp	x26, x25, [sp, #80]
  429c20:	ldp	x28, x27, [sp, #64]
  429c24:	ldp	x29, x30, [sp, #48]
  429c28:	add	sp, sp, #0x90
  429c2c:	ret
  429c30:	mov	x2, xzr
  429c34:	mov	x3, xzr
  429c38:	b	4296b4 <wcrtomb@plt+0x24bc4>
  429c3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429c40:	ldr	x8, [x8, #2128]
  429c44:	cmp	x8, #0x0
  429c48:	cset	w0, ne  // ne = any
  429c4c:	ret
  429c50:	sub	w9, w1, #0x48
  429c54:	cmp	w9, #0x2b
  429c58:	mov	w8, #0x1                   	// #1
  429c5c:	b.hi	429cc4 <wcrtomb@plt+0x251d4>  // b.pmore
  429c60:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x1be3c>
  429c64:	add	x10, x10, #0x73a
  429c68:	adr	x11, 429c78 <wcrtomb@plt+0x25188>
  429c6c:	ldrb	w12, [x10, x9]
  429c70:	add	x11, x11, x12, lsl #2
  429c74:	br	x11
  429c78:	ldr	w8, [x0]
  429c7c:	and	w9, w8, #0xfffffffd
  429c80:	b	429cbc <wcrtomb@plt+0x251cc>
  429c84:	ldr	w8, [x0]
  429c88:	and	w9, w8, #0xfffffffe
  429c8c:	b	429cbc <wcrtomb@plt+0x251cc>
  429c90:	ldr	w8, [x0]
  429c94:	and	w9, w8, #0xfffffffb
  429c98:	b	429cbc <wcrtomb@plt+0x251cc>
  429c9c:	ldr	w8, [x0]
  429ca0:	orr	w9, w8, #0x2
  429ca4:	b	429cbc <wcrtomb@plt+0x251cc>
  429ca8:	ldr	w8, [x0]
  429cac:	orr	w9, w8, #0x1
  429cb0:	b	429cbc <wcrtomb@plt+0x251cc>
  429cb4:	ldr	w8, [x0]
  429cb8:	orr	w9, w8, #0x4
  429cbc:	mov	w8, wzr
  429cc0:	str	w9, [x0]
  429cc4:	mov	w0, w8
  429cc8:	ret
  429ccc:	stp	x29, x30, [sp, #-48]!
  429cd0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429cd4:	ldr	x8, [x8, #2152]
  429cd8:	stp	x22, x21, [sp, #16]
  429cdc:	stp	x20, x19, [sp, #32]
  429ce0:	mov	x20, x2
  429ce4:	mov	x19, x1
  429ce8:	cmp	x8, x2
  429cec:	mov	w21, w0
  429cf0:	mov	x29, sp
  429cf4:	b.cs	429d18 <wcrtomb@plt+0x25228>  // b.hs, b.nlast
  429cf8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429cfc:	add	x22, x22, #0x860
  429d00:	ldr	x0, [x22]
  429d04:	mov	x1, x20
  429d08:	str	x20, [x22, #8]
  429d0c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  429d10:	str	x0, [x22]
  429d14:	b	429d20 <wcrtomb@plt+0x25230>
  429d18:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429d1c:	ldr	x0, [x8, #2144]
  429d20:	mov	x1, x19
  429d24:	mov	x2, x20
  429d28:	bl	403e80 <memcpy@plt>
  429d2c:	sub	w8, w21, #0x1
  429d30:	cmp	w8, #0x3
  429d34:	b.hi	429d58 <wcrtomb@plt+0x25268>  // b.pmore
  429d38:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  429d3c:	add	x9, x9, #0x766
  429d40:	adr	x10, 429d50 <wcrtomb@plt+0x25260>
  429d44:	ldrb	w11, [x9, x8]
  429d48:	add	x10, x10, x11, lsl #2
  429d4c:	br	x10
  429d50:	bl	404460 <__ctype_toupper_loc@plt>
  429d54:	b	429d68 <wcrtomb@plt+0x25278>
  429d58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429d5c:	ldr	x19, [x8, #2144]
  429d60:	b	429df0 <wcrtomb@plt+0x25300>
  429d64:	bl	404100 <__ctype_tolower_loc@plt>
  429d68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429d6c:	ldr	x19, [x8, #2144]
  429d70:	ldr	x8, [x0]
  429d74:	ldrb	w9, [x19]
  429d78:	ldr	w8, [x8, x9, lsl #2]
  429d7c:	strb	w8, [x19]
  429d80:	b	429df0 <wcrtomb@plt+0x25300>
  429d84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429d88:	ldr	x19, [x8, #2144]
  429d8c:	cmp	x20, #0x1
  429d90:	b.lt	429df0 <wcrtomb@plt+0x25300>  // b.tstop
  429d94:	add	x20, x19, x20
  429d98:	bl	404460 <__ctype_toupper_loc@plt>
  429d9c:	mov	x8, x19
  429da0:	ldr	x9, [x0]
  429da4:	ldrb	w10, [x8]
  429da8:	ldr	w9, [x9, x10, lsl #2]
  429dac:	strb	w9, [x8], #1
  429db0:	cmp	x8, x20
  429db4:	b.cc	429da0 <wcrtomb@plt+0x252b0>  // b.lo, b.ul, b.last
  429db8:	b	429df0 <wcrtomb@plt+0x25300>
  429dbc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429dc0:	ldr	x19, [x8, #2144]
  429dc4:	cmp	x20, #0x1
  429dc8:	b.lt	429df0 <wcrtomb@plt+0x25300>  // b.tstop
  429dcc:	add	x20, x19, x20
  429dd0:	bl	404100 <__ctype_tolower_loc@plt>
  429dd4:	mov	x8, x19
  429dd8:	ldr	x9, [x0]
  429ddc:	ldrb	w10, [x8]
  429de0:	ldr	w9, [x9, x10, lsl #2]
  429de4:	strb	w9, [x8], #1
  429de8:	cmp	x8, x20
  429dec:	b.cc	429dd8 <wcrtomb@plt+0x252e8>  // b.lo, b.ul, b.last
  429df0:	mov	x0, x19
  429df4:	ldp	x20, x19, [sp, #32]
  429df8:	ldp	x22, x21, [sp, #16]
  429dfc:	ldp	x29, x30, [sp], #48
  429e00:	ret
  429e04:	stp	x29, x30, [sp, #-32]!
  429e08:	mov	w0, #0x1                   	// #1
  429e0c:	stp	x20, x19, [sp, #16]
  429e10:	mov	x29, sp
  429e14:	bl	429e44 <wcrtomb@plt+0x25354>
  429e18:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429e1c:	ldr	x0, [x19, #2248]
  429e20:	cbz	x0, 429e38 <wcrtomb@plt+0x25348>
  429e24:	ldr	x20, [x0]
  429e28:	bl	4046b0 <free@plt>
  429e2c:	mov	x0, x20
  429e30:	str	x20, [x19, #2248]
  429e34:	cbnz	x20, 429e24 <wcrtomb@plt+0x25334>
  429e38:	ldp	x20, x19, [sp, #16]
  429e3c:	ldp	x29, x30, [sp], #32
  429e40:	ret
  429e44:	stp	x29, x30, [sp, #-96]!
  429e48:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429e4c:	stp	x28, x27, [sp, #16]
  429e50:	stp	x26, x25, [sp, #32]
  429e54:	stp	x24, x23, [sp, #48]
  429e58:	stp	x22, x21, [sp, #64]
  429e5c:	stp	x20, x19, [sp, #80]
  429e60:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429e64:	add	x9, x9, #0x8d0
  429e68:	ldr	w19, [x8, #2992]
  429e6c:	mov	x8, x9
  429e70:	ldr	x28, [x8], #8
  429e74:	mov	x29, sp
  429e78:	cbz	x28, 42a1a8 <wcrtomb@plt+0x256b8>
  429e7c:	mov	w20, w0
  429e80:	tbz	w0, #0, 42a088 <wcrtomb@plt+0x25598>
  429e84:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429e88:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x18e3c>
  429e8c:	mov	x27, xzr
  429e90:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  429e94:	add	x25, x25, #0x8c8
  429e98:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429e9c:	add	x21, x21, #0xfda
  429ea0:	b	429eac <wcrtomb@plt+0x253bc>
  429ea4:	str	x28, [x26, #2256]
  429ea8:	cbz	x28, 429fb0 <wcrtomb@plt+0x254c0>
  429eac:	mov	x24, x28
  429eb0:	ldr	w0, [x24, #8]
  429eb4:	ldr	x28, [x28]
  429eb8:	bl	41cd90 <wcrtomb@plt+0x182a0>
  429ebc:	ldrb	w8, [x24, #24]
  429ec0:	cbz	w8, 429f28 <wcrtomb@plt+0x25438>
  429ec4:	ldr	w8, [x24, #8]
  429ec8:	ldr	x22, [x24, #16]
  429ecc:	cbz	w8, 429ee8 <wcrtomb@plt+0x253f8>
  429ed0:	ldrb	w8, [x22]
  429ed4:	cbz	w8, 429f58 <wcrtomb@plt+0x25468>
  429ed8:	mov	x0, x22
  429edc:	mov	x1, x21
  429ee0:	bl	404610 <strcmp@plt>
  429ee4:	cbz	w0, 429f64 <wcrtomb@plt+0x25474>
  429ee8:	ldr	w0, [x23, #1864]
  429eec:	mov	w2, #0x200                 	// #512
  429ef0:	mov	x1, x22
  429ef4:	bl	404070 <unlinkat@plt>
  429ef8:	cbz	w0, 429f84 <wcrtomb@plt+0x25494>
  429efc:	bl	4049c0 <__errno_location@plt>
  429f00:	ldr	w8, [x0]
  429f04:	cmp	w8, #0x2
  429f08:	b.eq	429f84 <wcrtomb@plt+0x25494>  // b.none
  429f0c:	cmp	w8, #0x11
  429f10:	b.eq	429f70 <wcrtomb@plt+0x25480>  // b.none
  429f14:	cmp	w8, #0x27
  429f18:	b.ne	429f7c <wcrtomb@plt+0x2548c>  // b.any
  429f1c:	mov	x27, x24
  429f20:	cbnz	x28, 429eac <wcrtomb@plt+0x253bc>
  429f24:	b	429fb0 <wcrtomb@plt+0x254c0>
  429f28:	ldr	w0, [x23, #1864]
  429f2c:	ldr	x1, [x24, #16]
  429f30:	mov	w2, wzr
  429f34:	bl	404070 <unlinkat@plt>
  429f38:	cbz	w0, 429f84 <wcrtomb@plt+0x25494>
  429f3c:	bl	4049c0 <__errno_location@plt>
  429f40:	ldr	w8, [x0]
  429f44:	cmp	w8, #0x2
  429f48:	b.eq	429f84 <wcrtomb@plt+0x25494>  // b.none
  429f4c:	ldr	x0, [x24, #16]
  429f50:	bl	42d6d4 <wcrtomb@plt+0x28be4>
  429f54:	b	429f84 <wcrtomb@plt+0x25494>
  429f58:	mov	x27, x24
  429f5c:	cbnz	x28, 429eac <wcrtomb@plt+0x253bc>
  429f60:	b	429fb0 <wcrtomb@plt+0x254c0>
  429f64:	mov	x27, x24
  429f68:	cbnz	x28, 429eac <wcrtomb@plt+0x253bc>
  429f6c:	b	429fb0 <wcrtomb@plt+0x254c0>
  429f70:	mov	x27, x24
  429f74:	cbnz	x28, 429eac <wcrtomb@plt+0x253bc>
  429f78:	b	429fb0 <wcrtomb@plt+0x254c0>
  429f7c:	mov	x0, x22
  429f80:	bl	42d098 <wcrtomb@plt+0x285a8>
  429f84:	ldr	x0, [x24, #16]
  429f88:	bl	4046b0 <free@plt>
  429f8c:	ldr	x8, [x25]
  429f90:	str	x8, [x24]
  429f94:	ldr	x8, [x25, #24]
  429f98:	str	x24, [x25]
  429f9c:	sub	x8, x8, #0x1
  429fa0:	str	x8, [x25, #24]
  429fa4:	cbz	x27, 429ea4 <wcrtomb@plt+0x253b4>
  429fa8:	str	x28, [x27]
  429fac:	cbnz	x28, 429eac <wcrtomb@plt+0x253bc>
  429fb0:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429fb4:	add	x26, x26, #0x8d0
  429fb8:	mov	x8, x26
  429fbc:	ldr	x22, [x8], #8
  429fc0:	cbz	x22, 42a1a8 <wcrtomb@plt+0x256b8>
  429fc4:	tbz	w20, #0, 42a1ac <wcrtomb@plt+0x256bc>
  429fc8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  429fcc:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x18e3c>
  429fd0:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  429fd4:	add	x24, x24, #0x8c8
  429fd8:	add	x20, x20, #0xfda
  429fdc:	b	42a004 <wcrtomb@plt+0x25514>
  429fe0:	ldr	x0, [x25, #16]
  429fe4:	bl	4046b0 <free@plt>
  429fe8:	ldr	x8, [x24]
  429fec:	str	x8, [x25]
  429ff0:	ldr	x8, [x24, #24]
  429ff4:	str	x25, [x24]
  429ff8:	sub	x8, x8, #0x1
  429ffc:	str	x8, [x24, #24]
  42a000:	cbz	x22, 42a1a0 <wcrtomb@plt+0x256b0>
  42a004:	mov	x25, x22
  42a008:	ldr	w0, [x25, #8]
  42a00c:	ldr	x22, [x22]
  42a010:	bl	41cd90 <wcrtomb@plt+0x182a0>
  42a014:	ldr	w8, [x25, #8]
  42a018:	cbz	w8, 42a03c <wcrtomb@plt+0x2554c>
  42a01c:	ldrb	w8, [x25, #24]
  42a020:	cbz	w8, 42a03c <wcrtomb@plt+0x2554c>
  42a024:	ldr	x0, [x25, #16]
  42a028:	ldrb	w8, [x0]
  42a02c:	cbz	w8, 42a044 <wcrtomb@plt+0x25554>
  42a030:	mov	x1, x20
  42a034:	bl	404610 <strcmp@plt>
  42a038:	cbz	w0, 42a044 <wcrtomb@plt+0x25554>
  42a03c:	ldr	x21, [x25, #16]
  42a040:	b	42a058 <wcrtomb@plt+0x25568>
  42a044:	bl	41cf34 <wcrtomb@plt+0x18444>
  42a048:	ldr	w8, [x25, #8]
  42a04c:	mov	x21, x0
  42a050:	sub	w0, w8, #0x1
  42a054:	bl	41cd90 <wcrtomb@plt+0x182a0>
  42a058:	ldr	w0, [x23, #1864]
  42a05c:	mov	w2, #0x200                 	// #512
  42a060:	mov	x1, x21
  42a064:	bl	404070 <unlinkat@plt>
  42a068:	cbz	w0, 429fe0 <wcrtomb@plt+0x254f0>
  42a06c:	bl	4049c0 <__errno_location@plt>
  42a070:	ldr	w8, [x0]
  42a074:	cmp	w8, #0x2
  42a078:	b.eq	429fe0 <wcrtomb@plt+0x254f0>  // b.none
  42a07c:	mov	x0, x21
  42a080:	bl	42d098 <wcrtomb@plt+0x285a8>
  42a084:	b	429fe0 <wcrtomb@plt+0x254f0>
  42a088:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a08c:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42a090:	mov	x23, xzr
  42a094:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a098:	adrp	x26, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  42a09c:	add	x27, x27, #0x8c8
  42a0a0:	add	x21, x21, #0xfda
  42a0a4:	b	42a0b0 <wcrtomb@plt+0x255c0>
  42a0a8:	mov	x23, x24
  42a0ac:	cbz	x28, 429fb0 <wcrtomb@plt+0x254c0>
  42a0b0:	ldr	x8, [x25, #2848]
  42a0b4:	ldr	x9, [x28, #32]
  42a0b8:	mov	x24, x28
  42a0bc:	ldr	x28, [x28]
  42a0c0:	cmp	x8, x9
  42a0c4:	b.ls	42a0a8 <wcrtomb@plt+0x255b8>  // b.plast
  42a0c8:	ldr	w0, [x24, #8]
  42a0cc:	bl	41cd90 <wcrtomb@plt+0x182a0>
  42a0d0:	ldrb	w8, [x24, #24]
  42a0d4:	cbz	w8, 42a13c <wcrtomb@plt+0x2564c>
  42a0d8:	ldr	w8, [x24, #8]
  42a0dc:	ldr	x22, [x24, #16]
  42a0e0:	cbz	w8, 42a0fc <wcrtomb@plt+0x2560c>
  42a0e4:	ldrb	w8, [x22]
  42a0e8:	cbz	w8, 42a0a8 <wcrtomb@plt+0x255b8>
  42a0ec:	mov	x0, x22
  42a0f0:	mov	x1, x21
  42a0f4:	bl	404610 <strcmp@plt>
  42a0f8:	cbz	w0, 42a0a8 <wcrtomb@plt+0x255b8>
  42a0fc:	ldr	w0, [x26, #1864]
  42a100:	mov	w2, #0x200                 	// #512
  42a104:	mov	x1, x22
  42a108:	bl	404070 <unlinkat@plt>
  42a10c:	cbz	w0, 42a168 <wcrtomb@plt+0x25678>
  42a110:	bl	4049c0 <__errno_location@plt>
  42a114:	ldr	w8, [x0]
  42a118:	cmp	w8, #0x2
  42a11c:	b.eq	42a168 <wcrtomb@plt+0x25678>  // b.none
  42a120:	cmp	w8, #0x11
  42a124:	b.eq	42a0a8 <wcrtomb@plt+0x255b8>  // b.none
  42a128:	cmp	w8, #0x27
  42a12c:	b.eq	42a0a8 <wcrtomb@plt+0x255b8>  // b.none
  42a130:	mov	x0, x22
  42a134:	bl	42d098 <wcrtomb@plt+0x285a8>
  42a138:	b	42a168 <wcrtomb@plt+0x25678>
  42a13c:	ldr	w0, [x26, #1864]
  42a140:	ldr	x1, [x24, #16]
  42a144:	mov	w2, wzr
  42a148:	bl	404070 <unlinkat@plt>
  42a14c:	cbz	w0, 42a168 <wcrtomb@plt+0x25678>
  42a150:	bl	4049c0 <__errno_location@plt>
  42a154:	ldr	w8, [x0]
  42a158:	cmp	w8, #0x2
  42a15c:	b.eq	42a168 <wcrtomb@plt+0x25678>  // b.none
  42a160:	ldr	x0, [x24, #16]
  42a164:	bl	42d6d4 <wcrtomb@plt+0x28be4>
  42a168:	ldr	x0, [x24, #16]
  42a16c:	bl	4046b0 <free@plt>
  42a170:	ldr	x8, [x27]
  42a174:	str	x8, [x24]
  42a178:	ldr	x8, [x27, #24]
  42a17c:	str	x24, [x27]
  42a180:	sub	x8, x8, #0x1
  42a184:	str	x8, [x27, #24]
  42a188:	cbz	x23, 42a194 <wcrtomb@plt+0x256a4>
  42a18c:	str	x28, [x23]
  42a190:	b	42a0ac <wcrtomb@plt+0x255bc>
  42a194:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a198:	str	x28, [x8, #2256]
  42a19c:	b	42a0ac <wcrtomb@plt+0x255bc>
  42a1a0:	mov	x8, x26
  42a1a4:	str	xzr, [x26, #8]
  42a1a8:	str	xzr, [x8]
  42a1ac:	mov	w0, w19
  42a1b0:	ldp	x20, x19, [sp, #80]
  42a1b4:	ldp	x22, x21, [sp, #64]
  42a1b8:	ldp	x24, x23, [sp, #48]
  42a1bc:	ldp	x26, x25, [sp, #32]
  42a1c0:	ldp	x28, x27, [sp, #16]
  42a1c4:	ldp	x29, x30, [sp], #96
  42a1c8:	b	41cd90 <wcrtomb@plt+0x182a0>
  42a1cc:	stp	x29, x30, [sp, #-64]!
  42a1d0:	stp	x22, x21, [sp, #32]
  42a1d4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a1d8:	ldr	x8, [x22, #2256]
  42a1dc:	stp	x24, x23, [sp, #16]
  42a1e0:	stp	x20, x19, [sp, #48]
  42a1e4:	mov	w20, w1
  42a1e8:	mov	x21, x0
  42a1ec:	and	w24, w1, #0x1
  42a1f0:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a1f4:	mov	x29, sp
  42a1f8:	cbz	x8, 42a214 <wcrtomb@plt+0x25724>
  42a1fc:	ldr	x9, [x23, #2848]
  42a200:	ldr	x8, [x8, #32]
  42a204:	cmp	x9, x8
  42a208:	b.ls	42a214 <wcrtomb@plt+0x25724>  // b.plast
  42a20c:	mov	w0, wzr
  42a210:	bl	429e44 <wcrtomb@plt+0x25354>
  42a214:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a218:	ldr	x19, [x8, #2248]
  42a21c:	cbz	x19, 42a230 <wcrtomb@plt+0x25740>
  42a220:	ldr	x9, [x19]
  42a224:	str	x9, [x8, #2248]
  42a228:	str	xzr, [x19]
  42a22c:	b	42a23c <wcrtomb@plt+0x2574c>
  42a230:	mov	w0, #0x28                  	// #40
  42a234:	bl	44a010 <argp_parse@@Base+0xf964>
  42a238:	mov	x19, x0
  42a23c:	str	xzr, [x19]
  42a240:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a244:	ldr	w8, [x8, #2992]
  42a248:	mov	x0, x21
  42a24c:	str	w8, [x19, #8]
  42a250:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  42a254:	str	x0, [x19, #16]
  42a258:	bl	41b8dc <wcrtomb@plt+0x16dec>
  42a25c:	strb	w24, [x19, #24]
  42a260:	ldr	x8, [x23, #2848]
  42a264:	str	x8, [x19, #32]
  42a268:	tbz	w20, #0, 42a288 <wcrtomb@plt+0x25798>
  42a26c:	ldr	x0, [x19, #16]
  42a270:	ldrb	w8, [x0]
  42a274:	cbz	w8, 42a2b4 <wcrtomb@plt+0x257c4>
  42a278:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42a27c:	add	x1, x1, #0xfda
  42a280:	bl	404610 <strcmp@plt>
  42a284:	cbz	w0, 42a2b4 <wcrtomb@plt+0x257c4>
  42a288:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a28c:	add	x8, x8, #0x8d0
  42a290:	ldr	x9, [x8, #8]
  42a294:	cmp	x9, #0x0
  42a298:	csel	x8, x8, x9, eq  // eq = none
  42a29c:	ldr	x9, [x8]
  42a2a0:	str	x9, [x19]
  42a2a4:	str	x19, [x8]
  42a2a8:	ldr	x8, [x19]
  42a2ac:	cbnz	x8, 42a344 <wcrtomb@plt+0x25854>
  42a2b0:	b	42a33c <wcrtomb@plt+0x2584c>
  42a2b4:	ldr	x21, [x22, #2256]
  42a2b8:	cbz	x21, 42a314 <wcrtomb@plt+0x25824>
  42a2bc:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42a2c0:	mov	x23, xzr
  42a2c4:	add	x20, x20, #0xfda
  42a2c8:	mov	x8, x21
  42a2cc:	b	42a2e8 <wcrtomb@plt+0x257f8>
  42a2d0:	ldr	w8, [x23, #8]
  42a2d4:	ldr	w9, [x19, #8]
  42a2d8:	cmp	w8, w9
  42a2dc:	b.lt	42a368 <wcrtomb@plt+0x25878>  // b.tstop
  42a2e0:	ldr	x8, [x23]
  42a2e4:	cbz	x8, 42a314 <wcrtomb@plt+0x25824>
  42a2e8:	mov	x22, x23
  42a2ec:	mov	x23, x8
  42a2f0:	ldrb	w8, [x8, #24]
  42a2f4:	cbz	w8, 42a2e0 <wcrtomb@plt+0x257f0>
  42a2f8:	ldr	x0, [x23, #16]
  42a2fc:	ldrb	w8, [x0]
  42a300:	cbz	w8, 42a2d0 <wcrtomb@plt+0x257e0>
  42a304:	mov	x1, x20
  42a308:	bl	404610 <strcmp@plt>
  42a30c:	cbnz	w0, 42a2e0 <wcrtomb@plt+0x257f0>
  42a310:	b	42a2d0 <wcrtomb@plt+0x257e0>
  42a314:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a318:	add	x8, x8, #0x8d0
  42a31c:	ldr	x9, [x8, #8]
  42a320:	cbz	x9, 42a32c <wcrtomb@plt+0x2583c>
  42a324:	ldr	x21, [x9]
  42a328:	mov	x8, x9
  42a32c:	str	x21, [x19]
  42a330:	str	x19, [x8]
  42a334:	ldr	x8, [x19]
  42a338:	cbnz	x8, 42a344 <wcrtomb@plt+0x25854>
  42a33c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a340:	str	x19, [x8, #2264]
  42a344:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a348:	ldr	x9, [x8, #2272]
  42a34c:	ldp	x20, x19, [sp, #48]
  42a350:	ldp	x22, x21, [sp, #32]
  42a354:	ldp	x24, x23, [sp, #16]
  42a358:	add	x9, x9, #0x1
  42a35c:	str	x9, [x8, #2272]
  42a360:	ldp	x29, x30, [sp], #64
  42a364:	ret
  42a368:	cbz	x22, 42a384 <wcrtomb@plt+0x25894>
  42a36c:	ldr	x21, [x22]
  42a370:	str	x21, [x19]
  42a374:	str	x19, [x22]
  42a378:	ldr	x8, [x19]
  42a37c:	cbnz	x8, 42a344 <wcrtomb@plt+0x25854>
  42a380:	b	42a33c <wcrtomb@plt+0x2584c>
  42a384:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a388:	add	x22, x22, #0x8d0
  42a38c:	str	x21, [x19]
  42a390:	str	x19, [x22]
  42a394:	ldr	x8, [x19]
  42a398:	cbnz	x8, 42a344 <wcrtomb@plt+0x25854>
  42a39c:	b	42a33c <wcrtomb@plt+0x2584c>
  42a3a0:	sub	sp, sp, #0x100
  42a3a4:	stp	x29, x30, [sp, #160]
  42a3a8:	stp	x28, x27, [sp, #176]
  42a3ac:	stp	x26, x25, [sp, #192]
  42a3b0:	stp	x24, x23, [sp, #208]
  42a3b4:	stp	x22, x21, [sp, #224]
  42a3b8:	stp	x20, x19, [sp, #240]
  42a3bc:	add	x29, sp, #0xa0
  42a3c0:	bl	41e610 <wcrtomb@plt+0x19b20>
  42a3c4:	mov	w0, #0x2                   	// #2
  42a3c8:	mov	w28, #0x2                   	// #2
  42a3cc:	bl	405d0c <wcrtomb@plt+0x121c>
  42a3d0:	bl	41284c <wcrtomb@plt+0xdd5c>
  42a3d4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a3d8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a3dc:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a3e0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a3e4:	mov	w25, wzr
  42a3e8:	add	x19, x19, #0xb98
  42a3ec:	add	x20, x20, #0xc10
  42a3f0:	add	x23, x23, #0x82e
  42a3f4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a3f8:	add	x21, x21, #0xb80
  42a3fc:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a400:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a404:	b	42a434 <wcrtomb@plt+0x25944>
  42a408:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a40c:	add	x8, x8, #0xcf8
  42a410:	ldp	x0, x1, [sp, #120]
  42a414:	ldp	x2, x3, [x8]
  42a418:	bl	426058 <wcrtomb@plt+0x21568>
  42a41c:	cmp	w0, #0x0
  42a420:	b.le	42a608 <wcrtomb@plt+0x25b18>
  42a424:	bl	4198b8 <wcrtomb@plt+0x14dc8>
  42a428:	mov	x0, x20
  42a42c:	bl	425f4c <wcrtomb@plt+0x2145c>
  42a430:	mov	w25, w24
  42a434:	mov	x0, x19
  42a438:	mov	x1, x20
  42a43c:	mov	w2, wzr
  42a440:	bl	41901c <wcrtomb@plt+0x1452c>
  42a444:	mov	w24, w0
  42a448:	cmp	w0, #0x5
  42a44c:	mov	w8, w0
  42a450:	b.hi	42a428 <wcrtomb@plt+0x25938>  // b.pmore
  42a454:	adr	x9, 42a464 <wcrtomb@plt+0x25974>
  42a458:	ldrb	w10, [x23, x8]
  42a45c:	add	x9, x9, x10, lsl #2
  42a460:	br	x9
  42a464:	ldr	x0, [x22, #2968]
  42a468:	mov	x1, x20
  42a46c:	mov	x2, x21
  42a470:	mov	w3, wzr
  42a474:	bl	4194a0 <wcrtomb@plt+0x149b0>
  42a478:	ldr	x8, [x22, #2968]
  42a47c:	mov	x1, x20
  42a480:	ldrb	w0, [x8, #156]
  42a484:	bl	418914 <wcrtomb@plt+0x13e24>
  42a488:	ldr	w8, [x26, #3852]
  42a48c:	ldr	w9, [x21]
  42a490:	cmp	w8, #0x8
  42a494:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a498:	str	w9, [x8, #3808]
  42a49c:	b.ne	42a424 <wcrtomb@plt+0x25934>  // b.any
  42a4a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a4a4:	ldr	x0, [x8, #3096]
  42a4a8:	bl	41f8d0 <wcrtomb@plt+0x1ade0>
  42a4ac:	cbz	x0, 42a424 <wcrtomb@plt+0x25934>
  42a4b0:	mov	x25, x0
  42a4b4:	ldr	w0, [x0, #40]
  42a4b8:	bl	41cd90 <wcrtomb@plt+0x182a0>
  42a4bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a4c0:	ldr	x0, [x8, #3096]
  42a4c4:	add	x1, sp, #0x20
  42a4c8:	bl	41c7b0 <wcrtomb@plt+0x17cc0>
  42a4cc:	cbnz	w0, 42a424 <wcrtomb@plt+0x25934>
  42a4d0:	ldr	w8, [sp, #48]
  42a4d4:	and	w8, w8, #0xf000
  42a4d8:	cmp	w8, #0x4, lsl #12
  42a4dc:	b.ne	42a408 <wcrtomb@plt+0x25918>  // b.any
  42a4e0:	ldr	x0, [x25, #16]
  42a4e4:	mov	w1, #0x1                   	// #1
  42a4e8:	bl	41c494 <wcrtomb@plt+0x179a4>
  42a4ec:	cbz	x0, 42a424 <wcrtomb@plt+0x25934>
  42a4f0:	mov	x27, x0
  42a4f4:	ldr	x0, [x25, #16]
  42a4f8:	bl	41cd10 <wcrtomb@plt+0x18220>
  42a4fc:	ldrb	w8, [x27]
  42a500:	str	x27, [sp]
  42a504:	mov	x27, x0
  42a508:	cbz	w8, 42a540 <wcrtomb@plt+0x25a50>
  42a50c:	ldr	x28, [sp]
  42a510:	mov	x0, x27
  42a514:	mov	x1, x28
  42a518:	bl	41d1d0 <wcrtomb@plt+0x186e0>
  42a51c:	ldr	w1, [x25, #40]
  42a520:	mov	w2, wzr
  42a524:	mov	x3, xzr
  42a528:	bl	41e964 <wcrtomb@plt+0x19e74>
  42a52c:	mov	x0, x28
  42a530:	bl	403f00 <strlen@plt>
  42a534:	add	x28, x0, x28
  42a538:	ldrb	w8, [x28, #1]!
  42a53c:	cbnz	w8, 42a510 <wcrtomb@plt+0x25a20>
  42a540:	mov	x0, x27
  42a544:	bl	41d1a8 <wcrtomb@plt+0x186b8>
  42a548:	ldr	x0, [sp]
  42a54c:	bl	4046b0 <free@plt>
  42a550:	mov	x0, x25
  42a554:	bl	41eb48 <wcrtomb@plt+0x1a058>
  42a558:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a55c:	mov	w28, #0x2                   	// #2
  42a560:	b	42a424 <wcrtomb@plt+0x25934>
  42a564:	ldr	x0, [x22, #2968]
  42a568:	bl	405640 <wcrtomb@plt+0xb50>
  42a56c:	cmp	w25, #0x4
  42a570:	b.hi	42a428 <wcrtomb@plt+0x25938>  // b.pmore
  42a574:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a578:	mov	w8, w25
  42a57c:	add	x11, x11, #0x834
  42a580:	adr	x9, 42a590 <wcrtomb@plt+0x25aa0>
  42a584:	ldrb	w10, [x11, x8]
  42a588:	add	x9, x9, x10, lsl #2
  42a58c:	br	x9
  42a590:	ldr	x8, [x27, #4000]
  42a594:	cbz	x8, 42a59c <wcrtomb@plt+0x25aac>
  42a598:	blr	x8
  42a59c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  42a5a0:	mov	w2, #0x5                   	// #5
  42a5a4:	mov	x0, xzr
  42a5a8:	add	x1, x1, #0xca4
  42a5ac:	bl	4048b0 <dcgettext@plt>
  42a5b0:	mov	x2, x0
  42a5b4:	mov	w0, wzr
  42a5b8:	mov	w1, wzr
  42a5bc:	bl	403f60 <error@plt>
  42a5c0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a5c4:	str	w28, [x8, #2352]
  42a5c8:	b	42a428 <wcrtomb@plt+0x25938>
  42a5cc:	ldr	x8, [x27, #4000]
  42a5d0:	cbz	x8, 42a5d8 <wcrtomb@plt+0x25ae8>
  42a5d4:	blr	x8
  42a5d8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x14e3c>
  42a5dc:	mov	w2, #0x5                   	// #5
  42a5e0:	mov	x0, xzr
  42a5e4:	add	x1, x1, #0xfa7
  42a5e8:	bl	4048b0 <dcgettext@plt>
  42a5ec:	mov	x2, x0
  42a5f0:	mov	w0, wzr
  42a5f4:	mov	w1, wzr
  42a5f8:	bl	403f60 <error@plt>
  42a5fc:	ldr	x8, [x27, #4000]
  42a600:	cbnz	x8, 42a598 <wcrtomb@plt+0x25aa8>
  42a604:	b	42a59c <wcrtomb@plt+0x25aac>
  42a608:	mov	x0, x25
  42a60c:	bl	41eb48 <wcrtomb@plt+0x1a058>
  42a610:	b	42a424 <wcrtomb@plt+0x25934>
  42a614:	ldr	x8, [x22, #2968]
  42a618:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a61c:	str	x8, [x9, #2904]
  42a620:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a624:	add	x0, x0, #0xc10
  42a628:	bl	425f4c <wcrtomb@plt+0x2145c>
  42a62c:	bl	4052c8 <wcrtomb@plt+0x7d8>
  42a630:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a634:	ldr	x9, [x9, #2904]
  42a638:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a63c:	mov	w10, #0x1                   	// #1
  42a640:	strb	w10, [x8, #3984]
  42a644:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a648:	str	x9, [x8, #3992]
  42a64c:	bl	41f960 <wcrtomb@plt+0x1ae70>
  42a650:	cbz	x0, 42a794 <wcrtomb@plt+0x25ca4>
  42a654:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x15e3c>
  42a658:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a65c:	adrp	x27, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  42a660:	mov	w28, #0x200                 	// #512
  42a664:	add	x20, x20, #0xae2
  42a668:	b	42a684 <wcrtomb@plt+0x25b94>
  42a66c:	mov	x0, xzr
  42a670:	mov	x1, x19
  42a674:	mov	x2, x19
  42a678:	bl	40c1e0 <wcrtomb@plt+0x76f0>
  42a67c:	bl	41f960 <wcrtomb@plt+0x1ae70>
  42a680:	cbz	x0, 42a794 <wcrtomb@plt+0x25ca4>
  42a684:	ldr	x19, [x0, #16]
  42a688:	mov	x1, xzr
  42a68c:	mov	x0, x19
  42a690:	bl	40ee74 <wcrtomb@plt+0xa384>
  42a694:	tbnz	w0, #0, 42a67c <wcrtomb@plt+0x25b8c>
  42a698:	ldrb	w8, [x25, #3584]
  42a69c:	cbz	w8, 42a6b0 <wcrtomb@plt+0x25bc0>
  42a6a0:	mov	x0, x20
  42a6a4:	mov	x1, x19
  42a6a8:	bl	424888 <wcrtomb@plt+0x1fd98>
  42a6ac:	cbz	w0, 42a67c <wcrtomb@plt+0x25b8c>
  42a6b0:	ldr	w8, [x26, #3852]
  42a6b4:	cmp	w8, #0x2
  42a6b8:	b.ne	42a66c <wcrtomb@plt+0x25b7c>  // b.any
  42a6bc:	ldr	w0, [x27, #1864]
  42a6c0:	mov	x1, x19
  42a6c4:	mov	w2, wzr
  42a6c8:	bl	4049a0 <openat@plt>
  42a6cc:	tbnz	w0, #31, 42a6f4 <wcrtomb@plt+0x25c04>
  42a6d0:	mov	w22, w0
  42a6d4:	add	x2, sp, #0x20
  42a6d8:	mov	w0, wzr
  42a6dc:	mov	w1, w22
  42a6e0:	bl	404890 <__fxstat@plt>
  42a6e4:	cbz	w0, 42a700 <wcrtomb@plt+0x25c10>
  42a6e8:	mov	x0, x19
  42a6ec:	bl	42d4e4 <wcrtomb@plt+0x289f4>
  42a6f0:	b	42a77c <wcrtomb@plt+0x25c8c>
  42a6f4:	mov	x0, x19
  42a6f8:	bl	42cbf8 <wcrtomb@plt+0x28108>
  42a6fc:	b	42a67c <wcrtomb@plt+0x25b8c>
  42a700:	ldr	x21, [sp, #80]
  42a704:	cmp	x21, #0x1
  42a708:	b.lt	42a77c <wcrtomb@plt+0x25c8c>  // b.tstop
  42a70c:	bl	405310 <wcrtomb@plt+0x820>
  42a710:	mov	x23, x0
  42a714:	bl	405684 <wcrtomb@plt+0xb94>
  42a718:	mov	x24, x0
  42a71c:	cmp	x21, x0
  42a720:	b.cs	42a744 <wcrtomb@plt+0x25c54>  // b.hs, b.nlast
  42a724:	ands	x8, x21, #0x1ff
  42a728:	mov	x24, x21
  42a72c:	b.eq	42a744 <wcrtomb@plt+0x25c54>  // b.none
  42a730:	add	x0, x23, x21
  42a734:	sub	x2, x28, x8
  42a738:	mov	w1, wzr
  42a73c:	bl	404320 <memset@plt>
  42a740:	mov	x24, x21
  42a744:	mov	w0, w22
  42a748:	mov	x1, x23
  42a74c:	mov	x2, x24
  42a750:	bl	44932c <argp_parse@@Base+0xec80>
  42a754:	cbz	x0, 42a7c4 <wcrtomb@plt+0x25cd4>
  42a758:	cmn	x0, #0x1
  42a75c:	b.eq	42a82c <wcrtomb@plt+0x25d3c>  // b.none
  42a760:	sub	x8, x0, #0x1
  42a764:	and	x8, x8, #0xfffffffffffffe00
  42a768:	sub	x21, x21, x0
  42a76c:	add	x0, x23, x8
  42a770:	bl	405640 <wcrtomb@plt+0xb50>
  42a774:	cmp	x21, #0x0
  42a778:	b.gt	42a70c <wcrtomb@plt+0x25c1c>
  42a77c:	mov	w0, w22
  42a780:	bl	4044d0 <close@plt>
  42a784:	cbz	w0, 42a67c <wcrtomb@plt+0x25b8c>
  42a788:	mov	x0, x19
  42a78c:	bl	42c8c8 <wcrtomb@plt+0x27dd8>
  42a790:	b	42a67c <wcrtomb@plt+0x25b8c>
  42a794:	bl	40ad70 <wcrtomb@plt+0x6280>
  42a798:	bl	405974 <wcrtomb@plt+0xe84>
  42a79c:	bl	429e04 <wcrtomb@plt+0x25314>
  42a7a0:	bl	41ed78 <wcrtomb@plt+0x1a288>
  42a7a4:	ldp	x20, x19, [sp, #240]
  42a7a8:	ldp	x22, x21, [sp, #224]
  42a7ac:	ldp	x24, x23, [sp, #208]
  42a7b0:	ldp	x26, x25, [sp, #192]
  42a7b4:	ldp	x28, x27, [sp, #176]
  42a7b8:	ldp	x29, x30, [sp, #160]
  42a7bc:	add	sp, sp, #0x100
  42a7c0:	ret
  42a7c4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42a7c8:	ldr	x8, [x8, #4000]
  42a7cc:	cbz	x8, 42a7d4 <wcrtomb@plt+0x25ce4>
  42a7d0:	blr	x8
  42a7d4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a7d8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a7dc:	add	x1, x1, #0x839
  42a7e0:	add	x2, x2, #0x854
  42a7e4:	mov	w4, #0x5                   	// #5
  42a7e8:	mov	x0, xzr
  42a7ec:	mov	x3, x21
  42a7f0:	bl	4047d0 <dcngettext@plt>
  42a7f4:	mov	x20, x0
  42a7f8:	mov	x0, x19
  42a7fc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42a800:	mov	x19, x0
  42a804:	add	x1, sp, #0x8
  42a808:	mov	x0, x21
  42a80c:	bl	440290 <argp_parse@@Base+0x5be4>
  42a810:	mov	x4, x0
  42a814:	mov	w0, wzr
  42a818:	mov	w1, wzr
  42a81c:	mov	x2, x20
  42a820:	mov	x3, x19
  42a824:	bl	403f60 <error@plt>
  42a828:	bl	40eb40 <wcrtomb@plt+0xa050>
  42a82c:	ldr	x8, [sp, #80]
  42a830:	mov	x0, x19
  42a834:	mov	x2, x24
  42a838:	sub	x1, x8, x21
  42a83c:	bl	42cf08 <wcrtomb@plt+0x28418>
  42a840:	bl	404560 <abort@plt>
  42a844:	sub	sp, sp, #0x60
  42a848:	stp	x24, x23, [sp, #48]
  42a84c:	stp	x22, x21, [sp, #64]
  42a850:	mov	w22, w0
  42a854:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42a858:	and	x23, x22, #0x1
  42a85c:	add	x24, x24, #0xe70
  42a860:	ldr	x21, [x24, x23, lsl #3]
  42a864:	stp	x20, x19, [sp, #80]
  42a868:	mov	x19, x2
  42a86c:	mov	x20, x1
  42a870:	cmn	x21, #0x1
  42a874:	stp	x29, x30, [sp, #32]
  42a878:	add	x29, sp, #0x20
  42a87c:	b.eq	42a89c <wcrtomb@plt+0x25dac>  // b.none
  42a880:	cmn	x21, #0x1
  42a884:	b.eq	42a92c <wcrtomb@plt+0x25e3c>  // b.none
  42a888:	cbnz	x21, 42a8b8 <wcrtomb@plt+0x25dc8>
  42a88c:	mov	x0, x20
  42a890:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  42a894:	str	x0, [x19]
  42a898:	b	42a940 <wcrtomb@plt+0x25e50>
  42a89c:	bl	4402c8 <argp_parse@@Base+0x5c1c>
  42a8a0:	mov	x2, x0
  42a8a4:	tbz	w22, #0, 42a90c <wcrtomb@plt+0x25e1c>
  42a8a8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a8ac:	add	x0, x0, #0x870
  42a8b0:	mov	x1, x2
  42a8b4:	b	42a918 <wcrtomb@plt+0x25e28>
  42a8b8:	mov	x0, x20
  42a8bc:	bl	403f00 <strlen@plt>
  42a8c0:	add	x8, x0, #0x1
  42a8c4:	mov	w0, #0x1                   	// #1
  42a8c8:	bfi	x0, x8, #4, #60
  42a8cc:	stp	x0, x8, [sp]
  42a8d0:	bl	44a010 <argp_parse@@Base+0xf964>
  42a8d4:	mov	x22, x0
  42a8d8:	str	x0, [sp, #16]
  42a8dc:	sub	x1, x29, #0x8
  42a8e0:	add	x2, sp, #0x8
  42a8e4:	add	x3, sp, #0x10
  42a8e8:	mov	x4, sp
  42a8ec:	mov	x0, x21
  42a8f0:	stur	x20, [x29, #-8]
  42a8f4:	bl	404630 <iconv@plt>
  42a8f8:	cbz	x0, 42a934 <wcrtomb@plt+0x25e44>
  42a8fc:	mov	x0, x22
  42a900:	bl	4046b0 <free@plt>
  42a904:	mov	w0, wzr
  42a908:	b	42a944 <wcrtomb@plt+0x25e54>
  42a90c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a910:	add	x1, x1, #0x870
  42a914:	mov	x0, x2
  42a918:	bl	404820 <iconv_open@plt>
  42a91c:	mov	x21, x0
  42a920:	str	x0, [x24, x23, lsl #3]
  42a924:	cmn	x21, #0x1
  42a928:	b.ne	42a888 <wcrtomb@plt+0x25d98>  // b.any
  42a92c:	mov	w0, wzr
  42a930:	b	42a944 <wcrtomb@plt+0x25e54>
  42a934:	ldr	x8, [sp, #16]
  42a938:	strb	wzr, [x8]
  42a93c:	str	x22, [x19]
  42a940:	mov	w0, #0x1                   	// #1
  42a944:	ldp	x20, x19, [sp, #80]
  42a948:	ldp	x22, x21, [sp, #64]
  42a94c:	ldp	x24, x23, [sp, #48]
  42a950:	ldp	x29, x30, [sp, #32]
  42a954:	add	sp, sp, #0x60
  42a958:	ret
  42a95c:	ldrb	w9, [x0]
  42a960:	cbz	w9, 42a978 <wcrtomb@plt+0x25e88>
  42a964:	add	x8, x0, #0x1
  42a968:	sxtb	w9, w9
  42a96c:	tbnz	w9, #31, 42a980 <wcrtomb@plt+0x25e90>
  42a970:	ldrb	w9, [x8], #1
  42a974:	cbnz	w9, 42a968 <wcrtomb@plt+0x25e78>
  42a978:	mov	w0, #0x1                   	// #1
  42a97c:	ret
  42a980:	mov	w0, wzr
  42a984:	ret
  42a988:	stp	x29, x30, [sp, #-48]!
  42a98c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42a990:	add	x1, x1, #0x15b
  42a994:	stp	x22, x21, [sp, #16]
  42a998:	stp	x20, x19, [sp, #32]
  42a99c:	mov	x29, sp
  42a9a0:	mov	x19, x0
  42a9a4:	bl	404610 <strcmp@plt>
  42a9a8:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42a9ac:	cbz	w0, 42a9f0 <wcrtomb@plt+0x25f00>
  42a9b0:	mov	x0, x19
  42a9b4:	bl	403f00 <strlen@plt>
  42a9b8:	cmp	x0, #0x3
  42a9bc:	b.cc	42a9f8 <wcrtomb@plt+0x25f08>  // b.lo, b.ul, b.last
  42a9c0:	ldrh	w8, [x19]
  42a9c4:	ldrb	w10, [x19, #2]
  42a9c8:	mov	w9, #0x6f6e                	// #28526
  42a9cc:	mov	w11, #0x2d                  	// #45
  42a9d0:	eor	w8, w8, w9
  42a9d4:	eor	w9, w10, w11
  42a9d8:	orr	w8, w8, w9
  42a9dc:	add	x12, x19, #0x3
  42a9e0:	tst	w8, #0xffff
  42a9e4:	cset	w22, eq  // eq = none
  42a9e8:	csel	x19, x12, x19, eq  // eq = none
  42a9ec:	b	42a9fc <wcrtomb@plt+0x25f0c>
  42a9f0:	mov	w8, wzr
  42a9f4:	b	42aa48 <wcrtomb@plt+0x25f58>
  42a9f8:	mov	w22, wzr
  42a9fc:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42aa00:	ldr	x5, [x8, #4008]
  42aa04:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42aa08:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42aa0c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42aa10:	add	x20, x20, #0xe84
  42aa14:	add	x0, x0, #0x87a
  42aa18:	add	x2, x2, #0x9b0
  42aa1c:	mov	w4, #0x4                   	// #4
  42aa20:	mov	x1, x19
  42aa24:	mov	x3, x20
  42aa28:	bl	436fa4 <wcrtomb@plt+0x324b4>
  42aa2c:	ldr	w8, [x20, x0, lsl #2]
  42aa30:	cbz	w22, 42aa40 <wcrtomb@plt+0x25f50>
  42aa34:	ldr	w9, [x21, #3712]
  42aa38:	bic	w8, w9, w8
  42aa3c:	b	42aa48 <wcrtomb@plt+0x25f58>
  42aa40:	ldr	w9, [x21, #3712]
  42aa44:	orr	w8, w9, w8
  42aa48:	str	w8, [x21, #3712]
  42aa4c:	ldp	x20, x19, [sp, #32]
  42aa50:	ldp	x22, x21, [sp, #16]
  42aa54:	ldp	x29, x30, [sp], #48
  42aa58:	ret
  42aa5c:	stp	x29, x30, [sp, #-96]!
  42aa60:	stp	x28, x27, [sp, #16]
  42aa64:	stp	x26, x25, [sp, #32]
  42aa68:	stp	x24, x23, [sp, #48]
  42aa6c:	stp	x22, x21, [sp, #64]
  42aa70:	stp	x20, x19, [sp, #80]
  42aa74:	mov	x29, sp
  42aa78:	sub	sp, sp, #0xfd0
  42aa7c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42aa80:	ldr	w8, [x8, #3888]
  42aa84:	cmp	w8, #0x1
  42aa88:	b.lt	42ac94 <wcrtomb@plt+0x261a4>  // b.tstop
  42aa8c:	mov	w22, w4
  42aa90:	mov	x19, x2
  42aa94:	mov	x20, x1
  42aa98:	mov	w21, w0
  42aa9c:	cmn	w0, #0x64
  42aaa0:	add	x24, x2, #0x58
  42aaa4:	b.eq	42aab4 <wcrtomb@plt+0x25fc4>  // b.none
  42aaa8:	ldrb	w8, [x20]
  42aaac:	cmp	w8, #0x2f
  42aab0:	b.ne	42ab74 <wcrtomb@plt+0x26084>  // b.any
  42aab4:	mov	x0, x20
  42aab8:	mov	x1, x24
  42aabc:	bl	43d094 <argp_parse@@Base+0x29e8>
  42aac0:	mov	w23, w0
  42aac4:	cbz	w23, 42ac94 <wcrtomb@plt+0x261a4>
  42aac8:	cmn	w23, #0x1
  42aacc:	b.ne	42aae4 <wcrtomb@plt+0x25ff4>  // b.any
  42aad0:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42aad4:	add	x0, x0, #0xa80
  42aad8:	mov	x1, x20
  42aadc:	bl	42c680 <wcrtomb@plt+0x27b90>
  42aae0:	b	42ac94 <wcrtomb@plt+0x261a4>
  42aae4:	mov	w2, #0x8000                	// #32768
  42aae8:	mov	w0, w21
  42aaec:	mov	x1, x20
  42aaf0:	bl	42c30c <wcrtomb@plt+0x2781c>
  42aaf4:	cbz	x0, 42ac38 <wcrtomb@plt+0x26148>
  42aaf8:	mov	x1, xzr
  42aafc:	mov	x24, x0
  42ab00:	bl	4044f0 <acl_to_text@plt>
  42ab04:	mov	x23, x0
  42ab08:	mov	x0, x24
  42ab0c:	bl	404ac0 <acl_free@plt>
  42ab10:	cbz	x23, 42ac80 <wcrtomb@plt+0x26190>
  42ab14:	mov	x0, x23
  42ab18:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  42ab1c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ab20:	add	x1, x1, #0xb34
  42ab24:	mov	x24, x0
  42ab28:	str	x0, [x19, #56]
  42ab2c:	bl	404980 <strcspn@plt>
  42ab30:	add	x8, x24, x0
  42ab34:	mov	x9, x8
  42ab38:	b	42ab40 <wcrtomb@plt+0x26050>
  42ab3c:	add	x9, x9, #0x1
  42ab40:	ldrb	w10, [x9]
  42ab44:	cmp	w10, #0x9
  42ab48:	b.eq	42ab3c <wcrtomb@plt+0x2604c>  // b.none
  42ab4c:	cmp	w10, #0x23
  42ab50:	b.ne	42ab64 <wcrtomb@plt+0x26074>  // b.any
  42ab54:	ldrb	w10, [x9, #1]!
  42ab58:	cmp	w10, #0xa
  42ab5c:	b.ne	42ab54 <wcrtomb@plt+0x26064>  // b.any
  42ab60:	b	42ab40 <wcrtomb@plt+0x26050>
  42ab64:	cbz	w10, 42ac20 <wcrtomb@plt+0x26130>
  42ab68:	add	x9, x9, #0x1
  42ab6c:	strb	w10, [x8], #1
  42ab70:	b	42ab40 <wcrtomb@plt+0x26050>
  42ab74:	add	x0, sp, #0x8
  42ab78:	mov	w1, w21
  42ab7c:	mov	x2, x20
  42ab80:	add	x28, sp, #0x8
  42ab84:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  42ab88:	cbz	x0, 42abe8 <wcrtomb@plt+0x260f8>
  42ab8c:	mov	x1, x24
  42ab90:	mov	x26, x0
  42ab94:	bl	43d094 <argp_parse@@Base+0x29e8>
  42ab98:	mov	w23, w0
  42ab9c:	bl	4049c0 <__errno_location@plt>
  42aba0:	ldr	w27, [x0]
  42aba4:	mov	x25, x0
  42aba8:	cmp	x26, x28
  42abac:	b.eq	42abb8 <wcrtomb@plt+0x260c8>  // b.none
  42abb0:	mov	x0, x26
  42abb4:	bl	4046b0 <free@plt>
  42abb8:	cmn	w23, #0x1
  42abbc:	b.ne	42aac4 <wcrtomb@plt+0x25fd4>  // b.any
  42abc0:	cmp	w27, #0x26
  42abc4:	b.hi	42ada4 <wcrtomb@plt+0x262b4>  // b.pmore
  42abc8:	mov	w8, w27
  42abcc:	mov	w9, #0x1                   	// #1
  42abd0:	lsl	x8, x9, x8
  42abd4:	mov	x9, #0x2006                	// #8198
  42abd8:	movk	x9, #0x10, lsl #16
  42abdc:	movk	x9, #0x40, lsl #32
  42abe0:	tst	x8, x9
  42abe4:	b.eq	42ada4 <wcrtomb@plt+0x262b4>  // b.none
  42abe8:	add	x0, sp, #0x8
  42abec:	bl	449424 <argp_parse@@Base+0xed78>
  42abf0:	cbnz	w0, 42ade0 <wcrtomb@plt+0x262f0>
  42abf4:	tbnz	w21, #31, 42ac54 <wcrtomb@plt+0x26164>
  42abf8:	ldr	w8, [sp, #8]
  42abfc:	cmp	w8, w21
  42ac00:	b.ne	42ac54 <wcrtomb@plt+0x26164>  // b.any
  42ac04:	add	x0, sp, #0x8
  42ac08:	bl	44949c <argp_parse@@Base+0xedf0>
  42ac0c:	bl	4049c0 <__errno_location@plt>
  42ac10:	mov	w8, #0x9                   	// #9
  42ac14:	str	w8, [x0]
  42ac18:	mov	w23, #0xffffffff            	// #-1
  42ac1c:	b	42aac4 <wcrtomb@plt+0x25fd4>
  42ac20:	sub	x9, x8, x24
  42ac24:	mov	x0, x23
  42ac28:	str	x9, [x19, #64]
  42ac2c:	strb	wzr, [x8]
  42ac30:	bl	404ac0 <acl_free@plt>
  42ac34:	b	42ac90 <wcrtomb@plt+0x261a0>
  42ac38:	bl	4049c0 <__errno_location@plt>
  42ac3c:	ldr	w8, [x0]
  42ac40:	cmp	w8, #0x5f
  42ac44:	b.eq	42ac90 <wcrtomb@plt+0x261a0>  // b.none
  42ac48:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ac4c:	add	x0, x0, #0xb18
  42ac50:	b	42ac88 <wcrtomb@plt+0x26198>
  42ac54:	mov	w0, w21
  42ac58:	bl	403f70 <fchdir@plt>
  42ac5c:	cbz	w0, 42ad78 <wcrtomb@plt+0x26288>
  42ac60:	bl	4049c0 <__errno_location@plt>
  42ac64:	ldr	w24, [x0]
  42ac68:	mov	x23, x0
  42ac6c:	add	x0, sp, #0x8
  42ac70:	bl	44949c <argp_parse@@Base+0xedf0>
  42ac74:	str	w24, [x23]
  42ac78:	mov	w23, #0xffffffff            	// #-1
  42ac7c:	b	42aac4 <wcrtomb@plt+0x25fd4>
  42ac80:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ac84:	add	x0, x0, #0xb28
  42ac88:	mov	x1, x20
  42ac8c:	bl	42c680 <wcrtomb@plt+0x27b90>
  42ac90:	cbz	w22, 42acb4 <wcrtomb@plt+0x261c4>
  42ac94:	add	sp, sp, #0xfd0
  42ac98:	ldp	x20, x19, [sp, #80]
  42ac9c:	ldp	x22, x21, [sp, #64]
  42aca0:	ldp	x24, x23, [sp, #48]
  42aca4:	ldp	x26, x25, [sp, #32]
  42aca8:	ldp	x28, x27, [sp, #16]
  42acac:	ldp	x29, x30, [sp], #96
  42acb0:	ret
  42acb4:	mov	w2, #0x4000                	// #16384
  42acb8:	mov	w0, w21
  42acbc:	mov	x1, x20
  42acc0:	bl	42c30c <wcrtomb@plt+0x2781c>
  42acc4:	cbz	x0, 42ad5c <wcrtomb@plt+0x2626c>
  42acc8:	mov	x1, xzr
  42accc:	mov	x22, x0
  42acd0:	bl	4044f0 <acl_to_text@plt>
  42acd4:	mov	x21, x0
  42acd8:	mov	x0, x22
  42acdc:	bl	404ac0 <acl_free@plt>
  42ace0:	cbz	x21, 42ad98 <wcrtomb@plt+0x262a8>
  42ace4:	mov	x0, x21
  42ace8:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  42acec:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42acf0:	add	x1, x1, #0xb34
  42acf4:	mov	x20, x0
  42acf8:	str	x0, [x19, #72]
  42acfc:	bl	404980 <strcspn@plt>
  42ad00:	add	x8, x20, x0
  42ad04:	mov	x9, x8
  42ad08:	b	42ad10 <wcrtomb@plt+0x26220>
  42ad0c:	add	x9, x9, #0x1
  42ad10:	ldrb	w10, [x9]
  42ad14:	cmp	w10, #0x9
  42ad18:	b.eq	42ad0c <wcrtomb@plt+0x2621c>  // b.none
  42ad1c:	cmp	w10, #0x23
  42ad20:	b.ne	42ad34 <wcrtomb@plt+0x26244>  // b.any
  42ad24:	ldrb	w10, [x9, #1]!
  42ad28:	cmp	w10, #0xa
  42ad2c:	b.ne	42ad24 <wcrtomb@plt+0x26234>  // b.any
  42ad30:	b	42ad10 <wcrtomb@plt+0x26220>
  42ad34:	cbz	w10, 42ad44 <wcrtomb@plt+0x26254>
  42ad38:	add	x9, x9, #0x1
  42ad3c:	strb	w10, [x8], #1
  42ad40:	b	42ad10 <wcrtomb@plt+0x26220>
  42ad44:	sub	x9, x8, x20
  42ad48:	mov	x0, x21
  42ad4c:	str	x9, [x19, #80]
  42ad50:	strb	wzr, [x8]
  42ad54:	bl	404ac0 <acl_free@plt>
  42ad58:	b	42ac94 <wcrtomb@plt+0x261a4>
  42ad5c:	bl	4049c0 <__errno_location@plt>
  42ad60:	ldr	w8, [x0]
  42ad64:	cmp	w8, #0x5f
  42ad68:	b.eq	42ac94 <wcrtomb@plt+0x261a4>  // b.none
  42ad6c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ad70:	add	x0, x0, #0xb18
  42ad74:	b	42aad8 <wcrtomb@plt+0x25fe8>
  42ad78:	mov	x0, x20
  42ad7c:	mov	x1, x24
  42ad80:	bl	43d094 <argp_parse@@Base+0x29e8>
  42ad84:	mov	w23, w0
  42ad88:	cmn	w0, #0x1
  42ad8c:	b.eq	42adb4 <wcrtomb@plt+0x262c4>  // b.none
  42ad90:	mov	w24, wzr
  42ad94:	b	42adbc <wcrtomb@plt+0x262cc>
  42ad98:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ad9c:	add	x0, x0, #0xb28
  42ada0:	b	42aad8 <wcrtomb@plt+0x25fe8>
  42ada4:	cmp	w27, #0x5f
  42ada8:	b.eq	42abe8 <wcrtomb@plt+0x260f8>  // b.none
  42adac:	str	w27, [x25]
  42adb0:	b	42aac4 <wcrtomb@plt+0x25fd4>
  42adb4:	bl	4049c0 <__errno_location@plt>
  42adb8:	ldr	w24, [x0]
  42adbc:	add	x0, sp, #0x8
  42adc0:	bl	449484 <argp_parse@@Base+0xedd8>
  42adc4:	cbnz	w0, 42adec <wcrtomb@plt+0x262fc>
  42adc8:	add	x0, sp, #0x8
  42adcc:	bl	44949c <argp_parse@@Base+0xedf0>
  42add0:	cbz	w24, 42aac4 <wcrtomb@plt+0x25fd4>
  42add4:	bl	4049c0 <__errno_location@plt>
  42add8:	str	w24, [x0]
  42addc:	b	42aac4 <wcrtomb@plt+0x25fd4>
  42ade0:	bl	4049c0 <__errno_location@plt>
  42ade4:	ldr	w0, [x0]
  42ade8:	bl	440c28 <argp_parse@@Base+0x657c>
  42adec:	bl	4049c0 <__errno_location@plt>
  42adf0:	ldr	w0, [x0]
  42adf4:	bl	440c68 <argp_parse@@Base+0x65bc>
  42adf8:	stp	x29, x30, [sp, #-48]!
  42adfc:	and	w8, w2, #0xff
  42ae00:	cmp	w8, #0x32
  42ae04:	str	x21, [sp, #16]
  42ae08:	stp	x20, x19, [sp, #32]
  42ae0c:	mov	x29, sp
  42ae10:	b.eq	42ae78 <wcrtomb@plt+0x26388>  // b.none
  42ae14:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ae18:	ldr	w8, [x8, #3888]
  42ae1c:	cmp	w8, #0x1
  42ae20:	b.lt	42ae78 <wcrtomb@plt+0x26388>  // b.tstop
  42ae24:	ldr	x3, [x0, #56]
  42ae28:	mov	w21, w2
  42ae2c:	mov	w2, #0x8000                	// #32768
  42ae30:	mov	w4, wzr
  42ae34:	mov	x19, x1
  42ae38:	mov	x20, x0
  42ae3c:	bl	42ae88 <wcrtomb@plt+0x26398>
  42ae40:	and	w8, w21, #0xff
  42ae44:	cmp	w8, #0x44
  42ae48:	b.eq	42ae54 <wcrtomb@plt+0x26364>  // b.none
  42ae4c:	cmp	w8, #0x35
  42ae50:	b.ne	42ae78 <wcrtomb@plt+0x26388>  // b.any
  42ae54:	ldr	x3, [x20, #72]
  42ae58:	mov	x0, x20
  42ae5c:	mov	x1, x19
  42ae60:	ldp	x20, x19, [sp, #32]
  42ae64:	ldr	x21, [sp, #16]
  42ae68:	mov	w2, #0x4000                	// #16384
  42ae6c:	mov	w4, #0x1                   	// #1
  42ae70:	ldp	x29, x30, [sp], #48
  42ae74:	b	42ae88 <wcrtomb@plt+0x26398>
  42ae78:	ldp	x20, x19, [sp, #32]
  42ae7c:	ldr	x21, [sp, #16]
  42ae80:	ldp	x29, x30, [sp], #48
  42ae84:	ret
  42ae88:	stp	x29, x30, [sp, #-96]!
  42ae8c:	stp	x28, x27, [sp, #16]
  42ae90:	stp	x26, x25, [sp, #32]
  42ae94:	stp	x24, x23, [sp, #48]
  42ae98:	stp	x22, x21, [sp, #64]
  42ae9c:	stp	x20, x19, [sp, #80]
  42aea0:	mov	x29, sp
  42aea4:	sub	sp, sp, #0xfc0
  42aea8:	mov	w20, w2
  42aeac:	mov	x19, x1
  42aeb0:	cbz	x3, 42b03c <wcrtomb@plt+0x2654c>
  42aeb4:	ldrb	w8, [x3]
  42aeb8:	mov	x21, x3
  42aebc:	cbz	w8, 42af9c <wcrtomb@plt+0x264ac>
  42aec0:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42aec4:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42aec8:	add	x23, x23, #0xbc2
  42aecc:	add	x24, x24, #0xbbf
  42aed0:	mov	x26, x21
  42aed4:	mov	x22, x21
  42aed8:	b	42aeec <wcrtomb@plt+0x263fc>
  42aedc:	strb	w8, [x22], #1
  42aee0:	ldrb	w8, [x25, #1]!
  42aee4:	mov	x26, x25
  42aee8:	cbz	w8, 42af90 <wcrtomb@plt+0x264a0>
  42aeec:	mov	x0, x26
  42aef0:	mov	x1, x23
  42aef4:	bl	404980 <strcspn@plt>
  42aef8:	add	x25, x26, x0
  42aefc:	ldrb	w8, [x25]
  42af00:	cmp	w8, #0x3a
  42af04:	b.ne	42af3c <wcrtomb@plt+0x2644c>  // b.any
  42af08:	add	x25, x25, #0x1
  42af0c:	mov	x0, x25
  42af10:	mov	x1, x23
  42af14:	bl	404980 <strcspn@plt>
  42af18:	add	x25, x25, x0
  42af1c:	ldrb	w8, [x25]
  42af20:	cmp	w8, #0x3a
  42af24:	b.ne	42af3c <wcrtomb@plt+0x2644c>  // b.any
  42af28:	add	x25, x25, #0x1
  42af2c:	mov	x0, x25
  42af30:	mov	x1, x23
  42af34:	bl	404980 <strcspn@plt>
  42af38:	add	x25, x25, x0
  42af3c:	cmp	x26, x22
  42af40:	sub	x27, x25, x26
  42af44:	b.eq	42af58 <wcrtomb@plt+0x26468>  // b.none
  42af48:	mov	x0, x22
  42af4c:	mov	x1, x26
  42af50:	mov	x2, x27
  42af54:	bl	403e90 <memmove@plt>
  42af58:	ldrb	w8, [x25]
  42af5c:	add	x22, x22, x27
  42af60:	cmp	w8, #0x3a
  42af64:	b.ne	42af7c <wcrtomb@plt+0x2648c>  // b.any
  42af68:	mov	x0, x25
  42af6c:	mov	x1, x24
  42af70:	bl	404980 <strcspn@plt>
  42af74:	add	x25, x25, x0
  42af78:	ldrb	w8, [x25]
  42af7c:	cmp	w8, #0x2c
  42af80:	b.eq	42aedc <wcrtomb@plt+0x263ec>  // b.none
  42af84:	cmp	w8, #0xa
  42af88:	b.eq	42aedc <wcrtomb@plt+0x263ec>  // b.none
  42af8c:	b	42aee4 <wcrtomb@plt+0x263f4>
  42af90:	cmp	x26, x22
  42af94:	b.eq	42af9c <wcrtomb@plt+0x264ac>  // b.none
  42af98:	strb	wzr, [x22]
  42af9c:	mov	x0, x21
  42afa0:	bl	4048e0 <acl_from_text@plt>
  42afa4:	mov	x21, x0
  42afa8:	cbz	x0, 42b10c <wcrtomb@plt+0x2661c>
  42afac:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  42afb0:	ldr	w23, [x8, #1864]
  42afb4:	cmn	w23, #0x64
  42afb8:	b.eq	42afc8 <wcrtomb@plt+0x264d8>  // b.none
  42afbc:	ldrb	w8, [x19]
  42afc0:	cmp	w8, #0x2f
  42afc4:	b.ne	42b13c <wcrtomb@plt+0x2664c>  // b.any
  42afc8:	mov	x0, x19
  42afcc:	mov	w1, w20
  42afd0:	mov	x2, x21
  42afd4:	bl	404470 <acl_set_file@plt>
  42afd8:	mov	w22, w0
  42afdc:	cmn	w22, #0x1
  42afe0:	b.ne	42b030 <wcrtomb@plt+0x26540>  // b.any
  42afe4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42afe8:	ldrb	w8, [x8, #3714]
  42afec:	tbz	w8, #5, 42b030 <wcrtomb@plt+0x26540>
  42aff0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42aff4:	ldr	x8, [x8, #4000]
  42aff8:	cbz	x8, 42b000 <wcrtomb@plt+0x26510>
  42affc:	blr	x8
  42b000:	bl	4049c0 <__errno_location@plt>
  42b004:	ldr	w20, [x0]
  42b008:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b00c:	add	x1, x1, #0xb8a
  42b010:	mov	w2, #0x5                   	// #5
  42b014:	mov	x0, xzr
  42b018:	bl	4048b0 <dcgettext@plt>
  42b01c:	mov	x2, x0
  42b020:	mov	w0, wzr
  42b024:	mov	w1, w20
  42b028:	mov	x3, x19
  42b02c:	bl	403f60 <error@plt>
  42b030:	mov	x0, x21
  42b034:	bl	404ac0 <acl_free@plt>
  42b038:	b	42b11c <wcrtomb@plt+0x2662c>
  42b03c:	tbz	w4, #0, 42b0bc <wcrtomb@plt+0x265cc>
  42b040:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  42b044:	ldr	w21, [x8, #1864]
  42b048:	cmn	w21, #0x64
  42b04c:	b.eq	42b05c <wcrtomb@plt+0x2656c>  // b.none
  42b050:	ldrb	w8, [x19]
  42b054:	cmp	w8, #0x2f
  42b058:	b.ne	42b27c <wcrtomb@plt+0x2678c>  // b.any
  42b05c:	mov	x0, x19
  42b060:	bl	404180 <acl_delete_def_file@plt>
  42b064:	mov	w20, w0
  42b068:	cbz	w20, 42b11c <wcrtomb@plt+0x2662c>
  42b06c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42b070:	ldrb	w8, [x8, #3714]
  42b074:	tbz	w8, #5, 42b11c <wcrtomb@plt+0x2662c>
  42b078:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b07c:	ldr	x8, [x8, #4000]
  42b080:	cbz	x8, 42b088 <wcrtomb@plt+0x26598>
  42b084:	blr	x8
  42b088:	bl	4049c0 <__errno_location@plt>
  42b08c:	ldr	w20, [x0]
  42b090:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b094:	add	x1, x1, #0xb37
  42b098:	mov	w2, #0x5                   	// #5
  42b09c:	mov	x0, xzr
  42b0a0:	bl	4048b0 <dcgettext@plt>
  42b0a4:	mov	x2, x0
  42b0a8:	mov	w0, wzr
  42b0ac:	mov	w1, w20
  42b0b0:	mov	x3, x19
  42b0b4:	bl	403f60 <error@plt>
  42b0b8:	b	42b11c <wcrtomb@plt+0x2662c>
  42b0bc:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b0c0:	add	x9, x9, #0xbc6
  42b0c4:	ldr	w8, [x0, #104]
  42b0c8:	ldp	q0, q1, [x9]
  42b0cc:	stp	q0, q1, [sp]
  42b0d0:	tbnz	w8, #8, 42b1ec <wcrtomb@plt+0x266fc>
  42b0d4:	tbnz	w8, #7, 42b1f8 <wcrtomb@plt+0x26708>
  42b0d8:	tbnz	w8, #6, 42b204 <wcrtomb@plt+0x26714>
  42b0dc:	tbnz	w8, #5, 42b210 <wcrtomb@plt+0x26720>
  42b0e0:	tbnz	w8, #4, 42b21c <wcrtomb@plt+0x2672c>
  42b0e4:	tbnz	w8, #3, 42b228 <wcrtomb@plt+0x26738>
  42b0e8:	tbnz	w8, #2, 42b234 <wcrtomb@plt+0x26744>
  42b0ec:	tbnz	w8, #1, 42b240 <wcrtomb@plt+0x26750>
  42b0f0:	tbz	w8, #0, 42b0fc <wcrtomb@plt+0x2660c>
  42b0f4:	mov	w8, #0x78                  	// #120
  42b0f8:	strb	w8, [sp, #30]
  42b0fc:	mov	x0, sp
  42b100:	bl	4048e0 <acl_from_text@plt>
  42b104:	mov	x21, x0
  42b108:	cbnz	x0, 42afac <wcrtomb@plt+0x264bc>
  42b10c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b110:	add	x0, x0, #0xb7c
  42b114:	mov	x1, x19
  42b118:	bl	42c680 <wcrtomb@plt+0x27b90>
  42b11c:	add	sp, sp, #0xfc0
  42b120:	ldp	x20, x19, [sp, #80]
  42b124:	ldp	x22, x21, [sp, #64]
  42b128:	ldp	x24, x23, [sp, #48]
  42b12c:	ldp	x26, x25, [sp, #32]
  42b130:	ldp	x28, x27, [sp, #16]
  42b134:	ldp	x29, x30, [sp], #96
  42b138:	ret
  42b13c:	mov	x0, sp
  42b140:	mov	w1, w23
  42b144:	mov	x2, x19
  42b148:	mov	x27, sp
  42b14c:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  42b150:	cbz	x0, 42b1b4 <wcrtomb@plt+0x266c4>
  42b154:	mov	w1, w20
  42b158:	mov	x2, x21
  42b15c:	mov	x25, x0
  42b160:	bl	404470 <acl_set_file@plt>
  42b164:	mov	w22, w0
  42b168:	bl	4049c0 <__errno_location@plt>
  42b16c:	ldr	w26, [x0]
  42b170:	mov	x24, x0
  42b174:	cmp	x25, x27
  42b178:	b.eq	42b184 <wcrtomb@plt+0x26694>  // b.none
  42b17c:	mov	x0, x25
  42b180:	bl	4046b0 <free@plt>
  42b184:	cmn	w22, #0x1
  42b188:	b.ne	42afdc <wcrtomb@plt+0x264ec>  // b.any
  42b18c:	cmp	w26, #0x26
  42b190:	b.hi	42b374 <wcrtomb@plt+0x26884>  // b.pmore
  42b194:	mov	w8, w26
  42b198:	mov	w9, #0x1                   	// #1
  42b19c:	lsl	x8, x9, x8
  42b1a0:	mov	x9, #0x2006                	// #8198
  42b1a4:	movk	x9, #0x10, lsl #16
  42b1a8:	movk	x9, #0x40, lsl #32
  42b1ac:	tst	x8, x9
  42b1b0:	b.eq	42b374 <wcrtomb@plt+0x26884>  // b.none
  42b1b4:	mov	x0, sp
  42b1b8:	bl	449424 <argp_parse@@Base+0xed78>
  42b1bc:	cbnz	w0, 42b408 <wcrtomb@plt+0x26918>
  42b1c0:	tbnz	w23, #31, 42b250 <wcrtomb@plt+0x26760>
  42b1c4:	ldr	w8, [sp]
  42b1c8:	cmp	w8, w23
  42b1cc:	b.ne	42b250 <wcrtomb@plt+0x26760>  // b.any
  42b1d0:	mov	x0, sp
  42b1d4:	bl	44949c <argp_parse@@Base+0xedf0>
  42b1d8:	bl	4049c0 <__errno_location@plt>
  42b1dc:	mov	w8, #0x9                   	// #9
  42b1e0:	str	w8, [x0]
  42b1e4:	mov	w22, #0xffffffff            	// #-1
  42b1e8:	b	42afdc <wcrtomb@plt+0x264ec>
  42b1ec:	mov	w9, #0x72                  	// #114
  42b1f0:	strb	w9, [sp, #6]
  42b1f4:	tbz	w8, #7, 42b0d8 <wcrtomb@plt+0x265e8>
  42b1f8:	mov	w9, #0x77                  	// #119
  42b1fc:	strb	w9, [sp, #7]
  42b200:	tbz	w8, #6, 42b0dc <wcrtomb@plt+0x265ec>
  42b204:	mov	w9, #0x78                  	// #120
  42b208:	strb	w9, [sp, #8]
  42b20c:	tbz	w8, #5, 42b0e0 <wcrtomb@plt+0x265f0>
  42b210:	mov	w9, #0x72                  	// #114
  42b214:	strb	w9, [sp, #17]
  42b218:	tbz	w8, #4, 42b0e4 <wcrtomb@plt+0x265f4>
  42b21c:	mov	w9, #0x77                  	// #119
  42b220:	strb	w9, [sp, #18]
  42b224:	tbz	w8, #3, 42b0e8 <wcrtomb@plt+0x265f8>
  42b228:	mov	w9, #0x78                  	// #120
  42b22c:	strb	w9, [sp, #19]
  42b230:	tbz	w8, #2, 42b0ec <wcrtomb@plt+0x265fc>
  42b234:	mov	w9, #0x72                  	// #114
  42b238:	strb	w9, [sp, #28]
  42b23c:	tbz	w8, #1, 42b0f0 <wcrtomb@plt+0x26600>
  42b240:	mov	w9, #0x77                  	// #119
  42b244:	strb	w9, [sp, #29]
  42b248:	tbnz	w8, #0, 42b0f4 <wcrtomb@plt+0x26604>
  42b24c:	b	42b0fc <wcrtomb@plt+0x2660c>
  42b250:	mov	w0, w23
  42b254:	bl	403f70 <fchdir@plt>
  42b258:	cbz	w0, 42b324 <wcrtomb@plt+0x26834>
  42b25c:	bl	4049c0 <__errno_location@plt>
  42b260:	ldr	w22, [x0]
  42b264:	mov	x20, x0
  42b268:	mov	x0, sp
  42b26c:	bl	44949c <argp_parse@@Base+0xedf0>
  42b270:	str	w22, [x20]
  42b274:	mov	w22, #0xffffffff            	// #-1
  42b278:	b	42afdc <wcrtomb@plt+0x264ec>
  42b27c:	mov	x0, sp
  42b280:	mov	w1, w21
  42b284:	mov	x2, x19
  42b288:	mov	x25, sp
  42b28c:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  42b290:	cbz	x0, 42b2ec <wcrtomb@plt+0x267fc>
  42b294:	mov	x23, x0
  42b298:	bl	404180 <acl_delete_def_file@plt>
  42b29c:	mov	w20, w0
  42b2a0:	bl	4049c0 <__errno_location@plt>
  42b2a4:	ldr	w24, [x0]
  42b2a8:	mov	x22, x0
  42b2ac:	cmp	x23, x25
  42b2b0:	b.eq	42b2bc <wcrtomb@plt+0x267cc>  // b.none
  42b2b4:	mov	x0, x23
  42b2b8:	bl	4046b0 <free@plt>
  42b2bc:	cmn	w20, #0x1
  42b2c0:	b.ne	42b068 <wcrtomb@plt+0x26578>  // b.any
  42b2c4:	cmp	w24, #0x26
  42b2c8:	b.hi	42b3cc <wcrtomb@plt+0x268dc>  // b.pmore
  42b2cc:	mov	w8, w24
  42b2d0:	mov	w9, #0x1                   	// #1
  42b2d4:	lsl	x8, x9, x8
  42b2d8:	mov	x9, #0x2006                	// #8198
  42b2dc:	movk	x9, #0x10, lsl #16
  42b2e0:	movk	x9, #0x40, lsl #32
  42b2e4:	tst	x8, x9
  42b2e8:	b.eq	42b3cc <wcrtomb@plt+0x268dc>  // b.none
  42b2ec:	mov	x0, sp
  42b2f0:	bl	449424 <argp_parse@@Base+0xed78>
  42b2f4:	cbnz	w0, 42b408 <wcrtomb@plt+0x26918>
  42b2f8:	tbnz	w21, #31, 42b348 <wcrtomb@plt+0x26858>
  42b2fc:	ldr	w8, [sp]
  42b300:	cmp	w8, w21
  42b304:	b.ne	42b348 <wcrtomb@plt+0x26858>  // b.any
  42b308:	mov	x0, sp
  42b30c:	bl	44949c <argp_parse@@Base+0xedf0>
  42b310:	bl	4049c0 <__errno_location@plt>
  42b314:	mov	w8, #0x9                   	// #9
  42b318:	str	w8, [x0]
  42b31c:	mov	w20, #0xffffffff            	// #-1
  42b320:	b	42b068 <wcrtomb@plt+0x26578>
  42b324:	mov	x0, x19
  42b328:	mov	w1, w20
  42b32c:	mov	x2, x21
  42b330:	bl	404470 <acl_set_file@plt>
  42b334:	mov	w22, w0
  42b338:	cmn	w0, #0x1
  42b33c:	b.eq	42b384 <wcrtomb@plt+0x26894>  // b.none
  42b340:	mov	w20, wzr
  42b344:	b	42b38c <wcrtomb@plt+0x2689c>
  42b348:	mov	w0, w21
  42b34c:	bl	403f70 <fchdir@plt>
  42b350:	cbz	w0, 42b3b0 <wcrtomb@plt+0x268c0>
  42b354:	bl	4049c0 <__errno_location@plt>
  42b358:	ldr	w21, [x0]
  42b35c:	mov	x20, x0
  42b360:	mov	x0, sp
  42b364:	bl	44949c <argp_parse@@Base+0xedf0>
  42b368:	str	w21, [x20]
  42b36c:	mov	w20, #0xffffffff            	// #-1
  42b370:	b	42b068 <wcrtomb@plt+0x26578>
  42b374:	cmp	w26, #0x5f
  42b378:	b.eq	42b1b4 <wcrtomb@plt+0x266c4>  // b.none
  42b37c:	str	w26, [x24]
  42b380:	b	42afdc <wcrtomb@plt+0x264ec>
  42b384:	bl	4049c0 <__errno_location@plt>
  42b388:	ldr	w20, [x0]
  42b38c:	mov	x0, sp
  42b390:	bl	449484 <argp_parse@@Base+0xedd8>
  42b394:	cbnz	w0, 42b414 <wcrtomb@plt+0x26924>
  42b398:	mov	x0, sp
  42b39c:	bl	44949c <argp_parse@@Base+0xedf0>
  42b3a0:	cbz	w20, 42afdc <wcrtomb@plt+0x264ec>
  42b3a4:	bl	4049c0 <__errno_location@plt>
  42b3a8:	str	w20, [x0]
  42b3ac:	b	42afdc <wcrtomb@plt+0x264ec>
  42b3b0:	mov	x0, x19
  42b3b4:	bl	404180 <acl_delete_def_file@plt>
  42b3b8:	mov	w20, w0
  42b3bc:	cmn	w0, #0x1
  42b3c0:	b.eq	42b3dc <wcrtomb@plt+0x268ec>  // b.none
  42b3c4:	mov	w21, wzr
  42b3c8:	b	42b3e4 <wcrtomb@plt+0x268f4>
  42b3cc:	cmp	w24, #0x5f
  42b3d0:	b.eq	42b2ec <wcrtomb@plt+0x267fc>  // b.none
  42b3d4:	str	w24, [x22]
  42b3d8:	b	42b068 <wcrtomb@plt+0x26578>
  42b3dc:	bl	4049c0 <__errno_location@plt>
  42b3e0:	ldr	w21, [x0]
  42b3e4:	mov	x0, sp
  42b3e8:	bl	449484 <argp_parse@@Base+0xedd8>
  42b3ec:	cbnz	w0, 42b414 <wcrtomb@plt+0x26924>
  42b3f0:	mov	x0, sp
  42b3f4:	bl	44949c <argp_parse@@Base+0xedf0>
  42b3f8:	cbz	w21, 42b068 <wcrtomb@plt+0x26578>
  42b3fc:	bl	4049c0 <__errno_location@plt>
  42b400:	str	w21, [x0]
  42b404:	b	42b068 <wcrtomb@plt+0x26578>
  42b408:	bl	4049c0 <__errno_location@plt>
  42b40c:	ldr	w0, [x0]
  42b410:	bl	440c28 <argp_parse@@Base+0x657c>
  42b414:	bl	4049c0 <__errno_location@plt>
  42b418:	ldr	w0, [x0]
  42b41c:	bl	440c68 <argp_parse@@Base+0x65bc>
  42b420:	stp	x29, x30, [sp, #-32]!
  42b424:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b428:	add	x8, x8, #0x900
  42b42c:	tst	w1, #0x1
  42b430:	add	x9, x8, #0x18
  42b434:	stp	x20, x19, [sp, #16]
  42b438:	csel	x20, x8, x9, ne  // ne = any
  42b43c:	ldp	x9, x8, [x20, #8]
  42b440:	mov	x19, x0
  42b444:	mov	x29, sp
  42b448:	cmp	x8, x9
  42b44c:	b.ne	42b478 <wcrtomb@plt+0x26988>  // b.any
  42b450:	cbz	x8, 42b480 <wcrtomb@plt+0x26990>
  42b454:	ldr	x0, [x20]
  42b458:	cbz	x0, 42b490 <wcrtomb@plt+0x269a0>
  42b45c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42b460:	movk	x9, #0xaaa, lsl #48
  42b464:	cmp	x8, x9
  42b468:	b.cs	42b4c4 <wcrtomb@plt+0x269d4>  // b.hs, b.nlast
  42b46c:	add	x8, x8, x8, lsr #1
  42b470:	add	x8, x8, #0x1
  42b474:	b	42b498 <wcrtomb@plt+0x269a8>
  42b478:	ldr	x0, [x20]
  42b47c:	b	42b4ac <wcrtomb@plt+0x269bc>
  42b480:	mov	w8, #0x4                   	// #4
  42b484:	str	x8, [x20, #8]
  42b488:	ldr	x0, [x20]
  42b48c:	cbnz	x0, 42b45c <wcrtomb@plt+0x2696c>
  42b490:	lsr	x9, x8, #60
  42b494:	cbnz	x9, 42b4c4 <wcrtomb@plt+0x269d4>
  42b498:	lsl	x1, x8, #3
  42b49c:	str	x8, [x20, #8]
  42b4a0:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b4a4:	ldr	x8, [x20, #16]
  42b4a8:	str	x0, [x20]
  42b4ac:	add	x9, x8, #0x1
  42b4b0:	str	x9, [x20, #16]
  42b4b4:	str	x19, [x0, x8, lsl #3]
  42b4b8:	ldp	x20, x19, [sp, #16]
  42b4bc:	ldp	x29, x30, [sp], #32
  42b4c0:	ret
  42b4c4:	bl	40eb80 <wcrtomb@plt+0xa090>
  42b4c8:	stp	x29, x30, [sp, #-16]!
  42b4cc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b4d0:	ldr	x8, [x8, #2312]
  42b4d4:	mov	x29, sp
  42b4d8:	cbz	x8, 42b4e8 <wcrtomb@plt+0x269f8>
  42b4dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b4e0:	ldr	x0, [x8, #2304]
  42b4e4:	bl	4046b0 <free@plt>
  42b4e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b4ec:	ldr	x8, [x8, #2336]
  42b4f0:	cbz	x8, 42b504 <wcrtomb@plt+0x26a14>
  42b4f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b4f8:	ldr	x0, [x8, #2328]
  42b4fc:	ldp	x29, x30, [sp], #16
  42b500:	b	4046b0 <free@plt>
  42b504:	ldp	x29, x30, [sp], #16
  42b508:	ret
  42b50c:	sub	sp, sp, #0x80
  42b510:	stp	x29, x30, [sp, #32]
  42b514:	stp	x28, x27, [sp, #48]
  42b518:	stp	x26, x25, [sp, #64]
  42b51c:	stp	x24, x23, [sp, #80]
  42b520:	stp	x22, x21, [sp, #96]
  42b524:	stp	x20, x19, [sp, #112]
  42b528:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b52c:	ldr	w8, [x8, #3648]
  42b530:	add	x29, sp, #0x20
  42b534:	str	x2, [sp, #8]
  42b538:	stur	x1, [x29, #-8]
  42b53c:	cmp	w8, #0x1
  42b540:	stur	w0, [x29, #-12]
  42b544:	b.lt	42b9b8 <wcrtomb@plt+0x26ec8>  // b.tstop
  42b548:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b54c:	ldr	x2, [x19, #2288]
  42b550:	mov	w20, w3
  42b554:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42b558:	cbz	x2, 42b5f4 <wcrtomb@plt+0x26b04>
  42b55c:	ldr	x3, [x21, #3816]
  42b560:	cbz	w20, 42b624 <wcrtomb@plt+0x26b34>
  42b564:	mov	w0, w20
  42b568:	mov	x1, x2
  42b56c:	mov	x2, x3
  42b570:	bl	404870 <flistxattr@plt>
  42b574:	mov	x23, x0
  42b578:	cmn	x0, #0x1
  42b57c:	b.ne	42b63c <wcrtomb@plt+0x26b4c>  // b.any
  42b580:	mov	x22, #0x5555555555555555    	// #6148914691236517205
  42b584:	movk	x22, #0x5554
  42b588:	bl	4049c0 <__errno_location@plt>
  42b58c:	mov	x24, x0
  42b590:	b	42b5c0 <wcrtomb@plt+0x26ad0>
  42b594:	cbz	x1, 42b5ec <wcrtomb@plt+0x26afc>
  42b598:	tbnz	x1, #63, 42b730 <wcrtomb@plt+0x26c40>
  42b59c:	str	x1, [x21, #3816]
  42b5a0:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b5a4:	ldr	x2, [x21, #3816]
  42b5a8:	mov	x1, x0
  42b5ac:	str	x0, [x19, #2288]
  42b5b0:	mov	w0, w20
  42b5b4:	bl	404870 <flistxattr@plt>
  42b5b8:	cmn	x0, #0x1
  42b5bc:	b.ne	42b70c <wcrtomb@plt+0x26c1c>  // b.any
  42b5c0:	ldr	w8, [x24]
  42b5c4:	cmp	w8, #0x22
  42b5c8:	b.ne	42b6d0 <wcrtomb@plt+0x26be0>  // b.any
  42b5cc:	ldr	x0, [x19, #2288]
  42b5d0:	ldr	x1, [x21, #3816]
  42b5d4:	cbz	x0, 42b594 <wcrtomb@plt+0x26aa4>
  42b5d8:	cmp	x1, x22
  42b5dc:	b.cs	42b730 <wcrtomb@plt+0x26c40>  // b.hs, b.nlast
  42b5e0:	add	x8, x1, x1, lsr #1
  42b5e4:	add	x1, x8, #0x1
  42b5e8:	b	42b59c <wcrtomb@plt+0x26aac>
  42b5ec:	mov	w1, #0x80                  	// #128
  42b5f0:	b	42b59c <wcrtomb@plt+0x26aac>
  42b5f4:	ldr	x1, [x21, #3816]
  42b5f8:	cbz	x1, 42b604 <wcrtomb@plt+0x26b14>
  42b5fc:	tbz	x1, #63, 42b608 <wcrtomb@plt+0x26b18>
  42b600:	b	42b730 <wcrtomb@plt+0x26c40>
  42b604:	mov	w1, #0x80                  	// #128
  42b608:	mov	x0, xzr
  42b60c:	str	x1, [x21, #3816]
  42b610:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b614:	mov	x2, x0
  42b618:	str	x0, [x19, #2288]
  42b61c:	ldr	x3, [x21, #3816]
  42b620:	cbnz	w20, 42b564 <wcrtomb@plt+0x26a74>
  42b624:	ldur	w0, [x29, #-12]
  42b628:	ldur	x1, [x29, #-8]
  42b62c:	bl	4369b8 <wcrtomb@plt+0x31ec8>
  42b630:	mov	x23, x0
  42b634:	cmn	x0, #0x1
  42b638:	b.eq	42b658 <wcrtomb@plt+0x26b68>  // b.none
  42b63c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b640:	add	x8, x8, #0x8f0
  42b644:	ldp	x24, x9, [x8]
  42b648:	cbz	x9, 42b720 <wcrtomb@plt+0x26c30>
  42b64c:	cmp	x23, #0x1
  42b650:	b.ge	42b754 <wcrtomb@plt+0x26c64>  // b.tcont
  42b654:	b	42b9b8 <wcrtomb@plt+0x26ec8>
  42b658:	mov	x22, #0x5555555555555555    	// #6148914691236517205
  42b65c:	movk	x22, #0x5554
  42b660:	bl	4049c0 <__errno_location@plt>
  42b664:	mov	x24, x0
  42b668:	b	42b698 <wcrtomb@plt+0x26ba8>
  42b66c:	mov	w1, #0x80                  	// #128
  42b670:	str	x1, [x21, #3816]
  42b674:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b678:	ldr	x3, [x21, #3816]
  42b67c:	mov	x2, x0
  42b680:	str	x0, [x19, #2288]
  42b684:	ldur	w0, [x29, #-12]
  42b688:	ldur	x1, [x29, #-8]
  42b68c:	bl	4369b8 <wcrtomb@plt+0x31ec8>
  42b690:	cmn	x0, #0x1
  42b694:	b.ne	42b70c <wcrtomb@plt+0x26c1c>  // b.any
  42b698:	ldr	w8, [x24]
  42b69c:	cmp	w8, #0x22
  42b6a0:	b.ne	42b6d0 <wcrtomb@plt+0x26be0>  // b.any
  42b6a4:	ldr	x0, [x19, #2288]
  42b6a8:	ldr	x1, [x21, #3816]
  42b6ac:	cbz	x0, 42b6c4 <wcrtomb@plt+0x26bd4>
  42b6b0:	cmp	x1, x22
  42b6b4:	b.cs	42b730 <wcrtomb@plt+0x26c40>  // b.hs, b.nlast
  42b6b8:	add	x8, x1, x1, lsr #1
  42b6bc:	add	x1, x8, #0x1
  42b6c0:	b	42b670 <wcrtomb@plt+0x26b80>
  42b6c4:	cbz	x1, 42b66c <wcrtomb@plt+0x26b7c>
  42b6c8:	tbz	x1, #63, 42b670 <wcrtomb@plt+0x26b80>
  42b6cc:	b	42b730 <wcrtomb@plt+0x26c40>
  42b6d0:	cmp	w20, #0x0
  42b6d4:	ldur	x1, [x29, #-8]
  42b6d8:	ldp	x20, x19, [sp, #112]
  42b6dc:	ldp	x22, x21, [sp, #96]
  42b6e0:	ldp	x24, x23, [sp, #80]
  42b6e4:	ldp	x26, x25, [sp, #64]
  42b6e8:	ldp	x28, x27, [sp, #48]
  42b6ec:	ldp	x29, x30, [sp, #32]
  42b6f0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b6f4:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b6f8:	add	x8, x8, #0xa9d
  42b6fc:	add	x9, x9, #0xa90
  42b700:	csel	x0, x9, x8, eq  // eq = none
  42b704:	add	sp, sp, #0x80
  42b708:	b	42c680 <wcrtomb@plt+0x27b90>
  42b70c:	mov	x23, x0
  42b710:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b714:	add	x8, x8, #0x8f0
  42b718:	ldp	x24, x9, [x8]
  42b71c:	cbnz	x9, 42b64c <wcrtomb@plt+0x26b5c>
  42b720:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42b724:	ldr	x1, [x8, #3824]
  42b728:	cbz	x1, 42b734 <wcrtomb@plt+0x26c44>
  42b72c:	tbz	x1, #63, 42b738 <wcrtomb@plt+0x26c48>
  42b730:	bl	40eb80 <wcrtomb@plt+0xa090>
  42b734:	mov	w1, #0x80                  	// #128
  42b738:	mov	x0, xzr
  42b73c:	str	x1, [x8, #3824]
  42b740:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b744:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b748:	str	x0, [x8, #2296]
  42b74c:	cmp	x23, #0x1
  42b750:	b.lt	42b9b8 <wcrtomb@plt+0x26ec8>  // b.tstop
  42b754:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b758:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42b75c:	add	x8, x8, #0xab4
  42b760:	add	x9, x9, #0xaa8
  42b764:	cmp	w20, #0x0
  42b768:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b76c:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42b770:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b774:	csel	x8, x9, x8, eq  // eq = none
  42b778:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b77c:	str	x8, [sp]
  42b780:	b	42b7ac <wcrtomb@plt+0x26cbc>
  42b784:	ldr	x2, [x21, #2296]
  42b788:	ldr	x0, [sp, #8]
  42b78c:	mov	x1, x24
  42b790:	mov	x3, x27
  42b794:	bl	412904 <wcrtomb@plt+0xde14>
  42b798:	add	x8, x26, #0x1
  42b79c:	sub	x23, x23, x8
  42b7a0:	cmp	x23, #0x0
  42b7a4:	add	x24, x24, x8
  42b7a8:	b.le	42b9b8 <wcrtomb@plt+0x26ec8>
  42b7ac:	mov	x0, x24
  42b7b0:	bl	403f00 <strlen@plt>
  42b7b4:	ldr	x3, [x21, #2296]
  42b7b8:	ldr	x4, [x22, #3824]
  42b7bc:	mov	x26, x0
  42b7c0:	cbz	w20, 42b85c <wcrtomb@plt+0x26d6c>
  42b7c4:	mov	w0, w20
  42b7c8:	mov	x1, x24
  42b7cc:	mov	x2, x3
  42b7d0:	mov	x3, x4
  42b7d4:	bl	404710 <fgetxattr@plt>
  42b7d8:	mov	x27, x0
  42b7dc:	cmn	x0, #0x1
  42b7e0:	b.ne	42b878 <wcrtomb@plt+0x26d88>  // b.any
  42b7e4:	bl	4049c0 <__errno_location@plt>
  42b7e8:	mov	x28, x0
  42b7ec:	b	42b81c <wcrtomb@plt+0x26d2c>
  42b7f0:	mov	w1, #0x80                  	// #128
  42b7f4:	str	x1, [x22, #3824]
  42b7f8:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b7fc:	ldr	x3, [x22, #3824]
  42b800:	mov	x2, x0
  42b804:	str	x0, [x21, #2296]
  42b808:	mov	w0, w20
  42b80c:	mov	x1, x24
  42b810:	bl	404710 <fgetxattr@plt>
  42b814:	cmn	x0, #0x1
  42b818:	b.ne	42b950 <wcrtomb@plt+0x26e60>  // b.any
  42b81c:	ldr	w8, [x28]
  42b820:	cmp	w8, #0x22
  42b824:	b.ne	42b938 <wcrtomb@plt+0x26e48>  // b.any
  42b828:	ldr	x0, [x21, #2296]
  42b82c:	ldr	x1, [x22, #3824]
  42b830:	cbz	x0, 42b850 <wcrtomb@plt+0x26d60>
  42b834:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  42b838:	movk	x8, #0x5554
  42b83c:	cmp	x1, x8
  42b840:	b.cs	42b730 <wcrtomb@plt+0x26c40>  // b.hs, b.nlast
  42b844:	add	x8, x1, x1, lsr #1
  42b848:	add	x1, x8, #0x1
  42b84c:	b	42b7f4 <wcrtomb@plt+0x26d04>
  42b850:	cbz	x1, 42b7f0 <wcrtomb@plt+0x26d00>
  42b854:	tbz	x1, #63, 42b7f4 <wcrtomb@plt+0x26d04>
  42b858:	b	42b730 <wcrtomb@plt+0x26c40>
  42b85c:	ldur	w0, [x29, #-12]
  42b860:	ldur	x1, [x29, #-8]
  42b864:	mov	x2, x24
  42b868:	bl	4365e0 <wcrtomb@plt+0x31af0>
  42b86c:	mov	x27, x0
  42b870:	cmn	x0, #0x1
  42b874:	b.eq	42b8bc <wcrtomb@plt+0x26dcc>  // b.none
  42b878:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b87c:	ldr	x8, [x8, #2312]
  42b880:	cbz	x8, 42b960 <wcrtomb@plt+0x26e70>
  42b884:	ldr	x8, [x25, #2320]
  42b888:	cbz	x8, 42b798 <wcrtomb@plt+0x26ca8>
  42b88c:	mov	x28, xzr
  42b890:	ldr	x8, [x19, #2304]
  42b894:	mov	x1, x24
  42b898:	mov	w2, wzr
  42b89c:	ldr	x0, [x8, x28, lsl #3]
  42b8a0:	bl	4047a0 <fnmatch@plt>
  42b8a4:	cbz	w0, 42b960 <wcrtomb@plt+0x26e70>
  42b8a8:	ldr	x8, [x25, #2320]
  42b8ac:	add	x28, x28, #0x1
  42b8b0:	cmp	x8, x28
  42b8b4:	b.hi	42b890 <wcrtomb@plt+0x26da0>  // b.pmore
  42b8b8:	b	42b798 <wcrtomb@plt+0x26ca8>
  42b8bc:	bl	4049c0 <__errno_location@plt>
  42b8c0:	mov	x28, x0
  42b8c4:	b	42b8f8 <wcrtomb@plt+0x26e08>
  42b8c8:	mov	w1, #0x80                  	// #128
  42b8cc:	str	x1, [x22, #3824]
  42b8d0:	bl	44a090 <argp_parse@@Base+0xf9e4>
  42b8d4:	ldr	x4, [x22, #3824]
  42b8d8:	mov	x3, x0
  42b8dc:	str	x0, [x21, #2296]
  42b8e0:	ldur	w0, [x29, #-12]
  42b8e4:	ldur	x1, [x29, #-8]
  42b8e8:	mov	x2, x24
  42b8ec:	bl	4365e0 <wcrtomb@plt+0x31af0>
  42b8f0:	cmn	x0, #0x1
  42b8f4:	b.ne	42b950 <wcrtomb@plt+0x26e60>  // b.any
  42b8f8:	ldr	w8, [x28]
  42b8fc:	cmp	w8, #0x22
  42b900:	b.ne	42b938 <wcrtomb@plt+0x26e48>  // b.any
  42b904:	ldr	x0, [x21, #2296]
  42b908:	ldr	x1, [x22, #3824]
  42b90c:	cbz	x0, 42b92c <wcrtomb@plt+0x26e3c>
  42b910:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  42b914:	movk	x8, #0x5554
  42b918:	cmp	x1, x8
  42b91c:	b.cs	42b730 <wcrtomb@plt+0x26c40>  // b.hs, b.nlast
  42b920:	add	x8, x1, x1, lsr #1
  42b924:	add	x1, x8, #0x1
  42b928:	b	42b8cc <wcrtomb@plt+0x26ddc>
  42b92c:	cbz	x1, 42b8c8 <wcrtomb@plt+0x26dd8>
  42b930:	tbz	x1, #63, 42b8cc <wcrtomb@plt+0x26ddc>
  42b934:	b	42b730 <wcrtomb@plt+0x26c40>
  42b938:	cmp	w8, #0x3d
  42b93c:	b.eq	42b798 <wcrtomb@plt+0x26ca8>  // b.none
  42b940:	ldr	x0, [sp]
  42b944:	ldur	x1, [x29, #-8]
  42b948:	bl	42c680 <wcrtomb@plt+0x27b90>
  42b94c:	b	42b798 <wcrtomb@plt+0x26ca8>
  42b950:	mov	x27, x0
  42b954:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b958:	ldr	x8, [x8, #2312]
  42b95c:	cbnz	x8, 42b884 <wcrtomb@plt+0x26d94>
  42b960:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b964:	add	x8, x8, #0x920
  42b968:	ldr	x8, [x8]
  42b96c:	cbz	x8, 42b784 <wcrtomb@plt+0x26c94>
  42b970:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b974:	add	x8, x8, #0x920
  42b978:	ldr	x8, [x8, #8]
  42b97c:	cbz	x8, 42b784 <wcrtomb@plt+0x26c94>
  42b980:	mov	x28, xzr
  42b984:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b988:	ldr	x8, [x8, #2328]
  42b98c:	mov	x1, x24
  42b990:	mov	w2, wzr
  42b994:	ldr	x0, [x8, x28, lsl #3]
  42b998:	bl	4047a0 <fnmatch@plt>
  42b99c:	cbz	w0, 42b798 <wcrtomb@plt+0x26ca8>
  42b9a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b9a4:	ldr	x8, [x8, #2344]
  42b9a8:	add	x28, x28, #0x1
  42b9ac:	cmp	x8, x28
  42b9b0:	b.hi	42b984 <wcrtomb@plt+0x26e94>  // b.pmore
  42b9b4:	b	42b784 <wcrtomb@plt+0x26c94>
  42b9b8:	ldp	x20, x19, [sp, #112]
  42b9bc:	ldp	x22, x21, [sp, #96]
  42b9c0:	ldp	x24, x23, [sp, #80]
  42b9c4:	ldp	x26, x25, [sp, #64]
  42b9c8:	ldp	x28, x27, [sp, #48]
  42b9cc:	ldp	x29, x30, [sp, #32]
  42b9d0:	add	sp, sp, #0x80
  42b9d4:	ret
  42b9d8:	stp	x29, x30, [sp, #-32]!
  42b9dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b9e0:	ldr	w8, [x8, #3976]
  42b9e4:	str	x19, [sp, #16]
  42b9e8:	mov	x29, sp
  42b9ec:	cmp	w8, #0x1
  42b9f0:	b.lt	42ba3c <wcrtomb@plt+0x26f4c>  // b.tstop
  42b9f4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42b9f8:	ldrb	w8, [x19, #2280]
  42b9fc:	tbnz	w8, #0, 42ba34 <wcrtomb@plt+0x26f44>
  42ba00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ba04:	ldr	x8, [x8, #4000]
  42ba08:	cbz	x8, 42ba10 <wcrtomb@plt+0x26f20>
  42ba0c:	blr	x8
  42ba10:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ba14:	add	x1, x1, #0xabe
  42ba18:	mov	w2, #0x5                   	// #5
  42ba1c:	mov	x0, xzr
  42ba20:	bl	4048b0 <dcgettext@plt>
  42ba24:	mov	x2, x0
  42ba28:	mov	w0, wzr
  42ba2c:	mov	w1, wzr
  42ba30:	bl	403f60 <error@plt>
  42ba34:	mov	w8, #0x1                   	// #1
  42ba38:	strb	w8, [x19, #2280]
  42ba3c:	ldr	x19, [sp, #16]
  42ba40:	ldp	x29, x30, [sp], #32
  42ba44:	ret
  42ba48:	stp	x29, x30, [sp, #-32]!
  42ba4c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ba50:	ldr	w8, [x8, #3976]
  42ba54:	str	x19, [sp, #16]
  42ba58:	mov	x29, sp
  42ba5c:	cmp	w8, #0x1
  42ba60:	b.lt	42baac <wcrtomb@plt+0x26fbc>  // b.tstop
  42ba64:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ba68:	ldrb	w8, [x19, #2284]
  42ba6c:	tbnz	w8, #0, 42baa4 <wcrtomb@plt+0x26fb4>
  42ba70:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ba74:	ldr	x8, [x8, #4000]
  42ba78:	cbz	x8, 42ba80 <wcrtomb@plt+0x26f90>
  42ba7c:	blr	x8
  42ba80:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ba84:	add	x1, x1, #0xabe
  42ba88:	mov	w2, #0x5                   	// #5
  42ba8c:	mov	x0, xzr
  42ba90:	bl	4048b0 <dcgettext@plt>
  42ba94:	mov	x2, x0
  42ba98:	mov	w0, wzr
  42ba9c:	mov	w1, wzr
  42baa0:	bl	403f60 <error@plt>
  42baa4:	mov	w8, #0x1                   	// #1
  42baa8:	strb	w8, [x19, #2284]
  42baac:	ldr	x19, [sp, #16]
  42bab0:	ldp	x29, x30, [sp], #32
  42bab4:	ret
  42bab8:	sub	sp, sp, #0x80
  42babc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bac0:	ldr	w8, [x8, #3648]
  42bac4:	stp	x29, x30, [sp, #32]
  42bac8:	add	x29, sp, #0x20
  42bacc:	stp	x28, x27, [sp, #48]
  42bad0:	cmp	w8, #0x1
  42bad4:	stp	x26, x25, [sp, #64]
  42bad8:	stp	x24, x23, [sp, #80]
  42badc:	stp	x22, x21, [sp, #96]
  42bae0:	stp	x20, x19, [sp, #112]
  42bae4:	stur	w3, [x29, #-4]
  42bae8:	str	x1, [sp, #16]
  42baec:	b.lt	42bcdc <wcrtomb@plt+0x271ec>  // b.tstop
  42baf0:	ldr	x8, [x0, #328]
  42baf4:	mov	x22, x0
  42baf8:	cbz	x8, 42bcdc <wcrtomb@plt+0x271ec>
  42bafc:	mov	w20, w2
  42bb00:	mov	x25, xzr
  42bb04:	mov	w24, #0x18                  	// #24
  42bb08:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bb0c:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bb10:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bb14:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bb18:	b	42bb44 <wcrtomb@plt+0x27054>
  42bb1c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bb20:	mov	w2, #0x5                   	// #5
  42bb24:	mov	x0, x26
  42bb28:	add	x1, x1, #0xbe6
  42bb2c:	bl	4042c0 <strncmp@plt>
  42bb30:	cbz	w0, 42bbc8 <wcrtomb@plt+0x270d8>
  42bb34:	ldr	x8, [x22, #328]
  42bb38:	add	x25, x25, #0x1
  42bb3c:	cmp	x25, x8
  42bb40:	b.cs	42bcdc <wcrtomb@plt+0x271ec>  // b.hs, b.nlast
  42bb44:	ldr	x8, [x22, #336]
  42bb48:	mul	x9, x25, x24
  42bb4c:	ldr	x8, [x8, x9]
  42bb50:	and	w9, w20, #0xff
  42bb54:	cmp	w9, #0x30
  42bb58:	add	x26, x8, #0xd
  42bb5c:	b.ne	42bb84 <wcrtomb@plt+0x27094>  // b.any
  42bb60:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bb64:	mov	x0, x26
  42bb68:	add	x1, x1, #0xadf
  42bb6c:	bl	404610 <strcmp@plt>
  42bb70:	ldur	w9, [x29, #-4]
  42bb74:	cmp	w0, #0x0
  42bb78:	cset	w8, ne  // ne = any
  42bb7c:	cmp	w8, w9
  42bb80:	b.eq	42bb34 <wcrtomb@plt+0x27044>  // b.none
  42bb84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bb88:	ldr	x8, [x8, #2312]
  42bb8c:	cbz	x8, 42bb1c <wcrtomb@plt+0x2702c>
  42bb90:	ldr	x8, [x21, #2320]
  42bb94:	cbz	x8, 42bb34 <wcrtomb@plt+0x27044>
  42bb98:	mov	x19, xzr
  42bb9c:	ldr	x8, [x27, #2304]
  42bba0:	mov	x1, x26
  42bba4:	mov	w2, wzr
  42bba8:	ldr	x0, [x8, x19, lsl #3]
  42bbac:	bl	4047a0 <fnmatch@plt>
  42bbb0:	cbz	w0, 42bbc8 <wcrtomb@plt+0x270d8>
  42bbb4:	ldr	x8, [x21, #2320]
  42bbb8:	add	x19, x19, #0x1
  42bbbc:	cmp	x8, x19
  42bbc0:	b.hi	42bb9c <wcrtomb@plt+0x270ac>  // b.pmore
  42bbc4:	b	42bb34 <wcrtomb@plt+0x27044>
  42bbc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bbcc:	add	x8, x8, #0x920
  42bbd0:	ldr	x8, [x8]
  42bbd4:	cbz	x8, 42bc14 <wcrtomb@plt+0x27124>
  42bbd8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bbdc:	add	x8, x8, #0x920
  42bbe0:	ldr	x8, [x8, #8]
  42bbe4:	cbz	x8, 42bc14 <wcrtomb@plt+0x27124>
  42bbe8:	mov	x19, xzr
  42bbec:	ldr	x8, [x23, #2328]
  42bbf0:	mov	x1, x26
  42bbf4:	mov	w2, wzr
  42bbf8:	ldr	x0, [x8, x19, lsl #3]
  42bbfc:	bl	4047a0 <fnmatch@plt>
  42bc00:	cbz	w0, 42bb34 <wcrtomb@plt+0x27044>
  42bc04:	ldr	x8, [x28, #2344]
  42bc08:	add	x19, x19, #0x1
  42bc0c:	cmp	x8, x19
  42bc10:	b.hi	42bbec <wcrtomb@plt+0x270fc>  // b.pmore
  42bc14:	ldr	x8, [x22, #336]
  42bc18:	madd	x8, x25, x24, x8
  42bc1c:	ldr	x3, [x8, #8]
  42bc20:	cbz	x3, 42bb34 <wcrtomb@plt+0x27044>
  42bc24:	ldr	x4, [x8, #16]
  42bc28:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x31e3c>
  42bc2c:	ldr	w0, [x8, #1864]
  42bc30:	and	w8, w20, #0xff
  42bc34:	cmp	w8, #0x32
  42bc38:	b.ne	42bc60 <wcrtomb@plt+0x27170>  // b.any
  42bc3c:	ldr	x1, [sp, #16]
  42bc40:	mov	x2, x26
  42bc44:	mov	w5, wzr
  42bc48:	bl	4361e0 <wcrtomb@plt+0x316f0>
  42bc4c:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bc50:	add	x19, x19, #0xbf7
  42bc54:	cmn	w0, #0x1
  42bc58:	b.ne	42bb34 <wcrtomb@plt+0x27044>  // b.any
  42bc5c:	b	42bc80 <wcrtomb@plt+0x27190>
  42bc60:	ldr	x1, [sp, #16]
  42bc64:	mov	x2, x26
  42bc68:	mov	w5, wzr
  42bc6c:	bl	435fd4 <wcrtomb@plt+0x314e4>
  42bc70:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bc74:	add	x19, x19, #0xbec
  42bc78:	cmn	w0, #0x1
  42bc7c:	b.ne	42bb34 <wcrtomb@plt+0x27044>  // b.any
  42bc80:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42bc84:	ldrb	w8, [x8, #3714]
  42bc88:	tbz	w8, #5, 42bb34 <wcrtomb@plt+0x27044>
  42bc8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bc90:	ldr	x8, [x8, #4000]
  42bc94:	cbz	x8, 42bc9c <wcrtomb@plt+0x271ac>
  42bc98:	blr	x8
  42bc9c:	bl	4049c0 <__errno_location@plt>
  42bca0:	ldr	w8, [x0]
  42bca4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bca8:	mov	w2, #0x5                   	// #5
  42bcac:	mov	x0, xzr
  42bcb0:	add	x1, x1, #0xc01
  42bcb4:	str	w8, [sp, #12]
  42bcb8:	bl	4048b0 <dcgettext@plt>
  42bcbc:	ldr	w1, [sp, #12]
  42bcc0:	ldr	x5, [sp, #16]
  42bcc4:	mov	x2, x0
  42bcc8:	mov	w0, wzr
  42bccc:	mov	x3, x19
  42bcd0:	mov	x4, x26
  42bcd4:	bl	403f60 <error@plt>
  42bcd8:	b	42bb34 <wcrtomb@plt+0x27044>
  42bcdc:	ldp	x20, x19, [sp, #112]
  42bce0:	ldp	x22, x21, [sp, #96]
  42bce4:	ldp	x24, x23, [sp, #80]
  42bce8:	ldp	x26, x25, [sp, #64]
  42bcec:	ldp	x28, x27, [sp, #48]
  42bcf0:	ldp	x29, x30, [sp, #32]
  42bcf4:	add	sp, sp, #0x80
  42bcf8:	ret
  42bcfc:	stp	x29, x30, [sp, #-96]!
  42bd00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd04:	ldr	w8, [x8, #3636]
  42bd08:	stp	x20, x19, [sp, #80]
  42bd0c:	mov	x19, x1
  42bd10:	stp	x28, x27, [sp, #16]
  42bd14:	cmp	w8, #0x1
  42bd18:	stp	x26, x25, [sp, #32]
  42bd1c:	stp	x24, x23, [sp, #48]
  42bd20:	stp	x22, x21, [sp, #64]
  42bd24:	mov	x29, sp
  42bd28:	b.gt	42bd34 <wcrtomb@plt+0x27244>
  42bd2c:	strb	wzr, [x19]
  42bd30:	b	42beb8 <wcrtomb@plt+0x273c8>
  42bd34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd38:	ldr	w9, [x8, #3648]
  42bd3c:	mov	x20, x0
  42bd40:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd44:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd48:	cmp	w9, #0x1
  42bd4c:	b.ge	42bd68 <wcrtomb@plt+0x27278>  // b.tcont
  42bd50:	ldr	w9, [x10, #3976]
  42bd54:	cmp	w9, #0x0
  42bd58:	b.gt	42bd68 <wcrtomb@plt+0x27278>
  42bd5c:	ldr	w9, [x24, #3888]
  42bd60:	cmp	w9, #0x1
  42bd64:	b.lt	42be78 <wcrtomb@plt+0x27388>  // b.tstop
  42bd68:	mov	w9, #0x20                  	// #32
  42bd6c:	strh	w9, [x19]
  42bd70:	ldr	w8, [x8, #3648]
  42bd74:	cmp	w8, #0x1
  42bd78:	b.lt	42be78 <wcrtomb@plt+0x27388>  // b.tstop
  42bd7c:	ldr	x8, [x20, #328]
  42bd80:	cbz	x8, 42be78 <wcrtomb@plt+0x27388>
  42bd84:	mov	x25, xzr
  42bd88:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd8c:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd90:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd94:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bd98:	b	42bdc8 <wcrtomb@plt+0x272d8>
  42bd9c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bda0:	mov	w2, #0x5                   	// #5
  42bda4:	mov	x0, x22
  42bda8:	add	x1, x1, #0xbe6
  42bdac:	bl	4042c0 <strncmp@plt>
  42bdb0:	cbz	w0, 42be20 <wcrtomb@plt+0x27330>
  42bdb4:	ldr	x8, [x20, #328]
  42bdb8:	add	x25, x25, #0x1
  42bdbc:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bdc0:	cmp	x8, x25
  42bdc4:	b.ls	42be78 <wcrtomb@plt+0x27388>  // b.plast
  42bdc8:	ldr	x8, [x20, #336]
  42bdcc:	mov	w9, #0x18                  	// #24
  42bdd0:	mul	x9, x25, x9
  42bdd4:	ldr	x8, [x8, x9]
  42bdd8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bddc:	ldr	x9, [x9, #2312]
  42bde0:	add	x22, x8, #0xd
  42bde4:	cbz	x9, 42bd9c <wcrtomb@plt+0x272ac>
  42bde8:	ldr	x8, [x26, #2320]
  42bdec:	cbz	x8, 42bdb4 <wcrtomb@plt+0x272c4>
  42bdf0:	mov	x23, xzr
  42bdf4:	ldr	x8, [x27, #2304]
  42bdf8:	mov	x1, x22
  42bdfc:	mov	w2, wzr
  42be00:	ldr	x0, [x8, x23, lsl #3]
  42be04:	bl	4047a0 <fnmatch@plt>
  42be08:	cbz	w0, 42be20 <wcrtomb@plt+0x27330>
  42be0c:	ldr	x8, [x26, #2320]
  42be10:	add	x23, x23, #0x1
  42be14:	cmp	x8, x23
  42be18:	b.hi	42bdf4 <wcrtomb@plt+0x27304>  // b.pmore
  42be1c:	b	42bdb4 <wcrtomb@plt+0x272c4>
  42be20:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42be24:	add	x8, x8, #0x920
  42be28:	ldr	x8, [x8]
  42be2c:	cbz	x8, 42be6c <wcrtomb@plt+0x2737c>
  42be30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42be34:	add	x8, x8, #0x920
  42be38:	ldr	x8, [x8, #8]
  42be3c:	cbz	x8, 42be6c <wcrtomb@plt+0x2737c>
  42be40:	mov	x23, xzr
  42be44:	ldr	x8, [x21, #2328]
  42be48:	mov	x1, x22
  42be4c:	mov	w2, wzr
  42be50:	ldr	x0, [x8, x23, lsl #3]
  42be54:	bl	4047a0 <fnmatch@plt>
  42be58:	cbz	w0, 42bdb4 <wcrtomb@plt+0x272c4>
  42be5c:	ldr	x8, [x28, #2344]
  42be60:	add	x23, x23, #0x1
  42be64:	cmp	x8, x23
  42be68:	b.hi	42be44 <wcrtomb@plt+0x27354>  // b.pmore
  42be6c:	mov	w8, #0x2a                  	// #42
  42be70:	strb	w8, [x19]
  42be74:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42be78:	ldr	w8, [x10, #3976]
  42be7c:	cmp	w8, #0x1
  42be80:	b.lt	42be94 <wcrtomb@plt+0x273a4>  // b.tstop
  42be84:	ldr	x8, [x20, #48]
  42be88:	cbz	x8, 42be94 <wcrtomb@plt+0x273a4>
  42be8c:	mov	w8, #0x2e                  	// #46
  42be90:	strb	w8, [x19]
  42be94:	ldr	w8, [x24, #3888]
  42be98:	cmp	w8, #0x1
  42be9c:	b.lt	42beb8 <wcrtomb@plt+0x273c8>  // b.tstop
  42bea0:	ldr	x8, [x20, #64]
  42bea4:	cbnz	x8, 42beb0 <wcrtomb@plt+0x273c0>
  42bea8:	ldr	x8, [x20, #80]
  42beac:	cbz	x8, 42beb8 <wcrtomb@plt+0x273c8>
  42beb0:	mov	w8, #0x2b                  	// #43
  42beb4:	strb	w8, [x19]
  42beb8:	ldp	x20, x19, [sp, #80]
  42bebc:	ldp	x22, x21, [sp, #64]
  42bec0:	ldp	x24, x23, [sp, #48]
  42bec4:	ldp	x26, x25, [sp, #32]
  42bec8:	ldp	x28, x27, [sp, #16]
  42becc:	ldp	x29, x30, [sp], #96
  42bed0:	ret
  42bed4:	stp	x29, x30, [sp, #-96]!
  42bed8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bedc:	ldr	w8, [x8, #3636]
  42bee0:	stp	x28, x27, [sp, #16]
  42bee4:	stp	x26, x25, [sp, #32]
  42bee8:	stp	x24, x23, [sp, #48]
  42beec:	cmp	w8, #0x3
  42bef0:	stp	x22, x21, [sp, #64]
  42bef4:	stp	x20, x19, [sp, #80]
  42bef8:	mov	x29, sp
  42befc:	b.lt	42c0ec <wcrtomb@plt+0x275fc>  // b.tstop
  42bf00:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bf04:	ldr	w8, [x8, #3976]
  42bf08:	mov	x19, x0
  42bf0c:	cmp	w8, #0x1
  42bf10:	b.lt	42bf34 <wcrtomb@plt+0x27444>  // b.tstop
  42bf14:	ldr	x3, [x19, #48]
  42bf18:	cbz	x3, 42bf34 <wcrtomb@plt+0x27444>
  42bf1c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bf20:	ldr	x0, [x8, #2824]
  42bf24:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bf28:	add	x2, x2, #0xaf3
  42bf2c:	mov	w1, #0x1                   	// #1
  42bf30:	bl	404600 <__fprintf_chk@plt>
  42bf34:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bf38:	ldr	w8, [x8, #3888]
  42bf3c:	cmp	w8, #0x1
  42bf40:	b.lt	42bfc4 <wcrtomb@plt+0x274d4>  // b.tstop
  42bf44:	ldr	x8, [x19, #64]
  42bf48:	cbnz	x8, 42bf54 <wcrtomb@plt+0x27464>
  42bf4c:	ldr	x8, [x19, #80]
  42bf50:	cbz	x8, 42bfc4 <wcrtomb@plt+0x274d4>
  42bf54:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bf58:	ldr	x0, [x20, #2824]
  42bf5c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bf60:	add	x2, x2, #0xafc
  42bf64:	mov	w1, #0x1                   	// #1
  42bf68:	bl	404600 <__fprintf_chk@plt>
  42bf6c:	ldp	x1, x2, [x19, #56]
  42bf70:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bf74:	add	x0, x0, #0xb36
  42bf78:	bl	42c108 <wcrtomb@plt+0x27618>
  42bf7c:	ldr	x8, [x19, #64]
  42bf80:	cbz	x8, 42bfa0 <wcrtomb@plt+0x274b0>
  42bf84:	ldr	x8, [x19, #80]
  42bf88:	cbz	x8, 42bfa0 <wcrtomb@plt+0x274b0>
  42bf8c:	ldr	x0, [x20, #2824]
  42bf90:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bf94:	add	x2, x2, #0xbc0
  42bf98:	mov	w1, #0x1                   	// #1
  42bf9c:	bl	404600 <__fprintf_chk@plt>
  42bfa0:	ldp	x1, x2, [x19, #72]
  42bfa4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42bfa8:	add	x0, x0, #0xb02
  42bfac:	bl	42c108 <wcrtomb@plt+0x27618>
  42bfb0:	ldr	x0, [x20, #2824]
  42bfb4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42bfb8:	add	x2, x2, #0x253
  42bfbc:	mov	w1, #0x1                   	// #1
  42bfc0:	bl	404600 <__fprintf_chk@plt>
  42bfc4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bfc8:	ldr	w8, [x8, #3648]
  42bfcc:	cmp	w8, #0x1
  42bfd0:	b.lt	42c0ec <wcrtomb@plt+0x275fc>  // b.tstop
  42bfd4:	ldr	x8, [x19, #328]
  42bfd8:	cbz	x8, 42c0ec <wcrtomb@plt+0x275fc>
  42bfdc:	mov	x23, xzr
  42bfe0:	mov	w24, #0x18                  	// #24
  42bfe4:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bfe8:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bfec:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bff0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bff4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42bff8:	b	42c034 <wcrtomb@plt+0x27544>
  42bffc:	ldr	x8, [x19, #336]
  42c000:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c004:	ldr	x0, [x9, #2824]
  42c008:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c00c:	madd	x8, x23, x24, x8
  42c010:	ldr	x3, [x8, #16]
  42c014:	mov	w1, #0x1                   	// #1
  42c018:	add	x2, x2, #0xb0b
  42c01c:	mov	x4, x22
  42c020:	bl	404600 <__fprintf_chk@plt>
  42c024:	ldr	x8, [x19, #328]
  42c028:	add	x23, x23, #0x1
  42c02c:	cmp	x8, x23
  42c030:	b.ls	42c0ec <wcrtomb@plt+0x275fc>  // b.plast
  42c034:	ldr	x8, [x19, #336]
  42c038:	mul	x9, x23, x24
  42c03c:	ldr	x8, [x8, x9]
  42c040:	ldr	x9, [x25, #2312]
  42c044:	add	x22, x8, #0xd
  42c048:	cbz	x9, 42c084 <wcrtomb@plt+0x27594>
  42c04c:	ldr	x8, [x21, #2320]
  42c050:	cbz	x8, 42c024 <wcrtomb@plt+0x27534>
  42c054:	mov	x26, xzr
  42c058:	ldr	x8, [x20, #2304]
  42c05c:	mov	x1, x22
  42c060:	mov	w2, wzr
  42c064:	ldr	x0, [x8, x26, lsl #3]
  42c068:	bl	4047a0 <fnmatch@plt>
  42c06c:	cbz	w0, 42c09c <wcrtomb@plt+0x275ac>
  42c070:	ldr	x8, [x21, #2320]
  42c074:	add	x26, x26, #0x1
  42c078:	cmp	x8, x26
  42c07c:	b.hi	42c058 <wcrtomb@plt+0x27568>  // b.pmore
  42c080:	b	42c024 <wcrtomb@plt+0x27534>
  42c084:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c088:	mov	w2, #0x5                   	// #5
  42c08c:	mov	x0, x22
  42c090:	add	x1, x1, #0xbe6
  42c094:	bl	4042c0 <strncmp@plt>
  42c098:	cbnz	w0, 42c024 <wcrtomb@plt+0x27534>
  42c09c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c0a0:	add	x8, x8, #0x920
  42c0a4:	ldr	x8, [x8]
  42c0a8:	cbz	x8, 42bffc <wcrtomb@plt+0x2750c>
  42c0ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c0b0:	add	x8, x8, #0x920
  42c0b4:	ldr	x8, [x8, #8]
  42c0b8:	cbz	x8, 42bffc <wcrtomb@plt+0x2750c>
  42c0bc:	mov	x26, xzr
  42c0c0:	ldr	x8, [x28, #2328]
  42c0c4:	mov	x1, x22
  42c0c8:	mov	w2, wzr
  42c0cc:	ldr	x0, [x8, x26, lsl #3]
  42c0d0:	bl	4047a0 <fnmatch@plt>
  42c0d4:	cbz	w0, 42c024 <wcrtomb@plt+0x27534>
  42c0d8:	ldr	x8, [x27, #2344]
  42c0dc:	add	x26, x26, #0x1
  42c0e0:	cmp	x8, x26
  42c0e4:	b.hi	42c0c0 <wcrtomb@plt+0x275d0>  // b.pmore
  42c0e8:	b	42bffc <wcrtomb@plt+0x2750c>
  42c0ec:	ldp	x20, x19, [sp, #80]
  42c0f0:	ldp	x22, x21, [sp, #64]
  42c0f4:	ldp	x24, x23, [sp, #48]
  42c0f8:	ldp	x26, x25, [sp, #32]
  42c0fc:	ldp	x28, x27, [sp, #16]
  42c100:	ldp	x29, x30, [sp], #96
  42c104:	ret
  42c108:	sub	sp, sp, #0xc0
  42c10c:	stp	x29, x30, [sp, #96]
  42c110:	stp	x28, x27, [sp, #112]
  42c114:	stp	x26, x25, [sp, #128]
  42c118:	stp	x24, x23, [sp, #144]
  42c11c:	stp	x22, x21, [sp, #160]
  42c120:	stp	x20, x19, [sp, #176]
  42c124:	add	x29, sp, #0x60
  42c128:	cbz	x1, 42c2ec <wcrtomb@plt+0x277fc>
  42c12c:	mov	x19, x2
  42c130:	cbz	x2, 42c2ec <wcrtomb@plt+0x277fc>
  42c134:	mov	x20, x1
  42c138:	mov	x21, x0
  42c13c:	bl	403f00 <strlen@plt>
  42c140:	adrp	x3, 44a000 <argp_parse@@Base+0xf954>
  42c144:	adrp	x4, 404000 <localtime_r@plt>
  42c148:	mov	x22, x0
  42c14c:	add	x3, x3, #0x10
  42c150:	add	x4, x4, #0x6b0
  42c154:	add	x0, sp, #0x8
  42c158:	mov	x1, xzr
  42c15c:	mov	x2, xzr
  42c160:	bl	44ae4c <_obstack_begin@@Base>
  42c164:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  42c168:	mov	w27, wzr
  42c16c:	sxtw	x22, w22
  42c170:	add	x23, x23, #0x5fc
  42c174:	mov	w28, #0x2c                  	// #44
  42c178:	mov	x24, x20
  42c17c:	b	42c1b0 <wcrtomb@plt+0x276c0>
  42c180:	mov	x1, x24
  42c184:	mov	x2, x26
  42c188:	bl	403e80 <memcpy@plt>
  42c18c:	ldr	x8, [sp, #32]
  42c190:	add	w9, w25, #0x1
  42c194:	add	w27, w9, w27
  42c198:	sxtw	x10, w27
  42c19c:	cmp	x10, x19
  42c1a0:	add	x8, x8, x26
  42c1a4:	add	x24, x24, w9, sxtw
  42c1a8:	str	x8, [sp, #32]
  42c1ac:	b.hi	42c254 <wcrtomb@plt+0x27764>  // b.pmore
  42c1b0:	mov	x0, x24
  42c1b4:	mov	x1, x23
  42c1b8:	bl	404980 <strcspn@plt>
  42c1bc:	mov	x25, x0
  42c1c0:	cbz	w25, 42c250 <wcrtomb@plt+0x27760>
  42c1c4:	cmp	x24, x20
  42c1c8:	b.eq	42c1f4 <wcrtomb@plt+0x27704>  // b.none
  42c1cc:	ldp	x8, x9, [sp, #32]
  42c1d0:	cmp	x9, x8
  42c1d4:	b.ne	42c1e8 <wcrtomb@plt+0x276f8>  // b.any
  42c1d8:	add	x0, sp, #0x8
  42c1dc:	mov	w1, #0x1                   	// #1
  42c1e0:	bl	44afa0 <_obstack_newchunk@@Base>
  42c1e4:	ldr	x8, [sp, #32]
  42c1e8:	add	x9, x8, #0x1
  42c1ec:	str	x9, [sp, #32]
  42c1f0:	strb	w28, [x8]
  42c1f4:	ldp	x0, x8, [sp, #32]
  42c1f8:	sub	x8, x8, x0
  42c1fc:	cmp	x8, x22
  42c200:	b.cs	42c214 <wcrtomb@plt+0x27724>  // b.hs, b.nlast
  42c204:	add	x0, sp, #0x8
  42c208:	mov	x1, x22
  42c20c:	bl	44afa0 <_obstack_newchunk@@Base>
  42c210:	ldr	x0, [sp, #32]
  42c214:	mov	x1, x21
  42c218:	mov	x2, x22
  42c21c:	bl	403e80 <memcpy@plt>
  42c220:	ldp	x8, x9, [sp, #32]
  42c224:	sxtw	x26, w25
  42c228:	add	x0, x8, x22
  42c22c:	sub	x8, x9, x0
  42c230:	cmp	x8, x26
  42c234:	str	x0, [sp, #32]
  42c238:	b.cs	42c180 <wcrtomb@plt+0x27690>  // b.hs, b.nlast
  42c23c:	add	x0, sp, #0x8
  42c240:	mov	x1, x26
  42c244:	bl	44afa0 <_obstack_newchunk@@Base>
  42c248:	ldr	x0, [sp, #32]
  42c24c:	b	42c180 <wcrtomb@plt+0x27690>
  42c250:	ldr	x8, [sp, #32]
  42c254:	ldr	x9, [sp, #40]
  42c258:	cmp	x9, x8
  42c25c:	b.ne	42c270 <wcrtomb@plt+0x27780>  // b.any
  42c260:	add	x0, sp, #0x8
  42c264:	mov	w1, #0x1                   	// #1
  42c268:	bl	44afa0 <_obstack_newchunk@@Base>
  42c26c:	ldr	x8, [sp, #32]
  42c270:	add	x9, x8, #0x1
  42c274:	str	x9, [sp, #32]
  42c278:	strb	wzr, [x8]
  42c27c:	ldp	x3, x8, [sp, #24]
  42c280:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c284:	ldr	x0, [x9, #2824]
  42c288:	cmp	x8, x3
  42c28c:	b.ne	42c29c <wcrtomb@plt+0x277ac>  // b.any
  42c290:	ldrb	w9, [sp, #88]
  42c294:	orr	w9, w9, #0x2
  42c298:	strb	w9, [sp, #88]
  42c29c:	ldr	x10, [sp, #56]
  42c2a0:	ldr	x11, [sp, #16]
  42c2a4:	ldr	x9, [sp, #40]
  42c2a8:	add	x8, x10, x8
  42c2ac:	bic	x8, x8, x10
  42c2b0:	sub	x10, x8, x11
  42c2b4:	sub	x11, x9, x11
  42c2b8:	cmp	x10, x11
  42c2bc:	str	x8, [sp, #32]
  42c2c0:	b.ls	42c2cc <wcrtomb@plt+0x277dc>  // b.plast
  42c2c4:	mov	x8, x9
  42c2c8:	str	x9, [sp, #32]
  42c2cc:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42c2d0:	add	x2, x2, #0x274
  42c2d4:	mov	w1, #0x1                   	// #1
  42c2d8:	str	x8, [sp, #24]
  42c2dc:	bl	404600 <__fprintf_chk@plt>
  42c2e0:	add	x0, sp, #0x8
  42c2e4:	mov	x1, xzr
  42c2e8:	bl	44b118 <_obstack_free@@Base>
  42c2ec:	ldp	x20, x19, [sp, #176]
  42c2f0:	ldp	x22, x21, [sp, #160]
  42c2f4:	ldp	x24, x23, [sp, #144]
  42c2f8:	ldp	x26, x25, [sp, #128]
  42c2fc:	ldp	x28, x27, [sp, #112]
  42c300:	ldp	x29, x30, [sp, #96]
  42c304:	add	sp, sp, #0xc0
  42c308:	ret
  42c30c:	stp	x29, x30, [sp, #-96]!
  42c310:	str	x28, [sp, #16]
  42c314:	stp	x26, x25, [sp, #32]
  42c318:	stp	x24, x23, [sp, #48]
  42c31c:	stp	x22, x21, [sp, #64]
  42c320:	stp	x20, x19, [sp, #80]
  42c324:	mov	x29, sp
  42c328:	sub	sp, sp, #0xfc0
  42c32c:	mov	w20, w2
  42c330:	cmn	w0, #0x64
  42c334:	mov	x21, x1
  42c338:	b.eq	42c348 <wcrtomb@plt+0x27858>  // b.none
  42c33c:	ldrb	w8, [x21]
  42c340:	cmp	w8, #0x2f
  42c344:	b.ne	42c370 <wcrtomb@plt+0x27880>  // b.any
  42c348:	mov	x0, x21
  42c34c:	mov	w1, w20
  42c350:	add	sp, sp, #0xfc0
  42c354:	ldp	x20, x19, [sp, #80]
  42c358:	ldp	x22, x21, [sp, #64]
  42c35c:	ldp	x24, x23, [sp, #48]
  42c360:	ldp	x26, x25, [sp, #32]
  42c364:	ldr	x28, [sp, #16]
  42c368:	ldp	x29, x30, [sp], #96
  42c36c:	b	404660 <acl_get_file@plt>
  42c370:	mov	w22, w0
  42c374:	mov	x0, sp
  42c378:	mov	w1, w22
  42c37c:	mov	x2, x21
  42c380:	mov	x26, sp
  42c384:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  42c388:	cbz	x0, 42c3e4 <wcrtomb@plt+0x278f4>
  42c38c:	mov	w1, w20
  42c390:	mov	x24, x0
  42c394:	bl	404660 <acl_get_file@plt>
  42c398:	mov	x19, x0
  42c39c:	bl	4049c0 <__errno_location@plt>
  42c3a0:	ldr	w25, [x0]
  42c3a4:	mov	x23, x0
  42c3a8:	cmp	x24, x26
  42c3ac:	b.eq	42c3b8 <wcrtomb@plt+0x278c8>  // b.none
  42c3b0:	mov	x0, x24
  42c3b4:	bl	4046b0 <free@plt>
  42c3b8:	cbnz	x19, 42c49c <wcrtomb@plt+0x279ac>
  42c3bc:	cmp	w25, #0x26
  42c3c0:	b.hi	42c464 <wcrtomb@plt+0x27974>  // b.pmore
  42c3c4:	mov	w8, w25
  42c3c8:	mov	w9, #0x1                   	// #1
  42c3cc:	lsl	x8, x9, x8
  42c3d0:	mov	x9, #0x2006                	// #8198
  42c3d4:	movk	x9, #0x10, lsl #16
  42c3d8:	movk	x9, #0x40, lsl #32
  42c3dc:	tst	x8, x9
  42c3e0:	b.eq	42c464 <wcrtomb@plt+0x27974>  // b.none
  42c3e4:	mov	x0, sp
  42c3e8:	bl	449424 <argp_parse@@Base+0xed78>
  42c3ec:	cbnz	w0, 42c4c0 <wcrtomb@plt+0x279d0>
  42c3f0:	tbnz	w22, #31, 42c41c <wcrtomb@plt+0x2792c>
  42c3f4:	ldr	w8, [sp]
  42c3f8:	cmp	w8, w22
  42c3fc:	b.ne	42c41c <wcrtomb@plt+0x2792c>  // b.any
  42c400:	mov	x0, sp
  42c404:	bl	44949c <argp_parse@@Base+0xedf0>
  42c408:	bl	4049c0 <__errno_location@plt>
  42c40c:	mov	w8, #0x9                   	// #9
  42c410:	mov	x19, xzr
  42c414:	str	w8, [x0]
  42c418:	b	42c49c <wcrtomb@plt+0x279ac>
  42c41c:	mov	w0, w22
  42c420:	bl	403f70 <fchdir@plt>
  42c424:	cbz	w0, 42c448 <wcrtomb@plt+0x27958>
  42c428:	bl	4049c0 <__errno_location@plt>
  42c42c:	ldr	w21, [x0]
  42c430:	mov	x20, x0
  42c434:	mov	x0, sp
  42c438:	bl	44949c <argp_parse@@Base+0xedf0>
  42c43c:	mov	x19, xzr
  42c440:	str	w21, [x20]
  42c444:	b	42c49c <wcrtomb@plt+0x279ac>
  42c448:	mov	x0, x21
  42c44c:	mov	w1, w20
  42c450:	bl	404660 <acl_get_file@plt>
  42c454:	mov	x19, x0
  42c458:	cbz	x0, 42c474 <wcrtomb@plt+0x27984>
  42c45c:	mov	w20, wzr
  42c460:	b	42c47c <wcrtomb@plt+0x2798c>
  42c464:	cmp	w25, #0x5f
  42c468:	b.eq	42c3e4 <wcrtomb@plt+0x278f4>  // b.none
  42c46c:	str	w25, [x23]
  42c470:	b	42c49c <wcrtomb@plt+0x279ac>
  42c474:	bl	4049c0 <__errno_location@plt>
  42c478:	ldr	w20, [x0]
  42c47c:	mov	x0, sp
  42c480:	bl	449484 <argp_parse@@Base+0xedd8>
  42c484:	cbnz	w0, 42c4cc <wcrtomb@plt+0x279dc>
  42c488:	mov	x0, sp
  42c48c:	bl	44949c <argp_parse@@Base+0xedf0>
  42c490:	cbz	w20, 42c49c <wcrtomb@plt+0x279ac>
  42c494:	bl	4049c0 <__errno_location@plt>
  42c498:	str	w20, [x0]
  42c49c:	mov	x0, x19
  42c4a0:	add	sp, sp, #0xfc0
  42c4a4:	ldp	x20, x19, [sp, #80]
  42c4a8:	ldp	x22, x21, [sp, #64]
  42c4ac:	ldp	x24, x23, [sp, #48]
  42c4b0:	ldp	x26, x25, [sp, #32]
  42c4b4:	ldr	x28, [sp, #16]
  42c4b8:	ldp	x29, x30, [sp], #96
  42c4bc:	ret
  42c4c0:	bl	4049c0 <__errno_location@plt>
  42c4c4:	ldr	w0, [x0]
  42c4c8:	bl	440c28 <argp_parse@@Base+0x657c>
  42c4cc:	bl	4049c0 <__errno_location@plt>
  42c4d0:	ldr	w0, [x0]
  42c4d4:	bl	440c68 <argp_parse@@Base+0x65bc>
  42c4d8:	tst	w0, #0x100
  42c4dc:	mov	w8, #0x72                  	// #114
  42c4e0:	mov	w9, #0x2d                  	// #45
  42c4e4:	mov	w10, #0x77                  	// #119
  42c4e8:	csel	w14, w9, w8, eq  // eq = none
  42c4ec:	tst	w0, #0x80
  42c4f0:	mov	w11, #0x53                  	// #83
  42c4f4:	mov	w12, #0x73                  	// #115
  42c4f8:	mov	w13, #0x78                  	// #120
  42c4fc:	strb	w14, [x1]
  42c500:	csel	w14, w9, w10, eq  // eq = none
  42c504:	tst	w0, #0x40
  42c508:	strb	w14, [x1, #1]
  42c50c:	csel	w14, w12, w11, ne  // ne = any
  42c510:	csel	w15, w13, w9, ne  // ne = any
  42c514:	tst	w0, #0x800
  42c518:	csel	w14, w15, w14, eq  // eq = none
  42c51c:	tst	w0, #0x20
  42c520:	strb	w14, [x1, #2]
  42c524:	csel	w14, w9, w8, eq  // eq = none
  42c528:	tst	w0, #0x10
  42c52c:	strb	w14, [x1, #3]
  42c530:	csel	w14, w9, w10, eq  // eq = none
  42c534:	tst	w0, #0x8
  42c538:	csel	w11, w12, w11, ne  // ne = any
  42c53c:	csel	w12, w13, w9, ne  // ne = any
  42c540:	tst	w0, #0x400
  42c544:	csel	w11, w12, w11, eq  // eq = none
  42c548:	tst	w0, #0x4
  42c54c:	csel	w8, w9, w8, eq  // eq = none
  42c550:	tst	w0, #0x2
  42c554:	mov	w15, #0x54                  	// #84
  42c558:	strb	w14, [x1, #4]
  42c55c:	mov	w14, #0x74                  	// #116
  42c560:	strb	w8, [x1, #6]
  42c564:	csel	w8, w9, w10, eq  // eq = none
  42c568:	tst	w0, #0x1
  42c56c:	strb	w8, [x1, #7]
  42c570:	csel	w8, w14, w15, ne  // ne = any
  42c574:	csel	w9, w13, w9, ne  // ne = any
  42c578:	tst	w0, #0x200
  42c57c:	csel	w8, w9, w8, eq  // eq = none
  42c580:	strb	w11, [x1, #5]
  42c584:	strb	w8, [x1, #8]
  42c588:	strb	wzr, [x1, #9]
  42c58c:	ret
  42c590:	stp	x29, x30, [sp, #-48]!
  42c594:	stp	x22, x21, [sp, #16]
  42c598:	stp	x20, x19, [sp, #32]
  42c59c:	mov	x29, sp
  42c5a0:	mov	x20, x1
  42c5a4:	mov	x19, x0
  42c5a8:	bl	4049c0 <__errno_location@plt>
  42c5ac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c5b0:	ldr	x8, [x8, #4000]
  42c5b4:	ldr	w21, [x0]
  42c5b8:	cbz	x8, 42c5c0 <wcrtomb@plt+0x27ad0>
  42c5bc:	blr	x8
  42c5c0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c5c4:	add	x1, x1, #0xc36
  42c5c8:	mov	w2, #0x5                   	// #5
  42c5cc:	mov	x0, xzr
  42c5d0:	bl	4048b0 <dcgettext@plt>
  42c5d4:	mov	x22, x0
  42c5d8:	mov	x0, x20
  42c5dc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c5e0:	mov	x3, x0
  42c5e4:	mov	w0, wzr
  42c5e8:	mov	w1, w21
  42c5ec:	mov	x2, x22
  42c5f0:	mov	x4, x19
  42c5f4:	bl	403f60 <error@plt>
  42c5f8:	ldp	x20, x19, [sp, #32]
  42c5fc:	ldp	x22, x21, [sp, #16]
  42c600:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c604:	mov	w9, #0x2                   	// #2
  42c608:	str	w9, [x8, #2352]
  42c60c:	ldp	x29, x30, [sp], #48
  42c610:	ret
  42c614:	stp	x29, x30, [sp, #-48]!
  42c618:	stp	x22, x21, [sp, #16]
  42c61c:	stp	x20, x19, [sp, #32]
  42c620:	mov	x29, sp
  42c624:	mov	x20, x1
  42c628:	mov	x19, x0
  42c62c:	bl	4049c0 <__errno_location@plt>
  42c630:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c634:	ldr	x8, [x8, #4000]
  42c638:	ldr	w21, [x0]
  42c63c:	cbz	x8, 42c644 <wcrtomb@plt+0x27b54>
  42c640:	blr	x8
  42c644:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c648:	add	x1, x1, #0xc36
  42c64c:	mov	w2, #0x5                   	// #5
  42c650:	mov	x0, xzr
  42c654:	bl	4048b0 <dcgettext@plt>
  42c658:	mov	x22, x0
  42c65c:	mov	x0, x20
  42c660:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c664:	mov	x3, x0
  42c668:	mov	w0, wzr
  42c66c:	mov	w1, w21
  42c670:	mov	x2, x22
  42c674:	mov	x4, x19
  42c678:	bl	403f60 <error@plt>
  42c67c:	bl	40eb40 <wcrtomb@plt+0xa050>
  42c680:	stp	x29, x30, [sp, #-48]!
  42c684:	stp	x22, x21, [sp, #16]
  42c688:	stp	x20, x19, [sp, #32]
  42c68c:	mov	x29, sp
  42c690:	mov	x20, x1
  42c694:	mov	x19, x0
  42c698:	bl	4049c0 <__errno_location@plt>
  42c69c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c6a0:	ldr	x8, [x8, #4000]
  42c6a4:	ldr	w21, [x0]
  42c6a8:	cbz	x8, 42c6b0 <wcrtomb@plt+0x27bc0>
  42c6ac:	blr	x8
  42c6b0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c6b4:	add	x1, x1, #0xc44
  42c6b8:	mov	w2, #0x5                   	// #5
  42c6bc:	mov	x0, xzr
  42c6c0:	bl	4048b0 <dcgettext@plt>
  42c6c4:	mov	x22, x0
  42c6c8:	mov	x0, x20
  42c6cc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c6d0:	mov	w1, w21
  42c6d4:	mov	x2, x22
  42c6d8:	mov	x4, x19
  42c6dc:	ldp	x20, x19, [sp, #32]
  42c6e0:	ldp	x22, x21, [sp, #16]
  42c6e4:	mov	x3, x0
  42c6e8:	mov	w0, wzr
  42c6ec:	ldp	x29, x30, [sp], #48
  42c6f0:	b	403f60 <error@plt>
  42c6f4:	sub	sp, sp, #0x40
  42c6f8:	stp	x29, x30, [sp, #16]
  42c6fc:	str	x21, [sp, #32]
  42c700:	stp	x20, x19, [sp, #48]
  42c704:	add	x29, sp, #0x10
  42c708:	mov	w21, w1
  42c70c:	mov	x20, x0
  42c710:	bl	4049c0 <__errno_location@plt>
  42c714:	tst	w21, #0x100
  42c718:	mov	w9, #0x72                  	// #114
  42c71c:	mov	w10, #0x2d                  	// #45
  42c720:	mov	w11, #0x77                  	// #119
  42c724:	csel	w14, w10, w9, eq  // eq = none
  42c728:	tst	w21, #0x80
  42c72c:	ldr	w19, [x0]
  42c730:	mov	w8, #0x53                  	// #83
  42c734:	mov	w12, #0x73                  	// #115
  42c738:	mov	w13, #0x78                  	// #120
  42c73c:	strb	w14, [sp, #4]
  42c740:	csel	w14, w10, w11, eq  // eq = none
  42c744:	tst	w21, #0x40
  42c748:	strb	w14, [sp, #5]
  42c74c:	csel	w14, w12, w8, ne  // ne = any
  42c750:	csel	w15, w13, w10, ne  // ne = any
  42c754:	tst	w21, #0x800
  42c758:	csel	w14, w15, w14, eq  // eq = none
  42c75c:	tst	w21, #0x20
  42c760:	strb	w14, [sp, #6]
  42c764:	csel	w14, w10, w9, eq  // eq = none
  42c768:	tst	w21, #0x10
  42c76c:	strb	w14, [sp, #7]
  42c770:	csel	w14, w10, w11, eq  // eq = none
  42c774:	tst	w21, #0x8
  42c778:	csel	w8, w12, w8, ne  // ne = any
  42c77c:	csel	w12, w13, w10, ne  // ne = any
  42c780:	tst	w21, #0x400
  42c784:	csel	w12, w12, w8, eq  // eq = none
  42c788:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c78c:	tst	w21, #0x4
  42c790:	ldr	x8, [x8, #4000]
  42c794:	csel	w9, w10, w9, eq  // eq = none
  42c798:	tst	w21, #0x2
  42c79c:	mov	w15, #0x54                  	// #84
  42c7a0:	strb	w14, [sp, #8]
  42c7a4:	mov	w14, #0x74                  	// #116
  42c7a8:	strb	w9, [sp, #10]
  42c7ac:	csel	w9, w10, w11, eq  // eq = none
  42c7b0:	tst	w21, #0x1
  42c7b4:	strb	w9, [sp, #11]
  42c7b8:	csel	w9, w14, w15, ne  // ne = any
  42c7bc:	csel	w10, w13, w10, ne  // ne = any
  42c7c0:	tst	w21, #0x200
  42c7c4:	csel	w9, w10, w9, eq  // eq = none
  42c7c8:	strb	w12, [sp, #9]
  42c7cc:	strb	w9, [sp, #12]
  42c7d0:	strb	wzr, [sp, #13]
  42c7d4:	cbz	x8, 42c7dc <wcrtomb@plt+0x27cec>
  42c7d8:	blr	x8
  42c7dc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c7e0:	add	x1, x1, #0xc5b
  42c7e4:	mov	w2, #0x5                   	// #5
  42c7e8:	mov	x0, xzr
  42c7ec:	bl	4048b0 <dcgettext@plt>
  42c7f0:	mov	x21, x0
  42c7f4:	mov	x0, x20
  42c7f8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c7fc:	mov	x3, x0
  42c800:	add	x4, sp, #0x4
  42c804:	mov	w0, wzr
  42c808:	mov	w1, w19
  42c80c:	mov	x2, x21
  42c810:	bl	403f60 <error@plt>
  42c814:	ldp	x20, x19, [sp, #48]
  42c818:	ldr	x21, [sp, #32]
  42c81c:	ldp	x29, x30, [sp, #16]
  42c820:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c824:	mov	w9, #0x2                   	// #2
  42c828:	str	w9, [x8, #2352]
  42c82c:	add	sp, sp, #0x40
  42c830:	ret
  42c834:	stp	x29, x30, [sp, #-64]!
  42c838:	str	x23, [sp, #16]
  42c83c:	stp	x22, x21, [sp, #32]
  42c840:	stp	x20, x19, [sp, #48]
  42c844:	mov	x29, sp
  42c848:	mov	w19, w2
  42c84c:	mov	w20, w1
  42c850:	mov	x22, x0
  42c854:	bl	4049c0 <__errno_location@plt>
  42c858:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c85c:	ldr	x8, [x8, #4000]
  42c860:	ldr	w21, [x0]
  42c864:	cbz	x8, 42c86c <wcrtomb@plt+0x27d7c>
  42c868:	blr	x8
  42c86c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c870:	add	x1, x1, #0xc78
  42c874:	mov	w2, #0x5                   	// #5
  42c878:	mov	x0, xzr
  42c87c:	bl	4048b0 <dcgettext@plt>
  42c880:	mov	x23, x0
  42c884:	mov	x0, x22
  42c888:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c88c:	mov	x3, x0
  42c890:	mov	w4, w20
  42c894:	mov	w5, w19
  42c898:	mov	w0, wzr
  42c89c:	mov	w1, w21
  42c8a0:	mov	x2, x23
  42c8a4:	bl	403f60 <error@plt>
  42c8a8:	ldp	x20, x19, [sp, #48]
  42c8ac:	ldp	x22, x21, [sp, #32]
  42c8b0:	ldr	x23, [sp, #16]
  42c8b4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c8b8:	mov	w9, #0x2                   	// #2
  42c8bc:	str	w9, [x8, #2352]
  42c8c0:	ldp	x29, x30, [sp], #64
  42c8c4:	ret
  42c8c8:	stp	x29, x30, [sp, #-48]!
  42c8cc:	str	x21, [sp, #16]
  42c8d0:	stp	x20, x19, [sp, #32]
  42c8d4:	mov	x29, sp
  42c8d8:	mov	x19, x0
  42c8dc:	bl	4049c0 <__errno_location@plt>
  42c8e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c8e4:	ldr	x8, [x8, #4000]
  42c8e8:	ldr	w20, [x0]
  42c8ec:	cbz	x8, 42c8f4 <wcrtomb@plt+0x27e04>
  42c8f0:	blr	x8
  42c8f4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c8f8:	add	x1, x1, #0xc36
  42c8fc:	mov	w2, #0x5                   	// #5
  42c900:	mov	x0, xzr
  42c904:	bl	4048b0 <dcgettext@plt>
  42c908:	mov	x21, x0
  42c90c:	mov	x0, x19
  42c910:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c914:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42c918:	mov	x3, x0
  42c91c:	add	x4, x4, #0x629
  42c920:	mov	w0, wzr
  42c924:	mov	w1, w20
  42c928:	mov	x2, x21
  42c92c:	bl	403f60 <error@plt>
  42c930:	ldp	x20, x19, [sp, #32]
  42c934:	ldr	x21, [sp, #16]
  42c938:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c93c:	mov	w9, #0x2                   	// #2
  42c940:	str	w9, [x8, #2352]
  42c944:	ldp	x29, x30, [sp], #48
  42c948:	ret
  42c94c:	stp	x29, x30, [sp, #-48]!
  42c950:	str	x21, [sp, #16]
  42c954:	stp	x20, x19, [sp, #32]
  42c958:	mov	x29, sp
  42c95c:	mov	x19, x0
  42c960:	bl	4049c0 <__errno_location@plt>
  42c964:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c968:	ldr	x8, [x8, #4000]
  42c96c:	ldr	w20, [x0]
  42c970:	cbz	x8, 42c978 <wcrtomb@plt+0x27e88>
  42c974:	blr	x8
  42c978:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c97c:	add	x1, x1, #0xc44
  42c980:	mov	w2, #0x5                   	// #5
  42c984:	mov	x0, xzr
  42c988:	bl	4048b0 <dcgettext@plt>
  42c98c:	mov	x21, x0
  42c990:	mov	x0, x19
  42c994:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42c998:	mov	w1, w20
  42c99c:	mov	x2, x21
  42c9a0:	ldp	x20, x19, [sp, #32]
  42c9a4:	ldr	x21, [sp, #16]
  42c9a8:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42c9ac:	add	x4, x4, #0x629
  42c9b0:	mov	x3, x0
  42c9b4:	mov	w0, wzr
  42c9b8:	ldp	x29, x30, [sp], #48
  42c9bc:	b	403f60 <error@plt>
  42c9c0:	stp	x29, x30, [sp, #-16]!
  42c9c4:	mov	x1, x0
  42c9c8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42c9cc:	add	x0, x0, #0xca8
  42c9d0:	mov	x29, sp
  42c9d4:	bl	42c614 <wcrtomb@plt+0x27b24>
  42c9d8:	stp	x29, x30, [sp, #-48]!
  42c9dc:	stp	x22, x21, [sp, #16]
  42c9e0:	stp	x20, x19, [sp, #32]
  42c9e4:	mov	x29, sp
  42c9e8:	mov	x21, x1
  42c9ec:	mov	x19, x0
  42c9f0:	bl	4049c0 <__errno_location@plt>
  42c9f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42c9f8:	ldr	x8, [x8, #4000]
  42c9fc:	ldr	w20, [x0]
  42ca00:	cbz	x8, 42ca08 <wcrtomb@plt+0x27f18>
  42ca04:	blr	x8
  42ca08:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ca0c:	add	x1, x1, #0xcad
  42ca10:	mov	w2, #0x5                   	// #5
  42ca14:	mov	x0, xzr
  42ca18:	bl	4048b0 <dcgettext@plt>
  42ca1c:	mov	x22, x0
  42ca20:	mov	x0, x21
  42ca24:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42ca28:	mov	x21, x0
  42ca2c:	mov	w0, #0x1                   	// #1
  42ca30:	mov	x1, x19
  42ca34:	bl	449134 <argp_parse@@Base+0xea88>
  42ca38:	mov	x4, x0
  42ca3c:	mov	w0, wzr
  42ca40:	mov	w1, w20
  42ca44:	mov	x2, x22
  42ca48:	mov	x3, x21
  42ca4c:	bl	403f60 <error@plt>
  42ca50:	ldp	x20, x19, [sp, #32]
  42ca54:	ldp	x22, x21, [sp, #16]
  42ca58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ca5c:	mov	w9, #0x2                   	// #2
  42ca60:	str	w9, [x8, #2352]
  42ca64:	ldp	x29, x30, [sp], #48
  42ca68:	ret
  42ca6c:	stp	x29, x30, [sp, #-48]!
  42ca70:	str	x21, [sp, #16]
  42ca74:	stp	x20, x19, [sp, #32]
  42ca78:	mov	x29, sp
  42ca7c:	mov	x19, x0
  42ca80:	bl	4049c0 <__errno_location@plt>
  42ca84:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ca88:	ldr	x8, [x8, #4000]
  42ca8c:	ldr	w20, [x0]
  42ca90:	cbz	x8, 42ca98 <wcrtomb@plt+0x27fa8>
  42ca94:	blr	x8
  42ca98:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ca9c:	add	x1, x1, #0xc36
  42caa0:	mov	w2, #0x5                   	// #5
  42caa4:	mov	x0, xzr
  42caa8:	bl	4048b0 <dcgettext@plt>
  42caac:	mov	x21, x0
  42cab0:	mov	x0, x19
  42cab4:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cab8:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cabc:	mov	x3, x0
  42cac0:	add	x4, x4, #0xcc8
  42cac4:	mov	w0, wzr
  42cac8:	mov	w1, w20
  42cacc:	mov	x2, x21
  42cad0:	bl	403f60 <error@plt>
  42cad4:	ldp	x20, x19, [sp, #32]
  42cad8:	ldr	x21, [sp, #16]
  42cadc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cae0:	mov	w9, #0x2                   	// #2
  42cae4:	str	w9, [x8, #2352]
  42cae8:	ldp	x29, x30, [sp], #48
  42caec:	ret
  42caf0:	stp	x29, x30, [sp, #-48]!
  42caf4:	str	x21, [sp, #16]
  42caf8:	stp	x20, x19, [sp, #32]
  42cafc:	mov	x29, sp
  42cb00:	mov	x19, x0
  42cb04:	bl	4049c0 <__errno_location@plt>
  42cb08:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cb0c:	ldr	x8, [x8, #4000]
  42cb10:	ldr	w20, [x0]
  42cb14:	cbz	x8, 42cb1c <wcrtomb@plt+0x2802c>
  42cb18:	blr	x8
  42cb1c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cb20:	add	x1, x1, #0xc36
  42cb24:	mov	w2, #0x5                   	// #5
  42cb28:	mov	x0, xzr
  42cb2c:	bl	4048b0 <dcgettext@plt>
  42cb30:	mov	x21, x0
  42cb34:	mov	x0, x19
  42cb38:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cb3c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cb40:	mov	x3, x0
  42cb44:	add	x4, x4, #0xcce
  42cb48:	mov	w0, wzr
  42cb4c:	mov	w1, w20
  42cb50:	mov	x2, x21
  42cb54:	bl	403f60 <error@plt>
  42cb58:	ldp	x20, x19, [sp, #32]
  42cb5c:	ldr	x21, [sp, #16]
  42cb60:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cb64:	mov	w9, #0x2                   	// #2
  42cb68:	str	w9, [x8, #2352]
  42cb6c:	ldp	x29, x30, [sp], #48
  42cb70:	ret
  42cb74:	stp	x29, x30, [sp, #-48]!
  42cb78:	str	x21, [sp, #16]
  42cb7c:	stp	x20, x19, [sp, #32]
  42cb80:	mov	x29, sp
  42cb84:	mov	x19, x0
  42cb88:	bl	4049c0 <__errno_location@plt>
  42cb8c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cb90:	ldr	x8, [x8, #4000]
  42cb94:	ldr	w20, [x0]
  42cb98:	cbz	x8, 42cba0 <wcrtomb@plt+0x280b0>
  42cb9c:	blr	x8
  42cba0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cba4:	add	x1, x1, #0xc36
  42cba8:	mov	w2, #0x5                   	// #5
  42cbac:	mov	x0, xzr
  42cbb0:	bl	4048b0 <dcgettext@plt>
  42cbb4:	mov	x21, x0
  42cbb8:	mov	x0, x19
  42cbbc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cbc0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cbc4:	mov	x3, x0
  42cbc8:	add	x4, x4, #0xcd5
  42cbcc:	mov	w0, wzr
  42cbd0:	mov	w1, w20
  42cbd4:	mov	x2, x21
  42cbd8:	bl	403f60 <error@plt>
  42cbdc:	ldp	x20, x19, [sp, #32]
  42cbe0:	ldr	x21, [sp, #16]
  42cbe4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cbe8:	mov	w9, #0x2                   	// #2
  42cbec:	str	w9, [x8, #2352]
  42cbf0:	ldp	x29, x30, [sp], #48
  42cbf4:	ret
  42cbf8:	stp	x29, x30, [sp, #-48]!
  42cbfc:	str	x21, [sp, #16]
  42cc00:	stp	x20, x19, [sp, #32]
  42cc04:	mov	x29, sp
  42cc08:	mov	x19, x0
  42cc0c:	bl	4049c0 <__errno_location@plt>
  42cc10:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cc14:	ldr	x8, [x8, #4000]
  42cc18:	ldr	w20, [x0]
  42cc1c:	cbz	x8, 42cc24 <wcrtomb@plt+0x28134>
  42cc20:	blr	x8
  42cc24:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cc28:	add	x1, x1, #0xc36
  42cc2c:	mov	w2, #0x5                   	// #5
  42cc30:	mov	x0, xzr
  42cc34:	bl	4048b0 <dcgettext@plt>
  42cc38:	mov	x21, x0
  42cc3c:	mov	x0, x19
  42cc40:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cc44:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cc48:	mov	x3, x0
  42cc4c:	add	x4, x4, #0xcdb
  42cc50:	mov	w0, wzr
  42cc54:	mov	w1, w20
  42cc58:	mov	x2, x21
  42cc5c:	bl	403f60 <error@plt>
  42cc60:	ldp	x20, x19, [sp, #32]
  42cc64:	ldr	x21, [sp, #16]
  42cc68:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cc6c:	mov	w9, #0x2                   	// #2
  42cc70:	str	w9, [x8, #2352]
  42cc74:	ldp	x29, x30, [sp], #48
  42cc78:	ret
  42cc7c:	stp	x29, x30, [sp, #-16]!
  42cc80:	mov	x1, x0
  42cc84:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cc88:	add	x0, x0, #0xcdb
  42cc8c:	mov	x29, sp
  42cc90:	bl	42c614 <wcrtomb@plt+0x27b24>
  42cc94:	stp	x29, x30, [sp, #-48]!
  42cc98:	str	x21, [sp, #16]
  42cc9c:	stp	x20, x19, [sp, #32]
  42cca0:	mov	x29, sp
  42cca4:	mov	x19, x0
  42cca8:	bl	4049c0 <__errno_location@plt>
  42ccac:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ccb0:	ldr	x8, [x8, #4000]
  42ccb4:	ldr	w20, [x0]
  42ccb8:	cbz	x8, 42ccc0 <wcrtomb@plt+0x281d0>
  42ccbc:	blr	x8
  42ccc0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ccc4:	add	x1, x1, #0xc44
  42ccc8:	mov	w2, #0x5                   	// #5
  42cccc:	mov	x0, xzr
  42ccd0:	bl	4048b0 <dcgettext@plt>
  42ccd4:	mov	x21, x0
  42ccd8:	mov	x0, x19
  42ccdc:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cce0:	mov	w1, w20
  42cce4:	mov	x2, x21
  42cce8:	ldp	x20, x19, [sp, #32]
  42ccec:	ldr	x21, [sp, #16]
  42ccf0:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ccf4:	add	x4, x4, #0xcdb
  42ccf8:	mov	x3, x0
  42ccfc:	mov	w0, wzr
  42cd00:	ldp	x29, x30, [sp], #48
  42cd04:	b	403f60 <error@plt>
  42cd08:	stp	x29, x30, [sp, #-48]!
  42cd0c:	str	x21, [sp, #16]
  42cd10:	stp	x20, x19, [sp, #32]
  42cd14:	mov	x29, sp
  42cd18:	mov	x19, x0
  42cd1c:	bl	4049c0 <__errno_location@plt>
  42cd20:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cd24:	ldr	x8, [x8, #4000]
  42cd28:	ldr	w20, [x0]
  42cd2c:	cbz	x8, 42cd34 <wcrtomb@plt+0x28244>
  42cd30:	blr	x8
  42cd34:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cd38:	add	x1, x1, #0xc36
  42cd3c:	mov	w2, #0x5                   	// #5
  42cd40:	mov	x0, xzr
  42cd44:	bl	4048b0 <dcgettext@plt>
  42cd48:	mov	x21, x0
  42cd4c:	mov	x0, x19
  42cd50:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cd54:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x14e3c>
  42cd58:	mov	x3, x0
  42cd5c:	add	x4, x4, #0xebd
  42cd60:	mov	w0, wzr
  42cd64:	mov	w1, w20
  42cd68:	mov	x2, x21
  42cd6c:	bl	403f60 <error@plt>
  42cd70:	ldp	x20, x19, [sp, #32]
  42cd74:	ldr	x21, [sp, #16]
  42cd78:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cd7c:	mov	w9, #0x2                   	// #2
  42cd80:	str	w9, [x8, #2352]
  42cd84:	ldp	x29, x30, [sp], #48
  42cd88:	ret
  42cd8c:	sub	sp, sp, #0x60
  42cd90:	stp	x29, x30, [sp, #32]
  42cd94:	str	x23, [sp, #48]
  42cd98:	stp	x22, x21, [sp, #64]
  42cd9c:	stp	x20, x19, [sp, #80]
  42cda0:	add	x29, sp, #0x20
  42cda4:	mov	x19, x2
  42cda8:	mov	x20, x1
  42cdac:	mov	x22, x0
  42cdb0:	bl	4049c0 <__errno_location@plt>
  42cdb4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cdb8:	ldr	x8, [x8, #4000]
  42cdbc:	ldr	w21, [x0]
  42cdc0:	cbz	x8, 42cdc8 <wcrtomb@plt+0x282d8>
  42cdc4:	blr	x8
  42cdc8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cdcc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cdd0:	add	x1, x1, #0xce0
  42cdd4:	add	x2, x2, #0xd12
  42cdd8:	mov	w4, #0x5                   	// #5
  42cddc:	mov	x0, xzr
  42cde0:	mov	x3, x19
  42cde4:	bl	4047d0 <dcngettext@plt>
  42cde8:	mov	x23, x0
  42cdec:	mov	x0, x22
  42cdf0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cdf4:	mov	x22, x0
  42cdf8:	add	x1, sp, #0x8
  42cdfc:	mov	x0, x20
  42ce00:	bl	440290 <argp_parse@@Base+0x5be4>
  42ce04:	mov	x4, x0
  42ce08:	mov	w0, wzr
  42ce0c:	mov	w1, w21
  42ce10:	mov	x2, x23
  42ce14:	mov	x3, x22
  42ce18:	mov	x5, x19
  42ce1c:	bl	403f60 <error@plt>
  42ce20:	ldp	x20, x19, [sp, #80]
  42ce24:	ldp	x22, x21, [sp, #64]
  42ce28:	ldr	x23, [sp, #48]
  42ce2c:	ldp	x29, x30, [sp, #32]
  42ce30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ce34:	mov	w9, #0x2                   	// #2
  42ce38:	str	w9, [x8, #2352]
  42ce3c:	add	sp, sp, #0x60
  42ce40:	ret
  42ce44:	sub	sp, sp, #0x60
  42ce48:	stp	x29, x30, [sp, #32]
  42ce4c:	str	x23, [sp, #48]
  42ce50:	stp	x22, x21, [sp, #64]
  42ce54:	stp	x20, x19, [sp, #80]
  42ce58:	add	x29, sp, #0x20
  42ce5c:	mov	x19, x2
  42ce60:	mov	x20, x1
  42ce64:	mov	x22, x0
  42ce68:	bl	4049c0 <__errno_location@plt>
  42ce6c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42ce70:	ldr	x8, [x8, #4000]
  42ce74:	ldr	w21, [x0]
  42ce78:	cbz	x8, 42ce80 <wcrtomb@plt+0x28390>
  42ce7c:	blr	x8
  42ce80:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ce84:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ce88:	add	x1, x1, #0xd45
  42ce8c:	add	x2, x2, #0xd80
  42ce90:	mov	w4, #0x5                   	// #5
  42ce94:	mov	x0, xzr
  42ce98:	mov	x3, x19
  42ce9c:	bl	4047d0 <dcngettext@plt>
  42cea0:	mov	x23, x0
  42cea4:	mov	x0, x22
  42cea8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42ceac:	mov	x22, x0
  42ceb0:	add	x1, sp, #0x8
  42ceb4:	mov	x0, x20
  42ceb8:	bl	440290 <argp_parse@@Base+0x5be4>
  42cebc:	mov	x4, x0
  42cec0:	mov	w0, wzr
  42cec4:	mov	w1, w21
  42cec8:	mov	x2, x23
  42cecc:	mov	x3, x22
  42ced0:	mov	x5, x19
  42ced4:	bl	403f60 <error@plt>
  42ced8:	ldp	x20, x19, [sp, #80]
  42cedc:	ldp	x22, x21, [sp, #64]
  42cee0:	ldr	x23, [sp, #48]
  42cee4:	ldp	x29, x30, [sp, #32]
  42cee8:	add	sp, sp, #0x60
  42ceec:	ret
  42cef0:	stp	x29, x30, [sp, #-16]!
  42cef4:	mov	x1, x0
  42cef8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x14e3c>
  42cefc:	add	x0, x0, #0xebd
  42cf00:	mov	x29, sp
  42cf04:	bl	42c614 <wcrtomb@plt+0x27b24>
  42cf08:	sub	sp, sp, #0x60
  42cf0c:	stp	x29, x30, [sp, #32]
  42cf10:	str	x23, [sp, #48]
  42cf14:	stp	x22, x21, [sp, #64]
  42cf18:	stp	x20, x19, [sp, #80]
  42cf1c:	add	x29, sp, #0x20
  42cf20:	mov	x19, x2
  42cf24:	mov	x20, x1
  42cf28:	mov	x22, x0
  42cf2c:	bl	4049c0 <__errno_location@plt>
  42cf30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cf34:	ldr	x8, [x8, #4000]
  42cf38:	ldr	w21, [x0]
  42cf3c:	cbz	x8, 42cf44 <wcrtomb@plt+0x28454>
  42cf40:	blr	x8
  42cf44:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cf48:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cf4c:	add	x1, x1, #0xce0
  42cf50:	add	x2, x2, #0xd12
  42cf54:	mov	w4, #0x5                   	// #5
  42cf58:	mov	x0, xzr
  42cf5c:	mov	x3, x19
  42cf60:	bl	4047d0 <dcngettext@plt>
  42cf64:	mov	x23, x0
  42cf68:	mov	x0, x22
  42cf6c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cf70:	mov	x22, x0
  42cf74:	add	x1, sp, #0x8
  42cf78:	mov	x0, x20
  42cf7c:	bl	440290 <argp_parse@@Base+0x5be4>
  42cf80:	mov	x4, x0
  42cf84:	mov	w0, wzr
  42cf88:	mov	w1, w21
  42cf8c:	mov	x2, x23
  42cf90:	mov	x3, x22
  42cf94:	mov	x5, x19
  42cf98:	bl	403f60 <error@plt>
  42cf9c:	bl	40eb40 <wcrtomb@plt+0xa050>
  42cfa0:	stp	x29, x30, [sp, #-48]!
  42cfa4:	str	x21, [sp, #16]
  42cfa8:	stp	x20, x19, [sp, #32]
  42cfac:	mov	x29, sp
  42cfb0:	mov	x19, x0
  42cfb4:	bl	4049c0 <__errno_location@plt>
  42cfb8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42cfbc:	ldr	x8, [x8, #4000]
  42cfc0:	ldr	w20, [x0]
  42cfc4:	cbz	x8, 42cfcc <wcrtomb@plt+0x284dc>
  42cfc8:	blr	x8
  42cfcc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cfd0:	add	x1, x1, #0xc36
  42cfd4:	mov	w2, #0x5                   	// #5
  42cfd8:	mov	x0, xzr
  42cfdc:	bl	4048b0 <dcgettext@plt>
  42cfe0:	mov	x21, x0
  42cfe4:	mov	x0, x19
  42cfe8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42cfec:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42cff0:	mov	x3, x0
  42cff4:	add	x4, x4, #0xdbc
  42cff8:	mov	w0, wzr
  42cffc:	mov	w1, w20
  42d000:	mov	x2, x21
  42d004:	bl	403f60 <error@plt>
  42d008:	ldp	x20, x19, [sp, #32]
  42d00c:	ldr	x21, [sp, #16]
  42d010:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d014:	mov	w9, #0x2                   	// #2
  42d018:	str	w9, [x8, #2352]
  42d01c:	ldp	x29, x30, [sp], #48
  42d020:	ret
  42d024:	stp	x29, x30, [sp, #-48]!
  42d028:	str	x21, [sp, #16]
  42d02c:	stp	x20, x19, [sp, #32]
  42d030:	mov	x29, sp
  42d034:	mov	x19, x0
  42d038:	bl	4049c0 <__errno_location@plt>
  42d03c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d040:	ldr	x8, [x8, #4000]
  42d044:	ldr	w20, [x0]
  42d048:	cbz	x8, 42d050 <wcrtomb@plt+0x28560>
  42d04c:	blr	x8
  42d050:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d054:	add	x1, x1, #0xc44
  42d058:	mov	w2, #0x5                   	// #5
  42d05c:	mov	x0, xzr
  42d060:	bl	4048b0 <dcgettext@plt>
  42d064:	mov	x21, x0
  42d068:	mov	x0, x19
  42d06c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d070:	mov	w1, w20
  42d074:	mov	x2, x21
  42d078:	ldp	x20, x19, [sp, #32]
  42d07c:	ldr	x21, [sp, #16]
  42d080:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d084:	add	x4, x4, #0xdbc
  42d088:	mov	x3, x0
  42d08c:	mov	w0, wzr
  42d090:	ldp	x29, x30, [sp], #48
  42d094:	b	403f60 <error@plt>
  42d098:	stp	x29, x30, [sp, #-48]!
  42d09c:	str	x21, [sp, #16]
  42d0a0:	stp	x20, x19, [sp, #32]
  42d0a4:	mov	x29, sp
  42d0a8:	mov	x19, x0
  42d0ac:	bl	4049c0 <__errno_location@plt>
  42d0b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d0b4:	ldr	x8, [x8, #4000]
  42d0b8:	ldr	w20, [x0]
  42d0bc:	cbz	x8, 42d0c4 <wcrtomb@plt+0x285d4>
  42d0c0:	blr	x8
  42d0c4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d0c8:	add	x1, x1, #0xc36
  42d0cc:	mov	w2, #0x5                   	// #5
  42d0d0:	mov	x0, xzr
  42d0d4:	bl	4048b0 <dcgettext@plt>
  42d0d8:	mov	x21, x0
  42d0dc:	mov	x0, x19
  42d0e0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d0e4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d0e8:	mov	x3, x0
  42d0ec:	add	x4, x4, #0xdc5
  42d0f0:	mov	w0, wzr
  42d0f4:	mov	w1, w20
  42d0f8:	mov	x2, x21
  42d0fc:	bl	403f60 <error@plt>
  42d100:	ldp	x20, x19, [sp, #32]
  42d104:	ldr	x21, [sp, #16]
  42d108:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d10c:	mov	w9, #0x2                   	// #2
  42d110:	str	w9, [x8, #2352]
  42d114:	ldp	x29, x30, [sp], #48
  42d118:	ret
  42d11c:	stp	x29, x30, [sp, #-48]!
  42d120:	str	x21, [sp, #16]
  42d124:	stp	x20, x19, [sp, #32]
  42d128:	mov	x29, sp
  42d12c:	mov	x19, x0
  42d130:	bl	4049c0 <__errno_location@plt>
  42d134:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d138:	ldr	x8, [x8, #4000]
  42d13c:	ldr	w20, [x0]
  42d140:	cbz	x8, 42d148 <wcrtomb@plt+0x28658>
  42d144:	blr	x8
  42d148:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d14c:	add	x1, x1, #0xc36
  42d150:	mov	w2, #0x5                   	// #5
  42d154:	mov	x0, xzr
  42d158:	bl	4048b0 <dcgettext@plt>
  42d15c:	mov	x21, x0
  42d160:	mov	x0, x19
  42d164:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d168:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d16c:	mov	x3, x0
  42d170:	add	x4, x4, #0xdcb
  42d174:	mov	w0, wzr
  42d178:	mov	w1, w20
  42d17c:	mov	x2, x21
  42d180:	bl	403f60 <error@plt>
  42d184:	ldp	x20, x19, [sp, #32]
  42d188:	ldr	x21, [sp, #16]
  42d18c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d190:	mov	w9, #0x2                   	// #2
  42d194:	str	w9, [x8, #2352]
  42d198:	ldp	x29, x30, [sp], #48
  42d19c:	ret
  42d1a0:	stp	x29, x30, [sp, #-48]!
  42d1a4:	str	x21, [sp, #16]
  42d1a8:	stp	x20, x19, [sp, #32]
  42d1ac:	mov	x29, sp
  42d1b0:	mov	x19, x0
  42d1b4:	bl	4049c0 <__errno_location@plt>
  42d1b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d1bc:	ldr	x8, [x8, #4000]
  42d1c0:	ldr	w20, [x0]
  42d1c4:	cbz	x8, 42d1cc <wcrtomb@plt+0x286dc>
  42d1c8:	blr	x8
  42d1cc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d1d0:	add	x1, x1, #0xc44
  42d1d4:	mov	w2, #0x5                   	// #5
  42d1d8:	mov	x0, xzr
  42d1dc:	bl	4048b0 <dcgettext@plt>
  42d1e0:	mov	x21, x0
  42d1e4:	mov	x0, x19
  42d1e8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d1ec:	mov	w1, w20
  42d1f0:	mov	x2, x21
  42d1f4:	ldp	x20, x19, [sp, #32]
  42d1f8:	ldr	x21, [sp, #16]
  42d1fc:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d200:	add	x4, x4, #0xdcb
  42d204:	mov	x3, x0
  42d208:	mov	w0, wzr
  42d20c:	ldp	x29, x30, [sp], #48
  42d210:	b	403f60 <error@plt>
  42d214:	stp	x29, x30, [sp, #-48]!
  42d218:	str	x21, [sp, #16]
  42d21c:	stp	x20, x19, [sp, #32]
  42d220:	mov	x29, sp
  42d224:	mov	x19, x0
  42d228:	bl	4049c0 <__errno_location@plt>
  42d22c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d230:	ldr	x8, [x8, #4000]
  42d234:	ldr	w20, [x0]
  42d238:	cbz	x8, 42d240 <wcrtomb@plt+0x28750>
  42d23c:	blr	x8
  42d240:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d244:	add	x1, x1, #0xc36
  42d248:	mov	w2, #0x5                   	// #5
  42d24c:	mov	x0, xzr
  42d250:	bl	4048b0 <dcgettext@plt>
  42d254:	mov	x21, x0
  42d258:	mov	x0, x19
  42d25c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d260:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x19e3c>
  42d264:	mov	x3, x0
  42d268:	add	x4, x4, #0x406
  42d26c:	mov	w0, wzr
  42d270:	mov	w1, w20
  42d274:	mov	x2, x21
  42d278:	bl	403f60 <error@plt>
  42d27c:	ldp	x20, x19, [sp, #32]
  42d280:	ldr	x21, [sp, #16]
  42d284:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d288:	mov	w9, #0x2                   	// #2
  42d28c:	str	w9, [x8, #2352]
  42d290:	ldp	x29, x30, [sp], #48
  42d294:	ret
  42d298:	sub	sp, sp, #0x50
  42d29c:	stp	x29, x30, [sp, #32]
  42d2a0:	stp	x22, x21, [sp, #48]
  42d2a4:	stp	x20, x19, [sp, #64]
  42d2a8:	add	x29, sp, #0x20
  42d2ac:	mov	x19, x1
  42d2b0:	mov	x21, x0
  42d2b4:	bl	4049c0 <__errno_location@plt>
  42d2b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d2bc:	ldr	x8, [x8, #4000]
  42d2c0:	ldr	w20, [x0]
  42d2c4:	cbz	x8, 42d2cc <wcrtomb@plt+0x287dc>
  42d2c8:	blr	x8
  42d2cc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d2d0:	add	x1, x1, #0xdd3
  42d2d4:	mov	w2, #0x5                   	// #5
  42d2d8:	mov	x0, xzr
  42d2dc:	bl	4048b0 <dcgettext@plt>
  42d2e0:	mov	x22, x0
  42d2e4:	mov	x0, x21
  42d2e8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d2ec:	mov	x21, x0
  42d2f0:	add	x1, sp, #0x8
  42d2f4:	mov	x0, x19
  42d2f8:	bl	440290 <argp_parse@@Base+0x5be4>
  42d2fc:	mov	x4, x0
  42d300:	mov	w0, wzr
  42d304:	mov	w1, w20
  42d308:	mov	x2, x22
  42d30c:	mov	x3, x21
  42d310:	bl	403f60 <error@plt>
  42d314:	ldp	x20, x19, [sp, #64]
  42d318:	ldp	x22, x21, [sp, #48]
  42d31c:	ldp	x29, x30, [sp, #32]
  42d320:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d324:	mov	w9, #0x2                   	// #2
  42d328:	str	w9, [x8, #2352]
  42d32c:	add	sp, sp, #0x50
  42d330:	ret
  42d334:	stp	x29, x30, [sp, #-48]!
  42d338:	str	x21, [sp, #16]
  42d33c:	stp	x20, x19, [sp, #32]
  42d340:	mov	x29, sp
  42d344:	mov	x19, x0
  42d348:	bl	4049c0 <__errno_location@plt>
  42d34c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d350:	ldr	x8, [x8, #4000]
  42d354:	ldr	w20, [x0]
  42d358:	cbz	x8, 42d360 <wcrtomb@plt+0x28870>
  42d35c:	blr	x8
  42d360:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d364:	add	x1, x1, #0xc44
  42d368:	mov	w2, #0x5                   	// #5
  42d36c:	mov	x0, xzr
  42d370:	bl	4048b0 <dcgettext@plt>
  42d374:	mov	x21, x0
  42d378:	mov	x0, x19
  42d37c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d380:	mov	w1, w20
  42d384:	mov	x2, x21
  42d388:	ldp	x20, x19, [sp, #32]
  42d38c:	ldr	x21, [sp, #16]
  42d390:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x19e3c>
  42d394:	add	x4, x4, #0x406
  42d398:	mov	x3, x0
  42d39c:	mov	w0, wzr
  42d3a0:	ldp	x29, x30, [sp], #48
  42d3a4:	b	403f60 <error@plt>
  42d3a8:	sub	sp, sp, #0x50
  42d3ac:	stp	x29, x30, [sp, #32]
  42d3b0:	stp	x22, x21, [sp, #48]
  42d3b4:	stp	x20, x19, [sp, #64]
  42d3b8:	add	x29, sp, #0x20
  42d3bc:	mov	x19, x1
  42d3c0:	mov	x21, x0
  42d3c4:	bl	4049c0 <__errno_location@plt>
  42d3c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d3cc:	ldr	x8, [x8, #4000]
  42d3d0:	ldr	w20, [x0]
  42d3d4:	cbz	x8, 42d3dc <wcrtomb@plt+0x288ec>
  42d3d8:	blr	x8
  42d3dc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d3e0:	add	x1, x1, #0xde9
  42d3e4:	mov	w2, #0x5                   	// #5
  42d3e8:	mov	x0, xzr
  42d3ec:	bl	4048b0 <dcgettext@plt>
  42d3f0:	mov	x22, x0
  42d3f4:	mov	x0, x21
  42d3f8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d3fc:	mov	x21, x0
  42d400:	add	x1, sp, #0x8
  42d404:	mov	x0, x19
  42d408:	bl	440290 <argp_parse@@Base+0x5be4>
  42d40c:	mov	x4, x0
  42d410:	mov	w0, wzr
  42d414:	mov	w1, w20
  42d418:	mov	x2, x22
  42d41c:	mov	x3, x21
  42d420:	bl	403f60 <error@plt>
  42d424:	ldp	x20, x19, [sp, #64]
  42d428:	ldp	x22, x21, [sp, #48]
  42d42c:	ldp	x29, x30, [sp, #32]
  42d430:	add	sp, sp, #0x50
  42d434:	ret
  42d438:	stp	x29, x30, [sp, #-48]!
  42d43c:	stp	x22, x21, [sp, #16]
  42d440:	stp	x20, x19, [sp, #32]
  42d444:	mov	x29, sp
  42d448:	mov	x21, x1
  42d44c:	mov	x19, x0
  42d450:	bl	4049c0 <__errno_location@plt>
  42d454:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d458:	ldr	x8, [x8, #4000]
  42d45c:	ldr	w20, [x0]
  42d460:	cbz	x8, 42d468 <wcrtomb@plt+0x28978>
  42d464:	blr	x8
  42d468:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d46c:	add	x1, x1, #0xe08
  42d470:	mov	w2, #0x5                   	// #5
  42d474:	mov	x0, xzr
  42d478:	bl	4048b0 <dcgettext@plt>
  42d47c:	mov	x22, x0
  42d480:	mov	x0, x21
  42d484:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d488:	mov	x21, x0
  42d48c:	mov	w0, #0x1                   	// #1
  42d490:	mov	x1, x19
  42d494:	bl	449134 <argp_parse@@Base+0xea88>
  42d498:	mov	x4, x0
  42d49c:	mov	w0, wzr
  42d4a0:	mov	w1, w20
  42d4a4:	mov	x2, x22
  42d4a8:	mov	x3, x21
  42d4ac:	bl	403f60 <error@plt>
  42d4b0:	ldp	x20, x19, [sp, #32]
  42d4b4:	ldp	x22, x21, [sp, #16]
  42d4b8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d4bc:	mov	w9, #0x2                   	// #2
  42d4c0:	str	w9, [x8, #2352]
  42d4c4:	ldp	x29, x30, [sp], #48
  42d4c8:	ret
  42d4cc:	stp	x29, x30, [sp, #-16]!
  42d4d0:	mov	x1, x0
  42d4d4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x16e3c>
  42d4d8:	add	x0, x0, #0xb85
  42d4dc:	mov	x29, sp
  42d4e0:	bl	42c614 <wcrtomb@plt+0x27b24>
  42d4e4:	stp	x29, x30, [sp, #-48]!
  42d4e8:	str	x21, [sp, #16]
  42d4ec:	stp	x20, x19, [sp, #32]
  42d4f0:	mov	x29, sp
  42d4f4:	mov	x19, x0
  42d4f8:	bl	4049c0 <__errno_location@plt>
  42d4fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d500:	ldr	x8, [x8, #4000]
  42d504:	ldr	w20, [x0]
  42d508:	cbz	x8, 42d510 <wcrtomb@plt+0x28a20>
  42d50c:	blr	x8
  42d510:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d514:	add	x1, x1, #0xc36
  42d518:	mov	w2, #0x5                   	// #5
  42d51c:	mov	x0, xzr
  42d520:	bl	4048b0 <dcgettext@plt>
  42d524:	mov	x21, x0
  42d528:	mov	x0, x19
  42d52c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d530:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x16e3c>
  42d534:	mov	x3, x0
  42d538:	add	x4, x4, #0xb85
  42d53c:	mov	w0, wzr
  42d540:	mov	w1, w20
  42d544:	mov	x2, x21
  42d548:	bl	403f60 <error@plt>
  42d54c:	ldp	x20, x19, [sp, #32]
  42d550:	ldr	x21, [sp, #16]
  42d554:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d558:	mov	w9, #0x2                   	// #2
  42d55c:	str	w9, [x8, #2352]
  42d560:	ldp	x29, x30, [sp], #48
  42d564:	ret
  42d568:	stp	x29, x30, [sp, #-48]!
  42d56c:	str	x21, [sp, #16]
  42d570:	stp	x20, x19, [sp, #32]
  42d574:	mov	x29, sp
  42d578:	mov	x19, x0
  42d57c:	bl	4049c0 <__errno_location@plt>
  42d580:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d584:	ldr	x8, [x8, #4000]
  42d588:	ldr	w20, [x0]
  42d58c:	cbz	x8, 42d594 <wcrtomb@plt+0x28aa4>
  42d590:	blr	x8
  42d594:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d598:	add	x1, x1, #0xc44
  42d59c:	mov	w2, #0x5                   	// #5
  42d5a0:	mov	x0, xzr
  42d5a4:	bl	4048b0 <dcgettext@plt>
  42d5a8:	mov	x21, x0
  42d5ac:	mov	x0, x19
  42d5b0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d5b4:	mov	w1, w20
  42d5b8:	mov	x2, x21
  42d5bc:	ldp	x20, x19, [sp, #32]
  42d5c0:	ldr	x21, [sp, #16]
  42d5c4:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x16e3c>
  42d5c8:	add	x4, x4, #0xb85
  42d5cc:	mov	x3, x0
  42d5d0:	mov	w0, wzr
  42d5d4:	ldp	x29, x30, [sp], #48
  42d5d8:	b	403f60 <error@plt>
  42d5dc:	stp	x29, x30, [sp, #-48]!
  42d5e0:	str	x21, [sp, #16]
  42d5e4:	stp	x20, x19, [sp, #32]
  42d5e8:	mov	x29, sp
  42d5ec:	mov	x19, x0
  42d5f0:	bl	4049c0 <__errno_location@plt>
  42d5f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d5f8:	ldr	x8, [x8, #4000]
  42d5fc:	ldr	w20, [x0]
  42d600:	cbz	x8, 42d608 <wcrtomb@plt+0x28b18>
  42d604:	blr	x8
  42d608:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d60c:	add	x1, x1, #0xc36
  42d610:	mov	w2, #0x5                   	// #5
  42d614:	mov	x0, xzr
  42d618:	bl	4048b0 <dcgettext@plt>
  42d61c:	mov	x21, x0
  42d620:	mov	x0, x19
  42d624:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d628:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d62c:	mov	x3, x0
  42d630:	add	x4, x4, #0xe28
  42d634:	mov	w0, wzr
  42d638:	mov	w1, w20
  42d63c:	mov	x2, x21
  42d640:	bl	403f60 <error@plt>
  42d644:	ldp	x20, x19, [sp, #32]
  42d648:	ldr	x21, [sp, #16]
  42d64c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d650:	mov	w9, #0x2                   	// #2
  42d654:	str	w9, [x8, #2352]
  42d658:	ldp	x29, x30, [sp], #48
  42d65c:	ret
  42d660:	stp	x29, x30, [sp, #-48]!
  42d664:	str	x21, [sp, #16]
  42d668:	stp	x20, x19, [sp, #32]
  42d66c:	mov	x29, sp
  42d670:	mov	x19, x0
  42d674:	bl	4049c0 <__errno_location@plt>
  42d678:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d67c:	ldr	x8, [x8, #4000]
  42d680:	ldr	w20, [x0]
  42d684:	cbz	x8, 42d68c <wcrtomb@plt+0x28b9c>
  42d688:	blr	x8
  42d68c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d690:	add	x1, x1, #0xc44
  42d694:	mov	w2, #0x5                   	// #5
  42d698:	mov	x0, xzr
  42d69c:	bl	4048b0 <dcgettext@plt>
  42d6a0:	mov	x21, x0
  42d6a4:	mov	x0, x19
  42d6a8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d6ac:	mov	w1, w20
  42d6b0:	mov	x2, x21
  42d6b4:	ldp	x20, x19, [sp, #32]
  42d6b8:	ldr	x21, [sp, #16]
  42d6bc:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d6c0:	add	x4, x4, #0xe28
  42d6c4:	mov	x3, x0
  42d6c8:	mov	w0, wzr
  42d6cc:	ldp	x29, x30, [sp], #48
  42d6d0:	b	403f60 <error@plt>
  42d6d4:	stp	x29, x30, [sp, #-48]!
  42d6d8:	str	x21, [sp, #16]
  42d6dc:	stp	x20, x19, [sp, #32]
  42d6e0:	mov	x29, sp
  42d6e4:	mov	x19, x0
  42d6e8:	bl	4049c0 <__errno_location@plt>
  42d6ec:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d6f0:	ldr	x8, [x8, #4000]
  42d6f4:	ldr	w20, [x0]
  42d6f8:	cbz	x8, 42d700 <wcrtomb@plt+0x28c10>
  42d6fc:	blr	x8
  42d700:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d704:	add	x1, x1, #0xc36
  42d708:	mov	w2, #0x5                   	// #5
  42d70c:	mov	x0, xzr
  42d710:	bl	4048b0 <dcgettext@plt>
  42d714:	mov	x21, x0
  42d718:	mov	x0, x19
  42d71c:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d720:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x19e3c>
  42d724:	mov	x3, x0
  42d728:	add	x4, x4, #0x660
  42d72c:	mov	w0, wzr
  42d730:	mov	w1, w20
  42d734:	mov	x2, x21
  42d738:	bl	403f60 <error@plt>
  42d73c:	ldp	x20, x19, [sp, #32]
  42d740:	ldr	x21, [sp, #16]
  42d744:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d748:	mov	w9, #0x2                   	// #2
  42d74c:	str	w9, [x8, #2352]
  42d750:	ldp	x29, x30, [sp], #48
  42d754:	ret
  42d758:	stp	x29, x30, [sp, #-48]!
  42d75c:	str	x21, [sp, #16]
  42d760:	stp	x20, x19, [sp, #32]
  42d764:	mov	x29, sp
  42d768:	mov	x19, x0
  42d76c:	bl	4049c0 <__errno_location@plt>
  42d770:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d774:	ldr	x8, [x8, #4000]
  42d778:	ldr	w20, [x0]
  42d77c:	cbz	x8, 42d784 <wcrtomb@plt+0x28c94>
  42d780:	blr	x8
  42d784:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d788:	add	x1, x1, #0xc36
  42d78c:	mov	w2, #0x5                   	// #5
  42d790:	mov	x0, xzr
  42d794:	bl	4048b0 <dcgettext@plt>
  42d798:	mov	x21, x0
  42d79c:	mov	x0, x19
  42d7a0:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d7a4:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d7a8:	mov	x3, x0
  42d7ac:	add	x4, x4, #0xe31
  42d7b0:	mov	w0, wzr
  42d7b4:	mov	w1, w20
  42d7b8:	mov	x2, x21
  42d7bc:	bl	403f60 <error@plt>
  42d7c0:	ldp	x20, x19, [sp, #32]
  42d7c4:	ldr	x21, [sp, #16]
  42d7c8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d7cc:	mov	w9, #0x2                   	// #2
  42d7d0:	str	w9, [x8, #2352]
  42d7d4:	ldp	x29, x30, [sp], #48
  42d7d8:	ret
  42d7dc:	stp	x29, x30, [sp, #-48]!
  42d7e0:	str	x21, [sp, #16]
  42d7e4:	stp	x20, x19, [sp, #32]
  42d7e8:	mov	x29, sp
  42d7ec:	mov	x19, x0
  42d7f0:	bl	4049c0 <__errno_location@plt>
  42d7f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d7f8:	ldr	x8, [x8, #4000]
  42d7fc:	ldr	w20, [x0]
  42d800:	cbz	x8, 42d808 <wcrtomb@plt+0x28d18>
  42d804:	blr	x8
  42d808:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d80c:	add	x1, x1, #0xc36
  42d810:	mov	w2, #0x5                   	// #5
  42d814:	mov	x0, xzr
  42d818:	bl	4048b0 <dcgettext@plt>
  42d81c:	mov	x21, x0
  42d820:	mov	x0, x19
  42d824:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d828:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d82c:	mov	x3, x0
  42d830:	add	x4, x4, #0xe37
  42d834:	mov	w0, wzr
  42d838:	mov	w1, w20
  42d83c:	mov	x2, x21
  42d840:	bl	403f60 <error@plt>
  42d844:	ldp	x20, x19, [sp, #32]
  42d848:	ldr	x21, [sp, #16]
  42d84c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d850:	mov	w9, #0x2                   	// #2
  42d854:	str	w9, [x8, #2352]
  42d858:	ldp	x29, x30, [sp], #48
  42d85c:	ret
  42d860:	stp	x29, x30, [sp, #-48]!
  42d864:	str	x21, [sp, #16]
  42d868:	stp	x20, x19, [sp, #32]
  42d86c:	mov	x29, sp
  42d870:	mov	x19, x0
  42d874:	bl	4049c0 <__errno_location@plt>
  42d878:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d87c:	ldr	x8, [x8, #4000]
  42d880:	ldr	w20, [x0]
  42d884:	cbz	x8, 42d88c <wcrtomb@plt+0x28d9c>
  42d888:	blr	x8
  42d88c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d890:	add	x1, x1, #0xc36
  42d894:	mov	w2, #0x5                   	// #5
  42d898:	mov	x0, xzr
  42d89c:	bl	4048b0 <dcgettext@plt>
  42d8a0:	mov	x21, x0
  42d8a4:	mov	x0, x19
  42d8a8:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d8ac:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d8b0:	mov	x3, x0
  42d8b4:	add	x4, x4, #0x9aa
  42d8b8:	mov	w0, wzr
  42d8bc:	mov	w1, w20
  42d8c0:	mov	x2, x21
  42d8c4:	bl	403f60 <error@plt>
  42d8c8:	ldp	x20, x19, [sp, #32]
  42d8cc:	ldr	x21, [sp, #16]
  42d8d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d8d4:	mov	w9, #0x2                   	// #2
  42d8d8:	str	w9, [x8, #2352]
  42d8dc:	ldp	x29, x30, [sp], #48
  42d8e0:	ret
  42d8e4:	stp	x29, x30, [sp, #-48]!
  42d8e8:	stp	x20, x19, [sp, #32]
  42d8ec:	mov	x19, x0
  42d8f0:	str	x21, [sp, #16]
  42d8f4:	mov	x29, sp
  42d8f8:	cbz	x1, 42d954 <wcrtomb@plt+0x28e64>
  42d8fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d900:	ldr	x8, [x8, #4000]
  42d904:	mov	x20, x2
  42d908:	mov	x21, x1
  42d90c:	cbz	x8, 42d914 <wcrtomb@plt+0x28e24>
  42d910:	blr	x8
  42d914:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d918:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d91c:	add	x1, x1, #0xe3f
  42d920:	add	x2, x2, #0xe5e
  42d924:	mov	w4, #0x5                   	// #5
  42d928:	mov	x0, xzr
  42d92c:	mov	x3, x20
  42d930:	bl	4047d0 <dcngettext@plt>
  42d934:	mov	x2, x0
  42d938:	mov	w0, wzr
  42d93c:	mov	w1, wzr
  42d940:	mov	x3, x19
  42d944:	mov	x4, x21
  42d948:	mov	x5, x20
  42d94c:	bl	403f60 <error@plt>
  42d950:	b	42d9a8 <wcrtomb@plt+0x28eb8>
  42d954:	bl	4049c0 <__errno_location@plt>
  42d958:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d95c:	ldr	x8, [x8, #4000]
  42d960:	ldr	w20, [x0]
  42d964:	cbz	x8, 42d96c <wcrtomb@plt+0x28e7c>
  42d968:	blr	x8
  42d96c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d970:	add	x1, x1, #0xc36
  42d974:	mov	w2, #0x5                   	// #5
  42d978:	mov	x0, xzr
  42d97c:	bl	4048b0 <dcgettext@plt>
  42d980:	mov	x21, x0
  42d984:	mov	x0, x19
  42d988:	bl	448e5c <argp_parse@@Base+0xe7b0>
  42d98c:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d990:	mov	x3, x0
  42d994:	add	x4, x4, #0x9aa
  42d998:	mov	w0, wzr
  42d99c:	mov	w1, w20
  42d9a0:	mov	x2, x21
  42d9a4:	bl	403f60 <error@plt>
  42d9a8:	ldp	x20, x19, [sp, #32]
  42d9ac:	ldr	x21, [sp, #16]
  42d9b0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d9b4:	mov	w9, #0x2                   	// #2
  42d9b8:	str	w9, [x8, #2352]
  42d9bc:	ldp	x29, x30, [sp], #48
  42d9c0:	ret
  42d9c4:	stp	x29, x30, [sp, #-16]!
  42d9c8:	mov	x1, x0
  42d9cc:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42d9d0:	add	x0, x0, #0xe7e
  42d9d4:	mov	x29, sp
  42d9d8:	bl	42c614 <wcrtomb@plt+0x27b24>
  42d9dc:	stp	x29, x30, [sp, #-16]!
  42d9e0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42d9e4:	ldr	x0, [x8, #2360]
  42d9e8:	mov	x29, sp
  42d9ec:	cbz	x0, 42da04 <wcrtomb@plt+0x28f14>
  42d9f0:	bl	43e6a8 <argp_parse@@Base+0x3ffc>
  42d9f4:	cbz	x0, 42da04 <wcrtomb@plt+0x28f14>
  42d9f8:	mov	w0, #0x1                   	// #1
  42d9fc:	ldp	x29, x30, [sp], #16
  42da00:	ret
  42da04:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42da08:	ldr	x0, [x8, #2368]
  42da0c:	cbz	x0, 42da1c <wcrtomb@plt+0x28f2c>
  42da10:	bl	43e6a8 <argp_parse@@Base+0x3ffc>
  42da14:	cmp	x0, #0x0
  42da18:	cset	w0, ne  // ne = any
  42da1c:	ldp	x29, x30, [sp], #16
  42da20:	ret
  42da24:	stp	x29, x30, [sp, #-80]!
  42da28:	stp	x22, x21, [sp, #48]
  42da2c:	stp	x20, x19, [sp, #64]
  42da30:	mov	w19, w1
  42da34:	mov	x20, x0
  42da38:	mov	x21, x0
  42da3c:	stp	x26, x25, [sp, #16]
  42da40:	stp	x24, x23, [sp, #32]
  42da44:	mov	x29, sp
  42da48:	tbnz	w2, #0, 42db48 <wcrtomb@plt+0x29058>
  42da4c:	mov	x8, xzr
  42da50:	mov	x9, x20
  42da54:	ldrb	w10, [x9]
  42da58:	cmp	w10, #0x2e
  42da5c:	b.eq	42da68 <wcrtomb@plt+0x28f78>  // b.none
  42da60:	cbnz	w10, 42da8c <wcrtomb@plt+0x28f9c>
  42da64:	b	42dab0 <wcrtomb@plt+0x28fc0>
  42da68:	ldrb	w11, [x9, #1]
  42da6c:	cmp	w11, #0x2e
  42da70:	b.ne	42da8c <wcrtomb@plt+0x28f9c>  // b.any
  42da74:	mov	x11, x9
  42da78:	ldrb	w12, [x11, #2]!
  42da7c:	cmp	w12, #0x2f
  42da80:	b.eq	42da88 <wcrtomb@plt+0x28f98>  // b.none
  42da84:	cbnz	w12, 42da8c <wcrtomb@plt+0x28f9c>
  42da88:	sub	x8, x11, x20
  42da8c:	add	x11, x9, #0x1
  42da90:	and	w9, w10, #0xff
  42da94:	cmp	w9, #0x2f
  42da98:	mov	x9, x11
  42da9c:	b.eq	42da54 <wcrtomb@plt+0x28f64>  // b.none
  42daa0:	mov	x11, x9
  42daa4:	ldrb	w10, [x11], #1
  42daa8:	cbnz	w10, 42da90 <wcrtomb@plt+0x28fa0>
  42daac:	b	42da54 <wcrtomb@plt+0x28f64>
  42dab0:	add	x8, x20, x8
  42dab4:	sub	x21, x8, #0x1
  42dab8:	ldrb	w8, [x21, #1]!
  42dabc:	cmp	w8, #0x2f
  42dac0:	b.eq	42dab8 <wcrtomb@plt+0x28fc8>  // b.none
  42dac4:	subs	x24, x21, x20
  42dac8:	b.eq	42db48 <wcrtomb@plt+0x29058>  // b.none
  42dacc:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42dad0:	and	x25, x19, #0x1
  42dad4:	add	x26, x26, #0x938
  42dad8:	ldr	x23, [x26, x25, lsl #3]
  42dadc:	add	x0, x24, #0x1
  42dae0:	bl	44a010 <argp_parse@@Base+0xf964>
  42dae4:	mov	x1, x20
  42dae8:	mov	x2, x24
  42daec:	mov	x22, x0
  42daf0:	bl	403e80 <memcpy@plt>
  42daf4:	strb	wzr, [x22, x24]
  42daf8:	cbnz	x23, 42db28 <wcrtomb@plt+0x29038>
  42dafc:	adrp	x2, 42d000 <wcrtomb@plt+0x28510>
  42db00:	adrp	x3, 42d000 <wcrtomb@plt+0x28510>
  42db04:	add	x2, x2, #0xc0c
  42db08:	add	x3, x3, #0xc10
  42db0c:	mov	x0, xzr
  42db10:	mov	x1, xzr
  42db14:	mov	x4, xzr
  42db18:	bl	43eb5c <argp_parse@@Base+0x44b0>
  42db1c:	mov	x23, x0
  42db20:	str	x0, [x26, x25, lsl #3]
  42db24:	cbz	x0, 42dc08 <wcrtomb@plt+0x29118>
  42db28:	mov	x0, x23
  42db2c:	mov	x1, x22
  42db30:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  42db34:	cbz	x0, 42dc08 <wcrtomb@plt+0x29118>
  42db38:	cmp	x0, x22
  42db3c:	b.eq	42dbc0 <wcrtomb@plt+0x290d0>  // b.none
  42db40:	mov	x0, x22
  42db44:	bl	4046b0 <free@plt>
  42db48:	ldrb	w8, [x21]
  42db4c:	cbnz	w8, 42dba4 <wcrtomb@plt+0x290b4>
  42db50:	cmp	x21, x20
  42db54:	b.ne	42db9c <wcrtomb@plt+0x290ac>  // b.any
  42db58:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42db5c:	ldr	x8, [x8, #4000]
  42db60:	cbz	x8, 42db68 <wcrtomb@plt+0x29078>
  42db64:	blr	x8
  42db68:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42db6c:	and	x8, x19, #0x1
  42db70:	add	x9, x9, #0xe98
  42db74:	ldr	x1, [x9, x8, lsl #3]
  42db78:	mov	w2, #0x5                   	// #5
  42db7c:	mov	x0, xzr
  42db80:	bl	4048b0 <dcgettext@plt>
  42db84:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42db88:	mov	x3, x0
  42db8c:	add	x2, x2, #0x274
  42db90:	mov	w0, wzr
  42db94:	mov	w1, wzr
  42db98:	bl	403f60 <error@plt>
  42db9c:	adrp	x21, 464000 <_obstack_memory_used@@Base+0x18e3c>
  42dba0:	add	x21, x21, #0xfda
  42dba4:	mov	x0, x21
  42dba8:	ldp	x20, x19, [sp, #64]
  42dbac:	ldp	x22, x21, [sp, #48]
  42dbb0:	ldp	x24, x23, [sp, #32]
  42dbb4:	ldp	x26, x25, [sp, #16]
  42dbb8:	ldp	x29, x30, [sp], #80
  42dbbc:	ret
  42dbc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  42dbc4:	ldr	x8, [x8, #4000]
  42dbc8:	cbz	x8, 42dbd0 <wcrtomb@plt+0x290e0>
  42dbcc:	blr	x8
  42dbd0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42dbd4:	add	x8, x8, #0xe88
  42dbd8:	ldr	x1, [x8, x25, lsl #3]
  42dbdc:	mov	w2, #0x5                   	// #5
  42dbe0:	mov	x0, xzr
  42dbe4:	bl	4048b0 <dcgettext@plt>
  42dbe8:	mov	x2, x0
  42dbec:	mov	w0, wzr
  42dbf0:	mov	w1, wzr
  42dbf4:	mov	x3, x22
  42dbf8:	bl	403f60 <error@plt>
  42dbfc:	ldrb	w8, [x21]
  42dc00:	cbnz	w8, 42dba4 <wcrtomb@plt+0x290b4>
  42dc04:	b	42db50 <wcrtomb@plt+0x29060>
  42dc08:	bl	40eb80 <wcrtomb@plt+0xa090>
  42dc0c:	b	43eb04 <argp_parse@@Base+0x4458>
  42dc10:	stp	x29, x30, [sp, #-16]!
  42dc14:	mov	x29, sp
  42dc18:	bl	404610 <strcmp@plt>
  42dc1c:	cmp	w0, #0x0
  42dc20:	cset	w0, eq  // eq = none
  42dc24:	ldp	x29, x30, [sp], #16
  42dc28:	ret
  42dc2c:	sub	sp, sp, #0xc0
  42dc30:	stp	x24, x23, [sp, #144]
  42dc34:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42dc38:	add	x23, x23, #0xf00
  42dc3c:	ldr	w8, [x23]
  42dc40:	ldr	w9, [x23, #36]
  42dc44:	stp	x28, x27, [sp, #112]
  42dc48:	stp	x26, x25, [sp, #128]
  42dc4c:	stp	x22, x21, [sp, #160]
  42dc50:	and	w8, w8, w9
  42dc54:	mov	x25, x3
  42dc58:	mov	w27, w2
  42dc5c:	mov	w22, w1
  42dc60:	cmn	w8, #0x1
  42dc64:	stp	x29, x30, [sp, #96]
  42dc68:	stp	x20, x19, [sp, #176]
  42dc6c:	add	x29, sp, #0x60
  42dc70:	b.eq	42dcd4 <wcrtomb@plt+0x291e4>  // b.none
  42dc74:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42dc78:	add	x8, x8, #0xf08
  42dc7c:	ldr	w9, [x8]
  42dc80:	ldr	w8, [x8, #36]
  42dc84:	and	w8, w9, w8
  42dc88:	cmn	w8, #0x1
  42dc8c:	b.eq	42dcdc <wcrtomb@plt+0x291ec>  // b.none
  42dc90:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42dc94:	add	x8, x8, #0xf10
  42dc98:	ldr	w9, [x8]
  42dc9c:	ldr	w8, [x8, #36]
  42dca0:	and	w8, w9, w8
  42dca4:	cmn	w8, #0x1
  42dca8:	b.eq	42dce4 <wcrtomb@plt+0x291f4>  // b.none
  42dcac:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42dcb0:	add	x8, x8, #0xf18
  42dcb4:	ldr	w9, [x8]
  42dcb8:	ldr	w8, [x8, #36]
  42dcbc:	and	w8, w9, w8
  42dcc0:	cmn	w8, #0x1
  42dcc4:	b.eq	42dcec <wcrtomb@plt+0x291fc>  // b.none
  42dcc8:	bl	4049c0 <__errno_location@plt>
  42dccc:	mov	w8, #0x18                  	// #24
  42dcd0:	b	42de50 <wcrtomb@plt+0x29360>
  42dcd4:	mov	w21, wzr
  42dcd8:	b	42dcf0 <wcrtomb@plt+0x29200>
  42dcdc:	mov	w21, #0x1                   	// #1
  42dce0:	b	42dcf0 <wcrtomb@plt+0x29200>
  42dce4:	mov	w21, #0x2                   	// #2
  42dce8:	b	42dcf0 <wcrtomb@plt+0x29200>
  42dcec:	mov	w21, #0x3                   	// #3
  42dcf0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  42dcf4:	mov	x19, x0
  42dcf8:	mov	x20, xzr
  42dcfc:	mov	x24, xzr
  42dd00:	add	x8, x0, #0x1
  42dd04:	mov	x26, x0
  42dd08:	ldurb	w9, [x8, #-1]
  42dd0c:	cmp	w9, #0x3f
  42dd10:	b.le	42dd50 <wcrtomb@plt+0x29260>
  42dd14:	cmp	w9, #0x40
  42dd18:	b.ne	42dd40 <wcrtomb@plt+0x29250>  // b.any
  42dd1c:	cbnz	x20, 42dd40 <wcrtomb@plt+0x29250>
  42dd20:	sturb	wzr, [x8, #-1]
  42dd24:	mov	x20, x26
  42dd28:	mov	x26, x8
  42dd2c:	add	x8, x8, #0x1
  42dd30:	ldurb	w9, [x8, #-1]
  42dd34:	cmp	w9, #0x3f
  42dd38:	b.le	42dd50 <wcrtomb@plt+0x29260>
  42dd3c:	b	42dd14 <wcrtomb@plt+0x29224>
  42dd40:	add	x8, x8, #0x1
  42dd44:	ldurb	w9, [x8, #-1]
  42dd48:	cmp	w9, #0x3f
  42dd4c:	b.gt	42dd14 <wcrtomb@plt+0x29224>
  42dd50:	cmp	w9, #0x3a
  42dd54:	b.ne	42dd68 <wcrtomb@plt+0x29278>  // b.any
  42dd58:	cbnz	x24, 42dd40 <wcrtomb@plt+0x29250>
  42dd5c:	mov	x24, x8
  42dd60:	sturb	wzr, [x8, #-1]
  42dd64:	b	42dd40 <wcrtomb@plt+0x29250>
  42dd68:	cbz	w9, 42dd88 <wcrtomb@plt+0x29298>
  42dd6c:	cmp	w9, #0xa
  42dd70:	b.ne	42dd40 <wcrtomb@plt+0x29250>  // b.any
  42dd74:	mov	x0, x19
  42dd78:	bl	4046b0 <free@plt>
  42dd7c:	bl	4049c0 <__errno_location@plt>
  42dd80:	mov	w8, #0x2                   	// #2
  42dd84:	b	42de50 <wcrtomb@plt+0x29360>
  42dd88:	mov	x0, x26
  42dd8c:	bl	404a90 <gethostbyname@plt>
  42dd90:	cbz	x0, 42de10 <wcrtomb@plt+0x29320>
  42dd94:	cbz	x20, 42de38 <wcrtomb@plt+0x29348>
  42dd98:	ldrb	w8, [x20]
  42dd9c:	cmp	w8, #0x0
  42dda0:	csel	x28, xzr, x20, eq  // eq = none
  42dda4:	cbz	x25, 42de40 <wcrtomb@plt+0x29350>
  42dda8:	mov	x0, x25
  42ddac:	str	w27, [sp, #28]
  42ddb0:	bl	43c0fc <argp_parse@@Base+0x1a50>
  42ddb4:	add	x8, x23, w21, uxtw #3
  42ddb8:	add	x27, x8, #0x20
  42ddbc:	mov	x20, x0
  42ddc0:	mov	x0, x27
  42ddc4:	bl	404040 <pipe@plt>
  42ddc8:	cmn	w0, #0x1
  42ddcc:	b.eq	42ddf4 <wcrtomb@plt+0x29304>  // b.none
  42ddd0:	add	x0, x23, x21, lsl #3
  42ddd4:	str	x0, [sp, #16]
  42ddd8:	bl	404040 <pipe@plt>
  42dddc:	cmn	w0, #0x1
  42dde0:	b.eq	42ddf4 <wcrtomb@plt+0x29304>  // b.none
  42dde4:	bl	4040d0 <fork@plt>
  42dde8:	cbz	w0, 42de78 <wcrtomb@plt+0x29388>
  42ddec:	cmn	w0, #0x1
  42ddf0:	b.ne	42df90 <wcrtomb@plt+0x294a0>  // b.any
  42ddf4:	bl	4049c0 <__errno_location@plt>
  42ddf8:	ldr	w21, [x0]
  42ddfc:	mov	x20, x0
  42de00:	mov	x0, x19
  42de04:	bl	4046b0 <free@plt>
  42de08:	str	w21, [x20]
  42de0c:	b	42de54 <wcrtomb@plt+0x29364>
  42de10:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42de14:	add	x1, x1, #0xf50
  42de18:	mov	w2, #0x5                   	// #5
  42de1c:	bl	4048b0 <dcgettext@plt>
  42de20:	mov	x2, x0
  42de24:	mov	w0, #0x80                  	// #128
  42de28:	mov	w1, wzr
  42de2c:	mov	x3, x26
  42de30:	bl	403f60 <error@plt>
  42de34:	cbnz	x20, 42dd98 <wcrtomb@plt+0x292a8>
  42de38:	mov	x28, xzr
  42de3c:	cbnz	x25, 42dda8 <wcrtomb@plt+0x292b8>
  42de40:	mov	x0, x19
  42de44:	bl	4046b0 <free@plt>
  42de48:	bl	4049c0 <__errno_location@plt>
  42de4c:	mov	w8, #0x5                   	// #5
  42de50:	str	w8, [x0]
  42de54:	mov	w0, #0xffffffff            	// #-1
  42de58:	ldp	x20, x19, [sp, #176]
  42de5c:	ldp	x22, x21, [sp, #160]
  42de60:	ldp	x24, x23, [sp, #144]
  42de64:	ldp	x26, x25, [sp, #128]
  42de68:	ldp	x28, x27, [sp, #112]
  42de6c:	ldp	x29, x30, [sp, #96]
  42de70:	add	sp, sp, #0xc0
  42de74:	ret
  42de78:	ldr	w0, [x27]
  42de7c:	mov	w1, wzr
  42de80:	str	x20, [sp, #8]
  42de84:	bl	404920 <dup2@plt>
  42de88:	tbnz	w0, #31, 42dedc <wcrtomb@plt+0x293ec>
  42de8c:	ldr	w0, [x27]
  42de90:	cbz	w0, 42de9c <wcrtomb@plt+0x293ac>
  42de94:	bl	4044d0 <close@plt>
  42de98:	cbnz	w0, 42dedc <wcrtomb@plt+0x293ec>
  42de9c:	add	x20, x23, x21, lsl #3
  42dea0:	ldr	w0, [x20, #36]
  42dea4:	cbz	w0, 42deb0 <wcrtomb@plt+0x293c0>
  42dea8:	bl	4044d0 <close@plt>
  42deac:	cbnz	w0, 42dedc <wcrtomb@plt+0x293ec>
  42deb0:	ldr	w0, [x20, #4]!
  42deb4:	mov	w1, #0x1                   	// #1
  42deb8:	bl	404920 <dup2@plt>
  42debc:	tbnz	w0, #31, 42dedc <wcrtomb@plt+0x293ec>
  42dec0:	ldr	x8, [sp, #16]
  42dec4:	ldr	w0, [x8]
  42dec8:	bl	4044d0 <close@plt>
  42decc:	cbnz	w0, 42dedc <wcrtomb@plt+0x293ec>
  42ded0:	ldr	w0, [x20]
  42ded4:	bl	4044d0 <close@plt>
  42ded8:	cbz	w0, 42df08 <wcrtomb@plt+0x29418>
  42dedc:	bl	4049c0 <__errno_location@plt>
  42dee0:	ldr	w20, [x0]
  42dee4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42dee8:	add	x1, x1, #0xf75
  42deec:	mov	w2, #0x5                   	// #5
  42def0:	mov	x0, xzr
  42def4:	bl	4048b0 <dcgettext@plt>
  42def8:	mov	x2, x0
  42defc:	mov	w0, #0x80                  	// #128
  42df00:	mov	w1, w20
  42df04:	bl	403f60 <error@plt>
  42df08:	bl	404030 <getuid@plt>
  42df0c:	bl	403ec0 <setuid@plt>
  42df10:	cbnz	w0, 42e310 <wcrtomb@plt+0x29820>
  42df14:	bl	4046f0 <getgid@plt>
  42df18:	bl	404570 <setgid@plt>
  42df1c:	cbnz	w0, 42e310 <wcrtomb@plt+0x29820>
  42df20:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42df24:	ldr	x5, [x8, #3832]
  42df28:	ldr	x1, [sp, #8]
  42df2c:	cbz	x28, 42df50 <wcrtomb@plt+0x29460>
  42df30:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42df34:	add	x3, x3, #0xf9c
  42df38:	mov	x0, x25
  42df3c:	mov	x2, x26
  42df40:	mov	x4, x28
  42df44:	mov	x6, xzr
  42df48:	bl	403f90 <execl@plt>
  42df4c:	b	42df64 <wcrtomb@plt+0x29474>
  42df50:	mov	x0, x25
  42df54:	mov	x2, x26
  42df58:	mov	x3, x5
  42df5c:	mov	x4, xzr
  42df60:	bl	403f90 <execl@plt>
  42df64:	bl	4049c0 <__errno_location@plt>
  42df68:	ldr	w20, [x0]
  42df6c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42df70:	add	x1, x1, #0xf9f
  42df74:	mov	w2, #0x5                   	// #5
  42df78:	mov	x0, xzr
  42df7c:	bl	4048b0 <dcgettext@plt>
  42df80:	mov	x2, x0
  42df84:	mov	w0, #0x80                  	// #128
  42df88:	mov	w1, w20
  42df8c:	bl	403f60 <error@plt>
  42df90:	add	x8, x23, x21, lsl #3
  42df94:	ldr	w0, [x8, #4]
  42df98:	bl	4044d0 <close@plt>
  42df9c:	ldr	w0, [x27]
  42dfa0:	bl	4044d0 <close@plt>
  42dfa4:	mov	x0, x24
  42dfa8:	bl	403f00 <strlen@plt>
  42dfac:	mov	x20, x0
  42dfb0:	add	x0, x0, #0x3e8
  42dfb4:	bl	44a010 <argp_parse@@Base+0xf964>
  42dfb8:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42dfbc:	add	x3, x3, #0xfbb
  42dfc0:	mov	w1, #0x1                   	// #1
  42dfc4:	mov	x2, #0xffffffffffffffff    	// #-1
  42dfc8:	mov	x4, x24
  42dfcc:	mov	x25, x0
  42dfd0:	bl	403f20 <__sprintf_chk@plt>
  42dfd4:	add	x8, x25, x20
  42dfd8:	add	x24, x8, #0x2
  42dfdc:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42dfe0:	add	x3, x3, #0xfdf
  42dfe4:	mov	w1, #0x1                   	// #1
  42dfe8:	mov	x2, #0xffffffffffffffff    	// #-1
  42dfec:	mov	x0, x24
  42dff0:	mov	w4, w22
  42dff4:	bl	403f20 <__sprintf_chk@plt>
  42dff8:	and	w8, w22, #0x3
  42dffc:	cmp	w8, #0x2
  42e000:	b.eq	42e288 <wcrtomb@plt+0x29798>  // b.none
  42e004:	ldr	w26, [sp, #28]
  42e008:	cmp	w8, #0x1
  42e00c:	b.eq	42e028 <wcrtomb@plt+0x29538>  // b.none
  42e010:	cbnz	w8, 42e310 <wcrtomb@plt+0x29820>
  42e014:	mov	x0, x24
  42e018:	bl	403f00 <strlen@plt>
  42e01c:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e020:	add	x8, x8, #0xfe3
  42e024:	b	42e038 <wcrtomb@plt+0x29548>
  42e028:	mov	x0, x24
  42e02c:	bl	403f00 <strlen@plt>
  42e030:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e034:	add	x8, x8, #0xff3
  42e038:	ldr	x8, [x8]
  42e03c:	add	x9, x24, x0
  42e040:	strb	wzr, [x9, #8]
  42e044:	str	x8, [x9]
  42e048:	tbz	w22, #10, 42e070 <wcrtomb@plt+0x29580>
  42e04c:	mov	x0, x24
  42e050:	bl	403f00 <strlen@plt>
  42e054:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e058:	add	x8, x8, #0xffc
  42e05c:	ldr	x8, [x8]
  42e060:	add	x9, x24, x0
  42e064:	mov	w10, #0x44                  	// #68
  42e068:	strh	w10, [x9, #8]
  42e06c:	str	x8, [x9]
  42e070:	tbnz	w22, #6, 42e188 <wcrtomb@plt+0x29698>
  42e074:	tbnz	w22, #12, 42e1ac <wcrtomb@plt+0x296bc>
  42e078:	tbnz	w22, #7, 42e1d0 <wcrtomb@plt+0x296e0>
  42e07c:	tbnz	w22, #8, 42e1f0 <wcrtomb@plt+0x29700>
  42e080:	tbnz	w22, #11, 42e218 <wcrtomb@plt+0x29728>
  42e084:	mov	w8, #0x1000                	// #4096
  42e088:	movk	w8, #0x10, lsl #16
  42e08c:	tst	w22, w8
  42e090:	b.eq	42e0d0 <wcrtomb@plt+0x295e0>  // b.none
  42e094:	mov	x0, x24
  42e098:	bl	403f00 <strlen@plt>
  42e09c:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42e0a0:	add	x8, x8, #0x2e
  42e0a4:	ldr	x8, [x8]
  42e0a8:	add	x9, x24, x0
  42e0ac:	mov	x0, x24
  42e0b0:	strb	wzr, [x9, #8]
  42e0b4:	str	x8, [x9]
  42e0b8:	bl	403f00 <strlen@plt>
  42e0bc:	mov	x8, #0x4f7c                	// #20348
  42e0c0:	movk	x8, #0x535f, lsl #16
  42e0c4:	movk	x8, #0x4e59, lsl #32
  42e0c8:	movk	x8, #0x43, lsl #48
  42e0cc:	str	x8, [x24, x0]
  42e0d0:	tbz	w22, #9, 42e0f4 <wcrtomb@plt+0x29604>
  42e0d4:	mov	x0, x24
  42e0d8:	bl	403f00 <strlen@plt>
  42e0dc:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42e0e0:	add	x8, x8, #0x37
  42e0e4:	ldr	x8, [x8]
  42e0e8:	add	x9, x24, x0
  42e0ec:	strb	wzr, [x9, #8]
  42e0f0:	str	x8, [x9]
  42e0f4:	mov	x0, x25
  42e0f8:	bl	403f00 <strlen@plt>
  42e0fc:	mov	w8, #0xa                   	// #10
  42e100:	strh	w8, [x25, x0]
  42e104:	mov	x0, x25
  42e108:	bl	403f00 <strlen@plt>
  42e10c:	mov	x20, x0
  42e110:	mov	w0, #0xd                   	// #13
  42e114:	mov	w1, #0x1                   	// #1
  42e118:	bl	404170 <signal@plt>
  42e11c:	add	x24, x23, x21, lsl #3
  42e120:	ldr	w8, [x24, #36]!
  42e124:	mov	x22, x0
  42e128:	mov	x1, x25
  42e12c:	mov	x2, x20
  42e130:	mov	w0, w8
  42e134:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e138:	mov	x23, x0
  42e13c:	mov	w0, #0xd                   	// #13
  42e140:	mov	x1, x22
  42e144:	bl	404170 <signal@plt>
  42e148:	cmp	x23, x20
  42e14c:	b.ne	42e254 <wcrtomb@plt+0x29764>  // b.any
  42e150:	add	x1, sp, #0x20
  42e154:	mov	w0, w21
  42e158:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42e15c:	cbz	x0, 42e2b8 <wcrtomb@plt+0x297c8>
  42e160:	mov	w2, #0xa                   	// #10
  42e164:	mov	x1, xzr
  42e168:	bl	404670 <strtol@plt>
  42e16c:	tbnz	x0, #63, 42e2c4 <wcrtomb@plt+0x297d4>
  42e170:	mov	x0, x25
  42e174:	bl	4046b0 <free@plt>
  42e178:	mov	x0, x19
  42e17c:	bl	4046b0 <free@plt>
  42e180:	add	w0, w21, w26
  42e184:	b	42de58 <wcrtomb@plt+0x29368>
  42e188:	mov	x0, x24
  42e18c:	bl	403f00 <strlen@plt>
  42e190:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42e194:	add	x8, x8, #0x6
  42e198:	ldr	x8, [x8]
  42e19c:	add	x9, x24, x0
  42e1a0:	strb	wzr, [x9, #8]
  42e1a4:	str	x8, [x9]
  42e1a8:	tbz	w22, #12, 42e078 <wcrtomb@plt+0x29588>
  42e1ac:	mov	x0, x24
  42e1b0:	bl	403f00 <strlen@plt>
  42e1b4:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42e1b8:	add	x8, x8, #0xf
  42e1bc:	ldr	x8, [x8]
  42e1c0:	add	x9, x24, x0
  42e1c4:	strb	wzr, [x9, #8]
  42e1c8:	str	x8, [x9]
  42e1cc:	tbz	w22, #7, 42e07c <wcrtomb@plt+0x2958c>
  42e1d0:	mov	x0, x24
  42e1d4:	bl	403f00 <strlen@plt>
  42e1d8:	mov	x8, #0x4f7c                	// #20348
  42e1dc:	movk	x8, #0x455f, lsl #16
  42e1e0:	movk	x8, #0x4358, lsl #32
  42e1e4:	movk	x8, #0x4c, lsl #48
  42e1e8:	str	x8, [x24, x0]
  42e1ec:	tbz	w22, #8, 42e080 <wcrtomb@plt+0x29590>
  42e1f0:	mov	x0, x24
  42e1f4:	bl	403f00 <strlen@plt>
  42e1f8:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42e1fc:	add	x8, x8, #0x18
  42e200:	ldr	x8, [x8]
  42e204:	add	x9, x24, x0
  42e208:	mov	w10, #0x59                  	// #89
  42e20c:	strh	w10, [x9, #8]
  42e210:	str	x8, [x9]
  42e214:	tbz	w22, #11, 42e084 <wcrtomb@plt+0x29594>
  42e218:	mov	x0, x24
  42e21c:	bl	403f00 <strlen@plt>
  42e220:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42e224:	add	x8, x8, #0x22
  42e228:	ldr	x8, [x8]
  42e22c:	mov	w10, #0x434f                	// #17231
  42e230:	add	x9, x24, x0
  42e234:	movk	w10, #0x4b, lsl #16
  42e238:	str	x8, [x9]
  42e23c:	str	w10, [x9, #8]
  42e240:	mov	w8, #0x1000                	// #4096
  42e244:	movk	w8, #0x10, lsl #16
  42e248:	tst	w22, w8
  42e24c:	b.ne	42e094 <wcrtomb@plt+0x295a4>  // b.any
  42e250:	b	42e0d0 <wcrtomb@plt+0x295e0>
  42e254:	ldr	x22, [sp, #16]
  42e258:	ldr	w0, [x22]
  42e25c:	bl	4044d0 <close@plt>
  42e260:	ldr	w0, [x24]
  42e264:	bl	4044d0 <close@plt>
  42e268:	mov	w8, #0xffffffff            	// #-1
  42e26c:	str	w8, [x22]
  42e270:	str	w8, [x24]
  42e274:	bl	4049c0 <__errno_location@plt>
  42e278:	mov	w8, #0x5                   	// #5
  42e27c:	mov	x20, x0
  42e280:	str	w8, [x0]
  42e284:	b	42e2d8 <wcrtomb@plt+0x297e8>
  42e288:	mov	x0, x24
  42e28c:	bl	403f00 <strlen@plt>
  42e290:	ldr	w26, [sp, #28]
  42e294:	mov	w9, #0x5f4f                	// #24399
  42e298:	mov	w10, #0x5744                	// #22340
  42e29c:	add	x8, x24, x0
  42e2a0:	movk	w9, #0x4452, lsl #16
  42e2a4:	movk	w10, #0x52, lsl #16
  42e2a8:	str	w9, [x8]
  42e2ac:	stur	w10, [x8, #3]
  42e2b0:	tbnz	w22, #10, 42e04c <wcrtomb@plt+0x2955c>
  42e2b4:	b	42e070 <wcrtomb@plt+0x29580>
  42e2b8:	bl	4049c0 <__errno_location@plt>
  42e2bc:	mov	x20, x0
  42e2c0:	b	42e2d4 <wcrtomb@plt+0x297e4>
  42e2c4:	bl	4049c0 <__errno_location@plt>
  42e2c8:	mov	x20, x0
  42e2cc:	mov	w8, #0x5                   	// #5
  42e2d0:	str	w8, [x0]
  42e2d4:	ldr	x22, [sp, #16]
  42e2d8:	ldr	w21, [x20]
  42e2dc:	mov	x0, x25
  42e2e0:	bl	4046b0 <free@plt>
  42e2e4:	mov	x0, x19
  42e2e8:	bl	4046b0 <free@plt>
  42e2ec:	ldr	w0, [x22]
  42e2f0:	bl	4044d0 <close@plt>
  42e2f4:	ldr	w0, [x24]
  42e2f8:	bl	4044d0 <close@plt>
  42e2fc:	mov	w0, #0xffffffff            	// #-1
  42e300:	str	w0, [x22]
  42e304:	str	w0, [x24]
  42e308:	str	w21, [x20]
  42e30c:	b	42de58 <wcrtomb@plt+0x29368>
  42e310:	bl	404560 <abort@plt>
  42e314:	sub	sp, sp, #0x80
  42e318:	stp	x20, x19, [sp, #112]
  42e31c:	mov	w19, w0
  42e320:	mov	w0, #0xd                   	// #13
  42e324:	mov	w1, #0x1                   	// #1
  42e328:	stp	x29, x30, [sp, #64]
  42e32c:	stp	x24, x23, [sp, #80]
  42e330:	stp	x22, x21, [sp, #96]
  42e334:	add	x29, sp, #0x40
  42e338:	bl	404170 <signal@plt>
  42e33c:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42e340:	add	x23, x23, #0xf00
  42e344:	add	x22, x23, w19, sxtw #3
  42e348:	mov	x20, x0
  42e34c:	ldr	w0, [x22, #36]!
  42e350:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e354:	add	x1, x1, #0xfc0
  42e358:	mov	w2, #0x2                   	// #2
  42e35c:	sxtw	x24, w19
  42e360:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e364:	mov	x21, x0
  42e368:	mov	w0, #0xd                   	// #13
  42e36c:	mov	x1, x20
  42e370:	bl	404170 <signal@plt>
  42e374:	cmp	x21, #0x2
  42e378:	b.ne	42e3e4 <wcrtomb@plt+0x298f4>  // b.any
  42e37c:	mov	x1, sp
  42e380:	mov	w0, w19
  42e384:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42e388:	cbz	x0, 42e3ac <wcrtomb@plt+0x298bc>
  42e38c:	mov	w2, #0xa                   	// #10
  42e390:	mov	x1, xzr
  42e394:	bl	404670 <strtol@plt>
  42e398:	mov	x19, x0
  42e39c:	tbz	x0, #63, 42e3b0 <wcrtomb@plt+0x298c0>
  42e3a0:	bl	4049c0 <__errno_location@plt>
  42e3a4:	mov	w8, #0x5                   	// #5
  42e3a8:	str	w8, [x0]
  42e3ac:	mov	x19, #0xffffffffffffffff    	// #-1
  42e3b0:	bl	4049c0 <__errno_location@plt>
  42e3b4:	lsl	x24, x24, #3
  42e3b8:	mov	x20, x0
  42e3bc:	ldr	w21, [x0]
  42e3c0:	ldr	w0, [x23, x24]
  42e3c4:	bl	4044d0 <close@plt>
  42e3c8:	ldr	w0, [x22]
  42e3cc:	bl	4044d0 <close@plt>
  42e3d0:	mov	w8, #0xffffffff            	// #-1
  42e3d4:	str	w8, [x23, x24]
  42e3d8:	str	w8, [x22]
  42e3dc:	str	w21, [x20]
  42e3e0:	b	42e410 <wcrtomb@plt+0x29920>
  42e3e4:	lsl	x20, x24, #3
  42e3e8:	ldr	w0, [x23, x20]
  42e3ec:	bl	4044d0 <close@plt>
  42e3f0:	ldr	w0, [x22]
  42e3f4:	bl	4044d0 <close@plt>
  42e3f8:	mov	w19, #0xffffffff            	// #-1
  42e3fc:	str	w19, [x23, x20]
  42e400:	str	w19, [x22]
  42e404:	bl	4049c0 <__errno_location@plt>
  42e408:	mov	w8, #0x5                   	// #5
  42e40c:	str	w8, [x0]
  42e410:	mov	w0, w19
  42e414:	ldp	x20, x19, [sp, #112]
  42e418:	ldp	x22, x21, [sp, #96]
  42e41c:	ldp	x24, x23, [sp, #80]
  42e420:	ldp	x29, x30, [sp, #64]
  42e424:	add	sp, sp, #0x80
  42e428:	ret
  42e42c:	sub	sp, sp, #0xe0
  42e430:	stp	x20, x19, [sp, #208]
  42e434:	mov	x20, x2
  42e438:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e43c:	stp	x22, x21, [sp, #192]
  42e440:	mov	x19, x1
  42e444:	mov	w21, w0
  42e448:	add	x3, x3, #0xfc3
  42e44c:	mov	x0, sp
  42e450:	mov	w1, #0x1                   	// #1
  42e454:	mov	w2, #0x40                  	// #64
  42e458:	mov	x4, x20
  42e45c:	stp	x29, x30, [sp, #128]
  42e460:	str	x27, [sp, #144]
  42e464:	stp	x26, x25, [sp, #160]
  42e468:	stp	x24, x23, [sp, #176]
  42e46c:	add	x29, sp, #0x80
  42e470:	bl	403f20 <__sprintf_chk@plt>
  42e474:	mov	x0, sp
  42e478:	bl	403f00 <strlen@plt>
  42e47c:	mov	x22, x0
  42e480:	mov	w0, #0xd                   	// #13
  42e484:	mov	w1, #0x1                   	// #1
  42e488:	bl	404170 <signal@plt>
  42e48c:	adrp	x26, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42e490:	add	x26, x26, #0xf00
  42e494:	add	x25, x26, w21, sxtw #3
  42e498:	mov	x23, x0
  42e49c:	ldr	w0, [x25, #36]!
  42e4a0:	mov	x1, sp
  42e4a4:	mov	x2, x22
  42e4a8:	sxtw	x27, w21
  42e4ac:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e4b0:	mov	x24, x0
  42e4b4:	mov	w0, #0xd                   	// #13
  42e4b8:	mov	x1, x23
  42e4bc:	bl	404170 <signal@plt>
  42e4c0:	cmp	x24, x22
  42e4c4:	b.ne	42e530 <wcrtomb@plt+0x29a40>  // b.any
  42e4c8:	add	x1, sp, #0x40
  42e4cc:	mov	w0, w21
  42e4d0:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42e4d4:	cbz	x0, 42e55c <wcrtomb@plt+0x29a6c>
  42e4d8:	mov	w2, #0xa                   	// #10
  42e4dc:	mov	x1, xzr
  42e4e0:	bl	404670 <strtol@plt>
  42e4e4:	tbnz	x0, #63, 42e550 <wcrtomb@plt+0x29a60>
  42e4e8:	mov	x21, x0
  42e4ec:	cmp	x0, x20
  42e4f0:	b.hi	42e55c <wcrtomb@plt+0x29a6c>  // b.pmore
  42e4f4:	cbz	x21, 42e560 <wcrtomb@plt+0x29a70>
  42e4f8:	mov	x22, xzr
  42e4fc:	add	x20, x26, x27, lsl #3
  42e500:	ldr	w0, [x20]
  42e504:	sub	x2, x21, x22
  42e508:	mov	x1, x19
  42e50c:	bl	44932c <argp_parse@@Base+0xec80>
  42e510:	add	x8, x0, #0x1
  42e514:	cmp	x8, #0x1
  42e518:	b.ls	42e584 <wcrtomb@plt+0x29a94>  // b.plast
  42e51c:	add	x22, x0, x22
  42e520:	cmp	x21, x22
  42e524:	add	x19, x19, x0
  42e528:	b.hi	42e500 <wcrtomb@plt+0x29a10>  // b.pmore
  42e52c:	b	42e560 <wcrtomb@plt+0x29a70>
  42e530:	lsl	x19, x27, #3
  42e534:	ldr	w0, [x26, x19]
  42e538:	bl	4044d0 <close@plt>
  42e53c:	ldr	w0, [x25]
  42e540:	bl	4044d0 <close@plt>
  42e544:	mov	w8, #0xffffffff            	// #-1
  42e548:	str	w8, [x26, x19]
  42e54c:	str	w8, [x25]
  42e550:	bl	4049c0 <__errno_location@plt>
  42e554:	mov	w8, #0x5                   	// #5
  42e558:	str	w8, [x0]
  42e55c:	mov	x21, #0xffffffffffffffff    	// #-1
  42e560:	mov	x0, x21
  42e564:	ldp	x20, x19, [sp, #208]
  42e568:	ldp	x22, x21, [sp, #192]
  42e56c:	ldp	x24, x23, [sp, #176]
  42e570:	ldp	x26, x25, [sp, #160]
  42e574:	ldr	x27, [sp, #144]
  42e578:	ldp	x29, x30, [sp, #128]
  42e57c:	add	sp, sp, #0xe0
  42e580:	ret
  42e584:	ldr	w0, [x20]
  42e588:	bl	4044d0 <close@plt>
  42e58c:	ldr	w0, [x25]
  42e590:	bl	4044d0 <close@plt>
  42e594:	mov	w8, #0xffffffff            	// #-1
  42e598:	str	w8, [x20]
  42e59c:	b	42e54c <wcrtomb@plt+0x29a5c>
  42e5a0:	sub	sp, sp, #0xd0
  42e5a4:	stp	x20, x19, [sp, #192]
  42e5a8:	mov	x20, x2
  42e5ac:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e5b0:	stp	x22, x21, [sp, #176]
  42e5b4:	mov	x21, x1
  42e5b8:	mov	w19, w0
  42e5bc:	add	x3, x3, #0xfc9
  42e5c0:	mov	x0, sp
  42e5c4:	mov	w1, #0x1                   	// #1
  42e5c8:	mov	w2, #0x40                  	// #64
  42e5cc:	mov	x4, x20
  42e5d0:	stp	x29, x30, [sp, #128]
  42e5d4:	stp	x26, x25, [sp, #144]
  42e5d8:	stp	x24, x23, [sp, #160]
  42e5dc:	add	x29, sp, #0x80
  42e5e0:	bl	403f20 <__sprintf_chk@plt>
  42e5e4:	mov	x0, sp
  42e5e8:	bl	403f00 <strlen@plt>
  42e5ec:	mov	x22, x0
  42e5f0:	mov	w0, #0xd                   	// #13
  42e5f4:	mov	w1, #0x1                   	// #1
  42e5f8:	bl	404170 <signal@plt>
  42e5fc:	adrp	x25, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42e600:	add	x25, x25, #0xf00
  42e604:	add	x26, x25, w19, sxtw #3
  42e608:	ldr	w8, [x26, #36]!
  42e60c:	mov	x23, x0
  42e610:	mov	x1, sp
  42e614:	mov	x2, x22
  42e618:	mov	w0, w8
  42e61c:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e620:	mov	x24, x0
  42e624:	mov	w0, #0xd                   	// #13
  42e628:	mov	x1, x23
  42e62c:	bl	404170 <signal@plt>
  42e630:	cmp	x24, x22
  42e634:	b.ne	42e6c0 <wcrtomb@plt+0x29bd0>  // b.any
  42e638:	mov	w0, #0xd                   	// #13
  42e63c:	mov	w1, #0x1                   	// #1
  42e640:	bl	404170 <signal@plt>
  42e644:	ldr	w8, [x26]
  42e648:	mov	x22, x0
  42e64c:	mov	x1, x21
  42e650:	mov	x2, x20
  42e654:	mov	w0, w8
  42e658:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e65c:	mov	x21, x0
  42e660:	mov	w0, #0xd                   	// #13
  42e664:	mov	x1, x22
  42e668:	bl	404170 <signal@plt>
  42e66c:	cmp	x21, x20
  42e670:	b.ne	42e6c4 <wcrtomb@plt+0x29bd4>  // b.any
  42e674:	add	x1, sp, #0x40
  42e678:	mov	w0, w19
  42e67c:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42e680:	cbz	x0, 42e6a4 <wcrtomb@plt+0x29bb4>
  42e684:	mov	w2, #0xa                   	// #10
  42e688:	mov	x1, xzr
  42e68c:	bl	404670 <strtol@plt>
  42e690:	mov	x21, x0
  42e694:	tbz	x0, #63, 42e6a8 <wcrtomb@plt+0x29bb8>
  42e698:	bl	4049c0 <__errno_location@plt>
  42e69c:	mov	w8, #0x5                   	// #5
  42e6a0:	str	w8, [x0]
  42e6a4:	mov	x21, #0xffffffffffffffff    	// #-1
  42e6a8:	cmp	x21, #0x0
  42e6ac:	csel	x0, xzr, x20, lt  // lt = tstop
  42e6b0:	tbnz	x21, #63, 42e6f8 <wcrtomb@plt+0x29c08>
  42e6b4:	cmp	x21, x20
  42e6b8:	b.ne	42e6c4 <wcrtomb@plt+0x29bd4>  // b.any
  42e6bc:	b	42e6f8 <wcrtomb@plt+0x29c08>
  42e6c0:	mov	x21, xzr
  42e6c4:	sxtw	x8, w19
  42e6c8:	lsl	x19, x8, #3
  42e6cc:	ldr	w0, [x25, x19]
  42e6d0:	bl	4044d0 <close@plt>
  42e6d4:	ldr	w0, [x26]
  42e6d8:	bl	4044d0 <close@plt>
  42e6dc:	mov	w8, #0xffffffff            	// #-1
  42e6e0:	str	w8, [x25, x19]
  42e6e4:	str	w8, [x26]
  42e6e8:	bl	4049c0 <__errno_location@plt>
  42e6ec:	mov	w8, #0x5                   	// #5
  42e6f0:	str	w8, [x0]
  42e6f4:	mov	x0, x21
  42e6f8:	ldp	x20, x19, [sp, #192]
  42e6fc:	ldp	x22, x21, [sp, #176]
  42e700:	ldp	x24, x23, [sp, #160]
  42e704:	ldp	x26, x25, [sp, #144]
  42e708:	ldp	x29, x30, [sp, #128]
  42e70c:	add	sp, sp, #0xd0
  42e710:	ret
  42e714:	sub	sp, sp, #0xe0
  42e718:	cmp	x1, #0x0
  42e71c:	add	x9, sp, #0x8
  42e720:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42e724:	stp	x20, x19, [sp, #208]
  42e728:	mov	w5, w2
  42e72c:	mov	w19, w0
  42e730:	movk	x8, #0xcccd
  42e734:	cneg	x10, x1, mi  // mi = first
  42e738:	add	x4, x9, #0x13
  42e73c:	mov	w9, #0xa                   	// #10
  42e740:	stp	x29, x30, [sp, #160]
  42e744:	stp	x24, x23, [sp, #176]
  42e748:	stp	x22, x21, [sp, #192]
  42e74c:	add	x29, sp, #0xa0
  42e750:	strb	wzr, [sp, #28]
  42e754:	umulh	x11, x10, x8
  42e758:	lsr	x11, x11, #3
  42e75c:	msub	w12, w11, w9, w10
  42e760:	orr	w12, w12, #0x30
  42e764:	cmp	x10, #0x9
  42e768:	strb	w12, [x4], #-1
  42e76c:	mov	x10, x11
  42e770:	b.hi	42e754 <wcrtomb@plt+0x29c64>  // b.pmore
  42e774:	tbnz	x1, #63, 42e898 <wcrtomb@plt+0x29da8>
  42e778:	add	x4, x4, #0x1
  42e77c:	cmp	w5, #0x3
  42e780:	b.cs	42e8a8 <wcrtomb@plt+0x29db8>  // b.hs, b.nlast
  42e784:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42e788:	add	x3, x3, #0xfcf
  42e78c:	add	x0, sp, #0x20
  42e790:	mov	w1, #0x1                   	// #1
  42e794:	mov	w2, #0x40                  	// #64
  42e798:	bl	403f20 <__sprintf_chk@plt>
  42e79c:	add	x0, sp, #0x20
  42e7a0:	bl	403f00 <strlen@plt>
  42e7a4:	mov	x20, x0
  42e7a8:	mov	w0, #0xd                   	// #13
  42e7ac:	mov	w1, #0x1                   	// #1
  42e7b0:	bl	404170 <signal@plt>
  42e7b4:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42e7b8:	add	x23, x23, #0xf00
  42e7bc:	add	x24, x23, w19, sxtw #3
  42e7c0:	ldr	w8, [x24, #36]!
  42e7c4:	mov	x21, x0
  42e7c8:	add	x1, sp, #0x20
  42e7cc:	mov	x2, x20
  42e7d0:	mov	w0, w8
  42e7d4:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e7d8:	mov	x22, x0
  42e7dc:	mov	w0, #0xd                   	// #13
  42e7e0:	mov	x1, x21
  42e7e4:	bl	404170 <signal@plt>
  42e7e8:	cmp	x22, x20
  42e7ec:	b.ne	42e848 <wcrtomb@plt+0x29d58>  // b.any
  42e7f0:	sub	x1, x29, #0x40
  42e7f4:	mov	w0, w19
  42e7f8:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42e7fc:	cbnz	x0, 42e808 <wcrtomb@plt+0x29d18>
  42e800:	b	42e878 <wcrtomb@plt+0x29d88>
  42e804:	add	x0, x0, #0x1
  42e808:	ldrb	w8, [x0]
  42e80c:	cmp	w8, #0x20
  42e810:	b.eq	42e804 <wcrtomb@plt+0x29d14>  // b.none
  42e814:	cmp	w8, #0x9
  42e818:	b.eq	42e804 <wcrtomb@plt+0x29d14>  // b.none
  42e81c:	cmp	w8, #0x2d
  42e820:	cset	w9, eq  // eq = none
  42e824:	cmp	w8, #0x2b
  42e828:	cset	w10, eq  // eq = none
  42e82c:	orr	w10, w9, w10
  42e830:	ldrb	w9, [x0, x10]
  42e834:	sub	w9, w9, #0x30
  42e838:	cmp	w9, #0x9
  42e83c:	b.ls	42e8ac <wcrtomb@plt+0x29dbc>  // b.plast
  42e840:	mov	x8, xzr
  42e844:	b	42e87c <wcrtomb@plt+0x29d8c>
  42e848:	sxtw	x8, w19
  42e84c:	lsl	x19, x8, #3
  42e850:	ldr	w0, [x23, x19]
  42e854:	bl	4044d0 <close@plt>
  42e858:	ldr	w0, [x24]
  42e85c:	bl	4044d0 <close@plt>
  42e860:	mov	w8, #0xffffffff            	// #-1
  42e864:	str	w8, [x23, x19]
  42e868:	str	w8, [x24]
  42e86c:	bl	4049c0 <__errno_location@plt>
  42e870:	mov	w8, #0x5                   	// #5
  42e874:	str	w8, [x0]
  42e878:	mov	x8, #0xffffffffffffffff    	// #-1
  42e87c:	ldp	x20, x19, [sp, #208]
  42e880:	ldp	x22, x21, [sp, #192]
  42e884:	ldp	x24, x23, [sp, #176]
  42e888:	ldp	x29, x30, [sp, #160]
  42e88c:	mov	x0, x8
  42e890:	add	sp, sp, #0xe0
  42e894:	ret
  42e898:	mov	w8, #0x2d                  	// #45
  42e89c:	strb	w8, [x4]
  42e8a0:	cmp	w5, #0x3
  42e8a4:	b.cc	42e784 <wcrtomb@plt+0x29c94>  // b.lo, b.ul, b.last
  42e8a8:	bl	404560 <abort@plt>
  42e8ac:	cmp	w8, #0x2d
  42e8b0:	b.ne	42e8e8 <wcrtomb@plt+0x29df8>  // b.any
  42e8b4:	mov	x8, xzr
  42e8b8:	add	x10, x10, #0x1
  42e8bc:	add	x8, x8, x8, lsl #2
  42e8c0:	lsl	x11, x8, #1
  42e8c4:	sub	x8, x11, w9, uxtw
  42e8c8:	cmp	x11, x8
  42e8cc:	b.lt	42e878 <wcrtomb@plt+0x29d88>  // b.tstop
  42e8d0:	ldrb	w9, [x0, x10]
  42e8d4:	add	x10, x10, #0x1
  42e8d8:	sub	w9, w9, #0x30
  42e8dc:	cmp	w9, #0x9
  42e8e0:	b.ls	42e8bc <wcrtomb@plt+0x29dcc>  // b.plast
  42e8e4:	b	42e87c <wcrtomb@plt+0x29d8c>
  42e8e8:	mov	x8, xzr
  42e8ec:	add	x10, x10, #0x1
  42e8f0:	add	x8, x8, x8, lsl #2
  42e8f4:	lsl	x11, x8, #1
  42e8f8:	add	x8, x11, w9, uxtw
  42e8fc:	cmp	x8, x11
  42e900:	b.lt	42e878 <wcrtomb@plt+0x29d88>  // b.tstop
  42e904:	ldrb	w9, [x0, x10]
  42e908:	add	x10, x10, #0x1
  42e90c:	sub	w9, w9, #0x30
  42e910:	cmp	w9, #0xa
  42e914:	b.cc	42e8f0 <wcrtomb@plt+0x29e00>  // b.lo, b.ul, b.last
  42e918:	b	42e87c <wcrtomb@plt+0x29d8c>
  42e91c:	sub	sp, sp, #0xf0
  42e920:	mov	w8, #0x6d02                	// #27906
  42e924:	movk	w8, #0x8030, lsl #16
  42e928:	stp	x20, x19, [sp, #224]
  42e92c:	mov	x19, x2
  42e930:	cmp	w1, w8
  42e934:	mov	w20, w0
  42e938:	stp	x29, x30, [sp, #160]
  42e93c:	str	x25, [sp, #176]
  42e940:	stp	x24, x23, [sp, #192]
  42e944:	stp	x22, x21, [sp, #208]
  42e948:	add	x29, sp, #0xa0
  42e94c:	b.eq	42e9b4 <wcrtomb@plt+0x29ec4>  // b.none
  42e950:	mov	w8, #0x6d01                	// #27905
  42e954:	movk	w8, #0x4008, lsl #16
  42e958:	cmp	w1, w8
  42e95c:	b.ne	42ea38 <wcrtomb@plt+0x29f48>  // b.any
  42e960:	ldrsw	x9, [x19, #4]
  42e964:	add	x10, sp, #0x8
  42e968:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42e96c:	movk	x8, #0xcccd
  42e970:	cmp	x9, #0x0
  42e974:	add	x5, x10, #0x13
  42e978:	cneg	x10, x9, mi  // mi = first
  42e97c:	mov	w9, #0xa                   	// #10
  42e980:	strb	wzr, [sp, #28]
  42e984:	umulh	x11, x10, x8
  42e988:	lsr	x11, x11, #3
  42e98c:	msub	w12, w11, w9, w10
  42e990:	orr	w12, w12, #0x30
  42e994:	cmp	x10, #0x9
  42e998:	strb	w12, [x5], #-1
  42e99c:	mov	x10, x11
  42e9a0:	b.hi	42e984 <wcrtomb@plt+0x29e94>  // b.pmore
  42e9a4:	ldr	w8, [x19, #4]
  42e9a8:	tbnz	w8, #31, 42ea70 <wcrtomb@plt+0x29f80>
  42e9ac:	add	x5, x5, #0x1
  42e9b0:	b	42ea78 <wcrtomb@plt+0x29f88>
  42e9b4:	mov	w0, #0xd                   	// #13
  42e9b8:	mov	w1, #0x1                   	// #1
  42e9bc:	bl	404170 <signal@plt>
  42e9c0:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42e9c4:	add	x24, x24, #0xf00
  42e9c8:	add	x23, x24, w20, sxtw #3
  42e9cc:	mov	x21, x0
  42e9d0:	ldr	w0, [x23, #36]!
  42e9d4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  42e9d8:	add	x1, x1, #0xc10
  42e9dc:	mov	w2, #0x1                   	// #1
  42e9e0:	sxtw	x25, w20
  42e9e4:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42e9e8:	mov	x22, x0
  42e9ec:	mov	w0, #0xd                   	// #13
  42e9f0:	mov	x1, x21
  42e9f4:	bl	404170 <signal@plt>
  42e9f8:	cmp	x22, #0x1
  42e9fc:	b.ne	42ea4c <wcrtomb@plt+0x29f5c>  // b.any
  42ea00:	sub	x1, x29, #0x40
  42ea04:	mov	w0, w20
  42ea08:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42ea0c:	cbz	x0, 42ea44 <wcrtomb@plt+0x29f54>
  42ea10:	mov	w2, #0xa                   	// #10
  42ea14:	mov	x1, xzr
  42ea18:	bl	404670 <strtol@plt>
  42ea1c:	tbnz	x0, #63, 42eb70 <wcrtomb@plt+0x2a080>
  42ea20:	mov	x21, x0
  42ea24:	cmp	x0, #0x8
  42ea28:	b.ls	42eb7c <wcrtomb@plt+0x2a08c>  // b.plast
  42ea2c:	bl	4049c0 <__errno_location@plt>
  42ea30:	mov	w8, #0x4b                  	// #75
  42ea34:	b	42ea40 <wcrtomb@plt+0x29f50>
  42ea38:	bl	4049c0 <__errno_location@plt>
  42ea3c:	mov	w8, #0x5f                  	// #95
  42ea40:	str	w8, [x0]
  42ea44:	mov	w20, #0xffffffff            	// #-1
  42ea48:	b	42eb50 <wcrtomb@plt+0x2a060>
  42ea4c:	lsl	x19, x25, #3
  42ea50:	ldr	w0, [x24, x19]
  42ea54:	bl	4044d0 <close@plt>
  42ea58:	ldr	w0, [x23]
  42ea5c:	bl	4044d0 <close@plt>
  42ea60:	mov	w20, #0xffffffff            	// #-1
  42ea64:	str	w20, [x24, x19]
  42ea68:	str	w20, [x23]
  42ea6c:	b	42eb44 <wcrtomb@plt+0x2a054>
  42ea70:	mov	w8, #0x2d                  	// #45
  42ea74:	strb	w8, [x5]
  42ea78:	ldrsh	w4, [x19]
  42ea7c:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ea80:	add	x3, x3, #0xfd7
  42ea84:	add	x0, sp, #0x20
  42ea88:	mov	w1, #0x1                   	// #1
  42ea8c:	mov	w2, #0x40                  	// #64
  42ea90:	bl	403f20 <__sprintf_chk@plt>
  42ea94:	add	x0, sp, #0x20
  42ea98:	bl	403f00 <strlen@plt>
  42ea9c:	mov	x19, x0
  42eaa0:	mov	w0, #0xd                   	// #13
  42eaa4:	mov	w1, #0x1                   	// #1
  42eaa8:	bl	404170 <signal@plt>
  42eaac:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42eab0:	add	x23, x23, #0xf00
  42eab4:	add	x24, x23, w20, sxtw #3
  42eab8:	ldr	w8, [x24, #36]!
  42eabc:	mov	x21, x0
  42eac0:	add	x1, sp, #0x20
  42eac4:	mov	x2, x19
  42eac8:	mov	w0, w8
  42eacc:	bl	43e5e8 <argp_parse@@Base+0x3f3c>
  42ead0:	mov	x22, x0
  42ead4:	mov	w0, #0xd                   	// #13
  42ead8:	mov	x1, x21
  42eadc:	bl	404170 <signal@plt>
  42eae0:	cmp	x22, x19
  42eae4:	b.ne	42eb20 <wcrtomb@plt+0x2a030>  // b.any
  42eae8:	sub	x1, x29, #0x40
  42eaec:	mov	w0, w20
  42eaf0:	bl	42ec34 <wcrtomb@plt+0x2a144>
  42eaf4:	cbz	x0, 42eb18 <wcrtomb@plt+0x2a028>
  42eaf8:	mov	w2, #0xa                   	// #10
  42eafc:	mov	x1, xzr
  42eb00:	bl	404670 <strtol@plt>
  42eb04:	mov	x20, x0
  42eb08:	tbz	x0, #63, 42eb50 <wcrtomb@plt+0x2a060>
  42eb0c:	bl	4049c0 <__errno_location@plt>
  42eb10:	mov	w8, #0x5                   	// #5
  42eb14:	str	w8, [x0]
  42eb18:	mov	x20, #0xffffffffffffffff    	// #-1
  42eb1c:	b	42eb50 <wcrtomb@plt+0x2a060>
  42eb20:	sxtw	x8, w20
  42eb24:	lsl	x19, x8, #3
  42eb28:	ldr	w0, [x23, x19]
  42eb2c:	bl	4044d0 <close@plt>
  42eb30:	ldr	w0, [x24]
  42eb34:	bl	4044d0 <close@plt>
  42eb38:	mov	w20, #0xffffffff            	// #-1
  42eb3c:	str	w20, [x23, x19]
  42eb40:	str	w20, [x24]
  42eb44:	bl	4049c0 <__errno_location@plt>
  42eb48:	mov	w8, #0x5                   	// #5
  42eb4c:	str	w8, [x0]
  42eb50:	mov	w0, w20
  42eb54:	ldp	x20, x19, [sp, #224]
  42eb58:	ldp	x22, x21, [sp, #208]
  42eb5c:	ldp	x24, x23, [sp, #192]
  42eb60:	ldr	x25, [sp, #176]
  42eb64:	ldp	x29, x30, [sp, #160]
  42eb68:	add	sp, sp, #0xf0
  42eb6c:	ret
  42eb70:	bl	4049c0 <__errno_location@plt>
  42eb74:	mov	w8, #0x5                   	// #5
  42eb78:	b	42ea40 <wcrtomb@plt+0x29f50>
  42eb7c:	cbz	x21, 42ec10 <wcrtomb@plt+0x2a120>
  42eb80:	add	x24, x24, x25, lsl #3
  42eb84:	ldr	w0, [x24]
  42eb88:	mov	x1, x19
  42eb8c:	mov	x2, x21
  42eb90:	mov	x22, x19
  42eb94:	bl	44932c <argp_parse@@Base+0xec80>
  42eb98:	add	x8, x0, #0x1
  42eb9c:	cmp	x8, #0x1
  42eba0:	b.ls	42ec18 <wcrtomb@plt+0x2a128>  // b.plast
  42eba4:	sub	x21, x21, x0
  42eba8:	cmp	x21, #0x0
  42ebac:	add	x19, x22, x0
  42ebb0:	b.gt	42eb84 <wcrtomb@plt+0x2a094>
  42ebb4:	ldr	x8, [x19]
  42ebb8:	mov	w20, wzr
  42ebbc:	cmp	x8, #0x100
  42ebc0:	b.lt	42eb50 <wcrtomb@plt+0x2a060>  // b.tstop
  42ebc4:	cbz	x21, 42eb50 <wcrtomb@plt+0x2a060>
  42ebc8:	ldrb	w9, [x19, #1]
  42ebcc:	cmp	x21, #0x3
  42ebd0:	strb	w8, [x19, #1]
  42ebd4:	strb	w9, [x19]
  42ebd8:	b.cc	42ec10 <wcrtomb@plt+0x2a120>  // b.lo, b.ul, b.last
  42ebdc:	mov	x9, xzr
  42ebe0:	add	x8, x22, x0
  42ebe4:	add	x10, x8, x9
  42ebe8:	ldrb	w12, [x10, #3]
  42ebec:	ldrb	w13, [x10, #2]
  42ebf0:	add	x11, x9, #0x4
  42ebf4:	mov	w20, wzr
  42ebf8:	add	x9, x9, #0x2
  42ebfc:	cmp	x11, x21
  42ec00:	strb	w12, [x10, #2]
  42ec04:	strb	w13, [x10, #3]
  42ec08:	b.cc	42ebe4 <wcrtomb@plt+0x2a0f4>  // b.lo, b.ul, b.last
  42ec0c:	b	42eb50 <wcrtomb@plt+0x2a060>
  42ec10:	mov	w20, wzr
  42ec14:	b	42eb50 <wcrtomb@plt+0x2a060>
  42ec18:	ldr	w0, [x24]
  42ec1c:	bl	4044d0 <close@plt>
  42ec20:	ldr	w0, [x23]
  42ec24:	bl	4044d0 <close@plt>
  42ec28:	mov	w20, #0xffffffff            	// #-1
  42ec2c:	str	w20, [x24]
  42ec30:	b	42ea68 <wcrtomb@plt+0x29f78>
  42ec34:	sub	sp, sp, #0x50
  42ec38:	stp	x24, x23, [sp, #32]
  42ec3c:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42ec40:	add	x24, x24, #0xf00
  42ec44:	stp	x22, x21, [sp, #48]
  42ec48:	stp	x20, x19, [sp, #64]
  42ec4c:	mov	x19, x1
  42ec50:	mov	x21, xzr
  42ec54:	sxtw	x23, w0
  42ec58:	add	x22, x24, w0, sxtw #3
  42ec5c:	stp	x29, x30, [sp, #16]
  42ec60:	add	x29, sp, #0x10
  42ec64:	ldr	w0, [x22]
  42ec68:	add	x20, x19, x21
  42ec6c:	mov	w2, #0x1                   	// #1
  42ec70:	mov	x1, x20
  42ec74:	bl	44932c <argp_parse@@Base+0xec80>
  42ec78:	cmp	x0, #0x1
  42ec7c:	b.ne	42eca8 <wcrtomb@plt+0x2a1b8>  // b.any
  42ec80:	ldrb	w8, [x20]
  42ec84:	cmp	w8, #0xa
  42ec88:	b.eq	42ec9c <wcrtomb@plt+0x2a1ac>  // b.none
  42ec8c:	add	x21, x21, #0x1
  42ec90:	cmp	w21, #0x40
  42ec94:	b.ne	42ec64 <wcrtomb@plt+0x2a174>  // b.any
  42ec98:	b	42eca8 <wcrtomb@plt+0x2a1b8>
  42ec9c:	cmp	w21, #0x40
  42eca0:	strb	wzr, [x19, x21]
  42eca4:	b.ne	42ecf4 <wcrtomb@plt+0x2a204>  // b.any
  42eca8:	ldr	w0, [x22]
  42ecac:	bl	4044d0 <close@plt>
  42ecb0:	add	x19, x24, x23, lsl #3
  42ecb4:	ldr	w0, [x19, #36]
  42ecb8:	bl	4044d0 <close@plt>
  42ecbc:	mov	w8, #0xffffffff            	// #-1
  42ecc0:	str	w8, [x22]
  42ecc4:	str	w8, [x19, #36]
  42ecc8:	bl	4049c0 <__errno_location@plt>
  42eccc:	mov	w8, #0x5                   	// #5
  42ecd0:	mov	x19, xzr
  42ecd4:	str	w8, [x0]
  42ecd8:	mov	x0, x19
  42ecdc:	ldp	x20, x19, [sp, #64]
  42ece0:	ldp	x22, x21, [sp, #48]
  42ece4:	ldp	x24, x23, [sp, #32]
  42ece8:	ldp	x29, x30, [sp, #16]
  42ecec:	add	sp, sp, #0x50
  42ecf0:	ret
  42ecf4:	add	x19, x19, #0x1
  42ecf8:	ldurb	w8, [x19, #-1]
  42ecfc:	cmp	w8, #0x20
  42ed00:	b.eq	42ecf4 <wcrtomb@plt+0x2a204>  // b.none
  42ed04:	sub	w9, w8, #0x45
  42ed08:	cmp	w9, #0x2
  42ed0c:	b.cs	42ed90 <wcrtomb@plt+0x2a2a0>  // b.hs, b.nlast
  42ed10:	ldr	w0, [x22]
  42ed14:	sub	x1, x29, #0x4
  42ed18:	mov	w2, #0x1                   	// #1
  42ed1c:	bl	44932c <argp_parse@@Base+0xec80>
  42ed20:	cmp	x0, #0x1
  42ed24:	b.ne	42ed34 <wcrtomb@plt+0x2a244>  // b.any
  42ed28:	ldurb	w8, [x29, #-4]
  42ed2c:	cmp	w8, #0xa
  42ed30:	b.ne	42ed10 <wcrtomb@plt+0x2a220>  // b.any
  42ed34:	mov	w2, #0xa                   	// #10
  42ed38:	mov	x0, x19
  42ed3c:	mov	x1, xzr
  42ed40:	bl	404670 <strtol@plt>
  42ed44:	mov	x20, x0
  42ed48:	bl	4049c0 <__errno_location@plt>
  42ed4c:	str	w20, [x0]
  42ed50:	ldurb	w8, [x19, #-1]
  42ed54:	mov	x19, xzr
  42ed58:	cmp	w8, #0x46
  42ed5c:	b.ne	42ecd8 <wcrtomb@plt+0x2a1e8>  // b.any
  42ed60:	mov	x21, x0
  42ed64:	ldr	w0, [x22]
  42ed68:	bl	4044d0 <close@plt>
  42ed6c:	add	x23, x24, x23, lsl #3
  42ed70:	ldr	w0, [x23, #36]
  42ed74:	bl	4044d0 <close@plt>
  42ed78:	mov	x19, xzr
  42ed7c:	mov	w8, #0xffffffff            	// #-1
  42ed80:	str	w8, [x22]
  42ed84:	str	w8, [x23, #36]
  42ed88:	str	w20, [x21]
  42ed8c:	b	42ecd8 <wcrtomb@plt+0x2a1e8>
  42ed90:	cmp	w8, #0x41
  42ed94:	b.ne	42eca8 <wcrtomb@plt+0x2a1b8>  // b.any
  42ed98:	b	42ecd8 <wcrtomb@plt+0x2a1e8>
  42ed9c:	stp	x29, x30, [sp, #-32]!
  42eda0:	mov	w1, #0x1                   	// #1
  42eda4:	mov	w0, wzr
  42eda8:	str	x19, [sp, #16]
  42edac:	mov	x29, sp
  42edb0:	mov	w19, #0x1                   	// #1
  42edb4:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  42edb8:	tbz	w0, #31, 42ee08 <wcrtomb@plt+0x2a318>
  42edbc:	bl	4049c0 <__errno_location@plt>
  42edc0:	ldr	w8, [x0]
  42edc4:	cmp	w8, #0x9
  42edc8:	b.ne	42ee04 <wcrtomb@plt+0x2a314>  // b.any
  42edcc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42edd0:	add	x0, x0, #0x40
  42edd4:	mov	w1, #0x1                   	// #1
  42edd8:	mov	w19, #0x1                   	// #1
  42eddc:	bl	404240 <open@plt>
  42ede0:	cbz	w0, 42ee08 <wcrtomb@plt+0x2a318>
  42ede4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42ede8:	add	x0, x0, #0x4a
  42edec:	mov	w1, #0x1                   	// #1
  42edf0:	mov	w19, #0x1                   	// #1
  42edf4:	bl	404240 <open@plt>
  42edf8:	cbz	w0, 42ee08 <wcrtomb@plt+0x2a318>
  42edfc:	tbnz	w0, #31, 42ee04 <wcrtomb@plt+0x2a314>
  42ee00:	bl	4044d0 <close@plt>
  42ee04:	mov	w19, wzr
  42ee08:	mov	w0, #0x1                   	// #1
  42ee0c:	mov	w1, #0x1                   	// #1
  42ee10:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  42ee14:	tbz	w0, #31, 42ee4c <wcrtomb@plt+0x2a35c>
  42ee18:	bl	4049c0 <__errno_location@plt>
  42ee1c:	ldr	w8, [x0]
  42ee20:	cmp	w8, #0x9
  42ee24:	b.ne	42ee48 <wcrtomb@plt+0x2a358>  // b.any
  42ee28:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42ee2c:	add	x0, x0, #0x4a
  42ee30:	mov	w1, wzr
  42ee34:	bl	404240 <open@plt>
  42ee38:	cmp	w0, #0x1
  42ee3c:	b.eq	42ee4c <wcrtomb@plt+0x2a35c>  // b.none
  42ee40:	tbnz	w0, #31, 42ee48 <wcrtomb@plt+0x2a358>
  42ee44:	bl	4044d0 <close@plt>
  42ee48:	mov	w19, wzr
  42ee4c:	mov	w0, #0x2                   	// #2
  42ee50:	mov	w1, #0x1                   	// #1
  42ee54:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  42ee58:	tbnz	w0, #31, 42ee6c <wcrtomb@plt+0x2a37c>
  42ee5c:	mov	w0, w19
  42ee60:	ldr	x19, [sp, #16]
  42ee64:	ldp	x29, x30, [sp], #32
  42ee68:	ret
  42ee6c:	bl	4049c0 <__errno_location@plt>
  42ee70:	ldr	w8, [x0]
  42ee74:	cmp	w8, #0x9
  42ee78:	b.ne	42ee9c <wcrtomb@plt+0x2a3ac>  // b.any
  42ee7c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42ee80:	add	x0, x0, #0x4a
  42ee84:	mov	w1, wzr
  42ee88:	bl	404240 <open@plt>
  42ee8c:	cmp	w0, #0x2
  42ee90:	b.eq	42ee5c <wcrtomb@plt+0x2a36c>  // b.none
  42ee94:	tbnz	w0, #31, 42ee9c <wcrtomb@plt+0x2a3ac>
  42ee98:	bl	4044d0 <close@plt>
  42ee9c:	mov	w19, wzr
  42eea0:	mov	w0, w19
  42eea4:	ldr	x19, [sp, #16]
  42eea8:	ldp	x29, x30, [sp], #32
  42eeac:	ret
  42eeb0:	stp	x29, x30, [sp, #-80]!
  42eeb4:	stp	x24, x23, [sp, #32]
  42eeb8:	stp	x22, x21, [sp, #48]
  42eebc:	stp	x20, x19, [sp, #64]
  42eec0:	ldr	x8, [x0]
  42eec4:	ldrb	w10, [x0, #32]
  42eec8:	mov	w21, w1
  42eecc:	sxtw	x23, w21
  42eed0:	mov	x20, x2
  42eed4:	mov	x19, x0
  42eed8:	add	x9, x23, x8
  42eedc:	str	x25, [sp, #16]
  42eee0:	mov	x29, sp
  42eee4:	tbnz	w10, #1, 42ef5c <wcrtomb@plt+0x2a46c>
  42eee8:	mov	x10, xzr
  42eeec:	ldr	x0, [x19, #8]
  42eef0:	add	x9, x9, #0x1
  42eef4:	cbz	x0, 42ef68 <wcrtomb@plt+0x2a478>
  42eef8:	ldr	x11, [x19, #24]
  42eefc:	add	x8, x10, x8
  42ef00:	add	x10, x8, x9
  42ef04:	cmp	x11, x10
  42ef08:	b.cs	42ef90 <wcrtomb@plt+0x2a4a0>  // b.hs, b.nlast
  42ef0c:	cmp	x9, #0x80
  42ef10:	mov	w10, #0x80                  	// #128
  42ef14:	csel	x9, x9, x10, hi  // hi = pmore
  42ef18:	add	x22, x8, x9
  42ef1c:	lsl	x1, x22, #3
  42ef20:	bl	404450 <realloc@plt>
  42ef24:	cbnz	x0, 42ef88 <wcrtomb@plt+0x2a498>
  42ef28:	bl	4049c0 <__errno_location@plt>
  42ef2c:	mov	w8, #0xc                   	// #12
  42ef30:	str	w8, [x0]
  42ef34:	ldr	w8, [x19, #32]
  42ef38:	mov	w9, #0x2                   	// #2
  42ef3c:	str	w9, [x19, #192]
  42ef40:	tbnz	w8, #7, 42f0c4 <wcrtomb@plt+0x2a5d4>
  42ef44:	tbnz	w8, #4, 42f0d8 <wcrtomb@plt+0x2a5e8>
  42ef48:	tbz	w8, #3, 42f200 <wcrtomb@plt+0x2a710>
  42ef4c:	mov	x24, x19
  42ef50:	ldr	x22, [x24, #208]!
  42ef54:	cbnz	x22, 42f248 <wcrtomb@plt+0x2a758>
  42ef58:	b	42f214 <wcrtomb@plt+0x2a724>
  42ef5c:	ldp	x0, x10, [x19, #8]
  42ef60:	add	x9, x9, #0x1
  42ef64:	cbnz	x0, 42eef8 <wcrtomb@plt+0x2a408>
  42ef68:	add	x8, x10, x9
  42ef6c:	cmp	x8, #0x80
  42ef70:	mov	w8, #0x80                  	// #128
  42ef74:	csel	x22, x9, x8, hi  // hi = pmore
  42ef78:	mov	w1, #0x8                   	// #8
  42ef7c:	mov	x0, x22
  42ef80:	bl	4043d0 <calloc@plt>
  42ef84:	cbz	x0, 42ef28 <wcrtomb@plt+0x2a438>
  42ef88:	str	x22, [x19, #24]
  42ef8c:	str	x0, [x19, #8]
  42ef90:	cbz	w21, 42efc8 <wcrtomb@plt+0x2a4d8>
  42ef94:	mov	x21, xzr
  42ef98:	ldr	x0, [x20, x21, lsl #3]
  42ef9c:	bl	4044a0 <strdup@plt>
  42efa0:	cbz	x0, 42eff0 <wcrtomb@plt+0x2a500>
  42efa4:	ldp	x10, x9, [x19, #8]
  42efa8:	ldr	x8, [x19]
  42efac:	add	x11, x9, x8
  42efb0:	add	x11, x21, x11
  42efb4:	add	x21, x21, #0x1
  42efb8:	cmp	x21, x23
  42efbc:	str	x0, [x10, x11, lsl #3]
  42efc0:	b.cc	42ef98 <wcrtomb@plt+0x2a4a8>  // b.lo, b.ul, b.last
  42efc4:	b	42efd4 <wcrtomb@plt+0x2a4e4>
  42efc8:	ldr	x8, [x19]
  42efcc:	ldr	x9, [x19, #16]
  42efd0:	mov	x21, xzr
  42efd4:	ldr	x10, [x19, #8]
  42efd8:	add	x8, x8, x21
  42efdc:	mov	w0, wzr
  42efe0:	str	x8, [x19]
  42efe4:	add	x8, x9, x8
  42efe8:	str	xzr, [x10, x8, lsl #3]
  42efec:	b	42f220 <wcrtomb@plt+0x2a730>
  42eff0:	cbz	x21, 42f034 <wcrtomb@plt+0x2a544>
  42eff4:	ldr	x8, [x19, #16]
  42eff8:	ldr	x9, [x19]
  42effc:	sub	x20, x21, #0x1
  42f000:	ldr	x10, [x19, #8]
  42f004:	add	x8, x8, x9
  42f008:	add	x8, x20, x8
  42f00c:	ldr	x0, [x10, x8, lsl #3]
  42f010:	bl	4046b0 <free@plt>
  42f014:	ldp	x10, x8, [x19, #8]
  42f018:	ldr	x9, [x19]
  42f01c:	add	x11, x8, x9
  42f020:	add	x11, x20, x11
  42f024:	sub	x20, x20, #0x1
  42f028:	cmn	x20, #0x1
  42f02c:	str	xzr, [x10, x11, lsl #3]
  42f030:	b.ne	42f000 <wcrtomb@plt+0x2a510>  // b.any
  42f034:	bl	4049c0 <__errno_location@plt>
  42f038:	mov	w8, #0xc                   	// #12
  42f03c:	str	w8, [x0]
  42f040:	ldr	w8, [x19, #32]
  42f044:	mov	w9, #0x2                   	// #2
  42f048:	str	w9, [x19, #192]
  42f04c:	tbnz	w8, #7, 42f068 <wcrtomb@plt+0x2a578>
  42f050:	tbnz	w8, #4, 42f07c <wcrtomb@plt+0x2a58c>
  42f054:	tbz	w8, #3, 42f19c <wcrtomb@plt+0x2a6ac>
  42f058:	mov	x21, x19
  42f05c:	ldr	x20, [x21, #208]!
  42f060:	cbnz	x20, 42f1cc <wcrtomb@plt+0x2a6dc>
  42f064:	b	42f1b0 <wcrtomb@plt+0x2a6c0>
  42f068:	ldr	x8, [x19, #88]
  42f06c:	mov	x0, x19
  42f070:	blr	x8
  42f074:	ldr	w8, [x19, #32]
  42f078:	tbz	w8, #4, 42f054 <wcrtomb@plt+0x2a564>
  42f07c:	ldr	w8, [x19, #192]
  42f080:	ldr	x20, [x19, #96]
  42f084:	cmp	w8, #0x9
  42f088:	b.eq	42f120 <wcrtomb@plt+0x2a630>  // b.none
  42f08c:	cmp	w8, #0x1
  42f090:	b.ne	42f128 <wcrtomb@plt+0x2a638>  // b.any
  42f094:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f098:	add	x1, x1, #0x221
  42f09c:	mov	w2, #0x5                   	// #5
  42f0a0:	mov	x0, xzr
  42f0a4:	bl	4048b0 <dcgettext@plt>
  42f0a8:	ldr	x8, [x19, #168]
  42f0ac:	ldr	x2, [x19, #184]
  42f0b0:	ldrb	w1, [x8, x2]
  42f0b4:	blr	x20
  42f0b8:	ldr	w8, [x19, #32]
  42f0bc:	tbnz	w8, #3, 42f058 <wcrtomb@plt+0x2a568>
  42f0c0:	b	42f19c <wcrtomb@plt+0x2a6ac>
  42f0c4:	ldr	x8, [x19, #88]
  42f0c8:	mov	x0, x19
  42f0cc:	blr	x8
  42f0d0:	ldr	w8, [x19, #32]
  42f0d4:	tbz	w8, #4, 42ef48 <wcrtomb@plt+0x2a458>
  42f0d8:	ldr	w8, [x19, #192]
  42f0dc:	ldr	x22, [x19, #96]
  42f0e0:	cmp	w8, #0x9
  42f0e4:	b.eq	42f150 <wcrtomb@plt+0x2a660>  // b.none
  42f0e8:	cmp	w8, #0x1
  42f0ec:	b.ne	42f158 <wcrtomb@plt+0x2a668>  // b.any
  42f0f0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f0f4:	add	x1, x1, #0x221
  42f0f8:	mov	w2, #0x5                   	// #5
  42f0fc:	mov	x0, xzr
  42f100:	bl	4048b0 <dcgettext@plt>
  42f104:	ldr	x8, [x19, #168]
  42f108:	ldr	x2, [x19, #184]
  42f10c:	ldrb	w1, [x8, x2]
  42f110:	blr	x22
  42f114:	ldr	w8, [x19, #32]
  42f118:	tbnz	w8, #3, 42ef4c <wcrtomb@plt+0x2a45c>
  42f11c:	b	42f200 <wcrtomb@plt+0x2a710>
  42f120:	add	x8, x19, #0xc8
  42f124:	b	42f148 <wcrtomb@plt+0x2a658>
  42f128:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f12c:	ldr	w9, [x9, #4000]
  42f130:	sxtw	x8, w8
  42f134:	cmp	w8, w9
  42f138:	b.ge	42f180 <wcrtomb@plt+0x2a690>  // b.tcont
  42f13c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f140:	add	x9, x9, #0xf58
  42f144:	add	x8, x9, x8, lsl #3
  42f148:	ldr	x1, [x8]
  42f14c:	b	42f188 <wcrtomb@plt+0x2a698>
  42f150:	add	x8, x19, #0xc8
  42f154:	b	42f178 <wcrtomb@plt+0x2a688>
  42f158:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f15c:	ldr	w9, [x9, #4000]
  42f160:	sxtw	x8, w8
  42f164:	cmp	w8, w9
  42f168:	b.ge	42f1e4 <wcrtomb@plt+0x2a6f4>  // b.tcont
  42f16c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f170:	add	x9, x9, #0xf58
  42f174:	add	x8, x9, x8, lsl #3
  42f178:	ldr	x1, [x8]
  42f17c:	b	42f1ec <wcrtomb@plt+0x2a6fc>
  42f180:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f184:	add	x1, x1, #0x213
  42f188:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f18c:	add	x0, x0, #0x274
  42f190:	blr	x20
  42f194:	ldr	w8, [x19, #32]
  42f198:	tbnz	w8, #3, 42f058 <wcrtomb@plt+0x2a568>
  42f19c:	mov	x0, x19
  42f1a0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  42f1a4:	mov	x21, x19
  42f1a8:	ldr	x20, [x21, #208]!
  42f1ac:	cbnz	x20, 42f1cc <wcrtomb@plt+0x2a6dc>
  42f1b0:	stp	xzr, xzr, [x21]
  42f1b4:	ldr	w0, [x19, #192]
  42f1b8:	b	42f220 <wcrtomb@plt+0x2a730>
  42f1bc:	mov	x0, x20
  42f1c0:	bl	4046b0 <free@plt>
  42f1c4:	mov	x20, x22
  42f1c8:	cbz	x22, 42f1b0 <wcrtomb@plt+0x2a6c0>
  42f1cc:	ldrb	w8, [x20, #16]
  42f1d0:	ldr	x22, [x20, #8]
  42f1d4:	tbz	w8, #1, 42f1bc <wcrtomb@plt+0x2a6cc>
  42f1d8:	ldr	x0, [x20, #24]
  42f1dc:	bl	4046b0 <free@plt>
  42f1e0:	b	42f1bc <wcrtomb@plt+0x2a6cc>
  42f1e4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f1e8:	add	x1, x1, #0x213
  42f1ec:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f1f0:	add	x0, x0, #0x274
  42f1f4:	blr	x22
  42f1f8:	ldr	w8, [x19, #32]
  42f1fc:	tbnz	w8, #3, 42ef4c <wcrtomb@plt+0x2a45c>
  42f200:	mov	x0, x19
  42f204:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  42f208:	mov	x24, x19
  42f20c:	ldr	x22, [x24, #208]!
  42f210:	cbnz	x22, 42f248 <wcrtomb@plt+0x2a758>
  42f214:	stp	xzr, xzr, [x24]
  42f218:	ldr	w0, [x19, #192]
  42f21c:	cbz	w0, 42ef90 <wcrtomb@plt+0x2a4a0>
  42f220:	ldp	x20, x19, [sp, #64]
  42f224:	ldp	x22, x21, [sp, #48]
  42f228:	ldp	x24, x23, [sp, #32]
  42f22c:	ldr	x25, [sp, #16]
  42f230:	ldp	x29, x30, [sp], #80
  42f234:	ret
  42f238:	mov	x0, x22
  42f23c:	bl	4046b0 <free@plt>
  42f240:	mov	x22, x25
  42f244:	cbz	x25, 42f214 <wcrtomb@plt+0x2a724>
  42f248:	ldrb	w8, [x22, #16]
  42f24c:	ldr	x25, [x22, #8]
  42f250:	tbz	w8, #1, 42f238 <wcrtomb@plt+0x2a748>
  42f254:	ldr	x0, [x22, #24]
  42f258:	bl	4046b0 <free@plt>
  42f25c:	b	42f238 <wcrtomb@plt+0x2a748>
  42f260:	str	wzr, [x2]
  42f264:	ldrb	w10, [x0]
  42f268:	cbz	w10, 42f310 <wcrtomb@plt+0x2a820>
  42f26c:	mov	x9, #0x1                   	// #1
  42f270:	mov	x8, x0
  42f274:	movk	x9, #0x5, lsl #32
  42f278:	mov	x0, xzr
  42f27c:	cbz	w1, 42f318 <wcrtomb@plt+0x2a828>
  42f280:	add	x8, x8, #0x1
  42f284:	mov	w11, #0x1                   	// #1
  42f288:	b	42f29c <wcrtomb@plt+0x2a7ac>
  42f28c:	mov	w12, #0x3                   	// #3
  42f290:	ldrb	w10, [x8], #1
  42f294:	add	x0, x0, x12
  42f298:	cbz	w10, 42f3d8 <wcrtomb@plt+0x2a8e8>
  42f29c:	and	w12, w10, #0xff
  42f2a0:	cmp	w12, #0x3f
  42f2a4:	b.hi	42f2bc <wcrtomb@plt+0x2a7cc>  // b.pmore
  42f2a8:	lsl	x12, x11, x10
  42f2ac:	and	x12, x12, x9
  42f2b0:	cbz	x12, 42f2bc <wcrtomb@plt+0x2a7cc>
  42f2b4:	str	w11, [x2]
  42f2b8:	ldurb	w10, [x8, #-1]
  42f2bc:	and	w12, w10, #0xff
  42f2c0:	cmp	w12, #0x21
  42f2c4:	b.gt	42f2dc <wcrtomb@plt+0x2a7ec>
  42f2c8:	cmp	w12, #0x9
  42f2cc:	b.eq	42f28c <wcrtomb@plt+0x2a79c>  // b.none
  42f2d0:	cmp	w12, #0x20
  42f2d4:	b.eq	42f308 <wcrtomb@plt+0x2a818>  // b.none
  42f2d8:	b	42f2f4 <wcrtomb@plt+0x2a804>
  42f2dc:	cmp	w12, #0x5c
  42f2e0:	b.eq	42f28c <wcrtomb@plt+0x2a79c>  // b.none
  42f2e4:	cmp	w12, #0x22
  42f2e8:	b.ne	42f2f4 <wcrtomb@plt+0x2a804>  // b.any
  42f2ec:	mov	w12, #0x2                   	// #2
  42f2f0:	b	42f290 <wcrtomb@plt+0x2a7a0>
  42f2f4:	and	w12, w10, #0xff
  42f2f8:	cmp	w12, #0x20
  42f2fc:	b.cc	42f28c <wcrtomb@plt+0x2a79c>  // b.lo, b.ul, b.last
  42f300:	sxtb	w10, w10
  42f304:	tbnz	w10, #31, 42f28c <wcrtomb@plt+0x2a79c>
  42f308:	mov	w12, #0x1                   	// #1
  42f30c:	b	42f290 <wcrtomb@plt+0x2a7a0>
  42f310:	mov	x0, xzr
  42f314:	ret
  42f318:	adrp	x13, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f31c:	mov	w11, #0x1                   	// #1
  42f320:	adrp	x12, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f324:	add	x13, x13, #0xf42
  42f328:	b	42f33c <wcrtomb@plt+0x2a84c>
  42f32c:	mov	w14, #0x4                   	// #4
  42f330:	ldrb	w10, [x8, #1]!
  42f334:	add	x0, x0, x14
  42f338:	cbz	w10, 42f3d8 <wcrtomb@plt+0x2a8e8>
  42f33c:	and	w14, w10, #0xff
  42f340:	cmp	w14, #0x3f
  42f344:	b.hi	42f35c <wcrtomb@plt+0x2a86c>  // b.pmore
  42f348:	lsl	x14, x11, x10
  42f34c:	and	x14, x14, x9
  42f350:	cbz	x14, 42f35c <wcrtomb@plt+0x2a86c>
  42f354:	str	w11, [x2]
  42f358:	ldrb	w10, [x8]
  42f35c:	and	w14, w10, #0xff
  42f360:	cmp	w14, #0x21
  42f364:	b.gt	42f37c <wcrtomb@plt+0x2a88c>
  42f368:	cmp	w14, #0x9
  42f36c:	b.eq	42f38c <wcrtomb@plt+0x2a89c>  // b.none
  42f370:	cmp	w14, #0x20
  42f374:	b.eq	42f3d0 <wcrtomb@plt+0x2a8e0>  // b.none
  42f378:	b	42f3bc <wcrtomb@plt+0x2a8cc>
  42f37c:	cmp	w14, #0x22
  42f380:	b.eq	42f3b4 <wcrtomb@plt+0x2a8c4>  // b.none
  42f384:	cmp	w14, #0x5c
  42f388:	b.ne	42f3bc <wcrtomb@plt+0x2a8cc>  // b.any
  42f38c:	ldrb	w14, [x12, #3904]
  42f390:	cbz	w14, 42f32c <wcrtomb@plt+0x2a83c>
  42f394:	mov	x14, x13
  42f398:	ldurb	w15, [x14, #-1]
  42f39c:	cbz	w15, 42f32c <wcrtomb@plt+0x2a83c>
  42f3a0:	cmp	w15, w10, uxtb
  42f3a4:	b.eq	42f3b4 <wcrtomb@plt+0x2a8c4>  // b.none
  42f3a8:	ldrb	w15, [x14], #2
  42f3ac:	cbnz	w15, 42f398 <wcrtomb@plt+0x2a8a8>
  42f3b0:	b	42f32c <wcrtomb@plt+0x2a83c>
  42f3b4:	mov	w14, #0x2                   	// #2
  42f3b8:	b	42f330 <wcrtomb@plt+0x2a840>
  42f3bc:	and	w14, w10, #0xff
  42f3c0:	cmp	w14, #0x20
  42f3c4:	b.cc	42f38c <wcrtomb@plt+0x2a89c>  // b.lo, b.ul, b.last
  42f3c8:	sxtb	w14, w10
  42f3cc:	tbnz	w14, #31, 42f38c <wcrtomb@plt+0x2a89c>
  42f3d0:	mov	w14, #0x1                   	// #1
  42f3d4:	b	42f330 <wcrtomb@plt+0x2a840>
  42f3d8:	ret
  42f3dc:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f3e0:	ldrb	w8, [x8, #3904]
  42f3e4:	cbz	w8, 42f408 <wcrtomb@plt+0x2a918>
  42f3e8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f3ec:	add	x9, x9, #0xf42
  42f3f0:	ldurb	w10, [x9, #-1]
  42f3f4:	cbz	w10, 42f408 <wcrtomb@plt+0x2a918>
  42f3f8:	cmp	w10, w0
  42f3fc:	b.eq	42f410 <wcrtomb@plt+0x2a920>  // b.none
  42f400:	ldrb	w8, [x9], #2
  42f404:	cbnz	w8, 42f3f0 <wcrtomb@plt+0x2a900>
  42f408:	mov	w0, wzr
  42f40c:	ret
  42f410:	and	w0, w8, #0xff
  42f414:	ret
  42f418:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f41c:	ldrb	w10, [x8, #3904]
  42f420:	cbz	w10, 42f444 <wcrtomb@plt+0x2a954>
  42f424:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f428:	add	x9, x9, #0xf42
  42f42c:	ldurb	w8, [x9, #-1]
  42f430:	cbz	w8, 42f44c <wcrtomb@plt+0x2a95c>
  42f434:	cmp	w0, w10, uxtb
  42f438:	b.eq	42f44c <wcrtomb@plt+0x2a95c>  // b.none
  42f43c:	ldrb	w10, [x9], #2
  42f440:	cbnz	w10, 42f42c <wcrtomb@plt+0x2a93c>
  42f444:	mov	w0, wzr
  42f448:	ret
  42f44c:	mov	w0, w8
  42f450:	ret
  42f454:	sub	sp, sp, #0x50
  42f458:	stp	x20, x19, [sp, #64]
  42f45c:	mov	x19, x1
  42f460:	mov	x20, x0
  42f464:	stp	x29, x30, [sp, #16]
  42f468:	stp	x24, x23, [sp, #32]
  42f46c:	stp	x22, x21, [sp, #48]
  42f470:	add	x29, sp, #0x10
  42f474:	cbz	w2, 42f514 <wcrtomb@plt+0x2aa24>
  42f478:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f47c:	add	x21, x21, #0x170
  42f480:	mov	w22, #0x5c                  	// #92
  42f484:	b	42f4c0 <wcrtomb@plt+0x2a9d0>
  42f488:	cmp	w5, #0x9
  42f48c:	b.ne	42f4f4 <wcrtomb@plt+0x2aa04>  // b.any
  42f490:	sub	x0, x29, #0x4
  42f494:	mov	w1, #0x4                   	// #4
  42f498:	mov	w2, #0x1                   	// #1
  42f49c:	mov	w3, #0x4                   	// #4
  42f4a0:	mov	x4, x21
  42f4a4:	bl	404190 <__snprintf_chk@plt>
  42f4a8:	ldurh	w8, [x29, #-4]
  42f4ac:	ldurb	w9, [x29, #-2]
  42f4b0:	add	x19, x19, #0x1
  42f4b4:	strh	w8, [x20]
  42f4b8:	strb	w9, [x20, #2]
  42f4bc:	add	x20, x20, #0x3
  42f4c0:	ldrb	w5, [x19]
  42f4c4:	cmp	w5, #0x21
  42f4c8:	b.le	42f488 <wcrtomb@plt+0x2a998>
  42f4cc:	cmp	w5, #0x5c
  42f4d0:	b.eq	42f490 <wcrtomb@plt+0x2a9a0>  // b.none
  42f4d4:	cmp	w5, #0x22
  42f4d8:	b.ne	42f4f8 <wcrtomb@plt+0x2aa08>  // b.any
  42f4dc:	strb	w22, [x20]
  42f4e0:	ldrb	w8, [x19], #1
  42f4e4:	add	x9, x20, #0x2
  42f4e8:	strb	w8, [x20, #1]
  42f4ec:	mov	x20, x9
  42f4f0:	b	42f4c0 <wcrtomb@plt+0x2a9d0>
  42f4f4:	cbz	w5, 42f600 <wcrtomb@plt+0x2ab10>
  42f4f8:	cmp	w5, #0x20
  42f4fc:	b.cc	42f490 <wcrtomb@plt+0x2a9a0>  // b.lo, b.ul, b.last
  42f500:	sxtb	w8, w5
  42f504:	tbnz	w8, #31, 42f490 <wcrtomb@plt+0x2a9a0>
  42f508:	strb	w5, [x20], #1
  42f50c:	add	x19, x19, #0x1
  42f510:	b	42f4c0 <wcrtomb@plt+0x2a9d0>
  42f514:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f518:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f51c:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f520:	mov	w23, #0x5c                  	// #92
  42f524:	add	x21, x21, #0x177
  42f528:	add	x24, x24, #0xf42
  42f52c:	b	42f564 <wcrtomb@plt+0x2aa74>
  42f530:	strb	w23, [x20]
  42f534:	ldrb	w5, [x19], #1
  42f538:	sub	x0, x29, #0x4
  42f53c:	mov	w1, #0x4                   	// #4
  42f540:	mov	w2, #0x1                   	// #1
  42f544:	mov	w3, #0x4                   	// #4
  42f548:	mov	x4, x21
  42f54c:	bl	404190 <__snprintf_chk@plt>
  42f550:	ldurh	w8, [x29, #-4]
  42f554:	ldurb	w9, [x29, #-2]
  42f558:	sturh	w8, [x20, #1]
  42f55c:	strb	w9, [x20, #3]
  42f560:	add	x20, x20, #0x4
  42f564:	ldrb	w8, [x19]
  42f568:	cmp	w8, #0x21
  42f56c:	b.le	42f598 <wcrtomb@plt+0x2aaa8>
  42f570:	cmp	w8, #0x5c
  42f574:	b.eq	42f5a0 <wcrtomb@plt+0x2aab0>  // b.none
  42f578:	cmp	w8, #0x22
  42f57c:	b.ne	42f5cc <wcrtomb@plt+0x2aadc>  // b.any
  42f580:	strb	w23, [x20]
  42f584:	ldrb	w8, [x19], #1
  42f588:	add	x9, x20, #0x2
  42f58c:	strb	w8, [x20, #1]
  42f590:	mov	x20, x9
  42f594:	b	42f564 <wcrtomb@plt+0x2aa74>
  42f598:	cmp	w8, #0x9
  42f59c:	b.ne	42f5c8 <wcrtomb@plt+0x2aad8>  // b.any
  42f5a0:	ldrb	w9, [x22, #3904]
  42f5a4:	cbz	w9, 42f530 <wcrtomb@plt+0x2aa40>
  42f5a8:	mov	x10, x24
  42f5ac:	ldurb	w11, [x10, #-1]
  42f5b0:	cbz	w11, 42f530 <wcrtomb@plt+0x2aa40>
  42f5b4:	cmp	w11, w8
  42f5b8:	b.eq	42f5e8 <wcrtomb@plt+0x2aaf8>  // b.none
  42f5bc:	ldrb	w9, [x10], #2
  42f5c0:	cbnz	w9, 42f5ac <wcrtomb@plt+0x2aabc>
  42f5c4:	b	42f530 <wcrtomb@plt+0x2aa40>
  42f5c8:	cbz	w8, 42f600 <wcrtomb@plt+0x2ab10>
  42f5cc:	cmp	w8, #0x20
  42f5d0:	b.cc	42f5a0 <wcrtomb@plt+0x2aab0>  // b.lo, b.ul, b.last
  42f5d4:	sxtb	w9, w8
  42f5d8:	tbnz	w9, #31, 42f5a0 <wcrtomb@plt+0x2aab0>
  42f5dc:	strb	w8, [x20], #1
  42f5e0:	add	x19, x19, #0x1
  42f5e4:	b	42f564 <wcrtomb@plt+0x2aa74>
  42f5e8:	add	x8, x20, #0x2
  42f5ec:	strb	w23, [x20]
  42f5f0:	strb	w9, [x20, #1]
  42f5f4:	mov	x20, x8
  42f5f8:	add	x19, x19, #0x1
  42f5fc:	b	42f564 <wcrtomb@plt+0x2aa74>
  42f600:	ldp	x20, x19, [sp, #64]
  42f604:	ldp	x22, x21, [sp, #48]
  42f608:	ldp	x24, x23, [sp, #32]
  42f60c:	ldp	x29, x30, [sp, #16]
  42f610:	add	sp, sp, #0x50
  42f614:	ret
  42f618:	stp	x29, x30, [sp, #-48]!
  42f61c:	stp	x20, x19, [sp, #32]
  42f620:	mov	x19, x2
  42f624:	stp	x22, x21, [sp, #16]
  42f628:	mov	x29, sp
  42f62c:	cbz	x0, 42f654 <wcrtomb@plt+0x2ab64>
  42f630:	mov	x2, x1
  42f634:	mov	x1, x0
  42f638:	mov	x0, x19
  42f63c:	bl	430158 <wcrtomb@plt+0x2b668>
  42f640:	cbz	w0, 42f6ac <wcrtomb@plt+0x2abbc>
  42f644:	ldp	x20, x19, [sp, #32]
  42f648:	ldp	x22, x21, [sp, #16]
  42f64c:	ldp	x29, x30, [sp], #48
  42f650:	ret
  42f654:	tbnz	w3, #29, 42f6cc <wcrtomb@plt+0x2abdc>
  42f658:	ldrb	w8, [x19, #32]
  42f65c:	mov	w0, #0x3                   	// #3
  42f660:	str	w0, [x19, #192]
  42f664:	tbz	w8, #4, 42f644 <wcrtomb@plt+0x2ab54>
  42f668:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f66c:	ldr	w8, [x8, #4000]
  42f670:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f674:	ldr	x9, [x9, #3952]
  42f678:	ldr	x10, [x19, #96]
  42f67c:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f680:	add	x11, x11, #0x213
  42f684:	cmp	w8, #0x3
  42f688:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f68c:	csel	x1, x9, x11, gt
  42f690:	add	x0, x0, #0x274
  42f694:	blr	x10
  42f698:	mov	w0, #0x3                   	// #3
  42f69c:	ldp	x20, x19, [sp, #32]
  42f6a0:	ldp	x22, x21, [sp, #16]
  42f6a4:	ldp	x29, x30, [sp], #48
  42f6a8:	ret
  42f6ac:	mov	x20, xzr
  42f6b0:	add	x22, x19, #0xe0
  42f6b4:	mov	x0, x19
  42f6b8:	mov	x1, x20
  42f6bc:	str	wzr, [x22]
  42f6c0:	bl	430438 <wcrtomb@plt+0x2b948>
  42f6c4:	cbnz	w0, 42f644 <wcrtomb@plt+0x2ab54>
  42f6c8:	b	42f6d4 <wcrtomb@plt+0x2abe4>
  42f6cc:	ldr	x8, [x19, #208]
  42f6d0:	cbz	x8, 42f6e8 <wcrtomb@plt+0x2abf8>
  42f6d4:	mov	x0, x19
  42f6d8:	ldp	x20, x19, [sp, #32]
  42f6dc:	ldp	x22, x21, [sp, #16]
  42f6e0:	ldp	x29, x30, [sp], #48
  42f6e4:	b	42fbb0 <wcrtomb@plt+0x2b0c0>
  42f6e8:	ldp	x9, x20, [x19, #176]
  42f6ec:	ldr	w8, [x19, #32]
  42f6f0:	cmp	x20, x9
  42f6f4:	b.ne	42f748 <wcrtomb@plt+0x2ac58>  // b.any
  42f6f8:	mov	w0, #0x6                   	// #6
  42f6fc:	str	w0, [x19, #192]
  42f700:	tbz	w8, #4, 42f644 <wcrtomb@plt+0x2ab54>
  42f704:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f708:	ldr	w8, [x8, #4000]
  42f70c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42f710:	ldr	x9, [x9, #3976]
  42f714:	ldr	x10, [x19, #96]
  42f718:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f71c:	add	x11, x11, #0x213
  42f720:	cmp	w8, #0x6
  42f724:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42f728:	csel	x1, x9, x11, gt
  42f72c:	add	x0, x0, #0x274
  42f730:	blr	x10
  42f734:	mov	w0, #0x6                   	// #6
  42f738:	ldp	x20, x19, [sp, #32]
  42f73c:	ldp	x22, x21, [sp, #16]
  42f740:	ldp	x29, x30, [sp], #48
  42f744:	ret
  42f748:	mov	w9, #0xffffffff            	// #-1
  42f74c:	eor	w9, w9, w8, lsr #12
  42f750:	orr	w10, w8, #0x8
  42f754:	and	x21, x9, #0x1
  42f758:	str	w10, [x19, #32]
  42f75c:	tbnz	w8, #0, 42f7ac <wcrtomb@plt+0x2acbc>
  42f760:	ldr	x8, [x19]
  42f764:	cbz	x8, 42f7a8 <wcrtomb@plt+0x2acb8>
  42f768:	ldr	x9, [x19, #16]
  42f76c:	mov	x22, xzr
  42f770:	b	42f780 <wcrtomb@plt+0x2ac90>
  42f774:	add	x22, x22, #0x1
  42f778:	cmp	x22, x8
  42f77c:	b.cs	42f7a8 <wcrtomb@plt+0x2acb8>  // b.hs, b.nlast
  42f780:	ldr	x10, [x19, #8]
  42f784:	add	x11, x9, x22
  42f788:	ldr	x0, [x10, x11, lsl #3]
  42f78c:	cbz	x0, 42f774 <wcrtomb@plt+0x2ac84>
  42f790:	bl	4046b0 <free@plt>
  42f794:	ldp	x8, x9, [x19, #8]
  42f798:	add	x10, x22, x9
  42f79c:	str	xzr, [x8, x10, lsl #3]
  42f7a0:	ldr	x8, [x19]
  42f7a4:	b	42f774 <wcrtomb@plt+0x2ac84>
  42f7a8:	str	xzr, [x19]
  42f7ac:	mov	x22, x19
  42f7b0:	ldr	w8, [x22, #192]!
  42f7b4:	add	x20, x20, x21
  42f7b8:	cmp	w8, #0x9
  42f7bc:	b.ne	42f7c8 <wcrtomb@plt+0x2acd8>  // b.any
  42f7c0:	ldr	x0, [x19, #200]
  42f7c4:	bl	4046b0 <free@plt>
  42f7c8:	str	xzr, [x19, #200]
  42f7cc:	b	42f6b4 <wcrtomb@plt+0x2abc4>
  42f7d0:	stp	x29, x30, [sp, #-48]!
  42f7d4:	stp	x20, x19, [sp, #32]
  42f7d8:	mov	w20, w2
  42f7dc:	mov	x19, x1
  42f7e0:	str	x21, [sp, #16]
  42f7e4:	mov	x29, sp
  42f7e8:	cbz	x0, 42f830 <wcrtomb@plt+0x2ad40>
  42f7ec:	mov	x21, x0
  42f7f0:	bl	403f00 <strlen@plt>
  42f7f4:	mov	x2, x0
  42f7f8:	mov	x0, x19
  42f7fc:	mov	x1, x21
  42f800:	mov	w3, w20
  42f804:	bl	430158 <wcrtomb@plt+0x2b668>
  42f808:	cbnz	w0, 42f820 <wcrtomb@plt+0x2ad30>
  42f80c:	mov	x0, x19
  42f810:	mov	x1, xzr
  42f814:	str	wzr, [x19, #224]
  42f818:	bl	430438 <wcrtomb@plt+0x2b948>
  42f81c:	cbz	w0, 42f84c <wcrtomb@plt+0x2ad5c>
  42f820:	ldp	x20, x19, [sp, #32]
  42f824:	ldr	x21, [sp, #16]
  42f828:	ldp	x29, x30, [sp], #48
  42f82c:	ret
  42f830:	mov	x2, x19
  42f834:	mov	w3, w20
  42f838:	ldp	x20, x19, [sp, #32]
  42f83c:	ldr	x21, [sp, #16]
  42f840:	mov	x1, xzr
  42f844:	ldp	x29, x30, [sp], #48
  42f848:	b	42f618 <wcrtomb@plt+0x2ab28>
  42f84c:	mov	x0, x19
  42f850:	ldp	x20, x19, [sp, #32]
  42f854:	ldr	x21, [sp, #16]
  42f858:	ldp	x29, x30, [sp], #48
  42f85c:	b	42fbb0 <wcrtomb@plt+0x2b0c0>
  42f860:	stp	x29, x30, [sp, #-32]!
  42f864:	stp	x20, x19, [sp, #16]
  42f868:	ldr	x8, [x0]
  42f86c:	mov	x19, x0
  42f870:	mov	x29, sp
  42f874:	cbz	x8, 42f8b8 <wcrtomb@plt+0x2adc8>
  42f878:	ldr	x9, [x19, #16]
  42f87c:	mov	x20, xzr
  42f880:	b	42f890 <wcrtomb@plt+0x2ada0>
  42f884:	add	x20, x20, #0x1
  42f888:	cmp	x20, x8
  42f88c:	b.cs	42f8b8 <wcrtomb@plt+0x2adc8>  // b.hs, b.nlast
  42f890:	ldr	x10, [x19, #8]
  42f894:	add	x11, x9, x20
  42f898:	ldr	x0, [x10, x11, lsl #3]
  42f89c:	cbz	x0, 42f884 <wcrtomb@plt+0x2ad94>
  42f8a0:	bl	4046b0 <free@plt>
  42f8a4:	ldp	x8, x9, [x19, #8]
  42f8a8:	add	x10, x20, x9
  42f8ac:	str	xzr, [x8, x10, lsl #3]
  42f8b0:	ldr	x8, [x19]
  42f8b4:	b	42f884 <wcrtomb@plt+0x2ad94>
  42f8b8:	str	xzr, [x19]
  42f8bc:	ldp	x20, x19, [sp, #16]
  42f8c0:	ldp	x29, x30, [sp], #32
  42f8c4:	ret
  42f8c8:	stp	x29, x30, [sp, #-32]!
  42f8cc:	stp	x20, x19, [sp, #16]
  42f8d0:	ldrb	w8, [x0, #32]
  42f8d4:	mov	x29, sp
  42f8d8:	tbnz	w8, #2, 42f918 <wcrtomb@plt+0x2ae28>
  42f8dc:	mov	x19, x0
  42f8e0:	ldr	x0, [x19, #120]!
  42f8e4:	cbz	x0, 42f918 <wcrtomb@plt+0x2ae28>
  42f8e8:	ldr	x8, [x0]
  42f8ec:	cbz	x8, 42f90c <wcrtomb@plt+0x2ae1c>
  42f8f0:	mov	w20, #0x8                   	// #8
  42f8f4:	mov	x0, x8
  42f8f8:	bl	4046b0 <free@plt>
  42f8fc:	ldr	x0, [x19]
  42f900:	ldr	x8, [x0, x20]
  42f904:	add	x20, x20, #0x8
  42f908:	cbnz	x8, 42f8f4 <wcrtomb@plt+0x2ae04>
  42f90c:	bl	4046b0 <free@plt>
  42f910:	stp	xzr, xzr, [x19]
  42f914:	str	xzr, [x19, #16]
  42f918:	ldp	x20, x19, [sp, #16]
  42f91c:	ldp	x29, x30, [sp], #32
  42f920:	ret
  42f924:	stp	x29, x30, [sp, #-32]!
  42f928:	ldr	w8, [x0, #192]
  42f92c:	str	x19, [sp, #16]
  42f930:	mov	x19, x0
  42f934:	mov	x29, sp
  42f938:	cmp	w8, #0x9
  42f93c:	b.ne	42f948 <wcrtomb@plt+0x2ae58>  // b.any
  42f940:	ldr	x0, [x19, #200]
  42f944:	bl	4046b0 <free@plt>
  42f948:	str	xzr, [x19, #200]
  42f94c:	str	wzr, [x19, #192]
  42f950:	ldr	x19, [sp, #16]
  42f954:	ldp	x29, x30, [sp], #32
  42f958:	ret
  42f95c:	stp	x29, x30, [sp, #-48]!
  42f960:	stp	x22, x21, [sp, #16]
  42f964:	stp	x20, x19, [sp, #32]
  42f968:	mov	x21, x0
  42f96c:	ldr	x20, [x21, #208]!
  42f970:	mov	x19, x0
  42f974:	mov	x29, sp
  42f978:	cbnz	x20, 42f9a4 <wcrtomb@plt+0x2aeb4>
  42f97c:	stp	xzr, xzr, [x21]
  42f980:	ldr	x8, [x19]
  42f984:	cbz	x8, 42f9f0 <wcrtomb@plt+0x2af00>
  42f988:	ldr	x9, [x19, #16]
  42f98c:	mov	x20, xzr
  42f990:	b	42f9c8 <wcrtomb@plt+0x2aed8>
  42f994:	mov	x0, x20
  42f998:	bl	4046b0 <free@plt>
  42f99c:	mov	x20, x22
  42f9a0:	cbz	x22, 42f97c <wcrtomb@plt+0x2ae8c>
  42f9a4:	ldrb	w8, [x20, #16]
  42f9a8:	ldr	x22, [x20, #8]
  42f9ac:	tbz	w8, #1, 42f994 <wcrtomb@plt+0x2aea4>
  42f9b0:	ldr	x0, [x20, #24]
  42f9b4:	bl	4046b0 <free@plt>
  42f9b8:	b	42f994 <wcrtomb@plt+0x2aea4>
  42f9bc:	add	x20, x20, #0x1
  42f9c0:	cmp	x20, x8
  42f9c4:	b.cs	42f9f0 <wcrtomb@plt+0x2af00>  // b.hs, b.nlast
  42f9c8:	ldr	x10, [x19, #8]
  42f9cc:	add	x11, x9, x20
  42f9d0:	ldr	x0, [x10, x11, lsl #3]
  42f9d4:	cbz	x0, 42f9bc <wcrtomb@plt+0x2aecc>
  42f9d8:	bl	4046b0 <free@plt>
  42f9dc:	ldp	x8, x9, [x19, #8]
  42f9e0:	add	x10, x20, x9
  42f9e4:	str	xzr, [x8, x10, lsl #3]
  42f9e8:	ldr	x8, [x19]
  42f9ec:	b	42f9bc <wcrtomb@plt+0x2aecc>
  42f9f0:	ldr	x0, [x19, #8]
  42f9f4:	str	xzr, [x19]
  42f9f8:	bl	4046b0 <free@plt>
  42f9fc:	ldrb	w8, [x19, #32]
  42fa00:	str	xzr, [x19, #8]
  42fa04:	tbnz	w8, #2, 42fa40 <wcrtomb@plt+0x2af50>
  42fa08:	ldr	x0, [x19, #120]!
  42fa0c:	cbz	x0, 42fa40 <wcrtomb@plt+0x2af50>
  42fa10:	ldr	x8, [x0]
  42fa14:	cbz	x8, 42fa34 <wcrtomb@plt+0x2af44>
  42fa18:	mov	w20, #0x8                   	// #8
  42fa1c:	mov	x0, x8
  42fa20:	bl	4046b0 <free@plt>
  42fa24:	ldr	x0, [x19]
  42fa28:	ldr	x8, [x0, x20]
  42fa2c:	add	x20, x20, #0x8
  42fa30:	cbnz	x8, 42fa1c <wcrtomb@plt+0x2af2c>
  42fa34:	bl	4046b0 <free@plt>
  42fa38:	stp	xzr, xzr, [x19]
  42fa3c:	str	xzr, [x19, #16]
  42fa40:	ldp	x20, x19, [sp, #32]
  42fa44:	ldp	x22, x21, [sp, #16]
  42fa48:	ldp	x29, x30, [sp], #48
  42fa4c:	ret
  42fa50:	stp	x29, x30, [sp, #-48]!
  42fa54:	str	x21, [sp, #16]
  42fa58:	stp	x20, x19, [sp, #32]
  42fa5c:	mov	x19, x0
  42fa60:	ldp	x8, x0, [x0]
  42fa64:	mov	x20, x1
  42fa68:	mov	x29, sp
  42fa6c:	mov	x21, x2
  42fa70:	lsl	x8, x8, #3
  42fa74:	add	x1, x8, #0x8
  42fa78:	bl	404450 <realloc@plt>
  42fa7c:	cbz	x0, 42faac <wcrtomb@plt+0x2afbc>
  42fa80:	mov	x8, x0
  42fa84:	str	x8, [x21]
  42fa88:	ldr	x8, [x19]
  42fa8c:	mov	w0, wzr
  42fa90:	str	x8, [x20]
  42fa94:	str	xzr, [x19, #24]
  42fa98:	stp	xzr, xzr, [x19]
  42fa9c:	ldp	x20, x19, [sp, #32]
  42faa0:	ldr	x21, [sp, #16]
  42faa4:	ldp	x29, x30, [sp], #48
  42faa8:	ret
  42faac:	mov	w0, #0xffffffff            	// #-1
  42fab0:	ldp	x20, x19, [sp, #32]
  42fab4:	ldr	x21, [sp, #16]
  42fab8:	ldp	x29, x30, [sp], #48
  42fabc:	ret
  42fac0:	ldrsw	x8, [x0, #192]
  42fac4:	cmp	w8, #0x9
  42fac8:	b.ne	42fad8 <wcrtomb@plt+0x2afe8>  // b.any
  42facc:	add	x8, x0, #0xc8
  42fad0:	ldr	x0, [x8]
  42fad4:	ret
  42fad8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42fadc:	ldr	w9, [x9, #4000]
  42fae0:	cmp	w8, w9
  42fae4:	b.ge	42fafc <wcrtomb@plt+0x2b00c>  // b.tcont
  42fae8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42faec:	add	x9, x9, #0xf58
  42faf0:	add	x8, x9, x8, lsl #3
  42faf4:	ldr	x0, [x8]
  42faf8:	ret
  42fafc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fb00:	add	x0, x0, #0x213
  42fb04:	ret
  42fb08:	stp	x29, x30, [sp, #-32]!
  42fb0c:	ldr	w8, [x0, #192]
  42fb10:	ldr	x2, [x0, #96]
  42fb14:	str	x19, [sp, #16]
  42fb18:	mov	x19, x0
  42fb1c:	cmp	w8, #0x9
  42fb20:	mov	x29, sp
  42fb24:	b.eq	42fb64 <wcrtomb@plt+0x2b074>  // b.none
  42fb28:	cmp	w8, #0x1
  42fb2c:	b.ne	42fb6c <wcrtomb@plt+0x2b07c>  // b.any
  42fb30:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fb34:	add	x1, x1, #0x221
  42fb38:	str	x2, [x29, #24]
  42fb3c:	mov	w2, #0x5                   	// #5
  42fb40:	mov	x0, xzr
  42fb44:	bl	4048b0 <dcgettext@plt>
  42fb48:	ldr	x8, [x19, #168]
  42fb4c:	ldr	x2, [x19, #184]
  42fb50:	ldr	x3, [x29, #24]
  42fb54:	ldr	x19, [sp, #16]
  42fb58:	ldrb	w1, [x8, x2]
  42fb5c:	ldp	x29, x30, [sp], #32
  42fb60:	br	x3
  42fb64:	add	x8, x19, #0xc8
  42fb68:	b	42fb8c <wcrtomb@plt+0x2b09c>
  42fb6c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42fb70:	ldr	w9, [x9, #4000]
  42fb74:	sxtw	x8, w8
  42fb78:	cmp	w8, w9
  42fb7c:	b.ge	42fb94 <wcrtomb@plt+0x2b0a4>  // b.tcont
  42fb80:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42fb84:	add	x9, x9, #0xf58
  42fb88:	add	x8, x9, x8, lsl #3
  42fb8c:	ldr	x1, [x8]
  42fb90:	b	42fb9c <wcrtomb@plt+0x2b0ac>
  42fb94:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fb98:	add	x1, x1, #0x213
  42fb9c:	ldr	x19, [sp, #16]
  42fba0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fba4:	add	x0, x0, #0x274
  42fba8:	ldp	x29, x30, [sp], #32
  42fbac:	br	x2
  42fbb0:	stp	x29, x30, [sp, #-80]!
  42fbb4:	stp	x22, x21, [sp, #48]
  42fbb8:	stp	x20, x19, [sp, #64]
  42fbbc:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fbc0:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42fbc4:	stp	x24, x23, [sp, #32]
  42fbc8:	mov	x19, x0
  42fbcc:	add	x23, x0, #0xd0
  42fbd0:	add	x24, x0, #0xd8
  42fbd4:	mov	w21, #0xffffffff            	// #-1
  42fbd8:	add	x20, x20, #0x246
  42fbdc:	add	x22, x22, #0xb36
  42fbe0:	str	x25, [sp, #16]
  42fbe4:	mov	x29, sp
  42fbe8:	b	42fc0c <wcrtomb@plt+0x2b11c>
  42fbec:	ldr	w8, [x19, #36]
  42fbf0:	eor	w8, w21, w8, lsr #7
  42fbf4:	and	x8, x8, #0x1
  42fbf8:	ldr	x9, [x19, #184]
  42fbfc:	mov	x0, x19
  42fc00:	add	x1, x9, x8
  42fc04:	bl	430438 <wcrtomb@plt+0x2b948>
  42fc08:	cbnz	w0, 430118 <wcrtomb@plt+0x2b628>
  42fc0c:	ldr	x8, [x23]
  42fc10:	cbz	x8, 42fd50 <wcrtomb@plt+0x2b260>
  42fc14:	mov	x25, xzr
  42fc18:	mov	w9, wzr
  42fc1c:	b	42fc34 <wcrtomb@plt+0x2b144>
  42fc20:	mov	w9, wzr
  42fc24:	ldrb	w10, [x19, #35]
  42fc28:	add	x25, x25, #0x1
  42fc2c:	tbnz	w10, #5, 42fd4c <wcrtomb@plt+0x2b25c>
  42fc30:	cbz	x8, 42fd4c <wcrtomb@plt+0x2b25c>
  42fc34:	mov	x1, x8
  42fc38:	ldr	w10, [x8, #16]
  42fc3c:	ldr	x8, [x8, #8]
  42fc40:	tbnz	w10, #6, 42fc6c <wcrtomb@plt+0x2b17c>
  42fc44:	ldrb	w11, [x19, #36]
  42fc48:	cmp	w9, #0x0
  42fc4c:	cinc	x25, x25, ne  // ne = any
  42fc50:	tbz	w11, #7, 42fc20 <wcrtomb@plt+0x2b130>
  42fc54:	ldp	x12, x11, [x19, #40]
  42fc58:	add	x9, x25, #0x1
  42fc5c:	add	x11, x9, x11
  42fc60:	cmp	x11, x12
  42fc64:	b.ne	42fc20 <wcrtomb@plt+0x2b130>  // b.any
  42fc68:	b	42fd0c <wcrtomb@plt+0x2b21c>
  42fc6c:	ldr	w11, [x19, #32]
  42fc70:	tbnz	w11, #12, 42fc80 <wcrtomb@plt+0x2b190>
  42fc74:	ldrb	w10, [x19, #36]
  42fc78:	tbz	w10, #7, 42fc24 <wcrtomb@plt+0x2b134>
  42fc7c:	b	42fcac <wcrtomb@plt+0x2b1bc>
  42fc80:	tbz	w11, #11, 42fc24 <wcrtomb@plt+0x2b134>
  42fc84:	mov	x11, x22
  42fc88:	tbnz	w10, #0, 42fc9c <wcrtomb@plt+0x2b1ac>
  42fc8c:	tbnz	w10, #1, 42fcf8 <wcrtomb@plt+0x2b208>
  42fc90:	ldr	x10, [x19, #168]
  42fc94:	ldr	x11, [x1, #24]
  42fc98:	add	x11, x10, x11
  42fc9c:	ldrb	w10, [x11]
  42fca0:	cbz	w9, 42fd04 <wcrtomb@plt+0x2b214>
  42fca4:	cmp	w9, w10
  42fca8:	b.ne	42fcec <wcrtomb@plt+0x2b1fc>  // b.any
  42fcac:	ldr	x10, [x1]
  42fcb0:	cbz	x10, 42fcd0 <wcrtomb@plt+0x2b1e0>
  42fcb4:	str	x8, [x10, #8]
  42fcb8:	ldr	x11, [x1, #8]
  42fcbc:	cbnz	x11, 42fce0 <wcrtomb@plt+0x2b1f0>
  42fcc0:	ldr	w11, [x10, #16]
  42fcc4:	and	w11, w11, #0xffffffef
  42fcc8:	str	w11, [x10, #16]
  42fccc:	b	42fcdc <wcrtomb@plt+0x2b1ec>
  42fcd0:	mov	x11, x8
  42fcd4:	str	x8, [x23]
  42fcd8:	cbnz	x8, 42fce0 <wcrtomb@plt+0x2b1f0>
  42fcdc:	mov	x11, x24
  42fce0:	str	x10, [x11]
  42fce4:	stp	xzr, xzr, [x1]
  42fce8:	b	42fc30 <wcrtomb@plt+0x2b140>
  42fcec:	mov	w9, wzr
  42fcf0:	add	x25, x25, #0x1
  42fcf4:	b	42fc24 <wcrtomb@plt+0x2b134>
  42fcf8:	ldr	x11, [x1, #24]
  42fcfc:	ldrb	w10, [x11]
  42fd00:	cbnz	w9, 42fca4 <wcrtomb@plt+0x2b1b4>
  42fd04:	mov	w9, w10
  42fd08:	b	42fc30 <wcrtomb@plt+0x2b140>
  42fd0c:	mov	x25, x9
  42fd10:	cbz	x8, 42fd4c <wcrtomb@plt+0x2b25c>
  42fd14:	orr	w9, w10, #0x10
  42fd18:	str	w9, [x1, #16]
  42fd1c:	ldr	x9, [x8, #8]
  42fd20:	cbz	x9, 42fd40 <wcrtomb@plt+0x2b250>
  42fd24:	ldr	w10, [x8, #16]
  42fd28:	mov	x11, x9
  42fd2c:	orr	w9, w10, #0x10
  42fd30:	str	w9, [x8, #16]
  42fd34:	ldr	x9, [x11, #8]
  42fd38:	mov	x8, x11
  42fd3c:	cbnz	x9, 42fd24 <wcrtomb@plt+0x2b234>
  42fd40:	mov	x0, x19
  42fd44:	bl	4306a0 <wcrtomb@plt+0x2bbb0>
  42fd48:	cbnz	w0, 430114 <wcrtomb@plt+0x2b624>
  42fd4c:	cbnz	x25, 42fe20 <wcrtomb@plt+0x2b330>
  42fd50:	ldr	w8, [x19, #32]
  42fd54:	tbz	w8, #29, 42fd90 <wcrtomb@plt+0x2b2a0>
  42fd58:	ldp	x10, x9, [x19, #176]
  42fd5c:	cmp	x9, x10
  42fd60:	b.cs	42fe14 <wcrtomb@plt+0x2b324>  // b.hs, b.nlast
  42fd64:	tbz	w8, #21, 42fd84 <wcrtomb@plt+0x2b294>
  42fd68:	ldr	x25, [x19, #104]
  42fd6c:	mov	w2, #0x5                   	// #5
  42fd70:	mov	x0, xzr
  42fd74:	mov	x1, x20
  42fd78:	bl	4048b0 <dcgettext@plt>
  42fd7c:	blr	x25
  42fd80:	ldr	w8, [x19, #32]
  42fd84:	tbz	w8, #12, 42fbec <wcrtomb@plt+0x2b0fc>
  42fd88:	mov	x8, xzr
  42fd8c:	b	42fbf8 <wcrtomb@plt+0x2b108>
  42fd90:	mov	x25, xzr
  42fd94:	tbnz	w8, #1, 42fe28 <wcrtomb@plt+0x2b338>
  42fd98:	mov	x9, xzr
  42fd9c:	ldr	x0, [x19, #8]
  42fda0:	add	x8, x25, #0x1
  42fda4:	cbz	x0, 42fe34 <wcrtomb@plt+0x2b344>
  42fda8:	ldr	x10, [x19]
  42fdac:	ldr	x11, [x19, #24]
  42fdb0:	add	x9, x10, x9
  42fdb4:	add	x10, x9, x8
  42fdb8:	cmp	x11, x10
  42fdbc:	b.cs	42ff6c <wcrtomb@plt+0x2b47c>  // b.hs, b.nlast
  42fdc0:	cmp	x8, #0x80
  42fdc4:	mov	w10, #0x80                  	// #128
  42fdc8:	csel	x8, x8, x10, hi  // hi = pmore
  42fdcc:	add	x20, x9, x8
  42fdd0:	lsl	x1, x20, #3
  42fdd4:	bl	404450 <realloc@plt>
  42fdd8:	cbnz	x0, 42fe54 <wcrtomb@plt+0x2b364>
  42fddc:	bl	4049c0 <__errno_location@plt>
  42fde0:	mov	w8, #0xc                   	// #12
  42fde4:	str	w8, [x0]
  42fde8:	ldr	w8, [x19, #32]
  42fdec:	mov	w9, #0x2                   	// #2
  42fdf0:	str	w9, [x19, #192]
  42fdf4:	tbnz	w8, #7, 42fe60 <wcrtomb@plt+0x2b370>
  42fdf8:	tbnz	w8, #4, 42fe74 <wcrtomb@plt+0x2b384>
  42fdfc:	tbnz	w8, #3, 42ff00 <wcrtomb@plt+0x2b410>
  42fe00:	mov	x0, x19
  42fe04:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  42fe08:	ldr	x20, [x23]
  42fe0c:	cbnz	x20, 42ff28 <wcrtomb@plt+0x2b438>
  42fe10:	b	42ff08 <wcrtomb@plt+0x2b418>
  42fe14:	mov	w0, wzr
  42fe18:	str	xzr, [x19, #96]
  42fe1c:	b	430118 <wcrtomb@plt+0x2b628>
  42fe20:	ldr	w8, [x19, #32]
  42fe24:	tbz	w8, #1, 42fd98 <wcrtomb@plt+0x2b2a8>
  42fe28:	ldp	x0, x9, [x19, #8]
  42fe2c:	add	x8, x25, #0x1
  42fe30:	cbnz	x0, 42fda8 <wcrtomb@plt+0x2b2b8>
  42fe34:	add	x9, x9, x8
  42fe38:	cmp	x9, #0x80
  42fe3c:	mov	w9, #0x80                  	// #128
  42fe40:	csel	x20, x8, x9, hi  // hi = pmore
  42fe44:	mov	w1, #0x8                   	// #8
  42fe48:	mov	x0, x20
  42fe4c:	bl	4043d0 <calloc@plt>
  42fe50:	cbz	x0, 42fddc <wcrtomb@plt+0x2b2ec>
  42fe54:	str	x20, [x19, #24]
  42fe58:	str	x0, [x19, #8]
  42fe5c:	b	42ff6c <wcrtomb@plt+0x2b47c>
  42fe60:	ldr	x8, [x19, #88]
  42fe64:	mov	x0, x19
  42fe68:	blr	x8
  42fe6c:	ldr	w8, [x19, #32]
  42fe70:	tbz	w8, #4, 42fdfc <wcrtomb@plt+0x2b30c>
  42fe74:	ldr	w8, [x19, #192]
  42fe78:	ldr	x20, [x19, #96]
  42fe7c:	cmp	w8, #0x9
  42fe80:	b.eq	42feb4 <wcrtomb@plt+0x2b3c4>  // b.none
  42fe84:	cmp	w8, #0x1
  42fe88:	b.ne	42febc <wcrtomb@plt+0x2b3cc>  // b.any
  42fe8c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fe90:	add	x1, x1, #0x221
  42fe94:	mov	w2, #0x5                   	// #5
  42fe98:	mov	x0, xzr
  42fe9c:	bl	4048b0 <dcgettext@plt>
  42fea0:	ldr	x8, [x19, #168]
  42fea4:	ldr	x2, [x19, #184]
  42fea8:	ldrb	w1, [x8, x2]
  42feac:	blr	x20
  42feb0:	b	42fef8 <wcrtomb@plt+0x2b408>
  42feb4:	add	x8, x19, #0xc8
  42feb8:	b	42fedc <wcrtomb@plt+0x2b3ec>
  42febc:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42fec0:	ldr	w9, [x9, #4000]
  42fec4:	sxtw	x8, w8
  42fec8:	cmp	w8, w9
  42fecc:	b.ge	42fee4 <wcrtomb@plt+0x2b3f4>  // b.tcont
  42fed0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  42fed4:	add	x9, x9, #0xf58
  42fed8:	add	x8, x9, x8, lsl #3
  42fedc:	ldr	x1, [x8]
  42fee0:	b	42feec <wcrtomb@plt+0x2b3fc>
  42fee4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fee8:	add	x1, x1, #0x213
  42feec:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  42fef0:	add	x0, x0, #0x274
  42fef4:	blr	x20
  42fef8:	ldr	w8, [x19, #32]
  42fefc:	tbz	w8, #3, 42fe00 <wcrtomb@plt+0x2b310>
  42ff00:	ldr	x20, [x23]
  42ff04:	cbnz	x20, 42ff28 <wcrtomb@plt+0x2b438>
  42ff08:	stp	xzr, xzr, [x23]
  42ff0c:	ldr	w0, [x19, #192]
  42ff10:	cbnz	w0, 430118 <wcrtomb@plt+0x2b628>
  42ff14:	b	42ff6c <wcrtomb@plt+0x2b47c>
  42ff18:	mov	x0, x20
  42ff1c:	bl	4046b0 <free@plt>
  42ff20:	mov	x20, x21
  42ff24:	cbz	x21, 42ff08 <wcrtomb@plt+0x2b418>
  42ff28:	ldrb	w8, [x20, #16]
  42ff2c:	ldr	x21, [x20, #8]
  42ff30:	tbz	w8, #1, 42ff18 <wcrtomb@plt+0x2b428>
  42ff34:	ldr	x0, [x20, #24]
  42ff38:	bl	4046b0 <free@plt>
  42ff3c:	b	42ff18 <wcrtomb@plt+0x2b428>
  42ff40:	mov	x10, x24
  42ff44:	str	x9, [x10]
  42ff48:	stp	xzr, xzr, [x8]
  42ff4c:	ldr	x8, [x19]
  42ff50:	ldr	x9, [x19, #48]
  42ff54:	ldrb	w10, [x19, #35]
  42ff58:	add	x8, x8, #0x1
  42ff5c:	add	x9, x9, #0x1
  42ff60:	str	x8, [x19]
  42ff64:	str	x9, [x19, #48]
  42ff68:	tbnz	w10, #5, 43001c <wcrtomb@plt+0x2b52c>
  42ff6c:	ldr	x8, [x23]
  42ff70:	cbz	x8, 430018 <wcrtomb@plt+0x2b528>
  42ff74:	ldr	w9, [x8, #16]
  42ff78:	tbnz	w9, #0, 42ff94 <wcrtomb@plt+0x2b4a4>
  42ff7c:	tbnz	w9, #1, 42ffa4 <wcrtomb@plt+0x2b4b4>
  42ff80:	ldr	x9, [x19, #168]
  42ff84:	ldp	x10, x8, [x8, #24]
  42ff88:	add	x21, x9, x10
  42ff8c:	sub	x20, x8, x10
  42ff90:	b	42ffb4 <wcrtomb@plt+0x2b4c4>
  42ff94:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1be3c>
  42ff98:	mov	x20, xzr
  42ff9c:	add	x21, x21, #0xb36
  42ffa0:	b	42ffb4 <wcrtomb@plt+0x2b4c4>
  42ffa4:	ldr	x21, [x8, #24]
  42ffa8:	mov	x0, x21
  42ffac:	bl	403f00 <strlen@plt>
  42ffb0:	mov	x20, x0
  42ffb4:	add	x0, x20, #0x1
  42ffb8:	bl	404210 <malloc@plt>
  42ffbc:	ldp	x10, x8, [x19, #8]
  42ffc0:	ldr	x9, [x19]
  42ffc4:	add	x8, x9, x8
  42ffc8:	str	x0, [x10, x8, lsl #3]
  42ffcc:	cbz	x0, 430030 <wcrtomb@plt+0x2b540>
  42ffd0:	mov	x1, x21
  42ffd4:	mov	x2, x20
  42ffd8:	mov	x22, x0
  42ffdc:	bl	403e80 <memcpy@plt>
  42ffe0:	strb	wzr, [x22, x20]
  42ffe4:	ldr	x8, [x23]
  42ffe8:	ldp	x9, x10, [x8]
  42ffec:	cbz	x9, 43000c <wcrtomb@plt+0x2b51c>
  42fff0:	str	x10, [x9, #8]
  42fff4:	ldr	x10, [x8, #8]
  42fff8:	cbnz	x10, 42ff44 <wcrtomb@plt+0x2b454>
  42fffc:	ldr	w10, [x9, #16]
  430000:	and	w10, w10, #0xffffffef
  430004:	str	w10, [x9, #16]
  430008:	b	42ff40 <wcrtomb@plt+0x2b450>
  43000c:	str	x10, [x23]
  430010:	cbnz	x10, 42ff44 <wcrtomb@plt+0x2b454>
  430014:	b	42ff40 <wcrtomb@plt+0x2b450>
  430018:	ldr	x8, [x19]
  43001c:	ldp	x10, x9, [x19, #8]
  430020:	mov	w0, wzr
  430024:	add	x8, x8, x9
  430028:	str	xzr, [x10, x8, lsl #3]
  43002c:	b	430118 <wcrtomb@plt+0x2b628>
  430030:	bl	4049c0 <__errno_location@plt>
  430034:	mov	w8, #0xc                   	// #12
  430038:	str	w8, [x0]
  43003c:	ldr	w8, [x19, #32]
  430040:	mov	w9, #0x2                   	// #2
  430044:	str	w9, [x19, #192]
  430048:	tbnz	w8, #7, 430068 <wcrtomb@plt+0x2b578>
  43004c:	tbnz	w8, #4, 43007c <wcrtomb@plt+0x2b58c>
  430050:	tbnz	w8, #3, 430108 <wcrtomb@plt+0x2b618>
  430054:	mov	x0, x19
  430058:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  43005c:	ldr	x20, [x23]
  430060:	cbnz	x20, 430140 <wcrtomb@plt+0x2b650>
  430064:	b	430110 <wcrtomb@plt+0x2b620>
  430068:	ldr	x8, [x19, #88]
  43006c:	mov	x0, x19
  430070:	blr	x8
  430074:	ldr	w8, [x19, #32]
  430078:	tbz	w8, #4, 430050 <wcrtomb@plt+0x2b560>
  43007c:	ldr	w8, [x19, #192]
  430080:	ldr	x20, [x19, #96]
  430084:	cmp	w8, #0x9
  430088:	b.eq	4300bc <wcrtomb@plt+0x2b5cc>  // b.none
  43008c:	cmp	w8, #0x1
  430090:	b.ne	4300c4 <wcrtomb@plt+0x2b5d4>  // b.any
  430094:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430098:	add	x1, x1, #0x221
  43009c:	mov	w2, #0x5                   	// #5
  4300a0:	mov	x0, xzr
  4300a4:	bl	4048b0 <dcgettext@plt>
  4300a8:	ldr	x8, [x19, #168]
  4300ac:	ldr	x2, [x19, #184]
  4300b0:	ldrb	w1, [x8, x2]
  4300b4:	blr	x20
  4300b8:	b	430100 <wcrtomb@plt+0x2b610>
  4300bc:	add	x8, x19, #0xc8
  4300c0:	b	4300e4 <wcrtomb@plt+0x2b5f4>
  4300c4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4300c8:	ldr	w9, [x9, #4000]
  4300cc:	sxtw	x8, w8
  4300d0:	cmp	w8, w9
  4300d4:	b.ge	4300ec <wcrtomb@plt+0x2b5fc>  // b.tcont
  4300d8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4300dc:	add	x9, x9, #0xf58
  4300e0:	add	x8, x9, x8, lsl #3
  4300e4:	ldr	x1, [x8]
  4300e8:	b	4300f4 <wcrtomb@plt+0x2b604>
  4300ec:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4300f0:	add	x1, x1, #0x213
  4300f4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4300f8:	add	x0, x0, #0x274
  4300fc:	blr	x20
  430100:	ldr	w8, [x19, #32]
  430104:	tbz	w8, #3, 430054 <wcrtomb@plt+0x2b564>
  430108:	ldr	x20, [x23]
  43010c:	cbnz	x20, 430140 <wcrtomb@plt+0x2b650>
  430110:	stp	xzr, xzr, [x23]
  430114:	ldr	w0, [x19, #192]
  430118:	ldp	x20, x19, [sp, #64]
  43011c:	ldp	x22, x21, [sp, #48]
  430120:	ldp	x24, x23, [sp, #32]
  430124:	ldr	x25, [sp, #16]
  430128:	ldp	x29, x30, [sp], #80
  43012c:	ret
  430130:	mov	x0, x20
  430134:	bl	4046b0 <free@plt>
  430138:	mov	x20, x21
  43013c:	cbz	x21, 430110 <wcrtomb@plt+0x2b620>
  430140:	ldrb	w8, [x20, #16]
  430144:	ldr	x21, [x20, #8]
  430148:	tbz	w8, #1, 430130 <wcrtomb@plt+0x2b640>
  43014c:	ldr	x0, [x20, #24]
  430150:	bl	4046b0 <free@plt>
  430154:	b	430130 <wcrtomb@plt+0x2b640>
  430158:	stp	x29, x30, [sp, #-48]!
  43015c:	stp	x20, x19, [sp, #32]
  430160:	mov	x19, x0
  430164:	stp	x22, x21, [sp, #16]
  430168:	mov	x29, sp
  43016c:	str	w3, [x0, #32]
  430170:	tbz	w3, #16, 430184 <wcrtomb@plt+0x2b694>
  430174:	tbz	w3, #17, 430194 <wcrtomb@plt+0x2b6a4>
  430178:	tbz	w3, #6, 4301a4 <wcrtomb@plt+0x2b6b4>
  43017c:	tbz	w3, #2, 4301b0 <wcrtomb@plt+0x2b6c0>
  430180:	b	4301b8 <wcrtomb@plt+0x2b6c8>
  430184:	adrp	x8, 430000 <wcrtomb@plt+0x2b510>
  430188:	add	x8, x8, #0x9e4
  43018c:	str	x8, [x19, #88]
  430190:	tbnz	w3, #17, 430178 <wcrtomb@plt+0x2b688>
  430194:	adrp	x8, 430000 <wcrtomb@plt+0x2b510>
  430198:	add	x8, x8, #0xa1c
  43019c:	str	x8, [x19, #96]
  4301a0:	tbnz	w3, #6, 43017c <wcrtomb@plt+0x2b68c>
  4301a4:	stp	xzr, xzr, [x19, #120]
  4301a8:	str	xzr, [x19, #136]
  4301ac:	tbnz	w3, #2, 4301b8 <wcrtomb@plt+0x2b6c8>
  4301b0:	ldr	x8, [x19, #160]
  4301b4:	cbz	x8, 430298 <wcrtomb@plt+0x2b7a8>
  4301b8:	mov	w8, #0x240000              	// #2359296
  4301bc:	and	w8, w3, w8
  4301c0:	cmp	w8, #0x200, lsl #12
  4301c4:	b.eq	43020c <wcrtomb@plt+0x2b71c>  // b.none
  4301c8:	stp	x1, x2, [x19, #168]
  4301cc:	tbz	w3, #1, 43040c <wcrtomb@plt+0x2b91c>
  4301d0:	tbz	w3, #14, 430414 <wcrtomb@plt+0x2b924>
  4301d4:	tbz	w3, #15, 430424 <wcrtomb@plt+0x2b934>
  4301d8:	tbz	w3, #26, 43042c <wcrtomb@plt+0x2b93c>
  4301dc:	tbnz	w3, #31, 4301e4 <wcrtomb@plt+0x2b6f4>
  4301e0:	str	wzr, [x19, #36]
  4301e4:	tbnz	w3, #28, 430228 <wcrtomb@plt+0x2b738>
  4301e8:	tbnz	w3, #25, 430258 <wcrtomb@plt+0x2b768>
  4301ec:	ldr	w9, [x19, #36]
  4301f0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4301f4:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4301f8:	add	x8, x8, #0xb36
  4301fc:	add	x10, x10, #0x255
  430200:	stp	x8, x10, [x19, #72]
  430204:	orr	w8, w9, #0x100
  430208:	b	430270 <wcrtomb@plt+0x2b780>
  43020c:	tbnz	w3, #17, 430284 <wcrtomb@plt+0x2b794>
  430210:	tbnz	w3, #4, 4303f8 <wcrtomb@plt+0x2b908>
  430214:	and	w3, w3, #0xffdfffff
  430218:	str	w3, [x19, #32]
  43021c:	stp	x1, x2, [x19, #168]
  430220:	tbnz	w3, #1, 4301d0 <wcrtomb@plt+0x2b6e0>
  430224:	b	43040c <wcrtomb@plt+0x2b91c>
  430228:	ldr	x8, [x19, #72]
  43022c:	cbz	x8, 4302f4 <wcrtomb@plt+0x2b804>
  430230:	ldr	x8, [x19, #80]
  430234:	cbz	x8, 430308 <wcrtomb@plt+0x2b818>
  430238:	str	xzr, [x19, #184]
  43023c:	str	xzr, [x19, #48]
  430240:	tbnz	w3, #3, 430320 <wcrtomb@plt+0x2b830>
  430244:	stp	xzr, xzr, [x19, #208]
  430248:	tbnz	w3, #3, 430338 <wcrtomb@plt+0x2b848>
  43024c:	str	xzr, [x19, #24]
  430250:	stp	xzr, xzr, [x19]
  430254:	b	4303e0 <wcrtomb@plt+0x2b8f0>
  430258:	ldr	w9, [x19, #36]
  43025c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  430260:	add	x8, x8, #0xf40
  430264:	stp	x8, x8, [x19, #72]
  430268:	mov	w8, #0x660                 	// #1632
  43026c:	orr	w8, w9, w8
  430270:	str	w8, [x19, #36]
  430274:	str	xzr, [x19, #184]
  430278:	str	xzr, [x19, #48]
  43027c:	tbz	w3, #3, 430244 <wcrtomb@plt+0x2b754>
  430280:	b	430320 <wcrtomb@plt+0x2b830>
  430284:	ldr	x8, [x19, #96]
  430288:	str	x8, [x19, #104]
  43028c:	stp	x1, x2, [x19, #168]
  430290:	tbnz	w3, #1, 4301d0 <wcrtomb@plt+0x2b6e0>
  430294:	b	43040c <wcrtomb@plt+0x2b91c>
  430298:	mov	w8, #0x3                   	// #3
  43029c:	str	w8, [x19, #192]
  4302a0:	tbz	w3, #4, 4302d4 <wcrtomb@plt+0x2b7e4>
  4302a4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4302a8:	ldr	w8, [x8, #4000]
  4302ac:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4302b0:	ldr	x9, [x9, #3952]
  4302b4:	ldr	x10, [x19, #96]
  4302b8:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4302bc:	add	x11, x11, #0x213
  4302c0:	cmp	w8, #0x3
  4302c4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4302c8:	csel	x1, x9, x11, gt
  4302cc:	add	x0, x0, #0x274
  4302d0:	blr	x10
  4302d4:	bl	4049c0 <__errno_location@plt>
  4302d8:	mov	w8, #0x16                  	// #22
  4302dc:	str	w8, [x0]
  4302e0:	ldr	w0, [x19, #192]
  4302e4:	ldp	x20, x19, [sp, #32]
  4302e8:	ldp	x22, x21, [sp, #16]
  4302ec:	ldp	x29, x30, [sp], #48
  4302f0:	ret
  4302f4:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4302f8:	add	x8, x8, #0xb36
  4302fc:	str	x8, [x19, #72]
  430300:	ldr	x8, [x19, #80]
  430304:	cbnz	x8, 430238 <wcrtomb@plt+0x2b748>
  430308:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43030c:	add	x8, x8, #0xb36
  430310:	str	x8, [x19, #80]
  430314:	str	xzr, [x19, #184]
  430318:	str	xzr, [x19, #48]
  43031c:	tbz	w3, #3, 430244 <wcrtomb@plt+0x2b754>
  430320:	mov	x21, x19
  430324:	ldr	x20, [x21, #208]!
  430328:	cbnz	x20, 430360 <wcrtomb@plt+0x2b870>
  43032c:	stp	xzr, xzr, [x21]
  430330:	stp	xzr, xzr, [x19, #208]
  430334:	tbz	w3, #3, 43024c <wcrtomb@plt+0x2b75c>
  430338:	tbnz	w3, #0, 4303c4 <wcrtomb@plt+0x2b8d4>
  43033c:	ldr	x8, [x19]
  430340:	cbz	x8, 4303c0 <wcrtomb@plt+0x2b8d0>
  430344:	ldr	x9, [x19, #16]
  430348:	mov	x20, xzr
  43034c:	b	430384 <wcrtomb@plt+0x2b894>
  430350:	mov	x0, x20
  430354:	bl	4046b0 <free@plt>
  430358:	mov	x20, x22
  43035c:	cbz	x22, 4303ac <wcrtomb@plt+0x2b8bc>
  430360:	ldrb	w8, [x20, #16]
  430364:	ldr	x22, [x20, #8]
  430368:	tbz	w8, #1, 430350 <wcrtomb@plt+0x2b860>
  43036c:	ldr	x0, [x20, #24]
  430370:	bl	4046b0 <free@plt>
  430374:	b	430350 <wcrtomb@plt+0x2b860>
  430378:	add	x20, x20, #0x1
  43037c:	cmp	x20, x8
  430380:	b.cs	4303c0 <wcrtomb@plt+0x2b8d0>  // b.hs, b.nlast
  430384:	ldr	x10, [x19, #8]
  430388:	add	x11, x9, x20
  43038c:	ldr	x0, [x10, x11, lsl #3]
  430390:	cbz	x0, 430378 <wcrtomb@plt+0x2b888>
  430394:	bl	4046b0 <free@plt>
  430398:	ldp	x8, x9, [x19, #8]
  43039c:	add	x10, x20, x9
  4303a0:	str	xzr, [x8, x10, lsl #3]
  4303a4:	ldr	x8, [x19]
  4303a8:	b	430378 <wcrtomb@plt+0x2b888>
  4303ac:	ldr	w3, [x19, #32]
  4303b0:	stp	xzr, xzr, [x21]
  4303b4:	stp	xzr, xzr, [x19, #208]
  4303b8:	tbz	w3, #3, 43024c <wcrtomb@plt+0x2b75c>
  4303bc:	b	430338 <wcrtomb@plt+0x2b848>
  4303c0:	str	xzr, [x19]
  4303c4:	ldr	w8, [x19, #192]
  4303c8:	cmp	w8, #0x9
  4303cc:	b.ne	4303d8 <wcrtomb@plt+0x2b8e8>  // b.any
  4303d0:	ldr	x0, [x19, #200]
  4303d4:	bl	4046b0 <free@plt>
  4303d8:	str	xzr, [x19, #200]
  4303dc:	str	wzr, [x19, #192]
  4303e0:	mov	w0, wzr
  4303e4:	str	wzr, [x19, #192]
  4303e8:	ldp	x20, x19, [sp, #32]
  4303ec:	ldp	x22, x21, [sp, #16]
  4303f0:	ldp	x29, x30, [sp], #48
  4303f4:	ret
  4303f8:	adrp	x8, 430000 <wcrtomb@plt+0x2b510>
  4303fc:	add	x8, x8, #0xa1c
  430400:	str	x8, [x19, #104]
  430404:	stp	x1, x2, [x19, #168]
  430408:	tbnz	w3, #1, 4301d0 <wcrtomb@plt+0x2b6e0>
  43040c:	str	xzr, [x19, #16]
  430410:	tbnz	w3, #14, 4301d4 <wcrtomb@plt+0x2b6e4>
  430414:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430418:	add	x8, x8, #0x251
  43041c:	str	x8, [x19, #56]
  430420:	tbnz	w3, #15, 4301d8 <wcrtomb@plt+0x2b6e8>
  430424:	str	xzr, [x19, #64]
  430428:	tbnz	w3, #26, 4301dc <wcrtomb@plt+0x2b6ec>
  43042c:	str	xzr, [x19, #152]
  430430:	tbz	w3, #31, 4301e0 <wcrtomb@plt+0x2b6f0>
  430434:	b	4301e4 <wcrtomb@plt+0x2b6f4>
  430438:	stp	x29, x30, [sp, #-64]!
  43043c:	stp	x24, x23, [sp, #16]
  430440:	stp	x22, x21, [sp, #32]
  430444:	stp	x20, x19, [sp, #48]
  430448:	ldr	w8, [x0, #32]
  43044c:	mov	x19, x0
  430450:	mov	x20, x1
  430454:	mov	x29, sp
  430458:	tbnz	w8, #21, 430464 <wcrtomb@plt+0x2b974>
  43045c:	tbz	w8, #22, 430494 <wcrtomb@plt+0x2b9a4>
  430460:	b	4304ac <wcrtomb@plt+0x2b9bc>
  430464:	ldr	x21, [x19, #104]
  430468:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43046c:	add	x1, x1, #0x25a
  430470:	mov	w2, #0x5                   	// #5
  430474:	mov	x0, xzr
  430478:	bl	4048b0 <dcgettext@plt>
  43047c:	ldr	w1, [x19, #224]
  430480:	ldr	w2, [x19, #176]
  430484:	ldr	x3, [x19, #168]
  430488:	blr	x21
  43048c:	ldr	w8, [x19, #32]
  430490:	tbnz	w8, #22, 4304ac <wcrtomb@plt+0x2b9bc>
  430494:	ldrb	w8, [x19, #36]
  430498:	tbz	w8, #7, 4304c0 <wcrtomb@plt+0x2b9d0>
  43049c:	ldp	x9, x8, [x19, #40]
  4304a0:	add	x8, x8, #0x1
  4304a4:	cmp	x8, x9
  4304a8:	b.ne	4304c0 <wcrtomb@plt+0x2b9d0>  // b.any
  4304ac:	mov	w2, #0x1                   	// #1
  4304b0:	mov	x0, x19
  4304b4:	mov	x1, x20
  4304b8:	bl	430ab0 <wcrtomb@plt+0x2bfc0>
  4304bc:	b	43052c <wcrtomb@plt+0x2ba3c>
  4304c0:	mov	x0, x19
  4304c4:	mov	x1, x20
  4304c8:	mov	w2, wzr
  4304cc:	bl	430ab0 <wcrtomb@plt+0x2bfc0>
  4304d0:	cmp	w0, #0x1
  4304d4:	b.ne	430518 <wcrtomb@plt+0x2ba28>  // b.any
  4304d8:	mov	w20, #0xffffffff            	// #-1
  4304dc:	b	430508 <wcrtomb@plt+0x2ba18>
  4304e0:	ldr	w8, [x19, #36]
  4304e4:	eor	w8, w20, w8, lsr #7
  4304e8:	and	x8, x8, #0x1
  4304ec:	ldr	x9, [x19, #184]
  4304f0:	mov	x0, x19
  4304f4:	mov	w2, wzr
  4304f8:	add	x1, x9, x8
  4304fc:	bl	430ab0 <wcrtomb@plt+0x2bfc0>
  430500:	cmp	w0, #0x1
  430504:	b.ne	430518 <wcrtomb@plt+0x2ba28>  // b.any
  430508:	ldrb	w8, [x19, #33]
  43050c:	tbz	w8, #4, 4304e0 <wcrtomb@plt+0x2b9f0>
  430510:	mov	x8, xzr
  430514:	b	4304ec <wcrtomb@plt+0x2b9fc>
  430518:	ldr	x8, [x19, #216]
  43051c:	cbz	x8, 43052c <wcrtomb@plt+0x2ba3c>
  430520:	ldr	w9, [x8, #16]
  430524:	and	w9, w9, #0xffffffef
  430528:	str	w9, [x8, #16]
  43052c:	cmp	w0, #0x2
  430530:	b.ne	43054c <wcrtomb@plt+0x2ba5c>  // b.any
  430534:	ldr	w0, [x19, #192]
  430538:	ldp	x20, x19, [sp, #48]
  43053c:	ldp	x22, x21, [sp, #32]
  430540:	ldp	x24, x23, [sp, #16]
  430544:	ldp	x29, x30, [sp], #64
  430548:	ret
  43054c:	ldrb	w8, [x19, #34]
  430550:	tbz	w8, #5, 43058c <wcrtomb@plt+0x2ba9c>
  430554:	ldr	x21, [x19, #104]
  430558:	ldr	w20, [x19, #224]
  43055c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430560:	add	x1, x1, #0x277
  430564:	mov	w2, #0x5                   	// #5
  430568:	mov	x0, xzr
  43056c:	bl	4048b0 <dcgettext@plt>
  430570:	mov	x2, x0
  430574:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430578:	add	x0, x0, #0x26d
  43057c:	mov	w1, w20
  430580:	blr	x21
  430584:	mov	x0, x19
  430588:	bl	4317c4 <wcrtomb@plt+0x2ccd4>
  43058c:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430590:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430594:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430598:	add	x23, x23, #0x80
  43059c:	add	x20, x20, #0x26d
  4305a0:	add	x21, x21, #0x285
  4305a4:	b	4305b0 <wcrtomb@plt+0x2bac0>
  4305a8:	ldr	x8, [x23, #24]!
  4305ac:	cbz	x8, 430534 <wcrtomb@plt+0x2ba44>
  4305b0:	ldr	w8, [x19, #32]
  4305b4:	ldp	w10, w9, [x23, #8]
  4305b8:	and	w11, w8, w10
  4305bc:	cmp	w11, w10
  4305c0:	cset	w10, eq  // eq = none
  4305c4:	tst	w9, #0x2
  4305c8:	csel	w10, w11, w10, eq  // eq = none
  4305cc:	cmp	w10, #0x0
  4305d0:	cset	w11, eq  // eq = none
  4305d4:	tst	w9, #0x1
  4305d8:	csel	w10, w10, w11, eq  // eq = none
  4305dc:	cbz	w10, 4305a8 <wcrtomb@plt+0x2bab8>
  4305e0:	tbz	w9, #2, 430620 <wcrtomb@plt+0x2bb30>
  4305e4:	ldr	x22, [x19, #208]
  4305e8:	cbnz	x22, 430678 <wcrtomb@plt+0x2bb88>
  4305ec:	tbz	w8, #21, 430620 <wcrtomb@plt+0x2bb30>
  4305f0:	ldr	x24, [x19, #104]
  4305f4:	ldr	w22, [x19, #224]
  4305f8:	mov	w2, #0x5                   	// #5
  4305fc:	mov	x0, xzr
  430600:	mov	x1, x21
  430604:	bl	4048b0 <dcgettext@plt>
  430608:	mov	x2, x0
  43060c:	mov	x0, x20
  430610:	mov	w1, w22
  430614:	blr	x24
  430618:	mov	x0, x19
  43061c:	bl	4317c4 <wcrtomb@plt+0x2ccd4>
  430620:	ldr	x8, [x23, #16]
  430624:	cbz	x8, 4305a8 <wcrtomb@plt+0x2bab8>
  430628:	mov	x0, x19
  43062c:	blr	x8
  430630:	cbnz	w0, 430534 <wcrtomb@plt+0x2ba44>
  430634:	ldrb	w8, [x19, #34]
  430638:	tbz	w8, #5, 4305a8 <wcrtomb@plt+0x2bab8>
  43063c:	ldr	x1, [x23]
  430640:	ldr	x24, [x19, #104]
  430644:	ldr	w22, [x19, #224]
  430648:	mov	w2, #0x5                   	// #5
  43064c:	mov	x0, xzr
  430650:	bl	4048b0 <dcgettext@plt>
  430654:	mov	x2, x0
  430658:	mov	x0, x20
  43065c:	mov	w1, w22
  430660:	blr	x24
  430664:	mov	x0, x19
  430668:	bl	4317c4 <wcrtomb@plt+0x2ccd4>
  43066c:	b	4305a8 <wcrtomb@plt+0x2bab8>
  430670:	ldr	x22, [x22, #8]
  430674:	cbz	x22, 430694 <wcrtomb@plt+0x2bba4>
  430678:	ldrb	w8, [x22, #16]
  43067c:	tbz	w8, #4, 430670 <wcrtomb@plt+0x2bb80>
  430680:	mov	x0, x19
  430684:	mov	x1, x22
  430688:	bl	4306a0 <wcrtomb@plt+0x2bbb0>
  43068c:	cbz	w0, 430670 <wcrtomb@plt+0x2bb80>
  430690:	b	430534 <wcrtomb@plt+0x2ba44>
  430694:	ldr	w8, [x19, #32]
  430698:	tbnz	w8, #21, 4305f0 <wcrtomb@plt+0x2bb00>
  43069c:	b	430620 <wcrtomb@plt+0x2bb30>
  4306a0:	sub	sp, sp, #0x70
  4306a4:	stp	x29, x30, [sp, #16]
  4306a8:	stp	x28, x27, [sp, #32]
  4306ac:	stp	x26, x25, [sp, #48]
  4306b0:	stp	x24, x23, [sp, #64]
  4306b4:	stp	x22, x21, [sp, #80]
  4306b8:	stp	x20, x19, [sp, #96]
  4306bc:	ldr	w24, [x1, #16]
  4306c0:	add	x29, sp, #0x10
  4306c4:	tbnz	w24, #4, 4306d0 <wcrtomb@plt+0x2bbe0>
  4306c8:	mov	w0, wzr
  4306cc:	b	43099c <wcrtomb@plt+0x2beac>
  4306d0:	tst	w24, #0x1
  4306d4:	mov	x20, x1
  4306d8:	mov	x19, x0
  4306dc:	cset	w8, eq  // eq = none
  4306e0:	mov	x21, xzr
  4306e4:	tbnz	w24, #4, 4306f4 <wcrtomb@plt+0x2bc04>
  4306e8:	mov	w9, w24
  4306ec:	mov	x26, x20
  4306f0:	b	430754 <wcrtomb@plt+0x2bc64>
  4306f4:	mov	x26, x20
  4306f8:	mov	w9, w24
  4306fc:	tbz	w8, #0, 43071c <wcrtomb@plt+0x2bc2c>
  430700:	tbnz	w9, #1, 430730 <wcrtomb@plt+0x2bc40>
  430704:	ldp	x9, x8, [x26, #24]
  430708:	sub	x0, x8, x9
  43070c:	ldr	x26, [x26, #8]
  430710:	add	x21, x0, x21
  430714:	cbnz	x26, 430744 <wcrtomb@plt+0x2bc54>
  430718:	b	43077c <wcrtomb@plt+0x2bc8c>
  43071c:	mov	x0, xzr
  430720:	ldr	x26, [x26, #8]
  430724:	add	x21, x0, x21
  430728:	cbnz	x26, 430744 <wcrtomb@plt+0x2bc54>
  43072c:	b	43077c <wcrtomb@plt+0x2bc8c>
  430730:	ldr	x0, [x26, #24]
  430734:	bl	403f00 <strlen@plt>
  430738:	ldr	x26, [x26, #8]
  43073c:	add	x21, x0, x21
  430740:	cbz	x26, 43077c <wcrtomb@plt+0x2bc8c>
  430744:	ldr	w9, [x26, #16]
  430748:	tst	w9, #0x1
  43074c:	cset	w8, eq  // eq = none
  430750:	tbnz	w9, #4, 4306fc <wcrtomb@plt+0x2bc0c>
  430754:	cbz	w8, 430768 <wcrtomb@plt+0x2bc78>
  430758:	tbnz	w9, #1, 430770 <wcrtomb@plt+0x2bc80>
  43075c:	ldp	x9, x8, [x26, #24]
  430760:	sub	x0, x8, x9
  430764:	b	430778 <wcrtomb@plt+0x2bc88>
  430768:	mov	x0, xzr
  43076c:	b	430778 <wcrtomb@plt+0x2bc88>
  430770:	ldr	x0, [x26, #24]
  430774:	bl	403f00 <strlen@plt>
  430778:	add	x21, x0, x21
  43077c:	add	x0, x21, #0x1
  430780:	bl	404210 <malloc@plt>
  430784:	cbz	x0, 430894 <wcrtomb@plt+0x2bda4>
  430788:	adrp	x28, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43078c:	add	x27, x19, #0xd8
  430790:	add	x28, x28, #0xb36
  430794:	mov	x23, x20
  430798:	mov	x22, x0
  43079c:	str	x0, [sp, #8]
  4307a0:	b	4307bc <wcrtomb@plt+0x2bccc>
  4307a4:	mov	x0, x23
  4307a8:	bl	4046b0 <free@plt>
  4307ac:	cmp	x23, x26
  4307b0:	b.eq	430874 <wcrtomb@plt+0x2bd84>  // b.none
  4307b4:	ldr	w24, [x21, #16]
  4307b8:	mov	x23, x21
  4307bc:	ldr	x21, [x23, #8]
  4307c0:	tbnz	w24, #0, 4307dc <wcrtomb@plt+0x2bcec>
  4307c4:	tbnz	w24, #1, 4307e8 <wcrtomb@plt+0x2bcf8>
  4307c8:	ldr	x8, [x19, #168]
  4307cc:	ldp	x9, x10, [x23, #24]
  4307d0:	add	x25, x8, x9
  4307d4:	sub	x24, x10, x9
  4307d8:	b	4307f8 <wcrtomb@plt+0x2bd08>
  4307dc:	mov	x24, xzr
  4307e0:	mov	x25, x28
  4307e4:	b	4307f8 <wcrtomb@plt+0x2bd08>
  4307e8:	ldr	x25, [x23, #24]
  4307ec:	mov	x0, x25
  4307f0:	bl	403f00 <strlen@plt>
  4307f4:	mov	x24, x0
  4307f8:	mov	x0, x22
  4307fc:	mov	x1, x25
  430800:	mov	x2, x24
  430804:	bl	403e80 <memcpy@plt>
  430808:	cmp	x23, x20
  43080c:	add	x22, x22, x24
  430810:	b.eq	4307b4 <wcrtomb@plt+0x2bcc4>  // b.none
  430814:	ldr	w8, [x23, #16]
  430818:	ldr	w9, [x20, #16]
  43081c:	and	w8, w8, #0x4
  430820:	orr	w8, w9, w8
  430824:	str	w8, [x20, #16]
  430828:	ldp	x8, x9, [x23]
  43082c:	cbz	x8, 43084c <wcrtomb@plt+0x2bd5c>
  430830:	str	x9, [x8, #8]
  430834:	ldr	x9, [x23, #8]
  430838:	cbnz	x9, 430858 <wcrtomb@plt+0x2bd68>
  43083c:	ldr	w9, [x8, #16]
  430840:	and	w9, w9, #0xffffffef
  430844:	str	w9, [x8, #16]
  430848:	b	430854 <wcrtomb@plt+0x2bd64>
  43084c:	str	x9, [x19, #208]
  430850:	cbnz	x9, 430858 <wcrtomb@plt+0x2bd68>
  430854:	mov	x9, x27
  430858:	str	x8, [x9]
  43085c:	ldrb	w8, [x23, #16]
  430860:	stp	xzr, xzr, [x23]
  430864:	tbz	w8, #1, 4307a4 <wcrtomb@plt+0x2bcb4>
  430868:	ldr	x0, [x23, #24]
  43086c:	bl	4046b0 <free@plt>
  430870:	b	4307a4 <wcrtomb@plt+0x2bcb4>
  430874:	strb	wzr, [x22]
  430878:	ldr	w9, [x20, #16]
  43087c:	and	w8, w9, #0xffffffef
  430880:	str	w8, [x20, #16]
  430884:	tbnz	w9, #1, 4308c8 <wcrtomb@plt+0x2bdd8>
  430888:	orr	w8, w8, #0x2
  43088c:	str	w8, [x20, #16]
  430890:	b	4308d0 <wcrtomb@plt+0x2bde0>
  430894:	bl	4049c0 <__errno_location@plt>
  430898:	mov	w8, #0xc                   	// #12
  43089c:	str	w8, [x0]
  4308a0:	ldr	w8, [x19, #32]
  4308a4:	mov	w9, #0x2                   	// #2
  4308a8:	str	w9, [x19, #192]
  4308ac:	tbnz	w8, #7, 4308e0 <wcrtomb@plt+0x2bdf0>
  4308b0:	tbnz	w8, #4, 4308f4 <wcrtomb@plt+0x2be04>
  4308b4:	tbz	w8, #3, 430980 <wcrtomb@plt+0x2be90>
  4308b8:	mov	x21, x19
  4308bc:	ldr	x20, [x21, #208]!
  4308c0:	cbnz	x20, 4309cc <wcrtomb@plt+0x2bedc>
  4308c4:	b	430994 <wcrtomb@plt+0x2bea4>
  4308c8:	ldr	x0, [x20, #24]
  4308cc:	bl	4046b0 <free@plt>
  4308d0:	ldr	x8, [sp, #8]
  4308d4:	mov	w0, wzr
  4308d8:	str	x8, [x20, #24]
  4308dc:	b	43099c <wcrtomb@plt+0x2beac>
  4308e0:	ldr	x8, [x19, #88]
  4308e4:	mov	x0, x19
  4308e8:	blr	x8
  4308ec:	ldr	w8, [x19, #32]
  4308f0:	tbz	w8, #4, 4308b4 <wcrtomb@plt+0x2bdc4>
  4308f4:	ldr	w8, [x19, #192]
  4308f8:	ldr	x20, [x19, #96]
  4308fc:	cmp	w8, #0x9
  430900:	b.eq	430934 <wcrtomb@plt+0x2be44>  // b.none
  430904:	cmp	w8, #0x1
  430908:	b.ne	43093c <wcrtomb@plt+0x2be4c>  // b.any
  43090c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430910:	add	x1, x1, #0x221
  430914:	mov	w2, #0x5                   	// #5
  430918:	mov	x0, xzr
  43091c:	bl	4048b0 <dcgettext@plt>
  430920:	ldr	x8, [x19, #168]
  430924:	ldr	x2, [x19, #184]
  430928:	ldrb	w1, [x8, x2]
  43092c:	blr	x20
  430930:	b	430978 <wcrtomb@plt+0x2be88>
  430934:	add	x8, x19, #0xc8
  430938:	b	43095c <wcrtomb@plt+0x2be6c>
  43093c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  430940:	ldr	w9, [x9, #4000]
  430944:	sxtw	x8, w8
  430948:	cmp	w8, w9
  43094c:	b.ge	430964 <wcrtomb@plt+0x2be74>  // b.tcont
  430950:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  430954:	add	x9, x9, #0xf58
  430958:	add	x8, x9, x8, lsl #3
  43095c:	ldr	x1, [x8]
  430960:	b	43096c <wcrtomb@plt+0x2be7c>
  430964:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430968:	add	x1, x1, #0x213
  43096c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430970:	add	x0, x0, #0x274
  430974:	blr	x20
  430978:	ldr	w8, [x19, #32]
  43097c:	tbnz	w8, #3, 4308b8 <wcrtomb@plt+0x2bdc8>
  430980:	mov	x0, x19
  430984:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  430988:	mov	x21, x19
  43098c:	ldr	x20, [x21, #208]!
  430990:	cbnz	x20, 4309cc <wcrtomb@plt+0x2bedc>
  430994:	stp	xzr, xzr, [x21]
  430998:	ldr	w0, [x19, #192]
  43099c:	ldp	x20, x19, [sp, #96]
  4309a0:	ldp	x22, x21, [sp, #80]
  4309a4:	ldp	x24, x23, [sp, #64]
  4309a8:	ldp	x26, x25, [sp, #48]
  4309ac:	ldp	x28, x27, [sp, #32]
  4309b0:	ldp	x29, x30, [sp, #16]
  4309b4:	add	sp, sp, #0x70
  4309b8:	ret
  4309bc:	mov	x0, x20
  4309c0:	bl	4046b0 <free@plt>
  4309c4:	mov	x20, x22
  4309c8:	cbz	x22, 430994 <wcrtomb@plt+0x2bea4>
  4309cc:	ldrb	w8, [x20, #16]
  4309d0:	ldr	x22, [x20, #8]
  4309d4:	tbz	w8, #1, 4309bc <wcrtomb@plt+0x2becc>
  4309d8:	ldr	x0, [x20, #24]
  4309dc:	bl	4046b0 <free@plt>
  4309e0:	b	4309bc <wcrtomb@plt+0x2becc>
  4309e4:	stp	x29, x30, [sp, #-32]!
  4309e8:	str	x19, [sp, #16]
  4309ec:	ldr	x19, [x0, #96]
  4309f0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  4309f4:	add	x1, x1, #0xd03
  4309f8:	mov	w2, #0x5                   	// #5
  4309fc:	mov	x0, xzr
  430a00:	mov	x29, sp
  430a04:	bl	4048b0 <dcgettext@plt>
  430a08:	mov	x1, x0
  430a0c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430a10:	add	x0, x0, #0x274
  430a14:	blr	x19
  430a18:	bl	404560 <abort@plt>
  430a1c:	sub	sp, sp, #0x120
  430a20:	stp	x29, x30, [sp, #256]
  430a24:	add	x29, sp, #0x100
  430a28:	mov	x9, #0xffffffffffffffc8    	// #-56
  430a2c:	mov	x10, sp
  430a30:	sub	x11, x29, #0x78
  430a34:	movk	x9, #0xff80, lsl #32
  430a38:	add	x12, x29, #0x20
  430a3c:	add	x10, x10, #0x80
  430a40:	add	x11, x11, #0x38
  430a44:	stp	x28, x19, [sp, #272]
  430a48:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  430a4c:	stp	x10, x9, [x29, #-48]
  430a50:	stp	x12, x11, [x29, #-64]
  430a54:	mov	x8, x0
  430a58:	stp	x1, x2, [x29, #-120]
  430a5c:	stp	x3, x4, [x29, #-104]
  430a60:	stp	x5, x6, [x29, #-88]
  430a64:	stur	x7, [x29, #-72]
  430a68:	stp	q0, q1, [sp]
  430a6c:	ldr	x0, [x19, #88]
  430a70:	ldp	q0, q1, [x29, #-64]
  430a74:	sub	x3, x29, #0x20
  430a78:	mov	w1, #0x1                   	// #1
  430a7c:	mov	x2, x8
  430a80:	stp	q2, q3, [sp, #32]
  430a84:	stp	q4, q5, [sp, #64]
  430a88:	stp	q6, q7, [sp, #96]
  430a8c:	stp	q0, q1, [x29, #-32]
  430a90:	bl	4043b0 <__vfprintf_chk@plt>
  430a94:	ldr	x1, [x19, #88]
  430a98:	mov	w0, #0xa                   	// #10
  430a9c:	bl	404080 <fputc@plt>
  430aa0:	ldp	x28, x19, [sp, #272]
  430aa4:	ldp	x29, x30, [sp, #256]
  430aa8:	add	sp, sp, #0x120
  430aac:	ret
  430ab0:	sub	sp, sp, #0xa0
  430ab4:	stp	x29, x30, [sp, #64]
  430ab8:	stp	x28, x27, [sp, #80]
  430abc:	stp	x26, x25, [sp, #96]
  430ac0:	stp	x24, x23, [sp, #112]
  430ac4:	stp	x22, x21, [sp, #128]
  430ac8:	stp	x20, x19, [sp, #144]
  430acc:	ldr	x28, [x0, #176]
  430ad0:	mov	x19, x0
  430ad4:	add	x29, sp, #0x40
  430ad8:	cmp	x28, x1
  430adc:	b.ls	430c30 <wcrtomb@plt+0x2c140>  // b.plast
  430ae0:	ldr	x24, [x19, #168]
  430ae4:	ldr	x22, [x19, #64]
  430ae8:	ldr	w20, [x19, #32]
  430aec:	ldr	x27, [x19, #216]
  430af0:	mov	x23, x1
  430af4:	mov	w21, w2
  430af8:	stur	w2, [x29, #-4]
  430afc:	tbz	w20, #13, 430c3c <wcrtomb@plt+0x2c14c>
  430b00:	add	x8, x23, #0x3
  430b04:	cmp	x8, x28
  430b08:	b.cs	430c3c <wcrtomb@plt+0x2c14c>  // b.hs, b.nlast
  430b0c:	ldrb	w8, [x24, x23]
  430b10:	cmp	w8, #0x73
  430b14:	b.ne	430c3c <wcrtomb@plt+0x2c14c>  // b.any
  430b18:	add	x8, x23, x24
  430b1c:	ldrb	w1, [x8, #1]
  430b20:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430b24:	add	x0, x0, #0x295
  430b28:	mov	w2, #0x21                  	// #33
  430b2c:	bl	404840 <memchr@plt>
  430b30:	cbz	x0, 430c3c <wcrtomb@plt+0x2c14c>
  430b34:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430b38:	mov	x8, xzr
  430b3c:	add	x22, x22, #0x295
  430b40:	mov	x26, x23
  430b44:	mov	x20, x23
  430b48:	add	x20, x20, x8
  430b4c:	ldrb	w8, [x24, x20]
  430b50:	cmp	w8, #0x73
  430b54:	b.ne	430c18 <wcrtomb@plt+0x2c128>  // b.any
  430b58:	add	x8, x20, #0x3
  430b5c:	cmp	x8, x28
  430b60:	b.cs	430c18 <wcrtomb@plt+0x2c128>  // b.hs, b.nlast
  430b64:	add	x8, x20, x24
  430b68:	ldrb	w23, [x8, #1]
  430b6c:	mov	w2, #0x21                  	// #33
  430b70:	mov	x0, x22
  430b74:	mov	w1, w23
  430b78:	bl	404840 <memchr@plt>
  430b7c:	cbz	x0, 430c18 <wcrtomb@plt+0x2c128>
  430b80:	add	x20, x20, #0x2
  430b84:	cmp	x20, x28
  430b88:	b.cs	430c18 <wcrtomb@plt+0x2c128>  // b.hs, b.nlast
  430b8c:	mov	w8, #0x1                   	// #1
  430b90:	b	430ba8 <wcrtomb@plt+0x2c0b8>
  430b94:	cmp	w9, w23
  430b98:	cinc	w8, w8, eq  // eq = none
  430b9c:	add	x20, x20, #0x1
  430ba0:	cmp	x20, x28
  430ba4:	b.cs	430bf8 <wcrtomb@plt+0x2c108>  // b.hs, b.nlast
  430ba8:	ldrb	w9, [x24, x20]
  430bac:	cmp	w8, #0x3
  430bb0:	b.ne	430be4 <wcrtomb@plt+0x2c0f4>  // b.any
  430bb4:	cmp	w9, w23
  430bb8:	b.eq	430bf4 <wcrtomb@plt+0x2c104>  // b.none
  430bbc:	sub	w8, w9, #0x30
  430bc0:	cmp	w8, #0xa
  430bc4:	mov	w8, #0x3                   	// #3
  430bc8:	b.cc	430b9c <wcrtomb@plt+0x2c0ac>  // b.lo, b.ul, b.last
  430bcc:	and	w9, w9, #0xffffffdf
  430bd0:	sub	w9, w9, #0x41
  430bd4:	and	w9, w9, #0xff
  430bd8:	cmp	w9, #0x1a
  430bdc:	b.cc	430b9c <wcrtomb@plt+0x2c0ac>  // b.lo, b.ul, b.last
  430be0:	b	430bf8 <wcrtomb@plt+0x2c108>
  430be4:	cmp	w9, #0x5c
  430be8:	b.ne	430b94 <wcrtomb@plt+0x2c0a4>  // b.any
  430bec:	add	x20, x20, #0x1
  430bf0:	b	430b9c <wcrtomb@plt+0x2c0ac>
  430bf4:	mov	w8, #0x3                   	// #3
  430bf8:	cmp	x20, x28
  430bfc:	b.cs	430c18 <wcrtomb@plt+0x2c128>  // b.hs, b.nlast
  430c00:	cmp	w8, #0x3
  430c04:	b.ne	430c18 <wcrtomb@plt+0x2c128>  // b.any
  430c08:	ldrb	w8, [x24, x20]
  430c0c:	cmp	w8, #0x3b
  430c10:	mov	w8, #0x1                   	// #1
  430c14:	b.eq	430b48 <wcrtomb@plt+0x2c058>  // b.none
  430c18:	sxtw	x21, w20
  430c1c:	mov	w20, #0x20                  	// #32
  430c20:	mov	x25, x27
  430c24:	mov	x23, x26
  430c28:	tbz	w20, #8, 431454 <wcrtomb@plt+0x2c964>
  430c2c:	b	431498 <wcrtomb@plt+0x2c9a8>
  430c30:	mov	w0, wzr
  430c34:	str	wzr, [x19, #192]
  430c38:	b	431668 <wcrtomb@plt+0x2cb78>
  430c3c:	cbz	w21, 431358 <wcrtomb@plt+0x2c868>
  430c40:	add	x8, x19, #0xc8
  430c44:	add	x20, x19, #0xd0
  430c48:	mov	x21, x23
  430c4c:	sub	x23, x28, #0x1
  430c50:	mov	x25, x27
  430c54:	stur	wzr, [x29, #-20]
  430c58:	stp	x8, x27, [sp, #16]
  430c5c:	str	x27, [sp, #32]
  430c60:	stur	x21, [x29, #-16]
  430c64:	cbz	x22, 430ca8 <wcrtomb@plt+0x2c1b8>
  430c68:	ldrb	w26, [x24, x21]
  430c6c:	mov	x0, x22
  430c70:	mov	w1, w26
  430c74:	bl	404750 <strchr@plt>
  430c78:	cbnz	x0, 43139c <wcrtomb@plt+0x2c8ac>
  430c7c:	ldr	w8, [x19, #32]
  430c80:	tst	w8, #0x600
  430c84:	b.eq	430d64 <wcrtomb@plt+0x2c274>  // b.none
  430c88:	cmp	w26, #0x5c
  430c8c:	b.ne	430cd8 <wcrtomb@plt+0x2c1e8>  // b.any
  430c90:	cmp	x23, x21
  430c94:	b.eq	431404 <wcrtomb@plt+0x2c914>  // b.none
  430c98:	add	x21, x21, #0x2
  430c9c:	cmp	x21, x28
  430ca0:	b.cc	430c68 <wcrtomb@plt+0x2c178>  // b.lo, b.ul, b.last
  430ca4:	b	431424 <wcrtomb@plt+0x2c934>
  430ca8:	ldr	w8, [x19, #32]
  430cac:	and	w9, w8, #0x600
  430cb0:	cbz	w9, 430d64 <wcrtomb@plt+0x2c274>
  430cb4:	ldrb	w26, [x24, x21]
  430cb8:	cmp	w26, #0x5c
  430cbc:	b.ne	430cd8 <wcrtomb@plt+0x2c1e8>  // b.any
  430cc0:	cmp	x23, x21
  430cc4:	b.eq	431420 <wcrtomb@plt+0x2c930>  // b.none
  430cc8:	add	x21, x21, #0x2
  430ccc:	cmp	x21, x28
  430cd0:	b.cc	430cb0 <wcrtomb@plt+0x2c1c0>  // b.lo, b.ul, b.last
  430cd4:	b	431424 <wcrtomb@plt+0x2c934>
  430cd8:	tbz	w8, #9, 430ce4 <wcrtomb@plt+0x2c1f4>
  430cdc:	cmp	w26, #0x27
  430ce0:	b.eq	430cf0 <wcrtomb@plt+0x2c200>  // b.none
  430ce4:	tbz	w8, #10, 430d64 <wcrtomb@plt+0x2c274>
  430ce8:	cmp	w26, #0x22
  430cec:	b.ne	430d64 <wcrtomb@plt+0x2c274>  // b.any
  430cf0:	ldur	w8, [x29, #-20]
  430cf4:	cbz	w8, 430d08 <wcrtomb@plt+0x2c218>
  430cf8:	cbz	x25, 430d08 <wcrtomb@plt+0x2c218>
  430cfc:	ldr	w8, [x25, #16]
  430d00:	orr	w8, w8, #0x10
  430d04:	str	w8, [x25, #16]
  430d08:	ldur	x8, [x29, #-16]
  430d0c:	str	x20, [sp, #8]
  430d10:	cmp	x21, x8
  430d14:	b.eq	430e6c <wcrtomb@plt+0x2c37c>  // b.none
  430d18:	mov	w0, #0x1                   	// #1
  430d1c:	mov	w1, #0x28                  	// #40
  430d20:	bl	4043d0 <calloc@plt>
  430d24:	cbnz	x0, 430e3c <wcrtomb@plt+0x2c34c>
  430d28:	bl	4049c0 <__errno_location@plt>
  430d2c:	mov	w8, #0xc                   	// #12
  430d30:	str	w8, [x0]
  430d34:	ldr	w8, [x19, #32]
  430d38:	mov	w9, #0x2                   	// #2
  430d3c:	str	w9, [x19, #192]
  430d40:	tbnz	w8, #7, 430d78 <wcrtomb@plt+0x2c288>
  430d44:	tbnz	w8, #4, 430d8c <wcrtomb@plt+0x2c29c>
  430d48:	tbnz	w8, #3, 430e18 <wcrtomb@plt+0x2c328>
  430d4c:	mov	x0, x19
  430d50:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  430d54:	ldr	x25, [x20]
  430d58:	mov	x26, x20
  430d5c:	cbnz	x25, 430ecc <wcrtomb@plt+0x2c3dc>
  430d60:	b	430e24 <wcrtomb@plt+0x2c334>
  430d64:	mov	x26, x21
  430d68:	ldrb	w1, [x24, x26]
  430d6c:	cmp	w1, #0x24
  430d70:	b.ne	431334 <wcrtomb@plt+0x2c844>  // b.any
  430d74:	b	4311a0 <wcrtomb@plt+0x2c6b0>
  430d78:	ldr	x8, [x19, #88]
  430d7c:	mov	x0, x19
  430d80:	blr	x8
  430d84:	ldr	w8, [x19, #32]
  430d88:	tbz	w8, #4, 430d48 <wcrtomb@plt+0x2c258>
  430d8c:	ldr	w8, [x19, #192]
  430d90:	mov	x25, x20
  430d94:	ldr	x20, [x19, #96]
  430d98:	ldr	x9, [sp, #16]
  430d9c:	cmp	w8, #0x9
  430da0:	b.eq	430dfc <wcrtomb@plt+0x2c30c>  // b.none
  430da4:	cmp	w8, #0x1
  430da8:	b.ne	430dd4 <wcrtomb@plt+0x2c2e4>  // b.any
  430dac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430db0:	mov	w2, #0x5                   	// #5
  430db4:	mov	x0, xzr
  430db8:	add	x1, x1, #0x221
  430dbc:	bl	4048b0 <dcgettext@plt>
  430dc0:	ldr	x8, [x19, #168]
  430dc4:	ldr	x2, [x19, #184]
  430dc8:	ldrb	w1, [x8, x2]
  430dcc:	blr	x20
  430dd0:	b	430e0c <wcrtomb@plt+0x2c31c>
  430dd4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  430dd8:	ldr	w9, [x9, #4000]
  430ddc:	sxtw	x8, w8
  430de0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430de4:	add	x1, x1, #0x213
  430de8:	cmp	w8, w9
  430dec:	b.ge	430e00 <wcrtomb@plt+0x2c310>  // b.tcont
  430df0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  430df4:	add	x9, x9, #0xf58
  430df8:	add	x9, x9, x8, lsl #3
  430dfc:	ldr	x1, [x9]
  430e00:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430e04:	add	x0, x0, #0x274
  430e08:	blr	x20
  430e0c:	ldr	w8, [x19, #32]
  430e10:	mov	x20, x25
  430e14:	tbz	w8, #3, 430d4c <wcrtomb@plt+0x2c25c>
  430e18:	ldr	x25, [x20]
  430e1c:	mov	x26, x20
  430e20:	cbnz	x25, 430ecc <wcrtomb@plt+0x2c3dc>
  430e24:	stp	xzr, xzr, [x26]
  430e28:	ldr	w8, [x19, #192]
  430e2c:	ldr	x0, [sp]
  430e30:	mov	x20, x26
  430e34:	mov	x25, xzr
  430e38:	cbnz	w8, 431664 <wcrtomb@plt+0x2cb74>
  430e3c:	mov	w8, #0x10                  	// #16
  430e40:	str	w8, [x0, #16]
  430e44:	ldur	x8, [x29, #-16]
  430e48:	cmp	x25, #0x0
  430e4c:	stp	x25, xzr, [x0]
  430e50:	stp	x8, x21, [x0, #24]
  430e54:	add	x8, x25, #0x8
  430e58:	csel	x8, x20, x8, eq  // eq = none
  430e5c:	str	x0, [x8]
  430e60:	str	x0, [x19, #216]
  430e64:	stp	x0, x0, [sp, #24]
  430e68:	str	x0, [sp]
  430e6c:	ldr	x8, [x19, #176]
  430e70:	add	x20, x21, #0x1
  430e74:	cmp	x20, x8
  430e78:	b.cs	431580 <wcrtomb@plt+0x2ca90>  // b.hs, b.nlast
  430e7c:	ldr	x9, [x19, #168]
  430e80:	mov	x26, x20
  430e84:	ldrb	w25, [x9, x21]
  430e88:	ldrb	w10, [x9, x26]
  430e8c:	cmp	w10, w25
  430e90:	b.eq	430ee4 <wcrtomb@plt+0x2c3f4>  // b.none
  430e94:	cmp	w25, #0x22
  430e98:	cset	w11, eq  // eq = none
  430e9c:	cmp	w10, #0x5c
  430ea0:	cset	w10, eq  // eq = none
  430ea4:	and	w10, w11, w10
  430ea8:	add	x10, x26, x10
  430eac:	add	x26, x10, #0x1
  430eb0:	cmp	x26, x8
  430eb4:	b.cc	430e88 <wcrtomb@plt+0x2c398>  // b.lo, b.ul, b.last
  430eb8:	b	431580 <wcrtomb@plt+0x2ca90>
  430ebc:	mov	x0, x25
  430ec0:	bl	4046b0 <free@plt>
  430ec4:	mov	x25, x20
  430ec8:	cbz	x20, 430e24 <wcrtomb@plt+0x2c334>
  430ecc:	ldrb	w8, [x25, #16]
  430ed0:	ldr	x20, [x25, #8]
  430ed4:	tbz	w8, #1, 430ebc <wcrtomb@plt+0x2c3cc>
  430ed8:	ldr	x0, [x25, #24]
  430edc:	bl	4046b0 <free@plt>
  430ee0:	b	430ebc <wcrtomb@plt+0x2c3cc>
  430ee4:	mov	w0, #0x1                   	// #1
  430ee8:	mov	w1, #0x28                  	// #40
  430eec:	bl	4043d0 <calloc@plt>
  430ef0:	cmp	w25, #0x27
  430ef4:	mov	x25, x0
  430ef8:	b.ne	430f08 <wcrtomb@plt+0x2c418>  // b.any
  430efc:	cbz	x25, 430f14 <wcrtomb@plt+0x2c424>
  430f00:	ldr	x9, [sp, #32]
  430f04:	b	43109c <wcrtomb@plt+0x2c5ac>
  430f08:	cbz	x25, 430f50 <wcrtomb@plt+0x2c460>
  430f0c:	ldr	x9, [sp, #24]
  430f10:	b	43112c <wcrtomb@plt+0x2c63c>
  430f14:	bl	4049c0 <__errno_location@plt>
  430f18:	mov	w8, #0xc                   	// #12
  430f1c:	str	w8, [x0]
  430f20:	ldr	w8, [x19, #32]
  430f24:	mov	w9, #0x2                   	// #2
  430f28:	str	w9, [x19, #192]
  430f2c:	tbnz	w8, #7, 430f8c <wcrtomb@plt+0x2c49c>
  430f30:	tbnz	w8, #4, 430fa0 <wcrtomb@plt+0x2c4b0>
  430f34:	tbnz	w8, #3, 43107c <wcrtomb@plt+0x2c58c>
  430f38:	mov	x0, x19
  430f3c:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  430f40:	ldr	x8, [sp, #8]
  430f44:	ldr	x21, [x8]
  430f48:	cbnz	x21, 4310b4 <wcrtomb@plt+0x2c5c4>
  430f4c:	b	431088 <wcrtomb@plt+0x2c598>
  430f50:	bl	4049c0 <__errno_location@plt>
  430f54:	mov	w8, #0xc                   	// #12
  430f58:	str	w8, [x0]
  430f5c:	ldr	w8, [x19, #32]
  430f60:	mov	w9, #0x2                   	// #2
  430f64:	str	w9, [x19, #192]
  430f68:	tbnz	w8, #7, 430fe4 <wcrtomb@plt+0x2c4f4>
  430f6c:	tbnz	w8, #4, 430ff8 <wcrtomb@plt+0x2c508>
  430f70:	tbnz	w8, #3, 43110c <wcrtomb@plt+0x2c61c>
  430f74:	mov	x0, x19
  430f78:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  430f7c:	ldr	x8, [sp, #8]
  430f80:	ldr	x21, [x8]
  430f84:	cbnz	x21, 43115c <wcrtomb@plt+0x2c66c>
  430f88:	b	431118 <wcrtomb@plt+0x2c628>
  430f8c:	ldr	x8, [x19, #88]
  430f90:	mov	x0, x19
  430f94:	blr	x8
  430f98:	ldr	w8, [x19, #32]
  430f9c:	tbz	w8, #4, 430f34 <wcrtomb@plt+0x2c444>
  430fa0:	ldr	w8, [x19, #192]
  430fa4:	ldr	x21, [x19, #96]
  430fa8:	ldr	x9, [sp, #16]
  430fac:	cmp	w8, #0x9
  430fb0:	b.eq	431064 <wcrtomb@plt+0x2c574>  // b.none
  430fb4:	cmp	w8, #0x1
  430fb8:	b.ne	43103c <wcrtomb@plt+0x2c54c>  // b.any
  430fbc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  430fc0:	mov	w2, #0x5                   	// #5
  430fc4:	mov	x0, xzr
  430fc8:	add	x1, x1, #0x221
  430fcc:	bl	4048b0 <dcgettext@plt>
  430fd0:	ldr	x8, [x19, #168]
  430fd4:	ldr	x2, [x19, #184]
  430fd8:	ldrb	w1, [x8, x2]
  430fdc:	blr	x21
  430fe0:	b	431074 <wcrtomb@plt+0x2c584>
  430fe4:	ldr	x8, [x19, #88]
  430fe8:	mov	x0, x19
  430fec:	blr	x8
  430ff0:	ldr	w8, [x19, #32]
  430ff4:	tbz	w8, #4, 430f70 <wcrtomb@plt+0x2c480>
  430ff8:	ldr	w8, [x19, #192]
  430ffc:	ldr	x21, [x19, #96]
  431000:	ldr	x9, [sp, #16]
  431004:	cmp	w8, #0x9
  431008:	b.eq	4310f4 <wcrtomb@plt+0x2c604>  // b.none
  43100c:	cmp	w8, #0x1
  431010:	b.ne	4310cc <wcrtomb@plt+0x2c5dc>  // b.any
  431014:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431018:	mov	w2, #0x5                   	// #5
  43101c:	mov	x0, xzr
  431020:	add	x1, x1, #0x221
  431024:	bl	4048b0 <dcgettext@plt>
  431028:	ldr	x8, [x19, #168]
  43102c:	ldr	x2, [x19, #184]
  431030:	ldrb	w1, [x8, x2]
  431034:	blr	x21
  431038:	b	431104 <wcrtomb@plt+0x2c614>
  43103c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  431040:	ldr	w9, [x9, #4000]
  431044:	sxtw	x8, w8
  431048:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43104c:	add	x1, x1, #0x213
  431050:	cmp	w8, w9
  431054:	b.ge	431068 <wcrtomb@plt+0x2c578>  // b.tcont
  431058:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43105c:	add	x9, x9, #0xf58
  431060:	add	x9, x9, x8, lsl #3
  431064:	ldr	x1, [x9]
  431068:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43106c:	add	x0, x0, #0x274
  431070:	blr	x21
  431074:	ldr	w8, [x19, #32]
  431078:	tbz	w8, #3, 430f38 <wcrtomb@plt+0x2c448>
  43107c:	ldr	x8, [sp, #8]
  431080:	ldr	x21, [x8]
  431084:	cbnz	x21, 4310b4 <wcrtomb@plt+0x2c5c4>
  431088:	ldr	x8, [sp, #8]
  43108c:	mov	x9, xzr
  431090:	stp	xzr, xzr, [x8]
  431094:	ldr	w8, [x19, #192]
  431098:	cbnz	w8, 431664 <wcrtomb@plt+0x2cb74>
  43109c:	mov	w8, #0xc                   	// #12
  4310a0:	b	431130 <wcrtomb@plt+0x2c640>
  4310a4:	mov	x0, x21
  4310a8:	bl	4046b0 <free@plt>
  4310ac:	mov	x21, x25
  4310b0:	cbz	x25, 431088 <wcrtomb@plt+0x2c598>
  4310b4:	ldrb	w8, [x21, #16]
  4310b8:	ldr	x25, [x21, #8]
  4310bc:	tbz	w8, #1, 4310a4 <wcrtomb@plt+0x2c5b4>
  4310c0:	ldr	x0, [x21, #24]
  4310c4:	bl	4046b0 <free@plt>
  4310c8:	b	4310a4 <wcrtomb@plt+0x2c5b4>
  4310cc:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4310d0:	ldr	w9, [x9, #4000]
  4310d4:	sxtw	x8, w8
  4310d8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4310dc:	add	x1, x1, #0x213
  4310e0:	cmp	w8, w9
  4310e4:	b.ge	4310f8 <wcrtomb@plt+0x2c608>  // b.tcont
  4310e8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4310ec:	add	x9, x9, #0xf58
  4310f0:	add	x9, x9, x8, lsl #3
  4310f4:	ldr	x1, [x9]
  4310f8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4310fc:	add	x0, x0, #0x274
  431100:	blr	x21
  431104:	ldr	w8, [x19, #32]
  431108:	tbz	w8, #3, 430f74 <wcrtomb@plt+0x2c484>
  43110c:	ldr	x8, [sp, #8]
  431110:	ldr	x21, [x8]
  431114:	cbnz	x21, 43115c <wcrtomb@plt+0x2c66c>
  431118:	ldr	x8, [sp, #8]
  43111c:	mov	x9, xzr
  431120:	stp	xzr, xzr, [x8]
  431124:	ldr	w8, [x19, #192]
  431128:	cbnz	w8, 431664 <wcrtomb@plt+0x2cb74>
  43112c:	mov	w8, #0x4                   	// #4
  431130:	str	w8, [x25, #16]
  431134:	stp	x20, x26, [x25, #24]
  431138:	stp	x9, xzr, [x25]
  43113c:	cbz	x9, 431174 <wcrtomb@plt+0x2c684>
  431140:	str	x25, [x9, #8]
  431144:	ldr	x20, [sp, #8]
  431148:	b	43117c <wcrtomb@plt+0x2c68c>
  43114c:	mov	x0, x21
  431150:	bl	4046b0 <free@plt>
  431154:	mov	x21, x25
  431158:	cbz	x25, 431118 <wcrtomb@plt+0x2c628>
  43115c:	ldrb	w8, [x21, #16]
  431160:	ldr	x25, [x21, #8]
  431164:	tbz	w8, #1, 43114c <wcrtomb@plt+0x2c65c>
  431168:	ldr	x0, [x21, #24]
  43116c:	bl	4046b0 <free@plt>
  431170:	b	43114c <wcrtomb@plt+0x2c65c>
  431174:	ldr	x20, [sp, #8]
  431178:	str	x25, [x20]
  43117c:	add	x8, x26, #0x1
  431180:	stur	x8, [x29, #-16]
  431184:	mov	w8, #0x1                   	// #1
  431188:	str	x25, [x19, #216]
  43118c:	stur	w8, [x29, #-20]
  431190:	stp	x25, x25, [sp, #24]
  431194:	ldrb	w1, [x24, x26]
  431198:	cmp	w1, #0x24
  43119c:	b.ne	431334 <wcrtomb@plt+0x2c844>  // b.any
  4311a0:	ldr	w8, [x19, #32]
  4311a4:	tbnz	w8, #6, 43126c <wcrtomb@plt+0x2c77c>
  4311a8:	add	x9, x26, x24
  4311ac:	ldrb	w9, [x9, #1]
  4311b0:	cmp	w9, #0x7b
  4311b4:	b.ne	43126c <wcrtomb@plt+0x2c77c>  // b.any
  4311b8:	add	x21, x26, #0x2
  4311bc:	cmp	x21, x28
  4311c0:	b.cs	43126c <wcrtomb@plt+0x2c77c>  // b.hs, b.nlast
  4311c4:	mov	w10, wzr
  4311c8:	mov	w9, #0x1                   	// #1
  4311cc:	b	4311e8 <wcrtomb@plt+0x2c6f8>
  4311d0:	ldrb	w10, [x24, x21]
  4311d4:	cmp	w10, #0x27
  4311d8:	cset	w10, ne  // ne = any
  4311dc:	add	x21, x21, #0x1
  4311e0:	cmp	x21, x28
  4311e4:	b.cs	43126c <wcrtomb@plt+0x2c77c>  // b.hs, b.nlast
  4311e8:	cmp	w10, #0x2
  4311ec:	b.eq	431220 <wcrtomb@plt+0x2c730>  // b.none
  4311f0:	cmp	w10, #0x1
  4311f4:	b.eq	4311d0 <wcrtomb@plt+0x2c6e0>  // b.none
  4311f8:	cbnz	w10, 4311dc <wcrtomb@plt+0x2c6ec>
  4311fc:	ldrb	w10, [x24, x21]
  431200:	cmp	w10, #0x7a
  431204:	b.gt	431240 <wcrtomb@plt+0x2c750>
  431208:	cmp	w10, #0x22
  43120c:	b.eq	431238 <wcrtomb@plt+0x2c748>  // b.none
  431210:	cmp	w10, #0x27
  431214:	b.ne	431264 <wcrtomb@plt+0x2c774>  // b.any
  431218:	mov	w10, #0x1                   	// #1
  43121c:	b	4311dc <wcrtomb@plt+0x2c6ec>
  431220:	ldrb	w10, [x24, x21]
  431224:	cmp	w10, #0x22
  431228:	b.eq	431264 <wcrtomb@plt+0x2c774>  // b.none
  43122c:	cmp	w10, #0x5c
  431230:	b.ne	431238 <wcrtomb@plt+0x2c748>  // b.any
  431234:	add	x21, x21, #0x1
  431238:	mov	w10, #0x2                   	// #2
  43123c:	b	4311dc <wcrtomb@plt+0x2c6ec>
  431240:	cmp	w10, #0x7d
  431244:	b.eq	43125c <wcrtomb@plt+0x2c76c>  // b.none
  431248:	cmp	w10, #0x7b
  43124c:	b.ne	431264 <wcrtomb@plt+0x2c774>  // b.any
  431250:	mov	w10, wzr
  431254:	add	x9, x9, #0x1
  431258:	b	4311dc <wcrtomb@plt+0x2c6ec>
  43125c:	subs	x9, x9, #0x1
  431260:	b.eq	43134c <wcrtomb@plt+0x2c85c>  // b.none
  431264:	mov	w10, wzr
  431268:	b	4311dc <wcrtomb@plt+0x2c6ec>
  43126c:	tbnz	w8, #2, 431334 <wcrtomb@plt+0x2c844>
  431270:	add	x8, x26, x24
  431274:	ldrb	w8, [x8, #1]
  431278:	cmp	w8, #0x28
  43127c:	b.ne	431334 <wcrtomb@plt+0x2c844>  // b.any
  431280:	add	x21, x26, #0x2
  431284:	cmp	x21, x28
  431288:	b.cs	431334 <wcrtomb@plt+0x2c844>  // b.hs, b.nlast
  43128c:	mov	w9, wzr
  431290:	mov	w8, #0x1                   	// #1
  431294:	b	4312b0 <wcrtomb@plt+0x2c7c0>
  431298:	ldrb	w9, [x24, x21]
  43129c:	cmp	w9, #0x27
  4312a0:	cset	w9, ne  // ne = any
  4312a4:	add	x21, x21, #0x1
  4312a8:	cmp	x21, x28
  4312ac:	b.cs	431334 <wcrtomb@plt+0x2c844>  // b.hs, b.nlast
  4312b0:	cmp	w9, #0x2
  4312b4:	b.eq	4312f8 <wcrtomb@plt+0x2c808>  // b.none
  4312b8:	cmp	w9, #0x1
  4312bc:	b.eq	431298 <wcrtomb@plt+0x2c7a8>  // b.none
  4312c0:	cbnz	w9, 4312a4 <wcrtomb@plt+0x2c7b4>
  4312c4:	ldrb	w9, [x24, x21]
  4312c8:	sub	w9, w9, #0x22
  4312cc:	cmp	w9, #0x7
  4312d0:	b.hi	43132c <wcrtomb@plt+0x2c83c>  // b.pmore
  4312d4:	adrp	x12, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4312d8:	add	x12, x12, #0x58
  4312dc:	adr	x10, 4312a4 <wcrtomb@plt+0x2c7b4>
  4312e0:	ldrb	w11, [x12, x9]
  4312e4:	add	x10, x10, x11, lsl #2
  4312e8:	mov	w9, #0x2                   	// #2
  4312ec:	br	x10
  4312f0:	mov	w9, #0x1                   	// #1
  4312f4:	b	4312a4 <wcrtomb@plt+0x2c7b4>
  4312f8:	ldrb	w9, [x24, x21]
  4312fc:	cmp	w9, #0x22
  431300:	b.eq	43132c <wcrtomb@plt+0x2c83c>  // b.none
  431304:	cmp	w9, #0x5c
  431308:	b.ne	431310 <wcrtomb@plt+0x2c820>  // b.any
  43130c:	add	x21, x21, #0x1
  431310:	mov	w9, #0x2                   	// #2
  431314:	b	4312a4 <wcrtomb@plt+0x2c7b4>
  431318:	mov	w9, wzr
  43131c:	add	x8, x8, #0x1
  431320:	b	4312a4 <wcrtomb@plt+0x2c7b4>
  431324:	subs	x8, x8, #0x1
  431328:	b.eq	43134c <wcrtomb@plt+0x2c85c>  // b.none
  43132c:	mov	w9, wzr
  431330:	b	4312a4 <wcrtomb@plt+0x2c7b4>
  431334:	ldur	w8, [x29, #-4]
  431338:	cbnz	w8, 431348 <wcrtomb@plt+0x2c858>
  43133c:	ldr	x0, [x19, #56]
  431340:	bl	404750 <strchr@plt>
  431344:	cbnz	x0, 431714 <wcrtomb@plt+0x2cc24>
  431348:	add	x21, x26, #0x1
  43134c:	cmp	x21, x28
  431350:	b.cc	430c64 <wcrtomb@plt+0x2c174>  // b.lo, b.ul, b.last
  431354:	b	431424 <wcrtomb@plt+0x2c934>
  431358:	ldr	x0, [x19, #56]
  43135c:	ldrb	w1, [x24, x23]
  431360:	bl	404750 <strchr@plt>
  431364:	cbz	x0, 430c40 <wcrtomb@plt+0x2c150>
  431368:	tbnz	w20, #12, 43138c <wcrtomb@plt+0x2c89c>
  43136c:	ldrb	w8, [x19, #36]
  431370:	tbnz	w8, #7, 43138c <wcrtomb@plt+0x2c89c>
  431374:	mov	w8, #0x100                 	// #256
  431378:	bic	w20, w8, w20, lsr #3
  43137c:	mov	x25, x27
  431380:	mov	x21, x23
  431384:	tbz	w20, #8, 431454 <wcrtomb@plt+0x2c964>
  431388:	b	431498 <wcrtomb@plt+0x2c9a8>
  43138c:	add	x21, x23, #0x1
  431390:	mov	w20, #0x40                  	// #64
  431394:	mov	x25, x27
  431398:	b	431498 <wcrtomb@plt+0x2c9a8>
  43139c:	mov	x26, x20
  4313a0:	add	x8, x21, #0x1
  4313a4:	mov	x22, x8
  4313a8:	cmp	x8, x28
  4313ac:	b.cs	4313c0 <wcrtomb@plt+0x2c8d0>  // b.hs, b.nlast
  4313b0:	ldrb	w8, [x24, x22]
  4313b4:	cmp	w8, #0xa
  4313b8:	add	x8, x22, #0x1
  4313bc:	b.ne	4313a4 <wcrtomb@plt+0x2c8b4>  // b.any
  4313c0:	ldur	x20, [x29, #-16]
  4313c4:	cmp	x20, x21
  4313c8:	b.eq	4313fc <wcrtomb@plt+0x2c90c>  // b.none
  4313cc:	mov	w0, #0x1                   	// #1
  4313d0:	mov	w1, #0x28                  	// #40
  4313d4:	bl	4043d0 <calloc@plt>
  4313d8:	cbz	x0, 4315f0 <wcrtomb@plt+0x2cb00>
  4313dc:	add	x8, x25, #0x8
  4313e0:	cmp	x25, #0x0
  4313e4:	csel	x8, x26, x8, eq  // eq = none
  4313e8:	str	wzr, [x0, #16]
  4313ec:	stp	x20, x21, [x0, #24]
  4313f0:	stp	x25, xzr, [x0]
  4313f4:	str	x0, [x8]
  4313f8:	str	x0, [x19, #216]
  4313fc:	str	x22, [x19, #184]
  431400:	b	431490 <wcrtomb@plt+0x2c9a0>
  431404:	mov	x21, x28
  431408:	ldur	w8, [x29, #-20]
  43140c:	mov	w20, wzr
  431410:	cbnz	w8, 431430 <wcrtomb@plt+0x2c940>
  431414:	ldur	x23, [x29, #-16]
  431418:	tbz	w20, #8, 431454 <wcrtomb@plt+0x2c964>
  43141c:	b	431498 <wcrtomb@plt+0x2c9a8>
  431420:	mov	x21, x28
  431424:	ldur	w8, [x29, #-20]
  431428:	mov	w20, wzr
  43142c:	cbz	w8, 431414 <wcrtomb@plt+0x2c924>
  431430:	ldur	x23, [x29, #-16]
  431434:	cmp	x21, x23
  431438:	b.ls	431450 <wcrtomb@plt+0x2c960>  // b.plast
  43143c:	cbz	x25, 431450 <wcrtomb@plt+0x2c960>
  431440:	ldr	w8, [x25, #16]
  431444:	mov	w20, wzr
  431448:	orr	w8, w8, #0x10
  43144c:	str	w8, [x25, #16]
  431450:	tbnz	w20, #8, 431498 <wcrtomb@plt+0x2c9a8>
  431454:	cmp	x21, x23
  431458:	b.ne	431498 <wcrtomb@plt+0x2c9a8>  // b.any
  43145c:	ldrb	w8, [x19, #35]
  431460:	str	x23, [x19, #184]
  431464:	tbnz	w8, #5, 4314e4 <wcrtomb@plt+0x2c9f4>
  431468:	ldur	w8, [x29, #-4]
  43146c:	cbz	w8, 431490 <wcrtomb@plt+0x2c9a0>
  431470:	cbnz	x27, 43147c <wcrtomb@plt+0x2c98c>
  431474:	ldr	x27, [x19, #208]
  431478:	cbz	x27, 431490 <wcrtomb@plt+0x2c9a0>
  43147c:	ldr	w8, [x27, #16]
  431480:	orr	w8, w8, #0x4
  431484:	str	w8, [x27, #16]
  431488:	ldr	x27, [x27, #8]
  43148c:	cbnz	x27, 43147c <wcrtomb@plt+0x2c98c>
  431490:	mov	w0, #0x1                   	// #1
  431494:	b	431668 <wcrtomb@plt+0x2cb78>
  431498:	mov	w0, #0x1                   	// #1
  43149c:	mov	w1, #0x28                  	// #40
  4314a0:	bl	4043d0 <calloc@plt>
  4314a4:	cbz	x0, 4314ec <wcrtomb@plt+0x2c9fc>
  4314a8:	mov	w8, #0xfd                  	// #253
  4314ac:	add	x9, x19, #0xd0
  4314b0:	add	x10, x25, #0x8
  4314b4:	cmp	x25, #0x0
  4314b8:	stp	x23, x21, [x0, #24]
  4314bc:	and	w8, w20, w8
  4314c0:	csel	x9, x9, x10, eq  // eq = none
  4314c4:	mov	x23, x21
  4314c8:	stp	x25, xzr, [x0]
  4314cc:	str	w8, [x0, #16]
  4314d0:	str	x0, [x9]
  4314d4:	str	x0, [x19, #216]
  4314d8:	ldrb	w8, [x19, #35]
  4314dc:	str	x23, [x19, #184]
  4314e0:	tbz	w8, #5, 431468 <wcrtomb@plt+0x2c978>
  4314e4:	mov	w0, wzr
  4314e8:	b	431668 <wcrtomb@plt+0x2cb78>
  4314ec:	bl	4049c0 <__errno_location@plt>
  4314f0:	mov	w8, #0xc                   	// #12
  4314f4:	str	w8, [x0]
  4314f8:	ldr	w8, [x19, #32]
  4314fc:	mov	w9, #0x2                   	// #2
  431500:	str	w9, [x19, #192]
  431504:	tbnz	w8, #7, 43152c <wcrtomb@plt+0x2ca3c>
  431508:	tbnz	w8, #4, 431540 <wcrtomb@plt+0x2ca50>
  43150c:	mov	x26, x23
  431510:	tbnz	w8, #3, 43164c <wcrtomb@plt+0x2cb5c>
  431514:	mov	x0, x19
  431518:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  43151c:	mov	x23, x19
  431520:	ldr	x22, [x23, #208]!
  431524:	cbnz	x22, 431698 <wcrtomb@plt+0x2cba8>
  431528:	b	431658 <wcrtomb@plt+0x2cb68>
  43152c:	ldr	x8, [x19, #88]
  431530:	mov	x0, x19
  431534:	blr	x8
  431538:	ldr	w8, [x19, #32]
  43153c:	tbz	w8, #4, 43150c <wcrtomb@plt+0x2ca1c>
  431540:	ldr	w8, [x19, #192]
  431544:	ldr	x22, [x19, #96]
  431548:	cmp	w8, #0x9
  43154c:	b.eq	4315c0 <wcrtomb@plt+0x2cad0>  // b.none
  431550:	cmp	w8, #0x1
  431554:	b.ne	4315c8 <wcrtomb@plt+0x2cad8>  // b.any
  431558:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43155c:	add	x1, x1, #0x221
  431560:	mov	w2, #0x5                   	// #5
  431564:	mov	x0, xzr
  431568:	bl	4048b0 <dcgettext@plt>
  43156c:	ldr	x8, [x19, #168]
  431570:	ldr	x2, [x19, #184]
  431574:	ldrb	w1, [x8, x2]
  431578:	blr	x22
  43157c:	b	431640 <wcrtomb@plt+0x2cb50>
  431580:	ldrb	w8, [x19, #32]
  431584:	mov	w9, #0x1                   	// #1
  431588:	str	x21, [x19, #184]
  43158c:	str	w9, [x19, #192]
  431590:	tbz	w8, #4, 431664 <wcrtomb@plt+0x2cb74>
  431594:	ldr	x20, [x19, #96]
  431598:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43159c:	add	x1, x1, #0x221
  4315a0:	mov	w2, #0x5                   	// #5
  4315a4:	mov	x0, xzr
  4315a8:	bl	4048b0 <dcgettext@plt>
  4315ac:	ldr	x8, [x19, #168]
  4315b0:	ldr	x2, [x19, #184]
  4315b4:	ldrb	w1, [x8, x2]
  4315b8:	blr	x20
  4315bc:	b	431664 <wcrtomb@plt+0x2cb74>
  4315c0:	add	x8, x19, #0xc8
  4315c4:	b	4315e8 <wcrtomb@plt+0x2caf8>
  4315c8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4315cc:	ldr	w9, [x9, #4000]
  4315d0:	sxtw	x8, w8
  4315d4:	cmp	w8, w9
  4315d8:	b.ge	43162c <wcrtomb@plt+0x2cb3c>  // b.tcont
  4315dc:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4315e0:	add	x9, x9, #0xf58
  4315e4:	add	x8, x9, x8, lsl #3
  4315e8:	ldr	x1, [x8]
  4315ec:	b	431634 <wcrtomb@plt+0x2cb44>
  4315f0:	bl	4049c0 <__errno_location@plt>
  4315f4:	mov	w8, #0xc                   	// #12
  4315f8:	str	w8, [x0]
  4315fc:	ldr	w8, [x19, #32]
  431600:	mov	w9, #0x2                   	// #2
  431604:	str	w9, [x19, #192]
  431608:	tbnz	w8, #7, 4316bc <wcrtomb@plt+0x2cbcc>
  43160c:	mov	x20, x26
  431610:	tbnz	w8, #4, 4316d4 <wcrtomb@plt+0x2cbe4>
  431614:	tbnz	w8, #3, 431778 <wcrtomb@plt+0x2cc88>
  431618:	mov	x0, x19
  43161c:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  431620:	ldr	x20, [x20]
  431624:	cbnz	x20, 4317ac <wcrtomb@plt+0x2ccbc>
  431628:	b	431780 <wcrtomb@plt+0x2cc90>
  43162c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431630:	add	x1, x1, #0x213
  431634:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431638:	add	x0, x0, #0x274
  43163c:	blr	x22
  431640:	ldr	w8, [x19, #32]
  431644:	mov	x26, x23
  431648:	tbz	w8, #3, 431514 <wcrtomb@plt+0x2ca24>
  43164c:	mov	x23, x19
  431650:	ldr	x22, [x23, #208]!
  431654:	cbnz	x22, 431698 <wcrtomb@plt+0x2cba8>
  431658:	stp	xzr, xzr, [x23]
  43165c:	ldr	w8, [x19, #192]
  431660:	cbz	w8, 4316b0 <wcrtomb@plt+0x2cbc0>
  431664:	mov	w0, #0x2                   	// #2
  431668:	ldp	x20, x19, [sp, #144]
  43166c:	ldp	x22, x21, [sp, #128]
  431670:	ldp	x24, x23, [sp, #112]
  431674:	ldp	x26, x25, [sp, #96]
  431678:	ldp	x28, x27, [sp, #80]
  43167c:	ldp	x29, x30, [sp, #64]
  431680:	add	sp, sp, #0xa0
  431684:	ret
  431688:	mov	x0, x22
  43168c:	bl	4046b0 <free@plt>
  431690:	mov	x22, x24
  431694:	cbz	x24, 431658 <wcrtomb@plt+0x2cb68>
  431698:	ldrb	w8, [x22, #16]
  43169c:	ldr	x24, [x22, #8]
  4316a0:	tbz	w8, #1, 431688 <wcrtomb@plt+0x2cb98>
  4316a4:	ldr	x0, [x22, #24]
  4316a8:	bl	4046b0 <free@plt>
  4316ac:	b	431688 <wcrtomb@plt+0x2cb98>
  4316b0:	mov	x25, xzr
  4316b4:	mov	x23, x26
  4316b8:	b	4314a8 <wcrtomb@plt+0x2c9b8>
  4316bc:	ldr	x8, [x19, #88]
  4316c0:	mov	x0, x19
  4316c4:	blr	x8
  4316c8:	ldr	w8, [x19, #32]
  4316cc:	mov	x20, x26
  4316d0:	tbz	w8, #4, 431614 <wcrtomb@plt+0x2cb24>
  4316d4:	ldr	w8, [x19, #192]
  4316d8:	ldr	x20, [x19, #96]
  4316dc:	cmp	w8, #0x9
  4316e0:	b.eq	43174c <wcrtomb@plt+0x2cc5c>  // b.none
  4316e4:	cmp	w8, #0x1
  4316e8:	b.ne	431728 <wcrtomb@plt+0x2cc38>  // b.any
  4316ec:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4316f0:	add	x1, x1, #0x221
  4316f4:	mov	w2, #0x5                   	// #5
  4316f8:	mov	x0, xzr
  4316fc:	bl	4048b0 <dcgettext@plt>
  431700:	ldr	x8, [x19, #168]
  431704:	ldr	x2, [x19, #184]
  431708:	ldrb	w1, [x8, x2]
  43170c:	blr	x20
  431710:	b	43176c <wcrtomb@plt+0x2cc7c>
  431714:	mov	x21, x26
  431718:	ldur	w8, [x29, #-20]
  43171c:	mov	w20, wzr
  431720:	cbnz	w8, 431430 <wcrtomb@plt+0x2c940>
  431724:	b	431414 <wcrtomb@plt+0x2c924>
  431728:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43172c:	ldr	w9, [x9, #4000]
  431730:	sxtw	x8, w8
  431734:	cmp	w8, w9
  431738:	b.ge	431758 <wcrtomb@plt+0x2cc68>  // b.tcont
  43173c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  431740:	add	x9, x9, #0xf58
  431744:	add	x8, x9, x8, lsl #3
  431748:	str	x8, [sp, #16]
  43174c:	ldr	x8, [sp, #16]
  431750:	ldr	x1, [x8]
  431754:	b	431760 <wcrtomb@plt+0x2cc70>
  431758:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43175c:	add	x1, x1, #0x213
  431760:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431764:	add	x0, x0, #0x274
  431768:	blr	x20
  43176c:	ldr	w8, [x19, #32]
  431770:	mov	x20, x26
  431774:	tbz	w8, #3, 431618 <wcrtomb@plt+0x2cb28>
  431778:	ldr	x20, [x20]
  43177c:	cbnz	x20, 4317ac <wcrtomb@plt+0x2ccbc>
  431780:	mov	x8, x26
  431784:	stp	xzr, xzr, [x26]
  431788:	ldr	w8, [x19, #192]
  43178c:	cbnz	w8, 431664 <wcrtomb@plt+0x2cb74>
  431790:	ldur	x20, [x29, #-16]
  431794:	mov	x25, xzr
  431798:	b	4313dc <wcrtomb@plt+0x2c8ec>
  43179c:	mov	x0, x20
  4317a0:	bl	4046b0 <free@plt>
  4317a4:	mov	x20, x23
  4317a8:	cbz	x23, 431780 <wcrtomb@plt+0x2cc90>
  4317ac:	ldrb	w8, [x20, #16]
  4317b0:	ldr	x23, [x20, #8]
  4317b4:	tbz	w8, #1, 43179c <wcrtomb@plt+0x2ccac>
  4317b8:	ldr	x0, [x20, #24]
  4317bc:	bl	4046b0 <free@plt>
  4317c0:	b	43179c <wcrtomb@plt+0x2ccac>
  4317c4:	stp	x29, x30, [sp, #-96]!
  4317c8:	stp	x28, x27, [sp, #16]
  4317cc:	stp	x26, x25, [sp, #32]
  4317d0:	stp	x24, x23, [sp, #48]
  4317d4:	stp	x22, x21, [sp, #64]
  4317d8:	stp	x20, x19, [sp, #80]
  4317dc:	ldr	x20, [x0, #208]
  4317e0:	mov	x29, sp
  4317e4:	cbz	x20, 4318e0 <wcrtomb@plt+0x2cdf0>
  4317e8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4317ec:	mov	x19, x0
  4317f0:	mov	w21, wzr
  4317f4:	mov	w26, #0x2d                  	// #45
  4317f8:	add	x22, x22, #0x948
  4317fc:	mov	w28, #0x71                  	// #113
  431800:	mov	w23, #0x45                  	// #69
  431804:	mov	w24, #0x6a                  	// #106
  431808:	mov	w25, #0x73                  	// #115
  43180c:	mov	w27, #0x64                  	// #100
  431810:	b	43184c <wcrtomb@plt+0x2cd5c>
  431814:	ldr	w9, [x20, #32]
  431818:	ldr	x10, [x20, #24]
  43181c:	ldr	x11, [x19, #168]
  431820:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431824:	add	x0, x0, #0x2d5
  431828:	sub	w6, w9, w10
  43182c:	add	x7, x11, x10
  431830:	mov	w2, w21
  431834:	mov	x3, x20
  431838:	mov	x5, x22
  43183c:	blr	x8
  431840:	ldr	x20, [x20, #8]
  431844:	add	w21, w21, #0x1
  431848:	cbz	x20, 4318e0 <wcrtomb@plt+0x2cdf0>
  43184c:	ldr	w4, [x20, #16]
  431850:	mov	w9, #0x6e                  	// #110
  431854:	mov	w10, #0x77                  	// #119
  431858:	ldr	x8, [x19, #104]
  43185c:	tst	w4, #0x1
  431860:	csel	w9, w26, w9, eq  // eq = none
  431864:	tst	w4, #0x2
  431868:	csel	w9, w9, w10, eq  // eq = none
  43186c:	tst	w4, #0x4
  431870:	ldr	w1, [x19, #224]
  431874:	strb	w9, [x22]
  431878:	csel	w9, w26, w28, eq  // eq = none
  43187c:	tst	w4, #0x8
  431880:	strb	w9, [x22, #1]
  431884:	csel	w9, w26, w23, eq  // eq = none
  431888:	tst	w4, #0x10
  43188c:	strb	w9, [x22, #2]
  431890:	csel	w9, w26, w24, eq  // eq = none
  431894:	tst	w4, #0x20
  431898:	strb	w9, [x22, #3]
  43189c:	csel	w9, w26, w25, eq  // eq = none
  4318a0:	tst	w4, #0x40
  4318a4:	strb	w9, [x22, #4]
  4318a8:	csel	w9, w26, w27, eq  // eq = none
  4318ac:	strb	w9, [x22, #5]
  4318b0:	strb	wzr, [x22, #6]
  4318b4:	tbz	w4, #1, 431814 <wcrtomb@plt+0x2cd24>
  4318b8:	ldr	x6, [x20, #24]
  4318bc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4318c0:	add	x0, x0, #0x2b6
  4318c4:	mov	w2, w21
  4318c8:	mov	x3, x20
  4318cc:	mov	x5, x22
  4318d0:	blr	x8
  4318d4:	ldr	x20, [x20, #8]
  4318d8:	add	w21, w21, #0x1
  4318dc:	cbnz	x20, 43184c <wcrtomb@plt+0x2cd5c>
  4318e0:	ldp	x20, x19, [sp, #80]
  4318e4:	ldp	x22, x21, [sp, #64]
  4318e8:	ldp	x24, x23, [sp, #48]
  4318ec:	ldp	x26, x25, [sp, #32]
  4318f0:	ldp	x28, x27, [sp, #16]
  4318f4:	ldp	x29, x30, [sp], #96
  4318f8:	ret
  4318fc:	stp	x29, x30, [sp, #-48]!
  431900:	stp	x22, x21, [sp, #16]
  431904:	stp	x20, x19, [sp, #32]
  431908:	ldr	x8, [x0, #208]
  43190c:	mov	x29, sp
  431910:	cbz	x8, 431a6c <wcrtomb@plt+0x2cf7c>
  431914:	mov	x10, #0x600                 	// #1536
  431918:	mov	x19, x0
  43191c:	mov	w9, #0x1                   	// #1
  431920:	movk	x10, #0x1, lsl #32
  431924:	b	43192c <wcrtomb@plt+0x2ce3c>
  431928:	cbz	x8, 4319d4 <wcrtomb@plt+0x2cee4>
  43192c:	ldrb	w11, [x8, #16]
  431930:	tbnz	w11, #2, 43196c <wcrtomb@plt+0x2ce7c>
  431934:	ldp	x11, x12, [x8, #24]
  431938:	cmp	x11, x12
  43193c:	b.cs	431968 <wcrtomb@plt+0x2ce78>  // b.hs, b.nlast
  431940:	ldr	x13, [x19, #168]
  431944:	ldrb	w14, [x13, x11]
  431948:	cmp	w14, #0x20
  43194c:	b.hi	431968 <wcrtomb@plt+0x2ce78>  // b.pmore
  431950:	lsl	x14, x9, x14
  431954:	tst	x14, x10
  431958:	b.eq	431968 <wcrtomb@plt+0x2ce78>  // b.none
  43195c:	add	x11, x11, #0x1
  431960:	cmp	x11, x12
  431964:	b.cc	431944 <wcrtomb@plt+0x2ce54>  // b.lo, b.ul, b.last
  431968:	str	x11, [x8, #24]
  43196c:	mov	x11, x8
  431970:	ldr	x8, [x8, #8]
  431974:	ldr	w12, [x11, #16]
  431978:	cbz	x8, 431980 <wcrtomb@plt+0x2ce90>
  43197c:	tbnz	w12, #4, 43196c <wcrtomb@plt+0x2ce7c>
  431980:	tbnz	w12, #2, 431928 <wcrtomb@plt+0x2ce38>
  431984:	ldp	x14, x13, [x11, #24]
  431988:	cmp	x13, x14
  43198c:	b.ls	4319bc <wcrtomb@plt+0x2cecc>  // b.plast
  431990:	ldr	x15, [x19, #168]
  431994:	sub	x15, x15, #0x1
  431998:	ldrb	w16, [x15, x13]
  43199c:	cmp	w16, #0x20
  4319a0:	b.hi	4319bc <wcrtomb@plt+0x2cecc>  // b.pmore
  4319a4:	lsl	x16, x9, x16
  4319a8:	tst	x16, x10
  4319ac:	b.eq	4319bc <wcrtomb@plt+0x2cecc>  // b.none
  4319b0:	sub	x13, x13, #0x1
  4319b4:	cmp	x13, x14
  4319b8:	b.hi	431998 <wcrtomb@plt+0x2cea8>  // b.pmore
  4319bc:	cmp	x14, x13
  4319c0:	str	x13, [x11, #32]
  4319c4:	b.ne	431928 <wcrtomb@plt+0x2ce38>  // b.any
  4319c8:	orr	w12, w12, #0x1
  4319cc:	str	w12, [x11, #16]
  4319d0:	b	431928 <wcrtomb@plt+0x2ce38>
  4319d4:	ldr	x20, [x19, #208]
  4319d8:	cbz	x20, 431a6c <wcrtomb@plt+0x2cf7c>
  4319dc:	add	x21, x19, #0xd8
  4319e0:	b	4319f4 <wcrtomb@plt+0x2cf04>
  4319e4:	mov	x0, x20
  4319e8:	bl	4046b0 <free@plt>
  4319ec:	mov	x20, x22
  4319f0:	cbz	x22, 431a6c <wcrtomb@plt+0x2cf7c>
  4319f4:	ldr	w8, [x20, #16]
  4319f8:	ldr	x22, [x20, #8]
  4319fc:	tbz	w8, #6, 431a18 <wcrtomb@plt+0x2cf28>
  431a00:	ldr	x9, [x20]
  431a04:	cbz	x9, 431a18 <wcrtomb@plt+0x2cf28>
  431a08:	ldr	w8, [x9, #16]
  431a0c:	and	w8, w8, #0xffffffef
  431a10:	str	w8, [x9, #16]
  431a14:	ldr	w8, [x20, #16]
  431a18:	tbz	w8, #0, 4319ec <wcrtomb@plt+0x2cefc>
  431a1c:	ldr	x9, [x20]
  431a20:	cbz	x9, 431a44 <wcrtomb@plt+0x2cf54>
  431a24:	str	x22, [x9, #8]
  431a28:	ldr	x10, [x20, #8]
  431a2c:	cbnz	x10, 431a54 <wcrtomb@plt+0x2cf64>
  431a30:	ldr	w8, [x9, #16]
  431a34:	and	w8, w8, #0xffffffef
  431a38:	str	w8, [x9, #16]
  431a3c:	ldr	w8, [x20, #16]
  431a40:	b	431a50 <wcrtomb@plt+0x2cf60>
  431a44:	mov	x10, x22
  431a48:	str	x22, [x19, #208]
  431a4c:	cbnz	x22, 431a54 <wcrtomb@plt+0x2cf64>
  431a50:	mov	x10, x21
  431a54:	str	x9, [x10]
  431a58:	stp	xzr, xzr, [x20]
  431a5c:	tbz	w8, #1, 4319e4 <wcrtomb@plt+0x2cef4>
  431a60:	ldr	x0, [x20, #24]
  431a64:	bl	4046b0 <free@plt>
  431a68:	b	4319e4 <wcrtomb@plt+0x2cef4>
  431a6c:	ldp	x20, x19, [sp, #32]
  431a70:	ldp	x22, x21, [sp, #16]
  431a74:	mov	w0, wzr
  431a78:	ldp	x29, x30, [sp], #48
  431a7c:	ret
  431a80:	stp	x29, x30, [sp, #-48]!
  431a84:	stp	x22, x21, [sp, #16]
  431a88:	stp	x20, x19, [sp, #32]
  431a8c:	ldr	x1, [x0, #208]
  431a90:	mov	x29, sp
  431a94:	cbz	x1, 431b84 <wcrtomb@plt+0x2d094>
  431a98:	adrp	x20, 433000 <wcrtomb@plt+0x2e510>
  431a9c:	adrp	x21, 433000 <wcrtomb@plt+0x2e510>
  431aa0:	mov	x19, x0
  431aa4:	add	x20, x20, #0x1f4
  431aa8:	add	x21, x21, #0x200
  431aac:	b	431ab8 <wcrtomb@plt+0x2cfc8>
  431ab0:	mov	x1, x22
  431ab4:	cbz	x22, 431aec <wcrtomb@plt+0x2cffc>
  431ab8:	ldrb	w8, [x1, #16]
  431abc:	ldr	x22, [x1, #8]
  431ac0:	tbnz	w8, #3, 431ab0 <wcrtomb@plt+0x2cfc0>
  431ac4:	mov	x0, x19
  431ac8:	mov	x2, x20
  431acc:	mov	x3, x21
  431ad0:	bl	432fc0 <wcrtomb@plt+0x2e4d0>
  431ad4:	cbz	w0, 431ab0 <wcrtomb@plt+0x2cfc0>
  431ad8:	mov	w0, #0x1                   	// #1
  431adc:	ldp	x20, x19, [sp, #32]
  431ae0:	ldp	x22, x21, [sp, #16]
  431ae4:	ldp	x29, x30, [sp], #48
  431ae8:	ret
  431aec:	ldr	x20, [x19, #208]
  431af0:	cbz	x20, 431b84 <wcrtomb@plt+0x2d094>
  431af4:	add	x21, x19, #0xd8
  431af8:	b	431b0c <wcrtomb@plt+0x2d01c>
  431afc:	mov	x0, x20
  431b00:	bl	4046b0 <free@plt>
  431b04:	mov	x20, x22
  431b08:	cbz	x22, 431b84 <wcrtomb@plt+0x2d094>
  431b0c:	ldr	w8, [x20, #16]
  431b10:	ldr	x22, [x20, #8]
  431b14:	tbz	w8, #6, 431b30 <wcrtomb@plt+0x2d040>
  431b18:	ldr	x9, [x20]
  431b1c:	cbz	x9, 431b30 <wcrtomb@plt+0x2d040>
  431b20:	ldr	w8, [x9, #16]
  431b24:	and	w8, w8, #0xffffffef
  431b28:	str	w8, [x9, #16]
  431b2c:	ldr	w8, [x20, #16]
  431b30:	tbz	w8, #0, 431b04 <wcrtomb@plt+0x2d014>
  431b34:	ldr	x9, [x20]
  431b38:	cbz	x9, 431b5c <wcrtomb@plt+0x2d06c>
  431b3c:	str	x22, [x9, #8]
  431b40:	ldr	x10, [x20, #8]
  431b44:	cbnz	x10, 431b6c <wcrtomb@plt+0x2d07c>
  431b48:	ldr	w8, [x9, #16]
  431b4c:	and	w8, w8, #0xffffffef
  431b50:	str	w8, [x9, #16]
  431b54:	ldr	w8, [x20, #16]
  431b58:	b	431b68 <wcrtomb@plt+0x2d078>
  431b5c:	mov	x10, x22
  431b60:	str	x22, [x19, #208]
  431b64:	cbnz	x22, 431b6c <wcrtomb@plt+0x2d07c>
  431b68:	mov	x10, x21
  431b6c:	str	x9, [x10]
  431b70:	stp	xzr, xzr, [x20]
  431b74:	tbz	w8, #1, 431afc <wcrtomb@plt+0x2d00c>
  431b78:	ldr	x0, [x20, #24]
  431b7c:	bl	4046b0 <free@plt>
  431b80:	b	431afc <wcrtomb@plt+0x2d00c>
  431b84:	mov	w0, wzr
  431b88:	ldp	x20, x19, [sp, #32]
  431b8c:	ldp	x22, x21, [sp, #16]
  431b90:	ldp	x29, x30, [sp], #48
  431b94:	ret
  431b98:	sub	sp, sp, #0x80
  431b9c:	stp	x29, x30, [sp, #32]
  431ba0:	add	x29, sp, #0x20
  431ba4:	stp	x28, x27, [sp, #48]
  431ba8:	stp	x26, x25, [sp, #64]
  431bac:	stp	x24, x23, [sp, #80]
  431bb0:	stp	x22, x21, [sp, #96]
  431bb4:	stp	x20, x19, [sp, #112]
  431bb8:	stur	x0, [x29, #-8]
  431bbc:	ldr	x27, [x0, #208]!
  431bc0:	cbz	x27, 431d6c <wcrtomb@plt+0x2d27c>
  431bc4:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x1be3c>
  431bc8:	mov	x20, xzr
  431bcc:	add	x26, x26, #0xb36
  431bd0:	stp	x0, xzr, [sp, #8]
  431bd4:	b	431bec <wcrtomb@plt+0x2d0fc>
  431bd8:	orr	w8, w8, #0x2
  431bdc:	str	x21, [x27, #24]
  431be0:	str	w8, [x27, #16]
  431be4:	ldr	x27, [x27, #8]
  431be8:	cbz	x27, 431d70 <wcrtomb@plt+0x2d280>
  431bec:	ldr	w8, [x27, #16]
  431bf0:	tbnz	w8, #2, 431be4 <wcrtomb@plt+0x2d0f4>
  431bf4:	mov	x28, x26
  431bf8:	tbnz	w8, #0, 431c10 <wcrtomb@plt+0x2d120>
  431bfc:	tbnz	w8, #1, 431c3c <wcrtomb@plt+0x2d14c>
  431c00:	ldur	x9, [x29, #-8]
  431c04:	ldr	x10, [x27, #24]
  431c08:	ldr	x9, [x9, #168]
  431c0c:	add	x28, x9, x10
  431c10:	ldrb	w9, [x28]
  431c14:	cmp	w9, #0x7e
  431c18:	b.ne	431be4 <wcrtomb@plt+0x2d0f4>  // b.any
  431c1c:	tbnz	w8, #0, 431c50 <wcrtomb@plt+0x2d160>
  431c20:	tbnz	w8, #1, 431ccc <wcrtomb@plt+0x2d1dc>
  431c24:	ldp	x9, x8, [x27, #24]
  431c28:	sub	x21, x8, x9
  431c2c:	mov	w22, #0x1                   	// #1
  431c30:	cmp	x21, #0x2
  431c34:	b.cs	431ce4 <wcrtomb@plt+0x2d1f4>  // b.hs, b.nlast
  431c38:	b	431d00 <wcrtomb@plt+0x2d210>
  431c3c:	ldr	x28, [x27, #24]
  431c40:	ldrb	w9, [x28]
  431c44:	cmp	w9, #0x7e
  431c48:	b.ne	431be4 <wcrtomb@plt+0x2d0f4>  // b.any
  431c4c:	b	431c1c <wcrtomb@plt+0x2d12c>
  431c50:	mov	x21, xzr
  431c54:	bl	404030 <getuid@plt>
  431c58:	bl	404620 <getpwuid@plt>
  431c5c:	mov	x23, x0
  431c60:	mov	w22, #0x1                   	// #1
  431c64:	cbz	x23, 431be4 <wcrtomb@plt+0x2d0f4>
  431c68:	ldr	x0, [x23, #32]
  431c6c:	bl	403f00 <strlen@plt>
  431c70:	sub	x19, x21, x22
  431c74:	add	x25, x0, x19
  431c78:	mov	x24, x0
  431c7c:	mov	x0, x25
  431c80:	bl	404210 <malloc@plt>
  431c84:	cbz	x0, 431d9c <wcrtomb@plt+0x2d2ac>
  431c88:	ldr	x1, [x23, #32]
  431c8c:	mov	x2, x24
  431c90:	mov	x21, x0
  431c94:	add	x23, x25, x0
  431c98:	bl	403e80 <memcpy@plt>
  431c9c:	add	x8, x28, x22
  431ca0:	add	x0, x21, x24
  431ca4:	add	x1, x8, #0x1
  431ca8:	sub	x2, x19, #0x1
  431cac:	bl	403e80 <memcpy@plt>
  431cb0:	sturb	wzr, [x23, #-1]
  431cb4:	ldr	w8, [x27, #16]
  431cb8:	tbz	w8, #1, 431bd8 <wcrtomb@plt+0x2d0e8>
  431cbc:	ldr	x0, [x27, #24]
  431cc0:	bl	4046b0 <free@plt>
  431cc4:	ldr	w8, [x27, #16]
  431cc8:	b	431bd8 <wcrtomb@plt+0x2d0e8>
  431ccc:	ldr	x0, [x27, #24]
  431cd0:	bl	403f00 <strlen@plt>
  431cd4:	mov	x21, x0
  431cd8:	mov	w22, #0x1                   	// #1
  431cdc:	cmp	x21, #0x2
  431ce0:	b.cc	431d00 <wcrtomb@plt+0x2d210>  // b.lo, b.ul, b.last
  431ce4:	ldrb	w8, [x28, x22]
  431ce8:	cmp	w8, #0x2f
  431cec:	b.eq	431d00 <wcrtomb@plt+0x2d210>  // b.none
  431cf0:	add	x22, x22, #0x1
  431cf4:	cmp	x21, x22
  431cf8:	b.ne	431ce4 <wcrtomb@plt+0x2d1f4>  // b.any
  431cfc:	b	431be4 <wcrtomb@plt+0x2d0f4>
  431d00:	cmp	x22, x21
  431d04:	b.eq	431be4 <wcrtomb@plt+0x2d0f4>  // b.none
  431d08:	cmp	x22, #0x2
  431d0c:	b.cc	431c54 <wcrtomb@plt+0x2d164>  // b.lo, b.ul, b.last
  431d10:	ldr	x8, [sp, #16]
  431d14:	cmp	x22, x8
  431d18:	b.ls	431d38 <wcrtomb@plt+0x2d248>  // b.plast
  431d1c:	mov	x0, x20
  431d20:	mov	x1, x22
  431d24:	bl	404450 <realloc@plt>
  431d28:	mov	x24, x0
  431d2c:	str	x22, [sp, #16]
  431d30:	cbnz	x0, 431d3c <wcrtomb@plt+0x2d24c>
  431d34:	b	431e74 <wcrtomb@plt+0x2d384>
  431d38:	mov	x24, x20
  431d3c:	sub	x22, x22, #0x1
  431d40:	add	x1, x28, #0x1
  431d44:	mov	x0, x24
  431d48:	mov	x2, x22
  431d4c:	bl	403e80 <memcpy@plt>
  431d50:	mov	x0, x24
  431d54:	strb	wzr, [x24, x22]
  431d58:	bl	404350 <getpwnam@plt>
  431d5c:	mov	x23, x0
  431d60:	mov	x20, x24
  431d64:	cbnz	x23, 431c68 <wcrtomb@plt+0x2d178>
  431d68:	b	431be4 <wcrtomb@plt+0x2d0f4>
  431d6c:	mov	x20, xzr
  431d70:	mov	x0, x20
  431d74:	bl	4046b0 <free@plt>
  431d78:	mov	w0, wzr
  431d7c:	ldp	x20, x19, [sp, #112]
  431d80:	ldp	x22, x21, [sp, #96]
  431d84:	ldp	x24, x23, [sp, #80]
  431d88:	ldp	x26, x25, [sp, #64]
  431d8c:	ldp	x28, x27, [sp, #48]
  431d90:	ldp	x29, x30, [sp, #32]
  431d94:	add	sp, sp, #0x80
  431d98:	ret
  431d9c:	mov	x0, x20
  431da0:	bl	4046b0 <free@plt>
  431da4:	bl	4049c0 <__errno_location@plt>
  431da8:	ldur	x10, [x29, #-8]
  431dac:	mov	w8, #0xc                   	// #12
  431db0:	str	w8, [x0]
  431db4:	mov	w9, #0x2                   	// #2
  431db8:	ldr	w8, [x10, #32]
  431dbc:	str	w9, [x10, #192]
  431dc0:	tbnz	w8, #7, 431ddc <wcrtomb@plt+0x2d2ec>
  431dc4:	ldr	x21, [sp, #8]
  431dc8:	tbnz	w8, #4, 431df8 <wcrtomb@plt+0x2d308>
  431dcc:	tbz	w8, #3, 431ed4 <wcrtomb@plt+0x2d3e4>
  431dd0:	ldr	x20, [x21]
  431dd4:	cbnz	x20, 431f04 <wcrtomb@plt+0x2d414>
  431dd8:	b	431ee4 <wcrtomb@plt+0x2d3f4>
  431ddc:	ldur	x19, [x29, #-8]
  431de0:	ldr	x8, [x19, #88]
  431de4:	mov	x0, x19
  431de8:	blr	x8
  431dec:	ldr	w8, [x19, #32]
  431df0:	ldr	x21, [sp, #8]
  431df4:	tbz	w8, #4, 431dcc <wcrtomb@plt+0x2d2dc>
  431df8:	ldur	x9, [x29, #-8]
  431dfc:	ldr	w8, [x9, #192]
  431e00:	ldr	x20, [x9, #96]
  431e04:	cmp	w8, #0x9
  431e08:	b.eq	431e40 <wcrtomb@plt+0x2d350>  // b.none
  431e0c:	cmp	w8, #0x1
  431e10:	b.ne	431e4c <wcrtomb@plt+0x2d35c>  // b.any
  431e14:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431e18:	add	x1, x1, #0x221
  431e1c:	mov	w2, #0x5                   	// #5
  431e20:	mov	x0, xzr
  431e24:	bl	4048b0 <dcgettext@plt>
  431e28:	ldur	x9, [x29, #-8]
  431e2c:	ldr	x8, [x9, #168]
  431e30:	ldr	x2, [x9, #184]
  431e34:	ldrb	w1, [x8, x2]
  431e38:	blr	x20
  431e3c:	b	431ec8 <wcrtomb@plt+0x2d3d8>
  431e40:	ldur	x8, [x29, #-8]
  431e44:	add	x8, x8, #0xc8
  431e48:	b	431e6c <wcrtomb@plt+0x2d37c>
  431e4c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  431e50:	ldr	w9, [x9, #4000]
  431e54:	sxtw	x8, w8
  431e58:	cmp	w8, w9
  431e5c:	b.ge	431eb4 <wcrtomb@plt+0x2d3c4>  // b.tcont
  431e60:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  431e64:	add	x9, x9, #0xf58
  431e68:	add	x8, x9, x8, lsl #3
  431e6c:	ldr	x1, [x8]
  431e70:	b	431ebc <wcrtomb@plt+0x2d3cc>
  431e74:	mov	x0, x20
  431e78:	bl	4046b0 <free@plt>
  431e7c:	bl	4049c0 <__errno_location@plt>
  431e80:	ldur	x10, [x29, #-8]
  431e84:	mov	w8, #0xc                   	// #12
  431e88:	str	w8, [x0]
  431e8c:	mov	w9, #0x2                   	// #2
  431e90:	ldr	w8, [x10, #32]
  431e94:	str	w9, [x10, #192]
  431e98:	tbnz	w8, #7, 431f1c <wcrtomb@plt+0x2d42c>
  431e9c:	ldr	x21, [sp, #8]
  431ea0:	tbnz	w8, #4, 431f38 <wcrtomb@plt+0x2d448>
  431ea4:	tbz	w8, #3, 431fd4 <wcrtomb@plt+0x2d4e4>
  431ea8:	ldr	x20, [x21]
  431eac:	cbnz	x20, 431ff8 <wcrtomb@plt+0x2d508>
  431eb0:	b	431ee4 <wcrtomb@plt+0x2d3f4>
  431eb4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431eb8:	add	x1, x1, #0x213
  431ebc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431ec0:	add	x0, x0, #0x274
  431ec4:	blr	x20
  431ec8:	ldur	x8, [x29, #-8]
  431ecc:	ldr	w8, [x8, #32]
  431ed0:	tbnz	w8, #3, 431dd0 <wcrtomb@plt+0x2d2e0>
  431ed4:	ldur	x0, [x29, #-8]
  431ed8:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  431edc:	ldr	x20, [x21]
  431ee0:	cbnz	x20, 431f04 <wcrtomb@plt+0x2d414>
  431ee4:	stp	xzr, xzr, [x21]
  431ee8:	ldur	x8, [x29, #-8]
  431eec:	ldr	w0, [x8, #192]
  431ef0:	b	431d7c <wcrtomb@plt+0x2d28c>
  431ef4:	mov	x0, x20
  431ef8:	bl	4046b0 <free@plt>
  431efc:	mov	x20, x19
  431f00:	cbz	x19, 431ee4 <wcrtomb@plt+0x2d3f4>
  431f04:	ldrb	w8, [x20, #16]
  431f08:	ldr	x19, [x20, #8]
  431f0c:	tbz	w8, #1, 431ef4 <wcrtomb@plt+0x2d404>
  431f10:	ldr	x0, [x20, #24]
  431f14:	bl	4046b0 <free@plt>
  431f18:	b	431ef4 <wcrtomb@plt+0x2d404>
  431f1c:	ldur	x19, [x29, #-8]
  431f20:	ldr	x8, [x19, #88]
  431f24:	mov	x0, x19
  431f28:	blr	x8
  431f2c:	ldr	w8, [x19, #32]
  431f30:	ldr	x21, [sp, #8]
  431f34:	tbz	w8, #4, 431ea4 <wcrtomb@plt+0x2d3b4>
  431f38:	ldur	x9, [x29, #-8]
  431f3c:	ldr	w8, [x9, #192]
  431f40:	ldr	x20, [x9, #96]
  431f44:	cmp	w8, #0x9
  431f48:	b.eq	431f80 <wcrtomb@plt+0x2d490>  // b.none
  431f4c:	cmp	w8, #0x1
  431f50:	b.ne	431f8c <wcrtomb@plt+0x2d49c>  // b.any
  431f54:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431f58:	add	x1, x1, #0x221
  431f5c:	mov	w2, #0x5                   	// #5
  431f60:	mov	x0, xzr
  431f64:	bl	4048b0 <dcgettext@plt>
  431f68:	ldur	x9, [x29, #-8]
  431f6c:	ldr	x8, [x9, #168]
  431f70:	ldr	x2, [x9, #184]
  431f74:	ldrb	w1, [x8, x2]
  431f78:	blr	x20
  431f7c:	b	431fc8 <wcrtomb@plt+0x2d4d8>
  431f80:	ldur	x8, [x29, #-8]
  431f84:	add	x8, x8, #0xc8
  431f88:	b	431fac <wcrtomb@plt+0x2d4bc>
  431f8c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  431f90:	ldr	w9, [x9, #4000]
  431f94:	sxtw	x8, w8
  431f98:	cmp	w8, w9
  431f9c:	b.ge	431fb4 <wcrtomb@plt+0x2d4c4>  // b.tcont
  431fa0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  431fa4:	add	x9, x9, #0xf58
  431fa8:	add	x8, x9, x8, lsl #3
  431fac:	ldr	x1, [x8]
  431fb0:	b	431fbc <wcrtomb@plt+0x2d4cc>
  431fb4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431fb8:	add	x1, x1, #0x213
  431fbc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  431fc0:	add	x0, x0, #0x274
  431fc4:	blr	x20
  431fc8:	ldur	x8, [x29, #-8]
  431fcc:	ldr	w8, [x8, #32]
  431fd0:	tbnz	w8, #3, 431ea8 <wcrtomb@plt+0x2d3b8>
  431fd4:	ldur	x0, [x29, #-8]
  431fd8:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  431fdc:	ldr	x20, [x21]
  431fe0:	cbnz	x20, 431ff8 <wcrtomb@plt+0x2d508>
  431fe4:	b	431ee4 <wcrtomb@plt+0x2d3f4>
  431fe8:	mov	x0, x20
  431fec:	bl	4046b0 <free@plt>
  431ff0:	mov	x20, x19
  431ff4:	cbz	x19, 431ee4 <wcrtomb@plt+0x2d3f4>
  431ff8:	ldrb	w8, [x20, #16]
  431ffc:	ldr	x19, [x20, #8]
  432000:	tbz	w8, #1, 431fe8 <wcrtomb@plt+0x2d4f8>
  432004:	ldr	x0, [x20, #24]
  432008:	bl	4046b0 <free@plt>
  43200c:	b	431fe8 <wcrtomb@plt+0x2d4f8>
  432010:	stp	x29, x30, [sp, #-64]!
  432014:	stp	x22, x21, [sp, #32]
  432018:	stp	x20, x19, [sp, #48]
  43201c:	ldr	x1, [x0, #208]
  432020:	str	x23, [sp, #16]
  432024:	mov	x29, sp
  432028:	cbz	x1, 432114 <wcrtomb@plt+0x2d624>
  43202c:	adrp	x20, 434000 <wcrtomb@plt+0x2f510>
  432030:	adrp	x21, 434000 <wcrtomb@plt+0x2f510>
  432034:	mov	x19, x0
  432038:	mov	w22, #0x48                  	// #72
  43203c:	add	x20, x20, #0x4c
  432040:	add	x21, x21, #0x78
  432044:	b	432050 <wcrtomb@plt+0x2d560>
  432048:	mov	x1, x23
  43204c:	cbz	x23, 43207c <wcrtomb@plt+0x2d58c>
  432050:	ldrb	w8, [x1, #16]
  432054:	ldr	x23, [x1, #8]
  432058:	tst	w8, w22
  43205c:	b.ne	432048 <wcrtomb@plt+0x2d558>  // b.any
  432060:	mov	x0, x19
  432064:	mov	x2, x20
  432068:	mov	x3, x21
  43206c:	bl	432fc0 <wcrtomb@plt+0x2e4d0>
  432070:	cbz	w0, 432048 <wcrtomb@plt+0x2d558>
  432074:	mov	w0, #0x1                   	// #1
  432078:	b	432118 <wcrtomb@plt+0x2d628>
  43207c:	ldr	x20, [x19, #208]
  432080:	cbz	x20, 432114 <wcrtomb@plt+0x2d624>
  432084:	add	x21, x19, #0xd8
  432088:	b	43209c <wcrtomb@plt+0x2d5ac>
  43208c:	mov	x0, x20
  432090:	bl	4046b0 <free@plt>
  432094:	mov	x20, x22
  432098:	cbz	x22, 432114 <wcrtomb@plt+0x2d624>
  43209c:	ldr	w8, [x20, #16]
  4320a0:	ldr	x22, [x20, #8]
  4320a4:	tbz	w8, #6, 4320c0 <wcrtomb@plt+0x2d5d0>
  4320a8:	ldr	x9, [x20]
  4320ac:	cbz	x9, 4320c0 <wcrtomb@plt+0x2d5d0>
  4320b0:	ldr	w8, [x9, #16]
  4320b4:	and	w8, w8, #0xffffffef
  4320b8:	str	w8, [x9, #16]
  4320bc:	ldr	w8, [x20, #16]
  4320c0:	tbz	w8, #0, 432094 <wcrtomb@plt+0x2d5a4>
  4320c4:	ldr	x9, [x20]
  4320c8:	cbz	x9, 4320ec <wcrtomb@plt+0x2d5fc>
  4320cc:	str	x22, [x9, #8]
  4320d0:	ldr	x10, [x20, #8]
  4320d4:	cbnz	x10, 4320fc <wcrtomb@plt+0x2d60c>
  4320d8:	ldr	w8, [x9, #16]
  4320dc:	and	w8, w8, #0xffffffef
  4320e0:	str	w8, [x9, #16]
  4320e4:	ldr	w8, [x20, #16]
  4320e8:	b	4320f8 <wcrtomb@plt+0x2d608>
  4320ec:	mov	x10, x22
  4320f0:	str	x22, [x19, #208]
  4320f4:	cbnz	x22, 4320fc <wcrtomb@plt+0x2d60c>
  4320f8:	mov	x10, x21
  4320fc:	str	x9, [x10]
  432100:	stp	xzr, xzr, [x20]
  432104:	tbz	w8, #1, 43208c <wcrtomb@plt+0x2d59c>
  432108:	ldr	x0, [x20, #24]
  43210c:	bl	4046b0 <free@plt>
  432110:	b	43208c <wcrtomb@plt+0x2d59c>
  432114:	mov	w0, wzr
  432118:	ldp	x20, x19, [sp, #48]
  43211c:	ldp	x22, x21, [sp, #32]
  432120:	ldr	x23, [sp, #16]
  432124:	ldp	x29, x30, [sp], #64
  432128:	ret
  43212c:	sub	sp, sp, #0x90
  432130:	stp	x29, x30, [sp, #48]
  432134:	stp	x28, x27, [sp, #64]
  432138:	stp	x26, x25, [sp, #80]
  43213c:	stp	x24, x23, [sp, #96]
  432140:	stp	x22, x21, [sp, #112]
  432144:	stp	x20, x19, [sp, #128]
  432148:	mov	x8, x0
  43214c:	ldr	x26, [x8, #208]!
  432150:	add	x29, sp, #0x30
  432154:	str	x8, [sp, #8]
  432158:	cbz	x26, 432538 <wcrtomb@plt+0x2da48>
  43215c:	mov	x13, x0
  432160:	mov	w14, #0x5c                  	// #92
  432164:	stur	x0, [x29, #-16]
  432168:	b	432178 <wcrtomb@plt+0x2d688>
  43216c:	strb	wzr, [x23]
  432170:	ldr	x26, [x26, #8]
  432174:	cbz	x26, 432538 <wcrtomb@plt+0x2da48>
  432178:	ldr	w19, [x26, #16]
  43217c:	tbnz	w19, #0, 43219c <wcrtomb@plt+0x2d6ac>
  432180:	tbnz	w19, #1, 4321b0 <wcrtomb@plt+0x2d6c0>
  432184:	ldr	x8, [x13, #168]
  432188:	ldp	x9, x10, [x26, #24]
  43218c:	add	x21, x8, x9
  432190:	sub	x22, x10, x9
  432194:	tbz	w19, #3, 4321cc <wcrtomb@plt+0x2d6dc>
  432198:	b	432170 <wcrtomb@plt+0x2d680>
  43219c:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4321a0:	mov	x22, xzr
  4321a4:	add	x21, x21, #0xb36
  4321a8:	tbz	w19, #3, 4321cc <wcrtomb@plt+0x2d6dc>
  4321ac:	b	432170 <wcrtomb@plt+0x2d680>
  4321b0:	ldr	x21, [x26, #24]
  4321b4:	mov	x0, x21
  4321b8:	bl	403f00 <strlen@plt>
  4321bc:	ldur	x13, [x29, #-16]
  4321c0:	mov	w14, #0x5c                  	// #92
  4321c4:	mov	x22, x0
  4321c8:	tbnz	w19, #3, 432170 <wcrtomb@plt+0x2d680>
  4321cc:	ldr	w8, [x13, #32]
  4321d0:	and	w8, w8, #0x600
  4321d4:	cbz	w8, 432170 <wcrtomb@plt+0x2d680>
  4321d8:	tbnz	w19, #1, 43221c <wcrtomb@plt+0x2d72c>
  4321dc:	add	x0, x22, #0x1
  4321e0:	bl	404210 <malloc@plt>
  4321e4:	cbz	x0, 43255c <wcrtomb@plt+0x2da6c>
  4321e8:	mov	x1, x21
  4321ec:	mov	x2, x22
  4321f0:	mov	x23, x0
  4321f4:	bl	403e80 <memcpy@plt>
  4321f8:	strb	wzr, [x23, x22]
  4321fc:	ldr	w8, [x26, #16]
  432200:	ldur	x13, [x29, #-16]
  432204:	mov	w14, #0x5c                  	// #92
  432208:	str	x23, [x26, #24]
  43220c:	orr	w19, w8, #0x2
  432210:	str	w19, [x26, #16]
  432214:	cbnz	x22, 432224 <wcrtomb@plt+0x2d734>
  432218:	b	43216c <wcrtomb@plt+0x2d67c>
  43221c:	ldr	x23, [x26, #24]
  432220:	cbz	x22, 43216c <wcrtomb@plt+0x2d67c>
  432224:	and	w9, w19, #0x4
  432228:	mov	w10, #0x40                  	// #64
  43222c:	lsl	w28, w10, w9
  432230:	mov	w10, #0x20                  	// #32
  432234:	lsl	w15, w10, w9
  432238:	lsr	w10, w9, #2
  43223c:	add	x10, x13, w10, uxtw #3
  432240:	add	x16, x10, #0x48
  432244:	mov	w10, #0x10                  	// #16
  432248:	mov	x8, xzr
  43224c:	mov	w20, wzr
  432250:	lsl	w9, w10, w9
  432254:	stur	w9, [x29, #-4]
  432258:	stur	w15, [x29, #-20]
  43225c:	str	x16, [sp, #16]
  432260:	b	43227c <wcrtomb@plt+0x2d78c>
  432264:	add	w25, w20, #0x2
  432268:	strb	w8, [x23], #1
  43226c:	sxtw	x8, w25
  432270:	cmp	x22, x8
  432274:	mov	w20, w25
  432278:	b.ls	43216c <wcrtomb@plt+0x2d67c>  // b.plast
  43227c:	ldrb	w8, [x21, x8]
  432280:	sxtw	x9, w20
  432284:	add	x25, x9, #0x1
  432288:	cmp	w8, #0x5c
  43228c:	b.ne	432268 <wcrtomb@plt+0x2d778>  // b.any
  432290:	ldr	w9, [x13, #36]
  432294:	add	x27, x21, x25
  432298:	ldrb	w8, [x27]
  43229c:	tst	w9, w28
  4322a0:	b.eq	432388 <wcrtomb@plt+0x2d898>  // b.none
  4322a4:	orr	w10, w8, #0x20
  4322a8:	cmp	w10, #0x78
  4322ac:	b.ne	432388 <wcrtomb@plt+0x2d898>  // b.any
  4322b0:	sub	x8, x22, x25
  4322b4:	cmp	x8, #0x2
  4322b8:	b.cc	432470 <wcrtomb@plt+0x2d980>  // b.lo, b.ul, b.last
  4322bc:	ldrsb	w8, [x27, #1]
  4322c0:	tbnz	w8, #31, 432470 <wcrtomb@plt+0x2d980>
  4322c4:	and	w24, w8, #0xff
  4322c8:	sub	w19, w24, #0x30
  4322cc:	cmp	w19, #0x9
  4322d0:	b.ls	43231c <wcrtomb@plt+0x2d82c>  // b.plast
  4322d4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4322d8:	mov	w2, #0xd                   	// #13
  4322dc:	add	x0, x0, #0x3bb
  4322e0:	mov	w1, w24
  4322e4:	bl	404840 <memchr@plt>
  4322e8:	ldr	x16, [sp, #16]
  4322ec:	ldur	w15, [x29, #-20]
  4322f0:	ldur	x13, [x29, #-16]
  4322f4:	mov	w14, #0x5c                  	// #92
  4322f8:	cbz	x0, 432470 <wcrtomb@plt+0x2d980>
  4322fc:	bl	404460 <__ctype_toupper_loc@plt>
  432300:	ldr	x8, [x0]
  432304:	ldr	x16, [sp, #16]
  432308:	ldur	w15, [x29, #-20]
  43230c:	ldur	x13, [x29, #-16]
  432310:	ldr	w8, [x8, w24, uxtw #2]
  432314:	mov	w14, #0x5c                  	// #92
  432318:	sub	w19, w8, #0x37
  43231c:	cmp	w19, #0xf
  432320:	b.gt	432470 <wcrtomb@plt+0x2d980>
  432324:	ldrsb	w8, [x27, #2]
  432328:	tbnz	w8, #31, 4324dc <wcrtomb@plt+0x2d9ec>
  43232c:	and	w24, w8, #0xff
  432330:	sub	w8, w24, #0x30
  432334:	cmp	w8, #0xa
  432338:	b.cc	432374 <wcrtomb@plt+0x2d884>  // b.lo, b.ul, b.last
  43233c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432340:	mov	w2, #0xd                   	// #13
  432344:	add	x0, x0, #0x3bb
  432348:	mov	w1, w24
  43234c:	bl	404840 <memchr@plt>
  432350:	cbz	x0, 432500 <wcrtomb@plt+0x2da10>
  432354:	bl	404460 <__ctype_toupper_loc@plt>
  432358:	ldr	x8, [x0]
  43235c:	ldur	x13, [x29, #-16]
  432360:	ldur	w15, [x29, #-20]
  432364:	ldr	x16, [sp, #16]
  432368:	ldr	w8, [x8, w24, uxtw #2]
  43236c:	mov	w14, #0x5c                  	// #92
  432370:	sub	w8, w8, #0x37
  432374:	cmp	w8, #0xf
  432378:	b.gt	4324dc <wcrtomb@plt+0x2d9ec>
  43237c:	add	w19, w8, w19, lsl #4
  432380:	mov	w8, #0x2                   	// #2
  432384:	b	4324e0 <wcrtomb@plt+0x2d9f0>
  432388:	and	w10, w9, w15
  43238c:	cbz	w10, 432488 <wcrtomb@plt+0x2d998>
  432390:	sub	w19, w8, #0x30
  432394:	and	w10, w19, #0xff
  432398:	cmp	w10, #0x9
  43239c:	b.hi	432488 <wcrtomb@plt+0x2d998>  // b.pmore
  4323a0:	cmp	x22, x25
  4323a4:	b.eq	432470 <wcrtomb@plt+0x2d980>  // b.none
  4323a8:	cmp	w8, #0x37
  4323ac:	b.hi	432470 <wcrtomb@plt+0x2d980>  // b.pmore
  4323b0:	ldrsb	w8, [x27, #1]
  4323b4:	tbnz	w8, #31, 4324d4 <wcrtomb@plt+0x2d9e4>
  4323b8:	and	w24, w8, #0xff
  4323bc:	sub	w8, w24, #0x30
  4323c0:	cmp	w8, #0xa
  4323c4:	b.cc	432400 <wcrtomb@plt+0x2d910>  // b.lo, b.ul, b.last
  4323c8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4323cc:	mov	w2, #0xd                   	// #13
  4323d0:	add	x0, x0, #0x3bb
  4323d4:	mov	w1, w24
  4323d8:	bl	404840 <memchr@plt>
  4323dc:	cbz	x0, 4324f8 <wcrtomb@plt+0x2da08>
  4323e0:	bl	404460 <__ctype_toupper_loc@plt>
  4323e4:	ldr	x8, [x0]
  4323e8:	ldur	x13, [x29, #-16]
  4323ec:	ldur	w15, [x29, #-20]
  4323f0:	ldr	x16, [sp, #16]
  4323f4:	ldr	w8, [x8, w24, uxtw #2]
  4323f8:	mov	w14, #0x5c                  	// #92
  4323fc:	sub	w8, w8, #0x37
  432400:	cmp	w8, #0x7
  432404:	b.gt	4324d4 <wcrtomb@plt+0x2d9e4>
  432408:	ldrsb	w9, [x27, #2]
  43240c:	add	w19, w8, w19, lsl #3
  432410:	tbnz	w9, #31, 4324f0 <wcrtomb@plt+0x2da00>
  432414:	and	w24, w9, #0xff
  432418:	sub	w8, w24, #0x30
  43241c:	cmp	w8, #0xa
  432420:	b.cc	43245c <wcrtomb@plt+0x2d96c>  // b.lo, b.ul, b.last
  432424:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432428:	mov	w2, #0xd                   	// #13
  43242c:	add	x0, x0, #0x3bb
  432430:	mov	w1, w24
  432434:	bl	404840 <memchr@plt>
  432438:	cbz	x0, 432518 <wcrtomb@plt+0x2da28>
  43243c:	bl	404460 <__ctype_toupper_loc@plt>
  432440:	ldr	x8, [x0]
  432444:	ldur	x13, [x29, #-16]
  432448:	ldur	w15, [x29, #-20]
  43244c:	ldr	x16, [sp, #16]
  432450:	ldr	w8, [x8, w24, uxtw #2]
  432454:	mov	w14, #0x5c                  	// #92
  432458:	sub	w8, w8, #0x37
  43245c:	cmp	w8, #0x7
  432460:	b.gt	4324f0 <wcrtomb@plt+0x2da00>
  432464:	add	w19, w8, w19, lsl #3
  432468:	mov	w8, #0x3                   	// #3
  43246c:	b	43252c <wcrtomb@plt+0x2da3c>
  432470:	strb	w14, [x23]
  432474:	ldrb	w8, [x27]
  432478:	add	w25, w20, #0x2
  43247c:	strb	w8, [x23, #1]
  432480:	add	x23, x23, #0x2
  432484:	b	43226c <wcrtomb@plt+0x2d77c>
  432488:	ldr	x10, [x16]
  43248c:	ldrb	w11, [x10]
  432490:	cbz	w11, 4324b0 <wcrtomb@plt+0x2d9c0>
  432494:	add	x10, x10, #0x2
  432498:	ldurb	w12, [x10, #-1]
  43249c:	cbz	w12, 4324b0 <wcrtomb@plt+0x2d9c0>
  4324a0:	cmp	w8, w11, uxtb
  4324a4:	b.eq	4324c8 <wcrtomb@plt+0x2d9d8>  // b.none
  4324a8:	ldrb	w11, [x10], #2
  4324ac:	cbnz	w11, 432498 <wcrtomb@plt+0x2d9a8>
  4324b0:	ldur	w10, [x29, #-4]
  4324b4:	tst	w9, w10
  4324b8:	b.eq	432264 <wcrtomb@plt+0x2d774>  // b.none
  4324bc:	strb	w14, [x23], #1
  4324c0:	ldrb	w8, [x27]
  4324c4:	b	432264 <wcrtomb@plt+0x2d774>
  4324c8:	strb	w12, [x23], #1
  4324cc:	add	w25, w20, #0x2
  4324d0:	b	43226c <wcrtomb@plt+0x2d77c>
  4324d4:	mov	w8, #0x1                   	// #1
  4324d8:	b	43252c <wcrtomb@plt+0x2da3c>
  4324dc:	mov	w8, #0x1                   	// #1
  4324e0:	add	w8, w20, w8
  4324e4:	strb	w19, [x23], #1
  4324e8:	add	w25, w8, #0x2
  4324ec:	b	43226c <wcrtomb@plt+0x2d77c>
  4324f0:	mov	w8, #0x2                   	// #2
  4324f4:	b	43252c <wcrtomb@plt+0x2da3c>
  4324f8:	mov	w8, #0x1                   	// #1
  4324fc:	b	43251c <wcrtomb@plt+0x2da2c>
  432500:	ldur	x13, [x29, #-16]
  432504:	ldur	w15, [x29, #-20]
  432508:	ldr	x16, [sp, #16]
  43250c:	mov	w8, #0x1                   	// #1
  432510:	mov	w14, #0x5c                  	// #92
  432514:	b	4324e0 <wcrtomb@plt+0x2d9f0>
  432518:	mov	w8, #0x2                   	// #2
  43251c:	ldur	x13, [x29, #-16]
  432520:	ldur	w15, [x29, #-20]
  432524:	ldr	x16, [sp, #16]
  432528:	mov	w14, #0x5c                  	// #92
  43252c:	strb	w19, [x23], #1
  432530:	add	w25, w8, w25
  432534:	b	43226c <wcrtomb@plt+0x2d77c>
  432538:	mov	w0, wzr
  43253c:	ldp	x20, x19, [sp, #128]
  432540:	ldp	x22, x21, [sp, #112]
  432544:	ldp	x24, x23, [sp, #96]
  432548:	ldp	x26, x25, [sp, #80]
  43254c:	ldp	x28, x27, [sp, #64]
  432550:	ldp	x29, x30, [sp, #48]
  432554:	add	sp, sp, #0x90
  432558:	ret
  43255c:	bl	4049c0 <__errno_location@plt>
  432560:	ldur	x10, [x29, #-16]
  432564:	mov	w8, #0xc                   	// #12
  432568:	str	w8, [x0]
  43256c:	mov	w9, #0x2                   	// #2
  432570:	ldr	w8, [x10, #32]
  432574:	str	w9, [x10, #192]
  432578:	tbnz	w8, #7, 43259c <wcrtomb@plt+0x2daac>
  43257c:	ldr	x21, [sp, #8]
  432580:	tbnz	w8, #4, 4325b8 <wcrtomb@plt+0x2dac8>
  432584:	tbnz	w8, #3, 43264c <wcrtomb@plt+0x2db5c>
  432588:	ldur	x0, [x29, #-16]
  43258c:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  432590:	ldr	x20, [x21]
  432594:	cbnz	x20, 432674 <wcrtomb@plt+0x2db84>
  432598:	b	432654 <wcrtomb@plt+0x2db64>
  43259c:	ldr	x8, [x10, #88]
  4325a0:	mov	x0, x10
  4325a4:	blr	x8
  4325a8:	ldur	x10, [x29, #-16]
  4325ac:	ldr	w8, [x10, #32]
  4325b0:	ldr	x21, [sp, #8]
  4325b4:	tbz	w8, #4, 432584 <wcrtomb@plt+0x2da94>
  4325b8:	ldr	w8, [x10, #192]
  4325bc:	ldr	x19, [x10, #96]
  4325c0:	cmp	w8, #0x9
  4325c4:	b.eq	4325fc <wcrtomb@plt+0x2db0c>  // b.none
  4325c8:	cmp	w8, #0x1
  4325cc:	b.ne	432604 <wcrtomb@plt+0x2db14>  // b.any
  4325d0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4325d4:	add	x1, x1, #0x221
  4325d8:	mov	w2, #0x5                   	// #5
  4325dc:	mov	x0, xzr
  4325e0:	mov	x20, x10
  4325e4:	bl	4048b0 <dcgettext@plt>
  4325e8:	ldr	x8, [x20, #168]
  4325ec:	ldr	x2, [x20, #184]
  4325f0:	ldrb	w1, [x8, x2]
  4325f4:	blr	x19
  4325f8:	b	432640 <wcrtomb@plt+0x2db50>
  4325fc:	add	x8, x10, #0xc8
  432600:	b	432624 <wcrtomb@plt+0x2db34>
  432604:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432608:	ldr	w9, [x9, #4000]
  43260c:	sxtw	x8, w8
  432610:	cmp	w8, w9
  432614:	b.ge	43262c <wcrtomb@plt+0x2db3c>  // b.tcont
  432618:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43261c:	add	x9, x9, #0xf58
  432620:	add	x8, x9, x8, lsl #3
  432624:	ldr	x1, [x8]
  432628:	b	432634 <wcrtomb@plt+0x2db44>
  43262c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432630:	add	x1, x1, #0x213
  432634:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432638:	add	x0, x0, #0x274
  43263c:	blr	x19
  432640:	ldur	x8, [x29, #-16]
  432644:	ldr	w8, [x8, #32]
  432648:	tbz	w8, #3, 432588 <wcrtomb@plt+0x2da98>
  43264c:	ldr	x20, [x21]
  432650:	cbnz	x20, 432674 <wcrtomb@plt+0x2db84>
  432654:	stp	xzr, xzr, [x21]
  432658:	ldur	x8, [x29, #-16]
  43265c:	ldr	w0, [x8, #192]
  432660:	b	43253c <wcrtomb@plt+0x2da4c>
  432664:	mov	x0, x20
  432668:	bl	4046b0 <free@plt>
  43266c:	mov	x20, x19
  432670:	cbz	x19, 432654 <wcrtomb@plt+0x2db64>
  432674:	ldrb	w8, [x20, #16]
  432678:	ldr	x19, [x20, #8]
  43267c:	tbz	w8, #1, 432664 <wcrtomb@plt+0x2db74>
  432680:	ldr	x0, [x20, #24]
  432684:	bl	4046b0 <free@plt>
  432688:	b	432664 <wcrtomb@plt+0x2db74>
  43268c:	sub	sp, sp, #0x150
  432690:	stp	x29, x30, [sp, #240]
  432694:	stp	x28, x27, [sp, #256]
  432698:	stp	x26, x25, [sp, #272]
  43269c:	stp	x24, x23, [sp, #288]
  4326a0:	stp	x22, x21, [sp, #304]
  4326a4:	stp	x20, x19, [sp, #320]
  4326a8:	mov	x10, x0
  4326ac:	ldr	x22, [x10, #208]!
  4326b0:	add	x29, sp, #0xf0
  4326b4:	cbz	x22, 432a3c <wcrtomb@plt+0x2df4c>
  4326b8:	ldur	w8, [x10, #-172]
  4326bc:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4326c0:	mov	x19, x0
  4326c4:	add	x23, x0, #0xd8
  4326c8:	lsl	w8, w8, #5
  4326cc:	add	x9, x0, #0xc8
  4326d0:	add	x20, x20, #0x3e2
  4326d4:	and	w8, w8, #0x80
  4326d8:	str	x9, [sp, #8]
  4326dc:	str	w8, [sp, #20]
  4326e0:	str	x10, [sp, #24]
  4326e4:	b	4326f4 <wcrtomb@plt+0x2dc04>
  4326e8:	mov	x0, x25
  4326ec:	bl	4046b0 <free@plt>
  4326f0:	cbz	x22, 432a3c <wcrtomb@plt+0x2df4c>
  4326f4:	mov	x25, x22
  4326f8:	ldr	w8, [x22, #16]
  4326fc:	ldr	x22, [x22, #8]
  432700:	tbnz	w8, #2, 4326f0 <wcrtomb@plt+0x2dc00>
  432704:	tbnz	w8, #0, 432720 <wcrtomb@plt+0x2dc30>
  432708:	tbnz	w8, #1, 432730 <wcrtomb@plt+0x2dc40>
  43270c:	ldr	x8, [x19, #168]
  432710:	ldp	x9, x10, [x25, #24]
  432714:	add	x28, x8, x9
  432718:	sub	x27, x10, x9
  43271c:	b	432740 <wcrtomb@plt+0x2dc50>
  432720:	adrp	x28, 467000 <_obstack_memory_used@@Base+0x1be3c>
  432724:	mov	x27, xzr
  432728:	add	x28, x28, #0xb36
  43272c:	b	432740 <wcrtomb@plt+0x2dc50>
  432730:	ldr	x28, [x25, #24]
  432734:	mov	x0, x28
  432738:	bl	403f00 <strlen@plt>
  43273c:	mov	x27, x0
  432740:	mov	x26, xzr
  432744:	cmp	w27, w26
  432748:	b.eq	4326f0 <wcrtomb@plt+0x2dc00>  // b.none
  43274c:	ldrb	w1, [x28, x26]
  432750:	mov	w2, #0x4                   	// #4
  432754:	mov	x0, x20
  432758:	bl	404840 <memchr@plt>
  43275c:	add	x26, x26, #0x1
  432760:	cbz	x0, 432744 <wcrtomb@plt+0x2dc54>
  432764:	add	x0, x27, #0x1
  432768:	bl	404210 <malloc@plt>
  43276c:	cbz	x0, 432af0 <wcrtomb@plt+0x2e000>
  432770:	mov	x1, x28
  432774:	mov	x2, x27
  432778:	mov	x26, x0
  43277c:	bl	403e80 <memcpy@plt>
  432780:	ldr	w1, [sp, #20]
  432784:	sub	x3, x29, #0x50
  432788:	mov	x0, x26
  43278c:	mov	x2, xzr
  432790:	strb	wzr, [x26, x27]
  432794:	bl	4048f0 <glob@plt>
  432798:	cbz	w0, 4327b4 <wcrtomb@plt+0x2dcc4>
  43279c:	cmp	w0, #0x3
  4327a0:	b.ne	432b2c <wcrtomb@plt+0x2e03c>  // b.any
  4327a4:	ldr	w8, [x19, #36]
  4327a8:	tbnz	w8, #0, 432988 <wcrtomb@plt+0x2de98>
  4327ac:	tbz	w8, #1, 432a34 <wcrtomb@plt+0x2df44>
  4327b0:	b	432cfc <wcrtomb@plt+0x2e20c>
  4327b4:	mov	x0, x26
  4327b8:	bl	4046b0 <free@plt>
  4327bc:	ldur	x8, [x29, #-80]
  4327c0:	cbz	x8, 4329ac <wcrtomb@plt+0x2debc>
  4327c4:	ldr	x26, [sp, #24]
  4327c8:	mov	x27, xzr
  4327cc:	mov	x28, x25
  4327d0:	b	4327f8 <wcrtomb@plt+0x2dd08>
  4327d4:	stp	xzr, xzr, [x21]
  4327d8:	str	x21, [x23]
  4327dc:	mov	x9, x26
  4327e0:	str	x21, [x9]
  4327e4:	ldur	x8, [x29, #-80]
  4327e8:	add	x27, x27, #0x1
  4327ec:	mov	x28, x21
  4327f0:	cmp	x8, x27
  4327f4:	b.ls	4329b0 <wcrtomb@plt+0x2dec0>  // b.plast
  4327f8:	mov	w0, #0x1                   	// #1
  4327fc:	mov	w1, #0x28                  	// #40
  432800:	bl	4043d0 <calloc@plt>
  432804:	cbz	x0, 432810 <wcrtomb@plt+0x2dd20>
  432808:	mov	x21, x0
  43280c:	b	432908 <wcrtomb@plt+0x2de18>
  432810:	bl	4049c0 <__errno_location@plt>
  432814:	mov	w8, #0xc                   	// #12
  432818:	str	w8, [x0]
  43281c:	ldr	w8, [x19, #32]
  432820:	mov	w9, #0x2                   	// #2
  432824:	str	w9, [x19, #192]
  432828:	tbnz	w8, #7, 432848 <wcrtomb@plt+0x2dd58>
  43282c:	tbnz	w8, #4, 43285c <wcrtomb@plt+0x2dd6c>
  432830:	tbnz	w8, #3, 4328f0 <wcrtomb@plt+0x2de00>
  432834:	mov	x0, x19
  432838:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  43283c:	ldr	x26, [x26]
  432840:	cbnz	x26, 432970 <wcrtomb@plt+0x2de80>
  432844:	b	4328f8 <wcrtomb@plt+0x2de08>
  432848:	ldr	x8, [x19, #88]
  43284c:	mov	x0, x19
  432850:	blr	x8
  432854:	ldr	w8, [x19, #32]
  432858:	tbz	w8, #4, 432830 <wcrtomb@plt+0x2dd40>
  43285c:	ldr	w8, [x19, #192]
  432860:	ldr	x26, [x19, #96]
  432864:	ldr	x9, [sp, #8]
  432868:	cmp	w8, #0x9
  43286c:	b.eq	4328d4 <wcrtomb@plt+0x2dde4>  // b.none
  432870:	cmp	w8, #0x1
  432874:	b.ne	4328ac <wcrtomb@plt+0x2ddbc>  // b.any
  432878:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43287c:	mov	w2, #0x5                   	// #5
  432880:	mov	x0, xzr
  432884:	add	x1, x1, #0x221
  432888:	bl	4048b0 <dcgettext@plt>
  43288c:	ldr	x8, [x19, #168]
  432890:	ldr	x2, [x19, #184]
  432894:	ldrb	w1, [x8, x2]
  432898:	blr	x26
  43289c:	ldr	w8, [x19, #32]
  4328a0:	ldr	x26, [sp, #24]
  4328a4:	tbnz	w8, #3, 4328f0 <wcrtomb@plt+0x2de00>
  4328a8:	b	432834 <wcrtomb@plt+0x2dd44>
  4328ac:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4328b0:	ldr	w9, [x9, #4000]
  4328b4:	sxtw	x8, w8
  4328b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4328bc:	add	x1, x1, #0x213
  4328c0:	cmp	w8, w9
  4328c4:	b.ge	4328d8 <wcrtomb@plt+0x2dde8>  // b.tcont
  4328c8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4328cc:	add	x9, x9, #0xf58
  4328d0:	add	x9, x9, x8, lsl #3
  4328d4:	ldr	x1, [x9]
  4328d8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4328dc:	add	x0, x0, #0x274
  4328e0:	blr	x26
  4328e4:	ldr	w8, [x19, #32]
  4328e8:	ldr	x26, [sp, #24]
  4328ec:	tbz	w8, #3, 432834 <wcrtomb@plt+0x2dd44>
  4328f0:	ldr	x26, [x26]
  4328f4:	cbnz	x26, 432970 <wcrtomb@plt+0x2de80>
  4328f8:	ldr	x26, [sp, #24]
  4328fc:	stp	xzr, xzr, [x26]
  432900:	ldr	w8, [x19, #192]
  432904:	cbnz	w8, 432ae8 <wcrtomb@plt+0x2dff8>
  432908:	ldur	x8, [x29, #-72]
  43290c:	ldr	x0, [x8, x27, lsl #3]
  432910:	bl	4044a0 <strdup@plt>
  432914:	cbz	x0, 432a44 <wcrtomb@plt+0x2df54>
  432918:	ldr	w8, [x21, #16]
  43291c:	str	x0, [x21, #24]
  432920:	mov	x9, x21
  432924:	orr	w8, w8, #0x6
  432928:	str	w8, [x21, #16]
  43292c:	ldr	x8, [x26]
  432930:	cbz	x8, 4327d4 <wcrtomb@plt+0x2dce4>
  432934:	mov	x8, x9
  432938:	ldr	x9, [x9, #8]
  43293c:	cbnz	x9, 432934 <wcrtomb@plt+0x2de44>
  432940:	mov	x9, x28
  432944:	ldr	x10, [x9, #8]!
  432948:	cmp	x10, #0x0
  43294c:	csel	x11, x23, x10, eq  // eq = none
  432950:	str	x8, [x11]
  432954:	str	x10, [x8, #8]
  432958:	str	x28, [x21]
  43295c:	b	4327e0 <wcrtomb@plt+0x2dcf0>
  432960:	mov	x0, x26
  432964:	bl	4046b0 <free@plt>
  432968:	mov	x26, x24
  43296c:	cbz	x24, 4328f8 <wcrtomb@plt+0x2de08>
  432970:	ldrb	w8, [x26, #16]
  432974:	ldr	x24, [x26, #8]
  432978:	tbz	w8, #1, 432960 <wcrtomb@plt+0x2de70>
  43297c:	ldr	x0, [x26, #24]
  432980:	bl	4046b0 <free@plt>
  432984:	b	432960 <wcrtomb@plt+0x2de70>
  432988:	ldp	x8, x9, [x25]
  43298c:	cbz	x8, 432a04 <wcrtomb@plt+0x2df14>
  432990:	str	x9, [x8, #8]
  432994:	ldr	x9, [x25, #8]
  432998:	cbnz	x9, 432a14 <wcrtomb@plt+0x2df24>
  43299c:	ldr	w9, [x8, #16]
  4329a0:	and	w9, w9, #0xffffffef
  4329a4:	str	w9, [x8, #16]
  4329a8:	b	432a10 <wcrtomb@plt+0x2df20>
  4329ac:	ldr	x26, [sp, #24]
  4329b0:	sub	x0, x29, #0x50
  4329b4:	bl	404760 <globfree@plt>
  4329b8:	ldp	x8, x9, [x25]
  4329bc:	cbz	x8, 4329dc <wcrtomb@plt+0x2deec>
  4329c0:	str	x9, [x8, #8]
  4329c4:	ldr	x9, [x25, #8]
  4329c8:	cbnz	x9, 4329e8 <wcrtomb@plt+0x2def8>
  4329cc:	ldr	w9, [x8, #16]
  4329d0:	and	w9, w9, #0xffffffef
  4329d4:	str	w9, [x8, #16]
  4329d8:	b	4329e4 <wcrtomb@plt+0x2def4>
  4329dc:	str	x9, [x26]
  4329e0:	cbnz	x9, 4329e8 <wcrtomb@plt+0x2def8>
  4329e4:	mov	x9, x23
  4329e8:	str	x8, [x9]
  4329ec:	ldrb	w8, [x25, #16]
  4329f0:	stp	xzr, xzr, [x25]
  4329f4:	tbz	w8, #1, 4326e8 <wcrtomb@plt+0x2dbf8>
  4329f8:	ldr	x0, [x25, #24]
  4329fc:	bl	4046b0 <free@plt>
  432a00:	b	4326e8 <wcrtomb@plt+0x2dbf8>
  432a04:	ldr	x10, [sp, #24]
  432a08:	str	x9, [x10]
  432a0c:	cbnz	x9, 432a14 <wcrtomb@plt+0x2df24>
  432a10:	mov	x9, x23
  432a14:	str	x8, [x9]
  432a18:	ldrb	w8, [x25, #16]
  432a1c:	stp	xzr, xzr, [x25]
  432a20:	tbz	w8, #1, 432a2c <wcrtomb@plt+0x2df3c>
  432a24:	ldr	x0, [x25, #24]
  432a28:	bl	4046b0 <free@plt>
  432a2c:	mov	x0, x25
  432a30:	bl	4046b0 <free@plt>
  432a34:	mov	x0, x26
  432a38:	b	4326ec <wcrtomb@plt+0x2dbfc>
  432a3c:	mov	w0, wzr
  432a40:	b	432ef8 <wcrtomb@plt+0x2e408>
  432a44:	ldrb	w8, [x21, #16]
  432a48:	tbz	w8, #1, 432a54 <wcrtomb@plt+0x2df64>
  432a4c:	ldr	x0, [x21, #24]
  432a50:	bl	4046b0 <free@plt>
  432a54:	mov	x0, x21
  432a58:	bl	4046b0 <free@plt>
  432a5c:	bl	4049c0 <__errno_location@plt>
  432a60:	mov	w8, #0xc                   	// #12
  432a64:	str	w8, [x0]
  432a68:	ldr	w8, [x19, #32]
  432a6c:	mov	w9, #0x2                   	// #2
  432a70:	str	w9, [x19, #192]
  432a74:	tbnz	w8, #7, 432a94 <wcrtomb@plt+0x2dfa4>
  432a78:	tbnz	w8, #4, 432aa8 <wcrtomb@plt+0x2dfb8>
  432a7c:	tbnz	w8, #3, 432c6c <wcrtomb@plt+0x2e17c>
  432a80:	mov	x0, x19
  432a84:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  432a88:	ldr	x20, [x26]
  432a8c:	cbnz	x20, 432c8c <wcrtomb@plt+0x2e19c>
  432a90:	b	432c74 <wcrtomb@plt+0x2e184>
  432a94:	ldr	x8, [x19, #88]
  432a98:	mov	x0, x19
  432a9c:	blr	x8
  432aa0:	ldr	w8, [x19, #32]
  432aa4:	tbz	w8, #4, 432a7c <wcrtomb@plt+0x2df8c>
  432aa8:	ldr	w8, [x19, #192]
  432aac:	ldr	x20, [x19, #96]
  432ab0:	cmp	w8, #0x9
  432ab4:	b.eq	432b9c <wcrtomb@plt+0x2e0ac>  // b.none
  432ab8:	cmp	w8, #0x1
  432abc:	b.ne	432b78 <wcrtomb@plt+0x2e088>  // b.any
  432ac0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432ac4:	add	x1, x1, #0x221
  432ac8:	mov	w2, #0x5                   	// #5
  432acc:	mov	x0, xzr
  432ad0:	bl	4048b0 <dcgettext@plt>
  432ad4:	ldr	x8, [x19, #168]
  432ad8:	ldr	x2, [x19, #184]
  432adc:	ldrb	w1, [x8, x2]
  432ae0:	blr	x20
  432ae4:	b	432c64 <wcrtomb@plt+0x2e174>
  432ae8:	mov	w0, #0x1                   	// #1
  432aec:	b	432ef8 <wcrtomb@plt+0x2e408>
  432af0:	bl	4049c0 <__errno_location@plt>
  432af4:	mov	w8, #0xc                   	// #12
  432af8:	str	w8, [x0]
  432afc:	ldr	w8, [x19, #32]
  432b00:	mov	w9, #0x2                   	// #2
  432b04:	str	w9, [x19, #192]
  432b08:	tbnz	w8, #7, 432ba8 <wcrtomb@plt+0x2e0b8>
  432b0c:	ldr	x22, [sp, #24]
  432b10:	tbnz	w8, #4, 432bc0 <wcrtomb@plt+0x2e0d0>
  432b14:	tbnz	w8, #3, 432e10 <wcrtomb@plt+0x2e320>
  432b18:	mov	x0, x19
  432b1c:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  432b20:	ldr	x20, [x22]
  432b24:	cbnz	x20, 432e2c <wcrtomb@plt+0x2e33c>
  432b28:	b	432ef0 <wcrtomb@plt+0x2e400>
  432b2c:	cmp	w0, #0x1
  432b30:	b.ne	432c00 <wcrtomb@plt+0x2e110>  // b.any
  432b34:	mov	x0, x26
  432b38:	bl	4046b0 <free@plt>
  432b3c:	bl	4049c0 <__errno_location@plt>
  432b40:	mov	w8, #0xc                   	// #12
  432b44:	str	w8, [x0]
  432b48:	ldr	w8, [x19, #32]
  432b4c:	mov	w9, #0x2                   	// #2
  432b50:	str	w9, [x19, #192]
  432b54:	tbnz	w8, #7, 432ca4 <wcrtomb@plt+0x2e1b4>
  432b58:	ldr	x22, [sp, #24]
  432b5c:	tbnz	w8, #4, 432cbc <wcrtomb@plt+0x2e1cc>
  432b60:	tbnz	w8, #3, 432ee8 <wcrtomb@plt+0x2e3f8>
  432b64:	mov	x0, x19
  432b68:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  432b6c:	ldr	x20, [x22]
  432b70:	cbnz	x20, 432f28 <wcrtomb@plt+0x2e438>
  432b74:	b	432ef0 <wcrtomb@plt+0x2e400>
  432b78:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432b7c:	ldr	w9, [x9, #4000]
  432b80:	sxtw	x8, w8
  432b84:	cmp	w8, w9
  432b88:	b.ge	432c50 <wcrtomb@plt+0x2e160>  // b.tcont
  432b8c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432b90:	add	x9, x9, #0xf58
  432b94:	add	x8, x9, x8, lsl #3
  432b98:	str	x8, [sp, #8]
  432b9c:	ldr	x8, [sp, #8]
  432ba0:	ldr	x1, [x8]
  432ba4:	b	432c58 <wcrtomb@plt+0x2e168>
  432ba8:	ldr	x8, [x19, #88]
  432bac:	mov	x0, x19
  432bb0:	blr	x8
  432bb4:	ldr	w8, [x19, #32]
  432bb8:	ldr	x22, [sp, #24]
  432bbc:	tbz	w8, #4, 432b14 <wcrtomb@plt+0x2e024>
  432bc0:	ldr	w8, [x19, #192]
  432bc4:	ldr	x20, [x19, #96]
  432bc8:	cmp	w8, #0x9
  432bcc:	b.eq	432dac <wcrtomb@plt+0x2e2bc>  // b.none
  432bd0:	cmp	w8, #0x1
  432bd4:	b.ne	432d88 <wcrtomb@plt+0x2e298>  // b.any
  432bd8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432bdc:	add	x1, x1, #0x221
  432be0:	mov	w2, #0x5                   	// #5
  432be4:	mov	x0, xzr
  432be8:	bl	4048b0 <dcgettext@plt>
  432bec:	ldr	x8, [x19, #168]
  432bf0:	ldr	x2, [x19, #184]
  432bf4:	ldrb	w1, [x8, x2]
  432bf8:	blr	x20
  432bfc:	b	432e08 <wcrtomb@plt+0x2e318>
  432c00:	mov	x0, x26
  432c04:	bl	4046b0 <free@plt>
  432c08:	ldrb	w8, [x19, #32]
  432c0c:	mov	w0, #0x8                   	// #8
  432c10:	str	w0, [x19, #192]
  432c14:	tbz	w8, #4, 432ef8 <wcrtomb@plt+0x2e408>
  432c18:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432c1c:	ldr	w8, [x8, #4000]
  432c20:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432c24:	ldr	x9, [x9, #3992]
  432c28:	ldr	x10, [x19, #96]
  432c2c:	cmp	w8, #0x8
  432c30:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432c34:	add	x8, x8, #0x213
  432c38:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432c3c:	csel	x1, x9, x8, gt
  432c40:	add	x0, x0, #0x274
  432c44:	blr	x10
  432c48:	mov	w0, #0x8                   	// #8
  432c4c:	b	432ef8 <wcrtomb@plt+0x2e408>
  432c50:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432c54:	add	x1, x1, #0x213
  432c58:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432c5c:	add	x0, x0, #0x274
  432c60:	blr	x20
  432c64:	ldr	w8, [x19, #32]
  432c68:	tbz	w8, #3, 432a80 <wcrtomb@plt+0x2df90>
  432c6c:	ldr	x20, [x26]
  432c70:	cbnz	x20, 432c8c <wcrtomb@plt+0x2e19c>
  432c74:	stp	xzr, xzr, [x26]
  432c78:	b	432ef4 <wcrtomb@plt+0x2e404>
  432c7c:	mov	x0, x20
  432c80:	bl	4046b0 <free@plt>
  432c84:	mov	x20, x21
  432c88:	cbz	x21, 432c74 <wcrtomb@plt+0x2e184>
  432c8c:	ldrb	w8, [x20, #16]
  432c90:	ldr	x21, [x20, #8]
  432c94:	tbz	w8, #1, 432c7c <wcrtomb@plt+0x2e18c>
  432c98:	ldr	x0, [x20, #24]
  432c9c:	bl	4046b0 <free@plt>
  432ca0:	b	432c7c <wcrtomb@plt+0x2e18c>
  432ca4:	ldr	x8, [x19, #88]
  432ca8:	mov	x0, x19
  432cac:	blr	x8
  432cb0:	ldr	w8, [x19, #32]
  432cb4:	ldr	x22, [sp, #24]
  432cb8:	tbz	w8, #4, 432b60 <wcrtomb@plt+0x2e070>
  432cbc:	ldr	w8, [x19, #192]
  432cc0:	ldr	x20, [x19, #96]
  432cc4:	cmp	w8, #0x9
  432cc8:	b.eq	432e68 <wcrtomb@plt+0x2e378>  // b.none
  432ccc:	cmp	w8, #0x1
  432cd0:	b.ne	432e44 <wcrtomb@plt+0x2e354>  // b.any
  432cd4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432cd8:	add	x1, x1, #0x221
  432cdc:	mov	w2, #0x5                   	// #5
  432ce0:	mov	x0, xzr
  432ce4:	bl	4048b0 <dcgettext@plt>
  432ce8:	ldr	x8, [x19, #168]
  432cec:	ldr	x2, [x19, #184]
  432cf0:	ldrb	w1, [x8, x2]
  432cf4:	blr	x20
  432cf8:	b	432ee0 <wcrtomb@plt+0x2e3f0>
  432cfc:	ldr	w8, [x19, #192]
  432d00:	ldr	x20, [sp, #8]
  432d04:	cmp	w8, #0x9
  432d08:	b.ne	432d14 <wcrtomb@plt+0x2e224>  // b.any
  432d0c:	ldr	x0, [x20]
  432d10:	bl	4046b0 <free@plt>
  432d14:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432d18:	add	x1, x1, #0x3c8
  432d1c:	mov	w2, #0x5                   	// #5
  432d20:	mov	x0, xzr
  432d24:	bl	4048b0 <dcgettext@plt>
  432d28:	mov	x4, x0
  432d2c:	add	x0, sp, #0x20
  432d30:	mov	w1, #0x80                  	// #128
  432d34:	mov	w2, #0x1                   	// #1
  432d38:	mov	w3, #0x80                  	// #128
  432d3c:	mov	x5, x26
  432d40:	bl	404190 <__snprintf_chk@plt>
  432d44:	mov	x0, x26
  432d48:	bl	4046b0 <free@plt>
  432d4c:	add	x0, sp, #0x20
  432d50:	bl	4044a0 <strdup@plt>
  432d54:	str	x0, [x20]
  432d58:	cbz	x0, 432db8 <wcrtomb@plt+0x2e2c8>
  432d5c:	ldrb	w8, [x19, #32]
  432d60:	mov	x1, x0
  432d64:	mov	w0, #0x9                   	// #9
  432d68:	str	w0, [x19, #192]
  432d6c:	tbz	w8, #4, 432ef8 <wcrtomb@plt+0x2e408>
  432d70:	ldr	x8, [x19, #96]
  432d74:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432d78:	add	x0, x0, #0x274
  432d7c:	blr	x8
  432d80:	mov	w0, #0x9                   	// #9
  432d84:	b	432ef8 <wcrtomb@plt+0x2e408>
  432d88:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432d8c:	ldr	w9, [x9, #4000]
  432d90:	sxtw	x8, w8
  432d94:	cmp	w8, w9
  432d98:	b.ge	432df4 <wcrtomb@plt+0x2e304>  // b.tcont
  432d9c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432da0:	add	x9, x9, #0xf58
  432da4:	add	x8, x9, x8, lsl #3
  432da8:	str	x8, [sp, #8]
  432dac:	ldr	x8, [sp, #8]
  432db0:	ldr	x1, [x8]
  432db4:	b	432dfc <wcrtomb@plt+0x2e30c>
  432db8:	bl	4049c0 <__errno_location@plt>
  432dbc:	mov	w8, #0xc                   	// #12
  432dc0:	str	w8, [x0]
  432dc4:	ldr	w8, [x19, #32]
  432dc8:	mov	w9, #0x2                   	// #2
  432dcc:	str	w9, [x19, #192]
  432dd0:	tbnz	w8, #7, 432e74 <wcrtomb@plt+0x2e384>
  432dd4:	ldr	x22, [sp, #24]
  432dd8:	tbnz	w8, #4, 432e8c <wcrtomb@plt+0x2e39c>
  432ddc:	tbnz	w8, #3, 432f8c <wcrtomb@plt+0x2e49c>
  432de0:	mov	x0, x19
  432de4:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  432de8:	ldr	x20, [x22]
  432dec:	cbnz	x20, 432fa8 <wcrtomb@plt+0x2e4b8>
  432df0:	b	432ef0 <wcrtomb@plt+0x2e400>
  432df4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432df8:	add	x1, x1, #0x213
  432dfc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432e00:	add	x0, x0, #0x274
  432e04:	blr	x20
  432e08:	ldr	w8, [x19, #32]
  432e0c:	tbz	w8, #3, 432b18 <wcrtomb@plt+0x2e028>
  432e10:	ldr	x20, [x22]
  432e14:	cbnz	x20, 432e2c <wcrtomb@plt+0x2e33c>
  432e18:	b	432ef0 <wcrtomb@plt+0x2e400>
  432e1c:	mov	x0, x20
  432e20:	bl	4046b0 <free@plt>
  432e24:	mov	x20, x21
  432e28:	cbz	x21, 432ef0 <wcrtomb@plt+0x2e400>
  432e2c:	ldrb	w8, [x20, #16]
  432e30:	ldr	x21, [x20, #8]
  432e34:	tbz	w8, #1, 432e1c <wcrtomb@plt+0x2e32c>
  432e38:	ldr	x0, [x20, #24]
  432e3c:	bl	4046b0 <free@plt>
  432e40:	b	432e1c <wcrtomb@plt+0x2e32c>
  432e44:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432e48:	ldr	w9, [x9, #4000]
  432e4c:	sxtw	x8, w8
  432e50:	cmp	w8, w9
  432e54:	b.ge	432ecc <wcrtomb@plt+0x2e3dc>  // b.tcont
  432e58:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432e5c:	add	x9, x9, #0xf58
  432e60:	add	x8, x9, x8, lsl #3
  432e64:	str	x8, [sp, #8]
  432e68:	ldr	x8, [sp, #8]
  432e6c:	ldr	x1, [x8]
  432e70:	b	432ed4 <wcrtomb@plt+0x2e3e4>
  432e74:	ldr	x8, [x19, #88]
  432e78:	mov	x0, x19
  432e7c:	blr	x8
  432e80:	ldr	w8, [x19, #32]
  432e84:	ldr	x22, [sp, #24]
  432e88:	tbz	w8, #4, 432ddc <wcrtomb@plt+0x2e2ec>
  432e8c:	ldr	w8, [x19, #192]
  432e90:	ldr	x20, [x19, #96]
  432e94:	cmp	w8, #0x9
  432e98:	b.eq	432f64 <wcrtomb@plt+0x2e474>  // b.none
  432e9c:	cmp	w8, #0x1
  432ea0:	b.ne	432f40 <wcrtomb@plt+0x2e450>  // b.any
  432ea4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432ea8:	add	x1, x1, #0x221
  432eac:	mov	w2, #0x5                   	// #5
  432eb0:	mov	x0, xzr
  432eb4:	bl	4048b0 <dcgettext@plt>
  432eb8:	ldr	x8, [x19, #168]
  432ebc:	ldr	x2, [x19, #184]
  432ec0:	ldrb	w1, [x8, x2]
  432ec4:	blr	x20
  432ec8:	b	432f84 <wcrtomb@plt+0x2e494>
  432ecc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432ed0:	add	x1, x1, #0x213
  432ed4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432ed8:	add	x0, x0, #0x274
  432edc:	blr	x20
  432ee0:	ldr	w8, [x19, #32]
  432ee4:	tbz	w8, #3, 432b64 <wcrtomb@plt+0x2e074>
  432ee8:	ldr	x20, [x22]
  432eec:	cbnz	x20, 432f28 <wcrtomb@plt+0x2e438>
  432ef0:	stp	xzr, xzr, [x22]
  432ef4:	ldr	w0, [x19, #192]
  432ef8:	ldp	x20, x19, [sp, #320]
  432efc:	ldp	x22, x21, [sp, #304]
  432f00:	ldp	x24, x23, [sp, #288]
  432f04:	ldp	x26, x25, [sp, #272]
  432f08:	ldp	x28, x27, [sp, #256]
  432f0c:	ldp	x29, x30, [sp, #240]
  432f10:	add	sp, sp, #0x150
  432f14:	ret
  432f18:	mov	x0, x20
  432f1c:	bl	4046b0 <free@plt>
  432f20:	mov	x20, x21
  432f24:	cbz	x21, 432ef0 <wcrtomb@plt+0x2e400>
  432f28:	ldrb	w8, [x20, #16]
  432f2c:	ldr	x21, [x20, #8]
  432f30:	tbz	w8, #1, 432f18 <wcrtomb@plt+0x2e428>
  432f34:	ldr	x0, [x20, #24]
  432f38:	bl	4046b0 <free@plt>
  432f3c:	b	432f18 <wcrtomb@plt+0x2e428>
  432f40:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432f44:	ldr	w9, [x9, #4000]
  432f48:	sxtw	x8, w8
  432f4c:	cmp	w8, w9
  432f50:	b.ge	432f70 <wcrtomb@plt+0x2e480>  // b.tcont
  432f54:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  432f58:	add	x9, x9, #0xf58
  432f5c:	add	x8, x9, x8, lsl #3
  432f60:	str	x8, [sp, #8]
  432f64:	ldr	x8, [sp, #8]
  432f68:	ldr	x1, [x8]
  432f6c:	b	432f78 <wcrtomb@plt+0x2e488>
  432f70:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432f74:	add	x1, x1, #0x213
  432f78:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  432f7c:	add	x0, x0, #0x274
  432f80:	blr	x20
  432f84:	ldr	w8, [x19, #32]
  432f88:	tbz	w8, #3, 432de0 <wcrtomb@plt+0x2e2f0>
  432f8c:	ldr	x20, [x22]
  432f90:	cbnz	x20, 432fa8 <wcrtomb@plt+0x2e4b8>
  432f94:	b	432ef0 <wcrtomb@plt+0x2e400>
  432f98:	mov	x0, x20
  432f9c:	bl	4046b0 <free@plt>
  432fa0:	mov	x20, x21
  432fa4:	cbz	x21, 432ef0 <wcrtomb@plt+0x2e400>
  432fa8:	ldrb	w8, [x20, #16]
  432fac:	ldr	x21, [x20, #8]
  432fb0:	tbz	w8, #1, 432f98 <wcrtomb@plt+0x2e4a8>
  432fb4:	ldr	x0, [x20, #24]
  432fb8:	bl	4046b0 <free@plt>
  432fbc:	b	432f98 <wcrtomb@plt+0x2e4a8>
  432fc0:	sub	sp, sp, #0x70
  432fc4:	stp	x29, x30, [sp, #16]
  432fc8:	stp	x28, x27, [sp, #32]
  432fcc:	stp	x26, x25, [sp, #48]
  432fd0:	stp	x24, x23, [sp, #64]
  432fd4:	stp	x22, x21, [sp, #80]
  432fd8:	stp	x20, x19, [sp, #96]
  432fdc:	ldr	w8, [x1, #16]
  432fe0:	mov	x21, x3
  432fe4:	mov	x22, x2
  432fe8:	mov	x19, x1
  432fec:	mov	x20, x0
  432ff0:	add	x29, sp, #0x10
  432ff4:	tbnz	w8, #0, 43301c <wcrtomb@plt+0x2e52c>
  432ff8:	tbnz	w8, #1, 433038 <wcrtomb@plt+0x2e548>
  432ffc:	ldr	x8, [x20, #168]
  433000:	ldp	x9, x10, [x19, #24]
  433004:	add	x23, x8, x9
  433008:	sub	x24, x10, x9
  43300c:	cmp	x24, #0x1
  433010:	stp	x19, x23, [sp]
  433014:	b.ge	433054 <wcrtomb@plt+0x2e564>  // b.tcont
  433018:	b	433174 <wcrtomb@plt+0x2e684>
  43301c:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x1be3c>
  433020:	mov	x24, xzr
  433024:	add	x23, x23, #0xb36
  433028:	cmp	x24, #0x1
  43302c:	stp	x19, x23, [sp]
  433030:	b.ge	433054 <wcrtomb@plt+0x2e564>  // b.tcont
  433034:	b	433174 <wcrtomb@plt+0x2e684>
  433038:	ldr	x23, [x19, #24]
  43303c:	mov	x0, x23
  433040:	bl	403f00 <strlen@plt>
  433044:	mov	x24, x0
  433048:	cmp	x24, #0x1
  43304c:	stp	x19, x23, [sp]
  433050:	b.lt	433174 <wcrtomb@plt+0x2e684>  // b.tstop
  433054:	mov	x25, xzr
  433058:	add	x27, x23, x24
  43305c:	mov	w28, #0x14                  	// #20
  433060:	mov	x8, x23
  433064:	b	43307c <wcrtomb@plt+0x2e58c>
  433068:	ldr	x8, [sp, #8]
  43306c:	add	x8, x8, #0x1
  433070:	cmp	x8, x27
  433074:	str	x8, [sp, #8]
  433078:	b.cs	433128 <wcrtomb@plt+0x2e638>  // b.hs, b.nlast
  43307c:	ldrb	w9, [x8]
  433080:	cmp	w9, #0x24
  433084:	b.eq	43309c <wcrtomb@plt+0x2e5ac>  // b.none
  433088:	cmp	w9, #0x5c
  43308c:	b.ne	43306c <wcrtomb@plt+0x2e57c>  // b.any
  433090:	add	x8, x8, #0x1
  433094:	str	x8, [sp, #8]
  433098:	b	43306c <wcrtomb@plt+0x2e57c>
  43309c:	ldrb	w0, [x8, #1]
  4330a0:	blr	x22
  4330a4:	cbz	w0, 433068 <wcrtomb@plt+0x2e578>
  4330a8:	ldp	x8, x9, [sp]
  4330ac:	cmp	x8, x19
  4330b0:	sub	x26, x9, x23
  4330b4:	b.eq	4330c4 <wcrtomb@plt+0x2e5d4>  // b.none
  4330b8:	ldr	w9, [x8, #16]
  4330bc:	orr	w9, w9, #0x10
  4330c0:	str	w9, [x8, #16]
  4330c4:	mov	x1, sp
  4330c8:	mov	w5, #0x10                  	// #16
  4330cc:	mov	x0, x20
  4330d0:	mov	x2, x19
  4330d4:	mov	x3, x25
  4330d8:	mov	x4, x26
  4330dc:	bl	433b40 <wcrtomb@plt+0x2f050>
  4330e0:	cbnz	w0, 43316c <wcrtomb@plt+0x2e67c>
  4330e4:	ldr	x8, [sp, #8]
  4330e8:	sub	x2, x24, x26
  4330ec:	mov	x3, sp
  4330f0:	add	x4, sp, #0x8
  4330f4:	add	x1, x8, #0x1
  4330f8:	str	x1, [sp, #8]
  4330fc:	ldr	w8, [x19, #16]
  433100:	mov	x0, x20
  433104:	and	w5, w8, w28
  433108:	blr	x21
  43310c:	cbnz	w0, 43316c <wcrtomb@plt+0x2e67c>
  433110:	ldr	x8, [sp, #8]
  433114:	sub	x9, x25, x23
  433118:	add	x9, x9, x8
  43311c:	add	x25, x9, #0x1
  433120:	add	x23, x8, #0x1
  433124:	b	43306c <wcrtomb@plt+0x2e57c>
  433128:	subs	x4, x8, x23
  43312c:	b.ls	433174 <wcrtomb@plt+0x2e684>  // b.plast
  433130:	ldr	x8, [sp]
  433134:	cmp	x8, x19
  433138:	b.eq	433148 <wcrtomb@plt+0x2e658>  // b.none
  43313c:	ldr	w9, [x8, #16]
  433140:	orr	w9, w9, #0x10
  433144:	str	w9, [x8, #16]
  433148:	ldr	w8, [x19, #16]
  43314c:	mov	w9, #0x14                  	// #20
  433150:	mov	x1, sp
  433154:	mov	x0, x20
  433158:	and	w5, w8, w9
  43315c:	mov	x2, x19
  433160:	mov	x3, x25
  433164:	bl	433b40 <wcrtomb@plt+0x2f050>
  433168:	cbz	w0, 433174 <wcrtomb@plt+0x2e684>
  43316c:	mov	w0, #0x1                   	// #1
  433170:	b	4331d4 <wcrtomb@plt+0x2e6e4>
  433174:	ldr	x8, [sp]
  433178:	cmp	x8, x19
  43317c:	b.eq	4331d0 <wcrtomb@plt+0x2e6e0>  // b.none
  433180:	ldp	x8, x9, [x19]
  433184:	cbz	x8, 4331a4 <wcrtomb@plt+0x2e6b4>
  433188:	str	x9, [x8, #8]
  43318c:	ldr	x9, [x19, #8]
  433190:	cbnz	x9, 4331b0 <wcrtomb@plt+0x2e6c0>
  433194:	ldr	w9, [x8, #16]
  433198:	and	w9, w9, #0xffffffef
  43319c:	str	w9, [x8, #16]
  4331a0:	b	4331ac <wcrtomb@plt+0x2e6bc>
  4331a4:	str	x9, [x20, #208]
  4331a8:	cbnz	x9, 4331b0 <wcrtomb@plt+0x2e6c0>
  4331ac:	add	x9, x20, #0xd8
  4331b0:	str	x8, [x9]
  4331b4:	ldrb	w8, [x19, #16]
  4331b8:	stp	xzr, xzr, [x19]
  4331bc:	tbz	w8, #1, 4331c8 <wcrtomb@plt+0x2e6d8>
  4331c0:	ldr	x0, [x19, #24]
  4331c4:	bl	4046b0 <free@plt>
  4331c8:	mov	x0, x19
  4331cc:	bl	4046b0 <free@plt>
  4331d0:	mov	w0, wzr
  4331d4:	ldp	x20, x19, [sp, #96]
  4331d8:	ldp	x22, x21, [sp, #80]
  4331dc:	ldp	x24, x23, [sp, #64]
  4331e0:	ldp	x26, x25, [sp, #48]
  4331e4:	ldp	x28, x27, [sp, #32]
  4331e8:	ldp	x29, x30, [sp, #16]
  4331ec:	add	sp, sp, #0x70
  4331f0:	ret
  4331f4:	cmp	w0, #0x28
  4331f8:	cset	w0, eq  // eq = none
  4331fc:	ret
  433200:	sub	sp, sp, #0x140
  433204:	stp	x20, x19, [sp, #304]
  433208:	subs	x8, x2, #0x1
  43320c:	mov	x19, x0
  433210:	stp	x29, x30, [sp, #240]
  433214:	str	x28, [sp, #256]
  433218:	stp	x24, x23, [sp, #272]
  43321c:	stp	x22, x21, [sp, #288]
  433220:	add	x29, sp, #0xf0
  433224:	b.eq	4332e0 <wcrtomb@plt+0x2e7f0>  // b.none
  433228:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43322c:	mov	w21, w5
  433230:	mov	x20, x3
  433234:	mov	w11, wzr
  433238:	mov	x22, xzr
  43323c:	add	x23, x1, #0x1
  433240:	mov	w9, #0x1                   	// #1
  433244:	add	x10, x10, #0x60
  433248:	b	433264 <wcrtomb@plt+0x2e774>
  43324c:	ldrb	w11, [x23, x22]
  433250:	cmp	w11, #0x27
  433254:	cset	w11, ne  // ne = any
  433258:	add	x22, x22, #0x1
  43325c:	cmp	x22, x8
  433260:	b.cs	4332e0 <wcrtomb@plt+0x2e7f0>  // b.hs, b.nlast
  433264:	cmp	w11, #0x2
  433268:	b.eq	4332a4 <wcrtomb@plt+0x2e7b4>  // b.none
  43326c:	cmp	w11, #0x1
  433270:	b.eq	43324c <wcrtomb@plt+0x2e75c>  // b.none
  433274:	cbnz	w11, 433258 <wcrtomb@plt+0x2e768>
  433278:	ldrb	w11, [x23, x22]
  43327c:	sub	w11, w11, #0x22
  433280:	cmp	w11, #0x7
  433284:	b.hi	4332d8 <wcrtomb@plt+0x2e7e8>  // b.pmore
  433288:	adr	x12, 433258 <wcrtomb@plt+0x2e768>
  43328c:	ldrb	w13, [x10, x11]
  433290:	add	x12, x12, x13, lsl #2
  433294:	mov	w11, #0x2                   	// #2
  433298:	br	x12
  43329c:	mov	w11, #0x1                   	// #1
  4332a0:	b	433258 <wcrtomb@plt+0x2e768>
  4332a4:	ldrb	w11, [x23, x22]
  4332a8:	cmp	w11, #0x22
  4332ac:	b.eq	4332d8 <wcrtomb@plt+0x2e7e8>  // b.none
  4332b0:	cmp	w11, #0x5c
  4332b4:	b.ne	4332bc <wcrtomb@plt+0x2e7cc>  // b.any
  4332b8:	add	x22, x22, #0x1
  4332bc:	mov	w11, #0x2                   	// #2
  4332c0:	b	433258 <wcrtomb@plt+0x2e768>
  4332c4:	mov	w11, wzr
  4332c8:	add	x9, x9, #0x1
  4332cc:	b	433258 <wcrtomb@plt+0x2e768>
  4332d0:	subs	x9, x9, #0x1
  4332d4:	b.eq	433340 <wcrtomb@plt+0x2e850>  // b.none
  4332d8:	mov	w11, wzr
  4332dc:	b	433258 <wcrtomb@plt+0x2e768>
  4332e0:	ldrb	w8, [x19, #32]
  4332e4:	mov	w9, #0x7                   	// #7
  4332e8:	str	w9, [x19, #192]
  4332ec:	tbz	w8, #4, 433320 <wcrtomb@plt+0x2e830>
  4332f0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4332f4:	ldr	w8, [x8, #4000]
  4332f8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4332fc:	ldr	x9, [x9, #3984]
  433300:	ldr	x10, [x19, #96]
  433304:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433308:	add	x11, x11, #0x213
  43330c:	cmp	w8, #0x7
  433310:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433314:	csel	x1, x9, x11, gt
  433318:	add	x0, x0, #0x274
  43331c:	blr	x10
  433320:	mov	w0, #0x1                   	// #1
  433324:	ldp	x20, x19, [sp, #304]
  433328:	ldp	x22, x21, [sp, #288]
  43332c:	ldp	x24, x23, [sp, #272]
  433330:	ldr	x28, [sp, #256]
  433334:	ldp	x29, x30, [sp, #240]
  433338:	add	sp, sp, #0x140
  43333c:	ret
  433340:	add	x8, x23, x22
  433344:	str	x8, [x4]
  433348:	ldrb	w8, [x19, #36]
  43334c:	tbnz	w8, #3, 433370 <wcrtomb@plt+0x2e880>
  433350:	ldp	x4, x8, [x19, #152]
  433354:	add	x0, x29, #0x18
  433358:	mov	x1, x23
  43335c:	mov	x2, x22
  433360:	mov	x3, xzr
  433364:	blr	x8
  433368:	mov	w22, w0
  43336c:	b	4333f4 <wcrtomb@plt+0x2e904>
  433370:	add	x1, sp, #0x8
  433374:	mov	w4, #0x700                 	// #1792
  433378:	mov	w5, #0x1                   	// #1
  43337c:	mov	x0, x19
  433380:	mov	x2, x23
  433384:	mov	w3, w22
  433388:	bl	433eb8 <wcrtomb@plt+0x2f3c8>
  43338c:	cbz	w0, 4333d0 <wcrtomb@plt+0x2e8e0>
  433390:	ldr	w8, [x19, #192]
  433394:	cmp	w8, #0x9
  433398:	b.ne	4333a4 <wcrtomb@plt+0x2e8b4>  // b.any
  43339c:	ldr	x0, [x19, #200]
  4333a0:	bl	4046b0 <free@plt>
  4333a4:	ldr	w8, [sp, #200]
  4333a8:	cmp	w8, #0x9
  4333ac:	str	w8, [x19, #192]
  4333b0:	b.ne	4333c4 <wcrtomb@plt+0x2e8d4>  // b.any
  4333b4:	ldr	x8, [sp, #208]
  4333b8:	str	x8, [x19, #200]
  4333bc:	str	wzr, [sp, #200]
  4333c0:	str	xzr, [sp, #208]
  4333c4:	add	x0, sp, #0x8
  4333c8:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4333cc:	b	433320 <wcrtomb@plt+0x2e830>
  4333d0:	ldr	x3, [sp, #16]
  4333d4:	ldp	x4, x8, [x19, #152]
  4333d8:	add	x0, x29, #0x18
  4333dc:	mov	x1, x23
  4333e0:	mov	x2, x22
  4333e4:	blr	x8
  4333e8:	mov	w22, w0
  4333ec:	add	x0, sp, #0x8
  4333f0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4333f4:	cbz	w22, 433444 <wcrtomb@plt+0x2e954>
  4333f8:	cmp	w22, #0x9
  4333fc:	b.eq	433480 <wcrtomb@plt+0x2e990>  // b.none
  433400:	cmp	w22, #0x2
  433404:	b.ne	4334c0 <wcrtomb@plt+0x2e9d0>  // b.any
  433408:	bl	4049c0 <__errno_location@plt>
  43340c:	mov	w8, #0xc                   	// #12
  433410:	str	w8, [x0]
  433414:	ldr	w8, [x19, #32]
  433418:	mov	w9, #0x2                   	// #2
  43341c:	str	w9, [x19, #192]
  433420:	tbnz	w8, #7, 433500 <wcrtomb@plt+0x2ea10>
  433424:	tbnz	w8, #4, 433514 <wcrtomb@plt+0x2ea24>
  433428:	tbnz	w8, #3, 4337c0 <wcrtomb@plt+0x2ecd0>
  43342c:	mov	x0, x19
  433430:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  433434:	mov	x21, x19
  433438:	ldr	x20, [x21, #208]!
  43343c:	cbnz	x20, 4337e8 <wcrtomb@plt+0x2ecf8>
  433440:	b	4337cc <wcrtomb@plt+0x2ecdc>
  433444:	ldr	x22, [x29, #24]
  433448:	cbz	x22, 433554 <wcrtomb@plt+0x2ea64>
  43344c:	tbnz	w21, #2, 43358c <wcrtomb@plt+0x2ea9c>
  433450:	ldrb	w8, [x22]
  433454:	cbz	w8, 433688 <wcrtomb@plt+0x2eb98>
  433458:	mov	x0, x22
  43345c:	bl	403f00 <strlen@plt>
  433460:	ldrb	w8, [x19, #33]
  433464:	mov	x3, x0
  433468:	tbnz	w8, #4, 433724 <wcrtomb@plt+0x2ec34>
  43346c:	ldr	w8, [x19, #36]
  433470:	mov	w4, #0x744                 	// #1860
  433474:	lsr	w8, w8, #7
  433478:	bfi	w4, w8, #12, #1
  43347c:	b	433728 <wcrtomb@plt+0x2ec38>
  433480:	ldr	w8, [x19, #192]
  433484:	cmp	w8, #0x9
  433488:	b.ne	433494 <wcrtomb@plt+0x2e9a4>  // b.any
  43348c:	ldr	x0, [x19, #200]
  433490:	bl	4046b0 <free@plt>
  433494:	ldr	x1, [x29, #24]
  433498:	ldrb	w8, [x19, #32]
  43349c:	mov	w9, #0x9                   	// #9
  4334a0:	str	w9, [x19, #192]
  4334a4:	str	x1, [x19, #200]
  4334a8:	tbz	w8, #4, 433320 <wcrtomb@plt+0x2e830>
  4334ac:	ldr	x8, [x19, #96]
  4334b0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4334b4:	add	x0, x0, #0x274
  4334b8:	blr	x8
  4334bc:	b	433320 <wcrtomb@plt+0x2e830>
  4334c0:	ldrb	w8, [x19, #32]
  4334c4:	str	w22, [x19, #192]
  4334c8:	tbz	w8, #4, 433320 <wcrtomb@plt+0x2e830>
  4334cc:	ldr	x20, [x19, #96]
  4334d0:	cmp	w22, #0x1
  4334d4:	b.ne	4335e4 <wcrtomb@plt+0x2eaf4>  // b.any
  4334d8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4334dc:	add	x1, x1, #0x221
  4334e0:	mov	w2, #0x5                   	// #5
  4334e4:	mov	x0, xzr
  4334e8:	bl	4048b0 <dcgettext@plt>
  4334ec:	ldr	x8, [x19, #168]
  4334f0:	ldr	x2, [x19, #184]
  4334f4:	ldrb	w1, [x8, x2]
  4334f8:	blr	x20
  4334fc:	b	433320 <wcrtomb@plt+0x2e830>
  433500:	ldr	x8, [x19, #88]
  433504:	mov	x0, x19
  433508:	blr	x8
  43350c:	ldr	w8, [x19, #32]
  433510:	tbz	w8, #4, 433428 <wcrtomb@plt+0x2e938>
  433514:	ldr	w8, [x19, #192]
  433518:	ldr	x20, [x19, #96]
  43351c:	cmp	w8, #0x9
  433520:	b.eq	433604 <wcrtomb@plt+0x2eb14>  // b.none
  433524:	cmp	w8, #0x1
  433528:	b.ne	43360c <wcrtomb@plt+0x2eb1c>  // b.any
  43352c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433530:	add	x1, x1, #0x221
  433534:	mov	w2, #0x5                   	// #5
  433538:	mov	x0, xzr
  43353c:	bl	4048b0 <dcgettext@plt>
  433540:	ldr	x8, [x19, #168]
  433544:	ldr	x2, [x19, #184]
  433548:	ldrb	w1, [x8, x2]
  43354c:	blr	x20
  433550:	b	4337b8 <wcrtomb@plt+0x2ecc8>
  433554:	mov	w0, #0x1                   	// #1
  433558:	mov	w1, #0x28                  	// #40
  43355c:	bl	4043d0 <calloc@plt>
  433560:	cbz	x0, 433634 <wcrtomb@plt+0x2eb44>
  433564:	ldr	x9, [x19, #208]
  433568:	mov	x8, x0
  43356c:	cbz	x9, 433afc <wcrtomb@plt+0x2f00c>
  433570:	ldr	x9, [x20]
  433574:	mov	x11, x8
  433578:	mov	x10, x11
  43357c:	cbz	x11, 4336c4 <wcrtomb@plt+0x2ebd4>
  433580:	ldr	x11, [x10, #8]
  433584:	cbnz	x11, 433578 <wcrtomb@plt+0x2ea88>
  433588:	b	4336c4 <wcrtomb@plt+0x2ebd4>
  43358c:	mov	w0, #0x1                   	// #1
  433590:	mov	w1, #0x28                  	// #40
  433594:	bl	4043d0 <calloc@plt>
  433598:	cbz	x0, 4336e8 <wcrtomb@plt+0x2ebf8>
  43359c:	ldr	x9, [x19, #208]
  4335a0:	mov	x8, x0
  4335a4:	cbz	x9, 433a48 <wcrtomb@plt+0x2ef58>
  4335a8:	ldr	x9, [x20]
  4335ac:	mov	x11, x8
  4335b0:	mov	x10, x11
  4335b4:	cbz	x11, 4335c0 <wcrtomb@plt+0x2ead0>
  4335b8:	ldr	x11, [x10, #8]
  4335bc:	cbnz	x11, 4335b0 <wcrtomb@plt+0x2eac0>
  4335c0:	ldr	x11, [x9, #8]
  4335c4:	add	x12, x19, #0xd8
  4335c8:	cmp	x11, #0x0
  4335cc:	csel	x12, x12, x11, eq  // eq = none
  4335d0:	str	x10, [x12]
  4335d4:	str	x11, [x10, #8]
  4335d8:	str	x9, [x8]
  4335dc:	str	x8, [x9, #8]
  4335e0:	b	433a50 <wcrtomb@plt+0x2ef60>
  4335e4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4335e8:	ldr	w8, [x8, #4000]
  4335ec:	cmp	w8, w22
  4335f0:	b.le	433670 <wcrtomb@plt+0x2eb80>
  4335f4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4335f8:	add	x8, x8, #0xf58
  4335fc:	ldr	x1, [x8, w22, sxtw #3]
  433600:	b	433678 <wcrtomb@plt+0x2eb88>
  433604:	add	x8, x19, #0xc8
  433608:	b	43362c <wcrtomb@plt+0x2eb3c>
  43360c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433610:	ldr	w9, [x9, #4000]
  433614:	sxtw	x8, w8
  433618:	cmp	w8, w9
  43361c:	b.ge	4337a4 <wcrtomb@plt+0x2ecb4>  // b.tcont
  433620:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433624:	add	x9, x9, #0xf58
  433628:	add	x8, x9, x8, lsl #3
  43362c:	ldr	x1, [x8]
  433630:	b	4337ac <wcrtomb@plt+0x2ecbc>
  433634:	bl	4049c0 <__errno_location@plt>
  433638:	mov	w8, #0xc                   	// #12
  43363c:	str	w8, [x0]
  433640:	ldr	w8, [x19, #32]
  433644:	mov	w9, #0x2                   	// #2
  433648:	str	w9, [x19, #192]
  43364c:	tbnz	w8, #7, 433800 <wcrtomb@plt+0x2ed10>
  433650:	tbnz	w8, #4, 433814 <wcrtomb@plt+0x2ed24>
  433654:	tbnz	w8, #3, 4339dc <wcrtomb@plt+0x2eeec>
  433658:	mov	x0, x19
  43365c:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  433660:	mov	x22, x19
  433664:	ldr	x21, [x22, #208]!
  433668:	cbnz	x21, 4339fc <wcrtomb@plt+0x2ef0c>
  43366c:	b	433af0 <wcrtomb@plt+0x2f000>
  433670:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433674:	add	x1, x1, #0x213
  433678:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43367c:	add	x0, x0, #0x274
  433680:	blr	x20
  433684:	b	433320 <wcrtomb@plt+0x2e830>
  433688:	mov	x0, x22
  43368c:	bl	4046b0 <free@plt>
  433690:	mov	w0, #0x1                   	// #1
  433694:	mov	w1, #0x28                  	// #40
  433698:	bl	4043d0 <calloc@plt>
  43369c:	cbz	x0, 4338a8 <wcrtomb@plt+0x2edb8>
  4336a0:	ldr	x9, [x19, #208]
  4336a4:	mov	x8, x0
  4336a8:	cbz	x9, 433afc <wcrtomb@plt+0x2f00c>
  4336ac:	ldr	x9, [x20]
  4336b0:	mov	x11, x8
  4336b4:	mov	x10, x11
  4336b8:	cbz	x11, 4336c4 <wcrtomb@plt+0x2ebd4>
  4336bc:	ldr	x11, [x10, #8]
  4336c0:	cbnz	x11, 4336b4 <wcrtomb@plt+0x2ebc4>
  4336c4:	ldr	x11, [x9, #8]
  4336c8:	add	x12, x19, #0xd8
  4336cc:	cmp	x11, #0x0
  4336d0:	csel	x12, x12, x11, eq  // eq = none
  4336d4:	str	x10, [x12]
  4336d8:	str	x11, [x10, #8]
  4336dc:	str	x9, [x8]
  4336e0:	str	x8, [x9, #8]
  4336e4:	b	433b04 <wcrtomb@plt+0x2f014>
  4336e8:	bl	4049c0 <__errno_location@plt>
  4336ec:	mov	w8, #0xc                   	// #12
  4336f0:	str	w8, [x0]
  4336f4:	ldr	w8, [x19, #32]
  4336f8:	mov	w9, #0x2                   	// #2
  4336fc:	str	w9, [x19, #192]
  433700:	tbnz	w8, #7, 433854 <wcrtomb@plt+0x2ed64>
  433704:	tbnz	w8, #4, 433868 <wcrtomb@plt+0x2ed78>
  433708:	tbnz	w8, #3, 433a30 <wcrtomb@plt+0x2ef40>
  43370c:	mov	x0, x19
  433710:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  433714:	mov	x23, x19
  433718:	ldr	x22, [x23, #208]!
  43371c:	cbnz	x22, 433a80 <wcrtomb@plt+0x2ef90>
  433720:	b	433a3c <wcrtomb@plt+0x2ef4c>
  433724:	mov	w4, #0x1744                	// #5956
  433728:	add	x1, sp, #0x8
  43372c:	mov	x0, x19
  433730:	mov	x2, x22
  433734:	mov	w5, wzr
  433738:	add	x23, sp, #0x8
  43373c:	bl	433eb8 <wcrtomb@plt+0x2f3c8>
  433740:	ldr	x8, [x29, #24]
  433744:	mov	w21, w0
  433748:	mov	x0, x8
  43374c:	bl	4046b0 <free@plt>
  433750:	cbnz	w21, 433390 <wcrtomb@plt+0x2e8a0>
  433754:	mov	x11, x19
  433758:	ldr	x9, [sp, #216]
  43375c:	ldr	x10, [x20]
  433760:	ldr	x12, [x11, #208]!
  433764:	add	x8, x23, #0xd0
  433768:	cbz	x12, 4338e4 <wcrtomb@plt+0x2edf4>
  43376c:	mov	x11, x9
  433770:	mov	x12, x11
  433774:	cbz	x11, 433780 <wcrtomb@plt+0x2ec90>
  433778:	ldr	x11, [x12, #8]
  43377c:	cbnz	x11, 433770 <wcrtomb@plt+0x2ec80>
  433780:	mov	x11, x10
  433784:	ldr	x13, [x11, #8]!
  433788:	add	x14, x19, #0xd8
  43378c:	cmp	x13, #0x0
  433790:	csel	x14, x14, x13, eq  // eq = none
  433794:	str	x12, [x14]
  433798:	str	x13, [x12, #8]
  43379c:	str	x10, [x9]
  4337a0:	b	4338ec <wcrtomb@plt+0x2edfc>
  4337a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4337a8:	add	x1, x1, #0x213
  4337ac:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4337b0:	add	x0, x0, #0x274
  4337b4:	blr	x20
  4337b8:	ldr	w8, [x19, #32]
  4337bc:	tbz	w8, #3, 43342c <wcrtomb@plt+0x2e93c>
  4337c0:	mov	x21, x19
  4337c4:	ldr	x20, [x21, #208]!
  4337c8:	cbnz	x20, 4337e8 <wcrtomb@plt+0x2ecf8>
  4337cc:	stp	xzr, xzr, [x21]
  4337d0:	ldr	w0, [x19, #192]
  4337d4:	b	433324 <wcrtomb@plt+0x2e834>
  4337d8:	mov	x0, x20
  4337dc:	bl	4046b0 <free@plt>
  4337e0:	mov	x20, x22
  4337e4:	cbz	x22, 4337cc <wcrtomb@plt+0x2ecdc>
  4337e8:	ldrb	w8, [x20, #16]
  4337ec:	ldr	x22, [x20, #8]
  4337f0:	tbz	w8, #1, 4337d8 <wcrtomb@plt+0x2ece8>
  4337f4:	ldr	x0, [x20, #24]
  4337f8:	bl	4046b0 <free@plt>
  4337fc:	b	4337d8 <wcrtomb@plt+0x2ece8>
  433800:	ldr	x8, [x19, #88]
  433804:	mov	x0, x19
  433808:	blr	x8
  43380c:	ldr	w8, [x19, #32]
  433810:	tbz	w8, #4, 433654 <wcrtomb@plt+0x2eb64>
  433814:	ldr	w8, [x19, #192]
  433818:	ldr	x21, [x19, #96]
  43381c:	cmp	w8, #0x9
  433820:	b.eq	43390c <wcrtomb@plt+0x2ee1c>  // b.none
  433824:	cmp	w8, #0x1
  433828:	b.ne	433914 <wcrtomb@plt+0x2ee24>  // b.any
  43382c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433830:	add	x1, x1, #0x221
  433834:	mov	w2, #0x5                   	// #5
  433838:	mov	x0, xzr
  43383c:	bl	4048b0 <dcgettext@plt>
  433840:	ldr	x8, [x19, #168]
  433844:	ldr	x2, [x19, #184]
  433848:	ldrb	w1, [x8, x2]
  43384c:	blr	x21
  433850:	b	4339d4 <wcrtomb@plt+0x2eee4>
  433854:	ldr	x8, [x19, #88]
  433858:	mov	x0, x19
  43385c:	blr	x8
  433860:	ldr	w8, [x19, #32]
  433864:	tbz	w8, #4, 433708 <wcrtomb@plt+0x2ec18>
  433868:	ldr	w8, [x19, #192]
  43386c:	ldr	x22, [x19, #96]
  433870:	cmp	w8, #0x9
  433874:	b.eq	433990 <wcrtomb@plt+0x2eea0>  // b.none
  433878:	cmp	w8, #0x1
  43387c:	b.ne	433998 <wcrtomb@plt+0x2eea8>  // b.any
  433880:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433884:	add	x1, x1, #0x221
  433888:	mov	w2, #0x5                   	// #5
  43388c:	mov	x0, xzr
  433890:	bl	4048b0 <dcgettext@plt>
  433894:	ldr	x8, [x19, #168]
  433898:	ldr	x2, [x19, #184]
  43389c:	ldrb	w1, [x8, x2]
  4338a0:	blr	x22
  4338a4:	b	433a28 <wcrtomb@plt+0x2ef38>
  4338a8:	bl	4049c0 <__errno_location@plt>
  4338ac:	mov	w8, #0xc                   	// #12
  4338b0:	str	w8, [x0]
  4338b4:	ldr	w8, [x19, #32]
  4338b8:	mov	w9, #0x2                   	// #2
  4338bc:	str	w9, [x19, #192]
  4338c0:	tbnz	w8, #7, 43393c <wcrtomb@plt+0x2ee4c>
  4338c4:	tbnz	w8, #4, 433950 <wcrtomb@plt+0x2ee60>
  4338c8:	tbnz	w8, #3, 433ae4 <wcrtomb@plt+0x2eff4>
  4338cc:	mov	x0, x19
  4338d0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4338d4:	mov	x22, x19
  4338d8:	ldr	x21, [x22, #208]!
  4338dc:	cbnz	x21, 433b28 <wcrtomb@plt+0x2f038>
  4338e0:	b	433af0 <wcrtomb@plt+0x2f000>
  4338e4:	stp	xzr, xzr, [x9]
  4338e8:	str	x9, [x19, #216]
  4338ec:	str	x9, [x11]
  4338f0:	ldr	x9, [sp, #224]
  4338f4:	add	x0, sp, #0x8
  4338f8:	str	x9, [x20]
  4338fc:	stp	xzr, xzr, [x8]
  433900:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  433904:	mov	w0, wzr
  433908:	b	433324 <wcrtomb@plt+0x2e834>
  43390c:	add	x8, x19, #0xc8
  433910:	b	433934 <wcrtomb@plt+0x2ee44>
  433914:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433918:	ldr	w9, [x9, #4000]
  43391c:	sxtw	x8, w8
  433920:	cmp	w8, w9
  433924:	b.ge	4339c0 <wcrtomb@plt+0x2eed0>  // b.tcont
  433928:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43392c:	add	x9, x9, #0xf58
  433930:	add	x8, x9, x8, lsl #3
  433934:	ldr	x1, [x8]
  433938:	b	4339c8 <wcrtomb@plt+0x2eed8>
  43393c:	ldr	x8, [x19, #88]
  433940:	mov	x0, x19
  433944:	blr	x8
  433948:	ldr	w8, [x19, #32]
  43394c:	tbz	w8, #4, 4338c8 <wcrtomb@plt+0x2edd8>
  433950:	ldr	w8, [x19, #192]
  433954:	ldr	x21, [x19, #96]
  433958:	cmp	w8, #0x9
  43395c:	b.eq	433a98 <wcrtomb@plt+0x2efa8>  // b.none
  433960:	cmp	w8, #0x1
  433964:	b.ne	433aa0 <wcrtomb@plt+0x2efb0>  // b.any
  433968:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43396c:	add	x1, x1, #0x221
  433970:	mov	w2, #0x5                   	// #5
  433974:	mov	x0, xzr
  433978:	bl	4048b0 <dcgettext@plt>
  43397c:	ldr	x8, [x19, #168]
  433980:	ldr	x2, [x19, #184]
  433984:	ldrb	w1, [x8, x2]
  433988:	blr	x21
  43398c:	b	433adc <wcrtomb@plt+0x2efec>
  433990:	add	x8, x19, #0xc8
  433994:	b	4339b8 <wcrtomb@plt+0x2eec8>
  433998:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43399c:	ldr	w9, [x9, #4000]
  4339a0:	sxtw	x8, w8
  4339a4:	cmp	w8, w9
  4339a8:	b.ge	433a14 <wcrtomb@plt+0x2ef24>  // b.tcont
  4339ac:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4339b0:	add	x9, x9, #0xf58
  4339b4:	add	x8, x9, x8, lsl #3
  4339b8:	ldr	x1, [x8]
  4339bc:	b	433a1c <wcrtomb@plt+0x2ef2c>
  4339c0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4339c4:	add	x1, x1, #0x213
  4339c8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4339cc:	add	x0, x0, #0x274
  4339d0:	blr	x21
  4339d4:	ldr	w8, [x19, #32]
  4339d8:	tbz	w8, #3, 433658 <wcrtomb@plt+0x2eb68>
  4339dc:	mov	x22, x19
  4339e0:	ldr	x21, [x22, #208]!
  4339e4:	cbnz	x21, 4339fc <wcrtomb@plt+0x2ef0c>
  4339e8:	b	433af0 <wcrtomb@plt+0x2f000>
  4339ec:	mov	x0, x21
  4339f0:	bl	4046b0 <free@plt>
  4339f4:	mov	x21, x23
  4339f8:	cbz	x23, 433af0 <wcrtomb@plt+0x2f000>
  4339fc:	ldrb	w8, [x21, #16]
  433a00:	ldr	x23, [x21, #8]
  433a04:	tbz	w8, #1, 4339ec <wcrtomb@plt+0x2eefc>
  433a08:	ldr	x0, [x21, #24]
  433a0c:	bl	4046b0 <free@plt>
  433a10:	b	4339ec <wcrtomb@plt+0x2eefc>
  433a14:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433a18:	add	x1, x1, #0x213
  433a1c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433a20:	add	x0, x0, #0x274
  433a24:	blr	x22
  433a28:	ldr	w8, [x19, #32]
  433a2c:	tbz	w8, #3, 43370c <wcrtomb@plt+0x2ec1c>
  433a30:	mov	x23, x19
  433a34:	ldr	x22, [x23, #208]!
  433a38:	cbnz	x22, 433a80 <wcrtomb@plt+0x2ef90>
  433a3c:	stp	xzr, xzr, [x23]
  433a40:	ldr	w8, [x19, #192]
  433a44:	cbnz	w8, 433320 <wcrtomb@plt+0x2e830>
  433a48:	stp	xzr, xzr, [x8]
  433a4c:	stp	x8, x8, [x19, #208]
  433a50:	mov	w9, #0xa                   	// #10
  433a54:	orr	w9, w21, w9
  433a58:	str	x8, [x20]
  433a5c:	str	w9, [x8, #16]
  433a60:	ldr	x9, [x29, #24]
  433a64:	mov	w0, wzr
  433a68:	str	x9, [x8, #24]
  433a6c:	b	433324 <wcrtomb@plt+0x2e834>
  433a70:	mov	x0, x22
  433a74:	bl	4046b0 <free@plt>
  433a78:	mov	x22, x24
  433a7c:	cbz	x24, 433a3c <wcrtomb@plt+0x2ef4c>
  433a80:	ldrb	w8, [x22, #16]
  433a84:	ldr	x24, [x22, #8]
  433a88:	tbz	w8, #1, 433a70 <wcrtomb@plt+0x2ef80>
  433a8c:	ldr	x0, [x22, #24]
  433a90:	bl	4046b0 <free@plt>
  433a94:	b	433a70 <wcrtomb@plt+0x2ef80>
  433a98:	add	x8, x19, #0xc8
  433a9c:	b	433ac0 <wcrtomb@plt+0x2efd0>
  433aa0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433aa4:	ldr	w9, [x9, #4000]
  433aa8:	sxtw	x8, w8
  433aac:	cmp	w8, w9
  433ab0:	b.ge	433ac8 <wcrtomb@plt+0x2efd8>  // b.tcont
  433ab4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433ab8:	add	x9, x9, #0xf58
  433abc:	add	x8, x9, x8, lsl #3
  433ac0:	ldr	x1, [x8]
  433ac4:	b	433ad0 <wcrtomb@plt+0x2efe0>
  433ac8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433acc:	add	x1, x1, #0x213
  433ad0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433ad4:	add	x0, x0, #0x274
  433ad8:	blr	x21
  433adc:	ldr	w8, [x19, #32]
  433ae0:	tbz	w8, #3, 4338cc <wcrtomb@plt+0x2eddc>
  433ae4:	mov	x22, x19
  433ae8:	ldr	x21, [x22, #208]!
  433aec:	cbnz	x21, 433b28 <wcrtomb@plt+0x2f038>
  433af0:	stp	xzr, xzr, [x22]
  433af4:	ldr	w8, [x19, #192]
  433af8:	cbnz	w8, 433320 <wcrtomb@plt+0x2e830>
  433afc:	stp	xzr, xzr, [x8]
  433b00:	stp	x8, x8, [x19, #208]
  433b04:	mov	w0, wzr
  433b08:	mov	w9, #0x1                   	// #1
  433b0c:	str	x8, [x20]
  433b10:	str	w9, [x8, #16]
  433b14:	b	433324 <wcrtomb@plt+0x2e834>
  433b18:	mov	x0, x21
  433b1c:	bl	4046b0 <free@plt>
  433b20:	mov	x21, x23
  433b24:	cbz	x23, 433af0 <wcrtomb@plt+0x2f000>
  433b28:	ldrb	w8, [x21, #16]
  433b2c:	ldr	x23, [x21, #8]
  433b30:	tbz	w8, #1, 433b18 <wcrtomb@plt+0x2f028>
  433b34:	ldr	x0, [x21, #24]
  433b38:	bl	4046b0 <free@plt>
  433b3c:	b	433b18 <wcrtomb@plt+0x2f028>
  433b40:	stp	x29, x30, [sp, #-96]!
  433b44:	str	x27, [sp, #16]
  433b48:	stp	x26, x25, [sp, #32]
  433b4c:	stp	x24, x23, [sp, #48]
  433b50:	stp	x22, x21, [sp, #64]
  433b54:	stp	x20, x19, [sp, #80]
  433b58:	mov	x29, sp
  433b5c:	cbz	x4, 433bf0 <wcrtomb@plt+0x2f100>
  433b60:	mov	x21, x1
  433b64:	mov	x19, x0
  433b68:	mov	w0, #0x1                   	// #1
  433b6c:	mov	w1, #0x28                  	// #40
  433b70:	mov	w20, w5
  433b74:	mov	x22, x4
  433b78:	mov	x23, x3
  433b7c:	mov	x24, x2
  433b80:	bl	4043d0 <calloc@plt>
  433b84:	cbz	x0, 433bf8 <wcrtomb@plt+0x2f108>
  433b88:	mov	x26, x19
  433b8c:	ldr	x8, [x26, #208]!
  433b90:	mov	x25, x0
  433b94:	cbz	x8, 433d20 <wcrtomb@plt+0x2f230>
  433b98:	ldr	x8, [x21]
  433b9c:	mov	x10, x25
  433ba0:	mov	x9, x10
  433ba4:	cbz	x10, 433bb0 <wcrtomb@plt+0x2f0c0>
  433ba8:	ldr	x10, [x9, #8]
  433bac:	cbnz	x10, 433ba0 <wcrtomb@plt+0x2f0b0>
  433bb0:	ldr	x10, [x8, #8]
  433bb4:	add	x11, x19, #0xd8
  433bb8:	cmp	x10, #0x0
  433bbc:	csel	x11, x11, x10, eq  // eq = none
  433bc0:	str	x9, [x11]
  433bc4:	str	x10, [x9, #8]
  433bc8:	str	x8, [x25]
  433bcc:	str	x25, [x8, #8]
  433bd0:	ldr	w8, [x24, #16]
  433bd4:	tbnz	w8, #1, 433d30 <wcrtomb@plt+0x2f240>
  433bd8:	ldr	x9, [x24, #24]
  433bdc:	ldr	w8, [x25, #16]
  433be0:	add	x9, x9, x23
  433be4:	add	x10, x9, x22
  433be8:	stp	x9, x10, [x25, #24]
  433bec:	b	433d64 <wcrtomb@plt+0x2f274>
  433bf0:	mov	w0, wzr
  433bf4:	b	433d74 <wcrtomb@plt+0x2f284>
  433bf8:	bl	4049c0 <__errno_location@plt>
  433bfc:	mov	w8, #0xc                   	// #12
  433c00:	str	w8, [x0]
  433c04:	ldr	w8, [x19, #32]
  433c08:	mov	w9, #0x2                   	// #2
  433c0c:	str	w9, [x19, #192]
  433c10:	tbnz	w8, #7, 433c2c <wcrtomb@plt+0x2f13c>
  433c14:	tbnz	w8, #4, 433c40 <wcrtomb@plt+0x2f150>
  433c18:	tbz	w8, #3, 433ccc <wcrtomb@plt+0x2f1dc>
  433c1c:	mov	x26, x19
  433c20:	ldr	x25, [x26, #208]!
  433c24:	cbnz	x25, 433d04 <wcrtomb@plt+0x2f214>
  433c28:	b	433ce0 <wcrtomb@plt+0x2f1f0>
  433c2c:	ldr	x8, [x19, #88]
  433c30:	mov	x0, x19
  433c34:	blr	x8
  433c38:	ldr	w8, [x19, #32]
  433c3c:	tbz	w8, #4, 433c18 <wcrtomb@plt+0x2f128>
  433c40:	ldr	w8, [x19, #192]
  433c44:	ldr	x25, [x19, #96]
  433c48:	cmp	w8, #0x9
  433c4c:	b.eq	433c80 <wcrtomb@plt+0x2f190>  // b.none
  433c50:	cmp	w8, #0x1
  433c54:	b.ne	433c88 <wcrtomb@plt+0x2f198>  // b.any
  433c58:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433c5c:	add	x1, x1, #0x221
  433c60:	mov	w2, #0x5                   	// #5
  433c64:	mov	x0, xzr
  433c68:	bl	4048b0 <dcgettext@plt>
  433c6c:	ldr	x8, [x19, #168]
  433c70:	ldr	x2, [x19, #184]
  433c74:	ldrb	w1, [x8, x2]
  433c78:	blr	x25
  433c7c:	b	433cc4 <wcrtomb@plt+0x2f1d4>
  433c80:	add	x8, x19, #0xc8
  433c84:	b	433ca8 <wcrtomb@plt+0x2f1b8>
  433c88:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433c8c:	ldr	w9, [x9, #4000]
  433c90:	sxtw	x8, w8
  433c94:	cmp	w8, w9
  433c98:	b.ge	433cb0 <wcrtomb@plt+0x2f1c0>  // b.tcont
  433c9c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433ca0:	add	x9, x9, #0xf58
  433ca4:	add	x8, x9, x8, lsl #3
  433ca8:	ldr	x1, [x8]
  433cac:	b	433cb8 <wcrtomb@plt+0x2f1c8>
  433cb0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433cb4:	add	x1, x1, #0x213
  433cb8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433cbc:	add	x0, x0, #0x274
  433cc0:	blr	x25
  433cc4:	ldr	w8, [x19, #32]
  433cc8:	tbnz	w8, #3, 433c1c <wcrtomb@plt+0x2f12c>
  433ccc:	mov	x0, x19
  433cd0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  433cd4:	mov	x26, x19
  433cd8:	ldr	x25, [x26, #208]!
  433cdc:	cbnz	x25, 433d04 <wcrtomb@plt+0x2f214>
  433ce0:	stp	xzr, xzr, [x26]
  433ce4:	ldr	w8, [x19, #192]
  433ce8:	cbz	w8, 433d1c <wcrtomb@plt+0x2f22c>
  433cec:	mov	w0, #0x1                   	// #1
  433cf0:	b	433d74 <wcrtomb@plt+0x2f284>
  433cf4:	mov	x0, x25
  433cf8:	bl	4046b0 <free@plt>
  433cfc:	mov	x25, x27
  433d00:	cbz	x27, 433ce0 <wcrtomb@plt+0x2f1f0>
  433d04:	ldrb	w8, [x25, #16]
  433d08:	ldr	x27, [x25, #8]
  433d0c:	tbz	w8, #1, 433cf4 <wcrtomb@plt+0x2f204>
  433d10:	ldr	x0, [x25, #24]
  433d14:	bl	4046b0 <free@plt>
  433d18:	b	433cf4 <wcrtomb@plt+0x2f204>
  433d1c:	add	x26, x19, #0xd0
  433d20:	stp	xzr, xzr, [x25]
  433d24:	stp	x25, x25, [x19, #208]
  433d28:	ldr	w8, [x24, #16]
  433d2c:	tbz	w8, #1, 433bd8 <wcrtomb@plt+0x2f0e8>
  433d30:	tbnz	w8, #0, 433d90 <wcrtomb@plt+0x2f2a0>
  433d34:	ldr	x27, [x24, #24]
  433d38:	add	x0, x22, #0x1
  433d3c:	bl	404210 <malloc@plt>
  433d40:	cbz	x0, 433da4 <wcrtomb@plt+0x2f2b4>
  433d44:	add	x1, x27, x23
  433d48:	mov	x2, x22
  433d4c:	mov	x24, x0
  433d50:	bl	403e80 <memcpy@plt>
  433d54:	mov	w8, #0x2                   	// #2
  433d58:	strb	wzr, [x24, x22]
  433d5c:	str	w8, [x25, #16]
  433d60:	str	x24, [x25, #24]
  433d64:	mov	w0, wzr
  433d68:	orr	w8, w8, w20
  433d6c:	str	w8, [x25, #16]
  433d70:	str	x25, [x21]
  433d74:	ldp	x20, x19, [sp, #80]
  433d78:	ldp	x22, x21, [sp, #64]
  433d7c:	ldp	x24, x23, [sp, #48]
  433d80:	ldp	x26, x25, [sp, #32]
  433d84:	ldr	x27, [sp, #16]
  433d88:	ldp	x29, x30, [sp], #96
  433d8c:	ret
  433d90:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x1be3c>
  433d94:	add	x27, x27, #0xb36
  433d98:	add	x0, x22, #0x1
  433d9c:	bl	404210 <malloc@plt>
  433da0:	cbnz	x0, 433d44 <wcrtomb@plt+0x2f254>
  433da4:	bl	4049c0 <__errno_location@plt>
  433da8:	mov	w8, #0xc                   	// #12
  433dac:	str	w8, [x0]
  433db0:	ldr	w8, [x19, #32]
  433db4:	mov	w9, #0x2                   	// #2
  433db8:	str	w9, [x19, #192]
  433dbc:	tbnz	w8, #7, 433dd4 <wcrtomb@plt+0x2f2e4>
  433dc0:	tbnz	w8, #4, 433de8 <wcrtomb@plt+0x2f2f8>
  433dc4:	tbz	w8, #3, 433e74 <wcrtomb@plt+0x2f384>
  433dc8:	ldr	x20, [x26]
  433dcc:	cbnz	x20, 433ea0 <wcrtomb@plt+0x2f3b0>
  433dd0:	b	433e84 <wcrtomb@plt+0x2f394>
  433dd4:	ldr	x8, [x19, #88]
  433dd8:	mov	x0, x19
  433ddc:	blr	x8
  433de0:	ldr	w8, [x19, #32]
  433de4:	tbz	w8, #4, 433dc4 <wcrtomb@plt+0x2f2d4>
  433de8:	ldr	w8, [x19, #192]
  433dec:	ldr	x20, [x19, #96]
  433df0:	cmp	w8, #0x9
  433df4:	b.eq	433e28 <wcrtomb@plt+0x2f338>  // b.none
  433df8:	cmp	w8, #0x1
  433dfc:	b.ne	433e30 <wcrtomb@plt+0x2f340>  // b.any
  433e00:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433e04:	add	x1, x1, #0x221
  433e08:	mov	w2, #0x5                   	// #5
  433e0c:	mov	x0, xzr
  433e10:	bl	4048b0 <dcgettext@plt>
  433e14:	ldr	x8, [x19, #168]
  433e18:	ldr	x2, [x19, #184]
  433e1c:	ldrb	w1, [x8, x2]
  433e20:	blr	x20
  433e24:	b	433e6c <wcrtomb@plt+0x2f37c>
  433e28:	add	x8, x19, #0xc8
  433e2c:	b	433e50 <wcrtomb@plt+0x2f360>
  433e30:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433e34:	ldr	w9, [x9, #4000]
  433e38:	sxtw	x8, w8
  433e3c:	cmp	w8, w9
  433e40:	b.ge	433e58 <wcrtomb@plt+0x2f368>  // b.tcont
  433e44:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  433e48:	add	x9, x9, #0xf58
  433e4c:	add	x8, x9, x8, lsl #3
  433e50:	ldr	x1, [x8]
  433e54:	b	433e60 <wcrtomb@plt+0x2f370>
  433e58:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433e5c:	add	x1, x1, #0x213
  433e60:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  433e64:	add	x0, x0, #0x274
  433e68:	blr	x20
  433e6c:	ldr	w8, [x19, #32]
  433e70:	tbnz	w8, #3, 433dc8 <wcrtomb@plt+0x2f2d8>
  433e74:	mov	x0, x19
  433e78:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  433e7c:	ldr	x20, [x26]
  433e80:	cbnz	x20, 433ea0 <wcrtomb@plt+0x2f3b0>
  433e84:	stp	xzr, xzr, [x26]
  433e88:	ldr	w0, [x19, #192]
  433e8c:	b	433d74 <wcrtomb@plt+0x2f284>
  433e90:	mov	x0, x20
  433e94:	bl	4046b0 <free@plt>
  433e98:	mov	x20, x21
  433e9c:	cbz	x21, 433e84 <wcrtomb@plt+0x2f394>
  433ea0:	ldrb	w8, [x20, #16]
  433ea4:	ldr	x21, [x20, #8]
  433ea8:	tbz	w8, #1, 433e90 <wcrtomb@plt+0x2f3a0>
  433eac:	ldr	x0, [x20, #24]
  433eb0:	bl	4046b0 <free@plt>
  433eb4:	b	433e90 <wcrtomb@plt+0x2f3a0>
  433eb8:	stp	x29, x30, [sp, #-48]!
  433ebc:	stp	x22, x21, [sp, #16]
  433ec0:	stp	x20, x19, [sp, #32]
  433ec4:	ldr	x8, [x0, #56]
  433ec8:	mov	w20, w5
  433ecc:	mov	x9, x2
  433ed0:	mov	x22, x0
  433ed4:	str	x8, [x1, #56]
  433ed8:	ldr	x8, [x0, #104]
  433edc:	mov	x19, x1
  433ee0:	mov	x29, sp
  433ee4:	str	x8, [x1, #104]
  433ee8:	ldur	q0, [x0, #88]
  433eec:	stur	q0, [x1, #88]
  433ef0:	tbz	w4, #6, 433f0c <wcrtomb@plt+0x2f41c>
  433ef4:	tbz	w4, #2, 433f30 <wcrtomb@plt+0x2f440>
  433ef8:	mov	w8, #0x44                  	// #68
  433efc:	bics	wzr, w8, w4
  433f00:	b.ne	433f44 <wcrtomb@plt+0x2f454>  // b.any
  433f04:	ldr	w8, [x22, #32]
  433f08:	b	433f58 <wcrtomb@plt+0x2f468>
  433f0c:	ldr	x8, [x22, #112]
  433f10:	mov	w10, #0x8180000             	// #135790592
  433f14:	str	x8, [x19, #112]
  433f18:	ldr	x8, [x22, #144]
  433f1c:	str	x8, [x19, #144]
  433f20:	ldr	w8, [x22, #32]
  433f24:	and	w8, w8, w10
  433f28:	orr	w4, w8, w4
  433f2c:	tbnz	w4, #2, 433ef8 <wcrtomb@plt+0x2f408>
  433f30:	ldr	x8, [x22, #160]
  433f34:	str	x8, [x19, #160]
  433f38:	mov	w8, #0x44                  	// #68
  433f3c:	bics	wzr, w8, w4
  433f40:	b.eq	433f04 <wcrtomb@plt+0x2f414>  // b.none
  433f44:	ldr	x8, [x22, #152]
  433f48:	str	x8, [x19, #152]
  433f4c:	ldr	w8, [x22, #32]
  433f50:	and	w10, w8, #0x4000000
  433f54:	orr	w4, w10, w4
  433f58:	mov	w11, #0x10                  	// #16
  433f5c:	movk	w11, #0x8020, lsl #16
  433f60:	ldr	w10, [x22, #36]
  433f64:	mov	w12, #0x4000                	// #16384
  433f68:	and	w8, w8, w11
  433f6c:	movk	w12, #0x7, lsl #16
  433f70:	orr	w8, w4, w8
  433f74:	orr	w8, w8, w12
  433f78:	sxtw	x2, w3
  433f7c:	mov	x0, x19
  433f80:	mov	x1, x9
  433f84:	mov	w3, w8
  433f88:	str	w10, [x19, #36]
  433f8c:	bl	430158 <wcrtomb@plt+0x2b668>
  433f90:	mov	w21, w0
  433f94:	cbnz	w0, 434008 <wcrtomb@plt+0x2f518>
  433f98:	ldr	w8, [x22, #224]
  433f9c:	mov	x0, x19
  433fa0:	mov	x1, xzr
  433fa4:	add	w8, w8, #0x1
  433fa8:	str	w8, [x19, #224]
  433fac:	bl	430438 <wcrtomb@plt+0x2b948>
  433fb0:	cbz	w0, 433fec <wcrtomb@plt+0x2f4fc>
  433fb4:	ldr	x20, [x19, #208]!
  433fb8:	mov	w21, w0
  433fbc:	cbnz	x20, 433fd4 <wcrtomb@plt+0x2f4e4>
  433fc0:	b	434004 <wcrtomb@plt+0x2f514>
  433fc4:	mov	x0, x20
  433fc8:	bl	4046b0 <free@plt>
  433fcc:	mov	x20, x22
  433fd0:	cbz	x22, 434004 <wcrtomb@plt+0x2f514>
  433fd4:	ldrb	w8, [x20, #16]
  433fd8:	ldr	x22, [x20, #8]
  433fdc:	tbz	w8, #1, 433fc4 <wcrtomb@plt+0x2f4d4>
  433fe0:	ldr	x0, [x20, #24]
  433fe4:	bl	4046b0 <free@plt>
  433fe8:	b	433fc4 <wcrtomb@plt+0x2f4d4>
  433fec:	cbz	w20, 434044 <wcrtomb@plt+0x2f554>
  433ff0:	mov	x0, x19
  433ff4:	bl	42fbb0 <wcrtomb@plt+0x2b0c0>
  433ff8:	ldr	x20, [x19, #208]!
  433ffc:	mov	w21, w0
  434000:	cbnz	x20, 43402c <wcrtomb@plt+0x2f53c>
  434004:	stp	xzr, xzr, [x19]
  434008:	mov	w0, w21
  43400c:	ldp	x20, x19, [sp, #32]
  434010:	ldp	x22, x21, [sp, #16]
  434014:	ldp	x29, x30, [sp], #48
  434018:	ret
  43401c:	mov	x0, x20
  434020:	bl	4046b0 <free@plt>
  434024:	mov	x20, x22
  434028:	cbz	x22, 434004 <wcrtomb@plt+0x2f514>
  43402c:	ldrb	w8, [x20, #16]
  434030:	ldr	x22, [x20, #8]
  434034:	tbz	w8, #1, 43401c <wcrtomb@plt+0x2f52c>
  434038:	ldr	x0, [x20, #24]
  43403c:	bl	4046b0 <free@plt>
  434040:	b	43401c <wcrtomb@plt+0x2f52c>
  434044:	mov	w21, wzr
  434048:	b	434008 <wcrtomb@plt+0x2f518>
  43404c:	and	w8, w0, #0xffffffdf
  434050:	cmp	w0, #0x7b
  434054:	sub	w8, w8, #0x41
  434058:	cset	w9, eq  // eq = none
  43405c:	cmp	w8, #0x1a
  434060:	cset	w8, cc  // cc = lo, ul, last
  434064:	cmp	w0, #0x5f
  434068:	orr	w8, w9, w8
  43406c:	cset	w9, eq  // eq = none
  434070:	orr	w0, w9, w8
  434074:	ret
  434078:	stp	x29, x30, [sp, #-96]!
  43407c:	stp	x28, x27, [sp, #16]
  434080:	stp	x26, x25, [sp, #32]
  434084:	stp	x24, x23, [sp, #48]
  434088:	stp	x22, x21, [sp, #64]
  43408c:	stp	x20, x19, [sp, #80]
  434090:	mov	x29, sp
  434094:	sub	sp, sp, #0x200
  434098:	mov	x23, x1
  43409c:	ldrb	w8, [x23], #-1
  4340a0:	mov	w26, w5
  4340a4:	mov	x22, x4
  4340a8:	mov	x28, x3
  4340ac:	and	w9, w8, #0xffffffdf
  4340b0:	sub	w9, w9, #0x41
  4340b4:	and	w9, w9, #0xff
  4340b8:	mov	x25, x1
  4340bc:	cmp	w9, #0x1a
  4340c0:	mov	x19, x0
  4340c4:	b.cc	4340d8 <wcrtomb@plt+0x2f5e8>  // b.lo, b.ul, b.last
  4340c8:	cmp	w8, #0x7b
  4340cc:	b.eq	434318 <wcrtomb@plt+0x2f828>  // b.none
  4340d0:	cmp	w8, #0x5f
  4340d4:	b.ne	43443c <wcrtomb@plt+0x2f94c>  // b.any
  4340d8:	cmp	x2, #0x2
  4340dc:	mov	w24, #0x1                   	// #1
  4340e0:	str	x28, [sp, #16]
  4340e4:	str	w26, [sp, #28]
  4340e8:	b.cs	4340fc <wcrtomb@plt+0x2f60c>  // b.hs, b.nlast
  4340ec:	b	434134 <wcrtomb@plt+0x2f644>
  4340f0:	add	x24, x24, #0x1
  4340f4:	cmp	x2, x24
  4340f8:	b.eq	434130 <wcrtomb@plt+0x2f640>  // b.none
  4340fc:	ldrb	w8, [x25, x24]
  434100:	and	w9, w8, #0xffffffdf
  434104:	sub	w9, w9, #0x41
  434108:	and	w9, w9, #0xff
  43410c:	cmp	w9, #0x1a
  434110:	b.cc	4340f0 <wcrtomb@plt+0x2f600>  // b.lo, b.ul, b.last
  434114:	cmp	w8, #0x5f
  434118:	b.eq	4340f0 <wcrtomb@plt+0x2f600>  // b.none
  43411c:	sub	w8, w8, #0x30
  434120:	and	w8, w8, #0xff
  434124:	cmp	w8, #0x9
  434128:	b.ls	4340f0 <wcrtomb@plt+0x2f600>  // b.plast
  43412c:	b	434134 <wcrtomb@plt+0x2f644>
  434130:	mov	x24, x2
  434134:	add	x8, x25, x24
  434138:	sub	x8, x8, #0x1
  43413c:	mov	w28, wzr
  434140:	mov	x27, xzr
  434144:	str	x8, [x22]
  434148:	ldr	w20, [x19, #32]
  43414c:	tbnz	w20, #19, 434218 <wcrtomb@plt+0x2f728>
  434150:	tbnz	w20, #20, 434280 <wcrtomb@plt+0x2f790>
  434154:	cbz	x27, 434498 <wcrtomb@plt+0x2f9a8>
  434158:	ldrb	w8, [x27]
  43415c:	cmp	w8, #0x2d
  434160:	b.eq	434174 <wcrtomb@plt+0x2f684>  // b.none
  434164:	cmp	w8, #0x3f
  434168:	b.eq	4345c4 <wcrtomb@plt+0x2fad4>  // b.none
  43416c:	cmp	w8, #0x3d
  434170:	b.ne	4347cc <wcrtomb@plt+0x2fcdc>  // b.any
  434174:	ldr	w8, [x22]
  434178:	ldr	w9, [x19, #32]
  43417c:	add	x2, x27, #0x1
  434180:	mov	w10, #0x44                  	// #68
  434184:	sub	w3, w8, w2
  434188:	and	w8, w9, w10
  43418c:	mov	w9, #0x700                 	// #1792
  434190:	movk	w9, #0x40, lsl #16
  434194:	orr	w4, w8, w9
  434198:	sub	x1, x29, #0xf8
  43419c:	mov	w5, #0x1                   	// #1
  4341a0:	mov	x0, x19
  4341a4:	bl	433eb8 <wcrtomb@plt+0x2f3c8>
  4341a8:	cbnz	w0, 435f30 <wcrtomb@plt+0x31440>
  4341ac:	ldur	x8, [x29, #-240]
  4341b0:	sub	x0, x29, #0xf8
  4341b4:	ldr	x9, [x8]
  4341b8:	stur	x9, [x29, #-16]
  4341bc:	str	xzr, [x8]
  4341c0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4341c4:	ldrb	w8, [x27]
  4341c8:	cmp	w8, #0x3d
  4341cc:	b.ne	435b5c <wcrtomb@plt+0x3106c>  // b.any
  4341d0:	ldr	w20, [x19, #32]
  4341d4:	ldp	x10, x9, [x19, #128]
  4341d8:	ldur	x26, [x29, #-16]
  4341dc:	mov	w8, #0x1                   	// #1
  4341e0:	tst	w20, #0x8000000
  4341e4:	cinc	x8, x8, ne  // ne = any
  4341e8:	add	x10, x8, x10
  4341ec:	cmp	x10, x9
  4341f0:	b.cc	435408 <wcrtomb@plt+0x30918>  // b.lo, b.ul, b.last
  4341f4:	ldr	x0, [x19, #120]
  4341f8:	cbz	x0, 434f1c <wcrtomb@plt+0x3042c>
  4341fc:	lsl	x8, x9, #1
  434200:	lsl	x1, x9, #4
  434204:	str	x8, [x19, #136]
  434208:	bl	404450 <realloc@plt>
  43420c:	cbz	x0, 43518c <wcrtomb@plt+0x3069c>
  434210:	stp	x0, x0, [x19, #112]
  434214:	b	435408 <wcrtomb@plt+0x30918>
  434218:	ldr	x9, [x19, #112]
  43421c:	tbnz	w20, #27, 4342d0 <wcrtomb@plt+0x2f7e0>
  434220:	cbz	x9, 434150 <wcrtomb@plt+0x2f660>
  434224:	ldr	x8, [x9]
  434228:	cbz	x8, 434150 <wcrtomb@plt+0x2f660>
  43422c:	cbz	x24, 434724 <wcrtomb@plt+0x2fc34>
  434230:	mov	x10, xzr
  434234:	b	434250 <wcrtomb@plt+0x2f760>
  434238:	ldrb	w11, [x8, x24]
  43423c:	cmp	w11, #0x3d
  434240:	b.eq	4347a0 <wcrtomb@plt+0x2fcb0>  // b.none
  434244:	add	x10, x10, #0x1
  434248:	ldr	x8, [x9, x10, lsl #3]
  43424c:	cbz	x8, 434150 <wcrtomb@plt+0x2f660>
  434250:	mov	x11, xzr
  434254:	ldrb	w12, [x25, x11]
  434258:	ldrb	w13, [x8, x11]
  43425c:	cmp	w12, w13
  434260:	b.ne	434274 <wcrtomb@plt+0x2f784>  // b.any
  434264:	add	x11, x11, #0x1
  434268:	cmp	x24, x11
  43426c:	b.ne	434254 <wcrtomb@plt+0x2f764>  // b.any
  434270:	b	434238 <wcrtomb@plt+0x2f748>
  434274:	cmp	x24, x11
  434278:	b.ne	434244 <wcrtomb@plt+0x2f754>  // b.any
  43427c:	b	434238 <wcrtomb@plt+0x2f748>
  434280:	ldp	x8, x3, [x19, #144]
  434284:	sub	x0, x29, #0x10
  434288:	mov	x1, x25
  43428c:	mov	x2, x24
  434290:	blr	x8
  434294:	mov	w26, w0
  434298:	cmp	w0, #0x9
  43429c:	b.hi	434648 <wcrtomb@plt+0x2fb58>  // b.pmore
  4342a0:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4342a4:	mov	w8, w26
  4342a8:	add	x9, x9, #0x68
  4342ac:	adr	x10, 434154 <wcrtomb@plt+0x2f664>
  4342b0:	ldrh	w11, [x9, x8, lsl #1]
  4342b4:	add	x10, x10, x11, lsl #2
  4342b8:	br	x10
  4342bc:	ldur	x0, [x29, #-16]
  4342c0:	cbnz	x0, 434afc <wcrtomb@plt+0x3000c>
  4342c4:	cbz	w28, 4347d0 <wcrtomb@plt+0x2fce0>
  4342c8:	mov	x0, xzr
  4342cc:	b	434b0c <wcrtomb@plt+0x3001c>
  4342d0:	ldr	x26, [x9]
  4342d4:	cbz	x26, 434150 <wcrtomb@plt+0x2f660>
  4342d8:	add	x21, x9, #0x8
  4342dc:	mov	x0, x26
  4342e0:	bl	403f00 <strlen@plt>
  4342e4:	cmp	x0, x24
  4342e8:	b.ne	434300 <wcrtomb@plt+0x2f810>  // b.any
  4342ec:	mov	x0, x26
  4342f0:	mov	x1, x25
  4342f4:	mov	x2, x24
  4342f8:	bl	404400 <bcmp@plt>
  4342fc:	cbz	w0, 434768 <wcrtomb@plt+0x2fc78>
  434300:	ldr	x8, [x21]
  434304:	cbz	x8, 434150 <wcrtomb@plt+0x2f660>
  434308:	ldr	x26, [x21, #8]
  43430c:	add	x21, x21, #0x10
  434310:	cbnz	x26, 4342dc <wcrtomb@plt+0x2f7ec>
  434314:	b	434150 <wcrtomb@plt+0x2f660>
  434318:	sub	x8, x2, #0x1
  43431c:	str	w26, [sp, #28]
  434320:	cmp	x8, #0x2
  434324:	add	x26, x25, #0x1
  434328:	b.cc	434528 <wcrtomb@plt+0x2fa38>  // b.lo, b.ul, b.last
  43432c:	mov	x9, #0x1                   	// #1
  434330:	movk	x9, #0x2800, lsl #32
  434334:	mov	w11, #0x2                   	// #2
  434338:	movk	x9, #0xa000, lsl #48
  43433c:	mov	w10, #0x1                   	// #1
  434340:	sub	x11, x11, x2
  434344:	mov	w24, #0x1                   	// #1
  434348:	b	43435c <wcrtomb@plt+0x2f86c>
  43434c:	add	x24, x24, #0x1
  434350:	add	x12, x11, x24
  434354:	cmp	x12, #0x1
  434358:	b.eq	434538 <wcrtomb@plt+0x2fa48>  // b.none
  43435c:	add	x12, x25, x24
  434360:	ldrb	w12, [x12, #1]
  434364:	cmp	w12, #0x7d
  434368:	b.eq	4349cc <wcrtomb@plt+0x2fedc>  // b.none
  43436c:	cmp	w12, #0x3a
  434370:	b.eq	434a28 <wcrtomb@plt+0x2ff38>  // b.none
  434374:	cmp	w12, #0x3f
  434378:	b.hi	43434c <wcrtomb@plt+0x2f85c>  // b.pmore
  43437c:	lsl	x12, x10, x12
  434380:	and	x12, x12, x9
  434384:	cbz	x12, 43434c <wcrtomb@plt+0x2f85c>
  434388:	add	x9, x25, x24
  43438c:	mov	w11, wzr
  434390:	add	x27, x9, #0x1
  434394:	mov	w10, #0x1                   	// #1
  434398:	mov	x9, x24
  43439c:	b	4343b8 <wcrtomb@plt+0x2f8c8>
  4343a0:	ldrb	w11, [x26, x9]
  4343a4:	cmp	w11, #0x27
  4343a8:	cset	w11, ne  // ne = any
  4343ac:	add	x9, x9, #0x1
  4343b0:	cmp	x9, x8
  4343b4:	b.cs	434538 <wcrtomb@plt+0x2fa48>  // b.hs, b.nlast
  4343b8:	cmp	w11, #0x2
  4343bc:	b.eq	4343f0 <wcrtomb@plt+0x2f900>  // b.none
  4343c0:	cmp	w11, #0x1
  4343c4:	b.eq	4343a0 <wcrtomb@plt+0x2f8b0>  // b.none
  4343c8:	cbnz	w11, 4343ac <wcrtomb@plt+0x2f8bc>
  4343cc:	ldrb	w11, [x26, x9]
  4343d0:	cmp	w11, #0x7a
  4343d4:	b.gt	434410 <wcrtomb@plt+0x2f920>
  4343d8:	cmp	w11, #0x22
  4343dc:	b.eq	434408 <wcrtomb@plt+0x2f918>  // b.none
  4343e0:	cmp	w11, #0x27
  4343e4:	b.ne	434434 <wcrtomb@plt+0x2f944>  // b.any
  4343e8:	mov	w11, #0x1                   	// #1
  4343ec:	b	4343ac <wcrtomb@plt+0x2f8bc>
  4343f0:	ldrb	w11, [x26, x9]
  4343f4:	cmp	w11, #0x22
  4343f8:	b.eq	434434 <wcrtomb@plt+0x2f944>  // b.none
  4343fc:	cmp	w11, #0x5c
  434400:	b.ne	434408 <wcrtomb@plt+0x2f918>  // b.any
  434404:	add	x9, x9, #0x1
  434408:	mov	w11, #0x2                   	// #2
  43440c:	b	4343ac <wcrtomb@plt+0x2f8bc>
  434410:	cmp	w11, #0x7d
  434414:	b.eq	43442c <wcrtomb@plt+0x2f93c>  // b.none
  434418:	cmp	w11, #0x7b
  43441c:	b.ne	434434 <wcrtomb@plt+0x2f944>  // b.any
  434420:	mov	w11, wzr
  434424:	add	x10, x10, #0x1
  434428:	b	4343ac <wcrtomb@plt+0x2f8bc>
  43442c:	subs	x10, x10, #0x1
  434430:	b.eq	4349d4 <wcrtomb@plt+0x2fee4>  // b.none
  434434:	mov	w11, wzr
  434438:	b	4343ac <wcrtomb@plt+0x2f8bc>
  43443c:	mov	w0, #0x1                   	// #1
  434440:	mov	w1, #0x28                  	// #40
  434444:	bl	4043d0 <calloc@plt>
  434448:	cbz	x0, 434694 <wcrtomb@plt+0x2fba4>
  43444c:	mov	x24, x19
  434450:	ldr	x8, [x24, #208]!
  434454:	mov	x23, x0
  434458:	cbz	x8, 434df0 <wcrtomb@plt+0x30300>
  43445c:	ldr	x8, [x28]
  434460:	mov	x10, x23
  434464:	mov	x9, x10
  434468:	cbz	x10, 434474 <wcrtomb@plt+0x2f984>
  43446c:	ldr	x10, [x9, #8]
  434470:	cbnz	x10, 434464 <wcrtomb@plt+0x2f974>
  434474:	ldr	x10, [x8, #8]
  434478:	add	x11, x19, #0xd8
  43447c:	cmp	x10, #0x0
  434480:	csel	x11, x11, x10, eq  // eq = none
  434484:	str	x9, [x11]
  434488:	str	x10, [x9, #8]
  43448c:	str	x8, [x23]
  434490:	str	x23, [x8, #8]
  434494:	b	434df8 <wcrtomb@plt+0x30308>
  434498:	mov	x26, x25
  43449c:	ldr	w8, [x19, #32]
  4344a0:	tbnz	w8, #5, 434580 <wcrtomb@plt+0x2fa90>
  4344a4:	tbz	w8, #24, 4344d0 <wcrtomb@plt+0x2f9e0>
  4344a8:	ldr	x20, [x19, #96]
  4344ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4344b0:	add	x1, x1, #0x398
  4344b4:	mov	w2, #0x5                   	// #5
  4344b8:	mov	x0, xzr
  4344bc:	bl	4048b0 <dcgettext@plt>
  4344c0:	mov	w1, w24
  4344c4:	mov	x2, x26
  4344c8:	blr	x20
  4344cc:	ldr	w8, [x19, #32]
  4344d0:	tbnz	w8, #23, 4347cc <wcrtomb@plt+0x2fcdc>
  4344d4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4344d8:	add	x0, x0, #0xb36
  4344dc:	bl	4044a0 <strdup@plt>
  4344e0:	mov	x24, x0
  4344e4:	stur	x0, [x29, #-16]
  4344e8:	cbnz	x0, 435b64 <wcrtomb@plt+0x31074>
  4344ec:	bl	4049c0 <__errno_location@plt>
  4344f0:	mov	w8, #0xc                   	// #12
  4344f4:	str	w8, [x0]
  4344f8:	ldr	w8, [x19, #32]
  4344fc:	mov	w9, #0x2                   	// #2
  434500:	str	w9, [x19, #192]
  434504:	tbnz	w8, #7, 434ca8 <wcrtomb@plt+0x301b8>
  434508:	tbnz	w8, #4, 434cbc <wcrtomb@plt+0x301cc>
  43450c:	tbnz	w8, #3, 4352e0 <wcrtomb@plt+0x307f0>
  434510:	mov	x0, x19
  434514:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  434518:	mov	x21, x19
  43451c:	ldr	x20, [x21, #208]!
  434520:	cbnz	x20, 435300 <wcrtomb@plt+0x30810>
  434524:	b	434d84 <wcrtomb@plt+0x30294>
  434528:	mov	x27, xzr
  43452c:	mov	w24, #0x1                   	// #1
  434530:	cmp	x24, x8
  434534:	b.ne	4349e4 <wcrtomb@plt+0x2fef4>  // b.any
  434538:	ldrb	w8, [x19, #32]
  43453c:	mov	w0, #0x4                   	// #4
  434540:	str	w0, [x19, #192]
  434544:	tbz	w8, #4, 435f30 <wcrtomb@plt+0x31440>
  434548:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43454c:	ldr	w8, [x8, #4000]
  434550:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434554:	ldr	x9, [x9, #3960]
  434558:	ldr	x10, [x19, #96]
  43455c:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434560:	add	x11, x11, #0x213
  434564:	cmp	w8, #0x4
  434568:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43456c:	csel	x1, x9, x11, gt
  434570:	add	x0, x0, #0x274
  434574:	blr	x10
  434578:	mov	w0, #0x4                   	// #4
  43457c:	b	435f30 <wcrtomb@plt+0x31440>
  434580:	mov	w9, #0x5                   	// #5
  434584:	str	w9, [x19, #192]
  434588:	tbz	w8, #4, 435050 <wcrtomb@plt+0x30560>
  43458c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434590:	ldr	w8, [x8, #4000]
  434594:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434598:	ldr	x9, [x9, #3968]
  43459c:	ldr	x10, [x19, #96]
  4345a0:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4345a4:	add	x11, x11, #0x213
  4345a8:	cmp	w8, #0x5
  4345ac:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4345b0:	csel	x1, x9, x11, gt
  4345b4:	add	x0, x0, #0x274
  4345b8:	blr	x10
  4345bc:	mov	w0, #0x1                   	// #1
  4345c0:	b	435f30 <wcrtomb@plt+0x31440>
  4345c4:	ldr	x8, [x22]
  4345c8:	add	x26, x27, #0x1
  4345cc:	subs	x27, x8, x26
  4345d0:	b.eq	434740 <wcrtomb@plt+0x2fc50>  // b.none
  4345d4:	ldr	w8, [x19, #32]
  4345d8:	mov	w9, #0x44                  	// #68
  4345dc:	sub	x1, x29, #0xf8
  4345e0:	mov	w5, #0x1                   	// #1
  4345e4:	and	w8, w8, w9
  4345e8:	mov	w9, #0x700                 	// #1792
  4345ec:	movk	w9, #0x40, lsl #16
  4345f0:	orr	w4, w8, w9
  4345f4:	mov	x0, x19
  4345f8:	mov	x2, x26
  4345fc:	mov	w3, w27
  434600:	bl	433eb8 <wcrtomb@plt+0x2f3c8>
  434604:	ldr	x8, [x19, #96]
  434608:	cbz	w0, 4347a8 <wcrtomb@plt+0x2fcb8>
  43460c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434610:	add	x0, x0, #0x38d
  434614:	mov	w1, w24
  434618:	mov	x2, x25
  43461c:	mov	w3, w27
  434620:	mov	x4, x26
  434624:	blr	x8
  434628:	b	4347c4 <wcrtomb@plt+0x2fcd4>
  43462c:	ldr	w8, [x19, #192]
  434630:	cmp	w8, #0x9
  434634:	b.ne	434640 <wcrtomb@plt+0x2fb50>  // b.any
  434638:	ldr	x0, [x19, #200]
  43463c:	bl	4046b0 <free@plt>
  434640:	ldur	x8, [x29, #-16]
  434644:	str	x8, [x19, #200]
  434648:	ldrb	w8, [x19, #32]
  43464c:	str	w26, [x19, #192]
  434650:	tbz	w8, #4, 435050 <wcrtomb@plt+0x30560>
  434654:	ldr	x20, [x19, #96]
  434658:	cmp	w26, #0x9
  43465c:	b.eq	434774 <wcrtomb@plt+0x2fc84>  // b.none
  434660:	cmp	w26, #0x1
  434664:	b.ne	43477c <wcrtomb@plt+0x2fc8c>  // b.any
  434668:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43466c:	add	x1, x1, #0x221
  434670:	mov	w2, #0x5                   	// #5
  434674:	mov	x0, xzr
  434678:	bl	4048b0 <dcgettext@plt>
  43467c:	ldr	x8, [x19, #168]
  434680:	ldr	x2, [x19, #184]
  434684:	ldrb	w1, [x8, x2]
  434688:	blr	x20
  43468c:	mov	w0, #0x1                   	// #1
  434690:	b	435f30 <wcrtomb@plt+0x31440>
  434694:	bl	4049c0 <__errno_location@plt>
  434698:	mov	w8, #0xc                   	// #12
  43469c:	str	w8, [x0]
  4346a0:	ldr	w8, [x19, #32]
  4346a4:	mov	w9, #0x2                   	// #2
  4346a8:	str	w9, [x19, #192]
  4346ac:	tbnz	w8, #7, 4346d0 <wcrtomb@plt+0x2fbe0>
  4346b0:	tbnz	w8, #4, 4346e4 <wcrtomb@plt+0x2fbf4>
  4346b4:	tbnz	w8, #3, 434dd4 <wcrtomb@plt+0x302e4>
  4346b8:	mov	x0, x19
  4346bc:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4346c0:	mov	x20, x19
  4346c4:	ldr	x23, [x20, #208]!
  4346c8:	cbnz	x23, 434e48 <wcrtomb@plt+0x30358>
  4346cc:	b	434de0 <wcrtomb@plt+0x302f0>
  4346d0:	ldr	x8, [x19, #88]
  4346d4:	mov	x0, x19
  4346d8:	blr	x8
  4346dc:	ldr	w8, [x19, #32]
  4346e0:	tbz	w8, #4, 4346b4 <wcrtomb@plt+0x2fbc4>
  4346e4:	ldr	w8, [x19, #192]
  4346e8:	ldr	x20, [x19, #96]
  4346ec:	cmp	w8, #0x9
  4346f0:	b.eq	434c78 <wcrtomb@plt+0x30188>  // b.none
  4346f4:	cmp	w8, #0x1
  4346f8:	b.ne	434c80 <wcrtomb@plt+0x30190>  // b.any
  4346fc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434700:	add	x1, x1, #0x221
  434704:	mov	w2, #0x5                   	// #5
  434708:	mov	x0, xzr
  43470c:	bl	4048b0 <dcgettext@plt>
  434710:	ldr	x8, [x19, #168]
  434714:	ldr	x2, [x19, #184]
  434718:	ldrb	w1, [x8, x2]
  43471c:	blr	x20
  434720:	b	434dcc <wcrtomb@plt+0x302dc>
  434724:	add	x9, x9, #0x8
  434728:	ldrb	w10, [x8]
  43472c:	cmp	w10, #0x3d
  434730:	b.eq	434ae4 <wcrtomb@plt+0x2fff4>  // b.none
  434734:	ldr	x8, [x9], #8
  434738:	cbnz	x8, 434728 <wcrtomb@plt+0x2fc38>
  43473c:	b	434150 <wcrtomb@plt+0x2f660>
  434740:	ldr	x20, [x19, #96]
  434744:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434748:	add	x1, x1, #0x365
  43474c:	mov	w2, #0x5                   	// #5
  434750:	mov	x0, xzr
  434754:	bl	4048b0 <dcgettext@plt>
  434758:	mov	w1, w24
  43475c:	mov	x2, x25
  434760:	blr	x20
  434764:	b	4347cc <wcrtomb@plt+0x2fcdc>
  434768:	ldr	x0, [x21]
  43476c:	cbnz	x0, 434af0 <wcrtomb@plt+0x30000>
  434770:	b	434154 <wcrtomb@plt+0x2f664>
  434774:	add	x8, x19, #0xc8
  434778:	b	434798 <wcrtomb@plt+0x2fca8>
  43477c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434780:	ldr	w8, [x8, #4000]
  434784:	cmp	w8, w26
  434788:	b.le	434c5c <wcrtomb@plt+0x3016c>
  43478c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434790:	add	x8, x8, #0xf58
  434794:	add	x8, x8, w26, sxtw #3
  434798:	ldr	x1, [x8]
  43479c:	b	434c64 <wcrtomb@plt+0x30174>
  4347a0:	mov	x9, x24
  4347a4:	b	434ae8 <wcrtomb@plt+0x2fff8>
  4347a8:	ldur	x9, [x29, #-240]
  4347ac:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4347b0:	add	x0, x0, #0x384
  4347b4:	mov	w1, w24
  4347b8:	ldr	x3, [x9]
  4347bc:	mov	x2, x25
  4347c0:	blr	x8
  4347c4:	sub	x0, x29, #0xf8
  4347c8:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4347cc:	stur	xzr, [x29, #-16]
  4347d0:	ldrb	w8, [x19, #34]
  4347d4:	tbnz	w8, #7, 434834 <wcrtomb@plt+0x2fd44>
  4347d8:	mov	w0, #0x1                   	// #1
  4347dc:	mov	w1, #0x28                  	// #40
  4347e0:	bl	4043d0 <calloc@plt>
  4347e4:	ldr	x23, [sp, #16]
  4347e8:	cbz	x0, 43489c <wcrtomb@plt+0x2fdac>
  4347ec:	ldr	x9, [x19, #208]
  4347f0:	mov	x8, x0
  4347f4:	cbz	x9, 434fd8 <wcrtomb@plt+0x304e8>
  4347f8:	ldr	x9, [x23]
  4347fc:	mov	x11, x8
  434800:	mov	x10, x11
  434804:	cbz	x11, 434810 <wcrtomb@plt+0x2fd20>
  434808:	ldr	x11, [x10, #8]
  43480c:	cbnz	x11, 434800 <wcrtomb@plt+0x2fd10>
  434810:	ldr	x11, [x9, #8]
  434814:	add	x12, x19, #0xd8
  434818:	cmp	x11, #0x0
  43481c:	csel	x12, x12, x11, eq  // eq = none
  434820:	str	x10, [x12]
  434824:	str	x11, [x10, #8]
  434828:	str	x9, [x8]
  43482c:	str	x8, [x9, #8]
  434830:	b	434fe0 <wcrtomb@plt+0x304f0>
  434834:	ldr	x24, [x22]
  434838:	mov	w0, #0x1                   	// #1
  43483c:	mov	w1, #0x28                  	// #40
  434840:	bl	4043d0 <calloc@plt>
  434844:	ldr	x26, [sp, #16]
  434848:	cbz	x0, 4348d8 <wcrtomb@plt+0x2fde8>
  43484c:	mov	x25, x19
  434850:	ldr	x8, [x25, #208]!
  434854:	mov	x22, x0
  434858:	cbz	x8, 434918 <wcrtomb@plt+0x2fe28>
  43485c:	ldr	x8, [x26]
  434860:	ldr	w27, [sp, #28]
  434864:	mov	x10, x22
  434868:	mov	x9, x10
  43486c:	cbz	x10, 434878 <wcrtomb@plt+0x2fd88>
  434870:	ldr	x10, [x9, #8]
  434874:	cbnz	x10, 434868 <wcrtomb@plt+0x2fd78>
  434878:	ldr	x10, [x8, #8]
  43487c:	add	x11, x19, #0xd8
  434880:	cmp	x10, #0x0
  434884:	csel	x11, x11, x10, eq  // eq = none
  434888:	str	x9, [x11]
  43488c:	str	x10, [x9, #8]
  434890:	str	x8, [x22]
  434894:	str	x22, [x8, #8]
  434898:	b	43508c <wcrtomb@plt+0x3059c>
  43489c:	bl	4049c0 <__errno_location@plt>
  4348a0:	mov	w8, #0xc                   	// #12
  4348a4:	str	w8, [x0]
  4348a8:	ldr	w8, [x19, #32]
  4348ac:	mov	w9, #0x2                   	// #2
  4348b0:	str	w9, [x19, #192]
  4348b4:	tbnz	w8, #7, 434920 <wcrtomb@plt+0x2fe30>
  4348b8:	tbnz	w8, #4, 434934 <wcrtomb@plt+0x2fe44>
  4348bc:	tbnz	w8, #3, 434fc0 <wcrtomb@plt+0x304d0>
  4348c0:	mov	x0, x19
  4348c4:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4348c8:	mov	x20, x19
  4348cc:	ldr	x21, [x20, #208]!
  4348d0:	cbnz	x21, 435004 <wcrtomb@plt+0x30514>
  4348d4:	b	434fcc <wcrtomb@plt+0x304dc>
  4348d8:	bl	4049c0 <__errno_location@plt>
  4348dc:	mov	w8, #0xc                   	// #12
  4348e0:	str	w8, [x0]
  4348e4:	ldr	w8, [x19, #32]
  4348e8:	mov	w9, #0x2                   	// #2
  4348ec:	str	w9, [x19, #192]
  4348f0:	tbnz	w8, #7, 434974 <wcrtomb@plt+0x2fe84>
  4348f4:	ldr	w27, [sp, #28]
  4348f8:	tbnz	w8, #4, 43498c <wcrtomb@plt+0x2fe9c>
  4348fc:	tbnz	w8, #3, 435038 <wcrtomb@plt+0x30548>
  434900:	mov	x0, x19
  434904:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  434908:	mov	x20, x19
  43490c:	ldr	x22, [x20, #208]!
  434910:	cbnz	x22, 435068 <wcrtomb@plt+0x30578>
  434914:	b	435044 <wcrtomb@plt+0x30554>
  434918:	ldr	w27, [sp, #28]
  43491c:	b	435084 <wcrtomb@plt+0x30594>
  434920:	ldr	x8, [x19, #88]
  434924:	mov	x0, x19
  434928:	blr	x8
  43492c:	ldr	w8, [x19, #32]
  434930:	tbz	w8, #4, 4348bc <wcrtomb@plt+0x2fdcc>
  434934:	ldr	w8, [x19, #192]
  434938:	ldr	x20, [x19, #96]
  43493c:	cmp	w8, #0x9
  434940:	b.eq	434cfc <wcrtomb@plt+0x3020c>  // b.none
  434944:	cmp	w8, #0x1
  434948:	b.ne	434d04 <wcrtomb@plt+0x30214>  // b.any
  43494c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434950:	add	x1, x1, #0x221
  434954:	mov	w2, #0x5                   	// #5
  434958:	mov	x0, xzr
  43495c:	bl	4048b0 <dcgettext@plt>
  434960:	ldr	x8, [x19, #168]
  434964:	ldr	x2, [x19, #184]
  434968:	ldrb	w1, [x8, x2]
  43496c:	blr	x20
  434970:	b	434fb8 <wcrtomb@plt+0x304c8>
  434974:	ldr	x8, [x19, #88]
  434978:	mov	x0, x19
  43497c:	blr	x8
  434980:	ldr	w8, [x19, #32]
  434984:	ldr	w27, [sp, #28]
  434988:	tbz	w8, #4, 4348fc <wcrtomb@plt+0x2fe0c>
  43498c:	ldr	w8, [x19, #192]
  434990:	ldr	x20, [x19, #96]
  434994:	cmp	w8, #0x9
  434998:	b.eq	434d2c <wcrtomb@plt+0x3023c>  // b.none
  43499c:	cmp	w8, #0x1
  4349a0:	b.ne	434d34 <wcrtomb@plt+0x30244>  // b.any
  4349a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4349a8:	add	x1, x1, #0x221
  4349ac:	mov	w2, #0x5                   	// #5
  4349b0:	mov	x0, xzr
  4349b4:	bl	4048b0 <dcgettext@plt>
  4349b8:	ldr	x8, [x19, #168]
  4349bc:	ldr	x2, [x19, #184]
  4349c0:	ldrb	w1, [x8, x2]
  4349c4:	blr	x20
  4349c8:	b	435030 <wcrtomb@plt+0x30540>
  4349cc:	mov	x27, xzr
  4349d0:	mov	x9, x24
  4349d4:	add	x9, x26, x9
  4349d8:	str	x9, [x22]
  4349dc:	cmp	x24, x8
  4349e0:	b.eq	434538 <wcrtomb@plt+0x2fa48>  // b.none
  4349e4:	str	x28, [sp, #16]
  4349e8:	cbz	x27, 434a1c <wcrtomb@plt+0x2ff2c>
  4349ec:	ldrb	w8, [x27]
  4349f0:	cmp	x8, #0x3f
  4349f4:	b.hi	43449c <wcrtomb@plt+0x2f9ac>  // b.pmore
  4349f8:	mov	x9, #0x1                   	// #1
  4349fc:	mov	w28, #0x1                   	// #1
  434a00:	movk	x9, #0x2800, lsl #32
  434a04:	lsl	x8, x28, x8
  434a08:	movk	x9, #0xa000, lsl #48
  434a0c:	and	x8, x8, x9
  434a10:	mov	x25, x26
  434a14:	cbnz	x8, 434148 <wcrtomb@plt+0x2f658>
  434a18:	b	43449c <wcrtomb@plt+0x2f9ac>
  434a1c:	mov	w28, wzr
  434a20:	mov	x25, x26
  434a24:	b	434148 <wcrtomb@plt+0x2f658>
  434a28:	add	x9, x24, #0x1
  434a2c:	cmp	x9, x8
  434a30:	b.cs	434538 <wcrtomb@plt+0x2fa48>  // b.hs, b.nlast
  434a34:	add	x10, x25, x24
  434a38:	mov	w11, wzr
  434a3c:	add	x27, x10, #0x2
  434a40:	mov	w10, #0x1                   	// #1
  434a44:	b	434a60 <wcrtomb@plt+0x2ff70>
  434a48:	ldrb	w11, [x26, x9]
  434a4c:	cmp	w11, #0x27
  434a50:	cset	w11, ne  // ne = any
  434a54:	add	x9, x9, #0x1
  434a58:	cmp	x9, x8
  434a5c:	b.cs	434538 <wcrtomb@plt+0x2fa48>  // b.hs, b.nlast
  434a60:	cmp	w11, #0x2
  434a64:	b.eq	434a98 <wcrtomb@plt+0x2ffa8>  // b.none
  434a68:	cmp	w11, #0x1
  434a6c:	b.eq	434a48 <wcrtomb@plt+0x2ff58>  // b.none
  434a70:	cbnz	w11, 434a54 <wcrtomb@plt+0x2ff64>
  434a74:	ldrb	w11, [x26, x9]
  434a78:	cmp	w11, #0x7a
  434a7c:	b.gt	434ab8 <wcrtomb@plt+0x2ffc8>
  434a80:	cmp	w11, #0x22
  434a84:	b.eq	434ab0 <wcrtomb@plt+0x2ffc0>  // b.none
  434a88:	cmp	w11, #0x27
  434a8c:	b.ne	434adc <wcrtomb@plt+0x2ffec>  // b.any
  434a90:	mov	w11, #0x1                   	// #1
  434a94:	b	434a54 <wcrtomb@plt+0x2ff64>
  434a98:	ldrb	w11, [x26, x9]
  434a9c:	cmp	w11, #0x22
  434aa0:	b.eq	434adc <wcrtomb@plt+0x2ffec>  // b.none
  434aa4:	cmp	w11, #0x5c
  434aa8:	b.ne	434ab0 <wcrtomb@plt+0x2ffc0>  // b.any
  434aac:	add	x9, x9, #0x1
  434ab0:	mov	w11, #0x2                   	// #2
  434ab4:	b	434a54 <wcrtomb@plt+0x2ff64>
  434ab8:	cmp	w11, #0x7d
  434abc:	b.eq	434ad4 <wcrtomb@plt+0x2ffe4>  // b.none
  434ac0:	cmp	w11, #0x7b
  434ac4:	b.ne	434adc <wcrtomb@plt+0x2ffec>  // b.any
  434ac8:	mov	w11, wzr
  434acc:	add	x10, x10, #0x1
  434ad0:	b	434a54 <wcrtomb@plt+0x2ff64>
  434ad4:	subs	x10, x10, #0x1
  434ad8:	b.eq	4349d4 <wcrtomb@plt+0x2fee4>  // b.none
  434adc:	mov	w11, wzr
  434ae0:	b	434a54 <wcrtomb@plt+0x2ff64>
  434ae4:	mov	x9, xzr
  434ae8:	add	x8, x8, x9
  434aec:	add	x0, x8, #0x1
  434af0:	bl	4044a0 <strdup@plt>
  434af4:	stur	x0, [x29, #-16]
  434af8:	cbz	x0, 434b2c <wcrtomb@plt+0x3003c>
  434afc:	ldrb	w8, [x0]
  434b00:	cbnz	w8, 434bbc <wcrtomb@plt+0x300cc>
  434b04:	eor	w9, w28, #0x1
  434b08:	tbnz	w9, #0, 434bbc <wcrtomb@plt+0x300cc>
  434b0c:	ldurb	w8, [x27, #-1]
  434b10:	cmp	w8, #0x3a
  434b14:	b.ne	434bc4 <wcrtomb@plt+0x300d4>  // b.any
  434b18:	bl	4046b0 <free@plt>
  434b1c:	ldrb	w8, [x27]
  434b20:	cmp	w8, #0x2d
  434b24:	b.ne	434164 <wcrtomb@plt+0x2f674>  // b.any
  434b28:	b	434174 <wcrtomb@plt+0x2f684>
  434b2c:	bl	4049c0 <__errno_location@plt>
  434b30:	mov	w8, #0xc                   	// #12
  434b34:	str	w8, [x0]
  434b38:	ldr	w8, [x19, #32]
  434b3c:	mov	w9, #0x2                   	// #2
  434b40:	str	w9, [x19, #192]
  434b44:	tbnz	w8, #7, 434b68 <wcrtomb@plt+0x30078>
  434b48:	tbnz	w8, #4, 434b7c <wcrtomb@plt+0x3008c>
  434b4c:	tbnz	w8, #3, 434d78 <wcrtomb@plt+0x30288>
  434b50:	mov	x0, x19
  434b54:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  434b58:	mov	x21, x19
  434b5c:	ldr	x20, [x21, #208]!
  434b60:	cbnz	x20, 434da0 <wcrtomb@plt+0x302b0>
  434b64:	b	434d84 <wcrtomb@plt+0x30294>
  434b68:	ldr	x8, [x19, #88]
  434b6c:	mov	x0, x19
  434b70:	blr	x8
  434b74:	ldr	w8, [x19, #32]
  434b78:	tbz	w8, #4, 434b4c <wcrtomb@plt+0x3005c>
  434b7c:	ldr	w8, [x19, #192]
  434b80:	ldr	x20, [x19, #96]
  434b84:	cmp	w8, #0x9
  434b88:	b.eq	434c2c <wcrtomb@plt+0x3013c>  // b.none
  434b8c:	cmp	w8, #0x1
  434b90:	b.ne	434c34 <wcrtomb@plt+0x30144>  // b.any
  434b94:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434b98:	add	x1, x1, #0x221
  434b9c:	mov	w2, #0x5                   	// #5
  434ba0:	mov	x0, xzr
  434ba4:	bl	4048b0 <dcgettext@plt>
  434ba8:	ldr	x8, [x19, #168]
  434bac:	ldr	x2, [x19, #184]
  434bb0:	ldrb	w1, [x8, x2]
  434bb4:	blr	x20
  434bb8:	b	434d70 <wcrtomb@plt+0x30280>
  434bbc:	cbz	x27, 435b5c <wcrtomb@plt+0x3106c>
  434bc0:	cbz	w8, 435b5c <wcrtomb@plt+0x3106c>
  434bc4:	ldrb	w8, [x27]
  434bc8:	cmp	w8, #0x2b
  434bcc:	b.ne	435b5c <wcrtomb@plt+0x3106c>  // b.any
  434bd0:	ldr	w8, [x22]
  434bd4:	ldr	w9, [x19, #32]
  434bd8:	add	x2, x27, #0x1
  434bdc:	mov	w10, #0x44                  	// #68
  434be0:	sub	w3, w8, w2
  434be4:	and	w8, w9, w10
  434be8:	mov	w9, #0x700                 	// #1792
  434bec:	movk	w9, #0x40, lsl #16
  434bf0:	orr	w4, w8, w9
  434bf4:	sub	x1, x29, #0xf8
  434bf8:	mov	w5, #0x1                   	// #1
  434bfc:	mov	x0, x19
  434c00:	bl	433eb8 <wcrtomb@plt+0x2f3c8>
  434c04:	cbnz	w0, 435f30 <wcrtomb@plt+0x31440>
  434c08:	ldur	x0, [x29, #-16]
  434c0c:	bl	4046b0 <free@plt>
  434c10:	ldur	x8, [x29, #-240]
  434c14:	sub	x0, x29, #0xf8
  434c18:	ldr	x9, [x8]
  434c1c:	stur	x9, [x29, #-16]
  434c20:	str	xzr, [x8]
  434c24:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  434c28:	b	435b5c <wcrtomb@plt+0x3106c>
  434c2c:	add	x8, x19, #0xc8
  434c30:	b	434c54 <wcrtomb@plt+0x30164>
  434c34:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434c38:	ldr	w9, [x9, #4000]
  434c3c:	sxtw	x8, w8
  434c40:	cmp	w8, w9
  434c44:	b.ge	434d5c <wcrtomb@plt+0x3026c>  // b.tcont
  434c48:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434c4c:	add	x9, x9, #0xf58
  434c50:	add	x8, x9, x8, lsl #3
  434c54:	ldr	x1, [x8]
  434c58:	b	434d64 <wcrtomb@plt+0x30274>
  434c5c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434c60:	add	x1, x1, #0x213
  434c64:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434c68:	add	x0, x0, #0x274
  434c6c:	blr	x20
  434c70:	mov	w0, #0x1                   	// #1
  434c74:	b	435f30 <wcrtomb@plt+0x31440>
  434c78:	add	x8, x19, #0xc8
  434c7c:	b	434ca0 <wcrtomb@plt+0x301b0>
  434c80:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434c84:	ldr	w9, [x9, #4000]
  434c88:	sxtw	x8, w8
  434c8c:	cmp	w8, w9
  434c90:	b.ge	434db8 <wcrtomb@plt+0x302c8>  // b.tcont
  434c94:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434c98:	add	x9, x9, #0xf58
  434c9c:	add	x8, x9, x8, lsl #3
  434ca0:	ldr	x1, [x8]
  434ca4:	b	434dc0 <wcrtomb@plt+0x302d0>
  434ca8:	ldr	x8, [x19, #88]
  434cac:	mov	x0, x19
  434cb0:	blr	x8
  434cb4:	ldr	w8, [x19, #32]
  434cb8:	tbz	w8, #4, 43450c <wcrtomb@plt+0x2fa1c>
  434cbc:	ldr	w8, [x19, #192]
  434cc0:	ldr	x20, [x19, #96]
  434cc4:	cmp	w8, #0x9
  434cc8:	b.eq	435220 <wcrtomb@plt+0x30730>  // b.none
  434ccc:	cmp	w8, #0x1
  434cd0:	b.ne	435228 <wcrtomb@plt+0x30738>  // b.any
  434cd4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434cd8:	add	x1, x1, #0x221
  434cdc:	mov	w2, #0x5                   	// #5
  434ce0:	mov	x0, xzr
  434ce4:	bl	4048b0 <dcgettext@plt>
  434ce8:	ldr	x8, [x19, #168]
  434cec:	ldr	x2, [x19, #184]
  434cf0:	ldrb	w1, [x8, x2]
  434cf4:	blr	x20
  434cf8:	b	4352d8 <wcrtomb@plt+0x307e8>
  434cfc:	add	x8, x19, #0xc8
  434d00:	b	434d24 <wcrtomb@plt+0x30234>
  434d04:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434d08:	ldr	w9, [x9, #4000]
  434d0c:	sxtw	x8, w8
  434d10:	cmp	w8, w9
  434d14:	b.ge	434fa4 <wcrtomb@plt+0x304b4>  // b.tcont
  434d18:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434d1c:	add	x9, x9, #0xf58
  434d20:	add	x8, x9, x8, lsl #3
  434d24:	ldr	x1, [x8]
  434d28:	b	434fac <wcrtomb@plt+0x304bc>
  434d2c:	add	x8, x19, #0xc8
  434d30:	b	434d54 <wcrtomb@plt+0x30264>
  434d34:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434d38:	ldr	w9, [x9, #4000]
  434d3c:	sxtw	x8, w8
  434d40:	cmp	w8, w9
  434d44:	b.ge	43501c <wcrtomb@plt+0x3052c>  // b.tcont
  434d48:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434d4c:	add	x9, x9, #0xf58
  434d50:	add	x8, x9, x8, lsl #3
  434d54:	ldr	x1, [x8]
  434d58:	b	435024 <wcrtomb@plt+0x30534>
  434d5c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434d60:	add	x1, x1, #0x213
  434d64:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434d68:	add	x0, x0, #0x274
  434d6c:	blr	x20
  434d70:	ldr	w8, [x19, #32]
  434d74:	tbz	w8, #3, 434b50 <wcrtomb@plt+0x30060>
  434d78:	mov	x21, x19
  434d7c:	ldr	x20, [x21, #208]!
  434d80:	cbnz	x20, 434da0 <wcrtomb@plt+0x302b0>
  434d84:	stp	xzr, xzr, [x21]
  434d88:	ldr	w0, [x19, #192]
  434d8c:	b	435f30 <wcrtomb@plt+0x31440>
  434d90:	mov	x0, x20
  434d94:	bl	4046b0 <free@plt>
  434d98:	mov	x20, x22
  434d9c:	cbz	x22, 434d84 <wcrtomb@plt+0x30294>
  434da0:	ldrb	w8, [x20, #16]
  434da4:	ldr	x22, [x20, #8]
  434da8:	tbz	w8, #1, 434d90 <wcrtomb@plt+0x302a0>
  434dac:	ldr	x0, [x20, #24]
  434db0:	bl	4046b0 <free@plt>
  434db4:	b	434d90 <wcrtomb@plt+0x302a0>
  434db8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434dbc:	add	x1, x1, #0x213
  434dc0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434dc4:	add	x0, x0, #0x274
  434dc8:	blr	x20
  434dcc:	ldr	w8, [x19, #32]
  434dd0:	tbz	w8, #3, 4346b8 <wcrtomb@plt+0x2fbc8>
  434dd4:	mov	x20, x19
  434dd8:	ldr	x23, [x20, #208]!
  434ddc:	cbnz	x23, 434e48 <wcrtomb@plt+0x30358>
  434de0:	stp	xzr, xzr, [x20]
  434de4:	ldr	w8, [x19, #192]
  434de8:	cbnz	w8, 435050 <wcrtomb@plt+0x30560>
  434dec:	add	x24, x19, #0xd0
  434df0:	stp	xzr, xzr, [x23]
  434df4:	stp	x23, x23, [x19, #208]
  434df8:	orr	w8, w26, #0x2
  434dfc:	mov	w0, #0x3                   	// #3
  434e00:	str	x23, [x28]
  434e04:	str	w8, [x23, #16]
  434e08:	bl	404210 <malloc@plt>
  434e0c:	str	x0, [x23, #24]
  434e10:	cbz	x0, 434e60 <wcrtomb@plt+0x30370>
  434e14:	mov	x8, x0
  434e18:	mov	w9, #0x24                  	// #36
  434e1c:	strb	w9, [x8]
  434e20:	ldrb	w9, [x25]
  434e24:	mov	w0, wzr
  434e28:	strb	wzr, [x8, #2]
  434e2c:	strb	w9, [x8, #1]
  434e30:	str	x25, [x22]
  434e34:	b	435f30 <wcrtomb@plt+0x31440>
  434e38:	mov	x0, x23
  434e3c:	bl	4046b0 <free@plt>
  434e40:	mov	x23, x21
  434e44:	cbz	x21, 434de0 <wcrtomb@plt+0x302f0>
  434e48:	ldrb	w8, [x23, #16]
  434e4c:	ldr	x21, [x23, #8]
  434e50:	tbz	w8, #1, 434e38 <wcrtomb@plt+0x30348>
  434e54:	ldr	x0, [x23, #24]
  434e58:	bl	4046b0 <free@plt>
  434e5c:	b	434e38 <wcrtomb@plt+0x30348>
  434e60:	bl	4049c0 <__errno_location@plt>
  434e64:	mov	w8, #0xc                   	// #12
  434e68:	str	w8, [x0]
  434e6c:	ldr	w8, [x19, #32]
  434e70:	mov	w9, #0x2                   	// #2
  434e74:	str	w9, [x19, #192]
  434e78:	tbnz	w8, #7, 434e98 <wcrtomb@plt+0x303a8>
  434e7c:	tbnz	w8, #4, 434eac <wcrtomb@plt+0x303bc>
  434e80:	tbnz	w8, #3, 434f68 <wcrtomb@plt+0x30478>
  434e84:	mov	x0, x19
  434e88:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  434e8c:	ldr	x20, [x24]
  434e90:	cbnz	x20, 434f8c <wcrtomb@plt+0x3049c>
  434e94:	b	434f70 <wcrtomb@plt+0x30480>
  434e98:	ldr	x8, [x19, #88]
  434e9c:	mov	x0, x19
  434ea0:	blr	x8
  434ea4:	ldr	w8, [x19, #32]
  434ea8:	tbz	w8, #4, 434e80 <wcrtomb@plt+0x30390>
  434eac:	ldr	w8, [x19, #192]
  434eb0:	ldr	x20, [x19, #96]
  434eb4:	cmp	w8, #0x9
  434eb8:	b.eq	434eec <wcrtomb@plt+0x303fc>  // b.none
  434ebc:	cmp	w8, #0x1
  434ec0:	b.ne	434ef4 <wcrtomb@plt+0x30404>  // b.any
  434ec4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434ec8:	add	x1, x1, #0x221
  434ecc:	mov	w2, #0x5                   	// #5
  434ed0:	mov	x0, xzr
  434ed4:	bl	4048b0 <dcgettext@plt>
  434ed8:	ldr	x8, [x19, #168]
  434edc:	ldr	x2, [x19, #184]
  434ee0:	ldrb	w1, [x8, x2]
  434ee4:	blr	x20
  434ee8:	b	434f60 <wcrtomb@plt+0x30470>
  434eec:	add	x8, x19, #0xc8
  434ef0:	b	434f14 <wcrtomb@plt+0x30424>
  434ef4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434ef8:	ldr	w9, [x9, #4000]
  434efc:	sxtw	x8, w8
  434f00:	cmp	w8, w9
  434f04:	b.ge	434f4c <wcrtomb@plt+0x3045c>  // b.tcont
  434f08:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  434f0c:	add	x9, x9, #0xf58
  434f10:	add	x8, x9, x8, lsl #3
  434f14:	ldr	x1, [x8]
  434f18:	b	434f54 <wcrtomb@plt+0x30464>
  434f1c:	tbnz	w20, #19, 435250 <wcrtomb@plt+0x30760>
  434f20:	mov	w0, #0x10                  	// #16
  434f24:	mov	w1, #0x8                   	// #8
  434f28:	bl	4043d0 <calloc@plt>
  434f2c:	cbz	x0, 435318 <wcrtomb@plt+0x30828>
  434f30:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434f34:	ldr	q0, [x8, #352]
  434f38:	orr	w8, w20, #0x80000
  434f3c:	stp	x0, x0, [x19, #112]
  434f40:	str	w8, [x19, #32]
  434f44:	str	q0, [x19, #128]
  434f48:	b	435408 <wcrtomb@plt+0x30918>
  434f4c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434f50:	add	x1, x1, #0x213
  434f54:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434f58:	add	x0, x0, #0x274
  434f5c:	blr	x20
  434f60:	ldr	w8, [x19, #32]
  434f64:	tbz	w8, #3, 434e84 <wcrtomb@plt+0x30394>
  434f68:	ldr	x20, [x24]
  434f6c:	cbnz	x20, 434f8c <wcrtomb@plt+0x3049c>
  434f70:	stp	xzr, xzr, [x24]
  434f74:	ldr	w0, [x19, #192]
  434f78:	b	435f30 <wcrtomb@plt+0x31440>
  434f7c:	mov	x0, x20
  434f80:	bl	4046b0 <free@plt>
  434f84:	mov	x20, x21
  434f88:	cbz	x21, 434f70 <wcrtomb@plt+0x30480>
  434f8c:	ldrb	w8, [x20, #16]
  434f90:	ldr	x21, [x20, #8]
  434f94:	tbz	w8, #1, 434f7c <wcrtomb@plt+0x3048c>
  434f98:	ldr	x0, [x20, #24]
  434f9c:	bl	4046b0 <free@plt>
  434fa0:	b	434f7c <wcrtomb@plt+0x3048c>
  434fa4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434fa8:	add	x1, x1, #0x213
  434fac:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  434fb0:	add	x0, x0, #0x274
  434fb4:	blr	x20
  434fb8:	ldr	w8, [x19, #32]
  434fbc:	tbz	w8, #3, 4348c0 <wcrtomb@plt+0x2fdd0>
  434fc0:	mov	x20, x19
  434fc4:	ldr	x21, [x20, #208]!
  434fc8:	cbnz	x21, 435004 <wcrtomb@plt+0x30514>
  434fcc:	stp	xzr, xzr, [x20]
  434fd0:	ldr	w8, [x19, #192]
  434fd4:	cbnz	w8, 435050 <wcrtomb@plt+0x30560>
  434fd8:	stp	xzr, xzr, [x8]
  434fdc:	stp	x8, x8, [x19, #208]
  434fe0:	mov	w0, wzr
  434fe4:	mov	w9, #0x1                   	// #1
  434fe8:	str	x8, [x23]
  434fec:	str	w9, [x8, #16]
  434ff0:	b	435f30 <wcrtomb@plt+0x31440>
  434ff4:	mov	x0, x21
  434ff8:	bl	4046b0 <free@plt>
  434ffc:	mov	x21, x22
  435000:	cbz	x22, 434fcc <wcrtomb@plt+0x304dc>
  435004:	ldrb	w8, [x21, #16]
  435008:	ldr	x22, [x21, #8]
  43500c:	tbz	w8, #1, 434ff4 <wcrtomb@plt+0x30504>
  435010:	ldr	x0, [x21, #24]
  435014:	bl	4046b0 <free@plt>
  435018:	b	434ff4 <wcrtomb@plt+0x30504>
  43501c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435020:	add	x1, x1, #0x213
  435024:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435028:	add	x0, x0, #0x274
  43502c:	blr	x20
  435030:	ldr	w8, [x19, #32]
  435034:	tbz	w8, #3, 434900 <wcrtomb@plt+0x2fe10>
  435038:	mov	x20, x19
  43503c:	ldr	x22, [x20, #208]!
  435040:	cbnz	x22, 435068 <wcrtomb@plt+0x30578>
  435044:	stp	xzr, xzr, [x20]
  435048:	ldr	w8, [x19, #192]
  43504c:	cbz	w8, 435080 <wcrtomb@plt+0x30590>
  435050:	mov	w0, #0x1                   	// #1
  435054:	b	435f30 <wcrtomb@plt+0x31440>
  435058:	mov	x0, x22
  43505c:	bl	4046b0 <free@plt>
  435060:	mov	x22, x21
  435064:	cbz	x21, 435044 <wcrtomb@plt+0x30554>
  435068:	ldrb	w8, [x22, #16]
  43506c:	ldr	x21, [x22, #8]
  435070:	tbz	w8, #1, 435058 <wcrtomb@plt+0x30568>
  435074:	ldr	x0, [x22, #24]
  435078:	bl	4046b0 <free@plt>
  43507c:	b	435058 <wcrtomb@plt+0x30568>
  435080:	add	x25, x19, #0xd0
  435084:	stp	xzr, xzr, [x22]
  435088:	stp	x22, x22, [x19, #208]
  43508c:	sub	x20, x24, x23
  435090:	mov	w8, #0xa                   	// #10
  435094:	orr	w8, w27, w8
  435098:	add	x0, x20, #0x2
  43509c:	str	x22, [x26]
  4350a0:	str	w8, [x22, #16]
  4350a4:	bl	404210 <malloc@plt>
  4350a8:	str	x0, [x22, #24]
  4350ac:	cbz	x0, 4350d0 <wcrtomb@plt+0x305e0>
  4350b0:	add	x19, x20, #0x1
  4350b4:	mov	x1, x23
  4350b8:	mov	x2, x19
  4350bc:	bl	403e80 <memcpy@plt>
  4350c0:	ldr	x8, [x22, #24]
  4350c4:	mov	w0, wzr
  4350c8:	strb	wzr, [x8, x19]
  4350cc:	b	435f30 <wcrtomb@plt+0x31440>
  4350d0:	bl	4049c0 <__errno_location@plt>
  4350d4:	mov	w8, #0xc                   	// #12
  4350d8:	str	w8, [x0]
  4350dc:	ldr	w8, [x19, #32]
  4350e0:	mov	w9, #0x2                   	// #2
  4350e4:	str	w9, [x19, #192]
  4350e8:	tbnz	w8, #7, 435108 <wcrtomb@plt+0x30618>
  4350ec:	tbnz	w8, #4, 43511c <wcrtomb@plt+0x3062c>
  4350f0:	tbnz	w8, #3, 4351e4 <wcrtomb@plt+0x306f4>
  4350f4:	mov	x0, x19
  4350f8:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4350fc:	ldr	x20, [x25]
  435100:	cbnz	x20, 435208 <wcrtomb@plt+0x30718>
  435104:	b	4351ec <wcrtomb@plt+0x306fc>
  435108:	ldr	x8, [x19, #88]
  43510c:	mov	x0, x19
  435110:	blr	x8
  435114:	ldr	w8, [x19, #32]
  435118:	tbz	w8, #4, 4350f0 <wcrtomb@plt+0x30600>
  43511c:	ldr	w8, [x19, #192]
  435120:	ldr	x20, [x19, #96]
  435124:	cmp	w8, #0x9
  435128:	b.eq	43515c <wcrtomb@plt+0x3066c>  // b.none
  43512c:	cmp	w8, #0x1
  435130:	b.ne	435164 <wcrtomb@plt+0x30674>  // b.any
  435134:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435138:	add	x1, x1, #0x221
  43513c:	mov	w2, #0x5                   	// #5
  435140:	mov	x0, xzr
  435144:	bl	4048b0 <dcgettext@plt>
  435148:	ldr	x8, [x19, #168]
  43514c:	ldr	x2, [x19, #184]
  435150:	ldrb	w1, [x8, x2]
  435154:	blr	x20
  435158:	b	4351dc <wcrtomb@plt+0x306ec>
  43515c:	add	x8, x19, #0xc8
  435160:	b	435184 <wcrtomb@plt+0x30694>
  435164:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435168:	ldr	w9, [x9, #4000]
  43516c:	sxtw	x8, w8
  435170:	cmp	w8, w9
  435174:	b.ge	4351c8 <wcrtomb@plt+0x306d8>  // b.tcont
  435178:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43517c:	add	x9, x9, #0xf58
  435180:	add	x8, x9, x8, lsl #3
  435184:	ldr	x1, [x8]
  435188:	b	4351d0 <wcrtomb@plt+0x306e0>
  43518c:	bl	4049c0 <__errno_location@plt>
  435190:	mov	w8, #0xc                   	// #12
  435194:	str	w8, [x0]
  435198:	ldr	w8, [x19, #32]
  43519c:	mov	w9, #0x2                   	// #2
  4351a0:	str	w9, [x19, #192]
  4351a4:	tbnz	w8, #7, 435270 <wcrtomb@plt+0x30780>
  4351a8:	tbnz	w8, #4, 435284 <wcrtomb@plt+0x30794>
  4351ac:	tbnz	w8, #3, 43596c <wcrtomb@plt+0x30e7c>
  4351b0:	mov	x0, x19
  4351b4:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4351b8:	mov	x20, x19
  4351bc:	ldr	x24, [x20, #208]!
  4351c0:	cbnz	x24, 43598c <wcrtomb@plt+0x30e9c>
  4351c4:	b	435b58 <wcrtomb@plt+0x31068>
  4351c8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4351cc:	add	x1, x1, #0x213
  4351d0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4351d4:	add	x0, x0, #0x274
  4351d8:	blr	x20
  4351dc:	ldr	w8, [x19, #32]
  4351e0:	tbz	w8, #3, 4350f4 <wcrtomb@plt+0x30604>
  4351e4:	ldr	x20, [x25]
  4351e8:	cbnz	x20, 435208 <wcrtomb@plt+0x30718>
  4351ec:	stp	xzr, xzr, [x25]
  4351f0:	ldr	w0, [x19, #192]
  4351f4:	b	435f30 <wcrtomb@plt+0x31440>
  4351f8:	mov	x0, x20
  4351fc:	bl	4046b0 <free@plt>
  435200:	mov	x20, x21
  435204:	cbz	x21, 4351ec <wcrtomb@plt+0x306fc>
  435208:	ldrb	w8, [x20, #16]
  43520c:	ldr	x21, [x20, #8]
  435210:	tbz	w8, #1, 4351f8 <wcrtomb@plt+0x30708>
  435214:	ldr	x0, [x20, #24]
  435218:	bl	4046b0 <free@plt>
  43521c:	b	4351f8 <wcrtomb@plt+0x30708>
  435220:	add	x8, x19, #0xc8
  435224:	b	435248 <wcrtomb@plt+0x30758>
  435228:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43522c:	ldr	w9, [x9, #4000]
  435230:	sxtw	x8, w8
  435234:	cmp	w8, w9
  435238:	b.ge	4352c4 <wcrtomb@plt+0x307d4>  // b.tcont
  43523c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435240:	add	x9, x9, #0xf58
  435244:	add	x8, x9, x8, lsl #3
  435248:	ldr	x1, [x8]
  43524c:	b	4352cc <wcrtomb@plt+0x307dc>
  435250:	ldr	x28, [x19, #112]
  435254:	cbz	x28, 435354 <wcrtomb@plt+0x30864>
  435258:	mov	x9, xzr
  43525c:	ldr	x10, [x28, x9, lsl #3]
  435260:	add	x9, x9, #0x1
  435264:	cbnz	x10, 43525c <wcrtomb@plt+0x3076c>
  435268:	sub	x20, x9, #0x1
  43526c:	b	435358 <wcrtomb@plt+0x30868>
  435270:	ldr	x8, [x19, #88]
  435274:	mov	x0, x19
  435278:	blr	x8
  43527c:	ldr	w8, [x19, #32]
  435280:	tbz	w8, #4, 4351ac <wcrtomb@plt+0x306bc>
  435284:	ldr	w8, [x19, #192]
  435288:	ldr	x20, [x19, #96]
  43528c:	cmp	w8, #0x9
  435290:	b.eq	4356e8 <wcrtomb@plt+0x30bf8>  // b.none
  435294:	cmp	w8, #0x1
  435298:	b.ne	4356f0 <wcrtomb@plt+0x30c00>  // b.any
  43529c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4352a0:	add	x1, x1, #0x221
  4352a4:	mov	w2, #0x5                   	// #5
  4352a8:	mov	x0, xzr
  4352ac:	bl	4048b0 <dcgettext@plt>
  4352b0:	ldr	x8, [x19, #168]
  4352b4:	ldr	x2, [x19, #184]
  4352b8:	ldrb	w1, [x8, x2]
  4352bc:	blr	x20
  4352c0:	b	435964 <wcrtomb@plt+0x30e74>
  4352c4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4352c8:	add	x1, x1, #0x213
  4352cc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4352d0:	add	x0, x0, #0x274
  4352d4:	blr	x20
  4352d8:	ldr	w8, [x19, #32]
  4352dc:	tbz	w8, #3, 434510 <wcrtomb@plt+0x2fa20>
  4352e0:	mov	x21, x19
  4352e4:	ldr	x20, [x21, #208]!
  4352e8:	cbnz	x20, 435300 <wcrtomb@plt+0x30810>
  4352ec:	b	434d84 <wcrtomb@plt+0x30294>
  4352f0:	mov	x0, x20
  4352f4:	bl	4046b0 <free@plt>
  4352f8:	mov	x20, x22
  4352fc:	cbz	x22, 434d84 <wcrtomb@plt+0x30294>
  435300:	ldrb	w8, [x20, #16]
  435304:	ldr	x22, [x20, #8]
  435308:	tbz	w8, #1, 4352f0 <wcrtomb@plt+0x30800>
  43530c:	ldr	x0, [x20, #24]
  435310:	bl	4046b0 <free@plt>
  435314:	b	4352f0 <wcrtomb@plt+0x30800>
  435318:	bl	4049c0 <__errno_location@plt>
  43531c:	mov	w8, #0xc                   	// #12
  435320:	str	w8, [x0]
  435324:	ldr	w8, [x19, #32]
  435328:	mov	w9, #0x2                   	// #2
  43532c:	str	w9, [x19, #192]
  435330:	tbnz	w8, #7, 435718 <wcrtomb@plt+0x30c28>
  435334:	tbnz	w8, #4, 43572c <wcrtomb@plt+0x30c3c>
  435338:	tbnz	w8, #3, 435aa4 <wcrtomb@plt+0x30fb4>
  43533c:	mov	x0, x19
  435340:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435344:	mov	x20, x19
  435348:	ldr	x24, [x20, #208]!
  43534c:	cbnz	x24, 435ac4 <wcrtomb@plt+0x30fd4>
  435350:	b	435b58 <wcrtomb@plt+0x31068>
  435354:	mov	x20, xzr
  435358:	add	x8, x8, x20
  43535c:	add	x21, x8, #0x1
  435360:	mov	w1, #0x8                   	// #8
  435364:	mov	x0, x21
  435368:	bl	4043d0 <calloc@plt>
  43536c:	cbz	x0, 4353bc <wcrtomb@plt+0x308cc>
  435370:	mov	x27, x0
  435374:	str	x21, [sp, #8]
  435378:	cbz	x20, 4353f8 <wcrtomb@plt+0x30908>
  43537c:	ldr	x0, [x28]
  435380:	bl	4044a0 <strdup@plt>
  435384:	str	x0, [x27]
  435388:	cbz	x0, 4357f0 <wcrtomb@plt+0x30d00>
  43538c:	mov	w21, #0x1                   	// #1
  435390:	cmp	x20, x21
  435394:	b.eq	4353f8 <wcrtomb@plt+0x30908>  // b.none
  435398:	ldr	x8, [x19, #112]
  43539c:	lsl	x28, x21, #3
  4353a0:	ldr	x0, [x8, x28]
  4353a4:	bl	4044a0 <strdup@plt>
  4353a8:	add	x21, x21, #0x1
  4353ac:	str	x0, [x27, x28]
  4353b0:	cbnz	x0, 435390 <wcrtomb@plt+0x308a0>
  4353b4:	sub	x8, x21, #0x1
  4353b8:	b	4357f4 <wcrtomb@plt+0x30d04>
  4353bc:	bl	4049c0 <__errno_location@plt>
  4353c0:	mov	w8, #0xc                   	// #12
  4353c4:	str	w8, [x0]
  4353c8:	ldr	w8, [x19, #32]
  4353cc:	mov	w9, #0x2                   	// #2
  4353d0:	str	w9, [x19, #192]
  4353d4:	tbnz	w8, #7, 43576c <wcrtomb@plt+0x30c7c>
  4353d8:	tbnz	w8, #4, 435780 <wcrtomb@plt+0x30c90>
  4353dc:	tbnz	w8, #3, 435af8 <wcrtomb@plt+0x31008>
  4353e0:	mov	x0, x19
  4353e4:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4353e8:	mov	x20, x19
  4353ec:	ldr	x24, [x20, #208]!
  4353f0:	cbnz	x24, 435b18 <wcrtomb@plt+0x31028>
  4353f4:	b	435b58 <wcrtomb@plt+0x31068>
  4353f8:	ldr	x8, [sp, #8]
  4353fc:	str	xzr, [x27, x20, lsl #3]
  435400:	stp	x27, x27, [x19, #112]
  435404:	stp	x20, x8, [x19, #128]
  435408:	ldrb	w8, [x19, #35]
  43540c:	tbnz	w8, #3, 435464 <wcrtomb@plt+0x30974>
  435410:	mov	x0, x26
  435414:	bl	403f00 <strlen@plt>
  435418:	add	x8, x24, x0
  43541c:	add	x0, x8, #0x2
  435420:	bl	404210 <malloc@plt>
  435424:	cbz	x0, 4354d0 <wcrtomb@plt+0x309e0>
  435428:	mov	x1, x25
  43542c:	mov	x2, x24
  435430:	mov	x27, x0
  435434:	bl	403e80 <memcpy@plt>
  435438:	add	x0, x27, x24
  43543c:	mov	w8, #0x3d                  	// #61
  435440:	strb	w8, [x0], #1
  435444:	mov	x1, x26
  435448:	bl	4047f0 <strcpy@plt>
  43544c:	ldr	x9, [x19, #128]
  435450:	ldr	x10, [x19, #112]
  435454:	add	x8, x9, #0x1
  435458:	add	x9, x10, x9, lsl #3
  43545c:	str	x8, [x19, #128]
  435460:	b	4354b8 <wcrtomb@plt+0x309c8>
  435464:	add	x0, x24, #0x1
  435468:	bl	404210 <malloc@plt>
  43546c:	cbz	x0, 43550c <wcrtomb@plt+0x30a1c>
  435470:	mov	x1, x25
  435474:	mov	x2, x24
  435478:	mov	x28, x0
  43547c:	bl	403e80 <memcpy@plt>
  435480:	mov	x0, x26
  435484:	strb	wzr, [x28, x24]
  435488:	bl	4044a0 <strdup@plt>
  43548c:	cbz	x0, 435548 <wcrtomb@plt+0x30a58>
  435490:	ldr	x8, [x19, #128]
  435494:	ldr	x9, [x19, #112]
  435498:	mov	x27, x0
  43549c:	lsl	x10, x8, #3
  4354a0:	str	x28, [x9, x10]
  4354a4:	ldr	x9, [x19, #112]
  4354a8:	add	x8, x8, #0x2
  4354ac:	str	x8, [x19, #128]
  4354b0:	add	x9, x10, x9
  4354b4:	add	x9, x9, #0x8
  4354b8:	str	x27, [x9]
  4354bc:	ldr	x9, [x19, #112]
  4354c0:	add	x10, x8, #0x1
  4354c4:	str	x10, [x19, #128]
  4354c8:	str	xzr, [x9, x8, lsl #3]
  4354cc:	b	435b5c <wcrtomb@plt+0x3106c>
  4354d0:	bl	4049c0 <__errno_location@plt>
  4354d4:	mov	w8, #0xc                   	// #12
  4354d8:	str	w8, [x0]
  4354dc:	ldr	w8, [x19, #32]
  4354e0:	mov	w9, #0x2                   	// #2
  4354e4:	str	w9, [x19, #192]
  4354e8:	tbnz	w8, #7, 43558c <wcrtomb@plt+0x30a9c>
  4354ec:	tbnz	w8, #4, 4355a0 <wcrtomb@plt+0x30ab0>
  4354f0:	tbnz	w8, #3, 4358c4 <wcrtomb@plt+0x30dd4>
  4354f4:	mov	x0, x19
  4354f8:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  4354fc:	mov	x20, x19
  435500:	ldr	x24, [x20, #208]!
  435504:	cbnz	x24, 4358e4 <wcrtomb@plt+0x30df4>
  435508:	b	435b58 <wcrtomb@plt+0x31068>
  43550c:	bl	4049c0 <__errno_location@plt>
  435510:	mov	w8, #0xc                   	// #12
  435514:	str	w8, [x0]
  435518:	ldr	w8, [x19, #32]
  43551c:	mov	w9, #0x2                   	// #2
  435520:	str	w9, [x19, #192]
  435524:	tbnz	w8, #7, 4355e0 <wcrtomb@plt+0x30af0>
  435528:	tbnz	w8, #4, 4355f4 <wcrtomb@plt+0x30b04>
  43552c:	tbnz	w8, #3, 435918 <wcrtomb@plt+0x30e28>
  435530:	mov	x0, x19
  435534:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435538:	mov	x20, x19
  43553c:	ldr	x24, [x20, #208]!
  435540:	cbnz	x24, 435938 <wcrtomb@plt+0x30e48>
  435544:	b	435b58 <wcrtomb@plt+0x31068>
  435548:	mov	x0, x28
  43554c:	bl	4046b0 <free@plt>
  435550:	bl	4049c0 <__errno_location@plt>
  435554:	mov	w8, #0xc                   	// #12
  435558:	str	w8, [x0]
  43555c:	ldr	w8, [x19, #32]
  435560:	mov	w9, #0x2                   	// #2
  435564:	str	w9, [x19, #192]
  435568:	tbnz	w8, #7, 435634 <wcrtomb@plt+0x30b44>
  43556c:	tbnz	w8, #4, 435648 <wcrtomb@plt+0x30b58>
  435570:	tbnz	w8, #3, 4359c0 <wcrtomb@plt+0x30ed0>
  435574:	mov	x0, x19
  435578:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  43557c:	mov	x20, x19
  435580:	ldr	x24, [x20, #208]!
  435584:	cbnz	x24, 4359e0 <wcrtomb@plt+0x30ef0>
  435588:	b	435b58 <wcrtomb@plt+0x31068>
  43558c:	ldr	x8, [x19, #88]
  435590:	mov	x0, x19
  435594:	blr	x8
  435598:	ldr	w8, [x19, #32]
  43559c:	tbz	w8, #4, 4354f0 <wcrtomb@plt+0x30a00>
  4355a0:	ldr	w8, [x19, #192]
  4355a4:	ldr	x20, [x19, #96]
  4355a8:	cmp	w8, #0x9
  4355ac:	b.eq	435688 <wcrtomb@plt+0x30b98>  // b.none
  4355b0:	cmp	w8, #0x1
  4355b4:	b.ne	435690 <wcrtomb@plt+0x30ba0>  // b.any
  4355b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4355bc:	add	x1, x1, #0x221
  4355c0:	mov	w2, #0x5                   	// #5
  4355c4:	mov	x0, xzr
  4355c8:	bl	4048b0 <dcgettext@plt>
  4355cc:	ldr	x8, [x19, #168]
  4355d0:	ldr	x2, [x19, #184]
  4355d4:	ldrb	w1, [x8, x2]
  4355d8:	blr	x20
  4355dc:	b	4358bc <wcrtomb@plt+0x30dcc>
  4355e0:	ldr	x8, [x19, #88]
  4355e4:	mov	x0, x19
  4355e8:	blr	x8
  4355ec:	ldr	w8, [x19, #32]
  4355f0:	tbz	w8, #4, 43552c <wcrtomb@plt+0x30a3c>
  4355f4:	ldr	w8, [x19, #192]
  4355f8:	ldr	x20, [x19, #96]
  4355fc:	cmp	w8, #0x9
  435600:	b.eq	4356b8 <wcrtomb@plt+0x30bc8>  // b.none
  435604:	cmp	w8, #0x1
  435608:	b.ne	4356c0 <wcrtomb@plt+0x30bd0>  // b.any
  43560c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435610:	add	x1, x1, #0x221
  435614:	mov	w2, #0x5                   	// #5
  435618:	mov	x0, xzr
  43561c:	bl	4048b0 <dcgettext@plt>
  435620:	ldr	x8, [x19, #168]
  435624:	ldr	x2, [x19, #184]
  435628:	ldrb	w1, [x8, x2]
  43562c:	blr	x20
  435630:	b	435910 <wcrtomb@plt+0x30e20>
  435634:	ldr	x8, [x19, #88]
  435638:	mov	x0, x19
  43563c:	blr	x8
  435640:	ldr	w8, [x19, #32]
  435644:	tbz	w8, #4, 435570 <wcrtomb@plt+0x30a80>
  435648:	ldr	w8, [x19, #192]
  43564c:	ldr	x20, [x19, #96]
  435650:	cmp	w8, #0x9
  435654:	b.eq	4357c0 <wcrtomb@plt+0x30cd0>  // b.none
  435658:	cmp	w8, #0x1
  43565c:	b.ne	4357c8 <wcrtomb@plt+0x30cd8>  // b.any
  435660:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435664:	add	x1, x1, #0x221
  435668:	mov	w2, #0x5                   	// #5
  43566c:	mov	x0, xzr
  435670:	bl	4048b0 <dcgettext@plt>
  435674:	ldr	x8, [x19, #168]
  435678:	ldr	x2, [x19, #184]
  43567c:	ldrb	w1, [x8, x2]
  435680:	blr	x20
  435684:	b	4359b8 <wcrtomb@plt+0x30ec8>
  435688:	add	x8, x19, #0xc8
  43568c:	b	4356b0 <wcrtomb@plt+0x30bc0>
  435690:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435694:	ldr	w9, [x9, #4000]
  435698:	sxtw	x8, w8
  43569c:	cmp	w8, w9
  4356a0:	b.ge	4358a8 <wcrtomb@plt+0x30db8>  // b.tcont
  4356a4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4356a8:	add	x9, x9, #0xf58
  4356ac:	add	x8, x9, x8, lsl #3
  4356b0:	ldr	x1, [x8]
  4356b4:	b	4358b0 <wcrtomb@plt+0x30dc0>
  4356b8:	add	x8, x19, #0xc8
  4356bc:	b	4356e0 <wcrtomb@plt+0x30bf0>
  4356c0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4356c4:	ldr	w9, [x9, #4000]
  4356c8:	sxtw	x8, w8
  4356cc:	cmp	w8, w9
  4356d0:	b.ge	4358fc <wcrtomb@plt+0x30e0c>  // b.tcont
  4356d4:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4356d8:	add	x9, x9, #0xf58
  4356dc:	add	x8, x9, x8, lsl #3
  4356e0:	ldr	x1, [x8]
  4356e4:	b	435904 <wcrtomb@plt+0x30e14>
  4356e8:	add	x8, x19, #0xc8
  4356ec:	b	435710 <wcrtomb@plt+0x30c20>
  4356f0:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4356f4:	ldr	w9, [x9, #4000]
  4356f8:	sxtw	x8, w8
  4356fc:	cmp	w8, w9
  435700:	b.ge	435950 <wcrtomb@plt+0x30e60>  // b.tcont
  435704:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435708:	add	x9, x9, #0xf58
  43570c:	add	x8, x9, x8, lsl #3
  435710:	ldr	x1, [x8]
  435714:	b	435958 <wcrtomb@plt+0x30e68>
  435718:	ldr	x8, [x19, #88]
  43571c:	mov	x0, x19
  435720:	blr	x8
  435724:	ldr	w8, [x19, #32]
  435728:	tbz	w8, #4, 435338 <wcrtomb@plt+0x30848>
  43572c:	ldr	w8, [x19, #192]
  435730:	ldr	x20, [x19, #96]
  435734:	cmp	w8, #0x9
  435738:	b.eq	4359f8 <wcrtomb@plt+0x30f08>  // b.none
  43573c:	cmp	w8, #0x1
  435740:	b.ne	435a00 <wcrtomb@plt+0x30f10>  // b.any
  435744:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435748:	add	x1, x1, #0x221
  43574c:	mov	w2, #0x5                   	// #5
  435750:	mov	x0, xzr
  435754:	bl	4048b0 <dcgettext@plt>
  435758:	ldr	x8, [x19, #168]
  43575c:	ldr	x2, [x19, #184]
  435760:	ldrb	w1, [x8, x2]
  435764:	blr	x20
  435768:	b	435a9c <wcrtomb@plt+0x30fac>
  43576c:	ldr	x8, [x19, #88]
  435770:	mov	x0, x19
  435774:	blr	x8
  435778:	ldr	w8, [x19, #32]
  43577c:	tbz	w8, #4, 4353dc <wcrtomb@plt+0x308ec>
  435780:	ldr	w8, [x19, #192]
  435784:	ldr	x20, [x19, #96]
  435788:	cmp	w8, #0x9
  43578c:	b.eq	435a28 <wcrtomb@plt+0x30f38>  // b.none
  435790:	cmp	w8, #0x1
  435794:	b.ne	435a30 <wcrtomb@plt+0x30f40>  // b.any
  435798:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43579c:	add	x1, x1, #0x221
  4357a0:	mov	w2, #0x5                   	// #5
  4357a4:	mov	x0, xzr
  4357a8:	bl	4048b0 <dcgettext@plt>
  4357ac:	ldr	x8, [x19, #168]
  4357b0:	ldr	x2, [x19, #184]
  4357b4:	ldrb	w1, [x8, x2]
  4357b8:	blr	x20
  4357bc:	b	435af0 <wcrtomb@plt+0x31000>
  4357c0:	add	x8, x19, #0xc8
  4357c4:	b	4357e8 <wcrtomb@plt+0x30cf8>
  4357c8:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4357cc:	ldr	w9, [x9, #4000]
  4357d0:	sxtw	x8, w8
  4357d4:	cmp	w8, w9
  4357d8:	b.ge	4359a4 <wcrtomb@plt+0x30eb4>  // b.tcont
  4357dc:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4357e0:	add	x9, x9, #0xf58
  4357e4:	add	x8, x9, x8, lsl #3
  4357e8:	ldr	x1, [x8]
  4357ec:	b	4359ac <wcrtomb@plt+0x30ebc>
  4357f0:	mov	x8, xzr
  4357f4:	sub	x20, x8, #0x1
  4357f8:	ldr	x0, [x27, x20, lsl #3]
  4357fc:	bl	4046b0 <free@plt>
  435800:	add	x8, x20, #0x1
  435804:	sub	x20, x20, #0x1
  435808:	cmp	x8, #0x1
  43580c:	b.hi	4357f8 <wcrtomb@plt+0x30d08>  // b.pmore
  435810:	mov	x0, x27
  435814:	bl	4046b0 <free@plt>
  435818:	bl	4049c0 <__errno_location@plt>
  43581c:	mov	w8, #0xc                   	// #12
  435820:	str	w8, [x0]
  435824:	ldr	w8, [x19, #32]
  435828:	mov	w9, #0x2                   	// #2
  43582c:	str	w9, [x19, #192]
  435830:	tbnz	w8, #7, 435854 <wcrtomb@plt+0x30d64>
  435834:	tbnz	w8, #4, 435868 <wcrtomb@plt+0x30d78>
  435838:	tbnz	w8, #3, 435b4c <wcrtomb@plt+0x3105c>
  43583c:	mov	x0, x19
  435840:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435844:	mov	x20, x19
  435848:	ldr	x24, [x20, #208]!
  43584c:	cbnz	x24, 435cfc <wcrtomb@plt+0x3120c>
  435850:	b	435b58 <wcrtomb@plt+0x31068>
  435854:	ldr	x8, [x19, #88]
  435858:	mov	x0, x19
  43585c:	blr	x8
  435860:	ldr	w8, [x19, #32]
  435864:	tbz	w8, #4, 435838 <wcrtomb@plt+0x30d48>
  435868:	ldr	w8, [x19, #192]
  43586c:	ldr	x20, [x19, #96]
  435870:	cmp	w8, #0x9
  435874:	b.eq	435a58 <wcrtomb@plt+0x30f68>  // b.none
  435878:	cmp	w8, #0x1
  43587c:	b.ne	435a60 <wcrtomb@plt+0x30f70>  // b.any
  435880:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435884:	add	x1, x1, #0x221
  435888:	mov	w2, #0x5                   	// #5
  43588c:	mov	x0, xzr
  435890:	bl	4048b0 <dcgettext@plt>
  435894:	ldr	x8, [x19, #168]
  435898:	ldr	x2, [x19, #184]
  43589c:	ldrb	w1, [x8, x2]
  4358a0:	blr	x20
  4358a4:	b	435b44 <wcrtomb@plt+0x31054>
  4358a8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4358ac:	add	x1, x1, #0x213
  4358b0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4358b4:	add	x0, x0, #0x274
  4358b8:	blr	x20
  4358bc:	ldr	w8, [x19, #32]
  4358c0:	tbz	w8, #3, 4354f4 <wcrtomb@plt+0x30a04>
  4358c4:	mov	x20, x19
  4358c8:	ldr	x24, [x20, #208]!
  4358cc:	cbnz	x24, 4358e4 <wcrtomb@plt+0x30df4>
  4358d0:	b	435b58 <wcrtomb@plt+0x31068>
  4358d4:	mov	x0, x24
  4358d8:	bl	4046b0 <free@plt>
  4358dc:	mov	x24, x21
  4358e0:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  4358e4:	ldrb	w8, [x24, #16]
  4358e8:	ldr	x21, [x24, #8]
  4358ec:	tbz	w8, #1, 4358d4 <wcrtomb@plt+0x30de4>
  4358f0:	ldr	x0, [x24, #24]
  4358f4:	bl	4046b0 <free@plt>
  4358f8:	b	4358d4 <wcrtomb@plt+0x30de4>
  4358fc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435900:	add	x1, x1, #0x213
  435904:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435908:	add	x0, x0, #0x274
  43590c:	blr	x20
  435910:	ldr	w8, [x19, #32]
  435914:	tbz	w8, #3, 435530 <wcrtomb@plt+0x30a40>
  435918:	mov	x20, x19
  43591c:	ldr	x24, [x20, #208]!
  435920:	cbnz	x24, 435938 <wcrtomb@plt+0x30e48>
  435924:	b	435b58 <wcrtomb@plt+0x31068>
  435928:	mov	x0, x24
  43592c:	bl	4046b0 <free@plt>
  435930:	mov	x24, x21
  435934:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  435938:	ldrb	w8, [x24, #16]
  43593c:	ldr	x21, [x24, #8]
  435940:	tbz	w8, #1, 435928 <wcrtomb@plt+0x30e38>
  435944:	ldr	x0, [x24, #24]
  435948:	bl	4046b0 <free@plt>
  43594c:	b	435928 <wcrtomb@plt+0x30e38>
  435950:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435954:	add	x1, x1, #0x213
  435958:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43595c:	add	x0, x0, #0x274
  435960:	blr	x20
  435964:	ldr	w8, [x19, #32]
  435968:	tbz	w8, #3, 4351b0 <wcrtomb@plt+0x306c0>
  43596c:	mov	x20, x19
  435970:	ldr	x24, [x20, #208]!
  435974:	cbnz	x24, 43598c <wcrtomb@plt+0x30e9c>
  435978:	b	435b58 <wcrtomb@plt+0x31068>
  43597c:	mov	x0, x24
  435980:	bl	4046b0 <free@plt>
  435984:	mov	x24, x21
  435988:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  43598c:	ldrb	w8, [x24, #16]
  435990:	ldr	x21, [x24, #8]
  435994:	tbz	w8, #1, 43597c <wcrtomb@plt+0x30e8c>
  435998:	ldr	x0, [x24, #24]
  43599c:	bl	4046b0 <free@plt>
  4359a0:	b	43597c <wcrtomb@plt+0x30e8c>
  4359a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4359a8:	add	x1, x1, #0x213
  4359ac:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4359b0:	add	x0, x0, #0x274
  4359b4:	blr	x20
  4359b8:	ldr	w8, [x19, #32]
  4359bc:	tbz	w8, #3, 435574 <wcrtomb@plt+0x30a84>
  4359c0:	mov	x20, x19
  4359c4:	ldr	x24, [x20, #208]!
  4359c8:	cbnz	x24, 4359e0 <wcrtomb@plt+0x30ef0>
  4359cc:	b	435b58 <wcrtomb@plt+0x31068>
  4359d0:	mov	x0, x24
  4359d4:	bl	4046b0 <free@plt>
  4359d8:	mov	x24, x21
  4359dc:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  4359e0:	ldrb	w8, [x24, #16]
  4359e4:	ldr	x21, [x24, #8]
  4359e8:	tbz	w8, #1, 4359d0 <wcrtomb@plt+0x30ee0>
  4359ec:	ldr	x0, [x24, #24]
  4359f0:	bl	4046b0 <free@plt>
  4359f4:	b	4359d0 <wcrtomb@plt+0x30ee0>
  4359f8:	add	x8, x19, #0xc8
  4359fc:	b	435a20 <wcrtomb@plt+0x30f30>
  435a00:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435a04:	ldr	w9, [x9, #4000]
  435a08:	sxtw	x8, w8
  435a0c:	cmp	w8, w9
  435a10:	b.ge	435a88 <wcrtomb@plt+0x30f98>  // b.tcont
  435a14:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435a18:	add	x9, x9, #0xf58
  435a1c:	add	x8, x9, x8, lsl #3
  435a20:	ldr	x1, [x8]
  435a24:	b	435a90 <wcrtomb@plt+0x30fa0>
  435a28:	add	x8, x19, #0xc8
  435a2c:	b	435a50 <wcrtomb@plt+0x30f60>
  435a30:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435a34:	ldr	w9, [x9, #4000]
  435a38:	sxtw	x8, w8
  435a3c:	cmp	w8, w9
  435a40:	b.ge	435adc <wcrtomb@plt+0x30fec>  // b.tcont
  435a44:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435a48:	add	x9, x9, #0xf58
  435a4c:	add	x8, x9, x8, lsl #3
  435a50:	ldr	x1, [x8]
  435a54:	b	435ae4 <wcrtomb@plt+0x30ff4>
  435a58:	add	x8, x19, #0xc8
  435a5c:	b	435a80 <wcrtomb@plt+0x30f90>
  435a60:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435a64:	ldr	w9, [x9, #4000]
  435a68:	sxtw	x8, w8
  435a6c:	cmp	w8, w9
  435a70:	b.ge	435b30 <wcrtomb@plt+0x31040>  // b.tcont
  435a74:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435a78:	add	x9, x9, #0xf58
  435a7c:	add	x8, x9, x8, lsl #3
  435a80:	ldr	x1, [x8]
  435a84:	b	435b38 <wcrtomb@plt+0x31048>
  435a88:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435a8c:	add	x1, x1, #0x213
  435a90:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435a94:	add	x0, x0, #0x274
  435a98:	blr	x20
  435a9c:	ldr	w8, [x19, #32]
  435aa0:	tbz	w8, #3, 43533c <wcrtomb@plt+0x3084c>
  435aa4:	mov	x20, x19
  435aa8:	ldr	x24, [x20, #208]!
  435aac:	cbnz	x24, 435ac4 <wcrtomb@plt+0x30fd4>
  435ab0:	b	435b58 <wcrtomb@plt+0x31068>
  435ab4:	mov	x0, x24
  435ab8:	bl	4046b0 <free@plt>
  435abc:	mov	x24, x21
  435ac0:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  435ac4:	ldrb	w8, [x24, #16]
  435ac8:	ldr	x21, [x24, #8]
  435acc:	tbz	w8, #1, 435ab4 <wcrtomb@plt+0x30fc4>
  435ad0:	ldr	x0, [x24, #24]
  435ad4:	bl	4046b0 <free@plt>
  435ad8:	b	435ab4 <wcrtomb@plt+0x30fc4>
  435adc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435ae0:	add	x1, x1, #0x213
  435ae4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435ae8:	add	x0, x0, #0x274
  435aec:	blr	x20
  435af0:	ldr	w8, [x19, #32]
  435af4:	tbz	w8, #3, 4353e0 <wcrtomb@plt+0x308f0>
  435af8:	mov	x20, x19
  435afc:	ldr	x24, [x20, #208]!
  435b00:	cbnz	x24, 435b18 <wcrtomb@plt+0x31028>
  435b04:	b	435b58 <wcrtomb@plt+0x31068>
  435b08:	mov	x0, x24
  435b0c:	bl	4046b0 <free@plt>
  435b10:	mov	x24, x21
  435b14:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  435b18:	ldrb	w8, [x24, #16]
  435b1c:	ldr	x21, [x24, #8]
  435b20:	tbz	w8, #1, 435b08 <wcrtomb@plt+0x31018>
  435b24:	ldr	x0, [x24, #24]
  435b28:	bl	4046b0 <free@plt>
  435b2c:	b	435b08 <wcrtomb@plt+0x31018>
  435b30:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435b34:	add	x1, x1, #0x213
  435b38:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435b3c:	add	x0, x0, #0x274
  435b40:	blr	x20
  435b44:	ldr	w8, [x19, #32]
  435b48:	tbz	w8, #3, 43583c <wcrtomb@plt+0x30d4c>
  435b4c:	mov	x20, x19
  435b50:	ldr	x24, [x20, #208]!
  435b54:	cbnz	x24, 435cfc <wcrtomb@plt+0x3120c>
  435b58:	stp	xzr, xzr, [x20]
  435b5c:	ldur	x24, [x29, #-16]
  435b60:	cbz	x24, 4347d0 <wcrtomb@plt+0x2fce0>
  435b64:	ldr	w25, [sp, #28]
  435b68:	tbnz	w25, #2, 435ba0 <wcrtomb@plt+0x310b0>
  435b6c:	ldrb	w8, [x24]
  435b70:	ldr	x23, [sp, #16]
  435b74:	cbz	w8, 435bfc <wcrtomb@plt+0x3110c>
  435b78:	mov	x0, x24
  435b7c:	bl	403f00 <strlen@plt>
  435b80:	ldrb	w8, [x19, #33]
  435b84:	mov	x3, x0
  435b88:	tbnz	w8, #4, 435c78 <wcrtomb@plt+0x31188>
  435b8c:	ldr	w8, [x19, #36]
  435b90:	mov	w4, #0x644                 	// #1604
  435b94:	lsr	w8, w8, #7
  435b98:	bfi	w4, w8, #12, #1
  435b9c:	b	435c7c <wcrtomb@plt+0x3118c>
  435ba0:	mov	w0, #0x1                   	// #1
  435ba4:	mov	w1, #0x28                  	// #40
  435ba8:	bl	4043d0 <calloc@plt>
  435bac:	ldr	x23, [sp, #16]
  435bb0:	cbz	x0, 435c3c <wcrtomb@plt+0x3114c>
  435bb4:	ldr	x9, [x19, #208]
  435bb8:	mov	x8, x0
  435bbc:	cbz	x9, 435f0c <wcrtomb@plt+0x3141c>
  435bc0:	ldr	x9, [x23]
  435bc4:	mov	x11, x8
  435bc8:	mov	x10, x11
  435bcc:	cbz	x11, 435bd8 <wcrtomb@plt+0x310e8>
  435bd0:	ldr	x11, [x10, #8]
  435bd4:	cbnz	x11, 435bc8 <wcrtomb@plt+0x310d8>
  435bd8:	ldr	x11, [x9, #8]
  435bdc:	add	x12, x19, #0xd8
  435be0:	cmp	x11, #0x0
  435be4:	csel	x12, x12, x11, eq  // eq = none
  435be8:	str	x10, [x12]
  435bec:	str	x11, [x10, #8]
  435bf0:	str	x9, [x8]
  435bf4:	str	x8, [x9, #8]
  435bf8:	b	435f14 <wcrtomb@plt+0x31424>
  435bfc:	mov	x0, x24
  435c00:	bl	4046b0 <free@plt>
  435c04:	mov	w0, #0x1                   	// #1
  435c08:	mov	w1, #0x28                  	// #40
  435c0c:	bl	4043d0 <calloc@plt>
  435c10:	cbz	x0, 435db8 <wcrtomb@plt+0x312c8>
  435c14:	ldr	x9, [x19, #208]
  435c18:	mov	x8, x0
  435c1c:	cbz	x9, 434fd8 <wcrtomb@plt+0x304e8>
  435c20:	ldr	x9, [x23]
  435c24:	mov	x11, x8
  435c28:	mov	x10, x11
  435c2c:	cbz	x11, 434810 <wcrtomb@plt+0x2fd20>
  435c30:	ldr	x11, [x10, #8]
  435c34:	cbnz	x11, 435c28 <wcrtomb@plt+0x31138>
  435c38:	b	434810 <wcrtomb@plt+0x2fd20>
  435c3c:	bl	4049c0 <__errno_location@plt>
  435c40:	mov	w8, #0xc                   	// #12
  435c44:	str	w8, [x0]
  435c48:	ldr	w8, [x19, #32]
  435c4c:	mov	w9, #0x2                   	// #2
  435c50:	str	w9, [x19, #192]
  435c54:	tbnz	w8, #7, 435d64 <wcrtomb@plt+0x31274>
  435c58:	tbnz	w8, #4, 435d78 <wcrtomb@plt+0x31288>
  435c5c:	tbnz	w8, #3, 435ebc <wcrtomb@plt+0x313cc>
  435c60:	mov	x0, x19
  435c64:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435c68:	mov	x20, x19
  435c6c:	ldr	x22, [x20, #208]!
  435c70:	cbnz	x22, 435ef4 <wcrtomb@plt+0x31404>
  435c74:	b	435ec8 <wcrtomb@plt+0x313d8>
  435c78:	mov	w4, #0x1644                	// #5700
  435c7c:	add	x1, sp, #0x20
  435c80:	mov	x0, x19
  435c84:	mov	x2, x24
  435c88:	mov	w5, wzr
  435c8c:	add	x20, sp, #0x20
  435c90:	bl	433eb8 <wcrtomb@plt+0x2f3c8>
  435c94:	ldur	x8, [x29, #-16]
  435c98:	mov	w21, w0
  435c9c:	mov	x0, x8
  435ca0:	bl	4046b0 <free@plt>
  435ca4:	cbz	w21, 435d14 <wcrtomb@plt+0x31224>
  435ca8:	ldr	w8, [x19, #192]
  435cac:	cmp	w8, #0x9
  435cb0:	b.ne	435cbc <wcrtomb@plt+0x311cc>  // b.any
  435cb4:	ldr	x0, [x19, #200]
  435cb8:	bl	4046b0 <free@plt>
  435cbc:	ldr	w8, [sp, #224]
  435cc0:	cmp	w8, #0x9
  435cc4:	str	w8, [x19, #192]
  435cc8:	b.ne	435cdc <wcrtomb@plt+0x311ec>  // b.any
  435ccc:	ldr	x8, [sp, #232]
  435cd0:	str	x8, [x19, #200]
  435cd4:	str	wzr, [sp, #224]
  435cd8:	str	xzr, [sp, #232]
  435cdc:	add	x0, sp, #0x20
  435ce0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435ce4:	mov	w0, #0x1                   	// #1
  435ce8:	b	435f30 <wcrtomb@plt+0x31440>
  435cec:	mov	x0, x24
  435cf0:	bl	4046b0 <free@plt>
  435cf4:	mov	x24, x21
  435cf8:	cbz	x21, 435b58 <wcrtomb@plt+0x31068>
  435cfc:	ldrb	w8, [x24, #16]
  435d00:	ldr	x21, [x24, #8]
  435d04:	tbz	w8, #1, 435cec <wcrtomb@plt+0x311fc>
  435d08:	ldr	x0, [x24, #24]
  435d0c:	bl	4046b0 <free@plt>
  435d10:	b	435cec <wcrtomb@plt+0x311fc>
  435d14:	mov	x11, x19
  435d18:	ldr	x9, [sp, #240]
  435d1c:	ldr	x10, [x23]
  435d20:	ldr	x12, [x11, #208]!
  435d24:	add	x8, x20, #0xd0
  435d28:	cbz	x12, 435df4 <wcrtomb@plt+0x31304>
  435d2c:	mov	x11, x9
  435d30:	mov	x12, x11
  435d34:	cbz	x11, 435d40 <wcrtomb@plt+0x31250>
  435d38:	ldr	x11, [x12, #8]
  435d3c:	cbnz	x11, 435d30 <wcrtomb@plt+0x31240>
  435d40:	mov	x11, x10
  435d44:	ldr	x13, [x11, #8]!
  435d48:	add	x14, x19, #0xd8
  435d4c:	cmp	x13, #0x0
  435d50:	csel	x14, x14, x13, eq  // eq = none
  435d54:	str	x12, [x14]
  435d58:	str	x13, [x12, #8]
  435d5c:	str	x10, [x9]
  435d60:	b	435dfc <wcrtomb@plt+0x3130c>
  435d64:	ldr	x8, [x19, #88]
  435d68:	mov	x0, x19
  435d6c:	blr	x8
  435d70:	ldr	w8, [x19, #32]
  435d74:	tbz	w8, #4, 435c5c <wcrtomb@plt+0x3116c>
  435d78:	ldr	w8, [x19, #192]
  435d7c:	ldr	x20, [x19, #96]
  435d80:	cmp	w8, #0x9
  435d84:	b.eq	435e70 <wcrtomb@plt+0x31380>  // b.none
  435d88:	cmp	w8, #0x1
  435d8c:	b.ne	435e78 <wcrtomb@plt+0x31388>  // b.any
  435d90:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435d94:	add	x1, x1, #0x221
  435d98:	mov	w2, #0x5                   	// #5
  435d9c:	mov	x0, xzr
  435da0:	bl	4048b0 <dcgettext@plt>
  435da4:	ldr	x8, [x19, #168]
  435da8:	ldr	x2, [x19, #184]
  435dac:	ldrb	w1, [x8, x2]
  435db0:	blr	x20
  435db4:	b	435eb4 <wcrtomb@plt+0x313c4>
  435db8:	bl	4049c0 <__errno_location@plt>
  435dbc:	mov	w8, #0xc                   	// #12
  435dc0:	str	w8, [x0]
  435dc4:	ldr	w8, [x19, #32]
  435dc8:	mov	w9, #0x2                   	// #2
  435dcc:	str	w9, [x19, #192]
  435dd0:	tbnz	w8, #7, 435e1c <wcrtomb@plt+0x3132c>
  435dd4:	tbnz	w8, #4, 435e30 <wcrtomb@plt+0x31340>
  435dd8:	tbnz	w8, #3, 435f9c <wcrtomb@plt+0x314ac>
  435ddc:	mov	x0, x19
  435de0:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435de4:	mov	x20, x19
  435de8:	ldr	x21, [x20, #208]!
  435dec:	cbnz	x21, 435fbc <wcrtomb@plt+0x314cc>
  435df0:	b	434fcc <wcrtomb@plt+0x304dc>
  435df4:	stp	xzr, xzr, [x9]
  435df8:	str	x9, [x19, #216]
  435dfc:	str	x9, [x11]
  435e00:	ldr	x9, [sp, #248]
  435e04:	add	x0, sp, #0x20
  435e08:	str	x9, [x23]
  435e0c:	stp	xzr, xzr, [x8]
  435e10:	bl	42f95c <wcrtomb@plt+0x2ae6c>
  435e14:	mov	w0, wzr
  435e18:	b	435f30 <wcrtomb@plt+0x31440>
  435e1c:	ldr	x8, [x19, #88]
  435e20:	mov	x0, x19
  435e24:	blr	x8
  435e28:	ldr	w8, [x19, #32]
  435e2c:	tbz	w8, #4, 435dd8 <wcrtomb@plt+0x312e8>
  435e30:	ldr	w8, [x19, #192]
  435e34:	ldr	x20, [x19, #96]
  435e38:	cmp	w8, #0x9
  435e3c:	b.eq	435f50 <wcrtomb@plt+0x31460>  // b.none
  435e40:	cmp	w8, #0x1
  435e44:	b.ne	435f58 <wcrtomb@plt+0x31468>  // b.any
  435e48:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435e4c:	add	x1, x1, #0x221
  435e50:	mov	w2, #0x5                   	// #5
  435e54:	mov	x0, xzr
  435e58:	bl	4048b0 <dcgettext@plt>
  435e5c:	ldr	x8, [x19, #168]
  435e60:	ldr	x2, [x19, #184]
  435e64:	ldrb	w1, [x8, x2]
  435e68:	blr	x20
  435e6c:	b	435f94 <wcrtomb@plt+0x314a4>
  435e70:	add	x8, x19, #0xc8
  435e74:	b	435e98 <wcrtomb@plt+0x313a8>
  435e78:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435e7c:	ldr	w9, [x9, #4000]
  435e80:	sxtw	x8, w8
  435e84:	cmp	w8, w9
  435e88:	b.ge	435ea0 <wcrtomb@plt+0x313b0>  // b.tcont
  435e8c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435e90:	add	x9, x9, #0xf58
  435e94:	add	x8, x9, x8, lsl #3
  435e98:	ldr	x1, [x8]
  435e9c:	b	435ea8 <wcrtomb@plt+0x313b8>
  435ea0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435ea4:	add	x1, x1, #0x213
  435ea8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435eac:	add	x0, x0, #0x274
  435eb0:	blr	x20
  435eb4:	ldr	w8, [x19, #32]
  435eb8:	tbz	w8, #3, 435c60 <wcrtomb@plt+0x31170>
  435ebc:	mov	x20, x19
  435ec0:	ldr	x22, [x20, #208]!
  435ec4:	cbnz	x22, 435ef4 <wcrtomb@plt+0x31404>
  435ec8:	stp	xzr, xzr, [x20]
  435ecc:	ldr	w8, [x19, #192]
  435ed0:	cbz	w8, 435f0c <wcrtomb@plt+0x3141c>
  435ed4:	ldur	x0, [x29, #-16]
  435ed8:	bl	4046b0 <free@plt>
  435edc:	mov	w0, #0x1                   	// #1
  435ee0:	b	435f30 <wcrtomb@plt+0x31440>
  435ee4:	mov	x0, x22
  435ee8:	bl	4046b0 <free@plt>
  435eec:	mov	x22, x21
  435ef0:	cbz	x21, 435ec8 <wcrtomb@plt+0x313d8>
  435ef4:	ldrb	w8, [x22, #16]
  435ef8:	ldr	x21, [x22, #8]
  435efc:	tbz	w8, #1, 435ee4 <wcrtomb@plt+0x313f4>
  435f00:	ldr	x0, [x22, #24]
  435f04:	bl	4046b0 <free@plt>
  435f08:	b	435ee4 <wcrtomb@plt+0x313f4>
  435f0c:	stp	xzr, xzr, [x8]
  435f10:	stp	x8, x8, [x19, #208]
  435f14:	mov	w9, #0xa                   	// #10
  435f18:	orr	w9, w25, w9
  435f1c:	str	x8, [x23]
  435f20:	str	w9, [x8, #16]
  435f24:	ldur	x9, [x29, #-16]
  435f28:	mov	w0, wzr
  435f2c:	str	x9, [x8, #24]
  435f30:	add	sp, sp, #0x200
  435f34:	ldp	x20, x19, [sp, #80]
  435f38:	ldp	x22, x21, [sp, #64]
  435f3c:	ldp	x24, x23, [sp, #48]
  435f40:	ldp	x26, x25, [sp, #32]
  435f44:	ldp	x28, x27, [sp, #16]
  435f48:	ldp	x29, x30, [sp], #96
  435f4c:	ret
  435f50:	add	x8, x19, #0xc8
  435f54:	b	435f78 <wcrtomb@plt+0x31488>
  435f58:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435f5c:	ldr	w9, [x9, #4000]
  435f60:	sxtw	x8, w8
  435f64:	cmp	w8, w9
  435f68:	b.ge	435f80 <wcrtomb@plt+0x31490>  // b.tcont
  435f6c:	adrp	x9, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  435f70:	add	x9, x9, #0xf58
  435f74:	add	x8, x9, x8, lsl #3
  435f78:	ldr	x1, [x8]
  435f7c:	b	435f88 <wcrtomb@plt+0x31498>
  435f80:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435f84:	add	x1, x1, #0x213
  435f88:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  435f8c:	add	x0, x0, #0x274
  435f90:	blr	x20
  435f94:	ldr	w8, [x19, #32]
  435f98:	tbz	w8, #3, 435ddc <wcrtomb@plt+0x312ec>
  435f9c:	mov	x20, x19
  435fa0:	ldr	x21, [x20, #208]!
  435fa4:	cbnz	x21, 435fbc <wcrtomb@plt+0x314cc>
  435fa8:	b	434fcc <wcrtomb@plt+0x304dc>
  435fac:	mov	x0, x21
  435fb0:	bl	4046b0 <free@plt>
  435fb4:	mov	x21, x22
  435fb8:	cbz	x22, 434fcc <wcrtomb@plt+0x304dc>
  435fbc:	ldrb	w8, [x21, #16]
  435fc0:	ldr	x22, [x21, #8]
  435fc4:	tbz	w8, #1, 435fac <wcrtomb@plt+0x314bc>
  435fc8:	ldr	x0, [x21, #24]
  435fcc:	bl	4046b0 <free@plt>
  435fd0:	b	435fac <wcrtomb@plt+0x314bc>
  435fd4:	stp	x29, x30, [sp, #-96]!
  435fd8:	stp	x28, x27, [sp, #16]
  435fdc:	stp	x26, x25, [sp, #32]
  435fe0:	stp	x24, x23, [sp, #48]
  435fe4:	stp	x22, x21, [sp, #64]
  435fe8:	stp	x20, x19, [sp, #80]
  435fec:	mov	x29, sp
  435ff0:	sub	sp, sp, #0xfd0
  435ff4:	mov	w19, w5
  435ff8:	mov	x20, x4
  435ffc:	mov	x21, x3
  436000:	mov	x22, x2
  436004:	cmn	w0, #0x64
  436008:	mov	x24, x1
  43600c:	b.eq	43601c <wcrtomb@plt+0x3152c>  // b.none
  436010:	ldrb	w8, [x24]
  436014:	cmp	w8, #0x2f
  436018:	b.ne	436050 <wcrtomb@plt+0x31560>  // b.any
  43601c:	mov	x0, x24
  436020:	mov	x1, x22
  436024:	mov	x2, x21
  436028:	mov	x3, x20
  43602c:	mov	w4, w19
  436030:	add	sp, sp, #0xfd0
  436034:	ldp	x20, x19, [sp, #80]
  436038:	ldp	x22, x21, [sp, #64]
  43603c:	ldp	x24, x23, [sp, #48]
  436040:	ldp	x26, x25, [sp, #32]
  436044:	ldp	x28, x27, [sp, #16]
  436048:	ldp	x29, x30, [sp], #96
  43604c:	b	4042f0 <setxattr@plt>
  436050:	mov	w25, w0
  436054:	add	x0, sp, #0x8
  436058:	mov	w1, w25
  43605c:	mov	x2, x24
  436060:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  436064:	cbz	x0, 4360dc <wcrtomb@plt+0x315ec>
  436068:	mov	x1, x22
  43606c:	mov	x2, x21
  436070:	mov	x3, x20
  436074:	mov	w4, w19
  436078:	mov	x27, x0
  43607c:	bl	4042f0 <setxattr@plt>
  436080:	add	x28, sp, #0x8
  436084:	mov	w23, w0
  436088:	bl	4049c0 <__errno_location@plt>
  43608c:	ldr	w10, [x0]
  436090:	mov	x26, x0
  436094:	cmp	x27, x28
  436098:	b.eq	4360ac <wcrtomb@plt+0x315bc>  // b.none
  43609c:	mov	x0, x27
  4360a0:	mov	w27, w10
  4360a4:	bl	4046b0 <free@plt>
  4360a8:	mov	w10, w27
  4360ac:	cmn	w23, #0x1
  4360b0:	b.ne	4361a4 <wcrtomb@plt+0x316b4>  // b.any
  4360b4:	cmp	w10, #0x26
  4360b8:	b.hi	43616c <wcrtomb@plt+0x3167c>  // b.pmore
  4360bc:	mov	w8, w10
  4360c0:	mov	w9, #0x1                   	// #1
  4360c4:	lsl	x8, x9, x8
  4360c8:	mov	x9, #0x2006                	// #8198
  4360cc:	movk	x9, #0x10, lsl #16
  4360d0:	movk	x9, #0x40, lsl #32
  4360d4:	tst	x8, x9
  4360d8:	b.eq	43616c <wcrtomb@plt+0x3167c>  // b.none
  4360dc:	add	x0, sp, #0x8
  4360e0:	bl	449424 <argp_parse@@Base+0xed78>
  4360e4:	cbnz	w0, 4361c8 <wcrtomb@plt+0x316d8>
  4360e8:	tbnz	w25, #31, 436114 <wcrtomb@plt+0x31624>
  4360ec:	ldr	w8, [sp, #8]
  4360f0:	cmp	w8, w25
  4360f4:	b.ne	436114 <wcrtomb@plt+0x31624>  // b.any
  4360f8:	add	x0, sp, #0x8
  4360fc:	bl	44949c <argp_parse@@Base+0xedf0>
  436100:	bl	4049c0 <__errno_location@plt>
  436104:	mov	w8, #0x9                   	// #9
  436108:	str	w8, [x0]
  43610c:	mov	w23, #0xffffffff            	// #-1
  436110:	b	4361a4 <wcrtomb@plt+0x316b4>
  436114:	mov	w0, w25
  436118:	bl	403f70 <fchdir@plt>
  43611c:	cbz	w0, 436140 <wcrtomb@plt+0x31650>
  436120:	bl	4049c0 <__errno_location@plt>
  436124:	ldr	w20, [x0]
  436128:	mov	x19, x0
  43612c:	add	x0, sp, #0x8
  436130:	bl	44949c <argp_parse@@Base+0xedf0>
  436134:	str	w20, [x19]
  436138:	mov	w23, #0xffffffff            	// #-1
  43613c:	b	4361a4 <wcrtomb@plt+0x316b4>
  436140:	mov	x0, x24
  436144:	mov	x1, x22
  436148:	mov	x2, x21
  43614c:	mov	x3, x20
  436150:	mov	w4, w19
  436154:	bl	4042f0 <setxattr@plt>
  436158:	mov	w23, w0
  43615c:	cmn	w0, #0x1
  436160:	b.eq	43617c <wcrtomb@plt+0x3168c>  // b.none
  436164:	mov	w19, wzr
  436168:	b	436184 <wcrtomb@plt+0x31694>
  43616c:	cmp	w10, #0x5f
  436170:	b.eq	4360dc <wcrtomb@plt+0x315ec>  // b.none
  436174:	str	w10, [x26]
  436178:	b	4361a4 <wcrtomb@plt+0x316b4>
  43617c:	bl	4049c0 <__errno_location@plt>
  436180:	ldr	w19, [x0]
  436184:	add	x0, sp, #0x8
  436188:	bl	449484 <argp_parse@@Base+0xedd8>
  43618c:	cbnz	w0, 4361d4 <wcrtomb@plt+0x316e4>
  436190:	add	x0, sp, #0x8
  436194:	bl	44949c <argp_parse@@Base+0xedf0>
  436198:	cbz	w19, 4361a4 <wcrtomb@plt+0x316b4>
  43619c:	bl	4049c0 <__errno_location@plt>
  4361a0:	str	w19, [x0]
  4361a4:	mov	w0, w23
  4361a8:	add	sp, sp, #0xfd0
  4361ac:	ldp	x20, x19, [sp, #80]
  4361b0:	ldp	x22, x21, [sp, #64]
  4361b4:	ldp	x24, x23, [sp, #48]
  4361b8:	ldp	x26, x25, [sp, #32]
  4361bc:	ldp	x28, x27, [sp, #16]
  4361c0:	ldp	x29, x30, [sp], #96
  4361c4:	ret
  4361c8:	bl	4049c0 <__errno_location@plt>
  4361cc:	ldr	w0, [x0]
  4361d0:	bl	440c28 <argp_parse@@Base+0x657c>
  4361d4:	bl	4049c0 <__errno_location@plt>
  4361d8:	ldr	w0, [x0]
  4361dc:	bl	440c68 <argp_parse@@Base+0x65bc>
  4361e0:	stp	x29, x30, [sp, #-96]!
  4361e4:	stp	x28, x27, [sp, #16]
  4361e8:	stp	x26, x25, [sp, #32]
  4361ec:	stp	x24, x23, [sp, #48]
  4361f0:	stp	x22, x21, [sp, #64]
  4361f4:	stp	x20, x19, [sp, #80]
  4361f8:	mov	x29, sp
  4361fc:	sub	sp, sp, #0xfd0
  436200:	mov	w19, w5
  436204:	mov	x20, x4
  436208:	mov	x21, x3
  43620c:	mov	x22, x2
  436210:	cmn	w0, #0x64
  436214:	mov	x24, x1
  436218:	b.eq	436228 <wcrtomb@plt+0x31738>  // b.none
  43621c:	ldrb	w8, [x24]
  436220:	cmp	w8, #0x2f
  436224:	b.ne	43625c <wcrtomb@plt+0x3176c>  // b.any
  436228:	mov	x0, x24
  43622c:	mov	x1, x22
  436230:	mov	x2, x21
  436234:	mov	x3, x20
  436238:	mov	w4, w19
  43623c:	add	sp, sp, #0xfd0
  436240:	ldp	x20, x19, [sp, #80]
  436244:	ldp	x22, x21, [sp, #64]
  436248:	ldp	x24, x23, [sp, #48]
  43624c:	ldp	x26, x25, [sp, #32]
  436250:	ldp	x28, x27, [sp, #16]
  436254:	ldp	x29, x30, [sp], #96
  436258:	b	4043e0 <lsetxattr@plt>
  43625c:	mov	w25, w0
  436260:	add	x0, sp, #0x8
  436264:	mov	w1, w25
  436268:	mov	x2, x24
  43626c:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  436270:	cbz	x0, 4362e8 <wcrtomb@plt+0x317f8>
  436274:	mov	x1, x22
  436278:	mov	x2, x21
  43627c:	mov	x3, x20
  436280:	mov	w4, w19
  436284:	mov	x27, x0
  436288:	bl	4043e0 <lsetxattr@plt>
  43628c:	add	x28, sp, #0x8
  436290:	mov	w23, w0
  436294:	bl	4049c0 <__errno_location@plt>
  436298:	ldr	w10, [x0]
  43629c:	mov	x26, x0
  4362a0:	cmp	x27, x28
  4362a4:	b.eq	4362b8 <wcrtomb@plt+0x317c8>  // b.none
  4362a8:	mov	x0, x27
  4362ac:	mov	w27, w10
  4362b0:	bl	4046b0 <free@plt>
  4362b4:	mov	w10, w27
  4362b8:	cmn	w23, #0x1
  4362bc:	b.ne	4363b0 <wcrtomb@plt+0x318c0>  // b.any
  4362c0:	cmp	w10, #0x26
  4362c4:	b.hi	436378 <wcrtomb@plt+0x31888>  // b.pmore
  4362c8:	mov	w8, w10
  4362cc:	mov	w9, #0x1                   	// #1
  4362d0:	lsl	x8, x9, x8
  4362d4:	mov	x9, #0x2006                	// #8198
  4362d8:	movk	x9, #0x10, lsl #16
  4362dc:	movk	x9, #0x40, lsl #32
  4362e0:	tst	x8, x9
  4362e4:	b.eq	436378 <wcrtomb@plt+0x31888>  // b.none
  4362e8:	add	x0, sp, #0x8
  4362ec:	bl	449424 <argp_parse@@Base+0xed78>
  4362f0:	cbnz	w0, 4363d4 <wcrtomb@plt+0x318e4>
  4362f4:	tbnz	w25, #31, 436320 <wcrtomb@plt+0x31830>
  4362f8:	ldr	w8, [sp, #8]
  4362fc:	cmp	w8, w25
  436300:	b.ne	436320 <wcrtomb@plt+0x31830>  // b.any
  436304:	add	x0, sp, #0x8
  436308:	bl	44949c <argp_parse@@Base+0xedf0>
  43630c:	bl	4049c0 <__errno_location@plt>
  436310:	mov	w8, #0x9                   	// #9
  436314:	str	w8, [x0]
  436318:	mov	w23, #0xffffffff            	// #-1
  43631c:	b	4363b0 <wcrtomb@plt+0x318c0>
  436320:	mov	w0, w25
  436324:	bl	403f70 <fchdir@plt>
  436328:	cbz	w0, 43634c <wcrtomb@plt+0x3185c>
  43632c:	bl	4049c0 <__errno_location@plt>
  436330:	ldr	w20, [x0]
  436334:	mov	x19, x0
  436338:	add	x0, sp, #0x8
  43633c:	bl	44949c <argp_parse@@Base+0xedf0>
  436340:	str	w20, [x19]
  436344:	mov	w23, #0xffffffff            	// #-1
  436348:	b	4363b0 <wcrtomb@plt+0x318c0>
  43634c:	mov	x0, x24
  436350:	mov	x1, x22
  436354:	mov	x2, x21
  436358:	mov	x3, x20
  43635c:	mov	w4, w19
  436360:	bl	4043e0 <lsetxattr@plt>
  436364:	mov	w23, w0
  436368:	cmn	w0, #0x1
  43636c:	b.eq	436388 <wcrtomb@plt+0x31898>  // b.none
  436370:	mov	w19, wzr
  436374:	b	436390 <wcrtomb@plt+0x318a0>
  436378:	cmp	w10, #0x5f
  43637c:	b.eq	4362e8 <wcrtomb@plt+0x317f8>  // b.none
  436380:	str	w10, [x26]
  436384:	b	4363b0 <wcrtomb@plt+0x318c0>
  436388:	bl	4049c0 <__errno_location@plt>
  43638c:	ldr	w19, [x0]
  436390:	add	x0, sp, #0x8
  436394:	bl	449484 <argp_parse@@Base+0xedd8>
  436398:	cbnz	w0, 4363e0 <wcrtomb@plt+0x318f0>
  43639c:	add	x0, sp, #0x8
  4363a0:	bl	44949c <argp_parse@@Base+0xedf0>
  4363a4:	cbz	w19, 4363b0 <wcrtomb@plt+0x318c0>
  4363a8:	bl	4049c0 <__errno_location@plt>
  4363ac:	str	w19, [x0]
  4363b0:	mov	w0, w23
  4363b4:	add	sp, sp, #0xfd0
  4363b8:	ldp	x20, x19, [sp, #80]
  4363bc:	ldp	x22, x21, [sp, #64]
  4363c0:	ldp	x24, x23, [sp, #48]
  4363c4:	ldp	x26, x25, [sp, #32]
  4363c8:	ldp	x28, x27, [sp, #16]
  4363cc:	ldp	x29, x30, [sp], #96
  4363d0:	ret
  4363d4:	bl	4049c0 <__errno_location@plt>
  4363d8:	ldr	w0, [x0]
  4363dc:	bl	440c28 <argp_parse@@Base+0x657c>
  4363e0:	bl	4049c0 <__errno_location@plt>
  4363e4:	ldr	w0, [x0]
  4363e8:	bl	440c68 <argp_parse@@Base+0x65bc>
  4363ec:	stp	x29, x30, [sp, #-96]!
  4363f0:	stp	x28, x27, [sp, #16]
  4363f4:	stp	x26, x25, [sp, #32]
  4363f8:	stp	x24, x23, [sp, #48]
  4363fc:	stp	x22, x21, [sp, #64]
  436400:	stp	x20, x19, [sp, #80]
  436404:	mov	x29, sp
  436408:	sub	sp, sp, #0xfd0
  43640c:	mov	x19, x4
  436410:	mov	x20, x3
  436414:	mov	x22, x2
  436418:	cmn	w0, #0x64
  43641c:	mov	x23, x1
  436420:	b.eq	436430 <wcrtomb@plt+0x31940>  // b.none
  436424:	ldrb	w8, [x23]
  436428:	cmp	w8, #0x2f
  43642c:	b.ne	436460 <wcrtomb@plt+0x31970>  // b.any
  436430:	mov	x0, x23
  436434:	mov	x1, x22
  436438:	mov	x2, x20
  43643c:	mov	x3, x19
  436440:	add	sp, sp, #0xfd0
  436444:	ldp	x20, x19, [sp, #80]
  436448:	ldp	x22, x21, [sp, #64]
  43644c:	ldp	x24, x23, [sp, #48]
  436450:	ldp	x26, x25, [sp, #32]
  436454:	ldp	x28, x27, [sp, #16]
  436458:	ldp	x29, x30, [sp], #96
  43645c:	b	4045c0 <getxattr@plt>
  436460:	mov	w24, w0
  436464:	add	x0, sp, #0x8
  436468:	mov	w1, w24
  43646c:	mov	x2, x23
  436470:	add	x28, sp, #0x8
  436474:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  436478:	cbz	x0, 4364e0 <wcrtomb@plt+0x319f0>
  43647c:	mov	x1, x22
  436480:	mov	x2, x20
  436484:	mov	x3, x19
  436488:	mov	x26, x0
  43648c:	bl	4045c0 <getxattr@plt>
  436490:	mov	x21, x0
  436494:	bl	4049c0 <__errno_location@plt>
  436498:	ldr	w27, [x0]
  43649c:	mov	x25, x0
  4364a0:	cmp	x26, x28
  4364a4:	b.eq	4364b0 <wcrtomb@plt+0x319c0>  // b.none
  4364a8:	mov	x0, x26
  4364ac:	bl	4046b0 <free@plt>
  4364b0:	cmn	x21, #0x1
  4364b4:	b.ne	4365a4 <wcrtomb@plt+0x31ab4>  // b.any
  4364b8:	cmp	w27, #0x26
  4364bc:	b.hi	43656c <wcrtomb@plt+0x31a7c>  // b.pmore
  4364c0:	mov	w8, w27
  4364c4:	mov	w9, #0x1                   	// #1
  4364c8:	lsl	x8, x9, x8
  4364cc:	mov	x9, #0x2006                	// #8198
  4364d0:	movk	x9, #0x10, lsl #16
  4364d4:	movk	x9, #0x40, lsl #32
  4364d8:	tst	x8, x9
  4364dc:	b.eq	43656c <wcrtomb@plt+0x31a7c>  // b.none
  4364e0:	add	x0, sp, #0x8
  4364e4:	bl	449424 <argp_parse@@Base+0xed78>
  4364e8:	cbnz	w0, 4365c8 <wcrtomb@plt+0x31ad8>
  4364ec:	tbnz	w24, #31, 436518 <wcrtomb@plt+0x31a28>
  4364f0:	ldr	w8, [sp, #8]
  4364f4:	cmp	w8, w24
  4364f8:	b.ne	436518 <wcrtomb@plt+0x31a28>  // b.any
  4364fc:	add	x0, sp, #0x8
  436500:	bl	44949c <argp_parse@@Base+0xedf0>
  436504:	bl	4049c0 <__errno_location@plt>
  436508:	mov	w8, #0x9                   	// #9
  43650c:	str	w8, [x0]
  436510:	mov	x21, #0xffffffffffffffff    	// #-1
  436514:	b	4365a4 <wcrtomb@plt+0x31ab4>
  436518:	mov	w0, w24
  43651c:	bl	403f70 <fchdir@plt>
  436520:	cbz	w0, 436544 <wcrtomb@plt+0x31a54>
  436524:	bl	4049c0 <__errno_location@plt>
  436528:	ldr	w20, [x0]
  43652c:	mov	x19, x0
  436530:	add	x0, sp, #0x8
  436534:	bl	44949c <argp_parse@@Base+0xedf0>
  436538:	str	w20, [x19]
  43653c:	mov	x21, #0xffffffffffffffff    	// #-1
  436540:	b	4365a4 <wcrtomb@plt+0x31ab4>
  436544:	mov	x0, x23
  436548:	mov	x1, x22
  43654c:	mov	x2, x20
  436550:	mov	x3, x19
  436554:	bl	4045c0 <getxattr@plt>
  436558:	mov	x21, x0
  43655c:	cmn	x0, #0x1
  436560:	b.eq	43657c <wcrtomb@plt+0x31a8c>  // b.none
  436564:	mov	w19, wzr
  436568:	b	436584 <wcrtomb@plt+0x31a94>
  43656c:	cmp	w27, #0x5f
  436570:	b.eq	4364e0 <wcrtomb@plt+0x319f0>  // b.none
  436574:	str	w27, [x25]
  436578:	b	4365a4 <wcrtomb@plt+0x31ab4>
  43657c:	bl	4049c0 <__errno_location@plt>
  436580:	ldr	w19, [x0]
  436584:	add	x0, sp, #0x8
  436588:	bl	449484 <argp_parse@@Base+0xedd8>
  43658c:	cbnz	w0, 4365d4 <wcrtomb@plt+0x31ae4>
  436590:	add	x0, sp, #0x8
  436594:	bl	44949c <argp_parse@@Base+0xedf0>
  436598:	cbz	w19, 4365a4 <wcrtomb@plt+0x31ab4>
  43659c:	bl	4049c0 <__errno_location@plt>
  4365a0:	str	w19, [x0]
  4365a4:	mov	x0, x21
  4365a8:	add	sp, sp, #0xfd0
  4365ac:	ldp	x20, x19, [sp, #80]
  4365b0:	ldp	x22, x21, [sp, #64]
  4365b4:	ldp	x24, x23, [sp, #48]
  4365b8:	ldp	x26, x25, [sp, #32]
  4365bc:	ldp	x28, x27, [sp, #16]
  4365c0:	ldp	x29, x30, [sp], #96
  4365c4:	ret
  4365c8:	bl	4049c0 <__errno_location@plt>
  4365cc:	ldr	w0, [x0]
  4365d0:	bl	440c28 <argp_parse@@Base+0x657c>
  4365d4:	bl	4049c0 <__errno_location@plt>
  4365d8:	ldr	w0, [x0]
  4365dc:	bl	440c68 <argp_parse@@Base+0x65bc>
  4365e0:	stp	x29, x30, [sp, #-96]!
  4365e4:	stp	x28, x27, [sp, #16]
  4365e8:	stp	x26, x25, [sp, #32]
  4365ec:	stp	x24, x23, [sp, #48]
  4365f0:	stp	x22, x21, [sp, #64]
  4365f4:	stp	x20, x19, [sp, #80]
  4365f8:	mov	x29, sp
  4365fc:	sub	sp, sp, #0xfd0
  436600:	mov	x19, x4
  436604:	mov	x20, x3
  436608:	mov	x22, x2
  43660c:	cmn	w0, #0x64
  436610:	mov	x23, x1
  436614:	b.eq	436624 <wcrtomb@plt+0x31b34>  // b.none
  436618:	ldrb	w8, [x23]
  43661c:	cmp	w8, #0x2f
  436620:	b.ne	436654 <wcrtomb@plt+0x31b64>  // b.any
  436624:	mov	x0, x23
  436628:	mov	x1, x22
  43662c:	mov	x2, x20
  436630:	mov	x3, x19
  436634:	add	sp, sp, #0xfd0
  436638:	ldp	x20, x19, [sp, #80]
  43663c:	ldp	x22, x21, [sp, #64]
  436640:	ldp	x24, x23, [sp, #48]
  436644:	ldp	x26, x25, [sp, #32]
  436648:	ldp	x28, x27, [sp, #16]
  43664c:	ldp	x29, x30, [sp], #96
  436650:	b	404490 <lgetxattr@plt>
  436654:	mov	w24, w0
  436658:	add	x0, sp, #0x8
  43665c:	mov	w1, w24
  436660:	mov	x2, x23
  436664:	add	x28, sp, #0x8
  436668:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  43666c:	cbz	x0, 4366d4 <wcrtomb@plt+0x31be4>
  436670:	mov	x1, x22
  436674:	mov	x2, x20
  436678:	mov	x3, x19
  43667c:	mov	x26, x0
  436680:	bl	404490 <lgetxattr@plt>
  436684:	mov	x21, x0
  436688:	bl	4049c0 <__errno_location@plt>
  43668c:	ldr	w27, [x0]
  436690:	mov	x25, x0
  436694:	cmp	x26, x28
  436698:	b.eq	4366a4 <wcrtomb@plt+0x31bb4>  // b.none
  43669c:	mov	x0, x26
  4366a0:	bl	4046b0 <free@plt>
  4366a4:	cmn	x21, #0x1
  4366a8:	b.ne	436798 <wcrtomb@plt+0x31ca8>  // b.any
  4366ac:	cmp	w27, #0x26
  4366b0:	b.hi	436760 <wcrtomb@plt+0x31c70>  // b.pmore
  4366b4:	mov	w8, w27
  4366b8:	mov	w9, #0x1                   	// #1
  4366bc:	lsl	x8, x9, x8
  4366c0:	mov	x9, #0x2006                	// #8198
  4366c4:	movk	x9, #0x10, lsl #16
  4366c8:	movk	x9, #0x40, lsl #32
  4366cc:	tst	x8, x9
  4366d0:	b.eq	436760 <wcrtomb@plt+0x31c70>  // b.none
  4366d4:	add	x0, sp, #0x8
  4366d8:	bl	449424 <argp_parse@@Base+0xed78>
  4366dc:	cbnz	w0, 4367bc <wcrtomb@plt+0x31ccc>
  4366e0:	tbnz	w24, #31, 43670c <wcrtomb@plt+0x31c1c>
  4366e4:	ldr	w8, [sp, #8]
  4366e8:	cmp	w8, w24
  4366ec:	b.ne	43670c <wcrtomb@plt+0x31c1c>  // b.any
  4366f0:	add	x0, sp, #0x8
  4366f4:	bl	44949c <argp_parse@@Base+0xedf0>
  4366f8:	bl	4049c0 <__errno_location@plt>
  4366fc:	mov	w8, #0x9                   	// #9
  436700:	str	w8, [x0]
  436704:	mov	x21, #0xffffffffffffffff    	// #-1
  436708:	b	436798 <wcrtomb@plt+0x31ca8>
  43670c:	mov	w0, w24
  436710:	bl	403f70 <fchdir@plt>
  436714:	cbz	w0, 436738 <wcrtomb@plt+0x31c48>
  436718:	bl	4049c0 <__errno_location@plt>
  43671c:	ldr	w20, [x0]
  436720:	mov	x19, x0
  436724:	add	x0, sp, #0x8
  436728:	bl	44949c <argp_parse@@Base+0xedf0>
  43672c:	str	w20, [x19]
  436730:	mov	x21, #0xffffffffffffffff    	// #-1
  436734:	b	436798 <wcrtomb@plt+0x31ca8>
  436738:	mov	x0, x23
  43673c:	mov	x1, x22
  436740:	mov	x2, x20
  436744:	mov	x3, x19
  436748:	bl	404490 <lgetxattr@plt>
  43674c:	mov	x21, x0
  436750:	cmn	x0, #0x1
  436754:	b.eq	436770 <wcrtomb@plt+0x31c80>  // b.none
  436758:	mov	w19, wzr
  43675c:	b	436778 <wcrtomb@plt+0x31c88>
  436760:	cmp	w27, #0x5f
  436764:	b.eq	4366d4 <wcrtomb@plt+0x31be4>  // b.none
  436768:	str	w27, [x25]
  43676c:	b	436798 <wcrtomb@plt+0x31ca8>
  436770:	bl	4049c0 <__errno_location@plt>
  436774:	ldr	w19, [x0]
  436778:	add	x0, sp, #0x8
  43677c:	bl	449484 <argp_parse@@Base+0xedd8>
  436780:	cbnz	w0, 4367c8 <wcrtomb@plt+0x31cd8>
  436784:	add	x0, sp, #0x8
  436788:	bl	44949c <argp_parse@@Base+0xedf0>
  43678c:	cbz	w19, 436798 <wcrtomb@plt+0x31ca8>
  436790:	bl	4049c0 <__errno_location@plt>
  436794:	str	w19, [x0]
  436798:	mov	x0, x21
  43679c:	add	sp, sp, #0xfd0
  4367a0:	ldp	x20, x19, [sp, #80]
  4367a4:	ldp	x22, x21, [sp, #64]
  4367a8:	ldp	x24, x23, [sp, #48]
  4367ac:	ldp	x26, x25, [sp, #32]
  4367b0:	ldp	x28, x27, [sp, #16]
  4367b4:	ldp	x29, x30, [sp], #96
  4367b8:	ret
  4367bc:	bl	4049c0 <__errno_location@plt>
  4367c0:	ldr	w0, [x0]
  4367c4:	bl	440c28 <argp_parse@@Base+0x657c>
  4367c8:	bl	4049c0 <__errno_location@plt>
  4367cc:	ldr	w0, [x0]
  4367d0:	bl	440c68 <argp_parse@@Base+0x65bc>
  4367d4:	stp	x29, x30, [sp, #-96]!
  4367d8:	stp	x28, x27, [sp, #16]
  4367dc:	stp	x26, x25, [sp, #32]
  4367e0:	stp	x24, x23, [sp, #48]
  4367e4:	stp	x22, x21, [sp, #64]
  4367e8:	stp	x20, x19, [sp, #80]
  4367ec:	mov	x29, sp
  4367f0:	sub	sp, sp, #0xfc0
  4367f4:	mov	x19, x3
  4367f8:	mov	x21, x2
  4367fc:	cmn	w0, #0x64
  436800:	mov	x22, x1
  436804:	b.eq	436814 <wcrtomb@plt+0x31d24>  // b.none
  436808:	ldrb	w8, [x22]
  43680c:	cmp	w8, #0x2f
  436810:	b.ne	436840 <wcrtomb@plt+0x31d50>  // b.any
  436814:	mov	x0, x22
  436818:	mov	x1, x21
  43681c:	mov	x2, x19
  436820:	add	sp, sp, #0xfc0
  436824:	ldp	x20, x19, [sp, #80]
  436828:	ldp	x22, x21, [sp, #64]
  43682c:	ldp	x24, x23, [sp, #48]
  436830:	ldp	x26, x25, [sp, #32]
  436834:	ldp	x28, x27, [sp, #16]
  436838:	ldp	x29, x30, [sp], #96
  43683c:	b	4043f0 <listxattr@plt>
  436840:	mov	w23, w0
  436844:	mov	x0, sp
  436848:	mov	w1, w23
  43684c:	mov	x2, x22
  436850:	mov	x27, sp
  436854:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  436858:	cbz	x0, 4368bc <wcrtomb@plt+0x31dcc>
  43685c:	mov	x1, x21
  436860:	mov	x2, x19
  436864:	mov	x25, x0
  436868:	bl	4043f0 <listxattr@plt>
  43686c:	mov	x20, x0
  436870:	bl	4049c0 <__errno_location@plt>
  436874:	ldr	w26, [x0]
  436878:	mov	x24, x0
  43687c:	cmp	x25, x27
  436880:	b.eq	43688c <wcrtomb@plt+0x31d9c>  // b.none
  436884:	mov	x0, x25
  436888:	bl	4046b0 <free@plt>
  43688c:	cmn	x20, #0x1
  436890:	b.ne	43697c <wcrtomb@plt+0x31e8c>  // b.any
  436894:	cmp	w26, #0x26
  436898:	b.hi	436944 <wcrtomb@plt+0x31e54>  // b.pmore
  43689c:	mov	w8, w26
  4368a0:	mov	w9, #0x1                   	// #1
  4368a4:	lsl	x8, x9, x8
  4368a8:	mov	x9, #0x2006                	// #8198
  4368ac:	movk	x9, #0x10, lsl #16
  4368b0:	movk	x9, #0x40, lsl #32
  4368b4:	tst	x8, x9
  4368b8:	b.eq	436944 <wcrtomb@plt+0x31e54>  // b.none
  4368bc:	mov	x0, sp
  4368c0:	bl	449424 <argp_parse@@Base+0xed78>
  4368c4:	cbnz	w0, 4369a0 <wcrtomb@plt+0x31eb0>
  4368c8:	tbnz	w23, #31, 4368f4 <wcrtomb@plt+0x31e04>
  4368cc:	ldr	w8, [sp]
  4368d0:	cmp	w8, w23
  4368d4:	b.ne	4368f4 <wcrtomb@plt+0x31e04>  // b.any
  4368d8:	mov	x0, sp
  4368dc:	bl	44949c <argp_parse@@Base+0xedf0>
  4368e0:	bl	4049c0 <__errno_location@plt>
  4368e4:	mov	w8, #0x9                   	// #9
  4368e8:	str	w8, [x0]
  4368ec:	mov	x20, #0xffffffffffffffff    	// #-1
  4368f0:	b	43697c <wcrtomb@plt+0x31e8c>
  4368f4:	mov	w0, w23
  4368f8:	bl	403f70 <fchdir@plt>
  4368fc:	cbz	w0, 436920 <wcrtomb@plt+0x31e30>
  436900:	bl	4049c0 <__errno_location@plt>
  436904:	ldr	w20, [x0]
  436908:	mov	x19, x0
  43690c:	mov	x0, sp
  436910:	bl	44949c <argp_parse@@Base+0xedf0>
  436914:	str	w20, [x19]
  436918:	mov	x20, #0xffffffffffffffff    	// #-1
  43691c:	b	43697c <wcrtomb@plt+0x31e8c>
  436920:	mov	x0, x22
  436924:	mov	x1, x21
  436928:	mov	x2, x19
  43692c:	bl	4043f0 <listxattr@plt>
  436930:	mov	x20, x0
  436934:	cmn	x0, #0x1
  436938:	b.eq	436954 <wcrtomb@plt+0x31e64>  // b.none
  43693c:	mov	w19, wzr
  436940:	b	43695c <wcrtomb@plt+0x31e6c>
  436944:	cmp	w26, #0x5f
  436948:	b.eq	4368bc <wcrtomb@plt+0x31dcc>  // b.none
  43694c:	str	w26, [x24]
  436950:	b	43697c <wcrtomb@plt+0x31e8c>
  436954:	bl	4049c0 <__errno_location@plt>
  436958:	ldr	w19, [x0]
  43695c:	mov	x0, sp
  436960:	bl	449484 <argp_parse@@Base+0xedd8>
  436964:	cbnz	w0, 4369ac <wcrtomb@plt+0x31ebc>
  436968:	mov	x0, sp
  43696c:	bl	44949c <argp_parse@@Base+0xedf0>
  436970:	cbz	w19, 43697c <wcrtomb@plt+0x31e8c>
  436974:	bl	4049c0 <__errno_location@plt>
  436978:	str	w19, [x0]
  43697c:	mov	x0, x20
  436980:	add	sp, sp, #0xfc0
  436984:	ldp	x20, x19, [sp, #80]
  436988:	ldp	x22, x21, [sp, #64]
  43698c:	ldp	x24, x23, [sp, #48]
  436990:	ldp	x26, x25, [sp, #32]
  436994:	ldp	x28, x27, [sp, #16]
  436998:	ldp	x29, x30, [sp], #96
  43699c:	ret
  4369a0:	bl	4049c0 <__errno_location@plt>
  4369a4:	ldr	w0, [x0]
  4369a8:	bl	440c28 <argp_parse@@Base+0x657c>
  4369ac:	bl	4049c0 <__errno_location@plt>
  4369b0:	ldr	w0, [x0]
  4369b4:	bl	440c68 <argp_parse@@Base+0x65bc>
  4369b8:	stp	x29, x30, [sp, #-96]!
  4369bc:	stp	x28, x27, [sp, #16]
  4369c0:	stp	x26, x25, [sp, #32]
  4369c4:	stp	x24, x23, [sp, #48]
  4369c8:	stp	x22, x21, [sp, #64]
  4369cc:	stp	x20, x19, [sp, #80]
  4369d0:	mov	x29, sp
  4369d4:	sub	sp, sp, #0xfc0
  4369d8:	mov	x19, x3
  4369dc:	mov	x21, x2
  4369e0:	cmn	w0, #0x64
  4369e4:	mov	x22, x1
  4369e8:	b.eq	4369f8 <wcrtomb@plt+0x31f08>  // b.none
  4369ec:	ldrb	w8, [x22]
  4369f0:	cmp	w8, #0x2f
  4369f4:	b.ne	436a24 <wcrtomb@plt+0x31f34>  // b.any
  4369f8:	mov	x0, x22
  4369fc:	mov	x1, x21
  436a00:	mov	x2, x19
  436a04:	add	sp, sp, #0xfc0
  436a08:	ldp	x20, x19, [sp, #80]
  436a0c:	ldp	x22, x21, [sp, #64]
  436a10:	ldp	x24, x23, [sp, #48]
  436a14:	ldp	x26, x25, [sp, #32]
  436a18:	ldp	x28, x27, [sp, #16]
  436a1c:	ldp	x29, x30, [sp], #96
  436a20:	b	404910 <llistxattr@plt>
  436a24:	mov	w23, w0
  436a28:	mov	x0, sp
  436a2c:	mov	w1, w23
  436a30:	mov	x2, x22
  436a34:	mov	x27, sp
  436a38:	bl	44b238 <_obstack_memory_used@@Base+0x74>
  436a3c:	cbz	x0, 436aa0 <wcrtomb@plt+0x31fb0>
  436a40:	mov	x1, x21
  436a44:	mov	x2, x19
  436a48:	mov	x25, x0
  436a4c:	bl	404910 <llistxattr@plt>
  436a50:	mov	x20, x0
  436a54:	bl	4049c0 <__errno_location@plt>
  436a58:	ldr	w26, [x0]
  436a5c:	mov	x24, x0
  436a60:	cmp	x25, x27
  436a64:	b.eq	436a70 <wcrtomb@plt+0x31f80>  // b.none
  436a68:	mov	x0, x25
  436a6c:	bl	4046b0 <free@plt>
  436a70:	cmn	x20, #0x1
  436a74:	b.ne	436b60 <wcrtomb@plt+0x32070>  // b.any
  436a78:	cmp	w26, #0x26
  436a7c:	b.hi	436b28 <wcrtomb@plt+0x32038>  // b.pmore
  436a80:	mov	w8, w26
  436a84:	mov	w9, #0x1                   	// #1
  436a88:	lsl	x8, x9, x8
  436a8c:	mov	x9, #0x2006                	// #8198
  436a90:	movk	x9, #0x10, lsl #16
  436a94:	movk	x9, #0x40, lsl #32
  436a98:	tst	x8, x9
  436a9c:	b.eq	436b28 <wcrtomb@plt+0x32038>  // b.none
  436aa0:	mov	x0, sp
  436aa4:	bl	449424 <argp_parse@@Base+0xed78>
  436aa8:	cbnz	w0, 436b84 <wcrtomb@plt+0x32094>
  436aac:	tbnz	w23, #31, 436ad8 <wcrtomb@plt+0x31fe8>
  436ab0:	ldr	w8, [sp]
  436ab4:	cmp	w8, w23
  436ab8:	b.ne	436ad8 <wcrtomb@plt+0x31fe8>  // b.any
  436abc:	mov	x0, sp
  436ac0:	bl	44949c <argp_parse@@Base+0xedf0>
  436ac4:	bl	4049c0 <__errno_location@plt>
  436ac8:	mov	w8, #0x9                   	// #9
  436acc:	str	w8, [x0]
  436ad0:	mov	x20, #0xffffffffffffffff    	// #-1
  436ad4:	b	436b60 <wcrtomb@plt+0x32070>
  436ad8:	mov	w0, w23
  436adc:	bl	403f70 <fchdir@plt>
  436ae0:	cbz	w0, 436b04 <wcrtomb@plt+0x32014>
  436ae4:	bl	4049c0 <__errno_location@plt>
  436ae8:	ldr	w20, [x0]
  436aec:	mov	x19, x0
  436af0:	mov	x0, sp
  436af4:	bl	44949c <argp_parse@@Base+0xedf0>
  436af8:	str	w20, [x19]
  436afc:	mov	x20, #0xffffffffffffffff    	// #-1
  436b00:	b	436b60 <wcrtomb@plt+0x32070>
  436b04:	mov	x0, x22
  436b08:	mov	x1, x21
  436b0c:	mov	x2, x19
  436b10:	bl	404910 <llistxattr@plt>
  436b14:	mov	x20, x0
  436b18:	cmn	x0, #0x1
  436b1c:	b.eq	436b38 <wcrtomb@plt+0x32048>  // b.none
  436b20:	mov	w19, wzr
  436b24:	b	436b40 <wcrtomb@plt+0x32050>
  436b28:	cmp	w26, #0x5f
  436b2c:	b.eq	436aa0 <wcrtomb@plt+0x31fb0>  // b.none
  436b30:	str	w26, [x24]
  436b34:	b	436b60 <wcrtomb@plt+0x32070>
  436b38:	bl	4049c0 <__errno_location@plt>
  436b3c:	ldr	w19, [x0]
  436b40:	mov	x0, sp
  436b44:	bl	449484 <argp_parse@@Base+0xedd8>
  436b48:	cbnz	w0, 436b90 <wcrtomb@plt+0x320a0>
  436b4c:	mov	x0, sp
  436b50:	bl	44949c <argp_parse@@Base+0xedf0>
  436b54:	cbz	w19, 436b60 <wcrtomb@plt+0x32070>
  436b58:	bl	4049c0 <__errno_location@plt>
  436b5c:	str	w19, [x0]
  436b60:	mov	x0, x20
  436b64:	add	sp, sp, #0xfc0
  436b68:	ldp	x20, x19, [sp, #80]
  436b6c:	ldp	x22, x21, [sp, #64]
  436b70:	ldp	x24, x23, [sp, #48]
  436b74:	ldp	x26, x25, [sp, #32]
  436b78:	ldp	x28, x27, [sp, #16]
  436b7c:	ldp	x29, x30, [sp], #96
  436b80:	ret
  436b84:	bl	4049c0 <__errno_location@plt>
  436b88:	ldr	w0, [x0]
  436b8c:	bl	440c28 <argp_parse@@Base+0x657c>
  436b90:	bl	4049c0 <__errno_location@plt>
  436b94:	ldr	w0, [x0]
  436b98:	bl	440c68 <argp_parse@@Base+0x65bc>
  436b9c:	stp	x29, x30, [sp, #-80]!
  436ba0:	cmp	x2, #0x401
  436ba4:	mov	w8, #0x401                 	// #1025
  436ba8:	stp	x22, x21, [sp, #48]
  436bac:	stp	x20, x19, [sp, #64]
  436bb0:	mov	x19, x1
  436bb4:	mov	w20, w0
  436bb8:	csinc	x21, x8, x2, cs  // cs = hs, nlast
  436bbc:	str	x25, [sp, #16]
  436bc0:	stp	x24, x23, [sp, #32]
  436bc4:	mov	x29, sp
  436bc8:	b	436bd0 <wcrtomb@plt+0x320e0>
  436bcc:	lsl	x21, x21, #1
  436bd0:	mov	x0, x21
  436bd4:	bl	404210 <malloc@plt>
  436bd8:	mov	x22, x0
  436bdc:	cbz	x0, 436c64 <wcrtomb@plt+0x32174>
  436be0:	mov	w0, w20
  436be4:	mov	x1, x19
  436be8:	mov	x2, x22
  436bec:	mov	x3, x21
  436bf0:	bl	404ae0 <readlinkat@plt>
  436bf4:	mov	x23, x0
  436bf8:	tbz	x0, #63, 436c0c <wcrtomb@plt+0x3211c>
  436bfc:	bl	4049c0 <__errno_location@plt>
  436c00:	ldr	w25, [x0]
  436c04:	cmp	w25, #0x22
  436c08:	b.ne	436c50 <wcrtomb@plt+0x32160>  // b.any
  436c0c:	cmp	x23, x21
  436c10:	b.cc	436c48 <wcrtomb@plt+0x32158>  // b.lo, b.ul, b.last
  436c14:	mov	x0, x22
  436c18:	bl	4046b0 <free@plt>
  436c1c:	lsr	x8, x21, #62
  436c20:	cbz	x8, 436bcc <wcrtomb@plt+0x320dc>
  436c24:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  436c28:	cmp	x21, x8
  436c2c:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
  436c30:	b.cc	436bd0 <wcrtomb@plt+0x320e0>  // b.lo, b.ul, b.last
  436c34:	bl	4049c0 <__errno_location@plt>
  436c38:	mov	x22, xzr
  436c3c:	mov	w8, #0xc                   	// #12
  436c40:	str	w8, [x0]
  436c44:	b	436c64 <wcrtomb@plt+0x32174>
  436c48:	strb	wzr, [x22, x23]
  436c4c:	b	436c64 <wcrtomb@plt+0x32174>
  436c50:	mov	x24, x0
  436c54:	mov	x0, x22
  436c58:	bl	4046b0 <free@plt>
  436c5c:	mov	x22, xzr
  436c60:	str	w25, [x24]
  436c64:	mov	x0, x22
  436c68:	ldp	x20, x19, [sp, #64]
  436c6c:	ldp	x22, x21, [sp, #48]
  436c70:	ldp	x24, x23, [sp, #32]
  436c74:	ldr	x25, [sp, #16]
  436c78:	ldp	x29, x30, [sp], #80
  436c7c:	ret
  436c80:	stp	x29, x30, [sp, #-16]!
  436c84:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  436c88:	ldr	w0, [x8, #4056]
  436c8c:	mov	x29, sp
  436c90:	bl	403f30 <exit@plt>
  436c94:	stp	x29, x30, [sp, #-96]!
  436c98:	stp	x28, x27, [sp, #16]
  436c9c:	stp	x26, x25, [sp, #32]
  436ca0:	stp	x24, x23, [sp, #48]
  436ca4:	stp	x22, x21, [sp, #64]
  436ca8:	stp	x20, x19, [sp, #80]
  436cac:	mov	x29, sp
  436cb0:	mov	x22, x3
  436cb4:	mov	x23, x2
  436cb8:	mov	x25, x1
  436cbc:	mov	x19, x0
  436cc0:	bl	403f00 <strlen@plt>
  436cc4:	ldr	x24, [x25]
  436cc8:	cbz	x24, 436d4c <wcrtomb@plt+0x3225c>
  436ccc:	mov	x20, x0
  436cd0:	mov	w26, wzr
  436cd4:	mov	x21, xzr
  436cd8:	cbz	x23, 436d58 <wcrtomb@plt+0x32268>
  436cdc:	add	x28, x25, #0x8
  436ce0:	mov	x27, #0xffffffffffffffff    	// #-1
  436ce4:	mov	x25, x23
  436ce8:	b	436d18 <wcrtomb@plt+0x32228>
  436cec:	madd	x0, x27, x22, x23
  436cf0:	mov	x1, x25
  436cf4:	mov	x2, x22
  436cf8:	bl	404400 <bcmp@plt>
  436cfc:	cmp	w0, #0x0
  436d00:	cset	w8, ne  // ne = any
  436d04:	orr	w26, w26, w8
  436d08:	ldr	x24, [x28, x21, lsl #3]
  436d0c:	add	x21, x21, #0x1
  436d10:	add	x25, x25, x22
  436d14:	cbz	x24, 436da8 <wcrtomb@plt+0x322b8>
  436d18:	mov	x0, x24
  436d1c:	mov	x1, x19
  436d20:	mov	x2, x20
  436d24:	bl	4042c0 <strncmp@plt>
  436d28:	cbnz	w0, 436d08 <wcrtomb@plt+0x32218>
  436d2c:	mov	x0, x24
  436d30:	bl	403f00 <strlen@plt>
  436d34:	cmp	x0, x20
  436d38:	b.eq	436d50 <wcrtomb@plt+0x32260>  // b.none
  436d3c:	cmn	x27, #0x1
  436d40:	b.ne	436cec <wcrtomb@plt+0x321fc>  // b.any
  436d44:	mov	x27, x21
  436d48:	b	436d08 <wcrtomb@plt+0x32218>
  436d4c:	mov	x21, #0xffffffffffffffff    	// #-1
  436d50:	mov	x0, x21
  436d54:	b	436db4 <wcrtomb@plt+0x322c4>
  436d58:	add	x22, x25, #0x8
  436d5c:	mov	x27, #0xffffffffffffffff    	// #-1
  436d60:	b	436d80 <wcrtomb@plt+0x32290>
  436d64:	cmn	x27, #0x1
  436d68:	cset	w8, ne  // ne = any
  436d6c:	csel	x27, x21, x27, eq  // eq = none
  436d70:	orr	w26, w26, w8
  436d74:	ldr	x24, [x22, x21, lsl #3]
  436d78:	add	x21, x21, #0x1
  436d7c:	cbz	x24, 436da8 <wcrtomb@plt+0x322b8>
  436d80:	mov	x0, x24
  436d84:	mov	x1, x19
  436d88:	mov	x2, x20
  436d8c:	bl	4042c0 <strncmp@plt>
  436d90:	cbnz	w0, 436d74 <wcrtomb@plt+0x32284>
  436d94:	mov	x0, x24
  436d98:	bl	403f00 <strlen@plt>
  436d9c:	cmp	x0, x20
  436da0:	b.ne	436d64 <wcrtomb@plt+0x32274>  // b.any
  436da4:	b	436d50 <wcrtomb@plt+0x32260>
  436da8:	tst	w26, #0x1
  436dac:	mov	x8, #0xfffffffffffffffe    	// #-2
  436db0:	csel	x0, x8, x27, ne  // ne = any
  436db4:	ldp	x20, x19, [sp, #80]
  436db8:	ldp	x22, x21, [sp, #64]
  436dbc:	ldp	x24, x23, [sp, #48]
  436dc0:	ldp	x26, x25, [sp, #32]
  436dc4:	ldp	x28, x27, [sp, #16]
  436dc8:	ldp	x29, x30, [sp], #96
  436dcc:	ret
  436dd0:	stp	x29, x30, [sp, #-48]!
  436dd4:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436dd8:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436ddc:	add	x8, x8, #0x401
  436de0:	add	x9, x9, #0x3e6
  436de4:	cmn	x2, #0x1
  436de8:	stp	x20, x19, [sp, #32]
  436dec:	mov	x19, x1
  436df0:	mov	x20, x0
  436df4:	csel	x1, x9, x8, eq  // eq = none
  436df8:	mov	w2, #0x5                   	// #5
  436dfc:	mov	x0, xzr
  436e00:	str	x21, [sp, #16]
  436e04:	mov	x29, sp
  436e08:	bl	4048b0 <dcgettext@plt>
  436e0c:	mov	x21, x0
  436e10:	mov	w1, #0x8                   	// #8
  436e14:	mov	w0, wzr
  436e18:	mov	x2, x19
  436e1c:	bl	448c48 <argp_parse@@Base+0xe59c>
  436e20:	mov	x19, x0
  436e24:	mov	w0, #0x1                   	// #1
  436e28:	mov	x1, x20
  436e2c:	bl	449134 <argp_parse@@Base+0xea88>
  436e30:	mov	x2, x21
  436e34:	mov	x3, x19
  436e38:	ldp	x20, x19, [sp, #32]
  436e3c:	ldr	x21, [sp, #16]
  436e40:	mov	x4, x0
  436e44:	mov	w0, wzr
  436e48:	mov	w1, wzr
  436e4c:	ldp	x29, x30, [sp], #48
  436e50:	b	403f60 <error@plt>
  436e54:	stp	x29, x30, [sp, #-96]!
  436e58:	stp	x20, x19, [sp, #80]
  436e5c:	mov	x20, x1
  436e60:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436e64:	stp	x22, x21, [sp, #64]
  436e68:	mov	x19, x2
  436e6c:	mov	x21, x0
  436e70:	add	x1, x1, #0x41e
  436e74:	mov	w2, #0x5                   	// #5
  436e78:	mov	x0, xzr
  436e7c:	stp	x28, x27, [sp, #16]
  436e80:	stp	x26, x25, [sp, #32]
  436e84:	stp	x24, x23, [sp, #48]
  436e88:	mov	x29, sp
  436e8c:	bl	4048b0 <dcgettext@plt>
  436e90:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x34e3c>
  436e94:	ldr	x1, [x26, #88]
  436e98:	bl	4048d0 <fputs_unlocked@plt>
  436e9c:	ldr	x24, [x21]
  436ea0:	cbz	x24, 436f48 <wcrtomb@plt+0x32458>
  436ea4:	add	x28, x21, #0x8
  436ea8:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436eac:	mov	x27, xzr
  436eb0:	mov	x23, xzr
  436eb4:	mov	x22, xzr
  436eb8:	add	x21, x21, #0x433
  436ebc:	b	436ef8 <wcrtomb@plt+0x32408>
  436ec0:	mov	x25, xzr
  436ec4:	ldr	x23, [x26, #88]
  436ec8:	mov	x0, x24
  436ecc:	bl	449144 <argp_parse@@Base+0xea98>
  436ed0:	mov	x3, x0
  436ed4:	mov	w1, #0x1                   	// #1
  436ed8:	mov	x0, x23
  436edc:	mov	x2, x21
  436ee0:	bl	404600 <__fprintf_chk@plt>
  436ee4:	add	x23, x20, x25
  436ee8:	ldr	x24, [x28, x22, lsl #3]
  436eec:	add	x22, x22, #0x1
  436ef0:	add	x27, x27, x19
  436ef4:	cbz	x24, 436f48 <wcrtomb@plt+0x32458>
  436ef8:	cbz	x22, 436ec0 <wcrtomb@plt+0x323d0>
  436efc:	add	x1, x20, x27
  436f00:	mov	x0, x23
  436f04:	mov	x2, x19
  436f08:	bl	404400 <bcmp@plt>
  436f0c:	mov	x25, x27
  436f10:	cbnz	w0, 436ec4 <wcrtomb@plt+0x323d4>
  436f14:	ldr	x25, [x26, #88]
  436f18:	mov	x0, x24
  436f1c:	bl	449144 <argp_parse@@Base+0xea98>
  436f20:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436f24:	mov	x3, x0
  436f28:	mov	w1, #0x1                   	// #1
  436f2c:	mov	x0, x25
  436f30:	add	x2, x2, #0x43b
  436f34:	bl	404600 <__fprintf_chk@plt>
  436f38:	ldr	x24, [x28, x22, lsl #3]
  436f3c:	add	x22, x22, #0x1
  436f40:	add	x27, x27, x19
  436f44:	cbnz	x24, 436ef8 <wcrtomb@plt+0x32408>
  436f48:	ldr	x0, [x26, #88]
  436f4c:	ldp	x8, x9, [x0, #40]
  436f50:	cmp	x8, x9
  436f54:	b.cs	436f84 <wcrtomb@plt+0x32494>  // b.hs, b.nlast
  436f58:	add	x9, x8, #0x1
  436f5c:	mov	w10, #0xa                   	// #10
  436f60:	str	x9, [x0, #40]
  436f64:	strb	w10, [x8]
  436f68:	ldp	x20, x19, [sp, #80]
  436f6c:	ldp	x22, x21, [sp, #64]
  436f70:	ldp	x24, x23, [sp, #48]
  436f74:	ldp	x26, x25, [sp, #32]
  436f78:	ldp	x28, x27, [sp, #16]
  436f7c:	ldp	x29, x30, [sp], #96
  436f80:	ret
  436f84:	ldp	x20, x19, [sp, #80]
  436f88:	ldp	x22, x21, [sp, #64]
  436f8c:	ldp	x24, x23, [sp, #48]
  436f90:	ldp	x26, x25, [sp, #32]
  436f94:	ldp	x28, x27, [sp, #16]
  436f98:	mov	w1, #0xa                   	// #10
  436f9c:	ldp	x29, x30, [sp], #96
  436fa0:	b	404590 <__overflow@plt>
  436fa4:	stp	x29, x30, [sp, #-80]!
  436fa8:	stp	x24, x23, [sp, #32]
  436fac:	stp	x22, x21, [sp, #48]
  436fb0:	mov	x21, x3
  436fb4:	mov	x22, x2
  436fb8:	mov	x24, x1
  436fbc:	mov	x23, x0
  436fc0:	mov	x0, x1
  436fc4:	mov	x1, x2
  436fc8:	mov	x2, x3
  436fcc:	mov	x3, x4
  436fd0:	str	x25, [sp, #16]
  436fd4:	stp	x20, x19, [sp, #64]
  436fd8:	mov	x29, sp
  436fdc:	mov	x19, x5
  436fe0:	mov	x20, x4
  436fe4:	bl	436c94 <wcrtomb@plt+0x321a4>
  436fe8:	tbz	x0, #63, 437064 <wcrtomb@plt+0x32574>
  436fec:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436ff0:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  436ff4:	add	x8, x8, #0x401
  436ff8:	add	x9, x9, #0x3e6
  436ffc:	cmn	x0, #0x1
  437000:	csel	x1, x9, x8, eq  // eq = none
  437004:	mov	w2, #0x5                   	// #5
  437008:	mov	x0, xzr
  43700c:	bl	4048b0 <dcgettext@plt>
  437010:	mov	x25, x0
  437014:	mov	w1, #0x8                   	// #8
  437018:	mov	w0, wzr
  43701c:	mov	x2, x24
  437020:	bl	448c48 <argp_parse@@Base+0xe59c>
  437024:	mov	x24, x0
  437028:	mov	w0, #0x1                   	// #1
  43702c:	mov	x1, x23
  437030:	bl	449134 <argp_parse@@Base+0xea88>
  437034:	mov	x4, x0
  437038:	mov	w0, wzr
  43703c:	mov	w1, wzr
  437040:	mov	x2, x25
  437044:	mov	x3, x24
  437048:	bl	403f60 <error@plt>
  43704c:	mov	x0, x22
  437050:	mov	x1, x21
  437054:	mov	x2, x20
  437058:	bl	436e54 <wcrtomb@plt+0x32364>
  43705c:	blr	x19
  437060:	mov	x0, #0xffffffffffffffff    	// #-1
  437064:	ldp	x20, x19, [sp, #64]
  437068:	ldp	x22, x21, [sp, #48]
  43706c:	ldp	x24, x23, [sp, #32]
  437070:	ldr	x25, [sp, #16]
  437074:	ldp	x29, x30, [sp], #80
  437078:	ret
  43707c:	stp	x29, x30, [sp, #-64]!
  437080:	stp	x22, x21, [sp, #32]
  437084:	stp	x20, x19, [sp, #48]
  437088:	ldr	x20, [x1]
  43708c:	str	x23, [sp, #16]
  437090:	mov	x29, sp
  437094:	cbz	x20, 4370e4 <wcrtomb@plt+0x325f4>
  437098:	mov	x22, x2
  43709c:	mov	x23, x1
  4370a0:	mov	x1, x2
  4370a4:	mov	x2, x3
  4370a8:	mov	x19, x3
  4370ac:	mov	x21, x0
  4370b0:	bl	404400 <bcmp@plt>
  4370b4:	cbz	w0, 4370e4 <wcrtomb@plt+0x325f4>
  4370b8:	add	x22, x22, x19
  4370bc:	add	x23, x23, #0x8
  4370c0:	ldr	x20, [x23]
  4370c4:	cbz	x20, 4370e4 <wcrtomb@plt+0x325f4>
  4370c8:	mov	x0, x21
  4370cc:	mov	x1, x22
  4370d0:	mov	x2, x19
  4370d4:	bl	404400 <bcmp@plt>
  4370d8:	add	x22, x22, x19
  4370dc:	add	x23, x23, #0x8
  4370e0:	cbnz	w0, 4370c0 <wcrtomb@plt+0x325d0>
  4370e4:	mov	x0, x20
  4370e8:	ldp	x20, x19, [sp, #48]
  4370ec:	ldp	x22, x21, [sp, #32]
  4370f0:	ldr	x23, [sp, #16]
  4370f4:	ldp	x29, x30, [sp], #64
  4370f8:	ret

00000000004370fc <argp_help@@Base>:
  4370fc:	mov	x4, x3
  437100:	mov	w3, w2
  437104:	mov	x2, x1
  437108:	mov	x1, xzr
  43710c:	b	437110 <argp_help@@Base+0x14>
  437110:	stp	x29, x30, [sp, #-96]!
  437114:	stp	x28, x27, [sp, #16]
  437118:	stp	x26, x25, [sp, #32]
  43711c:	stp	x24, x23, [sp, #48]
  437120:	stp	x22, x21, [sp, #64]
  437124:	stp	x20, x19, [sp, #80]
  437128:	mov	x29, sp
  43712c:	sub	sp, sp, #0x80
  437130:	stp	x4, x0, [x29, #-88]
  437134:	cbz	x2, 438920 <argp_help@@Base+0x1824>
  437138:	mov	x0, x2
  43713c:	mov	w20, w3
  437140:	mov	x21, x2
  437144:	mov	x22, x1
  437148:	bl	403fa0 <flockfile@plt>
  43714c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437150:	ldr	w8, [x8, #4052]
  437154:	stur	x22, [x29, #-72]
  437158:	cbnz	w8, 437694 <argp_help@@Base+0x598>
  43715c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437160:	add	x0, x0, #0x4c0
  437164:	bl	4049e0 <getenv@plt>
  437168:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43716c:	add	x8, x8, #0xfb0
  437170:	ldp	q0, q1, [x8]
  437174:	ldr	x8, [x8, #32]
  437178:	stp	q0, q1, [x29, #-48]
  43717c:	stur	x8, [x29, #-16]
  437180:	cbz	x0, 437694 <argp_help@@Base+0x598>
  437184:	stur	w20, [x29, #-108]
  437188:	ldrb	w20, [x0]
  43718c:	mov	x23, x0
  437190:	stur	x21, [x29, #-104]
  437194:	cbz	w20, 4375a0 <argp_help@@Base+0x4a4>
  437198:	bl	404640 <__ctype_b_loc@plt>
  43719c:	adrp	x26, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4371a0:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4371a4:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4371a8:	mov	x24, x0
  4371ac:	add	x26, x26, #0x707
  4371b0:	add	x25, x25, #0x717
  4371b4:	add	x22, x22, #0x727
  4371b8:	b	4371e0 <argp_help@@Base+0xe4>
  4371bc:	ldrb	w8, [x20, #15]
  4371c0:	sub	x9, x29, #0x30
  4371c4:	str	w28, [x9, x8]
  4371c8:	mov	x8, x19
  4371cc:	ldrb	w9, [x8], #1
  4371d0:	cmp	w9, #0x2c
  4371d4:	csel	x23, x8, x19, eq  // eq = none
  4371d8:	ldrb	w20, [x23]
  4371dc:	cbz	w20, 4375a0 <argp_help@@Base+0x4a4>
  4371e0:	ldr	x8, [x24]
  4371e4:	and	x9, x20, #0xff
  4371e8:	ldrh	w9, [x8, x9, lsl #1]
  4371ec:	tbz	w9, #13, 4371fc <argp_help@@Base+0x100>
  4371f0:	ldrb	w20, [x23, #1]!
  4371f4:	ldrh	w9, [x8, x20, lsl #1]
  4371f8:	tbnz	w9, #13, 4371f0 <argp_help@@Base+0xf4>
  4371fc:	tbz	w9, #10, 437540 <argp_help@@Base+0x444>
  437200:	mov	w11, w20
  437204:	mov	x10, x23
  437208:	b	437210 <argp_help@@Base+0x114>
  43720c:	ldrb	w11, [x10, #1]!
  437210:	and	x9, x11, #0xff
  437214:	ldrh	w9, [x8, x9, lsl #1]
  437218:	tbnz	w9, #3, 43720c <argp_help@@Base+0x110>
  43721c:	and	w12, w11, #0xff
  437220:	cmp	w12, #0x5f
  437224:	b.eq	43720c <argp_help@@Base+0x110>  // b.none
  437228:	cmp	w12, #0x2d
  43722c:	b.eq	43720c <argp_help@@Base+0x110>  // b.none
  437230:	mov	x19, x10
  437234:	tbz	w9, #13, 437248 <argp_help@@Base+0x14c>
  437238:	mov	x19, x10
  43723c:	ldrb	w11, [x19, #1]!
  437240:	ldrh	w9, [x8, x11, lsl #1]
  437244:	tbnz	w9, #13, 43723c <argp_help@@Base+0x140>
  437248:	ands	w11, w11, #0xff
  43724c:	sub	x27, x10, x23
  437250:	b.eq	437294 <argp_help@@Base+0x198>  // b.none
  437254:	cmp	w11, #0x2c
  437258:	b.eq	437294 <argp_help@@Base+0x198>  // b.none
  43725c:	cmp	w11, #0x3d
  437260:	b.ne	437270 <argp_help@@Base+0x174>  // b.any
  437264:	ldrb	w9, [x19, #1]!
  437268:	ldrh	w9, [x8, x9, lsl #1]
  43726c:	tbnz	w9, #13, 437264 <argp_help@@Base+0x168>
  437270:	mov	x20, x25
  437274:	tbnz	w9, #11, 4372ec <argp_help@@Base+0x1f0>
  437278:	mov	w21, wzr
  43727c:	mov	w28, wzr
  437280:	mov	x0, x26
  437284:	bl	403f00 <strlen@plt>
  437288:	cmp	x0, x27
  43728c:	b.eq	437338 <argp_help@@Base+0x23c>  // b.none
  437290:	b	43734c <argp_help@@Base+0x250>
  437294:	and	w8, w20, #0xff
  437298:	cmp	w8, #0x6e
  43729c:	b.ne	4372cc <argp_help@@Base+0x1d0>  // b.any
  4372a0:	ldrb	w8, [x23, #1]
  4372a4:	cmp	w8, #0x6f
  4372a8:	b.ne	4372cc <argp_help@@Base+0x1d0>  // b.any
  4372ac:	ldrb	w8, [x23, #2]
  4372b0:	cmp	w8, #0x2d
  4372b4:	b.ne	4372cc <argp_help@@Base+0x1d0>  // b.any
  4372b8:	mov	w28, wzr
  4372bc:	add	x23, x23, #0x3
  4372c0:	sub	x27, x27, #0x3
  4372c4:	mov	w21, #0x1                   	// #1
  4372c8:	b	4372d4 <argp_help@@Base+0x1d8>
  4372cc:	mov	w21, #0x1                   	// #1
  4372d0:	mov	w28, #0x1                   	// #1
  4372d4:	mov	x20, x25
  4372d8:	mov	x0, x26
  4372dc:	bl	403f00 <strlen@plt>
  4372e0:	cmp	x0, x27
  4372e4:	b.eq	437338 <argp_help@@Base+0x23c>  // b.none
  4372e8:	b	43734c <argp_help@@Base+0x250>
  4372ec:	mov	w2, #0xa                   	// #10
  4372f0:	mov	x0, x19
  4372f4:	mov	x1, xzr
  4372f8:	bl	404670 <strtol@plt>
  4372fc:	ldr	x8, [x24]
  437300:	mov	x28, x0
  437304:	sub	x19, x19, #0x1
  437308:	ldrb	w9, [x19, #1]!
  43730c:	ldrh	w9, [x8, x9, lsl #1]
  437310:	tbnz	w9, #11, 437308 <argp_help@@Base+0x20c>
  437314:	tbz	w9, #13, 437324 <argp_help@@Base+0x228>
  437318:	ldrb	w9, [x19, #1]!
  43731c:	ldrh	w9, [x8, x9, lsl #1]
  437320:	tbnz	w9, #13, 437318 <argp_help@@Base+0x21c>
  437324:	mov	w21, wzr
  437328:	mov	x0, x26
  43732c:	bl	403f00 <strlen@plt>
  437330:	cmp	x0, x27
  437334:	b.ne	43734c <argp_help@@Base+0x250>  // b.any
  437338:	mov	x0, x23
  43733c:	mov	x1, x26
  437340:	mov	x2, x27
  437344:	bl	4042c0 <strncmp@plt>
  437348:	cbz	w0, 4374bc <argp_help@@Base+0x3c0>
  43734c:	mov	x0, x20
  437350:	bl	403f00 <strlen@plt>
  437354:	cmp	x0, x27
  437358:	b.ne	437370 <argp_help@@Base+0x274>  // b.any
  43735c:	mov	x0, x23
  437360:	mov	x1, x20
  437364:	mov	x2, x27
  437368:	bl	4042c0 <strncmp@plt>
  43736c:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  437370:	mov	x0, x22
  437374:	mov	x20, x22
  437378:	bl	403f00 <strlen@plt>
  43737c:	cmp	x0, x27
  437380:	b.ne	437398 <argp_help@@Base+0x29c>  // b.any
  437384:	mov	x0, x23
  437388:	mov	x1, x20
  43738c:	mov	x2, x27
  437390:	bl	4042c0 <strncmp@plt>
  437394:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  437398:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43739c:	add	x20, x20, #0x737
  4373a0:	mov	x0, x20
  4373a4:	bl	403f00 <strlen@plt>
  4373a8:	cmp	x0, x27
  4373ac:	b.ne	4373c4 <argp_help@@Base+0x2c8>  // b.any
  4373b0:	mov	x0, x23
  4373b4:	mov	x1, x20
  4373b8:	mov	x2, x27
  4373bc:	bl	4042c0 <strncmp@plt>
  4373c0:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  4373c4:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4373c8:	add	x20, x20, #0x747
  4373cc:	mov	x0, x20
  4373d0:	bl	403f00 <strlen@plt>
  4373d4:	cmp	x0, x27
  4373d8:	b.ne	4373f0 <argp_help@@Base+0x2f4>  // b.any
  4373dc:	mov	x0, x23
  4373e0:	mov	x1, x20
  4373e4:	mov	x2, x27
  4373e8:	bl	4042c0 <strncmp@plt>
  4373ec:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  4373f0:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4373f4:	add	x20, x20, #0x757
  4373f8:	mov	x0, x20
  4373fc:	bl	403f00 <strlen@plt>
  437400:	cmp	x0, x27
  437404:	b.ne	43741c <argp_help@@Base+0x320>  // b.any
  437408:	mov	x0, x23
  43740c:	mov	x1, x20
  437410:	mov	x2, x27
  437414:	bl	4042c0 <strncmp@plt>
  437418:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  43741c:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437420:	add	x20, x20, #0x767
  437424:	mov	x0, x20
  437428:	bl	403f00 <strlen@plt>
  43742c:	cmp	x0, x27
  437430:	b.ne	437448 <argp_help@@Base+0x34c>  // b.any
  437434:	mov	x0, x23
  437438:	mov	x1, x20
  43743c:	mov	x2, x27
  437440:	bl	4042c0 <strncmp@plt>
  437444:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  437448:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43744c:	add	x20, x20, #0x777
  437450:	mov	x0, x20
  437454:	bl	403f00 <strlen@plt>
  437458:	cmp	x0, x27
  43745c:	b.ne	437474 <argp_help@@Base+0x378>  // b.any
  437460:	mov	x0, x23
  437464:	mov	x1, x20
  437468:	mov	x2, x27
  43746c:	bl	4042c0 <strncmp@plt>
  437470:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  437474:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437478:	add	x20, x20, #0x787
  43747c:	mov	x0, x20
  437480:	bl	403f00 <strlen@plt>
  437484:	cmp	x0, x27
  437488:	b.ne	4374a0 <argp_help@@Base+0x3a4>  // b.any
  43748c:	mov	x0, x23
  437490:	mov	x1, x20
  437494:	mov	x2, x27
  437498:	bl	4042c0 <strncmp@plt>
  43749c:	cbz	w0, 4374c0 <argp_help@@Base+0x3c4>
  4374a0:	ldur	x20, [x29, #-72]
  4374a4:	cbz	x20, 43750c <argp_help@@Base+0x410>
  4374a8:	ldr	x8, [x20]
  4374ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4374b0:	mov	w2, #0x5                   	// #5
  4374b4:	add	x1, x1, #0x4fd
  4374b8:	b	4374e4 <argp_help@@Base+0x3e8>
  4374bc:	mov	x20, x26
  4374c0:	cbz	w21, 4371bc <argp_help@@Base+0xc0>
  4374c4:	ldrb	w9, [x20, #14]
  4374c8:	cbnz	w9, 4371bc <argp_help@@Base+0xc0>
  4374cc:	ldur	x20, [x29, #-72]
  4374d0:	cbz	x20, 4374f8 <argp_help@@Base+0x3fc>
  4374d4:	ldr	x8, [x20]
  4374d8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4374dc:	mov	w2, #0x5                   	// #5
  4374e0:	add	x1, x1, #0x4ce
  4374e4:	ldr	x0, [x8, #48]
  4374e8:	bl	4048b0 <dcgettext@plt>
  4374ec:	mov	x3, x0
  4374f0:	mov	x0, x20
  4374f4:	b	437528 <argp_help@@Base+0x42c>
  4374f8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4374fc:	mov	w2, #0x5                   	// #5
  437500:	mov	x0, xzr
  437504:	add	x1, x1, #0x4ce
  437508:	b	43751c <argp_help@@Base+0x420>
  43750c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437510:	mov	w2, #0x5                   	// #5
  437514:	mov	x0, xzr
  437518:	add	x1, x1, #0x4fd
  43751c:	bl	4048b0 <dcgettext@plt>
  437520:	mov	x3, x0
  437524:	mov	x0, xzr
  437528:	mov	w1, wzr
  43752c:	mov	w2, wzr
  437530:	mov	w4, w27
  437534:	mov	x5, x23
  437538:	bl	438b6c <argp_failure@@Base>
  43753c:	b	4371c8 <argp_help@@Base+0xcc>
  437540:	tst	w20, #0xff
  437544:	b.eq	4375a0 <argp_help@@Base+0x4a4>  // b.none
  437548:	ldur	x19, [x29, #-72]
  43754c:	cbz	x19, 437574 <argp_help@@Base+0x478>
  437550:	ldr	x8, [x19]
  437554:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437558:	add	x1, x1, #0x523
  43755c:	mov	w2, #0x5                   	// #5
  437560:	ldr	x0, [x8, #48]
  437564:	bl	4048b0 <dcgettext@plt>
  437568:	mov	x3, x0
  43756c:	mov	x0, x19
  437570:	b	437590 <argp_help@@Base+0x494>
  437574:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437578:	add	x1, x1, #0x523
  43757c:	mov	w2, #0x5                   	// #5
  437580:	mov	x0, xzr
  437584:	bl	4048b0 <dcgettext@plt>
  437588:	mov	x3, x0
  43758c:	mov	x0, xzr
  437590:	mov	w1, wzr
  437594:	mov	w2, wzr
  437598:	mov	x4, x23
  43759c:	bl	438b6c <argp_failure@@Base>
  4375a0:	ldur	w9, [x29, #-40]
  4375a4:	ldur	w8, [x29, #-16]
  4375a8:	cmp	w9, w8
  4375ac:	b.ge	437618 <argp_help@@Base+0x51c>  // b.tcont
  4375b0:	ldur	w9, [x29, #-36]
  4375b4:	cmp	w9, w8
  4375b8:	b.ge	437624 <argp_help@@Base+0x528>  // b.tcont
  4375bc:	ldur	w9, [x29, #-32]
  4375c0:	cmp	w9, w8
  4375c4:	b.ge	437630 <argp_help@@Base+0x534>  // b.tcont
  4375c8:	ldur	w9, [x29, #-28]
  4375cc:	cmp	w9, w8
  4375d0:	b.ge	43763c <argp_help@@Base+0x540>  // b.tcont
  4375d4:	ldur	w9, [x29, #-24]
  4375d8:	cmp	w9, w8
  4375dc:	b.ge	437648 <argp_help@@Base+0x54c>  // b.tcont
  4375e0:	ldur	w9, [x29, #-20]
  4375e4:	ldur	x21, [x29, #-104]
  4375e8:	ldur	w20, [x29, #-108]
  4375ec:	ldur	x22, [x29, #-72]
  4375f0:	cmp	w9, w8
  4375f4:	b.ge	438940 <argp_help@@Base+0x1844>  // b.tcont
  4375f8:	ldp	q0, q1, [x29, #-48]
  4375fc:	ldur	w8, [x29, #-16]
  437600:	adrp	x10, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437604:	mov	w9, #0x1                   	// #1
  437608:	add	x10, x10, #0xfb0
  43760c:	stp	q0, q1, [x10]
  437610:	stp	w8, w9, [x10, #32]
  437614:	b	437694 <argp_help@@Base+0x598>
  437618:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43761c:	add	x19, x19, #0x727
  437620:	b	437650 <argp_help@@Base+0x554>
  437624:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437628:	add	x19, x19, #0x737
  43762c:	b	437650 <argp_help@@Base+0x554>
  437630:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437634:	add	x19, x19, #0x747
  437638:	b	437650 <argp_help@@Base+0x554>
  43763c:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437640:	add	x19, x19, #0x757
  437644:	b	437650 <argp_help@@Base+0x554>
  437648:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43764c:	add	x19, x19, #0x767
  437650:	ldur	x21, [x29, #-104]
  437654:	ldur	w20, [x29, #-108]
  437658:	ldur	x22, [x29, #-72]
  43765c:	ldr	x8, [x22]
  437660:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437664:	add	x1, x1, #0x540
  437668:	mov	w2, #0x5                   	// #5
  43766c:	ldr	x0, [x8, #48]
  437670:	bl	4048b0 <dcgettext@plt>
  437674:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437678:	mov	x3, x0
  43767c:	add	x4, x4, #0x574
  437680:	mov	x0, x22
  437684:	mov	w1, wzr
  437688:	mov	w2, wzr
  43768c:	mov	x5, x19
  437690:	bl	438b6c <argp_failure@@Base>
  437694:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437698:	ldrsw	x2, [x8, #4048]
  43769c:	mov	x0, x21
  4376a0:	mov	x1, xzr
  4376a4:	mov	x3, xzr
  4376a8:	bl	45c2b8 <_obstack_memory_used@@Base+0x110f4>
  4376ac:	cbz	x0, 4377f4 <argp_help@@Base+0x6f8>
  4376b0:	mov	w8, #0xb                   	// #11
  4376b4:	mov	x23, x0
  4376b8:	tst	w20, w8
  4376bc:	stur	x21, [x29, #-104]
  4376c0:	b.eq	437818 <argp_help@@Base+0x71c>  // b.none
  4376c4:	ldur	x0, [x29, #-80]
  4376c8:	mov	x1, xzr
  4376cc:	bl	438db8 <argp_failure@@Base+0x24c>
  4376d0:	ldr	w19, [x0, #8]
  4376d4:	mov	x26, x0
  4376d8:	cbz	w19, 43781c <argp_help@@Base+0x720>
  4376dc:	mov	x28, x26
  4376e0:	ldr	x26, [x26]
  4376e4:	adrp	x27, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4376e8:	stur	w20, [x29, #-108]
  4376ec:	mov	w20, w19
  4376f0:	add	x27, x27, #0x455
  4376f4:	mov	w22, w19
  4376f8:	mov	x21, x26
  4376fc:	b	43770c <argp_help@@Base+0x610>
  437700:	sub	w22, w22, #0x1
  437704:	add	x21, x21, #0x38
  437708:	cbz	w22, 437750 <argp_help@@Base+0x654>
  43770c:	ldr	w24, [x21, #8]
  437710:	cbz	w24, 437700 <argp_help@@Base+0x604>
  437714:	ldr	x25, [x21]
  437718:	b	437728 <argp_help@@Base+0x62c>
  43771c:	sub	w24, w24, #0x1
  437720:	add	x25, x25, #0x30
  437724:	cbz	w24, 437700 <argp_help@@Base+0x604>
  437728:	ldr	x0, [x25]
  43772c:	cbz	x0, 43771c <argp_help@@Base+0x620>
  437730:	ldrb	w8, [x25, #24]
  437734:	tbnz	w8, #1, 43771c <argp_help@@Base+0x620>
  437738:	mov	x1, x27
  43773c:	bl	404610 <strcmp@plt>
  437740:	cbnz	w0, 43771c <argp_help@@Base+0x620>
  437744:	cbz	x21, 437750 <argp_help@@Base+0x654>
  437748:	mov	w8, #0xffffffff            	// #-1
  43774c:	str	w8, [x21, #24]
  437750:	adrp	x27, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437754:	add	x27, x27, #0xa25
  437758:	mov	x21, x26
  43775c:	b	43776c <argp_help@@Base+0x670>
  437760:	sub	w20, w20, #0x1
  437764:	add	x21, x21, #0x38
  437768:	cbz	w20, 4377b0 <argp_help@@Base+0x6b4>
  43776c:	ldr	w22, [x21, #8]
  437770:	cbz	w22, 437760 <argp_help@@Base+0x664>
  437774:	ldr	x24, [x21]
  437778:	b	437788 <argp_help@@Base+0x68c>
  43777c:	sub	w22, w22, #0x1
  437780:	add	x24, x24, #0x30
  437784:	cbz	w22, 437760 <argp_help@@Base+0x664>
  437788:	ldr	x0, [x24]
  43778c:	cbz	x0, 43777c <argp_help@@Base+0x680>
  437790:	ldrb	w8, [x24, #24]
  437794:	tbnz	w8, #1, 43777c <argp_help@@Base+0x680>
  437798:	mov	x1, x27
  43779c:	bl	404610 <strcmp@plt>
  4377a0:	cbnz	w0, 43777c <argp_help@@Base+0x680>
  4377a4:	cbz	x21, 4377b0 <argp_help@@Base+0x6b4>
  4377a8:	mov	w8, #0xffffffff            	// #-1
  4377ac:	str	w8, [x21, #24]
  4377b0:	subs	w8, w19, #0x1
  4377b4:	b.eq	4386f0 <argp_help@@Base+0x15f4>  // b.none
  4377b8:	add	x11, x8, #0x1
  4377bc:	mov	w9, #0x38                  	// #56
  4377c0:	and	x8, x11, #0x1fffffffe
  4377c4:	mov	x10, xzr
  4377c8:	madd	x9, x8, x9, x26
  4377cc:	add	x12, x26, #0x68
  4377d0:	add	w13, w10, #0x1
  4377d4:	stur	w10, [x12, #-56]
  4377d8:	add	x10, x10, #0x2
  4377dc:	str	w13, [x12], #112
  4377e0:	cmp	x8, x10
  4377e4:	b.ne	4377d0 <argp_help@@Base+0x6d4>  // b.any
  4377e8:	cmp	x11, x8
  4377ec:	b.ne	4386f4 <argp_help@@Base+0x15f8>  // b.any
  4377f0:	b	438708 <argp_help@@Base+0x160c>
  4377f4:	mov	x0, x21
  4377f8:	mov	sp, x29
  4377fc:	ldp	x20, x19, [sp, #80]
  437800:	ldp	x22, x21, [sp, #64]
  437804:	ldp	x24, x23, [sp, #48]
  437808:	ldp	x26, x25, [sp, #32]
  43780c:	ldp	x28, x27, [sp, #16]
  437810:	ldp	x29, x30, [sp], #96
  437814:	b	404230 <funlockfile@plt>
  437818:	mov	x26, xzr
  43781c:	tst	w20, #0x3
  437820:	b.eq	438738 <argp_help@@Base+0x163c>  // b.none
  437824:	ldur	x8, [x29, #-80]
  437828:	ldr	x0, [x8, #16]
  43782c:	ldr	x1, [x8, #32]
  437830:	bl	439368 <argp_failure@@Base+0x7fc>
  437834:	add	x8, x0, #0xf
  437838:	and	x8, x8, #0xfffffffffffffff0
  43783c:	mov	x9, sp
  437840:	sub	x19, x9, x8
  437844:	mov	x2, x0
  437848:	mov	sp, x19
  43784c:	mov	x0, x19
  437850:	mov	w1, wzr
  437854:	bl	404320 <memset@plt>
  437858:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43785c:	adrp	x27, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437860:	add	x24, x24, #0x45a
  437864:	adrp	x21, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437868:	add	x27, x27, #0x461
  43786c:	b	437888 <argp_help@@Base+0x78c>
  437870:	add	x9, x8, #0x1
  437874:	str	x9, [x23, #56]
  437878:	mov	w9, #0xa                   	// #10
  43787c:	strb	w9, [x8]
  437880:	mov	x24, x27
  437884:	cbz	w28, 437a38 <argp_help@@Base+0x93c>
  437888:	ldp	x9, x8, [x23, #48]
  43788c:	ldr	x10, [x23, #32]
  437890:	ldrsw	x22, [x21, #4044]
  437894:	sub	x8, x8, x9
  437898:	cmp	x8, x10
  43789c:	b.ls	4378a8 <argp_help@@Base+0x7ac>  // b.plast
  4378a0:	mov	x0, x23
  4378a4:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4378a8:	ldur	x8, [x29, #-80]
  4378ac:	ldr	x25, [x23, #24]
  4378b0:	str	x22, [x23, #24]
  4378b4:	stur	x19, [x29, #-48]
  4378b8:	ldr	x0, [x8, #48]
  4378bc:	mov	w2, #0x5                   	// #5
  4378c0:	mov	x1, x24
  4378c4:	bl	4048b0 <dcgettext@plt>
  4378c8:	ldur	x3, [x29, #-88]
  4378cc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x16e3c>
  4378d0:	mov	x2, x0
  4378d4:	mov	x0, x23
  4378d8:	add	x1, x1, #0xb08
  4378dc:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  4378e0:	ldp	x9, x8, [x23, #48]
  4378e4:	ldr	x10, [x23, #32]
  4378e8:	ldrsw	x24, [x21, #4044]
  4378ec:	sub	x8, x8, x9
  4378f0:	cmp	x8, x10
  4378f4:	b.ls	437900 <argp_help@@Base+0x804>  // b.plast
  4378f8:	mov	x0, x23
  4378fc:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  437900:	ldr	x22, [x23, #8]
  437904:	str	x24, [x23, #8]
  437908:	tbnz	w20, #1, 437924 <argp_help@@Base+0x828>
  43790c:	mov	x0, x26
  437910:	mov	x1, x23
  437914:	mov	w24, w20
  437918:	bl	4393d0 <argp_failure@@Base+0x864>
  43791c:	orr	w20, w20, #0x2
  437920:	b	437990 <argp_help@@Base+0x894>
  437924:	ldr	w8, [x26, #8]
  437928:	cbz	w8, 437990 <argp_help@@Base+0x894>
  43792c:	ldur	x8, [x29, #-80]
  437930:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437934:	mov	w2, #0x5                   	// #5
  437938:	add	x1, x1, #0x468
  43793c:	ldr	x0, [x8, #48]
  437940:	bl	4048b0 <dcgettext@plt>
  437944:	mov	x24, x0
  437948:	bl	403f00 <strlen@plt>
  43794c:	cbz	x0, 437990 <argp_help@@Base+0x894>
  437950:	mov	x28, x0
  437954:	ldp	x0, x8, [x23, #56]
  437958:	add	x9, x0, x28
  43795c:	cmp	x9, x8
  437960:	b.ls	437978 <argp_help@@Base+0x87c>  // b.plast
  437964:	mov	x0, x23
  437968:	mov	x1, x28
  43796c:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437970:	cbz	w0, 437990 <argp_help@@Base+0x894>
  437974:	ldr	x0, [x23, #56]
  437978:	mov	x1, x24
  43797c:	mov	x2, x28
  437980:	bl	403e80 <memcpy@plt>
  437984:	ldr	x8, [x23, #56]
  437988:	add	x8, x8, x28
  43798c:	str	x8, [x23, #56]
  437990:	ldp	x0, x1, [x29, #-80]
  437994:	sub	x2, x29, #0x30
  437998:	mov	w3, #0x1                   	// #1
  43799c:	mov	x4, x23
  4379a0:	bl	439764 <argp_failure@@Base+0xbf8>
  4379a4:	ldp	x10, x8, [x23, #48]
  4379a8:	ldr	x9, [x23, #32]
  4379ac:	mov	w28, w0
  4379b0:	sxtw	x24, w25
  4379b4:	sub	x10, x8, x10
  4379b8:	cmp	x10, x9
  4379bc:	b.ls	4379f8 <argp_help@@Base+0x8fc>  // b.plast
  4379c0:	mov	x0, x23
  4379c4:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4379c8:	ldp	x10, x8, [x23, #48]
  4379cc:	ldr	x9, [x23, #32]
  4379d0:	sub	x10, x8, x10
  4379d4:	cmp	x10, x9
  4379d8:	sxtw	x22, w22
  4379dc:	str	x24, [x23, #24]
  4379e0:	b.hi	437a08 <argp_help@@Base+0x90c>  // b.pmore
  4379e4:	ldr	x9, [x23, #64]
  4379e8:	str	x22, [x23, #8]
  4379ec:	cmp	x8, x9
  4379f0:	b.cc	437870 <argp_help@@Base+0x774>  // b.lo, b.ul, b.last
  4379f4:	b	437a20 <argp_help@@Base+0x924>
  4379f8:	cmp	x10, x9
  4379fc:	sxtw	x22, w22
  437a00:	str	x24, [x23, #24]
  437a04:	b.ls	4379e4 <argp_help@@Base+0x8e8>  // b.plast
  437a08:	mov	x0, x23
  437a0c:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  437a10:	ldp	x8, x9, [x23, #56]
  437a14:	str	x22, [x23, #8]
  437a18:	cmp	x8, x9
  437a1c:	b.cc	437870 <argp_help@@Base+0x774>  // b.lo, b.ul, b.last
  437a20:	mov	w1, #0x1                   	// #1
  437a24:	mov	x0, x23
  437a28:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437a2c:	cbz	w0, 437880 <argp_help@@Base+0x784>
  437a30:	ldr	x8, [x23, #56]
  437a34:	b	437870 <argp_help@@Base+0x774>
  437a38:	ldur	x21, [x29, #-104]
  437a3c:	ldur	x22, [x29, #-72]
  437a40:	mov	w19, #0x1                   	// #1
  437a44:	tbz	w20, #4, 437a68 <argp_help@@Base+0x96c>
  437a48:	ldur	x0, [x29, #-80]
  437a4c:	mov	w4, #0x1                   	// #1
  437a50:	mov	x1, x22
  437a54:	mov	w2, wzr
  437a58:	mov	w3, wzr
  437a5c:	mov	x5, x23
  437a60:	bl	4399fc <argp_failure@@Base+0xe90>
  437a64:	orr	w19, w0, w19
  437a68:	tbnz	w20, #2, 437a74 <argp_help@@Base+0x978>
  437a6c:	tbnz	w20, #3, 437aa8 <argp_help@@Base+0x9ac>
  437a70:	b	438844 <argp_help@@Base+0x1748>
  437a74:	ldur	x8, [x29, #-80]
  437a78:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437a7c:	add	x1, x1, #0x475
  437a80:	mov	w2, #0x5                   	// #5
  437a84:	ldr	x0, [x8, #48]
  437a88:	bl	4048b0 <dcgettext@plt>
  437a8c:	ldur	x2, [x29, #-88]
  437a90:	mov	x1, x0
  437a94:	mov	x0, x23
  437a98:	mov	x3, x2
  437a9c:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  437aa0:	mov	w19, #0x1                   	// #1
  437aa4:	tbz	w20, #3, 438844 <argp_help@@Base+0x1748>
  437aa8:	ldr	w27, [x26, #8]
  437aac:	cbz	w27, 438844 <argp_help@@Base+0x1748>
  437ab0:	stur	w20, [x29, #-108]
  437ab4:	cbz	w19, 437aec <argp_help@@Base+0x9f0>
  437ab8:	ldp	x8, x9, [x23, #56]
  437abc:	cmp	x8, x9
  437ac0:	b.cc	437ad8 <argp_help@@Base+0x9dc>  // b.lo, b.ul, b.last
  437ac4:	mov	w1, #0x1                   	// #1
  437ac8:	mov	x0, x23
  437acc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437ad0:	cbz	w0, 437ae8 <argp_help@@Base+0x9ec>
  437ad4:	ldr	x8, [x23, #56]
  437ad8:	add	x9, x8, #0x1
  437adc:	mov	w10, #0xa                   	// #10
  437ae0:	str	x9, [x23, #56]
  437ae4:	strb	w10, [x8]
  437ae8:	ldr	w27, [x26, #8]
  437aec:	ldr	x25, [x26]
  437af0:	stur	x26, [x29, #-120]
  437af4:	stp	xzr, xzr, [x29, #-64]
  437af8:	cbz	w27, 438830 <argp_help@@Base+0x1734>
  437afc:	add	x26, x23, #0x38
  437b00:	b	437b14 <argp_help@@Base+0xa18>
  437b04:	subs	w27, w27, #0x1
  437b08:	add	x25, x25, #0x38
  437b0c:	str	x19, [x23, #24]
  437b10:	b.eq	438680 <argp_help@@Base+0x1584>  // b.none
  437b14:	ldp	x9, x8, [x23, #48]
  437b18:	ldr	x10, [x23, #32]
  437b1c:	ldr	x21, [x25]
  437b20:	ldr	x19, [x25, #16]
  437b24:	sub	x8, x8, x9
  437b28:	cmp	x8, x10
  437b2c:	b.ls	437b38 <argp_help@@Base+0xa3c>  // b.plast
  437b30:	mov	x0, x23
  437b34:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  437b38:	sub	x8, x29, #0x40
  437b3c:	ldr	x10, [x23, #8]
  437b40:	str	xzr, [x23, #8]
  437b44:	ldr	x9, [x23, #24]
  437b48:	stur	x8, [x29, #-32]
  437b4c:	mov	w8, #0x1                   	// #1
  437b50:	stur	w8, [x29, #-24]
  437b54:	ldur	x8, [x29, #-72]
  437b58:	stp	x25, x23, [x29, #-48]
  437b5c:	stur	x8, [x29, #-16]
  437b60:	ldrb	w8, [x21, #24]
  437b64:	stp	x9, x10, [x29, #-96]
  437b68:	tbnz	w8, #3, 437ba0 <argp_help@@Base+0xaa4>
  437b6c:	ldr	w8, [x25, #8]
  437b70:	cbz	w8, 437ba0 <argp_help@@Base+0xaa4>
  437b74:	mov	x9, x21
  437b78:	b	437b88 <argp_help@@Base+0xa8c>
  437b7c:	subs	w8, w8, #0x1
  437b80:	add	x9, x9, #0x30
  437b84:	b.eq	437ba0 <argp_help@@Base+0xaa4>  // b.none
  437b88:	ldr	x10, [x9]
  437b8c:	cbz	x10, 437b7c <argp_help@@Base+0xa80>
  437b90:	ldrb	w10, [x9, #24]
  437b94:	tbnz	w10, #1, 437b7c <argp_help@@Base+0xa80>
  437b98:	mov	w20, #0x1                   	// #1
  437b9c:	b	437ba4 <argp_help@@Base+0xaa8>
  437ba0:	mov	w20, wzr
  437ba4:	ldp	x9, x8, [x23, #48]
  437ba8:	ldr	x10, [x23, #32]
  437bac:	adrp	x11, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437bb0:	ldrsw	x22, [x11, #4024]
  437bb4:	sub	x8, x8, x9
  437bb8:	cmp	x8, x10
  437bbc:	b.ls	437bc8 <argp_help@@Base+0xacc>  // b.plast
  437bc0:	mov	x0, x23
  437bc4:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  437bc8:	str	x22, [x23, #24]
  437bcc:	ldr	w24, [x25, #8]
  437bd0:	cbz	w24, 438020 <argp_help@@Base+0xf24>
  437bd4:	cbz	w20, 437be8 <argp_help@@Base+0xaec>
  437bd8:	ldur	x8, [x29, #-72]
  437bdc:	cbz	x8, 437bf8 <argp_help@@Base+0xafc>
  437be0:	add	x20, x21, #0x18
  437be4:	b	437c24 <argp_help@@Base+0xb28>
  437be8:	ldur	x8, [x29, #-72]
  437bec:	cbz	x8, 437c00 <argp_help@@Base+0xb04>
  437bf0:	add	x20, x21, #0x18
  437bf4:	b	437d3c <argp_help@@Base+0xc40>
  437bf8:	add	x20, x21, #0x18
  437bfc:	b	437e38 <argp_help@@Base+0xd3c>
  437c00:	add	x20, x21, #0x18
  437c04:	b	437f48 <argp_help@@Base+0xe4c>
  437c08:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437c0c:	add	x1, x1, #0x6f3
  437c10:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  437c14:	add	x19, x19, #0x1
  437c18:	subs	w24, w24, #0x1
  437c1c:	add	x20, x20, #0x30
  437c20:	b.eq	438020 <argp_help@@Base+0xf24>  // b.none
  437c24:	ldr	w22, [x20]
  437c28:	tbnz	w22, #3, 437c18 <argp_help@@Base+0xb1c>
  437c2c:	ldur	w28, [x20, #-16]
  437c30:	sub	w8, w28, #0x1
  437c34:	cmp	w8, #0xfe
  437c38:	b.hi	437c18 <argp_help@@Base+0xb1c>  // b.pmore
  437c3c:	bl	404640 <__ctype_b_loc@plt>
  437c40:	ldr	x8, [x0]
  437c44:	ldrh	w8, [x8, x28, lsl #1]
  437c48:	tbz	w8, #14, 437c18 <argp_help@@Base+0xb1c>
  437c4c:	ldrb	w8, [x19]
  437c50:	cmp	w28, w8
  437c54:	b.ne	437c18 <argp_help@@Base+0xb1c>  // b.any
  437c58:	tbnz	w22, #1, 437c14 <argp_help@@Base+0xb18>
  437c5c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437c60:	ldr	w0, [x8, #4024]
  437c64:	sub	x1, x29, #0x30
  437c68:	bl	43a220 <argp_failure@@Base+0x16b4>
  437c6c:	ldp	x8, x9, [x23, #56]
  437c70:	cmp	x8, x9
  437c74:	b.cc	437c8c <argp_help@@Base+0xb90>  // b.lo, b.ul, b.last
  437c78:	mov	w1, #0x1                   	// #1
  437c7c:	mov	x0, x23
  437c80:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437c84:	cbz	w0, 437c9c <argp_help@@Base+0xba0>
  437c88:	ldr	x8, [x26]
  437c8c:	add	x9, x8, #0x1
  437c90:	str	x9, [x26]
  437c94:	mov	w9, #0x2d                  	// #45
  437c98:	strb	w9, [x8]
  437c9c:	ldp	x8, x9, [x23, #56]
  437ca0:	ldrb	w22, [x19]
  437ca4:	cmp	x8, x9
  437ca8:	b.cc	437cc0 <argp_help@@Base+0xbc4>  // b.lo, b.ul, b.last
  437cac:	mov	w1, #0x1                   	// #1
  437cb0:	mov	x0, x23
  437cb4:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437cb8:	cbz	w0, 437ccc <argp_help@@Base+0xbd0>
  437cbc:	ldr	x8, [x26]
  437cc0:	add	x9, x8, #0x1
  437cc4:	str	x9, [x26]
  437cc8:	strb	w22, [x8]
  437ccc:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437cd0:	ldr	w8, [x8, #4016]
  437cd4:	ldr	x1, [x21, #16]
  437cd8:	cbz	w8, 437d10 <argp_help@@Base+0xc14>
  437cdc:	cbz	x1, 437c14 <argp_help@@Base+0xb18>
  437ce0:	ldur	x8, [x29, #-72]
  437ce4:	ldr	w22, [x21, #24]
  437ce8:	mov	w2, #0x5                   	// #5
  437cec:	ldr	x8, [x8]
  437cf0:	ldr	x0, [x8, #48]
  437cf4:	bl	4048b0 <dcgettext@plt>
  437cf8:	mov	x2, x0
  437cfc:	mov	x0, x23
  437d00:	tbnz	w22, #0, 437c08 <argp_help@@Base+0xb0c>
  437d04:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437d08:	add	x1, x1, #0x273
  437d0c:	b	437c10 <argp_help@@Base+0xb14>
  437d10:	cbz	x1, 437c14 <argp_help@@Base+0xb18>
  437d14:	mov	w8, #0x1                   	// #1
  437d18:	stur	w8, [x29, #-52]
  437d1c:	b	437c14 <argp_help@@Base+0xb18>
  437d20:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437d24:	add	x1, x1, #0x273
  437d28:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  437d2c:	add	x19, x19, #0x1
  437d30:	subs	w24, w24, #0x1
  437d34:	add	x20, x20, #0x30
  437d38:	b.eq	438020 <argp_help@@Base+0xf24>  // b.none
  437d3c:	ldr	w22, [x20]
  437d40:	tbnz	w22, #3, 437d30 <argp_help@@Base+0xc34>
  437d44:	ldur	w28, [x20, #-16]
  437d48:	sub	w8, w28, #0x1
  437d4c:	cmp	w8, #0xfe
  437d50:	b.hi	437d30 <argp_help@@Base+0xc34>  // b.pmore
  437d54:	bl	404640 <__ctype_b_loc@plt>
  437d58:	ldr	x8, [x0]
  437d5c:	ldrh	w8, [x8, x28, lsl #1]
  437d60:	tbz	w8, #14, 437d30 <argp_help@@Base+0xc34>
  437d64:	ldrb	w8, [x19]
  437d68:	cmp	w28, w8
  437d6c:	b.ne	437d30 <argp_help@@Base+0xc34>  // b.any
  437d70:	tbnz	w22, #1, 437d2c <argp_help@@Base+0xc30>
  437d74:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437d78:	ldr	w0, [x8, #4024]
  437d7c:	sub	x1, x29, #0x30
  437d80:	bl	43a220 <argp_failure@@Base+0x16b4>
  437d84:	ldp	x8, x9, [x23, #56]
  437d88:	cmp	x8, x9
  437d8c:	b.cc	437da4 <argp_help@@Base+0xca8>  // b.lo, b.ul, b.last
  437d90:	mov	w1, #0x1                   	// #1
  437d94:	mov	x0, x23
  437d98:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437d9c:	cbz	w0, 437db4 <argp_help@@Base+0xcb8>
  437da0:	ldr	x8, [x26]
  437da4:	add	x9, x8, #0x1
  437da8:	str	x9, [x26]
  437dac:	mov	w9, #0x2d                  	// #45
  437db0:	strb	w9, [x8]
  437db4:	ldp	x8, x9, [x23, #56]
  437db8:	ldrb	w22, [x19]
  437dbc:	cmp	x8, x9
  437dc0:	b.cc	437dd8 <argp_help@@Base+0xcdc>  // b.lo, b.ul, b.last
  437dc4:	mov	w1, #0x1                   	// #1
  437dc8:	mov	x0, x23
  437dcc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437dd0:	cbz	w0, 437de4 <argp_help@@Base+0xce8>
  437dd4:	ldr	x8, [x26]
  437dd8:	add	x9, x8, #0x1
  437ddc:	str	x9, [x26]
  437de0:	strb	w22, [x8]
  437de4:	ldr	x1, [x21, #16]
  437de8:	cbz	x1, 437d2c <argp_help@@Base+0xc30>
  437dec:	ldur	x8, [x29, #-72]
  437df0:	ldr	w22, [x21, #24]
  437df4:	mov	w2, #0x5                   	// #5
  437df8:	ldr	x8, [x8]
  437dfc:	ldr	x0, [x8, #48]
  437e00:	bl	4048b0 <dcgettext@plt>
  437e04:	mov	x2, x0
  437e08:	mov	x0, x23
  437e0c:	tbz	w22, #0, 437d20 <argp_help@@Base+0xc24>
  437e10:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437e14:	add	x1, x1, #0x6f3
  437e18:	b	437d28 <argp_help@@Base+0xc2c>
  437e1c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437e20:	add	x1, x1, #0x6f3
  437e24:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  437e28:	add	x19, x19, #0x1
  437e2c:	subs	w24, w24, #0x1
  437e30:	add	x20, x20, #0x30
  437e34:	b.eq	438020 <argp_help@@Base+0xf24>  // b.none
  437e38:	ldr	w22, [x20]
  437e3c:	tbnz	w22, #3, 437e2c <argp_help@@Base+0xd30>
  437e40:	ldur	w28, [x20, #-16]
  437e44:	sub	w8, w28, #0x1
  437e48:	cmp	w8, #0xfe
  437e4c:	b.hi	437e2c <argp_help@@Base+0xd30>  // b.pmore
  437e50:	bl	404640 <__ctype_b_loc@plt>
  437e54:	ldr	x8, [x0]
  437e58:	ldrh	w8, [x8, x28, lsl #1]
  437e5c:	tbz	w8, #14, 437e2c <argp_help@@Base+0xd30>
  437e60:	ldrb	w8, [x19]
  437e64:	cmp	w28, w8
  437e68:	b.ne	437e2c <argp_help@@Base+0xd30>  // b.any
  437e6c:	tbnz	w22, #1, 437e28 <argp_help@@Base+0xd2c>
  437e70:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437e74:	ldr	w0, [x8, #4024]
  437e78:	sub	x1, x29, #0x30
  437e7c:	bl	43a220 <argp_failure@@Base+0x16b4>
  437e80:	ldp	x8, x9, [x23, #56]
  437e84:	cmp	x8, x9
  437e88:	b.cc	437ea0 <argp_help@@Base+0xda4>  // b.lo, b.ul, b.last
  437e8c:	mov	w1, #0x1                   	// #1
  437e90:	mov	x0, x23
  437e94:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437e98:	cbz	w0, 437eb0 <argp_help@@Base+0xdb4>
  437e9c:	ldr	x8, [x26]
  437ea0:	add	x9, x8, #0x1
  437ea4:	str	x9, [x26]
  437ea8:	mov	w9, #0x2d                  	// #45
  437eac:	strb	w9, [x8]
  437eb0:	ldp	x8, x9, [x23, #56]
  437eb4:	ldrb	w22, [x19]
  437eb8:	cmp	x8, x9
  437ebc:	b.cc	437ed4 <argp_help@@Base+0xdd8>  // b.lo, b.ul, b.last
  437ec0:	mov	w1, #0x1                   	// #1
  437ec4:	mov	x0, x23
  437ec8:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437ecc:	cbz	w0, 437ee0 <argp_help@@Base+0xde4>
  437ed0:	ldr	x8, [x26]
  437ed4:	add	x9, x8, #0x1
  437ed8:	str	x9, [x26]
  437edc:	strb	w22, [x8]
  437ee0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437ee4:	ldr	w8, [x8, #4016]
  437ee8:	ldr	x1, [x21, #16]
  437eec:	cbz	w8, 437f1c <argp_help@@Base+0xe20>
  437ef0:	cbz	x1, 437e28 <argp_help@@Base+0xd2c>
  437ef4:	ldr	w22, [x21, #24]
  437ef8:	mov	w2, #0x5                   	// #5
  437efc:	mov	x0, xzr
  437f00:	bl	4048b0 <dcgettext@plt>
  437f04:	mov	x2, x0
  437f08:	mov	x0, x23
  437f0c:	tbnz	w22, #0, 437e1c <argp_help@@Base+0xd20>
  437f10:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437f14:	add	x1, x1, #0x273
  437f18:	b	437e24 <argp_help@@Base+0xd28>
  437f1c:	cbz	x1, 437e28 <argp_help@@Base+0xd2c>
  437f20:	mov	w8, #0x1                   	// #1
  437f24:	stur	w8, [x29, #-52]
  437f28:	b	437e28 <argp_help@@Base+0xd2c>
  437f2c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  437f30:	add	x1, x1, #0x273
  437f34:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  437f38:	add	x19, x19, #0x1
  437f3c:	subs	w24, w24, #0x1
  437f40:	add	x20, x20, #0x30
  437f44:	b.eq	438020 <argp_help@@Base+0xf24>  // b.none
  437f48:	ldr	w22, [x20]
  437f4c:	tbnz	w22, #3, 437f3c <argp_help@@Base+0xe40>
  437f50:	ldur	w28, [x20, #-16]
  437f54:	sub	w8, w28, #0x1
  437f58:	cmp	w8, #0xfe
  437f5c:	b.hi	437f3c <argp_help@@Base+0xe40>  // b.pmore
  437f60:	bl	404640 <__ctype_b_loc@plt>
  437f64:	ldr	x8, [x0]
  437f68:	ldrh	w8, [x8, x28, lsl #1]
  437f6c:	tbz	w8, #14, 437f3c <argp_help@@Base+0xe40>
  437f70:	ldrb	w8, [x19]
  437f74:	cmp	w28, w8
  437f78:	b.ne	437f3c <argp_help@@Base+0xe40>  // b.any
  437f7c:	tbnz	w22, #1, 437f38 <argp_help@@Base+0xe3c>
  437f80:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  437f84:	ldr	w0, [x8, #4024]
  437f88:	sub	x1, x29, #0x30
  437f8c:	bl	43a220 <argp_failure@@Base+0x16b4>
  437f90:	ldp	x8, x9, [x23, #56]
  437f94:	cmp	x8, x9
  437f98:	b.cc	437fb0 <argp_help@@Base+0xeb4>  // b.lo, b.ul, b.last
  437f9c:	mov	w1, #0x1                   	// #1
  437fa0:	mov	x0, x23
  437fa4:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437fa8:	cbz	w0, 437fc0 <argp_help@@Base+0xec4>
  437fac:	ldr	x8, [x26]
  437fb0:	add	x9, x8, #0x1
  437fb4:	str	x9, [x26]
  437fb8:	mov	w9, #0x2d                  	// #45
  437fbc:	strb	w9, [x8]
  437fc0:	ldp	x8, x9, [x23, #56]
  437fc4:	ldrb	w22, [x19]
  437fc8:	cmp	x8, x9
  437fcc:	b.cc	437fe4 <argp_help@@Base+0xee8>  // b.lo, b.ul, b.last
  437fd0:	mov	w1, #0x1                   	// #1
  437fd4:	mov	x0, x23
  437fd8:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  437fdc:	cbz	w0, 437ff0 <argp_help@@Base+0xef4>
  437fe0:	ldr	x8, [x26]
  437fe4:	add	x9, x8, #0x1
  437fe8:	str	x9, [x26]
  437fec:	strb	w22, [x8]
  437ff0:	ldr	x1, [x21, #16]
  437ff4:	cbz	x1, 437f38 <argp_help@@Base+0xe3c>
  437ff8:	ldr	w22, [x21, #24]
  437ffc:	mov	w2, #0x5                   	// #5
  438000:	mov	x0, xzr
  438004:	bl	4048b0 <dcgettext@plt>
  438008:	mov	x2, x0
  43800c:	mov	x0, x23
  438010:	tbz	w22, #0, 437f2c <argp_help@@Base+0xe30>
  438014:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  438018:	add	x1, x1, #0x6f3
  43801c:	b	437f34 <argp_help@@Base+0xe38>
  438020:	ldrb	w8, [x21, #24]
  438024:	tbnz	w8, #3, 4380ec <argp_help@@Base+0xff0>
  438028:	ldp	x9, x8, [x23, #48]
  43802c:	ldr	x10, [x23, #32]
  438030:	adrp	x11, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  438034:	ldrsw	x19, [x11, #4028]
  438038:	sub	x8, x8, x9
  43803c:	cmp	x8, x10
  438040:	b.ls	43804c <argp_help@@Base+0xf50>  // b.plast
  438044:	mov	x0, x23
  438048:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43804c:	str	x19, [x23, #24]
  438050:	ldr	w19, [x25, #8]
  438054:	cbz	w19, 4382d8 <argp_help@@Base+0x11dc>
  438058:	ldur	x8, [x29, #-72]
  43805c:	cbz	x8, 4381c0 <argp_help@@Base+0x10c4>
  438060:	mov	x20, x21
  438064:	b	438080 <argp_help@@Base+0xf84>
  438068:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  43806c:	add	x1, x1, #0xc15
  438070:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  438074:	subs	w19, w19, #0x1
  438078:	add	x20, x20, #0x30
  43807c:	b.eq	4382d8 <argp_help@@Base+0x11dc>  // b.none
  438080:	ldr	x8, [x20]
  438084:	cbz	x8, 438074 <argp_help@@Base+0xf78>
  438088:	ldrb	w8, [x20, #24]
  43808c:	tbnz	w8, #1, 438074 <argp_help@@Base+0xf78>
  438090:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  438094:	ldr	w0, [x8, #4028]
  438098:	sub	x1, x29, #0x30
  43809c:	bl	43a220 <argp_failure@@Base+0x16b4>
  4380a0:	ldr	x2, [x20]
  4380a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4380a8:	mov	x0, x23
  4380ac:	add	x1, x1, #0x6f8
  4380b0:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  4380b4:	ldr	x1, [x21, #16]
  4380b8:	cbz	x1, 438074 <argp_help@@Base+0xf78>
  4380bc:	ldur	x8, [x29, #-72]
  4380c0:	ldr	w22, [x21, #24]
  4380c4:	mov	w2, #0x5                   	// #5
  4380c8:	ldr	x8, [x8]
  4380cc:	ldr	x0, [x8, #48]
  4380d0:	bl	4048b0 <dcgettext@plt>
  4380d4:	mov	x2, x0
  4380d8:	mov	x0, x23
  4380dc:	tbz	w22, #0, 438068 <argp_help@@Base+0xf6c>
  4380e0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4380e4:	add	x1, x1, #0x6fd
  4380e8:	b	438070 <argp_help@@Base+0xf74>
  4380ec:	ldp	x9, x8, [x23, #48]
  4380f0:	ldr	x10, [x23, #32]
  4380f4:	adrp	x11, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4380f8:	ldrsw	x19, [x11, #4032]
  4380fc:	sub	x8, x8, x9
  438100:	cmp	x8, x10
  438104:	b.ls	438110 <argp_help@@Base+0x1014>  // b.plast
  438108:	mov	x0, x23
  43810c:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  438110:	str	x19, [x23, #24]
  438114:	ldr	w20, [x25, #8]
  438118:	cbz	w20, 4382d8 <argp_help@@Base+0x11dc>
  43811c:	ldur	x8, [x29, #-72]
  438120:	cbz	x8, 438244 <argp_help@@Base+0x1148>
  438124:	mov	x22, x21
  438128:	b	438150 <argp_help@@Base+0x1054>
  43812c:	mov	x1, x19
  438130:	mov	x2, x24
  438134:	bl	403e80 <memcpy@plt>
  438138:	ldr	x8, [x26]
  43813c:	add	x8, x8, x24
  438140:	str	x8, [x26]
  438144:	subs	w20, w20, #0x1
  438148:	add	x22, x22, #0x30
  43814c:	b.eq	4382d8 <argp_help@@Base+0x11dc>  // b.none
  438150:	ldr	x8, [x22]
  438154:	cbz	x8, 438144 <argp_help@@Base+0x1048>
  438158:	ldrb	w8, [x22, #24]
  43815c:	tbnz	w8, #1, 438144 <argp_help@@Base+0x1048>
  438160:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  438164:	ldr	w0, [x8, #4032]
  438168:	sub	x1, x29, #0x30
  43816c:	bl	43a220 <argp_failure@@Base+0x16b4>
  438170:	ldur	x8, [x29, #-72]
  438174:	ldr	x1, [x22]
  438178:	mov	w2, #0x5                   	// #5
  43817c:	ldr	x8, [x8]
  438180:	ldr	x0, [x8, #48]
  438184:	bl	4048b0 <dcgettext@plt>
  438188:	mov	x19, x0
  43818c:	bl	403f00 <strlen@plt>
  438190:	cbz	x0, 438144 <argp_help@@Base+0x1048>
  438194:	mov	x24, x0
  438198:	ldp	x0, x8, [x23, #56]
  43819c:	add	x9, x0, x24
  4381a0:	cmp	x9, x8
  4381a4:	b.ls	43812c <argp_help@@Base+0x1030>  // b.plast
  4381a8:	mov	x0, x23
  4381ac:	mov	x1, x24
  4381b0:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  4381b4:	cbz	w0, 438144 <argp_help@@Base+0x1048>
  4381b8:	ldr	x0, [x26]
  4381bc:	b	43812c <argp_help@@Base+0x1030>
  4381c0:	mov	x20, x21
  4381c4:	b	4381e0 <argp_help@@Base+0x10e4>
  4381c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4381cc:	add	x1, x1, #0xc15
  4381d0:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  4381d4:	subs	w19, w19, #0x1
  4381d8:	add	x20, x20, #0x30
  4381dc:	b.eq	4382d8 <argp_help@@Base+0x11dc>  // b.none
  4381e0:	ldr	x8, [x20]
  4381e4:	cbz	x8, 4381d4 <argp_help@@Base+0x10d8>
  4381e8:	ldrb	w8, [x20, #24]
  4381ec:	tbnz	w8, #1, 4381d4 <argp_help@@Base+0x10d8>
  4381f0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4381f4:	ldr	w0, [x8, #4028]
  4381f8:	sub	x1, x29, #0x30
  4381fc:	bl	43a220 <argp_failure@@Base+0x16b4>
  438200:	ldr	x2, [x20]
  438204:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  438208:	mov	x0, x23
  43820c:	add	x1, x1, #0x6f8
  438210:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  438214:	ldr	x1, [x21, #16]
  438218:	cbz	x1, 4381d4 <argp_help@@Base+0x10d8>
  43821c:	ldr	w22, [x21, #24]
  438220:	mov	w2, #0x5                   	// #5
  438224:	mov	x0, xzr
  438228:	bl	4048b0 <dcgettext@plt>
  43822c:	mov	x2, x0
  438230:	mov	x0, x23
  438234:	tbz	w22, #0, 4381c8 <argp_help@@Base+0x10cc>
  438238:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43823c:	add	x1, x1, #0x6fd
  438240:	b	4381d0 <argp_help@@Base+0x10d4>
  438244:	mov	x22, x21
  438248:	b	438274 <argp_help@@Base+0x1178>
  43824c:	ldr	x0, [x26]
  438250:	mov	x1, x19
  438254:	mov	x2, x24
  438258:	bl	403e80 <memcpy@plt>
  43825c:	ldr	x8, [x26]
  438260:	add	x8, x8, x24
  438264:	str	x8, [x26]
  438268:	subs	w20, w20, #0x1
  43826c:	add	x22, x22, #0x30
  438270:	b.eq	4382d8 <argp_help@@Base+0x11dc>  // b.none
  438274:	ldr	x8, [x22]
  438278:	cbz	x8, 438268 <argp_help@@Base+0x116c>
  43827c:	ldrb	w8, [x22, #24]
  438280:	tbnz	w8, #1, 438268 <argp_help@@Base+0x116c>
  438284:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  438288:	ldr	w0, [x8, #4032]
  43828c:	sub	x1, x29, #0x30
  438290:	bl	43a220 <argp_failure@@Base+0x16b4>
  438294:	ldr	x1, [x22]
  438298:	mov	w2, #0x5                   	// #5
  43829c:	mov	x0, xzr
  4382a0:	bl	4048b0 <dcgettext@plt>
  4382a4:	mov	x19, x0
  4382a8:	bl	403f00 <strlen@plt>
  4382ac:	cbz	x0, 438268 <argp_help@@Base+0x116c>
  4382b0:	mov	x24, x0
  4382b4:	ldp	x0, x8, [x23, #56]
  4382b8:	add	x9, x0, x24
  4382bc:	cmp	x9, x8
  4382c0:	b.ls	438250 <argp_help@@Base+0x1154>  // b.plast
  4382c4:	mov	x0, x23
  4382c8:	mov	x1, x24
  4382cc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  4382d0:	cbnz	w0, 43824c <argp_help@@Base+0x1150>
  4382d4:	b	438268 <argp_help@@Base+0x116c>
  4382d8:	ldp	x9, x8, [x23, #48]
  4382dc:	ldr	x10, [x23, #32]
  4382e0:	sub	x8, x8, x9
  4382e4:	cmp	x8, x10
  4382e8:	b.ls	4382f4 <argp_help@@Base+0x11f8>  // b.plast
  4382ec:	mov	x0, x23
  4382f0:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4382f4:	str	xzr, [x23, #8]
  4382f8:	ldur	w8, [x29, #-24]
  4382fc:	cbz	w8, 438344 <argp_help@@Base+0x1248>
  438300:	ldrb	w8, [x21, #24]
  438304:	tbnz	w8, #3, 438328 <argp_help@@Base+0x122c>
  438308:	ldr	w19, [x21, #8]
  43830c:	sub	w8, w19, #0x1
  438310:	cmp	w8, #0xfe
  438314:	b.hi	438328 <argp_help@@Base+0x122c>  // b.pmore
  438318:	bl	404640 <__ctype_b_loc@plt>
  43831c:	ldr	x8, [x0]
  438320:	ldrh	w8, [x8, x19, lsl #1]
  438324:	tbnz	w8, #14, 438630 <argp_help@@Base+0x1534>
  438328:	ldr	x8, [x21]
  43832c:	cbnz	x8, 438630 <argp_help@@Base+0x1534>
  438330:	ldr	x0, [x21, #32]
  438334:	ldr	x1, [x25, #40]
  438338:	sub	x2, x29, #0x30
  43833c:	bl	43a3f4 <argp_failure@@Base+0x1888>
  438340:	b	43862c <argp_help@@Base+0x1530>
  438344:	ldr	x1, [x21, #32]
  438348:	cbz	x1, 438360 <argp_help@@Base+0x1264>
  43834c:	ldur	x8, [x29, #-72]
  438350:	cbz	x8, 438374 <argp_help@@Base+0x1278>
  438354:	ldr	x8, [x8]
  438358:	ldr	x0, [x8, #48]
  43835c:	b	438378 <argp_help@@Base+0x127c>
  438360:	mov	x28, xzr
  438364:	ldr	x24, [x25, #40]
  438368:	mov	x19, x28
  43836c:	cbnz	x24, 438390 <argp_help@@Base+0x1294>
  438370:	b	4383c4 <argp_help@@Base+0x12c8>
  438374:	mov	x0, xzr
  438378:	mov	w2, #0x5                   	// #5
  43837c:	bl	4048b0 <dcgettext@plt>
  438380:	mov	x28, x0
  438384:	ldr	x24, [x25, #40]
  438388:	mov	x19, x28
  43838c:	cbz	x24, 4383c4 <argp_help@@Base+0x12c8>
  438390:	ldr	x8, [x24, #40]
  438394:	mov	x19, x28
  438398:	cbz	x8, 4383c4 <argp_help@@Base+0x12c8>
  43839c:	ldur	x1, [x29, #-72]
  4383a0:	ldr	w19, [x21, #8]
  4383a4:	mov	x0, x24
  4383a8:	bl	43b20c <argp_parse@@Base+0xb60>
  4383ac:	ldr	x8, [x24, #40]
  4383b0:	mov	x2, x0
  4383b4:	mov	w0, w19
  4383b8:	mov	x1, x28
  4383bc:	blr	x8
  4383c0:	mov	x19, x0
  4383c4:	cbz	x19, 4385d8 <argp_help@@Base+0x14dc>
  4383c8:	ldrb	w8, [x19]
  4383cc:	cbz	w8, 4385c8 <argp_help@@Base+0x14cc>
  4383d0:	ldp	x10, x9, [x23, #48]
  4383d4:	ldr	x8, [x23, #32]
  4383d8:	sub	x9, x9, x10
  4383dc:	cmp	x9, x8
  4383e0:	b.ls	4383f8 <argp_help@@Base+0x12fc>  // b.plast
  4383e4:	mov	x0, x23
  4383e8:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4383ec:	ldp	x10, x9, [x23, #48]
  4383f0:	ldr	x8, [x23, #32]
  4383f4:	sub	x9, x9, x10
  4383f8:	adrp	x11, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4383fc:	ldr	x10, [x23, #40]
  438400:	ldr	w20, [x11, #4036]
  438404:	cmp	x10, #0x0
  438408:	sxtw	x24, w20
  43840c:	csel	w21, w10, wzr, gt
  438410:	cmp	x9, x8
  438414:	mov	x22, x24
  438418:	b.ls	43848c <argp_help@@Base+0x1390>  // b.plast
  43841c:	mov	x0, x23
  438420:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  438424:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  438428:	ldr	w20, [x8, #4036]
  43842c:	ldp	x10, x9, [x23, #48]
  438430:	ldr	x8, [x23, #32]
  438434:	sxtw	x22, w20
  438438:	sub	x9, x9, x10
  43843c:	cmp	x9, x8
  438440:	str	x24, [x23, #8]
  438444:	b.hi	438498 <argp_help@@Base+0x139c>  // b.pmore
  438448:	add	w8, w20, #0x3
  43844c:	cmp	w8, w21
  438450:	str	x22, [x23, #24]
  438454:	b.cs	4384b8 <argp_help@@Base+0x13bc>  // b.hs, b.nlast
  438458:	ldp	x8, x9, [x23, #56]
  43845c:	cmp	x8, x9
  438460:	b.cc	438478 <argp_help@@Base+0x137c>  // b.lo, b.ul, b.last
  438464:	mov	w1, #0x1                   	// #1
  438468:	mov	x0, x23
  43846c:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  438470:	cbz	w0, 43857c <argp_help@@Base+0x1480>
  438474:	ldr	x8, [x26]
  438478:	add	x9, x8, #0x1
  43847c:	str	x9, [x26]
  438480:	mov	w9, #0xa                   	// #10
  438484:	strb	w9, [x8]
  438488:	b	43857c <argp_help@@Base+0x1480>
  43848c:	cmp	x9, x8
  438490:	str	x24, [x23, #8]
  438494:	b.ls	438448 <argp_help@@Base+0x134c>  // b.plast
  438498:	mov	x0, x23
  43849c:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4384a0:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  4384a4:	ldr	w20, [x8, #4036]
  4384a8:	add	w8, w20, #0x3
  4384ac:	cmp	w8, w21
  4384b0:	str	x22, [x23, #24]
  4384b4:	b.cc	438458 <argp_help@@Base+0x135c>  // b.lo, b.ul, b.last
  4384b8:	cmp	w20, w21
  4384bc:	b.ls	43853c <argp_help@@Base+0x1440>  // b.plast
  4384c0:	ldp	x9, x8, [x23, #48]
  4384c4:	ldr	x10, [x23, #32]
  4384c8:	sub	x8, x8, x9
  4384cc:	cmp	x8, x10
  4384d0:	b.ls	4384dc <argp_help@@Base+0x13e0>  // b.plast
  4384d4:	mov	x0, x23
  4384d8:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4384dc:	ldr	x8, [x23, #40]
  4384e0:	cmp	x8, #0x0
  4384e4:	csel	w8, w8, wzr, gt
  4384e8:	sub	w8, w20, w8
  4384ec:	cmp	w8, #0x1
  4384f0:	b.lt	43857c <argp_help@@Base+0x1480>  // b.tstop
  4384f4:	add	w20, w8, #0x1
  4384f8:	b	43851c <argp_help@@Base+0x1420>
  4384fc:	ldr	x8, [x26]
  438500:	add	x9, x8, #0x1
  438504:	str	x9, [x26]
  438508:	mov	w9, #0x20                  	// #32
  43850c:	strb	w9, [x8]
  438510:	sub	w20, w20, #0x1
  438514:	cmp	w20, #0x1
  438518:	b.le	43857c <argp_help@@Base+0x1480>
  43851c:	ldp	x8, x9, [x23, #56]
  438520:	cmp	x8, x9
  438524:	b.cc	438500 <argp_help@@Base+0x1404>  // b.lo, b.ul, b.last
  438528:	mov	w1, #0x1                   	// #1
  43852c:	mov	x0, x23
  438530:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  438534:	cbnz	w0, 4384fc <argp_help@@Base+0x1400>
  438538:	b	438510 <argp_help@@Base+0x1414>
  43853c:	ldp	x8, x9, [x23, #56]
  438540:	add	x10, x8, #0x3
  438544:	cmp	x10, x9
  438548:	b.ls	438560 <argp_help@@Base+0x1464>  // b.plast
  43854c:	mov	w1, #0x3                   	// #3
  438550:	mov	x0, x23
  438554:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  438558:	cbz	w0, 43857c <argp_help@@Base+0x1480>
  43855c:	ldr	x8, [x26]
  438560:	mov	w9, #0x20                  	// #32
  438564:	strb	w9, [x8, #2]
  438568:	mov	w9, #0x2020                	// #8224
  43856c:	strh	w9, [x8]
  438570:	ldr	x8, [x26]
  438574:	add	x8, x8, #0x3
  438578:	str	x8, [x26]
  43857c:	mov	x0, x19
  438580:	bl	403f00 <strlen@plt>
  438584:	cbz	x0, 4385c8 <argp_help@@Base+0x14cc>
  438588:	mov	x24, x0
  43858c:	ldp	x0, x8, [x23, #56]
  438590:	add	x9, x0, x24
  438594:	cmp	x9, x8
  438598:	b.ls	4385b0 <argp_help@@Base+0x14b4>  // b.plast
  43859c:	mov	x0, x23
  4385a0:	mov	x1, x24
  4385a4:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  4385a8:	cbz	w0, 4385c8 <argp_help@@Base+0x14cc>
  4385ac:	ldr	x0, [x26]
  4385b0:	mov	x1, x19
  4385b4:	mov	x2, x24
  4385b8:	bl	403e80 <memcpy@plt>
  4385bc:	ldr	x8, [x26]
  4385c0:	add	x8, x8, x24
  4385c4:	str	x8, [x26]
  4385c8:	cmp	x19, x28
  4385cc:	b.eq	4385d8 <argp_help@@Base+0x14dc>  // b.none
  4385d0:	mov	x0, x19
  4385d4:	bl	4046b0 <free@plt>
  4385d8:	ldp	x9, x8, [x23, #48]
  4385dc:	ldr	x10, [x23, #32]
  4385e0:	sub	x9, x8, x9
  4385e4:	cmp	x9, x10
  4385e8:	b.ls	4385f8 <argp_help@@Base+0x14fc>  // b.plast
  4385ec:	mov	x0, x23
  4385f0:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4385f4:	ldr	x8, [x23, #56]
  4385f8:	ldr	x9, [x23, #64]
  4385fc:	str	xzr, [x23, #8]
  438600:	cmp	x8, x9
  438604:	b.cc	43861c <argp_help@@Base+0x1520>  // b.lo, b.ul, b.last
  438608:	mov	w1, #0x1                   	// #1
  43860c:	mov	x0, x23
  438610:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  438614:	cbz	w0, 43862c <argp_help@@Base+0x1530>
  438618:	ldr	x8, [x26]
  43861c:	add	x9, x8, #0x1
  438620:	str	x9, [x26]
  438624:	mov	w9, #0xa                   	// #10
  438628:	strb	w9, [x8]
  43862c:	stur	x25, [x29, #-64]
  438630:	ldp	x10, x9, [x23, #48]
  438634:	ldr	x8, [x23, #32]
  438638:	sub	x9, x9, x10
  43863c:	ldur	x10, [x29, #-88]
  438640:	cmp	x9, x8
  438644:	sxtw	x19, w10
  438648:	b.ls	438660 <argp_help@@Base+0x1564>  // b.plast
  43864c:	mov	x0, x23
  438650:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  438654:	ldp	x10, x9, [x23, #48]
  438658:	ldr	x8, [x23, #32]
  43865c:	sub	x9, x9, x10
  438660:	ldur	x10, [x29, #-96]
  438664:	str	x19, [x23, #8]
  438668:	cmp	x9, x8
  43866c:	sxtw	x19, w10
  438670:	b.ls	437b04 <argp_help@@Base+0xa08>  // b.plast
  438674:	mov	x0, x23
  438678:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43867c:	b	437b04 <argp_help@@Base+0xa08>
  438680:	ldur	w8, [x29, #-52]
  438684:	cbz	w8, 438830 <argp_help@@Base+0x1734>
  438688:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43868c:	ldr	w8, [x8, #4020]
  438690:	cbz	w8, 438830 <argp_help@@Base+0x1734>
  438694:	ldur	x19, [x29, #-72]
  438698:	cbz	x19, 43874c <argp_help@@Base+0x1650>
  43869c:	ldr	x8, [x19]
  4386a0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4386a4:	add	x1, x1, #0x67f
  4386a8:	mov	w2, #0x5                   	// #5
  4386ac:	ldr	x0, [x8, #48]
  4386b0:	bl	4048b0 <dcgettext@plt>
  4386b4:	ldr	x24, [x19]
  4386b8:	mov	x19, x0
  4386bc:	cbz	x24, 438744 <argp_help@@Base+0x1648>
  4386c0:	ldr	x8, [x24, #40]
  4386c4:	cbz	x8, 438744 <argp_help@@Base+0x1648>
  4386c8:	ldur	x1, [x29, #-72]
  4386cc:	mov	x0, x24
  4386d0:	bl	43b20c <argp_parse@@Base+0xb60>
  4386d4:	ldr	x8, [x24, #40]
  4386d8:	mov	x2, x0
  4386dc:	mov	w0, #0x5                   	// #5
  4386e0:	movk	w0, #0x200, lsl #16
  4386e4:	mov	x1, x19
  4386e8:	blr	x8
  4386ec:	b	438764 <argp_help@@Base+0x1668>
  4386f0:	mov	x9, x26
  4386f4:	add	x9, x9, #0x30
  4386f8:	str	w8, [x9], #56
  4386fc:	add	w8, w8, #0x1
  438700:	cmp	w19, w8
  438704:	b.ne	4386f8 <argp_help@@Base+0x15fc>  // b.any
  438708:	adrp	x3, 439000 <argp_failure@@Base+0x494>
  43870c:	add	x3, x3, #0xe20
  438710:	mov	w2, #0x38                  	// #56
  438714:	mov	x0, x26
  438718:	mov	x1, x19
  43871c:	bl	4040b0 <qsort@plt>
  438720:	ldur	x21, [x29, #-104]
  438724:	ldur	w20, [x29, #-108]
  438728:	ldur	x22, [x29, #-72]
  43872c:	mov	x26, x28
  438730:	tst	w20, #0x3
  438734:	b.ne	437824 <argp_help@@Base+0x728>  // b.any
  438738:	mov	w19, wzr
  43873c:	tbnz	w20, #4, 437a48 <argp_help@@Base+0x94c>
  438740:	b	437a68 <argp_help@@Base+0x96c>
  438744:	mov	x25, x19
  438748:	b	438768 <argp_help@@Base+0x166c>
  43874c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  438750:	add	x1, x1, #0x67f
  438754:	mov	w2, #0x5                   	// #5
  438758:	mov	x0, xzr
  43875c:	bl	4048b0 <dcgettext@plt>
  438760:	mov	x19, x0
  438764:	mov	x25, x0
  438768:	cbz	x25, 438830 <argp_help@@Base+0x1734>
  43876c:	ldrb	w8, [x25]
  438770:	cbz	w8, 438820 <argp_help@@Base+0x1724>
  438774:	ldp	x8, x9, [x23, #56]
  438778:	cmp	x8, x9
  43877c:	b.cc	438794 <argp_help@@Base+0x1698>  // b.lo, b.ul, b.last
  438780:	mov	w1, #0x1                   	// #1
  438784:	mov	x0, x23
  438788:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43878c:	cbz	w0, 4387a4 <argp_help@@Base+0x16a8>
  438790:	ldr	x8, [x26]
  438794:	add	x9, x8, #0x1
  438798:	mov	w10, #0xa                   	// #10
  43879c:	str	x9, [x26]
  4387a0:	strb	w10, [x8]
  4387a4:	mov	x0, x25
  4387a8:	bl	403f00 <strlen@plt>
  4387ac:	cbz	x0, 4387f0 <argp_help@@Base+0x16f4>
  4387b0:	mov	x24, x0
  4387b4:	ldp	x0, x8, [x23, #56]
  4387b8:	add	x9, x0, x24
  4387bc:	cmp	x9, x8
  4387c0:	b.ls	4387d8 <argp_help@@Base+0x16dc>  // b.plast
  4387c4:	mov	x0, x23
  4387c8:	mov	x1, x24
  4387cc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  4387d0:	cbz	w0, 4387f0 <argp_help@@Base+0x16f4>
  4387d4:	ldr	x0, [x26]
  4387d8:	mov	x1, x25
  4387dc:	mov	x2, x24
  4387e0:	bl	403e80 <memcpy@plt>
  4387e4:	ldr	x8, [x26]
  4387e8:	add	x8, x8, x24
  4387ec:	str	x8, [x26]
  4387f0:	ldp	x8, x9, [x23, #56]
  4387f4:	cmp	x8, x9
  4387f8:	b.cc	438810 <argp_help@@Base+0x1714>  // b.lo, b.ul, b.last
  4387fc:	mov	w1, #0x1                   	// #1
  438800:	mov	x0, x23
  438804:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  438808:	cbz	w0, 438820 <argp_help@@Base+0x1724>
  43880c:	ldr	x8, [x26]
  438810:	add	x9, x8, #0x1
  438814:	mov	w10, #0xa                   	// #10
  438818:	str	x9, [x26]
  43881c:	strb	w10, [x8]
  438820:	cmp	x25, x19
  438824:	b.eq	438830 <argp_help@@Base+0x1734>  // b.none
  438828:	mov	x0, x25
  43882c:	bl	4046b0 <free@plt>
  438830:	ldur	x21, [x29, #-104]
  438834:	ldur	w20, [x29, #-108]
  438838:	ldur	x22, [x29, #-72]
  43883c:	ldur	x26, [x29, #-120]
  438840:	mov	w19, #0x1                   	// #1
  438844:	tbz	w20, #5, 438868 <argp_help@@Base+0x176c>
  438848:	ldur	x0, [x29, #-80]
  43884c:	mov	w2, #0x1                   	// #1
  438850:	mov	x1, x22
  438854:	mov	w3, w19
  438858:	mov	w4, wzr
  43885c:	mov	x5, x23
  438860:	bl	4399fc <argp_failure@@Base+0xe90>
  438864:	orr	w19, w0, w19
  438868:	tbz	w20, #6, 4388d4 <argp_help@@Base+0x17d8>
  43886c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  438870:	ldr	x8, [x20, #4040]
  438874:	cbz	x8, 4388d4 <argp_help@@Base+0x17d8>
  438878:	cbz	w19, 4388ac <argp_help@@Base+0x17b0>
  43887c:	ldp	x8, x9, [x23, #56]
  438880:	cmp	x8, x9
  438884:	b.cc	43889c <argp_help@@Base+0x17a0>  // b.lo, b.ul, b.last
  438888:	mov	w1, #0x1                   	// #1
  43888c:	mov	x0, x23
  438890:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  438894:	cbz	w0, 4388ac <argp_help@@Base+0x17b0>
  438898:	ldr	x8, [x23, #56]
  43889c:	add	x9, x8, #0x1
  4388a0:	mov	w10, #0xa                   	// #10
  4388a4:	str	x9, [x23, #56]
  4388a8:	strb	w10, [x8]
  4388ac:	ldur	x8, [x29, #-80]
  4388b0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4388b4:	add	x1, x1, #0x4ac
  4388b8:	mov	w2, #0x5                   	// #5
  4388bc:	ldr	x0, [x8, #48]
  4388c0:	bl	4048b0 <dcgettext@plt>
  4388c4:	ldr	x2, [x20, #4040]
  4388c8:	mov	x1, x0
  4388cc:	mov	x0, x23
  4388d0:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  4388d4:	mov	x0, x21
  4388d8:	bl	404230 <funlockfile@plt>
  4388dc:	cbz	x26, 438918 <argp_help@@Base+0x181c>
  4388e0:	ldr	x0, [x26, #24]
  4388e4:	cbz	x0, 4388f8 <argp_help@@Base+0x17fc>
  4388e8:	ldr	x19, [x0, #40]
  4388ec:	bl	4046b0 <free@plt>
  4388f0:	mov	x0, x19
  4388f4:	cbnz	x19, 4388e8 <argp_help@@Base+0x17ec>
  4388f8:	ldr	w8, [x26, #8]
  4388fc:	cbz	w8, 438910 <argp_help@@Base+0x1814>
  438900:	ldr	x0, [x26]
  438904:	bl	4046b0 <free@plt>
  438908:	ldr	x0, [x26, #16]
  43890c:	bl	4046b0 <free@plt>
  438910:	mov	x0, x26
  438914:	bl	4046b0 <free@plt>
  438918:	mov	x0, x23
  43891c:	bl	45c338 <_obstack_memory_used@@Base+0x11174>
  438920:	mov	sp, x29
  438924:	ldp	x20, x19, [sp, #80]
  438928:	ldp	x22, x21, [sp, #64]
  43892c:	ldp	x24, x23, [sp, #48]
  438930:	ldp	x26, x25, [sp, #32]
  438934:	ldp	x28, x27, [sp, #16]
  438938:	ldp	x29, x30, [sp], #96
  43893c:	ret
  438940:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  438944:	add	x19, x19, #0x777
  438948:	b	43765c <argp_help@@Base+0x560>

000000000043894c <argp_state_help@@Base>:
  43894c:	stp	x29, x30, [sp, #-32]!
  438950:	stp	x20, x19, [sp, #16]
  438954:	mov	w19, w2
  438958:	mov	x2, x1
  43895c:	mov	x29, sp
  438960:	cbz	x0, 4389a0 <argp_state_help@@Base+0x54>
  438964:	cbz	x2, 4389c4 <argp_state_help@@Base+0x78>
  438968:	ldr	w8, [x0, #28]
  43896c:	mov	x20, x0
  438970:	tbnz	w8, #1, 4389c4 <argp_state_help@@Base+0x78>
  438974:	ldr	x0, [x20]
  438978:	ldr	x4, [x20, #64]
  43897c:	lsl	w8, w8, #1
  438980:	and	w8, w8, #0x80
  438984:	orr	w19, w8, w19
  438988:	mov	x1, x20
  43898c:	mov	w3, w19
  438990:	bl	437110 <argp_help@@Base+0x14>
  438994:	ldrb	w8, [x20, #28]
  438998:	tbz	w8, #5, 4389bc <argp_state_help@@Base+0x70>
  43899c:	b	4389c4 <argp_state_help@@Base+0x78>
  4389a0:	cbz	x2, 4389c4 <argp_state_help@@Base+0x78>
  4389a4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4389a8:	ldr	x4, [x8, #120]
  4389ac:	mov	x0, xzr
  4389b0:	mov	x1, xzr
  4389b4:	mov	w3, w19
  4389b8:	bl	437110 <argp_help@@Base+0x14>
  4389bc:	tbnz	w19, #8, 4389d0 <argp_state_help@@Base+0x84>
  4389c0:	tbnz	w19, #9, 4389dc <argp_state_help@@Base+0x90>
  4389c4:	ldp	x20, x19, [sp, #16]
  4389c8:	ldp	x29, x30, [sp], #32
  4389cc:	ret
  4389d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4389d4:	ldr	w0, [x8, #64]
  4389d8:	bl	403f30 <exit@plt>
  4389dc:	mov	w0, wzr
  4389e0:	bl	403f30 <exit@plt>

00000000004389e4 <argp_error@@Base>:
  4389e4:	sub	sp, sp, #0x120
  4389e8:	stp	x29, x30, [sp, #240]
  4389ec:	stp	x20, x19, [sp, #272]
  4389f0:	add	x29, sp, #0xf0
  4389f4:	mov	x20, x1
  4389f8:	mov	x19, x0
  4389fc:	stp	x28, x21, [sp, #256]
  438a00:	stp	x2, x3, [x29, #-112]
  438a04:	stp	x4, x5, [x29, #-96]
  438a08:	stp	x6, x7, [x29, #-80]
  438a0c:	stp	q1, q2, [sp, #16]
  438a10:	stp	q3, q4, [sp, #48]
  438a14:	str	q0, [sp]
  438a18:	stp	q5, q6, [sp, #80]
  438a1c:	str	q7, [sp, #112]
  438a20:	cbz	x0, 438a3c <argp_error@@Base+0x58>
  438a24:	ldrb	w8, [x19, #28]
  438a28:	tbnz	w8, #1, 438b20 <argp_error@@Base+0x13c>
  438a2c:	add	x8, x19, #0x48
  438a30:	ldr	x21, [x8]
  438a34:	cbnz	x21, 438a4c <argp_error@@Base+0x68>
  438a38:	b	438b20 <argp_error@@Base+0x13c>
  438a3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  438a40:	add	x8, x8, #0x58
  438a44:	ldr	x21, [x8]
  438a48:	cbz	x21, 438b20 <argp_error@@Base+0x13c>
  438a4c:	mov	x0, x21
  438a50:	bl	403fa0 <flockfile@plt>
  438a54:	mov	x8, #0xffffffffffffffd0    	// #-48
  438a58:	mov	x9, sp
  438a5c:	sub	x10, x29, #0x70
  438a60:	adrp	x13, 480000 <_obstack_memory_used@@Base+0x34e3c>
  438a64:	movk	x8, #0xff80, lsl #32
  438a68:	add	x11, x29, #0x30
  438a6c:	add	x12, x19, #0x40
  438a70:	add	x13, x13, #0x78
  438a74:	cmp	x19, #0x0
  438a78:	add	x9, x9, #0x80
  438a7c:	add	x10, x10, #0x30
  438a80:	stp	x9, x8, [x29, #-48]
  438a84:	stp	x11, x10, [x29, #-64]
  438a88:	csel	x8, x12, x13, ne  // ne = any
  438a8c:	ldr	x0, [x8]
  438a90:	mov	x1, x21
  438a94:	bl	4048d0 <fputs_unlocked@plt>
  438a98:	ldp	x8, x9, [x21, #40]
  438a9c:	cmp	x8, x9
  438aa0:	b.cs	438b34 <argp_error@@Base+0x150>  // b.hs, b.nlast
  438aa4:	add	x9, x8, #0x1
  438aa8:	mov	w10, #0x3a                  	// #58
  438aac:	str	x9, [x21, #40]
  438ab0:	strb	w10, [x8]
  438ab4:	ldp	x8, x9, [x21, #40]
  438ab8:	cmp	x8, x9
  438abc:	b.cs	438b4c <argp_error@@Base+0x168>  // b.hs, b.nlast
  438ac0:	add	x9, x8, #0x1
  438ac4:	mov	w10, #0x20                  	// #32
  438ac8:	str	x9, [x21, #40]
  438acc:	strb	w10, [x8]
  438ad0:	ldp	q0, q1, [x29, #-64]
  438ad4:	sub	x3, x29, #0x20
  438ad8:	mov	w1, #0x1                   	// #1
  438adc:	mov	x0, x21
  438ae0:	mov	x2, x20
  438ae4:	stp	q0, q1, [x29, #-32]
  438ae8:	bl	4043b0 <__vfprintf_chk@plt>
  438aec:	ldp	x8, x9, [x21, #40]
  438af0:	cmp	x8, x9
  438af4:	b.cs	438b5c <argp_error@@Base+0x178>  // b.hs, b.nlast
  438af8:	add	x9, x8, #0x1
  438afc:	mov	w10, #0xa                   	// #10
  438b00:	str	x9, [x21, #40]
  438b04:	strb	w10, [x8]
  438b08:	mov	w2, #0x104                 	// #260
  438b0c:	mov	x0, x19
  438b10:	mov	x1, x21
  438b14:	bl	43894c <argp_state_help@@Base>
  438b18:	mov	x0, x21
  438b1c:	bl	404230 <funlockfile@plt>
  438b20:	ldp	x20, x19, [sp, #272]
  438b24:	ldp	x28, x21, [sp, #256]
  438b28:	ldp	x29, x30, [sp, #240]
  438b2c:	add	sp, sp, #0x120
  438b30:	ret
  438b34:	mov	w1, #0x3a                  	// #58
  438b38:	mov	x0, x21
  438b3c:	bl	404590 <__overflow@plt>
  438b40:	ldp	x8, x9, [x21, #40]
  438b44:	cmp	x8, x9
  438b48:	b.cc	438ac0 <argp_error@@Base+0xdc>  // b.lo, b.ul, b.last
  438b4c:	mov	w1, #0x20                  	// #32
  438b50:	mov	x0, x21
  438b54:	bl	404590 <__overflow@plt>
  438b58:	b	438ad0 <argp_error@@Base+0xec>
  438b5c:	mov	w1, #0xa                   	// #10
  438b60:	mov	x0, x21
  438b64:	bl	404590 <__overflow@plt>
  438b68:	b	438b08 <argp_error@@Base+0x124>

0000000000438b6c <argp_failure@@Base>:
  438b6c:	sub	sp, sp, #0x1d0
  438b70:	stp	x28, x23, [sp, #416]
  438b74:	stp	x22, x21, [sp, #432]
  438b78:	stp	x20, x19, [sp, #448]
  438b7c:	mov	x23, x3
  438b80:	mov	w22, w2
  438b84:	mov	w19, w1
  438b88:	mov	x20, x0
  438b8c:	stp	x29, x30, [sp, #400]
  438b90:	add	x29, sp, #0x190
  438b94:	stp	x4, x5, [sp, #128]
  438b98:	stp	x6, x7, [sp, #144]
  438b9c:	stp	q0, q1, [sp]
  438ba0:	stp	q2, q3, [sp, #32]
  438ba4:	stp	q4, q5, [sp, #64]
  438ba8:	stp	q6, q7, [sp, #96]
  438bac:	cbz	x0, 438bc8 <argp_failure@@Base+0x5c>
  438bb0:	ldrb	w8, [x20, #28]
  438bb4:	tbnz	w8, #1, 438d2c <argp_failure@@Base+0x1c0>
  438bb8:	add	x8, x20, #0x48
  438bbc:	ldr	x21, [x8]
  438bc0:	cbnz	x21, 438bd8 <argp_failure@@Base+0x6c>
  438bc4:	b	438d2c <argp_failure@@Base+0x1c0>
  438bc8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  438bcc:	add	x8, x8, #0x58
  438bd0:	ldr	x21, [x8]
  438bd4:	cbz	x21, 438d2c <argp_failure@@Base+0x1c0>
  438bd8:	mov	x0, x21
  438bdc:	bl	403fa0 <flockfile@plt>
  438be0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  438be4:	add	x8, x20, #0x40
  438be8:	add	x9, x9, #0x78
  438bec:	cmp	x20, #0x0
  438bf0:	csel	x8, x8, x9, ne  // ne = any
  438bf4:	ldr	x0, [x8]
  438bf8:	mov	x1, x21
  438bfc:	bl	4048d0 <fputs_unlocked@plt>
  438c00:	cbz	x23, 438c7c <argp_failure@@Base+0x110>
  438c04:	mov	x8, #0xffffffffffffffe0    	// #-32
  438c08:	mov	x10, sp
  438c0c:	add	x11, sp, #0x80
  438c10:	movk	x8, #0xff80, lsl #32
  438c14:	add	x9, x29, #0x40
  438c18:	add	x10, x10, #0x80
  438c1c:	add	x11, x11, #0x20
  438c20:	stp	x10, x8, [x29, #-16]
  438c24:	stp	x9, x11, [x29, #-32]
  438c28:	ldp	x8, x9, [x21, #40]
  438c2c:	cmp	x8, x9
  438c30:	b.cs	438d60 <argp_failure@@Base+0x1f4>  // b.hs, b.nlast
  438c34:	add	x9, x8, #0x1
  438c38:	mov	w10, #0x3a                  	// #58
  438c3c:	str	x9, [x21, #40]
  438c40:	strb	w10, [x8]
  438c44:	ldp	x8, x9, [x21, #40]
  438c48:	cmp	x8, x9
  438c4c:	b.cs	438d78 <argp_failure@@Base+0x20c>  // b.hs, b.nlast
  438c50:	add	x9, x8, #0x1
  438c54:	mov	w10, #0x20                  	// #32
  438c58:	str	x9, [x21, #40]
  438c5c:	strb	w10, [x8]
  438c60:	ldp	q0, q1, [x29, #-32]
  438c64:	add	x3, sp, #0xa0
  438c68:	mov	w1, #0x1                   	// #1
  438c6c:	mov	x0, x21
  438c70:	mov	x2, x23
  438c74:	stp	q0, q1, [sp, #160]
  438c78:	bl	4043b0 <__vfprintf_chk@plt>
  438c7c:	cbz	w22, 438cf8 <argp_failure@@Base+0x18c>
  438c80:	ldp	x8, x9, [x21, #40]
  438c84:	cmp	x8, x9
  438c88:	b.cs	438d88 <argp_failure@@Base+0x21c>  // b.hs, b.nlast
  438c8c:	add	x9, x8, #0x1
  438c90:	mov	w10, #0x3a                  	// #58
  438c94:	str	x9, [x21, #40]
  438c98:	strb	w10, [x8]
  438c9c:	ldp	x8, x9, [x21, #40]
  438ca0:	cmp	x8, x9
  438ca4:	b.cs	438da0 <argp_failure@@Base+0x234>  // b.hs, b.nlast
  438ca8:	add	x9, x8, #0x1
  438cac:	mov	w10, #0x20                  	// #32
  438cb0:	str	x9, [x21, #40]
  438cb4:	strb	w10, [x8]
  438cb8:	add	x1, sp, #0xa0
  438cbc:	mov	w2, #0xc8                  	// #200
  438cc0:	mov	w0, w22
  438cc4:	bl	4043a0 <strerror_r@plt>
  438cc8:	cbnz	x0, 438cf0 <argp_failure@@Base+0x184>
  438ccc:	mov	w0, w22
  438cd0:	bl	4044c0 <strerror@plt>
  438cd4:	cbnz	x0, 438cf0 <argp_failure@@Base+0x184>
  438cd8:	ldr	x8, [x20]
  438cdc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  438ce0:	add	x1, x1, #0x440
  438ce4:	mov	w2, #0x5                   	// #5
  438ce8:	ldr	x0, [x8, #48]
  438cec:	bl	4048b0 <dcgettext@plt>
  438cf0:	mov	x1, x21
  438cf4:	bl	4048d0 <fputs_unlocked@plt>
  438cf8:	ldp	x8, x9, [x21, #40]
  438cfc:	cmp	x8, x9
  438d00:	b.cs	438d44 <argp_failure@@Base+0x1d8>  // b.hs, b.nlast
  438d04:	add	x9, x8, #0x1
  438d08:	mov	w10, #0xa                   	// #10
  438d0c:	str	x9, [x21, #40]
  438d10:	strb	w10, [x8]
  438d14:	mov	x0, x21
  438d18:	bl	404230 <funlockfile@plt>
  438d1c:	cbz	w19, 438d2c <argp_failure@@Base+0x1c0>
  438d20:	cbz	x20, 438db0 <argp_failure@@Base+0x244>
  438d24:	ldrb	w8, [x20, #28]
  438d28:	tbz	w8, #5, 438db0 <argp_failure@@Base+0x244>
  438d2c:	ldp	x20, x19, [sp, #448]
  438d30:	ldp	x22, x21, [sp, #432]
  438d34:	ldp	x28, x23, [sp, #416]
  438d38:	ldp	x29, x30, [sp, #400]
  438d3c:	add	sp, sp, #0x1d0
  438d40:	ret
  438d44:	mov	w1, #0xa                   	// #10
  438d48:	mov	x0, x21
  438d4c:	bl	404590 <__overflow@plt>
  438d50:	mov	x0, x21
  438d54:	bl	404230 <funlockfile@plt>
  438d58:	cbnz	w19, 438d20 <argp_failure@@Base+0x1b4>
  438d5c:	b	438d2c <argp_failure@@Base+0x1c0>
  438d60:	mov	w1, #0x3a                  	// #58
  438d64:	mov	x0, x21
  438d68:	bl	404590 <__overflow@plt>
  438d6c:	ldp	x8, x9, [x21, #40]
  438d70:	cmp	x8, x9
  438d74:	b.cc	438c50 <argp_failure@@Base+0xe4>  // b.lo, b.ul, b.last
  438d78:	mov	w1, #0x20                  	// #32
  438d7c:	mov	x0, x21
  438d80:	bl	404590 <__overflow@plt>
  438d84:	b	438c60 <argp_failure@@Base+0xf4>
  438d88:	mov	w1, #0x3a                  	// #58
  438d8c:	mov	x0, x21
  438d90:	bl	404590 <__overflow@plt>
  438d94:	ldp	x8, x9, [x21, #40]
  438d98:	cmp	x8, x9
  438d9c:	b.cc	438ca8 <argp_failure@@Base+0x13c>  // b.lo, b.ul, b.last
  438da0:	mov	w1, #0x20                  	// #32
  438da4:	mov	x0, x21
  438da8:	bl	404590 <__overflow@plt>
  438dac:	b	438cb8 <argp_failure@@Base+0x14c>
  438db0:	mov	w0, w19
  438db4:	bl	403f30 <exit@plt>
  438db8:	sub	sp, sp, #0xa0
  438dbc:	stp	x29, x30, [sp, #64]
  438dc0:	stp	x28, x27, [sp, #80]
  438dc4:	stp	x26, x25, [sp, #96]
  438dc8:	stp	x24, x23, [sp, #112]
  438dcc:	stp	x22, x21, [sp, #128]
  438dd0:	stp	x20, x19, [sp, #144]
  438dd4:	ldr	x27, [x0, #32]
  438dd8:	ldr	x24, [x0]
  438ddc:	mov	x26, x0
  438de0:	mov	w0, #0x20                  	// #32
  438de4:	add	x29, sp, #0x40
  438de8:	mov	x28, x1
  438dec:	bl	404210 <malloc@plt>
  438df0:	cbz	x0, 439328 <argp_failure@@Base+0x7bc>
  438df4:	mov	x25, x0
  438df8:	mov	x21, x0
  438dfc:	str	xzr, [x25, #24]!
  438e00:	stur	wzr, [x25, #-16]
  438e04:	str	x25, [sp, #16]
  438e08:	cbz	x24, 438fbc <argp_failure@@Base+0x450>
  438e0c:	ldrb	w8, [x24, #24]
  438e10:	tbnz	w8, #2, 439348 <argp_failure@@Base+0x7dc>
  438e14:	mov	w22, wzr
  438e18:	mov	w19, wzr
  438e1c:	add	x23, x24, #0x28
  438e20:	b	438e28 <argp_failure@@Base+0x2bc>
  438e24:	add	x23, x23, #0x30
  438e28:	ldur	w25, [x23, #-32]
  438e2c:	cbnz	w25, 438e48 <argp_failure@@Base+0x2dc>
  438e30:	ldur	x8, [x23, #-40]
  438e34:	cbnz	x8, 438e48 <argp_failure@@Base+0x2dc>
  438e38:	ldur	x8, [x23, #-8]
  438e3c:	cbnz	x8, 438e48 <argp_failure@@Base+0x2dc>
  438e40:	ldr	w8, [x23]
  438e44:	cbz	w8, 438e80 <argp_failure@@Base+0x314>
  438e48:	ldur	w8, [x23, #-16]
  438e4c:	tbnz	w8, #2, 438e58 <argp_failure@@Base+0x2ec>
  438e50:	add	w22, w22, #0x1
  438e54:	str	w22, [x21, #8]
  438e58:	sub	w9, w25, #0x1
  438e5c:	cmp	w9, #0xfe
  438e60:	b.hi	438e24 <argp_failure@@Base+0x2b8>  // b.pmore
  438e64:	tbnz	w8, #3, 438e24 <argp_failure@@Base+0x2b8>
  438e68:	bl	404640 <__ctype_b_loc@plt>
  438e6c:	ldr	x8, [x0]
  438e70:	ldrh	w8, [x8, x25, lsl #1]
  438e74:	tbz	w8, #14, 438e24 <argp_failure@@Base+0x2b8>
  438e78:	add	w19, w19, #0x1
  438e7c:	b	438e24 <argp_failure@@Base+0x2b8>
  438e80:	mov	w8, #0x38                  	// #56
  438e84:	umull	x0, w22, w8
  438e88:	bl	404210 <malloc@plt>
  438e8c:	mov	x22, x0
  438e90:	str	x0, [x21]
  438e94:	add	w0, w19, #0x1
  438e98:	bl	404210 <malloc@plt>
  438e9c:	str	x0, [x21, #16]
  438ea0:	cbz	x22, 439308 <argp_failure@@Base+0x79c>
  438ea4:	mov	x23, x0
  438ea8:	cbz	x0, 439308 <argp_failure@@Base+0x79c>
  438eac:	mov	w8, wzr
  438eb0:	b	438ec0 <argp_failure@@Base+0x354>
  438eb4:	add	x22, x22, #0x38
  438eb8:	mov	x24, x8
  438ebc:	mov	w8, w25
  438ec0:	ldr	w9, [x24, #8]
  438ec4:	cbnz	w9, 438ee0 <argp_failure@@Base+0x374>
  438ec8:	ldr	x10, [x24]
  438ecc:	cbnz	x10, 438ee0 <argp_failure@@Base+0x374>
  438ed0:	ldr	x10, [x24, #32]
  438ed4:	cbnz	x10, 438ee0 <argp_failure@@Base+0x374>
  438ed8:	ldr	w10, [x24, #40]
  438edc:	cbz	w10, 438fb4 <argp_failure@@Base+0x448>
  438ee0:	str	x24, [x22]
  438ee4:	str	wzr, [x22, #8]
  438ee8:	str	x23, [x22, #16]
  438eec:	ldr	w25, [x24, #40]
  438ef0:	cbnz	w25, 438f0c <argp_failure@@Base+0x3a0>
  438ef4:	ldr	x10, [x24]
  438ef8:	cbz	x10, 438f04 <argp_failure@@Base+0x398>
  438efc:	mov	w25, w8
  438f00:	b	438f0c <argp_failure@@Base+0x3a0>
  438f04:	cmp	w9, #0x0
  438f08:	cinc	w25, w8, eq  // eq = none
  438f0c:	mov	w9, wzr
  438f10:	str	w25, [x22, #24]
  438f14:	stp	x28, x26, [x22, #32]
  438f18:	add	w8, w9, #0x1
  438f1c:	str	w8, [x22, #8]
  438f20:	ldrb	w8, [x24, #24]
  438f24:	tbnz	w8, #3, 438f6c <argp_failure@@Base+0x400>
  438f28:	ldr	w19, [x24, #8]
  438f2c:	sub	w8, w19, #0x1
  438f30:	cmp	w8, #0xfe
  438f34:	b.hi	438f6c <argp_failure@@Base+0x400>  // b.pmore
  438f38:	bl	404640 <__ctype_b_loc@plt>
  438f3c:	ldr	x8, [x0]
  438f40:	ldrh	w8, [x8, x19, lsl #1]
  438f44:	tbz	w8, #14, 438f6c <argp_failure@@Base+0x400>
  438f48:	ldr	x8, [x21, #16]
  438f4c:	cmp	x8, x23
  438f50:	b.cs	438f68 <argp_failure@@Base+0x3fc>  // b.hs, b.nlast
  438f54:	ldrb	w9, [x8], #1
  438f58:	cmp	w9, w19, uxtb
  438f5c:	b.eq	438f6c <argp_failure@@Base+0x400>  // b.none
  438f60:	cmp	x23, x8
  438f64:	b.ne	438f54 <argp_failure@@Base+0x3e8>  // b.any
  438f68:	strb	w19, [x23], #1
  438f6c:	ldr	w9, [x24, #56]
  438f70:	add	x8, x24, #0x30
  438f74:	cbnz	w9, 438f90 <argp_failure@@Base+0x424>
  438f78:	ldr	x9, [x8]
  438f7c:	cbnz	x9, 438f90 <argp_failure@@Base+0x424>
  438f80:	ldr	x9, [x24, #80]
  438f84:	cbnz	x9, 438f90 <argp_failure@@Base+0x424>
  438f88:	ldr	w9, [x24, #88]
  438f8c:	cbz	w9, 438eb4 <argp_failure@@Base+0x348>
  438f90:	ldrb	w9, [x24, #72]
  438f94:	tbz	w9, #2, 438eb4 <argp_failure@@Base+0x348>
  438f98:	ldr	w9, [x22, #8]
  438f9c:	mov	x24, x8
  438fa0:	add	w8, w9, #0x1
  438fa4:	str	w8, [x22, #8]
  438fa8:	ldrb	w8, [x24, #24]
  438fac:	tbz	w8, #3, 438f28 <argp_failure@@Base+0x3bc>
  438fb0:	b	438f6c <argp_failure@@Base+0x400>
  438fb4:	ldr	x25, [sp, #16]
  438fb8:	strb	wzr, [x23]
  438fbc:	cbz	x27, 4392c4 <argp_failure@@Base+0x758>
  438fc0:	ldr	x8, [x27]
  438fc4:	cbz	x8, 4392c4 <argp_failure@@Base+0x758>
  438fc8:	stp	x28, x26, [sp]
  438fcc:	b	438ff4 <argp_failure@@Base+0x488>
  438fd0:	ldr	x8, [x22]
  438fd4:	ldr	x9, [x22, #16]
  438fd8:	str	w23, [x21, #8]
  438fdc:	str	x8, [x21]
  438fe0:	str	x9, [x21, #16]
  438fe4:	mov	x0, x22
  438fe8:	bl	4046b0 <free@plt>
  438fec:	ldr	x8, [x27, #32]!
  438ff0:	cbz	x8, 4392c4 <argp_failure@@Base+0x758>
  438ff4:	ldr	w19, [x27, #24]
  438ff8:	cbz	w19, 439004 <argp_failure@@Base+0x498>
  438ffc:	ldr	x20, [x27, #16]
  439000:	b	439010 <argp_failure@@Base+0x4a4>
  439004:	ldr	x20, [x27, #16]
  439008:	mov	x1, x28
  43900c:	cbz	x20, 43905c <argp_failure@@Base+0x4f0>
  439010:	ldr	x22, [x26, #32]
  439014:	mov	w0, #0x30                  	// #48
  439018:	bl	404210 <malloc@plt>
  43901c:	mov	x1, x0
  439020:	cbz	x0, 43905c <argp_failure@@Base+0x4f0>
  439024:	sub	x8, x27, x22
  439028:	lsr	x8, x8, #5
  43902c:	str	x20, [x1]
  439030:	stp	w8, w19, [x1, #8]
  439034:	stp	x28, x26, [x1, #16]
  439038:	cbz	x28, 439048 <argp_failure@@Base+0x4dc>
  43903c:	ldr	w8, [x28, #32]
  439040:	add	w8, w8, #0x1
  439044:	b	43904c <argp_failure@@Base+0x4e0>
  439048:	mov	w8, wzr
  43904c:	ldr	x9, [x25]
  439050:	str	w8, [x1, #32]
  439054:	str	x1, [x25]
  439058:	str	x9, [x1, #40]
  43905c:	ldr	x0, [x27]
  439060:	bl	438db8 <argp_failure@@Base+0x24c>
  439064:	mov	x22, x0
  439068:	mov	x9, x25
  43906c:	ldr	x10, [x9]
  439070:	mov	x8, x9
  439074:	add	x9, x10, #0x28
  439078:	cbnz	x10, 43906c <argp_failure@@Base+0x500>
  43907c:	ldr	x9, [x22, #24]
  439080:	str	x9, [x8]
  439084:	ldr	w23, [x22, #8]
  439088:	str	xzr, [x22, #24]
  43908c:	cbz	w23, 438fe4 <argp_failure@@Base+0x478>
  439090:	ldr	w19, [x21, #8]
  439094:	cbz	w19, 438fd0 <argp_failure@@Base+0x464>
  439098:	add	w9, w19, w23
  43909c:	mov	w8, #0x38                  	// #56
  4390a0:	umull	x0, w9, w8
  4390a4:	stur	x27, [x29, #-16]
  4390a8:	stur	w9, [x29, #-28]
  4390ac:	bl	404210 <malloc@plt>
  4390b0:	ldr	x27, [x21, #16]
  4390b4:	mov	x28, x0
  4390b8:	mov	x0, x27
  4390bc:	bl	403f00 <strlen@plt>
  4390c0:	ldr	x25, [x22, #16]
  4390c4:	and	x26, x0, #0xffffffff
  4390c8:	mov	x0, x25
  4390cc:	bl	403f00 <strlen@plt>
  4390d0:	add	x8, x26, x0
  4390d4:	add	x0, x8, #0x1
  4390d8:	bl	404210 <malloc@plt>
  4390dc:	cbz	x28, 4392e8 <argp_failure@@Base+0x77c>
  4390e0:	mov	x8, x0
  4390e4:	cbz	x0, 4392e8 <argp_failure@@Base+0x77c>
  4390e8:	ldr	x1, [x21]
  4390ec:	mov	w20, #0x38                  	// #56
  4390f0:	mul	x2, x19, x20
  4390f4:	mov	x3, #0xffffffffffffffff    	// #-1
  4390f8:	mov	x0, x28
  4390fc:	stur	x8, [x29, #-8]
  439100:	bl	404860 <__mempcpy_chk@plt>
  439104:	ldr	x1, [x22]
  439108:	mul	x2, x23, x20
  43910c:	mov	x3, #0xffffffffffffffff    	// #-1
  439110:	bl	404860 <__mempcpy_chk@plt>
  439114:	ldur	x0, [x29, #-8]
  439118:	mov	x3, #0xffffffffffffffff    	// #-1
  43911c:	mov	x1, x27
  439120:	mov	x2, x26
  439124:	bl	404860 <__mempcpy_chk@plt>
  439128:	ldur	x9, [x29, #-8]
  43912c:	str	x28, [sp, #24]
  439130:	ldr	x8, [x28, #16]
  439134:	subs	w19, w19, #0x1
  439138:	sub	x8, x8, x27
  43913c:	add	x8, x9, x8
  439140:	str	x8, [x28, #16]
  439144:	add	x28, x28, #0x38
  439148:	b.ne	439130 <argp_failure@@Base+0x5c4>  // b.any
  43914c:	add	x27, x9, x26
  439150:	stur	x22, [x29, #-24]
  439154:	cbnz	x26, 439168 <argp_failure@@Base+0x5fc>
  439158:	b	4391f0 <argp_failure@@Base+0x684>
  43915c:	subs	w23, w23, #0x1
  439160:	add	x28, x28, #0x38
  439164:	b.eq	439254 <argp_failure@@Base+0x6e8>  // b.none
  439168:	ldr	w22, [x28, #8]
  43916c:	str	x27, [x28, #16]
  439170:	cbz	w22, 43915c <argp_failure@@Base+0x5f0>
  439174:	ldr	x19, [x28]
  439178:	b	439190 <argp_failure@@Base+0x624>
  43917c:	strb	w20, [x27], #1
  439180:	add	x25, x25, #0x1
  439184:	subs	w22, w22, #0x1
  439188:	add	x19, x19, #0x30
  43918c:	b.eq	43915c <argp_failure@@Base+0x5f0>  // b.none
  439190:	ldrb	w8, [x19, #24]
  439194:	tbnz	w8, #3, 439184 <argp_failure@@Base+0x618>
  439198:	ldr	w24, [x19, #8]
  43919c:	sub	w8, w24, #0x1
  4391a0:	cmp	w8, #0xfe
  4391a4:	b.hi	439184 <argp_failure@@Base+0x618>  // b.pmore
  4391a8:	ldrb	w20, [x25]
  4391ac:	bl	404640 <__ctype_b_loc@plt>
  4391b0:	cmp	w24, w20
  4391b4:	b.ne	439184 <argp_failure@@Base+0x618>  // b.any
  4391b8:	ldr	x8, [x0]
  4391bc:	ldur	x9, [x29, #-8]
  4391c0:	ldrh	w10, [x8, x24, lsl #1]
  4391c4:	mov	x8, x26
  4391c8:	tbz	w10, #14, 439184 <argp_failure@@Base+0x618>
  4391cc:	ldrb	w10, [x9], #1
  4391d0:	cmp	w10, w20
  4391d4:	b.eq	439180 <argp_failure@@Base+0x614>  // b.none
  4391d8:	subs	x8, x8, #0x1
  4391dc:	b.ne	4391cc <argp_failure@@Base+0x660>  // b.any
  4391e0:	b	43917c <argp_failure@@Base+0x610>
  4391e4:	subs	w23, w23, #0x1
  4391e8:	add	x28, x28, #0x38
  4391ec:	b.eq	439254 <argp_failure@@Base+0x6e8>  // b.none
  4391f0:	ldr	w19, [x28, #8]
  4391f4:	str	x27, [x28, #16]
  4391f8:	cbz	w19, 4391e4 <argp_failure@@Base+0x678>
  4391fc:	ldr	x8, [x28]
  439200:	add	x22, x8, #0x18
  439204:	b	439214 <argp_failure@@Base+0x6a8>
  439208:	subs	w19, w19, #0x1
  43920c:	add	x22, x22, #0x30
  439210:	b.eq	4391e4 <argp_failure@@Base+0x678>  // b.none
  439214:	ldrb	w8, [x22]
  439218:	tbnz	w8, #3, 439208 <argp_failure@@Base+0x69c>
  43921c:	ldur	w20, [x22, #-16]
  439220:	sub	w8, w20, #0x1
  439224:	cmp	w8, #0xfe
  439228:	b.hi	439208 <argp_failure@@Base+0x69c>  // b.pmore
  43922c:	ldrb	w24, [x25]
  439230:	bl	404640 <__ctype_b_loc@plt>
  439234:	cmp	w20, w24
  439238:	b.ne	439208 <argp_failure@@Base+0x69c>  // b.any
  43923c:	ldr	x8, [x0]
  439240:	ldrh	w8, [x8, x20, lsl #1]
  439244:	tbz	w8, #14, 439208 <argp_failure@@Base+0x69c>
  439248:	strb	w24, [x27], #1
  43924c:	add	x25, x25, #0x1
  439250:	b	439208 <argp_failure@@Base+0x69c>
  439254:	ldr	x0, [x21]
  439258:	strb	wzr, [x27]
  43925c:	bl	4046b0 <free@plt>
  439260:	ldr	x0, [x21, #16]
  439264:	bl	4046b0 <free@plt>
  439268:	ldr	x8, [sp, #24]
  43926c:	ldur	x22, [x29, #-24]
  439270:	str	x8, [x21]
  439274:	ldur	w8, [x29, #-28]
  439278:	ldr	x0, [x22, #24]
  43927c:	str	w8, [x21, #8]
  439280:	ldur	x8, [x29, #-8]
  439284:	str	x8, [x21, #16]
  439288:	cbz	x0, 43929c <argp_failure@@Base+0x730>
  43928c:	ldr	x19, [x0, #40]
  439290:	bl	4046b0 <free@plt>
  439294:	mov	x0, x19
  439298:	cbnz	x19, 43928c <argp_failure@@Base+0x720>
  43929c:	ldr	w8, [x22, #8]
  4392a0:	ldp	x28, x26, [sp]
  4392a4:	ldur	x27, [x29, #-16]
  4392a8:	ldr	x25, [sp, #16]
  4392ac:	cbz	w8, 438fe4 <argp_failure@@Base+0x478>
  4392b0:	ldr	x0, [x22]
  4392b4:	bl	4046b0 <free@plt>
  4392b8:	ldr	x0, [x22, #16]
  4392bc:	bl	4046b0 <free@plt>
  4392c0:	b	438fe4 <argp_failure@@Base+0x478>
  4392c4:	mov	x0, x21
  4392c8:	ldp	x20, x19, [sp, #144]
  4392cc:	ldp	x22, x21, [sp, #128]
  4392d0:	ldp	x24, x23, [sp, #112]
  4392d4:	ldp	x26, x25, [sp, #96]
  4392d8:	ldp	x28, x27, [sp, #80]
  4392dc:	ldp	x29, x30, [sp, #64]
  4392e0:	add	sp, sp, #0xa0
  4392e4:	ret
  4392e8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4392ec:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4392f0:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4392f4:	add	x0, x0, #0x5ff
  4392f8:	add	x1, x1, #0x580
  4392fc:	add	x3, x3, #0x618
  439300:	mov	w2, #0x366                 	// #870
  439304:	bl	4049b0 <__assert_fail@plt>
  439308:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43930c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439310:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439314:	add	x0, x0, #0x5dc
  439318:	add	x1, x1, #0x580
  43931c:	add	x3, x3, #0x58c
  439320:	mov	w2, #0x1d1                 	// #465
  439324:	bl	4049b0 <__assert_fail@plt>
  439328:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43932c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439330:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439334:	add	x0, x0, #0x57c
  439338:	add	x1, x1, #0x580
  43933c:	add	x3, x3, #0x58c
  439340:	mov	w2, #0x1b9                 	// #441
  439344:	bl	4049b0 <__assert_fail@plt>
  439348:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43934c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439350:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439354:	add	x0, x0, #0x5cc
  439358:	add	x1, x1, #0x580
  43935c:	add	x3, x3, #0x58c
  439360:	mov	w2, #0x1c3                 	// #451
  439364:	bl	4049b0 <__assert_fail@plt>
  439368:	stp	x29, x30, [sp, #-32]!
  43936c:	stp	x20, x19, [sp, #16]
  439370:	mov	x20, x1
  439374:	mov	x29, sp
  439378:	cbz	x0, 439394 <argp_failure@@Base+0x828>
  43937c:	mov	w1, #0xa                   	// #10
  439380:	bl	404750 <strchr@plt>
  439384:	cmp	x0, #0x0
  439388:	cset	w19, ne  // ne = any
  43938c:	cbnz	x20, 43939c <argp_failure@@Base+0x830>
  439390:	b	4393c0 <argp_failure@@Base+0x854>
  439394:	mov	x19, xzr
  439398:	cbz	x20, 4393c0 <argp_failure@@Base+0x854>
  43939c:	ldr	x8, [x20]
  4393a0:	cbz	x8, 4393c0 <argp_failure@@Base+0x854>
  4393a4:	add	x20, x20, #0x20
  4393a8:	ldr	x0, [x8, #16]
  4393ac:	ldr	x1, [x8, #32]
  4393b0:	bl	439368 <argp_failure@@Base+0x7fc>
  4393b4:	ldr	x8, [x20], #32
  4393b8:	add	x19, x0, x19
  4393bc:	cbnz	x8, 4393a8 <argp_failure@@Base+0x83c>
  4393c0:	mov	x0, x19
  4393c4:	ldp	x20, x19, [sp, #16]
  4393c8:	ldp	x29, x30, [sp], #32
  4393cc:	ret
  4393d0:	stp	x29, x30, [sp, #-96]!
  4393d4:	stp	x28, x27, [sp, #16]
  4393d8:	stp	x26, x25, [sp, #32]
  4393dc:	stp	x24, x23, [sp, #48]
  4393e0:	stp	x22, x21, [sp, #64]
  4393e4:	stp	x20, x19, [sp, #80]
  4393e8:	mov	x29, sp
  4393ec:	sub	sp, sp, #0x10
  4393f0:	ldr	w22, [x0, #8]
  4393f4:	cbz	w22, 439744 <argp_failure@@Base+0xbd8>
  4393f8:	mov	x20, x0
  4393fc:	ldr	x0, [x0, #16]
  439400:	mov	x19, x1
  439404:	bl	403f00 <strlen@plt>
  439408:	add	x9, x0, #0x10
  43940c:	mov	x8, sp
  439410:	and	x9, x9, #0xfffffffffffffff0
  439414:	sub	x23, x8, x9
  439418:	mov	sp, x23
  43941c:	stp	x23, x20, [x29, #-16]
  439420:	ldr	x24, [x20]
  439424:	b	439434 <argp_failure@@Base+0x8c8>
  439428:	subs	w22, w22, #0x1
  43942c:	add	x24, x24, #0x38
  439430:	b.eq	4394c0 <argp_failure@@Base+0x954>  // b.none
  439434:	ldr	w25, [x24, #8]
  439438:	cbz	w25, 439428 <argp_failure@@Base+0x8bc>
  43943c:	ldr	x26, [x24]
  439440:	ldr	x27, [x24, #16]
  439444:	mov	x28, x26
  439448:	b	43945c <argp_failure@@Base+0x8f0>
  43944c:	add	x27, x27, #0x1
  439450:	subs	w25, w25, #0x1
  439454:	add	x28, x28, #0x30
  439458:	b.eq	439428 <argp_failure@@Base+0x8bc>  // b.none
  43945c:	ldr	w21, [x28, #24]
  439460:	tbnz	w21, #3, 439450 <argp_failure@@Base+0x8e4>
  439464:	ldr	w20, [x28, #8]
  439468:	sub	w8, w20, #0x1
  43946c:	cmp	w8, #0xfe
  439470:	b.hi	439450 <argp_failure@@Base+0x8e4>  // b.pmore
  439474:	bl	404640 <__ctype_b_loc@plt>
  439478:	ldr	x8, [x0]
  43947c:	ldrh	w8, [x8, x20, lsl #1]
  439480:	tbz	w8, #14, 439450 <argp_failure@@Base+0x8e4>
  439484:	ldrb	w8, [x27]
  439488:	cmp	w20, w8
  43948c:	b.ne	439450 <argp_failure@@Base+0x8e4>  // b.any
  439490:	tst	w21, #0x4
  439494:	csel	x26, x28, x26, eq  // eq = none
  439498:	tbnz	w21, #1, 43944c <argp_failure@@Base+0x8e0>
  43949c:	ldr	x8, [x28, #16]
  4394a0:	cbnz	x8, 43944c <argp_failure@@Base+0x8e0>
  4394a4:	ldr	x8, [x26, #16]
  4394a8:	cbnz	x8, 43944c <argp_failure@@Base+0x8e0>
  4394ac:	ldr	w8, [x26, #24]
  4394b0:	orr	w8, w8, w21
  4394b4:	tbnz	w8, #4, 43944c <argp_failure@@Base+0x8e0>
  4394b8:	strb	w20, [x23], #1
  4394bc:	b	43944c <argp_failure@@Base+0x8e0>
  4394c0:	ldur	x2, [x29, #-16]
  4394c4:	cmp	x23, x2
  4394c8:	b.ls	4394e0 <argp_failure@@Base+0x974>  // b.plast
  4394cc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4394d0:	add	x1, x1, #0x644
  4394d4:	mov	x0, x19
  4394d8:	strb	wzr, [x23]
  4394dc:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  4394e0:	ldur	x8, [x29, #-8]
  4394e4:	ldr	w25, [x8, #8]
  4394e8:	cbz	w25, 439744 <argp_failure@@Base+0xbd8>
  4394ec:	ldr	x26, [x8]
  4394f0:	b	439500 <argp_failure@@Base+0x994>
  4394f4:	subs	w25, w25, #0x1
  4394f8:	add	x26, x26, #0x38
  4394fc:	b.eq	43966c <argp_failure@@Base+0xb00>  // b.none
  439500:	ldr	w27, [x26, #8]
  439504:	cbz	w27, 4394f4 <argp_failure@@Base+0x988>
  439508:	ldr	x8, [x26, #40]
  43950c:	ldr	x22, [x26]
  439510:	ldr	x21, [x26, #16]
  439514:	ldr	x23, [x8, #48]
  439518:	mov	x28, x22
  43951c:	b	439548 <argp_failure@@Base+0x9dc>
  439520:	ldr	w2, [x28, #8]
  439524:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439528:	mov	x0, x19
  43952c:	add	x1, x1, #0x64b
  439530:	mov	x3, x24
  439534:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  439538:	add	x21, x21, #0x1
  43953c:	subs	w27, w27, #0x1
  439540:	add	x28, x28, #0x30
  439544:	b.eq	4394f4 <argp_failure@@Base+0x988>  // b.none
  439548:	ldr	w20, [x28, #24]
  43954c:	tbnz	w20, #3, 43953c <argp_failure@@Base+0x9d0>
  439550:	ldr	w24, [x28, #8]
  439554:	sub	w8, w24, #0x1
  439558:	cmp	w8, #0xfe
  43955c:	b.hi	43953c <argp_failure@@Base+0x9d0>  // b.pmore
  439560:	bl	404640 <__ctype_b_loc@plt>
  439564:	ldr	x8, [x0]
  439568:	ldrh	w8, [x8, x24, lsl #1]
  43956c:	tbz	w8, #14, 43953c <argp_failure@@Base+0x9d0>
  439570:	ldrb	w8, [x21]
  439574:	cmp	w24, w8
  439578:	b.ne	43953c <argp_failure@@Base+0x9d0>  // b.any
  43957c:	tst	w20, #0x4
  439580:	csel	x22, x28, x22, eq  // eq = none
  439584:	tbnz	w20, #1, 439538 <argp_failure@@Base+0x9cc>
  439588:	ldr	w8, [x22, #24]
  43958c:	ldr	x1, [x28, #16]
  439590:	orr	w20, w8, w20
  439594:	cbnz	x1, 43959c <argp_failure@@Base+0xa30>
  439598:	ldr	x1, [x22, #16]
  43959c:	tbnz	w20, #4, 439538 <argp_failure@@Base+0x9cc>
  4395a0:	cbz	x1, 439538 <argp_failure@@Base+0x9cc>
  4395a4:	mov	w2, #0x5                   	// #5
  4395a8:	mov	x0, x23
  4395ac:	bl	4048b0 <dcgettext@plt>
  4395b0:	mov	x24, x0
  4395b4:	tbnz	w20, #0, 439520 <argp_failure@@Base+0x9b4>
  4395b8:	mov	x0, x24
  4395bc:	bl	403f00 <strlen@plt>
  4395c0:	ldp	x9, x8, [x19, #48]
  4395c4:	ldr	x10, [x19, #32]
  4395c8:	add	x20, x0, #0x6
  4395cc:	sub	x9, x8, x9
  4395d0:	cmp	x9, x10
  4395d4:	b.ls	4395e4 <argp_failure@@Base+0xa78>  // b.plast
  4395d8:	mov	x0, x19
  4395dc:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  4395e0:	ldr	x8, [x19, #56]
  4395e4:	ldr	x9, [x19, #40]
  4395e8:	ldr	x10, [x19, #16]
  4395ec:	bic	x11, x9, x9, asr #63
  4395f0:	ldr	x9, [x19, #64]
  4395f4:	add	x11, x20, x11
  4395f8:	cmp	x11, x10
  4395fc:	b.cs	43962c <argp_failure@@Base+0xac0>  // b.hs, b.nlast
  439600:	cmp	x8, x9
  439604:	b.cc	43961c <argp_failure@@Base+0xab0>  // b.lo, b.ul, b.last
  439608:	mov	w1, #0x1                   	// #1
  43960c:	mov	x0, x19
  439610:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439614:	cbz	w0, 439658 <argp_failure@@Base+0xaec>
  439618:	ldr	x8, [x19, #56]
  43961c:	add	x9, x8, #0x1
  439620:	str	x9, [x19, #56]
  439624:	mov	w9, #0x20                  	// #32
  439628:	b	439654 <argp_failure@@Base+0xae8>
  43962c:	cmp	x8, x9
  439630:	b.cc	439648 <argp_failure@@Base+0xadc>  // b.lo, b.ul, b.last
  439634:	mov	w1, #0x1                   	// #1
  439638:	mov	x0, x19
  43963c:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439640:	cbz	w0, 439658 <argp_failure@@Base+0xaec>
  439644:	ldr	x8, [x19, #56]
  439648:	add	x9, x8, #0x1
  43964c:	str	x9, [x19, #56]
  439650:	mov	w9, #0xa                   	// #10
  439654:	strb	w9, [x8]
  439658:	ldr	w2, [x28, #8]
  43965c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439660:	mov	x0, x19
  439664:	add	x1, x1, #0x656
  439668:	b	439530 <argp_failure@@Base+0x9c4>
  43966c:	ldur	x8, [x29, #-8]
  439670:	ldr	w24, [x8, #8]
  439674:	cbz	w24, 439744 <argp_failure@@Base+0xbd8>
  439678:	ldr	x25, [x8]
  43967c:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439680:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  439684:	add	x20, x20, #0x677
  439688:	add	x22, x22, #0x65f
  43968c:	b	43969c <argp_failure@@Base+0xb30>
  439690:	subs	w24, w24, #0x1
  439694:	add	x25, x25, #0x38
  439698:	b.eq	439744 <argp_failure@@Base+0xbd8>  // b.none
  43969c:	ldr	w26, [x25, #8]
  4396a0:	cbz	w26, 439690 <argp_failure@@Base+0xb24>
  4396a4:	ldr	x8, [x25, #40]
  4396a8:	ldr	x27, [x25]
  4396ac:	ldr	x23, [x8, #48]
  4396b0:	mov	x28, x27
  4396b4:	b	4396d0 <argp_failure@@Base+0xb64>
  4396b8:	mov	x0, x19
  4396bc:	mov	x1, x20
  4396c0:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  4396c4:	subs	w26, w26, #0x1
  4396c8:	add	x28, x28, #0x30
  4396cc:	b.eq	439690 <argp_failure@@Base+0xb24>  // b.none
  4396d0:	ldr	x2, [x28]
  4396d4:	cbz	x2, 4396c4 <argp_failure@@Base+0xb58>
  4396d8:	ldr	w8, [x28, #24]
  4396dc:	tst	w8, #0x4
  4396e0:	csel	x27, x28, x27, eq  // eq = none
  4396e4:	tbnz	w8, #1, 4396c4 <argp_failure@@Base+0xb58>
  4396e8:	ldr	w9, [x27, #24]
  4396ec:	ldr	x1, [x28, #16]
  4396f0:	orr	w21, w9, w8
  4396f4:	cbz	x1, 439700 <argp_failure@@Base+0xb94>
  4396f8:	tbnz	w21, #4, 4396c4 <argp_failure@@Base+0xb58>
  4396fc:	b	439708 <argp_failure@@Base+0xb9c>
  439700:	ldr	x1, [x27, #16]
  439704:	tbnz	w21, #4, 4396c4 <argp_failure@@Base+0xb58>
  439708:	cbz	x1, 4396b8 <argp_failure@@Base+0xb4c>
  43970c:	mov	w2, #0x5                   	// #5
  439710:	mov	x0, x23
  439714:	bl	4048b0 <dcgettext@plt>
  439718:	ldr	x2, [x28]
  43971c:	mov	x3, x0
  439720:	mov	x0, x19
  439724:	tbnz	w21, #0, 439738 <argp_failure@@Base+0xbcc>
  439728:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43972c:	add	x1, x1, #0x66c
  439730:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  439734:	b	4396c4 <argp_failure@@Base+0xb58>
  439738:	mov	x1, x22
  43973c:	bl	45c95c <_obstack_memory_used@@Base+0x11798>
  439740:	b	4396c4 <argp_failure@@Base+0xb58>
  439744:	mov	sp, x29
  439748:	ldp	x20, x19, [sp, #80]
  43974c:	ldp	x22, x21, [sp, #64]
  439750:	ldp	x24, x23, [sp, #48]
  439754:	ldp	x26, x25, [sp, #32]
  439758:	ldp	x28, x27, [sp, #16]
  43975c:	ldp	x29, x30, [sp], #96
  439760:	ret
  439764:	sub	sp, sp, #0x80
  439768:	stp	x29, x30, [sp, #32]
  43976c:	stp	x28, x27, [sp, #48]
  439770:	stp	x26, x25, [sp, #64]
  439774:	stp	x24, x23, [sp, #80]
  439778:	stp	x22, x21, [sp, #96]
  43977c:	stp	x20, x19, [sp, #112]
  439780:	mov	x23, x0
  439784:	ldr	x8, [x23, #16]
  439788:	ldr	x28, [x0, #32]
  43978c:	ldr	x0, [x0, #48]
  439790:	ldr	x26, [x2]
  439794:	mov	x21, x2
  439798:	mov	x22, x1
  43979c:	mov	w2, #0x5                   	// #5
  4397a0:	mov	x1, x8
  4397a4:	add	x29, sp, #0x20
  4397a8:	mov	x20, x4
  4397ac:	mov	w19, w3
  4397b0:	bl	4048b0 <dcgettext@plt>
  4397b4:	mov	x24, x0
  4397b8:	cbz	x23, 4397fc <argp_failure@@Base+0xc90>
  4397bc:	ldr	x8, [x23, #40]
  4397c0:	cbz	x8, 4397fc <argp_failure@@Base+0xc90>
  4397c4:	mov	x0, x23
  4397c8:	mov	x1, x22
  4397cc:	bl	43b20c <argp_parse@@Base+0xb60>
  4397d0:	ldr	x8, [x23, #40]
  4397d4:	mov	x2, x0
  4397d8:	mov	w0, #0x6                   	// #6
  4397dc:	movk	w0, #0x200, lsl #16
  4397e0:	mov	x1, x24
  4397e4:	blr	x8
  4397e8:	mov	x25, x0
  4397ec:	cbnz	x25, 439804 <argp_failure@@Base+0xc98>
  4397f0:	mov	x23, xzr
  4397f4:	cbnz	x28, 439970 <argp_failure@@Base+0xe04>
  4397f8:	b	4399a4 <argp_failure@@Base+0xe38>
  4397fc:	mov	x25, x24
  439800:	cbz	x25, 4397f0 <argp_failure@@Base+0xc84>
  439804:	mov	w1, #0xa                   	// #10
  439808:	mov	x0, x25
  43980c:	bl	4048a0 <strchrnul@plt>
  439810:	ldrb	w8, [x0]
  439814:	mov	x23, x0
  439818:	stur	x26, [x29, #-8]
  43981c:	str	x28, [sp, #16]
  439820:	cbz	w8, 439854 <argp_failure@@Base+0xce8>
  439824:	ldrb	w27, [x26]
  439828:	cbz	w27, 439860 <argp_failure@@Base+0xcf4>
  43982c:	mov	w28, wzr
  439830:	add	x26, x23, #0x1
  439834:	mov	w1, #0xa                   	// #10
  439838:	mov	x0, x26
  43983c:	bl	4048a0 <strchrnul@plt>
  439840:	add	w28, w28, #0x1
  439844:	cmp	w28, w27
  439848:	mov	x23, x0
  43984c:	b.cc	439830 <argp_failure@@Base+0xcc4>  // b.lo, b.ul, b.last
  439850:	b	439864 <argp_failure@@Base+0xcf8>
  439854:	str	wzr, [sp, #12]
  439858:	mov	x26, x25
  43985c:	b	439878 <argp_failure@@Base+0xd0c>
  439860:	mov	x26, x25
  439864:	ldr	x8, [x21]
  439868:	add	x8, x8, #0x1
  43986c:	str	x8, [x21]
  439870:	mov	w8, #0x1                   	// #1
  439874:	str	w8, [sp, #12]
  439878:	ldp	x9, x8, [x20, #48]
  43987c:	ldr	x10, [x20, #32]
  439880:	sub	x27, x23, x26
  439884:	add	x28, x27, #0x1
  439888:	sub	x9, x8, x9
  43988c:	cmp	x9, x10
  439890:	b.ls	4398a0 <argp_failure@@Base+0xd34>  // b.plast
  439894:	mov	x0, x20
  439898:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43989c:	ldr	x8, [x20, #56]
  4398a0:	ldr	x9, [x20, #40]
  4398a4:	ldr	x10, [x20, #16]
  4398a8:	bic	x11, x9, x9, asr #63
  4398ac:	ldr	x9, [x20, #64]
  4398b0:	add	x11, x28, x11
  4398b4:	cmp	x11, x10
  4398b8:	b.cs	4398e8 <argp_failure@@Base+0xd7c>  // b.hs, b.nlast
  4398bc:	ldr	x28, [sp, #16]
  4398c0:	cmp	x8, x9
  4398c4:	b.cc	4398dc <argp_failure@@Base+0xd70>  // b.lo, b.ul, b.last
  4398c8:	mov	w1, #0x1                   	// #1
  4398cc:	mov	x0, x20
  4398d0:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  4398d4:	cbz	w0, 439918 <argp_failure@@Base+0xdac>
  4398d8:	ldr	x8, [x20, #56]
  4398dc:	add	x9, x8, #0x1
  4398e0:	mov	w10, #0x20                  	// #32
  4398e4:	b	439910 <argp_failure@@Base+0xda4>
  4398e8:	ldr	x28, [sp, #16]
  4398ec:	cmp	x8, x9
  4398f0:	b.cc	439908 <argp_failure@@Base+0xd9c>  // b.lo, b.ul, b.last
  4398f4:	mov	w1, #0x1                   	// #1
  4398f8:	mov	x0, x20
  4398fc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439900:	cbz	w0, 439918 <argp_failure@@Base+0xdac>
  439904:	ldr	x8, [x20, #56]
  439908:	add	x9, x8, #0x1
  43990c:	mov	w10, #0xa                   	// #10
  439910:	str	x9, [x20, #56]
  439914:	strb	w10, [x8]
  439918:	ldp	x0, x8, [x20, #56]
  43991c:	add	x9, x0, x27
  439920:	cmp	x9, x8
  439924:	b.ls	43993c <argp_failure@@Base+0xdd0>  // b.plast
  439928:	mov	x0, x20
  43992c:	mov	x1, x27
  439930:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439934:	cbz	w0, 439954 <argp_failure@@Base+0xde8>
  439938:	ldr	x0, [x20, #56]
  43993c:	mov	x1, x26
  439940:	mov	x2, x27
  439944:	bl	403e80 <memcpy@plt>
  439948:	ldr	x8, [x20, #56]
  43994c:	add	x8, x8, x27
  439950:	str	x8, [x20, #56]
  439954:	cmp	x25, x24
  439958:	b.eq	439964 <argp_failure@@Base+0xdf8>  // b.none
  43995c:	mov	x0, x25
  439960:	bl	4046b0 <free@plt>
  439964:	ldur	x26, [x29, #-8]
  439968:	ldr	w25, [sp, #12]
  43996c:	cbz	x28, 4399a4 <argp_failure@@Base+0xe38>
  439970:	ldr	x8, [x28]
  439974:	cbz	x8, 4399a4 <argp_failure@@Base+0xe38>
  439978:	add	x24, x28, #0x20
  43997c:	mov	x0, x8
  439980:	mov	x1, x22
  439984:	mov	x2, x21
  439988:	mov	w3, w19
  43998c:	mov	x4, x20
  439990:	bl	439764 <argp_failure@@Base+0xbf8>
  439994:	ldr	x8, [x24], #32
  439998:	cmp	w0, #0x0
  43999c:	cset	w19, eq  // eq = none
  4399a0:	cbnz	x8, 43997c <argp_failure@@Base+0xe10>
  4399a4:	cbz	w25, 4399d4 <argp_failure@@Base+0xe68>
  4399a8:	cbz	w19, 4399d4 <argp_failure@@Base+0xe68>
  4399ac:	ldrb	w9, [x23]
  4399b0:	ldrb	w8, [x26]
  4399b4:	cbz	w9, 4399c8 <argp_failure@@Base+0xe5c>
  4399b8:	add	w8, w8, #0x1
  4399bc:	mov	w19, wzr
  4399c0:	strb	w8, [x26]
  4399c4:	b	4399d4 <argp_failure@@Base+0xe68>
  4399c8:	cbz	w8, 4399d0 <argp_failure@@Base+0xe64>
  4399cc:	strb	wzr, [x26]
  4399d0:	mov	w19, #0x1                   	// #1
  4399d4:	cmp	w19, #0x0
  4399d8:	ldp	x20, x19, [sp, #112]
  4399dc:	ldp	x22, x21, [sp, #96]
  4399e0:	ldp	x24, x23, [sp, #80]
  4399e4:	ldp	x26, x25, [sp, #64]
  4399e8:	ldp	x28, x27, [sp, #48]
  4399ec:	ldp	x29, x30, [sp, #32]
  4399f0:	cset	w0, eq  // eq = none
  4399f4:	add	sp, sp, #0x80
  4399f8:	ret
  4399fc:	sub	sp, sp, #0x70
  439a00:	stp	x29, x30, [sp, #16]
  439a04:	stp	x28, x27, [sp, #32]
  439a08:	stp	x26, x25, [sp, #48]
  439a0c:	stp	x24, x23, [sp, #64]
  439a10:	stp	x22, x21, [sp, #80]
  439a14:	stp	x20, x19, [sp, #96]
  439a18:	mov	x24, x0
  439a1c:	ldr	x8, [x24, #24]
  439a20:	ldr	x0, [x0, #48]
  439a24:	mov	w20, w2
  439a28:	mov	x21, x1
  439a2c:	mov	w2, #0x5                   	// #5
  439a30:	mov	x1, x8
  439a34:	add	x29, sp, #0x10
  439a38:	mov	x19, x5
  439a3c:	mov	w22, w4
  439a40:	mov	w23, w3
  439a44:	bl	4048b0 <dcgettext@plt>
  439a48:	ldr	x27, [x24, #32]
  439a4c:	mov	x25, x0
  439a50:	cbz	x0, 439ad8 <argp_failure@@Base+0xf6c>
  439a54:	mov	w1, #0xb                   	// #11
  439a58:	mov	x0, x25
  439a5c:	bl	404750 <strchr@plt>
  439a60:	cmp	x0, #0x0
  439a64:	csinc	x9, xzr, x0, eq  // eq = none
  439a68:	cmp	x0, #0x0
  439a6c:	sub	x8, x0, x25
  439a70:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  439a74:	csel	x26, x8, xzr, eq  // eq = none
  439a78:	cmp	w20, #0x0
  439a7c:	csel	x25, x25, x9, eq  // eq = none
  439a80:	ldr	x8, [x24, #40]
  439a84:	mov	w28, #0x1                   	// #1
  439a88:	movk	w28, #0x200, lsl #16
  439a8c:	cbz	x8, 439aec <argp_failure@@Base+0xf80>
  439a90:	cbz	x26, 439aa4 <argp_failure@@Base+0xf38>
  439a94:	mov	x0, x25
  439a98:	mov	x1, x26
  439a9c:	bl	404730 <strndup@plt>
  439aa0:	mov	x25, x0
  439aa4:	mov	x0, x24
  439aa8:	mov	x1, x21
  439aac:	bl	43b20c <argp_parse@@Base+0xb60>
  439ab0:	ldr	x8, [x24, #40]
  439ab4:	cmp	w20, #0x0
  439ab8:	mov	x2, x0
  439abc:	cinc	w0, w28, ne  // ne = any
  439ac0:	mov	x1, x25
  439ac4:	str	x2, [sp, #8]
  439ac8:	blr	x8
  439acc:	mov	x28, x0
  439ad0:	cbnz	x28, 439af8 <argp_failure@@Base+0xf8c>
  439ad4:	b	439c44 <argp_failure@@Base+0x10d8>
  439ad8:	mov	x26, xzr
  439adc:	ldr	x8, [x24, #40]
  439ae0:	mov	w28, #0x1                   	// #1
  439ae4:	movk	w28, #0x200, lsl #16
  439ae8:	cbnz	x8, 439a90 <argp_failure@@Base+0xf24>
  439aec:	str	xzr, [sp, #8]
  439af0:	mov	x28, x25
  439af4:	cbz	x28, 439c44 <argp_failure@@Base+0x10d8>
  439af8:	cbz	w23, 439b2c <argp_failure@@Base+0xfc0>
  439afc:	ldp	x8, x9, [x19, #56]
  439b00:	cmp	x8, x9
  439b04:	b.cc	439b1c <argp_failure@@Base+0xfb0>  // b.lo, b.ul, b.last
  439b08:	mov	w1, #0x1                   	// #1
  439b0c:	mov	x0, x19
  439b10:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439b14:	cbz	w0, 439b2c <argp_failure@@Base+0xfc0>
  439b18:	ldr	x8, [x19, #56]
  439b1c:	add	x9, x8, #0x1
  439b20:	mov	w10, #0xa                   	// #10
  439b24:	str	x9, [x19, #56]
  439b28:	strb	w10, [x8]
  439b2c:	str	w22, [sp, #4]
  439b30:	mov	x22, x27
  439b34:	cbz	x26, 439b7c <argp_failure@@Base+0x1010>
  439b38:	cmp	x28, x25
  439b3c:	b.ne	439b7c <argp_failure@@Base+0x1010>  // b.any
  439b40:	ldp	x0, x8, [x19, #56]
  439b44:	add	x9, x0, x26
  439b48:	cmp	x9, x8
  439b4c:	b.ls	439b64 <argp_failure@@Base+0xff8>  // b.plast
  439b50:	mov	x0, x19
  439b54:	mov	x1, x26
  439b58:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439b5c:	cbz	w0, 439bc8 <argp_failure@@Base+0x105c>
  439b60:	ldr	x0, [x19, #56]
  439b64:	mov	x1, x25
  439b68:	mov	x2, x26
  439b6c:	bl	403e80 <memcpy@plt>
  439b70:	ldr	x8, [x19, #56]
  439b74:	add	x8, x8, x26
  439b78:	b	439bc4 <argp_failure@@Base+0x1058>
  439b7c:	mov	x0, x28
  439b80:	bl	403f00 <strlen@plt>
  439b84:	cbz	x0, 439bc8 <argp_failure@@Base+0x105c>
  439b88:	mov	x27, x0
  439b8c:	ldp	x0, x8, [x19, #56]
  439b90:	add	x9, x0, x27
  439b94:	cmp	x9, x8
  439b98:	b.ls	439bb0 <argp_failure@@Base+0x1044>  // b.plast
  439b9c:	mov	x0, x19
  439ba0:	mov	x1, x27
  439ba4:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439ba8:	cbz	w0, 439bc8 <argp_failure@@Base+0x105c>
  439bac:	ldr	x0, [x19, #56]
  439bb0:	mov	x1, x28
  439bb4:	mov	x2, x27
  439bb8:	bl	403e80 <memcpy@plt>
  439bbc:	ldr	x8, [x19, #56]
  439bc0:	add	x8, x8, x27
  439bc4:	str	x8, [x19, #56]
  439bc8:	ldp	x9, x8, [x19, #48]
  439bcc:	ldr	x10, [x19, #32]
  439bd0:	mov	x27, x22
  439bd4:	sub	x8, x8, x9
  439bd8:	cmp	x8, x10
  439bdc:	b.ls	439be8 <argp_failure@@Base+0x107c>  // b.plast
  439be0:	mov	x0, x19
  439be4:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  439be8:	ldr	x8, [x19, #40]
  439bec:	ldr	x9, [x19, #8]
  439bf0:	ldr	w22, [sp, #4]
  439bf4:	bic	x8, x8, x8, asr #63
  439bf8:	cmp	x8, x9
  439bfc:	b.ls	439c30 <argp_failure@@Base+0x10c4>  // b.plast
  439c00:	ldp	x8, x9, [x19, #56]
  439c04:	cmp	x8, x9
  439c08:	b.cc	439c20 <argp_failure@@Base+0x10b4>  // b.lo, b.ul, b.last
  439c0c:	mov	w1, #0x1                   	// #1
  439c10:	mov	x0, x19
  439c14:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439c18:	cbz	w0, 439c30 <argp_failure@@Base+0x10c4>
  439c1c:	ldr	x8, [x19, #56]
  439c20:	add	x9, x8, #0x1
  439c24:	mov	w10, #0xa                   	// #10
  439c28:	str	x9, [x19, #56]
  439c2c:	strb	w10, [x8]
  439c30:	cmp	x28, x25
  439c34:	b.eq	439c40 <argp_failure@@Base+0x10d4>  // b.none
  439c38:	mov	x0, x28
  439c3c:	bl	4046b0 <free@plt>
  439c40:	mov	w28, #0x1                   	// #1
  439c44:	cbz	x26, 439c5c <argp_failure@@Base+0x10f0>
  439c48:	cbz	x25, 439c5c <argp_failure@@Base+0x10f0>
  439c4c:	ldr	x8, [x24, #40]
  439c50:	cbz	x8, 439c5c <argp_failure@@Base+0x10f0>
  439c54:	mov	x0, x25
  439c58:	bl	4046b0 <free@plt>
  439c5c:	cbz	w20, 439d7c <argp_failure@@Base+0x1210>
  439c60:	ldr	x8, [x24, #40]
  439c64:	cbz	x8, 439d7c <argp_failure@@Base+0x1210>
  439c68:	ldr	x2, [sp, #8]
  439c6c:	mov	w9, #0x1                   	// #1
  439c70:	movk	w9, #0x200, lsl #16
  439c74:	add	w0, w9, #0x3
  439c78:	mov	x1, xzr
  439c7c:	blr	x8
  439c80:	cbz	x0, 439d7c <argp_failure@@Base+0x1210>
  439c84:	mov	x24, x0
  439c88:	orr	w8, w28, w23
  439c8c:	cbz	w8, 439cc0 <argp_failure@@Base+0x1154>
  439c90:	ldp	x8, x9, [x19, #56]
  439c94:	cmp	x8, x9
  439c98:	b.cc	439cb0 <argp_failure@@Base+0x1144>  // b.lo, b.ul, b.last
  439c9c:	mov	w1, #0x1                   	// #1
  439ca0:	mov	x0, x19
  439ca4:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439ca8:	cbz	w0, 439cc0 <argp_failure@@Base+0x1154>
  439cac:	ldr	x8, [x19, #56]
  439cb0:	add	x9, x8, #0x1
  439cb4:	mov	w10, #0xa                   	// #10
  439cb8:	str	x9, [x19, #56]
  439cbc:	strb	w10, [x8]
  439cc0:	mov	x0, x24
  439cc4:	bl	403f00 <strlen@plt>
  439cc8:	cbz	x0, 439d0c <argp_failure@@Base+0x11a0>
  439ccc:	mov	x25, x0
  439cd0:	ldp	x0, x8, [x19, #56]
  439cd4:	add	x9, x0, x25
  439cd8:	cmp	x9, x8
  439cdc:	b.ls	439cf4 <argp_failure@@Base+0x1188>  // b.plast
  439ce0:	mov	x0, x19
  439ce4:	mov	x1, x25
  439ce8:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439cec:	cbz	w0, 439d0c <argp_failure@@Base+0x11a0>
  439cf0:	ldr	x0, [x19, #56]
  439cf4:	mov	x1, x24
  439cf8:	mov	x2, x25
  439cfc:	bl	403e80 <memcpy@plt>
  439d00:	ldr	x8, [x19, #56]
  439d04:	add	x8, x8, x25
  439d08:	str	x8, [x19, #56]
  439d0c:	mov	x0, x24
  439d10:	bl	4046b0 <free@plt>
  439d14:	ldp	x9, x8, [x19, #48]
  439d18:	ldr	x10, [x19, #32]
  439d1c:	sub	x8, x8, x9
  439d20:	cmp	x8, x10
  439d24:	b.ls	439d30 <argp_failure@@Base+0x11c4>  // b.plast
  439d28:	mov	x0, x19
  439d2c:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  439d30:	ldr	x8, [x19, #40]
  439d34:	ldr	x9, [x19, #8]
  439d38:	bic	x8, x8, x8, asr #63
  439d3c:	cmp	x8, x9
  439d40:	b.ls	439d78 <argp_failure@@Base+0x120c>  // b.plast
  439d44:	ldp	x8, x9, [x19, #56]
  439d48:	cmp	x8, x9
  439d4c:	b.cc	439d68 <argp_failure@@Base+0x11fc>  // b.lo, b.ul, b.last
  439d50:	mov	w1, #0x1                   	// #1
  439d54:	mov	x0, x19
  439d58:	mov	w28, #0x1                   	// #1
  439d5c:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  439d60:	cbz	w0, 439d7c <argp_failure@@Base+0x1210>
  439d64:	ldr	x8, [x19, #56]
  439d68:	add	x9, x8, #0x1
  439d6c:	mov	w10, #0xa                   	// #10
  439d70:	str	x9, [x19, #56]
  439d74:	strb	w10, [x8]
  439d78:	mov	w28, #0x1                   	// #1
  439d7c:	cbz	x27, 439dfc <argp_failure@@Base+0x1290>
  439d80:	ldr	x8, [x27]
  439d84:	cbz	x8, 439dfc <argp_failure@@Base+0x1290>
  439d88:	cbz	w22, 439dc8 <argp_failure@@Base+0x125c>
  439d8c:	cmp	w23, #0x0
  439d90:	cset	w23, ne  // ne = any
  439d94:	add	x24, x27, #0x20
  439d98:	cbnz	w28, 439dfc <argp_failure@@Base+0x1290>
  439d9c:	mov	x0, x8
  439da0:	mov	x1, x21
  439da4:	mov	w2, w20
  439da8:	mov	w3, w23
  439dac:	mov	w4, w22
  439db0:	mov	x5, x19
  439db4:	bl	4399fc <argp_failure@@Base+0xe90>
  439db8:	ldr	x8, [x24], #32
  439dbc:	mov	w28, w0
  439dc0:	cbnz	x8, 439d98 <argp_failure@@Base+0x122c>
  439dc4:	b	439dfc <argp_failure@@Base+0x1290>
  439dc8:	add	x22, x27, #0x20
  439dcc:	orr	w9, w28, w23
  439dd0:	cmp	w9, #0x0
  439dd4:	cset	w3, ne  // ne = any
  439dd8:	mov	x0, x8
  439ddc:	mov	x1, x21
  439de0:	mov	w2, w20
  439de4:	mov	w4, wzr
  439de8:	mov	x5, x19
  439dec:	bl	4399fc <argp_failure@@Base+0xe90>
  439df0:	ldr	x8, [x22], #32
  439df4:	orr	w28, w0, w28
  439df8:	cbnz	x8, 439dcc <argp_failure@@Base+0x1260>
  439dfc:	mov	w0, w28
  439e00:	ldp	x20, x19, [sp, #96]
  439e04:	ldp	x22, x21, [sp, #80]
  439e08:	ldp	x24, x23, [sp, #64]
  439e0c:	ldp	x26, x25, [sp, #48]
  439e10:	ldp	x28, x27, [sp, #32]
  439e14:	ldp	x29, x30, [sp, #16]
  439e18:	add	sp, sp, #0x70
  439e1c:	ret
  439e20:	stp	x29, x30, [sp, #-96]!
  439e24:	stp	x28, x27, [sp, #16]
  439e28:	stp	x26, x25, [sp, #32]
  439e2c:	stp	x24, x23, [sp, #48]
  439e30:	stp	x22, x21, [sp, #64]
  439e34:	stp	x20, x19, [sp, #80]
  439e38:	ldr	x8, [x0, #32]
  439e3c:	ldr	x9, [x1, #32]
  439e40:	ldr	w11, [x0, #24]
  439e44:	ldr	w10, [x1, #24]
  439e48:	mov	x29, sp
  439e4c:	cmp	x8, x9
  439e50:	b.eq	439f08 <argp_failure@@Base+0x139c>  // b.none
  439e54:	cbz	x8, 439e80 <argp_failure@@Base+0x1314>
  439e58:	cbz	x9, 439ea0 <argp_failure@@Base+0x1334>
  439e5c:	ldr	w10, [x8, #32]
  439e60:	ldr	w11, [x9, #32]
  439e64:	cmp	w10, w11
  439e68:	b.le	439ec8 <argp_failure@@Base+0x135c>
  439e6c:	ldr	x8, [x8, #16]
  439e70:	ldr	w10, [x8, #32]
  439e74:	cmp	w10, w11
  439e78:	b.gt	439e6c <argp_failure@@Base+0x1300>
  439e7c:	b	439ec8 <argp_failure@@Base+0x135c>
  439e80:	mov	x8, x9
  439e84:	ldr	x9, [x9, #16]
  439e88:	cbnz	x9, 439e80 <argp_failure@@Base+0x1314>
  439e8c:	ldr	w8, [x8, #12]
  439e90:	subs	w0, w11, w8
  439e94:	b.ne	43a03c <argp_failure@@Base+0x14d0>  // b.any
  439e98:	mov	w0, #0xffffffff            	// #-1
  439e9c:	b	43a204 <argp_failure@@Base+0x1698>
  439ea0:	mov	x9, x8
  439ea4:	ldr	x8, [x8, #16]
  439ea8:	cbnz	x8, 439ea0 <argp_failure@@Base+0x1334>
  439eac:	ldr	w8, [x9, #12]
  439eb0:	subs	w0, w8, w10
  439eb4:	b.ne	43a054 <argp_failure@@Base+0x14e8>  // b.any
  439eb8:	mov	w0, #0x1                   	// #1
  439ebc:	b	43a204 <argp_failure@@Base+0x1698>
  439ec0:	ldr	x9, [x9, #16]
  439ec4:	ldr	w11, [x9, #32]
  439ec8:	cmp	w11, w10
  439ecc:	b.gt	439ec0 <argp_failure@@Base+0x1354>
  439ed0:	mov	x11, x9
  439ed4:	mov	x10, x8
  439ed8:	ldr	x8, [x8, #16]
  439edc:	ldr	x9, [x9, #16]
  439ee0:	cmp	x8, x9
  439ee4:	b.ne	439ed0 <argp_failure@@Base+0x1364>  // b.any
  439ee8:	ldr	w8, [x10, #12]
  439eec:	ldr	w9, [x11, #12]
  439ef0:	subs	w0, w8, w9
  439ef4:	b.ne	43a024 <argp_failure@@Base+0x14b8>  // b.any
  439ef8:	ldr	w8, [x11, #8]
  439efc:	ldr	w9, [x10, #8]
  439f00:	sub	w0, w8, w9
  439f04:	b	43a204 <argp_failure@@Base+0x1698>
  439f08:	mov	x19, x0
  439f0c:	subs	w0, w11, w10
  439f10:	b.ne	43a00c <argp_failure@@Base+0x14a0>  // b.any
  439f14:	ldr	w23, [x19, #8]
  439f18:	mov	x20, x1
  439f1c:	cbz	w23, 43a06c <argp_failure@@Base+0x1500>
  439f20:	ldr	x8, [x19]
  439f24:	ldr	x22, [x19, #16]
  439f28:	sub	w25, w23, #0x1
  439f2c:	add	x24, x8, #0x18
  439f30:	ldr	w21, [x24]
  439f34:	tbnz	w21, #3, 439f74 <argp_failure@@Base+0x1408>
  439f38:	ldur	w26, [x24, #-16]
  439f3c:	sub	w8, w26, #0x1
  439f40:	cmp	w8, #0xfe
  439f44:	b.hi	439f74 <argp_failure@@Base+0x1408>  // b.pmore
  439f48:	bl	404640 <__ctype_b_loc@plt>
  439f4c:	ldr	x8, [x0]
  439f50:	ldrh	w8, [x8, x26, lsl #1]
  439f54:	tbz	w8, #14, 439f74 <argp_failure@@Base+0x1408>
  439f58:	ldrb	w8, [x22]
  439f5c:	cmp	w26, w8
  439f60:	b.ne	439f74 <argp_failure@@Base+0x1408>  // b.any
  439f64:	tst	w21, #0x2
  439f68:	csel	w21, w26, wzr, eq  // eq = none
  439f6c:	add	x22, x22, #0x1
  439f70:	b	439f78 <argp_failure@@Base+0x140c>
  439f74:	mov	w21, wzr
  439f78:	subs	w25, w25, #0x1
  439f7c:	b.cc	439f88 <argp_failure@@Base+0x141c>  // b.lo, b.ul, b.last
  439f80:	add	x24, x24, #0x30
  439f84:	cbz	w21, 439f30 <argp_failure@@Base+0x13c4>
  439f88:	ldr	w24, [x20, #8]
  439f8c:	cbz	w24, 43a078 <argp_failure@@Base+0x150c>
  439f90:	ldr	x25, [x20]
  439f94:	ldr	x20, [x20, #16]
  439f98:	sub	w27, w24, #0x1
  439f9c:	add	x26, x25, #0x18
  439fa0:	ldr	w22, [x26]
  439fa4:	tbnz	w22, #3, 439fe4 <argp_failure@@Base+0x1478>
  439fa8:	ldur	w28, [x26, #-16]
  439fac:	sub	w8, w28, #0x1
  439fb0:	cmp	w8, #0xfe
  439fb4:	b.hi	439fe4 <argp_failure@@Base+0x1478>  // b.pmore
  439fb8:	bl	404640 <__ctype_b_loc@plt>
  439fbc:	ldr	x8, [x0]
  439fc0:	ldrh	w8, [x8, x28, lsl #1]
  439fc4:	tbz	w8, #14, 439fe4 <argp_failure@@Base+0x1478>
  439fc8:	ldrb	w8, [x20]
  439fcc:	cmp	w28, w8
  439fd0:	b.ne	439fe4 <argp_failure@@Base+0x1478>  // b.any
  439fd4:	tst	w22, #0x2
  439fd8:	csel	w22, w28, wzr, eq  // eq = none
  439fdc:	add	x20, x20, #0x1
  439fe0:	b	439fe8 <argp_failure@@Base+0x147c>
  439fe4:	mov	w22, wzr
  439fe8:	subs	w27, w27, #0x1
  439fec:	b.cc	439ff8 <argp_failure@@Base+0x148c>  // b.lo, b.ul, b.last
  439ff0:	add	x26, x26, #0x30
  439ff4:	cbz	w22, 439fa0 <argp_failure@@Base+0x1434>
  439ff8:	ldr	x9, [x19]
  439ffc:	ldr	w26, [x25, #24]
  43a000:	ldr	w8, [x9, #24]
  43a004:	cbnz	w23, 43a0a4 <argp_failure@@Base+0x1538>
  43a008:	b	43a090 <argp_failure@@Base+0x1524>
  43a00c:	tst	w10, w11
  43a010:	b.lt	43a204 <argp_failure@@Base+0x1698>  // b.tstop
  43a014:	orr	w8, w10, w11
  43a018:	tbz	w8, #31, 43a204 <argp_failure@@Base+0x1698>
  43a01c:	sub	w0, w10, w11
  43a020:	b	43a204 <argp_failure@@Base+0x1698>
  43a024:	tst	w9, w8
  43a028:	b.lt	43a204 <argp_failure@@Base+0x1698>  // b.tstop
  43a02c:	orr	w10, w9, w8
  43a030:	tbz	w10, #31, 43a204 <argp_failure@@Base+0x1698>
  43a034:	sub	w0, w9, w8
  43a038:	b	43a204 <argp_failure@@Base+0x1698>
  43a03c:	tst	w8, w11
  43a040:	b.lt	43a204 <argp_failure@@Base+0x1698>  // b.tstop
  43a044:	orr	w9, w8, w11
  43a048:	tbz	w9, #31, 43a204 <argp_failure@@Base+0x1698>
  43a04c:	sub	w0, w8, w11
  43a050:	b	43a204 <argp_failure@@Base+0x1698>
  43a054:	tst	w8, w10
  43a058:	b.lt	43a204 <argp_failure@@Base+0x1698>  // b.tstop
  43a05c:	orr	w9, w8, w10
  43a060:	tbz	w9, #31, 43a204 <argp_failure@@Base+0x1698>
  43a064:	sub	w0, w10, w8
  43a068:	b	43a204 <argp_failure@@Base+0x1698>
  43a06c:	mov	w21, wzr
  43a070:	ldr	w24, [x20, #8]
  43a074:	cbnz	w24, 439f90 <argp_failure@@Base+0x1424>
  43a078:	ldr	x25, [x20]
  43a07c:	mov	w22, wzr
  43a080:	ldr	x9, [x19]
  43a084:	ldr	w26, [x25, #24]
  43a088:	ldr	w8, [x9, #24]
  43a08c:	cbnz	w23, 43a0a4 <argp_failure@@Base+0x1538>
  43a090:	mov	x19, xzr
  43a094:	b	43a0b4 <argp_failure@@Base+0x1548>
  43a098:	subs	w23, w23, #0x1
  43a09c:	add	x9, x9, #0x30
  43a0a0:	b.eq	43a090 <argp_failure@@Base+0x1524>  // b.none
  43a0a4:	ldr	x19, [x9]
  43a0a8:	cbz	x19, 43a098 <argp_failure@@Base+0x152c>
  43a0ac:	ldrb	w10, [x9, #24]
  43a0b0:	tbnz	w10, #1, 43a098 <argp_failure@@Base+0x152c>
  43a0b4:	cbnz	w24, 43a0cc <argp_failure@@Base+0x1560>
  43a0b8:	mov	x20, xzr
  43a0bc:	b	43a0dc <argp_failure@@Base+0x1570>
  43a0c0:	subs	w24, w24, #0x1
  43a0c4:	add	x25, x25, #0x30
  43a0c8:	b.eq	43a0b8 <argp_failure@@Base+0x154c>  // b.none
  43a0cc:	ldr	x20, [x25]
  43a0d0:	cbz	x20, 43a0c0 <argp_failure@@Base+0x1554>
  43a0d4:	ldrb	w9, [x25, #24]
  43a0d8:	tbnz	w9, #1, 43a0c0 <argp_failure@@Base+0x1554>
  43a0dc:	mov	w23, wzr
  43a0e0:	tbz	w8, #3, 43a128 <argp_failure@@Base+0x15bc>
  43a0e4:	cbz	x19, 43a128 <argp_failure@@Base+0x15bc>
  43a0e8:	bl	404640 <__ctype_b_loc@plt>
  43a0ec:	ldr	x8, [x0]
  43a0f0:	ldrb	w9, [x19]
  43a0f4:	ldrh	w10, [x8, x9, lsl #1]
  43a0f8:	tbz	w10, #13, 43a108 <argp_failure@@Base+0x159c>
  43a0fc:	ldrb	w9, [x19, #1]!
  43a100:	ldrh	w10, [x8, x9, lsl #1]
  43a104:	tbnz	w10, #13, 43a0fc <argp_failure@@Base+0x1590>
  43a108:	cmp	w9, #0x2d
  43a10c:	cset	w23, ne  // ne = any
  43a110:	cbz	w9, 43a128 <argp_failure@@Base+0x15bc>
  43a114:	and	x9, x9, #0xff
  43a118:	ldrh	w9, [x8, x9, lsl #1]
  43a11c:	tbnz	w9, #3, 43a128 <argp_failure@@Base+0x15bc>
  43a120:	ldrb	w9, [x19, #1]!
  43a124:	cbnz	w9, 43a114 <argp_failure@@Base+0x15a8>
  43a128:	mov	w9, wzr
  43a12c:	tbz	w26, #3, 43a174 <argp_failure@@Base+0x1608>
  43a130:	cbz	x20, 43a174 <argp_failure@@Base+0x1608>
  43a134:	bl	404640 <__ctype_b_loc@plt>
  43a138:	ldr	x8, [x0]
  43a13c:	ldrb	w10, [x20]
  43a140:	ldrh	w9, [x8, x10, lsl #1]
  43a144:	tbz	w9, #13, 43a154 <argp_failure@@Base+0x15e8>
  43a148:	ldrb	w10, [x20, #1]!
  43a14c:	ldrh	w9, [x8, x10, lsl #1]
  43a150:	tbnz	w9, #13, 43a148 <argp_failure@@Base+0x15dc>
  43a154:	cmp	w10, #0x2d
  43a158:	cset	w9, ne  // ne = any
  43a15c:	cbz	w10, 43a174 <argp_failure@@Base+0x1608>
  43a160:	and	x10, x10, #0xff
  43a164:	ldrh	w10, [x8, x10, lsl #1]
  43a168:	tbnz	w10, #3, 43a174 <argp_failure@@Base+0x1608>
  43a16c:	ldrb	w10, [x20, #1]!
  43a170:	cbnz	w10, 43a160 <argp_failure@@Base+0x15f4>
  43a174:	subs	w0, w23, w9
  43a178:	b.ne	43a204 <argp_failure@@Base+0x1698>  // b.any
  43a17c:	orr	w8, w22, w21
  43a180:	tst	w8, #0xff
  43a184:	b.ne	43a1b4 <argp_failure@@Base+0x1648>  // b.any
  43a188:	cbz	x19, 43a1b4 <argp_failure@@Base+0x1648>
  43a18c:	cbz	x20, 43a1b4 <argp_failure@@Base+0x1648>
  43a190:	mov	x0, x19
  43a194:	mov	x1, x20
  43a198:	ldp	x20, x19, [sp, #80]
  43a19c:	ldp	x22, x21, [sp, #64]
  43a1a0:	ldp	x24, x23, [sp, #48]
  43a1a4:	ldp	x26, x25, [sp, #32]
  43a1a8:	ldp	x28, x27, [sp, #16]
  43a1ac:	ldp	x29, x30, [sp], #96
  43a1b0:	b	404420 <strcasecmp@plt>
  43a1b4:	tst	w21, #0xff
  43a1b8:	b.ne	43a1c4 <argp_failure@@Base+0x1658>  // b.any
  43a1bc:	cbz	x19, 43a1c4 <argp_failure@@Base+0x1658>
  43a1c0:	ldrb	w21, [x19]
  43a1c4:	tst	w22, #0xff
  43a1c8:	b.ne	43a1dc <argp_failure@@Base+0x1670>  // b.any
  43a1cc:	cbz	x20, 43a1d8 <argp_failure@@Base+0x166c>
  43a1d0:	ldrb	w22, [x20]
  43a1d4:	b	43a1dc <argp_failure@@Base+0x1670>
  43a1d8:	mov	w22, wzr
  43a1dc:	bl	404100 <__ctype_tolower_loc@plt>
  43a1e0:	ldr	x8, [x0]
  43a1e4:	and	x9, x21, #0xff
  43a1e8:	and	x10, x22, #0xff
  43a1ec:	ldr	w9, [x8, x9, lsl #2]
  43a1f0:	ldr	w8, [x8, x10, lsl #2]
  43a1f4:	and	w10, w22, #0xff
  43a1f8:	subs	w8, w9, w8
  43a1fc:	sub	w9, w10, w21, uxtb
  43a200:	csel	w0, w9, w8, eq  // eq = none
  43a204:	ldp	x20, x19, [sp, #80]
  43a208:	ldp	x22, x21, [sp, #64]
  43a20c:	ldp	x24, x23, [sp, #48]
  43a210:	ldp	x26, x25, [sp, #32]
  43a214:	ldp	x28, x27, [sp, #16]
  43a218:	ldp	x29, x30, [sp], #96
  43a21c:	ret
  43a220:	stp	x29, x30, [sp, #-64]!
  43a224:	stp	x22, x21, [sp, #32]
  43a228:	stp	x20, x19, [sp, #48]
  43a22c:	ldr	w8, [x1, #24]
  43a230:	mov	x20, x1
  43a234:	mov	w19, w0
  43a238:	str	x23, [sp, #16]
  43a23c:	mov	x29, sp
  43a240:	cbz	w8, 43a324 <argp_failure@@Base+0x17b8>
  43a244:	ldr	x9, [x20, #16]
  43a248:	ldr	x8, [x20]
  43a24c:	ldr	x23, [x9]
  43a250:	ldr	x22, [x8, #32]
  43a254:	cbz	x23, 43a2a4 <argp_failure@@Base+0x1738>
  43a258:	ldr	w9, [x9, #8]
  43a25c:	cbz	w9, 43a2a4 <argp_failure@@Base+0x1738>
  43a260:	ldr	w8, [x8, #24]
  43a264:	ldr	w9, [x23, #24]
  43a268:	cmp	w8, w9
  43a26c:	b.eq	43a2a4 <argp_failure@@Base+0x1738>  // b.none
  43a270:	ldr	x21, [x20, #8]
  43a274:	ldp	x8, x9, [x21, #56]
  43a278:	cmp	x8, x9
  43a27c:	b.cc	43a294 <argp_failure@@Base+0x1728>  // b.lo, b.ul, b.last
  43a280:	mov	w1, #0x1                   	// #1
  43a284:	mov	x0, x21
  43a288:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a28c:	cbz	w0, 43a2a4 <argp_failure@@Base+0x1738>
  43a290:	ldr	x8, [x21, #56]
  43a294:	add	x9, x8, #0x1
  43a298:	mov	w10, #0xa                   	// #10
  43a29c:	str	x9, [x21, #56]
  43a2a0:	strb	w10, [x8]
  43a2a4:	cbz	x22, 43a31c <argp_failure@@Base+0x17b0>
  43a2a8:	ldr	x0, [x22]
  43a2ac:	cbz	x0, 43a31c <argp_failure@@Base+0x17b0>
  43a2b0:	ldrb	w8, [x0]
  43a2b4:	cbz	w8, 43a31c <argp_failure@@Base+0x17b0>
  43a2b8:	cbz	x23, 43a2e4 <argp_failure@@Base+0x1778>
  43a2bc:	ldr	x8, [x23, #32]
  43a2c0:	cmp	x8, x22
  43a2c4:	b.eq	43a31c <argp_failure@@Base+0x17b0>  // b.none
  43a2c8:	cbz	x8, 43a2dc <argp_failure@@Base+0x1770>
  43a2cc:	ldr	x8, [x8, #16]
  43a2d0:	cmp	x8, x22
  43a2d4:	b.eq	43a2dc <argp_failure@@Base+0x1770>  // b.none
  43a2d8:	cbnz	x8, 43a2cc <argp_failure@@Base+0x1760>
  43a2dc:	cmp	x8, x22
  43a2e0:	b.eq	43a31c <argp_failure@@Base+0x17b0>  // b.none
  43a2e4:	ldr	x8, [x20, #8]
  43a2e8:	ldr	x1, [x22, #24]
  43a2ec:	mov	x2, x20
  43a2f0:	ldrsw	x23, [x8, #24]
  43a2f4:	bl	43a3f4 <argp_failure@@Base+0x1888>
  43a2f8:	ldr	x21, [x20, #8]
  43a2fc:	ldp	x9, x8, [x21, #48]
  43a300:	ldr	x10, [x21, #32]
  43a304:	sub	x8, x8, x9
  43a308:	cmp	x8, x10
  43a30c:	b.ls	43a318 <argp_failure@@Base+0x17ac>  // b.plast
  43a310:	mov	x0, x21
  43a314:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43a318:	str	x23, [x21, #24]
  43a31c:	str	wzr, [x20, #24]
  43a320:	b	43a360 <argp_failure@@Base+0x17f4>
  43a324:	ldr	x21, [x20, #8]
  43a328:	ldp	x8, x9, [x21, #56]
  43a32c:	add	x10, x8, #0x2
  43a330:	cmp	x10, x9
  43a334:	b.ls	43a34c <argp_failure@@Base+0x17e0>  // b.plast
  43a338:	mov	w1, #0x2                   	// #2
  43a33c:	mov	x0, x21
  43a340:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a344:	cbz	w0, 43a360 <argp_failure@@Base+0x17f4>
  43a348:	ldr	x8, [x21, #56]
  43a34c:	mov	w9, #0x202c                	// #8236
  43a350:	strh	w9, [x8]
  43a354:	ldr	x8, [x21, #56]
  43a358:	add	x8, x8, #0x2
  43a35c:	str	x8, [x21, #56]
  43a360:	ldr	x20, [x20, #8]
  43a364:	ldp	x9, x8, [x20, #48]
  43a368:	ldr	x10, [x20, #32]
  43a36c:	sub	x8, x8, x9
  43a370:	cmp	x8, x10
  43a374:	b.ls	43a380 <argp_failure@@Base+0x1814>  // b.plast
  43a378:	mov	x0, x20
  43a37c:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43a380:	ldr	x8, [x20, #40]
  43a384:	cmp	x8, #0x0
  43a388:	csel	w8, w8, wzr, gt
  43a38c:	sub	w8, w19, w8
  43a390:	cmp	w8, #0x1
  43a394:	b.lt	43a3e0 <argp_failure@@Base+0x1874>  // b.tstop
  43a398:	add	w19, w8, #0x1
  43a39c:	mov	w21, #0x20                  	// #32
  43a3a0:	b	43a3bc <argp_failure@@Base+0x1850>
  43a3a4:	add	x9, x8, #0x1
  43a3a8:	str	x9, [x20, #56]
  43a3ac:	strb	w21, [x8]
  43a3b0:	sub	w19, w19, #0x1
  43a3b4:	cmp	w19, #0x1
  43a3b8:	b.le	43a3e0 <argp_failure@@Base+0x1874>
  43a3bc:	ldp	x8, x9, [x20, #56]
  43a3c0:	cmp	x8, x9
  43a3c4:	b.cc	43a3a4 <argp_failure@@Base+0x1838>  // b.lo, b.ul, b.last
  43a3c8:	mov	w1, #0x1                   	// #1
  43a3cc:	mov	x0, x20
  43a3d0:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a3d4:	cbz	w0, 43a3b0 <argp_failure@@Base+0x1844>
  43a3d8:	ldr	x8, [x20, #56]
  43a3dc:	b	43a3a4 <argp_failure@@Base+0x1838>
  43a3e0:	ldp	x20, x19, [sp, #48]
  43a3e4:	ldp	x22, x21, [sp, #32]
  43a3e8:	ldr	x23, [sp, #16]
  43a3ec:	ldp	x29, x30, [sp], #64
  43a3f0:	ret
  43a3f4:	stp	x29, x30, [sp, #-80]!
  43a3f8:	stp	x24, x23, [sp, #32]
  43a3fc:	stp	x22, x21, [sp, #48]
  43a400:	stp	x20, x19, [sp, #64]
  43a404:	ldr	x8, [x1, #48]
  43a408:	mov	x19, x2
  43a40c:	mov	x21, x1
  43a410:	mov	x1, x0
  43a414:	mov	w2, #0x5                   	// #5
  43a418:	mov	x0, x8
  43a41c:	str	x25, [sp, #16]
  43a420:	mov	x29, sp
  43a424:	bl	4048b0 <dcgettext@plt>
  43a428:	mov	x20, x0
  43a42c:	cbz	x21, 43a488 <argp_failure@@Base+0x191c>
  43a430:	ldr	x8, [x21, #40]
  43a434:	cbz	x8, 43a488 <argp_failure@@Base+0x191c>
  43a438:	ldr	x1, [x19, #32]
  43a43c:	mov	x0, x21
  43a440:	bl	43b20c <argp_parse@@Base+0xb60>
  43a444:	ldr	x8, [x21, #40]
  43a448:	mov	x2, x0
  43a44c:	mov	w0, #0x3                   	// #3
  43a450:	movk	w0, #0x200, lsl #16
  43a454:	mov	x1, x20
  43a458:	blr	x8
  43a45c:	mov	x21, x0
  43a460:	cbnz	x21, 43a490 <argp_failure@@Base+0x1924>
  43a464:	cmp	x21, x20
  43a468:	b.eq	43a694 <argp_failure@@Base+0x1b28>  // b.none
  43a46c:	mov	x0, x21
  43a470:	ldp	x20, x19, [sp, #64]
  43a474:	ldp	x22, x21, [sp, #48]
  43a478:	ldp	x24, x23, [sp, #32]
  43a47c:	ldr	x25, [sp, #16]
  43a480:	ldp	x29, x30, [sp], #80
  43a484:	b	4046b0 <free@plt>
  43a488:	mov	x21, x20
  43a48c:	cbz	x21, 43a464 <argp_failure@@Base+0x18f8>
  43a490:	ldrb	w8, [x21]
  43a494:	cbz	w8, 43a680 <argp_failure@@Base+0x1b14>
  43a498:	ldr	x8, [x19, #16]
  43a49c:	ldr	x8, [x8]
  43a4a0:	cbz	x8, 43a4d8 <argp_failure@@Base+0x196c>
  43a4a4:	ldr	x22, [x19, #8]
  43a4a8:	ldp	x8, x9, [x22, #56]
  43a4ac:	cmp	x8, x9
  43a4b0:	b.cc	43a4c8 <argp_failure@@Base+0x195c>  // b.lo, b.ul, b.last
  43a4b4:	mov	w1, #0x1                   	// #1
  43a4b8:	mov	x0, x22
  43a4bc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a4c0:	cbz	w0, 43a4d8 <argp_failure@@Base+0x196c>
  43a4c4:	ldr	x8, [x22, #56]
  43a4c8:	add	x9, x8, #0x1
  43a4cc:	mov	w10, #0xa                   	// #10
  43a4d0:	str	x9, [x22, #56]
  43a4d4:	strb	w10, [x8]
  43a4d8:	ldr	x22, [x19, #8]
  43a4dc:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43a4e0:	ldr	w23, [x24, #4040]
  43a4e4:	ldp	x9, x8, [x22, #48]
  43a4e8:	ldr	x10, [x22, #32]
  43a4ec:	sub	x8, x8, x9
  43a4f0:	cmp	x8, x10
  43a4f4:	b.ls	43a500 <argp_failure@@Base+0x1994>  // b.plast
  43a4f8:	mov	x0, x22
  43a4fc:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43a500:	ldr	x8, [x22, #40]
  43a504:	cmp	x8, #0x0
  43a508:	csel	w8, w8, wzr, gt
  43a50c:	sub	w8, w23, w8
  43a510:	cmp	w8, #0x1
  43a514:	b.lt	43a560 <argp_failure@@Base+0x19f4>  // b.tstop
  43a518:	add	w23, w8, #0x1
  43a51c:	mov	w25, #0x20                  	// #32
  43a520:	b	43a53c <argp_failure@@Base+0x19d0>
  43a524:	add	x9, x8, #0x1
  43a528:	str	x9, [x22, #56]
  43a52c:	strb	w25, [x8]
  43a530:	sub	w23, w23, #0x1
  43a534:	cmp	w23, #0x1
  43a538:	b.le	43a560 <argp_failure@@Base+0x19f4>
  43a53c:	ldp	x8, x9, [x22, #56]
  43a540:	cmp	x8, x9
  43a544:	b.cc	43a524 <argp_failure@@Base+0x19b8>  // b.lo, b.ul, b.last
  43a548:	mov	w1, #0x1                   	// #1
  43a54c:	mov	x0, x22
  43a550:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a554:	cbz	w0, 43a530 <argp_failure@@Base+0x19c4>
  43a558:	ldr	x8, [x22, #56]
  43a55c:	b	43a524 <argp_failure@@Base+0x19b8>
  43a560:	ldr	x22, [x19, #8]
  43a564:	ldrsw	x25, [x24, #4040]
  43a568:	ldp	x10, x9, [x22, #48]
  43a56c:	ldr	x8, [x22, #32]
  43a570:	sub	x9, x9, x10
  43a574:	cmp	x9, x8
  43a578:	b.ls	43a5ac <argp_failure@@Base+0x1a40>  // b.plast
  43a57c:	mov	x0, x22
  43a580:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43a584:	ldr	x23, [x19, #8]
  43a588:	ldrsw	x24, [x24, #4040]
  43a58c:	ldp	x10, x9, [x23, #48]
  43a590:	ldr	x8, [x23, #32]
  43a594:	sub	x9, x9, x10
  43a598:	cmp	x9, x8
  43a59c:	str	x25, [x22, #8]
  43a5a0:	mov	x22, x23
  43a5a4:	b.hi	43a5c4 <argp_failure@@Base+0x1a58>  // b.pmore
  43a5a8:	b	43a5d0 <argp_failure@@Base+0x1a64>
  43a5ac:	mov	x24, x25
  43a5b0:	mov	x23, x22
  43a5b4:	cmp	x9, x8
  43a5b8:	str	x25, [x22, #8]
  43a5bc:	mov	x22, x23
  43a5c0:	b.ls	43a5d0 <argp_failure@@Base+0x1a64>  // b.plast
  43a5c4:	mov	x0, x23
  43a5c8:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43a5cc:	ldr	x22, [x19, #8]
  43a5d0:	mov	x0, x21
  43a5d4:	str	x24, [x23, #24]
  43a5d8:	bl	403f00 <strlen@plt>
  43a5dc:	cbz	x0, 43a620 <argp_failure@@Base+0x1ab4>
  43a5e0:	mov	x23, x0
  43a5e4:	ldp	x0, x8, [x22, #56]
  43a5e8:	add	x9, x0, x23
  43a5ec:	cmp	x9, x8
  43a5f0:	b.ls	43a608 <argp_failure@@Base+0x1a9c>  // b.plast
  43a5f4:	mov	x0, x22
  43a5f8:	mov	x1, x23
  43a5fc:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a600:	cbz	w0, 43a620 <argp_failure@@Base+0x1ab4>
  43a604:	ldr	x0, [x22, #56]
  43a608:	mov	x1, x21
  43a60c:	mov	x2, x23
  43a610:	bl	403e80 <memcpy@plt>
  43a614:	ldr	x8, [x22, #56]
  43a618:	add	x8, x8, x23
  43a61c:	str	x8, [x22, #56]
  43a620:	ldr	x23, [x19, #8]
  43a624:	ldp	x9, x8, [x23, #48]
  43a628:	ldr	x10, [x23, #32]
  43a62c:	mov	x22, x23
  43a630:	sub	x9, x8, x9
  43a634:	cmp	x9, x10
  43a638:	b.ls	43a64c <argp_failure@@Base+0x1ae0>  // b.plast
  43a63c:	mov	x0, x23
  43a640:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  43a644:	ldr	x22, [x19, #8]
  43a648:	ldr	x8, [x22, #56]
  43a64c:	str	xzr, [x23, #8]
  43a650:	ldr	x9, [x22, #64]
  43a654:	cmp	x8, x9
  43a658:	b.cc	43a670 <argp_failure@@Base+0x1b04>  // b.lo, b.ul, b.last
  43a65c:	mov	w1, #0x1                   	// #1
  43a660:	mov	x0, x22
  43a664:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  43a668:	cbz	w0, 43a680 <argp_failure@@Base+0x1b14>
  43a66c:	ldr	x8, [x22, #56]
  43a670:	add	x9, x8, #0x1
  43a674:	mov	w10, #0xa                   	// #10
  43a678:	str	x9, [x22, #56]
  43a67c:	strb	w10, [x8]
  43a680:	ldr	x8, [x19, #16]
  43a684:	mov	w9, #0x1                   	// #1
  43a688:	str	w9, [x8, #8]
  43a68c:	cmp	x21, x20
  43a690:	b.ne	43a46c <argp_failure@@Base+0x1900>  // b.any
  43a694:	ldp	x20, x19, [sp, #64]
  43a698:	ldp	x22, x21, [sp, #48]
  43a69c:	ldp	x24, x23, [sp, #32]
  43a6a0:	ldr	x25, [sp, #16]
  43a6a4:	ldp	x29, x30, [sp], #80
  43a6a8:	ret

000000000043a6ac <argp_parse@@Base>:
  43a6ac:	stp	x29, x30, [sp, #-96]!
  43a6b0:	stp	x28, x27, [sp, #16]
  43a6b4:	stp	x26, x25, [sp, #32]
  43a6b8:	stp	x24, x23, [sp, #48]
  43a6bc:	stp	x22, x21, [sp, #64]
  43a6c0:	stp	x20, x19, [sp, #80]
  43a6c4:	mov	x29, sp
  43a6c8:	sub	sp, sp, #0x170
  43a6cc:	mov	x19, sp
  43a6d0:	mov	w24, w3
  43a6d4:	mov	x22, x2
  43a6d8:	mov	w21, w1
  43a6dc:	mov	x25, x0
  43a6e0:	stp	x4, x5, [x19, #8]
  43a6e4:	tbnz	w3, #0, 43a700 <argp_parse@@Base+0x54>
  43a6e8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43a6ec:	ldr	x9, [x8, #80]
  43a6f0:	cbz	x9, 43aa58 <argp_parse@@Base+0x3ac>
  43a6f4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43a6f8:	ldr	x8, [x20, #120]
  43a6fc:	cbz	x8, 43aa6c <argp_parse@@Base+0x3c0>
  43a700:	add	x27, x19, #0x18
  43a704:	tbnz	w24, #4, 43a794 <argp_parse@@Base+0xe8>
  43a708:	mov	x10, sp
  43a70c:	sub	x8, x10, #0x80
  43a710:	mov	sp, x8
  43a714:	mov	x11, sp
  43a718:	sub	x9, x11, #0x40
  43a71c:	mov	sp, x9
  43a720:	movi	v0.2d, #0x0
  43a724:	stur	xzr, [x11, #-16]
  43a728:	stp	q0, q0, [x11, #-48]
  43a72c:	stur	q0, [x11, #-64]
  43a730:	stur	x8, [x11, #-32]
  43a734:	stp	q0, q0, [x10, #-32]
  43a738:	stp	q0, q0, [x10, #-64]
  43a73c:	stp	q0, q0, [x10, #-96]
  43a740:	stp	q0, q0, [x10, #-128]
  43a744:	cbz	x25, 43a74c <argp_parse@@Base+0xa0>
  43a748:	str	x25, [x8], #32
  43a74c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43a750:	ldr	x10, [x10, #4024]
  43a754:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43a758:	add	x11, x11, #0x798
  43a75c:	str	x11, [x8]
  43a760:	cbnz	x10, 43a778 <argp_parse@@Base+0xcc>
  43a764:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43a768:	ldr	x10, [x10, #2392]
  43a76c:	cbnz	x10, 43a778 <argp_parse@@Base+0xcc>
  43a770:	mov	w10, #0x1                   	// #1
  43a774:	b	43a788 <argp_parse@@Base+0xdc>
  43a778:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43a77c:	add	x10, x10, #0x7d0
  43a780:	str	x10, [x8, #32]
  43a784:	mov	w10, #0x2                   	// #2
  43a788:	lsl	x10, x10, #5
  43a78c:	mov	x25, x9
  43a790:	str	xzr, [x8, x10]
  43a794:	mov	w8, #0x1                   	// #1
  43a798:	movi	v0.2d, #0x0
  43a79c:	bic	w8, w8, w24, lsr #2
  43a7a0:	stur	q0, [x27, #248]
  43a7a4:	stur	q0, [x27, #232]
  43a7a8:	stur	q0, [x27, #216]
  43a7ac:	stp	x8, xzr, [x29, #-80]
  43a7b0:	stp	xzr, xzr, [x29, #-64]
  43a7b4:	cbz	x25, 43a7e8 <argp_parse@@Base+0x13c>
  43a7b8:	sub	x1, x29, #0x50
  43a7bc:	mov	x0, x25
  43a7c0:	bl	43b414 <argp_parse@@Base+0xd68>
  43a7c4:	ldp	x9, x10, [x29, #-64]
  43a7c8:	ldp	x8, x11, [x29, #-80]
  43a7cc:	mov	w12, #0x48                  	// #72
  43a7d0:	mul	x9, x9, x12
  43a7d4:	lsl	x26, x10, #3
  43a7d8:	lsl	x10, x11, #5
  43a7dc:	add	x20, x9, #0x48
  43a7e0:	add	x9, x10, #0x20
  43a7e4:	b	43a7f4 <argp_parse@@Base+0x148>
  43a7e8:	mov	x26, xzr
  43a7ec:	mov	w20, #0x48                  	// #72
  43a7f0:	mov	w9, #0x20                  	// #32
  43a7f4:	add	x23, x20, x26
  43a7f8:	add	x28, x23, x9
  43a7fc:	add	x8, x8, x28
  43a800:	add	x0, x8, #0x1
  43a804:	bl	404210 <malloc@plt>
  43a808:	str	x0, [x19, #232]
  43a80c:	cbz	x0, 43a880 <argp_parse@@Base+0x1d4>
  43a810:	ldur	q1, [x27, #216]
  43a814:	ldur	q2, [x27, #232]
  43a818:	ldur	q3, [x27, #248]
  43a81c:	add	x8, x0, x20
  43a820:	add	x9, x0, x23
  43a824:	add	x10, x0, x28
  43a828:	movi	v0.2s, #0x1
  43a82c:	str	x0, [x19, #104]
  43a830:	mov	x0, x8
  43a834:	mov	w1, wzr
  43a838:	mov	x2, x26
  43a83c:	str	x8, [x19, #120]
  43a840:	stp	x10, x9, [x19, #32]
  43a844:	str	d0, [x19, #48]
  43a848:	stur	q1, [x19, #56]
  43a84c:	stur	q2, [x19, #72]
  43a850:	stur	q3, [x19, #88]
  43a854:	bl	404320 <memset@plt>
  43a858:	ldur	q0, [x19, #32]
  43a85c:	ldr	x8, [x19, #120]
  43a860:	add	x9, x19, #0x18
  43a864:	stur	x9, [x29, #-48]
  43a868:	stur	q0, [x29, #-40]
  43a86c:	stur	x8, [x29, #-24]
  43a870:	tbnz	w24, #3, 43a888 <argp_parse@@Base+0x1dc>
  43a874:	tbz	w24, #2, 43a89c <argp_parse@@Base+0x1f0>
  43a878:	mov	w8, #0x2b                  	// #43
  43a87c:	b	43a88c <argp_parse@@Base+0x1e0>
  43a880:	mov	w24, #0xc                   	// #12
  43a884:	b	43b164 <argp_parse@@Base+0xab8>
  43a888:	mov	w8, #0x2d                  	// #45
  43a88c:	fmov	x9, d0
  43a890:	add	x10, x9, #0x1
  43a894:	stur	x10, [x29, #-40]
  43a898:	strb	w8, [x9]
  43a89c:	ldur	x8, [x29, #-40]
  43a8a0:	strb	wzr, [x8]
  43a8a4:	ldur	x8, [x29, #-32]
  43a8a8:	str	xzr, [x8]
  43a8ac:	str	x25, [x19, #24]
  43a8b0:	cbz	x25, 43a8d8 <argp_parse@@Base+0x22c>
  43a8b4:	ldr	x3, [x19, #104]
  43a8b8:	sub	x4, x29, #0x30
  43a8bc:	mov	x0, x25
  43a8c0:	mov	x1, xzr
  43a8c4:	mov	w2, wzr
  43a8c8:	bl	43b4e0 <argp_parse@@Base+0xe34>
  43a8cc:	ldr	x25, [x19, #24]
  43a8d0:	ldr	x28, [x19, #104]
  43a8d4:	b	43a8e0 <argp_parse@@Base+0x234>
  43a8d8:	ldr	x0, [x19, #104]
  43a8dc:	mov	x28, x0
  43a8e0:	str	x0, [x19, #112]
  43a8e4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43a8e8:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43a8ec:	ldr	x9, [x9, #88]
  43a8f0:	ldr	x10, [x10, #96]
  43a8f4:	mov	w26, #0x6                   	// #6
  43a8f8:	add	x8, x19, #0x18
  43a8fc:	movi	v0.2d, #0x0
  43a900:	movk	w26, #0x100, lsl #16
  43a904:	cmp	x28, x0
  43a908:	stur	q0, [x19, #136]
  43a90c:	mov	w11, #0x1                   	// #1
  43a910:	str	w21, [x19, #144]
  43a914:	add	x21, x8, #0x70
  43a918:	stur	q0, [x19, #152]
  43a91c:	str	x25, [x19, #136]
  43a920:	stur	q0, [x19, #168]
  43a924:	stur	q0, [x19, #184]
  43a928:	str	x22, [x19, #152]
  43a92c:	stp	wzr, w24, [x19, #160]
  43a930:	stp	xzr, x9, [x19, #200]
  43a934:	stp	x10, x8, [x19, #216]
  43a938:	str	w11, [x19, #128]
  43a93c:	b.cs	43aa08 <argp_parse@@Base+0x35c>  // b.hs, b.nlast
  43a940:	ldr	x8, [x19, #16]
  43a944:	mov	w24, wzr
  43a948:	sub	w23, w26, #0x3
  43a94c:	str	x8, [x28, #48]
  43a950:	b	43a998 <argp_parse@@Base+0x2ec>
  43a954:	ldr	x9, [x28, #64]
  43a958:	mov	w0, w23
  43a95c:	mov	x1, xzr
  43a960:	mov	x2, x21
  43a964:	str	x9, [x19, #192]
  43a968:	ldr	q0, [x28, #48]
  43a96c:	stur	q0, [x27, #152]
  43a970:	ldr	w9, [x28, #24]
  43a974:	str	w9, [x19, #168]
  43a978:	blr	x8
  43a97c:	ldr	x8, [x19, #192]
  43a980:	mov	w24, w0
  43a984:	str	x8, [x28, #64]
  43a988:	ldr	x8, [x19, #112]
  43a98c:	add	x28, x28, #0x48
  43a990:	cmp	x28, x8
  43a994:	b.cs	43a9fc <argp_parse@@Base+0x350>  // b.hs, b.nlast
  43a998:	cmp	w24, #0x7
  43a99c:	b.eq	43a9a4 <argp_parse@@Base+0x2f8>  // b.none
  43a9a0:	cbnz	w24, 43b164 <argp_parse@@Base+0xab8>
  43a9a4:	ldr	x8, [x28, #32]
  43a9a8:	cbz	x8, 43a9bc <argp_parse@@Base+0x310>
  43a9ac:	ldr	x8, [x8, #56]
  43a9b0:	ldr	w9, [x28, #40]
  43a9b4:	ldr	x8, [x8, x9, lsl #3]
  43a9b8:	str	x8, [x28, #48]
  43a9bc:	ldr	x8, [x28]
  43a9c0:	cbnz	x8, 43a954 <argp_parse@@Base+0x2a8>
  43a9c4:	ldr	x8, [x28, #8]
  43a9c8:	ldr	x8, [x8, #32]
  43a9cc:	cbz	x8, 43a9e8 <argp_parse@@Base+0x33c>
  43a9d0:	ldr	x8, [x8]
  43a9d4:	cbz	x8, 43a9e8 <argp_parse@@Base+0x33c>
  43a9d8:	ldp	x8, x9, [x28, #48]
  43a9dc:	str	x8, [x9]
  43a9e0:	ldr	x8, [x28]
  43a9e4:	cbnz	x8, 43a954 <argp_parse@@Base+0x2a8>
  43a9e8:	mov	w24, #0x7                   	// #7
  43a9ec:	ldr	x8, [x19, #112]
  43a9f0:	add	x28, x28, #0x48
  43a9f4:	cmp	x28, x8
  43a9f8:	b.cc	43a998 <argp_parse@@Base+0x2ec>  // b.lo, b.ul, b.last
  43a9fc:	cmp	w24, #0x7
  43aa00:	b.eq	43aa08 <argp_parse@@Base+0x35c>  // b.none
  43aa04:	cbnz	w24, 43b164 <argp_parse@@Base+0xab8>
  43aa08:	ldr	w8, [x19, #164]
  43aa0c:	tbnz	w8, #1, 43aa1c <argp_parse@@Base+0x370>
  43aa10:	mov	w8, #0x1                   	// #1
  43aa14:	str	w8, [x19, #52]
  43aa18:	b	43aa3c <argp_parse@@Base+0x390>
  43aa1c:	str	wzr, [x19, #52]
  43aa20:	tbz	w8, #0, 43aa3c <argp_parse@@Base+0x390>
  43aa24:	ldr	x8, [x19, #152]
  43aa28:	ldr	w9, [x19, #144]
  43aa2c:	sub	x8, x8, #0x8
  43aa30:	add	w9, w9, #0x1
  43aa34:	str	x8, [x19, #152]
  43aa38:	str	w9, [x19, #144]
  43aa3c:	ldr	x8, [x19, #152]
  43aa40:	cmp	x8, x22
  43aa44:	b.eq	43aa84 <argp_parse@@Base+0x3d8>  // b.none
  43aa48:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43aa4c:	ldr	x8, [x8, #120]
  43aa50:	str	x8, [x19, #200]
  43aa54:	b	43aa94 <argp_parse@@Base+0x3e8>
  43aa58:	ldr	x9, [x22]
  43aa5c:	str	x9, [x8, #80]
  43aa60:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43aa64:	ldr	x8, [x20, #120]
  43aa68:	cbnz	x8, 43a700 <argp_parse@@Base+0x54>
  43aa6c:	ldr	x0, [x22]
  43aa70:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43aa74:	str	x0, [x20, #120]
  43aa78:	add	x27, x19, #0x18
  43aa7c:	tbz	w24, #4, 43a708 <argp_parse@@Base+0x5c>
  43aa80:	b	43a794 <argp_parse@@Base+0xe8>
  43aa84:	ldr	x0, [x22]
  43aa88:	cbz	x0, 43aa48 <argp_parse@@Base+0x39c>
  43aa8c:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43aa90:	str	x0, [x19, #200]
  43aa94:	add	x8, x19, #0x18
  43aa98:	mov	w28, #0xffffffff            	// #-1
  43aa9c:	add	x23, x8, #0x18
  43aaa0:	b	43aabc <argp_parse@@Base+0x410>
  43aaa4:	mov	w8, #0x6                   	// #6
  43aaa8:	movk	w8, #0x100, lsl #16
  43aaac:	cbz	w24, 43ac88 <argp_parse@@Base+0x5dc>
  43aab0:	cmp	w24, #0x7
  43aab4:	b.eq	43ae2c <argp_parse@@Base+0x780>  // b.none
  43aab8:	cbnz	w24, 43af90 <argp_parse@@Base+0x8e4>
  43aabc:	ldr	w8, [x19, #172]
  43aac0:	cbz	w8, 43aad4 <argp_parse@@Base+0x428>
  43aac4:	ldr	w22, [x19, #160]
  43aac8:	cmp	w22, w8
  43aacc:	b.ge	43ab68 <argp_parse@@Base+0x4bc>  // b.tcont
  43aad0:	str	wzr, [x19, #172]
  43aad4:	ldr	w8, [x19, #128]
  43aad8:	ldr	w22, [x19, #160]
  43aadc:	cbz	w8, 43ab68 <argp_parse@@Base+0x4bc>
  43aae0:	ldr	w0, [x19, #144]
  43aae4:	ldr	x1, [x19, #152]
  43aae8:	ldrb	w8, [x19, #164]
  43aaec:	ldp	x2, x3, [x19, #32]
  43aaf0:	mov	x4, xzr
  43aaf4:	mov	x5, x23
  43aaf8:	str	w22, [x19, #48]
  43aafc:	str	w28, [x19, #56]
  43ab00:	tbnz	w8, #6, 43ab0c <argp_parse@@Base+0x460>
  43ab04:	bl	44adb0 <argp_parse@@Base+0x10704>
  43ab08:	b	43ab10 <argp_parse@@Base+0x464>
  43ab0c:	bl	44adcc <argp_parse@@Base+0x10720>
  43ab10:	ldr	w22, [x19, #48]
  43ab14:	mov	w25, w0
  43ab18:	cmn	w0, #0x1
  43ab1c:	str	w22, [x19, #160]
  43ab20:	b.eq	43ab3c <argp_parse@@Base+0x490>  // b.none
  43ab24:	cmp	w25, #0x3f
  43ab28:	b.eq	43acd8 <argp_parse@@Base+0x62c>  // b.none
  43ab2c:	cmp	w25, #0x1
  43ab30:	b.ne	43ace8 <argp_parse@@Base+0x63c>  // b.any
  43ab34:	ldr	x25, [x19, #64]
  43ab38:	b	43ab94 <argp_parse@@Base+0x4e8>
  43ab3c:	cmp	w22, #0x2
  43ab40:	str	wzr, [x19, #128]
  43ab44:	b.lt	43ab68 <argp_parse@@Base+0x4bc>  // b.tstop
  43ab48:	ldr	x8, [x19, #152]
  43ab4c:	sub	w9, w22, #0x1
  43ab50:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  43ab54:	add	x1, x1, #0xb34
  43ab58:	ldr	x0, [x8, w9, sxtw #3]
  43ab5c:	bl	404610 <strcmp@plt>
  43ab60:	cbnz	w0, 43ab68 <argp_parse@@Base+0x4bc>
  43ab64:	str	w22, [x19, #172]
  43ab68:	ldr	w8, [x19, #144]
  43ab6c:	cmp	w22, w8
  43ab70:	b.ge	43ae40 <argp_parse@@Base+0x794>  // b.tcont
  43ab74:	ldrb	w8, [x19, #164]
  43ab78:	tbnz	w8, #2, 43ae40 <argp_parse@@Base+0x794>
  43ab7c:	ldr	x8, [x19, #152]
  43ab80:	add	w9, w22, #0x1
  43ab84:	str	w9, [x19, #160]
  43ab88:	ldr	x25, [x8, w22, sxtw #3]
  43ab8c:	mov	w22, w9
  43ab90:	str	x25, [x19, #64]
  43ab94:	ldp	x9, x10, [x19, #104]
  43ab98:	sub	w8, w22, #0x1
  43ab9c:	str	w8, [x19, #160]
  43aba0:	cmp	x9, x10
  43aba4:	b.cs	43ae2c <argp_parse@@Base+0x780>  // b.hs, b.nlast
  43aba8:	add	x20, x9, #0x48
  43abac:	add	w9, w8, #0x1
  43abb0:	str	w9, [x19, #160]
  43abb4:	ldur	x9, [x20, #-72]
  43abb8:	cbz	x9, 43ac44 <argp_parse@@Base+0x598>
  43abbc:	ldur	x8, [x20, #-8]
  43abc0:	mov	w0, wzr
  43abc4:	mov	x1, x25
  43abc8:	mov	x2, x21
  43abcc:	str	x8, [x19, #192]
  43abd0:	ldur	q0, [x20, #-24]
  43abd4:	stur	q0, [x27, #152]
  43abd8:	ldur	w8, [x20, #-48]
  43abdc:	str	w8, [x19, #168]
  43abe0:	blr	x9
  43abe4:	ldr	x8, [x19, #192]
  43abe8:	cmp	w0, #0x7
  43abec:	stur	x8, [x20, #-8]
  43abf0:	b.ne	43ac7c <argp_parse@@Base+0x5d0>  // b.any
  43abf4:	ldr	w9, [x19, #160]
  43abf8:	ldur	x8, [x20, #-72]
  43abfc:	sub	w9, w9, #0x1
  43ac00:	str	w9, [x19, #160]
  43ac04:	cbz	x8, 43ac48 <argp_parse@@Base+0x59c>
  43ac08:	ldur	q0, [x20, #-24]
  43ac0c:	mov	w0, #0x6                   	// #6
  43ac10:	movk	w0, #0x100, lsl #16
  43ac14:	mov	x1, xzr
  43ac18:	stur	q0, [x27, #152]
  43ac1c:	ldur	w9, [x20, #-48]
  43ac20:	mov	x2, x21
  43ac24:	str	w9, [x19, #168]
  43ac28:	blr	x8
  43ac2c:	ldr	x8, [x19, #192]
  43ac30:	mov	w24, w0
  43ac34:	stur	x8, [x20, #-8]
  43ac38:	cmp	w24, #0x7
  43ac3c:	b.eq	43ac54 <argp_parse@@Base+0x5a8>  // b.none
  43ac40:	b	43aaa4 <argp_parse@@Base+0x3f8>
  43ac44:	str	w8, [x19, #160]
  43ac48:	mov	w24, #0x7                   	// #7
  43ac4c:	cmp	w24, #0x7
  43ac50:	b.ne	43aaa4 <argp_parse@@Base+0x3f8>  // b.any
  43ac54:	ldr	x8, [x19, #112]
  43ac58:	cmp	x20, x8
  43ac5c:	b.cs	43aaa4 <argp_parse@@Base+0x3f8>  // b.hs, b.nlast
  43ac60:	ldr	w8, [x19, #160]
  43ac64:	add	x20, x20, #0x48
  43ac68:	add	w9, w8, #0x1
  43ac6c:	str	w9, [x19, #160]
  43ac70:	ldur	x9, [x20, #-72]
  43ac74:	cbnz	x9, 43abbc <argp_parse@@Base+0x510>
  43ac78:	b	43ac44 <argp_parse@@Base+0x598>
  43ac7c:	mov	w24, w0
  43ac80:	mov	w8, wzr
  43ac84:	cbnz	w24, 43aab0 <argp_parse@@Base+0x404>
  43ac88:	cmp	w8, w26
  43ac8c:	b.ne	43acbc <argp_parse@@Base+0x610>  // b.any
  43ac90:	ldr	w8, [x19, #144]
  43ac94:	str	w8, [x19, #160]
  43ac98:	mov	w24, wzr
  43ac9c:	subs	w8, w8, w22
  43aca0:	b.lt	43accc <argp_parse@@Base+0x620>  // b.tstop
  43aca4:	ldur	w9, [x20, #-48]
  43aca8:	add	w8, w8, w9
  43acac:	add	w8, w8, #0x1
  43acb0:	stur	w8, [x20, #-48]
  43acb4:	cbz	w24, 43aabc <argp_parse@@Base+0x410>
  43acb8:	b	43af90 <argp_parse@@Base+0x8e4>
  43acbc:	ldr	w8, [x19, #160]
  43acc0:	mov	w24, wzr
  43acc4:	subs	w8, w8, w22
  43acc8:	b.ge	43aca4 <argp_parse@@Base+0x5f8>  // b.tcont
  43accc:	mov	w8, #0x1                   	// #1
  43acd0:	str	w8, [x19, #128]
  43acd4:	b	43aab8 <argp_parse@@Base+0x40c>
  43acd8:	ldr	w8, [x19, #56]
  43acdc:	cmn	w8, #0x1
  43ace0:	b.eq	43ad5c <argp_parse@@Base+0x6b0>  // b.none
  43ace4:	b	43b080 <argp_parse@@Base+0x9d4>
  43ace8:	asr	w8, w25, #24
  43acec:	cbz	w8, 43ad5c <argp_parse@@Base+0x6b0>
  43acf0:	ldr	x9, [x19, #104]
  43acf4:	sxtw	x8, w8
  43acf8:	sub	x10, x8, #0x1
  43acfc:	mov	w8, #0x48                  	// #72
  43ad00:	mul	x8, x10, x8
  43ad04:	ldr	x8, [x9, x8]
  43ad08:	cbz	x8, 43b188 <argp_parse@@Base+0xadc>
  43ad0c:	mov	w11, #0x48                  	// #72
  43ad10:	madd	x20, x10, x11, x9
  43ad14:	ldr	x1, [x19, #64]
  43ad18:	ldr	x9, [x20, #64]!
  43ad1c:	sbfx	w0, w25, #23, #1
  43ad20:	bfxil	w0, w25, #0, #24
  43ad24:	mov	x2, x21
  43ad28:	str	x9, [x19, #192]
  43ad2c:	ldur	q0, [x20, #-16]
  43ad30:	stur	q0, [x27, #152]
  43ad34:	ldur	w9, [x20, #-40]
  43ad38:	str	w9, [x19, #168]
  43ad3c:	blr	x8
  43ad40:	mov	w24, w0
  43ad44:	mov	w8, wzr
  43ad48:	ldr	x9, [x19, #192]
  43ad4c:	cmp	w24, #0x7
  43ad50:	str	x9, [x20]
  43ad54:	b.ne	43aab8 <argp_parse@@Base+0x40c>  // b.any
  43ad58:	b	43ade8 <argp_parse@@Base+0x73c>
  43ad5c:	ldr	x0, [x19, #32]
  43ad60:	mov	w1, w25
  43ad64:	bl	404750 <strchr@plt>
  43ad68:	cbz	x0, 43adec <argp_parse@@Base+0x740>
  43ad6c:	ldp	x8, x9, [x19, #104]
  43ad70:	cmp	x8, x9
  43ad74:	b.cs	43adec <argp_parse@@Base+0x740>  // b.hs, b.nlast
  43ad78:	add	x8, x8, #0x30
  43ad7c:	ldur	x10, [x8, #-32]
  43ad80:	cmp	x10, x0
  43ad84:	b.hi	43ad9c <argp_parse@@Base+0x6f0>  // b.pmore
  43ad88:	add	x10, x8, #0x18
  43ad8c:	add	x8, x8, #0x48
  43ad90:	cmp	x10, x9
  43ad94:	b.cc	43ad7c <argp_parse@@Base+0x6d0>  // b.lo, b.ul, b.last
  43ad98:	b	43adec <argp_parse@@Base+0x740>
  43ad9c:	ldur	x9, [x8, #-48]
  43ada0:	cbz	x9, 43adec <argp_parse@@Base+0x740>
  43ada4:	mov	x20, x8
  43ada8:	ldr	x1, [x19, #64]
  43adac:	ldr	x10, [x20, #16]!
  43adb0:	mov	w0, w25
  43adb4:	mov	x2, x21
  43adb8:	str	x10, [x19, #192]
  43adbc:	ldr	q0, [x8]
  43adc0:	stur	q0, [x27, #152]
  43adc4:	ldur	w8, [x8, #-24]
  43adc8:	str	w8, [x19, #168]
  43adcc:	blr	x9
  43add0:	mov	w24, w0
  43add4:	mov	w8, #0x1                   	// #1
  43add8:	ldr	x9, [x19, #192]
  43addc:	cmp	w24, #0x7
  43ade0:	str	x9, [x20]
  43ade4:	b.ne	43aab8 <argp_parse@@Base+0x40c>  // b.any
  43ade8:	cbz	w8, 43b188 <argp_parse@@Base+0xadc>
  43adec:	ldr	x8, [x19, #24]
  43adf0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43adf4:	add	x1, x1, #0x958
  43adf8:	mov	w2, #0x5                   	// #5
  43adfc:	ldr	x0, [x8, #48]
  43ae00:	bl	4048b0 <dcgettext@plt>
  43ae04:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43ae08:	mov	x3, x0
  43ae0c:	add	x1, x1, #0xa50
  43ae10:	mov	x0, x21
  43ae14:	mov	w2, w25
  43ae18:	bl	4389e4 <argp_error@@Base>
  43ae1c:	mov	w8, wzr
  43ae20:	cmn	w25, #0x1
  43ae24:	b.ne	43ae3c <argp_parse@@Base+0x790>  // b.any
  43ae28:	b	43ae40 <argp_parse@@Base+0x794>
  43ae2c:	mov	w25, #0x1                   	// #1
  43ae30:	mov	w8, #0x1                   	// #1
  43ae34:	cmn	w25, #0x1
  43ae38:	b.eq	43ae40 <argp_parse@@Base+0x794>  // b.none
  43ae3c:	tbz	w8, #0, 43b080 <argp_parse@@Base+0x9d4>
  43ae40:	ldr	w8, [x19, #160]
  43ae44:	ldr	w9, [x19, #144]
  43ae48:	cmp	w8, w9
  43ae4c:	b.ne	43aed4 <argp_parse@@Base+0x828>  // b.any
  43ae50:	ldp	x23, x8, [x19, #104]
  43ae54:	cmp	x23, x8
  43ae58:	b.cs	43aee4 <argp_parse@@Base+0x838>  // b.hs, b.nlast
  43ae5c:	mov	w24, wzr
  43ae60:	sub	w22, w26, #0x4
  43ae64:	b	43ae7c <argp_parse@@Base+0x7d0>
  43ae68:	ldr	w9, [x23, #24]
  43ae6c:	cbz	w9, 43ae8c <argp_parse@@Base+0x7e0>
  43ae70:	add	x23, x23, #0x48
  43ae74:	cmp	x23, x8
  43ae78:	b.cs	43aef8 <argp_parse@@Base+0x84c>  // b.hs, b.nlast
  43ae7c:	cmp	w24, #0x7
  43ae80:	b.eq	43ae68 <argp_parse@@Base+0x7bc>  // b.none
  43ae84:	cbz	w24, 43ae68 <argp_parse@@Base+0x7bc>
  43ae88:	b	43aef8 <argp_parse@@Base+0x84c>
  43ae8c:	ldr	x9, [x23]
  43ae90:	cbz	x9, 43aecc <argp_parse@@Base+0x820>
  43ae94:	ldr	x8, [x23, #64]
  43ae98:	mov	w0, w22
  43ae9c:	mov	x1, xzr
  43aea0:	mov	x2, x21
  43aea4:	str	x8, [x19, #192]
  43aea8:	ldr	q0, [x23, #48]
  43aeac:	stur	q0, [x27, #152]
  43aeb0:	str	wzr, [x19, #168]
  43aeb4:	blr	x9
  43aeb8:	ldr	x8, [x19, #192]
  43aebc:	mov	w24, w0
  43aec0:	str	x8, [x23, #64]
  43aec4:	ldr	x8, [x19, #112]
  43aec8:	b	43ae70 <argp_parse@@Base+0x7c4>
  43aecc:	mov	w24, #0x7                   	// #7
  43aed0:	b	43ae70 <argp_parse@@Base+0x7c4>
  43aed4:	ldr	x9, [x19, #8]
  43aed8:	cbz	x9, 43b044 <argp_parse@@Base+0x998>
  43aedc:	str	w8, [x9]
  43aee0:	b	43afac <argp_parse@@Base+0x900>
  43aee4:	mov	w24, wzr
  43aee8:	sub	x20, x8, #0x48
  43aeec:	cmp	x20, x23
  43aef0:	b.cc	43af78 <argp_parse@@Base+0x8cc>  // b.lo, b.ul, b.last
  43aef4:	b	43af08 <argp_parse@@Base+0x85c>
  43aef8:	ldr	x23, [x19, #104]
  43aefc:	sub	x20, x8, #0x48
  43af00:	cmp	x20, x23
  43af04:	b.cc	43af78 <argp_parse@@Base+0x8cc>  // b.lo, b.ul, b.last
  43af08:	sub	w22, w26, #0x5
  43af0c:	b	43af20 <argp_parse@@Base+0x874>
  43af10:	mov	w24, #0x7                   	// #7
  43af14:	sub	x20, x20, #0x48
  43af18:	cmp	x20, x23
  43af1c:	b.cc	43af78 <argp_parse@@Base+0x8cc>  // b.lo, b.ul, b.last
  43af20:	cmp	w24, #0x7
  43af24:	b.eq	43af2c <argp_parse@@Base+0x880>  // b.none
  43af28:	cbnz	w24, 43af80 <argp_parse@@Base+0x8d4>
  43af2c:	ldr	x8, [x20]
  43af30:	cbz	x8, 43af10 <argp_parse@@Base+0x864>
  43af34:	ldr	x9, [x20, #64]
  43af38:	mov	w0, w22
  43af3c:	mov	x1, xzr
  43af40:	mov	x2, x21
  43af44:	str	x9, [x19, #192]
  43af48:	ldr	q0, [x20, #48]
  43af4c:	stur	q0, [x27, #152]
  43af50:	ldr	w9, [x20, #24]
  43af54:	str	w9, [x19, #168]
  43af58:	blr	x8
  43af5c:	ldr	x8, [x19, #192]
  43af60:	mov	w24, w0
  43af64:	str	x8, [x20, #64]
  43af68:	ldr	x23, [x19, #104]
  43af6c:	sub	x20, x20, #0x48
  43af70:	cmp	x20, x23
  43af74:	b.cs	43af20 <argp_parse@@Base+0x874>  // b.hs, b.nlast
  43af78:	cmp	w24, #0x7
  43af7c:	csel	w24, wzr, w24, eq  // eq = none
  43af80:	ldr	x9, [x19, #8]
  43af84:	cbz	x9, 43af90 <argp_parse@@Base+0x8e4>
  43af88:	ldr	w8, [x19, #160]
  43af8c:	str	w8, [x9]
  43af90:	cbz	w24, 43afac <argp_parse@@Base+0x900>
  43af94:	cmp	w24, #0x7
  43af98:	b.eq	43b080 <argp_parse@@Base+0x9d4>  // b.none
  43af9c:	ldp	x22, x8, [x19, #104]
  43afa0:	cmp	x22, x8
  43afa4:	b.cc	43b0a0 <argp_parse@@Base+0x9f4>  // b.lo, b.ul, b.last
  43afa8:	b	43b0f8 <argp_parse@@Base+0xa4c>
  43afac:	ldp	x22, x8, [x19, #104]
  43afb0:	sub	x23, x8, #0x48
  43afb4:	cmp	x23, x22
  43afb8:	b.cs	43afc4 <argp_parse@@Base+0x918>  // b.hs, b.nlast
  43afbc:	mov	w24, wzr
  43afc0:	b	43b0f8 <argp_parse@@Base+0xa4c>
  43afc4:	mov	w24, wzr
  43afc8:	sub	w20, w26, #0x2
  43afcc:	b	43afe0 <argp_parse@@Base+0x934>
  43afd0:	mov	w24, #0x7                   	// #7
  43afd4:	sub	x23, x23, #0x48
  43afd8:	cmp	x23, x22
  43afdc:	b.cc	43b038 <argp_parse@@Base+0x98c>  // b.lo, b.ul, b.last
  43afe0:	cmp	w24, #0x7
  43afe4:	b.eq	43afec <argp_parse@@Base+0x940>  // b.none
  43afe8:	cbnz	w24, 43b0f8 <argp_parse@@Base+0xa4c>
  43afec:	ldr	x8, [x23]
  43aff0:	cbz	x8, 43afd0 <argp_parse@@Base+0x924>
  43aff4:	ldr	x9, [x23, #64]
  43aff8:	mov	w0, w20
  43affc:	mov	x1, xzr
  43b000:	mov	x2, x21
  43b004:	str	x9, [x19, #192]
  43b008:	ldr	q0, [x23, #48]
  43b00c:	stur	q0, [x27, #152]
  43b010:	ldr	w9, [x23, #24]
  43b014:	str	w9, [x19, #168]
  43b018:	blr	x8
  43b01c:	ldr	x8, [x19, #192]
  43b020:	mov	w24, w0
  43b024:	str	x8, [x23, #64]
  43b028:	ldr	x22, [x19, #104]
  43b02c:	sub	x23, x23, #0x48
  43b030:	cmp	x23, x22
  43b034:	b.cs	43afe0 <argp_parse@@Base+0x934>  // b.hs, b.nlast
  43b038:	cmp	w24, #0x7
  43b03c:	csel	w24, wzr, w24, eq  // eq = none
  43b040:	b	43b0f8 <argp_parse@@Base+0xa4c>
  43b044:	ldrb	w8, [x19, #164]
  43b048:	tbnz	w8, #1, 43b080 <argp_parse@@Base+0x9d4>
  43b04c:	ldr	x20, [x19, #208]
  43b050:	cbz	x20, 43b080 <argp_parse@@Base+0x9d4>
  43b054:	ldr	x8, [x19, #24]
  43b058:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b05c:	add	x1, x1, #0xa65
  43b060:	mov	w2, #0x5                   	// #5
  43b064:	ldr	x0, [x8, #48]
  43b068:	bl	4048b0 <dcgettext@plt>
  43b06c:	ldr	x3, [x19, #200]
  43b070:	mov	x2, x0
  43b074:	mov	w1, #0x1                   	// #1
  43b078:	mov	x0, x20
  43b07c:	bl	404600 <__fprintf_chk@plt>
  43b080:	ldr	x1, [x19, #208]
  43b084:	mov	w2, #0x104                 	// #260
  43b088:	mov	x0, x21
  43b08c:	bl	43894c <argp_state_help@@Base>
  43b090:	mov	w24, #0x7                   	// #7
  43b094:	ldp	x22, x8, [x19, #104]
  43b098:	cmp	x22, x8
  43b09c:	b.cs	43b0f8 <argp_parse@@Base+0xa4c>  // b.hs, b.nlast
  43b0a0:	sub	w20, w26, #0x1
  43b0a4:	b	43b0b4 <argp_parse@@Base+0xa08>
  43b0a8:	add	x22, x22, #0x48
  43b0ac:	cmp	x22, x8
  43b0b0:	b.cs	43b0f4 <argp_parse@@Base+0xa48>  // b.hs, b.nlast
  43b0b4:	ldr	x9, [x22]
  43b0b8:	cbz	x9, 43b0a8 <argp_parse@@Base+0x9fc>
  43b0bc:	ldr	x8, [x22, #64]
  43b0c0:	mov	w0, w20
  43b0c4:	mov	x1, xzr
  43b0c8:	mov	x2, x21
  43b0cc:	str	x8, [x19, #192]
  43b0d0:	ldr	q0, [x22, #48]
  43b0d4:	stur	q0, [x27, #152]
  43b0d8:	ldr	w8, [x22, #24]
  43b0dc:	str	w8, [x19, #168]
  43b0e0:	blr	x9
  43b0e4:	ldr	x8, [x19, #192]
  43b0e8:	str	x8, [x22, #64]
  43b0ec:	ldr	x8, [x19, #112]
  43b0f0:	b	43b0a8 <argp_parse@@Base+0x9fc>
  43b0f4:	ldr	x22, [x19, #104]
  43b0f8:	ldr	x8, [x19, #112]
  43b0fc:	sub	x20, x8, #0x48
  43b100:	b	43b108 <argp_parse@@Base+0xa5c>
  43b104:	sub	x20, x20, #0x48
  43b108:	cmp	x20, x22
  43b10c:	b.cc	43b150 <argp_parse@@Base+0xaa4>  // b.lo, b.ul, b.last
  43b110:	ldr	x8, [x20]
  43b114:	cbz	x8, 43b104 <argp_parse@@Base+0xa58>
  43b118:	ldr	x9, [x20, #64]
  43b11c:	add	w0, w26, #0x1
  43b120:	mov	x1, xzr
  43b124:	mov	x2, x21
  43b128:	str	x9, [x19, #192]
  43b12c:	ldr	q0, [x20, #48]
  43b130:	stur	q0, [x27, #152]
  43b134:	ldr	w9, [x20, #24]
  43b138:	str	w9, [x19, #168]
  43b13c:	blr	x8
  43b140:	ldr	x8, [x19, #192]
  43b144:	str	x8, [x20, #64]
  43b148:	ldr	x22, [x19, #104]
  43b14c:	b	43b104 <argp_parse@@Base+0xa58>
  43b150:	ldr	x0, [x19, #232]
  43b154:	cmp	w24, #0x7
  43b158:	mov	w8, #0x16                  	// #22
  43b15c:	csel	w24, w8, w24, eq  // eq = none
  43b160:	bl	4046b0 <free@plt>
  43b164:	mov	w0, w24
  43b168:	mov	sp, x29
  43b16c:	ldp	x20, x19, [sp, #80]
  43b170:	ldp	x22, x21, [sp, #64]
  43b174:	ldp	x24, x23, [sp, #48]
  43b178:	ldp	x26, x25, [sp, #32]
  43b17c:	ldp	x28, x27, [sp, #16]
  43b180:	ldp	x29, x30, [sp], #96
  43b184:	ret
  43b188:	ldr	x8, [x19, #40]
  43b18c:	ldr	w9, [x8, #24]
  43b190:	cmp	w9, w25
  43b194:	b.eq	43b1b8 <argp_parse@@Base+0xb0c>  // b.none
  43b198:	ldr	x9, [x8]
  43b19c:	cbz	x9, 43b1b8 <argp_parse@@Base+0xb0c>
  43b1a0:	ldr	w10, [x8, #56]
  43b1a4:	add	x9, x8, #0x20
  43b1a8:	mov	x8, x9
  43b1ac:	cmp	w10, w25
  43b1b0:	b.ne	43b198 <argp_parse@@Base+0xaec>  // b.any
  43b1b4:	mov	x8, x9
  43b1b8:	ldr	x9, [x19, #24]
  43b1bc:	ldr	x8, [x8]
  43b1c0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b1c4:	add	x1, x1, #0x958
  43b1c8:	ldr	x0, [x9, #48]
  43b1cc:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b1d0:	add	x9, x9, #0xa61
  43b1d4:	cmp	x8, #0x0
  43b1d8:	mov	w2, #0x5                   	// #5
  43b1dc:	csel	x22, x9, x8, eq  // eq = none
  43b1e0:	bl	4048b0 <dcgettext@plt>
  43b1e4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b1e8:	mov	x3, x0
  43b1ec:	add	x1, x1, #0xa58
  43b1f0:	mov	x0, x21
  43b1f4:	mov	x2, x22
  43b1f8:	bl	4389e4 <argp_error@@Base>
  43b1fc:	mov	w8, wzr
  43b200:	cmn	w25, #0x1
  43b204:	b.ne	43ae3c <argp_parse@@Base+0x790>  // b.any
  43b208:	b	43ae40 <argp_parse@@Base+0x794>
  43b20c:	cbz	x1, 43b238 <argp_parse@@Base+0xb8c>
  43b210:	ldr	x9, [x1, #88]
  43b214:	ldp	x8, x9, [x9, #80]
  43b218:	cmp	x8, x9
  43b21c:	b.cs	43b238 <argp_parse@@Base+0xb8c>  // b.hs, b.nlast
  43b220:	ldr	x10, [x8, #8]
  43b224:	cmp	x10, x0
  43b228:	b.eq	43b240 <argp_parse@@Base+0xb94>  // b.none
  43b22c:	add	x8, x8, #0x48
  43b230:	cmp	x8, x9
  43b234:	b.cc	43b220 <argp_parse@@Base+0xb74>  // b.lo, b.ul, b.last
  43b238:	mov	x0, xzr
  43b23c:	ret
  43b240:	ldr	x0, [x8, #48]
  43b244:	ret
  43b248:	stp	x29, x30, [sp, #-32]!
  43b24c:	stp	x20, x19, [sp, #16]
  43b250:	mov	x19, x2
  43b254:	mov	x20, x1
  43b258:	mov	w8, w0
  43b25c:	cmn	w0, #0x3
  43b260:	mov	w0, #0x7                   	// #7
  43b264:	mov	x29, sp
  43b268:	b.gt	43b288 <argp_parse@@Base+0xbdc>
  43b26c:	cmn	w8, #0x4
  43b270:	b.eq	43b2ac <argp_parse@@Base+0xc00>  // b.none
  43b274:	cmn	w8, #0x3
  43b278:	b.ne	43b338 <argp_parse@@Base+0xc8c>  // b.any
  43b27c:	ldr	x1, [x19, #80]
  43b280:	mov	w2, #0x201                 	// #513
  43b284:	b	43b2a0 <argp_parse@@Base+0xbf4>
  43b288:	cmn	w8, #0x2
  43b28c:	b.eq	43b300 <argp_parse@@Base+0xc54>  // b.none
  43b290:	cmp	w8, #0x3f
  43b294:	b.ne	43b338 <argp_parse@@Base+0xc8c>  // b.any
  43b298:	ldr	x1, [x19, #80]
  43b29c:	mov	w2, #0x27a                 	// #634
  43b2a0:	mov	x0, x19
  43b2a4:	bl	43894c <argp_state_help@@Base>
  43b2a8:	b	43b344 <argp_parse@@Base+0xc98>
  43b2ac:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b2b0:	add	x8, x8, #0xa12
  43b2b4:	cmp	x20, #0x0
  43b2b8:	csel	x0, x8, x20, eq  // eq = none
  43b2bc:	mov	w2, #0xa                   	// #10
  43b2c0:	mov	x1, xzr
  43b2c4:	bl	404670 <strtol@plt>
  43b2c8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b2cc:	str	w0, [x19, #2384]
  43b2d0:	ldr	w8, [x19, #2384]
  43b2d4:	subs	w8, w8, #0x1
  43b2d8:	str	w8, [x19, #2384]
  43b2dc:	b.lt	43b344 <argp_parse@@Base+0xc98>  // b.tstop
  43b2e0:	mov	w0, #0x1                   	// #1
  43b2e4:	bl	404370 <sleep@plt>
  43b2e8:	ldr	w8, [x19, #2384]
  43b2ec:	sub	w9, w8, #0x1
  43b2f0:	cmp	w8, #0x0
  43b2f4:	str	w9, [x19, #2384]
  43b2f8:	b.gt	43b2e0 <argp_parse@@Base+0xc34>
  43b2fc:	b	43b344 <argp_parse@@Base+0xc98>
  43b300:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b304:	mov	x0, x20
  43b308:	str	x20, [x8, #80]
  43b30c:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43b310:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b314:	str	x0, [x19, #64]
  43b318:	str	x0, [x8, #120]
  43b31c:	ldr	w8, [x19, #28]
  43b320:	and	w8, w8, #0x3
  43b324:	cmp	w8, #0x1
  43b328:	b.ne	43b344 <argp_parse@@Base+0xc98>  // b.any
  43b32c:	ldr	x8, [x19, #16]
  43b330:	mov	w0, wzr
  43b334:	str	x20, [x8]
  43b338:	ldp	x20, x19, [sp, #16]
  43b33c:	ldp	x29, x30, [sp], #32
  43b340:	ret
  43b344:	mov	w0, wzr
  43b348:	ldp	x20, x19, [sp, #16]
  43b34c:	ldp	x29, x30, [sp], #32
  43b350:	ret
  43b354:	stp	x29, x30, [sp, #-32]!
  43b358:	cmp	w0, #0x56
  43b35c:	str	x19, [sp, #16]
  43b360:	mov	x29, sp
  43b364:	b.ne	43b390 <argp_parse@@Base+0xce4>  // b.any
  43b368:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b36c:	ldr	x8, [x8, #2392]
  43b370:	mov	x19, x2
  43b374:	cbz	x8, 43b3a0 <argp_parse@@Base+0xcf4>
  43b378:	ldr	x0, [x19, #80]
  43b37c:	mov	x1, x19
  43b380:	blr	x8
  43b384:	ldrb	w8, [x19, #28]
  43b388:	tbnz	w8, #5, 43b3c8 <argp_parse@@Base+0xd1c>
  43b38c:	b	43b40c <argp_parse@@Base+0xd60>
  43b390:	mov	w0, #0x7                   	// #7
  43b394:	ldr	x19, [sp, #16]
  43b398:	ldp	x29, x30, [sp], #32
  43b39c:	ret
  43b3a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b3a4:	ldr	x3, [x8, #4024]
  43b3a8:	cbz	x3, 43b3d8 <argp_parse@@Base+0xd2c>
  43b3ac:	ldr	x0, [x19, #80]
  43b3b0:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43b3b4:	add	x2, x2, #0xfdb
  43b3b8:	mov	w1, #0x1                   	// #1
  43b3bc:	bl	404600 <__fprintf_chk@plt>
  43b3c0:	ldrb	w8, [x19, #28]
  43b3c4:	tbz	w8, #5, 43b40c <argp_parse@@Base+0xd60>
  43b3c8:	mov	w0, wzr
  43b3cc:	ldr	x19, [sp, #16]
  43b3d0:	ldp	x29, x30, [sp], #32
  43b3d4:	ret
  43b3d8:	ldr	x8, [x19]
  43b3dc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b3e0:	add	x1, x1, #0xa2d
  43b3e4:	mov	w2, #0x5                   	// #5
  43b3e8:	ldr	x0, [x8, #48]
  43b3ec:	bl	4048b0 <dcgettext@plt>
  43b3f0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43b3f4:	mov	x2, x0
  43b3f8:	add	x1, x1, #0x274
  43b3fc:	mov	x0, x19
  43b400:	bl	4389e4 <argp_error@@Base>
  43b404:	ldrb	w8, [x19, #28]
  43b408:	tbnz	w8, #5, 43b3c8 <argp_parse@@Base+0xd1c>
  43b40c:	mov	w0, wzr
  43b410:	bl	403f30 <exit@plt>
  43b414:	stp	x29, x30, [sp, #-32]!
  43b418:	stp	x20, x19, [sp, #16]
  43b41c:	ldr	x11, [x0]
  43b420:	ldr	x8, [x0, #32]
  43b424:	mov	x19, x1
  43b428:	mov	x29, sp
  43b42c:	cbz	x11, 43b48c <argp_parse@@Base+0xde0>
  43b430:	ldr	x12, [x19, #16]
  43b434:	mov	w10, wzr
  43b438:	mov	x9, xzr
  43b43c:	add	x11, x11, #0x28
  43b440:	add	x12, x12, #0x1
  43b444:	str	x12, [x19, #16]
  43b448:	b	43b458 <argp_parse@@Base+0xdac>
  43b44c:	add	x11, x11, #0x30
  43b450:	add	x9, x9, #0x1
  43b454:	add	w10, w10, #0x3
  43b458:	ldur	w12, [x11, #-32]
  43b45c:	cbnz	w12, 43b44c <argp_parse@@Base+0xda0>
  43b460:	ldur	x12, [x11, #-40]
  43b464:	cbnz	x12, 43b44c <argp_parse@@Base+0xda0>
  43b468:	ldur	x12, [x11, #-8]
  43b46c:	cbnz	x12, 43b44c <argp_parse@@Base+0xda0>
  43b470:	ldr	w12, [x11]
  43b474:	cbnz	w12, 43b44c <argp_parse@@Base+0xda0>
  43b478:	ldr	x11, [x19]
  43b47c:	add	x11, x11, w10, uxtw
  43b480:	mov	x10, x19
  43b484:	str	x11, [x10], #8
  43b488:	b	43b49c <argp_parse@@Base+0xdf0>
  43b48c:	ldr	x9, [x0, #8]
  43b490:	cbz	x9, 43b4a8 <argp_parse@@Base+0xdfc>
  43b494:	add	x10, x19, #0x10
  43b498:	mov	w9, #0x1                   	// #1
  43b49c:	ldr	x11, [x10]
  43b4a0:	add	x9, x11, x9
  43b4a4:	str	x9, [x10]
  43b4a8:	cbz	x8, 43b4d4 <argp_parse@@Base+0xe28>
  43b4ac:	ldr	x0, [x8]
  43b4b0:	cbz	x0, 43b4d4 <argp_parse@@Base+0xe28>
  43b4b4:	add	x20, x8, #0x20
  43b4b8:	mov	x1, x19
  43b4bc:	bl	43b414 <argp_parse@@Base+0xd68>
  43b4c0:	ldr	x8, [x19, #24]
  43b4c4:	add	x8, x8, #0x1
  43b4c8:	str	x8, [x19, #24]
  43b4cc:	ldr	x0, [x20], #32
  43b4d0:	cbnz	x0, 43b4b8 <argp_parse@@Base+0xe0c>
  43b4d4:	ldp	x20, x19, [sp, #16]
  43b4d8:	ldp	x29, x30, [sp], #32
  43b4dc:	ret
  43b4e0:	sub	sp, sp, #0x80
  43b4e4:	stp	x29, x30, [sp, #32]
  43b4e8:	stp	x28, x27, [sp, #48]
  43b4ec:	stp	x26, x25, [sp, #64]
  43b4f0:	stp	x24, x23, [sp, #80]
  43b4f4:	stp	x22, x21, [sp, #96]
  43b4f8:	stp	x20, x19, [sp, #112]
  43b4fc:	ldr	x23, [x0]
  43b500:	ldr	x10, [x0, #32]
  43b504:	mov	x19, x4
  43b508:	mov	x20, x3
  43b50c:	add	x29, sp, #0x20
  43b510:	cbz	x23, 43b688 <argp_parse@@Base+0xfdc>
  43b514:	mov	w28, #0x39000000            	// #956301312
  43b518:	mov	w21, #0x1000000             	// #16777216
  43b51c:	mov	x26, x23
  43b520:	stp	x0, x1, [sp]
  43b524:	stur	w2, [x29, #-12]
  43b528:	stur	x10, [x29, #-8]
  43b52c:	b	43b55c <argp_parse@@Base+0xeb0>
  43b530:	ldr	w10, [x25, #80]
  43b534:	add	x11, x8, #0x20
  43b538:	sub	w10, w20, w10
  43b53c:	lsr	w10, w10, #3
  43b540:	mul	w10, w10, w28
  43b544:	bfxil	w10, w9, #0, #24
  43b548:	add	w9, w10, w21
  43b54c:	str	w9, [x8, #24]
  43b550:	str	x11, [x19, #16]
  43b554:	str	xzr, [x8, #32]
  43b558:	add	x26, x26, #0x30
  43b55c:	ldr	w24, [x26, #8]
  43b560:	cbnz	w24, 43b57c <argp_parse@@Base+0xed0>
  43b564:	ldr	x8, [x26]
  43b568:	cbnz	x8, 43b57c <argp_parse@@Base+0xed0>
  43b56c:	ldr	x8, [x26, #32]
  43b570:	cbnz	x8, 43b57c <argp_parse@@Base+0xed0>
  43b574:	ldr	w8, [x26, #40]
  43b578:	cbz	w8, 43b674 <argp_parse@@Base+0xfc8>
  43b57c:	ldr	w8, [x26, #24]
  43b580:	tst	w8, #0x4
  43b584:	csel	x23, x26, x23, eq  // eq = none
  43b588:	ldrb	w9, [x23, #24]
  43b58c:	tbnz	w9, #3, 43b558 <argp_parse@@Base+0xeac>
  43b590:	sub	w9, w24, #0x1
  43b594:	cmp	w9, #0xfe
  43b598:	b.hi	43b600 <argp_parse@@Base+0xf54>  // b.pmore
  43b59c:	tbnz	w8, #3, 43b600 <argp_parse@@Base+0xf54>
  43b5a0:	bl	404640 <__ctype_b_loc@plt>
  43b5a4:	ldr	x8, [x0]
  43b5a8:	ldrh	w8, [x8, x24, lsl #1]
  43b5ac:	tbz	w8, #14, 43b600 <argp_parse@@Base+0xf54>
  43b5b0:	ldr	x8, [x19, #8]
  43b5b4:	add	x9, x8, #0x1
  43b5b8:	str	x9, [x19, #8]
  43b5bc:	strb	w24, [x8]
  43b5c0:	ldr	x8, [x23, #16]
  43b5c4:	cbz	x8, 43b5f8 <argp_parse@@Base+0xf4c>
  43b5c8:	ldr	x8, [x19, #8]
  43b5cc:	add	x9, x8, #0x1
  43b5d0:	str	x9, [x19, #8]
  43b5d4:	mov	w9, #0x3a                  	// #58
  43b5d8:	strb	w9, [x8]
  43b5dc:	ldrb	w8, [x23, #24]
  43b5e0:	tbz	w8, #0, 43b5f8 <argp_parse@@Base+0xf4c>
  43b5e4:	ldr	x8, [x19, #8]
  43b5e8:	add	x9, x8, #0x1
  43b5ec:	str	x9, [x19, #8]
  43b5f0:	mov	w9, #0x3a                  	// #58
  43b5f4:	strb	w9, [x8]
  43b5f8:	ldr	x8, [x19, #8]
  43b5fc:	strb	wzr, [x8]
  43b600:	ldr	x24, [x26]
  43b604:	cbz	x24, 43b558 <argp_parse@@Base+0xeac>
  43b608:	ldr	x25, [x19]
  43b60c:	ldr	x22, [x25, #16]
  43b610:	ldr	x0, [x22]
  43b614:	cbz	x0, 43b63c <argp_parse@@Base+0xf90>
  43b618:	mov	x27, x22
  43b61c:	mov	x1, x24
  43b620:	bl	404610 <strcmp@plt>
  43b624:	cbz	w0, 43b634 <argp_parse@@Base+0xf88>
  43b628:	ldr	x0, [x27, #32]!
  43b62c:	cbnz	x0, 43b61c <argp_parse@@Base+0xf70>
  43b630:	b	43b63c <argp_parse@@Base+0xf90>
  43b634:	sub	x8, x27, x22
  43b638:	tbz	x8, #36, 43b558 <argp_parse@@Base+0xeac>
  43b63c:	ldr	x8, [x19, #16]
  43b640:	str	x24, [x8]
  43b644:	ldr	x9, [x23, #16]
  43b648:	cbz	x9, 43b65c <argp_parse@@Base+0xfb0>
  43b64c:	ldrb	w9, [x23, #24]
  43b650:	tst	w9, #0x1
  43b654:	mov	w9, #0x1                   	// #1
  43b658:	cinc	w9, w9, ne  // ne = any
  43b65c:	str	w9, [x8, #8]
  43b660:	str	xzr, [x8, #16]
  43b664:	ldr	w9, [x26, #8]
  43b668:	cbnz	w9, 43b530 <argp_parse@@Base+0xe84>
  43b66c:	ldr	w9, [x23, #8]
  43b670:	b	43b530 <argp_parse@@Base+0xe84>
  43b674:	ldp	x0, x1, [sp]
  43b678:	ldur	x10, [x29, #-8]
  43b67c:	ldur	w2, [x29, #-12]
  43b680:	ldr	x8, [x0, #8]
  43b684:	b	43b690 <argp_parse@@Base+0xfe4>
  43b688:	ldr	x8, [x0, #8]
  43b68c:	cbz	x8, 43b734 <argp_parse@@Base+0x1088>
  43b690:	stp	x8, x0, [x20]
  43b694:	ldr	x8, [x19, #8]
  43b698:	str	wzr, [x20, #24]
  43b69c:	str	x1, [x20, #32]
  43b6a0:	str	w2, [x20, #40]
  43b6a4:	stp	xzr, xzr, [x20, #56]
  43b6a8:	str	x8, [x20, #16]
  43b6ac:	str	xzr, [x20, #48]
  43b6b0:	cbz	x10, 43b6d8 <argp_parse@@Base+0x102c>
  43b6b4:	mov	w8, #0xffffffff            	// #-1
  43b6b8:	add	w8, w8, #0x1
  43b6bc:	lsl	x9, x8, #5
  43b6c0:	ldr	x9, [x10, x9]
  43b6c4:	cbnz	x9, 43b6b8 <argp_parse@@Base+0x100c>
  43b6c8:	ldr	x9, [x19, #24]
  43b6cc:	add	x8, x9, w8, uxtw #3
  43b6d0:	str	x9, [x20, #56]
  43b6d4:	str	x8, [x19, #24]
  43b6d8:	add	x3, x20, #0x48
  43b6dc:	cbz	x10, 43b710 <argp_parse@@Base+0x1064>
  43b6e0:	ldr	x0, [x10]
  43b6e4:	cbz	x0, 43b710 <argp_parse@@Base+0x1064>
  43b6e8:	mov	w2, wzr
  43b6ec:	add	x21, x10, #0x20
  43b6f0:	mov	x1, x20
  43b6f4:	mov	x4, x19
  43b6f8:	add	w22, w2, #0x1
  43b6fc:	bl	43b4e0 <argp_parse@@Base+0xe34>
  43b700:	mov	x3, x0
  43b704:	ldr	x0, [x21], #32
  43b708:	mov	w2, w22
  43b70c:	cbnz	x0, 43b6f0 <argp_parse@@Base+0x1044>
  43b710:	ldp	x20, x19, [sp, #112]
  43b714:	ldp	x22, x21, [sp, #96]
  43b718:	ldp	x24, x23, [sp, #80]
  43b71c:	ldp	x26, x25, [sp, #64]
  43b720:	ldp	x28, x27, [sp, #48]
  43b724:	ldp	x29, x30, [sp, #32]
  43b728:	mov	x0, x3
  43b72c:	add	sp, sp, #0x80
  43b730:	ret
  43b734:	mov	x3, x20
  43b738:	mov	x20, xzr
  43b73c:	cbnz	x10, 43b6e0 <argp_parse@@Base+0x1034>
  43b740:	b	43b710 <argp_parse@@Base+0x1064>
  43b744:	adrp	x9, 43b000 <argp_parse@@Base+0x954>
  43b748:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b74c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b750:	add	x9, x9, #0x764
  43b754:	add	x10, x10, #0x960
  43b758:	str	x9, [x8, #2392]
  43b75c:	stp	x0, x1, [x10]
  43b760:	ret
  43b764:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b768:	add	x8, x8, #0x960
  43b76c:	ldp	x1, x4, [x8]
  43b770:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  43b774:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x16e3c>
  43b778:	add	x2, x2, #0x8a2
  43b77c:	add	x3, x3, #0x8fc
  43b780:	b	449bbc <argp_parse@@Base+0xf510>
  43b784:	stp	x29, x30, [sp, #-32]!
  43b788:	stp	x20, x19, [sp, #16]
  43b78c:	mov	x19, x0
  43b790:	mov	x29, sp
  43b794:	cbnz	x0, 43b7ac <argp_parse@@Base+0x1100>
  43b798:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43b79c:	add	x0, x0, #0x1cc
  43b7a0:	bl	4049e0 <getenv@plt>
  43b7a4:	mov	x19, x0
  43b7a8:	cbz	x0, 43b7d0 <argp_parse@@Base+0x1124>
  43b7ac:	ldrb	w8, [x19]
  43b7b0:	adrp	x20, 463000 <_obstack_memory_used@@Base+0x17e3c>
  43b7b4:	add	x20, x20, #0xd12
  43b7b8:	cbz	w8, 43b7d8 <argp_parse@@Base+0x112c>
  43b7bc:	mov	x0, x19
  43b7c0:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43b7c4:	cmp	x19, x0
  43b7c8:	csel	x20, x19, x20, eq  // eq = none
  43b7cc:	b	43b7d8 <argp_parse@@Base+0x112c>
  43b7d0:	adrp	x20, 463000 <_obstack_memory_used@@Base+0x17e3c>
  43b7d4:	add	x20, x20, #0xd12
  43b7d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b7dc:	str	x20, [x8, #2416]
  43b7e0:	ldp	x20, x19, [sp, #16]
  43b7e4:	ldp	x29, x30, [sp], #32
  43b7e8:	ret
  43b7ec:	sub	sp, sp, #0xe0
  43b7f0:	str	w0, [sp, #28]
  43b7f4:	mov	x0, x1
  43b7f8:	stp	x29, x30, [sp, #128]
  43b7fc:	stp	x28, x27, [sp, #144]
  43b800:	stp	x26, x25, [sp, #160]
  43b804:	stp	x24, x23, [sp, #176]
  43b808:	stp	x22, x21, [sp, #192]
  43b80c:	stp	x20, x19, [sp, #208]
  43b810:	add	x29, sp, #0x80
  43b814:	mov	w22, w3
  43b818:	mov	w21, w2
  43b81c:	mov	x26, x1
  43b820:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43b824:	sub	x25, x0, x26
  43b828:	bl	403f00 <strlen@plt>
  43b82c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b830:	ldr	x19, [x8, #2416]
  43b834:	add	x28, x25, x0
  43b838:	cbnz	x19, 43b88c <argp_parse@@Base+0x11e0>
  43b83c:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43b840:	add	x0, x0, #0x1cc
  43b844:	mov	w20, w21
  43b848:	bl	4049e0 <getenv@plt>
  43b84c:	cbz	x0, 43b878 <argp_parse@@Base+0x11cc>
  43b850:	ldrb	w8, [x0]
  43b854:	adrp	x19, 463000 <_obstack_memory_used@@Base+0x17e3c>
  43b858:	mov	x21, x0
  43b85c:	add	x19, x19, #0xd12
  43b860:	cbz	w8, 43b880 <argp_parse@@Base+0x11d4>
  43b864:	mov	x0, x21
  43b868:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43b86c:	cmp	x21, x0
  43b870:	csel	x19, x21, x19, eq  // eq = none
  43b874:	b	43b880 <argp_parse@@Base+0x11d4>
  43b878:	adrp	x19, 463000 <_obstack_memory_used@@Base+0x17e3c>
  43b87c:	add	x19, x19, #0xd12
  43b880:	mov	w21, w20
  43b884:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b888:	str	x19, [x8, #2416]
  43b88c:	mov	x0, x19
  43b890:	bl	403f00 <strlen@plt>
  43b894:	add	x9, x0, #0x1
  43b898:	mov	w8, #0x9                   	// #9
  43b89c:	cmp	x9, #0x9
  43b8a0:	stur	x9, [x29, #-48]
  43b8a4:	csinc	x8, x8, x0, ls  // ls = plast
  43b8a8:	add	x9, x28, #0x1
  43b8ac:	add	x0, x9, x8
  43b8b0:	stur	x9, [x29, #-24]
  43b8b4:	str	x0, [sp, #56]
  43b8b8:	bl	404210 <malloc@plt>
  43b8bc:	mov	x23, x0
  43b8c0:	cbz	x0, 43bd78 <argp_parse@@Base+0x16cc>
  43b8c4:	mov	x27, xzr
  43b8c8:	mov	w8, #0xffffffff            	// #-1
  43b8cc:	add	x9, x28, #0x4
  43b8d0:	stp	x9, xzr, [sp, #8]
  43b8d4:	stur	w8, [x29, #-12]
  43b8d8:	str	w22, [sp, #52]
  43b8dc:	str	x26, [sp, #32]
  43b8e0:	stur	x28, [x29, #-40]
  43b8e4:	ldur	x2, [x29, #-24]
  43b8e8:	mov	x0, x23
  43b8ec:	mov	x1, x26
  43b8f0:	bl	403e80 <memcpy@plt>
  43b8f4:	cmp	w21, #0x1
  43b8f8:	b.ne	43b914 <argp_parse@@Base+0x1268>  // b.any
  43b8fc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43b900:	ldr	x1, [x8, #2416]
  43b904:	ldur	x2, [x29, #-48]
  43b908:	add	x0, x23, x28
  43b90c:	bl	403e80 <memcpy@plt>
  43b910:	b	43bc80 <argp_parse@@Base+0x15d4>
  43b914:	add	x19, x23, x25
  43b918:	mov	x0, x19
  43b91c:	bl	43c15c <argp_parse@@Base+0x1ab0>
  43b920:	mov	x28, x0
  43b924:	cbz	x27, 43b968 <argp_parse@@Base+0x12bc>
  43b928:	mov	x0, x27
  43b92c:	bl	404650 <rewinddir@plt>
  43b930:	mov	w8, #0x2                   	// #2
  43b934:	stur	w8, [x29, #-28]
  43b938:	mov	x0, x27
  43b93c:	bl	404440 <readdir@plt>
  43b940:	cbz	x0, 43bb94 <argp_parse@@Base+0x14e8>
  43b944:	ldr	x8, [sp, #56]
  43b948:	mov	x24, x0
  43b94c:	stur	w21, [x29, #-60]
  43b950:	add	x26, x28, #0x4
  43b954:	add	x21, x28, #0x2
  43b958:	str	x8, [sp, #40]
  43b95c:	mov	w8, #0x1                   	// #1
  43b960:	stur	x8, [x29, #-56]
  43b964:	b	43b9bc <argp_parse@@Base+0x1310>
  43b968:	ldrh	w8, [x19]
  43b96c:	ldr	w0, [sp, #28]
  43b970:	mov	w9, #0x2e                  	// #46
  43b974:	sub	x3, x29, #0xc
  43b978:	mov	x1, x23
  43b97c:	mov	w2, wzr
  43b980:	strh	w9, [x19]
  43b984:	sturh	w8, [x29, #-8]
  43b988:	bl	440ca8 <argp_parse@@Base+0x65fc>
  43b98c:	mov	x27, x0
  43b990:	cbz	x0, 43bb50 <argp_parse@@Base+0x14a4>
  43b994:	mov	w10, #0x2                   	// #2
  43b998:	b	43bb64 <argp_parse@@Base+0x14b8>
  43b99c:	add	w9, w9, #0x1
  43b9a0:	strb	w9, [x8]
  43b9a4:	mov	w8, w22
  43b9a8:	stur	w22, [x29, #-28]
  43b9ac:	mov	x0, x27
  43b9b0:	bl	404440 <readdir@plt>
  43b9b4:	mov	x24, x0
  43b9b8:	cbz	x0, 43bb30 <argp_parse@@Base+0x1484>
  43b9bc:	add	x19, x24, #0x13
  43b9c0:	mov	x0, x19
  43b9c4:	bl	403f00 <strlen@plt>
  43b9c8:	cmp	x0, x26
  43b9cc:	b.cc	43b9ac <argp_parse@@Base+0x1300>  // b.lo, b.ul, b.last
  43b9d0:	add	x0, x23, x25
  43b9d4:	mov	x1, x19
  43b9d8:	mov	x2, x21
  43b9dc:	bl	404400 <bcmp@plt>
  43b9e0:	cbnz	w0, 43b9ac <argp_parse@@Base+0x1300>
  43b9e4:	add	x19, x24, x28
  43b9e8:	ldrb	w9, [x19, #21]!
  43b9ec:	sub	w8, w9, #0x31
  43b9f0:	cmp	w8, #0x8
  43b9f4:	b.hi	43b9ac <argp_parse@@Base+0x1300>  // b.pmore
  43b9f8:	sub	x8, x19, #0x2
  43b9fc:	ldrb	w8, [x8, #3]
  43ba00:	cmp	w9, #0x39
  43ba04:	cset	w22, eq  // eq = none
  43ba08:	sub	w9, w8, #0x30
  43ba0c:	cmp	w9, #0x9
  43ba10:	b.hi	43ba50 <argp_parse@@Base+0x13a4>  // b.pmore
  43ba14:	add	x9, x24, x28
  43ba18:	mov	w10, #0x17                  	// #23
  43ba1c:	and	w11, w8, #0xff
  43ba20:	ldrb	w8, [x9, x10]
  43ba24:	cmp	w11, #0x39
  43ba28:	cset	w11, eq  // eq = none
  43ba2c:	and	w22, w11, w22
  43ba30:	sub	w11, w8, #0x30
  43ba34:	cmp	w11, #0xa
  43ba38:	add	x10, x10, #0x1
  43ba3c:	b.cc	43ba1c <argp_parse@@Base+0x1370>  // b.lo, b.ul, b.last
  43ba40:	sub	x20, x10, #0x16
  43ba44:	cmp	w8, #0x7e
  43ba48:	b.ne	43b9ac <argp_parse@@Base+0x1300>  // b.any
  43ba4c:	b	43ba5c <argp_parse@@Base+0x13b0>
  43ba50:	mov	w20, #0x1                   	// #1
  43ba54:	cmp	w8, #0x7e
  43ba58:	b.ne	43b9ac <argp_parse@@Base+0x1300>  // b.any
  43ba5c:	add	x8, x20, x19
  43ba60:	ldrb	w8, [x8, #1]
  43ba64:	cbnz	w8, 43b9ac <argp_parse@@Base+0x1300>
  43ba68:	ldur	x8, [x29, #-56]
  43ba6c:	cmp	x8, x20
  43ba70:	b.cs	43bb08 <argp_parse@@Base+0x145c>  // b.hs, b.nlast
  43ba74:	ldr	x8, [sp, #8]
  43ba78:	add	x9, x20, x22
  43ba7c:	stur	x9, [x29, #-56]
  43ba80:	add	x8, x8, x9
  43ba84:	ldr	x9, [sp, #40]
  43ba88:	cmp	x9, x8
  43ba8c:	b.cs	43bab4 <argp_parse@@Base+0x1408>  // b.hs, b.nlast
  43ba90:	lsr	x9, x8, #62
  43ba94:	cmp	x9, #0x0
  43ba98:	cset	w9, eq  // eq = none
  43ba9c:	lsl	x1, x8, x9
  43baa0:	mov	x0, x23
  43baa4:	str	x1, [sp, #40]
  43baa8:	bl	404450 <realloc@plt>
  43baac:	cbz	x0, 43bd60 <argp_parse@@Base+0x16b4>
  43bab0:	mov	x23, x0
  43bab4:	ldur	x9, [x29, #-40]
  43bab8:	mov	w10, #0x7e2e                	// #32302
  43babc:	add	x2, x20, #0x2
  43bac0:	mov	x1, x19
  43bac4:	add	x8, x23, x9
  43bac8:	strh	w10, [x23, x9]
  43bacc:	mov	w9, #0x30                  	// #48
  43bad0:	strb	w9, [x8, #2]!
  43bad4:	add	x24, x8, x22
  43bad8:	mov	x0, x24
  43badc:	bl	403e80 <memcpy@plt>
  43bae0:	add	x8, x24, x20
  43bae4:	ldrb	w9, [x8, #-1]!
  43bae8:	cmp	w9, #0x39
  43baec:	b.ne	43b99c <argp_parse@@Base+0x12f0>  // b.any
  43baf0:	mov	w10, #0x30                  	// #48
  43baf4:	strb	w10, [x8]
  43baf8:	ldrb	w9, [x8, #-1]!
  43bafc:	cmp	w9, #0x39
  43bb00:	b.eq	43baf4 <argp_parse@@Base+0x1448>  // b.none
  43bb04:	b	43b99c <argp_parse@@Base+0x12f0>
  43bb08:	b.ne	43b9ac <argp_parse@@Base+0x1300>  // b.any
  43bb0c:	ldur	x8, [x29, #-40]
  43bb10:	ldur	x2, [x29, #-56]
  43bb14:	mov	x1, x19
  43bb18:	add	x8, x23, x8
  43bb1c:	add	x0, x8, #0x2
  43bb20:	bl	4045d0 <memcmp@plt>
  43bb24:	cmp	w0, #0x0
  43bb28:	b.gt	43b9ac <argp_parse@@Base+0x1300>
  43bb2c:	b	43ba74 <argp_parse@@Base+0x13c8>
  43bb30:	ldr	w22, [sp, #52]
  43bb34:	ldr	x26, [sp, #32]
  43bb38:	ldur	x28, [x29, #-40]
  43bb3c:	ldur	w21, [x29, #-60]
  43bb40:	ldur	w10, [x29, #-28]
  43bb44:	cmp	w10, #0x1
  43bb48:	b.ne	43bbb4 <argp_parse@@Base+0x1508>  // b.any
  43bb4c:	b	43bbe8 <argp_parse@@Base+0x153c>
  43bb50:	bl	4049c0 <__errno_location@plt>
  43bb54:	ldr	w8, [x0]
  43bb58:	cmp	w8, #0xc
  43bb5c:	mov	w8, #0x2                   	// #2
  43bb60:	cinc	w10, w8, eq  // eq = none
  43bb64:	ldurh	w8, [x29, #-8]
  43bb68:	add	x9, x19, x28
  43bb6c:	strh	w8, [x19]
  43bb70:	mov	w8, #0x7e2e                	// #32302
  43bb74:	movk	w8, #0x7e31, lsl #16
  43bb78:	strb	wzr, [x9, #4]
  43bb7c:	str	w8, [x9]
  43bb80:	cbz	x27, 43bba8 <argp_parse@@Base+0x14fc>
  43bb84:	stur	w10, [x29, #-28]
  43bb88:	mov	x0, x27
  43bb8c:	bl	404440 <readdir@plt>
  43bb90:	cbnz	x0, 43b944 <argp_parse@@Base+0x1298>
  43bb94:	ldur	x28, [x29, #-40]
  43bb98:	ldur	w10, [x29, #-28]
  43bb9c:	cmp	w10, #0x1
  43bba0:	b.ne	43bbb4 <argp_parse@@Base+0x1508>  // b.any
  43bba4:	b	43bbe8 <argp_parse@@Base+0x153c>
  43bba8:	ldur	x28, [x29, #-40]
  43bbac:	cmp	w10, #0x1
  43bbb0:	b.eq	43bbe8 <argp_parse@@Base+0x153c>  // b.none
  43bbb4:	cmp	w10, #0x2
  43bbb8:	b.eq	43bbc8 <argp_parse@@Base+0x151c>  // b.none
  43bbbc:	cmp	w10, #0x3
  43bbc0:	b.ne	43bc80 <argp_parse@@Base+0x15d4>  // b.any
  43bbc4:	b	43bd60 <argp_parse@@Base+0x16b4>
  43bbc8:	cmp	w21, #0x2
  43bbcc:	b.ne	43bbe8 <argp_parse@@Base+0x153c>  // b.any
  43bbd0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43bbd4:	ldr	x1, [x8, #2416]
  43bbd8:	ldur	x2, [x29, #-48]
  43bbdc:	add	x0, x23, x28
  43bbe0:	bl	403e80 <memcpy@plt>
  43bbe4:	mov	w21, #0x1                   	// #1
  43bbe8:	ldur	w24, [x29, #-12]
  43bbec:	mov	x0, x23
  43bbf0:	mov	w20, w21
  43bbf4:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43bbf8:	mov	x19, x0
  43bbfc:	bl	43c15c <argp_parse@@Base+0x1ab0>
  43bc00:	mov	x21, x0
  43bc04:	cmp	x0, #0xf
  43bc08:	b.cc	43bc54 <argp_parse@@Base+0x15a8>  // b.lo, b.ul, b.last
  43bc0c:	ldr	x9, [sp, #16]
  43bc10:	mov	x8, x9
  43bc14:	cbnz	x9, 43bc58 <argp_parse@@Base+0x15ac>
  43bc18:	tbnz	w24, #31, 43bcc8 <argp_parse@@Base+0x161c>
  43bc1c:	bl	4049c0 <__errno_location@plt>
  43bc20:	mov	x22, x26
  43bc24:	mov	x26, x0
  43bc28:	str	wzr, [x0]
  43bc2c:	mov	w1, #0x3                   	// #3
  43bc30:	mov	w0, w24
  43bc34:	bl	4045b0 <fpathconf@plt>
  43bc38:	ldr	w8, [x26]
  43bc3c:	mov	x26, x22
  43bc40:	ldr	w22, [sp, #52]
  43bc44:	cmp	w8, #0x0
  43bc48:	cset	w8, eq  // eq = none
  43bc4c:	sub	x8, x0, x8
  43bc50:	b	43bd08 <argp_parse@@Base+0x165c>
  43bc54:	mov	w8, #0xff                  	// #255
  43bc58:	cmp	x8, x21
  43bc5c:	b.cs	43bc7c <argp_parse@@Base+0x15d0>  // b.hs, b.nlast
  43bc60:	add	x9, x23, x28
  43bc64:	sub	x9, x9, x19
  43bc68:	sub	x10, x8, #0x1
  43bc6c:	cmp	x8, x9
  43bc70:	csel	x8, x9, x10, hi  // hi = pmore
  43bc74:	mov	w9, #0x7e                  	// #126
  43bc78:	strh	w9, [x19, x8]
  43bc7c:	mov	w21, w20
  43bc80:	tbz	w22, #0, 43bd2c <argp_parse@@Base+0x1680>
  43bc84:	ldur	w2, [x29, #-12]
  43bc88:	tbz	w2, #31, 43bc98 <argp_parse@@Base+0x15ec>
  43bc8c:	mov	x25, xzr
  43bc90:	mov	w2, #0xffffff9c            	// #-100
  43bc94:	stur	w2, [x29, #-12]
  43bc98:	cmp	w21, #0x1
  43bc9c:	cset	w4, ne  // ne = any
  43bca0:	add	x3, x23, x25
  43bca4:	mov	w0, #0xffffff9c            	// #-100
  43bca8:	mov	x1, x26
  43bcac:	bl	44915c <argp_parse@@Base+0xeab0>
  43bcb0:	cbz	w0, 43bd2c <argp_parse@@Base+0x1680>
  43bcb4:	bl	4049c0 <__errno_location@plt>
  43bcb8:	ldr	w20, [x0]
  43bcbc:	cmp	w20, #0x11
  43bcc0:	b.eq	43b8e4 <argp_parse@@Base+0x1238>  // b.none
  43bcc4:	b	43bd3c <argp_parse@@Base+0x1690>
  43bcc8:	ldrh	w8, [x19]
  43bccc:	sturh	w8, [x29, #-4]
  43bcd0:	mov	w8, #0x2e                  	// #46
  43bcd4:	strh	w8, [x19]
  43bcd8:	bl	4049c0 <__errno_location@plt>
  43bcdc:	mov	x24, x0
  43bce0:	str	wzr, [x0]
  43bce4:	mov	w1, #0x3                   	// #3
  43bce8:	mov	x0, x23
  43bcec:	bl	4040c0 <pathconf@plt>
  43bcf0:	ldr	w8, [x24]
  43bcf4:	ldurh	w9, [x29, #-4]
  43bcf8:	cmp	w8, #0x0
  43bcfc:	cset	w8, eq  // eq = none
  43bd00:	sub	x8, x0, x8
  43bd04:	strh	w9, [x19]
  43bd08:	cmn	x8, #0x1
  43bd0c:	mov	w9, #0xe                   	// #14
  43bd10:	csinv	x9, x9, xzr, ne  // ne = any
  43bd14:	cmp	x8, #0x0
  43bd18:	csel	x8, x8, x9, ge  // ge = tcont
  43bd1c:	str	x8, [sp, #16]
  43bd20:	cmp	x8, x21
  43bd24:	b.cc	43bc60 <argp_parse@@Base+0x15b4>  // b.lo, b.ul, b.last
  43bd28:	b	43bc7c <argp_parse@@Base+0x15d0>
  43bd2c:	cbz	x27, 43bd78 <argp_parse@@Base+0x16cc>
  43bd30:	mov	x0, x27
  43bd34:	bl	4044b0 <closedir@plt>
  43bd38:	b	43bd78 <argp_parse@@Base+0x16cc>
  43bd3c:	mov	x19, x0
  43bd40:	cbz	x27, 43bd4c <argp_parse@@Base+0x16a0>
  43bd44:	mov	x0, x27
  43bd48:	bl	4044b0 <closedir@plt>
  43bd4c:	mov	x0, x23
  43bd50:	bl	4046b0 <free@plt>
  43bd54:	mov	x23, xzr
  43bd58:	str	w20, [x19]
  43bd5c:	b	43bd78 <argp_parse@@Base+0x16cc>
  43bd60:	mov	x0, x23
  43bd64:	bl	4046b0 <free@plt>
  43bd68:	bl	4049c0 <__errno_location@plt>
  43bd6c:	mov	w8, #0xc                   	// #12
  43bd70:	mov	x23, xzr
  43bd74:	str	w8, [x0]
  43bd78:	mov	x0, x23
  43bd7c:	ldp	x20, x19, [sp, #208]
  43bd80:	ldp	x22, x21, [sp, #192]
  43bd84:	ldp	x24, x23, [sp, #176]
  43bd88:	ldp	x26, x25, [sp, #160]
  43bd8c:	ldp	x28, x27, [sp, #144]
  43bd90:	ldp	x29, x30, [sp, #128]
  43bd94:	add	sp, sp, #0xe0
  43bd98:	ret
  43bd9c:	stp	x29, x30, [sp, #-16]!
  43bda0:	mov	w3, wzr
  43bda4:	mov	x29, sp
  43bda8:	bl	43b7ec <argp_parse@@Base+0x1140>
  43bdac:	cbz	x0, 43bdb8 <argp_parse@@Base+0x170c>
  43bdb0:	ldp	x29, x30, [sp], #16
  43bdb4:	ret
  43bdb8:	bl	40eb80 <wcrtomb@plt+0xa090>
  43bdbc:	stp	x29, x30, [sp, #-32]!
  43bdc0:	str	x19, [sp, #16]
  43bdc4:	mov	x29, sp
  43bdc8:	cbz	x1, 43be08 <argp_parse@@Base+0x175c>
  43bdcc:	ldrb	w8, [x1]
  43bdd0:	cbz	w8, 43be08 <argp_parse@@Base+0x175c>
  43bdd4:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43bdd8:	ldr	x5, [x8, #4008]
  43bddc:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43bde0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43bde4:	add	x19, x19, #0xa88
  43bde8:	add	x2, x2, #0xaa8
  43bdec:	mov	w4, #0x4                   	// #4
  43bdf0:	mov	x3, x19
  43bdf4:	bl	436fa4 <wcrtomb@plt+0x324b4>
  43bdf8:	ldr	w0, [x19, x0, lsl #2]
  43bdfc:	ldr	x19, [sp, #16]
  43be00:	ldp	x29, x30, [sp], #32
  43be04:	ret
  43be08:	mov	w0, #0x2                   	// #2
  43be0c:	ldr	x19, [sp, #16]
  43be10:	ldp	x29, x30, [sp], #32
  43be14:	ret
  43be18:	stp	x29, x30, [sp, #-32]!
  43be1c:	str	x19, [sp, #16]
  43be20:	mov	x29, sp
  43be24:	cbz	x1, 43be3c <argp_parse@@Base+0x1790>
  43be28:	ldrb	w8, [x1]
  43be2c:	cbz	w8, 43be3c <argp_parse@@Base+0x1790>
  43be30:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43be34:	ldr	x5, [x8, #4008]
  43be38:	b	43be68 <argp_parse@@Base+0x17bc>
  43be3c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43be40:	add	x0, x0, #0xaf1
  43be44:	bl	4049e0 <getenv@plt>
  43be48:	cbz	x0, 43be94 <argp_parse@@Base+0x17e8>
  43be4c:	ldrb	w8, [x0]
  43be50:	mov	x1, x0
  43be54:	cbz	w8, 43be94 <argp_parse@@Base+0x17e8>
  43be58:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43be5c:	ldr	x5, [x8, #4008]
  43be60:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43be64:	add	x0, x0, #0xaf0
  43be68:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43be6c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43be70:	add	x19, x19, #0xa88
  43be74:	add	x2, x2, #0xaa8
  43be78:	mov	w4, #0x4                   	// #4
  43be7c:	mov	x3, x19
  43be80:	bl	436fa4 <wcrtomb@plt+0x324b4>
  43be84:	ldr	w0, [x19, x0, lsl #2]
  43be88:	ldr	x19, [sp, #16]
  43be8c:	ldp	x29, x30, [sp], #32
  43be90:	ret
  43be94:	mov	w0, #0x2                   	// #2
  43be98:	ldr	x19, [sp, #16]
  43be9c:	ldp	x29, x30, [sp], #32
  43bea0:	ret
  43bea4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43bea8:	str	x0, [x8, #2432]
  43beac:	ret
  43beb0:	and	w8, w0, #0x1
  43beb4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43beb8:	strb	w8, [x9, #2424]
  43bebc:	ret
  43bec0:	stp	x29, x30, [sp, #-48]!
  43bec4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43bec8:	ldr	x0, [x8, #96]
  43becc:	str	x21, [sp, #16]
  43bed0:	stp	x20, x19, [sp, #32]
  43bed4:	mov	x29, sp
  43bed8:	bl	45ca44 <_obstack_memory_used@@Base+0x11880>
  43bedc:	cbz	w0, 43befc <argp_parse@@Base+0x1850>
  43bee0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43bee4:	ldrb	w8, [x8, #2424]
  43bee8:	cbz	w8, 43bf1c <argp_parse@@Base+0x1870>
  43beec:	bl	4049c0 <__errno_location@plt>
  43bef0:	ldr	w8, [x0]
  43bef4:	cmp	w8, #0x20
  43bef8:	b.ne	43bf1c <argp_parse@@Base+0x1870>  // b.any
  43befc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43bf00:	ldr	x0, [x8, #88]
  43bf04:	bl	45ca44 <_obstack_memory_used@@Base+0x11880>
  43bf08:	cbnz	w0, 43bf88 <argp_parse@@Base+0x18dc>
  43bf0c:	ldp	x20, x19, [sp, #32]
  43bf10:	ldr	x21, [sp, #16]
  43bf14:	ldp	x29, x30, [sp], #48
  43bf18:	ret
  43bf1c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43bf20:	add	x1, x1, #0xb28
  43bf24:	mov	w2, #0x5                   	// #5
  43bf28:	mov	x0, xzr
  43bf2c:	bl	4048b0 <dcgettext@plt>
  43bf30:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43bf34:	ldr	x21, [x8, #2432]
  43bf38:	mov	x19, x0
  43bf3c:	bl	4049c0 <__errno_location@plt>
  43bf40:	ldr	w20, [x0]
  43bf44:	cbnz	x21, 43bf64 <argp_parse@@Base+0x18b8>
  43bf48:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43bf4c:	add	x2, x2, #0x274
  43bf50:	mov	w0, wzr
  43bf54:	mov	w1, w20
  43bf58:	mov	x3, x19
  43bf5c:	bl	403f60 <error@plt>
  43bf60:	b	43bf88 <argp_parse@@Base+0x18dc>
  43bf64:	mov	x0, x21
  43bf68:	bl	448e5c <argp_parse@@Base+0xe7b0>
  43bf6c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x17e3c>
  43bf70:	mov	x3, x0
  43bf74:	add	x2, x2, #0x140
  43bf78:	mov	w0, wzr
  43bf7c:	mov	w1, w20
  43bf80:	mov	x4, x19
  43bf84:	bl	403f60 <error@plt>
  43bf88:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  43bf8c:	ldr	w0, [x8, #4056]
  43bf90:	bl	403ea0 <_exit@plt>
  43bf94:	stp	x29, x30, [sp, #-16]!
  43bf98:	mov	x29, sp
  43bf9c:	bl	43c064 <argp_parse@@Base+0x19b8>
  43bfa0:	cbz	x0, 43bfac <argp_parse@@Base+0x1900>
  43bfa4:	ldp	x29, x30, [sp], #16
  43bfa8:	ret
  43bfac:	bl	40eb80 <wcrtomb@plt+0xa090>
  43bfb0:	stp	x29, x30, [sp, #-32]!
  43bfb4:	stp	x20, x19, [sp, #16]
  43bfb8:	mov	x29, sp
  43bfbc:	mov	x19, x0
  43bfc0:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43bfc4:	ldrb	w8, [x0]
  43bfc8:	cbz	w8, 43bff0 <argp_parse@@Base+0x1944>
  43bfcc:	mov	x20, x0
  43bfd0:	bl	43c15c <argp_parse@@Base+0x1ab0>
  43bfd4:	ldrb	w8, [x20, x0]
  43bfd8:	cmp	w8, #0x2f
  43bfdc:	cinc	x1, x0, eq  // eq = none
  43bfe0:	mov	x0, x20
  43bfe4:	ldp	x20, x19, [sp, #16]
  43bfe8:	ldp	x29, x30, [sp], #32
  43bfec:	b	44a390 <argp_parse@@Base+0xfce4>
  43bff0:	mov	x0, x19
  43bff4:	bl	43c15c <argp_parse@@Base+0x1ab0>
  43bff8:	mov	x1, x0
  43bffc:	mov	x0, x19
  43c000:	ldp	x20, x19, [sp, #16]
  43c004:	ldp	x29, x30, [sp], #32
  43c008:	b	44a390 <argp_parse@@Base+0xfce4>
  43c00c:	stp	x29, x30, [sp, #-48]!
  43c010:	str	x21, [sp, #16]
  43c014:	stp	x20, x19, [sp, #32]
  43c018:	mov	x20, x0
  43c01c:	ldrb	w8, [x20], #-1
  43c020:	mov	x29, sp
  43c024:	mov	x19, x0
  43c028:	cmp	w8, #0x2f
  43c02c:	cset	w21, eq  // eq = none
  43c030:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43c034:	sub	x8, x0, x19
  43c038:	mov	x0, x8
  43c03c:	cmp	x8, x21
  43c040:	b.ls	43c054 <argp_parse@@Base+0x19a8>  // b.plast
  43c044:	ldrb	w8, [x20, x0]
  43c048:	cmp	w8, #0x2f
  43c04c:	sub	x8, x0, #0x1
  43c050:	b.eq	43c038 <argp_parse@@Base+0x198c>  // b.none
  43c054:	ldp	x20, x19, [sp, #32]
  43c058:	ldr	x21, [sp, #16]
  43c05c:	ldp	x29, x30, [sp], #48
  43c060:	ret
  43c064:	stp	x29, x30, [sp, #-48]!
  43c068:	stp	x22, x21, [sp, #16]
  43c06c:	stp	x20, x19, [sp, #32]
  43c070:	mov	x21, x0
  43c074:	ldrb	w8, [x21], #-1
  43c078:	mov	x29, sp
  43c07c:	mov	x19, x0
  43c080:	cmp	w8, #0x2f
  43c084:	cset	w22, eq  // eq = none
  43c088:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43c08c:	sub	x8, x0, x19
  43c090:	mov	x20, x8
  43c094:	cmp	x8, x22
  43c098:	b.ls	43c0ac <argp_parse@@Base+0x1a00>  // b.plast
  43c09c:	ldrb	w8, [x21, x20]
  43c0a0:	cmp	w8, #0x2f
  43c0a4:	sub	x8, x20, #0x1
  43c0a8:	b.eq	43c090 <argp_parse@@Base+0x19e4>  // b.none
  43c0ac:	cmp	x20, #0x0
  43c0b0:	cinc	x8, x20, eq  // eq = none
  43c0b4:	add	x0, x8, #0x1
  43c0b8:	bl	404210 <malloc@plt>
  43c0bc:	mov	x21, x0
  43c0c0:	cbz	x0, 43c0e8 <argp_parse@@Base+0x1a3c>
  43c0c4:	mov	x0, x21
  43c0c8:	mov	x1, x19
  43c0cc:	mov	x2, x20
  43c0d0:	bl	403e80 <memcpy@plt>
  43c0d4:	cbnz	x20, 43c0e4 <argp_parse@@Base+0x1a38>
  43c0d8:	mov	w8, #0x2e                  	// #46
  43c0dc:	mov	w20, #0x1                   	// #1
  43c0e0:	strb	w8, [x21]
  43c0e4:	strb	wzr, [x21, x20]
  43c0e8:	mov	x0, x21
  43c0ec:	ldp	x20, x19, [sp, #32]
  43c0f0:	ldp	x22, x21, [sp, #16]
  43c0f4:	ldp	x29, x30, [sp], #48
  43c0f8:	ret
  43c0fc:	sub	x0, x0, #0x1
  43c100:	ldrb	w10, [x0, #1]!
  43c104:	cmp	w10, #0x2f
  43c108:	b.eq	43c100 <argp_parse@@Base+0x1a54>  // b.none
  43c10c:	mov	w8, wzr
  43c110:	mov	x9, x0
  43c114:	and	w10, w10, #0xff
  43c118:	cmp	w10, #0x2f
  43c11c:	b.ne	43c134 <argp_parse@@Base+0x1a88>  // b.any
  43c120:	ldrb	w10, [x9, #1]!
  43c124:	mov	w8, #0x1                   	// #1
  43c128:	and	w10, w10, #0xff
  43c12c:	cmp	w10, #0x2f
  43c130:	b.eq	43c120 <argp_parse@@Base+0x1a74>  // b.none
  43c134:	cbz	w10, 43c158 <argp_parse@@Base+0x1aac>
  43c138:	tst	w8, #0x1
  43c13c:	csel	x0, x9, x0, ne  // ne = any
  43c140:	ldrb	w10, [x9, #1]!
  43c144:	mov	w8, wzr
  43c148:	and	w10, w10, #0xff
  43c14c:	cmp	w10, #0x2f
  43c150:	b.ne	43c134 <argp_parse@@Base+0x1a88>  // b.any
  43c154:	b	43c120 <argp_parse@@Base+0x1a74>
  43c158:	ret
  43c15c:	stp	x29, x30, [sp, #-32]!
  43c160:	str	x19, [sp, #16]
  43c164:	mov	x29, sp
  43c168:	mov	x19, x0
  43c16c:	bl	403f00 <strlen@plt>
  43c170:	mov	x8, x0
  43c174:	sub	x9, x19, #0x1
  43c178:	mov	x0, x8
  43c17c:	cmp	x8, #0x2
  43c180:	b.cc	43c194 <argp_parse@@Base+0x1ae8>  // b.lo, b.ul, b.last
  43c184:	ldrb	w8, [x9, x0]
  43c188:	cmp	w8, #0x2f
  43c18c:	sub	x8, x0, #0x1
  43c190:	b.eq	43c178 <argp_parse@@Base+0x1acc>  // b.none
  43c194:	ldr	x19, [sp, #16]
  43c198:	ldp	x29, x30, [sp], #32
  43c19c:	ret
  43c1a0:	stp	x29, x30, [sp, #-32]!
  43c1a4:	str	x19, [sp, #16]
  43c1a8:	mov	x29, sp
  43c1ac:	mov	x19, x0
  43c1b0:	bl	43c0fc <argp_parse@@Base+0x1a50>
  43c1b4:	ldrb	w8, [x0]
  43c1b8:	cmp	w8, #0x0
  43c1bc:	csel	x19, x19, x0, eq  // eq = none
  43c1c0:	mov	x0, x19
  43c1c4:	bl	43c15c <argp_parse@@Base+0x1ab0>
  43c1c8:	ldrb	w8, [x19, x0]
  43c1cc:	strb	wzr, [x19, x0]
  43c1d0:	ldr	x19, [sp, #16]
  43c1d4:	cmp	w8, #0x0
  43c1d8:	cset	w0, ne  // ne = any
  43c1dc:	ldp	x29, x30, [sp], #32
  43c1e0:	ret
  43c1e4:	stp	x29, x30, [sp, #-32]!
  43c1e8:	stp	x20, x19, [sp, #16]
  43c1ec:	mov	x20, x0
  43c1f0:	mov	w0, #0x10                  	// #16
  43c1f4:	mov	x29, sp
  43c1f8:	mov	x19, x1
  43c1fc:	bl	44a010 <argp_parse@@Base+0xf964>
  43c200:	ldr	x8, [x20, #8]
  43c204:	stp	x8, x19, [x0]
  43c208:	str	x0, [x20, #8]
  43c20c:	ldp	x20, x19, [sp, #16]
  43c210:	ldp	x29, x30, [sp], #32
  43c214:	ret
  43c218:	tbnz	w1, #5, 43c2c4 <argp_parse@@Base+0x1c18>
  43c21c:	tbz	w1, #27, 43c274 <argp_parse@@Base+0x1bc8>
  43c220:	mov	x9, #0x1                   	// #1
  43c224:	mov	x10, #0x470000000000        	// #78065325572096
  43c228:	mov	w8, #0x1                   	// #1
  43c22c:	movk	x9, #0x5, lsl #32
  43c230:	movk	x10, #0x8000, lsl #48
  43c234:	ldrb	w11, [x0], #1
  43c238:	cmp	w11, #0x3f
  43c23c:	b.hi	43c250 <argp_parse@@Base+0x1ba4>  // b.pmore
  43c240:	lsl	x12, x8, x11
  43c244:	tst	x12, x10
  43c248:	b.ne	43c3e8 <argp_parse@@Base+0x1d3c>  // b.any
  43c24c:	cbz	x11, 43c3f0 <argp_parse@@Base+0x1d44>
  43c250:	sub	w11, w11, #0x5b
  43c254:	cmp	w11, #0x22
  43c258:	b.hi	43c234 <argp_parse@@Base+0x1b88>  // b.pmore
  43c25c:	lsl	x11, x8, x11
  43c260:	tst	x11, x9
  43c264:	b.eq	43c234 <argp_parse@@Base+0x1b88>  // b.none
  43c268:	b	43c3e8 <argp_parse@@Base+0x1d3c>
  43c26c:	mov	w8, wzr
  43c270:	add	x0, x0, x8
  43c274:	ldrb	w8, [x0], #1
  43c278:	cmp	w8, #0x5a
  43c27c:	b.le	43c2a0 <argp_parse@@Base+0x1bf4>
  43c280:	cmp	w8, #0x5c
  43c284:	b.ne	43c2b8 <argp_parse@@Base+0x1c0c>  // b.any
  43c288:	tbnz	w1, #1, 43c26c <argp_parse@@Base+0x1bc0>
  43c28c:	ldrb	w8, [x0]
  43c290:	cmp	w8, #0x0
  43c294:	cset	w8, ne  // ne = any
  43c298:	add	x0, x0, x8
  43c29c:	b	43c274 <argp_parse@@Base+0x1bc8>
  43c2a0:	cbz	w8, 43c3f0 <argp_parse@@Base+0x1d44>
  43c2a4:	cmp	w8, #0x2a
  43c2a8:	b.eq	43c3e8 <argp_parse@@Base+0x1d3c>  // b.none
  43c2ac:	cmp	w8, #0x3f
  43c2b0:	b.ne	43c274 <argp_parse@@Base+0x1bc8>  // b.any
  43c2b4:	b	43c3e8 <argp_parse@@Base+0x1d3c>
  43c2b8:	cmp	w8, #0x5b
  43c2bc:	b.ne	43c274 <argp_parse@@Base+0x1bc8>  // b.any
  43c2c0:	b	43c3e8 <argp_parse@@Base+0x1d3c>
  43c2c4:	tbnz	w1, #27, 43c340 <argp_parse@@Base+0x1c94>
  43c2c8:	tbnz	w1, #1, 43c38c <argp_parse@@Base+0x1ce0>
  43c2cc:	mov	x10, #0x200                 	// #512
  43c2d0:	mov	w9, #0x401                 	// #1025
  43c2d4:	movk	x10, #0x4000, lsl #16
  43c2d8:	mov	w8, #0x1                   	// #1
  43c2dc:	movk	w9, #0x8000, lsl #16
  43c2e0:	movk	x10, #0x400, lsl #48
  43c2e4:	b	43c300 <argp_parse@@Base+0x1c54>
  43c2e8:	cmp	x12, #0x3b
  43c2ec:	b.eq	43c32c <argp_parse@@Base+0x1c80>  // b.none
  43c2f0:	lsl	x12, x8, x12
  43c2f4:	tst	x12, x10
  43c2f8:	b.ne	43c3e8 <argp_parse@@Base+0x1d3c>  // b.any
  43c2fc:	cbz	w11, 43c3f0 <argp_parse@@Base+0x1d44>
  43c300:	ldrb	w11, [x0], #1
  43c304:	sub	w12, w11, #0x21
  43c308:	cmp	w12, #0x3b
  43c30c:	b.hi	43c2fc <argp_parse@@Base+0x1c50>  // b.pmore
  43c310:	lsl	x13, x8, x12
  43c314:	tst	x13, x9
  43c318:	b.eq	43c2e8 <argp_parse@@Base+0x1c3c>  // b.none
  43c31c:	ldrb	w11, [x0]
  43c320:	cmp	w11, #0x28
  43c324:	b.ne	43c300 <argp_parse@@Base+0x1c54>  // b.any
  43c328:	b	43c3e8 <argp_parse@@Base+0x1d3c>
  43c32c:	mov	x11, x0
  43c330:	ldrb	w12, [x11], #1
  43c334:	cmp	w12, #0x0
  43c338:	csel	x0, x0, x11, eq  // eq = none
  43c33c:	b	43c300 <argp_parse@@Base+0x1c54>
  43c340:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43c344:	add	x8, x0, #0x1
  43c348:	add	x9, x9, #0xb34
  43c34c:	mov	w0, #0x1                   	// #1
  43c350:	b	43c35c <argp_parse@@Base+0x1cb0>
  43c354:	cbz	w11, 43c3f0 <argp_parse@@Base+0x1d44>
  43c358:	add	x8, x8, #0x1
  43c35c:	ldurb	w11, [x8, #-1]
  43c360:	sub	w10, w11, #0x21
  43c364:	cmp	w10, #0x5c
  43c368:	b.hi	43c354 <argp_parse@@Base+0x1ca8>  // b.pmore
  43c36c:	adr	x11, 43c358 <argp_parse@@Base+0x1cac>
  43c370:	ldrb	w12, [x9, x10]
  43c374:	add	x11, x11, x12, lsl #2
  43c378:	br	x11
  43c37c:	ldrb	w10, [x8]
  43c380:	cmp	w10, #0x28
  43c384:	b.ne	43c358 <argp_parse@@Base+0x1cac>  // b.any
  43c388:	b	43c3e8 <argp_parse@@Base+0x1d3c>
  43c38c:	mov	x11, #0x200                 	// #512
  43c390:	mov	w10, #0x401                 	// #1025
  43c394:	movk	x11, #0x4000, lsl #16
  43c398:	add	x8, x0, #0x1
  43c39c:	mov	w9, #0x1                   	// #1
  43c3a0:	movk	w10, #0x8000, lsl #16
  43c3a4:	movk	x11, #0x400, lsl #48
  43c3a8:	b	43c3c0 <argp_parse@@Base+0x1d14>
  43c3ac:	lsl	x13, x9, x13
  43c3b0:	tst	x13, x11
  43c3b4:	b.ne	43c3e8 <argp_parse@@Base+0x1d3c>  // b.any
  43c3b8:	cbz	w12, 43c3f0 <argp_parse@@Base+0x1d44>
  43c3bc:	add	x8, x8, #0x1
  43c3c0:	ldurb	w12, [x8, #-1]
  43c3c4:	sub	w13, w12, #0x21
  43c3c8:	cmp	w13, #0x3a
  43c3cc:	b.hi	43c3b8 <argp_parse@@Base+0x1d0c>  // b.pmore
  43c3d0:	lsl	x14, x9, x13
  43c3d4:	tst	x14, x10
  43c3d8:	b.eq	43c3ac <argp_parse@@Base+0x1d00>  // b.none
  43c3dc:	ldrb	w12, [x8]
  43c3e0:	cmp	w12, #0x28
  43c3e4:	b.ne	43c3bc <argp_parse@@Base+0x1d10>  // b.any
  43c3e8:	mov	w0, #0x1                   	// #1
  43c3ec:	ret
  43c3f0:	mov	w0, wzr
  43c3f4:	ret
  43c3f8:	mov	w0, #0x10                  	// #16
  43c3fc:	b	44a230 <argp_parse@@Base+0xfb84>
  43c400:	stp	x29, x30, [sp, #-64]!
  43c404:	stp	x22, x21, [sp, #32]
  43c408:	stp	x20, x19, [sp, #48]
  43c40c:	ldr	x21, [x0]
  43c410:	mov	x19, x0
  43c414:	str	x23, [sp, #16]
  43c418:	mov	x29, sp
  43c41c:	cbnz	x21, 43c46c <argp_parse@@Base+0x1dc0>
  43c420:	ldr	x20, [x19, #8]
  43c424:	cbz	x20, 43c440 <argp_parse@@Base+0x1d94>
  43c428:	ldp	x21, x0, [x20]
  43c42c:	bl	4046b0 <free@plt>
  43c430:	mov	x0, x20
  43c434:	bl	4046b0 <free@plt>
  43c438:	mov	x20, x21
  43c43c:	cbnz	x21, 43c428 <argp_parse@@Base+0x1d7c>
  43c440:	mov	x0, x19
  43c444:	ldp	x20, x19, [sp, #48]
  43c448:	ldp	x22, x21, [sp, #32]
  43c44c:	ldr	x23, [sp, #16]
  43c450:	ldp	x29, x30, [sp], #64
  43c454:	b	4046b0 <free@plt>
  43c458:	ldr	x0, [x20, #16]
  43c45c:	bl	43ee08 <argp_parse@@Base+0x475c>
  43c460:	mov	x0, x20
  43c464:	bl	4046b0 <free@plt>
  43c468:	cbz	x21, 43c420 <argp_parse@@Base+0x1d74>
  43c46c:	mov	x20, x21
  43c470:	ldr	w8, [x21, #8]
  43c474:	ldr	x21, [x21]
  43c478:	cbz	w8, 43c458 <argp_parse@@Base+0x1dac>
  43c47c:	cmp	w8, #0x1
  43c480:	b.ne	43c460 <argp_parse@@Base+0x1db4>  // b.any
  43c484:	ldr	x8, [x20, #32]
  43c488:	ldr	x0, [x20, #16]
  43c48c:	cbz	x8, 43c4cc <argp_parse@@Base+0x1e20>
  43c490:	mov	x22, xzr
  43c494:	mov	x23, xzr
  43c498:	b	43c4ac <argp_parse@@Base+0x1e00>
  43c49c:	add	x23, x23, #0x1
  43c4a0:	cmp	x23, x8
  43c4a4:	add	x22, x22, #0x48
  43c4a8:	b.cs	43c4cc <argp_parse@@Base+0x1e20>  // b.hs, b.nlast
  43c4ac:	add	x9, x0, x22
  43c4b0:	ldrb	w10, [x9, #3]
  43c4b4:	tbz	w10, #3, 43c49c <argp_parse@@Base+0x1df0>
  43c4b8:	add	x0, x9, #0x8
  43c4bc:	bl	44d018 <_obstack_memory_used@@Base+0x1e54>
  43c4c0:	ldr	x8, [x20, #32]
  43c4c4:	ldr	x0, [x20, #16]
  43c4c8:	b	43c49c <argp_parse@@Base+0x1df0>
  43c4cc:	bl	4046b0 <free@plt>
  43c4d0:	b	43c460 <argp_parse@@Base+0x1db4>
  43c4d4:	stp	x29, x30, [sp, #-48]!
  43c4d8:	adrp	x8, 404000 <localtime_r@plt>
  43c4dc:	adrp	x9, 43c000 <argp_parse@@Base+0x1954>
  43c4e0:	add	x8, x8, #0x7a0
  43c4e4:	add	x9, x9, #0x578
  43c4e8:	tst	w2, #0x10000000
  43c4ec:	stp	x22, x21, [sp, #16]
  43c4f0:	csel	x22, x9, x8, eq  // eq = none
  43c4f4:	stp	x20, x19, [sp, #32]
  43c4f8:	mov	x29, sp
  43c4fc:	mov	w19, w2
  43c500:	mov	x21, x1
  43c504:	mov	x20, x0
  43c508:	blr	x22
  43c50c:	cmp	w0, #0x0
  43c510:	cset	w8, eq  // eq = none
  43c514:	tbnz	w19, #30, 43c564 <argp_parse@@Base+0x1eb8>
  43c518:	ldrb	w9, [x21]
  43c51c:	cbz	w9, 43c564 <argp_parse@@Base+0x1eb8>
  43c520:	cbz	w0, 43c564 <argp_parse@@Base+0x1eb8>
  43c524:	add	x21, x21, #0x1
  43c528:	and	w9, w9, #0xff
  43c52c:	cmp	w9, #0x2f
  43c530:	b.ne	43c558 <argp_parse@@Base+0x1eac>  // b.any
  43c534:	ldrb	w9, [x21]
  43c538:	cmp	w9, #0x2f
  43c53c:	b.eq	43c558 <argp_parse@@Base+0x1eac>  // b.none
  43c540:	mov	x0, x20
  43c544:	mov	x1, x21
  43c548:	mov	w2, w19
  43c54c:	blr	x22
  43c550:	cmp	w0, #0x0
  43c554:	cset	w8, eq  // eq = none
  43c558:	ldrb	w9, [x21], #1
  43c55c:	cbz	w9, 43c564 <argp_parse@@Base+0x1eb8>
  43c560:	tbz	w8, #0, 43c528 <argp_parse@@Base+0x1e7c>
  43c564:	ldp	x20, x19, [sp, #32]
  43c568:	ldp	x22, x21, [sp, #16]
  43c56c:	and	w0, w8, #0x1
  43c570:	ldp	x29, x30, [sp], #48
  43c574:	ret
  43c578:	stp	x29, x30, [sp, #-64]!
  43c57c:	stp	x20, x19, [sp, #48]
  43c580:	mov	x20, x1
  43c584:	mov	x19, x0
  43c588:	str	x23, [sp, #16]
  43c58c:	stp	x22, x21, [sp, #32]
  43c590:	mov	x29, sp
  43c594:	tbnz	w2, #3, 43c5b8 <argp_parse@@Base+0x1f0c>
  43c598:	mov	x0, x19
  43c59c:	mov	x1, x20
  43c5a0:	tbz	w2, #4, 43c628 <argp_parse@@Base+0x1f7c>
  43c5a4:	ldp	x20, x19, [sp, #48]
  43c5a8:	ldp	x22, x21, [sp, #32]
  43c5ac:	ldr	x23, [sp, #16]
  43c5b0:	ldp	x29, x30, [sp], #64
  43c5b4:	b	440304 <argp_parse@@Base+0x5c58>
  43c5b8:	tbz	w2, #4, 43c63c <argp_parse@@Base+0x1f90>
  43c5bc:	mov	x0, x20
  43c5c0:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  43c5c4:	mov	w1, #0x2f                  	// #47
  43c5c8:	mov	x20, x0
  43c5cc:	mov	w23, #0x2f                  	// #47
  43c5d0:	bl	404750 <strchr@plt>
  43c5d4:	cbz	x0, 43c60c <argp_parse@@Base+0x1f60>
  43c5d8:	mov	x22, x0
  43c5dc:	mov	x0, x19
  43c5e0:	mov	x1, x20
  43c5e4:	strb	wzr, [x22]
  43c5e8:	bl	440304 <argp_parse@@Base+0x5c58>
  43c5ec:	cmp	w0, #0x1
  43c5f0:	b.lt	43c618 <argp_parse@@Base+0x1f6c>  // b.tstop
  43c5f4:	strb	w23, [x22], #1
  43c5f8:	mov	w1, #0x2f                  	// #47
  43c5fc:	mov	x0, x22
  43c600:	bl	404750 <strchr@plt>
  43c604:	mov	x22, x0
  43c608:	cbnz	x0, 43c5dc <argp_parse@@Base+0x1f30>
  43c60c:	mov	x0, x19
  43c610:	mov	x1, x20
  43c614:	bl	440304 <argp_parse@@Base+0x5c58>
  43c618:	mov	w21, w0
  43c61c:	mov	x0, x20
  43c620:	bl	4046b0 <free@plt>
  43c624:	b	43c66c <argp_parse@@Base+0x1fc0>
  43c628:	ldp	x20, x19, [sp, #48]
  43c62c:	ldp	x22, x21, [sp, #32]
  43c630:	ldr	x23, [sp, #16]
  43c634:	ldp	x29, x30, [sp], #64
  43c638:	b	404610 <strcmp@plt>
  43c63c:	mov	x0, x19
  43c640:	bl	403f00 <strlen@plt>
  43c644:	mov	x22, x0
  43c648:	mov	x0, x19
  43c64c:	mov	x1, x20
  43c650:	mov	x2, x22
  43c654:	bl	4042c0 <strncmp@plt>
  43c658:	mov	w21, w0
  43c65c:	cbnz	w0, 43c66c <argp_parse@@Base+0x1fc0>
  43c660:	ldrb	w8, [x20, x22]
  43c664:	cmp	w8, #0x2f
  43c668:	csel	w21, wzr, w8, eq  // eq = none
  43c66c:	mov	w0, w21
  43c670:	ldp	x20, x19, [sp, #48]
  43c674:	ldp	x22, x21, [sp, #32]
  43c678:	ldr	x23, [sp, #16]
  43c67c:	ldp	x29, x30, [sp], #64
  43c680:	ret
  43c684:	sub	sp, sp, #0x70
  43c688:	stp	x29, x30, [sp, #16]
  43c68c:	stp	x28, x27, [sp, #32]
  43c690:	stp	x26, x25, [sp, #48]
  43c694:	stp	x24, x23, [sp, #64]
  43c698:	stp	x22, x21, [sp, #80]
  43c69c:	stp	x20, x19, [sp, #96]
  43c6a0:	ldr	x8, [x0]
  43c6a4:	add	x29, sp, #0x10
  43c6a8:	cbz	x8, 43c6c4 <argp_parse@@Base+0x2018>
  43c6ac:	mov	x20, x1
  43c6b0:	mov	x19, xzr
  43c6b4:	add	x9, x1, #0x1
  43c6b8:	mov	w23, #0x48                  	// #72
  43c6bc:	str	x9, [sp, #8]
  43c6c0:	b	43c6f0 <argp_parse@@Base+0x2044>
  43c6c4:	mov	w0, wzr
  43c6c8:	b	43c900 <argp_parse@@Base+0x2254>
  43c6cc:	mov	x0, x19
  43c6d0:	mov	x1, x20
  43c6d4:	bl	4047f0 <strcpy@plt>
  43c6d8:	mov	x0, x21
  43c6dc:	mov	x1, x19
  43c6e0:	bl	43e854 <argp_parse@@Base+0x41a8>
  43c6e4:	cbnz	x0, 43c8e0 <argp_parse@@Base+0x2234>
  43c6e8:	ldr	x8, [x24]
  43c6ec:	cbz	x8, 43c920 <argp_parse@@Base+0x2274>
  43c6f0:	mov	x24, x8
  43c6f4:	ldr	w8, [x8, #8]
  43c6f8:	cbz	w8, 43c7d0 <argp_parse@@Base+0x2124>
  43c6fc:	ldr	x25, [x24, #32]
  43c700:	cbz	x25, 43c6e8 <argp_parse@@Base+0x203c>
  43c704:	ldr	x27, [x24, #16]
  43c708:	mov	x28, xzr
  43c70c:	b	43c734 <argp_parse@@Base+0x2088>
  43c710:	mov	x1, x20
  43c714:	mov	x2, xzr
  43c718:	mov	x3, xzr
  43c71c:	mov	w4, wzr
  43c720:	bl	44d228 <_obstack_memory_used@@Base+0x2064>
  43c724:	cbz	w0, 43c8e0 <argp_parse@@Base+0x2234>
  43c728:	add	x28, x28, #0x1
  43c72c:	cmp	x28, x25
  43c730:	b.eq	43c6e8 <argp_parse@@Base+0x203c>  // b.none
  43c734:	madd	x0, x28, x23, x27
  43c738:	ldr	w21, [x0], #8
  43c73c:	tbnz	w21, #27, 43c710 <argp_parse@@Base+0x2064>
  43c740:	ldr	x22, [x0]
  43c744:	adrp	x8, 404000 <localtime_r@plt>
  43c748:	adrp	x9, 43c000 <argp_parse@@Base+0x1954>
  43c74c:	tst	w21, #0x10000000
  43c750:	add	x8, x8, #0x7a0
  43c754:	add	x9, x9, #0x578
  43c758:	csel	x26, x9, x8, eq  // eq = none
  43c75c:	mov	x0, x22
  43c760:	mov	x1, x20
  43c764:	mov	w2, w21
  43c768:	blr	x26
  43c76c:	cmp	w0, #0x0
  43c770:	cset	w8, eq  // eq = none
  43c774:	tbnz	w21, #30, 43c7c4 <argp_parse@@Base+0x2118>
  43c778:	ldrb	w9, [x20]
  43c77c:	cbz	w9, 43c7c4 <argp_parse@@Base+0x2118>
  43c780:	cbz	w0, 43c7c4 <argp_parse@@Base+0x2118>
  43c784:	ldr	x23, [sp, #8]
  43c788:	and	w9, w9, #0xff
  43c78c:	cmp	w9, #0x2f
  43c790:	b.ne	43c7b8 <argp_parse@@Base+0x210c>  // b.any
  43c794:	ldrb	w9, [x23]
  43c798:	cmp	w9, #0x2f
  43c79c:	b.eq	43c7b8 <argp_parse@@Base+0x210c>  // b.none
  43c7a0:	mov	x0, x22
  43c7a4:	mov	x1, x23
  43c7a8:	mov	w2, w21
  43c7ac:	blr	x26
  43c7b0:	cmp	w0, #0x0
  43c7b4:	cset	w8, eq  // eq = none
  43c7b8:	ldrb	w9, [x23], #1
  43c7bc:	cbz	w9, 43c7c4 <argp_parse@@Base+0x2118>
  43c7c0:	tbz	w8, #0, 43c788 <argp_parse@@Base+0x20dc>
  43c7c4:	mov	w23, #0x48                  	// #72
  43c7c8:	tbz	w8, #0, 43c728 <argp_parse@@Base+0x207c>
  43c7cc:	b	43c8e0 <argp_parse@@Base+0x2234>
  43c7d0:	cbz	x19, 43c81c <argp_parse@@Base+0x2170>
  43c7d4:	ldr	w8, [x24, #12]
  43c7d8:	ldr	x21, [x24, #16]
  43c7dc:	tbnz	w8, #3, 43c83c <argp_parse@@Base+0x2190>
  43c7e0:	tbnz	w8, #30, 43c6cc <argp_parse@@Base+0x2020>
  43c7e4:	mov	x22, x20
  43c7e8:	mov	x0, x19
  43c7ec:	mov	x1, x22
  43c7f0:	bl	4047f0 <strcpy@plt>
  43c7f4:	mov	x0, x21
  43c7f8:	mov	x1, x19
  43c7fc:	bl	43e854 <argp_parse@@Base+0x41a8>
  43c800:	cbnz	x0, 43c8e0 <argp_parse@@Base+0x2234>
  43c804:	mov	w1, #0x2f                  	// #47
  43c808:	mov	x0, x22
  43c80c:	bl	404750 <strchr@plt>
  43c810:	add	x22, x0, #0x1
  43c814:	cbnz	x0, 43c7e8 <argp_parse@@Base+0x213c>
  43c818:	b	43c6e8 <argp_parse@@Base+0x203c>
  43c81c:	mov	x0, x20
  43c820:	bl	403f00 <strlen@plt>
  43c824:	add	x0, x0, #0x1
  43c828:	bl	44a010 <argp_parse@@Base+0xf964>
  43c82c:	mov	x19, x0
  43c830:	ldr	w8, [x24, #12]
  43c834:	ldr	x21, [x24, #16]
  43c838:	tbz	w8, #3, 43c7e0 <argp_parse@@Base+0x2134>
  43c83c:	tbnz	w8, #30, 43c8a0 <argp_parse@@Base+0x21f4>
  43c840:	mov	x22, x20
  43c844:	mov	x0, x19
  43c848:	mov	x1, x22
  43c84c:	bl	4047f0 <strcpy@plt>
  43c850:	mov	x0, x21
  43c854:	mov	x1, x19
  43c858:	bl	43e854 <argp_parse@@Base+0x41a8>
  43c85c:	cbnz	x0, 43c8e0 <argp_parse@@Base+0x2234>
  43c860:	mov	w1, #0x2f                  	// #47
  43c864:	mov	x0, x19
  43c868:	bl	4044e0 <strrchr@plt>
  43c86c:	cbz	x0, 43c888 <argp_parse@@Base+0x21dc>
  43c870:	strb	wzr, [x0]
  43c874:	mov	x0, x21
  43c878:	mov	x1, x19
  43c87c:	bl	43e854 <argp_parse@@Base+0x41a8>
  43c880:	cbz	x0, 43c860 <argp_parse@@Base+0x21b4>
  43c884:	b	43c8e0 <argp_parse@@Base+0x2234>
  43c888:	mov	w1, #0x2f                  	// #47
  43c88c:	mov	x0, x22
  43c890:	bl	404750 <strchr@plt>
  43c894:	add	x22, x0, #0x1
  43c898:	cbnz	x0, 43c844 <argp_parse@@Base+0x2198>
  43c89c:	b	43c6e8 <argp_parse@@Base+0x203c>
  43c8a0:	mov	x0, x19
  43c8a4:	mov	x1, x20
  43c8a8:	bl	4047f0 <strcpy@plt>
  43c8ac:	mov	x0, x21
  43c8b0:	mov	x1, x19
  43c8b4:	bl	43e854 <argp_parse@@Base+0x41a8>
  43c8b8:	cbnz	x0, 43c8e0 <argp_parse@@Base+0x2234>
  43c8bc:	mov	w1, #0x2f                  	// #47
  43c8c0:	mov	x0, x19
  43c8c4:	bl	4044e0 <strrchr@plt>
  43c8c8:	cbz	x0, 43c6e8 <argp_parse@@Base+0x203c>
  43c8cc:	strb	wzr, [x0]
  43c8d0:	mov	x0, x21
  43c8d4:	mov	x1, x19
  43c8d8:	bl	43e854 <argp_parse@@Base+0x41a8>
  43c8dc:	cbz	x0, 43c8bc <argp_parse@@Base+0x2210>
  43c8e0:	mov	w20, wzr
  43c8e4:	mov	x0, x19
  43c8e8:	bl	4046b0 <free@plt>
  43c8ec:	ldr	w8, [x24, #12]
  43c8f0:	mov	w9, #0x1                   	// #1
  43c8f4:	bic	w8, w9, w8, lsr #29
  43c8f8:	cmp	w20, w8
  43c8fc:	cset	w0, ne  // ne = any
  43c900:	ldp	x20, x19, [sp, #96]
  43c904:	ldp	x22, x21, [sp, #80]
  43c908:	ldp	x24, x23, [sp, #64]
  43c90c:	ldp	x26, x25, [sp, #48]
  43c910:	ldp	x28, x27, [sp, #32]
  43c914:	ldp	x29, x30, [sp, #16]
  43c918:	add	sp, sp, #0x70
  43c91c:	ret
  43c920:	mov	w20, #0x1                   	// #1
  43c924:	b	43c8e4 <argp_parse@@Base+0x2238>
  43c928:	stp	x29, x30, [sp, #-80]!
  43c92c:	stp	x22, x21, [sp, #48]
  43c930:	stp	x20, x19, [sp, #64]
  43c934:	mov	w21, w2
  43c938:	mov	x19, x1
  43c93c:	tst	w2, #0x18000000
  43c940:	mov	x22, x0
  43c944:	stp	x26, x25, [sp, #16]
  43c948:	stp	x24, x23, [sp, #32]
  43c94c:	mov	x29, sp
  43c950:	b.eq	43c9dc <argp_parse@@Base+0x2330>  // b.none
  43c954:	mov	x0, x19
  43c958:	mov	w1, w21
  43c95c:	bl	43c218 <argp_parse@@Base+0x1b6c>
  43c960:	tbz	w0, #0, 43c9dc <argp_parse@@Base+0x2330>
  43c964:	ldr	x20, [x22]
  43c968:	cbz	x20, 43c984 <argp_parse@@Base+0x22d8>
  43c96c:	ldr	w8, [x20, #8]
  43c970:	cmp	w8, #0x1
  43c974:	b.ne	43c984 <argp_parse@@Base+0x22d8>  // b.any
  43c978:	ldr	w8, [x20, #12]
  43c97c:	eor	w8, w8, w21
  43c980:	tbz	w8, #29, 43c9a4 <argp_parse@@Base+0x22f8>
  43c984:	mov	w0, #0x28                  	// #40
  43c988:	bl	44a230 <argp_parse@@Base+0xfb84>
  43c98c:	mov	w8, #0x1                   	// #1
  43c990:	stp	w8, w21, [x0, #8]
  43c994:	ldr	x8, [x22]
  43c998:	mov	x20, x0
  43c99c:	str	x8, [x0]
  43c9a0:	str	x0, [x22]
  43c9a4:	ldp	x8, x24, [x20, #24]
  43c9a8:	cmp	x24, x8
  43c9ac:	b.ne	43cb0c <argp_parse@@Base+0x2460>  // b.any
  43c9b0:	ldr	x0, [x20, #16]
  43c9b4:	cbz	x0, 43cb14 <argp_parse@@Base+0x2468>
  43c9b8:	mov	x8, #0xf684                	// #63108
  43c9bc:	movk	x8, #0xda12, lsl #16
  43c9c0:	movk	x8, #0x684b, lsl #32
  43c9c4:	movk	x8, #0x12f, lsl #48
  43c9c8:	cmp	x24, x8
  43c9cc:	b.cs	43cb30 <argp_parse@@Base+0x2484>  // b.hs, b.nlast
  43c9d0:	add	x8, x24, x24, lsr #1
  43c9d4:	add	x24, x8, #0x1
  43c9d8:	b	43cb38 <argp_parse@@Base+0x248c>
  43c9dc:	ldr	x20, [x22]
  43c9e0:	cbz	x20, 43ca04 <argp_parse@@Base+0x2358>
  43c9e4:	ldr	w8, [x20, #8]
  43c9e8:	cbnz	w8, 43ca04 <argp_parse@@Base+0x2358>
  43c9ec:	ldr	w8, [x20, #12]
  43c9f0:	mov	w9, #0x18                  	// #24
  43c9f4:	movk	w9, #0x6000, lsl #16
  43c9f8:	eor	w8, w8, w21
  43c9fc:	tst	w8, w9
  43ca00:	b.eq	43ca64 <argp_parse@@Base+0x23b8>  // b.none
  43ca04:	mov	w0, #0x28                  	// #40
  43ca08:	bl	44a230 <argp_parse@@Base+0xfb84>
  43ca0c:	adrp	x8, 43c000 <argp_parse@@Base+0x1954>
  43ca10:	adrp	x9, 43c000 <argp_parse@@Base+0x1954>
  43ca14:	adrp	x10, 43c000 <argp_parse@@Base+0x1954>
  43ca18:	adrp	x11, 43c000 <argp_parse@@Base+0x1954>
  43ca1c:	add	x8, x8, #0xfb0
  43ca20:	add	x9, x9, #0xf00
  43ca24:	tst	w21, #0x10
  43ca28:	add	x10, x10, #0xfd0
  43ca2c:	add	x11, x11, #0xfb4
  43ca30:	adrp	x4, 43c000 <argp_parse@@Base+0x1954>
  43ca34:	mov	x20, x0
  43ca38:	stp	wzr, w21, [x0, #8]
  43ca3c:	csel	x2, x9, x8, ne  // ne = any
  43ca40:	csel	x3, x11, x10, ne  // ne = any
  43ca44:	add	x4, x4, #0xfec
  43ca48:	mov	x0, xzr
  43ca4c:	mov	x1, xzr
  43ca50:	bl	43eb5c <argp_parse@@Base+0x44b0>
  43ca54:	str	x0, [x20, #16]
  43ca58:	ldr	x8, [x22]
  43ca5c:	str	x8, [x20]
  43ca60:	str	x20, [x22]
  43ca64:	mov	x0, x19
  43ca68:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  43ca6c:	mov	w8, #0x2                   	// #2
  43ca70:	movk	w8, #0x1000, lsl #16
  43ca74:	and	w8, w21, w8
  43ca78:	mov	w9, #0x10000000            	// #268435456
  43ca7c:	cmp	w8, w9
  43ca80:	mov	x19, x0
  43ca84:	b.ne	43cadc <argp_parse@@Base+0x2430>  // b.any
  43ca88:	mov	x8, x19
  43ca8c:	mov	x9, x19
  43ca90:	b	43cabc <argp_parse@@Base+0x2410>
  43ca94:	mov	x10, x9
  43ca98:	ldrb	w11, [x10, #1]!
  43ca9c:	cmp	w11, #0x0
  43caa0:	csel	x10, x9, x10, eq  // eq = none
  43caa4:	ldrb	w10, [x10]
  43caa8:	cset	w11, ne  // ne = any
  43caac:	add	x9, x9, x11
  43cab0:	add	x9, x9, #0x1
  43cab4:	strb	w10, [x8], #1
  43cab8:	cbz	w10, 43cadc <argp_parse@@Base+0x2430>
  43cabc:	ldrb	w10, [x9]
  43cac0:	cmp	w10, #0x5c
  43cac4:	b.eq	43ca94 <argp_parse@@Base+0x23e8>  // b.none
  43cac8:	mov	w11, wzr
  43cacc:	add	x9, x9, x11
  43cad0:	add	x9, x9, #0x1
  43cad4:	strb	w10, [x8], #1
  43cad8:	cbnz	w10, 43cabc <argp_parse@@Base+0x2410>
  43cadc:	ldr	x0, [x20, #16]
  43cae0:	mov	x1, x19
  43cae4:	bl	43f5f8 <argp_parse@@Base+0x4f4c>
  43cae8:	cmp	x0, x19
  43caec:	b.eq	43cc64 <argp_parse@@Base+0x25b8>  // b.none
  43caf0:	mov	x0, x19
  43caf4:	ldp	x20, x19, [sp, #64]
  43caf8:	ldp	x22, x21, [sp, #48]
  43cafc:	ldp	x24, x23, [sp, #32]
  43cb00:	ldp	x26, x25, [sp, #16]
  43cb04:	ldp	x29, x30, [sp], #80
  43cb08:	b	4046b0 <free@plt>
  43cb0c:	ldr	x23, [x20, #16]
  43cb10:	b	43cb54 <argp_parse@@Base+0x24a8>
  43cb14:	cbz	x24, 43cb34 <argp_parse@@Base+0x2488>
  43cb18:	mov	x8, #0x71c8                	// #29128
  43cb1c:	movk	x8, #0xc71c, lsl #16
  43cb20:	movk	x8, #0x1c71, lsl #32
  43cb24:	movk	x8, #0x1c7, lsl #48
  43cb28:	cmp	x24, x8
  43cb2c:	b.cc	43cb38 <argp_parse@@Base+0x248c>  // b.lo, b.ul, b.last
  43cb30:	bl	40eb80 <wcrtomb@plt+0xa090>
  43cb34:	mov	w24, #0x1                   	// #1
  43cb38:	add	x8, x24, x24, lsl #3
  43cb3c:	lsl	x1, x8, #3
  43cb40:	str	x24, [x20, #24]
  43cb44:	bl	44a090 <argp_parse@@Base+0xf9e4>
  43cb48:	ldr	x24, [x20, #32]
  43cb4c:	mov	x23, x0
  43cb50:	str	x0, [x20, #16]
  43cb54:	mov	w8, #0x48                  	// #72
  43cb58:	add	x25, x24, #0x1
  43cb5c:	mul	x8, x24, x8
  43cb60:	str	x25, [x20, #32]
  43cb64:	str	w21, [x23, x8]
  43cb68:	tbnz	w21, #27, 43cba0 <argp_parse@@Base+0x24f4>
  43cb6c:	tbz	w21, #26, 43cb90 <argp_parse@@Base+0x24e4>
  43cb70:	mov	x0, x19
  43cb74:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  43cb78:	mov	x19, x0
  43cb7c:	mov	w0, #0x10                  	// #16
  43cb80:	bl	44a010 <argp_parse@@Base+0xf964>
  43cb84:	ldr	x8, [x22, #8]
  43cb88:	stp	x8, x19, [x0]
  43cb8c:	str	x0, [x22, #8]
  43cb90:	mov	w8, #0x48                  	// #72
  43cb94:	madd	x8, x24, x8, x23
  43cb98:	str	x19, [x8, #8]
  43cb9c:	b	43cc64 <argp_parse@@Base+0x25b8>
  43cba0:	lsr	w8, w21, #3
  43cba4:	and	w8, w8, #0x2
  43cba8:	mov	w9, #0x9                   	// #9
  43cbac:	orr	w22, w8, w9
  43cbb0:	tbnz	w21, #3, 43cbd8 <argp_parse@@Base+0x252c>
  43cbb4:	mov	w8, #0x48                  	// #72
  43cbb8:	madd	x8, x24, x8, x23
  43cbbc:	add	x0, x8, #0x8
  43cbc0:	mov	x1, x19
  43cbc4:	mov	w2, w22
  43cbc8:	bl	44ce8c <_obstack_memory_used@@Base+0x1cc8>
  43cbcc:	mov	w19, w0
  43cbd0:	cbnz	w19, 43cc58 <argp_parse@@Base+0x25ac>
  43cbd4:	b	43cc64 <argp_parse@@Base+0x25b8>
  43cbd8:	mov	x0, x19
  43cbdc:	bl	403f00 <strlen@plt>
  43cbe0:	sub	x8, x19, #0x1
  43cbe4:	cbz	x0, 43cc5c <argp_parse@@Base+0x25b0>
  43cbe8:	ldrb	w9, [x8, x0]
  43cbec:	sub	x26, x0, #0x1
  43cbf0:	mov	x0, x26
  43cbf4:	cmp	w9, #0x2f
  43cbf8:	b.eq	43cbe4 <argp_parse@@Base+0x2538>  // b.none
  43cbfc:	add	x0, x26, #0x8
  43cc00:	bl	44a010 <argp_parse@@Base+0xf964>
  43cc04:	add	x2, x26, #0x1
  43cc08:	mov	x1, x19
  43cc0c:	mov	x21, x0
  43cc10:	bl	403e80 <memcpy@plt>
  43cc14:	mov	w9, #0x2f28                	// #12072
  43cc18:	mov	w10, #0x292a                	// #10538
  43cc1c:	add	x8, x21, x26
  43cc20:	movk	w9, #0x2a2e, lsl #16
  43cc24:	movk	w10, #0x3f, lsl #16
  43cc28:	mov	w11, #0x48                  	// #72
  43cc2c:	stur	w9, [x8, #1]
  43cc30:	str	w10, [x8, #4]
  43cc34:	madd	x8, x24, x11, x23
  43cc38:	add	x0, x8, #0x8
  43cc3c:	mov	x1, x21
  43cc40:	mov	w2, w22
  43cc44:	bl	44ce8c <_obstack_memory_used@@Base+0x1cc8>
  43cc48:	mov	w19, w0
  43cc4c:	mov	x0, x21
  43cc50:	bl	4046b0 <free@plt>
  43cc54:	cbz	w19, 43cc64 <argp_parse@@Base+0x25b8>
  43cc58:	ldr	x25, [x20, #32]
  43cc5c:	sub	x8, x25, #0x1
  43cc60:	str	x8, [x20, #32]
  43cc64:	ldp	x20, x19, [sp, #64]
  43cc68:	ldp	x22, x21, [sp, #48]
  43cc6c:	ldp	x24, x23, [sp, #32]
  43cc70:	ldp	x26, x25, [sp, #16]
  43cc74:	ldp	x29, x30, [sp], #80
  43cc78:	ret
  43cc7c:	sub	sp, sp, #0x70
  43cc80:	stp	x28, x27, [sp, #32]
  43cc84:	stp	x26, x25, [sp, #48]
  43cc88:	stp	x24, x23, [sp, #64]
  43cc8c:	stp	x22, x21, [sp, #80]
  43cc90:	stp	x20, x19, [sp, #96]
  43cc94:	mov	x19, x5
  43cc98:	mov	w20, w4
  43cc9c:	mov	w21, w3
  43cca0:	mov	x25, x2
  43cca4:	mov	x22, x1
  43cca8:	mov	x23, x0
  43ccac:	mov	x27, xzr
  43ccb0:	mov	x24, xzr
  43ccb4:	stp	x29, x30, [sp, #16]
  43ccb8:	add	x29, sp, #0x10
  43ccbc:	str	xzr, [sp, #8]
  43ccc0:	b	43ccd0 <argp_parse@@Base+0x2624>
  43ccc4:	add	x8, x27, #0x1
  43ccc8:	strb	w26, [x24, x27]
  43cccc:	mov	x27, x8
  43ccd0:	ldp	x8, x9, [x25, #8]
  43ccd4:	cmp	x8, x9
  43ccd8:	b.cs	43cd08 <argp_parse@@Base+0x265c>  // b.hs, b.nlast
  43ccdc:	add	x9, x8, #0x1
  43cce0:	str	x9, [x25, #8]
  43cce4:	ldrb	w26, [x8]
  43cce8:	ldr	x8, [sp, #8]
  43ccec:	cmp	x27, x8
  43ccf0:	b.ne	43ccc4 <argp_parse@@Base+0x2618>  // b.any
  43ccf4:	add	x1, sp, #0x8
  43ccf8:	mov	x0, x24
  43ccfc:	bl	44a1a8 <argp_parse@@Base+0xfafc>
  43cd00:	mov	x24, x0
  43cd04:	b	43ccc4 <argp_parse@@Base+0x2618>
  43cd08:	mov	x0, x25
  43cd0c:	bl	404a70 <__uflow@plt>
  43cd10:	mov	w26, w0
  43cd14:	cmn	w0, #0x1
  43cd18:	b.ne	43cce8 <argp_parse@@Base+0x263c>  // b.any
  43cd1c:	ldrb	w8, [x25]
  43cd20:	tbnz	w8, #5, 43cd2c <argp_parse@@Base+0x2680>
  43cd24:	mov	w26, wzr
  43cd28:	b	43cd34 <argp_parse@@Base+0x2688>
  43cd2c:	bl	4049c0 <__errno_location@plt>
  43cd30:	ldr	w26, [x0]
  43cd34:	add	x1, x27, #0x1
  43cd38:	mov	x0, x24
  43cd3c:	bl	44a090 <argp_parse@@Base+0xf9e4>
  43cd40:	mov	x24, x0
  43cd44:	strb	w20, [x0, x27]
  43cd48:	cbz	x27, 43cd60 <argp_parse@@Base+0x26b4>
  43cd4c:	add	x8, x24, x27
  43cd50:	ldurb	w8, [x8, #-1]
  43cd54:	cmp	w8, w20, uxtb
  43cd58:	cset	w8, ne  // ne = any
  43cd5c:	b	43cd64 <argp_parse@@Base+0x26b8>
  43cd60:	mov	x8, xzr
  43cd64:	add	x8, x24, x8
  43cd68:	mov	w0, #0x10                  	// #16
  43cd6c:	add	x27, x8, x27
  43cd70:	bl	44a010 <argp_parse@@Base+0xf964>
  43cd74:	ldr	x8, [x22, #8]
  43cd78:	cmp	x24, x27
  43cd7c:	stp	x8, x24, [x0]
  43cd80:	str	x0, [x22, #8]
  43cd84:	b.cs	43cdfc <argp_parse@@Base+0x2750>  // b.hs, b.nlast
  43cd88:	and	x28, x20, #0xff
  43cd8c:	mov	x25, x24
  43cd90:	b	43cdbc <argp_parse@@Base+0x2710>
  43cd94:	mov	x0, x22
  43cd98:	mov	x1, x25
  43cd9c:	mov	w2, w21
  43cda0:	mov	x3, x19
  43cda4:	strb	wzr, [x9]
  43cda8:	blr	x23
  43cdac:	add	x25, x24, #0x1
  43cdb0:	add	x24, x24, #0x1
  43cdb4:	cmp	x27, x24
  43cdb8:	b.eq	43cdfc <argp_parse@@Base+0x2750>  // b.none
  43cdbc:	ldrb	w8, [x24]
  43cdc0:	cmp	w8, w20, uxtb
  43cdc4:	b.ne	43cdb0 <argp_parse@@Base+0x2704>  // b.any
  43cdc8:	bl	404640 <__ctype_b_loc@plt>
  43cdcc:	ldr	x8, [x0]
  43cdd0:	mov	x9, x24
  43cdd4:	ldrh	w10, [x8, x28, lsl #1]
  43cdd8:	tbz	w10, #13, 43cd94 <argp_parse@@Base+0x26e8>
  43cddc:	mov	x9, x24
  43cde0:	cmp	x25, x9
  43cde4:	b.eq	43cdac <argp_parse@@Base+0x2700>  // b.none
  43cde8:	ldrb	w10, [x9, #-1]!
  43cdec:	ldrh	w10, [x8, x10, lsl #1]
  43cdf0:	tbnz	w10, #13, 43cde0 <argp_parse@@Base+0x2734>
  43cdf4:	add	x9, x9, #0x1
  43cdf8:	b	43cd94 <argp_parse@@Base+0x26e8>
  43cdfc:	bl	4049c0 <__errno_location@plt>
  43ce00:	str	w26, [x0]
  43ce04:	cmp	w26, #0x0
  43ce08:	ldp	x20, x19, [sp, #96]
  43ce0c:	ldp	x22, x21, [sp, #80]
  43ce10:	ldp	x24, x23, [sp, #64]
  43ce14:	ldp	x26, x25, [sp, #48]
  43ce18:	ldp	x28, x27, [sp, #32]
  43ce1c:	ldp	x29, x30, [sp, #16]
  43ce20:	csetm	w8, ne  // ne = any
  43ce24:	mov	w0, w8
  43ce28:	add	sp, sp, #0x70
  43ce2c:	ret
  43ce30:	sub	sp, sp, #0x40
  43ce34:	stp	x29, x30, [sp, #16]
  43ce38:	stp	x22, x21, [sp, #32]
  43ce3c:	stp	x20, x19, [sp, #48]
  43ce40:	str	x0, [sp, #8]
  43ce44:	ldrb	w8, [x2]
  43ce48:	mov	w19, w4
  43ce4c:	mov	w20, w3
  43ce50:	mov	x21, x1
  43ce54:	cmp	w8, #0x2d
  43ce58:	add	x29, sp, #0x10
  43ce5c:	b.ne	43ce68 <argp_parse@@Base+0x27bc>  // b.any
  43ce60:	ldrb	w8, [x2, #1]
  43ce64:	cbz	w8, 43cec0 <argp_parse@@Base+0x2814>
  43ce68:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x18e3c>
  43ce6c:	add	x1, x1, #0xedb
  43ce70:	mov	x0, x2
  43ce74:	bl	4041e0 <fopen@plt>
  43ce78:	cbz	x0, 43ceb8 <argp_parse@@Base+0x280c>
  43ce7c:	mov	x22, x0
  43ce80:	adrp	x0, 43c000 <argp_parse@@Base+0x1954>
  43ce84:	add	x0, x0, #0xef8
  43ce88:	add	x5, sp, #0x8
  43ce8c:	mov	x1, x21
  43ce90:	mov	x2, x22
  43ce94:	mov	w3, w20
  43ce98:	mov	w4, w19
  43ce9c:	bl	43cc7c <argp_parse@@Base+0x25d0>
  43cea0:	mov	w19, w0
  43cea4:	mov	x0, x22
  43cea8:	bl	4041a0 <fclose@plt>
  43ceac:	cmp	w0, #0x0
  43ceb0:	csinv	w0, w19, wzr, eq  // eq = none
  43ceb4:	b	43cee4 <argp_parse@@Base+0x2838>
  43ceb8:	mov	w0, #0xffffffff            	// #-1
  43cebc:	b	43cee4 <argp_parse@@Base+0x2838>
  43cec0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  43cec4:	ldr	x2, [x8, #104]
  43cec8:	adrp	x0, 43c000 <argp_parse@@Base+0x1954>
  43cecc:	add	x0, x0, #0xef8
  43ced0:	add	x5, sp, #0x8
  43ced4:	mov	x1, x21
  43ced8:	mov	w3, w20
  43cedc:	mov	w4, w19
  43cee0:	bl	43cc7c <argp_parse@@Base+0x25d0>
  43cee4:	ldp	x20, x19, [sp, #48]
  43cee8:	ldp	x22, x21, [sp, #32]
  43ceec:	ldp	x29, x30, [sp, #16]
  43cef0:	add	sp, sp, #0x40
  43cef4:	ret
  43cef8:	ldr	x3, [x3]
  43cefc:	br	x3
  43cf00:	sub	sp, sp, #0x60
  43cf04:	str	x0, [sp, #16]
  43cf08:	mov	x0, sp
  43cf0c:	stp	x29, x30, [sp, #64]
  43cf10:	stp	x20, x19, [sp, #80]
  43cf14:	add	x29, sp, #0x40
  43cf18:	mov	x19, x1
  43cf1c:	strb	wzr, [sp]
  43cf20:	stur	xzr, [sp, #4]
  43cf24:	strb	wzr, [sp, #12]
  43cf28:	bl	44051c <argp_parse@@Base+0x5e70>
  43cf2c:	ldrb	w8, [sp, #32]
  43cf30:	ldr	w0, [sp, #36]
  43cf34:	cbz	w8, 43cf40 <argp_parse@@Base+0x2894>
  43cf38:	mov	x20, xzr
  43cf3c:	cbz	w0, 43cf9c <argp_parse@@Base+0x28f0>
  43cf40:	mov	x20, xzr
  43cf44:	tst	w8, #0xff
  43cf48:	b.eq	43cf58 <argp_parse@@Base+0x28ac>  // b.none
  43cf4c:	bl	404a60 <towlower@plt>
  43cf50:	ldr	x8, [sp, #16]
  43cf54:	b	43cf60 <argp_parse@@Base+0x28b4>
  43cf58:	ldr	x8, [sp, #16]
  43cf5c:	ldrb	w0, [x8]
  43cf60:	ldr	x10, [sp, #24]
  43cf64:	lsl	x9, x20, #5
  43cf68:	sub	x9, x9, x20
  43cf6c:	add	x9, x9, w0, uxtw
  43cf70:	udiv	x11, x9, x19
  43cf74:	add	x8, x8, x10
  43cf78:	mov	x0, sp
  43cf7c:	msub	x20, x11, x19, x9
  43cf80:	str	x8, [sp, #16]
  43cf84:	strb	wzr, [sp, #12]
  43cf88:	bl	44051c <argp_parse@@Base+0x5e70>
  43cf8c:	ldrb	w8, [sp, #32]
  43cf90:	ldr	w0, [sp, #36]
  43cf94:	cbz	w8, 43cf44 <argp_parse@@Base+0x2898>
  43cf98:	cbnz	w0, 43cf44 <argp_parse@@Base+0x2898>
  43cf9c:	mov	x0, x20
  43cfa0:	ldp	x20, x19, [sp, #80]
  43cfa4:	ldp	x29, x30, [sp, #64]
  43cfa8:	add	sp, sp, #0x60
  43cfac:	ret
  43cfb0:	b	43eb04 <argp_parse@@Base+0x4458>
  43cfb4:	stp	x29, x30, [sp, #-16]!
  43cfb8:	mov	x29, sp
  43cfbc:	bl	440304 <argp_parse@@Base+0x5c58>
  43cfc0:	cmp	w0, #0x0
  43cfc4:	cset	w0, eq  // eq = none
  43cfc8:	ldp	x29, x30, [sp], #16
  43cfcc:	ret
  43cfd0:	stp	x29, x30, [sp, #-16]!
  43cfd4:	mov	x29, sp
  43cfd8:	bl	404610 <strcmp@plt>
  43cfdc:	cmp	w0, #0x0
  43cfe0:	cset	w0, eq  // eq = none
  43cfe4:	ldp	x29, x30, [sp], #16
  43cfe8:	ret
  43cfec:	b	4046b0 <free@plt>
  43cff0:	stp	x29, x30, [sp, #-64]!
  43cff4:	str	x23, [sp, #16]
  43cff8:	stp	x22, x21, [sp, #32]
  43cffc:	stp	x20, x19, [sp, #48]
  43d000:	mov	w19, w4
  43d004:	mov	x20, x3
  43d008:	mov	x21, x2
  43d00c:	mov	w22, w1
  43d010:	mov	w23, w0
  43d014:	mov	x29, sp
  43d018:	tbnz	w0, #31, 43d030 <argp_parse@@Base+0x2984>
  43d01c:	mov	w0, w23
  43d020:	mov	x1, x20
  43d024:	bl	4042b0 <futimens@plt>
  43d028:	cbnz	x21, 43d038 <argp_parse@@Base+0x298c>
  43d02c:	b	43d068 <argp_parse@@Base+0x29bc>
  43d030:	mov	w0, #0x1                   	// #1
  43d034:	cbz	x21, 43d068 <argp_parse@@Base+0x29bc>
  43d038:	tbnz	w23, #31, 43d054 <argp_parse@@Base+0x29a8>
  43d03c:	cmn	w0, #0x1
  43d040:	b.ne	43d068 <argp_parse@@Base+0x29bc>  // b.any
  43d044:	bl	4049c0 <__errno_location@plt>
  43d048:	ldr	w8, [x0]
  43d04c:	cmp	w8, #0x26
  43d050:	b.ne	43d07c <argp_parse@@Base+0x29d0>  // b.any
  43d054:	mov	w0, w22
  43d058:	mov	x1, x21
  43d05c:	mov	x2, x20
  43d060:	mov	w3, w19
  43d064:	bl	404780 <utimensat@plt>
  43d068:	cmp	w0, #0x1
  43d06c:	b.ne	43d080 <argp_parse@@Base+0x29d4>  // b.any
  43d070:	bl	4049c0 <__errno_location@plt>
  43d074:	mov	w8, #0x9                   	// #9
  43d078:	str	w8, [x0]
  43d07c:	mov	w0, #0xffffffff            	// #-1
  43d080:	ldp	x20, x19, [sp, #48]
  43d084:	ldp	x22, x21, [sp, #32]
  43d088:	ldr	x23, [sp, #16]
  43d08c:	ldp	x29, x30, [sp], #64
  43d090:	ret
  43d094:	stp	x29, x30, [sp, #-32]!
  43d098:	stp	x20, x19, [sp, #16]
  43d09c:	ldr	w8, [x1, #16]
  43d0a0:	mov	x29, sp
  43d0a4:	and	w8, w8, #0xf000
  43d0a8:	cmp	w8, #0xa, lsl #12
  43d0ac:	b.ne	43d0c0 <argp_parse@@Base+0x2a14>  // b.any
  43d0b0:	mov	w0, wzr
  43d0b4:	ldp	x20, x19, [sp, #16]
  43d0b8:	ldp	x29, x30, [sp], #32
  43d0bc:	ret
  43d0c0:	mov	x20, x1
  43d0c4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43d0c8:	add	x1, x1, #0xb98
  43d0cc:	mov	x2, xzr
  43d0d0:	mov	x3, xzr
  43d0d4:	mov	x19, x0
  43d0d8:	bl	4045c0 <getxattr@plt>
  43d0dc:	tbnz	x0, #63, 43d0f4 <argp_parse@@Base+0x2a48>
  43d0e0:	cbz	x0, 43d104 <argp_parse@@Base+0x2a58>
  43d0e4:	mov	w0, #0x1                   	// #1
  43d0e8:	ldp	x20, x19, [sp, #16]
  43d0ec:	ldp	x29, x30, [sp], #32
  43d0f0:	ret
  43d0f4:	bl	4049c0 <__errno_location@plt>
  43d0f8:	ldr	w8, [x0]
  43d0fc:	cmp	w8, #0x3d
  43d100:	b.ne	43d148 <argp_parse@@Base+0x2a9c>  // b.any
  43d104:	ldr	w8, [x20, #16]
  43d108:	and	w8, w8, #0xf000
  43d10c:	cmp	w8, #0x4, lsl #12
  43d110:	b.ne	43d0b0 <argp_parse@@Base+0x2a04>  // b.any
  43d114:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43d118:	add	x1, x1, #0xbb0
  43d11c:	mov	x0, x19
  43d120:	mov	x2, xzr
  43d124:	mov	x3, xzr
  43d128:	bl	4045c0 <getxattr@plt>
  43d12c:	tbnz	x0, #63, 43d138 <argp_parse@@Base+0x2a8c>
  43d130:	cbnz	x0, 43d0e4 <argp_parse@@Base+0x2a38>
  43d134:	b	43d0b0 <argp_parse@@Base+0x2a04>
  43d138:	bl	4049c0 <__errno_location@plt>
  43d13c:	ldr	w8, [x0]
  43d140:	cmp	w8, #0x3d
  43d144:	b.eq	43d0b0 <argp_parse@@Base+0x2a04>  // b.none
  43d148:	ldr	w0, [x0]
  43d14c:	bl	45c278 <_obstack_memory_used@@Base+0x110b4>
  43d150:	sbfx	w0, w0, #0, #1
  43d154:	ldp	x20, x19, [sp, #16]
  43d158:	ldp	x29, x30, [sp], #32
  43d15c:	ret
  43d160:	mov	w5, w4
  43d164:	mov	x4, x3
  43d168:	mov	w3, wzr
  43d16c:	b	43d170 <argp_parse@@Base+0x2ac4>
  43d170:	stp	x29, x30, [sp, #-96]!
  43d174:	stp	x28, x27, [sp, #16]
  43d178:	stp	x26, x25, [sp, #32]
  43d17c:	stp	x24, x23, [sp, #48]
  43d180:	stp	x22, x21, [sp, #64]
  43d184:	stp	x20, x19, [sp, #80]
  43d188:	mov	x29, sp
  43d18c:	sub	sp, sp, #0x490
  43d190:	ldr	x8, [x2, #48]
  43d194:	ldr	w9, [x2, #8]
  43d198:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43d19c:	add	x10, x10, #0xb36
  43d1a0:	cmp	x8, #0x0
  43d1a4:	csel	x12, x10, x8, eq  // eq = none
  43d1a8:	ldrb	w8, [x1]
  43d1ac:	mov	w11, #0xc                   	// #12
  43d1b0:	cmp	w9, #0x0
  43d1b4:	csel	w10, w11, w9, eq  // eq = none
  43d1b8:	subs	w9, w9, #0xc
  43d1bc:	csel	w9, w9, w10, gt
  43d1c0:	str	w5, [sp, #44]
  43d1c4:	str	x4, [sp, #48]
  43d1c8:	str	w3, [sp, #92]
  43d1cc:	cbz	w8, 43e5c0 <argp_parse@@Base+0x3f14>
  43d1d0:	str	w9, [sp, #20]
  43d1d4:	sub	x9, x29, #0x20
  43d1d8:	sub	x10, x29, #0x28
  43d1dc:	add	x13, x9, #0x17
  43d1e0:	str	x12, [sp, #24]
  43d1e4:	add	x11, sp, #0x60
  43d1e8:	mov	x12, #0xffffffffffffffe9    	// #-23
  43d1ec:	stp	x13, x2, [sp, #72]
  43d1f0:	orr	x13, x10, #0x2
  43d1f4:	orr	x10, x10, #0x3
  43d1f8:	mov	x23, x1
  43d1fc:	mov	x24, x0
  43d200:	mov	x1, xzr
  43d204:	stp	x10, x13, [sp, #56]
  43d208:	orr	x10, x11, #0x1
  43d20c:	sub	x9, x12, x9
  43d210:	str	x10, [sp, #32]
  43d214:	str	x9, [sp, #8]
  43d218:	b	43d240 <argp_parse@@Base+0x2b94>
  43d21c:	mov	w2, #0x1                   	// #1
  43d220:	mov	x0, x28
  43d224:	mov	x1, x27
  43d228:	mov	x3, x24
  43d22c:	bl	404790 <fwrite@plt>
  43d230:	mov	x1, x19
  43d234:	add	x1, x19, x20
  43d238:	ldrb	w8, [x23, #1]!
  43d23c:	cbz	w8, 43e5c4 <argp_parse@@Base+0x3f18>
  43d240:	and	w9, w8, #0xff
  43d244:	cmp	w9, #0x25
  43d248:	b.ne	43d2c0 <argp_parse@@Base+0x2c14>  // b.any
  43d24c:	ldr	w26, [sp, #92]
  43d250:	mov	w10, #0xcccc                	// #52428
  43d254:	mov	w28, wzr
  43d258:	mov	w21, wzr
  43d25c:	movk	w10, #0xccc, lsl #16
  43d260:	mov	w11, #0xa                   	// #10
  43d264:	add	x23, x23, #0x1
  43d268:	b	43d27c <argp_parse@@Base+0x2bd0>
  43d26c:	cmp	w8, #0x2d
  43d270:	b.ne	43d2ac <argp_parse@@Base+0x2c00>  // b.any
  43d274:	add	x23, x23, #0x1
  43d278:	mov	w21, w8
  43d27c:	ldrb	w8, [x23]
  43d280:	cmp	w8, #0x2f
  43d284:	b.le	43d26c <argp_parse@@Base+0x2bc0>
  43d288:	cmp	w8, #0x30
  43d28c:	b.eq	43d274 <argp_parse@@Base+0x2bc8>  // b.none
  43d290:	cmp	w8, #0x5f
  43d294:	b.eq	43d274 <argp_parse@@Base+0x2bc8>  // b.none
  43d298:	cmp	w8, #0x5e
  43d29c:	b.ne	43d2e8 <argp_parse@@Base+0x2c3c>  // b.any
  43d2a0:	mov	w26, #0x1                   	// #1
  43d2a4:	add	x23, x23, #0x1
  43d2a8:	b	43d27c <argp_parse@@Base+0x2bd0>
  43d2ac:	cmp	w8, #0x23
  43d2b0:	b.ne	43d2e8 <argp_parse@@Base+0x2c3c>  // b.any
  43d2b4:	mov	w28, #0x1                   	// #1
  43d2b8:	add	x23, x23, #0x1
  43d2bc:	b	43d27c <argp_parse@@Base+0x2bd0>
  43d2c0:	cmn	x1, #0x3
  43d2c4:	b.hi	43e5c0 <argp_parse@@Base+0x3f14>  // b.pmore
  43d2c8:	cbz	x24, 43d2e0 <argp_parse@@Base+0x2c34>
  43d2cc:	and	w0, w8, #0xff
  43d2d0:	mov	x19, x1
  43d2d4:	mov	x1, x24
  43d2d8:	bl	404080 <fputc@plt>
  43d2dc:	mov	x1, x19
  43d2e0:	add	x1, x1, #0x1
  43d2e4:	b	43d238 <argp_parse@@Base+0x2b8c>
  43d2e8:	sub	w9, w8, #0x30
  43d2ec:	cmp	w9, #0x9
  43d2f0:	b.hi	43d348 <argp_parse@@Base+0x2c9c>  // b.pmore
  43d2f4:	mov	w22, wzr
  43d2f8:	b	43d310 <argp_parse@@Base+0x2c64>
  43d2fc:	mov	w22, #0x7fffffff            	// #2147483647
  43d300:	ldrb	w8, [x23, #1]!
  43d304:	sub	w9, w8, #0x30
  43d308:	cmp	w9, #0xa
  43d30c:	b.cs	43d34c <argp_parse@@Base+0x2ca0>  // b.hs, b.nlast
  43d310:	cmp	w22, w10
  43d314:	b.gt	43d2fc <argp_parse@@Base+0x2c50>
  43d318:	b.ne	43d328 <argp_parse@@Base+0x2c7c>  // b.any
  43d31c:	and	w9, w8, #0xff
  43d320:	cmp	w9, #0x37
  43d324:	b.hi	43d2fc <argp_parse@@Base+0x2c50>  // b.pmore
  43d328:	mul	w9, w22, w11
  43d32c:	add	w8, w9, w8, uxtb
  43d330:	sub	w22, w8, #0x30
  43d334:	ldrb	w8, [x23, #1]!
  43d338:	sub	w9, w8, #0x30
  43d33c:	cmp	w9, #0xa
  43d340:	b.cc	43d310 <argp_parse@@Base+0x2c64>  // b.lo, b.ul, b.last
  43d344:	b	43d34c <argp_parse@@Base+0x2ca0>
  43d348:	mov	w22, #0xffffffff            	// #-1
  43d34c:	cmp	w8, #0x4f
  43d350:	b.eq	43d35c <argp_parse@@Base+0x2cb0>  // b.none
  43d354:	cmp	w8, #0x45
  43d358:	b.ne	43d374 <argp_parse@@Base+0x2cc8>  // b.any
  43d35c:	ldrb	w10, [x23, #1]!
  43d360:	mov	w9, w8
  43d364:	mov	w8, w10
  43d368:	cmp	w8, #0x7a
  43d36c:	b.ls	43d380 <argp_parse@@Base+0x2cd4>  // b.plast
  43d370:	b	43db34 <argp_parse@@Base+0x3488>
  43d374:	mov	w9, wzr
  43d378:	cmp	w8, #0x7a
  43d37c:	b.hi	43db34 <argp_parse@@Base+0x3488>  // b.pmore
  43d380:	adrp	x14, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43d384:	add	x14, x14, #0xbca
  43d388:	adr	x12, 43d3b0 <argp_parse@@Base+0x2d04>
  43d38c:	ldrh	w13, [x14, x8, lsl #1]
  43d390:	add	x12, x12, x13, lsl #2
  43d394:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x16e3c>
  43d398:	mov	w25, wzr
  43d39c:	mov	w20, wzr
  43d3a0:	mov	w11, wzr
  43d3a4:	mov	x10, xzr
  43d3a8:	add	x27, x27, #0xe8b
  43d3ac:	br	x12
  43d3b0:	cmp	w9, #0x45
  43d3b4:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d3b8:	ldr	x10, [sp, #80]
  43d3bc:	mov	w13, #0xffffff9c            	// #-100
  43d3c0:	mov	w14, #0x12c                 	// #300
  43d3c4:	ldr	w11, [x10, #20]
  43d3c8:	ldp	w10, w12, [x10, #24]
  43d3cc:	cmp	w11, #0x0
  43d3d0:	sub	w15, w12, w10
  43d3d4:	csel	w14, w14, w13, lt  // lt = tstop
  43d3d8:	add	w13, w15, #0x17e
  43d3dc:	mov	w15, #0x2493                	// #9363
  43d3e0:	movk	w15, #0x9249, lsl #16
  43d3e4:	smull	x15, w13, w15
  43d3e8:	lsr	x15, x15, #32
  43d3ec:	add	w15, w15, w13
  43d3f0:	asr	w16, w15, #2
  43d3f4:	add	w15, w16, w15, lsr #31
  43d3f8:	lsl	w16, w15, #3
  43d3fc:	sub	w15, w16, w15
  43d400:	sub	w13, w15, w13
  43d404:	add	w13, w12, w13
  43d408:	adds	w13, w13, #0x3
  43d40c:	add	w15, w14, w11
  43d410:	b.mi	43dc24 <argp_parse@@Base+0x3578>  // b.first
  43d414:	tst	w15, #0x3
  43d418:	mov	w14, #0x16d                 	// #365
  43d41c:	b.ne	43d458 <argp_parse@@Base+0x2dac>  // b.any
  43d420:	mov	w16, #0x5c29                	// #23593
  43d424:	mov	w17, #0xb850                	// #47184
  43d428:	movk	w16, #0xc28f, lsl #16
  43d42c:	movk	w17, #0x51e, lsl #16
  43d430:	mov	w18, #0xd70b                	// #55051
  43d434:	madd	w15, w15, w16, w17
  43d438:	movk	w18, #0xa3, lsl #16
  43d43c:	ror	w16, w15, #2
  43d440:	ror	w15, w15, #4
  43d444:	cmp	w15, w18
  43d448:	mov	w15, #0x5c28                	// #23592
  43d44c:	movk	w15, #0x28f, lsl #16
  43d450:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  43d454:	cinc	w14, w14, hi  // hi = pmore
  43d458:	add	w14, w10, w14
  43d45c:	sub	w12, w12, w14
  43d460:	mov	w14, #0x2493                	// #9363
  43d464:	movk	w14, #0x9249, lsl #16
  43d468:	add	w12, w12, #0x17e
  43d46c:	smull	x14, w12, w14
  43d470:	lsr	x14, x14, #32
  43d474:	add	w12, w14, w12
  43d478:	asr	w14, w12, #2
  43d47c:	add	w12, w14, w12, lsr #31
  43d480:	lsl	w14, w12, #3
  43d484:	sub	w12, w14, w12
  43d488:	add	w10, w10, w12
  43d48c:	sub	w10, w10, #0x17b
  43d490:	mvn	w12, w10
  43d494:	cmp	w10, #0x0
  43d498:	lsr	w14, w12, #31
  43d49c:	csel	w10, w10, w13, ge  // ge = tcont
  43d4a0:	cmp	w8, #0x47
  43d4a4:	b.eq	43dcb4 <argp_parse@@Base+0x3608>  // b.none
  43d4a8:	cmp	w8, #0x67
  43d4ac:	b.ne	43dcdc <argp_parse@@Base+0x3630>  // b.any
  43d4b0:	mov	w10, #0x851f                	// #34079
  43d4b4:	movk	w10, #0x51eb, lsl #16
  43d4b8:	smull	x13, w11, w10
  43d4bc:	lsr	x15, x13, #63
  43d4c0:	asr	x13, x13, #37
  43d4c4:	mov	w12, #0x64                  	// #100
  43d4c8:	add	w13, w13, w15
  43d4cc:	msub	w13, w13, w12, w11
  43d4d0:	add	w13, w14, w13
  43d4d4:	smull	x10, w13, w10
  43d4d8:	lsr	x15, x10, #63
  43d4dc:	asr	x10, x10, #37
  43d4e0:	add	w10, w10, w15
  43d4e4:	msub	w10, w10, w12, w13
  43d4e8:	tbz	w10, #31, 43dda4 <argp_parse@@Base+0x36f8>
  43d4ec:	mov	w12, #0xfffff894            	// #-1900
  43d4f0:	sub	w12, w12, w14
  43d4f4:	add	w13, w10, #0x64
  43d4f8:	cmp	w11, w12
  43d4fc:	csneg	w10, w13, w10, ge  // ge = tcont
  43d500:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d504:	cmp	w9, #0x45
  43d508:	orr	w26, w28, w26
  43d50c:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d510:	mov	w25, wzr
  43d514:	mov	w20, wzr
  43d518:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d51c:	sub	x23, x23, #0x1
  43d520:	b	43db34 <argp_parse@@Base+0x3488>
  43d524:	cbnz	w9, 43db34 <argp_parse@@Base+0x3488>
  43d528:	bic	w8, w22, w22, asr #31
  43d52c:	cmp	w8, #0x1
  43d530:	csinc	w20, w8, wzr, hi  // hi = pmore
  43d534:	mvn	x9, x1
  43d538:	cmp	x20, x9
  43d53c:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43d540:	cbz	x24, 43e5a8 <argp_parse@@Base+0x3efc>
  43d544:	mov	x19, x1
  43d548:	cmp	w8, #0x2
  43d54c:	b.cc	43e598 <argp_parse@@Base+0x3eec>  // b.lo, b.ul, b.last
  43d550:	sxtw	x8, w22
  43d554:	cmp	w21, #0x30
  43d558:	sub	x21, x8, #0x1
  43d55c:	b.ne	43e580 <argp_parse@@Base+0x3ed4>  // b.any
  43d560:	cbz	x21, 43e598 <argp_parse@@Base+0x3eec>
  43d564:	mov	w0, #0x30                  	// #48
  43d568:	mov	x1, x24
  43d56c:	bl	404080 <fputc@plt>
  43d570:	subs	x21, x21, #0x1
  43d574:	b.ne	43d564 <argp_parse@@Base+0x2eb8>  // b.any
  43d578:	b	43e598 <argp_parse@@Base+0x3eec>
  43d57c:	mov	w10, #0x1                   	// #1
  43d580:	ldrb	w11, [x23, x10]
  43d584:	cmp	w11, #0x3a
  43d588:	b.ne	43d59c <argp_parse@@Base+0x2ef0>  // b.any
  43d58c:	add	x10, x10, #0x1
  43d590:	ldrb	w11, [x23, x10]
  43d594:	cmp	w11, #0x3a
  43d598:	b.eq	43d58c <argp_parse@@Base+0x2ee0>  // b.none
  43d59c:	cmp	w11, #0x7a
  43d5a0:	b.ne	43db34 <argp_parse@@Base+0x3488>  // b.any
  43d5a4:	add	x23, x23, x10
  43d5a8:	ldr	x12, [sp, #80]
  43d5ac:	ldr	w11, [x12, #32]
  43d5b0:	tbnz	w11, #31, 43d238 <argp_parse@@Base+0x2b8c>
  43d5b4:	ldr	w12, [x12, #40]
  43d5b8:	tbnz	w12, #31, 43e1f8 <argp_parse@@Base+0x3b4c>
  43d5bc:	cbz	w12, 43e218 <argp_parse@@Base+0x3b6c>
  43d5c0:	mov	w11, wzr
  43d5c4:	cmp	x10, #0x3
  43d5c8:	b.ls	43e230 <argp_parse@@Base+0x3b84>  // b.plast
  43d5cc:	b	43db34 <argp_parse@@Base+0x3488>
  43d5d0:	cbnz	w9, 43db34 <argp_parse@@Base+0x3488>
  43d5d4:	mov	w25, wzr
  43d5d8:	mov	w20, wzr
  43d5dc:	orr	w26, w28, w26
  43d5e0:	mov	w8, #0x41                  	// #65
  43d5e4:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d5e8:	cmp	w9, #0x45
  43d5ec:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d5f0:	mov	w25, wzr
  43d5f4:	mov	w20, wzr
  43d5f8:	orr	w26, w28, w26
  43d5fc:	mov	w8, #0x42                  	// #66
  43d600:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d604:	cmp	w9, #0x45
  43d608:	b.ne	43dd00 <argp_parse@@Base+0x3654>  // b.any
  43d60c:	mov	w25, wzr
  43d610:	mov	w20, wzr
  43d614:	mov	w8, #0x43                  	// #67
  43d618:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d61c:	cbnz	w9, 43db34 <argp_parse@@Base+0x3488>
  43d620:	adrp	x27, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43d624:	add	x27, x27, #0xcc4
  43d628:	b	43d6f8 <argp_parse@@Base+0x304c>
  43d62c:	cbnz	w9, 43db34 <argp_parse@@Base+0x3488>
  43d630:	adrp	x27, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43d634:	add	x27, x27, #0xccd
  43d638:	b	43d6f8 <argp_parse@@Base+0x304c>
  43d63c:	cmp	w9, #0x45
  43d640:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d644:	ldr	x10, [sp, #80]
  43d648:	ldr	w10, [x10, #8]
  43d64c:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d650:	cmp	w9, #0x45
  43d654:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d658:	ldr	w10, [sp, #20]
  43d65c:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d660:	cmp	w9, #0x45
  43d664:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d668:	ldr	x10, [sp, #80]
  43d66c:	ldr	w10, [x10, #4]
  43d670:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d674:	cmp	w9, #0x45
  43d678:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d67c:	cmn	w22, #0x1
  43d680:	b.eq	43e2b8 <argp_parse@@Base+0x3c0c>  // b.none
  43d684:	cmp	w22, #0x8
  43d688:	b.gt	43e2ec <argp_parse@@Base+0x3c40>
  43d68c:	ldr	w10, [sp, #44]
  43d690:	sub	w11, w22, #0x1
  43d694:	mov	w12, #0x6667                	// #26215
  43d698:	movk	w12, #0x6666, lsl #16
  43d69c:	smull	x10, w10, w12
  43d6a0:	add	w11, w11, #0x1
  43d6a4:	lsr	x12, x10, #63
  43d6a8:	asr	x10, x10, #34
  43d6ac:	cmp	w11, #0x8
  43d6b0:	add	w10, w10, w12
  43d6b4:	b.lt	43d694 <argp_parse@@Base+0x2fe8>  // b.tstop
  43d6b8:	mov	w20, w22
  43d6bc:	b	43dda8 <argp_parse@@Base+0x36fc>
  43d6c0:	mov	w11, #0x1                   	// #1
  43d6c4:	eor	w8, w28, #0x1
  43d6c8:	mov	w20, wzr
  43d6cc:	orr	w25, w28, w11
  43d6d0:	and	w26, w26, w8
  43d6d4:	mov	w8, #0x70                  	// #112
  43d6d8:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d6dc:	cmp	w9, #0x45
  43d6e0:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d6e4:	ldr	x10, [sp, #80]
  43d6e8:	ldr	w10, [x10]
  43d6ec:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d6f0:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  43d6f4:	add	x27, x27, #0xc09
  43d6f8:	ldr	x2, [sp, #80]
  43d6fc:	ldr	x4, [sp, #48]
  43d700:	ldr	w5, [sp, #44]
  43d704:	and	w3, w26, #0x1
  43d708:	mov	x0, xzr
  43d70c:	mov	x19, x1
  43d710:	mov	x1, x27
  43d714:	mov	w25, w26
  43d718:	bl	43d170 <argp_parse@@Base+0x2ac4>
  43d71c:	bic	w8, w22, w22, asr #31
  43d720:	cmp	x0, x8
  43d724:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  43d728:	mvn	x9, x19
  43d72c:	cmp	x20, x9
  43d730:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43d734:	mov	x1, x19
  43d738:	cbz	x24, 43e1a4 <argp_parse@@Base+0x3af8>
  43d73c:	cmp	x0, x8
  43d740:	b.cs	43e184 <argp_parse@@Base+0x3ad8>  // b.hs, b.nlast
  43d744:	sxtw	x8, w22
  43d748:	cmp	w21, #0x30
  43d74c:	sub	x21, x8, x0
  43d750:	b.ne	43e16c <argp_parse@@Base+0x3ac0>  // b.any
  43d754:	cbz	x21, 43e184 <argp_parse@@Base+0x3ad8>
  43d758:	mov	w0, #0x30                  	// #48
  43d75c:	mov	x1, x24
  43d760:	bl	404080 <fputc@plt>
  43d764:	subs	x21, x21, #0x1
  43d768:	b.ne	43d758 <argp_parse@@Base+0x30ac>  // b.any
  43d76c:	b	43e184 <argp_parse@@Base+0x3ad8>
  43d770:	cmp	w9, #0x45
  43d774:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d778:	ldr	x11, [sp, #80]
  43d77c:	mov	w12, #0x2493                	// #9363
  43d780:	movk	w12, #0x9249, lsl #16
  43d784:	ldp	w11, w10, [x11, #24]
  43d788:	sub	w10, w10, w11
  43d78c:	b	43d7d0 <argp_parse@@Base+0x3124>
  43d790:	cmp	w9, #0x45
  43d794:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d798:	ldr	x11, [sp, #80]
  43d79c:	mov	w12, #0x2493                	// #9363
  43d7a0:	movk	w12, #0x9249, lsl #16
  43d7a4:	ldp	w10, w11, [x11, #24]
  43d7a8:	add	w10, w10, #0x6
  43d7ac:	smull	x13, w10, w12
  43d7b0:	lsr	x13, x13, #32
  43d7b4:	add	w13, w13, w10
  43d7b8:	asr	w14, w13, #2
  43d7bc:	add	w13, w14, w13, lsr #31
  43d7c0:	lsl	w14, w13, #3
  43d7c4:	sub	w13, w14, w13
  43d7c8:	sub	w10, w13, w10
  43d7cc:	add	w10, w11, w10
  43d7d0:	add	w10, w10, #0x7
  43d7d4:	smull	x11, w10, w12
  43d7d8:	lsr	x11, x11, #32
  43d7dc:	add	w10, w11, w10
  43d7e0:	asr	w11, w10, #2
  43d7e4:	add	w10, w11, w10, lsr #31
  43d7e8:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d7ec:	cmp	w9, #0x4f
  43d7f0:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d7f4:	mov	w25, wzr
  43d7f8:	mov	w20, wzr
  43d7fc:	mov	w8, #0x58                  	// #88
  43d800:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d804:	cmp	w9, #0x45
  43d808:	b.eq	43e208 <argp_parse@@Base+0x3b5c>  // b.none
  43d80c:	cmp	w9, #0x4f
  43d810:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d814:	ldr	x8, [sp, #80]
  43d818:	mov	w12, wzr
  43d81c:	mov	w13, wzr
  43d820:	mov	w20, #0x4                   	// #4
  43d824:	ldr	w8, [x8, #20]
  43d828:	cmn	w8, #0x76c
  43d82c:	add	w10, w8, #0x76c
  43d830:	cset	w11, lt  // lt = tstop
  43d834:	b	43de60 <argp_parse@@Base+0x37b4>
  43d838:	ldr	x0, [sp, #24]
  43d83c:	mov	x19, x1
  43d840:	bl	403f00 <strlen@plt>
  43d844:	bic	w8, w22, w22, asr #31
  43d848:	mov	x9, x19
  43d84c:	cmp	x0, x8
  43d850:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  43d854:	mvn	x9, x19
  43d858:	cmp	x20, x9
  43d85c:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43d860:	cbz	x24, 43e3d4 <argp_parse@@Base+0x3d28>
  43d864:	mov	x27, x0
  43d868:	cmp	x0, x8
  43d86c:	mov	w25, w26
  43d870:	b.cs	43e310 <argp_parse@@Base+0x3c64>  // b.hs, b.nlast
  43d874:	sxtw	x8, w22
  43d878:	cmp	w21, #0x30
  43d87c:	sub	x21, x8, x27
  43d880:	b.ne	43e2f8 <argp_parse@@Base+0x3c4c>  // b.any
  43d884:	cbz	x21, 43e310 <argp_parse@@Base+0x3c64>
  43d888:	mov	w0, #0x30                  	// #48
  43d88c:	mov	x1, x24
  43d890:	bl	404080 <fputc@plt>
  43d894:	subs	x21, x21, #0x1
  43d898:	b.ne	43d888 <argp_parse@@Base+0x31dc>  // b.any
  43d89c:	b	43e310 <argp_parse@@Base+0x3c64>
  43d8a0:	cbnz	w9, 43db34 <argp_parse@@Base+0x3488>
  43d8a4:	mov	w25, wzr
  43d8a8:	mov	w20, wzr
  43d8ac:	orr	w26, w28, w26
  43d8b0:	mov	w8, #0x61                  	// #97
  43d8b4:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d8b8:	cmp	w9, #0x4f
  43d8bc:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d8c0:	mov	w25, wzr
  43d8c4:	mov	w20, wzr
  43d8c8:	mov	w8, #0x63                  	// #99
  43d8cc:	b	43ddc4 <argp_parse@@Base+0x3718>
  43d8d0:	cmp	w9, #0x45
  43d8d4:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d8d8:	ldr	x10, [sp, #80]
  43d8dc:	ldr	w10, [x10, #12]
  43d8e0:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d8e4:	cmp	w9, #0x45
  43d8e8:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d8ec:	ldr	x10, [sp, #80]
  43d8f0:	ldr	w10, [x10, #12]
  43d8f4:	b	43d944 <argp_parse@@Base+0x3298>
  43d8f8:	cmp	w9, #0x45
  43d8fc:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d900:	ldr	x10, [sp, #80]
  43d904:	mov	w13, wzr
  43d908:	mov	w12, wzr
  43d90c:	mov	w20, #0x3                   	// #3
  43d910:	ldr	w10, [x10, #28]
  43d914:	cmn	w10, #0x1
  43d918:	add	w10, w10, #0x1
  43d91c:	cset	w11, lt  // lt = tstop
  43d920:	b	43ddb4 <argp_parse@@Base+0x3708>
  43d924:	cmp	w9, #0x45
  43d928:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d92c:	ldr	x10, [sp, #80]
  43d930:	ldr	w10, [x10, #8]
  43d934:	b	43d944 <argp_parse@@Base+0x3298>
  43d938:	ldr	w10, [sp, #20]
  43d93c:	cmp	w9, #0x45
  43d940:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d944:	and	w11, w21, #0xff
  43d948:	cmp	w11, #0x2d
  43d94c:	mov	w20, #0x2                   	// #2
  43d950:	b.eq	43dda8 <argp_parse@@Base+0x36fc>  // b.none
  43d954:	cmp	w11, #0x30
  43d958:	b.eq	43dda8 <argp_parse@@Base+0x36fc>  // b.none
  43d95c:	mov	w21, #0x5f                  	// #95
  43d960:	b	43dda4 <argp_parse@@Base+0x36f8>
  43d964:	cmp	w9, #0x45
  43d968:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43d96c:	ldr	x10, [sp, #80]
  43d970:	mov	w13, wzr
  43d974:	mov	w12, wzr
  43d978:	mov	w20, #0x2                   	// #2
  43d97c:	ldr	w10, [x10, #16]
  43d980:	cmn	w10, #0x1
  43d984:	add	w10, w10, #0x1
  43d988:	cset	w11, lt  // lt = tstop
  43d98c:	b	43ddb4 <argp_parse@@Base+0x3708>
  43d990:	bic	w8, w22, w22, asr #31
  43d994:	cmp	w8, #0x1
  43d998:	csinc	w20, w8, wzr, hi  // hi = pmore
  43d99c:	mvn	x9, x1
  43d9a0:	cmp	x20, x9
  43d9a4:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43d9a8:	cbz	x24, 43e5a8 <argp_parse@@Base+0x3efc>
  43d9ac:	mov	x19, x1
  43d9b0:	cmp	w8, #0x2
  43d9b4:	b.cc	43e398 <argp_parse@@Base+0x3cec>  // b.lo, b.ul, b.last
  43d9b8:	sxtw	x8, w22
  43d9bc:	cmp	w21, #0x30
  43d9c0:	sub	x21, x8, #0x1
  43d9c4:	b.ne	43e380 <argp_parse@@Base+0x3cd4>  // b.any
  43d9c8:	cbz	x21, 43e398 <argp_parse@@Base+0x3cec>
  43d9cc:	mov	w0, #0x30                  	// #48
  43d9d0:	mov	x1, x24
  43d9d4:	bl	404080 <fputc@plt>
  43d9d8:	subs	x21, x21, #0x1
  43d9dc:	b.ne	43d9cc <argp_parse@@Base+0x3320>  // b.any
  43d9e0:	b	43e398 <argp_parse@@Base+0x3cec>
  43d9e4:	ldr	x10, [sp, #80]
  43d9e8:	mov	w14, #0xb                   	// #11
  43d9ec:	mov	w13, wzr
  43d9f0:	mov	w12, wzr
  43d9f4:	ldr	w10, [x10, #16]
  43d9f8:	mov	w11, wzr
  43d9fc:	mov	w20, #0x1                   	// #1
  43da00:	mul	w10, w10, w14
  43da04:	asr	w10, w10, #5
  43da08:	add	w10, w10, #0x1
  43da0c:	b	43ddb4 <argp_parse@@Base+0x3708>
  43da10:	ldr	x9, [sp, #80]
  43da14:	ldr	x0, [sp, #48]
  43da18:	mov	x19, x1
  43da1c:	add	x1, sp, #0x60
  43da20:	ldr	x8, [x9, #48]
  43da24:	ldp	q1, q0, [x9, #16]
  43da28:	ldr	q2, [x9]
  43da2c:	str	x8, [sp, #144]
  43da30:	stp	q1, q0, [sp, #112]
  43da34:	str	q2, [sp, #96]
  43da38:	bl	45bfd0 <_obstack_memory_used@@Base+0x10e0c>
  43da3c:	lsr	x11, x0, #63
  43da40:	tbnz	x0, #63, 43e1ac <argp_parse@@Base+0x3b00>
  43da44:	ldr	x28, [sp, #72]
  43da48:	mov	x1, x19
  43da4c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  43da50:	movk	x8, #0x6667
  43da54:	smulh	x8, x0, x8
  43da58:	asr	x12, x8, #2
  43da5c:	mov	w9, #0xa                   	// #10
  43da60:	add	x8, x12, x8, lsr #63
  43da64:	msub	w9, w8, w9, w0
  43da68:	add	x10, x0, #0x9
  43da6c:	add	w9, w9, #0x30
  43da70:	cmp	x10, #0x12
  43da74:	strb	w9, [x28, #-1]!
  43da78:	mov	x0, x8
  43da7c:	b.hi	43da4c <argp_parse@@Base+0x33a0>  // b.pmore
  43da80:	b	43e1e8 <argp_parse@@Base+0x3b3c>
  43da84:	bic	w8, w22, w22, asr #31
  43da88:	cmp	w8, #0x1
  43da8c:	csinc	w20, w8, wzr, hi  // hi = pmore
  43da90:	mvn	x9, x1
  43da94:	cmp	x20, x9
  43da98:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43da9c:	cbz	x24, 43e5a8 <argp_parse@@Base+0x3efc>
  43daa0:	mov	x19, x1
  43daa4:	cmp	w8, #0x2
  43daa8:	b.cc	43e3b8 <argp_parse@@Base+0x3d0c>  // b.lo, b.ul, b.last
  43daac:	sxtw	x8, w22
  43dab0:	cmp	w21, #0x30
  43dab4:	sub	x21, x8, #0x1
  43dab8:	b.ne	43e3a0 <argp_parse@@Base+0x3cf4>  // b.any
  43dabc:	cbz	x21, 43e3b8 <argp_parse@@Base+0x3d0c>
  43dac0:	mov	w0, #0x30                  	// #48
  43dac4:	mov	x1, x24
  43dac8:	bl	404080 <fputc@plt>
  43dacc:	subs	x21, x21, #0x1
  43dad0:	b.ne	43dac0 <argp_parse@@Base+0x3414>  // b.any
  43dad4:	b	43e3b8 <argp_parse@@Base+0x3d0c>
  43dad8:	ldr	x10, [sp, #80]
  43dadc:	mov	w11, #0x2493                	// #9363
  43dae0:	movk	w11, #0x9249, lsl #16
  43dae4:	mov	w20, #0x1                   	// #1
  43dae8:	ldr	w10, [x10, #24]
  43daec:	add	w10, w10, #0x6
  43daf0:	smull	x11, w10, w11
  43daf4:	lsr	x11, x11, #32
  43daf8:	add	w11, w11, w10
  43dafc:	asr	w12, w11, #2
  43db00:	add	w11, w12, w11, lsr #31
  43db04:	sub	w11, w11, w11, lsl #3
  43db08:	add	w10, w10, w11
  43db0c:	add	w10, w10, #0x1
  43db10:	b	43dda8 <argp_parse@@Base+0x36fc>
  43db14:	cmp	w9, #0x45
  43db18:	b.eq	43db34 <argp_parse@@Base+0x3488>  // b.none
  43db1c:	ldr	x10, [sp, #80]
  43db20:	mov	w20, #0x1                   	// #1
  43db24:	ldr	w10, [x10, #24]
  43db28:	b	43dda8 <argp_parse@@Base+0x36fc>
  43db2c:	cmp	w9, #0x4f
  43db30:	b.ne	43dd58 <argp_parse@@Base+0x36ac>  // b.any
  43db34:	mov	x9, xzr
  43db38:	mov	x8, x9
  43db3c:	ldrb	w9, [x23, x9]
  43db40:	cmp	w9, #0x25
  43db44:	sub	x9, x8, #0x1
  43db48:	b.ne	43db38 <argp_parse@@Base+0x348c>  // b.any
  43db4c:	neg	x10, x9
  43db50:	bic	w11, w22, w22, asr #31
  43db54:	cmp	w11, w10
  43db58:	csel	w20, w10, w11, cc  // cc = lo, ul, last
  43db5c:	mvn	x12, x1
  43db60:	cmp	x20, x12
  43db64:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43db68:	mov	x19, x1
  43db6c:	cbz	x24, 43d230 <argp_parse@@Base+0x2b84>
  43db70:	add	x25, x23, x9
  43db74:	cmp	w11, w10
  43db78:	and	x27, x10, #0xffffffff
  43db7c:	b.ls	43dbdc <argp_parse@@Base+0x3530>  // b.plast
  43db80:	sxtw	x9, w22
  43db84:	cmp	w21, #0x30
  43db88:	sub	x10, x9, x27
  43db8c:	b.ne	43dbb8 <argp_parse@@Base+0x350c>  // b.any
  43db90:	cbz	x10, 43dbdc <argp_parse@@Base+0x3530>
  43db94:	mov	w10, #0x1                   	// #1
  43db98:	sub	w8, w10, w8
  43db9c:	sub	x21, x9, x8
  43dba0:	mov	w0, #0x30                  	// #48
  43dba4:	mov	x1, x24
  43dba8:	bl	404080 <fputc@plt>
  43dbac:	subs	x21, x21, #0x1
  43dbb0:	b.ne	43dba0 <argp_parse@@Base+0x34f4>  // b.any
  43dbb4:	b	43dbdc <argp_parse@@Base+0x3530>
  43dbb8:	cbz	x10, 43dbdc <argp_parse@@Base+0x3530>
  43dbbc:	mov	w10, #0x1                   	// #1
  43dbc0:	sub	w8, w10, w8
  43dbc4:	sub	x21, x9, x8
  43dbc8:	mov	w0, #0x20                  	// #32
  43dbcc:	mov	x1, x24
  43dbd0:	bl	404080 <fputc@plt>
  43dbd4:	subs	x21, x21, #0x1
  43dbd8:	b.ne	43dbc8 <argp_parse@@Base+0x351c>  // b.any
  43dbdc:	add	x28, x25, #0x1
  43dbe0:	tbz	w26, #0, 43d21c <argp_parse@@Base+0x2b70>
  43dbe4:	bl	404460 <__ctype_toupper_loc@plt>
  43dbe8:	mov	x25, x0
  43dbec:	ldr	x8, [x25]
  43dbf0:	ldrb	w9, [x28], #1
  43dbf4:	mov	x1, x24
  43dbf8:	sub	x27, x27, #0x1
  43dbfc:	ldr	w0, [x8, x9, lsl #2]
  43dc00:	bl	404080 <fputc@plt>
  43dc04:	cbnz	x27, 43dbec <argp_parse@@Base+0x3540>
  43dc08:	b	43d230 <argp_parse@@Base+0x2b84>
  43dc0c:	cmp	w9, #0x45
  43dc10:	b.ne	43dd68 <argp_parse@@Base+0x36bc>  // b.any
  43dc14:	mov	w25, wzr
  43dc18:	mov	w20, wzr
  43dc1c:	mov	w8, #0x79                  	// #121
  43dc20:	b	43ddc4 <argp_parse@@Base+0x3718>
  43dc24:	sub	w14, w15, #0x1
  43dc28:	tst	w14, #0x3
  43dc2c:	mov	w13, #0x16d                 	// #365
  43dc30:	b.ne	43dc6c <argp_parse@@Base+0x35c0>  // b.any
  43dc34:	mov	w15, #0x5c29                	// #23593
  43dc38:	mov	w16, #0xb850                	// #47184
  43dc3c:	movk	w15, #0xc28f, lsl #16
  43dc40:	movk	w16, #0x51e, lsl #16
  43dc44:	mov	w17, #0xd70b                	// #55051
  43dc48:	madd	w14, w14, w15, w16
  43dc4c:	movk	w17, #0xa3, lsl #16
  43dc50:	ror	w15, w14, #2
  43dc54:	ror	w14, w14, #4
  43dc58:	cmp	w14, w17
  43dc5c:	mov	w14, #0x5c28                	// #23592
  43dc60:	movk	w14, #0x28f, lsl #16
  43dc64:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  43dc68:	cinc	w13, w13, hi  // hi = pmore
  43dc6c:	add	w12, w13, w12
  43dc70:	mov	w13, #0x17e                 	// #382
  43dc74:	mov	w14, #0x2493                	// #9363
  43dc78:	sub	w10, w13, w10
  43dc7c:	movk	w14, #0x9249, lsl #16
  43dc80:	add	w12, w10, w12
  43dc84:	smull	x13, w12, w14
  43dc88:	lsr	x13, x13, #32
  43dc8c:	add	w12, w13, w12
  43dc90:	asr	w13, w12, #2
  43dc94:	add	w12, w13, w12, lsr #31
  43dc98:	lsl	w13, w12, #3
  43dc9c:	sub	w12, w13, w12
  43dca0:	sub	w10, w12, w10
  43dca4:	add	w10, w10, #0x3
  43dca8:	mov	w14, #0xffffffff            	// #-1
  43dcac:	cmp	w8, #0x47
  43dcb0:	b.ne	43d4a8 <argp_parse@@Base+0x2dfc>  // b.any
  43dcb4:	mov	w10, #0xfffff894            	// #-1900
  43dcb8:	add	w15, w11, w14
  43dcbc:	sub	w14, w10, w14
  43dcc0:	cmp	w11, w14
  43dcc4:	mov	w13, wzr
  43dcc8:	mov	w12, wzr
  43dccc:	add	w10, w15, #0x76c
  43dcd0:	cset	w11, lt  // lt = tstop
  43dcd4:	mov	w20, #0x4                   	// #4
  43dcd8:	b	43ddb4 <argp_parse@@Base+0x3708>
  43dcdc:	mov	w11, #0x2493                	// #9363
  43dce0:	movk	w11, #0x9249, lsl #16
  43dce4:	smull	x11, w10, w11
  43dce8:	lsr	x11, x11, #32
  43dcec:	add	w10, w11, w10
  43dcf0:	asr	w11, w10, #2
  43dcf4:	add	w10, w11, w10, lsr #31
  43dcf8:	add	w10, w10, #0x1
  43dcfc:	b	43dda4 <argp_parse@@Base+0x36f8>
  43dd00:	ldr	x10, [sp, #80]
  43dd04:	mov	w11, #0x851f                	// #34079
  43dd08:	movk	w11, #0x51eb, lsl #16
  43dd0c:	mov	w14, #0x64                  	// #100
  43dd10:	ldrsw	x10, [x10, #20]
  43dd14:	mov	w13, wzr
  43dd18:	mov	w12, wzr
  43dd1c:	mov	w20, #0x2                   	// #2
  43dd20:	mul	x11, x10, x11
  43dd24:	lsr	x15, x11, #63
  43dd28:	asr	x11, x11, #37
  43dd2c:	add	w15, w11, w15
  43dd30:	cmn	x10, #0x76c
  43dd34:	msub	w10, w15, w14, w10
  43dd38:	cset	w11, lt  // lt = tstop
  43dd3c:	cset	w14, gt
  43dd40:	cmp	w10, #0x0
  43dd44:	cset	w10, lt  // lt = tstop
  43dd48:	and	w10, w14, w10
  43dd4c:	sub	w10, w15, w10
  43dd50:	add	w10, w10, #0x13
  43dd54:	b	43ddb4 <argp_parse@@Base+0x3708>
  43dd58:	mov	w25, wzr
  43dd5c:	mov	w20, wzr
  43dd60:	mov	w8, #0x78                  	// #120
  43dd64:	b	43ddc4 <argp_parse@@Base+0x3718>
  43dd68:	ldr	x10, [sp, #80]
  43dd6c:	mov	w11, #0x851f                	// #34079
  43dd70:	movk	w11, #0x51eb, lsl #16
  43dd74:	mov	w12, #0x64                  	// #100
  43dd78:	ldrsw	x10, [x10, #20]
  43dd7c:	mul	x11, x10, x11
  43dd80:	lsr	x13, x11, #63
  43dd84:	asr	x11, x11, #37
  43dd88:	add	w11, w11, w13
  43dd8c:	cmn	w10, #0x76c
  43dd90:	msub	w10, w11, w12, w10
  43dd94:	add	w11, w10, #0x64
  43dd98:	csneg	w11, w11, w10, ge  // ge = tcont
  43dd9c:	cmp	w10, #0x0
  43dda0:	csel	w10, w11, w10, lt  // lt = tstop
  43dda4:	mov	w20, #0x2                   	// #2
  43dda8:	mov	w13, wzr
  43ddac:	mov	w12, wzr
  43ddb0:	lsr	w11, w10, #31
  43ddb4:	cmp	w9, #0x4f
  43ddb8:	b.ne	43de60 <argp_parse@@Base+0x37b4>  // b.any
  43ddbc:	cbnz	w11, 43de60 <argp_parse@@Base+0x37b4>
  43ddc0:	mov	w25, wzr
  43ddc4:	mov	w10, #0x2520                	// #9504
  43ddc8:	sturh	w10, [x29, #-40]
  43ddcc:	ldr	x10, [sp, #64]
  43ddd0:	mov	x19, x1
  43ddd4:	cbz	w9, 43dde0 <argp_parse@@Base+0x3734>
  43ddd8:	ldr	x10, [sp, #56]
  43dddc:	sturb	w9, [x29, #-38]
  43dde0:	ldr	x3, [sp, #80]
  43dde4:	add	x0, sp, #0x60
  43dde8:	sub	x2, x29, #0x28
  43ddec:	mov	w1, #0x400                 	// #1024
  43ddf0:	strb	w8, [x10]
  43ddf4:	strb	wzr, [x10, #1]
  43ddf8:	bl	404060 <strftime@plt>
  43ddfc:	cbz	x0, 43df30 <argp_parse@@Base+0x3884>
  43de00:	sub	x27, x0, #0x1
  43de04:	bic	w8, w22, w22, asr #31
  43de08:	cmp	x27, x8
  43de0c:	mov	x9, x19
  43de10:	mov	w28, w26
  43de14:	csel	x26, x8, x27, cc  // cc = lo, ul, last
  43de18:	mvn	x9, x19
  43de1c:	cmp	x26, x9
  43de20:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43de24:	cbz	x24, 43e0f4 <argp_parse@@Base+0x3a48>
  43de28:	cbnz	w20, 43e078 <argp_parse@@Base+0x39cc>
  43de2c:	cmp	x27, x8
  43de30:	b.cs	43e078 <argp_parse@@Base+0x39cc>  // b.hs, b.nlast
  43de34:	sxtw	x8, w22
  43de38:	cmp	w21, #0x30
  43de3c:	sub	x20, x8, x27
  43de40:	b.ne	43e060 <argp_parse@@Base+0x39b4>  // b.any
  43de44:	cbz	x20, 43e078 <argp_parse@@Base+0x39cc>
  43de48:	mov	w0, #0x30                  	// #48
  43de4c:	mov	x1, x24
  43de50:	bl	404080 <fputc@plt>
  43de54:	subs	x20, x20, #0x1
  43de58:	b.ne	43de48 <argp_parse@@Base+0x379c>  // b.any
  43de5c:	b	43e078 <argp_parse@@Base+0x39cc>
  43de60:	ldr	x28, [sp, #72]
  43de64:	cmp	w11, #0x0
  43de68:	cneg	w8, w10, ne  // ne = any
  43de6c:	tbz	w13, #0, 43de78 <argp_parse@@Base+0x37cc>
  43de70:	mov	w9, #0x3a                  	// #58
  43de74:	strb	w9, [x28, #-1]!
  43de78:	mov	w9, #0xcccd                	// #52429
  43de7c:	movk	w9, #0xcccc, lsl #16
  43de80:	umull	x9, w8, w9
  43de84:	mov	w10, #0xa                   	// #10
  43de88:	lsr	x9, x9, #35
  43de8c:	msub	w10, w9, w10, w8
  43de90:	orr	w10, w10, #0x30
  43de94:	asr	w13, w13, #1
  43de98:	cmp	w8, #0x9
  43de9c:	strb	w10, [x28, #-1]!
  43dea0:	mov	w8, w9
  43dea4:	b.hi	43de6c <argp_parse@@Base+0x37c0>  // b.pmore
  43dea8:	mov	w8, w9
  43deac:	cbnz	w13, 43de6c <argp_parse@@Base+0x37c0>
  43deb0:	cmp	w20, w22
  43deb4:	csel	w20, w22, w20, lt  // lt = tstop
  43deb8:	cmp	w12, #0x0
  43debc:	mov	w8, #0x2b                  	// #43
  43dec0:	csel	w8, w8, wzr, ne  // ne = any
  43dec4:	cmp	w11, #0x0
  43dec8:	mov	w9, #0x2d                  	// #45
  43decc:	csel	w27, w9, w8, ne  // ne = any
  43ded0:	cmp	w21, #0x2d
  43ded4:	str	w26, [sp, #40]
  43ded8:	b.ne	43df38 <argp_parse@@Base+0x388c>  // b.any
  43dedc:	cbz	w27, 43e40c <argp_parse@@Base+0x3d60>
  43dee0:	bic	w8, w22, w22, asr #31
  43dee4:	cmp	w8, #0x1
  43dee8:	csinc	w25, w8, wzr, hi  // hi = pmore
  43deec:	mvn	x9, x1
  43def0:	cmp	x25, x9
  43def4:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43def8:	cbz	x24, 43e408 <argp_parse@@Base+0x3d5c>
  43defc:	mov	x19, x1
  43df00:	cbnz	w20, 43e3f8 <argp_parse@@Base+0x3d4c>
  43df04:	cmp	w8, #0x2
  43df08:	b.cc	43e3f8 <argp_parse@@Base+0x3d4c>  // b.lo, b.ul, b.last
  43df0c:	sxtw	x8, w22
  43df10:	subs	x26, x8, #0x1
  43df14:	b.eq	43e3f8 <argp_parse@@Base+0x3d4c>  // b.none
  43df18:	mov	w0, #0x20                  	// #32
  43df1c:	mov	x1, x24
  43df20:	bl	404080 <fputc@plt>
  43df24:	subs	x26, x26, #0x1
  43df28:	b.ne	43df18 <argp_parse@@Base+0x386c>  // b.any
  43df2c:	b	43e3f8 <argp_parse@@Base+0x3d4c>
  43df30:	mov	x1, x19
  43df34:	b	43d238 <argp_parse@@Base+0x2b8c>
  43df38:	ldr	x10, [sp, #72]
  43df3c:	sxtw	x8, w20
  43df40:	cmp	w27, #0x0
  43df44:	cset	w9, ne  // ne = any
  43df48:	sub	x10, x8, x10
  43df4c:	add	x10, x10, x28
  43df50:	sub	x25, x10, x9
  43df54:	cmp	w25, #0x1
  43df58:	b.lt	43e004 <argp_parse@@Base+0x3958>  // b.tstop
  43df5c:	cmp	w21, #0x5f
  43df60:	b.ne	43e100 <argp_parse@@Base+0x3a54>  // b.any
  43df64:	sxtw	x26, w25
  43df68:	mvn	x8, x1
  43df6c:	cmp	x26, x8
  43df70:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43df74:	mov	x19, x1
  43df78:	str	x20, [sp]
  43df7c:	cbz	x24, 43dfa0 <argp_parse@@Base+0x38f4>
  43df80:	lsl	x8, x25, #32
  43df84:	cbz	x8, 43dfa0 <argp_parse@@Base+0x38f4>
  43df88:	sxtw	x20, w25
  43df8c:	mov	w0, #0x20                  	// #32
  43df90:	mov	x1, x24
  43df94:	bl	404080 <fputc@plt>
  43df98:	subs	x20, x20, #0x1
  43df9c:	b.ne	43df8c <argp_parse@@Base+0x38e0>  // b.any
  43dfa0:	mov	x1, x19
  43dfa4:	subs	w8, w22, w25
  43dfa8:	add	x1, x26, x19
  43dfac:	csel	w22, w8, wzr, gt
  43dfb0:	cbz	w27, 43e164 <argp_parse@@Base+0x3ab8>
  43dfb4:	ldr	x20, [sp]
  43dfb8:	cmp	w22, #0x1
  43dfbc:	csinc	w25, w22, wzr, hi  // hi = pmore
  43dfc0:	mvn	x8, x1
  43dfc4:	cmp	x25, x8
  43dfc8:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43dfcc:	cbz	x24, 43e408 <argp_parse@@Base+0x3d5c>
  43dfd0:	mov	x19, x1
  43dfd4:	cbnz	w20, 43e3f8 <argp_parse@@Base+0x3d4c>
  43dfd8:	cmp	w22, #0x2
  43dfdc:	b.cc	43e3f8 <argp_parse@@Base+0x3d4c>  // b.lo, b.ul, b.last
  43dfe0:	mov	w8, w22
  43dfe4:	subs	x26, x8, #0x1
  43dfe8:	b.eq	43e3f8 <argp_parse@@Base+0x3d4c>  // b.none
  43dfec:	mov	w0, #0x20                  	// #32
  43dff0:	mov	x1, x24
  43dff4:	bl	404080 <fputc@plt>
  43dff8:	subs	x26, x26, #0x1
  43dffc:	b.ne	43dfec <argp_parse@@Base+0x3940>  // b.any
  43e000:	b	43e3f8 <argp_parse@@Base+0x3d4c>
  43e004:	cbz	w27, 43e40c <argp_parse@@Base+0x3d60>
  43e008:	bic	w8, w22, w22, asr #31
  43e00c:	cmp	w8, #0x1
  43e010:	csinc	w25, w8, wzr, hi  // hi = pmore
  43e014:	mvn	x9, x1
  43e018:	cmp	x25, x9
  43e01c:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43e020:	cbz	x24, 43e408 <argp_parse@@Base+0x3d5c>
  43e024:	mov	x19, x1
  43e028:	cbnz	w20, 43e3f8 <argp_parse@@Base+0x3d4c>
  43e02c:	cmp	w8, #0x2
  43e030:	b.cc	43e3f8 <argp_parse@@Base+0x3d4c>  // b.lo, b.ul, b.last
  43e034:	sxtw	x8, w22
  43e038:	cmp	w21, #0x30
  43e03c:	sub	x26, x8, #0x1
  43e040:	b.ne	43e3e0 <argp_parse@@Base+0x3d34>  // b.any
  43e044:	cbz	x26, 43e3f8 <argp_parse@@Base+0x3d4c>
  43e048:	mov	w0, #0x30                  	// #48
  43e04c:	mov	x1, x24
  43e050:	bl	404080 <fputc@plt>
  43e054:	subs	x26, x26, #0x1
  43e058:	b.ne	43e048 <argp_parse@@Base+0x399c>  // b.any
  43e05c:	b	43e3f8 <argp_parse@@Base+0x3d4c>
  43e060:	cbz	x20, 43e078 <argp_parse@@Base+0x39cc>
  43e064:	mov	w0, #0x20                  	// #32
  43e068:	mov	x1, x24
  43e06c:	bl	404080 <fputc@plt>
  43e070:	subs	x20, x20, #0x1
  43e074:	b.ne	43e064 <argp_parse@@Base+0x39b8>  // b.any
  43e078:	tbz	w25, #0, 43e0ac <argp_parse@@Base+0x3a00>
  43e07c:	cbz	x27, 43e0f4 <argp_parse@@Base+0x3a48>
  43e080:	bl	404100 <__ctype_tolower_loc@plt>
  43e084:	ldr	x20, [sp, #32]
  43e088:	mov	x28, x0
  43e08c:	ldr	x8, [x28]
  43e090:	ldrb	w9, [x20], #1
  43e094:	mov	x1, x24
  43e098:	sub	x27, x27, #0x1
  43e09c:	ldr	w0, [x8, x9, lsl #2]
  43e0a0:	bl	404080 <fputc@plt>
  43e0a4:	cbnz	x27, 43e08c <argp_parse@@Base+0x39e0>
  43e0a8:	b	43e0f4 <argp_parse@@Base+0x3a48>
  43e0ac:	tbz	w28, #0, 43e0e0 <argp_parse@@Base+0x3a34>
  43e0b0:	cbz	x27, 43e0f4 <argp_parse@@Base+0x3a48>
  43e0b4:	bl	404460 <__ctype_toupper_loc@plt>
  43e0b8:	ldr	x20, [sp, #32]
  43e0bc:	mov	x28, x0
  43e0c0:	ldr	x8, [x28]
  43e0c4:	ldrb	w9, [x20], #1
  43e0c8:	mov	x1, x24
  43e0cc:	sub	x27, x27, #0x1
  43e0d0:	ldr	w0, [x8, x9, lsl #2]
  43e0d4:	bl	404080 <fputc@plt>
  43e0d8:	cbnz	x27, 43e0c0 <argp_parse@@Base+0x3a14>
  43e0dc:	b	43e0f4 <argp_parse@@Base+0x3a48>
  43e0e0:	ldr	x0, [sp, #32]
  43e0e4:	mov	w2, #0x1                   	// #1
  43e0e8:	mov	x1, x27
  43e0ec:	mov	x3, x24
  43e0f0:	bl	404790 <fwrite@plt>
  43e0f4:	mov	x1, x19
  43e0f8:	add	x1, x26, x19
  43e0fc:	b	43d238 <argp_parse@@Base+0x2b8c>
  43e100:	mvn	x9, x1
  43e104:	cmp	x8, x9
  43e108:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43e10c:	cbz	w27, 43e510 <argp_parse@@Base+0x3e64>
  43e110:	bic	w8, w22, w22, asr #31
  43e114:	cmp	w8, #0x1
  43e118:	csinc	w26, w8, wzr, hi  // hi = pmore
  43e11c:	cmp	x26, x9
  43e120:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43e124:	cbz	x24, 43e50c <argp_parse@@Base+0x3e60>
  43e128:	mov	x19, x1
  43e12c:	cbnz	w20, 43e4fc <argp_parse@@Base+0x3e50>
  43e130:	cmp	w8, #0x2
  43e134:	b.cc	43e4fc <argp_parse@@Base+0x3e50>  // b.lo, b.ul, b.last
  43e138:	sxtw	x8, w22
  43e13c:	cmp	w21, #0x30
  43e140:	sub	x22, x8, #0x1
  43e144:	b.ne	43e4e4 <argp_parse@@Base+0x3e38>  // b.any
  43e148:	cbz	x22, 43e4fc <argp_parse@@Base+0x3e50>
  43e14c:	mov	w0, #0x30                  	// #48
  43e150:	mov	x1, x24
  43e154:	bl	404080 <fputc@plt>
  43e158:	subs	x22, x22, #0x1
  43e15c:	b.ne	43e14c <argp_parse@@Base+0x3aa0>  // b.any
  43e160:	b	43e4fc <argp_parse@@Base+0x3e50>
  43e164:	ldr	x20, [sp]
  43e168:	b	43e40c <argp_parse@@Base+0x3d60>
  43e16c:	cbz	x21, 43e184 <argp_parse@@Base+0x3ad8>
  43e170:	mov	w0, #0x20                  	// #32
  43e174:	mov	x1, x24
  43e178:	bl	404080 <fputc@plt>
  43e17c:	subs	x21, x21, #0x1
  43e180:	b.ne	43e170 <argp_parse@@Base+0x3ac4>  // b.any
  43e184:	ldr	x2, [sp, #80]
  43e188:	ldr	x4, [sp, #48]
  43e18c:	ldr	w5, [sp, #44]
  43e190:	and	w3, w25, #0x1
  43e194:	mov	x0, x24
  43e198:	mov	x1, x27
  43e19c:	bl	43d170 <argp_parse@@Base+0x2ac4>
  43e1a0:	mov	x1, x19
  43e1a4:	add	x1, x20, x1
  43e1a8:	b	43d238 <argp_parse@@Base+0x2b8c>
  43e1ac:	ldr	x28, [sp, #72]
  43e1b0:	mov	x1, x19
  43e1b4:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  43e1b8:	movk	x8, #0x6667
  43e1bc:	smulh	x8, x0, x8
  43e1c0:	asr	x13, x8, #2
  43e1c4:	mov	w9, #0xa                   	// #10
  43e1c8:	neg	w10, w0
  43e1cc:	add	x12, x0, #0x9
  43e1d0:	add	x0, x13, x8, lsr #63
  43e1d4:	madd	w8, w0, w9, w10
  43e1d8:	add	w8, w8, #0x30
  43e1dc:	cmp	x12, #0x12
  43e1e0:	strb	w8, [x28, #-1]!
  43e1e4:	b.hi	43e1b4 <argp_parse@@Base+0x3b08>  // b.pmore
  43e1e8:	cmp	w22, #0x1
  43e1ec:	mov	w8, wzr
  43e1f0:	csinc	w20, w22, wzr, gt
  43e1f4:	b	43dec4 <argp_parse@@Base+0x3818>
  43e1f8:	mov	w11, #0x1                   	// #1
  43e1fc:	cmp	x10, #0x3
  43e200:	b.ls	43e230 <argp_parse@@Base+0x3b84>  // b.plast
  43e204:	b	43db34 <argp_parse@@Base+0x3488>
  43e208:	mov	w25, wzr
  43e20c:	mov	w20, wzr
  43e210:	mov	w8, #0x59                  	// #89
  43e214:	b	43ddc4 <argp_parse@@Base+0x3718>
  43e218:	ldr	x11, [sp, #24]
  43e21c:	ldrb	w11, [x11]
  43e220:	cmp	w11, #0x2d
  43e224:	cset	w11, eq  // eq = none
  43e228:	cmp	x10, #0x3
  43e22c:	b.hi	43db34 <argp_parse@@Base+0x3488>  // b.pmore
  43e230:	mov	w13, #0x8889                	// #34953
  43e234:	movk	w13, #0x8888, lsl #16
  43e238:	adrp	x15, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43e23c:	add	x15, x15, #0xcc0
  43e240:	smull	x16, w12, w13
  43e244:	adr	x17, 43e2a0 <argp_parse@@Base+0x3bf4>
  43e248:	ldrb	w18, [x15, x10]
  43e24c:	add	x17, x17, x18, lsl #2
  43e250:	lsr	x10, x16, #32
  43e254:	mov	w14, #0xb3c5                	// #46021
  43e258:	add	w10, w10, w12
  43e25c:	movk	w14, #0x91a2, lsl #16
  43e260:	asr	w15, w10, #5
  43e264:	smull	x14, w12, w14
  43e268:	add	w15, w15, w10, lsr #31
  43e26c:	lsr	x14, x14, #32
  43e270:	smull	x13, w15, w13
  43e274:	add	w14, w14, w12
  43e278:	lsr	x13, x13, #32
  43e27c:	asr	w10, w14, #11
  43e280:	add	w13, w13, w15
  43e284:	add	w10, w10, w14, lsr #31
  43e288:	asr	w14, w13, #5
  43e28c:	add	w13, w14, w13, lsr #31
  43e290:	mov	w16, #0x3c                  	// #60
  43e294:	msub	w14, w13, w16, w15
  43e298:	msub	w13, w15, w16, w12
  43e29c:	br	x17
  43e2a0:	mov	w12, #0x64                  	// #100
  43e2a4:	mov	w13, wzr
  43e2a8:	mov	w20, #0x5                   	// #5
  43e2ac:	madd	w10, w10, w12, w14
  43e2b0:	mov	w12, #0x1                   	// #1
  43e2b4:	b	43ddb4 <argp_parse@@Base+0x3708>
  43e2b8:	ldr	w10, [sp, #44]
  43e2bc:	mov	w22, #0x9                   	// #9
  43e2c0:	mov	w20, #0x9                   	// #9
  43e2c4:	b	43dda8 <argp_parse@@Base+0x36fc>
  43e2c8:	cbz	w13, 43e564 <argp_parse@@Base+0x3eb8>
  43e2cc:	mov	w15, #0x2710                	// #10000
  43e2d0:	mov	w16, #0x64                  	// #100
  43e2d4:	madd	w10, w10, w15, w13
  43e2d8:	mov	w20, #0x9                   	// #9
  43e2dc:	mov	w12, #0x1                   	// #1
  43e2e0:	madd	w10, w14, w16, w10
  43e2e4:	mov	w13, #0x14                  	// #20
  43e2e8:	b	43ddb4 <argp_parse@@Base+0x3708>
  43e2ec:	ldr	w10, [sp, #44]
  43e2f0:	mov	w20, w22
  43e2f4:	b	43dda8 <argp_parse@@Base+0x36fc>
  43e2f8:	cbz	x21, 43e310 <argp_parse@@Base+0x3c64>
  43e2fc:	mov	w0, #0x20                  	// #32
  43e300:	mov	x1, x24
  43e304:	bl	404080 <fputc@plt>
  43e308:	subs	x21, x21, #0x1
  43e30c:	b.ne	43e2fc <argp_parse@@Base+0x3c50>  // b.any
  43e310:	tbz	w28, #0, 43e344 <argp_parse@@Base+0x3c98>
  43e314:	cbz	x27, 43e3d4 <argp_parse@@Base+0x3d28>
  43e318:	bl	404100 <__ctype_tolower_loc@plt>
  43e31c:	ldr	x21, [sp, #24]
  43e320:	mov	x28, x0
  43e324:	ldr	x8, [x28]
  43e328:	ldrb	w9, [x21], #1
  43e32c:	mov	x1, x24
  43e330:	sub	x27, x27, #0x1
  43e334:	ldr	w0, [x8, x9, lsl #2]
  43e338:	bl	404080 <fputc@plt>
  43e33c:	cbnz	x27, 43e324 <argp_parse@@Base+0x3c78>
  43e340:	b	43e3d4 <argp_parse@@Base+0x3d28>
  43e344:	eor	w8, w28, #0x1
  43e348:	and	w8, w25, w8
  43e34c:	tbz	w8, #0, 43e3c0 <argp_parse@@Base+0x3d14>
  43e350:	cbz	x27, 43e3d4 <argp_parse@@Base+0x3d28>
  43e354:	bl	404460 <__ctype_toupper_loc@plt>
  43e358:	ldr	x21, [sp, #24]
  43e35c:	mov	x28, x0
  43e360:	ldr	x8, [x28]
  43e364:	ldrb	w9, [x21], #1
  43e368:	mov	x1, x24
  43e36c:	sub	x27, x27, #0x1
  43e370:	ldr	w0, [x8, x9, lsl #2]
  43e374:	bl	404080 <fputc@plt>
  43e378:	cbnz	x27, 43e360 <argp_parse@@Base+0x3cb4>
  43e37c:	b	43e3d4 <argp_parse@@Base+0x3d28>
  43e380:	cbz	x21, 43e398 <argp_parse@@Base+0x3cec>
  43e384:	mov	w0, #0x20                  	// #32
  43e388:	mov	x1, x24
  43e38c:	bl	404080 <fputc@plt>
  43e390:	subs	x21, x21, #0x1
  43e394:	b.ne	43e384 <argp_parse@@Base+0x3cd8>  // b.any
  43e398:	mov	w0, #0xa                   	// #10
  43e39c:	b	43e59c <argp_parse@@Base+0x3ef0>
  43e3a0:	cbz	x21, 43e3b8 <argp_parse@@Base+0x3d0c>
  43e3a4:	mov	w0, #0x20                  	// #32
  43e3a8:	mov	x1, x24
  43e3ac:	bl	404080 <fputc@plt>
  43e3b0:	subs	x21, x21, #0x1
  43e3b4:	b.ne	43e3a4 <argp_parse@@Base+0x3cf8>  // b.any
  43e3b8:	mov	w0, #0x9                   	// #9
  43e3bc:	b	43e59c <argp_parse@@Base+0x3ef0>
  43e3c0:	ldr	x0, [sp, #24]
  43e3c4:	mov	w2, #0x1                   	// #1
  43e3c8:	mov	x1, x27
  43e3cc:	mov	x3, x24
  43e3d0:	bl	404790 <fwrite@plt>
  43e3d4:	mov	x1, x19
  43e3d8:	add	x1, x20, x19
  43e3dc:	b	43d238 <argp_parse@@Base+0x2b8c>
  43e3e0:	cbz	x26, 43e3f8 <argp_parse@@Base+0x3d4c>
  43e3e4:	mov	w0, #0x20                  	// #32
  43e3e8:	mov	x1, x24
  43e3ec:	bl	404080 <fputc@plt>
  43e3f0:	subs	x26, x26, #0x1
  43e3f4:	b.ne	43e3e4 <argp_parse@@Base+0x3d38>  // b.any
  43e3f8:	mov	w0, w27
  43e3fc:	mov	x1, x24
  43e400:	bl	404080 <fputc@plt>
  43e404:	mov	x1, x19
  43e408:	add	x1, x1, x25
  43e40c:	bic	w8, w22, w22, asr #31
  43e410:	ldr	x9, [sp, #72]
  43e414:	mov	w8, w8
  43e418:	sub	x27, x9, x28
  43e41c:	cmp	x27, x8
  43e420:	csel	x25, x8, x27, cc  // cc = lo, ul, last
  43e424:	mvn	x9, x1
  43e428:	cmp	x25, x9
  43e42c:	b.cs	43e5c0 <argp_parse@@Base+0x3f14>  // b.hs, b.nlast
  43e430:	mov	x19, x1
  43e434:	cbz	x24, 43e4d8 <argp_parse@@Base+0x3e2c>
  43e438:	ldr	w26, [sp, #40]
  43e43c:	cbnz	w20, 43e48c <argp_parse@@Base+0x3de0>
  43e440:	cmp	x27, x8
  43e444:	b.cs	43e48c <argp_parse@@Base+0x3de0>  // b.hs, b.nlast
  43e448:	sxtw	x8, w22
  43e44c:	cmp	w21, #0x30
  43e450:	sub	x20, x8, x27
  43e454:	b.ne	43e474 <argp_parse@@Base+0x3dc8>  // b.any
  43e458:	cbz	x20, 43e48c <argp_parse@@Base+0x3de0>
  43e45c:	mov	w0, #0x30                  	// #48
  43e460:	mov	x1, x24
  43e464:	bl	404080 <fputc@plt>
  43e468:	subs	x20, x20, #0x1
  43e46c:	b.ne	43e45c <argp_parse@@Base+0x3db0>  // b.any
  43e470:	b	43e48c <argp_parse@@Base+0x3de0>
  43e474:	cbz	x20, 43e48c <argp_parse@@Base+0x3de0>
  43e478:	mov	w0, #0x20                  	// #32
  43e47c:	mov	x1, x24
  43e480:	bl	404080 <fputc@plt>
  43e484:	subs	x20, x20, #0x1
  43e488:	b.ne	43e478 <argp_parse@@Base+0x3dcc>  // b.any
  43e48c:	tbz	w26, #0, 43e4c4 <argp_parse@@Base+0x3e18>
  43e490:	cbz	x27, 43e4d8 <argp_parse@@Base+0x3e2c>
  43e494:	bl	404460 <__ctype_toupper_loc@plt>
  43e498:	ldr	x8, [sp, #8]
  43e49c:	mov	x27, x0
  43e4a0:	add	x20, x8, x28
  43e4a4:	ldr	x8, [x27]
  43e4a8:	ldrb	w9, [x28], #1
  43e4ac:	mov	x1, x24
  43e4b0:	ldr	w0, [x8, x9, lsl #2]
  43e4b4:	bl	404080 <fputc@plt>
  43e4b8:	adds	x20, x20, #0x1
  43e4bc:	b.cc	43e4a4 <argp_parse@@Base+0x3df8>  // b.lo, b.ul, b.last
  43e4c0:	b	43e4d8 <argp_parse@@Base+0x3e2c>
  43e4c4:	mov	w2, #0x1                   	// #1
  43e4c8:	mov	x0, x28
  43e4cc:	mov	x1, x27
  43e4d0:	mov	x3, x24
  43e4d4:	bl	404790 <fwrite@plt>
  43e4d8:	mov	x1, x19
  43e4dc:	add	x1, x25, x19
  43e4e0:	b	43d238 <argp_parse@@Base+0x2b8c>
  43e4e4:	cbz	x22, 43e4fc <argp_parse@@Base+0x3e50>
  43e4e8:	mov	w0, #0x20                  	// #32
  43e4ec:	mov	x1, x24
  43e4f0:	bl	404080 <fputc@plt>
  43e4f4:	subs	x22, x22, #0x1
  43e4f8:	b.ne	43e4e8 <argp_parse@@Base+0x3e3c>  // b.any
  43e4fc:	mov	w0, w27
  43e500:	mov	x1, x24
  43e504:	bl	404080 <fputc@plt>
  43e508:	mov	x1, x19
  43e50c:	add	x1, x1, x26
  43e510:	sxtw	x26, w25
  43e514:	cbz	x24, 43e554 <argp_parse@@Base+0x3ea8>
  43e518:	lsl	x8, x25, #32
  43e51c:	cbz	x8, 43e550 <argp_parse@@Base+0x3ea4>
  43e520:	mov	x22, x20
  43e524:	mov	x19, x1
  43e528:	mov	x20, xzr
  43e52c:	mov	w0, #0x30                  	// #48
  43e530:	mov	x1, x24
  43e534:	bl	404080 <fputc@plt>
  43e538:	add	x20, x20, #0x1
  43e53c:	cmp	x20, x26
  43e540:	b.cc	43e52c <argp_parse@@Base+0x3e80>  // b.lo, b.ul, b.last
  43e544:	mov	x1, x19
  43e548:	mov	x20, x22
  43e54c:	b	43e554 <argp_parse@@Base+0x3ea8>
  43e550:	mov	x26, xzr
  43e554:	mov	w22, wzr
  43e558:	mov	w8, wzr
  43e55c:	add	x1, x1, x26
  43e560:	b	43e410 <argp_parse@@Base+0x3d64>
  43e564:	cbz	w14, 43e5b0 <argp_parse@@Base+0x3f04>
  43e568:	mov	w13, #0x64                  	// #100
  43e56c:	mov	w20, #0x6                   	// #6
  43e570:	mov	w12, #0x1                   	// #1
  43e574:	madd	w10, w10, w13, w14
  43e578:	mov	w13, #0x4                   	// #4
  43e57c:	b	43ddb4 <argp_parse@@Base+0x3708>
  43e580:	cbz	x21, 43e598 <argp_parse@@Base+0x3eec>
  43e584:	mov	w0, #0x20                  	// #32
  43e588:	mov	x1, x24
  43e58c:	bl	404080 <fputc@plt>
  43e590:	subs	x21, x21, #0x1
  43e594:	b.ne	43e584 <argp_parse@@Base+0x3ed8>  // b.any
  43e598:	ldrb	w0, [x23]
  43e59c:	mov	x1, x24
  43e5a0:	bl	404080 <fputc@plt>
  43e5a4:	mov	x1, x19
  43e5a8:	add	x1, x1, x20
  43e5ac:	b	43d238 <argp_parse@@Base+0x2b8c>
  43e5b0:	mov	w13, wzr
  43e5b4:	mov	w20, #0x3                   	// #3
  43e5b8:	mov	w12, #0x1                   	// #1
  43e5bc:	b	43ddb4 <argp_parse@@Base+0x3708>
  43e5c0:	mov	x1, xzr
  43e5c4:	mov	x0, x1
  43e5c8:	add	sp, sp, #0x490
  43e5cc:	ldp	x20, x19, [sp, #80]
  43e5d0:	ldp	x22, x21, [sp, #64]
  43e5d4:	ldp	x24, x23, [sp, #48]
  43e5d8:	ldp	x26, x25, [sp, #32]
  43e5dc:	ldp	x28, x27, [sp, #16]
  43e5e0:	ldp	x29, x30, [sp], #96
  43e5e4:	ret
  43e5e8:	stp	x29, x30, [sp, #-48]!
  43e5ec:	stp	x22, x21, [sp, #16]
  43e5f0:	stp	x20, x19, [sp, #32]
  43e5f4:	mov	x29, sp
  43e5f8:	cbz	x2, 43e63c <argp_parse@@Base+0x3f90>
  43e5fc:	mov	x20, x2
  43e600:	mov	x21, x1
  43e604:	mov	w22, w0
  43e608:	mov	x19, xzr
  43e60c:	mov	w0, w22
  43e610:	mov	x1, x21
  43e614:	mov	x2, x20
  43e618:	bl	4493a8 <argp_parse@@Base+0xecfc>
  43e61c:	cmn	x0, #0x1
  43e620:	b.eq	43e650 <argp_parse@@Base+0x3fa4>  // b.none
  43e624:	cbz	x0, 43e644 <argp_parse@@Base+0x3f98>
  43e628:	add	x19, x0, x19
  43e62c:	subs	x20, x20, x0
  43e630:	add	x21, x21, x0
  43e634:	b.ne	43e60c <argp_parse@@Base+0x3f60>  // b.any
  43e638:	b	43e650 <argp_parse@@Base+0x3fa4>
  43e63c:	mov	x19, xzr
  43e640:	b	43e650 <argp_parse@@Base+0x3fa4>
  43e644:	bl	4049c0 <__errno_location@plt>
  43e648:	mov	w8, #0x1c                  	// #28
  43e64c:	str	w8, [x0]
  43e650:	mov	x0, x19
  43e654:	ldp	x20, x19, [sp, #32]
  43e658:	ldp	x22, x21, [sp, #16]
  43e65c:	ldp	x29, x30, [sp], #48
  43e660:	ret
  43e664:	mov	x1, x0
  43e668:	mov	w0, wzr
  43e66c:	b	4040a0 <clock_gettime@plt>
  43e670:	sub	sp, sp, #0x20
  43e674:	mov	x1, sp
  43e678:	mov	w0, wzr
  43e67c:	stp	x29, x30, [sp, #16]
  43e680:	add	x29, sp, #0x10
  43e684:	bl	4040a0 <clock_gettime@plt>
  43e688:	ldp	x0, x1, [sp]
  43e68c:	ldp	x29, x30, [sp, #16]
  43e690:	add	sp, sp, #0x20
  43e694:	ret
  43e698:	ldr	x0, [x0, #16]
  43e69c:	ret
  43e6a0:	ldr	x0, [x0, #24]
  43e6a4:	ret
  43e6a8:	ldr	x0, [x0, #32]
  43e6ac:	ret
  43e6b0:	ldp	x8, x9, [x0]
  43e6b4:	cmp	x8, x9
  43e6b8:	b.cs	43e6f8 <argp_parse@@Base+0x404c>  // b.hs, b.nlast
  43e6bc:	mov	x0, xzr
  43e6c0:	b	43e6d0 <argp_parse@@Base+0x4024>
  43e6c4:	add	x8, x8, #0x10
  43e6c8:	cmp	x8, x9
  43e6cc:	b.cs	43e6fc <argp_parse@@Base+0x4050>  // b.hs, b.nlast
  43e6d0:	ldr	x10, [x8]
  43e6d4:	cbz	x10, 43e6c4 <argp_parse@@Base+0x4018>
  43e6d8:	mov	x10, xzr
  43e6dc:	mov	x11, x8
  43e6e0:	ldr	x11, [x11, #8]
  43e6e4:	add	x10, x10, #0x1
  43e6e8:	cbnz	x11, 43e6e0 <argp_parse@@Base+0x4034>
  43e6ec:	cmp	x10, x0
  43e6f0:	csel	x0, x10, x0, hi  // hi = pmore
  43e6f4:	b	43e6c4 <argp_parse@@Base+0x4018>
  43e6f8:	mov	x0, xzr
  43e6fc:	ret
  43e700:	ldp	x9, x10, [x0]
  43e704:	cmp	x9, x10
  43e708:	b.cs	43e744 <argp_parse@@Base+0x4098>  // b.hs, b.nlast
  43e70c:	mov	x8, xzr
  43e710:	mov	x11, xzr
  43e714:	b	43e724 <argp_parse@@Base+0x4078>
  43e718:	add	x9, x9, #0x10
  43e71c:	cmp	x9, x10
  43e720:	b.cs	43e74c <argp_parse@@Base+0x40a0>  // b.hs, b.nlast
  43e724:	ldr	x12, [x9]
  43e728:	cbz	x12, 43e718 <argp_parse@@Base+0x406c>
  43e72c:	mov	x12, x9
  43e730:	ldr	x12, [x12, #8]
  43e734:	add	x8, x8, #0x1
  43e738:	cbnz	x12, 43e730 <argp_parse@@Base+0x4084>
  43e73c:	add	x11, x11, #0x1
  43e740:	b	43e718 <argp_parse@@Base+0x406c>
  43e744:	mov	x11, xzr
  43e748:	mov	x8, xzr
  43e74c:	ldr	x9, [x0, #24]
  43e750:	cmp	x11, x9
  43e754:	b.ne	43e76c <argp_parse@@Base+0x40c0>  // b.any
  43e758:	ldr	x9, [x0, #32]
  43e75c:	cmp	x8, x9
  43e760:	b.ne	43e76c <argp_parse@@Base+0x40c0>  // b.any
  43e764:	mov	w0, #0x1                   	// #1
  43e768:	ret
  43e76c:	mov	w0, wzr
  43e770:	ret
  43e774:	stp	x29, x30, [sp, #-48]!
  43e778:	stp	x22, x21, [sp, #16]
  43e77c:	stp	x20, x19, [sp, #32]
  43e780:	ldp	x8, x9, [x0]
  43e784:	ldp	x20, x3, [x0, #24]
  43e788:	ldr	x22, [x0, #16]
  43e78c:	mov	x19, x1
  43e790:	cmp	x8, x9
  43e794:	mov	x21, xzr
  43e798:	mov	x29, sp
  43e79c:	b.cc	43e82c <argp_parse@@Base+0x4180>  // b.lo, b.ul, b.last
  43e7a0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43e7a4:	add	x2, x2, #0xcd6
  43e7a8:	mov	w1, #0x1                   	// #1
  43e7ac:	mov	x0, x19
  43e7b0:	bl	404600 <__fprintf_chk@plt>
  43e7b4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43e7b8:	add	x2, x2, #0xcee
  43e7bc:	mov	w1, #0x1                   	// #1
  43e7c0:	mov	x0, x19
  43e7c4:	mov	x3, x22
  43e7c8:	bl	404600 <__fprintf_chk@plt>
  43e7cc:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  43e7d0:	ucvtf	d0, x20
  43e7d4:	fmov	d1, x8
  43e7d8:	fmul	d0, d0, d1
  43e7dc:	ucvtf	d1, x22
  43e7e0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43e7e4:	fdiv	d0, d0, d1
  43e7e8:	add	x2, x2, #0xd06
  43e7ec:	mov	w1, #0x1                   	// #1
  43e7f0:	mov	x0, x19
  43e7f4:	mov	x3, x20
  43e7f8:	bl	404600 <__fprintf_chk@plt>
  43e7fc:	mov	x0, x19
  43e800:	mov	x3, x21
  43e804:	ldp	x20, x19, [sp, #32]
  43e808:	ldp	x22, x21, [sp, #16]
  43e80c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43e810:	add	x2, x2, #0xd27
  43e814:	mov	w1, #0x1                   	// #1
  43e818:	ldp	x29, x30, [sp], #48
  43e81c:	b	404600 <__fprintf_chk@plt>
  43e820:	add	x8, x8, #0x10
  43e824:	cmp	x8, x9
  43e828:	b.cs	43e7a0 <argp_parse@@Base+0x40f4>  // b.hs, b.nlast
  43e82c:	ldr	x10, [x8]
  43e830:	cbz	x10, 43e820 <argp_parse@@Base+0x4174>
  43e834:	mov	x10, xzr
  43e838:	mov	x11, x8
  43e83c:	ldr	x11, [x11, #8]
  43e840:	add	x10, x10, #0x1
  43e844:	cbnz	x11, 43e83c <argp_parse@@Base+0x4190>
  43e848:	cmp	x10, x21
  43e84c:	csel	x21, x10, x21, hi  // hi = pmore
  43e850:	b	43e820 <argp_parse@@Base+0x4174>
  43e854:	stp	x29, x30, [sp, #-48]!
  43e858:	stp	x20, x19, [sp, #32]
  43e85c:	ldr	x8, [x0, #16]
  43e860:	ldr	x9, [x0, #48]
  43e864:	mov	x19, x0
  43e868:	mov	x20, x1
  43e86c:	mov	x0, x1
  43e870:	mov	x1, x8
  43e874:	str	x21, [sp, #16]
  43e878:	mov	x29, sp
  43e87c:	blr	x9
  43e880:	ldr	x8, [x19, #16]
  43e884:	cmp	x0, x8
  43e888:	b.cs	43e90c <argp_parse@@Base+0x4260>  // b.hs, b.nlast
  43e88c:	ldr	x8, [x19]
  43e890:	add	x21, x8, x0, lsl #4
  43e894:	ldr	x1, [x21]
  43e898:	mov	x0, xzr
  43e89c:	cbz	x1, 43e8d4 <argp_parse@@Base+0x4228>
  43e8a0:	cbz	x8, 43e8d4 <argp_parse@@Base+0x4228>
  43e8a4:	cmp	x1, x20
  43e8a8:	b.eq	43e8d0 <argp_parse@@Base+0x4224>  // b.none
  43e8ac:	ldr	x8, [x19, #56]
  43e8b0:	mov	x0, x20
  43e8b4:	blr	x8
  43e8b8:	tbnz	w0, #0, 43e8e4 <argp_parse@@Base+0x4238>
  43e8bc:	ldr	x21, [x21, #8]
  43e8c0:	cbz	x21, 43e8f8 <argp_parse@@Base+0x424c>
  43e8c4:	ldr	x1, [x21]
  43e8c8:	cmp	x1, x20
  43e8cc:	b.ne	43e8ac <argp_parse@@Base+0x4200>  // b.any
  43e8d0:	mov	x0, x20
  43e8d4:	ldp	x20, x19, [sp, #32]
  43e8d8:	ldr	x21, [sp, #16]
  43e8dc:	ldp	x29, x30, [sp], #48
  43e8e0:	ret
  43e8e4:	ldr	x0, [x21]
  43e8e8:	ldp	x20, x19, [sp, #32]
  43e8ec:	ldr	x21, [sp, #16]
  43e8f0:	ldp	x29, x30, [sp], #48
  43e8f4:	ret
  43e8f8:	mov	x0, xzr
  43e8fc:	ldp	x20, x19, [sp, #32]
  43e900:	ldr	x21, [sp, #16]
  43e904:	ldp	x29, x30, [sp], #48
  43e908:	ret
  43e90c:	bl	404560 <abort@plt>
  43e910:	stp	x29, x30, [sp, #-16]!
  43e914:	ldr	x8, [x0, #32]
  43e918:	mov	x29, sp
  43e91c:	cbz	x8, 43e93c <argp_parse@@Base+0x4290>
  43e920:	ldp	x8, x9, [x0]
  43e924:	cmp	x8, x9
  43e928:	b.cs	43e948 <argp_parse@@Base+0x429c>  // b.hs, b.nlast
  43e92c:	ldr	x0, [x8], #16
  43e930:	cbz	x0, 43e924 <argp_parse@@Base+0x4278>
  43e934:	ldp	x29, x30, [sp], #16
  43e938:	ret
  43e93c:	mov	x0, xzr
  43e940:	ldp	x29, x30, [sp], #16
  43e944:	ret
  43e948:	bl	404560 <abort@plt>
  43e94c:	stp	x29, x30, [sp, #-32]!
  43e950:	stp	x20, x19, [sp, #16]
  43e954:	ldr	x8, [x0, #16]
  43e958:	ldr	x9, [x0, #48]
  43e95c:	mov	x19, x0
  43e960:	mov	x20, x1
  43e964:	mov	x0, x1
  43e968:	mov	x1, x8
  43e96c:	mov	x29, sp
  43e970:	blr	x9
  43e974:	ldr	x8, [x19, #16]
  43e978:	cmp	x0, x8
  43e97c:	b.cs	43e9e0 <argp_parse@@Base+0x4334>  // b.hs, b.nlast
  43e980:	ldr	x8, [x19]
  43e984:	add	x9, x8, x0, lsl #4
  43e988:	ldp	x10, x9, [x9]
  43e98c:	cmp	x10, x20
  43e990:	b.eq	43e99c <argp_parse@@Base+0x42f0>  // b.none
  43e994:	cbnz	x9, 43e988 <argp_parse@@Base+0x42dc>
  43e998:	b	43e9b0 <argp_parse@@Base+0x4304>
  43e99c:	cbz	x9, 43e9b0 <argp_parse@@Base+0x4304>
  43e9a0:	ldr	x0, [x9]
  43e9a4:	ldp	x20, x19, [sp, #16]
  43e9a8:	ldp	x29, x30, [sp], #32
  43e9ac:	ret
  43e9b0:	ldr	x9, [x19, #8]
  43e9b4:	add	x8, x8, x0, lsl #4
  43e9b8:	add	x8, x8, #0x10
  43e9bc:	cmp	x8, x9
  43e9c0:	b.cs	43e9d0 <argp_parse@@Base+0x4324>  // b.hs, b.nlast
  43e9c4:	ldr	x0, [x8], #16
  43e9c8:	cbz	x0, 43e9bc <argp_parse@@Base+0x4310>
  43e9cc:	b	43e9a4 <argp_parse@@Base+0x42f8>
  43e9d0:	mov	x0, xzr
  43e9d4:	ldp	x20, x19, [sp, #16]
  43e9d8:	ldp	x29, x30, [sp], #32
  43e9dc:	ret
  43e9e0:	bl	404560 <abort@plt>
  43e9e4:	ldp	x9, x10, [x0]
  43e9e8:	cmp	x9, x10
  43e9ec:	b.cs	43ea58 <argp_parse@@Base+0x43ac>  // b.hs, b.nlast
  43e9f0:	mov	x11, xzr
  43e9f4:	ldr	x8, [x9]
  43e9f8:	cbz	x8, 43ea3c <argp_parse@@Base+0x4390>
  43e9fc:	cbz	x9, 43ea3c <argp_parse@@Base+0x4390>
  43ea00:	mov	x10, x9
  43ea04:	cmp	x11, x2
  43ea08:	b.cs	43ea60 <argp_parse@@Base+0x43b4>  // b.hs, b.nlast
  43ea0c:	ldr	x8, [x10]
  43ea10:	str	x8, [x1, x11, lsl #3]
  43ea14:	ldr	x10, [x10, #8]
  43ea18:	add	x8, x11, #0x1
  43ea1c:	mov	x11, x8
  43ea20:	cbnz	x10, 43ea04 <argp_parse@@Base+0x4358>
  43ea24:	ldr	x10, [x0, #8]
  43ea28:	add	x9, x9, #0x10
  43ea2c:	cmp	x9, x10
  43ea30:	mov	x11, x8
  43ea34:	b.cc	43e9f4 <argp_parse@@Base+0x4348>  // b.lo, b.ul, b.last
  43ea38:	b	43ea50 <argp_parse@@Base+0x43a4>
  43ea3c:	mov	x8, x11
  43ea40:	add	x9, x9, #0x10
  43ea44:	cmp	x9, x10
  43ea48:	mov	x11, x8
  43ea4c:	b.cc	43e9f4 <argp_parse@@Base+0x4348>  // b.lo, b.ul, b.last
  43ea50:	mov	x0, x8
  43ea54:	ret
  43ea58:	mov	x0, xzr
  43ea5c:	ret
  43ea60:	mov	x0, x11
  43ea64:	ret
  43ea68:	stp	x29, x30, [sp, #-64]!
  43ea6c:	stp	x24, x23, [sp, #16]
  43ea70:	stp	x22, x21, [sp, #32]
  43ea74:	stp	x20, x19, [sp, #48]
  43ea78:	ldp	x23, x8, [x0]
  43ea7c:	mov	x29, sp
  43ea80:	cmp	x23, x8
  43ea84:	b.cs	43ea9c <argp_parse@@Base+0x43f0>  // b.hs, b.nlast
  43ea88:	mov	x19, x2
  43ea8c:	mov	x20, x0
  43ea90:	mov	x21, x1
  43ea94:	mov	x22, xzr
  43ea98:	b	43eab4 <argp_parse@@Base+0x4408>
  43ea9c:	mov	x22, xzr
  43eaa0:	b	43eaec <argp_parse@@Base+0x4440>
  43eaa4:	ldr	x8, [x20, #8]
  43eaa8:	add	x23, x23, #0x10
  43eaac:	cmp	x23, x8
  43eab0:	b.cs	43eaec <argp_parse@@Base+0x4440>  // b.hs, b.nlast
  43eab4:	ldr	x0, [x23]
  43eab8:	cbz	x0, 43eaa8 <argp_parse@@Base+0x43fc>
  43eabc:	cbz	x23, 43eaa8 <argp_parse@@Base+0x43fc>
  43eac0:	mov	x1, x19
  43eac4:	blr	x21
  43eac8:	tbz	w0, #0, 43eaec <argp_parse@@Base+0x4440>
  43eacc:	mov	x24, x23
  43ead0:	ldr	x24, [x24, #8]
  43ead4:	add	x22, x22, #0x1
  43ead8:	cbz	x24, 43eaa4 <argp_parse@@Base+0x43f8>
  43eadc:	ldr	x0, [x24]
  43eae0:	mov	x1, x19
  43eae4:	blr	x21
  43eae8:	tbnz	w0, #0, 43ead0 <argp_parse@@Base+0x4424>
  43eaec:	mov	x0, x22
  43eaf0:	ldp	x20, x19, [sp, #48]
  43eaf4:	ldp	x22, x21, [sp, #32]
  43eaf8:	ldp	x24, x23, [sp, #16]
  43eafc:	ldp	x29, x30, [sp], #64
  43eb00:	ret
  43eb04:	ldrb	w9, [x0]
  43eb08:	cbz	w9, 43eb38 <argp_parse@@Base+0x448c>
  43eb0c:	mov	x8, x0
  43eb10:	mov	x0, xzr
  43eb14:	add	x8, x8, #0x1
  43eb18:	lsl	x10, x0, #5
  43eb1c:	sub	x10, x10, x0
  43eb20:	add	x10, x10, w9, uxtb
  43eb24:	ldrb	w9, [x8], #1
  43eb28:	udiv	x11, x10, x1
  43eb2c:	msub	x0, x11, x1, x10
  43eb30:	cbnz	w9, 43eb18 <argp_parse@@Base+0x446c>
  43eb34:	ret
  43eb38:	mov	x0, xzr
  43eb3c:	ret
  43eb40:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43eb44:	add	x8, x8, #0xd40
  43eb48:	ldr	w9, [x8, #16]
  43eb4c:	ldr	q0, [x8]
  43eb50:	str	w9, [x0, #16]
  43eb54:	str	q0, [x0]
  43eb58:	ret
  43eb5c:	stp	x29, x30, [sp, #-64]!
  43eb60:	adrp	x8, 43e000 <argp_parse@@Base+0x3954>
  43eb64:	add	x8, x8, #0xd44
  43eb68:	cmp	x2, #0x0
  43eb6c:	adrp	x9, 43e000 <argp_parse@@Base+0x3954>
  43eb70:	stp	x24, x23, [sp, #16]
  43eb74:	stp	x22, x21, [sp, #32]
  43eb78:	mov	x21, x0
  43eb7c:	add	x9, x9, #0xd54
  43eb80:	csel	x23, x8, x2, eq  // eq = none
  43eb84:	cmp	x3, #0x0
  43eb88:	mov	w0, #0x50                  	// #80
  43eb8c:	stp	x20, x19, [sp, #48]
  43eb90:	mov	x29, sp
  43eb94:	mov	x19, x4
  43eb98:	mov	x22, x1
  43eb9c:	csel	x24, x9, x3, eq  // eq = none
  43eba0:	bl	404210 <malloc@plt>
  43eba4:	mov	x20, x0
  43eba8:	cbz	x0, 43ed2c <argp_parse@@Base+0x4680>
  43ebac:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43ebb0:	add	x9, x9, #0xd40
  43ebb4:	cmp	x22, #0x0
  43ebb8:	csel	x8, x9, x22, eq  // eq = none
  43ebbc:	cmp	x8, x9
  43ebc0:	str	x8, [x20, #40]
  43ebc4:	b.eq	43ec48 <argp_parse@@Base+0x459c>  // b.none
  43ebc8:	ldr	s0, [x8, #8]
  43ebcc:	mov	w9, #0xcccd                	// #52429
  43ebd0:	movk	w9, #0x3dcc, lsl #16
  43ebd4:	fmov	s1, w9
  43ebd8:	fcmp	s0, s1
  43ebdc:	b.le	43ed20 <argp_parse@@Base+0x4674>
  43ebe0:	mov	w9, #0x6666                	// #26214
  43ebe4:	movk	w9, #0x3f66, lsl #16
  43ebe8:	fmov	s1, w9
  43ebec:	fcmp	s0, s1
  43ebf0:	b.pl	43ed20 <argp_parse@@Base+0x4674>  // b.nfrst
  43ebf4:	ldr	s1, [x8, #12]
  43ebf8:	mov	w9, #0xcccd                	// #52429
  43ebfc:	movk	w9, #0x3f8c, lsl #16
  43ec00:	fmov	s2, w9
  43ec04:	fcmp	s1, s2
  43ec08:	b.le	43ed20 <argp_parse@@Base+0x4674>
  43ec0c:	ldr	s1, [x8]
  43ec10:	fcmp	s1, #0.0
  43ec14:	b.lt	43ed20 <argp_parse@@Base+0x4674>  // b.tstop
  43ec18:	mov	w9, #0xcccd                	// #52429
  43ec1c:	movk	w9, #0x3dcc, lsl #16
  43ec20:	fmov	s2, w9
  43ec24:	fadd	s1, s1, s2
  43ec28:	fcmp	s1, s0
  43ec2c:	b.pl	43ed20 <argp_parse@@Base+0x4674>  // b.nfrst
  43ec30:	ldr	s0, [x8, #4]
  43ec34:	fmov	s2, #1.000000000000000000e+00
  43ec38:	fcmp	s0, s2
  43ec3c:	b.hi	43ed20 <argp_parse@@Base+0x4674>  // b.pmore
  43ec40:	fcmp	s1, s0
  43ec44:	b.pl	43ed20 <argp_parse@@Base+0x4674>  // b.nfrst
  43ec48:	ldrb	w9, [x8, #16]
  43ec4c:	cbnz	w9, 43ec70 <argp_parse@@Base+0x45c4>
  43ec50:	ldr	s0, [x8, #8]
  43ec54:	ucvtf	s1, x21
  43ec58:	mov	w8, #0x5f800000            	// #1602224128
  43ec5c:	fdiv	s0, s1, s0
  43ec60:	fmov	s1, w8
  43ec64:	fcmp	s0, s1
  43ec68:	b.ge	43ed20 <argp_parse@@Base+0x4674>  // b.tcont
  43ec6c:	fcvtzu	x21, s0
  43ec70:	cmp	x21, #0xa
  43ec74:	mov	w8, #0xa                   	// #10
  43ec78:	csel	x8, x21, x8, hi  // hi = pmore
  43ec7c:	orr	x21, x8, #0x1
  43ec80:	cmn	x21, #0x1
  43ec84:	b.eq	43ed20 <argp_parse@@Base+0x4674>  // b.none
  43ec88:	cmp	x21, #0xa
  43ec8c:	b.cc	43ecc4 <argp_parse@@Base+0x4618>  // b.lo, b.ul, b.last
  43ec90:	mov	w9, #0xc                   	// #12
  43ec94:	mov	w10, #0x9                   	// #9
  43ec98:	mov	w8, #0x3                   	// #3
  43ec9c:	udiv	x11, x21, x8
  43eca0:	msub	x11, x11, x8, x21
  43eca4:	cbz	x11, 43ecc8 <argp_parse@@Base+0x461c>
  43eca8:	add	x10, x10, x9
  43ecac:	add	x10, x10, #0x4
  43ecb0:	add	x8, x8, #0x2
  43ecb4:	cmp	x10, x21
  43ecb8:	add	x9, x9, #0x8
  43ecbc:	b.cc	43ec9c <argp_parse@@Base+0x45f0>  // b.lo, b.ul, b.last
  43ecc0:	b	43ecc8 <argp_parse@@Base+0x461c>
  43ecc4:	mov	w8, #0x3                   	// #3
  43ecc8:	udiv	x9, x21, x8
  43eccc:	msub	x8, x9, x8, x21
  43ecd0:	cbnz	x8, 43ece4 <argp_parse@@Base+0x4638>
  43ecd4:	add	x21, x21, #0x2
  43ecd8:	cmn	x21, #0x1
  43ecdc:	b.ne	43ec88 <argp_parse@@Base+0x45dc>  // b.any
  43ece0:	b	43ed20 <argp_parse@@Base+0x4674>
  43ece4:	lsr	x8, x21, #60
  43ece8:	cbnz	x8, 43ed20 <argp_parse@@Base+0x4674>
  43ecec:	str	x21, [x20, #16]
  43ecf0:	cbz	x21, 43ed20 <argp_parse@@Base+0x4674>
  43ecf4:	mov	w1, #0x10                  	// #16
  43ecf8:	mov	x0, x21
  43ecfc:	bl	4043d0 <calloc@plt>
  43ed00:	str	x0, [x20]
  43ed04:	cbz	x0, 43ed20 <argp_parse@@Base+0x4674>
  43ed08:	add	x8, x0, x21, lsl #4
  43ed0c:	stp	xzr, xzr, [x20, #24]
  43ed10:	stp	x23, x24, [x20, #48]
  43ed14:	str	x8, [x20, #8]
  43ed18:	stp	x19, xzr, [x20, #64]
  43ed1c:	b	43ed2c <argp_parse@@Base+0x4680>
  43ed20:	mov	x0, x20
  43ed24:	bl	4046b0 <free@plt>
  43ed28:	mov	x20, xzr
  43ed2c:	mov	x0, x20
  43ed30:	ldp	x20, x19, [sp, #48]
  43ed34:	ldp	x22, x21, [sp, #32]
  43ed38:	ldp	x24, x23, [sp, #16]
  43ed3c:	ldp	x29, x30, [sp], #64
  43ed40:	ret
  43ed44:	ror	x8, x0, #3
  43ed48:	udiv	x9, x8, x1
  43ed4c:	msub	x0, x9, x1, x8
  43ed50:	ret
  43ed54:	cmp	x0, x1
  43ed58:	cset	w0, eq  // eq = none
  43ed5c:	ret
  43ed60:	stp	x29, x30, [sp, #-48]!
  43ed64:	str	x21, [sp, #16]
  43ed68:	stp	x20, x19, [sp, #32]
  43ed6c:	ldp	x20, x8, [x0]
  43ed70:	mov	x19, x0
  43ed74:	mov	x29, sp
  43ed78:	b	43ed88 <argp_parse@@Base+0x46dc>
  43ed7c:	stp	xzr, xzr, [x20]
  43ed80:	ldr	x8, [x19, #8]
  43ed84:	add	x20, x20, #0x10
  43ed88:	cmp	x20, x8
  43ed8c:	b.cs	43edf4 <argp_parse@@Base+0x4748>  // b.hs, b.nlast
  43ed90:	ldr	x9, [x20]
  43ed94:	cbz	x9, 43ed84 <argp_parse@@Base+0x46d8>
  43ed98:	ldr	x8, [x19, #64]
  43ed9c:	ldr	x21, [x20, #8]
  43eda0:	cmp	x8, #0x0
  43eda4:	cset	w9, ne  // ne = any
  43eda8:	cbnz	x21, 43ede0 <argp_parse@@Base+0x4734>
  43edac:	cbz	w9, 43ed7c <argp_parse@@Base+0x46d0>
  43edb0:	ldr	x0, [x20]
  43edb4:	blr	x8
  43edb8:	b	43ed7c <argp_parse@@Base+0x46d0>
  43edbc:	str	xzr, [x21]
  43edc0:	ldr	x9, [x19, #72]
  43edc4:	ldr	x10, [x21, #8]
  43edc8:	cmp	x8, #0x0
  43edcc:	str	x9, [x21, #8]
  43edd0:	str	x21, [x19, #72]
  43edd4:	cset	w9, ne  // ne = any
  43edd8:	mov	x21, x10
  43eddc:	cbz	x10, 43edac <argp_parse@@Base+0x4700>
  43ede0:	tbz	w9, #0, 43edbc <argp_parse@@Base+0x4710>
  43ede4:	ldr	x0, [x21]
  43ede8:	blr	x8
  43edec:	ldr	x8, [x19, #64]
  43edf0:	b	43edbc <argp_parse@@Base+0x4710>
  43edf4:	stp	xzr, xzr, [x19, #24]
  43edf8:	ldp	x20, x19, [sp, #32]
  43edfc:	ldr	x21, [sp, #16]
  43ee00:	ldp	x29, x30, [sp], #48
  43ee04:	ret
  43ee08:	stp	x29, x30, [sp, #-48]!
  43ee0c:	stp	x20, x19, [sp, #32]
  43ee10:	ldr	x8, [x0, #64]
  43ee14:	mov	x19, x0
  43ee18:	str	x21, [sp, #16]
  43ee1c:	mov	x29, sp
  43ee20:	cbz	x8, 43ee78 <argp_parse@@Base+0x47cc>
  43ee24:	ldr	x8, [x19, #32]
  43ee28:	cbz	x8, 43ee78 <argp_parse@@Base+0x47cc>
  43ee2c:	ldp	x20, x8, [x19]
  43ee30:	b	43ee3c <argp_parse@@Base+0x4790>
  43ee34:	ldr	x8, [x19, #8]
  43ee38:	add	x20, x20, #0x10
  43ee3c:	cmp	x20, x8
  43ee40:	b.cs	43ee78 <argp_parse@@Base+0x47cc>  // b.hs, b.nlast
  43ee44:	ldr	x0, [x20]
  43ee48:	cbz	x0, 43ee38 <argp_parse@@Base+0x478c>
  43ee4c:	cbz	x20, 43ee38 <argp_parse@@Base+0x478c>
  43ee50:	ldr	x8, [x19, #64]
  43ee54:	blr	x8
  43ee58:	ldr	x21, [x20, #8]
  43ee5c:	cbz	x21, 43ee34 <argp_parse@@Base+0x4788>
  43ee60:	ldr	x0, [x21]
  43ee64:	ldr	x8, [x19, #64]
  43ee68:	blr	x8
  43ee6c:	ldr	x21, [x21, #8]
  43ee70:	cbnz	x21, 43ee60 <argp_parse@@Base+0x47b4>
  43ee74:	b	43ee34 <argp_parse@@Base+0x4788>
  43ee78:	ldp	x20, x8, [x19]
  43ee7c:	b	43ee84 <argp_parse@@Base+0x47d8>
  43ee80:	add	x20, x20, #0x10
  43ee84:	cmp	x20, x8
  43ee88:	b.cs	43eeac <argp_parse@@Base+0x4800>  // b.hs, b.nlast
  43ee8c:	ldr	x0, [x20, #8]
  43ee90:	cbz	x0, 43ee80 <argp_parse@@Base+0x47d4>
  43ee94:	ldr	x21, [x0, #8]
  43ee98:	bl	4046b0 <free@plt>
  43ee9c:	mov	x0, x21
  43eea0:	cbnz	x21, 43ee94 <argp_parse@@Base+0x47e8>
  43eea4:	ldr	x8, [x19, #8]
  43eea8:	b	43ee80 <argp_parse@@Base+0x47d4>
  43eeac:	ldr	x0, [x19, #72]
  43eeb0:	cbz	x0, 43eec4 <argp_parse@@Base+0x4818>
  43eeb4:	ldr	x20, [x0, #8]
  43eeb8:	bl	4046b0 <free@plt>
  43eebc:	mov	x0, x20
  43eec0:	cbnz	x20, 43eeb4 <argp_parse@@Base+0x4808>
  43eec4:	ldr	x0, [x19]
  43eec8:	bl	4046b0 <free@plt>
  43eecc:	mov	x0, x19
  43eed0:	ldp	x20, x19, [sp, #32]
  43eed4:	ldr	x21, [sp, #16]
  43eed8:	ldp	x29, x30, [sp], #48
  43eedc:	b	4046b0 <free@plt>
  43eee0:	sub	sp, sp, #0x90
  43eee4:	stp	x29, x30, [sp, #80]
  43eee8:	stp	x24, x23, [sp, #96]
  43eeec:	stp	x22, x21, [sp, #112]
  43eef0:	stp	x20, x19, [sp, #128]
  43eef4:	ldr	x21, [x0, #40]
  43eef8:	mov	x19, x0
  43eefc:	add	x29, sp, #0x50
  43ef00:	ldrb	w8, [x21, #16]
  43ef04:	cbnz	w8, 43ef28 <argp_parse@@Base+0x487c>
  43ef08:	ldr	s0, [x21, #8]
  43ef0c:	ucvtf	s1, x1
  43ef10:	mov	w8, #0x5f800000            	// #1602224128
  43ef14:	fdiv	s0, s1, s0
  43ef18:	fmov	s1, w8
  43ef1c:	fcmp	s0, s1
  43ef20:	b.ge	43efac <argp_parse@@Base+0x4900>  // b.tcont
  43ef24:	fcvtzu	x1, s0
  43ef28:	cmp	x1, #0xa
  43ef2c:	mov	w8, #0xa                   	// #10
  43ef30:	csel	x8, x1, x8, hi  // hi = pmore
  43ef34:	orr	x20, x8, #0x1
  43ef38:	cmn	x20, #0x1
  43ef3c:	b.eq	43efac <argp_parse@@Base+0x4900>  // b.none
  43ef40:	cmp	x20, #0xa
  43ef44:	b.cc	43ef7c <argp_parse@@Base+0x48d0>  // b.lo, b.ul, b.last
  43ef48:	mov	w9, #0xc                   	// #12
  43ef4c:	mov	w10, #0x9                   	// #9
  43ef50:	mov	w8, #0x3                   	// #3
  43ef54:	udiv	x11, x20, x8
  43ef58:	msub	x11, x11, x8, x20
  43ef5c:	cbz	x11, 43ef80 <argp_parse@@Base+0x48d4>
  43ef60:	add	x10, x10, x9
  43ef64:	add	x10, x10, #0x4
  43ef68:	add	x8, x8, #0x2
  43ef6c:	cmp	x10, x20
  43ef70:	add	x9, x9, #0x8
  43ef74:	b.cc	43ef54 <argp_parse@@Base+0x48a8>  // b.lo, b.ul, b.last
  43ef78:	b	43ef80 <argp_parse@@Base+0x48d4>
  43ef7c:	mov	w8, #0x3                   	// #3
  43ef80:	udiv	x9, x20, x8
  43ef84:	msub	x8, x9, x8, x20
  43ef88:	cbnz	x8, 43ef9c <argp_parse@@Base+0x48f0>
  43ef8c:	add	x20, x20, #0x2
  43ef90:	cmn	x20, #0x1
  43ef94:	b.ne	43ef40 <argp_parse@@Base+0x4894>  // b.any
  43ef98:	b	43efac <argp_parse@@Base+0x4900>
  43ef9c:	sub	x8, x20, #0x1
  43efa0:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  43efa4:	cmp	x8, x9
  43efa8:	b.ls	43efc8 <argp_parse@@Base+0x491c>  // b.plast
  43efac:	mov	w0, wzr
  43efb0:	ldp	x20, x19, [sp, #128]
  43efb4:	ldp	x22, x21, [sp, #112]
  43efb8:	ldp	x24, x23, [sp, #96]
  43efbc:	ldp	x29, x30, [sp, #80]
  43efc0:	add	sp, sp, #0x90
  43efc4:	ret
  43efc8:	ldr	x8, [x19, #16]
  43efcc:	cmp	x20, x8
  43efd0:	b.ne	43efdc <argp_parse@@Base+0x4930>  // b.any
  43efd4:	mov	w0, #0x1                   	// #1
  43efd8:	b	43efb0 <argp_parse@@Base+0x4904>
  43efdc:	mov	w1, #0x10                  	// #16
  43efe0:	mov	x0, x20
  43efe4:	bl	4043d0 <calloc@plt>
  43efe8:	str	x0, [sp]
  43efec:	cbz	x0, 43efb0 <argp_parse@@Base+0x4904>
  43eff0:	add	x8, x0, x20, lsl #4
  43eff4:	stp	xzr, xzr, [sp, #24]
  43eff8:	stp	x8, x20, [sp, #8]
  43effc:	str	x21, [sp, #40]
  43f000:	ldr	q0, [x19, #48]
  43f004:	mov	x0, sp
  43f008:	mov	x1, x19
  43f00c:	mov	w2, wzr
  43f010:	str	q0, [sp, #48]
  43f014:	ldr	q0, [x19, #64]
  43f018:	str	q0, [sp, #64]
  43f01c:	bl	43f110 <argp_parse@@Base+0x4a64>
  43f020:	tbz	w0, #0, 43f04c <argp_parse@@Base+0x49a0>
  43f024:	ldr	x0, [x19]
  43f028:	bl	4046b0 <free@plt>
  43f02c:	ldr	q0, [sp]
  43f030:	mov	w0, #0x1                   	// #1
  43f034:	str	q0, [x19]
  43f038:	ldr	q0, [sp, #16]
  43f03c:	str	q0, [x19, #16]
  43f040:	ldr	x8, [sp, #72]
  43f044:	str	x8, [x19, #72]
  43f048:	b	43efb0 <argp_parse@@Base+0x4904>
  43f04c:	ldr	x8, [sp, #72]
  43f050:	add	x21, x19, #0x48
  43f054:	str	x8, [x21]
  43f058:	ldp	x22, x23, [sp]
  43f05c:	b	43f068 <argp_parse@@Base+0x49bc>
  43f060:	str	xzr, [x22, #8]
  43f064:	add	x22, x22, #0x10
  43f068:	cmp	x22, x23
  43f06c:	b.cs	43f0ec <argp_parse@@Base+0x4a40>  // b.hs, b.nlast
  43f070:	ldr	x8, [x22]
  43f074:	cbz	x8, 43f064 <argp_parse@@Base+0x49b8>
  43f078:	ldr	x24, [x22, #8]
  43f07c:	cbz	x24, 43f060 <argp_parse@@Base+0x49b4>
  43f080:	ldr	x1, [x19, #16]
  43f084:	b	43f0b4 <argp_parse@@Base+0x4a08>
  43f088:	str	x20, [x9]
  43f08c:	ldr	x9, [x19, #24]
  43f090:	add	x9, x9, #0x1
  43f094:	str	x9, [x19, #24]
  43f098:	mov	x9, x21
  43f09c:	str	xzr, [x24]
  43f0a0:	ldr	x10, [x9]
  43f0a4:	str	x10, [x24, #8]
  43f0a8:	str	x24, [x9]
  43f0ac:	mov	x24, x8
  43f0b0:	cbz	x8, 43f060 <argp_parse@@Base+0x49b4>
  43f0b4:	ldr	x20, [x24]
  43f0b8:	ldr	x8, [x19, #48]
  43f0bc:	mov	x0, x20
  43f0c0:	blr	x8
  43f0c4:	ldr	x1, [x19, #16]
  43f0c8:	cmp	x0, x1
  43f0cc:	b.cs	43f10c <argp_parse@@Base+0x4a60>  // b.hs, b.nlast
  43f0d0:	ldr	x8, [x19]
  43f0d4:	add	x9, x8, x0, lsl #4
  43f0d8:	ldr	x10, [x9]
  43f0dc:	ldr	x8, [x24, #8]
  43f0e0:	cbz	x10, 43f088 <argp_parse@@Base+0x49dc>
  43f0e4:	add	x9, x9, #0x8
  43f0e8:	b	43f0a0 <argp_parse@@Base+0x49f4>
  43f0ec:	mov	x1, sp
  43f0f0:	mov	x0, x19
  43f0f4:	mov	w2, wzr
  43f0f8:	bl	43f110 <argp_parse@@Base+0x4a64>
  43f0fc:	tbz	w0, #0, 43f10c <argp_parse@@Base+0x4a60>
  43f100:	ldr	x0, [sp]
  43f104:	bl	4046b0 <free@plt>
  43f108:	b	43efac <argp_parse@@Base+0x4900>
  43f10c:	bl	404560 <abort@plt>
  43f110:	stp	x29, x30, [sp, #-80]!
  43f114:	str	x25, [sp, #16]
  43f118:	stp	x24, x23, [sp, #32]
  43f11c:	stp	x22, x21, [sp, #48]
  43f120:	stp	x20, x19, [sp, #64]
  43f124:	ldp	x23, x8, [x1]
  43f128:	mov	x29, sp
  43f12c:	cmp	x23, x8
  43f130:	b.cs	43f2f0 <argp_parse@@Base+0x4c44>  // b.hs, b.nlast
  43f134:	mov	x19, x1
  43f138:	mov	x20, x0
  43f13c:	add	x24, x0, #0x48
  43f140:	tbz	w2, #0, 43f208 <argp_parse@@Base+0x4b5c>
  43f144:	b	43f15c <argp_parse@@Base+0x4ab0>
  43f148:	ldr	x8, [x19, #8]
  43f14c:	str	xzr, [x23, #8]
  43f150:	add	x23, x23, #0x10
  43f154:	cmp	x23, x8
  43f158:	b.cs	43f2f0 <argp_parse@@Base+0x4c44>  // b.hs, b.nlast
  43f15c:	ldr	x9, [x23]
  43f160:	cbz	x9, 43f150 <argp_parse@@Base+0x4aa4>
  43f164:	ldr	x22, [x23, #8]
  43f168:	cbz	x22, 43f14c <argp_parse@@Base+0x4aa0>
  43f16c:	ldr	x1, [x20, #16]
  43f170:	b	43f1a0 <argp_parse@@Base+0x4af4>
  43f174:	str	x21, [x9]
  43f178:	ldr	x9, [x20, #24]
  43f17c:	add	x9, x9, #0x1
  43f180:	str	x9, [x20, #24]
  43f184:	mov	x9, x24
  43f188:	str	xzr, [x22]
  43f18c:	ldr	x10, [x9]
  43f190:	str	x10, [x22, #8]
  43f194:	str	x22, [x9]
  43f198:	mov	x22, x8
  43f19c:	cbz	x8, 43f148 <argp_parse@@Base+0x4a9c>
  43f1a0:	ldr	x21, [x22]
  43f1a4:	ldr	x8, [x20, #48]
  43f1a8:	mov	x0, x21
  43f1ac:	blr	x8
  43f1b0:	ldr	x1, [x20, #16]
  43f1b4:	cmp	x0, x1
  43f1b8:	b.cs	43f30c <argp_parse@@Base+0x4c60>  // b.hs, b.nlast
  43f1bc:	ldr	x8, [x20]
  43f1c0:	add	x9, x8, x0, lsl #4
  43f1c4:	ldr	x10, [x9]
  43f1c8:	ldr	x8, [x22, #8]
  43f1cc:	cbz	x10, 43f174 <argp_parse@@Base+0x4ac8>
  43f1d0:	add	x9, x9, #0x8
  43f1d4:	b	43f18c <argp_parse@@Base+0x4ae0>
  43f1d8:	str	x21, [x8]
  43f1dc:	ldr	x8, [x20, #24]
  43f1e0:	add	x8, x8, #0x1
  43f1e4:	str	x8, [x20, #24]
  43f1e8:	str	xzr, [x23]
  43f1ec:	ldr	x9, [x19, #24]
  43f1f0:	ldr	x8, [x19, #8]
  43f1f4:	sub	x9, x9, #0x1
  43f1f8:	str	x9, [x19, #24]
  43f1fc:	add	x23, x23, #0x10
  43f200:	cmp	x23, x8
  43f204:	b.cs	43f2f0 <argp_parse@@Base+0x4c44>  // b.hs, b.nlast
  43f208:	ldr	x21, [x23]
  43f20c:	cbz	x21, 43f1fc <argp_parse@@Base+0x4b50>
  43f210:	ldr	x22, [x23, #8]
  43f214:	ldr	x1, [x20, #16]
  43f218:	cbnz	x22, 43f238 <argp_parse@@Base+0x4b8c>
  43f21c:	b	43f288 <argp_parse@@Base+0x4bdc>
  43f220:	add	x9, x9, #0x8
  43f224:	ldr	x10, [x9]
  43f228:	str	x10, [x22, #8]
  43f22c:	str	x22, [x9]
  43f230:	mov	x22, x8
  43f234:	cbz	x8, 43f284 <argp_parse@@Base+0x4bd8>
  43f238:	ldr	x21, [x22]
  43f23c:	ldr	x8, [x20, #48]
  43f240:	mov	x0, x21
  43f244:	blr	x8
  43f248:	ldr	x1, [x20, #16]
  43f24c:	cmp	x0, x1
  43f250:	b.cs	43f30c <argp_parse@@Base+0x4c60>  // b.hs, b.nlast
  43f254:	ldr	x8, [x20]
  43f258:	add	x9, x8, x0, lsl #4
  43f25c:	ldr	x10, [x9]
  43f260:	ldr	x8, [x22, #8]
  43f264:	cbnz	x10, 43f220 <argp_parse@@Base+0x4b74>
  43f268:	str	x21, [x9]
  43f26c:	ldr	x9, [x20, #24]
  43f270:	add	x9, x9, #0x1
  43f274:	str	x9, [x20, #24]
  43f278:	mov	x9, x24
  43f27c:	str	xzr, [x22]
  43f280:	b	43f224 <argp_parse@@Base+0x4b78>
  43f284:	ldr	x21, [x23]
  43f288:	str	xzr, [x23, #8]
  43f28c:	ldr	x8, [x20, #48]
  43f290:	mov	x0, x21
  43f294:	blr	x8
  43f298:	ldr	x8, [x20, #16]
  43f29c:	cmp	x0, x8
  43f2a0:	b.cs	43f30c <argp_parse@@Base+0x4c60>  // b.hs, b.nlast
  43f2a4:	ldr	x25, [x20]
  43f2a8:	mov	x22, x0
  43f2ac:	add	x8, x25, x0, lsl #4
  43f2b0:	ldr	x9, [x8]
  43f2b4:	cbz	x9, 43f1d8 <argp_parse@@Base+0x4b2c>
  43f2b8:	ldr	x0, [x24]
  43f2bc:	cbz	x0, 43f2cc <argp_parse@@Base+0x4c20>
  43f2c0:	ldr	x8, [x0, #8]
  43f2c4:	str	x8, [x24]
  43f2c8:	b	43f2d8 <argp_parse@@Base+0x4c2c>
  43f2cc:	mov	w0, #0x10                  	// #16
  43f2d0:	bl	404210 <malloc@plt>
  43f2d4:	cbz	x0, 43f2f4 <argp_parse@@Base+0x4c48>
  43f2d8:	str	x21, [x0]
  43f2dc:	add	x8, x25, x22, lsl #4
  43f2e0:	ldr	x9, [x8, #8]
  43f2e4:	str	x9, [x0, #8]
  43f2e8:	str	x0, [x8, #8]
  43f2ec:	b	43f1e8 <argp_parse@@Base+0x4b3c>
  43f2f0:	mov	w0, #0x1                   	// #1
  43f2f4:	ldp	x20, x19, [sp, #64]
  43f2f8:	ldp	x22, x21, [sp, #48]
  43f2fc:	ldp	x24, x23, [sp, #32]
  43f300:	ldr	x25, [sp, #16]
  43f304:	ldp	x29, x30, [sp], #80
  43f308:	ret
  43f30c:	bl	404560 <abort@plt>
  43f310:	stp	x29, x30, [sp, #-80]!
  43f314:	str	x25, [sp, #16]
  43f318:	stp	x24, x23, [sp, #32]
  43f31c:	stp	x22, x21, [sp, #48]
  43f320:	stp	x20, x19, [sp, #64]
  43f324:	mov	x29, sp
  43f328:	cbz	x1, 43f5f4 <argp_parse@@Base+0x4f48>
  43f32c:	mov	x20, x1
  43f330:	ldr	x8, [x0, #48]
  43f334:	ldr	x1, [x0, #16]
  43f338:	mov	x19, x0
  43f33c:	mov	x0, x20
  43f340:	mov	x21, x2
  43f344:	blr	x8
  43f348:	ldr	x8, [x19, #16]
  43f34c:	cmp	x0, x8
  43f350:	b.cs	43f5f4 <argp_parse@@Base+0x4f48>  // b.hs, b.nlast
  43f354:	ldr	x25, [x19]
  43f358:	mov	x22, x0
  43f35c:	add	x23, x25, x0, lsl #4
  43f360:	ldr	x1, [x23]
  43f364:	cbz	x1, 43f38c <argp_parse@@Base+0x4ce0>
  43f368:	cmp	x1, x20
  43f36c:	b.eq	43f500 <argp_parse@@Base+0x4e54>  // b.none
  43f370:	ldr	x8, [x19, #56]
  43f374:	mov	x0, x20
  43f378:	blr	x8
  43f37c:	mov	x24, x23
  43f380:	tbz	w0, #0, 43f514 <argp_parse@@Base+0x4e68>
  43f384:	ldr	x8, [x24]
  43f388:	cbnz	x8, 43f504 <argp_parse@@Base+0x4e58>
  43f38c:	ldr	x8, [x19, #40]
  43f390:	ldp	x10, x9, [x19, #16]
  43f394:	ldr	s1, [x8, #8]
  43f398:	ucvtf	s0, x10
  43f39c:	ucvtf	s2, x9
  43f3a0:	fmul	s3, s1, s0
  43f3a4:	fcmp	s3, s2
  43f3a8:	b.pl	43f4e4 <argp_parse@@Base+0x4e38>  // b.nfrst
  43f3ac:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43f3b0:	add	x9, x9, #0xd40
  43f3b4:	cmp	x8, x9
  43f3b8:	b.eq	43f448 <argp_parse@@Base+0x4d9c>  // b.none
  43f3bc:	mov	w10, #0xcccd                	// #52429
  43f3c0:	movk	w10, #0x3dcc, lsl #16
  43f3c4:	fmov	s3, w10
  43f3c8:	fcmp	s1, s3
  43f3cc:	b.le	43f438 <argp_parse@@Base+0x4d8c>
  43f3d0:	mov	w10, #0x6666                	// #26214
  43f3d4:	movk	w10, #0x3f66, lsl #16
  43f3d8:	fmov	s3, w10
  43f3dc:	fcmp	s1, s3
  43f3e0:	b.pl	43f438 <argp_parse@@Base+0x4d8c>  // b.nfrst
  43f3e4:	ldr	s3, [x8, #12]
  43f3e8:	mov	w10, #0xcccd                	// #52429
  43f3ec:	movk	w10, #0x3f8c, lsl #16
  43f3f0:	fmov	s4, w10
  43f3f4:	fcmp	s3, s4
  43f3f8:	b.le	43f438 <argp_parse@@Base+0x4d8c>
  43f3fc:	ldr	s3, [x8]
  43f400:	fcmp	s3, #0.0
  43f404:	b.lt	43f438 <argp_parse@@Base+0x4d8c>  // b.tstop
  43f408:	mov	w10, #0xcccd                	// #52429
  43f40c:	movk	w10, #0x3dcc, lsl #16
  43f410:	fmov	s4, w10
  43f414:	fadd	s3, s3, s4
  43f418:	fcmp	s3, s1
  43f41c:	b.pl	43f438 <argp_parse@@Base+0x4d8c>  // b.nfrst
  43f420:	ldr	s4, [x8, #4]
  43f424:	fmov	s5, #1.000000000000000000e+00
  43f428:	fcmp	s4, s5
  43f42c:	b.hi	43f438 <argp_parse@@Base+0x4d8c>  // b.pmore
  43f430:	fcmp	s3, s4
  43f434:	b.mi	43f44c <argp_parse@@Base+0x4da0>  // b.first
  43f438:	mov	w8, #0xcccd                	// #52429
  43f43c:	movk	w8, #0x3f4c, lsl #16
  43f440:	fmov	s1, w8
  43f444:	str	x9, [x19, #40]
  43f448:	mov	x8, x9
  43f44c:	fmul	s3, s1, s0
  43f450:	fcmp	s3, s2
  43f454:	b.pl	43f4e4 <argp_parse@@Base+0x4e38>  // b.nfrst
  43f458:	ldr	s2, [x8, #12]
  43f45c:	ldrb	w8, [x8, #16]
  43f460:	fmul	s0, s2, s0
  43f464:	cmp	w8, #0x0
  43f468:	fmul	s1, s1, s0
  43f46c:	mov	w8, #0x5f800000            	// #1602224128
  43f470:	fcsel	s0, s1, s0, eq  // eq = none
  43f474:	fmov	s1, w8
  43f478:	fcmp	s0, s1
  43f47c:	b.ge	43f590 <argp_parse@@Base+0x4ee4>  // b.tcont
  43f480:	fcvtzu	x1, s0
  43f484:	mov	x0, x19
  43f488:	bl	43eee0 <argp_parse@@Base+0x4834>
  43f48c:	tbz	w0, #0, 43f590 <argp_parse@@Base+0x4ee4>
  43f490:	ldr	x8, [x19, #48]
  43f494:	ldr	x1, [x19, #16]
  43f498:	mov	x0, x20
  43f49c:	blr	x8
  43f4a0:	ldr	x8, [x19, #16]
  43f4a4:	cmp	x0, x8
  43f4a8:	b.cs	43f5f4 <argp_parse@@Base+0x4f48>  // b.hs, b.nlast
  43f4ac:	ldr	x22, [x19]
  43f4b0:	mov	x21, x0
  43f4b4:	add	x23, x22, x0, lsl #4
  43f4b8:	ldr	x1, [x23]
  43f4bc:	cbz	x1, 43f4e4 <argp_parse@@Base+0x4e38>
  43f4c0:	cmp	x1, x20
  43f4c4:	mov	x8, x20
  43f4c8:	b.eq	43f4e0 <argp_parse@@Base+0x4e34>  // b.none
  43f4cc:	ldr	x8, [x19, #56]
  43f4d0:	mov	x0, x20
  43f4d4:	blr	x8
  43f4d8:	tbz	w0, #0, 43f5b8 <argp_parse@@Base+0x4f0c>
  43f4dc:	ldr	x8, [x23]
  43f4e0:	cbnz	x8, 43f5f4 <argp_parse@@Base+0x4f48>
  43f4e4:	ldr	x8, [x23]
  43f4e8:	cbz	x8, 43f544 <argp_parse@@Base+0x4e98>
  43f4ec:	ldr	x0, [x19, #72]
  43f4f0:	cbz	x0, 43f560 <argp_parse@@Base+0x4eb4>
  43f4f4:	ldr	x8, [x0, #8]
  43f4f8:	str	x8, [x19, #72]
  43f4fc:	b	43f56c <argp_parse@@Base+0x4ec0>
  43f500:	mov	x8, x20
  43f504:	mov	w0, wzr
  43f508:	cbz	x21, 43f594 <argp_parse@@Base+0x4ee8>
  43f50c:	str	x8, [x21]
  43f510:	b	43f594 <argp_parse@@Base+0x4ee8>
  43f514:	add	x24, x25, x22, lsl #4
  43f518:	ldr	x8, [x24, #8]!
  43f51c:	cbz	x8, 43f38c <argp_parse@@Base+0x4ce0>
  43f520:	ldr	x1, [x8]
  43f524:	cmp	x1, x20
  43f528:	b.eq	43f5ac <argp_parse@@Base+0x4f00>  // b.none
  43f52c:	ldr	x8, [x19, #56]
  43f530:	mov	x0, x20
  43f534:	blr	x8
  43f538:	ldr	x24, [x24]
  43f53c:	tbz	w0, #0, 43f518 <argp_parse@@Base+0x4e6c>
  43f540:	b	43f384 <argp_parse@@Base+0x4cd8>
  43f544:	str	x20, [x23]
  43f548:	ldur	q0, [x19, #24]
  43f54c:	mov	w0, #0x1                   	// #1
  43f550:	dup	v1.2d, x0
  43f554:	add	v0.2d, v0.2d, v1.2d
  43f558:	stur	q0, [x19, #24]
  43f55c:	b	43f594 <argp_parse@@Base+0x4ee8>
  43f560:	mov	w0, #0x10                  	// #16
  43f564:	bl	404210 <malloc@plt>
  43f568:	cbz	x0, 43f590 <argp_parse@@Base+0x4ee4>
  43f56c:	str	x20, [x0]
  43f570:	ldr	x8, [x23, #8]
  43f574:	str	x8, [x0, #8]
  43f578:	str	x0, [x23, #8]
  43f57c:	ldr	x8, [x19, #32]
  43f580:	mov	w0, #0x1                   	// #1
  43f584:	add	x8, x8, #0x1
  43f588:	str	x8, [x19, #32]
  43f58c:	b	43f594 <argp_parse@@Base+0x4ee8>
  43f590:	mov	w0, #0xffffffff            	// #-1
  43f594:	ldp	x20, x19, [sp, #64]
  43f598:	ldp	x22, x21, [sp, #48]
  43f59c:	ldp	x24, x23, [sp, #32]
  43f5a0:	ldr	x25, [sp, #16]
  43f5a4:	ldp	x29, x30, [sp], #80
  43f5a8:	ret
  43f5ac:	mov	x8, x20
  43f5b0:	cbnz	x8, 43f504 <argp_parse@@Base+0x4e58>
  43f5b4:	b	43f38c <argp_parse@@Base+0x4ce0>
  43f5b8:	add	x21, x22, x21, lsl #4
  43f5bc:	ldr	x8, [x21, #8]!
  43f5c0:	cbz	x8, 43f4e4 <argp_parse@@Base+0x4e38>
  43f5c4:	ldr	x1, [x8]
  43f5c8:	cmp	x1, x20
  43f5cc:	b.eq	43f5ec <argp_parse@@Base+0x4f40>  // b.none
  43f5d0:	ldr	x8, [x19, #56]
  43f5d4:	mov	x0, x20
  43f5d8:	blr	x8
  43f5dc:	ldr	x21, [x21]
  43f5e0:	tbz	w0, #0, 43f5bc <argp_parse@@Base+0x4f10>
  43f5e4:	ldr	x8, [x21]
  43f5e8:	b	43f4e0 <argp_parse@@Base+0x4e34>
  43f5ec:	mov	x8, x20
  43f5f0:	b	43f4e0 <argp_parse@@Base+0x4e34>
  43f5f4:	bl	404560 <abort@plt>
  43f5f8:	stp	x29, x30, [sp, #-32]!
  43f5fc:	mov	x29, sp
  43f600:	add	x2, x29, #0x18
  43f604:	str	x19, [sp, #16]
  43f608:	mov	x19, x1
  43f60c:	bl	43f310 <argp_parse@@Base+0x4c64>
  43f610:	ldr	x8, [x29, #24]
  43f614:	cmp	w0, #0x0
  43f618:	csel	x8, x8, x19, eq  // eq = none
  43f61c:	ldr	x19, [sp, #16]
  43f620:	cmn	w0, #0x1
  43f624:	csel	x0, xzr, x8, eq  // eq = none
  43f628:	ldp	x29, x30, [sp], #32
  43f62c:	ret
  43f630:	stp	x29, x30, [sp, #-64]!
  43f634:	stp	x22, x21, [sp, #32]
  43f638:	stp	x20, x19, [sp, #48]
  43f63c:	ldr	x8, [x0, #16]
  43f640:	ldr	x9, [x0, #48]
  43f644:	mov	x20, x0
  43f648:	mov	x19, x1
  43f64c:	mov	x0, x1
  43f650:	mov	x1, x8
  43f654:	str	x23, [sp, #16]
  43f658:	mov	x29, sp
  43f65c:	blr	x9
  43f660:	ldr	x8, [x20, #16]
  43f664:	cmp	x0, x8
  43f668:	b.cs	43f864 <argp_parse@@Base+0x51b8>  // b.hs, b.nlast
  43f66c:	ldr	x23, [x20]
  43f670:	mov	x21, x0
  43f674:	add	x22, x23, x0, lsl #4
  43f678:	ldr	x1, [x22]
  43f67c:	cbz	x1, 43f6ec <argp_parse@@Base+0x5040>
  43f680:	cmp	x1, x19
  43f684:	b.eq	43f69c <argp_parse@@Base+0x4ff0>  // b.none
  43f688:	ldr	x8, [x20, #56]
  43f68c:	mov	x0, x19
  43f690:	blr	x8
  43f694:	tbz	w0, #0, 43f6b4 <argp_parse@@Base+0x5008>
  43f698:	ldr	x19, [x22]
  43f69c:	add	x8, x23, x21, lsl #4
  43f6a0:	ldr	x8, [x8, #8]
  43f6a4:	cbz	x8, 43f6f4 <argp_parse@@Base+0x5048>
  43f6a8:	ldr	q0, [x8]
  43f6ac:	str	q0, [x22]
  43f6b0:	b	43f714 <argp_parse@@Base+0x5068>
  43f6b4:	add	x21, x23, x21, lsl #4
  43f6b8:	ldr	x9, [x21, #8]!
  43f6bc:	cbz	x9, 43f6ec <argp_parse@@Base+0x5040>
  43f6c0:	ldr	x1, [x9]
  43f6c4:	cmp	x1, x19
  43f6c8:	b.eq	43f700 <argp_parse@@Base+0x5054>  // b.none
  43f6cc:	ldr	x8, [x20, #56]
  43f6d0:	mov	x0, x19
  43f6d4:	blr	x8
  43f6d8:	ldr	x8, [x21]
  43f6dc:	tbnz	w0, #0, 43f708 <argp_parse@@Base+0x505c>
  43f6e0:	ldr	x9, [x8, #8]!
  43f6e4:	mov	x21, x8
  43f6e8:	cbnz	x9, 43f6c0 <argp_parse@@Base+0x5014>
  43f6ec:	mov	x19, xzr
  43f6f0:	b	43f84c <argp_parse@@Base+0x51a0>
  43f6f4:	str	xzr, [x22]
  43f6f8:	cbnz	x19, 43f728 <argp_parse@@Base+0x507c>
  43f6fc:	b	43f84c <argp_parse@@Base+0x51a0>
  43f700:	mov	x8, x9
  43f704:	b	43f70c <argp_parse@@Base+0x5060>
  43f708:	ldr	x19, [x8]
  43f70c:	ldr	x9, [x8, #8]
  43f710:	str	x9, [x21]
  43f714:	str	xzr, [x8]
  43f718:	ldr	x9, [x20, #72]
  43f71c:	str	x9, [x8, #8]
  43f720:	str	x8, [x20, #72]
  43f724:	cbz	x19, 43f84c <argp_parse@@Base+0x51a0>
  43f728:	ldr	x8, [x20, #32]
  43f72c:	sub	x8, x8, #0x1
  43f730:	str	x8, [x20, #32]
  43f734:	ldr	x8, [x22]
  43f738:	cbnz	x8, 43f84c <argp_parse@@Base+0x51a0>
  43f73c:	ldp	x10, x9, [x20, #16]
  43f740:	ldr	x8, [x20, #40]
  43f744:	sub	x9, x9, #0x1
  43f748:	str	x9, [x20, #24]
  43f74c:	ldr	s2, [x8]
  43f750:	ucvtf	s0, x10
  43f754:	ucvtf	s1, x9
  43f758:	fmul	s3, s2, s0
  43f75c:	fcmp	s3, s1
  43f760:	b.le	43f84c <argp_parse@@Base+0x51a0>
  43f764:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43f768:	add	x9, x9, #0xd40
  43f76c:	cmp	x8, x9
  43f770:	b.eq	43f7f8 <argp_parse@@Base+0x514c>  // b.none
  43f774:	ldr	s3, [x8, #8]
  43f778:	mov	w10, #0xcccd                	// #52429
  43f77c:	movk	w10, #0x3dcc, lsl #16
  43f780:	fmov	s4, w10
  43f784:	fcmp	s3, s4
  43f788:	b.le	43f7f0 <argp_parse@@Base+0x5144>
  43f78c:	mov	w10, #0x6666                	// #26214
  43f790:	movk	w10, #0x3f66, lsl #16
  43f794:	fmov	s4, w10
  43f798:	fcmp	s3, s4
  43f79c:	b.pl	43f7f0 <argp_parse@@Base+0x5144>  // b.nfrst
  43f7a0:	fcmp	s2, #0.0
  43f7a4:	b.lt	43f7f0 <argp_parse@@Base+0x5144>  // b.tstop
  43f7a8:	ldr	s4, [x8, #12]
  43f7ac:	mov	w10, #0xcccd                	// #52429
  43f7b0:	movk	w10, #0x3f8c, lsl #16
  43f7b4:	fmov	s5, w10
  43f7b8:	fcmp	s4, s5
  43f7bc:	b.le	43f7f0 <argp_parse@@Base+0x5144>
  43f7c0:	mov	w10, #0xcccd                	// #52429
  43f7c4:	movk	w10, #0x3dcc, lsl #16
  43f7c8:	fmov	s4, w10
  43f7cc:	fadd	s4, s2, s4
  43f7d0:	fcmp	s4, s3
  43f7d4:	b.pl	43f7f0 <argp_parse@@Base+0x5144>  // b.nfrst
  43f7d8:	ldr	s3, [x8, #4]
  43f7dc:	fmov	s5, #1.000000000000000000e+00
  43f7e0:	fcmp	s3, s5
  43f7e4:	b.hi	43f7f0 <argp_parse@@Base+0x5144>  // b.pmore
  43f7e8:	fcmp	s4, s3
  43f7ec:	b.mi	43f7fc <argp_parse@@Base+0x5150>  // b.first
  43f7f0:	fmov	s2, wzr
  43f7f4:	str	x9, [x20, #40]
  43f7f8:	mov	x8, x9
  43f7fc:	fmul	s2, s2, s0
  43f800:	fcmp	s2, s1
  43f804:	b.le	43f84c <argp_parse@@Base+0x51a0>
  43f808:	ldr	s1, [x8, #4]
  43f80c:	ldrb	w9, [x8, #16]
  43f810:	fmul	s0, s1, s0
  43f814:	cbnz	w9, 43f820 <argp_parse@@Base+0x5174>
  43f818:	ldr	s1, [x8, #8]
  43f81c:	fmul	s0, s0, s1
  43f820:	fcvtzu	x1, s0
  43f824:	mov	x0, x20
  43f828:	bl	43eee0 <argp_parse@@Base+0x4834>
  43f82c:	tbnz	w0, #0, 43f84c <argp_parse@@Base+0x51a0>
  43f830:	ldr	x0, [x20, #72]
  43f834:	cbz	x0, 43f848 <argp_parse@@Base+0x519c>
  43f838:	ldr	x21, [x0, #8]
  43f83c:	bl	4046b0 <free@plt>
  43f840:	mov	x0, x21
  43f844:	cbnz	x21, 43f838 <argp_parse@@Base+0x518c>
  43f848:	str	xzr, [x20, #72]
  43f84c:	mov	x0, x19
  43f850:	ldp	x20, x19, [sp, #48]
  43f854:	ldp	x22, x21, [sp, #32]
  43f858:	ldr	x23, [sp, #16]
  43f85c:	ldp	x29, x30, [sp], #64
  43f860:	ret
  43f864:	bl	404560 <abort@plt>
  43f868:	sub	sp, sp, #0xe0
  43f86c:	tst	w2, #0x20
  43f870:	mov	w8, #0x3e8                 	// #1000
  43f874:	mov	w9, #0x400                 	// #1024
  43f878:	stp	x29, x30, [sp, #128]
  43f87c:	stp	x28, x27, [sp, #144]
  43f880:	stp	x26, x25, [sp, #160]
  43f884:	stp	x24, x23, [sp, #176]
  43f888:	stp	x22, x21, [sp, #192]
  43f88c:	stp	x20, x19, [sp, #208]
  43f890:	add	x29, sp, #0x80
  43f894:	mov	x21, x4
  43f898:	mov	x27, x3
  43f89c:	mov	x19, x1
  43f8a0:	mov	x26, x0
  43f8a4:	and	w28, w2, #0x3
  43f8a8:	str	w2, [sp, #20]
  43f8ac:	csel	w22, w9, w8, ne  // ne = any
  43f8b0:	bl	404110 <localeconv@plt>
  43f8b4:	ldr	x25, [x0]
  43f8b8:	mov	x23, x0
  43f8bc:	mov	x0, x25
  43f8c0:	bl	403f00 <strlen@plt>
  43f8c4:	ldp	x23, x20, [x23, #8]
  43f8c8:	sub	x8, x0, #0x1
  43f8cc:	cmp	x8, #0x10
  43f8d0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x18e3c>
  43f8d4:	csinc	x24, x0, xzr, cc  // cc = lo, ul, last
  43f8d8:	add	x8, x8, #0xfda
  43f8dc:	mov	x0, x23
  43f8e0:	csel	x25, x25, x8, cc  // cc = lo, ul, last
  43f8e4:	bl	403f00 <strlen@plt>
  43f8e8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  43f8ec:	mov	x11, x21
  43f8f0:	add	x8, x8, #0xb36
  43f8f4:	cmp	x0, #0x11
  43f8f8:	csel	x21, x23, x8, cc  // cc = lo, ul, last
  43f8fc:	cmp	x11, x27
  43f900:	str	x19, [sp, #24]
  43f904:	add	x19, x19, #0x287
  43f908:	stp	x21, x11, [sp]
  43f90c:	b.ls	43f970 <argp_parse@@Base+0x52c4>  // b.plast
  43f910:	cbz	x27, 43f988 <argp_parse@@Base+0x52dc>
  43f914:	udiv	x9, x11, x27
  43f918:	msub	x8, x9, x27, x11
  43f91c:	cbnz	x8, 43f988 <argp_parse@@Base+0x52dc>
  43f920:	udiv	x27, x26, x9
  43f924:	msub	x8, x27, x9, x26
  43f928:	add	x8, x8, x8, lsl #2
  43f92c:	lsl	x11, x8, #1
  43f930:	udiv	x8, x11, x9
  43f934:	msub	x11, x8, x9, x11
  43f938:	lsl	x11, x11, #1
  43f93c:	cmp	x11, #0x0
  43f940:	mov	w10, #0x2                   	// #2
  43f944:	cset	w12, ne  // ne = any
  43f948:	cmp	x9, x11
  43f94c:	cinc	w10, w10, cc  // cc = lo, ul, last
  43f950:	cmp	x11, x9
  43f954:	csel	w9, w12, w10, cc  // cc = lo, ul, last
  43f958:	ldr	w23, [sp, #20]
  43f95c:	tbz	w23, #4, 43fc08 <argp_parse@@Base+0x555c>
  43f960:	cmp	x27, x22
  43f964:	b.cs	43fc5c <argp_parse@@Base+0x55b0>  // b.hs, b.nlast
  43f968:	mov	w21, wzr
  43f96c:	b	43fd54 <argp_parse@@Base+0x56a8>
  43f970:	udiv	x10, x27, x11
  43f974:	msub	x8, x10, x11, x27
  43f978:	cbnz	x8, 43f988 <argp_parse@@Base+0x52dc>
  43f97c:	umulh	x8, x10, x26
  43f980:	cmp	xzr, x8
  43f984:	b.eq	43fbf4 <argp_parse@@Base+0x5548>  // b.none
  43f988:	mov	x0, x11
  43f98c:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43f990:	mov	x0, x26
  43f994:	str	q0, [sp, #48]
  43f998:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43f99c:	mov	x0, x27
  43f9a0:	str	q0, [sp, #64]
  43f9a4:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43f9a8:	ldr	q1, [sp, #48]
  43f9ac:	bl	45f4c8 <_obstack_memory_used@@Base+0x14304>
  43f9b0:	ldr	q1, [sp, #64]
  43f9b4:	bl	460030 <_obstack_memory_used@@Base+0x14e6c>
  43f9b8:	ldr	w23, [sp, #20]
  43f9bc:	tbnz	w23, #4, 43fa24 <argp_parse@@Base+0x5378>
  43f9c0:	cmp	w28, #0x1
  43f9c4:	b.eq	43fbb4 <argp_parse@@Base+0x5508>  // b.none
  43f9c8:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43f9cc:	ldr	q1, [x8, #3440]
  43f9d0:	str	q0, [sp, #32]
  43f9d4:	bl	45fef0 <_obstack_memory_used@@Base+0x14d2c>
  43f9d8:	ldr	x25, [sp, #24]
  43f9dc:	cmp	w0, #0x0
  43f9e0:	mov	x27, x19
  43f9e4:	b.ge	43fbc0 <argp_parse@@Base+0x5514>  // b.tcont
  43f9e8:	ldr	q0, [sp, #32]
  43f9ec:	bl	460880 <_obstack_memory_used@@Base+0x156bc>
  43f9f0:	cmp	w28, #0x0
  43f9f4:	mov	x24, x0
  43f9f8:	cset	w19, eq  // eq = none
  43f9fc:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43fa00:	mov	v1.16b, v0.16b
  43fa04:	ldr	q0, [sp, #32]
  43fa08:	bl	45fde8 <_obstack_memory_used@@Base+0x14c24>
  43fa0c:	cmp	w0, #0x0
  43fa10:	cset	w8, ne  // ne = any
  43fa14:	and	w8, w19, w8
  43fa18:	add	x0, x8, x24
  43fa1c:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43fa20:	b	43fbc4 <argp_parse@@Base+0x5518>
  43fa24:	mov	w0, w22
  43fa28:	str	q0, [sp, #32]
  43fa2c:	mov	x27, x19
  43fa30:	bl	460818 <_obstack_memory_used@@Base+0x15654>
  43fa34:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43fa38:	str	q0, [sp, #48]
  43fa3c:	ldr	q0, [x8, #3424]
  43fa40:	mov	w21, wzr
  43fa44:	str	q0, [sp, #64]
  43fa48:	ldp	q1, q0, [sp, #48]
  43fa4c:	mov	w19, w21
  43fa50:	bl	460030 <_obstack_memory_used@@Base+0x14e6c>
  43fa54:	ldr	q1, [sp, #48]
  43fa58:	add	w21, w21, #0x1
  43fa5c:	str	q0, [sp, #64]
  43fa60:	bl	460030 <_obstack_memory_used@@Base+0x14e6c>
  43fa64:	cmp	w19, #0x6
  43fa68:	b.hi	43fa7c <argp_parse@@Base+0x53d0>  // b.pmore
  43fa6c:	ldr	q1, [sp, #32]
  43fa70:	bl	45fef0 <_obstack_memory_used@@Base+0x14d2c>
  43fa74:	cmp	w0, #0x0
  43fa78:	b.le	43fa48 <argp_parse@@Base+0x539c>
  43fa7c:	ldr	q0, [sp, #32]
  43fa80:	ldr	q1, [sp, #64]
  43fa84:	bl	45f4c8 <_obstack_memory_used@@Base+0x14304>
  43fa88:	ldr	x25, [sp, #24]
  43fa8c:	cmp	w28, #0x1
  43fa90:	adrp	x26, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43fa94:	str	q0, [sp, #64]
  43fa98:	b.eq	43faf0 <argp_parse@@Base+0x5444>  // b.none
  43fa9c:	ldr	q1, [x26, #3440]
  43faa0:	bl	45fef0 <_obstack_memory_used@@Base+0x14d2c>
  43faa4:	ldr	q1, [sp, #64]
  43faa8:	cmp	w0, #0x0
  43faac:	mov	v0.16b, v1.16b
  43fab0:	b.ge	43faf0 <argp_parse@@Base+0x5444>  // b.tcont
  43fab4:	mov	v0.16b, v1.16b
  43fab8:	bl	460880 <_obstack_memory_used@@Base+0x156bc>
  43fabc:	cmp	w28, #0x0
  43fac0:	mov	x25, x0
  43fac4:	cset	w19, eq  // eq = none
  43fac8:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43facc:	mov	v1.16b, v0.16b
  43fad0:	ldr	q0, [sp, #64]
  43fad4:	bl	45fde8 <_obstack_memory_used@@Base+0x14c24>
  43fad8:	cmp	w0, #0x0
  43fadc:	cset	w8, ne  // ne = any
  43fae0:	and	w8, w19, w8
  43fae4:	add	x0, x8, x25
  43fae8:	ldr	x25, [sp, #24]
  43faec:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43faf0:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43faf4:	add	x3, x3, #0xd96
  43faf8:	mov	w1, #0x1                   	// #1
  43fafc:	mov	x2, #0xffffffffffffffff    	// #-1
  43fb00:	mov	x0, x25
  43fb04:	bl	403f20 <__sprintf_chk@plt>
  43fb08:	mov	x0, x25
  43fb0c:	bl	403f00 <strlen@plt>
  43fb10:	ldr	q0, [sp, #64]
  43fb14:	tst	w23, #0x20
  43fb18:	mov	w8, #0x2                   	// #2
  43fb1c:	cinc	x8, x8, eq  // eq = none
  43fb20:	add	x8, x8, x24
  43fb24:	cmp	x8, x0
  43fb28:	b.cc	43fb48 <argp_parse@@Base+0x549c>  // b.lo, b.ul, b.last
  43fb2c:	mov	x2, x0
  43fb30:	add	x19, x24, #0x1
  43fb34:	tbz	w23, #3, 43fc40 <argp_parse@@Base+0x5594>
  43fb38:	add	x8, x2, x25
  43fb3c:	ldurb	w8, [x8, #-1]
  43fb40:	cmp	w8, #0x30
  43fb44:	b.ne	43fc40 <argp_parse@@Base+0x5594>  // b.any
  43fb48:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43fb4c:	ldr	q1, [x8, #3456]
  43fb50:	str	q1, [sp, #64]
  43fb54:	bl	460030 <_obstack_memory_used@@Base+0x14e6c>
  43fb58:	cmp	w28, #0x1
  43fb5c:	b.eq	43fbac <argp_parse@@Base+0x5500>  // b.none
  43fb60:	ldr	q1, [x26, #3440]
  43fb64:	str	q0, [sp, #48]
  43fb68:	bl	45fef0 <_obstack_memory_used@@Base+0x14d2c>
  43fb6c:	cmp	w0, #0x0
  43fb70:	b.ge	43fc10 <argp_parse@@Base+0x5564>  // b.tcont
  43fb74:	ldr	q0, [sp, #48]
  43fb78:	bl	460880 <_obstack_memory_used@@Base+0x156bc>
  43fb7c:	cmp	w28, #0x0
  43fb80:	mov	x24, x0
  43fb84:	cset	w19, eq  // eq = none
  43fb88:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43fb8c:	mov	v1.16b, v0.16b
  43fb90:	ldr	q0, [sp, #48]
  43fb94:	bl	45fde8 <_obstack_memory_used@@Base+0x14c24>
  43fb98:	cmp	w0, #0x0
  43fb9c:	cset	w8, ne  // ne = any
  43fba0:	and	w8, w19, w8
  43fba4:	add	x0, x8, x24
  43fba8:	bl	4609a0 <_obstack_memory_used@@Base+0x157dc>
  43fbac:	ldr	q1, [sp, #64]
  43fbb0:	b	43fc14 <argp_parse@@Base+0x5568>
  43fbb4:	ldr	x25, [sp, #24]
  43fbb8:	mov	x27, x19
  43fbbc:	b	43fbc4 <argp_parse@@Base+0x5518>
  43fbc0:	ldr	q0, [sp, #32]
  43fbc4:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43fbc8:	add	x3, x3, #0xd90
  43fbcc:	mov	w1, #0x1                   	// #1
  43fbd0:	mov	x2, #0xffffffffffffffff    	// #-1
  43fbd4:	mov	x0, x25
  43fbd8:	bl	403f20 <__sprintf_chk@plt>
  43fbdc:	mov	x0, x25
  43fbe0:	bl	403f00 <strlen@plt>
  43fbe4:	mov	x2, x0
  43fbe8:	mov	x19, xzr
  43fbec:	mov	w21, #0xffffffff            	// #-1
  43fbf0:	b	43fc40 <argp_parse@@Base+0x5594>
  43fbf4:	mov	w9, wzr
  43fbf8:	mov	w8, wzr
  43fbfc:	mul	x27, x10, x26
  43fc00:	ldr	w23, [sp, #20]
  43fc04:	tbnz	w23, #4, 43f960 <argp_parse@@Base+0x52b4>
  43fc08:	mov	w21, #0xffffffff            	// #-1
  43fc0c:	b	43fd54 <argp_parse@@Base+0x56a8>
  43fc10:	ldp	q0, q1, [sp, #48]
  43fc14:	bl	45f4c8 <_obstack_memory_used@@Base+0x14304>
  43fc18:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43fc1c:	add	x3, x3, #0xd90
  43fc20:	mov	w1, #0x1                   	// #1
  43fc24:	mov	x2, #0xffffffffffffffff    	// #-1
  43fc28:	mov	x0, x25
  43fc2c:	bl	403f20 <__sprintf_chk@plt>
  43fc30:	mov	x0, x25
  43fc34:	bl	403f00 <strlen@plt>
  43fc38:	mov	x2, x0
  43fc3c:	mov	x19, xzr
  43fc40:	sub	x24, x27, x2
  43fc44:	mov	x0, x24
  43fc48:	mov	x1, x25
  43fc4c:	bl	403e90 <memmove@plt>
  43fc50:	sub	x26, x27, x19
  43fc54:	mov	x19, x27
  43fc58:	b	43fdfc <argp_parse@@Base+0x5750>
  43fc5c:	mov	w12, wzr
  43fc60:	mov	w10, #0xa                   	// #10
  43fc64:	mov	w11, #0x2                   	// #2
  43fc68:	mov	x13, x27
  43fc6c:	udiv	x27, x27, x22
  43fc70:	msub	w13, w27, w22, w13
  43fc74:	madd	w13, w13, w10, w8
  43fc78:	udiv	w8, w13, w22
  43fc7c:	msub	w13, w8, w22, w13
  43fc80:	lsl	w13, w13, #1
  43fc84:	add	w13, w13, w9, lsr #1
  43fc88:	cmp	w13, w22
  43fc8c:	b.cs	43fc9c <argp_parse@@Base+0x55f0>  // b.hs, b.nlast
  43fc90:	cmn	w13, w9
  43fc94:	cset	w9, ne  // ne = any
  43fc98:	b	43fca8 <argp_parse@@Base+0x55fc>
  43fc9c:	add	w9, w13, w9
  43fca0:	cmp	w22, w9
  43fca4:	cinc	w9, w11, cc  // cc = lo, ul, last
  43fca8:	cmp	w12, #0x6
  43fcac:	add	w21, w12, #0x1
  43fcb0:	b.hi	43fcc0 <argp_parse@@Base+0x5614>  // b.pmore
  43fcb4:	cmp	x27, x22
  43fcb8:	mov	w12, w21
  43fcbc:	b.cs	43fc68 <argp_parse@@Base+0x55bc>  // b.hs, b.nlast
  43fcc0:	cmp	x27, #0x9
  43fcc4:	b.hi	43fd54 <argp_parse@@Base+0x56a8>  // b.pmore
  43fcc8:	cmp	w28, #0x1
  43fccc:	b.ne	43fce4 <argp_parse@@Base+0x5638>  // b.any
  43fcd0:	and	w10, w8, #0x1
  43fcd4:	add	w10, w9, w10
  43fcd8:	cmp	w10, #0x2
  43fcdc:	b.hi	43fcec <argp_parse@@Base+0x5640>  // b.pmore
  43fce0:	b	43fd14 <argp_parse@@Base+0x5668>
  43fce4:	cbnz	w28, 43fd14 <argp_parse@@Base+0x5668>
  43fce8:	cbz	w9, 43fd14 <argp_parse@@Base+0x5668>
  43fcec:	add	w8, w8, #0x1
  43fcf0:	cmp	w8, #0xa
  43fcf4:	b.ne	43fd10 <argp_parse@@Base+0x5664>  // b.any
  43fcf8:	cmp	x27, #0x8
  43fcfc:	mov	w8, wzr
  43fd00:	b.hi	43fd4c <argp_parse@@Base+0x56a0>  // b.pmore
  43fd04:	add	x27, x27, #0x1
  43fd08:	mov	w9, w8
  43fd0c:	b	43fd14 <argp_parse@@Base+0x5668>
  43fd10:	mov	w9, wzr
  43fd14:	tbz	w23, #3, 43fd1c <argp_parse@@Base+0x5670>
  43fd18:	cbz	w8, 43fd54 <argp_parse@@Base+0x56a8>
  43fd1c:	ldr	x10, [sp, #24]
  43fd20:	add	w8, w8, #0x30
  43fd24:	mov	x1, x25
  43fd28:	mov	x2, x24
  43fd2c:	add	x9, x10, #0x286
  43fd30:	sub	x26, x9, x24
  43fd34:	mov	x0, x26
  43fd38:	strb	w8, [x10, #646]
  43fd3c:	bl	403e80 <memcpy@plt>
  43fd40:	mov	w9, wzr
  43fd44:	mov	w8, wzr
  43fd48:	b	43fd58 <argp_parse@@Base+0x56ac>
  43fd4c:	mov	w27, #0xa                   	// #10
  43fd50:	mov	w9, w8
  43fd54:	mov	x26, x19
  43fd58:	cbz	w28, 43fd7c <argp_parse@@Base+0x56d0>
  43fd5c:	cmp	w28, #0x1
  43fd60:	b.ne	43fdc8 <argp_parse@@Base+0x571c>  // b.any
  43fd64:	and	x10, x27, #0x1
  43fd68:	cmn	x10, w9, uxtw
  43fd6c:	cinc	w8, w8, ne  // ne = any
  43fd70:	cmp	w8, #0x5
  43fd74:	b.gt	43fd88 <argp_parse@@Base+0x56dc>
  43fd78:	b	43fdc8 <argp_parse@@Base+0x571c>
  43fd7c:	add	w8, w8, w9
  43fd80:	cmp	w8, #0x1
  43fd84:	b.lt	43fdc8 <argp_parse@@Base+0x571c>  // b.tstop
  43fd88:	cmp	w21, #0x7
  43fd8c:	add	x27, x27, #0x1
  43fd90:	b.gt	43fdc8 <argp_parse@@Base+0x571c>
  43fd94:	tbz	w23, #4, 43fdc8 <argp_parse@@Base+0x571c>
  43fd98:	cmp	x27, x22
  43fd9c:	b.ne	43fdc8 <argp_parse@@Base+0x571c>  // b.any
  43fda0:	add	w21, w21, #0x1
  43fda4:	tbnz	w23, #3, 43fdc4 <argp_parse@@Base+0x5718>
  43fda8:	mov	w8, #0x30                  	// #48
  43fdac:	strb	w8, [x26, #-1]!
  43fdb0:	sub	x26, x26, x24
  43fdb4:	mov	x0, x26
  43fdb8:	mov	x1, x25
  43fdbc:	mov	x2, x24
  43fdc0:	bl	403e80 <memcpy@plt>
  43fdc4:	mov	w27, #0x1                   	// #1
  43fdc8:	ldr	x25, [sp, #24]
  43fdcc:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  43fdd0:	movk	x8, #0xcccd
  43fdd4:	mov	w9, #0xa                   	// #10
  43fdd8:	mov	x24, x26
  43fddc:	umulh	x10, x27, x8
  43fde0:	lsr	x10, x10, #3
  43fde4:	msub	w11, w10, w9, w27
  43fde8:	orr	w11, w11, #0x30
  43fdec:	cmp	x27, #0x9
  43fdf0:	strb	w11, [x24, #-1]!
  43fdf4:	mov	x27, x10
  43fdf8:	b.hi	43fddc <argp_parse@@Base+0x5730>  // b.pmore
  43fdfc:	tbnz	w23, #2, 43fe0c <argp_parse@@Base+0x5760>
  43fe00:	ldr	x9, [sp, #8]
  43fe04:	tbnz	w23, #7, 43fef8 <argp_parse@@Base+0x584c>
  43fe08:	b	43ff8c <argp_parse@@Base+0x58e0>
  43fe0c:	ldr	x0, [sp]
  43fe10:	str	x22, [sp, #48]
  43fe14:	str	x19, [sp, #64]
  43fe18:	sub	x28, x26, x24
  43fe1c:	bl	403f00 <strlen@plt>
  43fe20:	mov	x25, x0
  43fe24:	sub	x0, x29, #0x2c
  43fe28:	mov	w3, #0x29                  	// #41
  43fe2c:	mov	x1, x24
  43fe30:	mov	x2, x28
  43fe34:	sub	x19, x29, #0x2c
  43fe38:	bl	404150 <__memcpy_chk@plt>
  43fe3c:	ldrb	w8, [x20]
  43fe40:	cmp	x8, #0x0
  43fe44:	cset	w23, eq  // eq = none
  43fe48:	cmp	w8, #0xff
  43fe4c:	csel	x9, x28, x8, eq  // eq = none
  43fe50:	cmp	w8, #0x0
  43fe54:	csinv	x8, x9, xzr, ne  // ne = any
  43fe58:	cmp	x8, x28
  43fe5c:	csel	x27, x28, x8, hi  // hi = pmore
  43fe60:	sub	x24, x26, x27
  43fe64:	sub	x26, x28, x27
  43fe68:	add	x1, x19, x26
  43fe6c:	mov	x0, x24
  43fe70:	mov	x2, x27
  43fe74:	bl	403e80 <memcpy@plt>
  43fe78:	cbz	x26, 43fee0 <argp_parse@@Base+0x5834>
  43fe7c:	ldr	x22, [sp]
  43fe80:	neg	x28, x25
  43fe84:	add	x24, x24, x28
  43fe88:	tst	w23, #0x1
  43fe8c:	mov	x0, x24
  43fe90:	mov	x1, x22
  43fe94:	mov	x2, x25
  43fe98:	cinc	x20, x20, eq  // eq = none
  43fe9c:	bl	403e80 <memcpy@plt>
  43fea0:	ldrb	w8, [x20]
  43fea4:	cmp	x8, #0x0
  43fea8:	cset	w23, eq  // eq = none
  43feac:	cmp	w8, #0xff
  43feb0:	csel	x9, x26, x8, eq  // eq = none
  43feb4:	cmp	w8, #0x0
  43feb8:	csel	x8, x27, x9, eq  // eq = none
  43febc:	cmp	x26, x8
  43fec0:	csel	x27, x26, x8, cc  // cc = lo, ul, last
  43fec4:	sub	x24, x24, x27
  43fec8:	sub	x26, x26, x27
  43fecc:	add	x1, x19, x26
  43fed0:	mov	x0, x24
  43fed4:	mov	x2, x27
  43fed8:	bl	403e80 <memcpy@plt>
  43fedc:	cbnz	x26, 43fe84 <argp_parse@@Base+0x57d8>
  43fee0:	ldr	w23, [sp, #20]
  43fee4:	ldr	x19, [sp, #64]
  43fee8:	ldr	x25, [sp, #24]
  43feec:	ldr	x9, [sp, #8]
  43fef0:	ldr	x22, [sp, #48]
  43fef4:	tbz	w23, #7, 43ff8c <argp_parse@@Base+0x58e0>
  43fef8:	tbz	w21, #31, 43ff2c <argp_parse@@Base+0x5880>
  43fefc:	cmp	x9, #0x2
  43ff00:	b.cc	43ff28 <argp_parse@@Base+0x587c>  // b.lo, b.ul, b.last
  43ff04:	mov	w21, wzr
  43ff08:	mov	w8, #0x1                   	// #1
  43ff0c:	cmp	w21, #0x7
  43ff10:	b.eq	43ffb4 <argp_parse@@Base+0x5908>  // b.none
  43ff14:	mul	x8, x8, x22
  43ff18:	cmp	x8, x9
  43ff1c:	add	w21, w21, #0x1
  43ff20:	b.cc	43ff0c <argp_parse@@Base+0x5860>  // b.lo, b.ul, b.last
  43ff24:	b	43ff2c <argp_parse@@Base+0x5880>
  43ff28:	mov	w21, wzr
  43ff2c:	and	w8, w23, #0x100
  43ff30:	tbz	w23, #6, 43ff48 <argp_parse@@Base+0x589c>
  43ff34:	orr	w9, w21, w8
  43ff38:	cbz	w9, 43ff48 <argp_parse@@Base+0x589c>
  43ff3c:	add	x19, x25, #0x288
  43ff40:	mov	w9, #0x20                  	// #32
  43ff44:	strb	w9, [x25, #647]
  43ff48:	cbz	w21, 43ff70 <argp_parse@@Base+0x58c4>
  43ff4c:	tbnz	w23, #5, 43ff60 <argp_parse@@Base+0x58b4>
  43ff50:	cmp	w21, #0x1
  43ff54:	b.ne	43ff60 <argp_parse@@Base+0x58b4>  // b.any
  43ff58:	mov	w9, #0x6b                  	// #107
  43ff5c:	b	43ff6c <argp_parse@@Base+0x58c0>
  43ff60:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43ff64:	add	x9, x9, #0xde8
  43ff68:	ldrb	w9, [x9, w21, sxtw]
  43ff6c:	strb	w9, [x19], #1
  43ff70:	cbz	w8, 43ff8c <argp_parse@@Base+0x58e0>
  43ff74:	tbz	w23, #5, 43ff84 <argp_parse@@Base+0x58d8>
  43ff78:	cbz	w21, 43ff84 <argp_parse@@Base+0x58d8>
  43ff7c:	mov	w8, #0x69                  	// #105
  43ff80:	strb	w8, [x19], #1
  43ff84:	mov	w8, #0x42                  	// #66
  43ff88:	strb	w8, [x19], #1
  43ff8c:	strb	wzr, [x19]
  43ff90:	mov	x0, x24
  43ff94:	ldp	x20, x19, [sp, #208]
  43ff98:	ldp	x22, x21, [sp, #192]
  43ff9c:	ldp	x24, x23, [sp, #176]
  43ffa0:	ldp	x26, x25, [sp, #160]
  43ffa4:	ldp	x28, x27, [sp, #144]
  43ffa8:	ldp	x29, x30, [sp, #128]
  43ffac:	add	sp, sp, #0xe0
  43ffb0:	ret
  43ffb4:	mov	w21, #0x8                   	// #8
  43ffb8:	and	w8, w23, #0x100
  43ffbc:	tbnz	w23, #6, 43ff34 <argp_parse@@Base+0x5888>
  43ffc0:	b	43ff48 <argp_parse@@Base+0x589c>
  43ffc4:	stp	x29, x30, [sp, #-64]!
  43ffc8:	stp	x20, x19, [sp, #48]
  43ffcc:	mov	x19, x2
  43ffd0:	mov	x20, x1
  43ffd4:	str	x23, [sp, #16]
  43ffd8:	stp	x22, x21, [sp, #32]
  43ffdc:	mov	x29, sp
  43ffe0:	cbnz	x0, 440004 <argp_parse@@Base+0x5958>
  43ffe4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43ffe8:	add	x0, x0, #0xd9c
  43ffec:	bl	4049e0 <getenv@plt>
  43fff0:	cbnz	x0, 440004 <argp_parse@@Base+0x5958>
  43fff4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  43fff8:	add	x0, x0, #0xda7
  43fffc:	bl	4049e0 <getenv@plt>
  440000:	cbz	x0, 4400fc <argp_parse@@Base+0x5a50>
  440004:	mov	x8, x0
  440008:	ldrb	w9, [x8], #1
  44000c:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440010:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440014:	add	x22, x22, #0xe10
  440018:	cmp	w9, #0x27
  44001c:	csel	x21, x8, x0, eq  // eq = none
  440020:	cset	w9, eq  // eq = none
  440024:	add	x1, x1, #0xdf8
  440028:	mov	w3, #0x4                   	// #4
  44002c:	mov	x0, x21
  440030:	mov	x2, x22
  440034:	lsl	w23, w9, #2
  440038:	bl	436c94 <wcrtomb@plt+0x321a4>
  44003c:	tbnz	w0, #31, 44009c <argp_parse@@Base+0x59f0>
  440040:	sbfiz	x8, x0, #2, #32
  440044:	ldr	w8, [x22, x8]
  440048:	mov	w9, #0x1                   	// #1
  44004c:	str	x9, [x19]
  440050:	orr	w23, w8, w23
  440054:	mov	w0, wzr
  440058:	str	w23, [x20]
  44005c:	ldr	x8, [x19]
  440060:	cbnz	x8, 440088 <argp_parse@@Base+0x59dc>
  440064:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440068:	add	x0, x0, #0xdd5
  44006c:	bl	4049e0 <getenv@plt>
  440070:	cmp	x0, #0x0
  440074:	mov	w8, #0x200                 	// #512
  440078:	mov	w9, #0x400                 	// #1024
  44007c:	csel	x8, x9, x8, eq  // eq = none
  440080:	mov	w0, #0x4                   	// #4
  440084:	str	x8, [x19]
  440088:	ldp	x20, x19, [sp, #48]
  44008c:	ldp	x22, x21, [sp, #32]
  440090:	ldr	x23, [sp, #16]
  440094:	ldp	x29, x30, [sp], #64
  440098:	ret
  44009c:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4400a0:	add	x4, x4, #0xdb1
  4400a4:	add	x1, x29, #0x18
  4400a8:	mov	x0, x21
  4400ac:	mov	w2, wzr
  4400b0:	mov	x3, x19
  4400b4:	bl	44a3ac <argp_parse@@Base+0xfd00>
  4400b8:	cbz	w0, 4400cc <argp_parse@@Base+0x5a20>
  4400bc:	str	wzr, [x20]
  4400c0:	ldr	x8, [x19]
  4400c4:	cbnz	x8, 440088 <argp_parse@@Base+0x59dc>
  4400c8:	b	440064 <argp_parse@@Base+0x59b8>
  4400cc:	ldrb	w8, [x21]
  4400d0:	sub	w8, w8, #0x30
  4400d4:	cmp	w8, #0xa
  4400d8:	b.cc	440054 <argp_parse@@Base+0x59a8>  // b.lo, b.ul, b.last
  4400dc:	ldr	x8, [x29, #24]
  4400e0:	cmp	x8, x21
  4400e4:	b.eq	440134 <argp_parse@@Base+0x5a88>  // b.none
  4400e8:	ldrb	w9, [x21, #1]!
  4400ec:	sub	w9, w9, #0x30
  4400f0:	cmp	w9, #0xa
  4400f4:	b.cs	4400e0 <argp_parse@@Base+0x5a34>  // b.hs, b.nlast
  4400f8:	b	440054 <argp_parse@@Base+0x59a8>
  4400fc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440100:	add	x0, x0, #0xdd5
  440104:	bl	4049e0 <getenv@plt>
  440108:	cmp	x0, #0x0
  44010c:	mov	w8, #0x200                 	// #512
  440110:	mov	w9, #0x400                 	// #1024
  440114:	csel	x8, x9, x8, eq  // eq = none
  440118:	mov	w23, wzr
  44011c:	str	x8, [x19]
  440120:	mov	w0, wzr
  440124:	str	w23, [x20]
  440128:	ldr	x8, [x19]
  44012c:	cbnz	x8, 440088 <argp_parse@@Base+0x59dc>
  440130:	b	440064 <argp_parse@@Base+0x59b8>
  440134:	ldurb	w9, [x8, #-1]
  440138:	orr	w10, w23, #0x80
  44013c:	orr	w23, w23, #0x180
  440140:	cmp	w9, #0x42
  440144:	csel	w9, w23, w10, eq  // eq = none
  440148:	b.ne	440158 <argp_parse@@Base+0x5aac>  // b.any
  44014c:	ldurb	w8, [x8, #-2]
  440150:	cmp	w8, #0x69
  440154:	b.ne	440054 <argp_parse@@Base+0x59a8>  // b.any
  440158:	orr	w23, w9, #0x20
  44015c:	mov	w0, wzr
  440160:	str	w23, [x20]
  440164:	ldr	x8, [x19]
  440168:	cbnz	x8, 440088 <argp_parse@@Base+0x59dc>
  44016c:	b	440064 <argp_parse@@Base+0x59b8>
  440170:	mov	x8, x0
  440174:	mov	x0, x1
  440178:	strb	wzr, [x0, #20]!
  44017c:	tbnz	x8, #63, 4401b8 <argp_parse@@Base+0x5b0c>
  440180:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  440184:	movk	x9, #0x6667
  440188:	mov	w10, #0xa                   	// #10
  44018c:	smulh	x11, x8, x9
  440190:	asr	x13, x11, #2
  440194:	add	x11, x13, x11, lsr #63
  440198:	add	x12, x8, #0x9
  44019c:	msub	w8, w11, w10, w8
  4401a0:	add	w8, w8, #0x30
  4401a4:	cmp	x12, #0x12
  4401a8:	strb	w8, [x0, #-1]!
  4401ac:	mov	x8, x11
  4401b0:	b.hi	44018c <argp_parse@@Base+0x5ae0>  // b.pmore
  4401b4:	ret
  4401b8:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  4401bc:	add	x0, x1, #0x13
  4401c0:	movk	x9, #0x6667
  4401c4:	mov	w10, #0xa                   	// #10
  4401c8:	smulh	x11, x8, x9
  4401cc:	asr	x13, x11, #2
  4401d0:	neg	w12, w8
  4401d4:	add	x11, x13, x11, lsr #63
  4401d8:	madd	w12, w11, w10, w12
  4401dc:	add	x8, x8, #0x9
  4401e0:	add	w12, w12, #0x30
  4401e4:	cmp	x8, #0x12
  4401e8:	strb	w12, [x0], #-1
  4401ec:	mov	x8, x11
  4401f0:	b.hi	4401c8 <argp_parse@@Base+0x5b1c>  // b.pmore
  4401f4:	mov	w8, #0x2d                  	// #45
  4401f8:	strb	w8, [x0]
  4401fc:	ret
  440200:	mov	x8, x0
  440204:	mov	x0, x1
  440208:	strb	wzr, [x0, #20]!
  44020c:	tbnz	x8, #63, 440248 <argp_parse@@Base+0x5b9c>
  440210:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  440214:	movk	x9, #0x6667
  440218:	mov	w10, #0xa                   	// #10
  44021c:	smulh	x11, x8, x9
  440220:	asr	x13, x11, #2
  440224:	add	x11, x13, x11, lsr #63
  440228:	add	x12, x8, #0x9
  44022c:	msub	w8, w11, w10, w8
  440230:	add	w8, w8, #0x30
  440234:	cmp	x12, #0x12
  440238:	strb	w8, [x0, #-1]!
  44023c:	mov	x8, x11
  440240:	b.hi	44021c <argp_parse@@Base+0x5b70>  // b.pmore
  440244:	ret
  440248:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  44024c:	add	x0, x1, #0x13
  440250:	movk	x9, #0x6667
  440254:	mov	w10, #0xa                   	// #10
  440258:	smulh	x11, x8, x9
  44025c:	asr	x13, x11, #2
  440260:	neg	w12, w8
  440264:	add	x11, x13, x11, lsr #63
  440268:	madd	w12, w11, w10, w12
  44026c:	add	x8, x8, #0x9
  440270:	add	w12, w12, #0x30
  440274:	cmp	x8, #0x12
  440278:	strb	w12, [x0], #-1
  44027c:	mov	x8, x11
  440280:	b.hi	440258 <argp_parse@@Base+0x5bac>  // b.pmore
  440284:	mov	w8, #0x2d                  	// #45
  440288:	strb	w8, [x0]
  44028c:	ret
  440290:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  440294:	movk	x8, #0xcccd
  440298:	strb	wzr, [x1, #20]!
  44029c:	mov	w9, #0xa                   	// #10
  4402a0:	umulh	x10, x0, x8
  4402a4:	lsr	x10, x10, #3
  4402a8:	msub	w11, w10, w9, w0
  4402ac:	orr	w11, w11, #0x30
  4402b0:	cmp	x0, #0x9
  4402b4:	strb	w11, [x1, #-1]!
  4402b8:	mov	x0, x10
  4402bc:	b.hi	4402a0 <argp_parse@@Base+0x5bf4>  // b.pmore
  4402c0:	mov	x0, x1
  4402c4:	ret
  4402c8:	stp	x29, x30, [sp, #-16]!
  4402cc:	mov	w0, #0xe                   	// #14
  4402d0:	mov	x29, sp
  4402d4:	bl	4041d0 <nl_langinfo@plt>
  4402d8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4402dc:	add	x8, x8, #0xb36
  4402e0:	cmp	x0, #0x0
  4402e4:	csel	x8, x8, x0, eq  // eq = none
  4402e8:	ldrb	w9, [x8]
  4402ec:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4402f0:	add	x10, x10, #0xe18
  4402f4:	cmp	w9, #0x0
  4402f8:	csel	x0, x10, x8, eq  // eq = none
  4402fc:	ldp	x29, x30, [sp], #16
  440300:	ret
  440304:	sub	sp, sp, #0xc0
  440308:	cmp	x0, x1
  44030c:	stp	x29, x30, [sp, #128]
  440310:	str	x23, [sp, #144]
  440314:	stp	x22, x21, [sp, #160]
  440318:	stp	x20, x19, [sp, #176]
  44031c:	add	x29, sp, #0x80
  440320:	b.eq	4403fc <argp_parse@@Base+0x5d50>  // b.none
  440324:	mov	x19, x1
  440328:	mov	x20, x0
  44032c:	bl	4046e0 <__ctype_get_mb_cur_max@plt>
  440330:	cmp	x0, #0x1
  440334:	b.ls	440404 <argp_parse@@Base+0x5d58>  // b.plast
  440338:	str	x20, [sp, #80]
  44033c:	strb	wzr, [sp, #64]
  440340:	stur	xzr, [sp, #68]
  440344:	strb	wzr, [sp, #76]
  440348:	str	x19, [sp, #16]
  44034c:	strb	wzr, [sp]
  440350:	stur	xzr, [sp, #4]
  440354:	add	x0, sp, #0x40
  440358:	strb	wzr, [sp, #12]
  44035c:	bl	44051c <argp_parse@@Base+0x5e70>
  440360:	ldrb	w8, [sp, #96]
  440364:	cbz	w8, 440370 <argp_parse@@Base+0x5cc4>
  440368:	ldr	w8, [sp, #100]
  44036c:	cbz	w8, 440474 <argp_parse@@Base+0x5dc8>
  440370:	mov	x0, sp
  440374:	bl	44051c <argp_parse@@Base+0x5e70>
  440378:	ldrb	w8, [sp, #32]
  44037c:	cbz	w8, 440388 <argp_parse@@Base+0x5cdc>
  440380:	ldr	w9, [sp, #36]
  440384:	cbz	w9, 440474 <argp_parse@@Base+0x5dc8>
  440388:	ldrb	w9, [sp, #96]
  44038c:	cbz	w9, 4403b8 <argp_parse@@Base+0x5d0c>
  440390:	cbz	w8, 4404d0 <argp_parse@@Base+0x5e24>
  440394:	ldr	w0, [sp, #100]
  440398:	bl	404a60 <towlower@plt>
  44039c:	ldr	w8, [sp, #36]
  4403a0:	mov	w19, w0
  4403a4:	mov	w0, w8
  4403a8:	bl	404a60 <towlower@plt>
  4403ac:	sub	w0, w19, w0
  4403b0:	cbz	w0, 4403dc <argp_parse@@Base+0x5d30>
  4403b4:	b	4404b8 <argp_parse@@Base+0x5e0c>
  4403b8:	cbnz	w8, 4404d8 <argp_parse@@Base+0x5e2c>
  4403bc:	ldr	x2, [sp, #88]
  4403c0:	ldr	x8, [sp, #24]
  4403c4:	cmp	x2, x8
  4403c8:	b.ne	4404e0 <argp_parse@@Base+0x5e34>  // b.any
  4403cc:	ldr	x0, [sp, #80]
  4403d0:	ldr	x1, [sp, #16]
  4403d4:	bl	4045d0 <memcmp@plt>
  4403d8:	cbnz	w0, 4404b8 <argp_parse@@Base+0x5e0c>
  4403dc:	ldp	x9, x8, [sp, #80]
  4403e0:	ldp	x11, x10, [sp, #16]
  4403e4:	strb	wzr, [sp, #76]
  4403e8:	add	x8, x9, x8
  4403ec:	add	x9, x11, x10
  4403f0:	str	x8, [sp, #80]
  4403f4:	str	x9, [sp, #16]
  4403f8:	b	440354 <argp_parse@@Base+0x5ca8>
  4403fc:	mov	w0, wzr
  440400:	b	4404b8 <argp_parse@@Base+0x5e0c>
  440404:	bl	404640 <__ctype_b_loc@plt>
  440408:	ldr	x22, [x0]
  44040c:	ldrb	w21, [x20]
  440410:	ldrh	w8, [x22, x21, lsl #1]
  440414:	tbnz	w8, #8, 44042c <argp_parse@@Base+0x5d80>
  440418:	ldrb	w23, [x19]
  44041c:	ldrh	w8, [x22, x23, lsl #1]
  440420:	tbnz	w8, #8, 440448 <argp_parse@@Base+0x5d9c>
  440424:	cbnz	w21, 44045c <argp_parse@@Base+0x5db0>
  440428:	b	44046c <argp_parse@@Base+0x5dc0>
  44042c:	bl	404100 <__ctype_tolower_loc@plt>
  440430:	ldr	x8, [x0]
  440434:	lsl	x9, x21, #2
  440438:	ldrb	w21, [x8, x9]
  44043c:	ldrb	w23, [x19]
  440440:	ldrh	w8, [x22, x23, lsl #1]
  440444:	tbz	w8, #8, 440424 <argp_parse@@Base+0x5d78>
  440448:	bl	404100 <__ctype_tolower_loc@plt>
  44044c:	ldr	x8, [x0]
  440450:	lsl	x9, x23, #2
  440454:	ldrb	w23, [x8, x9]
  440458:	cbz	w21, 44046c <argp_parse@@Base+0x5dc0>
  44045c:	add	x20, x20, #0x1
  440460:	cmp	w21, w23
  440464:	add	x19, x19, #0x1
  440468:	b.eq	44040c <argp_parse@@Base+0x5d60>  // b.none
  44046c:	sub	w0, w21, w23
  440470:	b	4404b8 <argp_parse@@Base+0x5e0c>
  440474:	add	x0, sp, #0x40
  440478:	bl	44051c <argp_parse@@Base+0x5e70>
  44047c:	ldrb	w8, [sp, #96]
  440480:	mov	w0, #0x1                   	// #1
  440484:	cbz	w8, 4404b8 <argp_parse@@Base+0x5e0c>
  440488:	ldr	w8, [sp, #100]
  44048c:	cbnz	w8, 4404b8 <argp_parse@@Base+0x5e0c>
  440490:	mov	x0, sp
  440494:	bl	44051c <argp_parse@@Base+0x5e70>
  440498:	ldrb	w8, [sp, #32]
  44049c:	ldr	w9, [sp, #36]
  4404a0:	cmp	w8, #0x0
  4404a4:	cset	w8, eq  // eq = none
  4404a8:	cmp	w9, #0x0
  4404ac:	cset	w9, ne  // ne = any
  4404b0:	orr	w8, w8, w9
  4404b4:	sbfx	w0, w8, #0, #1
  4404b8:	ldp	x20, x19, [sp, #176]
  4404bc:	ldp	x22, x21, [sp, #160]
  4404c0:	ldr	x23, [sp, #144]
  4404c4:	ldp	x29, x30, [sp, #128]
  4404c8:	add	sp, sp, #0xc0
  4404cc:	ret
  4404d0:	mov	w0, #0xffffffff            	// #-1
  4404d4:	b	4404b8 <argp_parse@@Base+0x5e0c>
  4404d8:	mov	w0, #0x1                   	// #1
  4404dc:	b	4404b8 <argp_parse@@Base+0x5e0c>
  4404e0:	ldr	x0, [sp, #80]
  4404e4:	ldr	x1, [sp, #16]
  4404e8:	cmp	x2, x8
  4404ec:	b.cs	440504 <argp_parse@@Base+0x5e58>  // b.hs, b.nlast
  4404f0:	bl	4045d0 <memcmp@plt>
  4404f4:	cmp	w0, #0x1
  4404f8:	mov	w8, #0xffffffff            	// #-1
  4404fc:	cneg	w0, w8, ge  // ge = tcont
  440500:	b	4404b8 <argp_parse@@Base+0x5e0c>
  440504:	mov	x2, x8
  440508:	bl	4045d0 <memcmp@plt>
  44050c:	cmp	w0, #0x0
  440510:	mov	w8, #0x1                   	// #1
  440514:	cneg	w0, w8, lt  // lt = tstop
  440518:	b	4404b8 <argp_parse@@Base+0x5e0c>
  44051c:	stp	x29, x30, [sp, #-48]!
  440520:	stp	x22, x21, [sp, #16]
  440524:	stp	x20, x19, [sp, #32]
  440528:	ldrb	w8, [x0, #12]
  44052c:	mov	x29, sp
  440530:	cbz	w8, 440544 <argp_parse@@Base+0x5e98>
  440534:	ldp	x20, x19, [sp, #32]
  440538:	ldp	x22, x21, [sp, #16]
  44053c:	ldp	x29, x30, [sp], #48
  440540:	ret
  440544:	ldrb	w8, [x0]
  440548:	ldr	x20, [x0, #16]
  44054c:	mov	x19, x0
  440550:	cbz	w8, 4405a4 <argp_parse@@Base+0x5ef8>
  440554:	add	x22, x19, #0x24
  440558:	bl	4046e0 <__ctype_get_mb_cur_max@plt>
  44055c:	mov	x1, x0
  440560:	mov	x0, x20
  440564:	bl	449898 <argp_parse@@Base+0xf1ec>
  440568:	add	x21, x19, #0x4
  44056c:	mov	x2, x0
  440570:	mov	x0, x22
  440574:	mov	x1, x20
  440578:	mov	x3, x21
  44057c:	bl	44addc <argp_parse@@Base+0x10730>
  440580:	cmn	x0, #0x2
  440584:	str	x0, [x19, #24]
  440588:	b.eq	440614 <argp_parse@@Base+0x5f68>  // b.none
  44058c:	cbz	x0, 4405dc <argp_parse@@Base+0x5f30>
  440590:	cmn	x0, #0x1
  440594:	b.ne	4405f8 <argp_parse@@Base+0x5f4c>  // b.any
  440598:	mov	w8, #0x1                   	// #1
  44059c:	str	x8, [x19, #24]
  4405a0:	b	440620 <argp_parse@@Base+0x5f74>
  4405a4:	ldrb	w8, [x20]
  4405a8:	adrp	x10, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4405ac:	add	x10, x10, #0x988
  4405b0:	lsr	w9, w8, #3
  4405b4:	and	x9, x9, #0x1c
  4405b8:	ldr	w9, [x10, x9]
  4405bc:	lsr	w8, w9, w8
  4405c0:	tbz	w8, #0, 44063c <argp_parse@@Base+0x5f90>
  4405c4:	mov	w8, #0x1                   	// #1
  4405c8:	str	x8, [x19, #24]
  4405cc:	ldrb	w9, [x20]
  4405d0:	strb	w8, [x19, #32]
  4405d4:	str	w9, [x19, #36]
  4405d8:	b	440624 <argp_parse@@Base+0x5f78>
  4405dc:	ldr	x8, [x19, #16]
  4405e0:	mov	w9, #0x1                   	// #1
  4405e4:	str	x9, [x19, #24]
  4405e8:	ldrb	w8, [x8]
  4405ec:	cbnz	w8, 440654 <argp_parse@@Base+0x5fa8>
  4405f0:	ldr	w8, [x22]
  4405f4:	cbnz	w8, 440674 <argp_parse@@Base+0x5fc8>
  4405f8:	mov	w8, #0x1                   	// #1
  4405fc:	mov	x0, x21
  440600:	strb	w8, [x19, #32]
  440604:	bl	404580 <mbsinit@plt>
  440608:	cbz	w0, 440624 <argp_parse@@Base+0x5f78>
  44060c:	strb	wzr, [x19]
  440610:	b	440624 <argp_parse@@Base+0x5f78>
  440614:	ldr	x0, [x19, #16]
  440618:	bl	403f00 <strlen@plt>
  44061c:	str	x0, [x19, #24]
  440620:	strb	wzr, [x19, #32]
  440624:	mov	w8, #0x1                   	// #1
  440628:	strb	w8, [x19, #12]
  44062c:	ldp	x20, x19, [sp, #32]
  440630:	ldp	x22, x21, [sp, #16]
  440634:	ldp	x29, x30, [sp], #48
  440638:	ret
  44063c:	add	x0, x19, #0x4
  440640:	bl	404580 <mbsinit@plt>
  440644:	cbz	w0, 440694 <argp_parse@@Base+0x5fe8>
  440648:	mov	w8, #0x1                   	// #1
  44064c:	strb	w8, [x19]
  440650:	b	440554 <argp_parse@@Base+0x5ea8>
  440654:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440658:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  44065c:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440660:	add	x0, x0, #0xe71
  440664:	add	x1, x1, #0xe35
  440668:	add	x3, x3, #0xe41
  44066c:	mov	w2, #0xb2                  	// #178
  440670:	bl	4049b0 <__assert_fail@plt>
  440674:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440678:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  44067c:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440680:	add	x0, x0, #0xe88
  440684:	add	x1, x1, #0xe35
  440688:	add	x3, x3, #0xe41
  44068c:	mov	w2, #0xb3                  	// #179
  440690:	bl	4049b0 <__assert_fail@plt>
  440694:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440698:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  44069c:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4406a0:	add	x0, x0, #0xe1e
  4406a4:	add	x1, x1, #0xe35
  4406a8:	add	x3, x3, #0xe41
  4406ac:	mov	w2, #0x96                  	// #150
  4406b0:	bl	4049b0 <__assert_fail@plt>
  4406b4:	ldr	x8, [x0, #16]
  4406b8:	add	x8, x8, x1
  4406bc:	str	x8, [x0, #16]
  4406c0:	ret
  4406c4:	stp	x29, x30, [sp, #-48]!
  4406c8:	stp	x20, x19, [sp, #32]
  4406cc:	ldrb	w8, [x1]
  4406d0:	mov	x19, x1
  4406d4:	mov	x20, x0
  4406d8:	str	x21, [sp, #16]
  4406dc:	mov	x29, sp
  4406e0:	strb	w8, [x0]
  4406e4:	cbz	w8, 4406f4 <argp_parse@@Base+0x6048>
  4406e8:	ldur	x8, [x19, #4]
  4406ec:	stur	x8, [x20, #4]
  4406f0:	b	4406f8 <argp_parse@@Base+0x604c>
  4406f4:	stur	xzr, [x20, #4]
  4406f8:	ldrb	w8, [x19, #12]
  4406fc:	strb	w8, [x20, #12]
  440700:	ldr	x1, [x19, #16]
  440704:	add	x8, x19, #0x28
  440708:	cmp	x1, x8
  44070c:	b.ne	440724 <argp_parse@@Base+0x6078>  // b.any
  440710:	ldr	x2, [x19, #24]
  440714:	add	x21, x20, #0x28
  440718:	mov	x0, x21
  44071c:	bl	403e80 <memcpy@plt>
  440720:	mov	x1, x21
  440724:	str	x1, [x20, #16]
  440728:	ldr	x8, [x19, #24]
  44072c:	str	x8, [x20, #24]
  440730:	ldrb	w8, [x19, #32]
  440734:	strb	w8, [x20, #32]
  440738:	cbz	w8, 440744 <argp_parse@@Base+0x6098>
  44073c:	ldr	w8, [x19, #36]
  440740:	str	w8, [x20, #36]
  440744:	ldp	x20, x19, [sp, #32]
  440748:	ldr	x21, [sp, #16]
  44074c:	ldp	x29, x30, [sp], #48
  440750:	ret
  440754:	stp	x29, x30, [sp, #-48]!
  440758:	stp	x20, x19, [sp, #32]
  44075c:	ldrb	w10, [x0]
  440760:	mov	x19, x0
  440764:	str	x21, [sp, #16]
  440768:	mov	x29, sp
  44076c:	and	w8, w10, #0xf8
  440770:	cmp	w8, #0x30
  440774:	b.ne	4407f4 <argp_parse@@Base+0x6148>  // b.any
  440778:	mov	w20, wzr
  44077c:	mov	x8, x19
  440780:	lsl	w9, w20, #3
  440784:	add	w9, w9, w10, uxtb
  440788:	sub	w20, w9, #0x30
  44078c:	cmp	w20, #0xfff
  440790:	b.hi	440a90 <argp_parse@@Base+0x63e4>  // b.pmore
  440794:	ldrb	w10, [x8, #1]
  440798:	add	x9, x8, #0x1
  44079c:	and	w8, w10, #0xf8
  4407a0:	cmp	w8, #0x30
  4407a4:	mov	x8, x9
  4407a8:	b.eq	440780 <argp_parse@@Base+0x60d4>  // b.none
  4407ac:	cbnz	w10, 440a90 <argp_parse@@Base+0x63e4>
  4407b0:	sub	x8, x9, x19
  4407b4:	and	w9, w20, #0xc00
  4407b8:	orr	w9, w9, #0x3ff
  4407bc:	cmp	x8, #0x5
  4407c0:	mov	w19, #0xfff                 	// #4095
  4407c4:	mov	w0, #0x20                  	// #32
  4407c8:	csel	w21, w9, w19, lt  // lt = tstop
  4407cc:	bl	44a010 <argp_parse@@Base+0xf964>
  4407d0:	mov	w8, #0x13d                 	// #317
  4407d4:	stp	w19, w20, [x0, #4]
  4407d8:	str	w21, [x0, #12]
  4407dc:	strh	w8, [x0]
  4407e0:	strb	wzr, [x0, #17]
  4407e4:	ldp	x20, x19, [sp, #32]
  4407e8:	ldr	x21, [sp, #16]
  4407ec:	ldp	x29, x30, [sp], #48
  4407f0:	ret
  4407f4:	mov	w9, #0x1                   	// #1
  4407f8:	mov	w8, #0x1                   	// #1
  4407fc:	b	440810 <argp_parse@@Base+0x6164>
  440800:	mov	w11, #0x1                   	// #1
  440804:	ldrb	w10, [x19, x9]
  440808:	add	x8, x11, x8
  44080c:	add	x9, x9, #0x1
  440810:	and	w10, w10, #0xff
  440814:	cmp	w10, #0x2c
  440818:	b.le	440834 <argp_parse@@Base+0x6188>
  44081c:	cmp	w10, #0x2d
  440820:	b.eq	440800 <argp_parse@@Base+0x6154>  // b.none
  440824:	cmp	w10, #0x3d
  440828:	mov	w11, #0x1                   	// #1
  44082c:	b.eq	440804 <argp_parse@@Base+0x6158>  // b.none
  440830:	b	440844 <argp_parse@@Base+0x6198>
  440834:	cmp	w10, #0x2b
  440838:	mov	w11, #0x1                   	// #1
  44083c:	b.eq	440804 <argp_parse@@Base+0x6158>  // b.none
  440840:	cbz	w10, 44084c <argp_parse@@Base+0x61a0>
  440844:	mov	x11, xzr
  440848:	b	440804 <argp_parse@@Base+0x6158>
  44084c:	lsr	x9, x8, #59
  440850:	cbnz	x9, 440aa4 <argp_parse@@Base+0x63f8>
  440854:	lsl	x0, x8, #4
  440858:	bl	44a010 <argp_parse@@Base+0xf964>
  44085c:	mov	x9, #0x280000000000        	// #43980465111040
  440860:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440864:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440868:	adrp	x15, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  44086c:	mov	x16, xzr
  440870:	mov	w8, #0x1                   	// #1
  440874:	movk	x9, #0x2000, lsl #48
  440878:	add	x10, x10, #0xed0
  44087c:	add	x11, x11, #0xeaf
  440880:	mov	w12, #0x124                 	// #292
  440884:	mov	w13, #0x92                  	// #146
  440888:	mov	w14, #0x49                  	// #73
  44088c:	add	x15, x15, #0xe9a
  440890:	mov	w17, wzr
  440894:	b	4408a4 <argp_parse@@Base+0x61f8>
  440898:	mov	w18, #0xfff                 	// #4095
  44089c:	orr	w17, w17, w18
  4408a0:	add	x19, x19, #0x1
  4408a4:	ldrb	w18, [x19]
  4408a8:	sub	w1, w18, #0x61
  4408ac:	cmp	w1, #0x14
  4408b0:	b.hi	4408d8 <argp_parse@@Base+0x622c>  // b.pmore
  4408b4:	adr	x2, 440898 <argp_parse@@Base+0x61ec>
  4408b8:	ldrb	w18, [x15, x1]
  4408bc:	add	x2, x2, x18, lsl #2
  4408c0:	mov	w18, #0x9c0                 	// #2496
  4408c4:	br	x2
  4408c8:	mov	w18, #0x438                 	// #1080
  4408cc:	b	44089c <argp_parse@@Base+0x61f0>
  4408d0:	mov	w18, #0x207                 	// #519
  4408d4:	b	44089c <argp_parse@@Base+0x61f0>
  4408d8:	cmp	w18, #0x3d
  4408dc:	b.hi	440a8c <argp_parse@@Base+0x63e0>  // b.pmore
  4408e0:	lsl	x1, x8, x18
  4408e4:	tst	x1, x9
  4408e8:	b.eq	440a8c <argp_parse@@Base+0x63e0>  // b.none
  4408ec:	mov	x4, x19
  4408f0:	ldrb	w3, [x4, #1]!
  4408f4:	sub	w1, w3, #0x30
  4408f8:	cmp	w1, #0x8
  4408fc:	b.cs	440950 <argp_parse@@Base+0x62a4>  // b.hs, b.nlast
  440900:	mov	w1, wzr
  440904:	lsl	w1, w1, #3
  440908:	add	w1, w1, w3, uxtb
  44090c:	sub	w1, w1, #0x30
  440910:	cmp	w1, #0xfff
  440914:	b.hi	440a8c <argp_parse@@Base+0x63e0>  // b.pmore
  440918:	ldrb	w3, [x4, #1]
  44091c:	add	x19, x4, #0x1
  440920:	mov	x4, x19
  440924:	and	w2, w3, #0xf8
  440928:	cmp	w2, #0x30
  44092c:	b.eq	440904 <argp_parse@@Base+0x6258>  // b.none
  440930:	cbnz	w17, 440a8c <argp_parse@@Base+0x63e0>
  440934:	mov	w2, #0x1                   	// #1
  440938:	mov	w17, #0xfff                 	// #4095
  44093c:	cbz	w3, 44097c <argp_parse@@Base+0x62d0>
  440940:	cmp	w3, #0x2c
  440944:	mov	w3, #0xfff                 	// #4095
  440948:	b.eq	440a14 <argp_parse@@Base+0x6368>  // b.none
  44094c:	b	440a8c <argp_parse@@Base+0x63e0>
  440950:	cmp	w3, #0x67
  440954:	b.eq	440984 <argp_parse@@Base+0x62d8>  // b.none
  440958:	cmp	w3, #0x6f
  44095c:	b.eq	440998 <argp_parse@@Base+0x62ec>  // b.none
  440960:	cmp	w3, #0x75
  440964:	b.ne	4409ac <argp_parse@@Base+0x6300>  // b.any
  440968:	mov	w3, wzr
  44096c:	add	x19, x19, #0x2
  440970:	mov	w2, #0x3                   	// #3
  440974:	mov	w1, #0x1c0                 	// #448
  440978:	b	440a14 <argp_parse@@Base+0x6368>
  44097c:	mov	w3, #0xfff                 	// #4095
  440980:	b	440a14 <argp_parse@@Base+0x6368>
  440984:	mov	w3, wzr
  440988:	add	x19, x19, #0x2
  44098c:	mov	w2, #0x3                   	// #3
  440990:	mov	w1, #0x38                  	// #56
  440994:	b	440a14 <argp_parse@@Base+0x6368>
  440998:	mov	w3, wzr
  44099c:	add	x19, x19, #0x2
  4409a0:	mov	w2, #0x3                   	// #3
  4409a4:	mov	w1, #0x7                   	// #7
  4409a8:	b	440a14 <argp_parse@@Base+0x6368>
  4409ac:	mov	w1, wzr
  4409b0:	mov	w2, #0x1                   	// #1
  4409b4:	mov	x19, x4
  4409b8:	b	4409cc <argp_parse@@Base+0x6320>
  4409bc:	orr	w1, w1, w14
  4409c0:	mov	w4, w2
  4409c4:	ldrb	w3, [x19, #1]!
  4409c8:	mov	w2, w4
  4409cc:	and	w3, w3, #0xff
  4409d0:	sub	w3, w3, #0x58
  4409d4:	cmp	w3, #0x20
  4409d8:	b.hi	440a10 <argp_parse@@Base+0x6364>  // b.pmore
  4409dc:	adr	x5, 4409bc <argp_parse@@Base+0x6310>
  4409e0:	ldrb	w4, [x11, x3]
  4409e4:	add	x5, x5, x4, lsl #2
  4409e8:	mov	w4, #0x2                   	// #2
  4409ec:	br	x5
  4409f0:	orr	w1, w1, w12
  4409f4:	b	4409c0 <argp_parse@@Base+0x6314>
  4409f8:	orr	w1, w1, #0x200
  4409fc:	b	4409c0 <argp_parse@@Base+0x6314>
  440a00:	orr	w1, w1, #0xc00
  440a04:	b	4409c0 <argp_parse@@Base+0x6314>
  440a08:	orr	w1, w1, w13
  440a0c:	b	4409c0 <argp_parse@@Base+0x6314>
  440a10:	mov	w3, wzr
  440a14:	add	x4, x0, x16, lsl #4
  440a18:	cmp	w17, #0x0
  440a1c:	strb	w18, [x4]
  440a20:	csinv	w18, w17, wzr, ne  // ne = any
  440a24:	and	w18, w18, w1
  440a28:	cmp	w3, #0x0
  440a2c:	csel	w18, w18, w3, eq  // eq = none
  440a30:	strb	w2, [x4, #1]
  440a34:	stp	w17, w1, [x4, #4]
  440a38:	str	w18, [x4, #12]
  440a3c:	ldrb	w18, [x19]
  440a40:	add	x1, x16, #0x1
  440a44:	sub	w2, w18, #0x2b
  440a48:	cmp	w2, #0x12
  440a4c:	b.hi	440a70 <argp_parse@@Base+0x63c4>  // b.pmore
  440a50:	adr	x3, 4408ec <argp_parse@@Base+0x6240>
  440a54:	ldrb	w16, [x10, x2]
  440a58:	add	x3, x3, x16, lsl #2
  440a5c:	mov	x16, x1
  440a60:	br	x3
  440a64:	add	x19, x19, #0x1
  440a68:	mov	x16, x1
  440a6c:	b	440890 <argp_parse@@Base+0x61e4>
  440a70:	cbnz	w18, 440a8c <argp_parse@@Base+0x63e0>
  440a74:	add	x8, x0, x1, lsl #4
  440a78:	strb	wzr, [x8, #1]
  440a7c:	ldp	x20, x19, [sp, #32]
  440a80:	ldr	x21, [sp, #16]
  440a84:	ldp	x29, x30, [sp], #48
  440a88:	ret
  440a8c:	bl	4046b0 <free@plt>
  440a90:	mov	x0, xzr
  440a94:	ldp	x20, x19, [sp, #32]
  440a98:	ldr	x21, [sp, #16]
  440a9c:	ldp	x29, x30, [sp], #48
  440aa0:	ret
  440aa4:	bl	40eb80 <wcrtomb@plt+0xa090>
  440aa8:	sub	sp, sp, #0xa0
  440aac:	mov	x1, x0
  440ab0:	mov	x2, sp
  440ab4:	mov	w0, wzr
  440ab8:	stp	x29, x30, [sp, #128]
  440abc:	str	x19, [sp, #144]
  440ac0:	add	x29, sp, #0x80
  440ac4:	bl	4049f0 <__xstat@plt>
  440ac8:	cbz	w0, 440ae0 <argp_parse@@Base+0x6434>
  440acc:	mov	x0, xzr
  440ad0:	ldr	x19, [sp, #144]
  440ad4:	ldp	x29, x30, [sp, #128]
  440ad8:	add	sp, sp, #0xa0
  440adc:	ret
  440ae0:	ldr	w19, [sp, #16]
  440ae4:	mov	w0, #0x20                  	// #32
  440ae8:	bl	44a010 <argp_parse@@Base+0xf964>
  440aec:	mov	w8, #0x13d                 	// #317
  440af0:	mov	w9, #0xfff                 	// #4095
  440af4:	strh	w8, [x0]
  440af8:	stp	w9, w19, [x0, #4]
  440afc:	str	w9, [x0, #12]
  440b00:	strb	wzr, [x0, #17]
  440b04:	ldr	x19, [sp, #144]
  440b08:	ldp	x29, x30, [sp, #128]
  440b0c:	add	sp, sp, #0xa0
  440b10:	ret
  440b14:	ldrb	w17, [x3, #1]
  440b18:	and	w0, w0, #0xfff
  440b1c:	mov	w8, wzr
  440b20:	cbz	w17, 440c1c <argp_parse@@Base+0x6570>
  440b24:	tst	w1, #0x1
  440b28:	mov	w14, #0xc00                 	// #3072
  440b2c:	and	w9, w1, #0x1
  440b30:	mvn	w10, w2
  440b34:	add	x11, x3, #0x8
  440b38:	mov	w12, #0x49                  	// #73
  440b3c:	mov	w13, #0x124                 	// #292
  440b40:	csel	w14, w14, wzr, ne  // ne = any
  440b44:	mov	w15, #0x92                  	// #146
  440b48:	b	440b60 <argp_parse@@Base+0x64b4>
  440b4c:	orr	w8, w18, w8
  440b50:	bic	w0, w0, w18
  440b54:	ldrb	w17, [x11, #9]
  440b58:	add	x11, x11, #0x10
  440b5c:	cbz	w17, 440c1c <argp_parse@@Base+0x6570>
  440b60:	ldr	w2, [x11, #4]
  440b64:	ldp	w16, w18, [x11, #-4]
  440b68:	and	w1, w17, #0xff
  440b6c:	cmp	w1, #0x2
  440b70:	bic	w17, w14, w2
  440b74:	b.eq	440bac <argp_parse@@Base+0x6500>  // b.none
  440b78:	cmp	w1, #0x3
  440b7c:	b.ne	440bc0 <argp_parse@@Base+0x6514>  // b.any
  440b80:	and	w18, w18, w0
  440b84:	tst	w18, w13
  440b88:	csel	w1, wzr, w13, eq  // eq = none
  440b8c:	tst	w18, w15
  440b90:	csel	w2, wzr, w15, eq  // eq = none
  440b94:	tst	w18, w12
  440b98:	orr	w18, w2, w18
  440b9c:	csel	w3, wzr, w12, eq  // eq = none
  440ba0:	orr	w18, w18, w1
  440ba4:	orr	w18, w18, w3
  440ba8:	b	440bc0 <argp_parse@@Base+0x6514>
  440bac:	and	w1, w0, w12
  440bb0:	orr	w1, w1, w9
  440bb4:	orr	w2, w18, w12
  440bb8:	cmp	w1, #0x0
  440bbc:	csel	w18, w18, w2, eq  // eq = none
  440bc0:	ldurb	w1, [x11, #-8]
  440bc4:	cmp	w16, #0x0
  440bc8:	csel	w2, w16, w10, ne  // ne = any
  440bcc:	bic	w2, w2, w17
  440bd0:	cmp	w1, #0x2b
  440bd4:	and	w18, w2, w18
  440bd8:	b.eq	440c10 <argp_parse@@Base+0x6564>  // b.none
  440bdc:	cmp	w1, #0x2d
  440be0:	b.eq	440b4c <argp_parse@@Base+0x64a0>  // b.none
  440be4:	cmp	w1, #0x3d
  440be8:	b.ne	440b54 <argp_parse@@Base+0x64a8>  // b.any
  440bec:	cmp	w16, #0x0
  440bf0:	csinv	w16, wzr, w16, eq  // eq = none
  440bf4:	orr	w16, w16, w17
  440bf8:	mvn	w17, w16
  440bfc:	and	w16, w16, w0
  440c00:	and	w17, w17, #0xfff
  440c04:	orr	w8, w17, w8
  440c08:	orr	w0, w18, w16
  440c0c:	b	440b54 <argp_parse@@Base+0x64a8>
  440c10:	orr	w8, w18, w8
  440c14:	orr	w0, w18, w0
  440c18:	b	440b54 <argp_parse@@Base+0x64a8>
  440c1c:	cbz	x4, 440c24 <argp_parse@@Base+0x6578>
  440c20:	str	w8, [x4]
  440c24:	ret
  440c28:	stp	x29, x30, [sp, #-32]!
  440c2c:	stp	x20, x19, [sp, #16]
  440c30:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  440c34:	ldr	w19, [x8, #4056]
  440c38:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440c3c:	mov	w20, w0
  440c40:	add	x1, x1, #0xee3
  440c44:	mov	w2, #0x5                   	// #5
  440c48:	mov	x0, xzr
  440c4c:	mov	x29, sp
  440c50:	bl	4048b0 <dcgettext@plt>
  440c54:	mov	x2, x0
  440c58:	mov	w0, w19
  440c5c:	mov	w1, w20
  440c60:	bl	403f60 <error@plt>
  440c64:	bl	404560 <abort@plt>
  440c68:	stp	x29, x30, [sp, #-32]!
  440c6c:	stp	x20, x19, [sp, #16]
  440c70:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  440c74:	ldr	w19, [x8, #4056]
  440c78:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440c7c:	mov	w20, w0
  440c80:	add	x1, x1, #0xf0e
  440c84:	mov	w2, #0x5                   	// #5
  440c88:	mov	x0, xzr
  440c8c:	mov	x29, sp
  440c90:	bl	4048b0 <dcgettext@plt>
  440c94:	mov	x2, x0
  440c98:	mov	w0, w19
  440c9c:	mov	w1, w20
  440ca0:	bl	403f60 <error@plt>
  440ca4:	bl	404560 <abort@plt>
  440ca8:	stp	x29, x30, [sp, #-48]!
  440cac:	mov	w8, #0x4900                	// #18688
  440cb0:	movk	w8, #0x8, lsl #16
  440cb4:	orr	w2, w2, w8
  440cb8:	str	x21, [sp, #16]
  440cbc:	stp	x20, x19, [sp, #32]
  440cc0:	mov	x29, sp
  440cc4:	mov	x19, x3
  440cc8:	bl	45e1c4 <_obstack_memory_used@@Base+0x13000>
  440ccc:	tbnz	w0, #31, 440cf0 <argp_parse@@Base+0x6644>
  440cd0:	mov	w20, w0
  440cd4:	bl	404520 <fdopendir@plt>
  440cd8:	cbz	x0, 440d04 <argp_parse@@Base+0x6658>
  440cdc:	str	w20, [x19]
  440ce0:	ldp	x20, x19, [sp, #32]
  440ce4:	ldr	x21, [sp, #16]
  440ce8:	ldp	x29, x30, [sp], #48
  440cec:	ret
  440cf0:	mov	x0, xzr
  440cf4:	ldp	x20, x19, [sp, #32]
  440cf8:	ldr	x21, [sp, #16]
  440cfc:	ldp	x29, x30, [sp], #48
  440d00:	ret
  440d04:	bl	4049c0 <__errno_location@plt>
  440d08:	ldr	w21, [x0]
  440d0c:	mov	x19, x0
  440d10:	mov	w0, w20
  440d14:	bl	4044d0 <close@plt>
  440d18:	mov	x0, xzr
  440d1c:	str	w21, [x19]
  440d20:	ldp	x20, x19, [sp, #32]
  440d24:	ldr	x21, [sp, #16]
  440d28:	ldp	x29, x30, [sp], #48
  440d2c:	ret
  440d30:	stp	x29, x30, [sp, #-96]!
  440d34:	stp	x28, x27, [sp, #16]
  440d38:	stp	x26, x25, [sp, #32]
  440d3c:	stp	x24, x23, [sp, #48]
  440d40:	stp	x22, x21, [sp, #64]
  440d44:	stp	x20, x19, [sp, #80]
  440d48:	mov	x29, sp
  440d4c:	sub	sp, sp, #0x580
  440d50:	add	x9, x0, #0x50
  440d54:	str	x9, [sp, #48]
  440d58:	add	x9, x0, #0x58
  440d5c:	str	x9, [sp, #64]
  440d60:	add	x9, x0, #0x20
  440d64:	mov	w13, #0x4144                	// #16708
  440d68:	str	x9, [sp, #56]
  440d6c:	mov	w12, #0x5344                	// #21316
  440d70:	movk	w13, #0x59, lsl #16
  440d74:	mov	w9, #0x9                   	// #9
  440d78:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440d7c:	movk	w12, #0x54, lsl #16
  440d80:	ldr	q0, [x10, #3904]
  440d84:	mov	w10, #0x11                  	// #17
  440d88:	orr	w9, w13, w9
  440d8c:	add	x11, sp, #0xb0
  440d90:	str	w9, [sp, #36]
  440d94:	orr	w9, w12, w10
  440d98:	str	w9, [sp, #32]
  440d9c:	mov	w9, #0x4854                	// #18516
  440da0:	add	x10, x11, #0x13
  440da4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440da8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440dac:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440db0:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440db4:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440db8:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440dbc:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440dc0:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440dc4:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  440dc8:	movk	w9, #0x5255, lsl #16
  440dcc:	str	x10, [sp, #160]
  440dd0:	orr	x10, x11, #0x1
  440dd4:	mov	x19, x0
  440dd8:	mov	w8, wzr
  440ddc:	mov	x23, xzr
  440de0:	add	x22, sp, #0xf0
  440de4:	mov	w14, #0xfffffffe            	// #-2
  440de8:	add	x1, x1, #0x198
  440dec:	add	x2, x2, #0x402
  440df0:	add	x3, x3, #0x474
  440df4:	mov	w4, #0x1                   	// #1
  440df8:	mov	w5, #0x38                  	// #56
  440dfc:	add	x6, x6, #0x4d0
  440e00:	add	x7, x7, #0x52c
  440e04:	sub	x30, x29, #0x30
  440e08:	add	x15, x15, #0x320
  440e0c:	add	x16, x16, #0x391
  440e10:	add	x17, x17, #0x546
  440e14:	add	x18, x18, #0xac
  440e18:	str	x10, [sp, #40]
  440e1c:	orr	x10, x11, #0x2
  440e20:	sub	w9, w9, #0xc0, lsl #12
  440e24:	stp	xzr, xzr, [sp, #112]
  440e28:	str	xzr, [sp, #104]
  440e2c:	str	xzr, [sp, #152]
  440e30:	sturh	wzr, [x29, #-48]
  440e34:	str	q0, [sp, #80]
  440e38:	str	x10, [sp, #24]
  440e3c:	str	w9, [sp, #20]
  440e40:	b	440e58 <argp_parse@@Base+0x67ac>
  440e44:	ldrsb	w8, [x17, x8]
  440e48:	cmp	x23, #0x11
  440e4c:	add	x23, x23, #0x1
  440e50:	strh	w8, [x30, x23, lsl #1]
  440e54:	b.gt	443a24 <argp_parse@@Base+0x9378>
  440e58:	cmp	w8, #0xc
  440e5c:	b.eq	443a1c <argp_parse@@Base+0x9370>  // b.none
  440e60:	sxtw	x20, w8
  440e64:	ldrsb	w24, [x1, x20]
  440e68:	cmn	w24, #0x5d
  440e6c:	b.eq	442674 <argp_parse@@Base+0x7fc8>  // b.none
  440e70:	cmn	w14, #0x2
  440e74:	b.ne	44260c <argp_parse@@Base+0x7f60>  // b.any
  440e78:	ldr	x9, [x19]
  440e7c:	b	440e88 <argp_parse@@Base+0x67dc>
  440e80:	add	x9, x9, #0x1
  440e84:	str	x9, [x19]
  440e88:	ldrb	w8, [x9]
  440e8c:	sub	w10, w8, #0x9
  440e90:	cmp	w10, #0x5
  440e94:	b.cc	440e80 <argp_parse@@Base+0x67d4>  // b.lo, b.ul, b.last
  440e98:	cmp	w8, #0x20
  440e9c:	b.eq	440e80 <argp_parse@@Base+0x67d4>  // b.none
  440ea0:	sub	w10, w8, #0x30
  440ea4:	cmp	w10, #0xa
  440ea8:	b.cs	440ec0 <argp_parse@@Base+0x6814>  // b.hs, b.nlast
  440eac:	cmp	w8, #0x2d
  440eb0:	b.eq	440ee4 <argp_parse@@Base+0x6838>  // b.none
  440eb4:	cmp	w8, #0x2b
  440eb8:	b.eq	440ee4 <argp_parse@@Base+0x6838>  // b.none
  440ebc:	b	440ff8 <argp_parse@@Base+0x694c>
  440ec0:	sub	w10, w8, #0x28
  440ec4:	cmp	w10, #0x52
  440ec8:	b.hi	442490 <argp_parse@@Base+0x7de4>  // b.pmore
  440ecc:	adrp	x13, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  440ed0:	add	x13, x13, #0xf50
  440ed4:	adr	x11, 440ee4 <argp_parse@@Base+0x6838>
  440ed8:	ldrh	w12, [x13, x10, lsl #1]
  440edc:	add	x11, x11, x12, lsl #2
  440ee0:	br	x11
  440ee4:	add	x9, x9, #0x1
  440ee8:	str	x9, [x19]
  440eec:	ldrb	w13, [x9]
  440ef0:	sub	w10, w13, #0x9
  440ef4:	cmp	w10, #0x5
  440ef8:	b.cc	440ee4 <argp_parse@@Base+0x6838>  // b.lo, b.ul, b.last
  440efc:	cmp	w13, #0x20
  440f00:	b.eq	440ee4 <argp_parse@@Base+0x6838>  // b.none
  440f04:	sub	w10, w13, #0x30
  440f08:	cmp	w10, #0x9
  440f0c:	b.hi	440e88 <argp_parse@@Base+0x67dc>  // b.pmore
  440f10:	b	440f5c <argp_parse@@Base+0x68b0>
  440f14:	mov	x8, xzr
  440f18:	b	440f24 <argp_parse@@Base+0x6878>
  440f1c:	sub	x8, x8, #0x1
  440f20:	cbz	x8, 440e88 <argp_parse@@Base+0x67dc>
  440f24:	mov	x10, x9
  440f28:	add	x9, x9, #0x1
  440f2c:	str	x9, [x19]
  440f30:	ldrb	w10, [x10]
  440f34:	cmp	w10, #0x28
  440f38:	b.eq	440f50 <argp_parse@@Base+0x68a4>  // b.none
  440f3c:	cmp	w10, #0x29
  440f40:	b.eq	440f1c <argp_parse@@Base+0x6870>  // b.none
  440f44:	cbz	w10, 4424a4 <argp_parse@@Base+0x7df8>
  440f48:	cbnz	x8, 440f24 <argp_parse@@Base+0x6878>
  440f4c:	b	440e88 <argp_parse@@Base+0x67dc>
  440f50:	add	x8, x8, #0x1
  440f54:	cbnz	x8, 440f24 <argp_parse@@Base+0x6878>
  440f58:	b	440e88 <argp_parse@@Base+0x67dc>
  440f5c:	cmp	w8, #0x2d
  440f60:	b.ne	441dd8 <argp_parse@@Base+0x772c>  // b.any
  440f64:	mov	x8, xzr
  440f68:	mov	x12, x9
  440f6c:	b	440f9c <argp_parse@@Base+0x68f0>
  440f70:	add	x11, x11, x10
  440f74:	add	x11, x11, #0x1
  440f78:	cmp	x8, x11
  440f7c:	b.lt	441e68 <argp_parse@@Base+0x77bc>  // b.tstop
  440f80:	ldrb	w13, [x12, #1]!
  440f84:	mov	w11, #0x30                  	// #48
  440f88:	sub	x10, x11, x10
  440f8c:	add	x8, x8, x10
  440f90:	sub	w11, w13, #0x30
  440f94:	cmp	w11, #0xa
  440f98:	b.cs	441e98 <argp_parse@@Base+0x77ec>  // b.hs, b.nlast
  440f9c:	tbnz	x8, #63, 440fb4 <argp_parse@@Base+0x6908>
  440fa0:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  440fa4:	movk	x10, #0xccc, lsl #48
  440fa8:	cmp	x8, x10
  440fac:	b.le	440fc8 <argp_parse@@Base+0x691c>
  440fb0:	b	441e68 <argp_parse@@Base+0x77bc>
  440fb4:	mov	x10, #0x3333333333333333    	// #3689348814741910323
  440fb8:	movk	x10, #0x3334
  440fbc:	movk	x10, #0xf333, lsl #48
  440fc0:	cmp	x8, x10
  440fc4:	b.lt	441e68 <argp_parse@@Base+0x77bc>  // b.tstop
  440fc8:	add	x8, x8, x8, lsl #2
  440fcc:	and	w10, w13, #0xff
  440fd0:	mov	x11, #0xffffffffffffffcf    	// #-49
  440fd4:	lsl	x8, x8, #1
  440fd8:	cmp	w10, #0x30
  440fdc:	and	x10, x13, #0xff
  440fe0:	movk	x11, #0x7fff, lsl #48
  440fe4:	b.hi	440f70 <argp_parse@@Base+0x68c4>  // b.pmore
  440fe8:	add	x11, x10, x11
  440fec:	cmp	x11, x8
  440ff0:	b.ge	440f80 <argp_parse@@Base+0x68d4>  // b.tcont
  440ff4:	b	441e68 <argp_parse@@Base+0x77bc>
  440ff8:	mov	w10, wzr
  440ffc:	mov	w13, w8
  441000:	b	441ddc <argp_parse@@Base+0x7730>
  441004:	add	x10, sp, #0xb0
  441008:	ldr	x11, [sp, #160]
  44100c:	cmp	x10, x11
  441010:	b.cs	44101c <argp_parse@@Base+0x6970>  // b.hs, b.nlast
  441014:	strb	w8, [x10], #1
  441018:	ldr	x9, [x19]
  44101c:	mov	x8, x9
  441020:	add	x9, x9, #0x1
  441024:	str	x9, [x19]
  441028:	ldrb	w8, [x8, #1]
  44102c:	mov	x12, #0x3ffffff03ffffff     	// #288230371923853311
  441030:	sub	w11, w8, #0x41
  441034:	cmp	w11, #0x3a
  441038:	lsr	x11, x12, x11
  44103c:	cset	w12, cc  // cc = lo, ul, last
  441040:	cmp	w8, #0x2e
  441044:	and	w11, w11, w12
  441048:	b.eq	441008 <argp_parse@@Base+0x695c>  // b.none
  44104c:	tbnz	w11, #0, 441008 <argp_parse@@Base+0x695c>
  441050:	strb	wzr, [x10]
  441054:	ldrb	w8, [sp, #176]
  441058:	cbz	w8, 441084 <argp_parse@@Base+0x69d8>
  44105c:	ldr	x9, [sp, #40]
  441060:	and	w10, w8, #0xff
  441064:	sub	w10, w10, #0x61
  441068:	sub	w11, w8, #0x20
  44106c:	cmp	w10, #0x1a
  441070:	csel	w10, w11, w8, cc  // cc = lo, ul, last
  441074:	ldrb	w8, [x9]
  441078:	sturb	w10, [x9, #-1]
  44107c:	add	x9, x9, #0x1
  441080:	cbnz	w8, 441060 <argp_parse@@Base+0x69b4>
  441084:	ldrh	w8, [sp, #176]
  441088:	ldrb	w9, [sp, #178]
  44108c:	mov	w10, #0x4d41                	// #19777
  441090:	eor	w8, w8, w10
  441094:	orr	w8, w8, w9
  441098:	tst	w8, #0xffff
  44109c:	b.eq	441e8c <argp_parse@@Base+0x77e0>  // b.none
  4410a0:	ldr	w8, [sp, #176]
  4410a4:	ldrb	w9, [sp, #180]
  4410a8:	mov	w10, #0x2e41                	// #11841
  4410ac:	movk	w10, #0x2e4d, lsl #16
  4410b0:	eor	w8, w8, w10
  4410b4:	orr	w8, w8, w9
  4410b8:	cbz	w8, 442020 <argp_parse@@Base+0x7974>
  4410bc:	ldrh	w8, [sp, #176]
  4410c0:	ldrb	w9, [sp, #178]
  4410c4:	mov	w10, #0x4d50                	// #19792
  4410c8:	eor	w8, w8, w10
  4410cc:	orr	w8, w8, w9
  4410d0:	tst	w8, #0xffff
  4410d4:	b.eq	44202c <argp_parse@@Base+0x7980>  // b.none
  4410d8:	ldr	w8, [sp, #176]
  4410dc:	ldrb	w9, [sp, #180]
  4410e0:	mov	w10, #0x2e41                	// #11841
  4410e4:	movk	w10, #0x2e4d, lsl #16
  4410e8:	add	w10, w10, #0xf
  4410ec:	eor	w8, w8, w10
  4410f0:	orr	w8, w8, w9
  4410f4:	cbz	w8, 44205c <argp_parse@@Base+0x79b0>
  4410f8:	add	x0, sp, #0xb0
  4410fc:	bl	403f00 <strlen@plt>
  441100:	mov	x21, x0
  441104:	cmp	x0, #0x3
  441108:	b.eq	441120 <argp_parse@@Base+0x6a74>  // b.none
  44110c:	cmp	x21, #0x4
  441110:	b.ne	442068 <argp_parse@@Base+0x79bc>  // b.any
  441114:	ldrb	w8, [sp, #179]
  441118:	cmp	w8, #0x2e
  44111c:	b.ne	442068 <argp_parse@@Base+0x79bc>  // b.any
  441120:	ldrh	w8, [sp, #176]
  441124:	ldrb	w9, [sp, #178]
  441128:	mov	w10, #0x414a                	// #16714
  44112c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441130:	eor	w8, w8, w10
  441134:	mov	w10, #0x4e                  	// #78
  441138:	eor	w9, w9, w10
  44113c:	orr	w8, w8, w9
  441140:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441144:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441148:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44114c:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441150:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441154:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441158:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44115c:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441160:	tst	w8, #0xffff
  441164:	add	x1, x1, #0x198
  441168:	add	x2, x2, #0x402
  44116c:	add	x3, x3, #0x474
  441170:	mov	w4, #0x1                   	// #1
  441174:	mov	w5, #0x38                  	// #56
  441178:	add	x6, x6, #0x4d0
  44117c:	add	x7, x7, #0x52c
  441180:	sub	x30, x29, #0x30
  441184:	add	x15, x15, #0x320
  441188:	add	x16, x16, #0x391
  44118c:	add	x17, x17, #0x546
  441190:	add	x18, x18, #0xac
  441194:	mov	w11, #0x52                  	// #82
  441198:	b.eq	442400 <argp_parse@@Base+0x7d54>  // b.none
  44119c:	ldrh	w8, [sp, #176]
  4411a0:	ldrb	w9, [sp, #178]
  4411a4:	mov	w10, #0x4546                	// #17734
  4411a8:	eor	w8, w8, w10
  4411ac:	mov	w10, #0x42                  	// #66
  4411b0:	eor	w9, w9, w10
  4411b4:	orr	w8, w8, w9
  4411b8:	tst	w8, #0xffff
  4411bc:	b.eq	442478 <argp_parse@@Base+0x7dcc>  // b.none
  4411c0:	ldrh	w8, [sp, #176]
  4411c4:	ldrb	w9, [sp, #178]
  4411c8:	mov	w10, #0x414d                	// #16717
  4411cc:	eor	w8, w8, w10
  4411d0:	eor	w9, w9, w11
  4411d4:	orr	w8, w8, w9
  4411d8:	tst	w8, #0xffff
  4411dc:	b.eq	442484 <argp_parse@@Base+0x7dd8>  // b.none
  4411e0:	ldrh	w8, [sp, #176]
  4411e4:	ldrb	w9, [sp, #178]
  4411e8:	mov	w10, #0x5041                	// #20545
  4411ec:	eor	w8, w8, w10
  4411f0:	eor	w9, w9, w11
  4411f4:	orr	w8, w8, w9
  4411f8:	tst	w8, #0xffff
  4411fc:	b.eq	4424bc <argp_parse@@Base+0x7e10>  // b.none
  441200:	ldrh	w8, [sp, #176]
  441204:	ldrb	w9, [sp, #178]
  441208:	mov	w10, #0x414d                	// #16717
  44120c:	eor	w8, w8, w10
  441210:	mov	w10, #0x59                  	// #89
  441214:	eor	w9, w9, w10
  441218:	orr	w8, w8, w9
  44121c:	tst	w8, #0xffff
  441220:	b.eq	4424d4 <argp_parse@@Base+0x7e28>  // b.none
  441224:	ldrh	w8, [sp, #176]
  441228:	ldrb	w9, [sp, #178]
  44122c:	mov	w11, #0x554a                	// #21834
  441230:	mov	w10, #0x4e                  	// #78
  441234:	eor	w8, w8, w11
  441238:	eor	w9, w9, w10
  44123c:	orr	w8, w8, w9
  441240:	tst	w8, #0xffff
  441244:	b.eq	4424c8 <argp_parse@@Base+0x7e1c>  // b.none
  441248:	ldrh	w8, [sp, #176]
  44124c:	ldrb	w9, [sp, #178]
  441250:	mov	w10, #0x4c                  	// #76
  441254:	eor	w8, w8, w11
  441258:	eor	w9, w9, w10
  44125c:	orr	w8, w8, w9
  441260:	tst	w8, #0xffff
  441264:	b.eq	4424e0 <argp_parse@@Base+0x7e34>  // b.none
  441268:	ldrh	w8, [sp, #176]
  44126c:	ldrb	w9, [sp, #178]
  441270:	mov	w10, #0x5541                	// #21825
  441274:	eor	w8, w8, w10
  441278:	mov	w10, #0x47                  	// #71
  44127c:	eor	w9, w9, w10
  441280:	orr	w8, w8, w9
  441284:	tst	w8, #0xffff
  441288:	b.eq	4424ec <argp_parse@@Base+0x7e40>  // b.none
  44128c:	ldrh	w8, [sp, #176]
  441290:	ldrb	w9, [sp, #178]
  441294:	mov	w10, #0x4553                	// #17747
  441298:	mov	w11, #0x50                  	// #80
  44129c:	eor	w8, w8, w10
  4412a0:	eor	w9, w9, w11
  4412a4:	orr	w8, w8, w9
  4412a8:	tst	w8, #0xffff
  4412ac:	b.eq	4424f8 <argp_parse@@Base+0x7e4c>  // b.none
  4412b0:	ldrh	w8, [sp, #176]
  4412b4:	ldrb	w9, [sp, #178]
  4412b8:	eor	w8, w8, w10
  4412bc:	eor	w9, w9, w11
  4412c0:	orr	w8, w8, w9
  4412c4:	tst	w8, #0xffff
  4412c8:	b.eq	442504 <argp_parse@@Base+0x7e58>  // b.none
  4412cc:	ldrh	w8, [sp, #176]
  4412d0:	ldrb	w9, [sp, #178]
  4412d4:	mov	w10, #0x434f                	// #17231
  4412d8:	eor	w8, w8, w10
  4412dc:	mov	w10, #0x54                  	// #84
  4412e0:	eor	w9, w9, w10
  4412e4:	orr	w8, w8, w9
  4412e8:	tst	w8, #0xffff
  4412ec:	b.eq	442510 <argp_parse@@Base+0x7e64>  // b.none
  4412f0:	ldrh	w8, [sp, #176]
  4412f4:	ldrb	w9, [sp, #178]
  4412f8:	mov	w10, #0x4f4e                	// #20302
  4412fc:	eor	w8, w8, w10
  441300:	mov	w10, #0x56                  	// #86
  441304:	eor	w9, w9, w10
  441308:	orr	w8, w8, w9
  44130c:	tst	w8, #0xffff
  441310:	b.eq	44251c <argp_parse@@Base+0x7e70>  // b.none
  441314:	ldrh	w8, [sp, #176]
  441318:	ldrb	w9, [sp, #178]
  44131c:	mov	w10, #0x4544                	// #17732
  441320:	eor	w8, w8, w10
  441324:	mov	w10, #0x43                  	// #67
  441328:	eor	w9, w9, w10
  44132c:	orr	w8, w8, w9
  441330:	tst	w8, #0xffff
  441334:	b.eq	442528 <argp_parse@@Base+0x7e7c>  // b.none
  441338:	ldrh	w8, [sp, #176]
  44133c:	ldrb	w9, [sp, #178]
  441340:	mov	w10, #0x5553                	// #21843
  441344:	eor	w8, w8, w10
  441348:	mov	w10, #0x4e                  	// #78
  44134c:	eor	w9, w9, w10
  441350:	orr	w8, w8, w9
  441354:	tst	w8, #0xffff
  441358:	b.eq	442534 <argp_parse@@Base+0x7e88>  // b.none
  44135c:	ldrh	w8, [sp, #176]
  441360:	ldrb	w9, [sp, #178]
  441364:	mov	w10, #0x4f4d                	// #20301
  441368:	eor	w8, w8, w10
  44136c:	mov	w10, #0x4e                  	// #78
  441370:	eor	w9, w9, w10
  441374:	orr	w8, w8, w9
  441378:	tst	w8, #0xffff
  44137c:	b.eq	442540 <argp_parse@@Base+0x7e94>  // b.none
  441380:	ldrh	w8, [sp, #176]
  441384:	ldrb	w9, [sp, #178]
  441388:	mov	w10, #0x5554                	// #21844
  44138c:	eor	w8, w8, w10
  441390:	mov	w10, #0x45                  	// #69
  441394:	eor	w9, w9, w10
  441398:	orr	w8, w8, w9
  44139c:	tst	w8, #0xffff
  4413a0:	b.eq	44254c <argp_parse@@Base+0x7ea0>  // b.none
  4413a4:	ldrh	w8, [sp, #176]
  4413a8:	ldrb	w9, [sp, #178]
  4413ac:	mov	w10, #0x5554                	// #21844
  4413b0:	eor	w8, w8, w10
  4413b4:	mov	w10, #0x45                  	// #69
  4413b8:	eor	w9, w9, w10
  4413bc:	orr	w8, w8, w9
  4413c0:	tst	w8, #0xffff
  4413c4:	b.eq	442558 <argp_parse@@Base+0x7eac>  // b.none
  4413c8:	ldrh	w8, [sp, #176]
  4413cc:	ldrb	w9, [sp, #178]
  4413d0:	mov	w10, #0x4557                	// #17751
  4413d4:	eor	w8, w8, w10
  4413d8:	mov	w10, #0x44                  	// #68
  4413dc:	eor	w9, w9, w10
  4413e0:	orr	w8, w8, w9
  4413e4:	tst	w8, #0xffff
  4413e8:	b.eq	442564 <argp_parse@@Base+0x7eb8>  // b.none
  4413ec:	ldrh	w8, [sp, #176]
  4413f0:	ldrb	w9, [sp, #178]
  4413f4:	mov	w10, #0x4557                	// #17751
  4413f8:	eor	w8, w8, w10
  4413fc:	mov	w10, #0x44                  	// #68
  441400:	eor	w9, w9, w10
  441404:	orr	w8, w8, w9
  441408:	tst	w8, #0xffff
  44140c:	b.eq	442570 <argp_parse@@Base+0x7ec4>  // b.none
  441410:	ldrh	w8, [sp, #176]
  441414:	ldrb	w9, [sp, #178]
  441418:	mov	w10, #0x4854                	// #18516
  44141c:	eor	w8, w8, w10
  441420:	mov	w10, #0x55                  	// #85
  441424:	eor	w9, w9, w10
  441428:	orr	w8, w8, w9
  44142c:	tst	w8, #0xffff
  441430:	b.eq	44257c <argp_parse@@Base+0x7ed0>  // b.none
  441434:	ldrh	w8, [sp, #176]
  441438:	ldrb	w9, [sp, #178]
  44143c:	mov	w10, #0x4854                	// #18516
  441440:	eor	w8, w8, w10
  441444:	mov	w10, #0x55                  	// #85
  441448:	eor	w9, w9, w10
  44144c:	orr	w8, w8, w9
  441450:	tst	w8, #0xffff
  441454:	b.eq	442588 <argp_parse@@Base+0x7edc>  // b.none
  441458:	ldrh	w8, [sp, #176]
  44145c:	ldrb	w9, [sp, #178]
  441460:	mov	w10, #0x4854                	// #18516
  441464:	eor	w8, w8, w10
  441468:	mov	w10, #0x55                  	// #85
  44146c:	eor	w9, w9, w10
  441470:	orr	w8, w8, w9
  441474:	tst	w8, #0xffff
  441478:	b.eq	442594 <argp_parse@@Base+0x7ee8>  // b.none
  44147c:	ldrh	w8, [sp, #176]
  441480:	ldrb	w9, [sp, #178]
  441484:	mov	w10, #0x5246                	// #21062
  441488:	eor	w8, w8, w10
  44148c:	mov	w10, #0x49                  	// #73
  441490:	eor	w9, w9, w10
  441494:	orr	w8, w8, w9
  441498:	tst	w8, #0xffff
  44149c:	b.eq	4425a0 <argp_parse@@Base+0x7ef4>  // b.none
  4414a0:	ldrh	w8, [sp, #176]
  4414a4:	ldrb	w9, [sp, #178]
  4414a8:	mov	w10, #0x4153                	// #16723
  4414ac:	eor	w8, w8, w10
  4414b0:	mov	w10, #0x54                  	// #84
  4414b4:	eor	w9, w9, w10
  4414b8:	orr	w8, w8, w9
  4414bc:	tst	w8, #0xffff
  4414c0:	b.eq	4423f4 <argp_parse@@Base+0x7d48>  // b.none
  4414c4:	add	x1, sp, #0xb0
  4414c8:	mov	x0, x19
  4414cc:	bl	446f94 <argp_parse@@Base+0xc8e8>
  4414d0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414d4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414d8:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414dc:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414e0:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414e4:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414e8:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414ec:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414f0:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4414f4:	add	x1, x1, #0x198
  4414f8:	add	x2, x2, #0x402
  4414fc:	add	x3, x3, #0x474
  441500:	mov	w4, #0x1                   	// #1
  441504:	mov	w5, #0x38                  	// #56
  441508:	add	x6, x6, #0x4d0
  44150c:	add	x7, x7, #0x52c
  441510:	sub	x30, x29, #0x30
  441514:	add	x15, x15, #0x320
  441518:	add	x16, x16, #0x391
  44151c:	add	x17, x17, #0x546
  441520:	add	x18, x18, #0xac
  441524:	cbnz	x0, 4425fc <argp_parse@@Base+0x7f50>
  441528:	ldr	w8, [sp, #176]
  44152c:	mov	w9, #0x5344                	// #21316
  441530:	movk	w9, #0x54, lsl #16
  441534:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441538:	cmp	w8, w9
  44153c:	add	x0, x0, #0x740
  441540:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  441544:	ldr	w9, [sp, #176]
  441548:	ldrb	w10, [sp, #180]
  44154c:	mov	w11, #0x4559                	// #17753
  441550:	movk	w11, #0x5241, lsl #16
  441554:	eor	w9, w9, w11
  441558:	orr	w9, w9, w10
  44155c:	cbz	w9, 443694 <argp_parse@@Base+0x8fe8>
  441560:	ldr	w9, [sp, #176]
  441564:	ldrh	w10, [sp, #180]
  441568:	mov	w11, #0x4f4d                	// #20301
  44156c:	movk	w11, #0x544e, lsl #16
  441570:	eor	w9, w9, w11
  441574:	mov	w11, #0x48                  	// #72
  441578:	eor	w10, w10, w11
  44157c:	orr	w9, w9, w10
  441580:	cbz	w9, 4436a0 <argp_parse@@Base+0x8ff4>
  441584:	ldr	x9, [sp, #176]
  441588:	mov	x11, #0x4f46                	// #20294
  44158c:	ldrh	w10, [sp, #184]
  441590:	movk	x11, #0x5452, lsl #16
  441594:	movk	x11, #0x494e, lsl #32
  441598:	movk	x11, #0x4847, lsl #48
  44159c:	eor	x9, x9, x11
  4415a0:	mov	w11, #0x54                  	// #84
  4415a4:	eor	x10, x10, x11
  4415a8:	orr	x9, x9, x10
  4415ac:	cbz	x9, 4436ac <argp_parse@@Base+0x9000>
  4415b0:	ldr	w9, [sp, #176]
  4415b4:	ldrb	w10, [sp, #180]
  4415b8:	mov	w11, #0x4557                	// #17751
  4415bc:	movk	w11, #0x4b45, lsl #16
  4415c0:	eor	w9, w9, w11
  4415c4:	orr	w9, w9, w10
  4415c8:	cbz	w9, 4436b8 <argp_parse@@Base+0x900c>
  4415cc:	mov	w9, #0x4144                	// #16708
  4415d0:	movk	w9, #0x59, lsl #16
  4415d4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415d8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415dc:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415e0:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415e4:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415e8:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415ec:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415f0:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415f4:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415f8:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4415fc:	cmp	w8, w9
  441600:	add	x0, x0, #0x790
  441604:	add	x1, x1, #0x198
  441608:	add	x2, x2, #0x402
  44160c:	add	x3, x3, #0x474
  441610:	mov	w4, #0x1                   	// #1
  441614:	mov	w5, #0x38                  	// #56
  441618:	add	x6, x6, #0x4d0
  44161c:	add	x7, x7, #0x52c
  441620:	sub	x30, x29, #0x30
  441624:	add	x15, x15, #0x320
  441628:	add	x16, x16, #0x391
  44162c:	add	x17, x17, #0x546
  441630:	add	x18, x18, #0xac
  441634:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  441638:	ldr	w9, [sp, #176]
  44163c:	ldrb	w10, [sp, #180]
  441640:	mov	w11, #0x4f48                	// #20296
  441644:	movk	w11, #0x5255, lsl #16
  441648:	eor	w9, w9, w11
  44164c:	orr	w9, w9, w10
  441650:	cbz	w9, 4436c4 <argp_parse@@Base+0x9018>
  441654:	ldr	w9, [sp, #176]
  441658:	ldur	w10, [sp, #179]
  44165c:	mov	w11, #0x494d                	// #18765
  441660:	movk	w11, #0x554e, lsl #16
  441664:	eor	w9, w9, w11
  441668:	mov	w11, #0x5455                	// #21589
  44166c:	movk	w11, #0x45, lsl #16
  441670:	eor	w10, w10, w11
  441674:	orr	w9, w9, w10
  441678:	cbz	w9, 4436d0 <argp_parse@@Base+0x9024>
  44167c:	mov	w9, #0x494d                	// #18765
  441680:	movk	w9, #0x4e, lsl #16
  441684:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441688:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44168c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441690:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441694:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441698:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44169c:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4416a0:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4416a4:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4416a8:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4416ac:	cmp	w8, w9
  4416b0:	add	x0, x0, #0x7c0
  4416b4:	add	x1, x1, #0x198
  4416b8:	add	x2, x2, #0x402
  4416bc:	add	x3, x3, #0x474
  4416c0:	mov	w4, #0x1                   	// #1
  4416c4:	mov	w5, #0x38                  	// #56
  4416c8:	add	x6, x6, #0x4d0
  4416cc:	add	x7, x7, #0x52c
  4416d0:	sub	x30, x29, #0x30
  4416d4:	add	x15, x15, #0x320
  4416d8:	add	x16, x16, #0x391
  4416dc:	add	x17, x17, #0x546
  4416e0:	add	x18, x18, #0xac
  4416e4:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  4416e8:	ldr	w9, [sp, #176]
  4416ec:	ldur	w10, [sp, #179]
  4416f0:	mov	w11, #0x4553                	// #17747
  4416f4:	movk	w11, #0x4f43, lsl #16
  4416f8:	eor	w9, w9, w11
  4416fc:	mov	w11, #0x4e4f                	// #20047
  441700:	movk	w11, #0x44, lsl #16
  441704:	eor	w10, w10, w11
  441708:	orr	w9, w9, w10
  44170c:	cbz	w9, 4436dc <argp_parse@@Base+0x9030>
  441710:	mov	w9, #0x4553                	// #17747
  441714:	movk	w9, #0x43, lsl #16
  441718:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44171c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441720:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441724:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441728:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44172c:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441730:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441734:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441738:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44173c:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441740:	cmp	w8, w9
  441744:	add	x0, x0, #0x7e0
  441748:	add	x1, x1, #0x198
  44174c:	add	x2, x2, #0x402
  441750:	add	x3, x3, #0x474
  441754:	mov	w4, #0x1                   	// #1
  441758:	mov	w5, #0x38                  	// #56
  44175c:	add	x6, x6, #0x4d0
  441760:	add	x7, x7, #0x52c
  441764:	sub	x30, x29, #0x30
  441768:	add	x15, x15, #0x320
  44176c:	add	x16, x16, #0x391
  441770:	add	x17, x17, #0x546
  441774:	add	x18, x18, #0xac
  441778:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  44177c:	sub	x8, x21, #0x1
  441780:	add	x9, sp, #0xb0
  441784:	ldrb	w9, [x9, x8]
  441788:	cmp	w9, #0x53
  44178c:	b.ne	4419e0 <argp_parse@@Base+0x7334>  // b.any
  441790:	add	x9, sp, #0xb0
  441794:	strb	wzr, [x9, x8]
  441798:	ldr	w9, [sp, #176]
  44179c:	ldrb	w10, [sp, #180]
  4417a0:	mov	w11, #0x4559                	// #17753
  4417a4:	movk	w11, #0x5241, lsl #16
  4417a8:	eor	w9, w9, w11
  4417ac:	orr	w9, w9, w10
  4417b0:	cbz	w9, 443694 <argp_parse@@Base+0x8fe8>
  4417b4:	ldr	w9, [sp, #176]
  4417b8:	ldrh	w10, [sp, #180]
  4417bc:	mov	w11, #0x4f4d                	// #20301
  4417c0:	movk	w11, #0x544e, lsl #16
  4417c4:	eor	w9, w9, w11
  4417c8:	mov	w11, #0x48                  	// #72
  4417cc:	eor	w10, w10, w11
  4417d0:	orr	w9, w9, w10
  4417d4:	cbz	w9, 4436a0 <argp_parse@@Base+0x8ff4>
  4417d8:	ldr	x9, [sp, #176]
  4417dc:	mov	x11, #0x4f46                	// #20294
  4417e0:	ldrh	w10, [sp, #184]
  4417e4:	movk	x11, #0x5452, lsl #16
  4417e8:	movk	x11, #0x494e, lsl #32
  4417ec:	movk	x11, #0x4847, lsl #48
  4417f0:	eor	x9, x9, x11
  4417f4:	mov	w11, #0x54                  	// #84
  4417f8:	eor	x10, x10, x11
  4417fc:	orr	x9, x9, x10
  441800:	cbz	x9, 4436ac <argp_parse@@Base+0x9000>
  441804:	ldr	w9, [sp, #176]
  441808:	ldrb	w10, [sp, #180]
  44180c:	mov	w11, #0x4557                	// #17751
  441810:	movk	w11, #0x4b45, lsl #16
  441814:	eor	w9, w9, w11
  441818:	orr	w9, w9, w10
  44181c:	cbz	w9, 4436b8 <argp_parse@@Base+0x900c>
  441820:	ldr	w9, [sp, #176]
  441824:	mov	w10, #0x4144                	// #16708
  441828:	movk	w10, #0x59, lsl #16
  44182c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441830:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441834:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441838:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44183c:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441840:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441844:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441848:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44184c:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441850:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441854:	cmp	w9, w10
  441858:	add	x0, x0, #0x790
  44185c:	add	x1, x1, #0x198
  441860:	add	x2, x2, #0x402
  441864:	add	x3, x3, #0x474
  441868:	mov	w4, #0x1                   	// #1
  44186c:	mov	w5, #0x38                  	// #56
  441870:	add	x6, x6, #0x4d0
  441874:	add	x7, x7, #0x52c
  441878:	sub	x30, x29, #0x30
  44187c:	add	x15, x15, #0x320
  441880:	add	x16, x16, #0x391
  441884:	add	x17, x17, #0x546
  441888:	add	x18, x18, #0xac
  44188c:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  441890:	ldr	w10, [sp, #176]
  441894:	ldrb	w11, [sp, #180]
  441898:	mov	w12, #0x4f48                	// #20296
  44189c:	movk	w12, #0x5255, lsl #16
  4418a0:	eor	w10, w10, w12
  4418a4:	orr	w10, w10, w11
  4418a8:	cbz	w10, 4436c4 <argp_parse@@Base+0x9018>
  4418ac:	ldr	w10, [sp, #176]
  4418b0:	ldur	w11, [sp, #179]
  4418b4:	mov	w12, #0x494d                	// #18765
  4418b8:	movk	w12, #0x554e, lsl #16
  4418bc:	eor	w10, w10, w12
  4418c0:	mov	w12, #0x5455                	// #21589
  4418c4:	movk	w12, #0x45, lsl #16
  4418c8:	eor	w11, w11, w12
  4418cc:	orr	w10, w10, w11
  4418d0:	cbz	w10, 4436d0 <argp_parse@@Base+0x9024>
  4418d4:	mov	w10, #0x494d                	// #18765
  4418d8:	movk	w10, #0x4e, lsl #16
  4418dc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418e0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418e4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418e8:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418ec:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418f0:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418f4:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418f8:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4418fc:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441900:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441904:	cmp	w9, w10
  441908:	add	x0, x0, #0x7c0
  44190c:	add	x1, x1, #0x198
  441910:	add	x2, x2, #0x402
  441914:	add	x3, x3, #0x474
  441918:	mov	w4, #0x1                   	// #1
  44191c:	mov	w5, #0x38                  	// #56
  441920:	add	x6, x6, #0x4d0
  441924:	add	x7, x7, #0x52c
  441928:	sub	x30, x29, #0x30
  44192c:	add	x15, x15, #0x320
  441930:	add	x16, x16, #0x391
  441934:	add	x17, x17, #0x546
  441938:	add	x18, x18, #0xac
  44193c:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  441940:	ldr	w10, [sp, #176]
  441944:	ldur	w11, [sp, #179]
  441948:	mov	w12, #0x4553                	// #17747
  44194c:	movk	w12, #0x4f43, lsl #16
  441950:	eor	w10, w10, w12
  441954:	mov	w12, #0x4e4f                	// #20047
  441958:	movk	w12, #0x44, lsl #16
  44195c:	eor	w11, w11, w12
  441960:	orr	w10, w10, w11
  441964:	cbz	w10, 4436dc <argp_parse@@Base+0x9030>
  441968:	mov	w10, #0x4553                	// #17747
  44196c:	movk	w10, #0x43, lsl #16
  441970:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441974:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441978:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44197c:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441980:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441984:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441988:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44198c:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441990:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441994:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441998:	cmp	w9, w10
  44199c:	add	x0, x0, #0x7e0
  4419a0:	add	x1, x1, #0x198
  4419a4:	add	x2, x2, #0x402
  4419a8:	add	x3, x3, #0x474
  4419ac:	mov	w4, #0x1                   	// #1
  4419b0:	mov	w5, #0x38                  	// #56
  4419b4:	add	x6, x6, #0x4d0
  4419b8:	add	x7, x7, #0x52c
  4419bc:	sub	x30, x29, #0x30
  4419c0:	add	x15, x15, #0x320
  4419c4:	add	x16, x16, #0x391
  4419c8:	add	x17, x17, #0x546
  4419cc:	add	x18, x18, #0xac
  4419d0:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  4419d4:	add	x9, sp, #0xb0
  4419d8:	mov	w10, #0x53                  	// #83
  4419dc:	strb	w10, [x9, x8]
  4419e0:	ldr	x8, [sp, #176]
  4419e4:	mov	x10, #0x4f54                	// #20308
  4419e8:	ldrb	w9, [sp, #184]
  4419ec:	movk	x10, #0x4f4d, lsl #16
  4419f0:	movk	x10, #0x5252, lsl #32
  4419f4:	movk	x10, #0x574f, lsl #48
  4419f8:	eor	x8, x8, x10
  4419fc:	orr	x8, x8, x9
  441a00:	cbz	x8, 4436e8 <argp_parse@@Base+0x903c>
  441a04:	ldr	x8, [sp, #176]
  441a08:	mov	x10, #0x4559                	// #17753
  441a0c:	ldrh	w9, [sp, #184]
  441a10:	movk	x10, #0x5453, lsl #16
  441a14:	movk	x10, #0x5245, lsl #32
  441a18:	movk	x10, #0x4144, lsl #48
  441a1c:	eor	x8, x8, x10
  441a20:	mov	w10, #0x59                  	// #89
  441a24:	eor	x9, x9, x10
  441a28:	orr	x8, x8, x9
  441a2c:	cbz	x8, 4436f4 <argp_parse@@Base+0x9048>
  441a30:	ldr	w8, [sp, #176]
  441a34:	ldrh	w9, [sp, #180]
  441a38:	mov	w10, #0x4f54                	// #20308
  441a3c:	movk	w10, #0x4144, lsl #16
  441a40:	eor	w8, w8, w10
  441a44:	mov	w10, #0x59                  	// #89
  441a48:	eor	w9, w9, w10
  441a4c:	orr	w8, w8, w9
  441a50:	cbz	w8, 443700 <argp_parse@@Base+0x9054>
  441a54:	ldr	w8, [sp, #176]
  441a58:	mov	w9, #0x4f4e                	// #20302
  441a5c:	movk	w9, #0x57, lsl #16
  441a60:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a64:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a68:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a6c:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a70:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a74:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a78:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a7c:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a80:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a84:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441a88:	cmp	w8, w9
  441a8c:	add	x0, x0, #0x830
  441a90:	add	x1, x1, #0x198
  441a94:	add	x2, x2, #0x402
  441a98:	add	x3, x3, #0x474
  441a9c:	mov	w4, #0x1                   	// #1
  441aa0:	mov	w5, #0x38                  	// #56
  441aa4:	add	x6, x6, #0x4d0
  441aa8:	add	x7, x7, #0x52c
  441aac:	sub	x30, x29, #0x30
  441ab0:	add	x15, x15, #0x320
  441ab4:	add	x16, x16, #0x391
  441ab8:	add	x17, x17, #0x546
  441abc:	add	x18, x18, #0xac
  441ac0:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  441ac4:	ldr	w9, [sp, #176]
  441ac8:	ldrb	w10, [sp, #180]
  441acc:	mov	w11, #0x414c                	// #16716
  441ad0:	movk	w11, #0x5453, lsl #16
  441ad4:	eor	w9, w9, w11
  441ad8:	orr	w9, w9, w10
  441adc:	cbz	w9, 44370c <argp_parse@@Base+0x9060>
  441ae0:	ldr	w9, [sp, #176]
  441ae4:	ldrb	w10, [sp, #180]
  441ae8:	mov	w11, #0x4854                	// #18516
  441aec:	movk	w11, #0x5349, lsl #16
  441af0:	eor	w9, w9, w11
  441af4:	orr	w9, w9, w10
  441af8:	cbz	w9, 443718 <argp_parse@@Base+0x906c>
  441afc:	ldr	w9, [sp, #176]
  441b00:	ldrb	w10, [sp, #180]
  441b04:	mov	w11, #0x454e                	// #17742
  441b08:	movk	w11, #0x5458, lsl #16
  441b0c:	eor	w9, w9, w11
  441b10:	orr	w9, w9, w10
  441b14:	cbz	w9, 443724 <argp_parse@@Base+0x9078>
  441b18:	ldr	w9, [sp, #176]
  441b1c:	ldrh	w10, [sp, #180]
  441b20:	mov	w11, #0x4946                	// #18758
  441b24:	movk	w11, #0x5352, lsl #16
  441b28:	eor	w9, w9, w11
  441b2c:	mov	w11, #0x54                  	// #84
  441b30:	eor	w10, w10, w11
  441b34:	orr	w9, w9, w10
  441b38:	cbz	w9, 443730 <argp_parse@@Base+0x9084>
  441b3c:	ldr	w9, [sp, #176]
  441b40:	ldr	w11, [sp, #20]
  441b44:	ldrh	w10, [sp, #180]
  441b48:	eor	w9, w9, w11
  441b4c:	mov	w11, #0x44                  	// #68
  441b50:	eor	w10, w10, w11
  441b54:	orr	w9, w9, w10
  441b58:	cbz	w9, 44373c <argp_parse@@Base+0x9090>
  441b5c:	ldr	w9, [sp, #176]
  441b60:	ldur	w10, [sp, #179]
  441b64:	mov	w11, #0x4f48                	// #20296
  441b68:	mov	w12, #0x5448                	// #21576
  441b6c:	movk	w11, #0x5255, lsl #16
  441b70:	movk	w12, #0x48, lsl #16
  441b74:	sub	w11, w11, #0x2
  441b78:	add	w12, w12, #0xa
  441b7c:	eor	w9, w9, w11
  441b80:	eor	w10, w10, w12
  441b84:	orr	w9, w9, w10
  441b88:	cbz	w9, 443748 <argp_parse@@Base+0x909c>
  441b8c:	ldr	w9, [sp, #176]
  441b90:	ldrh	w10, [sp, #180]
  441b94:	mov	w11, #0x4946                	// #18758
  441b98:	movk	w11, #0x5352, lsl #16
  441b9c:	add	w11, w11, #0xf40, lsl #12
  441ba0:	eor	w9, w9, w11
  441ba4:	mov	w11, #0x48                  	// #72
  441ba8:	eor	w10, w10, w11
  441bac:	orr	w9, w9, w10
  441bb0:	cbz	w9, 443754 <argp_parse@@Base+0x90a8>
  441bb4:	ldr	w9, [sp, #176]
  441bb8:	ldrh	w10, [sp, #180]
  441bbc:	mov	w11, #0x454e                	// #17742
  441bc0:	movk	w11, #0x5458, lsl #16
  441bc4:	add	w11, w11, #0x405
  441bc8:	eor	w9, w9, w11
  441bcc:	mov	w11, #0x48                  	// #72
  441bd0:	eor	w10, w10, w11
  441bd4:	orr	w9, w9, w10
  441bd8:	cbz	w9, 443760 <argp_parse@@Base+0x90b4>
  441bdc:	ldr	x9, [sp, #176]
  441be0:	mov	x10, #0x4553                	// #17747
  441be4:	movk	x10, #0x4556, lsl #16
  441be8:	movk	x10, #0x544e, lsl #32
  441bec:	movk	x10, #0x48, lsl #48
  441bf0:	cmp	x9, x10
  441bf4:	b.eq	44376c <argp_parse@@Base+0x90c0>  // b.none
  441bf8:	ldr	w9, [sp, #176]
  441bfc:	ldur	w10, [sp, #179]
  441c00:	mov	w11, #0x4945                	// #18757
  441c04:	movk	w11, #0x4847, lsl #16
  441c08:	eor	w9, w9, w11
  441c0c:	mov	w11, #0x5448                	// #21576
  441c10:	movk	w11, #0x48, lsl #16
  441c14:	eor	w10, w10, w11
  441c18:	orr	w9, w9, w10
  441c1c:	cbz	w9, 443778 <argp_parse@@Base+0x90cc>
  441c20:	ldr	w9, [sp, #176]
  441c24:	ldrh	w10, [sp, #180]
  441c28:	mov	w11, #0x4f4d                	// #20301
  441c2c:	movk	w11, #0x544e, lsl #16
  441c30:	sub	w11, w11, #0x5ff
  441c34:	eor	w9, w9, w11
  441c38:	mov	w11, #0x48                  	// #72
  441c3c:	eor	w10, w10, w11
  441c40:	orr	w9, w9, w10
  441c44:	cbz	w9, 443784 <argp_parse@@Base+0x90d8>
  441c48:	ldr	w9, [sp, #176]
  441c4c:	ldrh	w10, [sp, #180]
  441c50:	mov	w11, #0x4f4d                	// #20301
  441c54:	movk	w11, #0x544e, lsl #16
  441c58:	sub	w11, w11, #0x9f9
  441c5c:	eor	w9, w9, w11
  441c60:	mov	w11, #0x48                  	// #72
  441c64:	eor	w10, w10, w11
  441c68:	orr	w9, w9, w10
  441c6c:	cbz	w9, 443790 <argp_parse@@Base+0x90e4>
  441c70:	ldr	x9, [sp, #176]
  441c74:	mov	x11, #0x4c45                	// #19525
  441c78:	ldrb	w10, [sp, #184]
  441c7c:	movk	x11, #0x5645, lsl #16
  441c80:	movk	x11, #0x4e45, lsl #32
  441c84:	movk	x11, #0x4854, lsl #48
  441c88:	eor	x9, x9, x11
  441c8c:	orr	x9, x9, x10
  441c90:	cbz	x9, 44379c <argp_parse@@Base+0x90f0>
  441c94:	ldr	x9, [sp, #176]
  441c98:	mov	x10, #0x5754                	// #22356
  441c9c:	movk	x10, #0x4c45, lsl #16
  441ca0:	movk	x10, #0x5446, lsl #32
  441ca4:	movk	x10, #0x48, lsl #48
  441ca8:	cmp	x9, x10
  441cac:	b.eq	4437a8 <argp_parse@@Base+0x90fc>  // b.none
  441cb0:	mov	w9, #0x4741                	// #18241
  441cb4:	movk	w9, #0x4f, lsl #16
  441cb8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cbc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cc0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cc4:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cc8:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441ccc:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cd0:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cd4:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cd8:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441cdc:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441ce0:	cmp	w8, w9
  441ce4:	add	x0, x0, #0x920
  441ce8:	add	x1, x1, #0x198
  441cec:	add	x2, x2, #0x402
  441cf0:	add	x3, x3, #0x474
  441cf4:	mov	w4, #0x1                   	// #1
  441cf8:	mov	w5, #0x38                  	// #56
  441cfc:	add	x6, x6, #0x4d0
  441d00:	add	x7, x7, #0x52c
  441d04:	sub	x30, x29, #0x30
  441d08:	add	x15, x15, #0x320
  441d0c:	add	x16, x16, #0x391
  441d10:	add	x17, x17, #0x546
  441d14:	add	x18, x18, #0xac
  441d18:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  441d1c:	ldr	w9, [sp, #176]
  441d20:	ldrh	w10, [sp, #180]
  441d24:	mov	w11, #0x4548                	// #17736
  441d28:	movk	w11, #0x434e, lsl #16
  441d2c:	eor	w9, w9, w11
  441d30:	mov	w11, #0x45                  	// #69
  441d34:	eor	w10, w10, w11
  441d38:	orr	w9, w9, w10
  441d3c:	cbz	w9, 4437b4 <argp_parse@@Base+0x9108>
  441d40:	cmp	x21, #0x1
  441d44:	b.ne	4437c0 <argp_parse@@Base+0x9114>  // b.any
  441d48:	and	w9, w8, #0xff
  441d4c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d50:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d54:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d58:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d5c:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d60:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d64:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d68:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d6c:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441d70:	cmp	w9, #0x5a
  441d74:	add	x1, x1, #0x198
  441d78:	add	x2, x2, #0x402
  441d7c:	add	x3, x3, #0x474
  441d80:	mov	w4, #0x1                   	// #1
  441d84:	mov	w5, #0x38                  	// #56
  441d88:	add	x6, x6, #0x4d0
  441d8c:	add	x7, x7, #0x52c
  441d90:	sub	x30, x29, #0x30
  441d94:	add	x15, x15, #0x320
  441d98:	add	x16, x16, #0x391
  441d9c:	add	x17, x17, #0x546
  441da0:	add	x18, x18, #0xac
  441da4:	b.hi	4437c8 <argp_parse@@Base+0x911c>  // b.pmore
  441da8:	adrp	x12, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  441dac:	and	x9, x8, #0xff
  441db0:	add	x12, x12, #0xff6
  441db4:	adr	x10, 441dcc <argp_parse@@Base+0x7720>
  441db8:	ldrh	w11, [x12, x9, lsl #1]
  441dbc:	add	x10, x10, x11, lsl #2
  441dc0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441dc4:	add	x0, x0, #0x950
  441dc8:	br	x10
  441dcc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441dd0:	add	x0, x0, #0x960
  441dd4:	b	4425fc <argp_parse@@Base+0x7f50>
  441dd8:	mov	w10, #0x1                   	// #1
  441ddc:	mov	x8, xzr
  441de0:	mov	x12, x9
  441de4:	b	441e0c <argp_parse@@Base+0x7760>
  441de8:	add	x13, x13, #0x60
  441dec:	cmp	x13, x8
  441df0:	b.lt	441e68 <argp_parse@@Base+0x77bc>  // b.tstop
  441df4:	ldrb	w13, [x12, #1]!
  441df8:	sub	x11, x11, #0x30
  441dfc:	add	x8, x11, x8
  441e00:	sub	w14, w13, #0x30
  441e04:	cmp	w14, #0xa
  441e08:	b.cs	441e74 <argp_parse@@Base+0x77c8>  // b.hs, b.nlast
  441e0c:	tbnz	x8, #63, 441e24 <argp_parse@@Base+0x7778>
  441e10:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  441e14:	movk	x11, #0xccc, lsl #48
  441e18:	cmp	x8, x11
  441e1c:	b.le	441e38 <argp_parse@@Base+0x778c>
  441e20:	b	441e68 <argp_parse@@Base+0x77bc>
  441e24:	mov	x11, #0x3333333333333333    	// #3689348814741910323
  441e28:	movk	x11, #0x3334
  441e2c:	movk	x11, #0xf333, lsl #48
  441e30:	cmp	x8, x11
  441e34:	b.lt	441e68 <argp_parse@@Base+0x77bc>  // b.tstop
  441e38:	and	w11, w13, #0xff
  441e3c:	cmp	w11, #0x2f
  441e40:	and	x11, x13, #0xff
  441e44:	mov	x13, #0xffffffffffffffcf    	// #-49
  441e48:	add	x8, x8, x8, lsl #2
  441e4c:	movk	x13, #0x7fff, lsl #48
  441e50:	lsl	x8, x8, #1
  441e54:	sub	x13, x13, x11
  441e58:	b.hi	441de8 <argp_parse@@Base+0x773c>  // b.pmore
  441e5c:	add	x13, x13, #0x61
  441e60:	cmp	x8, x13
  441e64:	b.ge	441df4 <argp_parse@@Base+0x7748>  // b.tcont
  441e68:	ldr	x8, [sp, #152]
  441e6c:	mov	w14, #0x3f                  	// #63
  441e70:	b	442620 <argp_parse@@Base+0x7f74>
  441e74:	mov	w11, wzr
  441e78:	sub	x14, x12, #0x1
  441e7c:	orr	w13, w13, #0x2
  441e80:	cmp	w13, #0x2e
  441e84:	b.eq	441eb0 <argp_parse@@Base+0x7804>  // b.none
  441e88:	b	442000 <argp_parse@@Base+0x7954>
  441e8c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441e90:	add	x0, x0, #0x560
  441e94:	b	4425fc <argp_parse@@Base+0x7f50>
  441e98:	sub	x14, x12, #0x1
  441e9c:	mov	w10, #0xffffffff            	// #-1
  441ea0:	mov	w11, #0x1                   	// #1
  441ea4:	orr	w13, w13, #0x2
  441ea8:	cmp	w13, #0x2e
  441eac:	b.ne	442000 <argp_parse@@Base+0x7954>  // b.any
  441eb0:	ldrb	w13, [x14, #2]
  441eb4:	sub	w13, w13, #0x30
  441eb8:	cmp	w13, #0x9
  441ebc:	b.hi	442000 <argp_parse@@Base+0x7954>  // b.pmore
  441ec0:	mov	x9, x14
  441ec4:	ldrb	w12, [x9, #3]!
  441ec8:	mov	w15, #0x3                   	// #3
  441ecc:	mov	w21, #0xa                   	// #10
  441ed0:	sub	w12, w12, #0x30
  441ed4:	cmp	w12, #0xa
  441ed8:	cinc	x15, x15, cc  // cc = lo, ul, last
  441edc:	ldrb	w15, [x14, x15]
  441ee0:	add	x14, x14, #0x4
  441ee4:	csel	x9, x14, x9, cc  // cc = lo, ul, last
  441ee8:	csel	w12, w12, wzr, cc  // cc = lo, ul, last
  441eec:	sub	w14, w15, #0x30
  441ef0:	cmp	w14, #0xa
  441ef4:	cinc	x9, x9, cc  // cc = lo, ul, last
  441ef8:	mov	x15, x9
  441efc:	ldrb	w16, [x15], #1
  441f00:	csel	w14, w14, wzr, cc  // cc = lo, ul, last
  441f04:	madd	w12, w13, w21, w12
  441f08:	madd	w12, w12, w21, w14
  441f0c:	sub	w16, w16, #0x30
  441f10:	cmp	w16, #0xa
  441f14:	csel	x9, x15, x9, cc  // cc = lo, ul, last
  441f18:	mov	x15, x9
  441f1c:	ldrb	w17, [x15], #1
  441f20:	csel	w16, w16, wzr, cc  // cc = lo, ul, last
  441f24:	madd	w12, w12, w21, w16
  441f28:	sub	w17, w17, #0x30
  441f2c:	cmp	w17, #0xa
  441f30:	csel	x9, x15, x9, cc  // cc = lo, ul, last
  441f34:	mov	x15, x9
  441f38:	ldrb	w18, [x15], #1
  441f3c:	csel	w17, w17, wzr, cc  // cc = lo, ul, last
  441f40:	madd	w12, w12, w21, w17
  441f44:	sub	w18, w18, #0x30
  441f48:	cmp	w18, #0xa
  441f4c:	csel	x9, x15, x9, cc  // cc = lo, ul, last
  441f50:	mov	x15, x9
  441f54:	ldrb	w0, [x15], #1
  441f58:	csel	w13, w18, wzr, cc  // cc = lo, ul, last
  441f5c:	madd	w12, w12, w21, w13
  441f60:	sub	w18, w0, #0x30
  441f64:	cmp	w18, #0xa
  441f68:	csel	x9, x15, x9, cc  // cc = lo, ul, last
  441f6c:	mov	x14, x9
  441f70:	ldrb	w15, [x14], #1
  441f74:	csel	w16, w18, wzr, cc  // cc = lo, ul, last
  441f78:	madd	w12, w12, w21, w16
  441f7c:	sub	w15, w15, #0x30
  441f80:	cmp	w15, #0xa
  441f84:	csel	x9, x14, x9, cc  // cc = lo, ul, last
  441f88:	mov	x13, x9
  441f8c:	ldrb	w14, [x13], #1
  441f90:	csel	w15, w15, wzr, cc  // cc = lo, ul, last
  441f94:	madd	w15, w12, w21, w15
  441f98:	sub	w14, w14, #0x30
  441f9c:	cmp	w14, #0xa
  441fa0:	csel	x12, x13, x9, cc  // cc = lo, ul, last
  441fa4:	csel	w9, w14, wzr, cc  // cc = lo, ul, last
  441fa8:	madd	w9, w15, w21, w9
  441fac:	cbz	w11, 442038 <argp_parse@@Base+0x798c>
  441fb0:	ldrb	w13, [x12]
  441fb4:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441fb8:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441fbc:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441fc0:	sub	w14, w13, #0x30
  441fc4:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  441fc8:	cmp	w14, #0x9
  441fcc:	add	x15, x15, #0x320
  441fd0:	add	x16, x16, #0x391
  441fd4:	add	x17, x17, #0x546
  441fd8:	add	x18, x18, #0xac
  441fdc:	b.hi	442410 <argp_parse@@Base+0x7d64>  // b.pmore
  441fe0:	and	w13, w13, #0xff
  441fe4:	cmp	w13, #0x30
  441fe8:	b.ne	44240c <argp_parse@@Base+0x7d60>  // b.any
  441fec:	ldrb	w13, [x12, #1]!
  441ff0:	sub	w14, w13, #0x30
  441ff4:	cmp	w14, #0xa
  441ff8:	b.cc	441fe0 <argp_parse@@Base+0x7934>  // b.lo, b.ul, b.last
  441ffc:	b	442410 <argp_parse@@Base+0x7d64>
  442000:	sub	x9, x12, x9
  442004:	lsr	w11, w10, #31
  442008:	str	x9, [sp, #104]
  44200c:	cmp	w10, #0x0
  442010:	mov	w9, #0x112                 	// #274
  442014:	str	x11, [sp, #120]
  442018:	str	x12, [x19]
  44201c:	b	442470 <argp_parse@@Base+0x7dc4>
  442020:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442024:	add	x0, x0, #0x570
  442028:	b	4425fc <argp_parse@@Base+0x7f50>
  44202c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442030:	add	x0, x0, #0x580
  442034:	b	4425fc <argp_parse@@Base+0x7f50>
  442038:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44203c:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442040:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442044:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442048:	add	x15, x15, #0x320
  44204c:	add	x16, x16, #0x391
  442050:	add	x17, x17, #0x546
  442054:	add	x18, x18, #0xac
  442058:	b	442410 <argp_parse@@Base+0x7d64>
  44205c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442060:	add	x0, x0, #0x590
  442064:	b	4425fc <argp_parse@@Base+0x7f50>
  442068:	ldr	x8, [sp, #176]
  44206c:	mov	x9, #0x414a                	// #16714
  442070:	movk	x9, #0x554e, lsl #16
  442074:	movk	x9, #0x5241, lsl #32
  442078:	movk	x9, #0x59, lsl #48
  44207c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442080:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442084:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442088:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44208c:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442090:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442094:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442098:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44209c:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4420a0:	cmp	x8, x9
  4420a4:	add	x1, x1, #0x198
  4420a8:	add	x2, x2, #0x402
  4420ac:	add	x3, x3, #0x474
  4420b0:	mov	w4, #0x1                   	// #1
  4420b4:	mov	w5, #0x38                  	// #56
  4420b8:	add	x6, x6, #0x4d0
  4420bc:	add	x7, x7, #0x52c
  4420c0:	sub	x30, x29, #0x30
  4420c4:	add	x15, x15, #0x320
  4420c8:	add	x16, x16, #0x391
  4420cc:	add	x17, x17, #0x546
  4420d0:	add	x18, x18, #0xac
  4420d4:	b.eq	442400 <argp_parse@@Base+0x7d54>  // b.none
  4420d8:	ldr	x8, [sp, #176]
  4420dc:	mov	x10, #0x4546                	// #17734
  4420e0:	ldrb	w9, [sp, #184]
  4420e4:	movk	x10, #0x5242, lsl #16
  4420e8:	movk	x10, #0x4155, lsl #32
  4420ec:	movk	x10, #0x5952, lsl #48
  4420f0:	eor	x8, x8, x10
  4420f4:	orr	x8, x8, x9
  4420f8:	cbz	x8, 442478 <argp_parse@@Base+0x7dcc>
  4420fc:	ldr	w8, [sp, #176]
  442100:	ldrh	w9, [sp, #180]
  442104:	mov	w10, #0x414d                	// #16717
  442108:	movk	w10, #0x4352, lsl #16
  44210c:	eor	w8, w8, w10
  442110:	mov	w10, #0x48                  	// #72
  442114:	eor	w9, w9, w10
  442118:	orr	w8, w8, w9
  44211c:	cbz	w8, 442484 <argp_parse@@Base+0x7dd8>
  442120:	ldr	w8, [sp, #176]
  442124:	ldrh	w9, [sp, #180]
  442128:	mov	w10, #0x5041                	// #20545
  44212c:	movk	w10, #0x4952, lsl #16
  442130:	eor	w8, w8, w10
  442134:	mov	w10, #0x4c                  	// #76
  442138:	eor	w9, w9, w10
  44213c:	orr	w8, w8, w9
  442140:	cbz	w8, 4424bc <argp_parse@@Base+0x7e10>
  442144:	ldr	w8, [sp, #176]
  442148:	ldr	w9, [sp, #36]
  44214c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442150:	add	x0, x0, #0x5f0
  442154:	cmp	w8, w9
  442158:	b.eq	4425fc <argp_parse@@Base+0x7f50>  // b.none
  44215c:	ldr	w8, [sp, #176]
  442160:	ldrb	w9, [sp, #180]
  442164:	mov	w10, #0x554a                	// #21834
  442168:	movk	w10, #0x454e, lsl #16
  44216c:	eor	w8, w8, w10
  442170:	orr	w8, w8, w9
  442174:	cbz	w8, 4424c8 <argp_parse@@Base+0x7e1c>
  442178:	ldr	w8, [sp, #176]
  44217c:	ldrb	w9, [sp, #180]
  442180:	mov	w10, #0x554a                	// #21834
  442184:	movk	w10, #0x594c, lsl #16
  442188:	eor	w8, w8, w10
  44218c:	orr	w8, w8, w9
  442190:	cbz	w8, 4424e0 <argp_parse@@Base+0x7e34>
  442194:	ldr	w8, [sp, #176]
  442198:	mov	w10, #0x5541                	// #21825
  44219c:	movk	w10, #0x5547, lsl #16
  4421a0:	ldur	w9, [sp, #179]
  4421a4:	eor	w8, w8, w10
  4421a8:	ldr	w10, [sp, #32]
  4421ac:	eor	w9, w9, w10
  4421b0:	orr	w8, w8, w9
  4421b4:	cbz	w8, 4424ec <argp_parse@@Base+0x7e40>
  4421b8:	ldr	x8, [sp, #176]
  4421bc:	mov	x10, #0x4553                	// #17747
  4421c0:	ldrh	w9, [sp, #184]
  4421c4:	movk	x10, #0x5450, lsl #16
  4421c8:	movk	x10, #0x4d45, lsl #32
  4421cc:	movk	x10, #0x4542, lsl #48
  4421d0:	eor	x8, x8, x10
  4421d4:	mov	w10, #0x52                  	// #82
  4421d8:	eor	x9, x9, x10
  4421dc:	orr	x8, x8, x9
  4421e0:	cbz	x8, 4424f8 <argp_parse@@Base+0x7e4c>
  4421e4:	ldr	w8, [sp, #176]
  4421e8:	ldrb	w9, [sp, #180]
  4421ec:	mov	w10, #0x4553                	// #17747
  4421f0:	movk	w10, #0x5450, lsl #16
  4421f4:	eor	w8, w8, w10
  4421f8:	orr	w8, w8, w9
  4421fc:	cbz	w8, 442504 <argp_parse@@Base+0x7e58>
  442200:	ldr	x8, [sp, #176]
  442204:	mov	x9, #0x434f                	// #17231
  442208:	movk	x9, #0x4f54, lsl #16
  44220c:	movk	x9, #0x4542, lsl #32
  442210:	movk	x9, #0x52, lsl #48
  442214:	cmp	x8, x9
  442218:	b.eq	442510 <argp_parse@@Base+0x7e64>  // b.none
  44221c:	ldr	x8, [sp, #176]
  442220:	mov	x10, #0x4f4e                	// #20302
  442224:	ldrb	w9, [sp, #184]
  442228:	movk	x10, #0x4556, lsl #16
  44222c:	movk	x10, #0x424d, lsl #32
  442230:	movk	x10, #0x5245, lsl #48
  442234:	eor	x8, x8, x10
  442238:	orr	x8, x8, x9
  44223c:	cbz	x8, 44251c <argp_parse@@Base+0x7e70>
  442240:	ldr	x8, [sp, #176]
  442244:	mov	x10, #0x4544                	// #17732
  442248:	ldrb	w9, [sp, #184]
  44224c:	movk	x10, #0x4543, lsl #16
  442250:	movk	x10, #0x424d, lsl #32
  442254:	movk	x10, #0x5245, lsl #48
  442258:	eor	x8, x8, x10
  44225c:	orr	x8, x8, x9
  442260:	cbz	x8, 442528 <argp_parse@@Base+0x7e7c>
  442264:	ldr	w8, [sp, #176]
  442268:	mov	w10, #0x4f4d                	// #20301
  44226c:	ldur	w9, [sp, #179]
  442270:	movk	w10, #0x444e, lsl #16
  442274:	add	w10, w10, #0x606
  442278:	eor	w8, w8, w10
  44227c:	mov	w10, #0x4144                	// #16708
  442280:	movk	w10, #0x59, lsl #16
  442284:	eor	w9, w9, w10
  442288:	orr	w8, w8, w9
  44228c:	cbz	w8, 442534 <argp_parse@@Base+0x7e88>
  442290:	ldr	w8, [sp, #176]
  442294:	ldur	w9, [sp, #179]
  442298:	mov	w10, #0x4f4d                	// #20301
  44229c:	movk	w10, #0x444e, lsl #16
  4422a0:	eor	w8, w8, w10
  4422a4:	mov	w10, #0x4144                	// #16708
  4422a8:	movk	w10, #0x59, lsl #16
  4422ac:	eor	w9, w9, w10
  4422b0:	orr	w8, w8, w9
  4422b4:	cbz	w8, 442540 <argp_parse@@Base+0x7e94>
  4422b8:	ldr	x8, [sp, #176]
  4422bc:	mov	x9, #0x5554                	// #21844
  4422c0:	movk	x9, #0x5345, lsl #16
  4422c4:	movk	x9, #0x4144, lsl #32
  4422c8:	movk	x9, #0x59, lsl #48
  4422cc:	cmp	x8, x9
  4422d0:	b.eq	44254c <argp_parse@@Base+0x7ea0>  // b.none
  4422d4:	ldr	w8, [sp, #176]
  4422d8:	ldrb	w9, [sp, #180]
  4422dc:	mov	w10, #0x5554                	// #21844
  4422e0:	movk	w10, #0x5345, lsl #16
  4422e4:	eor	w8, w8, w10
  4422e8:	orr	w8, w8, w9
  4422ec:	cbz	w8, 442558 <argp_parse@@Base+0x7eac>
  4422f0:	ldr	x8, [sp, #176]
  4422f4:	mov	x10, #0x4557                	// #17751
  4422f8:	ldrh	w9, [sp, #184]
  4422fc:	movk	x10, #0x4e44, lsl #16
  442300:	movk	x10, #0x5345, lsl #32
  442304:	movk	x10, #0x4144, lsl #48
  442308:	eor	x8, x8, x10
  44230c:	mov	w10, #0x59                  	// #89
  442310:	eor	x9, x9, x10
  442314:	orr	x8, x8, x9
  442318:	cbz	x8, 442564 <argp_parse@@Base+0x7eb8>
  44231c:	ldr	w8, [sp, #176]
  442320:	ldur	w9, [sp, #179]
  442324:	mov	w10, #0x4557                	// #17751
  442328:	movk	w10, #0x4e44, lsl #16
  44232c:	eor	w8, w8, w10
  442330:	mov	w10, #0x454e                	// #17742
  442334:	movk	w10, #0x53, lsl #16
  442338:	eor	w9, w9, w10
  44233c:	orr	w8, w8, w9
  442340:	cbz	w8, 442570 <argp_parse@@Base+0x7ec4>
  442344:	ldr	x8, [sp, #176]
  442348:	mov	x10, #0x4854                	// #18516
  44234c:	ldrb	w9, [sp, #184]
  442350:	movk	x10, #0x5255, lsl #16
  442354:	movk	x10, #0x4453, lsl #32
  442358:	movk	x10, #0x5941, lsl #48
  44235c:	eor	x8, x8, x10
  442360:	orr	x8, x8, x9
  442364:	cbz	x8, 44257c <argp_parse@@Base+0x7ed0>
  442368:	ldr	w8, [sp, #176]
  44236c:	ldrb	w9, [sp, #180]
  442370:	mov	w10, #0x4854                	// #18516
  442374:	movk	w10, #0x5255, lsl #16
  442378:	eor	w8, w8, w10
  44237c:	orr	w8, w8, w9
  442380:	cbz	w8, 442588 <argp_parse@@Base+0x7edc>
  442384:	ldr	w8, [sp, #176]
  442388:	ldrh	w9, [sp, #180]
  44238c:	mov	w10, #0x4854                	// #18516
  442390:	movk	w10, #0x5255, lsl #16
  442394:	eor	w8, w8, w10
  442398:	mov	w10, #0x53                  	// #83
  44239c:	eor	w9, w9, w10
  4423a0:	orr	w8, w8, w9
  4423a4:	cbz	w8, 442594 <argp_parse@@Base+0x7ee8>
  4423a8:	ldr	w8, [sp, #176]
  4423ac:	ldur	w9, [sp, #179]
  4423b0:	mov	w10, #0x5246                	// #21062
  4423b4:	movk	w10, #0x4449, lsl #16
  4423b8:	eor	w8, w8, w10
  4423bc:	mov	w10, #0x4144                	// #16708
  4423c0:	movk	w10, #0x59, lsl #16
  4423c4:	eor	w9, w9, w10
  4423c8:	orr	w8, w8, w9
  4423cc:	cbz	w8, 4425a0 <argp_parse@@Base+0x7ef4>
  4423d0:	ldr	x8, [sp, #176]
  4423d4:	mov	x10, #0x4153                	// #16723
  4423d8:	ldrb	w9, [sp, #184]
  4423dc:	movk	x10, #0x5554, lsl #16
  4423e0:	movk	x10, #0x4452, lsl #32
  4423e4:	movk	x10, #0x5941, lsl #48
  4423e8:	eor	x8, x8, x10
  4423ec:	orr	x8, x8, x9
  4423f0:	cbnz	x8, 4414c4 <argp_parse@@Base+0x6e18>
  4423f4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4423f8:	add	x0, x0, #0x720
  4423fc:	b	4425a8 <argp_parse@@Base+0x7efc>
  442400:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442404:	add	x0, x0, #0x5b0
  442408:	b	4425fc <argp_parse@@Base+0x7f50>
  44240c:	add	w9, w9, #0x1
  442410:	sub	x12, x12, #0x1
  442414:	ldrb	w13, [x12, #1]!
  442418:	sub	w13, w13, #0x30
  44241c:	cmp	w13, #0xa
  442420:	b.cc	442414 <argp_parse@@Base+0x7d68>  // b.lo, b.ul, b.last
  442424:	cmp	w9, #0x0
  442428:	cset	w13, eq  // eq = none
  44242c:	eor	w11, w11, #0x1
  442430:	orr	w11, w11, w13
  442434:	tbnz	w11, #0, 442454 <argp_parse@@Base+0x7da8>
  442438:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  44243c:	cmp	x8, x11
  442440:	b.eq	441e68 <argp_parse@@Base+0x77bc>  // b.none
  442444:	mov	w11, #0xca00                	// #51712
  442448:	movk	w11, #0x3b9a, lsl #16
  44244c:	sub	x8, x8, #0x1
  442450:	sub	w9, w11, w9
  442454:	mov	w11, w8
  442458:	lsr	x8, x8, #8
  44245c:	stp	x8, x11, [sp, #112]
  442460:	sxtw	x8, w9
  442464:	str	x12, [x19]
  442468:	cmp	w10, #0x0
  44246c:	mov	w9, #0x114                 	// #276
  442470:	cinc	w14, w9, eq  // eq = none
  442474:	b	442620 <argp_parse@@Base+0x7f74>
  442478:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44247c:	add	x0, x0, #0x5c0
  442480:	b	4425fc <argp_parse@@Base+0x7f50>
  442484:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442488:	add	x0, x0, #0x5d0
  44248c:	b	4425fc <argp_parse@@Base+0x7f50>
  442490:	add	x8, x9, #0x1
  442494:	str	x8, [x19]
  442498:	ldrb	w14, [x9]
  44249c:	cmp	w14, #0x1
  4424a0:	b.ge	442614 <argp_parse@@Base+0x7f68>  // b.tcont
  4424a4:	mov	w9, wzr
  4424a8:	mov	w14, wzr
  4424ac:	add	w10, w9, w24
  4424b0:	cmp	w10, #0x70
  4424b4:	b.hi	442674 <argp_parse@@Base+0x7fc8>  // b.pmore
  4424b8:	b	442650 <argp_parse@@Base+0x7fa4>
  4424bc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4424c0:	add	x0, x0, #0x5e0
  4424c4:	b	4425fc <argp_parse@@Base+0x7f50>
  4424c8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4424cc:	add	x0, x0, #0x600
  4424d0:	b	4425fc <argp_parse@@Base+0x7f50>
  4424d4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4424d8:	add	x0, x0, #0x5f0
  4424dc:	b	4425fc <argp_parse@@Base+0x7f50>
  4424e0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4424e4:	add	x0, x0, #0x610
  4424e8:	b	4425fc <argp_parse@@Base+0x7f50>
  4424ec:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4424f0:	add	x0, x0, #0x620
  4424f4:	b	4425fc <argp_parse@@Base+0x7f50>
  4424f8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4424fc:	add	x0, x0, #0x630
  442500:	b	4425fc <argp_parse@@Base+0x7f50>
  442504:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442508:	add	x0, x0, #0x640
  44250c:	b	4425fc <argp_parse@@Base+0x7f50>
  442510:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442514:	add	x0, x0, #0x650
  442518:	b	4425fc <argp_parse@@Base+0x7f50>
  44251c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442520:	add	x0, x0, #0x660
  442524:	b	4425fc <argp_parse@@Base+0x7f50>
  442528:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44252c:	add	x0, x0, #0x670
  442530:	b	4425a8 <argp_parse@@Base+0x7efc>
  442534:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442538:	add	x0, x0, #0x680
  44253c:	b	4425a8 <argp_parse@@Base+0x7efc>
  442540:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442544:	add	x0, x0, #0x690
  442548:	b	4425a8 <argp_parse@@Base+0x7efc>
  44254c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442550:	add	x0, x0, #0x6a0
  442554:	b	4425a8 <argp_parse@@Base+0x7efc>
  442558:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44255c:	add	x0, x0, #0x6b0
  442560:	b	4425a8 <argp_parse@@Base+0x7efc>
  442564:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442568:	add	x0, x0, #0x6c0
  44256c:	b	4425a8 <argp_parse@@Base+0x7efc>
  442570:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442574:	add	x0, x0, #0x6d0
  442578:	b	4425a8 <argp_parse@@Base+0x7efc>
  44257c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442580:	add	x0, x0, #0x6e0
  442584:	b	4425a8 <argp_parse@@Base+0x7efc>
  442588:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44258c:	add	x0, x0, #0x6f0
  442590:	b	4425a8 <argp_parse@@Base+0x7efc>
  442594:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442598:	add	x0, x0, #0x700
  44259c:	b	4425a8 <argp_parse@@Base+0x7efc>
  4425a0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425a4:	add	x0, x0, #0x710
  4425a8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425ac:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425b0:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425b4:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425b8:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425bc:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425c0:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425c4:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425c8:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4425cc:	add	x1, x1, #0x198
  4425d0:	add	x2, x2, #0x402
  4425d4:	add	x3, x3, #0x474
  4425d8:	mov	w4, #0x1                   	// #1
  4425dc:	mov	w5, #0x38                  	// #56
  4425e0:	add	x6, x6, #0x4d0
  4425e4:	add	x7, x7, #0x52c
  4425e8:	sub	x30, x29, #0x30
  4425ec:	add	x15, x15, #0x320
  4425f0:	add	x16, x16, #0x391
  4425f4:	add	x17, x17, #0x546
  4425f8:	add	x18, x18, #0xac
  4425fc:	ldp	w14, w8, [x0, #8]
  442600:	str	x8, [sp, #120]
  442604:	sbfx	x8, x8, #8, #24
  442608:	str	x8, [sp, #112]
  44260c:	cmp	w14, #0x1
  442610:	b.lt	4424a4 <argp_parse@@Base+0x7df8>  // b.tstop
  442614:	cmp	w14, #0x115
  442618:	b.hi	442640 <argp_parse@@Base+0x7f94>  // b.pmore
  44261c:	ldr	x8, [sp, #152]
  442620:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442624:	add	x9, x9, #0x20a
  442628:	ldrb	w9, [x9, w14, uxtw]
  44262c:	str	x8, [sp, #152]
  442630:	add	w10, w9, w24
  442634:	cmp	w10, #0x70
  442638:	b.ls	442650 <argp_parse@@Base+0x7fa4>  // b.plast
  44263c:	b	442674 <argp_parse@@Base+0x7fc8>
  442640:	mov	w9, #0x2                   	// #2
  442644:	add	w10, w9, w24
  442648:	cmp	w10, #0x70
  44264c:	b.hi	442674 <argp_parse@@Base+0x7fc8>  // b.pmore
  442650:	ldrsb	w8, [x15, x10]
  442654:	cmp	w9, w8
  442658:	b.ne	442674 <argp_parse@@Base+0x7fc8>  // b.any
  44265c:	ldrb	w8, [x16, x10]
  442660:	orr	x9, x10, #0x4
  442664:	cmp	x9, #0x6f
  442668:	b.ne	44275c <argp_parse@@Base+0x80b0>  // b.any
  44266c:	neg	w8, w8
  442670:	b	44267c <argp_parse@@Base+0x7fd0>
  442674:	ldrb	w8, [x2, x20]
  442678:	cbz	w8, 443a34 <argp_parse@@Base+0x9388>
  44267c:	sxtw	x26, w8
  442680:	ldrb	w28, [x3, x26]
  442684:	sub	w8, w8, #0x4
  442688:	cmp	w8, #0x57
  44268c:	sub	x9, x4, x28
  442690:	madd	x9, x9, x5, x22
  442694:	ldp	x24, x11, [x9]
  442698:	ldp	x12, x10, [x9, #16]
  44269c:	ldp	x20, x27, [x9, #32]
  4426a0:	ldp	w25, w13, [x9, #48]
  4426a4:	str	x10, [sp, #168]
  4426a8:	b.hi	4435d0 <argp_parse@@Base+0x8f24>  // b.pmore
  4426ac:	adr	x9, 4426bc <argp_parse@@Base+0x8010>
  4426b0:	ldrh	w10, [x18, x8, lsl #1]
  4426b4:	add	x9, x9, x10, lsl #2
  4426b8:	br	x9
  4426bc:	ldr	x8, [x22, #48]
  4426c0:	ldp	q1, q0, [x22, #16]
  4426c4:	ldr	q2, [x22]
  4426c8:	add	x1, sp, #0xb0
  4426cc:	mov	w2, #0x1                   	// #1
  4426d0:	mov	x0, x19
  4426d4:	str	x8, [sp, #224]
  4426d8:	stp	q1, q0, [sp, #192]
  4426dc:	str	q2, [sp, #176]
  4426e0:	mov	w21, #0x1                   	// #1
  4426e4:	str	w14, [sp, #76]
  4426e8:	str	w13, [sp, #132]
  4426ec:	stp	x12, x11, [sp, #136]
  4426f0:	bl	44407c <argp_parse@@Base+0x99d0>
  4426f4:	ldp	x12, x11, [sp, #136]
  4426f8:	ldr	w13, [sp, #132]
  4426fc:	ldr	w14, [sp, #76]
  442700:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442704:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442708:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44270c:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442710:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442714:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442718:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44271c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442720:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442724:	add	x18, x18, #0xac
  442728:	add	x17, x17, #0x546
  44272c:	add	x16, x16, #0x391
  442730:	add	x15, x15, #0x320
  442734:	sub	x30, x29, #0x30
  442738:	add	x7, x7, #0x52c
  44273c:	add	x6, x6, #0x4d0
  442740:	mov	w5, #0x38                  	// #56
  442744:	mov	w4, #0x1                   	// #1
  442748:	add	x3, x3, #0x474
  44274c:	add	x2, x2, #0x402
  442750:	add	x1, x1, #0x198
  442754:	tbnz	w0, #0, 4435d0 <argp_parse@@Base+0x8f24>
  442758:	b	443a38 <argp_parse@@Base+0x938c>
  44275c:	ldp	x10, x9, [sp, #112]
  442760:	ldr	q0, [sp, #80]
  442764:	mov	w14, #0xfffffffe            	// #-2
  442768:	bfi	x9, x10, #8, #56
  44276c:	str	x9, [x22, #56]!
  442770:	ldr	x9, [sp, #152]
  442774:	stur	q0, [x22, #24]
  442778:	stur	q0, [x22, #40]
  44277c:	str	x9, [x22, #8]
  442780:	ldr	x9, [sp, #104]
  442784:	str	x9, [x22, #16]
  442788:	b	440e48 <argp_parse@@Base+0x679c>
  44278c:	ldur	x20, [x22, #-48]
  442790:	b	4430d8 <argp_parse@@Base+0x8a2c>
  442794:	ldr	x24, [x22, #8]
  442798:	mov	x11, xzr
  44279c:	b	4435d0 <argp_parse@@Base+0x8f24>
  4427a0:	ldur	x24, [x22, #-48]
  4427a4:	b	442fdc <argp_parse@@Base+0x8930>
  4427a8:	ldur	x27, [x22, #-48]
  4427ac:	b	443008 <argp_parse@@Base+0x895c>
  4427b0:	ldur	x11, [x22, #-48]
  4427b4:	b	442e64 <argp_parse@@Base+0x87b8>
  4427b8:	ldur	x27, [x22, #-56]
  4427bc:	ldur	w25, [x22, #-48]
  4427c0:	mov	x24, xzr
  4427c4:	mov	x11, xzr
  4427c8:	mov	x12, xzr
  4427cc:	str	xzr, [sp, #168]
  4427d0:	mov	x20, xzr
  4427d4:	b	4435d0 <argp_parse@@Base+0x8f24>
  4427d8:	ldr	x12, [x22]
  4427dc:	mov	x24, xzr
  4427e0:	mov	x11, xzr
  4427e4:	b	442fe4 <argp_parse@@Base+0x8938>
  4427e8:	ldur	x8, [x22, #-48]
  4427ec:	b	442e9c <argp_parse@@Base+0x87f0>
  4427f0:	ldr	x8, [x22]
  4427f4:	tbnz	x8, #63, 4431b4 <argp_parse@@Base+0x8b08>
  4427f8:	ldur	x9, [x22, #-48]
  4427fc:	cbnz	x8, 4428b4 <argp_parse@@Base+0x8208>
  442800:	b	4432ec <argp_parse@@Base+0x8c40>
  442804:	stp	x12, x11, [sp, #136]
  442808:	ldr	x10, [x19, #168]
  44280c:	ldp	x8, x9, [x22, #-48]
  442810:	str	w14, [sp, #76]
  442814:	str	w13, [sp, #132]
  442818:	cbz	x10, 44282c <argp_parse@@Base+0x8180>
  44281c:	ldr	x11, [x19, #48]
  442820:	cbnz	x11, 44282c <argp_parse@@Base+0x8180>
  442824:	ldrb	w11, [x19, #161]
  442828:	cbz	w11, 443628 <argp_parse@@Base+0x8f7c>
  44282c:	cmp	x9, #0x5
  442830:	b.lt	443294 <argp_parse@@Base+0x8be8>  // b.tstop
  442834:	mov	x11, #0xd70b                	// #55051
  442838:	mov	x12, #0x594b                	// #22859
  44283c:	movk	x11, #0x70a3, lsl #16
  442840:	movk	x12, #0x3886, lsl #16
  442844:	movk	x11, #0xa3d, lsl #32
  442848:	movk	x12, #0xc5d6, lsl #32
  44284c:	add	x10, x10, #0x1
  442850:	movk	x11, #0xa3d7, lsl #48
  442854:	movk	x12, #0x346d, lsl #48
  442858:	str	x10, [x19, #168]
  44285c:	smulh	x10, x8, x11
  442860:	smulh	x12, x8, x12
  442864:	add	x10, x10, x8
  442868:	asr	x13, x12, #11
  44286c:	add	x12, x13, x12, lsr #63
  442870:	asr	x13, x10, #6
  442874:	add	x10, x13, x10, lsr #63
  442878:	smulh	x11, x10, x11
  44287c:	add	x11, x11, x10
  442880:	asr	x13, x11, #6
  442884:	add	x11, x13, x11, lsr #63
  442888:	mov	w13, #0x64                  	// #100
  44288c:	sub	x9, x9, #0x4
  442890:	msub	x8, x10, x13, x8
  442894:	msub	x10, x11, x13, x10
  442898:	stp	x10, x8, [x19, #56]
  44289c:	stp	x12, x9, [x19, #40]
  4428a0:	b	4434f8 <argp_parse@@Base+0x8e4c>
  4428a4:	ldr	x8, [x22]
  4428a8:	tbnz	x8, #63, 4432d4 <argp_parse@@Base+0x8c28>
  4428ac:	ldur	x9, [x22, #-56]
  4428b0:	cbz	x8, 4432ec <argp_parse@@Base+0x8c40>
  4428b4:	tbnz	x9, #63, 4432cc <argp_parse@@Base+0x8c20>
  4428b8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4428bc:	udiv	x10, x10, x8
  4428c0:	cmp	x10, x9
  4428c4:	b.ge	4432ec <argp_parse@@Base+0x8c40>  // b.tcont
  4428c8:	b	443a34 <argp_parse@@Base+0x9388>
  4428cc:	mov	x24, xzr
  4428d0:	mov	x12, xzr
  4428d4:	str	xzr, [sp, #168]
  4428d8:	mov	x20, xzr
  4428dc:	mov	x27, xzr
  4428e0:	mov	w25, wzr
  4428e4:	mov	w11, #0x1                   	// #1
  4428e8:	b	4435d0 <argp_parse@@Base+0x8f24>
  4428ec:	ldr	w2, [x22]
  4428f0:	ldur	x8, [x22, #-8]
  4428f4:	ldur	q0, [x22, #-24]
  4428f8:	ldur	q1, [x22, #-40]
  4428fc:	ldur	q2, [x22, #-56]
  442900:	add	x1, sp, #0xb0
  442904:	mov	x0, x19
  442908:	str	x8, [sp, #224]
  44290c:	stp	q1, q0, [sp, #192]
  442910:	str	q2, [sp, #176]
  442914:	str	w14, [sp, #76]
  442918:	mov	w21, w13
  44291c:	stp	x12, x11, [sp, #136]
  442920:	bl	44407c <argp_parse@@Base+0x99d0>
  442924:	ldp	x12, x11, [sp, #136]
  442928:	ldr	w14, [sp, #76]
  44292c:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442930:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442934:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442938:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44293c:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442940:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442944:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442948:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44294c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442950:	mov	w13, w21
  442954:	add	x18, x18, #0xac
  442958:	add	x17, x17, #0x546
  44295c:	add	x16, x16, #0x391
  442960:	add	x15, x15, #0x320
  442964:	sub	x30, x29, #0x30
  442968:	add	x7, x7, #0x52c
  44296c:	add	x6, x6, #0x4d0
  442970:	mov	w5, #0x38                  	// #56
  442974:	mov	w4, #0x1                   	// #1
  442978:	add	x3, x3, #0x474
  44297c:	add	x2, x2, #0x402
  442980:	add	x1, x1, #0x198
  442984:	tbnz	w0, #0, 4435d0 <argp_parse@@Base+0x8f24>
  442988:	b	443a34 <argp_parse@@Base+0x9388>
  44298c:	ldur	x8, [x22, #-96]
  442990:	ldur	q0, [x22, #-112]
  442994:	ldr	x9, [sp, #56]
  442998:	str	x8, [x9, #16]
  44299c:	str	q0, [x9]
  4429a0:	ldur	x9, [x22, #-48]
  4429a4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4429a8:	neg	x10, x9
  4429ac:	cmp	x9, x8
  4429b0:	str	x10, [x19, #56]
  4429b4:	b.eq	443a34 <argp_parse@@Base+0x9388>  // b.none
  4429b8:	ldr	x9, [x22, #8]
  4429bc:	neg	x10, x9
  4429c0:	cmp	x9, x8
  4429c4:	str	x10, [x19, #64]
  4429c8:	b.ne	4435d0 <argp_parse@@Base+0x8f24>  // b.any
  4429cc:	b	443a34 <argp_parse@@Base+0x9388>
  4429d0:	ldur	x8, [x22, #-48]
  4429d4:	str	x8, [x19, #64]
  4429d8:	ldr	x8, [x22]
  4429dc:	str	x8, [x19, #56]
  4429e0:	b	4435d0 <argp_parse@@Base+0x8f24>
  4429e4:	mov	x24, #0xffffffffffffffff    	// #-1
  4429e8:	b	4435d0 <argp_parse@@Base+0x8f24>
  4429ec:	ldr	x8, [x19, #192]
  4429f0:	mov	w9, #0x1                   	// #1
  4429f4:	str	w9, [x19, #20]
  4429f8:	add	x8, x8, #0x1
  4429fc:	str	x8, [x19, #192]
  442a00:	b	4435d0 <argp_parse@@Base+0x8f24>
  442a04:	ldur	x8, [x22, #-56]
  442a08:	stp	x12, x11, [sp, #136]
  442a0c:	str	w13, [sp, #132]
  442a10:	str	w14, [sp, #76]
  442a14:	str	w8, [x19, #24]
  442a18:	b	442b0c <argp_parse@@Base+0x8460>
  442a1c:	ldur	x8, [x22, #-48]
  442a20:	mov	w9, #0x2                   	// #2
  442a24:	str	x8, [x19, #72]
  442a28:	ldr	x8, [sp, #48]
  442a2c:	stp	xzr, xzr, [x8]
  442a30:	str	xzr, [x8, #16]
  442a34:	str	w9, [x19, #28]
  442a38:	b	4435d0 <argp_parse@@Base+0x8f24>
  442a3c:	ldur	w8, [x22, #-56]
  442a40:	b	442d28 <argp_parse@@Base+0x867c>
  442a44:	ldp	x10, x9, [x22, #-48]
  442a48:	ldr	x8, [x22]
  442a4c:	str	x11, [sp, #144]
  442a50:	mov	w11, #0x64                  	// #100
  442a54:	cmp	x9, #0x3
  442a58:	ccmp	x8, #0x0, #0x0, lt  // lt = tstop
  442a5c:	mul	x9, x10, x11
  442a60:	csel	x9, x9, x10, lt  // lt = tstop
  442a64:	tbnz	x8, #63, 44330c <argp_parse@@Base+0x8c60>
  442a68:	ldurb	w11, [x22, #-56]
  442a6c:	tbnz	x9, #63, 443384 <argp_parse@@Base+0x8cd8>
  442a70:	mov	x10, #0x2222222222222222    	// #2459565876494606882
  442a74:	movk	x10, #0x222, lsl #48
  442a78:	cmp	x9, x10
  442a7c:	b.le	443398 <argp_parse@@Base+0x8cec>
  442a80:	mov	x0, x12
  442a84:	mov	w10, #0x1                   	// #1
  442a88:	mov	w12, #0x3c                  	// #60
  442a8c:	mul	x12, x9, x12
  442a90:	cbz	w11, 4433ac <argp_parse@@Base+0x8d00>
  442a94:	orr	x9, x8, #0x8000000000000000
  442a98:	cmp	x12, x9
  442a9c:	cset	w9, lt  // lt = tstop
  442aa0:	sub	x8, x12, x8
  442aa4:	b	4433c0 <argp_parse@@Base+0x8d14>
  442aa8:	ldur	x8, [x22, #-48]
  442aac:	str	x8, [x19, #72]
  442ab0:	ldr	x8, [sp, #48]
  442ab4:	stp	xzr, xzr, [x8]
  442ab8:	str	xzr, [x8, #16]
  442abc:	b	442d18 <argp_parse@@Base+0x866c>
  442ac0:	ldur	x8, [x22, #-112]
  442ac4:	str	x8, [x19, #56]
  442ac8:	ldur	x9, [x22, #-48]
  442acc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  442ad0:	neg	x10, x9
  442ad4:	cmp	x9, x8
  442ad8:	str	x10, [x19, #64]
  442adc:	b.eq	443a34 <argp_parse@@Base+0x9388>  // b.none
  442ae0:	ldr	x9, [x22, #8]
  442ae4:	neg	x10, x9
  442ae8:	cmp	x9, x8
  442aec:	b	443160 <argp_parse@@Base+0x8ab4>
  442af0:	ldur	x8, [x22, #-56]
  442af4:	b	442c0c <argp_parse@@Base+0x8560>
  442af8:	mov	w8, #0x6270                	// #25200
  442afc:	stp	x12, x11, [sp, #136]
  442b00:	str	w13, [sp, #132]
  442b04:	str	w14, [sp, #76]
  442b08:	str	w8, [x19, #24]
  442b0c:	ldr	x8, [x22, #48]
  442b10:	ldp	q1, q0, [x22, #16]
  442b14:	ldr	q2, [x22]
  442b18:	add	x1, sp, #0xb0
  442b1c:	mov	w2, #0x1                   	// #1
  442b20:	mov	x0, x19
  442b24:	str	x8, [sp, #224]
  442b28:	stp	q1, q0, [sp, #192]
  442b2c:	str	q2, [sp, #176]
  442b30:	mov	w21, #0x1                   	// #1
  442b34:	bl	44407c <argp_parse@@Base+0x99d0>
  442b38:	tbz	w0, #0, 443a38 <argp_parse@@Base+0x938c>
  442b3c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b40:	add	x1, x1, #0xf10
  442b44:	mov	w2, #0x5                   	// #5
  442b48:	mov	x0, xzr
  442b4c:	bl	4048b0 <dcgettext@plt>
  442b50:	mov	x1, x19
  442b54:	bl	443e34 <argp_parse@@Base+0x9788>
  442b58:	ldr	w14, [sp, #76]
  442b5c:	ldr	w13, [sp, #132]
  442b60:	ldp	x12, x11, [sp, #136]
  442b64:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b68:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b6c:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b70:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b74:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b78:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b7c:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b80:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b84:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442b88:	add	x1, x1, #0x198
  442b8c:	add	x2, x2, #0x402
  442b90:	add	x3, x3, #0x474
  442b94:	mov	w4, #0x1                   	// #1
  442b98:	mov	w5, #0x38                  	// #56
  442b9c:	add	x6, x6, #0x4d0
  442ba0:	add	x7, x7, #0x52c
  442ba4:	sub	x30, x29, #0x30
  442ba8:	add	x15, x15, #0x320
  442bac:	add	x16, x16, #0x391
  442bb0:	add	x17, x17, #0x546
  442bb4:	add	x18, x18, #0xac
  442bb8:	b	4435d0 <argp_parse@@Base+0x8f24>
  442bbc:	sub	x8, x22, #0x110
  442bc0:	ldr	x8, [x8]
  442bc4:	ldur	x9, [x22, #-160]
  442bc8:	ldur	x10, [x22, #-56]
  442bcc:	mov	x0, x11
  442bd0:	ldursw	x11, [x22, #-48]
  442bd4:	stp	x8, x9, [x19, #72]
  442bd8:	stp	x10, x11, [x19, #88]
  442bdc:	mov	x11, x0
  442be0:	b	442d18 <argp_parse@@Base+0x866c>
  442be4:	ldr	x8, [x22]
  442be8:	str	w8, [x19, #24]
  442bec:	b	4435d0 <argp_parse@@Base+0x8f24>
  442bf0:	ldr	x8, [x19, #200]
  442bf4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x19e3c>
  442bf8:	add	x1, x1, #0xad7
  442bfc:	add	x8, x8, #0x1
  442c00:	str	x8, [x19, #200]
  442c04:	b	442ec4 <argp_parse@@Base+0x8818>
  442c08:	ldur	x8, [x22, #-48]
  442c0c:	str	x8, [x19, #8]
  442c10:	ldr	x8, [x22]
  442c14:	mov	w9, #0x1                   	// #1
  442c18:	strb	w9, [x19, #224]
  442c1c:	str	w8, [x19, #16]
  442c20:	b	4435d0 <argp_parse@@Base+0x8f24>
  442c24:	ldur	x21, [x22, #-208]
  442c28:	ldrb	w8, [x19, #217]
  442c2c:	cmp	x21, #0x4
  442c30:	b.lt	4431d8 <argp_parse@@Base+0x8b2c>  // b.tstop
  442c34:	sub	x9, x22, #0xe0
  442c38:	cbz	w8, 442cd0 <argp_parse@@Base+0x8624>
  442c3c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c40:	add	x1, x1, #0xf20
  442c44:	mov	w2, #0x5                   	// #5
  442c48:	mov	x0, xzr
  442c4c:	str	w14, [sp, #76]
  442c50:	str	w13, [sp, #132]
  442c54:	stp	x12, x11, [sp, #136]
  442c58:	str	x9, [sp, #8]
  442c5c:	bl	4048b0 <dcgettext@plt>
  442c60:	ldur	x1, [x22, #-216]
  442c64:	mov	x2, x21
  442c68:	bl	4444a4 <argp_parse@@Base+0x9df8>
  442c6c:	ldr	x9, [sp, #8]
  442c70:	ldp	x12, x11, [sp, #136]
  442c74:	ldr	w13, [sp, #132]
  442c78:	ldr	w14, [sp, #76]
  442c7c:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c80:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c84:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c88:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c8c:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c90:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c94:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c98:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442c9c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442ca0:	add	x18, x18, #0xac
  442ca4:	add	x17, x17, #0x546
  442ca8:	add	x16, x16, #0x391
  442cac:	add	x15, x15, #0x320
  442cb0:	sub	x30, x29, #0x30
  442cb4:	add	x7, x7, #0x52c
  442cb8:	add	x6, x6, #0x4d0
  442cbc:	mov	w5, #0x38                  	// #56
  442cc0:	mov	w4, #0x1                   	// #1
  442cc4:	add	x3, x3, #0x474
  442cc8:	add	x2, x2, #0x402
  442ccc:	add	x1, x1, #0x198
  442cd0:	ldr	x8, [x9, #16]
  442cd4:	ldr	q0, [x9]
  442cd8:	ldr	x9, [sp, #56]
  442cdc:	str	x8, [x9, #16]
  442ce0:	str	q0, [x9]
  442ce4:	ldur	x8, [x22, #-104]
  442ce8:	b	442f58 <argp_parse@@Base+0x88ac>
  442cec:	ldr	x8, [x19, #168]
  442cf0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  442cf4:	add	x1, x1, #0xd9d
  442cf8:	add	x8, x8, #0x1
  442cfc:	str	x8, [x19, #168]
  442d00:	b	442ec4 <argp_parse@@Base+0x8818>
  442d04:	ldur	x8, [x22, #-160]
  442d08:	ldur	x9, [x22, #-48]
  442d0c:	stp	x8, x9, [x19, #72]
  442d10:	ldr	x8, [sp, #64]
  442d14:	stp	xzr, xzr, [x8]
  442d18:	ldr	x8, [x22]
  442d1c:	str	w8, [x19, #28]
  442d20:	b	4435d0 <argp_parse@@Base+0x8f24>
  442d24:	ldr	w8, [x22]
  442d28:	add	w8, w8, #0xe10
  442d2c:	str	w8, [x19, #24]
  442d30:	b	4435d0 <argp_parse@@Base+0x8f24>
  442d34:	ldr	q0, [x22]
  442d38:	ldr	x9, [sp, #64]
  442d3c:	mov	w8, #0x1                   	// #1
  442d40:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442d44:	add	x1, x1, #0xee6
  442d48:	str	q0, [x9]
  442d4c:	strb	w8, [x19, #160]
  442d50:	b	442ec4 <argp_parse@@Base+0x8818>
  442d54:	ldr	x8, [x19, #200]
  442d58:	ldr	x9, [x19, #168]
  442d5c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442d60:	add	x1, x1, #0xef8
  442d64:	add	x8, x8, #0x1
  442d68:	add	x9, x9, #0x1
  442d6c:	str	x8, [x19, #200]
  442d70:	str	x9, [x19, #168]
  442d74:	b	442ec4 <argp_parse@@Base+0x8818>
  442d78:	ldr	x8, [x19, #176]
  442d7c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442d80:	add	x1, x1, #0xf0c
  442d84:	add	x8, x8, #0x1
  442d88:	str	x8, [x19, #176]
  442d8c:	b	442ec4 <argp_parse@@Base+0x8818>
  442d90:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442d94:	add	x1, x1, #0xf10
  442d98:	b	442e74 <argp_parse@@Base+0x87c8>
  442d9c:	ldur	x8, [x22, #-160]
  442da0:	ldur	x9, [x22, #-48]
  442da4:	mov	w10, #0x2                   	// #2
  442da8:	stp	x8, x9, [x19, #72]
  442dac:	ldr	x8, [sp, #64]
  442db0:	stp	xzr, xzr, [x8]
  442db4:	str	w10, [x19, #28]
  442db8:	b	4435d0 <argp_parse@@Base+0x8f24>
  442dbc:	mov	x11, xzr
  442dc0:	mov	x12, xzr
  442dc4:	str	xzr, [sp, #168]
  442dc8:	mov	x20, xzr
  442dcc:	mov	x27, xzr
  442dd0:	mov	w25, wzr
  442dd4:	mov	w24, #0x1                   	// #1
  442dd8:	b	4435d0 <argp_parse@@Base+0x8f24>
  442ddc:	sub	x8, x22, #0x110
  442de0:	ldur	x9, [x22, #-160]
  442de4:	ldur	x10, [x22, #-56]
  442de8:	mov	x21, x11
  442dec:	ldursw	x11, [x22, #-48]
  442df0:	ldr	x8, [x8]
  442df4:	mov	x0, x12
  442df8:	mov	w12, #0x2                   	// #2
  442dfc:	stp	x10, x11, [x19, #88]
  442e00:	mov	x11, x21
  442e04:	stp	x8, x9, [x19, #72]
  442e08:	str	w12, [x19, #28]
  442e0c:	mov	x12, x0
  442e10:	b	4435d0 <argp_parse@@Base+0x8f24>
  442e14:	ldr	x8, [x19, #184]
  442e18:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442e1c:	add	x1, x1, #0xf01
  442e20:	add	x8, x8, #0x1
  442e24:	str	x8, [x19, #184]
  442e28:	b	442ec4 <argp_parse@@Base+0x8818>
  442e2c:	ldr	x8, [x19, #208]
  442e30:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442e34:	add	x1, x1, #0xf07
  442e38:	add	x8, x8, #0x1
  442e3c:	str	x8, [x19, #208]
  442e40:	b	442ec4 <argp_parse@@Base+0x8818>
  442e44:	ldr	x24, [x22, #8]
  442e48:	b	4435d0 <argp_parse@@Base+0x8f24>
  442e4c:	ldur	x8, [x22, #-104]
  442e50:	str	x8, [x19, #64]
  442e54:	ldur	x8, [x22, #-56]
  442e58:	str	x8, [x19, #56]
  442e5c:	b	44327c <argp_parse@@Base+0x8bd0>
  442e60:	ldur	x11, [x22, #-56]
  442e64:	mov	x24, xzr
  442e68:	b	442fe0 <argp_parse@@Base+0x8934>
  442e6c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442e70:	add	x1, x1, #0xf19
  442e74:	mov	w2, #0x5                   	// #5
  442e78:	mov	x0, xzr
  442e7c:	mov	w21, w14
  442e80:	str	w13, [sp, #132]
  442e84:	stp	x12, x11, [sp, #136]
  442e88:	bl	4048b0 <dcgettext@plt>
  442e8c:	mov	x1, x19
  442e90:	bl	443e34 <argp_parse@@Base+0x9788>
  442e94:	b	442ee4 <argp_parse@@Base+0x8838>
  442e98:	ldur	x8, [x22, #-56]
  442e9c:	mov	x24, xzr
  442ea0:	mov	x11, xzr
  442ea4:	mov	x12, xzr
  442ea8:	mov	x20, xzr
  442eac:	mov	x27, xzr
  442eb0:	str	x8, [sp, #168]
  442eb4:	mov	w25, wzr
  442eb8:	b	4435d0 <argp_parse@@Base+0x8f24>
  442ebc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  442ec0:	add	x1, x1, #0xe46
  442ec4:	mov	w2, #0x5                   	// #5
  442ec8:	mov	x0, xzr
  442ecc:	mov	w21, w14
  442ed0:	str	w13, [sp, #132]
  442ed4:	stp	x12, x11, [sp, #136]
  442ed8:	bl	4048b0 <dcgettext@plt>
  442edc:	mov	x1, x19
  442ee0:	bl	443a5c <argp_parse@@Base+0x93b0>
  442ee4:	ldp	x12, x11, [sp, #136]
  442ee8:	ldr	w13, [sp, #132]
  442eec:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442ef0:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442ef4:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442ef8:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442efc:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442f00:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442f04:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442f08:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442f0c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  442f10:	mov	w14, w21
  442f14:	add	x18, x18, #0xac
  442f18:	add	x17, x17, #0x546
  442f1c:	add	x16, x16, #0x391
  442f20:	add	x15, x15, #0x320
  442f24:	sub	x30, x29, #0x30
  442f28:	add	x7, x7, #0x52c
  442f2c:	add	x6, x6, #0x4d0
  442f30:	mov	w5, #0x38                  	// #56
  442f34:	mov	w4, #0x1                   	// #1
  442f38:	add	x3, x3, #0x474
  442f3c:	add	x2, x2, #0x402
  442f40:	add	x1, x1, #0x198
  442f44:	b	4435d0 <argp_parse@@Base+0x8f24>
  442f48:	ldr	x8, [x22]
  442f4c:	str	w8, [x19, #20]
  442f50:	b	4435d0 <argp_parse@@Base+0x8f24>
  442f54:	ldur	x8, [x22, #-56]
  442f58:	str	x8, [x19, #56]
  442f5c:	ldr	x8, [x22, #8]
  442f60:	str	x8, [x19, #64]
  442f64:	b	4435d0 <argp_parse@@Base+0x8f24>
  442f68:	ldr	x8, [x19, #208]
  442f6c:	mov	x21, x11
  442f70:	mov	w11, #0x64                  	// #100
  442f74:	add	x8, x8, #0x1
  442f78:	str	x8, [x19, #208]
  442f7c:	ldp	x10, x9, [x22, #-48]
  442f80:	ldr	x8, [x22]
  442f84:	cmp	x9, #0x3
  442f88:	ccmp	x8, #0x0, #0x0, lt  // lt = tstop
  442f8c:	mul	x9, x10, x11
  442f90:	csel	x9, x9, x10, lt  // lt = tstop
  442f94:	tbnz	x8, #63, 443348 <argp_parse@@Base+0x8c9c>
  442f98:	ldurb	w11, [x22, #-56]
  442f9c:	tbnz	x9, #63, 443448 <argp_parse@@Base+0x8d9c>
  442fa0:	mov	x10, #0x2222222222222222    	// #2459565876494606882
  442fa4:	movk	x10, #0x222, lsl #48
  442fa8:	cmp	x9, x10
  442fac:	b.le	44345c <argp_parse@@Base+0x8db0>
  442fb0:	mov	x0, x12
  442fb4:	mov	w10, #0x1                   	// #1
  442fb8:	mov	w12, #0x3c                  	// #60
  442fbc:	mul	x12, x9, x12
  442fc0:	cbz	w11, 443470 <argp_parse@@Base+0x8dc4>
  442fc4:	orr	x9, x8, #0x8000000000000000
  442fc8:	cmp	x12, x9
  442fcc:	cset	w9, lt  // lt = tstop
  442fd0:	sub	x8, x12, x8
  442fd4:	b	443484 <argp_parse@@Base+0x8dd8>
  442fd8:	ldur	x24, [x22, #-56]
  442fdc:	mov	x11, xzr
  442fe0:	mov	x12, xzr
  442fe4:	str	xzr, [sp, #168]
  442fe8:	mov	x20, xzr
  442fec:	mov	x27, xzr
  442ff0:	mov	w25, wzr
  442ff4:	b	4435d0 <argp_parse@@Base+0x8f24>
  442ff8:	mov	w8, #0x6270                	// #25200
  442ffc:	str	w8, [x19, #24]
  443000:	b	4435d0 <argp_parse@@Base+0x8f24>
  443004:	ldur	x27, [x22, #-56]
  443008:	mov	x24, xzr
  44300c:	mov	x11, xzr
  443010:	mov	x12, xzr
  443014:	str	xzr, [sp, #168]
  443018:	mov	x20, xzr
  44301c:	mov	w25, wzr
  443020:	b	4435d0 <argp_parse@@Base+0x8f24>
  443024:	ldr	x10, [x19, #168]
  443028:	ldp	x8, x9, [x22, #8]
  44302c:	str	x11, [sp, #144]
  443030:	cbz	x10, 443044 <argp_parse@@Base+0x8998>
  443034:	ldr	x11, [x19, #48]
  443038:	cbnz	x11, 443044 <argp_parse@@Base+0x8998>
  44303c:	ldrb	w11, [x19, #161]
  443040:	cbz	w11, 44364c <argp_parse@@Base+0x8fa0>
  443044:	cmp	x9, #0x5
  443048:	b.lt	4432b0 <argp_parse@@Base+0x8c04>  // b.tstop
  44304c:	mov	x11, #0xd70b                	// #55051
  443050:	mov	x21, x12
  443054:	mov	x12, #0x594b                	// #22859
  443058:	movk	x11, #0x70a3, lsl #16
  44305c:	movk	x12, #0x3886, lsl #16
  443060:	movk	x11, #0xa3d, lsl #32
  443064:	movk	x12, #0xc5d6, lsl #32
  443068:	add	x10, x10, #0x1
  44306c:	movk	x11, #0xa3d7, lsl #48
  443070:	movk	x12, #0x346d, lsl #48
  443074:	str	x10, [x19, #168]
  443078:	smulh	x10, x8, x11
  44307c:	smulh	x12, x8, x12
  443080:	add	x10, x10, x8
  443084:	mov	w0, w13
  443088:	asr	x13, x12, #11
  44308c:	add	x12, x13, x12, lsr #63
  443090:	asr	x13, x10, #6
  443094:	add	x10, x13, x10, lsr #63
  443098:	smulh	x11, x10, x11
  44309c:	add	x11, x11, x10
  4430a0:	asr	x13, x11, #6
  4430a4:	add	x11, x13, x11, lsr #63
  4430a8:	mov	w13, #0x64                  	// #100
  4430ac:	msub	x8, x10, x13, x8
  4430b0:	msub	x10, x11, x13, x10
  4430b4:	sub	x9, x9, #0x4
  4430b8:	mov	w13, w0
  4430bc:	stp	x10, x8, [x19, #56]
  4430c0:	str	x12, [x19, #40]
  4430c4:	mov	x12, x21
  4430c8:	str	x9, [x19, #48]
  4430cc:	ldr	x11, [sp, #144]
  4430d0:	b	4435d0 <argp_parse@@Base+0x8f24>
  4430d4:	ldur	x20, [x22, #-56]
  4430d8:	mov	x24, xzr
  4430dc:	mov	x11, xzr
  4430e0:	mov	x12, xzr
  4430e4:	str	xzr, [sp, #168]
  4430e8:	mov	x27, xzr
  4430ec:	mov	w25, wzr
  4430f0:	b	4435d0 <argp_parse@@Base+0x8f24>
  4430f4:	mov	w8, #0x1                   	// #1
  4430f8:	mov	x24, xzr
  4430fc:	mov	x11, xzr
  443100:	mov	x12, xzr
  443104:	mov	x20, xzr
  443108:	mov	x27, xzr
  44310c:	mov	w25, wzr
  443110:	str	x8, [sp, #168]
  443114:	b	4435d0 <argp_parse@@Base+0x8f24>
  443118:	str	xzr, [x19, #8]
  44311c:	ldur	x8, [x22, #-56]
  443120:	str	w8, [x19, #16]
  443124:	b	4435d0 <argp_parse@@Base+0x8f24>
  443128:	str	xzr, [x19, #8]
  44312c:	ldr	x8, [x22]
  443130:	str	w8, [x19, #16]
  443134:	b	4435d0 <argp_parse@@Base+0x8f24>
  443138:	ldur	x8, [x22, #-168]
  44313c:	b	443270 <argp_parse@@Base+0x8bc4>
  443140:	ldur	x8, [x22, #-104]
  443144:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  443148:	str	x8, [x19, #64]
  44314c:	ldur	x8, [x22, #-56]
  443150:	str	x8, [x19, #56]
  443154:	ldr	x8, [x22, #8]
  443158:	neg	x10, x8
  44315c:	cmp	x8, x9
  443160:	str	x10, [x19, #40]
  443164:	b.eq	443a34 <argp_parse@@Base+0x9388>  // b.none
  443168:	ldr	x8, [x22, #16]
  44316c:	str	x8, [x19, #48]
  443170:	b	4435d0 <argp_parse@@Base+0x8f24>
  443174:	mov	x24, xzr
  443178:	mov	x11, xzr
  44317c:	mov	x12, xzr
  443180:	str	xzr, [sp, #168]
  443184:	mov	x20, xzr
  443188:	mov	w25, wzr
  44318c:	mov	w27, #0x1                   	// #1
  443190:	b	4435d0 <argp_parse@@Base+0x8f24>
  443194:	mov	x24, xzr
  443198:	mov	x11, xzr
  44319c:	mov	x12, xzr
  4431a0:	str	xzr, [sp, #168]
  4431a4:	mov	x27, xzr
  4431a8:	mov	w25, wzr
  4431ac:	mov	w20, #0x1                   	// #1
  4431b0:	b	4435d0 <argp_parse@@Base+0x8f24>
  4431b4:	ldur	x9, [x22, #-48]
  4431b8:	tbnz	x9, #63, 4432dc <argp_parse@@Base+0x8c30>
  4431bc:	cmn	x8, #0x1
  4431c0:	b.eq	4432ec <argp_parse@@Base+0x8c40>  // b.none
  4431c4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4431c8:	sdiv	x10, x10, x8
  4431cc:	cmp	x10, x9
  4431d0:	b.ge	4432ec <argp_parse@@Base+0x8c40>  // b.tcont
  4431d4:	b	443a34 <argp_parse@@Base+0x9388>
  4431d8:	cbz	w8, 44326c <argp_parse@@Base+0x8bc0>
  4431dc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4431e0:	add	x1, x1, #0xf58
  4431e4:	mov	w2, #0x5                   	// #5
  4431e8:	mov	x0, xzr
  4431ec:	str	w14, [sp, #76]
  4431f0:	str	w13, [sp, #132]
  4431f4:	mov	x21, x12
  4431f8:	str	x11, [sp, #144]
  4431fc:	bl	4048b0 <dcgettext@plt>
  443200:	ldur	x1, [x22, #-216]
  443204:	bl	4444a4 <argp_parse@@Base+0x9df8>
  443208:	ldr	x11, [sp, #144]
  44320c:	ldr	w13, [sp, #132]
  443210:	ldr	w14, [sp, #76]
  443214:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443218:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44321c:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443220:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443224:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443228:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44322c:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443230:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443234:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443238:	mov	x12, x21
  44323c:	add	x18, x18, #0xac
  443240:	add	x17, x17, #0x546
  443244:	add	x16, x16, #0x391
  443248:	add	x15, x15, #0x320
  44324c:	sub	x30, x29, #0x30
  443250:	add	x7, x7, #0x52c
  443254:	add	x6, x6, #0x4d0
  443258:	mov	w5, #0x38                  	// #56
  44325c:	mov	w4, #0x1                   	// #1
  443260:	add	x3, x3, #0x474
  443264:	add	x2, x2, #0x402
  443268:	add	x1, x1, #0x198
  44326c:	ldur	x8, [x22, #-216]
  443270:	str	x8, [x19, #56]
  443274:	ldur	x8, [x22, #-104]
  443278:	str	x8, [x19, #64]
  44327c:	ldr	x8, [x22, #16]
  443280:	ldr	q0, [x22]
  443284:	ldr	x9, [sp, #56]
  443288:	str	x8, [x9, #16]
  44328c:	str	q0, [x9]
  443290:	b	4435d0 <argp_parse@@Base+0x8f24>
  443294:	ldr	x10, [x19, #200]
  443298:	cmp	x9, #0x3
  44329c:	add	x10, x10, #0x1
  4432a0:	str	x10, [x19, #200]
  4432a4:	b.ge	4434b8 <argp_parse@@Base+0x8e0c>  // b.tcont
  4432a8:	mov	x9, xzr
  4432ac:	b	4434e4 <argp_parse@@Base+0x8e38>
  4432b0:	ldr	x10, [x19, #200]
  4432b4:	cmp	x9, #0x3
  4432b8:	add	x10, x10, #0x1
  4432bc:	str	x10, [x19, #200]
  4432c0:	b.ge	44358c <argp_parse@@Base+0x8ee0>  // b.tcont
  4432c4:	mov	x9, xzr
  4432c8:	b	4435b8 <argp_parse@@Base+0x8f0c>
  4432cc:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4432d0:	b	4432e0 <argp_parse@@Base+0x8c34>
  4432d4:	ldur	x9, [x22, #-56]
  4432d8:	tbz	x9, #63, 4431bc <argp_parse@@Base+0x8b10>
  4432dc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4432e0:	sdiv	x10, x10, x8
  4432e4:	cmp	x9, x10
  4432e8:	b.lt	443a34 <argp_parse@@Base+0x9388>  // b.tstop
  4432ec:	mov	x24, xzr
  4432f0:	mov	x11, xzr
  4432f4:	str	xzr, [sp, #168]
  4432f8:	mov	x20, xzr
  4432fc:	mov	x27, xzr
  443300:	mov	w25, wzr
  443304:	mul	x12, x9, x8
  443308:	b	4435d0 <argp_parse@@Base+0x8f24>
  44330c:	mov	x8, #0xd70b                	// #55051
  443310:	movk	x8, #0x70a3, lsl #16
  443314:	movk	x8, #0xa3d, lsl #32
  443318:	movk	x8, #0xa3d7, lsl #48
  44331c:	smulh	x8, x9, x8
  443320:	add	x8, x8, x9
  443324:	mov	x0, x12
  443328:	asr	x12, x8, #6
  44332c:	mov	w11, #0x64                  	// #100
  443330:	add	x8, x12, x8, lsr #63
  443334:	mov	w10, #0x3c                  	// #60
  443338:	msub	x9, x8, x11, x9
  44333c:	madd	x8, x8, x10, x9
  443340:	mov	w9, #0x1                   	// #1
  443344:	b	4433c8 <argp_parse@@Base+0x8d1c>
  443348:	mov	x8, #0xd70b                	// #55051
  44334c:	movk	x8, #0x70a3, lsl #16
  443350:	movk	x8, #0xa3d, lsl #32
  443354:	movk	x8, #0xa3d7, lsl #48
  443358:	smulh	x8, x9, x8
  44335c:	add	x8, x8, x9
  443360:	mov	x0, x12
  443364:	asr	x12, x8, #6
  443368:	mov	w11, #0x64                  	// #100
  44336c:	add	x8, x12, x8, lsr #63
  443370:	mov	w10, #0x3c                  	// #60
  443374:	msub	x9, x8, x11, x9
  443378:	madd	x8, x8, x10, x9
  44337c:	mov	w9, #0x1                   	// #1
  443380:	b	44348c <argp_parse@@Base+0x8de0>
  443384:	mov	x10, #0xdddddddddddddddd    	// #-2459565876494606883
  443388:	movk	x10, #0xddde
  44338c:	movk	x10, #0xfddd, lsl #48
  443390:	cmp	x9, x10
  443394:	b.lt	442a80 <argp_parse@@Base+0x83d4>  // b.tstop
  443398:	mov	x0, x12
  44339c:	mov	w10, wzr
  4433a0:	mov	w12, #0x3c                  	// #60
  4433a4:	mul	x12, x9, x12
  4433a8:	cbnz	w11, 442a94 <argp_parse@@Base+0x83e8>
  4433ac:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4433b0:	sub	x9, x9, x8
  4433b4:	cmp	x9, x12
  4433b8:	cset	w9, lt  // lt = tstop
  4433bc:	add	x8, x12, x8
  4433c0:	orr	w9, w10, w9
  4433c4:	eor	w9, w9, #0x1
  4433c8:	mov	w21, #0x1                   	// #1
  4433cc:	cbz	w9, 443a38 <argp_parse@@Base+0x938c>
  4433d0:	add	x9, x8, #0x5a0
  4433d4:	cmp	x9, #0xb40
  4433d8:	b.hi	443a38 <argp_parse@@Base+0x938c>  // b.pmore
  4433dc:	mov	w9, #0x3c                  	// #60
  4433e0:	mul	w8, w8, w9
  4433e4:	str	w8, [x19, #24]
  4433e8:	ldur	x9, [x22, #-112]
  4433ec:	tbnz	x9, #63, 44340c <argp_parse@@Base+0x8d60>
  4433f0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4433f4:	sub	x11, x10, x9
  4433f8:	sxtw	x10, w8
  4433fc:	cmp	x11, x10
  443400:	mov	x12, x0
  443404:	b.ge	443424 <argp_parse@@Base+0x8d78>  // b.tcont
  443408:	b	443a2c <argp_parse@@Base+0x9380>
  44340c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  443410:	sxtw	x10, w8
  443414:	sub	x11, x11, x9
  443418:	cmp	x11, x10
  44341c:	mov	x12, x0
  443420:	b.gt	443a2c <argp_parse@@Base+0x9380>
  443424:	add	x10, x9, x10
  443428:	mov	w11, #0x80000000            	// #-2147483648
  44342c:	add	x10, x10, x11
  443430:	lsr	x10, x10, #32
  443434:	cbnz	x10, 443a2c <argp_parse@@Base+0x9380>
  443438:	ldr	x11, [sp, #144]
  44343c:	add	w8, w8, w9
  443440:	str	w8, [x19, #24]
  443444:	b	4435d0 <argp_parse@@Base+0x8f24>
  443448:	mov	x10, #0xdddddddddddddddd    	// #-2459565876494606883
  44344c:	movk	x10, #0xddde
  443450:	movk	x10, #0xfddd, lsl #48
  443454:	cmp	x9, x10
  443458:	b.lt	442fb0 <argp_parse@@Base+0x8904>  // b.tstop
  44345c:	mov	x0, x12
  443460:	mov	w10, wzr
  443464:	mov	w12, #0x3c                  	// #60
  443468:	mul	x12, x9, x12
  44346c:	cbnz	w11, 442fc4 <argp_parse@@Base+0x8918>
  443470:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  443474:	sub	x9, x9, x8
  443478:	cmp	x9, x12
  44347c:	cset	w9, lt  // lt = tstop
  443480:	add	x8, x12, x8
  443484:	orr	w9, w10, w9
  443488:	eor	w9, w9, #0x1
  44348c:	mov	x11, x21
  443490:	mov	w21, #0x1                   	// #1
  443494:	cbz	w9, 443a38 <argp_parse@@Base+0x938c>
  443498:	add	x9, x8, #0x5a0
  44349c:	cmp	x9, #0xb40
  4434a0:	b.hi	443a38 <argp_parse@@Base+0x938c>  // b.pmore
  4434a4:	mov	w9, #0x3c                  	// #60
  4434a8:	mul	w8, w8, w9
  4434ac:	str	w8, [x19, #24]
  4434b0:	mov	x12, x0
  4434b4:	b	4435d0 <argp_parse@@Base+0x8f24>
  4434b8:	mov	x9, #0xd70b                	// #55051
  4434bc:	movk	x9, #0x70a3, lsl #16
  4434c0:	movk	x9, #0xa3d, lsl #32
  4434c4:	movk	x9, #0xa3d7, lsl #48
  4434c8:	smulh	x9, x8, x9
  4434cc:	add	x9, x9, x8
  4434d0:	asr	x10, x9, #6
  4434d4:	add	x10, x10, x9, lsr #63
  4434d8:	mov	w9, #0x64                  	// #100
  4434dc:	msub	x9, x10, x9, x8
  4434e0:	mov	x8, x10
  4434e4:	stp	x8, x9, [x19, #72]
  4434e8:	ldr	x8, [sp, #64]
  4434ec:	stp	xzr, xzr, [x8]
  4434f0:	mov	w8, #0x2                   	// #2
  4434f4:	str	w8, [x19, #28]
  4434f8:	ldr	x8, [x22, #48]
  4434fc:	ldp	q1, q0, [x22, #16]
  443500:	ldr	q2, [x22]
  443504:	add	x1, sp, #0xb0
  443508:	mov	w2, #0x1                   	// #1
  44350c:	mov	x0, x19
  443510:	str	x8, [sp, #224]
  443514:	stp	q1, q0, [sp, #192]
  443518:	str	q2, [sp, #176]
  44351c:	mov	w21, #0x1                   	// #1
  443520:	bl	44407c <argp_parse@@Base+0x99d0>
  443524:	ldr	w14, [sp, #76]
  443528:	ldr	w13, [sp, #132]
  44352c:	ldp	x12, x11, [sp, #136]
  443530:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443534:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443538:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44353c:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443540:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443544:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443548:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44354c:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443550:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443554:	add	x1, x1, #0x198
  443558:	add	x2, x2, #0x402
  44355c:	add	x3, x3, #0x474
  443560:	mov	w4, #0x1                   	// #1
  443564:	mov	w5, #0x38                  	// #56
  443568:	add	x6, x6, #0x4d0
  44356c:	add	x7, x7, #0x52c
  443570:	sub	x30, x29, #0x30
  443574:	add	x15, x15, #0x320
  443578:	add	x16, x16, #0x391
  44357c:	add	x17, x17, #0x546
  443580:	add	x18, x18, #0xac
  443584:	tbnz	w0, #0, 4435d0 <argp_parse@@Base+0x8f24>
  443588:	b	443a38 <argp_parse@@Base+0x938c>
  44358c:	mov	x9, #0xd70b                	// #55051
  443590:	movk	x9, #0x70a3, lsl #16
  443594:	movk	x9, #0xa3d, lsl #32
  443598:	movk	x9, #0xa3d7, lsl #48
  44359c:	smulh	x9, x8, x9
  4435a0:	add	x9, x9, x8
  4435a4:	asr	x10, x9, #6
  4435a8:	add	x10, x10, x9, lsr #63
  4435ac:	mov	w9, #0x64                  	// #100
  4435b0:	msub	x9, x10, x9, x8
  4435b4:	mov	x8, x10
  4435b8:	ldr	x11, [sp, #144]
  4435bc:	stp	x8, x9, [x19, #72]
  4435c0:	ldr	x8, [sp, #64]
  4435c4:	stp	xzr, xzr, [x8]
  4435c8:	mov	w8, #0x2                   	// #2
  4435cc:	str	w8, [x19, #28]
  4435d0:	ldrb	w9, [x6, x26]
  4435d4:	mneg	x8, x28, x5
  4435d8:	sub	x23, x23, x28
  4435dc:	add	x22, x22, x8
  4435e0:	sub	x8, x9, #0x1c
  4435e4:	ldrsh	w10, [x30, x23, lsl #1]
  4435e8:	ldrsb	w9, [x7, x8]
  4435ec:	str	x24, [x22, #56]!
  4435f0:	stp	x11, x12, [x22, #8]
  4435f4:	ldr	x11, [sp, #168]
  4435f8:	add	w9, w10, w9
  4435fc:	cmp	w9, #0x70
  443600:	str	x27, [x22, #40]
  443604:	stp	x11, x20, [x22, #24]
  443608:	stp	w25, w13, [x22, #48]
  44360c:	b.hi	440e44 <argp_parse@@Base+0x6798>  // b.pmore
  443610:	ldrsb	w11, [x15, x9]
  443614:	and	w10, w10, #0xffff
  443618:	cmp	w10, w11, uxth
  44361c:	b.ne	440e44 <argp_parse@@Base+0x6798>  // b.any
  443620:	ldrb	w8, [x16, x9]
  443624:	b	440e48 <argp_parse@@Base+0x679c>
  443628:	ldur	x10, [x22, #-56]
  44362c:	cmp	x9, #0x2
  443630:	b.gt	443670 <argp_parse@@Base+0x8fc4>
  443634:	ldr	x11, [x19, #200]
  443638:	cbnz	x11, 443670 <argp_parse@@Base+0x8fc4>
  44363c:	mov	w10, #0x1                   	// #1
  443640:	mov	x9, xzr
  443644:	str	x10, [x19, #200]
  443648:	b	4434e4 <argp_parse@@Base+0x8e38>
  44364c:	ldr	x10, [x22]
  443650:	cmp	x9, #0x2
  443654:	b.gt	443684 <argp_parse@@Base+0x8fd8>
  443658:	ldr	x11, [x19, #200]
  44365c:	cbnz	x11, 443684 <argp_parse@@Base+0x8fd8>
  443660:	mov	w10, #0x1                   	// #1
  443664:	mov	x9, xzr
  443668:	str	x10, [x19, #200]
  44366c:	b	4435b8 <argp_parse@@Base+0x8f0c>
  443670:	mov	w11, #0x1                   	// #1
  443674:	stp	x10, x8, [x19, #32]
  443678:	strb	w11, [x19, #216]
  44367c:	str	x9, [x19, #48]
  443680:	b	4434f8 <argp_parse@@Base+0x8e4c>
  443684:	mov	w11, #0x1                   	// #1
  443688:	stp	x10, x8, [x19, #32]
  44368c:	strb	w11, [x19, #216]
  443690:	b	4430c8 <argp_parse@@Base+0x8a1c>
  443694:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443698:	add	x0, x0, #0x750
  44369c:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436a0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436a4:	add	x0, x0, #0x760
  4436a8:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436ac:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436b0:	add	x0, x0, #0x770
  4436b4:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436b8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436bc:	add	x0, x0, #0x780
  4436c0:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436c4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436c8:	add	x0, x0, #0x7a0
  4436cc:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436d0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436d4:	add	x0, x0, #0x7b0
  4436d8:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436dc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436e0:	add	x0, x0, #0x7d0
  4436e4:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436e8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436ec:	add	x0, x0, #0x800
  4436f0:	b	4425a8 <argp_parse@@Base+0x7efc>
  4436f4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4436f8:	add	x0, x0, #0x810
  4436fc:	b	4425a8 <argp_parse@@Base+0x7efc>
  443700:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443704:	add	x0, x0, #0x820
  443708:	b	4425a8 <argp_parse@@Base+0x7efc>
  44370c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443710:	add	x0, x0, #0x840
  443714:	b	4425a8 <argp_parse@@Base+0x7efc>
  443718:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44371c:	add	x0, x0, #0x850
  443720:	b	4425a8 <argp_parse@@Base+0x7efc>
  443724:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443728:	add	x0, x0, #0x860
  44372c:	b	4425a8 <argp_parse@@Base+0x7efc>
  443730:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443734:	add	x0, x0, #0x870
  443738:	b	4425a8 <argp_parse@@Base+0x7efc>
  44373c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443740:	add	x0, x0, #0x880
  443744:	b	4425a8 <argp_parse@@Base+0x7efc>
  443748:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44374c:	add	x0, x0, #0x890
  443750:	b	4425a8 <argp_parse@@Base+0x7efc>
  443754:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443758:	add	x0, x0, #0x8a0
  44375c:	b	4425a8 <argp_parse@@Base+0x7efc>
  443760:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443764:	add	x0, x0, #0x8b0
  443768:	b	4425a8 <argp_parse@@Base+0x7efc>
  44376c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443770:	add	x0, x0, #0x8c0
  443774:	b	4425a8 <argp_parse@@Base+0x7efc>
  443778:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44377c:	add	x0, x0, #0x8d0
  443780:	b	4425a8 <argp_parse@@Base+0x7efc>
  443784:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443788:	add	x0, x0, #0x8e0
  44378c:	b	4425a8 <argp_parse@@Base+0x7efc>
  443790:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443794:	add	x0, x0, #0x8f0
  443798:	b	4425a8 <argp_parse@@Base+0x7efc>
  44379c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4437a0:	add	x0, x0, #0x900
  4437a4:	b	4425a8 <argp_parse@@Base+0x7efc>
  4437a8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4437ac:	add	x0, x0, #0x910
  4437b0:	b	4425a8 <argp_parse@@Base+0x7efc>
  4437b4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4437b8:	add	x0, x0, #0x930
  4437bc:	b	4425a8 <argp_parse@@Base+0x7efc>
  4437c0:	tst	w8, #0xff
  4437c4:	b.eq	443880 <argp_parse@@Base+0x91d4>  // b.none
  4437c8:	ldr	x9, [sp, #40]
  4437cc:	and	w8, w8, #0xff
  4437d0:	ldrb	w10, [sp, #177]
  4437d4:	cmp	w8, #0x2e
  4437d8:	cset	w11, ne  // ne = any
  4437dc:	add	x12, sp, #0xb0
  4437e0:	cset	w8, eq  // eq = none
  4437e4:	csel	x9, x12, x9, eq  // eq = none
  4437e8:	orr	x11, x12, x11
  4437ec:	strb	w10, [x11]
  4437f0:	cbz	w10, 443818 <argp_parse@@Base+0x916c>
  4437f4:	ldr	x10, [sp, #24]
  4437f8:	ldurb	w11, [x10, #-1]
  4437fc:	ldrb	w12, [x10], #1
  443800:	cmp	w11, #0x2e
  443804:	cset	w11, eq  // eq = none
  443808:	cinc	x9, x9, ne  // ne = any
  44380c:	orr	w8, w8, w11
  443810:	strb	w12, [x9]
  443814:	cbnz	w12, 4437f8 <argp_parse@@Base+0x914c>
  443818:	tbz	w8, #0, 443880 <argp_parse@@Base+0x91d4>
  44381c:	add	x1, sp, #0xb0
  443820:	mov	x0, x19
  443824:	bl	446f94 <argp_parse@@Base+0xc8e8>
  443828:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44382c:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443830:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443834:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443838:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44383c:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443840:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443844:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443848:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44384c:	add	x18, x18, #0xac
  443850:	add	x17, x17, #0x546
  443854:	add	x16, x16, #0x391
  443858:	add	x15, x15, #0x320
  44385c:	sub	x30, x29, #0x30
  443860:	add	x7, x7, #0x52c
  443864:	add	x6, x6, #0x4d0
  443868:	mov	w5, #0x38                  	// #56
  44386c:	mov	w4, #0x1                   	// #1
  443870:	add	x3, x3, #0x474
  443874:	add	x2, x2, #0x402
  443878:	add	x1, x1, #0x198
  44387c:	cbnz	x0, 4425fc <argp_parse@@Base+0x7f50>
  443880:	ldrb	w8, [x19, #217]
  443884:	cbz	w8, 4438a4 <argp_parse@@Base+0x91f8>
  443888:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44388c:	mov	w2, #0x5                   	// #5
  443890:	mov	x0, xzr
  443894:	add	x1, x1, #0x7ee
  443898:	bl	4048b0 <dcgettext@plt>
  44389c:	add	x1, sp, #0xb0
  4438a0:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4438a4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438a8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438ac:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438b0:	adrp	x6, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438b4:	adrp	x7, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438b8:	adrp	x15, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438bc:	adrp	x16, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438c0:	adrp	x17, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438c4:	adrp	x18, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4438c8:	mov	w14, #0x3f                  	// #63
  4438cc:	add	x1, x1, #0x198
  4438d0:	add	x2, x2, #0x402
  4438d4:	add	x3, x3, #0x474
  4438d8:	mov	w4, #0x1                   	// #1
  4438dc:	mov	w5, #0x38                  	// #56
  4438e0:	add	x6, x6, #0x4d0
  4438e4:	add	x7, x7, #0x52c
  4438e8:	sub	x30, x29, #0x30
  4438ec:	add	x15, x15, #0x320
  4438f0:	add	x16, x16, #0x391
  4438f4:	add	x17, x17, #0x546
  4438f8:	add	x18, x18, #0xac
  4438fc:	cmp	w14, #0x1
  443900:	b.ge	442614 <argp_parse@@Base+0x7f68>  // b.tcont
  443904:	b	4424a4 <argp_parse@@Base+0x7df8>
  443908:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44390c:	add	x0, x0, #0x970
  443910:	b	4425fc <argp_parse@@Base+0x7f50>
  443914:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443918:	add	x0, x0, #0x980
  44391c:	b	4425fc <argp_parse@@Base+0x7f50>
  443920:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443924:	add	x0, x0, #0x990
  443928:	b	4425fc <argp_parse@@Base+0x7f50>
  44392c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443930:	add	x0, x0, #0x9a0
  443934:	b	4425fc <argp_parse@@Base+0x7f50>
  443938:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44393c:	add	x0, x0, #0x9b0
  443940:	b	4425fc <argp_parse@@Base+0x7f50>
  443944:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443948:	add	x0, x0, #0x9c0
  44394c:	b	4425fc <argp_parse@@Base+0x7f50>
  443950:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443954:	add	x0, x0, #0x9d0
  443958:	b	4425fc <argp_parse@@Base+0x7f50>
  44395c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443960:	add	x0, x0, #0x9e0
  443964:	b	4425fc <argp_parse@@Base+0x7f50>
  443968:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44396c:	add	x0, x0, #0x9f0
  443970:	b	4425fc <argp_parse@@Base+0x7f50>
  443974:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443978:	add	x0, x0, #0xa00
  44397c:	b	4425fc <argp_parse@@Base+0x7f50>
  443980:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443984:	add	x0, x0, #0xa10
  443988:	b	4425fc <argp_parse@@Base+0x7f50>
  44398c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443990:	add	x0, x0, #0xa20
  443994:	b	4425fc <argp_parse@@Base+0x7f50>
  443998:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44399c:	add	x0, x0, #0xa30
  4439a0:	b	4425fc <argp_parse@@Base+0x7f50>
  4439a4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439a8:	add	x0, x0, #0xa40
  4439ac:	b	4425fc <argp_parse@@Base+0x7f50>
  4439b0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439b4:	add	x0, x0, #0xa50
  4439b8:	b	4425fc <argp_parse@@Base+0x7f50>
  4439bc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439c0:	add	x0, x0, #0xa60
  4439c4:	b	4425fc <argp_parse@@Base+0x7f50>
  4439c8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439cc:	add	x0, x0, #0xa70
  4439d0:	b	4425fc <argp_parse@@Base+0x7f50>
  4439d4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439d8:	add	x0, x0, #0xa80
  4439dc:	b	4425fc <argp_parse@@Base+0x7f50>
  4439e0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439e4:	add	x0, x0, #0xa90
  4439e8:	b	4425fc <argp_parse@@Base+0x7f50>
  4439ec:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439f0:	add	x0, x0, #0xaa0
  4439f4:	b	4425fc <argp_parse@@Base+0x7f50>
  4439f8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4439fc:	add	x0, x0, #0xab0
  443a00:	b	4425fc <argp_parse@@Base+0x7f50>
  443a04:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443a08:	add	x0, x0, #0xac0
  443a0c:	b	4425fc <argp_parse@@Base+0x7f50>
  443a10:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  443a14:	add	x0, x0, #0xad0
  443a18:	b	4425fc <argp_parse@@Base+0x7f50>
  443a1c:	mov	w21, wzr
  443a20:	b	443a38 <argp_parse@@Base+0x938c>
  443a24:	mov	w21, #0x2                   	// #2
  443a28:	b	443a38 <argp_parse@@Base+0x938c>
  443a2c:	add	w8, w8, w9
  443a30:	str	w8, [x19, #24]
  443a34:	mov	w21, #0x1                   	// #1
  443a38:	mov	w0, w21
  443a3c:	add	sp, sp, #0x580
  443a40:	ldp	x20, x19, [sp, #80]
  443a44:	ldp	x22, x21, [sp, #64]
  443a48:	ldp	x24, x23, [sp, #48]
  443a4c:	ldp	x26, x25, [sp, #32]
  443a50:	ldp	x28, x27, [sp, #16]
  443a54:	ldp	x29, x30, [sp], #96
  443a58:	ret
  443a5c:	sub	sp, sp, #0xc0
  443a60:	stp	x29, x30, [sp, #112]
  443a64:	stp	x26, x25, [sp, #128]
  443a68:	stp	x24, x23, [sp, #144]
  443a6c:	stp	x22, x21, [sp, #160]
  443a70:	stp	x20, x19, [sp, #176]
  443a74:	ldrb	w8, [x1, #217]
  443a78:	add	x29, sp, #0x70
  443a7c:	cbnz	w8, 443a9c <argp_parse@@Base+0x93f0>
  443a80:	ldp	x20, x19, [sp, #176]
  443a84:	ldp	x22, x21, [sp, #160]
  443a88:	ldp	x24, x23, [sp, #144]
  443a8c:	ldp	x26, x25, [sp, #128]
  443a90:	ldp	x29, x30, [sp, #112]
  443a94:	add	sp, sp, #0xc0
  443a98:	ret
  443a9c:	mov	x19, x1
  443aa0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443aa4:	mov	x20, x0
  443aa8:	add	x1, x1, #0x6fc
  443aac:	mov	w2, #0x5                   	// #5
  443ab0:	mov	x0, xzr
  443ab4:	bl	4048b0 <dcgettext@plt>
  443ab8:	mov	x1, x20
  443abc:	bl	4444a4 <argp_parse@@Base+0x9df8>
  443ac0:	ldr	x8, [x19, #168]
  443ac4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  443ac8:	cbz	x8, 443afc <argp_parse@@Base+0x9450>
  443acc:	ldrb	w8, [x19, #218]
  443ad0:	cbnz	w8, 443afc <argp_parse@@Base+0x9450>
  443ad4:	ldr	x0, [x22, #88]
  443ad8:	ldr	x3, [x19, #40]
  443adc:	ldp	x4, x5, [x19, #56]
  443ae0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443ae4:	add	x2, x2, #0x70d
  443ae8:	mov	w1, #0x1                   	// #1
  443aec:	mov	w23, #0x1                   	// #1
  443af0:	bl	404600 <__fprintf_chk@plt>
  443af4:	strb	w23, [x19, #218]
  443af8:	b	443b00 <argp_parse@@Base+0x9454>
  443afc:	mov	w23, wzr
  443b00:	ldrb	w8, [x19, #216]
  443b04:	ldrb	w9, [x19, #223]
  443b08:	cmp	w8, w9
  443b0c:	b.eq	443b58 <argp_parse@@Base+0x94ac>  // b.none
  443b10:	cbz	w23, 443b20 <argp_parse@@Base+0x9474>
  443b14:	ldr	x1, [x22, #88]
  443b18:	mov	w0, #0x20                  	// #32
  443b1c:	bl	404080 <fputc@plt>
  443b20:	ldr	x20, [x22, #88]
  443b24:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443b28:	add	x1, x1, #0x727
  443b2c:	mov	w2, #0x5                   	// #5
  443b30:	mov	x0, xzr
  443b34:	bl	4048b0 <dcgettext@plt>
  443b38:	ldr	x3, [x19, #40]
  443b3c:	mov	x2, x0
  443b40:	mov	w1, #0x1                   	// #1
  443b44:	mov	x0, x20
  443b48:	mov	w23, #0x1                   	// #1
  443b4c:	bl	404600 <__fprintf_chk@plt>
  443b50:	ldrb	w8, [x19, #216]
  443b54:	strb	w8, [x19, #223]
  443b58:	ldr	x8, [x19, #200]
  443b5c:	cbz	x8, 443bd4 <argp_parse@@Base+0x9528>
  443b60:	ldrb	w8, [x19, #221]
  443b64:	cbnz	w8, 443bd4 <argp_parse@@Base+0x9528>
  443b68:	ldp	x4, x5, [x19, #80]
  443b6c:	ldr	x0, [x22, #88]
  443b70:	ldr	x3, [x19, #72]
  443b74:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443b78:	eor	w8, w23, #0x1
  443b7c:	add	x9, x9, #0x733
  443b80:	add	x2, x9, x8
  443b84:	mov	w1, #0x1                   	// #1
  443b88:	bl	404600 <__fprintf_chk@plt>
  443b8c:	ldr	x3, [x19, #96]
  443b90:	cbz	x3, 443ba8 <argp_parse@@Base+0x94fc>
  443b94:	ldr	x0, [x22, #88]
  443b98:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443b9c:	add	x2, x2, #0x746
  443ba0:	mov	w1, #0x1                   	// #1
  443ba4:	bl	404600 <__fprintf_chk@plt>
  443ba8:	ldr	w8, [x19, #28]
  443bac:	cmp	w8, #0x1
  443bb0:	b.ne	443bcc <argp_parse@@Base+0x9520>  // b.any
  443bb4:	ldr	x3, [x22, #88]
  443bb8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443bbc:	add	x0, x0, #0x170
  443bc0:	mov	w1, #0x2                   	// #2
  443bc4:	mov	w2, #0x1                   	// #1
  443bc8:	bl	404790 <fwrite@plt>
  443bcc:	mov	w23, #0x1                   	// #1
  443bd0:	strb	w23, [x19, #221]
  443bd4:	ldr	x8, [x19, #176]
  443bd8:	cbz	x8, 443c40 <argp_parse@@Base+0x9594>
  443bdc:	ldrb	w8, [x19, #219]
  443be0:	cbnz	w8, 443c40 <argp_parse@@Base+0x9594>
  443be4:	cbz	w23, 443bf4 <argp_parse@@Base+0x9548>
  443be8:	ldr	x1, [x22, #88]
  443bec:	mov	w0, #0x20                  	// #32
  443bf0:	bl	404080 <fputc@plt>
  443bf4:	ldr	x20, [x22, #88]
  443bf8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443bfc:	add	x1, x1, #0x74c
  443c00:	mov	w2, #0x5                   	// #5
  443c04:	mov	x0, xzr
  443c08:	bl	4048b0 <dcgettext@plt>
  443c0c:	mov	x21, x0
  443c10:	add	x1, sp, #0xc
  443c14:	mov	x0, x19
  443c18:	bl	446eac <argp_parse@@Base+0xc800>
  443c1c:	ldr	x4, [x19, #8]
  443c20:	ldr	w5, [x19, #16]
  443c24:	mov	x3, x0
  443c28:	mov	w1, #0x1                   	// #1
  443c2c:	mov	x0, x20
  443c30:	mov	x2, x21
  443c34:	mov	w23, #0x1                   	// #1
  443c38:	bl	404600 <__fprintf_chk@plt>
  443c3c:	strb	w23, [x19, #219]
  443c40:	ldr	x8, [x19, #184]
  443c44:	cbz	x8, 443c94 <argp_parse@@Base+0x95e8>
  443c48:	ldrb	w8, [x19, #220]
  443c4c:	cbnz	w8, 443c94 <argp_parse@@Base+0x95e8>
  443c50:	ldr	x10, [x19, #192]
  443c54:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443c58:	ldr	x0, [x22, #88]
  443c5c:	eor	w8, w23, #0x1
  443c60:	add	x9, x9, #0x76b
  443c64:	ldr	w3, [x19, #20]
  443c68:	add	x2, x9, x8
  443c6c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443c70:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  443c74:	add	x8, x8, #0x777
  443c78:	add	x9, x9, #0xb36
  443c7c:	cmp	x10, #0x0
  443c80:	csel	x4, x9, x8, eq  // eq = none
  443c84:	mov	w1, #0x1                   	// #1
  443c88:	mov	w23, #0x1                   	// #1
  443c8c:	bl	404600 <__fprintf_chk@plt>
  443c90:	strb	w23, [x19, #220]
  443c94:	ldr	x8, [x19, #208]
  443c98:	cbz	x8, 443ddc <argp_parse@@Base+0x9730>
  443c9c:	ldrb	w8, [x19, #222]
  443ca0:	cbnz	w8, 443ddc <argp_parse@@Base+0x9730>
  443ca4:	ldrsw	x25, [x19, #24]
  443ca8:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443cac:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  443cb0:	eor	w8, w23, #0x1
  443cb4:	add	x9, x9, #0x77c
  443cb8:	movk	x10, #0x91a2, lsl #16
  443cbc:	add	x21, x9, x8
  443cc0:	mul	x8, x25, x10
  443cc4:	lsr	x8, x8, #32
  443cc8:	add	w8, w8, w25
  443ccc:	asr	w9, w8, #11
  443cd0:	add	w26, w9, w8, lsr #31
  443cd4:	ldr	x20, [x22, #88]
  443cd8:	cmp	w26, #0x0
  443cdc:	mov	w11, #0x2b                  	// #43
  443ce0:	cneg	w5, w26, mi  // mi = first
  443ce4:	cmp	w25, #0x0
  443ce8:	mov	w8, #0x2d                  	// #45
  443cec:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443cf0:	csel	w4, w8, w11, lt  // lt = tstop
  443cf4:	add	x3, x3, #0xa3e
  443cf8:	add	x0, sp, #0xc
  443cfc:	mov	w1, #0x1                   	// #1
  443d00:	mov	w2, #0x1b                  	// #27
  443d04:	add	x24, sp, #0xc
  443d08:	mov	w23, #0x1                   	// #1
  443d0c:	bl	403f20 <__sprintf_chk@plt>
  443d10:	mov	w8, #0xe10                 	// #3600
  443d14:	msub	w9, w26, w8, w25
  443d18:	cbz	w9, 443dc4 <argp_parse@@Base+0x9718>
  443d1c:	cmp	w9, #0x0
  443d20:	mov	w11, #0x8889                	// #34953
  443d24:	cneg	w9, w9, mi  // mi = first
  443d28:	movk	w11, #0x8888, lsl #16
  443d2c:	mov	w13, #0x81b5                	// #33205
  443d30:	and	w14, w9, #0xffff
  443d34:	movk	w13, #0x1b4e, lsl #16
  443d38:	umull	x11, w14, w11
  443d3c:	mov	w12, #0x3c                  	// #60
  443d40:	umull	x13, w14, w13
  443d44:	lsr	x14, x11, #37
  443d48:	msub	w9, w14, w12, w9
  443d4c:	mov	w12, #0xcccd                	// #52429
  443d50:	movk	w12, #0xcccc, lsl #16
  443d54:	lsr	x13, x13, #38
  443d58:	ubfx	x11, x11, #37, #8
  443d5c:	add	x8, x24, w0, sxtw
  443d60:	add	w13, w13, #0x30
  443d64:	umull	x11, w11, w12
  443d68:	strb	w13, [x8, #1]
  443d6c:	lsr	x13, x11, #35
  443d70:	mov	w11, #0xa                   	// #10
  443d74:	msub	w13, w13, w11, w14
  443d78:	mov	w10, #0x3a                  	// #58
  443d7c:	tst	w9, #0xffff
  443d80:	orr	w13, w13, #0x30
  443d84:	strb	w10, [x8]
  443d88:	strb	w13, [x8, #2]
  443d8c:	b.ne	443d98 <argp_parse@@Base+0x96ec>  // b.any
  443d90:	add	x9, x8, #0x3
  443d94:	b	443dc0 <argp_parse@@Base+0x9714>
  443d98:	strb	w10, [x8, #3]
  443d9c:	and	w10, w9, #0xff
  443da0:	umull	x10, w10, w12
  443da4:	lsr	x10, x10, #35
  443da8:	msub	w9, w10, w11, w9
  443dac:	orr	w12, w10, #0x30
  443db0:	orr	w10, w9, #0x30
  443db4:	add	x9, x8, #0x6
  443db8:	strb	w12, [x8, #4]
  443dbc:	strb	w10, [x8, #5]
  443dc0:	strb	wzr, [x9]
  443dc4:	add	x3, sp, #0xc
  443dc8:	mov	w1, #0x1                   	// #1
  443dcc:	mov	x0, x20
  443dd0:	mov	x2, x21
  443dd4:	bl	404600 <__fprintf_chk@plt>
  443dd8:	strb	w23, [x19, #222]
  443ddc:	ldrb	w8, [x19, #160]
  443de0:	cbz	w8, 443e24 <argp_parse@@Base+0x9778>
  443de4:	ldr	x19, [x19, #88]
  443de8:	cbz	w23, 443df8 <argp_parse@@Base+0x974c>
  443dec:	ldr	x1, [x22, #88]
  443df0:	mov	w0, #0x20                  	// #32
  443df4:	bl	404080 <fputc@plt>
  443df8:	ldr	x20, [x22, #88]
  443dfc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443e00:	add	x1, x1, #0x783
  443e04:	mov	w2, #0x5                   	// #5
  443e08:	mov	x0, xzr
  443e0c:	bl	4048b0 <dcgettext@plt>
  443e10:	mov	x2, x0
  443e14:	mov	w1, #0x1                   	// #1
  443e18:	mov	x0, x20
  443e1c:	mov	x3, x19
  443e20:	bl	404600 <__fprintf_chk@plt>
  443e24:	ldr	x1, [x22, #88]
  443e28:	mov	w0, #0xa                   	// #10
  443e2c:	bl	404080 <fputc@plt>
  443e30:	b	443a80 <argp_parse@@Base+0x93d4>
  443e34:	stp	x29, x30, [sp, #-48]!
  443e38:	stp	x20, x19, [sp, #32]
  443e3c:	ldrb	w8, [x1, #217]
  443e40:	str	x21, [sp, #16]
  443e44:	mov	x29, sp
  443e48:	cbnz	w8, 443e5c <argp_parse@@Base+0x97b0>
  443e4c:	ldp	x20, x19, [sp, #32]
  443e50:	ldr	x21, [sp, #16]
  443e54:	ldp	x29, x30, [sp], #48
  443e58:	ret
  443e5c:	mov	x19, x1
  443e60:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443e64:	mov	x20, x0
  443e68:	add	x1, x1, #0x6fc
  443e6c:	mov	w2, #0x5                   	// #5
  443e70:	mov	x0, xzr
  443e74:	bl	4048b0 <dcgettext@plt>
  443e78:	mov	x1, x20
  443e7c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  443e80:	ldr	x3, [x19, #104]
  443e84:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  443e88:	cbnz	x3, 443ee4 <argp_parse@@Base+0x9838>
  443e8c:	ldr	x3, [x19, #112]
  443e90:	cbnz	x3, 443f70 <argp_parse@@Base+0x98c4>
  443e94:	ldr	x8, [x19, #120]
  443e98:	cbnz	x8, 44406c <argp_parse@@Base+0x99c0>
  443e9c:	ldr	x8, [x19, #128]
  443ea0:	cbnz	x8, 44406c <argp_parse@@Base+0x99c0>
  443ea4:	ldr	x8, [x19, #136]
  443ea8:	cbnz	x8, 44406c <argp_parse@@Base+0x99c0>
  443eac:	ldr	x8, [x19, #144]
  443eb0:	cbnz	x8, 44406c <argp_parse@@Base+0x99c0>
  443eb4:	ldr	w8, [x19, #152]
  443eb8:	cbnz	w8, 44406c <argp_parse@@Base+0x99c0>
  443ebc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443ec0:	add	x1, x1, #0x79a
  443ec4:	mov	w2, #0x5                   	// #5
  443ec8:	mov	x0, xzr
  443ecc:	bl	4048b0 <dcgettext@plt>
  443ed0:	ldr	x1, [x20, #88]
  443ed4:	ldp	x20, x19, [sp, #32]
  443ed8:	ldr	x21, [sp, #16]
  443edc:	ldp	x29, x30, [sp], #48
  443ee0:	b	403f10 <fputs@plt>
  443ee4:	ldr	x0, [x20, #88]
  443ee8:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443eec:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443ef0:	add	x2, x2, #0x7df
  443ef4:	add	x4, x4, #0x7aa
  443ef8:	mov	w1, #0x1                   	// #1
  443efc:	mov	w21, #0x1                   	// #1
  443f00:	bl	404600 <__fprintf_chk@plt>
  443f04:	ldr	x3, [x19, #112]
  443f08:	cbnz	x3, 443f78 <argp_parse@@Base+0x98cc>
  443f0c:	ldr	x3, [x19, #120]
  443f10:	cbnz	x3, 443fa8 <argp_parse@@Base+0x98fc>
  443f14:	ldr	x3, [x19, #128]
  443f18:	cbnz	x3, 443fd8 <argp_parse@@Base+0x992c>
  443f1c:	ldr	x3, [x19, #136]
  443f20:	cbnz	x3, 444008 <argp_parse@@Base+0x995c>
  443f24:	ldr	x3, [x19, #144]
  443f28:	cbnz	x3, 444038 <argp_parse@@Base+0x998c>
  443f2c:	ldrsw	x3, [x19, #152]
  443f30:	cbz	w3, 443f58 <argp_parse@@Base+0x98ac>
  443f34:	ldr	x0, [x20, #88]
  443f38:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443f3c:	eor	w8, w21, #0x1
  443f40:	add	x9, x9, #0x7de
  443f44:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443f48:	add	x2, x9, x8
  443f4c:	add	x4, x4, #0x7d2
  443f50:	mov	w1, #0x1                   	// #1
  443f54:	bl	404600 <__fprintf_chk@plt>
  443f58:	ldr	x1, [x20, #88]
  443f5c:	ldp	x20, x19, [sp, #32]
  443f60:	ldr	x21, [sp, #16]
  443f64:	mov	w0, #0xa                   	// #10
  443f68:	ldp	x29, x30, [sp], #48
  443f6c:	b	404080 <fputc@plt>
  443f70:	mov	w8, #0x1                   	// #1
  443f74:	b	443f7c <argp_parse@@Base+0x98d0>
  443f78:	mov	x8, xzr
  443f7c:	ldr	x0, [x20, #88]
  443f80:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443f84:	add	x9, x9, #0x7de
  443f88:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443f8c:	add	x2, x9, x8
  443f90:	add	x4, x4, #0x7b2
  443f94:	mov	w1, #0x1                   	// #1
  443f98:	mov	w21, #0x1                   	// #1
  443f9c:	bl	404600 <__fprintf_chk@plt>
  443fa0:	ldr	x3, [x19, #120]
  443fa4:	cbz	x3, 443f14 <argp_parse@@Base+0x9868>
  443fa8:	ldr	x0, [x20, #88]
  443fac:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443fb0:	eor	w8, w21, #0x1
  443fb4:	add	x9, x9, #0x7de
  443fb8:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443fbc:	add	x2, x9, x8
  443fc0:	add	x4, x4, #0x7bb
  443fc4:	mov	w1, #0x1                   	// #1
  443fc8:	mov	w21, #0x1                   	// #1
  443fcc:	bl	404600 <__fprintf_chk@plt>
  443fd0:	ldr	x3, [x19, #128]
  443fd4:	cbz	x3, 443f1c <argp_parse@@Base+0x9870>
  443fd8:	ldr	x0, [x20, #88]
  443fdc:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443fe0:	eor	w8, w21, #0x1
  443fe4:	add	x9, x9, #0x7de
  443fe8:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  443fec:	add	x2, x9, x8
  443ff0:	add	x4, x4, #0x7c2
  443ff4:	mov	w1, #0x1                   	// #1
  443ff8:	mov	w21, #0x1                   	// #1
  443ffc:	bl	404600 <__fprintf_chk@plt>
  444000:	ldr	x3, [x19, #136]
  444004:	cbz	x3, 443f24 <argp_parse@@Base+0x9878>
  444008:	ldr	x0, [x20, #88]
  44400c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444010:	eor	w8, w21, #0x1
  444014:	add	x9, x9, #0x7de
  444018:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44401c:	add	x2, x9, x8
  444020:	add	x4, x4, #0x7ca
  444024:	mov	w1, #0x1                   	// #1
  444028:	mov	w21, #0x1                   	// #1
  44402c:	bl	404600 <__fprintf_chk@plt>
  444030:	ldr	x3, [x19, #144]
  444034:	cbz	x3, 443f2c <argp_parse@@Base+0x9880>
  444038:	ldr	x0, [x20, #88]
  44403c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444040:	eor	w8, w21, #0x1
  444044:	add	x9, x9, #0x7de
  444048:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44404c:	add	x2, x9, x8
  444050:	add	x4, x4, #0xef0
  444054:	mov	w1, #0x1                   	// #1
  444058:	mov	w21, #0x1                   	// #1
  44405c:	bl	404600 <__fprintf_chk@plt>
  444060:	ldrsw	x3, [x19, #152]
  444064:	cbnz	w3, 443f34 <argp_parse@@Base+0x9888>
  444068:	b	443f58 <argp_parse@@Base+0x98ac>
  44406c:	mov	w21, wzr
  444070:	ldr	x3, [x19, #120]
  444074:	cbz	x3, 443f14 <argp_parse@@Base+0x9868>
  444078:	b	443fa8 <argp_parse@@Base+0x98fc>
  44407c:	ldr	w8, [x1, #48]
  444080:	tbnz	w2, #31, 4440cc <argp_parse@@Base+0x9a20>
  444084:	tbnz	w8, #31, 44410c <argp_parse@@Base+0x9a60>
  444088:	ldr	w10, [x0, #152]
  44408c:	mov	w9, #0x7fffffff            	// #2147483647
  444090:	sub	w9, w9, w8
  444094:	cmp	w9, w10
  444098:	b.ge	444120 <argp_parse@@Base+0x9a74>  // b.tcont
  44409c:	mov	w9, #0x1                   	// #1
  4440a0:	add	w8, w10, w8
  4440a4:	str	w8, [x0, #152]
  4440a8:	ldr	x8, [x1, #40]
  4440ac:	tbz	x8, #63, 444134 <argp_parse@@Base+0x9a88>
  4440b0:	ldr	x10, [x0, #144]
  4440b4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4440b8:	sub	x11, x11, x8
  4440bc:	cmp	x10, x11
  4440c0:	b.lt	444148 <argp_parse@@Base+0x9a9c>  // b.tstop
  4440c4:	mov	w11, wzr
  4440c8:	b	44414c <argp_parse@@Base+0x9aa0>
  4440cc:	tbnz	w8, #31, 4442dc <argp_parse@@Base+0x9c30>
  4440d0:	ldr	w10, [x0, #152]
  4440d4:	orr	w9, w8, #0x80000000
  4440d8:	cmp	w10, w9
  4440dc:	b.ge	4442f0 <argp_parse@@Base+0x9c44>  // b.tcont
  4440e0:	mov	w9, #0x1                   	// #1
  4440e4:	sub	w8, w10, w8
  4440e8:	str	w8, [x0, #152]
  4440ec:	ldr	x8, [x1, #40]
  4440f0:	tbnz	x8, #63, 444304 <argp_parse@@Base+0x9c58>
  4440f4:	ldr	x10, [x0, #144]
  4440f8:	orr	x11, x8, #0x8000000000000000
  4440fc:	cmp	x10, x11
  444100:	b.ge	444318 <argp_parse@@Base+0x9c6c>  // b.tcont
  444104:	mov	w11, #0x1                   	// #1
  444108:	b	44431c <argp_parse@@Base+0x9c70>
  44410c:	ldr	w10, [x0, #152]
  444110:	mov	w9, #0x80000000            	// #-2147483648
  444114:	sub	w9, w9, w8
  444118:	cmp	w10, w9
  44411c:	b.lt	44409c <argp_parse@@Base+0x99f0>  // b.tstop
  444120:	mov	w9, wzr
  444124:	add	w8, w10, w8
  444128:	str	w8, [x0, #152]
  44412c:	ldr	x8, [x1, #40]
  444130:	tbnz	x8, #63, 4440b0 <argp_parse@@Base+0x9a04>
  444134:	ldr	x10, [x0, #144]
  444138:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  44413c:	sub	x11, x11, x8
  444140:	cmp	x11, x10
  444144:	b.ge	4440c4 <argp_parse@@Base+0x9a18>  // b.tcont
  444148:	mov	w11, #0x1                   	// #1
  44414c:	add	x8, x10, x8
  444150:	str	x8, [x0, #144]
  444154:	ldr	x10, [x1, #32]
  444158:	orr	w8, w11, w9
  44415c:	tbnz	x10, #63, 44417c <argp_parse@@Base+0x9ad0>
  444160:	ldr	x9, [x0, #136]
  444164:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  444168:	sub	x11, x11, x10
  44416c:	cmp	x11, x9
  444170:	b.ge	444190 <argp_parse@@Base+0x9ae4>  // b.tcont
  444174:	mov	w11, #0x1                   	// #1
  444178:	b	444194 <argp_parse@@Base+0x9ae8>
  44417c:	ldr	x9, [x0, #136]
  444180:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  444184:	sub	x11, x11, x10
  444188:	cmp	x9, x11
  44418c:	b.lt	444174 <argp_parse@@Base+0x9ac8>  // b.tstop
  444190:	mov	w11, wzr
  444194:	add	x9, x9, x10
  444198:	str	x9, [x0, #136]
  44419c:	ldr	x9, [x1, #24]
  4441a0:	orr	w8, w8, w11
  4441a4:	tbnz	x9, #63, 4441c4 <argp_parse@@Base+0x9b18>
  4441a8:	ldr	x10, [x0, #128]
  4441ac:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4441b0:	sub	x11, x11, x9
  4441b4:	cmp	x11, x10
  4441b8:	b.ge	4441d8 <argp_parse@@Base+0x9b2c>  // b.tcont
  4441bc:	mov	w11, #0x1                   	// #1
  4441c0:	b	4441dc <argp_parse@@Base+0x9b30>
  4441c4:	ldr	x10, [x0, #128]
  4441c8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4441cc:	sub	x11, x11, x9
  4441d0:	cmp	x10, x11
  4441d4:	b.lt	4441bc <argp_parse@@Base+0x9b10>  // b.tstop
  4441d8:	mov	w11, wzr
  4441dc:	add	x9, x10, x9
  4441e0:	str	x9, [x0, #128]
  4441e4:	ldr	x9, [x1, #16]
  4441e8:	orr	w8, w8, w11
  4441ec:	tbnz	x9, #63, 44420c <argp_parse@@Base+0x9b60>
  4441f0:	ldr	x10, [x0, #120]
  4441f4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4441f8:	sub	x11, x11, x9
  4441fc:	cmp	x11, x10
  444200:	b.ge	444220 <argp_parse@@Base+0x9b74>  // b.tcont
  444204:	mov	w11, #0x1                   	// #1
  444208:	b	444224 <argp_parse@@Base+0x9b78>
  44420c:	ldr	x10, [x0, #120]
  444210:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  444214:	sub	x11, x11, x9
  444218:	cmp	x10, x11
  44421c:	b.lt	444204 <argp_parse@@Base+0x9b58>  // b.tstop
  444220:	mov	w11, wzr
  444224:	add	x9, x10, x9
  444228:	str	x9, [x0, #120]
  44422c:	ldr	x9, [x1, #8]
  444230:	orr	w8, w8, w11
  444234:	tbnz	x9, #63, 444254 <argp_parse@@Base+0x9ba8>
  444238:	ldr	x10, [x0, #112]
  44423c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  444240:	sub	x11, x11, x9
  444244:	cmp	x11, x10
  444248:	b.ge	444268 <argp_parse@@Base+0x9bbc>  // b.tcont
  44424c:	mov	w11, #0x1                   	// #1
  444250:	b	44426c <argp_parse@@Base+0x9bc0>
  444254:	ldr	x10, [x0, #112]
  444258:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  44425c:	sub	x11, x11, x9
  444260:	cmp	x10, x11
  444264:	b.lt	44424c <argp_parse@@Base+0x9ba0>  // b.tstop
  444268:	mov	w11, wzr
  44426c:	add	x9, x10, x9
  444270:	str	x9, [x0, #112]
  444274:	ldr	x9, [x1]
  444278:	orr	w8, w8, w11
  44427c:	tbnz	x9, #63, 4442ac <argp_parse@@Base+0x9c00>
  444280:	ldr	x10, [x0, #104]
  444284:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  444288:	sub	x11, x11, x9
  44428c:	cmp	x11, x10
  444290:	b.ge	4442c0 <argp_parse@@Base+0x9c14>  // b.tcont
  444294:	mov	w11, #0x1                   	// #1
  444298:	add	x9, x10, x9
  44429c:	orr	w8, w8, w11
  4442a0:	str	x9, [x0, #104]
  4442a4:	cbnz	w8, 4442d4 <argp_parse@@Base+0x9c28>
  4442a8:	b	444494 <argp_parse@@Base+0x9de8>
  4442ac:	ldr	x10, [x0, #104]
  4442b0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4442b4:	sub	x11, x11, x9
  4442b8:	cmp	x10, x11
  4442bc:	b.lt	444294 <argp_parse@@Base+0x9be8>  // b.tstop
  4442c0:	mov	w11, wzr
  4442c4:	add	x9, x10, x9
  4442c8:	orr	w8, w8, w11
  4442cc:	str	x9, [x0, #104]
  4442d0:	cbz	w8, 444494 <argp_parse@@Base+0x9de8>
  4442d4:	mov	w0, wzr
  4442d8:	ret
  4442dc:	ldr	w10, [x0, #152]
  4442e0:	mov	w9, #0x7fffffff            	// #2147483647
  4442e4:	add	w9, w8, w9
  4442e8:	cmp	w9, w10
  4442ec:	b.lt	4440e0 <argp_parse@@Base+0x9a34>  // b.tstop
  4442f0:	mov	w9, wzr
  4442f4:	sub	w8, w10, w8
  4442f8:	str	w8, [x0, #152]
  4442fc:	ldr	x8, [x1, #40]
  444300:	tbz	x8, #63, 4440f4 <argp_parse@@Base+0x9a48>
  444304:	ldr	x10, [x0, #144]
  444308:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  44430c:	add	x11, x8, x11
  444310:	cmp	x11, x10
  444314:	b.lt	444104 <argp_parse@@Base+0x9a58>  // b.tstop
  444318:	mov	w11, wzr
  44431c:	sub	x8, x10, x8
  444320:	str	x8, [x0, #144]
  444324:	ldr	x10, [x1, #32]
  444328:	orr	w8, w11, w9
  44432c:	tbnz	x10, #63, 444348 <argp_parse@@Base+0x9c9c>
  444330:	ldr	x9, [x0, #136]
  444334:	orr	x11, x10, #0x8000000000000000
  444338:	cmp	x9, x11
  44433c:	b.ge	44435c <argp_parse@@Base+0x9cb0>  // b.tcont
  444340:	mov	w11, #0x1                   	// #1
  444344:	b	444360 <argp_parse@@Base+0x9cb4>
  444348:	ldr	x9, [x0, #136]
  44434c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  444350:	add	x11, x10, x11
  444354:	cmp	x11, x9
  444358:	b.lt	444340 <argp_parse@@Base+0x9c94>  // b.tstop
  44435c:	mov	w11, wzr
  444360:	sub	x9, x9, x10
  444364:	str	x9, [x0, #136]
  444368:	ldr	x9, [x1, #24]
  44436c:	orr	w8, w8, w11
  444370:	tbnz	x9, #63, 44438c <argp_parse@@Base+0x9ce0>
  444374:	ldr	x10, [x0, #128]
  444378:	orr	x11, x9, #0x8000000000000000
  44437c:	cmp	x10, x11
  444380:	b.ge	4443a0 <argp_parse@@Base+0x9cf4>  // b.tcont
  444384:	mov	w11, #0x1                   	// #1
  444388:	b	4443a4 <argp_parse@@Base+0x9cf8>
  44438c:	ldr	x10, [x0, #128]
  444390:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  444394:	add	x11, x9, x11
  444398:	cmp	x11, x10
  44439c:	b.lt	444384 <argp_parse@@Base+0x9cd8>  // b.tstop
  4443a0:	mov	w11, wzr
  4443a4:	sub	x9, x10, x9
  4443a8:	str	x9, [x0, #128]
  4443ac:	ldr	x9, [x1, #16]
  4443b0:	orr	w8, w8, w11
  4443b4:	tbnz	x9, #63, 4443d0 <argp_parse@@Base+0x9d24>
  4443b8:	ldr	x10, [x0, #120]
  4443bc:	orr	x11, x9, #0x8000000000000000
  4443c0:	cmp	x10, x11
  4443c4:	b.ge	4443e4 <argp_parse@@Base+0x9d38>  // b.tcont
  4443c8:	mov	w11, #0x1                   	// #1
  4443cc:	b	4443e8 <argp_parse@@Base+0x9d3c>
  4443d0:	ldr	x10, [x0, #120]
  4443d4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4443d8:	add	x11, x9, x11
  4443dc:	cmp	x11, x10
  4443e0:	b.lt	4443c8 <argp_parse@@Base+0x9d1c>  // b.tstop
  4443e4:	mov	w11, wzr
  4443e8:	sub	x9, x10, x9
  4443ec:	str	x9, [x0, #120]
  4443f0:	ldr	x9, [x1, #8]
  4443f4:	orr	w8, w8, w11
  4443f8:	tbnz	x9, #63, 444414 <argp_parse@@Base+0x9d68>
  4443fc:	ldr	x10, [x0, #112]
  444400:	orr	x11, x9, #0x8000000000000000
  444404:	cmp	x10, x11
  444408:	b.ge	444428 <argp_parse@@Base+0x9d7c>  // b.tcont
  44440c:	mov	w11, #0x1                   	// #1
  444410:	b	44442c <argp_parse@@Base+0x9d80>
  444414:	ldr	x10, [x0, #112]
  444418:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  44441c:	add	x11, x9, x11
  444420:	cmp	x11, x10
  444424:	b.lt	44440c <argp_parse@@Base+0x9d60>  // b.tstop
  444428:	mov	w11, wzr
  44442c:	sub	x9, x10, x9
  444430:	str	x9, [x0, #112]
  444434:	ldr	x9, [x1]
  444438:	orr	w8, w8, w11
  44443c:	tbnz	x9, #63, 44446c <argp_parse@@Base+0x9dc0>
  444440:	ldr	x10, [x0, #104]
  444444:	orr	x11, x9, #0x8000000000000000
  444448:	cmp	x10, x11
  44444c:	b.ge	444480 <argp_parse@@Base+0x9dd4>  // b.tcont
  444450:	mov	w11, #0x1                   	// #1
  444454:	sub	x9, x10, x9
  444458:	orr	w8, w8, w11
  44445c:	str	x9, [x0, #104]
  444460:	cbz	w8, 444494 <argp_parse@@Base+0x9de8>
  444464:	mov	w0, wzr
  444468:	ret
  44446c:	ldr	x10, [x0, #104]
  444470:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  444474:	add	x11, x9, x11
  444478:	cmp	x11, x10
  44447c:	b.lt	444450 <argp_parse@@Base+0x9da4>  // b.tstop
  444480:	mov	w11, wzr
  444484:	sub	x9, x10, x9
  444488:	orr	w8, w8, w11
  44448c:	str	x9, [x0, #104]
  444490:	cbnz	w8, 444464 <argp_parse@@Base+0x9db8>
  444494:	mov	w8, #0x1                   	// #1
  444498:	strb	w8, [x0, #161]
  44449c:	mov	w0, w8
  4444a0:	ret
  4444a4:	sub	sp, sp, #0x130
  4444a8:	stp	x29, x30, [sp, #256]
  4444ac:	stp	x20, x19, [sp, #288]
  4444b0:	add	x29, sp, #0x100
  4444b4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4444b8:	stp	x3, x4, [x29, #-104]
  4444bc:	ldr	x3, [x20, #88]
  4444c0:	mov	x19, x0
  4444c4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4444c8:	stp	x1, x2, [x29, #-120]
  4444cc:	add	x0, x0, #0x7e7
  4444d0:	mov	w1, #0x6                   	// #6
  4444d4:	mov	w2, #0x1                   	// #1
  4444d8:	str	x28, [sp, #272]
  4444dc:	stp	x5, x6, [x29, #-88]
  4444e0:	stur	x7, [x29, #-72]
  4444e4:	stp	q0, q1, [sp]
  4444e8:	stp	q2, q3, [sp, #32]
  4444ec:	stp	q4, q5, [sp, #64]
  4444f0:	stp	q6, q7, [sp, #96]
  4444f4:	bl	404790 <fwrite@plt>
  4444f8:	sub	x9, x29, #0x78
  4444fc:	mov	x10, sp
  444500:	mov	x11, #0xffffffffffffffc8    	// #-56
  444504:	add	x8, x29, #0x30
  444508:	movk	x11, #0xff80, lsl #32
  44450c:	add	x9, x9, #0x38
  444510:	add	x10, x10, #0x80
  444514:	stp	x8, x9, [x29, #-64]
  444518:	stp	x10, x11, [x29, #-48]
  44451c:	ldp	q0, q1, [x29, #-64]
  444520:	ldr	x0, [x20, #88]
  444524:	sub	x3, x29, #0x20
  444528:	mov	w1, #0x1                   	// #1
  44452c:	mov	x2, x19
  444530:	stp	q0, q1, [x29, #-32]
  444534:	bl	4043b0 <__vfprintf_chk@plt>
  444538:	ldp	x20, x19, [sp, #288]
  44453c:	ldr	x28, [sp, #272]
  444540:	ldp	x29, x30, [sp, #256]
  444544:	add	sp, sp, #0x130
  444548:	ret
  44454c:	stp	x29, x30, [sp, #-64]!
  444550:	stp	x22, x21, [sp, #32]
  444554:	mov	x21, x0
  444558:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44455c:	add	x0, x0, #0xf9a
  444560:	str	x23, [sp, #16]
  444564:	stp	x20, x19, [sp, #48]
  444568:	mov	x29, sp
  44456c:	mov	x19, x2
  444570:	mov	x20, x1
  444574:	bl	4049e0 <getenv@plt>
  444578:	mov	x22, x0
  44457c:	bl	45bb4c <_obstack_memory_used@@Base+0x10988>
  444580:	cbz	x0, 4445b4 <argp_parse@@Base+0x9f08>
  444584:	mov	x23, x0
  444588:	mov	x0, x21
  44458c:	mov	x1, x20
  444590:	mov	x2, x19
  444594:	mov	w3, wzr
  444598:	mov	x4, x23
  44459c:	mov	x5, x22
  4445a0:	bl	4445c8 <argp_parse@@Base+0x9f1c>
  4445a4:	mov	w19, w0
  4445a8:	mov	x0, x23
  4445ac:	bl	45bbe8 <_obstack_memory_used@@Base+0x10a24>
  4445b0:	and	w0, w19, #0x1
  4445b4:	ldp	x20, x19, [sp, #48]
  4445b8:	ldp	x22, x21, [sp, #32]
  4445bc:	ldr	x23, [sp, #16]
  4445c0:	ldp	x29, x30, [sp], #64
  4445c4:	ret
  4445c8:	stp	x29, x30, [sp, #-96]!
  4445cc:	stp	x28, x27, [sp, #16]
  4445d0:	stp	x26, x25, [sp, #32]
  4445d4:	stp	x24, x23, [sp, #48]
  4445d8:	stp	x22, x21, [sp, #64]
  4445dc:	stp	x20, x19, [sp, #80]
  4445e0:	mov	x29, sp
  4445e4:	sub	sp, sp, #0x420
  4445e8:	stp	x0, x5, [sp, #96]
  4445ec:	mov	x0, x1
  4445f0:	mov	x19, x4
  4445f4:	mov	w24, w3
  4445f8:	mov	x25, x2
  4445fc:	mov	x20, x1
  444600:	bl	403f00 <strlen@plt>
  444604:	mov	x21, x0
  444608:	cbnz	x25, 444618 <argp_parse@@Base+0x9f6c>
  44460c:	add	x0, sp, #0x238
  444610:	add	x25, sp, #0x238
  444614:	bl	43e664 <argp_parse@@Base+0x3fb8>
  444618:	ldp	x22, x23, [x25]
  44461c:	add	x27, sp, #0xb0
  444620:	add	x28, x20, x21
  444624:	add	x20, x20, #0x4
  444628:	b	444630 <argp_parse@@Base+0x9f84>
  44462c:	add	x20, x20, #0x1
  444630:	ldurb	w8, [x20, #-4]
  444634:	sub	w9, w8, #0x9
  444638:	cmp	w9, #0x5
  44463c:	b.cc	44462c <argp_parse@@Base+0x9f80>  // b.lo, b.ul, b.last
  444640:	cmp	w8, #0x20
  444644:	b.eq	44462c <argp_parse@@Base+0x9f80>  // b.none
  444648:	sub	x26, x20, #0x4
  44464c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  444650:	movi	v0.2d, #0x0
  444654:	add	x1, x1, #0xf9d
  444658:	mov	w2, #0x4                   	// #4
  44465c:	mov	x0, x26
  444660:	str	xzr, [sp, #560]
  444664:	stp	q0, q0, [x27, #352]
  444668:	str	q0, [x27, #336]
  44466c:	bl	4042c0 <strncmp@plt>
  444670:	cbz	w0, 4448f4 <argp_parse@@Base+0xa248>
  444674:	mov	x8, xzr
  444678:	str	xzr, [sp, #112]
  44467c:	mov	x21, x19
  444680:	add	x2, sp, #0x1c8
  444684:	mov	x0, x21
  444688:	mov	x1, x25
  44468c:	bl	45bc18 <_obstack_memory_used@@Base+0x10a54>
  444690:	cbz	x0, 4448b4 <argp_parse@@Base+0xa208>
  444694:	ldrsw	x11, [sp, #472]
  444698:	ldrb	w8, [x26]
  44469c:	and	w10, w24, #0x1
  4446a0:	ldp	d1, d0, [sp, #456]
  4446a4:	strb	w10, [sp, #393]
  4446a8:	ldrsw	x10, [sp, #476]
  4446ac:	add	x11, x11, #0x1
  4446b0:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4446b4:	stp	xzr, x11, [sp, #224]
  4446b8:	ldr	x11, [sp, #560]
  4446bc:	add	x9, x9, #0xe98
  4446c0:	cmp	w8, #0x0
  4446c4:	rev64	v0.2s, v0.2s
  4446c8:	rev64	v1.2s, v1.2s
  4446cc:	csel	x9, x9, x26, eq  // eq = none
  4446d0:	sxtl	v0.2d, v0.2s
  4446d4:	add	x10, x10, #0x76c
  4446d8:	sxtl	v1.2d, v1.2s
  4446dc:	str	q0, [sp, #240]
  4446e0:	str	x9, [sp, #176]
  4446e4:	str	x10, [sp, #216]
  4446e8:	str	q1, [x27, #80]
  4446ec:	ldr	q1, [x27, #368]
  4446f0:	ldr	w8, [sp, #488]
  4446f4:	ldp	q0, q2, [x27, #336]
  4446f8:	str	x11, [sp, #328]
  4446fc:	ldr	x9, [sp, #504]
  444700:	mov	x11, #0xffffffffffff58ff    	// #-42753
  444704:	movk	x11, #0xff89, lsl #16
  444708:	sxtw	x12, w23
  44470c:	mov	w13, #0x2                   	// #2
  444710:	movk	x11, #0x7fff, lsl #48
  444714:	str	w13, [sp, #204]
  444718:	str	x12, [sp, #272]
  44471c:	stur	q1, [x27, #136]
  444720:	movi	v1.2d, #0x0
  444724:	mov	w10, #0x10d                 	// #269
  444728:	cmp	x22, x11
  44472c:	stur	w8, [x29, #-144]
  444730:	stur	q2, [x27, #120]
  444734:	stur	q0, [x27, #104]
  444738:	strh	wzr, [sp, #336]
  44473c:	stur	q1, [x27, #168]
  444740:	stur	q1, [x27, #184]
  444744:	stur	q1, [x27, #200]
  444748:	strb	wzr, [sp, #392]
  44474c:	stur	wzr, [x27, #218]
  444750:	stur	wzr, [x27, #221]
  444754:	str	x9, [sp, #408]
  444758:	str	w10, [sp, #416]
  44475c:	str	w8, [sp, #420]
  444760:	str	xzr, [sp, #424]
  444764:	b.gt	444858 <argp_parse@@Base+0xa1ac>
  444768:	mov	w8, #0xa700                	// #42752
  44476c:	movk	w8, #0x76, lsl #16
  444770:	add	x8, x22, x8
  444774:	add	x1, sp, #0x2b0
  444778:	sub	x2, x29, #0x78
  44477c:	mov	x0, x21
  444780:	str	x8, [sp, #688]
  444784:	bl	45bc18 <_obstack_memory_used@@Base+0x10a54>
  444788:	cbz	x0, 4447a4 <argp_parse@@Base+0xa0f8>
  44478c:	ldur	x8, [x29, #-72]
  444790:	cbz	x8, 4447a4 <argp_parse@@Base+0xa0f8>
  444794:	ldur	w9, [x29, #-88]
  444798:	ldr	w10, [sp, #420]
  44479c:	cmp	w9, w10
  4447a0:	b.ne	444844 <argp_parse@@Base+0xa198>  // b.any
  4447a4:	mov	x8, #0xffffffffffffb200    	// #-19968
  4447a8:	movk	x8, #0xff12, lsl #16
  4447ac:	movk	x8, #0x7fff, lsl #48
  4447b0:	cmp	x22, x8
  4447b4:	b.ge	444858 <argp_parse@@Base+0xa1ac>  // b.tcont
  4447b8:	mov	w8, #0x4e00                	// #19968
  4447bc:	movk	w8, #0xed, lsl #16
  4447c0:	add	x8, x22, x8
  4447c4:	add	x1, sp, #0x2b0
  4447c8:	sub	x2, x29, #0x78
  4447cc:	mov	x0, x21
  4447d0:	str	x8, [sp, #688]
  4447d4:	bl	45bc18 <_obstack_memory_used@@Base+0x10a54>
  4447d8:	cbz	x0, 4447f4 <argp_parse@@Base+0xa148>
  4447dc:	ldur	x8, [x29, #-72]
  4447e0:	cbz	x8, 4447f4 <argp_parse@@Base+0xa148>
  4447e4:	ldur	w9, [x29, #-88]
  4447e8:	ldr	w10, [sp, #420]
  4447ec:	cmp	w9, w10
  4447f0:	b.ne	444844 <argp_parse@@Base+0xa198>  // b.any
  4447f4:	mov	x8, #0xffffffffffff0aff    	// #-62721
  4447f8:	movk	x8, #0xfe9c, lsl #16
  4447fc:	movk	x8, #0x7fff, lsl #48
  444800:	cmp	x22, x8
  444804:	b.gt	444858 <argp_parse@@Base+0xa1ac>
  444808:	mov	w8, #0xf500                	// #62720
  44480c:	movk	w8, #0x163, lsl #16
  444810:	add	x8, x22, x8
  444814:	add	x1, sp, #0x2b0
  444818:	sub	x2, x29, #0x78
  44481c:	mov	x0, x21
  444820:	str	x8, [sp, #688]
  444824:	bl	45bc18 <_obstack_memory_used@@Base+0x10a54>
  444828:	cbz	x0, 444858 <argp_parse@@Base+0xa1ac>
  44482c:	ldur	x8, [x29, #-72]
  444830:	cbz	x8, 444858 <argp_parse@@Base+0xa1ac>
  444834:	ldur	w9, [x29, #-88]
  444838:	ldr	w10, [sp, #420]
  44483c:	cmp	w9, w10
  444840:	b.eq	444858 <argp_parse@@Base+0xa1ac>  // b.none
  444844:	str	x8, [sp, #424]
  444848:	mov	w8, #0x10d                 	// #269
  44484c:	str	w9, [sp, #436]
  444850:	str	w8, [sp, #432]
  444854:	str	xzr, [sp, #440]
  444858:	ldr	x0, [sp, #408]
  44485c:	cbz	x0, 444870 <argp_parse@@Base+0xa1c4>
  444860:	ldr	x1, [sp, #424]
  444864:	cbz	x1, 444870 <argp_parse@@Base+0xa1c4>
  444868:	bl	404610 <strcmp@plt>
  44486c:	cbz	w0, 444958 <argp_parse@@Base+0xa2ac>
  444870:	add	x0, sp, #0xb0
  444874:	bl	440d30 <argp_parse@@Base+0x6684>
  444878:	ldrb	w8, [sp, #393]
  44487c:	cbz	w0, 444974 <argp_parse@@Base+0xa2c8>
  444880:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  444884:	ldr	x8, [sp, #176]
  444888:	adrp	x9, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44488c:	adrp	x10, 469000 <_obstack_memory_used@@Base+0x1de3c>
  444890:	add	x9, x9, #0xfa2
  444894:	add	x10, x10, #0xfb9
  444898:	cmp	x28, x8
  44489c:	csel	x1, x10, x9, hi  // hi = pmore
  4448a0:	mov	w2, #0x5                   	// #5
  4448a4:	mov	x0, xzr
  4448a8:	bl	4048b0 <dcgettext@plt>
  4448ac:	ldr	x1, [sp, #176]
  4448b0:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4448b4:	mov	w22, wzr
  4448b8:	cmp	x21, x19
  4448bc:	b.eq	4448c8 <argp_parse@@Base+0xa21c>  // b.none
  4448c0:	mov	x0, x21
  4448c4:	bl	45bbe8 <_obstack_memory_used@@Base+0x10a24>
  4448c8:	ldr	x0, [sp, #112]
  4448cc:	bl	4046b0 <free@plt>
  4448d0:	mov	w0, w22
  4448d4:	add	sp, sp, #0x420
  4448d8:	ldp	x20, x19, [sp, #80]
  4448dc:	ldp	x22, x21, [sp, #64]
  4448e0:	ldp	x24, x23, [sp, #48]
  4448e4:	ldp	x26, x25, [sp, #32]
  4448e8:	ldp	x28, x27, [sp, #16]
  4448ec:	ldp	x29, x30, [sp], #96
  4448f0:	ret
  4448f4:	mov	w0, #0x1                   	// #1
  4448f8:	mov	x8, x20
  4448fc:	b	444908 <argp_parse@@Base+0xa25c>
  444900:	add	x8, x8, #0x1
  444904:	add	x0, x0, #0x1
  444908:	ldrb	w9, [x8]
  44490c:	cmp	w9, #0x5c
  444910:	b.eq	444924 <argp_parse@@Base+0xa278>  // b.none
  444914:	cbz	w9, 444678 <argp_parse@@Base+0x9fcc>
  444918:	cmp	w9, #0x22
  44491c:	b.ne	444900 <argp_parse@@Base+0xa254>  // b.any
  444920:	b	44493c <argp_parse@@Base+0xa290>
  444924:	ldrb	w9, [x8, #1]!
  444928:	cmp	w9, #0x22
  44492c:	b.eq	444900 <argp_parse@@Base+0xa254>  // b.none
  444930:	cmp	w9, #0x5c
  444934:	b.eq	444900 <argp_parse@@Base+0xa254>  // b.none
  444938:	b	444678 <argp_parse@@Base+0x9fcc>
  44493c:	cmp	x0, #0x65
  444940:	b.cc	4449d0 <argp_parse@@Base+0xa324>  // b.lo, b.ul, b.last
  444944:	bl	404210 <malloc@plt>
  444948:	mov	x8, x0
  44494c:	cbnz	x0, 4449d8 <argp_parse@@Base+0xa32c>
  444950:	mov	w22, wzr
  444954:	b	4448cc <argp_parse@@Base+0xa220>
  444958:	mov	w8, #0xffffffff            	// #-1
  44495c:	str	w8, [sp, #420]
  444960:	str	xzr, [sp, #424]
  444964:	add	x0, sp, #0xb0
  444968:	bl	440d30 <argp_parse@@Base+0x6684>
  44496c:	ldrb	w8, [sp, #393]
  444970:	cbnz	w0, 444880 <argp_parse@@Base+0xa1d4>
  444974:	cbnz	w8, 444c3c <argp_parse@@Base+0xa590>
  444978:	ldrb	w8, [sp, #336]
  44497c:	cbz	w8, 444e7c <argp_parse@@Base+0xa7d0>
  444980:	add	x8, sp, #0xb0
  444984:	ldr	q0, [x8, #88]!
  444988:	ldp	x20, x22, [sp, #96]
  44498c:	str	q0, [x20]
  444990:	ldrb	w8, [sp, #393]
  444994:	cbz	w8, 444c98 <argp_parse@@Base+0xa5ec>
  444998:	cbz	x22, 444a50 <argp_parse@@Base+0xa3a4>
  44499c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4449a0:	add	x1, x1, #0x3a
  4449a4:	mov	x0, x22
  4449a8:	bl	404610 <strcmp@plt>
  4449ac:	cbz	w0, 444a5c <argp_parse@@Base+0xa3b0>
  4449b0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4449b4:	add	x1, x1, #0x692
  4449b8:	mov	w2, #0x5                   	// #5
  4449bc:	mov	x0, xzr
  4449c0:	bl	4048b0 <dcgettext@plt>
  4449c4:	mov	x1, x22
  4449c8:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4449cc:	b	444a74 <argp_parse@@Base+0xa3c8>
  4449d0:	mov	x8, xzr
  4449d4:	add	x0, sp, #0x24c
  4449d8:	ldrb	w9, [x20]
  4449dc:	str	x8, [sp, #112]
  4449e0:	mov	x8, x0
  4449e4:	cmp	w9, #0x22
  4449e8:	b.eq	444a0c <argp_parse@@Base+0xa360>  // b.none
  4449ec:	and	w9, w9, #0xff
  4449f0:	cmp	w9, #0x5c
  4449f4:	cinc	x20, x20, eq  // eq = none
  4449f8:	ldrb	w9, [x20]
  4449fc:	strb	w9, [x8], #1
  444a00:	ldrb	w9, [x20, #1]!
  444a04:	cmp	w9, #0x22
  444a08:	b.ne	4449ec <argp_parse@@Base+0xa340>  // b.any
  444a0c:	strb	wzr, [x8]
  444a10:	str	x0, [sp, #104]
  444a14:	bl	45bb4c <_obstack_memory_used@@Base+0x10988>
  444a18:	cbz	x0, 444a48 <argp_parse@@Base+0xa39c>
  444a1c:	mov	x21, x0
  444a20:	add	x26, x20, #0x1
  444a24:	b	444a2c <argp_parse@@Base+0xa380>
  444a28:	add	x26, x26, #0x1
  444a2c:	ldrb	w8, [x26]
  444a30:	sub	w9, w8, #0x9
  444a34:	cmp	w9, #0x5
  444a38:	b.cc	444a28 <argp_parse@@Base+0xa37c>  // b.lo, b.ul, b.last
  444a3c:	cmp	w8, #0x20
  444a40:	b.eq	444a28 <argp_parse@@Base+0xa37c>  // b.none
  444a44:	b	444680 <argp_parse@@Base+0x9fd4>
  444a48:	mov	w22, wzr
  444a4c:	b	4448c8 <argp_parse@@Base+0xa21c>
  444a50:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444a54:	add	x1, x1, #0x65e
  444a58:	b	444a64 <argp_parse@@Base+0xa3b8>
  444a5c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444a60:	add	x1, x1, #0x678
  444a64:	mov	w2, #0x5                   	// #5
  444a68:	mov	x0, xzr
  444a6c:	bl	4048b0 <dcgettext@plt>
  444a70:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444a74:	ldr	x23, [x20]
  444a78:	ldr	w24, [x20, #8]
  444a7c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444a80:	add	x1, x1, #0x6b7
  444a84:	mov	w2, #0x5                   	// #5
  444a88:	mov	x0, xzr
  444a8c:	bl	4048b0 <dcgettext@plt>
  444a90:	mov	x1, x23
  444a94:	mov	w2, w24
  444a98:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444a9c:	sub	x1, x29, #0x78
  444aa0:	mov	x0, x20
  444aa4:	bl	404360 <gmtime_r@plt>
  444aa8:	cbz	x0, 444af0 <argp_parse@@Base+0xa444>
  444aac:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444ab0:	add	x1, x1, #0x6d8
  444ab4:	mov	w2, #0x5                   	// #5
  444ab8:	mov	x0, xzr
  444abc:	bl	4048b0 <dcgettext@plt>
  444ac0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444ac4:	mov	x23, x0
  444ac8:	add	x2, x2, #0xbf8
  444acc:	add	x0, sp, #0x2b0
  444ad0:	sub	x3, x29, #0x78
  444ad4:	mov	w1, #0x64                  	// #100
  444ad8:	mov	x4, xzr
  444adc:	mov	w5, wzr
  444ae0:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  444ae4:	add	x1, sp, #0x2b0
  444ae8:	mov	x0, x23
  444aec:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444af0:	add	x2, sp, #0x78
  444af4:	mov	x0, x21
  444af8:	mov	x1, x20
  444afc:	bl	45bc18 <_obstack_memory_used@@Base+0x10a54>
  444b00:	cbz	x0, 444c98 <argp_parse@@Base+0xa5ec>
  444b04:	ldrsw	x23, [sp, #160]
  444b08:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444b0c:	add	x1, x1, #0x6e9
  444b10:	mov	w2, #0x5                   	// #5
  444b14:	mov	x0, xzr
  444b18:	bl	4048b0 <dcgettext@plt>
  444b1c:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444b20:	mov	x22, x0
  444b24:	add	x2, x2, #0xbf8
  444b28:	add	x0, sp, #0x2b0
  444b2c:	add	x3, sp, #0x78
  444b30:	mov	w1, #0x64                  	// #100
  444b34:	mov	x4, xzr
  444b38:	mov	w5, wzr
  444b3c:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  444b40:	mov	x8, #0xffffffffffffb3c5    	// #-19515
  444b44:	movk	x8, #0x91a2, lsl #16
  444b48:	mul	x8, x23, x8
  444b4c:	lsr	x8, x8, #32
  444b50:	add	w8, w8, w23
  444b54:	asr	w10, w8, #11
  444b58:	add	w24, w10, w8, lsr #31
  444b5c:	cmp	w24, #0x0
  444b60:	mov	w9, #0x2b                  	// #43
  444b64:	cneg	w5, w24, mi  // mi = first
  444b68:	cmp	w23, #0x0
  444b6c:	mov	w8, #0x2d                  	// #45
  444b70:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444b74:	csel	w4, w8, w9, lt  // lt = tstop
  444b78:	add	x3, x3, #0xa3e
  444b7c:	add	x0, sp, #0x314
  444b80:	mov	w1, #0x1                   	// #1
  444b84:	mov	w2, #0x1b                  	// #27
  444b88:	add	x20, sp, #0x314
  444b8c:	bl	403f20 <__sprintf_chk@plt>
  444b90:	mov	w8, #0xe10                 	// #3600
  444b94:	msub	w9, w24, w8, w23
  444b98:	cbz	w9, 444c88 <argp_parse@@Base+0xa5dc>
  444b9c:	cmp	w9, #0x0
  444ba0:	mov	w11, #0x8889                	// #34953
  444ba4:	cneg	w9, w9, mi  // mi = first
  444ba8:	movk	w11, #0x8888, lsl #16
  444bac:	mov	w13, #0x81b5                	// #33205
  444bb0:	and	w14, w9, #0xffff
  444bb4:	movk	w13, #0x1b4e, lsl #16
  444bb8:	umull	x11, w14, w11
  444bbc:	mov	w12, #0x3c                  	// #60
  444bc0:	umull	x13, w14, w13
  444bc4:	lsr	x14, x11, #37
  444bc8:	msub	w9, w14, w12, w9
  444bcc:	mov	w12, #0xcccd                	// #52429
  444bd0:	movk	w12, #0xcccc, lsl #16
  444bd4:	lsr	x13, x13, #38
  444bd8:	ubfx	x11, x11, #37, #8
  444bdc:	add	x8, x20, w0, sxtw
  444be0:	add	w13, w13, #0x30
  444be4:	umull	x11, w11, w12
  444be8:	strb	w13, [x8, #1]
  444bec:	lsr	x13, x11, #35
  444bf0:	mov	w11, #0xa                   	// #10
  444bf4:	msub	w13, w13, w11, w14
  444bf8:	mov	w10, #0x3a                  	// #58
  444bfc:	tst	w9, #0xffff
  444c00:	orr	w13, w13, #0x30
  444c04:	strb	w10, [x8]
  444c08:	strb	w13, [x8, #2]
  444c0c:	b.eq	444c80 <argp_parse@@Base+0xa5d4>  // b.none
  444c10:	strb	w10, [x8, #3]
  444c14:	and	w10, w9, #0xff
  444c18:	umull	x10, w10, w12
  444c1c:	lsr	x10, x10, #35
  444c20:	msub	w9, w10, w11, w9
  444c24:	orr	w12, w10, #0x30
  444c28:	orr	w10, w9, #0x30
  444c2c:	add	x9, x8, #0x6
  444c30:	strb	w12, [x8, #4]
  444c34:	strb	w10, [x8, #5]
  444c38:	b	444c84 <argp_parse@@Base+0xa5d8>
  444c3c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  444c40:	add	x1, x1, #0xfe1
  444c44:	mov	w2, #0x5                   	// #5
  444c48:	mov	x0, xzr
  444c4c:	bl	4048b0 <dcgettext@plt>
  444c50:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444c54:	ldrb	w8, [sp, #336]
  444c58:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  444c5c:	cbnz	w8, 444ca8 <argp_parse@@Base+0xa5fc>
  444c60:	ldr	x8, [sp, #384]
  444c64:	cbnz	x8, 444cb8 <argp_parse@@Base+0xa60c>
  444c68:	ldr	x20, [sp, #104]
  444c6c:	cbnz	x20, 444df8 <argp_parse@@Base+0xa74c>
  444c70:	ldr	x24, [x22, #88]
  444c74:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444c78:	add	x1, x1, #0x7b
  444c7c:	b	444cc4 <argp_parse@@Base+0xa618>
  444c80:	add	x9, x8, #0x3
  444c84:	strb	wzr, [x9]
  444c88:	add	x1, sp, #0x2b0
  444c8c:	add	x2, sp, #0x314
  444c90:	mov	x0, x22
  444c94:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444c98:	mov	w22, #0x1                   	// #1
  444c9c:	cmp	x21, x19
  444ca0:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  444ca4:	b	4448c8 <argp_parse@@Base+0xa21c>
  444ca8:	ldr	x24, [x22, #88]
  444cac:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x1de3c>
  444cb0:	add	x1, x1, #0xff2
  444cb4:	b	444cc4 <argp_parse@@Base+0xa618>
  444cb8:	ldr	x24, [x22, #88]
  444cbc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444cc0:	add	x1, x1, #0xb
  444cc4:	mov	w2, #0x5                   	// #5
  444cc8:	mov	x0, xzr
  444ccc:	bl	4048b0 <dcgettext@plt>
  444cd0:	mov	x2, x0
  444cd4:	mov	w1, #0x1                   	// #1
  444cd8:	mov	x0, x24
  444cdc:	bl	404600 <__fprintf_chk@plt>
  444ce0:	ldr	x9, [sp, #360]
  444ce4:	ldr	x8, [sp, #384]
  444ce8:	cbz	x9, 444d14 <argp_parse@@Base+0xa668>
  444cec:	cbnz	x8, 444d14 <argp_parse@@Base+0xa668>
  444cf0:	ldr	w8, [sp, #196]
  444cf4:	cmp	w8, #0x1
  444cf8:	b.lt	444e68 <argp_parse@@Base+0xa7bc>  // b.tstop
  444cfc:	ldr	x0, [x22, #88]
  444d00:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444d04:	add	x2, x2, #0x8a
  444d08:	mov	w1, #0x1                   	// #1
  444d0c:	bl	404600 <__fprintf_chk@plt>
  444d10:	ldr	x8, [sp, #384]
  444d14:	cbz	x8, 444e68 <argp_parse@@Base+0xa7bc>
  444d18:	ldrsw	x23, [sp, #200]
  444d1c:	mov	x8, #0xffffffffffffb3c5    	// #-19515
  444d20:	movk	x8, #0x91a2, lsl #16
  444d24:	ldr	x24, [x22, #88]
  444d28:	mul	x8, x23, x8
  444d2c:	lsr	x8, x8, #32
  444d30:	add	w8, w8, w23
  444d34:	asr	w10, w8, #11
  444d38:	add	w25, w10, w8, lsr #31
  444d3c:	cmp	w25, #0x0
  444d40:	mov	w9, #0x2b                  	// #43
  444d44:	cneg	w5, w25, mi  // mi = first
  444d48:	cmp	w23, #0x0
  444d4c:	mov	w8, #0x2d                  	// #45
  444d50:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444d54:	csel	w4, w8, w9, lt  // lt = tstop
  444d58:	add	x3, x3, #0xa3e
  444d5c:	add	x0, sp, #0x314
  444d60:	mov	w1, #0x1                   	// #1
  444d64:	mov	w2, #0x1b                  	// #27
  444d68:	add	x20, sp, #0x314
  444d6c:	bl	403f20 <__sprintf_chk@plt>
  444d70:	mov	w8, #0xe10                 	// #3600
  444d74:	msub	w9, w25, w8, w23
  444d78:	cbz	w9, 444e50 <argp_parse@@Base+0xa7a4>
  444d7c:	cmp	w9, #0x0
  444d80:	mov	w11, #0x8889                	// #34953
  444d84:	cneg	w9, w9, mi  // mi = first
  444d88:	movk	w11, #0x8888, lsl #16
  444d8c:	mov	w13, #0x81b5                	// #33205
  444d90:	and	w14, w9, #0xffff
  444d94:	movk	w13, #0x1b4e, lsl #16
  444d98:	umull	x11, w14, w11
  444d9c:	mov	w12, #0x3c                  	// #60
  444da0:	umull	x13, w14, w13
  444da4:	lsr	x14, x11, #37
  444da8:	msub	w9, w14, w12, w9
  444dac:	mov	w12, #0xcccd                	// #52429
  444db0:	movk	w12, #0xcccc, lsl #16
  444db4:	lsr	x13, x13, #38
  444db8:	ubfx	x11, x11, #37, #8
  444dbc:	add	x8, x20, w0, sxtw
  444dc0:	add	w13, w13, #0x30
  444dc4:	umull	x11, w11, w12
  444dc8:	strb	w13, [x8, #1]
  444dcc:	lsr	x13, x11, #35
  444dd0:	mov	w11, #0xa                   	// #10
  444dd4:	msub	w13, w13, w11, w14
  444dd8:	mov	w10, #0x3a                  	// #58
  444ddc:	tst	w9, #0xffff
  444de0:	orr	w13, w13, #0x30
  444de4:	strb	w10, [x8]
  444de8:	strb	w13, [x8, #2]
  444dec:	b.ne	444e24 <argp_parse@@Base+0xa778>  // b.any
  444df0:	add	x9, x8, #0x3
  444df4:	b	444e4c <argp_parse@@Base+0xa7a0>
  444df8:	cmp	x21, x19
  444dfc:	b.ne	4454a4 <argp_parse@@Base+0xadf8>  // b.any
  444e00:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444e04:	add	x1, x1, #0x3a
  444e08:	mov	x0, x20
  444e0c:	bl	404610 <strcmp@plt>
  444e10:	ldr	x24, [x22, #88]
  444e14:	cbnz	w0, 4454e8 <argp_parse@@Base+0xae3c>
  444e18:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444e1c:	add	x1, x1, #0x3f
  444e20:	b	444cc4 <argp_parse@@Base+0xa618>
  444e24:	strb	w10, [x8, #3]
  444e28:	and	w10, w9, #0xff
  444e2c:	umull	x10, w10, w12
  444e30:	lsr	x10, x10, #35
  444e34:	msub	w9, w10, w11, w9
  444e38:	orr	w12, w10, #0x30
  444e3c:	orr	w10, w9, #0x30
  444e40:	add	x9, x8, #0x6
  444e44:	strb	w12, [x8, #4]
  444e48:	strb	w10, [x8, #5]
  444e4c:	strb	wzr, [x9]
  444e50:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444e54:	add	x2, x2, #0x90
  444e58:	add	x3, sp, #0x314
  444e5c:	mov	w1, #0x1                   	// #1
  444e60:	mov	x0, x24
  444e64:	bl	404600 <__fprintf_chk@plt>
  444e68:	ldr	x1, [x22, #88]
  444e6c:	mov	w0, #0xa                   	// #10
  444e70:	bl	404080 <fputc@plt>
  444e74:	ldrb	w8, [sp, #336]
  444e78:	cbnz	w8, 444980 <argp_parse@@Base+0xa2d4>
  444e7c:	ldp	x8, x12, [sp, #344]
  444e80:	ldp	x9, x11, [sp, #376]
  444e84:	ldp	x10, x13, [sp, #360]
  444e88:	ldrb	w20, [sp, #393]
  444e8c:	orr	x14, x8, x9
  444e90:	add	x10, x11, x10
  444e94:	orr	x11, x14, x12
  444e98:	orr	x11, x11, x13
  444e9c:	orr	x10, x11, x10
  444ea0:	cmp	x10, #0x2
  444ea4:	b.lt	444ef4 <argp_parse@@Base+0xa848>  // b.tstop
  444ea8:	cbz	w20, 4448b4 <argp_parse@@Base+0xa208>
  444eac:	cmp	x9, #0x2
  444eb0:	b.lt	444f44 <argp_parse@@Base+0xa898>  // b.tstop
  444eb4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444eb8:	add	x0, x0, #0x96
  444ebc:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444ec0:	ldr	x8, [sp, #344]
  444ec4:	cmp	x8, #0x2
  444ec8:	b.ge	444f4c <argp_parse@@Base+0xa8a0>  // b.tcont
  444ecc:	ldr	x8, [sp, #352]
  444ed0:	cmp	x8, #0x2
  444ed4:	b.lt	444f64 <argp_parse@@Base+0xa8b8>  // b.tstop
  444ed8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444edc:	add	x0, x0, #0xd8
  444ee0:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444ee4:	ldr	x8, [sp, #368]
  444ee8:	cmp	x8, #0x2
  444eec:	b.ge	444f70 <argp_parse@@Base+0xa8c4>  // b.tcont
  444ef0:	b	444f7c <argp_parse@@Base+0xa8d0>
  444ef4:	ldr	x24, [sp, #216]
  444ef8:	tbnz	x24, #63, 444f9c <argp_parse@@Base+0xa8f0>
  444efc:	ldr	x8, [sp, #224]
  444f00:	cmp	x8, #0x2
  444f04:	b.ne	44502c <argp_parse@@Base+0xa980>  // b.any
  444f08:	cmp	x24, #0x45
  444f0c:	mov	w8, #0x76c                 	// #1900
  444f10:	mov	w9, #0x7d0                 	// #2000
  444f14:	csel	x8, x9, x8, lt  // lt = tstop
  444f18:	add	x25, x8, x24
  444f1c:	cbz	w20, 445030 <argp_parse@@Base+0xa984>
  444f20:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444f24:	add	x1, x1, #0xa45
  444f28:	mov	w2, #0x5                   	// #5
  444f2c:	mov	x0, xzr
  444f30:	bl	4048b0 <dcgettext@plt>
  444f34:	mov	x1, x24
  444f38:	mov	x2, x25
  444f3c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444f40:	b	445030 <argp_parse@@Base+0xa984>
  444f44:	cmp	x8, #0x2
  444f48:	b.lt	444ecc <argp_parse@@Base+0xa820>  // b.tstop
  444f4c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444f50:	add	x0, x0, #0xb7
  444f54:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444f58:	ldr	x8, [sp, #352]
  444f5c:	cmp	x8, #0x2
  444f60:	b.ge	444ed8 <argp_parse@@Base+0xa82c>  // b.tcont
  444f64:	ldr	x8, [sp, #368]
  444f68:	cmp	x8, #0x2
  444f6c:	b.lt	444f7c <argp_parse@@Base+0xa8d0>  // b.tstop
  444f70:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444f74:	add	x0, x0, #0xf9
  444f78:	bl	4444a4 <argp_parse@@Base+0x9df8>
  444f7c:	ldr	x8, [sp, #360]
  444f80:	ldr	x9, [sp, #384]
  444f84:	add	x8, x9, x8
  444f88:	cmp	x8, #0x2
  444f8c:	b.lt	4448b4 <argp_parse@@Base+0xa208>  // b.tstop
  444f90:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  444f94:	add	x0, x0, #0x125
  444f98:	b	445088 <argp_parse@@Base+0xa9dc>
  444f9c:	mov	x9, #0xfffffffffffff895    	// #-1899
  444fa0:	mov	w8, #0xfffff894            	// #-1900
  444fa4:	movk	x9, #0x7fff, lsl #16
  444fa8:	cmp	x24, x9
  444fac:	sub	w8, w8, w24
  444fb0:	b.lt	445048 <argp_parse@@Base+0xa99c>  // b.tstop
  444fb4:	ldr	x9, [sp, #232]
  444fb8:	mov	w10, #0x7fffffff            	// #2147483647
  444fbc:	add	x10, x9, x10
  444fc0:	sub	w9, w9, #0x1
  444fc4:	lsr	x10, x10, #32
  444fc8:	stp	w9, w8, [x29, #-160]
  444fcc:	cbnz	x10, 44506c <argp_parse@@Base+0xa9c0>
  444fd0:	ldr	x8, [sp, #240]
  444fd4:	cmp	x8, w8, sxtw
  444fd8:	stur	w8, [x29, #-164]
  444fdc:	b.ne	44506c <argp_parse@@Base+0xa9c0>  // b.any
  444fe0:	ldr	x8, [sp, #376]
  444fe4:	cbnz	x8, 444ffc <argp_parse@@Base+0xa950>
  444fe8:	ldrb	w9, [sp, #337]
  444fec:	cbz	w9, 445190 <argp_parse@@Base+0xaae4>
  444ff0:	ldp	x9, x10, [sp, #344]
  444ff4:	orr	x9, x10, x9
  444ff8:	cbnz	x9, 445190 <argp_parse@@Base+0xaae4>
  444ffc:	ldr	w9, [sp, #204]
  445000:	ldr	x10, [sp, #248]
  445004:	cbz	w9, 44509c <argp_parse@@Base+0xa9f0>
  445008:	cmp	w9, #0x1
  44500c:	b.ne	4450b4 <argp_parse@@Base+0xaa08>  // b.any
  445010:	sub	x11, x10, #0x1
  445014:	cmp	x10, #0xc
  445018:	add	x12, x10, #0xc
  44501c:	csinv	x10, x10, xzr, eq  // eq = none
  445020:	cmp	x11, #0xb
  445024:	csel	x10, x12, x10, cc  // cc = lo, ul, last
  445028:	b	4450bc <argp_parse@@Base+0xaa10>
  44502c:	mov	x25, x24
  445030:	mov	w8, #0x76c                 	// #1900
  445034:	movk	w8, #0x8000, lsl #16
  445038:	cmp	x25, x8
  44503c:	sub	w8, w25, #0x76c
  445040:	mov	x24, x25
  445044:	b.lt	444fb4 <argp_parse@@Base+0xa908>  // b.tstop
  445048:	stur	w8, [x29, #-156]
  44504c:	cbz	w20, 44506c <argp_parse@@Base+0xa9c0>
  445050:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445054:	add	x1, x1, #0xa6f
  445058:	mov	w2, #0x5                   	// #5
  44505c:	mov	x0, xzr
  445060:	bl	4048b0 <dcgettext@plt>
  445064:	mov	x1, x24
  445068:	bl	4444a4 <argp_parse@@Base+0x9df8>
  44506c:	ldrb	w8, [sp, #393]
  445070:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  445074:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445078:	add	x1, x1, #0x14b
  44507c:	mov	w2, #0x5                   	// #5
  445080:	mov	x0, xzr
  445084:	bl	4048b0 <dcgettext@plt>
  445088:	bl	4444a4 <argp_parse@@Base+0x9df8>
  44508c:	mov	w22, wzr
  445090:	cmp	x21, x19
  445094:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  445098:	b	4448c8 <argp_parse@@Base+0xa21c>
  44509c:	sub	x11, x10, #0x1
  4450a0:	cmp	x10, #0xc
  4450a4:	csetm	x12, ne  // ne = any
  4450a8:	cmp	x11, #0xb
  4450ac:	csel	x10, x10, x12, cc  // cc = lo, ul, last
  4450b0:	b	4450bc <argp_parse@@Base+0xaa10>
  4450b4:	cmp	x10, #0x18
  4450b8:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
  4450bc:	stur	w10, [x29, #-168]
  4450c0:	tbnz	w10, #31, 445130 <argp_parse@@Base+0xaa84>
  4450c4:	ldp	x9, x10, [sp, #256]
  4450c8:	ldrb	w11, [sp, #393]
  4450cc:	stp	w10, w9, [x29, #-176]
  4450d0:	cbz	w11, 4451b0 <argp_parse@@Base+0xab04>
  4450d4:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4450d8:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4450dc:	add	x9, x9, #0x18e
  4450e0:	add	x10, x10, #0x1bc
  4450e4:	cmp	x8, #0x0
  4450e8:	csel	x1, x10, x9, eq  // eq = none
  4450ec:	mov	w2, #0x5                   	// #5
  4450f0:	mov	x0, xzr
  4450f4:	bl	4048b0 <dcgettext@plt>
  4450f8:	ldp	w7, w6, [x29, #-176]
  4450fc:	ldur	w5, [x29, #-168]
  445100:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445104:	mov	x24, x0
  445108:	add	x4, x4, #0xa8d
  44510c:	add	x0, sp, #0x2b0
  445110:	mov	w1, #0x64                  	// #100
  445114:	mov	w2, #0x1                   	// #1
  445118:	mov	w3, #0x64                  	// #100
  44511c:	bl	404190 <__snprintf_chk@plt>
  445120:	add	x1, sp, #0x2b0
  445124:	mov	x0, x24
  445128:	bl	4444a4 <argp_parse@@Base+0x9df8>
  44512c:	b	4451b0 <argp_parse@@Base+0xab04>
  445130:	ldrb	w8, [sp, #393]
  445134:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  445138:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  44513c:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445140:	add	x8, x8, #0xb36
  445144:	add	x10, x10, #0x170
  445148:	cmp	w9, #0x1
  44514c:	adrp	x11, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  445150:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445154:	add	x11, x11, #0x45b
  445158:	csel	x8, x10, x8, eq  // eq = none
  44515c:	cmp	w9, #0x0
  445160:	add	x1, x1, #0x173
  445164:	mov	w2, #0x5                   	// #5
  445168:	mov	x0, xzr
  44516c:	csel	x22, x11, x8, eq  // eq = none
  445170:	bl	4048b0 <dcgettext@plt>
  445174:	ldr	x1, [sp, #248]
  445178:	mov	x2, x22
  44517c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445180:	mov	w22, wzr
  445184:	cmp	x21, x19
  445188:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  44518c:	b	4448c8 <argp_parse@@Base+0xa21c>
  445190:	ldrb	w8, [sp, #393]
  445194:	stur	xzr, [x29, #-176]
  445198:	stur	wzr, [x29, #-168]
  44519c:	str	xzr, [sp, #272]
  4451a0:	cbz	w8, 4451b0 <argp_parse@@Base+0xab04>
  4451a4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4451a8:	add	x0, x0, #0x1e8
  4451ac:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4451b0:	ldp	x8, x9, [sp, #344]
  4451b4:	ldr	x10, [sp, #376]
  4451b8:	orr	x8, x9, x8
  4451bc:	orr	x8, x8, x10
  4451c0:	cbz	x8, 4451cc <argp_parse@@Base+0xab20>
  4451c4:	mov	w8, #0xffffffff            	// #-1
  4451c8:	stur	w8, [x29, #-144]
  4451cc:	ldr	x8, [sp, #360]
  4451d0:	cbz	x8, 4451e0 <argp_parse@@Base+0xab34>
  4451d4:	ldr	w8, [sp, #196]
  4451d8:	stur	w8, [x29, #-144]
  4451dc:	b	4451e4 <argp_parse@@Base+0xab38>
  4451e0:	ldur	w8, [x29, #-144]
  4451e4:	ldp	w28, w23, [x29, #-176]
  4451e8:	ldp	w20, w26, [x29, #-168]
  4451ec:	ldp	w25, w22, [x29, #-160]
  4451f0:	mov	w9, #0xffffffff            	// #-1
  4451f4:	sub	x1, x29, #0xb0
  4451f8:	mov	x0, x21
  4451fc:	stp	w28, w23, [x29, #-240]
  445200:	stp	w20, w26, [x29, #-232]
  445204:	stp	w25, w22, [x29, #-224]
  445208:	stur	w8, [x29, #-208]
  44520c:	stur	w9, [x29, #-152]
  445210:	bl	45bfd0 <_obstack_memory_used@@Base+0x10e0c>
  445214:	ldur	w8, [x29, #-152]
  445218:	tbnz	w8, #31, 445258 <argp_parse@@Base+0xabac>
  44521c:	ldp	w8, w9, [x29, #-176]
  445220:	ldp	w10, w11, [x29, #-168]
  445224:	ldp	w12, w13, [x29, #-160]
  445228:	eor	w8, w8, w28
  44522c:	eor	w9, w9, w23
  445230:	eor	w10, w10, w20
  445234:	orr	w8, w9, w8
  445238:	eor	w11, w11, w26
  44523c:	orr	w8, w8, w10
  445240:	eor	w12, w12, w25
  445244:	orr	w8, w8, w11
  445248:	orr	w8, w8, w12
  44524c:	eor	w9, w13, w22
  445250:	orr	w8, w8, w9
  445254:	cbz	w8, 445408 <argp_parse@@Base+0xad5c>
  445258:	ldr	x23, [sp, #384]
  44525c:	cbz	x23, 445528 <argp_parse@@Base+0xae7c>
  445260:	ldrsw	x20, [sp, #200]
  445264:	mov	x11, #0xffffffffffffb3c5    	// #-19515
  445268:	mov	w8, #0x58                  	// #88
  44526c:	movk	x11, #0x91a2, lsl #16
  445270:	sturb	w8, [x29, #-118]
  445274:	mul	x8, x20, x11
  445278:	lsr	x8, x8, #32
  44527c:	mov	w9, #0x5858                	// #22616
  445280:	add	w8, w8, w20
  445284:	sturh	w9, [x29, #-120]
  445288:	asr	w9, w8, #11
  44528c:	add	w22, w9, w8, lsr #31
  445290:	sub	x10, x29, #0x78
  445294:	cmp	w22, #0x0
  445298:	mov	w12, #0x2b                  	// #43
  44529c:	orr	x24, x10, #0x3
  4452a0:	cneg	w5, w22, mi  // mi = first
  4452a4:	cmp	w20, #0x0
  4452a8:	mov	w8, #0x2d                  	// #45
  4452ac:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4452b0:	csel	w4, w8, w12, lt  // lt = tstop
  4452b4:	add	x3, x3, #0xa3e
  4452b8:	mov	w1, #0x1                   	// #1
  4452bc:	mov	w2, #0x1b                  	// #27
  4452c0:	mov	x0, x24
  4452c4:	bl	403f20 <__sprintf_chk@plt>
  4452c8:	mov	w8, #0xe10                 	// #3600
  4452cc:	msub	w8, w22, w8, w20
  4452d0:	cbz	w8, 44537c <argp_parse@@Base+0xacd0>
  4452d4:	cmp	w8, #0x0
  4452d8:	mov	w10, #0x8889                	// #34953
  4452dc:	cneg	w8, w8, mi  // mi = first
  4452e0:	movk	w10, #0x8888, lsl #16
  4452e4:	mov	w12, #0x81b5                	// #33205
  4452e8:	and	w14, w8, #0xffff
  4452ec:	movk	w12, #0x1b4e, lsl #16
  4452f0:	umull	x10, w14, w10
  4452f4:	mov	w11, #0x3c                  	// #60
  4452f8:	umull	x14, w14, w12
  4452fc:	lsr	x15, x10, #37
  445300:	mov	w12, #0xcccd                	// #52429
  445304:	msub	w8, w15, w11, w8
  445308:	movk	w12, #0xcccc, lsl #16
  44530c:	lsr	x11, x14, #38
  445310:	ubfx	x10, x10, #37, #8
  445314:	add	x13, x24, w0, sxtw
  445318:	add	w11, w11, #0x30
  44531c:	umull	x10, w10, w12
  445320:	strb	w11, [x13, #1]
  445324:	mov	w11, #0xa                   	// #10
  445328:	lsr	x10, x10, #35
  44532c:	msub	w10, w10, w11, w15
  445330:	mov	w9, #0x3a                  	// #58
  445334:	tst	w8, #0xffff
  445338:	orr	w14, w10, #0x30
  44533c:	add	x10, x13, #0x3
  445340:	strb	w9, [x13]
  445344:	strb	w14, [x13, #2]
  445348:	b.eq	445378 <argp_parse@@Base+0xaccc>  // b.none
  44534c:	strb	w9, [x10]
  445350:	and	w9, w8, #0xff
  445354:	umull	x9, w9, w12
  445358:	lsr	x9, x9, #35
  44535c:	msub	w8, w9, w11, w8
  445360:	orr	w12, w9, #0x30
  445364:	orr	w8, w8, #0x30
  445368:	add	x9, x10, #0x3
  44536c:	strb	w12, [x10, #1]
  445370:	strb	w8, [x10, #2]
  445374:	mov	x10, x9
  445378:	strb	wzr, [x10]
  44537c:	sub	x0, x29, #0x78
  445380:	bl	45bb4c <_obstack_memory_used@@Base+0x10988>
  445384:	cbz	x0, 4454b4 <argp_parse@@Base+0xae08>
  445388:	ldr	q0, [x27, #640]
  44538c:	ldur	x8, [x29, #-224]
  445390:	ldur	w9, [x29, #-208]
  445394:	mov	w10, #0xffffffff            	// #-1
  445398:	sub	x1, x29, #0xb0
  44539c:	mov	x25, x0
  4453a0:	str	q0, [x27, #704]
  4453a4:	stur	x8, [x29, #-160]
  4453a8:	stur	w9, [x29, #-144]
  4453ac:	stur	w10, [x29, #-152]
  4453b0:	bl	45bfd0 <_obstack_memory_used@@Base+0x10e0c>
  4453b4:	ldur	w8, [x29, #-152]
  4453b8:	tbnz	w8, #31, 445520 <argp_parse@@Base+0xae74>
  4453bc:	ldr	q0, [x27, #640]
  4453c0:	ldr	q1, [x27, #704]
  4453c4:	ldp	w8, w11, [x29, #-160]
  4453c8:	ldp	w9, w10, [x29, #-224]
  4453cc:	mov	x24, x0
  4453d0:	eor	v0.16b, v1.16b, v0.16b
  4453d4:	ext	v1.16b, v0.16b, v0.16b, #8
  4453d8:	orr	v0.16b, v0.16b, v1.16b
  4453dc:	dup	v1.4s, v0.s[1]
  4453e0:	orr	v0.16b, v0.16b, v1.16b
  4453e4:	eor	w8, w8, w9
  4453e8:	eor	w9, w11, w10
  4453ec:	fmov	w10, s0
  4453f0:	orr	w8, w10, w8
  4453f4:	mov	x0, x25
  4453f8:	orr	w20, w8, w9
  4453fc:	bl	45bbe8 <_obstack_memory_used@@Base+0x10a24>
  445400:	cbnz	w20, 445528 <argp_parse@@Base+0xae7c>
  445404:	b	44540c <argp_parse@@Base+0xad60>
  445408:	mov	x24, x0
  44540c:	ldr	x8, [sp, #352]
  445410:	cbz	x8, 446028 <argp_parse@@Base+0xb97c>
  445414:	ldr	x8, [sp, #344]
  445418:	cbnz	x8, 446028 <argp_parse@@Base+0xb97c>
  44541c:	ldr	x8, [sp, #184]
  445420:	ldur	w9, [x29, #-152]
  445424:	ldr	w10, [sp, #192]
  445428:	cmp	x8, #0x0
  44542c:	cset	w11, gt
  445430:	subs	w9, w10, w9
  445434:	cset	w10, ne  // ne = any
  445438:	and	w10, w11, w10
  44543c:	subs	x8, x8, x10
  445440:	b.mi	445720 <argp_parse@@Base+0xb074>  // b.first
  445444:	mov	x10, #0x9249                	// #37449
  445448:	movk	x10, #0x4924, lsl #16
  44544c:	movk	x10, #0x2492, lsl #32
  445450:	movk	x10, #0x1249, lsl #48
  445454:	cmp	x8, x10
  445458:	b.gt	445b38 <argp_parse@@Base+0xb48c>
  44545c:	mov	w12, #0x2493                	// #9363
  445460:	lsl	x10, x8, #3
  445464:	add	w9, w9, #0x7
  445468:	movk	w12, #0x9249, lsl #16
  44546c:	sub	x8, x10, x8
  445470:	smull	x10, w9, w12
  445474:	lsr	x10, x10, #32
  445478:	add	w10, w10, w9
  44547c:	asr	w12, w10, #2
  445480:	add	w10, w12, w10, lsr #31
  445484:	sub	w10, w10, w10, lsl #3
  445488:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  44548c:	add	w9, w9, w10
  445490:	sub	x11, x11, x8
  445494:	sxtw	x10, w9
  445498:	cmp	x11, x10
  44549c:	b.ge	44577c <argp_parse@@Base+0xb0d0>  // b.tcont
  4454a0:	b	445b38 <argp_parse@@Base+0xb48c>
  4454a4:	ldr	x24, [x22, #88]
  4454a8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4454ac:	add	x1, x1, #0x23
  4454b0:	b	4454f0 <argp_parse@@Base+0xae44>
  4454b4:	ldrb	w8, [sp, #393]
  4454b8:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  4454bc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4454c0:	add	x1, x1, #0x21c
  4454c4:	mov	w2, #0x5                   	// #5
  4454c8:	mov	x0, xzr
  4454cc:	bl	4048b0 <dcgettext@plt>
  4454d0:	sub	x1, x29, #0x78
  4454d4:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4454d8:	mov	w22, wzr
  4454dc:	cmp	x21, x19
  4454e0:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  4454e4:	b	4448c8 <argp_parse@@Base+0xa21c>
  4454e8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4454ec:	add	x1, x1, #0x61
  4454f0:	mov	w2, #0x5                   	// #5
  4454f4:	mov	x0, xzr
  4454f8:	bl	4048b0 <dcgettext@plt>
  4454fc:	mov	x2, x0
  445500:	mov	w1, #0x1                   	// #1
  445504:	mov	x0, x24
  445508:	mov	x3, x20
  44550c:	bl	404600 <__fprintf_chk@plt>
  445510:	ldr	x9, [sp, #360]
  445514:	ldr	x8, [sp, #384]
  445518:	cbnz	x9, 444cec <argp_parse@@Base+0xa640>
  44551c:	b	444d14 <argp_parse@@Base+0xa668>
  445520:	mov	x0, x25
  445524:	bl	45bbe8 <_obstack_memory_used@@Base+0x10a24>
  445528:	ldp	w15, w17, [x29, #-240]
  44552c:	ldp	w16, w18, [x29, #-176]
  445530:	ldp	w0, w24, [x29, #-232]
  445534:	ldp	w1, w13, [x29, #-168]
  445538:	ldp	w12, w25, [x29, #-224]
  44553c:	ldp	w14, w27, [x29, #-160]
  445540:	cmp	w15, w16
  445544:	cset	w8, eq  // eq = none
  445548:	cmp	w17, w18
  44554c:	cset	w9, eq  // eq = none
  445550:	cmp	w0, w1
  445554:	ldrb	w11, [sp, #393]
  445558:	cset	w10, ne  // ne = any
  44555c:	cmp	w24, w13
  445560:	cset	w28, eq  // eq = none
  445564:	cmp	w12, w14
  445568:	cset	w26, eq  // eq = none
  44556c:	cmp	w25, w27
  445570:	str	x23, [sp, #104]
  445574:	cset	w23, eq  // eq = none
  445578:	str	w13, [sp, #96]
  44557c:	str	w14, [sp, #88]
  445580:	cbz	w11, 4448b4 <argp_parse@@Base+0xa208>
  445584:	stp	w1, w0, [sp, #56]
  445588:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44558c:	and	w8, w8, w9
  445590:	add	x1, x1, #0xa9c
  445594:	mov	w2, #0x5                   	// #5
  445598:	mov	x0, xzr
  44559c:	stp	w18, w17, [sp, #64]
  4455a0:	stp	w16, w15, [sp, #72]
  4455a4:	str	w12, [sp, #80]
  4455a8:	and	w20, w8, w10
  4455ac:	bl	4048b0 <dcgettext@plt>
  4455b0:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4455b4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4455b8:	add	x1, x1, #0xabd
  4455bc:	mov	w2, #0x5                   	// #5
  4455c0:	mov	x0, xzr
  4455c4:	bl	4048b0 <dcgettext@plt>
  4455c8:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4455cc:	mov	x22, x0
  4455d0:	add	x2, x2, #0xbf8
  4455d4:	sub	x0, x29, #0x78
  4455d8:	sub	x3, x29, #0xf0
  4455dc:	mov	w1, #0x64                  	// #100
  4455e0:	mov	x4, xzr
  4455e4:	mov	w5, wzr
  4455e8:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  4455ec:	cmp	w0, #0x63
  4455f0:	str	w24, [sp, #52]
  4455f4:	b.gt	4457c8 <argp_parse@@Base+0xb11c>
  4455f8:	ldr	x8, [sp, #384]
  4455fc:	cbz	x8, 4457c8 <argp_parse@@Base+0xb11c>
  445600:	str	w20, [sp, #40]
  445604:	ldrsw	x20, [sp, #200]
  445608:	sub	x8, x29, #0x78
  44560c:	mov	x9, #0x6400000000          	// #429496729600
  445610:	add	x8, x8, w0, sxtw
  445614:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  445618:	str	x8, [sp, #32]
  44561c:	sub	x8, x9, x0, lsl #32
  445620:	movk	x10, #0x91a2, lsl #16
  445624:	asr	x8, x8, #32
  445628:	str	x8, [sp, #24]
  44562c:	mul	x8, x20, x10
  445630:	lsr	x8, x8, #32
  445634:	add	w8, w8, w20
  445638:	asr	w9, w8, #11
  44563c:	add	w24, w9, w8, lsr #31
  445640:	cmp	w24, #0x0
  445644:	mov	w11, #0x2b                  	// #43
  445648:	cneg	w5, w24, mi  // mi = first
  44564c:	cmp	w20, #0x0
  445650:	mov	w8, #0x2d                  	// #45
  445654:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445658:	csel	w4, w8, w11, lt  // lt = tstop
  44565c:	add	x3, x3, #0xa3e
  445660:	add	x0, sp, #0x78
  445664:	mov	w1, #0x1                   	// #1
  445668:	mov	w2, #0x1b                  	// #27
  44566c:	bl	403f20 <__sprintf_chk@plt>
  445670:	mov	w8, #0xe10                 	// #3600
  445674:	msub	w9, w24, w8, w20
  445678:	cbz	w9, 4457a4 <argp_parse@@Base+0xb0f8>
  44567c:	cmp	w9, #0x0
  445680:	mov	w11, #0x8889                	// #34953
  445684:	cneg	w9, w9, mi  // mi = first
  445688:	movk	w11, #0x8888, lsl #16
  44568c:	mov	w13, #0x81b5                	// #33205
  445690:	and	w14, w9, #0xffff
  445694:	movk	w13, #0x1b4e, lsl #16
  445698:	umull	x11, w14, w11
  44569c:	mov	w12, #0x3c                  	// #60
  4456a0:	umull	x13, w14, w13
  4456a4:	lsr	x14, x11, #37
  4456a8:	msub	w9, w14, w12, w9
  4456ac:	mov	w12, #0xcccd                	// #52429
  4456b0:	add	x8, sp, #0x78
  4456b4:	movk	w12, #0xcccc, lsl #16
  4456b8:	lsr	x13, x13, #38
  4456bc:	ubfx	x11, x11, #37, #8
  4456c0:	add	x8, x8, w0, sxtw
  4456c4:	add	w13, w13, #0x30
  4456c8:	umull	x11, w11, w12
  4456cc:	strb	w13, [x8, #1]
  4456d0:	lsr	x13, x11, #35
  4456d4:	mov	w11, #0xa                   	// #10
  4456d8:	msub	w13, w13, w11, w14
  4456dc:	mov	w10, #0x3a                  	// #58
  4456e0:	tst	w9, #0xffff
  4456e4:	orr	w13, w13, #0x30
  4456e8:	strb	w10, [x8]
  4456ec:	strb	w13, [x8, #2]
  4456f0:	b.eq	44579c <argp_parse@@Base+0xb0f0>  // b.none
  4456f4:	strb	w10, [x8, #3]
  4456f8:	and	w10, w9, #0xff
  4456fc:	umull	x10, w10, w12
  445700:	lsr	x10, x10, #35
  445704:	msub	w9, w10, w11, w9
  445708:	orr	w12, w10, #0x30
  44570c:	orr	w10, w9, #0x30
  445710:	add	x9, x8, #0x6
  445714:	strb	w12, [x8, #4]
  445718:	strb	w10, [x8, #5]
  44571c:	b	4457a0 <argp_parse@@Base+0xb0f4>
  445720:	mov	x10, #0x6db7                	// #28087
  445724:	movk	x10, #0xb6db, lsl #16
  445728:	movk	x10, #0xdb6d, lsl #32
  44572c:	movk	x10, #0xedb6, lsl #48
  445730:	cmp	x8, x10
  445734:	b.lt	445b38 <argp_parse@@Base+0xb48c>  // b.tstop
  445738:	mov	w11, #0x2493                	// #9363
  44573c:	lsl	x10, x8, #3
  445740:	add	w9, w9, #0x7
  445744:	movk	w11, #0x9249, lsl #16
  445748:	sub	x8, x10, x8
  44574c:	smull	x10, w9, w11
  445750:	lsr	x10, x10, #32
  445754:	add	w10, w10, w9
  445758:	asr	w11, w10, #2
  44575c:	add	w10, w11, w10, lsr #31
  445760:	sub	w10, w10, w10, lsl #3
  445764:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  445768:	add	w9, w9, w10
  44576c:	sxtw	x10, w9
  445770:	sub	x9, x12, x8
  445774:	cmp	x9, x10
  445778:	b.gt	445b38 <argp_parse@@Base+0xb48c>
  44577c:	ldursw	x9, [x29, #-164]
  445780:	add	x8, x8, x10
  445784:	tbnz	w9, #31, 445b0c <argp_parse@@Base+0xb460>
  445788:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  44578c:	sub	x10, x10, x9
  445790:	cmp	x10, x8
  445794:	b.ge	445b1c <argp_parse@@Base+0xb470>  // b.tcont
  445798:	b	445b30 <argp_parse@@Base+0xb484>
  44579c:	add	x9, x8, #0x3
  4457a0:	strb	wzr, [x9]
  4457a4:	ldp	x1, x0, [sp, #24]
  4457a8:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4457ac:	add	x4, x4, #0xc12
  4457b0:	add	x5, sp, #0x78
  4457b4:	mov	w2, #0x1                   	// #1
  4457b8:	mov	x3, #0xffffffffffffffff    	// #-1
  4457bc:	bl	404190 <__snprintf_chk@plt>
  4457c0:	ldr	w24, [sp, #52]
  4457c4:	ldr	w20, [sp, #40]
  4457c8:	sub	x1, x29, #0x78
  4457cc:	mov	x0, x22
  4457d0:	and	w23, w26, w23
  4457d4:	and	w26, w20, w28
  4457d8:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4457dc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4457e0:	add	x1, x1, #0xadb
  4457e4:	mov	w2, #0x5                   	// #5
  4457e8:	mov	x0, xzr
  4457ec:	bl	4048b0 <dcgettext@plt>
  4457f0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4457f4:	mov	x22, x0
  4457f8:	add	x2, x2, #0xbf8
  4457fc:	sub	x0, x29, #0x78
  445800:	sub	x3, x29, #0xb0
  445804:	mov	w1, #0x64                  	// #100
  445808:	mov	x4, xzr
  44580c:	mov	w5, wzr
  445810:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  445814:	cmp	w0, #0x63
  445818:	b.gt	445968 <argp_parse@@Base+0xb2bc>
  44581c:	ldr	x8, [sp, #384]
  445820:	cbz	x8, 445968 <argp_parse@@Base+0xb2bc>
  445824:	ldrsw	x24, [sp, #200]
  445828:	sub	x8, x29, #0x78
  44582c:	mov	x9, #0x6400000000          	// #429496729600
  445830:	add	x8, x8, w0, sxtw
  445834:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  445838:	str	x8, [sp, #40]
  44583c:	sub	x8, x9, x0, lsl #32
  445840:	movk	x10, #0x91a2, lsl #16
  445844:	asr	x8, x8, #32
  445848:	str	x8, [sp, #32]
  44584c:	mul	x8, x24, x10
  445850:	lsr	x8, x8, #32
  445854:	add	w8, w8, w24
  445858:	asr	w9, w8, #11
  44585c:	add	w28, w9, w8, lsr #31
  445860:	cmp	w28, #0x0
  445864:	mov	w11, #0x2b                  	// #43
  445868:	cneg	w5, w28, mi  // mi = first
  44586c:	cmp	w24, #0x0
  445870:	mov	w8, #0x2d                  	// #45
  445874:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445878:	csel	w4, w8, w11, lt  // lt = tstop
  44587c:	add	x3, x3, #0xa3e
  445880:	add	x0, sp, #0x78
  445884:	mov	w1, #0x1                   	// #1
  445888:	mov	w2, #0x1b                  	// #27
  44588c:	add	x20, sp, #0x78
  445890:	bl	403f20 <__sprintf_chk@plt>
  445894:	mov	w8, #0xe10                 	// #3600
  445898:	msub	w9, w28, w8, w24
  44589c:	cbz	w9, 445948 <argp_parse@@Base+0xb29c>
  4458a0:	cmp	w9, #0x0
  4458a4:	mov	w11, #0x8889                	// #34953
  4458a8:	cneg	w9, w9, mi  // mi = first
  4458ac:	movk	w11, #0x8888, lsl #16
  4458b0:	mov	w13, #0x81b5                	// #33205
  4458b4:	and	w14, w9, #0xffff
  4458b8:	movk	w13, #0x1b4e, lsl #16
  4458bc:	umull	x11, w14, w11
  4458c0:	mov	w12, #0x3c                  	// #60
  4458c4:	umull	x13, w14, w13
  4458c8:	lsr	x14, x11, #37
  4458cc:	msub	w9, w14, w12, w9
  4458d0:	mov	w12, #0xcccd                	// #52429
  4458d4:	movk	w12, #0xcccc, lsl #16
  4458d8:	lsr	x13, x13, #38
  4458dc:	ubfx	x11, x11, #37, #8
  4458e0:	add	x8, x20, w0, sxtw
  4458e4:	add	w13, w13, #0x30
  4458e8:	umull	x11, w11, w12
  4458ec:	strb	w13, [x8, #1]
  4458f0:	lsr	x13, x11, #35
  4458f4:	mov	w11, #0xa                   	// #10
  4458f8:	msub	w13, w13, w11, w14
  4458fc:	mov	w10, #0x3a                  	// #58
  445900:	tst	w9, #0xffff
  445904:	orr	w13, w13, #0x30
  445908:	strb	w10, [x8]
  44590c:	strb	w13, [x8, #2]
  445910:	b.eq	445940 <argp_parse@@Base+0xb294>  // b.none
  445914:	strb	w10, [x8, #3]
  445918:	and	w10, w9, #0xff
  44591c:	umull	x10, w10, w12
  445920:	lsr	x10, x10, #35
  445924:	msub	w9, w10, w11, w9
  445928:	orr	w12, w10, #0x30
  44592c:	orr	w10, w9, #0x30
  445930:	add	x9, x8, #0x6
  445934:	strb	w12, [x8, #4]
  445938:	strb	w10, [x8, #5]
  44593c:	b	445944 <argp_parse@@Base+0xb298>
  445940:	add	x9, x8, #0x3
  445944:	strb	wzr, [x9]
  445948:	ldp	x1, x0, [sp, #32]
  44594c:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445950:	add	x4, x4, #0xc12
  445954:	add	x5, sp, #0x78
  445958:	mov	w2, #0x1                   	// #1
  44595c:	mov	x3, #0xffffffffffffffff    	// #-1
  445960:	bl	404190 <__snprintf_chk@plt>
  445964:	ldr	w24, [sp, #52]
  445968:	sub	x1, x29, #0x78
  44596c:	mov	x0, x22
  445970:	and	w20, w26, w23
  445974:	sub	x23, x29, #0x78
  445978:	bl	4444a4 <argp_parse@@Base+0x9df8>
  44597c:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445980:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  445984:	ldr	w22, [sp, #80]
  445988:	ldr	w26, [sp, #88]
  44598c:	add	x8, x8, #0xb32
  445990:	add	x9, x9, #0xb36
  445994:	cmp	w25, w27
  445998:	ldr	w25, [sp, #96]
  44599c:	csel	x5, x9, x8, eq  // eq = none
  4459a0:	ldp	w11, w8, [sp, #56]
  4459a4:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4459a8:	add	x10, x10, #0xb34
  4459ac:	cmp	w22, w26
  4459b0:	csel	x6, x9, x10, eq  // eq = none
  4459b4:	cmp	w24, w25
  4459b8:	csel	x7, x9, x10, eq  // eq = none
  4459bc:	cmp	w8, w11
  4459c0:	ldp	w12, w11, [sp, #64]
  4459c4:	csel	x8, x9, x10, eq  // eq = none
  4459c8:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4459cc:	add	x4, x4, #0xaf9
  4459d0:	cmp	w11, w12
  4459d4:	ldp	w13, w12, [sp, #72]
  4459d8:	csel	x11, x9, x10, eq  // eq = none
  4459dc:	sub	x0, x29, #0x78
  4459e0:	mov	w1, #0x64                  	// #100
  4459e4:	cmp	w12, w13
  4459e8:	csel	x9, x9, x10, eq  // eq = none
  4459ec:	mov	w2, #0x1                   	// #1
  4459f0:	mov	w3, #0x64                  	// #100
  4459f4:	stp	x11, x9, [sp, #8]
  4459f8:	str	x8, [sp]
  4459fc:	bl	404190 <__snprintf_chk@plt>
  445a00:	tbnz	w0, #31, 445a40 <argp_parse@@Base+0xb394>
  445a04:	cmp	w0, #0x63
  445a08:	mov	w8, #0x63                  	// #99
  445a0c:	csel	w9, w0, w8, cc  // cc = lo, ul, last
  445a10:	sub	x8, x23, #0x1
  445a14:	subs	x10, x9, #0x1
  445a18:	b.lt	445a34 <argp_parse@@Base+0xb388>  // b.tstop
  445a1c:	ldrb	w9, [x8, x9]
  445a20:	cmp	w9, #0x20
  445a24:	mov	x9, x10
  445a28:	b.eq	445a14 <argp_parse@@Base+0xb368>  // b.none
  445a2c:	add	x8, x10, #0x1
  445a30:	b	445a38 <argp_parse@@Base+0xb38c>
  445a34:	mov	x8, xzr
  445a38:	sub	x9, x29, #0x78
  445a3c:	strb	wzr, [x9, w8, sxtw]
  445a40:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x1be3c>
  445a44:	add	x0, x0, #0xfdb
  445a48:	sub	x1, x29, #0x78
  445a4c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445a50:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445a54:	add	x1, x1, #0xb37
  445a58:	mov	w2, #0x5                   	// #5
  445a5c:	mov	x0, xzr
  445a60:	bl	4048b0 <dcgettext@plt>
  445a64:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445a68:	cbz	w20, 445a84 <argp_parse@@Base+0xb3d8>
  445a6c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445a70:	add	x1, x1, #0xb4f
  445a74:	mov	w2, #0x5                   	// #5
  445a78:	mov	x0, xzr
  445a7c:	bl	4048b0 <dcgettext@plt>
  445a80:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445a84:	ldr	x20, [sp, #104]
  445a88:	cmp	w24, w25
  445a8c:	b.eq	445ab0 <argp_parse@@Base+0xb404>  // b.none
  445a90:	cmp	w22, w26
  445a94:	b.eq	445ab0 <argp_parse@@Base+0xb404>  // b.none
  445a98:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445a9c:	add	x1, x1, #0xb81
  445aa0:	mov	w2, #0x5                   	// #5
  445aa4:	mov	x0, xzr
  445aa8:	bl	4048b0 <dcgettext@plt>
  445aac:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445ab0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445ab4:	add	x1, x1, #0xba8
  445ab8:	mov	w2, #0x5                   	// #5
  445abc:	mov	x0, xzr
  445ac0:	bl	4048b0 <dcgettext@plt>
  445ac4:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445ac8:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445acc:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445ad0:	add	x8, x8, #0xbe7
  445ad4:	add	x9, x9, #0xbd4
  445ad8:	cmp	x20, #0x0
  445adc:	csel	x1, x9, x8, ne  // ne = any
  445ae0:	mov	w2, #0x5                   	// #5
  445ae4:	mov	x0, xzr
  445ae8:	bl	4048b0 <dcgettext@plt>
  445aec:	mov	x1, x0
  445af0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445af4:	add	x0, x0, #0xbc9
  445af8:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445afc:	mov	w22, wzr
  445b00:	cmp	x21, x19
  445b04:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  445b08:	b	4448c8 <argp_parse@@Base+0xa21c>
  445b0c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  445b10:	sub	x10, x10, x9
  445b14:	cmp	x8, x10
  445b18:	b.lt	445b30 <argp_parse@@Base+0xb484>  // b.tstop
  445b1c:	add	x10, x8, x9
  445b20:	mov	w11, #0x80000000            	// #-2147483648
  445b24:	add	x10, x10, x11
  445b28:	lsr	x10, x10, #32
  445b2c:	cbz	x10, 445da8 <argp_parse@@Base+0xb6fc>
  445b30:	add	w8, w9, w8
  445b34:	stur	w8, [x29, #-164]
  445b38:	ldrb	w8, [sp, #393]
  445b3c:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  445b40:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445b44:	add	x1, x1, #0x23a
  445b48:	mov	w2, #0x5                   	// #5
  445b4c:	mov	x0, xzr
  445b50:	bl	4048b0 <dcgettext@plt>
  445b54:	ldrb	w8, [sp, #400]
  445b58:	mov	x22, x0
  445b5c:	cbz	w8, 445b8c <argp_parse@@Base+0xb4e0>
  445b60:	ldr	x5, [sp, #184]
  445b64:	add	x8, x5, #0x1
  445b68:	cmp	x8, #0xd
  445b6c:	b.hi	445b98 <argp_parse@@Base+0xb4ec>  // b.pmore
  445b70:	adrp	x10, 469000 <_obstack_memory_used@@Base+0x1de3c>
  445b74:	mov	w9, #0xb                   	// #11
  445b78:	add	x10, x10, #0xe30
  445b7c:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  445b80:	madd	x5, x8, x9, x10
  445b84:	add	x4, x4, #0x274
  445b88:	b	445ba0 <argp_parse@@Base+0xb4f4>
  445b8c:	mov	w0, wzr
  445b90:	sturb	wzr, [x29, #-120]
  445b94:	b	445bb4 <argp_parse@@Base+0xb508>
  445b98:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445b9c:	add	x4, x4, #0x796
  445ba0:	sub	x0, x29, #0x78
  445ba4:	mov	w1, #0x64                  	// #100
  445ba8:	mov	w2, #0x1                   	// #1
  445bac:	mov	w3, #0x64                  	// #100
  445bb0:	bl	404190 <__snprintf_chk@plt>
  445bb4:	ldr	w23, [sp, #192]
  445bb8:	tbnz	w23, #31, 445c10 <argp_parse@@Base+0xb564>
  445bbc:	cmp	w0, #0x63
  445bc0:	b.hi	445c10 <argp_parse@@Base+0xb564>  // b.pmore
  445bc4:	cmp	w23, #0x6
  445bc8:	b.gt	445c10 <argp_parse@@Base+0xb564>
  445bcc:	sub	x8, x29, #0x78
  445bd0:	mov	w9, #0x64                  	// #100
  445bd4:	adrp	x10, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  445bd8:	adrp	x11, 469000 <_obstack_memory_used@@Base+0x1de3c>
  445bdc:	cmp	w0, #0x0
  445be0:	add	x10, x10, #0x273
  445be4:	add	x11, x11, #0xeca
  445be8:	add	x8, x8, w0, uxtw
  445bec:	sub	w9, w9, w0
  445bf0:	cinc	x4, x10, eq  // eq = none
  445bf4:	sxtw	x1, w9
  445bf8:	add	x5, x11, x23, lsl #2
  445bfc:	mov	w2, #0x1                   	// #1
  445c00:	mov	x3, #0xffffffffffffffff    	// #-1
  445c04:	mov	x0, x8
  445c08:	bl	404190 <__snprintf_chk@plt>
  445c0c:	ldr	w23, [sp, #192]
  445c10:	ldr	x24, [sp, #184]
  445c14:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445c18:	add	x2, x2, #0xbf8
  445c1c:	add	x0, sp, #0x2b0
  445c20:	sub	x3, x29, #0xb0
  445c24:	mov	w1, #0x64                  	// #100
  445c28:	mov	x4, xzr
  445c2c:	mov	w5, wzr
  445c30:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  445c34:	cmp	w0, #0x63
  445c38:	b.gt	445d80 <argp_parse@@Base+0xb6d4>
  445c3c:	ldr	x8, [sp, #384]
  445c40:	cbz	x8, 445d80 <argp_parse@@Base+0xb6d4>
  445c44:	ldrsw	x27, [sp, #200]
  445c48:	add	x8, sp, #0x2b0
  445c4c:	mov	x9, #0x6400000000          	// #429496729600
  445c50:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  445c54:	movk	x10, #0x91a2, lsl #16
  445c58:	add	x25, x8, w0, sxtw
  445c5c:	sub	x8, x9, x0, lsl #32
  445c60:	asr	x26, x8, #32
  445c64:	mul	x8, x27, x10
  445c68:	lsr	x8, x8, #32
  445c6c:	add	w8, w8, w27
  445c70:	asr	w9, w8, #11
  445c74:	add	w28, w9, w8, lsr #31
  445c78:	cmp	w28, #0x0
  445c7c:	mov	w11, #0x2b                  	// #43
  445c80:	cneg	w5, w28, mi  // mi = first
  445c84:	cmp	w27, #0x0
  445c88:	mov	w8, #0x2d                  	// #45
  445c8c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445c90:	csel	w4, w8, w11, lt  // lt = tstop
  445c94:	add	x3, x3, #0xa3e
  445c98:	add	x0, sp, #0x78
  445c9c:	mov	w1, #0x1                   	// #1
  445ca0:	mov	w2, #0x1b                  	// #27
  445ca4:	add	x20, sp, #0x78
  445ca8:	bl	403f20 <__sprintf_chk@plt>
  445cac:	mov	w8, #0xe10                 	// #3600
  445cb0:	msub	w9, w28, w8, w27
  445cb4:	cbz	w9, 445d60 <argp_parse@@Base+0xb6b4>
  445cb8:	cmp	w9, #0x0
  445cbc:	mov	w11, #0x8889                	// #34953
  445cc0:	cneg	w9, w9, mi  // mi = first
  445cc4:	movk	w11, #0x8888, lsl #16
  445cc8:	mov	w13, #0x81b5                	// #33205
  445ccc:	and	w14, w9, #0xffff
  445cd0:	movk	w13, #0x1b4e, lsl #16
  445cd4:	umull	x11, w14, w11
  445cd8:	mov	w12, #0x3c                  	// #60
  445cdc:	umull	x13, w14, w13
  445ce0:	lsr	x14, x11, #37
  445ce4:	msub	w9, w14, w12, w9
  445ce8:	mov	w12, #0xcccd                	// #52429
  445cec:	movk	w12, #0xcccc, lsl #16
  445cf0:	lsr	x13, x13, #38
  445cf4:	ubfx	x11, x11, #37, #8
  445cf8:	add	x8, x20, w0, sxtw
  445cfc:	add	w13, w13, #0x30
  445d00:	umull	x11, w11, w12
  445d04:	strb	w13, [x8, #1]
  445d08:	lsr	x13, x11, #35
  445d0c:	mov	w11, #0xa                   	// #10
  445d10:	msub	w13, w13, w11, w14
  445d14:	mov	w10, #0x3a                  	// #58
  445d18:	tst	w9, #0xffff
  445d1c:	orr	w13, w13, #0x30
  445d20:	strb	w10, [x8]
  445d24:	strb	w13, [x8, #2]
  445d28:	b.eq	445d58 <argp_parse@@Base+0xb6ac>  // b.none
  445d2c:	strb	w10, [x8, #3]
  445d30:	and	w10, w9, #0xff
  445d34:	umull	x10, w10, w12
  445d38:	lsr	x10, x10, #35
  445d3c:	msub	w9, w10, w11, w9
  445d40:	orr	w12, w10, #0x30
  445d44:	orr	w10, w9, #0x30
  445d48:	add	x9, x8, #0x6
  445d4c:	strb	w12, [x8, #4]
  445d50:	strb	w10, [x8, #5]
  445d54:	b	445d5c <argp_parse@@Base+0xb6b0>
  445d58:	add	x9, x8, #0x3
  445d5c:	strb	wzr, [x9]
  445d60:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445d64:	add	x4, x4, #0xc12
  445d68:	add	x5, sp, #0x78
  445d6c:	mov	w2, #0x1                   	// #1
  445d70:	mov	x3, #0xffffffffffffffff    	// #-1
  445d74:	mov	x0, x25
  445d78:	mov	x1, x26
  445d7c:	bl	404190 <__snprintf_chk@plt>
  445d80:	sub	x1, x29, #0x78
  445d84:	add	x4, sp, #0x2b0
  445d88:	mov	x0, x22
  445d8c:	mov	x2, x24
  445d90:	mov	w3, w23
  445d94:	bl	4444a4 <argp_parse@@Base+0x9df8>
  445d98:	mov	w22, wzr
  445d9c:	cmp	x21, x19
  445da0:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  445da4:	b	4448c8 <argp_parse@@Base+0xa21c>
  445da8:	add	w8, w9, w8
  445dac:	mov	w9, #0xffffffff            	// #-1
  445db0:	sub	x1, x29, #0xb0
  445db4:	mov	x0, x21
  445db8:	stur	w8, [x29, #-164]
  445dbc:	stur	w9, [x29, #-144]
  445dc0:	bl	45bfd0 <_obstack_memory_used@@Base+0x10e0c>
  445dc4:	ldrb	w8, [sp, #393]
  445dc8:	cmn	x0, #0x1
  445dcc:	b.eq	445e24 <argp_parse@@Base+0xb778>  // b.none
  445dd0:	mov	x24, x0
  445dd4:	cbz	w8, 44635c <argp_parse@@Base+0xbcb0>
  445dd8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445ddc:	add	x1, x1, #0x289
  445de0:	mov	w2, #0x5                   	// #5
  445de4:	mov	x0, xzr
  445de8:	bl	4048b0 <dcgettext@plt>
  445dec:	ldrb	w8, [sp, #400]
  445df0:	mov	x25, x0
  445df4:	cbz	w8, 445e2c <argp_parse@@Base+0xb780>
  445df8:	ldr	x5, [sp, #184]
  445dfc:	add	x8, x5, #0x1
  445e00:	cmp	x8, #0xd
  445e04:	b.hi	445e38 <argp_parse@@Base+0xb78c>  // b.pmore
  445e08:	adrp	x10, 469000 <_obstack_memory_used@@Base+0x1de3c>
  445e0c:	mov	w9, #0xb                   	// #11
  445e10:	add	x10, x10, #0xe30
  445e14:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  445e18:	madd	x5, x8, x9, x10
  445e1c:	add	x4, x4, #0x274
  445e20:	b	445e40 <argp_parse@@Base+0xb794>
  445e24:	cbnz	w8, 445b40 <argp_parse@@Base+0xb494>
  445e28:	b	4448b4 <argp_parse@@Base+0xa208>
  445e2c:	mov	w0, wzr
  445e30:	sturb	wzr, [x29, #-120]
  445e34:	b	445e54 <argp_parse@@Base+0xb7a8>
  445e38:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445e3c:	add	x4, x4, #0x796
  445e40:	sub	x0, x29, #0x78
  445e44:	mov	w1, #0x64                  	// #100
  445e48:	mov	w2, #0x1                   	// #1
  445e4c:	mov	w3, #0x64                  	// #100
  445e50:	bl	404190 <__snprintf_chk@plt>
  445e54:	ldr	w9, [sp, #192]
  445e58:	tbnz	w9, #31, 445eac <argp_parse@@Base+0xb800>
  445e5c:	cmp	w0, #0x63
  445e60:	b.hi	445eac <argp_parse@@Base+0xb800>  // b.pmore
  445e64:	cmp	w9, #0x6
  445e68:	b.gt	445eac <argp_parse@@Base+0xb800>
  445e6c:	sub	x8, x29, #0x78
  445e70:	mov	w10, #0x64                  	// #100
  445e74:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  445e78:	adrp	x12, 469000 <_obstack_memory_used@@Base+0x1de3c>
  445e7c:	cmp	w0, #0x0
  445e80:	add	x11, x11, #0x273
  445e84:	add	x12, x12, #0xeca
  445e88:	add	x8, x8, w0, uxtw
  445e8c:	sub	w10, w10, w0
  445e90:	cinc	x4, x11, eq  // eq = none
  445e94:	sxtw	x1, w10
  445e98:	add	x5, x12, x9, lsl #2
  445e9c:	mov	w2, #0x1                   	// #1
  445ea0:	mov	x3, #0xffffffffffffffff    	// #-1
  445ea4:	mov	x0, x8
  445ea8:	bl	404190 <__snprintf_chk@plt>
  445eac:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445eb0:	add	x2, x2, #0xbf8
  445eb4:	add	x0, sp, #0x2b0
  445eb8:	sub	x3, x29, #0xb0
  445ebc:	mov	w1, #0x64                  	// #100
  445ec0:	mov	x4, xzr
  445ec4:	mov	w5, wzr
  445ec8:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  445ecc:	cmp	w0, #0x63
  445ed0:	b.gt	446018 <argp_parse@@Base+0xb96c>
  445ed4:	ldr	x8, [sp, #384]
  445ed8:	cbz	x8, 446018 <argp_parse@@Base+0xb96c>
  445edc:	ldrsw	x22, [sp, #200]
  445ee0:	add	x8, sp, #0x2b0
  445ee4:	mov	x9, #0x6400000000          	// #429496729600
  445ee8:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  445eec:	movk	x10, #0x91a2, lsl #16
  445ef0:	add	x26, x8, w0, sxtw
  445ef4:	sub	x8, x9, x0, lsl #32
  445ef8:	asr	x27, x8, #32
  445efc:	mul	x8, x22, x10
  445f00:	lsr	x8, x8, #32
  445f04:	add	w8, w8, w22
  445f08:	asr	w9, w8, #11
  445f0c:	add	w23, w9, w8, lsr #31
  445f10:	cmp	w23, #0x0
  445f14:	mov	w11, #0x2b                  	// #43
  445f18:	cneg	w5, w23, mi  // mi = first
  445f1c:	cmp	w22, #0x0
  445f20:	mov	w8, #0x2d                  	// #45
  445f24:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445f28:	csel	w4, w8, w11, lt  // lt = tstop
  445f2c:	add	x3, x3, #0xa3e
  445f30:	add	x0, sp, #0x78
  445f34:	mov	w1, #0x1                   	// #1
  445f38:	mov	w2, #0x1b                  	// #27
  445f3c:	add	x20, sp, #0x78
  445f40:	bl	403f20 <__sprintf_chk@plt>
  445f44:	mov	w8, #0xe10                 	// #3600
  445f48:	msub	w9, w23, w8, w22
  445f4c:	cbz	w9, 445ff8 <argp_parse@@Base+0xb94c>
  445f50:	cmp	w9, #0x0
  445f54:	mov	w11, #0x8889                	// #34953
  445f58:	cneg	w9, w9, mi  // mi = first
  445f5c:	movk	w11, #0x8888, lsl #16
  445f60:	mov	w13, #0x81b5                	// #33205
  445f64:	and	w14, w9, #0xffff
  445f68:	movk	w13, #0x1b4e, lsl #16
  445f6c:	umull	x11, w14, w11
  445f70:	mov	w12, #0x3c                  	// #60
  445f74:	umull	x13, w14, w13
  445f78:	lsr	x14, x11, #37
  445f7c:	msub	w9, w14, w12, w9
  445f80:	mov	w12, #0xcccd                	// #52429
  445f84:	movk	w12, #0xcccc, lsl #16
  445f88:	lsr	x13, x13, #38
  445f8c:	ubfx	x11, x11, #37, #8
  445f90:	add	x8, x20, w0, sxtw
  445f94:	add	w13, w13, #0x30
  445f98:	umull	x11, w11, w12
  445f9c:	strb	w13, [x8, #1]
  445fa0:	lsr	x13, x11, #35
  445fa4:	mov	w11, #0xa                   	// #10
  445fa8:	msub	w13, w13, w11, w14
  445fac:	mov	w10, #0x3a                  	// #58
  445fb0:	tst	w9, #0xffff
  445fb4:	orr	w13, w13, #0x30
  445fb8:	strb	w10, [x8]
  445fbc:	strb	w13, [x8, #2]
  445fc0:	b.eq	445ff0 <argp_parse@@Base+0xb944>  // b.none
  445fc4:	strb	w10, [x8, #3]
  445fc8:	and	w10, w9, #0xff
  445fcc:	umull	x10, w10, w12
  445fd0:	lsr	x10, x10, #35
  445fd4:	msub	w9, w10, w11, w9
  445fd8:	orr	w12, w10, #0x30
  445fdc:	orr	w10, w9, #0x30
  445fe0:	add	x9, x8, #0x6
  445fe4:	strb	w12, [x8, #4]
  445fe8:	strb	w10, [x8, #5]
  445fec:	b	445ff4 <argp_parse@@Base+0xb948>
  445ff0:	add	x9, x8, #0x3
  445ff4:	strb	wzr, [x9]
  445ff8:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  445ffc:	add	x4, x4, #0xc12
  446000:	add	x5, sp, #0x78
  446004:	mov	w2, #0x1                   	// #1
  446008:	mov	x3, #0xffffffffffffffff    	// #-1
  44600c:	mov	x0, x26
  446010:	mov	x1, x27
  446014:	bl	404190 <__snprintf_chk@plt>
  446018:	sub	x1, x29, #0x78
  44601c:	add	x2, sp, #0x2b0
  446020:	mov	x0, x25
  446024:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446028:	ldrb	w8, [sp, #393]
  44602c:	cbz	w8, 44635c <argp_parse@@Base+0xbcb0>
  446030:	ldp	x8, x9, [sp, #344]
  446034:	orr	x10, x9, x8
  446038:	cbnz	x10, 4460ec <argp_parse@@Base+0xba40>
  44603c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446040:	add	x1, x1, #0x2a7
  446044:	mov	w2, #0x5                   	// #5
  446048:	mov	x0, xzr
  44604c:	bl	4048b0 <dcgettext@plt>
  446050:	ldursw	x8, [x29, #-156]
  446054:	mov	w10, #0x851f                	// #34079
  446058:	movk	w10, #0x51eb, lsl #16
  44605c:	adrp	x9, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446060:	mul	x10, x8, x10
  446064:	lsr	x12, x10, #63
  446068:	asr	x10, x10, #37
  44606c:	add	x9, x9, #0xc2e
  446070:	mov	w11, #0xffffffed            	// #-19
  446074:	add	w10, w10, w12
  446078:	mov	w12, #0x64                  	// #100
  44607c:	cmn	x8, #0x76d
  446080:	cinc	x3, x9, gt
  446084:	cmn	w8, #0x7cf
  446088:	msub	w8, w10, w12, w8
  44608c:	add	w9, w10, #0x13
  446090:	sub	w10, w11, w10
  446094:	csel	w4, w10, w9, lt  // lt = tstop
  446098:	cmp	w8, #0x0
  44609c:	mov	x25, x0
  4460a0:	cneg	w5, w8, mi  // mi = first
  4460a4:	add	x0, sp, #0x78
  4460a8:	mov	w1, #0x1                   	// #1
  4460ac:	mov	w2, #0xd                   	// #13
  4460b0:	bl	403f20 <__sprintf_chk@plt>
  4460b4:	ldp	w7, w8, [x29, #-164]
  4460b8:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4460bc:	add	x4, x4, #0xc19
  4460c0:	add	x0, sp, #0x2b0
  4460c4:	add	w6, w8, #0x1
  4460c8:	add	x5, sp, #0x78
  4460cc:	mov	w1, #0x64                  	// #100
  4460d0:	mov	w2, #0x1                   	// #1
  4460d4:	mov	w3, #0x64                  	// #100
  4460d8:	bl	404190 <__snprintf_chk@plt>
  4460dc:	add	x1, sp, #0x2b0
  4460e0:	mov	x0, x25
  4460e4:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4460e8:	ldp	x8, x9, [sp, #344]
  4460ec:	cbz	x9, 4461cc <argp_parse@@Base+0xbb20>
  4460f0:	cbz	x8, 4461cc <argp_parse@@Base+0xbb20>
  4460f4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4460f8:	add	x1, x1, #0x2d3
  4460fc:	mov	w2, #0x5                   	// #5
  446100:	mov	x0, xzr
  446104:	bl	4048b0 <dcgettext@plt>
  446108:	ldrb	w8, [sp, #400]
  44610c:	mov	x25, x0
  446110:	cbz	w8, 446140 <argp_parse@@Base+0xba94>
  446114:	ldr	x5, [sp, #184]
  446118:	add	x8, x5, #0x1
  44611c:	cmp	x8, #0xd
  446120:	b.hi	44614c <argp_parse@@Base+0xbaa0>  // b.pmore
  446124:	adrp	x10, 469000 <_obstack_memory_used@@Base+0x1de3c>
  446128:	mov	w9, #0xb                   	// #11
  44612c:	add	x10, x10, #0xe30
  446130:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  446134:	madd	x5, x8, x9, x10
  446138:	add	x4, x4, #0x274
  44613c:	b	446154 <argp_parse@@Base+0xbaa8>
  446140:	mov	w0, wzr
  446144:	sturb	wzr, [x29, #-120]
  446148:	b	446168 <argp_parse@@Base+0xbabc>
  44614c:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446150:	add	x4, x4, #0x796
  446154:	sub	x0, x29, #0x78
  446158:	mov	w1, #0x64                  	// #100
  44615c:	mov	w2, #0x1                   	// #1
  446160:	mov	w3, #0x64                  	// #100
  446164:	bl	404190 <__snprintf_chk@plt>
  446168:	ldr	w9, [sp, #192]
  44616c:	tbnz	w9, #31, 4461c0 <argp_parse@@Base+0xbb14>
  446170:	cmp	w0, #0x63
  446174:	b.hi	4461c0 <argp_parse@@Base+0xbb14>  // b.pmore
  446178:	cmp	w9, #0x6
  44617c:	b.gt	4461c0 <argp_parse@@Base+0xbb14>
  446180:	sub	x8, x29, #0x78
  446184:	mov	w10, #0x64                  	// #100
  446188:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  44618c:	adrp	x12, 469000 <_obstack_memory_used@@Base+0x1de3c>
  446190:	cmp	w0, #0x0
  446194:	add	x11, x11, #0x273
  446198:	add	x12, x12, #0xeca
  44619c:	add	x8, x8, w0, uxtw
  4461a0:	sub	w10, w10, w0
  4461a4:	cinc	x4, x11, eq  // eq = none
  4461a8:	sxtw	x1, w10
  4461ac:	add	x5, x12, x9, lsl #2
  4461b0:	mov	w2, #0x1                   	// #1
  4461b4:	mov	x3, #0xffffffffffffffff    	// #-1
  4461b8:	mov	x0, x8
  4461bc:	bl	404190 <__snprintf_chk@plt>
  4461c0:	sub	x1, x29, #0x78
  4461c4:	mov	x0, x25
  4461c8:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4461cc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4461d0:	add	x1, x1, #0x30c
  4461d4:	mov	w2, #0x5                   	// #5
  4461d8:	mov	x0, xzr
  4461dc:	bl	4048b0 <dcgettext@plt>
  4461e0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4461e4:	mov	x25, x0
  4461e8:	add	x2, x2, #0xbf8
  4461ec:	add	x0, sp, #0x2b0
  4461f0:	sub	x3, x29, #0xb0
  4461f4:	mov	w1, #0x64                  	// #100
  4461f8:	mov	x4, xzr
  4461fc:	mov	w5, wzr
  446200:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  446204:	cmp	w0, #0x63
  446208:	b.gt	446350 <argp_parse@@Base+0xbca4>
  44620c:	ldr	x8, [sp, #384]
  446210:	cbz	x8, 446350 <argp_parse@@Base+0xbca4>
  446214:	ldrsw	x22, [sp, #200]
  446218:	add	x8, sp, #0x2b0
  44621c:	mov	x9, #0x6400000000          	// #429496729600
  446220:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  446224:	movk	x10, #0x91a2, lsl #16
  446228:	add	x26, x8, w0, sxtw
  44622c:	sub	x8, x9, x0, lsl #32
  446230:	asr	x27, x8, #32
  446234:	mul	x8, x22, x10
  446238:	lsr	x8, x8, #32
  44623c:	add	w8, w8, w22
  446240:	asr	w9, w8, #11
  446244:	add	w23, w9, w8, lsr #31
  446248:	cmp	w23, #0x0
  44624c:	mov	w11, #0x2b                  	// #43
  446250:	cneg	w5, w23, mi  // mi = first
  446254:	cmp	w22, #0x0
  446258:	mov	w8, #0x2d                  	// #45
  44625c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446260:	csel	w4, w8, w11, lt  // lt = tstop
  446264:	add	x3, x3, #0xa3e
  446268:	add	x0, sp, #0x78
  44626c:	mov	w1, #0x1                   	// #1
  446270:	mov	w2, #0x1b                  	// #27
  446274:	add	x20, sp, #0x78
  446278:	bl	403f20 <__sprintf_chk@plt>
  44627c:	mov	w8, #0xe10                 	// #3600
  446280:	msub	w9, w23, w8, w22
  446284:	cbz	w9, 446330 <argp_parse@@Base+0xbc84>
  446288:	cmp	w9, #0x0
  44628c:	mov	w11, #0x8889                	// #34953
  446290:	cneg	w9, w9, mi  // mi = first
  446294:	movk	w11, #0x8888, lsl #16
  446298:	mov	w13, #0x81b5                	// #33205
  44629c:	and	w14, w9, #0xffff
  4462a0:	movk	w13, #0x1b4e, lsl #16
  4462a4:	umull	x11, w14, w11
  4462a8:	mov	w12, #0x3c                  	// #60
  4462ac:	umull	x13, w14, w13
  4462b0:	lsr	x14, x11, #37
  4462b4:	msub	w9, w14, w12, w9
  4462b8:	mov	w12, #0xcccd                	// #52429
  4462bc:	movk	w12, #0xcccc, lsl #16
  4462c0:	lsr	x13, x13, #38
  4462c4:	ubfx	x11, x11, #37, #8
  4462c8:	add	x8, x20, w0, sxtw
  4462cc:	add	w13, w13, #0x30
  4462d0:	umull	x11, w11, w12
  4462d4:	strb	w13, [x8, #1]
  4462d8:	lsr	x13, x11, #35
  4462dc:	mov	w11, #0xa                   	// #10
  4462e0:	msub	w13, w13, w11, w14
  4462e4:	mov	w10, #0x3a                  	// #58
  4462e8:	tst	w9, #0xffff
  4462ec:	orr	w13, w13, #0x30
  4462f0:	strb	w10, [x8]
  4462f4:	strb	w13, [x8, #2]
  4462f8:	b.eq	446328 <argp_parse@@Base+0xbc7c>  // b.none
  4462fc:	strb	w10, [x8, #3]
  446300:	and	w10, w9, #0xff
  446304:	umull	x10, w10, w12
  446308:	lsr	x10, x10, #35
  44630c:	msub	w9, w10, w11, w9
  446310:	orr	w12, w10, #0x30
  446314:	orr	w10, w9, #0x30
  446318:	add	x9, x8, #0x6
  44631c:	strb	w12, [x8, #4]
  446320:	strb	w10, [x8, #5]
  446324:	b	44632c <argp_parse@@Base+0xbc80>
  446328:	add	x9, x8, #0x3
  44632c:	strb	wzr, [x9]
  446330:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446334:	add	x4, x4, #0xc12
  446338:	add	x5, sp, #0x78
  44633c:	mov	w2, #0x1                   	// #1
  446340:	mov	x3, #0xffffffffffffffff    	// #-1
  446344:	mov	x0, x26
  446348:	mov	x1, x27
  44634c:	bl	404190 <__snprintf_chk@plt>
  446350:	add	x1, sp, #0x2b0
  446354:	mov	x0, x25
  446358:	bl	4444a4 <argp_parse@@Base+0x9df8>
  44635c:	ldp	x9, x10, [sp, #280]
  446360:	ldr	x8, [sp, #296]
  446364:	orr	x9, x10, x9
  446368:	orr	x10, x9, x8
  44636c:	cbz	x10, 4469cc <argp_parse@@Base+0xc320>
  446370:	ldrb	w10, [sp, #393]
  446374:	cbz	w10, 4463cc <argp_parse@@Base+0xbd20>
  446378:	cbz	x9, 4463a4 <argp_parse@@Base+0xbcf8>
  44637c:	ldur	w9, [x29, #-164]
  446380:	cmp	w9, #0xf
  446384:	b.eq	4463a4 <argp_parse@@Base+0xbcf8>  // b.none
  446388:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44638c:	add	x1, x1, #0x326
  446390:	mov	w2, #0x5                   	// #5
  446394:	mov	x0, xzr
  446398:	bl	4048b0 <dcgettext@plt>
  44639c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4463a0:	ldr	x8, [sp, #296]
  4463a4:	cbz	x8, 4463cc <argp_parse@@Base+0xbd20>
  4463a8:	ldur	w8, [x29, #-168]
  4463ac:	cmp	w8, #0xc
  4463b0:	b.eq	4463cc <argp_parse@@Base+0xbd20>  // b.none
  4463b4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4463b8:	add	x1, x1, #0x387
  4463bc:	mov	w2, #0x5                   	// #5
  4463c0:	mov	x0, xzr
  4463c4:	bl	4048b0 <dcgettext@plt>
  4463c8:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4463cc:	ldr	x8, [sp, #280]
  4463d0:	tbnz	x8, #63, 4463f0 <argp_parse@@Base+0xbd44>
  4463d4:	ldur	w9, [x29, #-156]
  4463d8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4463dc:	sub	x11, x10, x8
  4463e0:	sxtw	x10, w9
  4463e4:	cmp	x11, x10
  4463e8:	b.ge	446408 <argp_parse@@Base+0xbd5c>  // b.tcont
  4463ec:	b	4464bc <argp_parse@@Base+0xbe10>
  4463f0:	ldur	w9, [x29, #-156]
  4463f4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4463f8:	sub	x11, x11, x8
  4463fc:	sxtw	x10, w9
  446400:	cmp	x11, x10
  446404:	b.gt	4464bc <argp_parse@@Base+0xbe10>
  446408:	add	x10, x8, x10
  44640c:	mov	w11, #0x80000000            	// #-2147483648
  446410:	add	x10, x10, x11
  446414:	lsr	x10, x10, #32
  446418:	cbnz	x10, 4464bc <argp_parse@@Base+0xbe10>
  44641c:	ldr	x10, [sp, #288]
  446420:	tbnz	x10, #63, 446440 <argp_parse@@Base+0xbd94>
  446424:	ldur	w11, [x29, #-160]
  446428:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  44642c:	sub	x13, x12, x10
  446430:	sxtw	x12, w11
  446434:	cmp	x13, x12
  446438:	b.ge	446458 <argp_parse@@Base+0xbdac>  // b.tcont
  44643c:	b	4464bc <argp_parse@@Base+0xbe10>
  446440:	ldur	w11, [x29, #-160]
  446444:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  446448:	sub	x13, x13, x10
  44644c:	sxtw	x12, w11
  446450:	cmp	x13, x12
  446454:	b.gt	4464bc <argp_parse@@Base+0xbe10>
  446458:	add	x12, x10, x12
  44645c:	mov	w13, #0x80000000            	// #-2147483648
  446460:	add	x12, x12, x13
  446464:	lsr	x12, x12, #32
  446468:	cbnz	x12, 4464bc <argp_parse@@Base+0xbe10>
  44646c:	ldr	x12, [sp, #296]
  446470:	tbnz	x12, #63, 446490 <argp_parse@@Base+0xbde4>
  446474:	ldur	w13, [x29, #-164]
  446478:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  44647c:	sub	x15, x14, x12
  446480:	sxtw	x14, w13
  446484:	cmp	x15, x14
  446488:	b.ge	4464a8 <argp_parse@@Base+0xbdfc>  // b.tcont
  44648c:	b	4464bc <argp_parse@@Base+0xbe10>
  446490:	ldur	w13, [x29, #-164]
  446494:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
  446498:	sub	x15, x15, x12
  44649c:	sxtw	x14, w13
  4464a0:	cmp	x15, x14
  4464a4:	b.gt	4464bc <argp_parse@@Base+0xbe10>
  4464a8:	add	x14, x12, x14
  4464ac:	mov	w15, #0x80000000            	// #-2147483648
  4464b0:	add	x14, x14, x15
  4464b4:	lsr	x14, x14, #32
  4464b8:	cbz	x14, 4464f8 <argp_parse@@Base+0xbe4c>
  4464bc:	ldrb	w8, [sp, #393]
  4464c0:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  4464c4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4464c8:	add	x1, x1, #0x3ce
  4464cc:	mov	w2, #0x5                   	// #5
  4464d0:	mov	x0, xzr
  4464d4:	bl	4048b0 <dcgettext@plt>
  4464d8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4464dc:	add	x1, x1, #0x3dc
  4464e0:	mov	w2, #0x877                 	// #2167
  4464e4:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4464e8:	mov	w22, wzr
  4464ec:	cmp	x21, x19
  4464f0:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  4464f4:	b	4448c8 <argp_parse@@Base+0xa21c>
  4464f8:	add	w27, w9, w8
  4464fc:	add	w22, w11, w10
  446500:	ldur	x8, [x29, #-240]
  446504:	ldur	w9, [x29, #-232]
  446508:	ldur	w10, [x29, #-208]
  44650c:	add	w25, w13, w12
  446510:	sub	x1, x29, #0xb0
  446514:	mov	x0, x21
  446518:	stp	w25, w22, [x29, #-164]
  44651c:	stur	w9, [x29, #-168]
  446520:	stur	x8, [x29, #-176]
  446524:	stur	w27, [x29, #-156]
  446528:	stur	w10, [x29, #-144]
  44652c:	bl	45bfd0 <_obstack_memory_used@@Base+0x10e0c>
  446530:	ldrb	w8, [sp, #393]
  446534:	cmn	x0, #0x1
  446538:	b.eq	4466c8 <argp_parse@@Base+0xc01c>  // b.none
  44653c:	mov	x24, x0
  446540:	cbz	w8, 4469cc <argp_parse@@Base+0xc320>
  446544:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446548:	add	x1, x1, #0x42c
  44654c:	mov	w2, #0x5                   	// #5
  446550:	mov	x0, xzr
  446554:	bl	4048b0 <dcgettext@plt>
  446558:	ldp	x1, x2, [sp, #280]
  44655c:	ldr	x3, [sp, #296]
  446560:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446564:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446568:	add	x1, x1, #0x469
  44656c:	mov	w2, #0x5                   	// #5
  446570:	mov	x0, xzr
  446574:	bl	4048b0 <dcgettext@plt>
  446578:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44657c:	mov	x26, x0
  446580:	add	x2, x2, #0xbf8
  446584:	add	x0, sp, #0x2b0
  446588:	sub	x3, x29, #0xb0
  44658c:	mov	w1, #0x64                  	// #100
  446590:	mov	x4, xzr
  446594:	mov	w5, wzr
  446598:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  44659c:	cmp	w0, #0x63
  4465a0:	b.gt	44684c <argp_parse@@Base+0xc1a0>
  4465a4:	ldr	x8, [sp, #384]
  4465a8:	cbz	x8, 44684c <argp_parse@@Base+0xc1a0>
  4465ac:	ldrsw	x23, [sp, #200]
  4465b0:	add	x8, sp, #0x2b0
  4465b4:	mov	x9, #0x6400000000          	// #429496729600
  4465b8:	add	x8, x8, w0, sxtw
  4465bc:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  4465c0:	str	x8, [sp, #88]
  4465c4:	sub	x8, x9, x0, lsl #32
  4465c8:	movk	x10, #0x91a2, lsl #16
  4465cc:	asr	x8, x8, #32
  4465d0:	str	x8, [sp, #80]
  4465d4:	mul	x8, x23, x10
  4465d8:	lsr	x8, x8, #32
  4465dc:	add	w8, w8, w23
  4465e0:	asr	w9, w8, #11
  4465e4:	add	w28, w9, w8, lsr #31
  4465e8:	cmp	w28, #0x0
  4465ec:	mov	w11, #0x2b                  	// #43
  4465f0:	cneg	w5, w28, mi  // mi = first
  4465f4:	cmp	w23, #0x0
  4465f8:	mov	w8, #0x2d                  	// #45
  4465fc:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446600:	csel	w4, w8, w11, lt  // lt = tstop
  446604:	add	x3, x3, #0xa3e
  446608:	add	x0, sp, #0x78
  44660c:	mov	w1, #0x1                   	// #1
  446610:	mov	w2, #0x1b                  	// #27
  446614:	add	x20, sp, #0x78
  446618:	bl	403f20 <__sprintf_chk@plt>
  44661c:	mov	w8, #0xe10                 	// #3600
  446620:	msub	w9, w28, w8, w23
  446624:	cbz	w9, 446830 <argp_parse@@Base+0xc184>
  446628:	cmp	w9, #0x0
  44662c:	mov	w11, #0x8889                	// #34953
  446630:	cneg	w9, w9, mi  // mi = first
  446634:	movk	w11, #0x8888, lsl #16
  446638:	mov	w13, #0x81b5                	// #33205
  44663c:	and	w14, w9, #0xffff
  446640:	movk	w13, #0x1b4e, lsl #16
  446644:	umull	x11, w14, w11
  446648:	mov	w12, #0x3c                  	// #60
  44664c:	umull	x13, w14, w13
  446650:	lsr	x14, x11, #37
  446654:	msub	w9, w14, w12, w9
  446658:	mov	w12, #0xcccd                	// #52429
  44665c:	movk	w12, #0xcccc, lsl #16
  446660:	lsr	x13, x13, #38
  446664:	ubfx	x11, x11, #37, #8
  446668:	add	x8, x20, w0, sxtw
  44666c:	add	w13, w13, #0x30
  446670:	umull	x11, w11, w12
  446674:	strb	w13, [x8, #1]
  446678:	lsr	x13, x11, #35
  44667c:	mov	w11, #0xa                   	// #10
  446680:	msub	w13, w13, w11, w14
  446684:	mov	w10, #0x3a                  	// #58
  446688:	tst	w9, #0xffff
  44668c:	orr	w13, w13, #0x30
  446690:	strb	w10, [x8]
  446694:	strb	w13, [x8, #2]
  446698:	b.eq	446828 <argp_parse@@Base+0xc17c>  // b.none
  44669c:	strb	w10, [x8, #3]
  4466a0:	and	w10, w9, #0xff
  4466a4:	umull	x10, w10, w12
  4466a8:	lsr	x10, x10, #35
  4466ac:	msub	w9, w10, w11, w9
  4466b0:	orr	w12, w10, #0x30
  4466b4:	orr	w10, w9, #0x30
  4466b8:	add	x9, x8, #0x6
  4466bc:	strb	w12, [x8, #4]
  4466c0:	strb	w10, [x8, #5]
  4466c4:	b	44682c <argp_parse@@Base+0xc180>
  4466c8:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  4466cc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4466d0:	add	x1, x1, #0x3ed
  4466d4:	mov	w2, #0x5                   	// #5
  4466d8:	mov	x0, xzr
  4466dc:	bl	4048b0 <dcgettext@plt>
  4466e0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4466e4:	mov	x22, x0
  4466e8:	add	x2, x2, #0xbf8
  4466ec:	add	x0, sp, #0x2b0
  4466f0:	sub	x3, x29, #0xb0
  4466f4:	mov	w1, #0x64                  	// #100
  4466f8:	mov	x4, xzr
  4466fc:	mov	w5, wzr
  446700:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  446704:	cmp	w0, #0x63
  446708:	b.gt	446e90 <argp_parse@@Base+0xc7e4>
  44670c:	ldr	x8, [sp, #384]
  446710:	cbz	x8, 446e90 <argp_parse@@Base+0xc7e4>
  446714:	ldrsw	x25, [sp, #200]
  446718:	add	x8, sp, #0x2b0
  44671c:	mov	x9, #0x6400000000          	// #429496729600
  446720:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  446724:	movk	x10, #0x91a2, lsl #16
  446728:	add	x23, x8, w0, sxtw
  44672c:	sub	x8, x9, x0, lsl #32
  446730:	asr	x24, x8, #32
  446734:	mul	x8, x25, x10
  446738:	lsr	x8, x8, #32
  44673c:	add	w8, w8, w25
  446740:	asr	w9, w8, #11
  446744:	add	w26, w9, w8, lsr #31
  446748:	cmp	w26, #0x0
  44674c:	mov	w11, #0x2b                  	// #43
  446750:	cneg	w5, w26, mi  // mi = first
  446754:	cmp	w25, #0x0
  446758:	mov	w8, #0x2d                  	// #45
  44675c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446760:	csel	w4, w8, w11, lt  // lt = tstop
  446764:	add	x3, x3, #0xa3e
  446768:	add	x0, sp, #0x78
  44676c:	mov	w1, #0x1                   	// #1
  446770:	mov	w2, #0x1b                  	// #27
  446774:	add	x20, sp, #0x78
  446778:	bl	403f20 <__sprintf_chk@plt>
  44677c:	mov	w8, #0xe10                 	// #3600
  446780:	msub	w9, w26, w8, w25
  446784:	cbz	w9, 446e70 <argp_parse@@Base+0xc7c4>
  446788:	cmp	w9, #0x0
  44678c:	mov	w11, #0x8889                	// #34953
  446790:	cneg	w9, w9, mi  // mi = first
  446794:	movk	w11, #0x8888, lsl #16
  446798:	mov	w13, #0x81b5                	// #33205
  44679c:	and	w14, w9, #0xffff
  4467a0:	movk	w13, #0x1b4e, lsl #16
  4467a4:	umull	x11, w14, w11
  4467a8:	mov	w12, #0x3c                  	// #60
  4467ac:	umull	x13, w14, w13
  4467b0:	lsr	x14, x11, #37
  4467b4:	msub	w9, w14, w12, w9
  4467b8:	mov	w12, #0xcccd                	// #52429
  4467bc:	movk	w12, #0xcccc, lsl #16
  4467c0:	lsr	x13, x13, #38
  4467c4:	ubfx	x11, x11, #37, #8
  4467c8:	add	x8, x20, w0, sxtw
  4467cc:	add	w13, w13, #0x30
  4467d0:	umull	x11, w11, w12
  4467d4:	strb	w13, [x8, #1]
  4467d8:	lsr	x13, x11, #35
  4467dc:	mov	w11, #0xa                   	// #10
  4467e0:	msub	w13, w13, w11, w14
  4467e4:	mov	w10, #0x3a                  	// #58
  4467e8:	tst	w9, #0xffff
  4467ec:	orr	w13, w13, #0x30
  4467f0:	strb	w10, [x8]
  4467f4:	strb	w13, [x8, #2]
  4467f8:	b.eq	446e68 <argp_parse@@Base+0xc7bc>  // b.none
  4467fc:	strb	w10, [x8, #3]
  446800:	and	w10, w9, #0xff
  446804:	umull	x10, w10, w12
  446808:	lsr	x10, x10, #35
  44680c:	msub	w9, w10, w11, w9
  446810:	orr	w12, w10, #0x30
  446814:	orr	w10, w9, #0x30
  446818:	add	x9, x8, #0x6
  44681c:	strb	w12, [x8, #4]
  446820:	strb	w10, [x8, #5]
  446824:	b	446e6c <argp_parse@@Base+0xc7c0>
  446828:	add	x9, x8, #0x3
  44682c:	strb	wzr, [x9]
  446830:	ldp	x1, x0, [sp, #80]
  446834:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446838:	add	x4, x4, #0xc12
  44683c:	add	x5, sp, #0x78
  446840:	mov	w2, #0x1                   	// #1
  446844:	mov	x3, #0xffffffffffffffff    	// #-1
  446848:	bl	404190 <__snprintf_chk@plt>
  44684c:	add	x1, sp, #0x2b0
  446850:	mov	x0, x26
  446854:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446858:	ldur	w8, [x29, #-208]
  44685c:	cmn	w8, #0x1
  446860:	b.eq	446888 <argp_parse@@Base+0xc1dc>  // b.none
  446864:	ldur	w9, [x29, #-144]
  446868:	cmp	w9, w8
  44686c:	b.eq	446888 <argp_parse@@Base+0xc1dc>  // b.none
  446870:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446874:	add	x1, x1, #0x483
  446878:	mov	w2, #0x5                   	// #5
  44687c:	mov	x0, xzr
  446880:	bl	4048b0 <dcgettext@plt>
  446884:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446888:	ldr	x8, [sp, #296]
  44688c:	cbnz	x8, 4469cc <argp_parse@@Base+0xc320>
  446890:	ldur	w8, [x29, #-164]
  446894:	cmp	w8, w25
  446898:	b.ne	4468b0 <argp_parse@@Base+0xc204>  // b.any
  44689c:	ldr	x8, [sp, #288]
  4468a0:	cbnz	x8, 4469cc <argp_parse@@Base+0xc320>
  4468a4:	ldur	w8, [x29, #-160]
  4468a8:	cmp	w8, w22
  4468ac:	b.eq	4469cc <argp_parse@@Base+0xc320>  // b.none
  4468b0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4468b4:	add	x1, x1, #0x4c0
  4468b8:	mov	w2, #0x5                   	// #5
  4468bc:	mov	x0, xzr
  4468c0:	bl	4048b0 <dcgettext@plt>
  4468c4:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4468c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4468cc:	add	x1, x1, #0x4fb
  4468d0:	mov	w2, #0x5                   	// #5
  4468d4:	mov	x0, xzr
  4468d8:	bl	4048b0 <dcgettext@plt>
  4468dc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4468e0:	mov	w23, #0x851f                	// #34079
  4468e4:	cmn	w27, #0x76d
  4468e8:	add	x8, x8, #0xc2e
  4468ec:	movk	w23, #0x51eb, lsl #16
  4468f0:	cinc	x3, x8, gt
  4468f4:	smull	x8, w27, w23
  4468f8:	lsr	x9, x8, #63
  4468fc:	asr	x8, x8, #37
  446900:	mov	w28, #0xffffffed            	// #-19
  446904:	mov	w20, #0x64                  	// #100
  446908:	add	w8, w8, w9
  44690c:	cmn	w27, #0x7cf
  446910:	add	w9, w8, #0x13
  446914:	msub	w10, w8, w20, w27
  446918:	sub	w8, w28, w8
  44691c:	csel	w4, w8, w9, lt  // lt = tstop
  446920:	cmp	w10, #0x0
  446924:	mov	x26, x0
  446928:	cneg	w5, w10, mi  // mi = first
  44692c:	add	x0, sp, #0x78
  446930:	mov	w1, #0x1                   	// #1
  446934:	mov	w2, #0xd                   	// #13
  446938:	bl	403f20 <__sprintf_chk@plt>
  44693c:	add	w2, w22, #0x1
  446940:	add	x1, sp, #0x78
  446944:	mov	x0, x26
  446948:	mov	w3, w25
  44694c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446950:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446954:	add	x1, x1, #0x51e
  446958:	mov	w2, #0x5                   	// #5
  44695c:	mov	x0, xzr
  446960:	bl	4048b0 <dcgettext@plt>
  446964:	ldursw	x8, [x29, #-156]
  446968:	adrp	x10, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44696c:	add	x10, x10, #0xc2e
  446970:	mov	x25, x0
  446974:	cmn	x8, #0x76d
  446978:	mul	x9, x8, x23
  44697c:	cinc	x3, x10, gt
  446980:	lsr	x10, x9, #63
  446984:	asr	x9, x9, #37
  446988:	add	w9, w9, w10
  44698c:	cmn	w8, #0x7cf
  446990:	add	w10, w9, #0x13
  446994:	sub	w11, w28, w9
  446998:	msub	w8, w9, w20, w8
  44699c:	csel	w4, w11, w10, lt  // lt = tstop
  4469a0:	cmp	w8, #0x0
  4469a4:	cneg	w5, w8, mi  // mi = first
  4469a8:	add	x0, sp, #0x78
  4469ac:	mov	w1, #0x1                   	// #1
  4469b0:	mov	w2, #0xd                   	// #13
  4469b4:	bl	403f20 <__sprintf_chk@plt>
  4469b8:	ldp	w3, w8, [x29, #-164]
  4469bc:	add	x1, sp, #0x78
  4469c0:	mov	x0, x25
  4469c4:	add	w2, w8, #0x1
  4469c8:	bl	4444a4 <argp_parse@@Base+0x9df8>
  4469cc:	ldr	x8, [sp, #384]
  4469d0:	cbz	x8, 446a78 <argp_parse@@Base+0xc3cc>
  4469d4:	ldur	x9, [x29, #-136]
  4469d8:	ldrsw	x10, [sp, #200]
  4469dc:	tbnz	x9, #63, 4469f4 <argp_parse@@Base+0xc348>
  4469e0:	orr	x8, x9, #0x8000000000000000
  4469e4:	cmp	x8, x10
  4469e8:	b.le	446a04 <argp_parse@@Base+0xc358>
  4469ec:	mov	w8, #0x1                   	// #1
  4469f0:	b	446a08 <argp_parse@@Base+0xc35c>
  4469f4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4469f8:	add	x8, x9, x8
  4469fc:	cmp	x8, x10
  446a00:	b.lt	4469ec <argp_parse@@Base+0xc340>  // b.tstop
  446a04:	mov	w8, wzr
  446a08:	subs	x9, x10, x9
  446a0c:	b.mi	446a24 <argp_parse@@Base+0xc378>  // b.first
  446a10:	orr	x10, x9, #0x8000000000000000
  446a14:	cmp	x24, x10
  446a18:	b.ge	446a34 <argp_parse@@Base+0xc388>  // b.tcont
  446a1c:	mov	w10, #0x1                   	// #1
  446a20:	b	446a38 <argp_parse@@Base+0xc38c>
  446a24:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  446a28:	add	x10, x9, x10
  446a2c:	cmp	x10, x24
  446a30:	b.lt	446a1c <argp_parse@@Base+0xc370>  // b.tstop
  446a34:	mov	w10, wzr
  446a38:	orr	w8, w10, w8
  446a3c:	cbz	w8, 446a74 <argp_parse@@Base+0xc3c8>
  446a40:	ldrb	w8, [sp, #393]
  446a44:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  446a48:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446a4c:	add	x1, x1, #0x541
  446a50:	mov	w2, #0x5                   	// #5
  446a54:	mov	x0, xzr
  446a58:	bl	4048b0 <dcgettext@plt>
  446a5c:	ldr	w1, [sp, #200]
  446a60:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446a64:	mov	w22, wzr
  446a68:	cmp	x21, x19
  446a6c:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  446a70:	b	4448c8 <argp_parse@@Base+0xa21c>
  446a74:	sub	x24, x24, x9
  446a78:	ldrb	w8, [sp, #393]
  446a7c:	cbz	w8, 446c14 <argp_parse@@Base+0xc568>
  446a80:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446a84:	add	x1, x1, #0x56c
  446a88:	mov	w2, #0x5                   	// #5
  446a8c:	mov	x0, xzr
  446a90:	bl	4048b0 <dcgettext@plt>
  446a94:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446a98:	mov	x25, x0
  446a9c:	add	x2, x2, #0xbf8
  446aa0:	add	x0, sp, #0x2b0
  446aa4:	sub	x3, x29, #0xb0
  446aa8:	mov	w1, #0x64                  	// #100
  446aac:	mov	x4, xzr
  446ab0:	mov	w5, wzr
  446ab4:	bl	45cd34 <_obstack_memory_used@@Base+0x11b70>
  446ab8:	cmp	w0, #0x63
  446abc:	b.gt	446c04 <argp_parse@@Base+0xc558>
  446ac0:	ldr	x8, [sp, #384]
  446ac4:	cbz	x8, 446c04 <argp_parse@@Base+0xc558>
  446ac8:	ldrsw	x22, [sp, #200]
  446acc:	add	x8, sp, #0x2b0
  446ad0:	mov	x9, #0x6400000000          	// #429496729600
  446ad4:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  446ad8:	movk	x10, #0x91a2, lsl #16
  446adc:	add	x26, x8, w0, sxtw
  446ae0:	sub	x8, x9, x0, lsl #32
  446ae4:	asr	x27, x8, #32
  446ae8:	mul	x8, x22, x10
  446aec:	lsr	x8, x8, #32
  446af0:	add	w8, w8, w22
  446af4:	asr	w9, w8, #11
  446af8:	add	w23, w9, w8, lsr #31
  446afc:	cmp	w23, #0x0
  446b00:	mov	w11, #0x2b                  	// #43
  446b04:	cneg	w5, w23, mi  // mi = first
  446b08:	cmp	w22, #0x0
  446b0c:	mov	w8, #0x2d                  	// #45
  446b10:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446b14:	csel	w4, w8, w11, lt  // lt = tstop
  446b18:	add	x3, x3, #0xa3e
  446b1c:	add	x0, sp, #0x78
  446b20:	mov	w1, #0x1                   	// #1
  446b24:	mov	w2, #0x1b                  	// #27
  446b28:	add	x20, sp, #0x78
  446b2c:	bl	403f20 <__sprintf_chk@plt>
  446b30:	mov	w8, #0xe10                 	// #3600
  446b34:	msub	w9, w23, w8, w22
  446b38:	cbz	w9, 446be4 <argp_parse@@Base+0xc538>
  446b3c:	cmp	w9, #0x0
  446b40:	mov	w11, #0x8889                	// #34953
  446b44:	cneg	w9, w9, mi  // mi = first
  446b48:	movk	w11, #0x8888, lsl #16
  446b4c:	mov	w13, #0x81b5                	// #33205
  446b50:	and	w14, w9, #0xffff
  446b54:	movk	w13, #0x1b4e, lsl #16
  446b58:	umull	x11, w14, w11
  446b5c:	mov	w12, #0x3c                  	// #60
  446b60:	umull	x13, w14, w13
  446b64:	lsr	x14, x11, #37
  446b68:	msub	w9, w14, w12, w9
  446b6c:	mov	w12, #0xcccd                	// #52429
  446b70:	movk	w12, #0xcccc, lsl #16
  446b74:	lsr	x13, x13, #38
  446b78:	ubfx	x11, x11, #37, #8
  446b7c:	add	x8, x20, w0, sxtw
  446b80:	add	w13, w13, #0x30
  446b84:	umull	x11, w11, w12
  446b88:	strb	w13, [x8, #1]
  446b8c:	lsr	x13, x11, #35
  446b90:	mov	w11, #0xa                   	// #10
  446b94:	msub	w13, w13, w11, w14
  446b98:	mov	w10, #0x3a                  	// #58
  446b9c:	tst	w9, #0xffff
  446ba0:	orr	w13, w13, #0x30
  446ba4:	strb	w10, [x8]
  446ba8:	strb	w13, [x8, #2]
  446bac:	b.eq	446bdc <argp_parse@@Base+0xc530>  // b.none
  446bb0:	strb	w10, [x8, #3]
  446bb4:	and	w10, w9, #0xff
  446bb8:	umull	x10, w10, w12
  446bbc:	lsr	x10, x10, #35
  446bc0:	msub	w9, w10, w11, w9
  446bc4:	orr	w12, w10, #0x30
  446bc8:	orr	w10, w9, #0x30
  446bcc:	add	x9, x8, #0x6
  446bd0:	strb	w12, [x8, #4]
  446bd4:	strb	w10, [x8, #5]
  446bd8:	b	446be0 <argp_parse@@Base+0xc534>
  446bdc:	add	x9, x8, #0x3
  446be0:	strb	wzr, [x9]
  446be4:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446be8:	add	x4, x4, #0xc12
  446bec:	add	x5, sp, #0x78
  446bf0:	mov	w2, #0x1                   	// #1
  446bf4:	mov	x3, #0xffffffffffffffff    	// #-1
  446bf8:	mov	x0, x26
  446bfc:	mov	x1, x27
  446c00:	bl	404190 <__snprintf_chk@plt>
  446c04:	add	x1, sp, #0x2b0
  446c08:	mov	x0, x25
  446c0c:	mov	x2, x24
  446c10:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446c14:	ldr	x11, [sp, #272]
  446c18:	ldr	x8, [sp, #304]
  446c1c:	ldrsw	x9, [sp, #328]
  446c20:	tbnz	x8, #63, 446c58 <argp_parse@@Base+0xc5ac>
  446c24:	mov	x10, #0x5e6f                	// #24175
  446c28:	movk	x10, #0x3c4d, lsl #16
  446c2c:	movk	x10, #0x1a2b, lsl #32
  446c30:	movk	x10, #0x9, lsl #48
  446c34:	cmp	x8, x10
  446c38:	b.gt	446d88 <argp_parse@@Base+0xc6dc>
  446c3c:	mov	w10, #0xe10                 	// #3600
  446c40:	mul	x12, x8, x10
  446c44:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  446c48:	sub	x10, x10, x12
  446c4c:	cmp	x10, x24
  446c50:	b.ge	446c88 <argp_parse@@Base+0xc5dc>  // b.tcont
  446c54:	b	446d88 <argp_parse@@Base+0xc6dc>
  446c58:	mov	x10, #0xa191                	// #41361
  446c5c:	movk	x10, #0xc3b2, lsl #16
  446c60:	movk	x10, #0xe5d4, lsl #32
  446c64:	movk	x10, #0xfff6, lsl #48
  446c68:	cmp	x8, x10
  446c6c:	b.lt	446d88 <argp_parse@@Base+0xc6dc>  // b.tstop
  446c70:	mov	w10, #0xe10                 	// #3600
  446c74:	mul	x12, x8, x10
  446c78:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  446c7c:	sub	x10, x10, x12
  446c80:	cmp	x24, x10
  446c84:	b.lt	446d88 <argp_parse@@Base+0xc6dc>  // b.tstop
  446c88:	ldr	x10, [sp, #312]
  446c8c:	add	x13, x12, x24
  446c90:	tbnz	x10, #63, 446cc0 <argp_parse@@Base+0xc614>
  446c94:	mov	x12, #0x2222222222222222    	// #2459565876494606882
  446c98:	movk	x12, #0x222, lsl #48
  446c9c:	cmp	x10, x12
  446ca0:	b.gt	446d88 <argp_parse@@Base+0xc6dc>
  446ca4:	mov	w12, #0x3c                  	// #60
  446ca8:	mul	x14, x10, x12
  446cac:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  446cb0:	sub	x12, x12, x14
  446cb4:	cmp	x12, x13
  446cb8:	b.ge	446cec <argp_parse@@Base+0xc640>  // b.tcont
  446cbc:	b	446d88 <argp_parse@@Base+0xc6dc>
  446cc0:	mov	x12, #0xdddddddddddddddd    	// #-2459565876494606883
  446cc4:	movk	x12, #0xddde
  446cc8:	movk	x12, #0xfddd, lsl #48
  446ccc:	cmp	x10, x12
  446cd0:	b.lt	446d88 <argp_parse@@Base+0xc6dc>  // b.tstop
  446cd4:	mov	w12, #0x3c                  	// #60
  446cd8:	mul	x14, x10, x12
  446cdc:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  446ce0:	sub	x12, x12, x14
  446ce4:	cmp	x13, x12
  446ce8:	b.lt	446d88 <argp_parse@@Base+0xc6dc>  // b.tstop
  446cec:	ldr	x12, [sp, #320]
  446cf0:	add	x13, x14, x13
  446cf4:	tbnz	x12, #63, 446d0c <argp_parse@@Base+0xc660>
  446cf8:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  446cfc:	sub	x14, x14, x12
  446d00:	cmp	x14, x13
  446d04:	b.ge	446d1c <argp_parse@@Base+0xc670>  // b.tcont
  446d08:	b	446d88 <argp_parse@@Base+0xc6dc>
  446d0c:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
  446d10:	sub	x14, x14, x12
  446d14:	cmp	x13, x14
  446d18:	b.lt	446d88 <argp_parse@@Base+0xc6dc>  // b.tstop
  446d1c:	mov	x15, #0x94b3                	// #38067
  446d20:	movk	x15, #0x26d6, lsl #16
  446d24:	movk	x15, #0xbe8, lsl #32
  446d28:	add	x14, x11, x9
  446d2c:	movk	x15, #0x112e, lsl #48
  446d30:	smulh	x16, x14, x15
  446d34:	mov	w11, #0xca00                	// #51712
  446d38:	asr	x17, x16, #26
  446d3c:	movk	w11, #0x3b9a, lsl #16
  446d40:	add	x16, x17, x16, lsr #63
  446d44:	msub	x16, x16, x11, x14
  446d48:	add	x16, x16, x11
  446d4c:	smulh	x17, x16, x15
  446d50:	asr	x18, x17, #26
  446d54:	add	x17, x18, x17, lsr #63
  446d58:	msub	x11, x17, x11, x16
  446d5c:	sub	x14, x14, x11
  446d60:	smulh	x14, x14, x15
  446d64:	asr	x15, x14, #26
  446d68:	add	x15, x15, x14, lsr #63
  446d6c:	add	x13, x12, x13
  446d70:	sxtw	x14, w15
  446d74:	tbnz	w15, #31, 446d9c <argp_parse@@Base+0xc6f0>
  446d78:	mov	x15, #0x7fffffffffffffff    	// #9223372036854775807
  446d7c:	sub	x15, x15, x14
  446d80:	cmp	x15, x13
  446d84:	b.ge	446dac <argp_parse@@Base+0xc700>  // b.tcont
  446d88:	ldrb	w8, [sp, #393]
  446d8c:	cbz	w8, 4448b4 <argp_parse@@Base+0xa208>
  446d90:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446d94:	add	x1, x1, #0x586
  446d98:	b	44507c <argp_parse@@Base+0xa9d0>
  446d9c:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
  446da0:	sub	x15, x15, x14
  446da4:	cmp	x13, x15
  446da8:	b.lt	446d88 <argp_parse@@Base+0xc6dc>  // b.tstop
  446dac:	add	x24, x13, x14
  446db0:	ldr	x13, [sp, #96]
  446db4:	stp	x24, x11, [x13]
  446db8:	ldrb	w11, [sp, #393]
  446dbc:	cbz	w11, 446e58 <argp_parse@@Base+0xc7ac>
  446dc0:	orr	x8, x8, x9
  446dc4:	orr	x8, x8, x10
  446dc8:	orr	x8, x8, x12
  446dcc:	cbz	x8, 446e58 <argp_parse@@Base+0xc7ac>
  446dd0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446dd4:	add	x1, x1, #0x5b6
  446dd8:	mov	w2, #0x5                   	// #5
  446ddc:	mov	x0, xzr
  446de0:	bl	4048b0 <dcgettext@plt>
  446de4:	ldp	x1, x2, [sp, #304]
  446de8:	ldr	x3, [sp, #320]
  446dec:	ldr	w4, [sp, #328]
  446df0:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446df4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446df8:	add	x1, x1, #0x5ff
  446dfc:	mov	w2, #0x5                   	// #5
  446e00:	mov	x0, xzr
  446e04:	bl	4048b0 <dcgettext@plt>
  446e08:	mov	x1, x24
  446e0c:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446e10:	ldur	w8, [x29, #-144]
  446e14:	cmn	w8, #0x1
  446e18:	b.eq	446e58 <argp_parse@@Base+0xc7ac>  // b.none
  446e1c:	ldr	x1, [sp, #96]
  446e20:	add	x2, sp, #0x78
  446e24:	mov	x0, x21
  446e28:	bl	45bc18 <_obstack_memory_used@@Base+0x10a54>
  446e2c:	cbz	x0, 446e58 <argp_parse@@Base+0xc7ac>
  446e30:	ldur	w8, [x29, #-144]
  446e34:	ldr	w9, [sp, #152]
  446e38:	cmp	w8, w9
  446e3c:	b.eq	446e58 <argp_parse@@Base+0xc7ac>  // b.none
  446e40:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446e44:	add	x1, x1, #0x621
  446e48:	mov	w2, #0x5                   	// #5
  446e4c:	mov	x0, xzr
  446e50:	bl	4048b0 <dcgettext@plt>
  446e54:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446e58:	ldp	x20, x22, [sp, #96]
  446e5c:	ldrb	w8, [sp, #393]
  446e60:	cbnz	w8, 444998 <argp_parse@@Base+0xa2ec>
  446e64:	b	444c98 <argp_parse@@Base+0xa5ec>
  446e68:	add	x9, x8, #0x3
  446e6c:	strb	wzr, [x9]
  446e70:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446e74:	add	x4, x4, #0xc12
  446e78:	add	x5, sp, #0x78
  446e7c:	mov	w2, #0x1                   	// #1
  446e80:	mov	x3, #0xffffffffffffffff    	// #-1
  446e84:	mov	x0, x23
  446e88:	mov	x1, x24
  446e8c:	bl	404190 <__snprintf_chk@plt>
  446e90:	add	x1, sp, #0x2b0
  446e94:	mov	x0, x22
  446e98:	bl	4444a4 <argp_parse@@Base+0x9df8>
  446e9c:	mov	w22, wzr
  446ea0:	cmp	x21, x19
  446ea4:	b.ne	4448c0 <argp_parse@@Base+0xa214>  // b.any
  446ea8:	b	4448c8 <argp_parse@@Base+0xa21c>
  446eac:	stp	x29, x30, [sp, #-32]!
  446eb0:	stp	x20, x19, [sp, #16]
  446eb4:	ldrb	w8, [x0, #224]
  446eb8:	mov	x20, x0
  446ebc:	mov	x19, x1
  446ec0:	mov	x29, sp
  446ec4:	cbz	w8, 446ef4 <argp_parse@@Base+0xc848>
  446ec8:	ldr	x5, [x20, #8]
  446ecc:	add	x8, x5, #0x1
  446ed0:	cmp	x8, #0xd
  446ed4:	b.hi	446f14 <argp_parse@@Base+0xc868>  // b.pmore
  446ed8:	adrp	x10, 469000 <_obstack_memory_used@@Base+0x1de3c>
  446edc:	mov	w9, #0xb                   	// #11
  446ee0:	add	x10, x10, #0xe30
  446ee4:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  446ee8:	madd	x5, x8, x9, x10
  446eec:	add	x4, x4, #0x274
  446ef0:	b	446f1c <argp_parse@@Base+0xc870>
  446ef4:	mov	w0, wzr
  446ef8:	strb	wzr, [x19]
  446efc:	ldr	w9, [x20, #16]
  446f00:	tbz	w9, #31, 446f38 <argp_parse@@Base+0xc88c>
  446f04:	mov	x0, x19
  446f08:	ldp	x20, x19, [sp, #16]
  446f0c:	ldp	x29, x30, [sp], #32
  446f10:	ret
  446f14:	adrp	x4, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446f18:	add	x4, x4, #0x796
  446f1c:	mov	w1, #0x64                  	// #100
  446f20:	mov	w2, #0x1                   	// #1
  446f24:	mov	x3, #0xffffffffffffffff    	// #-1
  446f28:	mov	x0, x19
  446f2c:	bl	404190 <__snprintf_chk@plt>
  446f30:	ldr	w9, [x20, #16]
  446f34:	tbnz	w9, #31, 446f04 <argp_parse@@Base+0xc858>
  446f38:	cmp	w0, #0x63
  446f3c:	b.hi	446f04 <argp_parse@@Base+0xc858>  // b.pmore
  446f40:	cmp	w9, #0x6
  446f44:	b.gt	446f04 <argp_parse@@Base+0xc858>
  446f48:	mov	w10, #0x64                  	// #100
  446f4c:	adrp	x11, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  446f50:	adrp	x12, 469000 <_obstack_memory_used@@Base+0x1de3c>
  446f54:	add	x8, x19, w0, uxtw
  446f58:	cmp	w0, #0x0
  446f5c:	add	x11, x11, #0x273
  446f60:	add	x12, x12, #0xeca
  446f64:	sub	w10, w10, w0
  446f68:	cinc	x4, x11, eq  // eq = none
  446f6c:	sxtw	x1, w10
  446f70:	add	x5, x12, x9, lsl #2
  446f74:	mov	w2, #0x1                   	// #1
  446f78:	mov	x3, #0xffffffffffffffff    	// #-1
  446f7c:	mov	x0, x8
  446f80:	bl	404190 <__snprintf_chk@plt>
  446f84:	mov	x0, x19
  446f88:	ldp	x20, x19, [sp, #16]
  446f8c:	ldp	x29, x30, [sp], #32
  446f90:	ret
  446f94:	stp	x29, x30, [sp, #-32]!
  446f98:	stp	x20, x19, [sp, #16]
  446f9c:	mov	x19, x1
  446fa0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446fa4:	mov	x20, x0
  446fa8:	add	x1, x1, #0x8c3
  446fac:	mov	x0, x19
  446fb0:	mov	x29, sp
  446fb4:	bl	404610 <strcmp@plt>
  446fb8:	cbz	w0, 4473bc <argp_parse@@Base+0xcd10>
  446fbc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  446fc0:	add	x1, x1, #0x8c7
  446fc4:	mov	x0, x19
  446fc8:	bl	404610 <strcmp@plt>
  446fcc:	cbz	w0, 4473c8 <argp_parse@@Base+0xcd1c>
  446fd0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1ae3c>
  446fd4:	add	x1, x1, #0x9cc
  446fd8:	mov	x0, x19
  446fdc:	bl	404610 <strcmp@plt>
  446fe0:	cbz	w0, 4473d4 <argp_parse@@Base+0xcd28>
  446fe4:	ldr	x1, [x20, #232]!
  446fe8:	cbz	x1, 447000 <argp_parse@@Base+0xc954>
  446fec:	mov	x0, x19
  446ff0:	bl	404610 <strcmp@plt>
  446ff4:	cbz	w0, 447604 <argp_parse@@Base+0xcf58>
  446ff8:	ldr	x1, [x20, #16]!
  446ffc:	cbnz	x1, 446fec <argp_parse@@Base+0xc940>
  447000:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447004:	add	x1, x1, #0x8ca
  447008:	mov	x0, x19
  44700c:	bl	404610 <strcmp@plt>
  447010:	cbz	w0, 4473e0 <argp_parse@@Base+0xcd34>
  447014:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447018:	add	x1, x1, #0x8ce
  44701c:	mov	x0, x19
  447020:	bl	404610 <strcmp@plt>
  447024:	cbz	w0, 4473ec <argp_parse@@Base+0xcd40>
  447028:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44702c:	add	x1, x1, #0x8d3
  447030:	mov	x0, x19
  447034:	bl	404610 <strcmp@plt>
  447038:	cbz	w0, 4473f8 <argp_parse@@Base+0xcd4c>
  44703c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447040:	add	x1, x1, #0x8d7
  447044:	mov	x0, x19
  447048:	bl	404610 <strcmp@plt>
  44704c:	cbz	w0, 447404 <argp_parse@@Base+0xcd58>
  447050:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447054:	add	x1, x1, #0x8db
  447058:	mov	x0, x19
  44705c:	bl	404610 <strcmp@plt>
  447060:	cbz	w0, 447410 <argp_parse@@Base+0xcd64>
  447064:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447068:	add	x1, x1, #0x8df
  44706c:	mov	x0, x19
  447070:	bl	404610 <strcmp@plt>
  447074:	cbz	w0, 44741c <argp_parse@@Base+0xcd70>
  447078:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44707c:	add	x1, x1, #0x8e4
  447080:	mov	x0, x19
  447084:	bl	404610 <strcmp@plt>
  447088:	cbz	w0, 447428 <argp_parse@@Base+0xcd7c>
  44708c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447090:	add	x1, x1, #0x8e8
  447094:	mov	x0, x19
  447098:	bl	404610 <strcmp@plt>
  44709c:	cbz	w0, 447434 <argp_parse@@Base+0xcd88>
  4470a0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4470a4:	add	x1, x1, #0x920
  4470a8:	mov	x0, x19
  4470ac:	bl	404610 <strcmp@plt>
  4470b0:	cbz	w0, 447440 <argp_parse@@Base+0xcd94>
  4470b4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4470b8:	add	x1, x1, #0x925
  4470bc:	mov	x0, x19
  4470c0:	bl	404610 <strcmp@plt>
  4470c4:	cbz	w0, 44744c <argp_parse@@Base+0xcda0>
  4470c8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4470cc:	add	x1, x1, #0x8ec
  4470d0:	mov	x0, x19
  4470d4:	bl	404610 <strcmp@plt>
  4470d8:	cbz	w0, 447458 <argp_parse@@Base+0xcdac>
  4470dc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4470e0:	add	x1, x1, #0x8f0
  4470e4:	mov	x0, x19
  4470e8:	bl	404610 <strcmp@plt>
  4470ec:	cbz	w0, 447464 <argp_parse@@Base+0xcdb8>
  4470f0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4470f4:	add	x1, x1, #0x936
  4470f8:	mov	x0, x19
  4470fc:	bl	404610 <strcmp@plt>
  447100:	cbz	w0, 447470 <argp_parse@@Base+0xcdc4>
  447104:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447108:	add	x1, x1, #0x8f5
  44710c:	mov	x0, x19
  447110:	bl	404610 <strcmp@plt>
  447114:	cbz	w0, 44747c <argp_parse@@Base+0xcdd0>
  447118:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44711c:	add	x1, x1, #0x8f9
  447120:	mov	x0, x19
  447124:	bl	404610 <strcmp@plt>
  447128:	cbz	w0, 447488 <argp_parse@@Base+0xcddc>
  44712c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447130:	add	x1, x1, #0x8fd
  447134:	mov	x0, x19
  447138:	bl	404610 <strcmp@plt>
  44713c:	cbz	w0, 447494 <argp_parse@@Base+0xcde8>
  447140:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447144:	add	x1, x1, #0x901
  447148:	mov	x0, x19
  44714c:	bl	404610 <strcmp@plt>
  447150:	cbz	w0, 4474a0 <argp_parse@@Base+0xcdf4>
  447154:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447158:	add	x1, x1, #0x905
  44715c:	mov	x0, x19
  447160:	bl	404610 <strcmp@plt>
  447164:	cbz	w0, 4474ac <argp_parse@@Base+0xce00>
  447168:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44716c:	add	x1, x1, #0x909
  447170:	mov	x0, x19
  447174:	bl	404610 <strcmp@plt>
  447178:	cbz	w0, 4474b8 <argp_parse@@Base+0xce0c>
  44717c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447180:	add	x1, x1, #0x90d
  447184:	mov	x0, x19
  447188:	bl	404610 <strcmp@plt>
  44718c:	cbz	w0, 4474c4 <argp_parse@@Base+0xce18>
  447190:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447194:	add	x1, x1, #0x911
  447198:	mov	x0, x19
  44719c:	bl	404610 <strcmp@plt>
  4471a0:	cbz	w0, 4474d0 <argp_parse@@Base+0xce24>
  4471a4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4471a8:	add	x1, x1, #0x916
  4471ac:	mov	x0, x19
  4471b0:	bl	404610 <strcmp@plt>
  4471b4:	cbz	w0, 4474dc <argp_parse@@Base+0xce30>
  4471b8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4471bc:	add	x1, x1, #0x91b
  4471c0:	mov	x0, x19
  4471c4:	bl	404610 <strcmp@plt>
  4471c8:	cbz	w0, 4474e8 <argp_parse@@Base+0xce3c>
  4471cc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4471d0:	add	x1, x1, #0x91f
  4471d4:	mov	x0, x19
  4471d8:	bl	404610 <strcmp@plt>
  4471dc:	cbz	w0, 4474f4 <argp_parse@@Base+0xce48>
  4471e0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4471e4:	add	x1, x1, #0x924
  4471e8:	mov	x0, x19
  4471ec:	bl	404610 <strcmp@plt>
  4471f0:	cbz	w0, 447500 <argp_parse@@Base+0xce54>
  4471f4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4471f8:	add	x1, x1, #0x929
  4471fc:	mov	x0, x19
  447200:	bl	404610 <strcmp@plt>
  447204:	cbz	w0, 44750c <argp_parse@@Base+0xce60>
  447208:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44720c:	add	x1, x1, #0x92d
  447210:	mov	x0, x19
  447214:	bl	404610 <strcmp@plt>
  447218:	cbz	w0, 447518 <argp_parse@@Base+0xce6c>
  44721c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447220:	add	x1, x1, #0x931
  447224:	mov	x0, x19
  447228:	bl	404610 <strcmp@plt>
  44722c:	cbz	w0, 447524 <argp_parse@@Base+0xce78>
  447230:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447234:	add	x1, x1, #0x935
  447238:	mov	x0, x19
  44723c:	bl	404610 <strcmp@plt>
  447240:	cbz	w0, 447530 <argp_parse@@Base+0xce84>
  447244:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447248:	add	x1, x1, #0x93a
  44724c:	mov	x0, x19
  447250:	bl	404610 <strcmp@plt>
  447254:	cbz	w0, 44753c <argp_parse@@Base+0xce90>
  447258:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44725c:	add	x1, x1, #0x93e
  447260:	mov	x0, x19
  447264:	bl	404610 <strcmp@plt>
  447268:	cbz	w0, 447548 <argp_parse@@Base+0xce9c>
  44726c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447270:	add	x1, x1, #0x942
  447274:	mov	x0, x19
  447278:	bl	404610 <strcmp@plt>
  44727c:	cbz	w0, 447554 <argp_parse@@Base+0xcea8>
  447280:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447284:	add	x1, x1, #0x947
  447288:	mov	x0, x19
  44728c:	bl	404610 <strcmp@plt>
  447290:	cbz	w0, 447560 <argp_parse@@Base+0xceb4>
  447294:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447298:	add	x1, x1, #0x94c
  44729c:	mov	x0, x19
  4472a0:	bl	404610 <strcmp@plt>
  4472a4:	cbz	w0, 44756c <argp_parse@@Base+0xcec0>
  4472a8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4472ac:	add	x1, x1, #0x950
  4472b0:	mov	x0, x19
  4472b4:	bl	404610 <strcmp@plt>
  4472b8:	cbz	w0, 447578 <argp_parse@@Base+0xcecc>
  4472bc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4472c0:	add	x1, x1, #0x955
  4472c4:	mov	x0, x19
  4472c8:	bl	404610 <strcmp@plt>
  4472cc:	cbz	w0, 447584 <argp_parse@@Base+0xced8>
  4472d0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4472d4:	add	x1, x1, #0x959
  4472d8:	mov	x0, x19
  4472dc:	bl	404610 <strcmp@plt>
  4472e0:	cbz	w0, 447590 <argp_parse@@Base+0xcee4>
  4472e4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4472e8:	add	x1, x1, #0xb
  4472ec:	mov	x0, x19
  4472f0:	bl	404610 <strcmp@plt>
  4472f4:	cbz	w0, 44759c <argp_parse@@Base+0xcef0>
  4472f8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4472fc:	add	x1, x1, #0x95e
  447300:	mov	x0, x19
  447304:	bl	404610 <strcmp@plt>
  447308:	cbz	w0, 4475a8 <argp_parse@@Base+0xcefc>
  44730c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447310:	add	x1, x1, #0x962
  447314:	mov	x0, x19
  447318:	bl	404610 <strcmp@plt>
  44731c:	cbz	w0, 4475b4 <argp_parse@@Base+0xcf08>
  447320:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447324:	add	x1, x1, #0x966
  447328:	mov	x0, x19
  44732c:	bl	404610 <strcmp@plt>
  447330:	cbz	w0, 4475c0 <argp_parse@@Base+0xcf14>
  447334:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447338:	add	x1, x1, #0x96a
  44733c:	mov	x0, x19
  447340:	bl	404610 <strcmp@plt>
  447344:	cbz	w0, 4475cc <argp_parse@@Base+0xcf20>
  447348:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44734c:	add	x1, x1, #0x912
  447350:	mov	x0, x19
  447354:	bl	404610 <strcmp@plt>
  447358:	cbz	w0, 4475d8 <argp_parse@@Base+0xcf2c>
  44735c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447360:	add	x1, x1, #0x96e
  447364:	mov	x0, x19
  447368:	bl	404610 <strcmp@plt>
  44736c:	cbz	w0, 4475e4 <argp_parse@@Base+0xcf38>
  447370:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447374:	add	x1, x1, #0x972
  447378:	mov	x0, x19
  44737c:	bl	404610 <strcmp@plt>
  447380:	cbz	w0, 4475f0 <argp_parse@@Base+0xcf44>
  447384:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447388:	add	x1, x1, #0x976
  44738c:	mov	x0, x19
  447390:	bl	404610 <strcmp@plt>
  447394:	cbz	w0, 4475fc <argp_parse@@Base+0xcf50>
  447398:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44739c:	add	x1, x1, #0x97b
  4473a0:	mov	x0, x19
  4473a4:	bl	404610 <strcmp@plt>
  4473a8:	adrp	x8, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473ac:	add	x8, x8, #0xe10
  4473b0:	cmp	w0, #0x0
  4473b4:	csel	x0, x8, xzr, eq  // eq = none
  4473b8:	b	447608 <argp_parse@@Base+0xcf5c>
  4473bc:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473c0:	add	x20, x20, #0xaf0
  4473c4:	b	447604 <argp_parse@@Base+0xcf58>
  4473c8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473cc:	add	x20, x20, #0xb00
  4473d0:	b	447604 <argp_parse@@Base+0xcf58>
  4473d4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473d8:	add	x20, x20, #0xb10
  4473dc:	b	447604 <argp_parse@@Base+0xcf58>
  4473e0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473e4:	add	x20, x20, #0xb30
  4473e8:	b	447604 <argp_parse@@Base+0xcf58>
  4473ec:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473f0:	add	x20, x20, #0xb40
  4473f4:	b	447604 <argp_parse@@Base+0xcf58>
  4473f8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4473fc:	add	x20, x20, #0xb50
  447400:	b	447604 <argp_parse@@Base+0xcf58>
  447404:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447408:	add	x20, x20, #0xb60
  44740c:	b	447604 <argp_parse@@Base+0xcf58>
  447410:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447414:	add	x20, x20, #0xb70
  447418:	b	447604 <argp_parse@@Base+0xcf58>
  44741c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447420:	add	x20, x20, #0xb80
  447424:	b	447604 <argp_parse@@Base+0xcf58>
  447428:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44742c:	add	x20, x20, #0xb90
  447430:	b	447604 <argp_parse@@Base+0xcf58>
  447434:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447438:	add	x20, x20, #0xba0
  44743c:	b	447604 <argp_parse@@Base+0xcf58>
  447440:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447444:	add	x20, x20, #0xbb0
  447448:	b	447604 <argp_parse@@Base+0xcf58>
  44744c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447450:	add	x20, x20, #0xbc0
  447454:	b	447604 <argp_parse@@Base+0xcf58>
  447458:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44745c:	add	x20, x20, #0xbd0
  447460:	b	447604 <argp_parse@@Base+0xcf58>
  447464:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447468:	add	x20, x20, #0xbe0
  44746c:	b	447604 <argp_parse@@Base+0xcf58>
  447470:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447474:	add	x20, x20, #0xbf0
  447478:	b	447604 <argp_parse@@Base+0xcf58>
  44747c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447480:	add	x20, x20, #0xc00
  447484:	b	447604 <argp_parse@@Base+0xcf58>
  447488:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44748c:	add	x20, x20, #0xc10
  447490:	b	447604 <argp_parse@@Base+0xcf58>
  447494:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447498:	add	x20, x20, #0xc20
  44749c:	b	447604 <argp_parse@@Base+0xcf58>
  4474a0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474a4:	add	x20, x20, #0xc30
  4474a8:	b	447604 <argp_parse@@Base+0xcf58>
  4474ac:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474b0:	add	x20, x20, #0xc40
  4474b4:	b	447604 <argp_parse@@Base+0xcf58>
  4474b8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474bc:	add	x20, x20, #0xc50
  4474c0:	b	447604 <argp_parse@@Base+0xcf58>
  4474c4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474c8:	add	x20, x20, #0xc60
  4474cc:	b	447604 <argp_parse@@Base+0xcf58>
  4474d0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474d4:	add	x20, x20, #0xc70
  4474d8:	b	447604 <argp_parse@@Base+0xcf58>
  4474dc:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474e0:	add	x20, x20, #0xc80
  4474e4:	b	447604 <argp_parse@@Base+0xcf58>
  4474e8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474ec:	add	x20, x20, #0xc90
  4474f0:	b	447604 <argp_parse@@Base+0xcf58>
  4474f4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4474f8:	add	x20, x20, #0xca0
  4474fc:	b	447604 <argp_parse@@Base+0xcf58>
  447500:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447504:	add	x20, x20, #0xcb0
  447508:	b	447604 <argp_parse@@Base+0xcf58>
  44750c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447510:	add	x20, x20, #0xcc0
  447514:	b	447604 <argp_parse@@Base+0xcf58>
  447518:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44751c:	add	x20, x20, #0xcd0
  447520:	b	447604 <argp_parse@@Base+0xcf58>
  447524:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447528:	add	x20, x20, #0xce0
  44752c:	b	447604 <argp_parse@@Base+0xcf58>
  447530:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447534:	add	x20, x20, #0xcf0
  447538:	b	447604 <argp_parse@@Base+0xcf58>
  44753c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447540:	add	x20, x20, #0xd00
  447544:	b	447604 <argp_parse@@Base+0xcf58>
  447548:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44754c:	add	x20, x20, #0xd10
  447550:	b	447604 <argp_parse@@Base+0xcf58>
  447554:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447558:	add	x20, x20, #0xd20
  44755c:	b	447604 <argp_parse@@Base+0xcf58>
  447560:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447564:	add	x20, x20, #0xd30
  447568:	b	447604 <argp_parse@@Base+0xcf58>
  44756c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447570:	add	x20, x20, #0xd40
  447574:	b	447604 <argp_parse@@Base+0xcf58>
  447578:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  44757c:	add	x20, x20, #0xd50
  447580:	b	447604 <argp_parse@@Base+0xcf58>
  447584:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447588:	add	x20, x20, #0xd60
  44758c:	b	447604 <argp_parse@@Base+0xcf58>
  447590:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447594:	add	x20, x20, #0xd70
  447598:	b	447604 <argp_parse@@Base+0xcf58>
  44759c:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475a0:	add	x20, x20, #0xd80
  4475a4:	b	447604 <argp_parse@@Base+0xcf58>
  4475a8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475ac:	add	x20, x20, #0xd90
  4475b0:	b	447604 <argp_parse@@Base+0xcf58>
  4475b4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475b8:	add	x20, x20, #0xda0
  4475bc:	b	447604 <argp_parse@@Base+0xcf58>
  4475c0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475c4:	add	x20, x20, #0xdb0
  4475c8:	b	447604 <argp_parse@@Base+0xcf58>
  4475cc:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475d0:	add	x20, x20, #0xdc0
  4475d4:	b	447604 <argp_parse@@Base+0xcf58>
  4475d8:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475dc:	add	x20, x20, #0xdd0
  4475e0:	b	447604 <argp_parse@@Base+0xcf58>
  4475e4:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475e8:	add	x20, x20, #0xde0
  4475ec:	b	447604 <argp_parse@@Base+0xcf58>
  4475f0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  4475f4:	add	x20, x20, #0xdf0
  4475f8:	b	447604 <argp_parse@@Base+0xcf58>
  4475fc:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x1de3c>
  447600:	add	x20, x20, #0xe00
  447604:	mov	x0, x20
  447608:	ldp	x20, x19, [sp, #16]
  44760c:	ldp	x29, x30, [sp], #32
  447610:	ret
  447614:	stp	x29, x30, [sp, #-32]!
  447618:	stp	x20, x19, [sp, #16]
  44761c:	mov	x29, sp
  447620:	cbz	x0, 4476a0 <argp_parse@@Base+0xcff4>
  447624:	mov	w1, #0x2f                  	// #47
  447628:	mov	x19, x0
  44762c:	bl	4044e0 <strrchr@plt>
  447630:	cmp	x0, #0x0
  447634:	csinc	x20, x19, x0, eq  // eq = none
  447638:	sub	x8, x20, x19
  44763c:	cmp	x8, #0x7
  447640:	b.lt	447684 <argp_parse@@Base+0xcfd8>  // b.tstop
  447644:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447648:	sub	x0, x20, #0x7
  44764c:	add	x1, x1, #0xc70
  447650:	mov	w2, #0x7                   	// #7
  447654:	bl	4042c0 <strncmp@plt>
  447658:	cbnz	w0, 447684 <argp_parse@@Base+0xcfd8>
  44765c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447660:	add	x1, x1, #0xc78
  447664:	mov	w2, #0x3                   	// #3
  447668:	mov	x0, x20
  44766c:	bl	4042c0 <strncmp@plt>
  447670:	mov	x19, x20
  447674:	cbnz	w0, 447684 <argp_parse@@Base+0xcfd8>
  447678:	add	x19, x20, #0x3
  44767c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  447680:	str	x19, [x8, #120]
  447684:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  447688:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44768c:	str	x19, [x8, #2440]
  447690:	str	x19, [x9, #80]
  447694:	ldp	x20, x19, [sp, #16]
  447698:	ldp	x29, x30, [sp], #32
  44769c:	ret
  4476a0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4476a4:	ldr	x3, [x8, #88]
  4476a8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4476ac:	add	x0, x0, #0xc38
  4476b0:	mov	w1, #0x37                  	// #55
  4476b4:	mov	w2, #0x1                   	// #1
  4476b8:	bl	404790 <fwrite@plt>
  4476bc:	bl	404560 <abort@plt>
  4476c0:	stp	x29, x30, [sp, #-48]!
  4476c4:	str	x21, [sp, #16]
  4476c8:	stp	x20, x19, [sp, #32]
  4476cc:	mov	x29, sp
  4476d0:	mov	x19, x0
  4476d4:	bl	4049c0 <__errno_location@plt>
  4476d8:	ldr	w21, [x0]
  4476dc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4476e0:	add	x8, x8, #0x990
  4476e4:	cmp	x19, #0x0
  4476e8:	mov	x20, x0
  4476ec:	csel	x0, x8, x19, eq  // eq = none
  4476f0:	mov	w1, #0x38                  	// #56
  4476f4:	bl	44a2a0 <argp_parse@@Base+0xfbf4>
  4476f8:	str	w21, [x20]
  4476fc:	ldp	x20, x19, [sp, #32]
  447700:	ldr	x21, [sp, #16]
  447704:	ldp	x29, x30, [sp], #48
  447708:	ret
  44770c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  447710:	add	x8, x8, #0x990
  447714:	cmp	x0, #0x0
  447718:	csel	x8, x8, x0, eq  // eq = none
  44771c:	ldr	w0, [x8]
  447720:	ret
  447724:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  447728:	add	x8, x8, #0x990
  44772c:	cmp	x0, #0x0
  447730:	csel	x8, x8, x0, eq  // eq = none
  447734:	str	w1, [x8]
  447738:	ret
  44773c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  447740:	add	x8, x8, #0x990
  447744:	cmp	x0, #0x0
  447748:	ubfx	w9, w1, #5, #3
  44774c:	csel	x8, x8, x0, eq  // eq = none
  447750:	add	x8, x8, w9, uxtw #2
  447754:	ldr	w9, [x8, #8]
  447758:	lsr	w10, w9, w1
  44775c:	and	w0, w10, #0x1
  447760:	and	w10, w2, #0x1
  447764:	eor	w10, w0, w10
  447768:	lsl	w10, w10, w1
  44776c:	eor	w9, w10, w9
  447770:	str	w9, [x8, #8]
  447774:	ret
  447778:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44777c:	add	x8, x8, #0x990
  447780:	cmp	x0, #0x0
  447784:	csel	x8, x8, x0, eq  // eq = none
  447788:	ldr	w0, [x8, #4]
  44778c:	str	w1, [x8, #4]
  447790:	ret
  447794:	stp	x29, x30, [sp, #-16]!
  447798:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44779c:	add	x8, x8, #0x990
  4477a0:	cmp	x0, #0x0
  4477a4:	csel	x8, x8, x0, eq  // eq = none
  4477a8:	mov	w9, #0xa                   	// #10
  4477ac:	mov	x29, sp
  4477b0:	str	w9, [x8]
  4477b4:	cbz	x1, 4477c8 <argp_parse@@Base+0xd11c>
  4477b8:	cbz	x2, 4477c8 <argp_parse@@Base+0xd11c>
  4477bc:	stp	x1, x2, [x8, #40]
  4477c0:	ldp	x29, x30, [sp], #16
  4477c4:	ret
  4477c8:	bl	404560 <abort@plt>
  4477cc:	sub	sp, sp, #0x60
  4477d0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4477d4:	add	x8, x8, #0x990
  4477d8:	cmp	x4, #0x0
  4477dc:	stp	x29, x30, [sp, #16]
  4477e0:	str	x25, [sp, #32]
  4477e4:	stp	x24, x23, [sp, #48]
  4477e8:	stp	x22, x21, [sp, #64]
  4477ec:	stp	x20, x19, [sp, #80]
  4477f0:	add	x29, sp, #0x10
  4477f4:	mov	x19, x3
  4477f8:	mov	x20, x2
  4477fc:	mov	x21, x1
  447800:	mov	x22, x0
  447804:	csel	x24, x8, x4, eq  // eq = none
  447808:	bl	4049c0 <__errno_location@plt>
  44780c:	ldp	w4, w5, [x24]
  447810:	ldp	x7, x8, [x24, #40]
  447814:	ldr	w25, [x0]
  447818:	mov	x23, x0
  44781c:	add	x6, x24, #0x8
  447820:	mov	x0, x22
  447824:	mov	x1, x21
  447828:	mov	x2, x20
  44782c:	mov	x3, x19
  447830:	str	x8, [sp]
  447834:	bl	447858 <argp_parse@@Base+0xd1ac>
  447838:	str	w25, [x23]
  44783c:	ldp	x20, x19, [sp, #80]
  447840:	ldp	x22, x21, [sp, #64]
  447844:	ldp	x24, x23, [sp, #48]
  447848:	ldr	x25, [sp, #32]
  44784c:	ldp	x29, x30, [sp, #16]
  447850:	add	sp, sp, #0x60
  447854:	ret
  447858:	sub	sp, sp, #0x120
  44785c:	stp	x29, x30, [sp, #192]
  447860:	add	x29, sp, #0xc0
  447864:	ldr	x8, [x29, #96]
  447868:	stp	x28, x27, [sp, #208]
  44786c:	stp	x26, x25, [sp, #224]
  447870:	stp	x24, x23, [sp, #240]
  447874:	stp	x22, x21, [sp, #256]
  447878:	stp	x20, x19, [sp, #272]
  44787c:	str	x7, [sp, #96]
  447880:	stur	x6, [x29, #-40]
  447884:	mov	w20, w5
  447888:	mov	w24, w4
  44788c:	mov	x22, x3
  447890:	mov	x19, x2
  447894:	mov	x23, x1
  447898:	stur	x8, [x29, #-88]
  44789c:	mov	x28, x0
  4478a0:	bl	4046e0 <__ctype_get_mb_cur_max@plt>
  4478a4:	mov	w8, wzr
  4478a8:	mov	w15, wzr
  4478ac:	stp	wzr, w20, [sp, #84]
  4478b0:	ubfx	w21, w20, #1, #1
  4478b4:	mov	w20, w24
  4478b8:	add	x9, x19, #0x1
  4478bc:	mov	w14, #0x1                   	// #1
  4478c0:	str	x0, [sp, #32]
  4478c4:	str	xzr, [sp, #72]
  4478c8:	stur	xzr, [x29, #-64]
  4478cc:	stur	xzr, [x29, #-32]
  4478d0:	stur	x9, [x29, #-80]
  4478d4:	cmp	w20, #0xa
  4478d8:	b.hi	448804 <argp_parse@@Base+0xe158>  // b.pmore
  4478dc:	adrp	x12, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4478e0:	mov	w9, w20
  4478e4:	add	x12, x12, #0xc80
  4478e8:	adr	x10, 44790c <argp_parse@@Base+0xd260>
  4478ec:	ldrb	w11, [x12, x9]
  4478f0:	add	x10, x10, x11, lsl #2
  4478f4:	mov	x24, x23
  4478f8:	mov	x27, xzr
  4478fc:	mov	w17, wzr
  447900:	mov	w16, #0x1                   	// #1
  447904:	mov	x23, x22
  447908:	br	x10
  44790c:	adrp	x25, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447910:	add	x25, x25, #0xdd6
  447914:	mov	w2, #0x5                   	// #5
  447918:	mov	x0, xzr
  44791c:	mov	x1, x25
  447920:	mov	w27, w15
  447924:	mov	w26, w14
  447928:	mov	w22, w20
  44792c:	bl	4048b0 <dcgettext@plt>
  447930:	mov	x20, x0
  447934:	cmp	x0, x25
  447938:	b.ne	447b08 <argp_parse@@Base+0xd45c>  // b.any
  44793c:	bl	4402c8 <argp_parse@@Base+0x5c1c>
  447940:	ldrb	w8, [x0]
  447944:	and	w8, w8, #0xffffffdf
  447948:	cmp	w8, #0x47
  44794c:	b.eq	447a98 <argp_parse@@Base+0xd3ec>  // b.none
  447950:	cmp	w8, #0x55
  447954:	mov	w9, w22
  447958:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  44795c:	ldrb	w8, [x0, #1]
  447960:	and	w8, w8, #0xffffffdf
  447964:	cmp	w8, #0x54
  447968:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  44796c:	ldrb	w8, [x0, #2]
  447970:	and	w8, w8, #0xffffffdf
  447974:	cmp	w8, #0x46
  447978:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  44797c:	ldrb	w8, [x0, #3]
  447980:	cmp	w8, #0x2d
  447984:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447988:	ldrb	w8, [x0, #4]
  44798c:	cmp	w8, #0x38
  447990:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447994:	ldrb	w8, [x0, #5]
  447998:	cbnz	w8, 447af0 <argp_parse@@Base+0xd444>
  44799c:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4479a0:	add	x20, x20, #0xdd8
  4479a4:	b	447b08 <argp_parse@@Base+0xd45c>
  4479a8:	mov	w8, #0x1                   	// #1
  4479ac:	b	447a2c <argp_parse@@Base+0xd380>
  4479b0:	tbnz	w21, #0, 447a2c <argp_parse@@Base+0xd380>
  4479b4:	mov	w16, w8
  4479b8:	mov	w17, wzr
  4479bc:	cbz	x24, 4479c8 <argp_parse@@Base+0xd31c>
  4479c0:	mov	w8, #0x27                  	// #39
  4479c4:	strb	w8, [x28]
  4479c8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  4479cc:	add	x8, x8, #0x5cc
  4479d0:	stur	x8, [x29, #-64]
  4479d4:	mov	w8, #0x1                   	// #1
  4479d8:	mov	w20, #0x2                   	// #2
  4479dc:	mov	w27, #0x1                   	// #1
  4479e0:	stur	x8, [x29, #-32]
  4479e4:	b	447c98 <argp_parse@@Base+0xd5ec>
  4479e8:	tbz	w21, #0, 447a54 <argp_parse@@Base+0xd3a8>
  4479ec:	mov	w8, #0x1                   	// #1
  4479f0:	stur	x8, [x29, #-32]
  4479f4:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4479f8:	add	x8, x8, #0x258
  4479fc:	mov	x27, xzr
  447a00:	mov	w20, #0x5                   	// #5
  447a04:	stur	x8, [x29, #-64]
  447a08:	mov	w16, #0x1                   	// #1
  447a0c:	mov	w17, #0x1                   	// #1
  447a10:	b	447c98 <argp_parse@@Base+0xd5ec>
  447a14:	mov	w20, wzr
  447a18:	mov	x27, xzr
  447a1c:	mov	w17, wzr
  447a20:	mov	w16, w8
  447a24:	b	447c98 <argp_parse@@Base+0xd5ec>
  447a28:	tbz	w21, #0, 447a88 <argp_parse@@Base+0xd3dc>
  447a2c:	mov	w9, #0x1                   	// #1
  447a30:	stur	x9, [x29, #-32]
  447a34:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x1be3c>
  447a38:	add	x9, x9, #0x5cc
  447a3c:	mov	x27, xzr
  447a40:	mov	w20, #0x2                   	// #2
  447a44:	stur	x9, [x29, #-64]
  447a48:	mov	w16, w8
  447a4c:	mov	w17, #0x1                   	// #1
  447a50:	b	447c98 <argp_parse@@Base+0xd5ec>
  447a54:	mov	w17, wzr
  447a58:	cbz	x24, 447a64 <argp_parse@@Base+0xd3b8>
  447a5c:	mov	w8, #0x22                  	// #34
  447a60:	strb	w8, [x28]
  447a64:	adrp	x8, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  447a68:	add	x8, x8, #0x258
  447a6c:	stur	x8, [x29, #-64]
  447a70:	mov	w8, #0x1                   	// #1
  447a74:	mov	w27, #0x1                   	// #1
  447a78:	mov	w20, #0x5                   	// #5
  447a7c:	stur	x8, [x29, #-32]
  447a80:	mov	w16, #0x1                   	// #1
  447a84:	b	447c98 <argp_parse@@Base+0xd5ec>
  447a88:	mov	w16, #0x1                   	// #1
  447a8c:	mov	w17, wzr
  447a90:	cbnz	x24, 4479c0 <argp_parse@@Base+0xd314>
  447a94:	b	4479c8 <argp_parse@@Base+0xd31c>
  447a98:	ldrb	w8, [x0, #1]
  447a9c:	mov	w9, w22
  447aa0:	and	w8, w8, #0xffffffdf
  447aa4:	cmp	w8, #0x42
  447aa8:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447aac:	ldrb	w8, [x0, #2]
  447ab0:	cmp	w8, #0x31
  447ab4:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447ab8:	ldrb	w8, [x0, #3]
  447abc:	cmp	w8, #0x38
  447ac0:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447ac4:	ldrb	w8, [x0, #4]
  447ac8:	cmp	w8, #0x30
  447acc:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447ad0:	ldrb	w8, [x0, #5]
  447ad4:	cmp	w8, #0x33
  447ad8:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447adc:	ldrb	w8, [x0, #6]
  447ae0:	cmp	w8, #0x30
  447ae4:	b.ne	447af0 <argp_parse@@Base+0xd444>  // b.any
  447ae8:	ldrb	w8, [x0, #7]
  447aec:	cbz	w8, 4486d0 <argp_parse@@Base+0xe024>
  447af0:	cmp	w9, #0x9
  447af4:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  447af8:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  447afc:	add	x8, x8, #0x5cc
  447b00:	add	x9, x9, #0x258
  447b04:	csel	x20, x9, x8, eq  // eq = none
  447b08:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x1be3c>
  447b0c:	add	x25, x25, #0x5cc
  447b10:	mov	w2, #0x5                   	// #5
  447b14:	mov	x0, xzr
  447b18:	mov	x1, x25
  447b1c:	bl	4048b0 <dcgettext@plt>
  447b20:	cmp	x0, x25
  447b24:	stur	x0, [x29, #-88]
  447b28:	str	x20, [sp, #96]
  447b2c:	b.eq	447b38 <argp_parse@@Base+0xd48c>  // b.none
  447b30:	mov	w20, w22
  447b34:	b	447c1c <argp_parse@@Base+0xd570>
  447b38:	bl	4402c8 <argp_parse@@Base+0x5c1c>
  447b3c:	ldrb	w8, [x0]
  447b40:	and	w8, w8, #0xffffffdf
  447b44:	cmp	w8, #0x47
  447b48:	b.eq	447ba8 <argp_parse@@Base+0xd4fc>  // b.none
  447b4c:	cmp	w8, #0x55
  447b50:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447b54:	ldrb	w8, [x0, #1]
  447b58:	and	w8, w8, #0xffffffdf
  447b5c:	cmp	w8, #0x54
  447b60:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447b64:	ldrb	w8, [x0, #2]
  447b68:	and	w8, w8, #0xffffffdf
  447b6c:	cmp	w8, #0x46
  447b70:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447b74:	ldrb	w8, [x0, #3]
  447b78:	cmp	w8, #0x2d
  447b7c:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447b80:	ldrb	w8, [x0, #4]
  447b84:	cmp	w8, #0x38
  447b88:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447b8c:	ldrb	w8, [x0, #5]
  447b90:	cbnz	w8, 447bfc <argp_parse@@Base+0xd550>
  447b94:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447b98:	add	x8, x8, #0xddc
  447b9c:	stur	x8, [x29, #-88]
  447ba0:	mov	w20, w22
  447ba4:	b	447c1c <argp_parse@@Base+0xd570>
  447ba8:	ldrb	w8, [x0, #1]
  447bac:	and	w8, w8, #0xffffffdf
  447bb0:	cmp	w8, #0x42
  447bb4:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447bb8:	ldrb	w8, [x0, #2]
  447bbc:	cmp	w8, #0x31
  447bc0:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447bc4:	ldrb	w8, [x0, #3]
  447bc8:	cmp	w8, #0x38
  447bcc:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447bd0:	ldrb	w8, [x0, #4]
  447bd4:	cmp	w8, #0x30
  447bd8:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447bdc:	ldrb	w8, [x0, #5]
  447be0:	cmp	w8, #0x33
  447be4:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447be8:	ldrb	w8, [x0, #6]
  447bec:	cmp	w8, #0x30
  447bf0:	b.ne	447bfc <argp_parse@@Base+0xd550>  // b.any
  447bf4:	ldrb	w8, [x0, #7]
  447bf8:	cbz	w8, 4486dc <argp_parse@@Base+0xe030>
  447bfc:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x1be3c>
  447c00:	adrp	x9, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  447c04:	cmp	w22, #0x9
  447c08:	add	x8, x8, #0x5cc
  447c0c:	add	x9, x9, #0x258
  447c10:	mov	w20, w22
  447c14:	csel	x8, x9, x8, eq  // eq = none
  447c18:	stur	x8, [x29, #-88]
  447c1c:	mov	w14, w26
  447c20:	mov	w15, w27
  447c24:	tbnz	w21, #0, 447c68 <argp_parse@@Base+0xd5bc>
  447c28:	ldr	x8, [sp, #96]
  447c2c:	ldrb	w9, [x8]
  447c30:	cbz	w9, 447c68 <argp_parse@@Base+0xd5bc>
  447c34:	mov	w26, w15
  447c38:	mov	w22, w14
  447c3c:	mov	x10, xzr
  447c40:	add	x8, x8, #0x1
  447c44:	b	447c58 <argp_parse@@Base+0xd5ac>
  447c48:	ldrb	w9, [x8, x10]
  447c4c:	add	x27, x10, #0x1
  447c50:	mov	x10, x27
  447c54:	cbz	w9, 447c74 <argp_parse@@Base+0xd5c8>
  447c58:	cmp	x10, x24
  447c5c:	b.cs	447c48 <argp_parse@@Base+0xd59c>  // b.hs, b.nlast
  447c60:	strb	w9, [x28, x10]
  447c64:	b	447c48 <argp_parse@@Base+0xd59c>
  447c68:	mov	w26, w15
  447c6c:	mov	w22, w14
  447c70:	mov	x27, xzr
  447c74:	ldur	x25, [x29, #-88]
  447c78:	mov	x0, x25
  447c7c:	bl	403f00 <strlen@plt>
  447c80:	stur	x0, [x29, #-32]
  447c84:	mov	w16, #0x1                   	// #1
  447c88:	stur	x25, [x29, #-64]
  447c8c:	mov	w17, w21
  447c90:	mov	w14, w22
  447c94:	mov	w15, w26
  447c98:	ldp	x8, x9, [x29, #-40]
  447c9c:	eor	w18, w17, #0x1
  447ca0:	stur	w18, [x29, #-68]
  447ca4:	mov	x22, xzr
  447ca8:	cmp	x8, #0x0
  447cac:	cset	w8, eq  // eq = none
  447cb0:	cmp	x9, #0x0
  447cb4:	cset	w9, ne  // ne = any
  447cb8:	cmp	w20, #0x2
  447cbc:	cset	w10, ne  // ne = any
  447cc0:	and	w13, w10, w16
  447cc4:	and	w12, w9, w17
  447cc8:	orr	w10, w10, w18
  447ccc:	and	w18, w9, w13
  447cd0:	orr	w9, w13, w17
  447cd4:	eor	w9, w9, #0x1
  447cd8:	cset	w11, eq  // eq = none
  447cdc:	orr	w8, w8, w9
  447ce0:	and	w12, w16, w12
  447ce4:	str	w10, [sp, #92]
  447ce8:	and	w10, w11, w17
  447cec:	stur	w8, [x29, #-24]
  447cf0:	eor	w8, w16, #0x1
  447cf4:	stp	w10, w12, [sp, #60]
  447cf8:	stur	w16, [x29, #-72]
  447cfc:	str	w8, [sp, #68]
  447d00:	stp	w17, w20, [x29, #-48]
  447d04:	stur	w18, [x29, #-52]
  447d08:	cmn	x23, #0x1
  447d0c:	b.eq	447d1c <argp_parse@@Base+0xd670>  // b.none
  447d10:	cmp	x22, x23
  447d14:	b.ne	447d24 <argp_parse@@Base+0xd678>  // b.any
  447d18:	b	448660 <argp_parse@@Base+0xdfb4>
  447d1c:	ldrb	w8, [x19, x22]
  447d20:	cbz	w8, 448668 <argp_parse@@Base+0xdfbc>
  447d24:	cbz	w18, 447d6c <argp_parse@@Base+0xd6c0>
  447d28:	ldur	x8, [x29, #-32]
  447d2c:	cmp	x8, #0x2
  447d30:	add	x20, x22, x8
  447d34:	b.cc	447d60 <argp_parse@@Base+0xd6b4>  // b.lo, b.ul, b.last
  447d38:	cmn	x23, #0x1
  447d3c:	b.ne	447d60 <argp_parse@@Base+0xd6b4>  // b.any
  447d40:	mov	x0, x19
  447d44:	mov	w21, w14
  447d48:	mov	w25, w15
  447d4c:	bl	403f00 <strlen@plt>
  447d50:	ldp	w18, w17, [x29, #-52]
  447d54:	mov	x23, x0
  447d58:	mov	w15, w25
  447d5c:	mov	w14, w21
  447d60:	cmp	x20, x23
  447d64:	b.ls	447d80 <argp_parse@@Base+0xd6d4>  // b.plast
  447d68:	ldur	w20, [x29, #-44]
  447d6c:	mov	w25, wzr
  447d70:	ldrb	w21, [x19, x22]
  447d74:	cmp	w21, #0x7e
  447d78:	b.ls	447dcc <argp_parse@@Base+0xd720>  // b.plast
  447d7c:	b	44801c <argp_parse@@Base+0xd970>
  447d80:	ldur	x1, [x29, #-64]
  447d84:	ldur	x2, [x29, #-32]
  447d88:	add	x0, x19, x22
  447d8c:	mov	w26, w15
  447d90:	mov	w21, w14
  447d94:	bl	404400 <bcmp@plt>
  447d98:	ldur	w9, [x29, #-68]
  447d9c:	ldur	w20, [x29, #-44]
  447da0:	cmp	w0, #0x0
  447da4:	cset	w8, ne  // ne = any
  447da8:	orr	w8, w8, w9
  447dac:	cset	w25, eq  // eq = none
  447db0:	tbz	w8, #0, 448728 <argp_parse@@Base+0xe07c>
  447db4:	ldp	w18, w17, [x29, #-52]
  447db8:	mov	w14, w21
  447dbc:	mov	w15, w26
  447dc0:	ldrb	w21, [x19, x22]
  447dc4:	cmp	w21, #0x7e
  447dc8:	b.hi	44801c <argp_parse@@Base+0xd970>  // b.pmore
  447dcc:	adrp	x13, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  447dd0:	add	x13, x13, #0xc8b
  447dd4:	adr	x12, 447df8 <argp_parse@@Base+0xd74c>
  447dd8:	ldrb	w9, [x13, x21]
  447ddc:	add	x12, x12, x9, lsl #2
  447de0:	mov	w10, wzr
  447de4:	mov	w8, wzr
  447de8:	mov	w26, #0x1                   	// #1
  447dec:	mov	w11, #0x6e                  	// #110
  447df0:	mov	w9, #0x61                  	// #97
  447df4:	br	x12
  447df8:	ldur	w9, [x29, #-24]
  447dfc:	tbnz	w9, #0, 447e1c <argp_parse@@Base+0xd770>
  447e00:	ldur	x10, [x29, #-40]
  447e04:	lsr	w9, w21, #5
  447e08:	ldr	w9, [x10, w9, uxtw #2]
  447e0c:	lsr	w9, w9, w21
  447e10:	tbz	w9, #0, 447e1c <argp_parse@@Base+0xd770>
  447e14:	mov	w9, w21
  447e18:	b	447e24 <argp_parse@@Base+0xd778>
  447e1c:	mov	w9, w21
  447e20:	cbz	w25, 44805c <argp_parse@@Base+0xd9b0>
  447e24:	tbnz	w17, #0, 4486e8 <argp_parse@@Base+0xe03c>
  447e28:	cmp	w20, #0x2
  447e2c:	cset	w8, ne  // ne = any
  447e30:	orr	w8, w8, w15
  447e34:	tbnz	w8, #0, 447e70 <argp_parse@@Base+0xd7c4>
  447e38:	cmp	x27, x24
  447e3c:	b.cs	447ea8 <argp_parse@@Base+0xd7fc>  // b.hs, b.nlast
  447e40:	mov	w8, #0x27                  	// #39
  447e44:	strb	w8, [x28, x27]
  447e48:	add	x8, x27, #0x1
  447e4c:	cmp	x8, x24
  447e50:	b.cc	447eb4 <argp_parse@@Base+0xd808>  // b.lo, b.ul, b.last
  447e54:	add	x8, x27, #0x2
  447e58:	cmp	x8, x24
  447e5c:	b.cs	447e68 <argp_parse@@Base+0xd7bc>  // b.hs, b.nlast
  447e60:	mov	w10, #0x27                  	// #39
  447e64:	strb	w10, [x28, x8]
  447e68:	add	x27, x27, #0x3
  447e6c:	mov	w15, #0x1                   	// #1
  447e70:	cmp	x27, x24
  447e74:	b.cs	447e80 <argp_parse@@Base+0xd7d4>  // b.hs, b.nlast
  447e78:	mov	w8, #0x5c                  	// #92
  447e7c:	strb	w8, [x28, x27]
  447e80:	add	x27, x27, #0x1
  447e84:	cmp	x27, x24
  447e88:	b.cs	447e90 <argp_parse@@Base+0xd7e4>  // b.hs, b.nlast
  447e8c:	strb	w9, [x28, x27]
  447e90:	add	x27, x27, #0x1
  447e94:	and	w14, w14, w26
  447e98:	add	x22, x22, #0x1
  447e9c:	cmn	x23, #0x1
  447ea0:	b.ne	447d10 <argp_parse@@Base+0xd664>  // b.any
  447ea4:	b	447d1c <argp_parse@@Base+0xd670>
  447ea8:	add	x8, x27, #0x1
  447eac:	cmp	x8, x24
  447eb0:	b.cs	447e54 <argp_parse@@Base+0xd7a8>  // b.hs, b.nlast
  447eb4:	mov	w10, #0x24                  	// #36
  447eb8:	strb	w10, [x28, x8]
  447ebc:	add	x8, x27, #0x2
  447ec0:	cmp	x8, x24
  447ec4:	b.cc	447e60 <argp_parse@@Base+0xd7b4>  // b.lo, b.ul, b.last
  447ec8:	b	447e68 <argp_parse@@Base+0xd7bc>
  447ecc:	cmp	x23, #0x1
  447ed0:	b.eq	447ef4 <argp_parse@@Base+0xd848>  // b.none
  447ed4:	cmn	x23, #0x1
  447ed8:	b.ne	447ef8 <argp_parse@@Base+0xd84c>  // b.any
  447edc:	ldrb	w8, [x19, #1]
  447ee0:	cbz	w8, 447ef4 <argp_parse@@Base+0xd848>
  447ee4:	mov	w8, wzr
  447ee8:	mov	w26, wzr
  447eec:	mov	x23, #0xffffffffffffffff    	// #-1
  447ef0:	b	447df8 <argp_parse@@Base+0xd74c>
  447ef4:	cbz	x22, 447f04 <argp_parse@@Base+0xd858>
  447ef8:	mov	w8, wzr
  447efc:	mov	w26, wzr
  447f00:	b	447df8 <argp_parse@@Base+0xd74c>
  447f04:	mov	w10, #0x1                   	// #1
  447f08:	cmp	w20, #0x2
  447f0c:	b.ne	447f14 <argp_parse@@Base+0xd868>  // b.any
  447f10:	tbnz	w17, #0, 4486e8 <argp_parse@@Base+0xe03c>
  447f14:	mov	w8, wzr
  447f18:	mov	w26, w10
  447f1c:	b	447df8 <argp_parse@@Base+0xd74c>
  447f20:	cmp	w20, #0x2
  447f24:	b.ne	448044 <argp_parse@@Base+0xd998>  // b.any
  447f28:	tbz	w17, #0, 448050 <argp_parse@@Base+0xd9a4>
  447f2c:	b	4486e8 <argp_parse@@Base+0xe03c>
  447f30:	mov	w9, #0x66                  	// #102
  447f34:	b	4480a0 <argp_parse@@Base+0xd9f4>
  447f38:	mov	w11, #0x74                  	// #116
  447f3c:	b	447f4c <argp_parse@@Base+0xd8a0>
  447f40:	mov	w9, #0x62                  	// #98
  447f44:	b	4480a0 <argp_parse@@Base+0xd9f4>
  447f48:	mov	w11, #0x72                  	// #114
  447f4c:	ldr	w8, [sp, #92]
  447f50:	mov	w9, w11
  447f54:	tbnz	w8, #0, 4480a0 <argp_parse@@Base+0xd9f4>
  447f58:	b	4486e8 <argp_parse@@Base+0xe03c>
  447f5c:	ldur	w8, [x29, #-72]
  447f60:	tbz	w8, #0, 4480b4 <argp_parse@@Base+0xda08>
  447f64:	cmp	w20, #0x2
  447f68:	tbnz	w17, #0, 4487f8 <argp_parse@@Base+0xe14c>
  447f6c:	cset	w8, ne  // ne = any
  447f70:	orr	w8, w8, w15
  447f74:	tbz	w8, #0, 448288 <argp_parse@@Base+0xdbdc>
  447f78:	mov	x8, x27
  447f7c:	cmp	x8, x24
  447f80:	b.cc	4482c8 <argp_parse@@Base+0xdc1c>  // b.lo, b.ul, b.last
  447f84:	b	4482d0 <argp_parse@@Base+0xdc24>
  447f88:	cmp	w20, #0x5
  447f8c:	b.eq	4481e8 <argp_parse@@Base+0xdb3c>  // b.none
  447f90:	cmp	w20, #0x2
  447f94:	b.ne	448278 <argp_parse@@Base+0xdbcc>  // b.any
  447f98:	tbz	w17, #0, 448278 <argp_parse@@Base+0xdbcc>
  447f9c:	b	4486e8 <argp_parse@@Base+0xe03c>
  447fa0:	mov	w9, #0x76                  	// #118
  447fa4:	b	4480a0 <argp_parse@@Base+0xd9f4>
  447fa8:	cmp	w20, #0x2
  447fac:	b.ne	4480c4 <argp_parse@@Base+0xda18>  // b.any
  447fb0:	tbnz	w17, #0, 4486e8 <argp_parse@@Base+0xe03c>
  447fb4:	ldr	x10, [sp, #72]
  447fb8:	cmp	x24, #0x0
  447fbc:	cset	w8, eq  // eq = none
  447fc0:	cmp	x10, #0x0
  447fc4:	cset	w9, ne  // ne = any
  447fc8:	orr	w8, w9, w8
  447fcc:	cmp	w8, #0x0
  447fd0:	csel	x10, x10, x24, ne  // ne = any
  447fd4:	csel	x24, x24, xzr, ne  // ne = any
  447fd8:	cmp	x27, x24
  447fdc:	str	x10, [sp, #72]
  447fe0:	b.cs	4481c4 <argp_parse@@Base+0xdb18>  // b.hs, b.nlast
  447fe4:	mov	w8, #0x27                  	// #39
  447fe8:	strb	w8, [x28, x27]
  447fec:	add	x8, x27, #0x1
  447ff0:	cmp	x8, x24
  447ff4:	b.cc	4481d0 <argp_parse@@Base+0xdb24>  // b.lo, b.ul, b.last
  447ff8:	add	x8, x27, #0x2
  447ffc:	cmp	x8, x24
  448000:	b.cs	44800c <argp_parse@@Base+0xd960>  // b.hs, b.nlast
  448004:	mov	w9, #0x27                  	// #39
  448008:	strb	w9, [x28, x8]
  44800c:	mov	w15, wzr
  448010:	mov	w8, wzr
  448014:	add	x27, x27, #0x3
  448018:	b	4480c8 <argp_parse@@Base+0xda1c>
  44801c:	ldr	x8, [sp, #32]
  448020:	stp	w15, w14, [sp, #24]
  448024:	cmp	x8, #0x1
  448028:	b.ne	4480dc <argp_parse@@Base+0xda30>  // b.any
  44802c:	bl	404640 <__ctype_b_loc@plt>
  448030:	ldr	x8, [x0]
  448034:	mov	w20, #0x1                   	// #1
  448038:	ldrh	w8, [x8, x21, lsl #1]
  44803c:	ubfx	w26, w8, #14, #1
  448040:	b	448438 <argp_parse@@Base+0xdd8c>
  448044:	ldr	w8, [sp, #64]
  448048:	mov	w9, #0x5c                  	// #92
  44804c:	tbz	w8, #0, 4480a0 <argp_parse@@Base+0xd9f4>
  448050:	mov	w8, wzr
  448054:	mov	w26, wzr
  448058:	mov	w21, #0x5c                  	// #92
  44805c:	tbnz	w8, #0, 448090 <argp_parse@@Base+0xd9e4>
  448060:	tbz	w15, #0, 448090 <argp_parse@@Base+0xd9e4>
  448064:	cmp	x27, x24
  448068:	b.cs	448074 <argp_parse@@Base+0xd9c8>  // b.hs, b.nlast
  44806c:	mov	w8, #0x27                  	// #39
  448070:	strb	w8, [x28, x27]
  448074:	add	x8, x27, #0x1
  448078:	cmp	x8, x24
  44807c:	b.cs	448088 <argp_parse@@Base+0xd9dc>  // b.hs, b.nlast
  448080:	mov	w9, #0x27                  	// #39
  448084:	strb	w9, [x28, x8]
  448088:	mov	w15, wzr
  44808c:	add	x27, x27, #0x2
  448090:	mov	w9, w21
  448094:	cmp	x27, x24
  448098:	b.cc	447e8c <argp_parse@@Base+0xd7e0>  // b.lo, b.ul, b.last
  44809c:	b	447e90 <argp_parse@@Base+0xd7e4>
  4480a0:	ldur	w10, [x29, #-72]
  4480a4:	mov	w8, wzr
  4480a8:	mov	w26, wzr
  4480ac:	tbz	w10, #0, 447df8 <argp_parse@@Base+0xd74c>
  4480b0:	b	447e24 <argp_parse@@Base+0xd778>
  4480b4:	ldr	w8, [sp, #88]
  4480b8:	tbnz	w8, #0, 447e98 <argp_parse@@Base+0xd7ec>
  4480bc:	mov	w21, wzr
  4480c0:	b	447ef8 <argp_parse@@Base+0xd84c>
  4480c4:	mov	w8, wzr
  4480c8:	mov	w9, #0x1                   	// #1
  4480cc:	mov	w21, #0x27                  	// #39
  4480d0:	str	w9, [sp, #84]
  4480d4:	mov	w26, #0x1                   	// #1
  4480d8:	b	447df8 <argp_parse@@Base+0xd74c>
  4480dc:	cmn	x23, #0x1
  4480e0:	stur	xzr, [x29, #-16]
  4480e4:	b.eq	44835c <argp_parse@@Base+0xdcb0>  // b.none
  4480e8:	ldr	w8, [sp, #60]
  4480ec:	stp	x23, x19, [sp, #40]
  4480f0:	tbz	w8, #0, 448374 <argp_parse@@Base+0xdcc8>
  4480f4:	ldur	x8, [x29, #-80]
  4480f8:	mov	x20, xzr
  4480fc:	mov	w26, #0x1                   	// #1
  448100:	add	x8, x8, x22
  448104:	str	x8, [sp, #16]
  448108:	b	448134 <argp_parse@@Base+0xda88>
  44810c:	ldur	w0, [x29, #-20]
  448110:	bl	404960 <iswprint@plt>
  448114:	cmp	w0, #0x0
  448118:	cset	w8, ne  // ne = any
  44811c:	sub	x0, x29, #0x10
  448120:	and	w26, w26, w8
  448124:	add	x20, x23, x20
  448128:	bl	404580 <mbsinit@plt>
  44812c:	ldr	x23, [sp, #40]
  448130:	cbnz	w0, 448434 <argp_parse@@Base+0xdd88>
  448134:	ldr	x8, [sp, #48]
  448138:	mov	x19, x28
  44813c:	add	x28, x20, x22
  448140:	sub	x2, x23, x28
  448144:	add	x1, x8, x28
  448148:	sub	x0, x29, #0x14
  44814c:	sub	x3, x29, #0x10
  448150:	bl	44addc <argp_parse@@Base+0x10730>
  448154:	cmn	x0, #0x2
  448158:	b.eq	4483f4 <argp_parse@@Base+0xdd48>  // b.none
  44815c:	mov	x23, x0
  448160:	cmn	x0, #0x1
  448164:	b.eq	4483e4 <argp_parse@@Base+0xdd38>  // b.none
  448168:	mov	x28, x19
  44816c:	cbz	x23, 4483ec <argp_parse@@Base+0xdd40>
  448170:	ldr	x19, [sp, #48]
  448174:	cmp	x23, #0x2
  448178:	b.cc	44810c <argp_parse@@Base+0xda60>  // b.lo, b.ul, b.last
  44817c:	ldr	x9, [sp, #16]
  448180:	sub	x8, x23, #0x1
  448184:	add	x9, x9, x20
  448188:	b	448198 <argp_parse@@Base+0xdaec>
  44818c:	subs	x8, x8, #0x1
  448190:	add	x9, x9, #0x1
  448194:	b.eq	44810c <argp_parse@@Base+0xda60>  // b.none
  448198:	ldrb	w10, [x9]
  44819c:	sub	w10, w10, #0x5b
  4481a0:	cmp	w10, #0x21
  4481a4:	b.hi	44818c <argp_parse@@Base+0xdae0>  // b.pmore
  4481a8:	mov	w11, #0x1                   	// #1
  4481ac:	lsl	x10, x11, x10
  4481b0:	mov	x11, #0x2b                  	// #43
  4481b4:	movk	x11, #0x2, lsl #32
  4481b8:	tst	x10, x11
  4481bc:	b.eq	44818c <argp_parse@@Base+0xdae0>  // b.none
  4481c0:	b	448710 <argp_parse@@Base+0xe064>
  4481c4:	add	x8, x27, #0x1
  4481c8:	cmp	x8, x24
  4481cc:	b.cs	447ff8 <argp_parse@@Base+0xd94c>  // b.hs, b.nlast
  4481d0:	mov	w9, #0x5c                  	// #92
  4481d4:	strb	w9, [x28, x8]
  4481d8:	add	x8, x27, #0x2
  4481dc:	cmp	x8, x24
  4481e0:	b.cc	448004 <argp_parse@@Base+0xd958>  // b.lo, b.ul, b.last
  4481e4:	b	44800c <argp_parse@@Base+0xd960>
  4481e8:	ldr	w8, [sp, #88]
  4481ec:	tbz	w8, #2, 448278 <argp_parse@@Base+0xdbcc>
  4481f0:	add	x9, x22, #0x2
  4481f4:	cmp	x9, x23
  4481f8:	b.cs	448278 <argp_parse@@Base+0xdbcc>  // b.hs, b.nlast
  4481fc:	add	x8, x22, x19
  448200:	ldrb	w8, [x8, #1]
  448204:	cmp	w8, #0x3f
  448208:	b.ne	448278 <argp_parse@@Base+0xdbcc>  // b.any
  44820c:	ldrb	w21, [x19, x9]
  448210:	mov	w8, wzr
  448214:	cmp	w21, #0x3e
  448218:	b.hi	448654 <argp_parse@@Base+0xdfa8>  // b.pmore
  44821c:	mov	w10, #0x1                   	// #1
  448220:	mov	x11, #0xa38200000000        	// #179778741075968
  448224:	lsl	x10, x10, x21
  448228:	movk	x11, #0x7000, lsl #48
  44822c:	tst	x10, x11
  448230:	b.eq	448654 <argp_parse@@Base+0xdfa8>  // b.none
  448234:	tbnz	w17, #0, 4486e8 <argp_parse@@Base+0xe03c>
  448238:	cmp	x27, x24
  44823c:	b.cs	44860c <argp_parse@@Base+0xdf60>  // b.hs, b.nlast
  448240:	mov	w8, #0x3f                  	// #63
  448244:	strb	w8, [x28, x27]
  448248:	add	x8, x27, #0x1
  44824c:	cmp	x8, x24
  448250:	b.cc	448618 <argp_parse@@Base+0xdf6c>  // b.lo, b.ul, b.last
  448254:	add	x8, x27, #0x2
  448258:	cmp	x8, x24
  44825c:	b.cs	44862c <argp_parse@@Base+0xdf80>  // b.hs, b.nlast
  448260:	mov	w10, #0x22                  	// #34
  448264:	strb	w10, [x28, x8]
  448268:	add	x8, x27, #0x3
  44826c:	cmp	x8, x24
  448270:	b.cc	448638 <argp_parse@@Base+0xdf8c>  // b.lo, b.ul, b.last
  448274:	b	448640 <argp_parse@@Base+0xdf94>
  448278:	mov	w8, wzr
  44827c:	mov	w26, wzr
  448280:	mov	w21, #0x3f                  	// #63
  448284:	b	447df8 <argp_parse@@Base+0xd74c>
  448288:	cmp	x27, x24
  44828c:	b.cs	448338 <argp_parse@@Base+0xdc8c>  // b.hs, b.nlast
  448290:	mov	w8, #0x27                  	// #39
  448294:	strb	w8, [x28, x27]
  448298:	add	x8, x27, #0x1
  44829c:	cmp	x8, x24
  4482a0:	b.cc	448344 <argp_parse@@Base+0xdc98>  // b.lo, b.ul, b.last
  4482a4:	add	x8, x27, #0x2
  4482a8:	cmp	x8, x24
  4482ac:	b.cs	4482b8 <argp_parse@@Base+0xdc0c>  // b.hs, b.nlast
  4482b0:	mov	w9, #0x27                  	// #39
  4482b4:	strb	w9, [x28, x8]
  4482b8:	add	x8, x27, #0x3
  4482bc:	mov	w15, #0x1                   	// #1
  4482c0:	cmp	x8, x24
  4482c4:	b.cs	4482d0 <argp_parse@@Base+0xdc24>  // b.hs, b.nlast
  4482c8:	mov	w9, #0x5c                  	// #92
  4482cc:	strb	w9, [x28, x8]
  4482d0:	cmp	w20, #0x2
  4482d4:	add	x27, x8, #0x1
  4482d8:	b.eq	448328 <argp_parse@@Base+0xdc7c>  // b.none
  4482dc:	add	x9, x22, #0x1
  4482e0:	cmp	x9, x23
  4482e4:	b.cs	448328 <argp_parse@@Base+0xdc7c>  // b.hs, b.nlast
  4482e8:	ldrb	w9, [x19, x9]
  4482ec:	sub	w9, w9, #0x30
  4482f0:	cmp	w9, #0x9
  4482f4:	b.hi	448328 <argp_parse@@Base+0xdc7c>  // b.pmore
  4482f8:	cmp	x27, x24
  4482fc:	b.cs	448308 <argp_parse@@Base+0xdc5c>  // b.hs, b.nlast
  448300:	mov	w9, #0x30                  	// #48
  448304:	strb	w9, [x28, x27]
  448308:	add	x9, x8, #0x2
  44830c:	cmp	x9, x24
  448310:	b.cs	44831c <argp_parse@@Base+0xdc70>  // b.hs, b.nlast
  448314:	mov	w10, #0x30                  	// #48
  448318:	strb	w10, [x28, x9]
  44831c:	mov	w26, wzr
  448320:	add	x27, x8, #0x3
  448324:	b	44832c <argp_parse@@Base+0xdc80>
  448328:	mov	w26, wzr
  44832c:	mov	w8, #0x1                   	// #1
  448330:	mov	w21, #0x30                  	// #48
  448334:	b	447df8 <argp_parse@@Base+0xd74c>
  448338:	add	x8, x27, #0x1
  44833c:	cmp	x8, x24
  448340:	b.cs	4482a4 <argp_parse@@Base+0xdbf8>  // b.hs, b.nlast
  448344:	mov	w9, #0x24                  	// #36
  448348:	strb	w9, [x28, x8]
  44834c:	add	x8, x27, #0x2
  448350:	cmp	x8, x24
  448354:	b.cc	4482b0 <argp_parse@@Base+0xdc04>  // b.lo, b.ul, b.last
  448358:	b	4482b8 <argp_parse@@Base+0xdc0c>
  44835c:	mov	x0, x19
  448360:	bl	403f00 <strlen@plt>
  448364:	mov	x23, x0
  448368:	ldr	w8, [sp, #60]
  44836c:	stp	x23, x19, [sp, #40]
  448370:	tbnz	w8, #0, 4480f4 <argp_parse@@Base+0xda48>
  448374:	mov	x20, xzr
  448378:	mov	w26, #0x1                   	// #1
  44837c:	ldr	x8, [sp, #48]
  448380:	mov	x19, x28
  448384:	add	x28, x20, x22
  448388:	sub	x2, x23, x28
  44838c:	add	x1, x8, x28
  448390:	sub	x0, x29, #0x14
  448394:	sub	x3, x29, #0x10
  448398:	bl	44addc <argp_parse@@Base+0x10730>
  44839c:	cmn	x0, #0x2
  4483a0:	b.eq	4483f4 <argp_parse@@Base+0xdd48>  // b.none
  4483a4:	mov	x23, x0
  4483a8:	cmn	x0, #0x1
  4483ac:	b.eq	4483e4 <argp_parse@@Base+0xdd38>  // b.none
  4483b0:	mov	x28, x19
  4483b4:	cbz	x23, 4483ec <argp_parse@@Base+0xdd40>
  4483b8:	ldur	w0, [x29, #-20]
  4483bc:	bl	404960 <iswprint@plt>
  4483c0:	cmp	w0, #0x0
  4483c4:	cset	w8, ne  // ne = any
  4483c8:	sub	x0, x29, #0x10
  4483cc:	and	w26, w26, w8
  4483d0:	add	x20, x23, x20
  4483d4:	bl	404580 <mbsinit@plt>
  4483d8:	ldr	x23, [sp, #40]
  4483dc:	cbz	w0, 44837c <argp_parse@@Base+0xdcd0>
  4483e0:	b	448434 <argp_parse@@Base+0xdd88>
  4483e4:	mov	w26, wzr
  4483e8:	mov	x28, x19
  4483ec:	ldr	x23, [sp, #40]
  4483f0:	b	448434 <argp_parse@@Base+0xdd88>
  4483f4:	ldr	x23, [sp, #40]
  4483f8:	cmp	x28, x23
  4483fc:	b.cs	44842c <argp_parse@@Base+0xdd80>  // b.hs, b.nlast
  448400:	sub	x8, x23, x22
  448404:	ldr	x9, [sp, #48]
  448408:	ldrb	w9, [x9, x28]
  44840c:	cbz	w9, 44842c <argp_parse@@Base+0xdd80>
  448410:	add	x20, x20, #0x1
  448414:	add	x28, x20, x22
  448418:	cmp	x28, x23
  44841c:	b.cc	448404 <argp_parse@@Base+0xdd58>  // b.lo, b.ul, b.last
  448420:	mov	w26, wzr
  448424:	mov	x20, x8
  448428:	b	448430 <argp_parse@@Base+0xdd84>
  44842c:	mov	w26, wzr
  448430:	mov	x28, x19
  448434:	ldr	x19, [sp, #48]
  448438:	ldr	w8, [sp, #68]
  44843c:	ldp	w15, w14, [sp, #24]
  448440:	ldp	w18, w17, [x29, #-52]
  448444:	cmp	x20, #0x1
  448448:	orr	w8, w26, w8
  44844c:	b.hi	448460 <argp_parse@@Base+0xddb4>  // b.pmore
  448450:	tbz	w8, #0, 448460 <argp_parse@@Base+0xddb4>
  448454:	ldur	w20, [x29, #-44]
  448458:	mov	w8, wzr
  44845c:	b	447df8 <argp_parse@@Base+0xd74c>
  448460:	add	x9, x20, x22
  448464:	ldur	w20, [x29, #-44]
  448468:	mov	w10, wzr
  44846c:	b	448480 <argp_parse@@Base+0xddd4>
  448470:	ldur	x12, [x29, #-80]
  448474:	add	x27, x27, #0x1
  448478:	ldrb	w21, [x12, x22]
  44847c:	mov	x22, x11
  448480:	tbz	w8, #0, 4484b0 <argp_parse@@Base+0xde04>
  448484:	tbz	w25, #0, 44851c <argp_parse@@Base+0xde70>
  448488:	cmp	x27, x24
  44848c:	b.cs	448498 <argp_parse@@Base+0xddec>  // b.hs, b.nlast
  448490:	mov	w11, #0x5c                  	// #92
  448494:	strb	w11, [x28, x27]
  448498:	mov	w25, wzr
  44849c:	add	x27, x27, #0x1
  4484a0:	add	x11, x22, #0x1
  4484a4:	cmp	x9, x11
  4484a8:	b.hi	44852c <argp_parse@@Base+0xde80>  // b.pmore
  4484ac:	b	448600 <argp_parse@@Base+0xdf54>
  4484b0:	tbnz	w17, #0, 4486e8 <argp_parse@@Base+0xe03c>
  4484b4:	cmp	w20, #0x2
  4484b8:	cset	w10, ne  // ne = any
  4484bc:	orr	w10, w10, w15
  4484c0:	tbz	w10, #0, 448574 <argp_parse@@Base+0xdec8>
  4484c4:	cmp	x27, x24
  4484c8:	b.cs	4485b4 <argp_parse@@Base+0xdf08>  // b.hs, b.nlast
  4484cc:	mov	w10, #0x5c                  	// #92
  4484d0:	strb	w10, [x28, x27]
  4484d4:	add	x10, x27, #0x1
  4484d8:	cmp	x10, x24
  4484dc:	b.cc	4485c0 <argp_parse@@Base+0xdf14>  // b.lo, b.ul, b.last
  4484e0:	add	x10, x27, #0x2
  4484e4:	cmp	x10, x24
  4484e8:	b.cs	4484f8 <argp_parse@@Base+0xde4c>  // b.hs, b.nlast
  4484ec:	mov	w11, #0x30                  	// #48
  4484f0:	bfxil	w11, w21, #3, #3
  4484f4:	strb	w11, [x28, x10]
  4484f8:	mov	w11, #0x30                  	// #48
  4484fc:	bfxil	w11, w21, #0, #3
  448500:	add	x27, x27, #0x3
  448504:	mov	w10, #0x1                   	// #1
  448508:	mov	w21, w11
  44850c:	add	x11, x22, #0x1
  448510:	cmp	x9, x11
  448514:	b.hi	44852c <argp_parse@@Base+0xde80>  // b.pmore
  448518:	b	448600 <argp_parse@@Base+0xdf54>
  44851c:	mov	w25, wzr
  448520:	add	x11, x22, #0x1
  448524:	cmp	x9, x11
  448528:	b.ls	448600 <argp_parse@@Base+0xdf54>  // b.plast
  44852c:	and	w12, w10, #0x1
  448530:	orn	w12, w12, w15
  448534:	tbnz	w12, #0, 448564 <argp_parse@@Base+0xdeb8>
  448538:	cmp	x27, x24
  44853c:	b.cs	448548 <argp_parse@@Base+0xde9c>  // b.hs, b.nlast
  448540:	mov	w12, #0x27                  	// #39
  448544:	strb	w12, [x28, x27]
  448548:	add	x12, x27, #0x1
  44854c:	cmp	x12, x24
  448550:	b.cs	44855c <argp_parse@@Base+0xdeb0>  // b.hs, b.nlast
  448554:	mov	w13, #0x27                  	// #39
  448558:	strb	w13, [x28, x12]
  44855c:	mov	w15, wzr
  448560:	add	x27, x27, #0x2
  448564:	cmp	x27, x24
  448568:	b.cs	448470 <argp_parse@@Base+0xddc4>  // b.hs, b.nlast
  44856c:	strb	w21, [x28, x27]
  448570:	b	448470 <argp_parse@@Base+0xddc4>
  448574:	cmp	x27, x24
  448578:	b.cs	4485dc <argp_parse@@Base+0xdf30>  // b.hs, b.nlast
  44857c:	mov	w10, #0x27                  	// #39
  448580:	strb	w10, [x28, x27]
  448584:	add	x10, x27, #0x1
  448588:	cmp	x10, x24
  44858c:	b.cc	4485e8 <argp_parse@@Base+0xdf3c>  // b.lo, b.ul, b.last
  448590:	add	x10, x27, #0x2
  448594:	cmp	x10, x24
  448598:	b.cs	4485a4 <argp_parse@@Base+0xdef8>  // b.hs, b.nlast
  44859c:	mov	w11, #0x27                  	// #39
  4485a0:	strb	w11, [x28, x10]
  4485a4:	add	x27, x27, #0x3
  4485a8:	mov	w15, #0x1                   	// #1
  4485ac:	cmp	x27, x24
  4485b0:	b.cc	4484cc <argp_parse@@Base+0xde20>  // b.lo, b.ul, b.last
  4485b4:	add	x10, x27, #0x1
  4485b8:	cmp	x10, x24
  4485bc:	b.cs	4484e0 <argp_parse@@Base+0xde34>  // b.hs, b.nlast
  4485c0:	mov	w11, #0x30                  	// #48
  4485c4:	bfxil	w11, w21, #6, #2
  4485c8:	strb	w11, [x28, x10]
  4485cc:	add	x10, x27, #0x2
  4485d0:	cmp	x10, x24
  4485d4:	b.cc	4484ec <argp_parse@@Base+0xde40>  // b.lo, b.ul, b.last
  4485d8:	b	4484f8 <argp_parse@@Base+0xde4c>
  4485dc:	add	x10, x27, #0x1
  4485e0:	cmp	x10, x24
  4485e4:	b.cs	448590 <argp_parse@@Base+0xdee4>  // b.hs, b.nlast
  4485e8:	mov	w11, #0x24                  	// #36
  4485ec:	strb	w11, [x28, x10]
  4485f0:	add	x10, x27, #0x2
  4485f4:	cmp	x10, x24
  4485f8:	b.cc	44859c <argp_parse@@Base+0xdef0>  // b.lo, b.ul, b.last
  4485fc:	b	4485a4 <argp_parse@@Base+0xdef8>
  448600:	and	w8, w10, #0x1
  448604:	tbz	w8, #0, 448060 <argp_parse@@Base+0xd9b4>
  448608:	b	448090 <argp_parse@@Base+0xd9e4>
  44860c:	add	x8, x27, #0x1
  448610:	cmp	x8, x24
  448614:	b.cs	448254 <argp_parse@@Base+0xdba8>  // b.hs, b.nlast
  448618:	mov	w10, #0x22                  	// #34
  44861c:	strb	w10, [x28, x8]
  448620:	add	x8, x27, #0x2
  448624:	cmp	x8, x24
  448628:	b.cc	448260 <argp_parse@@Base+0xdbb4>  // b.lo, b.ul, b.last
  44862c:	add	x8, x27, #0x3
  448630:	cmp	x8, x24
  448634:	b.cs	448640 <argp_parse@@Base+0xdf94>  // b.hs, b.nlast
  448638:	mov	w10, #0x3f                  	// #63
  44863c:	strb	w10, [x28, x8]
  448640:	mov	w8, wzr
  448644:	mov	w26, wzr
  448648:	add	x27, x27, #0x4
  44864c:	mov	x22, x9
  448650:	b	447df8 <argp_parse@@Base+0xd74c>
  448654:	mov	w21, #0x3f                  	// #63
  448658:	mov	w26, w8
  44865c:	b	447df8 <argp_parse@@Base+0xd74c>
  448660:	mov	x23, x22
  448664:	b	44866c <argp_parse@@Base+0xdfc0>
  448668:	mov	x23, #0xffffffffffffffff    	// #-1
  44866c:	cmp	w20, #0x2
  448670:	cset	w8, eq  // eq = none
  448674:	cmp	x27, #0x0
  448678:	cset	w9, eq  // eq = none
  44867c:	and	w8, w8, w9
  448680:	and	w8, w17, w8
  448684:	tbnz	w8, #0, 4486e8 <argp_parse@@Base+0xe03c>
  448688:	cmp	w20, #0x2
  44868c:	cset	w8, ne  // ne = any
  448690:	orr	w8, w17, w8
  448694:	tbnz	w8, #0, 4487b0 <argp_parse@@Base+0xe104>
  448698:	ldr	w8, [sp, #84]
  44869c:	eor	w8, w8, #0x1
  4486a0:	tbnz	w8, #0, 4487b0 <argp_parse@@Base+0xe104>
  4486a4:	mov	x22, x23
  4486a8:	tbnz	w14, #0, 448780 <argp_parse@@Base+0xe0d4>
  4486ac:	ldr	x23, [sp, #72]
  4486b0:	mov	w21, wzr
  4486b4:	cbz	x23, 4487ac <argp_parse@@Base+0xe100>
  4486b8:	ldur	w8, [x29, #-72]
  4486bc:	mov	w20, #0x2                   	// #2
  4486c0:	mov	w14, w21
  4486c4:	mov	w17, w21
  4486c8:	cbz	x24, 4478d4 <argp_parse@@Base+0xd228>
  4486cc:	b	4487b0 <argp_parse@@Base+0xe104>
  4486d0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4486d4:	add	x20, x20, #0xde0
  4486d8:	b	447b08 <argp_parse@@Base+0xd45c>
  4486dc:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4486e0:	add	x8, x8, #0xde4
  4486e4:	b	447b9c <argp_parse@@Base+0xd4f0>
  4486e8:	ldur	w8, [x29, #-72]
  4486ec:	ldr	x7, [sp, #96]
  4486f0:	mov	w9, #0x4                   	// #4
  4486f4:	tst	w8, #0x1
  4486f8:	mov	w8, #0x2                   	// #2
  4486fc:	csel	w8, w9, w8, ne  // ne = any
  448700:	cmp	w20, #0x2
  448704:	b.ne	44872c <argp_parse@@Base+0xe080>  // b.any
  448708:	mov	w20, w8
  44870c:	b	44872c <argp_parse@@Base+0xe080>
  448710:	ldur	w8, [x29, #-72]
  448714:	ldr	x23, [sp, #40]
  448718:	mov	w9, #0x4                   	// #4
  44871c:	tst	w8, #0x1
  448720:	mov	w8, #0x2                   	// #2
  448724:	csel	w20, w9, w8, ne  // ne = any
  448728:	ldr	x7, [sp, #96]
  44872c:	ldr	w8, [sp, #88]
  448730:	mov	x0, x28
  448734:	mov	x1, x24
  448738:	mov	x2, x19
  44873c:	and	w5, w8, #0xfffffffd
  448740:	ldur	x8, [x29, #-88]
  448744:	mov	x3, x23
  448748:	mov	w4, w20
  44874c:	mov	x6, xzr
  448750:	str	x8, [sp]
  448754:	bl	447858 <argp_parse@@Base+0xd1ac>
  448758:	mov	x27, x0
  44875c:	mov	x0, x27
  448760:	ldp	x20, x19, [sp, #272]
  448764:	ldp	x22, x21, [sp, #256]
  448768:	ldp	x24, x23, [sp, #240]
  44876c:	ldp	x26, x25, [sp, #224]
  448770:	ldp	x28, x27, [sp, #208]
  448774:	ldp	x29, x30, [sp, #192]
  448778:	add	sp, sp, #0x120
  44877c:	ret
  448780:	ldur	x8, [x29, #-88]
  448784:	ldr	x1, [sp, #72]
  448788:	ldr	w5, [sp, #88]
  44878c:	ldur	x6, [x29, #-40]
  448790:	ldr	x7, [sp, #96]
  448794:	mov	w4, #0x5                   	// #5
  448798:	str	x8, [sp]
  44879c:	mov	x0, x28
  4487a0:	mov	x2, x19
  4487a4:	mov	x3, x22
  4487a8:	b	448754 <argp_parse@@Base+0xe0a8>
  4487ac:	mov	w17, w21
  4487b0:	ldur	x8, [x29, #-64]
  4487b4:	cbz	x8, 4487e8 <argp_parse@@Base+0xe13c>
  4487b8:	tbnz	w17, #0, 4487e8 <argp_parse@@Base+0xe13c>
  4487bc:	ldrb	w9, [x8]
  4487c0:	cbz	w9, 4487e8 <argp_parse@@Base+0xe13c>
  4487c4:	add	x8, x8, #0x1
  4487c8:	b	4487d8 <argp_parse@@Base+0xe12c>
  4487cc:	ldrb	w9, [x8], #1
  4487d0:	add	x27, x27, #0x1
  4487d4:	cbz	w9, 4487e8 <argp_parse@@Base+0xe13c>
  4487d8:	cmp	x27, x24
  4487dc:	b.cs	4487cc <argp_parse@@Base+0xe120>  // b.hs, b.nlast
  4487e0:	strb	w9, [x28, x27]
  4487e4:	b	4487cc <argp_parse@@Base+0xe120>
  4487e8:	cmp	x27, x24
  4487ec:	b.cs	44875c <argp_parse@@Base+0xe0b0>  // b.hs, b.nlast
  4487f0:	strb	wzr, [x28, x27]
  4487f4:	b	44875c <argp_parse@@Base+0xe0b0>
  4487f8:	b.ne	448728 <argp_parse@@Base+0xe07c>  // b.any
  4487fc:	mov	w20, #0x4                   	// #4
  448800:	b	448728 <argp_parse@@Base+0xe07c>
  448804:	bl	404560 <abort@plt>
  448808:	sub	sp, sp, #0x60
  44880c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448810:	add	x8, x8, #0x990
  448814:	cmp	x2, #0x0
  448818:	stp	x29, x30, [sp, #16]
  44881c:	stp	x26, x25, [sp, #32]
  448820:	stp	x24, x23, [sp, #48]
  448824:	stp	x22, x21, [sp, #64]
  448828:	stp	x20, x19, [sp, #80]
  44882c:	add	x29, sp, #0x10
  448830:	mov	x19, x1
  448834:	mov	x20, x0
  448838:	csel	x25, x8, x2, eq  // eq = none
  44883c:	bl	4049c0 <__errno_location@plt>
  448840:	ldp	w4, w8, [x25]
  448844:	ldp	x7, x9, [x25, #40]
  448848:	ldr	w26, [x0]
  44884c:	add	x23, x25, #0x8
  448850:	orr	w22, w8, #0x1
  448854:	mov	x21, x0
  448858:	mov	x0, xzr
  44885c:	mov	x1, xzr
  448860:	mov	x2, x20
  448864:	mov	x3, x19
  448868:	mov	w5, w22
  44886c:	mov	x6, x23
  448870:	str	x9, [sp]
  448874:	bl	447858 <argp_parse@@Base+0xd1ac>
  448878:	add	x24, x0, #0x1
  44887c:	mov	x0, x24
  448880:	bl	44a010 <argp_parse@@Base+0xf964>
  448884:	ldr	w4, [x25]
  448888:	ldp	x7, x8, [x25, #40]
  44888c:	mov	x1, x24
  448890:	mov	x2, x20
  448894:	mov	x3, x19
  448898:	mov	w5, w22
  44889c:	mov	x6, x23
  4488a0:	mov	x25, x0
  4488a4:	str	x8, [sp]
  4488a8:	bl	447858 <argp_parse@@Base+0xd1ac>
  4488ac:	str	w26, [x21]
  4488b0:	mov	x0, x25
  4488b4:	ldp	x20, x19, [sp, #80]
  4488b8:	ldp	x22, x21, [sp, #64]
  4488bc:	ldp	x24, x23, [sp, #48]
  4488c0:	ldp	x26, x25, [sp, #32]
  4488c4:	ldp	x29, x30, [sp, #16]
  4488c8:	add	sp, sp, #0x60
  4488cc:	ret
  4488d0:	sub	sp, sp, #0x70
  4488d4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4488d8:	add	x8, x8, #0x990
  4488dc:	cmp	x3, #0x0
  4488e0:	stp	x29, x30, [sp, #16]
  4488e4:	stp	x28, x27, [sp, #32]
  4488e8:	stp	x26, x25, [sp, #48]
  4488ec:	stp	x24, x23, [sp, #64]
  4488f0:	stp	x22, x21, [sp, #80]
  4488f4:	stp	x20, x19, [sp, #96]
  4488f8:	add	x29, sp, #0x10
  4488fc:	mov	x19, x2
  448900:	mov	x22, x1
  448904:	mov	x23, x0
  448908:	csel	x21, x8, x3, eq  // eq = none
  44890c:	bl	4049c0 <__errno_location@plt>
  448910:	ldp	w4, w8, [x21]
  448914:	cmp	x19, #0x0
  448918:	ldp	x7, x9, [x21, #40]
  44891c:	ldr	w28, [x0]
  448920:	cset	w10, eq  // eq = none
  448924:	orr	w25, w8, w10
  448928:	add	x26, x21, #0x8
  44892c:	mov	x24, x0
  448930:	mov	x0, xzr
  448934:	mov	x1, xzr
  448938:	mov	x2, x23
  44893c:	mov	x3, x22
  448940:	mov	w5, w25
  448944:	mov	x6, x26
  448948:	str	x9, [sp]
  44894c:	bl	447858 <argp_parse@@Base+0xd1ac>
  448950:	add	x27, x0, #0x1
  448954:	mov	x20, x0
  448958:	mov	x0, x27
  44895c:	bl	44a010 <argp_parse@@Base+0xf964>
  448960:	ldr	w4, [x21]
  448964:	ldp	x7, x8, [x21, #40]
  448968:	mov	x1, x27
  44896c:	mov	x2, x23
  448970:	mov	x3, x22
  448974:	mov	w5, w25
  448978:	mov	x6, x26
  44897c:	mov	x21, x0
  448980:	str	x8, [sp]
  448984:	bl	447858 <argp_parse@@Base+0xd1ac>
  448988:	str	w28, [x24]
  44898c:	cbz	x19, 448994 <argp_parse@@Base+0xe2e8>
  448990:	str	x20, [x19]
  448994:	mov	x0, x21
  448998:	ldp	x20, x19, [sp, #96]
  44899c:	ldp	x22, x21, [sp, #80]
  4489a0:	ldp	x24, x23, [sp, #64]
  4489a4:	ldp	x26, x25, [sp, #48]
  4489a8:	ldp	x28, x27, [sp, #32]
  4489ac:	ldp	x29, x30, [sp, #16]
  4489b0:	add	sp, sp, #0x70
  4489b4:	ret
  4489b8:	stp	x29, x30, [sp, #-48]!
  4489bc:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4489c0:	add	x8, x8, #0x18
  4489c4:	ldr	w9, [x8]
  4489c8:	stp	x20, x19, [sp, #32]
  4489cc:	ldr	x19, [x8, #8]
  4489d0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4489d4:	cmp	w9, #0x2
  4489d8:	stp	x22, x21, [sp, #16]
  4489dc:	mov	x29, sp
  4489e0:	b.lt	448a04 <argp_parse@@Base+0xe358>  // b.tstop
  4489e4:	add	x21, x19, #0x18
  4489e8:	mov	w22, #0x1                   	// #1
  4489ec:	ldr	x0, [x21], #16
  4489f0:	bl	4046b0 <free@plt>
  4489f4:	ldrsw	x8, [x20, #24]
  4489f8:	add	x22, x22, #0x1
  4489fc:	cmp	x22, x8
  448a00:	b.lt	4489ec <argp_parse@@Base+0xe340>  // b.tstop
  448a04:	ldr	x0, [x19, #8]
  448a08:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448a0c:	add	x21, x21, #0x9c8
  448a10:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448a14:	cmp	x0, x21
  448a18:	add	x22, x22, #0x28
  448a1c:	b.eq	448a2c <argp_parse@@Base+0xe380>  // b.none
  448a20:	bl	4046b0 <free@plt>
  448a24:	mov	w8, #0x100                 	// #256
  448a28:	stp	x8, x21, [x22]
  448a2c:	cmp	x19, x22
  448a30:	b.eq	448a4c <argp_parse@@Base+0xe3a0>  // b.none
  448a34:	mov	x0, x19
  448a38:	bl	4046b0 <free@plt>
  448a3c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448a40:	add	x8, x8, #0x20
  448a44:	add	x9, x8, #0x8
  448a48:	str	x9, [x8]
  448a4c:	mov	w8, #0x1                   	// #1
  448a50:	str	w8, [x20, #24]
  448a54:	ldp	x20, x19, [sp, #32]
  448a58:	ldp	x22, x21, [sp, #16]
  448a5c:	ldp	x29, x30, [sp], #48
  448a60:	ret
  448a64:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448a68:	add	x3, x3, #0x990
  448a6c:	mov	x2, #0xffffffffffffffff    	// #-1
  448a70:	b	448a74 <argp_parse@@Base+0xe3c8>
  448a74:	sub	sp, sp, #0x80
  448a78:	stp	x29, x30, [sp, #32]
  448a7c:	add	x29, sp, #0x20
  448a80:	stp	x28, x27, [sp, #48]
  448a84:	stp	x26, x25, [sp, #64]
  448a88:	stp	x24, x23, [sp, #80]
  448a8c:	stp	x22, x21, [sp, #96]
  448a90:	stp	x20, x19, [sp, #112]
  448a94:	mov	x22, x3
  448a98:	stur	x2, [x29, #-8]
  448a9c:	mov	x21, x1
  448aa0:	mov	w23, w0
  448aa4:	bl	4049c0 <__errno_location@plt>
  448aa8:	tbnz	w23, #31, 448c04 <argp_parse@@Base+0xe558>
  448aac:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448ab0:	ldr	w8, [x25, #24]
  448ab4:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448ab8:	ldr	w20, [x0]
  448abc:	ldr	x27, [x9, #32]
  448ac0:	mov	x19, x0
  448ac4:	cmp	w8, w23
  448ac8:	b.gt	448b40 <argp_parse@@Base+0xe494>
  448acc:	mov	w8, #0x7fffffff            	// #2147483647
  448ad0:	cmp	w23, w8
  448ad4:	stur	w20, [x29, #-12]
  448ad8:	b.eq	448c08 <argp_parse@@Base+0xe55c>  // b.none
  448adc:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448ae0:	add	x28, x28, #0x20
  448ae4:	add	x20, x28, #0x8
  448ae8:	add	w26, w23, #0x1
  448aec:	cmp	x27, x20
  448af0:	csel	x0, xzr, x27, eq  // eq = none
  448af4:	sbfiz	x1, x26, #4, #32
  448af8:	bl	44a090 <argp_parse@@Base+0xf9e4>
  448afc:	mov	x24, x0
  448b00:	cmp	x27, x20
  448b04:	str	x0, [x28]
  448b08:	b.ne	448b1c <argp_parse@@Base+0xe470>  // b.any
  448b0c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448b10:	add	x8, x8, #0x28
  448b14:	ldr	q0, [x8]
  448b18:	str	q0, [x24]
  448b1c:	ldrsw	x8, [x25, #24]
  448b20:	mov	w1, wzr
  448b24:	add	x0, x24, x8, lsl #4
  448b28:	sub	w8, w26, w8
  448b2c:	sbfiz	x2, x8, #4, #32
  448b30:	bl	404320 <memset@plt>
  448b34:	ldur	w20, [x29, #-12]
  448b38:	mov	x27, x24
  448b3c:	str	w26, [x25, #24]
  448b40:	add	x28, x27, w23, uxtw #4
  448b44:	mov	x27, x28
  448b48:	ldr	x26, [x28]
  448b4c:	ldr	x23, [x27, #8]!
  448b50:	ldp	w4, w8, [x22]
  448b54:	ldp	x7, x9, [x22, #40]
  448b58:	ldur	x3, [x29, #-8]
  448b5c:	add	x24, x22, #0x8
  448b60:	orr	w25, w8, #0x1
  448b64:	mov	x0, x23
  448b68:	mov	x1, x26
  448b6c:	mov	x2, x21
  448b70:	mov	w5, w25
  448b74:	mov	x6, x24
  448b78:	str	x9, [sp]
  448b7c:	bl	447858 <argp_parse@@Base+0xd1ac>
  448b80:	cmp	x26, x0
  448b84:	b.hi	448bdc <argp_parse@@Base+0xe530>  // b.pmore
  448b88:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448b8c:	add	x8, x8, #0x9c8
  448b90:	add	x26, x0, #0x1
  448b94:	cmp	x23, x8
  448b98:	str	x26, [x28]
  448b9c:	b.eq	448ba8 <argp_parse@@Base+0xe4fc>  // b.none
  448ba0:	mov	x0, x23
  448ba4:	bl	4046b0 <free@plt>
  448ba8:	mov	x0, x26
  448bac:	bl	44a010 <argp_parse@@Base+0xf964>
  448bb0:	str	x0, [x27]
  448bb4:	ldr	w4, [x22]
  448bb8:	ldp	x7, x8, [x22, #40]
  448bbc:	ldur	x3, [x29, #-8]
  448bc0:	mov	x1, x26
  448bc4:	mov	x2, x21
  448bc8:	mov	w5, w25
  448bcc:	mov	x6, x24
  448bd0:	mov	x23, x0
  448bd4:	str	x8, [sp]
  448bd8:	bl	447858 <argp_parse@@Base+0xd1ac>
  448bdc:	str	w20, [x19]
  448be0:	mov	x0, x23
  448be4:	ldp	x20, x19, [sp, #112]
  448be8:	ldp	x22, x21, [sp, #96]
  448bec:	ldp	x24, x23, [sp, #80]
  448bf0:	ldp	x26, x25, [sp, #64]
  448bf4:	ldp	x28, x27, [sp, #48]
  448bf8:	ldp	x29, x30, [sp, #32]
  448bfc:	add	sp, sp, #0x80
  448c00:	ret
  448c04:	bl	404560 <abort@plt>
  448c08:	bl	40eb80 <wcrtomb@plt+0xa090>
  448c0c:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448c10:	add	x3, x3, #0x990
  448c14:	b	448a74 <argp_parse@@Base+0xe3c8>
  448c18:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448c1c:	add	x3, x3, #0x990
  448c20:	mov	x2, #0xffffffffffffffff    	// #-1
  448c24:	mov	x1, x0
  448c28:	mov	w0, wzr
  448c2c:	b	448a74 <argp_parse@@Base+0xe3c8>
  448c30:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448c34:	mov	x2, x1
  448c38:	add	x3, x3, #0x990
  448c3c:	mov	x1, x0
  448c40:	mov	w0, wzr
  448c44:	b	448a74 <argp_parse@@Base+0xe3c8>
  448c48:	sub	sp, sp, #0x50
  448c4c:	movi	v0.2d, #0x0
  448c50:	cmp	w1, #0xa
  448c54:	stp	x29, x30, [sp, #64]
  448c58:	add	x29, sp, #0x40
  448c5c:	str	xzr, [sp, #48]
  448c60:	stp	q0, q0, [sp, #16]
  448c64:	str	q0, [sp]
  448c68:	b.eq	448c90 <argp_parse@@Base+0xe5e4>  // b.none
  448c6c:	mov	x8, x2
  448c70:	str	w1, [sp]
  448c74:	mov	x3, sp
  448c78:	mov	x2, #0xffffffffffffffff    	// #-1
  448c7c:	mov	x1, x8
  448c80:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448c84:	ldp	x29, x30, [sp, #64]
  448c88:	add	sp, sp, #0x50
  448c8c:	ret
  448c90:	bl	404560 <abort@plt>
  448c94:	sub	sp, sp, #0x50
  448c98:	movi	v0.2d, #0x0
  448c9c:	cmp	w1, #0xa
  448ca0:	stp	x29, x30, [sp, #64]
  448ca4:	add	x29, sp, #0x40
  448ca8:	str	xzr, [sp, #48]
  448cac:	stp	q0, q0, [sp, #16]
  448cb0:	str	q0, [sp]
  448cb4:	b.eq	448cdc <argp_parse@@Base+0xe630>  // b.none
  448cb8:	mov	x8, x3
  448cbc:	str	w1, [sp]
  448cc0:	mov	x3, sp
  448cc4:	mov	x1, x2
  448cc8:	mov	x2, x8
  448ccc:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448cd0:	ldp	x29, x30, [sp, #64]
  448cd4:	add	sp, sp, #0x50
  448cd8:	ret
  448cdc:	bl	404560 <abort@plt>
  448ce0:	sub	sp, sp, #0x50
  448ce4:	movi	v0.2d, #0x0
  448ce8:	cmp	w0, #0xa
  448cec:	stp	x29, x30, [sp, #64]
  448cf0:	add	x29, sp, #0x40
  448cf4:	str	xzr, [sp, #48]
  448cf8:	stp	q0, q0, [sp, #16]
  448cfc:	str	q0, [sp]
  448d00:	b.eq	448d24 <argp_parse@@Base+0xe678>  // b.none
  448d04:	str	w0, [sp]
  448d08:	mov	x3, sp
  448d0c:	mov	x2, #0xffffffffffffffff    	// #-1
  448d10:	mov	w0, wzr
  448d14:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448d18:	ldp	x29, x30, [sp, #64]
  448d1c:	add	sp, sp, #0x50
  448d20:	ret
  448d24:	bl	404560 <abort@plt>
  448d28:	sub	sp, sp, #0x50
  448d2c:	movi	v0.2d, #0x0
  448d30:	cmp	w0, #0xa
  448d34:	stp	x29, x30, [sp, #64]
  448d38:	add	x29, sp, #0x40
  448d3c:	str	xzr, [sp, #48]
  448d40:	stp	q0, q0, [sp, #16]
  448d44:	str	q0, [sp]
  448d48:	b.eq	448d68 <argp_parse@@Base+0xe6bc>  // b.none
  448d4c:	str	w0, [sp]
  448d50:	mov	x3, sp
  448d54:	mov	w0, wzr
  448d58:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448d5c:	ldp	x29, x30, [sp, #64]
  448d60:	add	sp, sp, #0x50
  448d64:	ret
  448d68:	bl	404560 <abort@plt>
  448d6c:	sub	sp, sp, #0x50
  448d70:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448d74:	add	x9, x9, #0x990
  448d78:	ldp	q0, q1, [x9]
  448d7c:	ubfx	w10, w2, #5, #3
  448d80:	mov	x11, sp
  448d84:	mov	x8, x1
  448d88:	stp	q0, q1, [sp]
  448d8c:	ldr	q0, [x9, #32]
  448d90:	ldr	x9, [x9, #48]
  448d94:	mov	x1, x0
  448d98:	mov	x3, sp
  448d9c:	str	q0, [sp, #32]
  448da0:	str	x9, [sp, #48]
  448da4:	add	x9, x11, w10, uxtw #2
  448da8:	ldr	w10, [x9, #8]
  448dac:	mov	w0, wzr
  448db0:	stp	x29, x30, [sp, #64]
  448db4:	add	x29, sp, #0x40
  448db8:	lsr	w11, w10, w2
  448dbc:	mvn	w11, w11
  448dc0:	and	w11, w11, #0x1
  448dc4:	lsl	w11, w11, w2
  448dc8:	eor	w10, w11, w10
  448dcc:	mov	x2, x8
  448dd0:	str	w10, [x9, #8]
  448dd4:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448dd8:	ldp	x29, x30, [sp, #64]
  448ddc:	add	sp, sp, #0x50
  448de0:	ret
  448de4:	sub	sp, sp, #0x50
  448de8:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448dec:	add	x9, x9, #0x990
  448df0:	ldp	q0, q1, [x9]
  448df4:	ubfx	w10, w1, #5, #3
  448df8:	mov	x11, sp
  448dfc:	mov	x8, x0
  448e00:	stp	q0, q1, [sp]
  448e04:	ldr	q0, [x9, #32]
  448e08:	ldr	x9, [x9, #48]
  448e0c:	mov	x3, sp
  448e10:	mov	x2, #0xffffffffffffffff    	// #-1
  448e14:	str	q0, [sp, #32]
  448e18:	str	x9, [sp, #48]
  448e1c:	add	x9, x11, w10, uxtw #2
  448e20:	ldr	w10, [x9, #8]
  448e24:	mov	w0, wzr
  448e28:	stp	x29, x30, [sp, #64]
  448e2c:	add	x29, sp, #0x40
  448e30:	lsr	w11, w10, w1
  448e34:	mvn	w11, w11
  448e38:	and	w11, w11, #0x1
  448e3c:	lsl	w11, w11, w1
  448e40:	eor	w10, w11, w10
  448e44:	mov	x1, x8
  448e48:	str	w10, [x9, #8]
  448e4c:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448e50:	ldp	x29, x30, [sp, #64]
  448e54:	add	sp, sp, #0x50
  448e58:	ret
  448e5c:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448e60:	add	x8, x8, #0x990
  448e64:	ldp	q0, q1, [x8]
  448e68:	ldr	q2, [x8, #32]
  448e6c:	ldr	x8, [x8, #48]
  448e70:	mov	x1, x0
  448e74:	stp	q0, q1, [sp, #-80]!
  448e78:	ldr	w9, [sp, #12]
  448e7c:	str	x8, [sp, #48]
  448e80:	mov	x3, sp
  448e84:	mov	x2, #0xffffffffffffffff    	// #-1
  448e88:	orr	w8, w9, #0x4000000
  448e8c:	mov	w0, wzr
  448e90:	stp	x29, x30, [sp, #64]
  448e94:	add	x29, sp, #0x40
  448e98:	str	q2, [sp, #32]
  448e9c:	str	w8, [sp, #12]
  448ea0:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448ea4:	ldp	x29, x30, [sp, #64]
  448ea8:	add	sp, sp, #0x50
  448eac:	ret
  448eb0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448eb4:	add	x8, x8, #0x990
  448eb8:	ldp	q0, q1, [x8]
  448ebc:	ldr	q2, [x8, #32]
  448ec0:	ldr	x8, [x8, #48]
  448ec4:	mov	x2, x1
  448ec8:	stp	q0, q1, [sp, #-80]!
  448ecc:	ldr	w9, [sp, #12]
  448ed0:	mov	x1, x0
  448ed4:	str	x8, [sp, #48]
  448ed8:	mov	x3, sp
  448edc:	orr	w8, w9, #0x4000000
  448ee0:	mov	w0, wzr
  448ee4:	stp	x29, x30, [sp, #64]
  448ee8:	add	x29, sp, #0x40
  448eec:	str	q2, [sp, #32]
  448ef0:	str	w8, [sp, #12]
  448ef4:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448ef8:	ldp	x29, x30, [sp, #64]
  448efc:	add	sp, sp, #0x50
  448f00:	ret
  448f04:	sub	sp, sp, #0x80
  448f08:	movi	v0.2d, #0x0
  448f0c:	cmp	w1, #0xa
  448f10:	stp	x29, x30, [sp, #112]
  448f14:	add	x29, sp, #0x70
  448f18:	str	wzr, [sp, #48]
  448f1c:	stp	q0, q0, [sp, #16]
  448f20:	str	q0, [sp]
  448f24:	b.eq	448f74 <argp_parse@@Base+0xe8c8>  // b.none
  448f28:	ldp	q0, q1, [sp]
  448f2c:	ldr	w9, [sp, #48]
  448f30:	ldr	q2, [sp, #32]
  448f34:	mov	x8, x2
  448f38:	stur	q0, [sp, #60]
  448f3c:	ldr	w10, [sp, #68]
  448f40:	str	w1, [sp, #56]
  448f44:	str	w9, [sp, #108]
  448f48:	add	x3, sp, #0x38
  448f4c:	orr	w9, w10, #0x4000000
  448f50:	mov	x2, #0xffffffffffffffff    	// #-1
  448f54:	mov	x1, x8
  448f58:	stur	q1, [sp, #76]
  448f5c:	stur	q2, [sp, #92]
  448f60:	str	w9, [sp, #68]
  448f64:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448f68:	ldp	x29, x30, [sp, #112]
  448f6c:	add	sp, sp, #0x80
  448f70:	ret
  448f74:	bl	404560 <abort@plt>
  448f78:	sub	sp, sp, #0x50
  448f7c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448f80:	add	x9, x9, #0x990
  448f84:	ldp	q0, q1, [x9]
  448f88:	ldr	q2, [x9, #32]
  448f8c:	ldr	x9, [x9, #48]
  448f90:	mov	w10, #0xa                   	// #10
  448f94:	stp	x29, x30, [sp, #64]
  448f98:	add	x29, sp, #0x40
  448f9c:	stp	q0, q1, [sp]
  448fa0:	str	q2, [sp, #32]
  448fa4:	str	x9, [sp, #48]
  448fa8:	str	w10, [sp]
  448fac:	cbz	x1, 448fd8 <argp_parse@@Base+0xe92c>
  448fb0:	cbz	x2, 448fd8 <argp_parse@@Base+0xe92c>
  448fb4:	mov	x8, x3
  448fb8:	stp	x1, x2, [sp, #40]
  448fbc:	mov	x3, sp
  448fc0:	mov	x2, #0xffffffffffffffff    	// #-1
  448fc4:	mov	x1, x8
  448fc8:	bl	448a74 <argp_parse@@Base+0xe3c8>
  448fcc:	ldp	x29, x30, [sp, #64]
  448fd0:	add	sp, sp, #0x50
  448fd4:	ret
  448fd8:	bl	404560 <abort@plt>
  448fdc:	sub	sp, sp, #0x50
  448fe0:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  448fe4:	add	x9, x9, #0x990
  448fe8:	ldp	q0, q1, [x9]
  448fec:	ldr	x10, [x9, #48]
  448ff0:	stp	x29, x30, [sp, #64]
  448ff4:	add	x29, sp, #0x40
  448ff8:	stp	q0, q1, [sp]
  448ffc:	ldr	q0, [x9, #32]
  449000:	mov	w9, #0xa                   	// #10
  449004:	str	x10, [sp, #48]
  449008:	str	w9, [sp]
  44900c:	str	q0, [sp, #32]
  449010:	cbz	x1, 44903c <argp_parse@@Base+0xe990>
  449014:	cbz	x2, 44903c <argp_parse@@Base+0xe990>
  449018:	mov	x8, x3
  44901c:	stp	x1, x2, [sp, #40]
  449020:	mov	x3, sp
  449024:	mov	x1, x8
  449028:	mov	x2, x4
  44902c:	bl	448a74 <argp_parse@@Base+0xe3c8>
  449030:	ldp	x29, x30, [sp, #64]
  449034:	add	sp, sp, #0x50
  449038:	ret
  44903c:	bl	404560 <abort@plt>
  449040:	sub	sp, sp, #0x50
  449044:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  449048:	add	x9, x9, #0x990
  44904c:	ldp	q0, q1, [x9]
  449050:	ldr	q2, [x9, #32]
  449054:	ldr	x9, [x9, #48]
  449058:	mov	w10, #0xa                   	// #10
  44905c:	stp	x29, x30, [sp, #64]
  449060:	add	x29, sp, #0x40
  449064:	stp	q0, q1, [sp]
  449068:	str	q2, [sp, #32]
  44906c:	str	x9, [sp, #48]
  449070:	str	w10, [sp]
  449074:	cbz	x0, 4490a4 <argp_parse@@Base+0xe9f8>
  449078:	cbz	x1, 4490a4 <argp_parse@@Base+0xe9f8>
  44907c:	mov	x8, x2
  449080:	stp	x0, x1, [sp, #40]
  449084:	mov	x3, sp
  449088:	mov	x2, #0xffffffffffffffff    	// #-1
  44908c:	mov	w0, wzr
  449090:	mov	x1, x8
  449094:	bl	448a74 <argp_parse@@Base+0xe3c8>
  449098:	ldp	x29, x30, [sp, #64]
  44909c:	add	sp, sp, #0x50
  4490a0:	ret
  4490a4:	bl	404560 <abort@plt>
  4490a8:	sub	sp, sp, #0x50
  4490ac:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  4490b0:	add	x9, x9, #0x990
  4490b4:	ldp	q0, q1, [x9]
  4490b8:	ldr	q2, [x9, #32]
  4490bc:	ldr	x9, [x9, #48]
  4490c0:	mov	w10, #0xa                   	// #10
  4490c4:	stp	x29, x30, [sp, #64]
  4490c8:	add	x29, sp, #0x40
  4490cc:	stp	q0, q1, [sp]
  4490d0:	str	q2, [sp, #32]
  4490d4:	str	x9, [sp, #48]
  4490d8:	str	w10, [sp]
  4490dc:	cbz	x0, 44910c <argp_parse@@Base+0xea60>
  4490e0:	cbz	x1, 44910c <argp_parse@@Base+0xea60>
  4490e4:	mov	x8, x3
  4490e8:	stp	x0, x1, [sp, #40]
  4490ec:	mov	x3, sp
  4490f0:	mov	w0, wzr
  4490f4:	mov	x1, x2
  4490f8:	mov	x2, x8
  4490fc:	bl	448a74 <argp_parse@@Base+0xe3c8>
  449100:	ldp	x29, x30, [sp, #64]
  449104:	add	sp, sp, #0x50
  449108:	ret
  44910c:	bl	404560 <abort@plt>
  449110:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  449114:	add	x3, x3, #0xfe0
  449118:	b	448a74 <argp_parse@@Base+0xe3c8>
  44911c:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  449120:	mov	x2, x1
  449124:	add	x3, x3, #0xfe0
  449128:	mov	x1, x0
  44912c:	mov	w0, wzr
  449130:	b	448a74 <argp_parse@@Base+0xe3c8>
  449134:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  449138:	add	x3, x3, #0xfe0
  44913c:	mov	x2, #0xffffffffffffffff    	// #-1
  449140:	b	448a74 <argp_parse@@Base+0xe3c8>
  449144:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  449148:	add	x3, x3, #0xfe0
  44914c:	mov	x2, #0xffffffffffffffff    	// #-1
  449150:	mov	x1, x0
  449154:	mov	w0, wzr
  449158:	b	448a74 <argp_parse@@Base+0xe3c8>
  44915c:	sub	sp, sp, #0x150
  449160:	stp	x29, x30, [sp, #256]
  449164:	stp	x28, x25, [sp, #272]
  449168:	stp	x24, x23, [sp, #288]
  44916c:	stp	x22, x21, [sp, #304]
  449170:	stp	x20, x19, [sp, #320]
  449174:	add	x29, sp, #0x100
  449178:	mov	w25, w4
  44917c:	mov	x19, x3
  449180:	mov	w20, w2
  449184:	mov	x21, x1
  449188:	mov	w22, w0
  44918c:	bl	4046d0 <renameat2@plt>
  449190:	mov	w24, w0
  449194:	bl	4049c0 <__errno_location@plt>
  449198:	tbz	w24, #31, 4492fc <argp_parse@@Base+0xec50>
  44919c:	ldr	w8, [x0]
  4491a0:	mov	x23, x0
  4491a4:	cmp	w8, #0x16
  4491a8:	b.eq	4491bc <argp_parse@@Base+0xeb10>  // b.none
  4491ac:	cmp	w8, #0x5f
  4491b0:	b.eq	4491bc <argp_parse@@Base+0xeb10>  // b.none
  4491b4:	cmp	w8, #0x26
  4491b8:	b.ne	4492fc <argp_parse@@Base+0xec50>  // b.any
  4491bc:	cbz	w25, 449214 <argp_parse@@Base+0xeb68>
  4491c0:	cmp	w25, #0x1
  4491c4:	b.ne	449200 <argp_parse@@Base+0xeb54>  // b.any
  4491c8:	mov	x3, sp
  4491cc:	mov	w4, #0x100                 	// #256
  4491d0:	mov	w0, wzr
  4491d4:	mov	w1, w20
  4491d8:	mov	x2, x19
  4491dc:	bl	404ad0 <__fxstatat@plt>
  4491e0:	cbz	w0, 4491f8 <argp_parse@@Base+0xeb4c>
  4491e4:	ldr	w8, [x23]
  4491e8:	cmp	w8, #0x2
  4491ec:	b.eq	449210 <argp_parse@@Base+0xeb64>  // b.none
  4491f0:	cmp	w8, #0x4b
  4491f4:	b.ne	449208 <argp_parse@@Base+0xeb5c>  // b.any
  4491f8:	mov	w8, #0x11                  	// #17
  4491fc:	b	449204 <argp_parse@@Base+0xeb58>
  449200:	mov	w8, #0x5f                  	// #95
  449204:	str	w8, [x23]
  449208:	mov	w24, #0xffffffff            	// #-1
  44920c:	b	4492fc <argp_parse@@Base+0xec50>
  449210:	mov	w25, #0x1                   	// #1
  449214:	mov	x0, x21
  449218:	bl	403f00 <strlen@plt>
  44921c:	mov	x24, x0
  449220:	mov	x0, x19
  449224:	bl	403f00 <strlen@plt>
  449228:	cbz	x24, 4492e4 <argp_parse@@Base+0xec38>
  44922c:	cbz	x0, 4492e4 <argp_parse@@Base+0xec38>
  449230:	add	x8, x24, x21
  449234:	ldurb	w8, [x8, #-1]
  449238:	cmp	w8, #0x2f
  44923c:	b.eq	449250 <argp_parse@@Base+0xeba4>  // b.none
  449240:	add	x8, x0, x19
  449244:	ldurb	w8, [x8, #-1]
  449248:	cmp	w8, #0x2f
  44924c:	b.ne	4492e4 <argp_parse@@Base+0xec38>  // b.any
  449250:	add	x3, sp, #0x80
  449254:	mov	w4, #0x100                 	// #256
  449258:	mov	w0, wzr
  44925c:	mov	w1, w22
  449260:	mov	x2, x21
  449264:	bl	404ad0 <__fxstatat@plt>
  449268:	cbnz	w0, 449208 <argp_parse@@Base+0xeb5c>
  44926c:	cbz	w25, 449288 <argp_parse@@Base+0xebdc>
  449270:	ldr	w8, [sp, #144]
  449274:	and	w8, w8, #0xf000
  449278:	cmp	w8, #0x4, lsl #12
  44927c:	b.eq	4492e4 <argp_parse@@Base+0xec38>  // b.none
  449280:	mov	w8, #0x2                   	// #2
  449284:	b	449204 <argp_parse@@Base+0xeb58>
  449288:	mov	x3, sp
  44928c:	mov	w4, #0x100                 	// #256
  449290:	mov	w0, wzr
  449294:	mov	w1, w20
  449298:	mov	x2, x19
  44929c:	bl	404ad0 <__fxstatat@plt>
  4492a0:	cbz	w0, 4492c4 <argp_parse@@Base+0xec18>
  4492a4:	ldr	w8, [x23]
  4492a8:	cmp	w8, #0x2
  4492ac:	b.ne	449208 <argp_parse@@Base+0xeb5c>  // b.any
  4492b0:	ldr	w8, [sp, #144]
  4492b4:	and	w8, w8, #0xf000
  4492b8:	cmp	w8, #0x4, lsl #12
  4492bc:	b.ne	449208 <argp_parse@@Base+0xeb5c>  // b.any
  4492c0:	b	4492e4 <argp_parse@@Base+0xec38>
  4492c4:	ldr	w8, [sp, #16]
  4492c8:	and	w8, w8, #0xf000
  4492cc:	cmp	w8, #0x4, lsl #12
  4492d0:	b.ne	44931c <argp_parse@@Base+0xec70>  // b.any
  4492d4:	ldr	w8, [sp, #144]
  4492d8:	and	w8, w8, #0xf000
  4492dc:	cmp	w8, #0x4, lsl #12
  4492e0:	b.ne	449324 <argp_parse@@Base+0xec78>  // b.any
  4492e4:	mov	w0, w22
  4492e8:	mov	x1, x21
  4492ec:	mov	w2, w20
  4492f0:	mov	x3, x19
  4492f4:	bl	404700 <renameat@plt>
  4492f8:	mov	w24, w0
  4492fc:	mov	w0, w24
  449300:	ldp	x20, x19, [sp, #320]
  449304:	ldp	x22, x21, [sp, #304]
  449308:	ldp	x24, x23, [sp, #288]
  44930c:	ldp	x28, x25, [sp, #272]
  449310:	ldp	x29, x30, [sp, #256]
  449314:	add	sp, sp, #0x150
  449318:	ret
  44931c:	mov	w8, #0x14                  	// #20
  449320:	b	449204 <argp_parse@@Base+0xeb58>
  449324:	mov	w8, #0x15                  	// #21
  449328:	b	449204 <argp_parse@@Base+0xeb58>
  44932c:	stp	x29, x30, [sp, #-64]!
  449330:	str	x23, [sp, #16]
  449334:	mov	w23, #0x1                   	// #1
  449338:	stp	x22, x21, [sp, #32]
  44933c:	stp	x20, x19, [sp, #48]
  449340:	mov	x21, x2
  449344:	mov	x19, x1
  449348:	mov	w20, w0
  44934c:	movk	w23, #0x7ff0, lsl #16
  449350:	mov	x29, sp
  449354:	mov	w0, w20
  449358:	mov	x1, x19
  44935c:	mov	x2, x21
  449360:	bl	404830 <read@plt>
  449364:	mov	x22, x0
  449368:	tbz	x0, #63, 449390 <argp_parse@@Base+0xece4>
  44936c:	bl	4049c0 <__errno_location@plt>
  449370:	ldr	w8, [x0]
  449374:	cmp	w8, #0x4
  449378:	b.eq	449354 <argp_parse@@Base+0xeca8>  // b.none
  44937c:	cmp	x21, x23
  449380:	b.cc	449390 <argp_parse@@Base+0xece4>  // b.lo, b.ul, b.last
  449384:	cmp	w8, #0x16
  449388:	mov	w21, #0x7ff00000            	// #2146435072
  44938c:	b.eq	449354 <argp_parse@@Base+0xeca8>  // b.none
  449390:	mov	x0, x22
  449394:	ldp	x20, x19, [sp, #48]
  449398:	ldp	x22, x21, [sp, #32]
  44939c:	ldr	x23, [sp, #16]
  4493a0:	ldp	x29, x30, [sp], #64
  4493a4:	ret
  4493a8:	stp	x29, x30, [sp, #-64]!
  4493ac:	str	x23, [sp, #16]
  4493b0:	mov	w23, #0x1                   	// #1
  4493b4:	stp	x22, x21, [sp, #32]
  4493b8:	stp	x20, x19, [sp, #48]
  4493bc:	mov	x21, x2
  4493c0:	mov	x19, x1
  4493c4:	mov	w20, w0
  4493c8:	movk	w23, #0x7ff0, lsl #16
  4493cc:	mov	x29, sp
  4493d0:	mov	w0, w20
  4493d4:	mov	x1, x19
  4493d8:	mov	x2, x21
  4493dc:	bl	404530 <write@plt>
  4493e0:	mov	x22, x0
  4493e4:	tbz	x0, #63, 44940c <argp_parse@@Base+0xed60>
  4493e8:	bl	4049c0 <__errno_location@plt>
  4493ec:	ldr	w8, [x0]
  4493f0:	cmp	w8, #0x4
  4493f4:	b.eq	4493d0 <argp_parse@@Base+0xed24>  // b.none
  4493f8:	cmp	x21, x23
  4493fc:	b.cc	44940c <argp_parse@@Base+0xed60>  // b.lo, b.ul, b.last
  449400:	cmp	w8, #0x16
  449404:	mov	w21, #0x7ff00000            	// #2146435072
  449408:	b.eq	4493d0 <argp_parse@@Base+0xed24>  // b.none
  44940c:	mov	x0, x22
  449410:	ldp	x20, x19, [sp, #48]
  449414:	ldp	x22, x21, [sp, #32]
  449418:	ldr	x23, [sp, #16]
  44941c:	ldp	x29, x30, [sp], #64
  449420:	ret
  449424:	stp	x29, x30, [sp, #-32]!
  449428:	str	x19, [sp, #16]
  44942c:	mov	x19, x0
  449430:	str	xzr, [x0, #8]
  449434:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x18e3c>
  449438:	add	x0, x0, #0xfda
  44943c:	mov	w1, #0x80000               	// #524288
  449440:	mov	x29, sp
  449444:	bl	45cb64 <_obstack_memory_used@@Base+0x119a0>
  449448:	str	w0, [x19]
  44944c:	tbnz	w0, #31, 449460 <argp_parse@@Base+0xedb4>
  449450:	mov	w0, wzr
  449454:	ldr	x19, [sp, #16]
  449458:	ldp	x29, x30, [sp], #32
  44945c:	ret
  449460:	mov	x0, xzr
  449464:	mov	x1, xzr
  449468:	bl	403eb0 <getcwd@plt>
  44946c:	cmp	x0, #0x0
  449470:	str	x0, [x19, #8]
  449474:	csetm	w0, eq  // eq = none
  449478:	ldr	x19, [sp, #16]
  44947c:	ldp	x29, x30, [sp], #32
  449480:	ret
  449484:	mov	x8, x0
  449488:	ldr	w0, [x0]
  44948c:	tbnz	w0, #31, 449494 <argp_parse@@Base+0xede8>
  449490:	b	403f70 <fchdir@plt>
  449494:	ldr	x0, [x8, #8]
  449498:	b	44a7c0 <argp_parse@@Base+0x10114>
  44949c:	stp	x29, x30, [sp, #-32]!
  4494a0:	str	x19, [sp, #16]
  4494a4:	mov	x19, x0
  4494a8:	ldr	w0, [x0]
  4494ac:	mov	x29, sp
  4494b0:	tbnz	w0, #31, 4494b8 <argp_parse@@Base+0xee0c>
  4494b4:	bl	4044d0 <close@plt>
  4494b8:	ldr	x0, [x19, #8]
  4494bc:	ldr	x19, [sp, #16]
  4494c0:	ldp	x29, x30, [sp], #32
  4494c4:	b	4046b0 <free@plt>
  4494c8:	sub	sp, sp, #0x70
  4494cc:	stp	x29, x30, [sp, #16]
  4494d0:	stp	x28, x27, [sp, #32]
  4494d4:	stp	x26, x25, [sp, #48]
  4494d8:	stp	x24, x23, [sp, #64]
  4494dc:	stp	x22, x21, [sp, #80]
  4494e0:	stp	x20, x19, [sp, #96]
  4494e4:	add	x29, sp, #0x10
  4494e8:	cbz	x0, 44953c <argp_parse@@Base+0xee90>
  4494ec:	mov	x21, x0
  4494f0:	str	w1, [sp, #4]
  4494f4:	mov	w28, w1
  4494f8:	bl	4049c0 <__errno_location@plt>
  4494fc:	mov	x20, x0
  449500:	str	wzr, [x0]
  449504:	mov	x0, x21
  449508:	bl	404440 <readdir@plt>
  44950c:	cbz	x0, 449600 <argp_parse@@Base+0xef54>
  449510:	sub	x8, x28, #0x1
  449514:	mov	x25, x0
  449518:	cmp	x8, #0x2
  44951c:	str	x28, [sp, #8]
  449520:	b.cs	449694 <argp_parse@@Base+0xefe8>  // b.hs, b.nlast
  449524:	mov	x23, xzr
  449528:	mov	x19, xzr
  44952c:	mov	x24, xzr
  449530:	mov	x27, xzr
  449534:	mov	w28, #0x1                   	// #1
  449538:	b	449590 <argp_parse@@Base+0xeee4>
  44953c:	mov	x22, xzr
  449540:	b	4497e0 <argp_parse@@Base+0xf134>
  449544:	mov	w19, #0x8                   	// #8
  449548:	lsl	x1, x19, #4
  44954c:	mov	x0, x23
  449550:	bl	44a090 <argp_parse@@Base+0xf9e4>
  449554:	mov	x23, x0
  449558:	mov	x0, x22
  44955c:	add	x26, x26, #0x1
  449560:	bl	44a2f4 <argp_parse@@Base+0xfc48>
  449564:	add	x8, x23, x24, lsl #4
  449568:	str	x0, [x8]
  44956c:	ldr	x9, [x25]
  449570:	add	x24, x24, #0x1
  449574:	add	x27, x26, x27
  449578:	str	x9, [x8, #8]
  44957c:	mov	x0, x21
  449580:	str	wzr, [x20]
  449584:	bl	404440 <readdir@plt>
  449588:	mov	x25, x0
  44958c:	cbz	x0, 449760 <argp_parse@@Base+0xf0b4>
  449590:	mov	x22, x25
  449594:	ldrb	w8, [x22, #19]!
  449598:	cmp	w8, #0x2e
  44959c:	b.ne	4495b4 <argp_parse@@Base+0xef08>  // b.any
  4495a0:	ldrb	w8, [x25, #20]
  4495a4:	cmp	w8, #0x2e
  4495a8:	cinc	x8, x28, eq  // eq = none
  4495ac:	add	x8, x25, x8
  4495b0:	ldrb	w8, [x8, #19]
  4495b4:	cbz	w8, 44957c <argp_parse@@Base+0xeed0>
  4495b8:	mov	x0, x22
  4495bc:	bl	403f00 <strlen@plt>
  4495c0:	cmp	x19, x24
  4495c4:	mov	x26, x0
  4495c8:	b.ne	449558 <argp_parse@@Base+0xeeac>  // b.any
  4495cc:	cbz	x23, 4495f0 <argp_parse@@Base+0xef44>
  4495d0:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  4495d4:	movk	x8, #0x5554
  4495d8:	movk	x8, #0x555, lsl #48
  4495dc:	cmp	x19, x8
  4495e0:	b.hi	44975c <argp_parse@@Base+0xf0b0>  // b.pmore
  4495e4:	add	x8, x19, x19, lsr #1
  4495e8:	add	x19, x8, #0x1
  4495ec:	b	449548 <argp_parse@@Base+0xee9c>
  4495f0:	cbz	x19, 449544 <argp_parse@@Base+0xee98>
  4495f4:	lsr	x8, x19, #59
  4495f8:	cbz	x8, 449548 <argp_parse@@Base+0xee9c>
  4495fc:	b	44975c <argp_parse@@Base+0xf0b0>
  449600:	mov	x27, xzr
  449604:	mov	x24, xzr
  449608:	mov	x23, xzr
  44960c:	mov	x26, xzr
  449610:	mov	x22, xzr
  449614:	ldr	w19, [x20]
  449618:	cbnz	w19, 44978c <argp_parse@@Base+0xf0e0>
  44961c:	sub	x8, x28, #0x1
  449620:	cmp	x8, #0x1
  449624:	b.hi	4497a8 <argp_parse@@Base+0xf0fc>  // b.pmore
  449628:	cbz	x24, 4497c4 <argp_parse@@Base+0xf118>
  44962c:	ldr	w9, [sp, #4]
  449630:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449634:	add	x8, x8, #0xde8
  449638:	mov	w2, #0x10                  	// #16
  44963c:	ldr	x3, [x8, w9, uxtw #3]
  449640:	mov	x0, x23
  449644:	mov	x1, x24
  449648:	bl	4040b0 <qsort@plt>
  44964c:	add	x0, x27, #0x1
  449650:	bl	44a010 <argp_parse@@Base+0xf964>
  449654:	mov	x22, x0
  449658:	mov	x27, xzr
  44965c:	mov	x20, x23
  449660:	ldr	x1, [x20]
  449664:	add	x19, x22, x27
  449668:	mov	x0, x19
  44966c:	bl	404120 <stpcpy@plt>
  449670:	ldr	x8, [x20], #16
  449674:	sub	x9, x27, x19
  449678:	add	x9, x9, x0
  44967c:	add	x27, x9, #0x1
  449680:	mov	x0, x8
  449684:	bl	4046b0 <free@plt>
  449688:	subs	x24, x24, #0x1
  44968c:	b.ne	449660 <argp_parse@@Base+0xefb4>  // b.any
  449690:	b	4497d4 <argp_parse@@Base+0xf128>
  449694:	mov	x28, #0x5555555555555555    	// #6148914691236517205
  449698:	mov	x22, xzr
  44969c:	mov	x26, xzr
  4496a0:	mov	x27, xzr
  4496a4:	mov	w19, #0x1                   	// #1
  4496a8:	movk	x28, #0x5554
  4496ac:	b	4496ec <argp_parse@@Base+0xf040>
  4496b0:	mov	w26, #0x80                  	// #128
  4496b4:	mov	x0, x22
  4496b8:	mov	x1, x26
  4496bc:	bl	44a090 <argp_parse@@Base+0xf9e4>
  4496c0:	mov	x22, x0
  4496c4:	add	x0, x22, x27
  4496c8:	mov	x1, x23
  4496cc:	mov	x2, x24
  4496d0:	bl	403e80 <memcpy@plt>
  4496d4:	mov	x27, x25
  4496d8:	mov	x0, x21
  4496dc:	str	wzr, [x20]
  4496e0:	bl	404440 <readdir@plt>
  4496e4:	mov	x25, x0
  4496e8:	cbz	x0, 449778 <argp_parse@@Base+0xf0cc>
  4496ec:	mov	x23, x25
  4496f0:	ldrb	w8, [x23, #19]!
  4496f4:	cmp	w8, #0x2e
  4496f8:	b.ne	449710 <argp_parse@@Base+0xf064>  // b.any
  4496fc:	ldrb	w8, [x25, #20]
  449700:	cmp	w8, #0x2e
  449704:	cinc	x8, x19, eq  // eq = none
  449708:	add	x8, x25, x8
  44970c:	ldrb	w8, [x8, #19]
  449710:	cbz	w8, 4496d8 <argp_parse@@Base+0xf02c>
  449714:	mov	x0, x23
  449718:	bl	403f00 <strlen@plt>
  44971c:	add	x24, x0, #0x1
  449720:	sub	x8, x26, x27
  449724:	cmp	x8, x24
  449728:	add	x25, x24, x27
  44972c:	b.hi	4496c4 <argp_parse@@Base+0xf018>  // b.pmore
  449730:	cmp	x25, x27
  449734:	b.cc	44975c <argp_parse@@Base+0xf0b0>  // b.lo, b.ul, b.last
  449738:	cbz	x22, 449750 <argp_parse@@Base+0xf0a4>
  44973c:	cmp	x25, x28
  449740:	b.cs	44975c <argp_parse@@Base+0xf0b0>  // b.hs, b.nlast
  449744:	add	x8, x25, x25, lsr #1
  449748:	add	x26, x8, #0x1
  44974c:	b	4496b4 <argp_parse@@Base+0xf008>
  449750:	cbz	x25, 4496b0 <argp_parse@@Base+0xf004>
  449754:	mov	x26, x25
  449758:	tbz	x25, #63, 4496b4 <argp_parse@@Base+0xf008>
  44975c:	bl	40eb80 <wcrtomb@plt+0xa090>
  449760:	mov	x26, xzr
  449764:	mov	x22, xzr
  449768:	ldr	x28, [sp, #8]
  44976c:	ldr	w19, [x20]
  449770:	cbnz	w19, 44978c <argp_parse@@Base+0xf0e0>
  449774:	b	44961c <argp_parse@@Base+0xef70>
  449778:	mov	x24, xzr
  44977c:	mov	x23, xzr
  449780:	ldr	x28, [sp, #8]
  449784:	ldr	w19, [x20]
  449788:	cbz	w19, 44961c <argp_parse@@Base+0xef70>
  44978c:	mov	x0, x23
  449790:	bl	4046b0 <free@plt>
  449794:	mov	x0, x22
  449798:	bl	4046b0 <free@plt>
  44979c:	mov	x22, xzr
  4497a0:	str	w19, [x20]
  4497a4:	b	4497e0 <argp_parse@@Base+0xf134>
  4497a8:	cmp	x26, x27
  4497ac:	b.ne	4497dc <argp_parse@@Base+0xf130>  // b.any
  4497b0:	add	x1, x27, #0x1
  4497b4:	mov	x0, x22
  4497b8:	bl	44a090 <argp_parse@@Base+0xf9e4>
  4497bc:	mov	x22, x0
  4497c0:	b	4497dc <argp_parse@@Base+0xf130>
  4497c4:	add	x0, x27, #0x1
  4497c8:	bl	44a010 <argp_parse@@Base+0xf964>
  4497cc:	mov	x22, x0
  4497d0:	mov	x27, xzr
  4497d4:	mov	x0, x23
  4497d8:	bl	4046b0 <free@plt>
  4497dc:	strb	wzr, [x22, x27]
  4497e0:	mov	x0, x22
  4497e4:	ldp	x20, x19, [sp, #96]
  4497e8:	ldp	x22, x21, [sp, #80]
  4497ec:	ldp	x24, x23, [sp, #64]
  4497f0:	ldp	x26, x25, [sp, #48]
  4497f4:	ldp	x28, x27, [sp, #32]
  4497f8:	ldp	x29, x30, [sp, #16]
  4497fc:	add	sp, sp, #0x70
  449800:	ret
  449804:	stp	x29, x30, [sp, #-48]!
  449808:	str	x21, [sp, #16]
  44980c:	stp	x20, x19, [sp, #32]
  449810:	mov	x29, sp
  449814:	mov	w19, w1
  449818:	bl	45cac4 <_obstack_memory_used@@Base+0x11900>
  44981c:	cbz	x0, 44985c <argp_parse@@Base+0xf1b0>
  449820:	mov	w1, w19
  449824:	mov	x20, x0
  449828:	bl	4494c8 <argp_parse@@Base+0xee1c>
  44982c:	mov	x19, x0
  449830:	mov	x0, x20
  449834:	bl	4044b0 <closedir@plt>
  449838:	cbz	w0, 449860 <argp_parse@@Base+0xf1b4>
  44983c:	bl	4049c0 <__errno_location@plt>
  449840:	ldr	w21, [x0]
  449844:	mov	x20, x0
  449848:	mov	x0, x19
  44984c:	bl	4046b0 <free@plt>
  449850:	mov	x19, xzr
  449854:	str	w21, [x20]
  449858:	b	449860 <argp_parse@@Base+0xf1b4>
  44985c:	mov	x19, xzr
  449860:	mov	x0, x19
  449864:	ldp	x20, x19, [sp, #32]
  449868:	ldr	x21, [sp, #16]
  44986c:	ldp	x29, x30, [sp], #48
  449870:	ret
  449874:	ldr	x0, [x0]
  449878:	ldr	x1, [x1]
  44987c:	b	404610 <strcmp@plt>
  449880:	ldr	x8, [x0, #8]
  449884:	ldr	x9, [x1, #8]
  449888:	cmp	x8, x9
  44988c:	cset	w8, hi  // hi = pmore
  449890:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  449894:	ret
  449898:	stp	x29, x30, [sp, #-32]!
  44989c:	stp	x20, x19, [sp, #16]
  4498a0:	mov	x19, x1
  4498a4:	mov	w1, wzr
  4498a8:	mov	x2, x19
  4498ac:	mov	x29, sp
  4498b0:	mov	x20, x0
  4498b4:	bl	404840 <memchr@plt>
  4498b8:	sub	x8, x0, x20
  4498bc:	cmp	x0, #0x0
  4498c0:	csinc	x0, x19, x8, eq  // eq = none
  4498c4:	ldp	x20, x19, [sp, #16]
  4498c8:	ldp	x29, x30, [sp], #32
  4498cc:	ret
  4498d0:	sub	sp, sp, #0x50
  4498d4:	str	x21, [sp, #48]
  4498d8:	stp	x20, x19, [sp, #64]
  4498dc:	mov	x21, x5
  4498e0:	mov	x20, x4
  4498e4:	mov	x5, x3
  4498e8:	mov	x4, x2
  4498ec:	mov	x19, x0
  4498f0:	stp	x29, x30, [sp, #32]
  4498f4:	add	x29, sp, #0x20
  4498f8:	cbz	x1, 449918 <argp_parse@@Base+0xf26c>
  4498fc:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449900:	mov	x3, x1
  449904:	add	x2, x2, #0xe0a
  449908:	mov	w1, #0x1                   	// #1
  44990c:	mov	x0, x19
  449910:	bl	404600 <__fprintf_chk@plt>
  449914:	b	449934 <argp_parse@@Base+0xf288>
  449918:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44991c:	add	x2, x2, #0xe16
  449920:	mov	w1, #0x1                   	// #1
  449924:	mov	x0, x19
  449928:	mov	x3, x4
  44992c:	mov	x4, x5
  449930:	bl	404600 <__fprintf_chk@plt>
  449934:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449938:	add	x1, x1, #0xe1d
  44993c:	mov	w2, #0x5                   	// #5
  449940:	mov	x0, xzr
  449944:	bl	4048b0 <dcgettext@plt>
  449948:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44994c:	mov	x3, x0
  449950:	add	x2, x2, #0x103
  449954:	mov	w1, #0x1                   	// #1
  449958:	mov	w4, #0x7e3                 	// #2019
  44995c:	mov	x0, x19
  449960:	bl	404600 <__fprintf_chk@plt>
  449964:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449968:	add	x1, x1, #0xe21
  44996c:	mov	w2, #0x5                   	// #5
  449970:	mov	x0, xzr
  449974:	bl	4048b0 <dcgettext@plt>
  449978:	mov	x1, x19
  44997c:	bl	4048d0 <fputs_unlocked@plt>
  449980:	cmp	x21, #0x9
  449984:	b.hi	4499d8 <argp_parse@@Base+0xf32c>  // b.pmore
  449988:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  44998c:	add	x8, x8, #0xe00
  449990:	adr	x9, 4499a0 <argp_parse@@Base+0xf2f4>
  449994:	ldrb	w10, [x8, x21]
  449998:	add	x9, x9, x10, lsl #2
  44999c:	br	x9
  4499a0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4499a4:	add	x1, x1, #0xeed
  4499a8:	mov	w2, #0x5                   	// #5
  4499ac:	mov	x0, xzr
  4499b0:	bl	4048b0 <dcgettext@plt>
  4499b4:	ldr	x3, [x20]
  4499b8:	mov	x2, x0
  4499bc:	mov	x0, x19
  4499c0:	ldp	x20, x19, [sp, #64]
  4499c4:	ldr	x21, [sp, #48]
  4499c8:	ldp	x29, x30, [sp, #32]
  4499cc:	mov	w1, #0x1                   	// #1
  4499d0:	add	sp, sp, #0x50
  4499d4:	b	404600 <__fprintf_chk@plt>
  4499d8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4499dc:	add	x1, x1, #0x2c
  4499e0:	b	449b3c <argp_parse@@Base+0xf490>
  4499e4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  4499e8:	add	x1, x1, #0xefd
  4499ec:	mov	w2, #0x5                   	// #5
  4499f0:	mov	x0, xzr
  4499f4:	bl	4048b0 <dcgettext@plt>
  4499f8:	ldp	x3, x4, [x20]
  4499fc:	mov	x2, x0
  449a00:	mov	x0, x19
  449a04:	ldp	x20, x19, [sp, #64]
  449a08:	ldr	x21, [sp, #48]
  449a0c:	ldp	x29, x30, [sp, #32]
  449a10:	mov	w1, #0x1                   	// #1
  449a14:	add	sp, sp, #0x50
  449a18:	b	404600 <__fprintf_chk@plt>
  449a1c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449a20:	add	x1, x1, #0xf14
  449a24:	mov	w2, #0x5                   	// #5
  449a28:	mov	x0, xzr
  449a2c:	bl	4048b0 <dcgettext@plt>
  449a30:	ldp	x3, x4, [x20]
  449a34:	ldr	x5, [x20, #16]
  449a38:	mov	x2, x0
  449a3c:	mov	x0, x19
  449a40:	ldp	x20, x19, [sp, #64]
  449a44:	ldr	x21, [sp, #48]
  449a48:	ldp	x29, x30, [sp, #32]
  449a4c:	mov	w1, #0x1                   	// #1
  449a50:	add	sp, sp, #0x50
  449a54:	b	404600 <__fprintf_chk@plt>
  449a58:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449a5c:	add	x1, x1, #0xf30
  449a60:	mov	w2, #0x5                   	// #5
  449a64:	mov	x0, xzr
  449a68:	bl	4048b0 <dcgettext@plt>
  449a6c:	ldp	x3, x4, [x20]
  449a70:	ldp	x5, x6, [x20, #16]
  449a74:	mov	x2, x0
  449a78:	mov	x0, x19
  449a7c:	ldp	x20, x19, [sp, #64]
  449a80:	ldr	x21, [sp, #48]
  449a84:	ldp	x29, x30, [sp, #32]
  449a88:	mov	w1, #0x1                   	// #1
  449a8c:	add	sp, sp, #0x50
  449a90:	b	404600 <__fprintf_chk@plt>
  449a94:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449a98:	add	x1, x1, #0xf50
  449a9c:	mov	w2, #0x5                   	// #5
  449aa0:	mov	x0, xzr
  449aa4:	bl	4048b0 <dcgettext@plt>
  449aa8:	ldp	x3, x4, [x20]
  449aac:	ldp	x5, x6, [x20, #16]
  449ab0:	ldr	x7, [x20, #32]
  449ab4:	mov	x2, x0
  449ab8:	mov	x0, x19
  449abc:	ldp	x20, x19, [sp, #64]
  449ac0:	ldr	x21, [sp, #48]
  449ac4:	ldp	x29, x30, [sp, #32]
  449ac8:	mov	w1, #0x1                   	// #1
  449acc:	add	sp, sp, #0x50
  449ad0:	b	404600 <__fprintf_chk@plt>
  449ad4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449ad8:	add	x1, x1, #0xf74
  449adc:	mov	w2, #0x5                   	// #5
  449ae0:	mov	x0, xzr
  449ae4:	bl	4048b0 <dcgettext@plt>
  449ae8:	ldp	x3, x4, [x20]
  449aec:	ldp	x5, x6, [x20, #16]
  449af0:	ldp	x7, x8, [x20, #32]
  449af4:	mov	x2, x0
  449af8:	b	449b28 <argp_parse@@Base+0xf47c>
  449afc:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449b00:	add	x1, x1, #0xf9c
  449b04:	mov	w2, #0x5                   	// #5
  449b08:	mov	x0, xzr
  449b0c:	bl	4048b0 <dcgettext@plt>
  449b10:	ldr	x9, [x20, #48]
  449b14:	ldp	x3, x4, [x20]
  449b18:	ldp	x5, x6, [x20, #16]
  449b1c:	ldp	x7, x8, [x20, #32]
  449b20:	mov	x2, x0
  449b24:	str	x9, [sp, #8]
  449b28:	mov	w1, #0x1                   	// #1
  449b2c:	str	x8, [sp]
  449b30:	b	449ba0 <argp_parse@@Base+0xf4f4>
  449b34:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449b38:	add	x1, x1, #0xff8
  449b3c:	mov	w2, #0x5                   	// #5
  449b40:	mov	x0, xzr
  449b44:	bl	4048b0 <dcgettext@plt>
  449b48:	ldp	x8, x9, [x20, #56]
  449b4c:	ldp	x3, x4, [x20]
  449b50:	ldp	x5, x6, [x20, #16]
  449b54:	ldr	x7, [x20, #32]
  449b58:	ldur	q0, [x20, #40]
  449b5c:	mov	x2, x0
  449b60:	str	x9, [sp, #24]
  449b64:	b	449b94 <argp_parse@@Base+0xf4e8>
  449b68:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  449b6c:	add	x1, x1, #0xfc8
  449b70:	mov	w2, #0x5                   	// #5
  449b74:	mov	x0, xzr
  449b78:	bl	4048b0 <dcgettext@plt>
  449b7c:	ldp	x3, x4, [x20]
  449b80:	ldp	x5, x6, [x20, #16]
  449b84:	ldr	x7, [x20, #32]
  449b88:	ldur	q0, [x20, #40]
  449b8c:	ldr	x8, [x20, #56]
  449b90:	mov	x2, x0
  449b94:	str	x8, [sp, #16]
  449b98:	mov	w1, #0x1                   	// #1
  449b9c:	str	q0, [sp]
  449ba0:	mov	x0, x19
  449ba4:	bl	404600 <__fprintf_chk@plt>
  449ba8:	ldp	x20, x19, [sp, #64]
  449bac:	ldr	x21, [sp, #48]
  449bb0:	ldp	x29, x30, [sp, #32]
  449bb4:	add	sp, sp, #0x50
  449bb8:	ret
  449bbc:	mov	x8, xzr
  449bc0:	ldr	x9, [x4, x8, lsl #3]
  449bc4:	add	x8, x8, #0x1
  449bc8:	cbnz	x9, 449bc0 <argp_parse@@Base+0xf514>
  449bcc:	sub	x5, x8, #0x1
  449bd0:	b	4498d0 <argp_parse@@Base+0xf224>
  449bd4:	sub	sp, sp, #0x60
  449bd8:	stp	x29, x30, [sp, #80]
  449bdc:	ldr	w9, [x4, #24]
  449be0:	add	x29, sp, #0x50
  449be4:	mov	w8, w9
  449be8:	tbz	w9, #31, 449c1c <argp_parse@@Base+0xf570>
  449bec:	add	w8, w9, #0x8
  449bf0:	cmn	w9, #0x8
  449bf4:	str	w8, [x4, #24]
  449bf8:	b.gt	449c1c <argp_parse@@Base+0xf570>
  449bfc:	ldr	x10, [x4, #8]
  449c00:	sxtw	x9, w9
  449c04:	add	x9, x10, x9
  449c08:	ldr	x9, [x9]
  449c0c:	str	x9, [sp]
  449c10:	cbnz	x9, 449c34 <argp_parse@@Base+0xf588>
  449c14:	mov	x5, xzr
  449c18:	b	449ed4 <argp_parse@@Base+0xf828>
  449c1c:	ldr	x9, [x4]
  449c20:	add	x10, x9, #0x8
  449c24:	str	x10, [x4]
  449c28:	ldr	x9, [x9]
  449c2c:	str	x9, [sp]
  449c30:	cbz	x9, 449c14 <argp_parse@@Base+0xf568>
  449c34:	tbnz	w8, #31, 449c40 <argp_parse@@Base+0xf594>
  449c38:	mov	w9, w8
  449c3c:	b	449c6c <argp_parse@@Base+0xf5c0>
  449c40:	add	w9, w8, #0x8
  449c44:	cmn	w8, #0x8
  449c48:	str	w9, [x4, #24]
  449c4c:	b.gt	449c6c <argp_parse@@Base+0xf5c0>
  449c50:	ldr	x10, [x4, #8]
  449c54:	add	x8, x10, w8, sxtw
  449c58:	ldr	x8, [x8]
  449c5c:	str	x8, [sp, #8]
  449c60:	cbnz	x8, 449c84 <argp_parse@@Base+0xf5d8>
  449c64:	mov	w5, #0x1                   	// #1
  449c68:	b	449ed4 <argp_parse@@Base+0xf828>
  449c6c:	ldr	x8, [x4]
  449c70:	add	x10, x8, #0x8
  449c74:	str	x10, [x4]
  449c78:	ldr	x8, [x8]
  449c7c:	str	x8, [sp, #8]
  449c80:	cbz	x8, 449c64 <argp_parse@@Base+0xf5b8>
  449c84:	tbnz	w9, #31, 449c90 <argp_parse@@Base+0xf5e4>
  449c88:	mov	w8, w9
  449c8c:	b	449cbc <argp_parse@@Base+0xf610>
  449c90:	add	w8, w9, #0x8
  449c94:	cmn	w9, #0x8
  449c98:	str	w8, [x4, #24]
  449c9c:	b.gt	449cbc <argp_parse@@Base+0xf610>
  449ca0:	ldr	x10, [x4, #8]
  449ca4:	add	x9, x10, w9, sxtw
  449ca8:	ldr	x9, [x9]
  449cac:	str	x9, [sp, #16]
  449cb0:	cbnz	x9, 449cd4 <argp_parse@@Base+0xf628>
  449cb4:	mov	w5, #0x2                   	// #2
  449cb8:	b	449ed4 <argp_parse@@Base+0xf828>
  449cbc:	ldr	x9, [x4]
  449cc0:	add	x10, x9, #0x8
  449cc4:	str	x10, [x4]
  449cc8:	ldr	x9, [x9]
  449ccc:	str	x9, [sp, #16]
  449cd0:	cbz	x9, 449cb4 <argp_parse@@Base+0xf608>
  449cd4:	tbnz	w8, #31, 449ce0 <argp_parse@@Base+0xf634>
  449cd8:	mov	w9, w8
  449cdc:	b	449d0c <argp_parse@@Base+0xf660>
  449ce0:	add	w9, w8, #0x8
  449ce4:	cmn	w8, #0x8
  449ce8:	str	w9, [x4, #24]
  449cec:	b.gt	449d0c <argp_parse@@Base+0xf660>
  449cf0:	ldr	x10, [x4, #8]
  449cf4:	add	x8, x10, w8, sxtw
  449cf8:	ldr	x8, [x8]
  449cfc:	str	x8, [sp, #24]
  449d00:	cbnz	x8, 449d24 <argp_parse@@Base+0xf678>
  449d04:	mov	w5, #0x3                   	// #3
  449d08:	b	449ed4 <argp_parse@@Base+0xf828>
  449d0c:	ldr	x8, [x4]
  449d10:	add	x10, x8, #0x8
  449d14:	str	x10, [x4]
  449d18:	ldr	x8, [x8]
  449d1c:	str	x8, [sp, #24]
  449d20:	cbz	x8, 449d04 <argp_parse@@Base+0xf658>
  449d24:	tbnz	w9, #31, 449d30 <argp_parse@@Base+0xf684>
  449d28:	mov	w8, w9
  449d2c:	b	449d5c <argp_parse@@Base+0xf6b0>
  449d30:	add	w8, w9, #0x8
  449d34:	cmn	w9, #0x8
  449d38:	str	w8, [x4, #24]
  449d3c:	b.gt	449d5c <argp_parse@@Base+0xf6b0>
  449d40:	ldr	x10, [x4, #8]
  449d44:	add	x9, x10, w9, sxtw
  449d48:	ldr	x9, [x9]
  449d4c:	str	x9, [sp, #32]
  449d50:	cbnz	x9, 449d74 <argp_parse@@Base+0xf6c8>
  449d54:	mov	w5, #0x4                   	// #4
  449d58:	b	449ed4 <argp_parse@@Base+0xf828>
  449d5c:	ldr	x9, [x4]
  449d60:	add	x10, x9, #0x8
  449d64:	str	x10, [x4]
  449d68:	ldr	x9, [x9]
  449d6c:	str	x9, [sp, #32]
  449d70:	cbz	x9, 449d54 <argp_parse@@Base+0xf6a8>
  449d74:	tbnz	w8, #31, 449d80 <argp_parse@@Base+0xf6d4>
  449d78:	mov	w9, w8
  449d7c:	b	449d9c <argp_parse@@Base+0xf6f0>
  449d80:	add	w9, w8, #0x8
  449d84:	cmn	w8, #0x8
  449d88:	str	w9, [x4, #24]
  449d8c:	b.gt	449d9c <argp_parse@@Base+0xf6f0>
  449d90:	ldr	x10, [x4, #8]
  449d94:	add	x8, x10, w8, sxtw
  449d98:	b	449da8 <argp_parse@@Base+0xf6fc>
  449d9c:	ldr	x8, [x4]
  449da0:	add	x10, x8, #0x8
  449da4:	str	x10, [x4]
  449da8:	ldr	x8, [x8]
  449dac:	str	x8, [sp, #40]
  449db0:	cbz	x8, 449dc0 <argp_parse@@Base+0xf714>
  449db4:	tbnz	w9, #31, 449dc8 <argp_parse@@Base+0xf71c>
  449db8:	mov	w8, w9
  449dbc:	b	449de4 <argp_parse@@Base+0xf738>
  449dc0:	mov	w5, #0x5                   	// #5
  449dc4:	b	449ed4 <argp_parse@@Base+0xf828>
  449dc8:	add	w8, w9, #0x8
  449dcc:	cmn	w9, #0x8
  449dd0:	str	w8, [x4, #24]
  449dd4:	b.gt	449de4 <argp_parse@@Base+0xf738>
  449dd8:	ldr	x10, [x4, #8]
  449ddc:	add	x9, x10, w9, sxtw
  449de0:	b	449df0 <argp_parse@@Base+0xf744>
  449de4:	ldr	x9, [x4]
  449de8:	add	x10, x9, #0x8
  449dec:	str	x10, [x4]
  449df0:	ldr	x9, [x9]
  449df4:	str	x9, [sp, #48]
  449df8:	cbz	x9, 449e08 <argp_parse@@Base+0xf75c>
  449dfc:	tbnz	w8, #31, 449e10 <argp_parse@@Base+0xf764>
  449e00:	mov	w9, w8
  449e04:	b	449e2c <argp_parse@@Base+0xf780>
  449e08:	mov	w5, #0x6                   	// #6
  449e0c:	b	449ed4 <argp_parse@@Base+0xf828>
  449e10:	add	w9, w8, #0x8
  449e14:	cmn	w8, #0x8
  449e18:	str	w9, [x4, #24]
  449e1c:	b.gt	449e2c <argp_parse@@Base+0xf780>
  449e20:	ldr	x10, [x4, #8]
  449e24:	add	x8, x10, w8, sxtw
  449e28:	b	449e38 <argp_parse@@Base+0xf78c>
  449e2c:	ldr	x8, [x4]
  449e30:	add	x10, x8, #0x8
  449e34:	str	x10, [x4]
  449e38:	ldr	x8, [x8]
  449e3c:	str	x8, [sp, #56]
  449e40:	cbz	x8, 449e50 <argp_parse@@Base+0xf7a4>
  449e44:	tbnz	w9, #31, 449e58 <argp_parse@@Base+0xf7ac>
  449e48:	mov	w8, w9
  449e4c:	b	449e74 <argp_parse@@Base+0xf7c8>
  449e50:	mov	w5, #0x7                   	// #7
  449e54:	b	449ed4 <argp_parse@@Base+0xf828>
  449e58:	add	w8, w9, #0x8
  449e5c:	cmn	w9, #0x8
  449e60:	str	w8, [x4, #24]
  449e64:	b.gt	449e74 <argp_parse@@Base+0xf7c8>
  449e68:	ldr	x10, [x4, #8]
  449e6c:	add	x9, x10, w9, sxtw
  449e70:	b	449e80 <argp_parse@@Base+0xf7d4>
  449e74:	ldr	x9, [x4]
  449e78:	add	x10, x9, #0x8
  449e7c:	str	x10, [x4]
  449e80:	ldr	x9, [x9]
  449e84:	str	x9, [sp, #64]
  449e88:	cbz	x9, 449ed0 <argp_parse@@Base+0xf824>
  449e8c:	tbz	w8, #31, 449eac <argp_parse@@Base+0xf800>
  449e90:	add	w9, w8, #0x8
  449e94:	cmn	w8, #0x8
  449e98:	str	w9, [x4, #24]
  449e9c:	b.gt	449eac <argp_parse@@Base+0xf800>
  449ea0:	ldr	x9, [x4, #8]
  449ea4:	add	x8, x9, w8, sxtw
  449ea8:	b	449eb8 <argp_parse@@Base+0xf80c>
  449eac:	ldr	x8, [x4]
  449eb0:	add	x9, x8, #0x8
  449eb4:	str	x9, [x4]
  449eb8:	ldr	x8, [x8]
  449ebc:	str	x8, [sp, #72]
  449ec0:	cmp	x8, #0x0
  449ec4:	mov	w8, #0x9                   	// #9
  449ec8:	cinc	x5, x8, ne  // ne = any
  449ecc:	b	449ed4 <argp_parse@@Base+0xf828>
  449ed0:	mov	w5, #0x8                   	// #8
  449ed4:	mov	x4, sp
  449ed8:	bl	4498d0 <argp_parse@@Base+0xf224>
  449edc:	ldp	x29, x30, [sp, #80]
  449ee0:	add	sp, sp, #0x60
  449ee4:	ret
  449ee8:	sub	sp, sp, #0xf0
  449eec:	stp	x29, x30, [sp, #224]
  449ef0:	add	x29, sp, #0xe0
  449ef4:	mov	x8, #0xffffffffffffffe0    	// #-32
  449ef8:	mov	x9, sp
  449efc:	sub	x10, x29, #0x60
  449f00:	movk	x8, #0xff80, lsl #32
  449f04:	add	x11, x29, #0x10
  449f08:	add	x9, x9, #0x80
  449f0c:	add	x10, x10, #0x20
  449f10:	stp	x9, x8, [x29, #-16]
  449f14:	stp	x11, x10, [x29, #-32]
  449f18:	stp	x4, x5, [x29, #-96]
  449f1c:	stp	x6, x7, [x29, #-80]
  449f20:	stp	q0, q1, [sp]
  449f24:	ldp	q0, q1, [x29, #-32]
  449f28:	sub	x4, x29, #0x40
  449f2c:	stp	q2, q3, [sp, #32]
  449f30:	stp	q4, q5, [sp, #64]
  449f34:	stp	q6, q7, [sp, #96]
  449f38:	stp	q0, q1, [x29, #-64]
  449f3c:	bl	449bd4 <argp_parse@@Base+0xf528>
  449f40:	ldp	x29, x30, [sp, #224]
  449f44:	add	sp, sp, #0xf0
  449f48:	ret
  449f4c:	stp	x29, x30, [sp, #-16]!
  449f50:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  449f54:	add	x1, x1, #0x68
  449f58:	mov	w2, #0x5                   	// #5
  449f5c:	mov	x0, xzr
  449f60:	mov	x29, sp
  449f64:	bl	4048b0 <dcgettext@plt>
  449f68:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  449f6c:	mov	x1, x0
  449f70:	add	x2, x2, #0x7d
  449f74:	mov	w0, #0x1                   	// #1
  449f78:	bl	404310 <__printf_chk@plt>
  449f7c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  449f80:	add	x1, x1, #0x8d
  449f84:	mov	w2, #0x5                   	// #5
  449f88:	mov	x0, xzr
  449f8c:	bl	4048b0 <dcgettext@plt>
  449f90:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x16e3c>
  449f94:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  449f98:	mov	x1, x0
  449f9c:	add	x2, x2, #0x8a2
  449fa0:	add	x3, x3, #0xa1
  449fa4:	mov	w0, #0x1                   	// #1
  449fa8:	bl	404310 <__printf_chk@plt>
  449fac:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  449fb0:	add	x1, x1, #0xc2
  449fb4:	mov	w2, #0x5                   	// #5
  449fb8:	mov	x0, xzr
  449fbc:	bl	4048b0 <dcgettext@plt>
  449fc0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  449fc4:	ldr	x1, [x8, #96]
  449fc8:	ldp	x29, x30, [sp], #16
  449fcc:	b	4048d0 <fputs_unlocked@plt>
  449fd0:	stp	x29, x30, [sp, #-32]!
  449fd4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  449fd8:	udiv	x8, x8, x1
  449fdc:	cmp	x8, x0
  449fe0:	str	x19, [sp, #16]
  449fe4:	mov	x29, sp
  449fe8:	b.cc	44a00c <argp_parse@@Base+0xf960>  // b.lo, b.ul, b.last
  449fec:	mul	x19, x1, x0
  449ff0:	mov	x0, x19
  449ff4:	bl	404210 <malloc@plt>
  449ff8:	cbz	x19, 44a000 <argp_parse@@Base+0xf954>
  449ffc:	cbz	x0, 44a00c <argp_parse@@Base+0xf960>
  44a000:	ldr	x19, [sp, #16]
  44a004:	ldp	x29, x30, [sp], #32
  44a008:	ret
  44a00c:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a010:	stp	x29, x30, [sp, #-32]!
  44a014:	str	x19, [sp, #16]
  44a018:	mov	x29, sp
  44a01c:	mov	x19, x0
  44a020:	bl	404210 <malloc@plt>
  44a024:	cbz	x19, 44a02c <argp_parse@@Base+0xf980>
  44a028:	cbz	x0, 44a038 <argp_parse@@Base+0xf98c>
  44a02c:	ldr	x19, [sp, #16]
  44a030:	ldp	x29, x30, [sp], #32
  44a034:	ret
  44a038:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a03c:	stp	x29, x30, [sp, #-32]!
  44a040:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  44a044:	udiv	x8, x8, x2
  44a048:	cmp	x8, x1
  44a04c:	str	x19, [sp, #16]
  44a050:	mov	x29, sp
  44a054:	b.cc	44a08c <argp_parse@@Base+0xf9e0>  // b.lo, b.ul, b.last
  44a058:	mul	x19, x2, x1
  44a05c:	cbz	x0, 44a070 <argp_parse@@Base+0xf9c4>
  44a060:	cbnz	x19, 44a070 <argp_parse@@Base+0xf9c4>
  44a064:	bl	4046b0 <free@plt>
  44a068:	mov	x0, xzr
  44a06c:	b	44a080 <argp_parse@@Base+0xf9d4>
  44a070:	mov	x1, x19
  44a074:	bl	404450 <realloc@plt>
  44a078:	cbz	x19, 44a080 <argp_parse@@Base+0xf9d4>
  44a07c:	cbz	x0, 44a08c <argp_parse@@Base+0xf9e0>
  44a080:	ldr	x19, [sp, #16]
  44a084:	ldp	x29, x30, [sp], #32
  44a088:	ret
  44a08c:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a090:	stp	x29, x30, [sp, #-32]!
  44a094:	str	x19, [sp, #16]
  44a098:	mov	x19, x1
  44a09c:	mov	x29, sp
  44a0a0:	cbz	x0, 44a0b4 <argp_parse@@Base+0xfa08>
  44a0a4:	cbnz	x19, 44a0b4 <argp_parse@@Base+0xfa08>
  44a0a8:	bl	4046b0 <free@plt>
  44a0ac:	mov	x0, xzr
  44a0b0:	b	44a0c4 <argp_parse@@Base+0xfa18>
  44a0b4:	mov	x1, x19
  44a0b8:	bl	404450 <realloc@plt>
  44a0bc:	cbz	x19, 44a0c4 <argp_parse@@Base+0xfa18>
  44a0c0:	cbz	x0, 44a0d0 <argp_parse@@Base+0xfa24>
  44a0c4:	ldr	x19, [sp, #16]
  44a0c8:	ldp	x29, x30, [sp], #32
  44a0cc:	ret
  44a0d0:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a0d4:	stp	x29, x30, [sp, #-32]!
  44a0d8:	ldr	x8, [x1]
  44a0dc:	str	x19, [sp, #16]
  44a0e0:	mov	x29, sp
  44a0e4:	cbz	x0, 44a128 <argp_parse@@Base+0xfa7c>
  44a0e8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  44a0ec:	movk	x9, #0x5554
  44a0f0:	udiv	x9, x9, x2
  44a0f4:	cmp	x9, x8
  44a0f8:	b.ls	44a164 <argp_parse@@Base+0xfab8>  // b.plast
  44a0fc:	add	x8, x8, x8, lsr #1
  44a100:	add	x9, x8, #0x1
  44a104:	mul	x8, x9, x2
  44a108:	str	x9, [x1]
  44a10c:	cbz	x8, 44a168 <argp_parse@@Base+0xfabc>
  44a110:	mov	x1, x8
  44a114:	bl	404450 <realloc@plt>
  44a118:	cbz	x0, 44a164 <argp_parse@@Base+0xfab8>
  44a11c:	ldr	x19, [sp, #16]
  44a120:	ldp	x29, x30, [sp], #32
  44a124:	ret
  44a128:	cbnz	x8, 44a13c <argp_parse@@Base+0xfa90>
  44a12c:	mov	w8, #0x80                  	// #128
  44a130:	udiv	x8, x8, x2
  44a134:	cmp	x2, #0x80
  44a138:	cinc	x8, x8, hi  // hi = pmore
  44a13c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  44a140:	udiv	x9, x9, x2
  44a144:	cmp	x9, x8
  44a148:	b.cc	44a164 <argp_parse@@Base+0xfab8>  // b.lo, b.ul, b.last
  44a14c:	mul	x19, x8, x2
  44a150:	mov	x0, x19
  44a154:	str	x8, [x1]
  44a158:	bl	404210 <malloc@plt>
  44a15c:	cbz	x19, 44a11c <argp_parse@@Base+0xfa70>
  44a160:	cbnz	x0, 44a11c <argp_parse@@Base+0xfa70>
  44a164:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a168:	bl	4046b0 <free@plt>
  44a16c:	mov	x0, xzr
  44a170:	ldr	x19, [sp, #16]
  44a174:	ldp	x29, x30, [sp], #32
  44a178:	ret
  44a17c:	stp	x29, x30, [sp, #-32]!
  44a180:	str	x19, [sp, #16]
  44a184:	mov	x29, sp
  44a188:	mov	x19, x0
  44a18c:	bl	404210 <malloc@plt>
  44a190:	cbz	x19, 44a198 <argp_parse@@Base+0xfaec>
  44a194:	cbz	x0, 44a1a4 <argp_parse@@Base+0xfaf8>
  44a198:	ldr	x19, [sp, #16]
  44a19c:	ldp	x29, x30, [sp], #32
  44a1a0:	ret
  44a1a4:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a1a8:	stp	x29, x30, [sp, #-16]!
  44a1ac:	ldr	x8, [x1]
  44a1b0:	mov	x29, sp
  44a1b4:	cbz	x0, 44a1e8 <argp_parse@@Base+0xfb3c>
  44a1b8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  44a1bc:	movk	x9, #0x5554
  44a1c0:	cmp	x8, x9
  44a1c4:	b.cs	44a22c <argp_parse@@Base+0xfb80>  // b.hs, b.nlast
  44a1c8:	add	x8, x8, x8, lsr #1
  44a1cc:	adds	x8, x8, #0x1
  44a1d0:	str	x8, [x1]
  44a1d4:	b.eq	44a208 <argp_parse@@Base+0xfb5c>  // b.none
  44a1d8:	mov	x1, x8
  44a1dc:	bl	404450 <realloc@plt>
  44a1e0:	cbnz	x0, 44a200 <argp_parse@@Base+0xfb54>
  44a1e4:	b	44a22c <argp_parse@@Base+0xfb80>
  44a1e8:	cbz	x8, 44a218 <argp_parse@@Base+0xfb6c>
  44a1ec:	tbnz	x8, #63, 44a22c <argp_parse@@Base+0xfb80>
  44a1f0:	mov	x0, x8
  44a1f4:	str	x8, [x1]
  44a1f8:	bl	404210 <malloc@plt>
  44a1fc:	cbz	x0, 44a22c <argp_parse@@Base+0xfb80>
  44a200:	ldp	x29, x30, [sp], #16
  44a204:	ret
  44a208:	bl	4046b0 <free@plt>
  44a20c:	mov	x0, xzr
  44a210:	ldp	x29, x30, [sp], #16
  44a214:	ret
  44a218:	mov	w8, #0x80                  	// #128
  44a21c:	mov	x0, x8
  44a220:	str	x8, [x1]
  44a224:	bl	404210 <malloc@plt>
  44a228:	cbnz	x0, 44a200 <argp_parse@@Base+0xfb54>
  44a22c:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a230:	stp	x29, x30, [sp, #-32]!
  44a234:	stp	x20, x19, [sp, #16]
  44a238:	mov	x29, sp
  44a23c:	mov	x19, x0
  44a240:	bl	404210 <malloc@plt>
  44a244:	mov	x20, x0
  44a248:	cbz	x19, 44a250 <argp_parse@@Base+0xfba4>
  44a24c:	cbz	x20, 44a270 <argp_parse@@Base+0xfbc4>
  44a250:	mov	x0, x20
  44a254:	mov	w1, wzr
  44a258:	mov	x2, x19
  44a25c:	bl	404320 <memset@plt>
  44a260:	mov	x0, x20
  44a264:	ldp	x20, x19, [sp, #16]
  44a268:	ldp	x29, x30, [sp], #32
  44a26c:	ret
  44a270:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a274:	stp	x29, x30, [sp, #-16]!
  44a278:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  44a27c:	udiv	x8, x8, x1
  44a280:	cmp	x8, x0
  44a284:	mov	x29, sp
  44a288:	b.cc	44a29c <argp_parse@@Base+0xfbf0>  // b.lo, b.ul, b.last
  44a28c:	bl	4043d0 <calloc@plt>
  44a290:	cbz	x0, 44a29c <argp_parse@@Base+0xfbf0>
  44a294:	ldp	x29, x30, [sp], #16
  44a298:	ret
  44a29c:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a2a0:	stp	x29, x30, [sp, #-48]!
  44a2a4:	stp	x20, x19, [sp, #32]
  44a2a8:	mov	x20, x0
  44a2ac:	mov	x0, x1
  44a2b0:	str	x21, [sp, #16]
  44a2b4:	mov	x29, sp
  44a2b8:	mov	x19, x1
  44a2bc:	bl	404210 <malloc@plt>
  44a2c0:	mov	x21, x0
  44a2c4:	cbz	x19, 44a2cc <argp_parse@@Base+0xfc20>
  44a2c8:	cbz	x21, 44a2f0 <argp_parse@@Base+0xfc44>
  44a2cc:	mov	x0, x21
  44a2d0:	mov	x1, x20
  44a2d4:	mov	x2, x19
  44a2d8:	bl	403e80 <memcpy@plt>
  44a2dc:	mov	x0, x21
  44a2e0:	ldp	x20, x19, [sp, #32]
  44a2e4:	ldr	x21, [sp, #16]
  44a2e8:	ldp	x29, x30, [sp], #48
  44a2ec:	ret
  44a2f0:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a2f4:	stp	x29, x30, [sp, #-48]!
  44a2f8:	str	x21, [sp, #16]
  44a2fc:	stp	x20, x19, [sp, #32]
  44a300:	mov	x29, sp
  44a304:	mov	x19, x0
  44a308:	bl	403f00 <strlen@plt>
  44a30c:	add	x20, x0, #0x1
  44a310:	mov	x0, x20
  44a314:	bl	404210 <malloc@plt>
  44a318:	mov	x21, x0
  44a31c:	cbz	x20, 44a324 <argp_parse@@Base+0xfc78>
  44a320:	cbz	x21, 44a348 <argp_parse@@Base+0xfc9c>
  44a324:	mov	x0, x21
  44a328:	mov	x1, x19
  44a32c:	mov	x2, x20
  44a330:	bl	403e80 <memcpy@plt>
  44a334:	mov	x0, x21
  44a338:	ldp	x20, x19, [sp, #32]
  44a33c:	ldr	x21, [sp, #16]
  44a340:	ldp	x29, x30, [sp], #48
  44a344:	ret
  44a348:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a34c:	stp	x29, x30, [sp, #-32]!
  44a350:	mov	x0, xzr
  44a354:	mov	x1, xzr
  44a358:	str	x19, [sp, #16]
  44a35c:	mov	x29, sp
  44a360:	bl	403eb0 <getcwd@plt>
  44a364:	mov	x19, x0
  44a368:	cbnz	x0, 44a37c <argp_parse@@Base+0xfcd0>
  44a36c:	bl	4049c0 <__errno_location@plt>
  44a370:	ldr	w8, [x0]
  44a374:	cmp	w8, #0xc
  44a378:	b.eq	44a38c <argp_parse@@Base+0xfce0>  // b.none
  44a37c:	mov	x0, x19
  44a380:	ldr	x19, [sp, #16]
  44a384:	ldp	x29, x30, [sp], #32
  44a388:	ret
  44a38c:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a390:	stp	x29, x30, [sp, #-16]!
  44a394:	mov	x29, sp
  44a398:	bl	404730 <strndup@plt>
  44a39c:	cbz	x0, 44a3a8 <argp_parse@@Base+0xfcfc>
  44a3a0:	ldp	x29, x30, [sp], #16
  44a3a4:	ret
  44a3a8:	bl	40eb80 <wcrtomb@plt+0xa090>
  44a3ac:	stp	x29, x30, [sp, #-80]!
  44a3b0:	cmp	w2, #0x25
  44a3b4:	str	x25, [sp, #16]
  44a3b8:	stp	x24, x23, [sp, #32]
  44a3bc:	stp	x22, x21, [sp, #48]
  44a3c0:	stp	x20, x19, [sp, #64]
  44a3c4:	mov	x29, sp
  44a3c8:	b.cs	44a72c <argp_parse@@Base+0x10080>  // b.hs, b.nlast
  44a3cc:	mov	x23, x4
  44a3d0:	mov	x19, x3
  44a3d4:	mov	w22, w2
  44a3d8:	mov	x21, x1
  44a3dc:	mov	x20, x0
  44a3e0:	bl	4049c0 <__errno_location@plt>
  44a3e4:	mov	x24, x0
  44a3e8:	str	wzr, [x0]
  44a3ec:	bl	404640 <__ctype_b_loc@plt>
  44a3f0:	ldr	x8, [x0]
  44a3f4:	mov	x10, x20
  44a3f8:	ldrb	w9, [x10], #1
  44a3fc:	ldrh	w11, [x8, x9, lsl #1]
  44a400:	tbnz	w11, #13, 44a3f8 <argp_parse@@Base+0xfd4c>
  44a404:	cmp	x21, #0x0
  44a408:	add	x8, x29, #0x18
  44a40c:	csel	x21, x8, x21, eq  // eq = none
  44a410:	cmp	w9, #0x2d
  44a414:	b.ne	44a420 <argp_parse@@Base+0xfd74>  // b.any
  44a418:	mov	w20, #0x4                   	// #4
  44a41c:	b	44a6fc <argp_parse@@Base+0x10050>
  44a420:	mov	x0, x20
  44a424:	mov	x1, x21
  44a428:	mov	w2, w22
  44a42c:	mov	w3, wzr
  44a430:	bl	4043c0 <__strtoul_internal@plt>
  44a434:	ldr	x25, [x21]
  44a438:	cmp	x25, x20
  44a43c:	b.eq	44a468 <argp_parse@@Base+0xfdbc>  // b.none
  44a440:	ldr	w20, [x24]
  44a444:	mov	x22, x0
  44a448:	cbz	w20, 44a458 <argp_parse@@Base+0xfdac>
  44a44c:	cmp	w20, #0x22
  44a450:	b.ne	44a418 <argp_parse@@Base+0xfd6c>  // b.any
  44a454:	mov	w20, #0x1                   	// #1
  44a458:	cbz	x23, 44a6f8 <argp_parse@@Base+0x1004c>
  44a45c:	ldrb	w24, [x25]
  44a460:	cbnz	w24, 44a490 <argp_parse@@Base+0xfde4>
  44a464:	b	44a6f8 <argp_parse@@Base+0x1004c>
  44a468:	cbz	x23, 44a418 <argp_parse@@Base+0xfd6c>
  44a46c:	ldrb	w1, [x20]
  44a470:	cbz	w1, 44a418 <argp_parse@@Base+0xfd6c>
  44a474:	mov	x0, x23
  44a478:	bl	404750 <strchr@plt>
  44a47c:	cbz	x0, 44a418 <argp_parse@@Base+0xfd6c>
  44a480:	mov	w20, wzr
  44a484:	mov	w22, #0x1                   	// #1
  44a488:	ldrb	w24, [x25]
  44a48c:	cbz	w24, 44a6f8 <argp_parse@@Base+0x1004c>
  44a490:	mov	x0, x23
  44a494:	mov	w1, w24
  44a498:	bl	404750 <strchr@plt>
  44a49c:	cbz	x0, 44a568 <argp_parse@@Base+0xfebc>
  44a4a0:	sub	w10, w24, #0x45
  44a4a4:	mov	w8, #0x1                   	// #1
  44a4a8:	cmp	w10, #0x2f
  44a4ac:	mov	w9, #0x400                 	// #1024
  44a4b0:	b.hi	44a528 <argp_parse@@Base+0xfe7c>  // b.pmore
  44a4b4:	mov	w11, #0x1                   	// #1
  44a4b8:	lsl	x10, x11, x10
  44a4bc:	mov	x11, #0x8945                	// #35141
  44a4c0:	movk	x11, #0x30, lsl #16
  44a4c4:	movk	x11, #0x8144, lsl #32
  44a4c8:	tst	x10, x11
  44a4cc:	b.eq	44a528 <argp_parse@@Base+0xfe7c>  // b.none
  44a4d0:	mov	w1, #0x30                  	// #48
  44a4d4:	mov	x0, x23
  44a4d8:	bl	404750 <strchr@plt>
  44a4dc:	cbz	x0, 44a514 <argp_parse@@Base+0xfe68>
  44a4e0:	ldrb	w8, [x25, #1]
  44a4e4:	cmp	w8, #0x42
  44a4e8:	b.eq	44a520 <argp_parse@@Base+0xfe74>  // b.none
  44a4ec:	cmp	w8, #0x44
  44a4f0:	b.eq	44a520 <argp_parse@@Base+0xfe74>  // b.none
  44a4f4:	cmp	w8, #0x69
  44a4f8:	b.ne	44a514 <argp_parse@@Base+0xfe68>  // b.any
  44a4fc:	ldrb	w8, [x25, #2]
  44a500:	mov	w9, #0x3                   	// #3
  44a504:	cmp	w8, #0x42
  44a508:	csinc	x8, x9, xzr, eq  // eq = none
  44a50c:	mov	w9, #0x400                 	// #1024
  44a510:	b	44a528 <argp_parse@@Base+0xfe7c>
  44a514:	mov	w8, #0x1                   	// #1
  44a518:	mov	w9, #0x400                 	// #1024
  44a51c:	b	44a528 <argp_parse@@Base+0xfe7c>
  44a520:	mov	w8, #0x2                   	// #2
  44a524:	mov	w9, #0x3e8                 	// #1000
  44a528:	sub	w10, w24, #0x42
  44a52c:	cmp	w10, #0x35
  44a530:	b.hi	44a568 <argp_parse@@Base+0xfebc>  // b.pmore
  44a534:	adrp	x11, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a538:	add	x11, x11, #0x132
  44a53c:	adr	x12, 44a550 <argp_parse@@Base+0xfea4>
  44a540:	ldrb	w13, [x11, x10]
  44a544:	add	x12, x12, x13, lsl #2
  44a548:	mov	w10, wzr
  44a54c:	br	x12
  44a550:	umulh	x10, x9, x22
  44a554:	mul	x11, x22, x9
  44a558:	cmp	xzr, x10
  44a55c:	cset	w10, ne  // ne = any
  44a560:	csinv	x11, x11, xzr, eq  // eq = none
  44a564:	b	44a694 <argp_parse@@Base+0xffe8>
  44a568:	str	x22, [x19]
  44a56c:	orr	w20, w20, #0x2
  44a570:	b	44a6fc <argp_parse@@Base+0x10050>
  44a574:	umulh	x10, x9, x22
  44a578:	mul	x9, x22, x9
  44a57c:	cmp	xzr, x10
  44a580:	b	44a6d0 <argp_parse@@Base+0x10024>
  44a584:	umulh	x10, x9, x22
  44a588:	mul	x11, x22, x9
  44a58c:	cmp	xzr, x10
  44a590:	cset	w10, ne  // ne = any
  44a594:	csinv	x11, x11, xzr, eq  // eq = none
  44a598:	b	44a6ac <argp_parse@@Base+0x10000>
  44a59c:	umulh	x10, x9, x22
  44a5a0:	mul	x11, x22, x9
  44a5a4:	cmp	xzr, x10
  44a5a8:	cset	w10, ne  // ne = any
  44a5ac:	csinv	x11, x11, xzr, eq  // eq = none
  44a5b0:	b	44a67c <argp_parse@@Base+0xffd0>
  44a5b4:	umulh	x10, x9, x22
  44a5b8:	mul	x11, x22, x9
  44a5bc:	cmp	xzr, x10
  44a5c0:	cset	w10, ne  // ne = any
  44a5c4:	csinv	x11, x11, xzr, eq  // eq = none
  44a5c8:	b	44a634 <argp_parse@@Base+0xff88>
  44a5cc:	cmp	xzr, x22, lsr #54
  44a5d0:	lsl	x9, x22, #10
  44a5d4:	b	44a6d0 <argp_parse@@Base+0x10024>
  44a5d8:	umulh	x10, x9, x22
  44a5dc:	mul	x11, x22, x9
  44a5e0:	cmp	xzr, x10
  44a5e4:	cset	w10, ne  // ne = any
  44a5e8:	csinv	x11, x11, xzr, eq  // eq = none
  44a5ec:	b	44a64c <argp_parse@@Base+0xffa0>
  44a5f0:	umulh	x10, x9, x22
  44a5f4:	mul	x11, x22, x9
  44a5f8:	cmp	xzr, x10
  44a5fc:	cset	w10, ne  // ne = any
  44a600:	csinv	x11, x11, xzr, eq  // eq = none
  44a604:	b	44a664 <argp_parse@@Base+0xffb8>
  44a608:	umulh	x10, x9, x22
  44a60c:	mul	x11, x22, x9
  44a610:	cmp	xzr, x10
  44a614:	csinv	x11, x11, xzr, eq  // eq = none
  44a618:	umulh	x12, x9, x11
  44a61c:	cset	w10, ne  // ne = any
  44a620:	cmp	xzr, x12
  44a624:	mul	x11, x11, x9
  44a628:	cset	w12, ne  // ne = any
  44a62c:	csinv	x11, x11, xzr, eq  // eq = none
  44a630:	orr	w10, w10, w12
  44a634:	umulh	x12, x9, x11
  44a638:	cmp	xzr, x12
  44a63c:	mul	x11, x11, x9
  44a640:	cset	w12, ne  // ne = any
  44a644:	csinv	x11, x11, xzr, eq  // eq = none
  44a648:	orr	w10, w10, w12
  44a64c:	umulh	x12, x9, x11
  44a650:	cmp	xzr, x12
  44a654:	mul	x11, x11, x9
  44a658:	cset	w12, ne  // ne = any
  44a65c:	csinv	x11, x11, xzr, eq  // eq = none
  44a660:	orr	w10, w10, w12
  44a664:	umulh	x12, x9, x11
  44a668:	cmp	xzr, x12
  44a66c:	mul	x11, x11, x9
  44a670:	cset	w12, ne  // ne = any
  44a674:	csinv	x11, x11, xzr, eq  // eq = none
  44a678:	orr	w10, w10, w12
  44a67c:	umulh	x12, x9, x11
  44a680:	cmp	xzr, x12
  44a684:	mul	x11, x11, x9
  44a688:	cset	w12, ne  // ne = any
  44a68c:	csinv	x11, x11, xzr, eq  // eq = none
  44a690:	orr	w10, w10, w12
  44a694:	umulh	x12, x9, x11
  44a698:	cmp	xzr, x12
  44a69c:	mul	x11, x11, x9
  44a6a0:	cset	w12, ne  // ne = any
  44a6a4:	csinv	x11, x11, xzr, eq  // eq = none
  44a6a8:	orr	w10, w10, w12
  44a6ac:	umulh	x12, x9, x11
  44a6b0:	cmp	xzr, x12
  44a6b4:	mul	x9, x11, x9
  44a6b8:	cset	w11, ne  // ne = any
  44a6bc:	csinv	x22, x9, xzr, eq  // eq = none
  44a6c0:	orr	w10, w10, w11
  44a6c4:	b	44a6d8 <argp_parse@@Base+0x1002c>
  44a6c8:	cmp	xzr, x22, lsr #55
  44a6cc:	lsl	x9, x22, #9
  44a6d0:	cset	w10, ne  // ne = any
  44a6d4:	csinv	x22, x9, xzr, eq  // eq = none
  44a6d8:	add	x9, x25, x8
  44a6dc:	str	x9, [x21]
  44a6e0:	ldrb	w8, [x25, x8]
  44a6e4:	and	w9, w10, #0x1
  44a6e8:	orr	w9, w20, w9
  44a6ec:	orr	w10, w9, #0x2
  44a6f0:	cmp	w8, #0x0
  44a6f4:	csel	w20, w9, w10, eq  // eq = none
  44a6f8:	str	x22, [x19]
  44a6fc:	mov	w0, w20
  44a700:	ldp	x20, x19, [sp, #64]
  44a704:	ldp	x22, x21, [sp, #48]
  44a708:	ldp	x24, x23, [sp, #32]
  44a70c:	ldr	x25, [sp, #16]
  44a710:	ldp	x29, x30, [sp], #80
  44a714:	ret
  44a718:	cmn	x22, x22
  44a71c:	lsl	x9, x22, #1
  44a720:	cset	w10, cs  // cs = hs, nlast
  44a724:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  44a728:	b	44a6d8 <argp_parse@@Base+0x1002c>
  44a72c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a730:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a734:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a738:	add	x0, x0, #0x168
  44a73c:	add	x1, x1, #0x18e
  44a740:	add	x3, x3, #0x19a
  44a744:	mov	w2, #0x54                  	// #84
  44a748:	bl	4049b0 <__assert_fail@plt>
  44a74c:	sub	sp, sp, #0x120
  44a750:	stp	x29, x30, [sp, #256]
  44a754:	add	x29, sp, #0x100
  44a758:	mov	x8, #0xffffffffffffffc8    	// #-56
  44a75c:	mov	x9, sp
  44a760:	sub	x10, x29, #0x78
  44a764:	movk	x8, #0xff80, lsl #32
  44a768:	add	x11, x29, #0x20
  44a76c:	add	x9, x9, #0x80
  44a770:	add	x10, x10, #0x38
  44a774:	stp	x9, x8, [x29, #-16]
  44a778:	stp	x11, x10, [x29, #-32]
  44a77c:	stp	x1, x2, [x29, #-120]
  44a780:	stp	x3, x4, [x29, #-104]
  44a784:	stp	x5, x6, [x29, #-88]
  44a788:	stur	x7, [x29, #-72]
  44a78c:	stp	q0, q1, [sp]
  44a790:	ldp	q0, q1, [x29, #-32]
  44a794:	sub	x1, x29, #0x40
  44a798:	str	x28, [sp, #272]
  44a79c:	stp	q2, q3, [sp, #32]
  44a7a0:	stp	q4, q5, [sp, #64]
  44a7a4:	stp	q6, q7, [sp, #96]
  44a7a8:	stp	q0, q1, [x29, #-64]
  44a7ac:	bl	45e2d0 <_obstack_memory_used@@Base+0x1310c>
  44a7b0:	ldr	x28, [sp, #272]
  44a7b4:	ldp	x29, x30, [sp, #256]
  44a7b8:	add	sp, sp, #0x120
  44a7bc:	ret
  44a7c0:	stp	x29, x30, [sp, #-80]!
  44a7c4:	stp	x26, x25, [sp, #16]
  44a7c8:	stp	x24, x23, [sp, #32]
  44a7cc:	stp	x22, x21, [sp, #48]
  44a7d0:	stp	x20, x19, [sp, #64]
  44a7d4:	mov	x29, sp
  44a7d8:	mov	x21, x0
  44a7dc:	bl	4046a0 <chdir@plt>
  44a7e0:	mov	w20, w0
  44a7e4:	cbz	w0, 44aa4c <argp_parse@@Base+0x103a0>
  44a7e8:	bl	4049c0 <__errno_location@plt>
  44a7ec:	ldr	w8, [x0]
  44a7f0:	cmp	w8, #0x24
  44a7f4:	b.ne	44aa4c <argp_parse@@Base+0x103a0>  // b.any
  44a7f8:	mov	x19, x0
  44a7fc:	mov	x0, x21
  44a800:	bl	403f00 <strlen@plt>
  44a804:	cbz	x0, 44aa98 <argp_parse@@Base+0x103ec>
  44a808:	mov	x22, x0
  44a80c:	cmp	x0, #0xfff
  44a810:	b.ls	44aab8 <argp_parse@@Base+0x1040c>  // b.plast
  44a814:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a818:	add	x1, x1, #0x2b6
  44a81c:	mov	x0, x21
  44a820:	bl	404740 <strspn@plt>
  44a824:	cbz	x0, 44a898 <argp_parse@@Base+0x101ec>
  44a828:	mov	x23, x0
  44a82c:	cmp	x0, #0x2
  44a830:	b.ne	44a9a0 <argp_parse@@Base+0x102f4>  // b.any
  44a834:	add	x0, x21, #0x3
  44a838:	sub	x2, x22, #0x3
  44a83c:	mov	w1, #0x2f                  	// #47
  44a840:	mov	w24, #0x2f                  	// #47
  44a844:	bl	404840 <memchr@plt>
  44a848:	cbz	x0, 44a9ec <argp_parse@@Base+0x10340>
  44a84c:	mov	x23, x0
  44a850:	strb	wzr, [x0]
  44a854:	mov	w0, #0xffffff9c            	// #-100
  44a858:	mov	w2, #0x4900                	// #18688
  44a85c:	mov	x1, x21
  44a860:	bl	4049a0 <openat@plt>
  44a864:	strb	w24, [x23]
  44a868:	tbnz	w0, #31, 44aa20 <argp_parse@@Base+0x10374>
  44a86c:	add	x23, x23, #0x1
  44a870:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a874:	mov	w20, w0
  44a878:	add	x1, x1, #0x2b6
  44a87c:	mov	x0, x23
  44a880:	bl	404740 <strspn@plt>
  44a884:	add	x23, x23, x0
  44a888:	ldrb	w8, [x23]
  44a88c:	cmp	w8, #0x2f
  44a890:	b.ne	44a8ac <argp_parse@@Base+0x10200>  // b.any
  44a894:	b	44a9cc <argp_parse@@Base+0x10320>
  44a898:	mov	w20, #0xffffff9c            	// #-100
  44a89c:	mov	x23, x21
  44a8a0:	ldrb	w8, [x23]
  44a8a4:	cmp	w8, #0x2f
  44a8a8:	b.eq	44a9cc <argp_parse@@Base+0x10320>  // b.none
  44a8ac:	add	x25, x21, x22
  44a8b0:	cmp	x23, x25
  44a8b4:	b.hi	44aad8 <argp_parse@@Base+0x1042c>  // b.pmore
  44a8b8:	sub	x8, x25, x23
  44a8bc:	cmp	x8, #0x1, lsl #12
  44a8c0:	b.lt	44a968 <argp_parse@@Base+0x102bc>  // b.tstop
  44a8c4:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a8c8:	mov	w26, #0x2f                  	// #47
  44a8cc:	add	x21, x21, #0x2b6
  44a8d0:	b	44a8f8 <argp_parse@@Base+0x1024c>
  44a8d4:	strb	w26, [x24], #1
  44a8d8:	mov	x0, x24
  44a8dc:	mov	x1, x21
  44a8e0:	bl	404740 <strspn@plt>
  44a8e4:	add	x23, x24, x0
  44a8e8:	sub	x8, x25, x23
  44a8ec:	cmp	x8, #0xfff
  44a8f0:	mov	w20, w22
  44a8f4:	b.le	44a96c <argp_parse@@Base+0x102c0>
  44a8f8:	mov	w1, #0x2f                  	// #47
  44a8fc:	mov	w2, #0x1000                	// #4096
  44a900:	mov	x0, x23
  44a904:	bl	404770 <memrchr@plt>
  44a908:	cbz	x0, 44a9ec <argp_parse@@Base+0x10340>
  44a90c:	sub	x8, x0, x23
  44a910:	mov	x24, x0
  44a914:	cmp	x8, #0x1, lsl #12
  44a918:	strb	wzr, [x0]
  44a91c:	b.ge	44aa78 <argp_parse@@Base+0x103cc>  // b.tcont
  44a920:	mov	w2, #0x4900                	// #18688
  44a924:	mov	w0, w20
  44a928:	mov	x1, x23
  44a92c:	bl	4049a0 <openat@plt>
  44a930:	tbnz	w0, #31, 44aa28 <argp_parse@@Base+0x1037c>
  44a934:	mov	w22, w0
  44a938:	tbnz	w20, #31, 44a8d4 <argp_parse@@Base+0x10228>
  44a93c:	mov	w0, w20
  44a940:	bl	4044d0 <close@plt>
  44a944:	cbz	w0, 44a8d4 <argp_parse@@Base+0x10228>
  44a948:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a94c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a950:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a954:	add	x0, x0, #0x24f
  44a958:	add	x1, x1, #0x1f1
  44a95c:	add	x3, x3, #0x25c
  44a960:	mov	w2, #0x40                  	// #64
  44a964:	bl	4049b0 <__assert_fail@plt>
  44a968:	mov	w22, w20
  44a96c:	cmp	x23, x25
  44a970:	b.cs	44a9f8 <argp_parse@@Base+0x1034c>  // b.hs, b.nlast
  44a974:	mov	w2, #0x4900                	// #18688
  44a978:	mov	w0, w22
  44a97c:	mov	x1, x23
  44a980:	bl	4049a0 <openat@plt>
  44a984:	tbnz	w0, #31, 44aa68 <argp_parse@@Base+0x103bc>
  44a988:	mov	w20, w0
  44a98c:	tbnz	w22, #31, 44a9fc <argp_parse@@Base+0x10350>
  44a990:	mov	w0, w22
  44a994:	bl	4044d0 <close@plt>
  44a998:	cbz	w0, 44a9fc <argp_parse@@Base+0x10350>
  44a99c:	b	44a948 <argp_parse@@Base+0x1029c>
  44a9a0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a9a4:	add	x1, x1, #0x2b6
  44a9a8:	mov	w0, #0xffffff9c            	// #-100
  44a9ac:	mov	w2, #0x4900                	// #18688
  44a9b0:	bl	4049a0 <openat@plt>
  44a9b4:	tbnz	w0, #31, 44aa20 <argp_parse@@Base+0x10374>
  44a9b8:	mov	w20, w0
  44a9bc:	add	x23, x21, x23
  44a9c0:	ldrb	w8, [x23]
  44a9c4:	cmp	w8, #0x2f
  44a9c8:	b.ne	44a8ac <argp_parse@@Base+0x10200>  // b.any
  44a9cc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a9d0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a9d4:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44a9d8:	add	x0, x0, #0x221
  44a9dc:	add	x1, x1, #0x1f1
  44a9e0:	add	x3, x3, #0x1fe
  44a9e4:	mov	w2, #0xa2                  	// #162
  44a9e8:	bl	4049b0 <__assert_fail@plt>
  44a9ec:	mov	w8, #0x24                  	// #36
  44a9f0:	str	w8, [x19]
  44a9f4:	b	44aa48 <argp_parse@@Base+0x1039c>
  44a9f8:	mov	w20, w22
  44a9fc:	mov	w0, w20
  44aa00:	bl	403f70 <fchdir@plt>
  44aa04:	cbnz	w0, 44aa30 <argp_parse@@Base+0x10384>
  44aa08:	tbnz	w20, #31, 44aa18 <argp_parse@@Base+0x1036c>
  44aa0c:	mov	w0, w20
  44aa10:	bl	4044d0 <close@plt>
  44aa14:	cbnz	w0, 44a948 <argp_parse@@Base+0x1029c>
  44aa18:	mov	w20, wzr
  44aa1c:	b	44aa4c <argp_parse@@Base+0x103a0>
  44aa20:	ldr	w21, [x19]
  44aa24:	b	44aa44 <argp_parse@@Base+0x10398>
  44aa28:	mov	w8, #0x2f                  	// #47
  44aa2c:	strb	w8, [x24]
  44aa30:	ldr	w21, [x19]
  44aa34:	tbnz	w20, #31, 44aa44 <argp_parse@@Base+0x10398>
  44aa38:	mov	w0, w20
  44aa3c:	bl	4044d0 <close@plt>
  44aa40:	cbnz	w0, 44a948 <argp_parse@@Base+0x1029c>
  44aa44:	str	w21, [x19]
  44aa48:	mov	w20, #0xffffffff            	// #-1
  44aa4c:	mov	w0, w20
  44aa50:	ldp	x20, x19, [sp, #64]
  44aa54:	ldp	x22, x21, [sp, #48]
  44aa58:	ldp	x24, x23, [sp, #32]
  44aa5c:	ldp	x26, x25, [sp, #16]
  44aa60:	ldp	x29, x30, [sp], #80
  44aa64:	ret
  44aa68:	mov	w20, w22
  44aa6c:	ldr	w21, [x19]
  44aa70:	tbz	w20, #31, 44aa38 <argp_parse@@Base+0x1038c>
  44aa74:	b	44aa44 <argp_parse@@Base+0x10398>
  44aa78:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aa7c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aa80:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aa84:	add	x0, x0, #0x23c
  44aa88:	add	x1, x1, #0x1f1
  44aa8c:	add	x3, x3, #0x1fe
  44aa90:	mov	w2, #0xb3                  	// #179
  44aa94:	bl	4049b0 <__assert_fail@plt>
  44aa98:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aa9c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aaa0:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aaa4:	add	x0, x0, #0x1e9
  44aaa8:	add	x1, x1, #0x1f1
  44aaac:	add	x3, x3, #0x1fe
  44aab0:	mov	w2, #0x7e                  	// #126
  44aab4:	bl	4049b0 <__assert_fail@plt>
  44aab8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aabc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aac0:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aac4:	add	x0, x0, #0x215
  44aac8:	add	x1, x1, #0x1f1
  44aacc:	add	x3, x3, #0x1fe
  44aad0:	mov	w2, #0x7f                  	// #127
  44aad4:	bl	4049b0 <__assert_fail@plt>
  44aad8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aadc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aae0:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44aae4:	add	x0, x0, #0x22d
  44aae8:	add	x1, x1, #0x1f1
  44aaec:	add	x3, x3, #0x1fe
  44aaf0:	mov	w2, #0xa3                  	// #163
  44aaf4:	bl	4049b0 <__assert_fail@plt>
  44aaf8:	sub	sp, sp, #0x100
  44aafc:	stp	x29, x30, [sp, #208]
  44ab00:	add	x29, sp, #0xd0
  44ab04:	mov	x8, #0xffffffffffffffd0    	// #-48
  44ab08:	mov	x9, sp
  44ab0c:	sub	x10, x29, #0x50
  44ab10:	stp	x20, x19, [sp, #240]
  44ab14:	mov	w19, w0
  44ab18:	movk	x8, #0xff80, lsl #32
  44ab1c:	add	x11, x29, #0x30
  44ab20:	cmp	w1, #0xb
  44ab24:	add	x9, x9, #0x80
  44ab28:	add	x10, x10, #0x30
  44ab2c:	stp	x22, x21, [sp, #224]
  44ab30:	stp	x2, x3, [x29, #-80]
  44ab34:	stp	x4, x5, [x29, #-64]
  44ab38:	stp	x6, x7, [x29, #-48]
  44ab3c:	stp	q1, q2, [sp, #16]
  44ab40:	stp	q3, q4, [sp, #48]
  44ab44:	str	q0, [sp]
  44ab48:	stp	q5, q6, [sp, #80]
  44ab4c:	str	q7, [sp, #112]
  44ab50:	stp	x9, x8, [x29, #-16]
  44ab54:	stp	x11, x10, [x29, #-32]
  44ab58:	b.hi	44aba4 <argp_parse@@Base+0x104f8>  // b.pmore
  44ab5c:	mov	w8, #0x1                   	// #1
  44ab60:	lsl	w8, w8, w1
  44ab64:	mov	w9, #0x514                 	// #1300
  44ab68:	tst	w8, w9
  44ab6c:	b.ne	44abdc <argp_parse@@Base+0x10530>  // b.any
  44ab70:	mov	w9, #0xa0a                 	// #2570
  44ab74:	tst	w8, w9
  44ab78:	b.ne	44abd0 <argp_parse@@Base+0x10524>  // b.any
  44ab7c:	cbnz	w1, 44aba4 <argp_parse@@Base+0x104f8>
  44ab80:	ldursw	x8, [x29, #-8]
  44ab84:	tbz	w8, #31, 44ac84 <argp_parse@@Base+0x105d8>
  44ab88:	add	w9, w8, #0x8
  44ab8c:	cmn	w8, #0x8
  44ab90:	stur	w9, [x29, #-8]
  44ab94:	b.gt	44ac84 <argp_parse@@Base+0x105d8>
  44ab98:	ldur	x9, [x29, #-24]
  44ab9c:	add	x8, x9, x8
  44aba0:	b	44ac90 <argp_parse@@Base+0x105e4>
  44aba4:	sub	w8, w1, #0x400
  44aba8:	cmp	w8, #0xa
  44abac:	b.hi	44ac60 <argp_parse@@Base+0x105b4>  // b.pmore
  44abb0:	mov	w9, #0x1                   	// #1
  44abb4:	lsl	w9, w9, w8
  44abb8:	mov	w10, #0x285                 	// #645
  44abbc:	tst	w9, w10
  44abc0:	b.ne	44abdc <argp_parse@@Base+0x10530>  // b.any
  44abc4:	mov	w10, #0x502                 	// #1282
  44abc8:	tst	w9, w10
  44abcc:	b.eq	44ac34 <argp_parse@@Base+0x10588>  // b.none
  44abd0:	mov	w0, w19
  44abd4:	bl	4047c0 <fcntl@plt>
  44abd8:	b	44ac18 <argp_parse@@Base+0x1056c>
  44abdc:	ldursw	x8, [x29, #-8]
  44abe0:	tbz	w8, #31, 44ac00 <argp_parse@@Base+0x10554>
  44abe4:	add	w9, w8, #0x8
  44abe8:	cmn	w8, #0x8
  44abec:	stur	w9, [x29, #-8]
  44abf0:	b.gt	44ac00 <argp_parse@@Base+0x10554>
  44abf4:	ldur	x9, [x29, #-24]
  44abf8:	add	x8, x9, x8
  44abfc:	b	44ac0c <argp_parse@@Base+0x10560>
  44ac00:	ldur	x8, [x29, #-32]
  44ac04:	add	x9, x8, #0x8
  44ac08:	stur	x9, [x29, #-32]
  44ac0c:	ldr	w2, [x8]
  44ac10:	mov	w0, w19
  44ac14:	bl	4047c0 <fcntl@plt>
  44ac18:	mov	w20, w0
  44ac1c:	mov	w0, w20
  44ac20:	ldp	x20, x19, [sp, #240]
  44ac24:	ldp	x22, x21, [sp, #224]
  44ac28:	ldp	x29, x30, [sp, #208]
  44ac2c:	add	sp, sp, #0x100
  44ac30:	ret
  44ac34:	cmp	w8, #0x6
  44ac38:	b.ne	44ac60 <argp_parse@@Base+0x105b4>  // b.any
  44ac3c:	ldursw	x8, [x29, #-8]
  44ac40:	tbz	w8, #31, 44aca0 <argp_parse@@Base+0x105f4>
  44ac44:	add	w9, w8, #0x8
  44ac48:	cmn	w8, #0x8
  44ac4c:	stur	w9, [x29, #-8]
  44ac50:	b.gt	44aca0 <argp_parse@@Base+0x105f4>
  44ac54:	ldur	x9, [x29, #-24]
  44ac58:	add	x8, x9, x8
  44ac5c:	b	44acac <argp_parse@@Base+0x10600>
  44ac60:	ldursw	x8, [x29, #-8]
  44ac64:	tbz	w8, #31, 44ad0c <argp_parse@@Base+0x10660>
  44ac68:	add	w9, w8, #0x8
  44ac6c:	cmn	w8, #0x8
  44ac70:	stur	w9, [x29, #-8]
  44ac74:	b.gt	44ad0c <argp_parse@@Base+0x10660>
  44ac78:	ldur	x9, [x29, #-24]
  44ac7c:	add	x8, x9, x8
  44ac80:	b	44ad18 <argp_parse@@Base+0x1066c>
  44ac84:	ldur	x8, [x29, #-32]
  44ac88:	add	x9, x8, #0x8
  44ac8c:	stur	x9, [x29, #-32]
  44ac90:	ldr	w2, [x8]
  44ac94:	mov	w0, w19
  44ac98:	mov	w1, wzr
  44ac9c:	b	44ac14 <argp_parse@@Base+0x10568>
  44aca0:	ldur	x8, [x29, #-32]
  44aca4:	add	x9, x8, #0x8
  44aca8:	stur	x9, [x29, #-32]
  44acac:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44acb0:	ldr	w9, [x22, #2760]
  44acb4:	ldr	w21, [x8]
  44acb8:	tbnz	w9, #31, 44ad34 <argp_parse@@Base+0x10688>
  44acbc:	mov	w1, #0x406                 	// #1030
  44acc0:	mov	w0, w19
  44acc4:	mov	w2, w21
  44acc8:	bl	4047c0 <fcntl@plt>
  44accc:	mov	w20, w0
  44acd0:	tbz	w0, #31, 44ad28 <argp_parse@@Base+0x1067c>
  44acd4:	bl	4049c0 <__errno_location@plt>
  44acd8:	ldr	w8, [x0]
  44acdc:	cmp	w8, #0x16
  44ace0:	b.ne	44ad28 <argp_parse@@Base+0x1067c>  // b.any
  44ace4:	mov	w0, w19
  44ace8:	mov	w1, wzr
  44acec:	mov	w2, w21
  44acf0:	bl	4047c0 <fcntl@plt>
  44acf4:	mov	w20, w0
  44acf8:	tbnz	w0, #31, 44ac1c <argp_parse@@Base+0x10570>
  44acfc:	mov	w8, #0xffffffff            	// #-1
  44ad00:	str	w8, [x22, #2760]
  44ad04:	mov	w8, #0x1                   	// #1
  44ad08:	b	44ad54 <argp_parse@@Base+0x106a8>
  44ad0c:	ldur	x8, [x29, #-32]
  44ad10:	add	x9, x8, #0x8
  44ad14:	stur	x9, [x29, #-32]
  44ad18:	ldr	x2, [x8]
  44ad1c:	mov	w0, w19
  44ad20:	bl	4047c0 <fcntl@plt>
  44ad24:	b	44ac18 <argp_parse@@Base+0x1056c>
  44ad28:	mov	w8, #0x1                   	// #1
  44ad2c:	str	w8, [x22, #2760]
  44ad30:	b	44ac1c <argp_parse@@Base+0x10570>
  44ad34:	mov	w0, w19
  44ad38:	mov	w1, wzr
  44ad3c:	mov	w2, w21
  44ad40:	bl	4047c0 <fcntl@plt>
  44ad44:	ldr	w8, [x22, #2760]
  44ad48:	mov	w20, w0
  44ad4c:	cmn	w8, #0x1
  44ad50:	cset	w8, eq  // eq = none
  44ad54:	cbz	w8, 44ac1c <argp_parse@@Base+0x10570>
  44ad58:	tbnz	w20, #31, 44ac1c <argp_parse@@Base+0x10570>
  44ad5c:	mov	w1, #0x1                   	// #1
  44ad60:	mov	w0, w20
  44ad64:	bl	4047c0 <fcntl@plt>
  44ad68:	tbnz	w0, #31, 44ad84 <argp_parse@@Base+0x106d8>
  44ad6c:	orr	w2, w0, #0x1
  44ad70:	mov	w1, #0x2                   	// #2
  44ad74:	mov	w0, w20
  44ad78:	bl	4047c0 <fcntl@plt>
  44ad7c:	cmn	w0, #0x1
  44ad80:	b.ne	44ac1c <argp_parse@@Base+0x10570>  // b.any
  44ad84:	bl	4049c0 <__errno_location@plt>
  44ad88:	ldr	w21, [x0]
  44ad8c:	mov	x19, x0
  44ad90:	mov	w0, w20
  44ad94:	bl	4044d0 <close@plt>
  44ad98:	str	w21, [x19]
  44ad9c:	mov	w20, #0xffffffff            	// #-1
  44ada0:	b	44ac1c <argp_parse@@Base+0x10570>
  44ada4:	mov	w5, wzr
  44ada8:	mov	w6, wzr
  44adac:	b	45f3ec <_obstack_memory_used@@Base+0x14228>
  44adb0:	mov	x6, x5
  44adb4:	mov	w5, wzr
  44adb8:	mov	w7, wzr
  44adbc:	b	45e494 <_obstack_memory_used@@Base+0x132d0>
  44adc0:	mov	w5, #0x1                   	// #1
  44adc4:	mov	w6, wzr
  44adc8:	b	45f3ec <_obstack_memory_used@@Base+0x14228>
  44adcc:	mov	x6, x5
  44add0:	mov	w5, #0x1                   	// #1
  44add4:	mov	w7, wzr
  44add8:	b	45e494 <_obstack_memory_used@@Base+0x132d0>
  44addc:	sub	sp, sp, #0x40
  44ade0:	stp	x29, x30, [sp, #16]
  44ade4:	add	x29, sp, #0x10
  44ade8:	cmp	x0, #0x0
  44adec:	sub	x8, x29, #0x4
  44adf0:	stp	x20, x19, [sp, #48]
  44adf4:	csel	x20, x8, x0, eq  // eq = none
  44adf8:	mov	x0, x20
  44adfc:	stp	x22, x21, [sp, #32]
  44ae00:	mov	x22, x2
  44ae04:	mov	x19, x1
  44ae08:	bl	403e70 <mbrtowc@plt>
  44ae0c:	mov	x21, x0
  44ae10:	cbz	x22, 44ae34 <argp_parse@@Base+0x10788>
  44ae14:	cmn	x21, #0x2
  44ae18:	b.cc	44ae34 <argp_parse@@Base+0x10788>  // b.lo, b.ul, b.last
  44ae1c:	mov	w0, wzr
  44ae20:	bl	45cc08 <_obstack_memory_used@@Base+0x11a44>
  44ae24:	tbnz	w0, #0, 44ae34 <argp_parse@@Base+0x10788>
  44ae28:	ldrb	w8, [x19]
  44ae2c:	mov	w21, #0x1                   	// #1
  44ae30:	str	w8, [x20]
  44ae34:	mov	x0, x21
  44ae38:	ldp	x20, x19, [sp, #48]
  44ae3c:	ldp	x22, x21, [sp, #32]
  44ae40:	ldp	x29, x30, [sp, #16]
  44ae44:	add	sp, sp, #0x40
  44ae48:	ret

000000000044ae4c <_obstack_begin@@Base>:
  44ae4c:	stp	x29, x30, [sp, #-48]!
  44ae50:	stp	x20, x19, [sp, #32]
  44ae54:	ldrb	w8, [x0, #80]
  44ae58:	cmp	x2, #0x0
  44ae5c:	mov	w9, #0x10                  	// #16
  44ae60:	csel	x20, x9, x2, eq  // eq = none
  44ae64:	mov	w9, #0xfe0                 	// #4064
  44ae68:	cmp	x1, #0x0
  44ae6c:	str	x21, [sp, #16]
  44ae70:	mov	x19, x0
  44ae74:	str	x4, [x0, #64]
  44ae78:	csel	x0, x9, x1, eq  // eq = none
  44ae7c:	and	w8, w8, #0xfe
  44ae80:	sub	x21, x20, #0x1
  44ae84:	mov	x29, sp
  44ae88:	strb	w8, [x19, #80]
  44ae8c:	str	x0, [x19]
  44ae90:	stp	x21, x3, [x19, #48]
  44ae94:	blr	x3
  44ae98:	str	x0, [x19, #8]
  44ae9c:	cbz	x0, 44aee8 <_obstack_begin@@Base+0x9c>
  44aea0:	ldr	x10, [x19]
  44aea4:	add	x8, x0, x21
  44aea8:	neg	x9, x20
  44aeac:	add	x8, x8, #0x10
  44aeb0:	and	x8, x8, x9
  44aeb4:	stp	x8, x8, [x19, #16]
  44aeb8:	add	x8, x0, x10
  44aebc:	str	x8, [x0]
  44aec0:	str	x8, [x19, #32]
  44aec4:	str	xzr, [x0, #8]
  44aec8:	ldrb	w8, [x19, #80]
  44aecc:	ldr	x21, [sp, #16]
  44aed0:	mov	w0, #0x1                   	// #1
  44aed4:	and	w8, w8, #0xfffffff9
  44aed8:	strb	w8, [x19, #80]
  44aedc:	ldp	x20, x19, [sp, #32]
  44aee0:	ldp	x29, x30, [sp], #48
  44aee4:	ret
  44aee8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44aeec:	ldr	x8, [x8, #56]
  44aef0:	blr	x8

000000000044aef4 <_obstack_begin_1@@Base>:
  44aef4:	stp	x29, x30, [sp, #-48]!
  44aef8:	stp	x20, x19, [sp, #32]
  44aefc:	ldrb	w8, [x0, #80]
  44af00:	cmp	x2, #0x0
  44af04:	mov	w9, #0x10                  	// #16
  44af08:	csel	x20, x9, x2, eq  // eq = none
  44af0c:	mov	w9, #0xfe0                 	// #4064
  44af10:	cmp	x1, #0x0
  44af14:	str	x21, [sp, #16]
  44af18:	csel	x1, x9, x1, eq  // eq = none
  44af1c:	orr	w8, w8, #0x1
  44af20:	sub	x21, x20, #0x1
  44af24:	mov	x19, x0
  44af28:	stp	x4, x5, [x0, #64]
  44af2c:	strb	w8, [x0, #80]
  44af30:	str	x1, [x0]
  44af34:	stp	x21, x3, [x0, #48]
  44af38:	mov	x0, x5
  44af3c:	mov	x29, sp
  44af40:	blr	x3
  44af44:	str	x0, [x19, #8]
  44af48:	cbz	x0, 44af94 <_obstack_begin_1@@Base+0xa0>
  44af4c:	ldr	x10, [x19]
  44af50:	add	x8, x0, x21
  44af54:	neg	x9, x20
  44af58:	add	x8, x8, #0x10
  44af5c:	and	x8, x8, x9
  44af60:	stp	x8, x8, [x19, #16]
  44af64:	add	x8, x0, x10
  44af68:	str	x8, [x0]
  44af6c:	str	x8, [x19, #32]
  44af70:	str	xzr, [x0, #8]
  44af74:	ldrb	w8, [x19, #80]
  44af78:	ldr	x21, [sp, #16]
  44af7c:	mov	w0, #0x1                   	// #1
  44af80:	and	w8, w8, #0xfffffff9
  44af84:	strb	w8, [x19, #80]
  44af88:	ldp	x20, x19, [sp, #32]
  44af8c:	ldp	x29, x30, [sp], #48
  44af90:	ret
  44af94:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44af98:	ldr	x8, [x8, #56]
  44af9c:	blr	x8

000000000044afa0 <_obstack_newchunk@@Base>:
  44afa0:	stp	x29, x30, [sp, #-64]!
  44afa4:	str	x23, [sp, #16]
  44afa8:	stp	x22, x21, [sp, #32]
  44afac:	stp	x20, x19, [sp, #48]
  44afb0:	ldp	x9, x8, [x0, #16]
  44afb4:	ldr	x10, [x0, #48]
  44afb8:	ldr	x11, [x0]
  44afbc:	mov	x29, sp
  44afc0:	sub	x20, x8, x9
  44afc4:	adds	x8, x20, x1
  44afc8:	lsr	x9, x20, #3
  44afcc:	cset	w12, cs  // cs = hs, nlast
  44afd0:	adds	x10, x8, x10
  44afd4:	add	x9, x9, #0x64
  44afd8:	cset	w8, cs  // cs = hs, nlast
  44afdc:	adds	x9, x9, x10
  44afe0:	csel	x9, x10, x9, cs  // cs = hs, nlast
  44afe4:	cmp	x9, x11
  44afe8:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  44afec:	tbnz	w12, #0, 44b0d8 <_obstack_newchunk@@Base+0x138>
  44aff0:	tbnz	w8, #0, 44b0d8 <_obstack_newchunk@@Base+0x138>
  44aff4:	ldrb	w8, [x0, #80]
  44aff8:	ldr	x21, [x0, #8]
  44affc:	mov	x19, x0
  44b000:	tbnz	w8, #0, 44b014 <_obstack_newchunk@@Base+0x74>
  44b004:	ldr	x8, [x19, #56]
  44b008:	mov	x0, x23
  44b00c:	blr	x8
  44b010:	b	44b024 <_obstack_newchunk@@Base+0x84>
  44b014:	ldr	x8, [x19, #56]
  44b018:	ldr	x0, [x19, #72]
  44b01c:	mov	x1, x23
  44b020:	blr	x8
  44b024:	mov	x22, x0
  44b028:	cbz	x0, 44b0d8 <_obstack_newchunk@@Base+0x138>
  44b02c:	add	x8, x22, x23
  44b030:	str	x22, [x19, #8]
  44b034:	str	x21, [x22, #8]
  44b038:	str	x8, [x19, #32]
  44b03c:	str	x8, [x22]
  44b040:	ldr	x8, [x19, #48]
  44b044:	ldr	x1, [x19, #16]
  44b048:	mov	x2, x20
  44b04c:	add	x9, x22, x8
  44b050:	add	x9, x9, #0x10
  44b054:	bic	x23, x9, x8
  44b058:	mov	x0, x23
  44b05c:	bl	403e80 <memcpy@plt>
  44b060:	ldrb	w8, [x19, #80]
  44b064:	tbnz	w8, #1, 44b0b0 <_obstack_newchunk@@Base+0x110>
  44b068:	ldr	x8, [x19, #48]
  44b06c:	ldr	x9, [x19, #16]
  44b070:	add	x10, x21, x8
  44b074:	add	x10, x10, #0x10
  44b078:	bic	x8, x10, x8
  44b07c:	cmp	x9, x8
  44b080:	b.ne	44b0b0 <_obstack_newchunk@@Base+0x110>  // b.any
  44b084:	ldr	x8, [x21, #8]
  44b088:	str	x8, [x22, #8]
  44b08c:	ldrb	w8, [x19, #80]
  44b090:	tbnz	w8, #0, 44b0a4 <_obstack_newchunk@@Base+0x104>
  44b094:	ldr	x8, [x19, #64]
  44b098:	mov	x0, x21
  44b09c:	blr	x8
  44b0a0:	b	44b0b0 <_obstack_newchunk@@Base+0x110>
  44b0a4:	ldp	x8, x0, [x19, #64]
  44b0a8:	mov	x1, x21
  44b0ac:	blr	x8
  44b0b0:	ldrb	w8, [x19, #80]
  44b0b4:	add	x9, x23, x20
  44b0b8:	stp	x23, x9, [x19, #16]
  44b0bc:	ldr	x23, [sp, #16]
  44b0c0:	and	w8, w8, #0xfffffffd
  44b0c4:	strb	w8, [x19, #80]
  44b0c8:	ldp	x20, x19, [sp, #48]
  44b0cc:	ldp	x22, x21, [sp, #32]
  44b0d0:	ldp	x29, x30, [sp], #64
  44b0d4:	ret
  44b0d8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44b0dc:	ldr	x8, [x8, #56]
  44b0e0:	blr	x8

000000000044b0e4 <_obstack_allocated_p@@Base>:
  44b0e4:	ldr	x8, [x0, #8]
  44b0e8:	cbnz	x8, 44b0fc <_obstack_allocated_p@@Base+0x18>
  44b0ec:	mov	w0, wzr
  44b0f0:	ret
  44b0f4:	ldr	x8, [x8, #8]
  44b0f8:	cbz	x8, 44b0ec <_obstack_allocated_p@@Base+0x8>
  44b0fc:	cmp	x8, x1
  44b100:	b.cs	44b0f4 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  44b104:	ldr	x9, [x8]
  44b108:	cmp	x9, x1
  44b10c:	b.cc	44b0f4 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  44b110:	mov	w0, #0x1                   	// #1
  44b114:	ret

000000000044b118 <_obstack_free@@Base>:
  44b118:	stp	x29, x30, [sp, #-48]!
  44b11c:	stp	x20, x19, [sp, #32]
  44b120:	ldr	x8, [x0, #8]
  44b124:	mov	x20, x1
  44b128:	str	x21, [sp, #16]
  44b12c:	mov	x29, sp
  44b130:	cbz	x8, 44b18c <_obstack_free@@Base+0x74>
  44b134:	mov	x19, x0
  44b138:	b	44b15c <_obstack_free@@Base+0x44>
  44b13c:	ldr	x9, [x19, #64]
  44b140:	mov	x0, x8
  44b144:	blr	x9
  44b148:	ldrb	w8, [x19, #80]
  44b14c:	orr	w8, w8, #0x2
  44b150:	strb	w8, [x19, #80]
  44b154:	mov	x8, x21
  44b158:	cbz	x21, 44b18c <_obstack_free@@Base+0x74>
  44b15c:	cmp	x8, x20
  44b160:	b.cs	44b170 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  44b164:	ldr	x9, [x8]
  44b168:	cmp	x9, x20
  44b16c:	b.cs	44b1a0 <_obstack_free@@Base+0x88>  // b.hs, b.nlast
  44b170:	ldrb	w9, [x19, #80]
  44b174:	ldr	x21, [x8, #8]
  44b178:	tbz	w9, #0, 44b13c <_obstack_free@@Base+0x24>
  44b17c:	ldp	x9, x0, [x19, #64]
  44b180:	mov	x1, x8
  44b184:	blr	x9
  44b188:	b	44b148 <_obstack_free@@Base+0x30>
  44b18c:	cbnz	x20, 44b1c0 <_obstack_free@@Base+0xa8>
  44b190:	ldp	x20, x19, [sp, #32]
  44b194:	ldr	x21, [sp, #16]
  44b198:	ldp	x29, x30, [sp], #48
  44b19c:	ret
  44b1a0:	stp	x20, x20, [x19, #16]
  44b1a4:	ldr	x9, [x8]
  44b1a8:	str	x8, [x19, #8]
  44b1ac:	str	x9, [x19, #32]
  44b1b0:	ldp	x20, x19, [sp, #32]
  44b1b4:	ldr	x21, [sp, #16]
  44b1b8:	ldp	x29, x30, [sp], #48
  44b1bc:	ret
  44b1c0:	bl	404560 <abort@plt>

000000000044b1c4 <_obstack_memory_used@@Base>:
  44b1c4:	ldr	x8, [x0, #8]
  44b1c8:	cbz	x8, 44b1e4 <_obstack_memory_used@@Base+0x20>
  44b1cc:	mov	x0, xzr
  44b1d0:	sub	x10, x0, x8
  44b1d4:	ldp	x9, x8, [x8]
  44b1d8:	add	x0, x10, x9
  44b1dc:	cbnz	x8, 44b1d0 <_obstack_memory_used@@Base+0xc>
  44b1e0:	ret
  44b1e4:	mov	x0, xzr
  44b1e8:	ret
  44b1ec:	stp	x29, x30, [sp, #-32]!
  44b1f0:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44b1f4:	str	x19, [sp, #16]
  44b1f8:	ldr	x19, [x8, #88]
  44b1fc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x15e3c>
  44b200:	add	x1, x1, #0xd03
  44b204:	mov	w2, #0x5                   	// #5
  44b208:	mov	x0, xzr
  44b20c:	mov	x29, sp
  44b210:	bl	4048b0 <dcgettext@plt>
  44b214:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x1be3c>
  44b218:	mov	x3, x0
  44b21c:	add	x2, x2, #0xfdb
  44b220:	mov	w1, #0x1                   	// #1
  44b224:	mov	x0, x19
  44b228:	bl	404600 <__fprintf_chk@plt>
  44b22c:	adrp	x8, 47f000 <_obstack_memory_used@@Base+0x33e3c>
  44b230:	ldr	w0, [x8, #4056]
  44b234:	bl	403f30 <exit@plt>
  44b238:	sub	sp, sp, #0x60
  44b23c:	stp	x29, x30, [sp, #32]
  44b240:	stp	x24, x23, [sp, #48]
  44b244:	stp	x22, x21, [sp, #64]
  44b248:	stp	x20, x19, [sp, #80]
  44b24c:	ldrb	w8, [x2]
  44b250:	mov	x19, x0
  44b254:	add	x29, sp, #0x20
  44b258:	cbz	w8, 44b2c0 <_obstack_memory_used@@Base+0xfc>
  44b25c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44b260:	ldr	w8, [x23, #2764]
  44b264:	mov	x20, x2
  44b268:	mov	w21, w1
  44b26c:	cbz	w8, 44b2c8 <_obstack_memory_used@@Base+0x104>
  44b270:	tbnz	w8, #31, 44b328 <_obstack_memory_used@@Base+0x164>
  44b274:	mov	x0, x20
  44b278:	bl	403f00 <strlen@plt>
  44b27c:	add	x0, x0, #0x1b
  44b280:	cmp	x0, #0xfc1
  44b284:	b.cc	44b294 <_obstack_memory_used@@Base+0xd0>  // b.lo, b.ul, b.last
  44b288:	bl	404210 <malloc@plt>
  44b28c:	mov	x19, x0
  44b290:	cbz	x0, 44b33c <_obstack_memory_used@@Base+0x178>
  44b294:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44b298:	add	x3, x3, #0x2a6
  44b29c:	mov	w1, #0x1                   	// #1
  44b2a0:	mov	x2, #0xffffffffffffffff    	// #-1
  44b2a4:	mov	x0, x19
  44b2a8:	mov	w4, w21
  44b2ac:	bl	403f20 <__sprintf_chk@plt>
  44b2b0:	add	x0, x19, w0, sxtw
  44b2b4:	mov	x1, x20
  44b2b8:	bl	4047f0 <strcpy@plt>
  44b2bc:	b	44b33c <_obstack_memory_used@@Base+0x178>
  44b2c0:	strb	wzr, [x19]
  44b2c4:	b	44b33c <_obstack_memory_used@@Base+0x178>
  44b2c8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44b2cc:	add	x0, x0, #0x281
  44b2d0:	mov	w1, #0x4900                	// #18688
  44b2d4:	bl	404240 <open@plt>
  44b2d8:	tbnz	w0, #31, 44b330 <_obstack_memory_used@@Base+0x16c>
  44b2dc:	mov	w22, w0
  44b2e0:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44b2e4:	add	x3, x3, #0x28f
  44b2e8:	mov	x0, sp
  44b2ec:	mov	w1, #0x1                   	// #1
  44b2f0:	mov	w2, #0x20                  	// #32
  44b2f4:	mov	w4, w22
  44b2f8:	mov	w24, #0x1                   	// #1
  44b2fc:	bl	403f20 <__sprintf_chk@plt>
  44b300:	mov	x0, sp
  44b304:	mov	w1, wzr
  44b308:	bl	4045a0 <access@plt>
  44b30c:	cmp	w0, #0x0
  44b310:	cneg	w8, w24, ne  // ne = any
  44b314:	mov	w0, w22
  44b318:	str	w8, [x23, #2764]
  44b31c:	bl	4044d0 <close@plt>
  44b320:	ldr	w8, [x23, #2764]
  44b324:	tbz	w8, #31, 44b274 <_obstack_memory_used@@Base+0xb0>
  44b328:	mov	x19, xzr
  44b32c:	b	44b33c <_obstack_memory_used@@Base+0x178>
  44b330:	mov	w8, #0xffffffff            	// #-1
  44b334:	mov	x19, xzr
  44b338:	str	w8, [x23, #2764]
  44b33c:	mov	x0, x19
  44b340:	ldp	x20, x19, [sp, #80]
  44b344:	ldp	x22, x21, [sp, #64]
  44b348:	ldp	x24, x23, [sp, #48]
  44b34c:	ldp	x29, x30, [sp, #32]
  44b350:	add	sp, sp, #0x60
  44b354:	ret
  44b358:	stp	x29, x30, [sp, #-16]!
  44b35c:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44b360:	ldr	x3, [x9, #4032]
  44b364:	ldrb	w9, [x2, #56]
  44b368:	mov	x8, x1
  44b36c:	mov	x1, x0
  44b370:	ubfx	x10, x3, #21, #11
  44b374:	and	w10, w10, #0x10
  44b378:	and	w9, w9, #0xffffffef
  44b37c:	orr	w9, w9, w10
  44b380:	orr	w9, w9, #0x80
  44b384:	strb	w9, [x2, #56]
  44b388:	mov	x0, x2
  44b38c:	mov	x2, x8
  44b390:	mov	x29, sp
  44b394:	bl	44b3d0 <_obstack_memory_used@@Base+0x20c>
  44b398:	cbz	w0, 44b3c4 <_obstack_memory_used@@Base+0x200>
  44b39c:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44b3a0:	add	x8, x8, #0x5c8
  44b3a4:	ldr	x8, [x8, w0, sxtw #3]
  44b3a8:	adrp	x9, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44b3ac:	add	x9, x9, #0x445
  44b3b0:	mov	w2, #0x5                   	// #5
  44b3b4:	add	x1, x9, x8
  44b3b8:	mov	x0, xzr
  44b3bc:	ldp	x29, x30, [sp], #16
  44b3c0:	b	4048b0 <dcgettext@plt>
  44b3c4:	mov	x0, xzr
  44b3c8:	ldp	x29, x30, [sp], #16
  44b3cc:	ret
  44b3d0:	sub	sp, sp, #0x130
  44b3d4:	stp	x29, x30, [sp, #208]
  44b3d8:	add	x29, sp, #0xd0
  44b3dc:	stp	x28, x27, [sp, #224]
  44b3e0:	stp	x26, x25, [sp, #240]
  44b3e4:	stp	x24, x23, [sp, #256]
  44b3e8:	stp	x22, x21, [sp, #272]
  44b3ec:	stp	x20, x19, [sp, #288]
  44b3f0:	stur	wzr, [x29, #-44]
  44b3f4:	ldrb	w8, [x0, #56]
  44b3f8:	ldp	x20, x9, [x0]
  44b3fc:	mov	w10, #0x90                  	// #144
  44b400:	mov	x21, x3
  44b404:	mov	x22, x2
  44b408:	mov	x23, x1
  44b40c:	mov	x19, x0
  44b410:	and	w8, w8, w10
  44b414:	cmp	x9, #0xe7
  44b418:	stp	xzr, x3, [x0, #16]
  44b41c:	str	xzr, [x0, #48]
  44b420:	strb	w8, [x0, #56]
  44b424:	b.ls	44bb3c <_obstack_memory_used@@Base+0x978>  // b.plast
  44b428:	mov	w8, #0xe8                  	// #232
  44b42c:	str	x8, [x19, #16]
  44b430:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  44b434:	movk	x8, #0x5554
  44b438:	movk	x8, #0x555, lsl #48
  44b43c:	movi	v0.2d, #0x0
  44b440:	cmp	x22, x8
  44b444:	mov	w8, #0xf                   	// #15
  44b448:	str	xzr, [x20, #224]
  44b44c:	stp	q0, q0, [x20, #192]
  44b450:	stp	q0, q0, [x20, #160]
  44b454:	stp	q0, q0, [x20, #128]
  44b458:	stp	q0, q0, [x20, #96]
  44b45c:	stp	q0, q0, [x20, #64]
  44b460:	stp	q0, q0, [x20, #32]
  44b464:	stp	q0, q0, [x20]
  44b468:	str	w8, [x20, #128]
  44b46c:	b.hi	44b668 <_obstack_memory_used@@Base+0x4a4>  // b.pmore
  44b470:	add	x24, x22, #0x1
  44b474:	lsl	x0, x24, #4
  44b478:	str	x24, [x20, #8]
  44b47c:	bl	404210 <malloc@plt>
  44b480:	mov	w8, #0x1                   	// #1
  44b484:	str	x0, [x20]
  44b488:	mov	x25, x8
  44b48c:	cmp	x8, x22
  44b490:	lsl	x8, x8, #1
  44b494:	b.ls	44b488 <_obstack_memory_used@@Base+0x2c4>  // b.plast
  44b498:	mov	w0, #0x18                  	// #24
  44b49c:	mov	x1, x25
  44b4a0:	bl	4043d0 <calloc@plt>
  44b4a4:	sub	x8, x25, #0x1
  44b4a8:	str	x0, [x20, #64]
  44b4ac:	str	x8, [x20, #136]
  44b4b0:	bl	4046e0 <__ctype_get_mb_cur_max@plt>
  44b4b4:	str	w0, [x20, #180]
  44b4b8:	mov	w0, #0xe                   	// #14
  44b4bc:	bl	4041d0 <nl_langinfo@plt>
  44b4c0:	ldrb	w8, [x0]
  44b4c4:	orr	w8, w8, #0x20
  44b4c8:	cmp	w8, #0x75
  44b4cc:	b.ne	44b518 <_obstack_memory_used@@Base+0x354>  // b.any
  44b4d0:	ldrb	w8, [x0, #1]
  44b4d4:	orr	w8, w8, #0x20
  44b4d8:	cmp	w8, #0x74
  44b4dc:	b.ne	44b518 <_obstack_memory_used@@Base+0x354>  // b.any
  44b4e0:	ldrb	w8, [x0, #2]
  44b4e4:	orr	w8, w8, #0x20
  44b4e8:	cmp	w8, #0x66
  44b4ec:	b.ne	44b518 <_obstack_memory_used@@Base+0x354>  // b.any
  44b4f0:	ldrb	w8, [x0, #3]!
  44b4f4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x1be3c>
  44b4f8:	add	x1, x1, #0x874
  44b4fc:	cmp	w8, #0x2d
  44b500:	cinc	x0, x0, eq  // eq = none
  44b504:	bl	404610 <strcmp@plt>
  44b508:	cbnz	w0, 44b518 <_obstack_memory_used@@Base+0x354>
  44b50c:	ldrb	w8, [x20, #176]
  44b510:	orr	w8, w8, #0x4
  44b514:	strb	w8, [x20, #176]
  44b518:	ldrb	w8, [x20, #176]
  44b51c:	ldr	w9, [x20, #180]
  44b520:	and	w10, w8, #0xfffffff7
  44b524:	cmp	w9, #0x2
  44b528:	strb	w10, [x20, #176]
  44b52c:	b.lt	44b5a8 <_obstack_memory_used@@Base+0x3e4>  // b.tstop
  44b530:	tbnz	w8, #2, 44b59c <_obstack_memory_used@@Base+0x3d8>
  44b534:	mov	w0, #0x20                  	// #32
  44b538:	mov	w1, #0x1                   	// #1
  44b53c:	bl	4043d0 <calloc@plt>
  44b540:	str	x0, [x20, #120]
  44b544:	cbz	x0, 44b668 <_obstack_memory_used@@Base+0x4a4>
  44b548:	mov	x25, xzr
  44b54c:	mov	w26, #0x1                   	// #1
  44b550:	b	44b560 <_obstack_memory_used@@Base+0x39c>
  44b554:	add	x25, x25, #0x1
  44b558:	cmp	x25, #0x40
  44b55c:	b.eq	44b680 <_obstack_memory_used@@Base+0x4bc>  // b.none
  44b560:	mov	w0, w25
  44b564:	bl	404540 <btowc@plt>
  44b568:	cmn	w0, #0x1
  44b56c:	b.eq	44b584 <_obstack_memory_used@@Base+0x3c0>  // b.none
  44b570:	ldr	x8, [x20, #120]
  44b574:	lsl	x10, x26, x25
  44b578:	ldr	x9, [x8]
  44b57c:	orr	x9, x9, x10
  44b580:	str	x9, [x8]
  44b584:	cmp	w25, w0
  44b588:	b.eq	44b554 <_obstack_memory_used@@Base+0x390>  // b.none
  44b58c:	ldrb	w8, [x20, #176]
  44b590:	orr	w8, w8, #0x8
  44b594:	strb	w8, [x20, #176]
  44b598:	b	44b554 <_obstack_memory_used@@Base+0x390>
  44b59c:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44b5a0:	add	x8, x8, #0x650
  44b5a4:	str	x8, [x20, #120]
  44b5a8:	ldr	x8, [x20]
  44b5ac:	cbz	x8, 44b668 <_obstack_memory_used@@Base+0x4a4>
  44b5b0:	ldr	x8, [x20, #64]
  44b5b4:	cbz	x8, 44b668 <_obstack_memory_used@@Base+0x4a4>
  44b5b8:	stur	wzr, [x29, #-44]
  44b5bc:	ldr	x26, [x19, #40]
  44b5c0:	and	x25, x21, #0x400000
  44b5c4:	movi	v0.2d, #0x0
  44b5c8:	ubfx	x8, x21, #22, #1
  44b5cc:	stp	q0, q0, [sp, #128]
  44b5d0:	strb	w8, [sp, #144]
  44b5d4:	orr	x8, x25, x26
  44b5d8:	cmp	x8, #0x0
  44b5dc:	cset	w27, ne  // ne = any
  44b5e0:	stp	q0, q0, [sp, #80]
  44b5e4:	stur	q0, [sp, #112]
  44b5e8:	stp	q0, q0, [sp, #48]
  44b5ec:	stp	q0, q0, [sp, #16]
  44b5f0:	str	x23, [sp, #8]
  44b5f4:	stp	x22, x22, [sp, #88]
  44b5f8:	str	x26, [sp, #128]
  44b5fc:	strb	w27, [sp, #147]
  44b600:	ldr	w8, [x20, #180]
  44b604:	cmp	x22, #0x1
  44b608:	str	w8, [sp, #152]
  44b60c:	ldrb	w9, [x20, #176]
  44b610:	stp	x22, x22, [sp, #104]
  44b614:	ubfx	w10, w9, #2, #1
  44b618:	ubfx	w9, w9, #3, #1
  44b61c:	strb	w10, [sp, #145]
  44b620:	strb	w9, [sp, #146]
  44b624:	b.lt	44b798 <_obstack_memory_used@@Base+0x5d4>  // b.tstop
  44b628:	cmp	w8, #0x2
  44b62c:	b.lt	44b64c <_obstack_memory_used@@Base+0x488>  // b.tstop
  44b630:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  44b634:	cmp	x22, x8
  44b638:	b.hi	44bc30 <_obstack_memory_used@@Base+0xa6c>  // b.pmore
  44b63c:	lsl	x0, x24, #2
  44b640:	bl	404210 <malloc@plt>
  44b644:	cbz	x0, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44b648:	str	x0, [sp, #24]
  44b64c:	cbz	w27, 44b7a4 <_obstack_memory_used@@Base+0x5e0>
  44b650:	mov	x0, x24
  44b654:	bl	404210 <malloc@plt>
  44b658:	cbz	x0, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44b65c:	mov	w27, #0x1                   	// #1
  44b660:	str	x0, [sp, #16]
  44b664:	b	44b7a8 <_obstack_memory_used@@Base+0x5e4>
  44b668:	mov	w21, #0xc                   	// #12
  44b66c:	mov	x0, x20
  44b670:	stur	w21, [x29, #-44]
  44b674:	bl	44d05c <_obstack_memory_used@@Base+0x1e98>
  44b678:	stp	xzr, xzr, [x19]
  44b67c:	b	44c5dc <_obstack_memory_used@@Base+0x1418>
  44b680:	mov	x26, xzr
  44b684:	mov	w27, #0x1                   	// #1
  44b688:	b	44b698 <_obstack_memory_used@@Base+0x4d4>
  44b68c:	add	x26, x26, #0x1
  44b690:	cmp	x26, #0x40
  44b694:	b.eq	44b6d8 <_obstack_memory_used@@Base+0x514>  // b.none
  44b698:	add	x25, x26, #0x40
  44b69c:	mov	w0, w25
  44b6a0:	bl	404540 <btowc@plt>
  44b6a4:	cmn	w0, #0x1
  44b6a8:	b.eq	44b6c0 <_obstack_memory_used@@Base+0x4fc>  // b.none
  44b6ac:	ldr	x8, [x20, #120]
  44b6b0:	lsl	x10, x27, x26
  44b6b4:	ldr	x9, [x8, #8]
  44b6b8:	orr	x9, x9, x10
  44b6bc:	str	x9, [x8, #8]
  44b6c0:	cmp	w25, w0
  44b6c4:	b.eq	44b68c <_obstack_memory_used@@Base+0x4c8>  // b.none
  44b6c8:	ldrb	w8, [x20, #176]
  44b6cc:	orr	w8, w8, #0x8
  44b6d0:	strb	w8, [x20, #176]
  44b6d4:	b	44b68c <_obstack_memory_used@@Base+0x4c8>
  44b6d8:	mov	x26, xzr
  44b6dc:	mov	w27, #0x1                   	// #1
  44b6e0:	b	44b6f0 <_obstack_memory_used@@Base+0x52c>
  44b6e4:	add	x26, x26, #0x1
  44b6e8:	cmp	x26, #0x40
  44b6ec:	b.eq	44b738 <_obstack_memory_used@@Base+0x574>  // b.none
  44b6f0:	add	x25, x26, #0x80
  44b6f4:	mov	w0, w25
  44b6f8:	bl	404540 <btowc@plt>
  44b6fc:	cmn	w0, #0x1
  44b700:	b.eq	44b718 <_obstack_memory_used@@Base+0x554>  // b.none
  44b704:	ldr	x8, [x20, #120]
  44b708:	lsl	x10, x27, x26
  44b70c:	ldr	x9, [x8, #16]
  44b710:	orr	x9, x9, x10
  44b714:	str	x9, [x8, #16]
  44b718:	cmp	w25, #0x7f
  44b71c:	b.hi	44b6e4 <_obstack_memory_used@@Base+0x520>  // b.pmore
  44b720:	cmp	w25, w0
  44b724:	b.eq	44b6e4 <_obstack_memory_used@@Base+0x520>  // b.none
  44b728:	ldrb	w8, [x20, #176]
  44b72c:	orr	w8, w8, #0x8
  44b730:	strb	w8, [x20, #176]
  44b734:	b	44b6e4 <_obstack_memory_used@@Base+0x520>
  44b738:	mov	x26, xzr
  44b73c:	mov	w27, #0x1                   	// #1
  44b740:	b	44b750 <_obstack_memory_used@@Base+0x58c>
  44b744:	add	x26, x26, #0x1
  44b748:	cmp	x26, #0x40
  44b74c:	b.eq	44b5a8 <_obstack_memory_used@@Base+0x3e4>  // b.none
  44b750:	add	x25, x26, #0xc0
  44b754:	mov	w0, w25
  44b758:	bl	404540 <btowc@plt>
  44b75c:	cmn	w0, #0x1
  44b760:	b.eq	44b778 <_obstack_memory_used@@Base+0x5b4>  // b.none
  44b764:	ldr	x8, [x20, #120]
  44b768:	lsl	x10, x27, x26
  44b76c:	ldr	x9, [x8, #24]
  44b770:	orr	x9, x9, x10
  44b774:	str	x9, [x8, #24]
  44b778:	cmp	w25, #0x7f
  44b77c:	b.hi	44b744 <_obstack_memory_used@@Base+0x580>  // b.pmore
  44b780:	cmp	w25, w0
  44b784:	b.eq	44b744 <_obstack_memory_used@@Base+0x580>  // b.none
  44b788:	ldrb	w8, [x20, #176]
  44b78c:	orr	w8, w8, #0x8
  44b790:	strb	w8, [x20, #176]
  44b794:	b	44b744 <_obstack_memory_used@@Base+0x580>
  44b798:	mov	x24, xzr
  44b79c:	mov	x0, xzr
  44b7a0:	b	44b7b0 <_obstack_memory_used@@Base+0x5ec>
  44b7a4:	mov	x0, xzr
  44b7a8:	str	x24, [sp, #72]
  44b7ac:	ldr	w8, [x20, #180]
  44b7b0:	cmp	w27, #0x0
  44b7b4:	csel	x9, x23, x0, eq  // eq = none
  44b7b8:	cmp	w8, #0x2
  44b7bc:	str	x9, [sp, #16]
  44b7c0:	cbz	x25, 44b8cc <_obstack_memory_used@@Base+0x708>
  44b7c4:	b.ge	44b838 <_obstack_memory_used@@Base+0x674>  // b.tcont
  44b7c8:	cmp	x24, x22
  44b7cc:	csel	x22, x22, x24, gt
  44b7d0:	cmp	x22, #0x1
  44b7d4:	b.lt	44b90c <_obstack_memory_used@@Base+0x748>  // b.tstop
  44b7d8:	bl	404460 <__ctype_toupper_loc@plt>
  44b7dc:	mov	x9, xzr
  44b7e0:	mov	x8, xzr
  44b7e4:	add	x9, x23, x9
  44b7e8:	ldrb	w9, [x9, x8]
  44b7ec:	cbz	x26, 44b810 <_obstack_memory_used@@Base+0x64c>
  44b7f0:	b	44b80c <_obstack_memory_used@@Base+0x648>
  44b7f4:	ldr	x23, [sp, #8]
  44b7f8:	ldr	x9, [sp, #48]
  44b7fc:	ldr	x26, [sp, #128]
  44b800:	add	x9, x23, x9
  44b804:	ldrb	w9, [x9, x8]
  44b808:	cbz	x26, 44b810 <_obstack_memory_used@@Base+0x64c>
  44b80c:	ldrb	w9, [x26, x9]
  44b810:	ldr	x10, [x0]
  44b814:	ldr	x11, [sp, #16]
  44b818:	ldr	w9, [x10, w9, uxtw #2]
  44b81c:	strb	w9, [x11, x8]
  44b820:	add	x8, x8, #0x1
  44b824:	cmp	x8, x22
  44b828:	b.lt	44b7f4 <_obstack_memory_used@@Base+0x630>  // b.tstop
  44b82c:	b	44b910 <_obstack_memory_used@@Base+0x74c>
  44b830:	str	x0, [sp, #16]
  44b834:	str	x23, [sp, #72]
  44b838:	add	x0, sp, #0x8
  44b83c:	bl	44ffec <_obstack_memory_used@@Base+0x4e28>
  44b840:	cbnz	w0, 44bc34 <_obstack_memory_used@@Base+0xa70>
  44b844:	ldr	x8, [sp, #64]
  44b848:	cmp	x8, x22
  44b84c:	b.ge	44b970 <_obstack_memory_used@@Base+0x7ac>  // b.tcont
  44b850:	ldr	x8, [sp, #56]
  44b854:	ldrsw	x9, [x20, #180]
  44b858:	ldr	x24, [sp, #72]
  44b85c:	add	x8, x8, x9
  44b860:	cmp	x24, x8
  44b864:	b.gt	44b970 <_obstack_memory_used@@Base+0x7ac>
  44b868:	ldr	w8, [sp, #152]
  44b86c:	lsl	x23, x24, #1
  44b870:	cmp	w8, #0x2
  44b874:	b.lt	44b8b0 <_obstack_memory_used@@Base+0x6ec>  // b.tstop
  44b878:	lsr	x8, x23, #61
  44b87c:	cbnz	x8, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44b880:	ldr	x0, [sp, #24]
  44b884:	lsl	x1, x24, #3
  44b888:	bl	404450 <realloc@plt>
  44b88c:	cbz	x0, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44b890:	mov	x8, x0
  44b894:	ldr	x0, [sp, #32]
  44b898:	str	x8, [sp, #24]
  44b89c:	cbz	x0, 44b8b0 <_obstack_memory_used@@Base+0x6ec>
  44b8a0:	lsl	x1, x24, #4
  44b8a4:	bl	404450 <realloc@plt>
  44b8a8:	cbz	x0, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44b8ac:	str	x0, [sp, #32]
  44b8b0:	ldrb	w8, [sp, #147]
  44b8b4:	cbz	w8, 44b834 <_obstack_memory_used@@Base+0x670>
  44b8b8:	ldr	x0, [sp, #16]
  44b8bc:	mov	x1, x23
  44b8c0:	bl	404450 <realloc@plt>
  44b8c4:	cbnz	x0, 44b830 <_obstack_memory_used@@Base+0x66c>
  44b8c8:	b	44bc30 <_obstack_memory_used@@Base+0xa6c>
  44b8cc:	b.lt	44b8dc <_obstack_memory_used@@Base+0x718>  // b.tstop
  44b8d0:	add	x0, sp, #0x8
  44b8d4:	bl	4506b4 <_obstack_memory_used@@Base+0x54f0>
  44b8d8:	b	44b970 <_obstack_memory_used@@Base+0x7ac>
  44b8dc:	cbz	x26, 44b918 <_obstack_memory_used@@Base+0x754>
  44b8e0:	cmp	x24, x22
  44b8e4:	csel	x8, x22, x24, gt
  44b8e8:	cmp	x8, #0x1
  44b8ec:	b.lt	44b920 <_obstack_memory_used@@Base+0x75c>  // b.tstop
  44b8f0:	ldrb	w10, [x23]
  44b8f4:	cmp	x8, #0x1
  44b8f8:	ldrb	w10, [x26, x10]
  44b8fc:	strb	w10, [x9]
  44b900:	b.ne	44b928 <_obstack_memory_used@@Base+0x764>  // b.any
  44b904:	mov	w9, #0x1                   	// #1
  44b908:	b	44b96c <_obstack_memory_used@@Base+0x7a8>
  44b90c:	mov	x8, xzr
  44b910:	stp	x8, x8, [sp, #56]
  44b914:	b	44b970 <_obstack_memory_used@@Base+0x7ac>
  44b918:	stp	x24, x24, [sp, #56]
  44b91c:	b	44b970 <_obstack_memory_used@@Base+0x7ac>
  44b920:	mov	x9, xzr
  44b924:	b	44b96c <_obstack_memory_used@@Base+0x7a8>
  44b928:	ldrb	w10, [x23, #1]
  44b92c:	cmp	x8, #0x3
  44b930:	ldrb	w10, [x26, x10]
  44b934:	strb	w10, [x9, #1]
  44b938:	mov	w9, #0x2                   	// #2
  44b93c:	b.lt	44b96c <_obstack_memory_used@@Base+0x7a8>  // b.tstop
  44b940:	ldr	x10, [sp, #8]
  44b944:	ldr	x11, [sp, #48]
  44b948:	ldr	x12, [sp, #128]
  44b94c:	add	x10, x10, x11
  44b950:	ldrb	w10, [x10, x9]
  44b954:	ldr	x11, [sp, #16]
  44b958:	ldrb	w10, [x12, x10]
  44b95c:	strb	w10, [x11, x9]
  44b960:	add	x9, x9, #0x1
  44b964:	cmp	x9, x8
  44b968:	b.lt	44b940 <_obstack_memory_used@@Base+0x77c>  // b.tstop
  44b96c:	stp	x9, x9, [sp, #56]
  44b970:	stur	wzr, [x29, #-44]
  44b974:	ldr	x22, [x19]
  44b978:	orr	x2, x21, #0x800000
  44b97c:	sub	x0, x29, #0x28
  44b980:	add	x1, sp, #0x8
  44b984:	str	xzr, [x19, #48]
  44b988:	str	x21, [x22, #216]
  44b98c:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  44b990:	ldr	x8, [sp, #80]
  44b994:	sub	x2, x29, #0x28
  44b998:	sub	x5, x29, #0x2c
  44b99c:	mov	x1, x19
  44b9a0:	add	x8, x8, w0, sxtw
  44b9a4:	add	x0, sp, #0x8
  44b9a8:	mov	x3, x21
  44b9ac:	mov	x4, xzr
  44b9b0:	str	x8, [sp, #80]
  44b9b4:	bl	4508bc <_obstack_memory_used@@Base+0x56f8>
  44b9b8:	mov	x21, x0
  44b9bc:	cbnz	x0, 44b9c8 <_obstack_memory_used@@Base+0x804>
  44b9c0:	ldur	w8, [x29, #-44]
  44b9c4:	cbnz	w8, 44bbac <_obstack_memory_used@@Base+0x9e8>
  44b9c8:	ldr	w8, [x22, #128]
  44b9cc:	cmp	w8, #0xf
  44b9d0:	b.eq	44bb5c <_obstack_memory_used@@Base+0x998>  // b.none
  44b9d4:	ldr	x0, [x22, #112]
  44b9d8:	add	w9, w8, #0x1
  44b9dc:	sxtw	x8, w8
  44b9e0:	add	x23, x0, x8, lsl #6
  44b9e4:	mov	w10, #0x2                   	// #2
  44b9e8:	mov	x11, #0xffffffffffffffff    	// #-1
  44b9ec:	str	w9, [x22, #128]
  44b9f0:	str	xzr, [x23, #8]!
  44b9f4:	stp	xzr, xzr, [x23, #16]
  44b9f8:	str	xzr, [x23, #8]
  44b9fc:	str	w10, [x23, #48]
  44ba00:	str	xzr, [x23, #32]
  44ba04:	str	x11, [x23, #56]
  44ba08:	mov	x8, x23
  44ba0c:	cbz	x21, 44ba58 <_obstack_memory_used@@Base+0x894>
  44ba10:	ldr	w8, [x22, #128]
  44ba14:	cmp	w8, #0xf
  44ba18:	b.eq	44bb80 <_obstack_memory_used@@Base+0x9bc>  // b.none
  44ba1c:	ldr	x0, [x22, #112]
  44ba20:	add	w9, w8, #0x1
  44ba24:	sxtw	x8, w8
  44ba28:	add	x8, x0, x8, lsl #6
  44ba2c:	mov	w10, #0x10                  	// #16
  44ba30:	mov	x11, #0xffffffffffffffff    	// #-1
  44ba34:	str	w9, [x22, #128]
  44ba38:	str	xzr, [x8, #8]!
  44ba3c:	stp	x21, x23, [x8, #8]
  44ba40:	str	w10, [x8, #48]
  44ba44:	stp	xzr, xzr, [x8, #24]
  44ba48:	str	x11, [x8, #56]
  44ba4c:	str	x8, [x21]
  44ba50:	cbz	x23, 44bba4 <_obstack_memory_used@@Base+0x9e0>
  44ba54:	str	x8, [x23]
  44ba58:	cbz	x23, 44bba4 <_obstack_memory_used@@Base+0x9e0>
  44ba5c:	cbz	x8, 44bba4 <_obstack_memory_used@@Base+0x9e0>
  44ba60:	str	x8, [x20, #104]
  44ba64:	ldr	x21, [x19]
  44ba68:	ldr	x8, [x21, #8]
  44ba6c:	lsl	x0, x8, #3
  44ba70:	bl	404210 <malloc@plt>
  44ba74:	ldr	x8, [x21, #8]
  44ba78:	str	x0, [x21, #24]
  44ba7c:	lsl	x0, x8, #3
  44ba80:	bl	404210 <malloc@plt>
  44ba84:	ldr	x8, [x21, #8]
  44ba88:	str	x0, [x21, #32]
  44ba8c:	add	x8, x8, x8, lsl #1
  44ba90:	lsl	x0, x8, #3
  44ba94:	bl	404210 <malloc@plt>
  44ba98:	ldr	x8, [x21, #8]
  44ba9c:	str	x0, [x21, #40]
  44baa0:	add	x8, x8, x8, lsl #1
  44baa4:	lsl	x0, x8, #3
  44baa8:	bl	404210 <malloc@plt>
  44baac:	ldr	x9, [x21, #24]
  44bab0:	str	x0, [x21, #48]
  44bab4:	cbz	x9, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44bab8:	ldr	x9, [x21, #32]
  44babc:	cbz	x9, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44bac0:	mov	x8, x0
  44bac4:	mov	w0, #0xc                   	// #12
  44bac8:	cbz	x8, 44bc34 <_obstack_memory_used@@Base+0xa70>
  44bacc:	ldr	x8, [x21, #40]
  44bad0:	cbz	x8, 44bc34 <_obstack_memory_used@@Base+0xa70>
  44bad4:	ldr	x22, [x19, #48]
  44bad8:	lsl	x0, x22, #3
  44badc:	bl	404210 <malloc@plt>
  44bae0:	str	x0, [x21, #224]
  44bae4:	cbz	x0, 44be10 <_obstack_memory_used@@Base+0xc4c>
  44bae8:	cbz	x22, 44bc58 <_obstack_memory_used@@Base+0xa94>
  44baec:	cmp	x22, #0x4
  44baf0:	b.cs	44bafc <_obstack_memory_used@@Base+0x938>  // b.hs, b.nlast
  44baf4:	mov	x8, xzr
  44baf8:	b	44bc48 <_obstack_memory_used@@Base+0xa84>
  44bafc:	adrp	x10, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44bb00:	ldr	q0, [x10, #704]
  44bb04:	mov	w10, #0x2                   	// #2
  44bb08:	and	x8, x22, #0xfffffffffffffffc
  44bb0c:	dup	v1.2d, x10
  44bb10:	mov	w10, #0x4                   	// #4
  44bb14:	add	x9, x0, #0x10
  44bb18:	dup	v2.2d, x10
  44bb1c:	mov	x10, x8
  44bb20:	add	v3.2d, v0.2d, v1.2d
  44bb24:	stp	q0, q3, [x9, #-16]
  44bb28:	add	v0.2d, v0.2d, v2.2d
  44bb2c:	subs	x10, x10, #0x4
  44bb30:	add	x9, x9, #0x20
  44bb34:	b.ne	44bb20 <_obstack_memory_used@@Base+0x95c>  // b.any
  44bb38:	b	44bc50 <_obstack_memory_used@@Base+0xa8c>
  44bb3c:	mov	w1, #0xe8                  	// #232
  44bb40:	mov	x0, x20
  44bb44:	bl	404450 <realloc@plt>
  44bb48:	cbz	x0, 44bc18 <_obstack_memory_used@@Base+0xa54>
  44bb4c:	mov	x20, x0
  44bb50:	mov	w8, #0xe8                  	// #232
  44bb54:	stp	x0, x8, [x19]
  44bb58:	b	44b428 <_obstack_memory_used@@Base+0x264>
  44bb5c:	mov	w0, #0x3c8                 	// #968
  44bb60:	bl	404210 <malloc@plt>
  44bb64:	cbz	x0, 44bc20 <_obstack_memory_used@@Base+0xa5c>
  44bb68:	ldr	x9, [x22, #112]
  44bb6c:	mov	w8, wzr
  44bb70:	str	x9, [x0]
  44bb74:	str	x0, [x22, #112]
  44bb78:	str	wzr, [x22, #128]
  44bb7c:	b	44b9d8 <_obstack_memory_used@@Base+0x814>
  44bb80:	mov	w0, #0x3c8                 	// #968
  44bb84:	bl	404210 <malloc@plt>
  44bb88:	cbz	x0, 44bba4 <_obstack_memory_used@@Base+0x9e0>
  44bb8c:	ldr	x9, [x22, #112]
  44bb90:	mov	w8, wzr
  44bb94:	str	x9, [x0]
  44bb98:	str	x0, [x22, #112]
  44bb9c:	str	wzr, [x22, #128]
  44bba0:	b	44ba20 <_obstack_memory_used@@Base+0x85c>
  44bba4:	mov	w8, #0xc                   	// #12
  44bba8:	stur	w8, [x29, #-44]
  44bbac:	str	xzr, [x20, #104]
  44bbb0:	ldr	x21, [x19]
  44bbb4:	ldr	x0, [x21, #112]
  44bbb8:	cbz	x0, 44bbcc <_obstack_memory_used@@Base+0xa08>
  44bbbc:	ldr	x22, [x0]
  44bbc0:	bl	4046b0 <free@plt>
  44bbc4:	mov	x0, x22
  44bbc8:	cbnz	x22, 44bbbc <_obstack_memory_used@@Base+0x9f8>
  44bbcc:	ldr	x0, [x21, #32]
  44bbd0:	mov	w8, #0xf                   	// #15
  44bbd4:	str	w8, [x21, #128]
  44bbd8:	stp	xzr, xzr, [x21, #104]
  44bbdc:	bl	4046b0 <free@plt>
  44bbe0:	str	xzr, [x21, #32]
  44bbe4:	ldr	x0, [sp, #24]
  44bbe8:	bl	4046b0 <free@plt>
  44bbec:	ldr	x0, [sp, #32]
  44bbf0:	bl	4046b0 <free@plt>
  44bbf4:	ldrb	w8, [sp, #147]
  44bbf8:	cbz	w8, 44bc04 <_obstack_memory_used@@Base+0xa40>
  44bbfc:	ldr	x0, [sp, #16]
  44bc00:	bl	4046b0 <free@plt>
  44bc04:	mov	x0, x20
  44bc08:	bl	44d05c <_obstack_memory_used@@Base+0x1e98>
  44bc0c:	stp	xzr, xzr, [x19]
  44bc10:	ldur	w21, [x29, #-44]
  44bc14:	b	44c5dc <_obstack_memory_used@@Base+0x1418>
  44bc18:	mov	w21, #0xc                   	// #12
  44bc1c:	b	44c5dc <_obstack_memory_used@@Base+0x1418>
  44bc20:	mov	x23, xzr
  44bc24:	mov	x8, x23
  44bc28:	cbnz	x21, 44ba10 <_obstack_memory_used@@Base+0x84c>
  44bc2c:	b	44ba58 <_obstack_memory_used@@Base+0x894>
  44bc30:	mov	w0, #0xc                   	// #12
  44bc34:	stur	w0, [x29, #-44]
  44bc38:	ldr	x21, [x19]
  44bc3c:	ldr	x0, [x21, #112]
  44bc40:	cbnz	x0, 44bbbc <_obstack_memory_used@@Base+0x9f8>
  44bc44:	b	44bbcc <_obstack_memory_used@@Base+0xa08>
  44bc48:	str	x8, [x0, x8, lsl #3]
  44bc4c:	add	x8, x8, #0x1
  44bc50:	cmp	x22, x8
  44bc54:	b.ne	44bc48 <_obstack_memory_used@@Base+0xa84>  // b.any
  44bc58:	ldr	x9, [x21, #104]
  44bc5c:	ldrb	w8, [x9, #48]
  44bc60:	cmp	w8, #0x11
  44bc64:	b.eq	44bc9c <_obstack_memory_used@@Base+0xad8>  // b.none
  44bc68:	cmp	w8, #0x4
  44bc6c:	b.ne	44bcec <_obstack_memory_used@@Base+0xb28>  // b.any
  44bc70:	ldr	x8, [x9, #40]
  44bc74:	mov	w11, #0x1                   	// #1
  44bc78:	sbfiz	x8, x8, #3, #32
  44bc7c:	ldr	x8, [x0, x8]
  44bc80:	str	x8, [x9, #40]
  44bc84:	ldr	x10, [x21, #160]
  44bc88:	lsl	w8, w11, w8
  44bc8c:	sxtw	x8, w8
  44bc90:	orr	x8, x10, x8
  44bc94:	str	x8, [x21, #160]
  44bc98:	b	44bcec <_obstack_memory_used@@Base+0xb28>
  44bc9c:	ldr	x8, [x9, #8]
  44bca0:	cbz	x8, 44bcec <_obstack_memory_used@@Base+0xb28>
  44bca4:	ldrb	w10, [x8, #48]
  44bca8:	cmp	w10, #0x11
  44bcac:	b.ne	44bcec <_obstack_memory_used@@Base+0xb28>  // b.any
  44bcb0:	ldr	x10, [x8, #8]
  44bcb4:	ldr	x8, [x8, #40]
  44bcb8:	str	x10, [x9, #8]
  44bcbc:	cbz	x10, 44bcc4 <_obstack_memory_used@@Base+0xb00>
  44bcc0:	str	x9, [x10]
  44bcc4:	ldr	x10, [x9, #40]
  44bcc8:	cmp	x8, #0x3f
  44bccc:	ldr	x10, [x0, x10, lsl #3]
  44bcd0:	str	x10, [x0, x8, lsl #3]
  44bcd4:	b.gt	44bcec <_obstack_memory_used@@Base+0xb28>
  44bcd8:	ldr	x10, [x21, #160]
  44bcdc:	mov	w11, #0x1                   	// #1
  44bce0:	lsl	x8, x11, x8
  44bce4:	bic	x8, x10, x8
  44bce8:	b	44bc94 <_obstack_memory_used@@Base+0xad0>
  44bcec:	mov	w8, #0x1                   	// #1
  44bcf0:	ldr	x10, [x9, #8]
  44bcf4:	cbnz	x10, 44bd20 <_obstack_memory_used@@Base+0xb5c>
  44bcf8:	mov	x11, xzr
  44bcfc:	b	44bd08 <_obstack_memory_used@@Base+0xb44>
  44bd00:	ldr	x9, [x11]
  44bd04:	cbz	x9, 44bdcc <_obstack_memory_used@@Base+0xc08>
  44bd08:	ldr	x10, [x9, #16]
  44bd0c:	mov	x12, x11
  44bd10:	mov	x11, x9
  44bd14:	cmp	x10, x12
  44bd18:	b.eq	44bd00 <_obstack_memory_used@@Base+0xb3c>  // b.none
  44bd1c:	cbz	x10, 44bd00 <_obstack_memory_used@@Base+0xb3c>
  44bd20:	ldrb	w9, [x10, #48]
  44bd24:	cmp	w9, #0x11
  44bd28:	b.eq	44bd70 <_obstack_memory_used@@Base+0xbac>  // b.none
  44bd2c:	cmp	w9, #0x4
  44bd30:	mov	x9, x10
  44bd34:	b.ne	44bcf0 <_obstack_memory_used@@Base+0xb2c>  // b.any
  44bd38:	ldr	x11, [x21, #224]
  44bd3c:	mov	x9, x10
  44bd40:	cbz	x11, 44bcf0 <_obstack_memory_used@@Base+0xb2c>
  44bd44:	ldr	x9, [x10, #40]
  44bd48:	sbfiz	x9, x9, #3, #32
  44bd4c:	ldr	x9, [x11, x9]
  44bd50:	str	x9, [x10, #40]
  44bd54:	ldr	x11, [x21, #160]
  44bd58:	lsl	w9, w8, w9
  44bd5c:	sxtw	x9, w9
  44bd60:	orr	x9, x11, x9
  44bd64:	str	x9, [x21, #160]
  44bd68:	mov	x9, x10
  44bd6c:	b	44bcf0 <_obstack_memory_used@@Base+0xb2c>
  44bd70:	ldr	x11, [x10, #8]
  44bd74:	mov	x9, x10
  44bd78:	cbz	x11, 44bcf0 <_obstack_memory_used@@Base+0xb2c>
  44bd7c:	ldrb	w9, [x11, #48]
  44bd80:	cmp	w9, #0x11
  44bd84:	mov	x9, x10
  44bd88:	b.ne	44bcf0 <_obstack_memory_used@@Base+0xb2c>  // b.any
  44bd8c:	ldr	x9, [x11, #8]
  44bd90:	ldr	x11, [x11, #40]
  44bd94:	str	x9, [x10, #8]
  44bd98:	cbz	x9, 44bda0 <_obstack_memory_used@@Base+0xbdc>
  44bd9c:	str	x10, [x9]
  44bda0:	ldr	x9, [x21, #224]
  44bda4:	ldr	x12, [x10, #40]
  44bda8:	cmp	x11, #0x3f
  44bdac:	ldr	x12, [x9, x12, lsl #3]
  44bdb0:	str	x12, [x9, x11, lsl #3]
  44bdb4:	mov	x9, x10
  44bdb8:	b.gt	44bcf0 <_obstack_memory_used@@Base+0xb2c>
  44bdbc:	ldr	x9, [x21, #160]
  44bdc0:	lsl	x11, x8, x11
  44bdc4:	bic	x9, x9, x11
  44bdc8:	b	44bd64 <_obstack_memory_used@@Base+0xba0>
  44bdcc:	ldr	x8, [x19, #48]
  44bdd0:	cbz	x8, 44bdf8 <_obstack_memory_used@@Base+0xc34>
  44bdd4:	ldr	x0, [x21, #224]
  44bdd8:	mov	x9, xzr
  44bddc:	ldr	x10, [x0, x9, lsl #3]
  44bde0:	cmp	x9, x10
  44bde4:	b.ne	44be00 <_obstack_memory_used@@Base+0xc3c>  // b.any
  44bde8:	add	x9, x9, #0x1
  44bdec:	cmp	x8, x9
  44bdf0:	b.ne	44bddc <_obstack_memory_used@@Base+0xc18>  // b.any
  44bdf4:	b	44be08 <_obstack_memory_used@@Base+0xc44>
  44bdf8:	ldr	x0, [x21, #224]
  44bdfc:	b	44be08 <_obstack_memory_used@@Base+0xc44>
  44be00:	cmp	x8, x9
  44be04:	b.ne	44be10 <_obstack_memory_used@@Base+0xc4c>  // b.any
  44be08:	bl	4046b0 <free@plt>
  44be0c:	str	xzr, [x21, #224]
  44be10:	ldr	x8, [x21, #104]
  44be14:	mov	x22, x8
  44be18:	ldr	x8, [x8, #8]
  44be1c:	cbnz	x8, 44be14 <_obstack_memory_used@@Base+0xc50>
  44be20:	ldr	x8, [x22, #16]
  44be24:	cbnz	x8, 44be14 <_obstack_memory_used@@Base+0xc50>
  44be28:	mov	x3, xzr
  44be2c:	b	44be38 <_obstack_memory_used@@Base+0xc74>
  44be30:	ldr	x3, [x9, #8]
  44be34:	mov	x22, x9
  44be38:	stur	wzr, [x29, #-40]
  44be3c:	cbz	x3, 44be68 <_obstack_memory_used@@Base+0xca4>
  44be40:	ldrb	w8, [x3, #48]
  44be44:	cmp	w8, #0x11
  44be48:	b.ne	44be68 <_obstack_memory_used@@Base+0xca4>  // b.any
  44be4c:	ldr	x1, [x19]
  44be50:	ldrb	w2, [x19, #56]
  44be54:	sub	x0, x29, #0x28
  44be58:	bl	454884 <_obstack_memory_used@@Base+0x96c0>
  44be5c:	str	x0, [x22, #8]
  44be60:	cbz	x0, 44be68 <_obstack_memory_used@@Base+0xca4>
  44be64:	str	x22, [x0]
  44be68:	ldr	x3, [x22, #16]
  44be6c:	cbz	x3, 44be98 <_obstack_memory_used@@Base+0xcd4>
  44be70:	ldrb	w8, [x3, #48]
  44be74:	cmp	w8, #0x11
  44be78:	b.ne	44be98 <_obstack_memory_used@@Base+0xcd4>  // b.any
  44be7c:	ldr	x1, [x19]
  44be80:	ldrb	w2, [x19, #56]
  44be84:	sub	x0, x29, #0x28
  44be88:	bl	454884 <_obstack_memory_used@@Base+0x96c0>
  44be8c:	str	x0, [x22, #16]
  44be90:	cbz	x0, 44be98 <_obstack_memory_used@@Base+0xcd4>
  44be94:	str	x22, [x0]
  44be98:	ldur	w0, [x29, #-40]
  44be9c:	cbnz	w0, 44bc34 <_obstack_memory_used@@Base+0xa70>
  44bea0:	ldr	x9, [x22]
  44bea4:	cbz	x9, 44bebc <_obstack_memory_used@@Base+0xcf8>
  44bea8:	ldr	x8, [x9, #16]
  44beac:	cmp	x8, x22
  44beb0:	b.eq	44be30 <_obstack_memory_used@@Base+0xc6c>  // b.none
  44beb4:	cbz	x8, 44be30 <_obstack_memory_used@@Base+0xc6c>
  44beb8:	b	44be14 <_obstack_memory_used@@Base+0xc50>
  44bebc:	ldr	x8, [x21, #104]
  44bec0:	mov	x22, x8
  44bec4:	ldr	x8, [x8, #8]
  44bec8:	cbnz	x8, 44bec0 <_obstack_memory_used@@Base+0xcfc>
  44becc:	ldr	x8, [x22, #16]
  44bed0:	cbnz	x8, 44bec0 <_obstack_memory_used@@Base+0xcfc>
  44bed4:	ldrb	w8, [x22, #48]
  44bed8:	cmp	w8, #0x10
  44bedc:	b.ne	44bef8 <_obstack_memory_used@@Base+0xd34>  // b.any
  44bee0:	ldr	x8, [x22, #8]
  44bee4:	ldr	x9, [x8, #24]
  44bee8:	str	x9, [x22, #24]
  44beec:	ldr	x8, [x8, #56]
  44bef0:	str	x8, [x22, #56]
  44bef4:	b	44bf38 <_obstack_memory_used@@Base+0xd74>
  44bef8:	ldp	x1, x2, [x22, #40]
  44befc:	mov	x0, x21
  44bf00:	str	x22, [x22, #24]
  44bf04:	bl	454b08 <_obstack_memory_used@@Base+0x9944>
  44bf08:	cmn	x0, #0x1
  44bf0c:	str	x0, [x22, #56]
  44bf10:	b.eq	44bc30 <_obstack_memory_used@@Base+0xa6c>  // b.none
  44bf14:	ldrb	w8, [x22, #48]
  44bf18:	cmp	w8, #0xc
  44bf1c:	b.ne	44bf38 <_obstack_memory_used@@Base+0xd74>  // b.any
  44bf20:	ldr	x8, [x21]
  44bf24:	ldr	w9, [x22, #40]
  44bf28:	add	x8, x8, x0, lsl #4
  44bf2c:	ldr	w10, [x8, #8]
  44bf30:	bfi	w10, w9, #8, #10
  44bf34:	str	w10, [x8, #8]
  44bf38:	ldr	x9, [x22]
  44bf3c:	cbz	x9, 44bf5c <_obstack_memory_used@@Base+0xd98>
  44bf40:	ldr	x8, [x9, #16]
  44bf44:	cmp	x8, x22
  44bf48:	mov	x22, x9
  44bf4c:	b.eq	44bed4 <_obstack_memory_used@@Base+0xd10>  // b.none
  44bf50:	mov	x22, x9
  44bf54:	cbz	x8, 44bed4 <_obstack_memory_used@@Base+0xd10>
  44bf58:	b	44bec0 <_obstack_memory_used@@Base+0xcfc>
  44bf5c:	ldr	x22, [x21, #104]
  44bf60:	ldrb	w8, [x22, #48]
  44bf64:	cmp	w8, #0x10
  44bf68:	b.eq	44bf80 <_obstack_memory_used@@Base+0xdbc>  // b.none
  44bf6c:	cmp	w8, #0xb
  44bf70:	b.ne	44bf90 <_obstack_memory_used@@Base+0xdcc>  // b.any
  44bf74:	ldr	x8, [x22, #8]
  44bf78:	str	x22, [x8, #32]
  44bf7c:	b	44bfb0 <_obstack_memory_used@@Base+0xdec>
  44bf80:	ldp	x8, x9, [x22, #8]
  44bf84:	ldr	x10, [x9, #24]
  44bf88:	str	x10, [x8, #32]
  44bf8c:	b	44bfa8 <_obstack_memory_used@@Base+0xde4>
  44bf90:	ldr	x8, [x22, #8]
  44bf94:	cbz	x8, 44bfa0 <_obstack_memory_used@@Base+0xddc>
  44bf98:	ldr	x9, [x22, #32]
  44bf9c:	str	x9, [x8, #32]
  44bfa0:	ldr	x9, [x22, #16]
  44bfa4:	cbz	x9, 44bfb0 <_obstack_memory_used@@Base+0xdec>
  44bfa8:	ldr	x10, [x22, #32]
  44bfac:	str	x10, [x9, #32]
  44bfb0:	mov	x10, x22
  44bfb4:	b	44bfd0 <_obstack_memory_used@@Base+0xe0c>
  44bfb8:	ldp	x8, x10, [x9, #8]
  44bfbc:	ldr	x11, [x10, #24]
  44bfc0:	str	x11, [x8, #32]
  44bfc4:	ldr	x11, [x9, #32]
  44bfc8:	str	x11, [x10, #32]
  44bfcc:	mov	x10, x9
  44bfd0:	mov	x9, x8
  44bfd4:	cbnz	x8, 44bffc <_obstack_memory_used@@Base+0xe38>
  44bfd8:	b	44bfe4 <_obstack_memory_used@@Base+0xe20>
  44bfdc:	ldr	x10, [x8]
  44bfe0:	cbz	x10, 44c04c <_obstack_memory_used@@Base+0xe88>
  44bfe4:	ldr	x9, [x10, #16]
  44bfe8:	mov	x11, x8
  44bfec:	mov	x8, x10
  44bff0:	cmp	x9, x11
  44bff4:	b.eq	44bfdc <_obstack_memory_used@@Base+0xe18>  // b.none
  44bff8:	cbz	x9, 44bfdc <_obstack_memory_used@@Base+0xe18>
  44bffc:	ldrb	w8, [x9, #48]
  44c000:	cmp	w8, #0x10
  44c004:	b.eq	44bfb8 <_obstack_memory_used@@Base+0xdf4>  // b.none
  44c008:	cmp	w8, #0xb
  44c00c:	b.ne	44c020 <_obstack_memory_used@@Base+0xe5c>  // b.any
  44c010:	ldr	x8, [x9, #8]
  44c014:	mov	x10, x9
  44c018:	str	x9, [x8, #32]
  44c01c:	b	44bfd0 <_obstack_memory_used@@Base+0xe0c>
  44c020:	ldr	x8, [x9, #8]
  44c024:	cbz	x8, 44c030 <_obstack_memory_used@@Base+0xe6c>
  44c028:	ldr	x10, [x9, #32]
  44c02c:	str	x10, [x8, #32]
  44c030:	ldr	x11, [x9, #16]
  44c034:	mov	x10, x9
  44c038:	cbz	x11, 44bfd0 <_obstack_memory_used@@Base+0xe0c>
  44c03c:	ldr	x10, [x9, #32]
  44c040:	str	x10, [x11, #32]
  44c044:	mov	x10, x9
  44c048:	b	44bfd0 <_obstack_memory_used@@Base+0xe0c>
  44c04c:	mov	x0, x21
  44c050:	mov	x1, x22
  44c054:	bl	454644 <_obstack_memory_used@@Base+0x9480>
  44c058:	cbz	w0, 44c074 <_obstack_memory_used@@Base+0xeb0>
  44c05c:	b	44bc34 <_obstack_memory_used@@Base+0xa70>
  44c060:	mov	x0, x21
  44c064:	mov	x1, x23
  44c068:	bl	454644 <_obstack_memory_used@@Base+0x9480>
  44c06c:	mov	x22, x23
  44c070:	cbnz	w0, 44bc34 <_obstack_memory_used@@Base+0xa70>
  44c074:	ldr	x23, [x22, #8]
  44c078:	cbnz	x23, 44c060 <_obstack_memory_used@@Base+0xe9c>
  44c07c:	mov	x8, xzr
  44c080:	b	44c08c <_obstack_memory_used@@Base+0xec8>
  44c084:	ldr	x22, [x8]
  44c088:	cbz	x22, 44c0a8 <_obstack_memory_used@@Base+0xee4>
  44c08c:	ldr	x23, [x22, #16]
  44c090:	mov	x9, x8
  44c094:	mov	x8, x22
  44c098:	cmp	x23, x9
  44c09c:	b.eq	44c084 <_obstack_memory_used@@Base+0xec0>  // b.none
  44c0a0:	cbz	x23, 44c084 <_obstack_memory_used@@Base+0xec0>
  44c0a4:	b	44c060 <_obstack_memory_used@@Base+0xe9c>
  44c0a8:	ldr	x8, [x21, #16]
  44c0ac:	cbz	x8, 44c13c <_obstack_memory_used@@Base+0xf78>
  44c0b0:	mov	w24, wzr
  44c0b4:	mov	x22, xzr
  44c0b8:	mov	w23, #0x18                  	// #24
  44c0bc:	ldr	x8, [x21, #48]
  44c0c0:	madd	x8, x22, x23, x8
  44c0c4:	ldr	x8, [x8, #8]
  44c0c8:	cbnz	x8, 44c100 <_obstack_memory_used@@Base+0xf3c>
  44c0cc:	sub	x0, x29, #0x28
  44c0d0:	mov	w3, #0x1                   	// #1
  44c0d4:	mov	x1, x21
  44c0d8:	mov	x2, x22
  44c0dc:	bl	454cd4 <_obstack_memory_used@@Base+0x9b10>
  44c0e0:	cbnz	w0, 44bc34 <_obstack_memory_used@@Base+0xa70>
  44c0e4:	ldr	x8, [x21, #48]
  44c0e8:	madd	x8, x22, x23, x8
  44c0ec:	ldr	x8, [x8, #8]
  44c0f0:	cbnz	x8, 44c100 <_obstack_memory_used@@Base+0xf3c>
  44c0f4:	ldur	x0, [x29, #-24]
  44c0f8:	bl	4046b0 <free@plt>
  44c0fc:	mov	w24, #0x1                   	// #1
  44c100:	ldr	x9, [x21, #16]
  44c104:	add	x8, x22, #0x1
  44c108:	mov	w10, w24
  44c10c:	cmp	x8, x9
  44c110:	cset	w11, ne  // ne = any
  44c114:	csinc	x22, xzr, x22, eq  // eq = none
  44c118:	and	w24, w24, w11
  44c11c:	tbnz	w10, #0, 44c0bc <_obstack_memory_used@@Base+0xef8>
  44c120:	cmp	x8, x9
  44c124:	b.ne	44c0bc <_obstack_memory_used@@Base+0xef8>  // b.any
  44c128:	add	x8, x8, x8, lsl #1
  44c12c:	lsl	x0, x8, #3
  44c130:	ldrb	w8, [x19, #56]
  44c134:	tbz	w8, #4, 44c148 <_obstack_memory_used@@Base+0xf84>
  44c138:	b	44c158 <_obstack_memory_used@@Base+0xf94>
  44c13c:	mov	x0, xzr
  44c140:	ldrb	w8, [x19, #56]
  44c144:	tbnz	w8, #4, 44c158 <_obstack_memory_used@@Base+0xf94>
  44c148:	ldr	x8, [x19, #48]
  44c14c:	cbz	x8, 44c158 <_obstack_memory_used@@Base+0xf94>
  44c150:	ldrb	w8, [x21, #176]
  44c154:	tbnz	w8, #0, 44c160 <_obstack_memory_used@@Base+0xf9c>
  44c158:	ldr	x8, [x21, #152]
  44c15c:	cbz	x8, 44c26c <_obstack_memory_used@@Base+0x10a8>
  44c160:	bl	404210 <malloc@plt>
  44c164:	str	x0, [x21, #56]
  44c168:	cbz	x0, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44c16c:	ldr	x8, [x21, #16]
  44c170:	cbz	x8, 44c26c <_obstack_memory_used@@Base+0x10a8>
  44c174:	stp	xzr, xzr, [x0]
  44c178:	str	xzr, [x0, #16]
  44c17c:	ldr	x9, [x21, #16]
  44c180:	cmp	x9, #0x2
  44c184:	b.cc	44c1b4 <_obstack_memory_used@@Base+0xff0>  // b.lo, b.ul, b.last
  44c188:	mov	w8, #0x1                   	// #1
  44c18c:	mov	w10, #0x18                  	// #24
  44c190:	ldr	x9, [x21, #56]
  44c194:	add	x8, x8, #0x1
  44c198:	add	x9, x9, x10
  44c19c:	stp	xzr, xzr, [x9]
  44c1a0:	str	xzr, [x9, #16]
  44c1a4:	ldr	x9, [x21, #16]
  44c1a8:	add	x10, x10, #0x18
  44c1ac:	cmp	x8, x9
  44c1b0:	b.cc	44c190 <_obstack_memory_used@@Base+0xfcc>  // b.lo, b.ul, b.last
  44c1b4:	cbz	x9, 44c26c <_obstack_memory_used@@Base+0x10a8>
  44c1b8:	ldr	x8, [x21, #48]
  44c1bc:	mov	x22, xzr
  44c1c0:	mov	w23, #0x18                  	// #24
  44c1c4:	b	44c1d8 <_obstack_memory_used@@Base+0x1014>
  44c1c8:	ldr	x9, [x21, #16]
  44c1cc:	add	x22, x22, #0x1
  44c1d0:	cmp	x22, x9
  44c1d4:	b.cs	44c26c <_obstack_memory_used@@Base+0x10a8>  // b.hs, b.nlast
  44c1d8:	madd	x10, x22, x23, x8
  44c1dc:	ldr	x11, [x10, #8]
  44c1e0:	cmp	x11, #0x1
  44c1e4:	b.lt	44c1cc <_obstack_memory_used@@Base+0x1008>  // b.tstop
  44c1e8:	ldr	x24, [x10, #16]
  44c1ec:	mov	x26, xzr
  44c1f0:	b	44c21c <_obstack_memory_used@@Base+0x1058>
  44c1f4:	madd	x10, x11, x23, x10
  44c1f8:	ldr	x0, [x10, #16]
  44c1fc:	add	x10, x9, #0x1
  44c200:	str	x10, [x27]
  44c204:	str	x22, [x0, x9, lsl #3]
  44c208:	madd	x9, x22, x23, x8
  44c20c:	ldr	x9, [x9, #8]
  44c210:	add	x26, x26, #0x1
  44c214:	cmp	x26, x9
  44c218:	b.ge	44c1c8 <_obstack_memory_used@@Base+0x1004>  // b.tcont
  44c21c:	ldr	x10, [x21, #56]
  44c220:	ldr	x11, [x24, x26, lsl #3]
  44c224:	madd	x12, x11, x23, x10
  44c228:	mov	x27, x12
  44c22c:	ldr	x13, [x12]
  44c230:	ldr	x9, [x27, #8]!
  44c234:	cmp	x13, x9
  44c238:	b.ne	44c1f4 <_obstack_memory_used@@Base+0x1030>  // b.any
  44c23c:	lsl	x8, x13, #1
  44c240:	add	x8, x8, #0x2
  44c244:	str	x8, [x12]
  44c248:	madd	x28, x11, x23, x10
  44c24c:	ldr	x0, [x28, #16]!
  44c250:	lsl	x1, x8, #3
  44c254:	bl	404450 <realloc@plt>
  44c258:	cbz	x0, 44bc30 <_obstack_memory_used@@Base+0xa6c>
  44c25c:	str	x0, [x28]
  44c260:	ldr	x9, [x27]
  44c264:	ldr	x8, [x21, #48]
  44c268:	b	44c1fc <_obstack_memory_used@@Base+0x1038>
  44c26c:	stur	wzr, [x29, #-44]
  44c270:	cbnz	x25, 44c364 <_obstack_memory_used@@Base+0x11a0>
  44c274:	ldrb	w9, [x20, #176]
  44c278:	tbz	w9, #2, 44c364 <_obstack_memory_used@@Base+0x11a0>
  44c27c:	ldr	x8, [x19, #40]
  44c280:	cbnz	x8, 44c364 <_obstack_memory_used@@Base+0x11a0>
  44c284:	ldr	x11, [x20, #16]
  44c288:	cbz	x11, 44c330 <_obstack_memory_used@@Base+0x116c>
  44c28c:	ldr	x10, [x20]
  44c290:	adrp	x13, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44c294:	mov	w8, wzr
  44c298:	mov	w12, wzr
  44c29c:	add	x13, x13, #0x2f0
  44c2a0:	mov	w14, #0x1                   	// #1
  44c2a4:	mov	w15, #0x8b                  	// #139
  44c2a8:	mov	x16, x10
  44c2ac:	b	44c2cc <_obstack_memory_used@@Base+0x1108>
  44c2b0:	ldrsb	w17, [x16]
  44c2b4:	cmp	w17, #0x0
  44c2b8:	cset	w17, lt  // lt = tstop
  44c2bc:	orr	w12, w12, w17
  44c2c0:	subs	x11, x11, #0x1
  44c2c4:	add	x16, x16, #0x10
  44c2c8:	b.eq	44c600 <_obstack_memory_used@@Base+0x143c>  // b.none
  44c2cc:	ldrb	w17, [x16, #8]
  44c2d0:	sub	w17, w17, #0x1
  44c2d4:	cmp	w17, #0xb
  44c2d8:	b.hi	44c684 <_obstack_memory_used@@Base+0x14c0>  // b.pmore
  44c2dc:	adr	x18, 44c2b0 <_obstack_memory_used@@Base+0x10ec>
  44c2e0:	ldrb	w0, [x13, x17]
  44c2e4:	add	x18, x18, x0, lsl #2
  44c2e8:	br	x18
  44c2ec:	ldr	x17, [x16]
  44c2f0:	ldr	x18, [x17, #16]
  44c2f4:	cbnz	x18, 44c364 <_obstack_memory_used@@Base+0x11a0>
  44c2f8:	ldr	x17, [x17, #24]
  44c2fc:	cbz	x17, 44c2c0 <_obstack_memory_used@@Base+0x10fc>
  44c300:	b	44c364 <_obstack_memory_used@@Base+0x11a0>
  44c304:	ldr	w17, [x16]
  44c308:	sub	w17, w17, #0x10
  44c30c:	ror	w17, w17, #4
  44c310:	cmp	w17, #0x7
  44c314:	b.hi	44c364 <_obstack_memory_used@@Base+0x11a0>  // b.pmore
  44c318:	lsl	w17, w14, w17
  44c31c:	tst	w17, w15
  44c320:	b.ne	44c2c0 <_obstack_memory_used@@Base+0x10fc>  // b.any
  44c324:	b	44c364 <_obstack_memory_used@@Base+0x11a0>
  44c328:	mov	w8, #0x1                   	// #1
  44c32c:	b	44c2c0 <_obstack_memory_used@@Base+0x10fc>
  44c330:	mov	w8, wzr
  44c334:	ldr	x10, [x20, #152]
  44c338:	mov	w12, #0x2                   	// #2
  44c33c:	and	w9, w9, #0xfffffff9
  44c340:	mov	w11, #0x1                   	// #1
  44c344:	cmp	x10, #0x0
  44c348:	cset	w10, gt
  44c34c:	orr	w8, w8, w10
  44c350:	tst	w8, #0x1
  44c354:	csel	w8, w12, wzr, ne  // ne = any
  44c358:	orr	w8, w8, w9
  44c35c:	str	w11, [x20, #180]
  44c360:	strb	w8, [x20, #176]
  44c364:	ldr	x8, [x20, #104]
  44c368:	ldr	x24, [x20, #48]
  44c36c:	ldr	x8, [x8, #24]
  44c370:	ldr	x23, [x8, #56]
  44c374:	mov	w8, #0x18                  	// #24
  44c378:	str	x23, [x20, #144]
  44c37c:	madd	x8, x23, x8, x24
  44c380:	ldr	x22, [x8, #8]
  44c384:	stur	x22, [x29, #-32]
  44c388:	ldr	x25, [x8, #8]
  44c38c:	cmp	x25, #0x1
  44c390:	b.lt	44c4d4 <_obstack_memory_used@@Base+0x1310>  // b.tstop
  44c394:	lsl	x0, x22, #3
  44c398:	stur	x22, [x29, #-40]
  44c39c:	bl	404210 <malloc@plt>
  44c3a0:	stur	x0, [x29, #-24]
  44c3a4:	cbz	x0, 44c674 <_obstack_memory_used@@Base+0x14b0>
  44c3a8:	mov	w8, #0x18                  	// #24
  44c3ac:	madd	x8, x23, x8, x24
  44c3b0:	ldr	x1, [x8, #16]
  44c3b4:	lsl	x2, x25, #3
  44c3b8:	mov	x21, x0
  44c3bc:	bl	403e80 <memcpy@plt>
  44c3c0:	cmp	x22, #0x1
  44c3c4:	stur	wzr, [x29, #-12]
  44c3c8:	b.lt	44c4e0 <_obstack_memory_used@@Base+0x131c>  // b.tstop
  44c3cc:	ldr	x8, [x20, #152]
  44c3d0:	cmp	x8, #0x1
  44c3d4:	b.lt	44c4e0 <_obstack_memory_used@@Base+0x131c>  // b.tstop
  44c3d8:	mov	x8, xzr
  44c3dc:	mov	w23, #0x18                  	// #24
  44c3e0:	ldr	x9, [x21, x8, lsl #3]
  44c3e4:	ldr	x10, [x20]
  44c3e8:	add	x11, x10, x9, lsl #4
  44c3ec:	ldrb	w11, [x11, #8]
  44c3f0:	cmp	w11, #0x4
  44c3f4:	b.ne	44c4c0 <_obstack_memory_used@@Base+0x12fc>  // b.any
  44c3f8:	cmp	x22, #0x1
  44c3fc:	b.lt	44c44c <_obstack_memory_used@@Base+0x1288>  // b.tstop
  44c400:	mov	x11, xzr
  44c404:	add	x12, x10, x9, lsl #4
  44c408:	b	44c418 <_obstack_memory_used@@Base+0x1254>
  44c40c:	add	x11, x11, #0x1
  44c410:	cmp	x22, x11
  44c414:	b.eq	44c4c0 <_obstack_memory_used@@Base+0x12fc>  // b.none
  44c418:	ldr	x13, [x21, x11, lsl #3]
  44c41c:	add	x14, x10, x13, lsl #4
  44c420:	ldrb	w14, [x14, #8]
  44c424:	cmp	w14, #0x9
  44c428:	b.ne	44c40c <_obstack_memory_used@@Base+0x1248>  // b.any
  44c42c:	lsl	x13, x13, #4
  44c430:	ldr	x13, [x10, x13]
  44c434:	ldr	x14, [x12]
  44c438:	cmp	x13, x14
  44c43c:	b.ne	44c40c <_obstack_memory_used@@Base+0x1248>  // b.any
  44c440:	cmp	x11, x22
  44c444:	b.ne	44c458 <_obstack_memory_used@@Base+0x1294>  // b.any
  44c448:	b	44c4c0 <_obstack_memory_used@@Base+0x12fc>
  44c44c:	mov	x11, xzr
  44c450:	cmp	x11, x22
  44c454:	b.eq	44c4c0 <_obstack_memory_used@@Base+0x12fc>  // b.none
  44c458:	ldr	x10, [x20, #40]
  44c45c:	madd	x9, x9, x23, x10
  44c460:	ldr	x9, [x9, #16]
  44c464:	subs	x10, x22, #0x1
  44c468:	ldr	x9, [x9]
  44c46c:	b.lt	44c4a4 <_obstack_memory_used@@Base+0x12e0>  // b.tstop
  44c470:	mov	x11, xzr
  44c474:	b.eq	44c498 <_obstack_memory_used@@Base+0x12d4>  // b.none
  44c478:	add	x12, x11, x10
  44c47c:	lsr	x12, x12, #1
  44c480:	ldr	x13, [x21, x12, lsl #3]
  44c484:	cmp	x13, x9
  44c488:	csinc	x11, x11, x12, ge  // ge = tcont
  44c48c:	csel	x10, x10, x12, lt  // lt = tstop
  44c490:	cmp	x11, x10
  44c494:	b.cc	44c478 <_obstack_memory_used@@Base+0x12b4>  // b.lo, b.ul, b.last
  44c498:	ldr	x10, [x21, x11, lsl #3]
  44c49c:	cmp	x10, x9
  44c4a0:	b.eq	44c4c0 <_obstack_memory_used@@Base+0x12fc>  // b.none
  44c4a4:	ldr	x8, [x20, #48]
  44c4a8:	sub	x0, x29, #0x28
  44c4ac:	madd	x1, x9, x23, x8
  44c4b0:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  44c4b4:	cbnz	w0, 44c578 <_obstack_memory_used@@Base+0x13b4>
  44c4b8:	ldur	x22, [x29, #-32]
  44c4bc:	mov	x8, xzr
  44c4c0:	add	x8, x8, #0x1
  44c4c4:	cmp	x8, x22
  44c4c8:	b.ge	44c4e0 <_obstack_memory_used@@Base+0x131c>  // b.tcont
  44c4cc:	ldur	x21, [x29, #-24]
  44c4d0:	b	44c3e0 <_obstack_memory_used@@Base+0x121c>
  44c4d4:	stp	xzr, xzr, [x29, #-40]
  44c4d8:	stur	xzr, [x29, #-24]
  44c4dc:	stur	wzr, [x29, #-12]
  44c4e0:	sub	x0, x29, #0xc
  44c4e4:	sub	x2, x29, #0x28
  44c4e8:	mov	x1, x20
  44c4ec:	mov	w3, wzr
  44c4f0:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44c4f4:	str	x0, [x20, #72]
  44c4f8:	cbz	x0, 44c66c <_obstack_memory_used@@Base+0x14a8>
  44c4fc:	ldrsb	w8, [x0, #104]
  44c500:	tbnz	w8, #31, 44c510 <_obstack_memory_used@@Base+0x134c>
  44c504:	stp	x0, x0, [x20, #88]
  44c508:	str	x0, [x20, #80]
  44c50c:	b	44c56c <_obstack_memory_used@@Base+0x13a8>
  44c510:	sub	x0, x29, #0xc
  44c514:	sub	x2, x29, #0x28
  44c518:	mov	w3, #0x1                   	// #1
  44c51c:	mov	x1, x20
  44c520:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44c524:	str	x0, [x20, #80]
  44c528:	sub	x0, x29, #0xc
  44c52c:	sub	x2, x29, #0x28
  44c530:	mov	w3, #0x2                   	// #2
  44c534:	mov	x1, x20
  44c538:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44c53c:	str	x0, [x20, #88]
  44c540:	sub	x0, x29, #0xc
  44c544:	sub	x2, x29, #0x28
  44c548:	mov	w3, #0x6                   	// #6
  44c54c:	mov	x1, x20
  44c550:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44c554:	ldr	x8, [x20, #80]
  44c558:	str	x0, [x20, #96]
  44c55c:	cbz	x8, 44c66c <_obstack_memory_used@@Base+0x14a8>
  44c560:	cbz	x0, 44c66c <_obstack_memory_used@@Base+0x14a8>
  44c564:	ldr	x8, [x20, #88]
  44c568:	cbz	x8, 44c66c <_obstack_memory_used@@Base+0x14a8>
  44c56c:	ldur	x0, [x29, #-24]
  44c570:	bl	4046b0 <free@plt>
  44c574:	mov	w0, wzr
  44c578:	stur	w0, [x29, #-44]
  44c57c:	ldr	x21, [x19]
  44c580:	ldr	x0, [x21, #112]
  44c584:	cbz	x0, 44c598 <_obstack_memory_used@@Base+0x13d4>
  44c588:	ldr	x22, [x0]
  44c58c:	bl	4046b0 <free@plt>
  44c590:	mov	x0, x22
  44c594:	cbnz	x22, 44c588 <_obstack_memory_used@@Base+0x13c4>
  44c598:	ldr	x0, [x21, #32]
  44c59c:	mov	w8, #0xf                   	// #15
  44c5a0:	str	w8, [x21, #128]
  44c5a4:	stp	xzr, xzr, [x21, #104]
  44c5a8:	bl	4046b0 <free@plt>
  44c5ac:	str	xzr, [x21, #32]
  44c5b0:	ldr	x0, [sp, #24]
  44c5b4:	bl	4046b0 <free@plt>
  44c5b8:	ldr	x0, [sp, #32]
  44c5bc:	bl	4046b0 <free@plt>
  44c5c0:	ldrb	w8, [sp, #147]
  44c5c4:	cbz	w8, 44c5d0 <_obstack_memory_used@@Base+0x140c>
  44c5c8:	ldr	x0, [sp, #16]
  44c5cc:	bl	4046b0 <free@plt>
  44c5d0:	ldur	w8, [x29, #-44]
  44c5d4:	cbnz	w8, 44bc04 <_obstack_memory_used@@Base+0xa40>
  44c5d8:	mov	w21, wzr
  44c5dc:	mov	w0, w21
  44c5e0:	ldp	x20, x19, [sp, #288]
  44c5e4:	ldp	x22, x21, [sp, #272]
  44c5e8:	ldp	x24, x23, [sp, #256]
  44c5ec:	ldp	x26, x25, [sp, #240]
  44c5f0:	ldp	x28, x27, [sp, #224]
  44c5f4:	ldp	x29, x30, [sp, #208]
  44c5f8:	add	sp, sp, #0x130
  44c5fc:	ret
  44c600:	orr	w11, w12, w8
  44c604:	tbz	w11, #0, 44c334 <_obstack_memory_used@@Base+0x1170>
  44c608:	mov	x9, xzr
  44c60c:	mov	w11, #0x1                   	// #1
  44c610:	add	x12, x10, x9
  44c614:	ldr	w13, [x12, #8]
  44c618:	and	w14, w13, #0xff
  44c61c:	cmp	w14, #0x5
  44c620:	b.eq	44c63c <_obstack_memory_used@@Base+0x1478>  // b.none
  44c624:	cmp	w14, #0x1
  44c628:	b.ne	44c648 <_obstack_memory_used@@Base+0x1484>  // b.any
  44c62c:	ldrsb	w10, [x10, x9]
  44c630:	tbz	w10, #31, 44c648 <_obstack_memory_used@@Base+0x1484>
  44c634:	and	w10, w13, #0xffdfffff
  44c638:	b	44c644 <_obstack_memory_used@@Base+0x1480>
  44c63c:	and	w10, w13, #0xffffff00
  44c640:	orr	w10, w10, #0x7
  44c644:	str	w10, [x12, #8]
  44c648:	ldr	x10, [x20, #16]
  44c64c:	cmp	x11, x10
  44c650:	b.cs	44c664 <_obstack_memory_used@@Base+0x14a0>  // b.hs, b.nlast
  44c654:	ldr	x10, [x20]
  44c658:	add	x9, x9, #0x10
  44c65c:	add	x11, x11, #0x1
  44c660:	b	44c610 <_obstack_memory_used@@Base+0x144c>
  44c664:	ldrb	w9, [x20, #176]
  44c668:	b	44c334 <_obstack_memory_used@@Base+0x1170>
  44c66c:	ldur	w0, [x29, #-12]
  44c670:	b	44c578 <_obstack_memory_used@@Base+0x13b4>
  44c674:	mov	w0, #0xc                   	// #12
  44c678:	stp	xzr, xzr, [x29, #-40]
  44c67c:	stur	w0, [x29, #-12]
  44c680:	b	44c578 <_obstack_memory_used@@Base+0x13b4>
  44c684:	bl	404560 <abort@plt>
  44c688:	adrp	x9, 480000 <_obstack_memory_used@@Base+0x34e3c>
  44c68c:	ldr	x8, [x9, #4032]
  44c690:	str	x0, [x9, #4032]
  44c694:	mov	x0, x8
  44c698:	ret
  44c69c:	stp	x29, x30, [sp, #-48]!
  44c6a0:	stp	x20, x19, [sp, #32]
  44c6a4:	ldr	x20, [x0, #32]
  44c6a8:	str	x21, [sp, #16]
  44c6ac:	ldr	x21, [x0]
  44c6b0:	movi	v0.2d, #0x0
  44c6b4:	stp	q0, q0, [x20, #224]
  44c6b8:	stp	q0, q0, [x20, #192]
  44c6bc:	stp	q0, q0, [x20, #160]
  44c6c0:	stp	q0, q0, [x20, #128]
  44c6c4:	stp	q0, q0, [x20, #96]
  44c6c8:	stp	q0, q0, [x20, #64]
  44c6cc:	stp	q0, q0, [x20, #32]
  44c6d0:	stp	q0, q0, [x20]
  44c6d4:	ldr	x1, [x21, #72]
  44c6d8:	mov	x2, x20
  44c6dc:	mov	x29, sp
  44c6e0:	mov	x19, x0
  44c6e4:	bl	44c758 <_obstack_memory_used@@Base+0x1594>
  44c6e8:	ldp	x8, x1, [x21, #72]
  44c6ec:	cmp	x8, x1
  44c6f0:	b.eq	44c704 <_obstack_memory_used@@Base+0x1540>  // b.none
  44c6f4:	mov	x0, x19
  44c6f8:	mov	x2, x20
  44c6fc:	bl	44c758 <_obstack_memory_used@@Base+0x1594>
  44c700:	ldr	x8, [x21, #72]
  44c704:	ldr	x1, [x21, #88]
  44c708:	cmp	x8, x1
  44c70c:	b.eq	44c720 <_obstack_memory_used@@Base+0x155c>  // b.none
  44c710:	mov	x0, x19
  44c714:	mov	x2, x20
  44c718:	bl	44c758 <_obstack_memory_used@@Base+0x1594>
  44c71c:	ldr	x8, [x21, #72]
  44c720:	ldr	x1, [x21, #96]
  44c724:	cmp	x8, x1
  44c728:	b.eq	44c738 <_obstack_memory_used@@Base+0x1574>  // b.none
  44c72c:	mov	x0, x19
  44c730:	mov	x2, x20
  44c734:	bl	44c758 <_obstack_memory_used@@Base+0x1594>
  44c738:	ldrb	w8, [x19, #56]
  44c73c:	ldr	x21, [sp, #16]
  44c740:	mov	w0, wzr
  44c744:	orr	w8, w8, #0x8
  44c748:	strb	w8, [x19, #56]
  44c74c:	ldp	x20, x19, [sp, #32]
  44c750:	ldp	x29, x30, [sp], #48
  44c754:	ret
  44c758:	sub	sp, sp, #0x1e0
  44c75c:	stp	x29, x30, [sp, #384]
  44c760:	stp	x28, x27, [sp, #400]
  44c764:	stp	x26, x25, [sp, #416]
  44c768:	stp	x24, x23, [sp, #432]
  44c76c:	stp	x22, x21, [sp, #448]
  44c770:	stp	x20, x19, [sp, #464]
  44c774:	ldr	x28, [x0]
  44c778:	mov	x20, x2
  44c77c:	mov	x23, x0
  44c780:	add	x29, sp, #0x180
  44c784:	ldr	w8, [x28, #180]
  44c788:	cmp	w8, #0x1
  44c78c:	b.ne	44c7ac <_obstack_memory_used@@Base+0x15e8>  // b.any
  44c790:	ldrb	w8, [x23, #26]
  44c794:	ubfx	w8, w8, #6, #1
  44c798:	str	w8, [sp, #68]
  44c79c:	ldr	x8, [x1, #16]
  44c7a0:	cmp	x8, #0x1
  44c7a4:	b.ge	44c7bc <_obstack_memory_used@@Base+0x15f8>  // b.tcont
  44c7a8:	b	44ce6c <_obstack_memory_used@@Base+0x1ca8>
  44c7ac:	str	wzr, [sp, #68]
  44c7b0:	ldr	x8, [x1, #16]
  44c7b4:	cmp	x8, #0x1
  44c7b8:	b.lt	44ce6c <_obstack_memory_used@@Base+0x1ca8>  // b.tstop
  44c7bc:	add	x8, x20, #0x3
  44c7c0:	str	x8, [sp, #16]
  44c7c4:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44c7c8:	ldr	q0, [x8, #704]
  44c7cc:	add	x9, sp, #0x68
  44c7d0:	mov	w8, #0x2                   	// #2
  44c7d4:	mov	x25, xzr
  44c7d8:	mov	w26, #0x1                   	// #1
  44c7dc:	orr	x9, x9, #0x1
  44c7e0:	str	q0, [sp, #48]
  44c7e4:	dup	v0.2d, x8
  44c7e8:	str	x9, [sp, #8]
  44c7ec:	str	q0, [sp, #80]
  44c7f0:	stp	x23, x28, [sp, #24]
  44c7f4:	str	x1, [sp, #72]
  44c7f8:	b	44c810 <_obstack_memory_used@@Base+0x164c>
  44c7fc:	ldr	x1, [sp, #72]
  44c800:	add	x25, x25, #0x1
  44c804:	ldr	x8, [x1, #16]
  44c808:	cmp	x25, x8
  44c80c:	b.ge	44ce6c <_obstack_memory_used@@Base+0x1ca8>  // b.tcont
  44c810:	ldr	x8, [x1, #24]
  44c814:	ldr	x10, [x28]
  44c818:	ldr	x19, [x8, x25, lsl #3]
  44c81c:	add	x9, x10, x19, lsl #4
  44c820:	ldrb	w8, [x9, #8]
  44c824:	sub	w11, w8, #0x1
  44c828:	cmp	w11, #0x6
  44c82c:	b.hi	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.pmore
  44c830:	adrp	x14, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44c834:	add	x14, x14, #0x2fc
  44c838:	adr	x12, 44c7fc <_obstack_memory_used@@Base+0x1638>
  44c83c:	ldrh	w13, [x14, x11, lsl #1]
  44c840:	add	x12, x12, x13, lsl #2
  44c844:	br	x12
  44c848:	ldrb	w21, [x9]
  44c84c:	ldr	w8, [sp, #68]
  44c850:	strb	w26, [x20, x21]
  44c854:	cbz	w8, 44c868 <_obstack_memory_used@@Base+0x16a4>
  44c858:	bl	404100 <__ctype_tolower_loc@plt>
  44c85c:	ldr	x8, [x0]
  44c860:	ldrsw	x8, [x8, x21, lsl #2]
  44c864:	strb	w26, [x20, x8]
  44c868:	ldrb	w8, [x23, #26]
  44c86c:	tbz	w8, #6, 44c7fc <_obstack_memory_used@@Base+0x1638>
  44c870:	ldr	w8, [x28, #180]
  44c874:	cmp	w8, #0x2
  44c878:	b.lt	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.tstop
  44c87c:	ldr	x9, [x28]
  44c880:	lsl	x8, x19, #4
  44c884:	add	x10, x19, #0x1
  44c888:	mov	w14, #0x1                   	// #1
  44c88c:	ldrb	w9, [x9, x8]
  44c890:	movk	w14, #0x20, lsl #16
  44c894:	strb	w9, [sp, #104]
  44c898:	ldr	x9, [x28, #16]
  44c89c:	cmp	x10, x9
  44c8a0:	ldr	x9, [sp, #8]
  44c8a4:	b.cs	44c8e4 <_obstack_memory_used@@Base+0x1720>  // b.hs, b.nlast
  44c8a8:	ldr	x9, [sp, #8]
  44c8ac:	ldr	x11, [x28]
  44c8b0:	add	w13, w14, #0xfe
  44c8b4:	add	x11, x11, x8
  44c8b8:	ldr	w12, [x11, #24]
  44c8bc:	and	w12, w12, w13
  44c8c0:	cmp	w12, w14
  44c8c4:	b.ne	44c8e4 <_obstack_memory_used@@Base+0x1720>  // b.any
  44c8c8:	ldrb	w11, [x11, #16]
  44c8cc:	add	x10, x10, #0x1
  44c8d0:	add	x8, x8, #0x10
  44c8d4:	strb	w11, [x9], #1
  44c8d8:	ldr	x11, [x28, #16]
  44c8dc:	cmp	x10, x11
  44c8e0:	b.cc	44c8ac <_obstack_memory_used@@Base+0x16e8>  // b.lo, b.ul, b.last
  44c8e4:	add	x8, sp, #0x68
  44c8e8:	sub	x22, x9, x8
  44c8ec:	sub	x0, x29, #0xc
  44c8f0:	add	x1, sp, #0x68
  44c8f4:	sub	x3, x29, #0x18
  44c8f8:	mov	x2, x22
  44c8fc:	stur	xzr, [x29, #-24]
  44c900:	bl	44addc <argp_parse@@Base+0x10730>
  44c904:	cmp	x0, x22
  44c908:	b.ne	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.any
  44c90c:	ldur	w0, [x29, #-12]
  44c910:	bl	404a60 <towlower@plt>
  44c914:	mov	w1, w0
  44c918:	add	x0, sp, #0x68
  44c91c:	sub	x2, x29, #0x18
  44c920:	bl	404af0 <wcrtomb@plt>
  44c924:	cmn	x0, #0x1
  44c928:	b.eq	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.none
  44c92c:	ldrb	w8, [sp, #104]
  44c930:	strb	w26, [x20, x8]
  44c934:	b	44c7fc <_obstack_memory_used@@Base+0x1638>
  44c938:	lsl	x22, x19, #4
  44c93c:	ldr	x8, [x10, x22]
  44c940:	ldr	x19, [x8]
  44c944:	ldr	w8, [sp, #68]
  44c948:	cbz	w8, 44cab8 <_obstack_memory_used@@Base+0x18f4>
  44c94c:	ldr	x9, [sp, #16]
  44c950:	mov	x27, xzr
  44c954:	mov	w8, #0x83                  	// #131
  44c958:	b	44c980 <_obstack_memory_used@@Base+0x17bc>
  44c95c:	bl	404100 <__ctype_tolower_loc@plt>
  44c960:	ldr	x8, [x0]
  44c964:	ldr	w8, [x8, x27, lsl #2]
  44c968:	strb	w26, [x20, w8, sxtw]
  44c96c:	add	x27, x27, #0x1
  44c970:	add	w8, w21, #0x1
  44c974:	cmp	x27, #0x40
  44c978:	add	x9, x24, #0x1
  44c97c:	b.eq	44cb20 <_obstack_memory_used@@Base+0x195c>  // b.none
  44c980:	lsr	x10, x19, x27
  44c984:	mov	w21, w8
  44c988:	mov	x24, x9
  44c98c:	tbz	w10, #0, 44c96c <_obstack_memory_used@@Base+0x17a8>
  44c990:	add	w8, w27, #0x80
  44c994:	cmp	w8, #0x180
  44c998:	strb	w26, [x20, x27]
  44c99c:	b.cc	44c95c <_obstack_memory_used@@Base+0x1798>  // b.lo, b.ul, b.last
  44c9a0:	mov	w8, w27
  44c9a4:	b	44c968 <_obstack_memory_used@@Base+0x17a4>
  44c9a8:	ldr	w8, [x28, #180]
  44c9ac:	ldr	x22, [x9]
  44c9b0:	cmp	w8, #0x2
  44c9b4:	b.lt	44ca10 <_obstack_memory_used@@Base+0x184c>  // b.tstop
  44c9b8:	ldr	x8, [x22, #72]
  44c9bc:	cbnz	x8, 44c9d0 <_obstack_memory_used@@Base+0x180c>
  44c9c0:	ldrb	w8, [x22, #32]
  44c9c4:	tbnz	w8, #0, 44c9d0 <_obstack_memory_used@@Base+0x180c>
  44c9c8:	ldr	x8, [x22, #64]
  44c9cc:	cbz	x8, 44ca10 <_obstack_memory_used@@Base+0x184c>
  44c9d0:	sturb	wzr, [x29, #-24]
  44c9d4:	b	44c9e4 <_obstack_memory_used@@Base+0x1820>
  44c9d8:	add	w8, w8, #0x1
  44c9dc:	sturb	w8, [x29, #-24]
  44c9e0:	tbnz	w8, #8, 44c7fc <_obstack_memory_used@@Base+0x1638>
  44c9e4:	sub	x1, x29, #0x18
  44c9e8:	add	x3, sp, #0x68
  44c9ec:	mov	w2, #0x1                   	// #1
  44c9f0:	mov	x0, xzr
  44c9f4:	str	xzr, [sp, #104]
  44c9f8:	bl	44addc <argp_parse@@Base+0x10730>
  44c9fc:	ldurb	w8, [x29, #-24]
  44ca00:	cmn	x0, #0x2
  44ca04:	b.ne	44c9d8 <_obstack_memory_used@@Base+0x1814>  // b.any
  44ca08:	strb	w26, [x20, x8]
  44ca0c:	b	44c9d8 <_obstack_memory_used@@Base+0x1814>
  44ca10:	ldr	x8, [x22, #40]
  44ca14:	cmp	x8, #0x1
  44ca18:	b.lt	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.tstop
  44ca1c:	ldr	w8, [sp, #68]
  44ca20:	tbz	w8, #0, 44cdb0 <_obstack_memory_used@@Base+0x1bec>
  44ca24:	mov	x21, xzr
  44ca28:	b	44ca3c <_obstack_memory_used@@Base+0x1878>
  44ca2c:	ldr	x8, [x22, #40]
  44ca30:	add	x21, x21, #0x1
  44ca34:	cmp	x21, x8
  44ca38:	b.ge	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.tcont
  44ca3c:	stur	xzr, [x29, #-24]
  44ca40:	ldr	x8, [x22]
  44ca44:	add	x0, sp, #0x68
  44ca48:	sub	x2, x29, #0x18
  44ca4c:	ldr	w1, [x8, x21, lsl #2]
  44ca50:	bl	404af0 <wcrtomb@plt>
  44ca54:	cmn	x0, #0x1
  44ca58:	b.eq	44ca74 <_obstack_memory_used@@Base+0x18b0>  // b.none
  44ca5c:	ldrb	w19, [sp, #104]
  44ca60:	strb	w26, [x20, x19]
  44ca64:	bl	404100 <__ctype_tolower_loc@plt>
  44ca68:	ldr	x8, [x0]
  44ca6c:	ldrsw	x8, [x8, x19, lsl #2]
  44ca70:	strb	w26, [x20, x8]
  44ca74:	ldrb	w8, [x23, #26]
  44ca78:	tbz	w8, #6, 44ca2c <_obstack_memory_used@@Base+0x1868>
  44ca7c:	ldr	w8, [x28, #180]
  44ca80:	cmp	w8, #0x2
  44ca84:	b.lt	44ca2c <_obstack_memory_used@@Base+0x1868>  // b.tstop
  44ca88:	ldr	x8, [x22]
  44ca8c:	ldr	w0, [x8, x21, lsl #2]
  44ca90:	bl	404a60 <towlower@plt>
  44ca94:	mov	w1, w0
  44ca98:	add	x0, sp, #0x68
  44ca9c:	sub	x2, x29, #0x18
  44caa0:	bl	404af0 <wcrtomb@plt>
  44caa4:	cmn	x0, #0x1
  44caa8:	b.eq	44ca2c <_obstack_memory_used@@Base+0x1868>  // b.none
  44caac:	ldrb	w8, [sp, #104]
  44cab0:	strb	w26, [x20, x8]
  44cab4:	b	44ca2c <_obstack_memory_used@@Base+0x1868>
  44cab8:	ldr	q1, [sp, #48]
  44cabc:	mov	x8, xzr
  44cac0:	dup	v0.2d, x19
  44cac4:	mov	w10, #0x2                   	// #2
  44cac8:	b	44cae0 <_obstack_memory_used@@Base+0x191c>
  44cacc:	ldr	q2, [sp, #80]
  44cad0:	add	x8, x8, #0x2
  44cad4:	cmp	x8, #0x40
  44cad8:	add	v1.2d, v1.2d, v2.2d
  44cadc:	b.eq	44cb88 <_obstack_memory_used@@Base+0x19c4>  // b.none
  44cae0:	dup	v2.2d, x26
  44cae4:	ushl	v2.2d, v2.2d, v1.2d
  44cae8:	cmtst	v3.2d, v2.2d, v0.2d
  44caec:	xtn	v3.2s, v3.2d
  44caf0:	and	v2.16b, v2.16b, v0.16b
  44caf4:	fmov	w9, s3
  44caf8:	tbz	w9, #0, 44cb00 <_obstack_memory_used@@Base+0x193c>
  44cafc:	strb	w26, [x20, x8]
  44cb00:	cmeq	v2.2d, v2.2d, #0
  44cb04:	mvn	v2.16b, v2.16b
  44cb08:	xtn	v2.2s, v2.2d
  44cb0c:	mov	w9, v2.s[1]
  44cb10:	tbz	w9, #0, 44cacc <_obstack_memory_used@@Base+0x1908>
  44cb14:	add	x9, x20, x8
  44cb18:	strb	w26, [x9, #1]
  44cb1c:	b	44cacc <_obstack_memory_used@@Base+0x1908>
  44cb20:	ldr	x8, [x28]
  44cb24:	mov	x28, xzr
  44cb28:	str	x22, [sp, #40]
  44cb2c:	ldr	x8, [x8, x22]
  44cb30:	ldr	x23, [x8, #8]
  44cb34:	b	44cb60 <_obstack_memory_used@@Base+0x199c>
  44cb38:	bl	404100 <__ctype_tolower_loc@plt>
  44cb3c:	ldr	x8, [x0]
  44cb40:	ldr	w8, [x8, x27, lsl #2]
  44cb44:	strb	w26, [x20, w8, sxtw]
  44cb48:	add	x28, x28, #0x1
  44cb4c:	add	x27, x27, #0x1
  44cb50:	add	w21, w22, #0x1
  44cb54:	cmp	x28, #0x40
  44cb58:	add	x24, x19, #0x1
  44cb5c:	b.eq	44cbfc <_obstack_memory_used@@Base+0x1a38>  // b.none
  44cb60:	lsr	x8, x23, x28
  44cb64:	mov	w22, w21
  44cb68:	mov	x19, x24
  44cb6c:	tbz	w8, #0, 44cb48 <_obstack_memory_used@@Base+0x1984>
  44cb70:	add	w8, w27, #0x80
  44cb74:	cmp	w8, #0x180
  44cb78:	strb	w26, [x20, x27]
  44cb7c:	b.cc	44cb38 <_obstack_memory_used@@Base+0x1974>  // b.lo, b.ul, b.last
  44cb80:	mov	w8, w27
  44cb84:	b	44cb44 <_obstack_memory_used@@Base+0x1980>
  44cb88:	ldr	x9, [x28]
  44cb8c:	ldr	q1, [sp, #48]
  44cb90:	mov	x8, xzr
  44cb94:	ldr	x9, [x9, x22]
  44cb98:	add	x9, x9, #0x8
  44cb9c:	ld1r	{v0.2d}, [x9]
  44cba0:	b	44cbb8 <_obstack_memory_used@@Base+0x19f4>
  44cba4:	add	x8, x8, #0x2
  44cba8:	dup	v2.2d, x10
  44cbac:	cmp	x8, #0x40
  44cbb0:	add	v1.2d, v1.2d, v2.2d
  44cbb4:	b.eq	44cc64 <_obstack_memory_used@@Base+0x1aa0>  // b.none
  44cbb8:	dup	v2.2d, x26
  44cbbc:	ushl	v2.2d, v2.2d, v1.2d
  44cbc0:	cmtst	v3.2d, v2.2d, v0.2d
  44cbc4:	xtn	v3.2s, v3.2d
  44cbc8:	and	v2.16b, v2.16b, v0.16b
  44cbcc:	fmov	w9, s3
  44cbd0:	tbz	w9, #0, 44cbdc <_obstack_memory_used@@Base+0x1a18>
  44cbd4:	add	x9, x20, x8
  44cbd8:	strb	w26, [x9, #64]
  44cbdc:	cmeq	v2.2d, v2.2d, #0
  44cbe0:	mvn	v2.16b, v2.16b
  44cbe4:	xtn	v2.2s, v2.2d
  44cbe8:	mov	w9, v2.s[1]
  44cbec:	tbz	w9, #0, 44cba4 <_obstack_memory_used@@Base+0x19e0>
  44cbf0:	add	x9, x20, x8
  44cbf4:	strb	w26, [x9, #65]
  44cbf8:	b	44cba4 <_obstack_memory_used@@Base+0x19e0>
  44cbfc:	ldp	x8, x9, [sp, #32]
  44cc00:	mov	x28, xzr
  44cc04:	ldr	x8, [x8]
  44cc08:	ldr	x8, [x8, x9]
  44cc0c:	ldr	x23, [x8, #16]
  44cc10:	b	44cc3c <_obstack_memory_used@@Base+0x1a78>
  44cc14:	bl	404100 <__ctype_tolower_loc@plt>
  44cc18:	ldr	x8, [x0]
  44cc1c:	ldr	w8, [x8, x27, lsl #2]
  44cc20:	strb	w26, [x20, w8, sxtw]
  44cc24:	add	x28, x28, #0x1
  44cc28:	add	x27, x27, #0x1
  44cc2c:	add	w22, w24, #0x1
  44cc30:	cmp	x28, #0x40
  44cc34:	add	x19, x21, #0x1
  44cc38:	b.eq	44ccd8 <_obstack_memory_used@@Base+0x1b14>  // b.none
  44cc3c:	lsr	x8, x23, x28
  44cc40:	mov	w24, w22
  44cc44:	mov	x21, x19
  44cc48:	tbz	w8, #0, 44cc24 <_obstack_memory_used@@Base+0x1a60>
  44cc4c:	add	w8, w27, #0x80
  44cc50:	cmp	w8, #0x180
  44cc54:	strb	w26, [x20, x27]
  44cc58:	b.cc	44cc14 <_obstack_memory_used@@Base+0x1a50>  // b.lo, b.ul, b.last
  44cc5c:	mov	w8, w27
  44cc60:	b	44cc20 <_obstack_memory_used@@Base+0x1a5c>
  44cc64:	ldr	x9, [x28]
  44cc68:	ldr	q1, [sp, #48]
  44cc6c:	mov	x8, xzr
  44cc70:	ldr	x9, [x9, x22]
  44cc74:	add	x9, x9, #0x10
  44cc78:	ld1r	{v0.2d}, [x9]
  44cc7c:	b	44cc94 <_obstack_memory_used@@Base+0x1ad0>
  44cc80:	add	x8, x8, #0x2
  44cc84:	dup	v2.2d, x10
  44cc88:	cmp	x8, #0x40
  44cc8c:	add	v1.2d, v1.2d, v2.2d
  44cc90:	b.eq	44cd38 <_obstack_memory_used@@Base+0x1b74>  // b.none
  44cc94:	dup	v2.2d, x26
  44cc98:	ushl	v2.2d, v2.2d, v1.2d
  44cc9c:	cmtst	v3.2d, v2.2d, v0.2d
  44cca0:	xtn	v3.2s, v3.2d
  44cca4:	and	v2.16b, v2.16b, v0.16b
  44cca8:	fmov	w9, s3
  44ccac:	tbz	w9, #0, 44ccb8 <_obstack_memory_used@@Base+0x1af4>
  44ccb0:	add	x9, x20, x8
  44ccb4:	strb	w26, [x9, #128]
  44ccb8:	cmeq	v2.2d, v2.2d, #0
  44ccbc:	mvn	v2.16b, v2.16b
  44ccc0:	xtn	v2.2s, v2.2d
  44ccc4:	mov	w9, v2.s[1]
  44ccc8:	tbz	w9, #0, 44cc80 <_obstack_memory_used@@Base+0x1abc>
  44cccc:	add	x9, x20, x8
  44ccd0:	strb	w26, [x9, #129]
  44ccd4:	b	44cc80 <_obstack_memory_used@@Base+0x1abc>
  44ccd8:	ldp	x28, x9, [sp, #32]
  44ccdc:	ldr	x23, [sp, #24]
  44cce0:	mov	x22, xzr
  44cce4:	ldr	x8, [x28]
  44cce8:	ldr	x8, [x8, x9]
  44ccec:	ldr	x19, [x8, #24]
  44ccf0:	b	44cd1c <_obstack_memory_used@@Base+0x1b58>
  44ccf4:	bl	404100 <__ctype_tolower_loc@plt>
  44ccf8:	ldr	x8, [x0]
  44ccfc:	ldr	w8, [x8, x27, lsl #2]
  44cd00:	strb	w26, [x20, w8, sxtw]
  44cd04:	add	x22, x22, #0x1
  44cd08:	add	x27, x27, #0x1
  44cd0c:	add	w24, w24, #0x1
  44cd10:	cmp	x22, #0x40
  44cd14:	add	x21, x21, #0x1
  44cd18:	b.eq	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.none
  44cd1c:	lsr	x8, x19, x22
  44cd20:	tbz	w8, #0, 44cd04 <_obstack_memory_used@@Base+0x1b40>
  44cd24:	cmp	w24, #0x180
  44cd28:	strb	w26, [x21]
  44cd2c:	b.cc	44ccf4 <_obstack_memory_used@@Base+0x1b30>  // b.lo, b.ul, b.last
  44cd30:	mov	w8, w27
  44cd34:	b	44cd00 <_obstack_memory_used@@Base+0x1b3c>
  44cd38:	ldr	x9, [x28]
  44cd3c:	ldr	q1, [sp, #48]
  44cd40:	mov	x8, xzr
  44cd44:	ldr	x9, [x9, x22]
  44cd48:	add	x9, x9, #0x18
  44cd4c:	ld1r	{v0.2d}, [x9]
  44cd50:	b	44cd68 <_obstack_memory_used@@Base+0x1ba4>
  44cd54:	add	x8, x8, #0x2
  44cd58:	dup	v2.2d, x10
  44cd5c:	cmp	x8, #0x40
  44cd60:	add	v1.2d, v1.2d, v2.2d
  44cd64:	b.eq	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.none
  44cd68:	dup	v2.2d, x26
  44cd6c:	ushl	v2.2d, v2.2d, v1.2d
  44cd70:	cmtst	v3.2d, v2.2d, v0.2d
  44cd74:	xtn	v3.2s, v3.2d
  44cd78:	and	v2.16b, v2.16b, v0.16b
  44cd7c:	fmov	w9, s3
  44cd80:	tbz	w9, #0, 44cd8c <_obstack_memory_used@@Base+0x1bc8>
  44cd84:	add	x9, x20, x8
  44cd88:	strb	w26, [x9, #192]
  44cd8c:	cmeq	v2.2d, v2.2d, #0
  44cd90:	mvn	v2.16b, v2.16b
  44cd94:	xtn	v2.2s, v2.2d
  44cd98:	mov	w9, v2.s[1]
  44cd9c:	mov	w10, #0x2                   	// #2
  44cda0:	tbz	w9, #0, 44cd54 <_obstack_memory_used@@Base+0x1b90>
  44cda4:	add	x9, x20, x8
  44cda8:	strb	w26, [x9, #193]
  44cdac:	b	44cd54 <_obstack_memory_used@@Base+0x1b90>
  44cdb0:	mov	x19, xzr
  44cdb4:	b	44cdc8 <_obstack_memory_used@@Base+0x1c04>
  44cdb8:	ldr	x8, [x22, #40]
  44cdbc:	add	x19, x19, #0x1
  44cdc0:	cmp	x19, x8
  44cdc4:	b.ge	44c7fc <_obstack_memory_used@@Base+0x1638>  // b.tcont
  44cdc8:	stur	xzr, [x29, #-24]
  44cdcc:	ldr	x8, [x22]
  44cdd0:	add	x0, sp, #0x68
  44cdd4:	sub	x2, x29, #0x18
  44cdd8:	ldr	w1, [x8, x19, lsl #2]
  44cddc:	bl	404af0 <wcrtomb@plt>
  44cde0:	cmn	x0, #0x1
  44cde4:	b.eq	44cdf0 <_obstack_memory_used@@Base+0x1c2c>  // b.none
  44cde8:	ldrb	w8, [sp, #104]
  44cdec:	strb	w26, [x20, x8]
  44cdf0:	ldrb	w8, [x23, #26]
  44cdf4:	tbz	w8, #6, 44cdb8 <_obstack_memory_used@@Base+0x1bf4>
  44cdf8:	ldr	w8, [x28, #180]
  44cdfc:	cmp	w8, #0x2
  44ce00:	b.lt	44cdb8 <_obstack_memory_used@@Base+0x1bf4>  // b.tstop
  44ce04:	ldr	x8, [x22]
  44ce08:	ldr	w0, [x8, x19, lsl #2]
  44ce0c:	bl	404a60 <towlower@plt>
  44ce10:	mov	w1, w0
  44ce14:	add	x0, sp, #0x68
  44ce18:	sub	x2, x29, #0x18
  44ce1c:	bl	404af0 <wcrtomb@plt>
  44ce20:	cmn	x0, #0x1
  44ce24:	b.eq	44cdb8 <_obstack_memory_used@@Base+0x1bf4>  // b.none
  44ce28:	ldrb	w8, [sp, #104]
  44ce2c:	strb	w26, [x20, x8]
  44ce30:	b	44cdb8 <_obstack_memory_used@@Base+0x1bf4>
  44ce34:	movi	v0.16b, #0x1
  44ce38:	cmp	w8, #0x2
  44ce3c:	stp	q0, q0, [x20, #224]
  44ce40:	stp	q0, q0, [x20, #192]
  44ce44:	stp	q0, q0, [x20, #160]
  44ce48:	stp	q0, q0, [x20, #128]
  44ce4c:	stp	q0, q0, [x20, #96]
  44ce50:	stp	q0, q0, [x20, #64]
  44ce54:	stp	q0, q0, [x20, #32]
  44ce58:	stp	q0, q0, [x20]
  44ce5c:	b.ne	44ce6c <_obstack_memory_used@@Base+0x1ca8>  // b.any
  44ce60:	ldrb	w8, [x23, #56]
  44ce64:	orr	w8, w8, #0x1
  44ce68:	strb	w8, [x23, #56]
  44ce6c:	ldp	x20, x19, [sp, #464]
  44ce70:	ldp	x22, x21, [sp, #448]
  44ce74:	ldp	x24, x23, [sp, #432]
  44ce78:	ldp	x26, x25, [sp, #416]
  44ce7c:	ldp	x28, x27, [sp, #400]
  44ce80:	ldp	x29, x30, [sp, #384]
  44ce84:	add	sp, sp, #0x1e0
  44ce88:	ret
  44ce8c:	stp	x29, x30, [sp, #-48]!
  44ce90:	stp	x20, x19, [sp, #32]
  44ce94:	mov	x19, x0
  44ce98:	stp	xzr, xzr, [x0]
  44ce9c:	str	xzr, [x0, #16]
  44cea0:	mov	w0, #0x100                 	// #256
  44cea4:	stp	x22, x21, [sp, #16]
  44cea8:	mov	x29, sp
  44ceac:	mov	w21, w2
  44ceb0:	mov	x20, x1
  44ceb4:	bl	404210 <malloc@plt>
  44ceb8:	str	x0, [x19, #32]
  44cebc:	cbz	x0, 44cf70 <_obstack_memory_used@@Base+0x1dac>
  44cec0:	mov	w8, #0xb2fc                	// #45820
  44cec4:	mov	w9, #0x2c6                 	// #710
  44cec8:	tst	w21, #0x1
  44cecc:	movk	w8, #0x3, lsl #16
  44ced0:	movk	w9, #0x101, lsl #16
  44ced4:	lsl	w10, w21, #21
  44ced8:	csel	x8, x9, x8, eq  // eq = none
  44cedc:	and	w9, w10, #0x400000
  44cee0:	orr	x22, x8, x9
  44cee4:	tbnz	w21, #2, 44cef4 <_obstack_memory_used@@Base+0x1d30>
  44cee8:	ldrb	w8, [x19, #56]
  44ceec:	and	w8, w8, #0x7f
  44cef0:	b	44cf0c <_obstack_memory_used@@Base+0x1d48>
  44cef4:	ldrb	w8, [x19, #56]
  44cef8:	mov	w9, #0xb2be                	// #45758
  44cefc:	movk	w9, #0x143, lsl #16
  44cf00:	and	x9, x22, x9
  44cf04:	orr	x22, x9, #0x100
  44cf08:	orr	w8, w8, #0xffffff80
  44cf0c:	lsl	w9, w21, #1
  44cf10:	strb	w8, [x19, #56]
  44cf14:	and	w8, w8, #0xffffffef
  44cf18:	and	w9, w9, #0x10
  44cf1c:	orr	w8, w8, w9
  44cf20:	mov	x0, x20
  44cf24:	strb	w8, [x19, #56]
  44cf28:	str	xzr, [x19, #40]
  44cf2c:	bl	403f00 <strlen@plt>
  44cf30:	mov	x2, x0
  44cf34:	mov	x0, x19
  44cf38:	mov	x1, x20
  44cf3c:	mov	x3, x22
  44cf40:	bl	44b3d0 <_obstack_memory_used@@Base+0x20c>
  44cf44:	cmp	w0, #0x10
  44cf48:	mov	w8, #0x8                   	// #8
  44cf4c:	csel	w20, w8, w0, eq  // eq = none
  44cf50:	cbnz	w20, 44cf78 <_obstack_memory_used@@Base+0x1db4>
  44cf54:	mov	x0, x19
  44cf58:	bl	44c69c <_obstack_memory_used@@Base+0x14d8>
  44cf5c:	mov	w0, w20
  44cf60:	ldp	x20, x19, [sp, #32]
  44cf64:	ldp	x22, x21, [sp, #16]
  44cf68:	ldp	x29, x30, [sp], #48
  44cf6c:	ret
  44cf70:	mov	w20, #0xc                   	// #12
  44cf74:	b	44cf5c <_obstack_memory_used@@Base+0x1d98>
  44cf78:	ldr	x0, [x19, #32]
  44cf7c:	bl	4046b0 <free@plt>
  44cf80:	str	xzr, [x19, #32]
  44cf84:	b	44cf5c <_obstack_memory_used@@Base+0x1d98>
  44cf88:	stp	x29, x30, [sp, #-48]!
  44cf8c:	cmp	w0, #0x11
  44cf90:	stp	x22, x21, [sp, #16]
  44cf94:	stp	x20, x19, [sp, #32]
  44cf98:	mov	x29, sp
  44cf9c:	b.cs	44d014 <_obstack_memory_used@@Base+0x1e50>  // b.hs, b.nlast
  44cfa0:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44cfa4:	add	x8, x8, #0x5c8
  44cfa8:	ldr	x8, [x8, w0, uxtw #3]
  44cfac:	adrp	x9, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44cfb0:	add	x9, x9, #0x445
  44cfb4:	mov	x19, x2
  44cfb8:	add	x1, x9, x8
  44cfbc:	mov	w2, #0x5                   	// #5
  44cfc0:	mov	x0, xzr
  44cfc4:	mov	x20, x3
  44cfc8:	bl	4048b0 <dcgettext@plt>
  44cfcc:	mov	x21, x0
  44cfd0:	bl	403f00 <strlen@plt>
  44cfd4:	add	x22, x0, #0x1
  44cfd8:	cbz	x20, 44cff4 <_obstack_memory_used@@Base+0x1e30>
  44cfdc:	cmp	x22, x20
  44cfe0:	mov	x2, x22
  44cfe4:	b.hi	44d008 <_obstack_memory_used@@Base+0x1e44>  // b.pmore
  44cfe8:	mov	x0, x19
  44cfec:	mov	x1, x21
  44cff0:	bl	403e80 <memcpy@plt>
  44cff4:	mov	x0, x22
  44cff8:	ldp	x20, x19, [sp, #32]
  44cffc:	ldp	x22, x21, [sp, #16]
  44d000:	ldp	x29, x30, [sp], #48
  44d004:	ret
  44d008:	sub	x2, x20, #0x1
  44d00c:	strb	wzr, [x19, x2]
  44d010:	b	44cfe8 <_obstack_memory_used@@Base+0x1e24>
  44d014:	bl	404560 <abort@plt>
  44d018:	stp	x29, x30, [sp, #-32]!
  44d01c:	str	x19, [sp, #16]
  44d020:	mov	x19, x0
  44d024:	ldr	x0, [x0]
  44d028:	mov	x29, sp
  44d02c:	cbz	x0, 44d034 <_obstack_memory_used@@Base+0x1e70>
  44d030:	bl	44d05c <_obstack_memory_used@@Base+0x1e98>
  44d034:	ldr	x0, [x19, #32]
  44d038:	stp	xzr, xzr, [x19]
  44d03c:	bl	4046b0 <free@plt>
  44d040:	ldr	x0, [x19, #40]
  44d044:	str	xzr, [x19, #32]
  44d048:	bl	4046b0 <free@plt>
  44d04c:	str	xzr, [x19, #40]
  44d050:	ldr	x19, [sp, #16]
  44d054:	ldp	x29, x30, [sp], #32
  44d058:	ret
  44d05c:	stp	x29, x30, [sp, #-64]!
  44d060:	stp	x24, x23, [sp, #16]
  44d064:	stp	x22, x21, [sp, #32]
  44d068:	stp	x20, x19, [sp, #48]
  44d06c:	ldr	x8, [x0]
  44d070:	mov	x19, x0
  44d074:	mov	x29, sp
  44d078:	cbz	x8, 44d100 <_obstack_memory_used@@Base+0x1f3c>
  44d07c:	ldr	x9, [x19, #16]
  44d080:	cbz	x9, 44d100 <_obstack_memory_used@@Base+0x1f3c>
  44d084:	mov	w23, #0xff                  	// #255
  44d088:	mov	x21, xzr
  44d08c:	mov	w22, #0x1                   	// #1
  44d090:	movk	w23, #0x4, lsl #16
  44d094:	add	x9, x8, x21
  44d098:	ldr	w9, [x9, #8]
  44d09c:	and	w9, w9, w23
  44d0a0:	cmp	w9, #0x3
  44d0a4:	b.eq	44d0d8 <_obstack_memory_used@@Base+0x1f14>  // b.none
  44d0a8:	cmp	w9, #0x6
  44d0ac:	b.ne	44d0e4 <_obstack_memory_used@@Base+0x1f20>  // b.any
  44d0b0:	ldr	x20, [x8, x21]
  44d0b4:	ldr	x0, [x20]
  44d0b8:	bl	4046b0 <free@plt>
  44d0bc:	ldr	x0, [x20, #8]
  44d0c0:	bl	4046b0 <free@plt>
  44d0c4:	ldr	x0, [x20, #16]
  44d0c8:	bl	4046b0 <free@plt>
  44d0cc:	ldr	x0, [x20, #24]
  44d0d0:	bl	4046b0 <free@plt>
  44d0d4:	b	44d0dc <_obstack_memory_used@@Base+0x1f18>
  44d0d8:	ldr	x20, [x8, x21]
  44d0dc:	mov	x0, x20
  44d0e0:	bl	4046b0 <free@plt>
  44d0e4:	ldr	x8, [x19, #16]
  44d0e8:	cmp	x22, x8
  44d0ec:	b.cs	44d100 <_obstack_memory_used@@Base+0x1f3c>  // b.hs, b.nlast
  44d0f0:	ldr	x8, [x19]
  44d0f4:	add	x22, x22, #0x1
  44d0f8:	add	x21, x21, #0x10
  44d0fc:	b	44d094 <_obstack_memory_used@@Base+0x1ed0>
  44d100:	ldr	x0, [x19, #24]
  44d104:	bl	4046b0 <free@plt>
  44d108:	ldr	x8, [x19, #16]
  44d10c:	cbz	x8, 44d164 <_obstack_memory_used@@Base+0x1fa0>
  44d110:	mov	x20, xzr
  44d114:	mov	w21, #0x10                  	// #16
  44d118:	b	44d130 <_obstack_memory_used@@Base+0x1f6c>
  44d11c:	ldr	x8, [x19, #16]
  44d120:	add	x20, x20, #0x1
  44d124:	add	x21, x21, #0x18
  44d128:	cmp	x20, x8
  44d12c:	b.cs	44d164 <_obstack_memory_used@@Base+0x1fa0>  // b.hs, b.nlast
  44d130:	ldr	x8, [x19, #48]
  44d134:	cbz	x8, 44d140 <_obstack_memory_used@@Base+0x1f7c>
  44d138:	ldr	x0, [x8, x21]
  44d13c:	bl	4046b0 <free@plt>
  44d140:	ldr	x8, [x19, #56]
  44d144:	cbz	x8, 44d150 <_obstack_memory_used@@Base+0x1f8c>
  44d148:	ldr	x0, [x8, x21]
  44d14c:	bl	4046b0 <free@plt>
  44d150:	ldr	x8, [x19, #40]
  44d154:	cbz	x8, 44d11c <_obstack_memory_used@@Base+0x1f58>
  44d158:	ldr	x0, [x8, x21]
  44d15c:	bl	4046b0 <free@plt>
  44d160:	b	44d11c <_obstack_memory_used@@Base+0x1f58>
  44d164:	ldr	x0, [x19, #40]
  44d168:	bl	4046b0 <free@plt>
  44d16c:	ldr	x0, [x19, #48]
  44d170:	bl	4046b0 <free@plt>
  44d174:	ldr	x0, [x19, #56]
  44d178:	bl	4046b0 <free@plt>
  44d17c:	ldr	x0, [x19]
  44d180:	bl	4046b0 <free@plt>
  44d184:	ldr	x0, [x19, #64]
  44d188:	cbz	x0, 44d1ec <_obstack_memory_used@@Base+0x2028>
  44d18c:	mov	x20, xzr
  44d190:	mov	w21, #0x18                  	// #24
  44d194:	madd	x23, x20, x21, x0
  44d198:	mov	x22, x23
  44d19c:	ldr	x8, [x22], #16
  44d1a0:	cmp	x8, #0x1
  44d1a4:	b.lt	44d1c8 <_obstack_memory_used@@Base+0x2004>  // b.tstop
  44d1a8:	mov	x24, xzr
  44d1ac:	ldr	x8, [x22]
  44d1b0:	ldr	x0, [x8, x24, lsl #3]
  44d1b4:	bl	44ff84 <_obstack_memory_used@@Base+0x4dc0>
  44d1b8:	ldr	x8, [x23]
  44d1bc:	add	x24, x24, #0x1
  44d1c0:	cmp	x24, x8
  44d1c4:	b.lt	44d1ac <_obstack_memory_used@@Base+0x1fe8>  // b.tstop
  44d1c8:	ldr	x0, [x22]
  44d1cc:	bl	4046b0 <free@plt>
  44d1d0:	ldr	x8, [x19, #136]
  44d1d4:	cmp	x20, x8
  44d1d8:	b.cs	44d1e8 <_obstack_memory_used@@Base+0x2024>  // b.hs, b.nlast
  44d1dc:	ldr	x0, [x19, #64]
  44d1e0:	add	x20, x20, #0x1
  44d1e4:	b	44d194 <_obstack_memory_used@@Base+0x1fd0>
  44d1e8:	ldr	x0, [x19, #64]
  44d1ec:	bl	4046b0 <free@plt>
  44d1f0:	ldr	x0, [x19, #120]
  44d1f4:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44d1f8:	add	x8, x8, #0x650
  44d1fc:	cmp	x0, x8
  44d200:	b.eq	44d208 <_obstack_memory_used@@Base+0x2044>  // b.none
  44d204:	bl	4046b0 <free@plt>
  44d208:	ldr	x0, [x19, #224]
  44d20c:	bl	4046b0 <free@plt>
  44d210:	mov	x0, x19
  44d214:	ldp	x20, x19, [sp, #48]
  44d218:	ldp	x22, x21, [sp, #32]
  44d21c:	ldp	x24, x23, [sp, #16]
  44d220:	ldp	x29, x30, [sp], #64
  44d224:	b	4046b0 <free@plt>
  44d228:	cmp	w4, #0x7
  44d22c:	b.ls	44d238 <_obstack_memory_used@@Base+0x2074>  // b.plast
  44d230:	mov	w0, #0x2                   	// #2
  44d234:	ret
  44d238:	sub	sp, sp, #0x50
  44d23c:	str	x23, [sp, #32]
  44d240:	stp	x22, x21, [sp, #48]
  44d244:	stp	x20, x19, [sp, #64]
  44d248:	mov	w22, w4
  44d24c:	mov	x19, x3
  44d250:	mov	x21, x2
  44d254:	mov	x20, x1
  44d258:	mov	x23, x0
  44d25c:	stp	x29, x30, [sp, #16]
  44d260:	add	x29, sp, #0x10
  44d264:	tbnz	w4, #2, 44d2a0 <_obstack_memory_used@@Base+0x20dc>
  44d268:	mov	x0, x20
  44d26c:	bl	403f00 <strlen@plt>
  44d270:	mov	x2, x0
  44d274:	mov	x3, xzr
  44d278:	ldrb	w8, [x23, #56]
  44d27c:	tbz	w8, #4, 44d2ac <_obstack_memory_used@@Base+0x20e8>
  44d280:	str	w22, [sp]
  44d284:	mov	x0, x23
  44d288:	mov	x1, x20
  44d28c:	mov	x4, x2
  44d290:	mov	x5, x2
  44d294:	mov	x6, xzr
  44d298:	mov	x7, xzr
  44d29c:	b	44d2c8 <_obstack_memory_used@@Base+0x2104>
  44d2a0:	ldp	x3, x2, [x19]
  44d2a4:	ldrb	w8, [x23, #56]
  44d2a8:	tbnz	w8, #4, 44d280 <_obstack_memory_used@@Base+0x20bc>
  44d2ac:	mov	x0, x23
  44d2b0:	mov	x1, x20
  44d2b4:	mov	x4, x2
  44d2b8:	mov	x5, x2
  44d2bc:	mov	x6, x21
  44d2c0:	mov	x7, x19
  44d2c4:	str	w22, [sp]
  44d2c8:	bl	44d2ec <_obstack_memory_used@@Base+0x2128>
  44d2cc:	ldp	x20, x19, [sp, #64]
  44d2d0:	ldp	x22, x21, [sp, #48]
  44d2d4:	ldr	x23, [sp, #32]
  44d2d8:	ldp	x29, x30, [sp, #16]
  44d2dc:	cmp	w0, #0x0
  44d2e0:	cset	w0, ne  // ne = any
  44d2e4:	add	sp, sp, #0x50
  44d2e8:	ret
  44d2ec:	stp	x29, x30, [sp, #-96]!
  44d2f0:	stp	x28, x27, [sp, #16]
  44d2f4:	stp	x26, x25, [sp, #32]
  44d2f8:	stp	x24, x23, [sp, #48]
  44d2fc:	stp	x22, x21, [sp, #64]
  44d300:	stp	x20, x19, [sp, #80]
  44d304:	mov	x29, sp
  44d308:	sub	sp, sp, #0x2e0
  44d30c:	ldr	x25, [x0]
  44d310:	movi	v0.2d, #0x0
  44d314:	stp	q0, q0, [sp, #528]
  44d318:	stp	q0, q0, [sp, #496]
  44d31c:	stp	q0, q0, [sp, #464]
  44d320:	stp	q0, q0, [sp, #432]
  44d324:	stp	q0, q0, [sp, #400]
  44d328:	stp	q0, q0, [sp, #368]
  44d32c:	stp	q0, q0, [sp, #336]
  44d330:	stp	q0, q0, [sp, #304]
  44d334:	str	x25, [sp, #456]
  44d338:	ldr	x8, [x0, #32]
  44d33c:	mov	x23, x6
  44d340:	mov	x27, x5
  44d344:	mov	x26, x3
  44d348:	mov	x28, x0
  44d34c:	str	x7, [sp, #160]
  44d350:	cbz	x8, 44d370 <_obstack_memory_used@@Base+0x21ac>
  44d354:	ldrb	w9, [x28, #56]
  44d358:	mov	w10, #0x9                   	// #9
  44d35c:	and	w9, w9, w10
  44d360:	cmp	w9, #0x8
  44d364:	ccmp	x26, x4, #0x4, eq  // eq = none
  44d368:	csel	x22, x8, xzr, ne  // ne = any
  44d36c:	b	44d374 <_obstack_memory_used@@Base+0x21b0>
  44d370:	mov	x22, xzr
  44d374:	ldr	x8, [x28, #48]
  44d378:	ldr	x9, [x28, #16]
  44d37c:	mvn	x10, x8
  44d380:	add	x10, x10, x23
  44d384:	cmp	x8, x23
  44d388:	csel	x24, x10, xzr, cc  // cc = lo, ul, last
  44d38c:	cbz	x9, 44f5ec <_obstack_memory_used@@Base+0x4428>
  44d390:	ldr	x10, [x25, #72]
  44d394:	cbz	x10, 44f5ec <_obstack_memory_used@@Base+0x4428>
  44d398:	ldr	x9, [x25, #80]
  44d39c:	cbz	x9, 44f5ec <_obstack_memory_used@@Base+0x4428>
  44d3a0:	ldr	x8, [x25, #88]
  44d3a4:	cbz	x8, 44f5ec <_obstack_memory_used@@Base+0x4428>
  44d3a8:	ldr	x11, [x25, #96]
  44d3ac:	cbz	x11, 44f5ec <_obstack_memory_used@@Base+0x4428>
  44d3b0:	ldr	x10, [x10, #16]
  44d3b4:	ldr	x13, [x28, #40]
  44d3b8:	cbnz	x10, 44d3c4 <_obstack_memory_used@@Base+0x2200>
  44d3bc:	ldr	x9, [x9, #16]
  44d3c0:	cbz	x9, 44f5cc <_obstack_memory_used@@Base+0x4408>
  44d3c4:	mov	x21, x4
  44d3c8:	sub	x8, x23, x24
  44d3cc:	str	x8, [sp, #224]
  44d3d0:	cbz	x8, 44d3dc <_obstack_memory_used@@Base+0x2218>
  44d3d4:	mov	w8, #0x1                   	// #1
  44d3d8:	b	44d3e8 <_obstack_memory_used@@Base+0x2224>
  44d3dc:	ldr	x8, [x25, #152]
  44d3e0:	cmp	x8, #0x0
  44d3e4:	cset	w8, ne  // ne = any
  44d3e8:	str	w8, [sp, #196]
  44d3ec:	ldr	x8, [x25, #16]
  44d3f0:	ldrsw	x10, [x25, #180]
  44d3f4:	ldr	x9, [x28, #24]
  44d3f8:	add	x11, x2, #0x1
  44d3fc:	add	x12, x8, #0x1
  44d400:	cmp	x12, x10
  44d404:	and	x12, x9, #0x400000
  44d408:	ubfx	x9, x9, #22, #1
  44d40c:	csinc	x8, x10, x8, lt  // lt = tstop
  44d410:	strb	w9, [sp, #440]
  44d414:	orr	x9, x13, x12
  44d418:	cmp	x11, x8
  44d41c:	csinc	x19, x8, x2, ge  // ge = tcont
  44d420:	cmp	x9, #0x0
  44d424:	cset	w20, ne  // ne = any
  44d428:	str	x1, [sp, #304]
  44d42c:	stp	x2, x2, [sp, #384]
  44d430:	str	x13, [sp, #424]
  44d434:	str	w10, [sp, #448]
  44d438:	strb	w20, [sp, #443]
  44d43c:	ldrb	w8, [x25, #176]
  44d440:	cmp	w10, #0x2
  44d444:	stp	x2, x2, [sp, #400]
  44d448:	str	x2, [sp, #288]
  44d44c:	ubfx	w9, w8, #2, #1
  44d450:	ubfx	w8, w8, #3, #1
  44d454:	strb	w9, [sp, #441]
  44d458:	strb	w8, [sp, #442]
  44d45c:	str	x1, [sp, #248]
  44d460:	str	x13, [sp, #232]
  44d464:	b.lt	44d484 <_obstack_memory_used@@Base+0x22c0>  // b.tstop
  44d468:	lsr	x8, x19, #61
  44d46c:	cbnz	x8, 44f830 <_obstack_memory_used@@Base+0x466c>
  44d470:	lsl	x0, x19, #2
  44d474:	bl	404210 <malloc@plt>
  44d478:	cbz	x0, 44f830 <_obstack_memory_used@@Base+0x466c>
  44d47c:	ldr	x1, [sp, #248]
  44d480:	str	x0, [sp, #320]
  44d484:	cbz	w20, 44d4a4 <_obstack_memory_used@@Base+0x22e0>
  44d488:	mov	x0, x19
  44d48c:	bl	404210 <malloc@plt>
  44d490:	cbz	x0, 44f830 <_obstack_memory_used@@Base+0x466c>
  44d494:	ldr	x1, [sp, #248]
  44d498:	mov	w8, wzr
  44d49c:	str	x0, [sp, #312]
  44d4a0:	b	44d4a8 <_obstack_memory_used@@Base+0x22e4>
  44d4a4:	mov	w8, #0x1                   	// #1
  44d4a8:	add	x9, x25, #0xb8
  44d4ac:	str	x19, [sp, #368]
  44d4b0:	str	x9, [sp, #432]
  44d4b4:	ldrb	w9, [x25, #176]
  44d4b8:	ldr	w10, [x29, #96]
  44d4bc:	ldr	x20, [sp, #288]
  44d4c0:	stp	x23, x24, [sp, #144]
  44d4c4:	ubfx	w9, w9, #4, #1
  44d4c8:	str	w10, [sp, #284]
  44d4cc:	strb	w9, [sp, #446]
  44d4d0:	cbz	w8, 44d4e8 <_obstack_memory_used@@Base+0x2324>
  44d4d4:	str	x1, [sp, #312]
  44d4d8:	ldr	w8, [x25, #180]
  44d4dc:	cmp	w8, #0x1
  44d4e0:	csel	x8, xzr, x20, gt
  44d4e4:	b	44d4ec <_obstack_memory_used@@Base+0x2328>
  44d4e8:	mov	x8, xzr
  44d4ec:	stp	x8, x8, [sp, #352]
  44d4f0:	stp	x27, x27, [sp, #400]
  44d4f4:	ldrb	w8, [x28, #56]
  44d4f8:	ldr	w9, [sp, #284]
  44d4fc:	str	x28, [sp, #168]
  44d500:	lsr	w8, w8, #7
  44d504:	strb	w8, [sp, #445]
  44d508:	ldr	x24, [x25, #152]
  44d50c:	mov	x8, #0xffffffffffffffff    	// #-1
  44d510:	str	w9, [sp, #464]
  44d514:	str	x8, [sp, #472]
  44d518:	lsl	x23, x24, #1
  44d51c:	cmp	x24, #0x1
  44d520:	b.lt	44d564 <_obstack_memory_used@@Base+0x23a0>  // b.tstop
  44d524:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  44d528:	movk	x8, #0x666, lsl #48
  44d52c:	cmp	x23, x8
  44d530:	b.hi	44f830 <_obstack_memory_used@@Base+0x466c>  // b.pmore
  44d534:	add	x8, x24, x24, lsl #2
  44d538:	lsl	x0, x8, #4
  44d53c:	bl	404210 <malloc@plt>
  44d540:	mov	x20, x0
  44d544:	str	x0, [sp, #520]
  44d548:	lsl	x0, x24, #4
  44d54c:	bl	404210 <malloc@plt>
  44d550:	mov	w28, #0xc                   	// #12
  44d554:	str	x0, [sp, #552]
  44d558:	cbz	x20, 44f560 <_obstack_memory_used@@Base+0x439c>
  44d55c:	ldr	x20, [sp, #288]
  44d560:	cbz	x0, 44f560 <_obstack_memory_used@@Base+0x439c>
  44d564:	ldr	x9, [sp, #224]
  44d568:	mov	w8, #0x1                   	// #1
  44d56c:	str	x23, [sp, #512]
  44d570:	str	w8, [sp, #528]
  44d574:	cmp	x9, #0x1
  44d578:	str	x23, [sp, #544]
  44d57c:	b.hi	44d590 <_obstack_memory_used@@Base+0x23cc>  // b.pmore
  44d580:	ldrb	w8, [x25, #176]
  44d584:	tbnz	w8, #1, 44d590 <_obstack_memory_used@@Base+0x23cc>
  44d588:	str	xzr, [sp, #488]
  44d58c:	b	44d5b0 <_obstack_memory_used@@Base+0x23ec>
  44d590:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  44d594:	cmp	x19, x8
  44d598:	b.hi	44f830 <_obstack_memory_used@@Base+0x466c>  // b.pmore
  44d59c:	lsl	x8, x19, #3
  44d5a0:	add	x0, x8, #0x8
  44d5a4:	bl	404210 <malloc@plt>
  44d5a8:	str	x0, [sp, #488]
  44d5ac:	cbz	x0, 44f830 <_obstack_memory_used@@Base+0x466c>
  44d5b0:	ldr	w9, [sp, #284]
  44d5b4:	mov	w10, #0x6                   	// #6
  44d5b8:	stur	x26, [x29, #-176]
  44d5bc:	add	x8, sp, #0x130
  44d5c0:	tst	w9, #0x1
  44d5c4:	mov	w9, #0x4                   	// #4
  44d5c8:	csel	w9, w10, w9, eq  // eq = none
  44d5cc:	str	w9, [sp, #416]
  44d5d0:	ldr	w10, [x25, #180]
  44d5d4:	cmp	x21, x26
  44d5d8:	csel	x19, x21, x26, lt  // lt = tstop
  44d5dc:	csel	x23, x26, x21, lt  // lt = tstop
  44d5e0:	str	w10, [sp, #244]
  44d5e4:	cbz	x22, 44d5fc <_obstack_memory_used@@Base+0x2438>
  44d5e8:	cmp	w10, #0x1
  44d5ec:	b.ne	44d604 <_obstack_memory_used@@Base+0x2440>  // b.any
  44d5f0:	ldr	x11, [sp, #232]
  44d5f4:	mov	w9, #0x4                   	// #4
  44d5f8:	b	44d624 <_obstack_memory_used@@Base+0x2460>
  44d5fc:	mov	w9, #0x8                   	// #8
  44d600:	b	44d63c <_obstack_memory_used@@Base+0x2478>
  44d604:	ldr	x9, [sp, #168]
  44d608:	ldr	x11, [sp, #232]
  44d60c:	ldr	x9, [x9, #24]
  44d610:	and	x9, x9, #0x400000
  44d614:	orr	x9, x11, x9
  44d618:	cmp	x9, #0x0
  44d61c:	cset	w9, eq  // eq = none
  44d620:	lsl	w9, w9, #2
  44d624:	cmp	x21, x26
  44d628:	cset	w10, ge  // ge = tcont
  44d62c:	cmp	x11, #0x0
  44d630:	cset	w11, ne  // ne = any
  44d634:	bfi	w11, w10, #1, #1
  44d638:	orr	w9, w11, w9
  44d63c:	add	x8, x8, #0x38
  44d640:	str	x8, [sp, #136]
  44d644:	add	x8, sp, #0x130
  44d648:	cmp	x21, x26
  44d64c:	sub	x10, x29, #0xb0
  44d650:	add	x8, x8, #0xc0
  44d654:	mov	x11, #0xffffffffffffffff    	// #-1
  44d658:	str	x8, [sp, #216]
  44d65c:	csel	x8, xzr, x10, lt  // lt = tstop
  44d660:	sub	x12, x29, #0x40
  44d664:	sub	w21, w9, #0x4
  44d668:	cneg	x9, x11, ge  // ge = tcont
  44d66c:	cmp	x8, #0x0
  44d670:	str	x9, [sp, #296]
  44d674:	add	x9, x12, #0x20
  44d678:	str	x8, [sp, #200]
  44d67c:	cset	w8, ne  // ne = any
  44d680:	str	x9, [sp, #176]
  44d684:	str	w8, [sp, #212]
  44d688:	stp	x23, x21, [sp, #264]
  44d68c:	str	x19, [sp, #256]
  44d690:	cmp	w21, #0x4
  44d694:	b.hi	44d820 <_obstack_memory_used@@Base+0x265c>  // b.pmore
  44d698:	adrp	x10, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44d69c:	add	x10, x10, #0x30a
  44d6a0:	adr	x8, 44d6b0 <_obstack_memory_used@@Base+0x24ec>
  44d6a4:	ldrb	w9, [x10, x21]
  44d6a8:	add	x8, x8, x9, lsl #2
  44d6ac:	br	x8
  44d6b0:	cmp	x26, x19
  44d6b4:	b.lt	44f55c <_obstack_memory_used@@Base+0x4398>  // b.tstop
  44d6b8:	ldr	x10, [sp, #232]
  44d6bc:	cbz	x10, 44d8a8 <_obstack_memory_used@@Base+0x26e4>
  44d6c0:	ldr	x9, [sp, #248]
  44d6c4:	b	44d6e8 <_obstack_memory_used@@Base+0x2524>
  44d6c8:	mov	x8, xzr
  44d6cc:	ldrb	w8, [x10, x8]
  44d6d0:	ldrb	w8, [x22, x8]
  44d6d4:	cbnz	w8, 44d768 <_obstack_memory_used@@Base+0x25a4>
  44d6d8:	cmp	x26, x19
  44d6dc:	sub	x26, x26, #0x1
  44d6e0:	stur	x26, [x29, #-176]
  44d6e4:	b.le	44f55c <_obstack_memory_used@@Base+0x4398>
  44d6e8:	cmp	x26, x20
  44d6ec:	b.ge	44d6c8 <_obstack_memory_used@@Base+0x2504>  // b.tcont
  44d6f0:	ldrb	w8, [x9, x26]
  44d6f4:	ldrb	w8, [x10, x8]
  44d6f8:	ldrb	w8, [x22, x8]
  44d6fc:	cbz	w8, 44d6d8 <_obstack_memory_used@@Base+0x2514>
  44d700:	b	44d768 <_obstack_memory_used@@Base+0x25a4>
  44d704:	cmp	x26, x23
  44d708:	b.ge	44d760 <_obstack_memory_used@@Base+0x259c>  // b.tcont
  44d70c:	ldr	x9, [sp, #248]
  44d710:	ldr	x10, [sp, #232]
  44d714:	ldrb	w8, [x9, x26]
  44d718:	ldrb	w8, [x10, x8]
  44d71c:	ldrb	w8, [x22, x8]
  44d720:	cbnz	w8, 44d760 <_obstack_memory_used@@Base+0x259c>
  44d724:	add	x26, x26, #0x1
  44d728:	cmp	x26, x23
  44d72c:	stur	x26, [x29, #-176]
  44d730:	b.lt	44d714 <_obstack_memory_used@@Base+0x2550>  // b.tstop
  44d734:	b	44d760 <_obstack_memory_used@@Base+0x259c>
  44d738:	ldr	x9, [sp, #248]
  44d73c:	cmp	x26, x23
  44d740:	b.ge	44d760 <_obstack_memory_used@@Base+0x259c>  // b.tcont
  44d744:	ldrb	w8, [x9, x26]
  44d748:	ldrb	w8, [x22, x8]
  44d74c:	cbnz	w8, 44d760 <_obstack_memory_used@@Base+0x259c>
  44d750:	add	x26, x26, #0x1
  44d754:	cmp	x26, x23
  44d758:	stur	x26, [x29, #-176]
  44d75c:	b.lt	44d744 <_obstack_memory_used@@Base+0x2580>  // b.tstop
  44d760:	cmp	x26, x23
  44d764:	b.eq	44d97c <_obstack_memory_used@@Base+0x27b8>  // b.none
  44d768:	ldr	w2, [sp, #284]
  44d76c:	add	x0, sp, #0x130
  44d770:	mov	x1, x26
  44d774:	bl	455f68 <_obstack_memory_used@@Base+0xada4>
  44d778:	cbnz	w0, 44f81c <_obstack_memory_used@@Base+0x4658>
  44d77c:	ldr	w8, [sp, #244]
  44d780:	cmp	w8, #0x1
  44d784:	b.eq	44d7a0 <_obstack_memory_used@@Base+0x25dc>  // b.none
  44d788:	ldr	x8, [sp, #352]
  44d78c:	cbz	x8, 44d7a0 <_obstack_memory_used@@Base+0x25dc>
  44d790:	ldr	x8, [sp, #320]
  44d794:	ldr	w8, [x8]
  44d798:	cmn	w8, #0x1
  44d79c:	b.eq	44f420 <_obstack_memory_used@@Base+0x425c>  // b.none
  44d7a0:	ldr	x8, [sp, #216]
  44d7a4:	str	wzr, [sp, #528]
  44d7a8:	stur	wzr, [x29, #-164]
  44d7ac:	stp	xzr, xzr, [x8]
  44d7b0:	ldr	x19, [sp, #456]
  44d7b4:	ldr	x11, [sp, #376]
  44d7b8:	ldr	x28, [x19, #72]
  44d7bc:	ldrsb	w8, [x28, #104]
  44d7c0:	tbnz	w8, #31, 44d7cc <_obstack_memory_used@@Base+0x2608>
  44d7c4:	ldr	w26, [sp, #212]
  44d7c8:	b	44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d7cc:	cmp	x11, #0x0
  44d7d0:	b.le	44d990 <_obstack_memory_used@@Base+0x27cc>
  44d7d4:	ldr	x9, [sp, #392]
  44d7d8:	ldr	w26, [sp, #212]
  44d7dc:	sub	x8, x11, #0x1
  44d7e0:	cmp	x9, x8
  44d7e4:	b.eq	44d99c <_obstack_memory_used@@Base+0x27d8>  // b.none
  44d7e8:	ldr	w9, [sp, #448]
  44d7ec:	cmp	w9, #0x2
  44d7f0:	b.lt	44d8e4 <_obstack_memory_used@@Base+0x2720>  // b.tstop
  44d7f4:	ldr	x8, [sp, #320]
  44d7f8:	mov	x9, x11
  44d7fc:	sub	x8, x8, #0x4
  44d800:	ldr	w20, [x8, x9, lsl #2]
  44d804:	cmn	w20, #0x1
  44d808:	b.ne	44d910 <_obstack_memory_used@@Base+0x274c>  // b.any
  44d80c:	sub	x9, x9, #0x1
  44d810:	cmp	x9, #0x0
  44d814:	b.gt	44d800 <_obstack_memory_used@@Base+0x263c>
  44d818:	ldr	w3, [sp, #416]
  44d81c:	b	44d930 <_obstack_memory_used@@Base+0x276c>
  44d820:	ldr	x8, [sp, #344]
  44d824:	ldr	x10, [sp, #360]
  44d828:	sub	x9, x26, x8
  44d82c:	cmp	x9, x10
  44d830:	b.cs	44d850 <_obstack_memory_used@@Base+0x268c>  // b.hs, b.nlast
  44d834:	cmp	x26, x20
  44d838:	b.ge	44d878 <_obstack_memory_used@@Base+0x26b4>  // b.tcont
  44d83c:	ldr	x10, [sp, #312]
  44d840:	ldrb	w9, [x10, x9]
  44d844:	ldrb	w9, [x22, x9]
  44d848:	cbz	w9, 44d884 <_obstack_memory_used@@Base+0x26c0>
  44d84c:	b	44d768 <_obstack_memory_used@@Base+0x25a4>
  44d850:	ldr	w2, [sp, #284]
  44d854:	add	x0, sp, #0x130
  44d858:	mov	x1, x26
  44d85c:	bl	455f68 <_obstack_memory_used@@Base+0xada4>
  44d860:	cbnz	w0, 44f81c <_obstack_memory_used@@Base+0x4658>
  44d864:	ldur	x26, [x29, #-176]
  44d868:	ldr	x8, [sp, #344]
  44d86c:	sub	x9, x26, x8
  44d870:	cmp	x26, x20
  44d874:	b.lt	44d83c <_obstack_memory_used@@Base+0x2678>  // b.tstop
  44d878:	mov	x9, xzr
  44d87c:	ldrb	w9, [x22, x9]
  44d880:	cbnz	w9, 44d768 <_obstack_memory_used@@Base+0x25a4>
  44d884:	ldr	x9, [sp, #296]
  44d888:	mov	w28, #0x1                   	// #1
  44d88c:	add	x26, x26, x9
  44d890:	cmp	x26, x19
  44d894:	stur	x26, [x29, #-176]
  44d898:	b.lt	44f560 <_obstack_memory_used@@Base+0x439c>  // b.tstop
  44d89c:	cmp	x26, x23
  44d8a0:	b.le	44d824 <_obstack_memory_used@@Base+0x2660>
  44d8a4:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44d8a8:	ldr	x9, [sp, #248]
  44d8ac:	b	44d8cc <_obstack_memory_used@@Base+0x2708>
  44d8b0:	mov	x8, xzr
  44d8b4:	ldrb	w8, [x22, x8]
  44d8b8:	cbnz	w8, 44d768 <_obstack_memory_used@@Base+0x25a4>
  44d8bc:	cmp	x26, x19
  44d8c0:	sub	x26, x26, #0x1
  44d8c4:	stur	x26, [x29, #-176]
  44d8c8:	b.le	44f55c <_obstack_memory_used@@Base+0x4398>
  44d8cc:	cmp	x26, x20
  44d8d0:	b.ge	44d8b0 <_obstack_memory_used@@Base+0x26ec>  // b.tcont
  44d8d4:	ldrb	w8, [x9, x26]
  44d8d8:	ldrb	w8, [x22, x8]
  44d8dc:	cbz	w8, 44d8bc <_obstack_memory_used@@Base+0x26f8>
  44d8e0:	b	44d768 <_obstack_memory_used@@Base+0x25a4>
  44d8e4:	ldr	x9, [sp, #312]
  44d8e8:	ldr	x10, [sp, #432]
  44d8ec:	ldrb	w8, [x9, x8]
  44d8f0:	lsr	x9, x8, #3
  44d8f4:	and	x9, x9, #0x18
  44d8f8:	ldr	x9, [x10, x9]
  44d8fc:	lsr	x9, x9, x8
  44d900:	tbnz	w9, #0, 44d9ec <_obstack_memory_used@@Base+0x2828>
  44d904:	cmp	w8, #0xa
  44d908:	b.eq	44d920 <_obstack_memory_used@@Base+0x275c>  // b.none
  44d90c:	b	44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d910:	ldrb	w8, [sp, #446]
  44d914:	cbnz	w8, 44d9d0 <_obstack_memory_used@@Base+0x280c>
  44d918:	cmp	w20, #0xa
  44d91c:	b.ne	44d9f0 <_obstack_memory_used@@Base+0x282c>  // b.any
  44d920:	ldrb	w8, [sp, #445]
  44d924:	cmp	w8, #0x0
  44d928:	cset	w8, ne  // ne = any
  44d92c:	lsl	w3, w8, #1
  44d930:	tbnz	w3, #0, 44d9ec <_obstack_memory_used@@Base+0x2828>
  44d934:	cbz	w3, 44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d938:	tbz	w3, #1, 44d948 <_obstack_memory_used@@Base+0x2784>
  44d93c:	tbz	w3, #2, 44d948 <_obstack_memory_used@@Base+0x2784>
  44d940:	ldr	x28, [x19, #96]
  44d944:	b	44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d948:	tbnz	w3, #1, 44d974 <_obstack_memory_used@@Base+0x27b0>
  44d94c:	ldr	x28, [x19, #72]
  44d950:	tbz	w3, #2, 44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d954:	ldr	x2, [x28, #80]
  44d958:	sub	x0, x29, #0xa4
  44d95c:	mov	x1, x19
  44d960:	mov	x20, x11
  44d964:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44d968:	mov	x11, x20
  44d96c:	mov	x28, x0
  44d970:	b	44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d974:	ldr	x28, [x19, #88]
  44d978:	b	44d9f0 <_obstack_memory_used@@Base+0x282c>
  44d97c:	cmp	x23, x20
  44d980:	b.ge	44d9b0 <_obstack_memory_used@@Base+0x27ec>  // b.tcont
  44d984:	ldr	x8, [sp, #248]
  44d988:	ldrb	w8, [x8, x23]
  44d98c:	b	44d9b4 <_obstack_memory_used@@Base+0x27f0>
  44d990:	ldr	w3, [sp, #416]
  44d994:	ldr	w26, [sp, #212]
  44d998:	b	44d930 <_obstack_memory_used@@Base+0x276c>
  44d99c:	ldr	w8, [sp, #464]
  44d9a0:	mov	w9, #0xa                   	// #10
  44d9a4:	and	w8, w8, #0x2
  44d9a8:	eor	w3, w8, w9
  44d9ac:	b	44d930 <_obstack_memory_used@@Base+0x276c>
  44d9b0:	mov	w8, wzr
  44d9b4:	ldr	x9, [sp, #232]
  44d9b8:	cbz	x9, 44d9c0 <_obstack_memory_used@@Base+0x27fc>
  44d9bc:	ldrb	w8, [x9, w8, uxtw]
  44d9c0:	ldrb	w8, [x22, w8, uxtw]
  44d9c4:	mov	x26, x23
  44d9c8:	cbnz	w8, 44d768 <_obstack_memory_used@@Base+0x25a4>
  44d9cc:	b	44f55c <_obstack_memory_used@@Base+0x4398>
  44d9d0:	mov	w0, w20
  44d9d4:	mov	x24, x11
  44d9d8:	bl	404880 <iswalnum@plt>
  44d9dc:	mov	x11, x24
  44d9e0:	cmp	w20, #0x5f
  44d9e4:	b.eq	44d9ec <_obstack_memory_used@@Base+0x2828>  // b.none
  44d9e8:	cbz	w0, 44d918 <_obstack_memory_used@@Base+0x2754>
  44d9ec:	ldr	x28, [x19, #80]
  44d9f0:	cbz	x28, 44f824 <_obstack_memory_used@@Base+0x4660>
  44d9f4:	ldr	x8, [sp, #488]
  44d9f8:	mov	w20, w26
  44d9fc:	cbz	x8, 44da10 <_obstack_memory_used@@Base+0x284c>
  44da00:	str	x28, [x8, x11, lsl #3]
  44da04:	ldr	x8, [x19, #152]
  44da08:	mov	w20, w26
  44da0c:	cbnz	x8, 44f160 <_obstack_memory_used@@Base+0x3f9c>
  44da10:	ldrsb	w26, [x28, #104]
  44da14:	tbnz	w26, #4, 44f144 <_obstack_memory_used@@Base+0x3f80>
  44da18:	mov	x10, xzr
  44da1c:	mov	x27, #0xffffffffffffffff    	// #-1
  44da20:	ldr	x8, [sp, #408]
  44da24:	ldr	x19, [sp, #376]
  44da28:	cmp	x8, x19
  44da2c:	b.le	44f0a0 <_obstack_memory_used@@Base+0x3edc>
  44da30:	ldr	x24, [sp, #200]
  44da34:	str	x10, [sp, #184]
  44da38:	ldr	x9, [sp, #368]
  44da3c:	ldr	x8, [sp, #392]
  44da40:	add	x21, x19, #0x1
  44da44:	mov	x23, x28
  44da48:	cmp	x21, x9
  44da4c:	b.lt	44da58 <_obstack_memory_used@@Base+0x2894>  // b.tstop
  44da50:	cmp	x9, x8
  44da54:	b.lt	44eac4 <_obstack_memory_used@@Base+0x3900>  // b.tstop
  44da58:	ldr	x9, [sp, #352]
  44da5c:	cmp	x21, x9
  44da60:	b.lt	44da6c <_obstack_memory_used@@Base+0x28a8>  // b.tstop
  44da64:	cmp	x9, x8
  44da68:	b.lt	44eac4 <_obstack_memory_used@@Base+0x3900>  // b.tstop
  44da6c:	tbnz	w26, #5, 44eaf4 <_obstack_memory_used@@Base+0x3930>
  44da70:	ldr	x8, [sp, #376]
  44da74:	ldr	x9, [sp, #312]
  44da78:	mov	x19, x23
  44da7c:	add	x10, x8, #0x1
  44da80:	str	x10, [sp, #376]
  44da84:	ldrb	w28, [x9, x8]
  44da88:	ldr	x0, [x19, #88]!
  44da8c:	cbz	x0, 44dbf0 <_obstack_memory_used@@Base+0x2a2c>
  44da90:	ldr	x28, [x0, x28, lsl #3]
  44da94:	ldr	x8, [sp, #488]
  44da98:	cbz	x8, 44dab8 <_obstack_memory_used@@Base+0x28f4>
  44da9c:	sub	x0, x29, #0xa4
  44daa0:	add	x1, sp, #0x130
  44daa4:	mov	x2, x28
  44daa8:	mov	x19, x11
  44daac:	bl	458304 <_obstack_memory_used@@Base+0xd140>
  44dab0:	mov	x11, x19
  44dab4:	mov	x28, x0
  44dab8:	cbz	x28, 44dae0 <_obstack_memory_used@@Base+0x291c>
  44dabc:	ldrsb	w26, [x28, #104]
  44dac0:	cmp	x23, x28
  44dac4:	cset	w23, eq  // eq = none
  44dac8:	tst	w20, w23
  44dacc:	csel	x11, x21, x11, ne  // ne = any
  44dad0:	tbnz	w26, #4, 44db64 <_obstack_memory_used@@Base+0x29a0>
  44dad4:	ldr	x19, [sp, #376]
  44dad8:	ldr	x21, [sp, #272]
  44dadc:	b	44dbc8 <_obstack_memory_used@@Base+0x2a04>
  44dae0:	ldur	w8, [x29, #-164]
  44dae4:	cbnz	w8, 44f830 <_obstack_memory_used@@Base+0x466c>
  44dae8:	ldr	x8, [sp, #184]
  44daec:	ldr	w9, [sp, #196]
  44daf0:	cmp	x8, #0x0
  44daf4:	cset	w8, ne  // ne = any
  44daf8:	bic	w8, w8, w9
  44dafc:	tbnz	w8, #0, 44f134 <_obstack_memory_used@@Base+0x3f70>
  44db00:	mov	x26, x23
  44db04:	ldr	x10, [sp, #488]
  44db08:	ldr	x23, [sp, #264]
  44db0c:	cbz	x10, 44f13c <_obstack_memory_used@@Base+0x3f78>
  44db10:	mov	x19, x11
  44db14:	ldr	x8, [sp, #496]
  44db18:	ldr	x9, [sp, #376]
  44db1c:	add	x10, x10, #0x8
  44db20:	cmp	x9, x8
  44db24:	b.ge	44f0a8 <_obstack_memory_used@@Base+0x3ee4>  // b.tcont
  44db28:	add	x11, x9, #0x1
  44db2c:	str	x11, [sp, #376]
  44db30:	ldr	x12, [x10, x9, lsl #3]
  44db34:	mov	x9, x11
  44db38:	cbz	x12, 44db20 <_obstack_memory_used@@Base+0x295c>
  44db3c:	sub	x0, x29, #0xa4
  44db40:	add	x1, sp, #0x130
  44db44:	mov	x2, xzr
  44db48:	bl	458304 <_obstack_memory_used@@Base+0xd140>
  44db4c:	mov	x28, x0
  44db50:	cbnz	x0, 44dbe0 <_obstack_memory_used@@Base+0x2a1c>
  44db54:	ldur	w8, [x29, #-164]
  44db58:	cbnz	w8, 44dbe0 <_obstack_memory_used@@Base+0x2a1c>
  44db5c:	ldr	x10, [sp, #488]
  44db60:	b	44db14 <_obstack_memory_used@@Base+0x2950>
  44db64:	ldr	x19, [sp, #376]
  44db68:	ldr	x21, [sp, #272]
  44db6c:	tbz	w26, #31, 44dbb0 <_obstack_memory_used@@Base+0x29ec>
  44db70:	add	x0, sp, #0x130
  44db74:	mov	x1, x28
  44db78:	mov	x2, x19
  44db7c:	mov	x21, x22
  44db80:	mov	x22, x25
  44db84:	mov	w25, w20
  44db88:	mov	x20, x24
  44db8c:	mov	x24, x11
  44db90:	bl	4568dc <_obstack_memory_used@@Base+0xb718>
  44db94:	mov	x11, x24
  44db98:	mov	x24, x20
  44db9c:	mov	w20, w25
  44dba0:	mov	x25, x22
  44dba4:	mov	x22, x21
  44dba8:	ldr	x21, [sp, #272]
  44dbac:	cbz	x0, 44dbc8 <_obstack_memory_used@@Base+0x2a04>
  44dbb0:	ldr	w8, [sp, #196]
  44dbb4:	cbz	w8, 44f124 <_obstack_memory_used@@Base+0x3f60>
  44dbb8:	mov	x24, xzr
  44dbbc:	mov	x27, x19
  44dbc0:	mov	w8, #0x1                   	// #1
  44dbc4:	str	x8, [sp, #184]
  44dbc8:	ldr	x8, [sp, #408]
  44dbcc:	and	w20, w20, w23
  44dbd0:	ldr	x23, [sp, #264]
  44dbd4:	cmp	x8, x19
  44dbd8:	b.gt	44da38 <_obstack_memory_used@@Base+0x2874>
  44dbdc:	b	44f0b0 <_obstack_memory_used@@Base+0x3eec>
  44dbe0:	mov	x11, x19
  44dbe4:	mov	x23, x26
  44dbe8:	cbnz	x28, 44dabc <_obstack_memory_used@@Base+0x28f8>
  44dbec:	b	44f134 <_obstack_memory_used@@Base+0x3f70>
  44dbf0:	ldr	x26, [x23, #96]
  44dbf4:	cbnz	x26, 44eefc <_obstack_memory_used@@Base+0x3d38>
  44dbf8:	ldr	x8, [sp, #456]
  44dbfc:	mov	w0, #0x3800                	// #14336
  44dc00:	str	x23, [sp, #96]
  44dc04:	stp	x22, x24, [sp, #8]
  44dc08:	str	w20, [sp, #4]
  44dc0c:	str	x11, [sp, #112]
  44dc10:	str	x25, [sp, #128]
  44dc14:	str	x8, [sp, #80]
  44dc18:	bl	404210 <malloc@plt>
  44dc1c:	str	x0, [sp, #56]
  44dc20:	cbz	x0, 44f060 <_obstack_memory_used@@Base+0x3e9c>
  44dc24:	stp	xzr, xzr, [x19]
  44dc28:	ldr	x8, [sp, #96]
  44dc2c:	movi	v0.2d, #0x0
  44dc30:	stp	q0, q0, [x29, #-64]
  44dc34:	ldr	x8, [x8, #16]
  44dc38:	cmp	x8, #0x1
  44dc3c:	b.lt	44e720 <_obstack_memory_used@@Base+0x355c>  // b.tstop
  44dc40:	ldr	x9, [sp, #56]
  44dc44:	mov	w8, #0x1800                	// #6144
  44dc48:	str	xzr, [sp, #64]
  44dc4c:	str	xzr, [sp, #120]
  44dc50:	add	x8, x9, x8
  44dc54:	str	x8, [sp, #48]
  44dc58:	b	44dc80 <_obstack_memory_used@@Base+0x2abc>
  44dc5c:	movi	v0.2d, #0x0
  44dc60:	stp	q0, q0, [x29, #-64]
  44dc64:	ldr	x8, [sp, #96]
  44dc68:	ldr	x9, [sp, #64]
  44dc6c:	ldr	x8, [x8, #16]
  44dc70:	add	x9, x9, #0x1
  44dc74:	str	x9, [sp, #64]
  44dc78:	cmp	x9, x8
  44dc7c:	b.ge	44e2e8 <_obstack_memory_used@@Base+0x3124>  // b.tcont
  44dc80:	ldr	x8, [sp, #96]
  44dc84:	ldr	x9, [sp, #80]
  44dc88:	ldr	x10, [sp, #64]
  44dc8c:	ldr	x8, [x8, #24]
  44dc90:	ldr	x9, [x9]
  44dc94:	ldr	x8, [x8, x10, lsl #3]
  44dc98:	add	x9, x9, x8, lsl #4
  44dc9c:	str	x9, [sp, #72]
  44dca0:	ldr	w10, [x9, #8]!
  44dca4:	and	w8, w10, #0xff
  44dca8:	cmp	w8, #0x1
  44dcac:	b.ne	44dd60 <_obstack_memory_used@@Base+0x2b9c>  // b.any
  44dcb0:	ldr	x11, [sp, #72]
  44dcb4:	sub	x14, x29, #0x40
  44dcb8:	mov	w15, #0x1                   	// #1
  44dcbc:	ldrb	w11, [x11]
  44dcc0:	lsr	x12, x11, #3
  44dcc4:	and	x12, x12, #0x18
  44dcc8:	ldr	x13, [x14, x12]
  44dccc:	lsl	x11, x15, x11
  44dcd0:	orr	x11, x11, x13
  44dcd4:	str	x11, [x14, x12]
  44dcd8:	and	w11, w10, #0x3ff00
  44dcdc:	cbz	w11, 44df2c <_obstack_memory_used@@Base+0x2d68>
  44dce0:	tbz	w10, #13, 44dcfc <_obstack_memory_used@@Base+0x2b38>
  44dce4:	ldur	x11, [x29, #-64]
  44dce8:	movi	v0.2d, #0x0
  44dcec:	stp	q0, q0, [x29, #-64]
  44dcf0:	tbz	w11, #10, 44dc64 <_obstack_memory_used@@Base+0x2aa0>
  44dcf4:	mov	w11, #0x400                 	// #1024
  44dcf8:	stur	x11, [x29, #-64]
  44dcfc:	tbnz	w10, #15, 44dc5c <_obstack_memory_used@@Base+0x2a98>
  44dd00:	tbz	w10, #10, 44de8c <_obstack_memory_used@@Base+0x2cc8>
  44dd04:	cmp	w8, #0x1
  44dd08:	b.ne	44dd14 <_obstack_memory_used@@Base+0x2b50>  // b.any
  44dd0c:	ldrb	w11, [x9, #2]
  44dd10:	tbz	w11, #6, 44dc5c <_obstack_memory_used@@Base+0x2a98>
  44dd14:	ldr	x11, [sp, #80]
  44dd18:	ldr	w11, [x11, #180]
  44dd1c:	cmp	w11, #0x1
  44dd20:	b.le	44de4c <_obstack_memory_used@@Base+0x2c88>
  44dd24:	ldr	x12, [sp, #80]
  44dd28:	ldp	q2, q3, [x29, #-64]
  44dd2c:	ldr	x11, [x12, #120]
  44dd30:	ldur	q0, [x12, #184]
  44dd34:	ldr	q1, [x11]
  44dd38:	orn	v0.16b, v0.16b, v1.16b
  44dd3c:	and	v0.16b, v2.16b, v0.16b
  44dd40:	stur	q0, [x29, #-64]
  44dd44:	ldur	q1, [x12, #200]
  44dd48:	ldr	q2, [x11, #16]
  44dd4c:	mov	x11, v0.d[1]
  44dd50:	fmov	x12, d0
  44dd54:	orn	v0.16b, v1.16b, v2.16b
  44dd58:	and	v0.16b, v3.16b, v0.16b
  44dd5c:	b	44de70 <_obstack_memory_used@@Base+0x2cac>
  44dd60:	cmp	w8, #0x7
  44dd64:	b.eq	44ddd8 <_obstack_memory_used@@Base+0x2c14>  // b.none
  44dd68:	cmp	w8, #0x5
  44dd6c:	b.eq	44dda0 <_obstack_memory_used@@Base+0x2bdc>  // b.none
  44dd70:	cmp	w8, #0x3
  44dd74:	b.ne	44dc64 <_obstack_memory_used@@Base+0x2aa0>  // b.any
  44dd78:	ldr	x11, [sp, #72]
  44dd7c:	ldp	q1, q2, [x29, #-64]
  44dd80:	ldr	x11, [x11]
  44dd84:	ldr	q0, [x11]
  44dd88:	orr	v0.16b, v1.16b, v0.16b
  44dd8c:	stur	q0, [x29, #-64]
  44dd90:	ldr	q0, [x11, #16]
  44dd94:	orr	v0.16b, v2.16b, v0.16b
  44dd98:	stur	q0, [x29, #-48]
  44dd9c:	b	44dcd8 <_obstack_memory_used@@Base+0x2b14>
  44dda0:	ldr	x11, [sp, #80]
  44dda4:	ldr	w11, [x11, #180]
  44dda8:	cmp	w11, #0x2
  44ddac:	b.lt	44de10 <_obstack_memory_used@@Base+0x2c4c>  // b.tstop
  44ddb0:	ldr	x11, [sp, #80]
  44ddb4:	ldp	q1, q2, [x29, #-64]
  44ddb8:	ldr	x11, [x11, #120]
  44ddbc:	ldr	q0, [x11]
  44ddc0:	orr	v0.16b, v1.16b, v0.16b
  44ddc4:	ldr	q1, [x11, #16]
  44ddc8:	fmov	x12, d0
  44ddcc:	orr	v1.16b, v2.16b, v1.16b
  44ddd0:	stp	q0, q1, [x29, #-64]
  44ddd4:	b	44de1c <_obstack_memory_used@@Base+0x2c58>
  44ddd8:	mov	x11, #0xffffffffffffffff    	// #-1
  44dddc:	stp	x11, x11, [x29, #-64]
  44dde0:	ldr	x11, [sp, #80]
  44dde4:	ldr	x11, [x11, #216]
  44dde8:	tbz	w11, #6, 44ddf0 <_obstack_memory_used@@Base+0x2c2c>
  44ddec:	tbz	w11, #7, 44dcd8 <_obstack_memory_used@@Base+0x2b14>
  44ddf0:	tst	x11, #0x40
  44ddf4:	mov	x12, #0xfffffffffffffffe    	// #-2
  44ddf8:	mov	x13, #0xfffffffffffffbfe    	// #-1026
  44ddfc:	csel	x12, x13, x12, eq  // eq = none
  44de00:	tst	x11, #0x80
  44de04:	mov	x11, #0xfffffffffffffbff    	// #-1025
  44de08:	csel	x11, x11, x12, eq  // eq = none
  44de0c:	b	44de44 <_obstack_memory_used@@Base+0x2c80>
  44de10:	movi	v0.2d, #0xffffffffffffffff
  44de14:	mov	x12, #0xffffffffffffffff    	// #-1
  44de18:	stp	q0, q0, [x29, #-64]
  44de1c:	ldr	x11, [sp, #80]
  44de20:	and	x13, x12, #0xfffffffffffffbff
  44de24:	ldr	x11, [x11, #216]
  44de28:	tst	x11, #0x40
  44de2c:	csel	x12, x13, x12, eq  // eq = none
  44de30:	tbz	w11, #6, 44de38 <_obstack_memory_used@@Base+0x2c74>
  44de34:	tbz	w11, #7, 44dcd8 <_obstack_memory_used@@Base+0x2b14>
  44de38:	and	x13, x12, #0xfffffffffffffffe
  44de3c:	tst	x11, #0x80
  44de40:	csel	x11, x12, x13, eq  // eq = none
  44de44:	stur	x11, [x29, #-64]
  44de48:	b	44dcd8 <_obstack_memory_used@@Base+0x2b14>
  44de4c:	ldr	x11, [sp, #80]
  44de50:	ldp	q1, q2, [x29, #-64]
  44de54:	ldur	q0, [x11, #184]
  44de58:	and	v0.16b, v1.16b, v0.16b
  44de5c:	stur	q0, [x29, #-64]
  44de60:	ldur	q1, [x11, #200]
  44de64:	mov	x11, v0.d[1]
  44de68:	fmov	x12, d0
  44de6c:	and	v0.16b, v2.16b, v1.16b
  44de70:	orr	x11, x11, x12
  44de74:	fmov	x12, d0
  44de78:	orr	x11, x11, x12
  44de7c:	mov	x12, v0.d[1]
  44de80:	orr	x11, x11, x12
  44de84:	stur	q0, [x29, #-48]
  44de88:	cbz	x11, 44dc64 <_obstack_memory_used@@Base+0x2aa0>
  44de8c:	tbz	w10, #11, 44df2c <_obstack_memory_used@@Base+0x2d68>
  44de90:	cmp	w8, #0x1
  44de94:	b.ne	44dea0 <_obstack_memory_used@@Base+0x2cdc>  // b.any
  44de98:	ldrb	w9, [x9, #2]
  44de9c:	tbnz	w9, #6, 44dc5c <_obstack_memory_used@@Base+0x2a98>
  44dea0:	ldr	x9, [sp, #80]
  44dea4:	ldr	w9, [x9, #180]
  44dea8:	cmp	w9, #0x1
  44deac:	b.le	44deec <_obstack_memory_used@@Base+0x2d28>
  44deb0:	ldr	x10, [sp, #80]
  44deb4:	ldp	q2, q3, [x29, #-64]
  44deb8:	ldr	x9, [x10, #120]
  44debc:	ldur	q0, [x10, #184]
  44dec0:	ldr	q1, [x9]
  44dec4:	and	v0.16b, v1.16b, v0.16b
  44dec8:	bic	v0.16b, v2.16b, v0.16b
  44decc:	stur	q0, [x29, #-64]
  44ded0:	ldur	q1, [x10, #200]
  44ded4:	ldr	q2, [x9, #16]
  44ded8:	mov	x9, v0.d[1]
  44dedc:	fmov	x10, d0
  44dee0:	and	v0.16b, v2.16b, v1.16b
  44dee4:	bic	v0.16b, v3.16b, v0.16b
  44dee8:	b	44df10 <_obstack_memory_used@@Base+0x2d4c>
  44deec:	ldr	x9, [sp, #80]
  44def0:	ldp	q1, q2, [x29, #-64]
  44def4:	ldur	q0, [x9, #184]
  44def8:	bic	v0.16b, v1.16b, v0.16b
  44defc:	stur	q0, [x29, #-64]
  44df00:	ldur	q1, [x9, #200]
  44df04:	mov	x9, v0.d[1]
  44df08:	fmov	x10, d0
  44df0c:	bic	v0.16b, v2.16b, v1.16b
  44df10:	orr	x9, x9, x10
  44df14:	fmov	x10, d0
  44df18:	orr	x9, x9, x10
  44df1c:	mov	x10, v0.d[1]
  44df20:	orr	x9, x9, x10
  44df24:	stur	q0, [x29, #-48]
  44df28:	cbz	x9, 44dc64 <_obstack_memory_used@@Base+0x2aa0>
  44df2c:	ldr	x9, [sp, #120]
  44df30:	cmp	x9, #0x1
  44df34:	b.lt	44e0f4 <_obstack_memory_used@@Base+0x2f30>  // b.tstop
  44df38:	ldp	x25, x9, [x29, #-64]
  44df3c:	cmp	w8, #0x1
  44df40:	str	x9, [sp, #88]
  44df44:	ldur	x9, [x29, #-48]
  44df48:	str	x9, [sp, #104]
  44df4c:	b.ne	44e0fc <_obstack_memory_used@@Base+0x2f38>  // b.any
  44df50:	ldp	x24, x23, [sp, #48]
  44df54:	mov	x20, xzr
  44df58:	b	44df74 <_obstack_memory_used@@Base+0x2db0>
  44df5c:	ldr	x8, [sp, #120]
  44df60:	add	x20, x20, #0x1
  44df64:	add	x23, x23, #0x18
  44df68:	add	x24, x24, #0x20
  44df6c:	cmp	x20, x8
  44df70:	b.ge	44e0e0 <_obstack_memory_used@@Base+0x2f1c>  // b.tcont
  44df74:	ldr	x8, [sp, #72]
  44df78:	ldrb	w8, [x8]
  44df7c:	lsr	x9, x8, #3
  44df80:	and	x9, x9, #0x18
  44df84:	ldr	x9, [x24, x9]
  44df88:	lsr	x8, x9, x8
  44df8c:	tbz	w8, #0, 44df5c <_obstack_memory_used@@Base+0x2d98>
  44df90:	mov	x9, x24
  44df94:	ldp	x11, x10, [x24]
  44df98:	ldr	x14, [sp, #88]
  44df9c:	ldp	x12, x9, [x24, #16]
  44dfa0:	ldr	x15, [sp, #104]
  44dfa4:	ldur	x8, [x29, #-40]
  44dfa8:	and	x13, x11, x25
  44dfac:	and	x14, x10, x14
  44dfb0:	and	x15, x12, x15
  44dfb4:	stp	x13, x14, [x29, #-96]
  44dfb8:	orr	x13, x14, x13
  44dfbc:	and	x14, x9, x8
  44dfc0:	orr	x13, x13, x15
  44dfc4:	orr	x13, x13, x14
  44dfc8:	stp	x15, x14, [x29, #-80]
  44dfcc:	cbz	x13, 44df5c <_obstack_memory_used@@Base+0x2d98>
  44dfd0:	ldr	x14, [sp, #88]
  44dfd4:	bic	x13, x11, x25
  44dfd8:	bic	x25, x25, x11
  44dfdc:	bic	x11, x10, x14
  44dfe0:	bic	x14, x14, x10
  44dfe4:	str	x14, [sp, #88]
  44dfe8:	ldr	x14, [sp, #104]
  44dfec:	stp	x13, x11, [x29, #-128]
  44dff0:	orr	x11, x11, x13
  44dff4:	bic	x10, x12, x14
  44dff8:	bic	x14, x14, x12
  44dffc:	bic	x12, x9, x8
  44e000:	stp	x10, x12, [x29, #-112]
  44e004:	orr	x10, x11, x10
  44e008:	orr	x10, x10, x12
  44e00c:	bic	x8, x8, x9
  44e010:	str	x14, [sp, #104]
  44e014:	str	x8, [sp, #40]
  44e018:	stur	x8, [x29, #-40]
  44e01c:	cbz	x10, 44e0a8 <_obstack_memory_used@@Base+0x2ee4>
  44e020:	ldr	x10, [sp, #120]
  44e024:	ldp	x8, x11, [sp, #48]
  44e028:	ldp	q0, q1, [x29, #-128]
  44e02c:	ldp	q2, q3, [x29, #-96]
  44e030:	mov	w9, #0x18                  	// #24
  44e034:	add	x8, x8, x10, lsl #5
  44e038:	stp	q0, q1, [x8]
  44e03c:	mov	x8, x24
  44e040:	stp	q2, q3, [x24]
  44e044:	ldr	x8, [x23, #8]
  44e048:	madd	x26, x10, x9, x11
  44e04c:	mov	x12, x23
  44e050:	str	x8, [x26, #8]
  44e054:	ldr	x22, [x23, #8]
  44e058:	cmp	x22, #0x0
  44e05c:	b.le	44e094 <_obstack_memory_used@@Base+0x2ed0>
  44e060:	lsl	x0, x8, #3
  44e064:	str	x8, [x26]
  44e068:	bl	404210 <malloc@plt>
  44e06c:	ldr	x9, [sp, #56]
  44e070:	ldr	x10, [sp, #120]
  44e074:	mov	w8, #0x18                  	// #24
  44e078:	madd	x8, x10, x8, x9
  44e07c:	str	x0, [x8, #16]
  44e080:	cbz	x0, 44e7c0 <_obstack_memory_used@@Base+0x35fc>
  44e084:	ldr	x1, [x23, #16]
  44e088:	lsl	x2, x22, #3
  44e08c:	bl	403e80 <memcpy@plt>
  44e090:	b	44e09c <_obstack_memory_used@@Base+0x2ed8>
  44e094:	stp	xzr, xzr, [x26]
  44e098:	str	xzr, [x26, #16]
  44e09c:	ldr	x8, [sp, #120]
  44e0a0:	add	x8, x8, #0x1
  44e0a4:	str	x8, [sp, #120]
  44e0a8:	ldr	x8, [sp, #96]
  44e0ac:	ldr	x9, [sp, #64]
  44e0b0:	mov	x0, x23
  44e0b4:	ldr	x8, [x8, #24]
  44e0b8:	ldr	x1, [x8, x9, lsl #3]
  44e0bc:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  44e0c0:	tbz	w0, #0, 44e774 <_obstack_memory_used@@Base+0x35b0>
  44e0c4:	ldr	x8, [sp, #88]
  44e0c8:	ldr	x9, [sp, #104]
  44e0cc:	orr	x8, x8, x25
  44e0d0:	orr	x8, x8, x9
  44e0d4:	ldr	x9, [sp, #40]
  44e0d8:	orr	x8, x8, x9
  44e0dc:	cbnz	x8, 44df5c <_obstack_memory_used@@Base+0x2d98>
  44e0e0:	ldr	x8, [sp, #88]
  44e0e4:	stp	x25, x8, [x29, #-64]
  44e0e8:	ldr	x8, [sp, #104]
  44e0ec:	stur	x8, [x29, #-48]
  44e0f0:	b	44e284 <_obstack_memory_used@@Base+0x30c0>
  44e0f4:	mov	x20, xzr
  44e0f8:	b	44e284 <_obstack_memory_used@@Base+0x30c0>
  44e0fc:	ldur	x8, [x29, #-40]
  44e100:	ldp	x22, x24, [sp, #48]
  44e104:	mov	x20, xzr
  44e108:	str	x8, [sp, #72]
  44e10c:	b	44e128 <_obstack_memory_used@@Base+0x2f64>
  44e110:	ldr	x8, [sp, #120]
  44e114:	add	x20, x20, #0x1
  44e118:	add	x24, x24, #0x18
  44e11c:	add	x22, x22, #0x20
  44e120:	cmp	x20, x8
  44e124:	b.ge	44e26c <_obstack_memory_used@@Base+0x30a8>  // b.tcont
  44e128:	ldp	x11, x10, [x22]
  44e12c:	ldr	x13, [sp, #88]
  44e130:	ldp	x9, x8, [x22, #16]
  44e134:	ldr	x14, [sp, #104]
  44e138:	ldr	x15, [sp, #72]
  44e13c:	and	x12, x11, x25
  44e140:	and	x13, x10, x13
  44e144:	and	x14, x9, x14
  44e148:	stp	x12, x13, [x29, #-96]
  44e14c:	orr	x12, x13, x12
  44e150:	and	x15, x8, x15
  44e154:	orr	x12, x12, x14
  44e158:	orr	x12, x12, x15
  44e15c:	stp	x14, x15, [x29, #-80]
  44e160:	cbz	x12, 44e110 <_obstack_memory_used@@Base+0x2f4c>
  44e164:	ldr	x13, [sp, #88]
  44e168:	bic	x12, x11, x25
  44e16c:	bic	x25, x25, x11
  44e170:	bic	x11, x10, x13
  44e174:	bic	x13, x13, x10
  44e178:	str	x13, [sp, #88]
  44e17c:	ldr	x13, [sp, #104]
  44e180:	stp	x12, x11, [x29, #-128]
  44e184:	orr	x11, x11, x12
  44e188:	bic	x10, x9, x13
  44e18c:	bic	x13, x13, x9
  44e190:	str	x13, [sp, #104]
  44e194:	ldr	x13, [sp, #72]
  44e198:	orr	x11, x11, x10
  44e19c:	bic	x9, x8, x13
  44e1a0:	stp	x10, x9, [x29, #-112]
  44e1a4:	orr	x9, x11, x9
  44e1a8:	bic	x13, x13, x8
  44e1ac:	str	x13, [sp, #72]
  44e1b0:	cbz	x9, 44e234 <_obstack_memory_used@@Base+0x3070>
  44e1b4:	ldr	x10, [sp, #120]
  44e1b8:	ldp	x8, x11, [sp, #48]
  44e1bc:	ldp	q0, q1, [x29, #-128]
  44e1c0:	ldp	q2, q3, [x29, #-96]
  44e1c4:	mov	w9, #0x18                  	// #24
  44e1c8:	add	x8, x8, x10, lsl #5
  44e1cc:	stp	q0, q1, [x8]
  44e1d0:	stp	q2, q3, [x22]
  44e1d4:	ldr	x8, [x24, #8]
  44e1d8:	madd	x26, x10, x9, x11
  44e1dc:	str	x8, [x26, #8]
  44e1e0:	ldr	x23, [x24, #8]
  44e1e4:	cmp	x23, #0x1
  44e1e8:	b.lt	44e220 <_obstack_memory_used@@Base+0x305c>  // b.tstop
  44e1ec:	lsl	x0, x8, #3
  44e1f0:	str	x8, [x26]
  44e1f4:	bl	404210 <malloc@plt>
  44e1f8:	ldr	x9, [sp, #56]
  44e1fc:	ldr	x10, [sp, #120]
  44e200:	mov	w8, #0x18                  	// #24
  44e204:	madd	x8, x10, x8, x9
  44e208:	str	x0, [x8, #16]
  44e20c:	cbz	x0, 44e794 <_obstack_memory_used@@Base+0x35d0>
  44e210:	ldr	x1, [x24, #16]
  44e214:	lsl	x2, x23, #3
  44e218:	bl	403e80 <memcpy@plt>
  44e21c:	b	44e228 <_obstack_memory_used@@Base+0x3064>
  44e220:	stp	xzr, xzr, [x26]
  44e224:	str	xzr, [x26, #16]
  44e228:	ldr	x8, [sp, #120]
  44e22c:	add	x8, x8, #0x1
  44e230:	str	x8, [sp, #120]
  44e234:	ldr	x8, [sp, #96]
  44e238:	ldr	x9, [sp, #64]
  44e23c:	mov	x0, x24
  44e240:	ldr	x8, [x8, #24]
  44e244:	ldr	x1, [x8, x9, lsl #3]
  44e248:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  44e24c:	tbz	w0, #0, 44e74c <_obstack_memory_used@@Base+0x3588>
  44e250:	ldr	x8, [sp, #88]
  44e254:	ldr	x9, [sp, #104]
  44e258:	orr	x8, x8, x25
  44e25c:	orr	x8, x8, x9
  44e260:	ldr	x9, [sp, #72]
  44e264:	orr	x8, x8, x9
  44e268:	cbnz	x8, 44e110 <_obstack_memory_used@@Base+0x2f4c>
  44e26c:	ldr	x8, [sp, #88]
  44e270:	stp	x25, x8, [x29, #-64]
  44e274:	ldr	x8, [sp, #104]
  44e278:	stur	x8, [x29, #-48]
  44e27c:	ldr	x8, [sp, #72]
  44e280:	stur	x8, [x29, #-40]
  44e284:	ldr	x8, [sp, #120]
  44e288:	cmp	x20, x8
  44e28c:	b.ne	44dc64 <_obstack_memory_used@@Base+0x2aa0>  // b.any
  44e290:	ldr	x8, [sp, #48]
  44e294:	ldp	q1, q0, [x29, #-64]
  44e298:	ldr	x9, [sp, #64]
  44e29c:	mov	w0, #0x8                   	// #8
  44e2a0:	add	x8, x8, x20, lsl #5
  44e2a4:	stp	q1, q0, [x8]
  44e2a8:	ldr	x8, [sp, #96]
  44e2ac:	ldr	x8, [x8, #24]
  44e2b0:	ldr	x24, [x8, x9, lsl #3]
  44e2b4:	ldr	x9, [sp, #56]
  44e2b8:	mov	w8, #0x18                  	// #24
  44e2bc:	madd	x23, x20, x8, x9
  44e2c0:	mov	w8, #0x1                   	// #1
  44e2c4:	dup	v0.2d, x8
  44e2c8:	str	q0, [x23]
  44e2cc:	bl	404210 <malloc@plt>
  44e2d0:	str	x0, [x23, #16]
  44e2d4:	cbz	x0, 44e7e4 <_obstack_memory_used@@Base+0x3620>
  44e2d8:	add	x8, x20, #0x1
  44e2dc:	str	x24, [x0]
  44e2e0:	str	x8, [sp, #120]
  44e2e4:	b	44dc5c <_obstack_memory_used@@Base+0x2a98>
  44e2e8:	ldr	x8, [sp, #120]
  44e2ec:	cmp	x8, #0x0
  44e2f0:	b.le	44e724 <_obstack_memory_used@@Base+0x3560>
  44e2f4:	ldr	x23, [sp, #120]
  44e2f8:	add	x8, x23, #0x1
  44e2fc:	lsl	x0, x8, #3
  44e300:	stp	x8, xzr, [x29, #-160]
  44e304:	bl	404210 <malloc@plt>
  44e308:	cmp	x0, #0x0
  44e30c:	mov	w8, #0xc                   	// #12
  44e310:	csel	w26, w8, wzr, eq  // eq = none
  44e314:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44e318:	movk	x8, #0xa855
  44e31c:	movk	x8, #0xaaa, lsl #48
  44e320:	mov	x20, x0
  44e324:	cmp	x23, x8
  44e328:	stur	x0, [x29, #-144]
  44e32c:	stur	w26, [x29, #-132]
  44e330:	b.hi	44f094 <_obstack_memory_used@@Base+0x3ed0>  // b.pmore
  44e334:	cbz	x20, 44f094 <_obstack_memory_used@@Base+0x3ed0>
  44e338:	ldr	x8, [sp, #120]
  44e33c:	add	x8, x8, x8, lsl #1
  44e340:	lsl	x0, x8, #3
  44e344:	bl	404210 <malloc@plt>
  44e348:	str	x0, [sp, #72]
  44e34c:	cbz	x0, 44f094 <_obstack_memory_used@@Base+0x3ed0>
  44e350:	ldr	x8, [sp, #120]
  44e354:	ldr	x9, [sp, #72]
  44e358:	mov	x22, xzr
  44e35c:	mov	x20, xzr
  44e360:	lsl	x8, x8, #3
  44e364:	add	x9, x9, x8
  44e368:	add	x8, x9, x8
  44e36c:	str	xzr, [sp, #104]
  44e370:	str	xzr, [sp, #88]
  44e374:	str	xzr, [sp, #64]
  44e378:	str	wzr, [sp, #28]
  44e37c:	stp	x8, x9, [sp, #32]
  44e380:	b	44e3ec <_obstack_memory_used@@Base+0x3228>
  44e384:	ldp	x10, x9, [sp, #32]
  44e388:	lsl	x8, x20, #3
  44e38c:	str	x0, [x9, x8]
  44e390:	ldr	x9, [sp, #72]
  44e394:	ldr	x9, [x9, x8]
  44e398:	str	x9, [x10, x8]
  44e39c:	ldr	x8, [sp, #48]
  44e3a0:	ldr	x12, [sp, #120]
  44e3a4:	mov	x13, x20
  44e3a8:	add	x13, x20, #0x1
  44e3ac:	add	x8, x8, x20, lsl #5
  44e3b0:	ldp	x9, x10, [x8]
  44e3b4:	cmp	x13, x12
  44e3b8:	ldr	x12, [sp, #64]
  44e3bc:	ldp	x11, x8, [x8, #16]
  44e3c0:	mov	x20, x13
  44e3c4:	orr	x22, x10, x22
  44e3c8:	orr	x12, x9, x12
  44e3cc:	ldr	x9, [sp, #88]
  44e3d0:	str	x12, [sp, #64]
  44e3d4:	orr	x9, x11, x9
  44e3d8:	str	x9, [sp, #88]
  44e3dc:	ldr	x9, [sp, #104]
  44e3e0:	orr	x9, x8, x9
  44e3e4:	str	x9, [sp, #104]
  44e3e8:	b.eq	44e524 <_obstack_memory_used@@Base+0x3360>  // b.none
  44e3ec:	ldr	x9, [sp, #56]
  44e3f0:	mov	w8, #0x18                  	// #24
  44e3f4:	stur	xzr, [x29, #-152]
  44e3f8:	madd	x23, x20, x8, x9
  44e3fc:	ldr	x8, [x23, #8]!
  44e400:	cmp	x8, #0x1
  44e404:	b.lt	44e474 <_obstack_memory_used@@Base+0x32b0>  // b.tstop
  44e408:	ldr	x10, [sp, #56]
  44e40c:	ldr	x11, [sp, #80]
  44e410:	mov	w9, #0x18                  	// #24
  44e414:	mov	x24, xzr
  44e418:	madd	x9, x20, x9, x10
  44e41c:	add	x25, x9, #0x10
  44e420:	b	44e430 <_obstack_memory_used@@Base+0x326c>
  44e424:	add	x24, x24, #0x1
  44e428:	cmp	x24, x8
  44e42c:	b.ge	44e470 <_obstack_memory_used@@Base+0x32ac>  // b.tcont
  44e430:	ldr	x9, [x25]
  44e434:	ldr	x10, [x11, #24]
  44e438:	ldr	x9, [x9, x24, lsl #3]
  44e43c:	ldr	x9, [x10, x9, lsl #3]
  44e440:	cmn	x9, #0x1
  44e444:	b.eq	44e424 <_obstack_memory_used@@Base+0x3260>  // b.none
  44e448:	ldr	x8, [x11, #48]
  44e44c:	mov	w10, #0x18                  	// #24
  44e450:	sub	x0, x29, #0xa0
  44e454:	madd	x1, x9, x10, x8
  44e458:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  44e45c:	cbnz	w0, 44f018 <_obstack_memory_used@@Base+0x3e54>
  44e460:	ldr	x8, [x23]
  44e464:	ldr	x11, [sp, #80]
  44e468:	mov	w26, wzr
  44e46c:	b	44e424 <_obstack_memory_used@@Base+0x3260>
  44e470:	stur	w26, [x29, #-132]
  44e474:	ldr	x1, [sp, #80]
  44e478:	sub	x0, x29, #0x84
  44e47c:	sub	x2, x29, #0xa0
  44e480:	mov	w3, wzr
  44e484:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44e488:	ldur	w26, [x29, #-132]
  44e48c:	ldr	x8, [sp, #72]
  44e490:	str	x0, [x8, x20, lsl #3]
  44e494:	cbnz	x0, 44e49c <_obstack_memory_used@@Base+0x32d8>
  44e498:	cbnz	w26, 44f01c <_obstack_memory_used@@Base+0x3e58>
  44e49c:	ldrsb	w8, [x0, #104]
  44e4a0:	tbz	w8, #31, 44e384 <_obstack_memory_used@@Base+0x31c0>
  44e4a4:	ldr	x1, [sp, #80]
  44e4a8:	sub	x0, x29, #0x84
  44e4ac:	sub	x2, x29, #0xa0
  44e4b0:	mov	w3, #0x1                   	// #1
  44e4b4:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44e4b8:	ldr	x8, [sp, #40]
  44e4bc:	str	x0, [x8, x20, lsl #3]
  44e4c0:	cbnz	x0, 44e4cc <_obstack_memory_used@@Base+0x3308>
  44e4c4:	ldur	w8, [x29, #-132]
  44e4c8:	cbnz	w8, 44f01c <_obstack_memory_used@@Base+0x3e58>
  44e4cc:	ldr	x8, [sp, #72]
  44e4d0:	ldr	x8, [x8, x20, lsl #3]
  44e4d4:	cmp	x8, x0
  44e4d8:	b.eq	44e4f8 <_obstack_memory_used@@Base+0x3334>  // b.none
  44e4dc:	ldr	x8, [sp, #80]
  44e4e0:	ldr	w9, [sp, #28]
  44e4e4:	ldr	w8, [x8, #180]
  44e4e8:	cmp	w8, #0x1
  44e4ec:	cset	w8, gt
  44e4f0:	orr	w9, w9, w8
  44e4f4:	str	w9, [sp, #28]
  44e4f8:	ldr	x1, [sp, #80]
  44e4fc:	sub	x0, x29, #0x84
  44e500:	sub	x2, x29, #0xa0
  44e504:	mov	w3, #0x2                   	// #2
  44e508:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44e50c:	ldur	w26, [x29, #-132]
  44e510:	ldr	x8, [sp, #32]
  44e514:	str	x0, [x8, x20, lsl #3]
  44e518:	cbnz	x0, 44e39c <_obstack_memory_used@@Base+0x31d8>
  44e51c:	cbz	w26, 44e39c <_obstack_memory_used@@Base+0x31d8>
  44e520:	b	44f01c <_obstack_memory_used@@Base+0x3e58>
  44e524:	ldr	w8, [sp, #28]
  44e528:	tbnz	w8, #0, 44e824 <_obstack_memory_used@@Base+0x3660>
  44e52c:	mov	w0, #0x8                   	// #8
  44e530:	mov	w1, #0x100                 	// #256
  44e534:	bl	4043d0 <calloc@plt>
  44e538:	str	x0, [x19]
  44e53c:	cbz	x0, 44f01c <_obstack_memory_used@@Base+0x3e58>
  44e540:	ldr	x8, [sp, #64]
  44e544:	cbz	x8, 44e5b4 <_obstack_memory_used@@Base+0x33f0>
  44e548:	ldr	x9, [sp, #64]
  44e54c:	mov	x8, xzr
  44e550:	mov	w10, #0x1                   	// #1
  44e554:	tbnz	w9, #0, 44e56c <_obstack_memory_used@@Base+0x33a8>
  44e558:	lsl	x10, x10, #1
  44e55c:	lsr	x9, x9, #1
  44e560:	add	x8, x8, #0x1
  44e564:	cbnz	x9, 44e554 <_obstack_memory_used@@Base+0x3390>
  44e568:	b	44e5b4 <_obstack_memory_used@@Base+0x33f0>
  44e56c:	ldr	x12, [sp, #48]
  44e570:	mov	x11, #0xfffffffffffffff8    	// #-8
  44e574:	ldr	x13, [x12], #32
  44e578:	add	x11, x11, #0x8
  44e57c:	tst	x13, x10
  44e580:	b.eq	44e574 <_obstack_memory_used@@Base+0x33b0>  // b.none
  44e584:	ldr	x12, [sp, #80]
  44e588:	ldr	x13, [sp, #40]
  44e58c:	ldr	x12, [x12, #184]
  44e590:	tst	x12, x10
  44e594:	ldr	x12, [sp, #72]
  44e598:	csel	x12, x12, x13, eq  // eq = none
  44e59c:	ldr	x11, [x12, x11]
  44e5a0:	str	x11, [x0, x8, lsl #3]
  44e5a4:	lsl	x10, x10, #1
  44e5a8:	lsr	x9, x9, #1
  44e5ac:	add	x8, x8, #0x1
  44e5b0:	cbnz	x9, 44e554 <_obstack_memory_used@@Base+0x3390>
  44e5b4:	cbz	x22, 44e628 <_obstack_memory_used@@Base+0x3464>
  44e5b8:	ldr	x9, [sp, #56]
  44e5bc:	mov	w8, #0x1808                	// #6152
  44e5c0:	mov	w10, #0x1                   	// #1
  44e5c4:	add	x8, x9, x8
  44e5c8:	mov	w9, #0x40                  	// #64
  44e5cc:	tbnz	w22, #0, 44e5ec <_obstack_memory_used@@Base+0x3428>
  44e5d0:	mov	x11, x22
  44e5d4:	lsr	x11, x22, #1
  44e5d8:	lsl	x10, x10, #1
  44e5dc:	add	x9, x9, #0x1
  44e5e0:	mov	x22, x11
  44e5e4:	cbnz	x11, 44e5cc <_obstack_memory_used@@Base+0x3408>
  44e5e8:	b	44e628 <_obstack_memory_used@@Base+0x3464>
  44e5ec:	mov	x11, #0xfffffffffffffff8    	// #-8
  44e5f0:	mov	x12, x8
  44e5f4:	ldr	x13, [x12], #32
  44e5f8:	add	x11, x11, #0x8
  44e5fc:	tst	x13, x10
  44e600:	b.eq	44e5f4 <_obstack_memory_used@@Base+0x3430>  // b.none
  44e604:	ldr	x12, [sp, #80]
  44e608:	ldr	x13, [sp, #40]
  44e60c:	ldr	x12, [x12, #192]
  44e610:	tst	x12, x10
  44e614:	ldr	x12, [sp, #72]
  44e618:	csel	x12, x12, x13, eq  // eq = none
  44e61c:	ldr	x11, [x12, x11]
  44e620:	str	x11, [x0, x9, lsl #3]
  44e624:	b	44e5d0 <_obstack_memory_used@@Base+0x340c>
  44e628:	ldr	x8, [sp, #88]
  44e62c:	cbz	x8, 44e6a4 <_obstack_memory_used@@Base+0x34e0>
  44e630:	ldr	x9, [sp, #56]
  44e634:	mov	w8, #0x1810                	// #6160
  44e638:	mov	w10, #0x1                   	// #1
  44e63c:	add	x8, x9, x8
  44e640:	mov	w9, #0x80                  	// #128
  44e644:	ldr	x11, [sp, #88]
  44e648:	tbnz	w11, #0, 44e668 <_obstack_memory_used@@Base+0x34a4>
  44e64c:	ldr	x11, [sp, #88]
  44e650:	lsl	x10, x10, #1
  44e654:	add	x9, x9, #0x1
  44e658:	lsr	x11, x11, #1
  44e65c:	str	x11, [sp, #88]
  44e660:	cbnz	x11, 44e644 <_obstack_memory_used@@Base+0x3480>
  44e664:	b	44e6a4 <_obstack_memory_used@@Base+0x34e0>
  44e668:	mov	x11, #0xfffffffffffffff8    	// #-8
  44e66c:	mov	x12, x8
  44e670:	ldr	x13, [x12], #32
  44e674:	add	x11, x11, #0x8
  44e678:	tst	x13, x10
  44e67c:	b.eq	44e670 <_obstack_memory_used@@Base+0x34ac>  // b.none
  44e680:	ldr	x12, [sp, #80]
  44e684:	ldr	x13, [sp, #40]
  44e688:	ldr	x12, [x12, #200]
  44e68c:	tst	x12, x10
  44e690:	ldr	x12, [sp, #72]
  44e694:	csel	x12, x12, x13, eq  // eq = none
  44e698:	ldr	x11, [x12, x11]
  44e69c:	str	x11, [x0, x9, lsl #3]
  44e6a0:	b	44e64c <_obstack_memory_used@@Base+0x3488>
  44e6a4:	ldr	x8, [sp, #104]
  44e6a8:	cbz	x8, 44ea18 <_obstack_memory_used@@Base+0x3854>
  44e6ac:	ldr	x9, [sp, #56]
  44e6b0:	mov	w8, #0x1818                	// #6168
  44e6b4:	mov	w10, #0x1                   	// #1
  44e6b8:	add	x8, x9, x8
  44e6bc:	mov	w9, #0xc0                  	// #192
  44e6c0:	ldr	x11, [sp, #104]
  44e6c4:	tbnz	w11, #0, 44e6e4 <_obstack_memory_used@@Base+0x3520>
  44e6c8:	ldr	x11, [sp, #104]
  44e6cc:	lsl	x10, x10, #1
  44e6d0:	add	x9, x9, #0x1
  44e6d4:	lsr	x11, x11, #1
  44e6d8:	str	x11, [sp, #104]
  44e6dc:	cbnz	x11, 44e6c0 <_obstack_memory_used@@Base+0x34fc>
  44e6e0:	b	44ea18 <_obstack_memory_used@@Base+0x3854>
  44e6e4:	mov	x11, #0xfffffffffffffff8    	// #-8
  44e6e8:	mov	x12, x8
  44e6ec:	ldr	x13, [x12], #32
  44e6f0:	add	x11, x11, #0x8
  44e6f4:	tst	x13, x10
  44e6f8:	b.eq	44e6ec <_obstack_memory_used@@Base+0x3528>  // b.none
  44e6fc:	ldr	x12, [sp, #80]
  44e700:	ldr	x13, [sp, #40]
  44e704:	ldr	x12, [x12, #208]
  44e708:	tst	x12, x10
  44e70c:	ldr	x12, [sp, #72]
  44e710:	csel	x12, x12, x13, eq  // eq = none
  44e714:	ldr	x11, [x12, x11]
  44e718:	str	x11, [x0, x9, lsl #3]
  44e71c:	b	44e6c8 <_obstack_memory_used@@Base+0x3504>
  44e720:	str	xzr, [sp, #120]
  44e724:	ldr	x0, [sp, #56]
  44e728:	bl	4046b0 <free@plt>
  44e72c:	ldr	x8, [sp, #120]
  44e730:	cbnz	x8, 44f060 <_obstack_memory_used@@Base+0x3e9c>
  44e734:	mov	w0, #0x8                   	// #8
  44e738:	mov	w1, #0x100                 	// #256
  44e73c:	bl	4043d0 <calloc@plt>
  44e740:	str	x0, [x19]
  44e744:	cbnz	x0, 44eaa8 <_obstack_memory_used@@Base+0x38e4>
  44e748:	b	44f060 <_obstack_memory_used@@Base+0x3e9c>
  44e74c:	ldr	x8, [sp, #88]
  44e750:	stp	x25, x8, [x29, #-64]
  44e754:	ldr	x8, [sp, #104]
  44e758:	stur	x8, [x29, #-48]
  44e75c:	ldr	x8, [sp, #72]
  44e760:	stur	x8, [x29, #-40]
  44e764:	ldr	x20, [sp, #120]
  44e768:	cmp	x20, #0x1
  44e76c:	b.ge	44e7f0 <_obstack_memory_used@@Base+0x362c>  // b.tcont
  44e770:	b	44e808 <_obstack_memory_used@@Base+0x3644>
  44e774:	ldr	x8, [sp, #88]
  44e778:	stp	x25, x8, [x29, #-64]
  44e77c:	ldr	x8, [sp, #104]
  44e780:	stur	x8, [x29, #-48]
  44e784:	ldr	x20, [sp, #120]
  44e788:	cmp	x20, #0x1
  44e78c:	b.ge	44e7f0 <_obstack_memory_used@@Base+0x362c>  // b.tcont
  44e790:	b	44e808 <_obstack_memory_used@@Base+0x3644>
  44e794:	ldr	x8, [sp, #88]
  44e798:	stp	x25, x8, [x29, #-64]
  44e79c:	ldr	x8, [sp, #104]
  44e7a0:	stur	x8, [x29, #-48]
  44e7a4:	ldr	x8, [sp, #72]
  44e7a8:	stur	x8, [x29, #-40]
  44e7ac:	stp	xzr, xzr, [x26]
  44e7b0:	ldr	x20, [sp, #120]
  44e7b4:	cmp	x20, #0x1
  44e7b8:	b.ge	44e7f0 <_obstack_memory_used@@Base+0x362c>  // b.tcont
  44e7bc:	b	44e808 <_obstack_memory_used@@Base+0x3644>
  44e7c0:	ldr	x8, [sp, #88]
  44e7c4:	stp	x25, x8, [x29, #-64]
  44e7c8:	ldr	x8, [sp, #104]
  44e7cc:	stur	x8, [x29, #-48]
  44e7d0:	stp	xzr, xzr, [x26]
  44e7d4:	ldr	x20, [sp, #120]
  44e7d8:	cmp	x20, #0x1
  44e7dc:	b.ge	44e7f0 <_obstack_memory_used@@Base+0x362c>  // b.tcont
  44e7e0:	b	44e808 <_obstack_memory_used@@Base+0x3644>
  44e7e4:	stp	xzr, xzr, [x23]
  44e7e8:	cmp	x20, #0x1
  44e7ec:	b.lt	44e808 <_obstack_memory_used@@Base+0x3644>  // b.tstop
  44e7f0:	ldr	x8, [sp, #56]
  44e7f4:	add	x23, x8, #0x10
  44e7f8:	ldr	x0, [x23], #24
  44e7fc:	bl	4046b0 <free@plt>
  44e800:	subs	x20, x20, #0x1
  44e804:	b.ne	44e7f8 <_obstack_memory_used@@Base+0x3634>  // b.any
  44e808:	mov	x8, #0xffffffffffffffff    	// #-1
  44e80c:	str	x8, [sp, #120]
  44e810:	ldr	x0, [sp, #56]
  44e814:	bl	4046b0 <free@plt>
  44e818:	ldr	x8, [sp, #120]
  44e81c:	cbz	x8, 44e734 <_obstack_memory_used@@Base+0x3570>
  44e820:	b	44f060 <_obstack_memory_used@@Base+0x3e9c>
  44e824:	mov	w0, #0x8                   	// #8
  44e828:	mov	w1, #0x200                 	// #512
  44e82c:	bl	4043d0 <calloc@plt>
  44e830:	ldr	x8, [sp, #96]
  44e834:	str	x0, [x8, #96]
  44e838:	cbz	x0, 44f01c <_obstack_memory_used@@Base+0x3e58>
  44e83c:	ldr	x8, [sp, #64]
  44e840:	cbz	x8, 44e8ac <_obstack_memory_used@@Base+0x36e8>
  44e844:	ldp	x10, x9, [sp, #64]
  44e848:	mov	x8, xzr
  44e84c:	mov	w11, #0x1                   	// #1
  44e850:	sub	x9, x9, #0x8
  44e854:	tbnz	w10, #0, 44e86c <_obstack_memory_used@@Base+0x36a8>
  44e858:	lsl	x11, x11, #1
  44e85c:	lsr	x10, x10, #1
  44e860:	add	x8, x8, #0x1
  44e864:	cbnz	x10, 44e854 <_obstack_memory_used@@Base+0x3690>
  44e868:	b	44e8ac <_obstack_memory_used@@Base+0x36e8>
  44e86c:	ldr	x13, [sp, #48]
  44e870:	mov	x12, x9
  44e874:	ldr	x14, [x13], #32
  44e878:	add	x12, x12, #0x8
  44e87c:	tst	x14, x11
  44e880:	b.eq	44e874 <_obstack_memory_used@@Base+0x36b0>  // b.none
  44e884:	ldr	x14, [sp, #120]
  44e888:	ldr	x13, [x12]
  44e88c:	ldr	x12, [x12, x14, lsl #3]
  44e890:	add	x14, x0, x8, lsl #3
  44e894:	str	x13, [x14]
  44e898:	str	x12, [x14, #2048]
  44e89c:	lsl	x11, x11, #1
  44e8a0:	lsr	x10, x10, #1
  44e8a4:	add	x8, x8, #0x1
  44e8a8:	cbnz	x10, 44e854 <_obstack_memory_used@@Base+0x3690>
  44e8ac:	cbz	x22, 44e920 <_obstack_memory_used@@Base+0x375c>
  44e8b0:	ldr	x8, [sp, #72]
  44e8b4:	ldr	x10, [sp, #56]
  44e8b8:	mov	w9, #0x1808                	// #6152
  44e8bc:	mov	w11, #0x1                   	// #1
  44e8c0:	sub	x8, x8, #0x8
  44e8c4:	add	x9, x10, x9
  44e8c8:	mov	w10, #0x40                  	// #64
  44e8cc:	tbnz	w22, #0, 44e8ec <_obstack_memory_used@@Base+0x3728>
  44e8d0:	mov	x12, x22
  44e8d4:	lsr	x12, x22, #1
  44e8d8:	lsl	x11, x11, #1
  44e8dc:	add	x10, x10, #0x1
  44e8e0:	mov	x22, x12
  44e8e4:	cbnz	x12, 44e8cc <_obstack_memory_used@@Base+0x3708>
  44e8e8:	b	44e920 <_obstack_memory_used@@Base+0x375c>
  44e8ec:	mov	x13, x9
  44e8f0:	mov	x12, x8
  44e8f4:	ldr	x14, [x13], #32
  44e8f8:	add	x12, x12, #0x8
  44e8fc:	tst	x14, x11
  44e900:	b.eq	44e8f4 <_obstack_memory_used@@Base+0x3730>  // b.none
  44e904:	ldr	x14, [sp, #120]
  44e908:	ldr	x13, [x12]
  44e90c:	ldr	x12, [x12, x14, lsl #3]
  44e910:	add	x14, x0, x10, lsl #3
  44e914:	str	x13, [x14]
  44e918:	str	x12, [x14, #2048]
  44e91c:	b	44e8d0 <_obstack_memory_used@@Base+0x370c>
  44e920:	ldr	x8, [sp, #88]
  44e924:	cbz	x8, 44e99c <_obstack_memory_used@@Base+0x37d8>
  44e928:	ldr	x8, [sp, #72]
  44e92c:	ldr	x10, [sp, #56]
  44e930:	mov	w9, #0x1810                	// #6160
  44e934:	mov	w11, #0x1                   	// #1
  44e938:	sub	x8, x8, #0x8
  44e93c:	add	x9, x10, x9
  44e940:	mov	w10, #0x80                  	// #128
  44e944:	ldr	x12, [sp, #88]
  44e948:	tbnz	w12, #0, 44e968 <_obstack_memory_used@@Base+0x37a4>
  44e94c:	ldr	x12, [sp, #88]
  44e950:	lsl	x11, x11, #1
  44e954:	add	x10, x10, #0x1
  44e958:	lsr	x12, x12, #1
  44e95c:	str	x12, [sp, #88]
  44e960:	cbnz	x12, 44e944 <_obstack_memory_used@@Base+0x3780>
  44e964:	b	44e99c <_obstack_memory_used@@Base+0x37d8>
  44e968:	mov	x13, x9
  44e96c:	mov	x12, x8
  44e970:	ldr	x14, [x13], #32
  44e974:	add	x12, x12, #0x8
  44e978:	tst	x14, x11
  44e97c:	b.eq	44e970 <_obstack_memory_used@@Base+0x37ac>  // b.none
  44e980:	ldr	x14, [sp, #120]
  44e984:	ldr	x13, [x12]
  44e988:	ldr	x12, [x12, x14, lsl #3]
  44e98c:	add	x14, x0, x10, lsl #3
  44e990:	str	x13, [x14]
  44e994:	str	x12, [x14, #2048]
  44e998:	b	44e94c <_obstack_memory_used@@Base+0x3788>
  44e99c:	ldr	x8, [sp, #104]
  44e9a0:	cbz	x8, 44ea18 <_obstack_memory_used@@Base+0x3854>
  44e9a4:	ldr	x8, [sp, #72]
  44e9a8:	ldr	x10, [sp, #56]
  44e9ac:	mov	w9, #0x1818                	// #6168
  44e9b0:	mov	w11, #0x1                   	// #1
  44e9b4:	sub	x8, x8, #0x8
  44e9b8:	add	x9, x10, x9
  44e9bc:	mov	w10, #0xc0                  	// #192
  44e9c0:	ldr	x12, [sp, #104]
  44e9c4:	tbnz	w12, #0, 44e9e4 <_obstack_memory_used@@Base+0x3820>
  44e9c8:	ldr	x12, [sp, #104]
  44e9cc:	lsl	x11, x11, #1
  44e9d0:	add	x10, x10, #0x1
  44e9d4:	lsr	x12, x12, #1
  44e9d8:	str	x12, [sp, #104]
  44e9dc:	cbnz	x12, 44e9c0 <_obstack_memory_used@@Base+0x37fc>
  44e9e0:	b	44ea18 <_obstack_memory_used@@Base+0x3854>
  44e9e4:	mov	x13, x9
  44e9e8:	mov	x12, x8
  44e9ec:	ldr	x14, [x13], #32
  44e9f0:	add	x12, x12, #0x8
  44e9f4:	tst	x14, x11
  44e9f8:	b.eq	44e9ec <_obstack_memory_used@@Base+0x3828>  // b.none
  44e9fc:	ldr	x14, [sp, #120]
  44ea00:	ldr	x13, [x12]
  44ea04:	ldr	x12, [x12, x14, lsl #3]
  44ea08:	add	x14, x0, x10, lsl #3
  44ea0c:	str	x13, [x14]
  44ea10:	str	x12, [x14, #2048]
  44ea14:	b	44e9c8 <_obstack_memory_used@@Base+0x3804>
  44ea18:	ldr	x8, [sp, #64]
  44ea1c:	tbz	w8, #10, 44ea68 <_obstack_memory_used@@Base+0x38a4>
  44ea20:	ldr	x9, [sp, #120]
  44ea24:	ldr	x8, [sp, #72]
  44ea28:	add	x8, x8, x9, lsl #4
  44ea2c:	ldr	x10, [sp, #48]
  44ea30:	ldrb	w10, [x10, #1]
  44ea34:	tbnz	w10, #2, 44ea54 <_obstack_memory_used@@Base+0x3890>
  44ea38:	ldr	x10, [sp, #48]
  44ea3c:	add	x8, x8, #0x8
  44ea40:	subs	x9, x9, #0x1
  44ea44:	add	x10, x10, #0x20
  44ea48:	str	x10, [sp, #48]
  44ea4c:	b.ne	44ea2c <_obstack_memory_used@@Base+0x3868>  // b.any
  44ea50:	b	44ea68 <_obstack_memory_used@@Base+0x38a4>
  44ea54:	ldr	x8, [x8]
  44ea58:	ldr	w9, [sp, #28]
  44ea5c:	str	x8, [x0, #80]
  44ea60:	tbz	w9, #0, 44ea68 <_obstack_memory_used@@Base+0x38a4>
  44ea64:	str	x8, [x0, #2128]
  44ea68:	ldr	x0, [sp, #72]
  44ea6c:	bl	4046b0 <free@plt>
  44ea70:	ldur	x0, [x29, #-144]
  44ea74:	bl	4046b0 <free@plt>
  44ea78:	mov	w23, #0x10                  	// #16
  44ea7c:	ldr	x8, [sp, #56]
  44ea80:	ldr	x0, [x8, x23]
  44ea84:	bl	4046b0 <free@plt>
  44ea88:	ldr	x8, [sp, #120]
  44ea8c:	add	x23, x23, #0x18
  44ea90:	subs	x8, x8, #0x1
  44ea94:	str	x8, [sp, #120]
  44ea98:	b.ne	44ea7c <_obstack_memory_used@@Base+0x38b8>  // b.any
  44ea9c:	ldr	x0, [sp, #56]
  44eaa0:	bl	4046b0 <free@plt>
  44eaa4:	ldr	x0, [x19]
  44eaa8:	ldr	x25, [sp, #128]
  44eaac:	ldr	x11, [sp, #112]
  44eab0:	ldp	x22, x24, [sp, #8]
  44eab4:	ldr	w20, [sp, #4]
  44eab8:	ldr	x23, [sp, #96]
  44eabc:	cbnz	x0, 44da90 <_obstack_memory_used@@Base+0x28cc>
  44eac0:	b	44dbf0 <_obstack_memory_used@@Base+0x2a2c>
  44eac4:	add	w1, w19, #0x2
  44eac8:	add	x0, sp, #0x130
  44eacc:	mov	x26, x23
  44ead0:	mov	x23, x11
  44ead4:	bl	45810c <_obstack_memory_used@@Base+0xcf48>
  44ead8:	stur	w0, [x29, #-164]
  44eadc:	cbnz	w0, 44f8b4 <_obstack_memory_used@@Base+0x46f0>
  44eae0:	mov	x8, x26
  44eae4:	ldrb	w26, [x26, #104]
  44eae8:	mov	x11, x23
  44eaec:	mov	x23, x8
  44eaf0:	tbz	w26, #5, 44da70 <_obstack_memory_used@@Base+0x28ac>
  44eaf4:	ldr	x8, [x23, #16]
  44eaf8:	cmp	x8, #0x1
  44eafc:	b.lt	44ef4c <_obstack_memory_used@@Base+0x3d88>  // b.tstop
  44eb00:	ldr	x12, [sp, #456]
  44eb04:	mov	x28, xzr
  44eb08:	str	x11, [sp, #112]
  44eb0c:	str	x23, [sp, #96]
  44eb10:	str	x12, [sp, #128]
  44eb14:	b	44eb28 <_obstack_memory_used@@Base+0x3964>
  44eb18:	ldr	x8, [x23, #16]
  44eb1c:	add	x28, x28, #0x1
  44eb20:	cmp	x28, x8
  44eb24:	b.ge	44ef4c <_obstack_memory_used@@Base+0x3d88>  // b.tcont
  44eb28:	ldr	x8, [x23, #24]
  44eb2c:	ldr	x1, [x8, x28, lsl #3]
  44eb30:	ldr	x8, [x12]
  44eb34:	add	x8, x8, x1, lsl #4
  44eb38:	ldr	w26, [x8, #8]
  44eb3c:	tbz	w26, #20, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44eb40:	tst	w26, #0x3ff00
  44eb44:	b.eq	44ec34 <_obstack_memory_used@@Base+0x3a70>  // b.none
  44eb48:	ldr	x8, [sp, #376]
  44eb4c:	tbnz	x8, #63, 44eb84 <_obstack_memory_used@@Base+0x39c0>
  44eb50:	ldr	x9, [sp, #392]
  44eb54:	cmp	x9, x8
  44eb58:	b.eq	44ee3c <_obstack_memory_used@@Base+0x3c78>  // b.none
  44eb5c:	ldr	w9, [sp, #448]
  44eb60:	cmp	w9, #0x2
  44eb64:	b.lt	44eb98 <_obstack_memory_used@@Base+0x39d4>  // b.tstop
  44eb68:	ldr	x9, [sp, #320]
  44eb6c:	ldr	w19, [x9, x8, lsl #2]
  44eb70:	cmn	w19, #0x1
  44eb74:	b.ne	44ebc4 <_obstack_memory_used@@Base+0x3a00>  // b.any
  44eb78:	cmp	x8, #0x0
  44eb7c:	sub	x8, x8, #0x1
  44eb80:	b.gt	44eb6c <_obstack_memory_used@@Base+0x39a8>
  44eb84:	ldr	w8, [sp, #416]
  44eb88:	tst	w8, #0x1
  44eb8c:	cset	w9, eq  // eq = none
  44eb90:	tbnz	w26, #10, 44ec0c <_obstack_memory_used@@Base+0x3a48>
  44eb94:	b	44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44eb98:	ldr	x9, [sp, #312]
  44eb9c:	ldr	x10, [sp, #432]
  44eba0:	ldrb	w8, [x9, x8]
  44eba4:	lsr	x9, x8, #3
  44eba8:	and	x9, x9, #0x18
  44ebac:	ldr	x9, [x10, x9]
  44ebb0:	lsr	x9, x9, x8
  44ebb4:	tbz	w9, #0, 44ebf4 <_obstack_memory_used@@Base+0x3a30>
  44ebb8:	mov	w9, wzr
  44ebbc:	mov	w8, #0x1                   	// #1
  44ebc0:	b	44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44ebc4:	ldrb	w8, [sp, #446]
  44ebc8:	cbnz	w8, 44ee7c <_obstack_memory_used@@Base+0x3cb8>
  44ebcc:	cmp	w19, #0xa
  44ebd0:	b.ne	44ebfc <_obstack_memory_used@@Base+0x3a38>  // b.any
  44ebd4:	ldrb	w8, [sp, #445]
  44ebd8:	cmp	w8, #0x0
  44ebdc:	cset	w8, ne  // ne = any
  44ebe0:	lsl	w8, w8, #1
  44ebe4:	tst	w8, #0x1
  44ebe8:	cset	w9, eq  // eq = none
  44ebec:	tbnz	w26, #10, 44ec0c <_obstack_memory_used@@Base+0x3a48>
  44ebf0:	b	44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44ebf4:	cmp	w8, #0xa
  44ebf8:	b.eq	44ebd4 <_obstack_memory_used@@Base+0x3a10>  // b.none
  44ebfc:	mov	w8, wzr
  44ec00:	tst	w8, #0x1
  44ec04:	cset	w9, eq  // eq = none
  44ec08:	tbz	w26, #10, 44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44ec0c:	tbz	w8, #0, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ec10:	ldr	x10, [x12]
  44ec14:	add	x10, x10, x1, lsl #4
  44ec18:	ldr	w10, [x10, #8]
  44ec1c:	tbnz	w9, #0, 44ec24 <_obstack_memory_used@@Base+0x3a60>
  44ec20:	tbnz	w10, #11, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ec24:	tbnz	w8, #1, 44ec2c <_obstack_memory_used@@Base+0x3a68>
  44ec28:	tbnz	w10, #13, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ec2c:	tbnz	w8, #3, 44ec34 <_obstack_memory_used@@Base+0x3a70>
  44ec30:	tbnz	w10, #15, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ec34:	ldr	x3, [sp, #376]
  44ec38:	add	x2, sp, #0x130
  44ec3c:	mov	x0, x12
  44ec40:	mov	x26, x1
  44ec44:	bl	459b50 <_obstack_memory_used@@Base+0xe98c>
  44ec48:	ldr	x12, [sp, #128]
  44ec4c:	ldr	x11, [sp, #112]
  44ec50:	cbz	w0, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ec54:	ldr	w10, [sp, #528]
  44ec58:	ldp	x9, x19, [sp, #368]
  44ec5c:	ldr	x23, [sp, #496]
  44ec60:	ldr	x8, [sp, #392]
  44ec64:	sxtw	x11, w0
  44ec68:	str	x11, [sp, #104]
  44ec6c:	add	x11, x19, x11
  44ec70:	cmp	w10, w0
  44ec74:	mov	x13, x26
  44ec78:	csel	w10, w0, w10, lt  // lt = tstop
  44ec7c:	cmp	x9, x11
  44ec80:	str	w10, [sp, #528]
  44ec84:	str	x11, [sp, #120]
  44ec88:	b.gt	44ec94 <_obstack_memory_used@@Base+0x3ad0>
  44ec8c:	cmp	x9, x8
  44ec90:	b.lt	44eca8 <_obstack_memory_used@@Base+0x3ae4>  // b.tstop
  44ec94:	ldr	x9, [sp, #352]
  44ec98:	cmp	x9, x11
  44ec9c:	b.gt	44ecc0 <_obstack_memory_used@@Base+0x3afc>
  44eca0:	cmp	x9, x8
  44eca4:	b.ge	44ecc0 <_obstack_memory_used@@Base+0x3afc>  // b.tcont
  44eca8:	add	w1, w11, #0x1
  44ecac:	add	x0, sp, #0x130
  44ecb0:	bl	45810c <_obstack_memory_used@@Base+0xcf48>
  44ecb4:	ldp	x11, x12, [sp, #120]
  44ecb8:	mov	x13, x26
  44ecbc:	cbnz	w0, 44efbc <_obstack_memory_used@@Base+0x3df8>
  44ecc0:	subs	x8, x11, x23
  44ecc4:	b.le	44ecec <_obstack_memory_used@@Base+0x3b28>
  44ecc8:	ldr	x9, [sp, #488]
  44eccc:	lsl	x2, x8, #3
  44ecd0:	mov	w1, wzr
  44ecd4:	add	x9, x9, x23, lsl #3
  44ecd8:	add	x0, x9, #0x8
  44ecdc:	bl	404320 <memset@plt>
  44ece0:	ldp	x11, x12, [sp, #120]
  44ece4:	mov	x13, x26
  44ece8:	str	x11, [sp, #496]
  44ecec:	stur	wzr, [x29, #-96]
  44ecf0:	ldr	x8, [x12, #24]
  44ecf4:	ldr	x9, [sp, #488]
  44ecf8:	ldr	x10, [x12, #48]
  44ecfc:	ldr	x8, [x8, x13, lsl #3]
  44ed00:	ldr	x26, [x9, x11, lsl #3]
  44ed04:	mov	w9, #0x18                  	// #24
  44ed08:	madd	x2, x8, x9, x10
  44ed0c:	cbz	x26, 44ed30 <_obstack_memory_used@@Base+0x3b6c>
  44ed10:	ldr	x1, [x26, #80]
  44ed14:	sub	x0, x29, #0x40
  44ed18:	bl	45850c <_obstack_memory_used@@Base+0xd348>
  44ed1c:	ldr	x11, [sp, #120]
  44ed20:	ldr	x23, [sp, #96]
  44ed24:	stur	w0, [x29, #-96]
  44ed28:	cbz	w0, 44ed44 <_obstack_memory_used@@Base+0x3b80>
  44ed2c:	b	44efd4 <_obstack_memory_used@@Base+0x3e10>
  44ed30:	ldr	x8, [x2, #16]
  44ed34:	ldr	q0, [x2]
  44ed38:	ldr	x23, [sp, #96]
  44ed3c:	stur	x8, [x29, #-48]
  44ed40:	stur	q0, [x29, #-64]
  44ed44:	cmp	x11, #0x0
  44ed48:	b.le	44ee5c <_obstack_memory_used@@Base+0x3c98>
  44ed4c:	ldr	x9, [sp, #392]
  44ed50:	ldr	x1, [sp, #128]
  44ed54:	sub	x8, x11, #0x1
  44ed58:	cmp	x9, x8
  44ed5c:	b.eq	44ee68 <_obstack_memory_used@@Base+0x3ca4>  // b.none
  44ed60:	ldr	w9, [sp, #448]
  44ed64:	cmp	w9, #0x2
  44ed68:	b.lt	44ed9c <_obstack_memory_used@@Base+0x3bd8>  // b.tstop
  44ed6c:	ldr	x9, [sp, #320]
  44ed70:	ldr	x8, [sp, #104]
  44ed74:	sub	x9, x9, #0x4
  44ed78:	add	x8, x19, x8
  44ed7c:	ldr	w19, [x9, x8, lsl #2]
  44ed80:	cmn	w19, #0x1
  44ed84:	b.ne	44edc4 <_obstack_memory_used@@Base+0x3c00>  // b.any
  44ed88:	sub	x8, x8, #0x1
  44ed8c:	cmp	x8, #0x0
  44ed90:	b.gt	44ed7c <_obstack_memory_used@@Base+0x3bb8>
  44ed94:	ldr	w3, [sp, #416]
  44ed98:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44ed9c:	ldr	x9, [sp, #312]
  44eda0:	ldr	x10, [sp, #432]
  44eda4:	ldrb	w8, [x9, x8]
  44eda8:	lsr	x9, x8, #3
  44edac:	and	x9, x9, #0x18
  44edb0:	ldr	x9, [x10, x9]
  44edb4:	lsr	x9, x9, x8
  44edb8:	tbz	w9, #0, 44ede8 <_obstack_memory_used@@Base+0x3c24>
  44edbc:	mov	w3, #0x1                   	// #1
  44edc0:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44edc4:	ldrb	w8, [sp, #446]
  44edc8:	cbnz	w8, 44eeb4 <_obstack_memory_used@@Base+0x3cf0>
  44edcc:	cmp	w19, #0xa
  44edd0:	b.ne	44edf0 <_obstack_memory_used@@Base+0x3c2c>  // b.any
  44edd4:	ldrb	w8, [sp, #445]
  44edd8:	cmp	w8, #0x0
  44eddc:	cset	w8, ne  // ne = any
  44ede0:	lsl	w3, w8, #1
  44ede4:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44ede8:	cmp	w8, #0xa
  44edec:	b.eq	44edd4 <_obstack_memory_used@@Base+0x3c10>  // b.none
  44edf0:	mov	w3, wzr
  44edf4:	sub	x0, x29, #0x60
  44edf8:	sub	x2, x29, #0x40
  44edfc:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  44ee00:	ldr	x8, [sp, #488]
  44ee04:	ldr	x9, [sp, #120]
  44ee08:	str	x0, [x8, x9, lsl #3]
  44ee0c:	cbz	x26, 44ee1c <_obstack_memory_used@@Base+0x3c58>
  44ee10:	ldur	x0, [x29, #-48]
  44ee14:	bl	4046b0 <free@plt>
  44ee18:	ldr	x9, [sp, #120]
  44ee1c:	ldr	x8, [sp, #488]
  44ee20:	ldr	x11, [sp, #112]
  44ee24:	ldr	x12, [sp, #128]
  44ee28:	ldr	x8, [x8, x9, lsl #3]
  44ee2c:	cbnz	x8, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ee30:	ldur	w0, [x29, #-96]
  44ee34:	cbz	w0, 44eb18 <_obstack_memory_used@@Base+0x3954>
  44ee38:	b	44efc8 <_obstack_memory_used@@Base+0x3e04>
  44ee3c:	ldr	w8, [sp, #464]
  44ee40:	mov	w9, #0xa                   	// #10
  44ee44:	and	w8, w8, #0x2
  44ee48:	eor	w8, w8, w9
  44ee4c:	tst	w8, #0x1
  44ee50:	cset	w9, eq  // eq = none
  44ee54:	tbnz	w26, #10, 44ec0c <_obstack_memory_used@@Base+0x3a48>
  44ee58:	b	44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44ee5c:	ldr	w3, [sp, #416]
  44ee60:	ldr	x1, [sp, #128]
  44ee64:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44ee68:	ldr	w8, [sp, #464]
  44ee6c:	mov	w9, #0xa                   	// #10
  44ee70:	and	w8, w8, #0x2
  44ee74:	eor	w3, w8, w9
  44ee78:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44ee7c:	mov	w0, w19
  44ee80:	str	x1, [sp, #120]
  44ee84:	mov	x23, x24
  44ee88:	bl	404880 <iswalnum@plt>
  44ee8c:	mov	w9, wzr
  44ee90:	cmp	w19, #0x5f
  44ee94:	mov	w8, #0x1                   	// #1
  44ee98:	b.eq	44eedc <_obstack_memory_used@@Base+0x3d18>  // b.none
  44ee9c:	ldp	x11, x1, [sp, #112]
  44eea0:	mov	x24, x23
  44eea4:	ldr	x23, [sp, #96]
  44eea8:	ldr	x12, [sp, #128]
  44eeac:	cbz	w0, 44ebcc <_obstack_memory_used@@Base+0x3a08>
  44eeb0:	b	44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44eeb4:	mov	w0, w19
  44eeb8:	mov	x23, x24
  44eebc:	bl	404880 <iswalnum@plt>
  44eec0:	cmp	w19, #0x5f
  44eec4:	mov	w3, #0x1                   	// #1
  44eec8:	b.eq	44eef0 <_obstack_memory_used@@Base+0x3d2c>  // b.none
  44eecc:	ldr	x23, [sp, #96]
  44eed0:	ldr	x1, [sp, #128]
  44eed4:	cbz	w0, 44edcc <_obstack_memory_used@@Base+0x3c08>
  44eed8:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44eedc:	ldp	x11, x1, [sp, #112]
  44eee0:	mov	x24, x23
  44eee4:	ldr	x23, [sp, #96]
  44eee8:	ldr	x12, [sp, #128]
  44eeec:	b	44ec10 <_obstack_memory_used@@Base+0x3a4c>
  44eef0:	ldr	x23, [sp, #96]
  44eef4:	ldr	x1, [sp, #128]
  44eef8:	b	44edf4 <_obstack_memory_used@@Base+0x3c30>
  44eefc:	ldr	x8, [sp, #376]
  44ef00:	cmp	x8, #0x0
  44ef04:	b.le	44ef44 <_obstack_memory_used@@Base+0x3d80>
  44ef08:	ldr	x10, [sp, #392]
  44ef0c:	sub	x9, x8, #0x1
  44ef10:	cmp	x10, x9
  44ef14:	b.eq	44efdc <_obstack_memory_used@@Base+0x3e18>  // b.none
  44ef18:	ldr	w10, [sp, #448]
  44ef1c:	cmp	w10, #0x2
  44ef20:	b.lt	44ef54 <_obstack_memory_used@@Base+0x3d90>  // b.tstop
  44ef24:	ldr	x9, [sp, #320]
  44ef28:	sub	x9, x9, #0x4
  44ef2c:	ldr	w19, [x9, x8, lsl #2]
  44ef30:	cmn	w19, #0x1
  44ef34:	b.ne	44ef7c <_obstack_memory_used@@Base+0x3db8>  // b.any
  44ef38:	sub	x8, x8, #0x1
  44ef3c:	cmp	x8, #0x0
  44ef40:	b.gt	44ef2c <_obstack_memory_used@@Base+0x3d68>
  44ef44:	ldr	w8, [sp, #416]
  44ef48:	b	44efac <_obstack_memory_used@@Base+0x3de8>
  44ef4c:	stur	wzr, [x29, #-164]
  44ef50:	b	44da70 <_obstack_memory_used@@Base+0x28ac>
  44ef54:	ldr	x8, [sp, #312]
  44ef58:	ldr	x10, [sp, #432]
  44ef5c:	ldrb	w8, [x8, x9]
  44ef60:	lsr	x9, x8, #3
  44ef64:	and	x9, x9, #0x18
  44ef68:	ldr	x9, [x10, x9]
  44ef6c:	lsr	x9, x9, x8
  44ef70:	tbz	w9, #0, 44efa0 <_obstack_memory_used@@Base+0x3ddc>
  44ef74:	mov	w8, #0x1                   	// #1
  44ef78:	b	44efac <_obstack_memory_used@@Base+0x3de8>
  44ef7c:	ldrb	w8, [sp, #446]
  44ef80:	cbnz	w8, 44efe4 <_obstack_memory_used@@Base+0x3e20>
  44ef84:	cmp	w19, #0xa
  44ef88:	b.ne	44efa8 <_obstack_memory_used@@Base+0x3de4>  // b.any
  44ef8c:	ldrb	w8, [sp, #445]
  44ef90:	cmp	w8, #0x0
  44ef94:	cset	w8, ne  // ne = any
  44ef98:	lsl	w8, w8, #1
  44ef9c:	b	44efac <_obstack_memory_used@@Base+0x3de8>
  44efa0:	cmp	w8, #0xa
  44efa4:	b.eq	44ef8c <_obstack_memory_used@@Base+0x3dc8>  // b.none
  44efa8:	mov	w8, wzr
  44efac:	ubfiz	w8, w8, #8, #1
  44efb0:	orr	x8, x8, x28
  44efb4:	ldr	x28, [x26, x8, lsl #3]
  44efb8:	b	44da94 <_obstack_memory_used@@Base+0x28d0>
  44efbc:	ldr	x11, [sp, #112]
  44efc0:	ldr	x23, [sp, #96]
  44efc4:	stur	w0, [x29, #-96]
  44efc8:	mov	x28, xzr
  44efcc:	stur	w0, [x29, #-164]
  44efd0:	b	44da94 <_obstack_memory_used@@Base+0x28d0>
  44efd4:	ldr	x11, [sp, #112]
  44efd8:	b	44efc8 <_obstack_memory_used@@Base+0x3e04>
  44efdc:	mov	w8, #0xa                   	// #10
  44efe0:	b	44efac <_obstack_memory_used@@Base+0x3de8>
  44efe4:	mov	w0, w19
  44efe8:	str	x23, [sp, #96]
  44efec:	mov	x23, x24
  44eff0:	str	x11, [sp, #112]
  44eff4:	bl	404880 <iswalnum@plt>
  44eff8:	cmp	w19, #0x5f
  44effc:	mov	w8, #0x1                   	// #1
  44f000:	b.eq	44f084 <_obstack_memory_used@@Base+0x3ec0>  // b.none
  44f004:	ldr	x11, [sp, #112]
  44f008:	mov	x24, x23
  44f00c:	ldr	x23, [sp, #96]
  44f010:	cbz	w0, 44ef84 <_obstack_memory_used@@Base+0x3dc0>
  44f014:	b	44efac <_obstack_memory_used@@Base+0x3de8>
  44f018:	stur	w0, [x29, #-132]
  44f01c:	ldr	x0, [sp, #72]
  44f020:	bl	4046b0 <free@plt>
  44f024:	ldur	x0, [x29, #-144]
  44f028:	bl	4046b0 <free@plt>
  44f02c:	ldr	x8, [sp, #120]
  44f030:	cmp	x8, #0x1
  44f034:	b.lt	44f058 <_obstack_memory_used@@Base+0x3e94>  // b.tstop
  44f038:	ldr	x8, [sp, #56]
  44f03c:	add	x19, x8, #0x10
  44f040:	ldr	x0, [x19], #24
  44f044:	bl	4046b0 <free@plt>
  44f048:	ldr	x8, [sp, #120]
  44f04c:	subs	x8, x8, #0x1
  44f050:	str	x8, [sp, #120]
  44f054:	b.ne	44f040 <_obstack_memory_used@@Base+0x3e7c>  // b.any
  44f058:	ldr	x0, [sp, #56]
  44f05c:	bl	4046b0 <free@plt>
  44f060:	ldr	x25, [sp, #128]
  44f064:	ldr	x11, [sp, #112]
  44f068:	ldp	x22, x24, [sp, #8]
  44f06c:	ldr	w20, [sp, #4]
  44f070:	ldr	x23, [sp, #96]
  44f074:	mov	w8, #0xc                   	// #12
  44f078:	mov	x28, xzr
  44f07c:	stur	w8, [x29, #-164]
  44f080:	b	44da94 <_obstack_memory_used@@Base+0x28d0>
  44f084:	ldr	x11, [sp, #112]
  44f088:	mov	x24, x23
  44f08c:	ldr	x23, [sp, #96]
  44f090:	b	44efac <_obstack_memory_used@@Base+0x3de8>
  44f094:	mov	x0, x20
  44f098:	bl	4046b0 <free@plt>
  44f09c:	b	44f038 <_obstack_memory_used@@Base+0x3e74>
  44f0a0:	ldr	x24, [sp, #200]
  44f0a4:	b	44f0b0 <_obstack_memory_used@@Base+0x3eec>
  44f0a8:	ldr	x21, [sp, #272]
  44f0ac:	mov	x11, x19
  44f0b0:	cbz	x24, 44f0c0 <_obstack_memory_used@@Base+0x3efc>
  44f0b4:	ldr	x8, [x24]
  44f0b8:	add	x8, x8, x11
  44f0bc:	str	x8, [x24]
  44f0c0:	ldr	x20, [sp, #288]
  44f0c4:	ldr	x19, [sp, #256]
  44f0c8:	cmn	x27, #0x1
  44f0cc:	b.eq	44f418 <_obstack_memory_used@@Base+0x4254>  // b.none
  44f0d0:	cmn	x27, #0x2
  44f0d4:	b.eq	44f830 <_obstack_memory_used@@Base+0x466c>  // b.none
  44f0d8:	ldr	x23, [sp, #224]
  44f0dc:	str	x27, [sp, #472]
  44f0e0:	cmp	x23, #0x2
  44f0e4:	b.cc	44f2cc <_obstack_memory_used@@Base+0x4108>  // b.lo, b.ul, b.last
  44f0e8:	ldr	x8, [sp, #168]
  44f0ec:	ldrb	w8, [x8, #56]
  44f0f0:	tbnz	w8, #4, 44f2cc <_obstack_memory_used@@Base+0x4108>
  44f0f4:	ldr	x8, [sp, #488]
  44f0f8:	add	x0, sp, #0x130
  44f0fc:	mov	x2, x27
  44f100:	ldr	x1, [x8, x27, lsl #3]
  44f104:	bl	4568dc <_obstack_memory_used@@Base+0xb718>
  44f108:	str	x0, [sp, #480]
  44f10c:	ldrb	w8, [x25, #176]
  44f110:	mov	x19, x0
  44f114:	tbnz	w8, #0, 44f2f0 <_obstack_memory_used@@Base+0x412c>
  44f118:	ldr	x8, [x25, #152]
  44f11c:	cbnz	x8, 44f2f0 <_obstack_memory_used@@Base+0x412c>
  44f120:	b	44f604 <_obstack_memory_used@@Base+0x4440>
  44f124:	mov	x27, x19
  44f128:	ldr	x20, [sp, #288]
  44f12c:	ldp	x19, x23, [sp, #256]
  44f130:	b	44f0c8 <_obstack_memory_used@@Base+0x3f04>
  44f134:	ldp	x23, x21, [sp, #264]
  44f138:	b	44f0b0 <_obstack_memory_used@@Base+0x3eec>
  44f13c:	ldr	x21, [sp, #272]
  44f140:	b	44f0b0 <_obstack_memory_used@@Base+0x3eec>
  44f144:	tbnz	w26, #31, 44f274 <_obstack_memory_used@@Base+0x40b0>
  44f148:	ldr	w8, [sp, #196]
  44f14c:	ldr	x19, [sp, #256]
  44f150:	cbz	w8, 44f2ac <_obstack_memory_used@@Base+0x40e8>
  44f154:	mov	x27, x11
  44f158:	mov	w10, #0x1                   	// #1
  44f15c:	b	44da20 <_obstack_memory_used@@Base+0x285c>
  44f160:	ldr	x8, [x28, #16]
  44f164:	cmp	x8, #0x1
  44f168:	b.lt	44f23c <_obstack_memory_used@@Base+0x4078>  // b.tstop
  44f16c:	ldr	x20, [sp, #456]
  44f170:	mov	x21, xzr
  44f174:	b	44f1a0 <_obstack_memory_used@@Base+0x3fdc>
  44f178:	add	x9, x23, #0x1
  44f17c:	str	x26, [x8, #8]
  44f180:	str	x9, [sp, #536]
  44f184:	str	xzr, [x8]
  44f188:	ldr	x8, [x28, #16]
  44f18c:	ldr	x23, [sp, #264]
  44f190:	mov	x11, x27
  44f194:	add	x21, x21, #0x1
  44f198:	cmp	x21, x8
  44f19c:	b.ge	44f23c <_obstack_memory_used@@Base+0x4078>  // b.tcont
  44f1a0:	ldr	x9, [x28, #24]
  44f1a4:	ldr	x26, [x9, x21, lsl #3]
  44f1a8:	ldr	x9, [x20]
  44f1ac:	add	x10, x9, x26, lsl #4
  44f1b0:	ldrb	w10, [x10, #8]
  44f1b4:	cmp	w10, #0x8
  44f1b8:	b.ne	44f194 <_obstack_memory_used@@Base+0x3fd0>  // b.any
  44f1bc:	lsl	x10, x26, #4
  44f1c0:	ldr	x9, [x9, x10]
  44f1c4:	cmp	x9, #0x3f
  44f1c8:	b.gt	44f194 <_obstack_memory_used@@Base+0x3fd0>
  44f1cc:	ldr	x10, [x20, #160]
  44f1d0:	lsr	x9, x10, x9
  44f1d4:	tbz	w9, #0, 44f194 <_obstack_memory_used@@Base+0x3fd0>
  44f1d8:	ldr	x23, [sp, #536]
  44f1dc:	ldr	x8, [sp, #544]
  44f1e0:	mov	x27, x11
  44f1e4:	cmp	x23, x8
  44f1e8:	b.eq	44f214 <_obstack_memory_used@@Base+0x4050>  // b.none
  44f1ec:	ldr	x19, [sp, #552]
  44f1f0:	mov	w0, #0x1                   	// #1
  44f1f4:	mov	w1, #0x30                  	// #48
  44f1f8:	bl	4043d0 <calloc@plt>
  44f1fc:	lsl	x8, x23, #3
  44f200:	str	x0, [x19, x8]
  44f204:	ldr	x9, [sp, #552]
  44f208:	ldr	x8, [x9, x8]
  44f20c:	cbnz	x8, 44f178 <_obstack_memory_used@@Base+0x3fb4>
  44f210:	b	44f2b8 <_obstack_memory_used@@Base+0x40f4>
  44f214:	ldr	x0, [sp, #552]
  44f218:	lsl	x1, x23, #4
  44f21c:	bl	404450 <realloc@plt>
  44f220:	cbz	x0, 44f2b8 <_obstack_memory_used@@Base+0x40f4>
  44f224:	lsl	x8, x23, #1
  44f228:	ldr	x23, [sp, #536]
  44f22c:	mov	x19, x0
  44f230:	str	x0, [sp, #552]
  44f234:	str	x8, [sp, #544]
  44f238:	b	44f1f0 <_obstack_memory_used@@Base+0x402c>
  44f23c:	stur	wzr, [x29, #-164]
  44f240:	ldrb	w8, [x28, #104]
  44f244:	ldr	x21, [sp, #272]
  44f248:	mov	w20, wzr
  44f24c:	tbz	w8, #6, 44da10 <_obstack_memory_used@@Base+0x284c>
  44f250:	add	x1, x28, #0x8
  44f254:	add	x0, sp, #0x130
  44f258:	mov	x19, x11
  44f25c:	bl	457834 <_obstack_memory_used@@Base+0xc670>
  44f260:	stur	w0, [x29, #-164]
  44f264:	cbnz	w0, 44f554 <_obstack_memory_used@@Base+0x4390>
  44f268:	mov	w20, wzr
  44f26c:	mov	x11, x19
  44f270:	b	44da10 <_obstack_memory_used@@Base+0x284c>
  44f274:	add	x0, sp, #0x130
  44f278:	mov	x1, x28
  44f27c:	mov	x2, x11
  44f280:	mov	x19, x11
  44f284:	bl	4568dc <_obstack_memory_used@@Base+0xb718>
  44f288:	cmp	x0, #0x0
  44f28c:	ldr	w9, [sp, #196]
  44f290:	mov	x11, x19
  44f294:	csinv	x27, x19, xzr, ne  // ne = any
  44f298:	ldr	x19, [sp, #256]
  44f29c:	cset	w8, eq  // eq = none
  44f2a0:	cset	w10, ne  // ne = any
  44f2a4:	orr	w8, w9, w8
  44f2a8:	tbnz	w8, #0, 44da20 <_obstack_memory_used@@Base+0x285c>
  44f2ac:	ldr	x20, [sp, #288]
  44f2b0:	mov	x27, x11
  44f2b4:	b	44f0c8 <_obstack_memory_used@@Base+0x3f04>
  44f2b8:	mov	w27, #0xc                   	// #12
  44f2bc:	ldr	x23, [sp, #224]
  44f2c0:	str	x27, [sp, #472]
  44f2c4:	cmp	x23, #0x2
  44f2c8:	b.cs	44f0e8 <_obstack_memory_used@@Base+0x3f24>  // b.hs, b.nlast
  44f2cc:	ldr	x8, [x25, #152]
  44f2d0:	cbz	x8, 44f604 <_obstack_memory_used@@Base+0x4440>
  44f2d4:	ldr	x8, [sp, #488]
  44f2d8:	add	x0, sp, #0x130
  44f2dc:	mov	x2, x27
  44f2e0:	ldr	x1, [x8, x27, lsl #3]
  44f2e4:	bl	4568dc <_obstack_memory_used@@Base+0xb718>
  44f2e8:	mov	x19, x0
  44f2ec:	str	x0, [sp, #480]
  44f2f0:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  44f2f4:	cmp	x27, x8
  44f2f8:	b.cs	44f830 <_obstack_memory_used@@Base+0x466c>  // b.hs, b.nlast
  44f2fc:	ldr	x21, [sp, #456]
  44f300:	lsl	x8, x27, #3
  44f304:	add	x20, x8, #0x8
  44f308:	mov	x0, x20
  44f30c:	bl	404210 <malloc@plt>
  44f310:	mov	x26, x0
  44f314:	cbz	x0, 44f838 <_obstack_memory_used@@Base+0x4674>
  44f318:	ldr	x8, [x21, #152]
  44f31c:	cbz	x8, 44f3c8 <_obstack_memory_used@@Base+0x4204>
  44f320:	mov	x0, x20
  44f324:	bl	404210 <malloc@plt>
  44f328:	cbz	x0, 44f838 <_obstack_memory_used@@Base+0x4674>
  44f32c:	mov	x20, x0
  44f330:	lsl	x8, x27, #3
  44f334:	add	x2, x8, #0x8
  44f338:	mov	x0, x20
  44f33c:	mov	w1, wzr
  44f340:	bl	404320 <memset@plt>
  44f344:	ldr	x8, [sp, #176]
  44f348:	add	x0, sp, #0x130
  44f34c:	sub	x1, x29, #0x40
  44f350:	stp	x26, x20, [x29, #-64]
  44f354:	stp	x19, x27, [x29, #-48]
  44f358:	stp	xzr, xzr, [x8, #8]
  44f35c:	str	xzr, [x8]
  44f360:	bl	45a0f0 <_obstack_memory_used@@Base+0xef2c>
  44f364:	cbnz	w0, 44f510 <_obstack_memory_used@@Base+0x434c>
  44f368:	ldr	x8, [x26]
  44f36c:	cbnz	x8, 44f448 <_obstack_memory_used@@Base+0x4284>
  44f370:	ldr	x9, [x20]
  44f374:	cbnz	x9, 44f448 <_obstack_memory_used@@Base+0x4284>
  44f378:	subs	x27, x27, #0x1
  44f37c:	b.lt	44f4e8 <_obstack_memory_used@@Base+0x4324>  // b.tstop
  44f380:	ldr	x8, [sp, #488]
  44f384:	ldr	x19, [sp, #256]
  44f388:	b	44f39c <_obstack_memory_used@@Base+0x41d8>
  44f38c:	add	x9, x27, #0x1
  44f390:	sub	x27, x27, #0x1
  44f394:	cmp	x9, #0x2
  44f398:	b.lt	44f3c0 <_obstack_memory_used@@Base+0x41fc>  // b.tstop
  44f39c:	ldr	x1, [x8, x27, lsl #3]
  44f3a0:	cbz	x1, 44f38c <_obstack_memory_used@@Base+0x41c8>
  44f3a4:	ldrb	w9, [x1, #104]
  44f3a8:	tbz	w9, #4, 44f38c <_obstack_memory_used@@Base+0x41c8>
  44f3ac:	add	x0, sp, #0x130
  44f3b0:	mov	x2, x27
  44f3b4:	bl	4568dc <_obstack_memory_used@@Base+0xb718>
  44f3b8:	mov	x19, x0
  44f3bc:	b	44f330 <_obstack_memory_used@@Base+0x416c>
  44f3c0:	ldr	x21, [sp, #272]
  44f3c4:	b	44f400 <_obstack_memory_used@@Base+0x423c>
  44f3c8:	ldr	x8, [sp, #176]
  44f3cc:	add	x0, sp, #0x130
  44f3d0:	sub	x1, x29, #0x40
  44f3d4:	stp	x26, xzr, [x29, #-64]
  44f3d8:	stp	x19, x27, [x29, #-48]
  44f3dc:	stp	xzr, xzr, [x8]
  44f3e0:	str	xzr, [x8, #16]
  44f3e4:	bl	45a0f0 <_obstack_memory_used@@Base+0xef2c>
  44f3e8:	cbnz	w0, 44f518 <_obstack_memory_used@@Base+0x4354>
  44f3ec:	ldr	x8, [x26]
  44f3f0:	ldr	x21, [sp, #272]
  44f3f4:	cbnz	x8, 44f5f4 <_obstack_memory_used@@Base+0x4430>
  44f3f8:	ldr	x19, [sp, #256]
  44f3fc:	mov	x20, xzr
  44f400:	mov	x0, x26
  44f404:	bl	4046b0 <free@plt>
  44f408:	mov	x0, x20
  44f40c:	bl	4046b0 <free@plt>
  44f410:	ldr	x20, [sp, #288]
  44f414:	ldr	x23, [sp, #264]
  44f418:	add	x0, sp, #0x130
  44f41c:	bl	456a44 <_obstack_memory_used@@Base+0xb880>
  44f420:	ldur	x8, [x29, #-176]
  44f424:	ldr	x9, [sp, #296]
  44f428:	mov	w28, #0x1                   	// #1
  44f42c:	add	x26, x8, x9
  44f430:	cmp	x26, x19
  44f434:	stur	x26, [x29, #-176]
  44f438:	b.lt	44f560 <_obstack_memory_used@@Base+0x439c>  // b.tstop
  44f43c:	cmp	x23, x26
  44f440:	b.ge	44d690 <_obstack_memory_used@@Base+0x24cc>  // b.tcont
  44f444:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44f448:	tbnz	x27, #63, 44f4f4 <_obstack_memory_used@@Base+0x4330>
  44f44c:	str	x25, [sp, #128]
  44f450:	mov	x23, x20
  44f454:	mov	x24, x26
  44f458:	mov	x25, x27
  44f45c:	ldr	x9, [x23]
  44f460:	cbnz	x8, 44f478 <_obstack_memory_used@@Base+0x42b4>
  44f464:	b	44f4c0 <_obstack_memory_used@@Base+0x42fc>
  44f468:	ldr	x8, [x24, #8]!
  44f46c:	sub	x25, x25, #0x1
  44f470:	ldr	x9, [x23, #8]!
  44f474:	cbz	x8, 44f4c0 <_obstack_memory_used@@Base+0x42fc>
  44f478:	cbz	x9, 44f4c4 <_obstack_memory_used@@Base+0x4300>
  44f47c:	add	x1, x8, #0x8
  44f480:	add	x2, x9, #0x8
  44f484:	sub	x0, x29, #0x60
  44f488:	bl	45850c <_obstack_memory_used@@Base+0xd348>
  44f48c:	stur	w0, [x29, #-128]
  44f490:	cbnz	w0, 44f54c <_obstack_memory_used@@Base+0x4388>
  44f494:	sub	x0, x29, #0x80
  44f498:	sub	x2, x29, #0x60
  44f49c:	mov	x1, x21
  44f4a0:	bl	4598c8 <_obstack_memory_used@@Base+0xe704>
  44f4a4:	ldur	x8, [x29, #-80]
  44f4a8:	str	x0, [x24]
  44f4ac:	mov	x0, x8
  44f4b0:	bl	4046b0 <free@plt>
  44f4b4:	ldur	w28, [x29, #-128]
  44f4b8:	cbz	w28, 44f4c4 <_obstack_memory_used@@Base+0x4300>
  44f4bc:	b	44f4cc <_obstack_memory_used@@Base+0x4308>
  44f4c0:	str	x9, [x24]
  44f4c4:	cbnz	x25, 44f468 <_obstack_memory_used@@Base+0x42a4>
  44f4c8:	mov	w28, wzr
  44f4cc:	ldr	x25, [sp, #128]
  44f4d0:	ldr	x23, [sp, #224]
  44f4d4:	mov	x0, x20
  44f4d8:	bl	4046b0 <free@plt>
  44f4dc:	ldr	x21, [sp, #272]
  44f4e0:	cbz	w28, 44f5f4 <_obstack_memory_used@@Base+0x4430>
  44f4e4:	b	44f508 <_obstack_memory_used@@Base+0x4344>
  44f4e8:	ldr	x19, [sp, #256]
  44f4ec:	ldr	x21, [sp, #272]
  44f4f0:	b	44f400 <_obstack_memory_used@@Base+0x423c>
  44f4f4:	mov	w28, wzr
  44f4f8:	mov	x0, x20
  44f4fc:	bl	4046b0 <free@plt>
  44f500:	ldr	x21, [sp, #272]
  44f504:	cbz	w28, 44f5f4 <_obstack_memory_used@@Base+0x4430>
  44f508:	mov	x20, xzr
  44f50c:	b	44f524 <_obstack_memory_used@@Base+0x4360>
  44f510:	mov	w28, w0
  44f514:	b	44f520 <_obstack_memory_used@@Base+0x435c>
  44f518:	mov	w28, w0
  44f51c:	mov	x20, xzr
  44f520:	ldr	x21, [sp, #272]
  44f524:	mov	x0, x26
  44f528:	bl	4046b0 <free@plt>
  44f52c:	mov	x0, x20
  44f530:	bl	4046b0 <free@plt>
  44f534:	ldr	x20, [sp, #288]
  44f538:	cbz	w28, 44f604 <_obstack_memory_used@@Base+0x4440>
  44f53c:	ldp	x19, x23, [sp, #256]
  44f540:	cmp	w28, #0x1
  44f544:	b.eq	44f418 <_obstack_memory_used@@Base+0x4254>  // b.none
  44f548:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44f54c:	mov	w28, w0
  44f550:	b	44f4cc <_obstack_memory_used@@Base+0x4308>
  44f554:	sxtw	x27, w0
  44f558:	b	44f0c0 <_obstack_memory_used@@Base+0x3efc>
  44f55c:	mov	w28, #0x1                   	// #1
  44f560:	ldr	x0, [sp, #488]
  44f564:	bl	4046b0 <free@plt>
  44f568:	ldr	x8, [x25, #152]
  44f56c:	cbz	x8, 44f588 <_obstack_memory_used@@Base+0x43c4>
  44f570:	add	x0, sp, #0x130
  44f574:	bl	456a44 <_obstack_memory_used@@Base+0xb880>
  44f578:	ldr	x0, [sp, #552]
  44f57c:	bl	4046b0 <free@plt>
  44f580:	ldr	x0, [sp, #520]
  44f584:	bl	4046b0 <free@plt>
  44f588:	ldr	x0, [sp, #320]
  44f58c:	bl	4046b0 <free@plt>
  44f590:	ldr	x0, [sp, #328]
  44f594:	bl	4046b0 <free@plt>
  44f598:	ldrb	w8, [sp, #443]
  44f59c:	cbz	w8, 44f5a8 <_obstack_memory_used@@Base+0x43e4>
  44f5a0:	ldr	x0, [sp, #312]
  44f5a4:	bl	4046b0 <free@plt>
  44f5a8:	mov	w0, w28
  44f5ac:	add	sp, sp, #0x2e0
  44f5b0:	ldp	x20, x19, [sp, #80]
  44f5b4:	ldp	x22, x21, [sp, #64]
  44f5b8:	ldp	x24, x23, [sp, #48]
  44f5bc:	ldp	x26, x25, [sp, #32]
  44f5c0:	ldp	x28, x27, [sp, #16]
  44f5c4:	ldp	x29, x30, [sp], #96
  44f5c8:	ret
  44f5cc:	ldr	x8, [x8, #16]
  44f5d0:	cbz	x8, 44f5dc <_obstack_memory_used@@Base+0x4418>
  44f5d4:	ldrsb	w8, [x28, #56]
  44f5d8:	tbnz	w8, #31, 44d3c4 <_obstack_memory_used@@Base+0x2200>
  44f5dc:	mov	x21, xzr
  44f5e0:	cbz	x26, 44f66c <_obstack_memory_used@@Base+0x44a8>
  44f5e4:	mov	x26, x21
  44f5e8:	cbz	x4, 44d3c8 <_obstack_memory_used@@Base+0x2204>
  44f5ec:	mov	w28, #0x1                   	// #1
  44f5f0:	b	44f5a8 <_obstack_memory_used@@Base+0x43e4>
  44f5f4:	ldr	x0, [sp, #488]
  44f5f8:	bl	4046b0 <free@plt>
  44f5fc:	stp	x19, x26, [sp, #480]
  44f600:	str	x27, [sp, #472]
  44f604:	cbz	x23, 44f664 <_obstack_memory_used@@Base+0x44a0>
  44f608:	ldr	x19, [sp, #152]
  44f60c:	cmp	x23, #0x1
  44f610:	b.eq	44f634 <_obstack_memory_used@@Base+0x4470>  // b.none
  44f614:	ldr	x8, [sp, #160]
  44f618:	ldr	x9, [sp, #144]
  44f61c:	mov	w1, #0xff                  	// #255
  44f620:	add	x0, x8, #0x10
  44f624:	mvn	x8, x19
  44f628:	add	x8, x8, x9
  44f62c:	lsl	x2, x8, #4
  44f630:	bl	404320 <memset@plt>
  44f634:	ldr	x9, [sp, #160]
  44f638:	ldr	x8, [sp, #472]
  44f63c:	cmp	x23, #0x2
  44f640:	stp	xzr, x8, [x9]
  44f644:	ldr	x9, [sp, #168]
  44f648:	b.cc	44f698 <_obstack_memory_used@@Base+0x44d4>  // b.lo, b.ul, b.last
  44f64c:	ldrb	w8, [x9, #56]
  44f650:	tbnz	w8, #4, 44f698 <_obstack_memory_used@@Base+0x44d4>
  44f654:	ldrb	w8, [x25, #176]
  44f658:	tbnz	w8, #0, 44f674 <_obstack_memory_used@@Base+0x44b0>
  44f65c:	mov	w4, wzr
  44f660:	b	44f680 <_obstack_memory_used@@Base+0x44bc>
  44f664:	mov	w28, wzr
  44f668:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44f66c:	mov	x26, x21
  44f670:	b	44d3c8 <_obstack_memory_used@@Base+0x2204>
  44f674:	ldr	x8, [x25, #152]
  44f678:	cmp	x8, #0x0
  44f67c:	cset	w4, gt
  44f680:	ldr	x0, [x9]
  44f684:	ldr	x3, [sp, #160]
  44f688:	add	x1, sp, #0x130
  44f68c:	mov	x2, x23
  44f690:	bl	456b08 <_obstack_memory_used@@Base+0xb944>
  44f694:	cbnz	w0, 44f81c <_obstack_memory_used@@Base+0x4658>
  44f698:	ldrb	w9, [sp, #444]
  44f69c:	ldur	x8, [x29, #-176]
  44f6a0:	cbnz	w9, 44f848 <_obstack_memory_used@@Base+0x4684>
  44f6a4:	cmp	x23, #0x1
  44f6a8:	csinc	x10, x23, xzr, hi  // hi = pmore
  44f6ac:	cmp	x10, #0x3
  44f6b0:	b.cs	44f6bc <_obstack_memory_used@@Base+0x44f8>  // b.hs, b.nlast
  44f6b4:	mov	x9, xzr
  44f6b8:	b	44f7d8 <_obstack_memory_used@@Base+0x4614>
  44f6bc:	ldr	x11, [sp, #160]
  44f6c0:	and	x9, x10, #0xfffffffffffffffe
  44f6c4:	mov	x12, x9
  44f6c8:	add	x11, x11, #0x10
  44f6cc:	b	44f6dc <_obstack_memory_used@@Base+0x4518>
  44f6d0:	subs	x12, x12, #0x2
  44f6d4:	add	x11, x11, #0x20
  44f6d8:	b.eq	44f740 <_obstack_memory_used@@Base+0x457c>  // b.none
  44f6dc:	ldur	x14, [x11, #-16]
  44f6e0:	ldr	x13, [x11]
  44f6e4:	cmn	x14, #0x1
  44f6e8:	b.eq	44f6f4 <_obstack_memory_used@@Base+0x4530>  // b.none
  44f6ec:	add	x15, x14, x8
  44f6f0:	stur	x15, [x11, #-16]
  44f6f4:	cmn	x13, #0x1
  44f6f8:	b.eq	44f704 <_obstack_memory_used@@Base+0x4540>  // b.none
  44f6fc:	add	x15, x13, x8
  44f700:	str	x15, [x11]
  44f704:	cmn	x14, #0x1
  44f708:	b.eq	44f710 <_obstack_memory_used@@Base+0x454c>  // b.none
  44f70c:	ldur	x15, [x11, #-8]
  44f710:	cmn	x13, #0x1
  44f714:	b.eq	44f71c <_obstack_memory_used@@Base+0x4558>  // b.none
  44f718:	ldr	x16, [x11, #8]
  44f71c:	cmn	x14, #0x1
  44f720:	b.eq	44f72c <_obstack_memory_used@@Base+0x4568>  // b.none
  44f724:	add	x14, x15, x8
  44f728:	stur	x14, [x11, #-8]
  44f72c:	cmn	x13, #0x1
  44f730:	b.eq	44f6d0 <_obstack_memory_used@@Base+0x450c>  // b.none
  44f734:	add	x13, x16, x8
  44f738:	str	x13, [x11, #8]
  44f73c:	b	44f6d0 <_obstack_memory_used@@Base+0x450c>
  44f740:	cmp	x10, x9
  44f744:	b.ne	44f7d8 <_obstack_memory_used@@Base+0x4614>  // b.any
  44f748:	cmp	x19, #0x1
  44f74c:	b.lt	44f764 <_obstack_memory_used@@Base+0x45a0>  // b.tstop
  44f750:	ldr	x8, [sp, #160]
  44f754:	lsl	x2, x19, #4
  44f758:	mov	w1, #0xff                  	// #255
  44f75c:	add	x0, x8, x23, lsl #4
  44f760:	bl	404320 <memset@plt>
  44f764:	ldr	x8, [x25, #224]
  44f768:	mov	w28, wzr
  44f76c:	cbz	x8, 44f560 <_obstack_memory_used@@Base+0x439c>
  44f770:	cmp	x23, #0x2
  44f774:	b.cc	44f560 <_obstack_memory_used@@Base+0x439c>  // b.lo, b.ul, b.last
  44f778:	ldr	x11, [sp, #144]
  44f77c:	mvn	x10, x19
  44f780:	ldr	x13, [sp, #160]
  44f784:	mov	x9, xzr
  44f788:	add	x10, x10, x11
  44f78c:	ldr	x11, [sp, #160]
  44f790:	add	x11, x11, #0x18
  44f794:	b	44f7ac <_obstack_memory_used@@Base+0x45e8>
  44f798:	add	x9, x9, #0x1
  44f79c:	mov	w28, wzr
  44f7a0:	cmp	x10, x9
  44f7a4:	add	x11, x11, #0x10
  44f7a8:	b.eq	44f560 <_obstack_memory_used@@Base+0x439c>  // b.none
  44f7ac:	ldr	x12, [x8, x9, lsl #3]
  44f7b0:	cmp	x9, x12
  44f7b4:	b.eq	44f798 <_obstack_memory_used@@Base+0x45d4>  // b.none
  44f7b8:	add	x12, x13, x12, lsl #4
  44f7bc:	ldr	x12, [x12, #16]
  44f7c0:	stur	x12, [x11, #-8]
  44f7c4:	ldr	x12, [x8, x9, lsl #3]
  44f7c8:	add	x12, x13, x12, lsl #4
  44f7cc:	ldr	x12, [x12, #24]
  44f7d0:	str	x12, [x11]
  44f7d4:	b	44f798 <_obstack_memory_used@@Base+0x45d4>
  44f7d8:	ldr	x10, [sp, #160]
  44f7dc:	add	x10, x10, x9, lsl #4
  44f7e0:	add	x10, x10, #0x8
  44f7e4:	b	44f7f8 <_obstack_memory_used@@Base+0x4634>
  44f7e8:	add	x9, x9, #0x1
  44f7ec:	cmp	x9, x23
  44f7f0:	add	x10, x10, #0x10
  44f7f4:	b.cs	44f748 <_obstack_memory_used@@Base+0x4584>  // b.hs, b.nlast
  44f7f8:	ldur	x11, [x10, #-8]
  44f7fc:	cmn	x11, #0x1
  44f800:	b.eq	44f7e8 <_obstack_memory_used@@Base+0x4624>  // b.none
  44f804:	ldr	x12, [x10]
  44f808:	add	x11, x11, x8
  44f80c:	stur	x11, [x10, #-8]
  44f810:	add	x11, x12, x8
  44f814:	str	x11, [x10]
  44f818:	b	44f7e8 <_obstack_memory_used@@Base+0x4624>
  44f81c:	mov	w28, w0
  44f820:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44f824:	ldur	w8, [x29, #-164]
  44f828:	cmp	w8, #0xc
  44f82c:	b.ne	44f8dc <_obstack_memory_used@@Base+0x4718>  // b.any
  44f830:	mov	w28, #0xc                   	// #12
  44f834:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44f838:	mov	x0, x26
  44f83c:	bl	4046b0 <free@plt>
  44f840:	mov	w28, #0xc                   	// #12
  44f844:	b	44f560 <_obstack_memory_used@@Base+0x439c>
  44f848:	ldr	x10, [sp, #352]
  44f84c:	ldr	x11, [sp, #328]
  44f850:	ldr	x12, [sp, #160]
  44f854:	ldr	x16, [sp, #136]
  44f858:	mov	x9, xzr
  44f85c:	b	44f870 <_obstack_memory_used@@Base+0x46ac>
  44f860:	add	x9, x9, #0x1
  44f864:	cmp	x9, x23
  44f868:	add	x12, x12, #0x10
  44f86c:	b.cs	44f748 <_obstack_memory_used@@Base+0x4584>  // b.hs, b.nlast
  44f870:	ldr	x13, [x12]
  44f874:	cmn	x13, #0x1
  44f878:	b.eq	44f860 <_obstack_memory_used@@Base+0x469c>  // b.none
  44f87c:	add	x14, x11, x13, lsl #3
  44f880:	cmp	x13, x10
  44f884:	ldr	x15, [x12, #8]
  44f888:	csel	x13, x16, x14, eq  // eq = none
  44f88c:	ldr	x13, [x13]
  44f890:	add	x14, x11, x15, lsl #3
  44f894:	cmp	x15, x10
  44f898:	csel	x14, x16, x14, eq  // eq = none
  44f89c:	str	x13, [x12]
  44f8a0:	ldr	x14, [x14]
  44f8a4:	add	x13, x13, x8
  44f8a8:	add	x14, x14, x8
  44f8ac:	stp	x13, x14, [x12]
  44f8b0:	b	44f860 <_obstack_memory_used@@Base+0x469c>
  44f8b4:	cmp	w0, #0xc
  44f8b8:	b.eq	44f830 <_obstack_memory_used@@Base+0x466c>  // b.none
  44f8bc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44f8c0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44f8c4:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44f8c8:	add	x0, x0, #0x8da
  44f8cc:	add	x1, x1, #0x7d7
  44f8d0:	add	x3, x3, #0x8ec
  44f8d4:	mov	w2, #0x46c                 	// #1132
  44f8d8:	bl	4049b0 <__assert_fail@plt>
  44f8dc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44f8e0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44f8e4:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44f8e8:	add	x0, x0, #0x8da
  44f8ec:	add	x1, x1, #0x7d7
  44f8f0:	add	x3, x3, #0x8ec
  44f8f4:	mov	w2, #0x435                 	// #1077
  44f8f8:	bl	4049b0 <__assert_fail@plt>
  44f8fc:	mov	x6, x4
  44f900:	mov	w7, #0x1                   	// #1
  44f904:	mov	x4, xzr
  44f908:	mov	x5, x2
  44f90c:	b	44f910 <_obstack_memory_used@@Base+0x474c>
  44f910:	sub	sp, sp, #0x70
  44f914:	cmp	x3, x2
  44f918:	cset	w8, gt
  44f91c:	orr	x8, x8, x3, lsr #63
  44f920:	stp	x29, x30, [sp, #16]
  44f924:	stp	x28, x27, [sp, #32]
  44f928:	stp	x26, x25, [sp, #48]
  44f92c:	stp	x24, x23, [sp, #64]
  44f930:	stp	x22, x21, [sp, #80]
  44f934:	stp	x20, x19, [sp, #96]
  44f938:	add	x29, sp, #0x10
  44f93c:	cbnz	x8, 44fc70 <_obstack_memory_used@@Base+0x4aac>
  44f940:	add	x8, x4, x3
  44f944:	ldrb	w20, [x0, #56]
  44f948:	bic	x9, x8, x8, asr #63
  44f94c:	cmp	x8, x2
  44f950:	csel	x27, x2, x9, gt
  44f954:	mov	x22, x6
  44f958:	mov	x24, x5
  44f95c:	mov	x19, x3
  44f960:	mov	x25, x2
  44f964:	mov	x26, x1
  44f968:	mov	x21, x0
  44f96c:	cmp	x27, x3
  44f970:	stur	w7, [x29, #-4]
  44f974:	b.le	44f9a4 <_obstack_memory_used@@Base+0x47e0>
  44f978:	tbnz	w20, #3, 44fac8 <_obstack_memory_used@@Base+0x4904>
  44f97c:	ldr	x9, [x21, #32]
  44f980:	mov	w8, w20
  44f984:	cbz	x9, 44f9a8 <_obstack_memory_used@@Base+0x47e4>
  44f988:	mov	x0, x21
  44f98c:	bl	44c69c <_obstack_memory_used@@Base+0x14d8>
  44f990:	ldrb	w8, [x21, #56]
  44f994:	mov	x28, xzr
  44f998:	mov	w23, #0x1                   	// #1
  44f99c:	cbnz	x22, 44f9b4 <_obstack_memory_used@@Base+0x47f0>
  44f9a0:	b	44f9f0 <_obstack_memory_used@@Base+0x482c>
  44f9a4:	mov	w8, w20
  44f9a8:	mov	x28, xzr
  44f9ac:	mov	w23, #0x1                   	// #1
  44f9b0:	cbz	x22, 44f9f0 <_obstack_memory_used@@Base+0x482c>
  44f9b4:	tbnz	w8, #4, 44f9f0 <_obstack_memory_used@@Base+0x482c>
  44f9b8:	and	w8, w8, #0x6
  44f9bc:	cmp	w8, #0x4
  44f9c0:	b.ne	44f9e4 <_obstack_memory_used@@Base+0x4820>  // b.any
  44f9c4:	ldr	x8, [x22]
  44f9c8:	ldr	x9, [x21, #48]
  44f9cc:	cmp	x8, x9
  44f9d0:	b.hi	44f9e8 <_obstack_memory_used@@Base+0x4824>  // b.pmore
  44f9d4:	cmp	x8, #0x1
  44f9d8:	csel	x28, xzr, x22, lt  // lt = tstop
  44f9dc:	csinc	x23, x8, xzr, ge  // ge = tcont
  44f9e0:	b	44f9f0 <_obstack_memory_used@@Base+0x482c>
  44f9e4:	ldr	x9, [x21, #48]
  44f9e8:	add	x23, x9, #0x1
  44f9ec:	mov	x28, x22
  44f9f0:	lsl	x0, x23, #4
  44f9f4:	bl	404210 <malloc@plt>
  44f9f8:	cbz	x0, 44fc78 <_obstack_memory_used@@Base+0x4ab4>
  44f9fc:	mov	x22, x0
  44fa00:	ubfx	w8, w20, #5, #2
  44fa04:	mov	x0, x21
  44fa08:	mov	x1, x26
  44fa0c:	mov	x2, x25
  44fa10:	mov	x3, x19
  44fa14:	mov	x4, x27
  44fa18:	mov	x5, x24
  44fa1c:	mov	x6, x23
  44fa20:	mov	x7, x22
  44fa24:	str	w8, [sp]
  44fa28:	bl	44d2ec <_obstack_memory_used@@Base+0x2128>
  44fa2c:	cbz	w0, 44fa68 <_obstack_memory_used@@Base+0x48a4>
  44fa30:	cmp	w0, #0x1
  44fa34:	mov	x8, #0xfffffffffffffffe    	// #-2
  44fa38:	cinc	x21, x8, eq  // eq = none
  44fa3c:	mov	x0, x22
  44fa40:	bl	4046b0 <free@plt>
  44fa44:	mov	x0, x21
  44fa48:	ldp	x20, x19, [sp, #96]
  44fa4c:	ldp	x22, x21, [sp, #80]
  44fa50:	ldp	x24, x23, [sp, #64]
  44fa54:	ldp	x26, x25, [sp, #48]
  44fa58:	ldp	x28, x27, [sp, #32]
  44fa5c:	ldp	x29, x30, [sp, #16]
  44fa60:	add	sp, sp, #0x70
  44fa64:	ret
  44fa68:	cbz	x28, 44fba4 <_obstack_memory_used@@Base+0x49e0>
  44fa6c:	ldrb	w8, [x21, #56]
  44fa70:	ubfx	w8, w8, #1, #2
  44fa74:	cmp	w8, #0x2
  44fa78:	b.eq	44fb08 <_obstack_memory_used@@Base+0x4944>  // b.none
  44fa7c:	cmp	w8, #0x1
  44fa80:	add	x26, x23, #0x1
  44fa84:	b.eq	44fadc <_obstack_memory_used@@Base+0x4918>  // b.none
  44fa88:	cbnz	w8, 44fcc0 <_obstack_memory_used@@Base+0x4afc>
  44fa8c:	lsl	x25, x26, #3
  44fa90:	mov	x0, x25
  44fa94:	bl	404210 <malloc@plt>
  44fa98:	str	x0, [x28, #8]
  44fa9c:	cbz	x0, 44fcb8 <_obstack_memory_used@@Base+0x4af4>
  44faa0:	mov	x24, x0
  44faa4:	mov	x0, x25
  44faa8:	bl	404210 <malloc@plt>
  44faac:	str	x0, [x28, #16]
  44fab0:	cbz	x0, 44fcb0 <_obstack_memory_used@@Base+0x4aec>
  44fab4:	str	x26, [x28]
  44fab8:	mov	w8, #0x1                   	// #1
  44fabc:	cmp	x23, #0x1
  44fac0:	b.ge	44fb20 <_obstack_memory_used@@Base+0x495c>  // b.tcont
  44fac4:	b	44faf8 <_obstack_memory_used@@Base+0x4934>
  44fac8:	mov	w8, w20
  44facc:	mov	x28, xzr
  44fad0:	mov	w23, #0x1                   	// #1
  44fad4:	cbnz	x22, 44f9b4 <_obstack_memory_used@@Base+0x47f0>
  44fad8:	b	44f9f0 <_obstack_memory_used@@Base+0x482c>
  44fadc:	ldr	x9, [x28]
  44fae0:	cmp	x26, x9
  44fae4:	b.hi	44fc80 <_obstack_memory_used@@Base+0x4abc>  // b.pmore
  44fae8:	mov	w8, #0x1                   	// #1
  44faec:	mov	x26, x9
  44faf0:	cmp	x23, #0x1
  44faf4:	b.ge	44fb20 <_obstack_memory_used@@Base+0x495c>  // b.tcont
  44faf8:	mov	x23, xzr
  44fafc:	cmp	x23, x26
  44fb00:	b.cc	44fb6c <_obstack_memory_used@@Base+0x49a8>  // b.lo, b.ul, b.last
  44fb04:	b	44fb90 <_obstack_memory_used@@Base+0x49cc>
  44fb08:	ldr	x26, [x28]
  44fb0c:	cmp	x26, x23
  44fb10:	b.cc	44fd00 <_obstack_memory_used@@Base+0x4b3c>  // b.lo, b.ul, b.last
  44fb14:	mov	w8, #0x2                   	// #2
  44fb18:	cmp	x23, #0x1
  44fb1c:	b.lt	44faf8 <_obstack_memory_used@@Base+0x4934>  // b.tstop
  44fb20:	ldp	x9, x10, [x28, #8]
  44fb24:	cmp	x23, #0x3
  44fb28:	b.hi	44fbcc <_obstack_memory_used@@Base+0x4a08>  // b.pmore
  44fb2c:	mov	x11, xzr
  44fb30:	sub	x12, x23, x11
  44fb34:	lsl	x13, x11, #3
  44fb38:	add	x11, x22, x11, lsl #4
  44fb3c:	add	x10, x10, x13
  44fb40:	add	x11, x11, #0x8
  44fb44:	add	x9, x9, x13
  44fb48:	ldur	x13, [x11, #-8]
  44fb4c:	subs	x12, x12, #0x1
  44fb50:	str	x13, [x9], #8
  44fb54:	ldr	x13, [x11], #16
  44fb58:	str	x13, [x10], #8
  44fb5c:	b.ne	44fb48 <_obstack_memory_used@@Base+0x4984>  // b.any
  44fb60:	ldr	x26, [x28]
  44fb64:	cmp	x23, x26
  44fb68:	b.cs	44fb90 <_obstack_memory_used@@Base+0x49cc>  // b.hs, b.nlast
  44fb6c:	ldp	x10, x9, [x28, #8]
  44fb70:	mov	x11, #0xffffffffffffffff    	// #-1
  44fb74:	lsl	x12, x23, #3
  44fb78:	str	x11, [x9, x12]
  44fb7c:	str	x11, [x10, x12]
  44fb80:	ldr	x12, [x28]
  44fb84:	add	x23, x23, #0x1
  44fb88:	cmp	x23, x12
  44fb8c:	b.cc	44fb74 <_obstack_memory_used@@Base+0x49b0>  // b.lo, b.ul, b.last
  44fb90:	ldrb	w9, [x21, #56]
  44fb94:	and	w9, w9, #0xfffffff9
  44fb98:	orr	w9, w9, w8, lsl #1
  44fb9c:	strb	w9, [x21, #56]
  44fba0:	cbz	w8, 44fbc4 <_obstack_memory_used@@Base+0x4a00>
  44fba4:	ldr	x21, [x22]
  44fba8:	ldur	w8, [x29, #-4]
  44fbac:	tbz	w8, #0, 44fa3c <_obstack_memory_used@@Base+0x4878>
  44fbb0:	cmp	x21, x19
  44fbb4:	b.ne	44fce0 <_obstack_memory_used@@Base+0x4b1c>  // b.any
  44fbb8:	ldr	x8, [x22, #8]
  44fbbc:	sub	x21, x8, x19
  44fbc0:	b	44fa3c <_obstack_memory_used@@Base+0x4878>
  44fbc4:	mov	x21, #0xfffffffffffffffe    	// #-2
  44fbc8:	b	44fa3c <_obstack_memory_used@@Base+0x4878>
  44fbcc:	lsl	x12, x23, #3
  44fbd0:	add	x15, x10, x12
  44fbd4:	add	x14, x9, x12
  44fbd8:	cmp	x9, x15
  44fbdc:	add	x13, x22, x23, lsl #4
  44fbe0:	cset	w12, cc  // cc = lo, ul, last
  44fbe4:	cmp	x10, x14
  44fbe8:	cset	w16, cc  // cc = lo, ul, last
  44fbec:	cmp	x13, x9
  44fbf0:	and	w16, w12, w16
  44fbf4:	cset	w12, hi  // hi = pmore
  44fbf8:	cmp	x22, x14
  44fbfc:	cset	w14, cc  // cc = lo, ul, last
  44fc00:	cmp	x13, x10
  44fc04:	cset	w13, hi  // hi = pmore
  44fc08:	cmp	x22, x15
  44fc0c:	mov	x11, xzr
  44fc10:	cset	w15, cc  // cc = lo, ul, last
  44fc14:	tbnz	w16, #0, 44fb30 <_obstack_memory_used@@Base+0x496c>
  44fc18:	and	w12, w12, w14
  44fc1c:	tbnz	w12, #0, 44fb30 <_obstack_memory_used@@Base+0x496c>
  44fc20:	and	w12, w13, w15
  44fc24:	tbnz	w12, #0, 44fb30 <_obstack_memory_used@@Base+0x496c>
  44fc28:	and	x11, x23, #0xfffffffffffffffc
  44fc2c:	add	x12, x22, #0x20
  44fc30:	add	x13, x9, #0x10
  44fc34:	add	x14, x10, #0x10
  44fc38:	mov	x15, x11
  44fc3c:	sub	x16, x12, #0x20
  44fc40:	ld2	{v0.2d, v1.2d}, [x12]
  44fc44:	ld2	{v2.2d, v3.2d}, [x16]
  44fc48:	add	x12, x12, #0x40
  44fc4c:	subs	x15, x15, #0x4
  44fc50:	stp	q2, q0, [x13, #-16]
  44fc54:	stp	q3, q1, [x14, #-16]
  44fc58:	add	x13, x13, #0x20
  44fc5c:	add	x14, x14, #0x20
  44fc60:	b.ne	44fc3c <_obstack_memory_used@@Base+0x4a78>  // b.any
  44fc64:	cmp	x23, x11
  44fc68:	b.ne	44fb30 <_obstack_memory_used@@Base+0x496c>  // b.any
  44fc6c:	b	44fb60 <_obstack_memory_used@@Base+0x499c>
  44fc70:	mov	x21, #0xffffffffffffffff    	// #-1
  44fc74:	b	44fa44 <_obstack_memory_used@@Base+0x4880>
  44fc78:	mov	x21, #0xfffffffffffffffe    	// #-2
  44fc7c:	b	44fa44 <_obstack_memory_used@@Base+0x4880>
  44fc80:	ldr	x0, [x28, #8]
  44fc84:	lsl	x25, x26, #3
  44fc88:	mov	x1, x25
  44fc8c:	bl	404450 <realloc@plt>
  44fc90:	cbz	x0, 44fcb8 <_obstack_memory_used@@Base+0x4af4>
  44fc94:	mov	x24, x0
  44fc98:	ldr	x0, [x28, #16]
  44fc9c:	mov	x1, x25
  44fca0:	bl	404450 <realloc@plt>
  44fca4:	cbz	x0, 44fcb0 <_obstack_memory_used@@Base+0x4aec>
  44fca8:	stp	x24, x0, [x28, #8]
  44fcac:	b	44fab4 <_obstack_memory_used@@Base+0x48f0>
  44fcb0:	mov	x0, x24
  44fcb4:	bl	4046b0 <free@plt>
  44fcb8:	mov	w8, wzr
  44fcbc:	b	44fb90 <_obstack_memory_used@@Base+0x49cc>
  44fcc0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fcc4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fcc8:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fccc:	add	x0, x0, #0x85c
  44fcd0:	add	x1, x1, #0x7d7
  44fcd4:	add	x3, x3, #0x879
  44fcd8:	mov	w2, #0x1f9                 	// #505
  44fcdc:	bl	4049b0 <__assert_fail@plt>
  44fce0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fce4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fce8:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fcec:	add	x0, x0, #0x7be
  44fcf0:	add	x1, x1, #0x7d7
  44fcf4:	add	x3, x3, #0x7e3
  44fcf8:	mov	w2, #0x1be                 	// #446
  44fcfc:	bl	4049b0 <__assert_fail@plt>
  44fd00:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fd04:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fd08:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  44fd0c:	add	x0, x0, #0x8c2
  44fd10:	add	x1, x1, #0x7d7
  44fd14:	add	x3, x3, #0x879
  44fd18:	mov	w2, #0x1fb                 	// #507
  44fd1c:	bl	4049b0 <__assert_fail@plt>
  44fd20:	mov	x6, x5
  44fd24:	mov	x5, x2
  44fd28:	mov	w7, wzr
  44fd2c:	b	44f910 <_obstack_memory_used@@Base+0x474c>
  44fd30:	stp	x29, x30, [sp, #-96]!
  44fd34:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  44fd38:	sub	x9, x9, x4
  44fd3c:	orr	x8, x4, x2
  44fd40:	cmp	x9, x2
  44fd44:	orr	x8, x8, x7
  44fd48:	cset	w9, lt  // lt = tstop
  44fd4c:	orr	x8, x9, x8, lsr #63
  44fd50:	stp	x28, x27, [sp, #16]
  44fd54:	stp	x26, x25, [sp, #32]
  44fd58:	stp	x24, x23, [sp, #48]
  44fd5c:	stp	x22, x21, [sp, #64]
  44fd60:	stp	x20, x19, [sp, #80]
  44fd64:	mov	x29, sp
  44fd68:	cbnz	x8, 44fe34 <_obstack_memory_used@@Base+0x4c70>
  44fd6c:	mov	x19, x7
  44fd70:	mov	x20, x6
  44fd74:	mov	x21, x5
  44fd78:	mov	x27, x4
  44fd7c:	mov	x28, x2
  44fd80:	mov	x23, x1
  44fd84:	mov	x22, x0
  44fd88:	cmp	x4, #0x1
  44fd8c:	add	x24, x4, x2
  44fd90:	b.lt	44fdd4 <_obstack_memory_used@@Base+0x4c10>  // b.tstop
  44fd94:	mov	x26, x3
  44fd98:	cmp	x28, #0x1
  44fd9c:	b.lt	44fddc <_obstack_memory_used@@Base+0x4c18>  // b.tstop
  44fda0:	mov	x0, x24
  44fda4:	bl	404210 <malloc@plt>
  44fda8:	cbz	x0, 44fe34 <_obstack_memory_used@@Base+0x4c70>
  44fdac:	mov	x1, x23
  44fdb0:	mov	x2, x28
  44fdb4:	mov	x25, x0
  44fdb8:	bl	403e80 <memcpy@plt>
  44fdbc:	add	x0, x25, x28
  44fdc0:	mov	x1, x26
  44fdc4:	mov	x2, x27
  44fdc8:	bl	403e80 <memcpy@plt>
  44fdcc:	mov	x23, x25
  44fdd0:	b	44fde4 <_obstack_memory_used@@Base+0x4c20>
  44fdd4:	mov	x25, xzr
  44fdd8:	b	44fde4 <_obstack_memory_used@@Base+0x4c20>
  44fddc:	mov	x25, xzr
  44fde0:	mov	x23, x26
  44fde4:	mov	w7, #0x1                   	// #1
  44fde8:	mov	x0, x22
  44fdec:	mov	x1, x23
  44fdf0:	mov	x2, x24
  44fdf4:	mov	x3, x21
  44fdf8:	mov	x4, xzr
  44fdfc:	mov	x5, x19
  44fe00:	mov	x6, x20
  44fe04:	bl	44f910 <_obstack_memory_used@@Base+0x474c>
  44fe08:	mov	x19, x0
  44fe0c:	mov	x0, x25
  44fe10:	bl	4046b0 <free@plt>
  44fe14:	mov	x0, x19
  44fe18:	ldp	x20, x19, [sp, #80]
  44fe1c:	ldp	x22, x21, [sp, #64]
  44fe20:	ldp	x24, x23, [sp, #48]
  44fe24:	ldp	x26, x25, [sp, #32]
  44fe28:	ldp	x28, x27, [sp, #16]
  44fe2c:	ldp	x29, x30, [sp], #96
  44fe30:	ret
  44fe34:	mov	x0, #0xfffffffffffffffe    	// #-2
  44fe38:	b	44fe18 <_obstack_memory_used@@Base+0x4c54>
  44fe3c:	sub	sp, sp, #0x70
  44fe40:	stp	x29, x30, [sp, #16]
  44fe44:	add	x29, sp, #0x10
  44fe48:	stp	x22, x21, [sp, #80]
  44fe4c:	ldr	x22, [x29, #96]
  44fe50:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  44fe54:	sub	x9, x9, x4
  44fe58:	orr	x8, x4, x2
  44fe5c:	cmp	x9, x2
  44fe60:	orr	x8, x8, x22
  44fe64:	cset	w9, lt  // lt = tstop
  44fe68:	orr	x8, x9, x8, lsr #63
  44fe6c:	stp	x28, x27, [sp, #32]
  44fe70:	stp	x26, x25, [sp, #48]
  44fe74:	stp	x24, x23, [sp, #64]
  44fe78:	stp	x20, x19, [sp, #96]
  44fe7c:	cbnz	x8, 44ff50 <_obstack_memory_used@@Base+0x4d8c>
  44fe80:	mov	x20, x6
  44fe84:	mov	x21, x5
  44fe88:	mov	x28, x4
  44fe8c:	mov	x19, x2
  44fe90:	mov	x24, x1
  44fe94:	mov	x23, x0
  44fe98:	cmp	x4, #0x1
  44fe9c:	add	x25, x4, x2
  44fea0:	b.lt	44feec <_obstack_memory_used@@Base+0x4d28>  // b.tstop
  44fea4:	mov	x27, x3
  44fea8:	cmp	x19, #0x1
  44feac:	b.lt	44fef4 <_obstack_memory_used@@Base+0x4d30>  // b.tstop
  44feb0:	mov	x0, x25
  44feb4:	str	x7, [sp, #8]
  44feb8:	bl	404210 <malloc@plt>
  44febc:	cbz	x0, 44ff50 <_obstack_memory_used@@Base+0x4d8c>
  44fec0:	mov	x1, x24
  44fec4:	mov	x2, x19
  44fec8:	mov	x26, x0
  44fecc:	bl	403e80 <memcpy@plt>
  44fed0:	add	x0, x26, x19
  44fed4:	mov	x1, x27
  44fed8:	mov	x2, x28
  44fedc:	bl	403e80 <memcpy@plt>
  44fee0:	ldr	x7, [sp, #8]
  44fee4:	mov	x24, x26
  44fee8:	b	44fefc <_obstack_memory_used@@Base+0x4d38>
  44feec:	mov	x26, xzr
  44fef0:	b	44fefc <_obstack_memory_used@@Base+0x4d38>
  44fef4:	mov	x26, xzr
  44fef8:	mov	x24, x27
  44fefc:	mov	x0, x23
  44ff00:	mov	x1, x24
  44ff04:	mov	x2, x25
  44ff08:	mov	x3, x21
  44ff0c:	mov	x4, x20
  44ff10:	mov	x5, x22
  44ff14:	mov	x6, x7
  44ff18:	mov	w7, wzr
  44ff1c:	bl	44f910 <_obstack_memory_used@@Base+0x474c>
  44ff20:	mov	x19, x0
  44ff24:	mov	x0, x26
  44ff28:	bl	4046b0 <free@plt>
  44ff2c:	mov	x0, x19
  44ff30:	ldp	x20, x19, [sp, #96]
  44ff34:	ldp	x22, x21, [sp, #80]
  44ff38:	ldp	x24, x23, [sp, #64]
  44ff3c:	ldp	x26, x25, [sp, #48]
  44ff40:	ldp	x28, x27, [sp, #32]
  44ff44:	ldp	x29, x30, [sp, #16]
  44ff48:	add	sp, sp, #0x70
  44ff4c:	ret
  44ff50:	mov	x0, #0xfffffffffffffffe    	// #-2
  44ff54:	b	44ff30 <_obstack_memory_used@@Base+0x4d6c>
  44ff58:	ldrb	w8, [x0, #56]
  44ff5c:	cmp	x2, #0x0
  44ff60:	csel	x9, xzr, x4, eq  // eq = none
  44ff64:	csel	x10, xzr, x3, eq  // eq = none
  44ff68:	and	w8, w8, #0xfffffff9
  44ff6c:	orr	w11, w8, #0x2
  44ff70:	csel	w8, w8, w11, eq  // eq = none
  44ff74:	strb	w8, [x0, #56]
  44ff78:	stp	x10, x9, [x1, #8]
  44ff7c:	str	x2, [x1]
  44ff80:	ret
  44ff84:	stp	x29, x30, [sp, #-32]!
  44ff88:	str	x19, [sp, #16]
  44ff8c:	mov	x19, x0
  44ff90:	ldr	x0, [x0, #48]
  44ff94:	mov	x29, sp
  44ff98:	bl	4046b0 <free@plt>
  44ff9c:	ldr	x0, [x19, #72]
  44ffa0:	bl	4046b0 <free@plt>
  44ffa4:	ldr	x8, [x19, #80]
  44ffa8:	add	x9, x19, #0x8
  44ffac:	cmp	x8, x9
  44ffb0:	b.eq	44ffc4 <_obstack_memory_used@@Base+0x4e00>  // b.none
  44ffb4:	ldr	x0, [x8, #16]
  44ffb8:	bl	4046b0 <free@plt>
  44ffbc:	ldr	x0, [x19, #80]
  44ffc0:	bl	4046b0 <free@plt>
  44ffc4:	ldr	x0, [x19, #24]
  44ffc8:	bl	4046b0 <free@plt>
  44ffcc:	ldr	x0, [x19, #96]
  44ffd0:	bl	4046b0 <free@plt>
  44ffd4:	ldr	x0, [x19, #88]
  44ffd8:	bl	4046b0 <free@plt>
  44ffdc:	mov	x0, x19
  44ffe0:	ldr	x19, [sp, #16]
  44ffe4:	ldp	x29, x30, [sp], #32
  44ffe8:	b	4046b0 <free@plt>
  44ffec:	sub	sp, sp, #0xb0
  44fff0:	stp	x29, x30, [sp, #80]
  44fff4:	stp	x28, x27, [sp, #96]
  44fff8:	stp	x26, x25, [sp, #112]
  44fffc:	stp	x24, x23, [sp, #128]
  450000:	stp	x22, x21, [sp, #144]
  450004:	stp	x20, x19, [sp, #160]
  450008:	ldr	x8, [x0, #64]
  45000c:	ldr	x9, [x0, #88]
  450010:	ldrb	w10, [x0, #138]
  450014:	ldr	x26, [x0, #48]
  450018:	mov	x19, x0
  45001c:	cmp	x8, x9
  450020:	csel	x25, x9, x8, gt
  450024:	add	x29, sp, #0x50
  450028:	cbnz	w10, 45003c <_obstack_memory_used@@Base+0x4e78>
  45002c:	ldr	x8, [x19, #120]
  450030:	cbnz	x8, 45003c <_obstack_memory_used@@Base+0x4e78>
  450034:	ldrb	w8, [x19, #140]
  450038:	cbz	w8, 450044 <_obstack_memory_used@@Base+0x4e80>
  45003c:	ldr	x22, [x19, #56]
  450040:	b	450210 <_obstack_memory_used@@Base+0x504c>
  450044:	cmp	x25, x26
  450048:	b.le	4501f0 <_obstack_memory_used@@Base+0x502c>
  45004c:	add	x20, x19, #0x20
  450050:	b	450088 <_obstack_memory_used@@Base+0x4ec4>
  450054:	and	x21, x23, #0xff
  450058:	bl	404460 <__ctype_toupper_loc@plt>
  45005c:	ldr	x8, [x0]
  450060:	ldr	x9, [x19, #8]
  450064:	add	x28, x26, #0x1
  450068:	ldr	w8, [x8, x21, lsl #2]
  45006c:	strb	w8, [x9, x26]
  450070:	ldp	x8, x9, [x19, #8]
  450074:	ldrb	w8, [x8, x26]
  450078:	str	w8, [x9, x26, lsl #2]
  45007c:	cmp	x25, x28
  450080:	mov	x26, x28
  450084:	b.le	450520 <_obstack_memory_used@@Base+0x535c>
  450088:	ldr	x21, [x19, #40]
  45008c:	ldr	x22, [x19]
  450090:	add	x8, x21, x26
  450094:	ldrsb	w23, [x22, x8]
  450098:	tbnz	w23, #31, 4500a8 <_obstack_memory_used@@Base+0x4ee4>
  45009c:	mov	x0, x20
  4500a0:	bl	404580 <mbsinit@plt>
  4500a4:	cbnz	w0, 450054 <_obstack_memory_used@@Base+0x4e90>
  4500a8:	ldr	x8, [x20]
  4500ac:	add	x9, x22, x21
  4500b0:	sub	x2, x25, x26
  4500b4:	add	x1, x9, x26
  4500b8:	add	x0, sp, #0x4
  4500bc:	mov	x3, x20
  4500c0:	stur	x8, [x29, #-8]
  4500c4:	bl	44addc <argp_parse@@Base+0x10730>
  4500c8:	sub	x24, x0, #0x1
  4500cc:	mov	x21, x0
  4500d0:	cmn	x24, #0x4
  4500d4:	b.hi	4501a0 <_obstack_memory_used@@Base+0x4fdc>  // b.pmore
  4500d8:	ldr	w0, [sp, #4]
  4500dc:	bl	404950 <towupper@plt>
  4500e0:	ldr	w8, [sp, #4]
  4500e4:	mov	w22, w0
  4500e8:	cmp	w0, w8
  4500ec:	b.ne	450104 <_obstack_memory_used@@Base+0x4f40>  // b.any
  4500f0:	ldr	x8, [x19]
  4500f4:	ldr	x9, [x19, #40]
  4500f8:	add	x8, x8, x9
  4500fc:	add	x23, x8, x26
  450100:	b	450120 <_obstack_memory_used@@Base+0x4f5c>
  450104:	add	x0, sp, #0x8
  450108:	sub	x2, x29, #0x8
  45010c:	mov	w1, w22
  450110:	add	x23, sp, #0x8
  450114:	bl	404af0 <wcrtomb@plt>
  450118:	cmp	x21, x0
  45011c:	b.ne	4501f8 <_obstack_memory_used@@Base+0x5034>  // b.any
  450120:	ldr	x8, [x19, #8]
  450124:	mov	x1, x23
  450128:	mov	x2, x21
  45012c:	add	x0, x8, x26
  450130:	bl	403e80 <memcpy@plt>
  450134:	ldr	x8, [x19, #16]
  450138:	add	x23, x21, x26
  45013c:	add	x28, x26, #0x1
  450140:	cmp	x28, x23
  450144:	str	w22, [x8, x26, lsl #2]
  450148:	b.ge	45007c <_obstack_memory_used@@Base+0x4eb8>  // b.tcont
  45014c:	add	x8, x8, x26, lsl #2
  450150:	lsl	x9, x21, #2
  450154:	add	x0, x8, #0x4
  450158:	sub	x2, x9, #0x4
  45015c:	mov	w1, #0xff                  	// #255
  450160:	bl	404320 <memset@plt>
  450164:	cmp	x24, #0x2
  450168:	b.cc	450188 <_obstack_memory_used@@Base+0x4fc4>  // b.lo, b.ul, b.last
  45016c:	and	x8, x24, #0xfffffffffffffffe
  450170:	add	x28, x28, x8
  450174:	mov	x9, x8
  450178:	subs	x9, x9, #0x2
  45017c:	b.ne	450178 <_obstack_memory_used@@Base+0x4fb4>  // b.any
  450180:	cmp	x24, x8
  450184:	b.eq	450198 <_obstack_memory_used@@Base+0x4fd4>  // b.none
  450188:	add	x8, x21, x26
  45018c:	sub	x8, x8, x28
  450190:	subs	x8, x8, #0x1
  450194:	b.ne	450190 <_obstack_memory_used@@Base+0x4fcc>  // b.any
  450198:	mov	x28, x23
  45019c:	b	45007c <_obstack_memory_used@@Base+0x4eb8>
  4501a0:	add	x8, x21, #0x1
  4501a4:	cmp	x8, #0x2
  4501a8:	b.cc	4501bc <_obstack_memory_used@@Base+0x4ff8>  // b.lo, b.ul, b.last
  4501ac:	ldr	x8, [x19, #64]
  4501b0:	ldr	x9, [x19, #88]
  4501b4:	cmp	x8, x9
  4501b8:	b.lt	450200 <_obstack_memory_used@@Base+0x503c>  // b.tstop
  4501bc:	ldr	x8, [x19, #40]
  4501c0:	ldp	x9, x10, [x19]
  4501c4:	add	x28, x26, #0x1
  4501c8:	cmn	x21, #0x1
  4501cc:	add	x8, x8, x26
  4501d0:	ldrb	w8, [x9, x8]
  4501d4:	strb	w8, [x10, x26]
  4501d8:	ldr	x9, [x19, #16]
  4501dc:	str	w8, [x9, x26, lsl #2]
  4501e0:	b.ne	45007c <_obstack_memory_used@@Base+0x4eb8>  // b.any
  4501e4:	ldur	x8, [x29, #-8]
  4501e8:	str	x8, [x20]
  4501ec:	b	45007c <_obstack_memory_used@@Base+0x4eb8>
  4501f0:	mov	x28, x26
  4501f4:	b	450520 <_obstack_memory_used@@Base+0x535c>
  4501f8:	mov	x28, x26
  4501fc:	b	450220 <_obstack_memory_used@@Base+0x505c>
  450200:	ldur	x8, [x29, #-8]
  450204:	mov	x28, x26
  450208:	str	x8, [x20]
  45020c:	b	450520 <_obstack_memory_used@@Base+0x535c>
  450210:	cmp	x26, x25
  450214:	mov	x28, x26
  450218:	mov	x26, x22
  45021c:	b.ge	450520 <_obstack_memory_used@@Base+0x535c>  // b.tcont
  450220:	mov	x23, x19
  450224:	ldr	x8, [x23, #32]!
  450228:	sub	x2, x25, x28
  45022c:	stur	x8, [x29, #-8]
  450230:	ldr	x8, [x23, #88]
  450234:	cbnz	x8, 450334 <_obstack_memory_used@@Base+0x5170>
  450238:	ldr	x8, [x19]
  45023c:	ldr	x9, [x19, #40]
  450240:	add	x8, x8, x9
  450244:	add	x24, x8, x26
  450248:	mov	x0, sp
  45024c:	mov	x1, x24
  450250:	mov	x3, x23
  450254:	bl	44addc <argp_parse@@Base+0x10730>
  450258:	sub	x27, x0, #0x1
  45025c:	mov	x20, x0
  450260:	cmn	x27, #0x4
  450264:	b.hi	450388 <_obstack_memory_used@@Base+0x51c4>  // b.pmore
  450268:	ldr	w0, [sp]
  45026c:	mov	x22, x25
  450270:	bl	404950 <towupper@plt>
  450274:	ldr	w8, [sp]
  450278:	mov	w21, w0
  45027c:	cmp	w0, w8
  450280:	b.ne	45028c <_obstack_memory_used@@Base+0x50c8>  // b.any
  450284:	mov	x25, x24
  450288:	b	4502a8 <_obstack_memory_used@@Base+0x50e4>
  45028c:	add	x0, sp, #0x8
  450290:	sub	x2, x29, #0x8
  450294:	mov	w1, w21
  450298:	add	x25, sp, #0x8
  45029c:	bl	404af0 <wcrtomb@plt>
  4502a0:	subs	x9, x0, x20
  4502a4:	b.ne	4503f0 <_obstack_memory_used@@Base+0x522c>  // b.any
  4502a8:	ldr	x8, [x19, #8]
  4502ac:	mov	x1, x25
  4502b0:	mov	x2, x20
  4502b4:	add	x0, x8, x28
  4502b8:	bl	403e80 <memcpy@plt>
  4502bc:	ldrb	w8, [x19, #140]
  4502c0:	mov	x25, x22
  4502c4:	cbnz	w8, 450450 <_obstack_memory_used@@Base+0x528c>
  4502c8:	ldr	x8, [x19, #16]
  4502cc:	add	x22, x20, x26
  4502d0:	add	x23, x20, x28
  4502d4:	add	x26, x28, #0x1
  4502d8:	cmp	x26, x23
  4502dc:	str	w21, [x8, x28, lsl #2]
  4502e0:	b.ge	450210 <_obstack_memory_used@@Base+0x504c>  // b.tcont
  4502e4:	add	x0, x8, x26, lsl #2
  4502e8:	lsl	x8, x20, #2
  4502ec:	sub	x2, x8, #0x4
  4502f0:	mov	w1, #0xff                  	// #255
  4502f4:	bl	404320 <memset@plt>
  4502f8:	cmp	x27, #0x2
  4502fc:	b.cc	45031c <_obstack_memory_used@@Base+0x5158>  // b.lo, b.ul, b.last
  450300:	and	x8, x27, #0xfffffffffffffffe
  450304:	add	x26, x26, x8
  450308:	mov	x9, x8
  45030c:	subs	x9, x9, #0x2
  450310:	b.ne	45030c <_obstack_memory_used@@Base+0x5148>  // b.any
  450314:	cmp	x27, x8
  450318:	b.eq	45032c <_obstack_memory_used@@Base+0x5168>  // b.none
  45031c:	add	x8, x20, x28
  450320:	sub	x8, x8, x26
  450324:	subs	x8, x8, #0x1
  450328:	b.ne	450324 <_obstack_memory_used@@Base+0x5160>  // b.any
  45032c:	mov	x26, x23
  450330:	b	450210 <_obstack_memory_used@@Base+0x504c>
  450334:	ldr	w9, [x19, #144]
  450338:	add	x24, sp, #0x8
  45033c:	cmp	w9, #0x1
  450340:	b.lt	450248 <_obstack_memory_used@@Base+0x5084>  // b.tstop
  450344:	cmp	x2, #0x1
  450348:	b.lt	450248 <_obstack_memory_used@@Base+0x5084>  // b.tstop
  45034c:	ldr	x11, [x19, #40]
  450350:	ldr	x12, [x19]
  450354:	mov	x10, xzr
  450358:	add	x11, x26, x11
  45035c:	add	x11, x12, x11
  450360:	ldrb	w12, [x11, x10]
  450364:	add	x24, sp, #0x8
  450368:	ldrb	w12, [x8, x12]
  45036c:	strb	w12, [x24, x10]
  450370:	add	x10, x10, #0x1
  450374:	cmp	x10, x9
  450378:	b.cs	450248 <_obstack_memory_used@@Base+0x5084>  // b.hs, b.nlast
  45037c:	cmp	x2, x10
  450380:	b.gt	450360 <_obstack_memory_used@@Base+0x519c>
  450384:	b	450248 <_obstack_memory_used@@Base+0x5084>
  450388:	add	x8, x20, #0x1
  45038c:	cmp	x8, #0x2
  450390:	b.cc	4503a4 <_obstack_memory_used@@Base+0x51e0>  // b.lo, b.ul, b.last
  450394:	ldr	x8, [x19, #64]
  450398:	ldr	x9, [x19, #88]
  45039c:	cmp	x8, x9
  4503a0:	b.lt	450518 <_obstack_memory_used@@Base+0x5354>  // b.tstop
  4503a4:	ldr	x8, [x19, #40]
  4503a8:	ldr	x10, [x19]
  4503ac:	ldr	x9, [x19, #120]
  4503b0:	add	x8, x8, x26
  4503b4:	ldrb	w8, [x10, x8]
  4503b8:	cbnz	x9, 450550 <_obstack_memory_used@@Base+0x538c>
  4503bc:	ldr	x9, [x19, #8]
  4503c0:	strb	w8, [x9, x28]
  4503c4:	ldrb	w9, [x19, #140]
  4503c8:	cbnz	w9, 450564 <_obstack_memory_used@@Base+0x53a0>
  4503cc:	ldr	x9, [x19, #16]
  4503d0:	add	x22, x26, #0x1
  4503d4:	add	x26, x28, #0x1
  4503d8:	cmn	x20, #0x1
  4503dc:	str	w8, [x9, x28, lsl #2]
  4503e0:	b.ne	450210 <_obstack_memory_used@@Base+0x504c>  // b.any
  4503e4:	ldur	x8, [x29, #-8]
  4503e8:	str	x8, [x23]
  4503ec:	b	450210 <_obstack_memory_used@@Base+0x504c>
  4503f0:	mov	x11, x0
  4503f4:	cmn	x0, #0x1
  4503f8:	mov	x25, x24
  4503fc:	b.eq	4502a8 <_obstack_memory_used@@Base+0x50e4>  // b.none
  450400:	ldr	x8, [x19, #64]
  450404:	add	x24, x11, x28
  450408:	cmp	x24, x8
  45040c:	b.hi	450518 <_obstack_memory_used@@Base+0x5354>  // b.pmore
  450410:	ldr	x0, [x19, #24]
  450414:	mov	x22, x9
  450418:	cbnz	x0, 450434 <_obstack_memory_used@@Base+0x5270>
  45041c:	lsl	x0, x8, #3
  450420:	mov	x23, x11
  450424:	bl	404210 <malloc@plt>
  450428:	mov	x11, x23
  45042c:	str	x0, [x19, #24]
  450430:	cbz	x0, 450548 <_obstack_memory_used@@Base+0x5384>
  450434:	ldrb	w8, [x19, #140]
  450438:	cbnz	w8, 450588 <_obstack_memory_used@@Base+0x53c4>
  45043c:	cbz	x28, 450580 <_obstack_memory_used@@Base+0x53bc>
  450440:	cmp	x28, #0x4
  450444:	b.cs	4504d8 <_obstack_memory_used@@Base+0x5314>  // b.hs, b.nlast
  450448:	mov	x8, xzr
  45044c:	b	450570 <_obstack_memory_used@@Base+0x53ac>
  450450:	ldr	x8, [x19, #24]
  450454:	cmp	x20, #0x4
  450458:	b.cs	450464 <_obstack_memory_used@@Base+0x52a0>  // b.hs, b.nlast
  45045c:	mov	x9, xzr
  450460:	b	4504b4 <_obstack_memory_used@@Base+0x52f0>
  450464:	adrp	x11, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  450468:	ldr	q1, [x11, #704]
  45046c:	mov	w11, #0x2                   	// #2
  450470:	and	x9, x20, #0xfffffffffffffffc
  450474:	add	x10, x8, x28, lsl #3
  450478:	dup	v2.2d, x11
  45047c:	mov	w11, #0x4                   	// #4
  450480:	dup	v0.2d, x26
  450484:	add	x10, x10, #0x10
  450488:	dup	v3.2d, x11
  45048c:	mov	x11, x9
  450490:	add	v4.2d, v1.2d, v0.2d
  450494:	add	v5.2d, v4.2d, v2.2d
  450498:	add	v1.2d, v1.2d, v3.2d
  45049c:	subs	x11, x11, #0x4
  4504a0:	stp	q4, q5, [x10, #-16]
  4504a4:	add	x10, x10, #0x20
  4504a8:	b.ne	450490 <_obstack_memory_used@@Base+0x52cc>  // b.any
  4504ac:	cmp	x20, x9
  4504b0:	b.eq	4502c8 <_obstack_memory_used@@Base+0x5104>  // b.none
  4504b4:	sub	x10, x20, x9
  4504b8:	add	x11, x26, x9
  4504bc:	add	x9, x28, x9
  4504c0:	add	x8, x8, x9, lsl #3
  4504c4:	str	x11, [x8], #8
  4504c8:	subs	x10, x10, #0x1
  4504cc:	add	x11, x11, #0x1
  4504d0:	b.ne	4504c4 <_obstack_memory_used@@Base+0x5300>  // b.any
  4504d4:	b	4502c8 <_obstack_memory_used@@Base+0x5104>
  4504d8:	adrp	x10, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4504dc:	ldr	q0, [x10, #704]
  4504e0:	mov	w10, #0x2                   	// #2
  4504e4:	and	x8, x28, #0xfffffffffffffffc
  4504e8:	dup	v1.2d, x10
  4504ec:	mov	w10, #0x4                   	// #4
  4504f0:	add	x9, x0, #0x10
  4504f4:	dup	v2.2d, x10
  4504f8:	mov	x10, x8
  4504fc:	add	v3.2d, v0.2d, v1.2d
  450500:	stp	q0, q3, [x9, #-16]
  450504:	add	v0.2d, v0.2d, v2.2d
  450508:	subs	x10, x10, #0x4
  45050c:	add	x9, x9, #0x20
  450510:	b.ne	4504fc <_obstack_memory_used@@Base+0x5338>  // b.any
  450514:	b	450578 <_obstack_memory_used@@Base+0x53b4>
  450518:	ldur	x8, [x29, #-8]
  45051c:	str	x8, [x23]
  450520:	mov	w0, wzr
  450524:	stp	x28, x26, [x19, #48]
  450528:	ldp	x20, x19, [sp, #160]
  45052c:	ldp	x22, x21, [sp, #144]
  450530:	ldp	x24, x23, [sp, #128]
  450534:	ldp	x26, x25, [sp, #112]
  450538:	ldp	x28, x27, [sp, #96]
  45053c:	ldp	x29, x30, [sp, #80]
  450540:	add	sp, sp, #0xb0
  450544:	ret
  450548:	mov	w0, #0xc                   	// #12
  45054c:	b	450528 <_obstack_memory_used@@Base+0x5364>
  450550:	ldrb	w8, [x9, x8]
  450554:	ldr	x9, [x19, #8]
  450558:	strb	w8, [x9, x28]
  45055c:	ldrb	w9, [x19, #140]
  450560:	cbz	w9, 4503cc <_obstack_memory_used@@Base+0x5208>
  450564:	ldr	x9, [x19, #24]
  450568:	str	x26, [x9, x28, lsl #3]
  45056c:	b	4503cc <_obstack_memory_used@@Base+0x5208>
  450570:	str	x8, [x0, x8, lsl #3]
  450574:	add	x8, x8, #0x1
  450578:	cmp	x28, x8
  45057c:	b.ne	450570 <_obstack_memory_used@@Base+0x53ac>  // b.any
  450580:	mov	w8, #0x1                   	// #1
  450584:	strb	w8, [x19, #140]
  450588:	ldr	x8, [x19, #8]
  45058c:	add	x1, sp, #0x8
  450590:	mov	x2, x11
  450594:	mov	x23, x11
  450598:	add	x0, x8, x28
  45059c:	bl	403e80 <memcpy@plt>
  4505a0:	ldr	x8, [x19, #16]
  4505a4:	cmp	x23, #0x2
  4505a8:	mov	x16, x22
  4505ac:	str	w21, [x8, x28, lsl #2]
  4505b0:	ldr	x9, [x19, #24]
  4505b4:	str	x26, [x9, x28, lsl #3]
  4505b8:	b.cc	45067c <_obstack_memory_used@@Base+0x54b8>  // b.lo, b.ul, b.last
  4505bc:	sub	x11, x23, #0x1
  4505c0:	cmp	x11, #0x4
  4505c4:	b.cs	4505d0 <_obstack_memory_used@@Base+0x540c>  // b.hs, b.nlast
  4505c8:	mov	w10, #0x1                   	// #1
  4505cc:	b	450650 <_obstack_memory_used@@Base+0x548c>
  4505d0:	adrp	x13, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4505d4:	ldr	q3, [x13, #720]
  4505d8:	mov	w15, #0x2                   	// #2
  4505dc:	and	x12, x11, #0xfffffffffffffffc
  4505e0:	add	x14, x28, #0x3
  4505e4:	dup	v4.2d, x15
  4505e8:	mov	w15, #0x4                   	// #4
  4505ec:	dup	v0.2d, x20
  4505f0:	dup	v1.2d, x27
  4505f4:	dup	v2.2d, x26
  4505f8:	orr	x10, x12, #0x1
  4505fc:	add	x13, x8, x14, lsl #2
  450600:	add	x14, x9, x14, lsl #3
  450604:	movi	v5.2d, #0xffffffffffffffff
  450608:	dup	v6.2d, x15
  45060c:	mov	x15, x12
  450610:	add	v7.2d, v3.2d, v4.2d
  450614:	cmhi	v16.2d, v0.2d, v3.2d
  450618:	cmhi	v17.2d, v0.2d, v7.2d
  45061c:	bsl	v16.16b, v3.16b, v1.16b
  450620:	bsl	v17.16b, v7.16b, v1.16b
  450624:	add	v7.2d, v16.2d, v2.2d
  450628:	add	v16.2d, v17.2d, v2.2d
  45062c:	subs	x15, x15, #0x4
  450630:	add	v3.2d, v3.2d, v6.2d
  450634:	stp	q7, q16, [x14, #-16]
  450638:	stp	d5, d5, [x13, #-8]
  45063c:	add	x13, x13, #0x10
  450640:	add	x14, x14, #0x20
  450644:	b.ne	450610 <_obstack_memory_used@@Base+0x544c>  // b.any
  450648:	cmp	x11, x12
  45064c:	b.eq	45067c <_obstack_memory_used@@Base+0x54b8>  // b.none
  450650:	add	x8, x8, x28, lsl #2
  450654:	add	x9, x9, x28, lsl #3
  450658:	mov	w11, #0xffffffff            	// #-1
  45065c:	cmp	x10, x20
  450660:	csel	x12, x10, x27, cc  // cc = lo, ul, last
  450664:	add	x12, x12, x26
  450668:	str	x12, [x9, x10, lsl #3]
  45066c:	str	w11, [x8, x10, lsl #2]
  450670:	add	x10, x10, #0x1
  450674:	cmp	x23, x10
  450678:	b.ne	45065c <_obstack_memory_used@@Base+0x5498>  // b.any
  45067c:	ldp	x8, x9, [x19, #88]
  450680:	add	x8, x8, x16
  450684:	cmp	x9, x26
  450688:	str	x8, [x19, #88]
  45068c:	b.le	45069c <_obstack_memory_used@@Base+0x54d8>
  450690:	ldr	x9, [x19, #104]
  450694:	add	x9, x9, x16
  450698:	str	x9, [x19, #104]
  45069c:	ldr	x9, [x19, #64]
  4506a0:	add	x22, x20, x26
  4506a4:	mov	x26, x24
  4506a8:	cmp	x9, x8
  4506ac:	csel	x25, x8, x9, gt
  4506b0:	b	450210 <_obstack_memory_used@@Base+0x504c>
  4506b4:	sub	sp, sp, #0x90
  4506b8:	stp	x29, x30, [sp, #64]
  4506bc:	stp	x24, x23, [sp, #96]
  4506c0:	stp	x22, x21, [sp, #112]
  4506c4:	stp	x20, x19, [sp, #128]
  4506c8:	ldr	x8, [x0, #64]
  4506cc:	ldr	x9, [x0, #88]
  4506d0:	ldr	x23, [x0, #48]
  4506d4:	mov	x19, x0
  4506d8:	str	x25, [sp, #80]
  4506dc:	cmp	x8, x9
  4506e0:	csel	x22, x9, x8, gt
  4506e4:	cmp	x22, x23
  4506e8:	add	x29, sp, #0x40
  4506ec:	b.le	450898 <_obstack_memory_used@@Base+0x56d4>
  4506f0:	add	x20, x19, #0x20
  4506f4:	ldr	x8, [x19, #120]
  4506f8:	ldr	x24, [x19, #32]
  4506fc:	sub	x2, x22, x23
  450700:	cbnz	x8, 4507f0 <_obstack_memory_used@@Base+0x562c>
  450704:	ldr	x8, [x19]
  450708:	ldr	x9, [x19, #40]
  45070c:	add	x8, x8, x9
  450710:	add	x1, x8, x23
  450714:	add	x0, x29, #0x1c
  450718:	mov	x3, x20
  45071c:	bl	44addc <argp_parse@@Base+0x10730>
  450720:	add	x8, x0, #0x1
  450724:	cmp	x8, #0x2
  450728:	b.cc	450748 <_obstack_memory_used@@Base+0x5584>  // b.lo, b.ul, b.last
  45072c:	mov	x21, x0
  450730:	cmn	x0, #0x2
  450734:	b.ne	450770 <_obstack_memory_used@@Base+0x55ac>  // b.any
  450738:	ldr	x8, [x19, #64]
  45073c:	ldr	x9, [x19, #88]
  450740:	cmp	x8, x9
  450744:	b.lt	450894 <_obstack_memory_used@@Base+0x56d0>  // b.tstop
  450748:	ldr	x8, [x19, #40]
  45074c:	ldr	x9, [x19]
  450750:	add	x8, x8, x23
  450754:	ldrb	w8, [x9, x8]
  450758:	str	w8, [x29, #28]
  45075c:	ldr	x9, [x19, #120]
  450760:	cbnz	x9, 450888 <_obstack_memory_used@@Base+0x56c4>
  450764:	mov	w21, #0x1                   	// #1
  450768:	str	x24, [x20]
  45076c:	b	450774 <_obstack_memory_used@@Base+0x55b0>
  450770:	ldr	w8, [x29, #28]
  450774:	ldr	x9, [x19, #16]
  450778:	add	x25, x21, x23
  45077c:	add	x24, x23, #0x1
  450780:	cmp	x24, x25
  450784:	str	w8, [x9, x23, lsl #2]
  450788:	b.ge	4507e0 <_obstack_memory_used@@Base+0x561c>  // b.tcont
  45078c:	add	x8, x9, x23, lsl #2
  450790:	lsl	x9, x21, #2
  450794:	add	x0, x8, #0x4
  450798:	sub	x2, x9, #0x4
  45079c:	mov	w1, #0xff                  	// #255
  4507a0:	bl	404320 <memset@plt>
  4507a4:	sub	x8, x21, #0x1
  4507a8:	cmp	x8, #0x2
  4507ac:	b.cc	4507cc <_obstack_memory_used@@Base+0x5608>  // b.lo, b.ul, b.last
  4507b0:	and	x9, x8, #0xfffffffffffffffe
  4507b4:	add	x24, x24, x9
  4507b8:	mov	x10, x9
  4507bc:	subs	x10, x10, #0x2
  4507c0:	b.ne	4507bc <_obstack_memory_used@@Base+0x55f8>  // b.any
  4507c4:	cmp	x8, x9
  4507c8:	b.eq	4507dc <_obstack_memory_used@@Base+0x5618>  // b.none
  4507cc:	add	x8, x23, x21
  4507d0:	sub	x8, x8, x24
  4507d4:	subs	x8, x8, #0x1
  4507d8:	b.ne	4507d4 <_obstack_memory_used@@Base+0x5610>  // b.any
  4507dc:	mov	x24, x25
  4507e0:	cmp	x22, x24
  4507e4:	mov	x23, x24
  4507e8:	b.gt	4506f4 <_obstack_memory_used@@Base+0x5530>
  4507ec:	b	45089c <_obstack_memory_used@@Base+0x56d8>
  4507f0:	ldr	w9, [x19, #144]
  4507f4:	mov	x1, sp
  4507f8:	cmp	w9, #0x1
  4507fc:	b.lt	450714 <_obstack_memory_used@@Base+0x5550>  // b.tstop
  450800:	cmp	x2, #0x1
  450804:	b.lt	450714 <_obstack_memory_used@@Base+0x5550>  // b.tstop
  450808:	ldr	x9, [x19, #40]
  45080c:	ldp	x10, x11, [x19]
  450810:	mov	x1, sp
  450814:	add	x9, x23, x9
  450818:	ldrb	w9, [x10, x9]
  45081c:	ldrb	w8, [x8, x9]
  450820:	strb	w8, [x11, x23]
  450824:	strb	w8, [sp]
  450828:	ldr	w8, [x19, #144]
  45082c:	cmp	w8, #0x2
  450830:	b.lt	450714 <_obstack_memory_used@@Base+0x5550>  // b.tstop
  450834:	cmp	x2, #0x2
  450838:	b.lt	450714 <_obstack_memory_used@@Base+0x5550>  // b.tstop
  45083c:	mov	w8, #0x1                   	// #1
  450840:	ldr	x9, [x19, #40]
  450844:	ldp	x10, x12, [x19]
  450848:	ldr	x11, [x19, #120]
  45084c:	mov	x1, sp
  450850:	add	x9, x10, x9
  450854:	add	x9, x9, x23
  450858:	ldrb	w9, [x9, x8]
  45085c:	add	x10, x12, x23
  450860:	ldrb	w9, [x11, x9]
  450864:	strb	w9, [x10, x8]
  450868:	strb	w9, [x1, x8]
  45086c:	ldr	w9, [x19, #144]
  450870:	add	x8, x8, #0x1
  450874:	cmp	w9, w8
  450878:	b.le	450714 <_obstack_memory_used@@Base+0x5550>
  45087c:	cmp	x2, x8
  450880:	b.gt	450840 <_obstack_memory_used@@Base+0x567c>
  450884:	b	450714 <_obstack_memory_used@@Base+0x5550>
  450888:	ldrb	w8, [x9, w8, uxtw]
  45088c:	str	w8, [x29, #28]
  450890:	b	450764 <_obstack_memory_used@@Base+0x55a0>
  450894:	str	x24, [x20]
  450898:	mov	x24, x23
  45089c:	stp	x24, x24, [x19, #48]
  4508a0:	ldp	x20, x19, [sp, #128]
  4508a4:	ldp	x22, x21, [sp, #112]
  4508a8:	ldp	x24, x23, [sp, #96]
  4508ac:	ldr	x25, [sp, #80]
  4508b0:	ldp	x29, x30, [sp, #64]
  4508b4:	add	sp, sp, #0x90
  4508b8:	ret
  4508bc:	sub	sp, sp, #0x80
  4508c0:	stp	x29, x30, [sp, #32]
  4508c4:	stp	x28, x27, [sp, #48]
  4508c8:	stp	x26, x25, [sp, #64]
  4508cc:	stp	x24, x23, [sp, #80]
  4508d0:	stp	x22, x21, [sp, #96]
  4508d4:	stp	x20, x19, [sp, #112]
  4508d8:	ldr	x28, [x1]
  4508dc:	add	x29, sp, #0x20
  4508e0:	mov	x19, x5
  4508e4:	mov	x22, x2
  4508e8:	ldr	x8, [x28, #168]
  4508ec:	mov	x24, x0
  4508f0:	stur	x3, [x29, #-8]
  4508f4:	str	x4, [sp]
  4508f8:	stp	x8, x1, [sp, #8]
  4508fc:	bl	45118c <_obstack_memory_used@@Base+0x5fc8>
  450900:	mov	x20, x0
  450904:	cbnz	x0, 450910 <_obstack_memory_used@@Base+0x574c>
  450908:	ldr	w8, [x19]
  45090c:	cbnz	w8, 450bf0 <_obstack_memory_used@@Base+0x5a2c>
  450910:	ldrb	w8, [x22, #8]
  450914:	cmp	w8, #0xa
  450918:	b.ne	450a38 <_obstack_memory_used@@Base+0x5874>  // b.any
  45091c:	ldur	x8, [x29, #-8]
  450920:	orr	x25, x8, #0x800000
  450924:	ldr	x8, [sp]
  450928:	cbz	x8, 450a5c <_obstack_memory_used@@Base+0x5898>
  45092c:	mov	w21, #0xa                   	// #10
  450930:	mov	x23, #0xffffffffffffffff    	// #-1
  450934:	b	450948 <_obstack_memory_used@@Base+0x5784>
  450938:	ldrb	w8, [x22, #8]
  45093c:	mov	x20, x0
  450940:	cmp	w8, #0xa
  450944:	b.ne	450a3c <_obstack_memory_used@@Base+0x5878>  // b.any
  450948:	mov	x0, x22
  45094c:	mov	x1, x24
  450950:	mov	x2, x25
  450954:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  450958:	ldr	x8, [x24, #72]
  45095c:	add	x8, x8, w0, sxtw
  450960:	str	x8, [x24, #72]
  450964:	ldrb	w8, [x22, #8]
  450968:	orr	w9, w8, #0x8
  45096c:	cmp	w9, #0xa
  450970:	b.ne	4509c0 <_obstack_memory_used@@Base+0x57fc>  // b.any
  450974:	mov	x27, xzr
  450978:	ldr	w8, [x28, #128]
  45097c:	cmp	w8, #0xf
  450980:	b.eq	450a14 <_obstack_memory_used@@Base+0x5850>  // b.none
  450984:	ldr	x0, [x28, #112]
  450988:	add	w9, w8, #0x1
  45098c:	sxtw	x8, w8
  450990:	add	x0, x0, x8, lsl #6
  450994:	str	w9, [x28, #128]
  450998:	str	xzr, [x0, #8]!
  45099c:	stp	x20, x27, [x0, #8]
  4509a0:	str	w21, [x0, #48]
  4509a4:	stp	xzr, xzr, [x0, #24]
  4509a8:	str	x23, [x0, #56]
  4509ac:	cbz	x20, 4509b4 <_obstack_memory_used@@Base+0x57f0>
  4509b0:	str	x0, [x20]
  4509b4:	cbz	x27, 450938 <_obstack_memory_used@@Base+0x5774>
  4509b8:	str	x0, [x27]
  4509bc:	b	450938 <_obstack_memory_used@@Base+0x5774>
  4509c0:	cmp	w8, #0x9
  4509c4:	b.eq	450974 <_obstack_memory_used@@Base+0x57b0>  // b.none
  4509c8:	ldp	x8, x1, [sp, #8]
  4509cc:	ldur	x3, [x29, #-8]
  4509d0:	ldr	x4, [sp]
  4509d4:	ldr	x26, [x28, #168]
  4509d8:	mov	x0, x24
  4509dc:	mov	x2, x22
  4509e0:	mov	x5, x19
  4509e4:	str	x8, [x28, #168]
  4509e8:	bl	45118c <_obstack_memory_used@@Base+0x5fc8>
  4509ec:	mov	x27, x0
  4509f0:	cbnz	x0, 4509fc <_obstack_memory_used@@Base+0x5838>
  4509f4:	ldr	w8, [x19]
  4509f8:	cbnz	w8, 450b60 <_obstack_memory_used@@Base+0x599c>
  4509fc:	ldr	x8, [x28, #168]
  450a00:	orr	x8, x8, x26
  450a04:	str	x8, [x28, #168]
  450a08:	ldr	w8, [x28, #128]
  450a0c:	cmp	w8, #0xf
  450a10:	b.ne	450984 <_obstack_memory_used@@Base+0x57c0>  // b.any
  450a14:	mov	w0, #0x3c8                 	// #968
  450a18:	bl	404210 <malloc@plt>
  450a1c:	cbz	x0, 450bf8 <_obstack_memory_used@@Base+0x5a34>
  450a20:	ldr	x9, [x28, #112]
  450a24:	mov	w8, wzr
  450a28:	str	x9, [x0]
  450a2c:	str	x0, [x28, #112]
  450a30:	str	wzr, [x28, #128]
  450a34:	b	450988 <_obstack_memory_used@@Base+0x57c4>
  450a38:	mov	x0, x20
  450a3c:	ldp	x20, x19, [sp, #112]
  450a40:	ldp	x22, x21, [sp, #96]
  450a44:	ldp	x24, x23, [sp, #80]
  450a48:	ldp	x26, x25, [sp, #64]
  450a4c:	ldp	x28, x27, [sp, #48]
  450a50:	ldp	x29, x30, [sp, #32]
  450a54:	add	sp, sp, #0x80
  450a58:	ret
  450a5c:	mov	w21, #0xa                   	// #10
  450a60:	mov	x23, #0xffffffffffffffff    	// #-1
  450a64:	b	450a78 <_obstack_memory_used@@Base+0x58b4>
  450a68:	ldrb	w8, [x22, #8]
  450a6c:	mov	x20, x0
  450a70:	cmp	w8, #0xa
  450a74:	b.ne	450a3c <_obstack_memory_used@@Base+0x5878>  // b.any
  450a78:	mov	x0, x22
  450a7c:	mov	x1, x24
  450a80:	mov	x2, x25
  450a84:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  450a88:	ldr	x8, [x24, #72]
  450a8c:	add	x8, x8, w0, sxtw
  450a90:	str	x8, [x24, #72]
  450a94:	ldrb	w8, [x22, #8]
  450a98:	orr	w8, w8, #0x8
  450a9c:	cmp	w8, #0xa
  450aa0:	b.ne	450af0 <_obstack_memory_used@@Base+0x592c>  // b.any
  450aa4:	mov	x26, xzr
  450aa8:	ldr	w8, [x28, #128]
  450aac:	cmp	w8, #0xf
  450ab0:	b.eq	450b3c <_obstack_memory_used@@Base+0x5978>  // b.none
  450ab4:	ldr	x0, [x28, #112]
  450ab8:	add	w9, w8, #0x1
  450abc:	sxtw	x8, w8
  450ac0:	add	x0, x0, x8, lsl #6
  450ac4:	str	w9, [x28, #128]
  450ac8:	str	xzr, [x0, #8]!
  450acc:	stp	x20, x26, [x0, #8]
  450ad0:	str	w21, [x0, #48]
  450ad4:	stp	xzr, xzr, [x0, #24]
  450ad8:	str	x23, [x0, #56]
  450adc:	cbz	x20, 450ae4 <_obstack_memory_used@@Base+0x5920>
  450ae0:	str	x0, [x20]
  450ae4:	cbz	x26, 450a68 <_obstack_memory_used@@Base+0x58a4>
  450ae8:	str	x0, [x26]
  450aec:	b	450a68 <_obstack_memory_used@@Base+0x58a4>
  450af0:	ldp	x8, x1, [sp, #8]
  450af4:	ldur	x3, [x29, #-8]
  450af8:	ldr	x27, [x28, #168]
  450afc:	mov	x0, x24
  450b00:	mov	x2, x22
  450b04:	mov	x4, xzr
  450b08:	mov	x5, x19
  450b0c:	str	x8, [x28, #168]
  450b10:	bl	45118c <_obstack_memory_used@@Base+0x5fc8>
  450b14:	mov	x26, x0
  450b18:	cbnz	x0, 450b24 <_obstack_memory_used@@Base+0x5960>
  450b1c:	ldr	w8, [x19]
  450b20:	cbnz	w8, 450b60 <_obstack_memory_used@@Base+0x599c>
  450b24:	ldr	x8, [x28, #168]
  450b28:	orr	x8, x8, x27
  450b2c:	str	x8, [x28, #168]
  450b30:	ldr	w8, [x28, #128]
  450b34:	cmp	w8, #0xf
  450b38:	b.ne	450ab4 <_obstack_memory_used@@Base+0x58f0>  // b.any
  450b3c:	mov	w0, #0x3c8                 	// #968
  450b40:	bl	404210 <malloc@plt>
  450b44:	cbz	x0, 450bf8 <_obstack_memory_used@@Base+0x5a34>
  450b48:	ldr	x9, [x28, #112]
  450b4c:	mov	w8, wzr
  450b50:	str	x9, [x0]
  450b54:	str	x0, [x28, #112]
  450b58:	str	wzr, [x28, #128]
  450b5c:	b	450ab8 <_obstack_memory_used@@Base+0x58f4>
  450b60:	cbz	x20, 450bf0 <_obstack_memory_used@@Base+0x5a2c>
  450b64:	mov	w21, #0xff                  	// #255
  450b68:	movk	w21, #0x4, lsl #16
  450b6c:	mov	x22, x20
  450b70:	ldr	x20, [x20, #8]
  450b74:	cbnz	x20, 450b6c <_obstack_memory_used@@Base+0x59a8>
  450b78:	ldr	x20, [x22, #16]
  450b7c:	cbnz	x20, 450b6c <_obstack_memory_used@@Base+0x59a8>
  450b80:	ldr	w8, [x22, #48]
  450b84:	and	w8, w8, w21
  450b88:	cmp	w8, #0x3
  450b8c:	b.eq	450bc0 <_obstack_memory_used@@Base+0x59fc>  // b.none
  450b90:	cmp	w8, #0x6
  450b94:	b.ne	450bcc <_obstack_memory_used@@Base+0x5a08>  // b.any
  450b98:	ldr	x19, [x22, #40]
  450b9c:	ldr	x0, [x19]
  450ba0:	bl	4046b0 <free@plt>
  450ba4:	ldr	x0, [x19, #8]
  450ba8:	bl	4046b0 <free@plt>
  450bac:	ldr	x0, [x19, #16]
  450bb0:	bl	4046b0 <free@plt>
  450bb4:	ldr	x0, [x19, #24]
  450bb8:	bl	4046b0 <free@plt>
  450bbc:	b	450bc4 <_obstack_memory_used@@Base+0x5a00>
  450bc0:	ldr	x19, [x22, #40]
  450bc4:	mov	x0, x19
  450bc8:	bl	4046b0 <free@plt>
  450bcc:	ldr	x8, [x22]
  450bd0:	cbz	x8, 450bf0 <_obstack_memory_used@@Base+0x5a2c>
  450bd4:	ldr	x20, [x8, #16]
  450bd8:	cmp	x20, x22
  450bdc:	mov	x22, x8
  450be0:	b.eq	450b80 <_obstack_memory_used@@Base+0x59bc>  // b.none
  450be4:	mov	x22, x8
  450be8:	cbz	x20, 450b80 <_obstack_memory_used@@Base+0x59bc>
  450bec:	b	450b6c <_obstack_memory_used@@Base+0x59a8>
  450bf0:	mov	x0, xzr
  450bf4:	b	450a3c <_obstack_memory_used@@Base+0x5878>
  450bf8:	mov	x0, xzr
  450bfc:	mov	w8, #0xc                   	// #12
  450c00:	str	w8, [x19]
  450c04:	b	450a3c <_obstack_memory_used@@Base+0x5878>
  450c08:	sub	sp, sp, #0x50
  450c0c:	stp	x29, x30, [sp, #16]
  450c10:	stp	x24, x23, [sp, #32]
  450c14:	stp	x22, x21, [sp, #48]
  450c18:	stp	x20, x19, [sp, #64]
  450c1c:	ldr	x9, [x1, #104]
  450c20:	ldr	x8, [x1, #72]
  450c24:	mov	x19, x0
  450c28:	add	x29, sp, #0x10
  450c2c:	cmp	x9, x8
  450c30:	b.le	450d14 <_obstack_memory_used@@Base+0x5b50>
  450c34:	ldr	x9, [x1, #8]
  450c38:	mov	x23, x19
  450c3c:	mov	x20, x2
  450c40:	mov	x21, x1
  450c44:	ldrb	w24, [x9, x8]
  450c48:	strb	w24, [x23], #8
  450c4c:	ldr	w8, [x23]
  450c50:	and	w9, w8, #0xff9fffff
  450c54:	str	w9, [x23]
  450c58:	ldr	w11, [x1, #144]
  450c5c:	cmp	w11, #0x2
  450c60:	b.lt	450c84 <_obstack_memory_used@@Base+0x5ac0>  // b.tstop
  450c64:	ldr	x9, [x21, #72]
  450c68:	ldr	x10, [x21, #48]
  450c6c:	cmp	x9, x10
  450c70:	b.eq	450c84 <_obstack_memory_used@@Base+0x5ac0>  // b.none
  450c74:	ldr	x10, [x21, #16]
  450c78:	ldr	w9, [x10, x9, lsl #2]
  450c7c:	cmn	w9, #0x1
  450c80:	b.eq	450e54 <_obstack_memory_used@@Base+0x5c90>  // b.none
  450c84:	mov	w9, #0xff00                	// #65280
  450c88:	cmp	w24, #0x5c
  450c8c:	movk	w9, #0xff9f, lsl #16
  450c90:	b.ne	450d24 <_obstack_memory_used@@Base+0x5b60>  // b.any
  450c94:	ldr	x12, [x21, #72]
  450c98:	ldr	x13, [x21, #88]
  450c9c:	add	x10, x12, #0x1
  450ca0:	cmp	x10, x13
  450ca4:	b.ge	450d74 <_obstack_memory_used@@Base+0x5bb0>  // b.tcont
  450ca8:	ldrb	w13, [x21, #139]
  450cac:	cbnz	w13, 451128 <_obstack_memory_used@@Base+0x5f64>
  450cb0:	ldr	x11, [x21, #8]
  450cb4:	ldrb	w22, [x11, x10]
  450cb8:	and	w8, w8, w9
  450cbc:	orr	w24, w8, #0x1
  450cc0:	strb	w22, [x19]
  450cc4:	str	w24, [x19, #8]
  450cc8:	ldr	w8, [x21, #144]
  450ccc:	cmp	w8, #0x2
  450cd0:	b.lt	450de4 <_obstack_memory_used@@Base+0x5c20>  // b.tstop
  450cd4:	ldr	x8, [x21, #72]
  450cd8:	ldr	x9, [x21, #16]
  450cdc:	add	x8, x9, x8, lsl #2
  450ce0:	ldr	w21, [x8, #4]
  450ce4:	mov	w0, w21
  450ce8:	bl	404880 <iswalnum@plt>
  450cec:	ldr	w9, [x23]
  450cf0:	cmp	w0, #0x0
  450cf4:	mov	w8, #0x5f                  	// #95
  450cf8:	mov	w10, #0x400000              	// #4194304
  450cfc:	ccmp	w21, w8, #0x4, eq  // eq = none
  450d00:	csel	w8, w10, wzr, eq  // eq = none
  450d04:	and	w9, w9, #0xffbfffff
  450d08:	orr	w8, w8, w9
  450d0c:	and	x9, x22, #0xff
  450d10:	b	450e0c <_obstack_memory_used@@Base+0x5c48>
  450d14:	mov	w8, #0x2                   	// #2
  450d18:	mov	w0, wzr
  450d1c:	strb	w8, [x19, #8]
  450d20:	b	450f84 <_obstack_memory_used@@Base+0x5dc0>
  450d24:	and	w8, w8, w9
  450d28:	orr	w22, w8, #0x1
  450d2c:	str	w22, [x23]
  450d30:	ldr	w8, [x21, #144]
  450d34:	cmp	w8, #0x2
  450d38:	b.lt	450d84 <_obstack_memory_used@@Base+0x5bc0>  // b.tstop
  450d3c:	ldr	x8, [x21, #72]
  450d40:	ldr	x9, [x21, #16]
  450d44:	ldr	w22, [x9, x8, lsl #2]
  450d48:	mov	w0, w22
  450d4c:	bl	404880 <iswalnum@plt>
  450d50:	ldr	w9, [x23]
  450d54:	cmp	w0, #0x0
  450d58:	mov	w8, #0x5f                  	// #95
  450d5c:	ccmp	w22, w8, #0x4, eq  // eq = none
  450d60:	mov	w8, #0x400000              	// #4194304
  450d64:	csel	w8, w8, wzr, eq  // eq = none
  450d68:	and	w9, w9, #0xffbfffff
  450d6c:	orr	w8, w8, w9
  450d70:	b	450db0 <_obstack_memory_used@@Base+0x5bec>
  450d74:	and	w8, w8, w9
  450d78:	mov	w9, #0x24                  	// #36
  450d7c:	orr	w8, w8, w9
  450d80:	b	450f7c <_obstack_memory_used@@Base+0x5db8>
  450d84:	bl	404640 <__ctype_b_loc@plt>
  450d88:	ldr	x8, [x0]
  450d8c:	cmp	w24, #0x5f
  450d90:	cset	w9, eq  // eq = none
  450d94:	ldrh	w8, [x8, x24, lsl #1]
  450d98:	and	w8, w8, #0x8
  450d9c:	orr	w8, w9, w8, lsr #3
  450da0:	cmp	w8, #0x0
  450da4:	mov	w8, #0x400000              	// #4194304
  450da8:	csel	w8, w8, wzr, ne  // ne = any
  450dac:	orr	w8, w8, w22
  450db0:	sub	w9, w24, #0xa
  450db4:	cmp	w9, #0x73
  450db8:	mov	w0, #0x1                   	// #1
  450dbc:	str	w8, [x23]
  450dc0:	b.hi	450f84 <_obstack_memory_used@@Base+0x5dc0>  // b.pmore
  450dc4:	adrp	x10, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  450dc8:	add	x10, x10, #0x30f
  450dcc:	adr	x11, 450ddc <_obstack_memory_used@@Base+0x5c18>
  450dd0:	ldrb	w12, [x10, x9]
  450dd4:	add	x11, x11, x12, lsl #2
  450dd8:	br	x11
  450ddc:	tbnz	w20, #11, 450f74 <_obstack_memory_used@@Base+0x5db0>
  450de0:	b	450f80 <_obstack_memory_used@@Base+0x5dbc>
  450de4:	bl	404640 <__ctype_b_loc@plt>
  450de8:	ldr	x8, [x0]
  450dec:	and	x9, x22, #0xff
  450df0:	and	w10, w22, #0xff
  450df4:	cmp	w10, #0x5f
  450df8:	ldrh	w8, [x8, x9, lsl #1]
  450dfc:	cset	w10, eq  // eq = none
  450e00:	ubfx	w8, w8, #3, #1
  450e04:	orr	w8, w8, w10
  450e08:	orr	w8, w24, w8, lsl #22
  450e0c:	and	w10, w22, #0xff
  450e10:	sub	w10, w10, #0x27
  450e14:	cmp	w10, #0x56
  450e18:	mov	w0, #0x2                   	// #2
  450e1c:	str	w8, [x23]
  450e20:	b.hi	450f84 <_obstack_memory_used@@Base+0x5dc0>  // b.pmore
  450e24:	adrp	x11, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  450e28:	add	x11, x11, #0x383
  450e2c:	adr	x12, 450e3c <_obstack_memory_used@@Base+0x5c78>
  450e30:	ldrb	w13, [x11, x10]
  450e34:	add	x12, x12, x13, lsl #2
  450e38:	br	x12
  450e3c:	tbnz	w20, #14, 451120 <_obstack_memory_used@@Base+0x5f5c>
  450e40:	and	w8, w8, #0xffffff00
  450e44:	sub	x9, x9, #0x31
  450e48:	orr	w8, w8, #0x4
  450e4c:	str	x9, [x19]
  450e50:	b	4510a4 <_obstack_memory_used@@Base+0x5ee0>
  450e54:	mov	w9, #0xff00                	// #65280
  450e58:	movk	w9, #0xff9f, lsl #16
  450e5c:	mov	w10, #0x1                   	// #1
  450e60:	movk	w10, #0x20, lsl #16
  450e64:	and	w8, w8, w9
  450e68:	orr	w8, w8, w10
  450e6c:	b	450f7c <_obstack_memory_used@@Base+0x5db8>
  450e70:	tbnz	w20, #3, 450ebc <_obstack_memory_used@@Base+0x5cf8>
  450e74:	ldr	x9, [x21, #72]
  450e78:	ldr	x10, [x21, #88]
  450e7c:	add	x9, x9, #0x1
  450e80:	cmp	x9, x10
  450e84:	b.eq	450ebc <_obstack_memory_used@@Base+0x5cf8>  // b.none
  450e88:	mov	x0, sp
  450e8c:	mov	x1, x21
  450e90:	mov	x2, x20
  450e94:	str	x9, [x21, #72]
  450e98:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  450e9c:	ldr	x8, [x21, #72]
  450ea0:	sub	x8, x8, #0x1
  450ea4:	str	x8, [x21, #72]
  450ea8:	ldrb	w8, [sp, #8]
  450eac:	sub	w8, w8, #0x9
  450eb0:	cmp	w8, #0x1
  450eb4:	b.hi	450f80 <_obstack_memory_used@@Base+0x5dbc>  // b.pmore
  450eb8:	ldr	w8, [x23]
  450ebc:	and	w8, w8, #0xffffff00
  450ec0:	mov	w9, #0x20                  	// #32
  450ec4:	b	450f3c <_obstack_memory_used@@Base+0x5d78>
  450ec8:	tbz	w20, #13, 450f80 <_obstack_memory_used@@Base+0x5dbc>
  450ecc:	and	w8, w8, #0xffffff00
  450ed0:	orr	w8, w8, #0x8
  450ed4:	b	450f7c <_obstack_memory_used@@Base+0x5db8>
  450ed8:	tbz	w20, #13, 450f80 <_obstack_memory_used@@Base+0x5dbc>
  450edc:	mov	w9, #0x9                   	// #9
  450ee0:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450ee4:	mov	w9, #0xb                   	// #11
  450ee8:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450eec:	mov	w9, #0x402                 	// #1026
  450ef0:	tst	x20, x9
  450ef4:	b.ne	450f80 <_obstack_memory_used@@Base+0x5dbc>  // b.any
  450ef8:	mov	w9, #0x12                  	// #18
  450efc:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450f00:	mov	w9, #0x5                   	// #5
  450f04:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450f08:	mov	w9, #0x402                 	// #1026
  450f0c:	tst	x20, x9
  450f10:	b.ne	450f80 <_obstack_memory_used@@Base+0x5dbc>  // b.any
  450f14:	mov	w9, #0x13                  	// #19
  450f18:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450f1c:	mov	w9, #0x14                  	// #20
  450f20:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450f24:	mov	w9, #0x8                   	// #8
  450f28:	movk	w9, #0x80, lsl #16
  450f2c:	tst	x20, x9
  450f30:	b.eq	450fb8 <_obstack_memory_used@@Base+0x5df4>  // b.none
  450f34:	and	w8, w8, #0xffffff00
  450f38:	mov	w9, #0x10                  	// #16
  450f3c:	orr	w8, w8, #0xc
  450f40:	str	w9, [x19]
  450f44:	str	w8, [x19, #8]
  450f48:	b	450f80 <_obstack_memory_used@@Base+0x5dbc>
  450f4c:	mvn	w9, w20
  450f50:	mov	w10, #0x1200                	// #4608
  450f54:	tst	x9, x10
  450f58:	b.ne	450f80 <_obstack_memory_used@@Base+0x5dbc>  // b.any
  450f5c:	mov	w9, #0x17                  	// #23
  450f60:	b	450f78 <_obstack_memory_used@@Base+0x5db4>
  450f64:	mov	w9, #0x8400                	// #33792
  450f68:	and	x9, x20, x9
  450f6c:	cmp	x9, #0x8, lsl #12
  450f70:	b.ne	450f80 <_obstack_memory_used@@Base+0x5dbc>  // b.any
  450f74:	mov	w9, #0xa                   	// #10
  450f78:	bfxil	w8, w9, #0, #8
  450f7c:	str	w8, [x23]
  450f80:	mov	w0, #0x1                   	// #1
  450f84:	ldp	x20, x19, [sp, #64]
  450f88:	ldp	x22, x21, [sp, #48]
  450f8c:	ldp	x24, x23, [sp, #32]
  450f90:	ldp	x29, x30, [sp, #16]
  450f94:	add	sp, sp, #0x50
  450f98:	ret
  450f9c:	mvn	w9, w20
  450fa0:	mov	w10, #0x1200                	// #4608
  450fa4:	tst	x9, x10
  450fa8:	b.ne	450f80 <_obstack_memory_used@@Base+0x5dbc>  // b.any
  450fac:	and	w8, w8, #0xffffff00
  450fb0:	orr	w8, w8, #0x18
  450fb4:	b	450f7c <_obstack_memory_used@@Base+0x5db8>
  450fb8:	ldr	x9, [x21, #72]
  450fbc:	cbz	x9, 450f34 <_obstack_memory_used@@Base+0x5d70>
  450fc0:	tbz	w20, #11, 450f80 <_obstack_memory_used@@Base+0x5dbc>
  450fc4:	ldr	x10, [x21, #8]
  450fc8:	add	x9, x9, x10
  450fcc:	ldurb	w9, [x9, #-1]
  450fd0:	cmp	w9, #0xa
  450fd4:	b.eq	450f34 <_obstack_memory_used@@Base+0x5d70>  // b.none
  450fd8:	b	450f80 <_obstack_memory_used@@Base+0x5dbc>
  450fdc:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  450fe0:	and	w8, w8, #0xffffff00
  450fe4:	mov	w9, #0x80                  	// #128
  450fe8:	b	45109c <_obstack_memory_used@@Base+0x5ed8>
  450fec:	tbnz	w20, #13, 451120 <_obstack_memory_used@@Base+0x5f5c>
  450ff0:	and	w8, w8, #0xffffff00
  450ff4:	orr	w8, w8, #0x8
  450ff8:	b	4510f8 <_obstack_memory_used@@Base+0x5f34>
  450ffc:	tbnz	w20, #13, 451120 <_obstack_memory_used@@Base+0x5f5c>
  451000:	mov	w9, #0x9                   	// #9
  451004:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  451008:	mov	w9, #0x402                 	// #1026
  45100c:	and	x9, x20, x9
  451010:	cmp	x9, #0x2
  451014:	b.ne	451120 <_obstack_memory_used@@Base+0x5f5c>  // b.any
  451018:	mov	w9, #0x12                  	// #18
  45101c:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  451020:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  451024:	and	w8, w8, #0xffffff00
  451028:	mov	w9, #0x6                   	// #6
  45102c:	b	45109c <_obstack_memory_used@@Base+0x5ed8>
  451030:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  451034:	and	w8, w8, #0xffffff00
  451038:	mov	w9, #0x9                   	// #9
  45103c:	b	45109c <_obstack_memory_used@@Base+0x5ed8>
  451040:	mov	w9, #0x402                 	// #1026
  451044:	and	x9, x20, x9
  451048:	cmp	x9, #0x2
  45104c:	b.ne	451120 <_obstack_memory_used@@Base+0x5f5c>  // b.any
  451050:	mov	w9, #0x13                  	// #19
  451054:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  451058:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  45105c:	and	w8, w8, #0xffffff00
  451060:	mov	w9, #0x200                 	// #512
  451064:	b	45109c <_obstack_memory_used@@Base+0x5ed8>
  451068:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  45106c:	mov	w9, #0x23                  	// #35
  451070:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  451074:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  451078:	mov	w9, #0x21                  	// #33
  45107c:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  451080:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  451084:	and	w8, w8, #0xffffff00
  451088:	mov	w9, #0x40                  	// #64
  45108c:	b	45109c <_obstack_memory_used@@Base+0x5ed8>
  451090:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  451094:	and	w8, w8, #0xffffff00
  451098:	mov	w9, #0x100                 	// #256
  45109c:	orr	w8, w8, #0xc
  4510a0:	str	w9, [x19]
  4510a4:	str	w8, [x19, #8]
  4510a8:	mov	w0, #0x2                   	// #2
  4510ac:	b	450f84 <_obstack_memory_used@@Base+0x5dc0>
  4510b0:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  4510b4:	mov	w9, #0x22                  	// #34
  4510b8:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  4510bc:	tbnz	w20, #19, 451120 <_obstack_memory_used@@Base+0x5f5c>
  4510c0:	and	w8, w8, #0xffffff00
  4510c4:	orr	w8, w8, #0x20
  4510c8:	b	4510f8 <_obstack_memory_used@@Base+0x5f34>
  4510cc:	mov	w9, #0x1200                	// #4608
  4510d0:	and	x9, x20, x9
  4510d4:	cmp	x9, #0x200
  4510d8:	b.ne	451120 <_obstack_memory_used@@Base+0x5f5c>  // b.any
  4510dc:	mov	w9, #0x17                  	// #23
  4510e0:	b	4510f4 <_obstack_memory_used@@Base+0x5f30>
  4510e4:	mov	w9, #0x8400                	// #33792
  4510e8:	tst	x20, x9
  4510ec:	b.ne	451120 <_obstack_memory_used@@Base+0x5f5c>  // b.any
  4510f0:	mov	w9, #0xa                   	// #10
  4510f4:	bfxil	w8, w9, #0, #8
  4510f8:	str	w8, [x23]
  4510fc:	mov	w0, #0x2                   	// #2
  451100:	b	450f84 <_obstack_memory_used@@Base+0x5dc0>
  451104:	mov	w9, #0x1200                	// #4608
  451108:	and	x9, x20, x9
  45110c:	cmp	x9, #0x200
  451110:	b.ne	451120 <_obstack_memory_used@@Base+0x5f5c>  // b.any
  451114:	and	w8, w8, #0xffffff00
  451118:	orr	w8, w8, #0x18
  45111c:	b	4510f8 <_obstack_memory_used@@Base+0x5f34>
  451120:	mov	w0, #0x2                   	// #2
  451124:	b	450f84 <_obstack_memory_used@@Base+0x5dc0>
  451128:	cmp	w11, #0x2
  45112c:	b.lt	45115c <_obstack_memory_used@@Base+0x5f98>  // b.tstop
  451130:	ldr	x11, [x21, #16]
  451134:	ldr	w13, [x11, x10, lsl #2]
  451138:	cmn	w13, #0x1
  45113c:	b.eq	450cb0 <_obstack_memory_used@@Base+0x5aec>  // b.none
  451140:	ldr	x13, [x21, #48]
  451144:	add	x12, x12, #0x2
  451148:	cmp	x13, x12
  45114c:	b.eq	45115c <_obstack_memory_used@@Base+0x5f98>  // b.none
  451150:	ldr	w11, [x11, x12, lsl #2]
  451154:	cmn	w11, #0x1
  451158:	b.eq	450cb0 <_obstack_memory_used@@Base+0x5aec>  // b.none
  45115c:	ldrb	w11, [x21, #140]
  451160:	mov	x12, x10
  451164:	cbz	w11, 451170 <_obstack_memory_used@@Base+0x5fac>
  451168:	ldr	x12, [x21, #24]
  45116c:	ldr	x12, [x12, x10, lsl #3]
  451170:	ldr	x13, [x21, #40]
  451174:	ldr	x14, [x21]
  451178:	add	x12, x13, x12
  45117c:	ldrsb	w22, [x14, x12]
  451180:	cbz	w11, 450cb8 <_obstack_memory_used@@Base+0x5af4>
  451184:	tbnz	w22, #31, 450cb0 <_obstack_memory_used@@Base+0x5aec>
  451188:	b	450cb8 <_obstack_memory_used@@Base+0x5af4>
  45118c:	stp	x29, x30, [sp, #-96]!
  451190:	stp	x28, x27, [sp, #16]
  451194:	stp	x26, x25, [sp, #32]
  451198:	stp	x24, x23, [sp, #48]
  45119c:	stp	x22, x21, [sp, #64]
  4511a0:	stp	x20, x19, [sp, #80]
  4511a4:	ldr	x27, [x1]
  4511a8:	mov	x29, sp
  4511ac:	mov	x19, x5
  4511b0:	mov	x26, x4
  4511b4:	mov	x21, x3
  4511b8:	mov	x22, x2
  4511bc:	mov	x23, x1
  4511c0:	mov	x24, x0
  4511c4:	bl	451588 <_obstack_memory_used@@Base+0x63c4>
  4511c8:	mov	x20, x0
  4511cc:	cbnz	x0, 4511d8 <_obstack_memory_used@@Base+0x6014>
  4511d0:	ldr	w8, [x19]
  4511d4:	cbnz	w8, 451444 <_obstack_memory_used@@Base+0x6280>
  4511d8:	cbz	x26, 4512cc <_obstack_memory_used@@Base+0x6108>
  4511dc:	mov	x28, #0xffffffffffffffff    	// #-1
  4511e0:	ldrb	w8, [x22, #8]
  4511e4:	orr	w9, w8, #0x8
  4511e8:	cmp	w9, #0xa
  4511ec:	b.ne	45120c <_obstack_memory_used@@Base+0x6048>  // b.any
  4511f0:	b	451448 <_obstack_memory_used@@Base+0x6284>
  4511f4:	cmp	x20, #0x0
  4511f8:	csel	x20, x25, x20, eq  // eq = none
  4511fc:	ldrb	w8, [x22, #8]
  451200:	orr	w9, w8, #0x8
  451204:	cmp	w9, #0xa
  451208:	b.eq	451448 <_obstack_memory_used@@Base+0x6284>  // b.none
  45120c:	cmp	w8, #0x9
  451210:	b.eq	451448 <_obstack_memory_used@@Base+0x6284>  // b.none
  451214:	mov	x0, x24
  451218:	mov	x1, x23
  45121c:	mov	x2, x22
  451220:	mov	x3, x21
  451224:	mov	x4, x26
  451228:	mov	x5, x19
  45122c:	bl	451588 <_obstack_memory_used@@Base+0x63c4>
  451230:	cmp	x20, #0x0
  451234:	mov	x25, x0
  451238:	cset	w8, ne  // ne = any
  45123c:	cbnz	x0, 451248 <_obstack_memory_used@@Base+0x6084>
  451240:	ldr	w9, [x19]
  451244:	cbnz	w9, 4513b4 <_obstack_memory_used@@Base+0x61f0>
  451248:	cbz	x20, 4511f4 <_obstack_memory_used@@Base+0x6030>
  45124c:	cbz	x25, 4511f4 <_obstack_memory_used@@Base+0x6030>
  451250:	ldr	w8, [x27, #128]
  451254:	cmp	w8, #0xf
  451258:	b.eq	4512a8 <_obstack_memory_used@@Base+0x60e4>  // b.none
  45125c:	ldr	x0, [x27, #112]
  451260:	add	w9, w8, #0x1
  451264:	sxtw	x8, w8
  451268:	add	x8, x0, x8, lsl #6
  45126c:	str	w9, [x27, #128]
  451270:	str	xzr, [x8, #8]!
  451274:	mov	w9, #0x10                  	// #16
  451278:	stp	x20, x25, [x8, #8]
  45127c:	str	w9, [x8, #48]
  451280:	stp	xzr, xzr, [x8, #24]
  451284:	str	x28, [x8, #56]
  451288:	str	x8, [x20]
  45128c:	str	x8, [x25]
  451290:	mov	x20, x8
  451294:	ldrb	w8, [x22, #8]
  451298:	orr	w9, w8, #0x8
  45129c:	cmp	w9, #0xa
  4512a0:	b.ne	45120c <_obstack_memory_used@@Base+0x6048>  // b.any
  4512a4:	b	451448 <_obstack_memory_used@@Base+0x6284>
  4512a8:	mov	w0, #0x3c8                 	// #968
  4512ac:	bl	404210 <malloc@plt>
  4512b0:	cbz	x0, 451468 <_obstack_memory_used@@Base+0x62a4>
  4512b4:	ldr	x9, [x27, #112]
  4512b8:	mov	w8, wzr
  4512bc:	str	x9, [x0]
  4512c0:	str	x0, [x27, #112]
  4512c4:	str	wzr, [x27, #128]
  4512c8:	b	451260 <_obstack_memory_used@@Base+0x609c>
  4512cc:	mov	w26, #0x10                  	// #16
  4512d0:	mov	x28, #0xffffffffffffffff    	// #-1
  4512d4:	ldrb	w8, [x22, #8]
  4512d8:	orr	w8, w8, #0x8
  4512dc:	cmp	w8, #0xa
  4512e0:	b.ne	451300 <_obstack_memory_used@@Base+0x613c>  // b.any
  4512e4:	b	451448 <_obstack_memory_used@@Base+0x6284>
  4512e8:	cmp	x20, #0x0
  4512ec:	csel	x20, x25, x20, eq  // eq = none
  4512f0:	ldrb	w8, [x22, #8]
  4512f4:	orr	w8, w8, #0x8
  4512f8:	cmp	w8, #0xa
  4512fc:	b.eq	451448 <_obstack_memory_used@@Base+0x6284>  // b.none
  451300:	mov	x0, x24
  451304:	mov	x1, x23
  451308:	mov	x2, x22
  45130c:	mov	x3, x21
  451310:	mov	x4, xzr
  451314:	mov	x5, x19
  451318:	bl	451588 <_obstack_memory_used@@Base+0x63c4>
  45131c:	cmp	x20, #0x0
  451320:	mov	x25, x0
  451324:	cset	w8, ne  // ne = any
  451328:	cbnz	x0, 451334 <_obstack_memory_used@@Base+0x6170>
  45132c:	ldr	w9, [x19]
  451330:	cbnz	w9, 4513b4 <_obstack_memory_used@@Base+0x61f0>
  451334:	cbz	x20, 4512e8 <_obstack_memory_used@@Base+0x6124>
  451338:	cbz	x25, 4512e8 <_obstack_memory_used@@Base+0x6124>
  45133c:	ldr	w8, [x27, #128]
  451340:	cmp	w8, #0xf
  451344:	b.eq	451390 <_obstack_memory_used@@Base+0x61cc>  // b.none
  451348:	ldr	x0, [x27, #112]
  45134c:	add	w9, w8, #0x1
  451350:	sxtw	x8, w8
  451354:	add	x8, x0, x8, lsl #6
  451358:	str	w9, [x27, #128]
  45135c:	str	xzr, [x8, #8]!
  451360:	stp	x20, x25, [x8, #8]
  451364:	str	w26, [x8, #48]
  451368:	stp	xzr, xzr, [x8, #24]
  45136c:	str	x28, [x8, #56]
  451370:	str	x8, [x20]
  451374:	str	x8, [x25]
  451378:	mov	x20, x8
  45137c:	ldrb	w8, [x22, #8]
  451380:	orr	w8, w8, #0x8
  451384:	cmp	w8, #0xa
  451388:	b.ne	451300 <_obstack_memory_used@@Base+0x613c>  // b.any
  45138c:	b	451448 <_obstack_memory_used@@Base+0x6284>
  451390:	mov	w0, #0x3c8                 	// #968
  451394:	bl	404210 <malloc@plt>
  451398:	cbz	x0, 451468 <_obstack_memory_used@@Base+0x62a4>
  45139c:	ldr	x9, [x27, #112]
  4513a0:	mov	w8, wzr
  4513a4:	str	x9, [x0]
  4513a8:	str	x0, [x27, #112]
  4513ac:	str	wzr, [x27, #128]
  4513b0:	b	45134c <_obstack_memory_used@@Base+0x6188>
  4513b4:	cbz	w8, 451444 <_obstack_memory_used@@Base+0x6280>
  4513b8:	mov	w21, #0xff                  	// #255
  4513bc:	movk	w21, #0x4, lsl #16
  4513c0:	mov	x22, x20
  4513c4:	ldr	x20, [x20, #8]
  4513c8:	cbnz	x20, 4513c0 <_obstack_memory_used@@Base+0x61fc>
  4513cc:	ldr	x20, [x22, #16]
  4513d0:	cbnz	x20, 4513c0 <_obstack_memory_used@@Base+0x61fc>
  4513d4:	ldr	w8, [x22, #48]
  4513d8:	and	w8, w8, w21
  4513dc:	cmp	w8, #0x3
  4513e0:	b.eq	451414 <_obstack_memory_used@@Base+0x6250>  // b.none
  4513e4:	cmp	w8, #0x6
  4513e8:	b.ne	451420 <_obstack_memory_used@@Base+0x625c>  // b.any
  4513ec:	ldr	x19, [x22, #40]
  4513f0:	ldr	x0, [x19]
  4513f4:	bl	4046b0 <free@plt>
  4513f8:	ldr	x0, [x19, #8]
  4513fc:	bl	4046b0 <free@plt>
  451400:	ldr	x0, [x19, #16]
  451404:	bl	4046b0 <free@plt>
  451408:	ldr	x0, [x19, #24]
  45140c:	bl	4046b0 <free@plt>
  451410:	b	451418 <_obstack_memory_used@@Base+0x6254>
  451414:	ldr	x19, [x22, #40]
  451418:	mov	x0, x19
  45141c:	bl	4046b0 <free@plt>
  451420:	ldr	x8, [x22]
  451424:	cbz	x8, 451444 <_obstack_memory_used@@Base+0x6280>
  451428:	ldr	x20, [x8, #16]
  45142c:	cmp	x20, x22
  451430:	mov	x22, x8
  451434:	b.eq	4513d4 <_obstack_memory_used@@Base+0x6210>  // b.none
  451438:	mov	x22, x8
  45143c:	cbz	x20, 4513d4 <_obstack_memory_used@@Base+0x6210>
  451440:	b	4513c0 <_obstack_memory_used@@Base+0x61fc>
  451444:	mov	x20, xzr
  451448:	mov	x0, x20
  45144c:	ldp	x20, x19, [sp, #80]
  451450:	ldp	x22, x21, [sp, #64]
  451454:	ldp	x24, x23, [sp, #48]
  451458:	ldp	x26, x25, [sp, #32]
  45145c:	ldp	x28, x27, [sp, #16]
  451460:	ldp	x29, x30, [sp], #96
  451464:	ret
  451468:	mov	w22, #0xff                  	// #255
  45146c:	movk	w22, #0x4, lsl #16
  451470:	mov	x23, x25
  451474:	ldr	x25, [x25, #8]
  451478:	cbnz	x25, 451470 <_obstack_memory_used@@Base+0x62ac>
  45147c:	ldr	x25, [x23, #16]
  451480:	cbnz	x25, 451470 <_obstack_memory_used@@Base+0x62ac>
  451484:	ldr	w8, [x23, #48]
  451488:	and	w8, w8, w22
  45148c:	cmp	w8, #0x3
  451490:	b.eq	4514c4 <_obstack_memory_used@@Base+0x6300>  // b.none
  451494:	cmp	w8, #0x6
  451498:	b.ne	4514d0 <_obstack_memory_used@@Base+0x630c>  // b.any
  45149c:	ldr	x21, [x23, #40]
  4514a0:	ldr	x0, [x21]
  4514a4:	bl	4046b0 <free@plt>
  4514a8:	ldr	x0, [x21, #8]
  4514ac:	bl	4046b0 <free@plt>
  4514b0:	ldr	x0, [x21, #16]
  4514b4:	bl	4046b0 <free@plt>
  4514b8:	ldr	x0, [x21, #24]
  4514bc:	bl	4046b0 <free@plt>
  4514c0:	b	4514c8 <_obstack_memory_used@@Base+0x6304>
  4514c4:	ldr	x21, [x23, #40]
  4514c8:	mov	x0, x21
  4514cc:	bl	4046b0 <free@plt>
  4514d0:	ldr	x8, [x23]
  4514d4:	cbz	x8, 4514f4 <_obstack_memory_used@@Base+0x6330>
  4514d8:	ldr	x25, [x8, #16]
  4514dc:	cmp	x25, x23
  4514e0:	mov	x23, x8
  4514e4:	b.eq	451484 <_obstack_memory_used@@Base+0x62c0>  // b.none
  4514e8:	mov	x23, x8
  4514ec:	cbz	x25, 451484 <_obstack_memory_used@@Base+0x62c0>
  4514f0:	b	451470 <_obstack_memory_used@@Base+0x62ac>
  4514f4:	mov	x21, x20
  4514f8:	ldr	x20, [x20, #8]
  4514fc:	cbnz	x20, 4514f4 <_obstack_memory_used@@Base+0x6330>
  451500:	ldr	x20, [x21, #16]
  451504:	cbnz	x20, 4514f4 <_obstack_memory_used@@Base+0x6330>
  451508:	ldr	w8, [x21, #48]
  45150c:	and	w8, w8, w22
  451510:	cmp	w8, #0x3
  451514:	b.eq	451548 <_obstack_memory_used@@Base+0x6384>  // b.none
  451518:	cmp	w8, #0x6
  45151c:	b.ne	451554 <_obstack_memory_used@@Base+0x6390>  // b.any
  451520:	ldr	x20, [x21, #40]
  451524:	ldr	x0, [x20]
  451528:	bl	4046b0 <free@plt>
  45152c:	ldr	x0, [x20, #8]
  451530:	bl	4046b0 <free@plt>
  451534:	ldr	x0, [x20, #16]
  451538:	bl	4046b0 <free@plt>
  45153c:	ldr	x0, [x20, #24]
  451540:	bl	4046b0 <free@plt>
  451544:	b	45154c <_obstack_memory_used@@Base+0x6388>
  451548:	ldr	x20, [x21, #40]
  45154c:	mov	x0, x20
  451550:	bl	4046b0 <free@plt>
  451554:	ldr	x8, [x21]
  451558:	cbz	x8, 451578 <_obstack_memory_used@@Base+0x63b4>
  45155c:	ldr	x20, [x8, #16]
  451560:	cmp	x20, x21
  451564:	mov	x21, x8
  451568:	b.eq	451508 <_obstack_memory_used@@Base+0x6344>  // b.none
  45156c:	mov	x21, x8
  451570:	cbz	x20, 451508 <_obstack_memory_used@@Base+0x6344>
  451574:	b	4514f4 <_obstack_memory_used@@Base+0x6330>
  451578:	mov	x20, xzr
  45157c:	mov	w8, #0xc                   	// #12
  451580:	str	w8, [x19]
  451584:	b	451448 <_obstack_memory_used@@Base+0x6284>
  451588:	sub	sp, sp, #0x120
  45158c:	stp	x29, x30, [sp, #192]
  451590:	stp	x28, x27, [sp, #208]
  451594:	stp	x26, x25, [sp, #224]
  451598:	stp	x24, x23, [sp, #240]
  45159c:	stp	x22, x21, [sp, #256]
  4515a0:	stp	x20, x19, [sp, #272]
  4515a4:	ldr	w8, [x2, #8]
  4515a8:	add	x29, sp, #0xc0
  4515ac:	str	xzr, [sp, #48]
  4515b0:	and	w9, w8, #0xff
  4515b4:	sub	w9, w9, #0x1
  4515b8:	cmp	w9, #0x23
  4515bc:	b.hi	452f40 <_obstack_memory_used@@Base+0x7d7c>  // b.pmore
  4515c0:	stp	x0, x3, [sp, #32]
  4515c4:	ldr	x23, [x1]
  4515c8:	adrp	x10, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4515cc:	add	x10, x10, #0x3da
  4515d0:	adr	x11, 4515f4 <_obstack_memory_used@@Base+0x6430>
  4515d4:	ldrh	w12, [x10, x9, lsl #1]
  4515d8:	add	x11, x11, x12, lsl #2
  4515dc:	mov	x28, x5
  4515e0:	mov	x25, x4
  4515e4:	mov	x14, x2
  4515e8:	mov	x26, x1
  4515ec:	str	x2, [sp, #56]
  4515f0:	br	x11
  4515f4:	ldr	x9, [sp, #40]
  4515f8:	tbnz	w9, #5, 451700 <_obstack_memory_used@@Base+0x653c>
  4515fc:	tbnz	w9, #4, 451c38 <_obstack_memory_used@@Base+0x6a74>
  451600:	ldr	x9, [sp, #40]
  451604:	tbnz	w9, #17, 45169c <_obstack_memory_used@@Base+0x64d8>
  451608:	and	w9, w8, #0xff
  45160c:	cmp	w9, #0x9
  451610:	b.ne	45169c <_obstack_memory_used@@Base+0x64d8>  // b.any
  451614:	mov	w8, #0x10                  	// #16
  451618:	str	xzr, [sp, #48]
  45161c:	str	w8, [x28]
  451620:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  451624:	ldr	x9, [sp, #32]
  451628:	and	w8, w8, #0xff
  45162c:	cmp	w8, #0x23
  451630:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  451634:	ldr	x1, [x9, #120]
  451638:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x1be3c>
  45163c:	cset	w4, eq  // eq = none
  451640:	add	x2, x2, #0x690
  451644:	add	x3, x3, #0xb36
  451648:	b	451670 <_obstack_memory_used@@Base+0x64ac>
  45164c:	ldr	x9, [sp, #32]
  451650:	and	w8, w8, #0xff
  451654:	cmp	w8, #0x21
  451658:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45165c:	ldr	x1, [x9, #120]
  451660:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  451664:	cset	w4, eq  // eq = none
  451668:	add	x2, x2, #0x688
  45166c:	add	x3, x3, #0x68e
  451670:	mov	x0, x23
  451674:	mov	x5, x28
  451678:	bl	4536bc <_obstack_memory_used@@Base+0x84f8>
  45167c:	str	x0, [sp, #48]
  451680:	cbnz	x0, 451694 <_obstack_memory_used@@Base+0x64d0>
  451684:	ldr	w8, [x28]
  451688:	ldr	x14, [sp, #56]
  45168c:	cbz	w8, 452328 <_obstack_memory_used@@Base+0x7164>
  451690:	b	451cbc <_obstack_memory_used@@Base+0x6af8>
  451694:	ldr	x14, [sp, #56]
  451698:	b	452328 <_obstack_memory_used@@Base+0x7164>
  45169c:	and	w8, w8, #0xffffff00
  4516a0:	orr	w8, w8, #0x1
  4516a4:	str	w8, [x14, #8]
  4516a8:	ldr	w8, [x23, #128]
  4516ac:	cmp	w8, #0xf
  4516b0:	b.eq	453260 <_obstack_memory_used@@Base+0x809c>  // b.none
  4516b4:	ldr	x0, [x23, #112]
  4516b8:	add	w9, w8, #0x1
  4516bc:	sxtw	x8, w8
  4516c0:	add	x10, x0, x8, lsl #6
  4516c4:	str	w9, [x23, #128]
  4516c8:	str	xzr, [x10, #8]!
  4516cc:	stp	xzr, xzr, [x10, #8]
  4516d0:	ldr	q0, [x14]
  4516d4:	mov	x9, #0xffffffffffffffff    	// #-1
  4516d8:	stp	xzr, xzr, [x10, #24]
  4516dc:	str	x10, [sp, #48]
  4516e0:	stur	q0, [x10, #40]
  4516e4:	ldr	w8, [x10, #48]
  4516e8:	str	x9, [x10, #56]
  4516ec:	and	w8, w8, #0xfff3ffff
  4516f0:	str	w8, [x10, #48]
  4516f4:	b	452328 <_obstack_memory_used@@Base+0x7164>
  4516f8:	ldr	x9, [sp, #40]
  4516fc:	tbz	w9, #24, 4515f4 <_obstack_memory_used@@Base+0x6430>
  451700:	mov	w8, #0xd                   	// #13
  451704:	str	xzr, [sp, #48]
  451708:	str	w8, [x28]
  45170c:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  451710:	ldr	w8, [x14]
  451714:	ldr	x10, [x23, #168]
  451718:	mov	w9, #0x1                   	// #1
  45171c:	lsl	w8, w9, w8
  451720:	sxtw	x9, w8
  451724:	tst	x10, x9
  451728:	b.eq	453290 <_obstack_memory_used@@Base+0x80cc>  // b.none
  45172c:	ldr	x10, [x23, #160]
  451730:	ldr	w8, [x23, #128]
  451734:	orr	x9, x10, x9
  451738:	cmp	w8, #0xf
  45173c:	str	x9, [x23, #160]
  451740:	b.eq	453308 <_obstack_memory_used@@Base+0x8144>  // b.none
  451744:	ldr	x0, [x23, #112]
  451748:	add	w9, w8, #0x1
  45174c:	sxtw	x8, w8
  451750:	add	x10, x0, x8, lsl #6
  451754:	str	w9, [x23, #128]
  451758:	str	xzr, [x10, #8]!
  45175c:	stp	xzr, xzr, [x10, #8]
  451760:	ldr	q0, [x14]
  451764:	mov	x8, #0xffffffffffffffff    	// #-1
  451768:	str	x8, [x10, #56]
  45176c:	stp	xzr, xzr, [x10, #24]
  451770:	stur	q0, [x10, #40]
  451774:	ldr	w9, [x10, #48]
  451778:	str	x10, [sp, #48]
  45177c:	and	w8, w9, #0xfff3ffff
  451780:	str	w8, [x10, #48]
  451784:	ldr	x8, [x23, #152]
  451788:	ldrb	w9, [x23, #176]
  45178c:	add	x8, x8, #0x1
  451790:	orr	w9, w9, #0x2
  451794:	str	x8, [x23, #152]
  451798:	strb	w9, [x23, #176]
  45179c:	b	452328 <_obstack_memory_used@@Base+0x7164>
  4517a0:	ldr	x19, [x26, #48]
  4517a4:	mov	x0, x14
  4517a8:	add	x8, x19, #0x1
  4517ac:	str	x8, [x26, #48]
  4517b0:	ldp	x20, x21, [sp, #32]
  4517b4:	orr	x2, x21, #0x800000
  4517b8:	mov	x1, x20
  4517bc:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  4517c0:	ldr	x8, [x20, #72]
  4517c4:	ldr	x14, [sp, #56]
  4517c8:	add	x8, x8, w0, sxtw
  4517cc:	str	x8, [x20, #72]
  4517d0:	ldrb	w8, [x14, #8]
  4517d4:	cmp	w8, #0x9
  4517d8:	b.ne	451c94 <_obstack_memory_used@@Base+0x6ad0>  // b.any
  4517dc:	mov	x25, xzr
  4517e0:	cmp	x19, #0x8
  4517e4:	b.hi	451800 <_obstack_memory_used@@Base+0x663c>  // b.pmore
  4517e8:	ldr	x8, [x23, #168]
  4517ec:	mov	w9, #0x1                   	// #1
  4517f0:	lsl	w9, w9, w19
  4517f4:	sxtw	x9, w9
  4517f8:	orr	x8, x8, x9
  4517fc:	str	x8, [x23, #168]
  451800:	ldr	w8, [x23, #128]
  451804:	cmp	w8, #0xf
  451808:	b.eq	4533fc <_obstack_memory_used@@Base+0x8238>  // b.none
  45180c:	ldr	x0, [x23, #112]
  451810:	add	w9, w8, #0x1
  451814:	sxtw	x8, w8
  451818:	add	x8, x0, x8, lsl #6
  45181c:	str	w9, [x23, #128]
  451820:	mov	x9, x8
  451824:	mov	w10, #0x11                  	// #17
  451828:	mov	x11, #0xffffffffffffffff    	// #-1
  45182c:	str	xzr, [x9, #8]!
  451830:	stp	x25, xzr, [x9, #8]
  451834:	str	w10, [x9, #48]
  451838:	stp	xzr, xzr, [x9, #24]
  45183c:	str	x11, [x9, #56]
  451840:	cbz	x25, 451848 <_obstack_memory_used@@Base+0x6684>
  451844:	str	x9, [x25]
  451848:	str	x9, [sp, #48]
  45184c:	str	x19, [x8, #48]
  451850:	b	452328 <_obstack_memory_used@@Base+0x7164>
  451854:	ldr	w8, [x23, #128]
  451858:	cmp	w8, #0xf
  45185c:	b.eq	4532a0 <_obstack_memory_used@@Base+0x80dc>  // b.none
  451860:	ldr	x0, [x23, #112]
  451864:	ldr	x10, [sp, #32]
  451868:	add	w9, w8, #0x1
  45186c:	sxtw	x8, w8
  451870:	add	x19, x0, x8, lsl #6
  451874:	str	w9, [x23, #128]
  451878:	str	xzr, [x19, #8]!
  45187c:	stp	xzr, xzr, [x19, #8]
  451880:	ldr	q0, [x14]
  451884:	mov	x9, #0xffffffffffffffff    	// #-1
  451888:	stp	xzr, xzr, [x19, #24]
  45188c:	str	x9, [x19, #56]
  451890:	stur	q0, [x19, #40]
  451894:	ldr	w8, [x19, #48]
  451898:	and	w8, w8, #0xfff3ffff
  45189c:	str	w8, [x19, #48]
  4518a0:	ldr	w8, [x23, #180]
  4518a4:	cmp	w8, #0x2
  4518a8:	b.lt	451c30 <_obstack_memory_used@@Base+0x6a6c>  // b.tstop
  4518ac:	ldr	x9, [x10, #104]
  4518b0:	ldr	x8, [x10, #72]
  4518b4:	cmp	x9, x8
  4518b8:	b.le	451c30 <_obstack_memory_used@@Base+0x6a6c>
  4518bc:	mov	w20, #0x10                  	// #16
  4518c0:	mov	x21, #0xffffffffffffffff    	// #-1
  4518c4:	ldr	x22, [sp, #32]
  4518c8:	ldr	x9, [x22, #48]
  4518cc:	cmp	x8, x9
  4518d0:	b.eq	451c30 <_obstack_memory_used@@Base+0x6a6c>  // b.none
  4518d4:	ldr	x9, [x22, #16]
  4518d8:	ldr	w8, [x9, x8, lsl #2]
  4518dc:	cmn	w8, #0x1
  4518e0:	b.ne	451c30 <_obstack_memory_used@@Base+0x6a6c>  // b.any
  4518e4:	ldr	x2, [sp, #40]
  4518e8:	mov	x0, x14
  4518ec:	mov	x1, x22
  4518f0:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  4518f4:	ldr	x8, [x22, #72]
  4518f8:	add	x8, x8, w0, sxtw
  4518fc:	str	x8, [x22, #72]
  451900:	ldr	w8, [x23, #128]
  451904:	cmp	w8, #0xf
  451908:	b.eq	4519a8 <_obstack_memory_used@@Base+0x67e4>  // b.none
  45190c:	ldr	x0, [x23, #112]
  451910:	add	w9, w8, #0x1
  451914:	sxtw	x8, w8
  451918:	add	x22, x0, x8, lsl #6
  45191c:	str	w9, [x23, #128]
  451920:	str	xzr, [x22, #8]!
  451924:	stp	xzr, xzr, [x22, #8]
  451928:	ldr	x14, [sp, #56]
  45192c:	ldr	q0, [x14]
  451930:	stp	xzr, xzr, [x22, #24]
  451934:	str	x21, [x22, #56]
  451938:	stur	q0, [x22, #40]
  45193c:	ldr	w8, [x22, #48]
  451940:	and	w8, w8, #0xfff3ffff
  451944:	str	w8, [x22, #48]
  451948:	ldr	w8, [x23, #128]
  45194c:	cmp	w8, #0xf
  451950:	b.eq	4519e0 <_obstack_memory_used@@Base+0x681c>  // b.none
  451954:	ldr	x0, [x23, #112]
  451958:	add	w9, w8, #0x1
  45195c:	sxtw	x8, w8
  451960:	str	w9, [x23, #128]
  451964:	add	x9, x0, x8, lsl #6
  451968:	str	xzr, [x9, #8]!
  45196c:	stp	x19, x22, [x9, #8]
  451970:	str	w20, [x9, #48]
  451974:	stp	xzr, xzr, [x9, #24]
  451978:	str	x21, [x9, #56]
  45197c:	str	x9, [x19]
  451980:	cbz	x22, 45356c <_obstack_memory_used@@Base+0x83a8>
  451984:	ldr	x8, [sp, #32]
  451988:	str	x9, [x22]
  45198c:	mov	x19, x9
  451990:	str	x19, [sp, #48]
  451994:	ldr	x9, [x8, #104]
  451998:	ldr	x8, [x8, #72]
  45199c:	cmp	x9, x8
  4519a0:	b.gt	4518c4 <_obstack_memory_used@@Base+0x6700>
  4519a4:	b	452328 <_obstack_memory_used@@Base+0x7164>
  4519a8:	mov	w0, #0x3c8                 	// #968
  4519ac:	bl	404210 <malloc@plt>
  4519b0:	cbz	x0, 4519cc <_obstack_memory_used@@Base+0x6808>
  4519b4:	ldr	x9, [x23, #112]
  4519b8:	mov	w8, wzr
  4519bc:	str	x9, [x0]
  4519c0:	str	x0, [x23, #112]
  4519c4:	str	wzr, [x23, #128]
  4519c8:	b	451910 <_obstack_memory_used@@Base+0x674c>
  4519cc:	ldr	x14, [sp, #56]
  4519d0:	mov	x22, xzr
  4519d4:	ldr	w8, [x23, #128]
  4519d8:	cmp	w8, #0xf
  4519dc:	b.ne	451954 <_obstack_memory_used@@Base+0x6790>  // b.any
  4519e0:	mov	w0, #0x3c8                 	// #968
  4519e4:	bl	404210 <malloc@plt>
  4519e8:	ldr	x14, [sp, #56]
  4519ec:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  4519f0:	ldr	x9, [x23, #112]
  4519f4:	mov	w8, wzr
  4519f8:	str	x9, [x0]
  4519fc:	str	x0, [x23, #112]
  451a00:	str	wzr, [x23, #128]
  451a04:	b	451958 <_obstack_memory_used@@Base+0x6794>
  451a08:	ldr	w8, [x23, #128]
  451a0c:	cmp	w8, #0xf
  451a10:	b.eq	4532cc <_obstack_memory_used@@Base+0x8108>  // b.none
  451a14:	ldr	x0, [x23, #112]
  451a18:	add	w9, w8, #0x1
  451a1c:	sxtw	x8, w8
  451a20:	add	x10, x0, x8, lsl #6
  451a24:	str	w9, [x23, #128]
  451a28:	str	xzr, [x10, #8]!
  451a2c:	stp	xzr, xzr, [x10, #8]
  451a30:	ldr	q0, [x14]
  451a34:	mov	x9, #0xffffffffffffffff    	// #-1
  451a38:	stp	xzr, xzr, [x10, #24]
  451a3c:	str	x9, [x10, #56]
  451a40:	stur	q0, [x10, #40]
  451a44:	ldr	w8, [x10, #48]
  451a48:	str	x10, [sp, #48]
  451a4c:	and	w8, w8, #0xfff3ffff
  451a50:	str	w8, [x10, #48]
  451a54:	ldr	w8, [x23, #180]
  451a58:	cmp	w8, #0x2
  451a5c:	b.lt	452328 <_obstack_memory_used@@Base+0x7164>  // b.tstop
  451a60:	ldrb	w8, [x23, #176]
  451a64:	orr	w8, w8, #0x2
  451a68:	strb	w8, [x23, #176]
  451a6c:	b	452328 <_obstack_memory_used@@Base+0x7164>
  451a70:	ldr	w8, [x14]
  451a74:	mov	w9, #0x30f                 	// #783
  451a78:	tst	w8, w9
  451a7c:	b.eq	451aac <_obstack_memory_used@@Base+0x68e8>  // b.none
  451a80:	ldrb	w8, [x23, #176]
  451a84:	tbnz	w8, #4, 451aa8 <_obstack_memory_used@@Base+0x68e4>
  451a88:	orr	w9, w8, #0x10
  451a8c:	strb	w9, [x23, #176]
  451a90:	tbnz	w8, #3, 4534a8 <_obstack_memory_used@@Base+0x82e4>
  451a94:	adrp	x9, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  451a98:	ldr	q0, [x9, #736]
  451a9c:	stur	q0, [x23, #184]
  451aa0:	tbz	w8, #2, 4534b4 <_obstack_memory_used@@Base+0x82f0>
  451aa4:	stp	xzr, xzr, [x23, #200]
  451aa8:	ldr	w8, [x14]
  451aac:	cmp	w8, #0x200
  451ab0:	b.eq	452ff0 <_obstack_memory_used@@Base+0x7e2c>  // b.none
  451ab4:	ldr	x21, [sp, #40]
  451ab8:	cmp	w8, #0x100
  451abc:	b.ne	453084 <_obstack_memory_used@@Base+0x7ec0>  // b.any
  451ac0:	mov	w8, #0x6                   	// #6
  451ac4:	str	w8, [x14]
  451ac8:	ldr	w8, [x23, #128]
  451acc:	cmp	w8, #0xf
  451ad0:	b.eq	453424 <_obstack_memory_used@@Base+0x8260>  // b.none
  451ad4:	ldr	x0, [x23, #112]
  451ad8:	add	w9, w8, #0x1
  451adc:	sxtw	x8, w8
  451ae0:	add	x19, x0, x8, lsl #6
  451ae4:	str	w9, [x23, #128]
  451ae8:	str	xzr, [x19, #8]!
  451aec:	stp	xzr, xzr, [x19, #8]
  451af0:	ldr	q0, [x14]
  451af4:	mov	x8, #0xffffffffffffffff    	// #-1
  451af8:	str	x8, [x19, #56]
  451afc:	stp	xzr, xzr, [x19, #24]
  451b00:	stur	q0, [x19, #40]
  451b04:	ldr	w9, [x19, #48]
  451b08:	and	w8, w9, #0xfff3ffff
  451b0c:	str	w8, [x19, #48]
  451b10:	mov	w8, #0x9                   	// #9
  451b14:	str	w8, [x14]
  451b18:	ldr	w8, [x23, #128]
  451b1c:	cmp	w8, #0xf
  451b20:	b.eq	453058 <_obstack_memory_used@@Base+0x7e94>  // b.none
  451b24:	ldr	x0, [x23, #112]
  451b28:	add	w9, w8, #0x1
  451b2c:	sxtw	x8, w8
  451b30:	add	x20, x0, x8, lsl #6
  451b34:	str	w9, [x23, #128]
  451b38:	str	xzr, [x20, #8]!
  451b3c:	stp	xzr, xzr, [x20, #8]
  451b40:	ldr	q0, [x14]
  451b44:	mov	x9, #0xffffffffffffffff    	// #-1
  451b48:	stp	xzr, xzr, [x20, #24]
  451b4c:	str	x9, [x20, #56]
  451b50:	stur	q0, [x20, #40]
  451b54:	ldr	w8, [x20, #48]
  451b58:	and	w8, w8, #0xfff3ffff
  451b5c:	str	w8, [x20, #48]
  451b60:	ldr	w8, [x23, #128]
  451b64:	cmp	w8, #0xf
  451b68:	b.eq	453544 <_obstack_memory_used@@Base+0x8380>  // b.none
  451b6c:	ldr	x0, [x23, #112]
  451b70:	add	w9, w8, #0x1
  451b74:	sxtw	x8, w8
  451b78:	add	x8, x0, x8, lsl #6
  451b7c:	mov	w10, #0xa                   	// #10
  451b80:	mov	x11, #0xffffffffffffffff    	// #-1
  451b84:	str	w9, [x23, #128]
  451b88:	str	xzr, [x8, #8]!
  451b8c:	stp	x19, x20, [x8, #8]
  451b90:	str	w10, [x8, #48]
  451b94:	stp	xzr, xzr, [x8, #24]
  451b98:	str	x11, [x8, #56]
  451b9c:	cbz	x19, 451ba4 <_obstack_memory_used@@Base+0x69e0>
  451ba0:	str	x8, [x19]
  451ba4:	cbz	x20, 45356c <_obstack_memory_used@@Base+0x83a8>
  451ba8:	str	x8, [x20]
  451bac:	cbnz	x19, 4530d0 <_obstack_memory_used@@Base+0x7f0c>
  451bb0:	b	45356c <_obstack_memory_used@@Base+0x83a8>
  451bb4:	mov	w8, #0x5                   	// #5
  451bb8:	str	xzr, [sp, #48]
  451bbc:	str	w8, [x28]
  451bc0:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  451bc4:	mov	w0, #0x20                  	// #32
  451bc8:	mov	w1, #0x1                   	// #1
  451bcc:	stur	xzr, [x29, #-16]
  451bd0:	bl	4043d0 <calloc@plt>
  451bd4:	mov	x25, x0
  451bd8:	mov	w0, #0x50                  	// #80
  451bdc:	mov	w1, #0x1                   	// #1
  451be0:	bl	4043d0 <calloc@plt>
  451be4:	mov	x24, x0
  451be8:	cbz	x25, 4532f4 <_obstack_memory_used@@Base+0x8130>
  451bec:	cbz	x24, 4532f4 <_obstack_memory_used@@Base+0x8130>
  451bf0:	ldr	x21, [sp, #56]
  451bf4:	ldp	x19, x20, [sp, #32]
  451bf8:	mov	x0, x21
  451bfc:	mov	x1, x19
  451c00:	mov	x2, x20
  451c04:	bl	453a10 <_obstack_memory_used@@Base+0x884c>
  451c08:	ldr	w8, [x21, #8]
  451c0c:	mov	x2, x21
  451c10:	mov	w3, w0
  451c14:	and	w9, w8, #0xff
  451c18:	cmp	w9, #0x19
  451c1c:	b.eq	451cc4 <_obstack_memory_used@@Base+0x6b00>  // b.none
  451c20:	cmp	w9, #0x2
  451c24:	b.eq	453288 <_obstack_memory_used@@Base+0x80c4>  // b.none
  451c28:	str	wzr, [sp, #48]
  451c2c:	b	451d1c <_obstack_memory_used@@Base+0x6b58>
  451c30:	str	x19, [sp, #48]
  451c34:	b	452328 <_obstack_memory_used@@Base+0x7164>
  451c38:	ldp	x19, x20, [sp, #32]
  451c3c:	mov	x0, x14
  451c40:	mov	x21, x14
  451c44:	mov	x1, x19
  451c48:	mov	x2, x20
  451c4c:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  451c50:	ldr	x8, [x19, #72]
  451c54:	mov	x1, x26
  451c58:	mov	x2, x21
  451c5c:	mov	x3, x20
  451c60:	add	x8, x8, w0, sxtw
  451c64:	str	x8, [x19, #72]
  451c68:	mov	x0, x19
  451c6c:	mov	x4, x25
  451c70:	mov	x5, x28
  451c74:	ldp	x20, x19, [sp, #272]
  451c78:	ldp	x22, x21, [sp, #256]
  451c7c:	ldp	x24, x23, [sp, #240]
  451c80:	ldp	x26, x25, [sp, #224]
  451c84:	ldp	x28, x27, [sp, #208]
  451c88:	ldp	x29, x30, [sp, #192]
  451c8c:	add	sp, sp, #0x120
  451c90:	b	451588 <_obstack_memory_used@@Base+0x63c4>
  451c94:	add	x4, x25, #0x1
  451c98:	mov	x0, x20
  451c9c:	mov	x1, x26
  451ca0:	mov	x2, x14
  451ca4:	mov	x3, x21
  451ca8:	mov	x5, x28
  451cac:	mov	x20, x14
  451cb0:	bl	4508bc <_obstack_memory_used@@Base+0x56f8>
  451cb4:	ldr	w8, [x28]
  451cb8:	cbz	w8, 4530f8 <_obstack_memory_used@@Base+0x7f34>
  451cbc:	str	xzr, [sp, #48]
  451cc0:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  451cc4:	ldrb	w8, [x24, #32]
  451cc8:	orr	w8, w8, #0x1
  451ccc:	strb	w8, [x24, #32]
  451cd0:	tbz	w20, #8, 451ce0 <_obstack_memory_used@@Base+0x6b1c>
  451cd4:	ldr	x8, [x25]
  451cd8:	orr	x8, x8, #0x400
  451cdc:	str	x8, [x25]
  451ce0:	ldr	x8, [x19, #72]
  451ce4:	mov	x0, x2
  451ce8:	mov	x1, x19
  451cec:	mov	x2, x20
  451cf0:	add	x8, x8, w3, sxtw
  451cf4:	str	x8, [x19, #72]
  451cf8:	bl	453a10 <_obstack_memory_used@@Base+0x884c>
  451cfc:	ldr	x2, [sp, #56]
  451d00:	ldr	w8, [x2, #8]
  451d04:	and	w9, w8, #0xff
  451d08:	cmp	w9, #0x2
  451d0c:	b.eq	453288 <_obstack_memory_used@@Base+0x80c4>  // b.none
  451d10:	mov	w3, w0
  451d14:	mov	w9, #0x1                   	// #1
  451d18:	str	w9, [sp, #48]
  451d1c:	and	w9, w8, #0xff
  451d20:	cmp	w9, #0x15
  451d24:	b.ne	451d34 <_obstack_memory_used@@Base+0x6b70>  // b.any
  451d28:	and	w8, w8, #0xffffff00
  451d2c:	orr	w8, w8, #0x1
  451d30:	str	w8, [x2, #8]
  451d34:	ldr	x4, [sp, #40]
  451d38:	sub	x8, x29, #0x50
  451d3c:	mov	w27, #0x3                   	// #3
  451d40:	sub	x0, x29, #0x20
  451d44:	mov	w5, #0x1                   	// #1
  451d48:	mov	x1, x19
  451d4c:	stur	x8, [x29, #-24]
  451d50:	stur	w27, [x29, #-32]
  451d54:	mov	w21, #0x1                   	// #1
  451d58:	bl	453b88 <_obstack_memory_used@@Base+0x89c4>
  451d5c:	cbnz	w0, 453258 <_obstack_memory_used@@Base+0x8094>
  451d60:	ldr	x20, [sp, #40]
  451d64:	ldr	x22, [sp, #56]
  451d68:	stp	xzr, xzr, [sp, #8]
  451d6c:	mov	x0, x22
  451d70:	mov	x1, x19
  451d74:	mov	x2, x20
  451d78:	bl	453a10 <_obstack_memory_used@@Base+0x884c>
  451d7c:	ldur	w22, [x29, #-32]
  451d80:	mov	w26, w0
  451d84:	cmp	w22, #0x2
  451d88:	b.eq	451f04 <_obstack_memory_used@@Base+0x6d40>  // b.none
  451d8c:	cmp	w22, #0x4
  451d90:	b.ne	451dc0 <_obstack_memory_used@@Base+0x6bfc>  // b.any
  451d94:	ldr	x0, [x19, #120]
  451d98:	ldur	x4, [x29, #-24]
  451d9c:	ldr	x5, [sp, #40]
  451da0:	sub	x3, x29, #0x10
  451da4:	mov	x1, x25
  451da8:	mov	x2, x24
  451dac:	bl	453e68 <_obstack_memory_used@@Base+0x8ca4>
  451db0:	ldr	x14, [sp, #56]
  451db4:	str	w0, [x28]
  451db8:	cbz	w0, 451f40 <_obstack_memory_used@@Base+0x6d7c>
  451dbc:	b	4533b8 <_obstack_memory_used@@Base+0x81f4>
  451dc0:	ldr	x8, [sp, #56]
  451dc4:	ldrb	w8, [x8, #8]
  451dc8:	cmp	w8, #0x16
  451dcc:	b.eq	451ddc <_obstack_memory_used@@Base+0x6c18>  // b.none
  451dd0:	cmp	w8, #0x2
  451dd4:	b.ne	451ee0 <_obstack_memory_used@@Base+0x6d1c>  // b.any
  451dd8:	b	45324c <_obstack_memory_used@@Base+0x8088>
  451ddc:	ldr	x8, [x19, #72]
  451de0:	ldr	x2, [sp, #40]
  451de4:	add	x0, sp, #0x40
  451de8:	mov	x1, x19
  451dec:	add	x8, x8, w26, sxtw
  451df0:	str	x8, [x19, #72]
  451df4:	bl	453a10 <_obstack_memory_used@@Base+0x884c>
  451df8:	ldrb	w8, [sp, #72]
  451dfc:	cmp	w8, #0x15
  451e00:	b.eq	451ec8 <_obstack_memory_used@@Base+0x6d04>  // b.none
  451e04:	cmp	w8, #0x2
  451e08:	str	x28, [sp, #24]
  451e0c:	b.eq	453250 <_obstack_memory_used@@Base+0x808c>  // b.none
  451e10:	ldr	x20, [sp, #40]
  451e14:	mov	w3, w0
  451e18:	add	x8, sp, #0x50
  451e1c:	sub	x0, x29, #0x30
  451e20:	add	x2, sp, #0x40
  451e24:	mov	w5, #0x1                   	// #1
  451e28:	mov	x1, x19
  451e2c:	mov	x4, x20
  451e30:	stur	x8, [x29, #-40]
  451e34:	stur	w27, [x29, #-48]
  451e38:	bl	453b88 <_obstack_memory_used@@Base+0x89c4>
  451e3c:	cbnz	w0, 4533b0 <_obstack_memory_used@@Base+0x81ec>
  451e40:	ldr	x0, [sp, #56]
  451e44:	mov	x1, x19
  451e48:	mov	x2, x20
  451e4c:	bl	453a10 <_obstack_memory_used@@Base+0x884c>
  451e50:	ldr	w8, [x23, #180]
  451e54:	ldur	w19, [x29, #-48]
  451e58:	mov	w26, w0
  451e5c:	mov	w0, #0xb                   	// #11
  451e60:	cmp	w8, #0x1
  451e64:	csel	x20, x24, xzr, gt
  451e68:	cmp	w19, #0x2
  451e6c:	b.eq	4533b0 <_obstack_memory_used@@Base+0x81ec>  // b.none
  451e70:	ldr	x14, [sp, #56]
  451e74:	cmp	w19, #0x4
  451e78:	b.eq	4533b0 <_obstack_memory_used@@Base+0x81ec>  // b.none
  451e7c:	cmp	w22, #0x3
  451e80:	b.ne	451e98 <_obstack_memory_used@@Base+0x6cd4>  // b.any
  451e84:	ldur	x0, [x29, #-24]
  451e88:	bl	403f00 <strlen@plt>
  451e8c:	ldr	x14, [sp, #56]
  451e90:	cmp	x0, #0x1
  451e94:	b.hi	4533ac <_obstack_memory_used@@Base+0x81e8>  // b.pmore
  451e98:	cmp	w19, #0x3
  451e9c:	b.ne	451eb4 <_obstack_memory_used@@Base+0x6cf0>  // b.any
  451ea0:	ldur	x0, [x29, #-40]
  451ea4:	bl	403f00 <strlen@plt>
  451ea8:	ldr	x14, [sp, #56]
  451eac:	cmp	x0, #0x1
  451eb0:	b.hi	4533ac <_obstack_memory_used@@Base+0x81e8>  // b.pmore
  451eb4:	cmp	w22, #0x3
  451eb8:	b.eq	451fdc <_obstack_memory_used@@Base+0x6e18>  // b.none
  451ebc:	cbnz	w22, 451fe8 <_obstack_memory_used@@Base+0x6e24>
  451ec0:	ldurb	w27, [x29, #-24]
  451ec4:	b	451fec <_obstack_memory_used@@Base+0x6e28>
  451ec8:	ldr	x8, [x19, #72]
  451ecc:	neg	w9, w26
  451ed0:	add	x8, x8, w9, sxtw
  451ed4:	str	x8, [x19, #72]
  451ed8:	ldr	x8, [sp, #56]
  451edc:	strb	w21, [x8, #8]
  451ee0:	cmp	w22, #0x3
  451ee4:	b.hi	45369c <_obstack_memory_used@@Base+0x84d8>  // b.pmore
  451ee8:	adrp	x11, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  451eec:	mov	w8, w22
  451ef0:	add	x11, x11, #0x422
  451ef4:	adr	x9, 451f04 <_obstack_memory_used@@Base+0x6d40>
  451ef8:	ldrb	w10, [x11, x8]
  451efc:	add	x9, x9, x10, lsl #2
  451f00:	br	x9
  451f04:	ldur	x27, [x29, #-24]
  451f08:	mov	x0, x27
  451f0c:	bl	403f00 <strlen@plt>
  451f10:	cmp	x0, #0x1
  451f14:	b.ne	4533a8 <_obstack_memory_used@@Base+0x81e4>  // b.any
  451f18:	ldrb	w8, [x27]
  451f1c:	mov	w27, #0x3                   	// #3
  451f20:	lsr	x9, x8, #3
  451f24:	and	x9, x9, #0x18
  451f28:	ldr	x10, [x25, x9]
  451f2c:	lsl	x8, x21, x8
  451f30:	orr	x8, x8, x10
  451f34:	str	x8, [x25, x9]
  451f38:	ldr	x14, [sp, #56]
  451f3c:	str	wzr, [x28]
  451f40:	ldrb	w8, [x14, #8]
  451f44:	cmp	w8, #0x15
  451f48:	b.eq	452190 <_obstack_memory_used@@Base+0x6fcc>  // b.none
  451f4c:	cmp	w8, #0x2
  451f50:	b.eq	45324c <_obstack_memory_used@@Base+0x8088>  // b.none
  451f54:	ldr	x20, [sp, #40]
  451f58:	sub	x8, x29, #0x50
  451f5c:	sub	x0, x29, #0x20
  451f60:	mov	x1, x19
  451f64:	mov	x2, x14
  451f68:	mov	w3, w26
  451f6c:	mov	x4, x20
  451f70:	mov	w5, wzr
  451f74:	stur	x8, [x29, #-24]
  451f78:	stur	w27, [x29, #-32]
  451f7c:	mov	x22, x14
  451f80:	bl	453b88 <_obstack_memory_used@@Base+0x89c4>
  451f84:	cbz	w0, 451d6c <_obstack_memory_used@@Base+0x6ba8>
  451f88:	b	453258 <_obstack_memory_used@@Base+0x8094>
  451f8c:	ldurb	w8, [x29, #-24]
  451f90:	ldr	x14, [sp, #56]
  451f94:	lsr	x9, x8, #3
  451f98:	and	x9, x9, #0x18
  451f9c:	ldr	x10, [x25, x9]
  451fa0:	lsl	x8, x21, x8
  451fa4:	orr	x8, x8, x10
  451fa8:	str	x8, [x25, x9]
  451fac:	b	451f40 <_obstack_memory_used@@Base+0x6d7c>
  451fb0:	ldr	x8, [x24, #40]
  451fb4:	ldr	x9, [sp, #16]
  451fb8:	cmp	x9, x8
  451fbc:	b.eq	452100 <_obstack_memory_used@@Base+0x6f3c>  // b.none
  451fc0:	ldr	x0, [x24]
  451fc4:	ldr	x14, [sp, #56]
  451fc8:	ldur	w9, [x29, #-24]
  451fcc:	add	x10, x8, #0x1
  451fd0:	str	x10, [x24, #40]
  451fd4:	str	w9, [x0, x8, lsl #2]
  451fd8:	b	451f40 <_obstack_memory_used@@Base+0x6d7c>
  451fdc:	ldur	x8, [x29, #-24]
  451fe0:	ldrb	w27, [x8]
  451fe4:	b	451fec <_obstack_memory_used@@Base+0x6e28>
  451fe8:	mov	w27, wzr
  451fec:	cmp	w19, #0x3
  451ff0:	b.eq	452000 <_obstack_memory_used@@Base+0x6e3c>  // b.none
  451ff4:	cbnz	w19, 45200c <_obstack_memory_used@@Base+0x6e48>
  451ff8:	ldurb	w28, [x29, #-40]
  451ffc:	b	452010 <_obstack_memory_used@@Base+0x6e4c>
  452000:	ldur	x8, [x29, #-40]
  452004:	ldrb	w28, [x8]
  452008:	b	452010 <_obstack_memory_used@@Base+0x6e4c>
  45200c:	mov	w28, wzr
  452010:	cmp	w22, #0x3
  452014:	b.eq	45201c <_obstack_memory_used@@Base+0x6e58>  // b.none
  452018:	cbnz	w22, 452034 <_obstack_memory_used@@Base+0x6e70>
  45201c:	cbz	x20, 452038 <_obstack_memory_used@@Base+0x6e74>
  452020:	mov	w0, w27
  452024:	bl	404540 <btowc@plt>
  452028:	ldr	x14, [sp, #56]
  45202c:	mov	w27, w0
  452030:	b	452038 <_obstack_memory_used@@Base+0x6e74>
  452034:	ldur	w27, [x29, #-24]
  452038:	cmp	w19, #0x3
  45203c:	b.eq	452044 <_obstack_memory_used@@Base+0x6e80>  // b.none
  452040:	cbnz	w19, 45205c <_obstack_memory_used@@Base+0x6e98>
  452044:	cbz	x20, 452060 <_obstack_memory_used@@Base+0x6e9c>
  452048:	mov	w0, w28
  45204c:	bl	404540 <btowc@plt>
  452050:	ldr	x14, [sp, #56]
  452054:	mov	w28, w0
  452058:	b	452060 <_obstack_memory_used@@Base+0x6e9c>
  45205c:	ldur	w28, [x29, #-40]
  452060:	cmn	w27, #0x1
  452064:	mov	w0, #0x3                   	// #3
  452068:	b.eq	4533b0 <_obstack_memory_used@@Base+0x81ec>  // b.none
  45206c:	cmn	w28, #0x1
  452070:	b.eq	4533b0 <_obstack_memory_used@@Base+0x81ec>  // b.none
  452074:	ldr	x8, [sp, #40]
  452078:	tbz	w8, #16, 452084 <_obstack_memory_used@@Base+0x6ec0>
  45207c:	cmp	w27, w28
  452080:	b.hi	45361c <_obstack_memory_used@@Base+0x8458>  // b.pmore
  452084:	cbz	x20, 4520b0 <_obstack_memory_used@@Base+0x6eec>
  452088:	ldr	x8, [x20, #64]
  45208c:	ldr	x9, [sp, #8]
  452090:	cmp	x9, x8
  452094:	b.eq	452138 <_obstack_memory_used@@Base+0x6f74>  // b.none
  452098:	ldp	x22, x10, [x20, #8]
  45209c:	lsl	x9, x8, #2
  4520a0:	add	x8, x8, #0x1
  4520a4:	str	w27, [x22, x9]
  4520a8:	str	x8, [x20, #64]
  4520ac:	str	w28, [x10, x9]
  4520b0:	mov	w9, w28
  4520b4:	ldp	x28, x19, [sp, #24]
  4520b8:	mov	x8, xzr
  4520bc:	mov	w10, w27
  4520c0:	mov	w27, #0x3                   	// #3
  4520c4:	b	4520d4 <_obstack_memory_used@@Base+0x6f10>
  4520c8:	add	x8, x8, #0x1
  4520cc:	cmp	x8, #0x100
  4520d0:	b.eq	451f3c <_obstack_memory_used@@Base+0x6d78>  // b.none
  4520d4:	cmp	x8, x10
  4520d8:	b.cc	4520c8 <_obstack_memory_used@@Base+0x6f04>  // b.lo, b.ul, b.last
  4520dc:	cmp	x8, x9
  4520e0:	b.hi	4520c8 <_obstack_memory_used@@Base+0x6f04>  // b.pmore
  4520e4:	lsr	x11, x8, #3
  4520e8:	and	x11, x11, #0x1ffffffffffffff8
  4520ec:	ldr	x12, [x25, x11]
  4520f0:	lsl	x13, x21, x8
  4520f4:	orr	x12, x12, x13
  4520f8:	str	x12, [x25, x11]
  4520fc:	b	4520c8 <_obstack_memory_used@@Base+0x6f04>
  452100:	ldr	x8, [sp, #16]
  452104:	ldr	x0, [x24]
  452108:	mov	w19, #0x1                   	// #1
  45210c:	bfi	x19, x8, #1, #63
  452110:	lsl	x1, x19, #2
  452114:	bl	404450 <realloc@plt>
  452118:	cbz	x0, 453678 <_obstack_memory_used@@Base+0x84b4>
  45211c:	ldr	x8, [x24, #40]
  452120:	str	x19, [sp, #16]
  452124:	ldr	x19, [sp, #32]
  452128:	ldr	x14, [sp, #56]
  45212c:	mov	w27, #0x3                   	// #3
  452130:	str	x0, [x24]
  452134:	b	451fc8 <_obstack_memory_used@@Base+0x6e04>
  452138:	ldr	x8, [sp, #8]
  45213c:	ldr	x0, [x20, #8]
  452140:	mov	w19, #0x1                   	// #1
  452144:	bfi	x19, x8, #1, #63
  452148:	lsl	x1, x19, #2
  45214c:	str	x1, [sp, #8]
  452150:	bl	404450 <realloc@plt>
  452154:	ldr	x8, [x20, #16]
  452158:	ldr	x1, [sp, #8]
  45215c:	mov	x22, x0
  452160:	mov	x0, x8
  452164:	bl	404450 <realloc@plt>
  452168:	str	x0, [sp]
  45216c:	cbz	x22, 453684 <_obstack_memory_used@@Base+0x84c0>
  452170:	ldr	x8, [sp]
  452174:	cbz	x8, 453684 <_obstack_memory_used@@Base+0x84c0>
  452178:	ldr	x10, [sp]
  45217c:	ldr	x8, [x20, #64]
  452180:	stp	x22, x10, [x20, #8]
  452184:	ldr	x14, [sp, #56]
  452188:	str	x19, [sp, #8]
  45218c:	b	45209c <_obstack_memory_used@@Base+0x6ed8>
  452190:	ldr	x8, [x19, #72]
  452194:	add	x8, x8, w26, sxtw
  452198:	str	x8, [x19, #72]
  45219c:	ldr	w8, [sp, #48]
  4521a0:	cbz	w8, 4521cc <_obstack_memory_used@@Base+0x7008>
  4521a4:	ldp	q0, q1, [x25]
  4521a8:	mvn	v0.16b, v0.16b
  4521ac:	mvn	v1.16b, v1.16b
  4521b0:	stp	q0, q1, [x25]
  4521b4:	ldr	w8, [x23, #180]
  4521b8:	cmp	w8, #0x2
  4521bc:	b.ge	4521d8 <_obstack_memory_used@@Base+0x7014>  // b.tcont
  4521c0:	ldr	x9, [x24, #40]
  4521c4:	cbnz	x9, 452234 <_obstack_memory_used@@Base+0x7070>
  4521c8:	b	45221c <_obstack_memory_used@@Base+0x7058>
  4521cc:	ldr	w8, [x23, #180]
  4521d0:	cmp	w8, #0x2
  4521d4:	b.lt	4521c0 <_obstack_memory_used@@Base+0x6ffc>  // b.tstop
  4521d8:	ldr	x9, [x23, #120]
  4521dc:	ldp	x11, x12, [x25]
  4521e0:	ldr	x10, [x9]
  4521e4:	and	x10, x11, x10
  4521e8:	str	x10, [x25]
  4521ec:	ldr	x10, [x9, #8]
  4521f0:	and	x10, x12, x10
  4521f4:	str	x10, [x25, #8]
  4521f8:	ldr	x10, [x9, #16]
  4521fc:	ldp	x11, x12, [x25, #16]
  452200:	and	x10, x11, x10
  452204:	str	x10, [x25, #16]
  452208:	ldr	x9, [x9, #24]
  45220c:	and	x9, x12, x9
  452210:	str	x9, [x25, #24]
  452214:	ldr	x9, [x24, #40]
  452218:	cbnz	x9, 452234 <_obstack_memory_used@@Base+0x7070>
  45221c:	ldr	x9, [x24, #48]
  452220:	cbnz	x9, 452234 <_obstack_memory_used@@Base+0x7070>
  452224:	ldr	x9, [x24, #56]
  452228:	cbnz	x9, 452234 <_obstack_memory_used@@Base+0x7070>
  45222c:	ldr	x9, [x24, #64]
  452230:	cbz	x9, 4531ac <_obstack_memory_used@@Base+0x7fe8>
  452234:	ldrb	w9, [x23, #176]
  452238:	ldr	w8, [x23, #128]
  45223c:	orr	w9, w9, #0x2
  452240:	cmp	w8, #0xf
  452244:	strb	w9, [x23, #176]
  452248:	b.eq	453330 <_obstack_memory_used@@Base+0x816c>  // b.none
  45224c:	ldr	x0, [x23, #112]
  452250:	add	w9, w8, #0x1
  452254:	sxtw	x8, w8
  452258:	add	x19, x0, x8, lsl #6
  45225c:	mov	w10, #0x6                   	// #6
  452260:	mov	x11, #0xffffffffffffffff    	// #-1
  452264:	str	w9, [x23, #128]
  452268:	str	xzr, [x19, #8]!
  45226c:	stp	xzr, xzr, [x19, #16]
  452270:	str	xzr, [x19, #8]
  452274:	str	w10, [x19, #48]
  452278:	stp	xzr, x24, [x19, #32]
  45227c:	str	x11, [x19, #56]
  452280:	ldr	x8, [x25]
  452284:	cbnz	x8, 4522a0 <_obstack_memory_used@@Base+0x70dc>
  452288:	ldr	x8, [x25, #8]
  45228c:	cbnz	x8, 4522a0 <_obstack_memory_used@@Base+0x70dc>
  452290:	ldr	x8, [x25, #16]
  452294:	cbnz	x8, 4522a0 <_obstack_memory_used@@Base+0x70dc>
  452298:	ldr	x8, [x25, #24]
  45229c:	cbz	x8, 453238 <_obstack_memory_used@@Base+0x8074>
  4522a0:	ldr	w8, [x23, #128]
  4522a4:	cmp	w8, #0xf
  4522a8:	b.eq	453358 <_obstack_memory_used@@Base+0x8194>  // b.none
  4522ac:	ldr	x0, [x23, #112]
  4522b0:	add	w9, w8, #0x1
  4522b4:	sxtw	x8, w8
  4522b8:	add	x20, x0, x8, lsl #6
  4522bc:	str	w9, [x23, #128]
  4522c0:	mov	w9, #0x3                   	// #3
  4522c4:	mov	x8, #0xffffffffffffffff    	// #-1
  4522c8:	str	xzr, [x20, #8]!
  4522cc:	stp	xzr, xzr, [x20, #16]
  4522d0:	str	xzr, [x20, #8]
  4522d4:	str	w9, [x20, #48]
  4522d8:	stp	xzr, x25, [x20, #32]
  4522dc:	str	x8, [x20, #56]
  4522e0:	ldr	w8, [x23, #128]
  4522e4:	cmp	w8, #0xf
  4522e8:	b.eq	453380 <_obstack_memory_used@@Base+0x81bc>  // b.none
  4522ec:	ldr	x0, [x23, #112]
  4522f0:	add	w9, w8, #0x1
  4522f4:	sxtw	x8, w8
  4522f8:	add	x8, x0, x8, lsl #6
  4522fc:	mov	w10, #0xa                   	// #10
  452300:	mov	x11, #0xffffffffffffffff    	// #-1
  452304:	str	w9, [x23, #128]
  452308:	str	xzr, [x8, #8]!
  45230c:	stp	x20, x19, [x8, #8]
  452310:	str	w10, [x8, #48]
  452314:	stp	xzr, xzr, [x8, #24]
  452318:	str	x11, [x8, #56]
  45231c:	str	x8, [x20]
  452320:	str	x8, [sp, #48]
  452324:	str	x8, [x19]
  452328:	ldp	x20, x21, [sp, #32]
  45232c:	mov	x0, x14
  452330:	str	x28, [sp, #24]
  452334:	mov	x1, x20
  452338:	mov	x2, x21
  45233c:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  452340:	ldr	x8, [x20, #72]
  452344:	ldp	x9, x12, [sp, #48]
  452348:	add	x25, x23, #0x80
  45234c:	add	x26, x23, #0x70
  452350:	mov	w23, #0x1                   	// #1
  452354:	mov	x28, #0xffffffffffffffff    	// #-1
  452358:	add	x8, x8, w0, sxtw
  45235c:	str	x8, [x20, #72]
  452360:	ldrb	w8, [x12, #8]
  452364:	str	x9, [sp, #48]
  452368:	cmp	w8, #0x17
  45236c:	b.hi	452f40 <_obstack_memory_used@@Base+0x7d7c>  // b.pmore
  452370:	mov	w10, #0x800                 	// #2048
  452374:	lsl	w9, w23, w8
  452378:	movk	w10, #0x8c, lsl #16
  45237c:	tst	w9, w10
  452380:	b.eq	452f40 <_obstack_memory_used@@Base+0x7d7c>  // b.none
  452384:	ldr	q0, [x12]
  452388:	ldr	x19, [x20, #72]
  45238c:	mov	w24, #0xa                   	// #10
  452390:	cmp	w8, #0x17
  452394:	stur	q0, [x29, #-80]
  452398:	b.ne	452438 <_obstack_memory_used@@Base+0x7274>  // b.any
  45239c:	mov	x10, #0xffffffffffffffff    	// #-1
  4523a0:	mov	x0, x12
  4523a4:	mov	x1, x20
  4523a8:	mov	x2, x21
  4523ac:	mov	x22, x10
  4523b0:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  4523b4:	ldr	x8, [x20, #72]
  4523b8:	ldr	x12, [sp, #56]
  4523bc:	add	x8, x8, w0, sxtw
  4523c0:	str	x8, [x20, #72]
  4523c4:	ldrb	w8, [x12, #8]
  4523c8:	ldrb	w9, [x12]
  4523cc:	cmp	w8, #0x18
  4523d0:	b.eq	452450 <_obstack_memory_used@@Base+0x728c>  // b.none
  4523d4:	cmp	w8, #0x2
  4523d8:	b.eq	452a8c <_obstack_memory_used@@Base+0x78c8>  // b.none
  4523dc:	cmp	w9, #0x2c
  4523e0:	b.eq	452450 <_obstack_memory_used@@Base+0x728c>  // b.none
  4523e4:	cmp	w9, #0x30
  4523e8:	mov	x10, #0xfffffffffffffffe    	// #-2
  4523ec:	b.cc	4523a0 <_obstack_memory_used@@Base+0x71dc>  // b.lo, b.ul, b.last
  4523f0:	cmp	w8, #0x1
  4523f4:	b.ne	4523a0 <_obstack_memory_used@@Base+0x71dc>  // b.any
  4523f8:	cmn	x22, #0x2
  4523fc:	mov	x10, #0xfffffffffffffffe    	// #-2
  452400:	b.eq	4523a0 <_obstack_memory_used@@Base+0x71dc>  // b.none
  452404:	cmp	w9, #0x39
  452408:	b.hi	4523a0 <_obstack_memory_used@@Base+0x71dc>  // b.pmore
  45240c:	cmn	x22, #0x1
  452410:	b.eq	452430 <_obstack_memory_used@@Base+0x726c>  // b.none
  452414:	madd	x8, x22, x24, x9
  452418:	mov	w10, #0x8030                	// #32816
  45241c:	sub	x9, x8, #0x30
  452420:	cmp	x8, x10
  452424:	mov	w8, #0x8000                	// #32768
  452428:	csel	x10, x8, x9, gt
  45242c:	b	4523a0 <_obstack_memory_used@@Base+0x71dc>
  452430:	sub	x10, x9, #0x30
  452434:	b	4523a0 <_obstack_memory_used@@Base+0x71dc>
  452438:	cmp	w8, #0x12
  45243c:	cset	w22, eq  // eq = none
  452440:	cmp	w8, #0x13
  452444:	mov	w8, #0x1                   	// #1
  452448:	cneg	x23, x8, ne  // ne = any
  45244c:	b	452584 <_obstack_memory_used@@Base+0x73c0>
  452450:	cmn	x22, #0x1
  452454:	b.ne	452470 <_obstack_memory_used@@Base+0x72ac>  // b.any
  452458:	cmp	w9, #0x2c
  45245c:	b.ne	452530 <_obstack_memory_used@@Base+0x736c>  // b.any
  452460:	cmp	w8, #0x1
  452464:	b.ne	452530 <_obstack_memory_used@@Base+0x736c>  // b.any
  452468:	mov	x22, xzr
  45246c:	b	452490 <_obstack_memory_used@@Base+0x72cc>
  452470:	cmn	x22, #0x2
  452474:	b.eq	452a8c <_obstack_memory_used@@Base+0x78c8>  // b.none
  452478:	cmp	w8, #0x18
  45247c:	b.eq	452544 <_obstack_memory_used@@Base+0x7380>  // b.none
  452480:	cmp	w8, #0x1
  452484:	b.ne	452a8c <_obstack_memory_used@@Base+0x78c8>  // b.any
  452488:	cmp	w9, #0x2c
  45248c:	b.ne	452a8c <_obstack_memory_used@@Base+0x78c8>  // b.any
  452490:	mov	x10, #0xffffffffffffffff    	// #-1
  452494:	mov	x0, x12
  452498:	mov	x1, x20
  45249c:	mov	x2, x21
  4524a0:	mov	x23, x10
  4524a4:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  4524a8:	ldr	x8, [x20, #72]
  4524ac:	ldr	x12, [sp, #56]
  4524b0:	add	x8, x8, w0, sxtw
  4524b4:	str	x8, [x20, #72]
  4524b8:	ldrb	w8, [x12, #8]
  4524bc:	cmp	w8, #0x18
  4524c0:	b.eq	452548 <_obstack_memory_used@@Base+0x7384>  // b.none
  4524c4:	cmp	w8, #0x2
  4524c8:	b.eq	452a88 <_obstack_memory_used@@Base+0x78c4>  // b.none
  4524cc:	ldrb	w9, [x12]
  4524d0:	mov	w11, #0xa                   	// #10
  4524d4:	cmp	w9, #0x2c
  4524d8:	b.eq	45254c <_obstack_memory_used@@Base+0x7388>  // b.none
  4524dc:	cmp	w9, #0x30
  4524e0:	mov	x10, #0xfffffffffffffffe    	// #-2
  4524e4:	b.cc	452494 <_obstack_memory_used@@Base+0x72d0>  // b.lo, b.ul, b.last
  4524e8:	cmp	w8, #0x1
  4524ec:	b.ne	452494 <_obstack_memory_used@@Base+0x72d0>  // b.any
  4524f0:	cmn	x23, #0x2
  4524f4:	mov	x10, #0xfffffffffffffffe    	// #-2
  4524f8:	b.eq	452494 <_obstack_memory_used@@Base+0x72d0>  // b.none
  4524fc:	cmp	w9, #0x39
  452500:	b.hi	452494 <_obstack_memory_used@@Base+0x72d0>  // b.pmore
  452504:	cmn	x23, #0x1
  452508:	b.eq	452528 <_obstack_memory_used@@Base+0x7364>  // b.none
  45250c:	madd	x8, x23, x11, x9
  452510:	mov	w10, #0x8030                	// #32816
  452514:	sub	x9, x8, #0x30
  452518:	cmp	x8, x10
  45251c:	mov	w8, #0x8000                	// #32768
  452520:	csel	x10, x8, x9, gt
  452524:	b	452494 <_obstack_memory_used@@Base+0x72d0>
  452528:	sub	x10, x9, #0x30
  45252c:	b	452494 <_obstack_memory_used@@Base+0x72d0>
  452530:	ldr	x8, [sp, #24]
  452534:	mov	x14, xzr
  452538:	mov	w9, #0xa                   	// #10
  45253c:	str	w9, [x8]
  452540:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452544:	mov	x23, x22
  452548:	mov	w11, #0xa                   	// #10
  45254c:	cmn	x23, #0x2
  452550:	b.eq	452a88 <_obstack_memory_used@@Base+0x78c4>  // b.none
  452554:	cmn	x23, #0x1
  452558:	cset	w9, eq  // eq = none
  45255c:	cmp	x22, x23
  452560:	cset	w10, le
  452564:	cmp	w8, #0x18
  452568:	b.ne	452cd0 <_obstack_memory_used@@Base+0x7b0c>  // b.any
  45256c:	orr	w8, w10, w9
  452570:	tbz	w8, #0, 452cd0 <_obstack_memory_used@@Base+0x7b0c>
  452574:	cmn	x23, #0x1
  452578:	csel	x8, x22, x23, eq  // eq = none
  45257c:	cmp	x8, #0x8, lsl #12
  452580:	b.ge	452e50 <_obstack_memory_used@@Base+0x7c8c>  // b.tcont
  452584:	mov	x0, x12
  452588:	mov	x1, x20
  45258c:	mov	x2, x21
  452590:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  452594:	ldr	x8, [x20, #72]
  452598:	ldr	x19, [sp, #48]
  45259c:	add	x8, x8, w0, sxtw
  4525a0:	str	x8, [x20, #72]
  4525a4:	cbz	x19, 452978 <_obstack_memory_used@@Base+0x77b4>
  4525a8:	ldr	x12, [sp, #56]
  4525ac:	orr	x8, x23, x22
  4525b0:	mov	w13, #0xa                   	// #10
  4525b4:	cbz	x8, 452984 <_obstack_memory_used@@Base+0x77c0>
  4525b8:	cmp	x22, #0x1
  4525bc:	b.ge	452a28 <_obstack_memory_used@@Base+0x7864>  // b.tcont
  4525c0:	mov	x14, xzr
  4525c4:	mov	x21, x19
  4525c8:	ldrb	w8, [x21, #48]
  4525cc:	cmp	w8, #0x11
  4525d0:	b.ne	452638 <_obstack_memory_used@@Base+0x7474>  // b.any
  4525d4:	ldr	x8, [x21, #40]
  4525d8:	mov	x10, x21
  4525dc:	mov	x9, x10
  4525e0:	ldr	x10, [x10, #8]
  4525e4:	cbnz	x10, 4525dc <_obstack_memory_used@@Base+0x7418>
  4525e8:	ldr	x10, [x9, #16]
  4525ec:	cbnz	x10, 4525dc <_obstack_memory_used@@Base+0x7418>
  4525f0:	ldr	w10, [x9, #48]
  4525f4:	and	w11, w10, #0xff
  4525f8:	cmp	w11, #0x11
  4525fc:	b.ne	452614 <_obstack_memory_used@@Base+0x7450>  // b.any
  452600:	ldr	x11, [x9, #40]
  452604:	cmp	x11, x8
  452608:	b.ne	452614 <_obstack_memory_used@@Base+0x7450>  // b.any
  45260c:	orr	w10, w10, #0x80000
  452610:	str	w10, [x9, #48]
  452614:	ldr	x11, [x9]
  452618:	cbz	x11, 452638 <_obstack_memory_used@@Base+0x7474>
  45261c:	ldr	x10, [x11, #16]
  452620:	cmp	x10, x9
  452624:	mov	x9, x11
  452628:	b.eq	4525f0 <_obstack_memory_used@@Base+0x742c>  // b.none
  45262c:	mov	x9, x11
  452630:	cbz	x10, 4525f0 <_obstack_memory_used@@Base+0x742c>
  452634:	b	4525dc <_obstack_memory_used@@Base+0x7418>
  452638:	ldr	w8, [x25]
  45263c:	cmn	x23, #0x1
  452640:	cinc	w19, w13, eq  // eq = none
  452644:	cmp	w8, #0xf
  452648:	b.eq	452a50 <_obstack_memory_used@@Base+0x788c>  // b.none
  45264c:	ldr	x0, [x26]
  452650:	mov	w11, #0x10                  	// #16
  452654:	add	w9, w8, #0x1
  452658:	sxtw	x8, w8
  45265c:	add	x22, x22, #0x2
  452660:	add	x27, x0, x8, lsl #6
  452664:	str	w9, [x25]
  452668:	cmp	x22, x23
  45266c:	str	xzr, [x27, #8]!
  452670:	stp	x21, xzr, [x27, #8]
  452674:	str	w19, [x27, #48]
  452678:	stp	xzr, xzr, [x27, #24]
  45267c:	str	x28, [x27, #56]
  452680:	str	x27, [x21]
  452684:	b.gt	45291c <_obstack_memory_used@@Base+0x7758>
  452688:	mov	x20, x27
  45268c:	ldr	w8, [x25]
  452690:	cmp	w8, #0xf
  452694:	b.eq	45285c <_obstack_memory_used@@Base+0x7698>  // b.none
  452698:	ldr	x0, [x26]
  45269c:	add	w10, w8, #0x1
  4526a0:	sxtw	x8, w8
  4526a4:	add	x19, x0, x8, lsl #6
  4526a8:	str	w10, [x25]
  4526ac:	str	xzr, [x19, #8]!
  4526b0:	add	x9, x21, #0x28
  4526b4:	stp	xzr, xzr, [x19, #8]
  4526b8:	ldr	q0, [x9]
  4526bc:	add	x24, sp, #0x50
  4526c0:	stp	xzr, xzr, [x19, #24]
  4526c4:	str	x28, [x19, #56]
  4526c8:	stur	q0, [x19, #40]
  4526cc:	ldr	w8, [x19, #48]
  4526d0:	and	w8, w8, #0xfff3ffff
  4526d4:	str	w8, [x19, #48]
  4526d8:	mov	x8, x19
  4526dc:	str	x19, [sp, #80]
  4526e0:	str	x27, [x8]
  4526e4:	ldr	x8, [x24]
  4526e8:	ldr	w9, [x8, #48]
  4526ec:	orr	w9, w9, #0x40000
  4526f0:	str	w9, [x8, #48]
  4526f4:	ldr	x8, [x21, #8]
  4526f8:	ldr	x27, [x24]
  4526fc:	cbz	x8, 452764 <_obstack_memory_used@@Base+0x75a0>
  452700:	add	x24, x27, #0x8
  452704:	mov	x21, x8
  452708:	ldr	w8, [x25]
  45270c:	cmp	w8, #0xf
  452710:	b.eq	45278c <_obstack_memory_used@@Base+0x75c8>  // b.none
  452714:	ldr	x0, [x26]
  452718:	add	w10, w8, #0x1
  45271c:	sxtw	x8, w8
  452720:	add	x8, x0, x8, lsl #6
  452724:	str	w10, [x25]
  452728:	str	xzr, [x8, #8]!
  45272c:	add	x9, x21, #0x28
  452730:	stp	xzr, xzr, [x8, #8]
  452734:	ldr	q0, [x9]
  452738:	stp	xzr, xzr, [x8, #24]
  45273c:	str	x28, [x8, #56]
  452740:	stur	q0, [x8, #40]
  452744:	ldr	w9, [x8, #48]
  452748:	and	w9, w9, #0xfff3ffff
  45274c:	str	w9, [x8, #48]
  452750:	str	x8, [x24]
  452754:	b	4526e0 <_obstack_memory_used@@Base+0x751c>
  452758:	ldr	x21, [x8]
  45275c:	ldr	x27, [x27]
  452760:	cbz	x21, 4527c4 <_obstack_memory_used@@Base+0x7600>
  452764:	mov	x9, x8
  452768:	mov	x8, x21
  45276c:	ldr	x21, [x21, #16]
  452770:	cmp	x21, x9
  452774:	b.eq	452758 <_obstack_memory_used@@Base+0x7594>  // b.none
  452778:	cbz	x21, 452758 <_obstack_memory_used@@Base+0x7594>
  45277c:	add	x24, x27, #0x10
  452780:	ldr	w8, [x25]
  452784:	cmp	w8, #0xf
  452788:	b.ne	452714 <_obstack_memory_used@@Base+0x7550>  // b.any
  45278c:	mov	w0, #0x3c8                 	// #968
  452790:	str	x14, [sp, #16]
  452794:	bl	404210 <malloc@plt>
  452798:	cbz	x0, 4528dc <_obstack_memory_used@@Base+0x7718>
  45279c:	ldr	x9, [x26]
  4527a0:	ldr	x12, [sp, #56]
  4527a4:	ldr	x14, [sp, #16]
  4527a8:	mov	w8, wzr
  4527ac:	mov	w13, #0xa                   	// #10
  4527b0:	mov	w11, #0x10                  	// #16
  4527b4:	str	x9, [x0]
  4527b8:	str	x0, [x26]
  4527bc:	str	wzr, [x25]
  4527c0:	b	452718 <_obstack_memory_used@@Base+0x7554>
  4527c4:	ldr	w8, [x25]
  4527c8:	cmp	w8, #0xf
  4527cc:	b.eq	452894 <_obstack_memory_used@@Base+0x76d0>  // b.none
  4527d0:	ldr	x0, [x26]
  4527d4:	add	w9, w8, #0x1
  4527d8:	sxtw	x8, w8
  4527dc:	add	x21, x0, x8, lsl #6
  4527e0:	str	w9, [x25]
  4527e4:	str	xzr, [x21, #8]!
  4527e8:	stp	x20, x19, [x21, #8]
  4527ec:	str	w11, [x21, #48]
  4527f0:	stp	xzr, xzr, [x21, #24]
  4527f4:	str	x28, [x21, #56]
  4527f8:	str	x21, [x20]
  4527fc:	cbz	x19, 452edc <_obstack_memory_used@@Base+0x7d18>
  452800:	str	x21, [x19]
  452804:	ldr	w8, [x25]
  452808:	cmp	w8, #0xf
  45280c:	b.eq	45289c <_obstack_memory_used@@Base+0x76d8>  // b.none
  452810:	ldr	x0, [x26]
  452814:	add	w9, w8, #0x1
  452818:	sxtw	x8, w8
  45281c:	add	x20, x0, x8, lsl #6
  452820:	cmp	x22, x23
  452824:	str	w9, [x25]
  452828:	str	xzr, [x20, #8]!
  45282c:	stp	x21, xzr, [x20, #8]
  452830:	str	w13, [x20, #48]
  452834:	stp	xzr, xzr, [x20, #24]
  452838:	str	x28, [x20, #56]
  45283c:	str	x20, [x21]
  452840:	b.ge	452918 <_obstack_memory_used@@Base+0x7754>  // b.tcont
  452844:	ldr	x27, [x19]
  452848:	add	x22, x22, #0x1
  45284c:	mov	x21, x19
  452850:	ldr	w8, [x25]
  452854:	cmp	w8, #0xf
  452858:	b.ne	452698 <_obstack_memory_used@@Base+0x74d4>  // b.any
  45285c:	mov	w0, #0x3c8                 	// #968
  452860:	str	x14, [sp, #16]
  452864:	bl	404210 <malloc@plt>
  452868:	cbz	x0, 4528d4 <_obstack_memory_used@@Base+0x7710>
  45286c:	ldr	x9, [x26]
  452870:	ldr	x12, [sp, #56]
  452874:	ldr	x14, [sp, #16]
  452878:	mov	w8, wzr
  45287c:	mov	w13, #0xa                   	// #10
  452880:	mov	w11, #0x10                  	// #16
  452884:	str	x9, [x0]
  452888:	str	x0, [x26]
  45288c:	str	wzr, [x25]
  452890:	b	45269c <_obstack_memory_used@@Base+0x74d8>
  452894:	str	x14, [sp, #16]
  452898:	b	4528e4 <_obstack_memory_used@@Base+0x7720>
  45289c:	mov	w0, #0x3c8                 	// #968
  4528a0:	mov	x20, x14
  4528a4:	bl	404210 <malloc@plt>
  4528a8:	ldr	x12, [sp, #56]
  4528ac:	mov	w11, #0x10                  	// #16
  4528b0:	mov	w13, #0xa                   	// #10
  4528b4:	cbz	x0, 452edc <_obstack_memory_used@@Base+0x7d18>
  4528b8:	ldr	x9, [x26]
  4528bc:	mov	x14, x20
  4528c0:	mov	w8, wzr
  4528c4:	str	x9, [x0]
  4528c8:	str	x0, [x26]
  4528cc:	str	wzr, [x25]
  4528d0:	b	452814 <_obstack_memory_used@@Base+0x7650>
  4528d4:	str	xzr, [sp, #80]
  4528d8:	b	4528e0 <_obstack_memory_used@@Base+0x771c>
  4528dc:	str	xzr, [x24]
  4528e0:	mov	x19, xzr
  4528e4:	mov	w0, #0x3c8                 	// #968
  4528e8:	bl	404210 <malloc@plt>
  4528ec:	ldr	x12, [sp, #56]
  4528f0:	ldr	x14, [sp, #16]
  4528f4:	mov	w13, #0xa                   	// #10
  4528f8:	mov	w11, #0x10                  	// #16
  4528fc:	cbz	x0, 452edc <_obstack_memory_used@@Base+0x7d18>
  452900:	ldr	x9, [x26]
  452904:	mov	w8, wzr
  452908:	str	x9, [x0]
  45290c:	str	x0, [x26]
  452910:	str	wzr, [x25]
  452914:	b	4527d4 <_obstack_memory_used@@Base+0x7610>
  452918:	mov	x27, x20
  45291c:	ldp	x20, x21, [sp, #32]
  452920:	mov	w23, #0x1                   	// #1
  452924:	cbz	x14, 45296c <_obstack_memory_used@@Base+0x77a8>
  452928:	ldr	w8, [x25]
  45292c:	cmp	w8, #0xf
  452930:	b.eq	452ce4 <_obstack_memory_used@@Base+0x7b20>  // b.none
  452934:	ldr	x0, [x26]
  452938:	add	w9, w8, #0x1
  45293c:	sxtw	x8, w8
  452940:	add	x8, x0, x8, lsl #6
  452944:	str	w9, [x25]
  452948:	str	xzr, [x8, #8]!
  45294c:	stp	x14, x27, [x8, #8]
  452950:	str	w11, [x8, #48]
  452954:	stp	xzr, xzr, [x8, #24]
  452958:	str	x28, [x8, #56]
  45295c:	str	x8, [x14]
  452960:	mov	x14, x8
  452964:	str	x8, [x27]
  452968:	b	452970 <_obstack_memory_used@@Base+0x77ac>
  45296c:	mov	x14, x27
  452970:	mov	w8, wzr
  452974:	b	452f0c <_obstack_memory_used@@Base+0x7d48>
  452978:	ldr	x12, [sp, #56]
  45297c:	mov	x14, xzr
  452980:	b	452ef0 <_obstack_memory_used@@Base+0x7d2c>
  452984:	mov	x8, x19
  452988:	mov	w23, #0x1                   	// #1
  45298c:	mov	x19, x8
  452990:	ldr	x8, [x8, #8]
  452994:	cbnz	x8, 45298c <_obstack_memory_used@@Base+0x77c8>
  452998:	ldr	x8, [x19, #16]
  45299c:	cbnz	x8, 45298c <_obstack_memory_used@@Base+0x77c8>
  4529a0:	ldr	w8, [x19, #48]
  4529a4:	mov	w9, #0xff                  	// #255
  4529a8:	movk	w9, #0x4, lsl #16
  4529ac:	and	w8, w8, w9
  4529b0:	cmp	w8, #0x3
  4529b4:	b.eq	4529e8 <_obstack_memory_used@@Base+0x7824>  // b.none
  4529b8:	cmp	w8, #0x6
  4529bc:	b.ne	4529fc <_obstack_memory_used@@Base+0x7838>  // b.any
  4529c0:	ldr	x23, [x19, #40]
  4529c4:	ldr	x0, [x23]
  4529c8:	bl	4046b0 <free@plt>
  4529cc:	ldr	x0, [x23, #8]
  4529d0:	bl	4046b0 <free@plt>
  4529d4:	ldr	x0, [x23, #16]
  4529d8:	bl	4046b0 <free@plt>
  4529dc:	ldr	x0, [x23, #24]
  4529e0:	bl	4046b0 <free@plt>
  4529e4:	b	4529ec <_obstack_memory_used@@Base+0x7828>
  4529e8:	ldr	x23, [x19, #40]
  4529ec:	mov	x0, x23
  4529f0:	bl	4046b0 <free@plt>
  4529f4:	ldr	x12, [sp, #56]
  4529f8:	mov	w23, #0x1                   	// #1
  4529fc:	ldr	x9, [x19]
  452a00:	cbz	x9, 452a20 <_obstack_memory_used@@Base+0x785c>
  452a04:	ldr	x8, [x9, #16]
  452a08:	cmp	x8, x19
  452a0c:	mov	x19, x9
  452a10:	b.eq	4529a0 <_obstack_memory_used@@Base+0x77dc>  // b.none
  452a14:	mov	x19, x9
  452a18:	cbz	x8, 4529a0 <_obstack_memory_used@@Base+0x77dc>
  452a1c:	b	45298c <_obstack_memory_used@@Base+0x77c8>
  452a20:	mov	x14, xzr
  452a24:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452a28:	mov	x14, x19
  452a2c:	mov	x15, x19
  452a30:	mov	w11, #0x10                  	// #16
  452a34:	b.ne	452aa8 <_obstack_memory_used@@Base+0x78e4>  // b.any
  452a38:	ldr	x21, [sp, #40]
  452a3c:	cmp	x22, x23
  452a40:	b.ne	452d18 <_obstack_memory_used@@Base+0x7b54>  // b.any
  452a44:	ldr	x20, [sp, #32]
  452a48:	mov	w23, #0x1                   	// #1
  452a4c:	b	452970 <_obstack_memory_used@@Base+0x77ac>
  452a50:	mov	w0, #0x3c8                 	// #968
  452a54:	mov	x20, x14
  452a58:	bl	404210 <malloc@plt>
  452a5c:	ldr	x12, [sp, #56]
  452a60:	mov	w13, #0xa                   	// #10
  452a64:	mov	w11, #0x10                  	// #16
  452a68:	cbz	x0, 452edc <_obstack_memory_used@@Base+0x7d18>
  452a6c:	ldr	x9, [x26]
  452a70:	mov	x14, x20
  452a74:	mov	w8, wzr
  452a78:	str	x9, [x0]
  452a7c:	str	x0, [x26]
  452a80:	str	wzr, [x25]
  452a84:	b	452654 <_obstack_memory_used@@Base+0x7490>
  452a88:	mov	w23, #0x1                   	// #1
  452a8c:	tbz	w21, #21, 452e74 <_obstack_memory_used@@Base+0x7cb0>
  452a90:	str	x19, [x20, #72]
  452a94:	ldur	q0, [x29, #-80]
  452a98:	ldr	x14, [sp, #48]
  452a9c:	str	q0, [x12]
  452aa0:	strb	w23, [x12, #8]
  452aa4:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452aa8:	ldr	x14, [x19]
  452aac:	mov	x15, x19
  452ab0:	mov	w21, #0x2                   	// #2
  452ab4:	ldr	w8, [x25]
  452ab8:	cmp	w8, #0xf
  452abc:	b.eq	452c4c <_obstack_memory_used@@Base+0x7a88>  // b.none
  452ac0:	ldr	x0, [x26]
  452ac4:	add	w10, w8, #0x1
  452ac8:	sxtw	x8, w8
  452acc:	add	x20, x0, x8, lsl #6
  452ad0:	str	w10, [x25]
  452ad4:	str	xzr, [x20, #8]!
  452ad8:	add	x9, x15, #0x28
  452adc:	stp	xzr, xzr, [x20, #8]
  452ae0:	ldr	q0, [x9]
  452ae4:	add	x27, sp, #0x50
  452ae8:	stp	xzr, xzr, [x20, #24]
  452aec:	str	x28, [x20, #56]
  452af0:	stur	q0, [x20, #40]
  452af4:	ldr	w8, [x20, #48]
  452af8:	and	w8, w8, #0xfff3ffff
  452afc:	str	w8, [x20, #48]
  452b00:	mov	x8, x20
  452b04:	str	x20, [sp, #80]
  452b08:	str	x14, [x8]
  452b0c:	ldr	x8, [x27]
  452b10:	ldr	w9, [x8, #48]
  452b14:	orr	w9, w9, #0x40000
  452b18:	str	w9, [x8, #48]
  452b1c:	ldr	x8, [x15, #8]
  452b20:	ldr	x14, [x27]
  452b24:	cbz	x8, 452b8c <_obstack_memory_used@@Base+0x79c8>
  452b28:	add	x27, x14, #0x8
  452b2c:	mov	x15, x8
  452b30:	ldr	w8, [x25]
  452b34:	cmp	w8, #0xf
  452b38:	b.eq	452bb4 <_obstack_memory_used@@Base+0x79f0>  // b.none
  452b3c:	ldr	x0, [x26]
  452b40:	add	w10, w8, #0x1
  452b44:	sxtw	x8, w8
  452b48:	add	x8, x0, x8, lsl #6
  452b4c:	str	w10, [x25]
  452b50:	str	xzr, [x8, #8]!
  452b54:	add	x9, x15, #0x28
  452b58:	stp	xzr, xzr, [x8, #8]
  452b5c:	ldr	q0, [x9]
  452b60:	stp	xzr, xzr, [x8, #24]
  452b64:	str	x28, [x8, #56]
  452b68:	stur	q0, [x8, #40]
  452b6c:	ldr	w9, [x8, #48]
  452b70:	and	w9, w9, #0xfff3ffff
  452b74:	str	w9, [x8, #48]
  452b78:	str	x8, [x27]
  452b7c:	b	452b08 <_obstack_memory_used@@Base+0x7944>
  452b80:	ldr	x15, [x8]
  452b84:	ldr	x14, [x14]
  452b88:	cbz	x15, 452bf4 <_obstack_memory_used@@Base+0x7a30>
  452b8c:	mov	x9, x8
  452b90:	mov	x8, x15
  452b94:	ldr	x15, [x15, #16]
  452b98:	cmp	x15, x9
  452b9c:	b.eq	452b80 <_obstack_memory_used@@Base+0x79bc>  // b.none
  452ba0:	cbz	x15, 452b80 <_obstack_memory_used@@Base+0x79bc>
  452ba4:	add	x27, x14, #0x10
  452ba8:	ldr	w8, [x25]
  452bac:	cmp	w8, #0xf
  452bb0:	b.ne	452b3c <_obstack_memory_used@@Base+0x7978>  // b.any
  452bb4:	mov	w0, #0x3c8                 	// #968
  452bb8:	str	x15, [sp, #16]
  452bbc:	mov	x24, x14
  452bc0:	bl	404210 <malloc@plt>
  452bc4:	cbz	x0, 452c94 <_obstack_memory_used@@Base+0x7ad0>
  452bc8:	ldr	x9, [x26]
  452bcc:	ldr	x12, [sp, #56]
  452bd0:	ldr	x15, [sp, #16]
  452bd4:	mov	w8, wzr
  452bd8:	mov	w13, #0xa                   	// #10
  452bdc:	mov	w11, #0x10                  	// #16
  452be0:	mov	x14, x24
  452be4:	str	x9, [x0]
  452be8:	str	x0, [x26]
  452bec:	str	wzr, [x25]
  452bf0:	b	452b40 <_obstack_memory_used@@Base+0x797c>
  452bf4:	ldr	w8, [x25]
  452bf8:	cmp	w8, #0xf
  452bfc:	b.eq	452c9c <_obstack_memory_used@@Base+0x7ad8>  // b.none
  452c00:	ldr	x0, [x26]
  452c04:	mov	x15, x20
  452c08:	add	w9, w8, #0x1
  452c0c:	sxtw	x8, w8
  452c10:	add	x14, x0, x8, lsl #6
  452c14:	str	w9, [x25]
  452c18:	str	xzr, [x14, #8]!
  452c1c:	stp	x19, x15, [x14, #8]
  452c20:	str	w11, [x14, #48]
  452c24:	stp	xzr, xzr, [x14, #24]
  452c28:	str	x28, [x14, #56]
  452c2c:	str	x14, [x19]
  452c30:	cbz	x15, 452edc <_obstack_memory_used@@Base+0x7d18>
  452c34:	cmp	x21, x22
  452c38:	add	x21, x21, #0x1
  452c3c:	mov	x19, x14
  452c40:	str	x14, [x15]
  452c44:	b.ne	452ab4 <_obstack_memory_used@@Base+0x78f0>  // b.any
  452c48:	b	452a38 <_obstack_memory_used@@Base+0x7874>
  452c4c:	mov	w0, #0x3c8                 	// #968
  452c50:	mov	x24, x15
  452c54:	mov	x20, x14
  452c58:	bl	404210 <malloc@plt>
  452c5c:	cbz	x0, 452c8c <_obstack_memory_used@@Base+0x7ac8>
  452c60:	ldr	x9, [x26]
  452c64:	ldr	x12, [sp, #56]
  452c68:	mov	w8, wzr
  452c6c:	mov	w13, #0xa                   	// #10
  452c70:	mov	w11, #0x10                  	// #16
  452c74:	mov	x14, x20
  452c78:	mov	x15, x24
  452c7c:	str	x9, [x0]
  452c80:	str	x0, [x26]
  452c84:	str	wzr, [x25]
  452c88:	b	452ac4 <_obstack_memory_used@@Base+0x7900>
  452c8c:	str	xzr, [sp, #80]
  452c90:	b	452c98 <_obstack_memory_used@@Base+0x7ad4>
  452c94:	str	xzr, [x27]
  452c98:	mov	x20, xzr
  452c9c:	mov	w0, #0x3c8                 	// #968
  452ca0:	bl	404210 <malloc@plt>
  452ca4:	ldr	x12, [sp, #56]
  452ca8:	mov	w13, #0xa                   	// #10
  452cac:	mov	w11, #0x10                  	// #16
  452cb0:	cbz	x0, 452edc <_obstack_memory_used@@Base+0x7d18>
  452cb4:	ldr	x9, [x26]
  452cb8:	mov	x15, x20
  452cbc:	mov	w8, wzr
  452cc0:	str	x9, [x0]
  452cc4:	str	x0, [x26]
  452cc8:	str	wzr, [x25]
  452ccc:	b	452c08 <_obstack_memory_used@@Base+0x7a44>
  452cd0:	ldr	x8, [sp, #24]
  452cd4:	mov	x14, xzr
  452cd8:	mov	w23, #0x1                   	// #1
  452cdc:	str	w11, [x8]
  452ce0:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452ce4:	mov	w0, #0x3c8                 	// #968
  452ce8:	mov	x19, x14
  452cec:	bl	404210 <malloc@plt>
  452cf0:	cbz	x0, 452e68 <_obstack_memory_used@@Base+0x7ca4>
  452cf4:	ldr	x9, [x26]
  452cf8:	ldr	x12, [sp, #56]
  452cfc:	mov	w8, wzr
  452d00:	mov	w11, #0x10                  	// #16
  452d04:	mov	x14, x19
  452d08:	str	x9, [x0]
  452d0c:	str	x0, [x26]
  452d10:	str	wzr, [x25]
  452d14:	b	452938 <_obstack_memory_used@@Base+0x7774>
  452d18:	mov	x20, x15
  452d1c:	ldr	x19, [x20], #40
  452d20:	ldr	w8, [x25]
  452d24:	cmp	w8, #0xf
  452d28:	b.eq	452e90 <_obstack_memory_used@@Base+0x7ccc>  // b.none
  452d2c:	ldr	x0, [x26]
  452d30:	add	w9, w8, #0x1
  452d34:	sxtw	x8, w8
  452d38:	add	x21, x0, x8, lsl #6
  452d3c:	str	w9, [x25]
  452d40:	str	xzr, [x21, #8]!
  452d44:	stp	xzr, xzr, [x21, #8]
  452d48:	ldr	q0, [x20]
  452d4c:	add	x20, sp, #0x50
  452d50:	stp	xzr, xzr, [x21, #24]
  452d54:	str	x28, [x21, #56]
  452d58:	stur	q0, [x21, #40]
  452d5c:	ldr	w8, [x21, #48]
  452d60:	and	w8, w8, #0xfff3ffff
  452d64:	str	w8, [x21, #48]
  452d68:	mov	x8, x21
  452d6c:	str	x21, [sp, #80]
  452d70:	str	x19, [x8]
  452d74:	ldr	x8, [x20]
  452d78:	ldr	w9, [x8, #48]
  452d7c:	orr	w9, w9, #0x40000
  452d80:	str	w9, [x8, #48]
  452d84:	ldr	x8, [x15, #8]
  452d88:	ldr	x19, [x20]
  452d8c:	cbz	x8, 452da8 <_obstack_memory_used@@Base+0x7be4>
  452d90:	add	x20, x19, #0x8
  452d94:	mov	x15, x8
  452d98:	b	452dc4 <_obstack_memory_used@@Base+0x7c00>
  452d9c:	ldr	x15, [x8]
  452da0:	ldr	x19, [x19]
  452da4:	cbz	x15, 4525c8 <_obstack_memory_used@@Base+0x7404>
  452da8:	mov	x9, x8
  452dac:	mov	x8, x15
  452db0:	ldr	x15, [x15, #16]
  452db4:	cmp	x15, x9
  452db8:	b.eq	452d9c <_obstack_memory_used@@Base+0x7bd8>  // b.none
  452dbc:	cbz	x15, 452d9c <_obstack_memory_used@@Base+0x7bd8>
  452dc0:	add	x20, x19, #0x10
  452dc4:	ldr	w8, [x25]
  452dc8:	cmp	w8, #0xf
  452dcc:	b.eq	452e14 <_obstack_memory_used@@Base+0x7c50>  // b.none
  452dd0:	ldr	x0, [x26]
  452dd4:	add	w10, w8, #0x1
  452dd8:	sxtw	x8, w8
  452ddc:	add	x8, x0, x8, lsl #6
  452de0:	str	w10, [x25]
  452de4:	str	xzr, [x8, #8]!
  452de8:	add	x9, x15, #0x28
  452dec:	stp	xzr, xzr, [x8, #8]
  452df0:	ldr	q0, [x9]
  452df4:	stp	xzr, xzr, [x8, #24]
  452df8:	str	x28, [x8, #56]
  452dfc:	stur	q0, [x8, #40]
  452e00:	ldr	w9, [x8, #48]
  452e04:	and	w9, w9, #0xfff3ffff
  452e08:	str	w9, [x8, #48]
  452e0c:	str	x8, [x20]
  452e10:	b	452d70 <_obstack_memory_used@@Base+0x7bac>
  452e14:	mov	w0, #0x3c8                 	// #968
  452e18:	mov	x27, x15
  452e1c:	mov	x24, x14
  452e20:	bl	404210 <malloc@plt>
  452e24:	cbz	x0, 452ed4 <_obstack_memory_used@@Base+0x7d10>
  452e28:	ldr	x9, [x26]
  452e2c:	ldr	x12, [sp, #56]
  452e30:	mov	w8, wzr
  452e34:	mov	w13, #0xa                   	// #10
  452e38:	mov	x14, x24
  452e3c:	mov	x15, x27
  452e40:	str	x9, [x0]
  452e44:	str	x0, [x26]
  452e48:	str	wzr, [x25]
  452e4c:	b	452dd4 <_obstack_memory_used@@Base+0x7c10>
  452e50:	ldr	x8, [sp, #24]
  452e54:	mov	w9, #0xf                   	// #15
  452e58:	mov	x14, xzr
  452e5c:	mov	w23, #0x1                   	// #1
  452e60:	str	w9, [x8]
  452e64:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452e68:	ldr	x12, [sp, #56]
  452e6c:	mov	x14, xzr
  452e70:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452e74:	ldr	x9, [sp, #24]
  452e78:	cmp	w8, #0x2
  452e7c:	mov	w8, #0x9                   	// #9
  452e80:	cinc	w8, w8, ne  // ne = any
  452e84:	mov	x14, xzr
  452e88:	str	w8, [x9]
  452e8c:	b	452ef4 <_obstack_memory_used@@Base+0x7d30>
  452e90:	mov	w0, #0x3c8                 	// #968
  452e94:	mov	x24, x15
  452e98:	mov	x21, x14
  452e9c:	bl	404210 <malloc@plt>
  452ea0:	cbz	x0, 452ecc <_obstack_memory_used@@Base+0x7d08>
  452ea4:	ldr	x9, [x26]
  452ea8:	ldr	x12, [sp, #56]
  452eac:	mov	w8, wzr
  452eb0:	mov	w13, #0xa                   	// #10
  452eb4:	mov	x14, x21
  452eb8:	mov	x15, x24
  452ebc:	str	x9, [x0]
  452ec0:	str	x0, [x26]
  452ec4:	str	wzr, [x25]
  452ec8:	b	452d30 <_obstack_memory_used@@Base+0x7b6c>
  452ecc:	str	xzr, [sp, #80]
  452ed0:	b	452ed8 <_obstack_memory_used@@Base+0x7d14>
  452ed4:	str	xzr, [x20]
  452ed8:	ldr	x12, [sp, #56]
  452edc:	ldp	x8, x20, [sp, #24]
  452ee0:	ldr	x21, [sp, #40]
  452ee4:	mov	w9, #0xc                   	// #12
  452ee8:	mov	x14, xzr
  452eec:	str	w9, [x8]
  452ef0:	mov	w23, #0x1                   	// #1
  452ef4:	cmp	x14, #0x0
  452ef8:	cset	w8, eq  // eq = none
  452efc:	cbnz	x14, 452f0c <_obstack_memory_used@@Base+0x7d48>
  452f00:	ldr	x9, [sp, #24]
  452f04:	ldr	w9, [x9]
  452f08:	cbnz	w9, 453118 <_obstack_memory_used@@Base+0x7f54>
  452f0c:	mov	x9, x14
  452f10:	tbz	w21, #24, 452360 <_obstack_memory_used@@Base+0x719c>
  452f14:	ldrb	w9, [x12, #8]
  452f18:	cmp	w9, #0x17
  452f1c:	b.eq	452f2c <_obstack_memory_used@@Base+0x7d68>  // b.none
  452f20:	cmp	w9, #0xb
  452f24:	mov	x9, x14
  452f28:	b.ne	452360 <_obstack_memory_used@@Base+0x719c>  // b.any
  452f2c:	ldr	x22, [sp, #24]
  452f30:	tbz	w8, #0, 452f64 <_obstack_memory_used@@Base+0x7da0>
  452f34:	mov	w8, #0xd                   	// #13
  452f38:	str	xzr, [sp, #48]
  452f3c:	str	w8, [x22]
  452f40:	ldr	x0, [sp, #48]
  452f44:	ldp	x20, x19, [sp, #272]
  452f48:	ldp	x22, x21, [sp, #256]
  452f4c:	ldp	x24, x23, [sp, #240]
  452f50:	ldp	x26, x25, [sp, #224]
  452f54:	ldp	x28, x27, [sp, #208]
  452f58:	ldp	x29, x30, [sp, #192]
  452f5c:	add	sp, sp, #0x120
  452f60:	ret
  452f64:	mov	w19, #0xff                  	// #255
  452f68:	movk	w19, #0x4, lsl #16
  452f6c:	mov	x21, x14
  452f70:	ldr	x14, [x14, #8]
  452f74:	cbnz	x14, 452f6c <_obstack_memory_used@@Base+0x7da8>
  452f78:	ldr	x14, [x21, #16]
  452f7c:	cbnz	x14, 452f6c <_obstack_memory_used@@Base+0x7da8>
  452f80:	ldr	w8, [x21, #48]
  452f84:	and	w8, w8, w19
  452f88:	cmp	w8, #0x3
  452f8c:	b.eq	452fc0 <_obstack_memory_used@@Base+0x7dfc>  // b.none
  452f90:	cmp	w8, #0x6
  452f94:	b.ne	452fcc <_obstack_memory_used@@Base+0x7e08>  // b.any
  452f98:	ldr	x20, [x21, #40]
  452f9c:	ldr	x0, [x20]
  452fa0:	bl	4046b0 <free@plt>
  452fa4:	ldr	x0, [x20, #8]
  452fa8:	bl	4046b0 <free@plt>
  452fac:	ldr	x0, [x20, #16]
  452fb0:	bl	4046b0 <free@plt>
  452fb4:	ldr	x0, [x20, #24]
  452fb8:	bl	4046b0 <free@plt>
  452fbc:	b	452fc4 <_obstack_memory_used@@Base+0x7e00>
  452fc0:	ldr	x20, [x21, #40]
  452fc4:	mov	x0, x20
  452fc8:	bl	4046b0 <free@plt>
  452fcc:	ldr	x8, [x21]
  452fd0:	cbz	x8, 452f34 <_obstack_memory_used@@Base+0x7d70>
  452fd4:	ldr	x14, [x8, #16]
  452fd8:	cmp	x14, x21
  452fdc:	mov	x21, x8
  452fe0:	b.eq	452f80 <_obstack_memory_used@@Base+0x7dbc>  // b.none
  452fe4:	mov	x21, x8
  452fe8:	cbz	x14, 452f80 <_obstack_memory_used@@Base+0x7dbc>
  452fec:	b	452f6c <_obstack_memory_used@@Base+0x7da8>
  452ff0:	mov	w8, #0x5                   	// #5
  452ff4:	str	w8, [x14]
  452ff8:	ldr	w8, [x23, #128]
  452ffc:	ldr	x21, [sp, #40]
  453000:	cmp	w8, #0xf
  453004:	b.eq	453450 <_obstack_memory_used@@Base+0x828c>  // b.none
  453008:	ldr	x0, [x23, #112]
  45300c:	add	w9, w8, #0x1
  453010:	sxtw	x8, w8
  453014:	add	x19, x0, x8, lsl #6
  453018:	str	w9, [x23, #128]
  45301c:	str	xzr, [x19, #8]!
  453020:	stp	xzr, xzr, [x19, #8]
  453024:	ldr	q0, [x14]
  453028:	mov	x8, #0xffffffffffffffff    	// #-1
  45302c:	str	x8, [x19, #56]
  453030:	stp	xzr, xzr, [x19, #24]
  453034:	stur	q0, [x19, #40]
  453038:	ldr	w9, [x19, #48]
  45303c:	and	w8, w9, #0xfff3ffff
  453040:	str	w8, [x19, #48]
  453044:	mov	w8, #0xa                   	// #10
  453048:	str	w8, [x14]
  45304c:	ldr	w8, [x23, #128]
  453050:	cmp	w8, #0xf
  453054:	b.ne	451b24 <_obstack_memory_used@@Base+0x6960>  // b.any
  453058:	mov	w0, #0x3c8                 	// #968
  45305c:	bl	404210 <malloc@plt>
  453060:	cbz	x0, 45352c <_obstack_memory_used@@Base+0x8368>
  453064:	ldr	x9, [x23, #112]
  453068:	ldr	x21, [sp, #40]
  45306c:	ldr	x14, [sp, #56]
  453070:	mov	w8, wzr
  453074:	str	x9, [x0]
  453078:	str	x0, [x23, #112]
  45307c:	str	wzr, [x23, #128]
  453080:	b	451b28 <_obstack_memory_used@@Base+0x6964>
  453084:	ldr	w8, [x23, #128]
  453088:	cmp	w8, #0xf
  45308c:	b.eq	45347c <_obstack_memory_used@@Base+0x82b8>  // b.none
  453090:	ldr	x0, [x23, #112]
  453094:	add	w9, w8, #0x1
  453098:	sxtw	x8, w8
  45309c:	add	x10, x0, x8, lsl #6
  4530a0:	str	w9, [x23, #128]
  4530a4:	str	xzr, [x10, #8]!
  4530a8:	stp	xzr, xzr, [x10, #8]
  4530ac:	ldr	q0, [x14]
  4530b0:	mov	x9, #0xffffffffffffffff    	// #-1
  4530b4:	stp	xzr, xzr, [x10, #24]
  4530b8:	str	x9, [x10, #56]
  4530bc:	stur	q0, [x10, #40]
  4530c0:	ldr	w8, [x10, #48]
  4530c4:	and	w8, w8, #0xfff3ffff
  4530c8:	str	w8, [x10, #48]
  4530cc:	mov	x8, x10
  4530d0:	ldr	x19, [sp, #32]
  4530d4:	mov	x0, x14
  4530d8:	mov	x2, x21
  4530dc:	str	x8, [sp, #48]
  4530e0:	mov	x1, x19
  4530e4:	bl	450c08 <_obstack_memory_used@@Base+0x5a44>
  4530e8:	ldr	x8, [x19, #72]
  4530ec:	add	x8, x8, w0, sxtw
  4530f0:	str	x8, [x19, #72]
  4530f4:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  4530f8:	ldrb	w8, [x20, #8]
  4530fc:	mov	x25, x0
  453100:	cmp	w8, #0x9
  453104:	b.ne	45357c <_obstack_memory_used@@Base+0x83b8>  // b.any
  453108:	mov	x14, x20
  45310c:	cmp	x19, #0x8
  453110:	b.ls	4517e8 <_obstack_memory_used@@Base+0x6624>  // b.plast
  453114:	b	451800 <_obstack_memory_used@@Base+0x663c>
  453118:	ldr	x9, [sp, #48]
  45311c:	cbz	x9, 451cbc <_obstack_memory_used@@Base+0x6af8>
  453120:	mov	w20, #0xff                  	// #255
  453124:	movk	w20, #0x4, lsl #16
  453128:	mov	x21, x9
  45312c:	ldr	x9, [x9, #8]
  453130:	cbnz	x9, 453128 <_obstack_memory_used@@Base+0x7f64>
  453134:	ldr	x9, [x21, #16]
  453138:	cbnz	x9, 453128 <_obstack_memory_used@@Base+0x7f64>
  45313c:	ldr	w8, [x21, #48]
  453140:	and	w8, w8, w20
  453144:	cmp	w8, #0x3
  453148:	b.eq	45317c <_obstack_memory_used@@Base+0x7fb8>  // b.none
  45314c:	cmp	w8, #0x6
  453150:	b.ne	453188 <_obstack_memory_used@@Base+0x7fc4>  // b.any
  453154:	ldr	x19, [x21, #40]
  453158:	ldr	x0, [x19]
  45315c:	bl	4046b0 <free@plt>
  453160:	ldr	x0, [x19, #8]
  453164:	bl	4046b0 <free@plt>
  453168:	ldr	x0, [x19, #16]
  45316c:	bl	4046b0 <free@plt>
  453170:	ldr	x0, [x19, #24]
  453174:	bl	4046b0 <free@plt>
  453178:	b	453180 <_obstack_memory_used@@Base+0x7fbc>
  45317c:	ldr	x19, [x21, #40]
  453180:	mov	x0, x19
  453184:	bl	4046b0 <free@plt>
  453188:	ldr	x8, [x21]
  45318c:	cbz	x8, 451cbc <_obstack_memory_used@@Base+0x6af8>
  453190:	ldr	x9, [x8, #16]
  453194:	cmp	x9, x21
  453198:	mov	x21, x8
  45319c:	b.eq	45313c <_obstack_memory_used@@Base+0x7f78>  // b.none
  4531a0:	mov	x21, x8
  4531a4:	cbz	x9, 45313c <_obstack_memory_used@@Base+0x7f78>
  4531a8:	b	453128 <_obstack_memory_used@@Base+0x7f64>
  4531ac:	cmp	w8, #0x2
  4531b0:	b.lt	4531c4 <_obstack_memory_used@@Base+0x8000>  // b.tstop
  4531b4:	ldr	x8, [x24, #72]
  4531b8:	cbnz	x8, 452234 <_obstack_memory_used@@Base+0x7070>
  4531bc:	ldrb	w8, [x24, #32]
  4531c0:	tbnz	w8, #0, 452234 <_obstack_memory_used@@Base+0x7070>
  4531c4:	ldr	x0, [x24]
  4531c8:	bl	4046b0 <free@plt>
  4531cc:	ldr	x0, [x24, #8]
  4531d0:	bl	4046b0 <free@plt>
  4531d4:	ldr	x0, [x24, #16]
  4531d8:	bl	4046b0 <free@plt>
  4531dc:	ldr	x0, [x24, #24]
  4531e0:	bl	4046b0 <free@plt>
  4531e4:	mov	x0, x24
  4531e8:	bl	4046b0 <free@plt>
  4531ec:	ldr	w8, [x23, #128]
  4531f0:	cmp	w8, #0xf
  4531f4:	b.eq	453654 <_obstack_memory_used@@Base+0x8490>  // b.none
  4531f8:	ldr	x0, [x23, #112]
  4531fc:	ldr	x14, [sp, #56]
  453200:	add	w9, w8, #0x1
  453204:	sxtw	x8, w8
  453208:	add	x8, x0, x8, lsl #6
  45320c:	mov	w10, #0x3                   	// #3
  453210:	mov	x11, #0xffffffffffffffff    	// #-1
  453214:	str	w9, [x23, #128]
  453218:	str	xzr, [x8, #8]!
  45321c:	stp	xzr, xzr, [x8, #16]
  453220:	str	xzr, [x8, #8]
  453224:	str	w10, [x8, #48]
  453228:	stp	xzr, x25, [x8, #32]
  45322c:	str	x8, [sp, #48]
  453230:	str	x11, [x8, #56]
  453234:	b	452328 <_obstack_memory_used@@Base+0x7164>
  453238:	mov	x0, x25
  45323c:	bl	4046b0 <free@plt>
  453240:	ldr	x14, [sp, #56]
  453244:	str	x19, [sp, #48]
  453248:	b	452328 <_obstack_memory_used@@Base+0x7164>
  45324c:	str	x28, [sp, #24]
  453250:	mov	w0, #0x7                   	// #7
  453254:	b	4533b0 <_obstack_memory_used@@Base+0x81ec>
  453258:	str	x28, [sp, #24]
  45325c:	b	4533b0 <_obstack_memory_used@@Base+0x81ec>
  453260:	mov	w0, #0x3c8                 	// #968
  453264:	bl	404210 <malloc@plt>
  453268:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  45326c:	ldr	x9, [x23, #112]
  453270:	ldr	x14, [sp, #56]
  453274:	mov	w8, wzr
  453278:	str	x9, [x0]
  45327c:	str	x0, [x23, #112]
  453280:	str	wzr, [x23, #128]
  453284:	b	4516b8 <_obstack_memory_used@@Base+0x64f4>
  453288:	mov	w8, #0x2                   	// #2
  45328c:	b	45367c <_obstack_memory_used@@Base+0x84b8>
  453290:	mov	w8, #0x6                   	// #6
  453294:	str	xzr, [sp, #48]
  453298:	str	w8, [x28]
  45329c:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  4532a0:	mov	w0, #0x3c8                 	// #968
  4532a4:	bl	404210 <malloc@plt>
  4532a8:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  4532ac:	ldr	x9, [x23, #112]
  4532b0:	ldr	x10, [sp, #32]
  4532b4:	ldr	x14, [sp, #56]
  4532b8:	mov	w8, wzr
  4532bc:	str	x9, [x0]
  4532c0:	str	x0, [x23, #112]
  4532c4:	str	wzr, [x23, #128]
  4532c8:	b	451868 <_obstack_memory_used@@Base+0x66a4>
  4532cc:	mov	w0, #0x3c8                 	// #968
  4532d0:	bl	404210 <malloc@plt>
  4532d4:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  4532d8:	ldr	x9, [x23, #112]
  4532dc:	ldr	x14, [sp, #56]
  4532e0:	mov	w8, wzr
  4532e4:	str	x9, [x0]
  4532e8:	str	x0, [x23, #112]
  4532ec:	str	wzr, [x23, #128]
  4532f0:	b	451a18 <_obstack_memory_used@@Base+0x6854>
  4532f4:	mov	x0, x25
  4532f8:	bl	4046b0 <free@plt>
  4532fc:	mov	x0, x24
  453300:	bl	4046b0 <free@plt>
  453304:	b	45356c <_obstack_memory_used@@Base+0x83a8>
  453308:	mov	w0, #0x3c8                 	// #968
  45330c:	bl	404210 <malloc@plt>
  453310:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  453314:	ldr	x9, [x23, #112]
  453318:	ldr	x14, [sp, #56]
  45331c:	mov	w8, wzr
  453320:	str	x9, [x0]
  453324:	str	x0, [x23, #112]
  453328:	str	wzr, [x23, #128]
  45332c:	b	451748 <_obstack_memory_used@@Base+0x6584>
  453330:	mov	w0, #0x3c8                 	// #968
  453334:	bl	404210 <malloc@plt>
  453338:	cbz	x0, 453678 <_obstack_memory_used@@Base+0x84b4>
  45333c:	ldr	x9, [x23, #112]
  453340:	ldr	x14, [sp, #56]
  453344:	mov	w8, wzr
  453348:	str	x9, [x0]
  45334c:	str	x0, [x23, #112]
  453350:	str	wzr, [x23, #128]
  453354:	b	452250 <_obstack_memory_used@@Base+0x708c>
  453358:	mov	w0, #0x3c8                 	// #968
  45335c:	bl	404210 <malloc@plt>
  453360:	cbz	x0, 453678 <_obstack_memory_used@@Base+0x84b4>
  453364:	ldr	x9, [x23, #112]
  453368:	ldr	x14, [sp, #56]
  45336c:	mov	w8, wzr
  453370:	str	x9, [x0]
  453374:	str	x0, [x23, #112]
  453378:	str	wzr, [x23, #128]
  45337c:	b	4522b0 <_obstack_memory_used@@Base+0x70ec>
  453380:	mov	w0, #0x3c8                 	// #968
  453384:	bl	404210 <malloc@plt>
  453388:	cbz	x0, 453678 <_obstack_memory_used@@Base+0x84b4>
  45338c:	ldr	x9, [x23, #112]
  453390:	ldr	x14, [sp, #56]
  453394:	mov	w8, wzr
  453398:	str	x9, [x0]
  45339c:	str	x0, [x23, #112]
  4533a0:	str	wzr, [x23, #128]
  4533a4:	b	4522f0 <_obstack_memory_used@@Base+0x712c>
  4533a8:	str	x28, [sp, #24]
  4533ac:	mov	w0, #0x3                   	// #3
  4533b0:	ldr	x28, [sp, #24]
  4533b4:	str	w0, [x28]
  4533b8:	mov	x0, x25
  4533bc:	bl	4046b0 <free@plt>
  4533c0:	ldr	x0, [x24]
  4533c4:	bl	4046b0 <free@plt>
  4533c8:	ldr	x0, [x24, #8]
  4533cc:	bl	4046b0 <free@plt>
  4533d0:	ldr	x0, [x24, #16]
  4533d4:	bl	4046b0 <free@plt>
  4533d8:	ldr	x0, [x24, #24]
  4533dc:	bl	4046b0 <free@plt>
  4533e0:	mov	x0, x24
  4533e4:	bl	4046b0 <free@plt>
  4533e8:	ldr	w8, [x28]
  4533ec:	ldr	x14, [sp, #56]
  4533f0:	str	xzr, [sp, #48]
  4533f4:	cbz	w8, 452328 <_obstack_memory_used@@Base+0x7164>
  4533f8:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  4533fc:	mov	w0, #0x3c8                 	// #968
  453400:	bl	404210 <malloc@plt>
  453404:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  453408:	ldr	x9, [x23, #112]
  45340c:	ldr	x14, [sp, #56]
  453410:	mov	w8, wzr
  453414:	str	x9, [x0]
  453418:	str	x0, [x23, #112]
  45341c:	str	wzr, [x23, #128]
  453420:	b	451810 <_obstack_memory_used@@Base+0x664c>
  453424:	mov	w0, #0x3c8                 	// #968
  453428:	bl	404210 <malloc@plt>
  45342c:	cbz	x0, 453624 <_obstack_memory_used@@Base+0x8460>
  453430:	ldr	x9, [x23, #112]
  453434:	ldr	x21, [sp, #40]
  453438:	ldr	x14, [sp, #56]
  45343c:	mov	w8, wzr
  453440:	str	x9, [x0]
  453444:	str	x0, [x23, #112]
  453448:	str	wzr, [x23, #128]
  45344c:	b	451ad8 <_obstack_memory_used@@Base+0x6914>
  453450:	mov	w0, #0x3c8                 	// #968
  453454:	bl	404210 <malloc@plt>
  453458:	cbz	x0, 453630 <_obstack_memory_used@@Base+0x846c>
  45345c:	ldr	x9, [x23, #112]
  453460:	ldr	x21, [sp, #40]
  453464:	ldr	x14, [sp, #56]
  453468:	mov	w8, wzr
  45346c:	str	x9, [x0]
  453470:	str	x0, [x23, #112]
  453474:	str	wzr, [x23, #128]
  453478:	b	45300c <_obstack_memory_used@@Base+0x7e48>
  45347c:	mov	w0, #0x3c8                 	// #968
  453480:	bl	404210 <malloc@plt>
  453484:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  453488:	ldr	x9, [x23, #112]
  45348c:	ldr	x21, [sp, #40]
  453490:	ldr	x14, [sp, #56]
  453494:	mov	w8, wzr
  453498:	str	x9, [x0]
  45349c:	str	x0, [x23, #112]
  4534a0:	str	wzr, [x23, #128]
  4534a4:	b	453094 <_obstack_memory_used@@Base+0x7ed0>
  4534a8:	mov	x20, xzr
  4534ac:	mov	x19, xzr
  4534b0:	b	4534bc <_obstack_memory_used@@Base+0x82f8>
  4534b4:	mov	w19, #0x2                   	// #2
  4534b8:	mov	w20, #0x80                  	// #128
  4534bc:	bl	404640 <__ctype_b_loc@plt>
  4534c0:	ldr	x8, [x0]
  4534c4:	ldr	x14, [sp, #56]
  4534c8:	mov	w9, #0x1                   	// #1
  4534cc:	add	x8, x8, x20, lsl #1
  4534d0:	b	4534e8 <_obstack_memory_used@@Base+0x8324>
  4534d4:	add	x19, x19, #0x1
  4534d8:	add	x20, x20, #0x40
  4534dc:	cmp	x19, #0x4
  4534e0:	add	x8, x8, #0x80
  4534e4:	b.eq	451aa8 <_obstack_memory_used@@Base+0x68e4>  // b.none
  4534e8:	add	x11, x23, x19, lsl #3
  4534ec:	mov	x10, xzr
  4534f0:	add	x11, x11, #0xb8
  4534f4:	b	453514 <_obstack_memory_used@@Base+0x8350>
  4534f8:	ldr	x12, [x11]
  4534fc:	lsl	x13, x9, x10
  453500:	orr	x12, x12, x13
  453504:	str	x12, [x11]
  453508:	add	x10, x10, #0x1
  45350c:	cmp	x10, #0x40
  453510:	b.eq	4534d4 <_obstack_memory_used@@Base+0x8310>  // b.none
  453514:	add	x12, x20, x10
  453518:	cmp	x12, #0x5f
  45351c:	b.eq	4534f8 <_obstack_memory_used@@Base+0x8334>  // b.none
  453520:	ldrh	w12, [x8, x10, lsl #1]
  453524:	tbz	w12, #3, 453508 <_obstack_memory_used@@Base+0x8344>
  453528:	b	4534f8 <_obstack_memory_used@@Base+0x8334>
  45352c:	ldr	x21, [sp, #40]
  453530:	ldr	x14, [sp, #56]
  453534:	mov	x20, xzr
  453538:	ldr	w8, [x23, #128]
  45353c:	cmp	w8, #0xf
  453540:	b.ne	451b6c <_obstack_memory_used@@Base+0x69a8>  // b.any
  453544:	mov	w0, #0x3c8                 	// #968
  453548:	bl	404210 <malloc@plt>
  45354c:	ldr	x14, [sp, #56]
  453550:	cbz	x0, 45356c <_obstack_memory_used@@Base+0x83a8>
  453554:	ldr	x9, [x23, #112]
  453558:	mov	w8, wzr
  45355c:	str	x9, [x0]
  453560:	str	x0, [x23, #112]
  453564:	str	wzr, [x23, #128]
  453568:	b	451b70 <_obstack_memory_used@@Base+0x69ac>
  45356c:	mov	w8, #0xc                   	// #12
  453570:	str	xzr, [sp, #48]
  453574:	str	w8, [x28]
  453578:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  45357c:	cbz	x25, 45360c <_obstack_memory_used@@Base+0x8448>
  453580:	mov	w19, #0xff                  	// #255
  453584:	movk	w19, #0x4, lsl #16
  453588:	mov	x21, x25
  45358c:	ldr	x25, [x25, #8]
  453590:	cbnz	x25, 453588 <_obstack_memory_used@@Base+0x83c4>
  453594:	ldr	x25, [x21, #16]
  453598:	cbnz	x25, 453588 <_obstack_memory_used@@Base+0x83c4>
  45359c:	ldr	w8, [x21, #48]
  4535a0:	and	w8, w8, w19
  4535a4:	cmp	w8, #0x3
  4535a8:	b.eq	4535dc <_obstack_memory_used@@Base+0x8418>  // b.none
  4535ac:	cmp	w8, #0x6
  4535b0:	b.ne	4535e8 <_obstack_memory_used@@Base+0x8424>  // b.any
  4535b4:	ldr	x20, [x21, #40]
  4535b8:	ldr	x0, [x20]
  4535bc:	bl	4046b0 <free@plt>
  4535c0:	ldr	x0, [x20, #8]
  4535c4:	bl	4046b0 <free@plt>
  4535c8:	ldr	x0, [x20, #16]
  4535cc:	bl	4046b0 <free@plt>
  4535d0:	ldr	x0, [x20, #24]
  4535d4:	bl	4046b0 <free@plt>
  4535d8:	b	4535e0 <_obstack_memory_used@@Base+0x841c>
  4535dc:	ldr	x20, [x21, #40]
  4535e0:	mov	x0, x20
  4535e4:	bl	4046b0 <free@plt>
  4535e8:	ldr	x8, [x21]
  4535ec:	cbz	x8, 45360c <_obstack_memory_used@@Base+0x8448>
  4535f0:	ldr	x25, [x8, #16]
  4535f4:	cmp	x25, x21
  4535f8:	mov	x21, x8
  4535fc:	b.eq	45359c <_obstack_memory_used@@Base+0x83d8>  // b.none
  453600:	mov	x21, x8
  453604:	cbz	x25, 45359c <_obstack_memory_used@@Base+0x83d8>
  453608:	b	453588 <_obstack_memory_used@@Base+0x83c4>
  45360c:	mov	w8, #0x8                   	// #8
  453610:	str	xzr, [sp, #48]
  453614:	str	w8, [x28]
  453618:	b	452f40 <_obstack_memory_used@@Base+0x7d7c>
  45361c:	mov	w0, #0xb                   	// #11
  453620:	b	4533b0 <_obstack_memory_used@@Base+0x81ec>
  453624:	mov	x19, xzr
  453628:	mov	w8, #0x9                   	// #9
  45362c:	b	453638 <_obstack_memory_used@@Base+0x8474>
  453630:	mov	x19, xzr
  453634:	mov	w8, #0xa                   	// #10
  453638:	ldr	x21, [sp, #40]
  45363c:	ldr	x14, [sp, #56]
  453640:	str	w8, [x14]
  453644:	ldr	w8, [x23, #128]
  453648:	cmp	w8, #0xf
  45364c:	b.ne	451b24 <_obstack_memory_used@@Base+0x6960>  // b.any
  453650:	b	453058 <_obstack_memory_used@@Base+0x7e94>
  453654:	mov	w0, #0x3c8                 	// #968
  453658:	bl	404210 <malloc@plt>
  45365c:	cbz	x0, 453678 <_obstack_memory_used@@Base+0x84b4>
  453660:	ldr	x9, [x23, #112]
  453664:	mov	w8, wzr
  453668:	str	x9, [x0]
  45366c:	str	x0, [x23, #112]
  453670:	str	wzr, [x23, #128]
  453674:	b	4531fc <_obstack_memory_used@@Base+0x8038>
  453678:	mov	w8, #0xc                   	// #12
  45367c:	str	w8, [x28]
  453680:	b	4533b8 <_obstack_memory_used@@Base+0x81f4>
  453684:	mov	x0, x22
  453688:	bl	4046b0 <free@plt>
  45368c:	ldr	x0, [sp]
  453690:	bl	4046b0 <free@plt>
  453694:	mov	w0, #0xc                   	// #12
  453698:	b	4533b0 <_obstack_memory_used@@Base+0x81ec>
  45369c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  4536a0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4536a4:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4536a8:	add	x0, x0, #0xe98
  4536ac:	add	x1, x1, #0x696
  4536b0:	add	x3, x3, #0x6a2
  4536b4:	mov	w2, #0xced                 	// #3309
  4536b8:	bl	4049b0 <__assert_fail@plt>
  4536bc:	sub	sp, sp, #0x60
  4536c0:	stp	x26, x25, [sp, #32]
  4536c4:	stp	x20, x19, [sp, #80]
  4536c8:	mov	x26, x1
  4536cc:	mov	x20, x0
  4536d0:	mov	w0, #0x20                  	// #32
  4536d4:	mov	w1, #0x1                   	// #1
  4536d8:	stp	x29, x30, [sp, #16]
  4536dc:	stp	x24, x23, [sp, #48]
  4536e0:	stp	x22, x21, [sp, #64]
  4536e4:	add	x29, sp, #0x10
  4536e8:	mov	x21, x5
  4536ec:	mov	w23, w4
  4536f0:	mov	x24, x3
  4536f4:	mov	x25, x2
  4536f8:	str	xzr, [sp, #8]
  4536fc:	bl	4043d0 <calloc@plt>
  453700:	cbz	x0, 4539d4 <_obstack_memory_used@@Base+0x8810>
  453704:	mov	x22, x0
  453708:	mov	w0, #0x50                  	// #80
  45370c:	mov	w1, #0x1                   	// #1
  453710:	bl	4043d0 <calloc@plt>
  453714:	cbz	x0, 453938 <_obstack_memory_used@@Base+0x8774>
  453718:	mov	x19, x0
  45371c:	and	w8, w23, #0x1
  453720:	strb	w8, [x0, #32]
  453724:	add	x3, sp, #0x8
  453728:	mov	x0, x26
  45372c:	mov	x1, x22
  453730:	mov	x2, x19
  453734:	mov	x4, x25
  453738:	mov	x5, xzr
  45373c:	bl	453e68 <_obstack_memory_used@@Base+0x8ca4>
  453740:	cbnz	w0, 453940 <_obstack_memory_used@@Base+0x877c>
  453744:	ldrb	w8, [x24]
  453748:	cbz	w8, 453774 <_obstack_memory_used@@Base+0x85b0>
  45374c:	add	x9, x24, #0x1
  453750:	mov	w10, #0x1                   	// #1
  453754:	lsr	w11, w8, #3
  453758:	and	x11, x11, #0x18
  45375c:	ldr	x12, [x22, x11]
  453760:	lsl	x8, x10, x8
  453764:	orr	x8, x12, x8
  453768:	str	x8, [x22, x11]
  45376c:	ldrb	w8, [x9], #1
  453770:	cbnz	w8, 453754 <_obstack_memory_used@@Base+0x8590>
  453774:	tbnz	w23, #0, 453868 <_obstack_memory_used@@Base+0x86a4>
  453778:	ldr	w8, [x20, #180]
  45377c:	cmp	w8, #0x2
  453780:	b.ge	453884 <_obstack_memory_used@@Base+0x86c0>  // b.tcont
  453784:	ldr	w8, [x20, #128]
  453788:	cmp	w8, #0xf
  45378c:	b.eq	4538cc <_obstack_memory_used@@Base+0x8708>  // b.none
  453790:	ldr	x0, [x20, #112]
  453794:	add	w9, w8, #0x1
  453798:	sxtw	x8, w8
  45379c:	add	x23, x0, x8, lsl #6
  4537a0:	str	w9, [x20, #128]
  4537a4:	mov	w9, #0x3                   	// #3
  4537a8:	mov	x8, #0xffffffffffffffff    	// #-1
  4537ac:	str	xzr, [x23, #8]!
  4537b0:	stp	xzr, xzr, [x23, #16]
  4537b4:	str	xzr, [x23, #8]
  4537b8:	str	w9, [x23, #48]
  4537bc:	stp	xzr, x22, [x23, #32]
  4537c0:	str	x8, [x23, #56]
  4537c4:	ldr	w8, [x20, #180]
  4537c8:	cmp	w8, #0x2
  4537cc:	b.lt	4538f0 <_obstack_memory_used@@Base+0x872c>  // b.tstop
  4537d0:	ldrb	w9, [x20, #176]
  4537d4:	ldr	w8, [x20, #128]
  4537d8:	orr	w9, w9, #0x2
  4537dc:	cmp	w8, #0xf
  4537e0:	strb	w9, [x20, #176]
  4537e4:	b.eq	453980 <_obstack_memory_used@@Base+0x87bc>  // b.none
  4537e8:	ldr	x0, [x20, #112]
  4537ec:	add	w9, w8, #0x1
  4537f0:	sxtw	x8, w8
  4537f4:	add	x21, x0, x8, lsl #6
  4537f8:	str	w9, [x20, #128]
  4537fc:	mov	w9, #0x6                   	// #6
  453800:	mov	x8, #0xffffffffffffffff    	// #-1
  453804:	str	xzr, [x21, #8]!
  453808:	stp	xzr, xzr, [x21, #16]
  45380c:	str	xzr, [x21, #8]
  453810:	str	w9, [x21, #48]
  453814:	stp	xzr, x19, [x21, #32]
  453818:	str	x8, [x21, #56]
  45381c:	ldr	w8, [x20, #128]
  453820:	cmp	w8, #0xf
  453824:	b.eq	4539e4 <_obstack_memory_used@@Base+0x8820>  // b.none
  453828:	ldr	x0, [x20, #112]
  45382c:	add	w9, w8, #0x1
  453830:	sxtw	x8, w8
  453834:	add	x8, x0, x8, lsl #6
  453838:	str	w9, [x20, #128]
  45383c:	mov	w9, #0xa                   	// #10
  453840:	mov	x10, #0xffffffffffffffff    	// #-1
  453844:	str	xzr, [x8, #8]!
  453848:	stp	x23, x21, [x8, #8]
  45384c:	str	w9, [x8, #48]
  453850:	stp	xzr, xzr, [x8, #24]
  453854:	str	x10, [x8, #56]
  453858:	str	x8, [x23]
  45385c:	str	x8, [x21]
  453860:	mov	x23, x8
  453864:	b	453918 <_obstack_memory_used@@Base+0x8754>
  453868:	ldp	q0, q1, [x22]
  45386c:	mvn	v0.16b, v0.16b
  453870:	mvn	v1.16b, v1.16b
  453874:	stp	q0, q1, [x22]
  453878:	ldr	w8, [x20, #180]
  45387c:	cmp	w8, #0x2
  453880:	b.lt	453784 <_obstack_memory_used@@Base+0x85c0>  // b.tstop
  453884:	ldr	x8, [x20, #120]
  453888:	ldp	x10, x11, [x22]
  45388c:	ldr	x9, [x8]
  453890:	and	x9, x10, x9
  453894:	str	x9, [x22]
  453898:	ldr	x9, [x8, #8]
  45389c:	and	x9, x11, x9
  4538a0:	str	x9, [x22, #8]
  4538a4:	ldr	x9, [x8, #16]
  4538a8:	ldp	x10, x11, [x22, #16]
  4538ac:	and	x9, x10, x9
  4538b0:	str	x9, [x22, #16]
  4538b4:	ldr	x8, [x8, #24]
  4538b8:	and	x8, x11, x8
  4538bc:	str	x8, [x22, #24]
  4538c0:	ldr	w8, [x20, #128]
  4538c4:	cmp	w8, #0xf
  4538c8:	b.ne	453790 <_obstack_memory_used@@Base+0x85cc>  // b.any
  4538cc:	mov	w0, #0x3c8                 	// #968
  4538d0:	bl	404210 <malloc@plt>
  4538d4:	cbz	x0, 4539a4 <_obstack_memory_used@@Base+0x87e0>
  4538d8:	ldr	x9, [x20, #112]
  4538dc:	mov	w8, wzr
  4538e0:	str	x9, [x0]
  4538e4:	str	x0, [x20, #112]
  4538e8:	str	wzr, [x20, #128]
  4538ec:	b	453794 <_obstack_memory_used@@Base+0x85d0>
  4538f0:	ldr	x0, [x19]
  4538f4:	bl	4046b0 <free@plt>
  4538f8:	ldr	x0, [x19, #8]
  4538fc:	bl	4046b0 <free@plt>
  453900:	ldr	x0, [x19, #16]
  453904:	bl	4046b0 <free@plt>
  453908:	ldr	x0, [x19, #24]
  45390c:	bl	4046b0 <free@plt>
  453910:	mov	x0, x19
  453914:	bl	4046b0 <free@plt>
  453918:	mov	x0, x23
  45391c:	ldp	x20, x19, [sp, #80]
  453920:	ldp	x22, x21, [sp, #64]
  453924:	ldp	x24, x23, [sp, #48]
  453928:	ldp	x26, x25, [sp, #32]
  45392c:	ldp	x29, x30, [sp, #16]
  453930:	add	sp, sp, #0x60
  453934:	ret
  453938:	mov	x0, x22
  45393c:	b	4539d0 <_obstack_memory_used@@Base+0x880c>
  453940:	mov	w25, w0
  453944:	mov	x0, x22
  453948:	bl	4046b0 <free@plt>
  45394c:	ldr	x0, [x19]
  453950:	bl	4046b0 <free@plt>
  453954:	ldr	x0, [x19, #8]
  453958:	bl	4046b0 <free@plt>
  45395c:	ldr	x0, [x19, #16]
  453960:	bl	4046b0 <free@plt>
  453964:	ldr	x0, [x19, #24]
  453968:	bl	4046b0 <free@plt>
  45396c:	mov	x0, x19
  453970:	bl	4046b0 <free@plt>
  453974:	mov	x23, xzr
  453978:	str	w25, [x21]
  45397c:	b	453918 <_obstack_memory_used@@Base+0x8754>
  453980:	mov	w0, #0x3c8                 	// #968
  453984:	bl	404210 <malloc@plt>
  453988:	cbz	x0, 4539a4 <_obstack_memory_used@@Base+0x87e0>
  45398c:	ldr	x9, [x20, #112]
  453990:	mov	w8, wzr
  453994:	str	x9, [x0]
  453998:	str	x0, [x20, #112]
  45399c:	str	wzr, [x20, #128]
  4539a0:	b	4537ec <_obstack_memory_used@@Base+0x8628>
  4539a4:	mov	x0, x22
  4539a8:	bl	4046b0 <free@plt>
  4539ac:	ldr	x0, [x19]
  4539b0:	bl	4046b0 <free@plt>
  4539b4:	ldr	x0, [x19, #8]
  4539b8:	bl	4046b0 <free@plt>
  4539bc:	ldr	x0, [x19, #16]
  4539c0:	bl	4046b0 <free@plt>
  4539c4:	ldr	x0, [x19, #24]
  4539c8:	bl	4046b0 <free@plt>
  4539cc:	mov	x0, x19
  4539d0:	bl	4046b0 <free@plt>
  4539d4:	mov	x23, xzr
  4539d8:	mov	w8, #0xc                   	// #12
  4539dc:	str	w8, [x21]
  4539e0:	b	453918 <_obstack_memory_used@@Base+0x8754>
  4539e4:	mov	w0, #0x3c8                 	// #968
  4539e8:	bl	404210 <malloc@plt>
  4539ec:	cbz	x0, 453a08 <_obstack_memory_used@@Base+0x8844>
  4539f0:	ldr	x9, [x20, #112]
  4539f4:	mov	w8, wzr
  4539f8:	str	x9, [x0]
  4539fc:	str	x0, [x20, #112]
  453a00:	str	wzr, [x20, #128]
  453a04:	b	45382c <_obstack_memory_used@@Base+0x8668>
  453a08:	mov	x23, xzr
  453a0c:	b	453918 <_obstack_memory_used@@Base+0x8754>
  453a10:	ldr	x9, [x1, #104]
  453a14:	ldr	x8, [x1, #72]
  453a18:	cmp	x9, x8
  453a1c:	b.le	453a98 <_obstack_memory_used@@Base+0x88d4>
  453a20:	ldr	x9, [x1, #8]
  453a24:	ldrb	w8, [x9, x8]
  453a28:	strb	w8, [x0]
  453a2c:	ldr	w9, [x1, #144]
  453a30:	cmp	w9, #0x2
  453a34:	b.lt	453a58 <_obstack_memory_used@@Base+0x8894>  // b.tstop
  453a38:	ldr	x9, [x1, #72]
  453a3c:	ldr	x10, [x1, #48]
  453a40:	cmp	x9, x10
  453a44:	b.eq	453a58 <_obstack_memory_used@@Base+0x8894>  // b.none
  453a48:	ldr	x10, [x1, #16]
  453a4c:	ldr	w9, [x10, x9, lsl #2]
  453a50:	cmn	w9, #0x1
  453a54:	b.eq	453b20 <_obstack_memory_used@@Base+0x895c>  // b.none
  453a58:	tbz	w2, #0, 453aa8 <_obstack_memory_used@@Base+0x88e4>
  453a5c:	cmp	w8, #0x5c
  453a60:	b.ne	453aa8 <_obstack_memory_used@@Base+0x88e4>  // b.any
  453a64:	ldr	x8, [x1, #72]
  453a68:	ldr	x9, [x1, #88]
  453a6c:	add	x8, x8, #0x1
  453a70:	cmp	x8, x9
  453a74:	b.ge	453b20 <_obstack_memory_used@@Base+0x895c>  // b.tcont
  453a78:	ldr	x9, [x1, #8]
  453a7c:	str	x8, [x1, #72]
  453a80:	ldrb	w9, [x9, x8]
  453a84:	mov	w8, #0x1                   	// #1
  453a88:	strb	w9, [x0]
  453a8c:	strb	w8, [x0, #8]
  453a90:	mov	w0, w8
  453a94:	ret
  453a98:	mov	w9, #0x2                   	// #2
  453a9c:	strb	w9, [x0, #8]
  453aa0:	mov	w0, wzr
  453aa4:	ret
  453aa8:	cmp	w8, #0x5c
  453aac:	b.gt	453b00 <_obstack_memory_used@@Base+0x893c>
  453ab0:	cmp	w8, #0x2d
  453ab4:	b.eq	453b30 <_obstack_memory_used@@Base+0x896c>  // b.none
  453ab8:	cmp	w8, #0x5b
  453abc:	b.ne	453b20 <_obstack_memory_used@@Base+0x895c>  // b.any
  453ac0:	ldr	x8, [x1, #72]
  453ac4:	ldr	x9, [x1, #88]
  453ac8:	add	x8, x8, #0x1
  453acc:	cmp	x8, x9
  453ad0:	b.ge	453b50 <_obstack_memory_used@@Base+0x898c>  // b.tcont
  453ad4:	ldr	x9, [x1, #8]
  453ad8:	ldrb	w8, [x9, x8]
  453adc:	cmp	w8, #0x3d
  453ae0:	strb	w8, [x0]
  453ae4:	b.eq	453b6c <_obstack_memory_used@@Base+0x89a8>  // b.none
  453ae8:	cmp	w8, #0x3a
  453aec:	b.eq	453b74 <_obstack_memory_used@@Base+0x89b0>  // b.none
  453af0:	cmp	w8, #0x2e
  453af4:	b.ne	453b54 <_obstack_memory_used@@Base+0x8990>  // b.any
  453af8:	mov	w8, #0x1a                  	// #26
  453afc:	b	453b7c <_obstack_memory_used@@Base+0x89b8>
  453b00:	cmp	w8, #0x5d
  453b04:	b.eq	453b40 <_obstack_memory_used@@Base+0x897c>  // b.none
  453b08:	cmp	w8, #0x5e
  453b0c:	b.ne	453b20 <_obstack_memory_used@@Base+0x895c>  // b.any
  453b10:	mov	w8, #0x19                  	// #25
  453b14:	strb	w8, [x0, #8]
  453b18:	mov	w0, #0x1                   	// #1
  453b1c:	ret
  453b20:	mov	w8, #0x1                   	// #1
  453b24:	strb	w8, [x0, #8]
  453b28:	mov	w0, w8
  453b2c:	ret
  453b30:	mov	w8, #0x16                  	// #22
  453b34:	strb	w8, [x0, #8]
  453b38:	mov	w0, #0x1                   	// #1
  453b3c:	ret
  453b40:	mov	w8, #0x15                  	// #21
  453b44:	strb	w8, [x0, #8]
  453b48:	mov	w0, #0x1                   	// #1
  453b4c:	ret
  453b50:	strb	wzr, [x0]
  453b54:	mov	w8, #0x1                   	// #1
  453b58:	mov	w9, #0x5b                  	// #91
  453b5c:	strb	w8, [x0, #8]
  453b60:	strb	w9, [x0]
  453b64:	mov	w0, w8
  453b68:	ret
  453b6c:	mov	w8, #0x1c                  	// #28
  453b70:	b	453b7c <_obstack_memory_used@@Base+0x89b8>
  453b74:	tbz	w2, #2, 453b54 <_obstack_memory_used@@Base+0x8990>
  453b78:	mov	w8, #0x1e                  	// #30
  453b7c:	strb	w8, [x0, #8]
  453b80:	mov	w0, #0x2                   	// #2
  453b84:	ret
  453b88:	sub	sp, sp, #0x30
  453b8c:	stp	x29, x30, [sp, #32]
  453b90:	ldr	w8, [x1, #144]
  453b94:	ldr	x9, [x1, #72]
  453b98:	add	x29, sp, #0x20
  453b9c:	cmp	w8, #0x1
  453ba0:	b.eq	453c1c <_obstack_memory_used@@Base+0x8a58>  // b.none
  453ba4:	ldr	x8, [x1, #48]
  453ba8:	add	x10, x9, #0x1
  453bac:	cmp	x10, x8
  453bb0:	b.ge	453c1c <_obstack_memory_used@@Base+0x8a58>  // b.tcont
  453bb4:	ldr	x10, [x1, #16]
  453bb8:	sub	x8, x8, x9
  453bbc:	mov	w11, #0x1                   	// #1
  453bc0:	add	x12, x10, x9, lsl #2
  453bc4:	ldr	w13, [x12, x11, lsl #2]
  453bc8:	cmn	w13, #0x1
  453bcc:	b.ne	453be4 <_obstack_memory_used@@Base+0x8a20>  // b.any
  453bd0:	add	x11, x11, #0x1
  453bd4:	cmp	x8, x11
  453bd8:	b.ne	453bc4 <_obstack_memory_used@@Base+0x8a00>  // b.any
  453bdc:	mov	x11, x8
  453be0:	b	453bec <_obstack_memory_used@@Base+0x8a28>
  453be4:	cmp	w11, #0x2
  453be8:	b.lt	453c1c <_obstack_memory_used@@Base+0x8a58>  // b.tstop
  453bec:	mov	w12, #0x1                   	// #1
  453bf0:	str	w12, [x0]
  453bf4:	ldr	w9, [x10, x9, lsl #2]
  453bf8:	mov	w8, wzr
  453bfc:	str	w9, [x0, #8]
  453c00:	ldr	x9, [x1, #72]
  453c04:	add	x9, x9, w11, sxtw
  453c08:	str	x9, [x1, #72]
  453c0c:	ldp	x29, x30, [sp, #32]
  453c10:	mov	w0, w8
  453c14:	add	sp, sp, #0x30
  453c18:	ret
  453c1c:	add	x8, x9, w3, sxtw
  453c20:	str	x8, [x1, #72]
  453c24:	ldrb	w10, [x2, #8]
  453c28:	sub	w9, w10, #0x16
  453c2c:	cmp	w9, #0x8
  453c30:	b.hi	453e34 <_obstack_memory_used@@Base+0x8c70>  // b.pmore
  453c34:	adrp	x11, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453c38:	add	x11, x11, #0x426
  453c3c:	adr	x12, 453c4c <_obstack_memory_used@@Base+0x8a88>
  453c40:	ldrb	w13, [x11, x9]
  453c44:	add	x12, x12, x13, lsl #2
  453c48:	br	x12
  453c4c:	ldr	x9, [x1, #104]
  453c50:	cmp	x9, x8
  453c54:	b.le	453da0 <_obstack_memory_used@@Base+0x8bdc>
  453c58:	ldrb	w9, [x2]
  453c5c:	mov	x8, xzr
  453c60:	and	w10, w10, #0xff
  453c64:	cmp	w10, #0x1e
  453c68:	b.ne	453d40 <_obstack_memory_used@@Base+0x8b7c>  // b.any
  453c6c:	ldrb	w10, [x1, #139]
  453c70:	cbz	w10, 453d40 <_obstack_memory_used@@Base+0x8b7c>
  453c74:	ldrb	w10, [x1, #140]
  453c78:	cbz	w10, 453cfc <_obstack_memory_used@@Base+0x8b38>
  453c7c:	ldr	x11, [x1, #72]
  453c80:	ldr	x13, [x1, #48]
  453c84:	subs	x12, x13, x11
  453c88:	b.eq	453c9c <_obstack_memory_used@@Base+0x8ad8>  // b.none
  453c8c:	ldr	x10, [x1, #16]
  453c90:	ldr	w10, [x10, x11, lsl #2]
  453c94:	cmn	w10, #0x1
  453c98:	b.eq	453d1c <_obstack_memory_used@@Base+0x8b58>  // b.none
  453c9c:	ldr	x10, [x1, #24]
  453ca0:	ldr	x14, [x1, #40]
  453ca4:	ldr	x15, [x1]
  453ca8:	ldr	x10, [x10, x11, lsl #3]
  453cac:	add	x10, x14, x10
  453cb0:	ldrsb	w10, [x15, x10]
  453cb4:	tbnz	w10, #31, 453d1c <_obstack_memory_used@@Base+0x8b58>
  453cb8:	ldr	w14, [x1, #144]
  453cbc:	cmp	w14, #0x1
  453cc0:	b.eq	453d30 <_obstack_memory_used@@Base+0x8b6c>  // b.none
  453cc4:	add	x14, x11, #0x1
  453cc8:	cmp	x14, x13
  453ccc:	b.ge	453d30 <_obstack_memory_used@@Base+0x8b6c>  // b.tcont
  453cd0:	ldr	x13, [x1, #16]
  453cd4:	add	x14, x13, x11, lsl #2
  453cd8:	mov	w13, #0x1                   	// #1
  453cdc:	ldr	w15, [x14, x13, lsl #2]
  453ce0:	cmn	w15, #0x1
  453ce4:	b.ne	453d34 <_obstack_memory_used@@Base+0x8b70>  // b.any
  453ce8:	add	x13, x13, #0x1
  453cec:	cmp	x12, x13
  453cf0:	b.ne	453cdc <_obstack_memory_used@@Base+0x8b18>  // b.any
  453cf4:	mov	x13, x12
  453cf8:	b	453d34 <_obstack_memory_used@@Base+0x8b70>
  453cfc:	ldr	x10, [x1, #72]
  453d00:	ldr	x11, [x1, #40]
  453d04:	ldr	x13, [x1]
  453d08:	add	x12, x10, #0x1
  453d0c:	str	x12, [x1, #72]
  453d10:	add	x10, x10, x11
  453d14:	ldrb	w10, [x13, x10]
  453d18:	b	453d54 <_obstack_memory_used@@Base+0x8b90>
  453d1c:	ldr	x10, [x1, #8]
  453d20:	add	x12, x11, #0x1
  453d24:	str	x12, [x1, #72]
  453d28:	ldrb	w10, [x10, x11]
  453d2c:	b	453d54 <_obstack_memory_used@@Base+0x8b90>
  453d30:	mov	w13, #0x1                   	// #1
  453d34:	add	x12, x11, w13, sxtw
  453d38:	str	x12, [x1, #72]
  453d3c:	b	453d54 <_obstack_memory_used@@Base+0x8b90>
  453d40:	ldr	x10, [x1, #72]
  453d44:	ldr	x11, [x1, #8]
  453d48:	add	x12, x10, #0x1
  453d4c:	str	x12, [x1, #72]
  453d50:	ldrb	w10, [x11, x10]
  453d54:	ldr	x11, [x1, #104]
  453d58:	cmp	x11, x12
  453d5c:	b.le	453da0 <_obstack_memory_used@@Base+0x8bdc>
  453d60:	cmp	w9, w10, uxtb
  453d64:	b.ne	453d78 <_obstack_memory_used@@Base+0x8bb4>  // b.any
  453d68:	ldr	x11, [x1, #8]
  453d6c:	ldrb	w11, [x11, x12]
  453d70:	cmp	w11, #0x5d
  453d74:	b.eq	453db4 <_obstack_memory_used@@Base+0x8bf0>  // b.none
  453d78:	ldr	x11, [x0, #8]
  453d7c:	strb	w10, [x11, x8]
  453d80:	add	x8, x8, #0x1
  453d84:	cmp	x8, #0x20
  453d88:	b.eq	453da0 <_obstack_memory_used@@Base+0x8bdc>  // b.none
  453d8c:	ldrb	w10, [x2, #8]
  453d90:	and	w10, w10, #0xff
  453d94:	cmp	w10, #0x1e
  453d98:	b.eq	453c6c <_obstack_memory_used@@Base+0x8aa8>  // b.none
  453d9c:	b	453d40 <_obstack_memory_used@@Base+0x8b7c>
  453da0:	mov	w8, #0x7                   	// #7
  453da4:	ldp	x29, x30, [sp, #32]
  453da8:	mov	w0, w8
  453dac:	add	sp, sp, #0x30
  453db0:	ret
  453db4:	add	x9, x12, #0x1
  453db8:	str	x9, [x1, #72]
  453dbc:	ldr	x9, [x0, #8]
  453dc0:	strb	wzr, [x9, w8, uxtw]
  453dc4:	ldrb	w8, [x2, #8]
  453dc8:	cmp	w8, #0x1e
  453dcc:	b.eq	453dec <_obstack_memory_used@@Base+0x8c28>  // b.none
  453dd0:	cmp	w8, #0x1c
  453dd4:	b.eq	453df4 <_obstack_memory_used@@Base+0x8c30>  // b.none
  453dd8:	cmp	w8, #0x1a
  453ddc:	mov	w8, wzr
  453de0:	b.ne	453c0c <_obstack_memory_used@@Base+0x8a48>  // b.any
  453de4:	mov	w9, #0x3                   	// #3
  453de8:	b	453df8 <_obstack_memory_used@@Base+0x8c34>
  453dec:	mov	w9, #0x4                   	// #4
  453df0:	b	453df8 <_obstack_memory_used@@Base+0x8c34>
  453df4:	mov	w9, #0x2                   	// #2
  453df8:	mov	w8, wzr
  453dfc:	str	w9, [x0]
  453e00:	ldp	x29, x30, [sp, #32]
  453e04:	mov	w0, w8
  453e08:	add	sp, sp, #0x30
  453e0c:	ret
  453e10:	tbnz	w5, #0, 453e34 <_obstack_memory_used@@Base+0x8c70>
  453e14:	stp	x2, x0, [sp]
  453e18:	add	x0, sp, #0x10
  453e1c:	mov	x2, x4
  453e20:	bl	453a10 <_obstack_memory_used@@Base+0x884c>
  453e24:	ldrb	w8, [sp, #24]
  453e28:	ldp	x2, x0, [sp]
  453e2c:	cmp	w8, #0x15
  453e30:	b.ne	453e54 <_obstack_memory_used@@Base+0x8c90>  // b.any
  453e34:	str	wzr, [x0]
  453e38:	ldrb	w9, [x2]
  453e3c:	mov	w8, wzr
  453e40:	strb	w9, [x0, #8]
  453e44:	ldp	x29, x30, [sp, #32]
  453e48:	mov	w0, w8
  453e4c:	add	sp, sp, #0x30
  453e50:	ret
  453e54:	mov	w8, #0xb                   	// #11
  453e58:	ldp	x29, x30, [sp, #32]
  453e5c:	mov	w0, w8
  453e60:	add	sp, sp, #0x30
  453e64:	ret
  453e68:	stp	x29, x30, [sp, #-64]!
  453e6c:	stp	x24, x23, [sp, #16]
  453e70:	stp	x22, x21, [sp, #32]
  453e74:	stp	x20, x19, [sp, #48]
  453e78:	mov	x21, x4
  453e7c:	mov	x23, x3
  453e80:	mov	x22, x2
  453e84:	mov	x19, x1
  453e88:	mov	x20, x0
  453e8c:	mov	x29, sp
  453e90:	tbz	w5, #22, 453ec4 <_obstack_memory_used@@Base+0x8d00>
  453e94:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453e98:	add	x1, x1, #0x708
  453e9c:	mov	x0, x21
  453ea0:	bl	404610 <strcmp@plt>
  453ea4:	cbz	w0, 453ebc <_obstack_memory_used@@Base+0x8cf8>
  453ea8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453eac:	add	x1, x1, #0x70e
  453eb0:	mov	x0, x21
  453eb4:	bl	404610 <strcmp@plt>
  453eb8:	cbnz	w0, 453ec4 <_obstack_memory_used@@Base+0x8d00>
  453ebc:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453ec0:	add	x21, x21, #0x714
  453ec4:	ldr	x8, [x23]
  453ec8:	ldr	x9, [x22, #72]
  453ecc:	cmp	x8, x9
  453ed0:	b.eq	4544c8 <_obstack_memory_used@@Base+0x9304>  // b.none
  453ed4:	mov	x0, x21
  453ed8:	bl	403fb0 <wctype@plt>
  453edc:	ldr	x8, [x22, #72]
  453ee0:	ldr	x9, [x22, #24]
  453ee4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453ee8:	add	x1, x1, #0x688
  453eec:	add	x10, x8, #0x1
  453ef0:	str	x10, [x22, #72]
  453ef4:	str	x0, [x9, x8, lsl #3]
  453ef8:	mov	x0, x21
  453efc:	bl	404610 <strcmp@plt>
  453f00:	cbz	w0, 453fe8 <_obstack_memory_used@@Base+0x8e24>
  453f04:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f08:	add	x1, x1, #0x71a
  453f0c:	mov	x0, x21
  453f10:	bl	404610 <strcmp@plt>
  453f14:	cbz	w0, 454030 <_obstack_memory_used@@Base+0x8e6c>
  453f18:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f1c:	add	x1, x1, #0x70e
  453f20:	mov	x0, x21
  453f24:	bl	404610 <strcmp@plt>
  453f28:	cbz	w0, 454078 <_obstack_memory_used@@Base+0x8eb4>
  453f2c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f30:	add	x1, x1, #0x690
  453f34:	mov	x0, x21
  453f38:	bl	404610 <strcmp@plt>
  453f3c:	cbz	w0, 4540c0 <_obstack_memory_used@@Base+0x8efc>
  453f40:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f44:	add	x1, x1, #0x714
  453f48:	mov	x0, x21
  453f4c:	bl	404610 <strcmp@plt>
  453f50:	cbz	w0, 454108 <_obstack_memory_used@@Base+0x8f44>
  453f54:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f58:	add	x1, x1, #0x739
  453f5c:	mov	x0, x21
  453f60:	bl	404610 <strcmp@plt>
  453f64:	cbz	w0, 454150 <_obstack_memory_used@@Base+0x8f8c>
  453f68:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f6c:	add	x1, x1, #0x720
  453f70:	mov	x0, x21
  453f74:	bl	404610 <strcmp@plt>
  453f78:	cbz	w0, 4541b0 <_obstack_memory_used@@Base+0x8fec>
  453f7c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f80:	add	x1, x1, #0x708
  453f84:	mov	x0, x21
  453f88:	bl	404610 <strcmp@plt>
  453f8c:	cbz	w0, 4541fc <_obstack_memory_used@@Base+0x9038>
  453f90:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453f94:	add	x1, x1, #0x726
  453f98:	mov	x0, x21
  453f9c:	bl	404610 <strcmp@plt>
  453fa0:	cbz	w0, 454248 <_obstack_memory_used@@Base+0x9084>
  453fa4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453fa8:	add	x1, x1, #0x72c
  453fac:	mov	x0, x21
  453fb0:	bl	404610 <strcmp@plt>
  453fb4:	cbz	w0, 4542cc <_obstack_memory_used@@Base+0x9108>
  453fb8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453fbc:	add	x1, x1, #0x732
  453fc0:	mov	x0, x21
  453fc4:	bl	404610 <strcmp@plt>
  453fc8:	cbz	w0, 454350 <_obstack_memory_used@@Base+0x918c>
  453fcc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  453fd0:	add	x1, x1, #0x738
  453fd4:	mov	x0, x21
  453fd8:	bl	404610 <strcmp@plt>
  453fdc:	cbz	w0, 4543d4 <_obstack_memory_used@@Base+0x9210>
  453fe0:	mov	w0, #0x4                   	// #4
  453fe4:	b	45419c <_obstack_memory_used@@Base+0x8fd8>
  453fe8:	bl	404640 <__ctype_b_loc@plt>
  453fec:	ldr	x8, [x0]
  453ff0:	mov	x9, xzr
  453ff4:	mov	w10, #0x1                   	// #1
  453ff8:	cbz	x20, 45400c <_obstack_memory_used@@Base+0x8e48>
  453ffc:	b	4542a4 <_obstack_memory_used@@Base+0x90e0>
  454000:	add	x9, x9, #0x1
  454004:	cmp	x9, #0x100
  454008:	b.eq	454198 <_obstack_memory_used@@Base+0x8fd4>  // b.none
  45400c:	ldrh	w11, [x8, x9, lsl #1]
  454010:	tbz	w11, #3, 454000 <_obstack_memory_used@@Base+0x8e3c>
  454014:	ubfx	x11, x9, #6, #2
  454018:	lsl	x11, x11, #3
  45401c:	ldr	x12, [x19, x11]
  454020:	lsl	x13, x10, x9
  454024:	orr	x12, x12, x13
  454028:	str	x12, [x19, x11]
  45402c:	b	454000 <_obstack_memory_used@@Base+0x8e3c>
  454030:	bl	404640 <__ctype_b_loc@plt>
  454034:	ldr	x8, [x0]
  454038:	mov	x9, xzr
  45403c:	mov	w10, #0x1                   	// #1
  454040:	cbz	x20, 454054 <_obstack_memory_used@@Base+0x8e90>
  454044:	b	454328 <_obstack_memory_used@@Base+0x9164>
  454048:	add	x9, x9, #0x1
  45404c:	cmp	x9, #0x100
  454050:	b.eq	454198 <_obstack_memory_used@@Base+0x8fd4>  // b.none
  454054:	ldrh	w11, [x8, x9, lsl #1]
  454058:	tbz	w11, #1, 454048 <_obstack_memory_used@@Base+0x8e84>
  45405c:	ubfx	x11, x9, #6, #2
  454060:	lsl	x11, x11, #3
  454064:	ldr	x12, [x19, x11]
  454068:	lsl	x13, x10, x9
  45406c:	orr	x12, x12, x13
  454070:	str	x12, [x19, x11]
  454074:	b	454048 <_obstack_memory_used@@Base+0x8e84>
  454078:	bl	404640 <__ctype_b_loc@plt>
  45407c:	ldr	x8, [x0]
  454080:	mov	x9, xzr
  454084:	mov	w10, #0x1                   	// #1
  454088:	cbz	x20, 45409c <_obstack_memory_used@@Base+0x8ed8>
  45408c:	b	4543ac <_obstack_memory_used@@Base+0x91e8>
  454090:	add	x9, x9, #0x1
  454094:	cmp	x9, #0x100
  454098:	b.eq	454198 <_obstack_memory_used@@Base+0x8fd4>  // b.none
  45409c:	ldrh	w11, [x8, x9, lsl #1]
  4540a0:	tbz	w11, #9, 454090 <_obstack_memory_used@@Base+0x8ecc>
  4540a4:	ubfx	x11, x9, #6, #2
  4540a8:	lsl	x11, x11, #3
  4540ac:	ldr	x12, [x19, x11]
  4540b0:	lsl	x13, x10, x9
  4540b4:	orr	x12, x12, x13
  4540b8:	str	x12, [x19, x11]
  4540bc:	b	454090 <_obstack_memory_used@@Base+0x8ecc>
  4540c0:	bl	404640 <__ctype_b_loc@plt>
  4540c4:	ldr	x8, [x0]
  4540c8:	mov	x9, xzr
  4540cc:	mov	w10, #0x1                   	// #1
  4540d0:	cbz	x20, 4540e4 <_obstack_memory_used@@Base+0x8f20>
  4540d4:	b	454430 <_obstack_memory_used@@Base+0x926c>
  4540d8:	add	x9, x9, #0x1
  4540dc:	cmp	x9, #0x100
  4540e0:	b.eq	454198 <_obstack_memory_used@@Base+0x8fd4>  // b.none
  4540e4:	ldrh	w11, [x8, x9, lsl #1]
  4540e8:	tbz	w11, #13, 4540d8 <_obstack_memory_used@@Base+0x8f14>
  4540ec:	ubfx	x11, x9, #6, #2
  4540f0:	lsl	x11, x11, #3
  4540f4:	ldr	x12, [x19, x11]
  4540f8:	lsl	x13, x10, x9
  4540fc:	orr	x12, x12, x13
  454100:	str	x12, [x19, x11]
  454104:	b	4540d8 <_obstack_memory_used@@Base+0x8f14>
  454108:	bl	404640 <__ctype_b_loc@plt>
  45410c:	ldr	x8, [x0]
  454110:	mov	x9, xzr
  454114:	mov	w10, #0x1                   	// #1
  454118:	cbz	x20, 45412c <_obstack_memory_used@@Base+0x8f68>
  45411c:	b	454468 <_obstack_memory_used@@Base+0x92a4>
  454120:	add	x9, x9, #0x1
  454124:	cmp	x9, #0x100
  454128:	b.eq	454198 <_obstack_memory_used@@Base+0x8fd4>  // b.none
  45412c:	ldrh	w11, [x8, x9, lsl #1]
  454130:	tbz	w11, #10, 454120 <_obstack_memory_used@@Base+0x8f5c>
  454134:	ubfx	x11, x9, #6, #2
  454138:	lsl	x11, x11, #3
  45413c:	ldr	x12, [x19, x11]
  454140:	lsl	x13, x10, x9
  454144:	orr	x12, x12, x13
  454148:	str	x12, [x19, x11]
  45414c:	b	454120 <_obstack_memory_used@@Base+0x8f5c>
  454150:	bl	404640 <__ctype_b_loc@plt>
  454154:	ldr	x8, [x0]
  454158:	mov	x9, xzr
  45415c:	mov	w10, #0x1                   	// #1
  454160:	cbz	x20, 454174 <_obstack_memory_used@@Base+0x8fb0>
  454164:	b	4544a0 <_obstack_memory_used@@Base+0x92dc>
  454168:	add	x9, x9, #0x1
  45416c:	cmp	x9, #0x100
  454170:	b.eq	454198 <_obstack_memory_used@@Base+0x8fd4>  // b.none
  454174:	ldrh	w11, [x8, x9, lsl #1]
  454178:	tbz	w11, #11, 454168 <_obstack_memory_used@@Base+0x8fa4>
  45417c:	ubfx	x11, x9, #6, #2
  454180:	lsl	x11, x11, #3
  454184:	ldr	x12, [x19, x11]
  454188:	lsl	x13, x10, x9
  45418c:	orr	x12, x12, x13
  454190:	str	x12, [x19, x11]
  454194:	b	454168 <_obstack_memory_used@@Base+0x8fa4>
  454198:	mov	w0, wzr
  45419c:	ldp	x20, x19, [sp, #48]
  4541a0:	ldp	x22, x21, [sp, #32]
  4541a4:	ldp	x24, x23, [sp, #16]
  4541a8:	ldp	x29, x30, [sp], #64
  4541ac:	ret
  4541b0:	bl	404640 <__ctype_b_loc@plt>
  4541b4:	ldr	x8, [x0]
  4541b8:	mov	x9, xzr
  4541bc:	mov	w10, #0x1                   	// #1
  4541c0:	cbz	x20, 4541d8 <_obstack_memory_used@@Base+0x9014>
  4541c4:	b	4544fc <_obstack_memory_used@@Base+0x9338>
  4541c8:	add	x9, x9, #0x1
  4541cc:	cmp	x9, #0x100
  4541d0:	mov	w0, wzr
  4541d4:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4541d8:	ldrh	w11, [x8, x9, lsl #1]
  4541dc:	tbz	w11, #14, 4541c8 <_obstack_memory_used@@Base+0x9004>
  4541e0:	ubfx	x11, x9, #6, #2
  4541e4:	lsl	x11, x11, #3
  4541e8:	ldr	x12, [x19, x11]
  4541ec:	lsl	x13, x10, x9
  4541f0:	orr	x12, x12, x13
  4541f4:	str	x12, [x19, x11]
  4541f8:	b	4541c8 <_obstack_memory_used@@Base+0x9004>
  4541fc:	bl	404640 <__ctype_b_loc@plt>
  454200:	ldr	x8, [x0]
  454204:	mov	x9, xzr
  454208:	mov	w10, #0x1                   	// #1
  45420c:	cbz	x20, 454224 <_obstack_memory_used@@Base+0x9060>
  454210:	b	454534 <_obstack_memory_used@@Base+0x9370>
  454214:	add	x9, x9, #0x1
  454218:	cmp	x9, #0x100
  45421c:	mov	w0, wzr
  454220:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454224:	ldrh	w11, [x8, x9, lsl #1]
  454228:	tbz	w11, #8, 454214 <_obstack_memory_used@@Base+0x9050>
  45422c:	ubfx	x11, x9, #6, #2
  454230:	lsl	x11, x11, #3
  454234:	ldr	x12, [x19, x11]
  454238:	lsl	x13, x10, x9
  45423c:	orr	x12, x12, x13
  454240:	str	x12, [x19, x11]
  454244:	b	454214 <_obstack_memory_used@@Base+0x9050>
  454248:	bl	404640 <__ctype_b_loc@plt>
  45424c:	ldr	x8, [x0]
  454250:	mov	x9, xzr
  454254:	mov	w10, #0x1                   	// #1
  454258:	cbz	x20, 454270 <_obstack_memory_used@@Base+0x90ac>
  45425c:	b	45456c <_obstack_memory_used@@Base+0x93a8>
  454260:	add	x9, x9, #0x1
  454264:	cmp	x9, #0x100
  454268:	mov	w0, wzr
  45426c:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454270:	ldrh	w11, [x8, x9, lsl #1]
  454274:	tbz	w11, #0, 454260 <_obstack_memory_used@@Base+0x909c>
  454278:	ubfx	x11, x9, #6, #2
  45427c:	lsl	x11, x11, #3
  454280:	ldr	x12, [x19, x11]
  454284:	lsl	x13, x10, x9
  454288:	orr	x12, x12, x13
  45428c:	str	x12, [x19, x11]
  454290:	b	454260 <_obstack_memory_used@@Base+0x909c>
  454294:	add	x9, x9, #0x1
  454298:	cmp	x9, #0x100
  45429c:	mov	w0, wzr
  4542a0:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4542a4:	ldrh	w11, [x8, x9, lsl #1]
  4542a8:	tbz	w11, #3, 454294 <_obstack_memory_used@@Base+0x90d0>
  4542ac:	ldrb	w11, [x20, x9]
  4542b0:	lsr	x12, x11, #3
  4542b4:	and	x12, x12, #0x18
  4542b8:	ldr	x13, [x19, x12]
  4542bc:	lsl	x11, x10, x11
  4542c0:	orr	x11, x11, x13
  4542c4:	str	x11, [x19, x12]
  4542c8:	b	454294 <_obstack_memory_used@@Base+0x90d0>
  4542cc:	bl	404640 <__ctype_b_loc@plt>
  4542d0:	ldr	x8, [x0]
  4542d4:	mov	x9, xzr
  4542d8:	mov	w10, #0x1                   	// #1
  4542dc:	cbz	x20, 4542f4 <_obstack_memory_used@@Base+0x9130>
  4542e0:	b	4545a4 <_obstack_memory_used@@Base+0x93e0>
  4542e4:	add	x9, x9, #0x1
  4542e8:	cmp	x9, #0x100
  4542ec:	mov	w0, wzr
  4542f0:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4542f4:	ldrsh	w11, [x8, x9, lsl #1]
  4542f8:	tbz	w11, #31, 4542e4 <_obstack_memory_used@@Base+0x9120>
  4542fc:	ubfx	x11, x9, #6, #2
  454300:	lsl	x11, x11, #3
  454304:	ldr	x12, [x19, x11]
  454308:	lsl	x13, x10, x9
  45430c:	orr	x12, x12, x13
  454310:	str	x12, [x19, x11]
  454314:	b	4542e4 <_obstack_memory_used@@Base+0x9120>
  454318:	add	x9, x9, #0x1
  45431c:	cmp	x9, #0x100
  454320:	mov	w0, wzr
  454324:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454328:	ldrh	w11, [x8, x9, lsl #1]
  45432c:	tbz	w11, #1, 454318 <_obstack_memory_used@@Base+0x9154>
  454330:	ldrb	w11, [x20, x9]
  454334:	lsr	x12, x11, #3
  454338:	and	x12, x12, #0x18
  45433c:	ldr	x13, [x19, x12]
  454340:	lsl	x11, x10, x11
  454344:	orr	x11, x11, x13
  454348:	str	x11, [x19, x12]
  45434c:	b	454318 <_obstack_memory_used@@Base+0x9154>
  454350:	bl	404640 <__ctype_b_loc@plt>
  454354:	ldr	x8, [x0]
  454358:	mov	x9, xzr
  45435c:	mov	w10, #0x1                   	// #1
  454360:	cbz	x20, 454378 <_obstack_memory_used@@Base+0x91b4>
  454364:	b	4545dc <_obstack_memory_used@@Base+0x9418>
  454368:	add	x9, x9, #0x1
  45436c:	cmp	x9, #0x100
  454370:	mov	w0, wzr
  454374:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454378:	ldrh	w11, [x8, x9, lsl #1]
  45437c:	tbz	w11, #2, 454368 <_obstack_memory_used@@Base+0x91a4>
  454380:	ubfx	x11, x9, #6, #2
  454384:	lsl	x11, x11, #3
  454388:	ldr	x12, [x19, x11]
  45438c:	lsl	x13, x10, x9
  454390:	orr	x12, x12, x13
  454394:	str	x12, [x19, x11]
  454398:	b	454368 <_obstack_memory_used@@Base+0x91a4>
  45439c:	add	x9, x9, #0x1
  4543a0:	cmp	x9, #0x100
  4543a4:	mov	w0, wzr
  4543a8:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4543ac:	ldrh	w11, [x8, x9, lsl #1]
  4543b0:	tbz	w11, #9, 45439c <_obstack_memory_used@@Base+0x91d8>
  4543b4:	ldrb	w11, [x20, x9]
  4543b8:	lsr	x12, x11, #3
  4543bc:	and	x12, x12, #0x18
  4543c0:	ldr	x13, [x19, x12]
  4543c4:	lsl	x11, x10, x11
  4543c8:	orr	x11, x11, x13
  4543cc:	str	x11, [x19, x12]
  4543d0:	b	45439c <_obstack_memory_used@@Base+0x91d8>
  4543d4:	bl	404640 <__ctype_b_loc@plt>
  4543d8:	ldr	x8, [x0]
  4543dc:	mov	x9, xzr
  4543e0:	mov	w10, #0x1                   	// #1
  4543e4:	cbz	x20, 4543fc <_obstack_memory_used@@Base+0x9238>
  4543e8:	b	454614 <_obstack_memory_used@@Base+0x9450>
  4543ec:	add	x9, x9, #0x1
  4543f0:	cmp	x9, #0x100
  4543f4:	mov	w0, wzr
  4543f8:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4543fc:	ldrh	w11, [x8, x9, lsl #1]
  454400:	tbz	w11, #12, 4543ec <_obstack_memory_used@@Base+0x9228>
  454404:	ubfx	x11, x9, #6, #2
  454408:	lsl	x11, x11, #3
  45440c:	ldr	x12, [x19, x11]
  454410:	lsl	x13, x10, x9
  454414:	orr	x12, x12, x13
  454418:	str	x12, [x19, x11]
  45441c:	b	4543ec <_obstack_memory_used@@Base+0x9228>
  454420:	add	x9, x9, #0x1
  454424:	cmp	x9, #0x100
  454428:	mov	w0, wzr
  45442c:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454430:	ldrh	w11, [x8, x9, lsl #1]
  454434:	tbz	w11, #13, 454420 <_obstack_memory_used@@Base+0x925c>
  454438:	ldrb	w11, [x20, x9]
  45443c:	lsr	x12, x11, #3
  454440:	and	x12, x12, #0x18
  454444:	ldr	x13, [x19, x12]
  454448:	lsl	x11, x10, x11
  45444c:	orr	x11, x11, x13
  454450:	str	x11, [x19, x12]
  454454:	b	454420 <_obstack_memory_used@@Base+0x925c>
  454458:	add	x9, x9, #0x1
  45445c:	cmp	x9, #0x100
  454460:	mov	w0, wzr
  454464:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454468:	ldrh	w11, [x8, x9, lsl #1]
  45446c:	tbz	w11, #10, 454458 <_obstack_memory_used@@Base+0x9294>
  454470:	ldrb	w11, [x20, x9]
  454474:	lsr	x12, x11, #3
  454478:	and	x12, x12, #0x18
  45447c:	ldr	x13, [x19, x12]
  454480:	lsl	x11, x10, x11
  454484:	orr	x11, x11, x13
  454488:	str	x11, [x19, x12]
  45448c:	b	454458 <_obstack_memory_used@@Base+0x9294>
  454490:	add	x9, x9, #0x1
  454494:	cmp	x9, #0x100
  454498:	mov	w0, wzr
  45449c:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4544a0:	ldrh	w11, [x8, x9, lsl #1]
  4544a4:	tbz	w11, #11, 454490 <_obstack_memory_used@@Base+0x92cc>
  4544a8:	ldrb	w11, [x20, x9]
  4544ac:	lsr	x12, x11, #3
  4544b0:	and	x12, x12, #0x18
  4544b4:	ldr	x13, [x19, x12]
  4544b8:	lsl	x11, x10, x11
  4544bc:	orr	x11, x11, x13
  4544c0:	str	x11, [x19, x12]
  4544c4:	b	454490 <_obstack_memory_used@@Base+0x92cc>
  4544c8:	ldr	x0, [x22, #24]
  4544cc:	mov	w24, #0x1                   	// #1
  4544d0:	bfi	x24, x8, #1, #63
  4544d4:	lsl	x1, x24, #3
  4544d8:	bl	404450 <realloc@plt>
  4544dc:	cbz	x0, 45463c <_obstack_memory_used@@Base+0x9478>
  4544e0:	str	x0, [x22, #24]
  4544e4:	str	x24, [x23]
  4544e8:	b	453ed4 <_obstack_memory_used@@Base+0x8d10>
  4544ec:	add	x9, x9, #0x1
  4544f0:	cmp	x9, #0x100
  4544f4:	mov	w0, wzr
  4544f8:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4544fc:	ldrh	w11, [x8, x9, lsl #1]
  454500:	tbz	w11, #14, 4544ec <_obstack_memory_used@@Base+0x9328>
  454504:	ldrb	w11, [x20, x9]
  454508:	lsr	x12, x11, #3
  45450c:	and	x12, x12, #0x18
  454510:	ldr	x13, [x19, x12]
  454514:	lsl	x11, x10, x11
  454518:	orr	x11, x11, x13
  45451c:	str	x11, [x19, x12]
  454520:	b	4544ec <_obstack_memory_used@@Base+0x9328>
  454524:	add	x9, x9, #0x1
  454528:	cmp	x9, #0x100
  45452c:	mov	w0, wzr
  454530:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454534:	ldrh	w11, [x8, x9, lsl #1]
  454538:	tbz	w11, #8, 454524 <_obstack_memory_used@@Base+0x9360>
  45453c:	ldrb	w11, [x20, x9]
  454540:	lsr	x12, x11, #3
  454544:	and	x12, x12, #0x18
  454548:	ldr	x13, [x19, x12]
  45454c:	lsl	x11, x10, x11
  454550:	orr	x11, x11, x13
  454554:	str	x11, [x19, x12]
  454558:	b	454524 <_obstack_memory_used@@Base+0x9360>
  45455c:	add	x9, x9, #0x1
  454560:	cmp	x9, #0x100
  454564:	mov	w0, wzr
  454568:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  45456c:	ldrh	w11, [x8, x9, lsl #1]
  454570:	tbz	w11, #0, 45455c <_obstack_memory_used@@Base+0x9398>
  454574:	ldrb	w11, [x20, x9]
  454578:	lsr	x12, x11, #3
  45457c:	and	x12, x12, #0x18
  454580:	ldr	x13, [x19, x12]
  454584:	lsl	x11, x10, x11
  454588:	orr	x11, x11, x13
  45458c:	str	x11, [x19, x12]
  454590:	b	45455c <_obstack_memory_used@@Base+0x9398>
  454594:	add	x9, x9, #0x1
  454598:	cmp	x9, #0x100
  45459c:	mov	w0, wzr
  4545a0:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4545a4:	ldrsh	w11, [x8, x9, lsl #1]
  4545a8:	tbz	w11, #31, 454594 <_obstack_memory_used@@Base+0x93d0>
  4545ac:	ldrb	w11, [x20, x9]
  4545b0:	lsr	x12, x11, #3
  4545b4:	and	x12, x12, #0x18
  4545b8:	ldr	x13, [x19, x12]
  4545bc:	lsl	x11, x10, x11
  4545c0:	orr	x11, x11, x13
  4545c4:	str	x11, [x19, x12]
  4545c8:	b	454594 <_obstack_memory_used@@Base+0x93d0>
  4545cc:	add	x9, x9, #0x1
  4545d0:	cmp	x9, #0x100
  4545d4:	mov	w0, wzr
  4545d8:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  4545dc:	ldrh	w11, [x8, x9, lsl #1]
  4545e0:	tbz	w11, #2, 4545cc <_obstack_memory_used@@Base+0x9408>
  4545e4:	ldrb	w11, [x20, x9]
  4545e8:	lsr	x12, x11, #3
  4545ec:	and	x12, x12, #0x18
  4545f0:	ldr	x13, [x19, x12]
  4545f4:	lsl	x11, x10, x11
  4545f8:	orr	x11, x11, x13
  4545fc:	str	x11, [x19, x12]
  454600:	b	4545cc <_obstack_memory_used@@Base+0x9408>
  454604:	add	x9, x9, #0x1
  454608:	cmp	x9, #0x100
  45460c:	mov	w0, wzr
  454610:	b.eq	45419c <_obstack_memory_used@@Base+0x8fd8>  // b.none
  454614:	ldrh	w11, [x8, x9, lsl #1]
  454618:	tbz	w11, #12, 454604 <_obstack_memory_used@@Base+0x9440>
  45461c:	ldrb	w11, [x20, x9]
  454620:	lsr	x12, x11, #3
  454624:	and	x12, x12, #0x18
  454628:	ldr	x13, [x19, x12]
  45462c:	lsl	x11, x10, x11
  454630:	orr	x11, x11, x13
  454634:	str	x11, [x19, x12]
  454638:	b	454604 <_obstack_memory_used@@Base+0x9440>
  45463c:	mov	w0, #0xc                   	// #12
  454640:	b	45419c <_obstack_memory_used@@Base+0x8fd8>
  454644:	stp	x29, x30, [sp, #-64]!
  454648:	stp	x22, x21, [sp, #32]
  45464c:	stp	x20, x19, [sp, #48]
  454650:	ldr	w9, [x1, #48]
  454654:	ldr	x19, [x1, #56]
  454658:	str	x23, [sp, #16]
  45465c:	mov	x29, sp
  454660:	and	w8, w9, #0xff
  454664:	sub	w10, w8, #0x2
  454668:	cmp	w10, #0xe
  45466c:	mov	x8, x0
  454670:	b.hi	4547a8 <_obstack_memory_used@@Base+0x95e4>  // b.pmore
  454674:	adrp	x11, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454678:	add	x11, x11, #0x42f
  45467c:	adr	x12, 454690 <_obstack_memory_used@@Base+0x94cc>
  454680:	ldrb	w13, [x11, x10]
  454684:	add	x12, x12, x13, lsl #2
  454688:	mov	w0, wzr
  45468c:	br	x12
  454690:	ldr	x9, [x1, #32]
  454694:	ldr	x8, [x8, #40]
  454698:	mov	w10, #0x18                  	// #24
  45469c:	ldr	x20, [x9, #56]
  4546a0:	madd	x19, x19, x10, x8
  4546a4:	mov	w8, #0x1                   	// #1
  4546a8:	dup	v0.2d, x8
  4546ac:	mov	w0, #0x8                   	// #8
  4546b0:	str	q0, [x19]
  4546b4:	bl	404210 <malloc@plt>
  4546b8:	str	x0, [x19, #16]
  4546bc:	cbz	x0, 4547f8 <_obstack_memory_used@@Base+0x9634>
  4546c0:	mov	x8, x0
  4546c4:	mov	w0, wzr
  4546c8:	str	x20, [x8]
  4546cc:	b	4547e4 <_obstack_memory_used@@Base+0x9620>
  4546d0:	ldrb	w9, [x8, #176]
  4546d4:	add	x10, x1, #0x20
  4546d8:	orr	w9, w9, #0x1
  4546dc:	strb	w9, [x8, #176]
  4546e0:	ldp	x9, x11, [x1, #8]
  4546e4:	add	x12, x9, #0x18
  4546e8:	cmp	x9, #0x0
  4546ec:	csel	x9, x10, x12, eq  // eq = none
  4546f0:	ldr	x9, [x9]
  4546f4:	cmp	x11, #0x0
  4546f8:	ldr	x20, [x9, #56]
  4546fc:	add	x9, x11, #0x18
  454700:	csel	x9, x10, x9, eq  // eq = none
  454704:	tbnz	x20, #63, 454804 <_obstack_memory_used@@Base+0x9640>
  454708:	ldr	x9, [x9]
  45470c:	ldr	x21, [x9, #56]
  454710:	tbnz	x21, #63, 454824 <_obstack_memory_used@@Base+0x9660>
  454714:	ldr	x22, [x8, #40]
  454718:	mov	w8, #0x18                  	// #24
  45471c:	mov	w0, #0x10                  	// #16
  454720:	madd	x23, x19, x8, x22
  454724:	mov	w8, #0x2                   	// #2
  454728:	str	x8, [x23]
  45472c:	bl	404210 <malloc@plt>
  454730:	str	x0, [x23, #16]
  454734:	cbz	x0, 4547fc <_obstack_memory_used@@Base+0x9638>
  454738:	mov	w9, #0x18                  	// #24
  45473c:	madd	x9, x19, x9, x22
  454740:	mov	x8, x0
  454744:	cmp	x20, x21
  454748:	add	x9, x9, #0x8
  45474c:	b.ne	4547c4 <_obstack_memory_used@@Base+0x9600>  // b.any
  454750:	mov	w10, #0x1                   	// #1
  454754:	mov	w0, wzr
  454758:	str	x10, [x9]
  45475c:	str	x20, [x8]
  454760:	b	4547e4 <_obstack_memory_used@@Base+0x9620>
  454764:	ldr	x9, [x1, #32]
  454768:	ldr	x20, [x9, #56]
  45476c:	ldr	x9, [x8, #24]
  454770:	str	x20, [x9, x19, lsl #3]
  454774:	ldrb	w9, [x1, #48]
  454778:	cmp	w9, #0x4
  45477c:	b.ne	4547a0 <_obstack_memory_used@@Base+0x95dc>  // b.any
  454780:	ldr	x8, [x8, #40]
  454784:	mov	w9, #0x18                  	// #24
  454788:	mov	w10, #0x1                   	// #1
  45478c:	dup	v0.2d, x10
  454790:	madd	x19, x19, x9, x8
  454794:	b	4546ac <_obstack_memory_used@@Base+0x94e8>
  454798:	ldr	x8, [x1, #32]
  45479c:	cbnz	x8, 454844 <_obstack_memory_used@@Base+0x9680>
  4547a0:	mov	w0, wzr
  4547a4:	b	4547e4 <_obstack_memory_used@@Base+0x9620>
  4547a8:	tbnz	w9, #3, 454864 <_obstack_memory_used@@Base+0x96a0>
  4547ac:	ldr	x9, [x1, #32]
  4547b0:	ldr	x8, [x8, #24]
  4547b4:	mov	w0, wzr
  4547b8:	ldr	x9, [x9, #56]
  4547bc:	str	x9, [x8, x19, lsl #3]
  4547c0:	b	4547e4 <_obstack_memory_used@@Base+0x9620>
  4547c4:	mov	w10, #0x2                   	// #2
  4547c8:	cmp	x20, x21
  4547cc:	mov	w0, wzr
  4547d0:	str	x10, [x9]
  4547d4:	b.ge	4547e0 <_obstack_memory_used@@Base+0x961c>  // b.tcont
  4547d8:	stp	x20, x21, [x8]
  4547dc:	b	4547e4 <_obstack_memory_used@@Base+0x9620>
  4547e0:	stp	x21, x20, [x8]
  4547e4:	ldp	x20, x19, [sp, #48]
  4547e8:	ldp	x22, x21, [sp, #32]
  4547ec:	ldr	x23, [sp, #16]
  4547f0:	ldp	x29, x30, [sp], #64
  4547f4:	ret
  4547f8:	stp	xzr, xzr, [x19]
  4547fc:	mov	w0, #0xc                   	// #12
  454800:	b	4547e4 <_obstack_memory_used@@Base+0x9620>
  454804:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454808:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45480c:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454810:	add	x0, x0, #0x785
  454814:	add	x1, x1, #0x696
  454818:	add	x3, x3, #0x752
  45481c:	mov	w2, #0x5af                 	// #1455
  454820:	bl	4049b0 <__assert_fail@plt>
  454824:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454828:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45482c:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454830:	add	x0, x0, #0x78f
  454834:	add	x1, x1, #0x696
  454838:	add	x3, x3, #0x752
  45483c:	mov	w2, #0x5b0                 	// #1456
  454840:	bl	4049b0 <__assert_fail@plt>
  454844:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454848:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45484c:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454850:	add	x0, x0, #0x73f
  454854:	add	x1, x1, #0x696
  454858:	add	x3, x3, #0x752
  45485c:	mov	w2, #0x59f                 	// #1439
  454860:	bl	4049b0 <__assert_fail@plt>
  454864:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454868:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45486c:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  454870:	add	x0, x0, #0x79a
  454874:	add	x1, x1, #0x696
  454878:	add	x3, x3, #0x752
  45487c:	mov	w2, #0x5c2                 	// #1474
  454880:	bl	4049b0 <__assert_fail@plt>
  454884:	stp	x29, x30, [sp, #-80]!
  454888:	stp	x24, x23, [sp, #32]
  45488c:	stp	x22, x21, [sp, #48]
  454890:	stp	x20, x19, [sp, #64]
  454894:	ldr	x22, [x3, #8]
  454898:	mov	x19, x3
  45489c:	mov	x21, x1
  4548a0:	mov	x20, x0
  4548a4:	str	x25, [sp, #16]
  4548a8:	mov	x29, sp
  4548ac:	tbz	w2, #4, 4548cc <_obstack_memory_used@@Base+0x9708>
  4548b0:	cbz	x22, 4548cc <_obstack_memory_used@@Base+0x9708>
  4548b4:	ldr	x8, [x19, #40]
  4548b8:	cmp	x8, #0x3f
  4548bc:	b.gt	454a2c <_obstack_memory_used@@Base+0x9868>
  4548c0:	ldr	x9, [x21, #160]
  4548c4:	lsr	x8, x9, x8
  4548c8:	tbz	w8, #0, 454a2c <_obstack_memory_used@@Base+0x9868>
  4548cc:	ldr	w8, [x21, #128]
  4548d0:	cmp	w8, #0xf
  4548d4:	b.eq	454a48 <_obstack_memory_used@@Base+0x9884>  // b.none
  4548d8:	ldr	x0, [x21, #112]
  4548dc:	add	w9, w8, #0x1
  4548e0:	sxtw	x8, w8
  4548e4:	add	x23, x0, x8, lsl #6
  4548e8:	mov	w10, #0x8                   	// #8
  4548ec:	mov	x11, #0xffffffffffffffff    	// #-1
  4548f0:	str	w9, [x21, #128]
  4548f4:	str	xzr, [x23, #8]!
  4548f8:	stp	xzr, xzr, [x23, #16]
  4548fc:	str	xzr, [x23, #8]
  454900:	str	w10, [x23, #48]
  454904:	str	xzr, [x23, #32]
  454908:	str	x11, [x23, #56]
  45490c:	ldr	w8, [x21, #128]
  454910:	cmp	w8, #0xf
  454914:	b.eq	454a94 <_obstack_memory_used@@Base+0x98d0>  // b.none
  454918:	ldr	x0, [x21, #112]
  45491c:	add	w9, w8, #0x1
  454920:	sxtw	x8, w8
  454924:	add	x24, x0, x8, lsl #6
  454928:	mov	w10, #0x9                   	// #9
  45492c:	mov	x11, #0xffffffffffffffff    	// #-1
  454930:	str	w9, [x21, #128]
  454934:	str	xzr, [x24, #8]!
  454938:	stp	xzr, xzr, [x24, #16]
  45493c:	str	xzr, [x24, #8]
  454940:	str	w10, [x24, #48]
  454944:	str	xzr, [x24, #32]
  454948:	str	x11, [x24, #56]
  45494c:	mov	x25, x24
  454950:	cbz	x22, 45499c <_obstack_memory_used@@Base+0x97d8>
  454954:	ldr	w8, [x21, #128]
  454958:	cmp	w8, #0xf
  45495c:	b.eq	454a6c <_obstack_memory_used@@Base+0x98a8>  // b.none
  454960:	ldr	x0, [x21, #112]
  454964:	add	w9, w8, #0x1
  454968:	sxtw	x8, w8
  45496c:	add	x25, x0, x8, lsl #6
  454970:	mov	w10, #0x10                  	// #16
  454974:	mov	x11, #0xffffffffffffffff    	// #-1
  454978:	str	w9, [x21, #128]
  45497c:	str	xzr, [x25, #8]!
  454980:	stp	x22, x24, [x25, #8]
  454984:	str	w10, [x25, #48]
  454988:	stp	xzr, xzr, [x25, #24]
  45498c:	str	x11, [x25, #56]
  454990:	str	x25, [x22]
  454994:	cbz	x24, 45499c <_obstack_memory_used@@Base+0x97d8>
  454998:	str	x25, [x24]
  45499c:	ldr	w8, [x21, #128]
  4549a0:	cmp	w8, #0xf
  4549a4:	b.eq	454acc <_obstack_memory_used@@Base+0x9908>  // b.none
  4549a8:	ldr	x0, [x21, #112]
  4549ac:	add	w9, w8, #0x1
  4549b0:	sxtw	x8, w8
  4549b4:	add	x22, x0, x8, lsl #6
  4549b8:	mov	w10, #0x10                  	// #16
  4549bc:	mov	x11, #0xffffffffffffffff    	// #-1
  4549c0:	str	w9, [x21, #128]
  4549c4:	str	xzr, [x22, #8]!
  4549c8:	stp	x23, x25, [x22, #8]
  4549cc:	str	w10, [x22, #48]
  4549d0:	stp	xzr, xzr, [x22, #24]
  4549d4:	str	x11, [x22, #56]
  4549d8:	cbz	x23, 4549e0 <_obstack_memory_used@@Base+0x981c>
  4549dc:	str	x22, [x23]
  4549e0:	cbz	x25, 4549e8 <_obstack_memory_used@@Base+0x9824>
  4549e4:	str	x22, [x25]
  4549e8:	cbz	x24, 454af8 <_obstack_memory_used@@Base+0x9934>
  4549ec:	cbz	x23, 454af8 <_obstack_memory_used@@Base+0x9934>
  4549f0:	cbz	x25, 454af8 <_obstack_memory_used@@Base+0x9934>
  4549f4:	cbz	x22, 454af8 <_obstack_memory_used@@Base+0x9934>
  4549f8:	ldr	x8, [x19, #40]
  4549fc:	str	x8, [x24, #40]
  454a00:	str	x8, [x23, #40]
  454a04:	ldr	w8, [x19, #48]
  454a08:	ldr	w9, [x24, #48]
  454a0c:	and	w8, w8, #0x80000
  454a10:	and	w9, w9, #0xfff7ffff
  454a14:	orr	w9, w9, w8
  454a18:	str	w9, [x24, #48]
  454a1c:	ldr	w9, [x23, #48]
  454a20:	and	w9, w9, #0xfff7ffff
  454a24:	orr	w8, w9, w8
  454a28:	str	w8, [x23, #48]
  454a2c:	mov	x0, x22
  454a30:	ldp	x20, x19, [sp, #64]
  454a34:	ldp	x22, x21, [sp, #48]
  454a38:	ldp	x24, x23, [sp, #32]
  454a3c:	ldr	x25, [sp, #16]
  454a40:	ldp	x29, x30, [sp], #80
  454a44:	ret
  454a48:	mov	w0, #0x3c8                 	// #968
  454a4c:	bl	404210 <malloc@plt>
  454a50:	cbz	x0, 454a90 <_obstack_memory_used@@Base+0x98cc>
  454a54:	ldr	x9, [x21, #112]
  454a58:	mov	w8, wzr
  454a5c:	str	x9, [x0]
  454a60:	str	x0, [x21, #112]
  454a64:	str	wzr, [x21, #128]
  454a68:	b	4548dc <_obstack_memory_used@@Base+0x9718>
  454a6c:	mov	w0, #0x3c8                 	// #968
  454a70:	bl	404210 <malloc@plt>
  454a74:	cbz	x0, 454ac8 <_obstack_memory_used@@Base+0x9904>
  454a78:	ldr	x9, [x21, #112]
  454a7c:	mov	w8, wzr
  454a80:	str	x9, [x0]
  454a84:	str	x0, [x21, #112]
  454a88:	str	wzr, [x21, #128]
  454a8c:	b	454964 <_obstack_memory_used@@Base+0x97a0>
  454a90:	mov	x23, xzr
  454a94:	mov	w0, #0x3c8                 	// #968
  454a98:	bl	404210 <malloc@plt>
  454a9c:	cbz	x0, 454ab8 <_obstack_memory_used@@Base+0x98f4>
  454aa0:	ldr	x9, [x21, #112]
  454aa4:	mov	w8, wzr
  454aa8:	str	x9, [x0]
  454aac:	str	x0, [x21, #112]
  454ab0:	str	wzr, [x21, #128]
  454ab4:	b	45491c <_obstack_memory_used@@Base+0x9758>
  454ab8:	mov	x24, xzr
  454abc:	mov	x25, x24
  454ac0:	cbnz	x22, 454954 <_obstack_memory_used@@Base+0x9790>
  454ac4:	b	45499c <_obstack_memory_used@@Base+0x97d8>
  454ac8:	mov	x25, xzr
  454acc:	mov	w0, #0x3c8                 	// #968
  454ad0:	bl	404210 <malloc@plt>
  454ad4:	cbz	x0, 454af0 <_obstack_memory_used@@Base+0x992c>
  454ad8:	ldr	x9, [x21, #112]
  454adc:	mov	w8, wzr
  454ae0:	str	x9, [x0]
  454ae4:	str	x0, [x21, #112]
  454ae8:	str	wzr, [x21, #128]
  454aec:	b	4549ac <_obstack_memory_used@@Base+0x97e8>
  454af0:	mov	x22, xzr
  454af4:	cbnz	x24, 4549ec <_obstack_memory_used@@Base+0x9828>
  454af8:	mov	w8, #0xc                   	// #12
  454afc:	mov	x22, xzr
  454b00:	str	w8, [x20]
  454b04:	b	454a2c <_obstack_memory_used@@Base+0x9868>
  454b08:	stp	x29, x30, [sp, #-80]!
  454b0c:	stp	x26, x25, [sp, #16]
  454b10:	stp	x24, x23, [sp, #32]
  454b14:	stp	x22, x21, [sp, #48]
  454b18:	stp	x20, x19, [sp, #64]
  454b1c:	ldp	x24, x8, [x0, #8]
  454b20:	mov	x20, x2
  454b24:	mov	x19, x0
  454b28:	mov	x21, x1
  454b2c:	cmp	x8, x24
  454b30:	mov	x29, sp
  454b34:	b.cs	454c00 <_obstack_memory_used@@Base+0x9a3c>  // b.hs, b.nlast
  454b38:	ldr	x9, [x19]
  454b3c:	add	x8, x9, x8, lsl #4
  454b40:	stp	x21, x20, [x8]
  454b44:	ldr	x8, [x19]
  454b48:	ldr	x9, [x19, #16]
  454b4c:	add	x9, x8, x9, lsl #4
  454b50:	ldr	w10, [x9, #8]
  454b54:	and	w8, w20, #0xff
  454b58:	cmp	w8, #0x5
  454b5c:	and	w10, w10, #0xfffc00ff
  454b60:	str	w10, [x9, #8]
  454b64:	b.ne	454b7c <_obstack_memory_used@@Base+0x99b8>  // b.any
  454b68:	ldr	w9, [x19, #180]
  454b6c:	cmp	w9, #0x1
  454b70:	b.le	454b7c <_obstack_memory_used@@Base+0x99b8>
  454b74:	mov	w8, #0x100000              	// #1048576
  454b78:	b	454b88 <_obstack_memory_used@@Base+0x99c4>
  454b7c:	cmp	w8, #0x6
  454b80:	cset	w8, eq  // eq = none
  454b84:	lsl	w8, w8, #20
  454b88:	ldr	x9, [x19]
  454b8c:	ldr	x10, [x19, #16]
  454b90:	add	x9, x9, x10, lsl #4
  454b94:	ldr	w10, [x9, #8]
  454b98:	and	w10, w10, #0xffefffff
  454b9c:	orr	w8, w10, w8
  454ba0:	str	w8, [x9, #8]
  454ba4:	ldp	x9, x8, [x19, #16]
  454ba8:	mov	x10, #0xffffffffffffffff    	// #-1
  454bac:	str	x10, [x8, x9, lsl #3]
  454bb0:	ldr	x8, [x19, #40]
  454bb4:	ldr	x9, [x19, #16]
  454bb8:	mov	w10, #0x18                  	// #24
  454bbc:	madd	x8, x9, x10, x8
  454bc0:	stp	xzr, xzr, [x8]
  454bc4:	str	xzr, [x8, #16]
  454bc8:	ldr	x8, [x19, #48]
  454bcc:	ldr	x9, [x19, #16]
  454bd0:	madd	x8, x9, x10, x8
  454bd4:	stp	xzr, xzr, [x8]
  454bd8:	str	xzr, [x8, #16]
  454bdc:	ldr	x0, [x19, #16]
  454be0:	add	x8, x0, #0x1
  454be4:	str	x8, [x19, #16]
  454be8:	ldp	x20, x19, [sp, #64]
  454bec:	ldp	x22, x21, [sp, #48]
  454bf0:	ldp	x24, x23, [sp, #32]
  454bf4:	ldp	x26, x25, [sp, #16]
  454bf8:	ldp	x29, x30, [sp], #80
  454bfc:	ret
  454c00:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  454c04:	lsl	x26, x24, #1
  454c08:	movk	x8, #0xaaa, lsl #48
  454c0c:	cmp	x26, x8
  454c10:	b.hi	454ca0 <_obstack_memory_used@@Base+0x9adc>  // b.pmore
  454c14:	ldr	x0, [x19]
  454c18:	lsl	x1, x24, #5
  454c1c:	bl	404450 <realloc@plt>
  454c20:	cbz	x0, 454ca0 <_obstack_memory_used@@Base+0x9adc>
  454c24:	ldr	x8, [x19, #24]
  454c28:	lsl	x23, x24, #4
  454c2c:	str	x0, [x19]
  454c30:	mov	x1, x23
  454c34:	mov	x0, x8
  454c38:	bl	404450 <realloc@plt>
  454c3c:	ldr	x8, [x19, #32]
  454c40:	mov	x22, x0
  454c44:	mov	x1, x23
  454c48:	mov	x0, x8
  454c4c:	bl	404450 <realloc@plt>
  454c50:	mov	x23, x0
  454c54:	ldr	x0, [x19, #40]
  454c58:	add	x8, x24, x24, lsl #1
  454c5c:	lsl	x25, x8, #4
  454c60:	mov	x1, x25
  454c64:	bl	404450 <realloc@plt>
  454c68:	ldr	x8, [x19, #48]
  454c6c:	mov	x24, x0
  454c70:	mov	x1, x25
  454c74:	mov	x0, x8
  454c78:	bl	404450 <realloc@plt>
  454c7c:	cbz	x22, 454ca8 <_obstack_memory_used@@Base+0x9ae4>
  454c80:	cbz	x23, 454ca8 <_obstack_memory_used@@Base+0x9ae4>
  454c84:	cbz	x24, 454ca8 <_obstack_memory_used@@Base+0x9ae4>
  454c88:	cbz	x0, 454ca8 <_obstack_memory_used@@Base+0x9ae4>
  454c8c:	ldr	x8, [x19, #16]
  454c90:	stp	x22, x23, [x19, #24]
  454c94:	stp	x24, x0, [x19, #40]
  454c98:	str	x26, [x19, #8]
  454c9c:	b	454b38 <_obstack_memory_used@@Base+0x9974>
  454ca0:	mov	x0, #0xffffffffffffffff    	// #-1
  454ca4:	b	454be8 <_obstack_memory_used@@Base+0x9a24>
  454ca8:	mov	x19, x0
  454cac:	mov	x0, x22
  454cb0:	bl	4046b0 <free@plt>
  454cb4:	mov	x0, x23
  454cb8:	bl	4046b0 <free@plt>
  454cbc:	mov	x0, x24
  454cc0:	bl	4046b0 <free@plt>
  454cc4:	mov	x0, x19
  454cc8:	bl	4046b0 <free@plt>
  454ccc:	mov	x0, #0xffffffffffffffff    	// #-1
  454cd0:	b	454be8 <_obstack_memory_used@@Base+0x9a24>
  454cd4:	sub	sp, sp, #0x90
  454cd8:	stp	x29, x30, [sp, #64]
  454cdc:	stp	x26, x25, [sp, #80]
  454ce0:	stp	x24, x23, [sp, #96]
  454ce4:	stp	x22, x21, [sp, #112]
  454ce8:	stp	x20, x19, [sp, #128]
  454cec:	ldr	x23, [x1, #40]
  454cf0:	mov	w8, #0x18                  	// #24
  454cf4:	mov	x19, x0
  454cf8:	add	x29, sp, #0x40
  454cfc:	madd	x25, x2, x8, x23
  454d00:	ldr	x8, [x25, #8]!
  454d04:	mov	w21, w3
  454d08:	mov	x20, x2
  454d0c:	mov	x22, x1
  454d10:	add	x24, x8, #0x1
  454d14:	lsl	x0, x24, #3
  454d18:	stp	x24, xzr, [sp, #32]
  454d1c:	bl	404210 <malloc@plt>
  454d20:	str	x0, [sp, #48]
  454d24:	cbz	x0, 454f48 <_obstack_memory_used@@Base+0x9d84>
  454d28:	ldr	x8, [x22, #48]
  454d2c:	mov	w9, #0x18                  	// #24
  454d30:	madd	x8, x20, x9, x8
  454d34:	mov	x9, #0xffffffffffffffff    	// #-1
  454d38:	str	x9, [x8, #8]
  454d3c:	ldr	x9, [x22]
  454d40:	add	x8, x9, x20, lsl #4
  454d44:	ldr	w8, [x8, #8]
  454d48:	ubfx	w4, w8, #8, #10
  454d4c:	cbz	w4, 454d98 <_obstack_memory_used@@Base+0x9bd4>
  454d50:	ldr	x10, [x25]
  454d54:	cbz	x10, 454d98 <_obstack_memory_used@@Base+0x9bd4>
  454d58:	mov	w10, #0x18                  	// #24
  454d5c:	madd	x10, x20, x10, x23
  454d60:	ldr	x10, [x10, #16]
  454d64:	ldr	x10, [x10]
  454d68:	add	x9, x9, x10, lsl #4
  454d6c:	ldrb	w9, [x9, #10]
  454d70:	tbnz	w9, #2, 454d98 <_obstack_memory_used@@Base+0x9bd4>
  454d74:	mov	x0, x22
  454d78:	mov	x1, x20
  454d7c:	mov	x2, x20
  454d80:	mov	x3, x20
  454d84:	bl	454fe4 <_obstack_memory_used@@Base+0x9e20>
  454d88:	cbnz	w0, 454f04 <_obstack_memory_used@@Base+0x9d40>
  454d8c:	ldr	x8, [x22]
  454d90:	add	x8, x8, x20, lsl #4
  454d94:	ldr	w8, [x8, #8]
  454d98:	tbz	w8, #3, 454e60 <_obstack_memory_used@@Base+0x9c9c>
  454d9c:	ldr	x8, [x22, #40]
  454da0:	mov	w9, #0x18                  	// #24
  454da4:	madd	x9, x20, x9, x8
  454da8:	ldr	x9, [x9, #8]
  454dac:	cmp	x9, #0x1
  454db0:	b.lt	454e60 <_obstack_memory_used@@Base+0x9c9c>  // b.tstop
  454db4:	mov	w25, wzr
  454db8:	mov	x24, xzr
  454dbc:	mov	w26, #0x18                  	// #24
  454dc0:	b	454de0 <_obstack_memory_used@@Base+0x9c1c>
  454dc4:	mov	w25, #0x1                   	// #1
  454dc8:	ldr	x8, [x22, #40]
  454dcc:	add	x24, x24, #0x1
  454dd0:	madd	x9, x20, x26, x8
  454dd4:	ldr	x9, [x9, #8]
  454dd8:	cmp	x24, x9
  454ddc:	b.ge	454ea8 <_obstack_memory_used@@Base+0x9ce4>  // b.tcont
  454de0:	madd	x8, x20, x26, x8
  454de4:	ldr	x8, [x8, #16]
  454de8:	ldr	x23, [x8, x24, lsl #3]
  454dec:	ldr	x8, [x22, #48]
  454df0:	madd	x9, x23, x26, x8
  454df4:	ldr	x9, [x9, #8]
  454df8:	cmn	x9, #0x1
  454dfc:	b.eq	454dc4 <_obstack_memory_used@@Base+0x9c00>  // b.none
  454e00:	cbnz	x9, 454e20 <_obstack_memory_used@@Base+0x9c5c>
  454e04:	mov	x0, sp
  454e08:	mov	x1, x22
  454e0c:	mov	x2, x23
  454e10:	mov	w3, wzr
  454e14:	bl	454cd4 <_obstack_memory_used@@Base+0x9b10>
  454e18:	cbz	w0, 454e34 <_obstack_memory_used@@Base+0x9c70>
  454e1c:	b	454f04 <_obstack_memory_used@@Base+0x9d40>
  454e20:	madd	x8, x23, x26, x8
  454e24:	ldr	x9, [x8, #16]
  454e28:	ldr	q0, [x8]
  454e2c:	str	x9, [sp, #16]
  454e30:	str	q0, [sp]
  454e34:	add	x0, sp, #0x20
  454e38:	mov	x1, sp
  454e3c:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  454e40:	cbnz	w0, 454f04 <_obstack_memory_used@@Base+0x9d40>
  454e44:	ldr	x8, [x22, #48]
  454e48:	madd	x8, x23, x26, x8
  454e4c:	ldr	x8, [x8, #8]
  454e50:	cbnz	x8, 454dc8 <_obstack_memory_used@@Base+0x9c04>
  454e54:	ldr	x0, [sp, #16]
  454e58:	bl	4046b0 <free@plt>
  454e5c:	b	454dc4 <_obstack_memory_used@@Base+0x9c00>
  454e60:	mov	w23, #0x1                   	// #1
  454e64:	cbz	x24, 454eb8 <_obstack_memory_used@@Base+0x9cf4>
  454e68:	ldr	x25, [sp, #40]
  454e6c:	cbnz	x25, 454f20 <_obstack_memory_used@@Base+0x9d5c>
  454e70:	ldr	x8, [sp, #48]
  454e74:	mov	w9, #0x1                   	// #1
  454e78:	str	x20, [x8]
  454e7c:	str	x9, [sp, #40]
  454e80:	ldr	x8, [x22, #48]
  454e84:	orr	w9, w23, w21
  454e88:	tbz	w9, #0, 454ee4 <_obstack_memory_used@@Base+0x9d20>
  454e8c:	ldr	x9, [sp, #48]
  454e90:	ldr	q0, [sp, #32]
  454e94:	mov	w10, #0x18                  	// #24
  454e98:	madd	x8, x20, x10, x8
  454e9c:	str	x9, [x8, #16]
  454ea0:	str	q0, [x8]
  454ea4:	b	454ef0 <_obstack_memory_used@@Base+0x9d2c>
  454ea8:	ldr	x24, [sp, #32]
  454eac:	tst	w25, #0x1
  454eb0:	cset	w23, eq  // eq = none
  454eb4:	cbnz	x24, 454e68 <_obstack_memory_used@@Base+0x9ca4>
  454eb8:	mov	w8, #0x1                   	// #1
  454ebc:	dup	v0.2d, x8
  454ec0:	mov	w0, #0x8                   	// #8
  454ec4:	str	q0, [sp, #32]
  454ec8:	bl	404210 <malloc@plt>
  454ecc:	str	x0, [sp, #48]
  454ed0:	cbz	x0, 454f50 <_obstack_memory_used@@Base+0x9d8c>
  454ed4:	str	x20, [x0]
  454ed8:	ldr	x8, [x22, #48]
  454edc:	orr	w9, w23, w21
  454ee0:	tbnz	w9, #0, 454e8c <_obstack_memory_used@@Base+0x9cc8>
  454ee4:	mov	w9, #0x18                  	// #24
  454ee8:	madd	x8, x20, x9, x8
  454eec:	str	xzr, [x8, #8]
  454ef0:	ldr	x8, [sp, #48]
  454ef4:	ldr	q0, [sp, #32]
  454ef8:	mov	w0, wzr
  454efc:	str	x8, [x19, #16]
  454f00:	str	q0, [x19]
  454f04:	ldp	x20, x19, [sp, #128]
  454f08:	ldp	x22, x21, [sp, #112]
  454f0c:	ldp	x24, x23, [sp, #96]
  454f10:	ldp	x26, x25, [sp, #80]
  454f14:	ldp	x29, x30, [sp, #64]
  454f18:	add	sp, sp, #0x90
  454f1c:	ret
  454f20:	cmp	x24, x25
  454f24:	b.ne	454f5c <_obstack_memory_used@@Base+0x9d98>  // b.any
  454f28:	ldr	x0, [sp, #48]
  454f2c:	lsl	x8, x24, #1
  454f30:	lsl	x1, x24, #4
  454f34:	str	x8, [sp, #32]
  454f38:	bl	404450 <realloc@plt>
  454f3c:	cbz	x0, 454f48 <_obstack_memory_used@@Base+0x9d84>
  454f40:	str	x0, [sp, #48]
  454f44:	b	454f60 <_obstack_memory_used@@Base+0x9d9c>
  454f48:	mov	w0, #0xc                   	// #12
  454f4c:	b	454f04 <_obstack_memory_used@@Base+0x9d40>
  454f50:	stp	xzr, xzr, [sp, #32]
  454f54:	mov	w0, #0xc                   	// #12
  454f58:	b	454f04 <_obstack_memory_used@@Base+0x9d40>
  454f5c:	ldr	x0, [sp, #48]
  454f60:	ldr	x8, [x0]
  454f64:	cmp	x8, x20
  454f68:	b.le	454f94 <_obstack_memory_used@@Base+0x9dd0>
  454f6c:	cmp	x25, #0x1
  454f70:	b.lt	454fc4 <_obstack_memory_used@@Base+0x9e00>  // b.tstop
  454f74:	mov	x9, x25
  454f78:	add	x10, x0, x9, lsl #3
  454f7c:	ldur	x11, [x10, #-8]
  454f80:	subs	x8, x9, #0x1
  454f84:	mov	x9, x8
  454f88:	str	x11, [x10]
  454f8c:	b.gt	454f78 <_obstack_memory_used@@Base+0x9db4>
  454f90:	b	454fc8 <_obstack_memory_used@@Base+0x9e04>
  454f94:	add	x8, x0, x25, lsl #3
  454f98:	ldur	x9, [x8, #-8]
  454f9c:	mov	x8, x25
  454fa0:	cmp	x9, x20
  454fa4:	b.le	454fc8 <_obstack_memory_used@@Base+0x9e04>
  454fa8:	add	x10, x0, x8, lsl #3
  454fac:	str	x9, [x10]
  454fb0:	ldur	x9, [x10, #-16]
  454fb4:	sub	x8, x8, #0x1
  454fb8:	cmp	x9, x20
  454fbc:	b.gt	454fa8 <_obstack_memory_used@@Base+0x9de4>
  454fc0:	b	454fc8 <_obstack_memory_used@@Base+0x9e04>
  454fc4:	mov	x8, x25
  454fc8:	str	x20, [x0, x8, lsl #3]
  454fcc:	add	x8, x25, #0x1
  454fd0:	str	x8, [sp, #40]
  454fd4:	ldr	x8, [x22, #48]
  454fd8:	orr	w9, w23, w21
  454fdc:	tbnz	w9, #0, 454e8c <_obstack_memory_used@@Base+0x9cc8>
  454fe0:	b	454ee4 <_obstack_memory_used@@Base+0x9d20>
  454fe4:	stp	x29, x30, [sp, #-96]!
  454fe8:	stp	x26, x25, [sp, #32]
  454fec:	stp	x24, x23, [sp, #48]
  454ff0:	stp	x22, x21, [sp, #64]
  454ff4:	stp	x20, x19, [sp, #80]
  454ff8:	mov	w19, w4
  454ffc:	mov	x20, x3
  455000:	mov	x22, x2
  455004:	mov	x23, x1
  455008:	mov	x21, x0
  45500c:	mov	w25, #0x18                  	// #24
  455010:	str	x27, [sp, #16]
  455014:	mov	x29, sp
  455018:	ubfiz	w26, w19, #8, #10
  45501c:	mov	x27, x23
  455020:	b	4550d4 <_obstack_memory_used@@Base+0x9f10>
  455024:	ldr	x9, [x21, #24]
  455028:	ldr	x10, [x21, #40]
  45502c:	mov	x0, x21
  455030:	ldr	x24, [x9, x27, lsl #3]
  455034:	madd	x9, x22, x25, x10
  455038:	str	xzr, [x9, #8]
  45503c:	add	x8, x8, x24, lsl #4
  455040:	ldp	x1, x2, [x8]
  455044:	bl	454b08 <_obstack_memory_used@@Base+0x9944>
  455048:	cmn	x0, #0x1
  45504c:	b.eq	4553b0 <_obstack_memory_used@@Base+0xa1ec>  // b.none
  455050:	ldr	x8, [x21]
  455054:	lsl	x9, x0, #4
  455058:	mov	x23, x0
  45505c:	mov	x1, x23
  455060:	add	x8, x8, x9
  455064:	ldr	w10, [x8, #8]
  455068:	and	w10, w10, #0xfffc00ff
  45506c:	orr	w10, w10, w26
  455070:	str	w10, [x8, #8]
  455074:	ldr	x8, [x21]
  455078:	add	x10, x8, x24, lsl #4
  45507c:	ldr	w10, [x10, #8]
  455080:	add	x8, x8, x9
  455084:	ldr	w11, [x8, #8]
  455088:	and	w10, w10, #0x3ff00
  45508c:	orr	w10, w10, w11
  455090:	str	w10, [x8, #8]
  455094:	ldr	x8, [x21]
  455098:	add	x8, x8, x9
  45509c:	ldr	w9, [x8, #8]
  4550a0:	orr	w9, w9, #0x40000
  4550a4:	str	w9, [x8, #8]
  4550a8:	ldr	x8, [x21, #32]
  4550ac:	str	x24, [x8, x0, lsl #3]
  4550b0:	ldr	x8, [x21, #24]
  4550b4:	ldr	x9, [x8, x27, lsl #3]
  4550b8:	str	x9, [x8, x22, lsl #3]
  4550bc:	ldr	x8, [x21, #40]
  4550c0:	madd	x0, x22, x25, x8
  4550c4:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  4550c8:	mov	x27, x24
  4550cc:	mov	x22, x23
  4550d0:	tbz	w0, #0, 4553b0 <_obstack_memory_used@@Base+0xa1ec>
  4550d4:	ldr	x8, [x21]
  4550d8:	add	x10, x8, x27, lsl #4
  4550dc:	ldrb	w9, [x10, #8]!
  4550e0:	cmp	w9, #0x4
  4550e4:	b.eq	455024 <_obstack_memory_used@@Base+0x9e60>  // b.none
  4550e8:	ldr	x9, [x21, #40]
  4550ec:	madd	x11, x27, x25, x9
  4550f0:	ldr	x11, [x11, #8]
  4550f4:	cbz	x11, 455368 <_obstack_memory_used@@Base+0xa1a4>
  4550f8:	madd	x12, x27, x25, x9
  4550fc:	ldr	x12, [x12, #16]
  455100:	cmp	x11, #0x1
  455104:	ldr	x23, [x12]
  455108:	madd	x12, x22, x25, x9
  45510c:	str	xzr, [x12, #8]
  455110:	b.eq	4552c0 <_obstack_memory_used@@Base+0xa0fc>  // b.none
  455114:	ldr	x12, [x21, #16]
  455118:	sub	x1, x12, #0x1
  45511c:	cmp	x1, #0x1
  455120:	b.lt	455168 <_obstack_memory_used@@Base+0x9fa4>  // b.tstop
  455124:	add	x10, x8, x1, lsl #4
  455128:	ldr	w11, [x10, #8]
  45512c:	tbz	w11, #18, 455168 <_obstack_memory_used@@Base+0x9fa4>
  455130:	ldr	x10, [x21, #32]
  455134:	add	x12, x8, x12, lsl #4
  455138:	sub	x12, x12, #0x18
  45513c:	ldr	x13, [x10, x1, lsl #3]
  455140:	cmp	x13, x23
  455144:	b.ne	455154 <_obstack_memory_used@@Base+0x9f90>  // b.any
  455148:	ubfx	w11, w11, #8, #10
  45514c:	cmp	w11, w19
  455150:	b.eq	4552b0 <_obstack_memory_used@@Base+0xa0ec>  // b.none
  455154:	ldr	w11, [x12], #-16
  455158:	sub	x1, x1, #0x1
  45515c:	cmp	x1, #0x1
  455160:	b.lt	455168 <_obstack_memory_used@@Base+0x9fa4>  // b.tstop
  455164:	tbnz	w11, #18, 45513c <_obstack_memory_used@@Base+0x9f78>
  455168:	add	x8, x8, x23, lsl #4
  45516c:	ldp	x1, x2, [x8]
  455170:	mov	x0, x21
  455174:	bl	454b08 <_obstack_memory_used@@Base+0x9944>
  455178:	cmn	x0, #0x1
  45517c:	b.eq	4553b0 <_obstack_memory_used@@Base+0xa1ec>  // b.none
  455180:	ldr	x8, [x21]
  455184:	lsl	x9, x0, #4
  455188:	mov	x24, x0
  45518c:	mov	x1, x24
  455190:	add	x8, x8, x9
  455194:	ldr	w10, [x8, #8]
  455198:	and	w10, w10, #0xfffc00ff
  45519c:	orr	w10, w10, w26
  4551a0:	str	w10, [x8, #8]
  4551a4:	ldr	x8, [x21]
  4551a8:	add	x10, x8, x23, lsl #4
  4551ac:	ldr	w10, [x10, #8]
  4551b0:	add	x8, x8, x9
  4551b4:	ldr	w11, [x8, #8]
  4551b8:	and	w10, w10, #0x3ff00
  4551bc:	orr	w10, w10, w11
  4551c0:	str	w10, [x8, #8]
  4551c4:	ldr	x8, [x21]
  4551c8:	add	x8, x8, x9
  4551cc:	ldr	w9, [x8, #8]
  4551d0:	orr	w9, w9, #0x40000
  4551d4:	str	w9, [x8, #8]
  4551d8:	ldr	x8, [x21, #32]
  4551dc:	str	x23, [x8, x0, lsl #3]
  4551e0:	ldr	x8, [x21, #40]
  4551e4:	madd	x0, x22, x25, x8
  4551e8:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  4551ec:	tbz	w0, #0, 4553b0 <_obstack_memory_used@@Base+0xa1ec>
  4551f0:	mov	x0, x21
  4551f4:	mov	x1, x23
  4551f8:	mov	x2, x24
  4551fc:	mov	x3, x20
  455200:	mov	w4, w19
  455204:	bl	454fe4 <_obstack_memory_used@@Base+0x9e20>
  455208:	cbnz	w0, 455378 <_obstack_memory_used@@Base+0xa1b4>
  45520c:	ldr	x8, [x21, #40]
  455210:	ldr	x9, [x21]
  455214:	mov	x0, x21
  455218:	madd	x8, x27, x25, x8
  45521c:	ldr	x8, [x8, #16]
  455220:	ldr	x27, [x8, #8]
  455224:	add	x8, x9, x27, lsl #4
  455228:	ldp	x1, x2, [x8]
  45522c:	bl	454b08 <_obstack_memory_used@@Base+0x9944>
  455230:	cmn	x0, #0x1
  455234:	b.eq	4553b0 <_obstack_memory_used@@Base+0xa1ec>  // b.none
  455238:	ldr	x8, [x21]
  45523c:	lsl	x9, x0, #4
  455240:	mov	x23, x0
  455244:	mov	x1, x23
  455248:	add	x8, x8, x9
  45524c:	ldr	w10, [x8, #8]
  455250:	and	w10, w10, #0xfffc00ff
  455254:	orr	w10, w10, w26
  455258:	str	w10, [x8, #8]
  45525c:	ldr	x8, [x21]
  455260:	add	x10, x8, x27, lsl #4
  455264:	ldr	w10, [x10, #8]
  455268:	add	x8, x8, x9
  45526c:	ldr	w11, [x8, #8]
  455270:	and	w10, w10, #0x3ff00
  455274:	orr	w10, w10, w11
  455278:	str	w10, [x8, #8]
  45527c:	ldr	x8, [x21]
  455280:	add	x8, x8, x9
  455284:	ldr	w9, [x8, #8]
  455288:	orr	w9, w9, #0x40000
  45528c:	str	w9, [x8, #8]
  455290:	ldr	x8, [x21, #32]
  455294:	str	x27, [x8, x0, lsl #3]
  455298:	ldr	x8, [x21, #40]
  45529c:	madd	x0, x22, x25, x8
  4552a0:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  4552a4:	mov	x22, x23
  4552a8:	tbnz	w0, #0, 4550d4 <_obstack_memory_used@@Base+0x9f10>
  4552ac:	b	4553b0 <_obstack_memory_used@@Base+0xa1ec>
  4552b0:	madd	x0, x22, x25, x9
  4552b4:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  4552b8:	tbnz	w0, #0, 45520c <_obstack_memory_used@@Base+0xa048>
  4552bc:	b	4553b0 <_obstack_memory_used@@Base+0xa1ec>
  4552c0:	cmp	x27, x20
  4552c4:	b.ne	4552d0 <_obstack_memory_used@@Base+0xa10c>  // b.any
  4552c8:	cmp	x22, x27
  4552cc:	b.ne	455394 <_obstack_memory_used@@Base+0xa1d0>  // b.any
  4552d0:	add	x8, x8, x23, lsl #4
  4552d4:	ldp	x1, x2, [x8]
  4552d8:	ldr	w26, [x10]
  4552dc:	mov	x0, x21
  4552e0:	bl	454b08 <_obstack_memory_used@@Base+0x9944>
  4552e4:	cmn	x0, #0x1
  4552e8:	b.eq	4553b0 <_obstack_memory_used@@Base+0xa1ec>  // b.none
  4552ec:	ldr	x8, [x21]
  4552f0:	lsl	x9, x0, #4
  4552f4:	ubfx	w11, w26, #8, #10
  4552f8:	orr	w19, w11, w19
  4552fc:	add	x8, x8, x9
  455300:	ldr	w10, [x8, #8]
  455304:	mov	x24, x0
  455308:	mov	x1, x24
  45530c:	bfi	w10, w19, #8, #10
  455310:	str	w10, [x8, #8]
  455314:	ldr	x8, [x21]
  455318:	add	x10, x8, x23, lsl #4
  45531c:	ldr	w10, [x10, #8]
  455320:	add	x8, x8, x9
  455324:	ldr	w11, [x8, #8]
  455328:	and	w10, w10, #0x3ff00
  45532c:	orr	w10, w10, w11
  455330:	str	w10, [x8, #8]
  455334:	ldr	x8, [x21]
  455338:	add	x8, x8, x9
  45533c:	ldr	w9, [x8, #8]
  455340:	orr	w9, w9, #0x40000
  455344:	str	w9, [x8, #8]
  455348:	ldr	x8, [x21, #32]
  45534c:	str	x23, [x8, x0, lsl #3]
  455350:	ldr	x8, [x21, #40]
  455354:	madd	x0, x22, x25, x8
  455358:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  45535c:	mov	x22, x24
  455360:	tbnz	w0, #0, 455018 <_obstack_memory_used@@Base+0x9e54>
  455364:	b	4553b0 <_obstack_memory_used@@Base+0xa1ec>
  455368:	ldr	x8, [x21, #24]
  45536c:	mov	w0, wzr
  455370:	ldr	x9, [x8, x27, lsl #3]
  455374:	str	x9, [x8, x22, lsl #3]
  455378:	ldp	x20, x19, [sp, #80]
  45537c:	ldp	x22, x21, [sp, #64]
  455380:	ldp	x24, x23, [sp, #48]
  455384:	ldp	x26, x25, [sp, #32]
  455388:	ldr	x27, [sp, #16]
  45538c:	ldp	x29, x30, [sp], #96
  455390:	ret
  455394:	mov	w8, #0x18                  	// #24
  455398:	madd	x0, x22, x8, x9
  45539c:	mov	x1, x23
  4553a0:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  4553a4:	tbz	w0, #0, 4553b0 <_obstack_memory_used@@Base+0xa1ec>
  4553a8:	mov	w0, wzr
  4553ac:	b	455378 <_obstack_memory_used@@Base+0xa1b4>
  4553b0:	mov	w0, #0xc                   	// #12
  4553b4:	b	455378 <_obstack_memory_used@@Base+0xa1b4>
  4553b8:	stp	x29, x30, [sp, #-48]!
  4553bc:	str	x21, [sp, #16]
  4553c0:	stp	x20, x19, [sp, #32]
  4553c4:	mov	x29, sp
  4553c8:	cbz	x1, 4554b0 <_obstack_memory_used@@Base+0xa2ec>
  4553cc:	ldr	x10, [x1, #8]
  4553d0:	mov	x20, x1
  4553d4:	cbz	x10, 4554b0 <_obstack_memory_used@@Base+0xa2ec>
  4553d8:	ldp	x8, x11, [x0]
  4553dc:	mov	x19, x0
  4553e0:	add	x9, x11, x10, lsl #1
  4553e4:	cmp	x8, x9
  4553e8:	b.ge	455414 <_obstack_memory_used@@Base+0xa250>  // b.tcont
  4553ec:	ldr	x0, [x19, #16]
  4553f0:	add	x21, x8, x10
  4553f4:	lsl	x1, x21, #4
  4553f8:	bl	404450 <realloc@plt>
  4553fc:	cbz	x0, 45553c <_obstack_memory_used@@Base+0xa378>
  455400:	lsl	x8, x21, #1
  455404:	str	x0, [x19, #16]
  455408:	str	x8, [x19]
  45540c:	ldr	x11, [x19, #8]
  455410:	ldr	x10, [x20, #8]
  455414:	cbz	x11, 455528 <_obstack_memory_used@@Base+0xa364>
  455418:	sub	x8, x10, #0x1
  45541c:	sub	x9, x11, #0x1
  455420:	orr	x12, x8, x9
  455424:	add	x21, x11, x10, lsl #1
  455428:	tbnz	x12, #63, 455474 <_obstack_memory_used@@Base+0xa2b0>
  45542c:	ldr	x10, [x19, #16]
  455430:	ldr	x11, [x20, #16]
  455434:	b	45544c <_obstack_memory_used@@Base+0xa288>
  455438:	sub	x8, x8, #0x1
  45543c:	sub	x21, x21, #0x1
  455440:	str	x12, [x10, x21, lsl #3]
  455444:	orr	x12, x8, x9
  455448:	tbnz	x12, #63, 455474 <_obstack_memory_used@@Base+0xa2b0>
  45544c:	ldr	x13, [x10, x9, lsl #3]
  455450:	ldr	x12, [x11, x8, lsl #3]
  455454:	cmp	x13, x12
  455458:	b.ne	455464 <_obstack_memory_used@@Base+0xa2a0>  // b.any
  45545c:	sub	x8, x8, #0x1
  455460:	b	455468 <_obstack_memory_used@@Base+0xa2a4>
  455464:	b.lt	455438 <_obstack_memory_used@@Base+0xa274>  // b.tstop
  455468:	sub	x9, x9, #0x1
  45546c:	orr	x12, x8, x9
  455470:	tbz	x12, #63, 45544c <_obstack_memory_used@@Base+0xa288>
  455474:	tbnz	x8, #63, 455494 <_obstack_memory_used@@Base+0xa2d0>
  455478:	ldr	x9, [x19, #16]
  45547c:	ldr	x1, [x20, #16]
  455480:	add	x8, x8, #0x1
  455484:	sub	x21, x21, x8
  455488:	add	x0, x9, x21, lsl #3
  45548c:	lsl	x2, x8, #3
  455490:	bl	403e80 <memcpy@plt>
  455494:	ldr	x10, [x19, #8]
  455498:	ldr	x8, [x20, #8]
  45549c:	sub	x9, x10, #0x1
  4554a0:	add	x8, x9, x8, lsl #1
  4554a4:	sub	x11, x8, x21
  4554a8:	adds	x11, x11, #0x1
  4554ac:	b.cc	4554c4 <_obstack_memory_used@@Base+0xa300>  // b.lo, b.ul, b.last
  4554b0:	mov	w0, wzr
  4554b4:	ldp	x20, x19, [sp, #32]
  4554b8:	ldr	x21, [sp, #16]
  4554bc:	ldp	x29, x30, [sp], #48
  4554c0:	ret
  4554c4:	ldr	x0, [x19, #16]
  4554c8:	add	x10, x11, x10
  4554cc:	str	x10, [x19, #8]
  4554d0:	add	x10, x0, x9, lsl #3
  4554d4:	lsl	x2, x11, #3
  4554d8:	neg	x11, x11
  4554dc:	ldr	x12, [x0, x8, lsl #3]
  4554e0:	ldr	x13, [x0, x9, lsl #3]
  4554e4:	cmp	x12, x13
  4554e8:	b.le	455504 <_obstack_memory_used@@Base+0xa340>
  4554ec:	sub	x8, x8, #0x1
  4554f0:	str	x12, [x10, x2]
  4554f4:	adds	x11, x11, #0x1
  4554f8:	sub	x2, x2, #0x8
  4554fc:	b.cc	4554dc <_obstack_memory_used@@Base+0xa318>  // b.lo, b.ul, b.last
  455500:	b	4554b0 <_obstack_memory_used@@Base+0xa2ec>
  455504:	str	x13, [x10, x2]
  455508:	cmp	x9, #0x0
  45550c:	sub	x9, x9, #0x1
  455510:	neg	x11, x11
  455514:	sub	x10, x10, #0x8
  455518:	b.gt	4554d4 <_obstack_memory_used@@Base+0xa310>
  45551c:	add	x1, x0, x21, lsl #3
  455520:	bl	403e80 <memcpy@plt>
  455524:	b	4554b0 <_obstack_memory_used@@Base+0xa2ec>
  455528:	str	x10, [x19, #8]
  45552c:	ldp	x8, x1, [x20, #8]
  455530:	ldr	x0, [x19, #16]
  455534:	lsl	x2, x8, #3
  455538:	b	455520 <_obstack_memory_used@@Base+0xa35c>
  45553c:	mov	w0, #0xc                   	// #12
  455540:	ldp	x20, x19, [sp, #32]
  455544:	ldr	x21, [sp, #16]
  455548:	ldp	x29, x30, [sp], #48
  45554c:	ret
  455550:	stp	x29, x30, [sp, #-32]!
  455554:	stp	x20, x19, [sp, #16]
  455558:	ldr	x9, [x0]
  45555c:	mov	x19, x0
  455560:	mov	x20, x1
  455564:	mov	x29, sp
  455568:	cbz	x9, 45558c <_obstack_memory_used@@Base+0xa3c8>
  45556c:	ldr	x8, [x19, #8]
  455570:	cbnz	x8, 4555bc <_obstack_memory_used@@Base+0xa3f8>
  455574:	ldr	x8, [x19, #16]
  455578:	str	x20, [x8]
  45557c:	ldr	x8, [x19, #8]
  455580:	add	x8, x8, #0x1
  455584:	str	x8, [x19, #8]
  455588:	b	4555ac <_obstack_memory_used@@Base+0xa3e8>
  45558c:	mov	w8, #0x1                   	// #1
  455590:	dup	v0.2d, x8
  455594:	mov	w0, #0x8                   	// #8
  455598:	str	q0, [x19]
  45559c:	bl	404210 <malloc@plt>
  4555a0:	str	x0, [x19, #16]
  4555a4:	cbz	x0, 4555e8 <_obstack_memory_used@@Base+0xa424>
  4555a8:	str	x20, [x0]
  4555ac:	mov	w0, #0x1                   	// #1
  4555b0:	ldp	x20, x19, [sp, #16]
  4555b4:	ldp	x29, x30, [sp], #32
  4555b8:	ret
  4555bc:	cmp	x9, x8
  4555c0:	b.ne	4555f8 <_obstack_memory_used@@Base+0xa434>  // b.any
  4555c4:	ldr	x0, [x19, #16]
  4555c8:	lsl	x8, x9, #1
  4555cc:	lsl	x1, x9, #4
  4555d0:	str	x8, [x19]
  4555d4:	bl	404450 <realloc@plt>
  4555d8:	cbz	x0, 4555b0 <_obstack_memory_used@@Base+0xa3ec>
  4555dc:	ldr	x8, [x19, #8]
  4555e0:	str	x0, [x19, #16]
  4555e4:	b	4555fc <_obstack_memory_used@@Base+0xa438>
  4555e8:	stp	xzr, xzr, [x19]
  4555ec:	ldp	x20, x19, [sp, #16]
  4555f0:	ldp	x29, x30, [sp], #32
  4555f4:	ret
  4555f8:	ldr	x0, [x19, #16]
  4555fc:	ldr	x9, [x0]
  455600:	cmp	x9, x20
  455604:	b.le	455630 <_obstack_memory_used@@Base+0xa46c>
  455608:	cmp	x8, #0x1
  45560c:	b.lt	455658 <_obstack_memory_used@@Base+0xa494>  // b.tstop
  455610:	mov	x9, x8
  455614:	add	x10, x0, x9, lsl #3
  455618:	ldur	x11, [x10, #-8]
  45561c:	subs	x8, x9, #0x1
  455620:	mov	x9, x8
  455624:	str	x11, [x10]
  455628:	b.gt	455614 <_obstack_memory_used@@Base+0xa450>
  45562c:	b	455658 <_obstack_memory_used@@Base+0xa494>
  455630:	add	x9, x0, x8, lsl #3
  455634:	ldur	x9, [x9, #-8]
  455638:	cmp	x9, x20
  45563c:	b.le	455658 <_obstack_memory_used@@Base+0xa494>
  455640:	add	x10, x0, x8, lsl #3
  455644:	str	x9, [x10]
  455648:	ldur	x9, [x10, #-16]
  45564c:	sub	x8, x8, #0x1
  455650:	cmp	x9, x20
  455654:	b.gt	455640 <_obstack_memory_used@@Base+0xa47c>
  455658:	str	x20, [x0, x8, lsl #3]
  45565c:	b	45557c <_obstack_memory_used@@Base+0xa3b8>
  455660:	sub	sp, sp, #0x90
  455664:	stp	x29, x30, [sp, #48]
  455668:	stp	x28, x27, [sp, #64]
  45566c:	stp	x26, x25, [sp, #80]
  455670:	stp	x24, x23, [sp, #96]
  455674:	stp	x22, x21, [sp, #112]
  455678:	stp	x20, x19, [sp, #128]
  45567c:	ldr	x27, [x2, #8]
  455680:	mov	x19, x0
  455684:	add	x29, sp, #0x30
  455688:	cbz	x27, 4556b8 <_obstack_memory_used@@Base+0xa4f4>
  45568c:	mov	w26, w3
  455690:	mov	x22, x2
  455694:	mov	x20, x1
  455698:	subs	x8, x27, #0x1
  45569c:	add	x23, x27, w3, uxtw
  4556a0:	b.lt	455720 <_obstack_memory_used@@Base+0xa55c>  // b.tstop
  4556a4:	ldr	x9, [x22, #16]
  4556a8:	cmp	x27, #0x4
  4556ac:	b.cs	4556c4 <_obstack_memory_used@@Base+0xa500>  // b.hs, b.nlast
  4556b0:	mov	x10, xzr
  4556b4:	b	455708 <_obstack_memory_used@@Base+0xa544>
  4556b8:	mov	x24, xzr
  4556bc:	str	wzr, [x19]
  4556c0:	b	455dd0 <_obstack_memory_used@@Base+0xac0c>
  4556c4:	and	x10, x27, #0xfffffffffffffffc
  4556c8:	movi	v1.2d, #0x0
  4556cc:	movi	v0.2d, #0x0
  4556d0:	mov	v1.d[0], x23
  4556d4:	add	x11, x9, #0x10
  4556d8:	mov	x12, x10
  4556dc:	ldp	q2, q3, [x11, #-16]
  4556e0:	subs	x12, x12, #0x4
  4556e4:	add	x11, x11, #0x20
  4556e8:	add	v1.2d, v2.2d, v1.2d
  4556ec:	add	v0.2d, v3.2d, v0.2d
  4556f0:	b.ne	4556dc <_obstack_memory_used@@Base+0xa518>  // b.any
  4556f4:	add	v0.2d, v0.2d, v1.2d
  4556f8:	addp	d0, v0.2d
  4556fc:	cmp	x27, x10
  455700:	fmov	x23, d0
  455704:	b.eq	455720 <_obstack_memory_used@@Base+0xa55c>  // b.none
  455708:	sub	x11, x27, x10
  45570c:	add	x9, x9, x10, lsl #3
  455710:	ldr	x10, [x9], #8
  455714:	subs	x11, x11, #0x1
  455718:	add	x23, x10, x23
  45571c:	b.ne	455710 <_obstack_memory_used@@Base+0xa54c>  // b.any
  455720:	ldr	x9, [x20, #136]
  455724:	ldr	x10, [x20, #64]
  455728:	and	x11, x9, x23
  45572c:	mov	w9, #0x18                  	// #24
  455730:	mul	x9, x11, x9
  455734:	ldr	x9, [x10, x9]
  455738:	cmp	x9, #0x1
  45573c:	b.lt	4557cc <_obstack_memory_used@@Base+0xa608>  // b.tstop
  455740:	cbz	x22, 4557cc <_obstack_memory_used@@Base+0xa608>
  455744:	mov	w12, #0x18                  	// #24
  455748:	madd	x10, x11, x12, x10
  45574c:	ldr	x10, [x10, #16]
  455750:	mov	x11, xzr
  455754:	b	455764 <_obstack_memory_used@@Base+0xa5a0>
  455758:	add	x11, x11, #0x1
  45575c:	cmp	x11, x9
  455760:	b.ge	4557cc <_obstack_memory_used@@Base+0xa608>  // b.tcont
  455764:	ldr	x24, [x10, x11, lsl #3]
  455768:	ldr	x12, [x24]
  45576c:	cmp	x12, x23
  455770:	b.ne	455758 <_obstack_memory_used@@Base+0xa594>  // b.any
  455774:	ldrb	w12, [x24, #104]
  455778:	and	w12, w12, #0xf
  45577c:	cmp	w12, w26
  455780:	b.ne	455758 <_obstack_memory_used@@Base+0xa594>  // b.any
  455784:	ldr	x12, [x24, #80]
  455788:	cbz	x12, 455758 <_obstack_memory_used@@Base+0xa594>
  45578c:	ldr	x13, [x12, #8]
  455790:	cmp	x13, x27
  455794:	b.ne	455758 <_obstack_memory_used@@Base+0xa594>  // b.any
  455798:	mov	x13, x8
  45579c:	add	x14, x13, #0x1
  4557a0:	cmp	x14, #0x1
  4557a4:	b.lt	455dd0 <_obstack_memory_used@@Base+0xac0c>  // b.tstop
  4557a8:	ldr	x14, [x12, #16]
  4557ac:	ldr	x15, [x22, #16]
  4557b0:	lsl	x16, x13, #3
  4557b4:	sub	x13, x13, #0x1
  4557b8:	ldr	x14, [x14, x16]
  4557bc:	ldr	x15, [x15, x16]
  4557c0:	cmp	x14, x15
  4557c4:	b.eq	45579c <_obstack_memory_used@@Base+0xa5d8>  // b.none
  4557c8:	b	455758 <_obstack_memory_used@@Base+0xa594>
  4557cc:	mov	w0, #0x70                  	// #112
  4557d0:	mov	w1, #0x1                   	// #1
  4557d4:	bl	4043d0 <calloc@plt>
  4557d8:	cbz	x0, 455e08 <_obstack_memory_used@@Base+0xac44>
  4557dc:	mov	x24, x0
  4557e0:	add	x13, x0, #0x8
  4557e4:	cmp	x27, #0x1
  4557e8:	str	x27, [x0, #16]
  4557ec:	str	x20, [sp, #16]
  4557f0:	stur	x13, [x29, #-8]
  4557f4:	str	x19, [sp, #8]
  4557f8:	b.lt	455834 <_obstack_memory_used@@Base+0xa670>  // b.tstop
  4557fc:	lsl	x25, x27, #3
  455800:	mov	x0, x25
  455804:	str	x27, [x24, #8]
  455808:	bl	404210 <malloc@plt>
  45580c:	str	x0, [x24, #24]
  455810:	cbz	x0, 455e18 <_obstack_memory_used@@Base+0xac54>
  455814:	ldr	x1, [x22, #16]
  455818:	mov	x2, x25
  45581c:	bl	403e80 <memcpy@plt>
  455820:	ldrb	w8, [x24, #104]
  455824:	ldr	x27, [x22, #8]
  455828:	ldur	x13, [x29, #-8]
  45582c:	and	w8, w8, #0xfffffff0
  455830:	b	455840 <_obstack_memory_used@@Base+0xa67c>
  455834:	mov	w8, wzr
  455838:	stp	xzr, xzr, [x13]
  45583c:	str	xzr, [x13, #16]
  455840:	and	w9, w26, #0xf
  455844:	mov	x19, x24
  455848:	orr	w8, w8, w9
  45584c:	strb	w8, [x19, #104]!
  455850:	cmp	x27, #0x1
  455854:	stur	x13, [x19, #-24]
  455858:	b.lt	455dbc <_obstack_memory_used@@Base+0xabf8>  // b.tstop
  45585c:	ldr	x8, [sp, #16]
  455860:	ldr	x25, [x22, #16]
  455864:	mov	x28, xzr
  455868:	stur	w26, [x29, #-12]
  45586c:	ldr	x14, [x8]
  455870:	mov	x8, xzr
  455874:	str	x14, [sp, #24]
  455878:	tbnz	w26, #0, 455b1c <_obstack_memory_used@@Base+0xa958>
  45587c:	tbnz	w26, #1, 4559ec <_obstack_memory_used@@Base+0xa828>
  455880:	mov	w15, #0x1100                	// #4352
  455884:	b	45589c <_obstack_memory_used@@Base+0xa6d8>
  455888:	add	x8, x8, #0x1
  45588c:	ldr	x27, [x22, #8]
  455890:	add	x28, x28, #0x1
  455894:	cmp	x28, x27
  455898:	b.ge	455dbc <_obstack_memory_used@@Base+0xabf8>  // b.tcont
  45589c:	ldr	x9, [x25, x28, lsl #3]
  4558a0:	add	x9, x14, x9, lsl #4
  4558a4:	ldr	w21, [x9, #8]
  4558a8:	and	w9, w21, #0x3ffff
  4558ac:	cmp	w9, #0x1
  4558b0:	b.eq	45588c <_obstack_memory_used@@Base+0xa6c8>  // b.none
  4558b4:	ldrb	w11, [x19]
  4558b8:	lsr	w12, w21, #15
  4558bc:	and	w10, w21, #0xff
  4558c0:	and	w12, w12, #0x20
  4558c4:	and	w9, w21, #0x3ff00
  4558c8:	orr	w20, w11, w12
  4558cc:	cmp	w10, #0x4
  4558d0:	strb	w20, [x19]
  4558d4:	b.eq	4558e8 <_obstack_memory_used@@Base+0xa724>  // b.none
  4558d8:	cmp	w10, #0x2
  4558dc:	b.ne	4558f4 <_obstack_memory_used@@Base+0xa730>  // b.any
  4558e0:	mov	w10, #0x10                  	// #16
  4558e4:	b	4558ec <_obstack_memory_used@@Base+0xa728>
  4558e8:	mov	w10, #0x40                  	// #64
  4558ec:	orr	w20, w20, w10
  4558f0:	strb	w20, [x19]
  4558f4:	cbz	w9, 45588c <_obstack_memory_used@@Base+0xa6c8>
  4558f8:	ldr	x9, [x24, #80]
  4558fc:	cmp	x9, x13
  455900:	b.eq	455910 <_obstack_memory_used@@Base+0xa74c>  // b.none
  455904:	tst	w21, w15
  455908:	b.ne	455990 <_obstack_memory_used@@Base+0xa7cc>  // b.any
  45590c:	b	455988 <_obstack_memory_used@@Base+0xa7c4>
  455910:	mov	w0, #0x18                  	// #24
  455914:	bl	404210 <malloc@plt>
  455918:	str	x0, [x24, #80]
  45591c:	cbz	x0, 455df4 <_obstack_memory_used@@Base+0xac30>
  455920:	mov	x26, x0
  455924:	cmp	x27, #0x0
  455928:	str	x27, [x0, #8]
  45592c:	b.le	45595c <_obstack_memory_used@@Base+0xa798>
  455930:	str	x27, [x26]
  455934:	lsl	x27, x27, #3
  455938:	mov	x0, x27
  45593c:	bl	404210 <malloc@plt>
  455940:	str	x0, [x26, #16]
  455944:	cbz	x0, 455e00 <_obstack_memory_used@@Base+0xac3c>
  455948:	mov	x1, x25
  45594c:	mov	x2, x27
  455950:	bl	403e80 <memcpy@plt>
  455954:	ldrb	w20, [x19]
  455958:	b	455964 <_obstack_memory_used@@Base+0xa7a0>
  45595c:	stp	xzr, xzr, [x26]
  455960:	str	xzr, [x26, #16]
  455964:	ldur	w26, [x29, #-12]
  455968:	ldur	x13, [x29, #-8]
  45596c:	ldr	x14, [sp, #24]
  455970:	mov	x8, xzr
  455974:	orr	w9, w20, #0x80
  455978:	mov	w15, #0x1100                	// #4352
  45597c:	strb	w9, [x19]
  455980:	tst	w21, w15
  455984:	b.ne	455990 <_obstack_memory_used@@Base+0xa7cc>  // b.any
  455988:	tbnz	w26, #2, 45588c <_obstack_memory_used@@Base+0xa6c8>
  45598c:	tbz	w21, #14, 45588c <_obstack_memory_used@@Base+0xa6c8>
  455990:	subs	x9, x28, x8
  455994:	b.mi	455888 <_obstack_memory_used@@Base+0xa6c4>  // b.first
  455998:	ldr	x10, [x24, #16]
  45599c:	cmp	x10, x9
  4559a0:	b.le	455888 <_obstack_memory_used@@Base+0xa6c4>
  4559a4:	sub	x10, x10, #0x1
  4559a8:	cmp	x10, x9
  4559ac:	str	x10, [x24, #16]
  4559b0:	b.le	455888 <_obstack_memory_used@@Base+0xa6c4>
  4559b4:	ldr	x10, [x24, #24]
  4559b8:	add	x11, x10, x9, lsl #3
  4559bc:	ldr	x12, [x11, #8]
  4559c0:	add	x9, x9, #0x1
  4559c4:	str	x12, [x11]
  4559c8:	ldr	x11, [x24, #16]
  4559cc:	cmp	x9, x11
  4559d0:	b.lt	4559b8 <_obstack_memory_used@@Base+0xa7f4>  // b.tstop
  4559d4:	b	455888 <_obstack_memory_used@@Base+0xa6c4>
  4559d8:	add	x8, x8, #0x1
  4559dc:	ldr	x27, [x22, #8]
  4559e0:	add	x28, x28, #0x1
  4559e4:	cmp	x28, x27
  4559e8:	b.ge	455dbc <_obstack_memory_used@@Base+0xabf8>  // b.tcont
  4559ec:	ldr	x9, [x25, x28, lsl #3]
  4559f0:	add	x9, x14, x9, lsl #4
  4559f4:	ldr	w21, [x9, #8]
  4559f8:	and	w9, w21, #0x3ffff
  4559fc:	cmp	w9, #0x1
  455a00:	b.eq	4559dc <_obstack_memory_used@@Base+0xa818>  // b.none
  455a04:	ldrb	w11, [x19]
  455a08:	lsr	w12, w21, #15
  455a0c:	and	w10, w21, #0xff
  455a10:	and	w12, w12, #0x20
  455a14:	and	w9, w21, #0x3ff00
  455a18:	orr	w20, w11, w12
  455a1c:	cmp	w10, #0x4
  455a20:	strb	w20, [x19]
  455a24:	b.eq	455a38 <_obstack_memory_used@@Base+0xa874>  // b.none
  455a28:	cmp	w10, #0x2
  455a2c:	b.ne	455a44 <_obstack_memory_used@@Base+0xa880>  // b.any
  455a30:	mov	w10, #0x10                  	// #16
  455a34:	b	455a3c <_obstack_memory_used@@Base+0xa878>
  455a38:	mov	w10, #0x40                  	// #64
  455a3c:	orr	w20, w20, w10
  455a40:	strb	w20, [x19]
  455a44:	cbz	w9, 4559dc <_obstack_memory_used@@Base+0xa818>
  455a48:	ldr	x9, [x24, #80]
  455a4c:	cmp	x9, x13
  455a50:	b.eq	455a5c <_obstack_memory_used@@Base+0xa898>  // b.none
  455a54:	tbz	w21, #8, 455acc <_obstack_memory_used@@Base+0xa908>
  455a58:	b	455ad4 <_obstack_memory_used@@Base+0xa910>
  455a5c:	mov	w0, #0x18                  	// #24
  455a60:	bl	404210 <malloc@plt>
  455a64:	str	x0, [x24, #80]
  455a68:	cbz	x0, 455df4 <_obstack_memory_used@@Base+0xac30>
  455a6c:	mov	x26, x0
  455a70:	cmp	x27, #0x0
  455a74:	str	x27, [x0, #8]
  455a78:	b.le	455aa8 <_obstack_memory_used@@Base+0xa8e4>
  455a7c:	str	x27, [x26]
  455a80:	lsl	x27, x27, #3
  455a84:	mov	x0, x27
  455a88:	bl	404210 <malloc@plt>
  455a8c:	str	x0, [x26, #16]
  455a90:	cbz	x0, 455e00 <_obstack_memory_used@@Base+0xac3c>
  455a94:	mov	x1, x25
  455a98:	mov	x2, x27
  455a9c:	bl	403e80 <memcpy@plt>
  455aa0:	ldrb	w20, [x19]
  455aa4:	b	455ab0 <_obstack_memory_used@@Base+0xa8ec>
  455aa8:	stp	xzr, xzr, [x26]
  455aac:	str	xzr, [x26, #16]
  455ab0:	ldur	w26, [x29, #-12]
  455ab4:	ldur	x13, [x29, #-8]
  455ab8:	ldr	x14, [sp, #24]
  455abc:	mov	x8, xzr
  455ac0:	orr	w9, w20, #0x80
  455ac4:	strb	w9, [x19]
  455ac8:	tbnz	w21, #8, 455ad4 <_obstack_memory_used@@Base+0xa910>
  455acc:	tbnz	w26, #2, 4559dc <_obstack_memory_used@@Base+0xa818>
  455ad0:	tbz	w21, #14, 4559dc <_obstack_memory_used@@Base+0xa818>
  455ad4:	subs	x9, x28, x8
  455ad8:	b.mi	4559d8 <_obstack_memory_used@@Base+0xa814>  // b.first
  455adc:	ldr	x10, [x24, #16]
  455ae0:	cmp	x10, x9
  455ae4:	b.le	4559d8 <_obstack_memory_used@@Base+0xa814>
  455ae8:	sub	x10, x10, #0x1
  455aec:	cmp	x10, x9
  455af0:	str	x10, [x24, #16]
  455af4:	b.le	4559d8 <_obstack_memory_used@@Base+0xa814>
  455af8:	ldr	x10, [x24, #24]
  455afc:	add	x11, x10, x9, lsl #3
  455b00:	ldr	x12, [x11, #8]
  455b04:	add	x9, x9, #0x1
  455b08:	str	x12, [x11]
  455b0c:	ldr	x11, [x24, #16]
  455b10:	cmp	x9, x11
  455b14:	b.lt	455afc <_obstack_memory_used@@Base+0xa938>  // b.tstop
  455b18:	b	4559d8 <_obstack_memory_used@@Base+0xa814>
  455b1c:	tbnz	w26, #1, 455c8c <_obstack_memory_used@@Base+0xaac8>
  455b20:	mov	w15, #0x1200                	// #4608
  455b24:	b	455b3c <_obstack_memory_used@@Base+0xa978>
  455b28:	add	x8, x8, #0x1
  455b2c:	ldr	x27, [x22, #8]
  455b30:	add	x28, x28, #0x1
  455b34:	cmp	x28, x27
  455b38:	b.ge	455dbc <_obstack_memory_used@@Base+0xabf8>  // b.tcont
  455b3c:	ldr	x9, [x25, x28, lsl #3]
  455b40:	add	x9, x14, x9, lsl #4
  455b44:	ldr	w21, [x9, #8]
  455b48:	and	w9, w21, #0x3ffff
  455b4c:	cmp	w9, #0x1
  455b50:	b.eq	455b2c <_obstack_memory_used@@Base+0xa968>  // b.none
  455b54:	ldrb	w11, [x19]
  455b58:	lsr	w12, w21, #15
  455b5c:	and	w10, w21, #0xff
  455b60:	and	w12, w12, #0x20
  455b64:	and	w9, w21, #0x3ff00
  455b68:	orr	w20, w11, w12
  455b6c:	cmp	w10, #0x4
  455b70:	strb	w20, [x19]
  455b74:	b.eq	455b88 <_obstack_memory_used@@Base+0xa9c4>  // b.none
  455b78:	cmp	w10, #0x2
  455b7c:	b.ne	455b94 <_obstack_memory_used@@Base+0xa9d0>  // b.any
  455b80:	mov	w10, #0x10                  	// #16
  455b84:	b	455b8c <_obstack_memory_used@@Base+0xa9c8>
  455b88:	mov	w10, #0x40                  	// #64
  455b8c:	orr	w20, w20, w10
  455b90:	strb	w20, [x19]
  455b94:	cbz	w9, 455b2c <_obstack_memory_used@@Base+0xa968>
  455b98:	ldr	x9, [x24, #80]
  455b9c:	cmp	x9, x13
  455ba0:	b.eq	455bb0 <_obstack_memory_used@@Base+0xa9ec>  // b.none
  455ba4:	tst	w21, w15
  455ba8:	b.ne	455c30 <_obstack_memory_used@@Base+0xaa6c>  // b.any
  455bac:	b	455c28 <_obstack_memory_used@@Base+0xaa64>
  455bb0:	mov	w0, #0x18                  	// #24
  455bb4:	bl	404210 <malloc@plt>
  455bb8:	str	x0, [x24, #80]
  455bbc:	cbz	x0, 455df4 <_obstack_memory_used@@Base+0xac30>
  455bc0:	mov	x26, x0
  455bc4:	cmp	x27, #0x0
  455bc8:	str	x27, [x0, #8]
  455bcc:	b.le	455bfc <_obstack_memory_used@@Base+0xaa38>
  455bd0:	str	x27, [x26]
  455bd4:	lsl	x27, x27, #3
  455bd8:	mov	x0, x27
  455bdc:	bl	404210 <malloc@plt>
  455be0:	str	x0, [x26, #16]
  455be4:	cbz	x0, 455e00 <_obstack_memory_used@@Base+0xac3c>
  455be8:	mov	x1, x25
  455bec:	mov	x2, x27
  455bf0:	bl	403e80 <memcpy@plt>
  455bf4:	ldrb	w20, [x19]
  455bf8:	b	455c04 <_obstack_memory_used@@Base+0xaa40>
  455bfc:	stp	xzr, xzr, [x26]
  455c00:	str	xzr, [x26, #16]
  455c04:	ldur	w26, [x29, #-12]
  455c08:	ldur	x13, [x29, #-8]
  455c0c:	ldr	x14, [sp, #24]
  455c10:	mov	x8, xzr
  455c14:	orr	w9, w20, #0x80
  455c18:	mov	w15, #0x1200                	// #4608
  455c1c:	strb	w9, [x19]
  455c20:	tst	w21, w15
  455c24:	b.ne	455c30 <_obstack_memory_used@@Base+0xaa6c>  // b.any
  455c28:	tbnz	w26, #2, 455b2c <_obstack_memory_used@@Base+0xa968>
  455c2c:	tbz	w21, #14, 455b2c <_obstack_memory_used@@Base+0xa968>
  455c30:	subs	x9, x28, x8
  455c34:	b.mi	455b28 <_obstack_memory_used@@Base+0xa964>  // b.first
  455c38:	ldr	x10, [x24, #16]
  455c3c:	cmp	x10, x9
  455c40:	b.le	455b28 <_obstack_memory_used@@Base+0xa964>
  455c44:	sub	x10, x10, #0x1
  455c48:	cmp	x10, x9
  455c4c:	str	x10, [x24, #16]
  455c50:	b.le	455b28 <_obstack_memory_used@@Base+0xa964>
  455c54:	ldr	x10, [x24, #24]
  455c58:	add	x11, x10, x9, lsl #3
  455c5c:	ldr	x12, [x11, #8]
  455c60:	add	x9, x9, #0x1
  455c64:	str	x12, [x11]
  455c68:	ldr	x11, [x24, #16]
  455c6c:	cmp	x9, x11
  455c70:	b.lt	455c58 <_obstack_memory_used@@Base+0xaa94>  // b.tstop
  455c74:	b	455b28 <_obstack_memory_used@@Base+0xa964>
  455c78:	add	x8, x8, #0x1
  455c7c:	ldr	x27, [x22, #8]
  455c80:	add	x28, x28, #0x1
  455c84:	cmp	x28, x27
  455c88:	b.ge	455dbc <_obstack_memory_used@@Base+0xabf8>  // b.tcont
  455c8c:	ldr	x9, [x25, x28, lsl #3]
  455c90:	add	x9, x14, x9, lsl #4
  455c94:	ldr	w21, [x9, #8]
  455c98:	and	w9, w21, #0x3ffff
  455c9c:	cmp	w9, #0x1
  455ca0:	b.eq	455c7c <_obstack_memory_used@@Base+0xaab8>  // b.none
  455ca4:	ldrb	w11, [x19]
  455ca8:	lsr	w12, w21, #15
  455cac:	and	w10, w21, #0xff
  455cb0:	and	w12, w12, #0x20
  455cb4:	and	w9, w21, #0x3ff00
  455cb8:	orr	w20, w11, w12
  455cbc:	cmp	w10, #0x2
  455cc0:	strb	w20, [x19]
  455cc4:	b.eq	455cd8 <_obstack_memory_used@@Base+0xab14>  // b.none
  455cc8:	cmp	w10, #0x4
  455ccc:	b.ne	455ce4 <_obstack_memory_used@@Base+0xab20>  // b.any
  455cd0:	mov	w10, #0x40                  	// #64
  455cd4:	b	455cdc <_obstack_memory_used@@Base+0xab18>
  455cd8:	mov	w10, #0x10                  	// #16
  455cdc:	orr	w20, w20, w10
  455ce0:	strb	w20, [x19]
  455ce4:	cbz	w9, 455c7c <_obstack_memory_used@@Base+0xaab8>
  455ce8:	ldr	x9, [x24, #80]
  455cec:	cmp	x9, x13
  455cf0:	b.eq	455cfc <_obstack_memory_used@@Base+0xab38>  // b.none
  455cf4:	tbz	w21, #9, 455d6c <_obstack_memory_used@@Base+0xaba8>
  455cf8:	b	455d74 <_obstack_memory_used@@Base+0xabb0>
  455cfc:	mov	w0, #0x18                  	// #24
  455d00:	bl	404210 <malloc@plt>
  455d04:	str	x0, [x24, #80]
  455d08:	cbz	x0, 455df4 <_obstack_memory_used@@Base+0xac30>
  455d0c:	mov	x26, x0
  455d10:	cmp	x27, #0x1
  455d14:	str	x27, [x0, #8]
  455d18:	b.lt	455d48 <_obstack_memory_used@@Base+0xab84>  // b.tstop
  455d1c:	str	x27, [x26]
  455d20:	lsl	x27, x27, #3
  455d24:	mov	x0, x27
  455d28:	bl	404210 <malloc@plt>
  455d2c:	str	x0, [x26, #16]
  455d30:	cbz	x0, 455e00 <_obstack_memory_used@@Base+0xac3c>
  455d34:	mov	x1, x25
  455d38:	mov	x2, x27
  455d3c:	bl	403e80 <memcpy@plt>
  455d40:	ldrb	w20, [x19]
  455d44:	b	455d50 <_obstack_memory_used@@Base+0xab8c>
  455d48:	stp	xzr, xzr, [x26]
  455d4c:	str	xzr, [x26, #16]
  455d50:	ldur	w26, [x29, #-12]
  455d54:	ldur	x13, [x29, #-8]
  455d58:	ldr	x14, [sp, #24]
  455d5c:	mov	x8, xzr
  455d60:	orr	w9, w20, #0x80
  455d64:	strb	w9, [x19]
  455d68:	tbnz	w21, #9, 455d74 <_obstack_memory_used@@Base+0xabb0>
  455d6c:	tbnz	w26, #2, 455c7c <_obstack_memory_used@@Base+0xaab8>
  455d70:	tbz	w21, #14, 455c7c <_obstack_memory_used@@Base+0xaab8>
  455d74:	subs	x9, x28, x8
  455d78:	b.mi	455c78 <_obstack_memory_used@@Base+0xaab4>  // b.first
  455d7c:	ldr	x10, [x24, #16]
  455d80:	cmp	x10, x9
  455d84:	b.le	455c78 <_obstack_memory_used@@Base+0xaab4>
  455d88:	sub	x10, x10, #0x1
  455d8c:	cmp	x10, x9
  455d90:	str	x10, [x24, #16]
  455d94:	b.le	455c78 <_obstack_memory_used@@Base+0xaab4>
  455d98:	ldr	x10, [x24, #24]
  455d9c:	add	x11, x10, x9, lsl #3
  455da0:	ldr	x12, [x11, #8]
  455da4:	add	x9, x9, #0x1
  455da8:	str	x12, [x11]
  455dac:	ldr	x11, [x24, #16]
  455db0:	cmp	x9, x11
  455db4:	b.lt	455d9c <_obstack_memory_used@@Base+0xabd8>  // b.tstop
  455db8:	b	455c78 <_obstack_memory_used@@Base+0xaab4>
  455dbc:	ldr	x0, [sp, #16]
  455dc0:	mov	x1, x24
  455dc4:	mov	x2, x23
  455dc8:	bl	455e24 <_obstack_memory_used@@Base+0xac60>
  455dcc:	cbnz	w0, 455df4 <_obstack_memory_used@@Base+0xac30>
  455dd0:	mov	x0, x24
  455dd4:	ldp	x20, x19, [sp, #128]
  455dd8:	ldp	x22, x21, [sp, #112]
  455ddc:	ldp	x24, x23, [sp, #96]
  455de0:	ldp	x26, x25, [sp, #80]
  455de4:	ldp	x28, x27, [sp, #64]
  455de8:	ldp	x29, x30, [sp, #48]
  455dec:	add	sp, sp, #0x90
  455df0:	ret
  455df4:	mov	x0, x24
  455df8:	bl	44ff84 <_obstack_memory_used@@Base+0x4dc0>
  455dfc:	b	455e04 <_obstack_memory_used@@Base+0xac40>
  455e00:	stp	xzr, xzr, [x26]
  455e04:	ldr	x19, [sp, #8]
  455e08:	mov	x24, xzr
  455e0c:	mov	w8, #0xc                   	// #12
  455e10:	str	w8, [x19]
  455e14:	b	455dd0 <_obstack_memory_used@@Base+0xac0c>
  455e18:	mov	x0, x24
  455e1c:	bl	4046b0 <free@plt>
  455e20:	b	455e08 <_obstack_memory_used@@Base+0xac44>
  455e24:	stp	x29, x30, [sp, #-64]!
  455e28:	stp	x24, x23, [sp, #16]
  455e2c:	stp	x22, x21, [sp, #32]
  455e30:	stp	x20, x19, [sp, #48]
  455e34:	ldr	x22, [x1, #16]
  455e38:	mov	x21, x0
  455e3c:	mov	x29, sp
  455e40:	mov	x20, x2
  455e44:	lsl	x0, x22, #3
  455e48:	mov	x19, x1
  455e4c:	str	x2, [x1]
  455e50:	stp	x22, xzr, [x1, #32]
  455e54:	bl	404210 <malloc@plt>
  455e58:	str	x0, [x19, #48]
  455e5c:	cbz	x0, 455f60 <_obstack_memory_used@@Base+0xad9c>
  455e60:	cmp	x22, #0x1
  455e64:	b.lt	455ed4 <_obstack_memory_used@@Base+0xad10>  // b.tstop
  455e68:	mov	x23, xzr
  455e6c:	b	455e88 <_obstack_memory_used@@Base+0xacc4>
  455e70:	add	x9, x8, #0x1
  455e74:	str	x9, [x19, #40]
  455e78:	str	x24, [x0, x8, lsl #3]
  455e7c:	add	x23, x23, #0x1
  455e80:	cmp	x23, x22
  455e84:	b.ge	455ed4 <_obstack_memory_used@@Base+0xad10>  // b.tcont
  455e88:	ldr	x8, [x19, #24]
  455e8c:	ldr	x24, [x8, x23, lsl #3]
  455e90:	ldr	x8, [x21]
  455e94:	add	x8, x8, x24, lsl #4
  455e98:	ldrb	w8, [x8, #8]
  455e9c:	tbnz	w8, #3, 455e7c <_obstack_memory_used@@Base+0xacb8>
  455ea0:	ldp	x9, x8, [x19, #32]
  455ea4:	cmp	x9, x8
  455ea8:	b.ne	455e70 <_obstack_memory_used@@Base+0xacac>  // b.any
  455eac:	lsl	x8, x9, #1
  455eb0:	add	x8, x8, #0x2
  455eb4:	lsl	x1, x8, #3
  455eb8:	str	x8, [x19, #32]
  455ebc:	bl	404450 <realloc@plt>
  455ec0:	cbz	x0, 455f60 <_obstack_memory_used@@Base+0xad9c>
  455ec4:	ldr	x8, [x19, #40]
  455ec8:	ldr	x22, [x19, #16]
  455ecc:	str	x0, [x19, #48]
  455ed0:	b	455e70 <_obstack_memory_used@@Base+0xacac>
  455ed4:	ldr	x9, [x21, #136]
  455ed8:	ldr	x8, [x21, #64]
  455edc:	mov	w11, #0x18                  	// #24
  455ee0:	and	x10, x9, x20
  455ee4:	madd	x20, x10, x11, x8
  455ee8:	mov	x21, x20
  455eec:	ldr	x11, [x21, #8]!
  455ef0:	ldr	x9, [x20]
  455ef4:	cmp	x11, x9
  455ef8:	b.le	455f2c <_obstack_memory_used@@Base+0xad68>
  455efc:	mov	w11, #0x18                  	// #24
  455f00:	madd	x8, x10, x11, x8
  455f04:	ldr	x8, [x8, #16]
  455f08:	mov	w0, wzr
  455f0c:	add	x10, x9, #0x1
  455f10:	str	x10, [x20]
  455f14:	str	x19, [x8, x9, lsl #3]
  455f18:	ldp	x20, x19, [sp, #48]
  455f1c:	ldp	x22, x21, [sp, #32]
  455f20:	ldp	x24, x23, [sp, #16]
  455f24:	ldp	x29, x30, [sp], #64
  455f28:	ret
  455f2c:	mov	w11, #0x18                  	// #24
  455f30:	madd	x22, x10, x11, x8
  455f34:	ldr	x0, [x22, #16]!
  455f38:	lsl	x8, x9, #1
  455f3c:	add	x23, x8, #0x2
  455f40:	lsl	x1, x23, #3
  455f44:	bl	404450 <realloc@plt>
  455f48:	cbz	x0, 455f60 <_obstack_memory_used@@Base+0xad9c>
  455f4c:	str	x0, [x22]
  455f50:	str	x23, [x21]
  455f54:	ldr	x9, [x20]
  455f58:	mov	x8, x0
  455f5c:	b	455f08 <_obstack_memory_used@@Base+0xad44>
  455f60:	mov	w0, #0xc                   	// #12
  455f64:	b	455f18 <_obstack_memory_used@@Base+0xad54>
  455f68:	sub	sp, sp, #0x80
  455f6c:	stp	x29, x30, [sp, #32]
  455f70:	stp	x28, x27, [sp, #48]
  455f74:	stp	x26, x25, [sp, #64]
  455f78:	stp	x24, x23, [sp, #80]
  455f7c:	stp	x22, x21, [sp, #96]
  455f80:	stp	x20, x19, [sp, #112]
  455f84:	mov	x24, x0
  455f88:	ldr	x8, [x24, #40]!
  455f8c:	mov	x19, x0
  455f90:	mov	x20, x1
  455f94:	mov	w21, w2
  455f98:	cmp	x8, x1
  455f9c:	add	x29, sp, #0x20
  455fa0:	b.le	456198 <_obstack_memory_used@@Base+0xafd4>
  455fa4:	ldr	w8, [x19, #144]
  455fa8:	cmp	w8, #0x2
  455fac:	b.lt	455fb4 <_obstack_memory_used@@Base+0xadf0>  // b.tstop
  455fb0:	str	xzr, [x19, #32]
  455fb4:	ldr	x9, [x19, #80]
  455fb8:	ldr	x10, [x19, #96]
  455fbc:	strb	wzr, [x19, #140]
  455fc0:	tst	w21, #0x1
  455fc4:	str	x9, [x19, #88]
  455fc8:	str	x10, [x19, #104]
  455fcc:	stp	xzr, xzr, [x24]
  455fd0:	str	xzr, [x24, #16]
  455fd4:	ldrb	w9, [x19, #139]
  455fd8:	mov	w10, #0x4                   	// #4
  455fdc:	mov	w11, #0x6                   	// #6
  455fe0:	mov	x8, xzr
  455fe4:	csel	w10, w11, w10, eq  // eq = none
  455fe8:	mov	x25, x20
  455fec:	str	w10, [x19, #112]
  455ff0:	cbnz	w9, 456004 <_obstack_memory_used@@Base+0xae40>
  455ff4:	ldr	x9, [x19]
  455ff8:	mov	x8, xzr
  455ffc:	mov	x25, x20
  456000:	str	x9, [x19, #8]
  456004:	cbz	x25, 456118 <_obstack_memory_used@@Base+0xaf54>
  456008:	ldr	x9, [x19, #56]
  45600c:	cmp	x25, x9
  456010:	b.ge	4561a4 <_obstack_memory_used@@Base+0xafe0>  // b.tcont
  456014:	ldrb	w8, [x19, #140]
  456018:	cbnz	w8, 456318 <_obstack_memory_used@@Base+0xb154>
  45601c:	cmp	x25, #0x0
  456020:	b.le	456064 <_obstack_memory_used@@Base+0xaea0>
  456024:	ldr	x9, [x19, #88]
  456028:	sub	x8, x25, #0x1
  45602c:	cmp	x9, x8
  456030:	b.eq	4563d8 <_obstack_memory_used@@Base+0xb214>  // b.none
  456034:	ldr	w9, [x19, #144]
  456038:	cmp	w9, #0x2
  45603c:	b.lt	45606c <_obstack_memory_used@@Base+0xaea8>  // b.tstop
  456040:	ldr	x8, [x19, #16]
  456044:	mov	x9, x25
  456048:	sub	x8, x8, #0x4
  45604c:	ldr	w21, [x8, x9, lsl #2]
  456050:	cmn	w21, #0x1
  456054:	b.ne	456094 <_obstack_memory_used@@Base+0xaed0>  // b.any
  456058:	sub	x9, x9, #0x1
  45605c:	cmp	x9, #0x0
  456060:	b.gt	45604c <_obstack_memory_used@@Base+0xae88>
  456064:	ldr	w8, [x19, #112]
  456068:	b	4560c4 <_obstack_memory_used@@Base+0xaf00>
  45606c:	ldr	x9, [x19, #8]
  456070:	ldrb	w8, [x9, x8]
  456074:	ldr	x9, [x19, #128]
  456078:	lsr	x10, x8, #3
  45607c:	and	x10, x10, #0x18
  456080:	ldr	x9, [x9, x10]
  456084:	lsr	x9, x9, x8
  456088:	tbz	w9, #0, 4560b8 <_obstack_memory_used@@Base+0xaef4>
  45608c:	mov	w8, #0x1                   	// #1
  456090:	b	4560c4 <_obstack_memory_used@@Base+0xaf00>
  456094:	ldrb	w8, [x19, #142]
  456098:	cbnz	w8, 4564a0 <_obstack_memory_used@@Base+0xb2dc>
  45609c:	cmp	w21, #0xa
  4560a0:	b.ne	4560c0 <_obstack_memory_used@@Base+0xaefc>  // b.any
  4560a4:	ldrb	w8, [x19, #141]
  4560a8:	cmp	w8, #0x0
  4560ac:	cset	w8, ne  // ne = any
  4560b0:	lsl	w8, w8, #1
  4560b4:	b	4560c4 <_obstack_memory_used@@Base+0xaf00>
  4560b8:	cmp	w8, #0xa
  4560bc:	b.eq	4560a4 <_obstack_memory_used@@Base+0xaee0>  // b.none
  4560c0:	mov	w8, wzr
  4560c4:	ldr	w9, [x19, #144]
  4560c8:	str	w8, [x19, #112]
  4560cc:	cmp	w9, #0x2
  4560d0:	b.lt	4560ec <_obstack_memory_used@@Base+0xaf28>  // b.tstop
  4560d4:	ldr	x8, [x19, #48]
  4560d8:	ldr	x0, [x19, #16]
  4560dc:	sub	x8, x8, x25
  4560e0:	add	x1, x0, x25, lsl #2
  4560e4:	lsl	x2, x8, #2
  4560e8:	bl	403e90 <memmove@plt>
  4560ec:	ldrb	w8, [x19, #139]
  4560f0:	cbnz	w8, 4563c0 <_obstack_memory_used@@Base+0xb1fc>
  4560f4:	ldr	q0, [x19, #48]
  4560f8:	dup	v1.2d, x25
  4560fc:	sub	v0.2d, v0.2d, v1.2d
  456100:	str	q0, [x19, #48]
  456104:	ldrb	w8, [x19, #139]
  456108:	cbnz	w8, 456118 <_obstack_memory_used@@Base+0xaf54>
  45610c:	ldr	x8, [x19, #8]
  456110:	add	x8, x8, x25
  456114:	str	x8, [x19, #8]
  456118:	ldr	x8, [x19, #88]
  45611c:	ldr	x10, [x19, #104]
  456120:	ldr	w11, [x19, #144]
  456124:	str	x20, [x19, #40]
  456128:	sub	x9, x8, x25
  45612c:	sub	x8, x10, x25
  456130:	cmp	w11, #0x2
  456134:	str	x9, [x19, #88]
  456138:	str	x8, [x19, #104]
  45613c:	b.lt	456158 <_obstack_memory_used@@Base+0xaf94>  // b.tstop
  456140:	ldrb	w8, [x19, #136]
  456144:	cbz	w8, 456168 <_obstack_memory_used@@Base+0xafa4>
  456148:	mov	x0, x19
  45614c:	bl	44ffec <_obstack_memory_used@@Base+0x4e28>
  456150:	cbnz	w0, 456178 <_obstack_memory_used@@Base+0xafb4>
  456154:	b	456170 <_obstack_memory_used@@Base+0xafac>
  456158:	ldrb	w8, [x19, #139]
  45615c:	cbnz	w8, 4563e8 <_obstack_memory_used@@Base+0xb224>
  456160:	str	x9, [x19, #48]
  456164:	b	456170 <_obstack_memory_used@@Base+0xafac>
  456168:	mov	x0, x19
  45616c:	bl	4506b4 <_obstack_memory_used@@Base+0x54f0>
  456170:	mov	w0, wzr
  456174:	str	xzr, [x19, #72]
  456178:	ldp	x20, x19, [sp, #112]
  45617c:	ldp	x22, x21, [sp, #96]
  456180:	ldp	x24, x23, [sp, #80]
  456184:	ldp	x26, x25, [sp, #64]
  456188:	ldp	x28, x27, [sp, #48]
  45618c:	ldp	x29, x30, [sp, #32]
  456190:	add	sp, sp, #0x80
  456194:	ret
  456198:	sub	x25, x20, x8
  45619c:	cbnz	x25, 456008 <_obstack_memory_used@@Base+0xae44>
  4561a0:	b	456118 <_obstack_memory_used@@Base+0xaf54>
  4561a4:	ldrb	w10, [x19, #140]
  4561a8:	ldr	x26, [x19, #48]
  4561ac:	cbnz	w10, 456750 <_obstack_memory_used@@Base+0xb58c>
  4561b0:	ldr	w10, [x19, #144]
  4561b4:	str	xzr, [x19, #48]
  4561b8:	cmp	w10, #0x2
  4561bc:	b.lt	456780 <_obstack_memory_used@@Base+0xb5bc>  // b.tstop
  4561c0:	ldrb	w11, [x19, #137]
  4561c4:	cbz	w11, 45626c <_obstack_memory_used@@Base+0xb0a8>
  4561c8:	ldr	x13, [x19]
  4561cc:	sub	x10, x25, x10
  4561d0:	add	x11, x13, x8
  4561d4:	add	x10, x11, x10
  4561d8:	cmp	x10, x13
  4561dc:	add	x22, x11, x25
  4561e0:	csel	x12, x13, x10, cc  // cc = lo, ul, last
  4561e4:	add	x10, x13, x25
  4561e8:	add	x13, x10, x8
  4561ec:	sub	x13, x13, #0x1
  4561f0:	cmp	x13, x12
  4561f4:	b.cc	45626c <_obstack_memory_used@@Base+0xb0a8>  // b.lo, b.ul, b.last
  4561f8:	ldrb	w13, [x13]
  4561fc:	sub	x10, x10, #0x1
  456200:	and	w13, w13, #0xc0
  456204:	cmp	w13, #0x80
  456208:	b.eq	4561e8 <_obstack_memory_used@@Base+0xb024>  // b.none
  45620c:	ldr	x12, [x19, #88]
  456210:	ldr	x9, [x19, #120]
  456214:	add	x23, x10, x8
  456218:	mov	x1, x23
  45621c:	add	x11, x11, x12
  456220:	sub	x2, x11, x23
  456224:	cbnz	x9, 45687c <_obstack_memory_used@@Base+0xb6b8>
  456228:	sub	x0, x29, #0xc
  45622c:	sub	x3, x29, #0x8
  456230:	stur	xzr, [x29, #-8]
  456234:	bl	44addc <argp_parse@@Base+0x10730>
  456238:	sub	x8, x22, x23
  45623c:	subs	x8, x0, x8
  456240:	mov	w9, #0xffffffff            	// #-1
  456244:	b.cc	45625c <_obstack_memory_used@@Base+0xb098>  // b.lo, b.ul, b.last
  456248:	cmn	x0, #0x3
  45624c:	b.hi	45625c <_obstack_memory_used@@Base+0xb098>  // b.pmore
  456250:	str	xzr, [x19, #32]
  456254:	str	x8, [x19, #48]
  456258:	ldur	w9, [x29, #-12]
  45625c:	cmn	w9, #0x1
  456260:	b.ne	4562f4 <_obstack_memory_used@@Base+0xb130>  // b.any
  456264:	ldr	x8, [x19, #40]
  456268:	ldr	x9, [x19, #56]
  45626c:	add	x27, x9, x8
  456270:	subs	x8, x27, x20
  456274:	b.ge	4564bc <_obstack_memory_used@@Base+0xb2f8>  // b.tcont
  456278:	add	x22, x19, #0x20
  45627c:	ldr	x8, [x19, #80]
  456280:	ldr	x9, [x19]
  456284:	ldr	x28, [x19, #32]
  456288:	sub	x0, x29, #0x8
  45628c:	sub	x23, x8, x27
  456290:	add	x1, x9, x27
  456294:	mov	x2, x23
  456298:	mov	x3, x22
  45629c:	bl	44addc <argp_parse@@Base+0x10730>
  4562a0:	sub	x8, x0, #0x1
  4562a4:	cmn	x8, #0x3
  4562a8:	b.cs	4562c0 <_obstack_memory_used@@Base+0xb0fc>  // b.hs, b.nlast
  4562ac:	ldur	w9, [x29, #-8]
  4562b0:	add	x27, x0, x27
  4562b4:	subs	x8, x27, x20
  4562b8:	b.lt	45627c <_obstack_memory_used@@Base+0xb0b8>  // b.tstop
  4562bc:	b	4562e8 <_obstack_memory_used@@Base+0xb124>
  4562c0:	mov	w9, wzr
  4562c4:	cbz	x23, 4562d4 <_obstack_memory_used@@Base+0xb110>
  4562c8:	cbz	x0, 4562d4 <_obstack_memory_used@@Base+0xb110>
  4562cc:	ldr	x8, [x19]
  4562d0:	ldrb	w9, [x8, x27]
  4562d4:	str	x28, [x22]
  4562d8:	mov	w0, #0x1                   	// #1
  4562dc:	add	x27, x0, x27
  4562e0:	subs	x8, x27, x20
  4562e4:	b.lt	45627c <_obstack_memory_used@@Base+0xb0b8>  // b.tstop
  4562e8:	cmn	w9, #0x1
  4562ec:	str	x8, [x19, #48]
  4562f0:	b.eq	4564c0 <_obstack_memory_used@@Base+0xb2fc>  // b.none
  4562f4:	ldrb	w8, [x19, #142]
  4562f8:	cbnz	w8, 456858 <_obstack_memory_used@@Base+0xb694>
  4562fc:	cmp	w9, #0xa
  456300:	b.ne	456728 <_obstack_memory_used@@Base+0xb564>  // b.any
  456304:	ldrb	w8, [x19, #141]
  456308:	cmp	w8, #0x0
  45630c:	cset	w8, ne  // ne = any
  456310:	lsl	w8, w8, #1
  456314:	b	45672c <_obstack_memory_used@@Base+0xb568>
  456318:	ldr	x10, [x19, #48]
  45631c:	ldr	x9, [x19, #24]
  456320:	mov	x11, xzr
  456324:	b	456334 <_obstack_memory_used@@Base+0xb170>
  456328:	cmp	x11, x13
  45632c:	mov	x10, x13
  456330:	b.ge	456364 <_obstack_memory_used@@Base+0xb1a0>  // b.tcont
  456334:	add	x8, x11, x10
  456338:	cmp	x8, #0x0
  45633c:	cinc	x8, x8, lt  // lt = tstop
  456340:	asr	x8, x8, #1
  456344:	ldr	x12, [x9, x8, lsl #3]
  456348:	mov	x13, x8
  45634c:	cmp	x12, x25
  456350:	b.gt	456328 <_obstack_memory_used@@Base+0xb164>
  456354:	b.ge	456364 <_obstack_memory_used@@Base+0xb1a0>  // b.tcont
  456358:	add	x11, x8, #0x1
  45635c:	mov	x13, x10
  456360:	b	456328 <_obstack_memory_used@@Base+0xb164>
  456364:	cmp	x12, x25
  456368:	cinc	x22, x8, lt  // lt = tstop
  45636c:	cset	w9, lt  // lt = tstop
  456370:	cmp	x22, #0x0
  456374:	b.le	4563b8 <_obstack_memory_used@@Base+0xb1f4>
  456378:	ldr	x11, [x19, #88]
  45637c:	sub	x10, x22, #0x1
  456380:	cmp	x11, x10
  456384:	b.eq	4567e8 <_obstack_memory_used@@Base+0xb624>  // b.none
  456388:	ldr	w11, [x19, #144]
  45638c:	cmp	w11, #0x2
  456390:	b.lt	45644c <_obstack_memory_used@@Base+0xb288>  // b.tstop
  456394:	ldr	x10, [x19, #16]
  456398:	add	x8, x9, x8
  45639c:	sub	x9, x10, #0x4
  4563a0:	ldr	w21, [x9, x8, lsl #2]
  4563a4:	cmn	w21, #0x1
  4563a8:	b.ne	45647c <_obstack_memory_used@@Base+0xb2b8>  // b.any
  4563ac:	sub	x8, x8, #0x1
  4563b0:	cmp	x8, #0x0
  4563b4:	b.gt	4563a0 <_obstack_memory_used@@Base+0xb1dc>
  4563b8:	ldr	w9, [x19, #112]
  4563bc:	b	456588 <_obstack_memory_used@@Base+0xb3c4>
  4563c0:	ldr	x0, [x19, #8]
  4563c4:	ldr	x8, [x19, #48]
  4563c8:	add	x1, x0, x25
  4563cc:	sub	x2, x8, x25
  4563d0:	bl	403e90 <memmove@plt>
  4563d4:	b	4560f4 <_obstack_memory_used@@Base+0xaf30>
  4563d8:	and	w8, w21, #0x2
  4563dc:	mov	w9, #0xa                   	// #10
  4563e0:	eor	w8, w8, w9
  4563e4:	b	4560c4 <_obstack_memory_used@@Base+0xaf00>
  4563e8:	ldrb	w8, [x19, #136]
  4563ec:	cbz	w8, 45650c <_obstack_memory_used@@Base+0xb348>
  4563f0:	ldr	x8, [x19, #64]
  4563f4:	ldr	x21, [x19, #48]
  4563f8:	cmp	x8, x9
  4563fc:	csel	x22, x9, x8, gt
  456400:	cmp	x21, x22
  456404:	b.ge	456474 <_obstack_memory_used@@Base+0xb2b0>  // b.tcont
  456408:	bl	404460 <__ctype_toupper_loc@plt>
  45640c:	ldr	x8, [x19]
  456410:	ldr	x9, [x19, #120]
  456414:	add	x8, x8, x20
  456418:	ldrb	w8, [x8, x21]
  45641c:	cbnz	x9, 456444 <_obstack_memory_used@@Base+0xb280>
  456420:	ldr	x9, [x0]
  456424:	ldr	x10, [x19, #8]
  456428:	ldr	w8, [x9, w8, uxtw #2]
  45642c:	strb	w8, [x10, x21]
  456430:	add	x21, x21, #0x1
  456434:	cmp	x21, x22
  456438:	b.ge	456474 <_obstack_memory_used@@Base+0xb2b0>  // b.tcont
  45643c:	ldr	x20, [x24]
  456440:	b	45640c <_obstack_memory_used@@Base+0xb248>
  456444:	ldrb	w8, [x9, x8]
  456448:	b	456420 <_obstack_memory_used@@Base+0xb25c>
  45644c:	ldr	x8, [x19, #8]
  456450:	ldr	x9, [x19, #128]
  456454:	ldrb	w8, [x8, x10]
  456458:	lsr	x10, x8, #3
  45645c:	and	x10, x10, #0x18
  456460:	ldr	x9, [x9, x10]
  456464:	lsr	x9, x9, x8
  456468:	tbz	w9, #0, 45657c <_obstack_memory_used@@Base+0xb3b8>
  45646c:	mov	w9, #0x1                   	// #1
  456470:	b	456588 <_obstack_memory_used@@Base+0xb3c4>
  456474:	stp	x21, x21, [x19, #48]
  456478:	b	456170 <_obstack_memory_used@@Base+0xafac>
  45647c:	ldrb	w8, [x19, #142]
  456480:	cbnz	w8, 45683c <_obstack_memory_used@@Base+0xb678>
  456484:	cmp	w21, #0xa
  456488:	b.ne	456584 <_obstack_memory_used@@Base+0xb3c0>  // b.any
  45648c:	ldrb	w8, [x19, #141]
  456490:	cmp	w8, #0x0
  456494:	cset	w8, ne  // ne = any
  456498:	lsl	w9, w8, #1
  45649c:	b	456588 <_obstack_memory_used@@Base+0xb3c4>
  4564a0:	mov	w0, w21
  4564a4:	bl	404880 <iswalnum@plt>
  4564a8:	cmp	w21, #0x5f
  4564ac:	mov	w8, #0x1                   	// #1
  4564b0:	b.eq	4560c4 <_obstack_memory_used@@Base+0xaf00>  // b.none
  4564b4:	cbz	w0, 45609c <_obstack_memory_used@@Base+0xaed8>
  4564b8:	b	4560c4 <_obstack_memory_used@@Base+0xaf00>
  4564bc:	str	x8, [x19, #48]
  4564c0:	cmp	x26, #0x0
  4564c4:	b.le	456504 <_obstack_memory_used@@Base+0xb340>
  4564c8:	ldr	x9, [x19, #88]
  4564cc:	sub	x8, x26, #0x1
  4564d0:	cmp	x9, x8
  4564d4:	b.eq	45682c <_obstack_memory_used@@Base+0xb668>  // b.none
  4564d8:	ldr	w9, [x19, #144]
  4564dc:	cmp	w9, #0x2
  4564e0:	b.lt	4566e4 <_obstack_memory_used@@Base+0xb520>  // b.tstop
  4564e4:	ldr	x8, [x19, #16]
  4564e8:	sub	x8, x8, #0x4
  4564ec:	ldr	w21, [x8, x26, lsl #2]
  4564f0:	cmn	w21, #0x1
  4564f4:	b.ne	456718 <_obstack_memory_used@@Base+0xb554>  // b.any
  4564f8:	sub	x26, x26, #0x1
  4564fc:	cmp	x26, #0x0
  456500:	b.gt	4564ec <_obstack_memory_used@@Base+0xb328>
  456504:	ldr	w8, [x19, #112]
  456508:	b	45672c <_obstack_memory_used@@Base+0xb568>
  45650c:	ldr	x10, [x19, #120]
  456510:	cbz	x10, 456170 <_obstack_memory_used@@Base+0xafac>
  456514:	ldr	x11, [x19, #64]
  456518:	ldr	x8, [x19, #48]
  45651c:	cmp	x11, x9
  456520:	csel	x9, x9, x11, gt
  456524:	cmp	x8, x9
  456528:	b.ge	456574 <_obstack_memory_used@@Base+0xb3b0>  // b.tcont
  45652c:	ldp	x11, x13, [x19]
  456530:	add	x12, x8, x20
  456534:	ldrb	w11, [x11, x12]
  456538:	ldrb	w10, [x10, x11]
  45653c:	strb	w10, [x13, x8]
  456540:	add	x8, x8, #0x1
  456544:	cmp	x8, x9
  456548:	b.ge	456574 <_obstack_memory_used@@Base+0xb3b0>  // b.tcont
  45654c:	ldr	x10, [x19, #40]
  456550:	ldp	x11, x13, [x19]
  456554:	ldr	x12, [x19, #120]
  456558:	add	x10, x11, x10
  45655c:	ldrb	w10, [x10, x8]
  456560:	ldrb	w10, [x12, x10]
  456564:	strb	w10, [x13, x8]
  456568:	add	x8, x8, #0x1
  45656c:	cmp	x8, x9
  456570:	b.lt	45654c <_obstack_memory_used@@Base+0xb388>  // b.tstop
  456574:	stp	x8, x8, [x19, #48]
  456578:	b	456170 <_obstack_memory_used@@Base+0xafac>
  45657c:	cmp	w8, #0xa
  456580:	b.eq	45648c <_obstack_memory_used@@Base+0xb2c8>  // b.none
  456584:	mov	w9, wzr
  456588:	ldr	x8, [x19, #48]
  45658c:	cmp	x22, x25
  456590:	str	w9, [x19, #112]
  456594:	b.ne	456620 <_obstack_memory_used@@Base+0xb45c>  // b.any
  456598:	subs	x9, x8, x25
  45659c:	b.le	456620 <_obstack_memory_used@@Base+0xb45c>
  4565a0:	ldr	x10, [x19, #24]
  4565a4:	ldr	x10, [x10, x25, lsl #3]
  4565a8:	cmp	x10, x25
  4565ac:	b.ne	456620 <_obstack_memory_used@@Base+0xb45c>  // b.any
  4565b0:	ldr	x0, [x19, #16]
  4565b4:	lsl	x2, x9, #2
  4565b8:	add	x1, x0, x25, lsl #2
  4565bc:	bl	403e90 <memmove@plt>
  4565c0:	ldr	x0, [x19, #8]
  4565c4:	ldr	x8, [x19, #48]
  4565c8:	add	x1, x0, x25
  4565cc:	sub	x2, x8, x25
  4565d0:	bl	403e90 <memmove@plt>
  4565d4:	ldr	q0, [x19, #48]
  4565d8:	dup	v1.2d, x25
  4565dc:	sub	v0.2d, v0.2d, v1.2d
  4565e0:	fmov	x8, d0
  4565e4:	cmp	x8, #0x1
  4565e8:	str	q0, [x19, #48]
  4565ec:	b.lt	456104 <_obstack_memory_used@@Base+0xaf40>  // b.tstop
  4565f0:	ldr	x9, [x19, #24]
  4565f4:	mov	x8, xzr
  4565f8:	add	x10, x9, x25, lsl #3
  4565fc:	lsl	x11, x8, #3
  456600:	ldr	x12, [x10, x11]
  456604:	add	x8, x8, #0x1
  456608:	sub	x12, x12, x25
  45660c:	str	x12, [x9, x11]
  456610:	ldr	x11, [x19, #48]
  456614:	cmp	x8, x11
  456618:	b.lt	4565fc <_obstack_memory_used@@Base+0xb438>  // b.tstop
  45661c:	b	456104 <_obstack_memory_used@@Base+0xaf40>
  456620:	ldr	x9, [x19, #80]
  456624:	ldr	x10, [x19, #96]
  456628:	sub	x11, x25, x20
  45662c:	strb	wzr, [x19, #140]
  456630:	add	x9, x11, x9
  456634:	add	x10, x11, x10
  456638:	str	x9, [x19, #88]
  45663c:	str	x10, [x19, #104]
  456640:	mov	x9, x22
  456644:	subs	x22, x22, #0x1
  456648:	b.lt	456660 <_obstack_memory_used@@Base+0xb49c>  // b.tstop
  45664c:	ldr	x10, [x19, #24]
  456650:	add	x10, x10, x9, lsl #3
  456654:	ldur	x10, [x10, #-8]
  456658:	cmp	x10, x25
  45665c:	b.eq	456640 <_obstack_memory_used@@Base+0xb47c>  // b.none
  456660:	cmp	x9, x8
  456664:	b.ge	456688 <_obstack_memory_used@@Base+0xb4c4>  // b.tcont
  456668:	ldr	x10, [x19, #16]
  45666c:	ldr	w11, [x10, x9, lsl #2]
  456670:	cmn	w11, #0x1
  456674:	b.ne	456688 <_obstack_memory_used@@Base+0xb4c4>  // b.any
  456678:	add	x9, x9, #0x1
  45667c:	cmp	x8, x9
  456680:	b.ne	45666c <_obstack_memory_used@@Base+0xb4a8>  // b.any
  456684:	b	456690 <_obstack_memory_used@@Base+0xb4cc>
  456688:	cmp	x9, x8
  45668c:	b.ne	45669c <_obstack_memory_used@@Base+0xb4d8>  // b.any
  456690:	mov	x8, xzr
  456694:	stp	xzr, xzr, [x19, #48]
  456698:	b	456104 <_obstack_memory_used@@Base+0xaf40>
  45669c:	ldr	x8, [x19, #24]
  4566a0:	ldr	x8, [x8, x9, lsl #3]
  4566a4:	subs	x21, x8, x25
  4566a8:	str	x21, [x19, #48]
  4566ac:	b.eq	45670c <_obstack_memory_used@@Base+0xb548>  // b.none
  4566b0:	cmp	x21, #0x1
  4566b4:	b.lt	4566c8 <_obstack_memory_used@@Base+0xb504>  // b.tstop
  4566b8:	ldr	x0, [x19, #16]
  4566bc:	lsl	x2, x21, #2
  4566c0:	mov	w1, #0xff                  	// #255
  4566c4:	bl	404320 <memset@plt>
  4566c8:	ldr	x0, [x19, #8]
  4566cc:	mov	w1, #0xff                  	// #255
  4566d0:	mov	x2, x21
  4566d4:	bl	404320 <memset@plt>
  4566d8:	ldr	x8, [x19, #48]
  4566dc:	str	x8, [x19, #56]
  4566e0:	b	456104 <_obstack_memory_used@@Base+0xaf40>
  4566e4:	ldr	x9, [x19, #8]
  4566e8:	ldrb	w8, [x9, x8]
  4566ec:	ldr	x9, [x19, #128]
  4566f0:	lsr	x10, x8, #3
  4566f4:	and	x10, x10, #0x18
  4566f8:	ldr	x9, [x9, x10]
  4566fc:	lsr	x9, x9, x8
  456700:	tbz	w9, #0, 456744 <_obstack_memory_used@@Base+0xb580>
  456704:	mov	w8, #0x1                   	// #1
  456708:	b	45672c <_obstack_memory_used@@Base+0xb568>
  45670c:	mov	x8, xzr
  456710:	str	xzr, [x19, #56]
  456714:	b	456104 <_obstack_memory_used@@Base+0xaf40>
  456718:	ldrb	w8, [x19, #142]
  45671c:	cbnz	w8, 4568c0 <_obstack_memory_used@@Base+0xb6fc>
  456720:	cmp	w21, #0xa
  456724:	b.eq	456304 <_obstack_memory_used@@Base+0xb140>  // b.none
  456728:	mov	w8, wzr
  45672c:	ldr	x21, [x19, #48]
  456730:	str	w8, [x19, #112]
  456734:	cbnz	x21, 4567f8 <_obstack_memory_used@@Base+0xb634>
  456738:	ldr	x8, [x19, #48]
  45673c:	str	x8, [x19, #56]
  456740:	b	456104 <_obstack_memory_used@@Base+0xaf40>
  456744:	cmp	w8, #0xa
  456748:	b.ne	456728 <_obstack_memory_used@@Base+0xb564>  // b.any
  45674c:	b	456304 <_obstack_memory_used@@Base+0xb140>
  456750:	ldr	x10, [x19, #80]
  456754:	ldr	x11, [x19, #96]
  456758:	sub	x12, x25, x20
  45675c:	strb	wzr, [x19, #140]
  456760:	add	x10, x12, x10
  456764:	add	x11, x12, x11
  456768:	str	x10, [x19, #88]
  45676c:	str	x11, [x19, #104]
  456770:	ldr	w10, [x19, #144]
  456774:	str	xzr, [x19, #48]
  456778:	cmp	w10, #0x2
  45677c:	b.ge	4561c0 <_obstack_memory_used@@Base+0xaffc>  // b.tcont
  456780:	ldr	x9, [x19]
  456784:	add	x8, x25, x8
  456788:	add	x8, x8, x9
  45678c:	ldr	x9, [x19, #120]
  456790:	ldurb	w8, [x8, #-1]
  456794:	str	xzr, [x19, #56]
  456798:	cbz	x9, 4567a0 <_obstack_memory_used@@Base+0xb5dc>
  45679c:	ldrb	w8, [x9, x8]
  4567a0:	ldr	x9, [x19, #128]
  4567a4:	lsr	x10, x8, #3
  4567a8:	and	x10, x10, #0x18
  4567ac:	ldr	x9, [x9, x10]
  4567b0:	lsr	x9, x9, x8
  4567b4:	tbz	w9, #0, 4567c0 <_obstack_memory_used@@Base+0xb5fc>
  4567b8:	mov	w8, #0x1                   	// #1
  4567bc:	b	4567e0 <_obstack_memory_used@@Base+0xb61c>
  4567c0:	cmp	w8, #0xa
  4567c4:	b.ne	4567dc <_obstack_memory_used@@Base+0xb618>  // b.any
  4567c8:	ldrb	w8, [x19, #141]
  4567cc:	cmp	w8, #0x0
  4567d0:	cset	w8, ne  // ne = any
  4567d4:	lsl	w8, w8, #1
  4567d8:	b	4567e0 <_obstack_memory_used@@Base+0xb61c>
  4567dc:	mov	w8, wzr
  4567e0:	str	w8, [x19, #112]
  4567e4:	b	456104 <_obstack_memory_used@@Base+0xaf40>
  4567e8:	and	w8, w21, #0x2
  4567ec:	mov	w9, #0xa                   	// #10
  4567f0:	eor	w9, w8, w9
  4567f4:	b	456588 <_obstack_memory_used@@Base+0xb3c4>
  4567f8:	cmp	x21, #0x1
  4567fc:	b.lt	456810 <_obstack_memory_used@@Base+0xb64c>  // b.tstop
  456800:	ldr	x0, [x19, #16]
  456804:	lsl	x2, x21, #2
  456808:	mov	w1, #0xff                  	// #255
  45680c:	bl	404320 <memset@plt>
  456810:	ldrb	w8, [x19, #139]
  456814:	cbz	w8, 456738 <_obstack_memory_used@@Base+0xb574>
  456818:	ldr	x0, [x19, #8]
  45681c:	mov	w1, #0xff                  	// #255
  456820:	mov	x2, x21
  456824:	bl	404320 <memset@plt>
  456828:	b	456738 <_obstack_memory_used@@Base+0xb574>
  45682c:	and	w8, w21, #0x2
  456830:	mov	w9, #0xa                   	// #10
  456834:	eor	w8, w8, w9
  456838:	b	45672c <_obstack_memory_used@@Base+0xb568>
  45683c:	mov	w0, w21
  456840:	bl	404880 <iswalnum@plt>
  456844:	cmp	w21, #0x5f
  456848:	mov	w9, #0x1                   	// #1
  45684c:	b.eq	456588 <_obstack_memory_used@@Base+0xb3c4>  // b.none
  456850:	cbz	w0, 456484 <_obstack_memory_used@@Base+0xb2c0>
  456854:	b	456588 <_obstack_memory_used@@Base+0xb3c4>
  456858:	mov	w0, w9
  45685c:	mov	w21, w9
  456860:	bl	404880 <iswalnum@plt>
  456864:	cmp	w21, #0x5f
  456868:	mov	w8, #0x1                   	// #1
  45686c:	b.eq	45672c <_obstack_memory_used@@Base+0xb568>  // b.none
  456870:	mov	w9, w21
  456874:	cbz	w0, 4562fc <_obstack_memory_used@@Base+0xb138>
  456878:	b	45672c <_obstack_memory_used@@Base+0xb568>
  45687c:	cmp	x2, #0x6
  456880:	mov	w11, #0x6                   	// #6
  456884:	csel	x11, x2, x11, lt  // lt = tstop
  456888:	cmp	w11, #0x1
  45688c:	add	x1, sp, #0xc
  456890:	b.lt	456228 <_obstack_memory_used@@Base+0xb064>  // b.tstop
  456894:	sxtw	x11, w11
  456898:	sub	x12, x1, #0x1
  45689c:	add	x13, x8, x11
  4568a0:	add	x13, x10, x13
  4568a4:	ldurb	w13, [x13, #-1]
  4568a8:	add	x1, sp, #0xc
  4568ac:	ldrb	w13, [x9, x13]
  4568b0:	strb	w13, [x12, x11]
  4568b4:	subs	x11, x11, #0x1
  4568b8:	b.gt	45689c <_obstack_memory_used@@Base+0xb6d8>
  4568bc:	b	456228 <_obstack_memory_used@@Base+0xb064>
  4568c0:	mov	w0, w21
  4568c4:	bl	404880 <iswalnum@plt>
  4568c8:	cmp	w21, #0x5f
  4568cc:	mov	w8, #0x1                   	// #1
  4568d0:	b.eq	45672c <_obstack_memory_used@@Base+0xb568>  // b.none
  4568d4:	cbz	w0, 456720 <_obstack_memory_used@@Base+0xb55c>
  4568d8:	b	45672c <_obstack_memory_used@@Base+0xb568>
  4568dc:	stp	x29, x30, [sp, #-32]!
  4568e0:	stp	x20, x19, [sp, #16]
  4568e4:	mov	x8, x2
  4568e8:	ldr	w2, [x0, #160]
  4568ec:	mov	x20, x1
  4568f0:	mov	x1, x8
  4568f4:	mov	x29, sp
  4568f8:	mov	x19, x0
  4568fc:	bl	4575f0 <_obstack_memory_used@@Base+0xc42c>
  456900:	ldr	x9, [x20, #16]
  456904:	cmp	x9, #0x1
  456908:	b.lt	456a30 <_obstack_memory_used@@Base+0xb86c>  // b.tstop
  45690c:	ldr	x8, [x19, #152]
  456910:	ldr	x10, [x20, #24]
  456914:	mov	x12, xzr
  456918:	ldr	x11, [x8]
  45691c:	tbnz	w0, #0, 4569a8 <_obstack_memory_used@@Base+0xb7e4>
  456920:	tbnz	w0, #1, 456978 <_obstack_memory_used@@Base+0xb7b4>
  456924:	mov	w13, #0x2400                	// #9216
  456928:	b	456938 <_obstack_memory_used@@Base+0xb774>
  45692c:	add	x12, x12, #0x1
  456930:	cmp	x12, x9
  456934:	b.ge	456a30 <_obstack_memory_used@@Base+0xb86c>  // b.tcont
  456938:	ldr	x8, [x10, x12, lsl #3]
  45693c:	add	x14, x11, x8, lsl #4
  456940:	ldr	w14, [x14, #8]
  456944:	and	w15, w14, #0xff
  456948:	cmp	w15, #0x2
  45694c:	b.ne	45692c <_obstack_memory_used@@Base+0xb768>  // b.any
  456950:	tst	w14, #0x3ff00
  456954:	b.eq	456a34 <_obstack_memory_used@@Base+0xb870>  // b.none
  456958:	tst	w14, w13
  45695c:	b.ne	45692c <_obstack_memory_used@@Base+0xb768>  // b.any
  456960:	tbnz	w0, #3, 456a34 <_obstack_memory_used@@Base+0xb870>
  456964:	tbnz	w14, #15, 45692c <_obstack_memory_used@@Base+0xb768>
  456968:	b	456a34 <_obstack_memory_used@@Base+0xb870>
  45696c:	add	x12, x12, #0x1
  456970:	cmp	x12, x9
  456974:	b.ge	456a30 <_obstack_memory_used@@Base+0xb86c>  // b.tcont
  456978:	ldr	x8, [x10, x12, lsl #3]
  45697c:	add	x13, x11, x8, lsl #4
  456980:	ldr	w13, [x13, #8]
  456984:	and	w14, w13, #0xff
  456988:	cmp	w14, #0x2
  45698c:	b.ne	45696c <_obstack_memory_used@@Base+0xb7a8>  // b.any
  456990:	tst	w13, #0x3ff00
  456994:	b.eq	456a34 <_obstack_memory_used@@Base+0xb870>  // b.none
  456998:	tbnz	w13, #10, 45696c <_obstack_memory_used@@Base+0xb7a8>
  45699c:	tbnz	w0, #3, 456a34 <_obstack_memory_used@@Base+0xb870>
  4569a0:	tbnz	w13, #15, 45696c <_obstack_memory_used@@Base+0xb7a8>
  4569a4:	b	456a34 <_obstack_memory_used@@Base+0xb870>
  4569a8:	tbnz	w0, #1, 456a00 <_obstack_memory_used@@Base+0xb83c>
  4569ac:	mov	w13, #0x2800                	// #10240
  4569b0:	b	4569c0 <_obstack_memory_used@@Base+0xb7fc>
  4569b4:	add	x12, x12, #0x1
  4569b8:	cmp	x12, x9
  4569bc:	b.ge	456a30 <_obstack_memory_used@@Base+0xb86c>  // b.tcont
  4569c0:	ldr	x8, [x10, x12, lsl #3]
  4569c4:	add	x14, x11, x8, lsl #4
  4569c8:	ldr	w14, [x14, #8]
  4569cc:	and	w15, w14, #0xff
  4569d0:	cmp	w15, #0x2
  4569d4:	b.ne	4569b4 <_obstack_memory_used@@Base+0xb7f0>  // b.any
  4569d8:	tst	w14, #0x3ff00
  4569dc:	b.eq	456a34 <_obstack_memory_used@@Base+0xb870>  // b.none
  4569e0:	tst	w14, w13
  4569e4:	b.ne	4569b4 <_obstack_memory_used@@Base+0xb7f0>  // b.any
  4569e8:	tbnz	w0, #3, 456a34 <_obstack_memory_used@@Base+0xb870>
  4569ec:	tbnz	w14, #15, 4569b4 <_obstack_memory_used@@Base+0xb7f0>
  4569f0:	b	456a34 <_obstack_memory_used@@Base+0xb870>
  4569f4:	add	x12, x12, #0x1
  4569f8:	cmp	x12, x9
  4569fc:	b.ge	456a30 <_obstack_memory_used@@Base+0xb86c>  // b.tcont
  456a00:	ldr	x8, [x10, x12, lsl #3]
  456a04:	add	x13, x11, x8, lsl #4
  456a08:	ldr	w13, [x13, #8]
  456a0c:	and	w14, w13, #0xff
  456a10:	cmp	w14, #0x2
  456a14:	b.ne	4569f4 <_obstack_memory_used@@Base+0xb830>  // b.any
  456a18:	tst	w13, #0x3ff00
  456a1c:	b.eq	456a34 <_obstack_memory_used@@Base+0xb870>  // b.none
  456a20:	tbnz	w13, #11, 4569f4 <_obstack_memory_used@@Base+0xb830>
  456a24:	tbnz	w0, #3, 456a34 <_obstack_memory_used@@Base+0xb870>
  456a28:	tbnz	w13, #15, 4569f4 <_obstack_memory_used@@Base+0xb830>
  456a2c:	b	456a34 <_obstack_memory_used@@Base+0xb870>
  456a30:	mov	x8, xzr
  456a34:	ldp	x20, x19, [sp, #16]
  456a38:	mov	x0, x8
  456a3c:	ldp	x29, x30, [sp], #32
  456a40:	ret
  456a44:	stp	x29, x30, [sp, #-64]!
  456a48:	stp	x22, x21, [sp, #32]
  456a4c:	stp	x20, x19, [sp, #48]
  456a50:	ldr	x8, [x0, #232]
  456a54:	mov	x19, x0
  456a58:	str	x23, [sp, #16]
  456a5c:	mov	x29, sp
  456a60:	cmp	x8, #0x1
  456a64:	b.lt	456aec <_obstack_memory_used@@Base+0xb928>  // b.tstop
  456a68:	mov	x22, xzr
  456a6c:	b	456a88 <_obstack_memory_used@@Base+0xb8c4>
  456a70:	mov	x0, x20
  456a74:	bl	4046b0 <free@plt>
  456a78:	ldr	x8, [x19, #232]
  456a7c:	add	x22, x22, #0x1
  456a80:	cmp	x22, x8
  456a84:	b.ge	456aec <_obstack_memory_used@@Base+0xb928>  // b.tcont
  456a88:	ldr	x8, [x19, #248]
  456a8c:	ldr	x20, [x8, x22, lsl #3]
  456a90:	ldr	x8, [x20, #32]
  456a94:	cmp	x8, #0x1
  456a98:	b.lt	456ac8 <_obstack_memory_used@@Base+0xb904>  // b.tstop
  456a9c:	mov	x23, xzr
  456aa0:	ldr	x8, [x20, #40]
  456aa4:	ldr	x21, [x8, x23, lsl #3]
  456aa8:	ldr	x0, [x21, #32]
  456aac:	bl	4046b0 <free@plt>
  456ab0:	mov	x0, x21
  456ab4:	bl	4046b0 <free@plt>
  456ab8:	ldr	x8, [x20, #32]
  456abc:	add	x23, x23, #0x1
  456ac0:	cmp	x23, x8
  456ac4:	b.lt	456aa0 <_obstack_memory_used@@Base+0xb8dc>  // b.tstop
  456ac8:	ldr	x0, [x20, #40]
  456acc:	bl	4046b0 <free@plt>
  456ad0:	ldr	x8, [x20, #16]
  456ad4:	cbz	x8, 456a70 <_obstack_memory_used@@Base+0xb8ac>
  456ad8:	ldr	x0, [x8, #16]
  456adc:	bl	4046b0 <free@plt>
  456ae0:	ldr	x0, [x20, #16]
  456ae4:	bl	4046b0 <free@plt>
  456ae8:	b	456a70 <_obstack_memory_used@@Base+0xb8ac>
  456aec:	str	xzr, [x19, #232]
  456af0:	str	xzr, [x19, #200]
  456af4:	ldp	x20, x19, [sp, #48]
  456af8:	ldp	x22, x21, [sp, #32]
  456afc:	ldr	x23, [sp, #16]
  456b00:	ldp	x29, x30, [sp], #64
  456b04:	ret
  456b08:	stp	x29, x30, [sp, #-96]!
  456b0c:	stp	x28, x27, [sp, #16]
  456b10:	stp	x26, x25, [sp, #32]
  456b14:	stp	x24, x23, [sp, #48]
  456b18:	stp	x22, x21, [sp, #64]
  456b1c:	stp	x20, x19, [sp, #80]
  456b20:	mov	x29, sp
  456b24:	sub	sp, sp, #0x90
  456b28:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  456b2c:	add	x8, x8, #0x670
  456b30:	ldr	q0, [x8]
  456b34:	ldr	x8, [x8, #16]
  456b38:	mov	x20, x3
  456b3c:	mov	x21, x2
  456b40:	mov	x22, x1
  456b44:	mov	x24, x0
  456b48:	stur	q0, [x29, #-64]
  456b4c:	stur	x8, [x29, #-48]
  456b50:	tbz	w4, #0, 456b6c <_obstack_memory_used@@Base+0xb9a8>
  456b54:	mov	w0, #0x60                  	// #96
  456b58:	bl	404210 <malloc@plt>
  456b5c:	stur	x0, [x29, #-48]
  456b60:	cbz	x0, 45759c <_obstack_memory_used@@Base+0xc3d8>
  456b64:	sub	x19, x29, #0x40
  456b68:	b	456b70 <_obstack_memory_used@@Base+0xb9ac>
  456b6c:	mov	x19, xzr
  456b70:	ldr	x23, [x24, #144]
  456b74:	lsl	x27, x21, #4
  456b78:	cmp	x27, #0xfbf
  456b7c:	stp	xzr, xzr, [x29, #-32]
  456b80:	stur	xzr, [x29, #-16]
  456b84:	b.hi	456ba4 <_obstack_memory_used@@Base+0xb9e0>  // b.pmore
  456b88:	add	x9, x27, #0xf
  456b8c:	mov	x8, sp
  456b90:	and	x9, x9, #0xfffffffffffffff0
  456b94:	sub	x0, x8, x9
  456b98:	mov	sp, x0
  456b9c:	stur	wzr, [x29, #-92]
  456ba0:	b	456bb8 <_obstack_memory_used@@Base+0xb9f4>
  456ba4:	mov	x0, x27
  456ba8:	bl	404210 <malloc@plt>
  456bac:	cbz	x0, 456c5c <_obstack_memory_used@@Base+0xba98>
  456bb0:	mov	w8, #0x1                   	// #1
  456bb4:	stur	w8, [x29, #-92]
  456bb8:	mov	x1, x20
  456bbc:	mov	x2, x27
  456bc0:	stur	x0, [x29, #-88]
  456bc4:	bl	403e80 <memcpy@plt>
  456bc8:	ldp	x25, x8, [x20]
  456bcc:	cmp	x25, x8
  456bd0:	b.le	456c40 <_obstack_memory_used@@Base+0xba7c>
  456bd4:	mov	x0, xzr
  456bd8:	bl	4046b0 <free@plt>
  456bdc:	ldur	w8, [x29, #-92]
  456be0:	cbz	w8, 456bec <_obstack_memory_used@@Base+0xba28>
  456be4:	ldur	x0, [x29, #-88]
  456be8:	bl	4046b0 <free@plt>
  456bec:	cbz	x19, 4574c8 <_obstack_memory_used@@Base+0xc304>
  456bf0:	ldr	x8, [x19]
  456bf4:	ldr	x0, [x19, #16]
  456bf8:	cmp	x8, #0x1
  456bfc:	b.lt	4574c4 <_obstack_memory_used@@Base+0xc300>  // b.tstop
  456c00:	mov	x20, xzr
  456c04:	mov	x21, xzr
  456c08:	add	x8, x0, x20
  456c0c:	ldr	x0, [x8, #40]
  456c10:	bl	4046b0 <free@plt>
  456c14:	ldr	x8, [x19, #16]
  456c18:	add	x8, x8, x20
  456c1c:	ldr	x0, [x8, #16]
  456c20:	bl	4046b0 <free@plt>
  456c24:	ldr	x8, [x19]
  456c28:	ldr	x0, [x19, #16]
  456c2c:	add	x21, x21, #0x1
  456c30:	add	x20, x20, #0x30
  456c34:	cmp	x21, x8
  456c38:	b.lt	456c08 <_obstack_memory_used@@Base+0xba44>  // b.tstop
  456c3c:	b	4574c4 <_obstack_memory_used@@Base+0xc300>
  456c40:	add	x8, x20, #0x8
  456c44:	stur	x8, [x29, #-104]
  456c48:	mov	w8, #0x1                   	// #1
  456c4c:	dup	v0.2d, x8
  456c50:	stur	q0, [x29, #-128]
  456c54:	stp	x24, x27, [x29, #-80]
  456c58:	b	456ce8 <_obstack_memory_used@@Base+0xbb24>
  456c5c:	cbz	x19, 45759c <_obstack_memory_used@@Base+0xc3d8>
  456c60:	ldr	x8, [x19]
  456c64:	ldr	x0, [x19, #16]
  456c68:	cmp	x8, #0x1
  456c6c:	b.lt	456cac <_obstack_memory_used@@Base+0xbae8>  // b.tstop
  456c70:	mov	x20, xzr
  456c74:	mov	x21, xzr
  456c78:	add	x8, x0, x20
  456c7c:	ldr	x0, [x8, #40]
  456c80:	bl	4046b0 <free@plt>
  456c84:	ldr	x8, [x19, #16]
  456c88:	add	x8, x8, x20
  456c8c:	ldr	x0, [x8, #16]
  456c90:	bl	4046b0 <free@plt>
  456c94:	ldr	x8, [x19]
  456c98:	ldr	x0, [x19, #16]
  456c9c:	add	x21, x21, #0x1
  456ca0:	add	x20, x20, #0x30
  456ca4:	cmp	x21, x8
  456ca8:	b.lt	456c78 <_obstack_memory_used@@Base+0xbab4>  // b.tstop
  456cac:	bl	4046b0 <free@plt>
  456cb0:	mov	w0, #0xc                   	// #12
  456cb4:	b	4575a0 <_obstack_memory_used@@Base+0xc3dc>
  456cb8:	cbz	x28, 457110 <_obstack_memory_used@@Base+0xbf4c>
  456cbc:	ldr	x8, [x27, #24]
  456cc0:	add	x25, x28, x25
  456cc4:	ldr	x26, [x8, x23, lsl #3]
  456cc8:	stur	xzr, [x29, #-24]
  456ccc:	ldur	x27, [x29, #-72]
  456cd0:	tbnz	x26, #63, 457284 <_obstack_memory_used@@Base+0xc0c0>
  456cd4:	ldr	x8, [x20, #8]
  456cd8:	ldur	x24, [x29, #-80]
  456cdc:	mov	x23, x26
  456ce0:	cmp	x25, x8
  456ce4:	b.gt	4574d0 <_obstack_memory_used@@Base+0xc30c>
  456ce8:	ldr	x8, [x24]
  456cec:	add	x8, x8, x23, lsl #4
  456cf0:	ldr	w9, [x8, #8]
  456cf4:	and	w10, w9, #0xff
  456cf8:	cmp	w10, #0x9
  456cfc:	b.eq	456d34 <_obstack_memory_used@@Base+0xbb70>  // b.none
  456d00:	cmp	w10, #0x8
  456d04:	b.ne	456d8c <_obstack_memory_used@@Base+0xbbc8>  // b.any
  456d08:	ldr	x8, [x8]
  456d0c:	add	x8, x8, #0x1
  456d10:	cmp	x8, x21
  456d14:	b.ge	456d8c <_obstack_memory_used@@Base+0xbbc8>  // b.tcont
  456d18:	add	x8, x20, x8, lsl #4
  456d1c:	mov	x9, #0xffffffffffffffff    	// #-1
  456d20:	stp	x25, x9, [x8]
  456d24:	ldr	x8, [x20, #8]
  456d28:	cmp	x25, x8
  456d2c:	b.eq	456d98 <_obstack_memory_used@@Base+0xbbd4>  // b.none
  456d30:	b	456e50 <_obstack_memory_used@@Base+0xbc8c>
  456d34:	ldr	x8, [x8]
  456d38:	add	x8, x8, #0x1
  456d3c:	cmp	x8, x21
  456d40:	b.ge	456d8c <_obstack_memory_used@@Base+0xbbc8>  // b.tcont
  456d44:	lsl	x10, x8, #4
  456d48:	ldr	x11, [x20, x10]
  456d4c:	cmp	x11, x25
  456d50:	b.ge	456d68 <_obstack_memory_used@@Base+0xbba4>  // b.tcont
  456d54:	ldur	x0, [x29, #-88]
  456d58:	add	x8, x20, x8, lsl #4
  456d5c:	str	x25, [x8, #8]
  456d60:	mov	x1, x20
  456d64:	b	456d84 <_obstack_memory_used@@Base+0xbbc0>
  456d68:	tbz	w9, #19, 4570f0 <_obstack_memory_used@@Base+0xbf2c>
  456d6c:	ldur	x9, [x29, #-88]
  456d70:	ldr	x9, [x9, x10]
  456d74:	cmn	x9, #0x1
  456d78:	b.eq	4570f0 <_obstack_memory_used@@Base+0xbf2c>  // b.none
  456d7c:	ldur	x1, [x29, #-88]
  456d80:	mov	x0, x20
  456d84:	mov	x2, x27
  456d88:	bl	403e80 <memcpy@plt>
  456d8c:	ldr	x8, [x20, #8]
  456d90:	cmp	x25, x8
  456d94:	b.ne	456e50 <_obstack_memory_used@@Base+0xbc8c>  // b.any
  456d98:	ldr	x8, [x22, #176]
  456d9c:	cmp	x23, x8
  456da0:	b.ne	456e50 <_obstack_memory_used@@Base+0xbc8c>  // b.any
  456da4:	cbz	x19, 457504 <_obstack_memory_used@@Base+0xc340>
  456da8:	mov	x8, xzr
  456dac:	cbz	x21, 456ddc <_obstack_memory_used@@Base+0xbc18>
  456db0:	ldur	x9, [x29, #-104]
  456db4:	b	456dc8 <_obstack_memory_used@@Base+0xbc04>
  456db8:	add	x8, x8, #0x1
  456dbc:	cmp	x21, x8
  456dc0:	add	x9, x9, #0x10
  456dc4:	b.eq	457460 <_obstack_memory_used@@Base+0xc29c>  // b.none
  456dc8:	ldur	x10, [x9, #-8]
  456dcc:	tbnz	x10, #63, 456db8 <_obstack_memory_used@@Base+0xbbf4>
  456dd0:	ldr	x10, [x9]
  456dd4:	cmn	x10, #0x1
  456dd8:	b.ne	456db8 <_obstack_memory_used@@Base+0xbbf4>  // b.any
  456ddc:	cmp	x8, x21
  456de0:	b.eq	457460 <_obstack_memory_used@@Base+0xc29c>  // b.none
  456de4:	ldr	x9, [x19]
  456de8:	sub	x8, x9, #0x1
  456dec:	cmp	x9, #0x0
  456df0:	str	x8, [x19]
  456df4:	b.le	4575d0 <_obstack_memory_used@@Base+0xc40c>
  456df8:	ldr	x9, [x19, #16]
  456dfc:	add	x8, x8, x8, lsl #1
  456e00:	lsl	x23, x8, #4
  456e04:	mov	x0, x20
  456e08:	add	x8, x9, x23
  456e0c:	ldr	x1, [x8, #16]
  456e10:	ldr	x25, [x8]
  456e14:	mov	x2, x27
  456e18:	bl	403e80 <memcpy@plt>
  456e1c:	ldur	x0, [x29, #-16]
  456e20:	bl	4046b0 <free@plt>
  456e24:	ldr	x8, [x19, #16]
  456e28:	add	x8, x8, x23
  456e2c:	ldr	x0, [x8, #16]
  456e30:	bl	4046b0 <free@plt>
  456e34:	ldr	x8, [x19, #16]
  456e38:	add	x8, x8, x23
  456e3c:	ldr	x9, [x8, #40]
  456e40:	ldur	q0, [x8, #24]
  456e44:	stur	x9, [x29, #-16]
  456e48:	stur	q0, [x29, #-32]
  456e4c:	ldr	x23, [x8, #8]
  456e50:	ldr	x27, [x22, #152]
  456e54:	ldr	x8, [x27]
  456e58:	add	x9, x8, x23, lsl #4
  456e5c:	ldr	w9, [x9, #8]
  456e60:	tbnz	w9, #3, 456ec8 <_obstack_memory_used@@Base+0xbd04>
  456e64:	tbnz	w9, #20, 456efc <_obstack_memory_used@@Base+0xbd38>
  456e68:	and	w9, w9, #0xff
  456e6c:	cmp	w9, #0x4
  456e70:	b.ne	456f18 <_obstack_memory_used@@Base+0xbd54>  // b.any
  456e74:	lsl	x9, x23, #4
  456e78:	ldr	x8, [x8, x9]
  456e7c:	add	x8, x20, x8, lsl #4
  456e80:	ldp	x8, x9, [x8, #16]
  456e84:	sub	x28, x9, x8
  456e88:	cbz	x19, 456cb8 <_obstack_memory_used@@Base+0xbaf4>
  456e8c:	cmn	x9, #0x1
  456e90:	b.eq	457290 <_obstack_memory_used@@Base+0xc0cc>  // b.none
  456e94:	cmn	x8, #0x1
  456e98:	b.eq	457290 <_obstack_memory_used@@Base+0xc0cc>  // b.none
  456e9c:	cbz	x28, 457110 <_obstack_memory_used@@Base+0xbf4c>
  456ea0:	ldr	x9, [x22, #8]
  456ea4:	mov	x2, x28
  456ea8:	add	x0, x9, x8
  456eac:	add	x1, x9, x25
  456eb0:	bl	404400 <bcmp@plt>
  456eb4:	cbnz	w0, 457290 <_obstack_memory_used@@Base+0xc0cc>
  456eb8:	ldr	x8, [x27, #24]
  456ebc:	add	x25, x28, x25
  456ec0:	ldr	x26, [x8, x23, lsl #3]
  456ec4:	b	456f44 <_obstack_memory_used@@Base+0xbd80>
  456ec8:	ldr	x9, [x22, #184]
  456ecc:	ldur	x8, [x29, #-32]
  456ed0:	ldr	x24, [x27, #40]
  456ed4:	ldr	x26, [x9, x25, lsl #3]
  456ed8:	cbz	x8, 456fa4 <_obstack_memory_used@@Base+0xbde0>
  456edc:	ldur	x28, [x29, #-24]
  456ee0:	cbnz	x28, 457304 <_obstack_memory_used@@Base+0xc140>
  456ee4:	ldur	x27, [x29, #-16]
  456ee8:	mov	w8, #0x1                   	// #1
  456eec:	mov	w18, #0x1                   	// #1
  456ef0:	str	x23, [x27]
  456ef4:	stur	x8, [x29, #-24]
  456ef8:	b	456fcc <_obstack_memory_used@@Base+0xbe08>
  456efc:	mov	x0, x27
  456f00:	mov	x1, x23
  456f04:	mov	x2, x22
  456f08:	mov	x3, x25
  456f0c:	bl	459b50 <_obstack_memory_used@@Base+0xe98c>
  456f10:	sxtw	x28, w0
  456f14:	cbnz	x28, 456f34 <_obstack_memory_used@@Base+0xbd70>
  456f18:	ldr	x8, [x27]
  456f1c:	mov	x0, x22
  456f20:	mov	x2, x25
  456f24:	add	x1, x8, x23, lsl #4
  456f28:	bl	459ec8 <_obstack_memory_used@@Base+0xed04>
  456f2c:	tbz	w0, #0, 45728c <_obstack_memory_used@@Base+0xc0c8>
  456f30:	mov	w28, #0x1                   	// #1
  456f34:	ldr	x8, [x27, #24]
  456f38:	add	x25, x28, x25
  456f3c:	ldr	x26, [x8, x23, lsl #3]
  456f40:	cbz	x19, 456cc8 <_obstack_memory_used@@Base+0xbb04>
  456f44:	ldr	x8, [x22, #168]
  456f48:	cmp	x25, x8
  456f4c:	b.gt	457290 <_obstack_memory_used@@Base+0xc0cc>
  456f50:	ldr	x8, [x22, #184]
  456f54:	ldr	x8, [x8, x25, lsl #3]
  456f58:	cbz	x8, 457290 <_obstack_memory_used@@Base+0xc0cc>
  456f5c:	ldr	x9, [x8, #16]
  456f60:	subs	x9, x9, #0x1
  456f64:	b.lt	457290 <_obstack_memory_used@@Base+0xc0cc>  // b.tstop
  456f68:	ldr	x8, [x8, #24]
  456f6c:	mov	x10, xzr
  456f70:	b.eq	456f94 <_obstack_memory_used@@Base+0xbdd0>  // b.none
  456f74:	add	x11, x10, x9
  456f78:	lsr	x11, x11, #1
  456f7c:	ldr	x12, [x8, x11, lsl #3]
  456f80:	cmp	x12, x26
  456f84:	csinc	x10, x10, x11, ge  // ge = tcont
  456f88:	csel	x9, x9, x11, lt  // lt = tstop
  456f8c:	cmp	x10, x9
  456f90:	b.cc	456f74 <_obstack_memory_used@@Base+0xbdb0>  // b.lo, b.ul, b.last
  456f94:	ldr	x8, [x8, x10, lsl #3]
  456f98:	cmp	x8, x26
  456f9c:	b.eq	456cc8 <_obstack_memory_used@@Base+0xbb04>  // b.none
  456fa0:	b	45728c <_obstack_memory_used@@Base+0xc0c8>
  456fa4:	mov	w8, #0x1                   	// #1
  456fa8:	dup	v0.2d, x8
  456fac:	mov	w0, #0x8                   	// #8
  456fb0:	stur	q0, [x29, #-32]
  456fb4:	bl	404210 <malloc@plt>
  456fb8:	mov	x27, x0
  456fbc:	stur	x0, [x29, #-16]
  456fc0:	cbz	x0, 45752c <_obstack_memory_used@@Base+0xc368>
  456fc4:	str	x23, [x27]
  456fc8:	mov	w18, #0x1                   	// #1
  456fcc:	mov	w8, #0x18                  	// #24
  456fd0:	madd	x8, x23, x8, x24
  456fd4:	ldr	x8, [x8, #8]
  456fd8:	cmp	x8, #0x1
  456fdc:	b.lt	45728c <_obstack_memory_used@@Base+0xc0c8>  // b.tstop
  456fe0:	ldr	x9, [x26, #16]
  456fe4:	subs	x10, x9, #0x1
  456fe8:	b.lt	45728c <_obstack_memory_used@@Base+0xc0c8>  // b.tstop
  456fec:	mov	w9, #0x18                  	// #24
  456ff0:	madd	x9, x23, x9, x24
  456ff4:	ldr	x9, [x9, #16]
  456ff8:	ldr	x11, [x26, #24]
  456ffc:	cbz	x10, 45706c <_obstack_memory_used@@Base+0xbea8>
  457000:	mov	x13, xzr
  457004:	mov	x12, #0xffffffffffffffff    	// #-1
  457008:	b	457018 <_obstack_memory_used@@Base+0xbe54>
  45700c:	add	x13, x13, #0x1
  457010:	cmp	x13, x8
  457014:	b.eq	457064 <_obstack_memory_used@@Base+0xbea0>  // b.none
  457018:	ldr	x23, [x9, x13, lsl #3]
  45701c:	mov	x14, xzr
  457020:	mov	x15, x10
  457024:	add	x16, x14, x15
  457028:	lsr	x16, x16, #1
  45702c:	ldr	x17, [x11, x16, lsl #3]
  457030:	cmp	x17, x23
  457034:	csinc	x14, x14, x16, ge  // ge = tcont
  457038:	csel	x15, x15, x16, lt  // lt = tstop
  45703c:	cmp	x14, x15
  457040:	b.cc	457024 <_obstack_memory_used@@Base+0xbe60>  // b.lo, b.ul, b.last
  457044:	ldr	x14, [x11, x14, lsl #3]
  457048:	cmp	x14, x23
  45704c:	b.ne	45700c <_obstack_memory_used@@Base+0xbe48>  // b.any
  457050:	cmn	x12, #0x1
  457054:	mov	x26, x12
  457058:	mov	x12, x23
  45705c:	b.eq	45700c <_obstack_memory_used@@Base+0xbe48>  // b.none
  457060:	b	4570a4 <_obstack_memory_used@@Base+0xbee0>
  457064:	mov	x26, x12
  457068:	b	456ccc <_obstack_memory_used@@Base+0xbb08>
  45706c:	ldr	x23, [x11]
  457070:	mov	x26, #0xffffffffffffffff    	// #-1
  457074:	b	45708c <_obstack_memory_used@@Base+0xbec8>
  457078:	mov	x0, x26
  45707c:	subs	x8, x8, #0x1
  457080:	add	x9, x9, #0x8
  457084:	mov	x26, x0
  457088:	b.eq	457108 <_obstack_memory_used@@Base+0xbf44>  // b.none
  45708c:	ldr	x10, [x9]
  457090:	cmp	x23, x10
  457094:	b.ne	457078 <_obstack_memory_used@@Base+0xbeb4>  // b.any
  457098:	cmn	x26, #0x1
  45709c:	mov	x0, x23
  4570a0:	b.eq	45707c <_obstack_memory_used@@Base+0xbeb8>  // b.none
  4570a4:	subs	x8, x18, #0x1
  4570a8:	b.lt	457134 <_obstack_memory_used@@Base+0xbf70>  // b.tstop
  4570ac:	mov	x9, xzr
  4570b0:	b.eq	4570d4 <_obstack_memory_used@@Base+0xbf10>  // b.none
  4570b4:	add	x10, x9, x8
  4570b8:	lsr	x10, x10, #1
  4570bc:	ldr	x11, [x27, x10, lsl #3]
  4570c0:	cmp	x11, x26
  4570c4:	csinc	x9, x9, x10, ge  // ge = tcont
  4570c8:	csel	x8, x8, x10, lt  // lt = tstop
  4570cc:	cmp	x9, x8
  4570d0:	b.cc	4570b4 <_obstack_memory_used@@Base+0xbef0>  // b.lo, b.ul, b.last
  4570d4:	ldr	x8, [x27, x9, lsl #3]
  4570d8:	cmp	x8, x26
  4570dc:	csel	x8, x23, x26, eq  // eq = none
  4570e0:	b.eq	4570e8 <_obstack_memory_used@@Base+0xbf24>  // b.none
  4570e4:	cbnz	x19, 457138 <_obstack_memory_used@@Base+0xbf74>
  4570e8:	mov	x26, x8
  4570ec:	b	456ccc <_obstack_memory_used@@Base+0xbb08>
  4570f0:	add	x8, x20, x8, lsl #4
  4570f4:	str	x25, [x8, #8]
  4570f8:	ldr	x8, [x20, #8]
  4570fc:	cmp	x25, x8
  457100:	b.eq	456d98 <_obstack_memory_used@@Base+0xbbd4>  // b.none
  457104:	b	456e50 <_obstack_memory_used@@Base+0xbc8c>
  457108:	mov	x26, x0
  45710c:	b	456ccc <_obstack_memory_used@@Base+0xbb08>
  457110:	ldur	x8, [x29, #-32]
  457114:	cbz	x8, 457204 <_obstack_memory_used@@Base+0xc040>
  457118:	ldur	x24, [x29, #-24]
  45711c:	cbnz	x24, 4573b0 <_obstack_memory_used@@Base+0xc1ec>
  457120:	ldur	x8, [x29, #-16]
  457124:	str	x23, [x8]
  457128:	mov	w8, #0x1                   	// #1
  45712c:	stur	x8, [x29, #-24]
  457130:	b	457220 <_obstack_memory_used@@Base+0xc05c>
  457134:	cbz	x19, 456ccc <_obstack_memory_used@@Base+0xbb08>
  457138:	stur	x18, [x29, #-136]
  45713c:	ldp	x28, x9, [x19]
  457140:	add	x8, x28, #0x1
  457144:	cmp	x8, x9
  457148:	str	x8, [x19]
  45714c:	b.ne	457174 <_obstack_memory_used@@Base+0xbfb0>  // b.any
  457150:	ldr	x0, [x19, #16]
  457154:	add	x8, x8, x8, lsl #1
  457158:	lsl	x1, x8, #5
  45715c:	bl	404450 <realloc@plt>
  457160:	cbz	x0, 457530 <_obstack_memory_used@@Base+0xc36c>
  457164:	ldr	x8, [x19, #8]
  457168:	lsl	x8, x8, #1
  45716c:	stp	x8, x0, [x19, #8]
  457170:	b	457178 <_obstack_memory_used@@Base+0xbfb4>
  457174:	ldr	x0, [x19, #16]
  457178:	mov	w8, #0x30                  	// #48
  45717c:	madd	x24, x28, x8, x0
  457180:	stp	x25, x23, [x24]
  457184:	ldur	x23, [x29, #-72]
  457188:	mov	x0, x23
  45718c:	bl	404210 <malloc@plt>
  457190:	str	x0, [x24, #16]
  457194:	cbz	x0, 457530 <_obstack_memory_used@@Base+0xc36c>
  457198:	mov	x1, x20
  45719c:	mov	x2, x23
  4571a0:	bl	403e80 <memcpy@plt>
  4571a4:	ldr	x24, [x19, #16]
  4571a8:	ldur	x9, [x29, #-136]
  4571ac:	mov	w8, #0x30                  	// #48
  4571b0:	madd	x8, x28, x8, x24
  4571b4:	cmp	x9, #0x1
  4571b8:	add	x10, x8, #0x18
  4571bc:	str	x9, [x8, #32]
  4571c0:	b.lt	4571f8 <_obstack_memory_used@@Base+0xc034>  // b.tstop
  4571c4:	lsl	x23, x9, #3
  4571c8:	mov	x0, x23
  4571cc:	stur	x10, [x29, #-144]
  4571d0:	str	x9, [x10]
  4571d4:	bl	404210 <malloc@plt>
  4571d8:	mov	w8, #0x30                  	// #48
  4571dc:	madd	x8, x28, x8, x24
  4571e0:	str	x0, [x8, #40]
  4571e4:	cbz	x0, 45751c <_obstack_memory_used@@Base+0xc358>
  4571e8:	mov	x1, x27
  4571ec:	mov	x2, x23
  4571f0:	bl	403e80 <memcpy@plt>
  4571f4:	b	456ccc <_obstack_memory_used@@Base+0xbb08>
  4571f8:	stp	xzr, xzr, [x10]
  4571fc:	str	xzr, [x10, #16]
  457200:	b	456ccc <_obstack_memory_used@@Base+0xbb08>
  457204:	ldur	q0, [x29, #-128]
  457208:	mov	w0, #0x8                   	// #8
  45720c:	stur	q0, [x29, #-32]
  457210:	bl	404210 <malloc@plt>
  457214:	stur	x0, [x29, #-16]
  457218:	cbz	x0, 457528 <_obstack_memory_used@@Base+0xc364>
  45721c:	str	x23, [x0]
  457220:	ldr	x8, [x22, #184]
  457224:	ldr	x9, [x8, x25, lsl #3]
  457228:	ldr	x8, [x9, #16]
  45722c:	subs	x8, x8, #0x1
  457230:	b.lt	456f18 <_obstack_memory_used@@Base+0xbd54>  // b.tstop
  457234:	ldr	x10, [x27, #40]
  457238:	mov	w11, #0x18                  	// #24
  45723c:	ldr	x9, [x9, #24]
  457240:	madd	x10, x23, x11, x10
  457244:	ldr	x10, [x10, #16]
  457248:	ldr	x26, [x10]
  45724c:	mov	x10, xzr
  457250:	b.eq	457274 <_obstack_memory_used@@Base+0xc0b0>  // b.none
  457254:	add	x11, x10, x8
  457258:	lsr	x11, x11, #1
  45725c:	ldr	x12, [x9, x11, lsl #3]
  457260:	cmp	x12, x26
  457264:	csinc	x10, x10, x11, ge  // ge = tcont
  457268:	csel	x8, x8, x11, lt  // lt = tstop
  45726c:	cmp	x10, x8
  457270:	b.cc	457254 <_obstack_memory_used@@Base+0xc090>  // b.lo, b.ul, b.last
  457274:	ldr	x8, [x9, x10, lsl #3]
  457278:	cmp	x8, x26
  45727c:	b.eq	456ccc <_obstack_memory_used@@Base+0xbb08>  // b.none
  457280:	b	456f14 <_obstack_memory_used@@Base+0xbd50>
  457284:	cmn	x26, #0x2
  457288:	b.eq	4575c0 <_obstack_memory_used@@Base+0xc3fc>  // b.none
  45728c:	cbz	x19, 4574e4 <_obstack_memory_used@@Base+0xc320>
  457290:	ldr	x9, [x19]
  457294:	sub	x8, x9, #0x1
  457298:	cmp	x9, #0x0
  45729c:	str	x8, [x19]
  4572a0:	b.le	4575d0 <_obstack_memory_used@@Base+0xc40c>
  4572a4:	ldr	x9, [x19, #16]
  4572a8:	add	x8, x8, x8, lsl #1
  4572ac:	lsl	x23, x8, #4
  4572b0:	ldur	x27, [x29, #-72]
  4572b4:	add	x8, x9, x23
  4572b8:	ldr	x1, [x8, #16]
  4572bc:	ldr	x25, [x8]
  4572c0:	mov	x0, x20
  4572c4:	mov	x2, x27
  4572c8:	bl	403e80 <memcpy@plt>
  4572cc:	ldur	x0, [x29, #-16]
  4572d0:	bl	4046b0 <free@plt>
  4572d4:	ldr	x8, [x19, #16]
  4572d8:	add	x8, x8, x23
  4572dc:	ldr	x0, [x8, #16]
  4572e0:	bl	4046b0 <free@plt>
  4572e4:	ldr	x8, [x19, #16]
  4572e8:	add	x8, x8, x23
  4572ec:	ldr	x9, [x8, #40]
  4572f0:	ldur	q0, [x8, #24]
  4572f4:	stur	x9, [x29, #-16]
  4572f8:	stur	q0, [x29, #-32]
  4572fc:	ldr	x26, [x8, #8]
  457300:	b	456cd4 <_obstack_memory_used@@Base+0xbb10>
  457304:	cmp	x8, x28
  457308:	b.ne	457334 <_obstack_memory_used@@Base+0xc170>  // b.any
  45730c:	ldur	x0, [x29, #-16]
  457310:	lsl	x9, x8, #1
  457314:	lsl	x1, x8, #4
  457318:	stur	x9, [x29, #-32]
  45731c:	stur	x0, [x29, #-136]
  457320:	bl	404450 <realloc@plt>
  457324:	cbz	x0, 4575c8 <_obstack_memory_used@@Base+0xc404>
  457328:	mov	x27, x0
  45732c:	stur	x0, [x29, #-16]
  457330:	b	457338 <_obstack_memory_used@@Base+0xc174>
  457334:	ldur	x27, [x29, #-16]
  457338:	ldr	x8, [x27]
  45733c:	cmp	x8, x23
  457340:	b.le	45736c <_obstack_memory_used@@Base+0xc1a8>
  457344:	cmp	x28, #0x1
  457348:	b.lt	45739c <_obstack_memory_used@@Base+0xc1d8>  // b.tstop
  45734c:	mov	x9, x28
  457350:	add	x10, x27, x9, lsl #3
  457354:	ldur	x11, [x10, #-8]
  457358:	subs	x8, x9, #0x1
  45735c:	mov	x9, x8
  457360:	str	x11, [x10]
  457364:	b.gt	457350 <_obstack_memory_used@@Base+0xc18c>
  457368:	b	4573a0 <_obstack_memory_used@@Base+0xc1dc>
  45736c:	add	x8, x27, x28, lsl #3
  457370:	ldur	x9, [x8, #-8]
  457374:	mov	x8, x28
  457378:	cmp	x9, x23
  45737c:	b.le	4573a0 <_obstack_memory_used@@Base+0xc1dc>
  457380:	add	x10, x27, x8, lsl #3
  457384:	str	x9, [x10]
  457388:	ldur	x9, [x10, #-16]
  45738c:	sub	x8, x8, #0x1
  457390:	cmp	x9, x23
  457394:	b.gt	457380 <_obstack_memory_used@@Base+0xc1bc>
  457398:	b	4573a0 <_obstack_memory_used@@Base+0xc1dc>
  45739c:	mov	x8, x28
  4573a0:	add	x18, x28, #0x1
  4573a4:	str	x23, [x27, x8, lsl #3]
  4573a8:	stur	x18, [x29, #-24]
  4573ac:	b	456fcc <_obstack_memory_used@@Base+0xbe08>
  4573b0:	mov	x26, x27
  4573b4:	cmp	x8, x24
  4573b8:	b.ne	4573e0 <_obstack_memory_used@@Base+0xc21c>  // b.any
  4573bc:	ldur	x27, [x29, #-16]
  4573c0:	lsl	x9, x8, #1
  4573c4:	lsl	x1, x8, #4
  4573c8:	stur	x9, [x29, #-32]
  4573cc:	mov	x0, x27
  4573d0:	bl	404450 <realloc@plt>
  4573d4:	cbz	x0, 457530 <_obstack_memory_used@@Base+0xc36c>
  4573d8:	stur	x0, [x29, #-16]
  4573dc:	b	4573e4 <_obstack_memory_used@@Base+0xc220>
  4573e0:	ldur	x0, [x29, #-16]
  4573e4:	ldr	x8, [x0]
  4573e8:	cmp	x8, x23
  4573ec:	b.le	457418 <_obstack_memory_used@@Base+0xc254>
  4573f0:	cmp	x24, #0x1
  4573f4:	b.lt	457448 <_obstack_memory_used@@Base+0xc284>  // b.tstop
  4573f8:	mov	x9, x24
  4573fc:	add	x10, x0, x9, lsl #3
  457400:	ldur	x11, [x10, #-8]
  457404:	subs	x8, x9, #0x1
  457408:	mov	x9, x8
  45740c:	str	x11, [x10]
  457410:	b.gt	4573fc <_obstack_memory_used@@Base+0xc238>
  457414:	b	45744c <_obstack_memory_used@@Base+0xc288>
  457418:	add	x8, x0, x24, lsl #3
  45741c:	ldur	x9, [x8, #-8]
  457420:	mov	x8, x24
  457424:	cmp	x9, x23
  457428:	b.le	45744c <_obstack_memory_used@@Base+0xc288>
  45742c:	add	x10, x0, x8, lsl #3
  457430:	str	x9, [x10]
  457434:	ldur	x9, [x10, #-16]
  457438:	sub	x8, x8, #0x1
  45743c:	cmp	x9, x23
  457440:	b.gt	45742c <_obstack_memory_used@@Base+0xc268>
  457444:	b	45744c <_obstack_memory_used@@Base+0xc288>
  457448:	mov	x8, x24
  45744c:	str	x23, [x0, x8, lsl #3]
  457450:	add	x8, x24, #0x1
  457454:	mov	x27, x26
  457458:	stur	x8, [x29, #-24]
  45745c:	b	457220 <_obstack_memory_used@@Base+0xc05c>
  457460:	ldur	x0, [x29, #-16]
  457464:	bl	4046b0 <free@plt>
  457468:	ldur	w8, [x29, #-92]
  45746c:	cbz	w8, 457478 <_obstack_memory_used@@Base+0xc2b4>
  457470:	ldur	x0, [x29, #-88]
  457474:	bl	4046b0 <free@plt>
  457478:	ldr	x8, [x19]
  45747c:	ldr	x0, [x19, #16]
  457480:	cmp	x8, #0x1
  457484:	b.lt	4574c4 <_obstack_memory_used@@Base+0xc300>  // b.tstop
  457488:	mov	x20, xzr
  45748c:	mov	x21, xzr
  457490:	add	x8, x0, x20
  457494:	ldr	x0, [x8, #40]
  457498:	bl	4046b0 <free@plt>
  45749c:	ldr	x8, [x19, #16]
  4574a0:	add	x8, x8, x20
  4574a4:	ldr	x0, [x8, #16]
  4574a8:	bl	4046b0 <free@plt>
  4574ac:	ldr	x8, [x19]
  4574b0:	ldr	x0, [x19, #16]
  4574b4:	add	x21, x21, #0x1
  4574b8:	add	x20, x20, #0x30
  4574bc:	cmp	x21, x8
  4574c0:	b.lt	457490 <_obstack_memory_used@@Base+0xc2cc>  // b.tstop
  4574c4:	bl	4046b0 <free@plt>
  4574c8:	mov	w0, wzr
  4574cc:	b	4575a0 <_obstack_memory_used@@Base+0xc3dc>
  4574d0:	ldur	x0, [x29, #-16]
  4574d4:	bl	4046b0 <free@plt>
  4574d8:	ldur	w8, [x29, #-92]
  4574dc:	cbnz	w8, 456be4 <_obstack_memory_used@@Base+0xba20>
  4574e0:	b	456bec <_obstack_memory_used@@Base+0xba28>
  4574e4:	ldur	x0, [x29, #-16]
  4574e8:	bl	4046b0 <free@plt>
  4574ec:	ldur	w8, [x29, #-92]
  4574f0:	cbz	w8, 4574fc <_obstack_memory_used@@Base+0xc338>
  4574f4:	ldur	x0, [x29, #-88]
  4574f8:	bl	4046b0 <free@plt>
  4574fc:	mov	w0, #0x1                   	// #1
  457500:	b	4575a0 <_obstack_memory_used@@Base+0xc3dc>
  457504:	ldur	x0, [x29, #-16]
  457508:	bl	4046b0 <free@plt>
  45750c:	ldur	w8, [x29, #-92]
  457510:	cbz	w8, 4574c8 <_obstack_memory_used@@Base+0xc304>
  457514:	ldur	x0, [x29, #-88]
  457518:	b	4574c4 <_obstack_memory_used@@Base+0xc300>
  45751c:	ldur	x8, [x29, #-144]
  457520:	stp	xzr, xzr, [x8]
  457524:	b	457530 <_obstack_memory_used@@Base+0xc36c>
  457528:	mov	x27, xzr
  45752c:	stp	xzr, xzr, [x29, #-32]
  457530:	mov	x0, x27
  457534:	bl	4046b0 <free@plt>
  457538:	ldur	w8, [x29, #-92]
  45753c:	cbz	w8, 457548 <_obstack_memory_used@@Base+0xc384>
  457540:	ldur	x0, [x29, #-88]
  457544:	bl	4046b0 <free@plt>
  457548:	cbz	x19, 45759c <_obstack_memory_used@@Base+0xc3d8>
  45754c:	ldr	x8, [x19]
  457550:	ldr	x0, [x19, #16]
  457554:	cmp	x8, #0x1
  457558:	b.lt	456cac <_obstack_memory_used@@Base+0xbae8>  // b.tstop
  45755c:	mov	x20, xzr
  457560:	mov	x21, xzr
  457564:	add	x8, x0, x20
  457568:	ldr	x0, [x8, #40]
  45756c:	bl	4046b0 <free@plt>
  457570:	ldr	x8, [x19, #16]
  457574:	add	x8, x8, x20
  457578:	ldr	x0, [x8, #16]
  45757c:	bl	4046b0 <free@plt>
  457580:	ldr	x8, [x19]
  457584:	ldr	x0, [x19, #16]
  457588:	add	x21, x21, #0x1
  45758c:	add	x20, x20, #0x30
  457590:	cmp	x21, x8
  457594:	b.lt	457564 <_obstack_memory_used@@Base+0xc3a0>  // b.tstop
  457598:	b	456cac <_obstack_memory_used@@Base+0xbae8>
  45759c:	mov	w0, #0xc                   	// #12
  4575a0:	mov	sp, x29
  4575a4:	ldp	x20, x19, [sp, #80]
  4575a8:	ldp	x22, x21, [sp, #64]
  4575ac:	ldp	x24, x23, [sp, #48]
  4575b0:	ldp	x26, x25, [sp, #32]
  4575b4:	ldp	x28, x27, [sp, #16]
  4575b8:	ldp	x29, x30, [sp], #96
  4575bc:	ret
  4575c0:	ldur	x27, [x29, #-16]
  4575c4:	b	457530 <_obstack_memory_used@@Base+0xc36c>
  4575c8:	ldur	x27, [x29, #-136]
  4575cc:	b	457530 <_obstack_memory_used@@Base+0xc36c>
  4575d0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4575d4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4575d8:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  4575dc:	add	x0, x0, #0x923
  4575e0:	add	x1, x1, #0x7d7
  4575e4:	add	x3, x3, #0x92c
  4575e8:	mov	w2, #0x553                 	// #1363
  4575ec:	bl	4049b0 <__assert_fail@plt>
  4575f0:	sub	sp, sp, #0x20
  4575f4:	stp	x29, x30, [sp, #16]
  4575f8:	add	x29, sp, #0x10
  4575fc:	tbnz	x1, #63, 4576c8 <_obstack_memory_used@@Base+0xc504>
  457600:	ldr	x8, [x0, #88]
  457604:	cmp	x8, x1
  457608:	b.eq	4576dc <_obstack_memory_used@@Base+0xc518>  // b.none
  45760c:	ldr	w8, [x0, #144]
  457610:	cmp	w8, #0x2
  457614:	b.lt	457648 <_obstack_memory_used@@Base+0xc484>  // b.tstop
  457618:	ldr	x8, [x0, #16]
  45761c:	ldr	w9, [x8, x1, lsl #2]
  457620:	cmn	w9, #0x1
  457624:	b.ne	45767c <_obstack_memory_used@@Base+0xc4b8>  // b.any
  457628:	cmp	x1, #0x0
  45762c:	sub	x1, x1, #0x1
  457630:	b.gt	45761c <_obstack_memory_used@@Base+0xc458>
  457634:	ldr	w8, [x0, #112]
  457638:	ldp	x29, x30, [sp, #16]
  45763c:	mov	w0, w8
  457640:	add	sp, sp, #0x20
  457644:	ret
  457648:	ldr	x8, [x0, #8]
  45764c:	ldr	x9, [x0, #128]
  457650:	ldrb	w8, [x8, x1]
  457654:	lsr	x10, x8, #3
  457658:	and	x10, x10, #0x18
  45765c:	ldr	x9, [x9, x10]
  457660:	lsr	x9, x9, x8
  457664:	tbz	w9, #0, 4576ac <_obstack_memory_used@@Base+0xc4e8>
  457668:	mov	w8, #0x1                   	// #1
  45766c:	ldp	x29, x30, [sp, #16]
  457670:	mov	w0, w8
  457674:	add	sp, sp, #0x20
  457678:	ret
  45767c:	ldrb	w8, [x0, #142]
  457680:	cbnz	w8, 4576f8 <_obstack_memory_used@@Base+0xc534>
  457684:	cmp	w9, #0xa
  457688:	b.ne	4576b4 <_obstack_memory_used@@Base+0xc4f0>  // b.any
  45768c:	ldrb	w8, [x0, #141]
  457690:	cmp	w8, #0x0
  457694:	cset	w8, ne  // ne = any
  457698:	lsl	w8, w8, #1
  45769c:	ldp	x29, x30, [sp, #16]
  4576a0:	mov	w0, w8
  4576a4:	add	sp, sp, #0x20
  4576a8:	ret
  4576ac:	cmp	w8, #0xa
  4576b0:	b.eq	45768c <_obstack_memory_used@@Base+0xc4c8>  // b.none
  4576b4:	mov	w8, wzr
  4576b8:	ldp	x29, x30, [sp, #16]
  4576bc:	mov	w0, w8
  4576c0:	add	sp, sp, #0x20
  4576c4:	ret
  4576c8:	ldr	w8, [x0, #112]
  4576cc:	ldp	x29, x30, [sp, #16]
  4576d0:	mov	w0, w8
  4576d4:	add	sp, sp, #0x20
  4576d8:	ret
  4576dc:	and	w8, w2, #0x2
  4576e0:	mov	w9, #0xa                   	// #10
  4576e4:	eor	w8, w8, w9
  4576e8:	ldp	x29, x30, [sp, #16]
  4576ec:	mov	w0, w8
  4576f0:	add	sp, sp, #0x20
  4576f4:	ret
  4576f8:	str	x0, [sp]
  4576fc:	mov	w0, w9
  457700:	stur	w9, [x29, #-4]
  457704:	bl	404880 <iswalnum@plt>
  457708:	ldur	w9, [x29, #-4]
  45770c:	mov	w8, #0x1                   	// #1
  457710:	cmp	w9, #0x5f
  457714:	b.eq	457638 <_obstack_memory_used@@Base+0xc474>  // b.none
  457718:	mov	w10, w0
  45771c:	ldr	x0, [sp]
  457720:	cbz	w10, 457684 <_obstack_memory_used@@Base+0xc4c0>
  457724:	b	457638 <_obstack_memory_used@@Base+0xc474>
  457728:	stp	x29, x30, [sp, #-80]!
  45772c:	stp	x24, x23, [sp, #32]
  457730:	stp	x22, x21, [sp, #48]
  457734:	stp	x20, x19, [sp, #64]
  457738:	ldr	x8, [x1, #8]
  45773c:	str	x25, [sp, #16]
  457740:	mov	x29, sp
  457744:	cmp	x8, #0x1
  457748:	b.lt	457810 <_obstack_memory_used@@Base+0xc64c>  // b.tstop
  45774c:	ldr	x22, [x0, #152]
  457750:	mov	x19, x2
  457754:	mov	x20, x1
  457758:	mov	x21, x0
  45775c:	mov	x23, xzr
  457760:	b	457784 <_obstack_memory_used@@Base+0xc5c0>
  457764:	add	x8, x8, #0x1
  457768:	str	x24, [x9, #8]
  45776c:	str	x8, [x21, #232]
  457770:	str	x19, [x9]
  457774:	ldr	x8, [x20, #8]
  457778:	add	x23, x23, #0x1
  45777c:	cmp	x23, x8
  457780:	b.ge	457810 <_obstack_memory_used@@Base+0xc64c>  // b.tcont
  457784:	ldr	x9, [x20, #16]
  457788:	ldr	x24, [x9, x23, lsl #3]
  45778c:	ldr	x9, [x22]
  457790:	add	x10, x9, x24, lsl #4
  457794:	ldrb	w10, [x10, #8]
  457798:	cmp	w10, #0x8
  45779c:	b.ne	457778 <_obstack_memory_used@@Base+0xc5b4>  // b.any
  4577a0:	lsl	x10, x24, #4
  4577a4:	ldr	x9, [x9, x10]
  4577a8:	cmp	x9, #0x3f
  4577ac:	b.gt	457778 <_obstack_memory_used@@Base+0xc5b4>
  4577b0:	ldr	x10, [x22, #160]
  4577b4:	lsr	x9, x10, x9
  4577b8:	tbz	w9, #0, 457778 <_obstack_memory_used@@Base+0xc5b4>
  4577bc:	ldp	x25, x8, [x21, #232]
  4577c0:	cmp	x25, x8
  4577c4:	b.eq	4577f4 <_obstack_memory_used@@Base+0xc630>  // b.none
  4577c8:	mov	w0, #0x1                   	// #1
  4577cc:	mov	w1, #0x30                  	// #48
  4577d0:	bl	4043d0 <calloc@plt>
  4577d4:	ldr	x8, [x21, #232]
  4577d8:	ldr	x9, [x21, #248]
  4577dc:	lsl	x10, x8, #3
  4577e0:	str	x0, [x9, x10]
  4577e4:	ldr	x9, [x21, #248]
  4577e8:	ldr	x9, [x9, x10]
  4577ec:	cbnz	x9, 457764 <_obstack_memory_used@@Base+0xc5a0>
  4577f0:	b	45782c <_obstack_memory_used@@Base+0xc668>
  4577f4:	ldr	x0, [x21, #248]
  4577f8:	lsl	x1, x25, #4
  4577fc:	bl	404450 <realloc@plt>
  457800:	cbz	x0, 45782c <_obstack_memory_used@@Base+0xc668>
  457804:	lsl	x8, x25, #1
  457808:	stp	x8, x0, [x21, #240]
  45780c:	b	4577c8 <_obstack_memory_used@@Base+0xc604>
  457810:	mov	w0, wzr
  457814:	ldp	x20, x19, [sp, #64]
  457818:	ldp	x22, x21, [sp, #48]
  45781c:	ldp	x24, x23, [sp, #32]
  457820:	ldr	x25, [sp, #16]
  457824:	ldp	x29, x30, [sp], #80
  457828:	ret
  45782c:	mov	w0, #0xc                   	// #12
  457830:	b	457814 <_obstack_memory_used@@Base+0xc650>
  457834:	sub	sp, sp, #0xd0
  457838:	stp	x29, x30, [sp, #112]
  45783c:	stp	x28, x27, [sp, #128]
  457840:	stp	x26, x25, [sp, #144]
  457844:	stp	x24, x23, [sp, #160]
  457848:	stp	x22, x21, [sp, #176]
  45784c:	stp	x20, x19, [sp, #192]
  457850:	ldr	x8, [x1, #8]
  457854:	add	x29, sp, #0x70
  457858:	cmp	x8, #0x1
  45785c:	b.lt	4580b0 <_obstack_memory_used@@Base+0xceec>  // b.tstop
  457860:	ldr	x10, [x0, #152]
  457864:	ldr	x8, [x0, #72]
  457868:	mov	x28, x0
  45786c:	mov	x9, xzr
  457870:	mov	w23, #0x28                  	// #40
  457874:	stur	x8, [x29, #-48]
  457878:	str	x1, [sp]
  45787c:	str	x10, [sp, #16]
  457880:	b	4578a4 <_obstack_memory_used@@Base+0xc6e0>
  457884:	stur	wzr, [x29, #-4]
  457888:	ldr	x1, [sp]
  45788c:	ldr	x9, [sp, #40]
  457890:	ldr	x10, [sp, #16]
  457894:	ldr	x8, [x1, #8]
  457898:	add	x9, x9, #0x1
  45789c:	cmp	x9, x8
  4578a0:	b.ge	4580b0 <_obstack_memory_used@@Base+0xceec>  // b.tcont
  4578a4:	ldr	x8, [x1, #16]
  4578a8:	str	x9, [sp, #40]
  4578ac:	ldr	x9, [x8, x9, lsl #3]
  4578b0:	ldr	x8, [x10]
  4578b4:	stur	x9, [x29, #-40]
  4578b8:	add	x19, x8, x9, lsl #4
  4578bc:	ldr	w21, [x19, #8]!
  4578c0:	and	w8, w21, #0xff
  4578c4:	cmp	w8, #0x4
  4578c8:	b.ne	457888 <_obstack_memory_used@@Base+0xc6c4>  // b.any
  4578cc:	tst	w21, #0x3ff00
  4578d0:	b.eq	4579b8 <_obstack_memory_used@@Base+0xc7f4>  // b.none
  4578d4:	ldur	x9, [x29, #-48]
  4578d8:	tbnz	x9, #63, 457910 <_obstack_memory_used@@Base+0xc74c>
  4578dc:	ldr	x8, [x28, #88]
  4578e0:	cmp	x8, x9
  4578e4:	b.eq	458070 <_obstack_memory_used@@Base+0xceac>  // b.none
  4578e8:	ldr	w8, [x28, #144]
  4578ec:	cmp	w8, #0x2
  4578f0:	b.lt	457924 <_obstack_memory_used@@Base+0xc760>  // b.tstop
  4578f4:	ldr	x8, [x28, #16]
  4578f8:	ldr	w24, [x8, x9, lsl #2]
  4578fc:	cmn	w24, #0x1
  457900:	b.ne	457950 <_obstack_memory_used@@Base+0xc78c>  // b.any
  457904:	cmp	x9, #0x0
  457908:	sub	x9, x9, #0x1
  45790c:	b.gt	4578f8 <_obstack_memory_used@@Base+0xc734>
  457910:	ldr	w8, [x28, #112]
  457914:	tst	w8, #0x1
  457918:	cset	w9, eq  // eq = none
  45791c:	tbnz	w21, #10, 457998 <_obstack_memory_used@@Base+0xc7d4>
  457920:	b	45799c <_obstack_memory_used@@Base+0xc7d8>
  457924:	ldr	x8, [x28, #8]
  457928:	ldrb	w8, [x8, x9]
  45792c:	ldr	x9, [x28, #128]
  457930:	lsr	x10, x8, #3
  457934:	and	x10, x10, #0x18
  457938:	ldr	x9, [x9, x10]
  45793c:	lsr	x9, x9, x8
  457940:	tbz	w9, #0, 457980 <_obstack_memory_used@@Base+0xc7bc>
  457944:	mov	w9, wzr
  457948:	mov	w8, #0x1                   	// #1
  45794c:	b	45799c <_obstack_memory_used@@Base+0xc7d8>
  457950:	ldrb	w8, [x28, #142]
  457954:	cbnz	w8, 458090 <_obstack_memory_used@@Base+0xcecc>
  457958:	cmp	w24, #0xa
  45795c:	b.ne	457988 <_obstack_memory_used@@Base+0xc7c4>  // b.any
  457960:	ldrb	w8, [x28, #141]
  457964:	cmp	w8, #0x0
  457968:	cset	w8, ne  // ne = any
  45796c:	lsl	w8, w8, #1
  457970:	tst	w8, #0x1
  457974:	cset	w9, eq  // eq = none
  457978:	tbnz	w21, #10, 457998 <_obstack_memory_used@@Base+0xc7d4>
  45797c:	b	45799c <_obstack_memory_used@@Base+0xc7d8>
  457980:	cmp	w8, #0xa
  457984:	b.eq	457960 <_obstack_memory_used@@Base+0xc79c>  // b.none
  457988:	mov	w8, wzr
  45798c:	tst	w8, #0x1
  457990:	cset	w9, eq  // eq = none
  457994:	tbz	w21, #10, 45799c <_obstack_memory_used@@Base+0xc7d8>
  457998:	tbz	w8, #0, 457888 <_obstack_memory_used@@Base+0xc6c4>
  45799c:	ldr	w10, [x19]
  4579a0:	tbnz	w9, #0, 4579a8 <_obstack_memory_used@@Base+0xc7e4>
  4579a4:	tbnz	w10, #11, 457888 <_obstack_memory_used@@Base+0xc6c4>
  4579a8:	tbnz	w8, #1, 4579b0 <_obstack_memory_used@@Base+0xc7ec>
  4579ac:	tbnz	w10, #13, 457888 <_obstack_memory_used@@Base+0xc6c4>
  4579b0:	tbnz	w8, #3, 4579b8 <_obstack_memory_used@@Base+0xc7f4>
  4579b4:	tbnz	w10, #15, 457888 <_obstack_memory_used@@Base+0xc6c4>
  4579b8:	ldr	x10, [x28, #200]
  4579bc:	ldr	x20, [x28, #152]
  4579c0:	ldr	x19, [x28, #8]
  4579c4:	mov	x8, xzr
  4579c8:	cmp	x10, #0x1
  4579cc:	str	x10, [sp, #8]
  4579d0:	b.lt	457a18 <_obstack_memory_used@@Base+0xc854>  // b.tstop
  4579d4:	ldr	x9, [x28, #216]
  4579d8:	ldur	x24, [x29, #-48]
  4579dc:	add	x11, x10, x8
  4579e0:	cmp	x11, #0x0
  4579e4:	cinc	x11, x11, lt  // lt = tstop
  4579e8:	asr	x11, x11, #1
  4579ec:	madd	x12, x11, x23, x9
  4579f0:	ldr	x12, [x12, #8]
  4579f4:	cmp	x12, x24
  4579f8:	csel	x10, x10, x11, lt  // lt = tstop
  4579fc:	csinc	x8, x8, x11, ge  // ge = tcont
  457a00:	cmp	x8, x10
  457a04:	b.lt	4579dc <_obstack_memory_used@@Base+0xc818>  // b.tstop
  457a08:	ldr	x9, [sp, #8]
  457a0c:	cmp	x8, x9
  457a10:	b.lt	457a28 <_obstack_memory_used@@Base+0xc864>  // b.tstop
  457a14:	b	457a64 <_obstack_memory_used@@Base+0xc8a0>
  457a18:	ldur	x24, [x29, #-48]
  457a1c:	ldr	x9, [sp, #8]
  457a20:	cmp	x8, x9
  457a24:	b.ge	457a64 <_obstack_memory_used@@Base+0xc8a0>  // b.tcont
  457a28:	cmn	x8, #0x1
  457a2c:	b.eq	457a64 <_obstack_memory_used@@Base+0xc8a0>  // b.none
  457a30:	ldr	x9, [x28, #216]
  457a34:	madd	x10, x8, x23, x9
  457a38:	ldr	x10, [x10, #8]
  457a3c:	cmp	x10, x24
  457a40:	b.ne	457a64 <_obstack_memory_used@@Base+0xc8a0>  // b.any
  457a44:	madd	x8, x8, x23, x9
  457a48:	ldr	x9, [x8]
  457a4c:	ldur	x10, [x29, #-40]
  457a50:	cmp	x9, x10
  457a54:	b.eq	457884 <_obstack_memory_used@@Base+0xc6c0>  // b.none
  457a58:	ldrb	w9, [x8, #32]
  457a5c:	add	x8, x8, #0x28
  457a60:	cbnz	w9, 457a48 <_obstack_memory_used@@Base+0xc884>
  457a64:	ldr	x8, [x28, #232]
  457a68:	cmp	x8, #0x1
  457a6c:	b.lt	457884 <_obstack_memory_used@@Base+0xc6c0>  // b.tstop
  457a70:	ldur	x9, [x29, #-40]
  457a74:	ldr	x8, [x20]
  457a78:	mov	x12, xzr
  457a7c:	lsl	x9, x9, #4
  457a80:	ldr	x21, [x8, x9]
  457a84:	stp	x21, x20, [sp, #24]
  457a88:	ldr	x9, [x28, #248]
  457a8c:	ldr	x27, [x9, x12, lsl #3]
  457a90:	ldr	x9, [x27, #8]
  457a94:	lsl	x9, x9, #4
  457a98:	ldr	x8, [x8, x9]
  457a9c:	cmp	x8, x21
  457aa0:	b.ne	457c20 <_obstack_memory_used@@Base+0xca5c>  // b.any
  457aa4:	stp	x12, x27, [sp, #48]
  457aa8:	ldr	x8, [x27, #32]
  457aac:	ldr	x20, [x27]
  457ab0:	mov	x23, xzr
  457ab4:	mov	x22, x24
  457ab8:	cmp	x8, #0x1
  457abc:	b.lt	457bd4 <_obstack_memory_used@@Base+0xca10>  // b.tstop
  457ac0:	mov	x21, x20
  457ac4:	ldr	x9, [x27, #40]
  457ac8:	ldr	x26, [x9, x23, lsl #3]
  457acc:	ldr	x20, [x26, #8]
  457ad0:	sub	x25, x20, x21
  457ad4:	cmp	x25, #0x1
  457ad8:	b.lt	457b0c <_obstack_memory_used@@Base+0xc948>  // b.tstop
  457adc:	ldr	x9, [x28, #48]
  457ae0:	mov	x24, x28
  457ae4:	add	x28, x25, x22
  457ae8:	cmp	x28, x9
  457aec:	b.gt	457b50 <_obstack_memory_used@@Base+0xc98c>
  457af0:	mov	x28, x24
  457af4:	add	x0, x19, x22
  457af8:	add	x1, x19, x21
  457afc:	mov	x2, x25
  457b00:	bl	404400 <bcmp@plt>
  457b04:	ldur	x24, [x29, #-48]
  457b08:	cbnz	w0, 457bcc <_obstack_memory_used@@Base+0xca08>
  457b0c:	ldur	x3, [x29, #-40]
  457b10:	mov	x0, x28
  457b14:	mov	x1, x27
  457b18:	mov	x2, x26
  457b1c:	mov	x4, x24
  457b20:	bl	458700 <_obstack_memory_used@@Base+0xd53c>
  457b24:	cmp	w0, #0x1
  457b28:	b.hi	4580e8 <_obstack_memory_used@@Base+0xcf24>  // b.pmore
  457b2c:	ldr	x8, [x27, #32]
  457b30:	ldr	x19, [x28, #8]
  457b34:	add	x23, x23, #0x1
  457b38:	add	x22, x25, x22
  457b3c:	cmp	x23, x8
  457b40:	mov	x21, x20
  457b44:	mov	x9, x27
  457b48:	b.lt	457ac4 <_obstack_memory_used@@Base+0xc900>  // b.tstop
  457b4c:	b	457bd4 <_obstack_memory_used@@Base+0xca10>
  457b50:	ldr	x10, [x24, #88]
  457b54:	mov	x11, x24
  457b58:	cmp	x28, x10
  457b5c:	b.gt	457bec <_obstack_memory_used@@Base+0xca28>
  457b60:	ldr	x8, [x11, #64]
  457b64:	ldr	x19, [x11, #192]
  457b68:	cmp	x8, x28
  457b6c:	b.gt	457b78 <_obstack_memory_used@@Base+0xc9b4>
  457b70:	cmp	x8, x10
  457b74:	b.lt	457b88 <_obstack_memory_used@@Base+0xc9c4>  // b.tstop
  457b78:	cmp	x9, x28
  457b7c:	b.gt	457b98 <_obstack_memory_used@@Base+0xc9d4>
  457b80:	cmp	x9, x10
  457b84:	b.ge	457b98 <_obstack_memory_used@@Base+0xc9d4>  // b.tcont
  457b88:	add	w1, w28, #0x1
  457b8c:	mov	x0, x24
  457b90:	bl	45810c <_obstack_memory_used@@Base+0xcf48>
  457b94:	cbnz	w0, 4580e8 <_obstack_memory_used@@Base+0xcf24>
  457b98:	subs	x8, x28, x19
  457b9c:	b.le	457bc0 <_obstack_memory_used@@Base+0xc9fc>
  457ba0:	ldr	x9, [x24, #184]
  457ba4:	lsl	x2, x8, #3
  457ba8:	mov	w1, wzr
  457bac:	mov	x27, x24
  457bb0:	add	x9, x9, x19, lsl #3
  457bb4:	add	x0, x9, #0x8
  457bb8:	bl	404320 <memset@plt>
  457bbc:	str	x28, [x24, #192]
  457bc0:	ldr	x19, [x24, #8]
  457bc4:	ldr	x27, [sp, #56]
  457bc8:	b	457af0 <_obstack_memory_used@@Base+0xc92c>
  457bcc:	ldr	x8, [x27, #32]
  457bd0:	mov	x20, x21
  457bd4:	cmp	x23, x8
  457bd8:	b.ge	457c00 <_obstack_memory_used@@Base+0xca3c>  // b.tcont
  457bdc:	ldp	x21, x20, [sp, #24]
  457be0:	ldr	x12, [sp, #48]
  457be4:	mov	w23, #0x28                  	// #40
  457be8:	b	457c20 <_obstack_memory_used@@Base+0xca5c>
  457bec:	ldur	x24, [x29, #-48]
  457bf0:	mov	x20, x21
  457bf4:	mov	x28, x11
  457bf8:	cmp	x23, x8
  457bfc:	b.lt	457bdc <_obstack_memory_used@@Base+0xca18>  // b.tstop
  457c00:	ldr	x21, [sp, #24]
  457c04:	ldr	x12, [sp, #48]
  457c08:	cmp	x23, #0x0
  457c0c:	cinc	x25, x20, ne  // ne = any
  457c10:	cmp	x25, x24
  457c14:	mov	w23, #0x28                  	// #40
  457c18:	b.le	457c38 <_obstack_memory_used@@Base+0xca74>
  457c1c:	ldr	x20, [sp, #32]
  457c20:	ldr	x8, [x28, #232]
  457c24:	add	x12, x12, #0x1
  457c28:	cmp	x12, x8
  457c2c:	b.ge	457dec <_obstack_memory_used@@Base+0xcc28>  // b.tcont
  457c30:	ldr	x8, [x20]
  457c34:	b	457a88 <_obstack_memory_used@@Base+0xc8c4>
  457c38:	ldr	x20, [sp, #32]
  457c3c:	b	457c50 <_obstack_memory_used@@Base+0xca8c>
  457c40:	ldr	x27, [sp, #56]
  457c44:	cmp	x25, x24
  457c48:	add	x25, x25, #0x1
  457c4c:	b.ge	457c20 <_obstack_memory_used@@Base+0xca5c>  // b.tcont
  457c50:	ldr	x8, [x27]
  457c54:	cmp	x25, x8
  457c58:	b.le	457c80 <_obstack_memory_used@@Base+0xcabc>
  457c5c:	ldr	x8, [x28, #48]
  457c60:	cmp	x22, x8
  457c64:	b.ge	457d90 <_obstack_memory_used@@Base+0xcbcc>  // b.tcont
  457c68:	add	x9, x25, x19
  457c6c:	ldrb	w8, [x19, x22]
  457c70:	ldurb	w9, [x9, #-1]
  457c74:	cmp	w8, w9
  457c78:	b.ne	457c20 <_obstack_memory_used@@Base+0xca5c>  // b.any
  457c7c:	add	x22, x22, #0x1
  457c80:	ldr	x8, [x28, #184]
  457c84:	ldr	x9, [x8, x25, lsl #3]
  457c88:	cbz	x9, 457c40 <_obstack_memory_used@@Base+0xca7c>
  457c8c:	ldr	x8, [x9, #16]
  457c90:	cmp	x8, #0x1
  457c94:	b.lt	457c40 <_obstack_memory_used@@Base+0xca7c>  // b.tstop
  457c98:	ldr	x9, [x9, #24]
  457c9c:	ldr	x10, [x20]
  457ca0:	b	457cb0 <_obstack_memory_used@@Base+0xcaec>
  457ca4:	subs	x8, x8, #0x1
  457ca8:	add	x9, x9, #0x8
  457cac:	b.eq	457c40 <_obstack_memory_used@@Base+0xca7c>  // b.none
  457cb0:	ldr	x26, [x9]
  457cb4:	add	x11, x10, x26, lsl #4
  457cb8:	ldrb	w11, [x11, #8]
  457cbc:	cmp	w11, #0x9
  457cc0:	b.ne	457ca4 <_obstack_memory_used@@Base+0xcae0>  // b.any
  457cc4:	lsl	x11, x26, #4
  457cc8:	ldr	x11, [x10, x11]
  457ccc:	cmp	x11, x21
  457cd0:	b.ne	457ca4 <_obstack_memory_used@@Base+0xcae0>  // b.any
  457cd4:	cmn	x26, #0x1
  457cd8:	b.eq	457c40 <_obstack_memory_used@@Base+0xca7c>  // b.none
  457cdc:	ldr	x1, [x27, #16]
  457ce0:	cbnz	x1, 457d04 <_obstack_memory_used@@Base+0xcb40>
  457ce4:	ldr	x8, [x27]
  457ce8:	mov	w0, #0x18                  	// #24
  457cec:	sub	x8, x25, x8
  457cf0:	add	x1, x8, #0x1
  457cf4:	bl	4043d0 <calloc@plt>
  457cf8:	mov	x1, x0
  457cfc:	str	x0, [x27, #16]
  457d00:	cbz	x0, 4580dc <_obstack_memory_used@@Base+0xcf18>
  457d04:	ldp	x3, x2, [x27]
  457d08:	mov	w6, #0x9                   	// #9
  457d0c:	mov	x0, x28
  457d10:	mov	x4, x26
  457d14:	mov	x5, x25
  457d18:	bl	4588b8 <_obstack_memory_used@@Base+0xd6f4>
  457d1c:	ldr	x12, [sp, #48]
  457d20:	cmp	w0, #0x1
  457d24:	b.eq	457c40 <_obstack_memory_used@@Base+0xca7c>  // b.none
  457d28:	mov	w27, w0
  457d2c:	cbnz	w0, 4580ec <_obstack_memory_used@@Base+0xcf28>
  457d30:	ldr	x27, [sp, #56]
  457d34:	ldp	x9, x8, [x27, #24]
  457d38:	cmp	x8, x9
  457d3c:	b.eq	457db8 <_obstack_memory_used@@Base+0xcbf4>  // b.none
  457d40:	mov	w0, #0x1                   	// #1
  457d44:	mov	w1, #0x28                  	// #40
  457d48:	bl	4043d0 <calloc@plt>
  457d4c:	cbz	x0, 4580dc <_obstack_memory_used@@Base+0xcf18>
  457d50:	ldp	x9, x8, [x27, #32]
  457d54:	ldur	x3, [x29, #-40]
  457d58:	mov	x2, x0
  457d5c:	mov	x1, x27
  457d60:	str	x0, [x8, x9, lsl #3]
  457d64:	stp	x26, x25, [x0]
  457d68:	add	x8, x9, #0x1
  457d6c:	mov	x0, x28
  457d70:	mov	x4, x24
  457d74:	str	x8, [x27, #32]
  457d78:	bl	458700 <_obstack_memory_used@@Base+0xd53c>
  457d7c:	cmp	w0, #0x1
  457d80:	b.hi	4580e8 <_obstack_memory_used@@Base+0xcf24>  // b.pmore
  457d84:	ldr	x19, [x28, #8]
  457d88:	ldr	x12, [sp, #48]
  457d8c:	b	457c40 <_obstack_memory_used@@Base+0xca7c>
  457d90:	ldr	x8, [x28, #88]
  457d94:	cmp	x22, x8
  457d98:	b.ge	457c20 <_obstack_memory_used@@Base+0xca5c>  // b.tcont
  457d9c:	add	w1, w22, #0x1
  457da0:	mov	x0, x28
  457da4:	bl	45810c <_obstack_memory_used@@Base+0xcf48>
  457da8:	cbnz	w0, 4580e8 <_obstack_memory_used@@Base+0xcf24>
  457dac:	ldr	x19, [x28, #8]
  457db0:	ldp	x12, x27, [sp, #48]
  457db4:	b	457c68 <_obstack_memory_used@@Base+0xcaa4>
  457db8:	ldr	x0, [x27, #40]
  457dbc:	mov	w19, #0x1                   	// #1
  457dc0:	bfi	x19, x8, #1, #63
  457dc4:	lsl	x1, x19, #3
  457dc8:	bl	404450 <realloc@plt>
  457dcc:	cbz	x0, 4580dc <_obstack_memory_used@@Base+0xcf18>
  457dd0:	str	x0, [x27, #40]
  457dd4:	str	x19, [x27, #24]
  457dd8:	mov	w0, #0x1                   	// #1
  457ddc:	mov	w1, #0x28                  	// #40
  457de0:	bl	4043d0 <calloc@plt>
  457de4:	cbnz	x0, 457d50 <_obstack_memory_used@@Base+0xcb8c>
  457de8:	b	4580dc <_obstack_memory_used@@Base+0xcf18>
  457dec:	ldr	x8, [x28, #200]
  457df0:	ldr	x19, [sp, #8]
  457df4:	stur	wzr, [x29, #-4]
  457df8:	cmp	x19, x8
  457dfc:	b.lt	457e14 <_obstack_memory_used@@Base+0xcc50>  // b.tstop
  457e00:	b	457888 <_obstack_memory_used@@Base+0xc6c4>
  457e04:	ldr	x8, [x28, #200]
  457e08:	add	x19, x19, #0x1
  457e0c:	cmp	x19, x8
  457e10:	b.ge	457888 <_obstack_memory_used@@Base+0xc6c4>  // b.tcont
  457e14:	ldr	x8, [x28, #216]
  457e18:	mul	x9, x19, x23
  457e1c:	ldur	x10, [x29, #-40]
  457e20:	ldr	x9, [x8, x9]
  457e24:	cmp	x9, x10
  457e28:	b.ne	457e04 <_obstack_memory_used@@Base+0xcc40>  // b.any
  457e2c:	madd	x9, x19, x23, x8
  457e30:	ldr	x9, [x9, #8]
  457e34:	ldur	x10, [x29, #-48]
  457e38:	cmp	x9, x10
  457e3c:	b.ne	457e04 <_obstack_memory_used@@Base+0xcc40>  // b.any
  457e40:	str	x19, [sp, #8]
  457e44:	madd	x8, x19, x23, x8
  457e48:	ldp	x21, x19, [x8, #16]
  457e4c:	ldr	x8, [sp, #16]
  457e50:	cmp	x19, x21
  457e54:	ldr	x23, [x8, #48]
  457e58:	b.ne	457e74 <_obstack_memory_used@@Base+0xccb0>  // b.any
  457e5c:	ldr	x8, [x8, #40]
  457e60:	ldur	x10, [x29, #-40]
  457e64:	mov	w9, #0x18                  	// #24
  457e68:	madd	x8, x10, x9, x8
  457e6c:	ldr	x8, [x8, #16]
  457e70:	b	457e80 <_obstack_memory_used@@Base+0xccbc>
  457e74:	ldr	x8, [x8, #24]
  457e78:	ldur	x9, [x29, #-40]
  457e7c:	add	x8, x8, x9, lsl #3
  457e80:	ldur	x9, [x29, #-48]
  457e84:	ldr	x26, [x8]
  457e88:	add	x8, x19, x9
  457e8c:	sub	x22, x8, x21
  457e90:	cmp	x22, #0x0
  457e94:	b.le	457ed8 <_obstack_memory_used@@Base+0xcd14>
  457e98:	ldr	x9, [x28, #88]
  457e9c:	sub	x8, x22, #0x1
  457ea0:	cmp	x9, x8
  457ea4:	b.eq	458040 <_obstack_memory_used@@Base+0xce7c>  // b.none
  457ea8:	ldr	w9, [x28, #144]
  457eac:	cmp	w9, #0x2
  457eb0:	b.lt	457ee0 <_obstack_memory_used@@Base+0xcd1c>  // b.tstop
  457eb4:	ldr	x8, [x28, #16]
  457eb8:	mov	x9, x22
  457ebc:	sub	x8, x8, #0x4
  457ec0:	ldr	w24, [x8, x9, lsl #2]
  457ec4:	cmn	w24, #0x1
  457ec8:	b.ne	457f08 <_obstack_memory_used@@Base+0xcd44>  // b.any
  457ecc:	sub	x9, x9, #0x1
  457ed0:	cmp	x9, #0x0
  457ed4:	b.gt	457ec0 <_obstack_memory_used@@Base+0xccfc>
  457ed8:	ldr	w25, [x28, #112]
  457edc:	b	457f38 <_obstack_memory_used@@Base+0xcd74>
  457ee0:	ldr	x9, [x28, #8]
  457ee4:	ldrb	w8, [x9, x8]
  457ee8:	ldr	x9, [x28, #128]
  457eec:	lsr	x10, x8, #3
  457ef0:	and	x10, x10, #0x18
  457ef4:	ldr	x9, [x9, x10]
  457ef8:	lsr	x9, x9, x8
  457efc:	tbz	w9, #0, 457f2c <_obstack_memory_used@@Base+0xcd68>
  457f00:	mov	w25, #0x1                   	// #1
  457f04:	b	457f38 <_obstack_memory_used@@Base+0xcd74>
  457f08:	ldrb	w8, [x28, #142]
  457f0c:	cbnz	w8, 458054 <_obstack_memory_used@@Base+0xce90>
  457f10:	cmp	w24, #0xa
  457f14:	b.ne	457f34 <_obstack_memory_used@@Base+0xcd70>  // b.any
  457f18:	ldrb	w8, [x28, #141]
  457f1c:	cmp	w8, #0x0
  457f20:	cset	w8, ne  // ne = any
  457f24:	lsl	w25, w8, #1
  457f28:	b	457f38 <_obstack_memory_used@@Base+0xcd74>
  457f2c:	cmp	w8, #0xa
  457f30:	b.eq	457f18 <_obstack_memory_used@@Base+0xcd54>  // b.none
  457f34:	mov	w25, wzr
  457f38:	ldr	x8, [x28, #184]
  457f3c:	ldur	x9, [x29, #-48]
  457f40:	mov	w10, #0x18                  	// #24
  457f44:	madd	x24, x26, x10, x23
  457f48:	ldr	x9, [x8, x9, lsl #3]
  457f4c:	ldr	x8, [x8, x22, lsl #3]
  457f50:	cbz	x9, 457fb0 <_obstack_memory_used@@Base+0xcdec>
  457f54:	ldr	x20, [x9, #16]
  457f58:	mov	w23, #0x28                  	// #40
  457f5c:	cbz	x8, 457fbc <_obstack_memory_used@@Base+0xcdf8>
  457f60:	ldr	x1, [x8, #80]
  457f64:	sub	x0, x29, #0x20
  457f68:	mov	x2, x24
  457f6c:	bl	45850c <_obstack_memory_used@@Base+0xd348>
  457f70:	stur	w0, [x29, #-4]
  457f74:	cbnz	w0, 4580f4 <_obstack_memory_used@@Base+0xcf30>
  457f78:	ldr	x1, [sp, #16]
  457f7c:	sub	x0, x29, #0x4
  457f80:	sub	x2, x29, #0x20
  457f84:	mov	w3, w25
  457f88:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  457f8c:	ldr	x8, [x28, #184]
  457f90:	lsl	x22, x22, #3
  457f94:	str	x0, [x8, x22]
  457f98:	ldur	x0, [x29, #-16]
  457f9c:	bl	4046b0 <free@plt>
  457fa0:	ldr	x8, [x28, #184]
  457fa4:	ldr	x9, [x8, x22]
  457fa8:	cbz	x9, 457fe8 <_obstack_memory_used@@Base+0xce24>
  457fac:	b	457ff0 <_obstack_memory_used@@Base+0xce2c>
  457fb0:	mov	x20, xzr
  457fb4:	mov	w23, #0x28                  	// #40
  457fb8:	cbnz	x8, 457f60 <_obstack_memory_used@@Base+0xcd9c>
  457fbc:	ldr	x1, [sp, #16]
  457fc0:	sub	x0, x29, #0x4
  457fc4:	mov	x2, x24
  457fc8:	mov	w3, w25
  457fcc:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  457fd0:	ldr	x8, [x28, #184]
  457fd4:	lsl	x9, x22, #3
  457fd8:	str	x0, [x8, x9]
  457fdc:	ldr	x8, [x28, #184]
  457fe0:	ldr	x9, [x8, x9]
  457fe4:	cbnz	x9, 457ff0 <_obstack_memory_used@@Base+0xce2c>
  457fe8:	ldur	w27, [x29, #-4]
  457fec:	cbnz	w27, 4580b8 <_obstack_memory_used@@Base+0xcef4>
  457ff0:	cmp	x19, x21
  457ff4:	ldr	x19, [sp, #8]
  457ff8:	b.ne	457e04 <_obstack_memory_used@@Base+0xcc40>  // b.any
  457ffc:	ldur	x9, [x29, #-48]
  458000:	ldr	x8, [x8, x9, lsl #3]
  458004:	ldr	x8, [x8, #16]
  458008:	cmp	x8, x20
  45800c:	b.le	457e04 <_obstack_memory_used@@Base+0xcc40>
  458010:	ldur	x2, [x29, #-48]
  458014:	mov	x0, x28
  458018:	mov	x1, x24
  45801c:	bl	457728 <_obstack_memory_used@@Base+0xc564>
  458020:	stur	w0, [x29, #-4]
  458024:	cbnz	w0, 458104 <_obstack_memory_used@@Base+0xcf40>
  458028:	mov	x0, x28
  45802c:	mov	x1, x24
  458030:	bl	457834 <_obstack_memory_used@@Base+0xc670>
  458034:	stur	w0, [x29, #-4]
  458038:	cbz	w0, 457e04 <_obstack_memory_used@@Base+0xcc40>
  45803c:	b	458104 <_obstack_memory_used@@Base+0xcf40>
  458040:	ldr	w8, [x28, #160]
  458044:	mov	w9, #0xa                   	// #10
  458048:	and	w8, w8, #0x2
  45804c:	eor	w25, w8, w9
  458050:	b	457f38 <_obstack_memory_used@@Base+0xcd74>
  458054:	mov	w0, w24
  458058:	bl	404880 <iswalnum@plt>
  45805c:	cmp	w24, #0x5f
  458060:	mov	w25, #0x1                   	// #1
  458064:	b.eq	457f38 <_obstack_memory_used@@Base+0xcd74>  // b.none
  458068:	cbz	w0, 457f10 <_obstack_memory_used@@Base+0xcd4c>
  45806c:	b	457f38 <_obstack_memory_used@@Base+0xcd74>
  458070:	ldr	w8, [x28, #160]
  458074:	mov	w9, #0xa                   	// #10
  458078:	and	w8, w8, #0x2
  45807c:	eor	w8, w8, w9
  458080:	tst	w8, #0x1
  458084:	cset	w9, eq  // eq = none
  458088:	tbnz	w21, #10, 457998 <_obstack_memory_used@@Base+0xc7d4>
  45808c:	b	45799c <_obstack_memory_used@@Base+0xc7d8>
  458090:	mov	w0, w24
  458094:	bl	404880 <iswalnum@plt>
  458098:	mov	w9, wzr
  45809c:	cmp	w24, #0x5f
  4580a0:	mov	w8, #0x1                   	// #1
  4580a4:	b.eq	45799c <_obstack_memory_used@@Base+0xc7d8>  // b.none
  4580a8:	cbz	w0, 457958 <_obstack_memory_used@@Base+0xc794>
  4580ac:	b	45799c <_obstack_memory_used@@Base+0xc7d8>
  4580b0:	mov	w27, wzr
  4580b4:	stur	wzr, [x29, #-4]
  4580b8:	mov	w0, w27
  4580bc:	ldp	x20, x19, [sp, #192]
  4580c0:	ldp	x22, x21, [sp, #176]
  4580c4:	ldp	x24, x23, [sp, #160]
  4580c8:	ldp	x26, x25, [sp, #144]
  4580cc:	ldp	x28, x27, [sp, #128]
  4580d0:	ldp	x29, x30, [sp, #112]
  4580d4:	add	sp, sp, #0xd0
  4580d8:	ret
  4580dc:	mov	w27, #0xc                   	// #12
  4580e0:	stur	w27, [x29, #-4]
  4580e4:	b	4580b8 <_obstack_memory_used@@Base+0xcef4>
  4580e8:	mov	w27, w0
  4580ec:	stur	w27, [x29, #-4]
  4580f0:	b	4580b8 <_obstack_memory_used@@Base+0xcef4>
  4580f4:	mov	w27, w0
  4580f8:	ldur	x0, [x29, #-16]
  4580fc:	bl	4046b0 <free@plt>
  458100:	b	4580b8 <_obstack_memory_used@@Base+0xcef4>
  458104:	mov	w27, w0
  458108:	b	4580b8 <_obstack_memory_used@@Base+0xcef4>
  45810c:	stp	x29, x30, [sp, #-48]!
  458110:	stp	x20, x19, [sp, #32]
  458114:	ldr	x8, [x0, #64]
  458118:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  45811c:	str	x21, [sp, #16]
  458120:	mov	x29, sp
  458124:	cmp	x8, x9
  458128:	b.hi	4582f0 <_obstack_memory_used@@Base+0xd12c>  // b.pmore
  45812c:	ldr	x9, [x0, #88]
  458130:	lsl	x8, x8, #1
  458134:	ldr	w11, [x0, #144]
  458138:	sxtw	x10, w1
  45813c:	cmp	x9, x8
  458140:	csel	x8, x9, x8, lt  // lt = tstop
  458144:	cmp	x8, x10
  458148:	mov	x19, x0
  45814c:	csel	x20, x8, x10, gt
  458150:	cmp	w11, #0x2
  458154:	b.lt	458190 <_obstack_memory_used@@Base+0xcfcc>  // b.tstop
  458158:	lsr	x8, x20, #61
  45815c:	cbnz	x8, 4582f0 <_obstack_memory_used@@Base+0xd12c>
  458160:	ldr	x0, [x19, #16]
  458164:	lsl	x1, x20, #2
  458168:	bl	404450 <realloc@plt>
  45816c:	cbz	x0, 4582f0 <_obstack_memory_used@@Base+0xd12c>
  458170:	mov	x8, x0
  458174:	ldr	x0, [x19, #24]
  458178:	str	x8, [x19, #16]
  45817c:	cbz	x0, 458190 <_obstack_memory_used@@Base+0xcfcc>
  458180:	lsl	x1, x20, #3
  458184:	bl	404450 <realloc@plt>
  458188:	cbz	x0, 4582f0 <_obstack_memory_used@@Base+0xd12c>
  45818c:	str	x0, [x19, #24]
  458190:	ldrb	w8, [x19, #139]
  458194:	cbz	w8, 4581ac <_obstack_memory_used@@Base+0xcfe8>
  458198:	ldr	x0, [x19, #8]
  45819c:	mov	x1, x20
  4581a0:	bl	404450 <realloc@plt>
  4581a4:	cbz	x0, 4582f0 <_obstack_memory_used@@Base+0xd12c>
  4581a8:	str	x0, [x19, #8]
  4581ac:	ldr	x0, [x19, #184]
  4581b0:	str	x20, [x19, #64]
  4581b4:	cbz	x0, 4581cc <_obstack_memory_used@@Base+0xd008>
  4581b8:	lsl	x8, x20, #3
  4581bc:	add	x1, x8, #0x8
  4581c0:	bl	404450 <realloc@plt>
  4581c4:	cbz	x0, 4582f0 <_obstack_memory_used@@Base+0xd12c>
  4581c8:	str	x0, [x19, #184]
  4581cc:	ldr	w8, [x19, #144]
  4581d0:	ldrb	w9, [x19, #136]
  4581d4:	cmp	w8, #0x2
  4581d8:	cbz	w9, 4581f0 <_obstack_memory_used@@Base+0xd02c>
  4581dc:	b.lt	458200 <_obstack_memory_used@@Base+0xd03c>  // b.tstop
  4581e0:	mov	x0, x19
  4581e4:	bl	44ffec <_obstack_memory_used@@Base+0x4e28>
  4581e8:	cbz	w0, 4582dc <_obstack_memory_used@@Base+0xd118>
  4581ec:	b	4582e0 <_obstack_memory_used@@Base+0xd11c>
  4581f0:	b.lt	458268 <_obstack_memory_used@@Base+0xd0a4>  // b.tstop
  4581f4:	mov	x0, x19
  4581f8:	bl	4506b4 <_obstack_memory_used@@Base+0x54f0>
  4581fc:	b	4582dc <_obstack_memory_used@@Base+0xd118>
  458200:	ldr	x8, [x19, #64]
  458204:	ldr	x9, [x19, #88]
  458208:	ldr	x20, [x19, #48]
  45820c:	cmp	x8, x9
  458210:	csel	x21, x9, x8, gt
  458214:	cmp	x20, x21
  458218:	b.ge	458260 <_obstack_memory_used@@Base+0xd09c>  // b.tcont
  45821c:	bl	404460 <__ctype_toupper_loc@plt>
  458220:	ldr	x8, [x19]
  458224:	ldr	x9, [x19, #40]
  458228:	add	x8, x8, x9
  45822c:	ldr	x9, [x19, #120]
  458230:	ldrb	w8, [x8, x20]
  458234:	cbnz	x9, 458258 <_obstack_memory_used@@Base+0xd094>
  458238:	ldr	x9, [x0]
  45823c:	ldr	x10, [x19, #8]
  458240:	ldr	w8, [x9, w8, uxtw #2]
  458244:	strb	w8, [x10, x20]
  458248:	add	x20, x20, #0x1
  45824c:	cmp	x20, x21
  458250:	b.lt	458220 <_obstack_memory_used@@Base+0xd05c>  // b.tstop
  458254:	b	458260 <_obstack_memory_used@@Base+0xd09c>
  458258:	ldrb	w8, [x9, x8]
  45825c:	b	458238 <_obstack_memory_used@@Base+0xd074>
  458260:	stp	x20, x20, [x19, #48]
  458264:	b	4582dc <_obstack_memory_used@@Base+0xd118>
  458268:	ldr	x10, [x19, #120]
  45826c:	cbz	x10, 4582dc <_obstack_memory_used@@Base+0xd118>
  458270:	ldr	x9, [x19, #64]
  458274:	ldr	x11, [x19, #88]
  458278:	ldr	x8, [x19, #48]
  45827c:	cmp	x9, x11
  458280:	csel	x9, x11, x9, gt
  458284:	cmp	x8, x9
  458288:	b.ge	4582d8 <_obstack_memory_used@@Base+0xd114>  // b.tcont
  45828c:	ldr	x11, [x19, #40]
  458290:	ldp	x12, x13, [x19]
  458294:	add	x11, x11, x8
  458298:	ldrb	w11, [x12, x11]
  45829c:	ldrb	w10, [x10, x11]
  4582a0:	strb	w10, [x13, x8]
  4582a4:	add	x8, x8, #0x1
  4582a8:	cmp	x8, x9
  4582ac:	b.ge	4582d8 <_obstack_memory_used@@Base+0xd114>  // b.tcont
  4582b0:	ldr	x10, [x19, #40]
  4582b4:	ldp	x11, x13, [x19]
  4582b8:	ldr	x12, [x19, #120]
  4582bc:	add	x10, x11, x10
  4582c0:	ldrb	w10, [x10, x8]
  4582c4:	ldrb	w10, [x12, x10]
  4582c8:	strb	w10, [x13, x8]
  4582cc:	add	x8, x8, #0x1
  4582d0:	cmp	x8, x9
  4582d4:	b.lt	4582b0 <_obstack_memory_used@@Base+0xd0ec>  // b.tstop
  4582d8:	stp	x8, x8, [x19, #48]
  4582dc:	mov	w0, wzr
  4582e0:	ldp	x20, x19, [sp, #32]
  4582e4:	ldr	x21, [sp, #16]
  4582e8:	ldp	x29, x30, [sp], #48
  4582ec:	ret
  4582f0:	mov	w0, #0xc                   	// #12
  4582f4:	ldp	x20, x19, [sp, #32]
  4582f8:	ldr	x21, [sp, #16]
  4582fc:	ldp	x29, x30, [sp], #48
  458300:	ret
  458304:	sub	sp, sp, #0x60
  458308:	stp	x29, x30, [sp, #32]
  45830c:	stp	x24, x23, [sp, #48]
  458310:	stp	x22, x21, [sp, #64]
  458314:	stp	x20, x19, [sp, #80]
  458318:	ldr	x20, [x1, #72]
  45831c:	ldp	x8, x9, [x1, #184]
  458320:	ldr	x22, [x1, #152]
  458324:	mov	x24, x2
  458328:	mov	x19, x1
  45832c:	cmp	x20, x9
  458330:	mov	x21, x0
  458334:	add	x29, sp, #0x20
  458338:	b.le	458348 <_obstack_memory_used@@Base+0xd184>
  45833c:	str	x24, [x8, x20, lsl #3]
  458340:	str	x20, [x19, #192]
  458344:	b	45846c <_obstack_memory_used@@Base+0xd2a8>
  458348:	ldr	x9, [x8, x20, lsl #3]
  45834c:	cbz	x9, 458380 <_obstack_memory_used@@Base+0xd1bc>
  458350:	ldr	x2, [x9, #80]
  458354:	cbz	x24, 458388 <_obstack_memory_used@@Base+0xd1c4>
  458358:	ldr	x23, [x24, #80]
  45835c:	mov	x0, sp
  458360:	mov	x1, x23
  458364:	bl	45850c <_obstack_memory_used@@Base+0xd348>
  458368:	str	w0, [x21]
  45836c:	cbnz	w0, 4584d4 <_obstack_memory_used@@Base+0xd310>
  458370:	ldr	x8, [x19, #72]
  458374:	cmp	x8, #0x0
  458378:	b.gt	4583a8 <_obstack_memory_used@@Base+0xd1e4>
  45837c:	b	4583e4 <_obstack_memory_used@@Base+0xd220>
  458380:	str	x24, [x8, x20, lsl #3]
  458384:	b	45846c <_obstack_memory_used@@Base+0xd2a8>
  458388:	ldr	x8, [x2, #16]
  45838c:	ldr	q0, [x2]
  458390:	mov	x23, xzr
  458394:	str	x8, [sp, #16]
  458398:	mov	x8, x20
  45839c:	str	q0, [sp]
  4583a0:	cmp	x8, #0x0
  4583a4:	b.le	4583e4 <_obstack_memory_used@@Base+0xd220>
  4583a8:	ldr	x10, [x19, #88]
  4583ac:	sub	x9, x8, #0x1
  4583b0:	cmp	x10, x9
  4583b4:	b.eq	4584dc <_obstack_memory_used@@Base+0xd318>  // b.none
  4583b8:	ldr	w10, [x19, #144]
  4583bc:	cmp	w10, #0x2
  4583c0:	b.lt	4583ec <_obstack_memory_used@@Base+0xd228>  // b.tstop
  4583c4:	ldr	x9, [x19, #16]
  4583c8:	sub	x9, x9, #0x4
  4583cc:	ldr	w24, [x9, x8, lsl #2]
  4583d0:	cmn	w24, #0x1
  4583d4:	b.ne	458414 <_obstack_memory_used@@Base+0xd250>  // b.any
  4583d8:	sub	x8, x8, #0x1
  4583dc:	cmp	x8, #0x0
  4583e0:	b.gt	4583cc <_obstack_memory_used@@Base+0xd208>
  4583e4:	ldr	w3, [x19, #112]
  4583e8:	b	458444 <_obstack_memory_used@@Base+0xd280>
  4583ec:	ldr	x8, [x19, #8]
  4583f0:	ldrb	w8, [x8, x9]
  4583f4:	ldr	x9, [x19, #128]
  4583f8:	lsr	x10, x8, #3
  4583fc:	and	x10, x10, #0x18
  458400:	ldr	x9, [x9, x10]
  458404:	lsr	x9, x9, x8
  458408:	tbz	w9, #0, 458438 <_obstack_memory_used@@Base+0xd274>
  45840c:	mov	w3, #0x1                   	// #1
  458410:	b	458444 <_obstack_memory_used@@Base+0xd280>
  458414:	ldrb	w8, [x19, #142]
  458418:	cbnz	w8, 4584f0 <_obstack_memory_used@@Base+0xd32c>
  45841c:	cmp	w24, #0xa
  458420:	b.ne	458440 <_obstack_memory_used@@Base+0xd27c>  // b.any
  458424:	ldrb	w8, [x19, #141]
  458428:	cmp	w8, #0x0
  45842c:	cset	w8, ne  // ne = any
  458430:	lsl	w3, w8, #1
  458434:	b	458444 <_obstack_memory_used@@Base+0xd280>
  458438:	cmp	w8, #0xa
  45843c:	b.eq	458424 <_obstack_memory_used@@Base+0xd260>  // b.none
  458440:	mov	w3, wzr
  458444:	mov	x2, sp
  458448:	mov	x0, x21
  45844c:	mov	x1, x22
  458450:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  458454:	ldr	x8, [x19, #184]
  458458:	mov	x24, x0
  45845c:	str	x0, [x8, x20, lsl #3]
  458460:	cbz	x23, 45846c <_obstack_memory_used@@Base+0xd2a8>
  458464:	ldr	x0, [sp, #16]
  458468:	bl	4046b0 <free@plt>
  45846c:	cbz	x24, 4584b8 <_obstack_memory_used@@Base+0xd2f4>
  458470:	ldr	x8, [x22, #152]
  458474:	cbz	x8, 4584b8 <_obstack_memory_used@@Base+0xd2f4>
  458478:	add	x22, x24, #0x8
  45847c:	mov	x0, x19
  458480:	mov	x1, x22
  458484:	mov	x2, x20
  458488:	bl	457728 <_obstack_memory_used@@Base+0xc564>
  45848c:	str	w0, [x21]
  458490:	cbnz	w0, 4584d4 <_obstack_memory_used@@Base+0xd310>
  458494:	ldrb	w8, [x24, #104]
  458498:	tbz	w8, #6, 4584b8 <_obstack_memory_used@@Base+0xd2f4>
  45849c:	mov	x0, x19
  4584a0:	mov	x1, x22
  4584a4:	bl	457834 <_obstack_memory_used@@Base+0xc670>
  4584a8:	str	w0, [x21]
  4584ac:	cbnz	w0, 4584d4 <_obstack_memory_used@@Base+0xd310>
  4584b0:	ldr	x8, [x19, #184]
  4584b4:	ldr	x24, [x8, x20, lsl #3]
  4584b8:	mov	x0, x24
  4584bc:	ldp	x20, x19, [sp, #80]
  4584c0:	ldp	x22, x21, [sp, #64]
  4584c4:	ldp	x24, x23, [sp, #48]
  4584c8:	ldp	x29, x30, [sp, #32]
  4584cc:	add	sp, sp, #0x60
  4584d0:	ret
  4584d4:	mov	x24, xzr
  4584d8:	b	4584b8 <_obstack_memory_used@@Base+0xd2f4>
  4584dc:	ldr	w8, [x19, #160]
  4584e0:	mov	w9, #0xa                   	// #10
  4584e4:	and	w8, w8, #0x2
  4584e8:	eor	w3, w8, w9
  4584ec:	b	458444 <_obstack_memory_used@@Base+0xd280>
  4584f0:	mov	w0, w24
  4584f4:	bl	404880 <iswalnum@plt>
  4584f8:	cmp	w24, #0x5f
  4584fc:	mov	w3, #0x1                   	// #1
  458500:	b.eq	458444 <_obstack_memory_used@@Base+0xd280>  // b.none
  458504:	cbz	w0, 45841c <_obstack_memory_used@@Base+0xd258>
  458508:	b	458444 <_obstack_memory_used@@Base+0xd280>
  45850c:	stp	x29, x30, [sp, #-80]!
  458510:	stp	x20, x19, [sp, #64]
  458514:	mov	x20, x2
  458518:	mov	x19, x0
  45851c:	stp	x26, x25, [sp, #16]
  458520:	stp	x24, x23, [sp, #32]
  458524:	stp	x22, x21, [sp, #48]
  458528:	mov	x29, sp
  45852c:	cbz	x1, 458658 <_obstack_memory_used@@Base+0xd494>
  458530:	ldr	x24, [x1, #8]
  458534:	mov	x21, x1
  458538:	cbz	x20, 458620 <_obstack_memory_used@@Base+0xd45c>
  45853c:	cmp	x24, #0x1
  458540:	b.lt	458620 <_obstack_memory_used@@Base+0xd45c>  // b.tstop
  458544:	ldr	x23, [x20, #8]
  458548:	cmp	x23, #0x1
  45854c:	b.lt	458620 <_obstack_memory_used@@Base+0xd45c>  // b.tstop
  458550:	add	x8, x23, x24
  458554:	lsl	x0, x8, #3
  458558:	str	x8, [x19]
  45855c:	bl	404210 <malloc@plt>
  458560:	str	x0, [x19, #16]
  458564:	cbz	x0, 4586f8 <_obstack_memory_used@@Base+0xd534>
  458568:	mov	x25, xzr
  45856c:	mov	x22, xzr
  458570:	mov	x11, xzr
  458574:	mov	x9, xzr
  458578:	mov	w10, #0x1                   	// #1
  45857c:	add	x8, x0, x22, lsl #3
  458580:	mov	x26, x11
  458584:	tbz	w10, #0, 4586b0 <_obstack_memory_used@@Base+0xd4ec>
  458588:	ldr	x10, [x21, #16]
  45858c:	ldr	x11, [x20, #16]
  458590:	ldr	x13, [x10, x9, lsl #3]
  458594:	ldr	x12, [x11, x26, lsl #3]
  458598:	cmp	x13, x12
  45859c:	b.le	4585c0 <_obstack_memory_used@@Base+0xd3fc>
  4585a0:	add	x26, x26, #0x1
  4585a4:	cmp	x23, x26
  4585a8:	add	x22, x22, #0x1
  4585ac:	cset	w10, gt
  4585b0:	cmp	x24, x9
  4585b4:	str	x12, [x8], #8
  4585b8:	b.gt	458584 <_obstack_memory_used@@Base+0xd3c0>
  4585bc:	b	4585f4 <_obstack_memory_used@@Base+0xd430>
  4585c0:	str	x13, [x8]
  4585c4:	ldr	x23, [x20, #8]
  4585c8:	ldr	x24, [x21, #8]
  4585cc:	cinc	x11, x26, eq  // eq = none
  4585d0:	add	x9, x9, #0x1
  4585d4:	cmp	x23, x11
  4585d8:	add	x22, x22, #0x1
  4585dc:	cset	w10, gt
  4585e0:	cmp	x24, x9
  4585e4:	sub	x25, x25, #0x1
  4585e8:	b.gt	45857c <_obstack_memory_used@@Base+0xd3b8>
  4585ec:	cmp	x13, x12
  4585f0:	cinc	x26, x26, eq  // eq = none
  4585f4:	cbz	w10, 4586d4 <_obstack_memory_used@@Base+0xd510>
  4585f8:	ldr	x8, [x20, #16]
  4585fc:	sub	x9, x23, x26
  458600:	add	x0, x0, x22, lsl #3
  458604:	lsl	x2, x9, #3
  458608:	add	x1, x8, x26, lsl #3
  45860c:	bl	403e80 <memcpy@plt>
  458610:	ldr	x8, [x20, #8]
  458614:	sub	x9, x22, x26
  458618:	add	x22, x9, x8
  45861c:	b	4586d4 <_obstack_memory_used@@Base+0xd510>
  458620:	cmp	x24, #0x1
  458624:	b.lt	458658 <_obstack_memory_used@@Base+0xd494>  // b.tstop
  458628:	str	x24, [x19, #8]
  45862c:	ldr	x20, [x21, #8]
  458630:	cmp	x20, #0x1
  458634:	b.lt	4586a0 <_obstack_memory_used@@Base+0xd4dc>  // b.tstop
  458638:	lsl	x0, x24, #3
  45863c:	str	x24, [x19]
  458640:	bl	404210 <malloc@plt>
  458644:	str	x0, [x19, #16]
  458648:	cbz	x0, 4586f4 <_obstack_memory_used@@Base+0xd530>
  45864c:	ldr	x1, [x21, #16]
  458650:	lsl	x2, x20, #3
  458654:	b	458694 <_obstack_memory_used@@Base+0xd4d0>
  458658:	cbz	x20, 4586a0 <_obstack_memory_used@@Base+0xd4dc>
  45865c:	ldr	x8, [x20, #8]
  458660:	cmp	x8, #0x1
  458664:	b.lt	4586a0 <_obstack_memory_used@@Base+0xd4dc>  // b.tstop
  458668:	str	x8, [x19, #8]
  45866c:	ldr	x21, [x20, #8]
  458670:	cmp	x21, #0x1
  458674:	b.lt	4586a0 <_obstack_memory_used@@Base+0xd4dc>  // b.tstop
  458678:	lsl	x0, x8, #3
  45867c:	str	x8, [x19]
  458680:	bl	404210 <malloc@plt>
  458684:	str	x0, [x19, #16]
  458688:	cbz	x0, 4586f4 <_obstack_memory_used@@Base+0xd530>
  45868c:	ldr	x1, [x20, #16]
  458690:	lsl	x2, x21, #3
  458694:	bl	403e80 <memcpy@plt>
  458698:	mov	w0, wzr
  45869c:	b	4586dc <_obstack_memory_used@@Base+0xd518>
  4586a0:	mov	w0, wzr
  4586a4:	stp	xzr, xzr, [x19]
  4586a8:	str	xzr, [x19, #16]
  4586ac:	b	4586dc <_obstack_memory_used@@Base+0xd518>
  4586b0:	ldr	x10, [x21, #16]
  4586b4:	sub	x11, x24, x9
  4586b8:	lsl	x2, x11, #3
  4586bc:	mov	x0, x8
  4586c0:	add	x1, x10, x9, lsl #3
  4586c4:	bl	403e80 <memcpy@plt>
  4586c8:	ldr	x8, [x21, #8]
  4586cc:	add	x8, x8, x25
  4586d0:	add	x22, x8, x22
  4586d4:	mov	w0, wzr
  4586d8:	str	x22, [x19, #8]
  4586dc:	ldp	x20, x19, [sp, #64]
  4586e0:	ldp	x22, x21, [sp, #48]
  4586e4:	ldp	x24, x23, [sp, #32]
  4586e8:	ldp	x26, x25, [sp, #16]
  4586ec:	ldp	x29, x30, [sp], #80
  4586f0:	ret
  4586f4:	stp	xzr, xzr, [x19]
  4586f8:	mov	w0, #0xc                   	// #12
  4586fc:	b	4586dc <_obstack_memory_used@@Base+0xd518>
  458700:	stp	x29, x30, [sp, #-80]!
  458704:	stp	x26, x25, [sp, #16]
  458708:	stp	x24, x23, [sp, #32]
  45870c:	stp	x22, x21, [sp, #48]
  458710:	stp	x20, x19, [sp, #64]
  458714:	mov	x22, x2
  458718:	mov	x23, x3
  45871c:	ldr	x2, [x2]
  458720:	ldr	x3, [x22, #8]
  458724:	mov	x20, x4
  458728:	mov	x21, x1
  45872c:	add	x1, x22, #0x10
  458730:	mov	w6, #0x8                   	// #8
  458734:	mov	x4, x23
  458738:	mov	x5, x20
  45873c:	mov	x29, sp
  458740:	mov	x19, x0
  458744:	bl	4588b8 <_obstack_memory_used@@Base+0xd6f4>
  458748:	cbz	w0, 458764 <_obstack_memory_used@@Base+0xd5a0>
  45874c:	ldp	x20, x19, [sp, #64]
  458750:	ldp	x22, x21, [sp, #48]
  458754:	ldp	x24, x23, [sp, #32]
  458758:	ldp	x26, x25, [sp, #16]
  45875c:	ldp	x29, x30, [sp], #80
  458760:	ret
  458764:	ldp	x8, x9, [x19, #200]
  458768:	ldr	x25, [x21]
  45876c:	ldr	x24, [x22, #8]
  458770:	cmp	x8, x9
  458774:	b.lt	4587b8 <_obstack_memory_used@@Base+0xd5f4>  // b.tstop
  458778:	ldr	x0, [x19, #216]
  45877c:	add	x8, x9, x9, lsl #2
  458780:	lsl	x1, x8, #4
  458784:	bl	404450 <realloc@plt>
  458788:	cbz	x0, 4588a8 <_obstack_memory_used@@Base+0xd6e4>
  45878c:	ldp	x8, x26, [x19, #200]
  458790:	mov	w9, #0x28                  	// #40
  458794:	str	x0, [x19, #216]
  458798:	mov	w1, wzr
  45879c:	madd	x0, x8, x9, x0
  4587a0:	add	x8, x26, x26, lsl #2
  4587a4:	lsl	x2, x8, #3
  4587a8:	bl	404320 <memset@plt>
  4587ac:	ldr	x8, [x19, #200]
  4587b0:	lsl	x9, x26, #1
  4587b4:	str	x9, [x19, #208]
  4587b8:	ldr	x9, [x19, #216]
  4587bc:	subs	x10, x8, #0x1
  4587c0:	b.lt	4587e8 <_obstack_memory_used@@Base+0xd624>  // b.tstop
  4587c4:	mov	w11, #0x28                  	// #40
  4587c8:	madd	x11, x10, x11, x9
  4587cc:	ldr	x11, [x11, #8]
  4587d0:	cmp	x11, x20
  4587d4:	b.ne	4587e8 <_obstack_memory_used@@Base+0xd624>  // b.any
  4587d8:	mov	w11, #0x28                  	// #40
  4587dc:	madd	x10, x10, x11, x9
  4587e0:	mov	w11, #0x1                   	// #1
  4587e4:	strb	w11, [x10, #32]
  4587e8:	mov	w11, #0x28                  	// #40
  4587ec:	subs	x10, x24, x25
  4587f0:	add	x12, x8, #0x1
  4587f4:	madd	x8, x8, x11, x9
  4587f8:	csetm	w9, eq  // eq = none
  4587fc:	stp	x23, x20, [x8]
  458800:	stp	x25, x24, [x8, #16]
  458804:	strh	w9, [x8, #34]
  458808:	str	x12, [x19, #200]
  45880c:	strb	wzr, [x8, #32]
  458810:	ldrsw	x8, [x19, #224]
  458814:	cmp	x10, x8
  458818:	b.le	458820 <_obstack_memory_used@@Base+0xd65c>
  45881c:	str	w10, [x19, #224]
  458820:	ldr	x9, [x22, #8]
  458824:	ldr	x10, [x21]
  458828:	ldr	x8, [x19, #64]
  45882c:	ldr	x21, [x19, #192]
  458830:	add	x9, x9, x20
  458834:	sub	x20, x9, x10
  458838:	cmp	x8, x20
  45883c:	b.gt	45884c <_obstack_memory_used@@Base+0xd688>
  458840:	ldr	x9, [x19, #88]
  458844:	cmp	x8, x9
  458848:	b.lt	458864 <_obstack_memory_used@@Base+0xd6a0>  // b.tstop
  45884c:	ldr	x8, [x19, #48]
  458850:	cmp	x8, x20
  458854:	b.gt	458874 <_obstack_memory_used@@Base+0xd6b0>
  458858:	ldr	x9, [x19, #88]
  45885c:	cmp	x8, x9
  458860:	b.ge	458874 <_obstack_memory_used@@Base+0xd6b0>  // b.tcont
  458864:	add	w1, w20, #0x1
  458868:	mov	x0, x19
  45886c:	bl	45810c <_obstack_memory_used@@Base+0xcf48>
  458870:	cbnz	w0, 45874c <_obstack_memory_used@@Base+0xd588>
  458874:	subs	x8, x20, x21
  458878:	b.le	4588a0 <_obstack_memory_used@@Base+0xd6dc>
  45887c:	ldr	x9, [x19, #184]
  458880:	lsl	x2, x8, #3
  458884:	mov	w1, wzr
  458888:	add	x9, x9, x21, lsl #3
  45888c:	add	x0, x9, #0x8
  458890:	bl	404320 <memset@plt>
  458894:	mov	w0, wzr
  458898:	str	x20, [x19, #192]
  45889c:	b	45874c <_obstack_memory_used@@Base+0xd588>
  4588a0:	mov	w0, wzr
  4588a4:	b	45874c <_obstack_memory_used@@Base+0xd588>
  4588a8:	ldr	x0, [x19, #216]
  4588ac:	bl	4046b0 <free@plt>
  4588b0:	mov	w0, #0xc                   	// #12
  4588b4:	b	45874c <_obstack_memory_used@@Base+0xd588>
  4588b8:	sub	sp, sp, #0x100
  4588bc:	stp	x29, x30, [sp, #160]
  4588c0:	stp	x28, x27, [sp, #176]
  4588c4:	stp	x26, x25, [sp, #192]
  4588c8:	stp	x24, x23, [sp, #208]
  4588cc:	stp	x22, x21, [sp, #224]
  4588d0:	stp	x20, x19, [sp, #240]
  4588d4:	ldr	x8, [x0, #152]
  4588d8:	add	x29, sp, #0xa0
  4588dc:	stur	wzr, [x29, #-36]
  4588e0:	lsl	x10, x2, #4
  4588e4:	str	x8, [sp, #48]
  4588e8:	ldr	x8, [x8]
  4588ec:	ldrsw	x9, [x0, #224]
  4588f0:	ldr	x21, [x1, #8]
  4588f4:	mov	x24, x5
  4588f8:	ldr	x8, [x8, x10]
  4588fc:	mov	x25, x4
  458900:	mov	x19, x2
  458904:	mov	x28, x1
  458908:	str	x8, [sp, #56]
  45890c:	add	x8, x9, x5
  458910:	mov	x20, x0
  458914:	cmp	x21, x8
  458918:	mov	x22, x3
  45891c:	str	w6, [sp, #44]
  458920:	str	x5, [sp, #32]
  458924:	b.le	4590c4 <_obstack_memory_used@@Base+0xdf00>
  458928:	ldr	x8, [x28]
  45892c:	ldr	x11, [x20, #184]
  458930:	ldr	x9, [x28, #16]
  458934:	ldr	x10, [x20, #72]
  458938:	cmp	x8, #0x0
  45893c:	csel	x26, x22, x8, eq  // eq = none
  458940:	cmp	x26, #0x0
  458944:	str	x9, [x20, #184]
  458948:	str	x26, [x20, #72]
  45894c:	str	x10, [sp, #16]
  458950:	stp	x25, x11, [sp]
  458954:	b.le	458998 <_obstack_memory_used@@Base+0xd7d4>
  458958:	ldr	x9, [x20, #88]
  45895c:	sub	x8, x26, #0x1
  458960:	cmp	x9, x8
  458964:	b.eq	459110 <_obstack_memory_used@@Base+0xdf4c>  // b.none
  458968:	ldr	w9, [x20, #144]
  45896c:	cmp	w9, #0x2
  458970:	b.lt	4589a0 <_obstack_memory_used@@Base+0xd7dc>  // b.tstop
  458974:	ldr	x8, [x20, #16]
  458978:	mov	x9, x26
  45897c:	sub	x8, x8, #0x4
  458980:	ldr	w23, [x8, x9, lsl #2]
  458984:	cmn	w23, #0x1
  458988:	b.ne	4589c8 <_obstack_memory_used@@Base+0xd804>  // b.any
  45898c:	sub	x9, x9, #0x1
  458990:	cmp	x9, #0x0
  458994:	b.gt	458980 <_obstack_memory_used@@Base+0xd7bc>
  458998:	ldr	w27, [x20, #112]
  45899c:	b	4589f8 <_obstack_memory_used@@Base+0xd834>
  4589a0:	ldr	x9, [x20, #8]
  4589a4:	ldrb	w8, [x9, x8]
  4589a8:	ldr	x9, [x20, #128]
  4589ac:	lsr	x10, x8, #3
  4589b0:	and	x10, x10, #0x18
  4589b4:	ldr	x9, [x9, x10]
  4589b8:	lsr	x9, x9, x8
  4589bc:	tbz	w9, #0, 4589ec <_obstack_memory_used@@Base+0xd828>
  4589c0:	mov	w27, #0x1                   	// #1
  4589c4:	b	4589f8 <_obstack_memory_used@@Base+0xd834>
  4589c8:	ldrb	w8, [x20, #142]
  4589cc:	cbnz	w8, 459144 <_obstack_memory_used@@Base+0xdf80>
  4589d0:	cmp	w23, #0xa
  4589d4:	b.ne	4589f4 <_obstack_memory_used@@Base+0xd830>  // b.any
  4589d8:	ldrb	w8, [x20, #141]
  4589dc:	cmp	w8, #0x0
  4589e0:	cset	w8, ne  // ne = any
  4589e4:	lsl	w27, w8, #1
  4589e8:	b	4589f8 <_obstack_memory_used@@Base+0xd834>
  4589ec:	cmp	w8, #0xa
  4589f0:	b.eq	4589d8 <_obstack_memory_used@@Base+0xd814>  // b.none
  4589f4:	mov	w27, wzr
  4589f8:	cmp	x26, x22
  4589fc:	str	x28, [sp, #24]
  458a00:	b.ne	458aac <_obstack_memory_used@@Base+0xd8e8>  // b.any
  458a04:	mov	w8, #0x1                   	// #1
  458a08:	dup	v0.2d, x8
  458a0c:	mov	w0, #0x8                   	// #8
  458a10:	stur	q0, [x29, #-64]
  458a14:	bl	404210 <malloc@plt>
  458a18:	ldr	w23, [sp, #44]
  458a1c:	ldr	x22, [sp, #48]
  458a20:	stur	x0, [x29, #-48]
  458a24:	cbz	x0, 459134 <_obstack_memory_used@@Base+0xdf70>
  458a28:	ldr	x2, [sp, #56]
  458a2c:	str	x19, [x0]
  458a30:	sub	x1, x29, #0x40
  458a34:	mov	x0, x22
  458a38:	mov	w3, w23
  458a3c:	stur	wzr, [x29, #-36]
  458a40:	bl	459168 <_obstack_memory_used@@Base+0xdfa4>
  458a44:	stur	w0, [x29, #-36]
  458a48:	cbnz	w0, 459124 <_obstack_memory_used@@Base+0xdf60>
  458a4c:	ldur	x21, [x29, #-56]
  458a50:	cbz	x21, 458a74 <_obstack_memory_used@@Base+0xd8b0>
  458a54:	ldr	x3, [sp, #56]
  458a58:	sub	x1, x29, #0x40
  458a5c:	mov	x0, x20
  458a60:	mov	x2, x26
  458a64:	mov	w4, w23
  458a68:	bl	4592ac <_obstack_memory_used@@Base+0xe0e8>
  458a6c:	stur	w0, [x29, #-36]
  458a70:	cbnz	w0, 459124 <_obstack_memory_used@@Base+0xdf60>
  458a74:	sub	x0, x29, #0x24
  458a78:	sub	x2, x29, #0x40
  458a7c:	mov	x1, x22
  458a80:	mov	w3, w27
  458a84:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  458a88:	mov	x28, x0
  458a8c:	cbnz	x0, 458a98 <_obstack_memory_used@@Base+0xd8d4>
  458a90:	ldur	w8, [x29, #-36]
  458a94:	cbnz	w8, 459090 <_obstack_memory_used@@Base+0xdecc>
  458a98:	ldr	x8, [x20, #184]
  458a9c:	str	x28, [x8, x26, lsl #3]
  458aa0:	cmp	x26, x24
  458aa4:	b.ge	458fc4 <_obstack_memory_used@@Base+0xde00>  // b.tcont
  458aa8:	b	458b58 <_obstack_memory_used@@Base+0xd994>
  458aac:	ldr	x8, [x20, #184]
  458ab0:	ldr	w23, [sp, #44]
  458ab4:	ldr	x22, [sp, #48]
  458ab8:	ldr	x28, [x8, x26, lsl #3]
  458abc:	cbz	x28, 458ae0 <_obstack_memory_used@@Base+0xd91c>
  458ac0:	ldrb	w8, [x28, #104]
  458ac4:	tbnz	w8, #6, 458af4 <_obstack_memory_used@@Base+0xd930>
  458ac8:	mov	x21, xzr
  458acc:	stp	xzr, xzr, [x29, #-64]
  458ad0:	stur	xzr, [x29, #-48]
  458ad4:	ldrb	w8, [x28, #104]
  458ad8:	tbz	w8, #6, 458b50 <_obstack_memory_used@@Base+0xd98c>
  458adc:	b	458a50 <_obstack_memory_used@@Base+0xd88c>
  458ae0:	stp	xzr, xzr, [x29, #-64]
  458ae4:	stur	xzr, [x29, #-48]
  458ae8:	cmp	x26, x24
  458aec:	b.lt	458b58 <_obstack_memory_used@@Base+0xd994>  // b.tstop
  458af0:	b	458fc4 <_obstack_memory_used@@Base+0xde00>
  458af4:	ldr	x21, [x28, #16]
  458af8:	cmp	x21, #0x1
  458afc:	stur	x21, [x29, #-56]
  458b00:	b.lt	458b38 <_obstack_memory_used@@Base+0xd974>  // b.tstop
  458b04:	lsl	x19, x21, #3
  458b08:	mov	x0, x19
  458b0c:	stur	x21, [x29, #-64]
  458b10:	bl	404210 <malloc@plt>
  458b14:	stur	x0, [x29, #-48]
  458b18:	cbz	x0, 459134 <_obstack_memory_used@@Base+0xdf70>
  458b1c:	ldr	x1, [x28, #24]
  458b20:	mov	x2, x19
  458b24:	bl	403e80 <memcpy@plt>
  458b28:	stur	wzr, [x29, #-36]
  458b2c:	ldrb	w8, [x28, #104]
  458b30:	tbnz	w8, #6, 458a50 <_obstack_memory_used@@Base+0xd88c>
  458b34:	b	458b50 <_obstack_memory_used@@Base+0xd98c>
  458b38:	mov	x21, xzr
  458b3c:	stp	xzr, xzr, [x29, #-64]
  458b40:	stur	xzr, [x29, #-48]
  458b44:	stur	wzr, [x29, #-36]
  458b48:	ldrb	w8, [x28, #104]
  458b4c:	tbnz	w8, #6, 458a50 <_obstack_memory_used@@Base+0xd88c>
  458b50:	cmp	x26, x24
  458b54:	b.ge	458fc4 <_obstack_memory_used@@Base+0xde00>  // b.tcont
  458b58:	mov	w8, #0x1                   	// #1
  458b5c:	mov	x9, xzr
  458b60:	dup	v0.2d, x8
  458b64:	str	q0, [sp, #80]
  458b68:	b	458b88 <_obstack_memory_used@@Base+0xd9c4>
  458b6c:	ldp	x9, x26, [sp, #64]
  458b70:	ldr	x8, [x20, #184]
  458b74:	cmp	x28, #0x0
  458b78:	csinc	x9, xzr, x9, ne  // ne = any
  458b7c:	cmp	x26, x24
  458b80:	str	x28, [x8, x26, lsl #3]
  458b84:	b.eq	458fc0 <_obstack_memory_used@@Base+0xddfc>  // b.none
  458b88:	ldrsw	x8, [x20, #224]
  458b8c:	cmp	x9, x8
  458b90:	b.gt	458fc4 <_obstack_memory_used@@Base+0xde00>
  458b94:	stur	xzr, [x29, #-56]
  458b98:	ldr	x8, [x20, #184]
  458b9c:	str	x9, [sp, #64]
  458ba0:	add	x9, x26, #0x1
  458ba4:	str	x9, [sp, #72]
  458ba8:	ldr	x8, [x8, x9, lsl #3]
  458bac:	cbz	x8, 458bc4 <_obstack_memory_used@@Base+0xda00>
  458bb0:	add	x1, x8, #0x8
  458bb4:	sub	x0, x29, #0x40
  458bb8:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  458bbc:	stur	w0, [x29, #-36]
  458bc0:	cbnz	w0, 459090 <_obstack_memory_used@@Base+0xdecc>
  458bc4:	cbz	x28, 458e8c <_obstack_memory_used@@Base+0xdcc8>
  458bc8:	ldr	x22, [x20, #152]
  458bcc:	stur	wzr, [x29, #-4]
  458bd0:	stp	xzr, xzr, [x29, #-32]
  458bd4:	stur	xzr, [x29, #-16]
  458bd8:	ldr	x8, [x28, #40]
  458bdc:	cmp	x8, #0x1
  458be0:	b.lt	458e7c <_obstack_memory_used@@Base+0xdcb8>  // b.tstop
  458be4:	mov	x24, xzr
  458be8:	b	458c18 <_obstack_memory_used@@Base+0xda54>
  458bec:	ldur	x8, [x29, #-56]
  458bf0:	cbnz	x8, 458d44 <_obstack_memory_used@@Base+0xdb80>
  458bf4:	ldur	x8, [x29, #-48]
  458bf8:	str	x19, [x8]
  458bfc:	ldur	x8, [x29, #-56]
  458c00:	add	x8, x8, #0x1
  458c04:	stur	x8, [x29, #-56]
  458c08:	ldr	x8, [x28, #40]
  458c0c:	add	x24, x24, #0x1
  458c10:	cmp	x24, x8
  458c14:	b.ge	458e6c <_obstack_memory_used@@Base+0xdca8>  // b.tcont
  458c18:	ldr	x8, [x28, #48]
  458c1c:	ldr	x19, [x8, x24, lsl #3]
  458c20:	ldr	x8, [x22]
  458c24:	add	x9, x8, x19, lsl #4
  458c28:	ldrb	w9, [x9, #10]
  458c2c:	tbz	w9, #4, 458d00 <_obstack_memory_used@@Base+0xdb3c>
  458c30:	mov	x0, x22
  458c34:	mov	x1, x19
  458c38:	mov	x2, x20
  458c3c:	mov	x3, x26
  458c40:	bl	459b50 <_obstack_memory_used@@Base+0xe98c>
  458c44:	mov	w23, w0
  458c48:	cmp	w0, #0x2
  458c4c:	b.lt	458cf8 <_obstack_memory_used@@Base+0xdb34>  // b.tstop
  458c50:	ldr	x8, [x20, #184]
  458c54:	ldr	x9, [x22, #24]
  458c58:	add	x27, x26, w23, uxtw
  458c5c:	ldr	x8, [x8, x27, lsl #3]
  458c60:	ldr	x21, [x9, x19, lsl #3]
  458c64:	stur	xzr, [x29, #-24]
  458c68:	cbz	x8, 458c80 <_obstack_memory_used@@Base+0xdabc>
  458c6c:	add	x1, x8, #0x8
  458c70:	sub	x0, x29, #0x20
  458c74:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  458c78:	stur	w0, [x29, #-4]
  458c7c:	cbnz	w0, 459098 <_obstack_memory_used@@Base+0xded4>
  458c80:	ldur	x9, [x29, #-32]
  458c84:	cbz	x9, 458ca8 <_obstack_memory_used@@Base+0xdae4>
  458c88:	ldur	x8, [x29, #-24]
  458c8c:	cbnz	x8, 458dd8 <_obstack_memory_used@@Base+0xdc14>
  458c90:	ldur	x8, [x29, #-16]
  458c94:	str	x21, [x8]
  458c98:	ldur	x8, [x29, #-24]
  458c9c:	add	x8, x8, #0x1
  458ca0:	stur	x8, [x29, #-24]
  458ca4:	b	458cc8 <_obstack_memory_used@@Base+0xdb04>
  458ca8:	mov	w8, #0x1                   	// #1
  458cac:	dup	v0.2d, x8
  458cb0:	mov	w0, #0x8                   	// #8
  458cb4:	stur	q0, [x29, #-32]
  458cb8:	bl	404210 <malloc@plt>
  458cbc:	stur	x0, [x29, #-16]
  458cc0:	cbz	x0, 4590b8 <_obstack_memory_used@@Base+0xdef4>
  458cc4:	str	x21, [x0]
  458cc8:	sub	x0, x29, #0x4
  458ccc:	sub	x2, x29, #0x20
  458cd0:	mov	x1, x22
  458cd4:	bl	4598c8 <_obstack_memory_used@@Base+0xe704>
  458cd8:	ldr	x8, [x20, #184]
  458cdc:	lsl	x9, x27, #3
  458ce0:	str	x0, [x8, x9]
  458ce4:	ldr	x8, [x20, #184]
  458ce8:	ldr	x8, [x8, x9]
  458cec:	cbnz	x8, 458cf8 <_obstack_memory_used@@Base+0xdb34>
  458cf0:	ldur	w25, [x29, #-4]
  458cf4:	cbnz	w25, 45909c <_obstack_memory_used@@Base+0xded8>
  458cf8:	cbnz	w23, 458d14 <_obstack_memory_used@@Base+0xdb50>
  458cfc:	ldr	x8, [x22]
  458d00:	add	x1, x8, x19, lsl #4
  458d04:	mov	x0, x20
  458d08:	mov	x2, x26
  458d0c:	bl	459ec8 <_obstack_memory_used@@Base+0xed04>
  458d10:	tbz	w0, #0, 458c08 <_obstack_memory_used@@Base+0xda44>
  458d14:	ldr	x8, [x22, #24]
  458d18:	ldur	x9, [x29, #-64]
  458d1c:	ldr	x19, [x8, x19, lsl #3]
  458d20:	cbnz	x9, 458bec <_obstack_memory_used@@Base+0xda28>
  458d24:	ldr	q0, [sp, #80]
  458d28:	mov	w0, #0x8                   	// #8
  458d2c:	stur	q0, [x29, #-64]
  458d30:	bl	404210 <malloc@plt>
  458d34:	stur	x0, [x29, #-48]
  458d38:	cbz	x0, 459080 <_obstack_memory_used@@Base+0xdebc>
  458d3c:	str	x19, [x0]
  458d40:	b	458c08 <_obstack_memory_used@@Base+0xda44>
  458d44:	cmp	x9, x8
  458d48:	b.ne	458d70 <_obstack_memory_used@@Base+0xdbac>  // b.any
  458d4c:	ldur	x0, [x29, #-48]
  458d50:	lsl	x8, x9, #1
  458d54:	lsl	x1, x9, #4
  458d58:	stur	x8, [x29, #-64]
  458d5c:	bl	404450 <realloc@plt>
  458d60:	cbz	x0, 459084 <_obstack_memory_used@@Base+0xdec0>
  458d64:	ldur	x8, [x29, #-56]
  458d68:	stur	x0, [x29, #-48]
  458d6c:	b	458d74 <_obstack_memory_used@@Base+0xdbb0>
  458d70:	ldur	x0, [x29, #-48]
  458d74:	ldr	x9, [x0]
  458d78:	cmp	x9, x19
  458d7c:	b.le	458da8 <_obstack_memory_used@@Base+0xdbe4>
  458d80:	cmp	x8, #0x1
  458d84:	b.lt	458dd0 <_obstack_memory_used@@Base+0xdc0c>  // b.tstop
  458d88:	mov	x9, x8
  458d8c:	add	x10, x0, x9, lsl #3
  458d90:	ldur	x11, [x10, #-8]
  458d94:	subs	x8, x9, #0x1
  458d98:	mov	x9, x8
  458d9c:	str	x11, [x10]
  458da0:	b.gt	458d8c <_obstack_memory_used@@Base+0xdbc8>
  458da4:	b	458dd0 <_obstack_memory_used@@Base+0xdc0c>
  458da8:	add	x9, x0, x8, lsl #3
  458dac:	ldur	x9, [x9, #-8]
  458db0:	cmp	x9, x19
  458db4:	b.le	458dd0 <_obstack_memory_used@@Base+0xdc0c>
  458db8:	add	x10, x0, x8, lsl #3
  458dbc:	str	x9, [x10]
  458dc0:	ldur	x9, [x10, #-16]
  458dc4:	sub	x8, x8, #0x1
  458dc8:	cmp	x9, x19
  458dcc:	b.gt	458db8 <_obstack_memory_used@@Base+0xdbf4>
  458dd0:	str	x19, [x0, x8, lsl #3]
  458dd4:	b	458bfc <_obstack_memory_used@@Base+0xda38>
  458dd8:	cmp	x9, x8
  458ddc:	b.ne	458e04 <_obstack_memory_used@@Base+0xdc40>  // b.any
  458de0:	ldur	x0, [x29, #-16]
  458de4:	lsl	x8, x9, #1
  458de8:	lsl	x1, x9, #4
  458dec:	stur	x8, [x29, #-32]
  458df0:	bl	404450 <realloc@plt>
  458df4:	cbz	x0, 459084 <_obstack_memory_used@@Base+0xdec0>
  458df8:	ldur	x8, [x29, #-24]
  458dfc:	stur	x0, [x29, #-16]
  458e00:	b	458e08 <_obstack_memory_used@@Base+0xdc44>
  458e04:	ldur	x0, [x29, #-16]
  458e08:	ldr	x9, [x0]
  458e0c:	cmp	x9, x21
  458e10:	b.le	458e3c <_obstack_memory_used@@Base+0xdc78>
  458e14:	cmp	x8, #0x1
  458e18:	b.lt	458e64 <_obstack_memory_used@@Base+0xdca0>  // b.tstop
  458e1c:	mov	x9, x8
  458e20:	add	x10, x0, x9, lsl #3
  458e24:	ldur	x11, [x10, #-8]
  458e28:	subs	x8, x9, #0x1
  458e2c:	mov	x9, x8
  458e30:	str	x11, [x10]
  458e34:	b.gt	458e20 <_obstack_memory_used@@Base+0xdc5c>
  458e38:	b	458e64 <_obstack_memory_used@@Base+0xdca0>
  458e3c:	add	x9, x0, x8, lsl #3
  458e40:	ldur	x9, [x9, #-8]
  458e44:	cmp	x9, x21
  458e48:	b.le	458e64 <_obstack_memory_used@@Base+0xdca0>
  458e4c:	add	x10, x0, x8, lsl #3
  458e50:	str	x9, [x10]
  458e54:	ldur	x9, [x10, #-16]
  458e58:	sub	x8, x8, #0x1
  458e5c:	cmp	x9, x21
  458e60:	b.gt	458e4c <_obstack_memory_used@@Base+0xdc88>
  458e64:	str	x21, [x0, x8, lsl #3]
  458e68:	b	458c98 <_obstack_memory_used@@Base+0xdad4>
  458e6c:	ldur	x0, [x29, #-16]
  458e70:	ldr	x24, [sp, #32]
  458e74:	ldr	w23, [sp, #44]
  458e78:	b	458e80 <_obstack_memory_used@@Base+0xdcbc>
  458e7c:	mov	x0, xzr
  458e80:	bl	4046b0 <free@plt>
  458e84:	ldr	x22, [sp, #48]
  458e88:	stur	wzr, [x29, #-36]
  458e8c:	ldur	x8, [x29, #-56]
  458e90:	ldr	x19, [sp, #56]
  458e94:	cbz	x8, 458ed4 <_obstack_memory_used@@Base+0xdd10>
  458e98:	sub	x1, x29, #0x40
  458e9c:	mov	x0, x22
  458ea0:	mov	x2, x19
  458ea4:	mov	w3, w23
  458ea8:	bl	459168 <_obstack_memory_used@@Base+0xdfa4>
  458eac:	stur	w0, [x29, #-36]
  458eb0:	cbnz	w0, 459090 <_obstack_memory_used@@Base+0xdecc>
  458eb4:	ldr	x2, [sp, #72]
  458eb8:	sub	x1, x29, #0x40
  458ebc:	mov	x0, x20
  458ec0:	mov	x3, x19
  458ec4:	mov	w4, w23
  458ec8:	bl	4592ac <_obstack_memory_used@@Base+0xe0e8>
  458ecc:	stur	w0, [x29, #-36]
  458ed0:	cbnz	w0, 459090 <_obstack_memory_used@@Base+0xdecc>
  458ed4:	tbnz	x26, #63, 458f0c <_obstack_memory_used@@Base+0xdd48>
  458ed8:	ldr	x8, [x20, #88]
  458edc:	cmp	x8, x26
  458ee0:	b.eq	458f90 <_obstack_memory_used@@Base+0xddcc>  // b.none
  458ee4:	ldr	w8, [x20, #144]
  458ee8:	cmp	w8, #0x2
  458eec:	b.lt	458f14 <_obstack_memory_used@@Base+0xdd50>  // b.tstop
  458ef0:	ldr	x8, [x20, #16]
  458ef4:	ldr	w19, [x8, x26, lsl #2]
  458ef8:	cmn	w19, #0x1
  458efc:	b.ne	458f3c <_obstack_memory_used@@Base+0xdd78>  // b.any
  458f00:	cmp	x26, #0x0
  458f04:	sub	x26, x26, #0x1
  458f08:	b.gt	458ef4 <_obstack_memory_used@@Base+0xdd30>
  458f0c:	ldr	w3, [x20, #112]
  458f10:	b	458f6c <_obstack_memory_used@@Base+0xdda8>
  458f14:	ldr	x8, [x20, #8]
  458f18:	ldr	x9, [x20, #128]
  458f1c:	ldrb	w8, [x8, x26]
  458f20:	lsr	x10, x8, #3
  458f24:	and	x10, x10, #0x18
  458f28:	ldr	x9, [x9, x10]
  458f2c:	lsr	x9, x9, x8
  458f30:	tbz	w9, #0, 458f60 <_obstack_memory_used@@Base+0xdd9c>
  458f34:	mov	w3, #0x1                   	// #1
  458f38:	b	458f6c <_obstack_memory_used@@Base+0xdda8>
  458f3c:	ldrb	w8, [x20, #142]
  458f40:	cbnz	w8, 458fa4 <_obstack_memory_used@@Base+0xdde0>
  458f44:	cmp	w19, #0xa
  458f48:	b.ne	458f68 <_obstack_memory_used@@Base+0xdda4>  // b.any
  458f4c:	ldrb	w8, [x20, #141]
  458f50:	cmp	w8, #0x0
  458f54:	cset	w8, ne  // ne = any
  458f58:	lsl	w3, w8, #1
  458f5c:	b	458f6c <_obstack_memory_used@@Base+0xdda8>
  458f60:	cmp	w8, #0xa
  458f64:	b.eq	458f4c <_obstack_memory_used@@Base+0xdd88>  // b.none
  458f68:	mov	w3, wzr
  458f6c:	sub	x0, x29, #0x24
  458f70:	sub	x2, x29, #0x40
  458f74:	mov	x1, x22
  458f78:	bl	455660 <_obstack_memory_used@@Base+0xa49c>
  458f7c:	mov	x28, x0
  458f80:	cbnz	x0, 458b6c <_obstack_memory_used@@Base+0xd9a8>
  458f84:	ldur	w8, [x29, #-36]
  458f88:	cbz	w8, 458b6c <_obstack_memory_used@@Base+0xd9a8>
  458f8c:	b	459090 <_obstack_memory_used@@Base+0xdecc>
  458f90:	ldr	w8, [x20, #160]
  458f94:	mov	w9, #0xa                   	// #10
  458f98:	and	w8, w8, #0x2
  458f9c:	eor	w3, w8, w9
  458fa0:	b	458f6c <_obstack_memory_used@@Base+0xdda8>
  458fa4:	mov	w0, w19
  458fa8:	bl	404880 <iswalnum@plt>
  458fac:	cmp	w19, #0x5f
  458fb0:	mov	w3, #0x1                   	// #1
  458fb4:	b.eq	458f6c <_obstack_memory_used@@Base+0xdda8>  // b.none
  458fb8:	cbz	w0, 458f44 <_obstack_memory_used@@Base+0xdd80>
  458fbc:	b	458f6c <_obstack_memory_used@@Base+0xdda8>
  458fc0:	mov	x26, x24
  458fc4:	ldur	x0, [x29, #-48]
  458fc8:	bl	4046b0 <free@plt>
  458fcc:	ldr	x8, [x20, #184]
  458fd0:	ldr	x9, [x8, x24, lsl #3]
  458fd4:	ldp	x10, x8, [sp, #16]
  458fd8:	cmp	x9, #0x0
  458fdc:	str	x26, [x8]
  458fe0:	ldr	x8, [sp, #8]
  458fe4:	str	x10, [x20, #72]
  458fe8:	str	x8, [x20, #184]
  458fec:	add	x8, x9, #0x8
  458ff0:	csel	x8, xzr, x8, eq  // eq = none
  458ff4:	cbz	x9, 459058 <_obstack_memory_used@@Base+0xde94>
  458ff8:	ldr	x9, [x8, #8]
  458ffc:	subs	x9, x9, #0x1
  459000:	b.lt	459058 <_obstack_memory_used@@Base+0xde94>  // b.tstop
  459004:	ldr	x8, [x8, #16]
  459008:	mov	x10, xzr
  45900c:	b.eq	459048 <_obstack_memory_used@@Base+0xde84>  // b.none
  459010:	ldr	x13, [sp]
  459014:	add	x11, x10, x9
  459018:	lsr	x11, x11, #1
  45901c:	ldr	x12, [x8, x11, lsl #3]
  459020:	cmp	x12, x13
  459024:	csinc	x10, x10, x11, ge  // ge = tcont
  459028:	csel	x9, x9, x11, lt  // lt = tstop
  45902c:	cmp	x10, x9
  459030:	b.cc	459014 <_obstack_memory_used@@Base+0xde50>  // b.lo, b.ul, b.last
  459034:	ldr	x8, [x8, x10, lsl #3]
  459038:	cmp	x8, x13
  45903c:	b.ne	459058 <_obstack_memory_used@@Base+0xde94>  // b.any
  459040:	mov	w19, wzr
  459044:	b	45905c <_obstack_memory_used@@Base+0xde98>
  459048:	ldr	x13, [sp]
  45904c:	ldr	x8, [x8, x10, lsl #3]
  459050:	cmp	x8, x13
  459054:	b.eq	459040 <_obstack_memory_used@@Base+0xde7c>  // b.none
  459058:	mov	w19, #0x1                   	// #1
  45905c:	mov	w0, w19
  459060:	ldp	x20, x19, [sp, #240]
  459064:	ldp	x22, x21, [sp, #224]
  459068:	ldp	x24, x23, [sp, #208]
  45906c:	ldp	x26, x25, [sp, #192]
  459070:	ldp	x28, x27, [sp, #176]
  459074:	ldp	x29, x30, [sp, #160]
  459078:	add	sp, sp, #0x100
  45907c:	ret
  459080:	stp	xzr, xzr, [x29, #-64]
  459084:	ldur	x0, [x29, #-16]
  459088:	mov	w25, #0xc                   	// #12
  45908c:	b	4590a0 <_obstack_memory_used@@Base+0xdedc>
  459090:	ldur	x0, [x29, #-48]
  459094:	b	4590ac <_obstack_memory_used@@Base+0xdee8>
  459098:	mov	w25, w0
  45909c:	ldur	x0, [x29, #-16]
  4590a0:	bl	4046b0 <free@plt>
  4590a4:	ldur	x0, [x29, #-48]
  4590a8:	stur	w25, [x29, #-36]
  4590ac:	bl	4046b0 <free@plt>
  4590b0:	ldur	w19, [x29, #-36]
  4590b4:	b	45905c <_obstack_memory_used@@Base+0xde98>
  4590b8:	stp	xzr, xzr, [x29, #-32]
  4590bc:	mov	w25, #0xc                   	// #12
  4590c0:	b	4590a0 <_obstack_memory_used@@Base+0xdedc>
  4590c4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4590c8:	sub	x9, x9, x21
  4590cc:	cmp	x9, x8
  4590d0:	b.le	459160 <_obstack_memory_used@@Base+0xdf9c>
  4590d4:	add	x23, x8, #0x1
  4590d8:	add	x24, x23, x21
  4590dc:	lsr	x8, x24, #61
  4590e0:	cbnz	x8, 459160 <_obstack_memory_used@@Base+0xdf9c>
  4590e4:	ldr	x0, [x28, #16]
  4590e8:	lsl	x1, x24, #3
  4590ec:	bl	404450 <realloc@plt>
  4590f0:	cbz	x0, 459160 <_obstack_memory_used@@Base+0xdf9c>
  4590f4:	stp	x24, x0, [x28, #8]
  4590f8:	add	x0, x0, x21, lsl #3
  4590fc:	lsl	x2, x23, #3
  459100:	mov	w1, wzr
  459104:	bl	404320 <memset@plt>
  459108:	ldr	x24, [sp, #32]
  45910c:	b	458928 <_obstack_memory_used@@Base+0xd764>
  459110:	ldr	w8, [x20, #160]
  459114:	mov	w9, #0xa                   	// #10
  459118:	and	w8, w8, #0x2
  45911c:	eor	w27, w8, w9
  459120:	b	4589f8 <_obstack_memory_used@@Base+0xd834>
  459124:	mov	w19, w0
  459128:	ldur	x0, [x29, #-48]
  45912c:	bl	4046b0 <free@plt>
  459130:	b	45905c <_obstack_memory_used@@Base+0xde98>
  459134:	mov	w19, #0xc                   	// #12
  459138:	stp	xzr, xzr, [x29, #-64]
  45913c:	stur	w19, [x29, #-36]
  459140:	b	45905c <_obstack_memory_used@@Base+0xde98>
  459144:	mov	w0, w23
  459148:	bl	404880 <iswalnum@plt>
  45914c:	cmp	w23, #0x5f
  459150:	mov	w27, #0x1                   	// #1
  459154:	b.eq	4589f8 <_obstack_memory_used@@Base+0xd834>  // b.none
  459158:	cbz	w0, 4589d0 <_obstack_memory_used@@Base+0xd80c>
  45915c:	b	4589f8 <_obstack_memory_used@@Base+0xd834>
  459160:	mov	w19, #0xc                   	// #12
  459164:	b	45905c <_obstack_memory_used@@Base+0xde98>
  459168:	sub	sp, sp, #0x70
  45916c:	stp	x29, x30, [sp, #32]
  459170:	stp	x24, x23, [sp, #64]
  459174:	stp	x22, x21, [sp, #80]
  459178:	stp	x20, x19, [sp, #96]
  45917c:	ldr	x23, [x1, #8]
  459180:	mov	x22, x0
  459184:	str	x25, [sp, #48]
  459188:	add	x29, sp, #0x20
  45918c:	lsl	x0, x23, #3
  459190:	mov	w20, w3
  459194:	mov	x21, x2
  459198:	mov	x19, x1
  45919c:	stp	x23, xzr, [sp, #8]
  4591a0:	bl	404210 <malloc@plt>
  4591a4:	str	x0, [sp, #24]
  4591a8:	cbz	x0, 4592a4 <_obstack_memory_used@@Base+0xe0e0>
  4591ac:	cmp	x23, #0x1
  4591b0:	b.lt	459268 <_obstack_memory_used@@Base+0xe0a4>  // b.tstop
  4591b4:	mov	x24, xzr
  4591b8:	mov	w25, #0x18                  	// #24
  4591bc:	b	4591dc <_obstack_memory_used@@Base+0xe018>
  4591c0:	add	x0, sp, #0x8
  4591c4:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  4591c8:	cbnz	w0, 459258 <_obstack_memory_used@@Base+0xe094>
  4591cc:	ldr	x8, [x19, #8]
  4591d0:	add	x24, x24, #0x1
  4591d4:	cmp	x24, x8
  4591d8:	b.ge	459268 <_obstack_memory_used@@Base+0xe0a4>  // b.tcont
  4591dc:	ldr	x8, [x19, #16]
  4591e0:	ldr	x9, [x22, #48]
  4591e4:	ldr	x2, [x8, x24, lsl #3]
  4591e8:	madd	x1, x2, x25, x9
  4591ec:	ldr	x8, [x1, #8]
  4591f0:	cmp	x8, #0x1
  4591f4:	b.lt	4591c0 <_obstack_memory_used@@Base+0xdffc>  // b.tstop
  4591f8:	madd	x9, x2, x25, x9
  4591fc:	ldr	x9, [x9, #16]
  459200:	ldr	x10, [x22]
  459204:	b	459214 <_obstack_memory_used@@Base+0xe050>
  459208:	subs	x8, x8, #0x1
  45920c:	add	x9, x9, #0x8
  459210:	b.eq	4591c0 <_obstack_memory_used@@Base+0xdffc>  // b.none
  459214:	ldr	x11, [x9]
  459218:	add	x12, x10, x11, lsl #4
  45921c:	ldrb	w12, [x12, #8]
  459220:	cmp	w12, w20
  459224:	b.ne	459208 <_obstack_memory_used@@Base+0xe044>  // b.any
  459228:	lsl	x12, x11, #4
  45922c:	ldr	x12, [x10, x12]
  459230:	cmp	x12, x21
  459234:	b.ne	459208 <_obstack_memory_used@@Base+0xe044>  // b.any
  459238:	cmn	x11, #0x1
  45923c:	b.eq	4591c0 <_obstack_memory_used@@Base+0xdffc>  // b.none
  459240:	add	x1, sp, #0x8
  459244:	mov	x0, x22
  459248:	mov	x3, x21
  45924c:	mov	w4, w20
  459250:	bl	459798 <_obstack_memory_used@@Base+0xe5d4>
  459254:	cbz	w0, 4591cc <_obstack_memory_used@@Base+0xe008>
  459258:	mov	w23, w0
  45925c:	ldr	x0, [sp, #24]
  459260:	bl	4046b0 <free@plt>
  459264:	b	459284 <_obstack_memory_used@@Base+0xe0c0>
  459268:	ldr	x0, [x19, #16]
  45926c:	bl	4046b0 <free@plt>
  459270:	ldr	x8, [sp, #24]
  459274:	ldur	q0, [sp, #8]
  459278:	mov	w23, wzr
  45927c:	str	x8, [x19, #16]
  459280:	str	q0, [x19]
  459284:	mov	w0, w23
  459288:	ldp	x20, x19, [sp, #96]
  45928c:	ldp	x22, x21, [sp, #80]
  459290:	ldp	x24, x23, [sp, #64]
  459294:	ldr	x25, [sp, #48]
  459298:	ldp	x29, x30, [sp, #32]
  45929c:	add	sp, sp, #0x70
  4592a0:	ret
  4592a4:	mov	w23, #0xc                   	// #12
  4592a8:	b	459284 <_obstack_memory_used@@Base+0xe0c0>
  4592ac:	sub	sp, sp, #0xc0
  4592b0:	stp	x29, x30, [sp, #96]
  4592b4:	stp	x28, x27, [sp, #112]
  4592b8:	stp	x26, x25, [sp, #128]
  4592bc:	stp	x24, x23, [sp, #144]
  4592c0:	stp	x22, x21, [sp, #160]
  4592c4:	stp	x20, x19, [sp, #176]
  4592c8:	ldr	x8, [x0, #200]
  4592cc:	ldr	x23, [x0, #152]
  4592d0:	mov	x21, x2
  4592d4:	mov	x22, x0
  4592d8:	cmp	x8, #0x1
  4592dc:	mov	x24, x1
  4592e0:	mov	x28, xzr
  4592e4:	add	x29, sp, #0x60
  4592e8:	b.lt	459324 <_obstack_memory_used@@Base+0xe160>  // b.tstop
  4592ec:	ldr	x9, [x22, #216]
  4592f0:	mov	w10, #0x28                  	// #40
  4592f4:	mov	x11, x8
  4592f8:	add	x12, x11, x28
  4592fc:	cmp	x12, #0x0
  459300:	cinc	x12, x12, lt  // lt = tstop
  459304:	asr	x12, x12, #1
  459308:	madd	x13, x12, x10, x9
  45930c:	ldr	x13, [x13, #8]
  459310:	cmp	x13, x21
  459314:	csel	x11, x11, x12, lt  // lt = tstop
  459318:	csinc	x28, x28, x12, ge  // ge = tcont
  45931c:	cmp	x28, x11
  459320:	b.lt	4592f8 <_obstack_memory_used@@Base+0xe134>  // b.tstop
  459324:	cmp	x28, x8
  459328:	b.ge	459770 <_obstack_memory_used@@Base+0xe5ac>  // b.tcont
  45932c:	cmn	x28, #0x1
  459330:	mov	w26, wzr
  459334:	b.eq	459774 <_obstack_memory_used@@Base+0xe5b0>  // b.none
  459338:	ldr	x8, [x22, #216]
  45933c:	mov	w9, #0x28                  	// #40
  459340:	madd	x9, x28, x9, x8
  459344:	ldr	x9, [x9, #8]
  459348:	cmp	x9, x21
  45934c:	b.ne	459774 <_obstack_memory_used@@Base+0xe5b0>  // b.any
  459350:	mov	w9, #0x1                   	// #1
  459354:	dup	v0.2d, x9
  459358:	str	x3, [sp, #40]
  45935c:	stur	w4, [x29, #-44]
  459360:	str	q0, [sp, #16]
  459364:	stur	x23, [x29, #-40]
  459368:	mov	w9, #0x28                  	// #40
  45936c:	madd	x19, x28, x9, x8
  459370:	b	459380 <_obstack_memory_used@@Base+0xe1bc>
  459374:	ldrb	w8, [x19, #32]
  459378:	add	x19, x19, #0x28
  45937c:	cbz	w8, 459770 <_obstack_memory_used@@Base+0xe5ac>
  459380:	ldr	x8, [x24, #8]
  459384:	subs	x9, x8, #0x1
  459388:	b.lt	459374 <_obstack_memory_used@@Base+0xe1b0>  // b.tstop
  45938c:	ldr	x10, [x19]
  459390:	ldr	x8, [x24, #16]
  459394:	mov	x11, xzr
  459398:	b.eq	4593c0 <_obstack_memory_used@@Base+0xe1fc>  // b.none
  45939c:	mov	x12, x9
  4593a0:	add	x13, x11, x12
  4593a4:	lsr	x13, x13, #1
  4593a8:	ldr	x14, [x8, x13, lsl #3]
  4593ac:	cmp	x14, x10
  4593b0:	csinc	x11, x11, x13, ge  // ge = tcont
  4593b4:	csel	x12, x12, x13, lt  // lt = tstop
  4593b8:	cmp	x11, x12
  4593bc:	b.cc	4593a0 <_obstack_memory_used@@Base+0xe1dc>  // b.lo, b.ul, b.last
  4593c0:	ldr	x11, [x8, x11, lsl #3]
  4593c4:	cmp	x11, x10
  4593c8:	b.ne	459374 <_obstack_memory_used@@Base+0xe1b0>  // b.any
  4593cc:	ldp	x12, x11, [x19, #16]
  4593d0:	add	x11, x11, x21
  4593d4:	sub	x27, x11, x12
  4593d8:	cmp	x27, x21
  4593dc:	b.ne	4594a0 <_obstack_memory_used@@Base+0xe2dc>  // b.any
  4593e0:	ldr	x11, [x23, #40]
  4593e4:	mov	w12, #0x18                  	// #24
  4593e8:	madd	x10, x10, x12, x11
  4593ec:	ldr	x10, [x10, #16]
  4593f0:	ldr	x20, [x10]
  4593f4:	mov	x10, xzr
  4593f8:	cbz	x9, 45941c <_obstack_memory_used@@Base+0xe258>
  4593fc:	add	x11, x10, x9
  459400:	lsr	x11, x11, #1
  459404:	ldr	x12, [x8, x11, lsl #3]
  459408:	cmp	x12, x20
  45940c:	csinc	x10, x10, x11, ge  // ge = tcont
  459410:	csel	x9, x9, x11, lt  // lt = tstop
  459414:	cmp	x10, x9
  459418:	b.cc	4593fc <_obstack_memory_used@@Base+0xe238>  // b.lo, b.ul, b.last
  45941c:	ldr	x8, [x8, x10, lsl #3]
  459420:	cmp	x8, x20
  459424:	b.eq	4594fc <_obstack_memory_used@@Base+0xe338>  // b.none
  459428:	ldr	q0, [sp, #16]
  45942c:	mov	w0, #0x8                   	// #8
  459430:	stur	q0, [x29, #-32]
  459434:	bl	404210 <malloc@plt>
  459438:	mov	w23, w26
  45943c:	stur	x0, [x29, #-16]
  459440:	cbz	x0, 459634 <_obstack_memory_used@@Base+0xe470>
  459444:	mov	w25, wzr
  459448:	str	x20, [x0]
  45944c:	ldur	x0, [x29, #-40]
  459450:	ldr	x2, [sp, #40]
  459454:	ldur	w3, [x29, #-44]
  459458:	sub	x1, x29, #0x20
  45945c:	stur	w25, [x29, #-4]
  459460:	bl	459168 <_obstack_memory_used@@Base+0xdfa4>
  459464:	mov	w26, w0
  459468:	sub	x1, x29, #0x20
  45946c:	mov	x0, x24
  459470:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  459474:	ldur	x8, [x29, #-16]
  459478:	mov	w27, w0
  45947c:	mov	x0, x8
  459480:	bl	4046b0 <free@plt>
  459484:	orr	w8, w26, w25
  459488:	orr	w8, w8, w27
  45948c:	cbnz	w8, 459640 <_obstack_memory_used@@Base+0xe47c>
  459490:	mov	w26, w23
  459494:	ldur	x23, [x29, #-40]
  459498:	mov	w8, #0x2                   	// #2
  45949c:	b	459618 <_obstack_memory_used@@Base+0xe454>
  4594a0:	ldr	x8, [x22, #184]
  4594a4:	ldr	x9, [x23, #24]
  4594a8:	ldr	x25, [x8, x27, lsl #3]
  4594ac:	ldr	x20, [x9, x10, lsl #3]
  4594b0:	cbz	x25, 459504 <_obstack_memory_used@@Base+0xe340>
  4594b4:	ldr	x8, [x25, #16]
  4594b8:	cmp	x8, #0x0
  4594bc:	b.le	45952c <_obstack_memory_used@@Base+0xe368>
  4594c0:	ldr	x9, [x25, #24]
  4594c4:	mov	x11, xzr
  4594c8:	subs	x10, x8, #0x1
  4594cc:	b.eq	4594f0 <_obstack_memory_used@@Base+0xe32c>  // b.none
  4594d0:	add	x12, x11, x10
  4594d4:	lsr	x12, x12, #1
  4594d8:	ldr	x13, [x9, x12, lsl #3]
  4594dc:	cmp	x13, x20
  4594e0:	csinc	x11, x11, x12, ge  // ge = tcont
  4594e4:	csel	x10, x10, x12, lt  // lt = tstop
  4594e8:	cmp	x11, x10
  4594ec:	b.cc	4594d0 <_obstack_memory_used@@Base+0xe30c>  // b.lo, b.ul, b.last
  4594f0:	ldr	x9, [x9, x11, lsl #3]
  4594f4:	cmp	x9, x20
  4594f8:	b.ne	459534 <_obstack_memory_used@@Base+0xe370>  // b.any
  4594fc:	mov	w8, #0x4                   	// #4
  459500:	b	459618 <_obstack_memory_used@@Base+0xe454>
  459504:	mov	w8, #0x1                   	// #1
  459508:	dup	v0.2d, x8
  45950c:	mov	w0, #0x8                   	// #8
  459510:	stur	q0, [x29, #-32]
  459514:	bl	404210 <malloc@plt>
  459518:	stur	x0, [x29, #-16]
  45951c:	cbz	x0, 459660 <_obstack_memory_used@@Base+0xe49c>
  459520:	str	x20, [x0]
  459524:	stur	wzr, [x29, #-4]
  459528:	b	4595cc <_obstack_memory_used@@Base+0xe408>
  45952c:	stur	x8, [x29, #-24]
  459530:	b	459598 <_obstack_memory_used@@Base+0xe3d4>
  459534:	cmp	x8, #0x1
  459538:	stur	x8, [x29, #-24]
  45953c:	b.lt	459598 <_obstack_memory_used@@Base+0xe3d4>  // b.tstop
  459540:	str	w26, [sp, #12]
  459544:	lsl	x26, x8, #3
  459548:	mov	x0, x26
  45954c:	stur	x8, [x29, #-32]
  459550:	bl	404210 <malloc@plt>
  459554:	stur	x0, [x29, #-16]
  459558:	cbz	x0, 459698 <_obstack_memory_used@@Base+0xe4d4>
  45955c:	ldr	x1, [x25, #24]
  459560:	mov	x2, x26
  459564:	bl	403e80 <memcpy@plt>
  459568:	ldur	x9, [x29, #-32]
  45956c:	stur	wzr, [x29, #-4]
  459570:	cbz	x9, 459628 <_obstack_memory_used@@Base+0xe464>
  459574:	ldur	x8, [x29, #-24]
  459578:	ldr	w26, [sp, #12]
  45957c:	cbnz	x8, 4596a8 <_obstack_memory_used@@Base+0xe4e4>
  459580:	ldur	x8, [x29, #-16]
  459584:	str	x20, [x8]
  459588:	ldur	x8, [x29, #-24]
  45958c:	add	x8, x8, #0x1
  459590:	stur	x8, [x29, #-24]
  459594:	b	4595cc <_obstack_memory_used@@Base+0xe408>
  459598:	mov	w25, wzr
  45959c:	stp	xzr, xzr, [x29, #-32]
  4595a0:	stur	xzr, [x29, #-16]
  4595a4:	stur	wzr, [x29, #-4]
  4595a8:	mov	w8, #0x1                   	// #1
  4595ac:	dup	v0.2d, x8
  4595b0:	mov	w0, #0x8                   	// #8
  4595b4:	stur	q0, [x29, #-32]
  4595b8:	bl	404210 <malloc@plt>
  4595bc:	stur	x0, [x29, #-16]
  4595c0:	cbz	x0, 459674 <_obstack_memory_used@@Base+0xe4b0>
  4595c4:	str	x20, [x0]
  4595c8:	cbnz	w25, 459684 <_obstack_memory_used@@Base+0xe4c0>
  4595cc:	sub	x0, x29, #0x4
  4595d0:	sub	x2, x29, #0x20
  4595d4:	mov	x1, x23
  4595d8:	bl	4598c8 <_obstack_memory_used@@Base+0xe704>
  4595dc:	ldr	x8, [x22, #184]
  4595e0:	lsl	x20, x27, #3
  4595e4:	str	x0, [x8, x20]
  4595e8:	ldur	x0, [x29, #-16]
  4595ec:	bl	4046b0 <free@plt>
  4595f0:	ldr	x8, [x22, #184]
  4595f4:	ldur	w9, [x29, #-4]
  4595f8:	ldr	x8, [x8, x20]
  4595fc:	cmp	x8, #0x0
  459600:	cset	w10, eq  // eq = none
  459604:	cmp	w9, #0x0
  459608:	cset	w11, ne  // ne = any
  45960c:	tst	w10, w11
  459610:	and	w8, w10, w11
  459614:	csel	w26, w9, w26, ne  // ne = any
  459618:	cbz	w8, 459374 <_obstack_memory_used@@Base+0xe1b0>
  45961c:	cmp	w8, #0x4
  459620:	b.eq	459374 <_obstack_memory_used@@Base+0xe1b0>  // b.none
  459624:	b	459760 <_obstack_memory_used@@Base+0xe59c>
  459628:	mov	w25, wzr
  45962c:	ldr	w26, [sp, #12]
  459630:	b	4595a8 <_obstack_memory_used@@Base+0xe3e4>
  459634:	stp	xzr, xzr, [x29, #-32]
  459638:	mov	w25, #0xc                   	// #12
  45963c:	b	45944c <_obstack_memory_used@@Base+0xe288>
  459640:	cmp	w26, #0x0
  459644:	ldur	x23, [x29, #-40]
  459648:	csel	w8, w27, w26, eq  // eq = none
  45964c:	cmp	w25, #0x0
  459650:	csel	w26, w8, w25, eq  // eq = none
  459654:	stur	w26, [x29, #-4]
  459658:	mov	w8, #0x1                   	// #1
  45965c:	b	459618 <_obstack_memory_used@@Base+0xe454>
  459660:	mov	w26, #0xc                   	// #12
  459664:	stp	xzr, xzr, [x29, #-32]
  459668:	stur	w26, [x29, #-4]
  45966c:	mov	w8, #0x1                   	// #1
  459670:	b	459618 <_obstack_memory_used@@Base+0xe454>
  459674:	stp	xzr, xzr, [x29, #-32]
  459678:	cbnz	w25, 459688 <_obstack_memory_used@@Base+0xe4c4>
  45967c:	mov	w25, #0xc                   	// #12
  459680:	b	459688 <_obstack_memory_used@@Base+0xe4c4>
  459684:	bl	4046b0 <free@plt>
  459688:	stur	w25, [x29, #-4]
  45968c:	mov	w8, #0x1                   	// #1
  459690:	mov	w26, w25
  459694:	b	459618 <_obstack_memory_used@@Base+0xe454>
  459698:	mov	w25, #0xc                   	// #12
  45969c:	stp	xzr, xzr, [x29, #-32]
  4596a0:	stur	w25, [x29, #-4]
  4596a4:	b	45962c <_obstack_memory_used@@Base+0xe468>
  4596a8:	cmp	x9, x8
  4596ac:	b.ne	4596d4 <_obstack_memory_used@@Base+0xe510>  // b.any
  4596b0:	ldur	x0, [x29, #-16]
  4596b4:	lsl	x8, x9, #1
  4596b8:	lsl	x1, x9, #4
  4596bc:	stur	x8, [x29, #-32]
  4596c0:	bl	404450 <realloc@plt>
  4596c4:	cbz	x0, 459750 <_obstack_memory_used@@Base+0xe58c>
  4596c8:	ldur	x8, [x29, #-24]
  4596cc:	stur	x0, [x29, #-16]
  4596d0:	b	4596d8 <_obstack_memory_used@@Base+0xe514>
  4596d4:	ldur	x0, [x29, #-16]
  4596d8:	ldr	x9, [x0]
  4596dc:	cmp	x9, x20
  4596e0:	b.le	45970c <_obstack_memory_used@@Base+0xe548>
  4596e4:	cmp	x8, #0x1
  4596e8:	b.lt	459734 <_obstack_memory_used@@Base+0xe570>  // b.tstop
  4596ec:	mov	x9, x8
  4596f0:	add	x10, x0, x9, lsl #3
  4596f4:	ldur	x11, [x10, #-8]
  4596f8:	subs	x8, x9, #0x1
  4596fc:	mov	x9, x8
  459700:	str	x11, [x10]
  459704:	b.gt	4596f0 <_obstack_memory_used@@Base+0xe52c>
  459708:	b	459734 <_obstack_memory_used@@Base+0xe570>
  45970c:	add	x9, x0, x8, lsl #3
  459710:	ldur	x9, [x9, #-8]
  459714:	cmp	x9, x20
  459718:	b.le	459734 <_obstack_memory_used@@Base+0xe570>
  45971c:	add	x10, x0, x8, lsl #3
  459720:	str	x9, [x10]
  459724:	ldur	x9, [x10, #-16]
  459728:	sub	x8, x8, #0x1
  45972c:	cmp	x9, x20
  459730:	b.gt	45971c <_obstack_memory_used@@Base+0xe558>
  459734:	str	x20, [x0, x8, lsl #3]
  459738:	ldur	x8, [x29, #-24]
  45973c:	ldr	w26, [sp, #12]
  459740:	ldur	x23, [x29, #-40]
  459744:	add	x8, x8, #0x1
  459748:	stur	x8, [x29, #-24]
  45974c:	b	4595cc <_obstack_memory_used@@Base+0xe408>
  459750:	ldur	x0, [x29, #-16]
  459754:	bl	4046b0 <free@plt>
  459758:	ldur	x23, [x29, #-40]
  45975c:	b	45967c <_obstack_memory_used@@Base+0xe4b8>
  459760:	cmp	w8, #0x2
  459764:	b.ne	459774 <_obstack_memory_used@@Base+0xe5b0>  // b.any
  459768:	ldr	x8, [x22, #216]
  45976c:	b	459368 <_obstack_memory_used@@Base+0xe1a4>
  459770:	mov	w26, wzr
  459774:	mov	w0, w26
  459778:	ldp	x20, x19, [sp, #176]
  45977c:	ldp	x22, x21, [sp, #160]
  459780:	ldp	x24, x23, [sp, #144]
  459784:	ldp	x26, x25, [sp, #128]
  459788:	ldp	x28, x27, [sp, #112]
  45978c:	ldp	x29, x30, [sp, #96]
  459790:	add	sp, sp, #0xc0
  459794:	ret
  459798:	stp	x29, x30, [sp, #-64]!
  45979c:	stp	x24, x23, [sp, #16]
  4597a0:	stp	x22, x21, [sp, #32]
  4597a4:	stp	x20, x19, [sp, #48]
  4597a8:	mov	w21, w4
  4597ac:	mov	x22, x3
  4597b0:	mov	x19, x2
  4597b4:	mov	x20, x1
  4597b8:	mov	x23, x0
  4597bc:	mov	w24, #0x18                  	// #24
  4597c0:	mov	x29, sp
  4597c4:	b	4597d8 <_obstack_memory_used@@Base+0xe614>
  4597c8:	cbz	x9, 4598a8 <_obstack_memory_used@@Base+0xe6e4>
  4597cc:	madd	x8, x19, x24, x8
  4597d0:	ldr	x8, [x8, #16]
  4597d4:	ldr	x19, [x8]
  4597d8:	ldr	x8, [x20, #8]
  4597dc:	subs	x9, x8, #0x1
  4597e0:	b.lt	45981c <_obstack_memory_used@@Base+0xe658>  // b.tstop
  4597e4:	ldr	x8, [x20, #16]
  4597e8:	mov	x10, xzr
  4597ec:	b.eq	459810 <_obstack_memory_used@@Base+0xe64c>  // b.none
  4597f0:	add	x11, x10, x9
  4597f4:	lsr	x11, x11, #1
  4597f8:	ldr	x12, [x8, x11, lsl #3]
  4597fc:	cmp	x12, x19
  459800:	csinc	x10, x10, x11, ge  // ge = tcont
  459804:	csel	x9, x9, x11, lt  // lt = tstop
  459808:	cmp	x10, x9
  45980c:	b.cc	4597f0 <_obstack_memory_used@@Base+0xe62c>  // b.lo, b.ul, b.last
  459810:	ldr	x8, [x8, x10, lsl #3]
  459814:	cmp	x8, x19
  459818:	b.eq	4598a8 <_obstack_memory_used@@Base+0xe6e4>  // b.none
  45981c:	ldr	x8, [x23]
  459820:	add	x9, x8, x19, lsl #4
  459824:	ldrb	w9, [x9, #8]
  459828:	cmp	w9, w21
  45982c:	b.ne	459840 <_obstack_memory_used@@Base+0xe67c>  // b.any
  459830:	lsl	x9, x19, #4
  459834:	ldr	x8, [x8, x9]
  459838:	cmp	x8, x22
  45983c:	b.eq	459890 <_obstack_memory_used@@Base+0xe6cc>  // b.none
  459840:	mov	x0, x20
  459844:	mov	x1, x19
  459848:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  45984c:	tbz	w0, #0, 4598c0 <_obstack_memory_used@@Base+0xe6fc>
  459850:	ldr	x8, [x23, #40]
  459854:	madd	x9, x19, x24, x8
  459858:	ldr	x9, [x9, #8]
  45985c:	cmp	x9, #0x2
  459860:	b.ne	4597c8 <_obstack_memory_used@@Base+0xe604>  // b.any
  459864:	madd	x8, x19, x24, x8
  459868:	ldr	x8, [x8, #16]
  45986c:	mov	x0, x23
  459870:	mov	x1, x20
  459874:	mov	x3, x22
  459878:	ldr	x2, [x8, #8]
  45987c:	mov	w4, w21
  459880:	bl	459798 <_obstack_memory_used@@Base+0xe5d4>
  459884:	cbnz	w0, 4598ac <_obstack_memory_used@@Base+0xe6e8>
  459888:	ldr	x8, [x23, #40]
  45988c:	b	4597cc <_obstack_memory_used@@Base+0xe608>
  459890:	cmp	w21, #0x9
  459894:	b.ne	4598a8 <_obstack_memory_used@@Base+0xe6e4>  // b.any
  459898:	mov	x0, x20
  45989c:	mov	x1, x19
  4598a0:	bl	455550 <_obstack_memory_used@@Base+0xa38c>
  4598a4:	tbz	w0, #0, 4598c0 <_obstack_memory_used@@Base+0xe6fc>
  4598a8:	mov	w0, wzr
  4598ac:	ldp	x20, x19, [sp, #48]
  4598b0:	ldp	x22, x21, [sp, #32]
  4598b4:	ldp	x24, x23, [sp, #16]
  4598b8:	ldp	x29, x30, [sp], #64
  4598bc:	ret
  4598c0:	mov	w0, #0xc                   	// #12
  4598c4:	b	4598ac <_obstack_memory_used@@Base+0xe6e8>
  4598c8:	stp	x29, x30, [sp, #-80]!
  4598cc:	stp	x24, x23, [sp, #32]
  4598d0:	stp	x22, x21, [sp, #48]
  4598d4:	stp	x20, x19, [sp, #64]
  4598d8:	ldr	x24, [x2, #8]
  4598dc:	mov	x19, x0
  4598e0:	str	x25, [sp, #16]
  4598e4:	mov	x29, sp
  4598e8:	cbz	x24, 459b20 <_obstack_memory_used@@Base+0xe95c>
  4598ec:	mov	x22, x2
  4598f0:	mov	x20, x1
  4598f4:	subs	x8, x24, #0x1
  4598f8:	mov	x21, x24
  4598fc:	b.lt	459974 <_obstack_memory_used@@Base+0xe7b0>  // b.tstop
  459900:	ldr	x9, [x22, #16]
  459904:	cmp	x24, #0x4
  459908:	b.cs	459918 <_obstack_memory_used@@Base+0xe754>  // b.hs, b.nlast
  45990c:	mov	x10, xzr
  459910:	mov	x21, x24
  459914:	b	45995c <_obstack_memory_used@@Base+0xe798>
  459918:	and	x10, x24, #0xfffffffffffffffc
  45991c:	movi	v1.2d, #0x0
  459920:	movi	v0.2d, #0x0
  459924:	mov	v1.d[0], x24
  459928:	add	x11, x9, #0x10
  45992c:	mov	x12, x10
  459930:	ldp	q2, q3, [x11, #-16]
  459934:	subs	x12, x12, #0x4
  459938:	add	x11, x11, #0x20
  45993c:	add	v1.2d, v2.2d, v1.2d
  459940:	add	v0.2d, v3.2d, v0.2d
  459944:	b.ne	459930 <_obstack_memory_used@@Base+0xe76c>  // b.any
  459948:	add	v0.2d, v0.2d, v1.2d
  45994c:	addp	d0, v0.2d
  459950:	cmp	x24, x10
  459954:	fmov	x21, d0
  459958:	b.eq	459974 <_obstack_memory_used@@Base+0xe7b0>  // b.none
  45995c:	sub	x11, x24, x10
  459960:	add	x9, x9, x10, lsl #3
  459964:	ldr	x10, [x9], #8
  459968:	subs	x11, x11, #0x1
  45996c:	add	x21, x10, x21
  459970:	b.ne	459964 <_obstack_memory_used@@Base+0xe7a0>  // b.any
  459974:	ldr	x9, [x20, #136]
  459978:	ldr	x10, [x20, #64]
  45997c:	and	x11, x9, x21
  459980:	mov	w9, #0x18                  	// #24
  459984:	mul	x9, x11, x9
  459988:	ldr	x9, [x10, x9]
  45998c:	cmp	x9, #0x1
  459990:	b.lt	459a08 <_obstack_memory_used@@Base+0xe844>  // b.tstop
  459994:	cbz	x22, 459a08 <_obstack_memory_used@@Base+0xe844>
  459998:	mov	w12, #0x18                  	// #24
  45999c:	madd	x10, x11, x12, x10
  4599a0:	ldr	x10, [x10, #16]
  4599a4:	mov	x11, xzr
  4599a8:	b	4599b8 <_obstack_memory_used@@Base+0xe7f4>
  4599ac:	add	x11, x11, #0x1
  4599b0:	cmp	x11, x9
  4599b4:	b.ge	459a08 <_obstack_memory_used@@Base+0xe844>  // b.tcont
  4599b8:	ldr	x23, [x10, x11, lsl #3]
  4599bc:	ldr	x12, [x23]
  4599c0:	cmp	x21, x12
  4599c4:	b.ne	4599ac <_obstack_memory_used@@Base+0xe7e8>  // b.any
  4599c8:	ldr	x12, [x23, #16]
  4599cc:	cmp	x12, x24
  4599d0:	b.ne	4599ac <_obstack_memory_used@@Base+0xe7e8>  // b.any
  4599d4:	mov	x12, x8
  4599d8:	add	x13, x12, #0x1
  4599dc:	cmp	x13, #0x1
  4599e0:	b.lt	459b04 <_obstack_memory_used@@Base+0xe940>  // b.tstop
  4599e4:	ldr	x13, [x23, #24]
  4599e8:	ldr	x14, [x22, #16]
  4599ec:	lsl	x15, x12, #3
  4599f0:	sub	x12, x12, #0x1
  4599f4:	ldr	x13, [x13, x15]
  4599f8:	ldr	x14, [x14, x15]
  4599fc:	cmp	x13, x14
  459a00:	b.eq	4599d8 <_obstack_memory_used@@Base+0xe814>  // b.none
  459a04:	b	4599ac <_obstack_memory_used@@Base+0xe7e8>
  459a08:	mov	w0, #0x70                  	// #112
  459a0c:	mov	w1, #0x1                   	// #1
  459a10:	bl	4043d0 <calloc@plt>
  459a14:	cbz	x0, 459b40 <_obstack_memory_used@@Base+0xe97c>
  459a18:	mov	x23, x0
  459a1c:	add	x25, x0, #0x8
  459a20:	cmp	x24, #0x1
  459a24:	str	x24, [x0, #16]
  459a28:	b.lt	459ae4 <_obstack_memory_used@@Base+0xe920>  // b.tstop
  459a2c:	str	x24, [x23, #8]
  459a30:	lsl	x24, x24, #3
  459a34:	mov	x0, x24
  459a38:	bl	404210 <malloc@plt>
  459a3c:	str	x0, [x23, #24]
  459a40:	cbz	x0, 459b38 <_obstack_memory_used@@Base+0xe974>
  459a44:	ldr	x1, [x22, #16]
  459a48:	mov	x2, x24
  459a4c:	bl	403e80 <memcpy@plt>
  459a50:	ldr	x8, [x22, #8]
  459a54:	str	x25, [x23, #80]
  459a58:	cmp	x8, #0x1
  459a5c:	b.lt	459af0 <_obstack_memory_used@@Base+0xe92c>  // b.tstop
  459a60:	ldr	x9, [x20]
  459a64:	ldr	x10, [x22, #16]
  459a68:	b	459a8c <_obstack_memory_used@@Base+0xe8c8>
  459a6c:	ldr	w11, [x11]
  459a70:	tst	w11, #0x3ff00
  459a74:	b.eq	459a80 <_obstack_memory_used@@Base+0xe8bc>  // b.none
  459a78:	orr	w11, w12, #0x80
  459a7c:	strb	w11, [x23, #104]
  459a80:	subs	x8, x8, #0x1
  459a84:	add	x10, x10, #0x8
  459a88:	b.eq	459af0 <_obstack_memory_used@@Base+0xe92c>  // b.none
  459a8c:	ldr	x11, [x10]
  459a90:	add	x11, x9, x11, lsl #4
  459a94:	ldr	w12, [x11, #8]!
  459a98:	and	w13, w12, #0x3ffff
  459a9c:	cmp	w13, #0x1
  459aa0:	b.eq	459a80 <_obstack_memory_used@@Base+0xe8bc>  // b.none
  459aa4:	ldrb	w14, [x23, #104]
  459aa8:	lsr	w15, w12, #15
  459aac:	and	w13, w12, #0xff
  459ab0:	and	w12, w15, #0x20
  459ab4:	orr	w12, w14, w12
  459ab8:	cmp	w13, #0xc
  459abc:	strb	w12, [x23, #104]
  459ac0:	b.eq	459a78 <_obstack_memory_used@@Base+0xe8b4>  // b.none
  459ac4:	cmp	w13, #0x4
  459ac8:	b.eq	459adc <_obstack_memory_used@@Base+0xe918>  // b.none
  459acc:	cmp	w13, #0x2
  459ad0:	b.ne	459a6c <_obstack_memory_used@@Base+0xe8a8>  // b.any
  459ad4:	orr	w11, w12, #0x10
  459ad8:	b	459a7c <_obstack_memory_used@@Base+0xe8b8>
  459adc:	orr	w11, w12, #0x40
  459ae0:	b	459a7c <_obstack_memory_used@@Base+0xe8b8>
  459ae4:	stp	xzr, xzr, [x25]
  459ae8:	str	xzr, [x25, #16]
  459aec:	str	x25, [x23, #80]
  459af0:	mov	x0, x20
  459af4:	mov	x1, x23
  459af8:	mov	x2, x21
  459afc:	bl	455e24 <_obstack_memory_used@@Base+0xac60>
  459b00:	cbnz	w0, 459b2c <_obstack_memory_used@@Base+0xe968>
  459b04:	mov	x0, x23
  459b08:	ldp	x20, x19, [sp, #64]
  459b0c:	ldp	x22, x21, [sp, #48]
  459b10:	ldp	x24, x23, [sp, #32]
  459b14:	ldr	x25, [sp, #16]
  459b18:	ldp	x29, x30, [sp], #80
  459b1c:	ret
  459b20:	mov	x23, xzr
  459b24:	str	wzr, [x19]
  459b28:	b	459b04 <_obstack_memory_used@@Base+0xe940>
  459b2c:	mov	x0, x23
  459b30:	bl	44ff84 <_obstack_memory_used@@Base+0x4dc0>
  459b34:	b	459b40 <_obstack_memory_used@@Base+0xe97c>
  459b38:	mov	x0, x23
  459b3c:	bl	4046b0 <free@plt>
  459b40:	mov	x23, xzr
  459b44:	mov	w8, #0xc                   	// #12
  459b48:	str	w8, [x19]
  459b4c:	b	459b04 <_obstack_memory_used@@Base+0xe940>
  459b50:	stp	x29, x30, [sp, #-48]!
  459b54:	stp	x22, x21, [sp, #16]
  459b58:	stp	x20, x19, [sp, #32]
  459b5c:	ldr	x8, [x0]
  459b60:	mov	x29, sp
  459b64:	add	x9, x8, x1, lsl #4
  459b68:	ldrb	w10, [x9, #8]
  459b6c:	cmp	w10, #0x7
  459b70:	b.eq	459da4 <_obstack_memory_used@@Base+0xebe0>  // b.none
  459b74:	ldr	w9, [x2, #144]
  459b78:	cmp	w9, #0x1
  459b7c:	b.ne	459be0 <_obstack_memory_used@@Base+0xea1c>  // b.any
  459b80:	mov	w20, #0x1                   	// #1
  459b84:	cmp	w10, #0x5
  459b88:	b.eq	459c2c <_obstack_memory_used@@Base+0xea68>  // b.none
  459b8c:	cmp	w10, #0x6
  459b90:	mov	w0, wzr
  459b94:	b.ne	459d4c <_obstack_memory_used@@Base+0xeb88>  // b.any
  459b98:	cmp	w20, #0x2
  459b9c:	b.lt	459d4c <_obstack_memory_used@@Base+0xeb88>  // b.tstop
  459ba0:	lsl	x10, x1, #4
  459ba4:	ldr	x21, [x8, x10]
  459ba8:	ldr	x8, [x21, #64]
  459bac:	cbnz	x8, 459bc0 <_obstack_memory_used@@Base+0xe9fc>
  459bb0:	ldr	x10, [x21, #72]
  459bb4:	cbnz	x10, 459bc0 <_obstack_memory_used@@Base+0xe9fc>
  459bb8:	ldr	x10, [x21, #40]
  459bbc:	cbz	x10, 459d90 <_obstack_memory_used@@Base+0xebcc>
  459bc0:	cmp	w9, #0x1
  459bc4:	b.ne	459c88 <_obstack_memory_used@@Base+0xeac4>  // b.any
  459bc8:	ldr	x9, [x2, #8]
  459bcc:	ldrb	w19, [x9, x3]
  459bd0:	ldr	x9, [x21, #40]
  459bd4:	cmp	x9, #0x1
  459bd8:	b.ge	459c9c <_obstack_memory_used@@Base+0xead8>  // b.tcont
  459bdc:	b	459cbc <_obstack_memory_used@@Base+0xeaf8>
  459be0:	ldr	x11, [x2, #48]
  459be4:	add	x12, x3, #0x1
  459be8:	cmp	x12, x11
  459bec:	b.ge	459c20 <_obstack_memory_used@@Base+0xea5c>  // b.tcont
  459bf0:	ldr	x13, [x2, #16]
  459bf4:	sub	w20, w11, w3
  459bf8:	sub	x12, x11, x3
  459bfc:	mov	w11, #0x1                   	// #1
  459c00:	add	x13, x13, x3, lsl #2
  459c04:	ldr	w14, [x13, x11, lsl #2]
  459c08:	cmn	w14, #0x1
  459c0c:	b.ne	459c78 <_obstack_memory_used@@Base+0xeab4>  // b.any
  459c10:	add	x11, x11, #0x1
  459c14:	cmp	x12, x11
  459c18:	b.ne	459c04 <_obstack_memory_used@@Base+0xea40>  // b.any
  459c1c:	b	459c24 <_obstack_memory_used@@Base+0xea60>
  459c20:	mov	w20, #0x1                   	// #1
  459c24:	cmp	w10, #0x5
  459c28:	b.ne	459b8c <_obstack_memory_used@@Base+0xe9c8>  // b.any
  459c2c:	cmp	w20, #0x2
  459c30:	b.ge	459c3c <_obstack_memory_used@@Base+0xea78>  // b.tcont
  459c34:	mov	w0, wzr
  459c38:	b	459d4c <_obstack_memory_used@@Base+0xeb88>
  459c3c:	ldr	x8, [x0, #216]
  459c40:	tbnz	w8, #6, 459c54 <_obstack_memory_used@@Base+0xea90>
  459c44:	ldr	x9, [x2, #8]
  459c48:	ldrb	w9, [x9, x3]
  459c4c:	cmp	w9, #0xa
  459c50:	b.eq	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.none
  459c54:	tbz	w8, #7, 459c64 <_obstack_memory_used@@Base+0xeaa0>
  459c58:	ldr	x8, [x2, #8]
  459c5c:	ldrb	w8, [x8, x3]
  459c60:	cbz	w8, 459d64 <_obstack_memory_used@@Base+0xeba0>
  459c64:	mov	w0, w20
  459c68:	ldp	x20, x19, [sp, #32]
  459c6c:	ldp	x22, x21, [sp, #16]
  459c70:	ldp	x29, x30, [sp], #48
  459c74:	ret
  459c78:	mov	w20, w11
  459c7c:	cmp	w10, #0x5
  459c80:	b.eq	459c2c <_obstack_memory_used@@Base+0xea68>  // b.none
  459c84:	b	459b8c <_obstack_memory_used@@Base+0xe9c8>
  459c88:	ldr	x9, [x2, #16]
  459c8c:	ldr	w19, [x9, x3, lsl #2]
  459c90:	ldr	x9, [x21, #40]
  459c94:	cmp	x9, #0x1
  459c98:	b.lt	459cbc <_obstack_memory_used@@Base+0xeaf8>  // b.tstop
  459c9c:	ldr	x10, [x21]
  459ca0:	mov	x11, xzr
  459ca4:	ldr	w12, [x10, x11, lsl #2]
  459ca8:	cmp	w19, w12
  459cac:	b.eq	459d30 <_obstack_memory_used@@Base+0xeb6c>  // b.none
  459cb0:	add	x11, x11, #0x1
  459cb4:	cmp	x11, x9
  459cb8:	b.lt	459ca4 <_obstack_memory_used@@Base+0xeae0>  // b.tstop
  459cbc:	ldr	x9, [x21, #72]
  459cc0:	cmp	x9, #0x1
  459cc4:	b.lt	459cf4 <_obstack_memory_used@@Base+0xeb30>  // b.tstop
  459cc8:	mov	x22, xzr
  459ccc:	ldr	x8, [x21, #24]
  459cd0:	mov	w0, w19
  459cd4:	ldr	x1, [x8, x22, lsl #3]
  459cd8:	bl	404200 <iswctype@plt>
  459cdc:	cbnz	w0, 459d30 <_obstack_memory_used@@Base+0xeb6c>
  459ce0:	ldr	x8, [x21, #72]
  459ce4:	add	x22, x22, #0x1
  459ce8:	cmp	x22, x8
  459cec:	b.lt	459ccc <_obstack_memory_used@@Base+0xeb08>  // b.tstop
  459cf0:	ldr	x8, [x21, #64]
  459cf4:	cmp	x8, #0x1
  459cf8:	b.lt	459d40 <_obstack_memory_used@@Base+0xeb7c>  // b.tstop
  459cfc:	ldr	x9, [x21, #8]
  459d00:	mov	x10, xzr
  459d04:	b	459d14 <_obstack_memory_used@@Base+0xeb50>
  459d08:	add	x10, x10, #0x1
  459d0c:	cmp	x10, x8
  459d10:	b.ge	459d40 <_obstack_memory_used@@Base+0xeb7c>  // b.tcont
  459d14:	ldr	w11, [x9, x10, lsl #2]
  459d18:	cmp	w11, w19
  459d1c:	b.hi	459d08 <_obstack_memory_used@@Base+0xeb44>  // b.pmore
  459d20:	ldr	x11, [x21, #16]
  459d24:	ldr	w11, [x11, x10, lsl #2]
  459d28:	cmp	w19, w11
  459d2c:	b.hi	459d08 <_obstack_memory_used@@Base+0xeb44>  // b.pmore
  459d30:	mov	w0, w20
  459d34:	ldrb	w8, [x21, #32]
  459d38:	tbz	w8, #0, 459d4c <_obstack_memory_used@@Base+0xeb88>
  459d3c:	b	459d5c <_obstack_memory_used@@Base+0xeb98>
  459d40:	mov	w0, wzr
  459d44:	ldrb	w8, [x21, #32]
  459d48:	tbnz	w8, #0, 459d5c <_obstack_memory_used@@Base+0xeb98>
  459d4c:	ldp	x20, x19, [sp, #32]
  459d50:	ldp	x22, x21, [sp, #16]
  459d54:	ldp	x29, x30, [sp], #48
  459d58:	ret
  459d5c:	cmp	w0, #0x0
  459d60:	b.le	459d78 <_obstack_memory_used@@Base+0xebb4>
  459d64:	mov	w0, wzr
  459d68:	ldp	x20, x19, [sp, #32]
  459d6c:	ldp	x22, x21, [sp, #16]
  459d70:	ldp	x29, x30, [sp], #48
  459d74:	ret
  459d78:	cmp	w20, #0x1
  459d7c:	csinc	w0, w20, wzr, gt
  459d80:	ldp	x20, x19, [sp, #32]
  459d84:	ldp	x22, x21, [sp, #16]
  459d88:	ldp	x29, x30, [sp], #48
  459d8c:	ret
  459d90:	mov	w19, wzr
  459d94:	ldr	x9, [x21, #40]
  459d98:	cmp	x9, #0x1
  459d9c:	b.ge	459c9c <_obstack_memory_used@@Base+0xead8>  // b.tcont
  459da0:	b	459cbc <_obstack_memory_used@@Base+0xeaf8>
  459da4:	ldr	x8, [x2, #8]
  459da8:	ldrb	w10, [x8, x3]
  459dac:	cmp	w10, #0xc2
  459db0:	b.cc	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.lo, b.ul, b.last
  459db4:	ldr	x9, [x2, #88]
  459db8:	add	x11, x3, #0x2
  459dbc:	cmp	x11, x9
  459dc0:	b.gt	459d64 <_obstack_memory_used@@Base+0xeba0>
  459dc4:	add	x11, x3, x8
  459dc8:	ldrb	w11, [x11, #1]
  459dcc:	cmp	w10, #0xdf
  459dd0:	b.hi	459dfc <_obstack_memory_used@@Base+0xec38>  // b.pmore
  459dd4:	sxtb	w8, w11
  459dd8:	cmp	w11, #0xbf
  459ddc:	mov	w9, #0xffffffff            	// #-1
  459de0:	ccmp	w8, w9, #0x0, ls  // ls = plast
  459de4:	mov	w8, #0x2                   	// #2
  459de8:	csel	w0, wzr, w8, gt
  459dec:	ldp	x20, x19, [sp, #32]
  459df0:	ldp	x22, x21, [sp, #16]
  459df4:	ldp	x29, x30, [sp], #48
  459df8:	ret
  459dfc:	cmp	w10, #0xef
  459e00:	b.hi	459e1c <_obstack_memory_used@@Base+0xec58>  // b.pmore
  459e04:	cmp	w10, #0xe0
  459e08:	mov	w10, #0x3                   	// #3
  459e0c:	b.ne	459e78 <_obstack_memory_used@@Base+0xecb4>  // b.any
  459e10:	cmp	w11, #0xa0
  459e14:	b.cc	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.lo, b.ul, b.last
  459e18:	b	459e78 <_obstack_memory_used@@Base+0xecb4>
  459e1c:	cmp	w10, #0xf7
  459e20:	b.hi	459e3c <_obstack_memory_used@@Base+0xec78>  // b.pmore
  459e24:	cmp	w10, #0xf0
  459e28:	mov	w10, #0x4                   	// #4
  459e2c:	b.ne	459e78 <_obstack_memory_used@@Base+0xecb4>  // b.any
  459e30:	cmp	w11, #0x90
  459e34:	b.cc	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.lo, b.ul, b.last
  459e38:	b	459e78 <_obstack_memory_used@@Base+0xecb4>
  459e3c:	cmp	w10, #0xfb
  459e40:	b.hi	459e5c <_obstack_memory_used@@Base+0xec98>  // b.pmore
  459e44:	cmp	w10, #0xf8
  459e48:	mov	w10, #0x5                   	// #5
  459e4c:	b.ne	459e78 <_obstack_memory_used@@Base+0xecb4>  // b.any
  459e50:	cmp	w11, #0x88
  459e54:	b.cc	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.lo, b.ul, b.last
  459e58:	b	459e78 <_obstack_memory_used@@Base+0xecb4>
  459e5c:	cmp	w10, #0xfd
  459e60:	b.hi	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.pmore
  459e64:	cmp	w10, #0xfc
  459e68:	mov	w10, #0x6                   	// #6
  459e6c:	b.ne	459e78 <_obstack_memory_used@@Base+0xecb4>  // b.any
  459e70:	cmp	w11, #0x84
  459e74:	b.cc	459d64 <_obstack_memory_used@@Base+0xeba0>  // b.lo, b.ul, b.last
  459e78:	add	x11, x10, x3
  459e7c:	cmp	x11, x9
  459e80:	b.gt	459d64 <_obstack_memory_used@@Base+0xeba0>
  459e84:	add	x8, x3, x8
  459e88:	sub	x9, x10, #0x1
  459e8c:	add	x8, x8, #0x1
  459e90:	ldrb	w11, [x8]
  459e94:	mov	w0, wzr
  459e98:	sxtb	w12, w11
  459e9c:	tbz	w12, #31, 459d4c <_obstack_memory_used@@Base+0xeb88>
  459ea0:	cmp	w11, #0xbf
  459ea4:	b.hi	459d4c <_obstack_memory_used@@Base+0xeb88>  // b.pmore
  459ea8:	subs	x9, x9, #0x1
  459eac:	add	x8, x8, #0x1
  459eb0:	b.ne	459e90 <_obstack_memory_used@@Base+0xeccc>  // b.any
  459eb4:	mov	w0, w10
  459eb8:	ldp	x20, x19, [sp, #32]
  459ebc:	ldp	x22, x21, [sp, #16]
  459ec0:	ldp	x29, x30, [sp], #48
  459ec4:	ret
  459ec8:	sub	sp, sp, #0x30
  459ecc:	stp	x29, x30, [sp, #16]
  459ed0:	ldr	w10, [x1, #8]
  459ed4:	str	x19, [sp, #32]
  459ed8:	add	x29, sp, #0x10
  459edc:	and	w8, w10, #0xff
  459ee0:	sub	w11, w8, #0x1
  459ee4:	cmp	w11, #0x6
  459ee8:	mov	w8, wzr
  459eec:	b.hi	45a050 <_obstack_memory_used@@Base+0xee8c>  // b.pmore
  459ef0:	ldr	x9, [x0, #8]
  459ef4:	adrp	x12, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  459ef8:	add	x12, x12, #0x43e
  459efc:	ldrb	w9, [x9, x2]
  459f00:	adr	x13, 459f10 <_obstack_memory_used@@Base+0xed4c>
  459f04:	ldrb	w14, [x12, x11]
  459f08:	add	x13, x13, x14, lsl #2
  459f0c:	br	x13
  459f10:	ldrb	w8, [x1]
  459f14:	cmp	w8, w9
  459f18:	b.eq	459f6c <_obstack_memory_used@@Base+0xeda8>  // b.none
  459f1c:	b	45a04c <_obstack_memory_used@@Base+0xee88>
  459f20:	ldr	x8, [x1]
  459f24:	lsr	x11, x9, #3
  459f28:	and	x11, x11, #0x18
  459f2c:	ldr	x8, [x8, x11]
  459f30:	lsr	x8, x8, x9
  459f34:	tbnz	w8, #0, 459f6c <_obstack_memory_used@@Base+0xeda8>
  459f38:	b	45a04c <_obstack_memory_used@@Base+0xee88>
  459f3c:	sxtb	w8, w9
  459f40:	tbnz	w8, #31, 45a04c <_obstack_memory_used@@Base+0xee88>
  459f44:	cbz	w9, 459f60 <_obstack_memory_used@@Base+0xed9c>
  459f48:	cmp	w9, #0xa
  459f4c:	b.ne	459f6c <_obstack_memory_used@@Base+0xeda8>  // b.any
  459f50:	ldr	x8, [x0, #152]
  459f54:	ldrb	w8, [x8, #216]
  459f58:	tbnz	w8, #6, 459f6c <_obstack_memory_used@@Base+0xeda8>
  459f5c:	b	45a04c <_obstack_memory_used@@Base+0xee88>
  459f60:	ldr	x8, [x0, #152]
  459f64:	ldrb	w8, [x8, #216]
  459f68:	tbnz	w8, #7, 45a04c <_obstack_memory_used@@Base+0xee88>
  459f6c:	tst	w10, #0x3ff00
  459f70:	b.eq	459fc0 <_obstack_memory_used@@Base+0xedfc>  // b.none
  459f74:	tbnz	x2, #63, 459fac <_obstack_memory_used@@Base+0xede8>
  459f78:	ldr	x8, [x0, #88]
  459f7c:	cmp	x8, x2
  459f80:	b.eq	45a084 <_obstack_memory_used@@Base+0xeec0>  // b.none
  459f84:	ldr	w8, [x0, #144]
  459f88:	cmp	w8, #0x2
  459f8c:	b.lt	459fc8 <_obstack_memory_used@@Base+0xee04>  // b.tstop
  459f90:	ldr	x9, [x0, #16]
  459f94:	ldr	w8, [x9, x2, lsl #2]
  459f98:	cmn	w8, #0x1
  459f9c:	b.ne	459fec <_obstack_memory_used@@Base+0xee28>  // b.any
  459fa0:	cmp	x2, #0x0
  459fa4:	sub	x2, x2, #0x1
  459fa8:	b.gt	459f94 <_obstack_memory_used@@Base+0xedd0>
  459fac:	ldr	w11, [x0, #112]
  459fb0:	tst	w11, #0x1
  459fb4:	cset	w12, eq  // eq = none
  459fb8:	tbnz	w10, #10, 45a034 <_obstack_memory_used@@Base+0xee70>
  459fbc:	b	45a038 <_obstack_memory_used@@Base+0xee74>
  459fc0:	mov	w8, #0x1                   	// #1
  459fc4:	b	45a050 <_obstack_memory_used@@Base+0xee8c>
  459fc8:	ldr	x8, [x0, #128]
  459fcc:	lsr	x11, x9, #3
  459fd0:	and	x11, x11, #0x18
  459fd4:	ldr	x8, [x8, x11]
  459fd8:	lsr	x8, x8, x9
  459fdc:	tbz	w8, #0, 45a01c <_obstack_memory_used@@Base+0xee58>
  459fe0:	mov	w12, wzr
  459fe4:	mov	w11, #0x1                   	// #1
  459fe8:	b	45a038 <_obstack_memory_used@@Base+0xee74>
  459fec:	ldrb	w9, [x0, #142]
  459ff0:	cbnz	w9, 45a0a4 <_obstack_memory_used@@Base+0xeee0>
  459ff4:	cmp	w8, #0xa
  459ff8:	b.ne	45a024 <_obstack_memory_used@@Base+0xee60>  // b.any
  459ffc:	ldrb	w8, [x0, #141]
  45a000:	cmp	w8, #0x0
  45a004:	cset	w8, ne  // ne = any
  45a008:	lsl	w11, w8, #1
  45a00c:	tst	w11, #0x1
  45a010:	cset	w12, eq  // eq = none
  45a014:	tbnz	w10, #10, 45a034 <_obstack_memory_used@@Base+0xee70>
  45a018:	b	45a038 <_obstack_memory_used@@Base+0xee74>
  45a01c:	cmp	w9, #0xa
  45a020:	b.eq	459ffc <_obstack_memory_used@@Base+0xee38>  // b.none
  45a024:	mov	w11, wzr
  45a028:	tst	w11, #0x1
  45a02c:	cset	w12, eq  // eq = none
  45a030:	tbz	w10, #10, 45a038 <_obstack_memory_used@@Base+0xee74>
  45a034:	tbz	w11, #0, 45a04c <_obstack_memory_used@@Base+0xee88>
  45a038:	ldr	w8, [x1, #8]
  45a03c:	tbnz	w12, #0, 45a044 <_obstack_memory_used@@Base+0xee80>
  45a040:	tbnz	w8, #11, 45a04c <_obstack_memory_used@@Base+0xee88>
  45a044:	tbnz	w11, #1, 45a064 <_obstack_memory_used@@Base+0xeea0>
  45a048:	tbz	w8, #13, 45a064 <_obstack_memory_used@@Base+0xeea0>
  45a04c:	mov	w8, wzr
  45a050:	mov	w0, w8
  45a054:	ldr	x19, [sp, #32]
  45a058:	ldp	x29, x30, [sp, #16]
  45a05c:	add	sp, sp, #0x30
  45a060:	ret
  45a064:	tst	w8, #0x8000
  45a068:	cset	w8, eq  // eq = none
  45a06c:	and	w9, w11, #0x8
  45a070:	orr	w0, w8, w9, lsr #3
  45a074:	ldr	x19, [sp, #32]
  45a078:	ldp	x29, x30, [sp, #16]
  45a07c:	add	sp, sp, #0x30
  45a080:	ret
  45a084:	ldr	w8, [x0, #160]
  45a088:	mov	w9, #0xa                   	// #10
  45a08c:	and	w8, w8, #0x2
  45a090:	eor	w11, w8, w9
  45a094:	tst	w11, #0x1
  45a098:	cset	w12, eq  // eq = none
  45a09c:	tbnz	w10, #10, 45a034 <_obstack_memory_used@@Base+0xee70>
  45a0a0:	b	45a038 <_obstack_memory_used@@Base+0xee74>
  45a0a4:	str	x0, [sp]
  45a0a8:	mov	w0, w8
  45a0ac:	stur	w10, [x29, #-4]
  45a0b0:	str	x1, [x29, #24]
  45a0b4:	mov	w19, w8
  45a0b8:	bl	404880 <iswalnum@plt>
  45a0bc:	mov	w12, wzr
  45a0c0:	cmp	w19, #0x5f
  45a0c4:	mov	w11, #0x1                   	// #1
  45a0c8:	b.eq	45a0e8 <_obstack_memory_used@@Base+0xef24>  // b.none
  45a0cc:	mov	w9, w0
  45a0d0:	ldr	x1, [x29, #24]
  45a0d4:	ldr	x0, [sp]
  45a0d8:	ldur	w10, [x29, #-4]
  45a0dc:	mov	w8, w19
  45a0e0:	cbz	w9, 459ff4 <_obstack_memory_used@@Base+0xee30>
  45a0e4:	b	45a038 <_obstack_memory_used@@Base+0xee74>
  45a0e8:	ldr	x1, [x29, #24]
  45a0ec:	b	45a038 <_obstack_memory_used@@Base+0xee74>
  45a0f0:	sub	sp, sp, #0xd0
  45a0f4:	stp	x29, x30, [sp, #112]
  45a0f8:	stp	x28, x27, [sp, #128]
  45a0fc:	stp	x26, x25, [sp, #144]
  45a100:	stp	x24, x23, [sp, #160]
  45a104:	stp	x22, x21, [sp, #176]
  45a108:	stp	x20, x19, [sp, #192]
  45a10c:	ldp	x19, x21, [x1, #16]
  45a110:	mov	w8, #0x1                   	// #1
  45a114:	add	x29, sp, #0x70
  45a118:	mov	x22, x0
  45a11c:	dup	v0.2d, x8
  45a120:	mov	w0, #0x8                   	// #8
  45a124:	mov	x20, x1
  45a128:	stur	q0, [x29, #-32]
  45a12c:	bl	404210 <malloc@plt>
  45a130:	stur	x0, [x29, #-16]
  45a134:	cbz	x0, 45a6fc <_obstack_memory_used@@Base+0xf538>
  45a138:	str	x19, [x0]
  45a13c:	sub	x3, x29, #0x20
  45a140:	mov	x0, x22
  45a144:	mov	x1, x20
  45a148:	mov	x2, x21
  45a14c:	stp	x22, x20, [x29, #-48]
  45a150:	bl	45a710 <_obstack_memory_used@@Base+0xf54c>
  45a154:	cbnz	w0, 45a6f4 <_obstack_memory_used@@Base+0xf530>
  45a158:	mov	w8, #0x1                   	// #1
  45a15c:	mov	w10, wzr
  45a160:	dup	v0.2d, x8
  45a164:	mov	w28, #0x28                  	// #40
  45a168:	str	q0, [sp]
  45a16c:	b	45a18c <_obstack_memory_used@@Base+0xefc8>
  45a170:	sub	x3, x29, #0x20
  45a174:	mov	x0, x15
  45a178:	mov	x1, x14
  45a17c:	mov	x2, x21
  45a180:	bl	45a710 <_obstack_memory_used@@Base+0xf54c>
  45a184:	ldr	w10, [sp, #20]
  45a188:	cbnz	w0, 45a6f4 <_obstack_memory_used@@Base+0xf530>
  45a18c:	mov	x11, x21
  45a190:	subs	x21, x21, #0x1
  45a194:	b.lt	45a69c <_obstack_memory_used@@Base+0xf4d8>  // b.tstop
  45a198:	ldp	x15, x14, [x29, #-48]
  45a19c:	ldr	x0, [x14]
  45a1a0:	ldr	w9, [x15, #224]
  45a1a4:	ldr	x8, [x0, x11, lsl #3]
  45a1a8:	cmp	x8, #0x0
  45a1ac:	csinc	w10, wzr, w10, ne  // ne = any
  45a1b0:	cmp	w10, w9
  45a1b4:	b.gt	45a6ac <_obstack_memory_used@@Base+0xf4e8>
  45a1b8:	stur	xzr, [x29, #-24]
  45a1bc:	ldr	x8, [x15, #184]
  45a1c0:	str	w10, [sp, #20]
  45a1c4:	ldr	x9, [x8, x21, lsl #3]
  45a1c8:	cbz	x9, 45a170 <_obstack_memory_used@@Base+0xefac>
  45a1cc:	ldr	x8, [x9, #40]
  45a1d0:	cmp	x8, #0x1
  45a1d4:	b.lt	45a170 <_obstack_memory_used@@Base+0xefac>  // b.tstop
  45a1d8:	ldr	x8, [x15, #152]
  45a1dc:	mov	x22, xzr
  45a1e0:	str	x9, [sp, #32]
  45a1e4:	stp	x11, x8, [sp, #48]
  45a1e8:	b	45a228 <_obstack_memory_used@@Base+0xf064>
  45a1ec:	ldur	x9, [x29, #-32]
  45a1f0:	cbz	x9, 45a45c <_obstack_memory_used@@Base+0xf298>
  45a1f4:	ldur	x8, [x29, #-24]
  45a1f8:	ldr	x19, [sp, #40]
  45a1fc:	cbnz	x8, 45a604 <_obstack_memory_used@@Base+0xf440>
  45a200:	ldur	x8, [x29, #-16]
  45a204:	str	x19, [x8]
  45a208:	ldur	x8, [x29, #-24]
  45a20c:	add	x8, x8, #0x1
  45a210:	stur	x8, [x29, #-24]
  45a214:	ldr	x9, [sp, #32]
  45a218:	add	x22, x22, #0x1
  45a21c:	ldr	x8, [x9, #40]
  45a220:	cmp	x22, x8
  45a224:	b.ge	45a170 <_obstack_memory_used@@Base+0xefac>  // b.tcont
  45a228:	ldr	x8, [x9, #48]
  45a22c:	ldr	x20, [x8, x22, lsl #3]
  45a230:	ldr	x8, [sp, #56]
  45a234:	ldr	x8, [x8]
  45a238:	add	x8, x8, x20, lsl #4
  45a23c:	ldrb	w8, [x8, #10]
  45a240:	tbnz	w8, #4, 45a2d8 <_obstack_memory_used@@Base+0xf114>
  45a244:	ldr	x8, [sp, #56]
  45a248:	mov	x0, x15
  45a24c:	mov	x2, x21
  45a250:	mov	x19, x20
  45a254:	ldr	x8, [x8]
  45a258:	add	x1, x8, x20, lsl #4
  45a25c:	bl	459ec8 <_obstack_memory_used@@Base+0xed04>
  45a260:	ldr	x16, [sp, #48]
  45a264:	ldp	x15, x14, [x29, #-48]
  45a268:	tbz	w0, #0, 45a214 <_obstack_memory_used@@Base+0xf050>
  45a26c:	ldr	x8, [x14]
  45a270:	ldr	x9, [x8, x16, lsl #3]
  45a274:	cbz	x9, 45a214 <_obstack_memory_used@@Base+0xf050>
  45a278:	ldr	x8, [x9, #16]
  45a27c:	subs	x10, x8, #0x1
  45a280:	b.lt	45a214 <_obstack_memory_used@@Base+0xf050>  // b.tstop
  45a284:	ldr	x8, [sp, #56]
  45a288:	ldr	x9, [x9, #24]
  45a28c:	mov	x11, x19
  45a290:	mov	x11, xzr
  45a294:	ldr	x8, [x8, #24]
  45a298:	ldr	x8, [x8, x19, lsl #3]
  45a29c:	b.eq	45a2c0 <_obstack_memory_used@@Base+0xf0fc>  // b.none
  45a2a0:	add	x12, x11, x10
  45a2a4:	lsr	x12, x12, #1
  45a2a8:	ldr	x13, [x9, x12, lsl #3]
  45a2ac:	cmp	x13, x8
  45a2b0:	csinc	x11, x11, x12, ge  // ge = tcont
  45a2b4:	csel	x10, x10, x12, lt  // lt = tstop
  45a2b8:	cmp	x11, x10
  45a2bc:	b.cc	45a2a0 <_obstack_memory_used@@Base+0xf0dc>  // b.lo, b.ul, b.last
  45a2c0:	ldr	x9, [x9, x11, lsl #3]
  45a2c4:	cmp	x9, x8
  45a2c8:	b.ne	45a214 <_obstack_memory_used@@Base+0xf050>  // b.any
  45a2cc:	mov	w0, #0x1                   	// #1
  45a2d0:	mov	x20, x19
  45a2d4:	b	45a388 <_obstack_memory_used@@Base+0xf1c4>
  45a2d8:	ldr	x23, [x15, #152]
  45a2dc:	ldr	x19, [x14, #24]
  45a2e0:	mov	x1, x20
  45a2e4:	mov	x2, x15
  45a2e8:	mov	x0, x23
  45a2ec:	mov	x3, x21
  45a2f0:	bl	459b50 <_obstack_memory_used@@Base+0xe98c>
  45a2f4:	cmp	w0, #0x1
  45a2f8:	b.lt	45a314 <_obstack_memory_used@@Base+0xf150>  // b.tstop
  45a2fc:	add	x8, x21, w0, uxtw
  45a300:	cmp	x8, x19
  45a304:	b.le	45a324 <_obstack_memory_used@@Base+0xf160>
  45a308:	ldp	x15, x14, [x29, #-48]
  45a30c:	ldr	x16, [sp, #48]
  45a310:	b	45a388 <_obstack_memory_used@@Base+0xf1c4>
  45a314:	ldp	x15, x14, [x29, #-48]
  45a318:	ldr	x16, [sp, #48]
  45a31c:	cbnz	w0, 45a388 <_obstack_memory_used@@Base+0xf1c4>
  45a320:	b	45a244 <_obstack_memory_used@@Base+0xf080>
  45a324:	ldp	x15, x14, [x29, #-48]
  45a328:	ldr	x16, [sp, #48]
  45a32c:	ldr	x9, [x14]
  45a330:	ldr	x9, [x9, x8, lsl #3]
  45a334:	cbz	x9, 45a244 <_obstack_memory_used@@Base+0xf080>
  45a338:	ldr	x8, [x9, #16]
  45a33c:	subs	x10, x8, #0x1
  45a340:	b.lt	45a244 <_obstack_memory_used@@Base+0xf080>  // b.tstop
  45a344:	ldr	x8, [x23, #24]
  45a348:	ldr	x9, [x9, #24]
  45a34c:	mov	x11, xzr
  45a350:	ldr	x8, [x8, x20, lsl #3]
  45a354:	b.eq	45a378 <_obstack_memory_used@@Base+0xf1b4>  // b.none
  45a358:	add	x12, x11, x10
  45a35c:	lsr	x12, x12, #1
  45a360:	ldr	x13, [x9, x12, lsl #3]
  45a364:	cmp	x13, x8
  45a368:	csinc	x11, x11, x12, ge  // ge = tcont
  45a36c:	csel	x10, x10, x12, lt  // lt = tstop
  45a370:	cmp	x11, x10
  45a374:	b.cc	45a358 <_obstack_memory_used@@Base+0xf194>  // b.lo, b.ul, b.last
  45a378:	cbz	w0, 45a244 <_obstack_memory_used@@Base+0xf080>
  45a37c:	ldr	x9, [x9, x11, lsl #3]
  45a380:	cmp	x9, x8
  45a384:	b.ne	45a244 <_obstack_memory_used@@Base+0xf080>  // b.any
  45a388:	ldr	x8, [x14, #40]
  45a38c:	str	x20, [sp, #40]
  45a390:	cbz	x8, 45a1ec <_obstack_memory_used@@Base+0xf028>
  45a394:	ldr	x9, [sp, #56]
  45a398:	ldr	x11, [sp, #40]
  45a39c:	add	x23, x21, w0, sxtw
  45a3a0:	mov	x24, xzr
  45a3a4:	ldr	x10, [x9, #24]
  45a3a8:	ldr	x9, [x15, #200]
  45a3ac:	ldr	x10, [x10, x11, lsl #3]
  45a3b0:	cmp	x9, #0x1
  45a3b4:	str	x10, [sp, #24]
  45a3b8:	b.lt	45a3f0 <_obstack_memory_used@@Base+0xf22c>  // b.tstop
  45a3bc:	ldr	x10, [x15, #216]
  45a3c0:	mov	x11, x9
  45a3c4:	add	x12, x11, x24
  45a3c8:	cmp	x12, #0x0
  45a3cc:	cinc	x12, x12, lt  // lt = tstop
  45a3d0:	asr	x12, x12, #1
  45a3d4:	madd	x13, x12, x28, x10
  45a3d8:	ldr	x13, [x13, #8]
  45a3dc:	cmp	x13, x23
  45a3e0:	csel	x11, x11, x12, lt  // lt = tstop
  45a3e4:	csinc	x24, x24, x12, ge  // ge = tcont
  45a3e8:	cmp	x24, x11
  45a3ec:	b.lt	45a3c4 <_obstack_memory_used@@Base+0xf200>  // b.tstop
  45a3f0:	cmp	x24, x9
  45a3f4:	b.ge	45a40c <_obstack_memory_used@@Base+0xf248>  // b.tcont
  45a3f8:	ldr	x10, [x15, #216]
  45a3fc:	madd	x10, x24, x28, x10
  45a400:	ldr	x10, [x10, #8]
  45a404:	cmp	x10, x23
  45a408:	b.eq	45a410 <_obstack_memory_used@@Base+0xf24c>  // b.none
  45a40c:	mov	x24, #0xffffffffffffffff    	// #-1
  45a410:	cmp	x9, #0x1
  45a414:	b.lt	45a484 <_obstack_memory_used@@Base+0xf2c0>  // b.tstop
  45a418:	ldr	x10, [x15, #216]
  45a41c:	mov	x25, xzr
  45a420:	mov	x11, x9
  45a424:	add	x12, x11, x25
  45a428:	cmp	x12, #0x0
  45a42c:	cinc	x12, x12, lt  // lt = tstop
  45a430:	asr	x12, x12, #1
  45a434:	madd	x13, x12, x28, x10
  45a438:	ldr	x13, [x13, #8]
  45a43c:	cmp	x13, x21
  45a440:	csel	x11, x11, x12, lt  // lt = tstop
  45a444:	csinc	x25, x25, x12, ge  // ge = tcont
  45a448:	cmp	x25, x11
  45a44c:	b.lt	45a424 <_obstack_memory_used@@Base+0xf260>  // b.tstop
  45a450:	cmp	x25, x9
  45a454:	b.lt	45a490 <_obstack_memory_used@@Base+0xf2cc>  // b.tstop
  45a458:	b	45a4a4 <_obstack_memory_used@@Base+0xf2e0>
  45a45c:	ldr	q0, [sp]
  45a460:	mov	w0, #0x8                   	// #8
  45a464:	stur	q0, [x29, #-32]
  45a468:	bl	404210 <malloc@plt>
  45a46c:	ldr	x8, [sp, #40]
  45a470:	stur	x0, [x29, #-16]
  45a474:	cbz	x0, 45a6e8 <_obstack_memory_used@@Base+0xf524>
  45a478:	ldp	x15, x14, [x29, #-48]
  45a47c:	str	x8, [x0]
  45a480:	b	45a214 <_obstack_memory_used@@Base+0xf050>
  45a484:	mov	x25, xzr
  45a488:	cmp	x25, x9
  45a48c:	b.ge	45a4a4 <_obstack_memory_used@@Base+0xf2e0>  // b.tcont
  45a490:	ldr	x9, [x15, #216]
  45a494:	madd	x9, x25, x28, x9
  45a498:	ldr	x9, [x9, #8]
  45a49c:	cmp	x9, x21
  45a4a0:	b.eq	45a4a8 <_obstack_memory_used@@Base+0xf2e4>  // b.none
  45a4a4:	mov	x25, #0xffffffffffffffff    	// #-1
  45a4a8:	cmp	x8, #0x1
  45a4ac:	b.lt	45a1ec <_obstack_memory_used@@Base+0xf028>  // b.tstop
  45a4b0:	ldr	x20, [x15, #152]
  45a4b4:	mov	x19, xzr
  45a4b8:	ldr	x8, [x14, #48]
  45a4bc:	ldr	x9, [x15, #216]
  45a4c0:	ldr	x12, [x20]
  45a4c4:	ldr	x8, [x8, x19, lsl #3]
  45a4c8:	madd	x10, x8, x28, x9
  45a4cc:	ldr	x11, [x10]
  45a4d0:	ldr	x10, [x10, #16]
  45a4d4:	lsl	x11, x11, #4
  45a4d8:	ldr	x26, [x12, x11]
  45a4dc:	cmp	x10, x23
  45a4e0:	b.le	45a4f4 <_obstack_memory_used@@Base+0xf330>
  45a4e4:	mov	w27, #0xffffffff            	// #-1
  45a4e8:	cmp	x10, x16
  45a4ec:	b.lt	45a568 <_obstack_memory_used@@Base+0xf3a4>  // b.tstop
  45a4f0:	b	45a5d4 <_obstack_memory_used@@Base+0xf410>
  45a4f4:	madd	x11, x8, x28, x9
  45a4f8:	ldr	x11, [x11, #24]
  45a4fc:	cmp	x11, x23
  45a500:	b.ge	45a514 <_obstack_memory_used@@Base+0xf350>  // b.tcont
  45a504:	mov	w27, #0x1                   	// #1
  45a508:	cmp	x10, x16
  45a50c:	b.lt	45a568 <_obstack_memory_used@@Base+0xf3a4>  // b.tstop
  45a510:	b	45a5d4 <_obstack_memory_used@@Base+0xf410>
  45a514:	cmp	x10, x23
  45a518:	cset	w1, eq  // eq = none
  45a51c:	cmp	x11, x23
  45a520:	cset	w11, eq  // eq = none
  45a524:	bfi	w1, w11, #1, #1
  45a528:	cbz	w1, 45a5c8 <_obstack_memory_used@@Base+0xf404>
  45a52c:	ldr	x3, [sp, #24]
  45a530:	mov	x0, x15
  45a534:	mov	x2, x26
  45a538:	mov	x4, x24
  45a53c:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45a540:	ldp	x15, x14, [x29, #-48]
  45a544:	ldr	x16, [sp, #48]
  45a548:	mov	w27, w0
  45a54c:	ldr	x8, [x14, #48]
  45a550:	ldr	x9, [x15, #216]
  45a554:	ldr	x8, [x8, x19, lsl #3]
  45a558:	madd	x10, x8, x28, x9
  45a55c:	ldr	x10, [x10, #16]
  45a560:	cmp	x10, x16
  45a564:	b.ge	45a5d4 <_obstack_memory_used@@Base+0xf410>  // b.tcont
  45a568:	madd	x8, x8, x28, x9
  45a56c:	ldr	x8, [x8, #24]
  45a570:	cmp	x8, x21
  45a574:	b.ge	45a588 <_obstack_memory_used@@Base+0xf3c4>  // b.tcont
  45a578:	mov	w0, #0x1                   	// #1
  45a57c:	cmp	w0, w27
  45a580:	b.eq	45a5e0 <_obstack_memory_used@@Base+0xf41c>  // b.none
  45a584:	b	45a214 <_obstack_memory_used@@Base+0xf050>
  45a588:	cmp	x10, x21
  45a58c:	cset	w1, eq  // eq = none
  45a590:	cmp	x8, x21
  45a594:	cset	w8, eq  // eq = none
  45a598:	bfi	w1, w8, #1, #1
  45a59c:	cbz	w1, 45a5f4 <_obstack_memory_used@@Base+0xf430>
  45a5a0:	ldr	x3, [sp, #40]
  45a5a4:	mov	x0, x15
  45a5a8:	mov	x2, x26
  45a5ac:	mov	x4, x25
  45a5b0:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45a5b4:	ldr	x16, [sp, #48]
  45a5b8:	ldp	x15, x14, [x29, #-48]
  45a5bc:	cmp	w0, w27
  45a5c0:	b.eq	45a5e0 <_obstack_memory_used@@Base+0xf41c>  // b.none
  45a5c4:	b	45a214 <_obstack_memory_used@@Base+0xf050>
  45a5c8:	mov	w27, wzr
  45a5cc:	cmp	x10, x16
  45a5d0:	b.lt	45a568 <_obstack_memory_used@@Base+0xf3a4>  // b.tstop
  45a5d4:	mov	w0, #0xffffffff            	// #-1
  45a5d8:	cmp	w0, w27
  45a5dc:	b.ne	45a214 <_obstack_memory_used@@Base+0xf050>  // b.any
  45a5e0:	ldr	x8, [x14, #40]
  45a5e4:	add	x19, x19, #0x1
  45a5e8:	cmp	x19, x8
  45a5ec:	b.lt	45a4b8 <_obstack_memory_used@@Base+0xf2f4>  // b.tstop
  45a5f0:	b	45a1ec <_obstack_memory_used@@Base+0xf028>
  45a5f4:	mov	w0, wzr
  45a5f8:	cmp	w0, w27
  45a5fc:	b.eq	45a5e0 <_obstack_memory_used@@Base+0xf41c>  // b.none
  45a600:	b	45a214 <_obstack_memory_used@@Base+0xf050>
  45a604:	cmp	x9, x8
  45a608:	b.ne	45a634 <_obstack_memory_used@@Base+0xf470>  // b.any
  45a60c:	ldur	x0, [x29, #-16]
  45a610:	lsl	x8, x9, #1
  45a614:	lsl	x1, x9, #4
  45a618:	stur	x8, [x29, #-32]
  45a61c:	bl	404450 <realloc@plt>
  45a620:	cbz	x0, 45a708 <_obstack_memory_used@@Base+0xf544>
  45a624:	ldur	x8, [x29, #-24]
  45a628:	ldp	x15, x14, [x29, #-48]
  45a62c:	stur	x0, [x29, #-16]
  45a630:	b	45a638 <_obstack_memory_used@@Base+0xf474>
  45a634:	ldur	x0, [x29, #-16]
  45a638:	ldr	x9, [x0]
  45a63c:	cmp	x9, x19
  45a640:	b.le	45a66c <_obstack_memory_used@@Base+0xf4a8>
  45a644:	cmp	x8, #0x1
  45a648:	b.lt	45a694 <_obstack_memory_used@@Base+0xf4d0>  // b.tstop
  45a64c:	mov	x9, x8
  45a650:	add	x10, x0, x9, lsl #3
  45a654:	ldur	x11, [x10, #-8]
  45a658:	subs	x8, x9, #0x1
  45a65c:	mov	x9, x8
  45a660:	str	x11, [x10]
  45a664:	b.gt	45a650 <_obstack_memory_used@@Base+0xf48c>
  45a668:	b	45a694 <_obstack_memory_used@@Base+0xf4d0>
  45a66c:	add	x9, x0, x8, lsl #3
  45a670:	ldur	x9, [x9, #-8]
  45a674:	cmp	x9, x19
  45a678:	b.le	45a694 <_obstack_memory_used@@Base+0xf4d0>
  45a67c:	add	x10, x0, x8, lsl #3
  45a680:	str	x9, [x10]
  45a684:	ldur	x9, [x10, #-16]
  45a688:	sub	x8, x8, #0x1
  45a68c:	cmp	x9, x19
  45a690:	b.gt	45a67c <_obstack_memory_used@@Base+0xf4b8>
  45a694:	str	x19, [x0, x8, lsl #3]
  45a698:	b	45a208 <_obstack_memory_used@@Base+0xf044>
  45a69c:	mov	w22, wzr
  45a6a0:	ldur	x0, [x29, #-16]
  45a6a4:	bl	4046b0 <free@plt>
  45a6a8:	b	45a6c4 <_obstack_memory_used@@Base+0xf500>
  45a6ac:	lsl	x2, x11, #3
  45a6b0:	mov	w1, wzr
  45a6b4:	bl	404320 <memset@plt>
  45a6b8:	ldur	x0, [x29, #-16]
  45a6bc:	bl	4046b0 <free@plt>
  45a6c0:	mov	w22, wzr
  45a6c4:	mov	w0, w22
  45a6c8:	ldp	x20, x19, [sp, #192]
  45a6cc:	ldp	x22, x21, [sp, #176]
  45a6d0:	ldp	x24, x23, [sp, #160]
  45a6d4:	ldp	x26, x25, [sp, #144]
  45a6d8:	ldp	x28, x27, [sp, #128]
  45a6dc:	ldp	x29, x30, [sp, #112]
  45a6e0:	add	sp, sp, #0xd0
  45a6e4:	ret
  45a6e8:	stp	xzr, xzr, [x29, #-32]
  45a6ec:	mov	w22, #0xc                   	// #12
  45a6f0:	b	45a6a0 <_obstack_memory_used@@Base+0xf4dc>
  45a6f4:	mov	w22, w0
  45a6f8:	b	45a6a0 <_obstack_memory_used@@Base+0xf4dc>
  45a6fc:	stp	xzr, xzr, [x29, #-32]
  45a700:	mov	w22, #0xc                   	// #12
  45a704:	b	45a6c4 <_obstack_memory_used@@Base+0xf500>
  45a708:	mov	w22, #0xc                   	// #12
  45a70c:	b	45a6a0 <_obstack_memory_used@@Base+0xf4dc>
  45a710:	sub	sp, sp, #0x150
  45a714:	stp	x29, x30, [sp, #240]
  45a718:	stp	x28, x27, [sp, #256]
  45a71c:	stp	x26, x25, [sp, #272]
  45a720:	stp	x24, x23, [sp, #288]
  45a724:	stp	x22, x21, [sp, #304]
  45a728:	stp	x20, x19, [sp, #320]
  45a72c:	add	x29, sp, #0xf0
  45a730:	ldr	x24, [x0, #152]
  45a734:	stur	wzr, [x29, #-100]
  45a738:	ldr	x8, [x0, #184]
  45a73c:	stur	x2, [x29, #-112]
  45a740:	ldr	x21, [x8, x2, lsl #3]
  45a744:	ldr	x8, [x3, #8]
  45a748:	stp	x0, x1, [sp, #112]
  45a74c:	add	x9, x21, #0x8
  45a750:	cmp	x21, #0x0
  45a754:	csel	x27, xzr, x9, eq  // eq = none
  45a758:	cbz	x8, 45aa90 <_obstack_memory_used@@Base+0xf8cc>
  45a75c:	mov	x23, x3
  45a760:	cbz	x21, 45aaa8 <_obstack_memory_used@@Base+0xf8e4>
  45a764:	sub	x0, x29, #0x60
  45a768:	mov	x1, x24
  45a76c:	mov	x2, x23
  45a770:	stur	wzr, [x29, #-96]
  45a774:	bl	4598c8 <_obstack_memory_used@@Base+0xe704>
  45a778:	ldur	w26, [x29, #-96]
  45a77c:	cbnz	w26, 45b2d0 <_obstack_memory_used@@Base+0x1010c>
  45a780:	mov	x22, x0
  45a784:	ldr	x8, [x22, #56]!
  45a788:	mov	x25, x0
  45a78c:	cbnz	x8, 45a7fc <_obstack_memory_used@@Base+0xf638>
  45a790:	ldr	x8, [x23, #8]
  45a794:	lsl	x0, x8, #3
  45a798:	stp	x8, xzr, [x25, #56]
  45a79c:	bl	404210 <malloc@plt>
  45a7a0:	cmp	x0, #0x0
  45a7a4:	mov	w26, #0xc                   	// #12
  45a7a8:	csel	w8, w26, wzr, eq  // eq = none
  45a7ac:	str	x0, [x25, #72]
  45a7b0:	stur	w8, [x29, #-96]
  45a7b4:	cbz	x0, 45b2d0 <_obstack_memory_used@@Base+0x1010c>
  45a7b8:	ldr	x8, [x23, #8]
  45a7bc:	cmp	x8, #0x1
  45a7c0:	b.lt	45a7fc <_obstack_memory_used@@Base+0xf638>  // b.tstop
  45a7c4:	mov	x19, xzr
  45a7c8:	mov	w20, #0x18                  	// #24
  45a7cc:	ldr	x8, [x23, #16]
  45a7d0:	ldr	x9, [x24, #56]
  45a7d4:	mov	x0, x22
  45a7d8:	ldr	x8, [x8, x19, lsl #3]
  45a7dc:	madd	x1, x8, x20, x9
  45a7e0:	bl	4553b8 <_obstack_memory_used@@Base+0xa1f4>
  45a7e4:	cbnz	w0, 45b2c8 <_obstack_memory_used@@Base+0x10104>
  45a7e8:	ldr	x8, [x23, #8]
  45a7ec:	add	x19, x19, #0x1
  45a7f0:	cmp	x19, x8
  45a7f4:	b.lt	45a7cc <_obstack_memory_used@@Base+0xf608>  // b.tstop
  45a7f8:	stur	wzr, [x29, #-96]
  45a7fc:	mov	x0, x23
  45a800:	mov	x1, x27
  45a804:	mov	x2, x22
  45a808:	bl	45b300 <_obstack_memory_used@@Base+0x1013c>
  45a80c:	stur	w0, [x29, #-100]
  45a810:	cbnz	w0, 45b2e0 <_obstack_memory_used@@Base+0x1011c>
  45a814:	ldr	x15, [sp, #120]
  45a818:	ldr	x8, [x15, #40]
  45a81c:	cbz	x8, 45aaa8 <_obstack_memory_used@@Base+0xf8e4>
  45a820:	ldur	x14, [x29, #-112]
  45a824:	cmp	x8, #0x1
  45a828:	b.lt	45aaa4 <_obstack_memory_used@@Base+0xf8e0>  // b.tstop
  45a82c:	ldr	x8, [sp, #112]
  45a830:	mov	x20, xzr
  45a834:	mov	w25, #0x18                  	// #24
  45a838:	ldr	x22, [x8, #216]
  45a83c:	b	45a850 <_obstack_memory_used@@Base+0xf68c>
  45a840:	ldr	x8, [x15, #40]
  45a844:	add	x20, x20, #0x1
  45a848:	cmp	x20, x8
  45a84c:	b.ge	45aaa4 <_obstack_memory_used@@Base+0xf8e0>  // b.tcont
  45a850:	ldr	x8, [x15, #48]
  45a854:	mov	w9, #0x28                  	// #40
  45a858:	ldr	x8, [x8, x20, lsl #3]
  45a85c:	madd	x9, x8, x9, x22
  45a860:	ldr	x9, [x9, #16]
  45a864:	cmp	x9, x14
  45a868:	b.ge	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tcont
  45a86c:	mov	w9, #0x28                  	// #40
  45a870:	madd	x9, x8, x9, x22
  45a874:	ldr	x9, [x9, #8]
  45a878:	cmp	x9, x14
  45a87c:	b.lt	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tstop
  45a880:	mov	w9, #0x28                  	// #40
  45a884:	madd	x8, x8, x9, x22
  45a888:	ldr	x10, [x8]
  45a88c:	ldr	x9, [x24]
  45a890:	ldr	x11, [x8, #24]
  45a894:	lsl	x8, x10, #4
  45a898:	ldr	x19, [x9, x8]
  45a89c:	ldr	x8, [x23, #8]
  45a8a0:	cmp	x11, x14
  45a8a4:	b.ne	45a90c <_obstack_memory_used@@Base+0xf748>  // b.any
  45a8a8:	cmp	x8, #0x1
  45a8ac:	b.lt	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tstop
  45a8b0:	ldr	x10, [x23, #16]
  45a8b4:	mov	x28, #0xffffffffffffffff    	// #-1
  45a8b8:	mov	x1, #0xffffffffffffffff    	// #-1
  45a8bc:	b	45a8dc <_obstack_memory_used@@Base+0xf718>
  45a8c0:	lsl	x12, x11, #4
  45a8c4:	ldr	x12, [x9, x12]
  45a8c8:	cmp	x19, x12
  45a8cc:	csel	x28, x11, x28, eq  // eq = none
  45a8d0:	subs	x8, x8, #0x1
  45a8d4:	add	x10, x10, #0x8
  45a8d8:	b.eq	45a97c <_obstack_memory_used@@Base+0xf7b8>  // b.none
  45a8dc:	ldr	x11, [x10]
  45a8e0:	add	x12, x9, x11, lsl #4
  45a8e4:	ldrb	w12, [x12, #8]
  45a8e8:	cmp	w12, #0x9
  45a8ec:	b.eq	45a8c0 <_obstack_memory_used@@Base+0xf6fc>  // b.none
  45a8f0:	cmp	w12, #0x8
  45a8f4:	b.ne	45a8d0 <_obstack_memory_used@@Base+0xf70c>  // b.any
  45a8f8:	lsl	x12, x11, #4
  45a8fc:	ldr	x12, [x9, x12]
  45a900:	cmp	x19, x12
  45a904:	csel	x1, x11, x1, eq  // eq = none
  45a908:	b	45a8d0 <_obstack_memory_used@@Base+0xf70c>
  45a90c:	cmp	x8, #0x1
  45a910:	b.lt	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tstop
  45a914:	mov	x28, xzr
  45a918:	ldr	x10, [x23, #16]
  45a91c:	ldr	x1, [x10, x28, lsl #3]
  45a920:	add	x10, x9, x1, lsl #4
  45a924:	ldr	w10, [x10, #8]
  45a928:	and	w10, w10, #0xfe
  45a92c:	orr	w10, w10, #0x1
  45a930:	cmp	w10, #0x9
  45a934:	b.ne	45a968 <_obstack_memory_used@@Base+0xf7a4>  // b.any
  45a938:	lsl	x10, x1, #4
  45a93c:	ldr	x9, [x9, x10]
  45a940:	cmp	x19, x9
  45a944:	b.ne	45a968 <_obstack_memory_used@@Base+0xf7a4>  // b.any
  45a948:	mov	x0, x24
  45a94c:	mov	x2, x23
  45a950:	mov	x3, x27
  45a954:	bl	45b4d4 <_obstack_memory_used@@Base+0x10310>
  45a958:	cbnz	w0, 45b29c <_obstack_memory_used@@Base+0x100d8>
  45a95c:	ldr	x8, [x23, #8]
  45a960:	ldur	x14, [x29, #-112]
  45a964:	ldr	x15, [sp, #120]
  45a968:	add	x28, x28, #0x1
  45a96c:	cmp	x28, x8
  45a970:	b.ge	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tcont
  45a974:	ldr	x9, [x24]
  45a978:	b	45a918 <_obstack_memory_used@@Base+0xf754>
  45a97c:	tbnz	x1, #63, 45a99c <_obstack_memory_used@@Base+0xf7d8>
  45a980:	mov	x0, x24
  45a984:	mov	x2, x23
  45a988:	mov	x3, x27
  45a98c:	bl	45b4d4 <_obstack_memory_used@@Base+0x10310>
  45a990:	ldr	x15, [sp, #120]
  45a994:	ldur	x14, [x29, #-112]
  45a998:	cbnz	w0, 45b29c <_obstack_memory_used@@Base+0x100d8>
  45a99c:	tbnz	x28, #63, 45a840 <_obstack_memory_used@@Base+0xf67c>
  45a9a0:	ldr	x8, [x23, #8]
  45a9a4:	cmp	x8, #0x1
  45a9a8:	b.lt	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tstop
  45a9ac:	mov	x19, xzr
  45a9b0:	b	45a9e4 <_obstack_memory_used@@Base+0xf820>
  45a9b4:	mov	x0, x24
  45a9b8:	mov	x2, x23
  45a9bc:	mov	x3, x27
  45a9c0:	bl	45b4d4 <_obstack_memory_used@@Base+0x10310>
  45a9c4:	cbnz	w0, 45b29c <_obstack_memory_used@@Base+0x100d8>
  45a9c8:	ldr	x8, [x23, #8]
  45a9cc:	ldur	x14, [x29, #-112]
  45a9d0:	ldr	x15, [sp, #120]
  45a9d4:	sub	x19, x19, #0x1
  45a9d8:	add	x19, x19, #0x1
  45a9dc:	cmp	x19, x8
  45a9e0:	b.ge	45a840 <_obstack_memory_used@@Base+0xf67c>  // b.tcont
  45a9e4:	ldr	x9, [x23, #16]
  45a9e8:	ldr	x1, [x9, x19, lsl #3]
  45a9ec:	ldr	x9, [x24, #56]
  45a9f0:	madd	x10, x1, x25, x9
  45a9f4:	ldr	x10, [x10, #8]
  45a9f8:	subs	x10, x10, #0x1
  45a9fc:	b.lt	45aa3c <_obstack_memory_used@@Base+0xf878>  // b.tstop
  45aa00:	madd	x9, x1, x25, x9
  45aa04:	ldr	x9, [x9, #16]
  45aa08:	mov	x11, xzr
  45aa0c:	b.eq	45aa30 <_obstack_memory_used@@Base+0xf86c>  // b.none
  45aa10:	add	x12, x11, x10
  45aa14:	lsr	x12, x12, #1
  45aa18:	ldr	x13, [x9, x12, lsl #3]
  45aa1c:	cmp	x13, x28
  45aa20:	csinc	x11, x11, x12, ge  // ge = tcont
  45aa24:	csel	x10, x10, x12, lt  // lt = tstop
  45aa28:	cmp	x11, x10
  45aa2c:	b.cc	45aa10 <_obstack_memory_used@@Base+0xf84c>  // b.lo, b.ul, b.last
  45aa30:	ldr	x9, [x9, x11, lsl #3]
  45aa34:	cmp	x9, x28
  45aa38:	b.eq	45a9d8 <_obstack_memory_used@@Base+0xf814>  // b.none
  45aa3c:	ldr	x9, [x24, #48]
  45aa40:	madd	x10, x1, x25, x9
  45aa44:	ldr	x10, [x10, #8]
  45aa48:	subs	x10, x10, #0x1
  45aa4c:	b.lt	45a9b4 <_obstack_memory_used@@Base+0xf7f0>  // b.tstop
  45aa50:	madd	x9, x1, x25, x9
  45aa54:	ldr	x9, [x9, #16]
  45aa58:	mov	x11, xzr
  45aa5c:	b.eq	45aa80 <_obstack_memory_used@@Base+0xf8bc>  // b.none
  45aa60:	add	x12, x11, x10
  45aa64:	lsr	x12, x12, #1
  45aa68:	ldr	x13, [x9, x12, lsl #3]
  45aa6c:	cmp	x13, x28
  45aa70:	csinc	x11, x11, x12, ge  // ge = tcont
  45aa74:	csel	x10, x10, x12, lt  // lt = tstop
  45aa78:	cmp	x11, x10
  45aa7c:	b.cc	45aa60 <_obstack_memory_used@@Base+0xf89c>  // b.lo, b.ul, b.last
  45aa80:	ldr	x9, [x9, x11, lsl #3]
  45aa84:	cmp	x9, x28
  45aa88:	b.ne	45a9b4 <_obstack_memory_used@@Base+0xf7f0>  // b.any
  45aa8c:	b	45a9d8 <_obstack_memory_used@@Base+0xf814>
  45aa90:	ldr	x8, [x1]
  45aa94:	mov	x14, x1
  45aa98:	mov	x15, x0
  45aa9c:	str	xzr, [x8, x2, lsl #3]
  45aaa0:	b	45aad0 <_obstack_memory_used@@Base+0xf90c>
  45aaa4:	stur	wzr, [x29, #-100]
  45aaa8:	sub	x0, x29, #0x64
  45aaac:	mov	x1, x24
  45aab0:	mov	x2, x23
  45aab4:	bl	4598c8 <_obstack_memory_used@@Base+0xe704>
  45aab8:	ldp	x15, x14, [sp, #112]
  45aabc:	ldur	x2, [x29, #-112]
  45aac0:	ldr	x8, [x14]
  45aac4:	str	x0, [x8, x2, lsl #3]
  45aac8:	ldur	w26, [x29, #-100]
  45aacc:	cbnz	w26, 45b278 <_obstack_memory_used@@Base+0x100b4>
  45aad0:	cbz	x21, 45b274 <_obstack_memory_used@@Base+0x100b0>
  45aad4:	ldr	x8, [x15, #184]
  45aad8:	ldr	x8, [x8, x2, lsl #3]
  45aadc:	ldrb	w8, [x8, #104]
  45aae0:	tbz	w8, #6, 45b274 <_obstack_memory_used@@Base+0x100b0>
  45aae4:	ldr	x8, [x15, #200]
  45aae8:	ldr	x28, [x15, #152]
  45aaec:	cmp	x8, #0x1
  45aaf0:	b.lt	45ab3c <_obstack_memory_used@@Base+0xf978>  // b.tstop
  45aaf4:	ldr	x9, [x15, #216]
  45aaf8:	mov	x21, xzr
  45aafc:	mov	w10, #0x28                  	// #40
  45ab00:	mov	x11, x8
  45ab04:	add	x12, x11, x21
  45ab08:	cmp	x12, #0x0
  45ab0c:	cinc	x12, x12, lt  // lt = tstop
  45ab10:	asr	x12, x12, #1
  45ab14:	madd	x13, x12, x10, x9
  45ab18:	ldr	x13, [x13, #8]
  45ab1c:	cmp	x13, x2
  45ab20:	csel	x11, x11, x12, lt  // lt = tstop
  45ab24:	csinc	x21, x21, x12, ge  // ge = tcont
  45ab28:	cmp	x21, x11
  45ab2c:	b.lt	45ab04 <_obstack_memory_used@@Base+0xf940>  // b.tstop
  45ab30:	cmp	x21, x8
  45ab34:	b.lt	45ab48 <_obstack_memory_used@@Base+0xf984>  // b.tstop
  45ab38:	b	45b270 <_obstack_memory_used@@Base+0x100ac>
  45ab3c:	mov	x21, xzr
  45ab40:	cmp	x21, x8
  45ab44:	b.ge	45b270 <_obstack_memory_used@@Base+0x100ac>  // b.tcont
  45ab48:	cmn	x21, #0x1
  45ab4c:	b.eq	45b270 <_obstack_memory_used@@Base+0x100ac>  // b.none
  45ab50:	ldr	x8, [x15, #216]
  45ab54:	mov	w9, #0x28                  	// #40
  45ab58:	madd	x8, x21, x9, x8
  45ab5c:	ldr	x8, [x8, #8]
  45ab60:	cmp	x8, x2
  45ab64:	b.ne	45b270 <_obstack_memory_used@@Base+0x100ac>  // b.any
  45ab68:	stur	xzr, [x29, #-96]
  45ab6c:	ldr	x8, [x27, #8]
  45ab70:	cmp	x8, #0x0
  45ab74:	b.le	45b270 <_obstack_memory_used@@Base+0x100ac>
  45ab78:	sub	x8, x29, #0x60
  45ab7c:	add	x9, x2, #0x1
  45ab80:	str	x9, [sp, #32]
  45ab84:	mov	w9, #0x1                   	// #1
  45ab88:	add	x8, x8, #0x20
  45ab8c:	mov	x19, xzr
  45ab90:	mov	w13, #0x28                  	// #40
  45ab94:	mov	w23, #0x18                  	// #24
  45ab98:	str	x8, [sp, #8]
  45ab9c:	dup	v0.2d, x9
  45aba0:	str	xzr, [sp, #88]
  45aba4:	str	q0, [sp, #16]
  45aba8:	stp	x28, x27, [sp, #48]
  45abac:	b	45abc0 <_obstack_memory_used@@Base+0xf9fc>
  45abb0:	ldr	x8, [x27, #8]
  45abb4:	add	x19, x19, #0x1
  45abb8:	cmp	x19, x8
  45abbc:	b.ge	45b2a8 <_obstack_memory_used@@Base+0x100e4>  // b.tcont
  45abc0:	ldr	x8, [x27, #16]
  45abc4:	ldr	x9, [x14, #16]
  45abc8:	ldr	x16, [x8, x19, lsl #3]
  45abcc:	ldr	x8, [x28]
  45abd0:	cmp	x16, x9
  45abd4:	add	x8, x8, x16, lsl #4
  45abd8:	ldrb	w8, [x8, #8]
  45abdc:	b.ne	45abf8 <_obstack_memory_used@@Base+0xfa34>  // b.any
  45abe0:	cmp	w8, #0x4
  45abe4:	b.ne	45abb0 <_obstack_memory_used@@Base+0xf9ec>  // b.any
  45abe8:	ldr	x8, [x14, #24]
  45abec:	cmp	x8, x2
  45abf0:	b.ne	45ac00 <_obstack_memory_used@@Base+0xfa3c>  // b.any
  45abf4:	b	45abb0 <_obstack_memory_used@@Base+0xf9ec>
  45abf8:	cmp	w8, #0x4
  45abfc:	b.ne	45abb0 <_obstack_memory_used@@Base+0xf9ec>  // b.any
  45ac00:	ldr	x8, [x15, #216]
  45ac04:	mov	x24, x21
  45ac08:	str	x19, [sp, #64]
  45ac0c:	str	x16, [sp, #104]
  45ac10:	madd	x25, x21, x13, x8
  45ac14:	b	45ac2c <_obstack_memory_used@@Base+0xfa68>
  45ac18:	ldr	x16, [sp, #104]
  45ac1c:	ldrb	w8, [x25, #32]
  45ac20:	add	x25, x25, #0x28
  45ac24:	add	x24, x24, #0x1
  45ac28:	cbz	w8, 45abb0 <_obstack_memory_used@@Base+0xf9ec>
  45ac2c:	ldr	x8, [x25]
  45ac30:	cmp	x8, x16
  45ac34:	b.ne	45ac1c <_obstack_memory_used@@Base+0xfa58>  // b.any
  45ac38:	ldp	x9, x8, [x25, #16]
  45ac3c:	subs	x8, x8, x9
  45ac40:	add	x20, x8, x2
  45ac44:	b.eq	45ac60 <_obstack_memory_used@@Base+0xfa9c>  // b.none
  45ac48:	ldr	x8, [x28, #24]
  45ac4c:	add	x8, x8, x16, lsl #3
  45ac50:	ldr	x9, [x14, #24]
  45ac54:	cmp	x20, x9
  45ac58:	b.gt	45ac1c <_obstack_memory_used@@Base+0xfa58>
  45ac5c:	b	45ac78 <_obstack_memory_used@@Base+0xfab4>
  45ac60:	ldr	x8, [x28, #40]
  45ac64:	madd	x8, x16, x23, x8
  45ac68:	ldr	x8, [x8, #16]
  45ac6c:	ldr	x9, [x14, #24]
  45ac70:	cmp	x20, x9
  45ac74:	b.gt	45ac1c <_obstack_memory_used@@Base+0xfa58>
  45ac78:	ldr	x9, [x14]
  45ac7c:	ldr	x10, [x9, x20, lsl #3]
  45ac80:	cbz	x10, 45ac1c <_obstack_memory_used@@Base+0xfa58>
  45ac84:	ldr	x9, [x10, #16]
  45ac88:	subs	x9, x9, #0x1
  45ac8c:	b.lt	45ac1c <_obstack_memory_used@@Base+0xfa58>  // b.tstop
  45ac90:	ldr	x26, [x8]
  45ac94:	ldr	x8, [x10, #24]
  45ac98:	mov	x10, xzr
  45ac9c:	b.eq	45acc0 <_obstack_memory_used@@Base+0xfafc>  // b.none
  45aca0:	add	x11, x10, x9
  45aca4:	lsr	x11, x11, #1
  45aca8:	ldr	x12, [x8, x11, lsl #3]
  45acac:	cmp	x12, x26
  45acb0:	csinc	x10, x10, x11, ge  // ge = tcont
  45acb4:	csel	x9, x9, x11, lt  // lt = tstop
  45acb8:	cmp	x10, x9
  45acbc:	b.cc	45aca0 <_obstack_memory_used@@Base+0xfadc>  // b.lo, b.ul, b.last
  45acc0:	ldr	x8, [x8, x10, lsl #3]
  45acc4:	cmp	x8, x26
  45acc8:	b.ne	45ac18 <_obstack_memory_used@@Base+0xfa54>  // b.any
  45accc:	ldr	x8, [x15, #200]
  45acd0:	cmp	x8, #0x1
  45acd4:	b.lt	45ad1c <_obstack_memory_used@@Base+0xfb58>  // b.tstop
  45acd8:	ldr	x9, [x15, #216]
  45acdc:	mov	x27, xzr
  45ace0:	mov	x10, x8
  45ace4:	add	x11, x10, x27
  45ace8:	cmp	x11, #0x0
  45acec:	cinc	x11, x11, lt  // lt = tstop
  45acf0:	asr	x11, x11, #1
  45acf4:	madd	x12, x11, x13, x9
  45acf8:	ldr	x12, [x12, #8]
  45acfc:	cmp	x12, x2
  45ad00:	csel	x10, x10, x11, lt  // lt = tstop
  45ad04:	csinc	x27, x27, x11, ge  // ge = tcont
  45ad08:	cmp	x27, x10
  45ad0c:	b.lt	45ace4 <_obstack_memory_used@@Base+0xfb20>  // b.tstop
  45ad10:	cmp	x27, x8
  45ad14:	b.lt	45ad28 <_obstack_memory_used@@Base+0xfb64>  // b.tstop
  45ad18:	b	45ad3c <_obstack_memory_used@@Base+0xfb78>
  45ad1c:	mov	x27, xzr
  45ad20:	cmp	x27, x8
  45ad24:	b.ge	45ad3c <_obstack_memory_used@@Base+0xfb78>  // b.tcont
  45ad28:	ldr	x9, [x15, #216]
  45ad2c:	madd	x9, x27, x13, x9
  45ad30:	ldr	x9, [x9, #8]
  45ad34:	cmp	x9, x2
  45ad38:	b.eq	45ad40 <_obstack_memory_used@@Base+0xfb7c>  // b.none
  45ad3c:	mov	x27, #0xffffffffffffffff    	// #-1
  45ad40:	cmp	x8, #0x1
  45ad44:	b.lt	45ad90 <_obstack_memory_used@@Base+0xfbcc>  // b.tstop
  45ad48:	ldr	x9, [x15, #216]
  45ad4c:	mov	x28, xzr
  45ad50:	mov	x10, x8
  45ad54:	add	x11, x10, x28
  45ad58:	cmp	x11, #0x0
  45ad5c:	cinc	x11, x11, lt  // lt = tstop
  45ad60:	asr	x11, x11, #1
  45ad64:	madd	x12, x11, x13, x9
  45ad68:	ldr	x12, [x12, #8]
  45ad6c:	cmp	x12, x20
  45ad70:	csel	x10, x10, x11, lt  // lt = tstop
  45ad74:	csinc	x28, x28, x11, ge  // ge = tcont
  45ad78:	cmp	x28, x10
  45ad7c:	b.lt	45ad54 <_obstack_memory_used@@Base+0xfb90>  // b.tstop
  45ad80:	cmp	x28, x8
  45ad84:	str	x17, [sp, #80]
  45ad88:	b.lt	45ada0 <_obstack_memory_used@@Base+0xfbdc>  // b.tstop
  45ad8c:	b	45adb4 <_obstack_memory_used@@Base+0xfbf0>
  45ad90:	mov	x28, xzr
  45ad94:	cmp	x28, x8
  45ad98:	str	x17, [sp, #80]
  45ad9c:	b.ge	45adb4 <_obstack_memory_used@@Base+0xfbf0>  // b.tcont
  45ada0:	ldr	x8, [x15, #216]
  45ada4:	madd	x8, x28, x13, x8
  45ada8:	ldr	x8, [x8, #8]
  45adac:	cmp	x8, x20
  45adb0:	b.eq	45adb8 <_obstack_memory_used@@Base+0xfbf4>  // b.none
  45adb4:	mov	x28, #0xffffffffffffffff    	// #-1
  45adb8:	ldr	x23, [x14, #40]
  45adbc:	cmp	x23, #0x1
  45adc0:	b.lt	45af44 <_obstack_memory_used@@Base+0xfd80>  // b.tstop
  45adc4:	ldr	x16, [x15, #152]
  45adc8:	mov	x19, xzr
  45adcc:	str	x16, [sp, #96]
  45add0:	b	45adf0 <_obstack_memory_used@@Base+0xfc2c>
  45add4:	mov	w0, #0xffffffff            	// #-1
  45add8:	cmp	w0, w23
  45addc:	b.ne	45af2c <_obstack_memory_used@@Base+0xfd68>  // b.any
  45ade0:	ldr	x23, [x14, #40]
  45ade4:	add	x19, x19, #0x1
  45ade8:	cmp	x19, x23
  45adec:	b.ge	45af44 <_obstack_memory_used@@Base+0xfd80>  // b.tcont
  45adf0:	ldr	x8, [x14, #48]
  45adf4:	ldr	x9, [x15, #216]
  45adf8:	ldr	x12, [x16]
  45adfc:	ldr	x8, [x8, x19, lsl #3]
  45ae00:	madd	x10, x8, x13, x9
  45ae04:	ldr	x11, [x10]
  45ae08:	ldr	x10, [x10, #16]
  45ae0c:	lsl	x11, x11, #4
  45ae10:	ldr	x22, [x12, x11]
  45ae14:	cmp	x10, x2
  45ae18:	b.le	45ae2c <_obstack_memory_used@@Base+0xfc68>
  45ae1c:	mov	w23, #0xffffffff            	// #-1
  45ae20:	cmp	x10, x20
  45ae24:	b.gt	45add4 <_obstack_memory_used@@Base+0xfc10>
  45ae28:	b	45aeb8 <_obstack_memory_used@@Base+0xfcf4>
  45ae2c:	madd	x11, x8, x13, x9
  45ae30:	ldr	x11, [x11, #24]
  45ae34:	cmp	x11, x2
  45ae38:	b.ge	45ae4c <_obstack_memory_used@@Base+0xfc88>  // b.tcont
  45ae3c:	mov	w23, #0x1                   	// #1
  45ae40:	cmp	x10, x20
  45ae44:	b.gt	45add4 <_obstack_memory_used@@Base+0xfc10>
  45ae48:	b	45aeb8 <_obstack_memory_used@@Base+0xfcf4>
  45ae4c:	cmp	x10, x2
  45ae50:	cset	w1, eq  // eq = none
  45ae54:	cmp	x11, x2
  45ae58:	cset	w11, eq  // eq = none
  45ae5c:	bfi	w1, w11, #1, #1
  45ae60:	cbz	w1, 45aeac <_obstack_memory_used@@Base+0xfce8>
  45ae64:	ldr	x3, [sp, #104]
  45ae68:	mov	x0, x15
  45ae6c:	mov	x2, x22
  45ae70:	mov	x4, x27
  45ae74:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45ae78:	ldp	x15, x14, [sp, #112]
  45ae7c:	mov	w13, #0x28                  	// #40
  45ae80:	ldr	x16, [sp, #96]
  45ae84:	ldur	x2, [x29, #-112]
  45ae88:	ldr	x8, [x14, #48]
  45ae8c:	ldr	x9, [x15, #216]
  45ae90:	mov	w23, w0
  45ae94:	ldr	x8, [x8, x19, lsl #3]
  45ae98:	madd	x10, x8, x13, x9
  45ae9c:	ldr	x10, [x10, #16]
  45aea0:	cmp	x10, x20
  45aea4:	b.le	45aeb8 <_obstack_memory_used@@Base+0xfcf4>
  45aea8:	b	45add4 <_obstack_memory_used@@Base+0xfc10>
  45aeac:	mov	w23, wzr
  45aeb0:	cmp	x10, x20
  45aeb4:	b.gt	45add4 <_obstack_memory_used@@Base+0xfc10>
  45aeb8:	madd	x8, x8, x13, x9
  45aebc:	ldr	x8, [x8, #24]
  45aec0:	cmp	x8, x20
  45aec4:	b.ge	45aed8 <_obstack_memory_used@@Base+0xfd14>  // b.tcont
  45aec8:	mov	w0, #0x1                   	// #1
  45aecc:	cmp	w0, w23
  45aed0:	b.eq	45ade0 <_obstack_memory_used@@Base+0xfc1c>  // b.none
  45aed4:	b	45af2c <_obstack_memory_used@@Base+0xfd68>
  45aed8:	cmp	x10, x20
  45aedc:	cset	w1, eq  // eq = none
  45aee0:	cmp	x8, x20
  45aee4:	cset	w8, eq  // eq = none
  45aee8:	bfi	w1, w8, #1, #1
  45aeec:	cbz	w1, 45af20 <_obstack_memory_used@@Base+0xfd5c>
  45aef0:	mov	x0, x15
  45aef4:	mov	x2, x22
  45aef8:	mov	x3, x26
  45aefc:	mov	x4, x28
  45af00:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45af04:	ldr	x16, [sp, #96]
  45af08:	ldp	x15, x14, [sp, #112]
  45af0c:	ldur	x2, [x29, #-112]
  45af10:	mov	w13, #0x28                  	// #40
  45af14:	cmp	w0, w23
  45af18:	b.eq	45ade0 <_obstack_memory_used@@Base+0xfc1c>  // b.none
  45af1c:	b	45af2c <_obstack_memory_used@@Base+0xfd68>
  45af20:	mov	w0, wzr
  45af24:	cmp	w0, w23
  45af28:	b.eq	45ade0 <_obstack_memory_used@@Base+0xfc1c>  // b.none
  45af2c:	ldp	x28, x27, [sp, #48]
  45af30:	ldr	x19, [sp, #64]
  45af34:	ldr	x16, [sp, #104]
  45af38:	ldr	x17, [sp, #80]
  45af3c:	mov	w23, #0x18                  	// #24
  45af40:	b	45ac1c <_obstack_memory_used@@Base+0xfa58>
  45af44:	ldp	x28, x27, [sp, #48]
  45af48:	ldp	x25, x11, [sp, #72]
  45af4c:	ldr	x20, [sp, #104]
  45af50:	ldr	x8, [sp, #88]
  45af54:	cbz	x8, 45af74 <_obstack_memory_used@@Base+0xfdb0>
  45af58:	ldr	x8, [sp, #40]
  45af5c:	stp	x20, x2, [x29, #-80]
  45af60:	cbz	x8, 45b044 <_obstack_memory_used@@Base+0xfe80>
  45af64:	mov	w23, #0x18                  	// #24
  45af68:	cbnz	x11, 45b260 <_obstack_memory_used@@Base+0x1009c>
  45af6c:	str	x24, [x25]
  45af70:	b	45b0b0 <_obstack_memory_used@@Base+0xfeec>
  45af74:	ldr	x8, [x14, #48]
  45af78:	ldp	q2, q0, [x14, #16]
  45af7c:	ldr	q1, [x14]
  45af80:	cmp	x23, #0x1
  45af84:	stp	q2, q0, [x29, #-80]
  45af88:	stp	x23, x8, [x29, #-56]
  45af8c:	stur	q1, [x29, #-96]
  45af90:	b.lt	45b034 <_obstack_memory_used@@Base+0xfe70>  // b.tstop
  45af94:	lsl	x22, x23, #3
  45af98:	mov	x0, x22
  45af9c:	stur	x23, [x29, #-64]
  45afa0:	bl	404210 <malloc@plt>
  45afa4:	stur	x0, [x29, #-48]
  45afa8:	cbz	x0, 45b2e8 <_obstack_memory_used@@Base+0x10124>
  45afac:	ldr	x8, [sp, #120]
  45afb0:	mov	x2, x22
  45afb4:	mov	x25, x0
  45afb8:	ldr	x1, [x8, #48]
  45afbc:	bl	403e80 <memcpy@plt>
  45afc0:	ldur	x8, [x29, #-112]
  45afc4:	mov	x11, x23
  45afc8:	mov	w23, #0x18                  	// #24
  45afcc:	stp	x20, x8, [x29, #-80]
  45afd0:	lsl	x8, x11, #1
  45afd4:	lsl	x1, x11, #4
  45afd8:	mov	x0, x25
  45afdc:	str	x8, [sp, #40]
  45afe0:	stur	x8, [x29, #-64]
  45afe4:	bl	404450 <realloc@plt>
  45afe8:	cbz	x0, 45b2f8 <_obstack_memory_used@@Base+0x10134>
  45afec:	ldur	x11, [x29, #-56]
  45aff0:	ldur	x2, [x29, #-112]
  45aff4:	mov	x25, x0
  45aff8:	stur	x0, [x29, #-48]
  45affc:	ldr	x8, [x25]
  45b000:	cmp	x8, x24
  45b004:	b.le	45b080 <_obstack_memory_used@@Base+0xfebc>
  45b008:	ldr	x15, [sp, #112]
  45b00c:	cmp	x11, #0x1
  45b010:	b.lt	45b0ac <_obstack_memory_used@@Base+0xfee8>  // b.tstop
  45b014:	mov	x8, x11
  45b018:	add	x9, x25, x8, lsl #3
  45b01c:	ldur	x10, [x9, #-8]
  45b020:	subs	x11, x8, #0x1
  45b024:	mov	x8, x11
  45b028:	str	x10, [x9]
  45b02c:	b.gt	45b018 <_obstack_memory_used@@Base+0xfe54>
  45b030:	b	45b0ac <_obstack_memory_used@@Base+0xfee8>
  45b034:	ldr	x8, [sp, #8]
  45b038:	stp	xzr, xzr, [x8]
  45b03c:	str	xzr, [x8, #16]
  45b040:	stp	x20, x2, [x29, #-80]
  45b044:	ldr	q0, [sp, #16]
  45b048:	mov	w0, #0x8                   	// #8
  45b04c:	stur	q0, [x29, #-64]
  45b050:	bl	404210 <malloc@plt>
  45b054:	mov	w23, #0x18                  	// #24
  45b058:	stur	x0, [x29, #-48]
  45b05c:	cbz	x0, 45b2e8 <_obstack_memory_used@@Base+0x10124>
  45b060:	ldur	x2, [x29, #-112]
  45b064:	ldr	x15, [sp, #112]
  45b068:	mov	w8, #0x1                   	// #1
  45b06c:	mov	x25, x0
  45b070:	str	x24, [x0]
  45b074:	mov	w20, #0x1                   	// #1
  45b078:	str	x8, [sp, #40]
  45b07c:	b	45b0bc <_obstack_memory_used@@Base+0xfef8>
  45b080:	add	x8, x25, x11, lsl #3
  45b084:	ldur	x8, [x8, #-8]
  45b088:	ldr	x15, [sp, #112]
  45b08c:	cmp	x8, x24
  45b090:	b.le	45b0ac <_obstack_memory_used@@Base+0xfee8>
  45b094:	add	x9, x25, x11, lsl #3
  45b098:	str	x8, [x9]
  45b09c:	ldur	x8, [x9, #-16]
  45b0a0:	sub	x11, x11, #0x1
  45b0a4:	cmp	x8, x24
  45b0a8:	b.gt	45b094 <_obstack_memory_used@@Base+0xfed0>
  45b0ac:	str	x24, [x25, x11, lsl #3]
  45b0b0:	ldur	x8, [x29, #-56]
  45b0b4:	add	x20, x8, #0x1
  45b0b8:	stur	x20, [x29, #-56]
  45b0bc:	ldur	x8, [x29, #-96]
  45b0c0:	sub	x1, x29, #0x60
  45b0c4:	mov	x0, x15
  45b0c8:	ldr	x19, [x8, x2, lsl #3]
  45b0cc:	str	x8, [sp, #88]
  45b0d0:	bl	45a0f0 <_obstack_memory_used@@Base+0xef2c>
  45b0d4:	cbnz	w0, 45b2d8 <_obstack_memory_used@@Base+0x10114>
  45b0d8:	ldp	x15, x14, [sp, #112]
  45b0dc:	ldur	x2, [x29, #-112]
  45b0e0:	mov	w13, #0x28                  	// #40
  45b0e4:	str	x25, [sp, #72]
  45b0e8:	ldr	x22, [x14, #8]
  45b0ec:	cbz	x22, 45b178 <_obstack_memory_used@@Base+0xffb4>
  45b0f0:	tbnz	x2, #63, 45b170 <_obstack_memory_used@@Base+0xffac>
  45b0f4:	ldr	x23, [sp, #88]
  45b0f8:	ldr	x25, [sp, #32]
  45b0fc:	b	45b114 <_obstack_memory_used@@Base+0xff50>
  45b100:	str	x8, [x22]
  45b104:	subs	x25, x25, #0x1
  45b108:	add	x23, x23, #0x8
  45b10c:	add	x22, x22, #0x8
  45b110:	b.eq	45b170 <_obstack_memory_used@@Base+0xffac>  // b.none
  45b114:	ldr	x9, [x22]
  45b118:	ldr	x8, [x23]
  45b11c:	cbz	x9, 45b100 <_obstack_memory_used@@Base+0xff3c>
  45b120:	cbz	x8, 45b104 <_obstack_memory_used@@Base+0xff40>
  45b124:	add	x1, x9, #0x8
  45b128:	add	x2, x8, #0x8
  45b12c:	sub	x0, x29, #0x28
  45b130:	bl	45850c <_obstack_memory_used@@Base+0xd348>
  45b134:	stur	w0, [x29, #-12]
  45b138:	cbnz	w0, 45b2d8 <_obstack_memory_used@@Base+0x10114>
  45b13c:	sub	x0, x29, #0xc
  45b140:	sub	x2, x29, #0x28
  45b144:	mov	x1, x28
  45b148:	bl	4598c8 <_obstack_memory_used@@Base+0xe704>
  45b14c:	str	x0, [x22]
  45b150:	ldur	x0, [x29, #-24]
  45b154:	bl	4046b0 <free@plt>
  45b158:	ldur	w26, [x29, #-12]
  45b15c:	ldur	x2, [x29, #-112]
  45b160:	ldp	x15, x14, [sp, #112]
  45b164:	mov	w13, #0x28                  	// #40
  45b168:	cbz	w26, 45b104 <_obstack_memory_used@@Base+0xff40>
  45b16c:	b	45b2ac <_obstack_memory_used@@Base+0x100e8>
  45b170:	ldr	x25, [sp, #72]
  45b174:	mov	w23, #0x18                  	// #24
  45b178:	ldr	x8, [sp, #88]
  45b17c:	subs	x17, x20, #0x1
  45b180:	str	x19, [x8, x2, lsl #3]
  45b184:	b.lt	45b248 <_obstack_memory_used@@Base+0x10084>  // b.tstop
  45b188:	ldr	x19, [sp, #64]
  45b18c:	ldr	x16, [sp, #104]
  45b190:	mov	x8, xzr
  45b194:	b.eq	45b1bc <_obstack_memory_used@@Base+0xfff8>  // b.none
  45b198:	mov	x9, x17
  45b19c:	add	x10, x8, x9
  45b1a0:	lsr	x10, x10, #1
  45b1a4:	ldr	x11, [x25, x10, lsl #3]
  45b1a8:	cmp	x11, x24
  45b1ac:	csinc	x8, x8, x10, ge  // ge = tcont
  45b1b0:	csel	x9, x9, x10, lt  // lt = tstop
  45b1b4:	cmp	x8, x9
  45b1b8:	b.cc	45b19c <_obstack_memory_used@@Base+0xffd8>  // b.lo, b.ul, b.last
  45b1bc:	ldr	x9, [x25, x8, lsl #3]
  45b1c0:	cmp	x9, x24
  45b1c4:	csinv	x9, x8, xzr, eq  // eq = none
  45b1c8:	tbnz	x9, #63, 45b250 <_obstack_memory_used@@Base+0x1008c>
  45b1cc:	cmp	x20, x9
  45b1d0:	b.le	45b250 <_obstack_memory_used@@Base+0x1008c>
  45b1d4:	cmp	x17, x9
  45b1d8:	stur	x17, [x29, #-56]
  45b1dc:	b.le	45b254 <_obstack_memory_used@@Base+0x10090>
  45b1e0:	add	x9, x8, #0x1
  45b1e4:	cmp	x17, x9
  45b1e8:	csinc	x9, x17, x8, gt
  45b1ec:	sub	x9, x9, x8
  45b1f0:	cmp	x9, #0x4
  45b1f4:	b.cc	45b22c <_obstack_memory_used@@Base+0x10068>  // b.lo, b.ul, b.last
  45b1f8:	and	x10, x9, #0xfffffffffffffffc
  45b1fc:	add	x11, x25, x8, lsl #3
  45b200:	add	x8, x8, x10
  45b204:	add	x11, x11, #0x10
  45b208:	mov	x12, x10
  45b20c:	ldur	q0, [x11, #-8]
  45b210:	ldur	q1, [x11, #8]
  45b214:	subs	x12, x12, #0x4
  45b218:	stp	q0, q1, [x11, #-16]
  45b21c:	add	x11, x11, #0x20
  45b220:	b.ne	45b20c <_obstack_memory_used@@Base+0x10048>  // b.any
  45b224:	cmp	x9, x10
  45b228:	b.eq	45b254 <_obstack_memory_used@@Base+0x10090>  // b.none
  45b22c:	add	x9, x25, x8, lsl #3
  45b230:	ldr	x10, [x9, #8]
  45b234:	add	x8, x8, #0x1
  45b238:	cmp	x8, x17
  45b23c:	str	x10, [x9]
  45b240:	b.lt	45b22c <_obstack_memory_used@@Base+0x10068>  // b.tstop
  45b244:	b	45b254 <_obstack_memory_used@@Base+0x10090>
  45b248:	ldr	x19, [sp, #64]
  45b24c:	ldr	x16, [sp, #104]
  45b250:	mov	x17, x20
  45b254:	ldr	x8, [x15, #216]
  45b258:	madd	x25, x24, x13, x8
  45b25c:	b	45ac1c <_obstack_memory_used@@Base+0xfa58>
  45b260:	ldr	x8, [sp, #40]
  45b264:	cmp	x8, x11
  45b268:	b.eq	45afd0 <_obstack_memory_used@@Base+0xfe0c>  // b.none
  45b26c:	b	45affc <_obstack_memory_used@@Base+0xfe38>
  45b270:	stur	wzr, [x29, #-100]
  45b274:	mov	w26, wzr
  45b278:	mov	w0, w26
  45b27c:	ldp	x20, x19, [sp, #320]
  45b280:	ldp	x22, x21, [sp, #304]
  45b284:	ldp	x24, x23, [sp, #288]
  45b288:	ldp	x26, x25, [sp, #272]
  45b28c:	ldp	x28, x27, [sp, #256]
  45b290:	ldp	x29, x30, [sp, #240]
  45b294:	add	sp, sp, #0x150
  45b298:	ret
  45b29c:	mov	w26, w0
  45b2a0:	stur	w0, [x29, #-100]
  45b2a4:	b	45b278 <_obstack_memory_used@@Base+0x100b4>
  45b2a8:	mov	w26, wzr
  45b2ac:	ldur	x8, [x29, #-96]
  45b2b0:	cbz	x8, 45b2bc <_obstack_memory_used@@Base+0x100f8>
  45b2b4:	ldur	x0, [x29, #-48]
  45b2b8:	bl	4046b0 <free@plt>
  45b2bc:	stur	w26, [x29, #-100]
  45b2c0:	cbz	w26, 45b274 <_obstack_memory_used@@Base+0x100b0>
  45b2c4:	b	45b278 <_obstack_memory_used@@Base+0x100b4>
  45b2c8:	mov	w26, #0xc                   	// #12
  45b2cc:	stur	w0, [x29, #-96]
  45b2d0:	stur	w26, [x29, #-100]
  45b2d4:	b	45b278 <_obstack_memory_used@@Base+0x100b4>
  45b2d8:	mov	w26, w0
  45b2dc:	b	45b2ac <_obstack_memory_used@@Base+0x100e8>
  45b2e0:	mov	w26, w0
  45b2e4:	b	45b278 <_obstack_memory_used@@Base+0x100b4>
  45b2e8:	ldr	x8, [sp, #8]
  45b2ec:	mov	w26, #0xc                   	// #12
  45b2f0:	stp	xzr, xzr, [x8]
  45b2f4:	b	45b2ac <_obstack_memory_used@@Base+0x100e8>
  45b2f8:	mov	w26, #0xc                   	// #12
  45b2fc:	b	45b2ac <_obstack_memory_used@@Base+0x100e8>
  45b300:	stp	x29, x30, [sp, #-48]!
  45b304:	stp	x22, x21, [sp, #16]
  45b308:	stp	x20, x19, [sp, #32]
  45b30c:	ldr	x9, [x1, #8]
  45b310:	mov	x29, sp
  45b314:	cbz	x9, 45b4ac <_obstack_memory_used@@Base+0x102e8>
  45b318:	ldr	x10, [x2, #8]
  45b31c:	mov	x20, x2
  45b320:	cbz	x10, 45b4ac <_obstack_memory_used@@Base+0x102e8>
  45b324:	ldp	x8, x13, [x0]
  45b328:	add	x11, x10, x9
  45b32c:	mov	x21, x1
  45b330:	mov	x19, x0
  45b334:	add	x12, x13, x11
  45b338:	cmp	x12, x8
  45b33c:	b.le	45b368 <_obstack_memory_used@@Base+0x101a4>
  45b340:	ldr	x0, [x19, #16]
  45b344:	add	x22, x8, x11
  45b348:	lsl	x1, x22, #3
  45b34c:	bl	404450 <realloc@plt>
  45b350:	cbz	x0, 45b4c0 <_obstack_memory_used@@Base+0x102fc>
  45b354:	str	x0, [x19, #16]
  45b358:	str	x22, [x19]
  45b35c:	ldr	x13, [x19, #8]
  45b360:	ldr	x9, [x21, #8]
  45b364:	ldr	x10, [x20, #8]
  45b368:	ldr	x11, [x21, #16]
  45b36c:	ldr	x12, [x20, #16]
  45b370:	add	x8, x9, x13
  45b374:	add	x8, x8, x10
  45b378:	sub	x13, x13, #0x1
  45b37c:	sub	x9, x9, #0x1
  45b380:	mov	x14, x10
  45b384:	sub	x10, x14, #0x1
  45b388:	ldr	x16, [x12, x10, lsl #3]
  45b38c:	ldr	x15, [x11, x9, lsl #3]
  45b390:	cmp	x15, x16
  45b394:	b.eq	45b3bc <_obstack_memory_used@@Base+0x101f8>  // b.none
  45b398:	b.lt	45b3ac <_obstack_memory_used@@Base+0x101e8>  // b.tstop
  45b39c:	cmp	x9, #0x0
  45b3a0:	sub	x9, x9, #0x1
  45b3a4:	b.gt	45b38c <_obstack_memory_used@@Base+0x101c8>
  45b3a8:	b	45b414 <_obstack_memory_used@@Base+0x10250>
  45b3ac:	cmp	x14, #0x2
  45b3b0:	mov	x14, x10
  45b3b4:	b.ge	45b384 <_obstack_memory_used@@Base+0x101c0>  // b.tcont
  45b3b8:	b	45b414 <_obstack_memory_used@@Base+0x10250>
  45b3bc:	tbnz	x13, #63, 45b3e4 <_obstack_memory_used@@Base+0x10220>
  45b3c0:	ldr	x17, [x19, #16]
  45b3c4:	ldr	x16, [x17, x13, lsl #3]
  45b3c8:	cmp	x16, x15
  45b3cc:	b.le	45b3ec <_obstack_memory_used@@Base+0x10228>
  45b3d0:	sub	x16, x13, #0x1
  45b3d4:	cmp	x13, #0x0
  45b3d8:	mov	x13, x16
  45b3dc:	b.gt	45b3c4 <_obstack_memory_used@@Base+0x10200>
  45b3e0:	b	45b3f4 <_obstack_memory_used@@Base+0x10230>
  45b3e4:	mov	x16, x13
  45b3e8:	b	45b3f4 <_obstack_memory_used@@Base+0x10230>
  45b3ec:	mov	x16, x13
  45b3f0:	b.eq	45b404 <_obstack_memory_used@@Base+0x10240>  // b.none
  45b3f4:	ldr	x13, [x19, #16]
  45b3f8:	sub	x8, x8, #0x1
  45b3fc:	str	x15, [x13, x8, lsl #3]
  45b400:	mov	x13, x16
  45b404:	cmp	x9, #0x1
  45b408:	b.lt	45b414 <_obstack_memory_used@@Base+0x10250>  // b.tstop
  45b40c:	cmp	x14, #0x2
  45b410:	b.ge	45b37c <_obstack_memory_used@@Base+0x101b8>  // b.tcont
  45b414:	ldp	x12, x0, [x19, #8]
  45b418:	ldr	x13, [x21, #8]
  45b41c:	ldr	x14, [x20, #8]
  45b420:	subs	x9, x12, #0x1
  45b424:	add	x9, x9, x13
  45b428:	add	x10, x9, x14
  45b42c:	sub	x15, x10, x8
  45b430:	add	x9, x15, #0x1
  45b434:	subs	x11, x12, #0x1
  45b438:	add	x16, x9, x12
  45b43c:	str	x16, [x19, #8]
  45b440:	b.lt	45b49c <_obstack_memory_used@@Base+0x102d8>  // b.tstop
  45b444:	tbnz	x15, #63, 45b49c <_obstack_memory_used@@Base+0x102d8>
  45b448:	add	x12, x12, x14
  45b44c:	add	x12, x12, x13
  45b450:	sub	x12, x12, x8
  45b454:	add	x12, x0, x12, lsl #3
  45b458:	ldr	x14, [x0, x10, lsl #3]
  45b45c:	ldr	x13, [x0, x11, lsl #3]
  45b460:	cmp	x14, x13
  45b464:	b.gt	45b480 <_obstack_memory_used@@Base+0x102bc>
  45b468:	sub	x14, x11, #0x1
  45b46c:	cmp	x11, #0x0
  45b470:	str	x13, [x12, x11, lsl #3]
  45b474:	mov	x11, x14
  45b478:	b.gt	45b458 <_obstack_memory_used@@Base+0x10294>
  45b47c:	b	45b49c <_obstack_memory_used@@Base+0x102d8>
  45b480:	mov	x13, xzr
  45b484:	sub	x10, x10, #0x1
  45b488:	sub	x9, x9, #0x1
  45b48c:	str	x14, [x12, x11, lsl #3]
  45b490:	sub	x12, x12, #0x8
  45b494:	cbnz	x9, 45b458 <_obstack_memory_used@@Base+0x10294>
  45b498:	b	45b4a0 <_obstack_memory_used@@Base+0x102dc>
  45b49c:	mov	x13, x9
  45b4a0:	add	x1, x0, x8, lsl #3
  45b4a4:	lsl	x2, x13, #3
  45b4a8:	bl	403e80 <memcpy@plt>
  45b4ac:	mov	w0, wzr
  45b4b0:	ldp	x20, x19, [sp, #32]
  45b4b4:	ldp	x22, x21, [sp, #16]
  45b4b8:	ldp	x29, x30, [sp], #48
  45b4bc:	ret
  45b4c0:	mov	w0, #0xc                   	// #12
  45b4c4:	ldp	x20, x19, [sp, #32]
  45b4c8:	ldp	x22, x21, [sp, #16]
  45b4cc:	ldp	x29, x30, [sp], #48
  45b4d0:	ret
  45b4d4:	sub	sp, sp, #0x80
  45b4d8:	stp	x29, x30, [sp, #32]
  45b4dc:	stp	x28, x27, [sp, #48]
  45b4e0:	stp	x26, x25, [sp, #64]
  45b4e4:	stp	x24, x23, [sp, #80]
  45b4e8:	stp	x22, x21, [sp, #96]
  45b4ec:	stp	x20, x19, [sp, #112]
  45b4f0:	ldr	x25, [x0, #56]
  45b4f4:	mov	w8, #0x18                  	// #24
  45b4f8:	stp	xzr, xzr, [sp, #8]
  45b4fc:	str	xzr, [sp, #24]
  45b500:	madd	x24, x1, x8, x25
  45b504:	ldr	x8, [x24, #8]!
  45b508:	add	x29, sp, #0x20
  45b50c:	cmp	x8, #0x1
  45b510:	b.lt	45b7ac <_obstack_memory_used@@Base+0x105e8>  // b.tstop
  45b514:	mov	w27, #0x18                  	// #24
  45b518:	madd	x9, x1, x27, x25
  45b51c:	mov	x21, x3
  45b520:	mov	x20, x1
  45b524:	mov	x22, x0
  45b528:	mov	x19, x2
  45b52c:	mov	x26, xzr
  45b530:	add	x28, x9, #0x10
  45b534:	b	45b544 <_obstack_memory_used@@Base+0x10380>
  45b538:	add	x26, x26, #0x1
  45b53c:	cmp	x26, x8
  45b540:	b.ge	45b6b8 <_obstack_memory_used@@Base+0x104f4>  // b.tcont
  45b544:	ldr	x11, [x28]
  45b548:	ldr	x9, [x11, x26, lsl #3]
  45b54c:	cmp	x9, x20
  45b550:	b.eq	45b538 <_obstack_memory_used@@Base+0x10374>  // b.none
  45b554:	ldr	x10, [x22]
  45b558:	add	x10, x10, x9, lsl #4
  45b55c:	ldrb	w10, [x10, #8]
  45b560:	tbz	w10, #3, 45b538 <_obstack_memory_used@@Base+0x10374>
  45b564:	ldr	x10, [x22, #40]
  45b568:	madd	x12, x9, x27, x10
  45b56c:	ldp	x13, x10, [x12, #8]
  45b570:	ldr	x12, [x10]
  45b574:	cmp	x13, #0x1
  45b578:	b.le	45b58c <_obstack_memory_used@@Base+0x103c8>
  45b57c:	ldr	x10, [x10, #8]
  45b580:	subs	x13, x8, #0x1
  45b584:	b.ge	45b598 <_obstack_memory_used@@Base+0x103d4>  // b.tcont
  45b588:	b	45b5cc <_obstack_memory_used@@Base+0x10408>
  45b58c:	mov	x10, #0xffffffffffffffff    	// #-1
  45b590:	subs	x13, x8, #0x1
  45b594:	b.lt	45b5cc <_obstack_memory_used@@Base+0x10408>  // b.tstop
  45b598:	mov	x14, xzr
  45b59c:	b.eq	45b5c0 <_obstack_memory_used@@Base+0x103fc>  // b.none
  45b5a0:	add	x15, x14, x13
  45b5a4:	lsr	x15, x15, #1
  45b5a8:	ldr	x16, [x11, x15, lsl #3]
  45b5ac:	cmp	x16, x12
  45b5b0:	csinc	x14, x14, x15, ge  // ge = tcont
  45b5b4:	csel	x13, x13, x15, lt  // lt = tstop
  45b5b8:	cmp	x14, x13
  45b5bc:	b.cc	45b5a0 <_obstack_memory_used@@Base+0x103dc>  // b.lo, b.ul, b.last
  45b5c0:	ldr	x13, [x11, x14, lsl #3]
  45b5c4:	cmp	x13, x12
  45b5c8:	b.eq	45b610 <_obstack_memory_used@@Base+0x1044c>  // b.none
  45b5cc:	ldr	x13, [x19, #8]
  45b5d0:	subs	x14, x13, #0x1
  45b5d4:	b.lt	45b610 <_obstack_memory_used@@Base+0x1044c>  // b.tstop
  45b5d8:	ldr	x13, [x19, #16]
  45b5dc:	mov	x15, xzr
  45b5e0:	b.eq	45b604 <_obstack_memory_used@@Base+0x10440>  // b.none
  45b5e4:	add	x16, x15, x14
  45b5e8:	lsr	x16, x16, #1
  45b5ec:	ldr	x17, [x13, x16, lsl #3]
  45b5f0:	cmp	x17, x12
  45b5f4:	csinc	x15, x15, x16, ge  // ge = tcont
  45b5f8:	csel	x14, x14, x16, lt  // lt = tstop
  45b5fc:	cmp	x15, x14
  45b600:	b.cc	45b5e4 <_obstack_memory_used@@Base+0x10420>  // b.lo, b.ul, b.last
  45b604:	ldr	x13, [x13, x15, lsl #3]
  45b608:	cmp	x13, x12
  45b60c:	b.eq	45b698 <_obstack_memory_used@@Base+0x104d4>  // b.none
  45b610:	cmp	x10, #0x1
  45b614:	b.lt	45b538 <_obstack_memory_used@@Base+0x10374>  // b.tstop
  45b618:	subs	x12, x8, #0x1
  45b61c:	b.lt	45b654 <_obstack_memory_used@@Base+0x10490>  // b.tstop
  45b620:	mov	x13, xzr
  45b624:	b.eq	45b648 <_obstack_memory_used@@Base+0x10484>  // b.none
  45b628:	add	x14, x13, x12
  45b62c:	lsr	x14, x14, #1
  45b630:	ldr	x15, [x11, x14, lsl #3]
  45b634:	cmp	x15, x10
  45b638:	csinc	x13, x13, x14, ge  // ge = tcont
  45b63c:	csel	x12, x12, x14, lt  // lt = tstop
  45b640:	cmp	x13, x12
  45b644:	b.cc	45b628 <_obstack_memory_used@@Base+0x10464>  // b.lo, b.ul, b.last
  45b648:	ldr	x11, [x11, x13, lsl #3]
  45b64c:	cmp	x11, x10
  45b650:	b.eq	45b538 <_obstack_memory_used@@Base+0x10374>  // b.none
  45b654:	ldr	x11, [x19, #8]
  45b658:	subs	x12, x11, #0x1
  45b65c:	b.lt	45b538 <_obstack_memory_used@@Base+0x10374>  // b.tstop
  45b660:	ldr	x11, [x19, #16]
  45b664:	mov	x13, xzr
  45b668:	b.eq	45b68c <_obstack_memory_used@@Base+0x104c8>  // b.none
  45b66c:	add	x14, x13, x12
  45b670:	lsr	x14, x14, #1
  45b674:	ldr	x15, [x11, x14, lsl #3]
  45b678:	cmp	x15, x10
  45b67c:	csinc	x13, x13, x14, ge  // ge = tcont
  45b680:	csel	x12, x12, x14, lt  // lt = tstop
  45b684:	cmp	x13, x12
  45b688:	b.cc	45b66c <_obstack_memory_used@@Base+0x104a8>  // b.lo, b.ul, b.last
  45b68c:	ldr	x11, [x11, x13, lsl #3]
  45b690:	cmp	x11, x10
  45b694:	b.ne	45b538 <_obstack_memory_used@@Base+0x10374>  // b.any
  45b698:	ldr	x8, [x22, #56]
  45b69c:	add	x0, sp, #0x8
  45b6a0:	mov	x1, x21
  45b6a4:	madd	x2, x9, x27, x8
  45b6a8:	bl	45b300 <_obstack_memory_used@@Base+0x1013c>
  45b6ac:	cbnz	w0, 45b87c <_obstack_memory_used@@Base+0x106b8>
  45b6b0:	ldr	x8, [x24]
  45b6b4:	b	45b538 <_obstack_memory_used@@Base+0x10374>
  45b6b8:	cmp	x8, #0x0
  45b6bc:	b.le	45b7ac <_obstack_memory_used@@Base+0x105e8>
  45b6c0:	mov	w8, #0x18                  	// #24
  45b6c4:	madd	x8, x20, x8, x25
  45b6c8:	ldp	x9, x0, [sp, #16]
  45b6cc:	ldr	x8, [x8, #16]
  45b6d0:	subs	x9, x9, #0x1
  45b6d4:	b.lt	45b7dc <_obstack_memory_used@@Base+0x10618>  // b.tstop
  45b6d8:	mov	x10, xzr
  45b6dc:	b	45b6f0 <_obstack_memory_used@@Base+0x1052c>
  45b6e0:	ldr	x11, [x24]
  45b6e4:	add	x10, x10, #0x1
  45b6e8:	cmp	x10, x11
  45b6ec:	b.ge	45b7b0 <_obstack_memory_used@@Base+0x105ec>  // b.tcont
  45b6f0:	ldr	x11, [x8, x10, lsl #3]
  45b6f4:	mov	x12, xzr
  45b6f8:	cbz	x9, 45b720 <_obstack_memory_used@@Base+0x1055c>
  45b6fc:	mov	x13, x9
  45b700:	add	x14, x12, x13
  45b704:	lsr	x14, x14, #1
  45b708:	ldr	x15, [x0, x14, lsl #3]
  45b70c:	cmp	x15, x11
  45b710:	csinc	x12, x12, x14, ge  // ge = tcont
  45b714:	csel	x13, x13, x14, lt  // lt = tstop
  45b718:	cmp	x12, x13
  45b71c:	b.cc	45b700 <_obstack_memory_used@@Base+0x1053c>  // b.lo, b.ul, b.last
  45b720:	ldr	x12, [x0, x12, lsl #3]
  45b724:	cmp	x12, x11
  45b728:	b.eq	45b6e0 <_obstack_memory_used@@Base+0x1051c>  // b.none
  45b72c:	ldr	x15, [x19, #8]
  45b730:	subs	x14, x15, #0x1
  45b734:	b.lt	45b6e0 <_obstack_memory_used@@Base+0x1051c>  // b.tstop
  45b738:	ldr	x12, [x19, #16]
  45b73c:	mov	x13, xzr
  45b740:	b.eq	45b768 <_obstack_memory_used@@Base+0x105a4>  // b.none
  45b744:	mov	x16, x14
  45b748:	add	x17, x13, x16
  45b74c:	lsr	x17, x17, #1
  45b750:	ldr	x18, [x12, x17, lsl #3]
  45b754:	cmp	x18, x11
  45b758:	csinc	x13, x13, x17, ge  // ge = tcont
  45b75c:	csel	x16, x16, x17, lt  // lt = tstop
  45b760:	cmp	x13, x16
  45b764:	b.cc	45b748 <_obstack_memory_used@@Base+0x10584>  // b.lo, b.ul, b.last
  45b768:	ldr	x16, [x12, x13, lsl #3]
  45b76c:	cmp	x16, x11
  45b770:	csinv	x11, x13, xzr, eq  // eq = none
  45b774:	tbnz	x11, #63, 45b6e0 <_obstack_memory_used@@Base+0x1051c>
  45b778:	cmp	x15, x11
  45b77c:	b.le	45b6e0 <_obstack_memory_used@@Base+0x1051c>
  45b780:	cmp	x14, x11
  45b784:	str	x14, [x19, #8]
  45b788:	b.le	45b6e0 <_obstack_memory_used@@Base+0x1051c>
  45b78c:	add	x11, x12, x13, lsl #3
  45b790:	ldr	x14, [x11, #8]
  45b794:	add	x13, x13, #0x1
  45b798:	str	x14, [x11]
  45b79c:	ldr	x11, [x19, #8]
  45b7a0:	cmp	x13, x11
  45b7a4:	b.lt	45b78c <_obstack_memory_used@@Base+0x105c8>  // b.tstop
  45b7a8:	b	45b6e0 <_obstack_memory_used@@Base+0x1051c>
  45b7ac:	ldr	x0, [sp, #24]
  45b7b0:	mov	w23, wzr
  45b7b4:	bl	4046b0 <free@plt>
  45b7b8:	mov	w0, w23
  45b7bc:	ldp	x20, x19, [sp, #112]
  45b7c0:	ldp	x22, x21, [sp, #96]
  45b7c4:	ldp	x24, x23, [sp, #80]
  45b7c8:	ldp	x26, x25, [sp, #64]
  45b7cc:	ldp	x28, x27, [sp, #48]
  45b7d0:	ldp	x29, x30, [sp, #32]
  45b7d4:	add	sp, sp, #0x80
  45b7d8:	ret
  45b7dc:	ldr	x10, [x19, #8]
  45b7e0:	mov	x9, xzr
  45b7e4:	b	45b7f8 <_obstack_memory_used@@Base+0x10634>
  45b7e8:	ldr	x11, [x24]
  45b7ec:	add	x9, x9, #0x1
  45b7f0:	cmp	x9, x11
  45b7f4:	b.ge	45b7b0 <_obstack_memory_used@@Base+0x105ec>  // b.tcont
  45b7f8:	subs	x13, x10, #0x1
  45b7fc:	b.lt	45b7e8 <_obstack_memory_used@@Base+0x10624>  // b.tstop
  45b800:	ldr	x14, [x8, x9, lsl #3]
  45b804:	ldr	x11, [x19, #16]
  45b808:	mov	x12, xzr
  45b80c:	b.eq	45b834 <_obstack_memory_used@@Base+0x10670>  // b.none
  45b810:	mov	x15, x13
  45b814:	add	x16, x12, x15
  45b818:	lsr	x16, x16, #1
  45b81c:	ldr	x17, [x11, x16, lsl #3]
  45b820:	cmp	x17, x14
  45b824:	csinc	x12, x12, x16, ge  // ge = tcont
  45b828:	csel	x15, x15, x16, lt  // lt = tstop
  45b82c:	cmp	x12, x15
  45b830:	b.cc	45b814 <_obstack_memory_used@@Base+0x10650>  // b.lo, b.ul, b.last
  45b834:	ldr	x15, [x11, x12, lsl #3]
  45b838:	cmp	x15, x14
  45b83c:	csinv	x14, x12, xzr, eq  // eq = none
  45b840:	tbnz	x14, #63, 45b7e8 <_obstack_memory_used@@Base+0x10624>
  45b844:	cmp	x10, x14
  45b848:	b.le	45b7e8 <_obstack_memory_used@@Base+0x10624>
  45b84c:	cmp	x13, x14
  45b850:	mov	x10, x13
  45b854:	str	x13, [x19, #8]
  45b858:	b.le	45b7e8 <_obstack_memory_used@@Base+0x10624>
  45b85c:	add	x10, x11, x12, lsl #3
  45b860:	ldr	x13, [x10, #8]
  45b864:	add	x12, x12, #0x1
  45b868:	str	x13, [x10]
  45b86c:	ldr	x10, [x19, #8]
  45b870:	cmp	x12, x10
  45b874:	b.lt	45b85c <_obstack_memory_used@@Base+0x10698>  // b.tstop
  45b878:	b	45b7e8 <_obstack_memory_used@@Base+0x10624>
  45b87c:	mov	w23, w0
  45b880:	ldr	x0, [sp, #24]
  45b884:	b	45b7b4 <_obstack_memory_used@@Base+0x105f0>
  45b888:	sub	sp, sp, #0x80
  45b88c:	stp	x29, x30, [sp, #32]
  45b890:	stp	x28, x27, [sp, #48]
  45b894:	stp	x26, x25, [sp, #64]
  45b898:	stp	x24, x23, [sp, #80]
  45b89c:	stp	x22, x21, [sp, #96]
  45b8a0:	stp	x20, x19, [sp, #112]
  45b8a4:	ldr	x24, [x0, #152]
  45b8a8:	mov	w9, #0x18                  	// #24
  45b8ac:	mov	w23, w1
  45b8b0:	add	x29, sp, #0x20
  45b8b4:	ldr	x8, [x24, #48]
  45b8b8:	madd	x25, x3, x9, x8
  45b8bc:	ldr	x9, [x25, #8]!
  45b8c0:	cmp	x9, #0x1
  45b8c4:	b.lt	45bb10 <_obstack_memory_used@@Base+0x1094c>  // b.tstop
  45b8c8:	mov	w11, #0x18                  	// #24
  45b8cc:	cmp	x2, #0x3f
  45b8d0:	madd	x8, x3, x11, x8
  45b8d4:	and	w9, w23, #0x2
  45b8d8:	mov	w10, #0x1                   	// #1
  45b8dc:	cset	w11, gt
  45b8e0:	add	x8, x8, #0x10
  45b8e4:	lsl	x10, x10, x2
  45b8e8:	stur	x8, [x29, #-8]
  45b8ec:	orr	w8, w11, w9, lsr #1
  45b8f0:	mov	x19, x4
  45b8f4:	mov	x20, x3
  45b8f8:	mov	x21, x2
  45b8fc:	mov	x22, x0
  45b900:	mov	x26, xzr
  45b904:	str	w8, [sp, #8]
  45b908:	mvn	w8, w10
  45b90c:	str	x10, [sp, #16]
  45b910:	str	w8, [sp, #12]
  45b914:	b	45b928 <_obstack_memory_used@@Base+0x10764>
  45b918:	ldr	x8, [x25]
  45b91c:	add	x26, x26, #0x1
  45b920:	cmp	x26, x8
  45b924:	b.ge	45bb10 <_obstack_memory_used@@Base+0x1094c>  // b.tcont
  45b928:	ldur	x8, [x29, #-8]
  45b92c:	ldr	x8, [x8]
  45b930:	ldr	x28, [x8, x26, lsl #3]
  45b934:	ldr	x8, [x24]
  45b938:	add	x8, x8, x28, lsl #4
  45b93c:	ldrb	w9, [x8, #8]
  45b940:	cmp	w9, #0x9
  45b944:	b.eq	45b97c <_obstack_memory_used@@Base+0x107b8>  // b.none
  45b948:	cmp	w9, #0x8
  45b94c:	b.eq	45b990 <_obstack_memory_used@@Base+0x107cc>  // b.none
  45b950:	cmp	w9, #0x4
  45b954:	b.ne	45b918 <_obstack_memory_used@@Base+0x10754>  // b.any
  45b958:	cmn	x19, #0x1
  45b95c:	b.eq	45b918 <_obstack_memory_used@@Base+0x10754>  // b.none
  45b960:	ldr	x8, [x22, #216]
  45b964:	cmp	x21, #0x3f
  45b968:	b.gt	45ba28 <_obstack_memory_used@@Base+0x10864>
  45b96c:	mov	w9, #0x28                  	// #40
  45b970:	madd	x8, x19, x9, x8
  45b974:	add	x27, x8, #0x22
  45b978:	b	45b9c8 <_obstack_memory_used@@Base+0x10804>
  45b97c:	tbz	w23, #1, 45b918 <_obstack_memory_used@@Base+0x10754>
  45b980:	ldr	x8, [x8]
  45b984:	cmp	x8, x21
  45b988:	b.ne	45b918 <_obstack_memory_used@@Base+0x10754>  // b.any
  45b98c:	b	45bb20 <_obstack_memory_used@@Base+0x1095c>
  45b990:	tbz	w23, #0, 45b918 <_obstack_memory_used@@Base+0x10754>
  45b994:	ldr	x8, [x8]
  45b998:	cmp	x8, x21
  45b99c:	b.ne	45b918 <_obstack_memory_used@@Base+0x10754>  // b.any
  45b9a0:	b	45bb28 <_obstack_memory_used@@Base+0x10964>
  45b9a4:	cmn	w0, #0x1
  45b9a8:	b.eq	45bb2c <_obstack_memory_used@@Base+0x10968>  // b.none
  45b9ac:	ldrh	w8, [x27]
  45b9b0:	ldr	w9, [sp, #12]
  45b9b4:	and	w8, w8, w9
  45b9b8:	strh	w8, [x27]
  45b9bc:	ldurb	w8, [x27, #-2]
  45b9c0:	add	x27, x27, #0x28
  45b9c4:	cbz	w8, 45b918 <_obstack_memory_used@@Base+0x10754>
  45b9c8:	ldur	x8, [x27, #-34]
  45b9cc:	cmp	x8, x28
  45b9d0:	b.ne	45b9bc <_obstack_memory_used@@Base+0x107f8>  // b.any
  45b9d4:	ldrh	w8, [x27]
  45b9d8:	ldr	x9, [sp, #16]
  45b9dc:	tst	x9, x8
  45b9e0:	b.eq	45b9bc <_obstack_memory_used@@Base+0x107f8>  // b.none
  45b9e4:	ldr	x8, [x24, #40]
  45b9e8:	mov	w9, #0x18                  	// #24
  45b9ec:	madd	x8, x28, x9, x8
  45b9f0:	ldr	x8, [x8, #16]
  45b9f4:	ldr	x3, [x8]
  45b9f8:	cmp	x3, x20
  45b9fc:	b.eq	45bb18 <_obstack_memory_used@@Base+0x10954>  // b.none
  45ba00:	mov	x0, x22
  45ba04:	mov	w1, w23
  45ba08:	mov	x2, x21
  45ba0c:	mov	x4, x19
  45ba10:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45ba14:	cbnz	w0, 45b9a4 <_obstack_memory_used@@Base+0x107e0>
  45ba18:	ldr	w8, [sp, #8]
  45ba1c:	cbz	w8, 45b9ac <_obstack_memory_used@@Base+0x107e8>
  45ba20:	tbz	w23, #1, 45b9bc <_obstack_memory_used@@Base+0x107f8>
  45ba24:	b	45bb20 <_obstack_memory_used@@Base+0x1095c>
  45ba28:	ldr	w9, [sp, #8]
  45ba2c:	tbz	w9, #0, 45ba98 <_obstack_memory_used@@Base+0x108d4>
  45ba30:	mov	w9, #0x28                  	// #40
  45ba34:	madd	x27, x19, x9, x8
  45ba38:	b	45ba4c <_obstack_memory_used@@Base+0x10888>
  45ba3c:	tbnz	w23, #1, 45bb20 <_obstack_memory_used@@Base+0x1095c>
  45ba40:	ldrb	w8, [x27, #32]
  45ba44:	add	x27, x27, #0x28
  45ba48:	cbz	w8, 45b918 <_obstack_memory_used@@Base+0x10754>
  45ba4c:	ldr	x8, [x27]
  45ba50:	cmp	x8, x28
  45ba54:	b.ne	45ba40 <_obstack_memory_used@@Base+0x1087c>  // b.any
  45ba58:	ldr	x8, [x24, #40]
  45ba5c:	mov	w9, #0x18                  	// #24
  45ba60:	madd	x8, x28, x9, x8
  45ba64:	ldr	x8, [x8, #16]
  45ba68:	ldr	x3, [x8]
  45ba6c:	cmp	x3, x20
  45ba70:	b.eq	45bb18 <_obstack_memory_used@@Base+0x10954>  // b.none
  45ba74:	mov	x0, x22
  45ba78:	mov	w1, w23
  45ba7c:	mov	x2, x21
  45ba80:	mov	x4, x19
  45ba84:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45ba88:	cbz	w0, 45ba3c <_obstack_memory_used@@Base+0x10878>
  45ba8c:	cmn	w0, #0x1
  45ba90:	b.ne	45ba40 <_obstack_memory_used@@Base+0x1087c>  // b.any
  45ba94:	b	45bb2c <_obstack_memory_used@@Base+0x10968>
  45ba98:	mov	w9, #0x28                  	// #40
  45ba9c:	madd	x8, x19, x9, x8
  45baa0:	add	x27, x8, #0x22
  45baa4:	b	45bac4 <_obstack_memory_used@@Base+0x10900>
  45baa8:	ldrh	w8, [x27]
  45baac:	ldr	w9, [sp, #12]
  45bab0:	and	w8, w8, w9
  45bab4:	strh	w8, [x27]
  45bab8:	ldurb	w8, [x27, #-2]
  45babc:	add	x27, x27, #0x28
  45bac0:	cbz	w8, 45b918 <_obstack_memory_used@@Base+0x10754>
  45bac4:	ldur	x8, [x27, #-34]
  45bac8:	cmp	x8, x28
  45bacc:	b.ne	45bab8 <_obstack_memory_used@@Base+0x108f4>  // b.any
  45bad0:	ldr	x8, [x24, #40]
  45bad4:	mov	w9, #0x18                  	// #24
  45bad8:	madd	x8, x28, x9, x8
  45badc:	ldr	x8, [x8, #16]
  45bae0:	ldr	x3, [x8]
  45bae4:	cmp	x3, x20
  45bae8:	b.eq	45bb18 <_obstack_memory_used@@Base+0x10954>  // b.none
  45baec:	mov	x0, x22
  45baf0:	mov	w1, w23
  45baf4:	mov	x2, x21
  45baf8:	mov	x4, x19
  45bafc:	bl	45b888 <_obstack_memory_used@@Base+0x106c4>
  45bb00:	cbz	w0, 45baa8 <_obstack_memory_used@@Base+0x108e4>
  45bb04:	cmn	w0, #0x1
  45bb08:	b.ne	45bab8 <_obstack_memory_used@@Base+0x108f4>  // b.any
  45bb0c:	b	45bb2c <_obstack_memory_used@@Base+0x10968>
  45bb10:	ubfx	w0, w23, #1, #1
  45bb14:	b	45bb2c <_obstack_memory_used@@Base+0x10968>
  45bb18:	sbfx	w0, w23, #0, #1
  45bb1c:	b	45bb2c <_obstack_memory_used@@Base+0x10968>
  45bb20:	mov	w0, wzr
  45bb24:	b	45bb2c <_obstack_memory_used@@Base+0x10968>
  45bb28:	mov	w0, #0xffffffff            	// #-1
  45bb2c:	ldp	x20, x19, [sp, #112]
  45bb30:	ldp	x22, x21, [sp, #96]
  45bb34:	ldp	x24, x23, [sp, #80]
  45bb38:	ldp	x26, x25, [sp, #64]
  45bb3c:	ldp	x28, x27, [sp, #48]
  45bb40:	ldp	x29, x30, [sp, #32]
  45bb44:	add	sp, sp, #0x80
  45bb48:	ret
  45bb4c:	stp	x29, x30, [sp, #-48]!
  45bb50:	stp	x20, x19, [sp, #32]
  45bb54:	mov	x19, x0
  45bb58:	stp	x22, x21, [sp, #16]
  45bb5c:	mov	x29, sp
  45bb60:	cbz	x0, 45bb90 <_obstack_memory_used@@Base+0x109cc>
  45bb64:	mov	x0, x19
  45bb68:	bl	403f00 <strlen@plt>
  45bb6c:	add	x20, x0, #0x1
  45bb70:	cmp	x20, #0x76
  45bb74:	b.ls	45bb94 <_obstack_memory_used@@Base+0x109d0>  // b.plast
  45bb78:	add	x8, x0, #0x12
  45bb7c:	and	x0, x8, #0xfffffffffffffff8
  45bb80:	bl	404210 <malloc@plt>
  45bb84:	mov	x21, x0
  45bb88:	cbnz	x0, 45bba4 <_obstack_memory_used@@Base+0x109e0>
  45bb8c:	b	45bbd4 <_obstack_memory_used@@Base+0x10a10>
  45bb90:	mov	x20, xzr
  45bb94:	mov	w0, #0x80                  	// #128
  45bb98:	bl	404210 <malloc@plt>
  45bb9c:	mov	x21, x0
  45bba0:	cbz	x0, 45bbd4 <_obstack_memory_used@@Base+0x10a10>
  45bba4:	cmp	x19, #0x0
  45bba8:	mov	x22, x21
  45bbac:	cset	w8, ne  // ne = any
  45bbb0:	str	xzr, [x21]
  45bbb4:	strb	w8, [x21, #8]
  45bbb8:	strb	wzr, [x22, #9]!
  45bbbc:	cbz	x19, 45bbd4 <_obstack_memory_used@@Base+0x10a10>
  45bbc0:	mov	x0, x22
  45bbc4:	mov	x1, x19
  45bbc8:	mov	x2, x20
  45bbcc:	bl	403e80 <memcpy@plt>
  45bbd0:	strb	wzr, [x22, x20]
  45bbd4:	mov	x0, x21
  45bbd8:	ldp	x20, x19, [sp, #32]
  45bbdc:	ldp	x22, x21, [sp, #16]
  45bbe0:	ldp	x29, x30, [sp], #48
  45bbe4:	ret
  45bbe8:	stp	x29, x30, [sp, #-32]!
  45bbec:	cmp	x0, #0x2
  45bbf0:	str	x19, [sp, #16]
  45bbf4:	mov	x29, sp
  45bbf8:	b.cc	45bc0c <_obstack_memory_used@@Base+0x10a48>  // b.lo, b.ul, b.last
  45bbfc:	ldr	x19, [x0]
  45bc00:	bl	4046b0 <free@plt>
  45bc04:	mov	x0, x19
  45bc08:	cbnz	x19, 45bbfc <_obstack_memory_used@@Base+0x10a38>
  45bc0c:	ldr	x19, [sp, #16]
  45bc10:	ldp	x29, x30, [sp], #32
  45bc14:	ret
  45bc18:	stp	x29, x30, [sp, #-96]!
  45bc1c:	stp	x22, x21, [sp, #64]
  45bc20:	stp	x20, x19, [sp, #80]
  45bc24:	mov	x19, x2
  45bc28:	mov	x22, x1
  45bc2c:	str	x27, [sp, #16]
  45bc30:	stp	x26, x25, [sp, #32]
  45bc34:	stp	x24, x23, [sp, #48]
  45bc38:	mov	x29, sp
  45bc3c:	cbz	x0, 45bc9c <_obstack_memory_used@@Base+0x10ad8>
  45bc40:	mov	x21, x0
  45bc44:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45bc48:	add	x0, x0, #0xf9a
  45bc4c:	bl	4049e0 <getenv@plt>
  45bc50:	ldrb	w26, [x21, #8]
  45bc54:	mov	x23, x0
  45bc58:	cbz	x0, 45bcc0 <_obstack_memory_used@@Base+0x10afc>
  45bc5c:	cbz	w26, 45bc70 <_obstack_memory_used@@Base+0x10aac>
  45bc60:	add	x0, x21, #0x9
  45bc64:	mov	x1, x23
  45bc68:	bl	404610 <strcmp@plt>
  45bc6c:	cbz	w0, 45bd58 <_obstack_memory_used@@Base+0x10b94>
  45bc70:	mov	x0, x23
  45bc74:	bl	403f00 <strlen@plt>
  45bc78:	add	x24, x0, #0x1
  45bc7c:	cmp	x24, #0x76
  45bc80:	mov	w27, #0x1                   	// #1
  45bc84:	b.ls	45bccc <_obstack_memory_used@@Base+0x10b08>  // b.plast
  45bc88:	add	x8, x0, #0x12
  45bc8c:	and	x0, x8, #0xfffffffffffffff8
  45bc90:	bl	404210 <malloc@plt>
  45bc94:	cbnz	x0, 45bcd8 <_obstack_memory_used@@Base+0x10b14>
  45bc98:	b	45bd50 <_obstack_memory_used@@Base+0x10b8c>
  45bc9c:	mov	x0, x22
  45bca0:	mov	x1, x19
  45bca4:	ldp	x20, x19, [sp, #80]
  45bca8:	ldp	x22, x21, [sp, #64]
  45bcac:	ldp	x24, x23, [sp, #48]
  45bcb0:	ldp	x26, x25, [sp, #32]
  45bcb4:	ldr	x27, [sp, #16]
  45bcb8:	ldp	x29, x30, [sp], #96
  45bcbc:	b	404360 <gmtime_r@plt>
  45bcc0:	cbz	w26, 45bd58 <_obstack_memory_used@@Base+0x10b94>
  45bcc4:	mov	w27, wzr
  45bcc8:	mov	x24, xzr
  45bccc:	mov	w0, #0x80                  	// #128
  45bcd0:	bl	404210 <malloc@plt>
  45bcd4:	cbz	x0, 45bd50 <_obstack_memory_used@@Base+0x10b8c>
  45bcd8:	mov	x25, x0
  45bcdc:	mov	x20, x0
  45bce0:	str	xzr, [x0]
  45bce4:	strb	w27, [x0, #8]
  45bce8:	strb	wzr, [x25, #9]!
  45bcec:	cbz	w27, 45bd08 <_obstack_memory_used@@Base+0x10b44>
  45bcf0:	mov	x0, x25
  45bcf4:	mov	x1, x23
  45bcf8:	mov	x2, x24
  45bcfc:	bl	403e80 <memcpy@plt>
  45bd00:	strb	wzr, [x25, x24]
  45bd04:	ldrb	w26, [x21, #8]
  45bd08:	cbz	w26, 45bddc <_obstack_memory_used@@Base+0x10c18>
  45bd0c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45bd10:	add	x1, x21, #0x9
  45bd14:	add	x0, x0, #0xf9a
  45bd18:	mov	w2, #0x1                   	// #1
  45bd1c:	bl	404010 <setenv@plt>
  45bd20:	cbz	w0, 45bdec <_obstack_memory_used@@Base+0x10c28>
  45bd24:	bl	4049c0 <__errno_location@plt>
  45bd28:	ldr	w21, [x0]
  45bd2c:	mov	x19, x0
  45bd30:	cmp	x20, #0x2
  45bd34:	b.cc	45bd4c <_obstack_memory_used@@Base+0x10b88>  // b.lo, b.ul, b.last
  45bd38:	ldr	x22, [x20]
  45bd3c:	mov	x0, x20
  45bd40:	bl	4046b0 <free@plt>
  45bd44:	mov	x20, x22
  45bd48:	cbnz	x22, 45bd38 <_obstack_memory_used@@Base+0x10b74>
  45bd4c:	str	w21, [x19]
  45bd50:	mov	x0, xzr
  45bd54:	b	45be1c <_obstack_memory_used@@Base+0x10c58>
  45bd58:	mov	w20, #0x1                   	// #1
  45bd5c:	mov	x0, x22
  45bd60:	mov	x1, x19
  45bd64:	bl	404000 <localtime_r@plt>
  45bd68:	cbz	x0, 45be00 <_obstack_memory_used@@Base+0x10c3c>
  45bd6c:	mov	x0, x21
  45bd70:	mov	x1, x19
  45bd74:	bl	45be5c <_obstack_memory_used@@Base+0x10c98>
  45bd78:	eor	w22, w0, #0x1
  45bd7c:	cmp	x20, #0x1
  45bd80:	b.eq	45be0c <_obstack_memory_used@@Base+0x10c48>  // b.none
  45bd84:	bl	4049c0 <__errno_location@plt>
  45bd88:	ldrb	w8, [x20, #8]
  45bd8c:	ldr	w23, [x0]
  45bd90:	mov	x21, x0
  45bd94:	cbz	w8, 45be38 <_obstack_memory_used@@Base+0x10c74>
  45bd98:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45bd9c:	add	x1, x20, #0x9
  45bda0:	add	x0, x0, #0xf9a
  45bda4:	mov	w2, #0x1                   	// #1
  45bda8:	bl	404010 <setenv@plt>
  45bdac:	cbz	w0, 45be48 <_obstack_memory_used@@Base+0x10c84>
  45bdb0:	ldr	w23, [x21]
  45bdb4:	mov	w24, wzr
  45bdb8:	cmp	x20, #0x2
  45bdbc:	b.cc	45bdd4 <_obstack_memory_used@@Base+0x10c10>  // b.lo, b.ul, b.last
  45bdc0:	ldr	x25, [x20]
  45bdc4:	mov	x0, x20
  45bdc8:	bl	4046b0 <free@plt>
  45bdcc:	mov	x20, x25
  45bdd0:	cbnz	x25, 45bdc0 <_obstack_memory_used@@Base+0x10bfc>
  45bdd4:	str	w23, [x21]
  45bdd8:	b	45be10 <_obstack_memory_used@@Base+0x10c4c>
  45bddc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45bde0:	add	x0, x0, #0xf9a
  45bde4:	bl	404810 <unsetenv@plt>
  45bde8:	cbnz	w0, 45bd24 <_obstack_memory_used@@Base+0x10b60>
  45bdec:	bl	404260 <tzset@plt>
  45bdf0:	mov	x0, x22
  45bdf4:	mov	x1, x19
  45bdf8:	bl	404000 <localtime_r@plt>
  45bdfc:	cbnz	x0, 45bd6c <_obstack_memory_used@@Base+0x10ba8>
  45be00:	mov	w22, #0x1                   	// #1
  45be04:	cmp	x20, #0x1
  45be08:	b.ne	45bd84 <_obstack_memory_used@@Base+0x10bc0>  // b.any
  45be0c:	mov	w24, #0x1                   	// #1
  45be10:	orn	w8, w22, w24
  45be14:	tst	w8, #0x1
  45be18:	csel	x0, xzr, x19, ne  // ne = any
  45be1c:	ldp	x20, x19, [sp, #80]
  45be20:	ldp	x22, x21, [sp, #64]
  45be24:	ldp	x24, x23, [sp, #48]
  45be28:	ldp	x26, x25, [sp, #32]
  45be2c:	ldr	x27, [sp, #16]
  45be30:	ldp	x29, x30, [sp], #96
  45be34:	ret
  45be38:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45be3c:	add	x0, x0, #0xf9a
  45be40:	bl	404810 <unsetenv@plt>
  45be44:	cbnz	w0, 45bdb0 <_obstack_memory_used@@Base+0x10bec>
  45be48:	bl	404260 <tzset@plt>
  45be4c:	mov	w24, #0x1                   	// #1
  45be50:	cmp	x20, #0x2
  45be54:	b.cs	45bdc0 <_obstack_memory_used@@Base+0x10bfc>  // b.hs, b.nlast
  45be58:	b	45bdd4 <_obstack_memory_used@@Base+0x10c10>
  45be5c:	stp	x29, x30, [sp, #-64]!
  45be60:	stp	x24, x23, [sp, #16]
  45be64:	stp	x22, x21, [sp, #32]
  45be68:	stp	x20, x19, [sp, #48]
  45be6c:	ldr	x21, [x1, #48]
  45be70:	mov	x29, sp
  45be74:	cbz	x21, 45bf04 <_obstack_memory_used@@Base+0x10d40>
  45be78:	mov	x19, x1
  45be7c:	mov	x20, x0
  45be80:	cmp	x21, x1
  45be84:	b.cc	45be94 <_obstack_memory_used@@Base+0x10cd0>  // b.lo, b.ul, b.last
  45be88:	add	x8, x19, #0x38
  45be8c:	cmp	x21, x8
  45be90:	b.cc	45bf04 <_obstack_memory_used@@Base+0x10d40>  // b.lo, b.ul, b.last
  45be94:	ldrb	w8, [x21]
  45be98:	cbz	w8, 45bef8 <_obstack_memory_used@@Base+0x10d34>
  45be9c:	add	x22, x20, #0x9
  45bea0:	mov	x0, x22
  45bea4:	mov	x1, x21
  45bea8:	bl	404610 <strcmp@plt>
  45beac:	cbz	w0, 45bf00 <_obstack_memory_used@@Base+0x10d3c>
  45beb0:	ldrb	w8, [x22]
  45beb4:	cbnz	w8, 45becc <_obstack_memory_used@@Base+0x10d08>
  45beb8:	add	x24, x20, #0x9
  45bebc:	cmp	x22, x24
  45bec0:	b.ne	45bf20 <_obstack_memory_used@@Base+0x10d5c>  // b.any
  45bec4:	ldrb	w8, [x20, #8]
  45bec8:	cbz	w8, 45bf1c <_obstack_memory_used@@Base+0x10d58>
  45becc:	mov	x0, x22
  45bed0:	bl	403f00 <strlen@plt>
  45bed4:	add	x22, x0, x22
  45bed8:	ldrb	w8, [x22, #1]!
  45bedc:	cbnz	w8, 45bea0 <_obstack_memory_used@@Base+0x10cdc>
  45bee0:	ldr	x8, [x20]
  45bee4:	add	x9, x8, #0x9
  45bee8:	cmp	x8, #0x0
  45beec:	csel	x22, x22, x9, eq  // eq = none
  45bef0:	csel	x20, x20, x8, eq  // eq = none
  45bef4:	b	45bea0 <_obstack_memory_used@@Base+0x10cdc>
  45bef8:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x1be3c>
  45befc:	add	x22, x22, #0xb36
  45bf00:	str	x22, [x19, #48]
  45bf04:	mov	w0, #0x1                   	// #1
  45bf08:	ldp	x20, x19, [sp, #48]
  45bf0c:	ldp	x22, x21, [sp, #32]
  45bf10:	ldp	x24, x23, [sp, #16]
  45bf14:	ldp	x29, x30, [sp], #64
  45bf18:	ret
  45bf1c:	mov	x24, x22
  45bf20:	mov	x0, x21
  45bf24:	bl	403f00 <strlen@plt>
  45bf28:	sub	x8, x22, x24
  45bf2c:	add	x23, x0, #0x1
  45bf30:	mvn	x9, x8
  45bf34:	cmp	x23, x9
  45bf38:	b.ls	45bf54 <_obstack_memory_used@@Base+0x10d90>  // b.plast
  45bf3c:	bl	4049c0 <__errno_location@plt>
  45bf40:	mov	x8, x0
  45bf44:	mov	w9, #0xc                   	// #12
  45bf48:	mov	w0, wzr
  45bf4c:	str	w9, [x8]
  45bf50:	b	45bf08 <_obstack_memory_used@@Base+0x10d44>
  45bf54:	add	x8, x23, x8
  45bf58:	cmp	x8, #0x76
  45bf5c:	b.hi	45bf78 <_obstack_memory_used@@Base+0x10db4>  // b.pmore
  45bf60:	mov	x0, x22
  45bf64:	mov	x1, x21
  45bf68:	mov	x2, x23
  45bf6c:	bl	403e80 <memcpy@plt>
  45bf70:	strb	wzr, [x22, x23]
  45bf74:	b	45bf00 <_obstack_memory_used@@Base+0x10d3c>
  45bf78:	add	x8, x0, #0x12
  45bf7c:	cmp	x23, #0x77
  45bf80:	and	x8, x8, #0xfffffffffffffff8
  45bf84:	mov	w9, #0x80                  	// #128
  45bf88:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  45bf8c:	bl	404210 <malloc@plt>
  45bf90:	cbz	x0, 45bfc8 <_obstack_memory_used@@Base+0x10e04>
  45bf94:	mov	w8, #0x1                   	// #1
  45bf98:	add	x22, x0, #0x9
  45bf9c:	mov	x24, x0
  45bfa0:	str	xzr, [x0]
  45bfa4:	strh	w8, [x0, #8]
  45bfa8:	mov	x0, x22
  45bfac:	mov	x1, x21
  45bfb0:	mov	x2, x23
  45bfb4:	bl	403e80 <memcpy@plt>
  45bfb8:	strb	wzr, [x22, x23]
  45bfbc:	str	x24, [x20]
  45bfc0:	strb	wzr, [x24, #8]
  45bfc4:	b	45bf00 <_obstack_memory_used@@Base+0x10d3c>
  45bfc8:	str	xzr, [x20]
  45bfcc:	b	45bf08 <_obstack_memory_used@@Base+0x10d44>
  45bfd0:	sub	sp, sp, #0x90
  45bfd4:	stp	x20, x19, [sp, #128]
  45bfd8:	mov	x20, x1
  45bfdc:	stp	x29, x30, [sp, #64]
  45bfe0:	stp	x26, x25, [sp, #80]
  45bfe4:	stp	x24, x23, [sp, #96]
  45bfe8:	stp	x22, x21, [sp, #112]
  45bfec:	add	x29, sp, #0x40
  45bff0:	cbz	x0, 45c050 <_obstack_memory_used@@Base+0x10e8c>
  45bff4:	mov	x21, x0
  45bff8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45bffc:	add	x0, x0, #0xf9a
  45c000:	bl	4049e0 <getenv@plt>
  45c004:	ldrb	w25, [x21, #8]
  45c008:	mov	x22, x0
  45c00c:	cbz	x0, 45c070 <_obstack_memory_used@@Base+0x10eac>
  45c010:	cbz	w25, 45c024 <_obstack_memory_used@@Base+0x10e60>
  45c014:	add	x0, x21, #0x9
  45c018:	mov	x1, x22
  45c01c:	bl	404610 <strcmp@plt>
  45c020:	cbz	w0, 45c104 <_obstack_memory_used@@Base+0x10f40>
  45c024:	mov	x0, x22
  45c028:	bl	403f00 <strlen@plt>
  45c02c:	add	x23, x0, #0x1
  45c030:	cmp	x23, #0x76
  45c034:	mov	w26, #0x1                   	// #1
  45c038:	b.ls	45c07c <_obstack_memory_used@@Base+0x10eb8>  // b.plast
  45c03c:	add	x8, x0, #0x12
  45c040:	and	x0, x8, #0xfffffffffffffff8
  45c044:	bl	404210 <malloc@plt>
  45c048:	cbnz	x0, 45c088 <_obstack_memory_used@@Base+0x10ec4>
  45c04c:	b	45c234 <_obstack_memory_used@@Base+0x11070>
  45c050:	mov	x0, x20
  45c054:	ldp	x20, x19, [sp, #128]
  45c058:	ldp	x22, x21, [sp, #112]
  45c05c:	ldp	x24, x23, [sp, #96]
  45c060:	ldp	x26, x25, [sp, #80]
  45c064:	ldp	x29, x30, [sp, #64]
  45c068:	add	sp, sp, #0x90
  45c06c:	b	404a30 <timegm@plt>
  45c070:	cbz	w25, 45c104 <_obstack_memory_used@@Base+0x10f40>
  45c074:	mov	w26, wzr
  45c078:	mov	x23, xzr
  45c07c:	mov	w0, #0x80                  	// #128
  45c080:	bl	404210 <malloc@plt>
  45c084:	cbz	x0, 45c234 <_obstack_memory_used@@Base+0x11070>
  45c088:	mov	x24, x0
  45c08c:	mov	x19, x0
  45c090:	str	xzr, [x0]
  45c094:	strb	w26, [x0, #8]
  45c098:	strb	wzr, [x24, #9]!
  45c09c:	cbz	w26, 45c0b8 <_obstack_memory_used@@Base+0x10ef4>
  45c0a0:	mov	x0, x24
  45c0a4:	mov	x1, x22
  45c0a8:	mov	x2, x23
  45c0ac:	bl	403e80 <memcpy@plt>
  45c0b0:	strb	wzr, [x24, x23]
  45c0b4:	ldrb	w25, [x21, #8]
  45c0b8:	cbz	w25, 45c10c <_obstack_memory_used@@Base+0x10f48>
  45c0bc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45c0c0:	add	x1, x21, #0x9
  45c0c4:	add	x0, x0, #0xf9a
  45c0c8:	mov	w2, #0x1                   	// #1
  45c0cc:	bl	404010 <setenv@plt>
  45c0d0:	cbz	w0, 45c11c <_obstack_memory_used@@Base+0x10f58>
  45c0d4:	bl	4049c0 <__errno_location@plt>
  45c0d8:	ldr	w21, [x0]
  45c0dc:	mov	x20, x0
  45c0e0:	cmp	x19, #0x2
  45c0e4:	b.cc	45c0fc <_obstack_memory_used@@Base+0x10f38>  // b.lo, b.ul, b.last
  45c0e8:	ldr	x22, [x19]
  45c0ec:	mov	x0, x19
  45c0f0:	bl	4046b0 <free@plt>
  45c0f4:	mov	x19, x22
  45c0f8:	cbnz	x22, 45c0e8 <_obstack_memory_used@@Base+0x10f24>
  45c0fc:	str	w21, [x20]
  45c100:	b	45c234 <_obstack_memory_used@@Base+0x11070>
  45c104:	mov	w19, #0x1                   	// #1
  45c108:	b	45c120 <_obstack_memory_used@@Base+0x10f5c>
  45c10c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45c110:	add	x0, x0, #0xf9a
  45c114:	bl	404810 <unsetenv@plt>
  45c118:	cbnz	w0, 45c0d4 <_obstack_memory_used@@Base+0x10f10>
  45c11c:	bl	404260 <tzset@plt>
  45c120:	mov	x0, x20
  45c124:	bl	404510 <mktime@plt>
  45c128:	cmn	x0, #0x1
  45c12c:	stur	x0, [x29, #-8]
  45c130:	b.eq	45c150 <_obstack_memory_used@@Base+0x10f8c>  // b.none
  45c134:	mov	x0, x21
  45c138:	mov	x1, x20
  45c13c:	bl	45be5c <_obstack_memory_used@@Base+0x10c98>
  45c140:	tbnz	w0, #0, 45c1cc <_obstack_memory_used@@Base+0x11008>
  45c144:	mov	x8, #0xffffffffffffffff    	// #-1
  45c148:	stur	x8, [x29, #-8]
  45c14c:	b	45c1cc <_obstack_memory_used@@Base+0x11008>
  45c150:	sub	x0, x29, #0x8
  45c154:	mov	x1, sp
  45c158:	bl	404000 <localtime_r@plt>
  45c15c:	cbz	x0, 45c1cc <_obstack_memory_used@@Base+0x11008>
  45c160:	ldr	q0, [x20]
  45c164:	ldr	q1, [sp]
  45c168:	ldr	w12, [x20, #32]
  45c16c:	ldp	w8, w9, [x20, #16]
  45c170:	ldp	w10, w11, [sp, #16]
  45c174:	ldr	w13, [sp, #32]
  45c178:	eor	v0.16b, v1.16b, v0.16b
  45c17c:	cmp	w12, #0x0
  45c180:	ext	v1.16b, v0.16b, v0.16b, #8
  45c184:	eor	w8, w10, w8
  45c188:	eor	w9, w11, w9
  45c18c:	orr	w10, w13, w12
  45c190:	cset	w11, eq  // eq = none
  45c194:	cmp	w13, #0x0
  45c198:	orr	v0.16b, v0.16b, v1.16b
  45c19c:	cset	w12, eq  // eq = none
  45c1a0:	cmp	w10, #0x0
  45c1a4:	dup	v1.4s, v0.s[1]
  45c1a8:	eor	w10, w11, w12
  45c1ac:	cset	w11, ge  // ge = tcont
  45c1b0:	orr	v0.16b, v0.16b, v1.16b
  45c1b4:	and	w10, w11, w10
  45c1b8:	fmov	w11, s0
  45c1bc:	orr	w8, w11, w8
  45c1c0:	orr	w8, w8, w9
  45c1c4:	orr	w8, w8, w10
  45c1c8:	cbz	w8, 45c134 <_obstack_memory_used@@Base+0x10f70>
  45c1cc:	cmp	x19, #0x1
  45c1d0:	b.eq	45c22c <_obstack_memory_used@@Base+0x11068>  // b.none
  45c1d4:	bl	4049c0 <__errno_location@plt>
  45c1d8:	ldrb	w8, [x19, #8]
  45c1dc:	ldr	w21, [x0]
  45c1e0:	mov	x20, x0
  45c1e4:	cbz	w8, 45c254 <_obstack_memory_used@@Base+0x11090>
  45c1e8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45c1ec:	add	x1, x19, #0x9
  45c1f0:	add	x0, x0, #0xf9a
  45c1f4:	mov	w2, #0x1                   	// #1
  45c1f8:	bl	404010 <setenv@plt>
  45c1fc:	cbz	w0, 45c264 <_obstack_memory_used@@Base+0x110a0>
  45c200:	ldr	w21, [x20]
  45c204:	mov	w22, wzr
  45c208:	cmp	x19, #0x2
  45c20c:	b.cc	45c224 <_obstack_memory_used@@Base+0x11060>  // b.lo, b.ul, b.last
  45c210:	ldr	x23, [x19]
  45c214:	mov	x0, x19
  45c218:	bl	4046b0 <free@plt>
  45c21c:	mov	x19, x23
  45c220:	cbnz	x23, 45c210 <_obstack_memory_used@@Base+0x1104c>
  45c224:	str	w21, [x20]
  45c228:	tbz	w22, #0, 45c234 <_obstack_memory_used@@Base+0x11070>
  45c22c:	ldur	x0, [x29, #-8]
  45c230:	b	45c238 <_obstack_memory_used@@Base+0x11074>
  45c234:	mov	x0, #0xffffffffffffffff    	// #-1
  45c238:	ldp	x20, x19, [sp, #128]
  45c23c:	ldp	x22, x21, [sp, #112]
  45c240:	ldp	x24, x23, [sp, #96]
  45c244:	ldp	x26, x25, [sp, #80]
  45c248:	ldp	x29, x30, [sp, #64]
  45c24c:	add	sp, sp, #0x90
  45c250:	ret
  45c254:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x1de3c>
  45c258:	add	x0, x0, #0xf9a
  45c25c:	bl	404810 <unsetenv@plt>
  45c260:	cbnz	w0, 45c200 <_obstack_memory_used@@Base+0x1103c>
  45c264:	bl	404260 <tzset@plt>
  45c268:	mov	w22, #0x1                   	// #1
  45c26c:	cmp	x19, #0x2
  45c270:	b.cs	45c210 <_obstack_memory_used@@Base+0x1104c>  // b.hs, b.nlast
  45c274:	b	45c224 <_obstack_memory_used@@Base+0x11060>
  45c278:	mov	w8, w0
  45c27c:	cmp	w0, #0x26
  45c280:	mov	w0, wzr
  45c284:	b.hi	45c2a4 <_obstack_memory_used@@Base+0x110e0>  // b.pmore
  45c288:	mov	w9, w8
  45c28c:	mov	w10, #0x1                   	// #1
  45c290:	lsl	x9, x10, x9
  45c294:	mov	x10, #0x410000              	// #4259840
  45c298:	movk	x10, #0x40, lsl #32
  45c29c:	tst	x9, x10
  45c2a0:	b.ne	45c2ac <_obstack_memory_used@@Base+0x110e8>  // b.any
  45c2a4:	cmp	w8, #0x5f
  45c2a8:	b.ne	45c2b0 <_obstack_memory_used@@Base+0x110ec>  // b.any
  45c2ac:	ret
  45c2b0:	mov	w0, #0x1                   	// #1
  45c2b4:	ret
  45c2b8:	stp	x29, x30, [sp, #-64]!
  45c2bc:	str	x23, [sp, #16]
  45c2c0:	mov	x23, x0
  45c2c4:	mov	w0, #0x48                  	// #72
  45c2c8:	stp	x22, x21, [sp, #32]
  45c2cc:	stp	x20, x19, [sp, #48]
  45c2d0:	mov	x29, sp
  45c2d4:	mov	x20, x3
  45c2d8:	mov	x21, x2
  45c2dc:	mov	x22, x1
  45c2e0:	bl	404210 <malloc@plt>
  45c2e4:	mov	x19, x0
  45c2e8:	cbz	x0, 45c320 <_obstack_memory_used@@Base+0x1115c>
  45c2ec:	mov	w0, #0xc8                  	// #200
  45c2f0:	stp	x23, x22, [x19]
  45c2f4:	stp	x21, x20, [x19, #16]
  45c2f8:	stp	xzr, xzr, [x19, #32]
  45c2fc:	bl	404210 <malloc@plt>
  45c300:	str	x0, [x19, #48]
  45c304:	cbz	x0, 45c314 <_obstack_memory_used@@Base+0x11150>
  45c308:	add	x8, x0, #0xc8
  45c30c:	stp	x0, x8, [x19, #56]
  45c310:	b	45c320 <_obstack_memory_used@@Base+0x1115c>
  45c314:	mov	x0, x19
  45c318:	bl	4046b0 <free@plt>
  45c31c:	mov	x19, xzr
  45c320:	mov	x0, x19
  45c324:	ldp	x20, x19, [sp, #48]
  45c328:	ldp	x22, x21, [sp, #32]
  45c32c:	ldr	x23, [sp, #16]
  45c330:	ldp	x29, x30, [sp], #64
  45c334:	ret
  45c338:	stp	x29, x30, [sp, #-32]!
  45c33c:	str	x19, [sp, #16]
  45c340:	mov	x29, sp
  45c344:	mov	x19, x0
  45c348:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  45c34c:	ldp	x0, x8, [x19, #48]
  45c350:	subs	x2, x8, x0
  45c354:	b.ls	45c364 <_obstack_memory_used@@Base+0x111a0>  // b.plast
  45c358:	ldr	x3, [x19]
  45c35c:	mov	w1, #0x1                   	// #1
  45c360:	bl	403ee0 <fwrite_unlocked@plt>
  45c364:	ldr	x0, [x19, #48]
  45c368:	bl	4046b0 <free@plt>
  45c36c:	mov	x0, x19
  45c370:	ldr	x19, [sp, #16]
  45c374:	ldp	x29, x30, [sp], #32
  45c378:	b	4046b0 <free@plt>
  45c37c:	sub	sp, sp, #0x70
  45c380:	stp	x29, x30, [sp, #16]
  45c384:	stp	x28, x27, [sp, #32]
  45c388:	stp	x26, x25, [sp, #48]
  45c38c:	stp	x24, x23, [sp, #64]
  45c390:	stp	x22, x21, [sp, #80]
  45c394:	stp	x20, x19, [sp, #96]
  45c398:	ldr	x8, [x0, #32]
  45c39c:	ldp	x9, x27, [x0, #48]
  45c3a0:	mov	x19, x0
  45c3a4:	add	x29, sp, #0x10
  45c3a8:	add	x21, x9, x8
  45c3ac:	cmp	x21, x27
  45c3b0:	b.cs	45c848 <_obstack_memory_used@@Base+0x11684>  // b.hs, b.nlast
  45c3b4:	ldr	x23, [x19, #40]
  45c3b8:	mov	w25, #0x20                  	// #32
  45c3bc:	b	45c3d8 <_obstack_memory_used@@Base+0x11214>
  45c3c0:	mov	x23, xzr
  45c3c4:	add	x20, x24, #0x1
  45c3c8:	str	xzr, [x19, #40]
  45c3cc:	cmp	x20, x27
  45c3d0:	mov	x21, x20
  45c3d4:	b.cs	45c848 <_obstack_memory_used@@Base+0x11684>  // b.hs, b.nlast
  45c3d8:	cbnz	x23, 45c434 <_obstack_memory_used@@Base+0x11270>
  45c3dc:	ldr	x23, [x19, #8]
  45c3e0:	cbz	x23, 45c434 <_obstack_memory_used@@Base+0x11270>
  45c3e4:	ldr	x8, [x19, #64]
  45c3e8:	add	x9, x27, x23
  45c3ec:	mov	x20, x23
  45c3f0:	cmp	x9, x8
  45c3f4:	b.cs	45c46c <_obstack_memory_used@@Base+0x112a8>  // b.hs, b.nlast
  45c3f8:	add	x20, x21, x23
  45c3fc:	sub	x2, x27, x21
  45c400:	mov	x0, x20
  45c404:	mov	x1, x21
  45c408:	bl	403e90 <memmove@plt>
  45c40c:	ldr	x8, [x19, #56]
  45c410:	mov	w1, #0x20                  	// #32
  45c414:	mov	x0, x21
  45c418:	mov	x2, x23
  45c41c:	add	x8, x8, x23
  45c420:	str	x8, [x19, #56]
  45c424:	bl	404320 <memset@plt>
  45c428:	mov	x21, x20
  45c42c:	ldr	x27, [x19, #56]
  45c430:	str	x23, [x19, #40]
  45c434:	sub	x26, x27, x21
  45c438:	mov	w1, #0xa                   	// #10
  45c43c:	mov	x0, x21
  45c440:	mov	x2, x26
  45c444:	bl	404840 <memchr@plt>
  45c448:	mov	x24, x0
  45c44c:	tbnz	x23, #63, 45c4a8 <_obstack_memory_used@@Base+0x112e4>
  45c450:	cbz	x24, 45c4b4 <_obstack_memory_used@@Base+0x112f0>
  45c454:	ldr	x20, [x19, #16]
  45c458:	sub	x8, x24, x21
  45c45c:	add	x8, x8, x23
  45c460:	cmp	x8, x20
  45c464:	b.lt	45c3c0 <_obstack_memory_used@@Base+0x111fc>  // b.tstop
  45c468:	b	45c4c8 <_obstack_memory_used@@Base+0x11304>
  45c46c:	ldr	x0, [x19]
  45c470:	ldp	x8, x9, [x0, #40]
  45c474:	cmp	x8, x9
  45c478:	b.cs	45c494 <_obstack_memory_used@@Base+0x112d0>  // b.hs, b.nlast
  45c47c:	add	x9, x8, #0x1
  45c480:	str	x9, [x0, #40]
  45c484:	strb	w25, [x8]
  45c488:	subs	x20, x20, #0x1
  45c48c:	b.ne	45c46c <_obstack_memory_used@@Base+0x112a8>  // b.any
  45c490:	b	45c42c <_obstack_memory_used@@Base+0x11268>
  45c494:	mov	w1, #0x20                  	// #32
  45c498:	bl	404590 <__overflow@plt>
  45c49c:	subs	x20, x20, #0x1
  45c4a0:	b.ne	45c46c <_obstack_memory_used@@Base+0x112a8>  // b.any
  45c4a4:	b	45c42c <_obstack_memory_used@@Base+0x11268>
  45c4a8:	mov	x23, xzr
  45c4ac:	str	xzr, [x19, #40]
  45c4b0:	cbnz	x24, 45c454 <_obstack_memory_used@@Base+0x11290>
  45c4b4:	ldr	x20, [x19, #16]
  45c4b8:	add	x8, x23, x26
  45c4bc:	mov	x24, x27
  45c4c0:	cmp	x8, x20
  45c4c4:	b.cc	45c82c <_obstack_memory_used@@Base+0x11668>  // b.lo, b.ul, b.last
  45c4c8:	ldr	x28, [x19, #24]
  45c4cc:	tbnz	x28, #63, 45c518 <_obstack_memory_used@@Base+0x11354>
  45c4d0:	str	x26, [sp, #8]
  45c4d4:	subs	x26, x20, x23
  45c4d8:	add	x20, x21, x26
  45c4dc:	b.mi	45c564 <_obstack_memory_used@@Base+0x113a0>  // b.first
  45c4e0:	bl	404640 <__ctype_b_loc@plt>
  45c4e4:	ldr	x8, [x0]
  45c4e8:	mov	x22, x20
  45c4ec:	ldrb	w9, [x22]
  45c4f0:	ldrh	w9, [x8, x9, lsl #1]
  45c4f4:	tbnz	w9, #0, 45c5bc <_obstack_memory_used@@Base+0x113f8>
  45c4f8:	sub	x22, x22, #0x1
  45c4fc:	cmp	x22, x21
  45c500:	b.cs	45c4ec <_obstack_memory_used@@Base+0x11328>  // b.hs, b.nlast
  45c504:	mov	w8, wzr
  45c508:	add	x23, x22, #0x1
  45c50c:	cmp	x23, x21
  45c510:	b.hi	45c578 <_obstack_memory_used@@Base+0x113b4>  // b.pmore
  45c514:	b	45c5cc <_obstack_memory_used@@Base+0x11408>
  45c518:	cmp	x24, x27
  45c51c:	sub	x22, x20, #0x1
  45c520:	b.cs	45c834 <_obstack_memory_used@@Base+0x11670>  // b.hs, b.nlast
  45c524:	sub	x8, x22, x23
  45c528:	add	x0, x21, x8
  45c52c:	sub	x2, x27, x24
  45c530:	mov	x1, x24
  45c534:	bl	403e90 <memmove@plt>
  45c538:	ldr	x8, [x19, #40]
  45c53c:	ldr	x9, [x19, #56]
  45c540:	mov	x23, xzr
  45c544:	str	xzr, [x19, #40]
  45c548:	sub	x8, x22, x8
  45c54c:	add	x8, x21, x8
  45c550:	sub	x8, x24, x8
  45c554:	add	x27, x9, x8
  45c558:	str	x27, [x19, #56]
  45c55c:	add	x20, x21, x20
  45c560:	b	45c3cc <_obstack_memory_used@@Base+0x11208>
  45c564:	mov	w8, wzr
  45c568:	mov	x22, x20
  45c56c:	add	x23, x22, #0x1
  45c570:	cmp	x23, x21
  45c574:	b.ls	45c5cc <_obstack_memory_used@@Base+0x11408>  // b.plast
  45c578:	cbz	w8, 45c650 <_obstack_memory_used@@Base+0x1148c>
  45c57c:	ldr	x24, [sp, #8]
  45c580:	sub	x8, x22, #0x1
  45c584:	mov	x22, x8
  45c588:	cmp	x8, x21
  45c58c:	b.cc	45c5a8 <_obstack_memory_used@@Base+0x113e4>  // b.lo, b.ul, b.last
  45c590:	bl	404640 <__ctype_b_loc@plt>
  45c594:	mov	x8, x22
  45c598:	ldr	x9, [x0]
  45c59c:	ldrb	w10, [x8], #-1
  45c5a0:	ldrh	w9, [x9, x10, lsl #1]
  45c5a4:	tbnz	w9, #0, 45c584 <_obstack_memory_used@@Base+0x113c0>
  45c5a8:	add	x20, x22, #0x1
  45c5ac:	add	x8, x27, #0x1
  45c5b0:	cmp	x23, x8
  45c5b4:	b.ne	45c630 <_obstack_memory_used@@Base+0x1146c>  // b.any
  45c5b8:	b	45c664 <_obstack_memory_used@@Base+0x114a0>
  45c5bc:	mov	w8, #0x1                   	// #1
  45c5c0:	add	x23, x22, #0x1
  45c5c4:	cmp	x23, x21
  45c5c8:	b.hi	45c578 <_obstack_memory_used@@Base+0x113b4>  // b.pmore
  45c5cc:	cmp	x20, x24
  45c5d0:	b.cs	45c600 <_obstack_memory_used@@Base+0x1143c>  // b.hs, b.nlast
  45c5d4:	add	x8, x21, x26
  45c5d8:	add	x8, x8, #0x1
  45c5dc:	mov	x20, x8
  45c5e0:	cmp	x8, x24
  45c5e4:	b.cs	45c600 <_obstack_memory_used@@Base+0x1143c>  // b.hs, b.nlast
  45c5e8:	bl	404640 <__ctype_b_loc@plt>
  45c5ec:	mov	x8, x20
  45c5f0:	ldr	x9, [x0]
  45c5f4:	ldrb	w10, [x8], #1
  45c5f8:	ldrh	w9, [x9, x10, lsl #1]
  45c5fc:	tbz	w9, #0, 45c5dc <_obstack_memory_used@@Base+0x11418>
  45c600:	cmp	x20, x24
  45c604:	b.eq	45c3c0 <_obstack_memory_used@@Base+0x111fc>  // b.none
  45c608:	bl	404640 <__ctype_b_loc@plt>
  45c60c:	ldr	x8, [x0]
  45c610:	mov	x23, x20
  45c614:	ldrb	w9, [x23, #1]!
  45c618:	ldrh	w9, [x8, x9, lsl #1]
  45c61c:	tbnz	w9, #0, 45c614 <_obstack_memory_used@@Base+0x11450>
  45c620:	ldr	x24, [sp, #8]
  45c624:	add	x8, x27, #0x1
  45c628:	cmp	x23, x8
  45c62c:	b.eq	45c664 <_obstack_memory_used@@Base+0x114a0>  // b.none
  45c630:	cmp	x27, x23
  45c634:	b.ls	45c6d4 <_obstack_memory_used@@Base+0x11510>  // b.plast
  45c638:	mvn	x8, x20
  45c63c:	add	x8, x8, x23
  45c640:	cmp	x8, x28
  45c644:	b.ge	45c6d4 <_obstack_memory_used@@Base+0x11510>  // b.tcont
  45c648:	ldr	x8, [x19, #64]
  45c64c:	b	45c67c <_obstack_memory_used@@Base+0x114b8>
  45c650:	ldr	x24, [sp, #8]
  45c654:	add	x20, x22, #0x1
  45c658:	add	x8, x27, #0x1
  45c65c:	cmp	x23, x8
  45c660:	b.ne	45c630 <_obstack_memory_used@@Base+0x1146c>  // b.any
  45c664:	cmp	x27, x23
  45c668:	b.ls	45c6d4 <_obstack_memory_used@@Base+0x11510>  // b.plast
  45c66c:	ldr	x8, [x19, #64]
  45c670:	sub	x9, x8, x20
  45c674:	cmp	x9, x28
  45c678:	b.gt	45c6d4 <_obstack_memory_used@@Base+0x11510>
  45c67c:	sub	x8, x8, x27
  45c680:	add	x9, x28, #0x1
  45c684:	cmp	x8, x9
  45c688:	b.le	45c6f0 <_obstack_memory_used@@Base+0x1152c>
  45c68c:	sub	x22, x27, x23
  45c690:	add	x24, x20, #0x1
  45c694:	add	x0, x24, x28
  45c698:	mov	x1, x23
  45c69c:	mov	x2, x22
  45c6a0:	bl	403e90 <memmove@plt>
  45c6a4:	ldr	x8, [x19, #24]
  45c6a8:	mov	w9, #0xa                   	// #10
  45c6ac:	strb	w9, [x20]
  45c6b0:	mov	x20, x24
  45c6b4:	add	x23, x24, x8
  45c6b8:	add	x8, x23, x22
  45c6bc:	sub	x24, x8, x21
  45c6c0:	ldr	x8, [x19, #24]
  45c6c4:	sub	x9, x23, x20
  45c6c8:	cmp	x9, x8
  45c6cc:	b.lt	45c744 <_obstack_memory_used@@Base+0x11580>  // b.tstop
  45c6d0:	b	45c7bc <_obstack_memory_used@@Base+0x115f8>
  45c6d4:	mov	w8, #0xa                   	// #10
  45c6d8:	strb	w8, [x20], #1
  45c6dc:	ldr	x8, [x19, #24]
  45c6e0:	sub	x9, x23, x20
  45c6e4:	cmp	x9, x8
  45c6e8:	b.lt	45c744 <_obstack_memory_used@@Base+0x11580>  // b.tstop
  45c6ec:	b	45c7bc <_obstack_memory_used@@Base+0x115f8>
  45c6f0:	ldr	x0, [x19, #48]
  45c6f4:	subs	x2, x20, x0
  45c6f8:	b.ls	45c708 <_obstack_memory_used@@Base+0x11544>  // b.plast
  45c6fc:	ldr	x3, [x19]
  45c700:	mov	w1, #0x1                   	// #1
  45c704:	bl	403ee0 <fwrite_unlocked@plt>
  45c708:	ldr	x0, [x19]
  45c70c:	ldp	x8, x9, [x0, #40]
  45c710:	cmp	x8, x9
  45c714:	b.cs	45c820 <_obstack_memory_used@@Base+0x1165c>  // b.hs, b.nlast
  45c718:	add	x9, x8, #0x1
  45c71c:	str	x9, [x0, #40]
  45c720:	mov	w9, #0xa                   	// #10
  45c724:	strb	w9, [x8]
  45c728:	ldr	x20, [x19, #48]
  45c72c:	sub	x24, x27, x20
  45c730:	mov	x21, x20
  45c734:	ldr	x8, [x19, #24]
  45c738:	sub	x9, x23, x20
  45c73c:	cmp	x9, x8
  45c740:	b.ge	45c7bc <_obstack_memory_used@@Base+0x115f8>  // b.tcont
  45c744:	add	x9, x21, x24
  45c748:	add	x9, x9, #0x1
  45c74c:	cmp	x23, x9
  45c750:	b.ne	45c764 <_obstack_memory_used@@Base+0x115a0>  // b.any
  45c754:	ldr	x9, [x19, #64]
  45c758:	sub	x9, x9, x23
  45c75c:	cmp	x9, x8
  45c760:	b.ge	45c7bc <_obstack_memory_used@@Base+0x115f8>  // b.tcont
  45c764:	cmp	x8, #0x1
  45c768:	b.lt	45c7e0 <_obstack_memory_used@@Base+0x1161c>  // b.tstop
  45c76c:	mov	x22, xzr
  45c770:	ldr	x0, [x19]
  45c774:	ldp	x8, x9, [x0, #40]
  45c778:	cmp	x8, x9
  45c77c:	b.cs	45c7a0 <_obstack_memory_used@@Base+0x115dc>  // b.hs, b.nlast
  45c780:	add	x9, x8, #0x1
  45c784:	str	x9, [x0, #40]
  45c788:	strb	w25, [x8]
  45c78c:	ldr	x8, [x19, #24]
  45c790:	add	x22, x22, #0x1
  45c794:	cmp	x8, x22
  45c798:	b.gt	45c770 <_obstack_memory_used@@Base+0x115ac>
  45c79c:	b	45c7e0 <_obstack_memory_used@@Base+0x1161c>
  45c7a0:	mov	w1, #0x20                  	// #32
  45c7a4:	bl	404590 <__overflow@plt>
  45c7a8:	ldr	x8, [x19, #24]
  45c7ac:	add	x22, x22, #0x1
  45c7b0:	cmp	x8, x22
  45c7b4:	b.gt	45c770 <_obstack_memory_used@@Base+0x115ac>
  45c7b8:	b	45c7e0 <_obstack_memory_used@@Base+0x1161c>
  45c7bc:	cmp	x8, #0x1
  45c7c0:	b.lt	45c7e0 <_obstack_memory_used@@Base+0x1161c>  // b.tstop
  45c7c4:	mov	x9, xzr
  45c7c8:	strb	w25, [x20, x9]
  45c7cc:	ldr	x8, [x19, #24]
  45c7d0:	add	x9, x9, #0x1
  45c7d4:	cmp	x8, x9
  45c7d8:	b.gt	45c7c8 <_obstack_memory_used@@Base+0x11604>
  45c7dc:	add	x20, x20, x9
  45c7e0:	cmp	x20, x23
  45c7e4:	b.cs	45c800 <_obstack_memory_used@@Base+0x1163c>  // b.hs, b.nlast
  45c7e8:	add	x8, x21, x24
  45c7ec:	sub	x2, x8, x23
  45c7f0:	mov	x0, x20
  45c7f4:	mov	x1, x23
  45c7f8:	bl	403e90 <memmove@plt>
  45c7fc:	ldr	x8, [x19, #24]
  45c800:	sub	x9, x24, x23
  45c804:	cmp	x8, #0x0
  45c808:	add	x9, x9, x21
  45c80c:	csinv	x23, x8, xzr, ne  // ne = any
  45c810:	add	x27, x20, x9
  45c814:	str	x27, [x19, #56]
  45c818:	str	x23, [x19, #40]
  45c81c:	b	45c3cc <_obstack_memory_used@@Base+0x11208>
  45c820:	mov	w1, #0xa                   	// #10
  45c824:	bl	404590 <__overflow@plt>
  45c828:	b	45c728 <_obstack_memory_used@@Base+0x11564>
  45c82c:	str	x8, [x19, #40]
  45c830:	b	45c848 <_obstack_memory_used@@Base+0x11684>
  45c834:	add	x8, x23, x26
  45c838:	str	x8, [x19, #40]
  45c83c:	sub	x8, x22, x8
  45c840:	add	x27, x27, x8
  45c844:	str	x27, [x19, #56]
  45c848:	ldr	x8, [x19, #48]
  45c84c:	sub	x8, x27, x8
  45c850:	str	x8, [x19, #32]
  45c854:	ldp	x20, x19, [sp, #96]
  45c858:	ldp	x22, x21, [sp, #80]
  45c85c:	ldp	x24, x23, [sp, #64]
  45c860:	ldp	x26, x25, [sp, #48]
  45c864:	ldp	x28, x27, [sp, #32]
  45c868:	ldp	x29, x30, [sp, #16]
  45c86c:	add	sp, sp, #0x70
  45c870:	ret
  45c874:	stp	x29, x30, [sp, #-32]!
  45c878:	stp	x20, x19, [sp, #16]
  45c87c:	ldp	x9, x8, [x0, #56]
  45c880:	mov	x29, sp
  45c884:	sub	x8, x8, x9
  45c888:	cmp	x8, x1
  45c88c:	b.cs	45c8fc <_obstack_memory_used@@Base+0x11738>  // b.hs, b.nlast
  45c890:	mov	x20, x1
  45c894:	mov	x19, x0
  45c898:	bl	45c37c <_obstack_memory_used@@Base+0x111b8>
  45c89c:	ldp	x0, x8, [x19, #48]
  45c8a0:	ldr	x3, [x19]
  45c8a4:	mov	w1, #0x1                   	// #1
  45c8a8:	sub	x2, x8, x0
  45c8ac:	bl	403ee0 <fwrite_unlocked@plt>
  45c8b0:	mov	x8, x0
  45c8b4:	ldp	x0, x9, [x19, #48]
  45c8b8:	sub	x10, x9, x0
  45c8bc:	cmp	x8, x10
  45c8c0:	b.ne	45c90c <_obstack_memory_used@@Base+0x11748>  // b.any
  45c8c4:	ldr	x8, [x19, #64]
  45c8c8:	str	x0, [x19, #56]
  45c8cc:	str	xzr, [x19, #32]
  45c8d0:	sub	x8, x8, x0
  45c8d4:	cmp	x8, x20
  45c8d8:	b.cs	45c8fc <_obstack_memory_used@@Base+0x11738>  // b.hs, b.nlast
  45c8dc:	adds	x20, x8, x20
  45c8e0:	b.cs	45c93c <_obstack_memory_used@@Base+0x11778>  // b.hs, b.nlast
  45c8e4:	mov	x1, x20
  45c8e8:	bl	404450 <realloc@plt>
  45c8ec:	cbz	x0, 45c93c <_obstack_memory_used@@Base+0x11778>
  45c8f0:	add	x8, x0, x20
  45c8f4:	stp	x0, x0, [x19, #48]
  45c8f8:	str	x8, [x19, #64]
  45c8fc:	mov	w0, #0x1                   	// #1
  45c900:	ldp	x20, x19, [sp, #16]
  45c904:	ldp	x29, x30, [sp], #32
  45c908:	ret
  45c90c:	ldr	x10, [x19, #32]
  45c910:	sub	x9, x9, x8
  45c914:	add	x1, x0, x8
  45c918:	sub	x2, x9, x0
  45c91c:	sub	x8, x10, x8
  45c920:	str	x9, [x19, #56]
  45c924:	str	x8, [x19, #32]
  45c928:	bl	403e90 <memmove@plt>
  45c92c:	mov	w0, wzr
  45c930:	ldp	x20, x19, [sp, #16]
  45c934:	ldp	x29, x30, [sp], #32
  45c938:	ret
  45c93c:	bl	4049c0 <__errno_location@plt>
  45c940:	mov	x8, x0
  45c944:	mov	w0, wzr
  45c948:	mov	w9, #0xc                   	// #12
  45c94c:	str	w9, [x8]
  45c950:	ldp	x20, x19, [sp, #16]
  45c954:	ldp	x29, x30, [sp], #32
  45c958:	ret
  45c95c:	sub	sp, sp, #0x140
  45c960:	stp	x29, x30, [sp, #240]
  45c964:	add	x29, sp, #0xf0
  45c968:	stp	x22, x21, [sp, #288]
  45c96c:	mov	x22, #0xffffffffffffffd0    	// #-48
  45c970:	mov	x8, sp
  45c974:	sub	x9, x29, #0x70
  45c978:	stp	x28, x25, [sp, #256]
  45c97c:	stp	x24, x23, [sp, #272]
  45c980:	stp	x20, x19, [sp, #304]
  45c984:	mov	x20, x1
  45c988:	mov	x19, x0
  45c98c:	mov	w1, #0x96                  	// #150
  45c990:	movk	x22, #0xff80, lsl #32
  45c994:	add	x23, x29, #0x50
  45c998:	add	x24, x8, #0x80
  45c99c:	add	x25, x9, #0x30
  45c9a0:	stp	x2, x3, [x29, #-112]
  45c9a4:	stp	x4, x5, [x29, #-96]
  45c9a8:	stp	x6, x7, [x29, #-80]
  45c9ac:	stp	q1, q2, [sp, #16]
  45c9b0:	stp	q3, q4, [sp, #48]
  45c9b4:	str	q0, [sp]
  45c9b8:	stp	q5, q6, [sp, #80]
  45c9bc:	str	q7, [sp, #112]
  45c9c0:	mov	x0, x19
  45c9c4:	bl	45c874 <_obstack_memory_used@@Base+0x116b0>
  45c9c8:	cbz	w0, 45ca24 <_obstack_memory_used@@Base+0x11860>
  45c9cc:	stp	x24, x22, [x29, #-48]
  45c9d0:	stp	x23, x25, [x29, #-64]
  45c9d4:	ldp	x0, x8, [x19, #56]
  45c9d8:	ldp	q0, q1, [x29, #-64]
  45c9dc:	sub	x5, x29, #0x20
  45c9e0:	mov	w2, #0x1                   	// #1
  45c9e4:	sub	x21, x8, x0
  45c9e8:	mov	x3, #0xffffffffffffffff    	// #-1
  45c9ec:	mov	x1, x21
  45c9f0:	mov	x4, x20
  45c9f4:	stp	q0, q1, [x29, #-32]
  45c9f8:	bl	4041f0 <__vsnprintf_chk@plt>
  45c9fc:	mov	w8, w0
  45ca00:	sxtw	x0, w8
  45ca04:	add	w8, w8, #0x1
  45ca08:	cmp	x21, x0
  45ca0c:	sxtw	x1, w8
  45ca10:	b.ls	45c9c0 <_obstack_memory_used@@Base+0x117fc>  // b.plast
  45ca14:	ldr	x8, [x19, #56]
  45ca18:	add	x8, x8, x0
  45ca1c:	str	x8, [x19, #56]
  45ca20:	b	45ca28 <_obstack_memory_used@@Base+0x11864>
  45ca24:	mov	x0, #0xffffffffffffffff    	// #-1
  45ca28:	ldp	x20, x19, [sp, #304]
  45ca2c:	ldp	x22, x21, [sp, #288]
  45ca30:	ldp	x24, x23, [sp, #272]
  45ca34:	ldp	x28, x25, [sp, #256]
  45ca38:	ldp	x29, x30, [sp, #240]
  45ca3c:	add	sp, sp, #0x140
  45ca40:	ret
  45ca44:	stp	x29, x30, [sp, #-48]!
  45ca48:	str	x21, [sp, #16]
  45ca4c:	stp	x20, x19, [sp, #32]
  45ca50:	mov	x29, sp
  45ca54:	mov	x20, x0
  45ca58:	bl	4040f0 <__fpending@plt>
  45ca5c:	ldr	w21, [x20]
  45ca60:	mov	x19, x0
  45ca64:	mov	x0, x20
  45ca68:	bl	4041a0 <fclose@plt>
  45ca6c:	mov	w8, w0
  45ca70:	tbnz	w21, #5, 45caa4 <_obstack_memory_used@@Base+0x118e0>
  45ca74:	cmp	w8, #0x0
  45ca78:	csetm	w0, ne  // ne = any
  45ca7c:	cbnz	x19, 45ca94 <_obstack_memory_used@@Base+0x118d0>
  45ca80:	cbz	w8, 45ca94 <_obstack_memory_used@@Base+0x118d0>
  45ca84:	bl	4049c0 <__errno_location@plt>
  45ca88:	ldr	w8, [x0]
  45ca8c:	cmp	w8, #0x9
  45ca90:	csetm	w0, ne  // ne = any
  45ca94:	ldp	x20, x19, [sp, #32]
  45ca98:	ldr	x21, [sp, #16]
  45ca9c:	ldp	x29, x30, [sp], #48
  45caa0:	ret
  45caa4:	cbnz	w8, 45cab0 <_obstack_memory_used@@Base+0x118ec>
  45caa8:	bl	4049c0 <__errno_location@plt>
  45caac:	str	wzr, [x0]
  45cab0:	mov	w0, #0xffffffff            	// #-1
  45cab4:	ldp	x20, x19, [sp, #32]
  45cab8:	ldr	x21, [sp, #16]
  45cabc:	ldp	x29, x30, [sp], #48
  45cac0:	ret
  45cac4:	stp	x29, x30, [sp, #-64]!
  45cac8:	str	x23, [sp, #16]
  45cacc:	stp	x22, x21, [sp, #32]
  45cad0:	stp	x20, x19, [sp, #48]
  45cad4:	mov	x29, sp
  45cad8:	bl	404050 <opendir@plt>
  45cadc:	mov	x19, x0
  45cae0:	cbz	x0, 45cb4c <_obstack_memory_used@@Base+0x11988>
  45cae4:	mov	x0, x19
  45cae8:	bl	404800 <dirfd@plt>
  45caec:	cmp	w0, #0x2
  45caf0:	b.hi	45cb4c <_obstack_memory_used@@Base+0x11988>  // b.pmore
  45caf4:	mov	w1, #0x406                 	// #1030
  45caf8:	mov	w2, #0x3                   	// #3
  45cafc:	bl	44aaf8 <argp_parse@@Base+0x1044c>
  45cb00:	tbnz	w0, #31, 45cb2c <_obstack_memory_used@@Base+0x11968>
  45cb04:	mov	w22, w0
  45cb08:	bl	404520 <fdopendir@plt>
  45cb0c:	mov	x21, x0
  45cb10:	bl	4049c0 <__errno_location@plt>
  45cb14:	ldr	w23, [x0]
  45cb18:	mov	x20, x0
  45cb1c:	cbnz	x21, 45cb3c <_obstack_memory_used@@Base+0x11978>
  45cb20:	mov	w0, w22
  45cb24:	bl	4044d0 <close@plt>
  45cb28:	b	45cb3c <_obstack_memory_used@@Base+0x11978>
  45cb2c:	bl	4049c0 <__errno_location@plt>
  45cb30:	ldr	w23, [x0]
  45cb34:	mov	x20, x0
  45cb38:	mov	x21, xzr
  45cb3c:	mov	x0, x19
  45cb40:	bl	4044b0 <closedir@plt>
  45cb44:	mov	x19, x21
  45cb48:	str	w23, [x20]
  45cb4c:	mov	x0, x19
  45cb50:	ldp	x20, x19, [sp, #48]
  45cb54:	ldp	x22, x21, [sp, #32]
  45cb58:	ldr	x23, [sp, #16]
  45cb5c:	ldp	x29, x30, [sp], #64
  45cb60:	ret
  45cb64:	sub	sp, sp, #0xe0
  45cb68:	stp	x29, x30, [sp, #208]
  45cb6c:	add	x29, sp, #0xd0
  45cb70:	stp	x2, x3, [x29, #-80]
  45cb74:	stp	x4, x5, [x29, #-64]
  45cb78:	stp	x6, x7, [x29, #-48]
  45cb7c:	stp	q1, q2, [sp, #16]
  45cb80:	stp	q3, q4, [sp, #48]
  45cb84:	str	q0, [sp]
  45cb88:	stp	q5, q6, [sp, #80]
  45cb8c:	str	q7, [sp, #112]
  45cb90:	tbnz	w1, #6, 45cb9c <_obstack_memory_used@@Base+0x119d8>
  45cb94:	mov	w2, wzr
  45cb98:	b	45cbf4 <_obstack_memory_used@@Base+0x11a30>
  45cb9c:	mov	x9, #0xffffffffffffffd0    	// #-48
  45cba0:	mov	x11, sp
  45cba4:	sub	x12, x29, #0x50
  45cba8:	movk	x9, #0xff80, lsl #32
  45cbac:	add	x10, x29, #0x10
  45cbb0:	mov	x8, #0xffffffffffffffd0    	// #-48
  45cbb4:	add	x11, x11, #0x80
  45cbb8:	add	x12, x12, #0x30
  45cbbc:	stp	x11, x9, [x29, #-16]
  45cbc0:	stp	x10, x12, [x29, #-32]
  45cbc4:	tbz	w8, #31, 45cbe4 <_obstack_memory_used@@Base+0x11a20>
  45cbc8:	add	w9, w8, #0x8
  45cbcc:	cmn	w8, #0x8
  45cbd0:	stur	w9, [x29, #-8]
  45cbd4:	b.gt	45cbe4 <_obstack_memory_used@@Base+0x11a20>
  45cbd8:	ldur	x9, [x29, #-24]
  45cbdc:	add	x8, x9, x8
  45cbe0:	b	45cbf0 <_obstack_memory_used@@Base+0x11a2c>
  45cbe4:	ldur	x8, [x29, #-32]
  45cbe8:	add	x9, x8, #0x8
  45cbec:	stur	x9, [x29, #-32]
  45cbf0:	ldr	w2, [x8]
  45cbf4:	bl	404240 <open@plt>
  45cbf8:	bl	45e268 <_obstack_memory_used@@Base+0x130a4>
  45cbfc:	ldp	x29, x30, [sp, #208]
  45cc00:	add	sp, sp, #0xe0
  45cc04:	ret
  45cc08:	stp	x29, x30, [sp, #-32]!
  45cc0c:	mov	x1, xzr
  45cc10:	str	x19, [sp, #16]
  45cc14:	mov	x29, sp
  45cc18:	bl	404ab0 <setlocale@plt>
  45cc1c:	cbz	x0, 45cc48 <_obstack_memory_used@@Base+0x11a84>
  45cc20:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  45cc24:	add	x1, x1, #0x9b3
  45cc28:	mov	x19, x0
  45cc2c:	bl	404610 <strcmp@plt>
  45cc30:	cbz	w0, 45cc58 <_obstack_memory_used@@Base+0x11a94>
  45cc34:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45cc38:	add	x1, x1, #0x982
  45cc3c:	mov	x0, x19
  45cc40:	bl	404610 <strcmp@plt>
  45cc44:	cbz	w0, 45cc58 <_obstack_memory_used@@Base+0x11a94>
  45cc48:	mov	w0, #0x1                   	// #1
  45cc4c:	ldr	x19, [sp, #16]
  45cc50:	ldp	x29, x30, [sp], #32
  45cc54:	ret
  45cc58:	mov	w0, wzr
  45cc5c:	ldr	x19, [sp, #16]
  45cc60:	ldp	x29, x30, [sp], #32
  45cc64:	ret
  45cc68:	stp	x29, x30, [sp, #-32]!
  45cc6c:	str	x19, [sp, #16]
  45cc70:	mov	x29, sp
  45cc74:	mov	w19, w0
  45cc78:	bl	404220 <wcwidth@plt>
  45cc7c:	tbnz	w0, #31, 45cc8c <_obstack_memory_used@@Base+0x11ac8>
  45cc80:	ldr	x19, [sp, #16]
  45cc84:	ldp	x29, x30, [sp], #32
  45cc88:	ret
  45cc8c:	mov	w0, w19
  45cc90:	bl	404090 <iswcntrl@plt>
  45cc94:	cmp	w0, #0x0
  45cc98:	cset	w0, eq  // eq = none
  45cc9c:	ldr	x19, [sp, #16]
  45cca0:	ldp	x29, x30, [sp], #32
  45cca4:	ret
  45cca8:	stp	x29, x30, [sp, #-48]!
  45ccac:	str	x21, [sp, #16]
  45ccb0:	stp	x20, x19, [sp, #32]
  45ccb4:	mov	x8, x1
  45ccb8:	mov	x19, x1
  45ccbc:	ldr	x1, [x8], #24
  45ccc0:	mov	x20, x0
  45ccc4:	mov	x29, sp
  45ccc8:	cmp	x1, x8
  45cccc:	b.ne	45cce4 <_obstack_memory_used@@Base+0x11b20>  // b.any
  45ccd0:	ldr	x2, [x19, #8]
  45ccd4:	add	x21, x20, #0x18
  45ccd8:	mov	x0, x21
  45ccdc:	bl	403e80 <memcpy@plt>
  45cce0:	mov	x1, x21
  45cce4:	str	x1, [x20]
  45cce8:	ldr	x8, [x19, #8]
  45ccec:	str	x8, [x20, #8]
  45ccf0:	ldrb	w8, [x19, #16]
  45ccf4:	strb	w8, [x20, #16]
  45ccf8:	cbz	w8, 45cd04 <_obstack_memory_used@@Base+0x11b40>
  45ccfc:	ldr	w8, [x19, #20]
  45cd00:	str	w8, [x20, #20]
  45cd04:	ldp	x20, x19, [sp, #32]
  45cd08:	ldr	x21, [sp, #16]
  45cd0c:	ldp	x29, x30, [sp], #48
  45cd10:	ret
  45cd14:	lsr	w8, w0, #3
  45cd18:	adrp	x9, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45cd1c:	and	x8, x8, #0x1c
  45cd20:	add	x9, x9, #0x988
  45cd24:	ldr	w8, [x9, x8]
  45cd28:	lsr	w8, w8, w0
  45cd2c:	and	w0, w8, #0x1
  45cd30:	ret
  45cd34:	mov	w6, w5
  45cd38:	mov	x5, x4
  45cd3c:	mov	w4, wzr
  45cd40:	b	45cd44 <_obstack_memory_used@@Base+0x11b80>
  45cd44:	stp	x29, x30, [sp, #-96]!
  45cd48:	stp	x28, x27, [sp, #16]
  45cd4c:	stp	x26, x25, [sp, #32]
  45cd50:	stp	x24, x23, [sp, #48]
  45cd54:	stp	x22, x21, [sp, #64]
  45cd58:	stp	x20, x19, [sp, #80]
  45cd5c:	mov	x29, sp
  45cd60:	sub	sp, sp, #0x4b0
  45cd64:	ldr	x8, [x3, #48]
  45cd68:	ldr	w9, [x3, #8]
  45cd6c:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x1be3c>
  45cd70:	mov	x25, x2
  45cd74:	add	x10, x10, #0xb36
  45cd78:	cmp	x8, #0x0
  45cd7c:	csel	x12, x10, x8, eq  // eq = none
  45cd80:	ldrb	w8, [x25]
  45cd84:	mov	w11, #0xc                   	// #12
  45cd88:	cmp	w9, #0x0
  45cd8c:	csel	w10, w11, w9, eq  // eq = none
  45cd90:	subs	w9, w9, #0xc
  45cd94:	mov	x2, x0
  45cd98:	csel	w9, w9, w10, gt
  45cd9c:	str	x5, [sp, #72]
  45cda0:	str	w4, [sp, #116]
  45cda4:	str	x1, [sp, #120]
  45cda8:	str	x3, [sp, #104]
  45cdac:	cbz	w8, 45e188 <_obstack_memory_used@@Base+0x12fc4>
  45cdb0:	str	w9, [sp, #36]
  45cdb4:	sub	x9, x29, #0x20
  45cdb8:	sub	x10, x29, #0x28
  45cdbc:	add	x9, x9, #0x17
  45cdc0:	str	x9, [sp, #96]
  45cdc4:	orr	x9, x10, #0x2
  45cdc8:	add	x11, sp, #0x80
  45cdcc:	str	x9, [sp, #88]
  45cdd0:	orr	x9, x10, #0x3
  45cdd4:	str	x12, [sp, #24]
  45cdd8:	sub	x12, x12, #0x1
  45cddc:	str	x9, [sp, #80]
  45cde0:	orr	x9, x11, #0x1
  45cde4:	mov	x0, xzr
  45cde8:	stp	x12, x9, [sp, #8]
  45cdec:	sub	x9, x11, #0x1
  45cdf0:	str	x9, [sp, #40]
  45cdf4:	str	w6, [sp, #52]
  45cdf8:	b	45ce08 <_obstack_memory_used@@Base+0x11c44>
  45cdfc:	add	x0, x0, #0x1
  45ce00:	ldrb	w8, [x25, #1]!
  45ce04:	cbz	w8, 45e18c <_obstack_memory_used@@Base+0x12fc8>
  45ce08:	and	w9, w8, #0xff
  45ce0c:	cmp	w9, #0x25
  45ce10:	b.ne	45ce88 <_obstack_memory_used@@Base+0x11cc4>  // b.any
  45ce14:	ldr	w20, [sp, #116]
  45ce18:	mov	w10, #0xcccc                	// #52428
  45ce1c:	mov	w28, wzr
  45ce20:	mov	w26, wzr
  45ce24:	movk	w10, #0xccc, lsl #16
  45ce28:	mov	w11, #0xa                   	// #10
  45ce2c:	add	x25, x25, #0x1
  45ce30:	b	45ce44 <_obstack_memory_used@@Base+0x11c80>
  45ce34:	cmp	w8, #0x2d
  45ce38:	b.ne	45ce74 <_obstack_memory_used@@Base+0x11cb0>  // b.any
  45ce3c:	add	x25, x25, #0x1
  45ce40:	mov	w26, w8
  45ce44:	ldrb	w8, [x25]
  45ce48:	cmp	w8, #0x2f
  45ce4c:	b.le	45ce34 <_obstack_memory_used@@Base+0x11c70>
  45ce50:	cmp	w8, #0x30
  45ce54:	b.eq	45ce3c <_obstack_memory_used@@Base+0x11c78>  // b.none
  45ce58:	cmp	w8, #0x5f
  45ce5c:	b.eq	45ce3c <_obstack_memory_used@@Base+0x11c78>  // b.none
  45ce60:	cmp	w8, #0x5e
  45ce64:	b.ne	45cea4 <_obstack_memory_used@@Base+0x11ce0>  // b.any
  45ce68:	mov	w20, #0x1                   	// #1
  45ce6c:	add	x25, x25, #0x1
  45ce70:	b	45ce44 <_obstack_memory_used@@Base+0x11c80>
  45ce74:	cmp	w8, #0x23
  45ce78:	b.ne	45cea4 <_obstack_memory_used@@Base+0x11ce0>  // b.any
  45ce7c:	mov	w28, #0x1                   	// #1
  45ce80:	add	x25, x25, #0x1
  45ce84:	b	45ce44 <_obstack_memory_used@@Base+0x11c80>
  45ce88:	ldr	x9, [sp, #120]
  45ce8c:	sub	x9, x9, x0
  45ce90:	cmp	x9, #0x2
  45ce94:	b.cc	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.lo, b.ul, b.last
  45ce98:	cbz	x2, 45cdfc <_obstack_memory_used@@Base+0x11c38>
  45ce9c:	strb	w8, [x2], #1
  45cea0:	b	45cdfc <_obstack_memory_used@@Base+0x11c38>
  45cea4:	sub	w9, w8, #0x30
  45cea8:	cmp	w9, #0x9
  45ceac:	b.hi	45cf04 <_obstack_memory_used@@Base+0x11d40>  // b.pmore
  45ceb0:	mov	w19, wzr
  45ceb4:	b	45cecc <_obstack_memory_used@@Base+0x11d08>
  45ceb8:	mov	w19, #0x7fffffff            	// #2147483647
  45cebc:	ldrb	w8, [x25, #1]!
  45cec0:	sub	w9, w8, #0x30
  45cec4:	cmp	w9, #0xa
  45cec8:	b.cs	45cf08 <_obstack_memory_used@@Base+0x11d44>  // b.hs, b.nlast
  45cecc:	cmp	w19, w10
  45ced0:	b.gt	45ceb8 <_obstack_memory_used@@Base+0x11cf4>
  45ced4:	b.ne	45cee4 <_obstack_memory_used@@Base+0x11d20>  // b.any
  45ced8:	and	w9, w8, #0xff
  45cedc:	cmp	w9, #0x37
  45cee0:	b.hi	45ceb8 <_obstack_memory_used@@Base+0x11cf4>  // b.pmore
  45cee4:	mul	w9, w19, w11
  45cee8:	add	w8, w9, w8, uxtb
  45ceec:	sub	w19, w8, #0x30
  45cef0:	ldrb	w8, [x25, #1]!
  45cef4:	sub	w9, w8, #0x30
  45cef8:	cmp	w9, #0xa
  45cefc:	b.cc	45cecc <_obstack_memory_used@@Base+0x11d08>  // b.lo, b.ul, b.last
  45cf00:	b	45cf08 <_obstack_memory_used@@Base+0x11d44>
  45cf04:	mov	w19, #0xffffffff            	// #-1
  45cf08:	cmp	w8, #0x4f
  45cf0c:	b.eq	45cf18 <_obstack_memory_used@@Base+0x11d54>  // b.none
  45cf10:	cmp	w8, #0x45
  45cf14:	b.ne	45cf30 <_obstack_memory_used@@Base+0x11d6c>  // b.any
  45cf18:	ldrb	w10, [x25, #1]!
  45cf1c:	mov	w9, w8
  45cf20:	mov	w8, w10
  45cf24:	cmp	w8, #0x7a
  45cf28:	b.ls	45cf3c <_obstack_memory_used@@Base+0x11d78>  // b.plast
  45cf2c:	b	45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45cf30:	mov	w9, wzr
  45cf34:	cmp	w8, #0x7a
  45cf38:	b.hi	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.pmore
  45cf3c:	adrp	x14, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45cf40:	add	x14, x14, #0x9a8
  45cf44:	adr	x12, 45cf6c <_obstack_memory_used@@Base+0x11da8>
  45cf48:	ldrh	w13, [x14, x8, lsl #1]
  45cf4c:	add	x12, x12, x13, lsl #2
  45cf50:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x16e3c>
  45cf54:	mov	w24, wzr
  45cf58:	mov	w22, wzr
  45cf5c:	mov	w11, wzr
  45cf60:	mov	x10, xzr
  45cf64:	add	x21, x21, #0xe8b
  45cf68:	br	x12
  45cf6c:	cmp	w9, #0x45
  45cf70:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45cf74:	ldr	x10, [sp, #104]
  45cf78:	mov	w13, #0xffffff9c            	// #-100
  45cf7c:	mov	w14, #0x12c                 	// #300
  45cf80:	ldr	w11, [x10, #20]
  45cf84:	ldp	w10, w12, [x10, #24]
  45cf88:	cmp	w11, #0x0
  45cf8c:	sub	w15, w12, w10
  45cf90:	csel	w14, w14, w13, lt  // lt = tstop
  45cf94:	add	w13, w15, #0x17e
  45cf98:	mov	w15, #0x2493                	// #9363
  45cf9c:	movk	w15, #0x9249, lsl #16
  45cfa0:	smull	x15, w13, w15
  45cfa4:	lsr	x15, x15, #32
  45cfa8:	add	w15, w15, w13
  45cfac:	asr	w16, w15, #2
  45cfb0:	add	w15, w16, w15, lsr #31
  45cfb4:	lsl	w16, w15, #3
  45cfb8:	sub	w15, w16, w15
  45cfbc:	sub	w13, w15, w13
  45cfc0:	add	w13, w12, w13
  45cfc4:	adds	w13, w13, #0x3
  45cfc8:	add	w15, w14, w11
  45cfcc:	b.mi	45d7d8 <_obstack_memory_used@@Base+0x12614>  // b.first
  45cfd0:	tst	w15, #0x3
  45cfd4:	mov	w14, #0x16d                 	// #365
  45cfd8:	b.ne	45d014 <_obstack_memory_used@@Base+0x11e50>  // b.any
  45cfdc:	mov	w16, #0x5c29                	// #23593
  45cfe0:	mov	w17, #0xb850                	// #47184
  45cfe4:	movk	w16, #0xc28f, lsl #16
  45cfe8:	movk	w17, #0x51e, lsl #16
  45cfec:	mov	w18, #0xd70b                	// #55051
  45cff0:	madd	w15, w15, w16, w17
  45cff4:	movk	w18, #0xa3, lsl #16
  45cff8:	ror	w16, w15, #2
  45cffc:	ror	w15, w15, #4
  45d000:	cmp	w15, w18
  45d004:	mov	w15, #0x5c28                	// #23592
  45d008:	movk	w15, #0x28f, lsl #16
  45d00c:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  45d010:	cinc	w14, w14, hi  // hi = pmore
  45d014:	add	w14, w10, w14
  45d018:	sub	w12, w12, w14
  45d01c:	mov	w14, #0x2493                	// #9363
  45d020:	movk	w14, #0x9249, lsl #16
  45d024:	add	w12, w12, #0x17e
  45d028:	smull	x14, w12, w14
  45d02c:	lsr	x14, x14, #32
  45d030:	add	w12, w14, w12
  45d034:	asr	w14, w12, #2
  45d038:	add	w12, w14, w12, lsr #31
  45d03c:	lsl	w14, w12, #3
  45d040:	sub	w12, w14, w12
  45d044:	add	w10, w10, w12
  45d048:	sub	w10, w10, #0x17b
  45d04c:	mvn	w12, w10
  45d050:	cmp	w10, #0x0
  45d054:	lsr	w14, w12, #31
  45d058:	csel	w10, w10, w13, ge  // ge = tcont
  45d05c:	cmp	w8, #0x47
  45d060:	b.eq	45d868 <_obstack_memory_used@@Base+0x126a4>  // b.none
  45d064:	cmp	w8, #0x67
  45d068:	b.ne	45d890 <_obstack_memory_used@@Base+0x126cc>  // b.any
  45d06c:	mov	w10, #0x851f                	// #34079
  45d070:	movk	w10, #0x51eb, lsl #16
  45d074:	smull	x13, w11, w10
  45d078:	lsr	x15, x13, #63
  45d07c:	asr	x13, x13, #37
  45d080:	mov	w12, #0x64                  	// #100
  45d084:	add	w13, w13, w15
  45d088:	msub	w13, w13, w12, w11
  45d08c:	add	w13, w14, w13
  45d090:	smull	x10, w13, w10
  45d094:	lsr	x15, x10, #63
  45d098:	asr	x10, x10, #37
  45d09c:	add	w10, w10, w15
  45d0a0:	msub	w10, w10, w12, w13
  45d0a4:	tbz	w10, #31, 45d958 <_obstack_memory_used@@Base+0x12794>
  45d0a8:	mov	w12, #0xfffff894            	// #-1900
  45d0ac:	sub	w12, w12, w14
  45d0b0:	add	w13, w10, #0x64
  45d0b4:	cmp	w11, w12
  45d0b8:	csneg	w10, w13, w10, ge  // ge = tcont
  45d0bc:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d0c0:	cmp	w9, #0x45
  45d0c4:	orr	w20, w28, w20
  45d0c8:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d0cc:	mov	w24, wzr
  45d0d0:	mov	w22, wzr
  45d0d4:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d0d8:	sub	x25, x25, #0x1
  45d0dc:	b	45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d0e0:	cbnz	w9, 45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d0e4:	ldr	x9, [sp, #120]
  45d0e8:	bic	w8, w19, w19, asr #31
  45d0ec:	cmp	w8, #0x1
  45d0f0:	csinc	w20, w8, wzr, hi  // hi = pmore
  45d0f4:	sub	x9, x9, x0
  45d0f8:	cmp	x9, x20
  45d0fc:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45d100:	cbz	x2, 45d7ac <_obstack_memory_used@@Base+0x125e8>
  45d104:	cmp	w8, #0x2
  45d108:	b.cc	45e0c8 <_obstack_memory_used@@Base+0x12f04>  // b.lo, b.ul, b.last
  45d10c:	sxtw	x8, w19
  45d110:	mov	x22, x0
  45d114:	cmp	w26, #0x30
  45d118:	sub	x21, x8, #0x1
  45d11c:	b.ne	45e150 <_obstack_memory_used@@Base+0x12f8c>  // b.any
  45d120:	mov	w1, #0x30                  	// #48
  45d124:	b	45e154 <_obstack_memory_used@@Base+0x12f90>
  45d128:	mov	w10, #0x1                   	// #1
  45d12c:	ldrb	w11, [x25, x10]
  45d130:	cmp	w11, #0x3a
  45d134:	b.ne	45d148 <_obstack_memory_used@@Base+0x11f84>  // b.any
  45d138:	add	x10, x10, #0x1
  45d13c:	ldrb	w11, [x25, x10]
  45d140:	cmp	w11, #0x3a
  45d144:	b.eq	45d138 <_obstack_memory_used@@Base+0x11f74>  // b.none
  45d148:	cmp	w11, #0x7a
  45d14c:	b.ne	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.any
  45d150:	add	x25, x25, x10
  45d154:	ldr	x12, [sp, #104]
  45d158:	ldr	w11, [x12, #32]
  45d15c:	tbnz	w11, #31, 45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45d160:	ldr	w12, [x12, #40]
  45d164:	tbnz	w12, #31, 45dd98 <_obstack_memory_used@@Base+0x12bd4>
  45d168:	cbz	w12, 45ddb8 <_obstack_memory_used@@Base+0x12bf4>
  45d16c:	mov	w11, wzr
  45d170:	cmp	x10, #0x3
  45d174:	b.ls	45ddd0 <_obstack_memory_used@@Base+0x12c0c>  // b.plast
  45d178:	b	45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d17c:	cbnz	w9, 45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d180:	mov	w24, wzr
  45d184:	mov	w22, wzr
  45d188:	orr	w20, w28, w20
  45d18c:	mov	w8, #0x41                  	// #65
  45d190:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d194:	cmp	w9, #0x45
  45d198:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d19c:	mov	w24, wzr
  45d1a0:	mov	w22, wzr
  45d1a4:	orr	w20, w28, w20
  45d1a8:	mov	w8, #0x42                  	// #66
  45d1ac:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d1b0:	cmp	w9, #0x45
  45d1b4:	b.ne	45d8b4 <_obstack_memory_used@@Base+0x126f0>  // b.any
  45d1b8:	mov	w24, wzr
  45d1bc:	mov	w22, wzr
  45d1c0:	mov	w8, #0x43                  	// #67
  45d1c4:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d1c8:	cbnz	w9, 45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d1cc:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  45d1d0:	add	x21, x21, #0xcc4
  45d1d4:	b	45d2a4 <_obstack_memory_used@@Base+0x120e0>
  45d1d8:	cbnz	w9, 45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d1dc:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  45d1e0:	add	x21, x21, #0xccd
  45d1e4:	b	45d2a4 <_obstack_memory_used@@Base+0x120e0>
  45d1e8:	cmp	w9, #0x45
  45d1ec:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d1f0:	ldr	x10, [sp, #104]
  45d1f4:	ldr	w10, [x10, #8]
  45d1f8:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d1fc:	cmp	w9, #0x45
  45d200:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d204:	ldr	w10, [sp, #36]
  45d208:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d20c:	cmp	w9, #0x45
  45d210:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d214:	ldr	x10, [sp, #104]
  45d218:	ldr	w10, [x10, #4]
  45d21c:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d220:	cmp	w9, #0x45
  45d224:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d228:	cmn	w19, #0x1
  45d22c:	b.eq	45de58 <_obstack_memory_used@@Base+0x12c94>  // b.none
  45d230:	cmp	w19, #0x8
  45d234:	b.gt	45de8c <_obstack_memory_used@@Base+0x12cc8>
  45d238:	ldr	w10, [sp, #52]
  45d23c:	sub	w11, w19, #0x1
  45d240:	mov	w12, #0x6667                	// #26215
  45d244:	movk	w12, #0x6666, lsl #16
  45d248:	smull	x10, w10, w12
  45d24c:	add	w11, w11, #0x1
  45d250:	lsr	x12, x10, #63
  45d254:	asr	x10, x10, #34
  45d258:	cmp	w11, #0x8
  45d25c:	add	w10, w10, w12
  45d260:	b.lt	45d240 <_obstack_memory_used@@Base+0x1207c>  // b.tstop
  45d264:	mov	w22, w19
  45d268:	b	45d95c <_obstack_memory_used@@Base+0x12798>
  45d26c:	mov	w11, #0x1                   	// #1
  45d270:	eor	w8, w28, #0x1
  45d274:	mov	w22, wzr
  45d278:	orr	w24, w28, w11
  45d27c:	and	w20, w20, w8
  45d280:	mov	w8, #0x70                  	// #112
  45d284:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d288:	cmp	w9, #0x45
  45d28c:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d290:	ldr	x10, [sp, #104]
  45d294:	ldr	w10, [x10]
  45d298:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d29c:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  45d2a0:	add	x21, x21, #0xc09
  45d2a4:	ldr	x3, [sp, #104]
  45d2a8:	ldr	x5, [sp, #72]
  45d2ac:	ldr	w6, [sp, #52]
  45d2b0:	mov	w23, w20
  45d2b4:	and	w4, w20, #0x1
  45d2b8:	mov	x1, #0xffffffffffffffff    	// #-1
  45d2bc:	mov	x24, x0
  45d2c0:	mov	x0, xzr
  45d2c4:	mov	x20, x2
  45d2c8:	mov	x2, x21
  45d2cc:	bl	45cd44 <_obstack_memory_used@@Base+0x11b80>
  45d2d0:	ldr	x9, [sp, #120]
  45d2d4:	mov	x28, x0
  45d2d8:	bic	w8, w19, w19, asr #31
  45d2dc:	mov	x0, x24
  45d2e0:	cmp	x28, x8
  45d2e4:	mov	x10, x20
  45d2e8:	csel	x20, x8, x28, cc  // cc = lo, ul, last
  45d2ec:	sub	x22, x9, x0
  45d2f0:	cmp	x20, x22
  45d2f4:	b.cs	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.hs, b.nlast
  45d2f8:	cbz	x10, 45d7cc <_obstack_memory_used@@Base+0x12608>
  45d2fc:	cmp	x28, x8
  45d300:	b.cs	45dd0c <_obstack_memory_used@@Base+0x12b48>  // b.hs, b.nlast
  45d304:	sxtw	x8, w19
  45d308:	cmp	w26, #0x30
  45d30c:	sub	x26, x8, x28
  45d310:	b.ne	45dcf4 <_obstack_memory_used@@Base+0x12b30>  // b.any
  45d314:	mov	w1, #0x30                  	// #48
  45d318:	b	45dcf8 <_obstack_memory_used@@Base+0x12b34>
  45d31c:	cmp	w9, #0x45
  45d320:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d324:	ldr	x11, [sp, #104]
  45d328:	mov	w12, #0x2493                	// #9363
  45d32c:	movk	w12, #0x9249, lsl #16
  45d330:	ldp	w11, w10, [x11, #24]
  45d334:	sub	w10, w10, w11
  45d338:	b	45d37c <_obstack_memory_used@@Base+0x121b8>
  45d33c:	cmp	w9, #0x45
  45d340:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d344:	ldr	x11, [sp, #104]
  45d348:	mov	w12, #0x2493                	// #9363
  45d34c:	movk	w12, #0x9249, lsl #16
  45d350:	ldp	w10, w11, [x11, #24]
  45d354:	add	w10, w10, #0x6
  45d358:	smull	x13, w10, w12
  45d35c:	lsr	x13, x13, #32
  45d360:	add	w13, w13, w10
  45d364:	asr	w14, w13, #2
  45d368:	add	w13, w14, w13, lsr #31
  45d36c:	lsl	w14, w13, #3
  45d370:	sub	w13, w14, w13
  45d374:	sub	w10, w13, w10
  45d378:	add	w10, w11, w10
  45d37c:	add	w10, w10, #0x7
  45d380:	smull	x11, w10, w12
  45d384:	lsr	x11, x11, #32
  45d388:	add	w10, w11, w10
  45d38c:	asr	w11, w10, #2
  45d390:	add	w10, w11, w10, lsr #31
  45d394:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d398:	cmp	w9, #0x4f
  45d39c:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d3a0:	mov	w24, wzr
  45d3a4:	mov	w22, wzr
  45d3a8:	mov	w8, #0x58                  	// #88
  45d3ac:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d3b0:	cmp	w9, #0x45
  45d3b4:	b.eq	45dda8 <_obstack_memory_used@@Base+0x12be4>  // b.none
  45d3b8:	cmp	w9, #0x4f
  45d3bc:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d3c0:	ldr	x8, [sp, #104]
  45d3c4:	mov	w12, wzr
  45d3c8:	mov	w13, wzr
  45d3cc:	mov	w22, #0x4                   	// #4
  45d3d0:	ldr	w8, [x8, #20]
  45d3d4:	cmn	w8, #0x76c
  45d3d8:	add	w10, w8, #0x76c
  45d3dc:	cset	w11, lt  // lt = tstop
  45d3e0:	b	45da0c <_obstack_memory_used@@Base+0x12848>
  45d3e4:	mov	x24, x0
  45d3e8:	ldr	x0, [sp, #24]
  45d3ec:	mov	w27, w20
  45d3f0:	mov	x23, x2
  45d3f4:	bl	403f00 <strlen@plt>
  45d3f8:	ldr	x9, [sp, #120]
  45d3fc:	bic	w8, w19, w19, asr #31
  45d400:	cmp	x0, x8
  45d404:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  45d408:	sub	x9, x9, x24
  45d40c:	mov	x21, x0
  45d410:	cmp	x20, x9
  45d414:	b.cs	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.hs, b.nlast
  45d418:	mov	x2, x23
  45d41c:	cbz	x23, 45dfb4 <_obstack_memory_used@@Base+0x12df0>
  45d420:	cmp	x21, x8
  45d424:	b.cs	45deb0 <_obstack_memory_used@@Base+0x12cec>  // b.hs, b.nlast
  45d428:	sxtw	x8, w19
  45d42c:	cmp	w26, #0x30
  45d430:	sub	x22, x8, x21
  45d434:	b.ne	45de98 <_obstack_memory_used@@Base+0x12cd4>  // b.any
  45d438:	mov	w1, #0x30                  	// #48
  45d43c:	b	45de9c <_obstack_memory_used@@Base+0x12cd8>
  45d440:	cbnz	w9, 45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45d444:	mov	w24, wzr
  45d448:	mov	w22, wzr
  45d44c:	orr	w20, w28, w20
  45d450:	mov	w8, #0x61                  	// #97
  45d454:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d458:	cmp	w9, #0x4f
  45d45c:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d460:	mov	w24, wzr
  45d464:	mov	w22, wzr
  45d468:	mov	w8, #0x63                  	// #99
  45d46c:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d470:	cmp	w9, #0x45
  45d474:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d478:	ldr	x10, [sp, #104]
  45d47c:	ldr	w10, [x10, #12]
  45d480:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d484:	cmp	w9, #0x45
  45d488:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d48c:	ldr	x10, [sp, #104]
  45d490:	ldr	w10, [x10, #12]
  45d494:	b	45d4e8 <_obstack_memory_used@@Base+0x12324>
  45d498:	cmp	w9, #0x45
  45d49c:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d4a0:	ldr	x10, [sp, #104]
  45d4a4:	mov	w13, wzr
  45d4a8:	mov	w12, wzr
  45d4ac:	mov	w22, #0x3                   	// #3
  45d4b0:	ldr	w10, [x10, #28]
  45d4b4:	cmn	w10, #0x1
  45d4b8:	add	w10, w10, #0x1
  45d4bc:	cset	w11, lt  // lt = tstop
  45d4c0:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45d4c4:	cmp	w9, #0x45
  45d4c8:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d4cc:	ldr	x10, [sp, #104]
  45d4d0:	ldr	w10, [x10, #8]
  45d4d4:	b	45d4e8 <_obstack_memory_used@@Base+0x12324>
  45d4d8:	ldr	w10, [sp, #36]
  45d4dc:	cmp	w9, #0x45
  45d4e0:	mov	w11, #0x1                   	// #1
  45d4e4:	b.eq	45d6bc <_obstack_memory_used@@Base+0x124f8>  // b.none
  45d4e8:	and	w11, w26, #0xff
  45d4ec:	cmp	w11, #0x2d
  45d4f0:	mov	w22, #0x2                   	// #2
  45d4f4:	b.eq	45d95c <_obstack_memory_used@@Base+0x12798>  // b.none
  45d4f8:	cmp	w11, #0x30
  45d4fc:	b.eq	45d95c <_obstack_memory_used@@Base+0x12798>  // b.none
  45d500:	mov	w26, #0x5f                  	// #95
  45d504:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d508:	cmp	w9, #0x45
  45d50c:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d510:	ldr	x10, [sp, #104]
  45d514:	mov	w13, wzr
  45d518:	mov	w12, wzr
  45d51c:	mov	w22, #0x2                   	// #2
  45d520:	ldr	w10, [x10, #16]
  45d524:	cmn	w10, #0x1
  45d528:	add	w10, w10, #0x1
  45d52c:	cset	w11, lt  // lt = tstop
  45d530:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45d534:	ldr	x9, [sp, #120]
  45d538:	bic	w8, w19, w19, asr #31
  45d53c:	cmp	w8, #0x1
  45d540:	csinc	w20, w8, wzr, hi  // hi = pmore
  45d544:	sub	x9, x9, x0
  45d548:	cmp	x9, x20
  45d54c:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45d550:	cbz	x2, 45d7ac <_obstack_memory_used@@Base+0x125e8>
  45d554:	cmp	w8, #0x2
  45d558:	b.cc	45df5c <_obstack_memory_used@@Base+0x12d98>  // b.lo, b.ul, b.last
  45d55c:	sxtw	x8, w19
  45d560:	cmp	w26, #0x30
  45d564:	sub	x21, x8, #0x1
  45d568:	b.ne	45df38 <_obstack_memory_used@@Base+0x12d74>  // b.any
  45d56c:	mov	w1, #0x30                  	// #48
  45d570:	b	45df3c <_obstack_memory_used@@Base+0x12d78>
  45d574:	ldr	x10, [sp, #104]
  45d578:	mov	w14, #0xb                   	// #11
  45d57c:	mov	w13, wzr
  45d580:	mov	w12, wzr
  45d584:	ldr	w10, [x10, #16]
  45d588:	mov	w11, wzr
  45d58c:	mov	w22, #0x1                   	// #1
  45d590:	mul	w10, w10, w14
  45d594:	asr	w10, w10, #5
  45d598:	add	w10, w10, #0x1
  45d59c:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45d5a0:	ldr	x9, [sp, #104]
  45d5a4:	mov	w23, w20
  45d5a8:	mov	x20, x0
  45d5ac:	ldr	x0, [sp, #72]
  45d5b0:	ldr	x8, [x9, #48]
  45d5b4:	ldp	q1, q0, [x9, #16]
  45d5b8:	ldr	q2, [x9]
  45d5bc:	add	x1, sp, #0x80
  45d5c0:	mov	x21, x2
  45d5c4:	str	x8, [sp, #176]
  45d5c8:	stp	q1, q0, [sp, #144]
  45d5cc:	str	q2, [sp, #128]
  45d5d0:	bl	45bfd0 <_obstack_memory_used@@Base+0x10e0c>
  45d5d4:	lsr	x11, x0, #63
  45d5d8:	tbnz	x0, #63, 45dd44 <_obstack_memory_used@@Base+0x12b80>
  45d5dc:	ldr	x28, [sp, #96]
  45d5e0:	mov	x2, x21
  45d5e4:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  45d5e8:	movk	x8, #0x6667
  45d5ec:	smulh	x8, x0, x8
  45d5f0:	asr	x12, x8, #2
  45d5f4:	mov	w9, #0xa                   	// #10
  45d5f8:	add	x8, x12, x8, lsr #63
  45d5fc:	msub	w9, w8, w9, w0
  45d600:	add	x10, x0, #0x9
  45d604:	add	w9, w9, #0x30
  45d608:	cmp	x10, #0x12
  45d60c:	strb	w9, [x28, #-1]!
  45d610:	mov	x0, x8
  45d614:	b.hi	45d5e4 <_obstack_memory_used@@Base+0x12420>  // b.pmore
  45d618:	b	45dd80 <_obstack_memory_used@@Base+0x12bbc>
  45d61c:	ldr	x9, [sp, #120]
  45d620:	bic	w8, w19, w19, asr #31
  45d624:	cmp	w8, #0x1
  45d628:	csinc	w20, w8, wzr, hi  // hi = pmore
  45d62c:	sub	x9, x9, x0
  45d630:	cmp	x9, x20
  45d634:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45d638:	cbz	x2, 45d7ac <_obstack_memory_used@@Base+0x125e8>
  45d63c:	cmp	w8, #0x2
  45d640:	b.cc	45df8c <_obstack_memory_used@@Base+0x12dc8>  // b.lo, b.ul, b.last
  45d644:	sxtw	x8, w19
  45d648:	cmp	w26, #0x30
  45d64c:	sub	x21, x8, #0x1
  45d650:	b.ne	45df68 <_obstack_memory_used@@Base+0x12da4>  // b.any
  45d654:	mov	w1, #0x30                  	// #48
  45d658:	b	45df6c <_obstack_memory_used@@Base+0x12da8>
  45d65c:	ldr	x10, [sp, #104]
  45d660:	mov	w11, #0x2493                	// #9363
  45d664:	movk	w11, #0x9249, lsl #16
  45d668:	mov	w22, #0x1                   	// #1
  45d66c:	ldr	w10, [x10, #24]
  45d670:	add	w10, w10, #0x6
  45d674:	smull	x11, w10, w11
  45d678:	lsr	x11, x11, #32
  45d67c:	add	w11, w11, w10
  45d680:	asr	w12, w11, #2
  45d684:	add	w11, w12, w11, lsr #31
  45d688:	sub	w11, w11, w11, lsl #3
  45d68c:	add	w10, w10, w11
  45d690:	add	w10, w10, #0x1
  45d694:	b	45d95c <_obstack_memory_used@@Base+0x12798>
  45d698:	cmp	w9, #0x45
  45d69c:	b.eq	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.none
  45d6a0:	ldr	x10, [sp, #104]
  45d6a4:	mov	w22, #0x1                   	// #1
  45d6a8:	ldr	w10, [x10, #24]
  45d6ac:	b	45d95c <_obstack_memory_used@@Base+0x12798>
  45d6b0:	cmp	w9, #0x4f
  45d6b4:	b.ne	45d90c <_obstack_memory_used@@Base+0x12748>  // b.any
  45d6b8:	mov	w11, #0x1                   	// #1
  45d6bc:	mov	w23, w20
  45d6c0:	sub	x8, x25, #0x1
  45d6c4:	mov	w9, #0x1                   	// #1
  45d6c8:	sub	x27, x11, x9
  45d6cc:	ldrb	w10, [x25, x27]
  45d6d0:	mov	x24, x9
  45d6d4:	mov	x28, x8
  45d6d8:	add	x9, x9, #0x1
  45d6dc:	cmp	w10, #0x25
  45d6e0:	sub	x8, x8, #0x1
  45d6e4:	b.ne	45d6c8 <_obstack_memory_used@@Base+0x12504>  // b.any
  45d6e8:	ldr	x9, [sp, #120]
  45d6ec:	bic	w8, w19, w19, asr #31
  45d6f0:	cmp	w8, w24
  45d6f4:	csel	w20, w24, w8, cc  // cc = lo, ul, last
  45d6f8:	sub	x9, x9, x0
  45d6fc:	cmp	x9, x20
  45d700:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45d704:	cbz	x2, 45d7ac <_obstack_memory_used@@Base+0x125e8>
  45d708:	cmp	w8, w24
  45d70c:	and	x21, x24, #0xffffffff
  45d710:	b.ls	45d74c <_obstack_memory_used@@Base+0x12588>  // b.plast
  45d714:	sxtw	x8, w19
  45d718:	cmp	w26, #0x30
  45d71c:	sub	x22, x8, x21
  45d720:	str	x0, [sp, #56]
  45d724:	b.ne	45d730 <_obstack_memory_used@@Base+0x1256c>  // b.any
  45d728:	mov	w1, #0x30                  	// #48
  45d72c:	b	45d734 <_obstack_memory_used@@Base+0x12570>
  45d730:	mov	w1, #0x20                  	// #32
  45d734:	mov	x0, x2
  45d738:	mov	x19, x2
  45d73c:	mov	x2, x22
  45d740:	bl	404320 <memset@plt>
  45d744:	ldr	x0, [sp, #56]
  45d748:	add	x2, x19, x22
  45d74c:	mov	x19, x0
  45d750:	tbz	w23, #0, 45d78c <_obstack_memory_used@@Base+0x125c8>
  45d754:	mov	x22, x2
  45d758:	bl	404460 <__ctype_toupper_loc@plt>
  45d75c:	mov	x2, x22
  45d760:	sub	x8, x22, #0x1
  45d764:	add	x9, x28, w24, uxtw
  45d768:	mov	x10, x21
  45d76c:	ldr	x11, [x0]
  45d770:	ldrb	w12, [x9], #-1
  45d774:	ldr	w11, [x11, x12, lsl #2]
  45d778:	subs	x12, x10, #0x1
  45d77c:	strb	w11, [x8, x10]
  45d780:	mov	x10, x12
  45d784:	b.ne	45d76c <_obstack_memory_used@@Base+0x125a8>  // b.any
  45d788:	b	45d7a4 <_obstack_memory_used@@Base+0x125e0>
  45d78c:	add	x1, x25, x27
  45d790:	mov	x0, x2
  45d794:	mov	x22, x2
  45d798:	mov	x2, x21
  45d79c:	bl	403e80 <memcpy@plt>
  45d7a0:	mov	x2, x22
  45d7a4:	add	x2, x2, x21
  45d7a8:	mov	x0, x19
  45d7ac:	add	x0, x0, x20
  45d7b0:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45d7b4:	cmp	w9, #0x45
  45d7b8:	b.ne	45d91c <_obstack_memory_used@@Base+0x12758>  // b.any
  45d7bc:	mov	w24, wzr
  45d7c0:	mov	w22, wzr
  45d7c4:	mov	w8, #0x79                  	// #121
  45d7c8:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d7cc:	mov	x2, xzr
  45d7d0:	add	x0, x20, x0
  45d7d4:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45d7d8:	sub	w14, w15, #0x1
  45d7dc:	tst	w14, #0x3
  45d7e0:	mov	w13, #0x16d                 	// #365
  45d7e4:	b.ne	45d820 <_obstack_memory_used@@Base+0x1265c>  // b.any
  45d7e8:	mov	w15, #0x5c29                	// #23593
  45d7ec:	mov	w16, #0xb850                	// #47184
  45d7f0:	movk	w15, #0xc28f, lsl #16
  45d7f4:	movk	w16, #0x51e, lsl #16
  45d7f8:	mov	w17, #0xd70b                	// #55051
  45d7fc:	madd	w14, w14, w15, w16
  45d800:	movk	w17, #0xa3, lsl #16
  45d804:	ror	w15, w14, #2
  45d808:	ror	w14, w14, #4
  45d80c:	cmp	w14, w17
  45d810:	mov	w14, #0x5c28                	// #23592
  45d814:	movk	w14, #0x28f, lsl #16
  45d818:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  45d81c:	cinc	w13, w13, hi  // hi = pmore
  45d820:	add	w12, w13, w12
  45d824:	mov	w13, #0x17e                 	// #382
  45d828:	mov	w14, #0x2493                	// #9363
  45d82c:	sub	w10, w13, w10
  45d830:	movk	w14, #0x9249, lsl #16
  45d834:	add	w12, w10, w12
  45d838:	smull	x13, w12, w14
  45d83c:	lsr	x13, x13, #32
  45d840:	add	w12, w13, w12
  45d844:	asr	w13, w12, #2
  45d848:	add	w12, w13, w12, lsr #31
  45d84c:	lsl	w13, w12, #3
  45d850:	sub	w12, w13, w12
  45d854:	sub	w10, w12, w10
  45d858:	add	w10, w10, #0x3
  45d85c:	mov	w14, #0xffffffff            	// #-1
  45d860:	cmp	w8, #0x47
  45d864:	b.ne	45d064 <_obstack_memory_used@@Base+0x11ea0>  // b.any
  45d868:	mov	w10, #0xfffff894            	// #-1900
  45d86c:	add	w15, w11, w14
  45d870:	sub	w14, w10, w14
  45d874:	cmp	w11, w14
  45d878:	mov	w13, wzr
  45d87c:	mov	w12, wzr
  45d880:	add	w10, w15, #0x76c
  45d884:	cset	w11, lt  // lt = tstop
  45d888:	mov	w22, #0x4                   	// #4
  45d88c:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45d890:	mov	w11, #0x2493                	// #9363
  45d894:	movk	w11, #0x9249, lsl #16
  45d898:	smull	x11, w10, w11
  45d89c:	lsr	x11, x11, #32
  45d8a0:	add	w10, w11, w10
  45d8a4:	asr	w11, w10, #2
  45d8a8:	add	w10, w11, w10, lsr #31
  45d8ac:	add	w10, w10, #0x1
  45d8b0:	b	45d958 <_obstack_memory_used@@Base+0x12794>
  45d8b4:	ldr	x10, [sp, #104]
  45d8b8:	mov	w11, #0x851f                	// #34079
  45d8bc:	movk	w11, #0x51eb, lsl #16
  45d8c0:	mov	w14, #0x64                  	// #100
  45d8c4:	ldrsw	x10, [x10, #20]
  45d8c8:	mov	w13, wzr
  45d8cc:	mov	w12, wzr
  45d8d0:	mov	w22, #0x2                   	// #2
  45d8d4:	mul	x11, x10, x11
  45d8d8:	lsr	x15, x11, #63
  45d8dc:	asr	x11, x11, #37
  45d8e0:	add	w15, w11, w15
  45d8e4:	cmn	x10, #0x76c
  45d8e8:	msub	w10, w15, w14, w10
  45d8ec:	cset	w11, lt  // lt = tstop
  45d8f0:	cset	w14, gt
  45d8f4:	cmp	w10, #0x0
  45d8f8:	cset	w10, lt  // lt = tstop
  45d8fc:	and	w10, w14, w10
  45d900:	sub	w10, w15, w10
  45d904:	add	w10, w10, #0x13
  45d908:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45d90c:	mov	w24, wzr
  45d910:	mov	w22, wzr
  45d914:	mov	w8, #0x78                  	// #120
  45d918:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45d91c:	ldr	x10, [sp, #104]
  45d920:	mov	w11, #0x851f                	// #34079
  45d924:	movk	w11, #0x51eb, lsl #16
  45d928:	mov	w12, #0x64                  	// #100
  45d92c:	ldrsw	x10, [x10, #20]
  45d930:	mul	x11, x10, x11
  45d934:	lsr	x13, x11, #63
  45d938:	asr	x11, x11, #37
  45d93c:	add	w11, w11, w13
  45d940:	cmn	w10, #0x76c
  45d944:	msub	w10, w11, w12, w10
  45d948:	add	w11, w10, #0x64
  45d94c:	csneg	w11, w11, w10, ge  // ge = tcont
  45d950:	cmp	w10, #0x0
  45d954:	csel	w10, w11, w10, lt  // lt = tstop
  45d958:	mov	w22, #0x2                   	// #2
  45d95c:	mov	w13, wzr
  45d960:	mov	w12, wzr
  45d964:	lsr	w11, w10, #31
  45d968:	cmp	w9, #0x4f
  45d96c:	b.ne	45da0c <_obstack_memory_used@@Base+0x12848>  // b.any
  45d970:	cbnz	w11, 45da0c <_obstack_memory_used@@Base+0x12848>
  45d974:	mov	w24, wzr
  45d978:	mov	w10, #0x2520                	// #9504
  45d97c:	sturh	w10, [x29, #-40]
  45d980:	ldr	x10, [sp, #88]
  45d984:	mov	x23, x2
  45d988:	mov	x27, x0
  45d98c:	cbz	w9, 45d998 <_obstack_memory_used@@Base+0x127d4>
  45d990:	ldr	x10, [sp, #80]
  45d994:	sturb	w9, [x29, #-38]
  45d998:	ldr	x3, [sp, #104]
  45d99c:	add	x0, sp, #0x80
  45d9a0:	sub	x2, x29, #0x28
  45d9a4:	mov	w1, #0x400                 	// #1024
  45d9a8:	strb	w8, [x10]
  45d9ac:	strb	wzr, [x10, #1]
  45d9b0:	bl	404060 <strftime@plt>
  45d9b4:	cbz	x0, 45dac0 <_obstack_memory_used@@Base+0x128fc>
  45d9b8:	ldr	x9, [sp, #120]
  45d9bc:	sub	x28, x0, #0x1
  45d9c0:	bic	w8, w19, w19, asr #31
  45d9c4:	cmp	x28, x8
  45d9c8:	mov	w10, w22
  45d9cc:	csel	x22, x8, x28, cc  // cc = lo, ul, last
  45d9d0:	sub	x9, x9, x27
  45d9d4:	mov	x21, x0
  45d9d8:	cmp	x22, x9
  45d9dc:	b.cs	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.hs, b.nlast
  45d9e0:	mov	x2, x23
  45d9e4:	cbz	x23, 45dc94 <_obstack_memory_used@@Base+0x12ad0>
  45d9e8:	cbnz	w10, 45dc00 <_obstack_memory_used@@Base+0x12a3c>
  45d9ec:	cmp	x28, x8
  45d9f0:	b.cs	45dc00 <_obstack_memory_used@@Base+0x12a3c>  // b.hs, b.nlast
  45d9f4:	sxtw	x8, w19
  45d9f8:	cmp	w26, #0x30
  45d9fc:	sub	x19, x8, x28
  45da00:	b.ne	45dbe8 <_obstack_memory_used@@Base+0x12a24>  // b.any
  45da04:	mov	w1, #0x30                  	// #48
  45da08:	b	45dbec <_obstack_memory_used@@Base+0x12a28>
  45da0c:	ldr	x28, [sp, #96]
  45da10:	cmp	w11, #0x0
  45da14:	cneg	w8, w10, ne  // ne = any
  45da18:	tbz	w13, #0, 45da24 <_obstack_memory_used@@Base+0x12860>
  45da1c:	mov	w9, #0x3a                  	// #58
  45da20:	strb	w9, [x28, #-1]!
  45da24:	mov	w9, #0xcccd                	// #52429
  45da28:	movk	w9, #0xcccc, lsl #16
  45da2c:	umull	x9, w8, w9
  45da30:	mov	w10, #0xa                   	// #10
  45da34:	lsr	x9, x9, #35
  45da38:	msub	w10, w9, w10, w8
  45da3c:	orr	w10, w10, #0x30
  45da40:	asr	w13, w13, #1
  45da44:	cmp	w8, #0x9
  45da48:	strb	w10, [x28, #-1]!
  45da4c:	mov	w8, w9
  45da50:	b.hi	45da18 <_obstack_memory_used@@Base+0x12854>  // b.pmore
  45da54:	mov	w8, w9
  45da58:	cbnz	w13, 45da18 <_obstack_memory_used@@Base+0x12854>
  45da5c:	cmp	w22, w19
  45da60:	csel	w22, w19, w22, lt  // lt = tstop
  45da64:	cmp	w12, #0x0
  45da68:	mov	w8, #0x2b                  	// #43
  45da6c:	csel	w8, w8, wzr, ne  // ne = any
  45da70:	cmp	w11, #0x0
  45da74:	mov	w9, #0x2d                  	// #45
  45da78:	csel	w24, w9, w8, ne  // ne = any
  45da7c:	cmp	w26, #0x2d
  45da80:	str	w20, [sp, #68]
  45da84:	b.ne	45dacc <_obstack_memory_used@@Base+0x12908>  // b.any
  45da88:	cbz	w24, 45dfe4 <_obstack_memory_used@@Base+0x12e20>
  45da8c:	ldr	x9, [sp, #120]
  45da90:	bic	w8, w19, w19, asr #31
  45da94:	cmp	w8, #0x1
  45da98:	csinc	w20, w8, wzr, hi  // hi = pmore
  45da9c:	sub	x9, x9, x0
  45daa0:	cmp	x9, x20
  45daa4:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45daa8:	cbz	x2, 45dfe0 <_obstack_memory_used@@Base+0x12e1c>
  45daac:	cbnz	w22, 45dfdc <_obstack_memory_used@@Base+0x12e18>
  45dab0:	cmp	w8, #0x2
  45dab4:	b.cc	45dfdc <_obstack_memory_used@@Base+0x12e18>  // b.lo, b.ul, b.last
  45dab8:	sxtw	x8, w19
  45dabc:	b	45db70 <_obstack_memory_used@@Base+0x129ac>
  45dac0:	mov	x0, x27
  45dac4:	mov	x2, x23
  45dac8:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45dacc:	ldr	x10, [sp, #96]
  45dad0:	sxtw	x8, w22
  45dad4:	cmp	w24, #0x0
  45dad8:	cset	w9, ne  // ne = any
  45dadc:	sub	x10, x8, x10
  45dae0:	add	x10, x10, x28
  45dae4:	sub	x20, x10, x9
  45dae8:	cmp	w20, #0x1
  45daec:	b.lt	45db9c <_obstack_memory_used@@Base+0x129d8>  // b.tstop
  45daf0:	cmp	w26, #0x5f
  45daf4:	b.ne	45dca0 <_obstack_memory_used@@Base+0x12adc>  // b.any
  45daf8:	ldr	x8, [sp, #120]
  45dafc:	sxtw	x21, w20
  45db00:	sub	x8, x8, x0
  45db04:	cmp	x21, x8
  45db08:	b.cs	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.hs, b.nlast
  45db0c:	cbz	x2, 45db34 <_obstack_memory_used@@Base+0x12970>
  45db10:	mov	w1, #0x20                  	// #32
  45db14:	mov	x23, x0
  45db18:	mov	x0, x2
  45db1c:	mov	x27, x2
  45db20:	mov	x2, x21
  45db24:	bl	404320 <memset@plt>
  45db28:	mov	x2, x27
  45db2c:	mov	x0, x23
  45db30:	add	x2, x27, x21
  45db34:	subs	w8, w19, w20
  45db38:	add	x0, x21, x0
  45db3c:	csel	w19, w8, wzr, gt
  45db40:	cbz	w24, 45dfe4 <_obstack_memory_used@@Base+0x12e20>
  45db44:	ldr	x8, [sp, #120]
  45db48:	cmp	w19, #0x1
  45db4c:	csinc	w20, w19, wzr, hi  // hi = pmore
  45db50:	sub	x8, x8, x0
  45db54:	cmp	x8, x20
  45db58:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45db5c:	cbz	x2, 45dfe0 <_obstack_memory_used@@Base+0x12e1c>
  45db60:	cbnz	w22, 45dfdc <_obstack_memory_used@@Base+0x12e18>
  45db64:	cmp	w19, #0x2
  45db68:	b.cc	45dfdc <_obstack_memory_used@@Base+0x12e18>  // b.lo, b.ul, b.last
  45db6c:	mov	w8, w19
  45db70:	sub	x21, x8, #0x1
  45db74:	mov	w1, #0x20                  	// #32
  45db78:	mov	x23, x0
  45db7c:	mov	x0, x2
  45db80:	mov	x27, x2
  45db84:	mov	x2, x21
  45db88:	bl	404320 <memset@plt>
  45db8c:	mov	x2, x27
  45db90:	mov	x0, x23
  45db94:	add	x2, x27, x21
  45db98:	b	45dfdc <_obstack_memory_used@@Base+0x12e18>
  45db9c:	cbz	w24, 45dfe4 <_obstack_memory_used@@Base+0x12e20>
  45dba0:	ldr	x9, [sp, #120]
  45dba4:	bic	w8, w19, w19, asr #31
  45dba8:	cmp	w8, #0x1
  45dbac:	csinc	w20, w8, wzr, hi  // hi = pmore
  45dbb0:	sub	x9, x9, x0
  45dbb4:	cmp	x9, x20
  45dbb8:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45dbbc:	cbz	x2, 45dfe0 <_obstack_memory_used@@Base+0x12e1c>
  45dbc0:	cbnz	w22, 45dfdc <_obstack_memory_used@@Base+0x12e18>
  45dbc4:	cmp	w8, #0x2
  45dbc8:	b.cc	45dfdc <_obstack_memory_used@@Base+0x12e18>  // b.lo, b.ul, b.last
  45dbcc:	sxtw	x8, w19
  45dbd0:	mov	x27, x0
  45dbd4:	cmp	w26, #0x30
  45dbd8:	sub	x21, x8, #0x1
  45dbdc:	b.ne	45dfc0 <_obstack_memory_used@@Base+0x12dfc>  // b.any
  45dbe0:	mov	w1, #0x30                  	// #48
  45dbe4:	b	45dfc4 <_obstack_memory_used@@Base+0x12e00>
  45dbe8:	mov	w1, #0x20                  	// #32
  45dbec:	mov	x0, x2
  45dbf0:	mov	x2, x19
  45dbf4:	bl	404320 <memset@plt>
  45dbf8:	mov	x2, x23
  45dbfc:	add	x2, x23, x19
  45dc00:	tbz	w24, #0, 45dc3c <_obstack_memory_used@@Base+0x12a78>
  45dc04:	cbz	x28, 45dc90 <_obstack_memory_used@@Base+0x12acc>
  45dc08:	mov	x19, x2
  45dc0c:	bl	404100 <__ctype_tolower_loc@plt>
  45dc10:	ldr	x11, [sp, #40]
  45dc14:	mov	x2, x19
  45dc18:	sub	x8, x19, #0x2
  45dc1c:	ldr	x9, [x0]
  45dc20:	ldrb	w10, [x11, x21]
  45dc24:	ldr	w9, [x9, x10, lsl #2]
  45dc28:	strb	w9, [x8, x21]
  45dc2c:	sub	x21, x21, #0x1
  45dc30:	cmp	x21, #0x1
  45dc34:	b.ne	45dc1c <_obstack_memory_used@@Base+0x12a58>  // b.any
  45dc38:	b	45dc90 <_obstack_memory_used@@Base+0x12acc>
  45dc3c:	tbz	w20, #0, 45dc78 <_obstack_memory_used@@Base+0x12ab4>
  45dc40:	cbz	x28, 45dc90 <_obstack_memory_used@@Base+0x12acc>
  45dc44:	mov	x19, x2
  45dc48:	bl	404460 <__ctype_toupper_loc@plt>
  45dc4c:	ldr	x11, [sp, #40]
  45dc50:	mov	x2, x19
  45dc54:	sub	x8, x19, #0x2
  45dc58:	ldr	x9, [x0]
  45dc5c:	ldrb	w10, [x11, x21]
  45dc60:	ldr	w9, [x9, x10, lsl #2]
  45dc64:	strb	w9, [x8, x21]
  45dc68:	sub	x21, x21, #0x1
  45dc6c:	cmp	x21, #0x1
  45dc70:	b.ne	45dc58 <_obstack_memory_used@@Base+0x12a94>  // b.any
  45dc74:	b	45dc90 <_obstack_memory_used@@Base+0x12acc>
  45dc78:	ldr	x1, [sp, #16]
  45dc7c:	mov	x0, x2
  45dc80:	mov	x19, x2
  45dc84:	mov	x2, x28
  45dc88:	bl	403e80 <memcpy@plt>
  45dc8c:	mov	x2, x19
  45dc90:	add	x2, x2, x28
  45dc94:	mov	x0, x27
  45dc98:	add	x0, x22, x27
  45dc9c:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45dca0:	ldr	x9, [sp, #120]
  45dca4:	sub	x9, x9, x0
  45dca8:	cmp	x9, x8
  45dcac:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45dcb0:	cbz	w24, 45e0f8 <_obstack_memory_used@@Base+0x12f34>
  45dcb4:	bic	w8, w19, w19, asr #31
  45dcb8:	cmp	w8, #0x1
  45dcbc:	csinc	w27, w8, wzr, hi  // hi = pmore
  45dcc0:	cmp	x9, x27
  45dcc4:	b.ls	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.plast
  45dcc8:	cbz	x2, 45e0f4 <_obstack_memory_used@@Base+0x12f30>
  45dccc:	cbnz	w22, 45e0f0 <_obstack_memory_used@@Base+0x12f2c>
  45dcd0:	cmp	w8, #0x2
  45dcd4:	b.cc	45e0f0 <_obstack_memory_used@@Base+0x12f2c>  // b.lo, b.ul, b.last
  45dcd8:	sxtw	x8, w19
  45dcdc:	cmp	w26, #0x30
  45dce0:	sub	x21, x8, #0x1
  45dce4:	str	x0, [sp, #56]
  45dce8:	b.ne	45e0d4 <_obstack_memory_used@@Base+0x12f10>  // b.any
  45dcec:	mov	w1, #0x30                  	// #48
  45dcf0:	b	45e0d8 <_obstack_memory_used@@Base+0x12f14>
  45dcf4:	mov	w1, #0x20                  	// #32
  45dcf8:	mov	x0, x10
  45dcfc:	mov	x2, x26
  45dd00:	mov	x19, x10
  45dd04:	bl	404320 <memset@plt>
  45dd08:	add	x10, x19, x26
  45dd0c:	ldr	x3, [sp, #104]
  45dd10:	ldr	w6, [sp, #52]
  45dd14:	ldr	x5, [sp, #72]
  45dd18:	and	w4, w23, #0x1
  45dd1c:	mov	x0, x10
  45dd20:	mov	x1, x22
  45dd24:	mov	x2, x21
  45dd28:	mov	x19, x10
  45dd2c:	bl	45cd44 <_obstack_memory_used@@Base+0x11b80>
  45dd30:	mov	x2, x19
  45dd34:	mov	x0, x24
  45dd38:	add	x2, x19, x28
  45dd3c:	add	x0, x20, x24
  45dd40:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45dd44:	ldr	x28, [sp, #96]
  45dd48:	mov	x2, x21
  45dd4c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  45dd50:	movk	x8, #0x6667
  45dd54:	smulh	x8, x0, x8
  45dd58:	asr	x13, x8, #2
  45dd5c:	mov	w9, #0xa                   	// #10
  45dd60:	neg	w10, w0
  45dd64:	add	x12, x0, #0x9
  45dd68:	add	x0, x13, x8, lsr #63
  45dd6c:	madd	w8, w0, w9, w10
  45dd70:	add	w8, w8, #0x30
  45dd74:	cmp	x12, #0x12
  45dd78:	strb	w8, [x28, #-1]!
  45dd7c:	b.hi	45dd4c <_obstack_memory_used@@Base+0x12b88>  // b.pmore
  45dd80:	cmp	w19, #0x1
  45dd84:	mov	w8, wzr
  45dd88:	csinc	w22, w19, wzr, gt
  45dd8c:	mov	x0, x20
  45dd90:	mov	w20, w23
  45dd94:	b	45da70 <_obstack_memory_used@@Base+0x128ac>
  45dd98:	mov	w11, #0x1                   	// #1
  45dd9c:	cmp	x10, #0x3
  45dda0:	b.ls	45ddd0 <_obstack_memory_used@@Base+0x12c0c>  // b.plast
  45dda4:	b	45d6b8 <_obstack_memory_used@@Base+0x124f4>
  45dda8:	mov	w24, wzr
  45ddac:	mov	w22, wzr
  45ddb0:	mov	w8, #0x59                  	// #89
  45ddb4:	b	45d978 <_obstack_memory_used@@Base+0x127b4>
  45ddb8:	ldr	x11, [sp, #24]
  45ddbc:	ldrb	w11, [x11]
  45ddc0:	cmp	w11, #0x2d
  45ddc4:	cset	w11, eq  // eq = none
  45ddc8:	cmp	x10, #0x3
  45ddcc:	b.hi	45d6b8 <_obstack_memory_used@@Base+0x124f4>  // b.pmore
  45ddd0:	mov	w13, #0x8889                	// #34953
  45ddd4:	movk	w13, #0x8888, lsl #16
  45ddd8:	adrp	x15, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45dddc:	add	x15, x15, #0xa9e
  45dde0:	smull	x16, w12, w13
  45dde4:	adr	x17, 45de40 <_obstack_memory_used@@Base+0x12c7c>
  45dde8:	ldrb	w18, [x15, x10]
  45ddec:	add	x17, x17, x18, lsl #2
  45ddf0:	lsr	x10, x16, #32
  45ddf4:	mov	w14, #0xb3c5                	// #46021
  45ddf8:	add	w10, w10, w12
  45ddfc:	movk	w14, #0x91a2, lsl #16
  45de00:	asr	w15, w10, #5
  45de04:	smull	x14, w12, w14
  45de08:	add	w15, w15, w10, lsr #31
  45de0c:	lsr	x14, x14, #32
  45de10:	smull	x13, w15, w13
  45de14:	add	w14, w14, w12
  45de18:	lsr	x13, x13, #32
  45de1c:	asr	w10, w14, #11
  45de20:	add	w13, w13, w15
  45de24:	add	w10, w10, w14, lsr #31
  45de28:	asr	w14, w13, #5
  45de2c:	add	w13, w14, w13, lsr #31
  45de30:	mov	w16, #0x3c                  	// #60
  45de34:	msub	w14, w13, w16, w15
  45de38:	msub	w13, w15, w16, w12
  45de3c:	br	x17
  45de40:	mov	w12, #0x64                  	// #100
  45de44:	mov	w13, wzr
  45de48:	mov	w22, #0x5                   	// #5
  45de4c:	madd	w10, w10, w12, w14
  45de50:	mov	w12, #0x1                   	// #1
  45de54:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45de58:	ldr	w10, [sp, #52]
  45de5c:	mov	w19, #0x9                   	// #9
  45de60:	mov	w22, #0x9                   	// #9
  45de64:	b	45d95c <_obstack_memory_used@@Base+0x12798>
  45de68:	cbz	w13, 45e134 <_obstack_memory_used@@Base+0x12f70>
  45de6c:	mov	w15, #0x2710                	// #10000
  45de70:	mov	w16, #0x64                  	// #100
  45de74:	madd	w10, w10, w15, w13
  45de78:	mov	w22, #0x9                   	// #9
  45de7c:	mov	w12, #0x1                   	// #1
  45de80:	madd	w10, w14, w16, w10
  45de84:	mov	w13, #0x14                  	// #20
  45de88:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45de8c:	ldr	w10, [sp, #52]
  45de90:	mov	w22, w19
  45de94:	b	45d95c <_obstack_memory_used@@Base+0x12798>
  45de98:	mov	w1, #0x20                  	// #32
  45de9c:	mov	x0, x2
  45dea0:	mov	x2, x22
  45dea4:	bl	404320 <memset@plt>
  45dea8:	mov	x2, x23
  45deac:	add	x2, x23, x22
  45deb0:	tbz	w28, #0, 45def0 <_obstack_memory_used@@Base+0x12d2c>
  45deb4:	cbz	x21, 45dfb0 <_obstack_memory_used@@Base+0x12dec>
  45deb8:	mov	x19, x2
  45debc:	bl	404100 <__ctype_tolower_loc@plt>
  45dec0:	ldr	x12, [sp, #8]
  45dec4:	mov	x2, x19
  45dec8:	sub	x8, x19, #0x1
  45decc:	mov	x9, x21
  45ded0:	ldr	x10, [x0]
  45ded4:	ldrb	w11, [x12, x9]
  45ded8:	ldr	w10, [x10, x11, lsl #2]
  45dedc:	subs	x11, x9, #0x1
  45dee0:	strb	w10, [x8, x9]
  45dee4:	mov	x9, x11
  45dee8:	b.ne	45ded0 <_obstack_memory_used@@Base+0x12d0c>  // b.any
  45deec:	b	45dfb0 <_obstack_memory_used@@Base+0x12dec>
  45def0:	eor	w8, w28, #0x1
  45def4:	and	w8, w27, w8
  45def8:	tbz	w8, #0, 45df98 <_obstack_memory_used@@Base+0x12dd4>
  45defc:	cbz	x21, 45dfb0 <_obstack_memory_used@@Base+0x12dec>
  45df00:	mov	x19, x2
  45df04:	bl	404460 <__ctype_toupper_loc@plt>
  45df08:	ldr	x12, [sp, #8]
  45df0c:	mov	x2, x19
  45df10:	sub	x8, x19, #0x1
  45df14:	mov	x9, x21
  45df18:	ldr	x10, [x0]
  45df1c:	ldrb	w11, [x12, x9]
  45df20:	ldr	w10, [x10, x11, lsl #2]
  45df24:	subs	x11, x9, #0x1
  45df28:	strb	w10, [x8, x9]
  45df2c:	mov	x9, x11
  45df30:	b.ne	45df18 <_obstack_memory_used@@Base+0x12d54>  // b.any
  45df34:	b	45dfb0 <_obstack_memory_used@@Base+0x12dec>
  45df38:	mov	w1, #0x20                  	// #32
  45df3c:	mov	x19, x0
  45df40:	mov	x0, x2
  45df44:	mov	x22, x2
  45df48:	mov	x2, x21
  45df4c:	bl	404320 <memset@plt>
  45df50:	mov	x2, x22
  45df54:	mov	x0, x19
  45df58:	add	x2, x22, x21
  45df5c:	mov	w8, #0xa                   	// #10
  45df60:	strb	w8, [x2], #1
  45df64:	b	45d7ac <_obstack_memory_used@@Base+0x125e8>
  45df68:	mov	w1, #0x20                  	// #32
  45df6c:	mov	x19, x0
  45df70:	mov	x0, x2
  45df74:	mov	x22, x2
  45df78:	mov	x2, x21
  45df7c:	bl	404320 <memset@plt>
  45df80:	mov	x2, x22
  45df84:	mov	x0, x19
  45df88:	add	x2, x22, x21
  45df8c:	mov	w8, #0x9                   	// #9
  45df90:	strb	w8, [x2], #1
  45df94:	b	45d7ac <_obstack_memory_used@@Base+0x125e8>
  45df98:	ldr	x1, [sp, #24]
  45df9c:	mov	x0, x2
  45dfa0:	mov	x19, x2
  45dfa4:	mov	x2, x21
  45dfa8:	bl	403e80 <memcpy@plt>
  45dfac:	mov	x2, x19
  45dfb0:	add	x2, x2, x21
  45dfb4:	mov	x0, x24
  45dfb8:	add	x0, x20, x24
  45dfbc:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45dfc0:	mov	w1, #0x20                  	// #32
  45dfc4:	mov	x0, x2
  45dfc8:	mov	x23, x2
  45dfcc:	mov	x2, x21
  45dfd0:	bl	404320 <memset@plt>
  45dfd4:	add	x2, x23, x21
  45dfd8:	mov	x0, x27
  45dfdc:	strb	w24, [x2], #1
  45dfe0:	add	x0, x0, x20
  45dfe4:	bic	w8, w19, w19, asr #31
  45dfe8:	ldr	x9, [sp, #96]
  45dfec:	mov	w8, w8
  45dff0:	sub	x21, x9, x28
  45dff4:	ldr	x9, [sp, #120]
  45dff8:	cmp	x21, x8
  45dffc:	csel	x20, x8, x21, cc  // cc = lo, ul, last
  45e000:	sub	x9, x9, x0
  45e004:	cmp	x20, x9
  45e008:	b.cs	45e1a0 <_obstack_memory_used@@Base+0x12fdc>  // b.hs, b.nlast
  45e00c:	cbz	x2, 45e0c0 <_obstack_memory_used@@Base+0x12efc>
  45e010:	cbnz	w22, 45e058 <_obstack_memory_used@@Base+0x12e94>
  45e014:	cmp	x21, x8
  45e018:	b.cs	45e058 <_obstack_memory_used@@Base+0x12e94>  // b.hs, b.nlast
  45e01c:	sxtw	x8, w19
  45e020:	cmp	w26, #0x30
  45e024:	sub	x22, x8, x21
  45e028:	b.ne	45e034 <_obstack_memory_used@@Base+0x12e70>  // b.any
  45e02c:	mov	w1, #0x30                  	// #48
  45e030:	b	45e038 <_obstack_memory_used@@Base+0x12e74>
  45e034:	mov	w1, #0x20                  	// #32
  45e038:	mov	x19, x0
  45e03c:	mov	x0, x2
  45e040:	mov	x23, x2
  45e044:	mov	x2, x22
  45e048:	bl	404320 <memset@plt>
  45e04c:	mov	x2, x23
  45e050:	mov	x0, x19
  45e054:	add	x2, x23, x22
  45e058:	ldr	w8, [sp, #68]
  45e05c:	mov	x19, x0
  45e060:	tbz	w8, #0, 45e0a0 <_obstack_memory_used@@Base+0x12edc>
  45e064:	cbz	x21, 45e0b8 <_obstack_memory_used@@Base+0x12ef4>
  45e068:	mov	x22, x2
  45e06c:	bl	404460 <__ctype_toupper_loc@plt>
  45e070:	mov	x2, x22
  45e074:	sub	x8, x22, #0x1
  45e078:	sub	x9, x28, #0x1
  45e07c:	mov	x10, x21
  45e080:	ldr	x11, [x0]
  45e084:	ldrb	w12, [x9, x10]
  45e088:	ldr	w11, [x11, x12, lsl #2]
  45e08c:	subs	x12, x10, #0x1
  45e090:	strb	w11, [x8, x10]
  45e094:	mov	x10, x12
  45e098:	b.ne	45e080 <_obstack_memory_used@@Base+0x12ebc>  // b.any
  45e09c:	b	45e0b8 <_obstack_memory_used@@Base+0x12ef4>
  45e0a0:	mov	x0, x2
  45e0a4:	mov	x1, x28
  45e0a8:	mov	x22, x2
  45e0ac:	mov	x2, x21
  45e0b0:	bl	403e80 <memcpy@plt>
  45e0b4:	mov	x2, x22
  45e0b8:	add	x2, x2, x21
  45e0bc:	mov	x0, x19
  45e0c0:	add	x0, x20, x0
  45e0c4:	b	45ce00 <_obstack_memory_used@@Base+0x11c3c>
  45e0c8:	mov	w8, #0x25                  	// #37
  45e0cc:	strb	w8, [x2], #1
  45e0d0:	b	45d7ac <_obstack_memory_used@@Base+0x125e8>
  45e0d4:	mov	w1, #0x20                  	// #32
  45e0d8:	mov	x0, x2
  45e0dc:	mov	x19, x2
  45e0e0:	mov	x2, x21
  45e0e4:	bl	404320 <memset@plt>
  45e0e8:	ldr	x0, [sp, #56]
  45e0ec:	add	x2, x19, x21
  45e0f0:	strb	w24, [x2], #1
  45e0f4:	add	x0, x0, x27
  45e0f8:	sxtw	x21, w20
  45e0fc:	cbz	x2, 45e124 <_obstack_memory_used@@Base+0x12f60>
  45e100:	mov	w1, #0x30                  	// #48
  45e104:	mov	x19, x0
  45e108:	mov	x0, x2
  45e10c:	mov	x20, x2
  45e110:	mov	x2, x21
  45e114:	bl	404320 <memset@plt>
  45e118:	mov	x2, x20
  45e11c:	mov	x0, x19
  45e120:	add	x2, x20, x21
  45e124:	mov	w19, wzr
  45e128:	mov	w8, wzr
  45e12c:	add	x0, x0, x21
  45e130:	b	45dfe8 <_obstack_memory_used@@Base+0x12e24>
  45e134:	cbz	w14, 45e178 <_obstack_memory_used@@Base+0x12fb4>
  45e138:	mov	w13, #0x64                  	// #100
  45e13c:	mov	w22, #0x6                   	// #6
  45e140:	mov	w12, #0x1                   	// #1
  45e144:	madd	w10, w10, w13, w14
  45e148:	mov	w13, #0x4                   	// #4
  45e14c:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45e150:	mov	w1, #0x20                  	// #32
  45e154:	mov	x0, x2
  45e158:	mov	x19, x2
  45e15c:	mov	x2, x21
  45e160:	bl	404320 <memset@plt>
  45e164:	ldrb	w8, [x25]
  45e168:	add	x2, x19, x21
  45e16c:	mov	x0, x22
  45e170:	strb	w8, [x2], #1
  45e174:	b	45d7ac <_obstack_memory_used@@Base+0x125e8>
  45e178:	mov	w13, wzr
  45e17c:	mov	w22, #0x3                   	// #3
  45e180:	mov	w12, #0x1                   	// #1
  45e184:	b	45d968 <_obstack_memory_used@@Base+0x127a4>
  45e188:	mov	x0, xzr
  45e18c:	ldr	x8, [sp, #120]
  45e190:	cbz	x8, 45e1a4 <_obstack_memory_used@@Base+0x12fe0>
  45e194:	cbz	x2, 45e1a4 <_obstack_memory_used@@Base+0x12fe0>
  45e198:	strb	wzr, [x2]
  45e19c:	b	45e1a4 <_obstack_memory_used@@Base+0x12fe0>
  45e1a0:	mov	x0, xzr
  45e1a4:	add	sp, sp, #0x4b0
  45e1a8:	ldp	x20, x19, [sp, #80]
  45e1ac:	ldp	x22, x21, [sp, #64]
  45e1b0:	ldp	x24, x23, [sp, #48]
  45e1b4:	ldp	x26, x25, [sp, #32]
  45e1b8:	ldp	x28, x27, [sp, #16]
  45e1bc:	ldp	x29, x30, [sp], #96
  45e1c0:	ret
  45e1c4:	sub	sp, sp, #0xe0
  45e1c8:	stp	x29, x30, [sp, #208]
  45e1cc:	add	x29, sp, #0xd0
  45e1d0:	stp	x3, x4, [x29, #-72]
  45e1d4:	stp	x5, x6, [x29, #-56]
  45e1d8:	stur	x7, [x29, #-40]
  45e1dc:	stp	q1, q2, [sp, #16]
  45e1e0:	stp	q3, q4, [sp, #48]
  45e1e4:	str	q0, [sp]
  45e1e8:	stp	q5, q6, [sp, #80]
  45e1ec:	str	q7, [sp, #112]
  45e1f0:	tbnz	w2, #6, 45e1fc <_obstack_memory_used@@Base+0x13038>
  45e1f4:	mov	w3, wzr
  45e1f8:	b	45e254 <_obstack_memory_used@@Base+0x13090>
  45e1fc:	mov	x9, #0xffffffffffffffd8    	// #-40
  45e200:	mov	x11, sp
  45e204:	sub	x12, x29, #0x48
  45e208:	movk	x9, #0xff80, lsl #32
  45e20c:	add	x10, x29, #0x10
  45e210:	mov	x8, #0xffffffffffffffd8    	// #-40
  45e214:	add	x11, x11, #0x80
  45e218:	add	x12, x12, #0x28
  45e21c:	stp	x11, x9, [x29, #-16]
  45e220:	stp	x10, x12, [x29, #-32]
  45e224:	tbz	w8, #31, 45e244 <_obstack_memory_used@@Base+0x13080>
  45e228:	add	w9, w8, #0x8
  45e22c:	cmn	w8, #0x8
  45e230:	stur	w9, [x29, #-8]
  45e234:	b.gt	45e244 <_obstack_memory_used@@Base+0x13080>
  45e238:	ldur	x9, [x29, #-24]
  45e23c:	add	x8, x9, x8
  45e240:	b	45e250 <_obstack_memory_used@@Base+0x1308c>
  45e244:	ldur	x8, [x29, #-32]
  45e248:	add	x9, x8, #0x8
  45e24c:	stur	x9, [x29, #-32]
  45e250:	ldr	w3, [x8]
  45e254:	bl	4049a0 <openat@plt>
  45e258:	bl	45e268 <_obstack_memory_used@@Base+0x130a4>
  45e25c:	ldp	x29, x30, [sp, #208]
  45e260:	add	sp, sp, #0xe0
  45e264:	ret
  45e268:	stp	x29, x30, [sp, #-48]!
  45e26c:	stp	x20, x19, [sp, #32]
  45e270:	mov	w19, w0
  45e274:	cmp	w0, #0x2
  45e278:	stp	x22, x21, [sp, #16]
  45e27c:	mov	x29, sp
  45e280:	b.hi	45e2bc <_obstack_memory_used@@Base+0x130f8>  // b.pmore
  45e284:	mov	w0, w19
  45e288:	bl	45f4b8 <_obstack_memory_used@@Base+0x142f4>
  45e28c:	mov	w20, w0
  45e290:	bl	4049c0 <__errno_location@plt>
  45e294:	ldr	w22, [x0]
  45e298:	mov	x21, x0
  45e29c:	mov	w0, w19
  45e2a0:	bl	4044d0 <close@plt>
  45e2a4:	str	w22, [x21]
  45e2a8:	mov	w0, w20
  45e2ac:	ldp	x20, x19, [sp, #32]
  45e2b0:	ldp	x22, x21, [sp, #16]
  45e2b4:	ldp	x29, x30, [sp], #48
  45e2b8:	ret
  45e2bc:	mov	w0, w19
  45e2c0:	ldp	x20, x19, [sp, #32]
  45e2c4:	ldp	x22, x21, [sp, #16]
  45e2c8:	ldp	x29, x30, [sp], #48
  45e2cc:	ret
  45e2d0:	sub	sp, sp, #0x80
  45e2d4:	str	x23, [sp, #80]
  45e2d8:	mov	x2, x0
  45e2dc:	mov	x23, xzr
  45e2e0:	mov	x8, x0
  45e2e4:	stp	x29, x30, [sp, #64]
  45e2e8:	stp	x22, x21, [sp, #96]
  45e2ec:	stp	x20, x19, [sp, #112]
  45e2f0:	add	x29, sp, #0x40
  45e2f4:	ldrb	w9, [x8]
  45e2f8:	cmp	w9, #0x25
  45e2fc:	b.ne	45e31c <_obstack_memory_used@@Base+0x13158>  // b.any
  45e300:	ldrb	w9, [x8, #1]
  45e304:	cmp	w9, #0x73
  45e308:	b.ne	45e390 <_obstack_memory_used@@Base+0x131cc>  // b.any
  45e30c:	sub	x23, x23, #0x1
  45e310:	ldrb	w9, [x8, #2]!
  45e314:	cmp	w9, #0x25
  45e318:	b.eq	45e300 <_obstack_memory_used@@Base+0x1313c>  // b.none
  45e31c:	cbnz	w9, 45e390 <_obstack_memory_used@@Base+0x131cc>
  45e320:	ldp	q1, q0, [x1]
  45e324:	stp	q1, q0, [sp]
  45e328:	stp	q1, q0, [sp, #32]
  45e32c:	cbz	x23, 45e3e8 <_obstack_memory_used@@Base+0x13224>
  45e330:	ldr	x20, [sp, #40]
  45e334:	ldr	w8, [sp, #56]
  45e338:	mov	x19, xzr
  45e33c:	mov	x21, x23
  45e340:	b	45e364 <_obstack_memory_used@@Base+0x131a0>
  45e344:	add	x8, x20, w8, sxtw
  45e348:	ldr	x0, [x8]
  45e34c:	bl	403f00 <strlen@plt>
  45e350:	adds	x8, x19, x0
  45e354:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
  45e358:	adds	x21, x21, #0x1
  45e35c:	mov	w8, w22
  45e360:	b.cs	45e3cc <_obstack_memory_used@@Base+0x13208>  // b.hs, b.nlast
  45e364:	tbnz	w8, #31, 45e370 <_obstack_memory_used@@Base+0x131ac>
  45e368:	mov	w22, w8
  45e36c:	b	45e380 <_obstack_memory_used@@Base+0x131bc>
  45e370:	add	w22, w8, #0x8
  45e374:	cmn	w8, #0x8
  45e378:	str	w22, [sp, #56]
  45e37c:	b.le	45e344 <_obstack_memory_used@@Base+0x13180>
  45e380:	ldr	x8, [sp, #32]
  45e384:	add	x9, x8, #0x8
  45e388:	str	x9, [sp, #32]
  45e38c:	b	45e348 <_obstack_memory_used@@Base+0x13184>
  45e390:	ldp	q1, q0, [x1]
  45e394:	mov	x0, sp
  45e398:	add	x3, sp, #0x20
  45e39c:	mov	w1, #0x1                   	// #1
  45e3a0:	stp	q1, q0, [sp, #32]
  45e3a4:	bl	404250 <__vasprintf_chk@plt>
  45e3a8:	tbnz	w0, #31, 45e3b4 <_obstack_memory_used@@Base+0x131f0>
  45e3ac:	ldr	x19, [sp]
  45e3b0:	b	45e474 <_obstack_memory_used@@Base+0x132b0>
  45e3b4:	bl	4049c0 <__errno_location@plt>
  45e3b8:	ldr	w8, [x0]
  45e3bc:	cmp	w8, #0xc
  45e3c0:	b.eq	45e490 <_obstack_memory_used@@Base+0x132cc>  // b.none
  45e3c4:	mov	x19, xzr
  45e3c8:	b	45e474 <_obstack_memory_used@@Base+0x132b0>
  45e3cc:	lsr	x8, x19, #31
  45e3d0:	cbz	x8, 45e400 <_obstack_memory_used@@Base+0x1323c>
  45e3d4:	bl	4049c0 <__errno_location@plt>
  45e3d8:	mov	w8, #0x4b                  	// #75
  45e3dc:	mov	x19, xzr
  45e3e0:	str	w8, [x0]
  45e3e4:	b	45e474 <_obstack_memory_used@@Base+0x132b0>
  45e3e8:	mov	w0, #0x1                   	// #1
  45e3ec:	bl	44a010 <argp_parse@@Base+0xf964>
  45e3f0:	mov	x19, x0
  45e3f4:	mov	x20, x0
  45e3f8:	strb	wzr, [x0]
  45e3fc:	b	45e474 <_obstack_memory_used@@Base+0x132b0>
  45e400:	add	x0, x19, #0x1
  45e404:	bl	44a010 <argp_parse@@Base+0xf964>
  45e408:	mov	x19, x0
  45e40c:	mov	x20, x0
  45e410:	b	45e44c <_obstack_memory_used@@Base+0x13288>
  45e414:	ldr	x8, [sp]
  45e418:	add	x9, x8, #0x8
  45e41c:	str	x9, [sp]
  45e420:	ldr	x21, [x8]
  45e424:	mov	x0, x21
  45e428:	bl	403f00 <strlen@plt>
  45e42c:	mov	x22, x0
  45e430:	mov	x0, x20
  45e434:	mov	x1, x21
  45e438:	mov	x2, x22
  45e43c:	bl	403e80 <memcpy@plt>
  45e440:	adds	x23, x23, #0x1
  45e444:	add	x20, x20, x22
  45e448:	b.cs	45e470 <_obstack_memory_used@@Base+0x132ac>  // b.hs, b.nlast
  45e44c:	ldrsw	x8, [sp, #24]
  45e450:	tbz	w8, #31, 45e414 <_obstack_memory_used@@Base+0x13250>
  45e454:	add	w9, w8, #0x8
  45e458:	cmn	w8, #0x8
  45e45c:	str	w9, [sp, #24]
  45e460:	b.gt	45e414 <_obstack_memory_used@@Base+0x13250>
  45e464:	ldr	x9, [sp, #8]
  45e468:	add	x8, x9, x8
  45e46c:	b	45e420 <_obstack_memory_used@@Base+0x1325c>
  45e470:	strb	wzr, [x20]
  45e474:	mov	x0, x19
  45e478:	ldp	x20, x19, [sp, #112]
  45e47c:	ldp	x22, x21, [sp, #96]
  45e480:	ldr	x23, [sp, #80]
  45e484:	ldp	x29, x30, [sp, #64]
  45e488:	add	sp, sp, #0x80
  45e48c:	ret
  45e490:	bl	40eb80 <wcrtomb@plt+0xa090>
  45e494:	sub	sp, sp, #0x80
  45e498:	cmp	w0, #0x1
  45e49c:	stp	x29, x30, [sp, #32]
  45e4a0:	stp	x28, x27, [sp, #48]
  45e4a4:	stp	x26, x25, [sp, #64]
  45e4a8:	stp	x24, x23, [sp, #80]
  45e4ac:	stp	x22, x21, [sp, #96]
  45e4b0:	stp	x20, x19, [sp, #112]
  45e4b4:	add	x29, sp, #0x20
  45e4b8:	b.lt	45ebf4 <_obstack_memory_used@@Base+0x13a30>  // b.tstop
  45e4bc:	ldp	w25, w23, [x6]
  45e4c0:	mov	x19, x6
  45e4c4:	mov	w26, w5
  45e4c8:	mov	x27, x4
  45e4cc:	mov	x28, x3
  45e4d0:	mov	x22, x2
  45e4d4:	mov	w21, w0
  45e4d8:	mov	x20, x1
  45e4dc:	str	xzr, [x6, #16]
  45e4e0:	cbz	w25, 45e508 <_obstack_memory_used@@Base+0x13344>
  45e4e4:	ldr	w8, [x19, #24]
  45e4e8:	cbz	w8, 45e510 <_obstack_memory_used@@Base+0x1334c>
  45e4ec:	ldrb	w8, [x22]
  45e4f0:	cmp	w8, #0x2d
  45e4f4:	b.eq	45e500 <_obstack_memory_used@@Base+0x1333c>  // b.none
  45e4f8:	cmp	w8, #0x2b
  45e4fc:	b.ne	45e568 <_obstack_memory_used@@Base+0x133a4>  // b.any
  45e500:	add	x22, x22, #0x1
  45e504:	b	45e568 <_obstack_memory_used@@Base+0x133a4>
  45e508:	mov	w25, #0x1                   	// #1
  45e50c:	str	w25, [x19]
  45e510:	stp	w25, w25, [x19, #44]
  45e514:	str	xzr, [x19, #32]
  45e518:	ldrb	w8, [x22]
  45e51c:	cmp	w8, #0x2b
  45e520:	b.eq	45e53c <_obstack_memory_used@@Base+0x13378>  // b.none
  45e524:	cmp	w8, #0x2d
  45e528:	b.ne	45e548 <_obstack_memory_used@@Base+0x13384>  // b.any
  45e52c:	mov	w8, #0x2                   	// #2
  45e530:	str	w8, [x19, #40]
  45e534:	add	x22, x22, #0x1
  45e538:	b	45e560 <_obstack_memory_used@@Base+0x1339c>
  45e53c:	str	wzr, [x19, #40]
  45e540:	add	x22, x22, #0x1
  45e544:	b	45e560 <_obstack_memory_used@@Base+0x1339c>
  45e548:	cbnz	w7, 45e55c <_obstack_memory_used@@Base+0x13398>
  45e54c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  45e550:	add	x0, x0, #0xdd5
  45e554:	bl	4049e0 <getenv@plt>
  45e558:	cbz	x0, 45ec34 <_obstack_memory_used@@Base+0x13a70>
  45e55c:	str	wzr, [x19, #40]
  45e560:	mov	w8, #0x1                   	// #1
  45e564:	str	w8, [x19, #24]
  45e568:	ldrb	w8, [x22]
  45e56c:	ldr	x24, [x19, #32]
  45e570:	cmp	w8, #0x3a
  45e574:	csel	w2, wzr, w23, eq  // eq = none
  45e578:	cbz	x24, 45e640 <_obstack_memory_used@@Base+0x1347c>
  45e57c:	ldrb	w8, [x24]
  45e580:	cbz	w8, 45e640 <_obstack_memory_used@@Base+0x1347c>
  45e584:	stur	w2, [x29, #-4]
  45e588:	add	x23, x24, #0x1
  45e58c:	str	x23, [x19, #32]
  45e590:	ldrb	w26, [x24]
  45e594:	mov	x0, x22
  45e598:	mov	w1, w26
  45e59c:	bl	404750 <strchr@plt>
  45e5a0:	ldrb	w8, [x24, #1]
  45e5a4:	cbnz	w8, 45e5b0 <_obstack_memory_used@@Base+0x133ec>
  45e5a8:	add	w25, w25, #0x1
  45e5ac:	str	w25, [x19]
  45e5b0:	orr	w8, w26, #0x1
  45e5b4:	cmp	w8, #0x3b
  45e5b8:	b.eq	45e858 <_obstack_memory_used@@Base+0x13694>  // b.none
  45e5bc:	cbz	x0, 45e858 <_obstack_memory_used@@Base+0x13694>
  45e5c0:	ldrb	w9, [x0]
  45e5c4:	ldrb	w8, [x0, #1]
  45e5c8:	cmp	w9, #0x57
  45e5cc:	b.ne	45e8a0 <_obstack_memory_used@@Base+0x136dc>  // b.any
  45e5d0:	cbz	x28, 45e8a0 <_obstack_memory_used@@Base+0x136dc>
  45e5d4:	cmp	w8, #0x3b
  45e5d8:	b.ne	45e8a0 <_obstack_memory_used@@Base+0x136dc>  // b.any
  45e5dc:	ldrb	w8, [x23]
  45e5e0:	cbnz	w8, 45eca0 <_obstack_memory_used@@Base+0x13adc>
  45e5e4:	cmp	w25, w21
  45e5e8:	b.ne	45ec9c <_obstack_memory_used@@Base+0x13ad8>  // b.any
  45e5ec:	ldur	w8, [x29, #-4]
  45e5f0:	cbz	w8, 45e628 <_obstack_memory_used@@Base+0x13464>
  45e5f4:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45e5f8:	ldr	x21, [x8, #88]
  45e5fc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45e600:	add	x1, x1, #0xabe
  45e604:	mov	w2, #0x5                   	// #5
  45e608:	mov	x0, xzr
  45e60c:	bl	4048b0 <dcgettext@plt>
  45e610:	ldr	x3, [x20]
  45e614:	mov	x2, x0
  45e618:	mov	w1, #0x1                   	// #1
  45e61c:	mov	x0, x21
  45e620:	mov	w4, w26
  45e624:	bl	404600 <__fprintf_chk@plt>
  45e628:	str	w26, [x19, #8]
  45e62c:	ldrb	w8, [x22]
  45e630:	mov	w9, #0x3f                  	// #63
  45e634:	cmp	w8, #0x3a
  45e638:	csel	w26, w8, w9, eq  // eq = none
  45e63c:	b	45ebf8 <_obstack_memory_used@@Base+0x13a34>
  45e640:	ldr	w23, [x19, #48]
  45e644:	str	x28, [sp, #16]
  45e648:	cmp	w23, w25
  45e64c:	b.le	45e82c <_obstack_memory_used@@Base+0x13668>
  45e650:	mov	w23, w25
  45e654:	str	w25, [x19, #48]
  45e658:	ldr	w28, [x19, #44]
  45e65c:	cmp	w28, w25
  45e660:	b.gt	45e838 <_obstack_memory_used@@Base+0x13674>
  45e664:	ldr	w24, [x19, #40]
  45e668:	cmp	w24, #0x1
  45e66c:	b.ne	45e84c <_obstack_memory_used@@Base+0x13688>  // b.any
  45e670:	cmp	w28, w23
  45e674:	b.eq	45e8c4 <_obstack_memory_used@@Base+0x13700>  // b.none
  45e678:	cmp	w23, w25
  45e67c:	b.eq	45e8c4 <_obstack_memory_used@@Base+0x13700>  // b.none
  45e680:	cmp	w25, w23
  45e684:	b.le	45e8e0 <_obstack_memory_used@@Base+0x1371c>
  45e688:	cmp	w28, w23
  45e68c:	b.ge	45e8e0 <_obstack_memory_used@@Base+0x1371c>  // b.tcont
  45e690:	add	x9, x20, w23, sxtw #3
  45e694:	sxtw	x8, w23
  45e698:	add	x10, x20, #0x10
  45e69c:	add	x11, x9, #0x10
  45e6a0:	mov	w12, w28
  45e6a4:	mov	w13, w25
  45e6a8:	sub	w14, w13, w23
  45e6ac:	sub	w15, w23, w12
  45e6b0:	cmp	w14, w15
  45e6b4:	b.le	45e734 <_obstack_memory_used@@Base+0x13570>
  45e6b8:	cmp	w15, #0x1
  45e6bc:	sub	w13, w13, w15
  45e6c0:	b.lt	45e7a0 <_obstack_memory_used@@Base+0x135dc>  // b.tstop
  45e6c4:	sxtw	x14, w12
  45e6c8:	sxtw	x16, w13
  45e6cc:	cmp	w15, #0x4
  45e6d0:	mov	w15, w15
  45e6d4:	b.cc	45e700 <_obstack_memory_used@@Base+0x1353c>  // b.lo, b.ul, b.last
  45e6d8:	add	x18, x16, x15
  45e6dc:	add	x17, x20, x14, lsl #3
  45e6e0:	add	x18, x20, x18, lsl #3
  45e6e4:	cmp	x17, x18
  45e6e8:	b.cs	45e7b4 <_obstack_memory_used@@Base+0x135f0>  // b.hs, b.nlast
  45e6ec:	add	x17, x14, x15
  45e6f0:	add	x17, x20, x17, lsl #3
  45e6f4:	add	x18, x20, x16, lsl #3
  45e6f8:	cmp	x18, x17
  45e6fc:	b.cs	45e7b4 <_obstack_memory_used@@Base+0x135f0>  // b.hs, b.nlast
  45e700:	mov	x17, xzr
  45e704:	add	x16, x17, x16
  45e708:	add	x18, x17, x14
  45e70c:	add	x14, x20, x16, lsl #3
  45e710:	add	x16, x20, x18, lsl #3
  45e714:	sub	x15, x15, x17
  45e718:	ldr	x17, [x14]
  45e71c:	ldr	x18, [x16]
  45e720:	subs	x15, x15, #0x1
  45e724:	str	x17, [x16], #8
  45e728:	str	x18, [x14], #8
  45e72c:	b.ne	45e718 <_obstack_memory_used@@Base+0x13554>  // b.any
  45e730:	b	45e7a0 <_obstack_memory_used@@Base+0x135dc>
  45e734:	cmp	w14, #0x1
  45e738:	b.lt	45e79c <_obstack_memory_used@@Base+0x135d8>  // b.tstop
  45e73c:	sxtw	x15, w12
  45e740:	cmp	w14, #0x3
  45e744:	mov	w16, w14
  45e748:	b.ls	45e76c <_obstack_memory_used@@Base+0x135a8>  // b.plast
  45e74c:	add	x17, x20, x15, lsl #3
  45e750:	add	x18, x9, x16, lsl #3
  45e754:	cmp	x17, x18
  45e758:	b.cs	45e7f0 <_obstack_memory_used@@Base+0x1362c>  // b.hs, b.nlast
  45e75c:	add	x17, x15, x16
  45e760:	add	x17, x20, x17, lsl #3
  45e764:	cmp	x9, x17
  45e768:	b.cs	45e7f0 <_obstack_memory_used@@Base+0x1362c>  // b.hs, b.nlast
  45e76c:	mov	x17, xzr
  45e770:	add	x18, x8, x17
  45e774:	add	x0, x17, x15
  45e778:	add	x15, x20, x18, lsl #3
  45e77c:	add	x18, x20, x0, lsl #3
  45e780:	sub	x16, x16, x17
  45e784:	ldr	x17, [x15]
  45e788:	ldr	x0, [x18]
  45e78c:	subs	x16, x16, #0x1
  45e790:	str	x17, [x18], #8
  45e794:	str	x0, [x15], #8
  45e798:	b.ne	45e784 <_obstack_memory_used@@Base+0x135c0>  // b.any
  45e79c:	add	w12, w14, w12
  45e7a0:	cmp	w13, w23
  45e7a4:	b.le	45e8e0 <_obstack_memory_used@@Base+0x1371c>
  45e7a8:	cmp	w23, w12
  45e7ac:	b.gt	45e6a8 <_obstack_memory_used@@Base+0x134e4>
  45e7b0:	b	45e8e0 <_obstack_memory_used@@Base+0x1371c>
  45e7b4:	and	x17, x15, #0xfffffffc
  45e7b8:	add	x18, x10, x14, lsl #3
  45e7bc:	add	x0, x10, x16, lsl #3
  45e7c0:	mov	x1, x17
  45e7c4:	ldp	q0, q3, [x18, #-16]
  45e7c8:	ldp	q1, q2, [x0, #-16]
  45e7cc:	subs	x1, x1, #0x4
  45e7d0:	stp	q1, q2, [x18, #-16]
  45e7d4:	stp	q0, q3, [x0, #-16]
  45e7d8:	add	x18, x18, #0x20
  45e7dc:	add	x0, x0, #0x20
  45e7e0:	b.ne	45e7c4 <_obstack_memory_used@@Base+0x13600>  // b.any
  45e7e4:	cmp	x17, x15
  45e7e8:	b.eq	45e7a0 <_obstack_memory_used@@Base+0x135dc>  // b.none
  45e7ec:	b	45e704 <_obstack_memory_used@@Base+0x13540>
  45e7f0:	and	x17, x16, #0xfffffffc
  45e7f4:	add	x18, x10, x15, lsl #3
  45e7f8:	mov	x0, x17
  45e7fc:	mov	x1, x11
  45e800:	ldp	q0, q3, [x18, #-16]
  45e804:	ldp	q1, q2, [x1, #-16]
  45e808:	subs	x0, x0, #0x4
  45e80c:	stp	q1, q2, [x18, #-16]
  45e810:	stp	q0, q3, [x1, #-16]
  45e814:	add	x18, x18, #0x20
  45e818:	add	x1, x1, #0x20
  45e81c:	b.ne	45e800 <_obstack_memory_used@@Base+0x1363c>  // b.any
  45e820:	cmp	x17, x16
  45e824:	b.ne	45e770 <_obstack_memory_used@@Base+0x135ac>  // b.any
  45e828:	b	45e79c <_obstack_memory_used@@Base+0x135d8>
  45e82c:	ldr	w28, [x19, #44]
  45e830:	cmp	w28, w25
  45e834:	b.le	45e664 <_obstack_memory_used@@Base+0x134a0>
  45e838:	mov	w28, w25
  45e83c:	str	w25, [x19, #44]
  45e840:	ldr	w24, [x19, #40]
  45e844:	cmp	w24, #0x1
  45e848:	b.eq	45e670 <_obstack_memory_used@@Base+0x134ac>  // b.none
  45e84c:	cmp	w25, w21
  45e850:	b.ne	45e950 <_obstack_memory_used@@Base+0x1378c>  // b.any
  45e854:	b	45ebe8 <_obstack_memory_used@@Base+0x13a24>
  45e858:	ldur	w8, [x29, #-4]
  45e85c:	cbz	w8, 45e894 <_obstack_memory_used@@Base+0x136d0>
  45e860:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45e864:	ldr	x21, [x8, #88]
  45e868:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45e86c:	add	x1, x1, #0xaa2
  45e870:	mov	w2, #0x5                   	// #5
  45e874:	mov	x0, xzr
  45e878:	bl	4048b0 <dcgettext@plt>
  45e87c:	ldr	x3, [x20]
  45e880:	mov	x2, x0
  45e884:	mov	w1, #0x1                   	// #1
  45e888:	mov	x0, x21
  45e88c:	mov	w4, w26
  45e890:	bl	404600 <__fprintf_chk@plt>
  45e894:	str	w26, [x19, #8]
  45e898:	mov	w26, #0x3f                  	// #63
  45e89c:	b	45ebf8 <_obstack_memory_used@@Base+0x13a34>
  45e8a0:	cmp	w8, #0x3a
  45e8a4:	b.ne	45ebf8 <_obstack_memory_used@@Base+0x13a34>  // b.any
  45e8a8:	ldrb	w9, [x0, #2]
  45e8ac:	ldrb	w8, [x23]
  45e8b0:	cmp	w9, #0x3a
  45e8b4:	b.ne	45ec1c <_obstack_memory_used@@Base+0x13a58>  // b.any
  45e8b8:	cbnz	w8, 45ec20 <_obstack_memory_used@@Base+0x13a5c>
  45e8bc:	str	xzr, [x19, #16]
  45e8c0:	b	45ec2c <_obstack_memory_used@@Base+0x13a68>
  45e8c4:	cmp	w23, w25
  45e8c8:	b.eq	45e8d4 <_obstack_memory_used@@Base+0x13710>  // b.none
  45e8cc:	mov	w28, w25
  45e8d0:	str	w25, [x19, #44]
  45e8d4:	cmp	w25, w21
  45e8d8:	b.ge	45e928 <_obstack_memory_used@@Base+0x13764>  // b.tcont
  45e8dc:	b	45e8f4 <_obstack_memory_used@@Base+0x13730>
  45e8e0:	add	w8, w28, w25
  45e8e4:	sub	w28, w8, w23
  45e8e8:	stp	w28, w25, [x19, #44]
  45e8ec:	cmp	w25, w21
  45e8f0:	b.ge	45e928 <_obstack_memory_used@@Base+0x13764>  // b.tcont
  45e8f4:	add	x8, x20, w25, sxtw #3
  45e8f8:	b	45e910 <_obstack_memory_used@@Base+0x1374c>
  45e8fc:	add	w25, w25, #0x1
  45e900:	cmp	w21, w25
  45e904:	add	x8, x8, #0x8
  45e908:	str	w25, [x19]
  45e90c:	b.eq	45e93c <_obstack_memory_used@@Base+0x13778>  // b.none
  45e910:	ldr	x9, [x8]
  45e914:	ldrb	w10, [x9]
  45e918:	cmp	w10, #0x2d
  45e91c:	b.ne	45e8fc <_obstack_memory_used@@Base+0x13738>  // b.any
  45e920:	ldrb	w9, [x9, #1]
  45e924:	cbz	w9, 45e8fc <_obstack_memory_used@@Base+0x13738>
  45e928:	mov	w23, w25
  45e92c:	str	w25, [x19, #48]
  45e930:	cmp	w25, w21
  45e934:	b.ne	45e950 <_obstack_memory_used@@Base+0x1378c>  // b.any
  45e938:	b	45ebe8 <_obstack_memory_used@@Base+0x13a24>
  45e93c:	mov	w25, w21
  45e940:	mov	w23, w25
  45e944:	str	w25, [x19, #48]
  45e948:	cmp	w25, w21
  45e94c:	b.eq	45ebe8 <_obstack_memory_used@@Base+0x13a24>  // b.none
  45e950:	ldr	x0, [x20, w25, sxtw #3]
  45e954:	str	w26, [sp, #12]
  45e958:	mov	x26, x27
  45e95c:	adrp	x27, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  45e960:	add	x27, x27, #0xb34
  45e964:	mov	x1, x27
  45e968:	stur	w2, [x29, #-4]
  45e96c:	bl	404610 <strcmp@plt>
  45e970:	cbz	w0, 45e9e0 <_obstack_memory_used@@Base+0x1381c>
  45e974:	cmp	w25, w21
  45e978:	b.eq	45ebe8 <_obstack_memory_used@@Base+0x13a24>  // b.none
  45e97c:	sxtw	x8, w25
  45e980:	ldr	x23, [x20, x8, lsl #3]
  45e984:	ldrb	w8, [x23]
  45e988:	cmp	w8, #0x2d
  45e98c:	b.ne	45eba4 <_obstack_memory_used@@Base+0x139e0>  // b.any
  45e990:	mov	x28, x23
  45e994:	ldrb	w1, [x28, #1]!
  45e998:	cbz	w1, 45eba4 <_obstack_memory_used@@Base+0x139e0>
  45e99c:	ldr	x8, [sp, #16]
  45e9a0:	cbz	x8, 45ed40 <_obstack_memory_used@@Base+0x13b7c>
  45e9a4:	cmp	w1, #0x2d
  45e9a8:	b.ne	45ece0 <_obstack_memory_used@@Base+0x13b1c>  // b.any
  45e9ac:	ldr	x3, [sp, #16]
  45e9b0:	ldr	w5, [sp, #12]
  45e9b4:	ldur	w7, [x29, #-4]
  45e9b8:	add	x8, x23, #0x2
  45e9bc:	mov	w0, w21
  45e9c0:	mov	x1, x20
  45e9c4:	mov	x2, x22
  45e9c8:	mov	x4, x26
  45e9cc:	mov	x6, x19
  45e9d0:	str	x8, [x19, #32]
  45e9d4:	str	x27, [sp]
  45e9d8:	bl	45ed78 <_obstack_memory_used@@Base+0x13bb4>
  45e9dc:	b	45ebfc <_obstack_memory_used@@Base+0x13a38>
  45e9e0:	add	w8, w25, #0x1
  45e9e4:	cmp	w28, w23
  45e9e8:	str	w8, [x19]
  45e9ec:	b.eq	45ebbc <_obstack_memory_used@@Base+0x139f8>  // b.none
  45e9f0:	cmp	w23, w8
  45e9f4:	b.eq	45ebbc <_obstack_memory_used@@Base+0x139f8>  // b.none
  45e9f8:	cmp	w25, w23
  45e9fc:	b.lt	45ebd0 <_obstack_memory_used@@Base+0x13a0c>  // b.tstop
  45ea00:	cmp	w28, w23
  45ea04:	b.ge	45ebd0 <_obstack_memory_used@@Base+0x13a0c>  // b.tcont
  45ea08:	add	x10, x20, w23, sxtw #3
  45ea0c:	sxtw	x9, w23
  45ea10:	add	x11, x20, #0x10
  45ea14:	add	x12, x10, #0x10
  45ea18:	mov	w13, w28
  45ea1c:	mov	w14, w8
  45ea20:	sub	w15, w14, w23
  45ea24:	sub	w16, w23, w13
  45ea28:	cmp	w15, w16
  45ea2c:	b.le	45eaac <_obstack_memory_used@@Base+0x138e8>
  45ea30:	cmp	w16, #0x1
  45ea34:	sub	w14, w14, w16
  45ea38:	b.lt	45eb18 <_obstack_memory_used@@Base+0x13954>  // b.tstop
  45ea3c:	sxtw	x15, w13
  45ea40:	sxtw	x17, w14
  45ea44:	cmp	w16, #0x4
  45ea48:	mov	w16, w16
  45ea4c:	b.cc	45ea78 <_obstack_memory_used@@Base+0x138b4>  // b.lo, b.ul, b.last
  45ea50:	add	x0, x17, x16
  45ea54:	add	x18, x20, x15, lsl #3
  45ea58:	add	x0, x20, x0, lsl #3
  45ea5c:	cmp	x18, x0
  45ea60:	b.cs	45eb2c <_obstack_memory_used@@Base+0x13968>  // b.hs, b.nlast
  45ea64:	add	x18, x15, x16
  45ea68:	add	x18, x20, x18, lsl #3
  45ea6c:	add	x0, x20, x17, lsl #3
  45ea70:	cmp	x0, x18
  45ea74:	b.cs	45eb2c <_obstack_memory_used@@Base+0x13968>  // b.hs, b.nlast
  45ea78:	mov	x18, xzr
  45ea7c:	add	x17, x18, x17
  45ea80:	add	x0, x18, x15
  45ea84:	add	x15, x20, x17, lsl #3
  45ea88:	add	x17, x20, x0, lsl #3
  45ea8c:	sub	x16, x16, x18
  45ea90:	ldr	x18, [x15]
  45ea94:	ldr	x0, [x17]
  45ea98:	subs	x16, x16, #0x1
  45ea9c:	str	x18, [x17], #8
  45eaa0:	str	x0, [x15], #8
  45eaa4:	b.ne	45ea90 <_obstack_memory_used@@Base+0x138cc>  // b.any
  45eaa8:	b	45eb18 <_obstack_memory_used@@Base+0x13954>
  45eaac:	cmp	w15, #0x1
  45eab0:	b.lt	45eb14 <_obstack_memory_used@@Base+0x13950>  // b.tstop
  45eab4:	sxtw	x16, w13
  45eab8:	cmp	w15, #0x3
  45eabc:	mov	w17, w15
  45eac0:	b.ls	45eae4 <_obstack_memory_used@@Base+0x13920>  // b.plast
  45eac4:	add	x18, x20, x16, lsl #3
  45eac8:	add	x0, x10, x17, lsl #3
  45eacc:	cmp	x18, x0
  45ead0:	b.cs	45eb68 <_obstack_memory_used@@Base+0x139a4>  // b.hs, b.nlast
  45ead4:	add	x18, x16, x17
  45ead8:	add	x18, x20, x18, lsl #3
  45eadc:	cmp	x10, x18
  45eae0:	b.cs	45eb68 <_obstack_memory_used@@Base+0x139a4>  // b.hs, b.nlast
  45eae4:	mov	x18, xzr
  45eae8:	add	x0, x9, x18
  45eaec:	add	x1, x18, x16
  45eaf0:	add	x16, x20, x0, lsl #3
  45eaf4:	add	x0, x20, x1, lsl #3
  45eaf8:	sub	x17, x17, x18
  45eafc:	ldr	x18, [x16]
  45eb00:	ldr	x1, [x0]
  45eb04:	subs	x17, x17, #0x1
  45eb08:	str	x18, [x0], #8
  45eb0c:	str	x1, [x16], #8
  45eb10:	b.ne	45eafc <_obstack_memory_used@@Base+0x13938>  // b.any
  45eb14:	add	w13, w15, w13
  45eb18:	cmp	w14, w23
  45eb1c:	b.le	45ebd0 <_obstack_memory_used@@Base+0x13a0c>
  45eb20:	cmp	w23, w13
  45eb24:	b.gt	45ea20 <_obstack_memory_used@@Base+0x1385c>
  45eb28:	b	45ebd0 <_obstack_memory_used@@Base+0x13a0c>
  45eb2c:	and	x18, x16, #0xfffffffc
  45eb30:	add	x0, x11, x15, lsl #3
  45eb34:	add	x1, x11, x17, lsl #3
  45eb38:	mov	x2, x18
  45eb3c:	ldp	q0, q3, [x0, #-16]
  45eb40:	ldp	q1, q2, [x1, #-16]
  45eb44:	subs	x2, x2, #0x4
  45eb48:	stp	q1, q2, [x0, #-16]
  45eb4c:	stp	q0, q3, [x1, #-16]
  45eb50:	add	x0, x0, #0x20
  45eb54:	add	x1, x1, #0x20
  45eb58:	b.ne	45eb3c <_obstack_memory_used@@Base+0x13978>  // b.any
  45eb5c:	cmp	x18, x16
  45eb60:	b.eq	45eb18 <_obstack_memory_used@@Base+0x13954>  // b.none
  45eb64:	b	45ea7c <_obstack_memory_used@@Base+0x138b8>
  45eb68:	and	x18, x17, #0xfffffffc
  45eb6c:	add	x0, x11, x16, lsl #3
  45eb70:	mov	x1, x18
  45eb74:	mov	x2, x12
  45eb78:	ldp	q0, q3, [x0, #-16]
  45eb7c:	ldp	q1, q2, [x2, #-16]
  45eb80:	subs	x1, x1, #0x4
  45eb84:	stp	q1, q2, [x0, #-16]
  45eb88:	stp	q0, q3, [x2, #-16]
  45eb8c:	add	x0, x0, #0x20
  45eb90:	add	x2, x2, #0x20
  45eb94:	b.ne	45eb78 <_obstack_memory_used@@Base+0x139b4>  // b.any
  45eb98:	cmp	x18, x17
  45eb9c:	b.ne	45eae8 <_obstack_memory_used@@Base+0x13924>  // b.any
  45eba0:	b	45eb14 <_obstack_memory_used@@Base+0x13950>
  45eba4:	cbz	w24, 45ebf4 <_obstack_memory_used@@Base+0x13a30>
  45eba8:	add	w8, w25, #0x1
  45ebac:	str	x23, [x19, #16]
  45ebb0:	str	w8, [x19]
  45ebb4:	mov	w26, #0x1                   	// #1
  45ebb8:	b	45ebf8 <_obstack_memory_used@@Base+0x13a34>
  45ebbc:	cmp	w28, w23
  45ebc0:	b.ne	45ebdc <_obstack_memory_used@@Base+0x13a18>  // b.any
  45ebc4:	mov	w28, w8
  45ebc8:	str	w8, [x19, #44]
  45ebcc:	b	45ebdc <_obstack_memory_used@@Base+0x13a18>
  45ebd0:	add	w9, w28, w8
  45ebd4:	sub	w28, w9, w23
  45ebd8:	stp	w28, w8, [x19, #44]
  45ebdc:	str	w21, [x19, #48]
  45ebe0:	str	w21, [x19]
  45ebe4:	mov	w23, w21
  45ebe8:	cmp	w28, w23
  45ebec:	b.eq	45ebf4 <_obstack_memory_used@@Base+0x13a30>  // b.none
  45ebf0:	str	w28, [x19]
  45ebf4:	mov	w26, #0xffffffff            	// #-1
  45ebf8:	mov	w0, w26
  45ebfc:	ldp	x20, x19, [sp, #112]
  45ec00:	ldp	x22, x21, [sp, #96]
  45ec04:	ldp	x24, x23, [sp, #80]
  45ec08:	ldp	x26, x25, [sp, #64]
  45ec0c:	ldp	x28, x27, [sp, #48]
  45ec10:	ldp	x29, x30, [sp, #32]
  45ec14:	add	sp, sp, #0x80
  45ec18:	ret
  45ec1c:	cbz	w8, 45ec40 <_obstack_memory_used@@Base+0x13a7c>
  45ec20:	add	w8, w25, #0x1
  45ec24:	str	x23, [x19, #16]
  45ec28:	str	w8, [x19]
  45ec2c:	str	xzr, [x19, #32]
  45ec30:	b	45ebf8 <_obstack_memory_used@@Base+0x13a34>
  45ec34:	mov	w8, #0x1                   	// #1
  45ec38:	str	w8, [x19, #40]
  45ec3c:	b	45e560 <_obstack_memory_used@@Base+0x1339c>
  45ec40:	cmp	w25, w21
  45ec44:	b.ne	45ed54 <_obstack_memory_used@@Base+0x13b90>  // b.any
  45ec48:	ldur	w8, [x29, #-4]
  45ec4c:	cbz	w8, 45ec84 <_obstack_memory_used@@Base+0x13ac0>
  45ec50:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45ec54:	ldr	x21, [x8, #88]
  45ec58:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45ec5c:	add	x1, x1, #0xabe
  45ec60:	mov	w2, #0x5                   	// #5
  45ec64:	mov	x0, xzr
  45ec68:	bl	4048b0 <dcgettext@plt>
  45ec6c:	ldr	x3, [x20]
  45ec70:	mov	x2, x0
  45ec74:	mov	w1, #0x1                   	// #1
  45ec78:	mov	x0, x21
  45ec7c:	mov	w4, w26
  45ec80:	bl	404600 <__fprintf_chk@plt>
  45ec84:	str	w26, [x19, #8]
  45ec88:	ldrb	w8, [x22]
  45ec8c:	mov	w9, #0x3f                  	// #63
  45ec90:	cmp	w8, #0x3a
  45ec94:	csel	w26, w8, w9, eq  // eq = none
  45ec98:	b	45ec2c <_obstack_memory_used@@Base+0x13a68>
  45ec9c:	ldr	x23, [x20, w25, sxtw #3]
  45eca0:	str	x23, [x19, #16]
  45eca4:	ldur	w7, [x29, #-4]
  45eca8:	adrp	x8, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45ecac:	add	x8, x8, #0xae7
  45ecb0:	mov	w0, w21
  45ecb4:	mov	x1, x20
  45ecb8:	mov	x2, x22
  45ecbc:	mov	x3, x28
  45ecc0:	mov	x4, x27
  45ecc4:	mov	w5, wzr
  45ecc8:	mov	x6, x19
  45eccc:	str	x23, [x19, #32]
  45ecd0:	str	xzr, [x19, #16]
  45ecd4:	str	x8, [sp]
  45ecd8:	bl	45ed78 <_obstack_memory_used@@Base+0x13bb4>
  45ecdc:	b	45ebfc <_obstack_memory_used@@Base+0x13a38>
  45ece0:	ldr	w8, [sp, #12]
  45ece4:	cbz	w8, 45ed40 <_obstack_memory_used@@Base+0x13b7c>
  45ece8:	ldrb	w8, [x23, #2]
  45ecec:	mov	x27, x26
  45ecf0:	cbz	w8, 45ed68 <_obstack_memory_used@@Base+0x13ba4>
  45ecf4:	ldr	x3, [sp, #16]
  45ecf8:	ldr	w5, [sp, #12]
  45ecfc:	ldur	w7, [x29, #-4]
  45ed00:	adrp	x8, 46a000 <_obstack_memory_used@@Base+0x1ee3c>
  45ed04:	add	x8, x8, #0xb35
  45ed08:	mov	w0, w21
  45ed0c:	mov	x1, x20
  45ed10:	mov	x2, x22
  45ed14:	mov	x4, x27
  45ed18:	mov	x6, x19
  45ed1c:	str	x28, [x19, #32]
  45ed20:	str	x8, [sp]
  45ed24:	bl	45ed78 <_obstack_memory_used@@Base+0x13bb4>
  45ed28:	mov	w26, w0
  45ed2c:	cmn	w0, #0x1
  45ed30:	b.ne	45ebf8 <_obstack_memory_used@@Base+0x13a34>  // b.any
  45ed34:	ldrsw	x25, [x19]
  45ed38:	ldr	x23, [x20, x25, lsl #3]
  45ed3c:	b	45ed44 <_obstack_memory_used@@Base+0x13b80>
  45ed40:	mov	x27, x26
  45ed44:	ldr	x28, [sp, #16]
  45ed48:	add	x24, x23, #0x1
  45ed4c:	str	x24, [x19, #32]
  45ed50:	b	45e588 <_obstack_memory_used@@Base+0x133c4>
  45ed54:	add	w8, w25, #0x1
  45ed58:	str	w8, [x19]
  45ed5c:	ldr	x8, [x20, w25, sxtw #3]
  45ed60:	str	x8, [x19, #16]
  45ed64:	b	45ec2c <_obstack_memory_used@@Base+0x13a68>
  45ed68:	mov	x0, x22
  45ed6c:	bl	404750 <strchr@plt>
  45ed70:	cbnz	x0, 45ed44 <_obstack_memory_used@@Base+0x13b80>
  45ed74:	b	45ecf4 <_obstack_memory_used@@Base+0x13b30>
  45ed78:	sub	sp, sp, #0xb0
  45ed7c:	stp	x29, x30, [sp, #80]
  45ed80:	stp	x28, x27, [sp, #96]
  45ed84:	stp	x26, x25, [sp, #112]
  45ed88:	stp	x24, x23, [sp, #128]
  45ed8c:	stp	x22, x21, [sp, #144]
  45ed90:	stp	x20, x19, [sp, #160]
  45ed94:	add	x29, sp, #0x50
  45ed98:	ldr	x20, [x6, #32]
  45ed9c:	ldr	x28, [x29, #96]
  45eda0:	mov	x24, x6
  45eda4:	mov	x19, x3
  45eda8:	mov	x23, x1
  45edac:	mov	x21, x20
  45edb0:	stur	w7, [x29, #-12]
  45edb4:	stur	w5, [x29, #-28]
  45edb8:	ldrb	w8, [x21]
  45edbc:	cbz	w8, 45edd0 <_obstack_memory_used@@Base+0x13c0c>
  45edc0:	cmp	w8, #0x3d
  45edc4:	b.eq	45edd0 <_obstack_memory_used@@Base+0x13c0c>  // b.none
  45edc8:	ldrb	w8, [x21, #1]!
  45edcc:	cbnz	w8, 45edc0 <_obstack_memory_used@@Base+0x13bfc>
  45edd0:	ldr	x25, [x19]
  45edd4:	str	x2, [sp, #24]
  45edd8:	str	w0, [sp, #20]
  45eddc:	cbz	x25, 45ef14 <_obstack_memory_used@@Base+0x13d50>
  45ede0:	stp	x4, x23, [sp, #32]
  45ede4:	mov	x27, xzr
  45ede8:	sub	x26, x21, x20
  45edec:	mov	x23, x25
  45edf0:	mov	x22, x19
  45edf4:	b	45ee04 <_obstack_memory_used@@Base+0x13c40>
  45edf8:	ldr	x23, [x22, #32]!
  45edfc:	add	x27, x27, #0x1
  45ee00:	cbz	x23, 45ee38 <_obstack_memory_used@@Base+0x13c74>
  45ee04:	mov	x0, x23
  45ee08:	mov	x1, x20
  45ee0c:	mov	x2, x26
  45ee10:	bl	4042c0 <strncmp@plt>
  45ee14:	cbnz	w0, 45edf8 <_obstack_memory_used@@Base+0x13c34>
  45ee18:	mov	x0, x23
  45ee1c:	bl	403f00 <strlen@plt>
  45ee20:	cmp	x26, x0
  45ee24:	b.ne	45edf8 <_obstack_memory_used@@Base+0x13c34>  // b.any
  45ee28:	ldp	x4, x23, [sp, #32]
  45ee2c:	mov	w8, w27
  45ee30:	stur	w27, [x29, #-8]
  45ee34:	b	45f0f8 <_obstack_memory_used@@Base+0x13f34>
  45ee38:	cbz	x25, 45ef30 <_obstack_memory_used@@Base+0x13d6c>
  45ee3c:	ldur	w8, [x29, #-28]
  45ee40:	str	x28, [sp, #8]
  45ee44:	cbz	w8, 45ef60 <_obstack_memory_used@@Base+0x13d9c>
  45ee48:	ldur	w8, [x29, #-12]
  45ee4c:	mov	x28, x24
  45ee50:	cbz	w8, 45f080 <_obstack_memory_used@@Base+0x13ebc>
  45ee54:	mov	x23, xzr
  45ee58:	mov	x22, xzr
  45ee5c:	mov	w8, #0xffffffff            	// #-1
  45ee60:	mov	x24, x19
  45ee64:	stur	wzr, [x29, #-4]
  45ee68:	str	wzr, [sp, #4]
  45ee6c:	stur	xzr, [x29, #-24]
  45ee70:	stur	w8, [x29, #-8]
  45ee74:	mov	x0, x25
  45ee78:	mov	x1, x20
  45ee7c:	mov	x2, x26
  45ee80:	bl	4042c0 <strncmp@plt>
  45ee84:	cbz	w0, 45ee9c <_obstack_memory_used@@Base+0x13cd8>
  45ee88:	ldr	x25, [x24, #32]!
  45ee8c:	cbz	x25, 45ef44 <_obstack_memory_used@@Base+0x13d80>
  45ee90:	ldr	x20, [x28, #32]
  45ee94:	add	x23, x23, #0x1
  45ee98:	b	45ee74 <_obstack_memory_used@@Base+0x13cb0>
  45ee9c:	cbz	x22, 45eef4 <_obstack_memory_used@@Base+0x13d30>
  45eea0:	ldur	w8, [x29, #-4]
  45eea4:	cbnz	w8, 45ee88 <_obstack_memory_used@@Base+0x13cc4>
  45eea8:	ldur	x20, [x29, #-24]
  45eeac:	cbnz	x20, 45eee0 <_obstack_memory_used@@Base+0x13d1c>
  45eeb0:	mov	x0, x27
  45eeb4:	bl	404210 <malloc@plt>
  45eeb8:	mov	w25, #0x1                   	// #1
  45eebc:	cbz	x0, 45ef04 <_obstack_memory_used@@Base+0x13d40>
  45eec0:	mov	w1, wzr
  45eec4:	mov	x2, x27
  45eec8:	mov	x20, x0
  45eecc:	bl	404320 <memset@plt>
  45eed0:	ldur	w8, [x29, #-8]
  45eed4:	strb	w25, [x20, w8, sxtw]
  45eed8:	mov	w8, #0x1                   	// #1
  45eedc:	str	w8, [sp, #4]
  45eee0:	mov	w8, #0x1                   	// #1
  45eee4:	stur	wzr, [x29, #-4]
  45eee8:	stur	x20, [x29, #-24]
  45eeec:	strb	w8, [x20, x23]
  45eef0:	b	45ee88 <_obstack_memory_used@@Base+0x13cc4>
  45eef4:	mov	x22, x24
  45eef8:	mov	w8, w23
  45eefc:	stur	w23, [x29, #-8]
  45ef00:	b	45ee88 <_obstack_memory_used@@Base+0x13cc4>
  45ef04:	mov	w8, #0x1                   	// #1
  45ef08:	stur	w8, [x29, #-4]
  45ef0c:	stur	xzr, [x29, #-24]
  45ef10:	b	45ee88 <_obstack_memory_used@@Base+0x13cc4>
  45ef14:	mov	w8, #0xffffffff            	// #-1
  45ef18:	mov	w27, wzr
  45ef1c:	mov	x22, xzr
  45ef20:	mov	w26, wzr
  45ef24:	stp	w8, wzr, [x29, #-8]
  45ef28:	cbz	x25, 45f0ec <_obstack_memory_used@@Base+0x13f28>
  45ef2c:	b	45f124 <_obstack_memory_used@@Base+0x13f60>
  45ef30:	mov	w8, #0xffffffff            	// #-1
  45ef34:	mov	x22, xzr
  45ef38:	mov	w26, wzr
  45ef3c:	stp	w8, wzr, [x29, #-8]
  45ef40:	b	45f0e4 <_obstack_memory_used@@Base+0x13f20>
  45ef44:	mov	x24, x28
  45ef48:	ldr	x28, [sp, #8]
  45ef4c:	ldp	x4, x23, [sp, #32]
  45ef50:	ldur	x25, [x29, #-24]
  45ef54:	ldr	w26, [sp, #4]
  45ef58:	cbz	x25, 45f0ec <_obstack_memory_used@@Base+0x13f28>
  45ef5c:	b	45f124 <_obstack_memory_used@@Base+0x13f60>
  45ef60:	mov	x23, xzr
  45ef64:	mov	x22, xzr
  45ef68:	mov	w8, #0xffffffff            	// #-1
  45ef6c:	mov	x28, x19
  45ef70:	stur	wzr, [x29, #-4]
  45ef74:	str	wzr, [sp, #4]
  45ef78:	stur	xzr, [x29, #-24]
  45ef7c:	stur	w8, [x29, #-8]
  45ef80:	mov	x0, x25
  45ef84:	mov	x1, x20
  45ef88:	mov	x2, x26
  45ef8c:	bl	4042c0 <strncmp@plt>
  45ef90:	cbz	w0, 45efa8 <_obstack_memory_used@@Base+0x13de4>
  45ef94:	ldr	x25, [x28, #32]!
  45ef98:	cbz	x25, 45ef48 <_obstack_memory_used@@Base+0x13d84>
  45ef9c:	ldr	x20, [x24, #32]
  45efa0:	add	x23, x23, #0x1
  45efa4:	b	45ef80 <_obstack_memory_used@@Base+0x13dbc>
  45efa8:	cbz	x22, 45efd8 <_obstack_memory_used@@Base+0x13e14>
  45efac:	ldr	w8, [x22, #8]
  45efb0:	ldr	w9, [x28, #8]
  45efb4:	cmp	w8, w9
  45efb8:	b.ne	45efcc <_obstack_memory_used@@Base+0x13e08>  // b.any
  45efbc:	ldr	x8, [x22, #16]
  45efc0:	ldr	x9, [x28, #16]
  45efc4:	cmp	x8, x9
  45efc8:	b.eq	45efe8 <_obstack_memory_used@@Base+0x13e24>  // b.none
  45efcc:	ldur	w8, [x29, #-4]
  45efd0:	cbnz	w8, 45ef94 <_obstack_memory_used@@Base+0x13dd0>
  45efd4:	b	45f000 <_obstack_memory_used@@Base+0x13e3c>
  45efd8:	mov	x22, x28
  45efdc:	mov	w8, w23
  45efe0:	stur	w23, [x29, #-8]
  45efe4:	b	45ef94 <_obstack_memory_used@@Base+0x13dd0>
  45efe8:	ldur	w8, [x29, #-4]
  45efec:	cbnz	w8, 45ef94 <_obstack_memory_used@@Base+0x13dd0>
  45eff0:	ldr	w8, [x22, #24]
  45eff4:	ldr	w9, [x28, #24]
  45eff8:	cmp	w8, w9
  45effc:	b.eq	45ef94 <_obstack_memory_used@@Base+0x13dd0>  // b.none
  45f000:	ldur	w8, [x29, #-12]
  45f004:	cbz	w8, 45f048 <_obstack_memory_used@@Base+0x13e84>
  45f008:	ldur	x20, [x29, #-24]
  45f00c:	cbnz	x20, 45f040 <_obstack_memory_used@@Base+0x13e7c>
  45f010:	mov	x0, x27
  45f014:	bl	404210 <malloc@plt>
  45f018:	mov	w25, #0x1                   	// #1
  45f01c:	cbz	x0, 45f070 <_obstack_memory_used@@Base+0x13eac>
  45f020:	mov	w1, wzr
  45f024:	mov	x2, x27
  45f028:	mov	x20, x0
  45f02c:	bl	404320 <memset@plt>
  45f030:	ldur	w8, [x29, #-8]
  45f034:	strb	w25, [x20, w8, sxtw]
  45f038:	mov	w8, #0x1                   	// #1
  45f03c:	str	w8, [sp, #4]
  45f040:	stur	wzr, [x29, #-4]
  45f044:	b	45f058 <_obstack_memory_used@@Base+0x13e94>
  45f048:	ldur	x20, [x29, #-24]
  45f04c:	mov	w8, #0x1                   	// #1
  45f050:	stur	w8, [x29, #-4]
  45f054:	cbz	x20, 45f068 <_obstack_memory_used@@Base+0x13ea4>
  45f058:	mov	w8, #0x1                   	// #1
  45f05c:	stur	x20, [x29, #-24]
  45f060:	strb	w8, [x20, x23]
  45f064:	b	45ef94 <_obstack_memory_used@@Base+0x13dd0>
  45f068:	stur	xzr, [x29, #-24]
  45f06c:	b	45ef94 <_obstack_memory_used@@Base+0x13dd0>
  45f070:	mov	w8, #0x1                   	// #1
  45f074:	stur	w8, [x29, #-4]
  45f078:	stur	xzr, [x29, #-24]
  45f07c:	b	45ef94 <_obstack_memory_used@@Base+0x13dd0>
  45f080:	mov	w23, wzr
  45f084:	mov	x22, xzr
  45f088:	mov	w8, #0xffffffff            	// #-1
  45f08c:	mov	x24, x19
  45f090:	stp	w8, wzr, [x29, #-8]
  45f094:	b	45f0b4 <_obstack_memory_used@@Base+0x13ef0>
  45f098:	ldur	w8, [x29, #-4]
  45f09c:	cmp	w8, #0x0
  45f0a0:	csinc	w8, w8, wzr, ne  // ne = any
  45f0a4:	stur	w8, [x29, #-4]
  45f0a8:	ldr	x25, [x24, #32]!
  45f0ac:	add	w23, w23, #0x1
  45f0b0:	cbz	x25, 45f0d8 <_obstack_memory_used@@Base+0x13f14>
  45f0b4:	mov	x0, x25
  45f0b8:	mov	x1, x20
  45f0bc:	mov	x2, x26
  45f0c0:	bl	4042c0 <strncmp@plt>
  45f0c4:	cbnz	w0, 45f0a8 <_obstack_memory_used@@Base+0x13ee4>
  45f0c8:	cbnz	x22, 45f098 <_obstack_memory_used@@Base+0x13ed4>
  45f0cc:	mov	x22, x24
  45f0d0:	stur	w23, [x29, #-8]
  45f0d4:	b	45f0a8 <_obstack_memory_used@@Base+0x13ee4>
  45f0d8:	mov	x24, x28
  45f0dc:	ldr	x28, [sp, #8]
  45f0e0:	mov	w26, wzr
  45f0e4:	ldp	x4, x23, [sp, #32]
  45f0e8:	cbnz	x25, 45f124 <_obstack_memory_used@@Base+0x13f60>
  45f0ec:	ldur	w8, [x29, #-4]
  45f0f0:	cbnz	w8, 45f124 <_obstack_memory_used@@Base+0x13f60>
  45f0f4:	cbz	x22, 45f1e0 <_obstack_memory_used@@Base+0x1401c>
  45f0f8:	ldr	w9, [x24]
  45f0fc:	str	xzr, [x24, #32]
  45f100:	add	w8, w9, #0x1
  45f104:	str	w8, [x24]
  45f108:	ldrb	w11, [x21]
  45f10c:	ldr	w10, [x22, #8]
  45f110:	cbz	w11, 45f198 <_obstack_memory_used@@Base+0x13fd4>
  45f114:	cbz	w10, 45f290 <_obstack_memory_used@@Base+0x140cc>
  45f118:	add	x8, x21, #0x1
  45f11c:	str	x8, [x24, #16]
  45f120:	b	45f1bc <_obstack_memory_used@@Base+0x13ff8>
  45f124:	ldur	w8, [x29, #-12]
  45f128:	cbz	w8, 45f16c <_obstack_memory_used@@Base+0x13fa8>
  45f12c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f130:	ldr	x21, [x20, #88]
  45f134:	ldur	w8, [x29, #-4]
  45f138:	cbz	w8, 45f2e0 <_obstack_memory_used@@Base+0x1411c>
  45f13c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45f140:	add	x1, x1, #0xaeb
  45f144:	mov	w2, #0x5                   	// #5
  45f148:	mov	x0, xzr
  45f14c:	bl	4048b0 <dcgettext@plt>
  45f150:	ldr	x3, [x23]
  45f154:	ldr	x5, [x24, #32]
  45f158:	mov	x2, x0
  45f15c:	mov	w1, #0x1                   	// #1
  45f160:	mov	x0, x21
  45f164:	mov	x4, x28
  45f168:	bl	404600 <__fprintf_chk@plt>
  45f16c:	cbz	w26, 45f178 <_obstack_memory_used@@Base+0x13fb4>
  45f170:	mov	x0, x25
  45f174:	bl	4046b0 <free@plt>
  45f178:	ldr	x20, [x24, #32]
  45f17c:	mov	x0, x20
  45f180:	bl	403f00 <strlen@plt>
  45f184:	ldr	w8, [x24]
  45f188:	add	x9, x20, x0
  45f18c:	str	wzr, [x24, #8]
  45f190:	str	x9, [x24, #32]
  45f194:	b	45f264 <_obstack_memory_used@@Base+0x140a0>
  45f198:	cmp	w10, #0x1
  45f19c:	b.ne	45f1bc <_obstack_memory_used@@Base+0x13ff8>  // b.any
  45f1a0:	ldr	w10, [sp, #20]
  45f1a4:	cmp	w8, w10
  45f1a8:	b.ge	45f38c <_obstack_memory_used@@Base+0x141c8>  // b.tcont
  45f1ac:	add	w9, w9, #0x2
  45f1b0:	str	w9, [x24]
  45f1b4:	ldr	x8, [x23, w8, sxtw #3]
  45f1b8:	b	45f11c <_obstack_memory_used@@Base+0x13f58>
  45f1bc:	cbz	x4, 45f1c8 <_obstack_memory_used@@Base+0x14004>
  45f1c0:	ldur	w8, [x29, #-8]
  45f1c4:	str	w8, [x4]
  45f1c8:	ldr	x8, [x22, #16]
  45f1cc:	ldr	w0, [x22, #24]
  45f1d0:	cbz	x8, 45f270 <_obstack_memory_used@@Base+0x140ac>
  45f1d4:	str	w0, [x8]
  45f1d8:	mov	w0, wzr
  45f1dc:	b	45f270 <_obstack_memory_used@@Base+0x140ac>
  45f1e0:	ldur	w8, [x29, #-28]
  45f1e4:	cbz	w8, 45f218 <_obstack_memory_used@@Base+0x14054>
  45f1e8:	ldrsw	x8, [x24]
  45f1ec:	ldr	x8, [x23, x8, lsl #3]
  45f1f0:	ldrb	w8, [x8, #1]
  45f1f4:	cmp	w8, #0x2d
  45f1f8:	b.eq	45f218 <_obstack_memory_used@@Base+0x14054>  // b.none
  45f1fc:	ldr	x8, [x24, #32]
  45f200:	ldr	x0, [sp, #24]
  45f204:	ldrb	w1, [x8]
  45f208:	bl	404750 <strchr@plt>
  45f20c:	cbz	x0, 45f218 <_obstack_memory_used@@Base+0x14054>
  45f210:	mov	w0, #0xffffffff            	// #-1
  45f214:	b	45f270 <_obstack_memory_used@@Base+0x140ac>
  45f218:	ldur	w8, [x29, #-12]
  45f21c:	cbz	w8, 45f258 <_obstack_memory_used@@Base+0x14094>
  45f220:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f224:	ldr	x21, [x8, #88]
  45f228:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45f22c:	add	x1, x1, #0xb42
  45f230:	mov	w2, #0x5                   	// #5
  45f234:	mov	x0, xzr
  45f238:	bl	4048b0 <dcgettext@plt>
  45f23c:	ldr	x3, [x23]
  45f240:	ldr	x5, [x24, #32]
  45f244:	mov	x2, x0
  45f248:	mov	w1, #0x1                   	// #1
  45f24c:	mov	x0, x21
  45f250:	mov	x4, x28
  45f254:	bl	404600 <__fprintf_chk@plt>
  45f258:	ldr	w8, [x24]
  45f25c:	str	xzr, [x24, #32]
  45f260:	str	wzr, [x24, #8]
  45f264:	add	w8, w8, #0x1
  45f268:	str	w8, [x24]
  45f26c:	mov	w0, #0x3f                  	// #63
  45f270:	ldp	x20, x19, [sp, #160]
  45f274:	ldp	x22, x21, [sp, #144]
  45f278:	ldp	x24, x23, [sp, #128]
  45f27c:	ldp	x26, x25, [sp, #112]
  45f280:	ldp	x28, x27, [sp, #96]
  45f284:	ldp	x29, x30, [sp, #80]
  45f288:	add	sp, sp, #0xb0
  45f28c:	ret
  45f290:	ldur	w8, [x29, #-12]
  45f294:	cbz	w8, 45f2d0 <_obstack_memory_used@@Base+0x1410c>
  45f298:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f29c:	ldr	x21, [x8, #88]
  45f2a0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45f2a4:	add	x1, x1, #0xb62
  45f2a8:	mov	w2, #0x5                   	// #5
  45f2ac:	mov	x0, xzr
  45f2b0:	bl	4048b0 <dcgettext@plt>
  45f2b4:	ldr	x3, [x23]
  45f2b8:	ldr	x5, [x22]
  45f2bc:	mov	x2, x0
  45f2c0:	mov	w1, #0x1                   	// #1
  45f2c4:	mov	x0, x21
  45f2c8:	mov	x4, x28
  45f2cc:	bl	404600 <__fprintf_chk@plt>
  45f2d0:	ldr	w8, [x22, #24]
  45f2d4:	mov	w0, #0x3f                  	// #63
  45f2d8:	str	w8, [x24, #8]
  45f2dc:	b	45f270 <_obstack_memory_used@@Base+0x140ac>
  45f2e0:	mov	x0, x21
  45f2e4:	bl	403fa0 <flockfile@plt>
  45f2e8:	ldr	x21, [x20, #88]
  45f2ec:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45f2f0:	add	x1, x1, #0xb0b
  45f2f4:	mov	w2, #0x5                   	// #5
  45f2f8:	mov	x0, xzr
  45f2fc:	bl	4048b0 <dcgettext@plt>
  45f300:	ldr	x3, [x23]
  45f304:	ldr	x5, [x24, #32]
  45f308:	mov	x2, x0
  45f30c:	mov	w1, #0x1                   	// #1
  45f310:	mov	x0, x21
  45f314:	mov	x4, x28
  45f318:	bl	404600 <__fprintf_chk@plt>
  45f31c:	cbz	w27, 45f368 <_obstack_memory_used@@Base+0x141a4>
  45f320:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45f324:	mov	w22, w27
  45f328:	add	x21, x21, #0xb3a
  45f32c:	mov	x23, x25
  45f330:	b	45f344 <_obstack_memory_used@@Base+0x14180>
  45f334:	add	x23, x23, #0x1
  45f338:	subs	x22, x22, #0x1
  45f33c:	add	x19, x19, #0x20
  45f340:	b.eq	45f368 <_obstack_memory_used@@Base+0x141a4>  // b.none
  45f344:	ldrb	w8, [x23]
  45f348:	cbz	w8, 45f334 <_obstack_memory_used@@Base+0x14170>
  45f34c:	ldr	x0, [x20, #88]
  45f350:	ldr	x4, [x19]
  45f354:	mov	w1, #0x1                   	// #1
  45f358:	mov	x2, x21
  45f35c:	mov	x3, x28
  45f360:	bl	404600 <__fprintf_chk@plt>
  45f364:	b	45f334 <_obstack_memory_used@@Base+0x14170>
  45f368:	ldr	x0, [x20, #88]
  45f36c:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x1ce3c>
  45f370:	add	x2, x2, #0x253
  45f374:	mov	w1, #0x1                   	// #1
  45f378:	bl	404600 <__fprintf_chk@plt>
  45f37c:	ldr	x0, [x20, #88]
  45f380:	bl	404230 <funlockfile@plt>
  45f384:	cbnz	w26, 45f170 <_obstack_memory_used@@Base+0x13fac>
  45f388:	b	45f178 <_obstack_memory_used@@Base+0x13fb4>
  45f38c:	ldur	w8, [x29, #-12]
  45f390:	cbz	w8, 45f3cc <_obstack_memory_used@@Base+0x14208>
  45f394:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f398:	ldr	x21, [x8, #88]
  45f39c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x1fe3c>
  45f3a0:	add	x1, x1, #0xb8f
  45f3a4:	mov	w2, #0x5                   	// #5
  45f3a8:	mov	x0, xzr
  45f3ac:	bl	4048b0 <dcgettext@plt>
  45f3b0:	ldr	x3, [x23]
  45f3b4:	ldr	x5, [x22]
  45f3b8:	mov	x2, x0
  45f3bc:	mov	w1, #0x1                   	// #1
  45f3c0:	mov	x0, x21
  45f3c4:	mov	x4, x28
  45f3c8:	bl	404600 <__fprintf_chk@plt>
  45f3cc:	ldr	w8, [x22, #24]
  45f3d0:	mov	w9, #0x3f                  	// #63
  45f3d4:	str	w8, [x24, #8]
  45f3d8:	ldr	x8, [sp, #24]
  45f3dc:	ldrb	w8, [x8]
  45f3e0:	cmp	w8, #0x3a
  45f3e4:	csel	w0, w8, w9, eq  // eq = none
  45f3e8:	b	45f270 <_obstack_memory_used@@Base+0x140ac>
  45f3ec:	stp	x29, x30, [sp, #-32]!
  45f3f0:	stp	x20, x19, [sp, #16]
  45f3f4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f3f8:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f3fc:	ldr	w9, [x20, #68]
  45f400:	ldr	w8, [x8, #72]
  45f404:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f408:	add	x19, x19, #0xad0
  45f40c:	mov	w7, w6
  45f410:	mov	x6, x19
  45f414:	mov	x29, sp
  45f418:	stp	w9, w8, [x19]
  45f41c:	bl	45e494 <_obstack_memory_used@@Base+0x132d0>
  45f420:	ldr	w8, [x19]
  45f424:	ldr	x9, [x19, #16]
  45f428:	ldr	w11, [x19, #8]
  45f42c:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f430:	str	w8, [x20, #68]
  45f434:	ldp	x20, x19, [sp, #16]
  45f438:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f43c:	str	x9, [x10, #4048]
  45f440:	str	w11, [x12, #76]
  45f444:	ldp	x29, x30, [sp], #32
  45f448:	ret
  45f44c:	stp	x29, x30, [sp, #-32]!
  45f450:	stp	x20, x19, [sp, #16]
  45f454:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f458:	adrp	x8, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f45c:	ldr	w9, [x20, #68]
  45f460:	ldr	w8, [x8, #72]
  45f464:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f468:	add	x19, x19, #0xad0
  45f46c:	mov	w7, #0x1                   	// #1
  45f470:	mov	x3, xzr
  45f474:	mov	x4, xzr
  45f478:	mov	w5, wzr
  45f47c:	mov	x6, x19
  45f480:	mov	x29, sp
  45f484:	stp	w9, w8, [x19]
  45f488:	bl	45e494 <_obstack_memory_used@@Base+0x132d0>
  45f48c:	ldr	w8, [x19]
  45f490:	ldr	x9, [x19, #16]
  45f494:	ldr	w11, [x19, #8]
  45f498:	adrp	x10, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f49c:	str	w8, [x20, #68]
  45f4a0:	ldp	x20, x19, [sp, #16]
  45f4a4:	adrp	x12, 480000 <_obstack_memory_used@@Base+0x34e3c>
  45f4a8:	str	x9, [x10, #4048]
  45f4ac:	str	w11, [x12, #76]
  45f4b0:	ldp	x29, x30, [sp], #32
  45f4b4:	ret
  45f4b8:	mov	w2, #0x3                   	// #3
  45f4bc:	mov	w1, wzr
  45f4c0:	b	44aaf8 <argp_parse@@Base+0x1044c>
  45f4c4:	nop
  45f4c8:	stp	x29, x30, [sp, #-48]!
  45f4cc:	mov	x29, sp
  45f4d0:	str	q0, [sp, #16]
  45f4d4:	str	q1, [sp, #32]
  45f4d8:	ldp	x2, x0, [sp, #16]
  45f4dc:	ldp	x5, x3, [sp, #32]
  45f4e0:	mrs	x10, fpcr
  45f4e4:	lsr	x1, x0, #63
  45f4e8:	ubfx	x6, x0, #0, #48
  45f4ec:	and	w13, w1, #0xff
  45f4f0:	mov	x14, x1
  45f4f4:	ubfx	x7, x0, #48, #15
  45f4f8:	cbz	w7, 45f918 <_obstack_memory_used@@Base+0x14754>
  45f4fc:	mov	w4, #0x7fff                	// #32767
  45f500:	cmp	w7, w4
  45f504:	b.eq	45f960 <_obstack_memory_used@@Base+0x1479c>  // b.none
  45f508:	and	x7, x7, #0xffff
  45f50c:	extr	x6, x6, x2, #61
  45f510:	mov	x15, #0xffffffffffffc001    	// #-16383
  45f514:	orr	x4, x6, #0x8000000000000
  45f518:	add	x7, x7, x15
  45f51c:	lsl	x2, x2, #3
  45f520:	mov	x1, #0x0                   	// #0
  45f524:	mov	x16, #0x0                   	// #0
  45f528:	mov	w0, #0x0                   	// #0
  45f52c:	lsr	x8, x3, #63
  45f530:	ubfx	x6, x3, #0, #48
  45f534:	and	w15, w8, #0xff
  45f538:	ubfx	x9, x3, #48, #15
  45f53c:	cbz	w9, 45f8d4 <_obstack_memory_used@@Base+0x14710>
  45f540:	mov	w11, #0x7fff                	// #32767
  45f544:	cmp	w9, w11
  45f548:	b.eq	45f60c <_obstack_memory_used@@Base+0x14448>  // b.none
  45f54c:	and	x9, x9, #0xffff
  45f550:	extr	x6, x6, x5, #61
  45f554:	mov	x12, #0xffffffffffffc001    	// #-16383
  45f558:	orr	x6, x6, #0x8000000000000
  45f55c:	add	x9, x9, x12
  45f560:	lsl	x5, x5, #3
  45f564:	sub	x7, x7, x9
  45f568:	mov	x9, #0x0                   	// #0
  45f56c:	eor	w11, w13, w15
  45f570:	cmp	x1, #0x9
  45f574:	and	x3, x11, #0xff
  45f578:	mov	x12, x3
  45f57c:	b.gt	45f8ac <_obstack_memory_used@@Base+0x146e8>
  45f580:	cmp	x1, #0x7
  45f584:	b.gt	45fa6c <_obstack_memory_used@@Base+0x148a8>
  45f588:	cmp	x1, #0x3
  45f58c:	b.eq	45f5a8 <_obstack_memory_used@@Base+0x143e4>  // b.none
  45f590:	b.le	45f87c <_obstack_memory_used@@Base+0x146b8>
  45f594:	cmp	x1, #0x5
  45f598:	b.eq	45f8bc <_obstack_memory_used@@Base+0x146f8>  // b.none
  45f59c:	b.le	45f6a0 <_obstack_memory_used@@Base+0x144dc>
  45f5a0:	cmp	x1, #0x6
  45f5a4:	b.eq	45f670 <_obstack_memory_used@@Base+0x144ac>  // b.none
  45f5a8:	cmp	x9, #0x1
  45f5ac:	b.eq	45f9f0 <_obstack_memory_used@@Base+0x1482c>  // b.none
  45f5b0:	cbz	x9, 45f5c4 <_obstack_memory_used@@Base+0x14400>
  45f5b4:	cmp	x9, #0x2
  45f5b8:	b.eq	45fbf4 <_obstack_memory_used@@Base+0x14a30>  // b.none
  45f5bc:	cmp	x9, #0x3
  45f5c0:	b.eq	45fbdc <_obstack_memory_used@@Base+0x14a18>  // b.none
  45f5c4:	mov	x1, #0x3fff                	// #16383
  45f5c8:	mov	x12, x8
  45f5cc:	add	x3, x7, x1
  45f5d0:	cmp	x3, #0x0
  45f5d4:	b.le	45fab0 <_obstack_memory_used@@Base+0x148ec>
  45f5d8:	tst	x5, #0x7
  45f5dc:	b.ne	45fa20 <_obstack_memory_used@@Base+0x1485c>  // b.any
  45f5e0:	and	w11, w12, #0x1
  45f5e4:	tbz	x6, #52, 45f5f0 <_obstack_memory_used@@Base+0x1442c>
  45f5e8:	and	x6, x6, #0xffefffffffffffff
  45f5ec:	add	x3, x7, #0x4, lsl #12
  45f5f0:	mov	x1, #0x7ffe                	// #32766
  45f5f4:	cmp	x3, x1
  45f5f8:	b.gt	45fb98 <_obstack_memory_used@@Base+0x149d4>
  45f5fc:	and	w1, w3, #0x7fff
  45f600:	extr	x2, x6, x5, #3
  45f604:	ubfx	x6, x6, #3, #48
  45f608:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45f60c:	mov	x9, #0xffffffffffff8001    	// #-32767
  45f610:	orr	x3, x6, x5
  45f614:	add	x7, x7, x9
  45f618:	cbz	x3, 45f994 <_obstack_memory_used@@Base+0x147d0>
  45f61c:	tst	x6, #0x800000000000
  45f620:	orr	x1, x1, #0x3
  45f624:	csinc	w0, w0, wzr, ne  // ne = any
  45f628:	mov	x9, #0x3                   	// #3
  45f62c:	eor	w11, w13, w15
  45f630:	cmp	x1, #0x9
  45f634:	and	x3, x11, #0xff
  45f638:	mov	x12, x3
  45f63c:	b.le	45f580 <_obstack_memory_used@@Base+0x143bc>
  45f640:	cmp	x1, #0xf
  45f644:	b.ne	45f8ac <_obstack_memory_used@@Base+0x146e8>  // b.any
  45f648:	tbz	x4, #47, 45fa58 <_obstack_memory_used@@Base+0x14894>
  45f64c:	tbnz	x6, #47, 45fa58 <_obstack_memory_used@@Base+0x14894>
  45f650:	orr	x6, x6, #0x800000000000
  45f654:	mov	w11, w15
  45f658:	and	x6, x6, #0xffffffffffff
  45f65c:	mov	x2, x5
  45f660:	mov	w1, #0x7fff                	// #32767
  45f664:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45f668:	cmp	x1, #0x2
  45f66c:	b.ne	45f6a8 <_obstack_memory_used@@Base+0x144e4>  // b.any
  45f670:	mov	w1, #0x0                   	// #0
  45f674:	mov	x6, #0x0                   	// #0
  45f678:	mov	x2, #0x0                   	// #0
  45f67c:	mov	x5, #0x0                   	// #0
  45f680:	orr	w1, w1, w11, lsl #15
  45f684:	bfxil	x5, x6, #0, #48
  45f688:	fmov	d0, x2
  45f68c:	bfi	x5, x1, #48, #16
  45f690:	fmov	v0.d[1], x5
  45f694:	cbnz	w0, 45f89c <_obstack_memory_used@@Base+0x146d8>
  45f698:	ldp	x29, x30, [sp], #48
  45f69c:	ret
  45f6a0:	cmp	x1, #0x4
  45f6a4:	b.eq	45f670 <_obstack_memory_used@@Base+0x144ac>  // b.none
  45f6a8:	cmp	x4, x6
  45f6ac:	b.ls	45fa04 <_obstack_memory_used@@Base+0x14840>  // b.plast
  45f6b0:	lsr	x3, x4, #1
  45f6b4:	extr	x8, x4, x2, #1
  45f6b8:	lsl	x2, x2, #63
  45f6bc:	ubfx	x14, x6, #20, #32
  45f6c0:	extr	x9, x6, x5, #52
  45f6c4:	lsl	x13, x5, #12
  45f6c8:	and	x15, x9, #0xffffffff
  45f6cc:	udiv	x5, x3, x14
  45f6d0:	msub	x3, x5, x14, x3
  45f6d4:	mul	x1, x15, x5
  45f6d8:	extr	x3, x3, x8, #32
  45f6dc:	cmp	x1, x3
  45f6e0:	b.ls	45f6f4 <_obstack_memory_used@@Base+0x14530>  // b.plast
  45f6e4:	adds	x3, x9, x3
  45f6e8:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  45f6ec:	b.hi	45fcd4 <_obstack_memory_used@@Base+0x14b10>  // b.pmore
  45f6f0:	sub	x5, x5, #0x1
  45f6f4:	sub	x3, x3, x1
  45f6f8:	mov	x4, x8
  45f6fc:	udiv	x1, x3, x14
  45f700:	msub	x3, x1, x14, x3
  45f704:	mul	x6, x15, x1
  45f708:	bfi	x4, x3, #32, #32
  45f70c:	cmp	x6, x4
  45f710:	b.ls	45f724 <_obstack_memory_used@@Base+0x14560>  // b.plast
  45f714:	adds	x4, x9, x4
  45f718:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  45f71c:	b.hi	45fcc8 <_obstack_memory_used@@Base+0x14b04>  // b.pmore
  45f720:	sub	x1, x1, #0x1
  45f724:	orr	x8, x1, x5, lsl #32
  45f728:	and	x17, x13, #0xffffffff
  45f72c:	and	x1, x8, #0xffffffff
  45f730:	lsr	x16, x13, #32
  45f734:	lsr	x5, x8, #32
  45f738:	sub	x4, x4, x6
  45f73c:	mov	x18, #0x100000000           	// #4294967296
  45f740:	mul	x3, x1, x17
  45f744:	mul	x30, x5, x17
  45f748:	madd	x6, x16, x1, x30
  45f74c:	and	x1, x3, #0xffffffff
  45f750:	mul	x5, x5, x16
  45f754:	add	x3, x6, x3, lsr #32
  45f758:	add	x6, x5, x18
  45f75c:	cmp	x30, x3
  45f760:	csel	x5, x6, x5, hi  // hi = pmore
  45f764:	add	x1, x1, x3, lsl #32
  45f768:	add	x5, x5, x3, lsr #32
  45f76c:	cmp	x4, x5
  45f770:	b.cc	45fa7c <_obstack_memory_used@@Base+0x148b8>  // b.lo, b.ul, b.last
  45f774:	ccmp	x2, x1, #0x2, eq  // eq = none
  45f778:	mov	x6, x8
  45f77c:	b.cc	45fa7c <_obstack_memory_used@@Base+0x148b8>  // b.lo, b.ul, b.last
  45f780:	subs	x8, x2, x1
  45f784:	mov	x3, #0x3fff                	// #16383
  45f788:	cmp	x2, x1
  45f78c:	add	x3, x7, x3
  45f790:	sbc	x4, x4, x5
  45f794:	cmp	x9, x4
  45f798:	b.eq	45fce0 <_obstack_memory_used@@Base+0x14b1c>  // b.none
  45f79c:	udiv	x5, x4, x14
  45f7a0:	msub	x4, x5, x14, x4
  45f7a4:	mul	x2, x15, x5
  45f7a8:	extr	x1, x4, x8, #32
  45f7ac:	cmp	x2, x1
  45f7b0:	b.ls	45f7c4 <_obstack_memory_used@@Base+0x14600>  // b.plast
  45f7b4:	adds	x1, x9, x1
  45f7b8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  45f7bc:	b.hi	45fd98 <_obstack_memory_used@@Base+0x14bd4>  // b.pmore
  45f7c0:	sub	x5, x5, #0x1
  45f7c4:	sub	x1, x1, x2
  45f7c8:	udiv	x2, x1, x14
  45f7cc:	msub	x1, x2, x14, x1
  45f7d0:	mul	x15, x15, x2
  45f7d4:	bfi	x8, x1, #32, #32
  45f7d8:	mov	x1, x8
  45f7dc:	cmp	x15, x8
  45f7e0:	b.ls	45f7f4 <_obstack_memory_used@@Base+0x14630>  // b.plast
  45f7e4:	adds	x1, x9, x8
  45f7e8:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  45f7ec:	b.hi	45fda4 <_obstack_memory_used@@Base+0x14be0>  // b.pmore
  45f7f0:	sub	x2, x2, #0x1
  45f7f4:	orr	x5, x2, x5, lsl #32
  45f7f8:	mov	x11, #0x100000000           	// #4294967296
  45f7fc:	and	x4, x5, #0xffffffff
  45f800:	sub	x1, x1, x15
  45f804:	lsr	x14, x5, #32
  45f808:	mul	x2, x17, x4
  45f80c:	mul	x17, x14, x17
  45f810:	madd	x4, x16, x4, x17
  45f814:	and	x8, x2, #0xffffffff
  45f818:	mul	x16, x16, x14
  45f81c:	add	x2, x4, x2, lsr #32
  45f820:	add	x4, x16, x11
  45f824:	cmp	x17, x2
  45f828:	csel	x16, x4, x16, hi  // hi = pmore
  45f82c:	add	x4, x8, x2, lsl #32
  45f830:	add	x16, x16, x2, lsr #32
  45f834:	cmp	x1, x16
  45f838:	b.cs	45fc18 <_obstack_memory_used@@Base+0x14a54>  // b.hs, b.nlast
  45f83c:	adds	x2, x9, x1
  45f840:	sub	x8, x5, #0x1
  45f844:	mov	x1, x2
  45f848:	b.cs	45f85c <_obstack_memory_used@@Base+0x14698>  // b.hs, b.nlast
  45f84c:	cmp	x2, x16
  45f850:	b.cc	45fd18 <_obstack_memory_used@@Base+0x14b54>  // b.lo, b.ul, b.last
  45f854:	ccmp	x13, x4, #0x2, eq  // eq = none
  45f858:	b.cc	45fd18 <_obstack_memory_used@@Base+0x14b54>  // b.lo, b.ul, b.last
  45f85c:	cmp	x13, x4
  45f860:	mov	x5, x8
  45f864:	cset	w2, ne  // ne = any
  45f868:	cmp	w2, #0x0
  45f86c:	orr	x2, x5, #0x1
  45f870:	ccmp	x1, x16, #0x0, eq  // eq = none
  45f874:	csel	x5, x2, x5, ne  // ne = any
  45f878:	b	45f5d0 <_obstack_memory_used@@Base+0x1440c>
  45f87c:	cmp	x1, #0x1
  45f880:	b.ne	45f668 <_obstack_memory_used@@Base+0x144a4>  // b.any
  45f884:	mov	x4, #0x0                   	// #0
  45f888:	fmov	d0, x4
  45f88c:	lsl	x3, x3, #63
  45f890:	orr	w0, w0, #0x2
  45f894:	orr	x5, x3, #0x7fff000000000000
  45f898:	fmov	v0.d[1], x5
  45f89c:	str	q0, [sp, #16]
  45f8a0:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  45f8a4:	ldr	q0, [sp, #16]
  45f8a8:	b	45f698 <_obstack_memory_used@@Base+0x144d4>
  45f8ac:	cmp	x1, #0xb
  45f8b0:	b.gt	45f980 <_obstack_memory_used@@Base+0x147bc>
  45f8b4:	cmp	x1, #0xa
  45f8b8:	b.ne	45f5a8 <_obstack_memory_used@@Base+0x143e4>  // b.any
  45f8bc:	mov	w11, #0x0                   	// #0
  45f8c0:	mov	x6, #0xffffffffffff        	// #281474976710655
  45f8c4:	mov	x2, #0xffffffffffffffff    	// #-1
  45f8c8:	mov	w0, #0x1                   	// #1
  45f8cc:	mov	w1, #0x7fff                	// #32767
  45f8d0:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45f8d4:	orr	x3, x6, x5
  45f8d8:	cbz	x3, 45f9c0 <_obstack_memory_used@@Base+0x147fc>
  45f8dc:	cbz	x6, 45fb74 <_obstack_memory_used@@Base+0x149b0>
  45f8e0:	clz	x3, x6
  45f8e4:	sub	x9, x3, #0xf
  45f8e8:	add	w12, w9, #0x3
  45f8ec:	mov	w11, #0x3d                  	// #61
  45f8f0:	sub	w9, w11, w9
  45f8f4:	lsl	x6, x6, x12
  45f8f8:	lsr	x9, x5, x9
  45f8fc:	orr	x6, x9, x6
  45f900:	lsl	x5, x5, x12
  45f904:	add	x7, x3, x7
  45f908:	mov	x11, #0x3fef                	// #16367
  45f90c:	mov	x9, #0x0                   	// #0
  45f910:	add	x7, x7, x11
  45f914:	b	45f56c <_obstack_memory_used@@Base+0x143a8>
  45f918:	orr	x4, x6, x2
  45f91c:	cbz	x4, 45f9a8 <_obstack_memory_used@@Base+0x147e4>
  45f920:	cbz	x6, 45fb50 <_obstack_memory_used@@Base+0x1498c>
  45f924:	clz	x0, x6
  45f928:	sub	x4, x0, #0xf
  45f92c:	add	w7, w4, #0x3
  45f930:	mov	w1, #0x3d                  	// #61
  45f934:	sub	w4, w1, w4
  45f938:	lsl	x6, x6, x7
  45f93c:	lsr	x4, x2, x4
  45f940:	orr	x4, x4, x6
  45f944:	lsl	x2, x2, x7
  45f948:	mov	x7, #0xffffffffffffc011    	// #-16367
  45f94c:	mov	x1, #0x0                   	// #0
  45f950:	sub	x7, x7, x0
  45f954:	mov	x16, #0x0                   	// #0
  45f958:	mov	w0, #0x0                   	// #0
  45f95c:	b	45f52c <_obstack_memory_used@@Base+0x14368>
  45f960:	orr	x4, x6, x2
  45f964:	cbnz	x4, 45f9d4 <_obstack_memory_used@@Base+0x14810>
  45f968:	mov	x2, #0x0                   	// #0
  45f96c:	mov	x1, #0x8                   	// #8
  45f970:	mov	x7, #0x7fff                	// #32767
  45f974:	mov	x16, #0x2                   	// #2
  45f978:	mov	w0, #0x0                   	// #0
  45f97c:	b	45f52c <_obstack_memory_used@@Base+0x14368>
  45f980:	mov	x6, x4
  45f984:	mov	x5, x2
  45f988:	mov	x8, x14
  45f98c:	mov	x9, x16
  45f990:	b	45f5a8 <_obstack_memory_used@@Base+0x143e4>
  45f994:	orr	x1, x1, #0x2
  45f998:	mov	x6, #0x0                   	// #0
  45f99c:	mov	x5, #0x0                   	// #0
  45f9a0:	mov	x9, #0x2                   	// #2
  45f9a4:	b	45f62c <_obstack_memory_used@@Base+0x14468>
  45f9a8:	mov	x2, #0x0                   	// #0
  45f9ac:	mov	x1, #0x4                   	// #4
  45f9b0:	mov	x7, #0x0                   	// #0
  45f9b4:	mov	x16, #0x1                   	// #1
  45f9b8:	mov	w0, #0x0                   	// #0
  45f9bc:	b	45f52c <_obstack_memory_used@@Base+0x14368>
  45f9c0:	orr	x1, x1, #0x1
  45f9c4:	mov	x6, #0x0                   	// #0
  45f9c8:	mov	x5, #0x0                   	// #0
  45f9cc:	mov	x9, #0x1                   	// #1
  45f9d0:	b	45f56c <_obstack_memory_used@@Base+0x143a8>
  45f9d4:	lsr	x0, x6, #47
  45f9d8:	mov	x4, x6
  45f9dc:	eor	w0, w0, #0x1
  45f9e0:	mov	x1, #0xc                   	// #12
  45f9e4:	mov	x7, #0x7fff                	// #32767
  45f9e8:	mov	x16, #0x3                   	// #3
  45f9ec:	b	45f52c <_obstack_memory_used@@Base+0x14368>
  45f9f0:	mov	w11, w8
  45f9f4:	mov	w1, #0x0                   	// #0
  45f9f8:	mov	x6, #0x0                   	// #0
  45f9fc:	mov	x2, #0x0                   	// #0
  45fa00:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45fa04:	ccmp	x5, x2, #0x2, eq  // eq = none
  45fa08:	b.ls	45f6b0 <_obstack_memory_used@@Base+0x144ec>  // b.plast
  45fa0c:	mov	x8, x2
  45fa10:	sub	x7, x7, #0x1
  45fa14:	mov	x3, x4
  45fa18:	mov	x2, #0x0                   	// #0
  45fa1c:	b	45f6bc <_obstack_memory_used@@Base+0x144f8>
  45fa20:	and	x1, x10, #0xc00000
  45fa24:	orr	w0, w0, #0x10
  45fa28:	cmp	x1, #0x400, lsl #12
  45fa2c:	b.eq	45fd80 <_obstack_memory_used@@Base+0x14bbc>  // b.none
  45fa30:	cmp	x1, #0x800, lsl #12
  45fa34:	b.eq	45fc94 <_obstack_memory_used@@Base+0x14ad0>  // b.none
  45fa38:	cbnz	x1, 45f5e0 <_obstack_memory_used@@Base+0x1441c>
  45fa3c:	and	x1, x5, #0xf
  45fa40:	and	w11, w12, #0x1
  45fa44:	cmp	x1, #0x4
  45fa48:	b.eq	45f5e4 <_obstack_memory_used@@Base+0x14420>  // b.none
  45fa4c:	adds	x5, x5, #0x4
  45fa50:	cinc	x6, x6, cs  // cs = hs, nlast
  45fa54:	b	45f5e4 <_obstack_memory_used@@Base+0x14420>
  45fa58:	orr	x6, x4, #0x800000000000
  45fa5c:	mov	w11, w13
  45fa60:	and	x6, x6, #0xffffffffffff
  45fa64:	mov	w1, #0x7fff                	// #32767
  45fa68:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45fa6c:	mov	w1, #0x7fff                	// #32767
  45fa70:	mov	x6, #0x0                   	// #0
  45fa74:	mov	x2, #0x0                   	// #0
  45fa78:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45fa7c:	adds	x3, x2, x13
  45fa80:	sub	x6, x8, #0x1
  45fa84:	adc	x4, x4, x9
  45fa88:	cset	x18, cs  // cs = hs, nlast
  45fa8c:	mov	x2, x3
  45fa90:	cmp	x9, x4
  45fa94:	b.cs	45fc08 <_obstack_memory_used@@Base+0x14a44>  // b.hs, b.nlast
  45fa98:	cmp	x5, x4
  45fa9c:	b.ls	45fc30 <_obstack_memory_used@@Base+0x14a6c>  // b.plast
  45faa0:	adds	x2, x13, x3
  45faa4:	sub	x6, x8, #0x2
  45faa8:	adc	x4, x4, x9
  45faac:	b	45f780 <_obstack_memory_used@@Base+0x145bc>
  45fab0:	mov	x1, #0x1                   	// #1
  45fab4:	sub	x1, x1, x3
  45fab8:	cmp	x1, #0x74
  45fabc:	and	w11, w12, #0x1
  45fac0:	b.le	45fadc <_obstack_memory_used@@Base+0x14918>
  45fac4:	orr	x2, x5, x6
  45fac8:	cbnz	x2, 45fcfc <_obstack_memory_used@@Base+0x14b38>
  45facc:	orr	w0, w0, #0x8
  45fad0:	mov	w1, #0x0                   	// #0
  45fad4:	mov	x6, #0x0                   	// #0
  45fad8:	b	45fbc0 <_obstack_memory_used@@Base+0x149fc>
  45fadc:	cmp	x1, #0x3f
  45fae0:	b.le	45fc3c <_obstack_memory_used@@Base+0x14a78>
  45fae4:	mov	w2, #0x80                  	// #128
  45fae8:	sub	w2, w2, w1
  45faec:	cmp	x1, #0x40
  45faf0:	sub	w1, w1, #0x40
  45faf4:	lsl	x2, x6, x2
  45faf8:	orr	x2, x5, x2
  45fafc:	csel	x5, x2, x5, ne  // ne = any
  45fb00:	lsr	x6, x6, x1
  45fb04:	cmp	x5, #0x0
  45fb08:	cset	x2, ne  // ne = any
  45fb0c:	orr	x2, x2, x6
  45fb10:	ands	x6, x2, #0x7
  45fb14:	b.eq	45fc70 <_obstack_memory_used@@Base+0x14aac>  // b.none
  45fb18:	mov	x6, #0x0                   	// #0
  45fb1c:	and	x10, x10, #0xc00000
  45fb20:	orr	w0, w0, #0x10
  45fb24:	cmp	x10, #0x400, lsl #12
  45fb28:	b.eq	45fdbc <_obstack_memory_used@@Base+0x14bf8>  // b.none
  45fb2c:	cmp	x10, #0x800, lsl #12
  45fb30:	b.eq	45fdd0 <_obstack_memory_used@@Base+0x14c0c>  // b.none
  45fb34:	cbz	x10, 45fd38 <_obstack_memory_used@@Base+0x14b74>
  45fb38:	tbnz	x6, #51, 45fd50 <_obstack_memory_used@@Base+0x14b8c>
  45fb3c:	orr	w0, w0, #0x8
  45fb40:	extr	x2, x6, x2, #3
  45fb44:	mov	w1, #0x0                   	// #0
  45fb48:	ubfx	x6, x6, #3, #48
  45fb4c:	b	45fbc0 <_obstack_memory_used@@Base+0x149fc>
  45fb50:	clz	x7, x2
  45fb54:	add	x4, x7, #0x31
  45fb58:	add	x0, x7, #0x40
  45fb5c:	cmp	x4, #0x3c
  45fb60:	b.le	45f92c <_obstack_memory_used@@Base+0x14768>
  45fb64:	sub	w4, w4, #0x3d
  45fb68:	lsl	x4, x2, x4
  45fb6c:	mov	x2, #0x0                   	// #0
  45fb70:	b	45f948 <_obstack_memory_used@@Base+0x14784>
  45fb74:	clz	x3, x5
  45fb78:	add	x9, x3, #0x31
  45fb7c:	add	x3, x3, #0x40
  45fb80:	cmp	x9, #0x3c
  45fb84:	b.le	45f8e8 <_obstack_memory_used@@Base+0x14724>
  45fb88:	sub	w6, w9, #0x3d
  45fb8c:	lsl	x6, x5, x6
  45fb90:	mov	x5, #0x0                   	// #0
  45fb94:	b	45f904 <_obstack_memory_used@@Base+0x14740>
  45fb98:	and	x2, x10, #0xc00000
  45fb9c:	cmp	x2, #0x400, lsl #12
  45fba0:	b.eq	45fd64 <_obstack_memory_used@@Base+0x14ba0>  // b.none
  45fba4:	cmp	x2, #0x800, lsl #12
  45fba8:	b.eq	45fcac <_obstack_memory_used@@Base+0x14ae8>  // b.none
  45fbac:	cbz	x2, 45fc88 <_obstack_memory_used@@Base+0x14ac4>
  45fbb0:	mov	x6, #0xffffffffffff        	// #281474976710655
  45fbb4:	mov	x2, #0xffffffffffffffff    	// #-1
  45fbb8:	mov	w3, #0x14                  	// #20
  45fbbc:	orr	w0, w0, w3
  45fbc0:	mov	x5, #0x0                   	// #0
  45fbc4:	orr	w1, w1, w11, lsl #15
  45fbc8:	bfxil	x5, x6, #0, #48
  45fbcc:	fmov	d0, x2
  45fbd0:	bfi	x5, x1, #48, #16
  45fbd4:	fmov	v0.d[1], x5
  45fbd8:	b	45f89c <_obstack_memory_used@@Base+0x146d8>
  45fbdc:	orr	x6, x6, #0x800000000000
  45fbe0:	mov	w11, w8
  45fbe4:	and	x6, x6, #0xffffffffffff
  45fbe8:	mov	x2, x5
  45fbec:	mov	w1, #0x7fff                	// #32767
  45fbf0:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45fbf4:	mov	w11, w8
  45fbf8:	mov	w1, #0x7fff                	// #32767
  45fbfc:	mov	x6, #0x0                   	// #0
  45fc00:	mov	x2, #0x0                   	// #0
  45fc04:	b	45f67c <_obstack_memory_used@@Base+0x144b8>
  45fc08:	cmp	x18, #0x0
  45fc0c:	ccmp	x9, x4, #0x0, eq  // eq = none
  45fc10:	b.ne	45f780 <_obstack_memory_used@@Base+0x145bc>  // b.any
  45fc14:	b	45fa98 <_obstack_memory_used@@Base+0x148d4>
  45fc18:	cmp	x4, #0x0
  45fc1c:	cset	w2, ne  // ne = any
  45fc20:	cmp	w2, #0x0
  45fc24:	ccmp	x1, x16, #0x0, ne  // ne = any
  45fc28:	b.ne	45f868 <_obstack_memory_used@@Base+0x146a4>  // b.any
  45fc2c:	b	45f83c <_obstack_memory_used@@Base+0x14678>
  45fc30:	ccmp	x1, x3, #0x0, eq  // eq = none
  45fc34:	b.ls	45f780 <_obstack_memory_used@@Base+0x145bc>  // b.plast
  45fc38:	b	45faa0 <_obstack_memory_used@@Base+0x148dc>
  45fc3c:	mov	w2, #0x40                  	// #64
  45fc40:	sub	w2, w2, w1
  45fc44:	lsr	x4, x5, x1
  45fc48:	lsl	x5, x5, x2
  45fc4c:	cmp	x5, #0x0
  45fc50:	cset	x3, ne  // ne = any
  45fc54:	lsl	x2, x6, x2
  45fc58:	orr	x2, x2, x4
  45fc5c:	lsr	x6, x6, x1
  45fc60:	orr	x2, x2, x3
  45fc64:	tst	x2, #0x7
  45fc68:	b.ne	45fb1c <_obstack_memory_used@@Base+0x14958>  // b.any
  45fc6c:	tbnz	x6, #51, 45fddc <_obstack_memory_used@@Base+0x14c18>
  45fc70:	mov	w1, #0x0                   	// #0
  45fc74:	extr	x2, x6, x2, #3
  45fc78:	ubfx	x6, x6, #3, #48
  45fc7c:	tbz	w10, #11, 45f67c <_obstack_memory_used@@Base+0x144b8>
  45fc80:	orr	w0, w0, #0x8
  45fc84:	b	45fbc0 <_obstack_memory_used@@Base+0x149fc>
  45fc88:	mov	w1, #0x7fff                	// #32767
  45fc8c:	mov	x6, #0x0                   	// #0
  45fc90:	b	45fbb8 <_obstack_memory_used@@Base+0x149f4>
  45fc94:	mov	w11, #0x0                   	// #0
  45fc98:	cbz	x12, 45f5e4 <_obstack_memory_used@@Base+0x14420>
  45fc9c:	adds	x5, x5, #0x8
  45fca0:	mov	w11, #0x1                   	// #1
  45fca4:	cinc	x6, x6, cs  // cs = hs, nlast
  45fca8:	b	45f5e4 <_obstack_memory_used@@Base+0x14420>
  45fcac:	cmp	x12, #0x0
  45fcb0:	mov	w2, #0x7fff                	// #32767
  45fcb4:	mov	x6, #0xffffffffffff        	// #281474976710655
  45fcb8:	csel	w1, w1, w2, eq  // eq = none
  45fcbc:	csel	x6, x6, xzr, eq  // eq = none
  45fcc0:	csetm	x2, eq  // eq = none
  45fcc4:	b	45fbb8 <_obstack_memory_used@@Base+0x149f4>
  45fcc8:	sub	x1, x1, #0x2
  45fccc:	add	x4, x4, x9
  45fcd0:	b	45f724 <_obstack_memory_used@@Base+0x14560>
  45fcd4:	sub	x5, x5, #0x2
  45fcd8:	add	x3, x3, x9
  45fcdc:	b	45f6f4 <_obstack_memory_used@@Base+0x14530>
  45fce0:	cmp	x3, #0x0
  45fce4:	mov	x5, #0xffffffffffffffff    	// #-1
  45fce8:	b.gt	45fa20 <_obstack_memory_used@@Base+0x1485c>
  45fcec:	mov	x1, #0x1                   	// #1
  45fcf0:	sub	x1, x1, x3
  45fcf4:	cmp	x1, #0x74
  45fcf8:	b.le	45fadc <_obstack_memory_used@@Base+0x14918>
  45fcfc:	and	x10, x10, #0xc00000
  45fd00:	orr	w0, w0, #0x10
  45fd04:	cmp	x10, #0x400, lsl #12
  45fd08:	b.eq	45fdb0 <_obstack_memory_used@@Base+0x14bec>  // b.none
  45fd0c:	cmp	x10, #0x800, lsl #12
  45fd10:	csel	x2, x12, xzr, eq  // eq = none
  45fd14:	b	45facc <_obstack_memory_used@@Base+0x14908>
  45fd18:	lsl	x8, x13, #1
  45fd1c:	sub	x5, x5, #0x2
  45fd20:	cmp	x13, x8
  45fd24:	cinc	x1, x9, hi  // hi = pmore
  45fd28:	cmp	x4, x8
  45fd2c:	add	x1, x2, x1
  45fd30:	cset	w2, ne  // ne = any
  45fd34:	b	45f868 <_obstack_memory_used@@Base+0x146a4>
  45fd38:	and	x1, x2, #0xf
  45fd3c:	cmp	x1, #0x4
  45fd40:	b.eq	45fd4c <_obstack_memory_used@@Base+0x14b88>  // b.none
  45fd44:	adds	x2, x2, #0x4
  45fd48:	cinc	x6, x6, cs  // cs = hs, nlast
  45fd4c:	tbz	x6, #51, 45fb3c <_obstack_memory_used@@Base+0x14978>
  45fd50:	orr	w0, w0, #0x8
  45fd54:	mov	w1, #0x1                   	// #1
  45fd58:	mov	x6, #0x0                   	// #0
  45fd5c:	mov	x2, #0x0                   	// #0
  45fd60:	b	45fbc0 <_obstack_memory_used@@Base+0x149fc>
  45fd64:	cmp	x12, #0x0
  45fd68:	mov	w2, #0x7fff                	// #32767
  45fd6c:	mov	x6, #0xffffffffffff        	// #281474976710655
  45fd70:	csel	w1, w1, w2, ne  // ne = any
  45fd74:	csel	x6, x6, xzr, ne  // ne = any
  45fd78:	csetm	x2, ne  // ne = any
  45fd7c:	b	45fbb8 <_obstack_memory_used@@Base+0x149f4>
  45fd80:	mov	w11, #0x1                   	// #1
  45fd84:	cbnz	x12, 45f5e4 <_obstack_memory_used@@Base+0x14420>
  45fd88:	adds	x5, x5, #0x8
  45fd8c:	mov	w11, #0x0                   	// #0
  45fd90:	cinc	x6, x6, cs  // cs = hs, nlast
  45fd94:	b	45f5e4 <_obstack_memory_used@@Base+0x14420>
  45fd98:	sub	x5, x5, #0x2
  45fd9c:	add	x1, x1, x9
  45fda0:	b	45f7c4 <_obstack_memory_used@@Base+0x14600>
  45fda4:	sub	x2, x2, #0x2
  45fda8:	add	x1, x1, x9
  45fdac:	b	45f7f4 <_obstack_memory_used@@Base+0x14630>
  45fdb0:	mov	x2, #0x1                   	// #1
  45fdb4:	sub	x2, x2, x12
  45fdb8:	b	45facc <_obstack_memory_used@@Base+0x14908>
  45fdbc:	cbnz	x12, 45fd4c <_obstack_memory_used@@Base+0x14b88>
  45fdc0:	adds	x2, x2, #0x8
  45fdc4:	cinc	x6, x6, cs  // cs = hs, nlast
  45fdc8:	tbnz	x6, #51, 45fd50 <_obstack_memory_used@@Base+0x14b8c>
  45fdcc:	b	45fb3c <_obstack_memory_used@@Base+0x14978>
  45fdd0:	cbnz	x12, 45fdc0 <_obstack_memory_used@@Base+0x14bfc>
  45fdd4:	tbnz	x6, #51, 45fd50 <_obstack_memory_used@@Base+0x14b8c>
  45fdd8:	b	45fb3c <_obstack_memory_used@@Base+0x14978>
  45fddc:	orr	w0, w0, #0x10
  45fde0:	b	45fd50 <_obstack_memory_used@@Base+0x14b8c>
  45fde4:	nop
  45fde8:	stp	x29, x30, [sp, #-48]!
  45fdec:	mov	x29, sp
  45fdf0:	str	q0, [sp, #16]
  45fdf4:	str	q1, [sp, #32]
  45fdf8:	ldp	x6, x1, [sp, #16]
  45fdfc:	ldp	x7, x0, [sp, #32]
  45fe00:	mrs	x2, fpcr
  45fe04:	ubfx	x4, x1, #48, #15
  45fe08:	lsr	x2, x1, #63
  45fe0c:	lsr	x3, x0, #63
  45fe10:	ubfx	x9, x0, #0, #48
  45fe14:	mov	x5, #0x7fff                	// #32767
  45fe18:	mov	x10, x6
  45fe1c:	cmp	x4, x5
  45fe20:	and	w2, w2, #0xff
  45fe24:	ubfx	x1, x1, #0, #48
  45fe28:	and	w3, w3, #0xff
  45fe2c:	ubfx	x0, x0, #48, #15
  45fe30:	b.eq	45fe64 <_obstack_memory_used@@Base+0x14ca0>  // b.none
  45fe34:	cmp	x0, x5
  45fe38:	b.eq	45fe50 <_obstack_memory_used@@Base+0x14c8c>  // b.none
  45fe3c:	cmp	x4, x0
  45fe40:	mov	w0, #0x1                   	// #1
  45fe44:	b.eq	45fe7c <_obstack_memory_used@@Base+0x14cb8>  // b.none
  45fe48:	ldp	x29, x30, [sp], #48
  45fe4c:	ret
  45fe50:	orr	x8, x9, x7
  45fe54:	cbnz	x8, 45fee0 <_obstack_memory_used@@Base+0x14d1c>
  45fe58:	mov	w0, #0x1                   	// #1
  45fe5c:	ldp	x29, x30, [sp], #48
  45fe60:	ret
  45fe64:	orr	x5, x1, x6
  45fe68:	cbnz	x5, 45feb0 <_obstack_memory_used@@Base+0x14cec>
  45fe6c:	cmp	x0, x4
  45fe70:	b.ne	45fe58 <_obstack_memory_used@@Base+0x14c94>  // b.any
  45fe74:	orr	x8, x9, x7
  45fe78:	cbnz	x8, 45fee0 <_obstack_memory_used@@Base+0x14d1c>
  45fe7c:	cmp	x1, x9
  45fe80:	mov	w0, #0x1                   	// #1
  45fe84:	ccmp	x6, x7, #0x0, eq  // eq = none
  45fe88:	b.ne	45fe48 <_obstack_memory_used@@Base+0x14c84>  // b.any
  45fe8c:	cmp	w2, w3
  45fe90:	mov	w0, #0x0                   	// #0
  45fe94:	b.eq	45fe48 <_obstack_memory_used@@Base+0x14c84>  // b.none
  45fe98:	mov	w0, #0x1                   	// #1
  45fe9c:	cbnz	x4, 45fe48 <_obstack_memory_used@@Base+0x14c84>
  45fea0:	orr	x1, x1, x10
  45fea4:	cmp	x1, #0x0
  45fea8:	cset	w0, ne  // ne = any
  45feac:	b	45fe48 <_obstack_memory_used@@Base+0x14c84>
  45feb0:	tst	x1, #0x800000000000
  45feb4:	b.ne	45fecc <_obstack_memory_used@@Base+0x14d08>  // b.any
  45feb8:	mov	w0, #0x1                   	// #1
  45febc:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  45fec0:	mov	w0, #0x1                   	// #1
  45fec4:	ldp	x29, x30, [sp], #48
  45fec8:	ret
  45fecc:	cmp	x0, x4
  45fed0:	mov	w0, #0x1                   	// #1
  45fed4:	b.ne	45fe48 <_obstack_memory_used@@Base+0x14c84>  // b.any
  45fed8:	orr	x8, x9, x7
  45fedc:	cbz	x8, 45fe48 <_obstack_memory_used@@Base+0x14c84>
  45fee0:	tst	x9, #0x800000000000
  45fee4:	b.eq	45feb8 <_obstack_memory_used@@Base+0x14cf4>  // b.none
  45fee8:	b	45fe58 <_obstack_memory_used@@Base+0x14c94>
  45feec:	nop
  45fef0:	stp	x29, x30, [sp, #-48]!
  45fef4:	mov	x29, sp
  45fef8:	str	q0, [sp, #16]
  45fefc:	str	q1, [sp, #32]
  45ff00:	ldp	x8, x1, [sp, #16]
  45ff04:	ldp	x9, x0, [sp, #32]
  45ff08:	mrs	x2, fpcr
  45ff0c:	ubfx	x4, x1, #48, #15
  45ff10:	ubfx	x10, x1, #0, #48
  45ff14:	lsr	x2, x1, #63
  45ff18:	mov	x5, #0x7fff                	// #32767
  45ff1c:	mov	x6, x8
  45ff20:	cmp	x4, x5
  45ff24:	ubfx	x11, x0, #0, #48
  45ff28:	ubfx	x7, x0, #48, #15
  45ff2c:	lsr	x1, x0, #63
  45ff30:	mov	x3, x9
  45ff34:	b.eq	45ff6c <_obstack_memory_used@@Base+0x14da8>  // b.none
  45ff38:	cmp	x7, x5
  45ff3c:	b.eq	45ff7c <_obstack_memory_used@@Base+0x14db8>  // b.none
  45ff40:	cbnz	x4, 45ffa8 <_obstack_memory_used@@Base+0x14de4>
  45ff44:	orr	x6, x10, x8
  45ff48:	cmp	x6, #0x0
  45ff4c:	cset	w0, eq  // eq = none
  45ff50:	cbnz	x7, 45ff94 <_obstack_memory_used@@Base+0x14dd0>
  45ff54:	orr	x3, x11, x9
  45ff58:	cbnz	x3, 45ff94 <_obstack_memory_used@@Base+0x14dd0>
  45ff5c:	mov	w0, #0x0                   	// #0
  45ff60:	cbnz	x6, 45ffbc <_obstack_memory_used@@Base+0x14df8>
  45ff64:	ldp	x29, x30, [sp], #48
  45ff68:	ret
  45ff6c:	orr	x0, x10, x8
  45ff70:	cbnz	x0, 45ffd0 <_obstack_memory_used@@Base+0x14e0c>
  45ff74:	cmp	x7, x4
  45ff78:	b.ne	45ffa8 <_obstack_memory_used@@Base+0x14de4>  // b.any
  45ff7c:	orr	x3, x11, x3
  45ff80:	cbnz	x3, 45ffd0 <_obstack_memory_used@@Base+0x14e0c>
  45ff84:	cbnz	x4, 45ffb4 <_obstack_memory_used@@Base+0x14df0>
  45ff88:	orr	x6, x10, x6
  45ff8c:	cmp	x6, #0x0
  45ff90:	cset	w0, eq  // eq = none
  45ff94:	cbz	w0, 45ffb4 <_obstack_memory_used@@Base+0x14df0>
  45ff98:	cmp	x1, #0x0
  45ff9c:	csinv	w0, w0, wzr, ne  // ne = any
  45ffa0:	ldp	x29, x30, [sp], #48
  45ffa4:	ret
  45ffa8:	cbnz	x7, 45ffb4 <_obstack_memory_used@@Base+0x14df0>
  45ffac:	orr	x3, x11, x3
  45ffb0:	cbz	x3, 45ffbc <_obstack_memory_used@@Base+0x14df8>
  45ffb4:	cmp	x2, x1
  45ffb8:	b.eq	45ffe4 <_obstack_memory_used@@Base+0x14e20>  // b.none
  45ffbc:	cmp	x2, #0x0
  45ffc0:	mov	w0, #0xffffffff            	// #-1
  45ffc4:	cneg	w0, w0, eq  // eq = none
  45ffc8:	ldp	x29, x30, [sp], #48
  45ffcc:	ret
  45ffd0:	mov	w0, #0x1                   	// #1
  45ffd4:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  45ffd8:	mov	w0, #0x2                   	// #2
  45ffdc:	ldp	x29, x30, [sp], #48
  45ffe0:	ret
  45ffe4:	cmp	x4, x7
  45ffe8:	b.gt	45ffbc <_obstack_memory_used@@Base+0x14df8>
  45ffec:	b.lt	460020 <_obstack_memory_used@@Base+0x14e5c>  // b.tstop
  45fff0:	cmp	x10, x11
  45fff4:	b.hi	45ffbc <_obstack_memory_used@@Base+0x14df8>  // b.pmore
  45fff8:	cset	w0, eq  // eq = none
  45fffc:	cmp	w0, #0x0
  460000:	ccmp	x8, x9, #0x0, ne  // ne = any
  460004:	b.hi	45ffbc <_obstack_memory_used@@Base+0x14df8>  // b.pmore
  460008:	cmp	x10, x11
  46000c:	b.cc	460020 <_obstack_memory_used@@Base+0x14e5c>  // b.lo, b.ul, b.last
  460010:	cmp	w0, #0x0
  460014:	mov	w0, #0x0                   	// #0
  460018:	ccmp	x8, x9, #0x2, ne  // ne = any
  46001c:	b.cs	45ff64 <_obstack_memory_used@@Base+0x14da0>  // b.hs, b.nlast
  460020:	cmp	x2, #0x0
  460024:	mov	w0, #0x1                   	// #1
  460028:	cneg	w0, w0, eq  // eq = none
  46002c:	b	45ff64 <_obstack_memory_used@@Base+0x14da0>
  460030:	stp	x29, x30, [sp, #-80]!
  460034:	mov	x29, sp
  460038:	str	q0, [sp, #48]
  46003c:	str	q1, [sp, #64]
  460040:	ldp	x1, x0, [sp, #48]
  460044:	ldp	x6, x2, [sp, #64]
  460048:	mrs	x11, fpcr
  46004c:	lsr	x3, x0, #63
  460050:	ubfx	x7, x0, #0, #48
  460054:	and	w12, w3, #0xff
  460058:	mov	x14, x3
  46005c:	ubfx	x3, x0, #48, #15
  460060:	cbz	w3, 460408 <_obstack_memory_used@@Base+0x15244>
  460064:	mov	w4, #0x7fff                	// #32767
  460068:	cmp	w3, w4
  46006c:	b.eq	4604ac <_obstack_memory_used@@Base+0x152e8>  // b.none
  460070:	and	x3, x3, #0xffff
  460074:	extr	x4, x7, x1, #61
  460078:	mov	x18, #0xffffffffffffc001    	// #-16383
  46007c:	orr	x7, x4, #0x8000000000000
  460080:	add	x3, x3, x18
  460084:	lsl	x5, x1, #3
  460088:	mov	x16, #0x0                   	// #0
  46008c:	mov	x1, #0x0                   	// #0
  460090:	mov	w0, #0x0                   	// #0
  460094:	lsr	x8, x2, #63
  460098:	ubfx	x4, x2, #0, #48
  46009c:	and	w15, w8, #0xff
  4600a0:	mov	x13, x8
  4600a4:	ubfx	x9, x2, #48, #15
  4600a8:	cbz	w9, 460468 <_obstack_memory_used@@Base+0x152a4>
  4600ac:	mov	w8, #0x7fff                	// #32767
  4600b0:	cmp	w9, w8
  4600b4:	b.eq	460138 <_obstack_memory_used@@Base+0x14f74>  // b.none
  4600b8:	and	x9, x9, #0xffff
  4600bc:	mov	x17, #0xffffffffffffc001    	// #-16383
  4600c0:	add	x9, x9, x17
  4600c4:	extr	x2, x4, x6, #61
  4600c8:	add	x9, x9, x3
  4600cc:	lsl	x6, x6, #3
  4600d0:	orr	x4, x2, #0x8000000000000
  4600d4:	mov	x2, #0x0                   	// #0
  4600d8:	eor	w8, w12, w15
  4600dc:	cmp	x1, #0xa
  4600e0:	and	w10, w8, #0xff
  4600e4:	add	x3, x9, #0x1
  4600e8:	and	x8, x8, #0xff
  4600ec:	b.le	460170 <_obstack_memory_used@@Base+0x14fac>
  4600f0:	cmp	x1, #0xb
  4600f4:	b.eq	460808 <_obstack_memory_used@@Base+0x15644>  // b.none
  4600f8:	mov	w15, w12
  4600fc:	mov	x13, x14
  460100:	mov	w10, w15
  460104:	cmp	x16, #0x2
  460108:	b.eq	4604cc <_obstack_memory_used@@Base+0x15308>  // b.none
  46010c:	mov	x4, x7
  460110:	mov	x6, x5
  460114:	mov	x2, x16
  460118:	mov	x8, x13
  46011c:	cmp	x2, #0x3
  460120:	b.ne	46018c <_obstack_memory_used@@Base+0x14fc8>  // b.any
  460124:	orr	x4, x4, #0x800000000000
  460128:	mov	x5, x6
  46012c:	and	x4, x4, #0xffffffffffff
  460130:	mov	w1, #0x7fff                	// #32767
  460134:	b	4601a0 <_obstack_memory_used@@Base+0x14fdc>
  460138:	mov	x8, #0x7fff                	// #32767
  46013c:	orr	x2, x4, x6
  460140:	add	x9, x3, x8
  460144:	cbnz	x2, 4601c4 <_obstack_memory_used@@Base+0x15000>
  460148:	eor	w8, w12, w15
  46014c:	orr	x1, x1, #0x2
  460150:	and	w10, w8, #0xff
  460154:	cmp	x1, #0xa
  460158:	add	x3, x3, #0x8, lsl #12
  46015c:	and	x8, x8, #0xff
  460160:	mov	x6, #0x0                   	// #0
  460164:	b.gt	46077c <_obstack_memory_used@@Base+0x155b8>
  460168:	mov	x4, #0x0                   	// #0
  46016c:	mov	x2, #0x2                   	// #2
  460170:	cmp	x1, #0x2
  460174:	b.gt	4601ec <_obstack_memory_used@@Base+0x15028>
  460178:	sub	x1, x1, #0x1
  46017c:	cmp	x1, #0x1
  460180:	b.hi	460228 <_obstack_memory_used@@Base+0x15064>  // b.pmore
  460184:	cmp	x2, #0x2
  460188:	b.eq	4604cc <_obstack_memory_used@@Base+0x15308>  // b.none
  46018c:	cmp	x2, #0x1
  460190:	b.ne	460388 <_obstack_memory_used@@Base+0x151c4>  // b.any
  460194:	mov	w1, #0x0                   	// #0
  460198:	mov	x4, #0x0                   	// #0
  46019c:	mov	x5, #0x0                   	// #0
  4601a0:	mov	x3, #0x0                   	// #0
  4601a4:	orr	w1, w1, w10, lsl #15
  4601a8:	bfxil	x3, x4, #0, #48
  4601ac:	fmov	d0, x5
  4601b0:	bfi	x3, x1, #48, #16
  4601b4:	fmov	v0.d[1], x3
  4601b8:	cbnz	w0, 4605f8 <_obstack_memory_used@@Base+0x15434>
  4601bc:	ldp	x29, x30, [sp], #80
  4601c0:	ret
  4601c4:	tst	x4, #0x800000000000
  4601c8:	eor	w8, w12, w15
  4601cc:	orr	x1, x1, #0x3
  4601d0:	csinc	w0, w0, wzr, ne  // ne = any
  4601d4:	and	w10, w8, #0xff
  4601d8:	add	x3, x3, #0x8, lsl #12
  4601dc:	cmp	x1, #0xa
  4601e0:	and	x8, x8, #0xff
  4601e4:	mov	x2, #0x3                   	// #3
  4601e8:	b.gt	4607fc <_obstack_memory_used@@Base+0x15638>
  4601ec:	mov	x12, #0x1                   	// #1
  4601f0:	mov	x14, #0x530                 	// #1328
  4601f4:	lsl	x1, x12, x1
  4601f8:	tst	x1, x14
  4601fc:	b.ne	4603fc <_obstack_memory_used@@Base+0x15238>  // b.any
  460200:	mov	x14, #0x240                 	// #576
  460204:	tst	x1, x14
  460208:	b.ne	4603e4 <_obstack_memory_used@@Base+0x15220>  // b.any
  46020c:	mov	x12, #0x88                  	// #136
  460210:	tst	x1, x12
  460214:	b.eq	460228 <_obstack_memory_used@@Base+0x15064>  // b.none
  460218:	mov	x7, x4
  46021c:	mov	x5, x6
  460220:	mov	x16, x2
  460224:	b	460100 <_obstack_memory_used@@Base+0x14f3c>
  460228:	lsr	x13, x5, #32
  46022c:	and	x12, x6, #0xffffffff
  460230:	and	x15, x5, #0xffffffff
  460234:	lsr	x6, x6, #32
  460238:	and	x18, x4, #0xffffffff
  46023c:	lsr	x2, x4, #32
  460240:	mul	x4, x13, x12
  460244:	stp	x21, x22, [sp, #32]
  460248:	lsr	x22, x7, #32
  46024c:	and	x5, x7, #0xffffffff
  460250:	mul	x16, x12, x15
  460254:	madd	x7, x6, x15, x4
  460258:	stp	x19, x20, [sp, #16]
  46025c:	mul	x1, x13, x18
  460260:	mul	x17, x15, x18
  460264:	and	x30, x16, #0xffffffff
  460268:	madd	x15, x2, x15, x1
  46026c:	add	x16, x7, x16, lsr #32
  460270:	mul	x21, x22, x12
  460274:	cmp	x4, x16
  460278:	mul	x20, x22, x18
  46027c:	mov	x14, #0x100000000           	// #4294967296
  460280:	mul	x19, x13, x6
  460284:	add	x15, x15, x17, lsr #32
  460288:	mul	x12, x12, x5
  46028c:	and	x17, x17, #0xffffffff
  460290:	mul	x18, x5, x18
  460294:	add	x4, x19, x14
  460298:	madd	x7, x6, x5, x21
  46029c:	csel	x19, x4, x19, hi  // hi = pmore
  4602a0:	madd	x5, x2, x5, x20
  4602a4:	cmp	x1, x15
  4602a8:	mul	x13, x13, x2
  4602ac:	add	x17, x17, x15, lsl #32
  4602b0:	mul	x6, x6, x22
  4602b4:	add	x7, x7, x12, lsr #32
  4602b8:	add	x5, x5, x18, lsr #32
  4602bc:	add	x4, x13, x14
  4602c0:	mul	x2, x2, x22
  4602c4:	csel	x13, x4, x13, hi  // hi = pmore
  4602c8:	and	x1, x18, #0xffffffff
  4602cc:	cmp	x21, x7
  4602d0:	add	x4, x6, x14
  4602d4:	add	x30, x30, x16, lsl #32
  4602d8:	csel	x6, x4, x6, hi  // hi = pmore
  4602dc:	add	x13, x13, x15, lsr #32
  4602e0:	cmp	x20, x5
  4602e4:	add	x1, x1, x5, lsl #32
  4602e8:	add	x16, x17, x16, lsr #32
  4602ec:	add	x14, x2, x14
  4602f0:	csel	x2, x14, x2, hi  // hi = pmore
  4602f4:	add	x16, x19, x16
  4602f8:	adds	x1, x1, x13
  4602fc:	and	x12, x12, #0xffffffff
  460300:	cset	x13, cs  // cs = hs, nlast
  460304:	cmp	x16, x17
  460308:	cset	x4, cc  // cc = lo, ul, last
  46030c:	add	x12, x12, x7, lsl #32
  460310:	adds	x1, x1, x4
  460314:	lsr	x5, x5, #32
  460318:	cset	x4, cs  // cs = hs, nlast
  46031c:	cmp	x13, #0x0
  460320:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  460324:	add	x7, x6, x7, lsr #32
  460328:	cinc	x5, x5, ne  // ne = any
  46032c:	adds	x6, x16, x12
  460330:	cset	x4, cs  // cs = hs, nlast
  460334:	adds	x1, x1, x7
  460338:	cset	x7, cs  // cs = hs, nlast
  46033c:	adds	x4, x1, x4
  460340:	cset	x1, cs  // cs = hs, nlast
  460344:	cmp	x7, #0x0
  460348:	orr	x30, x30, x6, lsl #13
  46034c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  460350:	cinc	x1, x2, ne  // ne = any
  460354:	cmp	x30, #0x0
  460358:	add	x1, x1, x5
  46035c:	cset	x2, ne  // ne = any
  460360:	orr	x6, x2, x6, lsr #51
  460364:	orr	x6, x6, x4, lsl #13
  460368:	extr	x4, x1, x4, #51
  46036c:	tbz	x1, #39, 460680 <_obstack_memory_used@@Base+0x154bc>
  460370:	ldp	x19, x20, [sp, #16]
  460374:	and	x1, x6, #0x1
  460378:	ldp	x21, x22, [sp, #32]
  46037c:	orr	x6, x1, x6, lsr #1
  460380:	orr	x6, x6, x4, lsl #63
  460384:	lsr	x4, x4, #1
  460388:	mov	x1, #0x3fff                	// #16383
  46038c:	add	x2, x3, x1
  460390:	cmp	x2, #0x0
  460394:	b.le	46052c <_obstack_memory_used@@Base+0x15368>
  460398:	tst	x6, #0x7
  46039c:	b.eq	4603bc <_obstack_memory_used@@Base+0x151f8>  // b.none
  4603a0:	and	x1, x11, #0xc00000
  4603a4:	orr	w0, w0, #0x10
  4603a8:	cmp	x1, #0x400, lsl #12
  4603ac:	b.eq	460774 <_obstack_memory_used@@Base+0x155b0>  // b.none
  4603b0:	cmp	x1, #0x800, lsl #12
  4603b4:	b.eq	46071c <_obstack_memory_used@@Base+0x15558>  // b.none
  4603b8:	cbz	x1, 460704 <_obstack_memory_used@@Base+0x15540>
  4603bc:	tbz	x4, #52, 4603c8 <_obstack_memory_used@@Base+0x15204>
  4603c0:	and	x4, x4, #0xffefffffffffffff
  4603c4:	add	x2, x3, #0x4, lsl #12
  4603c8:	mov	x1, #0x7ffe                	// #32766
  4603cc:	cmp	x2, x1
  4603d0:	b.gt	460654 <_obstack_memory_used@@Base+0x15490>
  4603d4:	and	w1, w2, #0x7fff
  4603d8:	extr	x5, x4, x6, #3
  4603dc:	ubfx	x4, x4, #3, #48
  4603e0:	b	4601a0 <_obstack_memory_used@@Base+0x14fdc>
  4603e4:	mov	w0, w12
  4603e8:	mov	w10, #0x0                   	// #0
  4603ec:	mov	x4, #0xffffffffffff        	// #281474976710655
  4603f0:	mov	x5, #0xffffffffffffffff    	// #-1
  4603f4:	mov	w1, #0x7fff                	// #32767
  4603f8:	b	4601a0 <_obstack_memory_used@@Base+0x14fdc>
  4603fc:	mov	w15, w10
  460400:	mov	x13, x8
  460404:	b	460100 <_obstack_memory_used@@Base+0x14f3c>
  460408:	orr	x5, x7, x1
  46040c:	cbz	x5, 460514 <_obstack_memory_used@@Base+0x15350>
  460410:	cbz	x7, 460630 <_obstack_memory_used@@Base+0x1546c>
  460414:	clz	x0, x7
  460418:	sub	x4, x0, #0xf
  46041c:	add	w5, w4, #0x3
  460420:	mov	w3, #0x3d                  	// #61
  460424:	sub	w3, w3, w4
  460428:	lsl	x4, x7, x5
  46042c:	lsr	x3, x1, x3
  460430:	orr	x7, x3, x4
  460434:	lsl	x5, x1, x5
  460438:	lsr	x8, x2, #63
  46043c:	mov	x3, #0xffffffffffffc011    	// #-16367
  460440:	ubfx	x4, x2, #0, #48
  460444:	sub	x3, x3, x0
  460448:	and	w15, w8, #0xff
  46044c:	mov	x13, x8
  460450:	ubfx	x9, x2, #48, #15
  460454:	mov	x1, #0x0                   	// #0
  460458:	mov	x16, #0x0                   	// #0
  46045c:	mov	w0, #0x0                   	// #0
  460460:	cbnz	w9, 4600ac <_obstack_memory_used@@Base+0x14ee8>
  460464:	nop
  460468:	orr	x2, x4, x6
  46046c:	cbz	x2, 4604dc <_obstack_memory_used@@Base+0x15318>
  460470:	cbz	x4, 46060c <_obstack_memory_used@@Base+0x15448>
  460474:	clz	x9, x4
  460478:	sub	x2, x9, #0xf
  46047c:	add	w10, w2, #0x3
  460480:	mov	w8, #0x3d                  	// #61
  460484:	sub	w8, w8, w2
  460488:	lsl	x2, x4, x10
  46048c:	lsr	x8, x6, x8
  460490:	orr	x4, x8, x2
  460494:	lsl	x6, x6, x10
  460498:	sub	x9, x3, x9
  46049c:	mov	x10, #0xffffffffffffc011    	// #-16367
  4604a0:	mov	x2, #0x0                   	// #0
  4604a4:	add	x9, x9, x10
  4604a8:	b	4600d8 <_obstack_memory_used@@Base+0x14f14>
  4604ac:	orr	x5, x7, x1
  4604b0:	cbnz	x5, 4604f4 <_obstack_memory_used@@Base+0x15330>
  4604b4:	mov	x7, #0x0                   	// #0
  4604b8:	mov	x1, #0x8                   	// #8
  4604bc:	mov	x3, #0x7fff                	// #32767
  4604c0:	mov	x16, #0x2                   	// #2
  4604c4:	mov	w0, #0x0                   	// #0
  4604c8:	b	460094 <_obstack_memory_used@@Base+0x14ed0>
  4604cc:	mov	w1, #0x7fff                	// #32767
  4604d0:	mov	x4, #0x0                   	// #0
  4604d4:	mov	x5, #0x0                   	// #0
  4604d8:	b	4601a0 <_obstack_memory_used@@Base+0x14fdc>
  4604dc:	orr	x1, x1, #0x1
  4604e0:	mov	x9, x3
  4604e4:	mov	x4, #0x0                   	// #0
  4604e8:	mov	x6, #0x0                   	// #0
  4604ec:	mov	x2, #0x1                   	// #1
  4604f0:	b	4600d8 <_obstack_memory_used@@Base+0x14f14>
  4604f4:	lsr	x0, x7, #47
  4604f8:	mov	x5, x1
  4604fc:	eor	x0, x0, #0x1
  460500:	mov	x1, #0xc                   	// #12
  460504:	and	w0, w0, #0x1
  460508:	mov	x3, #0x7fff                	// #32767
  46050c:	mov	x16, #0x3                   	// #3
  460510:	b	460094 <_obstack_memory_used@@Base+0x14ed0>
  460514:	mov	x7, #0x0                   	// #0
  460518:	mov	x1, #0x4                   	// #4
  46051c:	mov	x3, #0x0                   	// #0
  460520:	mov	x16, #0x1                   	// #1
  460524:	mov	w0, #0x0                   	// #0
  460528:	b	460094 <_obstack_memory_used@@Base+0x14ed0>
  46052c:	mov	x1, #0x1                   	// #1
  460530:	sub	x2, x1, x2
  460534:	cmp	x2, #0x74
  460538:	b.gt	4605b0 <_obstack_memory_used@@Base+0x153ec>
  46053c:	cmp	x2, #0x3f
  460540:	b.le	460690 <_obstack_memory_used@@Base+0x154cc>
  460544:	mov	w1, #0x80                  	// #128
  460548:	sub	w1, w1, w2
  46054c:	cmp	x2, #0x40
  460550:	sub	w2, w2, #0x40
  460554:	lsl	x1, x4, x1
  460558:	orr	x1, x6, x1
  46055c:	csel	x6, x1, x6, ne  // ne = any
  460560:	lsr	x2, x4, x2
  460564:	cmp	x6, #0x0
  460568:	cset	x5, ne  // ne = any
  46056c:	orr	x5, x5, x2
  460570:	ands	x2, x5, #0x7
  460574:	b.eq	4606c4 <_obstack_memory_used@@Base+0x15500>  // b.none
  460578:	mov	x2, #0x0                   	// #0
  46057c:	and	x11, x11, #0xc00000
  460580:	orr	w0, w0, #0x10
  460584:	cmp	x11, #0x400, lsl #12
  460588:	b.eq	4607d4 <_obstack_memory_used@@Base+0x15610>  // b.none
  46058c:	cmp	x11, #0x800, lsl #12
  460590:	b.eq	4607e8 <_obstack_memory_used@@Base+0x15624>  // b.none
  460594:	cbz	x11, 46072c <_obstack_memory_used@@Base+0x15568>
  460598:	tbnz	x2, #51, 460744 <_obstack_memory_used@@Base+0x15580>
  46059c:	ubfx	x4, x2, #3, #48
  4605a0:	extr	x5, x2, x5, #3
  4605a4:	orr	w0, w0, #0x8
  4605a8:	mov	w1, #0x0                   	// #0
  4605ac:	b	4605e0 <_obstack_memory_used@@Base+0x1541c>
  4605b0:	orr	x5, x6, x4
  4605b4:	cbz	x5, 4605d4 <_obstack_memory_used@@Base+0x15410>
  4605b8:	and	x11, x11, #0xc00000
  4605bc:	orr	w0, w0, #0x10
  4605c0:	cmp	x11, #0x400, lsl #12
  4605c4:	sub	x5, x1, x8
  4605c8:	b.eq	4605d4 <_obstack_memory_used@@Base+0x15410>  // b.none
  4605cc:	cmp	x11, #0x800, lsl #12
  4605d0:	csel	x5, x8, xzr, eq  // eq = none
  4605d4:	orr	w0, w0, #0x8
  4605d8:	mov	w1, #0x0                   	// #0
  4605dc:	mov	x4, #0x0                   	// #0
  4605e0:	mov	x3, #0x0                   	// #0
  4605e4:	fmov	d0, x5
  4605e8:	bfxil	x3, x4, #0, #48
  4605ec:	bfi	x3, x1, #48, #15
  4605f0:	bfi	x3, x10, #63, #1
  4605f4:	fmov	v0.d[1], x3
  4605f8:	str	q0, [sp, #48]
  4605fc:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  460600:	ldr	q0, [sp, #48]
  460604:	ldp	x29, x30, [sp], #80
  460608:	ret
  46060c:	clz	x9, x6
  460610:	add	x2, x9, #0x31
  460614:	add	x9, x9, #0x40
  460618:	cmp	x2, #0x3c
  46061c:	b.le	46047c <_obstack_memory_used@@Base+0x152b8>
  460620:	sub	w2, w2, #0x3d
  460624:	lsl	x4, x6, x2
  460628:	mov	x6, #0x0                   	// #0
  46062c:	b	460498 <_obstack_memory_used@@Base+0x152d4>
  460630:	clz	x3, x1
  460634:	add	x4, x3, #0x31
  460638:	add	x0, x3, #0x40
  46063c:	cmp	x4, #0x3c
  460640:	b.le	46041c <_obstack_memory_used@@Base+0x15258>
  460644:	sub	w4, w4, #0x3d
  460648:	mov	x5, #0x0                   	// #0
  46064c:	lsl	x7, x1, x4
  460650:	b	460438 <_obstack_memory_used@@Base+0x15274>
  460654:	and	x5, x11, #0xc00000
  460658:	cmp	x5, #0x400, lsl #12
  46065c:	b.eq	460758 <_obstack_memory_used@@Base+0x15594>  // b.none
  460660:	cmp	x5, #0x800, lsl #12
  460664:	b.eq	4606e8 <_obstack_memory_used@@Base+0x15524>  // b.none
  460668:	cbz	x5, 4606dc <_obstack_memory_used@@Base+0x15518>
  46066c:	mov	x4, #0xffffffffffff        	// #281474976710655
  460670:	mov	x5, #0xffffffffffffffff    	// #-1
  460674:	mov	w2, #0x14                  	// #20
  460678:	orr	w0, w0, w2
  46067c:	b	4605e0 <_obstack_memory_used@@Base+0x1541c>
  460680:	mov	x3, x9
  460684:	ldp	x19, x20, [sp, #16]
  460688:	ldp	x21, x22, [sp, #32]
  46068c:	b	460388 <_obstack_memory_used@@Base+0x151c4>
  460690:	mov	w1, #0x40                  	// #64
  460694:	sub	w1, w1, w2
  460698:	lsr	x3, x6, x2
  46069c:	lsl	x6, x6, x1
  4606a0:	cmp	x6, #0x0
  4606a4:	lsl	x5, x4, x1
  4606a8:	cset	x1, ne  // ne = any
  4606ac:	orr	x5, x5, x3
  4606b0:	lsr	x2, x4, x2
  4606b4:	orr	x5, x5, x1
  4606b8:	tst	x5, #0x7
  4606bc:	b.ne	46057c <_obstack_memory_used@@Base+0x153b8>  // b.any
  4606c0:	tbnz	x2, #51, 4607f4 <_obstack_memory_used@@Base+0x15630>
  4606c4:	ubfx	x4, x2, #3, #48
  4606c8:	extr	x5, x2, x5, #3
  4606cc:	mov	w1, #0x0                   	// #0
  4606d0:	tbz	w11, #11, 4601a0 <_obstack_memory_used@@Base+0x14fdc>
  4606d4:	orr	w0, w0, #0x8
  4606d8:	b	4605e0 <_obstack_memory_used@@Base+0x1541c>
  4606dc:	mov	w1, #0x7fff                	// #32767
  4606e0:	mov	x4, #0x0                   	// #0
  4606e4:	b	460674 <_obstack_memory_used@@Base+0x154b0>
  4606e8:	cmp	x8, #0x0
  4606ec:	mov	w2, #0x7fff                	// #32767
  4606f0:	mov	x4, #0xffffffffffff        	// #281474976710655
  4606f4:	csel	w1, w1, w2, eq  // eq = none
  4606f8:	csel	x4, x4, xzr, eq  // eq = none
  4606fc:	csetm	x5, eq  // eq = none
  460700:	b	460674 <_obstack_memory_used@@Base+0x154b0>
  460704:	and	x1, x6, #0xf
  460708:	cmp	x1, #0x4
  46070c:	b.eq	4603bc <_obstack_memory_used@@Base+0x151f8>  // b.none
  460710:	adds	x6, x6, #0x4
  460714:	cinc	x4, x4, cs  // cs = hs, nlast
  460718:	b	4603bc <_obstack_memory_used@@Base+0x151f8>
  46071c:	cbz	x8, 4603bc <_obstack_memory_used@@Base+0x151f8>
  460720:	adds	x6, x6, #0x8
  460724:	cinc	x4, x4, cs  // cs = hs, nlast
  460728:	b	4603bc <_obstack_memory_used@@Base+0x151f8>
  46072c:	and	x1, x5, #0xf
  460730:	cmp	x1, #0x4
  460734:	b.eq	460740 <_obstack_memory_used@@Base+0x1557c>  // b.none
  460738:	adds	x5, x5, #0x4
  46073c:	cinc	x2, x2, cs  // cs = hs, nlast
  460740:	tbz	x2, #51, 46059c <_obstack_memory_used@@Base+0x153d8>
  460744:	orr	w0, w0, #0x8
  460748:	mov	w1, #0x1                   	// #1
  46074c:	mov	x4, #0x0                   	// #0
  460750:	mov	x5, #0x0                   	// #0
  460754:	b	4605e0 <_obstack_memory_used@@Base+0x1541c>
  460758:	cmp	x8, #0x0
  46075c:	mov	w2, #0x7fff                	// #32767
  460760:	mov	x4, #0xffffffffffff        	// #281474976710655
  460764:	csel	w1, w1, w2, ne  // ne = any
  460768:	csel	x4, x4, xzr, ne  // ne = any
  46076c:	csetm	x5, ne  // ne = any
  460770:	b	460674 <_obstack_memory_used@@Base+0x154b0>
  460774:	cbnz	x8, 4603bc <_obstack_memory_used@@Base+0x151f8>
  460778:	b	460720 <_obstack_memory_used@@Base+0x1555c>
  46077c:	mov	x4, #0x2                   	// #2
  460780:	cmp	x1, #0xf
  460784:	b.ne	4607a8 <_obstack_memory_used@@Base+0x155e4>  // b.any
  460788:	tbz	x7, #47, 4607c0 <_obstack_memory_used@@Base+0x155fc>
  46078c:	tbnz	x2, #47, 4607c0 <_obstack_memory_used@@Base+0x155fc>
  460790:	orr	x4, x2, #0x800000000000
  460794:	mov	w10, w15
  460798:	and	x4, x4, #0xffffffffffff
  46079c:	mov	x5, x6
  4607a0:	mov	w1, #0x7fff                	// #32767
  4607a4:	b	4601a0 <_obstack_memory_used@@Base+0x14fdc>
  4607a8:	cmp	x1, #0xb
  4607ac:	b.ne	4600f8 <_obstack_memory_used@@Base+0x14f34>  // b.any
  4607b0:	mov	x7, x2
  4607b4:	mov	x5, x6
  4607b8:	mov	x16, x4
  4607bc:	b	460100 <_obstack_memory_used@@Base+0x14f3c>
  4607c0:	orr	x4, x7, #0x800000000000
  4607c4:	mov	w10, w12
  4607c8:	and	x4, x4, #0xffffffffffff
  4607cc:	mov	w1, #0x7fff                	// #32767
  4607d0:	b	4601a0 <_obstack_memory_used@@Base+0x14fdc>
  4607d4:	cbnz	x8, 460740 <_obstack_memory_used@@Base+0x1557c>
  4607d8:	adds	x5, x5, #0x8
  4607dc:	cinc	x2, x2, cs  // cs = hs, nlast
  4607e0:	tbnz	x2, #51, 460744 <_obstack_memory_used@@Base+0x15580>
  4607e4:	b	46059c <_obstack_memory_used@@Base+0x153d8>
  4607e8:	cbnz	x8, 4607d8 <_obstack_memory_used@@Base+0x15614>
  4607ec:	tbnz	x2, #51, 460744 <_obstack_memory_used@@Base+0x15580>
  4607f0:	b	46059c <_obstack_memory_used@@Base+0x153d8>
  4607f4:	orr	w0, w0, #0x10
  4607f8:	b	460744 <_obstack_memory_used@@Base+0x15580>
  4607fc:	mov	x2, x4
  460800:	mov	x4, #0x3                   	// #3
  460804:	b	460780 <_obstack_memory_used@@Base+0x155bc>
  460808:	mov	w10, w15
  46080c:	mov	x8, x13
  460810:	b	46011c <_obstack_memory_used@@Base+0x14f58>
  460814:	nop
  460818:	cbz	w0, 46085c <_obstack_memory_used@@Base+0x15698>
  46081c:	mov	w0, w0
  460820:	mov	w1, #0x403e                	// #16446
  460824:	clz	x3, x0
  460828:	mov	w2, #0x402f                	// #16431
  46082c:	sub	w1, w1, w3
  460830:	mov	x3, #0x0                   	// #0
  460834:	sub	w2, w2, w1
  460838:	and	w1, w1, #0x7fff
  46083c:	lsl	x0, x0, x2
  460840:	and	x0, x0, #0xffffffffffff
  460844:	mov	x2, #0x0                   	// #0
  460848:	fmov	d0, x2
  46084c:	bfxil	x3, x0, #0, #48
  460850:	bfi	x3, x1, #48, #16
  460854:	fmov	v0.d[1], x3
  460858:	ret
  46085c:	mov	x0, #0x0                   	// #0
  460860:	mov	x3, #0x0                   	// #0
  460864:	bfxil	x3, x0, #0, #48
  460868:	mov	x2, #0x0                   	// #0
  46086c:	fmov	d0, x2
  460870:	mov	w1, #0x0                   	// #0
  460874:	bfi	x3, x1, #48, #16
  460878:	fmov	v0.d[1], x3
  46087c:	ret
  460880:	stp	x29, x30, [sp, #-48]!
  460884:	mov	x29, sp
  460888:	str	x19, [sp, #16]
  46088c:	str	q0, [sp, #32]
  460890:	ldr	x19, [sp, #32]
  460894:	ldr	x1, [sp, #40]
  460898:	mrs	x0, fpcr
  46089c:	ubfx	x3, x1, #48, #15
  4608a0:	mov	x2, x19
  4608a4:	mov	x4, #0x3ffe                	// #16382
  4608a8:	ubfx	x19, x1, #0, #48
  4608ac:	cmp	x3, x4
  4608b0:	b.gt	4608dc <_obstack_memory_used@@Base+0x15718>
  4608b4:	cbnz	x3, 4608c0 <_obstack_memory_used@@Base+0x156fc>
  4608b8:	orr	x19, x2, x19
  4608bc:	cbz	x19, 4608cc <_obstack_memory_used@@Base+0x15708>
  4608c0:	mov	w0, #0x10                  	// #16
  4608c4:	mov	x19, #0x0                   	// #0
  4608c8:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  4608cc:	mov	x0, x19
  4608d0:	ldr	x19, [sp, #16]
  4608d4:	ldp	x29, x30, [sp], #48
  4608d8:	ret
  4608dc:	lsr	x0, x1, #63
  4608e0:	mov	x4, #0x403f                	// #16447
  4608e4:	and	w0, w0, #0xff
  4608e8:	and	x5, x0, #0xff
  4608ec:	sub	x4, x4, x5
  4608f0:	cmp	x4, x3
  4608f4:	b.le	460948 <_obstack_memory_used@@Base+0x15784>
  4608f8:	cbnz	x5, 46095c <_obstack_memory_used@@Base+0x15798>
  4608fc:	mov	x1, x3
  460900:	mov	x0, #0x406f                	// #16495
  460904:	sub	x3, x0, x3
  460908:	orr	x4, x19, #0x1000000000000
  46090c:	cmp	x3, #0x3f
  460910:	b.gt	46096c <_obstack_memory_used@@Base+0x157a8>
  460914:	mov	w3, #0xffffbfd1            	// #-16431
  460918:	add	w3, w1, w3
  46091c:	sub	w1, w0, w1
  460920:	lsl	x0, x2, x3
  460924:	cmp	x0, #0x0
  460928:	lsr	x19, x2, x1
  46092c:	cset	w0, ne  // ne = any
  460930:	lsl	x4, x4, x3
  460934:	orr	x19, x19, x4
  460938:	cbz	w0, 4608cc <_obstack_memory_used@@Base+0x15708>
  46093c:	mov	w0, #0x10                  	// #16
  460940:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  460944:	b	4608cc <_obstack_memory_used@@Base+0x15708>
  460948:	eor	w19, w0, #0x1
  46094c:	mov	w0, #0x1                   	// #1
  460950:	sbfx	x19, x19, #0, #1
  460954:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  460958:	b	4608cc <_obstack_memory_used@@Base+0x15708>
  46095c:	mov	w0, #0x1                   	// #1
  460960:	mov	x19, #0x0                   	// #0
  460964:	bl	460a40 <_obstack_memory_used@@Base+0x1587c>
  460968:	b	4608cc <_obstack_memory_used@@Base+0x15708>
  46096c:	mov	w0, #0xffffc011            	// #-16367
  460970:	add	w5, w1, w0
  460974:	mov	w0, #0x402f                	// #16431
  460978:	cmp	x3, #0x40
  46097c:	sub	w1, w0, w1
  460980:	lsl	x0, x4, x5
  460984:	orr	x0, x2, x0
  460988:	csel	x2, x0, x2, ne  // ne = any
  46098c:	lsr	x19, x4, x1
  460990:	cmp	x2, #0x0
  460994:	cset	w0, ne  // ne = any
  460998:	b	460938 <_obstack_memory_used@@Base+0x15774>
  46099c:	nop
  4609a0:	cbz	x0, 4609f4 <_obstack_memory_used@@Base+0x15830>
  4609a4:	clz	x2, x0
  4609a8:	mov	w1, #0x403e                	// #16446
  4609ac:	sub	w1, w1, w2
  4609b0:	mov	x2, #0x406f                	// #16495
  4609b4:	and	w4, w1, #0x7fff
  4609b8:	sub	x3, x2, w1, sxtw
  4609bc:	cmp	x3, #0x3f
  4609c0:	b.gt	460a14 <_obstack_memory_used@@Base+0x15850>
  4609c4:	sub	w2, w2, w1
  4609c8:	mov	w3, #0xffffbfd1            	// #-16431
  4609cc:	add	w1, w1, w3
  4609d0:	mov	x3, #0x0                   	// #0
  4609d4:	lsr	x1, x0, x1
  4609d8:	and	x1, x1, #0xffffffffffff
  4609dc:	lsl	x0, x0, x2
  4609e0:	fmov	d0, x0
  4609e4:	bfxil	x3, x1, #0, #48
  4609e8:	bfi	x3, x4, #48, #16
  4609ec:	fmov	v0.d[1], x3
  4609f0:	ret
  4609f4:	mov	x1, #0x0                   	// #0
  4609f8:	mov	x3, #0x0                   	// #0
  4609fc:	bfxil	x3, x1, #0, #48
  460a00:	fmov	d0, x0
  460a04:	mov	w4, #0x0                   	// #0
  460a08:	bfi	x3, x4, #48, #16
  460a0c:	fmov	v0.d[1], x3
  460a10:	ret
  460a14:	mov	w2, #0x402f                	// #16431
  460a18:	sub	w1, w2, w1
  460a1c:	mov	x3, #0x0                   	// #0
  460a20:	lsl	x1, x0, x1
  460a24:	and	x1, x1, #0xffffffffffff
  460a28:	mov	x0, #0x0                   	// #0
  460a2c:	fmov	d0, x0
  460a30:	bfxil	x3, x1, #0, #48
  460a34:	bfi	x3, x4, #48, #16
  460a38:	fmov	v0.d[1], x3
  460a3c:	ret
  460a40:	tbz	w0, #0, 460a50 <_obstack_memory_used@@Base+0x1588c>
  460a44:	movi	v1.2s, #0x0
  460a48:	fdiv	s0, s1, s1
  460a4c:	mrs	x1, fpsr
  460a50:	tbz	w0, #1, 460a64 <_obstack_memory_used@@Base+0x158a0>
  460a54:	fmov	s1, #1.000000000000000000e+00
  460a58:	movi	v2.2s, #0x0
  460a5c:	fdiv	s0, s1, s2
  460a60:	mrs	x1, fpsr
  460a64:	tbz	w0, #2, 460a84 <_obstack_memory_used@@Base+0x158c0>
  460a68:	mov	w2, #0xc5ae                	// #50606
  460a6c:	mov	w1, #0x7f7fffff            	// #2139095039
  460a70:	movk	w2, #0x749d, lsl #16
  460a74:	fmov	s1, w1
  460a78:	fmov	s2, w2
  460a7c:	fadd	s0, s1, s2
  460a80:	mrs	x1, fpsr
  460a84:	tbz	w0, #3, 460a94 <_obstack_memory_used@@Base+0x158d0>
  460a88:	movi	v1.2s, #0x80, lsl #16
  460a8c:	fmul	s0, s1, s1
  460a90:	mrs	x1, fpsr
  460a94:	tbz	w0, #4, 460aac <_obstack_memory_used@@Base+0x158e8>
  460a98:	mov	w0, #0x7f7fffff            	// #2139095039
  460a9c:	fmov	s2, #1.000000000000000000e+00
  460aa0:	fmov	s1, w0
  460aa4:	fsub	s0, s1, s2
  460aa8:	mrs	x0, fpsr
  460aac:	ret
  460ab0:	stp	x29, x30, [sp, #-64]!
  460ab4:	mov	x29, sp
  460ab8:	stp	x19, x20, [sp, #16]
  460abc:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x30e3c>
  460ac0:	add	x20, x20, #0xde0
  460ac4:	stp	x21, x22, [sp, #32]
  460ac8:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x30e3c>
  460acc:	add	x21, x21, #0xdd8
  460ad0:	sub	x20, x20, x21
  460ad4:	mov	w22, w0
  460ad8:	stp	x23, x24, [sp, #48]
  460adc:	mov	x23, x1
  460ae0:	mov	x24, x2
  460ae4:	bl	403e30 <mbrtowc@plt-0x40>
  460ae8:	cmp	xzr, x20, asr #3
  460aec:	b.eq	460b18 <_obstack_memory_used@@Base+0x15954>  // b.none
  460af0:	asr	x20, x20, #3
  460af4:	mov	x19, #0x0                   	// #0
  460af8:	ldr	x3, [x21, x19, lsl #3]
  460afc:	mov	x2, x24
  460b00:	add	x19, x19, #0x1
  460b04:	mov	x1, x23
  460b08:	mov	w0, w22
  460b0c:	blr	x3
  460b10:	cmp	x20, x19
  460b14:	b.ne	460af8 <_obstack_memory_used@@Base+0x15934>  // b.any
  460b18:	ldp	x19, x20, [sp, #16]
  460b1c:	ldp	x21, x22, [sp, #32]
  460b20:	ldp	x23, x24, [sp, #48]
  460b24:	ldp	x29, x30, [sp], #64
  460b28:	ret
  460b2c:	nop
  460b30:	ret

Disassembly of section .fini:

0000000000460b34 <.fini>:
  460b34:	stp	x29, x30, [sp, #-16]!
  460b38:	mov	x29, sp
  460b3c:	ldp	x29, x30, [sp], #16
  460b40:	ret
