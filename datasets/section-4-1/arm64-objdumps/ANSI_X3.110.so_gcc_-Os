
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ANSI_X3.110.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 14000 <gconv@@Base+0x13718>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 15000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf8>:
     760:	adrp	x0, 14000 <gconv@@Base+0x13718>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 15000 <gconv@@Base+0x14718>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 15000 <gconv@@Base+0x14718>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 14000 <gconv@@Base+0x13718>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 15000 <gconv@@Base+0x14718>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 15000 <gconv@@Base+0x14718>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 14000 <gconv@@Base+0x13718>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 15000 <gconv@@Base+0x14718>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 14000 <gconv@@Base+0x13718>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 15000 <gconv@@Base+0x14718>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x2, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x718>
     840:	add	x0, x0, #0xff0
     844:	tst	w1, #0xff
     848:	ldr	w0, [x0, x2, lsl #2]
     84c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     850:	csinv	w0, w0, wzr, ne  // ne = any
     854:	ret

0000000000000858 <gconv_init@@Base>:
     858:	stp	x29, x30, [sp, #-32]!
     85c:	mov	x29, sp
     860:	stp	x19, x20, [sp, #16]
     864:	mov	x19, x0
     868:	adrp	x20, 1000 <gconv@@Base+0x718>
     86c:	ldr	x0, [x0, #24]
     870:	add	x20, x20, #0xe20
     874:	mov	x1, x20
     878:	bl	730 <strcmp@plt>
     87c:	cbnz	w0, 8b4 <gconv_init@@Base+0x5c>
     880:	mov	x2, #0x1                   	// #1
     884:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     888:	movk	x2, #0x2, lsl #32
     88c:	add	x0, x0, #0x838
     890:	mov	x1, #0x400000004           	// #17179869188
     894:	str	x0, [x19, #48]
     898:	stp	x2, x1, [x19, #72]
     89c:	str	xzr, [x19, #96]
     8a0:	mov	w0, #0x0                   	// #0
     8a4:	str	wzr, [x19, #88]
     8a8:	ldp	x19, x20, [sp, #16]
     8ac:	ldp	x29, x30, [sp], #32
     8b0:	ret
     8b4:	ldr	x0, [x19, #32]
     8b8:	mov	x1, x20
     8bc:	bl	730 <strcmp@plt>
     8c0:	cbnz	w0, 8e0 <gconv_init@@Base+0x88>
     8c4:	mov	x1, #0x1                   	// #1
     8c8:	mov	x0, #0xffffffffffffffff    	// #-1
     8cc:	mov	x2, #0x400000004           	// #17179869188
     8d0:	movk	x1, #0x2, lsl #32
     8d4:	stp	x2, x1, [x19, #72]
     8d8:	str	x0, [x19, #96]
     8dc:	b	8a0 <gconv_init@@Base+0x48>
     8e0:	mov	w0, #0x1                   	// #1
     8e4:	b	8a8 <gconv_init@@Base+0x50>

00000000000008e8 <gconv@@Base>:
     8e8:	stp	x29, x30, [sp, #-256]!
     8ec:	mov	x15, x0
     8f0:	mov	x12, x2
     8f4:	mov	x29, sp
     8f8:	stp	x19, x20, [sp, #16]
     8fc:	mov	x20, x1
     900:	adrp	x1, 14000 <gconv@@Base+0x13718>
     904:	stp	x21, x22, [sp, #32]
     908:	mov	x19, x3
     90c:	ldr	w18, [x20, #16]
     910:	ldr	x1, [x1, #4056]
     914:	stp	x23, x24, [sp, #48]
     918:	mov	x14, x4
     91c:	ldr	x0, [x1]
     920:	str	x0, [sp, #248]
     924:	mov	x0, #0x0                   	// #0
     928:	add	x1, x15, #0x68
     92c:	add	x0, x20, #0x30
     930:	stp	x25, x26, [sp, #64]
     934:	mov	x23, x5
     938:	stp	x1, x0, [sp, #144]
     93c:	mov	w24, w7
     940:	mov	x22, #0x0                   	// #0
     944:	tbnz	w18, #0, 964 <gconv@@Base+0x7c>
     948:	ldr	x0, [x15, #104]
     94c:	ldr	x22, [x15, #144]
     950:	cbz	x0, 964 <gconv@@Base+0x7c>
     954:	adrp	x0, 14000 <gconv@@Base+0x13718>
     958:	ldr	x0, [x0, #4040]
     95c:	ldr	x0, [x0]
     960:	eor	x22, x22, x0
     964:	cbnz	w6, 1148 <gconv@@Base+0x860>
     968:	cmp	x14, #0x0
     96c:	add	x25, sp, #0xc8
     970:	csel	x0, x20, x14, eq  // eq = none
     974:	cmp	x23, #0x0
     978:	csel	x1, x25, xzr, ne  // ne = any
     97c:	stp	x27, x28, [sp, #80]
     980:	ldr	x26, [x0]
     984:	str	x1, [sp, #160]
     988:	str	xzr, [sp, #200]
     98c:	ldr	x28, [x12]
     990:	ldr	x21, [x20, #8]
     994:	cbnz	w24, c70 <gconv@@Base+0x388>
     998:	mov	x25, x20
     99c:	mov	x20, x21
     9a0:	mov	x21, x28
     9a4:	mov	x28, x26
     9a8:	mov	x26, x15
     9ac:	add	x0, sp, #0xe0
     9b0:	str	x0, [sp, #168]
     9b4:	adrp	x13, 1000 <gconv@@Base+0x718>
     9b8:	str	x14, [sp, #136]
     9bc:	add	x13, x13, #0xff0
     9c0:	ldr	x0, [x26, #96]
     9c4:	add	x10, x13, #0x400
     9c8:	cbz	x0, afc <gconv@@Base+0x214>
     9cc:	stp	x21, x28, [sp, #216]
     9d0:	mov	x27, x28
     9d4:	cmp	x19, x21
     9d8:	b.eq	11fc <gconv@@Base+0x914>  // b.none
     9dc:	mov	x1, x21
     9e0:	add	x3, sp, #0xd8
     9e4:	mov	w14, #0x4                   	// #4
     9e8:	add	x4, x1, #0x4
     9ec:	cmp	x19, x4
     9f0:	b.cc	bd0 <gconv@@Base+0x2e8>  // b.lo, b.ul, b.last
     9f4:	cmp	x20, x27
     9f8:	b.ls	bc4 <gconv@@Base+0x2dc>  // b.plast
     9fc:	ldr	w2, [x1]
     a00:	cmp	w2, #0x17e
     a04:	b.hi	bec <gconv@@Base+0x304>  // b.pmore
     a08:	ubfiz	x1, x2, #1, #32
     a0c:	cmp	w2, #0x0
     a10:	add	x4, x10, x1
     a14:	ldrb	w2, [x10, x1]
     a18:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     a1c:	b.eq	c50 <gconv@@Base+0x368>  // b.none
     a20:	add	x1, x27, #0x1
     a24:	str	x1, [sp, #224]
     a28:	strb	w2, [x27]
     a2c:	ldrb	w1, [x4, #1]
     a30:	cbz	w1, a4c <gconv@@Base+0x164>
     a34:	ldr	x27, [sp, #224]
     a38:	cmp	x20, x27
     a3c:	b.ls	bc0 <gconv@@Base+0x2d8>  // b.plast
     a40:	add	x0, x27, #0x1
     a44:	str	x0, [sp, #224]
     a48:	strb	w1, [x27]
     a4c:	ldp	x1, x27, [sp, #216]
     a50:	add	x1, x1, #0x4
     a54:	str	x1, [sp, #216]
     a58:	cmp	x1, x19
     a5c:	b.ne	9e8 <gconv@@Base+0x100>  // b.any
     a60:	ldr	x0, [sp, #136]
     a64:	str	x1, [x12]
     a68:	cbnz	x0, b80 <gconv@@Base+0x298>
     a6c:	ldp	w1, w0, [x25, #16]
     a70:	add	w0, w0, #0x1
     a74:	str	w0, [x25, #20]
     a78:	tbnz	w1, #0, ec0 <gconv@@Base+0x5d8>
     a7c:	cmp	x28, x27
     a80:	b.cs	ef0 <gconv@@Base+0x608>  // b.hs, b.nlast
     a84:	ldr	x1, [x25]
     a88:	mov	x0, x22
     a8c:	stp	x12, x13, [sp, #104]
     a90:	str	x10, [sp, #120]
     a94:	str	w14, [sp, #128]
     a98:	str	x1, [sp, #208]
     a9c:	bl	740 <_dl_mcount_wrapper_check@plt>
     aa0:	ldp	x0, x1, [sp, #144]
     aa4:	mov	w7, w24
     aa8:	mov	x5, x23
     aac:	mov	x3, x27
     ab0:	add	x2, sp, #0xd0
     ab4:	mov	w6, #0x0                   	// #0
     ab8:	mov	x4, #0x0                   	// #0
     abc:	blr	x22
     ac0:	mov	w7, w0
     ac4:	ldr	w14, [sp, #128]
     ac8:	cmp	w0, #0x4
     acc:	ldp	x12, x13, [sp, #104]
     ad0:	ldr	x10, [sp, #120]
     ad4:	b.eq	bdc <gconv@@Base+0x2f4>  // b.none
     ad8:	ldr	x14, [sp, #208]
     adc:	cmp	x14, x27
     ae0:	b.ne	da0 <gconv@@Base+0x4b8>  // b.any
     ae4:	cbnz	w7, 11f0 <gconv@@Base+0x908>
     ae8:	ldr	x0, [x26, #96]
     aec:	ldr	w18, [x25, #16]
     af0:	ldr	x21, [x12]
     af4:	ldr	x28, [x25]
     af8:	cbnz	x0, 9cc <gconv@@Base+0xe4>
     afc:	cmp	x19, x21
     b00:	b.eq	13bc <gconv@@Base+0xad4>  // b.none
     b04:	add	x2, x28, #0x4
     b08:	cmp	x20, x2
     b0c:	b.cc	1134 <gconv@@Base+0x84c>  // b.lo, b.ul, b.last
     b10:	adrp	x5, 2000 <gconv@@Base+0x1718>
     b14:	and	w18, w18, #0x2
     b18:	mov	x0, x21
     b1c:	add	x5, x5, #0x710
     b20:	mov	x27, x28
     b24:	mov	w14, #0x4                   	// #4
     b28:	ldrb	w1, [x0]
     b2c:	sub	w3, w1, #0xc1
     b30:	cmp	w3, #0xe
     b34:	b.ls	e68 <gconv@@Base+0x580>  // b.plast
     b38:	mov	w3, w1
     b3c:	cmp	w1, #0x0
     b40:	mov	w4, #0x1                   	// #1
     b44:	ldr	w3, [x13, x3, lsl #2]
     b48:	ccmp	w3, #0x0, #0x0, ne  // ne = any
     b4c:	b.eq	ea8 <gconv@@Base+0x5c0>  // b.none
     b50:	add	x0, x0, w4, sxtw
     b54:	str	w3, [x27]
     b58:	mov	x27, x2
     b5c:	cmp	x19, x0
     b60:	b.eq	b74 <gconv@@Base+0x28c>  // b.none
     b64:	add	x2, x27, #0x4
     b68:	cmp	x20, x2
     b6c:	b.cs	b28 <gconv@@Base+0x240>  // b.hs, b.nlast
     b70:	mov	w14, #0x5                   	// #5
     b74:	str	x0, [x12]
     b78:	ldr	x0, [sp, #136]
     b7c:	cbz	x0, a6c <gconv@@Base+0x184>
     b80:	str	x27, [x0]
     b84:	mov	w25, w14
     b88:	ldp	x27, x28, [sp, #80]
     b8c:	adrp	x0, 14000 <gconv@@Base+0x13718>
     b90:	ldr	x26, [x0, #4056]
     b94:	ldr	x1, [sp, #248]
     b98:	ldr	x0, [x26]
     b9c:	eor	x0, x1, x0
     ba0:	cbnz	x0, 1b58 <gconv@@Base+0x1270>
     ba4:	mov	w0, w25
     ba8:	ldp	x19, x20, [sp, #16]
     bac:	ldp	x21, x22, [sp, #32]
     bb0:	ldp	x23, x24, [sp, #48]
     bb4:	ldp	x25, x26, [sp, #64]
     bb8:	ldp	x29, x30, [sp], #256
     bbc:	ret
     bc0:	sub	x27, x27, #0x1
     bc4:	mov	w14, #0x5                   	// #5
     bc8:	ldr	x1, [sp, #216]
     bcc:	b	a60 <gconv@@Base+0x178>
     bd0:	mov	w14, #0x7                   	// #7
     bd4:	ldr	x1, [sp, #216]
     bd8:	b	a60 <gconv@@Base+0x178>
     bdc:	mov	w7, w14
     be0:	cmp	w14, #0x5
     be4:	b.ne	ae4 <gconv@@Base+0x1fc>  // b.any
     be8:	b	ae8 <gconv@@Base+0x200>
     bec:	cmp	w2, #0x2c7
     bf0:	b.eq	ef8 <gconv@@Base+0x610>  // b.none
     bf4:	cmp	w2, #0x2dc
     bf8:	sub	w0, w2, #0x2d8
     bfc:	ccmp	w0, #0x5, #0x2, ne  // ne = any
     c00:	b.hi	c20 <gconv@@Base+0x338>  // b.pmore
     c04:	add	x1, x13, #0x700
     c08:	mov	w2, #0x20                  	// #32
     c0c:	strb	w2, [sp, #241]
     c10:	add	x4, sp, #0xf0
     c14:	ldrb	w2, [x1, w0, uxtw]
     c18:	strb	w2, [sp, #240]
     c1c:	b	a20 <gconv@@Base+0x138>
     c20:	mov	w5, #0xffffdfec            	// #-8212
     c24:	add	w0, w2, w5
     c28:	cmp	w0, #0x9
     c2c:	b.ls	f28 <gconv@@Base+0x640>  // b.plast
     c30:	mov	w1, #0xffffdede            	// #-8482
     c34:	add	w0, w2, w1
     c38:	cmp	w0, #0x4
     c3c:	b.hi	1194 <gconv@@Base+0x8ac>  // b.pmore
     c40:	add	x1, x13, #0x718
     c44:	ldrb	w2, [x1, w0, uxtw]
     c48:	strb	w2, [sp, #240]
     c4c:	cbnz	w2, f38 <gconv@@Base+0x650>
     c50:	ldr	x0, [sp, #160]
     c54:	cbz	x0, 1314 <gconv@@Base+0xa2c>
     c58:	ldr	w0, [x25, #16]
     c5c:	tbnz	w0, #3, 10e0 <gconv@@Base+0x7f8>
     c60:	ldr	x1, [sp, #216]
     c64:	tbnz	w18, #1, f68 <gconv@@Base+0x680>
     c68:	mov	w14, #0x6                   	// #6
     c6c:	b	a60 <gconv@@Base+0x178>
     c70:	ldr	x13, [x20, #32]
     c74:	ldr	w2, [x13]
     c78:	ands	w3, w2, #0x7
     c7c:	b.eq	998 <gconv@@Base+0xb0>  // b.none
     c80:	cbnz	x14, 1b38 <gconv@@Base+0x1250>
     c84:	ldr	x0, [x15, #96]
     c88:	cbz	x0, f88 <gconv@@Base+0x6a0>
     c8c:	stp	x28, x26, [sp, #216]
     c90:	cmp	w3, #0x4
     c94:	b.hi	1ae8 <gconv@@Base+0x1200>  // b.pmore
     c98:	mov	w7, w3
     c9c:	cbz	w3, 13b0 <gconv@@Base+0xac8>
     ca0:	add	x10, sp, #0xf0
     ca4:	add	x4, x13, #0x3
     ca8:	mov	x0, #0x1                   	// #1
     cac:	add	x1, x10, x0
     cb0:	ldrb	w3, [x4, x0]
     cb4:	cmp	x7, x0
     cb8:	add	x0, x0, #0x1
     cbc:	sturb	w3, [x1, #-1]
     cc0:	b.ne	cac <gconv@@Base+0x3c4>  // b.any
     cc4:	mov	x0, #0x4                   	// #4
     cc8:	sub	x0, x0, x7
     ccc:	add	x0, x28, x0
     cd0:	cmp	x19, x0
     cd4:	b.cc	1510 <gconv@@Base+0xc28>  // b.lo, b.ul, b.last
     cd8:	add	x0, x28, #0x1
     cdc:	add	x10, sp, #0xf0
     ce0:	cmp	x26, x21
     ce4:	b.cs	1334 <gconv@@Base+0xa4c>  // b.hs, b.nlast
     ce8:	add	x7, x7, #0x1
     cec:	str	x0, [sp, #216]
     cf0:	add	x27, x10, x7
     cf4:	cmp	x7, #0x3
     cf8:	ldurb	w1, [x0, #-1]
     cfc:	ccmp	x19, x0, #0x0, ls  // ls = plast
     d00:	add	x0, x0, #0x1
     d04:	sturb	w1, [x27, #-1]
     d08:	b.hi	ce8 <gconv@@Base+0x400>  // b.pmore
     d0c:	ldr	w0, [sp, #240]
     d10:	str	x10, [sp, #216]
     d14:	cmp	w0, #0x17e
     d18:	b.hi	158c <gconv@@Base+0xca4>  // b.pmore
     d1c:	adrp	x1, 1000 <gconv@@Base+0x718>
     d20:	add	x1, x1, #0xff0
     d24:	ubfiz	x2, x0, #1, #32
     d28:	add	x1, x1, #0x400
     d2c:	cmp	w0, #0x0
     d30:	add	x3, x1, x2
     d34:	ldrb	w0, [x1, x2]
     d38:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     d3c:	b.eq	1664 <gconv@@Base+0xd7c>  // b.none
     d40:	add	x1, x26, #0x1
     d44:	str	x1, [sp, #224]
     d48:	strb	w0, [x26]
     d4c:	ldrb	w0, [x3, #1]
     d50:	cbnz	w0, 1254 <gconv@@Base+0x96c>
     d54:	ldr	x0, [sp, #216]
     d58:	add	x0, x0, #0x4
     d5c:	str	x0, [sp, #216]
     d60:	cmp	x0, x10
     d64:	b.eq	1424 <gconv@@Base+0xb3c>  // b.none
     d68:	ldr	w1, [x13]
     d6c:	sub	x0, x0, x10
     d70:	and	x2, x1, #0x7
     d74:	cmp	x0, x2
     d78:	b.le	1b08 <gconv@@Base+0x1220>
     d7c:	ldr	x8, [x12]
     d80:	sub	x0, x0, x2
     d84:	ldr	w18, [x20, #16]
     d88:	and	w1, w1, #0xfffffff8
     d8c:	add	x28, x8, x0
     d90:	str	x28, [x12]
     d94:	ldr	x26, [sp, #224]
     d98:	str	w1, [x13]
     d9c:	b	998 <gconv@@Base+0xb0>
     da0:	ldr	w27, [x25, #16]
     da4:	str	x21, [x12]
     da8:	ldr	x0, [x26, #96]
     dac:	cbz	x0, 103c <gconv@@Base+0x754>
     db0:	stp	x21, x28, [sp, #216]
     db4:	cmp	x19, x21
     db8:	b.eq	16e8 <gconv@@Base+0xe00>  // b.none
     dbc:	mov	w8, w24
     dc0:	mov	x0, x28
     dc4:	mov	x24, x23
     dc8:	add	x3, sp, #0xd8
     dcc:	mov	x23, x20
     dd0:	mov	w20, w27
     dd4:	mov	x27, x14
     dd8:	mov	x4, #0x4                   	// #4
     ddc:	add	x1, x21, #0x4
     de0:	cmp	x19, x1
     de4:	b.cc	1210 <gconv@@Base+0x928>  // b.lo, b.ul, b.last
     de8:	cmp	x27, x0
     dec:	b.ls	1340 <gconv@@Base+0xa58>  // b.plast
     df0:	ldr	w2, [x21]
     df4:	cmp	w2, #0x17e
     df8:	b.hi	137c <gconv@@Base+0xa94>  // b.pmore
     dfc:	ubfiz	x1, x2, #1, #32
     e00:	cmp	w2, #0x0
     e04:	add	x5, x10, x1
     e08:	ldrb	w2, [x10, x1]
     e0c:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     e10:	b.eq	13f0 <gconv@@Base+0xb08>  // b.none
     e14:	add	x1, x0, #0x1
     e18:	str	x1, [sp, #224]
     e1c:	strb	w2, [x0]
     e20:	ldrb	w0, [x5, #1]
     e24:	cbz	w0, e40 <gconv@@Base+0x558>
     e28:	ldr	x1, [sp, #224]
     e2c:	cmp	x27, x1
     e30:	b.ls	1430 <gconv@@Base+0xb48>  // b.plast
     e34:	add	x2, x1, #0x1
     e38:	str	x2, [sp, #224]
     e3c:	strb	w0, [x1]
     e40:	ldp	x21, x0, [sp, #216]
     e44:	add	x21, x21, #0x4
     e48:	str	x21, [sp, #216]
     e4c:	cmp	x19, x21
     e50:	b.ne	ddc <gconv@@Base+0x4f4>  // b.any
     e54:	mov	x20, x23
     e58:	mov	x23, x24
     e5c:	mov	w24, w8
     e60:	ldr	x14, [sp, #208]
     e64:	b	10b4 <gconv@@Base+0x7cc>
     e68:	add	x4, x0, #0x1
     e6c:	cmp	x19, x4
     e70:	b.ls	15cc <gconv@@Base+0xce4>  // b.plast
     e74:	ldrb	w6, [x0, #1]
     e78:	sub	w6, w6, #0x20
     e7c:	cmp	w6, #0x5f
     e80:	b.hi	11cc <gconv@@Base+0x8e4>  // b.pmore
     e84:	ubfiz	x7, x3, #1, #32
     e88:	cmp	w1, #0x0
     e8c:	add	x3, x7, w3, uxtw
     e90:	mov	w4, #0x2                   	// #2
     e94:	lsl	x3, x3, #5
     e98:	add	x3, x3, w6, uxtw
     e9c:	ldr	w3, [x5, x3, lsl #2]
     ea0:	ccmp	w3, #0x0, #0x0, ne  // ne = any
     ea4:	b.ne	b50 <gconv@@Base+0x268>  // b.any
     ea8:	ldr	x2, [sp, #160]
     eac:	cbz	x2, eb4 <gconv@@Base+0x5cc>
     eb0:	cbnz	w18, f10 <gconv@@Base+0x628>
     eb4:	mov	w14, #0x6                   	// #6
     eb8:	str	x0, [x12]
     ebc:	b	b78 <gconv@@Base+0x290>
     ec0:	mov	x20, x25
     ec4:	mov	w25, w14
     ec8:	ldr	x0, [x23]
     ecc:	ldr	x1, [sp, #200]
     ed0:	str	x27, [x20]
     ed4:	add	x0, x0, x1
     ed8:	str	x0, [x23]
     edc:	cmp	w24, #0x0
     ee0:	ccmp	w25, #0x7, #0x0, ne  // ne = any
     ee4:	b.eq	12bc <gconv@@Base+0x9d4>  // b.none
     ee8:	ldp	x27, x28, [sp, #80]
     eec:	b	b8c <gconv@@Base+0x2a4>
     ef0:	mov	w7, w14
     ef4:	b	ae4 <gconv@@Base+0x1fc>
     ef8:	add	x0, x27, #0x1
     efc:	str	x0, [sp, #224]
     f00:	mov	w1, #0x20                  	// #32
     f04:	mov	w0, #0xffffffcf            	// #-49
     f08:	strb	w0, [x27]
     f0c:	b	a34 <gconv@@Base+0x14c>
     f10:	ldr	x1, [x2]
     f14:	add	x0, x0, w4, sxtw
     f18:	mov	w14, #0x6                   	// #6
     f1c:	add	x1, x1, #0x1
     f20:	str	x1, [x2]
     f24:	b	b5c <gconv@@Base+0x274>
     f28:	add	x1, x13, #0x708
     f2c:	ldrb	w2, [x1, w0, uxtw]
     f30:	strb	w2, [sp, #240]
     f34:	cbz	w2, c50 <gconv@@Base+0x368>
     f38:	add	x4, sp, #0xf0
     f3c:	strb	wzr, [sp, #241]
     f40:	b	a20 <gconv@@Base+0x138>
     f44:	mov	w0, #0x1c00                	// #7168
     f48:	cmp	w0, w2, lsr #7
     f4c:	b.eq	1c34 <gconv@@Base+0x134c>  // b.none
     f50:	ldr	x0, [sp, #160]
     f54:	cbz	x0, 1314 <gconv@@Base+0xa2c>
     f58:	ldr	w0, [x25, #16]
     f5c:	tbnz	w0, #3, 1be0 <gconv@@Base+0x12f8>
     f60:	ldp	x1, x27, [sp, #216]
     f64:	tbz	w18, #1, c68 <gconv@@Base+0x380>
     f68:	ldr	x2, [sp, #160]
     f6c:	add	x1, x1, #0x4
     f70:	mov	w14, #0x6                   	// #6
     f74:	str	x1, [sp, #216]
     f78:	ldr	x0, [x2]
     f7c:	add	x0, x0, #0x1
     f80:	str	x0, [x2]
     f84:	b	a58 <gconv@@Base+0x170>
     f88:	cmp	w3, #0x4
     f8c:	b.hi	1b28 <gconv@@Base+0x1240>  // b.pmore
     f90:	add	x5, x26, #0x4
     f94:	cbz	w3, 1288 <gconv@@Base+0x9a0>
     f98:	ldrb	w0, [x13, #4]
     f9c:	tst	w2, #0x6
     fa0:	strb	w0, [sp, #240]
     fa4:	mov	x0, #0x1                   	// #1
     fa8:	b.eq	fb8 <gconv@@Base+0x6d0>  // b.none
     fac:	ldrb	w1, [x13, #5]
     fb0:	mov	x0, #0x2                   	// #2
     fb4:	strb	w1, [sp, #241]
     fb8:	cmp	x21, x5
     fbc:	b.cc	1334 <gconv@@Base+0xa4c>  // b.lo, b.ul, b.last
     fc0:	add	x10, sp, #0xf0
     fc4:	ldrb	w1, [x28]
     fc8:	add	x4, x0, #0x1
     fcc:	strb	w1, [x10, x0]
     fd0:	ldrb	w1, [sp, #240]
     fd4:	sub	w6, w1, #0xc1
     fd8:	cmp	w6, #0xe
     fdc:	b.ls	17e8 <gconv@@Base+0xf00>  // b.plast
     fe0:	mov	w3, w1
     fe4:	adrp	x2, 1000 <gconv@@Base+0x718>
     fe8:	add	x2, x2, #0xff0
     fec:	mov	w0, #0x1                   	// #1
     ff0:	ldr	w2, [x2, x3, lsl #2]
     ff4:	cmp	w1, #0x0
     ff8:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     ffc:	b.eq	177c <gconv@@Base+0xe94>  // b.none
    1000:	add	x0, x10, w0, sxtw
    1004:	str	w2, [x26]
    1008:	mov	x26, x5
    100c:	ldr	w1, [x13]
    1010:	sub	x10, x0, x10
    1014:	and	x0, x1, #0x7
    1018:	cmp	x10, x0
    101c:	b.le	1b60 <gconv@@Base+0x1278>
    1020:	sub	x10, x10, x0
    1024:	ldr	w18, [x20, #16]
    1028:	add	x28, x28, x10
    102c:	str	x28, [x12]
    1030:	and	w1, w1, #0xfffffff8
    1034:	str	w1, [x13]
    1038:	b	998 <gconv@@Base+0xb0>
    103c:	cmp	x19, x21
    1040:	b.eq	16e8 <gconv@@Base+0xe00>  // b.none
    1044:	add	x2, x28, #0x4
    1048:	adrp	x1, 2000 <gconv@@Base+0x1718>
    104c:	and	w27, w27, #0x2
    1050:	cmp	x14, x2
    1054:	mov	x0, x28
    1058:	add	x6, x1, #0x710
    105c:	mov	w5, #0x4                   	// #4
    1060:	b.cc	16d4 <gconv@@Base+0xdec>  // b.lo, b.ul, b.last
    1064:	ldr	x9, [sp, #160]
    1068:	ldrb	w1, [x21]
    106c:	sub	w3, w1, #0xc1
    1070:	cmp	w3, #0xe
    1074:	b.ls	1474 <gconv@@Base+0xb8c>  // b.plast
    1078:	mov	w3, w1
    107c:	mov	w4, #0x1                   	// #1
    1080:	ldr	w3, [x13, x3, lsl #2]
    1084:	cmp	w1, #0x0
    1088:	ccmp	w3, #0x0, #0x0, ne  // ne = any
    108c:	b.eq	1454 <gconv@@Base+0xb6c>  // b.none
    1090:	add	x21, x21, w4, sxtw
    1094:	str	w3, [x0]
    1098:	mov	x0, x2
    109c:	cmp	x19, x21
    10a0:	b.eq	16cc <gconv@@Base+0xde4>  // b.none
    10a4:	add	x2, x0, #0x4
    10a8:	cmp	x14, x2
    10ac:	b.cs	1068 <gconv@@Base+0x780>  // b.hs, b.nlast
    10b0:	mov	x4, #0x5                   	// #5
    10b4:	str	x21, [x12]
    10b8:	cmp	x0, x14
    10bc:	b.ne	135c <gconv@@Base+0xa74>  // b.any
    10c0:	cmp	x4, #0x5
    10c4:	b.ne	1220 <gconv@@Base+0x938>  // b.any
    10c8:	cmp	x0, x28
    10cc:	b.ne	ae4 <gconv@@Base+0x1fc>  // b.any
    10d0:	ldr	w0, [x25, #20]
    10d4:	sub	w0, w0, #0x1
    10d8:	str	w0, [x25, #20]
    10dc:	b	ae4 <gconv@@Base+0x1fc>
    10e0:	ldp	x6, x5, [sp, #160]
    10e4:	mov	x4, x19
    10e8:	ldr	x2, [x12]
    10ec:	mov	x1, x25
    10f0:	mov	x0, x26
    10f4:	stp	x3, x12, [sp, #104]
    10f8:	str	w18, [sp, #120]
    10fc:	str	x13, [sp, #128]
    1100:	str	x10, [sp, #176]
    1104:	bl	700 <__gconv_transliterate@plt>
    1108:	ldr	w18, [sp, #120]
    110c:	mov	w14, w0
    1110:	cmp	w0, #0x6
    1114:	ldp	x3, x12, [sp, #104]
    1118:	ldr	x13, [sp, #128]
    111c:	ldr	x10, [sp, #176]
    1120:	b.eq	1208 <gconv@@Base+0x920>  // b.none
    1124:	cmp	w0, #0x5
    1128:	ldp	x1, x27, [sp, #216]
    112c:	b.ne	a58 <gconv@@Base+0x170>  // b.any
    1130:	b	a60 <gconv@@Base+0x178>
    1134:	mov	x0, x21
    1138:	mov	x27, x28
    113c:	mov	w14, #0x5                   	// #5
    1140:	str	x0, [x12]
    1144:	b	b78 <gconv@@Base+0x290>
    1148:	cbnz	x14, 1ac4 <gconv@@Base+0x11dc>
    114c:	ldr	x0, [x20, #32]
    1150:	mov	w25, #0x0                   	// #0
    1154:	str	xzr, [x0]
    1158:	ldr	w0, [x20, #16]
    115c:	tbnz	w0, #0, b8c <gconv@@Base+0x2a4>
    1160:	mov	x0, x22
    1164:	str	w6, [sp, #104]
    1168:	bl	740 <_dl_mcount_wrapper_check@plt>
    116c:	ldp	x0, x1, [sp, #144]
    1170:	mov	w7, w24
    1174:	ldr	w6, [sp, #104]
    1178:	mov	x5, x23
    117c:	mov	x4, #0x0                   	// #0
    1180:	mov	x3, #0x0                   	// #0
    1184:	mov	x2, #0x0                   	// #0
    1188:	blr	x22
    118c:	mov	w25, w0
    1190:	b	b8c <gconv@@Base+0x2a4>
    1194:	mov	w0, #0xffffdea5            	// #-8539
    1198:	add	w0, w2, w0
    119c:	cmp	w0, #0x3
    11a0:	b.ls	1270 <gconv@@Base+0x988>  // b.plast
    11a4:	mov	w30, #0xffffde70            	// #-8592
    11a8:	add	w0, w2, w30
    11ac:	cmp	w0, #0x3
    11b0:	b.hi	14ac <gconv@@Base+0xbc4>  // b.pmore
    11b4:	add	w2, w2, #0x1c
    11b8:	add	x4, sp, #0xf0
    11bc:	and	w2, w2, #0xff
    11c0:	strb	w2, [sp, #240]
    11c4:	strb	wzr, [sp, #241]
    11c8:	b	a20 <gconv@@Base+0x138>
    11cc:	ldr	x2, [sp, #160]
    11d0:	cbz	x2, eb4 <gconv@@Base+0x5cc>
    11d4:	cbz	w18, eb4 <gconv@@Base+0x5cc>
    11d8:	ldr	x1, [x2]
    11dc:	mov	x0, x4
    11e0:	mov	w14, #0x6                   	// #6
    11e4:	add	x1, x1, #0x1
    11e8:	str	x1, [x2]
    11ec:	b	b64 <gconv@@Base+0x27c>
    11f0:	mov	x20, x25
    11f4:	mov	w25, w7
    11f8:	b	edc <gconv@@Base+0x5f4>
    11fc:	mov	x1, x19
    1200:	mov	w14, #0x4                   	// #4
    1204:	b	a60 <gconv@@Base+0x178>
    1208:	ldr	x27, [sp, #224]
    120c:	b	c60 <gconv@@Base+0x378>
    1210:	ldp	x1, x2, [sp, #208]
    1214:	str	x2, [x12]
    1218:	cmp	x1, x0
    121c:	b.ne	135c <gconv@@Base+0xa74>  // b.any
    1220:	adrp	x3, 1000 <gconv@@Base+0x718>
    1224:	adrp	x1, 1000 <gconv@@Base+0x718>
    1228:	adrp	x0, 1000 <gconv@@Base+0x718>
    122c:	add	x3, x3, #0xfe8
    1230:	add	x1, x1, #0xe50
    1234:	add	x0, x0, #0xf80
    1238:	mov	w2, #0x2eb                 	// #747
    123c:	bl	750 <__assert_fail@plt>
    1240:	add	x0, x26, #0x1
    1244:	str	x0, [sp, #224]
    1248:	mov	w1, #0xffffffcf            	// #-49
    124c:	mov	w0, #0x20                  	// #32
    1250:	strb	w1, [x26]
    1254:	ldr	x1, [sp, #224]
    1258:	cmp	x21, x1
    125c:	b.ls	1320 <gconv@@Base+0xa38>  // b.plast
    1260:	add	x2, x1, #0x1
    1264:	str	x2, [sp, #224]
    1268:	strb	w0, [x1]
    126c:	b	d54 <gconv@@Base+0x46c>
    1270:	sub	w2, w2, #0x7f
    1274:	add	x4, sp, #0xf0
    1278:	and	w2, w2, #0xff
    127c:	strb	w2, [sp, #240]
    1280:	strb	wzr, [sp, #241]
    1284:	b	a20 <gconv@@Base+0x138>
    1288:	cmp	x21, x5
    128c:	b.cc	1334 <gconv@@Base+0xa4c>  // b.lo, b.ul, b.last
    1290:	mov	x1, x28
    1294:	add	x10, sp, #0xf0
    1298:	mov	x0, #0x0                   	// #0
    129c:	ldrb	w6, [x1], #1
    12a0:	add	x4, x0, #0x1
    12a4:	strb	w6, [x10, x0]
    12a8:	cmp	x4, #0x1
    12ac:	ccmp	x19, x1, #0x0, ls  // ls = plast
    12b0:	mov	x0, #0x1                   	// #1
    12b4:	b.hi	129c <gconv@@Base+0x9b4>  // b.pmore
    12b8:	b	fd0 <gconv@@Base+0x6e8>
    12bc:	ldr	x0, [x12]
    12c0:	sub	x3, x19, x0
    12c4:	cmp	x3, #0x3
    12c8:	b.gt	1b70 <gconv@@Base+0x1288>
    12cc:	ldr	x4, [x20, #32]
    12d0:	cmp	x0, x19
    12d4:	add	x0, x0, #0x1
    12d8:	add	x1, x4, #0x4
    12dc:	b.cs	176c <gconv@@Base+0xe84>  // b.hs, b.nlast
    12e0:	str	x0, [x12]
    12e4:	cmp	x19, x0
    12e8:	add	x0, x0, #0x1
    12ec:	ldurb	w2, [x0, #-2]
    12f0:	strb	w2, [x1], #1
    12f4:	b.ne	12e0 <gconv@@Base+0x9f8>  // b.any
    12f8:	mov	w1, w3
    12fc:	ldr	w0, [x4]
    1300:	ldp	x27, x28, [sp, #80]
    1304:	and	w0, w0, #0xfffffff8
    1308:	orr	w0, w0, w1
    130c:	str	w0, [x4]
    1310:	b	b8c <gconv@@Base+0x2a4>
    1314:	mov	w14, #0x6                   	// #6
    1318:	ldr	x1, [sp, #216]
    131c:	b	a60 <gconv@@Base+0x178>
    1320:	ldr	x0, [sp, #216]
    1324:	sub	x1, x1, #0x1
    1328:	str	x1, [sp, #224]
    132c:	cmp	x0, x10
    1330:	b.ne	d68 <gconv@@Base+0x480>  // b.any
    1334:	mov	w25, #0x5                   	// #5
    1338:	ldp	x27, x28, [sp, #80]
    133c:	b	b8c <gconv@@Base+0x2a4>
    1340:	ldp	x1, x2, [sp, #208]
    1344:	str	x2, [x12]
    1348:	mov	x20, x23
    134c:	mov	x23, x24
    1350:	mov	w24, w8
    1354:	cmp	x1, x0
    1358:	b.eq	10c8 <gconv@@Base+0x7e0>  // b.none
    135c:	adrp	x3, 1000 <gconv@@Base+0x718>
    1360:	adrp	x1, 1000 <gconv@@Base+0x718>
    1364:	adrp	x0, 1000 <gconv@@Base+0x718>
    1368:	add	x3, x3, #0xfe8
    136c:	add	x1, x1, #0xe50
    1370:	add	x0, x0, #0xf68
    1374:	mov	w2, #0x2ea                 	// #746
    1378:	bl	750 <__assert_fail@plt>
    137c:	cmp	w2, #0x2c7
    1380:	b.eq	1574 <gconv@@Base+0xc8c>  // b.none
    1384:	cmp	w2, #0x2dc
    1388:	sub	w6, w2, #0x2d8
    138c:	ccmp	w6, #0x5, #0x2, ne  // ne = any
    1390:	b.hi	1548 <gconv@@Base+0xc60>  // b.pmore
    1394:	add	x1, x13, #0x700
    1398:	mov	w2, #0x20                  	// #32
    139c:	strb	w2, [sp, #241]
    13a0:	add	x5, sp, #0xf0
    13a4:	ldrb	w2, [x1, w6, uxtw]
    13a8:	strb	w2, [sp, #240]
    13ac:	b	e14 <gconv@@Base+0x52c>
    13b0:	mov	x0, #0x4                   	// #4
    13b4:	mov	x7, #0x0                   	// #0
    13b8:	b	ccc <gconv@@Base+0x3e4>
    13bc:	mov	x0, x19
    13c0:	mov	x27, x28
    13c4:	mov	w14, #0x4                   	// #4
    13c8:	str	x0, [x12]
    13cc:	b	b78 <gconv@@Base+0x290>
    13d0:	mov	w14, #0xffffdede            	// #-8482
    13d4:	add	w5, w2, w14
    13d8:	cmp	w5, #0x4
    13dc:	b.hi	16f4 <gconv@@Base+0xe0c>  // b.pmore
    13e0:	add	x1, x13, #0x718
    13e4:	ldrb	w2, [x1, w5, uxtw]
    13e8:	strb	w2, [sp, #240]
    13ec:	cbnz	w2, 1568 <gconv@@Base+0xc80>
    13f0:	ldr	x1, [sp, #160]
    13f4:	cbz	x1, 1210 <gconv@@Base+0x928>
    13f8:	ldr	w1, [x25, #16]
    13fc:	tbnz	w1, #3, 15d8 <gconv@@Base+0xcf0>
    1400:	ldr	x21, [sp, #216]
    1404:	tbnz	w20, #1, 16ac <gconv@@Base+0xdc4>
    1408:	mov	x20, x23
    140c:	mov	x4, #0x6                   	// #6
    1410:	mov	x23, x24
    1414:	mov	w24, w8
    1418:	ldr	x14, [sp, #208]
    141c:	b	10b4 <gconv@@Base+0x7cc>
    1420:	cbnz	w25, ee8 <gconv@@Base+0x600>
    1424:	ldr	w18, [x20, #16]
    1428:	ldr	x28, [x12]
    142c:	b	998 <gconv@@Base+0xb0>
    1430:	ldp	x0, x2, [sp, #208]
    1434:	str	x2, [x12]
    1438:	sub	x1, x1, #0x1
    143c:	mov	x20, x23
    1440:	mov	x23, x24
    1444:	mov	w24, w8
    1448:	cmp	x0, x1
    144c:	b.eq	10c8 <gconv@@Base+0x7e0>  // b.none
    1450:	b	135c <gconv@@Base+0xa74>
    1454:	cbz	x9, 15c4 <gconv@@Base+0xcdc>
    1458:	cbz	w27, 15c4 <gconv@@Base+0xcdc>
    145c:	ldr	x1, [x9]
    1460:	add	x21, x21, w4, sxtw
    1464:	mov	w5, #0x6                   	// #6
    1468:	add	x1, x1, #0x1
    146c:	str	x1, [x9]
    1470:	b	109c <gconv@@Base+0x7b4>
    1474:	add	x4, x21, #0x1
    1478:	cmp	x19, x4
    147c:	b.ls	1b90 <gconv@@Base+0x12a8>  // b.plast
    1480:	ldrb	w8, [x21, #1]
    1484:	sub	w8, w8, #0x20
    1488:	cmp	w8, #0x5f
    148c:	b.hi	171c <gconv@@Base+0xe34>  // b.pmore
    1490:	ubfiz	x11, x3, #1, #32
    1494:	mov	w4, #0x2                   	// #2
    1498:	add	x3, x11, w3, uxtw
    149c:	lsl	x3, x3, #5
    14a0:	add	x3, x3, w8, uxtw
    14a4:	ldr	w3, [x6, x3, lsl #2]
    14a8:	b	1084 <gconv@@Base+0x79c>
    14ac:	mov	w0, #0x2500                	// #9472
    14b0:	cmp	w2, w0
    14b4:	b.eq	1680 <gconv@@Base+0xd98>  // b.none
    14b8:	mov	w0, #0x2502                	// #9474
    14bc:	cmp	w2, w0
    14c0:	b.eq	16e0 <gconv@@Base+0xdf8>  // b.none
    14c4:	mov	w0, #0x253c                	// #9532
    14c8:	cmp	w2, w0
    14cc:	b.eq	17b8 <gconv@@Base+0xed0>  // b.none
    14d0:	mov	w17, #0xffffda8f            	// #-9585
    14d4:	add	w0, w2, w17
    14d8:	cmp	w0, #0x1
    14dc:	b.ls	17a0 <gconv@@Base+0xeb8>  // b.plast
    14e0:	mov	w16, #0xffffda1e            	// #-9698
    14e4:	add	w0, w2, w16
    14e8:	cmp	w0, #0x1
    14ec:	b.ls	18a4 <gconv@@Base+0xfbc>  // b.plast
    14f0:	mov	w0, #0x266a                	// #9834
    14f4:	cmp	w2, w0
    14f8:	mov	w0, #0xd5                  	// #213
    14fc:	b.ne	f44 <gconv@@Base+0x65c>  // b.any
    1500:	add	x1, x27, #0x1
    1504:	str	x1, [sp, #224]
    1508:	strb	w0, [x27]
    150c:	b	a4c <gconv@@Base+0x164>
    1510:	str	x19, [x12]
    1514:	cmp	x28, x19
    1518:	b.cs	153c <gconv@@Base+0xc54>  // b.hs, b.nlast
    151c:	add	x7, x13, x7
    1520:	add	x28, x28, #0x1
    1524:	str	x28, [sp, #216]
    1528:	cmp	x19, x28
    152c:	add	x7, x7, #0x1
    1530:	ldurb	w0, [x28, #-1]
    1534:	strb	w0, [x7, #3]
    1538:	b.ne	1520 <gconv@@Base+0xc38>  // b.any
    153c:	mov	w25, #0x7                   	// #7
    1540:	ldp	x27, x28, [sp, #80]
    1544:	b	b8c <gconv@@Base+0x2a4>
    1548:	mov	w15, #0xffffdfec            	// #-8212
    154c:	add	w5, w2, w15
    1550:	cmp	w5, #0x9
    1554:	b.hi	13d0 <gconv@@Base+0xae8>  // b.pmore
    1558:	add	x1, x13, #0x708
    155c:	ldrb	w2, [x1, w5, uxtw]
    1560:	strb	w2, [sp, #240]
    1564:	cbz	w2, 13f0 <gconv@@Base+0xb08>
    1568:	add	x5, sp, #0xf0
    156c:	strb	wzr, [sp, #241]
    1570:	b	e14 <gconv@@Base+0x52c>
    1574:	add	x1, x0, #0x1
    1578:	str	x1, [sp, #224]
    157c:	mov	w1, #0xffffffcf            	// #-49
    1580:	strb	w1, [x0]
    1584:	mov	w0, #0x20                  	// #32
    1588:	b	e28 <gconv@@Base+0x540>
    158c:	cmp	w0, #0x2c7
    1590:	b.eq	1240 <gconv@@Base+0x958>  // b.none
    1594:	cmp	w0, #0x2dc
    1598:	sub	w1, w0, #0x2d8
    159c:	ccmp	w1, #0x5, #0x2, ne  // ne = any
    15a0:	b.hi	173c <gconv@@Base+0xe54>  // b.pmore
    15a4:	adrp	x0, 2000 <gconv@@Base+0x1718>
    15a8:	add	x0, x0, #0x6f0
    15ac:	mov	w2, #0x20                  	// #32
    15b0:	add	x3, sp, #0xe8
    15b4:	strb	w2, [sp, #233]
    15b8:	ldrb	w0, [x0, w1, uxtw]
    15bc:	strb	w0, [sp, #232]
    15c0:	b	d40 <gconv@@Base+0x458>
    15c4:	mov	x4, #0x6                   	// #6
    15c8:	b	10b4 <gconv@@Base+0x7cc>
    15cc:	mov	w14, #0x7                   	// #7
    15d0:	str	x0, [x12]
    15d4:	b	b78 <gconv@@Base+0x290>
    15d8:	ldp	x6, x5, [sp, #160]
    15dc:	mov	x4, x19
    15e0:	ldr	x2, [x12]
    15e4:	mov	x1, x25
    15e8:	mov	x0, x26
    15ec:	stp	x3, x12, [sp, #104]
    15f0:	str	w7, [sp, #120]
    15f4:	str	w8, [sp, #128]
    15f8:	stp	x13, x10, [sp, #176]
    15fc:	bl	700 <__gconv_transliterate@plt>
    1600:	sxtw	x4, w0
    1604:	ldr	w7, [sp, #120]
    1608:	cmp	w4, #0x6
    160c:	ldr	w8, [sp, #128]
    1610:	ldp	x3, x12, [sp, #104]
    1614:	ldp	x13, x10, [sp, #176]
    1618:	b.eq	1774 <gconv@@Base+0xe8c>  // b.none
    161c:	cmp	w4, #0x5
    1620:	ldp	x21, x0, [sp, #216]
    1624:	b.ne	e4c <gconv@@Base+0x564>  // b.any
    1628:	mov	x20, x23
    162c:	mov	x4, #0x5                   	// #5
    1630:	mov	x23, x24
    1634:	mov	w24, w8
    1638:	ldr	x14, [sp, #208]
    163c:	b	10b4 <gconv@@Base+0x7cc>
    1640:	mov	w16, #0xffffdede            	// #-8482
    1644:	add	w1, w0, w16
    1648:	cmp	w1, #0x4
    164c:	b.hi	18bc <gconv@@Base+0xfd4>  // b.pmore
    1650:	adrp	x0, 2000 <gconv@@Base+0x1718>
    1654:	add	x0, x0, #0x708
    1658:	ldrb	w0, [x0, w1, uxtw]
    165c:	strb	w0, [sp, #232]
    1660:	cbnz	w0, 1760 <gconv@@Base+0xe78>
    1664:	ldr	x0, [sp, #160]
    1668:	cbz	x0, 1674 <gconv@@Base+0xd8c>
    166c:	tbnz	w18, #3, 1950 <gconv@@Base+0x1068>
    1670:	tbnz	w18, #1, 187c <gconv@@Base+0xf94>
    1674:	mov	w25, #0x6                   	// #6
    1678:	ldp	x27, x28, [sp, #80]
    167c:	b	b8c <gconv@@Base+0x2a4>
    1680:	mov	w0, #0xd6                  	// #214
    1684:	b	1500 <gconv@@Base+0xc18>
    1688:	mov	w5, #0x1c00                	// #7168
    168c:	cmp	w5, w2, lsr #7
    1690:	b.eq	1d74 <gconv@@Base+0x148c>  // b.none
    1694:	ldr	x1, [sp, #160]
    1698:	cbz	x1, 1210 <gconv@@Base+0x928>
    169c:	ldr	w0, [x25, #16]
    16a0:	tbnz	w0, #3, 1d20 <gconv@@Base+0x1438>
    16a4:	ldp	x21, x0, [sp, #216]
    16a8:	tbz	w20, #1, 1408 <gconv@@Base+0xb20>
    16ac:	ldr	x2, [sp, #160]
    16b0:	add	x21, x21, #0x4
    16b4:	mov	x4, #0x6                   	// #6
    16b8:	str	x21, [sp, #216]
    16bc:	ldr	x1, [x2]
    16c0:	add	x1, x1, #0x1
    16c4:	str	x1, [x2]
    16c8:	b	e4c <gconv@@Base+0x564>
    16cc:	sxtw	x4, w5
    16d0:	b	10b4 <gconv@@Base+0x7cc>
    16d4:	cmp	x14, x28
    16d8:	b.eq	10d0 <gconv@@Base+0x7e8>  // b.none
    16dc:	b	135c <gconv@@Base+0xa74>
    16e0:	mov	w0, #0xd7                  	// #215
    16e4:	b	1500 <gconv@@Base+0xc18>
    16e8:	cmp	x14, x28
    16ec:	b.eq	1220 <gconv@@Base+0x938>  // b.none
    16f0:	b	135c <gconv@@Base+0xa74>
    16f4:	mov	w11, #0xffffdea5            	// #-8539
    16f8:	add	w5, w2, w11
    16fc:	cmp	w5, #0x3
    1700:	b.hi	17c0 <gconv@@Base+0xed8>  // b.pmore
    1704:	sub	w2, w2, #0x7f
    1708:	add	x5, sp, #0xf0
    170c:	and	w2, w2, #0xff
    1710:	strb	w2, [sp, #240]
    1714:	strb	wzr, [sp, #241]
    1718:	b	e14 <gconv@@Base+0x52c>
    171c:	cbz	x9, 15c4 <gconv@@Base+0xcdc>
    1720:	cbz	w27, 15c4 <gconv@@Base+0xcdc>
    1724:	ldr	x1, [x9]
    1728:	mov	x21, x4
    172c:	mov	w5, #0x6                   	// #6
    1730:	add	x1, x1, #0x1
    1734:	str	x1, [x9]
    1738:	b	10a4 <gconv@@Base+0x7bc>
    173c:	mov	w17, #0xffffdfec            	// #-8212
    1740:	add	w1, w0, w17
    1744:	cmp	w1, #0x9
    1748:	b.hi	1640 <gconv@@Base+0xd58>  // b.pmore
    174c:	adrp	x0, 2000 <gconv@@Base+0x1718>
    1750:	add	x0, x0, #0x6f8
    1754:	ldrb	w0, [x0, w1, uxtw]
    1758:	strb	w0, [sp, #232]
    175c:	cbz	w0, 1664 <gconv@@Base+0xd7c>
    1760:	add	x3, sp, #0xe8
    1764:	strb	wzr, [sp, #233]
    1768:	b	d40 <gconv@@Base+0x458>
    176c:	mov	w1, #0x0                   	// #0
    1770:	b	12fc <gconv@@Base+0xa14>
    1774:	ldr	x0, [sp, #224]
    1778:	b	1400 <gconv@@Base+0xb18>
    177c:	ldr	x1, [sp, #160]
    1780:	cbz	x1, 1674 <gconv@@Base+0xd8c>
    1784:	tbz	w18, #1, 1674 <gconv@@Base+0xd8c>
    1788:	mov	x2, x1
    178c:	add	x0, x10, w0, sxtw
    1790:	ldr	x1, [x1]
    1794:	add	x1, x1, #0x1
    1798:	str	x1, [x2]
    179c:	b	100c <gconv@@Base+0x724>
    17a0:	add	w2, w2, #0x67
    17a4:	add	x4, sp, #0xf0
    17a8:	and	w2, w2, #0xff
    17ac:	strb	w2, [sp, #240]
    17b0:	strb	wzr, [sp, #241]
    17b4:	b	a20 <gconv@@Base+0x138>
    17b8:	mov	w0, #0xe5                  	// #229
    17bc:	b	1500 <gconv@@Base+0xc18>
    17c0:	mov	w9, #0xffffde70            	// #-8592
    17c4:	add	w5, w2, w9
    17c8:	cmp	w5, #0x3
    17cc:	b.hi	18e4 <gconv@@Base+0xffc>  // b.pmore
    17d0:	add	w2, w2, #0x1c
    17d4:	add	x5, sp, #0xf0
    17d8:	and	w2, w2, #0xff
    17dc:	strb	w2, [sp, #240]
    17e0:	strb	wzr, [sp, #241]
    17e4:	b	e14 <gconv@@Base+0x52c>
    17e8:	add	x7, x10, x4
    17ec:	add	x0, x10, #0x1
    17f0:	cmp	x7, x0
    17f4:	b.ls	182c <gconv@@Base+0xf44>  // b.plast
    17f8:	ldrb	w3, [sp, #241]
    17fc:	sub	w3, w3, #0x20
    1800:	cmp	w3, #0x5f
    1804:	b.hi	1b98 <gconv@@Base+0x12b0>  // b.pmore
    1808:	ubfiz	x2, x6, #1, #32
    180c:	adrp	x4, 2000 <gconv@@Base+0x1718>
    1810:	add	x2, x2, w6, uxtw
    1814:	add	x4, x4, #0x710
    1818:	mov	w0, #0x2                   	// #2
    181c:	lsl	x2, x2, #5
    1820:	add	x2, x2, w3, uxtw
    1824:	ldr	w2, [x4, x2, lsl #2]
    1828:	b	ff4 <gconv@@Base+0x70c>
    182c:	add	x0, x10, #0x2
    1830:	cmp	x7, x0
    1834:	b.eq	1cbc <gconv@@Base+0x13d4>  // b.none
    1838:	mov	w0, w3
    183c:	and	w2, w2, #0xfffffff8
    1840:	sub	x0, x4, x0
    1844:	add	x8, x28, x0
    1848:	str	x8, [x12]
    184c:	cmp	x4, w2, sxtw
    1850:	b.le	1cac <gconv@@Base+0x13c4>
    1854:	cmp	x4, #0x4
    1858:	b.hi	1a30 <gconv@@Base+0x1148>  // b.pmore
    185c:	orr	w2, w2, w4
    1860:	str	w2, [x13]
    1864:	cmp	x7, x10
    1868:	mov	w25, #0x7                   	// #7
    186c:	b.ls	ee8 <gconv@@Base+0x600>  // b.plast
    1870:	strb	w1, [x13, #4]
    1874:	ldp	x27, x28, [sp, #80]
    1878:	b	b8c <gconv@@Base+0x2a4>
    187c:	ldr	x2, [sp, #160]
    1880:	ldr	x0, [sp, #216]
    1884:	ldr	x1, [x2]
    1888:	add	x0, x0, #0x4
    188c:	str	x0, [sp, #216]
    1890:	cmp	x0, x10
    1894:	add	x1, x1, #0x1
    1898:	str	x1, [x2]
    189c:	b.ne	d68 <gconv@@Base+0x480>  // b.any
    18a0:	b	1674 <gconv@@Base+0xd8c>
    18a4:	sub	w2, w2, #0x8
    18a8:	add	x4, sp, #0xf0
    18ac:	and	w2, w2, #0xff
    18b0:	strb	w2, [sp, #240]
    18b4:	strb	wzr, [sp, #241]
    18b8:	b	a20 <gconv@@Base+0x138>
    18bc:	mov	w11, #0xffffdea5            	// #-8539
    18c0:	add	w1, w0, w11
    18c4:	cmp	w1, #0x3
    18c8:	b.hi	1bb8 <gconv@@Base+0x12d0>  // b.pmore
    18cc:	sub	w0, w0, #0x7f
    18d0:	add	x3, sp, #0xe8
    18d4:	and	w0, w0, #0xff
    18d8:	strb	w0, [sp, #232]
    18dc:	strb	wzr, [sp, #233]
    18e0:	b	d40 <gconv@@Base+0x458>
    18e4:	mov	w5, #0x2500                	// #9472
    18e8:	cmp	w2, w5
    18ec:	b.eq	1cfc <gconv@@Base+0x1414>  // b.none
    18f0:	mov	w5, #0x2502                	// #9474
    18f4:	cmp	w2, w5
    18f8:	b.eq	1cf0 <gconv@@Base+0x1408>  // b.none
    18fc:	mov	w5, #0x253c                	// #9532
    1900:	cmp	w2, w5
    1904:	b.eq	1ce4 <gconv@@Base+0x13fc>  // b.none
    1908:	mov	w6, #0xffffda8f            	// #-9585
    190c:	add	w5, w2, w6
    1910:	cmp	w5, #0x1
    1914:	b.ls	1ccc <gconv@@Base+0x13e4>  // b.plast
    1918:	mov	w5, #0xffffda1e            	// #-9698
    191c:	add	w5, w2, w5
    1920:	cmp	w5, #0x1
    1924:	b.ls	1d08 <gconv@@Base+0x1420>  // b.plast
    1928:	mov	w5, #0x266a                	// #9834
    192c:	cmp	w2, w5
    1930:	b.ne	1688 <gconv@@Base+0xda0>  // b.any
    1934:	adrp	x1, 1000 <gconv@@Base+0x718>
    1938:	add	x1, x1, #0xe48
    193c:	ldrb	w1, [x1]
    1940:	add	x2, x0, #0x1
    1944:	str	x2, [sp, #224]
    1948:	strb	w1, [x0]
    194c:	b	e40 <gconv@@Base+0x558>
    1950:	mov	x6, x0
    1954:	mov	x2, x28
    1958:	mov	x0, x15
    195c:	add	x5, sp, #0xe0
    1960:	mov	x4, x27
    1964:	add	x3, sp, #0xd8
    1968:	mov	x1, x20
    196c:	str	x15, [sp, #104]
    1970:	str	w18, [sp, #112]
    1974:	stp	x13, x7, [sp, #120]
    1978:	str	x12, [sp, #136]
    197c:	stp	x14, x10, [sp, #168]
    1980:	bl	700 <__gconv_transliterate@plt>
    1984:	ldr	w18, [sp, #112]
    1988:	mov	w25, w0
    198c:	cmp	w0, #0x6
    1990:	ldr	x15, [sp, #104]
    1994:	ldr	x13, [sp, #120]
    1998:	ldr	x12, [sp, #136]
    199c:	ldp	x14, x10, [sp, #168]
    19a0:	b.eq	1ab0 <gconv@@Base+0x11c8>  // b.none
    19a4:	cmp	w0, #0x5
    19a8:	ldr	x7, [sp, #128]
    19ac:	b.eq	1aa0 <gconv@@Base+0x11b8>  // b.none
    19b0:	ldr	x0, [sp, #216]
    19b4:	cmp	x0, x10
    19b8:	b.ne	d68 <gconv@@Base+0x480>  // b.any
    19bc:	cmp	w25, #0x7
    19c0:	b.ne	1420 <gconv@@Base+0xb38>  // b.any
    19c4:	add	x0, x10, #0x4
    19c8:	cmp	x27, x0
    19cc:	b.eq	1a80 <gconv@@Base+0x1198>  // b.none
    19d0:	ldr	w0, [x13]
    19d4:	ldr	x1, [x12]
    19d8:	and	x2, x0, #0x7
    19dc:	sub	x2, x7, x2
    19e0:	and	w0, w0, #0xfffffff8
    19e4:	add	x1, x1, x2
    19e8:	str	x1, [x12]
    19ec:	cmp	x7, w0, sxtw
    19f0:	b.le	1a60 <gconv@@Base+0x1178>
    19f4:	cmp	x7, #0x4
    19f8:	b.hi	1a50 <gconv@@Base+0x1168>  // b.pmore
    19fc:	orr	w0, w0, w7
    1a00:	str	w0, [x13]
    1a04:	cmp	x27, x10
    1a08:	b.ls	153c <gconv@@Base+0xc54>  // b.plast
    1a0c:	add	x10, x10, #0x1
    1a10:	add	x13, x13, #0x4
    1a14:	str	x10, [sp, #216]
    1a18:	cmp	x27, x10
    1a1c:	add	x10, x10, #0x1
    1a20:	ldurb	w0, [x10, #-2]
    1a24:	strb	w0, [x13], #1
    1a28:	b.ne	1a14 <gconv@@Base+0x112c>  // b.any
    1a2c:	b	153c <gconv@@Base+0xc54>
    1a30:	adrp	x3, 1000 <gconv@@Base+0x718>
    1a34:	add	x3, x3, #0xfd0
    1a38:	adrp	x1, 1000 <gconv@@Base+0x718>
    1a3c:	adrp	x0, 1000 <gconv@@Base+0x718>
    1a40:	add	x1, x1, #0xe80
    1a44:	add	x0, x0, #0xf38
    1a48:	mov	w2, #0x1e6                 	// #486
    1a4c:	bl	750 <__assert_fail@plt>
    1a50:	adrp	x3, 1000 <gconv@@Base+0x718>
    1a54:	adrp	x1, 1000 <gconv@@Base+0x718>
    1a58:	add	x3, x3, #0xfb8
    1a5c:	b	1a3c <gconv@@Base+0x1154>
    1a60:	adrp	x3, 1000 <gconv@@Base+0x718>
    1a64:	add	x3, x3, #0xfb8
    1a68:	adrp	x1, 1000 <gconv@@Base+0x718>
    1a6c:	adrp	x0, 1000 <gconv@@Base+0x718>
    1a70:	add	x1, x1, #0xe80
    1a74:	add	x0, x0, #0xf10
    1a78:	mov	w2, #0x1e5                 	// #485
    1a7c:	bl	750 <__assert_fail@plt>
    1a80:	adrp	x3, 1000 <gconv@@Base+0x718>
    1a84:	add	x3, x3, #0xfb8
    1a88:	adrp	x1, 1000 <gconv@@Base+0x718>
    1a8c:	adrp	x0, 1000 <gconv@@Base+0x718>
    1a90:	add	x1, x1, #0xe80
    1a94:	add	x0, x0, #0xee8
    1a98:	mov	w2, #0x1db                 	// #475
    1a9c:	bl	750 <__assert_fail@plt>
    1aa0:	ldr	x0, [sp, #216]
    1aa4:	cmp	x0, x10
    1aa8:	b.ne	d68 <gconv@@Base+0x480>  // b.any
    1aac:	b	1334 <gconv@@Base+0xa4c>
    1ab0:	tbnz	w18, #1, 187c <gconv@@Base+0xf94>
    1ab4:	ldr	x0, [sp, #216]
    1ab8:	cmp	x0, x10
    1abc:	b.ne	d68 <gconv@@Base+0x480>  // b.any
    1ac0:	b	1674 <gconv@@Base+0xd8c>
    1ac4:	adrp	x3, 1000 <gconv@@Base+0x718>
    1ac8:	adrp	x1, 1000 <gconv@@Base+0x718>
    1acc:	adrp	x0, 1000 <gconv@@Base+0x718>
    1ad0:	add	x3, x3, #0xfe8
    1ad4:	add	x1, x1, #0xe50
    1ad8:	add	x0, x0, #0xe68
    1adc:	mov	w2, #0x1a4                 	// #420
    1ae0:	stp	x27, x28, [sp, #80]
    1ae4:	bl	750 <__assert_fail@plt>
    1ae8:	adrp	x3, 1000 <gconv@@Base+0x718>
    1aec:	add	x3, x3, #0xfb8
    1af0:	adrp	x1, 1000 <gconv@@Base+0x718>
    1af4:	adrp	x0, 1000 <gconv@@Base+0x718>
    1af8:	add	x1, x1, #0xe80
    1afc:	add	x0, x0, #0xe90
    1b00:	mov	w2, #0x18b                 	// #395
    1b04:	bl	750 <__assert_fail@plt>
    1b08:	adrp	x3, 1000 <gconv@@Base+0x718>
    1b0c:	add	x3, x3, #0xfb8
    1b10:	adrp	x1, 1000 <gconv@@Base+0x718>
    1b14:	adrp	x0, 1000 <gconv@@Base+0x718>
    1b18:	add	x1, x1, #0xe80
    1b1c:	add	x0, x0, #0xec0
    1b20:	mov	w2, #0x1c9                 	// #457
    1b24:	bl	750 <__assert_fail@plt>
    1b28:	adrp	x3, 1000 <gconv@@Base+0x718>
    1b2c:	adrp	x1, 1000 <gconv@@Base+0x718>
    1b30:	add	x3, x3, #0xfd0
    1b34:	b	1af4 <gconv@@Base+0x120c>
    1b38:	adrp	x3, 1000 <gconv@@Base+0x718>
    1b3c:	adrp	x1, 1000 <gconv@@Base+0x718>
    1b40:	adrp	x0, 1000 <gconv@@Base+0x718>
    1b44:	add	x3, x3, #0xfe8
    1b48:	add	x1, x1, #0xe50
    1b4c:	add	x0, x0, #0xe68
    1b50:	mov	w2, #0x234                 	// #564
    1b54:	bl	750 <__assert_fail@plt>
    1b58:	stp	x27, x28, [sp, #80]
    1b5c:	bl	710 <__stack_chk_fail@plt>
    1b60:	adrp	x3, 1000 <gconv@@Base+0x718>
    1b64:	adrp	x1, 1000 <gconv@@Base+0x718>
    1b68:	add	x3, x3, #0xfd0
    1b6c:	b	1b14 <gconv@@Base+0x122c>
    1b70:	adrp	x3, 1000 <gconv@@Base+0x718>
    1b74:	adrp	x1, 1000 <gconv@@Base+0x718>
    1b78:	adrp	x0, 1000 <gconv@@Base+0x718>
    1b7c:	add	x3, x3, #0xfe8
    1b80:	add	x1, x1, #0xe50
    1b84:	add	x0, x0, #0xfa0
    1b88:	mov	w2, #0x31e                 	// #798
    1b8c:	bl	750 <__assert_fail@plt>
    1b90:	mov	x4, #0x7                   	// #7
    1b94:	b	10b4 <gconv@@Base+0x7cc>
    1b98:	ldr	x1, [sp, #160]
    1b9c:	cbz	x1, 1674 <gconv@@Base+0xd8c>
    1ba0:	tbz	w18, #1, 1674 <gconv@@Base+0xd8c>
    1ba4:	mov	x2, x1
    1ba8:	ldr	x1, [x1]
    1bac:	add	x1, x1, #0x1
    1bb0:	str	x1, [x2]
    1bb4:	b	100c <gconv@@Base+0x724>
    1bb8:	mov	w9, #0xffffde70            	// #-8592
    1bbc:	add	w1, w0, w9
    1bc0:	cmp	w1, #0x3
    1bc4:	b.hi	1c40 <gconv@@Base+0x1358>  // b.pmore
    1bc8:	add	w0, w0, #0x1c
    1bcc:	add	x3, sp, #0xe8
    1bd0:	and	w0, w0, #0xff
    1bd4:	strb	w0, [sp, #232]
    1bd8:	strb	wzr, [sp, #233]
    1bdc:	b	d40 <gconv@@Base+0x458>
    1be0:	ldp	x6, x5, [sp, #160]
    1be4:	mov	x4, x19
    1be8:	ldr	x2, [x12]
    1bec:	mov	x1, x25
    1bf0:	mov	x0, x26
    1bf4:	stp	x3, x12, [sp, #104]
    1bf8:	str	w18, [sp, #120]
    1bfc:	str	x13, [sp, #128]
    1c00:	str	x10, [sp, #176]
    1c04:	bl	700 <__gconv_transliterate@plt>
    1c08:	ldr	w18, [sp, #120]
    1c0c:	mov	w14, w0
    1c10:	cmp	w0, #0x6
    1c14:	ldp	x3, x12, [sp, #104]
    1c18:	ldr	x13, [sp, #128]
    1c1c:	ldr	x10, [sp, #176]
    1c20:	b.eq	f60 <gconv@@Base+0x678>  // b.none
    1c24:	cmp	w0, #0x5
    1c28:	ldp	x1, x27, [sp, #216]
    1c2c:	b.ne	a58 <gconv@@Base+0x170>  // b.any
    1c30:	b	a60 <gconv@@Base+0x178>
    1c34:	mov	x1, x4
    1c38:	str	x4, [sp, #216]
    1c3c:	b	a58 <gconv@@Base+0x170>
    1c40:	mov	w1, #0x2500                	// #9472
    1c44:	cmp	w0, w1
    1c48:	b.eq	1e04 <gconv@@Base+0x151c>  // b.none
    1c4c:	mov	w1, #0x2502                	// #9474
    1c50:	cmp	w0, w1
    1c54:	b.eq	1df8 <gconv@@Base+0x1510>  // b.none
    1c58:	mov	w1, #0x253c                	// #9532
    1c5c:	cmp	w0, w1
    1c60:	b.eq	1dec <gconv@@Base+0x1504>  // b.none
    1c64:	mov	w8, #0xffffda8f            	// #-9585
    1c68:	add	w1, w0, w8
    1c6c:	cmp	w1, #0x1
    1c70:	b.ls	1dd4 <gconv@@Base+0x14ec>  // b.plast
    1c74:	mov	w6, #0xffffda1e            	// #-9698
    1c78:	add	w1, w0, w6
    1c7c:	cmp	w1, #0x1
    1c80:	b.ls	1dbc <gconv@@Base+0x14d4>  // b.plast
    1c84:	mov	w1, #0x266a                	// #9834
    1c88:	cmp	w0, w1
    1c8c:	b.ne	1da4 <gconv@@Base+0x14bc>  // b.any
    1c90:	adrp	x0, 1000 <gconv@@Base+0x718>
    1c94:	add	x0, x0, #0xe48
    1c98:	ldrb	w0, [x0]
    1c9c:	add	x1, x26, #0x1
    1ca0:	str	x1, [sp, #224]
    1ca4:	strb	w0, [x26]
    1ca8:	b	d54 <gconv@@Base+0x46c>
    1cac:	adrp	x3, 1000 <gconv@@Base+0x718>
    1cb0:	adrp	x1, 1000 <gconv@@Base+0x718>
    1cb4:	add	x3, x3, #0xfd0
    1cb8:	b	1a6c <gconv@@Base+0x1184>
    1cbc:	adrp	x3, 1000 <gconv@@Base+0x718>
    1cc0:	adrp	x1, 1000 <gconv@@Base+0x718>
    1cc4:	add	x3, x3, #0xfd0
    1cc8:	b	1a8c <gconv@@Base+0x11a4>
    1ccc:	add	w2, w2, #0x67
    1cd0:	add	x5, sp, #0xf0
    1cd4:	and	w2, w2, #0xff
    1cd8:	strb	w2, [sp, #240]
    1cdc:	strb	wzr, [sp, #241]
    1ce0:	b	e14 <gconv@@Base+0x52c>
    1ce4:	adrp	x1, 1000 <gconv@@Base+0x718>
    1ce8:	add	x1, x1, #0xe30
    1cec:	b	193c <gconv@@Base+0x1054>
    1cf0:	adrp	x1, 1000 <gconv@@Base+0x718>
    1cf4:	add	x1, x1, #0xe38
    1cf8:	b	193c <gconv@@Base+0x1054>
    1cfc:	adrp	x1, 1000 <gconv@@Base+0x718>
    1d00:	add	x1, x1, #0xe40
    1d04:	b	193c <gconv@@Base+0x1054>
    1d08:	sub	w2, w2, #0x8
    1d0c:	add	x5, sp, #0xf0
    1d10:	and	w2, w2, #0xff
    1d14:	strb	w2, [sp, #240]
    1d18:	strb	wzr, [sp, #241]
    1d1c:	b	e14 <gconv@@Base+0x52c>
    1d20:	ldp	x6, x5, [sp, #160]
    1d24:	mov	x4, x19
    1d28:	ldr	x2, [x12]
    1d2c:	mov	x1, x25
    1d30:	mov	x0, x26
    1d34:	stp	x3, x12, [sp, #104]
    1d38:	str	w7, [sp, #120]
    1d3c:	str	w8, [sp, #128]
    1d40:	stp	x13, x10, [sp, #176]
    1d44:	bl	700 <__gconv_transliterate@plt>
    1d48:	sxtw	x4, w0
    1d4c:	ldr	w7, [sp, #120]
    1d50:	cmp	w4, #0x6
    1d54:	ldr	w8, [sp, #128]
    1d58:	ldp	x3, x12, [sp, #104]
    1d5c:	ldp	x13, x10, [sp, #176]
    1d60:	b.eq	16a4 <gconv@@Base+0xdbc>  // b.none
    1d64:	cmp	w4, #0x5
    1d68:	b.eq	1d80 <gconv@@Base+0x1498>  // b.none
    1d6c:	ldp	x21, x0, [sp, #216]
    1d70:	b	e4c <gconv@@Base+0x564>
    1d74:	mov	x21, x1
    1d78:	str	x1, [sp, #216]
    1d7c:	b	e4c <gconv@@Base+0x564>
    1d80:	ldp	x1, x2, [sp, #208]
    1d84:	str	x2, [x12]
    1d88:	ldr	x0, [sp, #224]
    1d8c:	mov	x20, x23
    1d90:	mov	x23, x24
    1d94:	mov	w24, w8
    1d98:	cmp	x1, x0
    1d9c:	b.eq	10c8 <gconv@@Base+0x7e0>  // b.none
    1da0:	b	135c <gconv@@Base+0xa74>
    1da4:	mov	w1, #0x1c00                	// #7168
    1da8:	cmp	w1, w0, lsr #7
    1dac:	b.ne	1664 <gconv@@Base+0xd7c>  // b.any
    1db0:	add	x0, x10, #0x4
    1db4:	str	x0, [sp, #216]
    1db8:	b	d68 <gconv@@Base+0x480>
    1dbc:	sub	w0, w0, #0x8
    1dc0:	add	x3, sp, #0xe8
    1dc4:	and	w0, w0, #0xff
    1dc8:	strb	w0, [sp, #232]
    1dcc:	strb	wzr, [sp, #233]
    1dd0:	b	d40 <gconv@@Base+0x458>
    1dd4:	add	w0, w0, #0x67
    1dd8:	add	x3, sp, #0xe8
    1ddc:	and	w0, w0, #0xff
    1de0:	strb	w0, [sp, #232]
    1de4:	strb	wzr, [sp, #233]
    1de8:	b	d40 <gconv@@Base+0x458>
    1dec:	adrp	x0, 1000 <gconv@@Base+0x718>
    1df0:	add	x0, x0, #0xe30
    1df4:	b	1c98 <gconv@@Base+0x13b0>
    1df8:	adrp	x0, 1000 <gconv@@Base+0x718>
    1dfc:	add	x0, x0, #0xe38
    1e00:	b	1c98 <gconv@@Base+0x13b0>
    1e04:	adrp	x0, 1000 <gconv@@Base+0x718>
    1e08:	add	x0, x0, #0xe40
    1e0c:	b	1c98 <gconv@@Base+0x13b0>

Disassembly of section .fini:

0000000000001e10 <.fini>:
    1e10:	stp	x29, x30, [sp, #-16]!
    1e14:	mov	x29, sp
    1e18:	ldp	x29, x30, [sp], #16
    1e1c:	ret
