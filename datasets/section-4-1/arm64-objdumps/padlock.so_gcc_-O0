
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//padlock.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000480 <.init>:
 480:	stp	x29, x30, [sp, #-16]!
 484:	mov	x29, sp
 488:	bl	4e0 <__cxa_finalize@plt+0x10>
 48c:	ldp	x29, x30, [sp], #16
 490:	ret

Disassembly of section .plt:

00000000000004a0 <__gmon_start__@plt-0x20>:
 4a0:	stp	x16, x30, [sp, #-16]!
 4a4:	adrp	x16, 10000 <v_check@@Base+0xf974>
 4a8:	ldr	x17, [x16, #4088]
 4ac:	add	x16, x16, #0xff8
 4b0:	br	x17
 4b4:	nop
 4b8:	nop
 4bc:	nop

00000000000004c0 <__gmon_start__@plt>:
 4c0:	adrp	x16, 11000 <__gmon_start__>
 4c4:	ldr	x17, [x16]
 4c8:	add	x16, x16, #0x0
 4cc:	br	x17

00000000000004d0 <__cxa_finalize@plt>:
 4d0:	adrp	x16, 11000 <__gmon_start__>
 4d4:	ldr	x17, [x16, #8]
 4d8:	add	x16, x16, #0x8
 4dc:	br	x17

Disassembly of section .text:

00000000000004e0 <bind_engine@@Base-0x190>:
 4e0:	adrp	x0, 10000 <v_check@@Base+0xf974>
 4e4:	ldr	x0, [x0, #4040]
 4e8:	cbz	x0, 4f0 <__cxa_finalize@plt+0x20>
 4ec:	b	4c0 <__gmon_start__@plt>
 4f0:	ret
 4f4:	stp	x29, x30, [sp, #-32]!
 4f8:	mov	x29, sp
 4fc:	adrp	x0, 11000 <v_check@@Base+0x10974>
 500:	add	x0, x0, #0x18
 504:	str	x0, [sp, #24]
 508:	ldr	x0, [sp, #24]
 50c:	str	x0, [sp, #24]
 510:	ldr	x1, [sp, #24]
 514:	adrp	x0, 11000 <v_check@@Base+0x10974>
 518:	add	x0, x0, #0x18
 51c:	cmp	x1, x0
 520:	b.eq	558 <__cxa_finalize@plt+0x88>  // b.none
 524:	adrp	x0, 10000 <v_check@@Base+0xf974>
 528:	ldr	x0, [x0, #4056]
 52c:	str	x0, [sp, #16]
 530:	ldr	x0, [sp, #16]
 534:	str	x0, [sp, #16]
 538:	ldr	x0, [sp, #16]
 53c:	cmp	x0, #0x0
 540:	b.eq	55c <__cxa_finalize@plt+0x8c>  // b.none
 544:	ldr	x1, [sp, #16]
 548:	adrp	x0, 11000 <v_check@@Base+0x10974>
 54c:	add	x0, x0, #0x18
 550:	blr	x1
 554:	b	55c <__cxa_finalize@plt+0x8c>
 558:	nop
 55c:	ldp	x29, x30, [sp], #32
 560:	ret
 564:	stp	x29, x30, [sp, #-48]!
 568:	mov	x29, sp
 56c:	adrp	x0, 11000 <v_check@@Base+0x10974>
 570:	add	x0, x0, #0x18
 574:	str	x0, [sp, #40]
 578:	ldr	x0, [sp, #40]
 57c:	str	x0, [sp, #40]
 580:	ldr	x1, [sp, #40]
 584:	adrp	x0, 11000 <v_check@@Base+0x10974>
 588:	add	x0, x0, #0x18
 58c:	sub	x0, x1, x0
 590:	asr	x0, x0, #3
 594:	lsr	x1, x0, #63
 598:	add	x0, x1, x0
 59c:	asr	x0, x0, #1
 5a0:	str	x0, [sp, #32]
 5a4:	ldr	x0, [sp, #32]
 5a8:	cmp	x0, #0x0
 5ac:	b.eq	5e8 <__cxa_finalize@plt+0x118>  // b.none
 5b0:	adrp	x0, 10000 <v_check@@Base+0xf974>
 5b4:	ldr	x0, [x0, #4064]
 5b8:	str	x0, [sp, #24]
 5bc:	ldr	x0, [sp, #24]
 5c0:	str	x0, [sp, #24]
 5c4:	ldr	x0, [sp, #24]
 5c8:	cmp	x0, #0x0
 5cc:	b.eq	5ec <__cxa_finalize@plt+0x11c>  // b.none
 5d0:	ldr	x2, [sp, #24]
 5d4:	ldr	x1, [sp, #32]
 5d8:	adrp	x0, 11000 <v_check@@Base+0x10974>
 5dc:	add	x0, x0, #0x18
 5e0:	blr	x2
 5e4:	b	5ec <__cxa_finalize@plt+0x11c>
 5e8:	nop
 5ec:	ldp	x29, x30, [sp], #48
 5f0:	ret
 5f4:	stp	x29, x30, [sp, #-16]!
 5f8:	mov	x29, sp
 5fc:	adrp	x0, 11000 <v_check@@Base+0x10974>
 600:	add	x0, x0, #0x18
 604:	ldrb	w0, [x0]
 608:	and	x0, x0, #0xff
 60c:	cmp	x0, #0x0
 610:	b.ne	64c <__cxa_finalize@plt+0x17c>  // b.any
 614:	adrp	x0, 10000 <v_check@@Base+0xf974>
 618:	ldr	x0, [x0, #4048]
 61c:	cmp	x0, #0x0
 620:	b.eq	634 <__cxa_finalize@plt+0x164>  // b.none
 624:	adrp	x0, 11000 <v_check@@Base+0x10974>
 628:	add	x0, x0, #0x10
 62c:	ldr	x0, [x0]
 630:	bl	4d0 <__cxa_finalize@plt>
 634:	bl	4f4 <__cxa_finalize@plt+0x24>
 638:	adrp	x0, 11000 <v_check@@Base+0x10974>
 63c:	add	x0, x0, #0x18
 640:	mov	w1, #0x1                   	// #1
 644:	strb	w1, [x0]
 648:	b	650 <__cxa_finalize@plt+0x180>
 64c:	nop
 650:	ldp	x29, x30, [sp], #16
 654:	ret
 658:	stp	x29, x30, [sp, #-16]!
 65c:	mov	x29, sp
 660:	bl	564 <__cxa_finalize@plt+0x94>
 664:	nop
 668:	ldp	x29, x30, [sp], #16
 66c:	ret

0000000000000670 <bind_engine@@Base>:
 670:	sub	sp, sp, #0x20
 674:	str	x0, [sp, #24]
 678:	str	x1, [sp, #16]
 67c:	str	x2, [sp, #8]
 680:	mov	w0, #0x0                   	// #0
 684:	add	sp, sp, #0x20
 688:	ret

000000000000068c <v_check@@Base>:
 68c:	sub	sp, sp, #0x10
 690:	str	x0, [sp, #8]
 694:	ldr	x1, [sp, #8]
 698:	mov	w0, #0x2ffff               	// #196607
 69c:	cmp	x1, x0
 6a0:	b.ls	6ac <v_check@@Base+0x20>  // b.plast
 6a4:	mov	x0, #0x30000               	// #196608
 6a8:	b	6b0 <v_check@@Base+0x24>
 6ac:	mov	x0, #0x0                   	// #0
 6b0:	add	sp, sp, #0x10
 6b4:	ret

Disassembly of section .fini:

00000000000006b8 <.fini>:
 6b8:	stp	x29, x30, [sp, #-16]!
 6bc:	mov	x29, sp
 6c0:	ldp	x29, x30, [sp], #16
 6c4:	ret
