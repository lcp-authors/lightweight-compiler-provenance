
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//search_fs_uuid.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_tolower>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	cmp	w0, #0x40
  10:	b.le	2c <grub_tolower+0x2c>
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x5a
  1c:	b.gt	2c <grub_tolower+0x2c>
  20:	ldr	w0, [sp, #12]
  24:	add	w0, w0, #0x20
  28:	b	30 <grub_tolower+0x30>
  2c:	ldr	w0, [sp, #12]
  30:	add	sp, sp, #0x10
  34:	ret

0000000000000038 <grub_strcasecmp>:
  38:	stp	x29, x30, [sp, #-48]!
  3c:	mov	x29, sp
  40:	str	x19, [sp, #16]
  44:	str	x0, [sp, #40]
  48:	str	x1, [sp, #32]
  4c:	b	8c <grub_strcasecmp+0x54>
  50:	ldr	x0, [sp, #40]
  54:	ldrb	w0, [x0]
  58:	bl	0 <grub_tolower>
  5c:	mov	w19, w0
  60:	ldr	x0, [sp, #32]
  64:	ldrb	w0, [x0]
  68:	bl	0 <grub_tolower>
  6c:	cmp	w19, w0
  70:	b.ne	b0 <grub_strcasecmp+0x78>  // b.any
  74:	ldr	x0, [sp, #40]
  78:	add	x0, x0, #0x1
  7c:	str	x0, [sp, #40]
  80:	ldr	x0, [sp, #32]
  84:	add	x0, x0, #0x1
  88:	str	x0, [sp, #32]
  8c:	ldr	x0, [sp, #40]
  90:	ldrb	w0, [x0]
  94:	cmp	w0, #0x0
  98:	b.eq	b4 <grub_strcasecmp+0x7c>  // b.none
  9c:	ldr	x0, [sp, #32]
  a0:	ldrb	w0, [x0]
  a4:	cmp	w0, #0x0
  a8:	b.ne	50 <grub_strcasecmp+0x18>  // b.any
  ac:	b	b4 <grub_strcasecmp+0x7c>
  b0:	nop
  b4:	ldr	x0, [sp, #40]
  b8:	ldrb	w0, [x0]
  bc:	bl	0 <grub_tolower>
  c0:	mov	w19, w0
  c4:	ldr	x0, [sp, #32]
  c8:	ldrb	w0, [x0]
  cc:	bl	0 <grub_tolower>
  d0:	sub	w0, w19, w0
  d4:	ldr	x19, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret

00000000000000e0 <grub_register_command>:
  e0:	stp	x29, x30, [sp, #-48]!
  e4:	mov	x29, sp
  e8:	str	x0, [sp, #40]
  ec:	str	x1, [sp, #32]
  f0:	str	x2, [sp, #24]
  f4:	str	x3, [sp, #16]
  f8:	mov	w4, #0x0                   	// #0
  fc:	ldr	x3, [sp, #16]
 100:	ldr	x2, [sp, #24]
 104:	ldr	x1, [sp, #32]
 108:	ldr	x0, [sp, #40]
 10c:	bl	0 <grub_register_command_prio>
 110:	ldp	x29, x30, [sp], #48
 114:	ret

0000000000000118 <iterate_device>:
 118:	stp	x29, x30, [sp, #-80]!
 11c:	mov	x29, sp
 120:	str	x0, [sp, #24]
 124:	str	x1, [sp, #16]
 128:	ldr	x0, [sp, #16]
 12c:	str	x0, [sp, #64]
 130:	str	wzr, [sp, #76]
 134:	ldr	x0, [sp, #64]
 138:	ldr	w0, [x0, #16]
 13c:	cmp	w0, #0x0
 140:	b.eq	198 <iterate_device+0x80>  // b.none
 144:	ldr	x0, [sp, #24]
 148:	ldrb	w0, [x0]
 14c:	cmp	w0, #0x66
 150:	b.ne	198 <iterate_device+0x80>  // b.any
 154:	ldr	x0, [sp, #24]
 158:	add	x0, x0, #0x1
 15c:	ldrb	w0, [x0]
 160:	cmp	w0, #0x64
 164:	b.ne	198 <iterate_device+0x80>  // b.any
 168:	ldr	x0, [sp, #24]
 16c:	add	x0, x0, #0x2
 170:	ldrb	w0, [x0]
 174:	cmp	w0, #0x2f
 178:	b.ls	198 <iterate_device+0x80>  // b.plast
 17c:	ldr	x0, [sp, #24]
 180:	add	x0, x0, #0x2
 184:	ldrb	w0, [x0]
 188:	cmp	w0, #0x39
 18c:	b.hi	198 <iterate_device+0x80>  // b.pmore
 190:	mov	w0, #0x1                   	// #1
 194:	b	3e0 <iterate_device+0x2c8>
 198:	ldr	x0, [sp, #24]
 19c:	bl	0 <grub_device_open>
 1a0:	str	x0, [sp, #56]
 1a4:	ldr	x0, [sp, #56]
 1a8:	cmp	x0, #0x0
 1ac:	b.eq	24c <iterate_device+0x134>  // b.none
 1b0:	ldr	x0, [sp, #56]
 1b4:	bl	0 <grub_fs_probe>
 1b8:	str	x0, [sp, #48]
 1bc:	ldr	x0, [sp, #48]
 1c0:	cmp	x0, #0x0
 1c4:	b.eq	244 <iterate_device+0x12c>  // b.none
 1c8:	ldr	x0, [sp, #48]
 1cc:	ldr	x0, [x0, #64]
 1d0:	cmp	x0, #0x0
 1d4:	b.eq	244 <iterate_device+0x12c>  // b.none
 1d8:	ldr	x0, [sp, #48]
 1dc:	ldr	x2, [x0, #64]
 1e0:	add	x0, sp, #0x20
 1e4:	mov	x1, x0
 1e8:	ldr	x0, [sp, #56]
 1ec:	blr	x2
 1f0:	adrp	x0, 0 <grub_tolower>
 1f4:	add	x0, x0, #0x0
 1f8:	ldr	x0, [x0]
 1fc:	ldr	w0, [x0]
 200:	cmp	w0, #0x0
 204:	b.ne	244 <iterate_device+0x12c>  // b.any
 208:	ldr	x0, [sp, #32]
 20c:	cmp	x0, #0x0
 210:	b.eq	244 <iterate_device+0x12c>  // b.none
 214:	ldr	x2, [sp, #32]
 218:	ldr	x0, [sp, #64]
 21c:	ldr	x0, [x0]
 220:	mov	x1, x0
 224:	mov	x0, x2
 228:	bl	38 <grub_strcasecmp>
 22c:	cmp	w0, #0x0
 230:	b.ne	23c <iterate_device+0x124>  // b.any
 234:	mov	w0, #0x1                   	// #1
 238:	str	w0, [sp, #76]
 23c:	ldr	x0, [sp, #32]
 240:	bl	0 <grub_free>
 244:	ldr	x0, [sp, #56]
 248:	bl	0 <grub_device_close>
 24c:	ldr	x0, [sp, #64]
 250:	ldr	w0, [x0, #40]
 254:	cmp	w0, #0x0
 258:	b.ne	350 <iterate_device+0x238>  // b.any
 25c:	ldr	w0, [sp, #76]
 260:	cmp	w0, #0x0
 264:	b.eq	350 <iterate_device+0x238>  // b.none
 268:	ldr	x0, [sp, #64]
 26c:	ldr	w0, [x0, #36]
 270:	cmp	w0, #0x0
 274:	b.ne	350 <iterate_device+0x238>  // b.any
 278:	mov	x0, #0x18                  	// #24
 27c:	bl	0 <grub_malloc>
 280:	str	x0, [sp, #40]
 284:	ldr	x0, [sp, #40]
 288:	cmp	x0, #0x0
 28c:	b.eq	340 <iterate_device+0x228>  // b.none
 290:	ldr	x0, [sp, #64]
 294:	ldr	x0, [x0]
 298:	bl	0 <grub_strdup>
 29c:	mov	x1, x0
 2a0:	ldr	x0, [sp, #40]
 2a4:	str	x1, [x0, #8]
 2a8:	ldr	x0, [sp, #24]
 2ac:	bl	0 <grub_strdup>
 2b0:	mov	x1, x0
 2b4:	ldr	x0, [sp, #40]
 2b8:	str	x1, [x0, #16]
 2bc:	ldr	x0, [sp, #40]
 2c0:	ldr	x0, [x0, #16]
 2c4:	cmp	x0, #0x0
 2c8:	b.eq	30c <iterate_device+0x1f4>  // b.none
 2cc:	ldr	x0, [sp, #40]
 2d0:	ldr	x0, [x0, #8]
 2d4:	cmp	x0, #0x0
 2d8:	b.eq	30c <iterate_device+0x1f4>  // b.none
 2dc:	adrp	x0, 0 <grub_tolower>
 2e0:	add	x0, x0, #0x0
 2e4:	ldr	x0, [x0]
 2e8:	ldr	x1, [x0]
 2ec:	ldr	x0, [sp, #40]
 2f0:	str	x1, [x0]
 2f4:	adrp	x0, 0 <grub_tolower>
 2f8:	add	x0, x0, #0x0
 2fc:	ldr	x0, [x0]
 300:	ldr	x1, [sp, #40]
 304:	str	x1, [x0]
 308:	b	350 <iterate_device+0x238>
 30c:	ldr	x0, [sp, #40]
 310:	ldr	x0, [x0, #16]
 314:	bl	0 <grub_free>
 318:	ldr	x0, [sp, #40]
 31c:	ldr	x0, [x0, #8]
 320:	bl	0 <grub_free>
 324:	ldr	x0, [sp, #40]
 328:	bl	0 <grub_free>
 32c:	adrp	x0, 0 <grub_tolower>
 330:	add	x0, x0, #0x0
 334:	ldr	x0, [x0]
 338:	str	wzr, [x0]
 33c:	b	350 <iterate_device+0x238>
 340:	adrp	x0, 0 <grub_tolower>
 344:	add	x0, x0, #0x0
 348:	ldr	x0, [x0]
 34c:	str	wzr, [x0]
 350:	ldr	w0, [sp, #76]
 354:	cmp	w0, #0x0
 358:	b.eq	3a8 <iterate_device+0x290>  // b.none
 35c:	ldr	x0, [sp, #64]
 360:	ldr	w0, [x0, #36]
 364:	add	w1, w0, #0x1
 368:	ldr	x0, [sp, #64]
 36c:	str	w1, [x0, #36]
 370:	ldr	x0, [sp, #64]
 374:	ldr	x0, [x0, #8]
 378:	cmp	x0, #0x0
 37c:	b.eq	394 <iterate_device+0x27c>  // b.none
 380:	ldr	x0, [sp, #64]
 384:	ldr	x0, [x0, #8]
 388:	ldr	x1, [sp, #24]
 38c:	bl	0 <grub_env_set>
 390:	b	3a8 <iterate_device+0x290>
 394:	ldr	x1, [sp, #24]
 398:	adrp	x0, 0 <grub_tolower>
 39c:	add	x0, x0, #0x0
 3a0:	ldr	x0, [x0]
 3a4:	bl	0 <grub_printf>
 3a8:	adrp	x0, 0 <grub_tolower>
 3ac:	add	x0, x0, #0x0
 3b0:	ldr	x0, [x0]
 3b4:	str	wzr, [x0]
 3b8:	ldr	w0, [sp, #76]
 3bc:	cmp	w0, #0x0
 3c0:	b.eq	3dc <iterate_device+0x2c4>  // b.none
 3c4:	ldr	x0, [sp, #64]
 3c8:	ldr	x0, [x0, #8]
 3cc:	cmp	x0, #0x0
 3d0:	b.eq	3dc <iterate_device+0x2c4>  // b.none
 3d4:	mov	w0, #0x1                   	// #1
 3d8:	b	3e0 <iterate_device+0x2c8>
 3dc:	mov	w0, #0x0                   	// #0
 3e0:	ldp	x29, x30, [sp], #80
 3e4:	ret
	...

0000000000000400 <part_hook>:
 400:	stp	x29, x30, [sp, #-80]!
 404:	mov	x29, sp
 408:	str	x0, [sp, #40]
 40c:	str	x1, [sp, #32]
 410:	str	x2, [sp, #24]
 414:	ldr	x0, [sp, #24]
 418:	str	x0, [sp, #72]
 41c:	ldr	x0, [sp, #32]
 420:	bl	0 <grub_partition_get_name>
 424:	str	x0, [sp, #64]
 428:	ldr	x0, [sp, #64]
 42c:	cmp	x0, #0x0
 430:	b.ne	43c <part_hook+0x3c>  // b.any
 434:	mov	w0, #0x1                   	// #1
 438:	b	498 <part_hook+0x98>
 43c:	ldr	x0, [sp, #40]
 440:	ldr	x0, [x0]
 444:	ldr	x2, [sp, #64]
 448:	mov	x1, x0
 44c:	adrp	x0, 0 <grub_tolower>
 450:	add	x0, x0, #0x0
 454:	ldr	x0, [x0]
 458:	bl	0 <grub_xasprintf>
 45c:	str	x0, [sp, #56]
 460:	ldr	x0, [sp, #64]
 464:	bl	0 <grub_free>
 468:	ldr	x0, [sp, #56]
 46c:	cmp	x0, #0x0
 470:	b.ne	47c <part_hook+0x7c>  // b.any
 474:	mov	w0, #0x1                   	// #1
 478:	b	498 <part_hook+0x98>
 47c:	ldr	x1, [sp, #72]
 480:	ldr	x0, [sp, #56]
 484:	bl	118 <iterate_device>
 488:	str	w0, [sp, #52]
 48c:	ldr	x0, [sp, #56]
 490:	bl	0 <grub_free>
 494:	ldr	w0, [sp, #52]
 498:	ldp	x29, x30, [sp], #80
 49c:	ret
	...

00000000000004a8 <try>:
 4a8:	stp	x29, x30, [sp, #-96]!
 4ac:	mov	x29, sp
 4b0:	str	x19, [sp, #16]
 4b4:	str	x0, [sp, #40]
 4b8:	adrp	x0, 0 <grub_tolower>
 4bc:	add	x0, x0, #0x0
 4c0:	ldr	x0, [x0]
 4c4:	str	x0, [sp, #80]
 4c8:	ldr	x0, [sp, #80]
 4cc:	ldr	x0, [x0]
 4d0:	str	x0, [sp, #72]
 4d4:	b	510 <try+0x68>
 4d8:	ldr	x0, [sp, #72]
 4dc:	ldr	x2, [x0, #8]
 4e0:	ldr	x0, [sp, #40]
 4e4:	ldr	x0, [x0]
 4e8:	mov	x1, x0
 4ec:	mov	x0, x2
 4f0:	bl	38 <grub_strcasecmp>
 4f4:	cmp	w0, #0x0
 4f8:	b.eq	520 <try+0x78>  // b.none
 4fc:	ldr	x0, [sp, #72]
 500:	str	x0, [sp, #80]
 504:	ldr	x0, [sp, #80]
 508:	ldr	x0, [x0]
 50c:	str	x0, [sp, #72]
 510:	ldr	x0, [sp, #72]
 514:	cmp	x0, #0x0
 518:	b.ne	4d8 <try+0x30>  // b.any
 51c:	b	524 <try+0x7c>
 520:	nop
 524:	ldr	x0, [sp, #72]
 528:	cmp	x0, #0x0
 52c:	b.eq	5a8 <try+0x100>  // b.none
 530:	ldr	x0, [sp, #40]
 534:	mov	w1, #0x1                   	// #1
 538:	str	w1, [x0, #40]
 53c:	ldr	x0, [sp, #72]
 540:	ldr	x0, [x0, #16]
 544:	ldr	x1, [sp, #40]
 548:	bl	118 <iterate_device>
 54c:	cmp	w0, #0x0
 550:	b.eq	560 <try+0xb8>  // b.none
 554:	ldr	x0, [sp, #40]
 558:	str	wzr, [x0, #40]
 55c:	b	7b8 <try+0x310>
 560:	ldr	x0, [sp, #40]
 564:	str	wzr, [x0, #40]
 568:	ldr	x0, [sp, #40]
 56c:	ldr	w0, [x0, #36]
 570:	cmp	w0, #0x0
 574:	b.ne	5a8 <try+0x100>  // b.any
 578:	ldr	x0, [sp, #72]
 57c:	ldr	x1, [x0]
 580:	ldr	x0, [sp, #80]
 584:	str	x1, [x0]
 588:	ldr	x0, [sp, #72]
 58c:	ldr	x0, [x0, #8]
 590:	bl	0 <grub_free>
 594:	ldr	x0, [sp, #72]
 598:	ldr	x0, [x0, #16]
 59c:	bl	0 <grub_free>
 5a0:	ldr	x0, [sp, #72]
 5a4:	bl	0 <grub_free>
 5a8:	str	wzr, [sp, #92]
 5ac:	b	780 <try+0x2d8>
 5b0:	ldr	x0, [sp, #40]
 5b4:	ldr	x1, [x0, #24]
 5b8:	ldr	w0, [sp, #92]
 5bc:	lsl	x0, x0, #3
 5c0:	add	x0, x1, x0
 5c4:	ldr	x0, [x0]
 5c8:	ldrb	w0, [x0]
 5cc:	cmp	w0, #0x0
 5d0:	b.eq	760 <try+0x2b8>  // b.none
 5d4:	ldr	x0, [sp, #40]
 5d8:	ldr	x1, [x0, #24]
 5dc:	ldr	w0, [sp, #92]
 5e0:	lsl	x0, x0, #3
 5e4:	add	x0, x1, x0
 5e8:	ldr	x19, [x0]
 5ec:	ldr	x0, [sp, #40]
 5f0:	ldr	x1, [x0, #24]
 5f4:	ldr	w0, [sp, #92]
 5f8:	lsl	x0, x0, #3
 5fc:	add	x0, x1, x0
 600:	ldr	x0, [x0]
 604:	bl	0 <grub_strlen>
 608:	sub	x0, x0, #0x1
 60c:	add	x0, x19, x0
 610:	str	x0, [sp, #64]
 614:	ldr	x0, [sp, #64]
 618:	ldrb	w0, [x0]
 61c:	cmp	w0, #0x2c
 620:	b.ne	62c <try+0x184>  // b.any
 624:	ldr	x0, [sp, #64]
 628:	strb	wzr, [x0]
 62c:	ldr	x0, [sp, #40]
 630:	ldr	x1, [x0, #24]
 634:	ldr	w0, [sp, #92]
 638:	lsl	x0, x0, #3
 63c:	add	x0, x1, x0
 640:	ldr	x0, [x0]
 644:	ldr	x1, [sp, #40]
 648:	bl	118 <iterate_device>
 64c:	cmp	w0, #0x0
 650:	b.eq	674 <try+0x1cc>  // b.none
 654:	ldr	x0, [sp, #64]
 658:	ldrb	w0, [x0]
 65c:	cmp	w0, #0x0
 660:	b.ne	7ac <try+0x304>  // b.any
 664:	ldr	x0, [sp, #64]
 668:	mov	w1, #0x2c                  	// #44
 66c:	strb	w1, [x0]
 670:	b	7ac <try+0x304>
 674:	ldr	x0, [sp, #64]
 678:	ldrb	w0, [x0]
 67c:	cmp	w0, #0x0
 680:	b.ne	774 <try+0x2cc>  // b.any
 684:	ldr	x0, [sp, #40]
 688:	ldr	x1, [x0, #24]
 68c:	ldr	w0, [sp, #92]
 690:	lsl	x0, x0, #3
 694:	add	x0, x1, x0
 698:	ldr	x0, [x0]
 69c:	bl	0 <grub_device_open>
 6a0:	str	x0, [sp, #56]
 6a4:	ldr	x0, [sp, #56]
 6a8:	cmp	x0, #0x0
 6ac:	b.ne	6d0 <try+0x228>  // b.any
 6b0:	ldr	x0, [sp, #64]
 6b4:	ldrb	w0, [x0]
 6b8:	cmp	w0, #0x0
 6bc:	b.ne	768 <try+0x2c0>  // b.any
 6c0:	ldr	x0, [sp, #64]
 6c4:	mov	w1, #0x2c                  	// #44
 6c8:	strb	w1, [x0]
 6cc:	b	768 <try+0x2c0>
 6d0:	ldr	x0, [sp, #56]
 6d4:	ldr	x0, [x0]
 6d8:	cmp	x0, #0x0
 6dc:	b.ne	708 <try+0x260>  // b.any
 6e0:	ldr	x0, [sp, #56]
 6e4:	bl	0 <grub_device_close>
 6e8:	ldr	x0, [sp, #64]
 6ec:	ldrb	w0, [x0]
 6f0:	cmp	w0, #0x0
 6f4:	b.ne	770 <try+0x2c8>  // b.any
 6f8:	ldr	x0, [sp, #64]
 6fc:	mov	w1, #0x2c                  	// #44
 700:	strb	w1, [x0]
 704:	b	770 <try+0x2c8>
 708:	ldr	x0, [sp, #56]
 70c:	ldr	x3, [x0]
 710:	ldr	x2, [sp, #40]
 714:	adrp	x0, 0 <grub_tolower>
 718:	add	x0, x0, #0x0
 71c:	ldr	x1, [x0]
 720:	mov	x0, x3
 724:	bl	0 <grub_partition_iterate>
 728:	str	w0, [sp, #52]
 72c:	ldr	x0, [sp, #64]
 730:	ldrb	w0, [x0]
 734:	cmp	w0, #0x0
 738:	b.ne	748 <try+0x2a0>  // b.any
 73c:	ldr	x0, [sp, #64]
 740:	mov	w1, #0x2c                  	// #44
 744:	strb	w1, [x0]
 748:	ldr	x0, [sp, #56]
 74c:	bl	0 <grub_device_close>
 750:	ldr	w0, [sp, #52]
 754:	cmp	w0, #0x0
 758:	b.ne	7b4 <try+0x30c>  // b.any
 75c:	b	774 <try+0x2cc>
 760:	nop
 764:	b	774 <try+0x2cc>
 768:	nop
 76c:	b	774 <try+0x2cc>
 770:	nop
 774:	ldr	w0, [sp, #92]
 778:	add	w0, w0, #0x1
 77c:	str	w0, [sp, #92]
 780:	ldr	x0, [sp, #40]
 784:	ldr	w0, [x0, #32]
 788:	ldr	w1, [sp, #92]
 78c:	cmp	w1, w0
 790:	b.cc	5b0 <try+0x108>  // b.lo, b.ul, b.last
 794:	ldr	x1, [sp, #40]
 798:	adrp	x0, 0 <grub_tolower>
 79c:	add	x0, x0, #0x0
 7a0:	ldr	x0, [x0]
 7a4:	bl	0 <grub_device_iterate>
 7a8:	b	7b8 <try+0x310>
 7ac:	nop
 7b0:	b	7b8 <try+0x310>
 7b4:	nop
 7b8:	ldr	x19, [sp, #16]
 7bc:	ldp	x29, x30, [sp], #96
 7c0:	ret
 7c4:	nop
	...

00000000000007e0 <grub_search_fs_uuid>:
 7e0:	stp	x29, x30, [sp, #-112]!
 7e4:	mov	x29, sp
 7e8:	str	x0, [sp, #40]
 7ec:	str	x1, [sp, #32]
 7f0:	str	w2, [sp, #28]
 7f4:	str	x3, [sp, #16]
 7f8:	str	w4, [sp, #24]
 7fc:	ldr	x0, [sp, #40]
 800:	str	x0, [sp, #56]
 804:	ldr	x0, [sp, #32]
 808:	str	x0, [sp, #64]
 80c:	ldr	w0, [sp, #28]
 810:	str	w0, [sp, #72]
 814:	ldr	x0, [sp, #16]
 818:	str	x0, [sp, #80]
 81c:	ldr	w0, [sp, #24]
 820:	str	w0, [sp, #88]
 824:	str	wzr, [sp, #92]
 828:	str	wzr, [sp, #96]
 82c:	ldr	x0, [sp, #32]
 830:	cmp	x0, #0x0
 834:	b.eq	8a8 <grub_search_fs_uuid+0xc8>  // b.none
 838:	adrp	x0, 0 <grub_tolower>
 83c:	add	x0, x0, #0x0
 840:	ldr	x0, [x0]
 844:	ldr	x0, [x0]
 848:	str	x0, [sp, #104]
 84c:	adrp	x0, 0 <grub_tolower>
 850:	add	x0, x0, #0x0
 854:	ldr	x0, [x0]
 858:	str	xzr, [x0]
 85c:	add	x0, sp, #0x38
 860:	bl	4a8 <try>
 864:	adrp	x0, 0 <grub_tolower>
 868:	add	x0, x0, #0x0
 86c:	ldr	x0, [x0]
 870:	ldr	x1, [sp, #104]
 874:	str	x1, [x0]
 878:	adrp	x0, 0 <grub_tolower>
 87c:	add	x0, x0, #0x0
 880:	ldr	x0, [x0]
 884:	ldr	w0, [x0]
 888:	cmp	w0, #0x0
 88c:	b.ne	8b0 <grub_search_fs_uuid+0xd0>  // b.any
 890:	ldr	w0, [sp, #92]
 894:	cmp	w0, #0x0
 898:	b.ne	8b0 <grub_search_fs_uuid+0xd0>  // b.any
 89c:	add	x0, sp, #0x38
 8a0:	bl	4a8 <try>
 8a4:	b	8b0 <grub_search_fs_uuid+0xd0>
 8a8:	add	x0, sp, #0x38
 8ac:	bl	4a8 <try>
 8b0:	adrp	x0, 0 <grub_tolower>
 8b4:	add	x0, x0, #0x0
 8b8:	ldr	x0, [x0]
 8bc:	ldr	w0, [x0]
 8c0:	cmp	w0, #0x0
 8c4:	b.ne	8ec <grub_search_fs_uuid+0x10c>  // b.any
 8c8:	ldr	w0, [sp, #92]
 8cc:	cmp	w0, #0x0
 8d0:	b.ne	8ec <grub_search_fs_uuid+0x10c>  // b.any
 8d4:	ldr	x2, [sp, #40]
 8d8:	adrp	x0, 0 <grub_tolower>
 8dc:	add	x0, x0, #0x0
 8e0:	ldr	x1, [x0]
 8e4:	mov	w0, #0x5                   	// #5
 8e8:	bl	0 <grub_error>
 8ec:	nop
 8f0:	ldp	x29, x30, [sp], #112
 8f4:	ret
	...

0000000000000910 <grub_cmd_do_search>:
 910:	stp	x29, x30, [sp, #-48]!
 914:	mov	x29, sp
 918:	str	x0, [sp, #40]
 91c:	str	w1, [sp, #36]
 920:	str	x2, [sp, #24]
 924:	ldr	w0, [sp, #36]
 928:	cmp	w0, #0x0
 92c:	b.ne	948 <grub_cmd_do_search+0x38>  // b.any
 930:	adrp	x0, 0 <grub_tolower>
 934:	add	x0, x0, #0x0
 938:	ldr	x1, [x0]
 93c:	mov	w0, #0x12                  	// #18
 940:	bl	0 <grub_error>
 944:	b	9b4 <grub_cmd_do_search+0xa4>
 948:	ldr	x0, [sp, #24]
 94c:	ldr	x5, [x0]
 950:	ldr	w0, [sp, #36]
 954:	cmp	w0, #0x1
 958:	b.eq	968 <grub_cmd_do_search+0x58>  // b.none
 95c:	ldr	x0, [sp, #24]
 960:	ldr	x0, [x0, #8]
 964:	b	96c <grub_cmd_do_search+0x5c>
 968:	mov	x0, #0x0                   	// #0
 96c:	ldr	x1, [sp, #24]
 970:	add	x6, x1, #0x10
 974:	ldr	w3, [sp, #36]
 978:	ldr	w2, [sp, #36]
 97c:	mov	w1, #0x2                   	// #2
 980:	cmp	w3, #0x2
 984:	csel	w1, w2, w1, ge  // ge = tcont
 988:	sub	w1, w1, #0x2
 98c:	mov	w4, w1
 990:	mov	x3, x6
 994:	mov	w2, #0x0                   	// #0
 998:	mov	x1, x0
 99c:	mov	x0, x5
 9a0:	bl	7e0 <grub_search_fs_uuid>
 9a4:	adrp	x0, 0 <grub_tolower>
 9a8:	add	x0, x0, #0x0
 9ac:	ldr	x0, [x0]
 9b0:	ldr	w0, [x0]
 9b4:	ldp	x29, x30, [sp], #48
 9b8:	ret
 9bc:	nop
	...

00000000000009d0 <grub_mod_init>:
 9d0:	stp	x29, x30, [sp, #-32]!
 9d4:	mov	x29, sp
 9d8:	str	x0, [sp, #24]
 9dc:	adrp	x0, 0 <grub_tolower>
 9e0:	add	x0, x0, #0x0
 9e4:	ldr	x3, [x0]
 9e8:	adrp	x0, 0 <grub_tolower>
 9ec:	add	x0, x0, #0x0
 9f0:	ldr	x2, [x0]
 9f4:	adrp	x0, 0 <grub_tolower>
 9f8:	add	x0, x0, #0x0
 9fc:	ldr	x1, [x0]
 a00:	adrp	x0, 0 <grub_tolower>
 a04:	add	x0, x0, #0x0
 a08:	ldr	x0, [x0]
 a0c:	bl	e0 <grub_register_command>
 a10:	mov	x1, x0
 a14:	adrp	x0, 0 <grub_tolower>
 a18:	add	x0, x0, #0x0
 a1c:	ldr	x0, [x0]
 a20:	str	x1, [x0]
 a24:	nop
 a28:	ldp	x29, x30, [sp], #32
 a2c:	ret
	...

0000000000000a58 <grub_mod_fini>:
 a58:	stp	x29, x30, [sp, #-16]!
 a5c:	mov	x29, sp
 a60:	adrp	x0, 0 <grub_tolower>
 a64:	add	x0, x0, #0x0
 a68:	ldr	x0, [x0]
 a6c:	ldr	x0, [x0]
 a70:	bl	0 <grub_unregister_command>
 a74:	nop
 a78:	ldp	x29, x30, [sp], #16
 a7c:	ret
	...
