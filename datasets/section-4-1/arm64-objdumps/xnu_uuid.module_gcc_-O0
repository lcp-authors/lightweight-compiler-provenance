
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//xnu_uuid.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes64>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	rev	x0, x0
  10:	add	sp, sp, #0x10
  14:	ret

0000000000000018 <grub_toupper>:
  18:	sub	sp, sp, #0x10
  1c:	str	w0, [sp, #12]
  20:	ldr	w0, [sp, #12]
  24:	cmp	w0, #0x60
  28:	b.le	44 <grub_toupper+0x2c>
  2c:	ldr	w0, [sp, #12]
  30:	cmp	w0, #0x7a
  34:	b.gt	44 <grub_toupper+0x2c>
  38:	ldr	w0, [sp, #12]
  3c:	sub	w0, w0, #0x20
  40:	b	48 <grub_toupper+0x30>
  44:	ldr	w0, [sp, #12]
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <grub_register_command>:
  50:	stp	x29, x30, [sp, #-48]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	x1, [sp, #32]
  60:	str	x2, [sp, #24]
  64:	str	x3, [sp, #16]
  68:	mov	w4, #0x0                   	// #0
  6c:	ldr	x3, [sp, #16]
  70:	ldr	x2, [sp, #24]
  74:	ldr	x1, [sp, #32]
  78:	ldr	x0, [sp, #40]
  7c:	bl	0 <grub_register_command_prio>
  80:	ldp	x29, x30, [sp], #48
  84:	ret

0000000000000088 <grub_cmd_xnu_uuid>:
  88:	sub	sp, sp, #0xe0
  8c:	stp	x29, x30, [sp, #96]
  90:	add	x29, sp, #0x60
  94:	str	x0, [sp, #136]
  98:	str	w1, [sp, #132]
  9c:	str	x2, [sp, #120]
  a0:	str	wzr, [sp, #212]
  a4:	ldr	w0, [sp, #132]
  a8:	cmp	w0, #0x0
  ac:	b.gt	c8 <grub_cmd_xnu_uuid+0x40>
  b0:	adrp	x0, 0 <grub_swap_bytes64>
  b4:	add	x0, x0, #0x0
  b8:	ldr	x1, [x0]
  bc:	mov	w0, #0x12                  	// #18
  c0:	bl	0 <grub_error>
  c4:	b	404 <grub_cmd_xnu_uuid+0x37c>
  c8:	ldr	w0, [sp, #132]
  cc:	cmp	w0, #0x1
  d0:	b.le	118 <grub_cmd_xnu_uuid+0x90>
  d4:	ldr	x0, [sp, #120]
  d8:	ldr	x2, [x0]
  dc:	adrp	x0, 0 <grub_swap_bytes64>
  e0:	add	x0, x0, #0x0
  e4:	ldr	x1, [x0]
  e8:	mov	x0, x2
  ec:	bl	0 <grub_strcmp>
  f0:	cmp	w0, #0x0
  f4:	b.ne	118 <grub_cmd_xnu_uuid+0x90>  // b.any
  f8:	mov	w0, #0x1                   	// #1
  fc:	str	w0, [sp, #212]
 100:	ldr	w0, [sp, #132]
 104:	sub	w0, w0, #0x1
 108:	str	w0, [sp, #132]
 10c:	ldr	x0, [sp, #120]
 110:	add	x0, x0, #0x8
 114:	str	x0, [sp, #120]
 118:	ldr	x0, [sp, #120]
 11c:	ldr	x0, [x0]
 120:	mov	w2, #0x10                  	// #16
 124:	mov	x1, #0x0                   	// #0
 128:	bl	0 <grub_strtoull>
 12c:	bl	0 <grub_swap_bytes64>
 130:	str	x0, [sp, #184]
 134:	adrp	x0, 0 <grub_swap_bytes64>
 138:	add	x0, x0, #0x0
 13c:	ldr	x0, [x0]
 140:	ldr	x0, [x0, #72]
 144:	bl	0 <grub_zalloc>
 148:	str	x0, [sp, #200]
 14c:	ldr	x0, [sp, #200]
 150:	cmp	x0, #0x0
 154:	b.ne	16c <grub_cmd_xnu_uuid+0xe4>  // b.any
 158:	adrp	x0, 0 <grub_swap_bytes64>
 15c:	add	x0, x0, #0x0
 160:	ldr	x0, [x0]
 164:	ldr	w0, [x0]
 168:	b	404 <grub_cmd_xnu_uuid+0x37c>
 16c:	adrp	x0, 0 <grub_swap_bytes64>
 170:	add	x0, x0, #0x0
 174:	ldr	x0, [x0]
 178:	ldr	x1, [x0, #40]
 17c:	ldr	x0, [sp, #200]
 180:	blr	x1
 184:	adrp	x0, 0 <grub_swap_bytes64>
 188:	add	x0, x0, #0x0
 18c:	ldr	x0, [x0]
 190:	ldr	x3, [x0, #48]
 194:	mov	x2, #0x10                  	// #16
 198:	adrp	x0, 0 <grub_swap_bytes64>
 19c:	add	x0, x0, #0x0
 1a0:	ldr	x1, [x0]
 1a4:	ldr	x0, [sp, #200]
 1a8:	blr	x3
 1ac:	adrp	x0, 0 <grub_swap_bytes64>
 1b0:	add	x0, x0, #0x0
 1b4:	ldr	x0, [x0]
 1b8:	ldr	x3, [x0, #48]
 1bc:	add	x0, sp, #0xb8
 1c0:	mov	x2, #0x8                   	// #8
 1c4:	mov	x1, x0
 1c8:	ldr	x0, [sp, #200]
 1cc:	blr	x3
 1d0:	adrp	x0, 0 <grub_swap_bytes64>
 1d4:	add	x0, x0, #0x0
 1d8:	ldr	x0, [x0]
 1dc:	ldr	x1, [x0, #56]
 1e0:	ldr	x0, [sp, #200]
 1e4:	blr	x1
 1e8:	adrp	x0, 0 <grub_swap_bytes64>
 1ec:	add	x0, x0, #0x0
 1f0:	ldr	x0, [x0]
 1f4:	ldr	x1, [x0, #64]
 1f8:	ldr	x0, [sp, #200]
 1fc:	blr	x1
 200:	str	x0, [sp, #192]
 204:	ldr	x0, [sp, #192]
 208:	ldrb	w0, [x0]
 20c:	mov	w12, w0
 210:	ldr	x0, [sp, #192]
 214:	add	x0, x0, #0x1
 218:	ldrb	w0, [x0]
 21c:	mov	w13, w0
 220:	ldr	x0, [sp, #192]
 224:	add	x0, x0, #0x2
 228:	ldrb	w0, [x0]
 22c:	mov	w14, w0
 230:	ldr	x0, [sp, #192]
 234:	add	x0, x0, #0x3
 238:	ldrb	w0, [x0]
 23c:	mov	w15, w0
 240:	ldr	x0, [sp, #192]
 244:	add	x0, x0, #0x4
 248:	ldrb	w0, [x0]
 24c:	mov	w16, w0
 250:	ldr	x0, [sp, #192]
 254:	add	x0, x0, #0x5
 258:	ldrb	w0, [x0]
 25c:	mov	w1, w0
 260:	ldr	x0, [sp, #192]
 264:	add	x0, x0, #0x6
 268:	ldrb	w0, [x0]
 26c:	and	w0, w0, #0xf
 270:	orr	w0, w0, #0x30
 274:	mov	w2, w0
 278:	ldr	x0, [sp, #192]
 27c:	add	x0, x0, #0x7
 280:	ldrb	w0, [x0]
 284:	mov	w3, w0
 288:	ldr	x0, [sp, #192]
 28c:	add	x0, x0, #0x8
 290:	ldrb	w0, [x0]
 294:	and	w0, w0, #0x3f
 298:	orr	w0, w0, #0x80
 29c:	mov	w4, w0
 2a0:	ldr	x0, [sp, #192]
 2a4:	add	x0, x0, #0x9
 2a8:	ldrb	w0, [x0]
 2ac:	mov	w5, w0
 2b0:	ldr	x0, [sp, #192]
 2b4:	add	x0, x0, #0xa
 2b8:	ldrb	w0, [x0]
 2bc:	mov	w6, w0
 2c0:	ldr	x0, [sp, #192]
 2c4:	add	x0, x0, #0xb
 2c8:	ldrb	w0, [x0]
 2cc:	mov	w7, w0
 2d0:	ldr	x0, [sp, #192]
 2d4:	add	x0, x0, #0xc
 2d8:	ldrb	w0, [x0]
 2dc:	mov	w9, w0
 2e0:	ldr	x0, [sp, #192]
 2e4:	add	x0, x0, #0xd
 2e8:	ldrb	w0, [x0]
 2ec:	mov	w10, w0
 2f0:	ldr	x0, [sp, #192]
 2f4:	add	x0, x0, #0xe
 2f8:	ldrb	w0, [x0]
 2fc:	mov	w11, w0
 300:	ldr	x0, [sp, #192]
 304:	add	x0, x0, #0xf
 308:	ldrb	w0, [x0]
 30c:	add	x8, sp, #0x90
 310:	str	w0, [sp, #80]
 314:	str	w11, [sp, #72]
 318:	str	w10, [sp, #64]
 31c:	str	w9, [sp, #56]
 320:	str	w7, [sp, #48]
 324:	str	w6, [sp, #40]
 328:	str	w5, [sp, #32]
 32c:	str	w4, [sp, #24]
 330:	str	w3, [sp, #16]
 334:	str	w2, [sp, #8]
 338:	str	w1, [sp]
 33c:	mov	w7, w16
 340:	mov	w6, w15
 344:	mov	w5, w14
 348:	mov	w4, w13
 34c:	mov	w3, w12
 350:	adrp	x0, 0 <grub_swap_bytes64>
 354:	add	x0, x0, #0x0
 358:	ldr	x2, [x0]
 35c:	mov	x1, #0x25                  	// #37
 360:	mov	x0, x8
 364:	bl	0 <grub_snprintf>
 368:	ldr	w0, [sp, #212]
 36c:	cmp	w0, #0x0
 370:	b.ne	3b4 <grub_cmd_xnu_uuid+0x32c>  // b.any
 374:	add	x0, sp, #0x90
 378:	str	x0, [sp, #216]
 37c:	b	3a4 <grub_cmd_xnu_uuid+0x31c>
 380:	ldr	x0, [sp, #216]
 384:	ldrb	w0, [x0]
 388:	bl	18 <grub_toupper>
 38c:	and	w1, w0, #0xff
 390:	ldr	x0, [sp, #216]
 394:	strb	w1, [x0]
 398:	ldr	x0, [sp, #216]
 39c:	add	x0, x0, #0x1
 3a0:	str	x0, [sp, #216]
 3a4:	ldr	x0, [sp, #216]
 3a8:	ldrb	w0, [x0]
 3ac:	cmp	w0, #0x0
 3b0:	b.ne	380 <grub_cmd_xnu_uuid+0x2f8>  // b.any
 3b4:	ldr	w0, [sp, #132]
 3b8:	cmp	w0, #0x1
 3bc:	b.ne	3d8 <grub_cmd_xnu_uuid+0x350>  // b.any
 3c0:	add	x0, sp, #0x90
 3c4:	mov	x1, x0
 3c8:	adrp	x0, 0 <grub_swap_bytes64>
 3cc:	add	x0, x0, #0x0
 3d0:	ldr	x0, [x0]
 3d4:	bl	0 <grub_printf>
 3d8:	ldr	w0, [sp, #132]
 3dc:	cmp	w0, #0x1
 3e0:	b.le	3f8 <grub_cmd_xnu_uuid+0x370>
 3e4:	ldr	x0, [sp, #120]
 3e8:	add	x0, x0, #0x8
 3ec:	ldr	x0, [x0]
 3f0:	add	x1, sp, #0x90
 3f4:	bl	0 <grub_env_set>
 3f8:	ldr	x0, [sp, #200]
 3fc:	bl	0 <grub_free>
 400:	mov	w0, #0x0                   	// #0
 404:	ldp	x29, x30, [sp, #96]
 408:	add	sp, sp, #0xe0
 40c:	ret
	...

0000000000000448 <grub_mod_init>:
 448:	stp	x29, x30, [sp, #-32]!
 44c:	mov	x29, sp
 450:	str	x0, [sp, #24]
 454:	adrp	x0, 0 <grub_swap_bytes64>
 458:	add	x0, x0, #0x0
 45c:	ldr	x3, [x0]
 460:	adrp	x0, 0 <grub_swap_bytes64>
 464:	add	x0, x0, #0x0
 468:	ldr	x2, [x0]
 46c:	adrp	x0, 0 <grub_swap_bytes64>
 470:	add	x0, x0, #0x0
 474:	ldr	x1, [x0]
 478:	adrp	x0, 0 <grub_swap_bytes64>
 47c:	add	x0, x0, #0x0
 480:	ldr	x0, [x0]
 484:	bl	50 <grub_register_command>
 488:	mov	x1, x0
 48c:	adrp	x0, 0 <grub_swap_bytes64>
 490:	add	x0, x0, #0x0
 494:	ldr	x0, [x0]
 498:	str	x1, [x0]
 49c:	nop
 4a0:	ldp	x29, x30, [sp], #32
 4a4:	ret
	...

00000000000004d0 <grub_mod_fini>:
 4d0:	stp	x29, x30, [sp, #-16]!
 4d4:	mov	x29, sp
 4d8:	adrp	x0, 0 <grub_swap_bytes64>
 4dc:	add	x0, x0, #0x0
 4e0:	ldr	x0, [x0]
 4e4:	ldr	x0, [x0]
 4e8:	bl	0 <grub_unregister_command>
 4ec:	nop
 4f0:	ldp	x29, x30, [sp], #16
 4f4:	ret
	...
